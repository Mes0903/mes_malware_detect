
7e82ef85118dc6ad1b88384a807a8bf473a681d4de6df28c3a69679f9301332d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	adc    dh,BYTE PTR [esi]
  4010fc:	pop    ds
  4010fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010fe:	ror    BYTE PTR [edi-0x52],1
  401101:	les    ebx,FWORD PTR [eax-0x4a]
  401104:	outs   dx,BYTE PTR ds:[esi]
  401105:	xor    DWORD PTR [ecx],0x8ef29287
  40110b:	sahf   
  40110c:	adc    ebx,esi
  40110e:	call   0xa433:0xb5bd76c8
  401115:	ret    0x904e
  401118:	aaa    
  401119:	adc    al,0x47
  40111b:	cmp    edx,DWORD PTR [eax+0x3]
  40111e:	sbb    ah,cl
  401120:	xor    ecx,DWORD PTR [ecx]
  401122:	adc    BYTE PTR [esi],bh
  401124:	(bad)  
  401126:	mov    esi,ebp
  401128:	div    BYTE PTR [esi-0x7]
  40112b:	test   DWORD PTR [esi],esp
  40112d:	sbb    dl,BYTE PTR [edx+0x39f7b327]
  401133:	(bad)  
  401134:	cmp    BYTE PTR [ecx-0x7f989c37],cl
  40113a:	jge    0x40114b
  40113c:	jns    0x401165
  40113e:	mov    al,ds:0x906bd3a2
  401143:	adc    eax,0x56edc176
  401148:	dec    edx
  401149:	sbb    bh,al
  40114b:	mov    cl,0xef
  40114d:	pop    ss
  40114e:	jl     0x401108
  401150:	adc    al,BYTE PTR [ecx-0x4]
  401153:	mov    eax,DWORD PTR [ebx]
  401155:	inc    ecx
  401156:	in     al,0x6d
  401158:	add    BYTE PTR [esi],dh
  40115a:	stos   BYTE PTR es:[edi],al
  40115b:	jmp    DWORD PTR [edi+ebx*1]
  40115e:	test   eax,0x52305ded
  401163:	call   0xdbd4c639
  401168:	jl     0x40115d
  40116a:	mov    WORD PTR [edx-0x4d906b66],es
  401170:	pop    edx
  401171:	xchg   edx,eax
  401172:	push   ss
  401173:	imul   esp,DWORD PTR [edi+ecx*8-0xf94b67d],0x96f6b060
  40117e:	test   eax,0x2a016b08
  401184:	fcom   QWORD PTR [ecx+0x1280d4e2]
  40118a:	jo     0x401151
  40118c:	fcom   DWORD PTR [eax]
  40118e:	popf   
  40118f:	dec    edx
  401190:	daa    
  401191:	inc    edx
  401192:	xchg   edx,eax
  401193:	stos   DWORD PTR es:[edi],eax
  401194:	test   BYTE PTR [esi],ah
  401196:	xchg   ebp,eax
  401197:	ret    0x4b7c
  40119a:	push   esi
  40119b:	pop    ss
  40119c:	sar    DWORD PTR [ecx-0x4cf6327c],1
  4011a2:	std    
  4011a3:	aam    0xf0
  4011a5:	inc    edi
  4011a6:	mov    bl,0x2a
  4011a8:	jl     0x4011c2
  4011aa:	je     0x4011e5
  4011ac:	lock lds esi,FWORD PTR [ebx]
  4011af:	repnz repnz inc BYTE PTR [ecx+0x1741b553]
  4011b7:	ss cwde 
  4011b9:	xchg   esp,eax
  4011ba:	inc    ecx
  4011bb:	jbe    0x4011c1
  4011bd:	xchg   esp,eax
  4011be:	icebp  
  4011bf:	push   ds
  4011c0:	ins    BYTE PTR es:[edi],dx
  4011c1:	xchg   edx,eax
  4011c2:	ins    DWORD PTR es:[edi],dx
  4011c3:	int3   
  4011c4:	scas   al,BYTE PTR es:[edi]
  4011c5:	cld    
  4011c6:	or     eax,0xcd24e8fc
  4011cb:	test   eax,0x67482478
  4011d0:	inc    eax
  4011d1:	retf   
  4011d2:	retf   0x2af2
  4011d5:	pop    ebx
  4011d6:	adc    eax,0x1381f536
  4011db:	xchg   edx,eax
  4011dc:	push   0x20
  4011de:	inc    edx
  4011df:	out    0x22,al
  4011e1:	sub    al,0xe4
  4011e3:	ins    DWORD PTR es:[edi],dx
  4011e4:	test   WORD PTR [edi-0x41b248e4],0x64ab
  4011ed:	rcl    DWORD PTR [esi],0xb
  4011f0:	sub    bl,ah
  4011f2:	lahf   
  4011f3:	mov    bh,0xd4
  4011f5:	sub    eax,0x2bb8dfdc
  4011fa:	sub    dh,BYTE PTR [eax-0x1e]
  4011fd:	in     al,dx
  4011fe:	jns    0x4011ac
  401200:	int    0x52
  401202:	es ret 
  401204:	mov    ss,edi
  401206:	xchg   BYTE PTR [ebp-0x46fc5dd3],dh
  40120c:	arpl   WORD PTR ds:[ecx+0x15b6f4f3],di
  401213:	(bad)  
  401214:	cs in  eax,dx
  401216:	cmp    DWORD PTR [edi+0x39],ecx
  401219:	sub    ecx,DWORD PTR [eax+0x5c]
  40121c:	fimul  DWORD PTR [esi+0xd]
  40121f:	loop   0x401261
  401221:	dec    ebx
  401222:	mov    al,0x7
  401224:	sub    ebp,eax
  401226:	push   cs
  401227:	mov    cl,BYTE PTR [ebx-0x1d]
  40122a:	mov    esp,0xebf0d2a2
  40122f:	ret    
  401230:	mov    al,ds:0xecbd9b95
  401235:	and    BYTE PTR ds:0x8599d582,cl
  40123b:	push   cs
  40123c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40123d:	rcl    BYTE PTR [ebp-0x6042262a],0xa1
  401244:	pop    eax
  401245:	push   0x1b310b82
  40124a:	(bad)  
  40124b:	pop    ecx
  40124c:	cwde   
  40124d:	push   cs
  40124e:	inc    ebp
  40124f:	popa   
  401250:	mov    ds:0x82dc4286,al
  401255:	jecxz  0x4012d2
  401257:	lods   eax,DWORD PTR ds:[esi]
  401258:	inc    edx
  401259:	adc    edi,esp
  40125b:	pop    ebx
  40125c:	push   ss
  40125d:	mov    ecx,0x12a6c467
  401262:	rcr    BYTE PTR [eax+0x59fab1bb],cl
  401268:	cmp    ch,BYTE PTR [edi-0x5d]
  40126b:	imul   esp,DWORD PTR [edx-0xfe781d8],0x364b46b2
  401275:	push   ecx
  401276:	jae    0x4012b4
  401278:	sar    BYTE PTR [ebx],cl
  40127a:	push   cs
  40127b:	fisubr WORD PTR [esi]
  40127d:	clc    
  40127e:	xchg   ebp,eax
  40127f:	dec    ecx
  401280:	test   BYTE PTR [ebx+0x64],al
  401283:	adc    ebx,esi
  401285:	retf   0x3e96
  401288:	popf   
  401289:	out    0xb2,al
  40128b:	push   edx
  40128c:	pop    ss
  40128d:	mov    ch,0xca
  40128f:	cdq    
  401290:	lods   eax,DWORD PTR ds:[esi]
  401291:	sub    ebp,eax
  401293:	out    0x34,al
  401295:	sbb    eax,DWORD PTR [ecx+0x3]
  401298:	rcr    ah,1
  40129a:	jmp    0x40126b
  40129c:	and    edi,DWORD PTR [edi+0x386c4545]
  4012a2:	lods   eax,DWORD PTR ds:[esi]
  4012a3:	push   ecx
  4012a4:	ja     0x40127a
  4012a6:	or     al,0xc5
  4012a8:	fst    QWORD PTR cs:[edi]
  4012ab:	pcmpeqb mm7,QWORD PTR [edx]
  4012ae:	push   ebp
  4012af:	jnp    0x401241
  4012b1:	inc    edx
  4012b2:	rcl    DWORD PTR [edx],cl
  4012b4:	iret   
  4012b5:	das    
  4012b6:	(bad)  
  4012b7:	rol    al,1
  4012b9:	mov    BYTE PTR [edi+0xbd3cd3b],0x66
  4012c0:	iret   
  4012c1:	scas   eax,DWORD PTR es:[edi]
  4012c2:	jle    0x4012aa
  4012c4:	cmp    DWORD PTR [ebx+0x4f58bddf],esp
  4012ca:	xchg   edx,eax
  4012cb:	(bad)  ds:[eax-0x1407e71d]
  4012d2:	and    eax,0xbe3eea66
  4012d7:	cmp    DWORD PTR [edx],0x55
  4012da:	pop    eax
  4012db:	aam    0xd6
  4012dd:	ja     0x4012a6
  4012df:	sub    bl,BYTE PTR [esi+0x3f]
  4012e2:	enter  0x9987,0x17
  4012e6:	sub    DWORD PTR [eax-0x18],ecx
  4012e9:	pop    eax
  4012ea:	repz scas eax,DWORD PTR es:[edi]
  4012ec:	shr    WORD PTR [ecx+0x24d536b],0xbd
  4012f4:	push   ss
  4012f5:	cs faddp st(0),st
  4012f8:	test   eax,0xa03dd3a5
  4012fd:	push   esi
  4012fe:	(bad)  
  4012ff:	aad    0x25
  401301:	inc    ebx
  401302:	push   cs
  401303:	lock xchg BYTE PTR [edx],dl
  401306:	int    0x65
  401308:	sub    BYTE PTR [edx],0x53
  40130b:	dec    ebx
  40130c:	lods   al,BYTE PTR ds:[esi]
  40130d:	aam    0x7c
  40130f:	lock sub bh,0xff
  401313:	je     0x40133d
  401315:	(bad)  
  401316:	imul   eax,ebx,0x32
  401319:	arpl   si,dx
  40131b:	jg     0x401347
  40131d:	mov    bh,0xce
  40131f:	mov    cl,0xff
  401321:	push   0xffffff87
  401323:	out    0x2,al
  401325:	mov    al,ds:0xeb8a5559
  40132a:	push   ss
  40132b:	mov    edx,0x255a47a4
  401330:	ror    DWORD PTR [ebx+0x59394ae5],1
  401336:	push   edx
  401337:	mov    edx,0xcf7856be
  40133c:	call   0xc479:0x947aab85
  401343:	cmp    BYTE PTR [ebp-0x40],dh
  401346:	enter  0x4d52,0xa5
  40134a:	dec    ecx
  40134b:	jl     0x4012fe
  40134d:	stc    
  40134e:	fnstsw WORD PTR [eax]
  401350:	fstp   QWORD PTR [edx-0x58c0eb2d]
  401356:	ins    DWORD PTR es:[edi],dx
  401357:	jne    0x40139b
  401359:	imul   edx,esp,0xffbdda15
  40135f:	pop    edi
  401360:	inc    ebp
  401361:	sub    al,0xad
  401363:	dec    ebp
  401364:	sbb    DWORD PTR [eax-0x58],eax
  401367:	and    dl,ch
  401369:	push   esi
  40136a:	inc    sp
  40136c:	jmp    0xecea5994
  401371:	jo     0x4013df
  401373:	mov    cl,0x3f
  401375:	mov    esp,0xe704e11e
  40137a:	aaa    
  40137b:	mov    WORD PTR [eax],es
  40137d:	add    ecx,edx
  40137f:	call   0x7dcf039
  401384:	rcr    BYTE PTR [ebx+0xd],1
  401387:	icebp  
  401388:	daa    
  401389:	out    dx,eax
  40138a:	shr    DWORD PTR [ecx-0xd71acf5],0x2a
  401391:	and    eax,0x46451a23
  401396:	add    dl,BYTE PTR ds:0xdf1f9241
  40139d:	rol    DWORD PTR [edx],cl
  40139f:	sbb    ah,ch
  4013a1:	lods   eax,DWORD PTR ds:[esi]
  4013a2:	rcl    BYTE PTR [edx-0x38],cl
  4013a5:	cmp    al,0x94
  4013a7:	aas    
  4013a8:	sahf   
  4013a9:	lods   al,BYTE PTR ds:[esi]
  4013aa:	aas    
  4013ab:	mov    eax,ds:0x57c5c4af
  4013b0:	dec    ecx
  4013b1:	lock inc esp
  4013b3:	sub    eax,DWORD PTR [edi-0x58]
  4013b6:	lahf   
  4013b7:	mov    ds:0xd0115a85,al
  4013bc:	mov    bh,0x38
  4013be:	repnz fucom st(5)
  4013c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013c2:	fs (bad) 
  4013c4:	push   edx
  4013c5:	mov    cl,0x3
  4013c7:	sti    
  4013c8:	cmp    BYTE PTR [edx+0x11],0xad
  4013cc:	jmp    0xc552:0xae733b5
  4013d3:	dec    esp
  4013d4:	retf   
  4013d5:	sar    DWORD PTR [edx-0x2991ace1],1
  4013db:	dec    esp
  4013dc:	sbb    DWORD PTR [ebp+0x7ba018c4],esi
  4013e2:	pop    edx
  4013e3:	ficom  DWORD PTR [edi-0x645c80ab]
  4013e9:	neg    BYTE PTR [edx]
  4013eb:	push   ebx
  4013ec:	sbb    ah,0xd1
  4013ef:	mov    gs:0x68fcece8,eax
  4013f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f7:	xchg   esp,eax
  4013f8:	xabort 0x1a
  4013fb:	pop    ss
  4013fc:	call   0xa0b4:0x218e32fa
  401403:	les    esp,FWORD PTR [edi+0x5]
  401406:	push   ebx
  401407:	out    dx,al
  401408:	pop    ebp
  401409:	in     al,0xad
  40140b:	xor    edi,DWORD PTR [ebp-0x1eeaf23e]
  401411:	popf   
  401412:	sbb    edx,ebx
  401414:	jns    0x401407
  401416:	fild   WORD PTR [eax]
  401418:	hlt    
  401419:	repnz retf 0xde40
  40141d:	adc    DWORD PTR [ecx-0x3164a771],esp
  401423:	aam    0x1b
  401425:	push   ecx
  401426:	sbb    eax,0x7a3c3f05
  40142b:	dec    ebx
  40142c:	arpl   WORD PTR [eax],di
  40142e:	sbb    ch,al
  401430:	xor    al,0xa5
  401432:	mov    ah,0x40
  401434:	mov    ecx,0xdd6a6aee
  401439:	jbe    0x4014a7
  40143b:	daa    
  40143c:	inc    eax
  40143d:	arpl   WORD PTR [eax],cx
  40143f:	mov    esp,0xa4fb4d4d
  401444:	pop    ebp
  401445:	mov    esi,0xfcd1999b
  40144a:	sub    DWORD PTR [ecx-0x66be389b],esp
  401450:	push   edi
  401451:	dec    edx
  401452:	fldcw  WORD PTR [esi-0x6fcbe583]
  401458:	jb     0x4014cb
  40145a:	and    BYTE PTR [ebx],al
  40145c:	jns    0x401445
  40145e:	and    al,0xf0
  401460:	lds    edi,FWORD PTR [ecx+0x75]
  401463:	nop
  401464:	dec    ebp
  401465:	outs   dx,BYTE PTR ds:[esi]
  401466:	jae    0x4013ff
  401468:	sbb    ebp,edx
  40146a:	mul    ah
  40146c:	fdivp  st(5),st
  40146e:	sar    bl,1
  401470:	mov    bh,0xf7
  401472:	sahf   
  401473:	sub    DWORD PTR [ebx],ebx
  401475:	jmp    0x4cdb:0x4ca0df3b
  40147c:	int    0xd
  40147e:	dec    edx
  40147f:	xchg   ebx,eax
  401480:	sub    eax,ebp
  401482:	xor    BYTE PTR [edi],ch
  401484:	adc    dl,BYTE PTR [edi-0x7eb59762]
  40148a:	dec    edi
  40148b:	mov    ebp,0x5ecd09ce
  401490:	adc    al,0x35
  401492:	gs dec eax
  401494:	dec    esi
  401495:	aas    
  401496:	xor    eax,esp
  401498:	push   es
  401499:	retf   
  40149a:	loopne 0x401463
  40149c:	xchg   edi,eax
  40149d:	seto   BYTE PTR [esi+0x36a93a15]
  4014a4:	fdivr  DWORD PTR [esi]
  4014a6:	mov    ah,0x1
  4014a8:	mov    al,0xb0
  4014aa:	fmulp  st(3),st
  4014ac:	sbb    DWORD PTR [edx+0x5eafd076],0x15
  4014b3:	(bad)  
  4014b4:	fld    st(5)
  4014b6:	push   edx
  4014b7:	nop
  4014b8:	imul   esp,DWORD PTR [eax+0x5f],0x7af92b15
  4014bf:	fadd   DWORD PTR [edi-0x44]
  4014c2:	cmp    al,0xb6
  4014c4:	dec    ebx
  4014c5:	cmp    dl,BYTE PTR [ebp+0x7f]
  4014c8:	or     eax,0xb80a87e4
  4014cd:	push   0xffffffb3
  4014cf:	jbe    0x401479
  4014d1:	out    0xff,al
  4014d3:	frstor [edi+0x27]
  4014d6:	sub    DWORD PTR ds:0xb13e5aef,esi
  4014dc:	inc    esi
  4014dd:	jp     0x401503
  4014df:	sar    BYTE PTR [edi],1
  4014e1:	jmp    0x40146a
  4014e3:	adc    BYTE PTR [ecx-0x283138ea],0x50
  4014ea:	pop    ds
  4014eb:	mov    ebp,0xaff7797a
  4014f0:	xor    BYTE PTR [esp+ebx*1+0x6b],bl
  4014f4:	out    dx,eax
  4014f5:	ret    
  4014f6:	inc    ebp
  4014f7:	adc    esi,DWORD PTR [esi+0x74]
  4014fa:	(bad)  
  4014fb:	jno    0x40153d
  4014fd:	adc    bl,BYTE PTR [esi-0x72]
  401500:	adc    BYTE PTR [edx-0x2b8017f2],dl
  401506:	jb     0x401578
  401508:	xchg   ebp,eax
  401509:	pushf  
  40150a:	sbb    eax,edi
  40150c:	ins    BYTE PTR es:[edi],dx
  40150d:	sahf   
  40150e:	aas    
  40150f:	mov    BYTE PTR ds:0x2e7ea3dd,bh
  401515:	lods   eax,DWORD PTR ds:[esi]
  401516:	dec    ebx
  401517:	xchg   esp,eax
  401518:	or     ch,BYTE PTR [ebx-0x27403ab5]
  40151e:	(bad)  
  40151f:	adc    eax,0x7b9984a7
  401524:	xchg   edi,eax
  401525:	adc    DWORD PTR [ebx+0x13],eax
  401528:	or     eax,0xfabc8932
  40152d:	arpl   WORD PTR [edi+0x68557bbe],di
  401533:	push   esp
  401534:	mov    edi,0xa6bc0ba4
  401539:	jb     0x40150f
  40153b:	sbb    esi,DWORD PTR [ecx]
  40153d:	pop    ds
  40153e:	stos   DWORD PTR es:[edi],eax
  40153f:	in     eax,dx
  401540:	fist   WORD PTR [ebx+edi*1+0x49]
  401544:	test   al,0x29
  401546:	xor    al,0x8b
  401548:	adc    eax,0xb081a6fc
  40154d:	test   eax,0xfa36c59d
  401552:	push   eax
  401553:	xor    DWORD PTR [eax-0x1cc6f806],ecx
  401559:	inc    esi
  40155a:	rcr    BYTE PTR [eax+0x54f2f47d],cl
  401560:	popa   
  401561:	scas   al,BYTE PTR es:[edi]
  401562:	imul   esi,DWORD PTR [edx-0x68],0x35
  401566:	mov    edx,0xcd33af29
  40156b:	fldenv [ecx+0x43cc7bd6]
  401571:	push   ds
  401572:	adc    edi,DWORD PTR [ebx+0x64098f5f]
  401578:	ret    0x9b70
  40157b:	not    BYTE PTR [edi-0x16]
  40157e:	or     eax,0xc57763e7
  401583:	lock lods al,BYTE PTR ds:[esi]
  401585:	sub    DWORD PTR [ecx-0x2f0f64b1],ebx
  40158b:	repnz popa 
  40158d:	jo     0x401539
  40158f:	sar    DWORD PTR [edi-0xf4e497d],1
  401595:	xchg   ecx,eax
  401596:	shl    dl,1
  401598:	cmp    DWORD PTR [ebx-0x4c],edi
  40159b:	test   al,0xf0
  40159d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40159e:	push   edx
  40159f:	ins    DWORD PTR es:[edi],dx
  4015a0:	int    0xea
  4015a2:	mov    dh,0xda
  4015a4:	jns    0x401571
  4015a6:	jno    0x401549
  4015a8:	into   
  4015a9:	das    
  4015aa:	push   ebp
  4015ab:	jle    0x4015b7
  4015ad:	test   DWORD PTR [ebx+eiz*2],edi
  4015b0:	daa    
  4015b1:	stos   DWORD PTR es:[edi],eax
  4015b2:	leave  
  4015b3:	jecxz  0x401605
  4015b5:	sbb    cl,al
  4015b7:	scas   al,BYTE PTR es:[edi]
  4015b8:	sub    eax,0x5e3da56a
  4015bd:	sbb    DWORD PTR [edi-0x34],edi
  4015c0:	leave  
  4015c1:	call   FWORD PTR [edi]
  4015c3:	lock or DWORD PTR [ecx-0x66794d91],esp
  4015ca:	or     ebx,DWORD PTR [ecx-0x69bd4b24]
  4015d0:	fcmovnb st,st(1)
  4015d2:	lds    ebp,FWORD PTR [ebx+0x4d]
  4015d5:	pop    esi
  4015d6:	mov    al,ds:0x55c922b1
  4015db:	cli    
  4015dc:	test   al,0x86
  4015de:	or     ebx,DWORD PTR [ebp-0x56]
  4015e1:	fcomi  st,st(2)
  4015e3:	test   ebp,0x36fd8e32
  4015e9:	aam    0x13
  4015eb:	jbe    0x401642
  4015ed:	(bad)  
  4015ee:	xchg   edx,eax
  4015ef:	sub    bl,BYTE PTR [ecx+0x3183a2da]
  4015f5:	mov    BYTE PTR [ebx-0x7cec0843],dl
  4015fb:	adc    al,0xdd
  4015fd:	jnp    0x40163c
  4015ff:	scas   al,BYTE PTR es:[edi]
  401600:	push   cs
  401601:	mov    edx,0xdde9b4f8
  401606:	cmp    ecx,ebx
  401608:	add    esp,eax
  40160a:	adc    eax,0x5d7e7e33
  40160f:	push   ds
  401610:	stos   DWORD PTR es:[edi],eax
  401611:	mov    al,ds:0x6bacf51c
  401616:	mov    ebp,0xf5d1a927
  40161b:	and    edx,DWORD PTR [edx+ecx*8]
  40161e:	xchg   BYTE PTR [edi+0x5465fb94],ah
  401624:	pop    ebp
  401625:	icebp  
  401626:	popa   
  401627:	mov    edi,0xbec2a286
  40162c:	arpl   WORD PTR ds:0xdf95596d,sp
  401632:	xchg   esp,eax
  401633:	pop    eax
  401634:	xchg   DWORD PTR [edx+0x12c62394],esi
  40163a:	aad    0xac
  40163c:	xor    edx,DWORD PTR [eax-0x17]
  40163f:	push   0x1e233101
  401644:	mov    esp,0x2b543250
  401649:	cmp    ebx,DWORD PTR [esi-0x67adf148]
  40164f:	fistp  DWORD PTR [ecx-0x82688c6]
  401655:	(bad)  
  401657:	popf   
  401658:	mov    BYTE PTR [esp+ecx*2],dh
  40165b:	add    edi,DWORD PTR [ecx+0x2466e3b0]
  401661:	rol    BYTE PTR [esi-0x135387f6],cl
  401667:	or     DWORD PTR [edx-0x3c],ecx
  40166a:	mov    ecx,DWORD PTR [esi]
  40166c:	cld    
  40166d:	mov    eax,0x3bebce0c
  401672:	ins    DWORD PTR es:[edi],dx
  401673:	out    0x92,al
  401675:	or     BYTE PTR [eax+0x2a],cl
  401678:	and    eax,0xefa9930c
  40167d:	leave  
  40167e:	mov    esi,0x96caa63a
  401683:	mov    ?,esp
  401685:	pop    DWORD PTR [esi]
  401687:	pusha  
  401688:	fisubr WORD PTR [edi]
  40168a:	push   ebp
  40168b:	xchg   ebx,eax
  40168c:	int3   
  40168d:	mov    ch,0x32
  40168f:	dec    ebp
  401690:	inc    ecx
  401691:	es popf 
  401693:	or     DWORD PTR ds:[edi],ebx
  401696:	test   al,0xb5
  401698:	push   edi
  401699:	(bad)  
  40169a:	popa   
  40169b:	cs sub ah,cl
  40169e:	inc    ecx
  40169f:	add    eax,0x2cc90a6f
  4016a4:	mov    al,0xdb
  4016a6:	cs (bad) 
  4016a8:	jmp    0x9eb5b1e9
  4016ad:	push   es
  4016ae:	inc    edx
  4016af:	add    eax,0x6e1d107b
  4016b4:	fucom  st(6)
  4016b6:	lea    ebx,[edi+0x51]
  4016b9:	les    ecx,FWORD PTR [ecx]
  4016bb:	div    BYTE PTR [eax-0x69]
  4016be:	push   cs
  4016bf:	lahf   
  4016c0:	fincstp 
  4016c2:	push   0xfffffff6
  4016c4:	push   eax
  4016c5:	(bad)  
  4016c6:	xchg   esp,eax
  4016c7:	stc    
  4016c8:	ror    BYTE PTR ds:0x18190197,1
  4016ce:	icebp  
  4016cf:	jbe    0x4016d7
  4016d1:	and    cl,BYTE PTR [esp+edi*4+0x2342856e]
  4016d8:	imul   BYTE PTR [eax+0x5eeb6a41]
  4016de:	xor    DWORD PTR [ecx+esi*2],ecx
  4016e1:	inc    ecx
  4016e2:	pop    edi
  4016e3:	out    0xf7,al
  4016e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e6:	inc    esi
  4016e7:	dec    esi
  4016e8:	rcl    DWORD PTR [esi],0xdc
  4016eb:	and    ebx,DWORD PTR [edx+0x3df7be55]
  4016f1:	xchg   ecx,eax
  4016f2:	cmc    
  4016f3:	add    ecx,DWORD PTR [ebp+0x1da31b23]
  4016f9:	rep lods eax,DWORD PTR ds:[esi]
  4016fb:	outs   dx,DWORD PTR ds:[esi]
  4016fc:	js     0x401719
  4016fe:	push   eax
  4016ff:	cmp    eax,0x2ab912ae
  401704:	imul   esi,ebx,0xfffffff4
  401707:	loope  0x401745
  401709:	hlt    
  40170a:	xchg   ebx,eax
  40170b:	pusha  
  40170c:	shl    dh,1
  40170e:	cmp    bl,BYTE PTR [esi-0x17]
  401711:	popf   
  401712:	pop    esp
  401713:	iret   
  401714:	and    DWORD PTR [edx+0x356a9703],ebx
  40171a:	scas   eax,DWORD PTR es:[edi]
  40171b:	jle    0x4016aa
  40171d:	pushf  
  40171e:	or     DWORD PTR [ebx],edx
  401720:	fsubr  st,st(6)
  401722:	enter  0x7a27,0x23
  401726:	sub    al,0xbc
  401728:	in     eax,0x44
  40172a:	and    bh,BYTE PTR [edx+0x4cde8110]
  401730:	fisubr DWORD PTR [ebx+0xff8273f]
  401736:	inc    esi
  401737:	mov    esi,0xf4b0fe33
  40173c:	ret    0x5d62
  40173f:	inc    ebx
  401740:	nop
  401741:	jne    0x401772
  401743:	jmp    0xbd1e:0x4944926a
  40174a:	add    edx,eax
  40174c:	xor    eax,0x35db4242
  401751:	mov    ds:0x78ceb991,al
  401756:	or     ah,BYTE PTR [ecx-0x50]
  401759:	sbb    bl,BYTE PTR [eax]
  40175b:	(bad)  
  40175d:	add    dl,BYTE PTR [eax-0x54]
  401760:	pusha  
  401761:	int3   
  401762:	inc    ebx
  401763:	xor    eax,edx
  401765:	bswap  esp
  401767:	pop    edx
  401768:	push   esp
  401769:	pop    ds
  40176a:	jg     0x401775
  40176c:	adc    esp,eax
  40176e:	sar    ebx,0x65
  401771:	or     al,0x41
  401773:	cmp    al,0x3e
  401775:	loope  0x401798
  401777:	adc    BYTE PTR [eax-0x7],bh
  40177a:	je     0x401782
  40177c:	fisubr WORD PTR [edx-0x284fbab5]
  401782:	int    0x48
  401784:	ss jae 0x4017b2
  401787:	sbb    ebp,DWORD PTR [esi]
  401789:	xchg   BYTE PTR [esi-0x2f79dd28],al
  40178f:	jmp    FWORD PTR [ebx]
  401791:	xor    ch,BYTE PTR [ebx+0x2df581d9]
  401797:	cld    
  401798:	ins    DWORD PTR es:[edi],dx
  401799:	inc    ebx
  40179a:	lea    edx,[eax-0x53f007ac]
  4017a0:	iret   
  4017a1:	push   esi
  4017a2:	icebp  
  4017a3:	shr    BYTE PTR [ecx+ebx*2],cl
  4017a6:	aas    
  4017a7:	in     eax,dx
  4017a8:	mov    al,ds:0xcafff45b
  4017ad:	inc    dl
  4017af:	adc    ebx,ecx
  4017b1:	inc    esp
  4017b2:	push   0xc4887db6
  4017b7:	inc    ebx
  4017b8:	aaa    
  4017b9:	adc    ah,BYTE PTR [ecx+0x67fe1c2a]
  4017bf:	sbb    dh,BYTE PTR [ebx-0x4]
  4017c2:	(bad)  
  4017c3:	or     eax,0xe8e3e1e2
  4017c8:	aas    
  4017c9:	arpl   WORD PTR [edx-0x3adc661],ax
  4017cf:	loopne 0x40175d
  4017d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d2:	jp     0x4017fd
  4017d4:	xor    bl,dl
  4017d6:	dec    edi
  4017d7:	add    BYTE PTR [eax+0x51b94c6],bl
  4017dd:	hlt    
  4017de:	arpl   si,cx
  4017e0:	gs aad 0x6f
  4017e3:	mov    fs,WORD PTR [edi+ebp*1-0x60]
  4017e7:	outs   dx,DWORD PTR ds:[esi]
  4017e8:	mov    ch,0xe9
  4017ea:	not    esp
  4017ec:	ret    
  4017ed:	ss push ebp
  4017ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017f0:	push   es
  4017f1:	neg    DWORD PTR [edi+0x60]
  4017f4:	mov    al,ah
  4017f6:	dec    edi
  4017f7:	arpl   WORD PTR [eax-0x25ea4669],si
  4017fd:	push   esi
  4017fe:	pop    eax
  4017ff:	lea    esi,[esi+0x4d]
  401802:	inc    esi
  401803:	lods   al,BYTE PTR ds:[esi]
  401804:	sbb    al,0xa6
  401806:	pop    es
  401807:	sbb    bh,bh
  401809:	outs   dx,DWORD PTR fs:[esi]
  40180b:	inc    esi
  40180c:	repz lahf 
  40180e:	jecxz  0x40187b
  401810:	xchg   DWORD PTR [ecx],esi
  401812:	xchg   ebx,eax
  401813:	xor    esp,DWORD PTR [ebx]
  401815:	addr16 cwde 
  401817:	jbe    0x401802
  401819:	jbe    0x4017d3
  40181b:	idiv   BYTE PTR [eax+edi*8-0x4b939f27]
  401822:	pop    esi
  401823:	sbb    eax,0xc6e410f9
  401828:	push   ebx
  401829:	xor    edi,DWORD PTR [ecx+0x1c]
  40182c:	ja     0x401870
  40182e:	mov    eax,0x8edfdcf3
  401833:	pop    ecx
  401834:	push   ds
  401835:	add    ebx,DWORD PTR cs:[ebp-0x62a84b89]
  40183c:	dec    ebp
  40183d:	xor    dh,BYTE PTR [edx-0x6efb79ae]
  401843:	arpl   WORD PTR [esi],cx
  401845:	in     al,dx
  401846:	sub    BYTE PTR [ebx+eax*8-0x268a4794],al
  40184d:	xchg   edx,eax
  40184e:	mov    WORD PTR [esi-0x54],fs
  401851:	mov    ch,0x59
  401853:	jb     0x401874
  401855:	xchg   ecx,eax
  401856:	icebp  
  401857:	jmp    0xabc4:0xf3f2a61a
  40185e:	push   es
  40185f:	into   
  401860:	lods   eax,DWORD PTR ds:[esi]
  401861:	jle    0x4017f7
  401863:	adc    eax,0xe659733c
  401868:	jnp    0x4018c2
  40186a:	mov    ebx,0x9d6ef339
  40186f:	leave  
  401870:	and    ch,BYTE PTR [esi+0x17]
  401873:	cmp    ah,BYTE PTR [esi+0x5a]
  401876:	out    0x6c,eax
  401878:	(bad)
  40187b:	mov    ebx,0x268ada77
  401880:	(bad)  
  401881:	in     al,dx
  401882:	mov    edi,0xdba69fa5
  401887:	rol    DWORD PTR [edi+0x5e],0x69
  40188b:	repnz sahf 
  40188d:	adc    ebp,edx
  40188f:	sbb    BYTE PTR [eax+0x2b],ch
  401892:	jmp    0xbad3e9e1
  401897:	aam    0x5a
  401899:	daa    
  40189a:	cmp    DWORD PTR [ecx],ebx
  40189c:	scas   al,BYTE PTR es:[edi]
  40189d:	out    dx,al
  40189e:	push   es
  40189f:	fimul  WORD PTR [esi+0x3]
  4018a2:	xchg   ah,bl
  4018a4:	out    dx,eax
  4018a5:	cld    
  4018a6:	xchg   DWORD PTR [eax-0x4dc23434],ecx
  4018ac:	cld    
  4018ad:	ins    BYTE PTR es:[edi],dx
  4018ae:	xchg   BYTE PTR [esp+ecx*1+0x5],al
  4018b2:	sahf   
  4018b3:	dec    edx
  4018b4:	in     eax,dx
  4018b5:	sub    BYTE PTR [ebx],bl
  4018b7:	add    bh,dl
  4018b9:	jns    0x401926
  4018bb:	xchg   BYTE PTR [edi],al
  4018bd:	pop    ecx
  4018be:	mov    esi,DWORD PTR [edi]
  4018c0:	push   ds
  4018c1:	aas    
  4018c2:	ss leave 
  4018c4:	clc    
  4018c5:	aas    
  4018c6:	push   esi
  4018c7:	dec    edi
  4018c8:	xchg   ecx,eax
  4018c9:	mov    bh,0xce
  4018cb:	les    ebx,FWORD PTR [eax]
  4018cd:	xor    al,0x84
  4018cf:	pop    ebx
  4018d0:	push   ebx
  4018d1:	xor    al,0xff
  4018d3:	loop   0x4018c5
  4018d5:	mov    eax,ds:0x8bb96b07
  4018da:	retf   
  4018db:	daa    
  4018dc:	ror    DWORD PTR [edx+ecx*4+0x4447600],cl
  4018e3:	jno    0x40193f
  4018e5:	or     BYTE PTR ds:0x98f385b5,bh
  4018eb:	mov    ah,0x2e
  4018ed:	adc    DWORD PTR [edi],0x28
  4018f0:	xchg   esi,eax
  4018f1:	fiadd  DWORD PTR [esi]
  4018f3:	(bad)  
  4018f5:	xor    DWORD PTR [esi],ebp
  4018f7:	xchg   edi,eax
  4018f8:	scas   eax,DWORD PTR es:[edi]
  4018f9:	mov    ebx,0x53cd386b
  4018fe:	jnp    0x401917
  401900:	out    0xca,eax
  401902:	les    edi,FWORD PTR [eax]
  401904:	mov    edi,0x3c9b0668
  401909:	out    0x58,eax
  40190b:	mov    al,0x62
  40190d:	xor    BYTE PTR [edx-0x155eaa51],bh
  401913:	jge    0x40189e
  401915:	and    al,0x4
  401917:	push   ebp
  401918:	adc    ah,bh
  40191a:	sahf   
  40191b:	mov    WORD PTR [edx],es
  40191d:	gs inc ecx
  40191f:	cmp    ah,BYTE PTR [ecx]
  401921:	or     bl,BYTE PTR [edi+0x4a]
  401924:	std    
  401925:	nop
  401926:	cmp    DWORD PTR [eax],ebx
  401928:	test   DWORD PTR [ebp+edx*1+0x71],0x3961410e
  401930:	mov    cs,WORD PTR [esi+0x65]
  401933:	aaa    
  401934:	repnz or eax,0x2d22c772
  40193a:	test   eax,0x32d7ce3b
  40193f:	mov    bl,0x73
  401941:	int    0xb7
  401943:	aas    
  401944:	xor    eax,0x9ed7fcb5
  401949:	icebp  
  40194a:	dec    eax
  40194b:	jae    0x40198e
  40194d:	and    ebx,eax
  40194f:	or     ecx,DWORD PTR [ebx]
  401951:	mov    ah,0xac
  401953:	or     esi,DWORD PTR [edx-0x16f95a83]
  401959:	push   ecx
  40195a:	jle    0x401904
  40195c:	rcl    BYTE PTR [esi-0x37c003ac],1
  401962:	push   0xffffffb9
  401964:	add    ebx,DWORD PTR [ecx+edi*2-0xeab674b]
  40196b:	cmp    BYTE PTR [edi],ah
  40196d:	fadd   DWORD PTR [ebx+0x0]
  401970:	bound  esi,QWORD PTR [esi+0x3bd5fbd0]
  401976:	mov    cl,0xf0
  401979:	(bad)  
  40197a:	shr    DWORD PTR [edx+0x5f],cl
  40197d:	leave  
  40197e:	mov    ah,0xb1
  401980:	out    dx,eax
  401981:	dec    edi
  401982:	scas   eax,DWORD PTR es:[edi]
  401983:	cs jne 0x401931
  401986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401987:	inc    ebx
  401988:	aam    0xeb
  40198a:	(bad)  
  40198b:	sub    bl,BYTE PTR [ecx]
  40198d:	xor    ebx,DWORD PTR [esi]
  40198f:	ins    BYTE PTR es:[edi],dx
  401990:	out    0x22,eax
  401992:	add    DWORD PTR [ebp-0x1b4c549d],0xf9615441
  40199c:	pop    ebp
  40199d:	add    DWORD PTR [edx+0x5d],edx
  4019a0:	mov    dl,BYTE PTR [edx]
  4019a2:	pusha  
  4019a3:	add    BYTE PTR [edi],ah
  4019a5:	cmc    
  4019a6:	or     edx,esi
  4019a8:	ja     0x4019a3
  4019aa:	stos   DWORD PTR es:[edi],eax
  4019ab:	jge    0x40198b
  4019ad:	lods   eax,DWORD PTR ds:[esi]
  4019ae:	mov    edx,0x30bb35d2
  4019b3:	leave  
  4019b4:	xchg   BYTE PTR [ebp+0x7a],bl
  4019b7:	ins    DWORD PTR es:[edi],dx
  4019b8:	add    eax,0xfdf449cb
  4019bd:	cmc    
  4019be:	inc    edi
  4019bf:	nop
  4019c0:	sar    BYTE PTR [edi],1
  4019c2:	xor    al,0x40
  4019c4:	mov    DWORD PTR [ebx],eax
  4019c6:	test   BYTE PTR [ebx],ch
  4019c8:	arpl   sp,cx
  4019ca:	shl    BYTE PTR [edi+edx*2+0x2c],0xaa
  4019cf:	ss call 0xedf8:0xe1b5de15
  4019d7:	inc    ebp
  4019d8:	mov    WORD PTR [edx+edi*2],fs
  4019db:	call   0x9fe6:0x30ad9e93
  4019e2:	shr    DWORD PTR [edx],1
  4019e4:	add    BYTE PTR [edi],dl
  4019e6:	adc    al,0x7c
  4019e8:	out    dx,eax
  4019e9:	shr    BYTE PTR [edi],cl
  4019eb:	les    esi,FWORD PTR ds:0x73d67cdb
  4019f1:	jnp    0x401a71
  4019f3:	and    al,0x2e
  4019f5:	mov    WORD PTR [edx+0x52],cs
  4019f8:	pop    esp
  4019f9:	sub    BYTE PTR [ebx+0xcdc08e2],0xcb
  401a00:	xchg   ebp,eax
  401a01:	rcr    DWORD PTR [esi],0x4d
  401a04:	mov    al,0x8f
  401a06:	push   edi
  401a07:	(bad)  
  401a08:	mov    esi,0xc6585536
  401a0d:	iret   
  401a0e:	stos   BYTE PTR es:[edi],al
  401a0f:	mov    eax,DWORD PTR [ecx]
  401a11:	pop    ds
  401a12:	fwait
  401a13:	loope  0x401a5c
  401a15:	jg     0x4019c6
  401a17:	add    eax,0x5918cab4
  401a1c:	sub    bl,BYTE PTR [ecx+0x16]
  401a1f:	mov    al,0x7c
  401a21:	jmp    0x401a19
  401a23:	or     DWORD PTR [ebp+edx*4-0x7b],esi
  401a27:	dec    ebx
  401a28:	xchg   ebx,eax
  401a29:	retf   
  401a2a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  401a2c:	adc    DWORD PTR [esi],edx
  401a2e:	cdq    
  401a2f:	push   edx
  401a30:	jge    0x4019de
  401a32:	lahf   
  401a33:	pop    ds
  401a34:	dec    esi
  401a35:	fnsave [ebx]
  401a37:	fwait
  401a38:	sbb    DWORD PTR [eax+0x7],esp
  401a3b:	(bad)  
  401a3c:	out    0x94,eax
  401a3e:	mov    ds:0x7c682da0,al
  401a43:	or     BYTE PTR [ecx-0x704d1642],0x26
  401a4a:	jbe    0x401a8b
  401a4c:	(bad)  
  401a4d:	out    0x16,al
  401a4f:	inc    ecx
  401a50:	je     0x401ad1
  401a52:	(bad)  
  401a53:	add    al,dh
  401a55:	mov    ah,0xb7
  401a57:	ret    
  401a58:	scas   al,BYTE PTR es:[edi]
  401a59:	pop    es
  401a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a5b:	scas   eax,DWORD PTR es:[edi]
  401a5c:	inc    ebx
  401a5d:	imul   esp,DWORD PTR [ebp+0x41],0x9cda026e
  401a64:	out    0xf2,eax
  401a66:	call   0x31ba:0x8dffb08b
  401a6d:	mov    WORD PTR ds:0x47c4f08c,?
  401a73:	sub    eax,DWORD PTR ds:0xda7d95
  401a79:	aam    0xac
  401a7b:	repnz push eax
  401a7d:	adc    bl,BYTE PTR [ebx]
  401a7f:	pop    eax
  401a80:	push   esp
  401a81:	outs   dx,BYTE PTR ds:[esi]
  401a82:	mov    eax,0xd4af072b
  401a87:	outs   dx,DWORD PTR ds:[esi]
  401a88:	pop    esp
  401a89:	dec    eax
  401a8a:	arpl   WORD PTR [edi],bp
  401a8c:	add    bl,cl
  401a8e:	cmp    ax,0x8163
  401a92:	retf   
  401a93:	mov    cl,0xb8
  401a95:	sbb    al,0x4e
  401a97:	xor    eax,0x953bfb1f
  401a9c:	pop    ebx
  401a9d:	fidivr DWORD PTR [edx]
  401a9f:	cmc    
  401aa0:	dec    edx
  401aa1:	dec    ecx
  401aa2:	gs push ecx
  401aa4:	mov    ecx,0xa300b7c0
  401aa9:	aaa    
  401aaa:	psrld  mm3,mm5
  401aad:	jmp    0x401a8d
  401aaf:	scas   al,BYTE PTR es:[edi]
  401ab0:	stc    
  401ab1:	adc    eax,0xdc07a541
  401ab6:	push   esp
  401ab7:	inc    esp
  401ab8:	stc    
  401ab9:	retf   
  401aba:	neg    BYTE PTR [esi]
  401abc:	out    dx,eax
  401abd:	or     al,0x6e
  401abf:	and    BYTE PTR [ecx-0x5ee3ffc2],dh
  401ac5:	xchg   edx,eax
  401ac6:	jg     0x401afc
  401ac8:	(bad)  
  401ac9:	cld    
  401aca:	stc    
  401acb:	jmp    0x401a7d
  401acd:	cmp    bh,BYTE PTR [eax]
  401acf:	and    eax,0xe688352c
  401ad4:	jge    0x401b54
  401ad6:	imul   ecx,DWORD PTR [esp+ebx*4-0x6f0ea034],0xd41c6dec
  401ae1:	repnz sbb BYTE PTR fs:[ebx+edi*8-0x706ae11e],ch
  401aea:	loop   0x401b38
  401aec:	add    al,0x9c
  401aee:	and    al,0xac
  401af0:	mov    esp,0x5456b32d
  401af5:	ins    DWORD PTR es:[edi],dx
  401af6:	(bad)  
  401af7:	or     al,0x33
  401af9:	inc    ebx
  401afa:	in     al,dx
  401afb:	jnp    0x401ab7
  401afd:	ss pop ebp
  401aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b00:	es loopne 0x401b34
  401b03:	call   0x6d583d3a
  401b08:	int    0x75
  401b0a:	out    0x3a,eax
  401b0c:	test   eax,0xdb7696cd
  401b11:	or     BYTE PTR [esi],0x7b
  401b14:	icebp  
  401b15:	arpl   WORD PTR [eax+eax*1+0x6a],bx
  401b19:	daa    
  401b1a:	(bad)  
  401b1b:	and    BYTE PTR [ecx-0x76673b6],0xb9
  401b22:	mov    fs,WORD PTR [ebp-0x121e5121]
  401b28:	inc    ecx
  401b29:	cwde   
  401b2a:	clc    
  401b2b:	sbb    BYTE PTR [esi],cl
  401b2d:	out    0xf4,al
  401b2f:	fs ret 
  401b31:	jge    0x401ad4
  401b33:	sub    al,0xd8
  401b35:	pop    eax
  401b36:	stos   BYTE PTR es:[edi],al
  401b37:	mov    ebp,0x646ea3b2
  401b3c:	aad    0x24
  401b3e:	jge    0x963e8757
  401b44:	shr    DWORD PTR ds:0xc250f4,0x52
  401b4b:	pop    ds
  401b4c:	call   0x75b3:0xabb85167
  401b53:	fldcw  WORD PTR [eax-0x6c]
  401b56:	push   eax
  401b57:	rcl    BYTE PTR [ebx],0x55
  401b5a:	add    DWORD PTR [esi],edx
  401b5c:	push   ebp
  401b5d:	mov    ss,WORD PTR [ebx]
  401b5f:	sub    ebp,ecx
  401b61:	jg     0x401bce
  401b63:	xor    esp,eax
  401b65:	imul   esi,DWORD PTR [edx-0x49e622bf],0x840578dd
  401b6f:	iret   
  401b70:	and    DWORD PTR [ecx+0x46],0x9d225720
  401b77:	jl     0x401b20
  401b79:	or     al,0x7c
  401b7b:	cdq    
  401b7c:	xchg   ebp,eax
  401b7d:	xchg   ecx,eax
  401b7e:	jnp    0x401bea
  401b80:	cdq    
  401b81:	mov    al,ds:0xe4a39526
  401b86:	ret    0xd252
  401b89:	nop
  401b8a:	je     0x401bc0
  401b8c:	add    bh,BYTE PTR [ecx]
  401b8e:	leave  
  401b8f:	fst    st(3)
  401b91:	test   al,0x40
  401b93:	fst    QWORD PTR [ecx+edi*1-0x5b]
  401b97:	pop    edx
  401b98:	pop    esp
  401b99:	out    dx,eax
  401b9a:	lock pop esi
  401b9c:	neg    edx
  401b9e:	push   0xc64701d7
  401ba3:	mov    dh,BYTE PTR [edi+0x31]
  401ba6:	lds    edx,FWORD PTR [eax-0x1c]
  401ba9:	push   es
  401baa:	inc    ebx
  401bab:	out    dx,al
  401bac:	xchg   ebx,eax
  401bad:	fild   QWORD PTR [ebx+edi*8]
  401bb0:	pop    ecx
  401bb1:	int    0x8e
  401bb3:	mov    ch,0xaa
  401bb5:	push   edi
  401bb6:	sar    cl,1
  401bb8:	xor    al,0x8a
  401bba:	jecxz  0x401b55
  401bbc:	into   
  401bbd:	adc    bl,dh
  401bbf:	ins    DWORD PTR es:[edi],dx
  401bc0:	jmp    0x401b8c
  401bc2:	cmp    ch,BYTE PTR [esi]
  401bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bc5:	(bad)  
  401bc7:	pop    ss
  401bc8:	and    DWORD PTR [ebx+0x18],ecx
  401bcb:	sbb    al,0xae
  401bcd:	mov    ecx,0xf04a2288
  401bd2:	mov    dl,0x44
  401bd4:	outs   dx,BYTE PTR ds:[esi]
  401bd5:	xchg   esi,eax
  401bd6:	pop    eax
  401bd7:	adc    BYTE PTR [esi+0x31],ch
  401bda:	or     bl,al
  401bdc:	push   edx
  401bdd:	add    DWORD PTR [ebx],ebx
  401bdf:	lods   al,BYTE PTR ds:[esi]
  401be0:	shl    BYTE PTR [edi],cl
  401be2:	dec    ebx
  401be3:	shl    DWORD PTR [eax+0x2bca2152],cl
  401be9:	sbb    DWORD PTR [esp+esi*2+0x474b6f35],0xffffffe8
  401bf1:	jae    0x401c5d
  401bf3:	jne    0x401c40
  401bf5:	mov    al,0x7
  401bf7:	xchg   edi,eax
  401bf8:	shr    ebx,0xc6
  401bfb:	daa    
  401bfc:	lea    esp,[edi+edx*4]
  401bff:	in     al,0xc
  401c01:	div    BYTE PTR [ebx]
  401c03:	inc    ecx
  401c04:	adc    ah,al
  401c06:	xchg   edi,eax
  401c07:	in     eax,0x4e
  401c09:	cs xchg esi,eax
  401c0b:	xchg   edx,eax
  401c0c:	test   eax,0x2f115671
  401c11:	pop    ebp
  401c12:	fcmove st,st(4)
  401c14:	cmp    eax,0x731459db
  401c19:	rcl    BYTE PTR [eax-0x55d6dcd2],cl
  401c1f:	cmp    bh,BYTE PTR [edi+0x52]
  401c22:	pop    ss
  401c23:	dec    ebp
  401c24:	mov    fs,WORD PTR [edx-0x4182e8e8]
  401c2a:	inc    edx
  401c2b:	lods   al,BYTE PTR ds:[esi]
  401c2c:	loopne 0x401bc6
  401c2e:	sar    BYTE PTR [eax-0xc52d243],0xae
  401c35:	aam    0x3a
  401c37:	sbb    cl,al
  401c39:	push   edx
  401c3a:	pop    esi
  401c3b:	stos   BYTE PTR es:[edi],al
  401c3c:	mov    edi,0xbeb37796
  401c41:	mov    bh,0x99
  401c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c44:	cmp    BYTE PTR [edi-0x188f7112],bh
  401c4a:	jmp    FWORD PTR [ecx+0x687e8af7]
  401c50:	cmp    DWORD PTR ds:0xca9a862,esi
  401c56:	xchg   edi,eax
  401c57:	fs addr16 leave 
  401c5a:	mov    eax,ds:0x11ed413c
  401c5f:	pop    ss
  401c60:	ja     0x401c0d
  401c62:	sbb    eax,0x7c69e7ad
  401c67:	pop    eax
  401c68:	cmp    DWORD PTR [ecx],ebx
  401c6a:	aad    0x62
  401c6c:	add    al,0x71
  401c6e:	lock call 0x27f4:0x47800c85
  401c76:	push   es
  401c77:	ja     0x401c9b
  401c79:	lods   eax,DWORD PTR ds:[esi]
  401c7a:	repz mov dh,0x34
  401c7d:	popa   
  401c7e:	pavgw  mm5,QWORD PTR [edi+0x2a79a548]
  401c85:	pop    es
  401c86:	daa    
  401c87:	out    dx,al
  401c88:	xor    DWORD PTR [edi+0x58],0x52430ae3
  401c8f:	xor    eax,0xe42dfc62
  401c94:	popa   
  401c95:	(bad)  
  401c96:	adc    BYTE PTR [ebx+0x1c],ah
  401c99:	fs jae 0x401cc2
  401c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c9d:	jno    0x401d15
  401c9f:	mov    edx,0xc27f820e
  401ca4:	shrd   DWORD PTR [eax],edi,0x40
  401ca8:	push   0x78
  401caa:	xchg   edi,eax
  401cab:	(bad)  
  401cac:	enter  0xd40f,0x3
  401cb0:	or     eax,0x55bf8c65
  401cb5:	xchg   esp,eax
  401cb6:	push   0x11a03f99
  401cbb:	add    ebp,DWORD PTR [ecx+0x3588140c]
  401cc1:	inc    edi
  401cc2:	in     al,dx
  401cc3:	fsub   DWORD PTR [ecx]
  401cc5:	popf   
  401cc6:	stos   DWORD PTR es:[edi],eax
  401cc7:	dec    ecx
  401cc8:	scas   eax,DWORD PTR es:[edi]
  401cc9:	pop    ebp
  401cca:	test   al,0x5b
  401ccc:	jb     0x401cb7
  401cce:	iret   
  401ccf:	xchg   ebx,eax
  401cd0:	rdmsr  
  401cd2:	addr16 (bad) 
  401cd5:	(bad)  
  401cd6:	and    esi,ebp
  401cd8:	nop
  401cd9:	cs sbb al,0x2b
  401cdc:	xchg   esp,eax
  401cdd:	ret    0xdec8
  401ce0:	out    dx,al
  401ce1:	in     al,0x67
  401ce3:	push   0xffffffef
  401ce5:	ins    BYTE PTR es:[edi],dx
  401ce6:	les    ecx,FWORD PTR [esi-0xa27b157]
  401cec:	xor    ch,al
  401cee:	mov    ebx,0x604ae02
  401cf3:	sbb    BYTE PTR [ebp+0x11],0xb5
  401cf7:	dec    ebp
  401cf8:	(bad)  
  401cf9:	xchg   edx,eax
  401cfa:	pushf  
  401cfb:	scas   al,BYTE PTR es:[edi]
  401cfc:	mov    ds:0x1f8deb96,eax
  401d01:	cld    
  401d02:	in     al,0xf6
  401d04:	inc    edi
  401d05:	sbb    DWORD PTR [ecx+0x63a1cb4c],ecx
  401d0b:	lea    edi,[eax+0x61c3fc25]
  401d11:	xchg   edi,eax
  401d12:	ret    0x6fd7
  401d15:	scas   eax,DWORD PTR es:[edi]
  401d16:	inc    ebp
  401d17:	stos   BYTE PTR es:[edi],al
  401d18:	stos   DWORD PTR es:[edi],eax
  401d19:	test   DWORD PTR [ecx],ecx
  401d1b:	inc    ebp
  401d1c:	imul   edx,DWORD PTR [ecx],0xda11c086
  401d22:	mov    esi,0x141eac69
  401d27:	push   es
  401d28:	xor    DWORD PTR [eax+0x2c340cb5],ebx
  401d2e:	pop    ss
  401d2f:	adc    ch,cl
  401d31:	inc    eax
  401d32:	enter  0x7b02,0x96
  401d36:	iret   
  401d37:	repz push edi
  401d39:	inc    ebp
  401d3a:	mov    ds:0x35a53180,al
  401d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d40:	jb     0x401d2e
  401d42:	and    ebp,DWORD PTR [ebp-0x55]
  401d45:	das    
  401d46:	es hlt 
  401d48:	retf   
  401d49:	stos   BYTE PTR es:[edi],al
  401d4a:	mov    al,bh
  401d4c:	dec    ecx
  401d4d:	jmp    0x9f9b:0x5319fcb5
  401d54:	inc    ebp
  401d55:	push   ebx
  401d56:	sub    DWORD PTR [esi-0x17],ebx
  401d59:	pop    edx
  401d5a:	ins    DWORD PTR es:[edi],dx
  401d5b:	mov    edx,0x6709e593
  401d60:	out    0xfa,al
  401d62:	xchg   edx,eax
  401d63:	inc    esi
  401d64:	lea    esi,[eax]
  401d66:	xchg   ebx,eax
  401d67:	cmp    al,0xa3
  401d69:	mov    DWORD PTR [edi+0x7002a958],eax
  401d6f:	jp     0x401cfc
  401d71:	cwde   
  401d72:	adc    al,0x83
  401d74:	xchg   ebx,eax
  401d75:	inc    ebp
  401d76:	or     DWORD PTR [edi-0x2e8756e8],esp
  401d7c:	(bad)  
  401d7d:	sbb    al,0xbe
  401d7f:	call   0x431c7c27
  401d84:	xchg   ebp,eax
  401d85:	scas   eax,DWORD PTR es:[edi]
  401d86:	and    BYTE PTR [ebx-0x678b06cc],bl
  401d8c:	shr    ecx,0x89
  401d8f:	xchg   DWORD PTR [ebx+0x2],esp
  401d92:	shr    DWORD PTR [ebp-0x40],0xa2
  401d96:	shl    BYTE PTR [esi-0x73],0xb
  401d9a:	pop    ebp
  401d9b:	mov    dh,0x1b
  401d9d:	fistp  QWORD PTR [ebx+0x6d]
  401da0:	jmp    0xd82d8db0
  401da5:	push   ss
  401da6:	cli    
  401da7:	les    esi,FWORD PTR [ecx-0x27]
  401daa:	sub    ecx,DWORD PTR [ebp-0x24b43fbd]
  401db0:	or     al,0xfe
  401db2:	sti    
  401db3:	cmp    BYTE PTR [ebx+edx*2+0x3f],0xbf
  401db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401db9:	in     al,0x7b
  401dbb:	cwde   
  401dbc:	and    DWORD PTR [ecx+0x52],0x17
  401dc0:	js     0x401db5
  401dc2:	dec    eax
  401dc3:	mov    WORD PTR [edx+edi*2],gs
  401dc6:	popf   
  401dc7:	inc    ebx
  401dc8:	mov    edi,0x213ca1f4
  401dcd:	mov    esi,ds
  401dcf:	xchg   BYTE PTR [edi+0x713f64fe],dh
  401dd5:	mov    ds:0x11d207fd,eax
  401dda:	es cld 
  401ddc:	in     al,0xb9
  401dde:	fldenv [esi-0x696d47e9]
  401de4:	inc    edi
  401de5:	xchg   ecx,eax
  401de6:	or     al,0x88
  401de8:	loopne 0x401d9a
  401dea:	xchg   ebx,eax
  401deb:	mov    ebx,0x4d3cf564
  401df0:	xlat   BYTE PTR ds:[ebx]
  401df1:	stc    
  401df2:	out    dx,eax
  401df3:	outs   dx,DWORD PTR ds:[esi]
  401df4:	cmp    al,0xde
  401df6:	out    0xc4,al
  401df8:	repnz stos BYTE PTR es:[edi],al
  401dfa:	stc    
  401dfb:	dec    ebx
  401dfc:	test   al,0x5b
  401dfe:	pop    es
  401dff:	jle    0x401dcb
  401e01:	jo     0x401d94
  401e03:	gs in  al,0x50
  401e06:	test   eax,0xbc52577e
  401e0b:	or     eax,DWORD PTR [esi]
  401e0d:	mov    ah,cl
  401e0f:	xor    DWORD PTR [edi-0x49],ebx
  401e12:	daa    
  401e13:	in     al,0xa2
  401e15:	in     al,0x16
  401e17:	dec    esp
  401e18:	pop    edx
  401e19:	sub    ah,BYTE PTR [esi]
  401e1b:	mov    dl,cl
  401e1d:	push   ebp
  401e1e:	ror    DWORD PTR [ebp-0x65],1
  401e21:	cmp    eax,0x7eddcd0c
  401e26:	dec    ebp
  401e27:	xchg   ecx,eax
  401e28:	rcr    BYTE PTR [ebx+ebx*1-0x4a],0xbe
  401e2d:	push   ebx
  401e2e:	mov    al,bh
  401e30:	mov    dh,0x0
  401e32:	or     al,0x65
  401e34:	mov    ds,ebx
  401e36:	xor    ebx,DWORD PTR [esi]
  401e38:	sub    dl,cl
  401e3a:	stc    
  401e3b:	test   al,0x1f
  401e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e3e:	inc    ebx
  401e3f:	cdq    
  401e40:	cdq    
  401e41:	sbb    al,0xa4
  401e43:	sub    esi,DWORD PTR [eax]
  401e45:	mov    cl,0xf2
  401e47:	je     0x401dcb
  401e49:	pop    ebx
  401e4a:	push   eax
  401e4b:	dec    edx
  401e4c:	stos   BYTE PTR es:[edi],al
  401e4d:	inc    esi
  401e4e:	and    ah,dh
  401e50:	xor    eax,DWORD PTR [ecx]
  401e52:	xor    dl,BYTE PTR [edx+edx*2-0x24393c20]
  401e59:	mov    edi,0x8dfcbd8f
  401e5e:	xchg   edx,eax
  401e5f:	xlat   BYTE PTR ds:[ebx]
  401e60:	push   eax
  401e61:	aaa    
  401e62:	jle    0x401dfe
  401e64:	push   0xffffffb7
  401e66:	push   esp
  401e67:	in     eax,dx
  401e68:	and    ecx,DWORD PTR [edi]
  401e6a:	pop    esi
  401e6b:	or     BYTE PTR [edi+edi*8],cl
  401e6e:	xor    eax,0xa553b8c1
  401e73:	jg     0x401edf
  401e75:	xchg   esp,eax
  401e76:	mov    bl,0x20
  401e78:	cdq    
  401e79:	push   cs
  401e7a:	jle    0x401e7f
  401e7c:	scas   al,BYTE PTR es:[edi]
  401e7d:	jmp    0x3487:0x3f3c5d62
  401e84:	fmul   DWORD PTR [ebp-0x38]
  401e87:	stos   DWORD PTR es:[edi],eax
  401e88:	jo     0x401e0b
  401e8a:	fcomp  QWORD PTR [esi]
  401e8c:	icebp  
  401e8d:	or     BYTE PTR [esi-0x5b],al
  401e90:	mov    ebx,0x71f2be3b
  401e95:	and    al,0xe7
  401e97:	and    DWORD PTR [ebx-0x16777f13],ebx
  401e9d:	fisub  WORD PTR [edx]
  401e9f:	or     DWORD PTR [esi+0x4fbda4df],esp
  401ea5:	lods   al,BYTE PTR ds:[esi]
  401ea6:	aaa    
  401ea7:	sbb    ch,bl
  401ea9:	bound  edx,QWORD PTR [edx-0x5b]
  401eac:	scas   eax,DWORD PTR es:[edi]
  401ead:	mov    eax,ds:0x916e0d41
  401eb2:	out    dx,eax
  401eb3:	fisub  WORD PTR [edi+0x47b1cf0e]
  401eb9:	mov    ah,0xfb
  401ebb:	aas    
  401ebc:	ret    0x71ff
  401ebf:	jo     0x401e75
  401ec1:	outs   dx,BYTE PTR ds:[esi]
  401ec2:	push   es
  401ec3:	(bad)  
  401ec5:	mov    ebp,0xf43331
  401eca:	sub    BYTE PTR [esi-0x2b],dl
  401ecd:	sbb    BYTE PTR [eax+0x7ae635c1],ch
  401ed3:	popf   
  401ed4:	dec    ecx
  401ed5:	(bad)  
  401ed6:	pop    edx
  401ed7:	and    al,0xfa
  401ed9:	sub    DWORD PTR [ecx-0x57],0xf153ca9f
  401ee0:	sub    BYTE PTR [ecx],bh
  401ee2:	in     eax,dx
  401ee3:	cli    
  401ee4:	push   ecx
  401ee5:	cmp    ebx,edx
  401ee7:	imul   edi,DWORD PTR [ebx-0x74],0x6e
  401eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eec:	adc    ecx,DWORD PTR [ecx]
  401eee:	cmp    DWORD PTR ds:0x278e3c24,0xbfa30f15
  401ef8:	shr    dl,cl
  401efa:	rol    bl,0x94
  401efd:	mov    ds:0x7c3b5ab2,eax
  401f02:	(bad)  
  401f04:	retf   
  401f05:	bound  ebp,QWORD PTR [esi+eiz*4]
  401f08:	loopne 0x401f5a
  401f0a:	mov    ?,WORD PTR [ecx+edx*8-0x1c4463d7]
  401f11:	mov    ch,0xb3
  401f13:	pop    ebx
  401f14:	repz imul ecx,DWORD PTR [edi-0x75],0xe43bd9e7
  401f1c:	pop    edi
  401f1d:	mov    eax,edx
  401f1f:	cmp    eax,0xd0f14ec4
  401f24:	sub    edi,DWORD PTR ds:0xa737e70a
  401f2a:	xchg   ebx,ebx
  401f2c:	mov    cl,0xd3
  401f2e:	ss push cs
  401f30:	push   ebx
  401f31:	mov    bh,0x75
  401f33:	out    0xef,al
  401f35:	sahf   
  401f36:	pop    edi
  401f37:	inc    edx
  401f38:	push   edx
  401f39:	jle    0x401fa6
  401f3b:	jns    0x401eef
  401f3d:	jle    0x401f00
  401f3f:	fidivr WORD PTR [eax-0x28]
  401f42:	inc    ebp
  401f43:	cmp    BYTE PTR [ecx+ecx*2-0x78],dl
  401f47:	inc    esi
  401f48:	jmp    0x401f76
  401f4a:	xchg   esi,eax
  401f4b:	lods   al,BYTE PTR ds:[esi]
  401f4c:	out    dx,al
  401f4d:	mov    ch,0x66
  401f4f:	dec    ecx
  401f50:	dec    ebx
  401f51:	xor    BYTE PTR [esi-0x1c],0x6c
  401f55:	mov    bl,0x3e
  401f57:	cmp    DWORD PTR [ecx],ecx
  401f59:	push   esi
  401f5a:	clc    
  401f5b:	xchg   eax,edi
  401f5d:	jo     0x401eee
  401f5f:	aad    0xeb
  401f61:	ins    BYTE PTR es:[edi],dx
  401f62:	and    edx,DWORD PTR [ecx]
  401f64:	imul   ebp,DWORD PTR [eax+0x1e],0x6e15eea4
  401f6b:	cmovge ebp,DWORD PTR [edx]
  401f6e:	xor    ah,ch
  401f70:	pop    esi
  401f71:	jnp    0x401fe6
  401f73:	nop
  401f74:	sub    ebx,0xffffffeb
  401f77:	pop    es
  401f78:	fwait
  401f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7a:	mov    ds:0xdce6f7,al
  401f7f:	mul    DWORD PTR [ecx-0x1c]
  401f82:	dec    ebx
  401f83:	mov    dh,0x2f
  401f85:	cdq    
  401f86:	call   0xc5ecc361
  401f8b:	stos   BYTE PTR es:[edi],al
  401f8c:	lods   eax,DWORD PTR ds:[esi]
  401f8d:	add    ebp,ebp
  401f8f:	loopne 0x401fa7
  401f91:	jp     0x401f20
  401f93:	imul   eax,DWORD PTR [esi+0x24c75a08],0xfffffffe
  401f9a:	or     eax,0xda0220d0
  401f9f:	mov    cl,0x5e
  401fa1:	test   eax,0xcca188c7
  401fa6:	scas   eax,DWORD PTR es:[edi]
  401fa7:	sahf   
  401fa8:	sbb    ecx,DWORD PTR [ebp-0x1f]
  401fab:	jbe    0x402026
  401fad:	sub    BYTE PTR [ecx],0xcc
  401fb0:	call   0xa17dabba
  401fb5:	cld    
  401fb6:	not    BYTE PTR [edx]
  401fb8:	cli    
  401fb9:	imul   ecx,DWORD PTR [esi-0x492917f0],0xb4f9bcc9
  401fc3:	pop    esi
  401fc4:	mov    cl,0x26
  401fc6:	cmp    ebp,esi
  401fc8:	arpl   WORD PTR [edi],dx
  401fca:	xrelease xchg BYTE PTR [ecx],bh
  401fcd:	in     al,0x65
  401fcf:	loope  0x402021
  401fd1:	push   0x42
  401fd3:	sub    al,0xf3
  401fd5:	sub    BYTE PTR [ebx],al
  401fd7:	cmp    BYTE PTR ds:0x941896b3,ch
  401fdd:	or     DWORD PTR [ecx-0x12],0x864f19bc
  401fe4:	push   esi
  401fe5:	mov    ds:0xcdd8a00,eax
  401fea:	sbb    al,0xd6
  401fec:	cmp    al,0xd5
  401fee:	mov    ah,0x15
  401ff0:	shl    BYTE PTR [ebx],cl
  401ff2:	outs   dx,BYTE PTR ds:[esi]
  401ff3:	shl    eax,0xf3
  401ff6:	fwait
  401ff7:	mov    di,0xdf1d
  401ffb:	cmp    ebp,DWORD PTR [ebx+edx*4+0x64]
  401fff:	or     BYTE PTR [esi+0x5b478b43],bl
  402005:	inc    eax
  402006:	shl    BYTE PTR [edi],1
  402008:	idiv   DWORD PTR [esi]
  40200a:	push   edi
  40200b:	sahf   
  40200c:	data16 out dx,al
  40200e:	aad    0xda
  402010:	aam    0x9c
  402012:	call   0x3b1b:0xfd4ead03
  402019:	pop    es
  40201a:	and    cl,ch
  40201c:	mov    al,ds:0x3f344c5c
  402021:	jp     0x40200d
  402023:	adc    eax,0x54991d36
  402028:	ret    
  402029:	fbld   TBYTE PTR [ebp-0x4a]
  40202c:	(bad)  
  40202d:	js     0x402063
  40202f:	(bad)  
  402030:	rol    DWORD PTR [eax+ebx*2],1
  402033:	adc    ah,cl
  402035:	call   0xc9e0146a
  40203a:	popa   
  40203b:	rol    DWORD PTR [ebx],0x7
  40203e:	push   cs
  40203f:	adc    cl,BYTE PTR [edi+edi*8-0x1a]
  402043:	cmp    ebx,DWORD PTR [esi]
  402045:	adc    ebx,DWORD PTR [ecx+0x6baa9685]
  40204b:	jg     0x40203a
  40204d:	sbb    BYTE PTR [edx+edx*8-0x35edcc8c],0x7
  402055:	sub    al,0xf4
  402057:	mov    bh,0x16
  402059:	std    
  40205a:	out    dx,al
  40205b:	test   al,0xa9
  40205d:	pop    eax
  40205e:	out    0x24,al
  402060:	add    eax,0x7d1c9e43
  402065:	pop    es
  402066:	repz adc esp,DWORD PTR [esi+0x65db854f]
  40206d:	push   esi
  40206e:	cmp    al,0xe
  402070:	push   eax
  402071:	jecxz  0x4020ac
  402073:	mov    bh,0x97
  402075:	pushf  
  402076:	mov    esp,0xa4b1221d
  40207b:	fldcw  WORD PTR [esi+0x31]
  40207e:	dec    esi
  40207f:	push   esi
  402080:	inc    esp
  402081:	aad    0x8b
  402083:	push   ds
  402084:	and    al,0xbd
  402086:	sti    
  402087:	imul   eax,DWORD PTR [ecx-0x7bb79404],0x3e
  40208e:	adc    edx,DWORD PTR [ebx+0x41828567]
  402094:	inc    esp
  402095:	in     al,dx
  402096:	cmp    ebx,ebx
  402098:	xchg   edi,eax
  402099:	and    eax,DWORD PTR [ecx-0x7]
  40209c:	(bad)
  40209f:	shr    DWORD PTR [eax],0x58
  4020a2:	nop
  4020a3:	sbb    BYTE PTR [edx],al
  4020a5:	out    0x5c,eax
  4020a7:	mul    DWORD PTR [esp+edx*2]
  4020aa:	imul   ebp,DWORD PTR [ebx-0x3d],0x1e
  4020ae:	imul   esi,ecx,0x32
  4020b1:	and    DWORD PTR [ebp+0x2c667ea6],edi
  4020b7:	or     DWORD PTR [edx-0xe],0x69
  4020bb:	jecxz  0x402073
  4020bd:	jne    0x4020cf
  4020bf:	pop    ebx
  4020c0:	fcomi  st,st(1)
  4020c2:	dec    edi
  4020c3:	jle    0x402084
  4020c5:	xchg   esi,eax
  4020c6:	mov    edx,0x52a1d70c
  4020cb:	pop    eax
  4020cc:	ret    
  4020cd:	jl     0x4020e5
  4020cf:	and    ebx,ebp
  4020d1:	pop    edx
  4020d2:	mov    BYTE PTR [ebp+esi*2+0x46],0x5
  4020d7:	cmp    eax,0x1c6bcb12
  4020dc:	mov    bh,0x7d
  4020de:	enter  0x3d77,0xb8
  4020e2:	in     al,0x2c
  4020e4:	push   0x71
  4020e6:	jecxz  0x402137
  4020e8:	scas   eax,DWORD PTR es:[edi]
  4020e9:	jnp    0x402128
  4020eb:	push   esi
  4020ec:	mov    cl,0x4
  4020ee:	jecxz  0x402113
  4020f0:	xor    dl,ah
  4020f2:	call   0x3f65:0x86429e6b
  4020f9:	ror    esp,1
  4020fb:	ret    
  4020fc:	repnz lods al,BYTE PTR ds:[esi]
  4020fe:	and    eax,0x892df238
  402103:	pushf  
  402104:	out    dx,eax
  402105:	sub    eax,0x73c20565
  40210a:	fucomi st,st(0)
  40210c:	jge    0x40218b
  40210e:	rcl    DWORD PTR [eax+0x23b7a567],0x8a
  402115:	lea    edi,ds:0x9310be8f
  40211b:	retf   0xc84b
  40211e:	adc    ch,BYTE PTR [edi]
  402120:	pop    ecx
  402121:	call   0x5ac0:0xa84584d
  402128:	fs cmc 
  40212a:	aaa    
  40212b:	popf   
  40212c:	cmp    ecx,DWORD PTR [eax+0x5b]
  40212f:	lods   al,BYTE PTR ds:[esi]
  402130:	pushf  
  402131:	stos   BYTE PTR es:[edi],al
  402132:	popf   
  402133:	sub    eax,0x5f38e11d
  402138:	mov    edx,0xab728dd6
  40213d:	dec    eax
  40213e:	pop    esi
  40213f:	aad    0xce
  402141:	mov    ebp,0x3f215074
  402146:	jnp    0x402144
  402148:	outs   dx,BYTE PTR ds:[esi]
  402149:	aad    0xb1
  40214b:	cmp    eax,0x6192848e
  402150:	pop    edx
  402151:	sbb    al,0xfc
  402153:	jmp    0xc930:0x873d52b3
  40215a:	add    al,0x68
  40215c:	es pop eax
  40215e:	mov    ecx,0xe38100ce
  402163:	or     BYTE PTR [esi+0x4b531e04],dh
  402169:	imul   ebx,DWORD PTR [ecx+0x68],0x2aa86d0
  402170:	js     0x402185
  402172:	push   esp
  402173:	shl    DWORD PTR [ebx+0x74070fbe],1
  402179:	and    eax,0xd56c15af
  40217e:	xor    al,0x12
  402180:	xchg   BYTE PTR [eax],al
  402182:	aaa    
  402183:	sub    BYTE PTR [ecx+0x2],ah
  402186:	adc    BYTE PTR [edx+0xe5d7f5d],bl
  40218c:	mov    ds:0xbe704198,al
  402191:	pop    es
  402192:	pop    ebp
  402193:	cmp    DWORD PTR [ecx+0x4e343eb9],esp
  402199:	(bad)  gs:[esi]
  40219c:	icebp  
  40219d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40219e:	adc    ch,bl
  4021a0:	xor    al,0x4d
  4021a2:	test   BYTE PTR [esi],bl
  4021a4:	pop    ds
  4021a5:	adc    DWORD PTR [ebx+0x21866870],esi
  4021ab:	(bad)
  4021af:	lds    edi,FWORD PTR [ebx]
  4021b1:	das    
  4021b2:	fdivr  DWORD PTR ds:0xd6227af7
  4021b8:	mov    edx,0x79b5d06c
  4021bd:	scas   al,BYTE PTR es:[edi]
  4021be:	add    eax,0xb45d2a65
  4021c3:	cwde   
  4021c4:	add    al,BYTE PTR [edi]
  4021c6:	fbstp  TBYTE PTR [ebx]
  4021c8:	or     al,0xca
  4021ca:	cmp    eax,0x39ea13e4
  4021cf:	pop    ebx
  4021d0:	call   0xb5b4:0x86040f28
  4021d7:	ss fdivr st,st(0)
  4021da:	loop   0x4021dd
  4021dc:	sub    BYTE PTR [eax-0x2979f5f6],ah
  4021e2:	lds    esi,FWORD PTR [ebp+0x65]
  4021e5:	fild   QWORD PTR [ebx-0x27]
  4021e8:	fwait
  4021e9:	add    al,0xea
  4021eb:	addr16 cmp al,0x85
  4021ee:	jl     0x4021f1
  4021f0:	loope  0x4021bb
  4021f2:	ds mov ah,0x98
  4021f5:	int3   
  4021f6:	in     eax,0xbc
  4021f8:	fwait
  4021f9:	dec    eax
  4021fa:	push   eax
  4021fb:	shl    DWORD PTR [eax],1
  4021fd:	adc    al,0x4f
  4021ff:	cmc    
  402200:	sub    al,0x95
  402202:	and    BYTE PTR [ebx],bh
  402204:	mov    ds:0x25f4d48f,eax
  402209:	dec    eax
  40220a:	jge    0x402215
  40220c:	cmp    eax,0xd99e0b3f
  402211:	push   ebx
  402212:	test   eax,0xe8d8761a
  402217:	or     eax,DWORD PTR [esi+0xe]
  40221a:	cmp    cl,ch
  40221c:	jecxz  0x40229c
  40221e:	sbb    ebx,DWORD PTR [eax-0x49]
  402221:	pop    ss
  402222:	aas    
  402223:	add    edx,DWORD PTR [eax-0x30591d36]
  402229:	mov    ebx,0x8d766f39
  40222e:	lods   eax,DWORD PTR ds:[esi]
  40222f:	mov    esi,DWORD PTR [ebp+0x24793bcd]
  402235:	pop    es
  402236:	push   ds
  402237:	aam    0xda
  402239:	push   esp
  40223a:	pop    ebp
  40223b:	push   eax
  40223c:	push   0x69031935
  402241:	push   es
  402242:	mov    ds:0xc3d9706a,eax
  402247:	mov    esi,0x798483a5
  40224c:	loopne 0x402208
  40224e:	pop    ecx
  40224f:	cmp    DWORD PTR [edi+0x7b],0x99fe185c
  402256:	push   ds
  402257:	sbb    ebx,esi
  402259:	fisubr DWORD PTR [edi+0x63]
  40225c:	in     eax,dx
  40225d:	js     0x40222b
  40225f:	iret   
  402260:	pcmpgtw mm7,QWORD PTR [eax]
  402263:	jp     0x402266
  402265:	xchg   esi,eax
  402266:	jle    0x402202
  402268:	leave  
  402269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40226a:	mov    ss,esi
  40226c:	outs   dx,BYTE PTR ds:[esi]
  40226d:	pushf  
  40226e:	xor    dl,0xb2
  402271:	jno    0x40223f
  402273:	sbb    BYTE PTR [esi-0x42],dh
  402276:	hlt    
  402277:	adc    eax,DWORD PTR [edi+0x2b788316]
  40227d:	lea    esi,[edi+ebp*2-0x3a5b4996]
  402284:	(bad)  
  402285:	mov    dh,0x38
  402287:	lea    esp,ds:0x1c07a3b1
  40228d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40228e:	pop    esp
  40228f:	mov    ecx,0xad007c5e
  402294:	int3   
  402295:	int    0xd1
  402297:	das    
  402298:	pop    ds
  402299:	clc    
  40229a:	jge    0x40221d
  40229c:	xlat   BYTE PTR ds:[ebx]
  40229d:	sub    al,0x52
  40229f:	leave  
  4022a0:	or     BYTE PTR [edi+0x1bcb888],0xb6
  4022a7:	enter  0x34d,0xcc
  4022ab:	xchg   edx,eax
  4022ac:	stos   BYTE PTR es:[edi],al
  4022ad:	inc    ebp
  4022ae:	xchg   edx,eax
  4022af:	call   0xf5b5:0x206abf9b
  4022b6:	call   0x251b:0xf5e761f8
  4022bd:	mov    eax,DWORD PTR [ecx-0x6f]
  4022c0:	rol    BYTE PTR [ebx-0x1d766406],1
  4022c6:	adc    ebp,eax
  4022c8:	jne    0x402301
  4022ca:	jg     0x40231c
  4022cc:	pop    edi
  4022cd:	add    dh,bh
  4022cf:	not    DWORD PTR [edi-0x7a]
  4022d2:	std    
  4022d3:	lea    edi,ds:0x4610ead9
  4022d9:	pop    eax
  4022da:	adc    ecx,ecx
  4022dc:	addr16 push es
  4022de:	fstp   DWORD PTR [ebp+ebp*1-0x31]
  4022e2:	pop    ebx
  4022e3:	or     esp,DWORD PTR [ebp-0x5a]
  4022e6:	fs add edx,esp
  4022e9:	mov    ecx,0xbf53e3f0
  4022ee:	xor    eax,0x6c943a7f
  4022f3:	mov    bl,0x6d
  4022f5:	or     edi,DWORD PTR [ebx-0x12cd7a78]
  4022fb:	int3   
  4022fc:	test   eax,0x9d5e44d9
  402301:	jo     0x4022b5
  402303:	sub    ah,dl
  402305:	mov    dl,0x34
  402307:	int    0xc3
  402309:	push   esp
  40230a:	out    dx,eax
  40230b:	pop    ecx
  40230c:	sub    BYTE PTR fs:[esi-0x7d745513],bh
  402313:	mov    cl,0x1a
  402315:	or     al,0xb6
  402317:	xchg   DWORD PTR [ecx+0x41ede3a5],esp
  40231d:	mov    al,ds:0x55cb3e7e
  402322:	xor    ch,cl
  402324:	xchg   BYTE PTR [eax],ah
  402326:	dec    edi
  402327:	and    DWORD PTR [esp+edx*8],esi
  40232a:	cmc    
  40232b:	and    al,0x59
  40232d:	sub    ah,BYTE PTR [eax-0x49774c81]
  402333:	mov    ebx,0x2459cc87
  402338:	pop    ds
  402339:	outs   dx,BYTE PTR ds:[esi]
  40233a:	inc    edi
  40233b:	and    cl,bl
  40233d:	add    DWORD PTR [edi-0x3a4def10],ebp
  402343:	mov    al,ds:0x73b36fd2
  402348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402349:	sbb    DWORD PTR cs:[ebx],eax
  40234c:	jnp    0x4022cf
  40234e:	dec    esp
  40234f:	or     al,0x1f
  402351:	and    DWORD PTR [ecx+0x4fd48c9d],0x5efb68df
  40235b:	lods   al,BYTE PTR ds:[esi]
  40235c:	sbb    dl,BYTE PTR [eax-0x50]
  40235f:	inc    eax
  402360:	xor    DWORD PTR [ecx+0x1c],ebp
  402363:	mov    ebx,0xbae7840b
  402368:	fisttp QWORD PTR [edx]
  40236a:	push   esi
  40236b:	repz loop 0x402347
  40236e:	xchg   esi,eax
  40236f:	dec    esp
  402370:	sbb    al,cl
  402372:	test   BYTE PTR [edx],dl
  402374:	aas    
  402375:	or     eax,0x6ce53260
  40237a:	mov    esi,0xe3de1f37
  40237f:	std    
  402380:	add    edi,ecx
  402382:	(bad)  
  402384:	pop    ss
  402385:	inc    ebx
  402386:	dec    edx
  402387:	lods   eax,DWORD PTR ds:[esi]
  402388:	in     al,dx
  402389:	mov    edx,0xcea3d6a2
  40238e:	cmp    bh,BYTE PTR ds:0x5f83b5c2
  402394:	inc    edx
  402395:	loopne 0x4023ac
  402397:	jnp    0x40237d
  402399:	ffreep st(6)
  40239b:	push   ss
  40239c:	fs sbb esi,esi
  40239f:	pop    ebp
  4023a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023a1:	hlt    
  4023a2:	mov    eax,0x367c2ddb
  4023a7:	ins    BYTE PTR es:[edi],dx
  4023a8:	mov    edx,0xce2e9731
  4023ad:	loopne 0x40236b
  4023af:	dec    eax
  4023b0:	add    ecx,esp
  4023b2:	xlat   BYTE PTR ds:[ebx]
  4023b3:	sbb    esi,ebp
  4023b5:	adc    ah,bl
  4023b7:	mov    al,0xc7
  4023b9:	mov    dh,0x16
  4023bb:	jnp    0x4023bf
  4023bd:	(bad)  
  4023bf:	in     eax,0xb1
  4023c1:	xlat   BYTE PTR ds:[ebx]
  4023c2:	gs xchg bl,al
  4023c5:	les    ecx,FWORD PTR [ebx+0x55]
  4023c8:	and    BYTE PTR [ebx+0x4ae2559d],bh
  4023ce:	outs   dx,BYTE PTR es:[esi]
  4023d0:	xchg   ebx,eax
  4023d1:	(bad)  [edx-0x5b52d58a]
  4023d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d8:	cmp    eax,0x7f2deb98
  4023dd:	daa    
  4023de:	aas    
  4023df:	jecxz  0x40240c
  4023e1:	nop
  4023e2:	mov    dl,0xf5
  4023e4:	cs xchg ebp,esp
  4023e7:	mov    ch,0xcb
  4023e9:	adc    BYTE PTR [esi+esi*8],dh
  4023ec:	icebp  
  4023ed:	push   edi
  4023ee:	add    BYTE PTR [eax+0x1a57caef],0x3e
  4023f5:	add    al,0xb3
  4023f7:	add    esi,eax
  4023f9:	pop    edx
  4023fa:	mov    bh,0x28
  4023fc:	sti    
  4023fd:	pop    ebx
  4023fe:	in     al,0xad
  402400:	mov    ds:0xe15659b4,al
  402405:	cld    
  402406:	clc    
  402407:	pop    edi
  402408:	hlt    
  402409:	mov    esi,DWORD PTR [esi+0x144de9d6]
  40240f:	verr   WORD PTR [eax]
  402412:	nop
  402413:	push   ss
  402414:	jae    0x4023da
  402416:	jbe    0x4023e8
  402418:	data16 sti 
  40241a:	sbb    esi,esp
  40241c:	pop    esi
  40241d:	cs aad 0xd4
  402420:	addr16 hlt 
  402422:	xchg   edi,eax
  402423:	retf   
  402424:	pop    esp
  402425:	mov    ch,BYTE PTR [ebp-0x4d798351]
  40242b:	cmp    ah,BYTE PTR [ecx+0x7e]
  40242e:	(bad)  
  40242f:	and    edi,ebp
  402431:	xor    al,0x9a
  402433:	pop    ebx
  402434:	push   ss
  402435:	pop    ebx
  402436:	into   
  402437:	sar    BYTE PTR [edi+esi*2-0x51],cl
  40243b:	pop    edi
  40243c:	int3   
  40243d:	sub    ecx,esi
  40243f:	xor    ch,BYTE PTR [eax+0x57495f38]
  402445:	dec    ecx
  402446:	rcl    DWORD PTR [edi-0x1e],cl
  402449:	push   ecx
  40244a:	mov    edx,0x7dd69990
  40244f:	push   edi
  402450:	les    ebx,FWORD PTR [ebp-0x3e]
  402453:	push   esi
  402454:	aad    0xf5
  402456:	aas    
  402457:	gs jp  0x402452
  40245a:	rcl    DWORD PTR [esi],cl
  40245c:	imul   eax,DWORD PTR [esi-0x12],0x7d
  402460:	fnstcw WORD PTR [ecx*8-0x1028624c]
  402467:	mov    ?,WORD PTR [edx]
  402469:	out    0x6f,eax
  40246b:	xchg   ebx,eax
  40246c:	mov    esi,0xb6029f5
  402471:	cmp    bh,ah
  402473:	and    dh,BYTE PTR [eax+0xc]
  402476:	shl    ebx,1
  402478:	lods   al,BYTE PTR ds:[esi]
  402479:	adc    edi,DWORD PTR ss:[edx+0x7b]
  40247d:	fnsetpm(287 only) 
  40247f:	dec    esi
  402480:	popa   
  402481:	inc    esp
  402482:	push   ecx
  402483:	imul   eax,DWORD PTR [ebx-0x2e],0xffffffa3
  402487:	push   ss
  402488:	xchg   ebp,eax
  402489:	mov    dh,0xde
  40248b:	jae    0x40241d
  40248d:	fimul  DWORD PTR [edx]
  40248f:	clc    
  402490:	nop
  402491:	fs ja  0x402436
  402494:	lods   eax,DWORD PTR ds:[esi]
  402495:	mov    cl,BYTE PTR [edi-0x10]
  402498:	jb     0x4024d6
  40249a:	fwait
  40249b:	sbb    edx,DWORD PTR [edx+ebp*2+0x73]
  40249f:	or     ebp,DWORD PTR [ecx+0x119f1303]
  4024a5:	lock xor al,0x9a
  4024a8:	pop    ecx
  4024a9:	xlat   BYTE PTR ds:[ebx]
  4024aa:	test   DWORD PTR [edi-0x7d17ba1e],edx
  4024b0:	ja     0x4024cf
  4024b2:	fstp   QWORD PTR [ebx-0x5df5b065]
  4024b8:	push   esi
  4024b9:	mov    ebp,0xc8a6f714
  4024be:	xchg   DWORD PTR [edi],eax
  4024c0:	adc    ax,0x5619
  4024c4:	mov    DWORD PTR [esi-0x1dda8b1],ecx
  4024ca:	test   eax,0xddd259d1
  4024cf:	aaa    
  4024d0:	(bad)  
  4024d1:	cli    
  4024d2:	fild   WORD PTR [eax]
  4024d4:	xlat   BYTE PTR ds:[ebx]
  4024d5:	les    ebx,FWORD PTR [esi+0x773067d2]
  4024db:	pop    ss
  4024dc:	adc    ah,ch
  4024de:	cmp    dl,BYTE PTR [ecx+0x672d95e3]
  4024e4:	cs test al,0xeb
  4024e7:	and    esp,edx
  4024e9:	jle    0x402546
  4024eb:	test   DWORD PTR [edx-0x7e],esp
  4024ee:	push   ebp
  4024ef:	pop    ss
  4024f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f1:	xor    ch,BYTE PTR [eax-0x49a01ff7]
  4024f7:	out    dx,al
  4024f8:	pushf  
  4024f9:	inc    BYTE PTR [ebp+0x5bc1afb7]
  4024ff:	pop    es
  402500:	mov    eax,0x82a56115
  402505:	and    DWORD PTR [esi+0x71e20068],ebp
  40250b:	ja     0x4024d8
  40250d:	mov    dh,0xd0
  40250f:	mov    al,ds:0xcc4bb1c0
  402514:	adc    cl,al
  402516:	mov    ecx,0xa9a268c4
  40251b:	jecxz  0x402500
  40251d:	inc    esi
  40251e:	test   al,0x34
  402520:	sub    BYTE PTR [edi-0x225a207d],dh
  402526:	pushf  
  402527:	fnstenv [ebx]
  402529:	je     0x40252b
  40252b:	call   0x77a2:0xe932c730
  402532:	in     eax,0xb2
  402534:	fwait
  402535:	jns    0x40259c
  402537:	ret    0xd3d2
  40253a:	xchg   DWORD PTR ds:0x9114a6d5,ebp
  402540:	xchg   ebx,eax
  402541:	test   ebx,ebp
  402543:	mov    esi,0xf0c0d293
  402548:	pop    ebp
  402549:	xor    esi,edi
  40254b:	add    ah,BYTE PTR [ecx-0x6c798adc]
  402551:	mov    ebx,0x3d895846
  402556:	or     bl,BYTE PTR [eax+eiz*2-0x4011a2a9]
  40255d:	mov    eax,ds:0x1a8d5338
  402562:	push   esp
  402563:	jecxz  0x4025e1
  402565:	leave  
  402566:	aam    0x8f
  402568:	(bad)  
  402569:	jnp    0x4025e2
  40256b:	sub    ecx,DWORD PTR [ebx-0x33]
  40256e:	pushf  
  40256f:	test   ebx,edx
  402571:	fld    TBYTE PTR [ecx]
  402573:	cmp    ebx,edi
  402575:	jmp    0x4025f4
  402577:	sub    esi,DWORD PTR [eax+0x49dee715]
  40257d:	mov    edi,ecx
  40257f:	mov    cl,0xa5
  402581:	hlt    
  402582:	xor    ebp,DWORD PTR [ebp+0x60]
  402585:	cli    
  402586:	inc    ecx
  402587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402588:	add    dl,BYTE PTR [ebx-0x6b]
  40258b:	hlt    
  40258c:	or     al,BYTE PTR [edi]
  40258e:	(bad)  
  40258f:	pop    ds
  402590:	loope  0x402512
  402592:	ret    0x9c07
  402595:	jnp    0x402530
  402597:	stc    
  402598:	push   0x946616eb
  40259d:	push   ebx
  40259e:	ja     0x40258d
  4025a0:	pandn  mm3,QWORD PTR [eax-0x213f7303]
  4025a7:	xchg   ebx,eax
  4025a8:	push   ebp
  4025a9:	sbb    esp,DWORD PTR [ecx+0x76301daa]
  4025af:	rol    BYTE PTR [esi+edi*2],1
  4025b2:	mov    ds:0x737ef040,eax
  4025b7:	jae    0x402621
  4025b9:	sub    bh,BYTE PTR [esp+ecx*2]
  4025bc:	fisub  WORD PTR [esi]
  4025be:	mov    ecx,0xf9a835c
  4025c3:	push   esp
  4025c4:	mov    al,0x72
  4025c6:	cs dec esp
  4025c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c9:	test   al,0x20
  4025cb:	lahf   
  4025cc:	sub    DWORD PTR [edi-0x6d44a4f9],edx
  4025d2:	cmp    eax,0x2c06c514
  4025d7:	cwde   
  4025d8:	inc    ebp
  4025d9:	aaa    
  4025da:	add    al,0x72
  4025dc:	cdq    
  4025dd:	dec    ecx
  4025de:	ins    DWORD PTR es:[edi],dx
  4025df:	jmp    0x8ebf:0x4e3d2f95
  4025e6:	sub    dh,BYTE PTR [esp+edx*8-0x1ae5e007]
  4025ed:	fstp   DWORD PTR [ecx]
  4025ef:	addr16 xchg al,dl
  4025f2:	bound  ebx,QWORD PTR [edx]
  4025f4:	xor    al,0x40
  4025f6:	dec    edi
  4025f7:	dec    ecx
  4025f8:	xor    DWORD PTR [ebp+ebp*1-0x7422aa04],esi
  4025ff:	fisubr WORD PTR [eax+edi*8-0xc]
  402603:	xchg   BYTE PTR [ebx+0x90238bd],al
  402609:	fs sbb ebx,esp
  40260c:	mov    al,0xda
  40260e:	inc    ecx
  40260f:	xor    BYTE PTR [ebx-0x35],dl
  402612:	ss adc al,0x5d
  402615:	hlt    
  402616:	pop    es
  402617:	add    ah,al
  402619:	mov    DWORD PTR [eax],edi
  40261b:	cdq    
  40261c:	sbb    al,0xad
  40261e:	out    0x22,eax
  402620:	sub    bl,bl
  402622:	cmp    eax,0x8e3077d8
  402627:	and    dl,ch
  402629:	cs sbb BYTE PTR es:[edx-0x49],ah
  40262e:	sahf   
  40262f:	mov    cl,0xe7
  402631:	dec    esp
  402632:	inc    DWORD PTR [edx+0x785ddb0b]
  402638:	lods   al,BYTE PTR ds:[esi]
  402639:	sbb    al,0x69
  40263b:	mov    edi,0x534d756d
  402640:	test   esp,eax
  402642:	inc    eax
  402643:	or     BYTE PTR [ebx],ah
  402645:	xchg   ah,dh
  402647:	xor    al,0x62
  402649:	cdq    
  40264a:	dec    ecx
  40264b:	and    BYTE PTR [esi-0x7def1143],0xd6
  402652:	(bad)  
  402653:	sbb    BYTE PTR [ecx],dh
  402655:	push   es
  402656:	push   es
  402657:	mov    cl,0x28
  402659:	repz push edi
  40265b:	sar    BYTE PTR [esi-0xdd634bb],1
  402661:	xor    BYTE PTR [esi+0x70014c9d],bh
  402667:	inc    eax
  402668:	jle    0x402606
  40266a:	pop    ss
  40266b:	xlat   BYTE PTR ds:[ebx]
  40266c:	dec    edx
  40266d:	adc    DWORD PTR [eax+ebx*2],0x7ca19ae2
  402674:	add    BYTE PTR ds:0x103154c2,al
  40267a:	dec    esi
  40267b:	(bad)  
  40267c:	jmp    0x4026ad
  40267e:	jb     0x4026ac
  402680:	repnz dec eax
  402682:	xchg   ebp,eax
  402683:	int    0xb
  402685:	adc    BYTE PTR [eax+0x371ff58c],dl
  40268b:	pushf  
  40268c:	jp     0x4026de
  40268e:	xchg   ebp,eax
  40268f:	cmp    ch,BYTE PTR [eax]
  402691:	push   ebx
  402692:	jnp    0x402700
  402694:	and    eax,0x7e36f74
  402699:	sub    edx,DWORD PTR [eax-0x5dcc5c33]
  40269f:	scas   al,BYTE PTR es:[edi]
  4026a0:	sbb    DWORD PTR [ebp+0x17],ebx
  4026a3:	clc    
  4026a4:	sbb    al,0xd2
  4026a6:	inc    esp
  4026a7:	push   ds
  4026a8:	in     al,dx
  4026a9:	pop    esp
  4026aa:	cmp    ebp,DWORD PTR gs:[edi+0x55c7fb09]
  4026b1:	loopne 0x402647
  4026b3:	mov    edx,0x6dd9b17
  4026b8:	inc    eax
  4026b9:	xor    BYTE PTR [esi],cl
  4026bb:	mov    bl,0xd
  4026bd:	pop    esi
  4026be:	inc    edx
  4026bf:	cmp    al,BYTE PTR [edx-0x3d]
  4026c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026c3:	mov    ecx,DWORD PTR [ebp+0x1add4986]
  4026c9:	inc    esi
  4026ca:	mov    bh,0x68
  4026cc:	inc    eax
  4026cd:	pop    es
  4026ce:	loop   0x4026d4
  4026d0:	(bad)  
  4026d1:	out    dx,eax
  4026d2:	mov    ebx,0xe862aa8f
  4026d7:	sahf   
  4026d8:	in     eax,0x47
  4026da:	mov    cl,0xdd
  4026dc:	mov    bl,BYTE PTR [ebx-0x3d]
  4026df:	xchg   ecx,eax
  4026e0:	imul   esp,DWORD PTR [edi-0x75d1a7b3],0x69578d44
  4026ea:	sub    BYTE PTR [ebx],dh
  4026ec:	and    BYTE PTR [ebx-0x34edeb75],0x60
  4026f3:	pop    edx
  4026f4:	cli    
  4026f5:	fisub  DWORD PTR [esi-0x5b4427ab]
  4026fb:	aam    0xd9
  4026fd:	or     al,0xa1
  4026ff:	pop    eax
  402700:	test   BYTE PTR [esi],ch
  402702:	lds    esp,FWORD PTR [edx+ebx*1-0x25c6c451]
  402709:	mov    ch,0xfe
  40270b:	fadd   DWORD PTR [ebx+0x2d]
  40270e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40270f:	scas   eax,DWORD PTR es:[edi]
  402710:	and    eax,0x9b7c5ccc
  402715:	sub    al,0x9d
  402717:	in     al,0x41
  402719:	fwait
  40271a:	bswap  ebp
  40271c:	cdq    
  40271d:	movups xmm7,xmm2
  402720:	dec    edx
  402721:	ficom  DWORD PTR [eax-0x48bcb1ac]
  402727:	out    0xe9,al
  402729:	xchg   ecx,eax
  40272a:	in     eax,0x9d
  40272c:	mov    ah,0xf5
  40272e:	push   ss
  40272f:	out    0xb3,eax
  402731:	ds push es
  402733:	scas   al,BYTE PTR es:[edi]
  402734:	and    al,0xe2
  402736:	cmp    eax,0x256ed4f0
  40273b:	mov    ecx,0xe8fdc617
  402740:	pusha  
  402741:	std    
  402742:	xor    ecx,ebx
  402744:	mov    cl,0xea
  402746:	je     0x4026d4
  402748:	add    al,BYTE PTR [ecx-0xe]
  40274b:	icebp  
  40274c:	jns    0x4027a3
  40274e:	sahf   
  40274f:	fstp   TBYTE PTR [edx+0x637671fc]
  402755:	adc    BYTE PTR [ecx],ah
  402757:	fld    TBYTE PTR [ebp+0x10758670]
  40275d:	xor    BYTE PTR [esi-0x1],0x8
  402761:	retf   0x9004
  402764:	mov    bh,BYTE PTR [esi-0x3ba7845c]
  40276a:	lock jbe 0x402762
  40276d:	or     eax,0xe6796740
  402772:	js     0x4027f2
  402774:	push   esi
  402775:	mov    al,ds:0x34206a50
  40277a:	(bad)  
  40277b:	not    BYTE PTR [eax+0x5ee19acf]
  402781:	bound  edi,QWORD PTR [ebp-0x68e7a4ac]
  402787:	adc    BYTE PTR [eax-0x7f],cl
  40278a:	aaa    
  40278b:	mov    cl,0x0
  40278d:	(bad)  
  40278e:	iret   
  40278f:	push   eax
  402790:	pop    ebp
  402791:	pop    ecx
  402792:	mov    ds:0x7be5f2be,al
  402797:	les    edx,FWORD PTR [ebx]
  402799:	ins    DWORD PTR es:[edi],dx
  40279a:	ret    
  40279b:	and    dl,BYTE PTR [ecx+0x57]
  40279e:	repnz push ds
  4027a0:	add    BYTE PTR [ecx],dl
  4027a2:	push   ebx
  4027a3:	fst    DWORD PTR [eax+ebx*8-0x1f]
  4027a7:	dec    ebp
  4027a8:	and    al,BYTE PTR [edx+ebx*1-0x243ab046]
  4027af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b0:	std    
  4027b1:	fisub  WORD PTR cs:[edx+0x5c]
  4027b5:	dec    edi
  4027b6:	cli    
  4027b7:	mov    ds:0xa187bd33,al
  4027bc:	xchg   edi,eax
  4027bd:	sbb    edi,DWORD PTR [eax+0x6d]
  4027c0:	imul   DWORD PTR [eax]
  4027c2:	cdq    
  4027c3:	and    eax,0xf5ecb4ab
  4027c8:	dec    ebx
  4027c9:	in     al,dx
  4027ca:	sbb    al,0x6a
  4027cc:	xchg   DWORD PTR [edi+0x7009df74],eax
  4027d2:	mov    ah,0x98
  4027d4:	and    bl,bl
  4027d6:	cmp    DWORD PTR [edi-0x6],esp
  4027d9:	nop
  4027da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027db:	push   ss
  4027dc:	push   esi
  4027dd:	in     eax,dx
  4027de:	mov    ecx,edi
  4027e0:	ret    
  4027e1:	pop    ebp
  4027e2:	out    dx,al
  4027e3:	cmp    al,0x8c
  4027e5:	cmp    DWORD PTR [ebp+ecx*2-0x57],edx
  4027e9:	jbe    0x4027c1
  4027eb:	pop    eax
  4027ec:	test   al,0xbc
  4027ee:	push   ds
  4027ef:	scas   eax,DWORD PTR es:[edi]
  4027f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f1:	das    
  4027f2:	mov    edx,0xc2d15931
  4027f7:	dec    ecx
  4027f8:	pop    edi
  4027f9:	adc    bl,BYTE PTR [esi+0x2fdb26c6]
  4027ff:	push   eax
  402800:	inc    edx
  402801:	xlat   BYTE PTR ds:[ebx]
  402802:	cmovno ebp,DWORD PTR [eax-0x8]
  402806:	dec    bl
  402808:	adc    ecx,DWORD PTR [ecx]
  40280a:	jg     0x4027b7
  40280c:	or     BYTE PTR [esi-0x70],al
  40280f:	stos   DWORD PTR es:[edi],eax
  402810:	xor    DWORD PTR [ebp-0x7e3dab1],edi
  402816:	mov    al,0xec
  402818:	out    dx,al
  402819:	pusha  
  40281a:	aam    0x43
  40281c:	mov    es,eax
  40281e:	ds scas eax,DWORD PTR es:[edi]
  402820:	or     bh,BYTE PTR [ebx+0x22]
  402823:	out    dx,eax
  402824:	daa    
  402825:	xlat   BYTE PTR ds:[ebx]
  402826:	pop    es
  402827:	sbb    al,0x83
  402829:	inc    esi
  40282a:	aas    
  40282b:	and    al,0xf4
  40282d:	xchg   esi,eax
  40282e:	mov    al,0xbc
  402830:	push   esp
  402831:	pop    ecx
  402832:	mov    DWORD PTR [eax+0x2a0c4308],edi
  402838:	stos   BYTE PTR es:[edi],al
  402839:	neg    BYTE PTR [esp+edx*8+0x14]
  40283d:	inc    edx
  40283e:	add    eax,0x77fe0c07
  402843:	adc    ebp,edx
  402845:	lods   eax,DWORD PTR ds:[esi]
  402846:	xchg   edx,eax
  402847:	jns    0x4028c2
  402849:	cwde   
  40284a:	or     BYTE PTR [edx-0xa],0x37
  40284e:	fldenv [edi+ebx*8]
  402851:	scas   eax,DWORD PTR es:[edi]
  402852:	retf   0xbd99
  402855:	fiadd  WORD PTR [esi+0x41]
  402858:	repz bound edx,QWORD PTR [ebx+0x727668da]
  40285f:	mov    edx,0x1292ca9c
  402864:	jne    0x4027f4
  402866:	lock popa 
  402868:	test   BYTE PTR [esi-0x2b],bh
  40286b:	stc    
  40286c:	outs   dx,BYTE PTR ds:[esi]
  40286d:	bound  esi,QWORD PTR [edx-0x1]
  402870:	or     DWORD PTR [edi-0x6dcc8280],0xe068680a
  40287a:	mov    WORD PTR [edi+0x6f],?
  40287d:	push   0x49
  40287f:	jg     0x4028bc
  402881:	pop    esi
  402882:	fcom   QWORD PTR [esi]
  402884:	nop
  402885:	iret   
  402886:	sub    eax,0x1726d0d7
  40288b:	or     DWORD PTR [edi],edx
  40288d:	test   bl,dh
  40288f:	popa   
  402890:	push   0x2c4b8b58
  402895:	dec    ebx
  402896:	push   ecx
  402897:	sbb    ebx,ebx
  402899:	mov    eax,0x90c7911
  40289e:	add    eax,0x736be1c2
  4028a3:	fdiv   QWORD PTR [eax-0x4b]
  4028a6:	add    al,0x1c
  4028a8:	adc    al,0x6
  4028aa:	rcl    DWORD PTR [eax+edx*4+0x52],cl
  4028ae:	das    
  4028af:	js     0x402901
  4028b1:	or     BYTE PTR ds:0xae55d3d5,bl
  4028b7:	nop
  4028b8:	leave  
  4028b9:	dec    esi
  4028ba:	mov    esi,0x7bcc05fa
  4028bf:	add    BYTE PTR [ecx+eax*4-0x532f2ebd],ch
  4028c6:	cmp    cl,al
  4028c8:	lods   eax,DWORD PTR ss:[esi]
  4028ca:	sbb    BYTE PTR ds:0xc2d70b4e,dh
  4028d1:	fdiv   DWORD PTR es:0xdfb977b
  4028d8:	out    0xff,eax
  4028da:	push   ebp
  4028db:	or     ecx,DWORD PTR [esi+0x4beb7a5c]
  4028e1:	mov    eax,ds:0x9bb38c90
  4028e6:	or     bh,bh
  4028e8:	add    ebx,esi
  4028ea:	mov    ebp,0xb0326a83
  4028ef:	jl     0x40293a
  4028f1:	dec    ebx
  4028f2:	inc    ebp
  4028f3:	xchg   edi,eax
  4028f4:	mov    dl,0x8d
  4028f6:	pop    ds
  4028f7:	in     eax,0x91
  4028f9:	xor    DWORD PTR [edi-0x237760e],0xffffffc1
  402900:	xchg   ebp,eax
  402901:	test   BYTE PTR [ebx],ah
  402903:	iret   
  402904:	jmp    0x4028ff
  402906:	add    eax,0x63c51b1b
  40290b:	repnz lds eax,FWORD PTR [ecx-0x56abce]
  402912:	inc    edx
  402913:	and    bl,BYTE PTR ds:0x95cb64f3
  402919:	xor    ch,bh
  40291b:	mov    ecx,0xb60c459c
  402920:	jp     0x402978
  402922:	push   0xd80846c2
  402927:	jp     0x4028fc
  402929:	add    BYTE PTR [edx-0xdc650c1],0x1f
  402930:	cmc    
  402931:	jl     0x4028d9
  402933:	les    esp,FWORD PTR [edx]
  402935:	dec    edx
  402936:	aaa    
  402937:	fs sub esi,edi
  40293a:	jno    0x4028da
  40293c:	int    0xe5
  40293e:	rcl    BYTE PTR [edx],cl
  402940:	jl     0x4029a9
  402942:	fwait
  402943:	inc    ebp
  402944:	rol    ah,1
  402946:	xlat   BYTE PTR ds:[ebx]
  402947:	push   ss
  402948:	loop   0x40295b
  40294a:	dec    edi
  40294b:	adc    BYTE PTR [ebx+0x18],bl
  40294e:	gs xchg ebp,eax
  402950:	inc    esp
  402951:	dec    eax
  402952:	push   0xffffffa4
  402954:	hlt    
  402955:	pop    es
  402956:	mov    ds:0xaeeaefed,al
  40295b:	loopne 0x402996
  40295d:	loop   0x4029cb
  40295f:	xchg   ebx,eax
  402960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402961:	mov    WORD PTR [esi+0x4f],?
  402964:	cli    
  402965:	lahf   
  402966:	push   es
  402967:	sbb    ch,BYTE PTR [eax]
  402969:	into   
  40296a:	pop    ebx
  40296b:	push   ebx
  40296c:	loopne 0x402980
  40296e:	sbb    edi,DWORD PTR ds:0x5daa9b15
  402974:	out    dx,al
  402975:	add    eax,0x28bd45ab
  40297a:	hlt    
  40297b:	sub    bh,BYTE PTR [ebx+0x6f]
  40297e:	cs nop
  402980:	fwait
  402981:	or     BYTE PTR [esp+eax*4+0x54],dl
  402985:	push   ecx
  402986:	dec    ebp
  402987:	dec    edx
  402988:	add    ebp,eax
  40298a:	pop    ebx
  40298b:	and    DWORD PTR [ecx],0xffffff8c
  40298e:	fstp   TBYTE PTR [ecx]
  402990:	test   al,bh
  402992:	pop    edx
  402993:	dec    eax
  402994:	pop    ds
  402995:	lods   eax,DWORD PTR ds:[esi]
  402996:	jmp    0xa12b:0x4cf8c33
  40299d:	sbb    BYTE PTR [eax+0x116e4318],ah
  4029a3:	adc    eax,0x318893ec
  4029a8:	jecxz  0x40298a
  4029aa:	cmc    
  4029ab:	jne    0x4029e9
  4029ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ae:	shr    esp,1
  4029b0:	cmp    DWORD PTR [esi+0x18fd9634],edi
  4029b6:	test   eax,0x7b57256e
  4029bb:	push   eax
  4029bc:	addr16 xchg esi,eax
  4029be:	jno    0x4029ed
  4029c0:	mov    edi,0xc50cbdbd
  4029c5:	fiadd  DWORD PTR [ebx]
  4029c7:	add    BYTE PTR [esi+0x38],cl
  4029ca:	stos   DWORD PTR es:[edi],eax
  4029cb:	xlat   BYTE PTR ds:[ebx]
  4029cc:	shr    BYTE PTR [ebp+0x2630fbdc],cl
  4029d2:	mov    ebp,0xa88a6592
  4029d7:	call   0xa3db:0xcec5e2d3
  4029de:	sbb    BYTE PTR [ecx+0x558b553c],ch
  4029e4:	xor    DWORD PTR [esi+ecx*4],ebx
  4029e7:	sub    DWORD PTR [ecx-0x3e],esi
  4029ea:	imul   eax,edx,0xd80a7d5d
  4029f0:	aam    0xdd
  4029f2:	repnz arpl WORD PTR [eax+0x22],dx
  4029f6:	adc    esi,esp
  4029f8:	mov    BYTE PTR [edx],ah
  4029fa:	inc    esi
  4029fb:	in     al,dx
  4029fc:	rcr    DWORD PTR [edi+0x142cffd9],cl
  402a02:	add    eax,0xa66a469f
  402a07:	lahf   
  402a08:	in     al,0x30
  402a0a:	fnstenv [edx+0x24b5f720]
  402a10:	pop    ebp
  402a11:	icebp  
  402a12:	fcom   QWORD PTR [ecx-0x5ba8ae56]
  402a18:	pop    edi
  402a19:	pop    edi
  402a1a:	and    dl,ch
  402a1c:	bound  ebp,QWORD PTR [edi+0x51cf9c89]
  402a22:	(bad)  
  402a23:	shl    DWORD PTR [edi+0x56b02408],1
  402a29:	in     al,dx
  402a2a:	or     BYTE PTR [ebx-0x4511e3de],0xff
  402a31:	scas   eax,DWORD PTR es:[edi]
  402a32:	jmp    0xf492:0x55ecc585
  402a39:	mov    edx,DWORD PTR ds:0x7f5adedf
  402a3f:	jecxz  0x402a5c
  402a41:	pop    esp
  402a42:	mov    bh,0xb4
  402a44:	jbe    0x402a7c
  402a46:	mov    edx,0xc858865a
  402a4b:	ret    
  402a4c:	loope  0x402a2d
  402a4e:	push   0xffffff83
  402a50:	jnp    0x402a34
  402a52:	stos   BYTE PTR es:[edi],al
  402a53:	pop    ecx
  402a54:	test   al,0xed
  402a56:	icebp  
  402a57:	sub    DWORD PTR [ebx+0x26c324fb],0x17
  402a5e:	sbb    DWORD PTR [edi+edx*8+0x23],ebp
  402a62:	add    al,0x5b
  402a64:	sbb    dh,BYTE PTR [edx+0x6922ee39]
  402a6a:	es sub al,0x24
  402a6d:	sbb    bh,BYTE PTR ss:[ecx+0x7f]
  402a71:	or     eax,0x1a2e8a9b
  402a76:	mov    gs,WORD PTR [esp+ebx*4+0x1638f5dd]
  402a7d:	mov    esi,0x856676e2
  402a82:	cmp    BYTE PTR [ebx*1-0x6953d95f],dl
  402a89:	push   0xffffff83
  402a8b:	adc    eax,0xdcb94150
  402a90:	mov    esp,0xc1fa5969
  402a95:	xchg   edx,eax
  402a96:	adc    DWORD PTR [edx-0x27],ecx
  402a99:	rol    BYTE PTR [ebx+0x634f42c],cl
  402a9f:	xor    eax,0xdd04eeea
  402aa4:	jae    0x402b05
  402aa6:	cmp    eax,0xbf3a85a2
  402aab:	inc    esi
  402aac:	xchg   DWORD PTR [esi-0x69],ebx
  402aaf:	pushf  
  402ab0:	dec    edx
  402ab1:	push   ebx
  402ab2:	les    edx,FWORD PTR [ecx]
  402ab4:	gs jb  0x402b0b
  402ab7:	add    al,BYTE PTR [edi]
  402ab9:	shr    ecx,cl
  402abb:	jnp    0x402a63
  402abd:	adc    DWORD PTR [ecx],0x69
  402ac0:	pop    ebp
  402ac1:	xchg   ecx,eax
  402ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ac3:	mov    ds:0xc0e1d30e,al
  402ac8:	loopne 0x402b01
  402aca:	stos   BYTE PTR es:[edi],al
  402acb:	cmp    al,0x4a
  402acd:	add    BYTE PTR [eax],bl
  402acf:	jne    0x402b26
  402ad1:	loope  0x402a78
  402ad3:	imul   edi,DWORD PTR [esi-0x79],0x957e00e4
  402ada:	pop    esp
  402adb:	push   edx
  402adc:	sahf   
  402add:	lock mov eax,0x4c062f88
  402ae3:	popf   
  402ae4:	aad    0x87
  402ae6:	dec    esi
  402ae7:	sub    dh,cl
  402ae9:	mov    ecx,0x1c6d1005
  402aee:	mov    ecx,0xd9f6fbb6
  402af3:	int    0x76
  402af5:	cdq    
  402af6:	add    eax,0x37a3f1e3
  402afb:	xchg   esp,eax
  402afc:	adc    DWORD PTR [eax+0x1a46e1ad],ebx
  402b02:	ja     0x402af1
  402b04:	fimul  WORD PTR [esi+edx*8]
  402b07:	(bad)  
  402b08:	push   edx
  402b09:	and    DWORD PTR [edi+0x31445fdd],ecx
  402b0f:	pop    ecx
  402b10:	mov    BYTE PTR [edx-0x1],al
  402b13:	add    ecx,DWORD PTR [ecx-0x48]
  402b16:	cmp    BYTE PTR [ecx+ebx*1],ah
  402b19:	std    
  402b1a:	fst    QWORD PTR [ebp-0x34]
  402b1d:	mov    bl,0xd1
  402b1f:	lds    ecx,FWORD PTR [esi-0x292a7eff]
  402b25:	imul   edx,DWORD PTR [esi+ebx*4],0xfffffff7
  402b29:	nop
  402b2a:	cmp    DWORD PTR [ecx+ebp*2-0x4],0xffffffd7
  402b2f:	inc    ebp
  402b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b31:	jbe    0x402b7a
  402b33:	inc    BYTE PTR [esi]
  402b35:	mov    ebx,0x85ef9bb5
  402b3a:	xor    DWORD PTR [ebx+0x48],eax
  402b3d:	call   DWORD PTR [edx+0x2c1a3912]
  402b43:	mov    al,0x42
  402b45:	mov    ch,0x72
  402b47:	mov    ds:0x891c865e,al
  402b4c:	jo     0x402bc6
  402b4e:	inc    ebx
  402b4f:	out    0x2a,al
  402b51:	mov    ch,0xf7
  402b53:	cmp    eax,0x4a3c49ba
  402b58:	dec    edi
  402b59:	ret    
  402b5a:	push   eax
  402b5b:	enter  0x710a,0xe7
  402b5f:	or     esp,DWORD PTR [ebp+ecx*1+0x61]
  402b63:	cld    
  402b64:	add    esi,DWORD PTR [edi-0x43]
  402b67:	inc    ecx
  402b68:	or     DWORD PTR [esi],edi
  402b6a:	and    BYTE PTR [edx+edi*8],ch
  402b6d:	ror    DWORD PTR [ebx],0x49
  402b70:	lods   eax,DWORD PTR ds:[esi]
  402b71:	dec    ebx
  402b72:	and    DWORD PTR [eax+0x710cfc41],0xa1afe98f
  402b7c:	test   al,0x6d
  402b7e:	mov    bl,0x8c
  402b80:	jp     0x402bb8
  402b82:	out    0x50,al
  402b84:	xchg   edi,eax
  402b85:	(bad)  
  402b87:	ds mov ch,0x6d
  402b8a:	les    eax,FWORD PTR [ebp-0x25e04441]
  402b90:	inc    edi
  402b91:	mov    eax,ds:0xd17760b3
  402b96:	rcl    DWORD PTR [edx-0x3bde0e64],1
  402b9c:	(bad)  
  402b9e:	push   ebx
  402b9f:	sti    
  402ba0:	and    BYTE PTR [esi+ebp*2+0x4],bh
  402ba4:	and    al,BYTE PTR [esi]
  402ba6:	sub    al,0x1a
  402ba8:	stc    
  402ba9:	cmp    ebp,esi
  402bab:	inc    edi
  402bac:	inc    ebx
  402bad:	pop    ebp
  402bae:	pop    es
  402baf:	push   esp
  402bb0:	jnp    0x402bab
  402bb2:	or     edx,edx
  402bb4:	stc    
  402bb5:	cdq    
  402bb6:	add    edi,DWORD PTR [ebp-0x5c]
  402bb9:	iret   
  402bba:	into   
  402bbb:	dec    edx
  402bbc:	cmp    cl,BYTE PTR ds:0xf8b85bbc
  402bc2:	xchg   edi,eax
  402bc3:	pop    esi
  402bc4:	mov    cl,0xdf
  402bc6:	or     DWORD PTR [ecx+0x41],ebx
  402bc9:	mov    esp,0x1f8bb535
  402bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcf:	or     DWORD PTR [eax+0x675fb6eb],eax
  402bd5:	js     0x402bb5
  402bd7:	sub    dl,dh
  402bd9:	pop    esp
  402bda:	rcr    DWORD PTR cs:[ebp-0x6b145163],cl
  402be1:	(bad)  
  402be2:	push   esp
  402be3:	mov    esp,0xfaa69db2
  402be8:	or     cl,dl
  402bea:	push   esi
  402beb:	aam    0x71
  402bed:	fidivr WORD PTR [ebx]
  402bef:	hlt    
  402bf0:	xor    al,0x7a
  402bf2:	leave  
  402bf3:	mov    al,0xaf
  402bf5:	xor    eax,0x53c09b50
  402bfa:	lods   al,BYTE PTR ds:[esi]
  402bfb:	inc    eax
  402bfc:	cs and al,0xcb
  402bff:	call   0x4612:0x794824ea
  402c06:	sub    ebp,DWORD PTR [eax-0x35]
  402c09:	push   cs
  402c0a:	into   
  402c0b:	pop    edi
  402c0c:	sbb    al,0x8b
  402c0e:	loope  0x402c27
  402c10:	xchg   DWORD PTR [ebp-0x9356046],eax
  402c16:	(bad)  
  402c17:	pop    ebp
  402c18:	adc    eax,0xe8e67006
  402c1d:	push   ebx
  402c1e:	xchg   ecx,eax
  402c1f:	int    0x35
  402c21:	sti    
  402c22:	or     bh,BYTE PTR [esp+eax*4]
  402c25:	sbb    al,0x5
  402c27:	push   es
  402c28:	pusha  
  402c29:	call   0x57aa:0x7bd4162b
  402c30:	sahf   
  402c31:	scas   al,BYTE PTR es:[edi]
  402c32:	dec    ebp
  402c33:	in     al,dx
  402c34:	xor    BYTE PTR [eax+0x5e754c4],ah
  402c3a:	fwait
  402c3b:	mov    al,ds:0xcc9b738a
  402c40:	jecxz  0x402c11
  402c42:	call   0x5a67a7a9
  402c47:	mov    ebx,0x76d80412
  402c4c:	shr    DWORD PTR [ecx],cl
  402c4e:	mov    al,ch
  402c50:	es aaa 
  402c52:	dec    ebp
  402c53:	scas   al,BYTE PTR es:[edi]
  402c54:	mov    eax,0x426fa899
  402c59:	out    dx,al
  402c5a:	cmp    al,al
  402c5c:	mov    edi,0x8a681c80
  402c61:	in     eax,dx
  402c62:	jp     0x402c98
  402c64:	dec    edx
  402c65:	stos   BYTE PTR es:[edi],al
  402c66:	fisubr DWORD PTR ds:0xb321b43d
  402c6c:	int    0x30
  402c6e:	mov    edx,0xcaa8b580
  402c73:	dec    ebp
  402c74:	pop    edx
  402c75:	inc    edx
  402c76:	or     BYTE PTR [ebp-0xb],bl
  402c79:	adc    al,0x4a
  402c7b:	and    al,0xa0
  402c7d:	mov    bl,0xe3
  402c7f:	mov    esp,0xecefb5f9
  402c84:	inc    edi
  402c85:	pop    ds
  402c86:	jecxz  0x402ca0
  402c88:	(bad)  
  402c89:	sbb    dl,BYTE PTR [ebx+0x330ef1c3]
  402c8f:	xchg   ecx,eax
  402c90:	js     0x402c1d
  402c92:	pusha  
  402c93:	jl     0x402cc3
  402c95:	test   esi,edi
  402c97:	pop    edx
  402c98:	(bad)  
  402c9a:	dec    ebx
  402c9b:	cmp    esp,ebp
  402c9d:	fist   DWORD PTR [ebp-0x741f7675]
  402ca3:	nop
  402ca4:	outs   dx,BYTE PTR ds:[esi]
  402ca5:	(bad)  
  402ca7:	dec    ecx
  402ca8:	retf   0xe191
  402cab:	fimul  DWORD PTR [edi+0x521cd372]
  402cb1:	(bad)  
  402cb2:	dec    ebx
  402cb3:	xchg   ebx,eax
  402cb4:	dec    ebx
  402cb5:	lea    ecx,ds:[edx+ebx*2]
  402cb9:	jmp    0x214a:0x6ad8f205
  402cc0:	pop    ebp
  402cc1:	sti    
  402cc2:	fmul   QWORD PTR ds:[eax+0x6e262ff8]
  402cc9:	jl     0x402d3b
  402ccb:	les    edi,FWORD PTR [ebx+0x1eb77ba]
  402cd1:	outs   dx,DWORD PTR ds:[esi]
  402cd2:	repnz mov BYTE PTR [edi],bh
  402cd5:	mov    bl,0x9
  402cd7:	xchg   ebx,eax
  402cd8:	fs add eax,0x9300a0e4
  402cde:	and    eax,0x4164bcaa
  402ce3:	push   0x6a2c0fff
  402ce8:	and    al,0x4d
  402cea:	pop    eax
  402ceb:	xor    al,0x33
  402ced:	mov    al,0xd6
  402cef:	(bad)  
  402cf0:	fist   DWORD PTR [ebx+0x236258fa]
  402cf6:	mov    ds:0x3e95508,al
  402cfb:	inc    edi
  402cfc:	fistp  DWORD PTR [ebx]
  402cfe:	mov    ah,0x23
  402d00:	call   0x5662:0xcaf5c041
  402d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d08:	(bad)  
  402d09:	adc    BYTE PTR [ebp-0x251d31df],dh
  402d0f:	test   BYTE PTR [ebx+ebp*4-0x30bc0411],al
  402d16:	xor    al,0x3d
  402d18:	aad    0x5a
  402d1a:	push   ebx
  402d1b:	test   ebx,0xde7ebc8d
  402d21:	shl    DWORD PTR [ecx-0x4],1
  402d24:	les    edi,FWORD PTR [ebx]
  402d26:	loop   0x402d64
  402d28:	call   DWORD PTR [ebx-0x58]
  402d2b:	xor    esi,DWORD PTR [eax+0x1b]
  402d2e:	in     al,dx
  402d2f:	pop    edx
  402d30:	test   edx,0x12c9aeed
  402d36:	xor    DWORD PTR [esi],0xfffffff8
  402d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d3a:	xlat   BYTE PTR ds:[ebx]
  402d3b:	pop    ecx
  402d3c:	out    dx,eax
  402d3d:	iret   
  402d3e:	clc    
  402d3f:	pop    ss
  402d40:	mov    bh,BYTE PTR [ecx+esi*4-0x4d94e35f]
  402d47:	jne    0x402dc7
  402d49:	mov    cl,0x42
  402d4b:	xlat   BYTE PTR ds:[ebx]
  402d4c:	add    ebp,DWORD PTR [ebx+0x48]
  402d4f:	add    dl,BYTE PTR [esi]
  402d51:	mov    ds:0xa2d0731,eax
  402d56:	xor    al,BYTE PTR [ebp-0x62]
  402d59:	jmp    0x402dd0
  402d5b:	jne    0x402d00
  402d5d:	and    ecx,esi
  402d5f:	pushf  
  402d60:	mov    eax,0x2ea755e2
  402d65:	adc    BYTE PTR [ebp-0x5281cb5e],cl
  402d6b:	cs pop es
  402d6d:	adc    DWORD PTR [edi-0x4a93bd7d],esi
  402d73:	aas    
  402d74:	bound  ecx,QWORD PTR [esp+ebp*4]
  402d77:	scas   al,BYTE PTR es:[edi]
  402d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d79:	mov    ecx,0xe8550021
  402d7e:	in     eax,dx
  402d7f:	xor    ecx,DWORD PTR [ecx-0x7b]
  402d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d83:	push   0xca1dd8cb
  402d88:	fwait
  402d89:	xor    eax,0xc3f57c8e
  402d8e:	in     eax,dx
  402d8f:	outs   dx,DWORD PTR ds:[esi]
  402d90:	xor    dh,0x63
  402d93:	dec    ebx
  402d94:	in     al,dx
  402d95:	jp     0x402dc8
  402d97:	(bad)  
  402d98:	sbb    BYTE PTR [edi+0x350f2b13],ch
  402d9e:	fbld   TBYTE PTR [esi]
  402da0:	jbe    0x402d99
  402da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da3:	jmp    0x357f975d
  402da8:	and    eax,0xb5ea4ce1
  402dad:	in     eax,0xd5
  402daf:	inc    esi
  402db0:	test   BYTE PTR ds:[eax+0x7d302829],bh
  402db7:	mov    ds:0xd6d4db06,al
  402dbc:	popf   
  402dbd:	in     al,dx
  402dbe:	xchg   ebx,eax
  402dbf:	jb     0x402e3c
  402dc1:	sub    DWORD PTR [edx+eiz*2],0xeb88b945
  402dc8:	jns    0x402da7
  402dca:	pop    ds
  402dcb:	cdq    
  402dcc:	jb     0x402d53
  402dce:	aaa    
  402dcf:	jmp    DWORD PTR [edx+edi*4+0x23]
  402dd3:	xor    eax,0xe5b7e6a9
  402dd8:	mov    bh,BYTE PTR [ecx-0x66]
  402ddb:	xchg   edi,eax
  402ddc:	mov    ds:0x211da4d9,al
  402de1:	div    BYTE PTR [ecx]
  402de3:	(bad)  
  402de5:	sub    ah,bh
  402de7:	dec    esp
  402de8:	adc    eax,0x8dec002a
  402ded:	inc    edx
  402dee:	gs cmp eax,DWORD PTR es:[edx+0x499cc3e9]
  402df6:	jl     0x402e76
  402df8:	pusha  
  402df9:	or     edi,DWORD PTR [eax+0x38df3302]
  402dff:	xor    eax,0x7e1fb3b0
  402e04:	add    al,0xec
  402e06:	sbb    edi,eax
  402e08:	(bad)  
  402e09:	aad    0x93
  402e0b:	int3   
  402e0c:	xchg   ebx,eax
  402e0d:	pusha  
  402e0e:	mov    BYTE PTR [eax],ch
  402e10:	mov    ch,0xea
  402e12:	nop
  402e13:	jbe    0x402e24
  402e15:	xchg   edi,eax
  402e16:	and    ebx,edi
  402e18:	hlt    
  402e19:	lea    ecx,[ebp+esi*4+0x7e]
  402e1d:	jecxz  0x402db4
  402e1f:	or     dl,al
  402e21:	jmp    0x91b8781f
  402e26:	shl    BYTE PTR [ecx+0x60c5b092],cl
  402e2c:	or     bl,0x73
  402e2f:	(bad)  
  402e30:	push   ss
  402e31:	jbe    0x402ddd
  402e33:	inc    ebp
  402e34:	lea    ebx,[eax+eax*4+0x7124a863]
  402e3b:	dec    esp
  402e3c:	or     BYTE PTR [edi+0x2a],0x34
  402e40:	(bad)  
  402e41:	call   edx
  402e43:	mov    dl,0x36
  402e45:	bound  ebp,QWORD PTR [esi-0x336aebd0]
  402e4b:	retf   0x1fcd
  402e4e:	sub    bl,ch
  402e50:	popa   
  402e51:	xor    BYTE PTR [edx+0x7e],dh
  402e54:	dec    ecx
  402e55:	cdq    
  402e56:	ja     0x402e26
  402e58:	sub    DWORD PTR [esi],esi
  402e5a:	or     BYTE PTR [edx-0x4ba1187b],dh
  402e60:	inc    esi
  402e61:	mov    cl,0xdf
  402e63:	or     cl,BYTE PTR [esi+0xa1cde50]
  402e69:	cs (bad) 
  402e6c:	mov    ecx,0xf20bc085
  402e71:	sub    bh,BYTE PTR [edx]
  402e73:	repnz sbb al,BYTE PTR [ebp-0x52]
  402e77:	rol    esp,cl
  402e79:	imul   esi
  402e7b:	mov    ah,0x3c
  402e7d:	enter  0x3736,0xec
  402e81:	add    eax,0x747b4100
  402e86:	(bad)  
  402e87:	cmp    al,0x47
  402e89:	xor    eax,0x24bfc39e
  402e8e:	stos   BYTE PTR es:[edi],al
  402e8f:	mov    WORD PTR [edi-0x218e4407],gs
  402e95:	sub    ah,dl
  402e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e98:	xor    edx,esp
  402e9a:	adc    bl,BYTE PTR [eax]
  402e9c:	adc    eax,0x99e49c6
  402ea1:	and    al,0x3d
  402ea3:	cmc    
  402ea4:	add    al,0x8a
  402ea6:	retf   0x60d1
  402ea9:	imul   ecx,edi,0xffffff80
  402eac:	jmp    0x6dc5:0x552fef2e
  402eb3:	sub    eax,0xc10d38fe
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	shr    BYTE PTR [ebx-0x53],0x86
  402ebd:	cmp    DWORD PTR [edx+0x13],esi
  402ec0:	cmp    eax,0x5db6bd79
  402ec5:	(bad)  
  402ec6:	(bad)  
  402ec7:	sbb    ecx,DWORD PTR [edi+0x30cec9c3]
  402ecd:	dec    edi
  402ece:	ret    
  402ecf:	sbb    esi,DWORD PTR [ebx]
  402ed1:	mov    ah,0x59
  402ed3:	dec    esi
  402ed4:	push   es
  402ed5:	cmp    DWORD PTR ds:0xdcccbb,ebp
  402edb:	dec    edx
  402edc:	aam    0x97
  402ede:	mov    ecx,0x856a031c
  402ee3:	pushf  
  402ee4:	inc    ecx
  402ee5:	mov    ecx,0x93890da7
  402eea:	adc    cl,dl
  402eec:	mov    DWORD PTR [ebx-0x1b],ecx
  402eef:	call   0x29e9:0xf639813
  402ef6:	aam    0x52
  402ef8:	test   BYTE PTR [ebx+0x524218c0],ch
  402efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eff:	js     0x402ea0
  402f01:	dec    esi
  402f02:	xchg   cl,ah
  402f04:	fs jle 0x402f77
  402f07:	inc    esi
  402f08:	jnp    0x402f4b
  402f0a:	xor    eax,0x4a83bfe9
  402f0f:	icebp  
  402f10:	ret    0x15b4
  402f13:	jp     0x402ea1
  402f15:	stc    
  402f16:	leave  
  402f17:	imul   DWORD PTR [ebx-0x4]
  402f1a:	cmp    al,0xec
  402f1c:	fisub  DWORD PTR [esi-0x5b]
  402f1f:	jbe    0x402f5c
  402f21:	jmp    0x919c662b
  402f26:	or     BYTE PTR [edi+0x68],dl
  402f29:	jb     0x402ebc
  402f2b:	mov    edi,0x92af0b39
  402f30:	adc    ebx,DWORD PTR [esi+0x5f]
  402f33:	sub    esp,ebx
  402f35:	int3   
  402f36:	sbb    cl,BYTE PTR [ecx+0x5bc3792d]
  402f3c:	and    al,cl
  402f3e:	aam    0x25
  402f40:	das    
  402f41:	mov    ds:0xab703f71,al
  402f46:	pushf  
  402f47:	mov    ecx,0xcd4f8899
  402f4c:	retf   0xc927
  402f4f:	mov    bh,0x53
  402f51:	out    0x31,al
  402f53:	repnz arpl WORD PTR [eax+edi*8-0x163d6d00],bp
  402f5b:	xchg   ecx,eax
  402f5c:	mov    dh,0x7e
  402f5e:	test   BYTE PTR [ecx-0x4e6e7829],dh
  402f64:	and    eax,DWORD PTR ds:0xf18287e
  402f6a:	mov    ebx,0xabc6e23c
  402f6f:	dec    ebp
  402f70:	sbb    esi,ebp
  402f72:	arpl   dx,bp
  402f74:	fwait
  402f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f76:	cld    
  402f77:	cmp    eax,0xfd84f237
  402f7c:	sbb    al,dl
  402f7e:	pop    ecx
  402f7f:	mov    eax,ds:0x317c8dac
  402f84:	sub    eax,0x28eec94
  402f89:	dec    esi
  402f8a:	stos   DWORD PTR es:[edi],eax
  402f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8c:	jbe    0x402f50
  402f8e:	mov    ebx,esp
  402f90:	scas   al,BYTE PTR es:[edi]
  402f91:	mov    al,ds:0xcdeea348
  402f96:	mov    esp,0x272948f2
  402f9b:	shl    DWORD PTR [ebp-0x17],cl
  402f9e:	js     0x402fed
  402fa0:	or     al,0x46
  402fa2:	jle    0x402fed
  402fa4:	fbld   TBYTE PTR [edx-0x615fd65e]
  402faa:	dec    ecx
  402fab:	push   0xb
  402fad:	fist   WORD PTR [eax]
  402faf:	loope  0x402f3b
  402fb1:	out    0x35,al
  402fb3:	xor    al,0xd5
  402fb5:	call   0x7fa523f9
  402fba:	xchg   ebx,eax
  402fbb:	pusha  
  402fbc:	mov    ch,0x64
  402fbe:	sub    al,BYTE PTR [ebx]
  402fc0:	fidiv  WORD PTR [ecx-0x78]
  402fc3:	and    al,0x2b
  402fc5:	pop    esi
  402fc6:	or     al,0xa1
  402fc8:	stc    
  402fc9:	jp     0x402f61
  402fcb:	jl     0x403019
  402fcd:	xor    ah,dl
  402fcf:	mov    ecx,0x99ba4057
  402fd4:	sahf   
  402fd5:	les    edi,FWORD PTR [ecx]
  402fd7:	in     eax,0xdb
  402fd9:	pop    ecx
  402fda:	out    0xc1,eax
  402fdc:	jle    0x402f8e
  402fde:	mov    esi,0x860e41d2
  402fe3:	popf   
  402fe4:	add    DWORD PTR [edi+edx*4-0x74a976a2],eax
  402feb:	push   ebx
  402fec:	cmp    al,0xd6
  402fee:	and    dh,dl
  402ff0:	cmp    al,0x65
  402ff2:	add    al,0x20
  402ff4:	cmp    al,0xa4
  402ff6:	xchg   ecx,eax
  402ff7:	fcomp  DWORD PTR [esi+0x3d]
  402ffa:	sub    eax,0xc44a428
  402fff:	lock lahf 
  403001:	(bad)  
  403002:	and    BYTE PTR [ebx-0x10],ah
  403005:	pop    ebp
  403006:	sbb    bh,BYTE PTR [eax]
  403008:	mov    DWORD PTR cs:[ebx+edx*1+0x62c8d9b2],eax
  403010:	push   ecx
  403011:	dec    eax
  403012:	inc    ecx
  403013:	mov    bl,0xa6
  403015:	sub    esp,DWORD PTR [eax-0x5b]
  403018:	fidiv  WORD PTR [eax-0x5ee02519]
  40301e:	jmp    0xdb3d3b6a
  403023:	or     eax,0xeab033bf
  403028:	sar    dh,1
  40302a:	bound  ebp,QWORD PTR [ebx+ecx*8-0x19]
  40302e:	stos   DWORD PTR es:[edi],eax
  40302f:	mov    ch,0x45
  403031:	cmp    DWORD PTR [ebx+0x56],eax
  403034:	mov    al,ds:0xdefb7b93
  403039:	gs stc 
  40303b:	mov    ebp,0xafe84c05
  403040:	mov    BYTE PTR [ebp-0x2],ch
  403043:	call   DWORD PTR [edi+ebx*8]
  403046:	jge    0x40304f
  403048:	mov    eax,0x29d345b2
  40304d:	push   ebp
  40304e:	jae    0x403025
  403050:	mov    dh,0x7a
  403052:	dec    ebp
  403053:	icebp  
  403054:	into   
  403055:	je     0x402ff1
  403057:	cmp    edx,edx
  403059:	sub    BYTE PTR [eax+0x35],ah
  40305c:	push   esp
  40305d:	xor    esp,DWORD PTR [edx-0x71b616e9]
  403063:	scas   eax,DWORD PTR es:[edi]
  403064:	dec    edi
  403065:	mov    WORD PTR [edx+0x5ba03baf],?
  40306b:	xor    al,0xeb
  40306d:	lock mov ds:0xc6e269ab,al
  403073:	das    
  403074:	jge    0x403014
  403076:	xor    al,0xc2
  403078:	mov    dl,0x84
  40307a:	mov    bh,0xab
  40307c:	punpckhwd mm7,QWORD PTR [ebp+0x6f8e4e29]
  403083:	je     0x40307b
  403085:	dec    edx
  403086:	push   ds
  403087:	or     al,0x97
  403089:	fdiv   st(3),st
  40308b:	and    bh,BYTE PTR [edx-0x43]
  40308e:	and    eax,0x1d0e4abc
  403093:	mov    bh,dh
  403095:	dec    eax
  403096:	test   eax,eax
  403098:	fild   DWORD PTR [ecx+0x6dd7e243]
  40309e:	push   edi
  40309f:	test   BYTE PTR ds:0xa263039b,bl
  4030a5:	push   esp
  4030a6:	xchg   BYTE PTR [ebx],bh
  4030a8:	or     ebp,ebp
  4030aa:	pop    ds
  4030ab:	lea    esi,ds:0x487e826f
  4030b1:	lds    ebx,FWORD PTR [esp+edi*2-0x77]
  4030b5:	xor    DWORD PTR [ecx-0x25ffcbb3],ebp
  4030bb:	ja     0x403096
  4030bd:	sub    eax,0xdda8fec8
  4030c2:	sub    DWORD PTR [ecx+0x79],edx
  4030c5:	mov    cs,esi
  4030c7:	push   edi
  4030c8:	popa   
  4030c9:	jmp    0xfc7bafd2
  4030ce:	push   cs
  4030cf:	mov    edi,0x1378d97b
  4030d4:	rol    BYTE PTR [ebp+0x22],0xff
  4030d8:	jp     0x403088
  4030da:	sbb    esi,DWORD PTR [ebx+ecx*4-0x59b9db98]
  4030e1:	pop    esi
  4030e2:	adc    DWORD PTR [edx+eiz*8+0x1ccde55f],edx
  4030e9:	out    dx,eax
  4030ea:	jb     0x40311d
  4030ec:	mov    bh,0xd
  4030ee:	(bad)  
  4030f0:	push   ebx
  4030f1:	sub    eax,0xe756e08a
  4030f6:	mov    ds:0x59e4fc17,al
  4030fb:	add    al,0x27
  4030fd:	cmp    edi,esi
  4030ff:	sub    eax,0x82822874
  403104:	push   esi
  403105:	repnz pop ds
  403107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403108:	mov    bl,ch
  40310a:	pop    ecx
  40310b:	and    DWORD PTR [edi-0x20],esi
  40310e:	ds dec ebx
  403110:	mov    gs,ebp
  403112:	rcl    ah,cl
  403114:	les    edx,FWORD PTR [ecx]
  403116:	(bad)  
  403117:	jle    0x4030d5
  403119:	cmp    edx,DWORD PTR [ebx-0x3a]
  40311c:	dec    esi
  40311d:	pop    es
  40311e:	push   ss
  40311f:	retf   0x21b0
  403122:	in     al,dx
  403123:	xor    cl,BYTE PTR [ebp+0xd]
  403126:	or     edi,DWORD PTR [edx-0x7]
  403129:	ins    BYTE PTR es:[edi],dx
  40312a:	lds    eax,FWORD PTR [edi+0x20]
  40312d:	xchg   DWORD PTR ds:0x388bf656,edx
  403133:	aas    
  403134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403135:	in     eax,0x11
  403137:	mov    gs,WORD PTR [ecx+0x35b90fa0]
  40313d:	or     ebp,DWORD PTR ds:0xda30ae88
  403143:	es mov edi,0xa83e2696
  403149:	and    eax,0xd908db57
  40314e:	in     eax,0xb0
  403150:	daa    
  403151:	cmp    bh,BYTE PTR [ebx]
  403153:	ja     0x40317a
  403155:	aam    0xc3
  403157:	repnz cmc 
  403159:	inc    esp
  40315a:	jg     0x403118
  40315c:	gs push ecx
  40315e:	mov    cl,BYTE PTR [esi-0x6c]
  403161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403162:	outs   dx,DWORD PTR ds:[esi]
  403163:	push   cs
  403164:	clc    
  403165:	push   edx
  403166:	xor    DWORD PTR [ecx-0x3a31ea62],ebx
  40316c:	call   0x232b:0x369750eb
  403173:	xor    ch,BYTE PTR [edx-0x3f278879]
  403179:	ret    
  40317a:	push   0xf39b84ea
  40317f:	loop   0x403115
  403181:	pop    ebp
  403182:	inc    esi
  403183:	mov    esp,0xaa688838
  403188:	push   ss
  403189:	(bad)  
  40318a:	adc    al,0x8e
  40318c:	into   
  40318d:	pop    es
  40318e:	mov    bl,BYTE PTR [ebx]
  403190:	inc    ebp
  403191:	dec    DWORD PTR [ebp+0x11bc3271]
  403197:	fs jne 0x403157
  40319a:	push   ds
  40319b:	lock das 
  40319d:	mov    WORD PTR [ebp+0x7d],?
  4031a0:	xchg   ebx,eax
  4031a1:	jmp    0x81c5686d
  4031a6:	nop
  4031a7:	pop    esi
  4031a8:	outs   dx,BYTE PTR ds:[esi]
  4031a9:	add    ch,BYTE PTR [ebp-0x7710856c]
  4031af:	jp     0x4031bf
  4031b1:	pop    edx
  4031b2:	dec    ecx
  4031b3:	gs xchg ecx,eax
  4031b5:	xchg   ecx,eax
  4031b6:	jg     0x4031f5
  4031b8:	vmwrite edx,DWORD PTR ds:0xe8be59fe
  4031bf:	dec    esp
  4031c0:	xor    eax,0xc3287b29
  4031c5:	dec    esp
  4031c6:	stos   DWORD PTR es:[edi],eax
  4031c7:	out    0xd0,eax
  4031c9:	xor    DWORD PTR [ecx+0x301b7dae],ecx
  4031cf:	(bad)  
  4031d0:	adc    eax,0x325c9834
  4031d5:	addr16 push ebp
  4031d7:	or     al,0xaa
  4031d9:	dec    ecx
  4031da:	sti    
  4031db:	push   ebp
  4031dc:	adc    DWORD PTR [eax-0x6c73d058],ebx
  4031e2:	rcr    esp,1
  4031e4:	mov    ebp,0x21ad24de
  4031e9:	push   ecx
  4031ea:	inc    ecx
  4031eb:	shr    BYTE PTR [eax+0x2],0x53
  4031ef:	leave  
  4031f0:	pop    ds
  4031f1:	push   eax
  4031f2:	fwait
  4031f3:	loope  0x4031b3
  4031f5:	push   ss
  4031f6:	nop    DWORD PTR [edi+edx*1-0x2ced6106]
  4031fe:	test   BYTE PTR [edi-0x76860483],bh
  403204:	jnp    0x4031c2
  403206:	cmp    DWORD PTR [eax+0x365a9fc6],0x9e75ee19
  403210:	push   ss
  403211:	mov    ebp,0x4f0ad35a
  403216:	pop    edi
  403217:	ret    
  403218:	pop    ebp
  403219:	mov    edi,0xeb0d307
  40321e:	and    al,0x9b
  403220:	ficom  WORD PTR [eax+0x562de4c1]
  403226:	mov    ah,0x9e
  403228:	lock fst QWORD PTR [edi]
  40322b:	pop    edx
  40322c:	fcmovbe st,st(6)
  40322e:	adc    ecx,DWORD PTR [esi+0x2f94400c]
  403234:	or     eax,0xcfa022cc
  403239:	aad    0xa9
  40323b:	and    BYTE PTR [ebp+0x40],ch
  40323e:	adc    BYTE PTR [esi-0x24],al
  403241:	jno    0x403237
  403243:	lahf   
  403244:	mov    ds,WORD PTR [edx]
  403246:	data16 jns 0x40325b
  403249:	jmp    0x4032b4
  40324b:	aas    
  40324c:	push   ss
  40324d:	fwait
  40324e:	or     bh,BYTE PTR [eax-0x6cd58e1c]
  403254:	push   ss
  403255:	push   es
  403256:	gs loope 0x4031ee
  403259:	ins    DWORD PTR es:[edi],dx
  40325a:	ret    0x562c
  40325d:	inc    ebx
  40325e:	or     esp,DWORD PTR [ecx+eiz*4+0x4]
  403262:	fs inc esp
  403264:	fidivr WORD PTR [esi-0x20]
  403267:	xchg   edi,eax
  403268:	pop    ecx
  403269:	mov    cl,BYTE PTR [edx-0x3436a637]
  40326f:	adc    dl,al
  403271:	ss mov dh,0xcd
  403274:	mov    BYTE PTR [edi+0x3e],dh
  403277:	sub    BYTE PTR [eax-0x194a6a9c],dh
  40327d:	dec    ebp
  40327e:	hlt    
  40327f:	mov    WORD PTR [eax-0x79],fs
  403282:	jl     0x403230
  403284:	mov    ds:0xf40b3e38,eax
  403289:	push   ds
  40328a:	dec    eax
  40328b:	mov    ds:0xa8ea5128,al
  403290:	adc    edi,DWORD PTR [esp+esi*1]
  403293:	jne    0x4032c7
  403295:	rcl    DWORD PTR [ebp-0x6c],0x61
  403299:	mov    esi,DWORD PTR cs:[ebp+0x7ba6b330]
  4032a0:	fdivr  QWORD PTR [esi-0x766a7d54]
  4032a6:	js     0x4032b1
  4032a8:	and    ebx,eax
  4032aa:	aas    
  4032ab:	lds    ecx,FWORD PTR [esi+0x1e30d104]
  4032b1:	out    0xde,eax
  4032b3:	rol    dh,cl
  4032b5:	mov    DWORD PTR [ebx-0x25],ebp
  4032b8:	in     eax,0x1b
  4032ba:	cmp    eax,0xb63693aa
  4032bf:	in     eax,0x59
  4032c1:	mov    ds:0xcf895e03,eax
  4032c6:	clc    
  4032c7:	mov    eax,0x968887e3
  4032cc:	fwait
  4032cd:	adc    DWORD PTR [ebx+0x6d],0x60c86b99
  4032d4:	fsubrp st(6),st
  4032d6:	in     al,0xac
  4032d8:	data16 mov ds:0x530d1dc5,al
  4032de:	sti    
  4032df:	sub    eax,edx
  4032e1:	jg     0x403347
  4032e3:	int    0xab
  4032e5:	inc    ah
  4032e7:	jg     0x40328f
  4032e9:	add    esi,esi
  4032eb:	cmc    
  4032ec:	cmp    eax,0x929d8c75
  4032f1:	test   BYTE PTR [ebp-0x42],ch
  4032f4:	pop    eax
  4032f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032f6:	sub    DWORD PTR [ebp+0x37c6f92b],edi
  4032fc:	push   ds
  4032fd:	leave  
  4032fe:	pop    ss
  4032ff:	jne    0x4032fc
  403301:	repnz pop ebx
  403303:	outs   dx,DWORD PTR ds:[esi]
  403304:	ror    BYTE PTR [ecx+0x1f],0x6
  403308:	mov    bl,0x6a
  40330a:	add    DWORD PTR [ebx],esi
  40330c:	cld    
  40330d:	cli    
  40330e:	sub    DWORD PTR [esi+ecx*1+0x7460ce2a],0xffffff93
  403316:	sub    DWORD PTR [edi],eax
  403318:	mov    al,0x4a
  40331a:	sbb    BYTE PTR [ecx],0xad
  40331d:	aad    0x1
  40331f:	adc    BYTE PTR [edi-0x4c89dd0e],ah
  403325:	xchg   DWORD PTR [eax],eax
  403327:	fs sbb dh,dh
  40332a:	inc    esp
  40332b:	(bad)  
  40332c:	mov    bh,0x22
  40332e:	not    BYTE PTR [eax]
  403330:	xor    ebx,0xffffffd5
  403333:	cmp    BYTE PTR [ecx],bl
  403335:	lds    ebp,FWORD PTR [ebp-0x5a]
  403338:	aad    0x56
  40333a:	add    DWORD PTR [eax],ebp
  40333c:	jb     0x40335a
  40333e:	xor    al,0xa2
  403340:	dec    ebx
  403341:	push   esp
  403342:	sti    
  403343:	js     0x40337a
  403345:	inc    esi
  403346:	data16 jge 0x4032d7
  403349:	(bad)  
  40334a:	int3   
  40334b:	sub    ecx,DWORD PTR [edx+eax*1-0x2e1d355f]
  403352:	test   esi,0xd28a5b0e
  403358:	add    al,0x8d
  40335a:	and    dl,ch
  40335c:	add    al,BYTE PTR [edi]
  40335e:	push   cs
  40335f:	retf   
  403360:	add    esp,ebx
  403362:	cmp    DWORD PTR [edi-0x6f1e4ded],ebp
  403368:	ret    0x10f2
  40336b:	test   BYTE PTR [esi+0x50e3d87d],ch
  403371:	dec    esi
  403372:	jo     0x403398
  403374:	pop    esi
  403375:	sbb    bh,dl
  403377:	les    ebp,FWORD PTR [esi-0x67a8d911]
  40337d:	test   al,0x5b
  40337f:	ret    
  403380:	ins    BYTE PTR es:[edi],dx
  403381:	adc    al,dl
  403383:	sbb    eax,0xf6ae5710
  403388:	call   0x63e1:0xdf699f9f
  40338f:	adc    al,0x5c
  403391:	jnp    0x4033bc
  403393:	cwde   
  403394:	int    0x8a
  403396:	gs push ds
  403398:	retf   0x2435
  40339b:	mov    WORD PTR [ebx],?
  40339d:	int    0xdd
  40339f:	push   ecx
  4033a0:	jnp    0x403398
  4033a2:	loope  0x403397
  4033a4:	aam    0x10
  4033a6:	repz leave 
  4033a8:	scas   eax,DWORD PTR es:[edi]
  4033a9:	sub    dh,bl
  4033ab:	in     eax,dx
  4033ac:	xchg   BYTE PTR [eax],ah
  4033ae:	leave  
  4033af:	pushf  
  4033b0:	xchg   esi,eax
  4033b1:	repnz fwait
  4033b3:	int    0x1e
  4033b5:	ror    DWORD PTR [ecx],0x6c
  4033b8:	das    
  4033b9:	pop    ss
  4033ba:	or     bl,BYTE PTR [eax]
  4033bc:	js     0x40341e
  4033be:	xlat   BYTE PTR ds:[ebx]
  4033bf:	dec    edi
  4033c0:	pop    es
  4033c1:	leave  
  4033c2:	aad    0x72
  4033c4:	out    dx,al
  4033c5:	popa   
  4033c6:	mov    ds:0xd11781c6,eax
  4033cb:	lods   eax,DWORD PTR ds:[esi]
  4033cc:	and    ebx,DWORD PTR [ebp+0x4c1cddd8]
  4033d2:	jno    0x403411
  4033d4:	scas   eax,DWORD PTR es:[edi]
  4033d5:	int3   
  4033d6:	sar    DWORD PTR [eax-0xfd98d39],0xa4
  4033dd:	pop    ebx
  4033de:	dec    edi
  4033df:	fs jbe 0x403384
  4033e2:	xchg   esi,eax
  4033e3:	mov    dl,0xd
  4033e5:	hlt    
  4033e6:	inc    eax
  4033e7:	je     0x403429
  4033e9:	cmp    al,0x89
  4033eb:	and    BYTE PTR [ecx-0x26],0x1d
  4033ef:	retf   
  4033f0:	mov    edi,eax
  4033f2:	adc    eax,0xb7dbe499
  4033f7:	inc    ebx
  4033f8:	(bad)  
  4033f9:	sub    edx,ebx
  4033fb:	jnp    0x403392
  4033fd:	data16 or al,0xea
  403400:	hlt    
  403401:	cwde   
  403402:	retf   0xe838
  403405:	and    DWORD PTR [edx+0x71],ecx
  403408:	gs dec edi
  40340a:	out    0x22,eax
  40340c:	sar    BYTE PTR [edx+edi*2+0x23570711],0xb1
  403414:	out    0xc7,eax
  403416:	popf   
  403417:	xchg   esp,eax
  403418:	sar    BYTE PTR [ecx+0x2893fe9a],0x77
  40341f:	sti    
  403420:	outs   dx,DWORD PTR ds:[esi]
  403421:	inc    edi
  403422:	shl    DWORD PTR [eax+ebx*8],1
  403425:	mov    edi,0x84e82cf6
  40342a:	mov    ecx,DWORD PTR [edi+0x59]
  40342d:	pop    ss
  40342e:	popa   
  40342f:	fistp  WORD PTR [edx-0x65ff6962]
  403435:	adc    eax,edi
  403437:	punpckhwd mm4,QWORD PTR [esp+ebp*1+0x70]
  40343c:	divps  xmm6,xmm7
  40343f:	xchg   ecx,esp
  403441:	fcmovbe st,st(6)
  403443:	cmp    DWORD PTR [eax+edi*4],esp
  403446:	sbb    eax,0x3099136
  40344b:	inc    eax
  40344c:	hlt    
  40344d:	push   esp
  40344e:	dec    eax
  40344f:	push   ds
  403450:	inc    edi
  403451:	adc    ecx,edx
  403453:	xor    BYTE PTR [ecx+0x1],ch
  403456:	pop    ebp
  403457:	pusha  
  403458:	mov    cl,0x2b
  40345a:	bound  ebx,QWORD PTR [esi-0x21]
  40345d:	fwait
  40345e:	jae    0x403464
  403460:	dec    eax
  403461:	adc    ecx,ebx
  403463:	sub    al,0x53
  403465:	out    dx,eax
  403466:	xchg   ebx,eax
  403467:	(bad)  [ecx]
  403469:	cmp    ah,bh
  40346b:	inc    ecx
  40346c:	mov    eax,0x6ec171b3
  403471:	fild   QWORD PTR [ebx+0x49f94de5]
  403477:	pop    edi
  403478:	mov    bx,0x1fde
  40347c:	aad    0x9b
  40347e:	mov    ss,WORD PTR [edx]
  403480:	xor    al,0x40
  403482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403483:	dec    ecx
  403484:	lahf   
  403485:	lods   eax,DWORD PTR ds:[esi]
  403486:	rcr    DWORD PTR [edx+ebx*1+0x6cc1682f],1
  40348d:	sub    al,0xac
  40348f:	inc    esp
  403490:	aam    0x8f
  403492:	and    cl,BYTE PTR [edi+0x71]
  403495:	lods   al,BYTE PTR ds:[esi]
  403496:	push   es
  403497:	cld    
  403498:	test   BYTE PTR [ebx+0x3cb4b3a4],bh
  40349e:	add    dl,bl
  4034a0:	pop    es
  4034a1:	mov    WORD PTR [esi-0x29],?
  4034a4:	mov    ecx,0x4c8b21b5
  4034a9:	bts    esp,0xa7
  4034ad:	sub    DWORD PTR [si],eax
  4034b0:	repz xchg ebp,eax
  4034b2:	lock mov edx,DWORD PTR ss:[esi+ebx*1]
  4034b7:	sahf   
  4034b8:	adc    eax,0x8e8dc29c
  4034bd:	push   ecx
  4034be:	stc    
  4034bf:	xchg   esi,eax
  4034c0:	mov    esp,0xd8ed94ae
  4034c5:	stos   BYTE PTR es:[edi],al
  4034c6:	lods   al,BYTE PTR ds:[esi]
  4034c7:	push   es
  4034c8:	pop    es
  4034c9:	and    BYTE PTR ds:[edi],cl
  4034cc:	push   ds
  4034cd:	outs   dx,DWORD PTR ds:[esi]
  4034ce:	sbb    BYTE PTR [ecx+0x1c],dl
  4034d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d2:	sub    eax,0x925a3adc
  4034d7:	jno    0x40345f
  4034d9:	loope  0x40352e
  4034db:	leave  
  4034dc:	fsub   DWORD PTR [ebx-0x4f]
  4034df:	pusha  
  4034e0:	rcr    DWORD PTR [esi+0x63],0xef
  4034e4:	cmp    al,0xb4
  4034e6:	cs mov bl,0x4d
  4034e9:	ror    BYTE PTR [eax+0x2f],1
  4034ec:	jmp    FWORD PTR [edi]
  4034ee:	stos   BYTE PTR es:[edi],al
  4034ef:	xor    al,0x14
  4034f1:	outs   dx,BYTE PTR ds:[esi]
  4034f2:	(bad)  
  4034f3:	mov    ebx,0x7741011a
  4034f8:	cmp    DWORD PTR [eax-0x6],ecx
  4034fb:	fiadd  WORD PTR [ecx]
  4034fd:	mov    ecx,0x6538c186
  403502:	cmp    al,0x77
  403504:	adc    al,0xe4
  403506:	mov    al,ds:0x79e9abc5
  40350b:	mov    dh,dl
  40350d:	popa   
  40350e:	add    eax,DWORD PTR [ecx-0x2]
  403511:	and    eax,0xeea90ccb
  403516:	push   ecx
  403517:	adc    al,0xab
  403519:	jo     0x4034d4
  40351b:	inc    esp
  40351c:	jp     0x403575
  40351e:	arpl   WORD PTR [edi-0x8],dx
  403521:	jbe    0x40353e
  403523:	jne    0x403507
  403525:	test   DWORD PTR [edi-0x2a],eax
  403528:	pop    ds
  403529:	jmp    0xd4460798
  40352e:	push   edi
  40352f:	push   edi
  403530:	lods   al,BYTE PTR ds:[esi]
  403531:	sub    al,BYTE PTR ds:0x34290bd7
  403537:	mov    bh,0xab
  403539:	pop    ss
  40353a:	and    BYTE PTR [edx],ah
  40353c:	push   cs
  40353d:	pop    ebx
  40353e:	pop    edi
  40353f:	outs   dx,BYTE PTR ds:[esi]
  403540:	fs sti 
  403542:	test   BYTE PTR [eax],al
  403544:	mov    ds:0x16f9416a,al
  403549:	xor    edi,DWORD PTR [ebx-0x14188c70]
  40354f:	push   0x6a
  403551:	popa   
  403552:	cli    
  403553:	out    0x56,al
  403555:	inc    ebp
  403556:	add    eax,0x87181ed4
  40355b:	sbb    ebx,DWORD PTR [ecx+eiz*2-0x68]
  40355f:	ins    DWORD PTR es:[edi],dx
  403560:	popa   
  403561:	push   cs
  403562:	mov    edx,0xfde2369f
  403567:	in     al,0xc4
  403569:	or     BYTE PTR [esi+0x4],0xe9
  40356d:	into   
  40356e:	cmp    al,0x6f
  403570:	in     eax,0x53
  403572:	sub    ah,0xbe
  403575:	dec    eax
  403576:	mov    WORD PTR [esi],fs
  403578:	pop    ss
  403579:	pop    esp
  40357a:	shr    DWORD PTR [edx+0x61],1
  40357d:	adc    eax,0xf6b28e9d
  403582:	jae    0x403539
  403584:	inc    ebx
  403585:	mov    bl,0xa1
  403587:	repnz mov al,ds:0x65291820
  40358d:	sbb    al,0xde
  40358f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403590:	xor    DWORD PTR [ebp+0x21],0xcc71826
  403597:	call   0x8c07:0x4c131b0f
  40359e:	mov    dh,bh
  4035a0:	xchg   ah,bl
  4035a2:	sbb    ebp,DWORD PTR [ebx+edi*4+0x66]
  4035a6:	push   0x96bd321e
  4035ab:	dec    ebx
  4035ac:	pop    edx
  4035ad:	neg    eax
  4035af:	mov    esp,0x4e4173bf
  4035b4:	dec    ecx
  4035b5:	or     al,0x64
  4035b7:	out    dx,eax
  4035b8:	dec    eax
  4035b9:	clc    
  4035ba:	cmp    al,0xda
  4035bc:	pusha  
  4035bd:	fmul   DWORD PTR [ecx]
  4035bf:	sbb    ah,dh
  4035c1:	mov    ds:0x6a627a49,al
  4035c6:	mov    edi,0xc3a60051
  4035cb:	push   es
  4035cc:	daa    
  4035cd:	ss jns 0x4035b4
  4035d0:	inc    ebx
  4035d1:	mov    edi,0xac726c54
  4035d6:	inc    esp
  4035d7:	jne    0x40357f
  4035d9:	xlat   BYTE PTR ds:[ebx]
  4035da:	adc    al,0xf0
  4035dc:	jno    0x40363d
  4035de:	ror    BYTE PTR [edi],cl
  4035e0:	inc    esp
  4035e1:	jmp    0xe066:0xb88aaae5
  4035e8:	mov    ch,0xe2
  4035ea:	mov    ds:0xed7959b6,al
  4035ef:	or     eax,0x86df7875
  4035f4:	aaa    
  4035f5:	xchg   edi,eax
  4035f6:	repnz fidiv WORD PTR [edi-0x555277b5]
  4035fd:	mov    ebx,DWORD PTR [ebx]
  4035ff:	mov    ch,BYTE PTR [ebp+0x1f]
  403602:	mov    eax,ds:0xe539ea27
  403607:	popa   
  403608:	fsubr  DWORD PTR [esi]
  40360a:	mov    eax,0x13099647
  40360f:	lea    edi,ds:0xce7fe705
  403615:	dec    edx
  403616:	jp     0x40362c
  403618:	(bad)  
  403619:	sti    
  40361a:	mov    esi,0xd7177525
  40361f:	shr    DWORD PTR [eax-0xe],cl
  403622:	push   eax
  403623:	push   edx
  403624:	pushf  
  403625:	sbb    ch,BYTE PTR [eax-0x5f42674a]
  40362b:	and    BYTE PTR [edi+0x75ff338f],dl
  403631:	sbb    BYTE PTR [esi],ah
  403633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403634:	jns    0x403642
  403636:	stos   BYTE PTR es:[edi],al
  403637:	mov    al,ds:0xa85d8093
  40363c:	sub    al,0x5c
  40363e:	add    dl,BYTE PTR [ebp+edi*2+0x7d]
  403642:	lods   eax,DWORD PTR ds:[esi]
  403643:	jecxz  0x403668
  403645:	ja     0x403669
  403647:	int3   
  403648:	push   ss
  403649:	xchg   edx,eax
  40364a:	or     eax,0x6c7d5adf
  40364f:	sti    
  403650:	pop    edx
  403651:	jmp    0xa108acaf
  403656:	daa    
  403657:	inc    edi
  403658:	sub    edx,DWORD PTR [ecx]
  40365a:	aad    0x9a
  40365c:	fwait
  40365d:	(bad)  
  40365e:	in     eax,dx
  40365f:	jmp    0xf3c5745a
  403664:	push   ebp
  403665:	mov    ecx,DWORD PTR [eax+eax*1-0x12cd81cc]
  40366c:	cmpps  xmm2,xmm5,0xe1
  403670:	dec    edi
  403671:	out    0xc9,eax
  403673:	je     0x40365d
  403675:	pop    esp
  403676:	imul   ebx,DWORD PTR [ecx+0xd],0xffffffc0
  40367a:	add    ch,BYTE PTR [ebx]
  40367c:	jns    0x403650
  40367e:	in     al,dx
  40367f:	retf   0x2fd0
  403682:	popa   
  403683:	sti    
  403684:	sub    al,0x8d
  403686:	sbb    dh,BYTE PTR [edx-0x6d5e2c5c]
  40368c:	add    eax,ebp
  40368e:	jmp    0xe85d9a19
  403693:	in     al,dx
  403694:	icebp  
  403695:	(bad)  
  403697:	add    dh,BYTE PTR [esi+edi*2-0x50a2fef4]
  40369e:	das    
  40369f:	iret   
  4036a0:	js     0x4036ac
  4036a2:	jl     0x403692
  4036a4:	jmp    0xb20b:0x5254752e
  4036ab:	xlat   BYTE PTR ds:[ebx]
  4036ac:	repnz inc edi
  4036ae:	push   edi
  4036af:	(bad)  
  4036b0:	in     al,0x7
  4036b2:	xchg   edi,eax
  4036b3:	aaa    
  4036b4:	fld    QWORD PTR [bp+di]
  4036b7:	xor    DWORD PTR [ebp+0x78],0xb211a7df
  4036be:	je     0x40368d
  4036c0:	call   0x8ccd:0xc304e222
  4036c7:	mov    ecx,DWORD PTR [ecx+0x78c70c46]
  4036cd:	in     al,0x79
  4036cf:	jnp    0x40371f
  4036d1:	dec    edx
  4036d2:	push   eax
  4036d3:	jnp    0x40367a
  4036d5:	and    DWORD PTR [edi-0x67821d7],esi
  4036db:	dec    edi
  4036dc:	rol    bl,0xef
  4036df:	sbb    dl,dh
  4036e1:	jmp    0x40369a
  4036e3:	lahf   
  4036e4:	pop    ecx
  4036e5:	push   0xffffffe6
  4036e7:	in     al,0x16
  4036e9:	xor    al,0x4f
  4036eb:	loope  0x4036b4
  4036ed:	cmp    al,0xe8
  4036ef:	push   ecx
  4036f0:	loopne 0x403732
  4036f2:	fnsave [edx]
  4036f4:	hlt    
  4036f5:	sbb    BYTE PTR [edx],bl
  4036f7:	mov    edi,0x6ffc7a8
  4036fc:	in     al,0xe7
  4036fe:	iret   
  4036ff:	outs   dx,BYTE PTR ds:[esi]
  403700:	or     eax,0x8ce52a78
  403705:	aaa    
  403706:	or     al,0xdf
  403708:	in     al,0x35
  40370a:	mov    esp,0xad38a14d
  40370f:	lahf   
  403710:	lock loope 0x403786
  403713:	loop   0x4036cc
  403715:	sub    bl,BYTE PTR [esi+0x77]
  403718:	leave  
  403719:	stc    
  40371a:	pop    esp
  40371b:	loop   0x403793
  40371d:	dec    eax
  40371e:	pop    edx
  40371f:	aam    0xe4
  403721:	mov    ebp,0x82679f0e
  403726:	imul   esi,DWORD PTR [eax-0x13],0x2f
  40372a:	sbb    edi,DWORD PTR [eax]
  40372c:	xchg   edx,eax
  40372d:	mov    dl,0x14
  40372f:	sbb    esi,ebx
  403731:	sbb    al,dl
  403733:	(bad)  
  403734:	add    BYTE PTR [edi-0x1ba2b957],0x1
  40373b:	in     al,0x7c
  40373d:	in     eax,0xea
  40373f:	es jle 0x4037a9
  403742:	mov    al,ds:0x921da90b
  403747:	cmp    cl,dh
  403749:	jbe    0x4037ca
  40374b:	loopne 0x403799
  40374d:	cld    
  40374e:	jge    0x4036e2
  403750:	(bad)  
  403751:	aam    0x18
  403753:	pushf  
  403754:	jle    0x403725
  403756:	rcl    BYTE PTR [ecx+0x50549c96],cl
  40375c:	jne    0x403730
  40375e:	leave  
  40375f:	scas   al,BYTE PTR es:[edi]
  403760:	ja     0x403767
  403762:	pushf  
  403763:	lahf   
  403764:	mov    cl,0x43
  403766:	push   cs
  403767:	sbb    eax,0x67438c16
  40376c:	fwait
  40376d:	ds retf 0xe750
  403771:	loopne 0x4036f4
  403773:	bound  esp,QWORD PTR [ecx-0x50c4f513]
  403779:	dec    eax
  40377a:	das    
  40377b:	dec    ebp
  40377c:	iret   
  40377d:	inc    ebx
  40377e:	pop    ds
  40377f:	pop    ebp
  403780:	retf   
  403781:	and    dh,dh
  403783:	sahf   
  403784:	das    
  403785:	adc    bl,bh
  403787:	mov    eax,ds:0x7b60a902
  40378c:	adc    eax,0xbe15ad33
  403791:	inc    esi
  403792:	xchg   ecx,eax
  403793:	dec    esi
  403794:	call   0xe63d:0x3fcd94ea
  40379b:	call   FWORD PTR [ecx-0x724ee987]
  4037a1:	pop    ds
  4037a2:	inc    ecx
  4037a3:	jae    0x40375e
  4037a5:	mov    eax,0x6c588915
  4037aa:	in     eax,dx
  4037ab:	lahf   
  4037ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ad:	(bad)
  4037b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b1:	mov    ds:0x228ef7e0,eax
  4037b6:	jne    0x4037bb
  4037b8:	adc    DWORD PTR [ecx-0x15],ecx
  4037bb:	jae    0x403764
  4037bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037be:	mov    edx,0xf23c82fa
  4037c3:	jle    0x4037ab
  4037c5:	pop    ss
  4037c6:	loopne 0x403772
  4037c8:	in     eax,dx
  4037c9:	dec    esp
  4037ca:	jnp    0x4037f2
  4037cc:	and    esi,DWORD PTR [ecx+0x6f]
  4037cf:	jb     0x4037ed
  4037d1:	(bad)  
  4037d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d4:	pop    es
  4037d5:	out    0xe5,al
  4037d7:	mov    eax,ds:0x4b7bed2d
  4037dc:	mov    esp,0x1a0fc0f8
  4037e1:	lods   al,BYTE PTR ds:[esi]
  4037e2:	adc    edi,ebp
  4037e4:	pop    edx
  4037e5:	jmp    0x403859
  4037e7:	lods   al,BYTE PTR ds:[esi]
  4037e8:	ins    BYTE PTR es:[edi],dx
  4037e9:	call   0x9d3b:0xd53b4a39
  4037f0:	sbb    BYTE PTR [ebx+0x39d1a6c0],bh
  4037f6:	inc    esi
  4037f7:	cli    
  4037f8:	xchg   DWORD PTR [ecx],esi
  4037fa:	aaa    
  4037fb:	data16 fwait
  4037fd:	(bad)  
  4037fe:	cmp    DWORD PTR [ecx-0x612ad725],ecx
  403804:	jge    0x403823
  403806:	cli    
  403807:	shr    BYTE PTR [edi+edi*8],cl
  40380a:	ins    DWORD PTR es:[edi],dx
  40380b:	pushf  
  40380c:	dec    eax
  40380d:	push   eax
  40380e:	pop    edi
  40380f:	inc    ebp
  403810:	sbb    bl,bh
  403812:	retf   0xa7ab
  403815:	scas   eax,DWORD PTR es:[edi]
  403816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403817:	dec    ecx
  403818:	mov    ebp,0xbfb2fe4f
  40381d:	nop
  40381e:	fild   QWORD PTR [esi]
  403820:	lahf   
  403821:	dec    edx
  403822:	jge    0x40386a
  403824:	sbb    edx,DWORD PTR [esi]
  403826:	shr    DWORD PTR [esi-0x1df93bef],1
  40382c:	fdivp  st(2),st
  40382e:	repnz fisubr WORD PTR [edi-0x7d]
  403832:	jbe    0x4038a5
  403834:	or     DWORD PTR [ecx-0x5a6bdb03],ebx
  40383a:	ret    0xc2cf
  40383d:	mov    cl,0x1b
  40383f:	adc    al,0x8c
  403841:	loope  0x4037d8
  403843:	mov    eax,ds:0x3ce91664
  403848:	mov    al,ds:0x7ef8bb1
  40384d:	test   eax,0x1f7a3cf1
  403852:	in     al,0x5c
  403854:	fmulp  st(4),st
  403856:	lahf   
  403857:	xchg   edi,eax
  403858:	jg     0x40382d
  40385a:	jl     0x403855
  40385c:	loope  0x403805
  40385e:	iret   
  40385f:	fst    DWORD PTR [edi+0xa]
  403862:	test   edx,ecx
  403864:	add    esp,DWORD PTR [edi]
  403866:	inc    edx
  403867:	pop    ds
  403868:	sub    DWORD PTR [ebx-0x4d4426bd],0xffffffcd
  40386f:	and    DWORD PTR [edx+0x7d],edx
  403872:	jmp    0x4ebf:0xabfb330e
  403879:	cld    
  40387a:	aam    0xd7
  40387c:	rol    BYTE PTR [esi-0x55ac8049],cl
  403882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403883:	push   edx
  403884:	xlat   BYTE PTR ds:[ebx]
  403885:	fld    st(5)
  403887:	pop    esi
  403888:	bound  esp,QWORD PTR [edi]
  40388a:	fwait
  40388b:	into   
  40388c:	sbb    DWORD PTR [edi],eax
  40388e:	out    dx,al
  40388f:	lock sub DWORD PTR [esp+edi*1+0x2a],eax
  403894:	pusha  
  403895:	mov    esi,0xbde1a25e
  40389a:	bound  ecx,QWORD PTR [edx]
  40389c:	cmp    eax,0x9d4c64b0
  4038a1:	xchg   ebx,eax
  4038a2:	pushf  
  4038a3:	ret    0xe9b0
  4038a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038a7:	mov    bh,0x2d
  4038a9:	xlat   BYTE PTR ds:[ebx]
  4038aa:	pop    edx
  4038ab:	xchg   ebx,eax
  4038ac:	aad    0x70
  4038ae:	inc    edi
  4038af:	mov    DWORD PTR [ebx-0x6fc51eba],0xfa07bf88
  4038b9:	lahf   
  4038ba:	mov    ds:0xcfb67bdc,eax
  4038bf:	or     eax,0xf1d01967
  4038c4:	mov    ebx,DWORD PTR ds:0xe8db4274
  4038ca:	fbld   TBYTE PTR [ecx+ecx*1]
  4038cd:	sub    BYTE PTR [ebx-0x30],dh
  4038d0:	push   0x8412abf6
  4038d5:	mov    cs,WORD PTR [esi+0x3e]
  4038d8:	aam    0xd3
  4038da:	or     al,0x4
  4038dc:	scas   al,BYTE PTR es:[edi]
  4038dd:	bound  edx,QWORD PTR [edx+ecx*1]
  4038e0:	repz pushf 
  4038e2:	das    
  4038e3:	and    eax,0x92c4fe15
  4038e8:	sub    BYTE PTR fs:0x57ddd517,dh
  4038ef:	mov    dl,0x7a
  4038f1:	inc    edi
  4038f2:	inc    eax
  4038f3:	test   DWORD PTR [edi-0x4b0773c6],ecx
  4038f9:	xchg   DWORD PTR [edi],ebp
  4038fb:	ret    
  4038fc:	cld    
  4038fd:	or     BYTE PTR [edx],bl
  4038ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403900:	in     al,dx
  403901:	loopne 0x403910
  403903:	ins    BYTE PTR es:[edi],dx
  403904:	pop    edx
  403905:	inc    ebp
  403906:	xchg   ebx,eax
  403907:	cwde   
  403908:	mov    ah,0xfa
  40390a:	add    BYTE PTR [esi+0x67],ch
  40390d:	and    cl,BYTE PTR gs:[edx+0x7b858d21]
  403914:	das    
  403915:	sub    edx,DWORD PTR [ebp+eiz*2+0x1175b004]
  40391c:	scas   al,BYTE PTR es:[edi]
  40391d:	iret   
  40391e:	outs   dx,DWORD PTR ds:[esi]
  40391f:	mov    edi,0x671faef6
  403924:	push   edx
  403925:	(bad)  
  403926:	adc    al,0xb7
  403928:	sbb    eax,0xae8a5070
  40392d:	sar    DWORD PTR [edi-0x3f],0x51
  403931:	call   0x45a1:0x85d75d5f
  403938:	add    BYTE PTR [edi-0x6a0fd2d],0xba
  40393f:	mov    al,al
  403941:	outs   dx,DWORD PTR ds:[esi]
  403942:	cli    
  403943:	and    eax,0x7bf6b144
  403948:	add    BYTE PTR [edx-0x2c2f67f2],bl
  40394e:	aam    0x25
  403950:	pop    ebp
  403951:	in     al,dx
  403952:	sub    eax,0xeeb2ebba
  403957:	stos   DWORD PTR es:[edi],eax
  403958:	mov    dl,0x4d
  40395a:	pop    ds
  40395b:	xchg   edx,eax
  40395c:	and    DWORD PTR [esi],ebp
  40395e:	dec    dx
  403960:	imul   ebp,edi,0xc7c6009c
  403966:	leave  
  403967:	or     BYTE PTR [ecx-0x14],cl
  40396a:	add    eax,0xc9190e98
  40396f:	and    edi,0x7c7aa8
  403975:	popf   
  403976:	xor    eax,0xdaa359bc
  40397b:	xor    bl,BYTE PTR [edx]
  40397d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397e:	fsubr  DWORD PTR [edx+eax*8]
  403981:	leave  
  403982:	rcr    DWORD PTR [esi],1
  403984:	test   BYTE PTR [eax-0x50a605f0],bl
  40398a:	mov    ebp,0x4fe8ccd5
  40398f:	or     eax,0x81599503
  403994:	mov    al,gs:0x5c8739b7
  40399a:	and    bh,BYTE PTR [ebp+0x11d1d06a]
  4039a0:	ds mov al,0x3a
  4039a3:	gs loopne 0x4039ea
  4039a6:	popf   
  4039a7:	sahf   
  4039a8:	push   DWORD PTR [edi+0x3c]
  4039ab:	pop    ebp
  4039ac:	retf   0xbcc7
  4039af:	ret    
  4039b0:	sbb    eax,0xa9255151
  4039b5:	loope  0x403975
  4039b7:	inc    ebp
  4039b8:	pusha  
  4039b9:	lahf   
  4039ba:	push   ds
  4039bb:	dec    edi
  4039bc:	mov    esi,0xe8b66f06
  4039c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c2:	inc    edi
  4039c3:	es int 0xf2
  4039c6:	inc    edi
  4039c7:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  4039ca:	inc    ebx
  4039cb:	sub    DWORD PTR [ecx-0x3f],ebx
  4039ce:	aaa    
  4039cf:	adc    BYTE PTR [ebx-0x42],dh
  4039d2:	and    eax,0x29b57afe
  4039d7:	(bad)  [ebx]
  4039d9:	test   al,0x11
  4039db:	lea    ebx,[ecx]
  4039dd:	ins    BYTE PTR es:[edi],dx
  4039de:	std    
  4039df:	dec    eax
  4039e0:	cwde   
  4039e1:	mov    ds:0xe7d58c05,eax
  4039e6:	int    0x24
  4039e8:	cmp    eax,0xe08fdf5c
  4039ed:	iret   
  4039ee:	jmp    FWORD PTR [ecx+eax*4+0x361e5deb]
  4039f5:	fadd   QWORD PTR [edx+0x2b14f748]
  4039fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039fc:	dec    ecx
  4039fd:	nop
  4039fe:	sbb    cl,BYTE PTR [di+0x292c]
  403a03:	pop    ds
  403a04:	scas   eax,DWORD PTR es:[edi]
  403a05:	cmp    bl,BYTE PTR [edx-0x18]
  403a08:	mov    BYTE PTR [edi-0xa],ah
  403a0b:	adc    DWORD PTR [esi+0x578c3cc3],ebp
  403a11:	icebp  
  403a12:	jmp    0x403a07
  403a14:	call   0xfe36a4df
  403a19:	push   cs
  403a1a:	stc    
  403a1b:	data16 mov ds:0x24f890db,al
  403a21:	cld    
  403a22:	sbb    DWORD PTR [edx+0x5470758a],ebx
  403a28:	retf   
  403a29:	hlt    
  403a2a:	scas   al,BYTE PTR es:[edi]
  403a2b:	mov    ds:0x91dc8bcc,eax
  403a30:	rol    DWORD PTR [ecx+0x2c],0x74
  403a34:	fsub   QWORD PTR [ebx-0x40]
  403a37:	arpl   WORD PTR ds:0x5d65022e,dx
  403a3d:	xchg   ebp,eax
  403a3e:	lea    edi,[ebx]
  403a40:	adc    ecx,ecx
  403a42:	sti    
  403a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a44:	or     eax,0x1c140bfc
  403a49:	or     cl,BYTE PTR [ebp+0x7d1355f2]
  403a4f:	or     eax,edi
  403a51:	aad    0x53
  403a53:	out    dx,al
  403a54:	mov    edi,0xf830f00f
  403a59:	xchg   ebx,eax
  403a5a:	cli    
  403a5b:	jle    0x403a1f
  403a5d:	and    BYTE PTR [ecx+0x750578e],dl
  403a63:	jg     0x403abf
  403a65:	addr16 pusha 
  403a67:	sub    bh,BYTE PTR [edi-0x68]
  403a6a:	xchg   edi,eax
  403a6b:	je     0x403ace
  403a6d:	int    0x36
  403a6f:	jmp    0x5bed027f
  403a74:	or     eax,0xbdb2077d
  403a79:	jb     0x403a3d
  403a7b:	mov    esp,0x8fa4c88a
  403a80:	scas   eax,DWORD PTR es:[edi]
  403a81:	ficomp WORD PTR [ebp-0x22]
  403a84:	aas    
  403a85:	out    0x9a,al
  403a87:	leave  
  403a88:	int    0x6e
  403a8a:	xor    eax,0x7aa1f8d2
  403a8f:	dec    edi
  403a90:	or     ch,BYTE PTR [esi-0x1497edea]
  403a96:	or     BYTE PTR [ecx+0x1c1c0da7],bl
  403a9c:	iret   
  403a9d:	jnp    0x403aaf
  403a9f:	and    BYTE PTR [ecx+0x7f],bl
  403aa2:	add    al,0xc5
  403aa4:	test   BYTE PTR [eax+0x2a],bh
  403aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa9:	mov    bl,BYTE PTR [edx]
  403aab:	sbb    ah,BYTE PTR ds:0x8f0c6283
  403ab1:	and    cl,BYTE PTR [edi-0x707b05dd]
  403ab7:	mov    eax,0x7b818172
  403abc:	mov    bh,0x92
  403abe:	loop   0x403ae9
  403ac0:	fwait
  403ac1:	push   esp
  403ac2:	cmp    eax,DWORD PTR [esi-0x69633010]
  403ac8:	jo     0x403a81
  403aca:	jle    0x403b1b
  403acc:	sbb    al,BYTE PTR [eax-0x4e011736]
  403ad2:	inc    esi
  403ad3:	xchg   edi,eax
  403ad4:	adc    BYTE PTR [edi+eiz*2],dl
  403ad7:	mul    DWORD PTR [eax+0x77ea3cf6]
  403add:	lods   eax,DWORD PTR ds:[esi]
  403ade:	mov    BYTE PTR [edi-0x63fdba16],ch
  403ae4:	enter  0xaf80,0x6f
  403ae8:	xor    BYTE PTR [ebx+0x3e],bh
  403aeb:	aas    
  403aec:	pop    es
  403aed:	loopne 0x403ab5
  403aef:	std    
  403af0:	dec    esi
  403af1:	in     al,0xda
  403af3:	ins    DWORD PTR es:[edi],dx
  403af4:	iret   
  403af5:	xchg   ebx,eax
  403af6:	test   al,0x22
  403af8:	and    bh,BYTE PTR [ebx]
  403afa:	cdq    
  403afb:	(bad)  
  403afc:	icebp  
  403afd:	popf   
  403afe:	cwde   
  403aff:	das    
  403b00:	adc    ah,dl
  403b02:	fsubr  QWORD PTR [edx-0x7a5ca2cc]
  403b08:	adc    BYTE PTR [ecx],0xe5
  403b0b:	in     eax,0xe0
  403b0d:	ja     0x403b33
  403b0f:	int    0xee
  403b11:	add    ebx,DWORD PTR [eax]
  403b13:	ficom  WORD PTR [edi+ebx*1+0x67]
  403b17:	int    0x22
  403b19:	fdivr  DWORD PTR [eax+0x58]
  403b1c:	pop    edx
  403b1d:	jbe    0x403aee
  403b1f:	ins    BYTE PTR es:[edi],dx
  403b20:	ss int3 
  403b22:	push   edx
  403b23:	ficomp WORD PTR [esi]
  403b25:	inc    edi
  403b26:	jecxz  0x403b02
  403b28:	test   eax,0x7dca6c9
  403b2d:	(bad)
  403b30:	dec    ecx
  403b31:	ret    
  403b32:	cmp    dl,cl
  403b34:	cmp    BYTE PTR [edi+esi*1-0x5a],0xec
  403b39:	pop    edx
  403b3a:	cmp    DWORD PTR ds:0xbc7fe2b9,0x9ffb1d30
  403b44:	stos   DWORD PTR es:[edi],eax
  403b45:	aaa    
  403b46:	sbb    edi,ecx
  403b48:	imul   ebx,esi,0x390759f1
  403b4e:	add    esp,DWORD PTR [eax-0x6877d81f]
  403b54:	ror    BYTE PTR [edx+edx*1],1
  403b57:	test   DWORD PTR [esi+esi*2+0x5b09407],esp
  403b5e:	mov    ah,0x25
  403b60:	and    bl,ch
  403b62:	stos   BYTE PTR es:[edi],al
  403b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b64:	leave  
  403b65:	js     0x403bb4
  403b67:	out    dx,eax
  403b68:	mov    cl,0xc2
  403b6a:	jp     0x403be6
  403b6c:	es inc edi
  403b6e:	loope  0x403b5d
  403b70:	ret    0x497f
  403b73:	in     eax,0xbb
  403b75:	add    eax,0x99ed3edb
  403b7a:	(bad)  
  403b7b:	jnp    0x403b2c
  403b7d:	xchg   ebx,eax
  403b7e:	rcl    DWORD PTR [ebp+ecx*8+0x5d2b4482],1
  403b85:	test   BYTE PTR [edi+0x2cfebc3f],0x9d
  403b8c:	mov    al,ds:0x7b59501a
  403b91:	jns    0x403b22
  403b93:	lds    esi,FWORD PTR [edx-0x40]
  403b96:	dec    ebp
  403b97:	fsubrp st(0),st
  403b99:	(bad)  
  403b9a:	mov    esi,0xe7fb7016
  403b9f:	mov    esi,0xa55cd865
  403ba4:	jae    0x403bb0
  403ba6:	mov    ch,0x94
  403ba8:	pop    esp
  403ba9:	add    bl,al
  403bab:	and    DWORD PTR [eax+edi*4-0x75bf65e3],0x66
  403bb3:	pop    edi
  403bb4:	inc    ebx
  403bb5:	jae    0x403be6
  403bb7:	push   ecx
  403bb8:	jae    0x403bc0
  403bba:	lea    eax,[ecx]
  403bbc:	mov    BYTE PTR [edx],0xcd
  403bbf:	sti    
  403bc0:	mov    edx,0x1881c8bd
  403bc5:	sub    cl,BYTE PTR [eax]
  403bc7:	nop
  403bc8:	into   
  403bc9:	retf   0x71be
  403bcc:	adc    eax,ecx
  403bce:	dec    edx
  403bcf:	test   eax,0x29e7482c
  403bd4:	lock mov DWORD PTR [esi+ecx*1-0x12fe71ad],ebx
  403bdc:	pop    ebp
  403bdd:	js     0x403b9e
  403bdf:	test   BYTE PTR [edi+0xe],0x64
  403be3:	mov    dh,0xde
  403be5:	fnstenv [ecx-0x1fa4b3e]
  403beb:	adc    DWORD PTR [ebp-0x66],0xd17ca80e
  403bf2:	test   DWORD PTR [eax+0x7066f123],eax
  403bf8:	cdq    
  403bf9:	fidivr WORD PTR [esi+0x69]
  403bfc:	xchg   ebx,eax
  403bfd:	js     0x403bd4
  403bff:	jg     0x403c30
  403c01:	data16 xor BYTE PTR [ecx],0xa9
  403c05:	cmc    
  403c06:	mov    ebp,DWORD PTR [ecx-0x35]
  403c09:	ins    DWORD PTR es:[edi],dx
  403c0a:	mov    eax,0xd66e2f2
  403c0f:	cdq    
  403c10:	ret    
  403c11:	out    dx,eax
  403c12:	retf   0x9826
  403c15:	loop   0x403c6f
  403c17:	fnstcw WORD PTR [esi+0x153de6d5]
  403c1d:	int3   
  403c1e:	out    dx,al
  403c1f:	jo     0x403bd9
  403c21:	jns    0x403bb1
  403c23:	or     al,0x33
  403c25:	std    
  403c26:	or     BYTE PTR [ecx+eiz*8+0x44],0x17
  403c2b:	dec    edi
  403c2c:	add    DWORD PTR [edx-0x2c],esp
  403c2f:	pusha  
  403c30:	repz cmp eax,0x26adfa20
  403c36:	sub    DWORD PTR [edx-0x4722de0],0x6b1d9f63
  403c40:	mov    esi,DWORD PTR [esi+0x44]
  403c43:	sbb    eax,0xf9b5371c
  403c48:	(bad)  
  403c49:	in     eax,0xc4
  403c4b:	call   0xd97643aa
  403c50:	mov    eax,ds:0xb3fcd36f
  403c55:	dec    edx
  403c56:	adc    eax,0xc202bd8b
  403c5b:	mov    bl,0xbe
  403c5d:	stos   DWORD PTR es:[edi],eax
  403c5e:	xchg   edi,eax
  403c5f:	push   ecx
  403c60:	pop    ecx
  403c61:	cwde   
  403c62:	sahf   
  403c63:	push   edi
  403c64:	add    al,cl
  403c66:	cmp    bh,BYTE PTR [ebx+0x3b]
  403c69:	xcrypt-cfb (bad)
  403c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6b:	jecxz  0x403cad
  403c6d:	in     al,dx
  403c6e:	push   ecx
  403c6f:	adc    eax,DWORD PTR [ecx]
  403c71:	pop    esp
  403c72:	mov    edx,0x742daf32
  403c77:	jg     0x403c9d
  403c79:	dec    edi
  403c7a:	jg     0x403c8a
  403c7c:	int3   
  403c7d:	or     dl,BYTE PTR ds:0xd53c9c3c
  403c83:	push   edi
  403c84:	leave  
  403c85:	jno    0x403c14
  403c87:	mov    ch,0x6f
  403c89:	test   al,0x47
  403c8b:	stos   DWORD PTR es:[edi],eax
  403c8c:	mov    dl,0xc7
  403c8e:	pop    ebx
  403c8f:	aaa    
  403c90:	jge    0x403c78
  403c92:	call   0x6d82:0x82354b47
  403c99:	mov    BYTE PTR [ebx+0x281b8e31],ch
  403c9f:	pop    ds
  403ca0:	push   0x72
  403ca2:	sbb    edx,DWORD PTR [edx]
  403ca4:	xor    eax,0xb563b329
  403ca9:	out    dx,al
  403caa:	std    
  403cab:	inc    eax
  403cac:	xchg   BYTE PTR [eax-0x1cb20281],dh
  403cb2:	jbe    0x403c70
  403cb4:	pop    eax
  403cb5:	es jo  0x403cca
  403cb8:	sti    
  403cb9:	in     al,dx
  403cba:	or     bl,bl
  403cbc:	rol    BYTE PTR [ecx+0x4652a45c],cl
  403cc2:	inc    ecx
  403cc3:	jbe    0x403d33
  403cc5:	(bad)  
  403cc6:	cmp    esi,DWORD PTR [esi-0x6e]
  403cc9:	push   ss
  403cca:	je     0x403cb7
  403ccc:	(bad)  
  403ccd:	das    
  403cce:	jmp    0x25c90d04
  403cd3:	xor    eax,0x14ba7ff
  403cd8:	stos   BYTE PTR es:[edi],al
  403cd9:	or     esi,DWORD PTR [ebx+0x725b564e]
  403cdf:	mov    al,0xac
  403ce1:	jae    0x403ca1
  403ce3:	sub    ecx,edx
  403ce5:	xlat   BYTE PTR ds:[ebx]
  403ce6:	inc    edi
  403ce7:	(bad)  
  403ce8:	aaa    
  403ce9:	icebp  
  403cea:	sbb    dl,dl
  403cec:	ds dec ebp
  403cee:	into   
  403cef:	enter  0x817c,0x42
  403cf3:	test   BYTE PTR [edi],ah
  403cf5:	out    0x71,al
  403cf7:	nop
  403cf8:	xchg   ecx,eax
  403cf9:	nop
  403cfa:	shl    BYTE PTR [esi+ebp*8-0x9],0xb6
  403cff:	clc    
  403d00:	mov    DWORD PTR [esi+0x14],ebx
  403d03:	mov    ch,0x6
  403d05:	sahf   
  403d06:	(bad)  
  403d07:	out    dx,al
  403d08:	shl    BYTE PTR [ecx],1
  403d0a:	sbb    DWORD PTR [ebx*1+0x479c606b],ecx
  403d11:	es push ds
  403d13:	ins    DWORD PTR es:[edi],dx
  403d14:	jp     0x403d08
  403d16:	cld    
  403d17:	mov    edi,0x491a7606
  403d1c:	add    ecx,edx
  403d1e:	rcr    DWORD PTR [eax-0x26],cl
  403d21:	aas    
  403d22:	mov    cl,0xc2
  403d24:	loopne 0x403ca6
  403d26:	xor    al,0xc0
  403d28:	and    bl,0x5b
  403d2b:	sbb    BYTE PTR [esi+eiz*8],bh
  403d2e:	aaa    
  403d2f:	mov    ecx,0xc2aa7eb2
  403d34:	fdivp  st(4),st
  403d36:	dec    ecx
  403d37:	push   edx
  403d38:	adc    BYTE PTR [edi+0x4b],al
  403d3b:	cmp    cl,BYTE PTR [eax-0x10ac2361]
  403d41:	push   es
  403d42:	or     edi,DWORD PTR ds:0xca291779
  403d48:	sbb    BYTE PTR [edi],al
  403d4a:	scas   eax,DWORD PTR es:[edi]
  403d4b:	dec    esp
  403d4c:	fsub   DWORD PTR [ecx-0x6a]
  403d4f:	xor    al,0xa0
  403d51:	xlat   BYTE PTR ds:[ebx]
  403d52:	mov    DWORD PTR [eax],edx
  403d54:	inc    esi
  403d55:	inc    esp
  403d56:	dec    ax
  403d58:	(bad)  
  403d59:	loopne 0x403db7
  403d5b:	xor    eax,0x6fcf3f3c
  403d60:	fadd   DWORD PTR [ebx-0x146c38dc]
  403d66:	das    
  403d67:	leave  
  403d68:	out    0xf3,al
  403d6a:	pop    ss
  403d6b:	lahf   
  403d6c:	cmp    eax,0x28212a4f
  403d71:	jnp    0x403db8
  403d73:	push   es
  403d74:	cmp    al,0xe4
  403d76:	push   ecx
  403d77:	push   eax
  403d78:	cmp    dl,BYTE PTR [edi+eiz*4]
  403d7b:	pop    eax
  403d7c:	sti    
  403d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d7e:	lods   al,BYTE PTR ds:[esi]
  403d7f:	pushf  
  403d80:	adc    edi,edi
  403d82:	add    edx,ebx
  403d84:	add    ch,BYTE PTR [ebx+eiz*1-0x10]
  403d88:	fcom   DWORD PTR [edx-0x3]
  403d8b:	rcr    edx,cl
  403d8d:	sti    
  403d8e:	aas    
  403d8f:	inc    edi
  403d90:	pop    esi
  403d91:	sub    sp,0xffcf
  403d95:	jmp    FWORD PTR [ebx+0x16]
  403d98:	add    eax,0x33e1a226
  403d9d:	xchg   DWORD PTR [edi+0x16],ebp
  403da0:	pop    eax
  403da1:	call   0x2812:0x10955542
  403da8:	in     eax,0x2c
  403daa:	jbe    0x403d5d
  403dac:	sbb    ah,BYTE PTR [edx+0x5a]
  403daf:	lods   al,BYTE PTR ds:[esi]
  403db0:	cmp    esp,ebp
  403db2:	aam    0x77
  403db4:	out    0xa1,al
  403db6:	iret   
  403db7:	(bad)  
  403db8:	aam    0x8c
  403dba:	movd   DWORD PTR [esi+0x1c24e334],mm1
  403dc1:	inc    esp
  403dc2:	aad    0xf6
  403dc4:	mov    edx,0xa7f38fbb
  403dc9:	inc    esi
  403dca:	mov    al,BYTE PTR [edx]
  403dcc:	call   0xcab9:0x66acf6b0
  403dd3:	lock mov edx,0x1d2d7374
  403dd9:	jle    0x403df5
  403ddb:	dec    eax
  403ddc:	sub    eax,0xfe282cd
  403de1:	add    ah,dh
  403de3:	cmp    BYTE PTR [ebp-0x1b],0x22
  403de7:	repz sar BYTE PTR [edi+0x46],1
  403deb:	inc    esi
  403dec:	push   ecx
  403ded:	inc    ebp
  403dee:	mov    BYTE PTR [eax],ah
  403df0:	mov    eax,0xcd912a82
  403df5:	stc    
  403df6:	xchg   edx,eax
  403df7:	ret    
  403df8:	add    dh,BYTE PTR [eax+0x2645072f]
  403dfe:	jecxz  0x403e32
  403e00:	add    al,0xf
  403e02:	clc    
  403e03:	ja     0x403e06
  403e05:	cli    
  403e06:	cli    
  403e07:	mov    ds:0x29d3195e,eax
  403e0c:	fld1   
  403e0e:	call   0xb6c8f31d
  403e13:	mov    eax,ds:0x75d94b66
  403e18:	inc    ebp
  403e19:	cs add ebx,ecx
  403e1c:	pushf  
  403e1d:	xor    eax,0x7effea0d
  403e22:	out    dx,al
  403e23:	repnz jmp 0x8157:0xd98f7a0
  403e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2c:	test   eax,0xae8cebef
  403e31:	pop    ebx
  403e32:	adc    al,dl
  403e34:	pushf  
  403e35:	cmp    ebx,DWORD PTR [ecx-0x4c]
  403e38:	clc    
  403e39:	loopne 0x403dd7
  403e3b:	jecxz  0x403ddf
  403e3d:	and    DWORD PTR [edi+esi*4+0x1b],esi
  403e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e42:	sbb    al,0xa5
  403e44:	pop    ds
  403e45:	mov    eax,ds:0xad46af43
  403e4a:	ss imul eax,DWORD PTR gs:[ecx-0x4e5f84d2],0x6157e9ee
  403e56:	call   0x43860739
  403e5b:	loopne 0x403dfc
  403e5d:	fsincos 
  403e5f:	stos   BYTE PTR es:[edi],al
  403e60:	pop    ds
  403e61:	adc    eax,0x572eef0c
  403e66:	sbb    eax,0xd0ae77bc
  403e6b:	sbb    al,BYTE PTR fs:[eax-0x1d]
  403e6f:	bound  edx,QWORD PTR [eax+0x379f5c7b]
  403e75:	jo     0x403e4a
  403e77:	push   ebx
  403e78:	(bad)  
  403e79:	sub    edi,DWORD PTR [esi+0x30c740fc]
  403e7f:	adc    al,0x6b
  403e81:	jbe    0x403e59
  403e83:	cdq    
  403e84:	rol    DWORD PTR [edx+edx*4],1
  403e87:	push   eax
  403e88:	aaa    
  403e89:	fild   QWORD PTR [edx-0x12e39a44]
  403e8f:	(bad)  
  403e90:	scas   al,BYTE PTR es:[edi]
  403e91:	cmp    al,0x83
  403e93:	xor    al,0x96
  403e95:	mov    eax,0x60b64b00
  403e9a:	or     DWORD PTR [eax-0x1539a39b],esp
  403ea0:	add    DWORD PTR [ebx],esp
  403ea2:	cmp    bh,BYTE PTR [esi]
  403ea4:	fnstsw WORD PTR ds:0x7f4e9996
  403eaa:	repnz mov eax,ds:0x3a619337
  403eb0:	jbe    0x403e9b
  403eb2:	stc    
  403eb3:	fidiv  WORD PTR [esi-0x5a]
  403eb6:	ror    BYTE PTR [edx+eax*4],cl
  403eb9:	pop    ebx
  403eba:	and    ebp,esi
  403ebc:	xchg   eax,esp
  403ebe:	jae    0x403ed2
  403ec0:	in     eax,dx
  403ec1:	xlat   BYTE PTR ds:[ebx]
  403ec2:	aad    0xf1
  403ec4:	and    al,0x13
  403ec6:	fild   DWORD PTR [ebp+0x29]
  403ec9:	ss loopne 0x403eec
  403ecc:	(bad)  
  403ecd:	pop    edx
  403ece:	xor    eax,0x1c4d2fd1
  403ed3:	cdq    
  403ed4:	das    
  403ed5:	and    cl,dh
  403ed7:	mov    dl,0xea
  403ed9:	imul   esi,edi,0xffffff84
  403edc:	ja     0x403f36
  403ede:	cmc    
  403edf:	pop    eax
  403ee0:	dec    edi
  403ee1:	jo     0x403e6d
  403ee3:	in     eax,0xae
  403ee5:	stos   DWORD PTR es:[edi],eax
  403ee6:	fcomp  DWORD PTR [edx-0x40]
  403ee9:	adc    edx,esp
  403eeb:	sbb    BYTE PTR cs:[eax-0x7811b04d],cl
  403ef2:	iret   
  403ef3:	call   0xe1a12127
  403ef8:	or     eax,0x5b5bc3ba
  403efd:	adc    eax,DWORD PTR [ebx]
  403eff:	lock scas al,BYTE PTR es:[edi]
  403f01:	lods   eax,DWORD PTR ds:[esi]
  403f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f03:	mov    esi,?
  403f05:	out    0xa3,al
  403f07:	(bad)  
  403f08:	popa   
  403f09:	mov    WORD PTR [eax+edx*1],?
  403f0c:	jmp    0x403f50
  403f0e:	mov    al,0xef
  403f10:	(bad)  
  403f11:	out    dx,eax
  403f12:	retf   
  403f13:	imul   eax,DWORD PTR [edx+ebp*8+0xee92c03],0x21f7bf5b
  403f1e:	aad    0x9f
  403f20:	mov    ebx,edx
  403f22:	mov    eax,0x29945717
  403f27:	jnp    0x403eca
  403f29:	repnz repnz push es
  403f2c:	into   
  403f2d:	loope  0x403eb1
  403f2f:	icebp  
  403f30:	mov    ebp,esp
  403f32:	icebp  
  403f33:	scas   eax,DWORD PTR es:[edi]
  403f34:	lahf   
  403f35:	jae    0x403f25
  403f37:	jae    0x403fb4
  403f39:	fist   DWORD PTR [eax+0x54]
  403f3c:	adc    BYTE PTR gs:[ebx],ah
  403f3f:	inc    ecx
  403f40:	outs   dx,BYTE PTR ds:[esi]
  403f41:	shl    ebp,0xe4
  403f44:	test   DWORD PTR ds:0xb4837b55,edi
  403f4a:	and    BYTE PTR ds:0x9b46ea68,dh
  403f50:	sub    bl,BYTE PTR [ebx-0x3d7228d2]
  403f56:	fisub  DWORD PTR [esi+0x45]
  403f59:	cmp    DWORD PTR [ebp+0x2b],eax
  403f5c:	push   DWORD PTR [eax]
  403f5e:	and    BYTE PTR [esi+0x41ad8254],ah
  403f64:	ret    0xc132
  403f67:	hlt    
  403f68:	mov    ebp,edx
  403f6a:	in     al,dx
  403f6b:	mov    ecx,0x3940688f
  403f70:	jl     0x403f7a
  403f72:	call   0x3b0f91f
  403f77:	call   0xe244:0xd025c2b7
  403f7e:	inc    esi
  403f7f:	mov    ebx,DWORD PTR [ebx+0x3f]
  403f82:	xchg   DWORD PTR [edi],esp
  403f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f85:	pop    edx
  403f86:	add    ebx,DWORD PTR [eax]
  403f88:	inc    ebp
  403f89:	fs pop ebx
  403f8b:	loope  0x403fc0
  403f8d:	rcl    ebx,0x27
  403f90:	xor    al,0xbc
  403f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f93:	jae    0x403ffa
  403f95:	rcr    DWORD PTR [edi+esi*2+0x14],0xf0
  403f9a:	scas   eax,DWORD PTR es:[edi]
  403f9b:	cmp    bl,dl
  403f9d:	fwait
  403f9e:	leave  
  403f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa0:	cmp    al,0x45
  403fa2:	dec    edx
  403fa3:	into   
  403fa4:	pop    ss
  403fa5:	jbe    0x403fa6
  403fa7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403fa9:	das    
  403faa:	pop    ebp
  403fab:	and    BYTE PTR [edi],bl
  403fad:	sub    ebp,DWORD PTR [ebx]
  403faf:	std    
  403fb0:	(bad)  
  403fb1:	lods   eax,DWORD PTR ds:[esi]
  403fb2:	adc    al,0xcc
  403fb4:	pusha  
  403fb5:	mov    cl,0x9f
  403fb7:	jnp    0x403fbc
  403fb9:	cmp    eax,ecx
  403fbb:	sub    al,0xa6
  403fbd:	neg    BYTE PTR [edi+0x63]
  403fc0:	out    dx,eax
  403fc1:	inc    esi
  403fc2:	fist   WORD PTR [edi+0x3a]
  403fc5:	cdq    
  403fc6:	dec    edi
  403fc7:	jmp    0x2f214ea1
  403fcc:	jg     0x403ffc
  403fce:	xor    eax,0x5340a0bc
  403fd3:	inc    edi
  403fd4:	fld    TBYTE PTR [ebp-0x1049158f]
  403fda:	jmp    0x404014
  403fdc:	inc    esp
  403fdd:	sbb    al,bh
  403fdf:	jnp    0x403fcb
  403fe1:	loope  0x404059
  403fe3:	(bad)  
  403fe5:	push   ebp
  403fe6:	push   eax
  403fe7:	stc    
  403fe8:	dec    ebp
  403fe9:	test   eax,0x2df1bba8
  403fee:	mov    bh,0xb4
  403ff0:	sbb    al,0xfc
  403ff2:	popa   
  403ff3:	ins    DWORD PTR es:[edi],dx
  403ff4:	out    0x91,al
  403ff6:	das    
  403ff7:	jno    0x403f80
  403ff9:	retf   
  403ffa:	or     ecx,ecx
  403ffc:	mov    esi,gs
  403ffe:	loop   0x403fa8
  404000:	dec    ebx
  404001:	or     BYTE PTR [edx-0x38],ch
  404004:	test   al,0xbc
  404006:	pop    eax
  404007:	inc    ebp
  404008:	or     DWORD PTR [eax],esi
  40400a:	mov    bh,BYTE PTR [esi+0x54334f78]
  404010:	std    
  404011:	push   0xd
  404013:	call   0x399bec8f
  404018:	test   al,0xa3
  40401a:	sar    DWORD PTR [eax+edx*2+0x708f391],cl
  404021:	ret    0x1f29
  404024:	scas   eax,DWORD PTR es:[edi]
  404025:	aaa    
  404026:	outs   dx,BYTE PTR ds:[esi]
  404027:	or     eax,0x50de9009
  40402c:	cs repz add esp,ebx
  404030:	(bad)  
  404031:	jo     0x404008
  404033:	dec    esi
  404034:	cs lock mov al,0x5
  404038:	dec    esi
  404039:	mov    WORD PTR [edi],ss
  40403b:	mov    al,ds:0x6a1b2b0b
  404040:	in     al,0xd0
  404042:	sbb    DWORD PTR [esi],ecx
  404044:	cdq    
  404045:	push   edi
  404046:	out    dx,al
  404047:	pop    esp
  404048:	xchg   esp,eax
  404049:	dec    ebp
  40404a:	dec    dh
  40404c:	push   0x75
  40404e:	daa    
  40404f:	out    0xe3,al
  404051:	(bad)  
  404052:	outs   dx,DWORD PTR ds:[esi]
  404053:	enter  0xcd7d,0x67
  404057:	mov    edx,0xc03ca7f5
  40405c:	xchg   ebx,eax
  40405d:	xchg   BYTE PTR [edi+0x144b9653],cl
  404063:	div    BYTE PTR [edi+eax*1]
  404066:	or     BYTE PTR [ebx+0x64],0xc1
  40406a:	pop    esp
  40406b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40406c:	addr16 sbb eax,0x443b8a6c
  404072:	inc    edi
  404073:	and    eax,0xfacfb245
  404078:	test   al,0xb3
  40407a:	stos   BYTE PTR es:[edi],al
  40407b:	xlat   BYTE PTR ds:[ebx]
  40407c:	jl     0x4040fa
  40407e:	das    
  40407f:	cmp    BYTE PTR [edi],dh
  404081:	fsub   DWORD PTR [eax+0x56]
  404084:	cli    
  404085:	jae    0x404078
  404087:	enter  0xcceb,0x64
  40408b:	je     0x4040f9
  40408d:	cli    
  40408e:	dec    esi
  40408f:	xchg   edi,eax
  404090:	lds    esi,FWORD PTR [edx-0x65e28f90]
  404096:	nop
  404097:	push   dx
  404099:	jmp    0x404073
  40409b:	xlat   BYTE PTR ds:[ebx]
  40409c:	xor    BYTE PTR [eax+0x2f4f0a3d],al
  4040a2:	iret   
  4040a3:	call   0x661c:0xcc9e15e4
  4040aa:	and    al,0x1d
  4040ac:	out    dx,eax
  4040ad:	int3   
  4040ae:	mov    esp,0x86dc757e
  4040b3:	mov    es,WORD PTR [edx]
  4040b5:	ins    DWORD PTR es:[edi],dx
  4040b6:	icebp  
  4040b7:	fdivp  st(7),st
  4040b9:	ret    0x2595
  4040bc:	jo     0x404129
  4040be:	pushf  
  4040bf:	pusha  
  4040c0:	cmp    BYTE PTR [edx-0x2a7d4e6f],al
  4040c6:	xor    ah,bl
  4040c8:	jmp    0xdf912ca5
  4040cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ce:	call   0xec238c38
  4040d3:	cld    
  4040d4:	and    DWORD PTR [edx],ecx
  4040d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d7:	mov    dl,0x5e
  4040d9:	fisub  DWORD PTR [eax]
  4040db:	and    ah,BYTE PTR [edx+0x9]
  4040de:	loopne 0x40407e
  4040e0:	inc    DWORD PTR [esi+esi*2]
  4040e3:	inc    esp
  4040e4:	js     0x404076
  4040e6:	inc    esi
  4040e7:	(bad)  
  4040e8:	jnp    0x404114
  4040ea:	sbb    dh,BYTE PTR [ebx]
  4040ec:	stos   DWORD PTR es:[edi],eax
  4040ed:	jmp    0x4040f0
  4040ef:	cmp    al,0xf0
  4040f1:	(bad)  
  4040f2:	sub    eax,0xc4cc5541
  4040f7:	jg     0x40413e
  4040f9:	or     al,0x69
  4040fb:	out    0xfe,eax
  4040fd:	in     eax,0x1d
  4040ff:	sbb    DWORD PTR [edx+esi*8],ecx
  404102:	sub    ebp,ebp
  404104:	mov    ss,WORD PTR [ecx+0x1f]
  404107:	xor    eax,0xa7f8d9de
  40410c:	cmp    dl,ah
  40410e:	mov    esp,0x520e0189
  404113:	xor    eax,0x45284647
  404118:	mov    eax,ds:0x7d069651
  40411d:	jl     0x4040f9
  40411f:	push   ebp
  404120:	mov    ebp,0x726d98e0
  404125:	dec    ebp
  404126:	fdiv   DWORD PTR [edi]
  404128:	ret    
  404129:	les    edx,FWORD PTR [edi]
  40412b:	ja     0x4041a0
  40412d:	xor    DWORD PTR [ebp-0x68af2d61],edi
  404133:	pop    esi
  404134:	adc    ebx,DWORD PTR [edi+edi*1-0x188d145]
  40413b:	call   0xa3d5:0xc1dc29ea
  404142:	lods   al,BYTE PTR ds:[esi]
  404143:	fmul   DWORD PTR [ebp+0x54]
  404146:	cmc    
  404147:	inc    ebx
  404148:	(bad)  [ebx]
  40414a:	pusha  
  40414b:	mov    eax,0x5de2e04
  404150:	pop    ss
  404151:	and    eax,0x91e98043
  404156:	push   0xffffff9b
  404158:	fadd   DWORD PTR [edi]
  40415a:	push   es
  40415b:	pop    edi
  40415c:	xor    dh,dl
  40415e:	or     eax,0x4f6299ef
  404163:	xlat   BYTE PTR ds:[ebx]
  404164:	rol    BYTE PTR [eax+0x16d39906],1
  40416a:	cmc    
  40416b:	xor    BYTE PTR [ebx],bl
  40416d:	mov    al,0xb
  40416f:	stc    
  404170:	imul   ebp,DWORD PTR [ecx+0x1c],0xffffff88
  404174:	and    al,0xdb
  404176:	(bad)  [esi+0x55a08a32]
  40417c:	adc    DWORD PTR [eax],esi
  40417e:	test   DWORD PTR [edi-0x569106a7],ebp
  404184:	call   0xde2a3f5a
  404189:	(bad)  
  40418a:	mov    ebp,0xdf8d2752
  40418f:	xor    al,0xa3
  404191:	push   ds
  404192:	mul    DWORD PTR [ebx]
  404194:	sub    ah,dl
  404196:	push   esp
  404197:	mov    edx,0xad6372fa
  40419c:	test   DWORD PTR [edx],0x477354c7
  4041a2:	adc    ah,BYTE PTR [eax]
  4041a4:	inc    esi
  4041a5:	and    ah,BYTE PTR [esi]
  4041a7:	mov    esi,0x89788166
  4041ac:	jbe    0x40417d
  4041ae:	clc    
  4041af:	and    eax,0xa0825f6b
  4041b4:	jg     0x40421f
  4041b6:	lahf   
  4041b7:	jecxz  0x4041c9
  4041b9:	inc    eax
  4041ba:	pop    edx
  4041bb:	sub    edx,ebp
  4041bd:	mov    al,ds:0xd0869e2b
  4041c2:	adc    cl,BYTE PTR [esi]
  4041c4:	scas   al,BYTE PTR es:[edi]
  4041c5:	cmp    eax,0xa9674d21
  4041ca:	das    
  4041cb:	ret    0x48c
  4041ce:	popa   
  4041cf:	retf   0xaddc
  4041d2:	ss dec esp
  4041d4:	mov    BYTE PTR [ecx+0x57],bh
  4041d7:	js     0x404189
  4041d9:	mov    bl,al
  4041db:	jne    0x40420b
  4041dd:	in     eax,0x74
  4041df:	mov    es,WORD PTR cs:[ebx-0x3fe023df]
  4041e6:	in     al,dx
  4041e7:	cmp    al,BYTE PTR ds:0x2b53bebe
  4041ed:	pop    edi
  4041ee:	call   0xddd28355
  4041f3:	lds    edi,FWORD PTR [esi+0xa]
  4041f6:	jge    0x40421b
  4041f8:	cmp    eax,0xbf85f1cf
  4041fd:	fwait
  4041fe:	rcl    eax,0xa6
  404201:	sub    DWORD PTR [ebx],esi
  404203:	add    al,0x8e
  404205:	ret    0x4737
  404208:	cld    
  404209:	pop    esp
  40420a:	(bad)  
  40420b:	xor    eax,0x1b4d7018
  404210:	inc    ebx
  404211:	jb     0x4041a0
  404213:	imul   edx,DWORD PTR [esi-0x35],0xffffffe4
  404217:	mov    esp,0xd75c14fa
  40421c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40421d:	arpl   WORD PTR [ebx-0x30],bp
  404220:	and    eax,0x739918e8
  404225:	push   cs
  404226:	xlat   BYTE PTR ds:[ebx]
  404227:	jg     0x4041b9
  404229:	mov    DWORD PTR [ebp+0x19],edx
  40422c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40422d:	test   al,0xf3
  40422f:	or     al,0x13
  404231:	jge    0x404219
  404233:	sti    
  404234:	or     eax,DWORD PTR [eax-0x6c92faaa]
  40423a:	shl    DWORD PTR [eax+eiz*2],cl
  40423d:	sbb    cl,BYTE PTR [eax+edi*8+0x76e6fbfb]
  404244:	jmp    0xdcc5:0xd77e1413
  40424b:	xor    al,0x88
  40424d:	sub    al,0x2d
  40424f:	mov    edx,0xe3421dae
  404254:	test   al,0x46
  404256:	clc    
  404257:	es pop ebx
  404259:	pop    edi
  40425a:	test   ah,ah
  40425c:	push   eax
  40425d:	mov    dl,0xf0
  40425f:	mul    BYTE PTR gs:[edx-0x2b]
  404263:	mul    ecx
  404265:	(bad)  
  404266:	and    al,0x37
  404268:	xchg   ebp,eax
  404269:	and    BYTE PTR [edi+0x70],al
  40426c:	push   0xffffffb0
  40426e:	aaa    
  40426f:	iret   
  404270:	cwde   
  404271:	nop
  404272:	add    DWORD PTR [esi-0x6521de4d],edi
  404278:	(bad)  
  404279:	mov    eax,0x67bafd85
  40427e:	and    al,0x1e
  404280:	cmp    BYTE PTR [eax-0xf],dh
  404283:	data16 aad 0x92
  404286:	pusha  
  404287:	add    esi,ebp
  404289:	cs ja  0x404290
  40428c:	sub    edx,DWORD PTR [eax-0x43]
  40428f:	mov    dl,0xc3
  404291:	outs   dx,DWORD PTR ds:[esi]
  404292:	pop    eax
  404293:	adc    DWORD PTR [eax],ecx
  404295:	daa    
  404296:	(bad)  
  404297:	retf   
  404298:	cs push 0x39
  40429b:	or     BYTE PTR [esi-0x6715ac2d],ch
  4042a1:	sbb    al,0xf8
  4042a3:	jnp    0x40425b
  4042a5:	dec    esi
  4042a6:	cwde   
  4042a7:	test   eax,0x3d07ccc1
  4042ac:	pop    esi
  4042ad:	test   eax,esp
  4042af:	jb     0x404239
  4042b1:	je     0x404318
  4042b3:	mov    ch,0x98
  4042b5:	mov    ecx,0xa0df0447
  4042ba:	push   esi
  4042bb:	shl    dl,1
  4042bd:	ret    
  4042be:	inc    esi
  4042bf:	sub    BYTE PTR [edx+esi*8-0x73],ch
  4042c3:	xor    DWORD PTR ds:0x6aa0c328,edx
  4042c9:	adc    eax,ecx
  4042cb:	ret    0x8520
  4042ce:	test   ebx,ebp
  4042d0:	mov    bh,0x1a
  4042d2:	mov    ds:0xa1fcc0ee,al
  4042d7:	lahf   
  4042d8:	add    eax,0x19ae3c17
  4042dd:	xor    ebx,DWORD PTR [edi]
  4042df:	(bad)  
  4042e0:	pop    ss
  4042e1:	dec    ebp
  4042e2:	idiv   BYTE PTR [edx+0x260162b0]
  4042e8:	sbb    ah,BYTE PTR [ebp-0x47]
  4042eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ec:	and    eax,0x4bf16718
  4042f1:	push   es
  4042f2:	xchg   esi,eax
  4042f3:	jmp    0x404326
  4042f5:	mov    ch,0xc1
  4042f7:	mov    fs,WORD PTR [edi]
  4042f9:	xor    ch,0x84
  4042fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fd:	sub    DWORD PTR [edx+0x43837a46],ecx
  404303:	cmp    BYTE PTR [edx+0x4892726],bh
  404309:	sbb    eax,0xfdf97a2c
  40430e:	sub    eax,0xcaf918ca
  404313:	adc    ah,al
  404315:	(bad)  
  404316:	dec    ebp
  404317:	mov    ah,0xc
  404319:	leave  
  40431a:	adc    esp,DWORD PTR [eax]
  40431c:	repnz mov ebp,DWORD PTR [edi]
  40431f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404320:	dec    ecx
  404321:	outs   dx,DWORD PTR ds:[esi]
  404322:	jnp    0x4042e1
  404324:	(bad)  
  404325:	jae    0x404355
  404327:	ficomp WORD PTR [ebx+0x526da459]
  40432d:	mov    ecx,DWORD PTR [esi+edx*8-0xe]
  404331:	pop    edx
  404332:	cmp    al,0x7e
  404334:	mov    edi,0x6592d918
  404339:	ds or  dl,dl
  40433c:	(bad)  
  40433d:	dec    ebx
  40433e:	mov    dl,dh
  404340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404341:	rcr    BYTE PTR [esi],0xbf
  404344:	js     0x40438f
  404346:	jmp    0x404395
  404348:	pop    edx
  404349:	and    eax,0xc166363f
  40434e:	pop    ds
  40434f:	push   0x1
  404351:	xor    DWORD PTR [edx+0x1ff34d87],0x8aef126c
  40435b:	repnz jmp 0x4ddf:0x26ac859c
  404363:	sahf   
  404364:	ins    DWORD PTR es:[edi],dx
  404365:	mov    eax,0xbb102334
  40436a:	mov    ebp,0x6ee1c48b
  40436f:	add    DWORD PTR [ecx+0x2de8a8c3],eax
  404375:	lock inc esp
  404377:	mov    bl,0xf2
  404379:	inc    edx
  40437a:	jmp    0xacf8ee4c
  40437f:	cmp    edx,DWORD PTR [ecx+0x38]
  404382:	icebp  
  404383:	adc    edi,eax
  404385:	or     ebx,edi
  404387:	pop    ecx
  404388:	xchg   edi,eax
  404389:	dec    ebx
  40438a:	cwde   
  40438b:	mov    bl,0x35
  40438d:	pop    ds
  40438e:	push   es
  40438f:	cdq    
  404390:	je     0x4043dc
  404392:	cmc    
  404393:	push   0x23
  404395:	and    BYTE PTR [edx],cl
  404397:	clc    
  404398:	xchg   esp,eax
  404399:	ret    0x3f08
  40439c:	cmp    edi,DWORD PTR [ebp+0xd]
  40439f:	mov    al,0xc1
  4043a1:	outs   dx,BYTE PTR ds:[esi]
  4043a2:	mov    dl,0x40
  4043a4:	mov    edi,0x1cc21943
  4043a9:	sti    
  4043aa:	mov    ah,0x6a
  4043ac:	mov    edx,0x605492f7
  4043b1:	inc    ecx
  4043b2:	mov    eax,ds:0x657a0e04
  4043b7:	add    dl,ah
  4043b9:	xchg   BYTE PTR ds:0x78a4a112,ch
  4043bf:	and    eax,0xf2c0072c
  4043c4:	je     0x4043b0
  4043c6:	aas    
  4043c7:	out    0x8f,eax
  4043c9:	data16 rcr BYTE PTR [edx+ebp*4],cl
  4043cd:	or     esp,DWORD PTR [edi-0x73]
  4043d0:	ins    DWORD PTR es:[edi],dx
  4043d1:	nop
  4043d2:	fisub  WORD PTR [edx-0x2e1b9922]
  4043d8:	adc    eax,0x5b9a45a
  4043dd:	in     al,0xa0
  4043df:	jae    0x404424
  4043e1:	clc    
  4043e2:	sub    DWORD PTR [edx],edx
  4043e4:	xor    eax,0x273e71f5
  4043e9:	(bad)  
  4043ec:	dec    edx
  4043ed:	add    bh,BYTE PTR [edi+0x37]
  4043f0:	mov    ch,ah
  4043f2:	inc    esi
  4043f3:	cmp    al,0x1d
  4043f5:	jle    0x4043da
  4043f7:	mov    edi,0x5b5bdd90
  4043fc:	retf   0x6159
  4043ff:	into   
  404400:	lea    esi,[ebp+0x62]
  404403:	sbb    BYTE PTR [esi],al
  404405:	(bad)  
  404406:	mov    edi,0x793a75e2
  40440b:	mov    cl,0xdf
  40440d:	icebp  
  40440e:	call   0x26ef506
  404413:	sub    BYTE PTR [esi+0x65ab271d],0x80
  40441a:	jo     0x40447c
  40441c:	inc    ebx
  40441d:	pop    esi
  40441e:	jg     0x4043b6
  404420:	lahf   
  404421:	adc    edi,DWORD PTR [edi-0x4f]
  404424:	loope  0x4043cc
  404426:	in     eax,0x9a
  404428:	ja     0x404442
  40442a:	inc    ebp
  40442b:	pop    edi
  40442c:	aam    0x38
  40442e:	pushf  
  40442f:	push   ebp
  404430:	push   esi
  404431:	stos   BYTE PTR es:[edi],al
  404432:	repnz out 0x38,al
  404435:	xchg   DWORD PTR [ecx+edx*2],ebx
  404438:	mov    ds:0x8a63e1f4,eax
  40443d:	mov    bl,BYTE PTR [edi-0x55]
  404440:	nop
  404441:	mov    edx,0xdf8f8f0e
  404446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404447:	das    
  404448:	jnp    0x40448d
  40444a:	xchg   BYTE PTR [edi+edx*4-0x75],al
  40444e:	int    0xbb
  404450:	mov    esp,0xebc45cbe
  404455:	sbb    al,0xf5
  404457:	ds lods al,BYTE PTR gs:[esi]
  40445a:	cmp    esp,ebx
  40445c:	xlat   BYTE PTR ds:[ebx]
  40445d:	xor    eax,0x554f6640
  404462:	dec    esp
  404463:	mul    BYTE PTR [esi-0x6fdf4e88]
  404469:	inc    ebx
  40446a:	and    DWORD PTR [edi-0x3c642bce],ebp
  404470:	arpl   WORD PTR [eax+eiz*4+0x56],bp
  404474:	cmp    bh,cl
  404476:	pop    es
  404477:	push   edx
  404478:	ret    0x18ba
  40447b:	jo     0x4044a6
  40447d:	push   ebx
  40447e:	dec    ebx
  40447f:	(bad)  [ebp+0x3b]
  404482:	clc    
  404483:	inc    edx
  404484:	mov    ecx,0x2831a9db
  404489:	std    
  40448a:	jp     0x404478
  40448c:	adc    BYTE PTR [eax],bl
  40448e:	je     0x4044a3
  404490:	push   ds
  404491:	xor    edx,ecx
  404493:	xchg   esp,eax
  404494:	sar    BYTE PTR [esi-0x9],1
  404497:	or     eax,0xd8b5620b
  40449c:	adc    DWORD PTR [ecx],ebp
  40449e:	adc    ebp,DWORD PTR [ecx-0x60a0fc69]
  4044a4:	cdq    
  4044a5:	jnp    0x4044b0
  4044a7:	xor    ecx,DWORD PTR [ebx+edi*1-0x4cd791a5]
  4044ae:	add    DWORD PTR [eax+0x7610c571],esi
  4044b4:	call   DWORD PTR [edi+0x78]
  4044b7:	in     eax,0x66
  4044b9:	mov    al,0x46
  4044bb:	add    eax,0xaaca75c5
  4044c0:	mov    cl,0x4b
  4044c2:	out    dx,eax
  4044c3:	xor    BYTE PTR [edx+0x2c04fe47],ch
  4044c9:	mov    al,ds:0x42f7db00
  4044ce:	scas   al,BYTE PTR es:[edi]
  4044cf:	inc    ecx
  4044d0:	sub    ah,BYTE PTR [esi+0x6cbd0947]
  4044d6:	outs   dx,DWORD PTR ds:[esi]
  4044d7:	fbld   TBYTE PTR ds:0x2dea5541
  4044dd:	loope  0x4044e4
  4044df:	mov    WORD PTR [ecx+0x6402b49d],es
  4044e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044e6:	cmc    
  4044e7:	jmp    0xedc76b7
  4044ec:	cld    
  4044ed:	jb     0x404478
  4044ef:	pop    ss
  4044f0:	fsave  [eax-0x2d]
  4044f4:	loopne 0x4044c7
  4044f6:	jmp    0xe094:0xbc195d50
  4044fd:	pop    ss
  4044fe:	mov    eax,ds:0x74d01c78
  404503:	add    eax,0x61a8cf29
  404508:	inc    esi
  404509:	adc    al,0x54
  40450b:	mov    ebx,0x86a2f6f8
  404510:	xor    DWORD PTR ds:0x8e45f5ac,edi
  404516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404517:	push   ss
  404518:	fld    DWORD PTR [esi]
  40451b:	push   0xdf52d823
  404520:	cwde   
  404521:	cmp    al,0x4e
  404523:	ins    BYTE PTR es:[edi],dx
  404524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404525:	int3   
  404526:	popa   
  404527:	je     0x4044bb
  404529:	inc    ebx
  40452a:	dec    ebp
  40452b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40452c:	xor    edi,DWORD PTR [ebx-0x186e2cad]
  404532:	dec    eax
  404533:	aam    0x23
  404535:	add    bh,BYTE PTR [ecx-0x35]
  404538:	sbb    eax,0xf7003221
  40453d:	adc    al,0x63
  40453f:	in     eax,0x83
  404541:	inc    edx
  404542:	dec    esp
  404543:	xchg   ebx,eax
  404544:	or     eax,0x94e6c9f5
  404549:	add    eax,0xd960b65d
  40454e:	inc    ebx
  40454f:	cmp    esi,edi
  404551:	push   0x3c
  404553:	xor    edx,edx
  404555:	push   edx
  404556:	lahf   
  404557:	out    0xe2,eax
  404559:	ja     0x4044fd
  40455b:	lea    ebx,[eax+0x53]
  40455e:	xlat   BYTE PTR ds:[ebx]
  40455f:	pusha  
  404560:	push   0x6408f859
  404565:	cmp    BYTE PTR [ebx-0x6781f3b3],0xf1
  40456c:	sbb    ebp,esp
  40456e:	dec    esi
  40456f:	jno    0x4045c7
  404571:	pop    edi
  404572:	lds    eax,FWORD PTR [eax]
  404574:	xchg   ebx,eax
  404575:	hlt    
  404576:	jecxz  0x4045c5
  404578:	xor    DWORD PTR [ebx],0x7e
  40457b:	jge    0x404546
  40457d:	imul   ebx,DWORD PTR [ebx],0x69
  404580:	repz sahf 
  404582:	dec    ebp
  404583:	jnp    0x404536
  404585:	mov    al,ds:0xbdbaada0
  40458a:	out    0x65,eax
  40458c:	mov    eax,ds:0x1b5fe890
  404591:	adc    dh,BYTE PTR [esi]
  404593:	addr16 inc edi
  404595:	xor    eax,0x2b38aca5
  40459a:	(bad)  
  40459b:	adc    bh,BYTE PTR [edi+edx*8]
  40459e:	fyl2xp1 
  4045a0:	sub    eax,0x497dee68
  4045a5:	push   edi
  4045a6:	repnz inc ebp
  4045a8:	scas   eax,DWORD PTR es:[edi]
  4045a9:	lahf   
  4045aa:	jmp    0xf7e6f835
  4045af:	ficomp WORD PTR [ebx+0x69]
  4045b2:	dec    DWORD PTR [ebx-0x1]
  4045b5:	loop   0x40462b
  4045b7:	iret   
  4045b8:	or     al,0xbf
  4045ba:	out    0x7d,al
  4045bc:	les    esp,FWORD PTR [ebx-0x41]
  4045bf:	enter  0x8ffb,0x9a
  4045c3:	sbb    BYTE PTR [ebp+0x46df2fd0],0x2d
  4045ca:	mov    dh,0x7f
  4045cc:	xor    DWORD PTR [esi-0x726c3534],0x7c2dd49e
  4045d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d7:	addr16 je 0x4045ee
  4045da:	xor    al,0x22
  4045dc:	pushf  
  4045dd:	jno    0x4045b0
  4045df:	dec    ebx
  4045e0:	and    eax,DWORD PTR [eax]
  4045e2:	(bad)  
  4045e3:	sahf   
  4045e4:	sub    esp,DWORD PTR [ecx-0x2f8f0f7f]
  4045ea:	sub    BYTE PTR [esi+0x2b],ch
  4045ed:	jle    0x40460c
  4045ef:	jmp    0xefc0:0x6e987ebb
  4045f6:	jmp    0x404620
  4045f8:	inc    esp
  4045f9:	xchg   ecx,eax
  4045fa:	mov    ebp,0xaa944210
  4045ff:	ds enter 0xcb9d,0xd2
  404604:	lods   al,BYTE PTR ds:[esi]
  404605:	out    0xaa,al
  404607:	in     al,0x47
  404609:	mov    ebx,0xd47bbc79
  40460e:	lods   al,BYTE PTR ds:[esi]
  40460f:	retf   
  404610:	(bad)  
  404611:	pop    ecx
  404612:	add    al,0xa0
  404614:	or     BYTE PTR [esi],bh
  404616:	jmp    0x40466e
  404618:	nop
  404619:	mov    ebp,0x2c3962b0
  40461e:	loope  0x40461f
  404620:	adc    edx,esi
  404622:	push   eax
  404623:	sbb    al,BYTE PTR [edi-0x4e535051]
  404629:	pop    esi
  40462a:	idiv   DWORD PTR [esi+0x56f75210]
  404630:	mov    edx,0x577141c7
  404635:	sbb    al,0xf1
  404637:	stc    
  404638:	(bad)  
  404639:	push   DWORD PTR [edx-0x5c]
  40463c:	out    0x78,al
  40463e:	mov    ch,0x84
  404640:	pop    esi
  404641:	inc    esi
  404642:	daa    
  404643:	adc    al,0x6e
  404645:	aas    
  404646:	cmp    DWORD PTR [edi+eiz*4+0x5],ebx
  40464a:	mov    edx,0xc0aa5966
  40464f:	and    dl,cl
  404651:	mov    ebp,0xf69d8234
  404656:	imul   edx,DWORD PTR [ebp+0x53],0xffffff83
  40465a:	popa   
  40465b:	sub    al,0xa8
  40465d:	in     al,dx
  40465e:	mov    ch,BYTE PTR [esi+0x60]
  404661:	in     al,0x57
  404663:	jbe    0x404640
  404665:	test   bl,0x4b
  404668:	mov    WORD PTR ds:0x3c94d6a1,ss
  40466e:	gs and ebp,ebx
  404671:	fst    QWORD PTR [ebx+0x3b]
  404674:	xchg   BYTE PTR [ecx],dl
  404676:	iret   
  404677:	sub    eax,0xd3a2a30
  40467c:	inc    esp
  40467d:	popa   
  40467e:	imul   edi,DWORD PTR [eax],0xa6fa8c15
  404684:	ja     0x40463f
  404686:	inc    edx
  404687:	or     cl,BYTE PTR [esi]
  404689:	xchg   DWORD PTR [ebx+0x3e],esp
  40468c:	jo     0x40464e
  40468e:	cld    
  40468f:	in     eax,0xa1
  404691:	pop    ds
  404692:	dec    ebx
  404693:	dec    edi
  404694:	jb     0x404702
  404696:	mov    esp,0xfe7e8807
  40469b:	xchg   ebp,eax
  40469c:	jecxz  0x404649
  40469e:	(bad)  
  40469f:	in     eax,0x3
  4046a1:	and    BYTE PTR [edi-0x2c],bh
  4046a4:	cmp    bh,BYTE PTR [edx]
  4046a6:	pop    DWORD PTR [edx+0x25563870]
  4046ac:	mov    ch,0xc5
  4046ae:	jg     0x4046ca
  4046b0:	jne    0x4046da
  4046b2:	mov    esp,0x630f58ac
  4046b7:	ss comiss xmm0,xmm5
  4046bb:	enter  0xdccd,0xc6
  4046bf:	xor    DWORD PTR ds:0x1a6c981e,ecx
  4046c5:	push   ecx
  4046c6:	sub    eax,0x72e82592
  4046cb:	dec    edi
  4046cc:	add    BYTE PTR ds:0x81ea7d6e,0x90
  4046d3:	imul   ebx,DWORD PTR ds:0xaa29188,0x2f
  4046da:	dec    eax
  4046db:	inc    ecx
  4046dc:	aas    
  4046dd:	dec    eax
  4046de:	jnp    0x4046b3
  4046e0:	inc    esi
  4046e1:	sahf   
  4046e2:	in     eax,dx
  4046e3:	(bad)  
  4046e4:	retf   0x69ce
  4046e7:	je     0x40466e
  4046e9:	and    ah,BYTE PTR [edx+0x534035b0]
  4046ef:	xchg   esp,eax
  4046f0:	mov    BYTE PTR [edx],bl
  4046f2:	lds    eax,FWORD PTR [eax]
  4046f4:	and    eax,0x148c5967
  4046f9:	push   ss
  4046fa:	out    dx,eax
  4046fb:	repz adc BYTE PTR [esi],ah
  4046fe:	dec    esi
  4046ff:	hlt    
  404700:	sbb    BYTE PTR [edi],bl
  404702:	mov    edx,0x8b85e9a4
  404707:	mov    bh,0xfe
  404709:	push   0x99e532e1
  40470e:	idiv   DWORD PTR [eax-0x47aad216]
  404714:	sub    eax,DWORD PTR [ecx-0x75]
  404717:	dec    ebx
  404718:	jno    0x4046cf
  40471a:	xor    ecx,DWORD PTR [edx-0x1e35ac20]
  404720:	inc    ecx
  404721:	retf   0x73bf
  404724:	mov    al,ds:0x8805a3d2
  404729:	add    ebp,ebx
  40472b:	fsubr  QWORD PTR [ebp+0x6a]
  40472e:	mov    dh,0x55
  404730:	pushf  
  404731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404732:	mov    esi,0x88ba00ec
  404737:	in     al,0xa7
  404739:	jecxz  0x4046f0
  40473b:	jbe    0x40475c
  40473d:	xchg   esp,eax
  40473e:	pop    ebx
  40473f:	fnstsw WORD PTR [ebx]
  404741:	pop    eax
  404742:	pop    edi
  404743:	aam    0xa9
  404745:	xor    bh,ch
  404747:	pop    ebp
  404748:	mov    esp,0x2ee4be38
  40474d:	cld    
  40474e:	outs   dx,BYTE PTR ds:[esi]
  40474f:	ret    
  404750:	sbb    DWORD PTR [edi+0x38],eax
  404753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404754:	fcomp  DWORD PTR [eax-0x6bac6a1f]
  40475a:	(bad)  
  40475b:	daa    
  40475c:	(bad)  
  40475d:	sub    eax,0x5e685bf3
  404762:	data16 jne 0x40473f
  404765:	jmp    0xed8e7a70
  40476a:	sub    esi,DWORD PTR ds:0x8502e1b1
  404770:	retf   
  404771:	pop    edx
  404772:	cmp    al,BYTE PTR [eax-0x32]
  404775:	sbb    eax,0x40d66209
  40477a:	int3   
  40477b:	invd   
  40477d:	(bad)  
  40477e:	push   0x7b
  404780:	cdq    
  404781:	out    0xd0,al
  404783:	jo     0x4047ce
  404785:	loope  0x40476d
  404787:	imul   ebx,ecx,0xffffffb2
  40478a:	mov    esp,0xa1deb32d
  40478f:	arpl   WORD PTR [esi],si
  404791:	das    
  404792:	cmp    ebp,DWORD PTR [ebp-0x7ec9bfb3]
  404798:	jecxz  0x40473b
  40479a:	nop
  40479b:	adc    al,0x84
  40479d:	xlat   BYTE PTR ds:[ebx]
  40479e:	jp     0x4047b8
  4047a0:	in     al,0x64
  4047a2:	jg     0x4047d6
  4047a4:	xor    BYTE PTR [ebp+0x7c],cl
  4047a7:	mov    al,0x38
  4047a9:	sub    DWORD PTR [edx+0x59],eax
  4047ac:	scas   al,BYTE PTR es:[edi]
  4047ad:	jle    0x4047e5
  4047af:	lock push edx
  4047b1:	jnp    0x404810
  4047b3:	add    eax,0x4cc36ba6
  4047b8:	mov    ?,WORD PTR [edx-0x6bfa2dc1]
  4047be:	push   esi
  4047bf:	cmp    BYTE PTR [ebx+0x57],bh
  4047c2:	(bad)  
  4047c3:	dec    ebp
  4047c4:	mov    eax,ds:0x205c94aa
  4047c9:	sbb    dl,BYTE PTR [ecx]
  4047cb:	retf   0x6fb7
  4047ce:	xchg   edx,eax
  4047cf:	out    dx,al
  4047d0:	test   al,0x4d
  4047d2:	ins    BYTE PTR es:[edi],dx
  4047d3:	mov    cl,0x35
  4047d5:	jbe    0x4047af
  4047d7:	int    0xe1
  4047d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047da:	cmp    esp,edx
  4047dc:	mov    edi,0xfecfe3b2
  4047e1:	jne    0x4047a8
  4047e3:	mov    al,ds:0xa30e93e8
  4047e8:	add    eax,0xbc0a7393
  4047ed:	push   ebx
  4047ee:	or     al,0xde
  4047f0:	imul   edx,DWORD PTR [edi+eiz*8-0x6d5f7ade],0xfffffff8
  4047f8:	mov    cl,0x4a
  4047fa:	icebp  
  4047fb:	push   edi
  4047fc:	and    edx,DWORD PTR [ebx]
  4047fe:	ror    al,cl
  404800:	std    
  404801:	pop    ecx
  404802:	das    
  404803:	inc    edi
  404804:	dec    edx
  404805:	pop    es
  404806:	iret   
  404807:	mov    ?,WORD PTR [esi-0x7b4e6b65]
  40480d:	or     cl,BYTE PTR [ebx-0x42]
  404810:	outs   dx,DWORD PTR ds:[esi]
  404811:	cmc    
  404812:	mov    DWORD PTR [ebx-0x5f2e23df],0x69613198
  40481c:	mov    bl,0xa
  40481e:	xchg   ecx,eax
  40481f:	lock outs dx,DWORD PTR ds:[esi]
  404821:	gs cdq 
  404823:	mov    ds:0xe90f4ad0,eax
  404828:	sub    DWORD PTR [ebx+0x16],0x185ccef8
  40482f:	jmp    0x4047f2
  404831:	dec    edi
  404832:	fidivr DWORD PTR [edi]
  404834:	loope  0x404865
  404836:	inc    ebp
  404837:	or     eax,0x42e0b5f9
  40483c:	add    ecx,DWORD PTR [ecx+0x2470e949]
  404842:	xor    ch,BYTE PTR [esi-0x1c8adb7c]
  404848:	aas    
  404849:	mov    edi,0x4e6a04f4
  40484e:	dec    edi
  40484f:	mov    ebp,0x219b108e
  404854:	pop    ebp
  404855:	pop    edi
  404856:	outs   dx,DWORD PTR ds:[esi]
  404857:	in     eax,0x36
  404859:	mov    cl,0x26
  40485b:	lods   eax,DWORD PTR ds:[esi]
  40485c:	mov    ch,0x67
  40485e:	fnsave [eax]
  404860:	or     edi,DWORD PTR [ebx]
  404862:	int    0x8b
  404864:	outs   dx,DWORD PTR ds:[esi]
  404865:	push   esi
  404866:	into   
  404867:	in     al,0xf7
  404869:	scas   eax,DWORD PTR es:[edi]
  40486a:	nop
  40486b:	sub    DWORD PTR [edi+0x62],edx
  40486e:	mov    ebx,0xcebb0780
  404873:	and    al,0x55
  404875:	xor    ebp,DWORD PTR [ebp-0x57]
  404878:	je     0x4048ef
  40487a:	hlt    
  40487b:	push   edi
  40487c:	xlat   BYTE PTR ds:[ebx]
  40487d:	jnp    0x404844
  40487f:	popf   
  404880:	jp     0x4048bc
  404882:	xchg   ebp,eax
  404883:	sar    DWORD PTR [edx],0xe7
  404886:	fdivr  DWORD PTR [edi+0x1a594a4d]
  40488c:	push   0xc2d2576d
  404891:	lahf   
  404892:	popa   
  404893:	fisttp QWORD PTR [eax-0x7f]
  404896:	mov    ?,WORD PTR [ebx+0x77baa7a8]
  40489c:	shr    DWORD PTR [ebx],1
  40489e:	sub    al,0xb4
  4048a0:	je     0x404824
  4048a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a3:	inc    BYTE PTR [ecx+0x7a106d98]
  4048a9:	gs es je 0x40484c
  4048ad:	outs   dx,DWORD PTR ds:[esi]
  4048ae:	jmp    0x404905
  4048b0:	or     eax,ecx
  4048b2:	add    DWORD PTR [eax-0x2],esp
  4048b5:	div    BYTE PTR [ebp+0x700960eb]
  4048bb:	and    BYTE PTR [eax-0x5d],bh
  4048be:	inc    ecx
  4048bf:	leave  
  4048c0:	enter  0x63cf,0x5
  4048c4:	lods   eax,DWORD PTR ds:[esi]
  4048c5:	cdq    
  4048c6:	cmp    eax,0x199f727a
  4048cb:	jmp    0xa50d:0xc0ef1044
  4048d2:	mov    eax,DWORD PTR [edx-0x75]
  4048d5:	fsubr  st(3),st
  4048d7:	outs   dx,BYTE PTR ds:[esi]
  4048d8:	clc    
  4048d9:	xor    al,0xa4
  4048db:	mov    edx,0x7460d86f
  4048e0:	adc    eax,0x8a753915
  4048e5:	dec    edi
  4048e6:	inc    ebp
  4048e7:	(bad)  
  4048e8:	repz idiv DWORD PTR [ebx-0x60]
  4048ec:	add    ah,bh
  4048ee:	dec    ebp
  4048ef:	cli    
  4048f0:	iret   
  4048f1:	popf   
  4048f2:	aaa    
  4048f3:	test   BYTE PTR [edi-0x59e6796d],ch
  4048f9:	leave  
  4048fa:	xor    edi,ecx
  4048fc:	sbb    al,dh
  4048fe:	or     bh,BYTE PTR [esi+0x3e]
  404901:	inc    eax
  404902:	jmp    0xa982:0xe256b30e
  404909:	arpl   si,bx
  40490b:	or     eax,0x66ec99b4
  404910:	pop    esi
  404911:	test   ch,ch
  404913:	adc    BYTE PTR [edx+0x4a],ah
  404916:	inc    esi
  404917:	addr16 jnp 0x40492f
  40491a:	mov    dl,BYTE PTR [edx-0x4c]
  40491d:	adc    BYTE PTR [edi+eax*4],dl
  404920:	push   0x77b83768
  404925:	jp     0x4048d5
  404927:	ins    DWORD PTR es:[edi],dx
  404928:	not    DWORD PTR [ecx+0x57]
  40492b:	push   0xffffffb3
  40492d:	test   edi,ecx
  40492f:	sub    BYTE PTR [ebp-0x71be37d2],dl
  404935:	and    BYTE PTR [ebx+edx*2+0x32],dl
  404939:	cmp    BYTE PTR [ebp-0x4e],cl
  40493c:	lahf   
  40493d:	jp     0x4048bf
  40493f:	xchg   edx,eax
  404940:	retf   0xbc3b
  404943:	lock push ds
  404945:	mov    WORD PTR [edx+0x18],fs
  404948:	jmp    0xc51ceb94
  40494d:	(bad)  
  40494e:	cmp    bh,BYTE PTR [eax]
  404950:	scas   al,BYTE PTR es:[edi]
  404951:	xor    al,0x81
  404953:	mov    esp,0x14570849
  404958:	mov    eax,ds:0xc899a923
  40495d:	push   edi
  40495e:	(bad)  
  40495f:	xor    ebp,DWORD PTR [esi+eax*2-0x3100aa1c]
  404966:	aas    
  404967:	idiv   cl
  404969:	jno    0x4049c0
  40496b:	dec    edx
  40496c:	jge    0x404997
  40496e:	push   ebp
  40496f:	add    ah,BYTE PTR [ebx+0x519a44a2]
  404975:	pop    ss
  404976:	adc    al,0xa2
  404978:	icebp  
  404979:	daa    
  40497a:	add    al,0x2c
  40497c:	sti    
  40497d:	and    edi,DWORD PTR [esi-0x5cd16518]
  404983:	push   cs
  404984:	push   cx
  404986:	or     BYTE PTR [esi],0xa2
  404989:	add    DWORD PTR [ebx+edx*2+0xb],0xffffff84
  40498e:	dec    esp
  40498f:	in     eax,0xf0
  404991:	retf   0x301
  404994:	inc    edi
  404995:	ret    
  404996:	out    0xff,al
  404998:	push   edx
  404999:	mov    ecx,0x56e8ce65
  40499e:	call   0x8dff1793
  4049a3:	test   BYTE PTR [ecx+0x1db16823],ch
  4049a9:	pop    ebp
  4049aa:	mov    ebx,0xb868981a
  4049af:	hlt    
  4049b0:	jg     0x404934
  4049b2:	inc    ebp
  4049b3:	mov    ch,0xb5
  4049b5:	and    al,0xf2
  4049b7:	jp     0x404a2b
  4049b9:	push   es
  4049ba:	(bad)  
  4049bb:	fist   DWORD PTR ds:0x91de743c
  4049c1:	ret    
  4049c2:	jne    0x404a12
  4049c4:	mov    edx,DWORD PTR [ecx-0x1b]
  4049c7:	js     0x404952
  4049c9:	cmp    DWORD PTR [edx],edx
  4049cb:	xor    DWORD PTR [edx-0x52058a7a],esi
  4049d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d2:	push   0xe5d1121c
  4049d7:	dec    ebx
  4049d8:	repz lds ecx,FWORD PTR [bp+di+0x562b]
  4049de:	jns    0x404a46
  4049e0:	sbb    al,0xd9
  4049e2:	mov    eax,ds:0x7b2ed6bf
  4049e7:	gs sbb al,0x53
  4049ea:	push   0xd55d9b0e
  4049ef:	add    dl,al
  4049f1:	mov    ch,0x69
  4049f3:	sub    esi,edi
  4049f5:	pop    es
  4049f6:	out    0xe0,al
  4049f8:	xor    bl,BYTE PTR [ebp+0xf2456a1]
  4049fe:	sti    
  4049ff:	xor    al,0x1d
  404a01:	sub    DWORD PTR [eax],eax
  404a03:	add    eax,0x92ba328
  404a08:	aam    0x2d
  404a0a:	mov    al,ds:0x63eb5a99
  404a0f:	push   0x72
  404a11:	repz cwde 
  404a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a14:	iret   
  404a15:	stc    
  404a16:	mov    dl,0x9f
  404a18:	xor    edi,edx
  404a1a:	aas    
  404a1b:	and    al,0x6b
  404a1d:	xor    eax,0xa0d742f2
  404a22:	mov    DWORD PTR [ebx],ebx
  404a24:	push   ecx
  404a25:	pop    ebp
  404a26:	not    BYTE PTR [eax-0x431ddfa5]
  404a2c:	xchg   esp,eax
  404a2d:	mov    eax,0xba600a0e
  404a32:	into   
  404a33:	push   ebp
  404a34:	adc    BYTE PTR [esi+0x2071e2e],bh
  404a3a:	jbe    0x404a84
  404a3c:	das    
  404a3d:	int    0x82
  404a3f:	ins    BYTE PTR es:[edi],dx
  404a40:	mov    WORD PTR [eax],?
  404a42:	mov    bh,0xb5
  404a44:	ret    
  404a45:	or     ebx,edi
  404a47:	and    eax,0xf13ed384
  404a4c:	cmp    esp,esi
  404a4e:	sahf   
  404a4f:	in     al,dx
  404a50:	xchg   ebp,eax
  404a51:	into   
  404a52:	sub    DWORD PTR [edx],esp
  404a54:	mov    ah,0xbd
  404a56:	fcmovnb st,st(6)
  404a58:	inc    ecx
  404a59:	sbb    dl,BYTE PTR [esi-0x2d]
  404a5c:	jnp    0x404ac8
  404a5e:	sub    DWORD PTR [esi-0x50f86f36],edi
  404a64:	out    dx,eax
  404a65:	dec    edi
  404a66:	push   eax
  404a67:	in     al,dx
  404a68:	push   edi
  404a69:	hlt    
  404a6a:	jp     0x404acc
  404a6c:	pushf  
  404a6d:	arpl   dx,sp
  404a6f:	sub    al,0xaa
  404a71:	jp     0x404a2e
  404a73:	rol    BYTE PTR [ecx+edi*4],0x32
  404a77:	idiv   DWORD PTR [ebp-0x47a3ed8f]
  404a7d:	fdivp  st(3),st
  404a7f:	sub    ah,BYTE PTR [eax-0x1f]
  404a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a83:	(bad)  
  404a84:	out    dx,eax
  404a85:	test   eax,0xa56f3066
  404a8a:	sbb    BYTE PTR [ebx],al
  404a8c:	mov    ds:0x80a86123,al
  404a91:	les    eax,FWORD PTR [edi+edx*2]
  404a94:	loop   0x404ad1
  404a96:	adc    ch,BYTE PTR [edi]
  404a98:	mov    ah,0x54
  404a9a:	xrelease xchg DWORD PTR [ebx+0x45],esi
  404a9e:	scas   eax,DWORD PTR es:[edi]
  404a9f:	int3   
  404aa0:	fmul   st(6),st
  404aa2:	jae    0x404a27
  404aa4:	mov    esp,0xaae7d5a4
  404aa9:	cdq    
  404aaa:	in     eax,dx
  404aab:	xor    ah,BYTE PTR [eax]
  404aad:	bound  ebp,QWORD PTR [edi]
  404aaf:	hlt    
  404ab0:	and    DWORD PTR [esi-0x69],edi
  404ab3:	push   es
  404ab4:	ror    ebp,0xf5
  404ab7:	leave  
  404ab8:	or     eax,0x411a7f3b
  404abd:	or     BYTE PTR [ecx-0xdf133f],ah
  404ac3:	xchg   esi,eax
  404ac4:	shr    BYTE PTR [ebx-0x3],cl
  404ac7:	ret    0xc0d6
  404aca:	or     DWORD PTR [edi+0x4e],ebx
  404acd:	lea    ebx,[esi-0x5f63b204]
  404ad3:	add    DWORD PTR ds:0xe97ae213,esp
  404ad9:	push   edi
  404ada:	mov    ah,0xce
  404add:	push   0x6c18e873
  404ae2:	xchg   ecx,eax
  404ae3:	jg     0x404b37
  404ae5:	xchg   esp,eax
  404ae6:	jg     0x404b2d
  404ae8:	cwde   
  404ae9:	inc    eax
  404aea:	xchg   DWORD PTR [ebx-0x5110300e],edi
  404af0:	pop    ebx
  404af1:	cli    
  404af2:	sbb    eax,0x78280d01
  404af7:	jns    0x404a96
  404af9:	(bad)  
  404afa:	and    al,BYTE PTR [ebp-0x2e0e212a]
  404b00:	dec    esp
  404b01:	lahf   
  404b02:	sbb    eax,DWORD PTR [ecx+0x26]
  404b05:	rcpps  xmm6,XMMWORD PTR [esi+0x64]
  404b09:	or     edi,esi
  404b0b:	aas    
  404b0c:	push   ebx
  404b0d:	mov    ds:0x34f98262,al
  404b12:	or     BYTE PTR [ebp+ebx*2+0x1ca12acc],bh
  404b19:	inc    ebx
  404b1a:	push   ebp
  404b1b:	xchg   ebp,eax
  404b1c:	leave  
  404b1d:	adc    al,ch
  404b1f:	and    al,0x62
  404b21:	push   edi
  404b22:	inc    ebp
  404b23:	cmp    al,0xef
  404b25:	ret    
  404b26:	shr    DWORD PTR ds:0x9401d0e,1
  404b2c:	xchg   edx,eax
  404b2d:	pop    eax
  404b2e:	hlt    
  404b2f:	lea    edi,[ebp-0x26fd4244]
  404b35:	xor    al,0x63
  404b37:	and    DWORD PTR [ebx-0x66ac672],edi
  404b3d:	mov    dl,0x4b
  404b3f:	push   cs
  404b40:	mov    ch,0xb1
  404b42:	dec    esp
  404b43:	xchg   al,ah
  404b45:	test   al,0x95
  404b47:	add    DWORD PTR [ebp+0x2cefaede],esi
  404b4d:	xor    ebx,esp
  404b4f:	jl     0x404b8e
  404b51:	call   0xa9e16a69
  404b56:	adc    ebx,DWORD PTR [edi]
  404b58:	jne    0x404b9b
  404b5a:	cmp    BYTE PTR [ecx],bh
  404b5c:	xchg   DWORD PTR cs:[ebx],ebx
  404b5f:	add    eax,0x1ccb7b5a
  404b64:	sub    eax,0xae3f0179
  404b69:	cmp    eax,DWORD PTR [eax+ebp*1+0x63]
  404b6d:	ja     0x404b29
  404b6f:	push   esp
  404b70:	ins    DWORD PTR es:[edi],dx
  404b71:	or     DWORD PTR [edx],esi
  404b73:	test   eax,0x8f3a573c
  404b78:	loopne 0x404bd9
  404b7a:	add    BYTE PTR [eax+0x34d30043],cl
  404b80:	inc    edi
  404b81:	pop    ds
  404b82:	pop    esi
  404b83:	inc    ebp
  404b84:	div    DWORD PTR [ebp-0x2a214416]
  404b8a:	cmp    BYTE PTR [eax],dl
  404b8c:	jp     0x404b26
  404b8e:	ins    BYTE PTR es:[edi],dx
  404b8f:	cmp    eax,0x7870c4e8
  404b94:	stos   DWORD PTR es:[edi],eax
  404b95:	adc    edi,DWORD PTR [edi]
  404b97:	bound  edi,QWORD PTR [ecx-0x18bf829b]
  404b9d:	mov    bl,0xa1
  404b9f:	aam    0xc4
  404ba1:	mov    ah,0x7f
  404ba3:	in     al,0xa
  404ba5:	and    BYTE PTR ds:0x230e5977,dl
  404bab:	mov    al,ds:0x82b657fa
  404bb0:	mov    ds:0x97b3f0f3,eax
  404bb5:	pop    ss
  404bb6:	inc    ecx
  404bb7:	repnz mov dh,0x3d
  404bba:	ins    DWORD PTR es:[edi],dx
  404bbb:	dec    edi
  404bbc:	in     al,dx
  404bbd:	xchg   esi,eax
  404bbe:	and    al,0x6a
  404bc0:	leave  
  404bc1:	xchg   edi,eax
  404bc2:	stc    
  404bc3:	add    eax,0x37570569
  404bc8:	ja     0x404ba1
  404bca:	ss sub eax,0x4ddd9c55
  404bd0:	sub    BYTE PTR [esi],ch
  404bd2:	cmp    eax,0x193055b5
  404bd7:	mov    dh,0xf1
  404bd9:	or     ebp,DWORD PTR [edx]
  404bdb:	(bad)  
  404bdc:	mov    ebx,0xf318704e
  404be1:	pop    eax
  404be2:	cmp    BYTE PTR [esi],bh
  404be4:	mov    fs,edx
  404be6:	ds sbb dl,ah
  404be9:	cli    
  404bea:	lea    ebp,[esi]
  404bec:	adc    esp,DWORD PTR [eax]
  404bee:	retf   
  404bef:	push   0xffffffe3
  404bf1:	setb   cl
  404bf4:	aas    
  404bf5:	test   al,0xaa
  404bf7:	inc    esi
  404bf8:	gs sub DWORD PTR es:[ecx-0x6e],eax
  404bfd:	lds    edi,FWORD PTR [eax+0x13]
  404c00:	xchg   edx,eax
  404c01:	cmp    BYTE PTR [ebp-0x5cec39bb],0x71
  404c08:	xchg   ebp,eax
  404c09:	push   cs
  404c0a:	push   DWORD PTR [esi+eax*1]
  404c0d:	push   esp
  404c0e:	or     ecx,DWORD PTR [edx+0x5cc6adcb]
  404c14:	outs   dx,DWORD PTR ds:[esi]
  404c15:	jne    0x404c02
  404c17:	jns    0x404c53
  404c19:	add    al,0xb0
  404c1b:	mov    edi,0xbaa19cd7
  404c20:	or     BYTE PTR [esi+0x12ae3cd0],0xa1
  404c27:	mov    dh,0xac
  404c29:	xchg   BYTE PTR [esi+0x4c5fa620],bl
  404c2f:	in     al,dx
  404c30:	outs   dx,BYTE PTR ds:[esi]
  404c31:	inc    ecx
  404c32:	mov    dh,bl
  404c34:	mov    ds:0x803beb3b,eax
  404c39:	fadd   DWORD PTR [esi-0x66f72dfc]
  404c3f:	push   ss
  404c40:	inc    eax
  404c41:	and    ebp,edi
  404c43:	adc    al,0x7
  404c45:	cmp    ebp,DWORD PTR [edi-0x5]
  404c48:	cmc    
  404c49:	sub    bl,BYTE PTR [ebx-0x375d6294]
  404c4f:	dec    ecx
  404c50:	jp     0x404c9d
  404c52:	xchg   ebp,eax
  404c53:	mov    ch,0x2b
  404c55:	inc    esp
  404c56:	fst    st(7)
  404c58:	lods   eax,DWORD PTR ds:[esi]
  404c59:	and    esi,DWORD PTR [esi]
  404c5b:	fs stos DWORD PTR es:[edi],eax
  404c5d:	rcl    DWORD PTR [ebx],1
  404c5f:	setp   bh
  404c62:	push   cs
  404c63:	push   ds
  404c64:	dec    edx
  404c65:	inc    ebx
  404c66:	or     al,0x64
  404c68:	xor    BYTE PTR [ebx-0x5a],ch
  404c6b:	mov    ds:0x305b4bfd,al
  404c70:	fwait
  404c71:	mov    fs,WORD PTR [edx]
  404c73:	pusha  
  404c74:	hlt    
  404c75:	ins    DWORD PTR es:[edi],dx
  404c76:	ror    DWORD PTR [ebp-0x66],0xac
  404c7a:	and    ecx,esp
  404c7c:	pminsw mm0,QWORD PTR [ebp-0x7a186a2c]
  404c83:	or     eax,0x72ce1ef8
  404c88:	xor    dl,al
  404c8a:	aaa    
  404c8b:	mov    eax,0xdd59037b
  404c90:	ja     0x404c71
  404c92:	stos   DWORD PTR es:[edi],eax
  404c93:	fwait
  404c94:	sub    dh,al
  404c96:	ret    
  404c97:	jae    0x404ce9
  404c99:	loopne 0x404c4a
  404c9b:	idiv   esp
  404c9d:	lds    esp,FWORD PTR [ebx+0xbe303b2]
  404ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca4:	inc    ebx
  404ca5:	xchg   ebx,eax
  404ca6:	or     al,bh
  404ca8:	mov    al,0x32
  404caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cab:	(bad)  [ebp+esi*4-0x71f358fc]
  404cb2:	lods   al,BYTE PTR ds:[esi]
  404cb3:	pusha  
  404cb4:	call   0x8f2a:0xa96e42ec
  404cbb:	aad    0x79
  404cbd:	xchg   DWORD PTR [ebx-0x5e80b979],esp
  404cc3:	pop    esi
  404cc4:	push   0x3943d0eb
  404cc9:	cmp    BYTE PTR [edi+0x3589dfb9],0xb8
  404cd0:	dec    ebx
  404cd1:	push   ss
  404cd2:	imul   DWORD PTR [esi]
  404cd4:	rcr    DWORD PTR [ebp+0x62],1
  404cd7:	scas   eax,DWORD PTR es:[edi]
  404cd8:	js     0x404d09
  404cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cdb:	loope  0x404c7a
  404cdd:	xor    ch,BYTE PTR [eax+0x46]
  404ce0:	cld    
  404ce1:	rcl    bl,cl
  404ce3:	or     ebp,DWORD PTR [edx]
  404ce5:	jo     0x404d11
  404ce7:	cmp    eax,0x4ed8a56e
  404cec:	xchg   BYTE PTR [ebp+0x52],bl
  404cef:	(bad)  
  404cf0:	mov    bh,0x91
  404cf2:	and    edi,DWORD PTR [esp+edi*4+0x1e]
  404cf6:	in     eax,0x39
  404cf8:	add    al,0x9c
  404cfa:	inc    ebx
  404cfb:	mov    ds:0xb7dbf8ed,al
  404d00:	push   ebp
  404d01:	cmp    bh,BYTE PTR [edx-0x1d]
  404d04:	jg     0x404d6f
  404d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d07:	out    0x87,al
  404d09:	(bad)  
  404d0a:	(bad)  
  404d0b:	jmp    0xdcdb:0x4df78305
  404d12:	cmp    cl,cl
  404d14:	and    eax,0xd3bc1d5b
  404d19:	cs (bad) 
  404d1c:	int3   
  404d1d:	or     al,0x4e
  404d1f:	add    ecx,esi
  404d21:	mov    al,ds:0x84a1ccc7
  404d26:	xor    bl,BYTE PTR [edx]
  404d28:	xchg   ecx,eax
  404d29:	push   0x15
  404d2b:	pop    ebp
  404d2c:	outs   dx,BYTE PTR ds:[esi]
  404d2d:	scas   eax,DWORD PTR es:[edi]
  404d2e:	fimul  WORD PTR [ebx+0x4c45998c]
  404d34:	(bad)  
  404d35:	sti    
  404d36:	or     al,dl
  404d38:	jns    0x404cfc
  404d3a:	or     BYTE PTR [edi+0x5b],ch
  404d3d:	jo     0x404d0a
  404d3f:	dec    ecx
  404d40:	mov    ebx,0x457f0249
  404d45:	ror    BYTE PTR [edi+0x3f],0x29
  404d49:	mov    eax,0xf63bf72
  404d4e:	push   esi
  404d4f:	out    0x3f,al
  404d51:	dec    ebp
  404d52:	mov    ch,0x3c
  404d54:	loope  0x404d46
  404d56:	mov    al,ds:0x2725ad52
  404d5b:	mov    BYTE PTR [ecx],cl
  404d5d:	and    edi,edx
  404d5f:	test   DWORD PTR [ebp-0x5ca86b],eax
  404d65:	add    BYTE PTR [edi+eax*2+0x2408a49a],ch
  404d6c:	ins    BYTE PTR es:[edi],dx
  404d6d:	add    DWORD PTR [edx+0x49],edi
  404d70:	jbe    0x404d08
  404d72:	pusha  
  404d73:	pop    edx
  404d74:	imul   esi,DWORD PTR [edx],0x2a4fbdb6
  404d7a:	mov    al,0xa1
  404d7c:	cmp    eax,0xc5d6827d
  404d81:	cmp    DWORD PTR [ebx+ebx*4],edi
  404d84:	into   
  404d85:	jns    0x404d63
  404d87:	and    DWORD PTR [eax+eiz*4],esi
  404d8a:	addr16 mov ds:0x7a3f,eax
  404d8e:	arpl   sp,di
  404d90:	or     al,0x1e
  404d92:	or     eax,0xf5870818
  404d97:	pop    esi
  404d98:	add    al,0x29
  404d9a:	jl     0x404d6d
  404d9c:	adc    eax,0x95f37c98
  404da1:	ret    
  404da2:	(bad)  
  404da3:	das    
  404da4:	aaa    
  404da5:	sbb    eax,0xb7c9d7ab
  404daa:	xor    DWORD PTR [ebx+0x38],ebp
  404dad:	fistp  DWORD PTR [edi*8+0x109c9276]
  404db4:	jmp    0x404d4f
  404db6:	and    BYTE PTR [ebx],dh
  404db8:	outs   dx,DWORD PTR ds:[esi]
  404db9:	sar    BYTE PTR [edx+eax*2],1
  404dbc:	xor    BYTE PTR [ebx+0x44c816e7],dl
  404dc2:	sub    eax,0x132d35e0
  404dc7:	mov    bh,0x6a
  404dc9:	cwde   
  404dca:	cmp    bl,BYTE PTR [edx+0x77d81ca3]
  404dd0:	and    eax,0x115b6f14
  404dd5:	pop    ss
  404dd6:	pop    esi
  404dd7:	sub    BYTE PTR [ecx+0x51],cl
  404dda:	jmp    0xda27b249
  404ddf:	(bad)  
  404de0:	dec    eax
  404de1:	clc    
  404de2:	jne    0x404e00
  404de4:	cs xchg ecx,eax
  404de6:	xchg   esp,eax
  404de7:	adc    cl,al
  404de9:	clc    
  404dea:	not    BYTE PTR [ecx]
  404dec:	bswap  ebx
  404dee:	xchg   ebp,eax
  404def:	push   esi
  404df0:	sub    cl,cl
  404df2:	ficomp WORD PTR [edi+0x23]
  404df5:	pop    es
  404df6:	rol    BYTE PTR [ebp+0x49],cl
  404df9:	inc    esp
  404dfa:	sub    bl,BYTE PTR [ecx+0x5c]
  404dfd:	lods   eax,DWORD PTR ds:[si]
  404dff:	shl    BYTE PTR [edx+0x3],1
  404e02:	std    
  404e03:	sub    al,0xe7
  404e05:	push   esi
  404e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e07:	jl     0x404e5f
  404e09:	jg     0x404dc8
  404e0b:	sbb    bh,BYTE PTR [ecx-0x4b15cc63]
  404e11:	jg     0x404e5f
  404e13:	ja     0x404ddb
  404e15:	cmp    eax,DWORD PTR [ecx+0x4]
  404e18:	jg     0x404e2c
  404e1a:	adc    DWORD PTR [ebx+0x77],0x9cf2e4fc
  404e21:	mov    eax,ds:0x21fe7fdf
  404e26:	push   0x25
  404e28:	inc    eax
  404e29:	mov    bh,0x0
  404e2b:	push   0xffffff9a
  404e2d:	jmp    0xc1e9:0xeb606f0a
  404e34:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e36:	imul   ecx,edi,0x995e0101
  404e3c:	and    ecx,DWORD PTR [esi-0x9]
  404e3f:	out    0x34,al
  404e41:	adc    edi,DWORD PTR [edx+edi*4+0x6b8c8d98]
  404e48:	fisttp DWORD PTR [ecx+esi*1]
  404e4b:	lods   al,BYTE PTR ds:[esi]
  404e4c:	inc    ebp
  404e4d:	adc    BYTE PTR [eax+0x57],0x33
  404e51:	dec    edi
  404e52:	or     al,0x11
  404e54:	repz jecxz 0x404e19
  404e57:	sbb    DWORD PTR [edx-0x4e],ebp
  404e5a:	pushf  
  404e5b:	ret    
  404e5c:	ror    ecx,1
  404e5e:	stos   BYTE PTR es:[edi],al
  404e5f:	arpl   WORD PTR [esi-0x22],ax
  404e62:	inc    ebx
  404e63:	int3   
  404e64:	xor    BYTE PTR [ebx+0x38a0444],ch
  404e6a:	hlt    
  404e6b:	stc    
  404e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e6d:	aam    0xb9
  404e6f:	and    ah,BYTE PTR [ebp+0x75]
  404e72:	fisttp DWORD PTR [edi]
  404e74:	xchg   ebp,eax
  404e75:	adc    al,0x8d
  404e77:	xor    eax,0xe99d888e
  404e7c:	cs fxch st(5)
  404e7f:	mov    edi,0xa92eff74
  404e84:	(bad)  
  404e85:	cmp    edi,esp
  404e87:	xlat   BYTE PTR ds:[ebx]
  404e88:	test   ebx,0x7176c739
  404e8e:	add    DWORD PTR [ebp+0x25750f13],esi
  404e94:	test   DWORD PTR [edx],edi
  404e96:	xor    ebp,0x8af6b489
  404e9c:	xor    ecx,ecx
  404e9e:	pop    esi
  404e9f:	mov    cl,0xcc
  404ea1:	dec    esi
  404ea2:	and    DWORD PTR [esi+eiz*2-0x125be98c],ebp
  404ea9:	loop   0x404ef8
  404eab:	ror    BYTE PTR [esp+ebx*4+0x58bf38ff],cl
  404eb2:	or     BYTE PTR [edx+0x2aa1dcaa],0x75
  404eb9:	cmp    al,0x5
  404ebb:	ds mov bh,0xa3
  404ebe:	bound  edi,QWORD PTR [edi+edx*1-0x78955ef8]
  404ec5:	sbb    eax,0xb03d539e
  404eca:	push   ds
  404ecb:	xor    eax,DWORD PTR [edi+0xc]
  404ece:	pop    edx
  404ecf:	sbb    ch,al
  404ed1:	bound  eax,QWORD PTR [esi+0x31]
  404ed4:	xor    al,0x6f
  404ed6:	dec    edi
  404ed7:	(bad)  
  404ed8:	cwde   
  404ed9:	in     al,dx
  404eda:	test   eax,0x57b7d515
  404edf:	shl    BYTE PTR [ebx],cl
  404ee1:	imul   esp,DWORD PTR [edi-0x2607d79a],0xffffffd7
  404ee8:	in     al,0xf8
  404eea:	push   eax
  404eeb:	or     al,BYTE PTR fs:[eax-0x25]
  404eef:	int    0xff
  404ef1:	loope  0x404f5f
  404ef3:	jg     0x404f1f
  404ef5:	das    
  404ef6:	loopne 0x404ea6
  404ef8:	adc    eax,0xb39dedc5
  404efd:	push   ecx
  404efe:	adc    al,0x97
  404f00:	pop    es
  404f01:	mov    cl,al
  404f03:	xlat   BYTE PTR ds:[ebx]
  404f04:	or     eax,ecx
  404f06:	jbe    0x404f1d
  404f08:	xchg   edi,eax
  404f09:	retf   0x5a64
  404f0c:	scas   eax,DWORD PTR es:[edi]
  404f0d:	icebp  
  404f0e:	loope  0x404ed1
  404f10:	mov    DWORD PTR [esi+ebx*8-0x52],ebx
  404f14:	mov    cl,0x99
  404f16:	ror    BYTE PTR [edx-0x54],0xbd
  404f1a:	gs pop edi
  404f1c:	mov    edi,0x30fdafdb
  404f21:	ds out 0x8e,al
  404f24:	jne    0x404f18
  404f26:	call   0xd3a2655
  404f2b:	pop    esp
  404f2c:	enter  0xd40f,0xe5
  404f30:	mov    edx,ecx
  404f32:	inc    ecx
  404f33:	and    ebx,DWORD PTR [ecx-0x59d92e0d]
  404f39:	inc    esi
  404f3a:	js     0x404f99
  404f3c:	and    bh,BYTE PTR [eax-0x67af3c8d]
  404f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f43:	push   edx
  404f44:	pop    eax
  404f45:	jb     0x404ece
  404f47:	xor    DWORD PTR [esp+edi*2+0x2061fe64],eax
  404f4e:	inc    esi
  404f4f:	pop    ebp
  404f50:	hlt    
  404f51:	mov    cl,BYTE PTR [eax]
  404f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f54:	aam    0x90
  404f56:	(bad)  
  404f57:	(bad)  
  404f58:	scas   eax,DWORD PTR es:[edi]
  404f59:	sub    BYTE PTR [eax-0x45c5b51b],dl
  404f5f:	test   al,0x32
  404f61:	fst    DWORD PTR [eax]
  404f63:	sbb    eax,0x193542ff
  404f68:	leave  
  404f69:	pop    es
  404f6a:	add    DWORD PTR [eax-0xe],edx
  404f6d:	dec    esi
  404f6e:	ss pop edx
  404f70:	loopne 0x404fe3
  404f72:	mov    bh,0x60
  404f74:	adc    eax,0x7813fc58
  404f79:	adc    BYTE PTR [esi-0x667e244a],bl
  404f7f:	sbb    bl,BYTE PTR [ebp+0x209f53b6]
  404f85:	mov    esp,0x1a83b9f8
  404f8a:	cs sub eax,0x644cfb4b
  404f90:	xor    eax,0x3c59918d
  404f95:	push   ds
  404f96:	popf   
  404f97:	add    eax,0x2be18e49
  404f9c:	(bad)  
  404f9d:	sbb    dl,dh
  404f9f:	pushf  
  404fa0:	mov    ebx,0xedc34289
  404fa5:	pop    edx
  404fa6:	retf   
  404fa7:	aam    0x6c
  404fa9:	nop
  404faa:	sub    bl,BYTE PTR [eax-0x6f016a70]
  404fb0:	adc    DWORD PTR [esi-0x19899352],edi
  404fb6:	fild   QWORD PTR [ebx-0x60824096]
  404fbc:	adc    eax,0xff1fb979
  404fc1:	jns    0x404f5f
  404fc3:	test   DWORD PTR [edx-0x1f337889],ebp
  404fc9:	xchg   edi,eax
  404fca:	jae    0x40501e
  404fcc:	icebp  
  404fcd:	dec    ebp
  404fce:	jnp    0x404fb2
  404fd0:	std    
  404fd1:	fnstsw WORD PTR [ecx]
  404fd3:	xor    eax,0x8670ca36
  404fd8:	mov    edi,0xdd2fc830
  404fdd:	in     al,dx
  404fde:	ss pop eax
  404fe0:	xchg   edi,eax
  404fe1:	adc    BYTE PTR [ebx],0x3d
  404fe4:	dec    ecx
  404fe5:	(bad)  
  404fe6:	stos   BYTE PTR es:[edi],al
  404fe7:	mov    bl,0xf7
  404fe9:	retf   0x4ec7
  404fec:	jmp    0xc8a540ce
  404ff1:	sti    
  404ff2:	adc    DWORD PTR [ecx-0xe],0x7d
  404ff6:	out    0x2c,al
  404ff8:	aaa    
  404ff9:	enter  0x3a77,0xd6
  404ffd:	xor    al,0xcc
  404fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405000:	adc    dh,0x7b
  405003:	es call 0x9b18:0xf58d5353
  40500b:	cmp    al,0x70
  40500d:	jg     0x404fd4
  40500f:	or     edx,DWORD PTR [edx+0x35b7591d]
  405015:	int    0xdc
  405017:	mov    al,0xbc
  405019:	sti    
  40501a:	(bad)  
  40501b:	sbb    dh,BYTE PTR [ebx+0x6dec6f6]
  405021:	fld    TBYTE PTR [eax]
  405023:	add    al,BYTE PTR [esp+ebp*1-0x509cd00f]
  40502a:	int3   
  40502b:	adc    BYTE PTR [ebx],bh
  40502d:	iret   
  40502e:	jp     0x404fe7
  405030:	nop
  405031:	lods   al,BYTE PTR ds:[esi]
  405032:	mov    edx,?
  405034:	pop    ecx
  405035:	outs   dx,DWORD PTR ds:[esi]
  405036:	jmp    0x4050b3
  405038:	cmp    eax,0xfd29ef35
  40503d:	in     al,dx
  40503e:	add    eax,0xb3cff94e
  405043:	bound  edi,QWORD PTR [edx-0x52]
  405046:	je     0x405007
  405048:	hlt    
  405049:	sahf   
  40504a:	or     ch,BYTE PTR [ebx]
  40504c:	sbb    dh,BYTE PTR [ebx]
  40504e:	cld    
  40504f:	jb     0x40509f
  405051:	cmovb  edi,DWORD PTR [eax]
  405054:	xchg   ebx,eax
  405055:	push   ecx
  405056:	(bad)  
  405057:	in     eax,dx
  405058:	cmp    edx,DWORD PTR [ebp+esi*4+0x74f261ce]
  40505f:	outs   dx,DWORD PTR ds:[esi]
  405060:	ins    BYTE PTR es:[edi],dx
  405061:	std    
  405062:	in     eax,dx
  405063:	call   eax
  405065:	fnstcw WORD PTR [ebx+0x15737dcd]
  40506b:	pop    eax
  40506c:	adc    al,0x54
  40506e:	imul   eax,DWORD PTR [esi-0x8],0xffffffa2
  405072:	sub    ebp,DWORD PTR [edx+ebx*2-0x1]
  405076:	jns    0x405041
  405078:	(bad)  
  405079:	stos   BYTE PTR es:[edi],al
  40507a:	cmp    eax,0xa27b3cfe
  40507f:	inc    eax
  405080:	sub    eax,0x1544dcd3
  405085:	or     esp,DWORD PTR [edx+0x3ec14949]
  40508b:	push   esp
  40508c:	inc    ebp
  40508d:	getsec 
  40508f:	lds    ebp,FWORD PTR [esi]
  405091:	jle    0x4050a1
  405093:	or     edi,DWORD PTR [edx-0x6df38806]
  405099:	icebp  
  40509a:	mov    ebp,0xa6826189
  40509f:	test   BYTE PTR [esi+0x30d76f18],ch
  4050a5:	ficom  DWORD PTR [ebp-0x36]
  4050a8:	inc    eax
  4050a9:	cmc    
  4050aa:	rol    DWORD PTR ds:0xfda0276f,cl
  4050b0:	sbb    DWORD PTR [ebx+0x7063d85f],edi
  4050b6:	or     dh,ah
  4050b8:	mov    al,ds:0xe6932432
  4050bd:	stos   DWORD PTR es:[edi],eax
  4050be:	movzx  ecx,WORD PTR [edi-0xbefdc33]
  4050c5:	mov    ebx,0x51d03540
  4050ca:	enter  0xe201,0xab
  4050ce:	dec    ecx
  4050cf:	xor    al,0x3b
  4050d1:	test   al,0xdd
  4050d3:	and    edx,ecx
  4050d5:	jmp    0x4050d4
  4050d7:	inc    edi
  4050d8:	sbb    al,0xd4
  4050da:	dec    ecx
  4050db:	addr16 in eax,0x4f
  4050de:	inc    eax
  4050df:	add    BYTE PTR ds:0xfef6da6a,ch
  4050e5:	jo     0x4050ad
  4050e7:	mov    edx,0x2295f0d1
  4050ec:	sub    dh,BYTE PTR [ebx]
  4050ee:	jl     0x4050ac
  4050f0:	dec    ebp
  4050f1:	leave  
  4050f2:	cmp    BYTE PTR [eax+0x37d87920],dl
  4050f8:	jmp    0x1761:0x33f454bb
  4050ff:	dec    eax
  405100:	mov    ebp,0xb6532747
  405105:	dec    esp
  405106:	mov    DWORD PTR [ecx+0x78d1e454],edx
  40510c:	loope  0x40517a
  40510e:	fsubrp st(7),st
  405110:	xor    esp,edx
  405112:	sub    al,0xd
  405114:	icebp  
  405115:	push   edx
  405116:	jns    0x4050b9
  405118:	lds    esi,FWORD PTR [edx+eiz*4-0x7a]
  40511c:	leave  
  40511d:	ins    DWORD PTR es:[edi],dx
  40511e:	jle    0x405121
  405120:	mov    bl,bh
  405122:	cmp    al,0xc9
  405124:	out    0x3d,al
  405126:	xor    al,0x6c
  405128:	pop    ds
  405129:	pop    esi
  40512a:	sbb    bl,BYTE PTR [edi+0x2c]
  40512d:	daa    
  40512e:	aam    0x7d
  405130:	fwait
  405131:	mov    ah,0x9b
  405133:	cmp    DWORD PTR [esi+0x55],esi
  405136:	xlat   BYTE PTR ds:[ebx]
  405137:	les    ecx,FWORD PTR [eax]
  405139:	cwde   
  40513a:	stc    
  40513b:	push   esi
  40513c:	inc    eax
  40513d:	pushf  
  40513e:	js     0x4051b9
  405140:	xchg   ecx,eax
  405141:	push   edx
  405142:	dec    esp
  405143:	hlt    
  405144:	adc    esi,DWORD PTR [edx+0x52a2ae1c]
  40514a:	mov    bl,0xd5
  40514c:	xor    ebx,DWORD PTR [ecx-0x446008e7]
  405152:	sub    eax,0x760fe8e2
  405157:	in     al,dx
  405158:	daa    
  405159:	and    ah,BYTE PTR [ebp+0x5b537771]
  40515f:	or     al,0x7c
  405161:	pop    edi
  405162:	jecxz  0x40512b
  405164:	rol    BYTE PTR [edi-0x3],cl
  405167:	retf   0x79bb
  40516a:	clc    
  40516b:	loope  0x405108
  40516d:	test   BYTE PTR [edi],al
  40516f:	dec    esi
  405170:	cmp    al,BYTE PTR ds:0x8cdc71dc
  405176:	std    
  405177:	imul   esp,DWORD PTR [eax-0x3d],0x2c
  40517b:	and    bh,BYTE PTR [ebx-0x64909d95]
  405181:	or     BYTE PTR [ebp+0x3a8c86e],ch
  405187:	push   0xffffffba
  405189:	clc    
  40518a:	sbb    cl,ah
  40518c:	ror    BYTE PTR [ebx],1
  40518e:	xchg   ecx,eax
  40518f:	shr    BYTE PTR [ecx-0x30061e65],0xef
  405196:	retf   0x7919
  405199:	jmp    FWORD PTR [edx+0x24]
  40519c:	xor    al,0xc
  40519e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519f:	jp     0x4051ee
  4051a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a2:	sti    
  4051a3:	push   edx
  4051a4:	push   eax
  4051a5:	jne    0x405206
  4051a7:	pop    edi
  4051a8:	pusha  
  4051a9:	int    0x86
  4051ab:	jmp    0x969de7b5
  4051b0:	xor    eax,0x50777ce9
  4051b5:	xor    ecx,DWORD PTR [edi-0x55]
  4051b8:	cmp    BYTE PTR [ebp+eiz*4-0x3abb6d98],bh
  4051bf:	and    bl,bl
  4051c1:	imul   ebx,DWORD PTR [ebx-0x455ba3a6],0x7a3fbbf6
  4051cb:	and    ch,cl
  4051cd:	(bad)  
  4051ce:	adc    edi,edi
  4051d0:	retf   0xc6c0
  4051d3:	jne    0x405157
  4051d5:	sbb    BYTE PTR [edx],bh
  4051d7:	daa    
  4051d8:	inc    ecx
  4051d9:	or     BYTE PTR [edx],dh
  4051db:	pop    esi
  4051dc:	and    esi,DWORD PTR [edx+0x11e1106c]
  4051e2:	js     0x4051bd
  4051e4:	and    esi,DWORD PTR [esi+0x7f]
  4051e7:	dec    eax
  4051e8:	mov    eax,ds:0x92faf42d
  4051ed:	test   eax,0x7c26dbda
  4051f2:	add    al,BYTE PTR [ecx-0x39]
  4051f5:	and    al,0xe2
  4051f7:	sahf   
  4051f8:	jae    0x405232
  4051fa:	rcr    DWORD PTR [esi-0x12179e75],1
  405200:	out    0xbd,al
  405202:	dec    esi
  405203:	cs dec edx
  405205:	jnp    0x405225
  405207:	xchg   ebp,eax
  405208:	gs sub cl,0x70
  40520c:	cmp    eax,DWORD PTR [esi-0x20]
  40520f:	iret   
  405210:	xchg   edx,eax
  405211:	rol    BYTE PTR [edi],0xb
  405214:	and    al,0x6e
  405216:	enter  0x8f8f,0x52
  40521a:	xor    BYTE PTR [eax-0x2a54b1ce],ch
  405220:	mov    esi,0xc362f096
  405225:	sahf   
  405226:	or     BYTE PTR [ebx],cl
  405228:	push   0xdf8cdc7a
  40522d:	in     eax,dx
  40522e:	stc    
  40522f:	fadd   DWORD PTR [ecx-0x6c]
  405232:	cmp    esp,DWORD PTR [ecx-0x47004b47]
  405238:	gs jae 0x4052b8
  40523b:	bound  ecx,QWORD PTR [ebx]
  40523d:	xor    ebp,ebx
  40523f:	shl    DWORD PTR [esi-0x7e],0xe3
  405243:	iret   
  405244:	and    ch,ah
  405246:	fdiv   st(3),st
  405248:	(bad)  
  405249:	jne    0x4052b3
  40524b:	fisub  WORD PTR [edi]
  40524d:	dec    edi
  40524e:	lods   al,BYTE PTR ds:[esi]
  40524f:	in     eax,dx
  405250:	(bad)  
  405252:	ja     0x405223
  405254:	xor    ah,BYTE PTR [ebx]
  405256:	sbb    ch,ch
  405258:	jle    0x4051ef
  40525a:	push   eax
  40525b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525c:	(bad)  
  40525d:	(bad)
  405260:	cwde   
  405261:	adc    eax,DWORD PTR [esi]
  405263:	xor    eax,0xef4e36d1
  405268:	int3   
  405269:	xchg   esi,eax
  40526a:	mov    cl,0x58
  40526c:	mov    al,0x3c
  40526e:	cmc    
  40526f:	fistp  WORD PTR [edx+0x2db8505]
  405275:	add    BYTE PTR [ecx-0x78],ah
  405278:	mov    ds:0x9020cc19,al
  40527d:	lock scas eax,DWORD PTR es:[edi]
  40527f:	mov    esi,0xaa8b83f6
  405284:	into   
  405285:	jbe    0x405216
  405287:	add    BYTE PTR ds:0x6885a71b,ah
  40528d:	pop    esi
  40528e:	mov    ebx,0xfc9aed5b
  405293:	in     eax,0x4b
  405295:	jb     0x405255
  405297:	jbe    0x4052bf
  405299:	outs   dx,BYTE PTR ds:[esi]
  40529a:	push   ecx
  40529b:	jb     0x405230
  40529d:	ret    
  40529e:	retf   0x92cf
  4052a1:	and    DWORD PTR [eax+0x4f],edx
  4052a4:	imul   edx
  4052a6:	ds mov bl,0x76
  4052a9:	jecxz  0x4052aa
  4052ab:	mov    cs,WORD PTR [edx]
  4052ad:	xor    al,0x60
  4052af:	data16 arpl di,sp
  4052b2:	int    0x87
  4052b4:	add    al,0x27
  4052b6:	inc    esp
  4052b7:	dec    eax
  4052b8:	(bad)  
  4052b9:	mov    BYTE PTR [eax],ah
  4052bb:	in     eax,dx
  4052bc:	push   0x5fe936f7
  4052c1:	les    esp,FWORD PTR [ebp*1+0x5ec09f5a]
  4052c8:	sbb    DWORD PTR [eax-0x50],esp
  4052cb:	outs   dx,DWORD PTR ds:[esi]
  4052cc:	stc    
  4052cd:	push   0xfffffffe
  4052cf:	xor    eax,0x2c80b8b8
  4052d4:	sub    edi,ebx
  4052d6:	or     BYTE PTR [edi+ebx*4-0x47dc4365],cl
  4052dd:	cli    
  4052de:	daa    
  4052df:	add    DWORD PTR [ecx-0x60],esp
  4052e2:	jge    0x40527b
  4052e4:	jmp    0x405298
  4052e6:	sub    BYTE PTR [esi],ch
  4052e8:	or     al,0xc2
  4052ea:	push   ds
  4052eb:	ins    DWORD PTR es:[edi],dx
  4052ec:	fidiv  DWORD PTR [ebp-0x5]
  4052ef:	fs fwait
  4052f1:	adc    eax,DWORD PTR [esi-0xc]
  4052f4:	mov    BYTE PTR [esi+0x10b902af],bh
  4052fa:	push   0x74
  4052fc:	in     al,0x28
  4052fe:	jle    0x405283
  405300:	aad    0x9
  405302:	xchg   ecx,eax
  405303:	jns    0x40528d
  405305:	repz js 0x40529c
  405308:	in     al,0xdf
  40530a:	sub    edx,DWORD PTR [eax-0x68]
  40530d:	sbb    DWORD PTR [esi+ebp*2+0x62],ecx
  405311:	inc    edi
  405312:	pusha  
  405313:	(bad)  
  405314:	test   al,0x2f
  405316:	pusha  
  405317:	or     eax,0xa308491
  40531c:	and    ecx,DWORD PTR [ebx+0x1ab4e062]
  405322:	add    dl,ah
  405324:	dec    edi
  405325:	jnp    0x4052c6
  405327:	add    al,0xfe
  405329:	arpl   WORD PTR [esi-0x62],sp
  40532c:	cmc    
  40532d:	mov    edi,ds
  40532f:	cmp    ah,bl
  405331:	jae    0x40533e
  405333:	push   esi
  405334:	retf   0xfc36
  405337:	(bad)  
  405338:	sbb    ah,BYTE PTR [ecx-0x524e6f24]
  40533e:	stos   BYTE PTR es:[edi],al
  40533f:	and    esi,DWORD PTR [edx-0x43913f9c]
  405345:	fmul   DWORD PTR [eax-0x7b]
  405348:	mov    ch,0xd6
  40534a:	shr    DWORD PTR cs:[eax+0x47],1
  40534e:	fucom  st(2)
  405350:	and    esp,esi
  405352:	hlt    
  405353:	push   ds
  405354:	sti    
  405355:	adc    DWORD PTR [esi+0x60],eax
  405358:	mov    dl,BYTE PTR [edx-0x39]
  40535b:	cmp    al,0xe1
  40535d:	cmc    
  40535e:	jl     0x4053d9
  405360:	test   DWORD PTR [ebx-0x6989915e],0xe297fc51
  40536a:	mov    cl,0x25
  40536c:	pop    es
  40536d:	or     DWORD PTR [eax+esi*4+0x4a],ebp
  405371:	dec    ecx
  405372:	xchg   esp,eax
  405373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405374:	(bad)  
  405375:	pop    ebp
  405376:	mov    eax,0x3cf91d68
  40537b:	mov    ch,0x83
  40537d:	cmp    bh,0xa9
  405380:	hlt    
  405381:	je     0x405331
  405383:	lock cmp DWORD PTR [ebp-0x48a95c7a],ecx
  40538a:	dec    esi
  40538b:	(bad)  
  40538c:	mov    ah,0x1a
  40538e:	pop    esp
  40538f:	add    ebx,esp
  405391:	xor    cl,cl
  405393:	stos   DWORD PTR es:[edi],eax
  405394:	push   es
  405395:	xchg   ebp,eax
  405397:	test   eax,0x2d755728
  40539c:	xchg   ecx,eax
  40539d:	call   0x4f7a94e9
  4053a2:	out    0x10,al
  4053a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a5:	pop    es
  4053a6:	nop
  4053a7:	sbb    BYTE PTR [eax],bh
  4053a9:	mov    cl,0xed
  4053ab:	int    0x90
  4053ad:	pop    es
  4053ae:	mov    edi,DWORD PTR [eax-0xd]
  4053b1:	ja     0x405420
  4053b3:	shl    BYTE PTR [edi-0x2a],cl
  4053b6:	fs pop ds
  4053b8:	rcl    esp,cl
  4053ba:	dec    edx
  4053bb:	cwde   
  4053bc:	ds mov edx,0x6f323bae
  4053c2:	mov    dh,BYTE PTR [edi+0x78966d33]
  4053c8:	ficomp DWORD PTR [edi]
  4053ca:	cmp    bh,BYTE PTR [esi+0x3c79c51b]
  4053d0:	scas   eax,DWORD PTR es:[edi]
  4053d1:	push   ss
  4053d2:	imul   ebp,DWORD PTR [eax+0x66],0x8970e799
  4053d9:	dec    ebp
  4053da:	(bad)  
  4053dc:	add    eax,0x6c9a5a57
  4053e1:	cmp    ecx,DWORD PTR [ebp-0x2bdfcb]
  4053e7:	sar    BYTE PTR [edx-0x6e5a1167],cl
  4053ed:	test   ebp,ebx
  4053ef:	jl     0x4053fd
  4053f1:	cmp    DWORD PTR [ebp+0x4bab8a3],esi
  4053f7:	add    bh,dl
  4053f9:	in     eax,0x43
  4053fb:	fwait
  4053fc:	push   edx
  4053fd:	jns    0x4053a7
  4053ff:	xchg   ebp,eax
  405400:	lods   eax,DWORD PTR ds:[esi]
  405401:	pop    ds
  405402:	xor    al,0x6f
  405404:	test   eax,0xdb9bf887
  405409:	xlat   BYTE PTR ds:[ebx]
  40540a:	ss sub al,0x55
  40540d:	out    0xc1,eax
  40540f:	cdq    
  405410:	cmp    DWORD PTR [ecx-0x25d91cfc],ecx
  405416:	sahf   
  405417:	mov    ch,0xf5
  405419:	retf   0x8c80
  40541c:	cmp    cl,cl
  40541e:	loop   0x4053d1
  405420:	jbe    0x405494
  405422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405423:	add    BYTE PTR [eax],0x8c
  405426:	cld    
  405427:	add    ch,ch
  405429:	sbb    DWORD PTR [esi],ecx
  40542b:	jno    0x405457
  40542d:	fs adc eax,0xff4f1dbe
  405433:	add    ebx,esp
  405435:	js     0x40548e
  405437:	cs mov ebx,0xbd5f290d
  40543d:	push   ebx
  40543e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543f:	in     al,0x36
  405441:	stos   DWORD PTR es:[edi],eax
  405442:	pop    ebp
  405443:	shl    DWORD PTR [ecx-0x30c4f80c],1
  405449:	ja     0x4054a0
  40544b:	inc    ebx
  40544c:	or     eax,0xd4d0d74
  405451:	out    0x46,eax
  405453:	(bad)  
  405454:	jmp    0x90c0390e
  405459:	(bad)  
  40545a:	pop    ebx
  40545b:	xor    eax,0xc1abdb63
  405460:	out    0x1c,al
  405462:	xor    eax,0xf3615298
  405467:	add    eax,0x73111188
  40546c:	scas   eax,DWORD PTR es:[edi]
  40546d:	iret   
  40546e:	out    0x58,al
  405470:	out    dx,al
  405471:	pop    es
  405472:	in     eax,0xb0
  405474:	xchg   edi,eax
  405475:	mov    eax,0x7253e327
  40547a:	inc    ecx
  40547b:	cmp    BYTE PTR [ebx-0x3],bl
  40547e:	mov    ebx,0x1c26f3e2
  405483:	(bad)  
  405484:	ja     0x40540c
  405486:	call   0x9166:0xec85257d
  40548d:	mov    BYTE PTR [edi-0x56],0xd7
  405491:	dec    ebx
  405492:	mov    cl,dl
  405494:	sahf   
  405495:	in     eax,0xdc
  405497:	ins    DWORD PTR es:[edi],dx
  405498:	fild   QWORD PTR [esi+edi*4-0x743bc170]
  40549f:	inc    ebx
  4054a0:	dec    esp
  4054a1:	sub    ecx,esi
  4054a3:	sub    DWORD PTR [edi],edi
  4054a5:	sub    DWORD PTR [edi+0x24],0x5e5c974e
  4054ac:	fwait
  4054ad:	dec    esp
  4054ae:	dec    ecx
  4054af:	xor    al,0x20
  4054b1:	sbb    BYTE PTR [edx-0x75],0x29
  4054b5:	add    eax,0x51d79373
  4054ba:	sbb    ebx,DWORD PTR [edx+0x7a71d7a0]
  4054c0:	enter  0x388d,0x9
  4054c4:	(bad)  
  4054c5:	sar    DWORD PTR [ebx+0x2aa96d3c],1
  4054cb:	mov    al,BYTE PTR [ecx+0x74]
  4054ce:	xor    esp,DWORD PTR [esi]
  4054d0:	jne    0x4054a7
  4054d2:	and    eax,0xb8a5ec14
  4054d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d8:	stos   BYTE PTR es:[edi],al
  4054d9:	push   ebx
  4054da:	push   ebx
  4054db:	adc    al,0x66
  4054dd:	or     DWORD PTR [ecx+0x3b4e0e50],edx
  4054e3:	push   esi
  4054e4:	(bad)  
  4054e5:	retf   
  4054e6:	sahf   
  4054e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054e8:	dec    edi
  4054e9:	call   0x7a73:0x9a4ca838
  4054f0:	jae    0x40555d
  4054f2:	mov    ds:0xa26050f5,eax
  4054f7:	cli    
  4054f8:	ja     0x4054ab
  4054fa:	pop    ebx
  4054fb:	nop
  4054fc:	popf   
  4054fd:	dec    eax
  4054fe:	leave  
  4054ff:	mov    ds:0xc633e60,eax
  405504:	jl     0x40556b
  405506:	in     eax,dx
  405507:	push   edi
  405508:	jnp    0x405490
  40550a:	push   esp
  40550b:	and    cl,ah
  40550d:	dec    ebx
  40550e:	mov    edi,0x306264c2
  405513:	xchg   edx,eax
  405514:	dec    eax
  405515:	mov    bh,0x59
  405517:	test   ax,0xf4d6
  40551b:	(bad)  
  40551c:	jmp    0x9d84:0x20835b59
  405523:	cmp    esp,esi
  405525:	push   ss
  405526:	add    DWORD PTR [edx+0x7e96b311],0xffffffbe
  40552d:	and    DWORD PTR [ebx+0x5c2f698d],edx
  405533:	mov    WORD PTR [ebp+ecx*8-0x497c8498],fs
  40553a:	stos   BYTE PTR es:[edi],al
  40553b:	jp     0x40550e
  40553d:	xchg   edi,eax
  40553e:	jp     0x40554a
  405540:	outs   dx,DWORD PTR ds:[esi]
  405541:	cs cli 
  405543:	out    0x6a,al
  405545:	xlat   BYTE PTR ds:[ebx]
  405546:	push   es
  405547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405548:	fidivr WORD PTR [ebx]
  40554a:	inc    esp
  40554b:	mul    BYTE PTR [ebx]
  40554d:	jb     0x40558f
  40554f:	adc    bh,BYTE PTR [eax-0x10]
  405552:	mov    ds:0xc1af80fd,al
  405557:	iret   
  405558:	(bad)  
  405559:	mov    edi,0xe7cc7826
  40555e:	outs   dx,DWORD PTR ds:[esi]
  40555f:	mov    al,0xfb
  405561:	adc    eax,0x8cbd1627
  405566:	fstp   TBYTE PTR [edi-0x226d9ffa]
  40556c:	adc    eax,0xa5a69f8a
  405571:	mov    dh,0x7b
  405573:	jp     0x405561
  405575:	inc    edx
  405576:	test   al,0xb8
  405578:	fbld   TBYTE PTR [ecx+0x1a]
  40557b:	imul   esi,edi,0x6a80f00a
  405581:	or     eax,0x88b8c460
  405586:	ss imul al
  405589:	push   ebp
  40558a:	int    0xe2
  40558c:	call   0x2714bd12
  405591:	mov    ebp,0x4039746c
  405596:	cmc    
  405597:	sbb    al,0x6a
  405599:	dec    esp
  40559a:	cdq    
  40559b:	sar    DWORD PTR [esi],cl
  40559d:	push   edi
  40559e:	pop    esp
  40559f:	cmp    eax,0x52940a21
  4055a4:	loopne 0x4055f8
  4055a6:	ds fdivr DWORD PTR cs:[edx+edi*1-0x1f]
  4055ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ad:	pushf  
  4055ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055af:	xor    cl,BYTE PTR [eax-0x66f78511]
  4055b5:	call   0x1710:0xabb49e6e
  4055bc:	adc    esp,DWORD PTR [esi-0x1a]
  4055bf:	cli    
  4055c0:	fidiv  DWORD PTR [eax+ebx*1]
  4055c3:	xchg   ecx,eax
  4055c4:	lods   eax,DWORD PTR ds:[esi]
  4055c5:	xchg   ecx,eax
  4055c6:	addr16 cwde 
  4055c8:	aad    0x2d
  4055ca:	xor    BYTE PTR [edi],bh
  4055cc:	xlat   BYTE PTR ds:[ebx]
  4055cd:	pop    eax
  4055ce:	adc    ch,BYTE PTR [edx*8-0x102c155b]
  4055d5:	mov    ecx,0xd6901d06
  4055da:	pop    edi
  4055db:	outs   dx,BYTE PTR ds:[esi]
  4055dc:	inc    esp
  4055dd:	test   DWORD PTR [edx+0x71db08ad],ebx
  4055e3:	sub    DWORD PTR [eax-0x56],edx
  4055e6:	sbb    eax,0x62e81789
  4055eb:	dec    edi
  4055ec:	and    bl,ch
  4055ee:	mov    dl,0x8f
  4055f0:	icebp  
  4055f1:	or     eax,0xd42ed03a
  4055f6:	push   esi
  4055f7:	lods   eax,DWORD PTR ds:[esi]
  4055f8:	jae    0x4055a3
  4055fa:	jmp    FWORD PTR [eax+ebp*1+0x4]
  4055fe:	es sar DWORD PTR ds:[edi+0x4040640a],0x91
  405607:	fwait
  405608:	int    0x36
  40560a:	mov    bh,0x24
  40560c:	xor    cl,bl
  40560e:	fbld   TBYTE PTR [esi-0x13]
  405611:	dec    esp
  405612:	inc    esi
  405613:	pop    ecx
  405614:	cdq    
  405615:	xchg   BYTE PTR [esi-0x109c0eea],dl
  40561b:	imul   eax,DWORD PTR [ecx+0x13a96158],0x78
  405622:	test   al,0x8f
  405624:	bound  ebx,QWORD PTR [ebx+0x1ade7ecd]
  40562a:	jmp    0x405670
  40562c:	mov    bl,0x60
  40562e:	out    0x23,al
  405630:	test   BYTE PTR [edi-0x664d26db],dh
  405636:	xchg   DWORD PTR [edi],edx
  405638:	jne    0x40565b
  40563a:	das    
  40563b:	shl    dh,0x27
  40563e:	adc    BYTE PTR [ebp-0x4a740813],0x4b
  405645:	mov    al,ds:0x60e3c9a6
  40564a:	outs   dx,DWORD PTR ds:[esi]
  40564b:	adc    DWORD PTR [eax-0x4],0xffffffa5
  40564f:	hlt    
  405650:	aaa    
  405651:	mov    ds:0xbce254b,eax
  405656:	sbb    bl,bh
  405658:	cmp    BYTE PTR [eax+0x22],al
  40565b:	arpl   WORD PTR ds:[ecx+0xcc6cdcb],si
  405662:	(bad)  
  405663:	cmp    cl,BYTE PTR [edx+0x53]
  405666:	mov    bh,0x77
  405668:	pushf  
  405669:	and    eax,0x4cf60d1
  40566e:	mov    al,0x62
  405670:	sbb    dh,BYTE PTR [edx]
  405672:	retf   
  405673:	inc    esi
  405674:	stc    
  405675:	inc    ebx
  405676:	fs jp  0x405662
  405679:	fstp   DWORD PTR [edi+0x35]
  40567c:	out    dx,al
  40567d:	add    DWORD PTR [eax-0x50],edi
  405680:	jns    0x405619
  405682:	lea    edi,[ebx]
  405684:	add    al,0xf6
  405686:	cdq    
  405687:	add    DWORD PTR [esi-0x73ab51be],ecx
  40568d:	xchg   edx,eax
  40568e:	mov    bh,0xa
  405690:	sti    
  405691:	call   0xb9cfce06
  405696:	out    dx,al
  405697:	stos   BYTE PTR es:[edi],al
  405698:	sti    
  405699:	ss mov edi,0xbe9831d8
  40569f:	push   ds
  4056a0:	and    eax,0x71d7ec2f
  4056a5:	mov    edx,DWORD PTR [ebx+0x76]
  4056a8:	push   0xb9991353
  4056ad:	jge    0x4056fd
  4056af:	push   0xffffffb6
  4056b1:	ror    DWORD PTR [ecx],0x55
  4056b4:	adc    bh,BYTE PTR ds:0x2b17bf1a
  4056ba:	xchg   edi,eax
  4056bb:	sbb    DWORD PTR [ecx-0x37],esp
  4056be:	cwde   
  4056bf:	add    DWORD PTR ds:0x32f442b6,ebp
  4056c5:	mov    ds,WORD PTR [edi]
  4056c7:	popa   
  4056c8:	jbe    0x4056f0
  4056ca:	push   cs
  4056cb:	xor    BYTE PTR [edi-0x67],cl
  4056ce:	iret   
  4056cf:	inc    esp
  4056d0:	pop    ds
  4056d1:	in     eax,0xc2
  4056d3:	popf   
  4056d4:	inc    ebp
  4056d5:	test   BYTE PTR [ebx+0x2f],al
  4056d8:	push   es
  4056d9:	cmp    eax,DWORD PTR ds:0xc001a24d
  4056df:	je     0x4056fc
  4056e1:	(bad)  
  4056e2:	clc    
  4056e3:	cmp    al,0xd9
  4056e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e6:	leave  
  4056e7:	adc    DWORD PTR [ebx-0x2e7f89a2],eax
  4056ed:	repz or ebx,DWORD PTR [edx+0x764b7eff]
  4056f4:	mov    edi,0xd3aaf716
  4056f9:	lahf   
  4056fa:	cdq    
  4056fb:	xor    cl,BYTE PTR [esp+esi*8+0x7b]
  4056ff:	xchg   ebp,eax
  405700:	jecxz  0x405707
  405702:	ret    
  405703:	adc    ah,dl
  405705:	das    
  405706:	pop    edi
  405707:	lods   eax,DWORD PTR ds:[esi]
  405708:	jae    0x405714
  40570a:	jl     0x405779
  40570c:	imul   ebx,DWORD PTR [ecx],0x32c9e0b5
  405712:	jb     0x405709
  405714:	repnz sub ecx,esp
  405717:	jle    0x405717
  405719:	dec    ecx
  40571a:	pusha  
  40571b:	mov    cl,0x84
  40571d:	into   
  40571e:	inc    ebp
  40571f:	sar    ch,0xf0
  405722:	adc    eax,0x7c7b1516
  405727:	das    
  405728:	ja     0x405752
  40572a:	and    al,0x97
  40572c:	adc    eax,0x11474dea
  405731:	std    
  405732:	and    BYTE PTR [edx-0x41069000],dl
  405738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405739:	jbe    0x405771
  40573b:	inc    ebx
  40573c:	add    eax,0xd3fef6c8
  405741:	stc    
  405742:	stos   BYTE PTR es:[edi],al
  405743:	fs retf 0x167f
  405747:	out    dx,al
  405748:	push   cs
  405749:	push   ecx
  40574a:	gs or  eax,0x1508eb52
  405750:	or     BYTE PTR [ecx-0x13d683ef],dh
  405756:	jae    0x405710
  405758:	(bad)
  40575b:	mov    al,ds:0x541ca40b
  405760:	adc    esi,DWORD PTR [ecx]
  405762:	push   ebx
  405763:	fcomip st,st(3)
  405765:	lods   eax,DWORD PTR ds:[esi]
  405766:	arpl   WORD PTR [edx-0x46],bx
  405769:	test   al,0x34
  40576b:	pop    esp
  40576c:	jo     0x4056f8
  40576e:	sbb    eax,DWORD PTR [ecx+0x70ce90c3]
  405774:	push   esp
  405775:	push   ebp
  405776:	int3   
  405777:	mov    BYTE PTR [ebp+0x67],ch
  40577a:	clc    
  40577b:	nop
  40577c:	div    DWORD PTR [edx-0x1834edb1]
  405782:	mov    ah,0x1f
  405784:	fnstenv [eax-0x65663027]
  40578a:	in     eax,0x52
  40578c:	mov    cl,0x80
  40578e:	inc    edx
  40578f:	in     eax,0xb0
  405791:	jp     0x4057ec
  405793:	jno    0x4057d7
  405795:	push   ds
  405796:	out    dx,al
  405797:	xor    ebp,DWORD PTR [edi]
  405799:	inc    ebx
  40579a:	fist   WORD PTR [ebx+0x28]
  40579d:	dec    ecx
  40579e:	(bad)  
  40579f:	addr16 mov ch,0x79
  4057a2:	mov    edx,0x76a2989a
  4057a7:	push   ds
  4057a8:	pop    eax
  4057a9:	xor    edx,DWORD PTR [edi-0x73b9a71b]
  4057af:	cmc    
  4057b0:	(bad)  
  4057b1:	adc    eax,0xf07c349f
  4057b6:	cmp    ecx,DWORD PTR [edi+0x5dcbf4b8]
  4057bc:	mov    bh,0xef
  4057be:	push   esp
  4057bf:	mov    dl,0x8c
  4057c1:	or     BYTE PTR [ebx+0x450af906],0x92
  4057c8:	cmp    al,0x33
  4057ca:	int    0xbf
  4057cc:	mov    esi,0xe586a764
  4057d1:	push   ss
  4057d2:	xchg   ebx,eax
  4057d3:	mov    esp,0xb9df408d
  4057d8:	push   ebx
  4057d9:	push   esi
  4057da:	mov    ecx,0x7170f134
  4057df:	jle    0x4057ca
  4057e1:	fiadd  DWORD PTR [eax-0x4d]
  4057e4:	jb     0x405854
  4057e6:	and    ebx,0x7a
  4057e9:	adc    BYTE PTR [edi],bl
  4057eb:	cmp    eax,0xb5a23dd6
  4057f0:	lods   al,BYTE PTR ds:[esi]
  4057f1:	cmp    al,0xea
  4057f3:	xor    al,0x58
  4057f5:	shl    cl,cl
  4057f7:	xor    al,BYTE PTR [edi-0x6984c189]
  4057fd:	dec    eax
  4057fe:	jb     0x405861
  405800:	sbb    al,0x82
  405802:	out    0xc7,al
  405804:	gs (bad) 
  405806:	jnp    0x405871
  405808:	imul   DWORD PTR [esi+edx*8]
  40580b:	call   0xbd376fd2
  405810:	xor    eax,0xe19f7ce9
  405815:	xchg   ebx,eax
  405816:	retf   
  405817:	addr16 mov ds:0xbbf2,eax
  40581b:	loop   0x405841
  40581d:	and    dh,BYTE PTR [esi-0x689a0a27]
  405823:	pop    edx
  405824:	xchg   edx,eax
  405825:	cdq    
  405826:	adc    cl,BYTE PTR [edx-0x49]
  405829:	and    al,0x7a
  40582b:	test   al,0xa2
  40582d:	xchg   edx,eax
  40582e:	ret    
  40582f:	jmp    0x4057f0
  405831:	lods   al,BYTE PTR ds:[esi]
  405832:	retf   0xb84e
  405835:	push   0xffffffc8
  405837:	mov    cl,BYTE PTR [eax*2-0x76f7d06c]
  40583e:	adc    al,0xb
  405840:	cmp    eax,0xc701189e
  405845:	and    bh,BYTE PTR [ecx+0x4ece63a4]
  40584b:	push   ss
  40584c:	xor    ah,dl
  40584e:	(bad)  
  40584f:	sti    
  405850:	aaa    
  405851:	pop    ds
  405852:	ds imul edi,edx,0xfffffff8
  405856:	mov    ch,0x95
  405858:	ds ja  0x405831
  40585b:	or     ecx,DWORD PTR [ebx-0x8]
  40585e:	push   esi
  40585f:	out    dx,al
  405860:	and    al,0xfe
  405862:	cmp    esi,DWORD PTR [di]
  405865:	adc    al,cl
  405867:	in     al,dx
  405868:	test   BYTE PTR [ebx-0x761b7f40],bl
  40586e:	or     eax,0x1f9c86a1
  405873:	cwde   
  405874:	add    eax,0x263e9056
  405879:	mov    eax,0x6334ae11
  40587e:	jge    0x40581f
  405880:	adc    BYTE PTR [eax+edx*8-0x13],ch
  405884:	lea    esi,[edi-0x72]
  405887:	mov    ebp,0xc6cec3f5
  40588c:	ficomp DWORD PTR ds:0xc0d1c84e
  405892:	push   0x5983753b
  405897:	popf   
  405898:	pop    esp
  405899:	sbb    BYTE PTR [ecx+0x57],cl
  40589c:	fist   DWORD PTR [edx]
  40589e:	out    0xe9,eax
  4058a0:	mov    DWORD PTR [esi-0x6],esp
  4058a3:	xor    edx,DWORD PTR [eax+0x7e637ee1]
  4058a9:	adc    eax,0xe7728404
  4058ae:	ret    0xb5b1
  4058b1:	jo     0x40589a
  4058b3:	retf   
  4058b4:	retf   0x9d9c
  4058b7:	or     eax,0xbf008879
  4058bc:	or     dl,bh
  4058be:	int3   
  4058bf:	mov    ebx,0x4f8b8dc8
  4058c4:	and    BYTE PTR [esi+0x7a],ch
  4058c7:	rcr    ecx,1
  4058c9:	ret    0xc79
  4058cc:	icebp  
  4058cd:	aaa    
  4058ce:	xor    edi,ecx
  4058d0:	sub    ecx,DWORD PTR [eax+0x37]
  4058d3:	ret    0xcfb2
  4058d6:	adc    bl,BYTE PTR ds:0x65e119fd
  4058dc:	cmp    eax,0x73cee669
  4058e1:	jb     0x4058bb
  4058e3:	mov    ds:0x9a2dd15e,al
  4058e8:	scas   al,BYTE PTR es:[edi]
  4058e9:	idiv   BYTE PTR [ecx+0x12]
  4058ec:	(bad)  
  4058ed:	hlt    
  4058ee:	test   BYTE PTR [ecx-0x12908],dh
  4058f4:	xchg   esp,eax
  4058f5:	jnp    0x40589d
  4058f7:	fidiv  WORD PTR [ebp+edi*2+0x49]
  4058fb:	addr16 pop esi
  4058fd:	ss pop eax
  4058ff:	xor    BYTE PTR [edx],0xda
  405902:	sbb    al,0x2d
  405904:	imul   ecx
  405906:	add    DWORD PTR [eax+0x4],ebx
  405909:	xchg   ebx,eax
  40590a:	mov    ecx,0x752b9b5b
  40590f:	(bad)  
  405910:	mov    edi,gs
  405912:	adc    BYTE PTR [edx+0x22734e3d],al
  405918:	mov    dh,0xd3
  40591a:	mov    dl,0x1a
  40591c:	or     DWORD PTR [ebx],edx
  40591e:	ret    
  40591f:	push   ss
  405920:	lahf   
  405921:	sub    al,0x3c
  405923:	lods   eax,DWORD PTR ds:[esi]
  405924:	retf   
  405925:	test   BYTE PTR [ecx+0x40855590],al
  40592b:	pop    edx
  40592c:	mov    gs,WORD PTR [edi-0x4f6d02cd]
  405932:	push   ebx
  405933:	xchg   ecx,eax
  405934:	dec    esp
  405935:	popf   
  405936:	(bad)  
  405938:	imul   ebp,DWORD PTR [ebx-0x20],0x7bd1084
  40593f:	dec    edi
  405940:	das    
  405941:	daa    
  405942:	cld    
  405943:	jbe    0x405964
  405945:	pop    ebx
  405946:	mov    DWORD PTR [ecx+eax*8-0x430968ff],ebp
  40594d:	inc    ecx
  40594e:	mov    bl,0xd6
  405950:	adc    esi,DWORD PTR [esi-0x20]
  405953:	cs xchg esp,eax
  405955:	mov    bh,0xa0
  405957:	pop    edi
  405958:	dec    ebx
  405959:	push   esp
  40595a:	arpl   WORD PTR [edi],si
  40595c:	sahf   
  40595d:	pop    edi
  40595e:	sub    BYTE PTR [ebx-0x64fa75f2],cl
  405964:	(bad)  
  405965:	pop    esi
  405966:	lahf   
  405967:	add    ch,BYTE PTR [eax+0x78e41b2c]
  40596d:	xchg   ecx,eax
  40596e:	sub    al,0x26
  405970:	outs   dx,WORD PTR ds:[esi]
  405972:	xor    edx,ecx
  405974:	loop   0x4059bf
  405976:	stc    
  405977:	jge    0x4059e6
  405979:	aaa    
  40597a:	dec    edx
  40597b:	into   
  40597c:	outs   dx,BYTE PTR ds:[esi]
  40597d:	xchg   edx,eax
  40597e:	call   FWORD PTR [ecx+0x7]
  405981:	adc    al,0xb9
  405983:	ja     0x405975
  405985:	mov    eax,DWORD PTR [ebp-0x9]
  405988:	div    DWORD PTR [ebp-0x40]
  40598b:	fwait
  40598c:	or     al,0x9c
  40598e:	xchg   ecx,eax
  40598f:	out    dx,al
  405990:	aad    0x82
  405992:	fcmovb st,st(2)
  405994:	push   ebp
  405995:	inc    ebx
  405996:	sbb    esp,DWORD PTR [eax+0x60]
  405999:	push   0x692a4463
  40599e:	mov    esp,0x23ee864e
  4059a3:	inc    edi
  4059a4:	fisub  DWORD PTR [edi]
  4059a6:	pop    edi
  4059a7:	test   eax,0x33bc195d
  4059ac:	cli    
  4059ad:	(bad)  
  4059ae:	sti    
  4059af:	jno    0x4059b6
  4059b1:	sahf   
  4059b2:	ret    
  4059b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b4:	sub    al,0x68
  4059b6:	or     DWORD PTR [esi],ebx
  4059b8:	mov    ebx,eax
  4059ba:	pusha  
  4059bb:	or     DWORD PTR [edi-0x5a],0x784963c6
  4059c2:	adc    DWORD PTR [ebx+edi*8],edi
  4059c5:	or     al,0x59
  4059c7:	test   DWORD PTR [esp+edx*2+0x2fcea6eb],ebx
  4059ce:	add    DWORD PTR [edx-0x4a],ecx
  4059d1:	pop    edx
  4059d2:	test   eax,0xa370d443
  4059d7:	fs adc al,0x3f
  4059da:	jae    0x405a4f
  4059dc:	pop    ebx
  4059dd:	(bad)  
  4059de:	retf   
  4059df:	xchg   edx,eax
  4059e0:	and    ebx,DWORD PTR [ecx]
  4059e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e3:	loope  0x405a3e
  4059e5:	push   ebp
  4059e6:	icebp  
  4059e7:	inc    esp
  4059e8:	pop    edi
  4059e9:	jno    0x405a61
  4059eb:	jns    0x4059c5
  4059ed:	imul   esp,DWORD PTR [edi+0x60215763],0xffffffd9
  4059f4:	adc    ebp,DWORD PTR [edx+0x4bc6c328]
  4059fa:	test   DWORD PTR [esi],edx
  4059fc:	pop    ss
  4059fd:	push   ds
  4059fe:	sub    ebp,esp
  405a00:	jnp    0x4059c7
  405a02:	adc    bh,dh
  405a04:	jo     0x40599d
  405a06:	mov    ecx,0x18f5c64e
  405a0b:	or     BYTE PTR [ecx],dh
  405a0d:	xchg   BYTE PTR [ecx+0x35],dl
  405a10:	push   ebx
  405a11:	mov    ah,0xdb
  405a13:	aam    0x4b
  405a15:	sub    ah,cl
  405a17:	or     esp,DWORD PTR [ebx-0x32]
  405a1a:	cmp    esp,ebp
  405a1c:	mov    eax,ds:0xd72e8519
  405a21:	mov    eax,ds:0x941e38cd
  405a26:	dec    eax
  405a27:	or     eax,0x38ca25fc
  405a2c:	in     eax,0xf4
  405a2e:	iret   
  405a2f:	mov    ah,0xe9
  405a31:	or     dl,bl
  405a33:	dec    edx
  405a34:	leave  
  405a35:	cmp    bh,cl
  405a37:	enter  0xcb3d,0x48
  405a3b:	jnp    0x405ab4
  405a3d:	cmpxchg BYTE PTR [ebx+0x35da85e9],dl
  405a44:	push   0xffffff8d
  405a46:	adc    eax,0xe00efd95
  405a4b:	dec    eax
  405a4c:	add    DWORD PTR [edx-0x48838fd],edx
  405a52:	xchg   cl,bh
  405a54:	mov    ecx,cs
  405a56:	sbb    al,0xb4
  405a58:	sub    al,0x96
  405a5a:	mov    ds:0x66daa000,eax
  405a5f:	pop    ebx
  405a60:	mov    ecx,0xd48e3c3e
  405a65:	mov    al,ds:0x3e4ca696
  405a6a:	push   0xffffff98
  405a6c:	in     eax,0x9
  405a6e:	div    DWORD PTR [ecx+eiz*2-0x75fcdc2d]
  405a75:	into   
  405a76:	sub    cl,BYTE PTR [ebx-0x4f9eaf08]
  405a7c:	out    dx,al
  405a7d:	add    cl,dh
  405a7f:	inc    edx
  405a80:	in     al,dx
  405a81:	cmp    ebp,eax
  405a83:	ds ret 0x211a
  405a87:	(bad)  
  405a88:	pop    ebx
  405a89:	test   BYTE PTR [ecx],bh
  405a8b:	sbb    edx,DWORD PTR [edi]
  405a8d:	jbe    0x405ab9
  405a8f:	inc    esi
  405a90:	pop    ebx
  405a91:	mov    ch,0xd8
  405a93:	add    DWORD PTR [ecx-0x236640e6],ebx
  405a99:	inc    esi
  405a9a:	pop    ebp
  405a9b:	mov    gs,WORD PTR ds:0xd6b776b1
  405aa1:	ins    BYTE PTR es:[edi],dx
  405aa2:	xchg   DWORD PTR [edx+0x59],ebx
  405aa5:	push   eax
  405aa6:	sub    eax,0x3a30bc81
  405aab:	clc    
  405aac:	xabort 0x43
  405aaf:	cmp    eax,0x9a361c6b
  405ab4:	test   cl,ah
  405ab6:	daa    
  405ab7:	xchg   edx,eax
  405ab8:	adc    ch,BYTE PTR [eax-0xf]
  405abb:	xchg   esp,eax
  405abc:	mov    ecx,0x3d5d7669
  405ac1:	push   esi
  405ac2:	data16 aam 0xa3
  405ac5:	jge    0x405aa5
  405ac7:	lods   al,BYTE PTR ds:[esi]
  405ac8:	mov    ebx,0x4c6ceef2
  405acd:	repz or ecx,DWORD PTR [ecx+0x1f3931d0]
  405ad4:	dec    esi
  405ad5:	fwait
  405ad6:	jg     0x405af4
  405ad8:	and    DWORD PTR [edx-0x6cb0b1a4],esp
  405ade:	mov    DWORD PTR [edx+0x0],ecx
  405ae1:	out    0x3,eax
  405ae3:	xchg   DWORD PTR [esp+eax*8+0x2e],esp
  405ae7:	mov    ecx,0x2b070aac
  405aec:	xchg   esi,eax
  405aed:	fcmovb st,st(7)
  405aef:	cmp    al,0xe2
  405af1:	jp     0x405a78
  405af3:	or     edi,DWORD PTR [esi+0x16955656]
  405af9:	add    eax,0x1d453ac7
  405afe:	jmp    0xb27c:0x7e10b3a8
  405b05:	shl    BYTE PTR ds:0x675e5042,1
  405b0b:	push   esi
  405b0c:	inc    esi
  405b0d:	xchg   ebx,eax
  405b0e:	jae    0x405afd
  405b10:	mov    bl,0xf3
  405b12:	cmp    eax,0x7b84d9b6
  405b17:	iret   
  405b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b19:	xlat   BYTE PTR ds:[ebx]
  405b1a:	jne    0x405ad1
  405b1c:	mov    ah,0xee
  405b1e:	and    edi,DWORD PTR [esi-0x71]
  405b21:	ret    0x7b46
  405b24:	out    dx,eax
  405b25:	lods   al,BYTE PTR ds:[esi]
  405b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b27:	call   0x61ac1bf6
  405b2c:	jmp    0x7ec716aa
  405b31:	add    al,0xa
  405b33:	pop    ecx
  405b34:	icebp  
  405b35:	push   esp
  405b36:	add    dh,al
  405b38:	in     eax,dx
  405b39:	pusha  
  405b3a:	jge    0x405b9b
  405b3c:	loope  0x405b4a
  405b3e:	xchg   ecx,eax
  405b3f:	xor    eax,0xf1335735
  405b44:	aam    0x3
  405b46:	pop    es
  405b47:	(bad)  
  405b48:	imul   edi,DWORD PTR [eax+0x5e0133aa],0xffffffc7
  405b4f:	jg     0x405afa
  405b51:	ss pop ecx
  405b53:	into   
  405b54:	iret   
  405b55:	cmp    BYTE PTR [ecx+0xab31ac6],bh
  405b5b:	mov    ecx,0x8672e938
  405b60:	mov    DWORD PTR [eax-0x2dd2daf4],0x3e559006
  405b6a:	ins    DWORD PTR es:[edi],dx
  405b6b:	xchg   ecx,eax
  405b6c:	push   cs
  405b6d:	nop
  405b6e:	adc    cl,al
  405b70:	push   es
  405b71:	in     eax,dx
  405b72:	test   eax,0x868d9d15
  405b77:	cmp    BYTE PTR ss:[edi+0x4da9c87e],bh
  405b7e:	xor    edi,ebx
  405b80:	cld    
  405b81:	jnp    0x405bfc
  405b83:	fisub  WORD PTR [ecx+0x26]
  405b86:	dec    edi
  405b87:	mov    bl,0x3
  405b89:	mov    ds:0x820064b4,al
  405b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8f:	test   BYTE PTR [ecx-0x5eb981af],ch
  405b95:	adc    DWORD PTR [ecx-0x5],esi
  405b98:	test   DWORD PTR [ecx-0x38397053],ebp
  405b9e:	dec    edx
  405b9f:	jge    0x405c0b
  405ba1:	push   esp
  405ba2:	cmp    cl,cl
  405ba4:	std    
  405ba5:	js     0x405b4c
  405ba7:	(bad)  
  405ba8:	in     eax,dx
  405ba9:	data16 (bad) 
  405bab:	mov    dh,0xc9
  405bad:	(bad)  
  405bae:	xchg   edi,eax
  405baf:	inc    edx
  405bb0:	xchg   edx,eax
  405bb1:	(bad)  
  405bb3:	sbb    DWORD PTR [ecx+ecx*2-0x49],eax
  405bb7:	xchg   edi,eax
  405bb8:	xlat   BYTE PTR ds:[ebx]
  405bb9:	dec    eax
  405bba:	imul   ebx,DWORD PTR [ecx+0xf034e08],0xd1aab62e
  405bc4:	inc    edi
  405bc5:	xchg   esp,eax
  405bc6:	mov    al,ds:0x4c080ce6
  405bcb:	add    edi,DWORD PTR [ebp+0x48]
  405bce:	dec    esp
  405bcf:	aad    0xcd
  405bd1:	iret   
  405bd2:	dec    esi
  405bd3:	mov    al,0xa5
  405bd5:	mov    DWORD PTR [edi+0x1cbb0456],esp
  405bdb:	shl    DWORD PTR [edi+0x2a],0x9a
  405bdf:	mov    BYTE PTR ds:0xfb418c1a,ch
  405be5:	sahf   
  405be6:	leave  
  405be7:	mov    edx,0x521d658
  405bec:	outs   dx,DWORD PTR ds:[esi]
  405bed:	xchg   ebp,eax
  405bee:	cmp    BYTE PTR ds:0x6a60b1f5,al
  405bf4:	ds aas 
  405bf6:	shr    DWORD PTR [edx+0x42],1
  405bf9:	(bad)  
  405bfa:	in     eax,0xf
  405bfc:	mov    esi,0xffa4550f
  405c01:	cld    
  405c02:	test   eax,0x5896aa2f
  405c07:	inc    eax
  405c08:	mov    BYTE PTR [ebx+0xca07e31],dh
  405c0e:	mov    ecx,0xe75b7129
  405c13:	js     0x405bcb
  405c15:	add    eax,0x49e465e9
  405c1a:	bound  ebp,QWORD PTR fs:[eax+0x38]
  405c1e:	std    
  405c1f:	dec    edi
  405c20:	mov    eax,0x703080ab
  405c25:	pop    ecx
  405c27:	mov    esp,DWORD PTR [ecx+edx*1-0x53]
  405c2b:	loopne 0x405c5b
  405c2d:	ror    BYTE PTR [edi-0x6253823f],1
  405c33:	stos   BYTE PTR es:[edi],al
  405c34:	jmp    0x977f8e7
  405c39:	xchg   edx,eax
  405c3a:	cwde   
  405c3b:	popa   
  405c3c:	ja     0x405c3c
  405c3e:	js     0x405c7b
  405c40:	retf   0xffee
  405c43:	inc    ebp
  405c44:	retf   0x125e
  405c47:	popf   
  405c48:	imul   edi,DWORD PTR [ebp-0x57],0xffffffc6
  405c4c:	jb     0x405c5d
  405c4e:	and    BYTE PTR [edx],dh
  405c50:	sub    al,ah
  405c52:	jnp    0x405c84
  405c54:	in     al,dx
  405c55:	mov    ecx,0x8680dfb8
  405c5a:	jae    0x405cb5
  405c5c:	inc    edi
  405c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5e:	ins    BYTE PTR es:[edi],dx
  405c5f:	lds    ecx,FWORD PTR [esi+0x17]
  405c62:	sti    
  405c63:	pop    es
  405c64:	and    dh,ah
  405c66:	in     eax,dx
  405c67:	adc    al,BYTE PTR [esi-0x69]
  405c6a:	ror    esp,0xb2
  405c6d:	mov    DWORD PTR [esi],eax
  405c6f:	mov    di,0x8d59
  405c73:	inc    eax
  405c74:	stos   BYTE PTR es:[edi],al
  405c75:	mov    ah,0x2d
  405c77:	mov    ah,0x42
  405c79:	pop    ss
  405c7a:	dec    ebp
  405c7b:	fiadd  DWORD PTR [ebx-0x67178699]
  405c81:	adc    al,0xdb
  405c83:	dec    ecx
  405c84:	jae    0x405ceb
  405c86:	ret    
  405c87:	ds shl ebp,1
  405c8a:	xchg   edi,eax
  405c8b:	pusha  
  405c8c:	sub    ecx,ebx
  405c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c8f:	mov    WORD PTR [edx-0x642f3c5],fs
  405c95:	leave  
  405c96:	imul   BYTE PTR [ebx+0x77aa2936]
  405c9c:	mov    esi,DWORD PTR [edx+0x53]
  405c9f:	pop    ss
  405ca0:	shl    BYTE PTR ds:0x3dc26999,1
  405ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca7:	sbb    ch,BYTE PTR [ebx+0x71aea93]
  405cad:	clc    
  405cae:	xchg   ebp,eax
  405caf:	jnp    0x405cc4
  405cb1:	ja     0x405c4e
  405cb3:	dec    esp
  405cb4:	or     al,0xef
  405cb6:	sbb    ebp,edi
  405cb8:	psubq  mm6,mm1
  405cbb:	popf   
  405cbc:	cdq    
  405cbd:	retf   
  405cbe:	xchg   esi,eax
  405cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cc0:	lahf   
  405cc1:	mov    BYTE PTR [ebp-0x7f],dl
  405cc4:	rcr    BYTE PTR [ebx],cl
  405cc6:	std    
  405cc7:	jns    0x405c9d
  405cc9:	jbe    0x405c94
  405ccb:	cmc    
  405ccc:	pop    esp
  405ccd:	aad    0x82
  405ccf:	fistp  WORD PTR [edi-0xc]
  405cd2:	(bad)  
  405cd3:	mov    esp,0x9972ad1d
  405cd8:	dec    cl
  405cda:	sbb    DWORD PTR [ebx],eax
  405cdc:	test   eax,0x4d1f55ea
  405ce1:	arpl   WORD PTR ds:0x6c341747,cx
  405ce7:	fisubr DWORD PTR [ecx-0x22]
  405cea:	loopne 0x405d42
  405cec:	push   esi
  405ced:	push   ebp
  405cee:	mov    ch,0xa3
  405cf0:	pop    edi
  405cf1:	mov    eax,ds:0x12b82507
  405cf6:	or     eax,0xd6ac848a
  405cfb:	mov    bl,0xb8
  405cfd:	adc    eax,DWORD PTR [eax-0x22]
  405d00:	and    DWORD PTR [ebx-0x49],ecx
  405d03:	mov    bl,0x95
  405d05:	arpl   cx,bx
  405d07:	xchg   edi,eax
  405d08:	popa   
  405d09:	fsubr  DWORD PTR [ebx-0x145cfe1f]
  405d0f:	lahf   
  405d10:	les    ebp,FWORD PTR [ebx+0x7129c88a]
  405d16:	dec    edx
  405d17:	and    bl,ah
  405d19:	add    esi,edi
  405d1b:	(bad)  
  405d1c:	gs mov bh,0x85
  405d1f:	mov    al,0x93
  405d21:	mov    dl,0xfe
  405d23:	aaa    
  405d24:	into   
  405d25:	or     al,BYTE PTR [esi-0x52]
  405d28:	mov    edi,0xe9105b84
  405d2d:	cmp    esi,DWORD PTR [ebx+0x1f]
  405d30:	bts    DWORD PTR [edx+eax*4+0x79],ebx
  405d35:	bound  esp,QWORD PTR [eax-0x54]
  405d38:	pop    ebp
  405d39:	stos   BYTE PTR es:[edi],al
  405d3a:	push   edi
  405d3b:	repnz call 0x677c:0x1245272e
  405d43:	movd   DWORD PTR [ecx+0x4f],mm0
  405d47:	add    DWORD PTR [ebx],ecx
  405d49:	pop    esp
  405d4a:	dec    ebp
  405d4b:	das    
  405d4c:	push   0x91f79672
  405d51:	bound  eax,QWORD PTR [eax+0x5e]
  405d54:	mov    DWORD PTR [eax+0x17df7abc],eax
  405d5a:	mov    dh,BYTE PTR [esi+0x6216aa40]
  405d60:	and    al,bl
  405d62:	jp     0x405d28
  405d64:	push   esp
  405d65:	call   0x4e6f8651
  405d6a:	outs   dx,DWORD PTR ds:[esi]
  405d6b:	pop    edi
  405d6c:	out    0x61,al
  405d6e:	(bad)  [edi+0x2b3faf67]
  405d74:	es jmp 0xc4f722ea
  405d7a:	push   0xc328319c
  405d7f:	push   ds
  405d80:	stc    
  405d81:	pop    ecx
  405d82:	call   0x60fcd290
  405d87:	aad    0xbf
  405d89:	les    ebx,FWORD PTR [eax-0x2a]
  405d8c:	aam    0xb3
  405d8e:	xchg   ebp,eax
  405d8f:	call   0x39e87bb5
  405d94:	sub    bl,BYTE PTR [ebp-0x2b]
  405d97:	mov    bl,0x90
  405d99:	jno    0x405e16
  405d9b:	cmp    dh,bl
  405d9d:	fnstcw WORD PTR [ebp+0x2e]
  405da0:	call   0xeca0cdeb
  405da5:	aaa    
  405da6:	sbb    eax,0xcfaf7713
  405dab:	mov    ebx,0xb5ec041f
  405db0:	daa    
  405db1:	mov    edx,0x9bd6ff5a
  405db6:	nop
  405db7:	and    DWORD PTR [esi+0x26c4fe46],esi
  405dbd:	popa   
  405dbe:	add    al,BYTE PTR [edi+0x7a]
  405dc1:	cmp    bl,BYTE PTR [esi-0x18160a68]
  405dc7:	sub    eax,0x2120a51d
  405dcc:	hlt    
  405dcd:	shl    BYTE PTR [edi+0x16],0x54
  405dd1:	adc    al,0x31
  405dd3:	sub    dl,BYTE PTR [ebp-0x45]
  405dd6:	mov    ebp,0xad3bb67c
  405ddb:	lods   eax,DWORD PTR ds:[esi]
  405ddc:	loopne 0x405dbd
  405dde:	stos   DWORD PTR es:[edi],eax
  405ddf:	addr16 push eax
  405de1:	fstp   QWORD PTR [ebp-0x6bd81205]
  405de7:	jle    0x405e66
  405de9:	cli    
  405dea:	push   cs
  405deb:	cmp    ah,BYTE PTR [ecx+esi*1+0x6b10a5b]
  405df2:	mov    ecx,0xf1772775
  405df7:	add    eax,0x19cfdc70
  405dfc:	les    esp,FWORD PTR [eax-0x4c]
  405dff:	jg     0x405de5
  405e01:	cmp    cl,bh
  405e03:	dec    esp
  405e04:	jae    0x405e79
  405e06:	lea    esi,[esp-0x72e74b30]
  405e0d:	lds    ebx,FWORD PTR [edi]
  405e0f:	inc    ebx
  405e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e11:	test   eax,0x6fb8bb94
  405e16:	and    DWORD PTR [edx-0x22],esi
  405e19:	adc    BYTE PTR [eax],cl
  405e1b:	adc    eax,esi
  405e1d:	mov    ss:0x190d9f72,al
  405e23:	push   edi
  405e24:	popa   
  405e25:	inc    ecx
  405e26:	fstp   TBYTE PTR [edi]
  405e28:	and    ebx,DWORD PTR [esp+edi*4-0x49]
  405e2c:	mov    bl,0x8a
  405e2e:	cmp    DWORD PTR [ebp-0x1e],ebp
  405e31:	(bad)  
  405e32:	aaa    
  405e33:	inc    eax
  405e34:	and    ah,bl
  405e36:	xor    BYTE PTR [eax+0x42],bh
  405e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3a:	sub    DWORD PTR [ebx],ecx
  405e3c:	xchg   ebp,eax
  405e3d:	push   ebp
  405e3e:	mov    dl,0x42
  405e40:	or     DWORD PTR [edx+0x55e131ba],esi
  405e46:	test   DWORD PTR [ecx*2+0x71ae55e],eax
  405e4d:	xchg   ebx,eax
  405e4e:	data16 cmp ah,BYTE PTR [edx+0x2f]
  405e52:	in     eax,0xde
  405e54:	sub    eax,0x5d20a1fa
  405e59:	mov    ds:0x2aa5d446,eax
  405e5e:	fbstp  TBYTE PTR [ecx]
  405e60:	fs jno 0x405e1a
  405e63:	lahf   
  405e64:	jg     0x405ec5
  405e66:	mov    cl,0xff
  405e68:	xchg   ecx,eax
  405e69:	ins    BYTE PTR es:[edi],dx
  405e6a:	data16 dec BYTE PTR [eax]
  405e6d:	(bad)  
  405e6e:	jns    0x405eca
  405e70:	lods   al,BYTE PTR ds:[esi]
  405e71:	xchg   esi,eax
  405e72:	xchg   DWORD PTR [eax+0x2dded164],edi
  405e78:	inc    esi
  405e79:	aaa    
  405e7a:	pop    eax
  405e7b:	pop    edi
  405e7c:	mov    ?,WORD PTR [edi-0x1a1290f1]
  405e82:	fdivr  DWORD PTR [ebp+0x17]
  405e85:	cs ret 
  405e87:	scas   eax,DWORD PTR es:[edi]
  405e88:	lahf   
  405e89:	push   cs
  405e8a:	mov    gs,edx
  405e8c:	mov    fs,WORD PTR [edx]
  405e8e:	aas    
  405e8f:	add    ah,BYTE PTR [ebx+0x7c5553c0]
  405e95:	inc    ebp
  405e96:	or     DWORD PTR [esi-0x1345e53c],ebp
  405e9c:	mov    ebp,0x17533eb6
  405ea1:	cdq    
  405ea2:	loope  0x405e70
  405ea4:	popf   
  405ea5:	test   DWORD PTR [eax],edx
  405ea7:	sbb    BYTE PTR [edx],bl
  405ea9:	jnp    0x405e94
  405eab:	out    dx,eax
  405eac:	in     eax,0xf6
  405eae:	push   es
  405eaf:	push   0x4c
  405eb1:	mov    DWORD PTR ds:0x43dac3f5,ebp
  405eb7:	mov    ds:0x2de953f9,eax
  405ebc:	js     0x405f0c
  405ebe:	dec    ecx
  405ebf:	push   es
  405ec0:	call   FWORD PTR ds:0xad44f77f
  405ec6:	fiadd  WORD PTR [ebp+0x27]
  405ec9:	jg     0x405ecd
  405ecb:	or     ecx,esp
  405ecd:	sahf   
  405ece:	sub    eax,0x94e0871f
  405ed3:	push   ds
  405ed4:	push   0x25932f5c
  405ed9:	and    DWORD PTR [edi+0x2c],0xa3d09d4
  405ee0:	scas   al,BYTE PTR es:[edi]
  405ee1:	push   ebp
  405ee2:	mov    dl,0xf6
  405ee4:	pop    ebp
  405ee5:	push   cs
  405ee6:	dec    ebx
  405ee7:	outs   dx,DWORD PTR ds:[esi]
  405ee8:	(bad)  
  405ee9:	clc    
  405eea:	fs inc esi
  405eec:	ins    BYTE PTR es:[edi],dx
  405eed:	add    eax,0x415858f8
  405ef2:	sbb    DWORD PTR [edi-0x69],ebx
  405ef5:	xor    bh,bh
  405ef7:	mov    BYTE PTR [esi+edx*4-0x7caf6cd0],ch
  405efe:	adc    DWORD PTR [ecx],0x273dc815
  405f04:	je     0x405f34
  405f06:	arpl   WORD PTR [edx],bx
  405f08:	mov    eax,0x7761b2b0
  405f0d:	lods   al,BYTE PTR ds:[esi]
  405f0e:	mov    ecx,0x4527b372
  405f13:	and    al,0x38
  405f15:	push   ecx
  405f16:	dec    ecx
  405f17:	mov    ch,0xef
  405f19:	cmp    eax,DWORD PTR [edi-0x2b35f7c2]
  405f1f:	pusha  
  405f20:	out    dx,eax
  405f21:	in     al,0x4
  405f23:	test   eax,0xbef6fa5
  405f28:	mov    dl,0x9d
  405f2a:	sub    ebp,0xffffff8c
  405f2d:	jp     0x405f5e
  405f2f:	dec    ebp
  405f30:	mov    bl,BYTE PTR [eax-0x426af325]
  405f36:	xor    al,0x2f
  405f38:	int3   
  405f39:	(bad)  
  405f3a:	fmul   QWORD PTR [ecx]
  405f3c:	cmp    BYTE PTR [ebx],dl
  405f3e:	ss dec ebp
  405f40:	dec    ecx
  405f41:	pop    ds
  405f42:	jns    0x405f16
  405f44:	xchg   esi,eax
  405f45:	mov    WORD PTR [eax],fs
  405f47:	jmp    FWORD PTR [ecx-0x12]
  405f4a:	sbb    BYTE PTR [esi-0x57],ah
  405f4d:	add    al,0x32
  405f4f:	ins    DWORD PTR es:[edi],dx
  405f50:	pushf  
  405f51:	mov    al,0x82
  405f53:	or     ah,al
  405f55:	mov    ds:0x13debd35,eax
  405f5a:	and    ah,dl
  405f5c:	shl    DWORD PTR [esp+esi*2],1
  405f5f:	jecxz  0x405f8c
  405f61:	ja     0x405f0e
  405f63:	add    dl,BYTE PTR [esi]
  405f65:	or     ah,BYTE PTR [esi+edx*2-0x18a1b8b0]
  405f6c:	push   ecx
  405f6d:	mov    ah,0xd0
  405f6f:	push   ss
  405f70:	xor    al,0x1a
  405f72:	lods   eax,DWORD PTR ds:[esi]
  405f73:	push   ds
  405f74:	mov    ds:0x8ba12e68,eax
  405f79:	xor    eax,0x16cf4106
  405f7e:	mov    ds:0x7f4d69c9,eax
  405f83:	or     bh,ah
  405f85:	stc    
  405f86:	xor    BYTE PTR [edi],al
  405f88:	test   al,0x53
  405f8a:	sub    al,0xd6
  405f8d:	mov    eax,ds:0xfb2a1582
  405f92:	retf   0xf03d
  405f95:	xor    BYTE PTR [ebp-0x2aff8694],ch
  405f9b:	cli    
  405f9c:	das    
  405f9d:	add    DWORD PTR [esi-0x65],edx
  405fa0:	in     al,dx
  405fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa2:	cmp    ch,BYTE PTR cs:[ebx-0xf]
  405fa6:	sti    
  405fa7:	inc    esi
  405fa8:	inc    edx
  405fa9:	adc    al,0x26
  405fab:	xchg   edx,eax
  405fac:	add    ch,ah
  405fae:	sub    eax,0x6ad7d1ca
  405fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb4:	mov    ah,bh
  405fb6:	shl    DWORD PTR [ebx+0x5f8bbbcf],1
  405fbc:	rcl    esp,cl
  405fbe:	call   0x96814683
  405fc3:	mov    ch,0xf7
  405fc5:	add    edx,ebp
  405fc7:	cmc    
  405fc8:	ret    
  405fc9:	pop    ds
  405fca:	push   ebp
  405fcb:	shl    DWORD PTR [eax+0x14],1
  405fce:	mov    ch,0xda
  405fd1:	lahf   
  405fd2:	or     al,BYTE PTR [edx]
  405fd4:	cmp    al,0x8f
  405fd6:	ja     0x405fbd
  405fd8:	mov    ecx,0x74322515
  405fdd:	cs arpl dx,si
  405fe0:	sub    BYTE PTR ds:0x8be033da,al
  405fe6:	jb     0x405fbd
  405fe8:	sbb    DWORD PTR [ecx],eax
  405fea:	out    dx,eax
  405feb:	fucom  st(5)
  405fed:	push   DWORD PTR [esi+0x6e]
  405ff0:	std    
  405ff1:	int3   
  405ff2:	or     dl,bh
  405ff4:	or     ecx,DWORD PTR [ebx]
  405ff6:	add    cl,BYTE PTR [ebx+0x669829ff]
  405ffc:	xor    esp,esi
  405ffe:	cli    
  405fff:	mov    al,ds:0xb126bc88
  406004:	cmp    al,0x1c
  406006:	mov    al,ds:0x90c3b5c2
  40600b:	ja     0x405fa5
  40600d:	sub    eax,0xec249cd0
  406012:	ror    edi,cl
  406014:	(bad)  
  406015:	les    ebp,FWORD PTR [esi+0x663a33b3]
  40601b:	or     al,BYTE PTR [edx-0x2bc14c1c]
  406021:	(bad)  
  406022:	icebp  
  406023:	or     BYTE PTR ss:[edi],cl
  406026:	cmp    al,0x18
  406028:	cmp    cl,ch
  40602a:	or     edx,eax
  40602c:	jg     0x40604c
  40602e:	(bad)  
  40602f:	sub    eax,0xfa66157d
  406034:	ins    DWORD PTR es:[edi],dx
  406035:	(bad)  
  406036:	xchg   esi,eax
  406037:	sbb    esp,DWORD PTR [eax+edx*8]
  40603a:	mov    ds:0xa4796c20,al
  40603f:	push   esi
  406040:	adc    bh,ah
  406042:	pop    ds
  406043:	cmp    BYTE PTR [esi+0x65df2a62],ch
  406049:	pop    edi
  40604a:	imul   DWORD PTR [bp+0xfdf]
  40604f:	fs ror ah,1
  406052:	cmp    BYTE PTR [ebx+0x377a1362],ah
  406058:	mov    cl,0x66
  40605a:	in     al,0xc0
  40605c:	jp     0x4060d6
  40605e:	mov    dh,0xce
  406060:	jg     0x406045
  406062:	push   edx
  406063:	cmc    
  406064:	jnp    0x406041
  406066:	pop    ebx
  406067:	cmp    esp,esi
  406069:	mov    edx,0x9303e90d
  40606e:	sti    
  40606f:	inc    ebx
  406070:	cmp    dh,BYTE PTR [ebx-0x10]
  406073:	push   es
  406074:	inc    esp
  406075:	mov    ebx,0x1ba89f8
  40607a:	or     ch,al
  40607c:	enter  0x258d,0xe6
  406080:	and    ebx,DWORD PTR [edx-0x1180e4e0]
  406086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406087:	push   eax
  406088:	sbb    eax,0x8027d86f
  40608d:	rcr    dh,cl
  40608f:	sbb    BYTE PTR [edx-0x1e1ea7bd],bh
  406095:	push   ds
  406096:	sub    cl,ah
  406098:	dec    esi
  406099:	lods   eax,DWORD PTR ds:[esi]
  40609a:	pop    edi
  40609b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40609c:	mov    al,ds:0xfaf94e5c
  4060a1:	push   0x58abb4a3
  4060a6:	imul   eax,DWORD PTR [edi+eiz*4-0x22f357f4],0xd30ae9fc
  4060b1:	addr16 inc ecx
  4060b3:	add    eax,0x3ab8906a
  4060b8:	add    bh,dl
  4060ba:	shr    BYTE PTR [esi+0x5e62888e],1
  4060c0:	clc    
  4060c1:	lods   al,BYTE PTR ds:[esi]
  4060c2:	jne    0x406118
  4060c4:	xor    al,0xf7
  4060c6:	stos   BYTE PTR es:[edi],al
  4060c7:	scas   al,BYTE PTR es:[edi]
  4060c8:	(bad)  
  4060c9:	jg     0x406145
  4060cb:	sub    DWORD PTR [edi-0x17],ebp
  4060ce:	sub    eax,eax
  4060d0:	test   al,ch
  4060d2:	in     eax,0xb0
  4060d4:	shr    BYTE PTR [ebx+0x21653420],0x22
  4060db:	dec    edx
  4060dc:	cs push ebx
  4060de:	sbb    eax,DWORD PTR [eax]
  4060e0:	or     DWORD PTR ds:0xd10ebc3e,0xd176fdfa
  4060ea:	arpl   di,bx
  4060ec:	out    dx,eax
  4060ed:	dec    esp
  4060ee:	adc    cl,bl
  4060f0:	shr    eax,0x9
  4060f3:	sbb    edx,DWORD PTR [ecx+0x5791410d]
  4060f9:	xchg   ecx,eax
  4060fa:	xchg   ebp,eax
  4060fb:	jne    0x406123
  4060fd:	(bad)  
  406101:	or     dl,BYTE PTR [ecx-0x24]
  406104:	push   cs
  406105:	aas    
  406106:	push   0x1a
  406108:	add    dh,cl
  40610a:	clc    
  40610b:	ins    BYTE PTR es:[edi],dx
  40610c:	pushf  
  40610d:	dec    DWORD PTR [edi-0x6389274f]
  406113:	popa   
  406114:	stc    
  406115:	push   0x65
  406117:	mov    esi,0x24f9a57c
  40611c:	or     BYTE PTR [ebx-0xb],bl
  40611f:	pop    eax
  406120:	int3   
  406121:	push   0x9d060e2d
  406126:	mov    esi,0xc50bfc78
  40612b:	mov    WORD PTR [edx+0x579bc146],es
  406131:	stc    
  406132:	mov    ah,0x27
  406134:	xor    BYTE PTR [esi+0x26],0x79
  406138:	cwde   
  406139:	(bad)  
  40613a:	cli    
  40613b:	mov    esp,0xf25dea2d
  406140:	xor    al,BYTE PTR [ecx-0x37]
  406143:	mov    esp,0xcb05d868
  406148:	inc    esi
  406149:	push   cs
  40614a:	cli    
  40614b:	sahf   
  40614c:	enter  0x9a3b,0xf0
  406150:	mov    edx,0xb2394942
  406155:	xrelease mov DWORD PTR [edi-0x22],esp
  406159:	test   eax,0xea77ec0e
  40615e:	adc    BYTE PTR [esi],dh
  406160:	(bad)  
  406161:	cli    
  406162:	ret    
  406163:	repz mov cs:0x4af2d7ba,eax
  40616a:	jbe    0x406169
  40616c:	push   ebp
  40616d:	neg    BYTE PTR ds:0xe02c58f7
  406173:	dec    edi
  406174:	xlat   BYTE PTR ds:[ebx]
  406175:	inc    eax
  406176:	dec    ebx
  406177:	test   DWORD PTR [ebp+0x44],esp
  40617a:	or     esp,DWORD PTR [edx+edx*1+0x7c]
  40617e:	push   ebx
  40617f:	rol    DWORD PTR [esi+esi*8],cl
  406182:	or     bh,BYTE PTR [eax-0x62]
  406185:	adc    ebp,esp
  406187:	loope  0x406193
  406189:	int3   
  40618a:	fsub   st,st(7)
  40618c:	inc    esi
  40618d:	mov    al,0x0
  40618f:	jae    0x406170
  406191:	jp     0x4061fc
  406193:	pop    esp
  406194:	data16 out 0xa5,al
  406197:	shr    BYTE PTR [ebp-0x615d0077],0x6e
  40619e:	xor    al,0xb1
  4061a0:	out    dx,al
  4061a1:	and    DWORD PTR [eax+0x2d6be9d0],ebp
  4061a7:	and    al,0xc7
  4061a9:	push   ds
  4061aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ab:	and    ebx,DWORD PTR [ebx]
  4061ad:	sahf   
  4061ae:	div    DWORD PTR [ebp+0x115090c0]
  4061b4:	sar    BYTE PTR [esi+0x582bd012],1
  4061ba:	mov    ah,0xfb
  4061bc:	mov    ch,0x4a
  4061be:	sub    edi,DWORD PTR [ecx-0x13ec0c0e]
  4061c4:	mov    eax,ds:0xfa5fb656
  4061c9:	mov    esp,?
  4061cb:	adc    BYTE PTR [ecx-0x51a2e2cf],0x78
  4061d2:	add    edx,DWORD PTR [eax]
  4061d4:	inc    esp
  4061d5:	xor    DWORD PTR [esi],ecx
  4061d7:	pop    edx
  4061d8:	addr16 jbe 0x4061d8
  4061db:	into   
  4061dc:	rcl    ebp,cl
  4061de:	push   ss
  4061df:	cdq    
  4061e0:	sbb    BYTE PTR ds:0x7fb11f81,0xc7
  4061e7:	push   cs
  4061e8:	cwde   
  4061e9:	data16 jmp 0x4061f3
  4061ec:	lods   al,BYTE PTR ds:[esi]
  4061ed:	icebp  
  4061ee:	pop    ds
  4061ef:	mov    cl,0x49
  4061f1:	data16 sti 
  4061f3:	mov    cl,0xeb
  4061f5:	cmc    
  4061f6:	daa    
  4061f7:	inc    esp
  4061f8:	lock aas 
  4061fa:	push   edi
  4061fb:	or     eax,0x8b69705b
  406200:	jp     0x4061a7
  406202:	jl     0x40626a
  406204:	sbb    eax,0x39c03381
  406209:	lea    edi,[edi-0x51]
  40620c:	mov    edx,0x943273b9
  406211:	mov    WORD PTR [esi+0x3],cs
  406214:	in     eax,0x4f
  406216:	in     eax,dx
  406217:	push   ss
  406218:	mov    ch,0xd1
  40621a:	cs dec esi
  40621c:	or     ebx,ebp
  40621e:	dec    esp
  40621f:	fs enter 0x36c6,0x75
  406224:	sti    
  406225:	and    bh,al
  406227:	push   ebx
  406228:	fnstenv [edi+0x25]
  40622b:	cli    
  40622c:	push   ds
  40622d:	into   
  40622e:	mov    eax,0x58720e02
  406233:	mov    ch,0xe7
  406235:	fisub  WORD PTR [ebx-0x149eb3a7]
  40623b:	pop    edi
  40623c:	add    eax,0x6ab6b543
  406241:	pushf  
  406242:	retf   0x2971
  406245:	loope  0x4061e9
  406247:	(bad)  
  406248:	jbe    0x4062bb
  40624a:	repnz test dh,bh
  40624d:	sub    DWORD PTR [edi+0x42],edi
  406250:	mov    cl,0x93
  406252:	mov    ah,0xf9
  406254:	outs   dx,DWORD PTR ds:[esi]
  406255:	ss maskmovq mm3,mm1
  406259:	dec    esp
  40625a:	inc    esp
  40625b:	cld    
  40625c:	sub    BYTE PTR [ebp+edx*4-0x5554b6cc],0xa7
  406264:	dec    ebx
  406265:	fwait
  406266:	mov    ch,ah
  406268:	clc    
  406269:	sbb    BYTE PTR [edx-0x2cd07f7c],dh
  40626f:	imul   edi,esp,0xffffffc5
  406272:	test   eax,0xfc6a8996
  406277:	test   DWORD PTR [esi+esi*1+0x249bbec8],ebp
  40627e:	data16 in al,0xa8
  406281:	pop    esi
  406282:	jmp    0xaace4349
  406287:	inc    eax
  406288:	mov    ecx,0x97198105
  40628d:	outs   dx,BYTE PTR ds:[esi]
  40628e:	mov    ch,0x8d
  406290:	sbb    al,0x58
  406292:	inc    esi
  406293:	lock cmp DWORD PTR [ebp-0x171a60e2],ebx
  40629a:	pop    ecx
  40629b:	js     0x4062f6
  40629d:	inc    esp
  40629e:	ror    BYTE PTR [ebp-0x22],cl
  4062a1:	lods   eax,DWORD PTR ds:[esi]
  4062a2:	shr    BYTE PTR [esi],0x56
  4062a5:	arpl   WORD PTR [esi+0x9aae6fd],dx
  4062ab:	add    BYTE PTR [esi+ebp*2-0x5577bf4a],0xce
  4062b3:	(bad)  
  4062b4:	lods   al,BYTE PTR ds:[esi]
  4062b5:	mov    eax,0x82f658fe
  4062ba:	xlat   BYTE PTR ds:[ebx]
  4062bb:	and    BYTE PTR [ebp+edi*4-0x6e],cl
  4062bf:	push   esi
  4062c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c1:	dec    edi
  4062c2:	jb     0x406244
  4062c4:	mov    BYTE PTR [ebx],al
  4062c6:	add    ebx,DWORD PTR [ecx]
  4062c8:	stc    
  4062c9:	pop    es
  4062ca:	push   ss
  4062cb:	(bad)  
  4062cc:	(bad)  
  4062cf:	call   0xe57a:0x142df9fc
  4062d6:	retf   0x57e4
  4062d9:	xor    eax,0xe4912862
  4062de:	mov    al,0x0
  4062e0:	cli    
  4062e1:	pop    ds
  4062e2:	lods   eax,DWORD PTR ds:[esi]
  4062e3:	jo     0x4062a1
  4062e5:	std    
  4062e6:	jmp    0xd30582d6
  4062eb:	shr    BYTE PTR [ebx+0xa461dd5],cl
  4062f1:	pusha  
  4062f2:	inc    ebp
  4062f3:	imul   ebp,ecx,0xd
  4062f6:	and    DWORD PTR [eax+0x7d0c43a9],ecx
  4062fc:	cmp    DWORD PTR [eax],esi
  4062fe:	cli    
  4062ff:	adc    esi,DWORD PTR [edi+0x6f]
  406302:	test   al,0x7c
  406304:	inc    eax
  406305:	cs fs sti 
  406308:	inc    ebp
  406309:	pop    ecx
  40630a:	test   eax,0x62a37211
  40630f:	das    
  406310:	inc    ecx
  406311:	sbb    al,0x63
  406313:	mov    ds:0xb6be3429,eax
  406318:	(bad)  
  406319:	push   edi
  40631a:	push   ds
  40631b:	(bad)  
  40631c:	cdq    
  40631d:	jo     0x406379
  40631f:	cs cwde 
  406321:	or     BYTE PTR [edi],dl
  406323:	xchg   esi,eax
  406324:	and    DWORD PTR [ebp+0x78],eax
  406327:	bound  ebx,QWORD PTR [edx+0x184aef42]
  40632d:	pop    esi
  40632e:	aas    
  40632f:	mov    eax,0x1f067d3d
  406334:	enter  0xbe96,0x7f
  406338:	(bad)  
  406339:	call   FWORD PTR [eax+ecx*4]
  40633c:	xchg   edi,eax
  40633d:	push   es
  40633e:	fistp  QWORD PTR [esp+esi*4]
  406342:	xor    BYTE PTR [esp+ecx*4+0x4fca12cc],bh
  406349:	in     al,0xe2
  40634b:	arpl   bp,sp
  40634d:	clc    
  40634e:	pop    edi
  40634f:	and    BYTE PTR [ebp-0x31],cl
  406352:	and    eax,0xe3ed8831
  406357:	ret    0x7757
  40635a:	aas    
  40635b:	add    ch,BYTE PTR [esi-0x763a1b95]
  406361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406362:	mov    bl,0x77
  406364:	cmp    al,0x5b
  406366:	dec    eax
  406367:	xor    DWORD PTR ds:0x5df77c71,ecx
  40636d:	xchg   DWORD PTR [ecx],ebx
  40636f:	retf   
  406370:	push   ebp
  406371:	push   edi
  406372:	cwde   
  406373:	add    DWORD PTR [ecx+0x42],eax
  406376:	je     0x4063eb
  406378:	clc    
  406379:	in     al,dx
  40637a:	out    dx,eax
  40637b:	not    DWORD PTR [ecx+0x15f9813d]
  406381:	cld    
  406382:	push   eax
  406383:	std    
  406384:	jle    0x40639c
  406386:	stos   DWORD PTR es:[edi],eax
  406387:	jae    0x4063c2
  406389:	(bad)  
  40638a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638b:	jl     0x4063cf
  40638d:	mov    edi,0x2855bc6e
  406392:	mov    ch,0x2
  406394:	lock mov ds:0xfd543b62,eax
  40639a:	cmp    al,0xa6
  40639c:	adc    BYTE PTR [ebx-0x1e3dd51a],ah
  4063a2:	add    al,BYTE PTR [ebp-0x1bfdcbe1]
  4063a8:	push   ecx
  4063a9:	push   edi
  4063aa:	js     0x406346
  4063ac:	or     DWORD PTR [ecx+0x79],ecx
  4063af:	and    ebp,ebp
  4063b1:	xor    eax,0x3be4d4c6
  4063b6:	pop    ecx
  4063b7:	add    eax,0xd5efab7
  4063bc:	inc    esp
  4063bd:	aam    0x3
  4063bf:	dec    ecx
  4063c0:	or     ecx,edi
  4063c2:	loop   0x4063fd
  4063c4:	push   ss
  4063c5:	push   esp
  4063c6:	mov    ch,0x43
  4063c8:	sub    DWORD PTR [esi],eax
  4063ca:	enter  0xfe57,0x98
  4063ce:	jno    0x4063e2
  4063d0:	hlt    
  4063d1:	cmc    
  4063d2:	sub    al,0x27
  4063d4:	jge    0x40637b
  4063d6:	sar    edx,cl
  4063d8:	repnz mov esi,0xdfe89b7
  4063de:	and    DWORD PTR [eax-0x18],ecx
  4063e1:	in     al,0x7a
  4063e3:	repnz mov esp,0x75daac73
  4063e9:	lods   al,BYTE PTR ds:[esi]
  4063ea:	pop    ss
  4063eb:	sbb    BYTE PTR [esi],al
  4063ed:	in     al,0x9d
  4063ef:	mov    ebp,0x81c05216
  4063f4:	xchg   ebp,eax
  4063f5:	sub    dl,0x5
  4063f8:	aad    0x26
  4063fa:	shl    BYTE PTR [edx],1
  4063fc:	adc    dl,0x6d
  4063ff:	sahf   
  406400:	jp     0x406456
  406402:	sub    al,0xaf
  406404:	loop   0x40641f
  406406:	ret    0xde37
  406409:	ins    BYTE PTR es:[edi],dx
  40640a:	sbb    eax,edx
  40640c:	dec    edx
  40640d:	jp     0x406447
  40640f:	mov    eax,ds:0x2f69223f
  406414:	mov    bh,0xf4
  406416:	mov    BYTE PTR [bx+di+0x4452],bh
  40641b:	pop    edi
  40641c:	pusha  
  40641d:	(bad)  
  40641e:	pop    esi
  40641f:	pop    esp
  406420:	jg     0x406425
  406422:	add    ah,dh
  406424:	pop    ds
  406425:	pop    es
  406426:	or     al,0xfe
  406428:	mov    al,0xaf
  40642a:	jmp    edx
  40642c:	xor    cl,ah
  40642e:	sbb    al,0xe4
  406430:	addr16 in eax,dx
  406432:	xchg   ebp,eax
  406433:	fcomi  st,st(1)
  406435:	xchg   edx,eax
  406436:	xor    edx,DWORD PTR [edx-0x40b43c09]
  40643c:	sar    BYTE PTR [esi-0xfb81bc4],1
  406442:	mov    ebp,0x1e43cff
  406447:	ins    BYTE PTR es:[edi],dx
  406448:	push   esp
  406449:	adc    al,0x8
  40644b:	adc    al,0xf8
  40644d:	(bad)  
  40644e:	push   esp
  40644f:	add    ecx,edi
  406451:	les    eax,FWORD PTR ds:[ebx+ecx*4+0x334bafc0]
  406459:	push   esp
  40645a:	mov    al,ds:0x237f0086
  40645f:	push   esi
  406460:	fsubr  st(0),st
  406462:	popa   
  406463:	mov    eax,ds:0x5a0978f
  406468:	inc    eax
  406469:	int    0xe3
  40646b:	mov    eax,ds:0x851a6a3d
  406470:	pop    eax
  406471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406472:	mov    ah,0x31
  406474:	fwait
  406475:	push   ds
  406476:	iret   
  406477:	es mov ecx,0x4384a3b3
  40647d:	ret    0xc6a9
  406480:	popf   
  406481:	sbb    al,0x1b
  406483:	repz sbb DWORD PTR ds:0xe4788836,ecx
  40648a:	adc    al,BYTE PTR [ebx-0x80]
  40648d:	(bad)  
  40648e:	sahf   
  40648f:	cmp    BYTE PTR [esp+esi*8+0x2092e257],dl
  406496:	je     0x40645c
  406498:	push   edi
  406499:	les    ecx,FWORD PTR [ebx-0x212f9bf]
  40649f:	iret   
  4064a0:	popf   
  4064a1:	scas   al,BYTE PTR es:[edi]
  4064a2:	cmc    
  4064a3:	iret   
  4064a4:	retf   
  4064a5:	stos   BYTE PTR es:[edi],al
  4064a6:	fs rol esi,1
  4064a9:	mov    ecx,0x6cfc0076
  4064ae:	mov    BYTE PTR [esp+0x4a],dh
  4064b2:	iret   
  4064b3:	mov    bh,0x83
  4064b5:	(bad)  
  4064b6:	sbb    ch,BYTE PTR ss:[ecx-0x60d099aa]
  4064bd:	and    DWORD PTR [ebx+0x78],0x596f1f91
  4064c4:	adc    eax,0x4e293123
  4064c9:	jo     0x406537
  4064cb:	xchg   ebp,eax
  4064cc:	push   ecx
  4064cd:	loopne 0x4064be
  4064cf:	fiadd  DWORD PTR [ecx+0x3e]
  4064d2:	mov    ds:0x192030c4,eax
  4064d7:	pop    edx
  4064d8:	cmp    eax,0xf8c5e647
  4064dd:	xor    al,0x96
  4064df:	adc    esi,esi
  4064e1:	push   edi
  4064e2:	jecxz  0x406496
  4064e4:	add    DWORD PTR [ebx-0x7b],ebx
  4064e7:	stos   BYTE PTR es:[edi],al
  4064e8:	xchg   esp,eax
  4064e9:	ret    0x7c84
  4064ec:	in     eax,dx
  4064ed:	jae    0x406499
  4064ef:	xchg   DWORD PTR [edx],edx
  4064f1:	jl     0x406571
  4064f3:	sub    DWORD PTR [ebx+0x625e039f],0xb42095e3
  4064fd:	pop    ds
  4064fe:	jge    0x406481
  406500:	push   ecx
  406501:	ret    
  406502:	hlt    
  406503:	mov    ecx,0x72c3a7d6
  406508:	and    dh,BYTE PTR [ebp+0x3b79926a]
  40650e:	sub    ah,BYTE PTR [esi]
  406510:	jbe    0x406522
  406512:	in     eax,dx
  406513:	xchg   edi,eax
  406514:	xor    edi,DWORD PTR [esi-0x7eaa27d7]
  40651a:	push   0x8bcff997
  40651f:	or     BYTE PTR [edx+0x51d1dfe5],dh
  406525:	inc    ecx
  406526:	loope  0x406593
  406528:	inc    edx
  406529:	jbe    0x40650b
  40652b:	sbb    al,0xa2
  40652d:	xchg   DWORD PTR [ecx-0x669fc1f4],eax
  406533:	sti    
  406534:	push   es
  406535:	dec    eax
  406536:	cmp    eax,0x3f42b648
  40653b:	and    ah,BYTE PTR [eax+0x7604921a]
  406541:	inc    esi
  406542:	out    dx,al
  406543:	fyl2x  
  406545:	aas    
  406546:	and    eax,0x73702bbc
  40654b:	cmp    cl,BYTE PTR [esi-0x4a22b8a1]
  406551:	(bad)  
  406553:	aad    0x2f
  406555:	lahf   
  406556:	xchg   edx,eax
  406557:	(bad)  
  406558:	jmp    FWORD PTR [eax]
  40655a:	push   cs
  40655b:	int3   
  40655c:	fiadd  DWORD PTR [ebx]
  40655e:	pop    esp
  40655f:	enter  0x2cbe,0x3a
  406563:	fcmovbe st,st(5)
  406565:	fstp   DWORD PTR [ecx+0x59]
  406568:	mov    esp,0x1c84703b
  40656d:	gs int3 
  40656f:	lea    eax,[ecx+0x5105266c]
  406575:	sti    
  406576:	cli    
  406577:	mov    ds:0xb5d457f7,eax
  40657c:	inc    ebp
  40657d:	push   0xf4d11b57
  406582:	daa    
  406583:	loopne 0x4065ef
  406585:	shl    BYTE PTR [ebx],1
  406587:	pusha  
  406588:	add    eax,0x5a247b39
  40658d:	ror    BYTE PTR [edi],0xf3
  406590:	adc    DWORD PTR [ebp-0x45],ebx
  406593:	jo     0x406602
  406595:	sub    BYTE PTR [ebx-0xca057dd],cl
  40659b:	and    dh,BYTE PTR [esi]
  40659d:	xchg   BYTE PTR [esi+0x76],al
  4065a0:	nop
  4065a1:	cmp    DWORD PTR [esi-0x6e775886],esi
  4065a7:	adc    cl,bl
  4065a9:	add    DWORD PTR [ebx-0x3647ec01],edi
  4065af:	ret    0xc916
  4065b2:	repnz movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4065b5:	setg   al
  4065b8:	pop    es
  4065b9:	mov    bl,0xbf
  4065bb:	sub    BYTE PTR [ebp-0x14],dl
  4065be:	mov    ds:0x55386b4,eax
  4065c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c4:	pop    ds
  4065c5:	sbb    ah,BYTE PTR [ebp+0x5bf20c12]
  4065cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ce:	mov    edx,0x3923f432
  4065d3:	dec    edi
  4065d4:	test   eax,0xff23cc2e
  4065d9:	mov    al,ds:0x7e73fea
  4065de:	inc    DWORD PTR [edi]
  4065e0:	sbb    BYTE PTR [esp+eiz*4-0x4],bh
  4065e4:	xor    edx,DWORD PTR [esi+0x4a3709f9]
  4065ea:	and    cl,BYTE PTR [edx-0x6b]
  4065ed:	rcl    BYTE PTR [edi+0x7af041e6],cl
  4065f3:	xor    eax,0x217cc8cb
  4065f8:	sti    
  4065f9:	cmp    eax,0x276fb98b
  4065fe:	int    0x63
  406600:	adc    ebx,DWORD PTR [edx]
  406602:	jns    0x4065bc
  406604:	xchg   esp,eax
  406605:	sbb    DWORD PTR [ecx+edi*1+0x32],esp
  406609:	in     al,0x35
  40660b:	cld    
  40660c:	xor    al,0x6f
  40660e:	mov    eax,0x9c57230c
  406613:	mov    ah,0x56
  406615:	aam    0xc3
  406617:	aad    0xa5
  406619:	sbb    ch,dh
  40661b:	adc    BYTE PTR [edi-0x3dfdff66],cl
  406621:	in     al,dx
  406622:	shr    edx,0x9b
  406625:	cmp    al,0x7b
  406627:	dec    edi
  406628:	popa   
  406629:	jne    0x4065bf
  40662b:	jl     0x4065bb
  40662d:	cli    
  40662e:	push   eax
  40662f:	xlat   BYTE PTR ds:[ebx]
  406630:	mov    cl,0xff
  406632:	xchg   ecx,eax
  406633:	dec    esi
  406634:	sbb    ebx,DWORD PTR [esp+esi*1-0x17c35bdf]
  40663b:	fnstenv [ebx]
  40663d:	in     eax,0xbb
  40663f:	pusha  
  406640:	dec    ecx
  406641:	push   0xffffffae
  406643:	mov    dh,0xdb
  406645:	cdq    
  406646:	lods   eax,DWORD PTR ds:[esi]
  406647:	jbe    0x406646
  406649:	not    ah
  40664b:	pop    es
  40664c:	sub    al,0x2f
  40664e:	test   al,0xb
  406650:	jmp    0x406627
  406652:	fs je  0x406647
  406655:	call   0x19d01e2
  40665a:	cmp    dh,BYTE PTR [ebx+0xa]
  40665d:	mov    ch,BYTE PTR [edx+0x4872fe81]
  406663:	xor    al,0xe8
  406665:	(bad)  
  406666:	das    
  406667:	mov    ch,0xec
  406669:	jp     0x4066d5
  40666b:	(bad)  
  40666c:	(bad)  
  40666d:	loopne 0x4065f2
  40666f:	test   DWORD PTR [ecx],ebx
  406671:	inc    ebx
  406672:	xor    esi,DWORD PTR [edx-0x24ff9d15]
  406678:	into   
  406679:	mov    al,0x8e
  40667b:	adc    edx,DWORD PTR [esi-0x1800f075]
  406681:	nop
  406682:	rcl    DWORD PTR [ebp+ebx*2-0x3691d3bb],cl
  406689:	jnp    0x4c6a58b3
  40668f:	adc    edx,DWORD PTR ds:0xe8837572
  406695:	mov    al,0xf3
  406697:	setb   BYTE PTR [edi]
  40669a:	rol    cl,cl
  40669c:	in     eax,0x3c
  40669e:	loop   0x406654
  4066a0:	jno    0x406662
  4066a2:	lods   al,BYTE PTR ds:[esi]
  4066a3:	leave  
  4066a4:	ja     0x40669b
  4066a6:	xor    ebp,DWORD PTR [ebx-0x9]
  4066a9:	xor    dh,BYTE PTR [ecx+0x43]
  4066ac:	test   eax,0xdb1443eb
  4066b1:	xchg   esi,eax
  4066b2:	lock adc al,0xde
  4066b5:	jbe    0x406709
  4066b7:	add    eax,0xcedc6d5e
  4066bc:	cwde   
  4066bd:	cmp    dl,BYTE PTR [ecx+0x69]
  4066c0:	nop
  4066c1:	push   esi
  4066c2:	mov    bh,0x2d
  4066c4:	shr    DWORD PTR [edi+ebp*2],0x19
  4066c8:	inc    ecx
  4066c9:	arpl   WORD PTR [eax],di
  4066cb:	jge    0x406674
  4066cd:	inc    esp
  4066ce:	xor    DWORD PTR [eax-0x74],0xffffffac
  4066d2:	jp     0x4066f5
  4066d4:	adc    ebx,DWORD PTR [ecx]
  4066d6:	fisttp DWORD PTR [eax+0x7d]
  4066d9:	sub    eax,0x33297411
  4066de:	sti    
  4066df:	scas   eax,DWORD PTR es:[edi]
  4066e0:	add    eax,0x84376d4f
  4066e5:	ins    BYTE PTR es:[edi],dx
  4066e6:	xchg   ebp,eax
  4066e7:	xor    eax,0x7c95fdb
  4066ec:	mov    al,ds:0x74e8e697
  4066f1:	jne    0x406713
  4066f3:	fdivr  DWORD PTR [edi+0x5f]
  4066f6:	stos   BYTE PTR es:[edi],al
  4066f7:	fwait
  4066f8:	sar    BYTE PTR [edi-0x2dc07850],1
  4066fe:	ret    0x35d8
  406701:	xchg   edx,esi
  406703:	xchg   esi,edi
  406705:	push   ebx
  406706:	and    al,0x74
  406708:	and    al,0x46
  40670a:	xor    eax,ebp
  40670c:	dec    ebp
  40670d:	sub    BYTE PTR [edi-0x500597af],bh
  406713:	pusha  
  406714:	or     al,0xec
  406716:	dec    esp
  406717:	out    dx,al
  406718:	out    0xa2,al
  40671a:	inc    ecx
  40671b:	xor    al,0x7
  40671d:	fwait
  40671e:	(bad)  
  40671f:	fld    st(4)
  406721:	shl    DWORD PTR [edx],cl
  406723:	sbb    edi,DWORD PTR [edx-0x3e]
  406726:	(bad)  
  406727:	xchg   esi,eax
  406728:	sti    
  406729:	bnd jno 0x4066f8
  40672c:	popa   
  40672d:	cld    
  40672e:	scas   al,BYTE PTR es:[edi]
  40672f:	sbb    ecx,edi
  406731:	leave  
  406732:	in     al,dx
  406733:	jo     0x406738
  406735:	or     al,BYTE PTR [esi]
  406737:	aaa    
  406738:	jno    0x406721
  40673a:	and    esp,esi
  40673c:	lods   al,BYTE PTR ds:[esi]
  40673d:	clc    
  40673e:	add    eax,0xe089cacf
  406743:	cs push esp
  406745:	jg     0x4067bb
  406747:	xchg   esp,eax
  406748:	push   edi
  406749:	or     eax,0x85e88d25
  40674e:	jae    0x406783
  406750:	adc    al,0xba
  406752:	adc    BYTE PTR [ebx-0x72264ed2],ch
  406758:	sub    eax,0xb26a831
  40675d:	jl     0x406788
  40675f:	add    dh,BYTE PTR [ebp-0x28586d73]
  406765:	push   ebx
  406766:	cmp    bl,ah
  406768:	jno    0x406731
  40676a:	jge    0x406707
  40676c:	fadd   DWORD PTR [edi]
  40676e:	cld    
  40676f:	sub    eax,0xc7279a7c
  406774:	sub    DWORD PTR [ebx-0x11aad8b3],0xc61474e0
  40677e:	(bad)  
  40677f:	jmp    0x406767
  406781:	cs mov dh,0xce
  406784:	jecxz  0x406768
  406786:	fmul   DWORD PTR [ebp+0xb]
  406789:	or     al,0xcb
  40678b:	pusha  
  40678c:	bound  ebp,QWORD PTR [ecx+0x43eabbac]
  406792:	repz or esp,DWORD PTR [edx-0x3c549b17]
  406799:	sub    ebx,edx
  40679b:	sahf   
  40679c:	jnp    0x4067e4
  40679e:	aam    0x8c
  4067a0:	cli    
  4067a1:	add    eax,0x1154902e
  4067a6:	add    esp,DWORD PTR [ebp-0x1]
  4067a9:	retf   
  4067aa:	and    dl,BYTE PTR ds:0x93a9195f
  4067b0:	icebp  
  4067b1:	pop    ebx
  4067b2:	je     0x40679a
  4067b4:	addr16 cwde 
  4067b6:	icebp  
  4067b7:	js     0x4067c9
  4067b9:	adc    BYTE PTR ds:0x53adcb20,dl
  4067bf:	ja     0x406830
  4067c1:	iret   
  4067c2:	addr16 add al,0x0
  4067c5:	cwde   
  4067c6:	add    al,0x5d
  4067c8:	jno    0x4067dd
  4067ca:	scas   al,BYTE PTR es:[edi]
  4067cb:	jmp    0x406797
  4067cd:	push   ebx
  4067ce:	mov    esp,0x32aaf90d
  4067d3:	stos   DWORD PTR es:[edi],eax
  4067d4:	adc    DWORD PTR [eax],0x18
  4067d7:	cwde   
  4067d8:	mov    ds:0x3202bab5,al
  4067dd:	fst    QWORD PTR [ecx+0x1]
  4067e0:	call   0x1c4140ac
  4067e5:	lds    ebp,FWORD PTR [eax+0x59]
  4067e8:	fcmovbe st,st(6)
  4067ea:	fs stos BYTE PTR es:[edi],al
  4067ec:	add    eax,0xfcfa9307
  4067f1:	retf   0xcb0
  4067f4:	iret   
  4067f5:	test   ecx,edi
  4067f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f8:	push   ss
  4067f9:	stc    
  4067fa:	adc    dl,dl
  4067fc:	mov    ecx,0x63e47e8b
  406801:	ss stos DWORD PTR es:[edi],eax
  406803:	xor    eax,0x13b46e33
  406808:	mov    al,0xaa
  40680a:	in     eax,0x95
  40680c:	adc    dh,BYTE PTR [eax-0x80]
  40680f:	fcomi  st,st(7)
  406811:	and    ah,BYTE PTR [ecx+0x7b]
  406814:	in     al,0xb6
  406816:	std    
  406817:	mov    ds,esp
  406819:	xor    al,0x85
  40681b:	ja     0x406887
  40681d:	jne    0x406813
  40681f:	leave  
  406820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406821:	scas   al,BYTE PTR es:[edi]
  406822:	retf   
  406823:	sbb    dl,BYTE PTR [ebp+0x77]
  406826:	cmp    DWORD PTR [ecx+0x45],ecx
  406829:	loope  0x406834
  40682b:	jmp    0xa47e840d
  406830:	sbb    al,0x1a
  406832:	clc    
  406833:	test   eax,0xf7a0e4c
  406838:	arpl   WORD PTR [eax+0x8],di
  40683b:	dec    esi
  40683c:	bound  esp,QWORD PTR [ecx+0x5bc83b97]
  406842:	aam    0x4e
  406844:	pop    esi
  406845:	aad    0xd2
  406847:	and    bl,cl
  406849:	mov    ecx,0xd704724f
  40684e:	and    dh,BYTE PTR [edi-0x6c1a6e1c]
  406854:	push   es
  406855:	xor    ecx,DWORD PTR [eax]
  406857:	ss jp  0x406895
  40685a:	jbe    0x406853
  40685c:	fwait
  40685d:	pop    esi
  40685e:	aaa    
  40685f:	inc    esi
  406860:	repz push ebp
  406862:	dec    ecx
  406863:	ds xor al,0x72
  406866:	imul   ecx,DWORD PTR [edx+ebx*1],0x4068327c
  40686d:	xchg   ecx,eax
  40686e:	loope  0x40686e
  406870:	mov    fs,WORD PTR ds:0xda6d8bec
  406876:	fadd   st(1),st
  406878:	les    ebx,FWORD PTR [edi+0x4a]
  40687b:	test   eax,0x5afa65c9
  406880:	sbb    eax,0x5c758541
  406885:	cmp    ebp,edx
  406887:	jbe    0x4068d4
  406889:	mov    ch,0x8f
  40688b:	pop    edx
  40688c:	mov    ch,0xe7
  40688e:	stc    
  40688f:	dec    esp
  406890:	mov    bl,0xe9
  406892:	ror    BYTE PTR [ebx],1
  406894:	fstp   QWORD PTR [edx+0x35]
  406897:	cli    
  406898:	push   ebp
  406899:	in     al,0x47
  40689b:	js     0x4068d8
  40689d:	xchg   esi,eax
  40689e:	jne    0x4068ce
  4068a0:	out    0xc2,al
  4068a2:	sub    BYTE PTR [ebx+0x27868801],ch
  4068a8:	push   es
  4068a9:	(bad)  
  4068aa:	dec    ebp
  4068ab:	rol    BYTE PTR [ebx],cl
  4068ad:	test   eax,0x59ea1112
  4068b2:	mov    ebp,0x34c1bc98
  4068b7:	iret   
  4068b8:	push   es
  4068b9:	popf   
  4068ba:	push   esp
  4068bb:	jp     0x40689c
  4068bd:	push   esi
  4068be:	emms   
  4068c0:	arpl   di,sp
  4068c2:	sub    DWORD PTR [edi],eax
  4068c4:	cs int 0x28
  4068c7:	adc    bh,BYTE PTR [eax]
  4068c9:	sub    bh,BYTE PTR [esi]
  4068cb:	clc    
  4068cc:	mov    eax,0xcbab6c77
  4068d1:	xor    bl,ch
  4068d3:	xchg   esi,eax
  4068d4:	xor    ecx,DWORD PTR [edi-0x72755d85]
  4068da:	cs ret 
  4068dc:	push   esi
  4068dd:	mov    dh,ah
  4068df:	xchg   ecx,eax
  4068e0:	fnstsw WORD PTR [eax-0x1e70efd1]
  4068e6:	sub    eax,0xe96d5ed7
  4068eb:	stos   DWORD PTR es:[edi],eax
  4068ec:	cmp    eax,0xc13e8675
  4068f1:	xchg   BYTE PTR [edi],bl
  4068f3:	inc    eax
  4068f4:	test   BYTE PTR [eax+0x2e2a9b8c],0xea
  4068fb:	mov    bl,0x24
  4068fd:	out    0xea,al
  4068ff:	jnp    0x40692c
  406901:	mov    edi,0x50c0c617
  406906:	(bad)  
  406908:	rol    BYTE PTR [eax+0x61],cl
  40690b:	fucom  st(7)
  40690d:	(bad)
  406910:	sub    bl,BYTE PTR [eax-0x74ef4210]
  406916:	mov    ah,0xa5
  406918:	adc    dh,bl
  40691a:	pop    esp
  40691c:	or     eax,0xe9ccae2c
  406921:	inc    eax
  406922:	mov    ds,WORD PTR [esi+esi*8-0x42]
  406926:	loop   0x406976
  406928:	popa   
  406929:	pop    ds
  40692a:	sub    ebp,DWORD PTR [ecx-0x65]
  40692d:	sbb    al,0x65
  40692f:	push   0xffffffcf
  406931:	mov    bh,0xc6
  406933:	iret   
  406934:	rcr    BYTE PTR [eax+0x12],1
  406937:	imul   esp,DWORD PTR [ecx],0x21
  40693a:	out    dx,al
  40693b:	div    BYTE PTR [esi+edi*2-0x7ddf4592]
  406942:	les    edx,FWORD PTR [eax-0x4d6ccb9b]
  406948:	int3   
  406949:	adc    ebx,DWORD PTR [ebp-0x3d]
  40694c:	xchg   ebx,eax
  40694d:	xchg   esp,eax
  40694e:	sbb    bl,BYTE PTR [ebp-0x7bd605c]
  406954:	repz mov gs,WORD PTR ds:0x4ed0f953
  40695b:	xlat   BYTE PTR ds:[ebx]
  40695c:	adc    DWORD PTR [ecx-0xb83515f],esp
  406962:	mov    bh,0x43
  406964:	in     eax,0xe9
  406966:	cmp    bh,dh
  406968:	xor    BYTE PTR [eax+esi*8+0x1956bbc8],al
  40696f:	xor    eax,0xe48bc169
  406974:	in     eax,dx
  406975:	dec    ebx
  406976:	scas   eax,DWORD PTR es:[edi]
  406977:	popf   
  406978:	outs   dx,BYTE PTR ds:[esi]
  406979:	aam    0x11
  40697b:	lods   eax,DWORD PTR ds:[esi]
  40697c:	add    bh,dl
  40697e:	(bad)  
  40697f:	(bad)  
  406980:	mov    edx,0x6ec1a4e9
  406985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406986:	or     ah,BYTE PTR [ebp-0x63]
  406989:	mov    WORD PTR [ebx-0x7],ss
  40698c:	nop
  40698d:	push   ecx
  40698e:	les    ebp,FWORD PTR [eax-0x59]
  406991:	shr    BYTE PTR [edi-0x6290d606],1
  406997:	jae    0x40696f
  406999:	call   0x868bd58e
  40699e:	xor    eax,0xa4307304
  4069a3:	mov    DWORD PTR [ebx+0x1f],ebx
  4069a6:	sar    BYTE PTR [esi-0x19],0x21
  4069aa:	dec    esp
  4069ab:	sti    
  4069ac:	pop    esi
  4069ad:	mov    BYTE PTR [edx],ch
  4069af:	push   0x62
  4069b1:	mov    ah,0x64
  4069b3:	ror    DWORD PTR [ebx-0x15],0x20
  4069b7:	mov    eax,0x43b2cbee
  4069bc:	(bad)  
  4069be:	ds ds lock call 0xb3dd:0x636e8c8b
  4069c8:	out    dx,al
  4069c9:	xchg   ebp,eax
  4069ca:	jmp    0x4069f5
  4069cc:	xlat   BYTE PTR ds:[ebx]
  4069cd:	inc    ecx
  4069ce:	mov    ch,0x9f
  4069d0:	test   BYTE PTR [ecx-0x3c49e9b],bh
  4069d6:	mov    esi,0x86f0994a
  4069db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069dc:	pop    eax
  4069dd:	fs loopne 0x4069f0
  4069e0:	add    eax,0xfeb9e6da
  4069e5:	imul   edi,ecx,0x53335025
  4069eb:	bound  edx,QWORD PTR [ecx]
  4069ed:	push   ss
  4069ee:	cwde   
  4069ef:	fisub  DWORD PTR [edx-0x3f]
  4069f2:	xor    al,0xd8
  4069f4:	das    
  4069f5:	jae    0x4069a4
  4069f7:	push   0xffffff81
  4069f9:	rcr    BYTE PTR [eax-0x44],1
  4069fc:	or     DWORD PTR [edi+eax*2],esi
  4069ff:	push   0xffffffa2
  406a01:	xchg   ebp,eax
  406a02:	sbb    bl,BYTE PTR [edx*4-0x3de8eb1d]
  406a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a0a:	and    bh,cl
  406a0c:	ret    
  406a0d:	(bad)
  406a10:	jmp    0x1e9f:0xdc279be4
  406a17:	out    dx,al
  406a18:	jmp    DWORD PTR [edx+0x37]
  406a1b:	xchg   BYTE PTR [ecx+0x4620968e],cl
  406a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a22:	lds    ecx,FWORD PTR [eax-0x3dc8809f]
  406a28:	dec    esp
  406a29:	inc    edi
  406a2a:	xlat   BYTE PTR ds:[ebx]
  406a2b:	ja     0x406a1c
  406a2d:	dec    esi
  406a2e:	das    
  406a2f:	call   0x5a9b5e7c
  406a34:	push   0x577311ad
  406a39:	xor    al,ch
  406a3b:	cmp    esp,DWORD PTR [ecx-0x4600f1d8]
  406a41:	dec    ecx
  406a42:	mov    ebp,0xc1fd9a2c
  406a47:	cmp    al,0x6a
  406a49:	mov    ah,BYTE PTR [ecx-0x6b]
  406a4c:	push   edi
  406a4d:	imul   BYTE PTR [ecx]
  406a4f:	inc    edx
  406a50:	ins    DWORD PTR es:[edi],dx
  406a51:	sub    dh,BYTE PTR [ebx]
  406a53:	fdivp  st(3),st
  406a55:	add    ecx,DWORD PTR [eax+edx*2]
  406a58:	jp     0x406abf
  406a5a:	cmp    dl,BYTE PTR [esi+0x2dc69bf5]
  406a60:	sar    DWORD PTR [ebx+ebp*4],1
  406a63:	cmp    al,0xfb
  406a65:	in     al,0xc1
  406a67:	mov    ebx,DWORD PTR [esp+esi*4]
  406a6a:	xchg   BYTE PTR [esi],dh
  406a6c:	and    DWORD PTR [ebx-0x74bc7b43],0xbc1dae9
  406a76:	loopne 0x406af6
  406a78:	arpl   WORD PTR [ebx],bp
  406a7a:	in     eax,0xcf
  406a7c:	popf   
  406a7d:	inc    esi
  406a7e:	imul   eax,DWORD PTR [edi],0xffffff8a
  406a81:	test   BYTE PTR [edi-0x6f],al
  406a84:	adc    al,0xef
  406a86:	mov    ebp,0xaf143b0d
  406a8b:	mov    WORD PTR [esi+0x52],?
  406a8e:	cmc    
  406a8f:	daa    
  406a90:	ds iret 
  406a92:	jo     0x406ab3
  406a94:	adc    ebx,DWORD PTR [esp+ecx*4-0x7b]
  406a98:	shr    DWORD PTR [edi-0x6f],cl
  406a9b:	and    esi,eax
  406a9d:	xor    al,0x2c
  406a9f:	aas    
  406aa0:	pushf  
  406aa1:	push   ecx
  406aa2:	or     edx,0xfaec8c9a
  406aa8:	mov    BYTE PTR [eax+0x55f7c74c],ah
  406aae:	cmc    
  406aaf:	pop    ss
  406ab0:	xor    edx,ebp
  406ab2:	jno    0x406b14
  406ab4:	mov    ebx,0xe9d98839
  406ab9:	sub    DWORD PTR [ecx+ecx*8],0xe5e6c19
  406ac0:	xor    ebp,DWORD PTR [ebp+ebx*2+0x7e]
  406ac4:	repnz (bad) 
  406ac6:	int3   
  406ac7:	xchg   ecx,eax
  406ac8:	loopne 0x406aa0
  406aca:	xchg   esi,eax
  406acb:	shl    BYTE PTR [ebp+eiz*4+0x5],0x96
  406ad0:	mov    eax,ds:0x483cab82
  406ad5:	sti    
  406ad6:	pusha  
  406ad7:	aaa    
  406ad8:	sub    dh,BYTE PTR [ecx-0x60]
  406adb:	cli    
  406adc:	cmc    
  406add:	dec    ebx
  406ade:	aam    0xe2
  406ae0:	sti    
  406ae1:	mov    ch,0xa
  406ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae4:	add    ch,BYTE PTR [eax]
  406ae6:	push   DWORD PTR [ecx]
  406ae8:	fwait
  406ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aea:	push   cs
  406aeb:	loop   0x406ab3
  406aed:	jp     0x406ab9
  406aef:	aas    
  406af0:	outs   dx,DWORD PTR ds:[esi]
  406af1:	sar    DWORD PTR [edx+0x7d],0x4a
  406af5:	cmp    esi,edx
  406af7:	test   al,0x5
  406af9:	imul   ebp,ebx,0xffffff95
  406afc:	out    0x73,eax
  406afe:	ret    0x1bab
  406b01:	inc    esi
  406b02:	aaa    
  406b03:	push   0xcc4a953b
  406b08:	cmp    eax,0xa5203514
  406b0d:	addr16 inc esi
  406b0f:	add    al,0xb3
  406b11:	xchg   ecx,eax
  406b12:	push   edi
  406b13:	or     ebp,DWORD PTR [edi]
  406b15:	add    DWORD PTR [ebx-0x63f3eb4b],ecx
  406b1b:	adc    DWORD PTR [ebx],0x57
  406b1e:	mov    ebx,0xd862de74
  406b23:	mov    ch,0x45
  406b25:	ins    DWORD PTR es:[edi],dx
  406b26:	icebp  
  406b27:	xchg   edx,eax
  406b28:	sub    BYTE PTR [esi-0x65],0x22
  406b2c:	pushf  
  406b2d:	add    BYTE PTR [ebx-0x40],0xc7
  406b31:	loope  0x406ace
  406b33:	std    
  406b34:	push   ebx
  406b35:	pop    esp
  406b36:	xor    ecx,DWORD PTR [edi-0x4b]
  406b39:	dec    edx
  406b3a:	sahf   
  406b3b:	(bad)  [ebx+0x55]
  406b3e:	mov    WORD PTR [eax+0x787a6a99],?
  406b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b45:	mov    cl,0x90
  406b47:	cmp    esp,ecx
  406b49:	cmp    al,0x5a
  406b4b:	jae    0x406ba3
  406b4d:	pop    ebx
  406b4e:	sbb    eax,0x46cd871e
  406b53:	push   edx
  406b54:	add    eax,0x5843bafc
  406b59:	fs iret 
  406b5b:	add    al,0x70
  406b5d:	dec    esp
  406b5e:	iret   
  406b5f:	call   DWORD PTR [edx]
  406b61:	push   es
  406b62:	adc    ch,BYTE PTR [esi+0x55]
  406b65:	sar    DWORD PTR [eax+edi*4-0x29175d9d],0x3e
  406b6d:	and    ah,ch
  406b6f:	dec    eax
  406b70:	repz add eax,DWORD PTR [ecx-0x80]
  406b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b75:	adc    eax,0x4f628168
  406b7a:	je     0x406b9c
  406b7c:	test   DWORD PTR es:[edi-0x1d],0xa5fff81f
  406b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b85:	out    0xca,al
  406b87:	les    ecx,FWORD PTR [ebp+0x6c]
  406b8a:	pop    ss
  406b8b:	lahf   
  406b8c:	aas    
  406b8d:	sub    esp,DWORD PTR [eax+ebx*8-0x47ba8d5]
  406b94:	lods   al,BYTE PTR ds:[esi]
  406b95:	mov    ch,0xe9
  406b97:	and    eax,0x5cf09be5
  406b9c:	fst    QWORD PTR [edi-0x666e2c7f]
  406ba2:	fwait
  406ba3:	pop    esp
  406ba4:	ins    DWORD PTR es:[edi],dx
  406ba5:	mov    WORD PTR [edi+0x52],gs
  406ba8:	mov    ds:0xbe5f6847,al
  406bad:	cmp    BYTE PTR [esi-0x5bf15c5c],0x7c
  406bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb5:	inc    esi
  406bb6:	cmp    eax,0xecd9b018
  406bbb:	jns    0x406c15
  406bbd:	ret    
  406bbe:	fimul  DWORD PTR [edi]
  406bc0:	mov    ds:0xdea1e242,eax
  406bc5:	out    0xe8,eax
  406bc7:	and    eax,0x21b449bd
  406bcc:	add    cl,BYTE PTR [edi+0x1b291d7]
  406bd2:	or     ebx,DWORD PTR fs:[edx]
  406bd5:	mov    esi,ecx
  406bd7:	jmp    0xe6838865
  406bdc:	add    DWORD PTR [ecx-0x3d355af5],ebp
  406be2:	ins    DWORD PTR es:[edi],dx
  406be3:	(bad)  
  406be4:	in     al,0x7e
  406be6:	adc    ch,cl
  406be8:	lods   eax,DWORD PTR ds:[esi]
  406be9:	mov    eax,ds:0x1522c306
  406bee:	xor    DWORD PTR ds:0xacc8e8d7,esp
  406bf4:	jl     0x406c2e
  406bf6:	(bad)  
  406bf7:	in     al,0xe0
  406bf9:	mov    eax,0x2d74e027
  406bfe:	push   esp
  406bff:	xchg   ebp,eax
  406c00:	jnp    0x406c67
  406c02:	retw   0x9313
  406c06:	sub    ecx,DWORD PTR [edi]
  406c08:	jb     0x406bc8
  406c0a:	aad    0xb7
  406c0c:	loop   0x406bec
  406c0e:	scas   al,BYTE PTR es:[edi]
  406c0f:	jo     0x406bb0
  406c11:	outs   dx,BYTE PTR ds:[esi]
  406c12:	pop    edx
  406c13:	(bad)  
  406c14:	push   edi
  406c16:	and    eax,0x3812196c
  406c1b:	pusha  
  406c1c:	mov    ds:0xbfd14869,al
  406c21:	ja     0x406c7a
  406c23:	xor    eax,0xfa73a241
  406c28:	or     DWORD PTR [ecx+ecx*2],esp
  406c2b:	test   DWORD PTR [ecx-0x3bbc74f7],eax
  406c31:	push   ss
  406c32:	jo     0x406c41
  406c34:	cmp    BYTE PTR [esi-0x5e6c736],dl
  406c3a:	addr16 data16 out 0xb6,al
  406c3e:	mov    sp,0xba82
  406c42:	xchg   ecx,eax
  406c43:	xchg   ebx,eax
  406c44:	shr    DWORD PTR [ecx-0x46],0x1a
  406c48:	xlat   BYTE PTR ds:[ebx]
  406c49:	jb     0x406c3e
  406c4b:	mov    eax,ds:0x6f63ab5d
  406c50:	mov    es,WORD PTR [esi+eiz*1]
  406c53:	pop    es
  406c54:	sti    
  406c55:	sahf   
  406c56:	rcr    BYTE PTR [esi-0x277cb1aa],0x8b
  406c5d:	out    dx,al
  406c5e:	mov    WORD PTR [ecx+0x8],es
  406c61:	cmp    BYTE PTR [esi+edi*1-0x2e],bh
  406c65:	mov    eax,ds:0x60669709
  406c6a:	mov    edx,0x3a4d8d08
  406c6f:	or     eax,0xa1a77fa3
  406c74:	lods   eax,DWORD PTR ds:[esi]
  406c75:	dec    ebx
  406c76:	cmp    eax,DWORD PTR [edx]
  406c78:	sub    edx,edi
  406c7a:	cli    
  406c7b:	rol    BYTE PTR [eax-0xe4a330e],cl
  406c81:	jg     0x406c60
  406c83:	and    al,0x7b
  406c85:	(bad)  
  406c86:	lds    esi,FWORD PTR [edx]
  406c88:	sbb    al,0x9b
  406c8a:	mov    ebx,0xc92e60de
  406c8f:	and    ah,BYTE PTR [edi*1-0x2b272668]
  406c96:	sbb    BYTE PTR [eax-0x7cdefb2b],0xe
  406c9d:	mov    bl,bl
  406c9f:	adc    DWORD PTR [edx],0x32560978
  406ca5:	sahf   
  406ca6:	bound  eax,QWORD PTR [edi+ebx*2-0x18]
  406caa:	inc    esp
  406cab:	cdq    
  406cac:	sbb    esp,0x19
  406caf:	test   DWORD PTR [eax+0x58],ebp
  406cb2:	xor    DWORD PTR [esi-0x57],ebp
  406cb5:	int3   
  406cb6:	je     0x406c59
  406cb8:	das    
  406cb9:	cmc    
  406cba:	(bad)
  406cbe:	or     DWORD PTR [ebx-0x32],esi
  406cc1:	push   0xffffff90
  406cc3:	out    dx,al
  406cc4:	adc    esi,ebp
  406cc6:	jle    0x406c49
  406cc8:	ins    BYTE PTR es:[edi],dx
  406cc9:	fucomip st,st(1)
  406ccb:	xor    ch,0xf7
  406cce:	sbb    ebp,DWORD PTR [ebp+ebx*4+0x6d]
  406cd2:	cs mov dh,0xe0
  406cd5:	ja     0x406cfe
  406cd7:	jmp    0xd620:0xb2d21074
  406cde:	scas   eax,DWORD PTR es:[edi]
  406cdf:	imul   ecx,edx,0x4d698749
  406ce5:	push   0xc1efaadd
  406cea:	shl    DWORD PTR [ebp+edi*1+0x5f],1
  406cee:	aaa    
  406cef:	sub    al,0xbd
  406cf1:	add    DWORD PTR [edx+edx*4-0x22be6359],0x68656a94
  406cfc:	test   BYTE PTR [eax+0x1fd28e2f],0x6b
  406d03:	adc    ebx,DWORD PTR [eax-0x50]
  406d06:	ss jmp 0x947a:0x6a634f48
  406d0e:	cmc    
  406d0f:	inc    ebx
  406d10:	pop    edx
  406d11:	in     al,0x66
  406d13:	(bad)  
  406d15:	jbe    0x406d2b
  406d17:	popa   
  406d18:	sar    DWORD PTR [eax],cl
  406d1a:	scas   al,BYTE PTR es:[edi]
  406d1b:	or     DWORD PTR [esi+0xbd89da9],esp
  406d21:	(bad)  
  406d22:	mov    DWORD PTR [edx],edi
  406d24:	mov    BYTE PTR [ecx-0x3e031611],ch
  406d2a:	adc    DWORD PTR [eax+esi*2],edx
  406d2d:	push   esp
  406d2e:	jnp    0x406d2d
  406d30:	or     al,0x46
  406d32:	and    eax,0x90819ebd
  406d37:	shl    BYTE PTR [edi-0x438a8d16],1
  406d3d:	outs   dx,BYTE PTR ds:[esi]
  406d3e:	add    esp,DWORD PTR [edx]
  406d40:	sbb    BYTE PTR [esi+0x541ec7fc],0x65
  406d47:	fcmovnu st,st(7)
  406d49:	xchg   edx,eax
  406d4a:	or     ebx,DWORD PTR ds:0xf2166617
  406d50:	cmp    bl,BYTE PTR [eax+0x5d58e066]
  406d56:	cld    
  406d57:	jns    0x406d50
  406d59:	jbe    0x406d0a
  406d5b:	call   0x1e3318d9
  406d60:	dec    ecx
  406d61:	pusha  
  406d62:	adc    DWORD PTR [eax+0x6e1c0c16],0x5940e55f
  406d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6d:	test   al,0x4d
  406d6f:	pop    esp
  406d70:	pop    eax
  406d71:	lahf   
  406d72:	xchg   ecx,eax
  406d73:	xchg   ebx,eax
  406d74:	or     ecx,0xffffffb5
  406d77:	shl    DWORD PTR [edi+0x11517417],1
  406d7d:	das    
  406d7e:	outs   dx,BYTE PTR ss:[si]
  406d81:	or     BYTE PTR [esi],al
  406d83:	mov    ebx,0xbddae5f6
  406d88:	push   edx
  406d89:	xor    al,0xcc
  406d8b:	jne    0x406d20
  406d8d:	xchg   edi,eax
  406d8e:	iret   
  406d8f:	sbb    eax,0x9c1e6d9b
  406d94:	xchg   ecx,eax
  406d95:	add    al,0x2d
  406d97:	or     eax,0xc65c255a
  406d9c:	or     al,0x58
  406d9e:	xlat   BYTE PTR ds:[ebx]
  406d9f:	fnsave [edi-0x4577b7cd]
  406da5:	inc    edx
  406da6:	cmp    DWORD PTR es:[ebx-0x10],0x11861bde
  406dae:	dec    edx
  406daf:	xor    ecx,DWORD PTR [ebx+0x54d22e1e]
  406db5:	push   ss
  406db6:	dec    edi
  406db7:	fnstsw ax
  406db9:	fdivr  QWORD PTR [edx-0x639885ce]
  406dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc0:	xchg   edi,esp
  406dc2:	lods   al,BYTE PTR ds:[esi]
  406dc3:	sbb    al,0xf1
  406dc5:	jo     0x406da7
  406dc7:	adc    BYTE PTR [ebx+ecx*4-0x1d],ch
  406dcb:	sub    BYTE PTR [esi+0x15],0x39
  406dcf:	xchg   esi,eax
  406dd0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406dd2:	sbb    BYTE PTR [ebp+0x66],0x5c
  406dd6:	rcl    DWORD PTR [ecx+ebp*2],1
  406dd9:	(bad)  
  406dda:	in     al,0x4d
  406ddc:	inc    edi
  406ddd:	inc    BYTE PTR [esi]
  406ddf:	mov    esp,0x1d6d6489
  406de4:	add    BYTE PTR [edi-0x2db90e78],bl
  406dea:	int3   
  406deb:	aam    0xa5
  406ded:	sub    ebx,ecx
  406def:	addr16 mov ds:0x668,eax
  406df3:	mov    esi,0xd7e5767
  406df8:	push   ds
  406df9:	in     al,0x4a
  406dfb:	jae    0x406d9f
  406dfd:	jl     0x406e12
  406dff:	xchg   ecx,eax
  406e00:	dec    ebx
  406e01:	jnp    0x406dc7
  406e03:	push   cs
  406e04:	dec    esp
  406e05:	nop
  406e06:	jne    0x406e65
  406e08:	sub    ebx,ecx
  406e0a:	mov    ch,0x8
  406e0c:	jno    0x406df3
  406e0e:	add    esi,DWORD PTR [eax]
  406e10:	sbb    DWORD PTR [edi],esp
  406e12:	xchg   esp,eax
  406e13:	add    DWORD PTR [esi],esp
  406e15:	inc    edx
  406e16:	jg     0x406da2
  406e18:	std    
  406e19:	(bad)  
  406e1a:	adc    al,0xe5
  406e1c:	mov    dl,0x64
  406e1e:	(bad)  
  406e1f:	mov    ebp,DWORD PTR [edx+0x2b]
  406e22:	in     eax,dx
  406e23:	int    0x89
  406e25:	stos   DWORD PTR es:[edi],eax
  406e26:	(bad)  
  406e27:	mov    ch,0x4d
  406e29:	into   
  406e2a:	ja     0x406e9c
  406e2c:	jg     0x406e35
  406e2e:	mov    cl,0xec
  406e30:	push   esp
  406e31:	inc    ecx
  406e32:	int3   
  406e33:	mov    ebx,0x9578e327
  406e38:	adc    DWORD PTR [esi],ebp
  406e3a:	add    DWORD PTR [esi+0x79],ebp
  406e3d:	call   0x6cda:0x9f6f36cd
  406e44:	stc    
  406e45:	sub    eax,0x3b4c94f0
  406e4a:	pop    ebp
  406e4b:	addr16 sbb eax,0xd3beafa8
  406e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e53:	sub    ch,BYTE PTR [edi+ebx*1]
  406e56:	cs pusha 
  406e58:	in     al,0x21
  406e5a:	mov    al,dl
  406e5c:	cmp    eax,0x29ae772b
  406e61:	imul   ecx,DWORD PTR [ebx+0x12],0xb2bd0d6
  406e68:	out    dx,al
  406e69:	ins    BYTE PTR es:[edi],dx
  406e6a:	cmp    eax,0xac699fea
  406e6f:	scas   eax,DWORD PTR es:[edi]
  406e70:	test   al,0x7b
  406e72:	mov    dl,0x49
  406e74:	idiv   bl
  406e76:	jmp    0x406e97
  406e78:	sbb    DWORD PTR [ecx-0x63],ecx
  406e7b:	xor    DWORD PTR [ebx+0x742f4350],edi
  406e81:	and    BYTE PTR [ecx+0x46],cl
  406e84:	mov    edx,0xc0313f07
  406e89:	jp     0x406e56
  406e8b:	xchg   edi,eax
  406e8c:	call   0x1929:0x122a45a2
  406e93:	push   ds
  406e94:	loop   0x406eb5
  406e96:	out    dx,eax
  406e97:	in     al,0xde
  406e99:	mov    ds:0x62f282ee,eax
  406e9e:	jmp    0x406eaf
  406ea0:	or     DWORD PTR [edx+ecx*4-0x17b1497d],eax
  406ea7:	das    
  406ea8:	in     al,0xcc
  406eaa:	jo     0x406eca
  406eac:	or     esi,DWORD PTR [edi]
  406eae:	mov    al,ds:0xac1359cd
  406eb3:	fsubr  QWORD PTR [ebp+ecx*8+0x1a]
  406eb7:	inc    eax
  406eb8:	enter  0x435,0x4b
  406ebc:	ret    
  406ebd:	xchg   esi,eax
  406ebe:	daa    
  406ebf:	bswap  esp
  406ec1:	aas    
  406ec2:	inc    ecx
  406ec3:	mov    eax,ds:0x4bcf46ac
  406ec8:	pop    edi
  406eca:	mov    esi,0x2f8b03c4
  406ecf:	sub    DWORD PTR [edx+0x6f],0x52745e42
  406ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed7:	lds    ecx,FWORD PTR [ecx+0x1cd8ca22]
  406edd:	sub    al,0x7
  406edf:	lds    edx,FWORD PTR [ecx+0x17328c25]
  406ee5:	loopne 0x406f1b
  406ee7:	mov    esi,0xd8022222
  406eec:	jg     0x406f05
  406eee:	xchg   edx,eax
  406eef:	xor    dh,bh
  406ef1:	je     0x406e83
  406ef3:	cmp    DWORD PTR [ebx+0x66],edx
  406ef6:	pxor   mm5,mm7
  406ef9:	arpl   WORD PTR [edi+0x55d5ebbd],bx
  406eff:	jnp    0x406f57
  406f01:	xchg   edx,eax
  406f02:	jbe    0x406f2f
  406f04:	ret    
  406f05:	push   0xdf6122bb
  406f0a:	sub    cl,ah
  406f0c:	push   esp
  406f0d:	jne    0x406eb6
  406f0f:	sub    eax,0xc5d2a2d2
  406f14:	sbb    esp,DWORD PTR [edx-0x78]
  406f17:	xchg   ebp,eax
  406f18:	leave  
  406f19:	mov    al,ds:0x9ff54726
  406f1e:	stos   BYTE PTR es:[edi],al
  406f1f:	or     BYTE PTR [ebx-0x7c],bl
  406f22:	sar    DWORD PTR [edi],cl
  406f24:	push   es
  406f25:	pop    ss
  406f26:	or     cl,BYTE PTR [edx]
  406f28:	mov    ch,0x99
  406f2a:	mov    edx,0xd563e543
  406f2f:	mov    gs,WORD PTR [esi-0x715de67d]
  406f35:	out    dx,al
  406f36:	push   ebx
  406f37:	idiv   BYTE PTR [esi]
  406f39:	lods   eax,DWORD PTR ds:[esi]
  406f3a:	int    0xa3
  406f3c:	popf   
  406f3d:	aam    0xdb
  406f3f:	add    eax,0x180be4f
  406f44:	retf   0x9bd7
  406f47:	mov    cl,0x76
  406f49:	repnz jmp FWORD PTR ds:0xa8a85822
  406f50:	pop    es
  406f51:	(bad)  
  406f52:	mov    ds:0x2d671a7d,eax
  406f57:	repnz adc DWORD PTR [esi-0x3c652aec],esp
  406f5e:	clc    
  406f5f:	test   al,0x4c
  406f61:	xchg   esi,eax
  406f62:	fidiv  DWORD PTR [edx]
  406f64:	pop    eax
  406f65:	cmp    ecx,DWORD PTR [esi+0x30610e5c]
  406f6b:	add    al,0xec
  406f6d:	sub    edx,DWORD PTR ds:0x7f01dd14
  406f73:	into   
  406f74:	cdq    
  406f75:	sbb    ch,BYTE PTR [eax-0x9]
  406f78:	getsec 
  406f7a:	xor    DWORD PTR [ebx+0x69e8a1a3],ebp
  406f80:	add    BYTE PTR [edx+0x4853c758],cl
  406f86:	shl    DWORD PTR [ebx],cl
  406f88:	rcl    DWORD PTR [esi+0xaa7bb23],1
  406f8e:	push   esi
  406f8f:	(bad)  
  406f90:	jnp    0x406fcb
  406f92:	mov    edx,0x80666fff
  406f97:	lods   al,BYTE PTR es:[esi]
  406f99:	repz push ss
  406f9b:	inc    eax
  406f9c:	je     0x406f43
  406f9e:	iret   
  406f9f:	push   ecx
  406fa0:	inc    ecx
  406fa1:	push   0x6e
  406fa3:	mov    esi,0x401ead13
  406fa8:	push   eax
  406fa9:	hlt    
  406faa:	ins    DWORD PTR es:[edi],dx
  406fab:	call   0x6413:0x3b9a077a
  406fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fb3:	sub    cl,ah
  406fb5:	icebp  
  406fb6:	bound  esi,QWORD PTR [edi+0x58f851f5]
  406fbc:	in     al,dx
  406fbd:	mov    ch,0xd
  406fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc0:	push   ss
  406fc1:	xor    cl,BYTE PTR [esi-0x2a]
  406fc4:	lahf   
  406fc5:	jae    0x406fb0
  406fc7:	sti    
  406fc8:	fcomp  DWORD PTR [ecx+0x1c]
  406fcb:	pop    eax
  406fcc:	push   0xffffffcc
  406fce:	leave  
  406fcf:	sbb    DWORD PTR [edi],edx
  406fd1:	mov    ch,0x9d
  406fd3:	(bad)  
  406fd5:	test   al,0x7
  406fd7:	test   BYTE PTR [ebx+0x43],dl
  406fda:	mov    dh,0xb
  406fdc:	(bad)  
  406fdd:	loopne 0x406f7f
  406fdf:	pusha  
  406fe0:	fs (bad) 
  406fe2:	sub    al,0x34
  406fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe5:	out    dx,al
  406fe6:	inc    esp
  406fe7:	sub    eax,0x65aa35a1
  406fec:	out    0x2,al
  406fee:	jnp    0x407061
  406ff0:	fldcw  WORD PTR [esi-0x61]
  406ff3:	xor    BYTE PTR [ecx-0x56],cl
  406ff6:	into   
  406ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff8:	aad    0x19
  406ffa:	add    bl,BYTE PTR [esi-0x2e0e150d]
  407000:	and    eax,0x84d01863
  407005:	dec    ecx
  407006:	ret    
  407007:	leave  
  407008:	mov    DWORD PTR [ebx+0x6],eax
  40700b:	(bad)  
  40700c:	push   eax
  40700d:	jmp    0xb9b5:0x68166b32
  407014:	xchg   esp,eax
  407015:	xchg   esi,eax
  407016:	fdivr  DWORD PTR [edx-0x20]
  407019:	aam    0x6a
  40701b:	pop    esp
  40701c:	into   
  40701d:	pop    ebx
  40701e:	ins    DWORD PTR es:[edi],dx
  40701f:	xor    ecx,DWORD PTR [esp+ebx*1]
  407022:	mov    bh,0x62
  407024:	pop    es
  407025:	stos   DWORD PTR es:[edi],eax
  407026:	nop
  407027:	cld    
  407028:	bound  esp,QWORD PTR [ecx+0x5bde691f]
  40702e:	sub    esp,DWORD PTR [ebx+ebp*2+0x7a4f8d25]
  407035:	stc    
  407036:	push   ebp
  407037:	fild   QWORD PTR [esi+0x1e]
  40703a:	sbb    BYTE PTR [ecx],ch
  40703c:	inc    ebp
  40703d:	jo     0x406fee
  40703f:	adc    DWORD PTR [eax],edi
  407041:	mov    cl,0xf1
  407043:	xchg   esp,ecx
  407045:	test   BYTE PTR [esi+0x58f1aea7],bl
  40704b:	mov    esi,0xe6915e09
  407050:	into   
  407051:	inc    esi
  407052:	mov    edx,0xa3ed0d57
  407057:	push   eax
  407058:	stos   BYTE PTR es:[edi],al
  407059:	cmp    al,0xac
  40705b:	das    
  40705c:	add    BYTE PTR [ebx+0x18cf1b3e],cl
  407062:	(bad)
  407065:	retf   0x2f11
  407068:	jg     0x407065
  40706a:	pop    ss
  40706b:	xchg   ebp,eax
  40706c:	mov    ah,al
  40706e:	cmp    dl,dh
  407070:	inc    edi
  407071:	add    ebp,ebp
  407073:	ja     0x406ffa
  407075:	and    esi,DWORD PTR [edx+0xeded4b]
  40707b:	ror    BYTE PTR [ebx-0x3b189641],1
  407081:	ficomp WORD PTR [ebx-0x7ed7cf3b]
  407087:	mov    bh,0xc8
  407089:	mov    ds:0x1236aae0,al
  40708e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708f:	das    
  407090:	jae    0x4070a9
  407092:	mov    dl,0x7d
  407094:	(bad)  
  407095:	jge    0x4070ab
  407097:	push   ecx
  407098:	xchg   ebx,eax
  407099:	ficom  DWORD PTR [esi-0x67]
  40709c:	xchg   edi,eax
  40709d:	and    BYTE PTR [eax+0x1c],ah
  4070a0:	sbb    eax,0xd48126ac
  4070a5:	ror    BYTE PTR [ebx-0x5c],1
  4070a8:	into   
  4070a9:	das    
  4070aa:	mov    esi,0xdacf3283
  4070af:	lds    esp,FWORD PTR [ebp+0x7b]
  4070b2:	adc    esi,esp
  4070b4:	mov    bh,0xde
  4070b6:	xchg   BYTE PTR [ecx+edx*1],bl
  4070b9:	inc    ebx
  4070ba:	pushf  
  4070bb:	pop    edx
  4070bc:	push   0xffffffca
  4070be:	cmp    eax,0x4939ceed
  4070c3:	cwde   
  4070c4:	ror    BYTE PTR [esi+0x27118aa7],0x37
  4070cb:	cdq    
  4070cc:	cwde   
  4070cd:	ret    0xf7c6
  4070d0:	retf   
  4070d1:	mov    bh,0x92
  4070d3:	jmp    0x407067
  4070d5:	jg     0x407134
  4070d7:	jl     0x4070b5
  4070d9:	jge    0x4070cc
  4070db:	or     DWORD PTR [esi+0x63],0x3f3b4e65
  4070e2:	mov    bh,0x8d
  4070e4:	pop    es
  4070e5:	mov    es,WORD PTR [esi]
  4070e7:	fucom  st(7)
  4070e9:	int    0x9f
  4070eb:	rcr    bh,1
  4070ed:	jmp    0xd1f6eff2
  4070f2:	push   es
  4070f3:	lds    ebp,FWORD PTR [esi+0x10]
  4070f6:	mov    edi,DWORD PTR [ebx]
  4070f8:	rol    dl,0x70
  4070fb:	out    dx,al
  4070fc:	iret   
  4070fd:	jb     0x407093
  4070ff:	mul    DWORD PTR [esi+ecx*1+0x78946b91]
  407106:	loop   0x4070e8
  407108:	enter  0xc901,0x82
  40710c:	loop   0x407184
  40710e:	mov    edx,0x30ab870
  407113:	mov    ds,WORD PTR [edi]
  407115:	aas    
  407116:	cmp    al,0xf1
  407118:	aam    0xc3
  40711a:	(bad)  
  40711b:	xchg   ebp,eax
  40711c:	sub    esi,ecx
  40711e:	mov    BYTE PTR [ebp-0x268040d8],ch
  407124:	adc    DWORD PTR [ecx-0x61f9df46],0x28024d76
  40712e:	pop    ss
  40712f:	mov    esi,0x45423cb5
  407134:	loopne 0x407146
  407136:	cld    
  407137:	xchg   ebx,eax
  407138:	xor    BYTE PTR [ebx+0x43],dh
  40713b:	je     0x407152
  40713d:	loop   0x407115
  40713f:	push   0xffffffa7
  407141:	fiadd  WORD PTR [edi-0x23]
  407144:	fwait
  407145:	cld    
  407146:	inc    edx
  407147:	and    bh,BYTE PTR [eax-0x3399457d]
  40714d:	mov    WORD PTR [edi+0x4f],gs
  407150:	cmp    eax,0x1a604d12
  407155:	out    0x36,eax
  407157:	pop    ds
  407158:	mov    esp,0x70500141
  40715d:	push   ebp
  40715e:	or     ah,BYTE PTR [eax-0x44]
  407161:	arpl   WORD PTR [ebx-0x6252db2d],dx
  407167:	arpl   WORD PTR [edx],dx
  407169:	fidiv  DWORD PTR [ebx-0x69]
  40716c:	or     bh,BYTE PTR ds:0x18331adb
  407172:	hlt    
  407173:	pop    edx
  407174:	inc    edi
  407175:	ss or  ebp,DWORD PTR es:[edi+0x22]
  40717a:	inc    esp
  40717b:	retf   
  40717c:	shl    BYTE PTR [ecx],cl
  40717e:	shl    ah,1
  407180:	xchg   edx,eax
  407181:	and    DWORD PTR [edi-0x416f7797],eax
  407187:	fcomp  st(5)
  407189:	into   
  40718a:	in     eax,dx
  40718b:	in     al,0x84
  40718d:	or     DWORD PTR [edi+ebx*4],eax
  407190:	fmul   st,st(2)
  407192:	push   edx
  407193:	pop    ecx
  407194:	ss call 0x890de97a
  40719a:	imul   ebx,DWORD PTR [edx+ebp*1],0x2b
  40719e:	ss jnp 0x407219
  4071a1:	je     0x4071e0
  4071a3:	mov    eax,ds:0xf1abc6e2
  4071a8:	pusha  
  4071a9:	out    0x7a,al
  4071ab:	xor    edi,DWORD PTR [edi+eax*2]
  4071ae:	ret    
  4071af:	dec    esp
  4071b0:	pop    ebx
  4071b1:	jg     0x407213
  4071b3:	sbb    dl,ch
  4071b5:	(bad)  
  4071b6:	sbb    DWORD PTR [ecx+0x7be4d143],eax
  4071bc:	out    0x58,al
  4071be:	adc    BYTE PTR [eax-0x7e],dh
  4071c1:	pop    ebp
  4071c2:	ficom  WORD PTR ds:0xe2d40dce
  4071c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c9:	mov    bh,0xde
  4071cb:	sub    al,ah
  4071cd:	sbb    DWORD PTR [esi],ebx
  4071cf:	pop    ecx
  4071d0:	icebp  
  4071d1:	mov    dh,0x33
  4071d3:	mov    BYTE PTR [edi-0x79],bh
  4071d6:	add    DWORD PTR [eax+ebx*8-0x12a8295f],esi
  4071dd:	aam    0x55
  4071df:	sub    al,0x14
  4071e1:	dec    ebp
  4071e2:	sbb    dh,BYTE PTR [esi-0x57]
  4071e5:	bound  edi,QWORD PTR [ebp+0x40ac7862]
  4071eb:	aam    0xa2
  4071ed:	jge    0x407203
  4071ef:	push   ebp
  4071f0:	adc    DWORD PTR ds:0xd37b82e6,esi
  4071f6:	rcr    BYTE PTR [esi],0xd4
  4071f9:	jbe    0x40723a
  4071fb:	pop    es
  4071fc:	jns    0x4071f3
  4071fe:	cmp    al,0x9f
  407200:	cwde   
  407201:	les    edx,FWORD PTR [ecx+0x4f]
  407204:	hlt    
  407205:	(bad)  
  407207:	xor    al,dh
  407209:	mov    dh,0x54
  40720b:	int3   
  40720c:	int3   
  40720d:	push   ecx
  40720e:	mov    ds:0xf0bb7a6c,al
  407213:	adc    DWORD PTR [ecx],esi
  407215:	enter  0x1c03,0x4a
  407219:	std    
  40721a:	loop   0x40721c
  40721c:	std    
  40721d:	aam    0x16
  40721f:	mov    dl,BYTE PTR [esi]
  407221:	sub    al,0xc7
  407223:	adc    DWORD PTR [esi],0x24
  407226:	dec    edx
  407227:	adc    BYTE PTR cs:[edx-0x20],bh
  40722b:	push   0x11
  40722d:	mov    bh,al
  40722f:	stos   BYTE PTR es:[di],al
  407231:	xchg   edx,eax
  407232:	call   FWORD PTR [ecx+edx*2+0x3751e105]
  407239:	jbe    0x407291
  40723b:	lock xchg ebx,eax
  40723d:	(bad)  
  40723e:	icebp  
  40723f:	clc    
  407240:	sbb    al,BYTE PTR [esi+0x69db54]
  407246:	cmc    
  407247:	xlat   BYTE PTR ds:[ebx]
  407248:	pop    edx
  407249:	or     DWORD PTR [edx+0x26375097],ebp
  40724f:	add    al,0xb0
  407251:	and    esp,DWORD PTR [ecx]
  407253:	mov    al,0x5a
  407255:	mov    ds:0xd2ba2d20,al
  40725a:	mov    ch,0xe0
  40725c:	xchg   esi,eax
  40725d:	add    DWORD PTR [ebx+0x616ee2e3],eax
  407263:	push   edi
  407264:	mov    ss,WORD PTR [esi+0x46d62d5c]
  40726a:	ror    edi,0x7b
  40726d:	int3   
  40726e:	test   DWORD PTR [edi],0xd2947c1
  407274:	imul   edi,DWORD PTR [ecx],0x67
  407277:	cmp    bl,BYTE PTR [edx-0x56d16da]
  40727d:	gs in  eax,0x32
  407280:	mov    BYTE PTR [edx-0x5],ah
  407283:	aaa    
  407284:	aaa    
  407285:	shl    BYTE PTR [ecx],1
  407287:	ja     0x407246
  407289:	dec    ebx
  40728a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40728c:	(bad)  
  40728d:	aad    0xed
  40728f:	pop    edx
  407290:	xchg   edx,esp
  407292:	cs enter 0x4974,0xac
  407297:	dec    esp
  407298:	push   edx
  407299:	mov    eax,0xd6c1f8f9
  40729e:	jb     0x40731f
  4072a0:	dec    edi
  4072a1:	out    dx,eax
  4072a2:	push   ss
  4072a3:	mov    ds:0x19742375,al
  4072a8:	sub    esi,DWORD PTR [esi-0x4e]
  4072ab:	popf   
  4072ac:	enter  0x2bdf,0xe8
  4072b0:	dec    esp
  4072b1:	and    DWORD PTR [edx+0x75b99d0f],0x8042d354
  4072bb:	ror    BYTE PTR [ecx+0x39],1
  4072be:	(bad)  
  4072bf:	fild   QWORD PTR ds:0xb08709b3
  4072c5:	or     BYTE PTR [ecx],0x4e
  4072c8:	loopne 0x40729e
  4072ca:	in     al,dx
  4072cb:	imul   ebx,DWORD PTR [ebp+edx*8-0x22],0xffffffc5
  4072d0:	jle    0x407273
  4072d2:	leave  
  4072d3:	sbb    esp,eax
  4072d5:	push   ebx
  4072d6:	push   ecx
  4072d7:	stos   DWORD PTR es:[edi],eax
  4072d8:	test   al,0x18
  4072da:	jae    0x4072f1
  4072dc:	fwait
  4072dd:	ss jmp 0x4072c8
  4072e0:	cmp    eax,0xacf66ec5
  4072e5:	loop   0x4072c4
  4072e7:	mov    ebp,0xf2ac0d72
  4072ec:	int3   
  4072ed:	jge    0x4072e6
  4072ef:	jns    0x407292
  4072f1:	add    DWORD PTR [edi],edx
  4072f3:	mov    ecx,ebx
  4072f5:	in     al,0x2a
  4072f7:	add    eax,0x7c341581
  4072fc:	adc    BYTE PTR [edi+0x61c900ea],cl
  407302:	cmp    DWORD PTR [edx-0x497a256f],0x75
  407309:	jbe    0x4072cb
  40730b:	jns    0x407373
  40730d:	out    dx,al
  40730e:	dec    ecx
  40730f:	loop   0x407314
  407311:	add    ecx,DWORD PTR [esi+0x1f581603]
  407317:	sti    
  407318:	xchg   edi,eax
  407319:	clc    
  40731a:	cld    
  40731b:	push   ebx
  40731c:	cmp    al,0x78
  40731e:	and    ebp,DWORD PTR [eax]
  407320:	push   cs
  407321:	icebp  
  407322:	scas   al,BYTE PTR es:[edi]
  407323:	ins    DWORD PTR es:[edi],dx
  407324:	cmp    ebp,DWORD PTR [edx]
  407326:	push   es
  407327:	mov    WORD PTR [esi],?
  407329:	(bad)  
  40732a:	cmc    
  40732b:	inc    ecx
  40732c:	fnstsw WORD PTR [edi+0x36]
  40732f:	xchg   esi,eax
  407330:	adc    dh,BYTE PTR [eax+ebx*4-0x4a]
  407334:	fs push eax
  407336:	jbe    0x40737b
  407338:	mov    edi,0xbfc1bee6
  40733d:	inc    edx
  40733e:	push   es
  40733f:	jno    0x407350
  407341:	inc    ecx
  407342:	retf   0x5fa0
  407345:	dec    ecx
  407346:	lods   al,BYTE PTR ds:[esi]
  407347:	data16 repz jle 0x407376
  40734b:	mov    al,0xfe
  40734d:	pop    es
  40734e:	pop    ss
  40734f:	adc    edx,eax
  407351:	fwait
  407352:	stc    
  407353:	or     eax,0x243c8a43
  407358:	retf   
  407359:	into   
  40735a:	push   cs
  40735b:	or     ecx,edi
  40735d:	sahf   
  40735e:	cdq    
  40735f:	icebp  
  407360:	iret   
  407361:	fbstp  TBYTE PTR [edx]
  407363:	and    ebx,DWORD PTR [edi]
  407365:	adc    eax,0xee484233
  40736a:	(bad)  
  40736b:	fild   QWORD PTR [ecx]
  40736d:	inc    ebp
  40736e:	jl     0x4073bf
  407370:	test   DWORD PTR fs:[edx-0x7d],eax
  407374:	xchg   esp,eax
  407375:	(bad)  
  407376:	sub    DWORD PTR ds:[ebx+0x59e9dd],ebp
  40737d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737e:	jmp    0xaacd:0xc37f4167
  407385:	retf   0x41ba
  407388:	test   BYTE PTR [ebx+0x14167df3],bh
  40738e:	xchg   ebx,eax
  40738f:	je     0x407341
  407391:	mov    cl,0x65
  407393:	ss aad 0xd
  407396:	(bad)  
  407398:	pop    eax
  407399:	cmp    bl,BYTE PTR [edx-0x2201f66a]
  40739f:	dec    esi
  4073a0:	sbb    eax,DWORD PTR [esi-0x64]
  4073a3:	loope  0x407374
  4073a5:	mov    edx,0x73774543
  4073aa:	in     al,0x2e
  4073ac:	push   es
  4073ad:	pop    esi
  4073ae:	sahf   
  4073af:	ja     0x4073ac
  4073b1:	popa   
  4073b2:	and    bl,0x60
  4073b5:	(bad)  
  4073b6:	jne    0x407397
  4073b8:	xchg   ecx,eax
  4073b9:	sbb    ebx,DWORD PTR [esp+esi*8-0x17]
  4073bd:	add    edx,DWORD PTR [eax]
  4073bf:	adc    al,0xb2
  4073c1:	xor    BYTE PTR [ecx-0x53],ch
  4073c4:	ja     0x407404
  4073c6:	mov    ds:0x591a7261,eax
  4073cb:	loopne 0x4073b2
  4073cd:	pop    ebx
  4073ce:	cmp    al,0xfd
  4073d0:	push   edx
  4073d1:	mov    bh,0x81
  4073d3:	sub    eax,0x1dd3f4e0
  4073d8:	jbe    0x407418
  4073da:	mov    WORD PTR [ebx-0x11],ds
  4073dd:	push   ss
  4073de:	inc    esi
  4073df:	cmp    bl,cl
  4073e1:	dec    ebp
  4073e2:	and    eax,0xdb9bf00b
  4073e7:	test   edi,0x7d83c028
  4073ed:	(bad)  [edi]
  4073ef:	mov    ebx,0xa8cd333b
  4073f4:	mov    ecx,0xce1d33bf
  4073f9:	and    al,0x4f
  4073fb:	or     al,0xd0
  4073fd:	mov    gs,WORD PTR [ebx+0x4633efea]
  407403:	jmp    0x40745b
  407405:	jne    0x4073ba
  407407:	out    dx,eax
  407408:	jb     0x407434
  40740a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40740c:	cmp    al,0xec
  40740e:	aas    
  40740f:	inc    ebx
  407410:	xor    al,BYTE PTR [ecx+ebp*2-0x36]
  407414:	shl    BYTE PTR [ecx],0xe5
  407417:	cmp    dl,BYTE PTR [ebx-0x75a3396d]
  40741d:	sti    
  40741e:	xchg   DWORD PTR [esi],edx
  407420:	adc    DWORD PTR [ecx+0x61d09eeb],esp
  407426:	mov    ch,0x72
  407428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407429:	jmp    0xbd2c9af5
  40742e:	ss pop esp
  407430:	test   DWORD PTR [edi-0x80],eax
  407433:	add    dl,al
  407435:	push   ecx
  407436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407437:	test   BYTE PTR [ebx],0xa4
  40743a:	fadd   QWORD PTR [esi+0x2d233a6e]
  407440:	adc    eax,0xc054c744
  407445:	mov    al,0x55
  407447:	pop    ecx
  407448:	pusha  
  407449:	add    BYTE PTR [eax],al
  40744b:	mov    ebp,0xe1996892
  407450:	ror    BYTE PTR [edx-0x6f],1
  407453:	and    DWORD PTR [eax-0x25b28928],ebp
  407459:	xchg   DWORD PTR [edx],ecx
  40745b:	jp     0x407469
  40745d:	add    DWORD PTR [ecx-0x6a],ebp
  407460:	jnp    0x40742b
  407462:	xlat   BYTE PTR ds:[ebx]
  407463:	out    dx,al
  407464:	xor    BYTE PTR ds:0xb9baa14,dl
  40746a:	gs ss jae 0x407485
  40746e:	sbb    bl,BYTE PTR [edx-0x41974b68]
  407474:	stc    
  407475:	in     al,dx
  407476:	mov    esp,0x1c4fb4be
  40747b:	jne    0x4074e7
  40747d:	xor    BYTE PTR [ecx-0x14],0xc3
  407481:	shr    ebx,cl
  407483:	ret    
  407484:	or     DWORD PTR [edi+0x45],esi
  407487:	pop    ds
  407488:	sbb    BYTE PTR [edi-0x2c0a1241],al
  40748e:	add    al,BYTE PTR [edi-0x7]
  407491:	pop    ecx
  407492:	(bad)  
  407493:	push   ds
  407494:	push   esi
  407495:	xchg   ebp,eax
  407496:	stos   DWORD PTR es:[edi],eax
  407497:	pop    es
  407498:	pop    es
  407499:	fs call 0xac5d:0xb42ceb6a
  4074a1:	cmp    dh,BYTE PTR [esi+edi*8+0x27c13527]
  4074a8:	ins    BYTE PTR es:[edi],dx
  4074a9:	inc    ebx
  4074aa:	push   ss
  4074ab:	cmp    DWORD PTR [edi],edx
  4074ad:	mov    eax,ds:0x42009d3b
  4074b2:	lea    edx,[ecx+0x25141d80]
  4074b8:	jae    0x407445
  4074ba:	mov    BYTE PTR [edi+0xa13a2f4],al
  4074c0:	jno    0x4074a6
  4074c2:	sub    ebp,ebp
  4074c4:	imul   DWORD PTR [eax+0x16aff389]
  4074ca:	adc    edi,ecx
  4074cc:	imul   esp,DWORD PTR [eax+esi*8],0xfc821b66
  4074d3:	pop    es
  4074d4:	push   0xffffffa8
  4074d6:	loopne 0x407510
  4074d8:	nop
  4074d9:	push   esi
  4074da:	add    esp,DWORD PTR [esi+0x45]
  4074dd:	jnp    0x4074ac
  4074df:	add    edx,DWORD PTR [esi-0x1d905390]
  4074e5:	mov    dl,BYTE PTR [ebx-0x33]
  4074e8:	outs   dx,DWORD PTR ds:[esi]
  4074e9:	and    BYTE PTR [esi],al
  4074eb:	mov    ds:0xc18f8379,al
  4074f0:	xchg   edi,eax
  4074f1:	sti    
  4074f2:	and    DWORD PTR [esi],ebp
  4074f4:	repnz sub bh,bh
  4074f7:	inc    eax
  4074f8:	sub    bh,ah
  4074fa:	(bad)  
  4074fb:	mov    ds:0xeeeeb7e9,al
  407500:	adc    ecx,DWORD PTR [ecx]
  407502:	add    eax,0x2a81cd93
  407507:	sbb    ebx,0x2440b937
  40750d:	mov    ds:0x519a1562,eax
  407512:	inc    esp
  407513:	adc    eax,0xa2f5a242
  407518:	sahf   
  407519:	xchg   ebp,eax
  40751a:	sub    BYTE PTR [esi+0x6b3dfd5a],dh
  407520:	mov    ds,WORD PTR [eax-0x6d]
  407523:	mov    cs,WORD PTR [eax]
  407525:	into   
  407526:	and    eax,0xd0762020
  40752b:	nop
  40752c:	test   eax,0x70dbcecb
  407531:	push   cs
  407532:	xchg   DWORD PTR [edx-0x556de6f4],eax
  407538:	inc    edi
  407539:	ja     0x4074c7
  40753b:	loope  0x407596
  40753d:	dec    ebp
  40753e:	rol    DWORD PTR [ecx],cl
  407540:	mov    cl,0x65
  407542:	sbb    ecx,esp
  407544:	xor    al,0x7a
  407546:	and    ch,BYTE PTR [ebx-0x1]
  407549:	push   0x14ea600f
  40754e:	jno    0x407562
  407550:	mov    bh,BYTE PTR [ecx-0x1d]
  407553:	stos   DWORD PTR es:[edi],eax
  407554:	jmp    0x4d47:0x99618e43
  40755b:	inc    esi
  40755c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40755d:	xchg   DWORD PTR [edi+0x52a7a494],eax
  407563:	inc    ecx
  407564:	fnstcw WORD PTR [esi-0x16cfc248]
  40756a:	pop    edx
  40756b:	add    DWORD PTR [edx-0x3816d21b],eax
  407571:	dec    eax
  407572:	push   ecx
  407573:	cmp    edx,DWORD PTR [edi+0x40]
  407576:	outs   dx,BYTE PTR ds:[esi]
  407577:	add    ecx,esp
  407579:	add    bl,ch
  40757b:	repnz mov edi,0xef3c721a
  407581:	or     cl,bh
  407583:	inc    eax
  407584:	imul   ebp,DWORD PTR [esi-0x71],0xaf17a2bc
  40758b:	sub    BYTE PTR ds:0xf6d355a4,cl
  407591:	sbb    DWORD PTR [eax-0x6d9869cf],ebx
  407597:	mov    edi,0xa1a95aa1
  40759c:	xchg   ecx,eax
  40759d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759e:	mov    eax,0xa8c2e974
  4075a3:	jne    0x4075bc
  4075a5:	xor    BYTE PTR [edx-0x1b9ffa2f],dl
  4075ab:	shl    BYTE PTR [ebp-0x6c454ad2],cl
  4075b1:	cmp    al,0x36
  4075b3:	icebp  
  4075b4:	in     eax,0xfa
  4075b6:	cmp    edx,edi
  4075b8:	adc    ecx,esi
  4075ba:	outs   dx,DWORD PTR ds:[esi]
  4075bb:	loop   0x40762c
  4075bd:	hlt    
  4075be:	outs   dx,BYTE PTR ds:[esi]
  4075bf:	sub    BYTE PTR [esi-0x2d],0xfc
  4075c3:	loope  0x407626
  4075c5:	jno    0x4075b7
  4075c7:	jl     0x4075c6
  4075c9:	jl     0x4075fe
  4075cb:	test   BYTE PTR [edi+0x1a],ah
  4075ce:	jg     0x4075dc
  4075d0:	cwde   
  4075d1:	mov    al,ds:0xda895647
  4075d6:	jg     0x407656
  4075d8:	(bad)  
  4075d9:	(bad)
  4075de:	pop    ss
  4075df:	aam    0x7a
  4075e1:	sahf   
  4075e2:	aaa    
  4075e3:	mov    edi,0xd07f15d1
  4075e8:	pop    esi
  4075e9:	and    al,0x33
  4075eb:	sahf   
  4075ec:	jge    0x4075f0
  4075ee:	call   0xb0a5cff3
  4075f3:	or     al,0x13
  4075f5:	into   
  4075f6:	jne    0x407653
  4075f8:	arpl   WORD PTR [ecx+0x5c],cx
  4075fb:	mov    eax,ds:0xadc87aee
  407600:	xchg   edi,eax
  407601:	push   cs
  407602:	cmp    eax,0x3c553ab0
  407607:	and    ebp,ebx
  407609:	sbb    ebp,esp
  40760b:	fnsave [eax+0x7]
  40760e:	pop    ds
  40760f:	xor    al,0xe
  407611:	mov    BYTE PTR ds:[ecx-0x2f820ed0],dl
  407618:	jne    0x4075d8
  40761a:	xchg   edx,eax
  40761b:	cmp    DWORD PTR [eax],esi
  40761d:	ins    DWORD PTR es:[edi],dx
  40761e:	not    DWORD PTR [edi-0x67a7f263]
  407624:	mov    bl,0xa1
  407626:	and    eax,DWORD PTR [ecx]
  407628:	pop    es
  407629:	jb     0x4075ab
  40762b:	xchg   DWORD PTR [esi+eiz*1+0x4b],esp
  40762f:	sti    
  407630:	pop    ebp
  407631:	out    0x4a,eax
  407633:	and    BYTE PTR [ecx-0x44],al
  407636:	ret    0x4e8f
  407639:	mov    ebx,0xd10aa9e4
  40763e:	xchg   esp,eax
  40763f:	pop    esi
  407640:	outs   dx,DWORD PTR ds:[esi]
  407641:	mov    ecx,0x55f8a705
  407646:	and    eax,ebp
  407648:	mov    ah,0x8f
  40764a:	frstor [eax-0x2dfc299]
  407650:	pushf  
  407651:	inc    eax
  407652:	push   esi
  407653:	dec    esi
  407654:	mov    DWORD PTR [edx+0x24],ebp
  407657:	cld    
  407658:	imul   edx,DWORD PTR [edi+0x34944a25],0x4c692b96
  407662:	sbb    DWORD PTR [edx],esi
  407664:	out    0x4,eax
  407666:	mov    dl,0xe4
  407668:	adc    bh,BYTE PTR [edx+0x77]
  40766b:	pop    edi
  40766c:	mov    ah,BYTE PTR [esp+edx*8+0x13b907ad]
  407673:	adc    ah,BYTE PTR [eax*2+0x51986e9c]
  40767a:	xor    ebx,DWORD PTR [eax+0x64]
  40767d:	and    eax,0xdc703621
  407682:	aam    0xf5
  407684:	loope  0x40764a
  407686:	push   edi
  407687:	gs mov al,0x20
  40768a:	adc    ch,0x78
  40768d:	pusha  
  40768e:	stos   DWORD PTR es:[edi],eax
  40768f:	lea    esp,[eax+0x3fa1611]
  407695:	xchg   ebp,eax
  407696:	ss push 0xffffffbf
  407699:	ja     0x4076a8
  40769b:	ret    
  40769c:	ss mov bl,0x89
  40769f:	mov    BYTE PTR [ebx+0x2d],bl
  4076a2:	xchg   BYTE PTR [eax],bh
  4076a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a5:	in     eax,0x24
  4076a7:	add    cl,BYTE PTR [ebp+0x5b]
  4076aa:	pop    ebx
  4076ab:	rcl    BYTE PTR [edx],0xe3
  4076ae:	or     ah,BYTE PTR [ebx-0x7d]
  4076b1:	adc    BYTE PTR [eax+0x75],0x21
  4076b5:	inc    edi
  4076b6:	pop    ebp
  4076b7:	inc    edx
  4076b8:	loopne 0x40768a
  4076ba:	xchg   ecx,eax
  4076bb:	jbe    0x40765a
  4076bd:	jmp    FWORD PTR [ebp-0x7a6cd348]
  4076c3:	add    dl,BYTE PTR [ebp-0x65]
  4076c6:	lods   eax,DWORD PTR ds:[esi]
  4076c7:	cmc    
  4076c8:	ror    DWORD PTR [edi+0x7],1
  4076cb:	ficom  WORD PTR [ebp+0x46bdeda8]
  4076d1:	stos   BYTE PTR es:[edi],al
  4076d2:	dec    edi
  4076d3:	mov    eax,ds:0xf320aac0
  4076d8:	fidivr DWORD PTR [ebp+0x6d]
  4076db:	cmp    BYTE PTR [eax],bl
  4076dd:	xchg   BYTE PTR [eax-0x46c75471],ah
  4076e3:	call   ecx
  4076e5:	sbb    BYTE PTR [ebp+eax*2-0x2d],ch
  4076e9:	inc    eax
  4076ea:	mov    ebx,0xbfcd1ec0
  4076ef:	imul   edx,DWORD PTR [esi],0xf37bdd63
  4076f5:	pop    esp
  4076f6:	adc    dh,BYTE PTR [ecx-0x6b]
  4076f9:	bound  ebp,QWORD PTR [edi+0x2a]
  4076fc:	nop
  4076fd:	lods   eax,DWORD PTR ds:[esi]
  4076fe:	push   ebx
  4076ff:	push   ss
  407700:	mov    dh,0x7
  407702:	lds    eax,FWORD PTR [ebp-0x6e]
  407705:	inc    edi
  407706:	jno    0x407719
  407708:	xchg   ecx,eax
  407709:	cmp    BYTE PTR [edi-0x2522d533],bl
  40770f:	jno    0x4076a7
  407711:	imul   ebx,DWORD PTR [ebp-0x13174376],0xffffff95
  407718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407719:	add    esp,ebx
  40771b:	mov    esp,0xa118359
  407720:	fs jae 0x4076fa
  407723:	aaa    
  407724:	ja     0x407736
  407726:	adc    cl,ch
  407728:	ret    
  407729:	in     al,dx
  40772a:	pop    esp
  40772b:	push   ss
  40772c:	push   edx
  40772d:	fwait
  40772e:	lock mov BYTE PTR [ebx+ecx*8+0x6],cl
  407733:	and    al,0x28
  407735:	je     0x407798
  407737:	rcl    esi,0xd3
  40773a:	(bad)  
  40773b:	mov    ah,0x5a
  40773d:	xor    eax,0x87a3f8b9
  407742:	je     0x407760
  407744:	out    0x70,eax
  407746:	xlat   BYTE PTR ds:[ebx]
  407747:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407749:	dec    edx
  40774a:	ins    DWORD PTR es:[edi],dx
  40774b:	sub    al,0x6e
  40774d:	push   esp
  40774e:	jp     0x4076f2
  407750:	mov    ebp,0xf8e58b97
  407755:	jg     0x4077cf
  407757:	adc    DWORD PTR [ebx+0x35c6fc1e],esp
  40775d:	mov    al,0x71
  40775f:	movaps xmm3,XMMWORD PTR [ecx]
  407762:	xchg   ecx,eax
  407763:	sub    DWORD PTR ds:0xb2c02b3c,eax
  407769:	mov    al,0x3d
  40776b:	sbb    ch,BYTE PTR [ebx]
  40776d:	lods   eax,DWORD PTR ds:[esi]
  40776e:	jns    0x407726
  407770:	push   esp
  407771:	loope  0x4077e8
  407773:	xchg   esi,eax
  407774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407775:	inc    ecx
  407776:	sahf   
  407777:	repnz xchg esi,esi
  40777a:	div    DWORD PTR [ebx+0x47]
  40777d:	adc    esp,DWORD PTR [edx+0x43]
  407780:	xor    dl,ah
  407782:	add    bh,BYTE PTR [edi-0x25]
  407785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407786:	test   DWORD PTR [eax-0x16feacd],ebp
  40778c:	dec    eax
  40778d:	and    dh,bl
  40778f:	dec    ebx
  407790:	or     edi,0xdf56567
  407796:	jmp    0x3d2a:0x81169778
  40779d:	aad    0xb3
  40779f:	pop    ebp
  4077a0:	loope  0x4077ce
  4077a2:	into   
  4077a3:	mov    bh,0xa4
  4077a5:	sar    DWORD PTR [edx+edi*1],0x9a
  4077a9:	sbb    eax,0xe3428c19
  4077ae:	mov    ebp,0xc1f5bcfd
  4077b3:	jge    0x407818
  4077b5:	sbb    eax,DWORD PTR [ebx]
  4077b7:	or     eax,DWORD PTR [eax+0x56]
  4077ba:	dec    edx
  4077bb:	mov    ebp,0x6defbc2
  4077c0:	popa   
  4077c1:	aam    0x64
  4077c3:	push   eax
  4077c4:	rcr    BYTE PTR [edi-0x5ff7a5c2],cl
  4077ca:	sub    bh,0xe
  4077cd:	cmp    edi,DWORD PTR [ebx-0x69c5813f]
  4077d3:	aaa    
  4077d4:	sti    
  4077d5:	jns    0x4077a3
  4077d7:	fisttp QWORD PTR [ecx+0x4bd9cb0d]
  4077dd:	dec    ebx
  4077de:	das    
  4077df:	xchg   BYTE PTR gs:[esi-0x5e],dh
  4077e3:	push   es
  4077e4:	cli    
  4077e5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4077e7:	mov    bh,0xce
  4077e9:	gs jo  0x40778f
  4077ec:	jno    0x4077c1
  4077ee:	xor    al,0x47
  4077f0:	bndstx [esi],bnd3
  4077f3:	mov    bl,0xf0
  4077f5:	mov    ds:0xaadd6e1d,al
  4077fa:	sbb    eax,0x8c124faf
  4077ff:	(bad)  
  407800:	icebp  
  407801:	pop    ds
  407802:	pop    esi
  407803:	sahf   
  407804:	popf   
  407805:	enter  0xdae4,0x7d
  407809:	mov    edx,0x2192f762
  40780e:	ficom  DWORD PTR [ecx+0x5cd412e2]
  407814:	neg    BYTE PTR ds:[ebx]
  407817:	xchg   DWORD PTR [ecx],ebx
  407819:	sub    esp,edx
  40781b:	jg     0x407864
  40781d:	lods   al,BYTE PTR ds:[esi]
  40781e:	nop
  40781f:	rcr    DWORD PTR [edi-0x39bf7a37],0xa0
  407826:	mov    ds:0xd0888883,al
  40782b:	mov    edx,0x46300bd4
  407830:	xchg   BYTE PTR [edx],ch
  407832:	addr16 inc esp
  407834:	aas    
  407835:	loop   0x4078a6
  407837:	mov    esi,eax
  407839:	inc    ebp
  40783a:	xor    edi,DWORD PTR [ebx+eiz*8-0x13]
  40783e:	or     DWORD PTR [esi+0x43],eax
  407841:	jmp    0x4077ee
  407843:	sti    
  407844:	das    
  407845:	mov    edx,0x46fc3b11
  40784a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40784b:	mov    cl,0x92
  40784d:	sbb    BYTE PTR [eax+0x28a997ec],dh
  407853:	xchg   edx,eax
  407854:	jbe    0x4078c0
  407856:	mov    al,0x43
  407858:	or     DWORD PTR [edi],eax
  40785a:	out    0x71,al
  40785c:	dec    edi
  40785d:	in     al,dx
  40785e:	sub    bl,0x77
  407861:	mov    edx,0xd44253ef
  407866:	adc    al,0x2a
  407868:	pop    esi
  407869:	xchg   bh,bh
  40786b:	retf   0xe42c
  40786e:	ror    BYTE PTR [ecx+0xba20caf],1
  407874:	mov    edi,0x3ec78568
  407879:	add    eax,0x4cb55ce9
  40787e:	in     eax,0xdf
  407880:	leave  
  407881:	fneni(8087 only) 
  407883:	lods   eax,DWORD PTR ds:[esi]
  407884:	hlt    
  407885:	inc    ebx
  407886:	in     eax,0xea
  407888:	fild   DWORD PTR [edi-0x7bba34b1]
  40788e:	scas   al,BYTE PTR es:[edi]
  40788f:	das    
  407890:	fdiv   DWORD PTR [eax+ebx*4-0x4f]
  407894:	mov    esi,0x36e1e7ed
  407899:	push   ds
  40789a:	std    
  40789b:	dec    ebp
  40789c:	ds add dl,bl
  40789f:	adc    al,BYTE PTR [edi-0x6f]
  4078a2:	fdivr  QWORD PTR [edi+ebx*1-0x717c29b9]
  4078a9:	scas   eax,DWORD PTR es:[edi]
  4078aa:	sub    al,0x3c
  4078ac:	into   
  4078ad:	bound  esi,QWORD PTR [ebx+esi*2-0x19991142]
  4078b4:	add    BYTE PTR [ecx+0x5a53aa8a],ch
  4078ba:	cmp    eax,DWORD PTR [ecx-0x336a9b18]
  4078c0:	mov    ds:0xc98d68b6,eax
  4078c5:	add    al,0xab
  4078c7:	btr    esp,ebp
  4078ca:	popa   
  4078cb:	in     eax,dx
  4078cc:	ret    
  4078cd:	xchg   BYTE PTR [edx-0x26f82d91],bl
  4078d3:	test   al,0xf9
  4078d5:	push   esi
  4078d6:	jl     0x40786e
  4078d8:	sbb    dl,bl
  4078da:	xlat   BYTE PTR ds:[ebx]
  4078db:	in     al,dx
  4078dc:	xor    ebx,DWORD PTR [edi-0x1fde47b4]
  4078e2:	sub    al,BYTE PTR ds:[edx+ebx*8+0x78fb4465]
  4078ea:	inc    esi
  4078eb:	mov    esi,0x43e069da
  4078f0:	repz mov al,0x85
  4078f3:	sbb    DWORD PTR [ebp-0x166ad326],edi
  4078f9:	xchg   DWORD PTR [ebx],ebx
  4078fb:	dec    esp
  4078fc:	push   0xfffffffb
  4078fe:	jmp    0x40790a
  407900:	rcl    BYTE PTR es:[edi-0x4dc7f2a4],0xb4
  407908:	jnp    0x4078f1
  40790a:	inc    esp
  40790b:	mov    esp,0x8873ea
  407910:	or     eax,0x5cae04f
  407915:	fadd   DWORD PTR [edi]
  407917:	xor    eax,DWORD PTR [edi-0x48acf516]
  40791d:	scas   al,BYTE PTR es:[edi]
  40791e:	mov    ebx,0xa40d46c7
  407923:	xchg   ecx,eax
  407924:	popa   
  407925:	ret    
  407926:	scas   al,BYTE PTR es:[edi]
  407927:	mov    ah,ah
  407929:	or     al,0x1c
  40792b:	mov    dl,BYTE PTR [ebx-0x5ca87747]
  407931:	or     edx,DWORD PTR [ecx]
  407933:	std    
  407934:	add    edi,ebx
  407936:	cmc    
  407937:	arpl   WORD PTR [edx],ax
  407939:	sub    al,0xd8
  40793c:	repnz inc esp
  40793e:	pusha  
  40793f:	xor    DWORD PTR [esi-0x1ab64f18],ebx
  407945:	sub    eax,0xde259c34
  40794a:	sub    BYTE PTR [ebx],dl
  40794c:	popa   
  40794d:	adc    DWORD PTR [esi+0x52],edx
  407950:	mov    ebx,0x89f838b
  407955:	xlat   BYTE PTR ds:[ebx]
  407956:	scas   al,BYTE PTR es:[edi]
  407957:	lods   al,BYTE PTR ds:[esi]
  407958:	inc    ebx
  407959:	int3   
  40795a:	mov    eax,0x2d280db6
  40795f:	sub    DWORD PTR [edx+0x2a970192],0x6fd83427
  407969:	pop    ecx
  40796a:	or     al,0x22
  40796c:	lea    ebp,[ebp+0x27eceb5e]
  407972:	not    DWORD PTR [eax+0x77fdd8ac]
  407978:	inc    esi
  407979:	adc    al,0xbe
  40797b:	in     eax,0x75
  40797d:	pop    ds
  40797e:	pop    es
  40797f:	in     al,0xfa
  407981:	mov    esp,0x367dddce
  407986:	mov    esp,0x20a50eee
  40798b:	not    BYTE PTR [ebp+0x7d027c84]
  407991:	sub    DWORD PTR [edx+0x6],edx
  407994:	mov    dl,0x4d
  407996:	into   
  407997:	shr    esi,cl
  407999:	jno    0x407a15
  40799b:	stos   BYTE PTR es:[edi],al
  40799c:	mov    ebp,0x4e2fd887
  4079a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a2:	add    DWORD PTR [esi+eiz*2-0x32],edi
  4079a6:	sub    dl,BYTE PTR [ebx-0x68]
  4079a9:	sbb    DWORD PTR [ecx],ebx
  4079ab:	mov    esi,0xf58012ce
  4079b0:	adc    DWORD PTR [edi],eax
  4079b2:	mov    bl,0x78
  4079b4:	loope  0x4079b2
  4079b6:	clc    
  4079b7:	in     al,dx
  4079b8:	int    0xbe
  4079ba:	mov    al,0x39
  4079bc:	test   al,0x3e
  4079be:	mov    al,0x77
  4079c0:	mov    ds:0x8475f1b,eax
  4079c5:	mov    ecx,0x4bf11a94
  4079ca:	and    edi,DWORD PTR [edx-0x32]
  4079cd:	loopne 0x4079f8
  4079cf:	push   0xc0f8e2b
  4079d4:	inc    ebp
  4079d5:	call   0xa55a:0x2a1caba4
  4079dc:	popa   
  4079dd:	pop    edx
  4079de:	shl    dl,cl
  4079e0:	in     al,dx
  4079e1:	shl    BYTE PTR [eax+0x7e193211],cl
  4079e7:	pop    edx
  4079e8:	cli    
  4079e9:	xor    al,0x23
  4079eb:	pop    esp
  4079ec:	add    al,0xa3
  4079ee:	and    eax,0x3781a47c
  4079f3:	mov    dh,0xc7
  4079f5:	xchg   ebx,eax
  4079f6:	test   eax,0x4ac055b4
  4079fb:	xor    BYTE PTR [ebp-0x58],dl
  4079fe:	xor    eax,0x4dfc103
  407a03:	adc    ecx,edx
  407a05:	jl     0x4079ab
  407a07:	mov    edx,0x98165af4
  407a0c:	rcl    BYTE PTR [ebx+0x5a59a269],1
  407a12:	call   0x6ff16b3d
  407a17:	ins    BYTE PTR es:[edi],dx
  407a18:	int3   
  407a19:	daa    
  407a1a:	and    eax,0x82c1f942
  407a1f:	cli    
  407a20:	jae    0x4079fd
  407a22:	outs   dx,BYTE PTR ds:[esi]
  407a23:	outs   dx,DWORD PTR ds:[esi]
  407a24:	scas   al,BYTE PTR es:[edi]
  407a25:	mov    al,ds:0xcce78401
  407a2a:	mov    dl,0xe3
  407a2c:	je     0x407a58
  407a2e:	inc    ecx
  407a2f:	dec    edx
  407a30:	jg     0x4079b7
  407a32:	mov    cl,0x8b
  407a34:	jmp    0xb9ba57b2
  407a39:	call   0x44c8:0xf2558752
  407a40:	jge    0x407a8a
  407a42:	fisubr WORD PTR [eax+0x51]
  407a45:	dec    eax
  407a46:	sti    
  407a47:	mov    esi,DWORD PTR [edi+0x8818f8e]
  407a4d:	ror    DWORD PTR [esi],1
  407a4f:	cmovne eax,esi
  407a52:	mov    edi,0x2423411c
  407a57:	adc    esp,DWORD PTR [ebx]
  407a59:	mov    ecx,0xb3de740d
  407a5e:	dec    ebp
  407a5f:	lods   eax,DWORD PTR ds:[esi]
  407a60:	mov    esi,0x1a42ebc0
  407a65:	out    0xf5,al
  407a67:	xchg   BYTE PTR [ebp+eiz*8-0x2730eeb0],cl
  407a6e:	pushf  
  407a6f:	mul    BYTE PTR [ebx-0xd]
  407a72:	dec    ebx
  407a73:	cmp    al,BYTE PTR [esp]
  407a76:	fwait
  407a77:	out    dx,al
  407a78:	std    
  407a79:	mov    al,0x82
  407a7b:	stc    
  407a7c:	push   ebp
  407a7d:	xchg   edi,eax
  407a7e:	mov    esi,DWORD PTR [ebp-0x45a45372]
  407a84:	dec    edi
  407a85:	pusha  
  407a86:	lods   eax,DWORD PTR ds:[esi]
  407a87:	rcl    bl,cl
  407a89:	jb     0x407ad5
  407a8b:	jo     0x407afc
  407a8d:	and    esi,esp
  407a8f:	mov    DWORD PTR [ebx],ebx
  407a91:	ficomp WORD PTR [eax+0x119ccd73]
  407a97:	mov    cl,0xb4
  407a99:	cld    
  407a9a:	cs inc edi
  407a9c:	pop    eax
  407a9d:	addr16 iret 
  407a9f:	rol    DWORD PTR [ebp+0x2],0xf
  407aa3:	hlt    
  407aa4:	fiadd  DWORD PTR [esp+eax*2]
  407aa7:	rcr    DWORD PTR [eax],1
  407aa9:	(bad)  
  407aaa:	imul   ecx,DWORD PTR [ebx-0x6e],0x190354cb
  407ab1:	push   eax
  407ab2:	xor    al,0x69
  407ab4:	cmp    al,0xf4
  407ab6:	ja     0x407a9b
  407ab8:	pop    ss
  407ab9:	pop    ecx
  407aba:	mov    edx,0x4e2aa945
  407abf:	xchg   edx,eax
  407ac0:	enter  0xb5d9,0xc9
  407ac4:	test   al,0x48
  407ac6:	icebp  
  407ac7:	rcl    BYTE PTR [eax],cl
  407ac9:	xchg   ebp,eax
  407aca:	test   eax,0x3cc3e993
  407acf:	and    al,0xc6
  407ad1:	add    bh,BYTE PTR [eax]
  407ad3:	mov    edi,0x7ac1932c
  407ad8:	js     0x407ad1
  407ada:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407adc:	scas   eax,DWORD PTR es:[edi]
  407add:	mov    al,0x1a
  407adf:	or     al,0x99
  407ae1:	test   eax,0xfb8f6173
  407ae6:	dec    ecx
  407ae7:	sub    esi,DWORD PTR [edi-0x70]
  407aea:	fnstsw WORD PTR [ecx+ebx*4+0x6b]
  407aee:	lea    ebp,[edx]
  407af0:	cmp    eax,DWORD PTR ds:0x55c27e3
  407af6:	mov    BYTE PTR [edx+edi*8-0x1a],dh
  407afa:	xabort 0x58
  407afd:	mov    dh,0x71
  407aff:	out    0x98,al
  407b01:	jmp    0x38728e04
  407b06:	add    bl,BYTE PTR [edi+0x5c]
  407b09:	leave  
  407b0a:	(bad)  
  407b0b:	push   edi
  407b0c:	mov    al,0xed
  407b0e:	cmc    
  407b0f:	lods   al,BYTE PTR ds:[esi]
  407b10:	mov    eax,0x26d598d6
  407b15:	jmp    DWORD PTR [esi+eax*2-0x68d62989]
  407b1c:	retf   
  407b1d:	cs js  0x407b0b
  407b20:	dec    edi
  407b21:	mov    edi,0x2ea75cee
  407b26:	lods   al,BYTE PTR ds:[esi]
  407b27:	add    eax,0x66
  407b2a:	push   esp
  407b2b:	ss adc edx,edi
  407b2e:	into   
  407b2f:	dec    edi
  407b30:	lds    ebx,FWORD PTR [edx]
  407b32:	fisubr DWORD PTR [esp+eiz*4+0x7e91c88b]
  407b39:	cli    
  407b3a:	pop    ds
  407b3b:	push   cs
  407b3c:	lock aam 0x12
  407b3f:	lock lods al,BYTE PTR ds:[esi]
  407b41:	loopne 0x407adc
  407b43:	bound  edx,QWORD PTR ds:0xbf4def0f
  407b49:	outs   dx,BYTE PTR ds:[esi]
  407b4a:	jmp    0x407b71
  407b4c:	out    0x47,eax
  407b4e:	inc    edi
  407b4f:	lea    edx,[esi+ebp*2-0x7eb41e6b]
  407b56:	shl    BYTE PTR [esi+edx*4],cl
  407b59:	aam    0xa6
  407b5b:	jge    0x407bc8
  407b5d:	jmp    0x407b83
  407b5f:	bound  ebx,QWORD PTR [edi-0x600b2a4d]
  407b65:	rcl    bh,0xec
  407b68:	(bad)  
  407b6a:	ds dec eax
  407b6c:	ds xchg edx,eax
  407b6e:	pop    ss
  407b6f:	push   cs
  407b70:	mov    ecx,DWORD PTR [edi-0x5e]
  407b73:	je     0x407b9f
  407b75:	and    bl,BYTE PTR [eax+0x6d]
  407b78:	leave  
  407b79:	sub    cl,ch
  407b7b:	ss mov esp,0xceb1e581
  407b81:	gs or  eax,ecx
  407b84:	mov    BYTE PTR [edx-0x1827a128],al
  407b8a:	popa   
  407b8b:	popa   
  407b8c:	out    dx,eax
  407b8d:	into   
  407b8e:	pop    ss
  407b8f:	sbb    eax,0x4c93b297
  407b94:	sbb    al,0xfd
  407b96:	mov    cl,BYTE PTR [edi]
  407b98:	or     DWORD PTR [eax-0x11],esp
  407b9b:	out    0xef,eax
  407b9d:	or     DWORD PTR [esi+ebp*1+0x20],edi
  407ba1:	inc    ecx
  407ba2:	(bad)  
  407ba3:	ror    DWORD PTR [edi-0x4b],cl
  407ba6:	sub    eax,0xddb7e90e
  407bab:	cmp    eax,0xe0a36208
  407bb0:	scas   al,BYTE PTR es:[edi]
  407bb1:	pop    edx
  407bb2:	and    al,0xc0
  407bb4:	cmp    DWORD PTR [ebx-0x5798fa12],ebp
  407bba:	popa   
  407bbb:	addr16 lock dec esp
  407bbe:	fsub   QWORD PTR [esi]
  407bc0:	(bad)  
  407bc1:	xchg   esi,eax
  407bc2:	std    
  407bc3:	das    
  407bc4:	xchg   ebx,eax
  407bc5:	in     eax,0x12
  407bc7:	adc    eax,ebp
  407bc9:	jle    0x407b4d
  407bcb:	stos   BYTE PTR es:[edi],al
  407bcc:	mov    dl,0xc8
  407bce:	xchg   ecx,eax
  407bcf:	mov    BYTE PTR [edi-0x629a67ef],cl
  407bd5:	xor    DWORD PTR [edi],0xffffffc5
  407bd8:	das    
  407bd9:	push   eax
  407bda:	or     ebx,ebx
  407bdc:	imul   ecx,DWORD PTR [ebp-0xb],0x96d2dcb2
  407be3:	jmp    0x407b88
  407be5:	push   ss
  407be6:	inc    ecx
  407be7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407be9:	jge    0x407c17
  407beb:	loopne 0x407b90
  407bed:	sub    al,BYTE PTR [esi+0x54]
  407bf0:	js     0x407bb3
  407bf2:	push   eax
  407bf3:	pop    ebx
  407bf4:	xchg   ebp,eax
  407bf5:	add    DWORD PTR [ecx+ebx*8-0x1c],ebp
  407bf9:	arpl   WORD PTR ds:0xd4c6eae9,dx
  407bff:	or     BYTE PTR [edi-0x72],0x53
  407c03:	fidivr WORD PTR [esi-0xd]
  407c06:	in     al,dx
  407c07:	stos   DWORD PTR es:[edi],eax
  407c08:	addr16 dec ebp
  407c0a:	mov    cl,0x92
  407c0c:	daa    
  407c0d:	push   cs
  407c0e:	cmc    
  407c0f:	mov    WORD PTR [edi-0x7f204f10],?
  407c15:	mov    DWORD PTR [ebx-0x23],0xa2cf5df8
  407c1c:	imul   ecx,DWORD PTR [ebx+0x31],0x3e
  407c20:	fabs   
  407c22:	and    DWORD PTR [eax],eax
  407c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c25:	out    0xb3,al
  407c27:	push   esp
  407c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c2a:	into   
  407c2b:	scas   al,BYTE PTR es:[edi]
  407c2c:	popf   
  407c2d:	push   edi
  407c2e:	sub    al,0x9f
  407c30:	mov    WORD PTR [edi+0x4f],ds
  407c33:	enter  0x7c84,0xc2
  407c37:	addr16 adc eax,0xa24ab056
  407c3d:	aad    0xcc
  407c3f:	ret    0x3d7
  407c42:	cli    
  407c43:	mov    ah,0x79
  407c45:	inc    BYTE PTR [esi]
  407c47:	add    eax,0x1c6195cc
  407c4c:	xor    BYTE PTR [ebx],bh
  407c4e:	stos   DWORD PTR es:[edi],eax
  407c4f:	ins    BYTE PTR es:[edi],dx
  407c50:	out    0xd5,eax
  407c52:	mov    dh,0xf7
  407c54:	jge    0x407c94
  407c56:	ret    
  407c57:	in     al,0xaa
  407c59:	(bad)  
  407c5a:	int3   
  407c5b:	in     al,dx
  407c5c:	add    eax,0x8c74392a
  407c61:	enter  0x53a7,0x17
  407c65:	xor    dl,bh
  407c67:	or     eax,0x23e6c692
  407c6c:	mov    ebp,0x2b1f4797
  407c71:	(bad)  
  407c72:	mov    cl,0xf2
  407c74:	test   eax,0x52c32f25
  407c79:	ss sub ebx,eax
  407c7c:	sar    BYTE PTR [ecx],cl
  407c7e:	sub    DWORD PTR [ebx],ecx
  407c80:	push   esi
  407c81:	mov    ebx,0x2852b49a
  407c86:	pop    ds
  407c87:	add    ebx,0x5c07c101
  407c8d:	lods   eax,DWORD PTR ds:[esi]
  407c8e:	imul   esp,esi,0x22540bf9
  407c94:	cmc    
  407c95:	sub    eax,0x25e6a456
  407c9a:	sbb    cl,bh
  407c9c:	push   es
  407c9d:	pusha  
  407c9e:	pop    edx
  407c9f:	xchg   esi,eax
  407ca0:	das    
  407ca1:	stos   BYTE PTR es:[edi],al
  407ca2:	aaa    
  407ca3:	sbb    eax,0x9d6bee58
  407ca8:	inc    ebx
  407ca9:	mov    ah,0xef
  407cab:	pop    esp
  407cac:	jnp    0x407cdb
  407cae:	adc    al,ch
  407cb0:	cmc    
  407cb1:	pop    ecx
  407cb2:	in     eax,dx
  407cb3:	int    0x7e
  407cb5:	jne    0x407c44
  407cb7:	cmp    cl,BYTE PTR [edx+0x3c]
  407cba:	jl     0x407c75
  407cbc:	mov    esp,0x76d7c9c
  407cc1:	bound  edi,QWORD PTR [eax+0x6109cc45]
  407cc7:	mov    WORD PTR [ebp+0x36],cs
  407cca:	mov    eax,ds:0x39b78884
  407ccf:	dec    esi
  407cd0:	lock cwde 
  407cd2:	sbb    DWORD PTR [ebp+ecx*4+0xcf50109],eax
  407cd9:	out    0xe4,eax
  407cdb:	sbb    ah,BYTE PTR [eax-0x638906ae]
  407ce1:	ret    0x12a8
  407ce4:	das    
  407ce5:	ficom  WORD PTR [ebx]
  407ce7:	into   
  407ce8:	and    al,0x89
  407cea:	push   esi
  407ceb:	mov    ebx,0x9d5b22a1
  407cf0:	aaa    
  407cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf2:	mov    ebx,ebp
  407cf4:	jp     0x407d4c
  407cf6:	mov    ah,0x2a
  407cf8:	sti    
  407cf9:	jno    0x407d60
  407cfb:	push   ss
  407cfc:	aas    
  407cfd:	jns    0x407cde
  407cff:	jl     0x407cbf
  407d01:	lods   al,BYTE PTR ds:[esi]
  407d02:	add    BYTE PTR [ebx+0x106bcb00],cl
  407d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d09:	or     ebx,DWORD PTR [ebx+eax*1-0x43cb7b55]
  407d10:	inc    esi
  407d11:	sub    bh,BYTE PTR [ecx+edi*8+0x79]
  407d15:	in     al,0x7b
  407d17:	mov    eax,DWORD PTR [edi-0x67]
  407d1a:	outs   dx,BYTE PTR ds:[esi]
  407d1b:	cmc    
  407d1c:	cmp    DWORD PTR [eax+0x15],edx
  407d1f:	lahf   
  407d20:	cdq    
  407d21:	inc    edx
  407d22:	fmul   st(5),st
  407d24:	inc    esi
  407d25:	and    DWORD PTR [ecx-0x117071a3],eax
  407d2b:	out    dx,eax
  407d2c:	int3   
  407d2d:	pusha  
  407d2e:	inc    ecx
  407d2f:	push   es
  407d30:	inc    ebx
  407d31:	(bad)  
  407d32:	jecxz  0x407cc7
  407d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d35:	into   
  407d36:	rcl    BYTE PTR [edi-0x39b89b6d],cl
  407d3c:	sbb    BYTE PTR [eax],dh
  407d3e:	adc    BYTE PTR [eax+0x19],cl
  407d41:	push   esp
  407d42:	pusha  
  407d43:	cld    
  407d44:	imul   esp,DWORD PTR [eax+ebp*4-0x5d],0x28
  407d49:	pop    edx
  407d4a:	stc    
  407d4b:	mov    ds:0xf4f06db9,eax
  407d50:	inc    ecx
  407d51:	int    0x38
  407d53:	enter  0x56bc,0x78
  407d57:	pop    eax
  407d58:	fdivr  DWORD PTR [ecx]
  407d5a:	div    BYTE PTR es:[eax+0x7c7ece54]
  407d61:	add    al,0xaa
  407d63:	inc    eax
  407d64:	or     ebp,DWORD PTR fs:[esi]
  407d67:	and    al,BYTE PTR [edi+0x7a]
  407d6a:	jne    0x407d45
  407d6c:	mov    esp,0xbb695d4e
  407d71:	dec    edi
  407d72:	test   DWORD PTR [edi-0x6630b3b3],ebp
  407d78:	jle    0x407df9
  407d7a:	xor    bh,BYTE PTR [esi]
  407d7c:	ret    0xe389
  407d7f:	pop    ss
  407d80:	push   es
  407d81:	push   edx
  407d82:	inc    ebp
  407d83:	push   ebx
  407d85:	adc    DWORD PTR [eax+0x6c],ebx
  407d88:	xor    eax,0x9aebec4d
  407d8d:	pop    esp
  407d8e:	xor    eax,0x901030bc
  407d93:	inc    ecx
  407d94:	push   0xffffffdd
  407d96:	arpl   WORD PTR [eax],bx
  407d98:	out    dx,eax
  407d99:	mov    al,ds:0xa2133c92
  407d9e:	sbb    ebp,esp
  407da0:	and    bh,BYTE PTR [edx-0x7b]
  407da3:	test   esp,edi
  407da5:	push   cs
  407da6:	lock and DWORD PTR [esi-0xd],edx
  407daa:	fcom   st(3)
  407dac:	outs   dx,BYTE PTR ds:[esi]
  407dad:	mov    ebp,0x6486fb3a
  407db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db3:	pop    edi
  407db4:	pop    ecx
  407db5:	(bad)  
  407db6:	mov    eax,cs
  407db8:	out    dx,al
  407db9:	retf   0x8b4e
  407dbc:	pop    ecx
  407dbd:	sbb    eax,0x72d6efe3
  407dc2:	mov    bh,0xa0
  407dc4:	sbb    eax,0x2e6699bc
  407dc9:	xchg   edi,eax
  407dca:	jp     0x407d64
  407dcc:	test   eax,0xfb6a6544
  407dd1:	and    eax,0xae390edf
  407dd6:	fsubr  QWORD PTR [ebp+0x7]
  407dd9:	rcl    DWORD PTR [edx],0x3f
  407ddc:	add    BYTE PTR [ebx+0x7c],ah
  407ddf:	cwde   
  407de0:	div    BYTE PTR [edi-0x55847d49]
  407de6:	or     al,0xc3
  407de8:	push   0x60
  407dea:	xchg   esp,eax
  407deb:	psllq  mm7,QWORD PTR [edi+0x4e]
  407def:	dec    edi
  407df0:	mov    ecx,0xcf3f1db7
  407df5:	lahf   
  407df6:	push   edi
  407df7:	sar    eax,1
  407df9:	ror    ecx,cl
  407dfb:	rcr    DWORD PTR [ebx+0x4821dd1e],0xfc
  407e02:	cmp    al,0x21
  407e04:	cmp    esi,DWORD PTR [ebx+eiz*1+0x2f4098c0]
  407e0b:	push   eax
  407e0c:	mov    bh,BYTE PTR ds:[edx+0x757806a7]
  407e13:	ja     0x407def
  407e15:	pop    esi
  407e16:	xchg   esp,eax
  407e17:	test   eax,0x1b957c60
  407e1c:	cs in  eax,dx
  407e1e:	test   DWORD PTR [eax+edx*4],ebx
  407e21:	leave  
  407e22:	sbb    al,0x21
  407e24:	inc    ebx
  407e25:	repnz mov dl,0xb7
  407e28:	enter  0x4302,0x40
  407e2c:	xchg   esp,eax
  407e2d:	daa    
  407e2e:	call   0xf5f4:0x2c45be8f
  407e35:	cwde   
  407e36:	aad    0xae
  407e38:	or     DWORD PTR [ebp-0x2862f1a9],edi
  407e3e:	retf   
  407e3f:	sub    BYTE PTR [ebp+0x667dfd4d],dh
  407e45:	jmp    0x2947:0xe36db92c
  407e4c:	pop    fs
  407e4e:	xor    edi,edx
  407e50:	adc    eax,0x7354dfdd
  407e55:	xchg   al,cl
  407e57:	xchg   DWORD PTR [esp+eax*8],ebp
  407e5a:	pop    esp
  407e5b:	adc    DWORD PTR [eax+0x63],edi
  407e5e:	es call 0x9193:0x1402f7bf
  407e66:	cmp    DWORD PTR [esp+0x6550b94d],0xc7ced4af
  407e71:	out    0xac,al
  407e73:	push   esp
  407e74:	push   eax
  407e75:	xchg   esp,eax
  407e76:	xchg   edx,eax
  407e77:	xor    dl,ch
  407e79:	scas   eax,DWORD PTR es:[edi]
  407e7a:	test   al,0xbe
  407e7c:	dec    ecx
  407e7d:	or     al,BYTE PTR [edx+0x6833d786]
  407e83:	inc    ecx
  407e84:	xor    eax,0x6984f465
  407e89:	push   edi
  407e8a:	ret    
  407e8b:	sbb    dh,BYTE PTR [eax-0xf]
  407e8e:	or     al,0xa8
  407e90:	pop    ss
  407e91:	xor    bh,BYTE PTR ds:0x79e541ef
  407e97:	adc    ecx,eax
  407e99:	fsub   DWORD PTR [ecx-0x4cb03694]
  407e9f:	mov    edx,0xdba28f23
  407ea4:	pop    ebx
  407ea5:	ja     0x407e49
  407ea7:	shl    BYTE PTR [edx+0x0],1
  407eaa:	adc    dl,BYTE PTR cs:0x5cdf056b
  407eb1:	fisubr WORD PTR [edi]
  407eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eb4:	push   es
  407eb5:	xchg   ebx,eax
  407eb6:	or     ebx,ebx
  407eb8:	add    al,0x59
  407eba:	shl    cl,0xd2
  407ebd:	mov    edx,0xa2829c24
  407ec2:	pop    ecx
  407ec3:	je     0x407ee3
  407ec5:	ficom  WORD PTR ds:0x5c274423
  407ecb:	push   cs
  407ecc:	mov    esi,0xdb8a581a
  407ed1:	dec    eax
  407ed2:	mov    ecx,0xb87407cf
  407ed7:	sar    BYTE PTR [ecx-0x2252c40a],0xd7
  407ede:	lods   eax,DWORD PTR ds:[esi]
  407edf:	add    BYTE PTR [edx-0x1f],0x62
  407ee3:	cld    
  407ee4:	cmp    edx,DWORD PTR [esi]
  407ee6:	mov    cl,BYTE PTR [esp+edx*2+0x5e]
  407eea:	ficom  WORD PTR [ebp-0x6260d3b]
  407ef0:	stos   BYTE PTR es:[edi],al
  407ef1:	pop    ecx
  407ef2:	add    bl,dl
  407ef4:	mov    esi,0xb30a3011
  407ef9:	aaa    
  407efa:	adc    al,0x9a
  407efc:	leave  
  407efd:	iret   
  407efe:	inc    edi
  407eff:	jne    0x407f09
  407f01:	adc    al,0x9d
  407f03:	clc    
  407f04:	mov    ecx,0x97a0fb80
  407f09:	adc    ebp,DWORD PTR [edi+0x19]
  407f0c:	xor    al,0xb9
  407f0e:	pop    ecx
  407f0f:	or     DWORD PTR [edx-0x65],eax
  407f12:	lods   al,BYTE PTR ds:[esi]
  407f13:	mov    ecx,0x1958de65
  407f18:	cmc    
  407f19:	xchg   ebx,eax
  407f1a:	jae    0x407edf
  407f1c:	push   esi
  407f1d:	gs (bad) 
  407f1f:	push   esp
  407f20:	ret    0x906a
  407f23:	sti    
  407f24:	scas   eax,DWORD PTR es:[edi]
  407f25:	or     ch,dh
  407f27:	es (bad) 
  407f29:	dec    BYTE PTR [eax-0x12c6d8e5]
  407f2f:	jmp    0x407f74
  407f31:	adc    ecx,DWORD PTR [eax]
  407f33:	cmp    ebp,esi
  407f35:	ret    0xaa9a
  407f38:	popa   
  407f39:	inc    edi
  407f3a:	and    BYTE PTR [esi],bh
  407f3c:	out    dx,al
  407f3d:	hlt    
  407f3e:	lock or BYTE PTR [edx+0x3b013080],0xf1
  407f46:	pop    esp
  407f47:	mov    ah,0x22
  407f49:	loopne 0x407f6c
  407f4b:	push   ds
  407f4c:	stc    
  407f4d:	lods   eax,DWORD PTR ds:[esi]
  407f4e:	dec    ecx
  407f4f:	and    al,0x2e
  407f51:	aaa    
  407f52:	push   edi
  407f53:	sbb    eax,0x18f78461
  407f58:	pop    ss
  407f59:	mov    esp,0x23197614
  407f5e:	adc    BYTE PTR [ebp+0x37],0x1f
  407f62:	dec    esi
  407f63:	push   edi
  407f64:	test   eax,0xa044757e
  407f69:	xor    dh,BYTE PTR [ebx]
  407f6b:	and    al,0xd4
  407f6d:	and    BYTE PTR [esi+eax*2+0x2a],0x64
  407f72:	arpl   WORD PTR [ecx],cx
  407f74:	retf   
  407f75:	repz and bl,BYTE PTR [edi+0x60a57a56]
  407f7c:	iret   
  407f7d:	sbb    DWORD PTR [ecx],0xffffffa4
  407f80:	fmul   QWORD PTR [ecx+0x144ea346]
  407f86:	and    DWORD PTR [ebx],ebx
  407f88:	outs   dx,DWORD PTR ds:[esi]
  407f89:	loope  0x407f41
  407f8b:	sbb    al,cl
  407f8d:	xchg   ecx,eax
  407f8e:	mov    bh,BYTE PTR [esi+edi*2+0x6656e205]
  407f95:	retf   0xf318
  407f98:	popf   
  407f99:	das    
  407f9a:	add    ch,dh
  407f9c:	mov    edx,DWORD PTR [eax+0x63]
  407f9f:	shr    DWORD PTR [edi+0x7c344df6],1
  407fa5:	mov    edi,0xf5e7b303
  407faa:	add    eax,0x64e2b544
  407faf:	add    eax,0x7ff9fb70
  407fb4:	addr16 int3 
  407fb6:	push   ecx
  407fb7:	arpl   WORD PTR [edx],ax
  407fb9:	push   bx
  407fbb:	loopne 0x407fcb
  407fbd:	mov    ch,BYTE PTR [ebx+0x51]
  407fc0:	(bad)  
  407fc1:	gs and eax,0xcdf7ed1d
  407fc7:	call   0x5bb3:0x1d5b235
  407fce:	xor    BYTE PTR [ebx],ch
  407fd0:	or     esp,DWORD PTR [edx-0x12f79725]
  407fd6:	add    esi,ecx
  407fd8:	loope  0x408044
  407fda:	fcomi  st,st(5)
  407fdc:	fiadd  DWORD PTR [ecx]
  407fde:	fs sub eax,0xc892483
  407fe4:	lock hlt 
  407fe6:	push   es
  407fe7:	inc    ecx
  407fe8:	pop    edi
  407fe9:	cwde   
  407fea:	stc    
  407feb:	inc    eax
  407fec:	add    DWORD PTR [edx-0x3dbfe868],edx
  407ff2:	xor    DWORD PTR [ebx],edi
  407ff4:	and    cl,BYTE PTR [ecx]
  407ff6:	or     al,0xd7
  407ff8:	cmp    DWORD PTR [ebx-0x1a],edi
  407ffb:	push   edi
  407ffc:	add    cl,BYTE PTR [ebp+0x3a6c9b80]
  408002:	nop
  408003:	jnp    0x40800e
  408005:	jne    0x407f91
  408007:	cmp    DWORD PTR [ebp-0x16f0ab73],0x84077139
  408011:	cld    
  408012:	imul   edx,DWORD PTR [esi],0xffffffaa
  408015:	or     ch,BYTE PTR [eax+ebp*2+0x73]
  408019:	sub    DWORD PTR [esp+edx*1-0x1e],ecx
  40801d:	add    BYTE PTR [esi-0x4d99b638],dh
  408023:	jnp    0x408005
  408025:	loop   0x407fb1
  408027:	inc    esp
  408028:	jle    0x40802a
  40802a:	sub    ebp,DWORD PTR [ecx-0x17]
  40802d:	xor    al,0x54
  40802f:	test   DWORD PTR [edi+ebx*2],ebp
  408032:	les    ebx,FWORD PTR [esp+edi*1-0x4aa95dfd]
  408039:	out    dx,al
  40803a:	xlat   BYTE PTR ds:[ebx]
  40803b:	mov    eax,0xf9a10fcc
  408040:	rol    ecx,cl
  408042:	dec    esp
  408043:	mov    cs,WORD PTR [eax]
  408045:	dec    edx
  408046:	popa   
  408047:	pmovmskb ebp,mm3
  40804a:	inc    BYTE PTR [esi]
  40804c:	scas   eax,DWORD PTR es:[edi]
  40804d:	outs   dx,BYTE PTR ds:[esi]
  40804e:	xlat   BYTE PTR ds:[ebx]
  40804f:	jle    0x407ffc
  408051:	pusha  
  408052:	ror    DWORD PTR [ecx],1
  408054:	repz xchg ecx,eax
  408056:	ss mov ecx,0x780f4756
  40805c:	push   eax
  40805d:	cmp    BYTE PTR [edx+0x75],dl
  408060:	jle    0x4080c0
  408062:	inc    edx
  408063:	xlat   BYTE PTR ds:[ebx]
  408064:	popa   
  408065:	lods   eax,DWORD PTR ds:[esi]
  408066:	push   ss
  408067:	mov    al,0xc8
  408069:	nop
  40806a:	or     edx,DWORD PTR [edi]
  40806c:	in     al,dx
  40806d:	jge    0x40805d
  40806f:	enter  0x9dfc,0x82
  408073:	fisubr WORD PTR [edx]
  408075:	pop    ss
  408076:	mov    ch,BYTE PTR [edi+ebp*1]
  408079:	xchg   edi,eax
  40807a:	add    bh,bh
  40807c:	pop    edx
  40807d:	arpl   WORD PTR [ebx-0x29a4f2b3],di
  408083:	lea    edx,[ebx+0x6948653d]
  408089:	push   ecx
  40808a:	push   es
  40808b:	clc    
  40808c:	cld    
  40808d:	(bad)  
  40808e:	loop   0x40810c
  408090:	fwait
  408091:	or     DWORD PTR [edi],ebp
  408093:	inc    ecx
  408094:	in     al,0x88
  408096:	test   BYTE PTR [ebp-0x69],dl
  408099:	cmc    
  40809a:	or     dh,BYTE PTR [ebp+0x84c85b8]
  4080a0:	xchg   edx,eax
  4080a1:	inc    eax
  4080a2:	aam    0x33
  4080a4:	or     ecx,esp
  4080a6:	in     al,dx
  4080a7:	fadd   st,st(2)
  4080a9:	jecxz  0x408081
  4080ab:	push   ebx
  4080ac:	mov    ebx,0x4426ce25
  4080b1:	fldenv [ecx]
  4080b3:	(bad)  
  4080b4:	jns    0x40806e
  4080b6:	xor    esp,DWORD PTR [ebp-0x524ebb1e]
  4080bc:	fcomp  DWORD PTR [edx+0x6a27d410]
  4080c2:	sbb    bl,BYTE PTR [esi]
  4080c4:	pop    es
  4080c5:	(bad)  
  4080c6:	shl    BYTE PTR [eax-0x4],1
  4080c9:	aam    0xd9
  4080cb:	pop    ss
  4080cc:	adc    eax,0x5062c54
  4080d1:	mov    cs,WORD PTR [ebx]
  4080d3:	cmp    eax,0xe3c2430e
  4080d8:	pop    ecx
  4080d9:	scas   al,BYTE PTR es:[edi]
  4080da:	fdivr  st(0),st
  4080dc:	cmp    al,ah
  4080de:	sub    al,0x88
  4080e0:	mov    ah,bh
  4080e2:	xor    al,0xc2
  4080e4:	jg     0x408132
  4080e6:	ror    DWORD PTR [edx-0x4c3ed1c1],1
  4080ec:	test   ecx,edx
  4080ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ef:	push   0xb4c7ea9a
  4080f4:	popa   
  4080f5:	stos   BYTE PTR es:[edi],al
  4080f6:	sbb    DWORD PTR [ecx-0x31],edx
  4080f9:	pop    esi
  4080fa:	add    eax,0x32ef7b3
  4080ff:	les    ebp,FWORD PTR [esi+0x6a]
  408102:	sub    ebp,edi
  408104:	(bad)  
  408105:	jns    0x408088
  408107:	add    al,0xd3
  408109:	adc    eax,0xd9e00e20
  40810e:	xor    eax,0x2dcf6adc
  408113:	add    al,BYTE PTR [edi-0x74]
  408116:	jg     0x408100
  408118:	cmp    eax,0xb67d225b
  40811d:	stc    
  40811e:	fidiv  DWORD PTR [edi]
  408120:	inc    edi
  408121:	cmp    BYTE PTR [esi],dh
  408123:	add    al,0x9
  408125:	sub    BYTE PTR [ebx-0x6c],al
  408128:	fidivr WORD PTR [edx]
  40812a:	add    BYTE PTR [edx+0x1b],bl
  40812d:	and    BYTE PTR [edx],dl
  40812f:	inc    edi
  408130:	call   0xdbe0:0xcfd5b8b7
  408137:	push   esi
  408138:	fcomp  QWORD PTR [ecx-0x12]
  40813b:	mov    dh,0x27
  40813d:	or     al,0xe9
  40813f:	sbb    al,0x5a
  408141:	int3   
  408142:	inc    ecx
  408143:	ins    DWORD PTR es:[edi],dx
  408144:	ins    DWORD PTR es:[edi],dx
  408145:	sbb    BYTE PTR [esp+esi*8],0x61
  408149:	out    0x49,eax
  40814b:	fs adc eax,0x491764f0
  408151:	(bad)  
  408152:	sti    
  408153:	mov    edi,ss
  408155:	dec    eax
  408156:	in     eax,dx
  408157:	cld    
  408158:	jmp    0x5e3a45e4
  40815d:	jb     0x408100
  40815f:	push   ss
  408160:	(bad)  
  408161:	test   al,0x5b
  408163:	cmp    BYTE PTR [ecx-0x17acc78b],al
  408169:	jmp    0x408117
  40816b:	add    al,0x21
  40816d:	adc    al,0xd8
  40816f:	mov    dl,BYTE PTR [ebx+0x21]
  408172:	adc    eax,0xfa4dc52b
  408177:	fild   WORD PTR [ecx+esi*1+0x280a77a1]
  40817e:	stos   BYTE PTR es:[edi],al
  40817f:	test   DWORD PTR [edx+0x65ba270a],eax
  408185:	and    ecx,0xb
  408188:	inc    edx
  408189:	cwde   
  40818a:	inc    eax
  40818b:	xor    cl,0xd8
  40818e:	add    dl,BYTE PTR [ebx-0x236a8f8e]
  408194:	xchg   esi,eax
  408195:	test   eax,0xd815d76f
  40819a:	xchg   esp,eax
  40819b:	inc    esi
  40819c:	or     dl,al
  40819e:	push   ss
  40819f:	ja     0x4081b1
  4081a1:	or     eax,eax
  4081a3:	nop
  4081a4:	pop    ebx
  4081a5:	sub    DWORD PTR [edx+0xd],edx
  4081a8:	inc    edx
  4081a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081aa:	push   DWORD PTR [esp+eiz*2-0x73]
  4081ae:	mov    ecx,eax
  4081b0:	jno    0x4081f6
  4081b2:	aas    
  4081b3:	mov    esi,DWORD PTR [ecx+0x32]
  4081b6:	jns    0x408214
  4081b8:	push   ebx
  4081b9:	jno    0x40820b
  4081bb:	mov    dh,0x1d
  4081bd:	(bad)  
  4081be:	(bad)  
  4081bf:	mov    fs,ebx
  4081c1:	clc    
  4081c2:	and    BYTE PTR [esi],ah
  4081c4:	ss fdivr st,st(5)
  4081c7:	adc    eax,0xb270f9c
  4081cc:	test   DWORD PTR [edi+esi*1+0x403703b2],edx
  4081d3:	cli    
  4081d4:	ret    
  4081d5:	lea    esi,ds:0xedac29a7
  4081db:	outs   dx,DWORD PTR ds:[esi]
  4081dc:	and    DWORD PTR [eax-0x10],eax
  4081df:	sub    BYTE PTR [edx+0xc],0x66
  4081e3:	sahf   
  4081e4:	fldenv [ebx]
  4081e6:	mov    ebp,0x43c22b91
  4081eb:	(bad)  
  4081ec:	iret   
  4081ed:	jnp    0x4081c4
  4081ef:	pusha  
  4081f0:	clc    
  4081f1:	jmp    0xcb86fb21
  4081f6:	mov    edi,0x49c53893
  4081fb:	sbb    esi,edi
  4081fd:	es daa 
  4081ff:	jns    0x4081fd
  408201:	hlt    
  408202:	outs   dx,BYTE PTR ds:[esi]
  408203:	jo     0x4081c7
  408205:	mov    ch,0xb9
  408207:	mov    WORD PTR [edi-0x206286e6],?
  40820d:	push   0xa0d5c2be
  408212:	js     0x4081ed
  408214:	shl    DWORD PTR ds:0xca4c6779,cl
  40821a:	mov    ebp,0xef70f885
  40821f:	mov    cl,BYTE PTR [esi]
  408221:	ret    
  408222:	inc    esp
  408223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408224:	fwait
  408225:	loope  0x4081bf
  408227:	sahf   
  408228:	inc    esi
  408229:	push   0xffffffd6
  40822b:	xor    bh,cl
  40822d:	mov    WORD PTR ds:0x604fddaa,?
  408233:	jmp    0xdf1748d5
  408238:	jp     0x40826e
  40823a:	mov    al,0x23
  40823c:	(bad)  
  40823d:	cld    
  40823e:	iret   
  40823f:	cmp    dh,bh
  408241:	cmp    DWORD PTR [edi],0x63
  408244:	jbe    0x408282
  408246:	test   ch,0xbe
  408249:	adc    al,0x7b
  40824b:	outs   dx,DWORD PTR ds:[esi]
  40824c:	or     al,0x44
  40824e:	adc    eax,0x6e2bc791
  408253:	leave  
  408254:	push   ebx
  408255:	pop    ds
  408256:	and    al,0x2d
  408258:	mov    dl,0xed
  40825a:	cmp    al,0xfc
  40825c:	mov    cl,0x2e
  40825e:	jbe    0x4082bc
  408260:	mov    eax,ds:0xd355dfe4
  408265:	enter  0xe4ef,0x60
  408269:	xor    dh,BYTE PTR [esi+0x54b65f59]
  40826f:	lods   eax,DWORD PTR ds:[esi]
  408270:	sbb    eax,0xfffd2ca2
  408275:	jne    0x4082f3
  408277:	push   es
  408278:	adc    DWORD PTR [eax-0x61],ecx
  40827b:	je     0x40820b
  40827d:	addr16 clc 
  40827f:	pop    esp
  408280:	cli    
  408281:	xchg   esi,eax
  408282:	mov    cl,0xee
  408284:	and    ecx,DWORD PTR [ecx]
  408286:	mov    eax,ds:0x2f45120e
  40828b:	push   ds
  40828c:	push   esi
  40828d:	dec    esi
  40828e:	and    cl,0xea
  408291:	adc    al,ch
  408293:	mov    WORD PTR [esi-0x25c9ffac],gs
  408299:	mov    ebp,0x43bda99f
  40829e:	lea    esi,[ebx+0x1d76a946]
  4082a4:	pop    esp
  4082a5:	jbe    0x40824e
  4082a7:	fistp  WORD PTR [ecx-0x13f0dff5]
  4082ad:	xchg   esi,eax
  4082ae:	sbb    DWORD PTR [ebx],edi
  4082b0:	jbe    0x408313
  4082b2:	dec    ecx
  4082b3:	jl     0x408307
  4082b5:	(bad)  [edx-0x6c]
  4082b8:	leave  
  4082b9:	push   ds
  4082ba:	pop    ebp
  4082bb:	pushf  
  4082bc:	push   edi
  4082bd:	int    0xfa
  4082bf:	icebp  
  4082c0:	repz aad 0x38
  4082c3:	xchg   edi,eax
  4082c4:	mov    eax,ds:0x9ae52af2
  4082c9:	test   al,0xe6
  4082cb:	xchg   edx,eax
  4082cc:	mov    ecx,esp
  4082ce:	test   BYTE PTR [eax],ch
  4082d0:	xor    eax,0x2e23cf93
  4082d5:	ror    BYTE PTR [eax+0x5e],0x47
  4082d9:	fs push es
  4082db:	jo     0x40828b
  4082dd:	push   edx
  4082de:	sub    DWORD PTR [eax+ebx*1],ecx
  4082e1:	xchg   ecx,eax
  4082e2:	push   edx
  4082e3:	add    dh,BYTE PTR [eax+edx*1-0x4c]
  4082e7:	jae    0x4082a7
  4082e9:	xchg   BYTE PTR [edi+eiz*8+0x2be42595],bh
  4082f0:	and    eax,0x3d
  4082f3:	mov    edx,0x6a04a78e
  4082f8:	cmp    cl,BYTE PTR [ecx+0x47]
  4082fb:	inc    ebx
  4082fc:	adc    bh,0xa8
  4082ff:	jl     0x4082a6
  408301:	push   es
  408302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408303:	addr16 pop ecx
  408305:	call   0x1e483fbb
  40830a:	sti    
  40830b:	imul   ecx,DWORD PTR [eax-0x1c],0xffffffbc
  40830f:	fmul   st(0),st
  408311:	fwait
  408312:	test   edx,edi
  408314:	adc    eax,0xb53d8443
  408319:	sbb    edx,ebx
  40831b:	xchg   esi,eax
  40831c:	aad    0x2a
  40831e:	jbe    0x4082dc
  408320:	fisttp DWORD PTR [edx+0x4a]
  408323:	mov    al,ds:0x480ddde7
  408328:	inc    edx
  408329:	test   eax,0x5181ddc8
  40832e:	test   esp,eax
  408330:	xor    DWORD PTR [ebp+0x5ef1f6a9],edx
  408336:	imul   esi,esp,0x6e939863
  40833c:	clc    
  40833d:	pop    ds
  40833e:	mov    esp,0x4ea196f2
  408343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408344:	sbb    BYTE PTR [esp+ebp*1-0x56f318bb],ah
  40834b:	mov    al,ds:0xee9795c9
  408350:	push   es
  408351:	popa   
  408352:	stos   BYTE PTR es:[edi],al
  408353:	adc    bh,0x60
  408356:	xor    al,0xb4
  408358:	sbb    DWORD PTR [eax],edi
  40835a:	sbb    DWORD PTR [esi],0x3a4d2f82
  408360:	in     eax,dx
  408361:	adc    bh,BYTE PTR [edx+0x54c5de35]
  408367:	outs   dx,DWORD PTR ds:[esi]
  408368:	jp     0x4083d4
  40836a:	pop    ebp
  40836b:	push   ebx
  40836c:	daa    
  40836d:	test   al,0xe7
  40836f:	mov    WORD PTR [ecx],gs
  408371:	(bad)  
  408372:	jne    0x408300
  408374:	repz fistp DWORD PTR [ecx-0x229635a9]
  40837b:	push   ss
  40837c:	std    
  40837d:	adc    BYTE PTR [edx-0x7b],cl
  408380:	mov    esp,0xfe249f0
  408385:	pushf  
  408386:	xor    eax,0xd5880619
  40838b:	test   ebp,esp
  40838d:	xor    BYTE PTR [ebx+0x445b5423],dl
  408393:	iret   
  408394:	xor    eax,0xb155994e
  408399:	pop    esi
  40839a:	(bad)  [ecx-0x4a]
  40839e:	stos   DWORD PTR es:[edi],eax
  40839f:	pop    ss
  4083a0:	std    
  4083a1:	cs pop ecx
  4083a3:	not    BYTE PTR [esi+0x1c9a5158]
  4083a9:	mov    cl,0x46
  4083ab:	retf   
  4083ac:	jle    0x4083fa
  4083ae:	xor    DWORD PTR [eax],0xffffff9b
  4083b1:	das    
  4083b2:	inc    ebp
  4083b3:	sbb    BYTE PTR [ebp-0x52999920],cl
  4083b9:	cmp    eax,0x6bae1fac
  4083be:	sub    ebx,DWORD PTR ds:0x23ec75ad
  4083c4:	in     eax,dx
  4083c5:	imul   ebx,DWORD PTR ds:0xce730455,0x8b127a7f
  4083cf:	(bad)  
  4083d0:	pop    ebp
  4083d1:	adc    al,0xa8
  4083d3:	scas   al,BYTE PTR es:[edi]
  4083d4:	(bad)  
  4083d5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d7:	xchg   BYTE PTR [eax],dl
  4083d9:	and    eax,0x3bfbe06f
  4083de:	test   al,0xa4
  4083e0:	or     eax,0x4a541633
  4083e5:	mov    bl,0x3
  4083e7:	xchg   edi,eax
  4083e8:	rcr    eax,0x3
  4083eb:	cmc    
  4083ec:	(bad)  
  4083ed:	sub    eax,DWORD PTR [ebx-0x23]
  4083f0:	sub    BYTE PTR [eax+0x1b9336e8],al
  4083f6:	ja     0x40837d
  4083f8:	ret    
  4083f9:	enter  0xc1cd,0xf7
  4083fd:	stos   BYTE PTR es:[edi],al
  4083fe:	jbe    0x40846b
  408400:	fst    QWORD PTR [ebx-0x11]
  408403:	cmp    esi,DWORD PTR [ebx-0x1f21484e]
  408409:	stos   BYTE PTR es:[edi],al
  40840a:	xchg   edx,eax
  40840b:	test   eax,esi
  40840d:	jle    0x408466
  40840f:	or     al,0xee
  408411:	sar    DWORD PTR [edi+0x34b91493],0xc
  408418:	jns    0x40841d
  40841a:	mov    ah,0x6b
  40841c:	hlt    
  40841d:	lods   eax,DWORD PTR ds:[esi]
  40841e:	pop    es
  40841f:	ror    edx,0x91
  408422:	lods   al,BYTE PTR ds:[esi]
  408423:	imul   esp,DWORD PTR [edi],0x48
  408426:	jle    0x40849c
  408428:	ficomp WORD PTR [eax-0x4]
  40842b:	pushf  
  40842c:	data16 jno 0x408494
  40842f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408430:	push   edi
  408431:	jnp    0x408429
  408433:	jno    0x408475
  408435:	lea    edi,[ebx-0x5570d14a]
  40843b:	xor    DWORD PTR [ecx],esp
  40843d:	adc    BYTE PTR [eax],al
  40843f:	nop
  408440:	and    DWORD PTR [edx-0x5f],esi
  408443:	les    ecx,FWORD PTR [edx-0x550d72de]
  408449:	mov    bl,0xb3
  40844b:	std    
  40844c:	sbb    eax,0x5a652c54
  408451:	fmul   st,st(3)
  408453:	xchg   esp,eax
  408454:	out    0x2f,al
  408456:	mov    esi,0x846ebc22
  40845b:	aam    0xc3
  40845d:	add    eax,0x2502591f
  408462:	pusha  
  408463:	jmp    0x7500:0x4c06e0c5
  40846a:	jmp    0x408449
  40846c:	push   ebp
  40846d:	out    0x79,al
  40846f:	or     DWORD PTR [si],esi
  408472:	adc    eax,0x13958b96
  408477:	inc    ebx
  408478:	pop    ebx
  408479:	frstor [ecx-0x46830b3e]
  40847f:	daa    
  408480:	xchg   edi,eax
  408481:	xchg   ebp,eax
  408482:	ss icebp 
  408484:	pop    ebp
  408485:	xor    ah,al
  408487:	repz sbb al,0xf3
  40848a:	sub    eax,0x89804d43
  40848f:	cmp    BYTE PTR [eax-0x75c0bc7d],0x87
  408496:	mov    edi,esp
  408498:	mov    ch,0x50
  40849a:	(bad)  
  40849b:	sub    eax,0x4f2e6ffe
  4084a0:	inc    ecx
  4084a1:	sub    eax,0xc7c65476
  4084a6:	dec    ch
  4084a8:	(bad)  
  4084a9:	fadd   DWORD PTR [ebx-0x62]
  4084ac:	and    edi,DWORD PTR [ecx-0x39527ef5]
  4084b2:	out    0x1c,al
  4084b4:	xchg   esi,eax
  4084b5:	sbb    ebp,DWORD PTR [ebx-0x11020dce]
  4084bb:	aas    
  4084bc:	push   edx
  4084bd:	dec    ebx
  4084be:	pushf  
  4084bf:	mov    eax,0x7249207d
  4084c4:	jnp    0x408537
  4084c6:	iret   
  4084c7:	xchg   BYTE PTR [edi-0x6f],dl
  4084ca:	mov    dl,0xa6
  4084cc:	imul   ebp,esi,0xddd67cef
  4084d2:	sub    eax,0x3807644b
  4084d7:	jp     0x408491
  4084d9:	shl    BYTE PTR [eax+0x1feb9fa8],0x76
  4084e0:	cmp    BYTE PTR [ebx+0x35],bl
  4084e3:	es pop esi
  4084e5:	push   ebp
  4084e6:	inc    edx
  4084e7:	mov    esi,0x5fb9b976
  4084ec:	sbb    edx,DWORD PTR [ebx+0x4d13fc66]
  4084f2:	dec    edi
  4084f3:	loop   0x4084f9
  4084f5:	pop    edi
  4084f6:	call   0xa0a8d7c2
  4084fb:	dec    esp
  4084fc:	jge    0x40851c
  4084fe:	mov    dh,0x10
  408500:	mov    ebx,0x56e07954
  408505:	sub    dh,BYTE PTR [edx+0x6]
  408508:	fld    QWORD PTR [ebx]
  40850a:	call   0xeae:0xe9cf3de6
  408511:	mov    edx,0x7adf7d25
  408516:	es in  al,0xaa
  408519:	ror    ebx,1
  40851b:	frstor [esi+ebx*4+0x79]
  40851f:	mov    ebp,0x64279545
  408524:	fisttp QWORD PTR [esi-0x3fb2258]
  40852a:	out    dx,eax
  40852b:	out    dx,eax
  40852c:	(bad)  
  40852d:	out    dx,eax
  40852e:	pop    ebp
  40852f:	sub    ch,ah
  408531:	int3   
  408532:	adc    ecx,ebp
  408534:	adc    eax,0x52bf5368
  408539:	add    al,0x25
  40853b:	ret    0x51f6
  40853e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40853f:	jno    0x408572
  408541:	pop    esp
  408542:	dec    edi
  408543:	cld    
  408544:	je     0x40853e
  408546:	pop    edx
  408547:	icebp  
  408548:	shl    DWORD PTR [eax+0x11],0x87
  40854c:	pop    ebp
  40854d:	test   al,0x48
  40854f:	xchg   esp,eax
  408550:	cmp    esi,DWORD PTR [ebp+0x1f17de2e]
  408556:	push   ebx
  408557:	imul   ebx,edi,0xf2fdeeb1
  40855d:	test   DWORD PTR [edi],ebp
  40855f:	jle    0x4085af
  408561:	mov    ch,0xbb
  408563:	addr16 push 0x297bde6c
  408569:	or     al,0x45
  40856b:	or     cl,BYTE PTR [ebx-0x69]
  40856e:	mov    BYTE PTR [ecx],cl
  408570:	and    al,0xa5
  408572:	mov    al,0xfa
  408574:	cli    
  408575:	and    BYTE PTR [edi+0x23],cl
  408578:	js     0x40851f
  40857a:	sbb    DWORD PTR [esi-0x6bdf2f0c],0x6d329253
  408584:	fldcw  WORD PTR [ebp+0x27fd197d]
  40858a:	das    
  40858b:	aad    0x4a
  40858d:	sbb    eax,0xaeb9ce0e
  408592:	clc    
  408593:	pop    ecx
  408594:	shr    ch,cl
  408596:	mov    cl,0x39
  408598:	retf   0x7a4f
  40859b:	je     0x408548
  40859d:	mov    DWORD PTR [ecx-0x66],edx
  4085a0:	xor    BYTE PTR [esi],al
  4085a2:	loope  0x4085fa
  4085a4:	lds    ecx,FWORD PTR [ebp-0x73]
  4085a7:	pop    esi
  4085a8:	and    cl,dl
  4085aa:	and    al,0xe
  4085ac:	sub    DWORD PTR ds:0x2d0b4ca2,ebp
  4085b2:	ror    DWORD PTR [edx+0x6dbdf933],cl
  4085b8:	xchg   bl,cl
  4085ba:	push   ds
  4085bb:	mov    ds:0x2453ad4a,eax
  4085c0:	imul   esp,eax,0xfffffffb
  4085c3:	int    0x65
  4085c5:	jge    0x4085de
  4085c7:	in     eax,dx
  4085c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085c9:	jmp    edx
  4085cb:	shr    BYTE PTR [edi+ebx*4],1
  4085ce:	and    bh,BYTE PTR [edi]
  4085d0:	or     ecx,DWORD PTR [edi]
  4085d2:	sbb    eax,0x80d394d4
  4085d7:	pop    ecx
  4085d8:	pop    esp
  4085d9:	adc    DWORD PTR [edi+eax*4-0x6618e03d],eax
  4085e0:	cmp    DWORD PTR [ebx+0x387f1e1d],0x51d816a0
  4085ea:	scas   eax,DWORD PTR es:[edi]
  4085eb:	or     ebp,DWORD PTR [eax+0x3981ac03]
  4085f1:	inc    ebp
  4085f2:	push   edi
  4085f3:	adc    BYTE PTR [ecx-0x489b22fa],al
  4085f9:	mov    BYTE PTR [esi-0xbbc8518],ah
  4085ff:	xor    DWORD PTR [ecx+0x7a30b42e],ecx
  408605:	mov    ch,0xe
  408607:	outs   dx,BYTE PTR ds:[esi]
  408608:	lds    eax,FWORD PTR [ecx]
  40860a:	and    bh,0x9a
  40860d:	or     eax,DWORD PTR [ecx]
  40860f:	mov    cl,0x83
  408611:	xlat   BYTE PTR ds:[ebx]
  408612:	call   0xad9d:0xbc5a46f3
  408619:	mov    ds:0xfc4510c8,eax
  40861e:	ror    dh,cl
  408620:	push   ss
  408621:	mov    edi,0x38feaf9f
  408626:	or     bl,BYTE PTR [ebp+0x5d7eaa95]
  40862c:	test   eax,0x99ac5ee7
  408631:	inc    ebp
  408632:	mov    ds:0xc03e9d54,al
  408637:	jno    0x408626
  408639:	pop    ebp
  40863a:	fsubp  st(1),st
  40863c:	shl    edi,1
  40863e:	mov    ebx,0x87478b17
  408643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408644:	inc    eax
  408645:	jmp    0x7683:0x3470b3df
  40864c:	rcl    BYTE PTR [esi+0x5c],0xbd
  408650:	out    dx,eax
  408651:	push   esp
  408652:	dec    ebp
  408653:	sub    BYTE PTR [edi-0x5a],al
  408656:	fwait
  408657:	ds scas al,BYTE PTR es:[edi]
  408659:	mov    ds:0x20927f16,al
  40865e:	inc    edx
  40865f:	(bad)  
  408660:	lods   eax,DWORD PTR ds:[esi]
  408661:	test   eax,0x15f11fcd
  408666:	dec    ebp
  408667:	add    DWORD PTR [ebx-0x4b],edx
  40866a:	xchg   BYTE PTR [eax],ah
  40866c:	mov    dh,0x29
  40866e:	push   eax
  40866f:	mov    edx,0xb8f41760
  408674:	retf   
  408675:	dec    edi
  408676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408677:	inc    DWORD PTR [edx-0x4da8950f]
  40867d:	(bad)  
  40867e:	imul   ecx,DWORD PTR [eax],0xff112fe7
  408684:	adc    BYTE PTR [esp+esi*1+0x2],bh
  408688:	sub    dl,0xde
  40868b:	cmp    esp,DWORD PTR [ebx]
  40868d:	jbe    0x408622
  40868f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408690:	(bad)  
  408691:	int3   
  408692:	xlat   BYTE PTR ds:[ebx]
  408693:	icebp  
  408694:	pop    ebx
  408695:	sub    al,0x4b
  408697:	imul   eax,DWORD PTR [ebx-0x6e469d05],0x4a
  40869e:	inc    edx
  40869f:	mov    cl,0xbb
  4086a1:	(bad)  
  4086a2:	(bad)  
  4086a3:	icebp  
  4086a4:	into   
  4086a5:	test   al,0x12
  4086a7:	out    0xdb,eax
  4086a9:	fadd   DWORD PTR [ecx+0x3af6a942]
  4086af:	test   esp,edi
  4086b1:	ficom  WORD PTR ds:0xf7c9d5c1
  4086b7:	lahf   
  4086b8:	xchg   esi,eax
  4086b9:	ja     0x4086b3
  4086bb:	icebp  
  4086bc:	rcr    DWORD PTR [edx+0x1bb6554d],cl
  4086c2:	(bad)  
  4086c3:	xchg   ebx,eax
  4086c4:	dec    esp
  4086c5:	xor    ecx,DWORD PTR [ecx+0x5a]
  4086c8:	aad    0xa2
  4086ca:	hlt    
  4086cb:	and    eax,0xd827962f
  4086d0:	mov    al,ds:0x4c8f3341
  4086d5:	pop    esi
  4086d6:	inc    eax
  4086d7:	jbe    0x408663
  4086d9:	ss ret 
  4086db:	aad    0xf0
  4086dd:	aam    0xd
  4086df:	jnp    0x408696
  4086e1:	js     0x4086ed
  4086e3:	xchg   edi,eax
  4086e4:	icebp  
  4086e5:	mov    esp,0x6e5cccf1
  4086ea:	jg     0x4086ce
  4086ec:	mov    ch,0xda
  4086ee:	dec    ecx
  4086ef:	push   esi
  4086f0:	(bad)  
  4086f1:	pop    ss
  4086f2:	in     al,0x3f
  4086f4:	cmp    dl,BYTE PTR [ebp+0x6d]
  4086f7:	mov    eax,0x99510ace
  4086fc:	rcr    DWORD PTR [esp+eax*1-0x1d4573a3],cl
  408703:	(bad)  
  408704:	fnstcw WORD PTR [edi]
  408706:	adc    DWORD PTR [eax-0x65],esp
  408709:	push   esi
  40870a:	xchg   edx,eax
  40870b:	into   
  40870c:	mov    bh,0xa
  40870e:	push   ebx
  40870f:	jle    0x4086a7
  408711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408712:	sti    
  408713:	mov    esi,0x42d2a19f
  408718:	mov    al,ds:0x597eaea6
  40871d:	pop    ebp
  40871e:	not    DWORD PTR [edx]
  408720:	mov    eax,ds:0xb8bc50bd
  408725:	lods   eax,DWORD PTR ds:[esi]
  408726:	pop    ds
  408727:	stc    
  408728:	inc    edi
  408729:	cwde   
  40872a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40872b:	push   ebx
  40872c:	repz and DWORD PTR [edx+0x5],esi
  408730:	inc    esi
  408731:	aad    0x6b
  408733:	nop
  408734:	xor    ebx,DWORD PTR ds:0x28b8ca8a
  40873a:	mov    ebp,0xe9123699
  40873f:	xor    BYTE PTR [esi],ch
  408741:	popf   
  408742:	cmp    eax,0x88e23cd1
  408747:	mov    dh,0x40
  408749:	push   0xffffffbd
  40874b:	xchg   ecx,eax
  40874c:	xor    BYTE PTR [edi-0xf],ch
  40874f:	leave  
  408750:	loop   0x408751
  408752:	inc    esp
  408753:	or     al,0xfc
  408755:	hlt    
  408756:	add    DWORD PTR [edi+0x4],edi
  408759:	push   esp
  40875a:	adc    DWORD PTR [edx+eax*2-0x4d74224b],ecx
  408761:	mov    ds:0xb6c8b658,eax
  408766:	pop    esi
  408767:	scas   al,BYTE PTR es:[edi]
  408768:	mov    al,ds:0x1b080e70
  40876d:	(bad)  
  40876e:	mov    eax,DWORD PTR [ebx]
  408770:	fild   QWORD PTR [ebx-0x8]
  408773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408774:	mov    bl,0x78
  408776:	push   0x3aac5056
  40877b:	pop    ss
  40877c:	cli    
  40877d:	ins    BYTE PTR es:[edi],dx
  40877e:	into   
  40877f:	scas   al,BYTE PTR es:[edi]
  408780:	jecxz  0x40873e
  408782:	pop    eax
  408783:	out    dx,al
  408784:	cmp    eax,0x7b797d7e
  408789:	mov    WORD PTR [ebx+0x4db5d676],gs
  40878f:	out    0xae,al
  408791:	xchg   DWORD PTR [edx-0x59],eax
  408794:	or     ebp,DWORD PTR [edx+esi*1-0x68]
  408798:	(bad)  
  40879a:	xchg   edi,eax
  40879b:	loopne 0x4087e9
  40879d:	inc    ebp
  40879e:	dec    ebx
  40879f:	add    BYTE PTR [ebp+0x38ac9928],ah
  4087a5:	mov    dh,0xd8
  4087a7:	sub    al,0xeb
  4087a9:	les    edi,FWORD PTR ds:0xcafc660e
  4087af:	int    0x95
  4087b1:	xchg   BYTE PTR [ebx+0x25b9bd31],dl
  4087b7:	ss repnz pop edx
  4087ba:	cdq    
  4087bb:	push   ecx
  4087bc:	pop    edx
  4087bd:	iret   
  4087be:	inc    ebp
  4087bf:	and    ah,BYTE PTR [edx]
  4087c1:	or     BYTE PTR [edx],0xdf
  4087c4:	push   cs
  4087c5:	jl     0x408840
  4087c7:	stos   BYTE PTR es:[edi],al
  4087c8:	xchg   esi,eax
  4087c9:	pusha  
  4087ca:	retf   
  4087cb:	into   
  4087cc:	mov    DWORD PTR [edx+ecx*2],esi
  4087cf:	jne    0x40880f
  4087d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087d3:	xchg   esp,eax
  4087d4:	mov    ebp,0x30b84dcd
  4087d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087da:	(bad)  
  4087db:	mov    esp,DWORD PTR [ecx+eiz*4+0x17e5117e]
  4087e2:	cmp    edi,DWORD PTR [edi]
  4087e4:	call   0x64e25789
  4087e9:	shl    BYTE PTR [ecx+ebp*4+0x6d],cl
  4087ed:	ja     0x4087c9
  4087ef:	pop    ss
  4087f0:	mov    esp,0x2717367b
  4087f5:	lds    esi,FWORD PTR [ecx+0x35]
  4087f8:	dec    edi
  4087f9:	aam    0x21
  4087fb:	imul   esi,DWORD PTR [ebx-0x241ea0dc],0xa94c6d74
  408805:	jecxz  0x408788
  408807:	shl    BYTE PTR [esi+0x4ae27314],cl
  40880d:	and    DWORD PTR [ecx-0x7ae61982],edx
  408813:	stos   DWORD PTR es:[edi],eax
  408814:	pop    ds
  408815:	xchg   DWORD PTR [esi],eax
  408817:	(bad)
  40881a:	pop    ebp
  40881b:	out    0xcd,eax
  40881d:	fnstcw WORD PTR [eax+0x63e6b047]
  408823:	pushf  
  408824:	icebp  
  408825:	pop    ecx
  408826:	(bad)  
  408827:	mov    ebx,0xfca34211
  40882c:	push   ebx
  40882d:	ins    DWORD PTR es:[edi],dx
  40882e:	jp     0x4087c2
  408830:	jbe    0x2ce021b5
  408836:	outs   dx,DWORD PTR ds:[esi]
  408837:	and    eax,0x99f21159
  40883c:	pop    ecx
  40883d:	(bad)  
  40883e:	mov    cl,0x56
  408840:	pop    esi
  408841:	mov    cl,0x0
  408843:	enter  0xfc39,0xaa
  408847:	and    BYTE PTR [ebx-0x1c],bh
  40884a:	fisubr WORD PTR [edx-0x18]
  40884d:	repnz enter 0xe942,0xc7
  408852:	adc    ah,0x5
  408855:	jmp    DWORD PTR [edx]
  408857:	je     0x40888b
  408859:	and    dh,BYTE PTR [ebx+0x51]
  40885c:	daa    
  40885d:	xor    DWORD PTR [eax-0x24d7f67],eax
  408863:	retf   0x827b
  408866:	xlat   BYTE PTR ds:[ebx]
  408867:	retf   0xc058
  40886a:	xlat   BYTE PTR ds:[ebx]
  40886b:	sbb    eax,0x25125ef4
  408870:	stc    
  408871:	stos   DWORD PTR es:[edi],eax
  408872:	outs   dx,BYTE PTR ds:[esi]
  408873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408874:	add    BYTE PTR [ecx+0x3c65d009],bl
  40887a:	repnz (bad) 
  40887c:	lock jecxz 0x4088dd
  40887f:	pusha  
  408880:	cmp    ebx,ecx
  408882:	and    ch,BYTE PTR [esp+edx*4-0x4f78f636]
  408889:	outs   dx,BYTE PTR ds:[esi]
  40888a:	jae    0x40883f
  40888c:	pop    ss
  40888d:	arpl   WORD PTR [edx],dx
  40888f:	cs mov edx,0x47e5e761
  408895:	std    
  408896:	mov    ch,0x8e
  408898:	xchg   ebx,eax
  408899:	jmp    0xf051:0xcfefff02
  4088a0:	jle    0x408915
  4088a2:	dec    edi
  4088a3:	or     bl,BYTE PTR [edi+ebx*8-0x28]
  4088a7:	in     eax,0x2
  4088a9:	pop    edx
  4088aa:	repnz sbb al,0x6e
  4088ad:	mov    BYTE PTR fs:[ecx+esi*8],0x57
  4088b2:	(bad)  
  4088b3:	in     eax,0x2c
  4088b5:	cmp    DWORD PTR [esi],ebx
  4088b7:	ret    
  4088b8:	test   BYTE PTR [ebx],al
  4088ba:	push   cs
  4088bb:	fprem  
  4088bd:	repz clc 
  4088bf:	sub    edi,DWORD PTR [ecx]
  4088c1:	add    cl,cl
  4088c3:	or     eax,0x38ae5acd
  4088c8:	outs   dx,DWORD PTR ds:[esi]
  4088c9:	jge    0x4088fb
  4088cb:	dec    ecx
  4088cc:	jg     0x4088d2
  4088ce:	mov    ch,0x56
  4088d0:	sub    ebx,ebx
  4088d2:	inc    edi
  4088d3:	cli    
  4088d4:	push   edx
  4088d5:	loop   0x4088fa
  4088d7:	sbb    cl,BYTE PTR [edi+0x328dff53]
  4088dd:	add    DWORD PTR [esi-0x2d28ccae],0x1d410fe8
  4088e7:	lods   eax,DWORD PTR ds:[esi]
  4088e8:	or     al,0x8e
  4088ea:	(bad)  
  4088eb:	jg     0x4088d7
  4088ed:	nop
  4088ee:	mov    edx,esp
  4088f0:	nop
  4088f1:	lea    ebx,[edi+eiz*1-0x7dd63a97]
  4088f8:	adc    DWORD PTR [ecx],0xb4fda86e
  4088fe:	or     ebp,DWORD PTR [edi+0x79f92c71]
  408904:	add    al,0x48
  408906:	popa   
  408907:	into   
  408908:	aas    
  408909:	(bad)  
  40890a:	rol    DWORD PTR [edx-0x58],1
  40890d:	sub    edi,DWORD PTR [ecx+0x8]
  408910:	test   eax,0xef7bc1c3
  408915:	ins    DWORD PTR es:[edi],dx
  408916:	test   al,0x63
  408918:	pushf  
  408919:	xchg   edi,eax
  40891a:	cmp    DWORD PTR [ecx+ebx*1-0xddfdfe4],esi
  408921:	bound  edx,QWORD PTR [edi+eiz*4+0x5ab06aeb]
  408928:	jb     0x8715975a
  40892e:	mov    dl,0xcd
  408930:	pusha  
  408931:	pop    eax
  408932:	stos   BYTE PTR es:[edi],al
  408933:	ror    DWORD PTR [esi],1
  408935:	outs   dx,DWORD PTR ds:[esi]
  408936:	dec    ecx
  408937:	stos   DWORD PTR es:[edi],eax
  408938:	ret    0xdbdd
  40893b:	xor    esi,esi
  40893d:	nop
  40893e:	jae    0x408984
  408940:	add    DWORD PTR [ebx+0x12],0x42cbb188
  408947:	pusha  
  408948:	shl    BYTE PTR [eax+esi*4-0x2d9ae4d4],cl
  40894f:	js     0x408903
  408951:	test   eax,0xc5628133
  408956:	cmp    DWORD PTR [ecx],esp
  408958:	push   edi
  408959:	pop    esi
  40895a:	xor    BYTE PTR [ebx],0xb
  40895d:	inc    esp
  40895e:	arpl   WORD PTR [esi],bp
  408960:	or     DWORD PTR [esi+0xa],0x7892534a
  408967:	cmp    edx,ecx
  408969:	imul   esi,DWORD PTR [esi+edx*8]
  40896d:	ret    0x25ed
  408970:	retf   0xd5a5
  408973:	sub    al,BYTE PTR [eax-0x1a]
  408976:	int    0x11
  408978:	mov    cl,0xa7
  40897a:	retf   0xebca
  40897d:	int    0x20
  40897f:	xchg   DWORD PTR [ecx],esp
  408981:	pop    ebp
  408982:	fnstsw WORD PTR [ebx-0x3987584b]
  408988:	pop    eax
  408989:	sub    cl,ah
  40898b:	jo     0x4089bf
  40898d:	mov    ebx,0xe7a0a85c
  408992:	aaa    
  408993:	outs   dx,BYTE PTR ds:[esi]
  408994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408995:	fisubr WORD PTR [edx-0x46]
  408998:	adc    DWORD PTR [edi],0xffffff92
  40899b:	pusha  
  40899c:	mov    dh,dh
  40899e:	push   esi
  40899f:	jle    0x4089a4
  4089a1:	mov    eax,ds:0x706dbd5b
  4089a6:	fwait
  4089a7:	mov    ebp,0xa71116db
  4089ac:	jnp    0x4089ad
  4089ae:	fxam   
  4089b0:	clc    
  4089b1:	std    
  4089b2:	arpl   WORD PTR [ecx],bx
  4089b4:	loopne 0x4089de
  4089b6:	sbb    ebx,DWORD PTR [eax+0x2]
  4089b9:	pop    es
  4089ba:	test   BYTE PTR [eax],0x32
  4089bd:	adc    DWORD PTR ds:0xd8e37ceb,ebp
  4089c3:	hlt    
  4089c4:	or     DWORD PTR [edx-0x80],ebp
  4089c7:	push   es
  4089c8:	les    edi,FWORD PTR [eax]
  4089ca:	in     al,dx
  4089cb:	jecxz  0x40895b
  4089cd:	scas   eax,DWORD PTR es:[edi]
  4089ce:	sbb    DWORD PTR [edx+0x64],0xb8ccaf87
  4089d5:	loope  0x408a21
  4089d7:	dec    edi
  4089d8:	mov    al,BYTE PTR [edx+0x2f1c43c9]
  4089de:	and    BYTE PTR [ebx+eiz*1],dh
  4089e1:	and    dl,dl
  4089e3:	sub    edx,DWORD PTR [ecx]
  4089e5:	mov    ah,0x98
  4089e7:	pop    esp
  4089e8:	xchg   ebx,eax
  4089e9:	bound  edx,QWORD PTR [ebx+0x14]
  4089ec:	sub    eax,0x9c115ab2
  4089f1:	rol    DWORD PTR [ebx+0x7c],cl
  4089f4:	and    al,0xdc
  4089f6:	push   0xffffffc7
  4089f8:	popa   
  4089f9:	jns    0x4089ea
  4089fb:	daa    
  4089fc:	mov    WORD PTR [ecx+0x3d],ds
  4089ff:	in     eax,dx
  408a00:	and    ch,BYTE PTR [ebp+0x51f82bab]
  408a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a07:	jle    0x408a1b
  408a09:	inc    eax
  408a0a:	add    BYTE PTR [edx+0x3899076],cl
  408a10:	mov    dh,dl
  408a12:	pop    ebx
  408a13:	add    al,0xc0
  408a15:	mov    al,ds:0xdc5f8070
  408a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a1b:	fwait
  408a1c:	mov    bl,0xb8
  408a1e:	inc    ecx
  408a1f:	das    
  408a20:	ret    0x9682
  408a23:	xor    al,0x5
  408a25:	fsub   st(5),st
  408a27:	jmp    0xf6da:0x39e04c38
  408a2e:	ss inc edi
  408a30:	pop    ss
  408a31:	and    esp,DWORD PTR [ebp+0x63ca26d7]
  408a37:	push   cs
  408a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a39:	leave  
  408a3a:	jno    0x408a45
  408a3c:	dec    ecx
  408a3d:	jmp    0x8467:0xba07907
  408a44:	shl    DWORD PTR [esi+0x41],cl
  408a47:	fnstenv [ecx+ecx*2+0x5b1ddc95]
  408a4e:	jo     0x408a99
  408a50:	call   0xca92365d
  408a55:	or     bh,BYTE PTR [ecx]
  408a57:	cdq    
  408a58:	sbb    ebp,ebp
  408a5a:	push   edi
  408a5b:	xchg   edi,eax
  408a5c:	dec    edi
  408a5d:	push   esp
  408a5e:	push   esi
  408a5f:	loopne 0x408a5f
  408a61:	add    bl,BYTE PTR ds:0xe17ebf19
  408a67:	dec    eax
  408a68:	ss push cs
  408a6a:	(bad)  
  408a6c:	mov    ebp,0xc297bbd7
  408a71:	test   BYTE PTR [edx-0x377ccb05],cl
  408a77:	or     esi,esp
  408a79:	xor    DWORD PTR [esi+0x11],esi
  408a7c:	add    BYTE PTR [ebp+0x585ba443],al
  408a82:	fistp  WORD PTR [ecx]
  408a84:	inc    ebx
  408a85:	popa   
  408a86:	inc    esi
  408a87:	jns    0x408afa
  408a89:	mov    al,BYTE PTR ds:0x3d0728de
  408a8f:	mov    dh,0x6d
  408a91:	shr    BYTE PTR [eax+ecx*4],cl
  408a94:	mov    eax,0xbe687cf3
  408a99:	vmovd  DWORD PTR [esi-0x28a4f0bf],xmm6
  408aa1:	adc    bh,0x82
  408aa4:	call   0x99bad5bb
  408aa9:	fwait
  408aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aab:	(bad)  [ebp+0xede3045]
  408ab1:	jp     0x408b10
  408ab3:	mov    bl,0x4d
  408ab5:	cwde   
  408ab6:	sbb    ah,BYTE PTR [ecx+ecx*8-0x6a798b56]
  408abd:	enter  0x3fe6,0xa4
  408ac1:	loope  0x408b38
  408ac3:	jmp    0xf08dc067
  408ac8:	je     0x408ad9
  408aca:	jle    0x408b4a
  408acc:	cmp    BYTE PTR [eax+0x6],ch
  408acf:	ins    BYTE PTR es:[edi],dx
  408ad0:	inc    eax
  408ad1:	ror    DWORD PTR [ecx-0x10],1
  408ad4:	leave  
  408ad5:	repnz sub eax,0x20ba29e2
  408adb:	xor    edx,DWORD PTR [ebp+ecx*2-0xeef21]
  408ae2:	push   ecx
  408ae3:	(bad)  [edi]
  408ae5:	call   0xd874:0x415f58ea
  408aec:	mov    ah,0xfd
  408aee:	fldenv [edi+ebp*8-0x8]
  408af2:	jns    0x408a85
  408af4:	out    dx,al
  408af5:	add    eax,0x7c8cf959
  408afa:	ss cmc 
  408afc:	jnp    0x408b11
  408afe:	adc    DWORD PTR [ebx],esi
  408b00:	push   es
  408b01:	(bad)  
  408b02:	jb     0x408acf
  408b04:	jbe    0x408b22
  408b06:	aam    0x31
  408b08:	test   BYTE PTR [ebx+eiz*2+0x312376b8],cl
  408b0f:	or     eax,DWORD PTR [ebx+0x30375e39]
  408b15:	push   esi
  408b16:	mov    ss,WORD PTR [ebx+0x5f]
  408b19:	pushf  
  408b1a:	dec    esi
  408b1b:	daa    
  408b1c:	rcl    DWORD PTR [edi],0x54
  408b1f:	sbb    eax,0xcbe18f21
  408b24:	int    0x49
  408b26:	mov    bh,0x2a
  408b28:	xor    ecx,DWORD PTR ds:0xb0e90c2d
  408b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b2f:	ret    0x6980
  408b32:	fs push es
  408b34:	imul   edi,DWORD PTR [edi+0x569846e6],0xffffffdc
  408b3b:	cmp    bh,bh
  408b3d:	mov    bl,0x8
  408b3f:	mov    WORD PTR [edx-0x5c],?
  408b42:	loope  0x408b5a
  408b44:	mov    bl,0x2d
  408b46:	jg     0x408b99
  408b48:	or     ecx,DWORD PTR [eax]
  408b4a:	loop   0x408b8c
  408b4c:	inc    edx
  408b4d:	cli    
  408b4e:	mov    dh,0xd1
  408b50:	jns    0x408bc9
  408b52:	mov    ds:0x573e3ad9,eax
  408b57:	cmp    al,0x27
  408b59:	xchg   ebx,eax
  408b5a:	dec    ecx
  408b5b:	jge    0x408b1d
  408b5d:	pop    esp
  408b5e:	out    0xba,eax
  408b60:	add    eax,0x88ec23ac
  408b65:	mov    ah,0x92
  408b67:	jmp    0xca7af4a1
  408b6c:	ins    DWORD PTR es:[edi],dx
  408b6d:	and    al,0xff
  408b70:	inc    esi
  408b71:	das    
  408b72:	je     0x408b67
  408b74:	sub    BYTE PTR [edi-0x25],0x75
  408b78:	mov    eax,ds:0x62f2cb26
  408b7d:	outs   dx,BYTE PTR ds:[esi]
  408b7e:	mov    ebp,0xc1b71b4a
  408b83:	rcr    ebx,cl
  408b85:	mov    eax,0xa6b9673f
  408b8a:	rep stos BYTE PTR es:[edi],al
  408b8c:	adc    DWORD PTR [ebx-0x6d],ebx
  408b8f:	in     al,0xbb
  408b91:	sub    BYTE PTR [edx+0x42],dl
  408b94:	mov    WORD PTR [eax+0xa1a5298],ds
  408b9a:	fwait
  408b9b:	mov    ecx,0x6b04e8f7
  408ba0:	fs mov dl,0xe
  408ba3:	imul   ebx,DWORD PTR cs:[ebp+0x6e],0x92587324
  408bab:	mov    ch,0xd0
  408bad:	loope  0x408b97
  408baf:	pop    esp
  408bb0:	fnstsw WORD PTR [esi+edx*2]
  408bb3:	inc    esi
  408bb4:	jge    0x408bba
  408bb6:	loop   0x408c34
  408bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb9:	xor    BYTE PTR [ecx-0x45334be6],0xea
  408bc0:	push   esp
  408bc1:	test   al,0x0
  408bc3:	and    ebx,eax
  408bc5:	add    ch,BYTE PTR [ecx-0xa]
  408bc8:	stos   DWORD PTR es:[edi],eax
  408bc9:	pop    es
  408bca:	mov    bl,0x6e
  408bcc:	sub    al,0xc8
  408bce:	clc    
  408bcf:	std    
  408bd0:	mov    edi,DWORD PTR [edi+0x6b9cc903]
  408bd6:	nop
  408bd7:	mov    al,0x3a
  408bda:	mov    dl,BYTE PTR [edi]
  408bdc:	jmp    0xfe2ad2ba
  408be1:	rol    BYTE PTR [edi-0xf],0x28
  408be5:	jns    0x408c41
  408be7:	mov    edx,0x1b71d26
  408bec:	xchg   esp,eax
  408bed:	test   esi,edi
  408bef:	lea    esp,[eax+ebp*2-0x6e160952]
  408bf6:	mov    cl,al
  408bf8:	aas    
  408bf9:	jae    0x408bfc
  408bfb:	cli    
  408bfc:	fsubr  st(1),st
  408bfe:	fstp   TBYTE PTR [eax-0x7550a406]
  408c04:	fist   DWORD PTR [esi+0x7c]
  408c07:	aaa    
  408c08:	shl    DWORD PTR [edx-0x2caafa5b],0xe7
  408c0f:	sub    ch,BYTE PTR [ebp-0xf]
  408c12:	xor    eax,esp
  408c14:	inc    ebp
  408c15:	stos   BYTE PTR es:[edi],al
  408c16:	icebp  
  408c17:	and    BYTE PTR [ebp+edx*8-0x58d2f231],bl
  408c1e:	cmp    DWORD PTR [edx-0x48],0x6f430191
  408c25:	mov    cl,0x20
  408c27:	ins    BYTE PTR es:[edi],dx
  408c28:	test   eax,0x45472ff9
  408c2e:	cmp    edi,DWORD PTR [ebp+0x64]
  408c31:	mov    ?,WORD PTR [esi]
  408c33:	outs   dx,BYTE PTR ds:[esi]
  408c34:	fmul   DWORD PTR [edx+0x1e82d5b0]
  408c3a:	pop    eax
  408c3b:	ret    0xd034
  408c3e:	pushf  
  408c3f:	ins    BYTE PTR es:[edi],dx
  408c40:	stc    
  408c41:	das    
  408c42:	repz sub ebp,esp
  408c45:	mov    esp,0xb23f8cc3
  408c4a:	call   0x7b20d58b
  408c4f:	(bad)  
  408c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c51:	ret    0x85fa
  408c54:	mov    ch,0xeb
  408c56:	pop    esp
  408c57:	sub    eax,0x532fe4e
  408c5c:	push   ds
  408c5d:	in     al,dx
  408c5e:	mov    DWORD PTR [eax],esp
  408c60:	inc    ebp
  408c61:	dec    ebx
  408c62:	sbb    DWORD PTR [eax+esi*8],0x3d7f42f4
  408c69:	aam    0xeb
  408c6b:	or     DWORD PTR [ebx-0x9],esi
  408c6e:	neg    ecx
  408c70:	xor    eax,0x89e7e352
  408c75:	aaa    
  408c76:	(bad)  
  408c77:	clc    
  408c78:	fsubr  st,st(6)
  408c7a:	xchg   ebp,ebx
  408c7c:	inc    ecx
  408c7d:	enter  0xfa73,0xa1
  408c81:	cmp    DWORD PTR [edx+esi*8-0x46],0x5d8bf4f7
  408c89:	in     eax,0x25
  408c8b:	cdq    
  408c8c:	and    bh,BYTE PTR [eax]
  408c8e:	mov    dh,0x6c
  408c90:	(bad)  
  408c91:	dec    esp
  408c92:	fwait
  408c93:	sahf   
  408c94:	mov    edi,0xed5e9838
  408c99:	pop    eax
  408c9a:	jge    0x408c7e
  408c9c:	push   ss
  408c9d:	pusha  
  408c9e:	test   DWORD PTR [ebp+0x6bac429e],ebp
  408ca4:	jb     0x408c3a
  408ca6:	ret    
  408ca7:	pop    ecx
  408ca8:	sar    BYTE PTR [bx+di+0xe],1
  408cac:	outs   dx,BYTE PTR ds:[esi]
  408cad:	inc    ecx
  408cae:	call   0x8ca6f72a
  408cb3:	add    bl,BYTE PTR ds:0xf1bcc27c
  408cb9:	sub    BYTE PTR [ebp-0x33],dl
  408cbc:	add    eax,0xd614e733
  408cc1:	lods   eax,DWORD PTR ds:[esi]
  408cc2:	icebp  
  408cc3:	shr    BYTE PTR [ebp+0x15],cl
  408cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc7:	push   edx
  408cc8:	bound  ebp,QWORD PTR [ebx+0x13]
  408ccb:	xchg   ebp,eax
  408ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ccd:	or     DWORD PTR [ecx+ebx*1-0x5],0xfffffffd
  408cd2:	popa   
  408cd3:	in     eax,0xa8
  408cd5:	pop    edi
  408cd6:	pusha  
  408cd7:	fmul   QWORD PTR [esi+0x13]
  408cda:	and    DWORD PTR [eax+0x4232baab],edi
  408ce0:	repnz loopne 0x408cc3
  408ce3:	add    al,0xa6
  408ce5:	mov    eax,ds:0x13c9b439
  408cea:	sbb    ecx,DWORD PTR [ecx]
  408cec:	add    al,0xa7
  408cee:	inc    esp
  408cef:	enter  0x1c3d,0xae
  408cf3:	and    edi,DWORD PTR [ecx-0x3434e5af]
  408cf9:	sub    bh,BYTE PTR [edx-0x2]
  408cfc:	xor    edi,edi
  408cfe:	push   ebp
  408cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d00:	cmp    ebp,edi
  408d02:	stc    
  408d03:	and    ch,BYTE PTR [esp+eax*2]
  408d06:	jb     0x408c95
  408d08:	(bad)  
  408d09:	jae    0x408cc2
  408d0b:	or     al,0x84
  408d0d:	ror    esi,cl
  408d0f:	imul   esp,eax,0xffffff9a
  408d12:	xor    bh,BYTE PTR [ecx-0x51ebe53d]
  408d18:	aaa    
  408d19:	sbb    edi,DWORD PTR [ecx-0x7fe310e5]
  408d1f:	rcr    BYTE PTR [eax*4+0x1787325a],1
  408d26:	dec    eax
  408d27:	mov    BYTE PTR [edx+0x4a],0x64
  408d2b:	das    
  408d2c:	jno    0x408d42
  408d2e:	rcl    BYTE PTR [ebx-0x2e],0x9c
  408d32:	sbb    al,0xe8
  408d34:	iret   
  408d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d36:	ja     0x408d25
  408d38:	inc    edi
  408d39:	xor    ah,bl
  408d3b:	push   ebx
  408d3c:	pushf  
  408d3d:	push   edx
  408d3e:	aaa    
  408d3f:	es add dh,bh
  408d42:	push   es
  408d43:	cmp    eax,eax
  408d45:	mov    ah,0x0
  408d47:	mov    esp,0xfcee0d5c
  408d4c:	adc    ebx,DWORD PTR [edi]
  408d4e:	out    dx,eax
  408d4f:	into   
  408d50:	test   al,0xc3
  408d52:	mov    eax,ds:0x384b1896
  408d57:	or     esi,DWORD PTR [ecx+0x69]
  408d5a:	ins    BYTE PTR es:[edi],dx
  408d5b:	fstp   QWORD PTR [ebx+0x27dd3f6a]
  408d61:	pop    ebp
  408d62:	inc    edx
  408d63:	ja     0x408cec
  408d65:	or     al,0x2b
  408d67:	clc    
  408d68:	(bad)  
  408d69:	repnz push ebx
  408d6b:	repnz pop eax
  408d6d:	dec    edx
  408d6e:	(bad)  
  408d70:	adc    BYTE PTR [edx+0x34],0x4e
  408d74:	js     0x408d81
  408d76:	inc    edx
  408d77:	pop    es
  408d78:	cmp    esi,edx
  408d7a:	std    
  408d7b:	jne    0x408d79
  408d7d:	bound  ebx,QWORD PTR [eax]
  408d7f:	sub    al,0xda
  408d81:	cld    
  408d82:	test   eax,0x26cd53de
  408d87:	xor    ebx,DWORD PTR [eax-0x60]
  408d8a:	mov    ebx,0xfe4298df
  408d8f:	xor    al,0x4c
  408d91:	mov    esi,edx
  408d93:	xor    eax,0x16ea0f37
  408d98:	loope  0x408de5
  408d9a:	jnp    0x408dcd
  408d9c:	inc    ebp
  408d9d:	inc    esi
  408d9e:	(bad)  
  408d9f:	out    0x23,al
  408da1:	stos   BYTE PTR es:[edi],al
  408da2:	inc    esi
  408da3:	es call 0xaa59d5c6
  408da9:	lock cmp bl,dh
  408dac:	std    
  408dad:	out    0x84,al
  408daf:	xchg   esp,eax
  408db0:	push   ecx
  408db1:	inc    esp
  408db2:	mov    edi,0x46b7104b
  408db7:	dec    ecx
  408db8:	cs mov dh,0x7f
  408dbb:	dec    esi
  408dbc:	sub    al,0xa3
  408dbe:	lea    ebp,[esi-0x5a6f85bd]
  408dc4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408dc6:	sub    ecx,DWORD PTR [ecx+0x3dc1eac5]
  408dcc:	imul   ebp,esp,0xf4ebea1f
  408dd2:	lea    ebx,[esi+ecx*2-0x5ad2e8ea]
  408dd9:	std    
  408dda:	jl     0x408ddc
  408ddc:	cmp    BYTE PTR [ebx+0x30396a9],0x53
  408de3:	cmp    edx,ebp
  408de5:	pop    edx
  408de6:	or     DWORD PTR [ebp-0x6c],0x45fa8faf
  408ded:	addr16 js 0x408d88
  408df0:	lds    ebp,FWORD PTR ss:[ebp-0x1d072b5]
  408df7:	xor    cl,dh
  408df9:	cli    
  408dfa:	mov    bl,0x40
  408dfc:	xchg   ebx,eax
  408dfd:	xchg   esi,eax
  408dfe:	sub    al,0xb7
  408e00:	jo     0x408e29
  408e02:	or     DWORD PTR [edx],ebx
  408e04:	scas   eax,DWORD PTR es:[edi]
  408e05:	es jg  0x408e3b
  408e08:	inc    esp
  408e09:	js     0x408da2
  408e0b:	(bad)  
  408e0c:	jmp    0x408e2e
  408e0e:	cli    
  408e0f:	out    0xf3,al
  408e11:	sbb    al,BYTE PTR [edx-0x24]
  408e14:	dec    eax
  408e15:	mov    edi,0x985482fc
  408e1a:	mov    esp,0x395ae6ce
  408e1f:	pusha  
  408e20:	or     dh,BYTE PTR [esi+0x5d]
  408e23:	ds push 0x5a54f5d4
  408e29:	jno    0x408e2e
  408e2b:	sub    ch,BYTE PTR ds:0x826197c6
  408e31:	xchg   ecx,eax
  408e32:	test   al,0x42
  408e34:	mul    ebx
  408e36:	enter  0xc53b,0x92
  408e3a:	fwait
  408e3b:	dec    edx
  408e3c:	arpl   WORD PTR [edi-0x29],dx
  408e3f:	jg     0x408dd4
  408e41:	inc    ebp
  408e42:	mov    ecx,0x8d8322fb
  408e47:	push   ds
  408e48:	mov    ds:0x43b2f6,eax
  408e4d:	ror    WORD PTR [edx+ebp*2],cl
  408e51:	pop    ecx
  408e52:	fcom   QWORD PTR [eax-0x3cdf0bce]
  408e58:	cmp    al,0x20
  408e5a:	adc    al,0xa
  408e5c:	cmp    ebp,DWORD PTR [edx+0x596526f1]
  408e62:	xchg   edx,eax
  408e63:	pmullw mm2,QWORD PTR [esi+ebx*4]
  408e67:	pop    esi
  408e68:	jg     0x408e4d
  408e6a:	xor    cl,ah
  408e6c:	inc    ebp
  408e6d:	push   ecx
  408e6e:	into   
  408e6f:	mov    ch,BYTE PTR [eax+ebp*4]
  408e72:	sbb    eax,0xe6ebad97
  408e77:	sbb    DWORD PTR [edi],edi
  408e79:	fistp  QWORD PTR ss:[ebx+0x2d]
  408e7d:	or     DWORD PTR [edi+0x4e36a673],0xc3713f81
  408e87:	call   FWORD PTR [ebp-0x4b]
  408e8a:	test   edi,ecx
  408e8c:	push   ecx
  408e8d:	pop    edx
  408e8e:	pop    edi
  408e8f:	cmp    ebx,DWORD PTR [edi-0x43886a9a]
  408e95:	(bad)  
  408e96:	and    BYTE PTR [edi+0x6469ed45],bl
  408e9c:	mov    ah,0x72
  408e9e:	cmp    esp,DWORD PTR [ebx]
  408ea0:	push   ebp
  408ea1:	mov    esp,0xcadf9b90
  408ea6:	inc    ebp
  408ea7:	fwait
  408ea8:	jge    0x408ef9
  408eaa:	addr16 dec bp
  408ead:	push   es
  408eae:	jno    0x408eba
  408eb0:	sbb    ch,BYTE PTR [ecx]
  408eb2:	lods   al,BYTE PTR ds:[esi]
  408eb3:	ret    
  408eb4:	gs sbb eax,0xd3325220
  408eba:	fs sbb eax,0x436dc173
  408ec0:	out    0x1a,eax
  408ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec3:	cmp    eax,DWORD PTR [esi-0x4d]
  408ec6:	push   ss
  408ec7:	leave  
  408ec8:	push   esp
  408ec9:	int3   
  408eca:	mov    edi,0x168bec4b
  408ecf:	std    
  408ed0:	inc    esp
  408ed1:	(bad)  
  408ed2:	xor    edx,DWORD PTR [edx+0x58e2a128]
  408ed8:	lods   al,BYTE PTR ds:[esi]
  408ed9:	xchg   DWORD PTR ds:0x6016d298,edi
  408edf:	scas   eax,DWORD PTR es:[edi]
  408ee0:	sub    ah,BYTE PTR [ecx]
  408ee2:	daa    
  408ee3:	gs push 0x7d
  408ee6:	bound  ebx,QWORD PTR [eax+0x48]
  408ee9:	mov    bh,0x5f
  408eeb:	pop    edi
  408eec:	loopne 0x408eac
  408eee:	imul   DWORD PTR [ebp+0x3]
  408ef1:	add    dh,0x9c
  408ef4:	mov    bl,0x5
  408ef6:	mov    ds:0xb7f1ff17,al
  408efb:	and    eax,0x60d11f91
  408f00:	inc    edi
  408f01:	shl    BYTE PTR [ebx],0xdc
  408f04:	and    al,cl
  408f06:	mov    cl,0x3e
  408f08:	ins    BYTE PTR es:[edi],dx
  408f09:	enter  0x8f4,0xe8
  408f0d:	loop   0x408f2e
  408f0f:	shl    ah,1
  408f11:	(bad)  
  408f12:	jmp    0x408f55
  408f14:	push   esi
  408f15:	mov    al,0xd7
  408f17:	les    eax,FWORD PTR [eax]
  408f19:	xor    al,0xb9
  408f1b:	jne    0x408f2b
  408f1d:	xchg   esi,eax
  408f1e:	add    eax,0x5b388ee0
  408f23:	fstp   DWORD PTR [edi-0x5c]
  408f26:	icebp  
  408f27:	pop    ss
  408f28:	std    
  408f29:	addr16 pop ebp
  408f2b:	aas    
  408f2c:	cmc    
  408f2d:	xor    ch,BYTE PTR [ebp-0x31863f89]
  408f33:	in     eax,dx
  408f34:	imul   eax,ebp,0x56
  408f37:	aad    0x12
  408f39:	(bad)  
  408f3a:	std    
  408f3b:	call   0x9c4a:0x4645c2
  408f42:	mov    esp,0xafe6e773
  408f47:	jecxz  0x408f73
  408f49:	sbb    eax,0x2ea8efb9
  408f4e:	test   dl,ah
  408f50:	cmp    edx,0xfffffff2
  408f53:	sahf   
  408f54:	and    DWORD PTR [eax+0x707a0c6a],edi
  408f5a:	je     0x408fd7
  408f5c:	push   0xf0e13890
  408f61:	push   ecx
  408f62:	sub    esp,DWORD PTR [edi+0x3b54a9ee]
  408f68:	sbb    eax,0xeb1691fc
  408f6d:	rcr    DWORD PTR [edx],0xa5
  408f70:	add    ebx,DWORD PTR [eax+0x55581202]
  408f76:	push   ebx
  408f77:	retf   
  408f78:	adc    eax,0x9155c092
  408f7d:	cmp    eax,0x4783100d
  408f82:	sub    eax,0xd884a317
  408f87:	fistp  QWORD PTR [eax-0x52]
  408f8a:	cwde   
  408f8b:	test   DWORD PTR [ebx+ebx*8-0x4e],edx
  408f8f:	sub    dl,BYTE PTR [esi]
  408f91:	nop
  408f92:	lods   eax,DWORD PTR ds:[esi]
  408f93:	lahf   
  408f94:	repnz shl DWORD PTR [ecx-0x78b65675],0x35
  408f9c:	push   0xcf232e5b
  408fa1:	imul   ebx,DWORD PTR [edx+0x61093ab4],0xcc8fe3da
  408fab:	mov    esp,ebx
  408fad:	adc    BYTE PTR [eax-0x13],bh
  408fb0:	sbb    DWORD PTR [edi],eax
  408fb2:	sbb    cl,BYTE PTR [ecx]
  408fb4:	mov    edi,0x3b987f97
  408fb9:	adc    al,BYTE PTR [ebp-0x30fe9e19]
  408fbf:	shl    BYTE PTR [edi],1
  408fc1:	push   0xa77b5307
  408fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc7:	mov    edx,0xd90f9af7
  408fcc:	xchg   edx,eax
  408fcd:	mov    edx,0x768229f0
  408fd2:	call   DWORD PTR [eax-0x1e]
  408fd5:	mov    bl,0xb8
  408fd7:	sub    al,0x2d
  408fd9:	sahf   
  408fda:	out    dx,al
  408fdb:	fcomp  DWORD PTR [edx-0x713a0150]
  408fe1:	jmp    FWORD PTR [esi]
  408fe3:	call   0xd090:0x5c285db6
  408fea:	adc    al,0xae
  408fec:	stc    
  408fed:	mov    eax,0x8f16a009
  408ff2:	dec    edx
  408ff3:	mov    bl,0x80
  408ff5:	dec    edi
  408ff6:	mov    al,0x54
  408ff8:	push   0xffffffd6
  408ffa:	outs   dx,BYTE PTR ds:[esi]
  408ffb:	xchg   esp,eax
  408ffc:	sub    ebx,ecx
  408ffe:	push   ds
  408fff:	ds ins BYTE PTR es:[edi],dx
  409001:	jle    0x408fea
  409003:	xor    eax,0x23a9b782
  409008:	or     DWORD PTR [edi],0xfffffffb
  40900b:	sbb    al,0x9a
  40900d:	jmp    0x3d598ba4
  409012:	call   0xed06cc66
  409017:	in     eax,dx
  409018:	jl     0x409040
  40901a:	pop    esi
  40901b:	sbb    dh,BYTE PTR ds:0xaddaa0a8
  409021:	sub    ch,ch
  409023:	cld    
  409024:	(bad)  
  409025:	cmp    eax,0x25f3524c
  40902a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902b:	loope  0x408fe6
  40902d:	aad    0xb4
  40902f:	and    DWORD PTR [ebx+ebp*2-0x5b],ecx
  409033:	inc    ebp
  409034:	inc    esi
  409035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409036:	and    BYTE PTR [eax],bl
  409038:	push   cs
  409039:	fldenv [ebp+eax*4+0x66]
  40903d:	dec    edi
  40903e:	pop    ebx
  40903f:	fs loop 0x409054
  409042:	lods   al,BYTE PTR ds:[esi]
  409043:	jbe    0x408fe9
  409045:	mul    DWORD PTR [edi+0xa8c67b]
  40904b:	jne    0x40902d
  40904d:	(bad)  
  40904e:	(bad)  
  40904f:	fmul   QWORD PTR [edi]
  409051:	iret   
  409052:	mov    al,gs:0x9c8fe299
  409058:	aaa    
  409059:	add    esi,DWORD PTR [ebx]
  40905b:	idiv   DWORD PTR [ecx+0x48]
  40905e:	sbb    esp,DWORD PTR [eax-0x101df09d]
  409064:	or     eax,0x13930f3
  409069:	ja     0x408fed
  40906b:	dec    edi
  40906c:	mov    WORD PTR [edx+0x48],es
  40906f:	pop    ebx
  409070:	inc    ebp
  409071:	in     eax,dx
  409072:	push   0x25f5639e
  409077:	jno    0x40903d
  409079:	pushaw 
  40907b:	mov    cl,ah
  40907d:	fsubr  st(0),st
  40907f:	(bad)  
  409080:	and    esi,edx
  409082:	xchg   esi,eax
  409083:	sbb    DWORD PTR [edi-0x3aa48be0],0x8af04f6f
  40908d:	dec    ebx
  40908e:	xchg   DWORD PTR [edx-0x7b98665a],edx
  409094:	leave  
  409095:	xlat   BYTE PTR ds:[ebx]
  409096:	mov    ?,WORD PTR ds:0x65074606
  40909c:	stos   DWORD PTR es:[edi],eax
  40909d:	cmp    al,0x59
  40909f:	hlt    
  4090a0:	and    ebx,DWORD PTR [edi+0x60]
  4090a3:	add    eax,0x3a4b225e
  4090a8:	shr    BYTE PTR gs:[ebx-0x54],1
  4090ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ad:	retf   
  4090ae:	inc    eax
  4090af:	xor    eax,DWORD PTR [eax]
  4090b1:	xchg   esp,esp
  4090b3:	pop    es
  4090b4:	arpl   WORD PTR [edi+0x6ad0a1fc],si
  4090ba:	(bad)  
  4090bb:	cmp    eax,ebx
  4090bd:	xchg   ah,bl
  4090bf:	dec    eax
  4090c0:	repz icebp 
  4090c2:	push   esi
  4090c3:	adc    edx,DWORD PTR [eax]
  4090c5:	xchg   ebx,eax
  4090c6:	or     DWORD PTR [esi+0x60],ecx
  4090c9:	call   0xfd87:0x89abcccf
  4090d0:	pop    ebx
  4090d1:	mov    ch,0x7a
  4090d3:	sti    
  4090d4:	pop    es
  4090d5:	lods   al,BYTE PTR ds:[esi]
  4090d6:	and    esp,DWORD PTR [eax-0x1f1fd713]
  4090dc:	lahf   
  4090dd:	fcmove st,st(4)
  4090df:	lods   eax,DWORD PTR ds:[esi]
  4090e0:	inc    edx
  4090e1:	ret    
  4090e2:	popf   
  4090e3:	mov    ch,0xf9
  4090e5:	(bad)  
  4090e6:	fwait
  4090e7:	jbe    0x409099
  4090e9:	mov    esp,0x1239dab7
  4090ee:	inc    edi
  4090ef:	push   ss
  4090f0:	jmp    0x409124
  4090f2:	adc    DWORD PTR [ebx-0x348f9c34],edx
  4090f8:	shl    BYTE PTR [ebx-0x1cff69ea],cl
  4090fe:	pop    eax
  4090ff:	push   0x1a911d66
  409104:	sbb    ebx,DWORD PTR ds:0xdf91a21c
  40910a:	inc    ebx
  40910c:	jge    0x4090e9
  40910e:	je     0x40912f
  409110:	arpl   WORD PTR [esi-0x1161fcdf],sp
  409116:	retf   
  409117:	xchg   ecx,eax
  409118:	or     eax,0x68ac078e
  40911d:	pop    ss
  40911e:	push   cs
  40911f:	xor    eax,0x5e47c293
  409124:	nop
  409125:	xor    cl,BYTE PTR [ecx-0x4c]
  409128:	ficom  DWORD PTR [eax]
  40912a:	or     al,0x71
  40912c:	sbb    eax,0x3aff9237
  409131:	cmp    eax,0x5e4ef5a2
  409136:	cmp    al,0xae
  409138:	rcl    BYTE PTR [eax+0x3e],1
  40913b:	mov    ebp,0xa15806bd
  409140:	call   0xf1ed:0x1b76f845
  409147:	mov    esi,0x305af022
  40914c:	shl    BYTE PTR [edx+0x2b2bca1b],1
  409152:	or     DWORD PTR [edi-0x5],0xffffffd8
  409156:	stos   DWORD PTR es:[edi],eax
  409157:	cmp    dl,BYTE PTR [esi+0x47e0dc68]
  40915d:	fiadd  WORD PTR [edi-0x231714f0]
  409163:	xlat   BYTE PTR ds:[ebx]
  409164:	pop    ss
  409165:	and    esp,ecx
  409167:	adc    esi,DWORD PTR ds:0x230e40d
  40916d:	ret    
  40916e:	adc    al,0x3d
  409170:	cmp    al,0xb
  409172:	dec    eax
  409173:	add    eax,edx
  409175:	jle    0x4091eb
  409177:	and    al,BYTE PTR ds:0x154a5789
  40917d:	(bad)  
  40917e:	repz scas al,BYTE PTR es:[edi]
  409180:	xchg   edx,eax
  409181:	cmp    al,0x3b
  409183:	sti    
  409184:	outs   dx,BYTE PTR ds:[esi]
  409185:	and    dl,BYTE PTR [eax-0x1a85174b]
  40918b:	push   esp
  40918c:	fld    TBYTE PTR [esi-0x78]
  40918f:	mov    cl,0xea
  409191:	repnz sbb edx,DWORD PTR [ebp+edi*1-0x26]
  409196:	jo     0x40914e
  409198:	or     al,0xfd
  40919a:	lock daa 
  40919c:	lea    eax,[eax-0x1580efe9]
  4091a2:	or     DWORD PTR [ebx-0x30],esi
  4091a5:	xchg   esp,eax
  4091a6:	mov    bh,0x7c
  4091a8:	mov    edi,0x44dc734f
  4091ad:	ja     0x4091dd
  4091af:	push   ds
  4091b0:	push   edi
  4091b1:	ins    BYTE PTR es:[edi],dx
  4091b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b3:	imul   edi,DWORD PTR [edi+0x3ae7fbe5],0xbc002218
  4091bd:	cmp    esi,edx
  4091bf:	add    esp,edi
  4091c1:	out    dx,al
  4091c2:	jmp    0x4091b3
  4091c4:	es xchg esp,eax
  4091c6:	(bad)  
  4091c7:	xchg   esp,eax
  4091c8:	push   0x37
  4091ca:	dec    eax
  4091cb:	sbb    esp,DWORD PTR [ecx+0x6]
  4091ce:	test   BYTE PTR [edi+edx*4-0x3b49548e],dl
  4091d5:	xchg   ebp,eax
  4091d6:	xor    BYTE PTR [esi+ebx*8-0x75],dl
  4091da:	in     eax,dx
  4091db:	jb     0x4091e8
  4091dd:	xor    dh,BYTE PTR [esi-0x436c0c09]
  4091e3:	test   BYTE PTR [esi-0x1fa4a2de],ah
  4091e9:	sbb    ah,BYTE PTR [ebp+ebp*1+0x23a56aa5]
  4091f0:	xchg   esp,eax
  4091f1:	daa    
  4091f2:	push   ebx
  4091f3:	jecxz  0x4091ba
  4091f5:	cli    
  4091f6:	je     0x409209
  4091f8:	xor    esi,DWORD PTR [eax+0x0]
  4091fb:	fcomi  st,st(7)
  4091fd:	push   cs
  4091fe:	sub    dh,BYTE PTR [ebx-0x53fb8753]
  409204:	adc    esp,DWORD PTR ds:0x916c8331
  40920a:	test   edx,edx
  40920c:	lock mov ebx,DWORD PTR [esi]
  40920f:	shl    BYTE PTR [edx+eiz*1-0x4909cfcd],0xa1
  409217:	imul   edi,DWORD PTR [edx+0x5e31bfc5],0xffffffcc
  40921e:	js     0x4091e0
  409220:	ds loopne 0x4091e1
  409223:	inc    ebp
  409224:	je     0x4091fd
  409226:	push   esp
  409227:	push   edi
  409228:	inc    edx
  409229:	fidivr WORD PTR [ebx]
  40922b:	pop    eax
  40922c:	in     al,0x2e
  40922e:	jae    0x40925f
  409230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409231:	mov    esp,0x4ecceded
  409236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409237:	xchg   edi,eax
  409238:	mov    ebx,0xb8a1f441
  40923d:	xchg   ecx,eax
  40923e:	or     eax,0x4e8d1aa7
  409243:	xlat   BYTE PTR ds:[ebx]
  409244:	xchg   ebp,eax
  409245:	and    DWORD PTR [edx-0x2b0c8049],edi
  40924b:	lods   al,BYTE PTR ds:[esi]
  40924c:	idiv   BYTE PTR [eax-0x1e722442]
  409252:	inc    ch
  409254:	dec    eax
  409255:	dec    esi
  409256:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409258:	mov    eax,0xf8c186a3
  40925d:	in     eax,dx
  40925e:	fst    DWORD PTR [ebx]
  409260:	sub    eax,0x73e0eb10
  409265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409267:	dec    ebp
  409268:	ret    0x5d74
  40926b:	add    esp,DWORD PTR [esi]
  40926d:	stc    
  40926e:	sti    
  40926f:	outs   dx,DWORD PTR ds:[esi]
  409270:	retf   
  409271:	xchg   edi,eax
  409272:	repnz pop ecx
  409274:	sahf   
  409275:	les    ebx,FWORD PTR [ebx]
  409277:	mov    ch,0x3e
  409279:	sbb    edx,DWORD PTR [ebx-0x1be928f6]
  40927f:	xchg   ebx,eax
  409280:	push   esi
  409281:	cs cwde 
  409283:	aam    0x47
  409285:	pop    ds
  409286:	mov    cl,0x3
  409288:	lahf   
  409289:	add    DWORD PTR [ecx],esi
  40928b:	cmp    cl,cl
  40928d:	je     0x409260
  40928f:	out    0x3b,al
  409291:	aas    
  409292:	ja     0x40923d
  409294:	ja     0x409241
  409296:	or     bl,0x61
  409299:	hlt    
  40929a:	push   ds
  40929b:	adc    BYTE PTR [edx-0x78],cl
  40929e:	arpl   WORD PTR [ebx+eiz*1-0x2b8f7262],ax
  4092a5:	mov    esi,0x53b690e2
  4092aa:	xor    ecx,DWORD PTR fs:[ecx-0x4d]
  4092ae:	out    dx,eax
  4092af:	add    DWORD PTR ds:0x68010d48,0xfffffff0
  4092b6:	mov    ah,0x9f
  4092b8:	inc    edi
  4092b9:	pushf  
  4092ba:	test   al,0x69
  4092bc:	ftst   
  4092be:	in     al,dx
  4092bf:	inc    eax
  4092c0:	mov    dh,0xe8
  4092c2:	inc    ebx
  4092c3:	je     0x4092dd
  4092c5:	push   eax
  4092c6:	call   0x88eb23b2
  4092cb:	mov    eax,ds:0x54d376e3
  4092d0:	mov    ecx,0xe76d9537
  4092d5:	add    DWORD PTR [ebx-0x36e4225c],ecx
  4092db:	fldenv [edx-0x3de42b54]
  4092e1:	out    dx,al
  4092e2:	leave  
  4092e3:	jl     0x4092d6
  4092e5:	retf   0xc5c5
  4092e8:	or     DWORD PTR [edi+eax*8+0x2a302ebd],0x7ac6e6f
  4092f3:	dec    edx
  4092f4:	xchg   BYTE PTR [esi+0x37142091],dl
  4092fa:	int    0x90
  4092fc:	sbb    DWORD PTR [edi-0x262a1207],edi
  409302:	ds clc 
  409304:	push   eax
  409305:	cmp    BYTE PTR [edi-0x95c126],dh
  40930b:	sbb    eax,0xcf99b403
  409310:	pop    ds
  409311:	pop    esi
  409312:	xor    BYTE PTR [ecx+0x7f],ch
  409315:	ins    BYTE PTR es:[edi],dx
  409316:	loopne 0x409384
  409318:	mov    esi,0xf3a50a3
  40931d:	aad    0xaf
  40931f:	ja     0x409380
  409321:	pop    ebp
  409322:	jmp    FWORD PTR ds:[edi]
  409325:	and    ebx,esi
  409327:	xor    DWORD PTR [edi-0x18e02728],ebx
  40932d:	imul   esp,DWORD PTR ds:0x2a318072,0xd4522d69
  409337:	aas    
  409338:	pushf  
  409339:	ret    0x7acc
  40933c:	add    ch,BYTE PTR [ebp+0x2f0c6144]
  409342:	stc    
  409343:	daa    
  409344:	dec    edx
  409345:	mov    eax,ds:0x924ce595
  40934a:	mov    esp,0x825e7e04
  40934f:	bound  ebp,QWORD PTR [ebx]
  409351:	fdivr  st(2),st
  409353:	pop    ebp
  409354:	xchg   esp,eax
  409355:	push   ebx
  409356:	cli    
  409357:	out    0xfd,al
  409359:	xor    DWORD PTR [ebx+0x4a],0xf1eda05e
  409360:	xor    ecx,ecx
  409362:	mov    esi,0x1eb79940
  409367:	or     ch,BYTE PTR [edi+0x535540b5]
  40936d:	pop    ebx
  40936e:	add    al,0x29
  409370:	lock in al,0x16
  409373:	push   ss
  409374:	mov    dl,0xb6
  409376:	xchg   edi,eax
  409377:	pop    ecx
  409378:	xchg   DWORD PTR [ecx-0x48],ebp
  40937b:	das    
  40937c:	fcmovnu st,st(0)
  40937e:	cmc    
  40937f:	mov    ecx,0x433dd93a
  409384:	xor    bh,al
  409386:	add    al,0x34
  409388:	cs pop edi
  40938a:	pop    eax
  40938b:	mov    esp,0xa99fd789
  409390:	mov    ds:0x5a65326d,al
  409395:	mov    eax,0x8191d52a
  40939a:	aam    0xcb
  40939c:	xchg   edi,esi
  40939e:	cdq    
  40939f:	inc    edx
  4093a0:	mov    ebp,DWORD PTR [ebp+0x310a9a95]
  4093a6:	sbb    ecx,DWORD PTR [ebx]
  4093a8:	mov    ebx,0xf60bcbf9
  4093ad:	cwde   
  4093ae:	xchg   ebp,eax
  4093af:	jno    0x409418
  4093b1:	adc    eax,0x4ded9fca
  4093b6:	mov    esi,0x171c3b1e
  4093bb:	test   al,0xa7
  4093bd:	(bad)  
  4093be:	sahf   
  4093bf:	ss out 0x87,eax
  4093c2:	fbstp  TBYTE PTR [esi+0x60720244]
  4093c8:	xchg   edi,edi
  4093ca:	mov    dh,0xc4
  4093cc:	mov    edx,0x5d384910
  4093d1:	sbb    DWORD PTR [eax],0x39f241e1
  4093d7:	cwde   
  4093d8:	sbb    ebx,DWORD PTR [eax]
  4093da:	push   edi
  4093db:	jbe    0x409378
  4093dd:	mov    ah,0x28
  4093df:	test   al,0xde
  4093e1:	xchg   cx,ax
  4093e3:	cdq    
  4093e4:	dec    esp
  4093e5:	pop    ebx
  4093e6:	mov    ecx,ecx
  4093e8:	out    dx,al
  4093e9:	in     al,dx
  4093ea:	or     eax,0x793618a6
  4093ef:	fwait
  4093f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f1:	mov    esi,0xb460e92
  4093f6:	pop    ecx
  4093f7:	into   
  4093f8:	mov    edx,DWORD PTR [ecx-0x56]
  4093fb:	cmp    edi,DWORD PTR [eax]
  4093fd:	ins    BYTE PTR es:[edi],dx
  4093fe:	jb     0x4093ac
  409400:	cdq    
  409401:	out    0xe6,al
  409403:	push   cs
  409404:	inc    esp
  409405:	repz aad 0x3a
  409408:	xchg   esi,eax
  409409:	mov    dh,0xc3
  40940b:	cs xchg esp,eax
  40940d:	cwde   
  40940e:	mov    BYTE PTR [eax+0xa],bh
  409411:	mov    ds:0xf36ace36,al
  409416:	and    DWORD PTR [ecx+0x2b],esp
  409419:	dec    ebx
  40941a:	jbe    0x4093df
  40941c:	mov    ah,0xc3
  40941e:	lods   eax,DWORD PTR ds:[esi]
  40941f:	vprotb xmm3,[edx+0x3],xmm1
  409425:	mov    DWORD PTR [edi-0x61],esi
  409428:	sbb    BYTE PTR [eax],bl
  40942a:	popf   
  40942b:	rcl    BYTE PTR [esi],1
  40942d:	push   0xffffff8a
  40942f:	jmp    0xe5b7f6ed
  409434:	push   0xe1181497
  409439:	cmp    BYTE PTR [ebx-0x71],ah
  40943c:	sbb    BYTE PTR [esi],0x84
  40943f:	pop    ss
  409440:	not    DWORD PTR [esi-0x77]
  409443:	out    dx,al
  409444:	fs push 0xd2a126b
  40944a:	icebp  
  40944b:	sar    BYTE PTR [ebp+0x3b],cl
  40944e:	jns    0x409431
  409450:	add    cl,ch
  409452:	fwait
  409453:	sti    
  409454:	lods   eax,DWORD PTR ds:[esi]
  409455:	mov    dh,0xf9
  409457:	mov    al,BYTE PTR [ecx-0x6b]
  40945a:	gs out 0x83,eax
  40945d:	adc    cl,ch
  40945f:	mov    bl,0xbe
  409461:	mov    ah,0x4d
  409463:	xchg   ebp,eax
  409464:	call   0xae5c:0x44684596
  40946b:	mov    ds:0x33434b61,al
  409470:	mov    ch,0x38
  409472:	mov    ebx,0x8f5f396a
  409477:	cmp    DWORD PTR ds:0xf5eafc1c,ebp
  40947d:	into   
  40947e:	movups xmm3,xmm2
  409481:	push   ecx
  409482:	(bad)  
  409483:	cld    
  409484:	cmp    eax,0x299adce4
  409489:	fwait
  40948a:	stos   BYTE PTR es:[edi],al
  40948b:	das    
  40948c:	stc    
  40948d:	aam    0x2f
  40948f:	dec    DWORD PTR es:[esi+0x12]
  409493:	xor    esi,DWORD PTR [eax-0x4b1fdfc8]
  409499:	call   0x73f8:0x76660d91
  4094a0:	hlt    
  4094a1:	xchg   BYTE PTR [edx+0x6],cl
  4094a4:	ja     0x409502
  4094a6:	hlt    
  4094a7:	mov    dh,0x1a
  4094a9:	inc    esi
  4094aa:	mov    ebx,0x4d002ea7
  4094af:	stos   DWORD PTR es:[edi],eax
  4094b0:	jne    0x409499
  4094b2:	(bad)  
  4094b3:	loop   0x4094ff
  4094b5:	aaa    
  4094b6:	pop    esp
  4094b7:	je     0x4094b8
  4094b9:	iret   
  4094ba:	push   esi
  4094bb:	loop   0x40950f
  4094bd:	jg     0x4094e0
  4094bf:	fcom   DWORD PTR [esi]
  4094c1:	xchg   esi,eax
  4094c2:	(bad)  
  4094c4:	and    BYTE PTR [ebp+0x5d9be896],cl
  4094ca:	int3   
  4094cb:	inc    DWORD PTR [edi+edi*8]
  4094ce:	je     0x409543
  4094d0:	int3   
  4094d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094d2:	mov    ebx,0xc0ca7cc6
  4094d7:	leave  
  4094d8:	push   ss
  4094d9:	push   es
  4094da:	push   cs
  4094db:	imul   ebp,DWORD PTR [esi+0x704fc09b],0xffffffa6
  4094e2:	repnz adc bl,dl
  4094e5:	dec    edi
  4094e6:	mov    ebx,0xe7ca3fdd
  4094eb:	lock and eax,0xe4c55a8a
  4094f1:	(bad)  
  4094f3:	push   eax
  4094f4:	xchg   esp,eax
  4094f5:	dec    eax
  4094f6:	dec    esi
  4094f7:	mov    esi,0xbc661c34
  4094fc:	ret    0x33e9
  4094ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409500:	(bad)  
  409502:	xor    bl,BYTE PTR [eax+0x74b6026d]
  409508:	xlat   BYTE PTR ds:[ebx]
  409509:	cmp    ecx,0x8dc1ccd7
  40950f:	shl    DWORD PTR [ebx-0x6c],cl
  409512:	jg     0x409499
  409514:	dec    ecx
  409515:	and    eax,0x46f08d32
  40951a:	stos   BYTE PTR es:[edi],al
  40951b:	not    ebx
  40951d:	test   eax,0x31cee1ec
  409522:	dec    edi
  409523:	push   0xc86f34ed
  409528:	xor    esi,esp
  40952a:	(bad)  
  40952c:	fs push ebp
  40952e:	sub    al,0x6c
  409530:	rcr    BYTE PTR [edi+0x5a],0xc1
  409534:	aaa    
  409535:	jae    0x40959e
  409537:	jle    0x409597
  409539:	es clc 
  40953b:	xor    ebp,DWORD PTR [esi]
  40953d:	rdpmc  
  40953f:	retf   0xb32a
  409542:	test   eax,0xfe97fc26
  409547:	rcl    edx,1
  409549:	adc    DWORD PTR [eax-0x1fb32f79],ecx
  40954f:	ja     0x40951a
  409551:	rol    BYTE PTR [ebp-0x43],1
  409554:	std    
  409555:	jle    0x4095d2
  409557:	jb     0x4094f2
  409559:	mov    ecx,0x4fb01039
  40955e:	jp     0x409527
  409560:	jmp    0x8ebe:0x3844f904
  409567:	lods   eax,DWORD PTR ds:[esi]
  409568:	prefetch (bad)
  409569:	or     eax,0x72a8a4dc
  40956e:	or     al,0x87
  409570:	sahf   
  409571:	test   eax,0xa0f18d58
  409576:	dec    esi
  409577:	stos   DWORD PTR es:[edi],eax
  409578:	sub    eax,0x76b55fd
  40957d:	in     eax,dx
  40957e:	int    0xab
  409580:	popa   
  409581:	and    ecx,DWORD PTR [ecx+ebx*2]
  409584:	repz shl DWORD PTR [ecx+0x2879560d],cl
  40958b:	mov    ds:0x73538777,eax
  409590:	jmp    0x84394762
  409595:	int    0xf
  409597:	cmc    
  409598:	push   0xa
  40959a:	sbb    eax,0xe68b19bc
  40959f:	in     eax,dx
  4095a0:	adc    esi,edi
  4095a2:	cmp    al,0xdf
  4095a4:	(bad)  
  4095a6:	(bad)  
  4095a7:	dec    esi
  4095a8:	sub    DWORD PTR [ebp-0x51a2dfe9],ebx
  4095ae:	jecxz  0x40960e
  4095b0:	or     cl,BYTE PTR [esi-0x4fb88ade]
  4095b6:	cmp    al,al
  4095b8:	sbb    DWORD PTR [ecx+0x506038b6],edx
  4095be:	pop    es
  4095bf:	push   ebx
  4095c0:	test   DWORD PTR cs:[edx-0x42],edi
  4095c4:	out    0x56,al
  4095c6:	mov    dh,0x81
  4095c8:	cdq    
  4095c9:	ret    
  4095ca:	and    edx,ebp
  4095cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095cd:	sbb    dh,BYTE PTR [esi]
  4095cf:	pslld  mm0,QWORD PTR [esi]
  4095d2:	pusha  
  4095d3:	adc    al,0xa0
  4095d5:	push   ebx
  4095d6:	mov    edi,0x9c717427
  4095db:	sbb    al,al
  4095dd:	add    dl,bh
  4095df:	sar    BYTE PTR [edi+esi*4],1
  4095e2:	rcr    ebx,1
  4095e4:	sar    BYTE PTR [ecx-0x5c100b42],cl
  4095ea:	dec    ebp
  4095eb:	(bad)  
  4095ec:	cmp    edi,DWORD PTR [eax-0x7d]
  4095ef:	pop    esi
  4095f0:	scas   eax,DWORD PTR es:[edi]
  4095f1:	fisub  DWORD PTR [ebx]
  4095f3:	xor    al,0x83
  4095f5:	sub    eax,0x3a985b49
  4095fa:	(bad)  
  4095fb:	in     eax,0x51
  4095fd:	inc    ecx
  4095fe:	jno    0x4095f4
  409600:	js     0x40961b
  409602:	daa    
  409603:	jmp    0x7f7f:0x430789c4
  40960a:	pop    esi
  40960b:	mov    bh,0x29
  40960d:	scas   eax,DWORD PTR es:[edi]
  40960e:	adc    DWORD PTR [edi+ebx*8+0x47c6d85d],0x53378f05
  409619:	dec    esi
  40961a:	cli    
  40961b:	repnz pushf 
  40961d:	out    dx,al
  40961e:	push   0x4b
  409620:	xor    dh,BYTE PTR [esi+0x39462139]
  409626:	int    0x1a
  409628:	fdiv   QWORD PTR [edx]
  40962a:	and    eax,0x5cd705a3
  40962f:	and    DWORD PTR [ecx+esi*4+0x455b4026],ebp
  409636:	xchg   ebp,eax
  409637:	aas    
  409638:	sub    esi,DWORD PTR [eax]
  40963a:	add    ecx,esp
  40963c:	fcomi  st,st(1)
  40963f:	fbstp  TBYTE PTR [edx]
  409641:	out    dx,eax
  409642:	retf   
  409643:	scas   al,BYTE PTR es:[edi]
  409644:	xchg   edx,eax
  409645:	push   ds
  409646:	test   al,0x5e
  409648:	push   edx
  409649:	pushf  
  40964a:	aaa    
  40964b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40964c:	xchg   edx,eax
  40964d:	dec    edx
  40964e:	aad    0x61
  409650:	xchg   DWORD PTR [ecx+0x2bdf6f0f],edi
  409656:	xchg   DWORD PTR [edx+0x69],esi
  409659:	hlt    
  40965a:	or     BYTE PTR [edx+0x6c69804b],cl
  409660:	popf   
  409661:	(bad)  
  409662:	mov    edx,0xd3af6939
  409667:	pop    es
  409668:	div    DWORD PTR [edx-0x51]
  40966b:	push   ebx
  40966c:	inc    ebp
  40966d:	pop    edi
  40966e:	cld    
  40966f:	das    
  409670:	addr16 arpl sp,si
  409673:	rcl    ch,0xa6
  409676:	je     0x4096d7
  409678:	in     al,dx
  409679:	and    al,0xa0
  40967b:	fcomp  QWORD PTR [edi+0x35a9517b]
  409681:	push   cs
  409682:	das    
  409683:	(bad)  
  409684:	jge    0x409659
  409686:	fisub  WORD PTR [edi-0x7d294d6e]
  40968c:	retf   0xd0a6
  40968f:	dec    esi
  409690:	and    ch,0x1d
  409693:	xchg   ecx,eax
  409694:	xchg   ebp,eax
  409695:	pop    esp
  409696:	and    al,BYTE PTR [ecx-0x65cc55ca]
  40969c:	ret    0x55d9
  40969f:	stos   DWORD PTR es:[edi],eax
  4096a0:	push   ds
  4096a1:	pop    ds
  4096a2:	add    DWORD PTR [esi-0x30bba6a0],ebp
  4096a8:	(bad)  
  4096a9:	sub    BYTE PTR [ecx],dh
  4096ab:	dec    ebx
  4096ac:	xor    eax,0x27dbe4dc
  4096b1:	mov    fs,WORD PTR [ebx]
  4096b3:	and    eax,0x3685f9bc
  4096b8:	mov    ah,0xc9
  4096ba:	in     eax,dx
  4096bb:	mov    ebp,0xb94cde4c
  4096c0:	and    dh,dh
  4096c2:	data16 aam 0xfe
  4096c5:	jmp    0xf2d1:0xb1368dd0
  4096cc:	pop    ds
  4096cd:	cmp    ecx,DWORD PTR [edi-0x16a1a68d]
  4096d3:	sbb    al,dh
  4096d5:	jne    0x40972b
  4096d7:	pop    ss
  4096d8:	call   0xe3c4:0xf5f05a98
  4096df:	xchg   BYTE PTR [eax+0x2a],dh
  4096e2:	and    dl,cl
  4096e4:	inc    esi
  4096e5:	icebp  
  4096e6:	xor    al,0x1f
  4096e8:	sub    ecx,ebx
  4096ea:	mov    DWORD PTR ds:[eax+ebp*4+0x1c83572],ecx
  4096f2:	pop    ecx
  4096f3:	push   ds
  4096f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f5:	mov    esp,0xa40f8d12
  4096fa:	enter  0x7a50,0x46
  4096fe:	add    eax,0xb5dcb75e
  409703:	pop    ecx
  409704:	jb     0x40977f
  409706:	jg     0x40968b
  409708:	push   ss
  409709:	inc    edi
  40970a:	stos   BYTE PTR es:[edi],al
  40970b:	xchg   DWORD PTR ds:0x2c43db78,ecx
  409711:	mov    eax,ds:0xc3be0b7c
  409716:	adc    DWORD PTR [esi+ecx*2-0x38297718],edx
  40971d:	sar    DWORD PTR [edi],1
  40971f:	mov    eax,0x1e32aff5
  409724:	xor    eax,0x14170ab6
  409729:	jp     0x40972e
  40972b:	xchg   BYTE PTR [ecx-0x403b3d7b],dl
  409731:	mov    edx,0x3c6af418
  409736:	(bad)  
  409737:	sbb    edx,DWORD PTR [ebp-0x37769b02]
  40973d:	(bad)  
  40973e:	jbe    0x409794
  409740:	ror    DWORD PTR [ebx-0x25],0x6f
  409744:	adc    esp,edi
  409746:	lods   al,BYTE PTR ds:[esi]
  409747:	out    dx,eax
  409748:	loope  0x40972e
  40974a:	adc    ebp,edi
  40974c:	outs   dx,BYTE PTR ds:[esi]
  40974d:	retf   
  40974e:	sbb    al,0xa6
  409750:	loope  0x4097b1
  409752:	ins    BYTE PTR es:[edi],dx
  409753:	pop    ebx
  409754:	push   cs
  409755:	rcr    BYTE PTR [edx+0x35],0xd5
  409759:	idiv   BYTE PTR [ecx]
  40975b:	xchg   esp,eax
  40975c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40975d:	in     al,dx
  40975e:	stos   BYTE PTR es:[edi],al
  40975f:	dec    ecx
  409760:	add    BYTE PTR [ebx],bh
  409762:	out    0x70,al
  409764:	push   ecx
  409765:	and    eax,0x94306d7d
  40976a:	dec    eax
  40976b:	pop    ebp
  40976c:	xchg   esp,eax
  40976d:	lock add bh,BYTE PTR [edx-0x5deeb989]
  409774:	repz aas 
  409776:	data16 das 
  409778:	pop    ss
  409779:	mov    al,BYTE PTR [ebx+edx*2]
  40977c:	mov    cl,0x57
  40977e:	sub    BYTE PTR [ecx+esi*2-0x6],0xfe
  409783:	shr    eax,1
  409785:	sub    esi,ebx
  409787:	inc    ecx
  409788:	mov    DWORD PTR [ecx],edx
  40978a:	inc    edx
  40978b:	adc    al,0x50
  40978d:	imul   ecx,DWORD PTR [ebx+eiz*4],0x13385aea
  409794:	(bad)  
  409795:	scas   eax,DWORD PTR es:[edi]
  409796:	adc    ebp,edx
  409798:	mov    esi,0x58b19b07
  40979d:	es test eax,0xa7db1272
  4097a3:	inc    ebp
  4097a4:	xchg   esp,eax
  4097a5:	mov    dh,0x11
  4097a7:	dec    ebp
  4097a8:	lods   al,BYTE PTR ds:[esi]
  4097a9:	mov    ebp,0xfd733cb2
  4097ae:	mov    ebx,0x45349ef0
  4097b3:	and    DWORD PTR [ecx],0x6fa7a2af
  4097b9:	loop   0x40974c
  4097bb:	add    DWORD PTR [ecx-0x23654fb4],ebp
  4097c1:	jb     0x409810
  4097c3:	cmp    ebp,DWORD PTR [ecx+0x4e95c1fa]
  4097c9:	std    
  4097ca:	mov    al,ds:0x4c20103a
  4097cf:	add    eax,eax
  4097d1:	push   ss
  4097d2:	and    BYTE PTR [edx],bh
  4097d4:	sbb    al,0xa2
  4097d6:	fs push esp
  4097d8:	into   
  4097d9:	arpl   WORD PTR [eax+0x5502bb2f],bx
  4097df:	call   0x8b20:0x7dc1d4b4
  4097e6:	inc    ebx
  4097e7:	aam    0x28
  4097e9:	enter  0x8966,0x18
  4097ed:	push   0x6b
  4097ef:	push   ds
  4097f0:	fisttp QWORD PTR [esi+0x40]
  4097f3:	fnstcw WORD PTR [edx-0x45]
  4097f6:	in     al,dx
  4097f7:	aaa    
  4097f8:	je     0x409786
  4097fa:	shl    DWORD PTR [ebp+0x671c6824],cl
  409800:	out    0x5f,al
  409802:	pop    ss
  409803:	popa   
  409804:	scas   eax,DWORD PTR es:[edi]
  409805:	into   
  409806:	mul    DWORD PTR [eax-0x16]
  409809:	pop    eax
  40980a:	adc    bl,BYTE PTR [ebp+0x3fec0b27]
  409810:	xlat   BYTE PTR ds:[ebx]
  409811:	mov    ebx,0x7c908aec
  409816:	bound  esp,QWORD PTR [ecx]
  409818:	lods   al,BYTE PTR ds:[esi]
  409819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981a:	push   0x9
  40981c:	xchg   esp,eax
  40981d:	test   al,0x38
  40981f:	mov    bh,0x98
  409821:	ins    BYTE PTR es:[edi],dx
  409822:	retf   
  409823:	fsubp  st(2),st
  409825:	cwde   
  409826:	push   edx
  409827:	mov    eax,ds:0x8c16ce98
  40982c:	(bad)  [ecx]
  40982e:	pushf  
  40982f:	fneni(8087 only) 
  409831:	or     DWORD PTR [esi+0x10145fd2],0xe4a03a83
  40983b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983c:	(bad)  
  40983d:	aam    0x53
  40983f:	add    BYTE PTR [ecx+eiz*2],0xcf
  409843:	inc    ebp
  409844:	lods   eax,DWORD PTR ds:[esi]
  409845:	out    dx,al
  409846:	push   ds
  409847:	ret    
  409848:	or     eax,0x1109b39f
  40984d:	inc    edi
  40984e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984f:	out    0x14,al
  409851:	pusha  
  409852:	test   eax,0x2cf689a8
  409857:	sahf   
  409858:	outs   dx,DWORD PTR ds:[esi]
  409859:	fistp  DWORD PTR gs:[esi+edi*2+0x1b54e11b]
  409861:	test   DWORD PTR [eax+0x29ed7a54],0x1c70c9b2
  40986b:	out    dx,eax
  40986c:	mov    esi,0x8c0b8caf
  409871:	in     al,dx
  409872:	es cli 
  409874:	loop   0x4098d2
  409876:	mov    ecx,DWORD PTR [edi-0x17]
  409879:	in     eax,0x3d
  40987b:	mov    dh,0x70
  40987d:	add    BYTE PTR [ebx+0x63],ah
  409880:	fcmovbe st,st(3)
  409882:	rol    DWORD PTR [eax],1
  409884:	cmp    ecx,esi
  409886:	push   esi
  409887:	popf   
  409888:	and    DWORD PTR [esi+0x7b],eax
  40988b:	mov    al,0x4c
  40988d:	mov    dl,0x5b
  40988f:	xlat   BYTE PTR ds:[ebx]
  409890:	outs   dx,DWORD PTR ds:[esi]
  409891:	stc    
  409892:	adc    ch,bl
  409894:	jns    0x409865
  409896:	imul   edx,DWORD PTR [ecx+0x0],0xffffffda
  40989a:	and    ebx,ebx
  40989c:	mov    al,0x77
  40989e:	es test al,0x3e
  4098a1:	xor    eax,0xb67f8423
  4098a6:	or     eax,0xc862fbf
  4098ab:	(bad)  
  4098ac:	out    0x31,eax
  4098ae:	sahf   
  4098af:	out    dx,al
  4098b0:	in     eax,0x21
  4098b2:	push   edx
  4098b3:	xor    ebx,DWORD PTR [eax+0xad39b44]
  4098b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ba:	aad    0xe1
  4098bc:	call   0xce3b1514
  4098c1:	mov    ebp,0xb89c429e
  4098c6:	add    bl,dl
  4098c8:	ret    0xe6ba
  4098cb:	and    BYTE PTR [ecx],bl
  4098cd:	lea    edi,[edi+0x5e2d69bc]
  4098d3:	rcl    DWORD PTR [eax+0x2233a83a],0x5b
  4098da:	inc    ebp
  4098db:	pusha  
  4098dc:	sub    DWORD PTR [eax+0x3537eef1],esi
  4098e2:	adc    BYTE PTR [eax-0x54],ch
  4098e5:	push   es
  4098e6:	lods   al,BYTE PTR ds:[esi]
  4098e7:	aad    0x92
  4098e9:	retf   0xf2a4
  4098ec:	inc    eax
  4098ed:	out    dx,eax
  4098ee:	loop   0x40992e
  4098f0:	stc    
  4098f1:	mov    bl,0xb
  4098f3:	inc    esp
  4098f4:	jnp    0x4098bc
  4098f6:	in     eax,0xff
  4098f8:	push   cs
  4098f9:	push   0xffffff9a
  4098fb:	addr16 pop ebx
  4098fd:	mov    al,0xbe
  4098ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409900:	push   esi
  409901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409903:	or     DWORD PTR [edi],0x7
  409906:	neg    DWORD PTR [eax-0x35]
  409909:	fisttp DWORD PTR [edx+0x49]
  40990c:	icebp  
  40990d:	dec    esi
  40990e:	pusha  
  40990f:	popa   
  409910:	cwde   
  409911:	js     0x409992
  409913:	pop    ecx
  409914:	lds    esp,FWORD PTR [edx+0x5ee99ada]
  40991a:	cmp    DWORD PTR ds:0xc603403f,eax
  409920:	jae    0x4098b0
  409922:	lock scas eax,DWORD PTR es:[edi]
  409924:	ss xor al,0x28
  409927:	or     al,0x3a
  409929:	sbb    al,0xef
  40992b:	fisttp WORD PTR [ebx-0xfe5ec75]
  409931:	js     0x40993e
  409933:	xchg   edi,eax
  409934:	out    0x87,eax
  409936:	xor    eax,0x9134d4b8
  40993b:	int3   
  40993c:	adc    eax,0x760dfe7d
  409941:	lahf   
  409942:	int3   
  409943:	out    dx,eax
  409944:	or     BYTE PTR [esi-0x44],dl
  409947:	and    edx,ebx
  409949:	popa   
  40994a:	mov    esi,0xd767b8bd
  40994f:	xchg   ecx,eax
  409950:	add    DWORD PTR [eax+0x4d539598],eax
  409956:	imul   edi,DWORD PTR [edx],0xa8c1b52
  40995c:	fimul  WORD PTR [eax+eax*8+0x535829f5]
  409963:	loopne 0x409956
  409965:	and    DWORD PTR [edx+0x7a],esi
  409968:	retf   
  409969:	arpl   WORD PTR [ebx+eiz*1-0x8],cx
  40996d:	test   DWORD PTR [eax+0x10b0897b],edi
  409973:	ins    DWORD PTR es:[edi],dx
  409974:	(bad)  [edi+0x4f]
  409977:	fwait
  409978:	cmp    al,0xf2
  40997a:	iret   
  40997b:	push   esi
  40997c:	pop    es
  40997d:	xchg   edx,eax
  40997e:	sbb    al,0xd4
  409980:	adc    eax,0xca687246
  409985:	dec    ecx
  409986:	fisub  WORD PTR [ebp+0x3b]
  409989:	fcomp  st(7)
  40998b:	hlt    
  40998c:	das    
  40998d:	lods   eax,DWORD PTR ds:[esi]
  40998e:	jp     0x4099b5
  409990:	call   0x62aee33b
  409995:	sub    al,0x71
  409997:	mov    dh,0x7a
  409999:	scas   eax,DWORD PTR es:[edi]
  40999a:	mov    dh,0xe7
  40999c:	mov    esi,0xb0355450
  4099a1:	outs   dx,DWORD PTR ds:[esi]
  4099a2:	jp     0x409a18
  4099a4:	mov    edx,0x4c9dac77
  4099a9:	xchg   esp,eax
  4099aa:	ins    BYTE PTR es:[edi],dx
  4099ab:	daa    
  4099ac:	xchg   edi,eax
  4099ad:	cli    
  4099ae:	(bad)  
  4099af:	mov    esi,0x224121a0
  4099b4:	inc    edi
  4099b5:	imul   ebp,DWORD PTR [ebx],0x8a97ab19
  4099bb:	mov    al,ds:0x85b3666a
  4099c0:	and    ecx,DWORD PTR [ebp+0x100986b3]
  4099c6:	mov    bh,0x3b
  4099c8:	mov    dh,0x2
  4099ca:	mov    ds:0xf55e7427,eax
  4099cf:	inc    edi
  4099d0:	test   DWORD PTR [esp+eax*8],eax
  4099d3:	dec    esp
  4099d4:	adc    esi,eax
  4099d6:	push   ebx
  4099d7:	mov    eax,DWORD PTR [eax+0x7af809a4]
  4099dd:	add    BYTE PTR [edx+0x7f],dh
  4099e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e1:	scas   al,BYTE PTR es:[edi]
  4099e2:	mov    ds:0x3bf520f0,al
  4099e7:	lods   eax,DWORD PTR ds:[esi]
  4099e8:	pop    ecx
  4099e9:	xor    ebx,DWORD PTR [ecx+0x33]
  4099ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ed:	rcr    BYTE PTR [esi],1
  4099ef:	mov    ebp,DWORD PTR [esi-0x6575fd99]
  4099f5:	out    0x95,eax
  4099f7:	mov    eax,0x54a9ab8c
  4099fc:	mov    al,ds:0xe4b1622f
  409a01:	jns    0x40998e
  409a03:	dec    ecx
  409a04:	xor    al,0xe3
  409a06:	or     eax,0xddadb200
  409a0b:	jno    0x4099cf
  409a0d:	cs popa 
  409a0f:	sub    dh,BYTE PTR [ecx-0x57]
  409a12:	int    0x6
  409a14:	call   0xeee8cdbe
  409a19:	cld    
  409a1a:	adc    dh,BYTE PTR [eax-0x73efde74]
  409a20:	mov    bl,0x9c
  409a22:	in     eax,0xf0
  409a24:	pop    ss
  409a25:	pavgb  mm2,QWORD PTR [esi+0x462c2ac6]
  409a2c:	or     eax,0x119830f2
  409a31:	inc    esp
  409a32:	js     0x4099d8
  409a34:	mov    dh,ah
  409a36:	ins    BYTE PTR es:[edi],dx
  409a37:	lods   eax,DWORD PTR ds:[esi]
  409a38:	sub    BYTE PTR ds:0xb849e253,ch
  409a3e:	lahf   
  409a3f:	cli    
  409a40:	xchg   esi,eax
  409a41:	push   edx
  409a42:	aad    0x32
  409a44:	push   eax
  409a45:	jno    0x409a6d
  409a47:	mov    ds:0xbf986855,al
  409a4c:	cmp    BYTE PTR [ebx+0x113b16a6],dl
  409a52:	xor    DWORD PTR [ebx+0x59545320],ebp
  409a58:	dec    edx
  409a59:	xchg   edi,eax
  409a5a:	loopne 0x409a67
  409a5c:	sti    
  409a5d:	das    
  409a5e:	pop    es
  409a5f:	(bad)  
  409a60:	jge    0x409a7b
  409a62:	cmp    DWORD PTR [ecx],ecx
  409a64:	mov    bl,0x4e
  409a66:	or     BYTE PTR [esi+0x7a],ch
  409a69:	xchg   edx,eax
  409a6a:	data16 mov bh,0xa1
  409a6d:	daa    
  409a6e:	ror    DWORD PTR [edx],cl
  409a70:	xchg   DWORD PTR ds:0x84c2bafd,esp
  409a76:	test   BYTE PTR [ebx-0x785f7cdf],dh
  409a7c:	retf   
  409a7d:	in     eax,dx
  409a7e:	imul   eax,DWORD PTR gs:[ecx],0xba05aa85
  409a85:	cs daa 
  409a87:	jns    0x409acc
  409a89:	lods   eax,DWORD PTR ds:[esi]
  409a8a:	(bad)  
  409a8b:	jb     0x409a3b
  409a8d:	mov    edi,0xd7d632ad
  409a92:	dec    ebx
  409a93:	scas   eax,DWORD PTR es:[edi]
  409a94:	jo     0x409aa0
  409a96:	pop    ecx
  409a97:	fnstsw WORD PTR [ecx-0x47]
  409a9a:	es clc 
  409a9c:	and    al,0x39
  409a9e:	fdivr  DWORD PTR [ebx+edx*4-0x2399b2d4]
  409aa5:	bound  esp,QWORD PTR [eax-0x4a]
  409aa8:	mov    esp,0x9e87ed3
  409aad:	cmp    DWORD PTR [eax-0x19],eax
  409ab0:	rol    bh,1
  409ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab3:	repnz and eax,0xe8fb9772
  409ab9:	inc    ebx
  409aba:	lods   eax,DWORD PTR ds:[esi]
  409abb:	jae    0x409b15
  409abd:	add    al,0xd5
  409abf:	sbb    ebx,DWORD PTR [eax+eax*2]
  409ac2:	int3   
  409ac3:	arpl   ax,di
  409ac5:	dec    ebp
  409ac6:	sbb    bl,ah
  409ac8:	mov    cl,0xb0
  409aca:	bswap  edi
  409acc:	xor    cl,ch
  409ace:	and    eax,0xd34aa7af
  409ad3:	cmp    eax,0xf63797ec
  409ad8:	pushf  
  409ad9:	mov    esi,0xefe729c6
  409ade:	jmp    0xacea:0x5e729979
  409ae5:	adc    DWORD PTR [esi-0x5f],ebp
  409ae8:	jae    0x409ab7
  409aea:	icebp  
  409aeb:	icebp  
  409aec:	mov    esp,0xee73fdce
  409af1:	ror    DWORD PTR [edx],cl
  409af3:	sahf   
  409af4:	mov    eax,ds:0x67b8d519
  409af9:	cli    
  409afa:	mov    ah,0x26
  409afc:	push   ss
  409afd:	mov    dl,dh
  409aff:	xchg   ecx,eax
  409b00:	test   DWORD PTR [ebx+0x686b57e3],ebx
  409b06:	loop   0x409b00
  409b08:	or     bl,ch
  409b0a:	mov    WORD PTR [esi-0x2],gs
  409b0d:	xor    eax,0x35adaf73
  409b12:	dec    ecx
  409b13:	enter  0x6b2a,0x96
  409b17:	dec    ebp
  409b18:	xchg   ebp,eax
  409b19:	mov    ecx,0x4be97dba
  409b1e:	data16 std 
  409b20:	sbb    BYTE PTR [ebx],bh
  409b22:	mov    ds:0xdc762143,al
  409b27:	imul   ebx,DWORD PTR [ebx+0x2c],0x5e5443cb
  409b2e:	ret    
  409b2f:	dec    esp
  409b30:	add    DWORD PTR [ecx+ecx*2-0x5c],edx
  409b34:	sti    
  409b35:	mov    esp,0x921f0900
  409b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3b:	and    BYTE PTR [edi-0x66],bh
  409b3e:	xchg   esp,eax
  409b3f:	pushf  
  409b40:	(bad)  
  409b41:	jecxz  0x409b86
  409b43:	mov    esp,0x321ca8e0
  409b48:	xchg   ebp,eax
  409b49:	out    0x47,eax
  409b4b:	popf   
  409b4c:	xor    edx,DWORD PTR [edi+eax*2-0x7b]
  409b50:	jmp    0x2f76a39b
  409b55:	jle    0x409b8f
  409b57:	fsubrp st(4),st
  409b59:	inc    eax
  409b5a:	mov    ebp,cs
  409b5c:	test   eax,0xb5b087b8
  409b61:	cmp    ebx,DWORD PTR [esi-0x10]
  409b64:	daa    
  409b65:	ja     0x409b34
  409b67:	scas   eax,DWORD PTR es:[edi]
  409b68:	jo     0x409aea
  409b6a:	ret    
  409b6b:	sub    dh,bl
  409b6d:	aaa    
  409b6e:	dec    ebx
  409b6f:	punpckhbw mm0,QWORD PTR [ebp-0x5f13cdf5]
  409b76:	loope  0x409bd6
  409b78:	clc    
  409b79:	push   0xffffffd0
  409b7b:	xchg   edx,eax
  409b7c:	data16 sub BYTE PTR [ebx+0x7b],dh
  409b80:	inc    edi
  409b81:	xor    ebx,ebx
  409b83:	xchg   DWORD PTR ds:0x8ca83d76,eax
  409b89:	lahf   
  409b8a:	sbb    BYTE PTR [ecx+ebx*2],ch
  409b8d:	js     0x409b1d
  409b8f:	adc    ch,BYTE PTR [edx]
  409b91:	push   eax
  409b92:	imul   ecx,ebx,0xa8ce34a
  409b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b99:	or     eax,DWORD PTR [esi]
  409b9b:	fs pop edx
  409b9d:	mov    es,WORD PTR [edi+0x1f]
  409ba0:	push   edi
  409ba1:	repnz clc 
  409ba3:	aad    0xdb
  409ba5:	mov    edi,DWORD PTR [edx-0x4c2e18eb]
  409bab:	pushf  
  409bac:	jge    0x409b64
  409bae:	pop    ds
  409baf:	push   edx
  409bb0:	cmp    ebp,ebp
  409bb2:	fs leave 
  409bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb5:	fst    DWORD PTR [esi+0x118f4e16]
  409bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bbc:	xor    ch,BYTE PTR [eax+0x512d53a2]
  409bc2:	in     eax,0xe7
  409bc4:	inc    esi
  409bc5:	mov    al,ds:0xdd68112d
  409bca:	cmp    DWORD PTR [esi],edx
  409bcc:	dec    edi
  409bcd:	jae    0x409c04
  409bcf:	xchg   DWORD PTR ds:0x6a705663,ecx
  409bd5:	xchg   edi,eax
  409bd6:	mov    ecx,0x94d6413a
  409bdc:	mov    BYTE PTR [edx+0x56515dc0],ah
  409be2:	pop    esi
  409be3:	inc    ecx
  409be4:	xchg   edi,eax
  409be5:	fild   DWORD PTR [eax]
  409be7:	hlt    
  409be8:	out    0xea,al
  409bea:	and    eax,0xcaa2440c
  409bef:	xchg   DWORD PTR [ecx-0x137507b1],edx
  409bf5:	icebp  
  409bf6:	pop    ds
  409bf7:	cdq    
  409bf8:	add    DWORD PTR [edx-0x6c],ebx
  409bfb:	xor    bl,BYTE PTR [esi+0x6a]
  409bfe:	push   0x5c61962c
  409c03:	fisttp DWORD PTR [eax+0x13]
  409c06:	mov    eax,ds:0x2c89d865
  409c0b:	fnstenv [edi]
  409c0d:	inc    ebp
  409c0e:	jne    0x409c26
  409c10:	xchg   esp,eax
  409c11:	aad    0x2e
  409c13:	cmp    ebx,DWORD PTR [ecx+eax*1+0x7f]
  409c17:	in     al,0x75
  409c19:	sub    al,0xe5
  409c1b:	fwait
  409c1c:	ss dec eax
  409c1e:	push   esp
  409c1f:	adc    al,0xf4
  409c21:	add    edx,DWORD PTR [edx+0x3fb13b37]
  409c27:	cmp    DWORD PTR [eax-0x73],0x13
  409c2b:	mov    ecx,0x42263ca5
  409c30:	popf   
  409c31:	or     dh,ch
  409c33:	cwde   
  409c34:	lods   al,BYTE PTR ds:[esi]
  409c35:	or     eax,0x8fb1cccf
  409c3a:	sub    edx,ebx
  409c3c:	out    dx,al
  409c3d:	add    ebx,0x4e
  409c40:	retf   
  409c41:	inc    edi
  409c42:	mov    ah,0xde
  409c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c45:	leave  
  409c46:	test   eax,0x74839be
  409c4c:	xchg   DWORD PTR [ecx+esi*8+0x4],esp
  409c50:	(bad)  
  409c51:	scas   eax,DWORD PTR es:[edi]
  409c52:	xlat   BYTE PTR ds:[ebx]
  409c53:	inc    ebp
  409c54:	mov    ds:0x27b344a6,eax
  409c59:	loop   0x409c4a
  409c5b:	fisttp QWORD PTR [ebp-0x15]
  409c5e:	inc    esp
  409c5f:	inc    ebx
  409c60:	sbb    al,0x4f
  409c62:	(bad)  
  409c64:	dec    eax
  409c65:	mov    ds:0xdf98ceec,al
  409c6a:	inc    esi
  409c6b:	fdiv   DWORD PTR [edi]
  409c6d:	(bad)  
  409c6e:	(bad)  
  409c6f:	cmc    
  409c70:	mov    ds:0xf3738e74,eax
  409c75:	imul   DWORD PTR [ebp-0x2498f6e0]
  409c7b:	je     0x409c76
  409c7d:	xor    dh,BYTE PTR [ebp+0x4a]
  409c80:	rcl    BYTE PTR [eax+0x14fd659d],cl
  409c86:	mov    eax,0x85179d02
  409c8b:	cmc    
  409c8c:	pop    es
  409c8d:	(bad)  
  409c8e:	jne    0x409c2c
  409c90:	int3   
  409c91:	mov    eax,0xfe3b6846
  409c96:	mov    al,ds:0xb8c54192
  409c9b:	pop    ss
  409c9c:	ja     0x409c36
  409c9e:	aaa    
  409c9f:	aam    0xb
  409ca1:	sahf   
  409ca2:	int3   
  409ca3:	xor    BYTE PTR [esi+0x2f720e29],dl
  409ca9:	rcl    BYTE PTR [ebp-0x30115b8d],1
  409caf:	dec    edx
  409cb0:	jmp    FWORD PTR [ecx]
  409cb2:	pop    ecx
  409cb3:	or     dh,ah
  409cb5:	stos   BYTE PTR es:[edi],al
  409cb6:	xchg   esp,eax
  409cb7:	push   0x48bd6db7
  409cbc:	ss jle 0x409c83
  409cbf:	test   DWORD PTR [edi-0x38e24b5f],edi
  409cc5:	out    0x27,al
  409cc7:	xor    BYTE PTR [ebx+0x82956b2],cl
  409ccd:	sar    ah,0x4a
  409cd0:	in     al,dx
  409cd1:	push   ss
  409cd2:	and    al,0xf9
  409cd4:	int    0x1e
  409cd6:	push   esi
  409cd7:	rcr    DWORD PTR [ebx-0x6e4d2a3d],cl
  409cdd:	test   BYTE PTR ss:[ebx+0x5dbd104f],dh
  409ce4:	add    edi,DWORD PTR [ecx]
  409ce6:	rcl    BYTE PTR es:[edx+0x60],1
  409cea:	mov    esp,0xfe75cb3b
  409cef:	mov    esi,0xa3857819
  409cf4:	aaa    
  409cf5:	xchg   DWORD PTR [edx+0x39],esi
  409cf8:	xchg   esi,eax
  409cf9:	inc    ebx
  409cfa:	mov    fs,WORD PTR [edi-0x61]
  409cfd:	adc    al,0x75
  409cff:	inc    esi
  409d00:	out    0xcb,al
  409d02:	sub    DWORD PTR [eax+0x5a],eax
  409d05:	es lock mov ecx,0x665ea834
  409d0c:	fwait
  409d0d:	das    
  409d0e:	call   0x98bb:0x2c41bf68
  409d15:	nop    edi
  409d18:	in     al,0x78
  409d1a:	stos   DWORD PTR es:[edi],eax
  409d1b:	or     ebp,0x77
  409d1e:	push   ds
  409d1f:	mov    bh,0x6
  409d21:	(bad)  
  409d23:	(bad)
  409d26:	mov    bh,bh
  409d28:	or     eax,0x49a955e2
  409d2d:	pop    ds
  409d2e:	es xchg esi,eax
  409d30:	nop
  409d31:	or     ecx,DWORD PTR [ecx+0x10]
  409d34:	outs   dx,BYTE PTR ds:[esi]
  409d35:	test   DWORD PTR [eax-0x3c],ecx
  409d38:	jle    0x409ce2
  409d3a:	sub    dl,dl
  409d3c:	scas   eax,DWORD PTR es:[edi]
  409d3d:	std    
  409d3e:	mov    ch,0x97
  409d40:	retf   0x8eab
  409d43:	mov    eax,ds:0x1f8efe76
  409d48:	and    al,0xea
  409d4a:	cmp    edi,DWORD PTR [edi-0x80]
  409d4d:	fistp  QWORD PTR [esi-0x2817fec9]
  409d53:	dec    ecx
  409d54:	inc    ebp
  409d55:	pop    ecx
  409d56:	popf   
  409d57:	push   eax
  409d58:	stos   BYTE PTR es:[edi],al
  409d59:	out    0x7f,eax
  409d5b:	dec    edi
  409d5c:	aas    
  409d5d:	pop    ecx
  409d5e:	push   edx
  409d5f:	shr    bh,cl
  409d61:	dec    eax
  409d62:	div    ebx
  409d64:	lahf   
  409d65:	sbb    BYTE PTR [edx-0x59248f14],al
  409d6b:	xchg   BYTE PTR [edx-0x6f],cl
  409d6e:	ins    DWORD PTR es:[edi],dx
  409d6f:	pusha  
  409d70:	clc    
  409d71:	xor    ebp,DWORD PTR [ebp-0x50]
  409d74:	into   
  409d75:	(bad)  
  409d76:	sub    bh,bh
  409d78:	mov    al,ds:0x2c7ed529
  409d7d:	jne    0x409ddf
  409d7f:	pop    edi
  409d80:	rol    BYTE PTR [esi-0x1387b1d3],0xbf
  409d87:	inc    edx
  409d88:	fst    QWORD PTR [edi]
  409d8a:	or     DWORD PTR [ebp+0x4be8888a],esp
  409d90:	in     eax,0x1f
  409d92:	adc    edx,esi
  409d94:	cmp    DWORD PTR [ecx+0x66],0xfdd699e9
  409d9b:	pushf  
  409d9c:	test   eax,ebx
  409d9e:	xor    cl,ah
  409da0:	xor    ah,ah
  409da2:	mov    edx,0xc2423b
  409da7:	ins    DWORD PTR es:[edi],dx
  409da8:	push   cs
  409da9:	adc    bh,BYTE PTR ds:0x8f370530
  409daf:	xchg   edi,eax
  409db0:	xchg   esp,eax
  409db1:	cli    
  409db2:	outs   dx,BYTE PTR ds:[esi]
  409db3:	lods   al,BYTE PTR ds:[esi]
  409db4:	popf   
  409db5:	adc    BYTE PTR ds:0x6b8ddae9,dh
  409dbb:	out    dx,al
  409dbc:	push   ds
  409dbd:	loope  0x409d99
  409dbf:	sbb    al,0x73
  409dc1:	(bad)  
  409dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc3:	add    dl,bl
  409dc5:	loope  0x409d99
  409dc7:	pusha  
  409dc8:	inc    ebp
  409dc9:	or     esp,esi
  409dcb:	sbb    BYTE PTR [edx+0x47],bl
  409dce:	(bad)  
  409dd1:	push   di
  409dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd4:	inc    esp
  409dd5:	ins    BYTE PTR es:[edi],dx
  409dd6:	sub    al,0x78
  409dd8:	dec    eax
  409dd9:	adc    eax,0xb354b2fc
  409dde:	shl    BYTE PTR [ecx],1
  409de0:	call   0xd327ebf7
  409de5:	dec    esp
  409de6:	mov    ecx,0x93b202f0
  409deb:	sub    edx,ebp
  409ded:	and    cl,ch
  409def:	mov    cl,0x1f
  409df1:	outs   dx,DWORD PTR ds:[esi]
  409df2:	(bad)  
  409df3:	mov    ah,0x35
  409df5:	in     al,dx
  409df6:	pop    ebp
  409df7:	add    dh,BYTE PTR [edi-0x6bf972f4]
  409dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dff:	cs push esi
  409e01:	sub    al,0xb3
  409e03:	dec    ecx
  409e04:	inc    edi
  409e05:	dec    ebx
  409e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e07:	enter  0x8290,0x86
  409e0b:	retf   
  409e0c:	in     eax,dx
  409e0d:	fisttp QWORD PTR [ecx+0x33]
  409e10:	sub    DWORD PTR [esi-0x5246116f],ebp
  409e16:	mov    ebx,DWORD PTR [ecx+edi*8]
  409e19:	mov    DWORD PTR [edx-0xf4a88f8],esp
  409e1f:	push   esp
  409e20:	ret    0xac7c
  409e23:	mov    esp,0x14742628
  409e28:	jge    0x409dbc
  409e2a:	bound  ebp,QWORD PTR [edx+0x7]
  409e2d:	ret    0xc287
  409e30:	fimul  WORD PTR ds:0x5c6b1768
  409e36:	cmp    BYTE PTR [ebx+eax*4],dl
  409e39:	inc    ecx
  409e3a:	inc    esi
  409e3b:	pop    ebx
  409e3c:	mov    ah,0x52
  409e3e:	mov    dh,0xa
  409e40:	inc    esp
  409e41:	fwait
  409e42:	sbb    eax,DWORD PTR [eax]
  409e44:	dec    ebp
  409e45:	add    al,0x24
  409e47:	out    dx,al
  409e48:	js     0x409e11
  409e4a:	push   ds
  409e4b:	fdivr  QWORD PTR [eax*2+0x37290cfc]
  409e52:	cs push edi
  409e54:	icebp  
  409e55:	cmp    ah,BYTE PTR [eax-0x33]
  409e58:	popa   
  409e59:	out    dx,eax
  409e5a:	xchg   ebx,eax
  409e5b:	mov    eax,ds:0xb5987ba2
  409e60:	or     DWORD PTR [eax+0x3d67ecfd],edi
  409e66:	push   ebx
  409e67:	jecxz  0x409e7a
  409e69:	and    DWORD PTR [ecx],ebp
  409e6b:	lods   al,BYTE PTR ds:[esi]
  409e6c:	test   DWORD PTR [eax+ebx*4+0x50366e70],ecx
  409e73:	ins    BYTE PTR es:[edi],dx
  409e74:	(bad)  
  409e75:	push   esp
  409e76:	and    esp,DWORD PTR [esi+0x78afe20a]
  409e7c:	mov    ecx,0x7da71f9b
  409e81:	pop    esi
  409e82:	dec    esi
  409e83:	jns    0x409eb4
  409e85:	jg     0x409ee7
  409e87:	mov    cl,BYTE PTR [ebx-0x23]
  409e8a:	call   0xfe5bc343
  409e8f:	leave  
  409e90:	push   ebp
  409e91:	pop    ebp
  409e92:	das    
  409e93:	inc    esi
  409e94:	push   esi
  409e95:	inc    eax
  409e96:	ffreep st(7)
  409e98:	(bad)  
  409e99:	iret   
  409e9a:	push   ebp
  409e9b:	sbb    BYTE PTR [ebp+0x13d237fc],0xf4
  409ea2:	adc    DWORD PTR [ecx-0x8d94c],ecx
  409ea8:	int    0xd4
  409eaa:	adc    eax,0x5b50f5
  409eaf:	xor    ecx,DWORD PTR [esi+0x1b]
  409eb2:	aaa    
  409eb3:	lahf   
  409eb4:	fistp  DWORD PTR [edi+0x7cafe5cf]
  409eba:	xchg   ebx,eax
  409ebb:	out    0x8,al
  409ebd:	and    ch,BYTE PTR [ebx]
  409ebf:	and    esi,0xffffffa8
  409ec2:	xlat   BYTE PTR ds:[ebx]
  409ec3:	je     0x409e93
  409ec5:	pop    edi
  409ec6:	xor    al,0x28
  409ec8:	fwait
  409ec9:	mov    cl,bl
  409ecb:	and    DWORD PTR [ecx-0x244f0289],0x4fce6a3d
  409ed5:	sub    eax,0xdb8414f1
  409eda:	bound  esi,QWORD PTR [edi]
  409edc:	inc    esi
  409edd:	push   edi
  409ede:	jnp    0x409eba
  409ee0:	inc    eax
  409ee1:	ss repz dec ebx
  409ee4:	(bad)  
  409ee5:	or     edi,DWORD PTR [eax-0x2e18ede9]
  409eeb:	aaa    
  409eec:	xchg   esp,eax
  409eed:	jns    0x409f30
  409eef:	ins    DWORD PTR es:[edi],dx
  409ef0:	pop    ss
  409ef1:	mov    eax,ds:0x2af2bd7b
  409ef6:	mov    esi,0x85422b48
  409efb:	fs inc esi
  409efd:	and    dh,cl
  409eff:	and    ah,BYTE PTR [ebp+0x4c]
  409f02:	jmp    0x409edf
  409f04:	dec    ebp
  409f05:	mov    ds:0xd2ac3558,eax
  409f0a:	fistp  QWORD PTR ds:0xbeeb636
  409f10:	inc    ecx
  409f11:	and    al,dh
  409f13:	(bad)  
  409f14:	adc    al,0x6d
  409f16:	bound  eax,QWORD PTR ds:0xc8211ba5
  409f1c:	pusha  
  409f1d:	shr    BYTE PTR [ecx-0x755d47d3],0x5
  409f24:	sbb    BYTE PTR [edx],bl
  409f26:	dec    ebp
  409f27:	dec    ecx
  409f28:	jge    0x409ebe
  409f2a:	icebp  
  409f2b:	sbb    al,bh
  409f2d:	mov    ecx,0xa7dc683f
  409f32:	xchg   ebx,eax
  409f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f34:	in     al,0xb0
  409f36:	mov    gs,WORD PTR [ecx+0x1a]
  409f39:	jl     0x409f97
  409f3b:	shl    BYTE PTR [ebx-0xa0b50c8],1
  409f41:	loop   0x409f38
  409f43:	in     eax,dx
  409f44:	pop    ds
  409f45:	hlt    
  409f46:	jno    0x409f35
  409f48:	out    0xdf,al
  409f4a:	pushf  
  409f4b:	ins    DWORD PTR es:[edi],dx
  409f4c:	inc    DWORD PTR [ebx*2-0x4358e44a]
  409f53:	stc    
  409f54:	inc    edx
  409f55:	ficom  DWORD PTR [edi-0x6a4f044a]
  409f5b:	lds    ecx,FWORD PTR [eax-0x53]
  409f5e:	mov    eax,0x259ee92f
  409f63:	add    dl,al
  409f65:	iret   
  409f66:	sbb    DWORD PTR [edx],esp
  409f68:	fimul  DWORD PTR [edi]
  409f6a:	scas   eax,DWORD PTR es:[edi]
  409f6b:	mov    edi,0xc78ae7f7
  409f70:	push   ebx
  409f71:	push   ebp
  409f72:	mov    bl,0xa3
  409f74:	imul   ecx,ecx,0xfb26ffcd
  409f7a:	call   0xee08:0x2bd317b7
  409f81:	ret    0x41c0
  409f84:	add    dl,BYTE PTR [eax]
  409f86:	or     al,0xe
  409f88:	out    0xb8,al
  409f8a:	add    DWORD PTR [esi+0x13],edi
  409f8d:	in     al,dx
  409f8e:	jae    0x409f85
  409f90:	fwait
  409f91:	xor    BYTE PTR [ebp+0x63a2931c],0x37
  409f98:	fisttp DWORD PTR [esi-0x30]
  409f9b:	xchg   edi,eax
  409f9c:	pop    esi
  409f9d:	nop
  409f9e:	lea    edi,[edx+edx*8-0x1af4496d]
  409fa5:	dec    edi
  409fa6:	sub    BYTE PTR [eax+0x4db37661],0x93
  409fad:	xchg   ecx,eax
  409fae:	shl    DWORD PTR [esi+0x4b],0xf8
  409fb2:	mov    cl,0x89
  409fb4:	xor    bh,BYTE PTR [ebp-0x1f]
  409fb7:	aaa    
  409fb8:	push   0x99aacb57
  409fbd:	mov    eax,ds:0x92b9f889
  409fc2:	ret    
  409fc3:	pusha  
  409fc4:	pop    ss
  409fc5:	push   esi
  409fc6:	jnp    0x409fde
  409fc8:	dec    ebx
  409fc9:	add    esp,DWORD PTR [esi+0x3700310f]
  409fcf:	call   0x4dc5:0xea454bd9
  409fd6:	pop    ss
  409fd7:	ds adc eax,0x7ded5b67
  409fdd:	jg     0x409fe7
  409fdf:	(bad)  
  409fe0:	lea    ebx,[esi+edi*4-0x22dbb4b7]
  409fe7:	pusha  
  409fe8:	xchg   ecx,eax
  409fe9:	mov    al,ds:0xaa7afde2
  409fee:	push   ecx
  409fef:	add    edi,DWORD PTR [edi+0x6f]
  409ff2:	xchg   ebx,eax
  409ff3:	push   esp
  409ff4:	add    eax,0x2ec8c9be
  409ff9:	mov    eax,0x1ee2c581
  409ffe:	in     al,0x5d
  40a000:	cmp    ebx,DWORD PTR [ecx]
  40a002:	fs test eax,0x98dc424f
  40a008:	pop    edi
  40a009:	jae    0x409f9b
  40a00b:	jbe    0x409fdc
  40a00d:	ins    BYTE PTR es:[edi],dx
  40a00e:	dec    esp
  40a00f:	and    eax,0xab75434c
  40a014:	jmp    0x845fdec7
  40a019:	test   BYTE PTR [ecx+0x74],dl
  40a01c:	arpl   WORD PTR [ecx-0x1db963ef],sp
  40a022:	imul   ebp,DWORD PTR [ebp+0x63],0xffffffef
  40a026:	pop    edx
  40a027:	loopne 0x40a02d
  40a029:	sti    
  40a02a:	pop    eax
  40a02b:	lds    edx,FWORD PTR [edx+0x1d]
  40a02e:	out    dx,eax
  40a02f:	shl    BYTE PTR [ebp-0x2a9f9790],0x1e
  40a036:	aam    0x15
  40a038:	jne    0x409fcf
  40a03a:	stc    
  40a03b:	sub    DWORD PTR [edi+0x3b],esp
  40a03e:	and    eax,0x3fc0c08b
  40a043:	pop    fs
  40a045:	pop    eax
  40a046:	sub    dh,BYTE PTR [esi]
  40a048:	lods   eax,DWORD PTR ds:[esi]
  40a049:	test   eax,0xfa68bcc4
  40a04e:	not    DWORD PTR [edi+0x26]
  40a051:	cmp    cl,bh
  40a053:	std    
  40a054:	mov    cs,WORD PTR [ebx-0x4d]
  40a057:	iret   
  40a058:	cdq    
  40a059:	pop    eax
  40a05a:	mov    bl,bh
  40a05c:	in     al,dx
  40a05d:	xchg   ebp,eax
  40a05e:	jns    0x40a06b
  40a060:	mov    edx,0x40d3d57d
  40a065:	dec    ebp
  40a066:	mov    ch,0x3f
  40a068:	add    eax,0x46277961
  40a06d:	and    ebx,esi
  40a06f:	sub    al,0x51
  40a071:	cwde   
  40a072:	push   edi
  40a073:	xchg   esi,eax
  40a074:	inc    BYTE PTR [edi*2-0xd2640e8]
  40a07b:	adc    DWORD PTR [ebx+0x1a23cf88],0x446b9f71
  40a085:	in     eax,0xe3
  40a087:	test   al,0x2d
  40a089:	or     al,BYTE PTR [edi]
  40a08b:	and    eax,0x46c6ebc4
  40a090:	pop    ds
  40a091:	popf   
  40a092:	jns    0x40a032
  40a094:	outs   dx,DWORD PTR ds:[esi]
  40a095:	mov    dh,0xce
  40a097:	pop    edx
  40a098:	les    ecx,FWORD PTR [eax]
  40a09a:	sahf   
  40a09b:	dec    esi
  40a09c:	add    BYTE PTR [ebx-0x3ce26fee],bh
  40a0a2:	(bad)  
  40a0a3:	jno    0x40a0ac
  40a0a5:	pop    esi
  40a0a6:	xor    DWORD PTR [ecx],0x9
  40a0a9:	xchg   edx,eax
  40a0aa:	mov    WORD PTR [esi-0x74],gs
  40a0ad:	shr    BYTE PTR [eax],1
  40a0af:	ds fild DWORD PTR cs:[ecx-0x2b]
  40a0b4:	mov    dh,0xf1
  40a0b6:	aaa    
  40a0b7:	cmp    DWORD PTR ds:0xce8db252,esi
  40a0bd:	aas    
  40a0be:	mov    dl,0xa7
  40a0c0:	inc    ecx
  40a0c1:	xchg   edi,eax
  40a0c2:	jns    0x40a114
  40a0c4:	les    esi,FWORD PTR [eax]
  40a0c6:	in     al,0x7f
  40a0c8:	and    BYTE PTR [edx-0x30],ah
  40a0cb:	dec    ecx
  40a0cc:	in     al,dx
  40a0cd:	xchg   BYTE PTR [eax+0x43ab9a4f],dh
  40a0d3:	fnstenv [eax+0x10]
  40a0d6:	or     ebp,edi
  40a0d8:	jge    0x40a0db
  40a0da:	icebp  
  40a0db:	mov    ebp,0xeed6dc23
  40a0e0:	ins    DWORD PTR es:[edi],dx
  40a0e1:	nop
  40a0e2:	test   BYTE PTR [esi],ch
  40a0e4:	sahf   
  40a0e5:	xchg   DWORD PTR [edi-0x4e],ebx
  40a0e8:	in     eax,0x37
  40a0ea:	sub    edi,eax
  40a0ec:	cmp    BYTE PTR [edi+0x2df7195d],ch
  40a0f2:	out    dx,al
  40a0f3:	push   edx
  40a0f4:	std    
  40a0f5:	shl    ch,cl
  40a0f7:	adc    DWORD PTR [ecx-0x79],edx
  40a0fa:	ja     0x40a125
  40a0fc:	dec    ebx
  40a0fd:	sub    BYTE PTR [ecx],0xc6
  40a100:	inc    esp
  40a101:	lods   eax,DWORD PTR ds:[esi]
  40a102:	(bad)  
  40a103:	fistp  QWORD PTR [ebp+0x7b]
  40a106:	inc    esi
  40a107:	imul   ebp,DWORD PTR [edx+0x39],0xfffffffa
  40a10b:	js     0x40a0a6
  40a10d:	arpl   WORD PTR [edx+0x1a],di
  40a110:	pop    es
  40a111:	lea    edi,[edi]
  40a113:	sub    BYTE PTR [ecx],bl
  40a115:	imul   eax,DWORD PTR [eax+0x2a],0x1a
  40a119:	int    0x21
  40a11b:	inc    ebx
  40a11c:	imul   ebp,DWORD PTR [eax-0x7608d166],0x717e285
  40a126:	dec    edi
  40a127:	mov    bh,0xe5
  40a129:	inc    eax
  40a12a:	std    
  40a12b:	bnd ret 
  40a12d:	out    dx,al
  40a12e:	sub    dh,al
  40a130:	mov    ebp,0x6ee6dfa9
  40a135:	cdq    
  40a136:	inc    edi
  40a137:	adc    esp,DWORD PTR [ebp-0x1cc6a9c5]
  40a13d:	sbb    DWORD PTR [ebp+0x3244852d],esp
  40a143:	mov    edx,0x747bfde
  40a148:	iret   
  40a149:	mov    ch,0xe5
  40a14b:	stos   BYTE PTR es:[edi],al
  40a14c:	jmp    0x38ab7b27
  40a151:	mov    esp,0xb595ae0c
  40a156:	enter  0x1e9b,0xd9
  40a15a:	xor    ebp,edx
  40a15c:	bound  eax,QWORD PTR [ecx+0x4168f073]
  40a162:	clc    
  40a163:	pushf  
  40a164:	das    
  40a165:	sub    edi,ebx
  40a167:	cli    
  40a168:	push   es
  40a169:	push   ds
  40a16a:	lock (bad) 
  40a16c:	loopne 0x40a1de
  40a16e:	jbe    0x40a116
  40a170:	pop    edi
  40a171:	mov    edx,0x1ac31695
  40a176:	add    DWORD PTR [ecx+0x71fc661a],esi
  40a17c:	jmp    0x4494:0x9c224b4e
  40a183:	imul   esp,ebx,0x65
  40a186:	retf   
  40a187:	or     BYTE PTR [eax],al
  40a189:	push   eax
  40a18a:	idiv   BYTE PTR [esi+eax*8+0x76cef4b2]
  40a191:	scas   eax,DWORD PTR es:[edi]
  40a192:	and    al,0x16
  40a194:	mov    ecx,0x1254e50b
  40a199:	inc    eax
  40a19a:	mov    ds,WORD PTR [eax-0x3e]
  40a19d:	cmp    ah,BYTE PTR [esi-0x1a]
  40a1a0:	inc    edi
  40a1a1:	stos   BYTE PTR es:[edi],al
  40a1a2:	pop    ebp
  40a1a3:	sub    ah,dl
  40a1a5:	call   0x6f31:0xfcf49b2a
  40a1ac:	inc    ebx
  40a1ad:	in     eax,dx
  40a1ae:	cmp    dl,BYTE PTR [eax+0x5d]
  40a1b1:	fcom   QWORD PTR [esi]
  40a1b3:	mov    bh,0xda
  40a1b5:	push   esp
  40a1b6:	dec    edi
  40a1b7:	add    eax,0x4f4b2742
  40a1bc:	(bad)  
  40a1bd:	jmp    0x40a16f
  40a1bf:	jmp    0x40a16c
  40a1c1:	jle    0x40a181
  40a1c3:	imul   ebx,DWORD PTR [eax-0x2b],0xffffffd7
  40a1c7:	mov    eax,0xa2ef7ea
  40a1cc:	jl     0x40a158
  40a1ce:	mov    cs,WORD PTR [edx+0x43]
  40a1d1:	sar    al,0x69
  40a1d4:	imul   esi,edx,0x19
  40a1d7:	imul   ebp,DWORD PTR [eax+eax*8-0x2e],0xffffffd7
  40a1dc:	mov    eax,0xa0d8312f
  40a1e1:	push   esi
  40a1e2:	ds dec ebp
  40a1e4:	les    edi,FWORD PTR [ebp+eax*8-0xb]
  40a1e8:	pop    esp
  40a1e9:	push   ss
  40a1ea:	jg     0x40a1e0
  40a1ec:	inc    eax
  40a1ed:	pop    es
  40a1ee:	je     0x40a1b1
  40a1f0:	(bad)  
  40a1f2:	fld    DWORD PTR [ebx+0x2cb7f7c9]
  40a1f8:	bound  edi,QWORD PTR [edx-0x5a]
  40a1fb:	in     eax,0xd9
  40a1fd:	sub    al,0x1f
  40a1ff:	push   ebp
  40a200:	xchg   ecx,eax
  40a201:	mov    WORD PTR [eax+0xf],gs
  40a204:	repz mov esp,0xd09956d5
  40a20a:	repz jge 0x40a281
  40a20d:	fldenv [esi]
  40a20f:	cmp    ebp,DWORD PTR [edx-0x5a]
  40a212:	cmp    al,0x60
  40a214:	fisttp QWORD PTR [edi+0x224fb5e2]
  40a21a:	mov    cl,0x5e
  40a21c:	push   0x20
  40a21e:	or     ebp,ebx
  40a220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a221:	or     ebx,DWORD PTR ds:0x5779cdb0
  40a227:	add    DWORD PTR [eax-0x2be660e9],edx
  40a22d:	push   esp
  40a22e:	sub    al,0xe3
  40a230:	mov    BYTE PTR [ebx-0x595c1244],cl
  40a236:	scas   eax,DWORD PTR es:[edi]
  40a237:	mov    edi,0xc0730aec
  40a23c:	xchg   edi,eax
  40a23d:	inc    ebp
  40a23e:	jne    0x40a28d
  40a240:	adc    al,0xf5
  40a242:	std    
  40a243:	sub    DWORD PTR [edx-0x7c5687fa],edx
  40a249:	shl    dl,1
  40a24b:	ss cwde 
  40a24d:	ss pop eax
  40a24f:	lea    edi,[ecx]
  40a251:	add    bh,ah
  40a253:	outs   dx,DWORD PTR ds:[esi]
  40a254:	ror    ecx,cl
  40a256:	outs   dx,DWORD PTR ds:[esi]
  40a257:	mov    DWORD PTR [edi+0x41cac0d2],eax
  40a25d:	pop    esi
  40a25e:	add    bh,ch
  40a260:	jmp    0x40a2b8
  40a262:	fiadd  WORD PTR [edi-0x3903785e]
  40a268:	pusha  
  40a269:	retf   
  40a26a:	mov    ebx,0xf4a2692e
  40a26f:	adc    DWORD PTR [eax-0x24],edx
  40a272:	jae    0x40a24b
  40a274:	mov    bh,0xed
  40a276:	or     eax,0x84630fc5
  40a27b:	mov    eax,0x18a3b8bb
  40a280:	jns    0x40a2d9
  40a282:	sbb    bh,BYTE PTR [ebx+ecx*8-0x4a8c9034]
  40a289:	nop
  40a28a:	mov    al,0x2a
  40a28c:	rcr    DWORD PTR [ecx+0xd732f5f],1
  40a292:	mov    dh,0xa7
  40a294:	xchg   esi,eax
  40a295:	pusha  
  40a296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a297:	fs push eax
  40a299:	mov    bh,0x7a
  40a29b:	scas   eax,DWORD PTR es:[edi]
  40a29c:	cmp    DWORD PTR [esi],esp
  40a29e:	icebp  
  40a29f:	fucomip st,st(3)
  40a2a1:	push   eax
  40a2a2:	sub    eax,edx
  40a2a4:	cmp    eax,0x51ac5c08
  40a2a9:	xchg   esi,eax
  40a2aa:	mov    eax,0xaf2e327c
  40a2af:	js     0x40a2ab
  40a2b1:	hlt    
  40a2b2:	in     eax,0x1b
  40a2b4:	jo     0x40a265
  40a2b6:	repz adc al,0x55
  40a2b9:	mov    ebx,0x62b2723c
  40a2be:	mov    edi,DWORD PTR [ebx-0x1f]
  40a2c1:	call   0xf733:0x60f43561
  40a2c8:	cs mov ecx,0xbb4fc025
  40a2ce:	push   esp
  40a2cf:	mov    esi,0xf003eb0d
  40a2d5:	jne    0x40a25c
  40a2d7:	dec    edi
  40a2d8:	popa   
  40a2d9:	mov    dh,0x44
  40a2db:	aad    0xed
  40a2dd:	out    dx,al
  40a2de:	jnp    0x40a282
  40a2e0:	cmp    al,BYTE PTR [eax-0x460b830f]
  40a2e6:	dec    edx
  40a2e8:	jmp    0xd680:0x2c293771
  40a2ef:	inc    edx
  40a2f0:	out    0x66,eax
  40a2f2:	sti    
  40a2f3:	push   0xffffffc4
  40a2f5:	xchg   esp,eax
  40a2f6:	and    BYTE PTR [edi],bl
  40a2f8:	popf   
  40a2f9:	jae    0x40a349
  40a2fb:	pushf  
  40a2fc:	mov    eax,0xc621b977
  40a301:	mov    al,0x43
  40a303:	push   DWORD PTR [esi]
  40a305:	(bad)  
  40a307:	out    dx,al
  40a308:	dec    esp
  40a309:	jnp    0x40a30b
  40a30b:	fild   WORD PTR [edx-0x18d199c8]
  40a311:	add    esp,DWORD PTR [esi+0x7f94a14a]
  40a317:	xchg   esp,eax
  40a318:	ret    
  40a319:	repz cmp esi,DWORD PTR [edx+0x343413cf]
  40a320:	pop    edi
  40a321:	jmp    DWORD PTR [ecx+0x7d69c048]
  40a327:	and    BYTE PTR [esi-0x6f59268f],bl
  40a32d:	pop    ebx
  40a32e:	or     cl,BYTE PTR [edi]
  40a330:	aad    0xee
  40a332:	inc    BYTE PTR [edx+0x396ff8f]
  40a338:	into   
  40a339:	nop
  40a33a:	das    
  40a33b:	add    DWORD PTR [eax+0x33],esp
  40a33e:	les    esi,FWORD PTR ds:0x7ee3d8d8
  40a344:	jo     0x40a3ae
  40a346:	in     eax,0xee
  40a348:	adc    bh,cl
  40a34a:	mov    BYTE PTR [esi],bh
  40a34c:	aas    
  40a34d:	ins    BYTE PTR es:[edi],dx
  40a34e:	mov    DWORD PTR [edx-0x6393dc0],esi
  40a354:	imul   ebp,DWORD PTR [edx-0x1e],0x6e1acb6d
  40a35b:	(bad)  
  40a35c:	std    
  40a35d:	xor    BYTE PTR ds:0xff3498d4,bl
  40a363:	loopne 0x40a3b4
  40a365:	jge    0x40a39f
  40a367:	and    BYTE PTR ss:[eax+0x67],ah
  40a36b:	rcl    BYTE PTR [eax-0x24],1
  40a36e:	sub    al,0x0
  40a370:	jb     0x40a304
  40a372:	sub    DWORD PTR [eax-0x46],ebx
  40a375:	mov    ecx,0x7faab560
  40a37a:	in     al,0x6d
  40a37c:	lahf   
  40a37d:	test   eax,0x9adc89b
  40a382:	mov    esp,DWORD PTR [ecx+0x3e884587]
  40a388:	stos   BYTE PTR es:[edi],al
  40a389:	add    dl,dl
  40a38b:	test   al,0x46
  40a38d:	popa   
  40a38e:	cli    
  40a38f:	ins    BYTE PTR es:[edi],dx
  40a390:	pop    ecx
  40a391:	xchg   edx,eax
  40a392:	cmp    DWORD PTR [edx-0x7107dafa],esp
  40a398:	pop    esi
  40a399:	xor    al,0x4c
  40a39b:	push   eax
  40a39c:	mov    DWORD PTR [eax+ecx*4-0x60],eax
  40a3a0:	jb     0x40a416
  40a3a2:	sbb    al,BYTE PTR [esp+esi*1+0x39]
  40a3a6:	nop
  40a3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a8:	bound  ecx,QWORD PTR [edx]
  40a3aa:	mov    eax,DWORD PTR [edi+0x65]
  40a3ad:	mov    DWORD PTR [edi],eax
  40a3af:	mov    al,0x32
  40a3b1:	cmc    
  40a3b2:	rol    al,1
  40a3b4:	pusha  
  40a3b5:	mov    ch,0xd8
  40a3b7:	loop   0x40a39a
  40a3b9:	push   ds
  40a3ba:	pop    es
  40a3bb:	xchg   esi,eax
  40a3bc:	pushf  
  40a3bd:	inc    edx
  40a3be:	ins    DWORD PTR es:[edi],dx
  40a3bf:	sbb    eax,0x4221714a
  40a3c4:	dec    edi
  40a3c5:	mov    edx,0x84e3d783
  40a3ca:	pop    ebx
  40a3cb:	ss out 0x9,al
  40a3ce:	test   eax,edi
  40a3d0:	sub    edi,edi
  40a3d2:	leave  
  40a3d3:	aad    0x97
  40a3d5:	mov    eax,ds:0xbbfa07a0
  40a3da:	add    dh,BYTE PTR ds:0xea0020dd
  40a3e0:	xor    DWORD PTR [edi+0x7afb2c1a],edi
  40a3e6:	push   si
  40a3e8:	push   0xd9220d90
  40a3ed:	push   0x3b
  40a3ef:	stos   DWORD PTR es:[edi],eax
  40a3f0:	xchg   DWORD PTR [ebp+0x1d],eax
  40a3f3:	push   eax
  40a3f4:	iret   
  40a3f5:	jp     0x40a37d
  40a3f7:	adc    BYTE PTR [eax-0xcee46e6],ah
  40a3fd:	inc    ebp
  40a3fe:	call   0xad75:0xe4b21ca3
  40a405:	mov    DWORD PTR [ebx],ebx
  40a407:	xor    BYTE PTR [edi+0x1e],dh
  40a40a:	jns    0x40a44e
  40a40c:	push   ebp
  40a40d:	xchg   ecx,eax
  40a40e:	push   esp
  40a40f:	ret    
  40a410:	es mov al,0x1
  40a413:	rol    BYTE PTR [edx+0x52447837],cl
  40a419:	ror    bl,1
  40a41b:	jecxz  0x40a3aa
  40a41d:	pop    ss
  40a41e:	shr    DWORD PTR [eax],cl
  40a420:	stos   DWORD PTR es:[edi],eax
  40a421:	aaa    
  40a422:	push   0x1c43d592
  40a427:	and    eax,0xa56a2e93
  40a42c:	mov    ebx,0xd39f1ab1
  40a431:	mov    esi,0xd380a8ae
  40a436:	hlt    
  40a437:	mov    dl,BYTE PTR [edx+0x4a]
  40a43a:	in     al,dx
  40a43b:	xor    eax,DWORD PTR [ebp+0x32e11039]
  40a441:	xchg   DWORD PTR [esi],edx
  40a443:	arpl   bp,si
  40a445:	pop    ss
  40a446:	pop    esi
  40a447:	sub    eax,0xe538e30
  40a44c:	dec    edi
  40a44d:	ss mov ecx,ebp
  40a450:	das    
  40a451:	cmc    
  40a452:	test   eax,0x5bb5c489
  40a457:	pop    eax
  40a458:	sar    BYTE PTR [esi+0x52],1
  40a45b:	pop    ebp
  40a45c:	add    ch,ch
  40a45e:	ins    BYTE PTR es:[edi],dx
  40a45f:	out    dx,eax
  40a460:	jl     0x40a4b1
  40a462:	add    BYTE PTR [ebp+0x2480fc0f],bl
  40a468:	mov    edx,0x8ee128c9
  40a46d:	push   ebx
  40a46e:	inc    bh
  40a470:	ficom  DWORD PTR [edx]
  40a472:	jmp    0xb584:0x73a641bf
  40a479:	out    dx,eax
  40a47a:	enter  0x10cc,0x28
  40a47e:	loopne 0x40a4cb
  40a480:	add    al,0x3e
  40a482:	xor    DWORD PTR [edx],ecx
  40a484:	div    edi
  40a486:	int    0xdf
  40a488:	mov    eax,ds:0xc832abf7
  40a48d:	cmp    ebp,esi
  40a48f:	hlt    
  40a490:	cmp    DWORD PTR [esi-0x6f],0xffffffe9
  40a494:	std    
  40a495:	jg     0x40a46c
  40a497:	push   cs
  40a498:	jns    0x40a4cd
  40a49a:	and    BYTE PTR [esi],cl
  40a49c:	mov    ds:0x4c0ef645,eax
  40a4a1:	rol    DWORD PTR [eax+0x13],1
  40a4a4:	aam    0x2
  40a4a6:	dec    esp
  40a4a7:	stos   BYTE PTR es:[edi],al
  40a4a8:	xor    ebp,eax
  40a4aa:	cld    
  40a4ab:	sub    al,0xce
  40a4ad:	mov    edi,0x85530b8f
  40a4b2:	mov    cl,0x33
  40a4b4:	hlt    
  40a4b5:	xchg   esi,eax
  40a4b6:	lods   al,BYTE PTR ds:[esi]
  40a4b7:	push   esi
  40a4b8:	add    edx,esp
  40a4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4bb:	sub    DWORD PTR [esi+0x3a52cc72],ebp
  40a4c1:	or     edi,DWORD PTR [edx-0x15d3e03f]
  40a4c7:	inc    eax
  40a4c8:	cld    
  40a4c9:	jmp    0x701580de
  40a4ce:	outs   dx,DWORD PTR ds:[esi]
  40a4cf:	or     BYTE PTR [esi+0x21a0c8d3],dl
  40a4d5:	inc    edx
  40a4d6:	push   0xf85f8584
  40a4db:	mov    WORD PTR [ebp+edx*8+0x3a],?
  40a4df:	cli    
  40a4e0:	fldl2t 
  40a4e2:	sub    BYTE PTR [esi+0x57],ah
  40a4e5:	sbb    edi,edi
  40a4e7:	mov    bl,0x7d
  40a4e9:	cmp    al,0x46
  40a4eb:	mov    edx,0x32605894
  40a4f0:	push   edi
  40a4f1:	sahf   
  40a4f2:	add    ebx,ecx
  40a4f4:	jmp    0x40a48f
  40a4f6:	xor    ebp,0x450ce594
  40a4fc:	test   eax,0xbd873648
  40a501:	loop   0x40a54c
  40a503:	sub    ah,al
  40a505:	lods   al,BYTE PTR ds:[esi]
  40a506:	mov    bl,0xb8
  40a508:	cli    
  40a509:	xor    al,0x77
  40a50b:	daa    
  40a50c:	adc    al,0xea
  40a50e:	dec    ebp
  40a50f:	call   0x43ba:0xe80dd904
  40a516:	call   FWORD PTR [ebx]
  40a518:	fisub  DWORD PTR [eax+0x37]
  40a51b:	jge    0x40a571
  40a51d:	aas    
  40a51e:	icebp  
  40a51f:	jne    0x40a59f
  40a521:	sbb    eax,0x727f6c4b
  40a526:	sbb    DWORD PTR [edx],edx
  40a528:	sub    edi,ecx
  40a52a:	sub    bl,BYTE PTR [ecx]
  40a52c:	jecxz  0x40a4cd
  40a52e:	repnz sbb ah,BYTE PTR [edi]
  40a531:	cmp    eax,0xbb80fb5d
  40a536:	xor    cx,dx
  40a539:	push   0xffffffe2
  40a53b:	pop    ecx
  40a53c:	push   ebp
  40a53d:	call   0xa5c:0xd663ea20
  40a544:	dec    edi
  40a545:	rcr    BYTE PTR [ebx+0xb643863],0xa0
  40a54c:	pusha  
  40a54d:	(bad)  
  40a54e:	mov    al,ds:0x1a63c4d1
  40a553:	icebp  
  40a554:	enter  0xe676,0xf8
  40a558:	aas    
  40a559:	inc    esi
  40a55a:	jae    0x40a5b5
  40a55c:	mov    cl,0x2f
  40a55e:	inc    edx
  40a55f:	loope  0x40a5ab
  40a561:	jnp    0x40a50c
  40a563:	inc    ebp
  40a564:	nop
  40a565:	aaa    
  40a566:	mov    cl,0x7c
  40a568:	enter  0x63be,0x19
  40a56c:	xchg   esi,eax
  40a56d:	retf   0x441d
  40a570:	xchg   ecx,eax
  40a571:	mov    ds:0x6d036bc3,al
  40a576:	test   eax,0xee9e653
  40a57b:	or     bh,ch
  40a57d:	mov    ebp,0xb460391e
  40a582:	test   DWORD PTR [edi],ebp
  40a584:	call   0x34caf81c
  40a589:	aas    
  40a58a:	mov    ds:0xa34b5866,eax
  40a58f:	add    DWORD PTR [edx+ebp*2-0x5bef0cc1],esi
  40a596:	inc    ebx
  40a597:	xchg   dl,ah
  40a599:	lahf   
  40a59a:	xor    BYTE PTR [esi-0x22],ch
  40a59d:	xor    eax,0x137b3c75
  40a5a2:	jno    0x40a5ed
  40a5a4:	inc    eax
  40a5a5:	or     eax,DWORD PTR [esi+edi*2-0x68b3cce7]
  40a5ac:	arpl   WORD PTR [eax-0x72],bp
  40a5af:	inc    ebx
  40a5b0:	inc    ecx
  40a5b1:	std    
  40a5b2:	pop    ds
  40a5b3:	fnstenv [edx-0xef37714]
  40a5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ba:	int    0x1c
  40a5bc:	mov    ds:0x7769afdb,eax
  40a5c1:	int    0xbc
  40a5c3:	xor    eax,DWORD PTR [ebp+0x67]
  40a5c6:	push   cs
  40a5c7:	mov    ds:0x1157b444,al
  40a5cc:	dec    eax
  40a5cd:	je     0x40a5b6
  40a5cf:	leavew 
  40a5d1:	outs   dx,DWORD PTR ds:[esi]
  40a5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d3:	xchg   esp,eax
  40a5d4:	xchg   DWORD PTR [ecx+edi*8],eax
  40a5d7:	cmp    DWORD PTR [edi+edi*1],eax
  40a5da:	dec    ebx
  40a5db:	outs   dx,BYTE PTR ds:[esi]
  40a5dc:	xor    BYTE PTR [eax],bh
  40a5de:	scas   al,BYTE PTR es:[edi]
  40a5df:	mov    al,0x9b
  40a5e1:	adc    al,0xfa
  40a5e3:	add    DWORD PTR [edx-0x1af59814],eax
  40a5e9:	sbb    ah,BYTE PTR [ecx]
  40a5eb:	test   BYTE PTR [ecx+0x68f9d57d],bl
  40a5f1:	out    dx,eax
  40a5f2:	lahf   
  40a5f3:	js     0x40a66d
  40a5f5:	in     eax,0x6d
  40a5f7:	push   esp
  40a5f8:	jge    0x40a5ca
  40a5fa:	hlt    
  40a5fb:	out    dx,al
  40a5fc:	mov    esp,0x4337460b
  40a601:	sub    al,0x82
  40a603:	nop
  40a604:	lods   al,BYTE PTR ds:[esi]
  40a605:	pop    ecx
  40a606:	sbb    DWORD PTR [edi],ebx
  40a608:	xor    eax,0x2c8e272f
  40a60d:	cmp    ebx,ebx
  40a60f:	and    al,0xee
  40a611:	int    0xde
  40a613:	sbb    al,0x63
  40a615:	jnp    0x40a653
  40a617:	test   bl,bh
  40a619:	mov    fs,edi
  40a61b:	into   
  40a61c:	sti    
  40a61d:	fisttp QWORD PTR [esi]
  40a61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a620:	ss cdq 
  40a622:	pop    es
  40a623:	dec    ecx
  40a624:	pop    ds
  40a625:	fadd   st,st(7)
  40a627:	cwde   
  40a628:	aas    
  40a629:	fcomip st,st(1)
  40a62b:	hlt    
  40a62c:	pop    edi
  40a62d:	add    edx,edi
  40a62f:	outs   dx,DWORD PTR ds:[esi]
  40a630:	and    bh,BYTE PTR [edi+ebx*8]
  40a633:	arpl   WORD PTR [edx-0x39890260],bp
  40a639:	jo     0x40a660
  40a63b:	mov    ebx,0xb39eab8f
  40a640:	jge    0x40a674
  40a642:	(bad)  
  40a643:	mov    ebx,0x61d5d08c
  40a648:	fld    DWORD PTR [esi+0x7bf1c242]
  40a64e:	outs   dx,DWORD PTR ds:[esi]
  40a64f:	push   cs
  40a650:	adc    al,bh
  40a652:	push   eax
  40a653:	jp     0x40a6b9
  40a655:	outs   dx,DWORD PTR ds:[esi]
  40a656:	mov    esp,0x49b6fcc8
  40a65b:	pop    eax
  40a65c:	jg     0x40a697
  40a65e:	ret    
  40a65f:	jbe    0x40a663
  40a661:	add    DWORD PTR [eax-0x1b2b545],edx
  40a667:	mov    bh,0xc4
  40a669:	cmp    al,0xd4
  40a66b:	mov    ebx,0x985aa987
  40a670:	iret   
  40a671:	pop    edx
  40a672:	repnz dec eax
  40a674:	test   al,0xb1
  40a676:	add    eax,0x13de4fa8
  40a67b:	mov    edi,0x93cb1c71
  40a680:	push   0x74fc40bc
  40a685:	adc    DWORD PTR [edx+0x2b297aa8],ecx
  40a68b:	push   ss
  40a68c:	inc    ebp
  40a68d:	or     eax,0x2db252bc
  40a692:	stos   BYTE PTR es:[edi],al
  40a693:	repz add DWORD PTR [ebp+0x76d446b8],esi
  40a69a:	scas   eax,DWORD PTR es:[edi]
  40a69b:	int3   
  40a69c:	retf   0xece4
  40a69f:	cmp    esi,esi
  40a6a1:	inc    ebp
  40a6a2:	and    DWORD PTR [edi-0xa],ecx
  40a6a5:	iret   
  40a6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a7:	xor    dh,BYTE PTR [ebp+0x0]
  40a6aa:	out    0x5e,eax
  40a6ac:	leave  
  40a6ad:	repnz mov ebx,fs
  40a6b0:	jl     0x40a6f1
  40a6b2:	jns    0x40a720
  40a6b4:	stos   DWORD PTR es:[edi],eax
  40a6b5:	mov    cs,WORD PTR [ecx-0x7c]
  40a6b8:	into   
  40a6b9:	cmc    
  40a6ba:	mov    eax,ds:0x9cb2ce01
  40a6bf:	sub    al,0x25
  40a6c1:	rcr    DWORD PTR [ebx-0x544789f8],cl
  40a6c7:	mov    dh,0xce
  40a6c9:	adc    eax,0x5a40855a
  40a6ce:	into   
  40a6cf:	inc    esp
  40a6d0:	fs lock sub eax,0xf9aab502
  40a6d7:	pop    edi
  40a6d8:	ins    BYTE PTR es:[edi],dx
  40a6d9:	dec    ebp
  40a6da:	xchg   esi,eax
  40a6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dc:	scas   eax,DWORD PTR es:[edi]
  40a6dd:	les    ecx,FWORD PTR [esi]
  40a6df:	repz sbb BYTE PTR [ebp+eiz*2+0x44],ah
  40a6e4:	pop    ss
  40a6e5:	pushf  
  40a6e6:	push   ss
  40a6e7:	add    al,0x68
  40a6e9:	(bad)  
  40a6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6eb:	or     cl,BYTE PTR [ebx]
  40a6ed:	push   ecx
  40a6ee:	jne    0x40a670
  40a6f0:	mov    bh,0x15
  40a6f2:	add    eax,0x9b020b66
  40a6f7:	call   0x863c39b3
  40a6fc:	sbb    al,0xe1
  40a6fe:	dec    eax
  40a6ff:	mov    al,ds:0xd566477c
  40a704:	rol    BYTE PTR [esi],0x69
  40a707:	(bad)  
  40a708:	push   0xaec06b1e
  40a70d:	or     al,0xf5
  40a70f:	fsubr  QWORD PTR [esi+0xb3d1e08]
  40a715:	fistp  WORD PTR [edi]
  40a717:	shl    BYTE PTR [edi+0xe],0x7c
  40a71b:	jbe    0x40a718
  40a71d:	or     ah,cl
  40a71f:	js     0x40a6ea
  40a721:	inc    eax
  40a722:	repz repz or ebx,DWORD PTR [esi]
  40a726:	mov    DWORD PTR [esi-0x6c09ab8b],0x661ddd9d
  40a730:	lods   eax,DWORD PTR ds:[esi]
  40a731:	lea    eax,[ebp+0x1b]
  40a734:	(bad)  ds:0xc6462c3b
  40a73a:	mov    ds:0xcc7cd7dc,eax
  40a73f:	sub    eax,DWORD PTR [eax-0x5d]
  40a742:	sub    bl,0x5f
  40a745:	repnz mov esi,0x563f7a3e
  40a74b:	dec    esp
  40a74c:	cmp    eax,0x76f4b84f
  40a751:	adc    DWORD PTR [ecx+ebx*2+0x356adbc6],esi
  40a758:	daa    
  40a759:	inc    edx
  40a75a:	xor    DWORD PTR [eax],0xa95e4051
  40a760:	or     ah,BYTE PTR [ebx-0x3a]
  40a763:	mov    bh,0x9e
  40a765:	mov    ds:0x76da6480,eax
  40a76a:	cmovae esp,DWORD PTR [esi+0x3783c4b1]
  40a771:	dec    ebx
  40a772:	sbb    DWORD PTR [edx+0x386bc06c],eax
  40a778:	jne    0x40a72b
  40a77a:	jmp    0xb3dc:0x16734e07
  40a781:	fmul   QWORD PTR ds:0xb033f5be
  40a787:	loopne 0x40a733
  40a789:	cli    
  40a78a:	rol    BYTE PTR [edi],cl
  40a78c:	xchg   ebp,eax
  40a78d:	popf   
  40a78e:	pop    ecx
  40a78f:	xor    eax,0x84b7ef29
  40a794:	leave  
  40a795:	(bad)  
  40a796:	dec    esi
  40a797:	inc    ebp
  40a798:	fwait
  40a799:	(bad)  
  40a79a:	sub    dl,al
  40a79c:	aad    0x31
  40a79e:	shl    DWORD PTR [ebx+eax*4],0xfc
  40a7a2:	shl    DWORD PTR [esi],1
  40a7a4:	mov    ebx,0x6e11100a
  40a7a9:	bound  ebp,QWORD PTR [ebx]
  40a7ab:	stos   DWORD PTR es:[edi],eax
  40a7ac:	jno    0x40a812
  40a7ae:	and    edx,DWORD PTR [ebx]
  40a7b0:	loope  0x40a7e4
  40a7b2:	or     edi,DWORD PTR [edx-0x4a]
  40a7b5:	pop    es
  40a7b6:	or     BYTE PTR [ebx],dh
  40a7b8:	inc    eax
  40a7b9:	mov    cl,0x9d
  40a7bb:	adc    eax,0x329ae408
  40a7c0:	mov    bl,0x57
  40a7c2:	jmp    0xc80a:0xaeb8c08e
  40a7c9:	(bad)  
  40a7ca:	xchg   edi,eax
  40a7cb:	repz xchg esi,eax
  40a7cd:	dec    ecx
  40a7ce:	jno    0x40a7f5
  40a7d0:	or     dh,bh
  40a7d2:	ds retf 
  40a7d4:	dec    edx
  40a7d5:	faddp  st(1),st
  40a7d7:	ret    0x7b33
  40a7da:	sbb    ebp,0xe3f61506
  40a7e0:	and    BYTE PTR [ebx+0x1abc62bf],al
  40a7e6:	dec    esp
  40a7e7:	mov    ebp,DWORD PTR [eax+0xc14623a]
  40a7ed:	mov    bl,0xb3
  40a7ef:	add    al,0x1f
  40a7f1:	loop   0x40a7f6
  40a7f3:	push   ss
  40a7f4:	in     al,0x83
  40a7f6:	bound  edx,QWORD PTR [ebp-0x59a97056]
  40a7fc:	das    
  40a7fd:	add    BYTE PTR ds:0xdc78bf4e,al
  40a803:	aas    
  40a804:	push   esp
  40a805:	push   ds
  40a806:	push   esi
  40a807:	dec    esp
  40a808:	mov    WORD PTR [edi+edi*8],?
  40a80b:	pop    ebx
  40a80c:	sbb    esp,DWORD PTR [edx]
  40a80e:	mov    al,ds:0x6542f756
  40a813:	sbb    DWORD PTR ds:0xfba02be9,0xdb5bf36
  40a81d:	(bad)  
  40a81e:	jl     0x40a828
  40a820:	mov    bl,BYTE PTR [edi+0x4d]
  40a823:	repz retf 
  40a825:	push   ebx
  40a826:	aam    0xf6
  40a828:	push   esp
  40a829:	jg     0x40a86e
  40a82b:	in     al,0x93
  40a82d:	cs lock add eax,0x62f29b82
  40a834:	xchg   ecx,eax
  40a835:	rcl    BYTE PTR [edx-0x3b471d11],0xd5
  40a83c:	or     al,0xad
  40a83e:	pop    eax
  40a83f:	push   0x6183f81
  40a844:	xor    cl,BYTE PTR [edi+0x38]
  40a847:	add    BYTE PTR [edi+0x5f],ch
  40a84a:	mov    bh,0xef
  40a84c:	lods   al,BYTE PTR ds:[esi]
  40a84d:	(bad)  
  40a84e:	(bad)  
  40a84f:	call   0x580a:0xccbacfb6
  40a856:	fimul  DWORD PTR [eax]
  40a858:	dec    esi
  40a859:	test   eax,0x2d437257
  40a85e:	mov    ds:0xe98e6858,al
  40a863:	in     eax,dx
  40a864:	jg     0x40a8b4
  40a866:	and    al,0xe
  40a868:	add    DWORD PTR [edx-0xf],edi
  40a86b:	inc    ebx
  40a86c:	ficom  WORD PTR [ecx+ecx*2]
  40a86f:	inc    edx
  40a870:	into   
  40a871:	pop    esi
  40a872:	lods   eax,DWORD PTR ds:[esi]
  40a873:	sbb    ecx,edx
  40a875:	add    eax,0x64d2e2cf
  40a87a:	jmp    DWORD PTR [esi]
  40a87c:	test   DWORD PTR cs:[ecx-0x72],ecx
  40a880:	ss push ds
  40a882:	shl    DWORD PTR [edi+0x25a7ad76],0xdb
  40a889:	into   
  40a88a:	imul   ebx,DWORD PTR [ebx],0x7610331d
  40a890:	mov    ds,eax
  40a892:	out    dx,al
  40a893:	add    ebp,eax
  40a895:	(bad)  [edi-0x4d]
  40a898:	in     eax,0xa3
  40a89a:	adc    al,0xfc
  40a89c:	mov    esp,0x64d81b18
  40a8a1:	outs   dx,DWORD PTR fs:[esi]
  40a8a3:	cmp    DWORD PTR [ebx+0x6f],eax
  40a8a6:	popf   
  40a8a7:	pop    ebx
  40a8a8:	mov    DWORD PTR [ebp+0x6c],0xfcecb461
  40a8af:	pop    ebp
  40a8b0:	pop    es
  40a8b1:	ja     0x40a870
  40a8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b4:	add    dh,BYTE PTR [ebp-0x4e17e909]
  40a8ba:	aam    0x2d
  40a8bc:	aaa    
  40a8bd:	fadd   QWORD PTR [edi+0x1]
  40a8c0:	mov    ebx,0xcbef69b4
  40a8c5:	push   ebx
  40a8c6:	lock xor dh,bl
  40a8c9:	outs   dx,BYTE PTR ds:[esi]
  40a8ca:	sbb    DWORD PTR [esi],0x265d22c4
  40a8d0:	outs   dx,BYTE PTR ds:[esi]
  40a8d1:	pusha  
  40a8d2:	(bad)  
  40a8d3:	pushf  
  40a8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d5:	mov    edi,0x129bb54b
  40a8da:	sbb    eax,0x5bb7cbb9
  40a8e0:	mov    cl,0x18
  40a8e2:	aam    0xa1
  40a8e4:	sub    al,0xe3
  40a8e6:	inc    BYTE PTR [ecx]
  40a8e8:	dec    esi
  40a8e9:	test   DWORD PTR [edi],0x64105c65
  40a8ef:	rcl    DWORD PTR [eax],cl
  40a8f1:	sahf   
  40a8f2:	cmp    eax,0x4c601409
  40a8f7:	stc    
  40a8f8:	inc    ecx
  40a8f9:	jp     0x40a93b
  40a8fb:	and    cl,BYTE PTR [eax]
  40a8fd:	in     eax,0x19
  40a8ff:	sub    eax,0xadaa53c7
  40a904:	mov    ch,BYTE PTR [eax]
  40a906:	test   DWORD PTR [esi],ecx
  40a908:	mov    dl,0x12
  40a90a:	jecxz  0x40a963
  40a90c:	shl    DWORD PTR [edx-0x72],0x8e
  40a910:	sti    
  40a911:	inc    edx
  40a912:	clc    
  40a913:	inc    ecx
  40a914:	cmp    eax,0xbbad06c
  40a919:	dec    edi
  40a91a:	cmp    BYTE PTR ds:0x55425e04,dh
  40a920:	mov    bh,0x46
  40a922:	jb     0x40a905
  40a924:	xor    ch,dl
  40a926:	sahf   
  40a927:	clc    
  40a928:	cmp    BYTE PTR [ecx],0xcc
  40a92b:	and    BYTE PTR [edi],dl
  40a92d:	adc    eax,0x7d65bb8c
  40a932:	pop    ds
  40a933:	int3   
  40a934:	xchg   edx,eax
  40a936:	les    ebp,FWORD PTR [ebx-0x1d]
  40a939:	int3   
  40a93a:	fild   QWORD PTR [edi+0x2f]
  40a93d:	sub    DWORD PTR [edx+eiz*1+0x74],0xffffffab
  40a942:	popf   
  40a943:	je     0x40a8d6
  40a945:	bound  ebp,QWORD PTR [eax+0x3e]
  40a948:	out    dx,al
  40a949:	scas   al,BYTE PTR es:[edi]
  40a94a:	dec    esp
  40a94b:	lea    esi,[ecx-0x4]
  40a94e:	cmp    BYTE PTR [edi+0x647d69af],0x5f
  40a955:	int    0xca
  40a957:	pop    esi
  40a958:	pop    edx
  40a959:	xchg   ebx,eax
  40a95a:	xlat   BYTE PTR ds:[ebx]
  40a95b:	xor    al,0xb
  40a95d:	out    0x40,eax
  40a95f:	and    al,0xa9
  40a961:	mov    edx,0x525b79b9
  40a966:	sub    eax,0xda504048
  40a96b:	ins    DWORD PTR es:[edi],dx
  40a96c:	data16 in al,0x8f
  40a96f:	repnz pusha 
  40a971:	pop    ebp
  40a972:	mov    edi,esp
  40a974:	push   esi
  40a975:	inc    edi
  40a976:	dec    dh
  40a978:	jno    0x40a914
  40a97a:	mov    cl,0x29
  40a97c:	add    al,0xf8
  40a97e:	or     eax,0x8ebf6d6
  40a983:	inc    edi
  40a984:	push   edx
  40a985:	push   edi
  40a986:	fld    DWORD PTR [ecx+0x27]
  40a989:	lods   eax,DWORD PTR ds:[esi]
  40a98a:	sub    al,0x57
  40a98c:	mov    bl,0xb
  40a98e:	out    0x5a,al
  40a990:	(bad)  
  40a991:	mov    al,ds:0xbe58655c
  40a996:	inc    eax
  40a997:	aas    
  40a998:	lods   al,BYTE PTR ds:[esi]
  40a999:	in     eax,dx
  40a99a:	out    dx,al
  40a99b:	xor    DWORD PTR [eax-0x76],ebx
  40a99e:	dec    edi
  40a99f:	inc    esp
  40a9a0:	sub    DWORD PTR [edi+0x24],esi
  40a9a3:	scas   al,BYTE PTR es:[edi]
  40a9a4:	fcmovnu st,st(1)
  40a9a6:	cld    
  40a9a7:	scas   al,BYTE PTR es:[edi]
  40a9a8:	in     al,0xaf
  40a9aa:	ds mov dh,0x92
  40a9ad:	leave  
  40a9ae:	jmp    0xf710fafb
  40a9b3:	loop   0x40a939
  40a9b5:	pop    esi
  40a9b6:	mov    edi,0x87c5cb20
  40a9bb:	pusha  
  40a9bc:	ret    
  40a9bd:	xlat   BYTE PTR ds:[ebx]
  40a9be:	test   ch,0xc6
  40a9c1:	test   al,0x92
  40a9c3:	retf   0x5480
  40a9c6:	push   ecx
  40a9c7:	pop    ebx
  40a9c8:	out    dx,eax
  40a9c9:	mov    ah,0x70
  40a9cb:	(bad)  
  40a9cc:	std    
  40a9cd:	iret   
  40a9ce:	or     BYTE PTR [esi],dh
  40a9d0:	inc    esi
  40a9d1:	sahf   
  40a9d2:	pop    esi
  40a9d3:	mov    ecx,0x3ffe8604
  40a9d8:	adc    eax,0x7bd30217
  40a9dd:	dec    esp
  40a9de:	xchg   esp,eax
  40a9df:	cld    
  40a9e0:	mov    ebp,0x38647b14
  40a9e5:	mov    esi,0x1afd2d2f
  40a9ea:	shr    DWORD PTR [esi-0x28],1
  40a9ed:	repnz or eax,0x6ff1fef3
  40a9f3:	lahf   
  40a9f4:	adc    ecx,DWORD PTR [ecx+0x60f747e1]
  40a9fa:	(bad)  
  40a9fb:	mov    edi,0xd0204658
  40aa00:	dec    edi
  40aa01:	jns    0x40a9c5
  40aa03:	enter  0xf876,0xa1
  40aa07:	push   esp
  40aa08:	(bad)  
  40aa09:	xchg   ebx,eax
  40aa0a:	test   BYTE PTR [esi-0x34eba0c],al
  40aa10:	bound  edi,QWORD PTR [edi]
  40aa12:	js     0x40a9d3
  40aa14:	jg     0x40aa48
  40aa16:	(bad)  
  40aa17:	sbb    DWORD PTR ss:[eax],ebp
  40aa1a:	loopne 0x40aa2d
  40aa1c:	(bad)  
  40aa1d:	pusha  
  40aa1e:	jb     0x40aa0d
  40aa20:	jo     0x40aa0f
  40aa22:	pop    edi
  40aa23:	int3   
  40aa24:	mov    esp,DWORD PTR [edi+edx*2]
  40aa27:	xchg   ebp,eax
  40aa28:	xor    esi,edx
  40aa2a:	mov    ecx,0xc8383aed
  40aa2f:	shl    BYTE PTR [esi-0x58e827c0],1
  40aa35:	jno    0x40aa13
  40aa37:	dec    esp
  40aa38:	pop    ss
  40aa39:	push   ecx
  40aa3a:	mov    al,0x85
  40aa3c:	jo     0x40aa45
  40aa3e:	xchg   BYTE PTR [edx+ecx*1-0x4b0f1726],ah
  40aa45:	sti    
  40aa46:	mov    al,0x5
  40aa48:	outs   dx,BYTE PTR ds:[esi]
  40aa49:	push   ecx
  40aa4a:	call   0x74d73d41
  40aa4f:	std    
  40aa50:	sbb    bh,dl
  40aa52:	sar    edx,1
  40aa54:	xchg   BYTE PTR [esi-0x69],bh
  40aa57:	lds    esp,FWORD PTR [edx+0x3f]
  40aa5a:	mov    eax,0xca4d30a9
  40aa5f:	sbb    al,0xd
  40aa61:	push   esp
  40aa62:	je     0x40aa6f
  40aa64:	(bad)  
  40aa65:	jp     0x40aa33
  40aa67:	mov    esp,0x125d2707
  40aa6c:	cs aad 0xac
  40aa6f:	xchg   DWORD PTR [edi],esi
  40aa71:	push   cs
  40aa72:	mov    ah,0x6f
  40aa74:	lahf   
  40aa75:	xchg   ebp,eax
  40aa76:	and    cl,dh
  40aa78:	xchg   edx,eax
  40aa79:	adc    al,BYTE PTR [esi]
  40aa7b:	adc    eax,0xf35c78a1
  40aa80:	arpl   bp,bx
  40aa82:	push   ebp
  40aa83:	pusha  
  40aa84:	and    BYTE PTR [eax],cl
  40aa86:	or     DWORD PTR [ecx-0x79],ecx
  40aa89:	pop    ebp
  40aa8a:	and    eax,0x4ed23cf2
  40aa8f:	mov    WORD PTR [eax+ecx*8+0x3931e7d5],?
  40aa96:	jns    0x40aafe
  40aa98:	popf   
  40aa99:	xchg   esi,eax
  40aa9a:	dec    ebp
  40aa9b:	addr16 mov eax,ds:0x80b5
  40aa9f:	jbe    0x40aadd
  40aaa1:	xchg   ebx,eax
  40aaa2:	clc    
  40aaa3:	xchg   ebx,eax
  40aaa4:	sub    bh,al
  40aaa6:	sbb    eax,edx
  40aaa8:	jae    0x40aac2
  40aaaa:	add    BYTE PTR [eax],dh
  40aaac:	add    eax,0x51a13afa
  40aab1:	pop    esi
  40aab2:	call   ecx
  40aab4:	hlt    
  40aab5:	mov    WORD PTR [ecx],es
  40aab7:	fs pop ebx
  40aab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaba:	lds    ebp,FWORD PTR [eax]
  40aabc:	jmp    0x40ab3b
  40aabe:	sahf   
  40aabf:	add    ebx,DWORD PTR [edi+0x3f433397]
  40aac5:	pop    ebp
  40aac6:	(bad)  
  40aac7:	sbb    ecx,esi
  40aac9:	jge    0x40aacd
  40aacb:	cs mov ch,0x40
  40aace:	mov    edi,0x5b905abb
  40aad3:	or     eax,0xa864c6b
  40aad8:	xor    edx,esi
  40aada:	add    eax,0x97904e4e
  40aadf:	add    al,bh
  40aae1:	dec    eax
  40aae2:	in     eax,dx
  40aae3:	xchg   esi,eax
  40aae4:	jno    0x40aaad
  40aae6:	(bad)  
  40aae7:	pop    esi
  40aae8:	retf   
  40aae9:	adc    BYTE PTR ds:0xa0a96806,bl
  40aaef:	mov    esp,0x6b18e53b
  40aaf4:	xchg   ecx,eax
  40aaf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf6:	jo     0x40aae2
  40aaf8:	aas    
  40aaf9:	dec    edx
  40aafa:	jo     0x40aaa1
  40aafc:	shl    esp,0xa4
  40aaff:	test   DWORD PTR [eax],ebx
  40ab01:	mov    eax,ds:0xf703f7ce
  40ab06:	ins    BYTE PTR es:[edi],dx
  40ab07:	mov    bh,0xaf
  40ab09:	fiadd  WORD PTR ds:0xc42e5dd
  40ab0f:	and    al,0x54
  40ab11:	push   cs
  40ab12:	mov    esp,0x935bec45
  40ab17:	push   ebp
  40ab18:	dec    ecx
  40ab19:	dec    ecx
  40ab1a:	adc    al,0x96
  40ab1c:	(bad)  
  40ab1e:	jmp    0x40ab2d
  40ab20:	dec    edx
  40ab21:	push   esi
  40ab22:	sub    BYTE PTR [ecx+0x2a],dl
  40ab25:	lods   al,BYTE PTR ds:[esi]
  40ab26:	dec    esi
  40ab27:	xchg   esi,eax
  40ab28:	xor    eax,0xf1af7c48
  40ab2d:	pop    ss
  40ab2e:	addr16 aam 0xdd
  40ab31:	ss popa 
  40ab33:	pop    ds
  40ab34:	mov    eax,0x2ce8184c
  40ab39:	adc    bh,ah
  40ab3b:	les    ecx,FWORD PTR [edx+0x31e756ec]
  40ab41:	fdivr  QWORD PTR [ebx+0x55]
  40ab44:	or     ebx,ecx
  40ab46:	or     ebp,edx
  40ab48:	inc    edi
  40ab49:	cs xchg esp,eax
  40ab4b:	retf   
  40ab4c:	mov    esp,0x685512fb
  40ab51:	fld    st(3)
  40ab53:	add    esp,DWORD PTR ds:0xc4b81f5e
  40ab59:	cmp    al,0xcd
  40ab5b:	(bad)  
  40ab5c:	stc    
  40ab5d:	and    ah,BYTE PTR [ecx-0x489b8af3]
  40ab63:	dec    esi
  40ab64:	adc    eax,0xe7aedc2c
  40ab69:	jae    0x40ab20
  40ab6b:	sahf   
  40ab6c:	inc    ecx
  40ab6d:	shr    DWORD PTR [edx+eax*4],0x80
  40ab71:	bound  ecx,QWORD PTR [ebx]
  40ab73:	dec    ebx
  40ab74:	push   esi
  40ab75:	retf   0xd18a
  40ab78:	gs test al,cl
  40ab7b:	jl     0x40ab2a
  40ab7d:	repnz dec esi
  40ab7f:	repz popf 
  40ab81:	cmp    bl,bh
  40ab83:	cmp    dh,dh
  40ab85:	leave  
  40ab86:	ins    DWORD PTR es:[edi],dx
  40ab87:	retf   0xe12d
  40ab8a:	jl     0x40ab27
  40ab8c:	mov    ch,0x16
  40ab8e:	cmc    
  40ab8f:	cs fs int 0x14
  40ab93:	inc    ebp
  40ab94:	mov    cl,0x21
  40ab96:	aas    
  40ab97:	and    BYTE PTR [ecx-0x6c],ah
  40ab9a:	ds xchg ebx,eax
  40ab9c:	inc    ebx
  40ab9d:	stc    
  40ab9e:	aad    0x14
  40aba0:	je     0x40aba2
  40aba2:	pusha  
  40aba3:	mov    edx,0xf15a01f9
  40aba8:	(bad)
  40abac:	adc    eax,0x59d8c6a3
  40abb1:	fs push ecx
  40abb3:	lock mov ebp,edi
  40abb6:	push   cs
  40abb7:	loop   0x40abec
  40abb9:	ret    0x56df
  40abbc:	imul   edi,DWORD PTR [edx-0x19],0xffffff83
  40abc0:	ja     0x40abb0
  40abc2:	rcr    BYTE PTR [edx-0x3b8b97a],cl
  40abc8:	lds    eax,FWORD PTR [ecx+0x2cacac60]
  40abce:	xchg   esi,eax
  40abcf:	pop    edx
  40abd0:	xor    edx,DWORD PTR [ebx]
  40abd2:	in     al,0xda
  40abd4:	(bad)  
  40abd5:	in     al,dx
  40abd6:	nop
  40abd7:	add    eax,0x2b74bac1
  40abdc:	sbb    eax,0xe97442b7
  40abe2:	xchg   ebx,eax
  40abe3:	ins    DWORD PTR es:[edi],dx
  40abe4:	mov    BYTE PTR [edi-0x660c8b1b],0x1
  40abeb:	xor    eax,0x5a71012a
  40abf0:	cmp    dl,bh
  40abf2:	scas   eax,DWORD PTR es:[edi]
  40abf3:	jmp    0x972:0x78bd266f
  40abfa:	jno    0x40ab8a
  40abfc:	push   ds
  40abfd:	inc    esp
  40abfe:	iret   
  40abff:	cmp    al,0x14
  40ac01:	stos   BYTE PTR es:[edi],al
  40ac02:	push   ebp
  40ac03:	nop
  40ac04:	mov    al,0x5a
  40ac06:	ja     0x40ac15
  40ac08:	cs cmp ecx,0xaad22f5f
  40ac0f:	loope  0x40ac28
  40ac11:	nop
  40ac12:	iret   
  40ac13:	mov    ds:0x85bc3738,eax
  40ac18:	add    BYTE PTR [ebp-0x3593f209],al
  40ac1e:	mov    ebx,0x1055a153
  40ac23:	jp     0x40ac9b
  40ac25:	inc    ebp
  40ac26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac27:	lahf   
  40ac28:	pop    esi
  40ac29:	ins    DWORD PTR es:[edi],dx
  40ac2a:	jge    0x40abde
  40ac2c:	es sbb al,0x18
  40ac2f:	sbb    al,0x7
  40ac31:	std    
  40ac32:	(bad)  [eax+0x6927c22c]
  40ac38:	aam    0x85
  40ac3a:	adc    BYTE PTR [ecx],cl
  40ac3c:	stc    
  40ac3d:	xchg   DWORD PTR [eax+ebx*4],ebp
  40ac40:	out    0x48,al
  40ac42:	sahf   
  40ac43:	test   eax,0x7c97b64a
  40ac48:	neg    dl
  40ac4a:	aas    
  40ac4b:	inc    ebp
  40ac4c:	add    eax,0xc4267b52
  40ac51:	(bad)  [eax-0x64a8d4f4]
  40ac57:	jbe    0x40ac4d
  40ac59:	push   edx
  40ac5a:	fisttp QWORD PTR [edx+0x6a59181d]
  40ac60:	mov    ds:0x2b17371c,al
  40ac65:	mov    ebp,0x3be47fcc
  40ac6a:	mov    edx,DWORD PTR [eax-0x54]
  40ac6d:	and    DWORD PTR [ecx+ebx*4-0x7578cad8],ebp
  40ac74:	inc    edi
  40ac75:	push   edi
  40ac76:	jge    0x40ac9a
  40ac78:	mov    ebx,esi
  40ac7a:	sbb    dh,BYTE PTR [eax-0x79462a15]
  40ac80:	mov    DWORD PTR [ecx+0x14],edi
  40ac83:	leave  
  40ac84:	xchg   edx,eax
  40ac85:	dec    ebx
  40ac86:	inc    edx
  40ac87:	out    dx,eax
  40ac88:	(bad)  
  40ac8a:	push   esp
  40ac8b:	loop   0x40ac43
  40ac8d:	mov    eax,0xeb25566b
  40ac92:	sbb    DWORD PTR [eax-0xb],eax
  40ac95:	inc    esp
  40ac96:	adc    al,0xe1
  40ac98:	push   ebx
  40ac99:	fild   QWORD PTR [ecx]
  40ac9b:	lahf   
  40ac9c:	jns    0x40acb4
  40ac9e:	dec    eax
  40ac9f:	mov    esi,0x95143fc2
  40aca4:	xchg   esi,eax
  40aca5:	fst    QWORD PTR [edx]
  40aca7:	out    0xb2,al
  40aca9:	add    dh,al
  40acab:	loop   0x40ac8f
  40acad:	out    dx,eax
  40acae:	push   0x38651b01
  40acb3:	test   al,0x94
  40acb5:	cli    
  40acb6:	daa    
  40acb7:	add    al,0x3e
  40acb9:	push   ebp
  40acba:	dec    eax
  40acbb:	dec    ecx
  40acbc:	push   esi
  40acbd:	mov    ecx,0x23482448
  40acc2:	daa    
  40acc3:	mov    DWORD PTR [ecx+0x33],0xdba602a6
  40acca:	push   esi
  40accb:	das    
  40accc:	push   esp
  40accd:	and    edi,DWORD PTR [esi]
  40accf:	push   edi
  40acd0:	(bad)
  40acd3:	and    al,BYTE PTR [eax+0x5c6a1143]
  40acd9:	das    
  40acda:	int    0xa3
  40acdc:	mov    ecx,0xd77fd19d
  40ace1:	retf   0xc1a1
  40ace4:	push   ss
  40ace5:	data16 jg 0x40ad41
  40ace8:	and    BYTE PTR [ebx],bh
  40acea:	test   al,0xd0
  40acec:	dec    edx
  40aced:	inc    ebp
  40acee:	in     eax,0x4
  40acf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf1:	stos   BYTE PTR es:[edi],al
  40acf2:	xchg   ebp,eax
  40acf3:	es cdq 
  40acf5:	enter  0x97d9,0xbc
  40acf9:	aaa    
  40acfa:	adc    al,0x6d
  40acfc:	xor    edi,ecx
  40acfe:	(bad)  
  40ad00:	xchg   ebp,eax
  40ad01:	mov    ds,ecx
  40ad03:	jmp    0x40acd6
  40ad05:	loopne 0x40aca6
  40ad07:	sub    esi,DWORD PTR [edx-0x9352680]
  40ad0d:	pop    ds
  40ad0e:	aas    
  40ad0f:	jl     0x40ad28
  40ad11:	imul   esp,DWORD PTR [edx],0xffffffe8
  40ad14:	xor    BYTE PTR [ebx+0x411ba9ca],bh
  40ad1a:	push   0xffffffd3
  40ad1c:	in     al,dx
  40ad1d:	add    BYTE PTR [ebp+0x79],0x53
  40ad21:	lods   eax,DWORD PTR ds:[esi]
  40ad22:	push   ebx
  40ad23:	xor    eax,0x76464887
  40ad28:	(bad)
  40ad2c:	sbb    edi,DWORD PTR [ebx+eiz*2]
  40ad2f:	push   esp
  40ad30:	jne    0x40ada3
  40ad32:	add    al,0xac
  40ad34:	out    dx,eax
  40ad35:	fcmovbe st,st(4)
  40ad37:	xchg   esp,eax
  40ad38:	pop    ds
  40ad39:	push   ebp
  40ad3a:	shr    BYTE PTR [ebx],0x21
  40ad3d:	and    eax,0xbfb59557
  40ad42:	cs push 0x2beb927f
  40ad48:	fadd   QWORD PTR [eax+ebp*8]
  40ad4b:	sbb    BYTE PTR [edi],cl
  40ad4d:	in     al,0x72
  40ad4f:	out    0xa5,al
  40ad51:	xor    ah,BYTE PTR [edi-0x53]
  40ad54:	add    ebp,ebx
  40ad56:	inc    ebx
  40ad57:	sub    eax,0xa97e9103
  40ad5c:	jnp    0x40ad40
  40ad5e:	ja     0x40ad8e
  40ad60:	sbb    esp,ecx
  40ad62:	scas   eax,DWORD PTR es:[edi]
  40ad63:	rep ins DWORD PTR es:[edi],dx
  40ad65:	lods   eax,DWORD PTR ds:[esi]
  40ad66:	out    dx,al
  40ad67:	or     al,0x8e
  40ad69:	sbb    esi,DWORD PTR [edx-0x35]
  40ad6c:	cli    
  40ad6d:	sbb    DWORD PTR [ebx-0x3b014dee],ebp
  40ad73:	cmp    DWORD PTR [ebx+0x678216db],edi
  40ad79:	mov    ds:0x7ba6de65,al
  40ad7e:	mul    DWORD PTR [edx-0x5c]
  40ad81:	mov    esi,0xc41c92b4
  40ad86:	push   edi
  40ad87:	sbb    ebx,esp
  40ad89:	add    eax,0xd2e454e5
  40ad8e:	and    DWORD PTR [eax+0x2fd3f817],ecx
  40ad94:	ret    
  40ad95:	jmp    0x3be17776
  40ad9a:	and    DWORD PTR [eax-0x63],edi
  40ad9d:	sub    BYTE PTR [eax-0x1b],dh
  40ada0:	in     al,dx
  40ada1:	sbb    ebp,DWORD PTR [ebx+0x78]
  40ada4:	aad    0xf4
  40ada6:	cmp    al,0xe8
  40ada8:	and    BYTE PTR [eax+0x591b5c17],bl
  40adae:	mov    ch,0x5e
  40adb0:	sbb    ecx,DWORD PTR [ecx+0x6ae64024]
  40adb6:	mov    gs,WORD PTR [edx+ebx*1+0x56]
  40adba:	sbb    bh,0xa7
  40adbd:	imul   eax,DWORD PTR [esi],0x71303a7a
  40adc3:	push   es
  40adc4:	bnd jl 0x40ad9d
  40adc7:	call   0xd3f60511
  40adcc:	xchg   ebp,eax
  40adcd:	mov    ebp,0x1ff84f97
  40add2:	xor    al,0x32
  40add4:	jb     0x40add2
  40add6:	(bad)  
  40add7:	push   ebx
  40add8:	cmc    
  40add9:	in     eax,0xc
  40addb:	xor    eax,0x1921bc45
  40ade0:	inc    edx
  40ade1:	test   al,0xde
  40ade3:	xlat   BYTE PTR ds:[ebx]
  40ade4:	(bad)  
  40ade5:	ins    BYTE PTR es:[edi],dx
  40ade6:	jno    0x40adf5
  40ade8:	push   ebx
  40ade9:	adc    eax,0x88d7040a
  40adee:	add    al,0x17
  40adf0:	lock shl BYTE PTR [ebx+0x80b479b],cl
  40adf7:	or     esp,DWORD PTR [ebp-0x19]
  40adfa:	popf   
  40adfb:	stos   DWORD PTR es:[edi],eax
  40adfc:	shr    DWORD PTR [ebp-0x21],1
  40adff:	inc    ebx
  40ae00:	stos   BYTE PTR es:[edi],al
  40ae01:	fs js  0x40ae4f
  40ae04:	pop    eax
  40ae05:	jne    0x40ae3a
  40ae07:	js     0x40ad94
  40ae09:	in     eax,0xcb
  40ae0b:	pushf  
  40ae0c:	adc    BYTE PTR [edx+esi*2+0x3ec7d730],cl
  40ae13:	out    dx,eax
  40ae14:	push   ebp
  40ae15:	mov    eax,ds:0x74cccba9
  40ae1a:	inc    eax
  40ae1b:	xchg   DWORD PTR [ecx-0x37846821],edi
  40ae21:	mov    bl,0xe9
  40ae23:	fldcw  WORD PTR [edx+0x474100af]
  40ae29:	int3   
  40ae2a:	mov    al,ds:0x7bde69e5
  40ae2f:	repnz adc al,0x7f
  40ae32:	(bad)  
  40ae33:	lods   al,BYTE PTR ds:[esi]
  40ae34:	jae    0x40aea1
  40ae36:	call   0xef4c6985
  40ae3b:	pusha  
  40ae3c:	dec    edi
  40ae3d:	or     ebx,DWORD PTR [esi+0x39]
  40ae40:	test   DWORD PTR [eax+0x5b],ecx
  40ae43:	sar    DWORD PTR [ebp-0x7a866e24],cl
  40ae49:	jl     0x40ade3
  40ae4b:	ins    DWORD PTR es:[edi],dx
  40ae4c:	jne    0x40ade2
  40ae4e:	sbb    BYTE PTR [edi+0x3385d31],dh
  40ae54:	ret    
  40ae55:	xor    DWORD PTR [eax+0x1cc49254],esp
  40ae5b:	popf   
  40ae5c:	jmp    0x40aeb9
  40ae5e:	mov    dl,0x25
  40ae60:	add    ch,bh
  40ae62:	add    dh,BYTE PTR [ebx-0x25]
  40ae65:	js     0x40aebf
  40ae67:	in     eax,0xd0
  40ae69:	cmp    al,0x2e
  40ae6b:	test   BYTE PTR ds:0x3bf43707,dh
  40ae71:	jo     0x40ae44
  40ae73:	into   
  40ae74:	fwait
  40ae75:	push   cs
  40ae76:	add    BYTE PTR [edi-0x4b],dl
  40ae79:	xor    eax,0x59996e54
  40ae7e:	jl     0x40ae55
  40ae80:	mov    esp,0x83ce0eb2
  40ae85:	cli    
  40ae86:	popf   
  40ae87:	cmp    al,BYTE PTR [esi-0x5f8fad35]
  40ae8d:	or     eax,0xfe9c817
  40ae92:	aad    0xd6
  40ae94:	int3   
  40ae95:	jae    0x40ae83
  40ae97:	jno    0x40ae6c
  40ae99:	or     cl,BYTE PTR [esi]
  40ae9b:	iret   
  40ae9c:	jne    0x40ae4f
  40ae9e:	cdq    
  40ae9f:	and    eax,0xdd5c6570
  40aea4:	mov    ecx,0xd525a4d7
  40aea9:	stos   DWORD PTR es:[edi],eax
  40aeaa:	scas   al,BYTE PTR es:[edi]
  40aeab:	adc    bl,BYTE PTR [ecx]
  40aead:	pop    ss
  40aeae:	sahf   
  40aeaf:	lock jg 0x40aea8
  40aeb2:	mov    ebx,DWORD PTR [ecx+edi*2+0x5afc7db0]
  40aeb9:	call   0xd3f4:0xfb6acebd
  40aec0:	enter  0x9784,0x74
  40aec4:	test   BYTE PTR [eax+ecx*1-0x528532ff],0xdd
  40aecc:	sbb    DWORD PTR [esi+ebx*8+0x75569125],esp
  40aed3:	inc    esp
  40aed4:	pop    ebp
  40aed5:	rcr    BYTE PTR [edx-0x6876fcdd],1
  40aedb:	pop    esp
  40aedc:	ins    DWORD PTR es:[edi],dx
  40aedd:	or     ebx,DWORD PTR [ebp+0x62fd8908]
  40aee3:	xchg   ecx,eax
  40aee4:	jae    0x40ae83
  40aee6:	mov    al,ds:0x7fcd2040
  40aeeb:	sub    esp,edx
  40aeed:	xor    al,0x26
  40aeef:	jae    0x40ae80
  40aef1:	sub    dl,cl
  40aef3:	(bad)  
  40aef4:	cmp    al,0x4e
  40aef6:	or     ax,0x5c34
  40aefa:	test   al,0x31
  40aefc:	mov    ds:0x520b1ae6,eax
  40af01:	fld    QWORD PTR [edx-0x2e]
  40af04:	pusha  
  40af05:	cmp    ebx,DWORD PTR [edi-0x42d5c545]
  40af0b:	cmp    DWORD PTR [esi],esp
  40af0d:	add    al,0xcd
  40af0f:	das    
  40af10:	sub    eax,0x185e37a4
  40af15:	push   es
  40af16:	jae    0x40aee9
  40af18:	jns    0x40aeac
  40af1a:	ret    
  40af1b:	or     eax,0xfe76c152
  40af20:	gs jp  0x40af97
  40af23:	cmp    BYTE PTR [esi+esi*2-0x77],ch
  40af27:	pop    eax
  40af28:	mov    DWORD PTR [ebx+0x3c],eax
  40af2b:	test   BYTE PTR [ebp-0x1f],ah
  40af2e:	xor    BYTE PTR [ebp+esi*2-0x79],bh
  40af32:	push   edx
  40af33:	jl     0x40af10
  40af35:	jns    0x40af73
  40af37:	dec    edx
  40af38:	pop    esi
  40af39:	pusha  
  40af3a:	fild   QWORD PTR [esi]
  40af3c:	and    BYTE PTR [ebp+0x6e],0x77
  40af40:	bound  ebp,QWORD PTR [ecx+0x7dc0e634]
  40af46:	mov    eax,0x868b773
  40af4b:	lods   al,BYTE PTR ds:[esi]
  40af4c:	stc    
  40af4d:	ds jb  0x40af94
  40af50:	push   edi
  40af51:	ss aas 
  40af53:	mov    edx,0xa4d1b50c
  40af58:	or     eax,0xfd2978a1
  40af5d:	sub    al,0xcb
  40af5f:	push   es
  40af60:	in     eax,0x5f
  40af62:	leave  
  40af63:	xor    eax,0xcd251122
  40af68:	nop
  40af69:	xor    BYTE PTR [eax+0x54585f69],bh
  40af6f:	xchg   esp,eax
  40af70:	push   es
  40af71:	inc    ebp
  40af72:	scas   al,BYTE PTR es:[edi]
  40af73:	dec    edi
  40af74:	dec    edx
  40af75:	mov    ecx,0xeb8ae54c
  40af7a:	push   0x3e
  40af7c:	ret    0x79e9
  40af7f:	xchg   BYTE PTR ds:0xf1451357,bl
  40af85:	and    edi,DWORD PTR [ebp+0x5145a89c]
  40af8b:	je     0x40af37
  40af8d:	into   
  40af8e:	xchg   edx,eax
  40af8f:	and    edx,ebp
  40af91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af92:	in     al,0x2e
  40af94:	out    dx,al
  40af95:	sbb    edx,DWORD PTR [ebx]
  40af97:	fucomp st(1)
  40af99:	stc    
  40af9a:	sub    al,0x4b
  40af9c:	stc    
  40af9d:	mov    ebx,0xb4ca2e19
  40afa2:	loop   0x40b015
  40afa4:	aad    0xf3
  40afa6:	inc    ecx
  40afa7:	in     al,0x4b
  40afa9:	pop    edx
  40afaa:	retf   
  40afab:	jp     0x40afde
  40afad:	xor    esp,DWORD PTR ds:0x405ee578
  40afb3:	ficomp WORD PTR [ebx-0x809d3d2]
  40afb9:	xchg   esp,eax
  40afba:	ss jge 0x40afbf
  40afbd:	or     ch,BYTE PTR [eax+0x13bc3727]
  40afc3:	fcmovne st,st(0)
  40afc5:	or     bl,BYTE PTR ds:0x1cddab1f
  40afcb:	cmc    
  40afcc:	repnz cmp esp,ebp
  40afcf:	mov    BYTE PTR [edi],ch
  40afd1:	adc    ch,0x3c
  40afd4:	into   
  40afd5:	and    eax,0x28cc955c
  40afda:	sbb    al,0x3f
  40afdc:	jle    0x40af9d
  40afde:	mov    eax,0x423eb1b2
  40afe3:	mov    ds:0xa99f4b4a,al
  40afe8:	mov    BYTE PTR [ebx+eax*1-0x12b36fe2],ch
  40afef:	jbe    0x40b05c
  40aff1:	lods   eax,DWORD PTR ds:[esi]
  40aff2:	pusha  
  40aff3:	cwde   
  40aff4:	ds jno 0x40b061
  40aff7:	and    ebp,DWORD PTR ds:0x3e402874
  40affd:	jmp    0xecb2:0x13d0eb1e
  40b004:	or     esi,DWORD PTR [esi-0x18293646]
  40b00a:	leave  
  40b00b:	dec    ebp
  40b00c:	xor    ebp,esi
  40b00e:	mov    bh,0xda
  40b010:	sub    BYTE PTR [ebp-0x7],bh
  40b013:	fisttp DWORD PTR ds:0x42ff74ed
  40b019:	addr16 out 0xa8,al
  40b01c:	xor    dh,ch
  40b01e:	lock outs dx,DWORD PTR ds:[esi]
  40b020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b022:	nop
  40b023:	fisubr WORD PTR ds:0x54e7ff25
  40b029:	jno    0x40afde
  40b02b:	sub    DWORD PTR [esi+0x60],esi
  40b02e:	inc    DWORD PTR [edi+eax*8]
  40b031:	or     cl,BYTE PTR [esp+ebx*2]
  40b034:	pop    es
  40b035:	retf   0xa23e
  40b038:	xchg   edx,eax
  40b039:	and    BYTE PTR [ebp+0x1b],ch
  40b03c:	data16 sub al,0x68
  40b03f:	repnz inc ebp
  40b041:	dec    esi
  40b042:	inc    ebp
  40b043:	jae    0x40b02e
  40b045:	jmp    0x40b014
  40b047:	push   edi
  40b048:	in     al,dx
  40b049:	or     edi,ebp
  40b04b:	and    al,0xd2
  40b04d:	icebp  
  40b04e:	popa   
  40b04f:	pavgw  mm3,QWORD PTR [eax+0x55c8e49e]
  40b056:	mov    eax,ds:0xaa1ab60e
  40b05b:	pop    es
  40b05c:	push   esi
  40b05d:	mov    WORD PTR [eax+0x581ff0c5],gs
  40b063:	mov    esp,0xc9f00e2a
  40b068:	mov    BYTE PTR [eax+0xb1e5f62],bh
  40b06e:	in     eax,0xd5
  40b070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b071:	jg     0x40b0e1
  40b073:	test   BYTE PTR [ebx-0x38912b11],0x23
  40b07a:	jns    0x40b00b
  40b07c:	sti    
  40b07d:	int    0x8f
  40b07f:	xchg   esp,eax
  40b080:	inc    ebp
  40b081:	ret    0x88fa
  40b084:	or     cl,bh
  40b086:	xchg   ch,al
  40b088:	inc    esi
  40b089:	daa    
  40b08a:	loope  0x40b0aa
  40b08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08d:	mov    al,0xa7
  40b08f:	pop    es
  40b090:	je     0x40b065
  40b092:	pushf  
  40b093:	jbe    0x40b0d0
  40b095:	xchg   ebx,eax
  40b096:	(bad)  
  40b097:	fmulp  st(7),st
  40b099:	fnstenv [ebp-0x35]
  40b09c:	daa    
  40b09d:	imul   esp,DWORD PTR [ebp+0x3a],0x53
  40b0a1:	idiv   DWORD PTR [edx-0x3e]
  40b0a4:	mov    bl,ch
  40b0a6:	push   ds
  40b0a7:	cli    
  40b0a8:	(bad)  
  40b0a9:	pop    edx
  40b0aa:	adc    bl,BYTE PTR [ebx+0x32]
  40b0ad:	xlat   BYTE PTR ds:[ebx]
  40b0ae:	in     al,0xc1
  40b0b0:	dec    eax
  40b0b1:	xor    BYTE PTR [edi+0x4c68421d],dl
  40b0b7:	rcr    DWORD PTR [esi-0x4c16a38d],0x71
  40b0be:	xchg   edi,eax
  40b0bf:	sbb    BYTE PTR [edx+0x4272674d],cl
  40b0c5:	pop    edi
  40b0c6:	and    esi,DWORD PTR [edx-0x5f069ca]
  40b0cc:	lds    esi,FWORD PTR [edi+esi*8+0x19]
  40b0d0:	(bad)  
  40b0d2:	fidiv  WORD PTR [esi+0x33e479d7]
  40b0d8:	aad    0xa8
  40b0da:	and    eax,0xa8acb1ed
  40b0df:	push   ebx
  40b0e0:	int3   
  40b0e1:	sub    BYTE PTR [edx-0x33a28cb9],0xe9
  40b0e8:	js     0x40b06d
  40b0ea:	scas   al,BYTE PTR es:[edi]
  40b0eb:	(bad)  
  40b0ed:	sub    DWORD PTR [edi],esi
  40b0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f0:	push   0xfffffffd
  40b0f2:	lahf   
  40b0f3:	fisubr DWORD PTR [esi]
  40b0f6:	mov    esi,0xc2cec4c0
  40b0fb:	mov    ecx,0x41109d70
  40b100:	cmp    ebx,esp
  40b102:	xor    dl,BYTE PTR [edi+0x44]
  40b105:	int3   
  40b106:	inc    esi
  40b107:	jb     0x40b104
  40b109:	jne    0x40b0e5
  40b10b:	jp     0x40b08f
  40b10d:	or     al,0xbc
  40b10f:	sub    esp,DWORD PTR [edx-0x18]
  40b112:	scas   al,BYTE PTR es:[edi]
  40b113:	les    ecx,FWORD PTR [ebx+0x45]
  40b116:	mov    bh,BYTE PTR [esi+0x73]
  40b119:	call   0xa4586394
  40b11e:	les    ebp,FWORD PTR [edx+0x34ac4e7c]
  40b124:	mov    eax,0x3ce0bde9
  40b129:	jle    0x40b182
  40b12b:	div    BYTE PTR [ecx+edx*2+0x38]
  40b12f:	add    BYTE PTR [edi],cl
  40b131:	mov    eax,ds:0xa5a028c6
  40b136:	retf   0x1a59
  40b139:	rcr    DWORD PTR [edx],1
  40b13b:	jb     0x40b0ef
  40b13d:	scas   al,BYTE PTR es:[edi]
  40b13e:	out    0xe2,eax
  40b140:	ins    BYTE PTR es:[edi],dx
  40b141:	pop    ebp
  40b142:	and    DWORD PTR [eax+edi*2+0x2c433ff7],ecx
  40b149:	js     0x40b142
  40b14b:	jnp    0x40b119
  40b14d:	mov    ebx,0xc594d17b
  40b152:	bound  ebx,QWORD PTR [ebx-0x5c]
  40b155:	lods   eax,DWORD PTR ds:[esi]
  40b156:	or     eax,0x68c4c56c
  40b15b:	add    dl,BYTE PTR [ebp-0xf72285e]
  40b161:	sbb    al,BYTE PTR [ebx]
  40b163:	sbb    eax,0xfb022886
  40b168:	cdq    
  40b169:	lock or ah,BYTE PTR [edi]
  40b16c:	xchg   esp,eax
  40b16d:	adc    eax,0xa7704db
  40b172:	mov    dh,0xb8
  40b174:	sar    DWORD PTR [edx-0x4b],1
  40b177:	cmp    BYTE PTR [edi-0x49b1e857],dh
  40b17d:	scas   eax,DWORD PTR es:[edi]
  40b17e:	push   ecx
  40b17f:	push   edi
  40b180:	adc    ah,ah
  40b182:	out    dx,al
  40b183:	mov    cl,0xc9
  40b185:	inc    eax
  40b186:	test   ah,ch
  40b188:	sar    BYTE PTR [edx+0x3efd0238],cl
  40b18e:	scas   al,BYTE PTR es:[edi]
  40b18f:	dec    edi
  40b190:	pop    esi
  40b191:	loop   0x40b1c6
  40b193:	jp     0x40b19f
  40b195:	inc    eax
  40b196:	cwde   
  40b197:	sbb    esp,esp
  40b199:	add    BYTE PTR [edi-0x2],0x22
  40b19d:	pushf  
  40b19e:	add    eax,0xab540c17
  40b1a3:	daa    
  40b1a4:	sbb    eax,DWORD PTR [esi+0x72e68ead]
  40b1aa:	js     0x40b1cd
  40b1ac:	out    0xe1,eax
  40b1ae:	cli    
  40b1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b0:	mov    edi,eax
  40b1b2:	cmp    DWORD PTR [edi+0x630b9a35],ebp
  40b1b8:	imul   ecx,DWORD PTR [ebp+0x13],0x1c
  40b1bc:	(bad)  
  40b1bd:	mov    edi,0xeeb2bb43
  40b1c2:	mov    esp,0xdf12c89a
  40b1c7:	sbb    DWORD PTR [edx+0x1f836ab1],edi
  40b1cd:	sub    eax,0xc14f6fd2
  40b1d2:	cmp    dh,BYTE PTR [edi+eax*2]
  40b1d5:	dec    eax
  40b1d6:	cdq    
  40b1d7:	mov    bl,0x16
  40b1d9:	mov    WORD PTR [esp+esi*2],gs
  40b1dc:	fdiv   QWORD PTR [edi-0x5006d256]
  40b1e2:	lods   al,BYTE PTR ds:[esi]
  40b1e3:	sbb    al,0xb4
  40b1e5:	in     eax,dx
  40b1e6:	jnp    0x40b1be
  40b1e8:	inc    ecx
  40b1e9:	or     ah,cl
  40b1eb:	mov    DWORD PTR [edi+0xb],esi
  40b1ee:	push   es
  40b1ef:	rdpmc  
  40b1f1:	add    esi,esi
  40b1f3:	outs   dx,DWORD PTR ds:[esi]
  40b1f4:	into   
  40b1f5:	xchg   ebx,eax
  40b1f6:	ret    0x6ae8
  40b1f9:	mov    ch,0x1f
  40b1fb:	sub    BYTE PTR [ebx+0x7],al
  40b1fe:	clc    
  40b1ff:	leave  
  40b200:	test   eax,0x46547aaa
  40b205:	jmp    0x639b9166
  40b20a:	call   0x1e12:0x5f345c7f
  40b211:	(bad)  
  40b212:	sbb    ah,BYTE PTR [esi+eiz*1-0x222f1b4f]
  40b219:	ins    BYTE PTR es:[edi],dx
  40b21a:	sub    eax,0xf2faa2c0
  40b21f:	lds    ebp,FWORD PTR ds:[ebp+0x50]
  40b223:	dec    ecx
  40b224:	loopne 0x40b27c
  40b226:	xchg   ecx,eax
  40b227:	std    
  40b228:	push   eax
  40b229:	hlt    
  40b22a:	mov    ebp,0x41441281
  40b22f:	or     DWORD PTR [esi],ebp
  40b231:	test   eax,0x659eecab
  40b236:	inc    esi
  40b237:	mov    al,ds:0x258ed171
  40b23c:	xchg   edi,eax
  40b23d:	in     eax,dx
  40b23e:	pusha  
  40b23f:	popf   
  40b240:	push   esp
  40b241:	push   es
  40b242:	popa   
  40b243:	xor    bh,dl
  40b245:	xchg   esi,eax
  40b246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b247:	cli    
  40b248:	mov    dl,0x89
  40b24a:	aas    
  40b24b:	sub    ah,BYTE PTR [ecx-0x5a]
  40b24e:	lods   al,BYTE PTR ds:[esi]
  40b24f:	xlat   BYTE PTR ds:[ebx]
  40b250:	push   ss
  40b251:	popa   
  40b252:	mov    BYTE PTR [edi-0x44d14c94],cl
  40b258:	dec    edx
  40b259:	iret   
  40b25a:	lods   eax,DWORD PTR ds:[esi]
  40b25b:	in     al,0xf5
  40b25d:	sbb    DWORD PTR [eax+0x20],esp
  40b260:	dec    DWORD PTR [ecx+edi*8]
  40b263:	addr16 call 0x189853e5
  40b269:	mov    ah,0x69
  40b26b:	mov    ds:0xf57f5b35,al
  40b270:	(bad)  
  40b271:	push   ebp
  40b272:	lock jecxz 0x40b22f
  40b275:	popf   
  40b276:	daa    
  40b277:	adc    dh,BYTE PTR [ebx]
  40b279:	pop    ecx
  40b27a:	mov    dl,0x54
  40b27c:	push   esi
  40b27d:	enter  0xe56b,0xf
  40b281:	adc    DWORD PTR [ebp+0x27b53774],eax
  40b287:	rcl    esp,1
  40b289:	popa   
  40b28a:	sbb    eax,0xc215660f
  40b28f:	inc    esi
  40b290:	inc    edx
  40b291:	jmp    0xb3a8bc06
  40b296:	adc    bl,BYTE PTR [eax+esi*1+0x6b]
  40b29a:	fmulp  st(6),st
  40b29c:	sbb    eax,0xef52f26f
  40b2a1:	imul   BYTE PTR [esi+0x14]
  40b2a4:	fmul   DWORD PTR [edx+0x66480318]
  40b2aa:	imul   esp,ebx,0xdc11dfa1
  40b2b0:	push   0x14
  40b2b2:	fmul   QWORD PTR [esi]
  40b2b4:	fwait
  40b2b5:	lods   al,BYTE PTR ds:[esi]
  40b2b6:	imul   ecx,esp,0xd1f9197d
  40b2bc:	inc    edi
  40b2bd:	hlt    
  40b2be:	test   eax,0xae204eab
  40b2c3:	push   edx
  40b2c4:	xor    DWORD PTR ds:0x2bd95a8f,edx
  40b2ca:	call   0xcfd9:0x7e523232
  40b2d1:	sbb    ebp,DWORD PTR [edi-0x56]
  40b2d4:	cmp    esp,DWORD PTR ds:[ebx+0x5f]
  40b2d8:	push   edi
  40b2d9:	les    edx,FWORD PTR [edx-0x46]
  40b2dc:	das    
  40b2dd:	test   al,0xfa
  40b2df:	sub    eax,0x9f7ac5ee
  40b2e4:	sub    al,0xb1
  40b2e6:	out    dx,eax
  40b2e7:	mov    cl,0x40
  40b2e9:	into   
  40b2ea:	ds xchg edx,eax
  40b2ec:	mov    dh,0x20
  40b2ee:	pop    ebp
  40b2ef:	out    dx,al
  40b2f0:	add    BYTE PTR [ebx-0x3c],dl
  40b2f3:	sub    eax,0xb9c25a91
  40b2f8:	and    esi,DWORD PTR [esp+ebp*2-0x5e]
  40b2fc:	cmp    al,BYTE PTR [esi]
  40b2fe:	out    0xad,al
  40b300:	add    BYTE PTR [edi-0x2ce5b179],ch
  40b306:	cmp    al,0x5d
  40b308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b309:	and    BYTE PTR [edi-0x3543eea3],bl
  40b30f:	hlt    
  40b310:	in     al,0x7c
  40b312:	xor    al,0xeb
  40b314:	mov    ch,0x70
  40b316:	jmp    0xedb9c795
  40b31b:	and    DWORD PTR [eax+0x6d],ecx
  40b31e:	into   
  40b31f:	pusha  
  40b320:	repz jne 0x40b318
  40b323:	scas   eax,DWORD PTR es:[edi]
  40b324:	xlat   BYTE PTR ds:[ebx]
  40b325:	repnz call 0xd020:0x13f4d83e
  40b32d:	ficom  WORD PTR [edx+0x6075925b]
  40b333:	dec    eax
  40b334:	jl     0x40b383
  40b336:	or     BYTE PTR [ebx+0x63],ah
  40b339:	mov    ecx,0xdb8f4178
  40b33e:	fdivp  st(3),st
  40b340:	push   ss
  40b341:	aam    0x48
  40b343:	sbb    BYTE PTR [edx],al
  40b345:	jae    0x40b2c8
  40b347:	fwait
  40b348:	mov    ch,0xb4
  40b34a:	pop    es
  40b34b:	push   edx
  40b34c:	test   eax,0x50a09b
  40b351:	or     BYTE PTR [eax-0x32736eb5],cl
  40b357:	mov    ah,0xb2
  40b359:	xchg   edi,eax
  40b35a:	push   ebx
  40b35b:	mov    fs:0xa1cf58c4,eax
  40b361:	pop    eax
  40b362:	pop    es
  40b363:	jnp    0x40b330
  40b365:	mov    ecx,0xb9486b50
  40b36a:	test   DWORD PTR [ecx],ecx
  40b36c:	or     al,al
  40b36e:	and    bh,BYTE PTR [esi]
  40b370:	in     eax,dx
  40b371:	cmp    bl,BYTE PTR [ecx]
  40b373:	dec    BYTE PTR [esi+0x36]
  40b376:	mov    bl,bl
  40b378:	lock cld 
  40b37a:	sbb    al,dh
  40b37c:	xchg   esp,eax
  40b37d:	das    
  40b37e:	xchg   edx,eax
  40b37f:	sbb    edi,DWORD PTR [eax]
  40b381:	ss xchg esi,eax
  40b383:	push   es
  40b384:	add    eax,0x114980e8
  40b389:	mov    cl,0xb4
  40b38b:	xor    ebp,ebx
  40b38d:	push   0xb2eea4f3
  40b392:	leave  
  40b393:	mov    eax,DWORD PTR [eax+0x78]
  40b396:	rcl    DWORD PTR [eax-0x4750a319],1
  40b39c:	xchg   esi,eax
  40b39d:	or     ebx,ebx
  40b39f:	addr16 lock mov ebx,0xc6a7fd02
  40b3a6:	or     dh,BYTE PTR [esi+esi*2-0x59]
  40b3aa:	mov    ah,0x7f
  40b3ac:	imul   ebp,edi,0x511878aa
  40b3b2:	sbb    bl,cl
  40b3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b5:	test   BYTE PTR [eax],0x41
  40b3b8:	inc    edi
  40b3b9:	in     al,0xae
  40b3bb:	pop    esp
  40b3bc:	repnz dec ebx
  40b3be:	loopne 0x40b41a
  40b3c0:	mov    ds:0xeeda1435,al
  40b3c5:	jmp    0x40b388
  40b3c7:	xor    esp,DWORD PTR [edx-0x2062a2a5]
  40b3cd:	sub    al,0xb8
  40b3cf:	xchg   esi,eax
  40b3d0:	inc    edx
  40b3d1:	cmp    DWORD PTR [eax],edi
  40b3d3:	sbb    esi,DWORD PTR [esi+0xc]
  40b3d6:	hlt    
  40b3d7:	and    eax,0x9ec8a742
  40b3dc:	cmp    ah,al
  40b3de:	dec    ebp
  40b3df:	push   esp
  40b3e0:	in     eax,0x79
  40b3e2:	add    eax,0x26d5f4b
  40b3e7:	jnp    0x40b3c6
  40b3e9:	push   ss
  40b3ea:	push   0xffffffa5
  40b3ec:	les    ebp,FWORD PTR [ebx]
  40b3ee:	or     edx,ebp
  40b3f0:	pop    esp
  40b3f1:	jg     0x40b3fc
  40b3f3:	or     ecx,DWORD PTR [edx+0x4f]
  40b3f6:	int3   
  40b3f7:	sbb    eax,0xcb370e1
  40b3fc:	hlt    
  40b3fd:	imul   edx,DWORD PTR [esi+eiz*2+0x1d],0xdfa2eb54
  40b405:	loop   0x40b421
  40b407:	xchg   edx,eax
  40b408:	lds    edi,FWORD PTR [esi-0x344e5cb3]
  40b40e:	mov    bl,0x9c
  40b410:	adc    DWORD PTR [eax+0x608278e4],0x66
  40b417:	jns    0x40b3e8
  40b419:	ins    BYTE PTR es:[edi],dx
  40b41a:	fsub   st(2),st
  40b41c:	sbb    esp,eax
  40b41e:	jp     0x40b3c8
  40b420:	mov    ebp,0xe249f047
  40b425:	cmp    DWORD PTR [eax],edi
  40b427:	(bad)  
  40b428:	mov    esp,0x2a9434aa
  40b42d:	cmp    BYTE PTR [esi-0x57],0x41
  40b431:	push   cs
  40b432:	dec    edx
  40b433:	pop    ss
  40b434:	push   ebp
  40b435:	enter  0xc465,0x15
  40b439:	data16 jbe 0x40b3f7
  40b43c:	jae    0x40b3f5
  40b43e:	ds dec edi
  40b440:	dec    ebp
  40b441:	push   eax
  40b442:	int3   
  40b443:	mov    cl,0xa9
  40b445:	js     0x40b3f9
  40b447:	add    eax,0x43b15e61
  40b44c:	mov    WORD PTR [edx-0x1a],?
  40b44f:	ret    0xddb3
  40b452:	cmp    DWORD PTR [edx],edi
  40b454:	cs pop ebx
  40b456:	repz or BYTE PTR [ebx],dl
  40b459:	loopne 0x40b4d2
  40b45b:	push   ss
  40b45c:	enter  0x34e7,0x64
  40b460:	adc    BYTE PTR [ebx+0x62],al
  40b463:	stos   BYTE PTR es:[edi],al
  40b464:	je     0x40b497
  40b466:	mov    eax,ds:0x96f1c491
  40b46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46c:	jecxz  0x40b439
  40b46e:	jno    0x40b416
  40b470:	mov    esi,0x840b7c22
  40b475:	mov    dh,0x2
  40b477:	retf   
  40b478:	lods   eax,DWORD PTR ds:[esi]
  40b479:	cld    
  40b47a:	repz inc eax
  40b47c:	adc    edi,DWORD PTR [ecx-0x1e850403]
  40b482:	xchg   esp,eax
  40b483:	mov    eax,0x6ea45cd2
  40b488:	cmp    al,0x74
  40b48a:	mov    ah,0x9a
  40b48c:	cwde   
  40b48d:	shl    BYTE PTR [esp+ebx*2],cl
  40b490:	ror    DWORD PTR [esi],0x2b
  40b493:	stos   DWORD PTR es:[edi],eax
  40b494:	xor    dh,BYTE PTR [ebp+0x6c]
  40b497:	popf   
  40b498:	adc    bl,bh
  40b49a:	pop    ecx
  40b49b:	int    0x19
  40b49d:	xchg   BYTE PTR [ebx+esi*8+0x38bfbfcf],bl
  40b4a4:	data16 fcom QWORD PTR [eax+0x1a]
  40b4a8:	ds pop esi
  40b4aa:	jne    0x40b4cc
  40b4ac:	lods   eax,DWORD PTR ds:[si]
  40b4ae:	rol    BYTE PTR [eax+0x680117e6],cl
  40b4b4:	fstp   DWORD PTR [esi-0x59]
  40b4b7:	jg     0x40b498
  40b4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ba:	popa   
  40b4bb:	ret    0x686f
  40b4be:	jle    0x40b509
  40b4c0:	test   BYTE PTR [edx+0x6a4f651e],bh
  40b4c6:	mov    esp,0x880dd830
  40b4cb:	mov    al,ds:0x699392eb
  40b4d0:	pusha  
  40b4d1:	jle    0x40b53b
  40b4d3:	mov    DWORD PTR [esi],ecx
  40b4d5:	fiadd  WORD PTR [edx+0x57b3edca]
  40b4db:	(bad)  
  40b4dc:	fmul   st(6),st
  40b4de:	or     al,0x45
  40b4e0:	inc    esp
  40b4e1:	jl     0x40b4f5
  40b4e3:	sbb    eax,eax
  40b4e5:	jo     0x40b484
  40b4e7:	(bad)  
  40b4e8:	pusha  
  40b4e9:	retf   0xc980
  40b4ec:	xchg   ebx,eax
  40b4ed:	xchg   esp,eax
  40b4ee:	xchg   edi,eax
  40b4ef:	jne    0x40b511
  40b4f1:	loop   0x40b47e
  40b4f3:	mov    BYTE PTR [edx+0x57],ah
  40b4f6:	imul   ebp,DWORD PTR [edx+0x33],0x640bc4
  40b4fd:	sub    eax,0x24502785
  40b502:	dec    ecx
  40b503:	sbb    dh,BYTE PTR [ebx]
  40b505:	les    eax,FWORD PTR [esi+0x2380bc94]
  40b50b:	dec    ebp
  40b50c:	cmovno eax,DWORD PTR [ecx+0x7e]
  40b510:	fwait
  40b511:	pop    es
  40b512:	push   esp
  40b513:	bound  esi,QWORD PTR [ebx-0x26]
  40b516:	xor    edx,esp
  40b518:	fidivr DWORD PTR [edx]
  40b51a:	xchg   esi,eax
  40b51b:	retf   
  40b51c:	or     ah,BYTE PTR [eax]
  40b51e:	push   ds
  40b51f:	push   esp
  40b520:	pop    ss
  40b521:	inc    edx
  40b522:	jp     0x40b57f
  40b524:	inc    cx
  40b526:	les    ebx,FWORD PTR [edx+0x33c30ee2]
  40b52c:	in     eax,0xe4
  40b52e:	bound  esi,QWORD PTR [edx+0x36add3b3]
  40b534:	pop    ebp
  40b535:	dec    ecx
  40b536:	dec    ch
  40b538:	and    BYTE PTR [edx],dl
  40b53a:	add    bl,BYTE PTR [ebx-0x77d96531]
  40b540:	xor    ecx,DWORD PTR [ecx]
  40b542:	push   cs
  40b543:	mov    dl,0x79
  40b545:	mov    dl,0x94
  40b547:	dec    ebp
  40b548:	mov    cl,0xa7
  40b54a:	and    eax,0x31b739f6
  40b54f:	pop    edi
  40b550:	xchg   esi,eax
  40b551:	inc    esp
  40b552:	push   esi
  40b553:	jl     0x40b5b4
  40b555:	cld    
  40b556:	push   cs
  40b557:	push   0x60
  40b559:	imul   ebp,DWORD PTR [ebx*8+0x6253ced9],0xfc828bc7
  40b564:	xchg   ebx,eax
  40b565:	lods   al,BYTE PTR ds:[esi]
  40b566:	bound  ecx,QWORD PTR [eax+eiz*1-0x25]
  40b56a:	movd   mm0,esp
  40b56d:	out    dx,al
  40b56e:	fs jmp 0x12ba:0x921e4c15
  40b576:	ds mov cl,0x5
  40b579:	repnz adc BYTE PTR [edx],cl
  40b57c:	sub    DWORD PTR [ebx+0x10],ebp
  40b57f:	mov    al,ds:0x225f9b90
  40b584:	add    esp,DWORD PTR [edi-0x52e45487]
  40b58a:	into   
  40b58b:	in     eax,0x6b
  40b58d:	(bad)  
  40b58e:	xchg   ebp,eax
  40b58f:	jae    0x40b560
  40b591:	lods   eax,DWORD PTR ds:[esi]
  40b592:	inc    eax
  40b593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b594:	mov    cl,0x5c
  40b596:	push   0x46
  40b598:	sbb    eax,0x6a7c3bea
  40b59d:	or     al,0x65
  40b59f:	push   edi
  40b5a0:	aad    0x12
  40b5a2:	mov    esp,0xff78d91
  40b5a7:	xlat   BYTE PTR ds:[ebx]
  40b5a8:	outs   dx,BYTE PTR ds:[esi]
  40b5a9:	je     0x40b55b
  40b5ab:	ja     0x40b5a4
  40b5ad:	aam    0x40
  40b5af:	dec    esi
  40b5b0:	adc    al,0x6e
  40b5b2:	inc    esp
  40b5b3:	adc    BYTE PTR [esp+ecx*4],ch
  40b5b6:	push   0x6b
  40b5b8:	aam    0x86
  40b5ba:	sbb    edx,DWORD PTR [ebx-0x24]
  40b5bd:	int3   
  40b5be:	xor    BYTE PTR [ecx],dh
  40b5c0:	ror    DWORD PTR [ebx],0x24
  40b5c3:	pop    ebx
  40b5c4:	dec    esi
  40b5c5:	xchg   edi,eax
  40b5c6:	dec    ebp
  40b5c7:	lea    ebx,[edi]
  40b5c9:	popa   
  40b5ca:	sub    DWORD PTR [ecx],edi
  40b5cc:	push   eax
  40b5cd:	arpl   WORD PTR [edi+0xc],dx
  40b5d0:	sbb    eax,0x72635995
  40b5d5:	xor    eax,0x27697d8b
  40b5da:	(bad)  
  40b5db:	pusha  
  40b5dc:	or     dh,cl
  40b5de:	cmc    
  40b5df:	lds    edx,FWORD PTR [edi+0xe]
  40b5e2:	aaa    
  40b5e3:	out    0x7b,eax
  40b5e5:	out    dx,eax
  40b5e6:	(bad)  
  40b5e8:	push   esi
  40b5e9:	mov    esi,0x3c93d8d9
  40b5ee:	mov    ah,0xb6
  40b5f0:	mov    bl,0xde
  40b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f3:	mov    ecx,0xbfedde37
  40b5f8:	out    0xf5,al
  40b5fa:	adc    ah,al
  40b5fc:	aam    0xb3
  40b5fe:	imul   esp,ebp,0x34
  40b601:	xchg   ebx,esi
  40b603:	rcr    ah,0x56
  40b606:	mov    DWORD PTR [esi+0x5d635527],ebp
  40b60c:	add    edi,DWORD PTR [ebp-0x1a0dc118]
  40b612:	cli    
  40b613:	mov    BYTE PTR [edi+0x45],cl
  40b616:	lea    ebp,[esi-0x9fdb62f]
  40b61c:	stos   BYTE PTR es:[edi],al
  40b61d:	fs loopne 0x40b688
  40b620:	mov    ?,WORD PTR gs:[edi-0x2e]
  40b624:	js     0x40b60c
  40b626:	mov    ebx,ecx
  40b628:	mov    ah,0x18
  40b62a:	xlat   BYTE PTR ds:[ebx]
  40b62b:	je     0x40b65b
  40b62d:	sub    al,0x5b
  40b62f:	add    esp,DWORD PTR [eax]
  40b631:	dec    esp
  40b632:	dec    esi
  40b633:	cwde   
  40b634:	mov    edx,0x8ed797fa
  40b639:	mov    edi,0xe3db4621
  40b63e:	call   FWORD PTR [ebx]
  40b640:	xchg   esp,eax
  40b641:	das    
  40b642:	int    0x44
  40b644:	pop    es
  40b645:	in     eax,dx
  40b646:	mov    edi,0xc188a4fb
  40b64b:	shr    DWORD PTR [ebx],cl
  40b64d:	push   ss
  40b64e:	dec    eax
  40b64f:	xchg   esp,eax
  40b650:	fwait
  40b651:	jnp    0x40b6ac
  40b653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b654:	call   0xe318555e
  40b659:	dec    esi
  40b65a:	xor    al,0xae
  40b65c:	je     0x40b648
  40b65e:	sub    dh,BYTE PTR [ebx]
  40b660:	pop    ecx
  40b661:	cld    
  40b662:	pop    ebx
  40b663:	repz into 
  40b665:	adc    ebp,DWORD PTR [ebx+0x3a]
  40b668:	test   ebp,ebp
  40b66a:	ins    DWORD PTR es:[edi],dx
  40b66b:	push   esp
  40b66c:	add    BYTE PTR [eax-0x5a],cl
  40b66f:	call   FWORD PTR [edi]
  40b671:	mov    dh,0x7a
  40b673:	jp     0x40b6d0
  40b675:	aam    0x10
  40b677:	mov    esp,edi
  40b679:	inc    eax
  40b67a:	clc    
  40b67b:	test   DWORD PTR [edi+eiz*8+0x28],0xab89b518
  40b683:	push   ss
  40b684:	aaa    
  40b685:	enter  0xf423,0x92
  40b689:	dec    edx
  40b68a:	int3   
  40b68b:	cdq    
  40b68c:	mov    es,WORD PTR [edx+0x9]
  40b68f:	push   esi
  40b690:	lods   eax,DWORD PTR ss:[esi]
  40b692:	jg     0x40b649
  40b694:	ja     0x40b6d5
  40b696:	pop    edx
  40b697:	xchg   esi,eax
  40b698:	dec    eax
  40b699:	adc    al,0x90
  40b69b:	cmp    ah,dl
  40b69d:	stos   BYTE PTR es:[edi],al
  40b69e:	iret   
  40b69f:	sbb    DWORD PTR [edx],0x6234b1c6
  40b6a5:	push   ebp
  40b6a6:	inc    edx
  40b6a7:	fwait
  40b6a8:	sti    
  40b6a9:	mov    ch,0x7c
  40b6ab:	cs xchg esi,eax
  40b6ad:	dec    ecx
  40b6ae:	jecxz  0x40b6e7
  40b6b0:	js     0x40b65c
  40b6b2:	aad    0x70
  40b6b4:	ja     0x40b67f
  40b6b6:	push   ecx
  40b6b7:	push   cs
  40b6b8:	xor    ebp,ebx
  40b6ba:	push   ss
  40b6bb:	stos   DWORD PTR es:[edi],eax
  40b6bc:	ret    
  40b6bd:	cmp    eax,0x957b8499
  40b6c2:	and    cl,dl
  40b6c4:	sub    ah,al
  40b6c6:	mov    ebx,0xb34035e1
  40b6cb:	mov    al,BYTE PTR [ecx+0x103dc6c]
  40b6d1:	pusha  
  40b6d2:	jmp    0x40b684
  40b6d4:	mov    ecx,0xf26bd279
  40b6d9:	xchg   ebp,eax
  40b6da:	lea    esi,[esi+eiz*2+0x3792e77c]
  40b6e1:	and    ch,BYTE PTR [ecx-0x1fa826fe]
  40b6e7:	xchg   edx,eax
  40b6e8:	out    dx,al
  40b6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ea:	mov    fs,WORD PTR [esi]
  40b6ec:	(bad)  
  40b6ee:	outs   dx,BYTE PTR ds:[esi]
  40b6ef:	pop    esp
  40b6f0:	jb     0x40b6d3
  40b6f2:	ins    DWORD PTR es:[edi],dx
  40b6f3:	jg     0x40b6ba
  40b6f5:	jle    0x40b707
  40b6f7:	mov    esp,ebp
  40b6f9:	inc    esp
  40b6fa:	mov    cl,0x40
  40b6fc:	mov    ah,BYTE PTR [edx+0x5c]
  40b6ff:	das    
  40b700:	sbb    BYTE PTR [ebp+0x6d],dh
  40b703:	mov    edx,0xbaf8450f
  40b708:	and    al,0xa3
  40b70a:	mul    BYTE PTR [ebx+eax*8-0x75498ff3]
  40b711:	pop    esp
  40b712:	and    al,0x27
  40b714:	sub    BYTE PTR [ebx-0x2cdb6ee],0x87
  40b71b:	xchg   DWORD PTR [esi],ecx
  40b71d:	(bad)  
  40b71e:	popa   
  40b71f:	ror    DWORD PTR [ebp+0x4c],cl
  40b722:	and    BYTE PTR [edi+0x32],0xac
  40b726:	ret    
  40b727:	pop    edx
  40b728:	jecxz  0x40b760
  40b72a:	bound  esi,QWORD PTR [edx]
  40b72c:	ror    DWORD PTR [ebx-0x4a],0xe1
  40b730:	xor    BYTE PTR ds:0x7587d597,ah
  40b736:	dec    eax
  40b737:	cs ret 
  40b739:	vpsllw ymm3,ymm2,XMMWORD PTR [ebx+0x5c]
  40b73e:	xchg   BYTE PTR [ebp+0x68d0ead3],dl
  40b744:	fldcw  WORD PTR [esp+eax*1-0x4132a491]
  40b74b:	ins    BYTE PTR es:[edi],dx
  40b74c:	xchg   BYTE PTR [ecx],bh
  40b74e:	sbb    esp,DWORD PTR [edx-0x69a30cfe]
  40b754:	(bad)  
  40b755:	rcl    DWORD PTR [edi+0x2e145c57],cl
  40b75b:	cli    
  40b75c:	mov    bl,0xed
  40b75e:	mov    cs,WORD PTR ds:0x68ab4dc
  40b764:	mov    DWORD PTR [ecx],esi
  40b766:	push   eax
  40b767:	sub    BYTE PTR [ebx],al
  40b769:	sti    
  40b76a:	pop    bp
  40b76c:	out    dx,eax
  40b76d:	mov    bh,BYTE PTR [esi]
  40b76f:	inc    ebp
  40b770:	cmp    DWORD PTR [ecx+0x6a3baf4f],eax
  40b776:	lods   eax,DWORD PTR ds:[esi]
  40b777:	mov    ecx,0xf160f2b4
  40b77c:	add    ebx,edx
  40b77e:	in     eax,0x3a
  40b780:	cmp    eax,0x2a57e896
  40b785:	jne    0x40b78a
  40b787:	pop    ecx
  40b788:	aaa    
  40b789:	mov    esp,edx
  40b78b:	shl    DWORD PTR [edx-0x7d],cl
  40b78e:	(bad)  
  40b78f:	repnz xchg ebx,eax
  40b791:	call   0xdbf2ddd0
  40b796:	push   eax
  40b797:	sub    dl,BYTE PTR [ecx+edi*8-0x60579ebe]
  40b79e:	retf   
  40b79f:	jb     0x40b7da
  40b7a1:	imul   bl
  40b7a3:	mov    dh,0x37
  40b7a5:	cli    
  40b7a6:	xchg   edi,eax
  40b7a7:	je     0x40b777
  40b7a9:	leave  
  40b7aa:	adc    ebp,DWORD PTR [ecx]
  40b7ac:	xor    esp,DWORD PTR [ebp+0x7cdb6847]
  40b7b2:	push   es
  40b7b3:	mov    dl,0x92
  40b7b5:	bound  eax,QWORD PTR [edx+0x5f]
  40b7b8:	push   edi
  40b7b9:	sub    eax,0x8b7d1705
  40b7be:	dec    ebp
  40b7bf:	mov    dh,0xcb
  40b7c1:	int    0xa5
  40b7c3:	push   es
  40b7c4:	sar    DWORD PTR [edx-0x8],cl
  40b7c7:	mov    cl,0x7a
  40b7c9:	loope  0x40b790
  40b7cb:	out    dx,al
  40b7cc:	dec    ebp
  40b7cd:	dec    esi
  40b7ce:	or     BYTE PTR [ebx-0x24],bl
  40b7d1:	xchg   edx,eax
  40b7d2:	jl     0x40b79f
  40b7d4:	sub    al,0xf6
  40b7d6:	inc    esp
  40b7d7:	mov    BYTE PTR [eax],ch
  40b7d9:	addr16 data16 int 0x42
  40b7dd:	or     eax,0xceb702bb
  40b7e2:	pop    ss
  40b7e3:	call   0xed88:0xf20fb949
  40b7ea:	jmp    0x40b7c6
  40b7ec:	xor    BYTE PTR [ebp+0x2bd460e9],cl
  40b7f2:	rcr    DWORD PTR [edx+eax*2],0xd5
  40b7f6:	or     DWORD PTR [edx],0x9e1d6e64
  40b7fc:	mov    ebx,0xf0b1a971
  40b801:	dec    eax
  40b802:	pop    esi
  40b803:	sbb    DWORD PTR gs:[ebp-0x6252e200],esi
  40b80a:	sahf   
  40b80b:	and    eax,DWORD PTR [ebp+0x71]
  40b80e:	xor    cl,BYTE PTR ds:0xf176ddf0
  40b814:	(bad)  
  40b816:	call   0xf1a:0x7ff935ae
  40b81d:	xchg   edx,eax
  40b81e:	mov    ch,0x1
  40b820:	cmovnp esp,DWORD PTR [ebx+0x6b]
  40b824:	loopne 0x40b839
  40b826:	arpl   WORD PTR [edi+0x3a],ax
  40b829:	xor    edi,ebx
  40b82b:	das    
  40b82c:	stos   DWORD PTR es:[edi],eax
  40b82d:	fnsave [ebx+0x1a93b868]
  40b833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b834:	xchg   ebp,eax
  40b835:	cmp    DWORD PTR [esi+0x7],esp
  40b838:	xor    ah,BYTE PTR [esi-0x55141abe]
  40b83e:	sbb    BYTE PTR cs:[edi],cl
  40b841:	iret   
  40b842:	pop    ebp
  40b843:	in     eax,dx
  40b844:	xchg   BYTE PTR [esi+edx*4],cl
  40b847:	sar    BYTE PTR [edi+0x7f],1
  40b84a:	(bad)  
  40b84b:	adc    DWORD PTR [esi-0x35af3964],eax
  40b851:	xor    esi,edi
  40b853:	(bad)  
  40b854:	push   0x32003067
  40b859:	add    cl,cl
  40b85b:	cmp    BYTE PTR [edx],bl
  40b85d:	jp     0x40b825
  40b85f:	dec    edx
  40b860:	call   0xe49c:0xeaedf1a7
  40b867:	rol    DWORD PTR [edx],cl
  40b869:	stos   BYTE PTR es:[edi],al
  40b86a:	xor    DWORD PTR [edx+0x71],0x7e
  40b86e:	rcl    BYTE PTR [esi-0x51],cl
  40b871:	add    ecx,DWORD PTR [esi-0x18]
  40b874:	inc    edi
  40b875:	(bad)  
  40b876:	jg     0x40b8d9
  40b878:	lock sti 
  40b87a:	(bad)  
  40b87b:	shl    DWORD PTR [esi+0x6b],1
  40b87e:	ds cmp ecx,DWORD PTR ds:[edi+0x15]
  40b883:	daa    
  40b884:	pushf  
  40b885:	xlat   BYTE PTR ds:[ebx]
  40b886:	push   ecx
  40b887:	jge    0x40b8b3
  40b889:	mov    BYTE PTR [ebp-0x27efd25f],cl
  40b88f:	jae    0x40b8ca
  40b891:	out    dx,eax
  40b892:	pop    eax
  40b893:	bound  esi,QWORD PTR [edx+0x12294a20]
  40b899:	sti    
  40b89a:	dec    ebp
  40b89b:	les    ecx,FWORD PTR [esi-0x421df85]
  40b8a1:	pop    esi
  40b8a2:	and    BYTE PTR [ebp+ecx*2+0x1cfbfaab],bl
  40b8a9:	push   ebx
  40b8aa:	jl     0x40b909
  40b8ac:	mov    esi,0xfbc097bd
  40b8b1:	pop    edx
  40b8b2:	hlt    
  40b8b3:	repnz aas 
  40b8b5:	push   esp
  40b8b6:	push   ss
  40b8b7:	inc    edx
  40b8b8:	fs aam 0x75
  40b8bb:	lahf   
  40b8bc:	daa    
  40b8bd:	push   ebx
  40b8be:	pop    ebp
  40b8bf:	cld    
  40b8c0:	push   eax
  40b8c1:	xchg   ebx,eax
  40b8c2:	or     ebp,0x60
  40b8c5:	and    eax,0x94735030
  40b8ca:	jp     0x40b863
  40b8cc:	dec    esi
  40b8cd:	les    esi,FWORD PTR [ecx]
  40b8cf:	adc    al,0xf9
  40b8d1:	icebp  
  40b8d2:	jo     0x40b911
  40b8d4:	jns    0x40b900
  40b8d6:	xchg   ebx,eax
  40b8d7:	push   ebp
  40b8d8:	mov    WORD PTR [esi-0x3c],gs
  40b8db:	jmp    0x40b85e
  40b8dd:	cld    
  40b8de:	mov    dl,0x99
  40b8e0:	inc    ecx
  40b8e1:	int    0x59
  40b8e3:	and    eax,0x504e613c
  40b8e8:	imul   ecx,DWORD PTR [edx],0x7e
  40b8eb:	imul   esi
  40b8ed:	push   ss
  40b8ee:	dec    edi
  40b8ef:	adc    ebp,esi
  40b8f1:	call   0x6111:0xae01b9a5
  40b8f8:	mov    ds:0x47c1b7a7,eax
  40b8fd:	sbb    eax,DWORD PTR [esi+0x19abd143]
  40b903:	call   0x359b:0x9c226fe2
  40b90a:	and    al,0x8
  40b90c:	dec    esi
  40b90d:	and    DWORD PTR [ebp-0x20],eax
  40b910:	gs inc ebx
  40b912:	int3   
  40b913:	cld    
  40b914:	and    eax,0x10968c4a
  40b919:	adc    eax,0x1b187e57
  40b91e:	xchg   ecx,eax
  40b91f:	cld    
  40b920:	inc    edx
  40b921:	outs   dx,BYTE PTR ds:[esi]
  40b922:	pop    ss
  40b923:	fcomp  QWORD PTR [ecx-0x5]
  40b926:	call   FWORD PTR [edi]
  40b928:	cli    
  40b929:	mov    ecx,0xf6ca8eb8
  40b92e:	lods   al,BYTE PTR ds:[esi]
  40b92f:	cwde   
  40b930:	test   DWORD PTR [ebx],0xa090f151
  40b936:	mov    esp,0x3be1a083
  40b93b:	xchg   ebx,eax
  40b93c:	jmp    0x40b94b
  40b93e:	sbb    DWORD PTR ds:0x4f593630,0x4b527b37
  40b948:	ins    BYTE PTR es:[edi],dx
  40b949:	call   0x4a47:0x66dd8ba
  40b950:	xchg   esi,eax
  40b951:	imul   BYTE PTR [ebx+0x37d18129]
  40b957:	inc    ecx
  40b958:	cmp    cl,bl
  40b95a:	mov    ds,esi
  40b95c:	cwde   
  40b95d:	out    0xfb,eax
  40b95f:	ret    0x85f1
  40b962:	xor    bl,bl
  40b964:	in     al,0xfa
  40b966:	enter  0xe1d6,0x1
  40b96a:	jp     0x40b9c3
  40b96c:	dec    ebx
  40b96d:	adc    al,0x88
  40b96f:	mov    cl,0x3d
  40b971:	pushf  
  40b972:	inc    BYTE PTR [eax+0xf]
  40b975:	arpl   WORD PTR [ecx+0xa],sp
  40b978:	push   edx
  40b979:	jg     0x40b9a2
  40b97b:	push   0x2ebf50ce
  40b980:	ja     0x40b949
  40b982:	mov    cl,al
  40b984:	sbb    DWORD PTR [edx-0x7a4a6c6e],esp
  40b98a:	stos   DWORD PTR es:[edi],eax
  40b98b:	cmp    eax,edx
  40b98d:	push   ecx
  40b98e:	ret    
  40b98f:	jno    0x40b9a7
  40b991:	mov    ds:0x1d1b411b,al
  40b996:	ficomp DWORD PTR [esi]
  40b998:	mov    ah,0xd2
  40b99a:	(bad)  
  40b99b:	mov    eax,0xd7470c0b
  40b9a0:	inc    edx
  40b9a1:	neg    DWORD PTR [ebx+0x79]
  40b9a4:	jmp    0x40b960
  40b9a6:	dec    esp
  40b9a7:	out    0x6e,al
  40b9a9:	jp     0x40b9f2
  40b9ab:	push   ebx
  40b9ac:	lods   eax,DWORD PTR ds:[esi]
  40b9ad:	push   edx
  40b9ae:	push   edx
  40b9af:	mov    edi,DWORD PTR [edi+0x75dc60bd]
  40b9b5:	loop   0x40b9df
  40b9b7:	pop    esi
  40b9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b9:	or     dl,BYTE PTR [edx]
  40b9bb:	xor    DWORD PTR [ebp-0x42ed695c],esp
  40b9c1:	fwait
  40b9c2:	push   0x5c
  40b9c4:	add    eax,0xf9125be3
  40b9c9:	xchg   bl,dl
  40b9cb:	push   esi
  40b9cc:	shl    DWORD PTR [esi+0x3],1
  40b9cf:	repnz mov edx,0x377e1b59
  40b9d5:	repz es push eax
  40b9d8:	jle    0x40b96d
  40b9da:	stos   BYTE PTR es:[edi],al
  40b9db:	sbb    eax,DWORD PTR [edi+0x4a50568b]
  40b9e1:	std    
  40b9e2:	jl     0x40b98b
  40b9e4:	lods   al,BYTE PTR ds:[esi]
  40b9e5:	ss enter 0xb0bd,0x69
  40b9ea:	fild   QWORD PTR [eax-0x6dd8429e]
  40b9f0:	rcl    BYTE PTR ds:0xef07ba7e,cl
  40b9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f7:	or     ecx,edi
  40b9f9:	jg     0x40ba5e
  40b9fb:	jbe    0x40ba7c
  40b9fd:	inc    esp
  40b9fe:	cmp    eax,0x52a0d1d6
  40ba03:	fistp  QWORD PTR [eax+0x1]
  40ba06:	loope  0x40b9d9
  40ba08:	xchg   edx,eax
  40ba09:	lea    edi,[esi]
  40ba0b:	in     eax,dx
  40ba0c:	and    eax,0xdc0fce51
  40ba11:	sub    eax,0xf3f7b0c6
  40ba16:	jo     0x40ba80
  40ba18:	inc    esp
  40ba19:	fiadd  WORD PTR [edi]
  40ba1b:	or     eax,0x7bdf4eff
  40ba20:	cs ja  0x40ba81
  40ba23:	mov    BYTE PTR [ebx+0x5fa7271d],cl
  40ba29:	xchg   edi,eax
  40ba2a:	or     edx,DWORD PTR [ecx-0x14]
  40ba2d:	in     al,dx
  40ba2e:	jmp    0x99b28dcb
  40ba33:	or     al,0x4b
  40ba35:	add    BYTE PTR [ecx],0xa9
  40ba38:	aad    0x86
  40ba3a:	mov    es,WORD PTR [eax]
  40ba3c:	push   ecx
  40ba3d:	ins    DWORD PTR es:[edi],dx
  40ba3e:	hlt    
  40ba3f:	sub    al,0x97
  40ba41:	in     eax,dx
  40ba42:	mov    ah,0x55
  40ba44:	mov    bh,0x1b
  40ba46:	inc    ecx
  40ba47:	cs mov bh,0x6f
  40ba4a:	sub    al,0x37
  40ba4c:	arpl   WORD PTR [ecx-0x692afa64],bx
  40ba52:	pop    es
  40ba53:	mov    edi,0xfb2df935
  40ba58:	fs mov dl,0x73
  40ba5b:	mov    ds:0x632e8700,al
  40ba60:	sub    eax,0xd78b9540
  40ba65:	push   ebx
  40ba66:	popf   
  40ba67:	lods   al,BYTE PTR ds:[esi]
  40ba68:	mov    al,cl
  40ba6a:	dec    esp
  40ba6b:	or     DWORD PTR [ebp+0x2b46d121],ebx
  40ba71:	retf   0x5aa5
  40ba74:	push   esp
  40ba75:	fdivr  DWORD PTR es:[ebx]
  40ba78:	and    al,0x5b
  40ba7a:	leave  
  40ba7b:	mov    al,ds:0xe1d947ff
  40ba80:	outs   dx,BYTE PTR ds:[esi]
  40ba81:	popf   
  40ba82:	push   es
  40ba83:	or     BYTE PTR [edi+0x47],dl
  40ba86:	out    0x4c,al
  40ba88:	cmc    
  40ba89:	pop    eax
  40ba8a:	add    BYTE PTR [eax],0xfb
  40ba8d:	out    dx,eax
  40ba8e:	mov    dl,0x44
  40ba90:	inc    esi
  40ba91:	ret    0xe1eb
  40ba94:	shl    BYTE PTR gs:[eax],cl
  40ba97:	in     al,0xad
  40ba99:	aad    0x4b
  40ba9b:	sahf   
  40ba9c:	or     DWORD PTR [esi+ebp*2+0x5e],eax
  40baa0:	mov    edx,0xa4414630
  40baa5:	cs pop esi
  40baa7:	addr16 push edx
  40baa9:	mov    dh,0xab
  40baab:	out    dx,eax
  40baac:	in     al,0xe
  40baae:	imul   eax,DWORD PTR [ebx-0x62],0xffffffee
  40bab2:	push   ebp
  40bab3:	out    dx,al
  40bab4:	inc    edx
  40bab5:	nop
  40bab6:	sub    edi,DWORD PTR [ebx+0x21]
  40bab9:	mov    ch,0xa5
  40babb:	xchg   ebp,eax
  40babc:	push   cs
  40babd:	ins    BYTE PTR es:[edi],dx
  40babe:	popf   
  40babf:	ins    DWORD PTR es:[edi],dx
  40bac0:	push   ebx
  40bac1:	das    
  40bac2:	dec    ecx
  40bac3:	popa   
  40bac4:	xchg   DWORD PTR [ebp+0x5e886f13],edx
  40baca:	ror    DWORD PTR [edx],0x7b
  40bacd:	dec    esp
  40bace:	push   0x7faa1f8a
  40bad3:	stos   DWORD PTR es:[edi],eax
  40bad4:	add    ebx,DWORD PTR [ecx+0x73]
  40bad7:	lods   eax,DWORD PTR ds:[esi]
  40bad8:	dec    edi
  40bad9:	sti    
  40bada:	xor    esi,DWORD PTR [esi+0xcc76ad3]
  40bae0:	mov    bh,0xb1
  40bae2:	xchg   BYTE PTR [ebp-0x25],bh
  40bae5:	dec    ebx
  40bae6:	sub    bh,BYTE PTR [ecx-0x30]
  40bae9:	cmp    di,bp
  40baec:	pushf  
  40baed:	push   esi
  40baee:	and    DWORD PTR [eax+0x7e],edi
  40baf1:	sbb    cl,BYTE PTR [edx-0x53]
  40baf4:	sub    ecx,edx
  40baf6:	mov    al,0xaf
  40baf8:	sbb    eax,0x6c1c6051
  40bafd:	and    eax,0xca908738
  40bb02:	mov    DWORD PTR [esi-0x30a8b644],esi
  40bb08:	je     0x40bb53
  40bb0a:	test   al,0xb8
  40bb0c:	stos   BYTE PTR es:[edi],al
  40bb0d:	ins    BYTE PTR es:[edi],dx
  40bb0e:	jmp    0x8b78:0xb5a4e1b0
  40bb15:	pop    esp
  40bb16:	fcomp  DWORD PTR [edi]
  40bb18:	lock clc 
  40bb1a:	add    al,0x4b
  40bb1c:	and    ebx,DWORD PTR [eax+0x5bd53877]
  40bb22:	dec    ebx
  40bb23:	jnp    0x40badc
  40bb25:	loop   0x40bb05
  40bb27:	mov    edx,0xccc78506
  40bb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb2d:	retf   
  40bb2e:	dec    esp
  40bb2f:	shl    BYTE PTR [ecx+0x12],cl
  40bb32:	pop    ebx
  40bb33:	jne    0x40bb6d
  40bb35:	loopne 0x40bb7b
  40bb37:	mov    es,WORD PTR [ebx]
  40bb39:	dec    esi
  40bb3a:	mov    fs,eax
  40bb3c:	pop    eax
  40bb3d:	cmp    DWORD PTR [edi-0x29e492ce],0x289f511d
  40bb47:	fsub   st(0),st
  40bb49:	aam    0x71
  40bb4b:	retf   0x24fe
  40bb4e:	in     al,dx
  40bb4f:	inc    ecx
  40bb50:	fmul   st(4),st
  40bb52:	push   esp
  40bb53:	xchg   esp,eax
  40bb54:	lods   al,BYTE PTR ds:[esi]
  40bb55:	aad    0xfc
  40bb57:	mov    ebx,0xb863a855
  40bb5c:	ja     0x40bb17
  40bb5e:	inc    esi
  40bb5f:	div    ah
  40bb61:	aad    0x45
  40bb63:	fdiv   DWORD PTR [bp+di]
  40bb66:	retf   0x260
  40bb69:	xchg   esi,eax
  40bb6a:	cmp    BYTE PTR [ecx-0x3b],bl
  40bb6d:	sti    
  40bb6e:	push   ebp
  40bb6f:	xor    bh,BYTE PTR [edx]
  40bb71:	cwde   
  40bb72:	fwait
  40bb73:	push   edx
  40bb74:	jmp    edx
  40bb76:	ror    ebp,1
  40bb78:	mov    esi,0x75913f76
  40bb7d:	push   es
  40bb7e:	cmp    DWORD PTR [eax-0x4915072a],esi
  40bb84:	ror    cl,1
  40bb86:	inc    edx
  40bb87:	imul   ebp,esp,0x10fcf0e5
  40bb8d:	sahf   
  40bb8e:	je     0x40bb7f
  40bb90:	mul    BYTE PTR [edi]
  40bb92:	sbb    eax,0x532db719
  40bb97:	xor    al,0x78
  40bb99:	lock xor eax,0x41618109
  40bb9f:	aam    0x16
  40bba1:	jns    0x40bbe9
  40bba3:	mov    ch,0xb6
  40bba5:	loopne 0x40bba6
  40bba7:	shr    cl,cl
  40bba9:	lods   al,BYTE PTR ds:[esi]
  40bbaa:	and    ebx,DWORD PTR [esi+edx*4]
  40bbad:	les    edx,FWORD PTR [ebx+0x47]
  40bbb0:	adc    esi,DWORD PTR [edx+0x2face91f]
  40bbb6:	in     al,dx
  40bbb7:	lods   al,BYTE PTR ds:[esi]
  40bbb8:	mov    BYTE PTR [esi+0x24],dh
  40bbbb:	cwde   
  40bbbc:	shl    DWORD PTR [esi+ebx*1],cl
  40bbbf:	xchg   esi,eax
  40bbc0:	mov    DWORD PTR [eax+0x2a290742],edi
  40bbc6:	xchg   edi,eax
  40bbc7:	cdq    
  40bbc8:	cmc    
  40bbc9:	add    esi,edx
  40bbcb:	out    dx,al
  40bbcc:	imul   ecx,DWORD PTR [esi+0x67f3895f],0xffffffde
  40bbd3:	push   eax
  40bbd4:	xchg   esi,eax
  40bbd5:	sahf   
  40bbd6:	cs loop 0x40bbeb
  40bbd9:	mov    bh,0xe8
  40bbdb:	and    eax,0x5906b747
  40bbe0:	pop    ebp
  40bbe1:	dec    edi
  40bbe2:	adc    eax,0xd39b4a1c
  40bbe7:	add    BYTE PTR [edx],ah
  40bbe9:	mov    dh,0xe1
  40bbeb:	sar    ebp,0x99
  40bbee:	sti    
  40bbef:	add    al,bh
  40bbf1:	nop
  40bbf2:	imul   eax,DWORD PTR [ecx+0x3bda3b41],0x3374eebd
  40bbfc:	(bad)  
  40bbfd:	cwde   
  40bbfe:	inc    edx
  40bbff:	sub    eax,0xff758ee2
  40bc04:	arpl   dx,dx
  40bc06:	loope  0x40bbe7
  40bc08:	ins    DWORD PTR es:[edi],dx
  40bc09:	retf   0x8b0c
  40bc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0d:	jp     0x40bba4
  40bc0f:	and    DWORD PTR [edi+0x1e],ebx
  40bc12:	cmp    ch,BYTE PTR [edi-0x67edaf6b]
  40bc18:	shl    BYTE PTR [ebx+0x32],0x5b
  40bc1c:	aad    0x45
  40bc1e:	std    
  40bc1f:	fnstenv [edx+0x5e5f89cb]
  40bc25:	add    al,ch
  40bc27:	dec    ecx
  40bc28:	pop    DWORD PTR [eax-0x464405cb]
  40bc2e:	stc    
  40bc2f:	retf   0x2f87
  40bc32:	je     0x40bc0a
  40bc34:	out    0x83,eax
  40bc36:	and    al,0xd0
  40bc38:	jle    0x40bc63
  40bc3a:	jne    0x40bc42
  40bc3c:	xchg   edx,eax
  40bc3d:	pop    edi
  40bc3e:	xchg   edx,eax
  40bc3f:	push   ecx
  40bc40:	int    0x34
  40bc42:	push   ecx
  40bc43:	mov    BYTE PTR [eax+0x71],ah
  40bc46:	loope  0x40bcb2
  40bc48:	loope  0x40bc32
  40bc4a:	daa    
  40bc4b:	push   es
  40bc4c:	ja     0x40bc89
  40bc4e:	push   0xdcc280b3
  40bc53:	test   eax,0xa8ae0d89
  40bc58:	mov    al,ds:0x267d9c8c
  40bc5d:	and    esp,DWORD PTR [edx-0x7a]
  40bc60:	imul   ecx,DWORD PTR [ebx-0x65e44115],0xffffffcc
  40bc67:	jl     0x40bc40
  40bc69:	fst    QWORD PTR [edx]
  40bc6b:	adc    BYTE PTR [edi-0x7d85889],ch
  40bc71:	nop
  40bc72:	jge    0x40bc25
  40bc74:	loope  0x40bc47
  40bc76:	mov    al,0x7
  40bc78:	adc    bh,bl
  40bc7a:	pusha  
  40bc7b:	add    dh,dh
  40bc7d:	xor    al,BYTE PTR [ecx+0x2acb5a31]
  40bc83:	int3   
  40bc84:	popa   
  40bc85:	cli    
  40bc86:	dec    ebp
  40bc87:	(bad)  
  40bc88:	cli    
  40bc89:	cld    
  40bc8a:	add    al,0x8c
  40bc8c:	rcl    BYTE PTR [ebx-0x41],cl
  40bc8f:	loope  0x40bc93
  40bc91:	call   0xe015:0xa0d75e84
  40bc98:	and    al,0xfd
  40bc9a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bc9c:	(bad)  
  40bc9d:	cld    
  40bc9e:	inc    ebp
  40bc9f:	fwait
  40bca0:	retf   
  40bca1:	cld    
  40bca2:	mov    WORD PTR [edi-0x4f],cs
  40bca5:	jmp    0x108a6031
  40bcaa:	adc    al,0x62
  40bcac:	push   es
  40bcad:	or     DWORD PTR [eax+ecx*4],edi
  40bcb0:	ss scas al,BYTE PTR es:[edi]
  40bcb2:	lods   al,BYTE PTR ds:[esi]
  40bcb3:	repz sub cx,WORD PTR [ebp-0x37]
  40bcb8:	(bad)  
  40bcb9:	arpl   sp,bx
  40bcbb:	lods   eax,DWORD PTR ds:[esi]
  40bcbc:	sub    al,0x31
  40bcbe:	addr16 push eax
  40bcc0:	push   cs
  40bcc1:	aam    0x1b
  40bcc3:	dec    esp
  40bcc4:	dec    ebp
  40bcc5:	out    0xcc,al
  40bcc7:	pop    ds
  40bcc8:	xchg   esi,eax
  40bcc9:	fmul   DWORD PTR [esi+0x2e]
  40bccc:	clc    
  40bccd:	or     DWORD PTR [eax-0x2d5b7cc3],ebp
  40bcd3:	test   eax,0xac7d0b59
  40bcd8:	popf   
  40bcd9:	mov    ch,0x94
  40bcdb:	(bad)  
  40bcdc:	xchg   ecx,eax
  40bcdd:	repz sbb ebp,DWORD PTR [esi]
  40bce0:	push   cs
  40bce1:	test   DWORD PTR [eax],0x4838185a
  40bce7:	xlat   BYTE PTR ds:[ebx]
  40bce8:	adc    BYTE PTR [ecx-0x1],ch
  40bceb:	or     al,0x11
  40bced:	xor    ch,BYTE PTR [edx]
  40bcef:	jmp    0x527a1dff
  40bcf4:	adc    DWORD PTR [eax-0x2f75257b],0x65d8b480
  40bcfe:	pop    ds
  40bcff:	out    dx,eax
  40bd00:	pushw  cs
  40bd02:	jo     0x40bc95
  40bd04:	jno    0x40bc9c
  40bd06:	push   ebp
  40bd07:	adc    DWORD PTR [esi+0x235fc2ff],ebx
  40bd0d:	mov    ch,0xc9
  40bd0f:	jbe    0x40bd72
  40bd11:	je     0x40bd48
  40bd13:	or     esi,ecx
  40bd15:	pop    esi
  40bd16:	dec    edi
  40bd17:	mov    al,0xf9
  40bd19:	pop    edx
  40bd1a:	shl    DWORD PTR [esi+0x38],cl
  40bd1d:	fadd   DWORD PTR [esi+0x30]
  40bd20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd21:	icebp  
  40bd22:	add    bh,BYTE PTR [eax]
  40bd24:	cmc    
  40bd25:	test   DWORD PTR [edi+esi*4-0x634f7158],esi
  40bd2c:	sar    BYTE PTR [ecx-0x6472b9e4],1
  40bd32:	jp     0x40bd9d
  40bd34:	jge    0x40bcdb
  40bd36:	mov    al,ds:0xc8e35040
  40bd3b:	cmp    bl,BYTE PTR ds:0x7b60555e
  40bd41:	sti    
  40bd42:	clc    
  40bd43:	fiadd  DWORD PTR [edi+0x5586b2cb]
  40bd49:	jl     0x40bce0
  40bd4b:	in     eax,0xe5
  40bd4d:	ror    BYTE PTR [esi+0x40],cl
  40bd50:	cmp    bh,BYTE PTR [ecx+0x55]
  40bd53:	repnz mov bl,0x36
  40bd56:	mov    esp,0x5e623381
  40bd5b:	les    ebp,FWORD PTR [ebx]
  40bd5d:	pushf  
  40bd5e:	or     edx,edx
  40bd60:	xor    al,BYTE PTR [esi-0x17]
  40bd63:	xor    ecx,DWORD PTR ds:0x7d0ec7c8
  40bd69:	arpl   WORD PTR [eax+0x795bd2d7],bp
  40bd6f:	sub    al,0x8b
  40bd71:	repnz adc eax,ebx
  40bd74:	cs ins DWORD PTR es:[edi],dx
  40bd76:	cld    
  40bd77:	pop    ds
  40bd78:	sti    
  40bd79:	mov    eax,ds:0xaeada402
  40bd7e:	scas   al,BYTE PTR es:[edi]
  40bd7f:	dec    edx
  40bd80:	pusha  
  40bd81:	inc    esp
  40bd82:	sahf   
  40bd83:	add    cl,BYTE PTR [esi]
  40bd85:	pop    edi
  40bd86:	cld    
  40bd87:	pop    edi
  40bd88:	test   al,0xab
  40bd8a:	scas   al,BYTE PTR es:[edi]
  40bd8b:	test   BYTE PTR [ebp-0x450f4300],al
  40bd91:	cs into 
  40bd93:	sti    
  40bd94:	inc    ebp
  40bd95:	std    
  40bd96:	or     al,0x16
  40bd98:	scas   al,BYTE PTR es:[edi]
  40bd99:	mov    DWORD PTR [ecx],eax
  40bd9b:	xchg   edi,eax
  40bd9c:	hlt    
  40bd9d:	das    
  40bd9e:	push   0x69e8608f
  40bda3:	add    eax,0xc79aab2
  40bda8:	sbb    al,0xec
  40bdaa:	xor    al,0xc7
  40bdac:	rol    ah,1
  40bdae:	icebp  
  40bdaf:	pop    es
  40bdb0:	scas   al,BYTE PTR es:[edi]
  40bdb1:	test   al,0xc6
  40bdb3:	dec    eax
  40bdb4:	cmp    BYTE PTR [ebp+0xacf98eb],ah
  40bdba:	mov    eax,ds:0x25121ae6
  40bdbf:	aaa    
  40bdc0:	imul   ebp,edx,0xb8f0e4c0
  40bdc6:	test   al,0x3e
  40bdc8:	xchg   ebp,eax
  40bdc9:	xchg   edx,eax
  40bdca:	mov    ch,0x6d
  40bdcc:	sub    edi,ecx
  40bdce:	jle    0x40bdc6
  40bdd0:	pop    es
  40bdd1:	loop   0x40bd90
  40bdd3:	adc    esp,ebp
  40bdd5:	les    esi,FWORD PTR ds:[eax+0x4c]
  40bdd9:	sbb    eax,ecx
  40bddb:	jb     0x40bdae
  40bddd:	jbe    0x40be25
  40bddf:	lods   eax,DWORD PTR ds:[esi]
  40bde0:	add    edx,DWORD PTR [edi+0x264dbfc4]
  40bde6:	jae    0x40be4a
  40bde8:	cmp    DWORD PTR [ecx+eax*2-0xdecbb1a],esi
  40bdef:	popf   
  40bdf0:	xchg   ecx,eax
  40bdf1:	mov    ch,0x84
  40bdf3:	mov    al,ds:0xf9a7baa6
  40bdf8:	jne    0x40bd7b
  40bdfa:	add    al,0xdb
  40bdfc:	and    eax,0xf34ced21
  40be01:	fcom   QWORD PTR [esi+0x61faeea7]
  40be07:	ret    0xad05
  40be0a:	sbb    al,0x88
  40be0c:	inc    ecx
  40be0d:	int3   
  40be0e:	rcl    esi,1
  40be10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be11:	mov    gs,WORD PTR [esi-0x6a369410]
  40be17:	xchg   esi,eax
  40be18:	(bad)  
  40be19:	sar    BYTE PTR [esi+0x751d72ad],1
  40be1f:	adc    al,0xd0
  40be21:	daa    
  40be22:	inc    ebp
  40be23:	fsubrp st(4),st
  40be25:	retf   
  40be26:	mov    ecx,0x2e49428d
  40be2b:	ins    BYTE PTR es:[edi],dx
  40be2c:	mov    DWORD PTR [ebx],ebx
  40be2e:	add    eax,0x2265eb07
  40be33:	pop    edi
  40be34:	pop    eax
  40be35:	push   edx
  40be36:	add    esp,edx
  40be38:	nop
  40be39:	dec    edx
  40be3a:	scas   al,BYTE PTR es:[edi]
  40be3b:	jle    0x40be10
  40be3d:	cmp    eax,0x5b2eff5f
  40be42:	mov    eax,0xb4fd231
  40be47:	or     eax,DWORD PTR ds:0xa872365e
  40be4d:	xchg   BYTE PTR [ebx+0x7b],bh
  40be50:	cmp    bl,BYTE PTR [edx+0x48907fb]
  40be56:	jns    0x40be18
  40be58:	jnp    0x40be39
  40be5a:	jp     0x40bdf0
  40be5c:	and    dl,BYTE PTR [eax+0xd]
  40be5f:	pop    ds
  40be60:	lock add eax,0xa92a2d0a
  40be66:	and    BYTE PTR [ecx+0x56],bh
  40be69:	sbb    DWORD PTR [eax-0x7c],ecx
  40be6c:	je     0x40bea2
  40be6e:	jl     0x40be4c
  40be70:	inc    edi
  40be71:	iret   
  40be72:	mov    al,ds:0xf6d4316c
  40be77:	or     bl,BYTE PTR ds:0x7316fb6b
  40be7d:	xor    esi,DWORD PTR [esi+ebx*2+0x41]
  40be81:	push   0xffffffa3
  40be83:	imul   esp,DWORD PTR [ecx+0x1c33021],0x958d86fc
  40be8d:	jo     0x40be97
  40be8f:	sbb    dl,dl
  40be91:	sar    esp,1
  40be93:	(bad)  [ecx+0x180118da]
  40be99:	jno    0x40be23
  40be9b:	pop    ecx
  40be9c:	xchg   edx,eax
  40be9d:	pushf  
  40be9e:	add    BYTE PTR [edx],bl
  40bea0:	in     eax,dx
  40bea1:	icebp  
  40bea2:	rol    al,1
  40bea4:	vpcmpgtw ymm4,ymm5,ymm0
  40bea8:	pop    ds
  40bea9:	push   ss
  40beaa:	mov    al,0x67
  40beac:	add    eax,0x24c32372
  40beb1:	mov    ds:0xae7fba5d,al
  40beb6:	lahf   
  40beb7:	cmovs  ebp,edi
  40beba:	fsubr  st(6),st
  40bebc:	mov    gs,WORD PTR [eax+0x1e2e2245]
  40bec2:	scas   eax,DWORD PTR es:[edi]
  40bec3:	xchg   ebx,eax
  40bec4:	(bad)  
  40bec5:	mov    dl,0x7d
  40bec7:	jle    0x40be76
  40bec9:	xchg   esp,eax
  40beca:	test   DWORD PTR [ecx-0x454fdbe7],ebp
  40bed0:	js     0x40be71
  40bed2:	in     al,dx
  40bed3:	sub    al,cl
  40bed5:	aad    0x13
  40bed7:	stc    
  40bed8:	sub    al,0x3a
  40beda:	push   ss
  40bedb:	dec    esp
  40bedc:	call   FWORD PTR [esi-0x47da67c6]
  40bee2:	xchg   BYTE PTR ds:[eax+0x537257ca],ch
  40bee9:	shl    BYTE PTR [eax-0x504cc39e],0x7b
  40bef0:	adc    eax,0x2f7ac55
  40bef5:	sbb    dh,BYTE PTR [edx+0x67]
  40bef8:	out    dx,al
  40bef9:	jmp    0x5b5e:0xdda60e51
  40bf00:	inc    esi
  40bf01:	jle    0x40bea7
  40bf03:	lods   eax,DWORD PTR ds:[esi]
  40bf04:	jmp    0xeb71170d
  40bf09:	scas   eax,DWORD PTR es:[edi]
  40bf0a:	popa   
  40bf0b:	rcl    al,1
  40bf0d:	mov    al,ds:0xc65aceb
  40bf12:	iret   
  40bf13:	pop    esp
  40bf14:	push   edx
  40bf15:	nop
  40bf16:	dec    ebp
  40bf17:	mov    esi,0x79c8eba6
  40bf1c:	mov    eax,0x8103b4aa
  40bf21:	int3   
  40bf22:	inc    edx
  40bf23:	jno    0x40bed8
  40bf25:	stc    
  40bf26:	pusha  
  40bf27:	mov    ebp,0x63abf6a8
  40bf2c:	aam    0x5d
  40bf2e:	gs push esp
  40bf30:	cld    
  40bf31:	inc    ebx
  40bf32:	mov    ?,WORD PTR [eax+0x25b851c9]
  40bf38:	push   ds
  40bf39:	inc    esi
  40bf3a:	(bad)  
  40bf3b:	clc    
  40bf3c:	jae    0x40bf5e
  40bf3e:	sbb    DWORD PTR [eax+0x6d],ecx
  40bf41:	pop    ecx
  40bf42:	icebp  
  40bf43:	mov    esp,0x810e9ca0
  40bf48:	cmp    BYTE PTR [edx+eax*8-0x78],cl
  40bf4c:	stc    
  40bf4d:	out    0x64,al
  40bf4f:	fcom   QWORD PTR [ebx+0x16]
  40bf52:	mul    DWORD PTR [esp+edi*1+0x23]
  40bf56:	das    
  40bf57:	imul   ebx,DWORD PTR ds:0x76d1bf1f,0xdeccbd8b
  40bf61:	scas   eax,DWORD PTR es:[edi]
  40bf62:	test   DWORD PTR [edx],ecx
  40bf64:	push   ss
  40bf65:	fcmovbe st,st(5)
  40bf67:	or     DWORD PTR [eax],ebx
  40bf69:	in     al,dx
  40bf6a:	aad    0xbc
  40bf6c:	jmp    0x5b7e:0x8514b0ea
  40bf73:	(bad)  
  40bf74:	ss xchg edi,eax
  40bf76:	mov    esp,0x4d94ee8a
  40bf7b:	inc    edi
  40bf7c:	lods   eax,DWORD PTR ds:[esi]
  40bf7d:	and    BYTE PTR [edx+0x39],ch
  40bf80:	adc    dx,cx
  40bf83:	mov    dh,0x63
  40bf85:	int3   
  40bf86:	pop    edi
  40bf87:	jp     0x40bfe9
  40bf89:	and    ch,BYTE PTR [esi-0x24]
  40bf8c:	es movaps xmm7,xmm7
  40bf90:	xchg   ecx,eax
  40bf91:	sahf   
  40bf92:	mov    bh,0x10
  40bf94:	mov    al,ds:0xbdf65520
  40bf99:	dec    ebx
  40bf9a:	pop    ss
  40bf9b:	adc    al,0xec
  40bf9d:	add    BYTE PTR [ecx+0x72e4d47f],dh
  40bfa3:	fiadd  DWORD PTR [edi-0x3a]
  40bfa6:	add    BYTE PTR [ebx-0x7884730d],cl
  40bfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfad:	loopne 0x40bf90
  40bfaf:	mov    ecx,0x14cbabfb
  40bfb4:	retf   
  40bfb5:	bound  esp,QWORD PTR [eax-0x36d08b03]
  40bfbb:	sbb    al,0xd3
  40bfbd:	mov    ds:0x393fcaec,eax
  40bfc2:	nop
  40bfc3:	mov    ah,0xce
  40bfc5:	mov    ebx,0xcd75ebf8
  40bfca:	fnsave [edi]
  40bfcc:	daa    
  40bfcd:	lods   eax,DWORD PTR ds:[esi]
  40bfce:	js     0x40c021
  40bfd0:	jo     0x40bf56
  40bfd2:	jbe    0x40bfb4
  40bfd4:	mov    BYTE PTR [edi+0x1d],bh
  40bfd7:	inc    eax
  40bfd8:	ins    DWORD PTR es:[edi],dx
  40bfd9:	mov    WORD PTR [ebp+0x2b307a0a],cs
  40bfdf:	pushf  
  40bfe0:	mov    eax,ds:0x49f279b3
  40bfe5:	inc    ebp
  40bfe6:	push   cs
  40bfe7:	jecxz  0x40bfaa
  40bfe9:	push   ebx
  40bfea:	scas   al,BYTE PTR es:[edi]
  40bfeb:	into   
  40bfec:	scas   al,BYTE PTR es:[edi]
  40bfed:	loope  0x40bf76
  40bfef:	iret   
  40bff0:	adc    esi,DWORD PTR [edx]
  40bff2:	in     eax,dx
  40bff3:	dec    edi
  40bff4:	jbe    0x40c03a
  40bff6:	lods   al,BYTE PTR ds:[esi]
  40bff7:	into   
  40bff8:	inc    edi
  40bff9:	jecxz  0x40bfea
  40bffb:	retf   
  40bffc:	daa    
  40bffd:	jmp    FWORD PTR [eax-0x6827df87]
  40c003:	pop    ss
  40c004:	jecxz  0x40c076
  40c006:	pop    ss
  40c007:	push   gs
  40c009:	xchg   BYTE PTR [ebp+0x4cd269e7],ch
  40c00f:	test   ebx,ebp
  40c011:	(bad)  
  40c012:	pusha  
  40c013:	int3   
  40c014:	lock cdq 
  40c016:	sub    ah,bl
  40c018:	pop    edx
  40c019:	add    DWORD PTR [ebp+0x51],ebp
  40c01c:	cmp    DWORD PTR [ecx-0x37d577ea],ebp
  40c022:	out    0x31,al
  40c024:	cmc    
  40c025:	xchg   ebp,eax
  40c026:	push   ecx
  40c027:	cli    
  40c028:	stos   DWORD PTR es:[edi],eax
  40c029:	loope  0x40bfc7
  40c02b:	pop    esp
  40c02c:	and    eax,0xe73e34e
  40c031:	inc    eax
  40c032:	cmc    
  40c033:	inc    edx
  40c034:	daa    
  40c035:	inc    edi
  40c036:	jp     0x40bfeb
  40c038:	jle    0x40c04c
  40c03a:	mov    ebp,0xed733bd6
  40c03f:	cmp    eax,0xf5622e31
  40c044:	call   0xad02:0xf050ef1b
  40c04b:	(bad)  
  40c04c:	xor    al,0x5b
  40c04e:	xchg   edx,eax
  40c04f:	push   esp
  40c050:	fcmovu st,st(6)
  40c052:	sbb    BYTE PTR [edx],dl
  40c054:	(bad)  
  40c055:	(bad)  
  40c056:	xlat   BYTE PTR ds:[ebx]
  40c057:	adc    eax,0xc80fc7ba
  40c05c:	nop
  40c05d:	push   ecx
  40c05e:	rcr    DWORD PTR [edi],0x5c
  40c061:	mov    ds:0x9d4e27e5,eax
  40c066:	lahf   
  40c067:	cmc    
  40c068:	shl    BYTE PTR [ecx+0x111d0ab8],cl
  40c06e:	jo     0x40c052
  40c070:	bound  ecx,QWORD PTR [esi+edx*2]
  40c073:	push   es
  40c074:	cmp    edx,DWORD PTR [eax]
  40c076:	inc    edi
  40c077:	loope  0x40c0d4
  40c079:	fld    QWORD PTR [edi+ebp*4+0x4c6f678]
  40c080:	push   0x470b156b
  40c085:	daa    
  40c086:	mov    dl,0x47
  40c088:	(bad)  
  40c08a:	lock pop ebx
  40c08c:	xor    eax,DWORD PTR [ebx+0x4532f584]
  40c092:	jmp    0x40c0d7
  40c094:	(bad)  
  40c095:	ins    DWORD PTR es:[edi],dx
  40c096:	dec    ebp
  40c097:	pop    es
  40c098:	clc    
  40c099:	jmp    0x451f0a16
  40c09e:	xchg   edx,eax
  40c09f:	aas    
  40c0a0:	out    dx,eax
  40c0a1:	cmp    BYTE PTR [edi],al
  40c0a3:	and    edi,ebp
  40c0a5:	jo     0x40c04e
  40c0a7:	adc    al,0x82
  40c0a9:	scas   eax,DWORD PTR es:[edi]
  40c0aa:	sbb    DWORD PTR [esi],ebx
  40c0ac:	add    edi,DWORD PTR [eax+0x5a]
  40c0af:	push   edi
  40c0b0:	cmp    esi,eax
  40c0b2:	fwait
  40c0b3:	iret   
  40c0b4:	jmp    0x2f87:0xe59e347f
  40c0bb:	push   ss
  40c0bc:	xor    DWORD PTR [edi+0x563e1d4],edx
  40c0c2:	mov    ebp,0xeacd7f90
  40c0c7:	push   ecx
  40c0c8:	call   0x8fa359ee
  40c0cd:	ret    
  40c0ce:	mov    eax,ds:0xbc5f77bf
  40c0d3:	xchg   edi,eax
  40c0d4:	xrelease mov BYTE PTR [esi-0x7b],0x21
  40c0d9:	jecxz  0x40c088
  40c0db:	dec    esp
  40c0dc:	fnstsw WORD PTR [edi]
  40c0de:	ss push ds
  40c0e0:	dec    esp
  40c0e1:	pop    ecx
  40c0e2:	lock push ebx
  40c0e4:	aam    0x2
  40c0e6:	loop   0x40c13a
  40c0e8:	mov    ebx,0x218f9e8b
  40c0ed:	add    ebp,DWORD PTR [eax+0x5c3ee715]
  40c0f3:	je     0x40c0b0
  40c0f5:	pop    ds
  40c0f6:	and    esi,DWORD PTR [ebp-0x66856736]
  40c0fc:	shl    ecx,1
  40c0fe:	cmp    DWORD PTR [ecx-0x80],esp
  40c101:	and    al,BYTE PTR [esi+0x5f]
  40c104:	mov    ebx,0xc1d688ab
  40c109:	fild   WORD PTR ds:0xe38c4569
  40c10f:	and    DWORD PTR [bx+si-0x1e93],0xffffff9a
  40c115:	inc    ecx
  40c116:	bound  edx,QWORD PTR [esi]
  40c118:	add    dh,BYTE PTR [eax+0x8]
  40c11b:	jle    0x40c134
  40c11d:	sub    eax,0xf3c85c55
  40c122:	jge    0x40c0fe
  40c124:	ds xor ecx,0x48
  40c128:	push   esp
  40c129:	rcr    dh,1
  40c12b:	out    dx,al
  40c12c:	int3   
  40c12d:	and    esp,ebx
  40c12f:	out    dx,eax
  40c130:	mov    ecx,0x1c6a8d3e
  40c135:	dec    ebp
  40c136:	dec    esi
  40c137:	push   0x523f1e87
  40c13c:	sub    edi,eax
  40c13e:	nop
  40c13f:	cmp    DWORD PTR [esi-0x35319d2d],edi
  40c145:	jo     0x40c117
  40c147:	sub    DWORD PTR [eax+eiz*2+0x21],ebp
  40c14b:	add    ebx,DWORD PTR [ecx+0x457219e2]
  40c151:	pop    esi
  40c152:	das    
  40c153:	sar    DWORD PTR [edi-0x29],1
  40c156:	into   
  40c157:	mov    esp,0x38b31017
  40c15c:	sbb    dl,BYTE PTR [ebx+ecx*8-0x6f28d074]
  40c163:	in     al,0x9b
  40c165:	std    
  40c166:	jne    0x40c154
  40c168:	dec    eax
  40c169:	or     dl,BYTE PTR [esi-0x57]
  40c16c:	or     edi,DWORD PTR [edi+0x4cfad4a1]
  40c172:	sbb    DWORD PTR [ecx],esi
  40c174:	pushf  
  40c175:	cli    
  40c176:	psrlq  mm5,QWORD PTR [ecx-0x2f]
  40c17a:	jae    0x40c183
  40c17c:	sbb    al,0x91
  40c17e:	adc    DWORD PTR [ebp-0x14],esi
  40c181:	shl    DWORD PTR ds:0x19fc6aeb,cl
  40c187:	dec    esi
  40c188:	jge    0x40c190
  40c18a:	inc    esp
  40c18b:	inc    ebx
  40c18c:	mov    eax,0x31c47e4f
  40c191:	pop    ecx
  40c192:	mov    bh,0x7c
  40c194:	(bad)  
  40c195:	and    esi,DWORD PTR [eax]
  40c197:	adc    cl,dh
  40c199:	nop
  40c19a:	rcr    DWORD PTR [ebx],1
  40c19c:	jecxz  0x40c120
  40c19e:	jecxz  0x40c1b8
  40c1a0:	pusha  
  40c1a1:	addr16 push ebx
  40c1a4:	lahf   
  40c1a5:	sbb    eax,0x45053368
  40c1aa:	sti    
  40c1ab:	jmp    0x97d:0x65ff35eb
  40c1b2:	ror    BYTE PTR [ebx],1
  40c1b4:	sbb    DWORD PTR [edi+ebx*8],edi
  40c1b7:	mov    ah,0xb
  40c1b9:	repz xchg ebx,eax
  40c1bb:	shl    bh,0x3e
  40c1be:	xor    edi,DWORD PTR [ebx+0x2c]
  40c1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c2:	xchg   edx,eax
  40c1c3:	lods   eax,DWORD PTR ds:[esi]
  40c1c4:	sub    al,0x8b
  40c1c6:	mov    dh,BYTE PTR [ecx+0x74]
  40c1c9:	je     0x40c199
  40c1cb:	fldcw  WORD PTR [esi]
  40c1cd:	sbb    al,0x37
  40c1cf:	loopne 0x40c1d5
  40c1d1:	dec    edx
  40c1d2:	xlat   BYTE PTR ds:[ebx]
  40c1d3:	in     eax,0x9a
  40c1d5:	xor    DWORD PTR [eax+0x76ae785c],0x379d0344
  40c1df:	add    bl,0x1
  40c1e2:	jl     0x40c1a5
  40c1e4:	inc    ebp
  40c1e5:	xchg   edi,eax
  40c1e6:	(bad)  
  40c1e7:	xor    eax,0xf7c09afc
  40c1ec:	fistp  QWORD PTR [eax+0x17767ab9]
  40c1f2:	push   edi
  40c1f3:	test   al,0x26
  40c1f5:	dec    ebp
  40c1f6:	mov    edi,0x516f18bd
  40c1fb:	sub    ah,BYTE PTR [edx-0x11799b1]
  40c201:	push   ss
  40c202:	and    esi,edx
  40c204:	jb     0x40c1e7
  40c206:	mov    ds:0x275f934b,eax
  40c20b:	sub    eax,0xb5f23d24
  40c210:	pop    es
  40c211:	loope  0x40c1bb
  40c213:	test   BYTE PTR [esi+0x510ee678],0x30
  40c21a:	sub    BYTE PTR [eax-0x67],cl
  40c21d:	add    dl,dh
  40c21f:	daa    
  40c220:	push   ebp
  40c221:	stc    
  40c222:	popa   
  40c223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c224:	mov    cl,0x7b
  40c226:	mov    ds:0xd400a0b2,eax
  40c22b:	repnz mov ebx,0xb6e51ed
  40c231:	lea    esp,[esi+0x3d8f06d5]
  40c237:	fistp  QWORD PTR [ecx+ebx*1+0x5f]
  40c23b:	rol    BYTE PTR [edx],0x6f
  40c23e:	inc    ebp
  40c23f:	mov    esi,0xd0f94df7
  40c244:	push   esp
  40c245:	jnp    0x40c28b
  40c247:	jne    0x40c24e
  40c249:	in     al,0x1
  40c24b:	shr    ebp,1
  40c24d:	xor    eax,esi
  40c24f:	aaa    
  40c250:	in     eax,0x38
  40c252:	dec    ebp
  40c253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c254:	mov    ecx,DWORD PTR [esi]
  40c256:	ret    0xb780
  40c259:	mov    ah,0x18
  40c25b:	sbb    al,0xe6
  40c25d:	pop    ss
  40c25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25f:	mov    ds:0xf419df13,eax
  40c264:	or     eax,0x90cf405f
  40c269:	or     al,0xcc
  40c26b:	xor    edx,esi
  40c26d:	scas   eax,DWORD PTR es:[edi]
  40c26e:	pop    ds
  40c26f:	out    0x24,eax
  40c271:	mov    bh,0xc3
  40c273:	js     0x40c2c5
  40c275:	loopne 0x40c236
  40c277:	jge    0x40c2d1
  40c279:	dec    edi
  40c27a:	push   es
  40c27b:	mov    eax,ds:0x93b990e6
  40c280:	call   0xdd2:0x790ed62e
  40c287:	and    bh,ch
  40c289:	je     0x40c283
  40c28b:	mov    ecx,0x598e756d
  40c290:	add    eax,0x76aee0a0
  40c295:	in     al,dx
  40c296:	adc    eax,0x5f8db3dd
  40c29b:	xor    DWORD PTR es:[eax+0x57cb461a],0x25
  40c2a3:	aas    
  40c2a4:	popf   
  40c2a5:	cmp    bh,BYTE PTR [edx+ecx*8-0x479410fd]
  40c2ac:	aam    0xa9
  40c2ae:	push   eax
  40c2af:	addr16 pop ds
  40c2b1:	sti    
  40c2b2:	lods   al,BYTE PTR ds:[esi]
  40c2b3:	out    dx,al
  40c2b4:	push   esi
  40c2b5:	jle    0x40c29d
  40c2b7:	rcl    BYTE PTR [edx+0x625f5a8f],0x3c
  40c2be:	mov    ebx,0x9c85db17
  40c2c3:	fstp   st(5)
  40c2c5:	sbb    BYTE PTR [eax-0x3668d9e2],bl
  40c2cb:	cli    
  40c2cc:	mov    ebp,0x18e79da8
  40c2d1:	sub    ah,dh
  40c2d3:	addr16 push edx
  40c2d5:	fbld   TBYTE PTR [ebx+eiz*2-0x18]
  40c2d9:	xor    ebx,ecx
  40c2db:	mov    ebp,DWORD PTR [edx]
  40c2dd:	mov    dh,0xf0
  40c2df:	fsubr  st,st(4)
  40c2e1:	mov    ds:0xe73ee325,eax
  40c2e6:	js     0x40c314
  40c2e8:	sbb    al,0xe5
  40c2ea:	xchg   DWORD PTR [ebp-0x8],eax
  40c2ed:	ror    BYTE PTR [ebx-0x52],0x52
  40c2f1:	clc    
  40c2f2:	nop
  40c2f3:	imul   edx,DWORD PTR [esi],0x30e92373
  40c2f9:	pop    ebx
  40c2fa:	mov    bh,0xc7
  40c2fc:	aad    0x98
  40c2fe:	pop    ebp
  40c2ff:	add    edx,DWORD PTR [edx+0x6bc99f3a]
  40c305:	cmp    BYTE PTR [edi+ecx*8-0x51],bh
  40c309:	std    
  40c30a:	retf   
  40c30b:	pop    esi
  40c30c:	xor    eax,0xf0dc8940
  40c311:	jg     0x40c370
  40c313:	mov    dl,0xb0
  40c315:	aam    0x4d
  40c317:	jmp    0x8d25:0xd676230a
  40c31e:	adc    cl,BYTE PTR [ecx]
  40c320:	pusha  
  40c321:	sub    dl,al
  40c323:	test   BYTE PTR [edx+0x3c],bl
  40c326:	cli    
  40c327:	ret    
  40c328:	inc    edi
  40c329:	fs jbe 0x40c3a1
  40c32c:	xor    bh,dh
  40c32e:	(bad)  
  40c32f:	daa    
  40c330:	mov    ch,0x12
  40c332:	jle    0x40c2f7
  40c334:	xor    DWORD PTR [edx-0x69],0xb8175741
  40c33b:	sahf   
  40c33c:	and    al,0xc5
  40c33e:	popf   
  40c33f:	dec    esp
  40c340:	bound  ebp,QWORD PTR [ecx+0x14389d88]
  40c346:	fistp  DWORD PTR [ebx]
  40c348:	das    
  40c349:	pop    esp
  40c34a:	sbb    dh,BYTE PTR [ebx+esi*1-0x682f94c7]
  40c351:	dec    esp
  40c352:	dec    bl
  40c354:	mov    esp,0xccb7d881
  40c359:	mov    ecx,0x3de99c1d
  40c35e:	pop    edi
  40c35f:	jmp    0x713cfc9b
  40c364:	js     0x40c36b
  40c366:	push   ds
  40c367:	retf   0xc7a2
  40c36a:	inc    ecx
  40c36b:	mov    ch,0x49
  40c36d:	out    dx,al
  40c36e:	adc    ch,ch
  40c370:	xor    bl,BYTE PTR [edx]
  40c372:	nop
  40c373:	cmp    al,BYTE PTR [eax+0x21f4d2fe]
  40c379:	jo     0x40c36f
  40c37b:	(bad)  
  40c37c:	xlat   BYTE PTR ds:[ebx]
  40c37d:	je     0x40c3b6
  40c37f:	xor    DWORD PTR [eax],ebx
  40c381:	ins    BYTE PTR es:[edi],dx
  40c382:	ds call 0x6aa3:0x8a4ceea1
  40c38a:	push   ss
  40c38b:	and    eax,0xd47db8e7
  40c390:	pop    eax
  40c391:	push   esi
  40c392:	ins    DWORD PTR es:[edi],dx
  40c393:	mov    bl,0x2e
  40c395:	dec    ebp
  40c396:	cs repz sbb eax,0xfae547b8
  40c39d:	jns    0x40c320
  40c39f:	jg     0x40c3ee
  40c3a1:	inc    esi
  40c3a2:	lods   al,BYTE PTR ds:[esi]
  40c3a3:	int3   
  40c3a4:	lods   eax,DWORD PTR ds:[esi]
  40c3a5:	lahf   
  40c3a6:	aas    
  40c3a7:	cmp    bh,bh
  40c3a9:	gs inc ebp
  40c3ab:	xor    BYTE PTR [edx+0x28ce9ac2],bh
  40c3b1:	mov    DWORD PTR [esi+0x65],eax
  40c3b4:	dec    edx
  40c3b5:	test   BYTE PTR [edx],bl
  40c3b7:	xor    al,0xfe
  40c3b9:	inc    ebx
  40c3ba:	inc    esp
  40c3bb:	fimul  WORD PTR [edi-0x13]
  40c3be:	and    al,0x49
  40c3c0:	cld    
  40c3c1:	es jp  0x40c3f3
  40c3c4:	cmp    al,bl
  40c3c6:	dec    esi
  40c3c7:	ins    BYTE PTR es:[edi],dx
  40c3c8:	mov    gs,WORD PTR [esi-0x62]
  40c3cb:	daa    
  40c3cc:	outs   dx,BYTE PTR ds:[esi]
  40c3cd:	in     al,dx
  40c3ce:	sbb    DWORD PTR [edx+0x646dfa7b],0xffffff83
  40c3d5:	pop    es
  40c3d6:	fmul   QWORD PTR [ecx]
  40c3d8:	or     edi,edi
  40c3da:	push   ecx
  40c3db:	jo     0x40c39f
  40c3dd:	test   eax,0x88bd344
  40c3e2:	xchg   DWORD PTR [esi],ecx
  40c3e4:	add    cl,BYTE PTR [eax]
  40c3e6:	sbb    bl,BYTE PTR [esi+eiz*2+0x17]
  40c3ea:	jle    0x40c424
  40c3ec:	lds    ebx,FWORD PTR [edi+ebx*1-0x76]
  40c3f0:	mov    al,ds:0xc8cb64b1
  40c3f5:	push   cs
  40c3f6:	and    BYTE PTR [eax+ebx*2-0x85990d6],dh
  40c3fd:	fcomp  DWORD PTR [ecx+ecx*2+0x5f]
  40c401:	xchg   ebp,eax
  40c402:	mov    ds:0x2895a40c,eax
  40c407:	cmp    BYTE PTR [ecx+0x51fab48f],0xda
  40c40e:	jno    0x40c440
  40c410:	or     DWORD PTR [edi-0x61],ebp
  40c413:	fwait
  40c414:	jbe    0x40c421
  40c416:	ss loop 0x40c3c1
  40c419:	mov    esi,?
  40c41b:	mov    ebp,0x41ecc607
  40c420:	shr    BYTE PTR [eax-0x6f439b4d],0xfe
  40c427:	fcom   DWORD PTR [edx+0x5b932338]
  40c42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42e:	inc    edx
  40c42f:	fadd   QWORD PTR [ebp+0x5bdc529d]
  40c435:	in     al,dx
  40c436:	jg     0x40c439
  40c438:	or     ebx,DWORD PTR [ebx]
  40c43a:	dec    edx
  40c43b:	test   DWORD PTR [eax],eax
  40c43d:	nop
  40c43e:	fsubr  QWORD PTR [ebp+0x5610a1ec]
  40c444:	inc    ecx
  40c445:	xchg   ebx,eax
  40c446:	ror    BYTE PTR [ecx+0x4c6b4311],cl
  40c44c:	in     eax,dx
  40c44d:	jae    0x40c45d
  40c44f:	mov    edx,0x34b7c12e
  40c454:	inc    ebp
  40c455:	arpl   WORD PTR [eax+0x1f],bx
  40c458:	jnp    0x40c4a3
  40c45a:	fwait
  40c45b:	pop    es
  40c45c:	inc    ebp
  40c45d:	(bad)  
  40c45e:	pushf  
  40c45f:	xchg   BYTE PTR [esi],bh
  40c461:	out    0x2f,al
  40c463:	cld    
  40c464:	shl    BYTE PTR [ebx+0x8],cl
  40c467:	pop    ebx
  40c468:	sub    al,0xd8
  40c46a:	sahf   
  40c46b:	ss in  eax,0x3c
  40c46e:	and    DWORD PTR [ecx+ebp*2],esi
  40c471:	ins    DWORD PTR es:[edi],dx
  40c472:	in     eax,dx
  40c473:	sar    bh,1
  40c475:	fsub   QWORD PTR [ecx]
  40c477:	jbe    0x40c407
  40c479:	adc    DWORD PTR [edi+0x57e6d4f4],ebx
  40c47f:	push   0xa368ebc1
  40c484:	daa    
  40c485:	mov    edi,0x2d7409b8
  40c48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48b:	test   eax,0x863ae836
  40c490:	cmp    DWORD PTR [edi+0x51],edi
  40c493:	gs fwait
  40c495:	adc    DWORD PTR [ecx-0x27],0x135cf14b
  40c49c:	das    
  40c49d:	add    ah,ch
  40c49f:	dec    esp
  40c4a0:	adc    al,0x2d
  40c4a2:	xor    al,0x19
  40c4a4:	or     BYTE PTR es:[eax-0xf],cl
  40c4a8:	inc    edx
  40c4a9:	pop    ss
  40c4aa:	out    dx,al
  40c4ab:	add    eax,0x41ee5d56
  40c4b0:	sub    al,0xb9
  40c4b2:	(bad)  
  40c4b3:	arpl   WORD PTR [ecx+0x588cbe5f],si
  40c4b9:	mov    ebp,0xfd773305
  40c4be:	push   cs
  40c4bf:	add    ah,dl
  40c4c1:	cmp    al,BYTE PTR [ebp-0x6d468eec]
  40c4c7:	push   edi
  40c4c8:	repnz sub DWORD PTR [esi-0x4fdc562a],esi
  40c4cf:	ja     0x40c516
  40c4d1:	sub    eax,0x9ee80c52
  40c4d6:	in     al,0x8c
  40c4d8:	sub    dl,dl
  40c4da:	cdq    
  40c4db:	mov    esi,0x616d6c86
  40c4e0:	(bad)  
  40c4e1:	xchg   edx,eax
  40c4e2:	inc    esp
  40c4e3:	loope  0x40c4a9
  40c4e5:	xchg   edx,eax
  40c4e6:	mov    al,0x91
  40c4e8:	xor    bh,BYTE PTR [edx+0x1a]
  40c4eb:	jbe    0x40c472
  40c4ed:	(bad)  
  40c4ef:	sti    
  40c4f0:	lods   al,BYTE PTR ds:[esi]
  40c4f1:	test   al,0xc0
  40c4f3:	(bad)  
  40c4f4:	jle    0x40c560
  40c4f6:	mov    WORD PTR [ebx],fs
  40c4f8:	inc    esi
  40c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4fa:	ins    BYTE PTR es:[edi],dx
  40c4fb:	mov    ebx,0xb17a495a
  40c500:	adc    ecx,DWORD PTR [esi-0x76]
  40c503:	adc    esp,DWORD PTR [edi]
  40c505:	stos   DWORD PTR es:[edi],eax
  40c506:	push   ecx
  40c507:	popa   
  40c508:	out    0x81,al
  40c50a:	add    cl,BYTE PTR [edx]
  40c50c:	xchg   ebp,eax
  40c50d:	mov    ebp,0x10df81d5
  40c512:	ret    0x2322
  40c515:	xchg   BYTE PTR [ecx+0x72],bl
  40c518:	or     al,0x15
  40c51a:	mov    edi,0x187af6dc
  40c51f:	rcl    ebx,1
  40c521:	add    eax,0x6bcc9529
  40c526:	pop    ds
  40c527:	jo     0x40c56c
  40c529:	add    BYTE PTR [edx],bh
  40c52b:	xor    al,0xcc
  40c52d:	sbb    ah,BYTE PTR [esi-0x50]
  40c530:	xchg   esi,eax
  40c531:	jl     0x40c591
  40c533:	lahf   
  40c534:	sub    BYTE PTR [ebp-0x19],0xdf
  40c538:	mov    ch,0xbb
  40c53a:	cld    
  40c53b:	jbe    0x40c551
  40c53d:	cli    
  40c53e:	mov    WORD PTR [edi],ss
  40c540:	fcmovne st,st(0)
  40c542:	clc    
  40c543:	jmp    0x86b62076
  40c548:	mov    cl,0xea
  40c54a:	add    BYTE PTR [ecx],bl
  40c54c:	clc    
  40c54d:	sub    eax,0xaf34b7f0
  40c552:	add    bl,0x2f
  40c555:	add    al,0x1a
  40c557:	icebp  
  40c558:	cwde   
  40c559:	aaa    
  40c55a:	sub    edx,DWORD PTR [ecx]
  40c55c:	xor    eax,0xcf2d8b0e
  40c561:	fs ja  0x40c5a9
  40c564:	mov    bl,0xc4
  40c566:	mov    al,0xd2
  40c568:	pop    ecx
  40c569:	sbb    al,0xce
  40c56c:	xor    bl,BYTE PTR [ebx+0x702985a6]
  40c572:	fsubrp st(2),st
  40c574:	adc    dh,BYTE PTR [esi+0x53335720]
  40c57a:	mov    edx,0x6932acba
  40c57f:	shl    BYTE PTR [edx+0x3b],0xe1
  40c583:	shl    BYTE PTR [esi],cl
  40c585:	scas   al,BYTE PTR es:[edi]
  40c586:	retf   0x3465
  40c589:	lea    edi,[bp+di+0x68]
  40c58d:	(bad)  
  40c58e:	fwait
  40c58f:	scas   eax,DWORD PTR es:[edi]
  40c590:	(bad)  
  40c592:	lods   eax,DWORD PTR ds:[esi]
  40c593:	jmp    0xaa4f:0x1b2581bd
  40c59a:	sbb    BYTE PTR gs:[ebx],0x2
  40c59e:	sbb    eax,0x18b3783e
  40c5a3:	or     ebx,DWORD PTR [ecx-0x3a]
  40c5a6:	into   
  40c5a7:	in     al,0xcf
  40c5a9:	push   0xffffffdc
  40c5ab:	jmp    0xf34c:0xeba6e460
  40c5b2:	pop    edi
  40c5b3:	jg     0x40c58b
  40c5b5:	clc    
  40c5b6:	dec    ebp
  40c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b8:	jmp    0xa318:0x833b61f2
  40c5bf:	mov    BYTE PTR [edi-0xf],bh
  40c5c2:	mov    eax,0x46f19813
  40c5c7:	mov    dh,BYTE PTR [eax-0xa9b8eb]
  40c5cd:	pop    es
  40c5ce:	dec    ebp
  40c5cf:	call   0xb0dacc2c
  40c5d4:	cwde   
  40c5d5:	addr16 pop edx
  40c5d7:	ror    BYTE PTR [ecx-0x721d69d7],1
  40c5dd:	addr16 xchg esi,eax
  40c5df:	fwait
  40c5e0:	push   ecx
  40c5e1:	inc    edx
  40c5e2:	aad    0x6a
  40c5e4:	inc    ecx
  40c5e5:	sbb    eax,0x74b494d
  40c5ea:	jg     0x40c5fc
  40c5ec:	into   
  40c5ed:	cld    
  40c5ee:	ret    
  40c5ef:	fadd   DWORD PTR [edx]
  40c5f1:	stos   DWORD PTR es:[edi],eax
  40c5f2:	sub    DWORD PTR [eax-0x22],0xffffff9c
  40c5f6:	jle    0x40c57a
  40c5f8:	sbb    cl,cl
  40c5fa:	or     eax,0xf626c5d6
  40c5ff:	mov    ebp,0x1192e955
  40c604:	inc    edx
  40c605:	or     bl,BYTE PTR [ebx+0xe28adae]
  40c60b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c60c:	fidivr WORD PTR [esi]
  40c60e:	out    dx,al
  40c60f:	pop    edi
  40c610:	aaa    
  40c611:	pop    eax
  40c612:	jne    0x40c59c
  40c614:	xchg   BYTE PTR [edi-0x4e],bl
  40c617:	mov    al,ds:0x8f7f580a
  40c61c:	in     al,dx
  40c61d:	cli    
  40c61e:	inc    ecx
  40c61f:	add    esp,eax
  40c621:	cmp    BYTE PTR [esp+esi*2-0x4],ah
  40c625:	out    0xda,eax
  40c627:	adc    eax,0xac4a121c
  40c62c:	(bad)  
  40c62d:	retf   
  40c62e:	jge    0x40c675
  40c630:	fwait
  40c631:	leave  
  40c632:	inc    edx
  40c633:	loop   0x40c686
  40c635:	or     cl,BYTE PTR [edi-0x1b4c0426]
  40c63b:	test   eax,0xd5c99f8e
  40c640:	out    dx,al
  40c641:	(bad)  cs:[ebp+0x6c]
  40c645:	jp     0x40c5e7
  40c647:	cmp    al,0x5e
  40c649:	popa   
  40c64a:	sbb    al,0x21
  40c64c:	add    DWORD PTR [esi],ebx
  40c64e:	add    al,0x2d
  40c650:	jle    0x40c6b6
  40c652:	or     eax,0x6c23d1ff
  40c657:	cmc    
  40c658:	lock cmp BYTE PTR [eax],dh
  40c65b:	mov    edi,DWORD PTR cs:[ebx]
  40c65e:	pusha  
  40c65f:	xchg   bp,ax
  40c661:	pop    es
  40c662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c663:	pop    ebx
  40c664:	pushf  
  40c665:	and    DWORD PTR [edx],ebp
  40c667:	imul   ebp,DWORD PTR [eax-0x1a1a7460],0xcd00f856
  40c671:	(bad)  
  40c672:	in     al,dx
  40c673:	clc    
  40c674:	mov    eax,0x14b66cc4
  40c679:	ror    bh,0xc5
  40c67c:	mov    bh,ch
  40c67e:	xor    BYTE PTR [ebx+0x19ccf2e],ch
  40c684:	repnz mov gs,WORD PTR [eax-0x26b2477a]
  40c68b:	les    esi,FWORD PTR [esi]
  40c68d:	jae    0x40c6e5
  40c68f:	aad    0x9
  40c691:	sub    BYTE PTR [ecx-0x68dccf0b],0x3
  40c698:	or     BYTE PTR [edx],ch
  40c69a:	push   0xffffff82
  40c69c:	mov    cl,0x1e
  40c69e:	dec    edx
  40c69f:	xor    al,BYTE PTR [ecx-0x47d3f1db]
  40c6a5:	mov    ebp,0x5716bcd2
  40c6aa:	sbb    al,0xdc
  40c6ac:	adc    edx,DWORD PTR [ecx-0x12d72907]
  40c6b2:	add    eax,0x64f07b62
  40c6b7:	mov    esp,0xb29886b4
  40c6bc:	mov    ds:0x38975af9,eax
  40c6c1:	dec    edx
  40c6c2:	push   ebx
  40c6c3:	aad    0x6f
  40c6c5:	cmp    eax,DWORD PTR [esi+0x67a19895]
  40c6cb:	jmp    0x3bde:0x41e1ff0b
  40c6d2:	cmp    eax,0xb1cfc1f5
  40c6d7:	add    edi,ebx
  40c6d9:	or     cl,dh
  40c6db:	fwait
  40c6dc:	cdq    
  40c6dd:	jnp    0x40c6cc
  40c6df:	hlt    
  40c6e0:	es arpl di,si
  40c6e3:	sub    eax,0x34ec5d46
  40c6e8:	dec    edi
  40c6e9:	fmul   st,st(5)
  40c6eb:	pop    edi
  40c6ec:	test   eax,0x8b7012a
  40c6f1:	pop    ecx
  40c6f2:	rol    BYTE PTR ds:0x56588baa,cl
  40c6f8:	gs jnp 0x40c6ca
  40c6fb:	ret    0x368e
  40c6fe:	scas   eax,DWORD PTR es:[edi]
  40c6ff:	sbb    BYTE PTR [ebx+0x517fb77b],0x9a
  40c706:	mov    dh,bl
  40c708:	div    DWORD PTR [esi-0x7d3fea2f]
  40c70e:	mov    ebp,0x6781a685
  40c713:	cmp    eax,0xdaba20ca
  40c718:	stos   BYTE PTR es:[edi],al
  40c719:	in     al,0x4e
  40c71b:	ss mov cl,0x12
  40c71e:	mov    bh,0x66
  40c720:	sub    eax,0x7c8cf618
  40c725:	test   eax,0x1b6644f9
  40c72a:	add    edx,DWORD PTR [edx]
  40c72c:	sbb    edi,DWORD PTR [edx-0x65]
  40c72f:	bt     DWORD PTR [ebx+0x55],esi
  40c733:	(bad)  
  40c734:	push   eax
  40c735:	les    esp,FWORD PTR [ebp+0x22]
  40c738:	xor    BYTE PTR [ecx+eax*8-0x4e7b89db],ah
  40c73f:	push   ebx
  40c740:	lods   al,BYTE PTR ds:[esi]
  40c741:	das    
  40c742:	into   
  40c743:	sbb    eax,0x125c483a
  40c748:	int    0x74
  40c74a:	lea    edx,[edx]
  40c74c:	and    ah,dl
  40c74e:	mov    esp,0xc3cbf125
  40c753:	retf   0x9719
  40c756:	ds xchg ebx,esp
  40c759:	jnp    0x40c6f7
  40c75b:	outs   dx,DWORD PTR ds:[esi]
  40c75c:	cmp    al,0xec
  40c75e:	adc    ebx,DWORD PTR [edx-0x5f4a6f7]
  40c764:	stos   BYTE PTR es:[edi],al
  40c765:	gs mov ebx,0x848d01b4
  40c76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c76c:	push   esi
  40c76d:	dec    ebp
  40c76e:	adc    ebx,DWORD PTR [ebp+eiz*4+0x77396813]
  40c775:	ja     0x40c7c0
  40c777:	je     0x40c7d1
  40c779:	sub    dh,BYTE PTR [edi]
  40c77b:	xchg   DWORD PTR [esi-0x4024303],ecx
  40c781:	inc    edx
  40c782:	gs push esi
  40c784:	jmp    0x700f:0xda05dd31
  40c78b:	sub    bl,dl
  40c78d:	dec    ebp
  40c78e:	xor    eax,0x9cce2202
  40c793:	add    eax,0xddd7bf06
  40c798:	mov    ecx,0xc13b2ae8
  40c79d:	jecxz  0x40c72b
  40c79f:	or     eax,0x600f5745
  40c7a4:	adc    eax,0xcf4ab9e
  40c7a9:	jl     0x40c825
  40c7ab:	inc    ebp
  40c7ac:	cmp    cl,BYTE PTR [eax]
  40c7ae:	aam    0xeb
  40c7b0:	outs   dx,BYTE PTR ds:[esi]
  40c7b1:	popa   
  40c7b2:	pop    ecx
  40c7b3:	aas    
  40c7b4:	jmp    0xf280:0x2bc608b2
  40c7bb:	repz cmp al,0x57
  40c7be:	sti    
  40c7bf:	outs   dx,DWORD PTR ds:[esi]
  40c7c0:	repz xchg esp,eax
  40c7c2:	aaa    
  40c7c3:	cli    
  40c7c4:	ins    DWORD PTR es:[edi],dx
  40c7c5:	lods   al,BYTE PTR ds:[esi]
  40c7c6:	retf   0x4975
  40c7c9:	cwde   
  40c7ca:	xadd   dh,ah
  40c7cd:	xor    DWORD PTR ds:0xa4e39f65,edx
  40c7d3:	pop    DWORD PTR [ebp+0x621faadd]
  40c7d9:	dec    ecx
  40c7da:	sbb    al,0xea
  40c7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7dd:	out    0xc7,al
  40c7df:	sbb    eax,0x61f08815
  40c7e4:	sub    BYTE PTR [ecx+ebx*2-0x579db8c4],dl
  40c7eb:	scas   eax,DWORD PTR es:[edi]
  40c7ec:	int3   
  40c7ed:	retf   0xb7d4
  40c7f0:	jg     0x40c856
  40c7f2:	imul   ebx,ecx,0xe284c31d
  40c7f8:	sbb    DWORD PTR [ebx+esi*4+0x67],esi
  40c7fc:	(bad)  
  40c7fe:	test   eax,0x29c3d47a
  40c803:	lahf   
  40c804:	test   BYTE PTR [edx-0x34],dh
  40c807:	jge    0x40c7d4
  40c809:	adc    dh,BYTE PTR [edi]
  40c80b:	in     eax,0xf3
  40c80d:	or     BYTE PTR [eax+0x796dd8fc],dh
  40c813:	test   eax,eax
  40c815:	mov    eax,ds:0x7f00f171
  40c81a:	fstp   TBYTE PTR [edx+0x3]
  40c81d:	add    eax,0x291cd96f
  40c822:	jecxz  0x40c881
  40c824:	out    dx,al
  40c825:	mov    cl,0x41
  40c827:	push   eax
  40c828:	mov    edi,0xd9f740d8
  40c82d:	daa    
  40c82e:	or     eax,0x4448ec1b
  40c833:	mov    DWORD PTR [edx-0x5029ed9b],ebp
  40c839:	adc    al,0x28
  40c83b:	push   edi
  40c83c:	sub    ah,dh
  40c83e:	push   ebp
  40c83f:	xchg   BYTE PTR [edi],ah
  40c841:	inc    ebx
  40c842:	fwait
  40c843:	retf   0xdd0c
  40c846:	fldenv [ecx]
  40c848:	mov    edx,0x5cc69d4f
  40c84d:	outs   dx,DWORD PTR ds:[esi]
  40c84e:	pop    edx
  40c84f:	shl    esp,cl
  40c851:	(bad)  
  40c852:	cs (bad) 
  40c854:	repnz or cl,bh
  40c857:	bnd je 0x40c831
  40c85a:	push   ecx
  40c85b:	idiv   BYTE PTR ss:[esp+edi*1+0x694cf82c]
  40c863:	call   0xf06cb966
  40c868:	sub    ch,BYTE PTR [edx-0x22]
  40c86b:	mov    dh,0x59
  40c86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c86e:	int    0x5
  40c870:	lods   al,BYTE PTR ds:[esi]
  40c871:	xchg   edi,eax
  40c872:	push   es
  40c873:	dec    eax
  40c874:	(bad)  [edi+edx*8]
  40c877:	fnsave [eax+0x2b]
  40c87a:	loope  0x40c83d
  40c87c:	pop    edx
  40c87d:	pop    esp
  40c87e:	and    DWORD PTR [esp+ebp*4+0x5f],ebp
  40c882:	mov    ds:0x53f16070,al
  40c887:	pusha  
  40c888:	mov    dl,0xdf
  40c88a:	adc    al,0xc2
  40c88c:	out    0x7e,eax
  40c88e:	sbb    al,0xff
  40c890:	popf   
  40c891:	push   ebx
  40c892:	call   0xac04:0x5a924931
  40c899:	push   eax
  40c89a:	popa   
  40c89b:	out    0xfb,eax
  40c89d:	adc    al,0xf3
  40c89f:	gs push ss
  40c8a1:	fcomp  QWORD PTR [edx+0x53]
  40c8a4:	jmp    0x28a90f81
  40c8a9:	gs test eax,0x65aa1f25
  40c8af:	xchg   edx,eax
  40c8b0:	dec    edx
  40c8b1:	jle    0x40c8b4
  40c8b3:	(bad)  
  40c8b4:	stos   DWORD PTR es:[edi],eax
  40c8b5:	cwde   
  40c8b6:	sub    cl,BYTE PTR [ecx+0x59]
  40c8b9:	retf   
  40c8ba:	sahf   
  40c8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8bc:	in     al,dx
  40c8bd:	das    
  40c8be:	(bad)  
  40c8bf:	mov    esi,0xd0109a14
  40c8c4:	sub    al,0x7c
  40c8c6:	test   eax,0x9740796b
  40c8cb:	and    al,0xaa
  40c8cd:	lods   eax,DWORD PTR ds:[esi]
  40c8ce:	xchg   DWORD PTR [eax-0x1],esi
  40c8d1:	or     al,0x86
  40c8d3:	popf   
  40c8d4:	stc    
  40c8d5:	mov    bh,0xd0
  40c8d7:	push   ds
  40c8d8:	into   
  40c8d9:	jmp    0x5b27:0x9103033b
  40c8e0:	(bad)  
  40c8e2:	lods   eax,DWORD PTR ds:[esi]
  40c8e3:	repnz add ecx,ecx
  40c8e6:	push   edx
  40c8e7:	mov    dh,0xae
  40c8e9:	push   es
  40c8ea:	cmp    esi,eax
  40c8ec:	cmp    eax,0xfac07b5e
  40c8f1:	test   eax,0x9110c02c
  40c8f6:	xchg   edx,eax
  40c8f7:	fisttp DWORD PTR [ebx]
  40c8f9:	xchg   BYTE PTR [ebp+0x56],al
  40c8fc:	mov    dh,0xc8
  40c8fe:	call   0x5715:0x9977388f
  40c905:	rcl    DWORD PTR ds:0xf2b4fe52,0x6f
  40c90c:	hlt    
  40c90d:	bound  esi,QWORD PTR [ecx]
  40c90f:	sub    eax,0x848cade9
  40c914:	sbb    ch,0xf7
  40c917:	mov    dl,0xdd
  40c919:	scas   al,BYTE PTR es:[edi]
  40c91a:	push   esp
  40c91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c91d:	in     al,dx
  40c91e:	fadd   DWORD PTR [ecx]
  40c920:	mov    al,ds:0x728e7cb
  40c925:	outs   dx,BYTE PTR ds:[esi]
  40c926:	aam    0x27
  40c928:	cmp    bh,dl
  40c92a:	push   ds
  40c92b:	in     eax,dx
  40c92c:	push   esi
  40c92d:	xchg   ebp,eax
  40c92e:	(bad)  
  40c92f:	or     esi,DWORD PTR [esi+0x5]
  40c932:	xchg   sp,ax
  40c934:	neg    DWORD PTR [ebp+0x28]
  40c937:	lahf   
  40c938:	or     al,0xfd
  40c93a:	add    ecx,DWORD PTR [ecx+0x42a9b7f9]
  40c940:	xchg   esp,eax
  40c941:	fbld   TBYTE PTR [ebx]
  40c943:	rcl    BYTE PTR [ebx-0x13f09c6e],cl
  40c949:	mov    WORD PTR [eax-0x2a],cs
  40c94c:	fmul   DWORD PTR [edx]
  40c94e:	pop    edi
  40c94f:	aas    
  40c950:	stc    
  40c951:	dec    ecx
  40c952:	jmp    0x40c905
  40c954:	cdq    
  40c955:	stos   BYTE PTR es:[edi],al
  40c956:	adc    ecx,ecx
  40c958:	sar    BYTE PTR [ecx],cl
  40c95a:	pop    ds
  40c95b:	inc    ebx
  40c95c:	push   edx
  40c95d:	js     0x40c9b3
  40c95f:	push   eax
  40c960:	outs   dx,DWORD PTR ds:[esi]
  40c961:	dec    ecx
  40c962:	ret    0x1f8e
  40c965:	lds    edi,FWORD PTR ds:0xd7b33e1f
  40c96b:	enter  0x4f2d,0x46
  40c96f:	dec    esi
  40c970:	sbb    ah,BYTE PTR [edi-0x1e9dbee5]
  40c976:	into   
  40c977:	inc    ebp
  40c978:	pop    edi
  40c979:	pushf  
  40c97a:	loope  0x40c981
  40c97c:	(bad)  
  40c97d:	mov    DWORD PTR [eax+0x47],esi
  40c980:	add    edi,esi
  40c982:	dec    edx
  40c983:	and    ecx,DWORD PTR [ecx]
  40c985:	(bad)  
  40c986:	loope  0x40c9d2
  40c988:	pop    esp
  40c989:	es pop ss
  40c98b:	mov    eax,0x30ffa027
  40c990:	sbb    DWORD PTR [ebx],eax
  40c992:	xor    eax,DWORD PTR [ebx+0x5a]
  40c995:	je     0x40c93c
  40c997:	push   0xffffff84
  40c999:	jo     0x40c9ab
  40c99b:	out    0x6c,al
  40c99d:	pushf  
  40c99e:	js     0x40c990
  40c9a0:	outs   dx,BYTE PTR ds:[esi]
  40c9a2:	jno    0x40c9cf
  40c9a4:	dec    edi
  40c9a5:	and    al,0x97
  40c9a7:	xchg   edx,eax
  40c9a8:	stc    
  40c9a9:	pop    edi
  40c9aa:	ja     0x40ca0e
  40c9ac:	inc    ecx
  40c9ad:	pusha  
  40c9ae:	int    0x69
  40c9b0:	(bad)  
  40c9b2:	ins    DWORD PTR es:[edi],dx
  40c9b3:	out    dx,eax
  40c9b4:	pop    ds
  40c9b5:	test   cl,al
  40c9b7:	outs   dx,DWORD PTR ds:[esi]
  40c9b8:	jb     0x40c9ad
  40c9ba:	pop    ds
  40c9bb:	cwde   
  40c9bc:	or     eax,0xc2843fe6
  40c9c1:	adc    DWORD PTR [ebx+ebp*1-0x74f8fb85],ecx
  40c9c8:	xchg   ebx,eax
  40c9c9:	call   DWORD PTR [ebp-0x28ab12f1]
  40c9cf:	(bad)  
  40c9d0:	mov    BYTE PTR [ebp+0x70],ch
  40c9d3:	test   al,0x7d
  40c9d5:	fild   WORD PTR [edx]
  40c9d7:	and    dh,cl
  40c9d9:	jmp    0x40ca57
  40c9db:	sti    
  40c9dc:	jmp    0xcc6f:0x7b37fb40
  40c9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e4:	mov    ebx,0xc0377872
  40c9e9:	xchg   ebp,eax
  40c9ea:	xchg   esp,eax
  40c9eb:	cs fwait
  40c9ed:	sub    BYTE PTR [ebp-0x6cb2821e],al
  40c9f3:	push   ecx
  40c9f4:	int3   
  40c9f5:	push   esi
  40c9f6:	mov    DWORD PTR [edx],eax
  40c9f8:	pop    ebx
  40c9f9:	jmp    0x9176:0xa8f8fb94
  40ca00:	add    DWORD PTR [esi+eiz*1-0x19bb2020],ebp
  40ca07:	sbb    eax,0x52321f24
  40ca0c:	cmp    cl,BYTE PTR [edi-0x4d039b0]
  40ca12:	add    edi,DWORD PTR [ecx+0x39]
  40ca15:	out    0xfa,eax
  40ca17:	pop    ebp
  40ca18:	sub    al,0xa3
  40ca1a:	lds    esp,FWORD PTR [ebp+0x3958ca1a]
  40ca20:	das    
  40ca21:	stc    
  40ca22:	imul   ecx,ecx,0x48862222
  40ca28:	test   BYTE PTR [edx+eax*1+0x432cdff4],bh
  40ca2f:	(bad)  
  40ca30:	sbb    ebp,DWORD PTR [ecx-0x19239f67]
  40ca36:	mov    WORD PTR [ecx+0x2e],?
  40ca39:	xchg   edx,eax
  40ca3a:	jmp    0x40ca87
  40ca3c:	mov    ebx,0x50fcf957
  40ca41:	xchg   esp,eax
  40ca42:	fstp   DWORD PTR [ebx-0x5]
  40ca45:	jmp    0x976f756b
  40ca4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca4b:	mov    esp,0xd7fa41a8
  40ca50:	leave  
  40ca51:	outs   dx,DWORD PTR ds:[esi]
  40ca52:	pop    eax
  40ca53:	je     0x40c9f4
  40ca55:	(bad)  
  40ca56:	(bad)  
  40ca57:	adc    eax,0xcd445917
  40ca5c:	push   cs
  40ca5d:	add    al,0x51
  40ca5f:	lods   eax,DWORD PTR ds:[esi]
  40ca60:	mov    ?,edi
  40ca62:	aaa    
  40ca63:	dec    eax
  40ca64:	stc    
  40ca65:	pusha  
  40ca66:	cmp    esi,ecx
  40ca68:	out    0x7a,eax
  40ca6a:	xchg   edx,eax
  40ca6b:	jge    0x40c9ff
  40ca6d:	das    
  40ca6e:	xor    ecx,eax
  40ca70:	test   eax,0xa25592ef
  40ca75:	scas   eax,DWORD PTR es:[edi]
  40ca76:	ja     0x40ca60
  40ca78:	inc    esi
  40ca79:	add    bl,bh
  40ca7b:	(bad)  [ebx]
  40ca7d:	dec    esp
  40ca7e:	xchg   edx,eax
  40ca7f:	cmp    bh,BYTE PTR [ecx-0x2b]
  40ca82:	xor    DWORD PTR [esp+ebx*8+0x26930305],ebx
  40ca89:	std    
  40ca8a:	js     0x40ca64
  40ca8c:	call   0xdfd9:0x414ebc24
  40ca93:	sbb    edx,DWORD PTR [ecx-0x61]
  40ca96:	or     al,0x61
  40ca98:	push   0x60fb1c64
  40ca9d:	repnz rep ins DWORD PTR es:[edi],dx
  40caa0:	ficomp DWORD PTR [eax+0x72e33e03]
  40caa6:	cmc    
  40caa7:	pop    esi
  40caa8:	out    0xbb,al
  40caaa:	cmp    edx,DWORD PTR [ebp-0x6c]
  40caad:	sub    al,0x8
  40caaf:	xchg   ebp,eax
  40cab0:	inc    ebx
  40cab1:	mov    ebp,fs
  40cab3:	push   0x6
  40cab5:	xchg   esi,eax
  40cab6:	cmp    DWORD PTR [esi+0x30],eax
  40cab9:	fld    st(5)
  40cabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabc:	mov    al,ds:0x464f026e
  40cac1:	inc    ecx
  40cac2:	sbb    esi,DWORD PTR [ecx-0x6412eb7]
  40cac8:	dec    esi
  40cac9:	ror    BYTE PTR [ebp-0x60],0xe4
  40cacd:	pop    esi
  40cace:	xor    BYTE PTR [edi],bh
  40cad0:	mov    ebp,0x2da9ac94
  40cad5:	jle    0x40ca58
  40cad7:	push   esi
  40cad8:	mov    ds:0xf50b54ee,al
  40cadd:	out    dx,al
  40cade:	lock mov edi,0x32b78b36
  40cae4:	arpl   WORD PTR [ecx],bp
  40cae6:	out    dx,eax
  40cae7:	push   ecx
  40cae8:	loopne 0x40cb1c
  40caea:	popf   
  40caeb:	call   0x737:0x1366c71f
  40caf2:	cmp    esp,DWORD PTR [si-0x4cbe]
  40caf7:	adc    al,0x0
  40caf9:	inc    ecx
  40cafa:	test   eax,0xcc1626d2
  40caff:	xchg   ebx,eax
  40cb00:	or     BYTE PTR [eax+ecx*8],al
  40cb03:	sub    al,0x9b
  40cb05:	adc    ebp,esp
  40cb07:	cmp    BYTE PTR [esi+0x1e4f1284],al
  40cb0d:	add    DWORD PTR [edx+0x78],edi
  40cb10:	ss mov dh,0x80
  40cb13:	mov    ds:0x13c3222f,eax
  40cb18:	inc    edx
  40cb19:	cwde   
  40cb1a:	sar    edi,0x98
  40cb1d:	jecxz  0x40cb6d
  40cb1f:	pop    ss
  40cb20:	xor    al,BYTE PTR [ebx+0x552362ee]
  40cb26:	push   cs
  40cb27:	fcomi  st,st(1)
  40cb29:	lods   eax,DWORD PTR ds:[esi]
  40cb2a:	and    DWORD PTR [ebx-0x33],ebx
  40cb2d:	xchg   edi,eax
  40cb2e:	add    ch,bl
  40cb30:	sub    BYTE PTR [ebp*1+0x2b78ca2c],ah
  40cb37:	xchg   edx,eax
  40cb38:	mov    ?,WORD PTR [esi-0x39a55dd2]
  40cb3e:	rcl    DWORD PTR [edi-0x58b9b122],1
  40cb44:	mov    ds:0xd8ba2161,eax
  40cb49:	pop    ebx
  40cb4a:	gs loop 0x40caf3
  40cb4d:	(bad)  
  40cb4f:	or     al,0x50
  40cb51:	push   eax
  40cb52:	pop    eax
  40cb53:	cmc    
  40cb54:	std    
  40cb55:	or     eax,0xf3d1d9f4
  40cb5a:	mov    ch,0xee
  40cb5c:	shr    dl,1
  40cb5e:	dec    ebx
  40cb5f:	dec    DWORD PTR [edi-0x4aa8b2fa]
  40cb65:	xlat   BYTE PTR ds:[ebx]
  40cb66:	(bad)  
  40cb67:	jne    0x40cb1c
  40cb69:	ds out dx,al
  40cb6b:	outs   dx,DWORD PTR ds:[esi]
  40cb6c:	push   cs
  40cb6d:	ins    BYTE PTR es:[edi],dx
  40cb6e:	mov    ebp,0x6cf3f51
  40cb73:	or     al,0x51
  40cb75:	and    ebp,ebx
  40cb77:	ins    DWORD PTR es:[edi],dx
  40cb78:	call   0xf11582d3
  40cb7d:	aaa    
  40cb7e:	jge    0x40cbef
  40cb80:	pop    es
  40cb81:	adc    DWORD PTR [ebx+0x19],eax
  40cb84:	stos   DWORD PTR es:[edi],eax
  40cb85:	mov    gs,esp
  40cb87:	pop    ds
  40cb88:	retf   
  40cb89:	jecxz  0x40cbd3
  40cb8b:	mov    BYTE PTR [esi],al
  40cb8d:	scas   al,BYTE PTR es:[edi]
  40cb8e:	mov    ch,0x62
  40cb90:	mov    bh,0x5
  40cb92:	jmp    0xc07c:0x43d1b404
  40cb99:	fstp   TBYTE PTR [ecx+0x4e167a65]
  40cb9f:	(bad)  
  40cba0:	jg     0x40cc0b
  40cba2:	sbb    al,0xf8
  40cba4:	sbb    BYTE PTR [esi+ebx*4],0xb9
  40cba8:	jb     0x40cc16
  40cbaa:	pop    edx
  40cbab:	cmp    al,0xc7
  40cbad:	mov    al,0x8d
  40cbaf:	cmp    al,0xf0
  40cbb1:	popf   
  40cbb2:	cld    
  40cbb3:	xor    ah,BYTE PTR [edi]
  40cbb5:	cwde   
  40cbb6:	adc    dh,cl
  40cbb8:	aas    
  40cbb9:	(bad)  
  40cbba:	ins    DWORD PTR es:[edi],dx
  40cbbb:	pusha  
  40cbbc:	in     eax,0x50
  40cbbe:	stos   DWORD PTR es:[edi],eax
  40cbbf:	dec    ecx
  40cbc0:	push   ds
  40cbc1:	cmp    ebx,edx
  40cbc3:	jmp    0xc15908be
  40cbc8:	cld    
  40cbc9:	in     eax,0x56
  40cbcb:	mov    ds:0x916e0f4a,eax
  40cbd0:	sar    BYTE PTR [esp+eax*2+0x217892ab],0x8b
  40cbd8:	xor    DWORD PTR [edi+0x3572034b],edi
  40cbde:	mov    WORD PTR [edi-0x32d05a82],gs
  40cbe4:	ror    dh,0x68
  40cbe7:	push   edi
  40cbe8:	daa    
  40cbe9:	clc    
  40cbea:	mov    ss,edi
  40cbec:	jno    0x40cb7f
  40cbee:	pop    eax
  40cbef:	into   
  40cbf0:	into   
  40cbf1:	xor    BYTE PTR [eax-0x39],dl
  40cbf4:	jg     0x40cc71
  40cbf6:	shl    eax,0xdd
  40cbf9:	loopne 0x40cb99
  40cbfb:	cdq    
  40cbfc:	je     0x40cc64
  40cbfe:	mov    cl,0x27
  40cc00:	mov    ch,0xab
  40cc02:	scas   al,BYTE PTR es:[edi]
  40cc03:	ror    eax,1
  40cc05:	cdq    
  40cc06:	push   es
  40cc07:	sbb    eax,0x8c7d54fb
  40cc0c:	adc    BYTE PTR [esi-0x28],ch
  40cc0f:	dec    ebx
  40cc10:	test   esi,edi
  40cc12:	retf   
  40cc13:	jb     0x40cc6e
  40cc15:	cli    
  40cc16:	push   ss
  40cc17:	push   edi
  40cc18:	aas    
  40cc19:	pop    ss
  40cc1a:	sbb    DWORD PTR [esi],ebp
  40cc1c:	popa   
  40cc1d:	ins    BYTE PTR es:[edi],dx
  40cc1e:	repnz in eax,dx
  40cc20:	ds out dx,eax
  40cc22:	ret    0x9ad9
  40cc25:	shl    DWORD PTR [esi+0x72],cl
  40cc28:	retf   
  40cc29:	mov    ds:0x174f3140,eax
  40cc2e:	inc    ecx
  40cc2f:	jge    0x40cc41
  40cc31:	push   ds
  40cc32:	adc    eax,0xccc8601b
  40cc37:	xchg   BYTE PTR [esp+eiz*2+0x6eac20bc],ah
  40cc3e:	mov    ebx,0x28b459e6
  40cc43:	test   al,0x6e
  40cc45:	pushf  
  40cc46:	(bad)  
  40cc47:	jp     0x40cc4f
  40cc49:	mov    al,0x50
  40cc4b:	xor    DWORD PTR [edx-0x62],edx
  40cc4e:	es dec esp
  40cc50:	or     eax,0x6aa6f04f
  40cc55:	mov    eax,0xedb9070f
  40cc5a:	pop    esp
  40cc5b:	jbe    0x40cccb
  40cc5d:	in     eax,0x66
  40cc5f:	arpl   dx,cx
  40cc61:	push   es
  40cc62:	sti    
  40cc63:	addr16 fs clc 
  40cc66:	pop    edx
  40cc67:	inc    eax
  40cc68:	clc    
  40cc69:	cli    
  40cc6a:	arpl   WORD PTR [edx+0x68],ax
  40cc6d:	mov    ah,0x10
  40cc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc70:	xchg   ebp,eax
  40cc71:	ror    ch,1
  40cc73:	(bad)  [edi-0x48629b32]
  40cc79:	fcmovu st,st(5)
  40cc7b:	je     0x40cce7
  40cc7d:	frstor [ebp+ebp*2+0x289c88df]
  40cc84:	out    dx,eax
  40cc85:	push   es
  40cc86:	add    al,0x12
  40cc88:	ret    
  40cc89:	pop    esp
  40cc8a:	dec    esp
  40cc8b:	test   al,0xef
  40cc8d:	(bad)  
  40cc8e:	sbb    BYTE PTR [edi],ah
  40cc90:	les    esi,FWORD PTR ds:0x2139bf26
  40cc96:	test   eax,0x68c61e7e
  40cc9b:	mov    WORD PTR [ebp-0x735b95b],fs
  40cca1:	retf   0x4a68
  40cca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cca5:	ja     0x40ccff
  40cca7:	dec    ebx
  40cca8:	loopne 0x40ccfd
  40ccaa:	mov    esi,0xd567a7de
  40ccaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccb0:	add    BYTE PTR [edi+0x4b],dl
  40ccb3:	mov    BYTE PTR [ecx+ebx*2],dh
  40ccb6:	fsub   DWORD PTR [edx-0xf51fd4d]
  40ccbc:	jmp    0x243b11d6
  40ccc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc2:	xchg   esi,eax
  40ccc3:	pop    ds
  40ccc4:	mov    esi,0x29791003
  40ccc9:	in     eax,dx
  40ccca:	push   edx
  40cccb:	imul   ecx,DWORD PTR [esi],0xffffffd8
  40ccce:	scas   al,BYTE PTR es:[edi]
  40cccf:	mov    eax,ds:0xb1239545
  40ccd4:	(bad)  [edi+eiz*1-0x19b5dcde]
  40ccdb:	push   DWORD PTR [esi+0x5755ef27]
  40cce1:	idiv   DWORD PTR [eax+0x1010c36a]
  40cce7:	ror    edi,1
  40cce9:	pop    DWORD PTR [ecx+edi*4-0x15d40932]
  40ccf0:	jb     0x40ccf8
  40ccf2:	imul   eax,edi,0x6d63019e
  40ccf8:	sbb    al,0x98
  40ccfa:	fistp  DWORD PTR [edi+0x7d]
  40ccfd:	cmp    al,0xaf
  40ccff:	in     al,dx
  40cd00:	faddp  st(5),st
  40cd02:	cmp    eax,0xa1de9821
  40cd07:	stos   DWORD PTR es:[edi],eax
  40cd08:	cmp    DWORD PTR [edi-0x5b27cc30],esp
  40cd0e:	outs   dx,DWORD PTR ds:[esi]
  40cd0f:	and    edx,DWORD PTR [ebp-0x5ccacad3]
  40cd15:	sbb    BYTE PTR [ecx-0x6346bc3c],ah
  40cd1b:	mov    eax,ecx
  40cd1d:	or     ch,al
  40cd1f:	retf   
  40cd20:	stc    
  40cd21:	into   
  40cd22:	dec    ebx
  40cd23:	mov    esi,0x4d465035
  40cd28:	sub    BYTE PTR [eax-0x57],al
  40cd2b:	add    DWORD PTR [esi-0x2af141f6],edi
  40cd31:	pop    edx
  40cd32:	add    BYTE PTR [edi+0x1a],al
  40cd35:	and    eax,0xf6681757
  40cd3a:	cmp    ebp,0x41
  40cd3d:	div    BYTE PTR es:[ecx-0x2]
  40cd41:	jo     0x40cd93
  40cd43:	fmul   DWORD PTR [ebp+0x4c098402]
  40cd49:	sub    eax,DWORD PTR [eax]
  40cd4b:	pop    ss
  40cd4c:	dec    bx
  40cd4e:	outs   dx,DWORD PTR ds:[esi]
  40cd4f:	xchg   BYTE PTR [ebp-0x377582cd],dh
  40cd55:	push   edi
  40cd56:	outs   dx,BYTE PTR ds:[esi]
  40cd57:	mov    al,0x28
  40cd59:	add    BYTE PTR [ecx+0x10],ah
  40cd5c:	(bad)  
  40cd5d:	push   esi
  40cd5e:	test   al,0x4c
  40cd60:	sahf   
  40cd61:	xor    DWORD PTR [ecx],esi
  40cd63:	push   edx
  40cd64:	cmp    al,BYTE PTR [ebp+0x6e312bcb]
  40cd6a:	in     al,dx
  40cd6b:	aas    
  40cd6c:	mov    ds:0xe6289926,eax
  40cd71:	(bad)  
  40cd72:	push   esi
  40cd73:	and    al,0xb8
  40cd75:	scas   al,BYTE PTR es:[edi]
  40cd76:	ret    
  40cd77:	imul   edx,DWORD PTR [edi],0x3a
  40cd7a:	jle    0x40cd56
  40cd7c:	add    esi,ebx
  40cd7e:	ret    0x4a43
  40cd81:	pusha  
  40cd82:	inc    esi
  40cd83:	test   BYTE PTR [esi+0x286f99aa],dh
  40cd89:	pause  
  40cd8b:	aam    0x17
  40cd8d:	ficomp DWORD PTR gs:[edx]
  40cd90:	call   0xfa61:0xa35b036f
  40cd97:	fcomp  QWORD PTR [ebp-0x57]
  40cd9a:	sar    DWORD PTR [ebp-0x3c336c80],1
  40cda0:	loop   0x40cd7f
  40cda2:	loopne 0x40cdac
  40cda4:	adc    DWORD PTR [ecx+0x29],esp
  40cda7:	retf   0x2530
  40cdaa:	bound  eax,QWORD PTR [eax]
  40cdac:	xor    BYTE PTR [ecx+0x21],ah
  40cdaf:	xor    DWORD PTR [ebx-0x4bc64fb4],ecx
  40cdb5:	sbb    ebx,DWORD PTR [eax-0x12]
  40cdb8:	inc    ebx
  40cdb9:	inc    edx
  40cdba:	mov    edi,0x7b5d4665
  40cdbf:	sub    WORD PTR [edi-0x52219ad4],si
  40cdc6:	dec    edx
  40cdc7:	push   0xfffffff6
  40cdc9:	lods   eax,DWORD PTR ds:[esi]
  40cdca:	add    cl,dl
  40cdcc:	cld    
  40cdcd:	stos   DWORD PTR es:[edi],eax
  40cdce:	addr16 (bad) 
  40cdd0:	std    
  40cdd1:	xchg   edi,eax
  40cdd2:	jne    0x40ce34
  40cdd4:	mov    ss,esi
  40cdd6:	cmp    dl,BYTE PTR [edi+0x1]
  40cdd9:	xor    BYTE PTR [ebx-0x2a],al
  40cddc:	bound  edi,QWORD PTR [esp+ebx*8]
  40cddf:	dec    edx
  40cde0:	daa    
  40cde1:	inc    edx
  40cde2:	ffreep st(3)
  40cde4:	sar    cl,cl
  40cde6:	mov    dh,0x77
  40cde8:	jae    0x40ce41
  40cdea:	stc    
  40cdeb:	jle    0x40ce07
  40cded:	and    esi,0xffffffe3
  40cdf0:	inc    eax
  40cdf1:	push   0xcd3ecd5f
  40cdf6:	in     eax,0x21
  40cdf8:	or     esp,ebx
  40cdfa:	mov    al,0x8a
  40cdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfd:	idiv   DWORD PTR [edi-0x7a]
  40ce00:	jo     0x40ce02
  40ce02:	pop    edi
  40ce03:	push   ebp
  40ce04:	ins    BYTE PTR es:[edi],dx
  40ce05:	sbb    ebp,DWORD PTR [esi+0x75c5b1ef]
  40ce0b:	mov    dl,0xac
  40ce0e:	enter  0x8d3d,0x3d
  40ce12:	call   0x1c28:0xd578d93f
  40ce19:	ins    DWORD PTR es:[edi],dx
  40ce1a:	adc    esi,edx
  40ce1c:	jbe    0x40ce0c
  40ce1e:	ror    BYTE PTR [esi+0x41],cl
  40ce21:	xor    ebp,edi
  40ce23:	xchg   ecx,eax
  40ce24:	push   esp
  40ce25:	cmp    DWORD PTR [eax+0x38],eax
  40ce28:	(bad)  
  40ce29:	inc    BYTE PTR [edi]
  40ce2b:	xor    DWORD PTR [ebx-0x6273da2b],0xc89f30d7
  40ce35:	inc    ebx
  40ce36:	jmp    0x26db:0xf5451a32
  40ce3d:	and    BYTE PTR [ebx+ebx*1-0x34],bl
  40ce41:	idiv   BYTE PTR [esp+edx*1+0x2688996f]
  40ce48:	jg     0x40ce3f
  40ce4a:	add    cl,BYTE PTR [eax]
  40ce4c:	add    DWORD PTR [ecx+ecx*4],ebp
  40ce4f:	in     eax,0x1e
  40ce51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce52:	ins    DWORD PTR es:[edi],dx
  40ce53:	(bad)  [eax+0x3fe8bbe]
  40ce59:	ret    0xb485
  40ce5c:	dec    eax
  40ce5d:	mov    bl,0xd5
  40ce5f:	popf   
  40ce60:	(bad)  
  40ce61:	outs   dx,BYTE PTR ds:[esi]
  40ce62:	shr    BYTE PTR [esi-0x6873e864],1
  40ce68:	cwde   
  40ce69:	jns    0x40ce4e
  40ce6b:	or     eax,0x19f1f725
  40ce70:	test   BYTE PTR [edi-0x2fa7164f],bh
  40ce76:	bound  edi,QWORD PTR [edx-0x1]
  40ce79:	and    eax,0xf3b49b9c
  40ce7e:	xchg   esi,eax
  40ce7f:	mov    DWORD PTR [esi+edx*8-0xf],ebp
  40ce83:	jnp    0x40ce34
  40ce85:	cs (bad) 
  40ce87:	inc    edx
  40ce88:	ror    DWORD PTR [edi+0x36d424a],1
  40ce8e:	lods   al,BYTE PTR ds:[esi]
  40ce8f:	jmp    0x1c4440e0
  40ce94:	shl    BYTE PTR [eax-0x22],cl
  40ce97:	xchg   eax,ebp
  40ce99:	test   al,ch
  40ce9b:	les    esi,FWORD PTR [esi-0x4f2a41a1]
  40cea1:	push   eax
  40cea2:	retf   
  40cea3:	push   edi
  40cea4:	or     al,0xf
  40cea6:	xchg   esp,eax
  40cea7:	dec    edi
  40cea8:	jg     0x40ce90
  40ceaa:	sbb    DWORD PTR [edx-0x77],eax
  40cead:	aaa    
  40ceae:	out    0x21,eax
  40ceb0:	sub    BYTE PTR [ebp+0x4f],ch
  40ceb3:	sahf   
  40ceb4:	data16 jp 0x40cea5
  40ceb7:	mov    WORD PTR [edx],es
  40ceb9:	cmp    al,0xef
  40cebb:	pop    ds
  40cebc:	xchg   esp,eax
  40cebe:	pop    edi
  40cebf:	jnp    0x40cf3c
  40cec1:	sub    esi,DWORD PTR [ebx-0x720900eb]
  40cec7:	mov    ah,0x28
  40cec9:	sbb    edx,DWORD PTR [esi-0x111e07cf]
  40cecf:	and    al,0x2d
  40ced1:	cmp    eax,0x7d63cb42
  40ced6:	and    eax,0x5aeb0bfa
  40cedb:	nop
  40cedc:	mov    edx,0xb53757cc
  40cee1:	pop    esp
  40cee2:	pop    es
  40cee3:	dec    esi
  40cee4:	and    cl,bl
  40cee6:	mov    ds:0x759ce54d,eax
  40ceeb:	scas   al,BYTE PTR es:[edi]
  40ceec:	xor    eax,0xf1d8ef92
  40cef1:	xchg   edi,eax
  40cef2:	push   ds
  40cef3:	jecxz  0x40cf52
  40cef5:	push   esi
  40cef6:	call   0x112aa33d
  40cefb:	mov    WORD PTR [edx+0x46],cs
  40cefe:	retf   0xb7d7
  40cf01:	les    ebx,FWORD PTR [ebx+0x38]
  40cf04:	(bad)  
  40cf05:	xor    BYTE PTR [ebx+0x7a],al
  40cf08:	adc    BYTE PTR [esi],dh
  40cf0a:	jecxz  0x40ce8d
  40cf0c:	sub    bl,BYTE PTR [edx]
  40cf0e:	cmp    eax,esp
  40cf10:	push   esp
  40cf11:	test   BYTE PTR [ebp-0x1],dl
  40cf14:	aaa    
  40cf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf16:	das    
  40cf17:	nop    edx
  40cf1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf1b:	stos   DWORD PTR es:[edi],eax
  40cf1c:	dec    esi
  40cf1d:	sub    dx,WORD PTR [esi-0x4]
  40cf21:	imul   esp,ebx,0xffffffe2
  40cf24:	and    esp,DWORD PTR [esp+eax*8+0x6c]
  40cf28:	rol    BYTE PTR [eax+0x72a4a9f9],cl
  40cf2e:	int3   
  40cf2f:	xchg   DWORD PTR [eax+0x5b87bddd],eax
  40cf35:	loopne 0x40cf6b
  40cf37:	jnp    0x40cf80
  40cf39:	inc    ebx
  40cf3a:	and    ah,BYTE PTR [eax+0x181d577f]
  40cf40:	test   DWORD PTR [ebp+esi*1+0x513beb2f],eax
  40cf47:	jecxz  0x40cf88
  40cf49:	addr16 enter 0xcf74,0x37
  40cf4e:	ret    
  40cf4f:	cmp    al,0x96
  40cf51:	jl     0x40cfcb
  40cf53:	js     0x40cf52
  40cf55:	lods   eax,DWORD PTR ds:[esi]
  40cf56:	lods   al,BYTE PTR ds:[esi]
  40cf57:	xor    DWORD PTR [ecx-0x632d0ae9],ecx
  40cf5d:	sbb    BYTE PTR [edx+0x16],bh
  40cf60:	loope  0x40cf5f
  40cf62:	stos   BYTE PTR es:[edi],al
  40cf63:	and    WORD PTR ds:0x69ff30b3,bx
  40cf6a:	into   
  40cf6b:	jecxz  0x40cfc4
  40cf6d:	arpl   WORD PTR [ecx+0x792cc17e],sp
  40cf73:	pop    esp
  40cf74:	pop    ss
  40cf75:	lds    eax,FWORD PTR [ecx+ebp*1-0x3a]
  40cf79:	jno    0x40cfd6
  40cf7b:	xchg   ecx,eax
  40cf7c:	inc    esp
  40cf7d:	pop    ecx
  40cf7e:	es xor dl,BYTE PTR cs:[esi-0x26]
  40cf83:	(bad)  
  40cf84:	mov    eax,0xe4b2051
  40cf89:	cmp    ax,0x25bd
  40cf8d:	add    al,0x47
  40cf8f:	in     eax,dx
  40cf90:	push   edi
  40cf91:	rcr    BYTE PTR [edx-0x4a],cl
  40cf94:	push   eax
  40cf95:	dec    edx
  40cf96:	mov    WORD PTR [edi],ds
  40cf98:	ret    
  40cf99:	add    BYTE PTR [eax],0x1b
  40cf9c:	and    esp,esi
  40cf9e:	fdiv   QWORD PTR [edi+0x73]
  40cfa1:	adc    ebp,esp
  40cfa3:	repz sub eax,0x5d697afe
  40cfa9:	(bad)  
  40cfaa:	mov    bl,0x55
  40cfac:	scas   eax,DWORD PTR es:[edi]
  40cfad:	in     eax,dx
  40cfae:	xchg   esp,eax
  40cfaf:	call   0x9b37:0x7c9ce524
  40cfb6:	mov    ebp,0x8af0fda0
  40cfbb:	dec    DWORD PTR [edx-0x63746f9b]
  40cfc1:	in     al,dx
  40cfc2:	mov    ah,dl
  40cfc4:	adc    edi,DWORD PTR [ebp-0x49]
  40cfc7:	ds out dx,eax
  40cfc9:	sub    ch,al
  40cfcb:	(bad)  
  40cfcc:	pop    edx
  40cfcd:	dec    edi
  40cfce:	iret   
  40cfcf:	push   edx
  40cfd0:	dec    edi
  40cfd1:	scas   eax,DWORD PTR es:[edi]
  40cfd2:	push   0x459fa8e4
  40cfd7:	clc    
  40cfd8:	cwde   
  40cfd9:	fsubp  st(2),st
  40cfdb:	and    al,0xf
  40cfdd:	loopne 0x40cf9f
  40cfdf:	(bad)  
  40cfe0:	enter  0xf3ab,0x44
  40cfe4:	inc    edi
  40cfe5:	add    eax,0xd6d45756
  40cfea:	sub    edx,esi
  40cfec:	sbb    DWORD PTR [ebx+0x1d],0xb8934b30
  40cff3:	and    eax,0xf23cc665
  40cff8:	jo     0x40cf8b
  40cffa:	and    BYTE PTR [ebp-0x3fff87b2],ch
  40d000:	jb     0x40cfec
  40d002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d003:	pop    esp
  40d004:	outs   dx,DWORD PTR ds:[esi]
  40d005:	mov    WORD PTR [edi+0x2345f55b],?
  40d00b:	mov    eax,0x7bed9a28
  40d010:	adc    al,0x6c
  40d012:	in     al,dx
  40d013:	daa    
  40d014:	outs   dx,BYTE PTR ds:[esi]
  40d015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d016:	push   edx
  40d017:	jl     0x40cfc0
  40d019:	inc    edi
  40d01a:	pop    ebp
  40d01b:	cmp    edi,eax
  40d01d:	push   0x6ab2b457
  40d022:	js     0x40d090
  40d024:	and    DWORD PTR [eax+0x620352e6],edi
  40d02a:	mov    eax,ds:0xce0b73cb
  40d02f:	add    DWORD PTR [ebp-0x35f4b233],esp
  40d035:	imul   DWORD PTR [edi-0x44]
  40d038:	jbe    0x40cfc2
  40d03a:	ss ins BYTE PTR es:[edi],dx
  40d03c:	mov    ds:0x2d2f807d,al
  40d041:	xor    esi,eax
  40d043:	or     eax,0x3313ab5c
  40d048:	repz jge 0x40d012
  40d04b:	mov    cl,0x60
  40d04d:	fsubrp st(3),st
  40d04f:	and    dh,BYTE PTR [eax+0x30bb89b9]
  40d055:	mov    al,ds:0x45855ec6
  40d05a:	sar    bh,cl
  40d05c:	(bad)  
  40d05d:	mov    ds:0x1d0be358,al
  40d062:	xchg   DWORD PTR ds:[edx],esp
  40d065:	jb     0x40d06e
  40d067:	pop    edi
  40d068:	xchg   ebp,eax
  40d069:	inc    eax
  40d06a:	shr    DWORD PTR [esp+ebx*2-0x1fcc2836],1
  40d071:	loopne 0x40d071
  40d073:	push   esp
  40d074:	retf   
  40d075:	out    0x19,eax
  40d077:	les    ecx,FWORD PTR [ebx]
  40d079:	adc    al,0x46
  40d07b:	cmp    BYTE PTR [ebx+0x13],bh
  40d07e:	test   eax,0xa6f36510
  40d083:	loop   0x40d072
  40d085:	ret    0x611a
  40d088:	pop    esp
  40d089:	mov    cl,0xe5
  40d08b:	pop    ebp
  40d08c:	lods   eax,DWORD PTR ds:[esi]
  40d08d:	ss sbb eax,0x27902b0
  40d093:	sub    cl,BYTE PTR [edx+0x5a]
  40d096:	sbb    bh,BYTE PTR [eax]
  40d098:	and    edx,DWORD PTR [esi+esi*4-0x4dd6207b]
  40d09f:	rcr    bh,cl
  40d0a1:	push   ebp
  40d0a2:	das    
  40d0a3:	fsub   DWORD PTR [ebx]
  40d0a5:	cmp    bh,BYTE PTR [edx]
  40d0a7:	pop    eax
  40d0a8:	sbb    BYTE PTR [ebp+0x1652a9e1],ah
  40d0ae:	xchg   DWORD PTR [esi+0x38],eax
  40d0b1:	inc    edx
  40d0b2:	hlt    
  40d0b3:	pop    ecx
  40d0b4:	sbb    al,BYTE PTR [ebp-0x7a]
  40d0b7:	mov    ah,0x94
  40d0b9:	jae    0x40d102
  40d0bb:	xchg   esi,eax
  40d0bc:	jge    0x40d093
  40d0be:	fwait
  40d0bf:	jmp    0x40d0e4
  40d0c1:	jne    0x40d0e3
  40d0c3:	out    dx,al
  40d0c4:	mov    al,0x19
  40d0c6:	sbb    DWORD PTR [edi],ebp
  40d0c8:	inc    esp
  40d0c9:	add    dl,BYTE PTR [eax]
  40d0cb:	enter  0x9329,0x89
  40d0cf:	pop    edx
  40d0d0:	icebp  
  40d0d1:	jnp    0x40d093
  40d0d3:	sbb    bh,ch
  40d0d5:	jle    0x40d07f
  40d0d7:	inc    ebp
  40d0d8:	cwde   
  40d0d9:	lahf   
  40d0da:	fmul   st,st(4)
  40d0dc:	and    eax,0x520c943c
  40d0e1:	cli    
  40d0e2:	sar    esp,cl
  40d0e4:	pop    ds
  40d0e5:	loop   0x40d135
  40d0e7:	sbb    BYTE PTR [edx+ebx*2-0x55ca2de3],ah
  40d0ee:	cwde   
  40d0ef:	mov    ah,0x28
  40d0f1:	dec    ebp
  40d0f2:	xor    DWORD PTR [eax+0x4f],edx
  40d0f5:	xlat   BYTE PTR ds:[ebx]
  40d0f6:	mov    ebx,0x70a00e01
  40d0fb:	push   0x932bd66
  40d100:	lods   al,BYTE PTR ds:[esi]
  40d101:	push   DWORD PTR [eax]
  40d103:	sub    BYTE PTR [ecx],ch
  40d105:	sbb    DWORD PTR [ecx-0x14],0x7e
  40d109:	lods   al,BYTE PTR ds:[esi]
  40d10a:	mov    ecx,0x4a0fe32e
  40d10f:	sbb    DWORD PTR [edx-0x7c],edi
  40d112:	jle    0x40d12d
  40d114:	add    al,0x91
  40d116:	mov    al,0x15
  40d118:	dec    ebp
  40d119:	mov    ebp,0x3099312b
  40d11e:	xor    BYTE PTR [esp+edi*4+0x23],0xdb
  40d123:	inc    esp
  40d124:	and    al,0xd1
  40d126:	inc    edx
  40d127:	outs   dx,BYTE PTR ds:[esi]
  40d128:	pop    ss
  40d129:	inc    esp
  40d12a:	je     0x40d16c
  40d12c:	mov    bh,0x49
  40d12e:	popf   
  40d12f:	xor    al,0x2c
  40d131:	add    DWORD PTR [edi],0x3f24999a
  40d137:	push   ecx
  40d138:	out    0x9c,al
  40d13a:	(bad)  
  40d13b:	out    dx,eax
  40d13c:	mov    edi,0xc70a7040
  40d141:	rol    DWORD PTR [edi+0x3a],0x81
  40d145:	push   esp
  40d146:	pop    ss
  40d147:	aaa    
  40d148:	sbb    eax,0x6dcacfec
  40d14d:	in     eax,dx
  40d14e:	sbb    eax,0xe3a3c18
  40d153:	(bad)  
  40d154:	sbb    eax,0x2882afe7
  40d159:	adc    eax,0x395fc24f
  40d15e:	cmp    edi,DWORD PTR [esi-0x7b]
  40d161:	xchg   esp,eax
  40d162:	xor    eax,DWORD PTR [edi-0x53fdeee5]
  40d168:	adc    eax,0xb483c17b
  40d16d:	jmp    0x40d19f
  40d16f:	shr    DWORD PTR [ecx],1
  40d171:	mov    bh,0xb
  40d173:	icebp  
  40d174:	jb     0x40d1d0
  40d176:	fs and al,0x23
  40d179:	stc    
  40d17a:	jne    0x40d100
  40d17c:	sti    
  40d17d:	stos   DWORD PTR es:[edi],eax
  40d17e:	and    BYTE PTR [eax+0x60],ah
  40d181:	repnz add edx,DWORD PTR [ebp+0x4fb1a225]
  40d188:	dec    eax
  40d189:	ss sbb esp,esp
  40d18c:	jge    0x40d1a6
  40d18e:	fwait
  40d18f:	sub    al,BYTE PTR [edi]
  40d191:	or     ecx,DWORD PTR [eax+0x54]
  40d194:	xor    eax,0x69b8ca2b
  40d199:	scas   eax,DWORD PTR es:[edi]
  40d19a:	push   ss
  40d19b:	adc    edx,DWORD PTR [edi]
  40d19d:	and    ch,BYTE PTR [edx+ecx*4-0x60c18da6]
  40d1a4:	pop    edx
  40d1a5:	jnp    0x40d217
  40d1a7:	xor    DWORD PTR [ebx],0xffffffd7
  40d1aa:	sub    al,0xbf
  40d1ac:	fstp   DWORD PTR [eax]
  40d1ae:	or     dh,BYTE PTR [edi-0x79caba91]
  40d1b4:	pop    ecx
  40d1b5:	pushf  
  40d1b6:	sbb    bl,BYTE PTR [eax+0x7d]
  40d1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ba:	dec    esi
  40d1bb:	pop    edi
  40d1bc:	(bad)  
  40d1be:	mul    ch
  40d1c0:	(bad)  
  40d1c1:	pusha  
  40d1c2:	or     BYTE PTR [eax],0x5a
  40d1c5:	jbe    0x40d181
  40d1c7:	push   edi
  40d1c8:	pop    ecx
  40d1c9:	das    
  40d1ca:	adc    DWORD PTR [esi+0xf],eax
  40d1cd:	or     eax,0x3a544ec2
  40d1d2:	call   0xeb30:0x990c7222
  40d1d9:	nop
  40d1da:	or     BYTE PTR [ebx+0x48],bl
  40d1dd:	mov    dl,0x63
  40d1df:	aas    
  40d1e0:	mov    eax,ds:0xfbed84da
  40d1e5:	imul   edx,DWORD PTR [ebx],0x5a1ddb92
  40d1eb:	in     eax,0x9c
  40d1ed:	fwait
  40d1ee:	push   ebp
  40d1ef:	das    
  40d1f0:	pop    edx
  40d1f1:	sbb    al,BYTE PTR [ebx]
  40d1f3:	retf   0x4695
  40d1f6:	sbb    eax,0xbedc6ba4
  40d1fb:	push   ebp
  40d1fc:	xchg   ebp,eax
  40d1fd:	leave  
  40d1fe:	pop    ss
  40d1ff:	mov    edx,0x4d954dec
  40d204:	jg     0x40d1f5
  40d206:	jmp    0x40d1b8
  40d208:	addr16 jne 0x40d223
  40d20b:	test   eax,0xeff6c483
  40d210:	or     al,0xb2
  40d212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d213:	or     BYTE PTR gs:[ebx+0x43],al
  40d217:	fsubr  QWORD PTR [edx-0x30f96379]
  40d21d:	into   
  40d21e:	loop   0x40d28d
  40d220:	div    dh
  40d222:	mov    DWORD PTR [ebp-0x57bfec59],ebx
  40d228:	js     0x40d1ca
  40d22a:	cwde   
  40d22b:	xchg   ebx,eax
  40d22c:	cmp    BYTE PTR [edi-0x78],al
  40d22f:	pushf  
  40d230:	rcr    bl,1
  40d232:	sub    DWORD PTR [edi],edi
  40d234:	push   0xe68d8f1
  40d239:	mov    eax,ds:0x705c5925
  40d23e:	jnp    0x40d2aa
  40d240:	or     bl,BYTE PTR ds:[ecx+0x1a]
  40d244:	mov    ecx,0x25098541
  40d249:	cli    
  40d24a:	cmp    BYTE PTR [ebp+0x46352537],bl
  40d250:	fcmove st,st(7)
  40d252:	dec    ecx
  40d253:	sbb    bh,BYTE PTR [edi+0xb36ea9]
  40d259:	inc    esi
  40d25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25b:	add    al,0x9c
  40d25d:	ret    
  40d25e:	test   al,0xa7
  40d260:	inc    edi
  40d261:	dec    edi
  40d262:	ja     0x40d1e5
  40d264:	loope  0x40d259
  40d266:	push   es
  40d267:	mov    dh,0x2f
  40d269:	scas   al,BYTE PTR es:[edi]
  40d26a:	sahf   
  40d26b:	sub    DWORD PTR [edi+0x29b822a],0x8dbc3b08
  40d275:	adc    eax,0x5b7b4aa8
  40d27a:	clc    
  40d27b:	shl    BYTE PTR ds:0x4cb1e774,0x2f
  40d282:	dec    ecx
  40d283:	sub    DWORD PTR [ecx+0x7936d2e9],0x71c0b227
  40d28d:	mov    dl,0x2f
  40d28f:	test   bl,0x3b
  40d292:	pop    esi
  40d293:	mov    bl,0xe3
  40d295:	jle    0x40d29d
  40d297:	int3   
  40d298:	pop    ss
  40d299:	sbb    bh,BYTE PTR [ebp-0x48]
  40d29c:	(bad)  [ebx+0x6e]
  40d29f:	jns    0x40d27f
  40d2a1:	jo     0x40d265
  40d2a3:	or     eax,0xb5b7f68f
  40d2a8:	pop    ss
  40d2a9:	enter  0xa27a,0xcf
  40d2ad:	mov    edi,0x61c3813f
  40d2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b3:	das    
  40d2b4:	mov    ch,0x2e
  40d2b6:	pop    ecx
  40d2b7:	lock shl DWORD PTR [ecx+0x58],0xe6
  40d2bc:	mul    BYTE PTR [ebp-0x80]
  40d2bf:	call   0xb175:0x97a6332a
  40d2c6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d2c8:	inc    ecx
  40d2c9:	inc    ebx
  40d2ca:	and    BYTE PTR [ebx+0x61],bl
  40d2cd:	or     esi,DWORD PTR [ebp-0x35]
  40d2d0:	out    0x1a,al
  40d2d2:	(bad)  
  40d2d3:	out    dx,al
  40d2d4:	cmp    cl,BYTE PTR [ebp+edx*2+0x121a459f]
  40d2db:	fsub   st,st(6)
  40d2dd:	test   DWORD PTR [esi-0x5ddfedbc],edx
  40d2e3:	outs   dx,DWORD PTR ds:[esi]
  40d2e4:	jns    0x40d2f2
  40d2e6:	ins    DWORD PTR es:[edi],dx
  40d2e7:	jmp    0x29b10c9
  40d2ec:	stc    
  40d2ed:	aaa    
  40d2ee:	inc    ecx
  40d2ef:	fidiv  WORD PTR [ebp-0x56b2d1f8]
  40d2f5:	dec    eax
  40d2f6:	mov    edx,0xc552fc3c
  40d2fb:	pop    ecx
  40d2fc:	jns    0x40d34d
  40d2fe:	cwde   
  40d2ff:	and    DWORD PTR [ebp+0x2b],ebp
  40d302:	rcl    BYTE PTR [esi+0x23],1
  40d305:	dec    ecx
  40d306:	add    DWORD PTR [eax*4-0x578e2ee6],0xffffffc1
  40d30e:	mov    esi,0xcbb454b
  40d313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d314:	xchg   edx,eax
  40d315:	int3   
  40d316:	sahf   
  40d317:	and    edi,DWORD PTR [edi]
  40d319:	dec    eax
  40d31a:	enter  0xde97,0xe7
  40d31e:	outs   dx,DWORD PTR ds:[esi]
  40d31f:	out    dx,eax
  40d320:	fcmovnbe st,st(0)
  40d322:	inc    ecx
  40d323:	retf   
  40d324:	or     bh,BYTE PTR [edx]
  40d326:	in     al,0x11
  40d328:	dec    edi
  40d329:	out    0xff,eax
  40d32b:	xor    eax,0xa21c90d8
  40d330:	fbstp  TBYTE PTR [ecx+edi*8+0x1d3e64d2]
  40d337:	or     al,0x47
  40d339:	outs   dx,DWORD PTR ds:[esi]
  40d33a:	es aad 0xc6
  40d33d:	aaa    
  40d33e:	jno    0x40d39e
  40d340:	test   BYTE PTR [ebp-0x5],bh
  40d343:	lea    ebx,[ecx+0x36]
  40d346:	fwait
  40d347:	mov    al,ds:0xdbdbda59
  40d34c:	scas   al,BYTE PTR es:[edi]
  40d34d:	cwde   
  40d34e:	adc    ch,BYTE PTR [edx+0x55cc7c73]
  40d354:	cli    
  40d355:	outs   dx,DWORD PTR ds:[esi]
  40d356:	outs   dx,DWORD PTR ds:[esi]
  40d357:	scas   eax,DWORD PTR es:[edi]
  40d358:	pop    eax
  40d359:	jne    0x40d34c
  40d35b:	fmul   QWORD PTR [ecx+0x772ebf3e]
  40d361:	(bad)  
  40d362:	adc    al,BYTE PTR [eax+ebp*4]
  40d365:	inc    esp
  40d366:	xor    al,0x9d
  40d368:	sub    eax,0x457fe46e
  40d36d:	cmp    eax,DWORD PTR [edx+0x68]
  40d370:	cwde   
  40d371:	ins    BYTE PTR es:[edi],dx
  40d372:	add    BYTE PTR [ebx+ecx*4-0x2ee4fea2],cl
  40d379:	adc    eax,0xffd90cd6
  40d37e:	jmp    0xe6f70533
  40d383:	or     al,0xa0
  40d385:	mul    DWORD PTR [eax-0xe]
  40d388:	adc    DWORD PTR [edi],edx
  40d38a:	imul   edi,DWORD PTR [ebp+0x4b],0xffffffb8
  40d38e:	mov    al,0x68
  40d390:	xor    dl,bh
  40d392:	(bad)  
  40d393:	or     esi,DWORD PTR [edi+0x995109c]
  40d399:	xor    DWORD PTR [ebx+edi*4],ebx
  40d39c:	mov    ch,0x49
  40d39e:	sub    al,0xbf
  40d3a0:	or     BYTE PTR [ecx],al
  40d3a2:	fwait
  40d3a3:	sub    al,0xd8
  40d3a5:	or     ah,BYTE PTR [ecx]
  40d3a7:	in     eax,0xeb
  40d3a9:	(bad)  
  40d3aa:	out    dx,al
  40d3ab:	xchg   edi,eax
  40d3ac:	and    cl,BYTE PTR [esi]
  40d3ae:	outs   dx,BYTE PTR ds:[esi]
  40d3af:	add    al,dl
  40d3b1:	call   0x2fb5248e
  40d3b6:	pop    es
  40d3b7:	sbb    ah,BYTE PTR [eax]
  40d3b9:	and    bl,BYTE PTR [ebx]
  40d3bb:	dec    ebx
  40d3bc:	push   eax
  40d3bd:	push   es
  40d3be:	(bad)  
  40d3bf:	mov    dh,0xcf
  40d3c1:	inc    eax
  40d3c2:	xor    eax,0x3c0c1292
  40d3c7:	out    0x83,al
  40d3c9:	sti    
  40d3ca:	mov    esi,esp
  40d3cc:	and    dl,al
  40d3ce:	sahf   
  40d3cf:	daa    
  40d3d0:	repz push cs
  40d3d2:	push   eax
  40d3d3:	je     0x40d3c7
  40d3d5:	nop
  40d3d6:	push   esi
  40d3d7:	xchg   esp,eax
  40d3d8:	and    DWORD PTR [ebx+0x1e227919],ebx
  40d3de:	jecxz  0x40d3fd
  40d3e0:	or     cl,BYTE PTR [ebp+0x3a63c9f8]
  40d3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e7:	push   es
  40d3e8:	rcl    bl,1
  40d3ea:	addr16 retf 0x7bfa
  40d3ee:	aad    0x9b
  40d3f0:	imul   esp,DWORD PTR [edx+0x73],0x53
  40d3f4:	dec    edi
  40d3f5:	push   0x46
  40d3f7:	jmp    DWORD PTR [ebx+eiz*8]
  40d3fa:	inc    esp
  40d3fb:	pop    ds
  40d3fc:	push   ds
  40d3fd:	ret    
  40d3fe:	icebp  
  40d3ff:	mov    esp,0xd4a786e9
  40d404:	adc    ah,BYTE PTR [esi]
  40d406:	adc    al,0xa
  40d408:	cmp    al,0xa6
  40d40a:	pop    ds
  40d40b:	jmp    FWORD PTR [esi]
  40d40d:	das    
  40d40e:	jmp    DWORD PTR [ebp+0x325efdbc]
  40d414:	repnz in eax,dx
  40d416:	pop    edx
  40d417:	repnz popa 
  40d419:	and    eax,0x21a6a1a3
  40d41e:	fwait
  40d41f:	xlat   BYTE PTR ds:[ebx]
  40d420:	outs   dx,BYTE PTR ds:[esi]
  40d421:	lock inc ebx
  40d423:	cmp    al,0xde
  40d425:	adc    al,0x6b
  40d427:	dec    eax
  40d428:	jg     0x40d3d7
  40d42a:	add    DWORD PTR [edx+0x61],ecx
  40d42d:	mov    bh,0x5a
  40d42f:	pop    ds
  40d430:	xchg   edi,eax
  40d431:	lds    edi,FWORD PTR [edi+0x49a14ca8]
  40d437:	pusha  
  40d438:	pop    ebx
  40d439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43a:	sahf   
  40d43b:	dec    eax
  40d43c:	adc    DWORD PTR [edi+ebx*8+0x9],0x39298c27
  40d444:	jp     0x40d3c7
  40d446:	mov    ds:0x34adbc7b,eax
  40d44b:	pop    eax
  40d44c:	mov    eax,0x614c0604
  40d451:	in     al,0x4b
  40d453:	lods   al,BYTE PTR ds:[esi]
  40d454:	pop    ebx
  40d455:	cmp    bh,BYTE PTR [eax]
  40d457:	mov    bl,0xaa
  40d459:	sti    
  40d45a:	pushf  
  40d45b:	fnstcw WORD PTR [ebx]
  40d45d:	mov    al,0x9
  40d45f:	out    dx,eax
  40d460:	lock mov al,0xa2
  40d463:	inc    ebp
  40d464:	and    al,0xc9
  40d466:	arpl   dx,ax
  40d468:	push   esi
  40d469:	lds    esi,FWORD PTR [ebp+0x18]
  40d46c:	jne    0x40d4b4
  40d46e:	add    dl,BYTE PTR [eax]
  40d470:	fnstsw WORD PTR [ebx+0x5e]
  40d473:	lds    edi,FWORD PTR ds:0x53225c1f
  40d479:	dec    eax
  40d47a:	out    dx,al
  40d47b:	xchg   DWORD PTR [ecx-0x194b3f9e],esp
  40d481:	push   esi
  40d482:	jmp    0xfc34cc39
  40d487:	jg     0x40d41a
  40d489:	mov    bl,0x1a
  40d48b:	cmp    edi,DWORD PTR [esi]
  40d48d:	ins    BYTE PTR es:[edi],dx
  40d48e:	icebp  
  40d48f:	int3   
  40d490:	and    DWORD PTR [esi],ecx
  40d492:	or     dl,cl
  40d494:	and    BYTE PTR gs:[eax+0x99bb9a0],bh
  40d49b:	or     al,0x46
  40d49d:	adc    al,0x19
  40d49f:	adc    DWORD PTR [ecx+eax*1],edx
  40d4a2:	sbb    BYTE PTR [eax+0x79],ch
  40d4a5:	imul   edx,DWORD PTR [esi+esi*2+0x77],0xc773bbe3
  40d4ad:	gs mov esp,0xeadf597c
  40d4b3:	clc    
  40d4b4:	loopne 0x40d469
  40d4b6:	mov    ds:0xb86b9d17,eax
  40d4bb:	ds adc eax,ebp
  40d4be:	es cmc 
  40d4c0:	outs   dx,BYTE PTR ds:[esi]
  40d4c1:	bound  ecx,QWORD PTR [ebx+edx*4-0x59]
  40d4c5:	in     eax,0xd6
  40d4c7:	out    0x57,al
  40d4c9:	popf   
  40d4ca:	ret    
  40d4cb:	push   eax
  40d4cc:	test   DWORD PTR [esi+ebx*1-0x1f],edi
  40d4d0:	add    ch,ah
  40d4d2:	mov    WORD PTR [edi+0x674f6f0b],gs
  40d4d8:	sbb    dl,0x95
  40d4db:	xor    DWORD PTR [ebp+ecx*8-0x168aa359],ebx
  40d4e2:	push   0x23ae2309
  40d4e7:	or     ecx,DWORD PTR ds:0x8efbea41
  40d4ed:	loope  0x40d4de
  40d4ef:	(bad)  
  40d4f0:	pop    eax
  40d4f1:	retf   
  40d4f2:	xor    dh,BYTE PTR [edx+0x58]
  40d4f5:	mov    WORD PTR [edx],ss
  40d4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f8:	lods   al,BYTE PTR fs:[esi]
  40d4fa:	or     dh,BYTE PTR [esi-0x78]
  40d4fd:	out    0xf4,eax
  40d4ff:	sar    BYTE PTR [edx],1
  40d501:	cmp    eax,0xc6db2e5c
  40d506:	push   esi
  40d507:	or     ecx,DWORD PTR [eax]
  40d509:	ja     0x40d57e
  40d50b:	or     BYTE PTR [edi],bh
  40d50d:	mov    ds:0xf93359c0,al
  40d512:	xchg   ebx,eax
  40d513:	repz xchg ebp,eax
  40d515:	pop    esi
  40d516:	mov    cl,0x2d
  40d518:	(bad)  
  40d519:	mov    esp,DWORD PTR [eax-0x3189836c]
  40d51f:	(bad)  
  40d520:	jl     0x40d55b
  40d522:	mov    eax,ds:0x9e68a96e
  40d527:	pop    esp
  40d528:	leave  
  40d529:	pop    ebx
  40d52a:	scas   eax,DWORD PTR es:[edi]
  40d52b:	dec    ebx
  40d52c:	lock and DWORD PTR [ecx+0x26],esp
  40d530:	inc    esp
  40d531:	inc    ebp
  40d532:	adc    eax,eax
  40d534:	jno    0x40d4e5
  40d536:	push   ss
  40d537:	push   ebx
  40d538:	xchg   ebx,eax
  40d539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d53a:	ins    DWORD PTR es:[edi],dx
  40d53b:	mov    DWORD PTR [esi-0x5061303],ebx
  40d541:	jo     0x40d5b2
  40d543:	stc    
  40d544:	jg     0x40d573
  40d546:	int3   
  40d547:	dec    esi
  40d548:	call   0xb243:0xe727097b
  40d54f:	loopne 0x40d519
  40d551:	cmp    bl,al
  40d553:	mov    ebp,DWORD PTR [edi+ebx*2-0x52]
  40d557:	sbb    DWORD PTR [ebx-0x26],0xffffffe5
  40d55b:	inc    ebp
  40d55c:	outs   dx,DWORD PTR ds:[esi]
  40d55d:	cmp    al,0x1a
  40d55f:	push   0xc364ec68
  40d564:	jl     0x40d59d
  40d566:	pop    DWORD PTR [ebp+0x5e]
  40d569:	cdq    
  40d56a:	mov    eax,ds:0x85c17d1f
  40d56f:	mov    esp,0xda6360b0
  40d574:	aaa    
  40d575:	loopne 0x40d545
  40d577:	xor    edi,ebp
  40d579:	sbb    bl,dh
  40d57b:	jecxz  0x40d5bc
  40d57d:	sub    ebx,DWORD PTR [esi+0x790c2e1b]
  40d583:	jo     0x40d564
  40d585:	pop    esp
  40d586:	xor    BYTE PTR [ecx+0x10b01dc9],0xb0
  40d58d:	stc    
  40d58e:	fimul  WORD PTR [edx-0x1a]
  40d591:	out    0x18,eax
  40d593:	push   eax
  40d594:	pop    edi
  40d595:	xor    bl,BYTE PTR [eax-0x52]
  40d598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d599:	jg     0x40d549
  40d59b:	or     al,0x6b
  40d59d:	daa    
  40d59e:	aam    0xac
  40d5a0:	aam    0x2b
  40d5a2:	mov    ebx,0x67dfc04b
  40d5a7:	inc    ecx
  40d5a8:	or     BYTE PTR [ebp+0x14],bh
  40d5ab:	test   eax,0x805f7572
  40d5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b1:	stos   BYTE PTR es:[edi],al
  40d5b2:	pushf  
  40d5b3:	sbb    DWORD PTR fs:[edi+0x25],esi
  40d5b7:	xchg   esi,eax
  40d5b8:	or     ebp,DWORD PTR [edx+ecx*2]
  40d5bb:	jl     0x40d603
  40d5bd:	xchg   bh,cl
  40d5bf:	mov    al,ds:0x1516fc47
  40d5c4:	into   
  40d5c5:	xchg   ebp,eax
  40d5c6:	out    0xc1,eax
  40d5c8:	les    esi,FWORD PTR [edx-0x35]
  40d5cb:	popf   
  40d5cc:	mov    cl,0xa9
  40d5ce:	adc    ebp,DWORD PTR [edi+0x28]
  40d5d1:	mov    ds,WORD PTR [ebx+0x20]
  40d5d4:	xchg   esp,eax
  40d5d5:	(bad)  
  40d5d7:	push   0x539ca7dd
  40d5dc:	adc    DWORD PTR [esi],eax
  40d5de:	mov    ecx,0x65ee5b5e
  40d5e3:	fnstsw WORD PTR gs:[ecx-0x3]
  40d5e7:	xchg   ebx,eax
  40d5e8:	nop    DWORD PTR [edi]
  40d5eb:	pop    esi
  40d5ec:	push   edx
  40d5ed:	push   ss
  40d5ee:	pushf  
  40d5ef:	jns    0x40d60d
  40d5f1:	mov    DWORD PTR [ecx],eax
  40d5f3:	in     eax,dx
  40d5f4:	retf   
  40d5f5:	retf   0xec41
  40d5f8:	push   ebx
  40d5f9:	mov    ds:0x43d0ca48,al
  40d5fe:	jbe    0x40d58c
  40d600:	out    0x50,al
  40d602:	sub    eax,DWORD PTR [esi]
  40d604:	push   edx
  40d605:	in     al,0xbf
  40d607:	ror    BYTE PTR [ecx-0x38fc5579],0x26
  40d60e:	mov    ecx,0x906e987b
  40d613:	mov    esi,0x17db376f
  40d618:	jne    0x40d5fc
  40d61a:	mov    ebp,DWORD PTR [ebx-0x1bd5d21e]
  40d620:	hlt    
  40d621:	mov    dl,0x67
  40d623:	push   ebx
  40d624:	xor    eax,0x77673e6e
  40d629:	inc    edx
  40d62a:	mov    ds:0x974f6beb,eax
  40d62f:	ins    DWORD PTR es:[edi],dx
  40d630:	adc    ebx,edi
  40d632:	push   esi
  40d633:	test   BYTE PTR [eax-0x29],cl
  40d636:	gs ins DWORD PTR es:[edi],dx
  40d638:	rcr    BYTE PTR [edx+ebx*2],cl
  40d63b:	add    ah,BYTE PTR [esi+0x7]
  40d63e:	cmp    BYTE PTR [eax+esi*2+0x4e],ah
  40d642:	popa   
  40d643:	stos   DWORD PTR es:[edi],eax
  40d644:	ret    0x666b
  40d647:	shl    BYTE PTR [ebp-0x5],0x15
  40d64b:	test   BYTE PTR [edx+0x3f5c8ee8],0x3a
  40d652:	retf   
  40d653:	and    BYTE PTR [ebx+0x7f],0x1e
  40d657:	js     0x40d6af
  40d659:	inc    ecx
  40d65a:	jl     0x40d6c0
  40d65c:	bound  ecx,QWORD PTR [esi]
  40d65e:	test   DWORD PTR [ecx+0x78],0x932a4853
  40d665:	push   edx
  40d666:	xor    DWORD PTR [edx+0x3990fb3f],esi
  40d66c:	call   FWORD PTR [ecx-0x34462216]
  40d672:	leave  
  40d673:	ja     0x40d610
  40d675:	cmc    
  40d676:	int    0x84
  40d678:	push   DWORD PTR [eax+0x61]
  40d67b:	mov    BYTE PTR [ebx+0x18],dh
  40d67e:	fimul  DWORD PTR [bx+di-0x180f]
  40d683:	push   ds
  40d684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d685:	fwait
  40d686:	add    eax,DWORD PTR ds:0x88b714ca
  40d68c:	sub    ecx,DWORD PTR [edi+0x4]
  40d68f:	std    
  40d690:	call   0xf30e82e6
  40d695:	sub    dh,cl
  40d697:	cmp    ch,BYTE PTR [edi]
  40d699:	fdiv   QWORD PTR [ebp+0x43e26324]
  40d69f:	scas   al,BYTE PTR es:[edi]
  40d6a0:	dec    esp
  40d6a1:	retf   
  40d6a2:	in     eax,0x87
  40d6a4:	push   0x4a
  40d6a6:	push   ebx
  40d6a7:	xchg   ebx,eax
  40d6a8:	and    BYTE PTR [ecx],0x8b
  40d6ab:	push   cs
  40d6ac:	fild   QWORD PTR cs:[ebp+0x4db72965]
  40d6b3:	outs   dx,DWORD PTR ds:[esi]
  40d6b4:	inc    BYTE PTR [edx]
  40d6b6:	int    0x3a
  40d6b8:	rcr    cl,1
  40d6ba:	hlt    
  40d6bb:	dec    ebp
  40d6bc:	adc    al,ch
  40d6be:	js     0x40d667
  40d6c0:	fsubr  DWORD PTR [ebx]
  40d6c2:	lock sub cl,BYTE PTR [esp+eax*1-0x2f]
  40d6c7:	call   0xfc60:0x4fa65395
  40d6ce:	dec    bl
  40d6d0:	push   ss
  40d6d1:	test   al,0x3b
  40d6d3:	(bad)  
  40d6d4:	rol    DWORD PTR [esi-0x59],1
  40d6d7:	add    BYTE PTR [esi],ch
  40d6d9:	sahf   
  40d6da:	push   ebp
  40d6db:	cmp    esp,eax
  40d6dd:	mov    ah,0xa5
  40d6df:	adc    DWORD PTR [ecx],esi
  40d6e1:	pop    esp
  40d6e2:	add    bh,ch
  40d6e4:	and    eax,0xb643d09f
  40d6e9:	mov    ds:0xa7ca265d,al
  40d6ee:	push   esi
  40d6ef:	sbb    DWORD PTR [edx],ebx
  40d6f1:	mov    bh,0x2b
  40d6f3:	inc    esp
  40d6f4:	mov    dh,0xfb
  40d6f6:	pop    es
  40d6f7:	mov    ds,WORD PTR [esi+0x5b]
  40d6fa:	mov    ebp,0xd169cf84
  40d6ff:	sub    DWORD PTR [ecx-0x80],edi
  40d702:	pop    esp
  40d703:	pop    ds
  40d704:	scas   eax,DWORD PTR es:[edi]
  40d705:	stos   BYTE PTR es:[edi],al
  40d706:	cmp    BYTE PTR [ebx+0x6a],ah
  40d709:	hlt    
  40d70a:	fs test al,0x6e
  40d70d:	loopne 0x40d6a0
  40d70f:	lods   al,BYTE PTR ds:[esi]
  40d710:	push   ebp
  40d711:	inc    ebp
  40d712:	fistp  DWORD PTR [ebx-0x7cc4d1bd]
  40d718:	mov    bl,0xa8
  40d71a:	dec    ecx
  40d71b:	pusha  
  40d71c:	out    dx,al
  40d71d:	iret   
  40d71e:	sbb    BYTE PTR [esi-0x21],dh
  40d721:	fwait
  40d722:	cmp    DWORD PTR [esi+0x8174a0a],esp
  40d728:	addr16 inc edx
  40d72a:	jge    0x40d71b
  40d72c:	les    esp,FWORD PTR [ecx]
  40d72e:	jo     0x40d730
  40d730:	repz jmp 0x40d78b
  40d733:	call   esp
  40d735:	sbb    ebp,ecx
  40d737:	ins    DWORD PTR es:[edi],dx
  40d738:	sar    bl,1
  40d73a:	xor    BYTE PTR [eax+0x21],ch
  40d73d:	inc    edx
  40d73e:	outs   dx,DWORD PTR ds:[esi]
  40d73f:	scas   eax,DWORD PTR es:[edi]
  40d740:	jmp    0xf69:0x3b954e6f
  40d747:	mov    ch,0xc
  40d749:	add    al,0x3e
  40d74b:	jb     0x40d743
  40d74d:	xchg   ebx,eax
  40d74e:	cmp    edi,DWORD PTR [esi+0x5b7915e0]
  40d754:	jns    0x40d7a8
  40d756:	sbb    eax,DWORD PTR [edx-0x630a2c5f]
  40d75c:	retf   0x5f89
  40d75f:	cmp    al,BYTE PTR [edx-0x7d]
  40d762:	push   ebp
  40d763:	sub    bl,BYTE PTR [ebp-0x75f05075]
  40d769:	test   DWORD PTR [ebx],edi
  40d76b:	jnp    0x40d729
  40d76d:	push   ss
  40d76e:	mov    bl,0x28
  40d770:	sub    ebp,DWORD PTR [edi]
  40d772:	pop    ss
  40d773:	jb     0x40d773
  40d775:	mov    ds:0xbb5fb0a5,al
  40d77a:	pop    eax
  40d77b:	cwde   
  40d77c:	lods   eax,DWORD PTR ds:[esi]
  40d77d:	rcl    DWORD PTR [edx+ecx*2-0x37ef84f4],cl
  40d784:	mov    esp,0xb9095a3f
  40d789:	outs   dx,DWORD PTR ds:[esi]
  40d78a:	mov    esp,0x187b534
  40d78f:	in     eax,0xc2
  40d791:	je     0x40d721
  40d793:	push   ebx
  40d794:	pusha  
  40d795:	mov    ah,0x4e
  40d797:	sbb    BYTE PTR [ecx+eax*1+0x2a],bl
  40d79b:	mov    esp,0x8a8b9c52
  40d7a0:	mov    eax,ds:0xbcdd11b4
  40d7a5:	or     BYTE PTR fs:[esi+esi*4-0x30],dl
  40d7aa:	inc    edx
  40d7ab:	xor    DWORD PTR [ebp+0x67],edi
  40d7ae:	mov    ebx,0x85fbdf8b
  40d7b3:	mov    ecx,0xee837f80
  40d7b8:	adc    BYTE PTR [ebx],0xf9
  40d7bb:	mov    eax,ds:0x3b373b29
  40d7c0:	push   es
  40d7c1:	add    eax,0x5169cf82
  40d7c6:	jae    0x40d755
  40d7c8:	mov    cl,BYTE PTR [edi]
  40d7ca:	pmaxub mm3,mm4
  40d7cd:	test   al,0xd3
  40d7cf:	sub    eax,0xdc101bad
  40d7d4:	aaa    
  40d7d5:	retf   
  40d7d6:	xor    eax,0x83893322
  40d7db:	cdq    
  40d7dc:	cmp    al,BYTE PTR [edx-0x653ee27f]
  40d7e2:	ret    0xe89b
  40d7e5:	pop    edi
  40d7e6:	iret   
  40d7e7:	adc    BYTE PTR [eax+0xa],ch
  40d7ea:	pushf  
  40d7eb:	into   
  40d7ec:	sub    al,ch
  40d7ee:	pop    edx
  40d7ef:	imul   ebx,DWORD PTR [esi],0x2ac3b02
  40d7f5:	mov    ?,WORD PTR [edi-0x52]
  40d7f8:	popf   
  40d7f9:	pop    edi
  40d7fa:	fidivr WORD PTR [esi+0x59]
  40d7fd:	lds    eax,FWORD PTR [ebp+0x3e]
  40d800:	scas   eax,DWORD PTR es:[edi]
  40d801:	outs   dx,DWORD PTR ds:[esi]
  40d802:	(bad)  
  40d803:	mov    eax,0x82f10da5
  40d808:	inc    eax
  40d809:	clc    
  40d80a:	cmp    DWORD PTR [edx-0x51],ecx
  40d80d:	fiadd  DWORD PTR [edx-0x30]
  40d810:	mov    esp,0xb5f3f3ab
  40d815:	xlat   BYTE PTR ds:[ebx]
  40d816:	pop    ebp
  40d817:	(bad)  
  40d818:	sub    bl,BYTE PTR [edx]
  40d81a:	cwde   
  40d81b:	outs   dx,DWORD PTR ds:[esi]
  40d81c:	push   ecx
  40d81d:	xchg   BYTE PTR [edx+0x25],dh
  40d820:	add    ebp,DWORD PTR [edx+ecx*8-0x1066a5c3]
  40d827:	or     BYTE PTR [edi-0x6cb1af5d],0xb3
  40d82e:	and    DWORD PTR [esi],ebx
  40d830:	sbb    BYTE PTR [edi],al
  40d832:	test   BYTE PTR [ecx+0x3d],cl
  40d835:	push   eax
  40d836:	fst    DWORD PTR [edi]
  40d838:	retf   0xaf95
  40d83b:	fidiv  DWORD PTR [eax+ebp*2-0x4d54c21a]
  40d842:	call   0xc492:0xdbfdc1fc
  40d849:	mov    esp,0xd1b0b11c
  40d84e:	xor    BYTE PTR [esi+esi*2-0x5418f78c],ah
  40d855:	ror    ecx,cl
  40d857:	mov    edx,0xda172d55
  40d85c:	pop    ebp
  40d85d:	into   
  40d85e:	jecxz  0x40d8ae
  40d860:	mov    edi,0xf2c5c9e8
  40d865:	xchg   DWORD PTR [ecx],ebx
  40d867:	cmp    esp,esp
  40d869:	ja     0x40d808
  40d86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d86c:	mov    eax,ds:0x402a38a8
  40d871:	cmp    eax,0x3e523860
  40d876:	test   BYTE PTR [edx],bh
  40d878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d87a:	pop    ecx
  40d87b:	ret    0x9d62
  40d87e:	ins    DWORD PTR es:[edi],dx
  40d87f:	jmp    0x40d873
  40d881:	popf   
  40d882:	int3   
  40d883:	sti    
  40d884:	push   eax
  40d885:	xor    dl,0x92
  40d888:	jl     0x40d86d
  40d88a:	jnp    0x40d893
  40d88c:	mov    dh,0x2
  40d88e:	add    BYTE PTR [ebx],cl
  40d890:	stos   BYTE PTR es:[edi],al
  40d891:	sbb    BYTE PTR [esi],al
  40d893:	mov    dh,0x9d
  40d895:	mov    ebp,0xc8950cc7
  40d89a:	add    BYTE PTR [eax],dl
  40d89c:	loop   0x40d891
  40d89e:	jno    0x40d8ed
  40d8a0:	jl     0x40d8f9
  40d8a2:	arpl   WORD PTR [edx+edx*4+0x79af676b],ax
  40d8a9:	inc    eax
  40d8aa:	lods   eax,DWORD PTR ds:[esi]
  40d8ab:	js     0x40d8be
  40d8ad:	push   ss
  40d8ae:	shl    BYTE PTR [esi],cl
  40d8b0:	xchg   dl,ah
  40d8b2:	push   0x5463dfc8
  40d8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8b8:	hlt    
  40d8b9:	ja     0x40d845
  40d8bb:	cld    
  40d8bc:	imul   ebp,ecx,0x79
  40d8bf:	sub    bl,BYTE PTR ds:[eax]
  40d8c2:	pop    ds
  40d8c3:	xchg   esp,eax
  40d8c4:	loope  0x40d8ae
  40d8c6:	(bad)  
  40d8c7:	nop
  40d8c8:	mov    ecx,?
  40d8ca:	mov    ds:0x68d1ae95,al
  40d8cf:	test   bl,dh
  40d8d1:	xchg   esi,eax
  40d8d2:	jg     0x40d891
  40d8d4:	popa   
  40d8d5:	popa   
  40d8d6:	jno    0x40d8ac
  40d8d8:	(bad)  
  40d8d9:	mov    ah,0x7d
  40d8db:	mov    ebp,DWORD PTR [edi-0x3d01b5de]
  40d8e1:	adc    eax,0x95888b7b
  40d8e6:	test   DWORD PTR [ecx+0x2e64eba3],ebp
  40d8ec:	stc    
  40d8ed:	sahf   
  40d8ee:	je     0x40d877
  40d8f0:	xchg   esi,eax
  40d8f1:	inc    eax
  40d8f2:	push   edx
  40d8f3:	mov    ds:0x6d2099c8,eax
  40d8f8:	mov    WORD PTR [edx+0x4588b256],ss
  40d8fe:	jmp    0x3df7:0xa87a41e6
  40d905:	mov    eax,ds:0xf1e88fa0
  40d90a:	or     al,0xc6
  40d90c:	(bad)  
  40d90d:	and    cl,BYTE PTR [ebx-0x7c34a15b]
  40d913:	out    dx,eax
  40d914:	push   cs
  40d915:	pop    ds
  40d916:	shr    ebp,cl
  40d918:	and    eax,0xa327dd38
  40d91d:	fdiv   QWORD PTR [ebp+0x55]
  40d920:	repz xchg esp,eax
  40d922:	inc    eax
  40d923:	std    
  40d924:	adc    BYTE PTR [bp-0x69],ah
  40d928:	adc    ebx,edi
  40d92a:	cmp    DWORD PTR [esi+0x59],0x5b45a40c
  40d931:	inc    esp
  40d932:	es jmp 0x2d88e435
  40d938:	sahf   
  40d939:	ins    DWORD PTR es:[edi],dx
  40d93a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d93c:	pop    ecx
  40d93d:	dec    ebp
  40d93e:	cmp    eax,0x9633bbd6
  40d943:	test   al,0x63
  40d945:	push   ds
  40d946:	cmp    al,BYTE PTR [ecx-0x13ea6233]
  40d94c:	rcr    ebx,1
  40d94e:	jns    0x40d9bd
  40d950:	adc    DWORD PTR [esi+0x49],0x2a574237
  40d957:	data16 adc BYTE PTR [ebx+0x7f],dl
  40d95b:	xchg   edi,eax
  40d95c:	repnz cmp BYTE PTR [ebp+0x1dfb9c5f],al
  40d963:	(bad)
  40d968:	sbb    eax,0x43dccd76
  40d96d:	out    dx,al
  40d96e:	mov    DWORD PTR [ebp+0x5563ce67],ebx
  40d974:	adc    al,0xf5
  40d976:	test   al,0x11
  40d978:	shl    edi,0xa1
  40d97b:	jg     0x40d9f9
  40d97d:	mov    al,0xe9
  40d97f:	and    al,0xc9
  40d981:	ins    BYTE PTR es:[edi],dx
  40d982:	out    dx,eax
  40d983:	adc    DWORD PTR [edi-0x681b17f2],eax
  40d989:	mov    eax,0x9cd64a1d
  40d98e:	hlt    
  40d98f:	shl    BYTE PTR [ecx-0x9],1
  40d992:	mov    esp,0xa6e0299b
  40d997:	in     eax,dx
  40d998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d999:	lock jl 0x40d966
  40d99c:	pusha  
  40d99d:	push   ds
  40d99e:	mov    edi,0x8d88f44
  40d9a3:	dec    esi
  40d9a4:	sub    BYTE PTR [edi+edi*8],dh
  40d9a7:	outs   dx,DWORD PTR ds:[esi]
  40d9a8:	jb     0x40d93b
  40d9aa:	(bad)  
  40d9ab:	or     al,0xb3
  40d9ad:	xchg   cx,ax
  40d9af:	js     0x40d9a9
  40d9b1:	dec    edi
  40d9b2:	lea    ebx,[esp+eax*4-0x762a32c5]
  40d9b9:	dec    edi
  40d9ba:	add    eax,0x4caffec4
  40d9bf:	arpl   WORD PTR [edx-0x3bf294c9],bx
  40d9c5:	pop    esp
  40d9c6:	sbb    edi,esp
  40d9c8:	rol    BYTE PTR [ebx],cl
  40d9ca:	sub    eax,0x829dd7f8
  40d9cf:	test   BYTE PTR [ebx+0x768ef8e0],cl
  40d9d5:	sub    WORD PTR [edx+0x45],bx
  40d9d9:	in     eax,0xe4
  40d9db:	mov    bh,0x65
  40d9dd:	xor    al,0xdb
  40d9df:	xor    DWORD PTR [eax-0xe],0xffffffec
  40d9e3:	out    dx,al
  40d9e4:	adc    eax,0x6a5e802f
  40d9e9:	aaa    
  40d9ea:	cmove  ebx,DWORD PTR [esi]
  40d9ed:	push   cs
  40d9ee:	mov    al,ds:0x572e9752
  40d9f3:	push   esp
  40d9f4:	jecxz  0x40da49
  40d9f6:	add    bh,ah
  40d9f8:	pop    edx
  40d9f9:	ins    DWORD PTR es:[edi],dx
  40d9fa:	mov    al,ds:0xc33f440a
  40d9ff:	loopne 0x40da3f
  40da01:	push   eax
  40da02:	fld    TBYTE PTR [esi*4-0x5a017775]
  40da09:	pop    ecx
  40da0a:	or     eax,0x6a19d13
  40da0f:	dec    esp
  40da10:	dec    ebx
  40da11:	rol    BYTE PTR [ebx],0x30
  40da14:	mov    bh,BYTE PTR [eax]
  40da16:	outs   dx,BYTE PTR ds:[si]
  40da18:	push   0x332195fd
  40da1d:	fs and al,0x15
  40da20:	out    0x43,al
  40da22:	shl    BYTE PTR [ebx-0x6048ffbe],1
  40da28:	inc    ecx
  40da29:	dec    DWORD PTR [eax+0x6b]
  40da2c:	xchg   ecx,eax
  40da2d:	jge    0x40d9cc
  40da2f:	add    al,cl
  40da31:	fdivr  QWORD PTR [ebx]
  40da33:	nop
  40da34:	mov    es,WORD PTR [edi+ebx*8-0x34e5b69c]
  40da3b:	inc    esi
  40da3c:	adc    DWORD PTR [eax],ebx
  40da3e:	adc    BYTE PTR [edi+esi*8+0xf],0xe6
  40da43:	mov    BYTE PTR [ebp+0x25e4baaf],bh
  40da49:	in     eax,dx
  40da4a:	jb     0x40da8e
  40da4c:	mov    eax,ds:0x3b4c0a07
  40da51:	xor    eax,0xb1c7b737
  40da56:	or     BYTE PTR [edx-0x4],cl
  40da59:	pusha  
  40da5a:	mov    ch,0xda
  40da5c:	repz (bad) 
  40da61:	pusha  
  40da62:	retf   0x82bc
  40da65:	inc    esi
  40da66:	sti    
  40da67:	mov    BYTE PTR [eax],al
  40da69:	cs sbb eax,0x1fead429
  40da6f:	enter  0xf35a,0x32
  40da73:	fisttp DWORD PTR [eax-0x23]
  40da76:	neg    BYTE PTR [ebx+ebp*1-0x44]
  40da7a:	jmp    0xf7f8:0xfcd8cbd6
  40da81:	(bad)  
  40da82:	dec    edi
  40da83:	js     0x40da73
  40da85:	push   edi
  40da86:	rcl    al,0xa3
  40da89:	adc    esi,DWORD PTR [ebp+0x6bfd5012]
  40da8f:	mov    esp,0x8db2406f
  40da94:	fmul   QWORD PTR [esi-0x3b6ef853]
  40da9a:	in     eax,dx
  40da9b:	outs   dx,DWORD PTR ds:[esi]
  40da9c:	mov    ah,0xd0
  40da9e:	mov    al,ds:0x4eb90890
  40daa3:	push   ds
  40daa4:	sub    DWORD PTR [esi+esi*4+0x76],esi
  40daa8:	xchg   ebp,eax
  40daa9:	cmp    al,0x83
  40daab:	psubb  mm5,QWORD PTR [ecx+0x20209546]
  40dab2:	loope  0x40da52
  40dab4:	out    0x84,al
  40dab6:	fs leave 
  40dab8:	sub    ah,al
  40daba:	lods   al,BYTE PTR ds:[esi]
  40dabb:	aam    0x11
  40dabd:	enter  0x18bd,0xec
  40dac1:	hlt    
  40dac2:	setl   bl
  40dac5:	rol    bh,cl
  40dac7:	inc    eax
  40dac8:	loop   0x40da72
  40daca:	loopne 0x40dae8
  40dacc:	mov    ch,0xe3
  40dace:	push   eax
  40dacf:	ja     0x40dad0
  40dad1:	mov    edi,0x57892c8a
  40dad6:	xor    eax,0x89260ed7
  40dadb:	sbb    DWORD PTR [eax+eax*2-0x61d8e4ad],edi
  40dae2:	sub    bh,BYTE PTR [eax]
  40dae4:	pusha  
  40dae5:	ffreep st(7)
  40dae7:	gs push es
  40dae9:	push   cs
  40daea:	inc    edi
  40daeb:	lds    ebp,FWORD PTR [edi-0x37]
  40daee:	mov    ebp,0xf5e3efb2
  40daf3:	enter  0xb9ce,0x9b
  40daf7:	sub    al,0x33
  40daf9:	add    al,0x47
  40dafb:	mov    ds:0x12b73f9d,eax
  40db00:	mov    gs,WORD PTR [eax+ecx*8+0x33cbd92f]
  40db07:	or     al,0xa4
  40db09:	sbb    eax,0x45a15695
  40db0e:	lods   eax,DWORD PTR ds:[esi]
  40db0f:	repz xor ebx,DWORD PTR [ebp-0x42]
  40db13:	cdq    
  40db14:	test   DWORD PTR [edx],edi
  40db16:	jge    0x40dae5
  40db18:	add    eax,0x65452cc8
  40db1d:	inc    ecx
  40db1e:	xor    eax,0x1f8c3e88
  40db23:	xchg   ecx,eax
  40db24:	imul   ecx,DWORD PTR [eax-0x3e],0xef3b5622
  40db2b:	dec    eax
  40db2c:	inc    esi
  40db2d:	mov    ebp,0x9b6863c8
  40db32:	xchg   edx,eax
  40db33:	int    0xcd
  40db35:	das    
  40db36:	fistp  QWORD PTR [eax+0x51]
  40db39:	inc    eax
  40db3a:	and    eax,0x496fb7ba
  40db3f:	fwait
  40db40:	pop    edi
  40db41:	jno    0x40db3c
  40db43:	rcl    cl,0x84
  40db46:	std    
  40db47:	sub    BYTE PTR [ecx-0x63],bl
  40db4a:	pop    es
  40db4b:	mov    ecx,0x513c919
  40db50:	pop    esp
  40db51:	xchg   esi,eax
  40db52:	sub    eax,0x5a3a708
  40db57:	ret    0xad57
  40db5a:	call   0xf8c6b188
  40db5f:	mov    ecx,0xd02ad350
  40db64:	push   eax
  40db65:	xchg   esi,eax
  40db66:	(bad)  
  40db67:	repnz int 0x63
  40db6a:	mov    dh,0x79
  40db6c:	jne    0x40dbc2
  40db6e:	nop
  40db6f:	fidivr DWORD PTR [esp+ebp*8+0x37]
  40db73:	sbb    DWORD PTR [ebx+0xe],ebp
  40db76:	cmp    eax,esp
  40db78:	ins    DWORD PTR es:[edi],dx
  40db79:	sbb    BYTE PTR [eax+0x63],dl
  40db7c:	in     eax,dx
  40db7d:	scas   al,BYTE PTR es:[edi]
  40db7e:	jns    0x40db47
  40db80:	and    ch,BYTE PTR [edx]
  40db82:	mov    edx,0xed468174
  40db87:	lahf   
  40db88:	xchg   DWORD PTR [ebx],eax
  40db8a:	cmp    eax,0x123da330
  40db8f:	adc    esi,DWORD PTR [edi-0x14]
  40db92:	vpcmpeqw xmm7,xmm2,xmm6
  40db96:	(bad)  
  40db97:	div    bl
  40db99:	or     eax,0x623b2989
  40db9e:	adc    eax,0x8d6ece5a
  40dba3:	xor    ebp,esi
  40dba5:	pop    es
  40dba6:	push   0xc5facbba
  40dbab:	ds adc al,0xd7
  40dbae:	or     dl,cl
  40dbb0:	outs   dx,DWORD PTR ds:[esi]
  40dbb1:	in     al,0xca
  40dbb3:	adc    BYTE PTR [eax],0x15
  40dbb6:	(bad)  
  40dbb7:	cld    
  40dbb8:	cmp    ebp,ebp
  40dbba:	mov    dh,BYTE PTR [edi]
  40dbbc:	xor    dl,BYTE PTR [edi]
  40dbbe:	cmp    al,0xd3
  40dbc0:	dec    edi
  40dbc1:	aaa    
  40dbc2:	retf   0x2104
  40dbc5:	push   0xffffffe5
  40dbc7:	bound  ecx,QWORD PTR [edi+eiz*2+0x35]
  40dbcb:	das    
  40dbcc:	pop    edx
  40dbcd:	sbb    DWORD PTR [eax+ecx*2],edi
  40dbd0:	pop    ebx
  40dbd1:	fst    DWORD PTR [edi]
  40dbd3:	dec    edi
  40dbd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd5:	or     edi,DWORD PTR [eax+edi*1-0x78e6f9a8]
  40dbdc:	imul   ebx,DWORD PTR [ebx],0x7a98fab2
  40dbe2:	out    dx,al
  40dbe3:	pop    edi
  40dbe4:	sbb    DWORD PTR ds:0xbed7be29,edx
  40dbea:	icebp  
  40dbeb:	mov    edi,0xdc3162ac
  40dbf0:	xor    bh,BYTE PTR [ebp-0x52cd8cdb]
  40dbf6:	in     eax,0x53
  40dbf8:	xchg   ebx,eax
  40dbf9:	fsubr  QWORD PTR [eax-0x71d4724a]
  40dbff:	mov    edx,0xe2b6dbbc
  40dc04:	mov    WORD PTR [eax+eiz*2],?
  40dc07:	and    bl,dh
  40dc09:	icebp  
  40dc0a:	fistp  QWORD PTR [edi+0x59cf28db]
  40dc10:	mov    gs,WORD PTR [edx-0x5e6e0fe3]
  40dc16:	adc    edi,DWORD PTR [edx-0xf]
  40dc19:	jne    0x40dbfb
  40dc1b:	sub    eax,0x63559b0b
  40dc20:	(bad)  
  40dc21:	xor    DWORD PTR [eax],eax
  40dc23:	and    DWORD PTR [ebx-0xf],esp
  40dc26:	mov    al,ds:0xf7139fde
  40dc2b:	aam    0x49
  40dc2d:	mov    ?,ebp
  40dc2f:	add    dh,0x30
  40dc32:	push   ebp
  40dc33:	out    dx,eax
  40dc34:	or     eax,0xd15934ae
  40dc39:	mov    gs,WORD PTR [esi+edx*8-0x679cdb57]
  40dc40:	inc    esi
  40dc41:	push   esp
  40dc42:	sbb    eax,0x329ab922
  40dc47:	xor    DWORD PTR [edx+0x2fb62592],ebp
  40dc4d:	push   ebx
  40dc4e:	les    ecx,FWORD PTR [esp+ebx*2+0x1ad33c14]
  40dc55:	fcmovnbe st,st(7)
  40dc57:	pop    esi
  40dc58:	mov    ebp,0x2f4d5a11
  40dc5d:	cli    
  40dc5e:	leave  
  40dc5f:	nop
  40dc60:	sar    BYTE PTR [esi+0x23],1
  40dc63:	inc    esp
  40dc64:	mov    ds:0xbf70230f,al
  40dc69:	inc    ecx
  40dc6a:	cmp    DWORD PTR [ecx+0x78],0x50e0c4b0
  40dc71:	test   dh,ah
  40dc73:	jle    0x40dc47
  40dc75:	xor    DWORD PTR [ecx-0x20a668c4],edi
  40dc7b:	and    al,0x44
  40dc7d:	mov    bl,0x8b
  40dc7f:	aam    0xe3
  40dc81:	test   BYTE PTR [eax+0x7a],0x3f
  40dc85:	call   0xffd84357
  40dc8a:	mov    eax,0xf2a260bf
  40dc8f:	push   edx
  40dc90:	pop    ds
  40dc91:	xchg   DWORD PTR [edx+0x1cd98b9a],esi
  40dc97:	in     eax,0xdc
  40dc99:	mov    eax,0x6bceff04
  40dc9e:	lds    edi,FWORD PTR [eax+edx*1-0x75]
  40dca2:	or     eax,0xf31bed64
  40dca7:	inc    edx
  40dca8:	les    ebp,FWORD PTR [edx-0x1e]
  40dcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcac:	or     edx,0xefb4a7fc
  40dcb2:	mov    bl,0x53
  40dcb4:	shr    ebx,0x8e
  40dcb7:	fdivr  QWORD PTR ds:[ebp-0x76]
  40dcbb:	xchg   ebp,eax
  40dcbc:	gs mov eax,?
  40dcbf:	bound  eax,QWORD PTR [eax]
  40dcc1:	aad    0x3f
  40dcc3:	xchg   ebx,eax
  40dcc4:	ror    BYTE PTR [edx-0x3b4c73a5],1
  40dcca:	test   eax,0xa610c197
  40dccf:	inc    esp
  40dcd0:	mov    DWORD PTR [ebx],ebx
  40dcd2:	cmp    eax,0xc3646ae0
  40dcd7:	xchg   esi,eax
  40dcd8:	xchg   edx,eax
  40dcd9:	inc    edi
  40dcda:	pop    edx
  40dcdb:	cmp    al,0xc5
  40dcdd:	mov    bh,0xd0
  40dcdf:	call   0x7ce098f0
  40dce4:	inc    esi
  40dce5:	cld    
  40dce6:	dec    ebp
  40dce7:	jl     0x40dd4f
  40dce9:	mov    ecx,0xe954e0ad
  40dcee:	out    0xb4,eax
  40dcf0:	aam    0x19
  40dcf2:	outs   dx,BYTE PTR ds:[esi]
  40dcf3:	mov    ch,0xfd
  40dcf5:	out    0xb9,al
  40dcf7:	int    0x3e
  40dcf9:	rol    BYTE PTR [edx],cl
  40dcfb:	fsubr  st,st(4)
  40dcfd:	jmp    0xa3ed:0xd6c4
  40dd03:	retf   0xf27f
  40dd06:	jecxz  0x40dd02
  40dd08:	dec    edi
  40dd09:	arpl   WORD PTR [ecx+ebp*8-0x17],ax
  40dd0d:	daa    
  40dd0e:	scas   eax,DWORD PTR es:[edi]
  40dd0f:	mov    al,BYTE PTR [ecx]
  40dd11:	sub    DWORD PTR [esi+0x58],esp
  40dd14:	cdq    
  40dd15:	fldenv [ecx-0x4f]
  40dd18:	xchg   esi,eax
  40dd19:	dec    edi
  40dd1a:	loop   0x40dcdf
  40dd1c:	jle    0x40dcba
  40dd1e:	mov    ebp,0x8a87302f
  40dd23:	dec    esi
  40dd24:	jb     0x40dcf4
  40dd26:	inc    BYTE PTR [edx+eax*4]
  40dd29:	call   0xc54561c3
  40dd2e:	mov    ss,WORD PTR [ecx+eiz*2]
  40dd31:	jbe    0x40dd0a
  40dd33:	repz mov eax,0x277d07b
  40dd39:	cmp    eax,0x94f850f5
  40dd3e:	jns    0x40dd8c
  40dd40:	fild   DWORD PTR [esi+0x6f68aa9b]
  40dd46:	xchg   esp,eax
  40dd47:	sub    eax,0x1b8ee212
  40dd4c:	scas   al,BYTE PTR es:[edi]
  40dd4d:	ja     0x40ddac
  40dd4f:	imul   ebp,DWORD PTR [ecx],0x90c3bd0a
  40dd55:	imul   ecx,eax,0xffffffa2
  40dd58:	jbe    0x40ddcd
  40dd5a:	or     eax,0x9320ae5f
  40dd5f:	(bad)  
  40dd60:	adc    eax,0x982d82e2
  40dd65:	jnp    0x40dd12
  40dd67:	clc    
  40dd68:	push   ss
  40dd69:	in     eax,dx
  40dd6a:	jb     0x40dd99
  40dd6c:	pop    ecx
  40dd6d:	fsub   st(0),st
  40dd6f:	jbe    0x40dd4d
  40dd71:	or     dl,dl
  40dd73:	inc    ecx
  40dd74:	out    dx,eax
  40dd75:	loope  0x40dd4b
  40dd77:	push   ss
  40dd78:	mov    ah,0x19
  40dd7a:	data16 arpl WORD PTR [edi],bp
  40dd7d:	xor    BYTE PTR [esi-0x679f5d88],cl
  40dd83:	lahf   
  40dd84:	fnstsw WORD PTR [ecx*4-0x2e38ab29]
  40dd8b:	sbb    al,0x2b
  40dd8d:	cld    
  40dd8e:	sbb    dh,BYTE PTR [eax]
  40dd90:	jmp    0x40dd20
  40dd92:	lock inc edx
  40dd94:	push   0xbfa55c7e
  40dd99:	pop    ebx
  40dd9a:	ret    0xa002
  40dd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd9e:	xor    al,0x71
  40dda0:	jmp    0x467:0x9f79642b
  40dda7:	(bad)  
  40dda8:	rcr    BYTE PTR [ebx-0x33],1
  40ddab:	out    0xd4,al
  40ddad:	push   ss
  40ddae:	sub    ch,0x40
  40ddb1:	dec    edx
  40ddb2:	pop    ecx
  40ddb3:	mov    eax,0x34974122
  40ddb8:	cwde   
  40ddb9:	aam    0xa0
  40ddbb:	out    dx,al
  40ddbc:	adc    DWORD PTR [edi+0x5648d797],edi
  40ddc2:	xchg   edx,eax
  40ddc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddc4:	sbb    eax,eax
  40ddc6:	in     eax,dx
  40ddc7:	sbb    eax,0xd42982ac
  40ddcc:	into   
  40ddcd:	sbb    cl,BYTE PTR [edi]
  40ddcf:	vpacksswb xmm5,xmm1,xmm6
  40ddd3:	aaa    
  40ddd4:	addr16 out dx,al
  40ddd6:	cmp    eax,0x76ce6574
  40dddb:	push   esi
  40dddc:	aaa    
  40dddd:	inc    ebp
  40ddde:	sbb    dh,BYTE PTR [ebp+0x2e]
  40dde1:	scas   eax,DWORD PTR es:[edi]
  40dde2:	xor    BYTE PTR ss:[edi+0x3c937f93],dh
  40dde9:	push   esi
  40ddea:	pop    edx
  40ddeb:	jg     0x40ddc4
  40dded:	jge    0x40de0e
  40ddef:	jbe    0x40ddd7
  40ddf1:	inc    ebp
  40ddf2:	popf   
  40ddf3:	ins    BYTE PTR es:[edi],dx
  40ddf4:	int3   
  40ddf5:	jl     0x40ddde
  40ddf7:	call   0xb55b:0xe1397397
  40ddfe:	(bad)
  40de02:	inc    eax
  40de03:	push   es
  40de04:	pop    edi
  40de05:	mov    ebp,0x143af2cc
  40de0a:	jae    0x40dde1
  40de0c:	fcomp  QWORD PTR [ecx-0x31]
  40de0f:	and    eax,0x20963380
  40de14:	add    DWORD PTR [ebx+0x778a0ca5],eax
  40de1a:	arpl   WORD PTR [ebx+ecx*1-0xb],dx
  40de1e:	adc    DWORD PTR [ebx],edx
  40de20:	leave  
  40de21:	cdq    
  40de22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de23:	cmp    dh,BYTE PTR [edi+0x57]
  40de26:	aas    
  40de27:	aas    
  40de28:	inc    esi
  40de29:	fs (bad) 
  40de2c:	cmp    al,0xd3
  40de2e:	add    BYTE PTR [edx+eiz*2],ah
  40de31:	mov    eax,ds:0xbb4177ca
  40de36:	jg     0x40ddc4
  40de38:	push   edx
  40de39:	mov    esi,0xc362e1dc
  40de3e:	pop    ds
  40de3f:	(bad)
  40de43:	(bad)  
  40de44:	rcr    esp,cl
  40de46:	int    0x6
  40de48:	jecxz  0x40deb0
  40de4a:	adc    ah,BYTE PTR [ebp-0x6b41cc32]
  40de50:	sbb    BYTE PTR [ecx-0x5ed94d62],al
  40de56:	popa   
  40de57:	sub    DWORD PTR [ecx],esi
  40de59:	test   edx,esi
  40de5b:	imul   eax,DWORD PTR [ebp+0x6f],0x3e888fc0
  40de62:	imul   ecx,DWORD PTR [ebp-0x46314b1e],0x45
  40de69:	xlat   BYTE PTR ds:[ebx]
  40de6a:	jo     0x40de74
  40de6c:	mov    DWORD PTR [edx-0x2c5db0b7],ecx
  40de72:	je     0x40de0c
  40de74:	xor    BYTE PTR [ecx],al
  40de76:	in     al,dx
  40de77:	jae    0x40de14
  40de79:	add    edi,0xfffffff4
  40de7c:	cld    
  40de7d:	inc    edi
  40de7e:	rol    bh,1
  40de80:	or     BYTE PTR [esp+ebp*2-0xe],al
  40de84:	jo     0x40de6b
  40de86:	xor    DWORD PTR [edi-0xcc291b7],esi
  40de8c:	sub    al,0xbb
  40de8e:	jae    0x40de84
  40de90:	fild   DWORD PTR [eax]
  40de92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de93:	xchg   ecx,eax
  40de94:	inc    ecx
  40de95:	mov    dl,0x93
  40de97:	imul   ebp,ebp,0x40724506
  40de9d:	and    dh,BYTE PTR [edi+0x3f]
  40dea0:	xor    dh,cl
  40dea2:	cmp    eax,0x32001311
  40dea7:	sbb    eax,0xdfcca3e7
  40deac:	mov    dh,0x55
  40deae:	lods   al,BYTE PTR ds:[esi]
  40deaf:	jmp    0x27b2ef3a
  40deb4:	in     eax,0xfd
  40deb6:	ins    DWORD PTR es:[edi],dx
  40deb7:	push   ss
  40deb8:	outs   dx,BYTE PTR ds:[esi]
  40deb9:	jns    0x40de51
  40debb:	sti    
  40debc:	inc    ebx
  40debd:	pop    ebp
  40debe:	cmc    
  40debf:	out    dx,al
  40dec0:	je     0x40de65
  40dec2:	or     eax,0x7a198bc1
  40dec7:	jb     0x40ded9
  40dec9:	inc    edx
  40deca:	mov    eax,0xefe49b75
  40decf:	je     0x40de55
  40ded1:	mov    al,0x33
  40ded3:	mov    ecx,0xffd95996
  40ded8:	cmp    eax,0x38f7af5b
  40dedd:	(bad)  
  40dede:	ss call 0x1503086f
  40dee4:	fbld   TBYTE PTR [esi+0x61e2f882]
  40deea:	icebp  
  40deeb:	and    esi,0xec7e370e
  40def1:	mov    ah,0x11
  40def3:	inc    esp
  40def4:	xor    ecx,DWORD PTR [edi+0x66]
  40def7:	lds    ebx,FWORD PTR ds:0xb89aaec
  40defd:	xlat   BYTE PTR ds:[ebx]
  40defe:	mov    BYTE PTR [esi+0x66],dh
  40df01:	mov    gs,WORD PTR [ebx-0x34dfb345]
  40df07:	(bad)
  40df0a:	adc    ch,al
  40df0c:	(bad)  
  40df0d:	inc    eax
  40df0e:	mov    al,0xba
  40df10:	xchg   ebx,eax
  40df11:	ss mov ch,0x72
  40df14:	pop    ds
  40df15:	sbb    DWORD PTR [eax+0x4],esp
  40df18:	js     0x40dea7
  40df1a:	push   eax
  40df1b:	jp     0x40df21
  40df1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df1e:	inc    eax
  40df1f:	pop    esi
  40df20:	or     al,0x47
  40df22:	(bad)  
  40df23:	ror    BYTE PTR [edi+0x78],cl
  40df26:	sbb    esp,DWORD PTR [edi]
  40df28:	push   es
  40df29:	aam    0x72
  40df2b:	scas   al,BYTE PTR es:[edi]
  40df2c:	ins    BYTE PTR es:[edi],dx
  40df2d:	inc    esi
  40df2e:	daa    
  40df2f:	pop    edi
  40df30:	inc    eax
  40df31:	cld    
  40df32:	jecxz  0x40df21
  40df34:	js     0x40df4b
  40df36:	jnp    0x40df82
  40df38:	push   0xea0b2fbb
  40df3d:	ret    0xd60a
  40df40:	push   edi
  40df41:	push   cs
  40df42:	std    
  40df43:	mov    WORD PTR [eax],cs
  40df45:	sbb    edx,DWORD PTR [edx]
  40df47:	(bad)  
  40df48:	fiadd  WORD PTR [edi]
  40df4a:	outs   dx,DWORD PTR ds:[esi]
  40df4b:	test   DWORD PTR [esi-0x2f],esi
  40df4e:	bound  eax,QWORD PTR [ebp-0x60]
  40df51:	cdq    
  40df52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df53:	jne    0x40dee9
  40df55:	xchg   esp,eax
  40df56:	rcr    DWORD PTR [eax-0x6d],cl
  40df59:	cmp    al,0x8e
  40df5b:	mov    ecx,0x1ea8a2d6
  40df60:	pop    ebp
  40df61:	sti    
  40df62:	push   esp
  40df63:	and    DWORD PTR [eax+0x1b905c80],eax
  40df69:	sub    DWORD PTR [eax*8-0x2d800650],ebx
  40df70:	sbb    ebx,edx
  40df72:	xchg   ecx,eax
  40df74:	cli    
  40df75:	jg     0x40df8e
  40df77:	out    dx,al
  40df78:	mov    ch,0xcd
  40df7a:	jle    0x40dfc6
  40df7c:	jg     0x40df4a
  40df7e:	jns    0x40df6a
  40df80:	mov    dh,0x42
  40df82:	mov    edx,0x63f0068f
  40df87:	fimul  DWORD PTR [ebx+0x4a]
  40df8a:	ret    0x5c08
  40df8d:	dec    edx
  40df8e:	jecxz  0x40df40
  40df90:	iret   
  40df91:	lods   al,BYTE PTR ds:[esi]
  40df92:	jmp    0x889937e1
  40df97:	cmp    bl,bl
  40df99:	mov    ?,WORD PTR [edx+0x5b]
  40df9c:	and    eax,ecx
  40df9e:	retf   0xfbdc
  40dfa1:	jno    0x40df9e
  40dfa3:	scas   eax,DWORD PTR es:[edi]
  40dfa4:	iret   
  40dfa5:	add    DWORD PTR [ebx-0x5b],0x53
  40dfa9:	jmp    0x300c0f2f
  40dfae:	mov    al,0xc0
  40dfb0:	(bad)  
  40dfb1:	sti    
  40dfb2:	mov    edi,0xb8895aae
  40dfb7:	inc    edx
  40dfb8:	test   al,dh
  40dfba:	mov    dh,0x6e
  40dfbc:	sar    BYTE PTR [esi+0x19],1
  40dfbf:	repz adc al,0xf6
  40dfc2:	push   esi
  40dfc3:	arpl   bp,bp
  40dfc5:	outs   dx,DWORD PTR ds:[esi]
  40dfc6:	cld    
  40dfc7:	pusha  
  40dfc8:	or     ecx,DWORD PTR ds:0xe0f86adb
  40dfce:	push   ebp
  40dfcf:	pop    eax
  40dfd0:	outs   dx,BYTE PTR ds:[esi]
  40dfd1:	fcom   QWORD PTR [esi-0x3fb2dac5]
  40dfd7:	in     al,0xf8
  40dfd9:	(bad)  
  40dfda:	xor    al,0x5b
  40dfdc:	push   ecx
  40dfdd:	mov    ch,0x66
  40dfdf:	cmc    
  40dfe0:	push   cs
  40dfe1:	js     0x40df8a
  40dfe3:	dec    edi
  40dfe4:	fst    QWORD PTR ds:[eax+0x27]
  40dfe8:	fist   DWORD PTR [eax+0x71d66093]
  40dfee:	dec    ebx
  40dfef:	jns    0x40dfdf
  40dff1:	pop    ebx
  40dff2:	jne    0x40e00e
  40dff4:	mov    ds:0x861726b1,al
  40dff9:	and    BYTE PTR [ebp+0x12c0f987],ch
  40dfff:	push   esi
  40e000:	xlat   BYTE PTR ds:[ebx]
  40e001:	(bad)  
  40e002:	cli    
  40e003:	cmp    al,0x42
  40e005:	pusha  
  40e006:	scas   al,BYTE PTR es:[edi]
  40e007:	scas   eax,DWORD PTR es:[edi]
  40e008:	ret    
  40e009:	data16 and BYTE PTR [eax+eiz*8],ch
  40e00d:	icebp  
  40e00e:	push   DWORD PTR [ebx]
  40e010:	xchg   DWORD PTR [eax+0x635d906c],ecx
  40e016:	les    eax,FWORD PTR [edi+0x6903414a]
  40e01c:	pop    ss
  40e01d:	test   eax,0xe04d8e22
  40e022:	out    0x45,al
  40e024:	sub    edi,edi
  40e026:	push   edx
  40e027:	bnd gs call 0x8144a977
  40e02e:	stos   BYTE PTR es:[edi],al
  40e02f:	in     al,0x6c
  40e031:	adc    eax,0xff813df8
  40e036:	loop   0x40e03b
  40e038:	bt     DWORD PTR [ebp+0x496c78da],ecx
  40e03f:	not    DWORD PTR [esi+0x2403cb8a]
  40e045:	mov    ds:0x9c230736,eax
  40e04a:	add    BYTE PTR [edx],cl
  40e04c:	mul    BYTE PTR [ebp+0x20870529]
  40e052:	imul   ebp,esp,0x41d6bd00
  40e058:	imul   DWORD PTR [esi-0x71]
  40e05b:	mov    eax,0x88e071a2
  40e060:	xor    al,0x2
  40e062:	cmp    BYTE PTR [ebp+0x732f6dbf],al
  40e068:	retf   
  40e069:	fcomp  DWORD PTR [ebp+0x3]
  40e06c:	ja     0x40e08e
  40e06e:	sbb    al,0x84
  40e070:	push   0xffffffed
  40e072:	dec    edx
  40e073:	adc    DWORD PTR [ebp-0x61],ebx
  40e076:	pop    ecx
  40e077:	pop    es
  40e078:	dec    ebx
  40e079:	dec    ebx
  40e07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07b:	in     eax,dx
  40e07c:	sahf   
  40e07d:	fmulp  st(1),st
  40e07f:	fdiv   st(4),st
  40e081:	(bad)  
  40e082:	jle    0x40e0b4
  40e084:	cmp    DWORD PTR [ebp+0x6b],ebx
  40e087:	dec    ebx
  40e088:	sbb    al,0x8a
  40e08a:	aaa    
  40e08b:	mov    bl,0xd3
  40e08d:	push   0x5a
  40e08f:	sub    eax,0x1afcf90f
  40e094:	or     edx,eax
  40e096:	jg     0x40e01f
  40e098:	sub    BYTE PTR [eax+0x3f],dh
  40e09b:	dec    edi
  40e09c:	or     cl,BYTE PTR [ebp-0x43]
  40e09f:	or     al,0x98
  40e0a1:	inc    edi
  40e0a2:	test   esi,ecx
  40e0a4:	mov    esi,0x69a86730
  40e0a9:	push   eax
  40e0aa:	cs push cs
  40e0ac:	push   ss
  40e0ad:	jb     0x40e06c
  40e0af:	test   BYTE PTR [ebp-0x34],dl
  40e0b2:	or     eax,0x207d40b5
  40e0b7:	(bad)  
  40e0b8:	int    0xf0
  40e0ba:	sub    ebp,edx
  40e0bc:	into   
  40e0bd:	sub    ebp,ebx
  40e0bf:	xchg   edx,eax
  40e0c0:	(bad)  
  40e0c1:	rcr    BYTE PTR [edi+ecx*8],1
  40e0c4:	mov    dh,0x8e
  40e0c6:	out    dx,al
  40e0c7:	xchg   edx,eax
  40e0c8:	leave  
  40e0c9:	adc    DWORD PTR [ecx],0xffffff9a
  40e0cc:	pop    esp
  40e0cd:	mov    ah,0xa5
  40e0cf:	pop    es
  40e0d0:	fst    QWORD PTR [ebx]
  40e0d2:	inc    ecx
  40e0d3:	fwait
  40e0d4:	dec    ecx
  40e0d5:	rol    DWORD PTR [ecx],1
  40e0d7:	int    0x7e
  40e0d9:	xchg   edx,eax
  40e0da:	mov    ebp,0x81a95cf4
  40e0df:	sbb    DWORD PTR [edi+0x53bd6602],edx
  40e0e5:	xor    ch,dh
  40e0e7:	retf   
  40e0e8:	in     al,0x9c
  40e0ea:	retf   
  40e0eb:	add    al,BYTE PTR [eax+ebx*8]
  40e0ee:	adc    BYTE PTR [edx],ch
  40e0f0:	xor    al,0x43
  40e0f2:	cvtps2pd xmm4,xmm2
  40e0f5:	mov    eax,0x2259c4d1
  40e0fa:	mov    ebx,0xc161d57
  40e0ff:	sar    DWORD PTR [si+0x1c76],1
  40e104:	cmp    esi,esp
  40e106:	js     0x40e08c
  40e108:	inc    ecx
  40e109:	retf   0xca40
  40e10c:	mov    al,ds:0x342e4a4
  40e111:	stos   DWORD PTR es:[edi],eax
  40e112:	mov    ecx,0xe849af9c
  40e117:	mov    bh,0x18
  40e119:	adc    eax,0xe0061794
  40e11e:	adc    dh,BYTE PTR [ebx]
  40e120:	out    0x57,eax
  40e122:	lea    ecx,[ebp+0x692defb1]
  40e128:	call   0xfd46520e
  40e12d:	xor    dl,BYTE PTR [edi+0x1bbcd363]
  40e133:	dec    edi
  40e134:	mov    WORD PTR [edx],?
  40e136:	fdivr  DWORD PTR [ecx+0x5d8675c0]
  40e13c:	ficom  WORD PTR [eax-0x16ef9cc6]
  40e142:	push   esp
  40e143:	pop    esp
  40e144:	(bad)  
  40e146:	mov    ebp,0xe9b42a26
  40e14b:	aam    0xf2
  40e14d:	mov    ds:0x6731fdb5,eax
  40e152:	out    dx,al
  40e153:	push   ds
  40e154:	int    0x7b
  40e156:	sub    ecx,DWORD PTR ds:0x950a0a7b
  40e15c:	dec    ebp
  40e15d:	fwait
  40e15e:	or     BYTE PTR [eax+0x5],0xd8
  40e162:	mov    ah,0xc4
  40e164:	push   esp
  40e165:	cmp    al,0x6b
  40e167:	mov    cl,0xbc
  40e169:	pusha  
  40e16a:	test   BYTE PTR [edx+ecx*1-0x1d295026],ah
  40e171:	popa   
  40e172:	mov    ?,WORD PTR [ebx+0x46]
  40e175:	mov    bh,0xbd
  40e177:	push   edx
  40e178:	xor    edi,esi
  40e17a:	rol    DWORD PTR [edx-0x61],0x37
  40e17e:	or     dl,BYTE PTR [edi+0x51e4cf2d]
  40e184:	or     BYTE PTR [ebp+0x3fb7daf4],dl
  40e18a:	push   ss
  40e18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18c:	mov    DWORD PTR [edi-0x7f],ecx
  40e18f:	mov    edi,0x182f201f
  40e194:	pop    ds
  40e195:	div    BYTE PTR [edi+0x1263ba25]
  40e19b:	push   ebp
  40e19c:	fwait
  40e19d:	mov    DWORD PTR [edx],esi
  40e19f:	btr    DWORD PTR [ebx+0x76],ecx
  40e1a3:	in     al,dx
  40e1a4:	iret   
  40e1a5:	or     al,bl
  40e1a7:	les    ecx,FWORD PTR [ecx+0x2f757368]
  40e1ad:	mov    cl,0x1b
  40e1af:	sub    BYTE PTR [eax-0x72],dh
  40e1b2:	adc    DWORD PTR [eax],esp
  40e1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1b5:	sub    bh,bh
  40e1b7:	push   edx
  40e1b8:	jae    0x40e1f7
  40e1ba:	or     al,BYTE PTR [edi+0x63]
  40e1bd:	xchg   edi,eax
  40e1be:	inc    ebp
  40e1bf:	fild   DWORD PTR [edi+0x32c728b6]
  40e1c5:	sub    BYTE PTR [edi],0x34
  40e1c8:	pop    ss
  40e1c9:	pop    esi
  40e1ca:	add    dh,BYTE PTR [eax+0x41a0d8fc]
  40e1d0:	and    DWORD PTR [ebx+0x6cc73049],esi
  40e1d6:	mov    al,BYTE PTR [edi-0x35c7249a]
  40e1dc:	cs inc esp
  40e1de:	mov    ds:0xd2e74e86,eax
  40e1e3:	test   al,0x6f
  40e1e5:	cmp    DWORD PTR [esi-0x7a],eax
  40e1e8:	add    ch,0xe2
  40e1eb:	repnz ins BYTE PTR es:[edi],dx
  40e1ed:	retf   
  40e1ee:	cmc    
  40e1ef:	xchg   ecx,eax
  40e1f0:	jmp    0x40e1e0
  40e1f2:	inc    eax
  40e1f3:	jno    0x40e1d0
  40e1f5:	mov    eax,ds:0xf59e48db
  40e1fa:	retf   
  40e1fb:	lock inc esi
  40e1fd:	push   esi
  40e1fe:	mov    eax,0xb63b4f0d
  40e203:	mov    ds,WORD PTR [ecx+0x19]
  40e206:	dec    edi
  40e207:	fstp   DWORD PTR [edx+0x26]
  40e20a:	mov    bl,0x63
  40e20c:	pop    esp
  40e20d:	sub    DWORD PTR [ecx+0x353a1a0e],edi
  40e213:	ss xchg ebp,eax
  40e215:	xchg   ebp,eax
  40e216:	cmp    al,0x24
  40e218:	arpl   WORD PTR [ecx],bp
  40e21a:	outs   dx,BYTE PTR ds:[esi]
  40e21b:	out    dx,eax
  40e21c:	sub    al,0x7c
  40e21e:	or     dh,cl
  40e220:	(bad)  
  40e221:	xchg   edi,eax
  40e222:	mov    ah,BYTE PTR [ecx+0x5b]
  40e225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e226:	push   edx
  40e227:	int    0x18
  40e229:	adc    BYTE PTR [esp+esi*2],0x56
  40e22d:	inc    edx
  40e22e:	lea    esp,[edi+0x55]
  40e231:	sub    al,0x24
  40e233:	sub    DWORD PTR [edi+edx*4-0x74f3eec6],ecx
  40e23a:	xlat   BYTE PTR ds:[ebx]
  40e23b:	out    0xf4,eax
  40e23d:	inc    esi
  40e23e:	loopne 0x40e247
  40e240:	pop    edx
  40e241:	pushf  
  40e242:	test   ebx,edx
  40e244:	ja     0x40e27f
  40e246:	mov    edi,0x3fce056f
  40e24b:	xor    DWORD PTR [edi-0x47e080f],ebp
  40e251:	shl    BYTE PTR cs:[ebx-0x1f],1
  40e255:	pop    eax
  40e256:	pop    ds
  40e257:	popf   
  40e258:	cld    
  40e259:	outs   dx,BYTE PTR ds:[esi]
  40e25a:	imul   BYTE PTR [ecx+0x68c78cdb]
  40e260:	test   esp,0x88ea3fd0
  40e266:	push   cs
  40e267:	fdivp  st(5),st
  40e269:	loopne 0x40e2b6
  40e26b:	imul   edi,DWORD PTR [ecx],0x348d0f5f
  40e271:	or     eax,0xab39a8b6
  40e276:	(bad)  ds:0x2d7592b6
  40e27c:	push   ss
  40e27d:	inc    ebp
  40e27e:	cmp    eax,0xdde9cbbb
  40e283:	je     0x40e293
  40e285:	into   
  40e286:	test   BYTE PTR [esi-0x704d5754],ah
  40e28c:	out    0xcc,eax
  40e28e:	rol    DWORD PTR [ecx+0x4146a9e],cl
  40e294:	xchg   esp,eax
  40e295:	jns    0x40e313
  40e297:	pop    ecx
  40e298:	or     al,0x53
  40e29a:	into   
  40e29b:	or     al,0xce
  40e29d:	loope  0x40e317
  40e29f:	or     edx,ebx
  40e2a1:	ds (bad) 
  40e2a3:	repnz pop edx
  40e2a5:	pop    ecx
  40e2a6:	mov    bl,0x86
  40e2a8:	aam    0xc2
  40e2aa:	dec    esi
  40e2ab:	adc    BYTE PTR [edx+0x3ab60fa],al
  40e2b1:	out    dx,eax
  40e2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2b3:	mov    BYTE PTR [ebx],al
  40e2b5:	jl     0x40e267
  40e2b7:	es nop
  40e2b9:	pop    ecx
  40e2ba:	cmp    ebp,DWORD PTR [ebp+0x7b]
  40e2bd:	ds xchg ebx,eax
  40e2bf:	mov    ah,0xcd
  40e2c1:	and    BYTE PTR [ecx-0x2742a888],ah
  40e2c7:	bnd jns 0x40e29e
  40e2ca:	into   
  40e2cb:	inc    esp
  40e2cc:	xlat   BYTE PTR ds:[ebx]
  40e2cd:	dec    ecx
  40e2ce:	xor    DWORD PTR [ebx-0x45],0x7b25405c
  40e2d5:	ror    BYTE PTR [ecx],1
  40e2d7:	push   eax
  40e2d8:	xchg   esi,eax
  40e2d9:	jno    0x40e2d0
  40e2db:	in     eax,dx
  40e2dc:	ja     0x40e290
  40e2de:	dec    ecx
  40e2df:	jecxz  0x40e35b
  40e2e1:	adc    al,BYTE PTR [ebp+0x2135f30]
  40e2e7:	push   edi
  40e2e8:	int    0x49
  40e2ea:	push   0xffffffeb
  40e2ec:	sub    eax,0x525ec5d7
  40e2f1:	dec    esp
  40e2f2:	and    DWORD PTR [eax],eax
  40e2f4:	adc    bh,BYTE PTR [edx+0x3098341f]
  40e2fa:	jecxz  0x40e32e
  40e2fc:	or     al,0xa6
  40e2fe:	mov    bl,0xe2
  40e300:	push   ecx
  40e301:	js     0x40e2af
  40e303:	ja     0x40e2df
  40e305:	push   0x42
  40e307:	xchg   ecx,eax
  40e308:	or     eax,0x622fd601
  40e30d:	popa   
  40e30e:	cdq    
  40e30f:	outs   dx,DWORD PTR ds:[esi]
  40e310:	xor    esi,DWORD PTR [edx-0x1540922c]
  40e316:	test   al,0xf9
  40e318:	fisub  WORD PTR [edx]
  40e31a:	fiadd  WORD PTR ds:0xfbb18759
  40e320:	mov    edx,esi
  40e322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e323:	loope  0x40e316
  40e325:	adc    al,0x34
  40e327:	ins    BYTE PTR es:[edi],dx
  40e328:	push   ebp
  40e329:	jnp    0x40e2ff
  40e32b:	lods   eax,DWORD PTR ds:[esi]
  40e32c:	push   ebx
  40e32d:	je     0x40e2b9
  40e32f:	cmp    ebx,DWORD PTR [ebp+0x28]
  40e332:	int3   
  40e333:	add    bh,BYTE PTR [ebp-0x54]
  40e336:	imul   eax,DWORD PTR [edx-0x69],0x91d2403a
  40e33d:	in     al,dx
  40e33e:	push   ebx
  40e33f:	xor    ebp,ebx
  40e341:	cwde   
  40e342:	call   0xb2f3f9d4
  40e347:	inc    ebx
  40e348:	xchg   edi,eax
  40e349:	jle    0x40e3c8
  40e34b:	test   al,0x8a
  40e34d:	and    cl,BYTE PTR [ebp-0x7c90a9cd]
  40e353:	test   eax,0x8b13397b
  40e358:	call   0x17ad073a
  40e35d:	lea    eax,[ebp+0x350ec6b9]
  40e363:	nop
  40e364:	stos   BYTE PTR es:[edi],al
  40e365:	inc    ebx
  40e366:	xchg   edi,eax
  40e367:	xor    DWORD PTR [eax+0x26420831],eax
  40e36d:	ja     0x40e391
  40e36f:	dec    edi
  40e370:	mov    eax,DWORD PTR [eax-0x43]
  40e373:	(bad)  
  40e374:	push   ss
  40e375:	jo     0x40e38d
  40e377:	hlt    
  40e378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e379:	sbb    DWORD PTR [edi+eax*8-0x7a],esi
  40e37d:	jecxz  0x40e314
  40e37f:	push   ecx
  40e380:	retf   
  40e381:	mov    eax,ds:0x128d8cba
  40e386:	sbb    BYTE PTR [esi-0x2],bl
  40e389:	xchg   ecx,eax
  40e38a:	inc    eax
  40e38b:	mov    bh,0x5c
  40e38d:	bound  esi,QWORD PTR [ecx+0x6b620ea0]
  40e393:	shl    BYTE PTR [esi+0x44d2dca0],1
  40e399:	xor    eax,0x21330efd
  40e39e:	pop    ds
  40e39f:	cmp    BYTE PTR [esp+esi*4+0x12],0xa1
  40e3a4:	or     ebx,eax
  40e3a6:	sub    eax,0xfc652cc6
  40e3ab:	jbe    0x40e414
  40e3ad:	popf   
  40e3ae:	jb     0x40e3d4
  40e3b0:	jp     0x40e41c
  40e3b2:	rol    al,0x86
  40e3b5:	std    
  40e3b6:	test   DWORD PTR ds:0x28bc71e0,edi
  40e3bc:	pop    es
  40e3bd:	pusha  
  40e3be:	push   0xffffffd6
  40e3c0:	repnz outs dx,DWORD PTR ds:[esi]
  40e3c2:	ret    0xd5f0
  40e3c5:	jmp    0x9177a95c
  40e3ca:	retf   0x5aa4
  40e3cd:	stc    
  40e3ce:	adc    BYTE PTR [edx+0x14],ah
  40e3d1:	cmp    esi,ecx
  40e3d3:	sub    BYTE PTR [edx],0x47
  40e3d6:	std    
  40e3d7:	outs   dx,BYTE PTR ds:[esi]
  40e3d8:	sub    DWORD PTR [esi-0x61],ecx
  40e3db:	or     dl,BYTE PTR [ebx]
  40e3dd:	inc    esi
  40e3de:	pusha  
  40e3df:	or     eax,0x2f0be5b1
  40e3e4:	das    
  40e3e5:	fs test BYTE PTR ss:[ebp-0x2a],dl
  40e3ea:	pop    es
  40e3eb:	int    0xab
  40e3ed:	inc    ebp
  40e3ee:	mov    ds:0x2c21d85a,eax
  40e3f3:	ja     0x40e3a0
  40e3f5:	fimul  DWORD PTR [esi+0x15]
  40e3f8:	dec    DWORD PTR [esi-0xf60d52b]
  40e3fe:	cmp    ah,dl
  40e400:	loope  0x40e3b7
  40e402:	ret    0x4f45
  40e405:	add    ebp,DWORD PTR [eax]
  40e407:	popf   
  40e408:	clc    
  40e409:	xor    al,0x9c
  40e40b:	jo     0x40e451
  40e40d:	mov    edx,eax
  40e40f:	dec    edi
  40e410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e411:	mul    BYTE PTR [ecx-0xf]
  40e414:	fwait
  40e415:	cld    
  40e416:	rcl    BYTE PTR [edi+esi*2-0x4e],cl
  40e41a:	cmp    ebp,0xe65d4748
  40e420:	adc    dl,dh
  40e422:	mov    esi,0x158cd4bc
  40e427:	cld    
  40e428:	inc    edx
  40e429:	xchg   ecx,eax
  40e42a:	in     al,0xa8
  40e42c:	pop    es
  40e42d:	or     BYTE PTR [ecx-0x422f649],0x6
  40e434:	cmp    eax,0x9ca0f8c4
  40e439:	xchg   esi,eax
  40e43a:	pop    ds
  40e43b:	fisttp DWORD PTR [edi]
  40e43d:	add    ah,BYTE PTR [eax+0x4b]
  40e440:	loope  0x40e44f
  40e442:	loop   0x40e437
  40e444:	inc    ecx
  40e445:	add    DWORD PTR [eax+0x17bcbec9],edx
  40e44b:	outs   dx,BYTE PTR ds:[esi]
  40e44c:	in     eax,dx
  40e44d:	fbld   TBYTE PTR [esi-0x7cce2e0e]
  40e453:	pop    es
  40e454:	and    ch,ch
  40e456:	and    DWORD PTR [ecx-0x80],ecx
  40e459:	shl    BYTE PTR [edi+0x4c],0x6b
  40e45d:	sub    DWORD PTR [ecx-0x2c799a11],ebx
  40e463:	(bad)  
  40e465:	lock bound eax,QWORD PTR [ecx]
  40e468:	mov    ah,0x18
  40e46a:	lods   eax,DWORD PTR ds:[esi]
  40e46b:	pusha  
  40e46c:	mul    DWORD PTR [esi]
  40e46e:	pop    es
  40e46f:	stc    
  40e470:	stos   DWORD PTR es:[edi],eax
  40e471:	pop    ebp
  40e472:	pop    ss
  40e473:	out    dx,eax
  40e474:	out    dx,eax
  40e475:	mov    ah,0x75
  40e477:	rcr    BYTE PTR [eax+0xd06dd1a],1
  40e47d:	adc    BYTE PTR [ecx-0x7336746a],0xb4
  40e484:	fst    DWORD PTR ss:[ebp-0x48]
  40e488:	test   DWORD PTR [ebp+0x1728a848],0x1e6e8623
  40e492:	push   ds
  40e493:	pusha  
  40e494:	cmc    
  40e495:	inc    ebx
  40e496:	dec    ecx
  40e497:	loop   0x40e4ce
  40e499:	mov    ds:0x6761f5b8,al
  40e49e:	sbb    DWORD PTR [esp+ebp*4+0x12],esp
  40e4a2:	lahf   
  40e4a3:	loopne 0x40e436
  40e4a5:	sub    al,BYTE PTR [ebp-0x47c1f018]
  40e4ab:	outs   dx,BYTE PTR ds:[esi]
  40e4ac:	xchg   DWORD PTR [esi],ebx
  40e4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4af:	and    BYTE PTR ds:0xad85c142,0x91
  40e4b6:	cmc    
  40e4b7:	xchg   edx,eax
  40e4b8:	call   0x9372a2b7
  40e4bd:	dec    edi
  40e4be:	push   ebp
  40e4bf:	mov    ecx,0xd3508870
  40e4c4:	add    DWORD PTR [edi-0x52b31f58],esi
  40e4ca:	xor    BYTE PTR [eax],al
  40e4cc:	jb     0x40e540
  40e4ce:	xabort 0x14
  40e4d1:	sbb    esi,edi
  40e4d3:	int    0x4f
  40e4d5:	and    BYTE PTR [edi+0x18],ah
  40e4d8:	mov    ecx,0x72d24301
  40e4dd:	or     al,0x1f
  40e4df:	out    0x68,al
  40e4e1:	stc    
  40e4e2:	ret    0x2df1
  40e4e5:	mov    DWORD PTR [eax+esi*1+0x4699024d],ecx
  40e4ec:	loope  0x40e494
  40e4ee:	sub    esp,eax
  40e4f0:	mov    ecx,0xfefa48bd
  40e4f5:	sar    DWORD PTR [ebx+0xc],0x61
  40e4f9:	mov    esp,0xfc6d3e5c
  40e4fe:	adc    DWORD PTR [ebx+ebp*4-0x5b50c670],esi
  40e505:	fadd   DWORD PTR [edi-0x397ceac8]
  40e50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e50c:	in     eax,dx
  40e50d:	aam    0xdd
  40e50f:	rcl    DWORD PTR [ecx],0x55
  40e512:	lock push 0x37
  40e515:	mov    esi,0xc6919492
  40e51a:	or     al,0x32
  40e51c:	adc    edi,0xfffffff5
  40e51f:	icebp  
  40e520:	rcl    BYTE PTR [eax+0x4d0d04ba],1
  40e526:	mov    ds,WORD PTR [edi+0x78]
  40e529:	pop    ss
  40e52a:	ins    BYTE PTR es:[edi],dx
  40e52b:	push   ss
  40e52c:	or     al,0x30
  40e52e:	dec    eax
  40e52f:	pop    ecx
  40e530:	sbb    DWORD PTR [edx],esi
  40e532:	outs   dx,BYTE PTR ds:[esi]
  40e533:	mov    BYTE PTR [esi+0x32],bh
  40e536:	inc    edi
  40e537:	xor    al,ch
  40e539:	xchg   DWORD PTR [ecx-0x16],ebp
  40e53c:	xchg   BYTE PTR [edi-0x30],ah
  40e53f:	into   
  40e540:	daa    
  40e541:	shl    DWORD PTR ds:0xb5049999,cl
  40e547:	dec    ecx
  40e548:	fst    DWORD PTR [ebp-0x2ddf1f0f]
  40e54e:	add    DWORD PTR [edi+0x37fc0273],esi
  40e554:	ss adc eax,0x5db26bc8
  40e55a:	dec    ebp
  40e55b:	mov    dh,0x99
  40e55d:	dec    eax
  40e55e:	mov    ebx,0x572b2d2c
  40e563:	into   
  40e564:	push   ds
  40e565:	xchg   esp,eax
  40e566:	test   BYTE PTR [ebx],bl
  40e568:	cld    
  40e569:	imul   BYTE PTR [eax-0x52]
  40e56c:	xor    edi,DWORD PTR [ebx]
  40e56e:	mov    ecx,0xbe178275
  40e573:	and    ebp,DWORD PTR [esi]
  40e575:	or     eax,0x7937e2d
  40e57a:	in     al,0xc
  40e57c:	icebp  
  40e57d:	imul   eax,DWORD PTR [ebp+0x607b5a78],0x31a6966
  40e587:	(bad)  
  40e588:	mov    esi,0xf0a6454d
  40e58d:	mov    ds:0x4878c72f,al
  40e592:	test   eax,0x4737c133
  40e597:	push   ebx
  40e598:	lods   eax,DWORD PTR ds:[esi]
  40e599:	loopne 0x40e57b
  40e59b:	pusha  
  40e59c:	cs pop eax
  40e59e:	mov    edi,DWORD PTR [edi-0x2a4cf6a7]
  40e5a4:	push   0x414cb765
  40e5a9:	inc    edi
  40e5aa:	xor    eax,0x5d129cdb
  40e5af:	or     BYTE PTR [eax-0x1d293ad2],dh
  40e5b5:	pop    esp
  40e5b6:	pop    es
  40e5b7:	and    DWORD PTR [ebp+0x73],0xeb784cb5
  40e5be:	pop    es
  40e5bf:	gs mov dh,0x40
  40e5c2:	shr    DWORD PTR [edx],0x69
  40e5c5:	push   edx
  40e5c6:	ins    DWORD PTR es:[edi],dx
  40e5c7:	mov    edi,0x75984361
  40e5cc:	nop
  40e5cd:	call   0x17a72f3
  40e5d2:	ret    0xfe84
  40e5d5:	sti    
  40e5d6:	rcr    BYTE PTR [edi-0x7f],1
  40e5d9:	pop    ds
  40e5da:	aaa    
  40e5db:	xchg   edi,eax
  40e5dc:	out    dx,eax
  40e5dd:	push   ss
  40e5de:	fisttp QWORD PTR [edx]
  40e5e0:	jb     0x40e5e9
  40e5e2:	shl    DWORD PTR [edx],cl
  40e5e4:	mov    al,0xaf
  40e5e6:	pusha  
  40e5e7:	push   ebp
  40e5e8:	clc    
  40e5e9:	sahf   
  40e5ea:	jne    0x40e630
  40e5ec:	push   cs
  40e5ed:	out    0x81,al
  40e5ef:	(bad)
  40e5f2:	sbb    edi,DWORD PTR [ebx+0x2f95328]
  40e5f8:	push   ebp
  40e5f9:	add    BYTE PTR [edi],bl
  40e5fb:	enter  0x1c8c,0xd4
  40e5ff:	sub    bl,dl
  40e601:	adc    edx,DWORD PTR [esi+0x2d]
  40e604:	mov    ebp,0xb0954ee6
  40e609:	repz clc 
  40e60b:	clc    
  40e60c:	sub    cl,BYTE PTR [edi]
  40e60e:	and    BYTE PTR [edi-0x54],cl
  40e611:	pushf  
  40e612:	fs fwait
  40e614:	cld    
  40e615:	ret    0xaa39
  40e618:	je     0x40e5ce
  40e61a:	fs dec edx
  40e61c:	fidivr WORD PTR [eax+0x77]
  40e61f:	mov    DWORD PTR [edx-0x5c0d4f7c],edx
  40e625:	mov    eax,0xe7aed4bf
  40e62a:	shl    ebx,1
  40e62c:	inc    eax
  40e62d:	dec    edi
  40e62e:	jmp    DWORD PTR [eax+0x72]
  40e631:	fiadd  DWORD PTR [ebp+0x6a]
  40e634:	adc    eax,0xdbbc1131
  40e639:	test   eax,0xe6be019a
  40e63e:	inc    DWORD PTR [esi-0x3f]
  40e641:	dec    edi
  40e642:	mov    ecx,0x64547f15
  40e647:	push   cs
  40e648:	sub    dh,BYTE PTR [ebp+0x6eba2a7]
  40e64e:	cwde   
  40e64f:	cmp    DWORD PTR [edx],esp
  40e651:	xchg   edx,eax
  40e652:	call   0x520de34c
  40e657:	and    BYTE PTR [esi+0x5a],dl
  40e65a:	pushf  
  40e65b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40e65d:	scas   al,BYTE PTR es:[edi]
  40e65e:	and    eax,edx
  40e660:	(bad)  
  40e661:	xchg   edx,eax
  40e662:	scas   al,BYTE PTR es:[edi]
  40e663:	sbb    BYTE PTR [esi],dh
  40e665:	stos   BYTE PTR es:[edi],al
  40e666:	xchg   ebp,eax
  40e667:	iret   
  40e668:	push   es
  40e669:	mov    dh,0x6d
  40e66b:	or     DWORD PTR [ebp-0x16f1dab],edi
  40e671:	into   
  40e672:	inc    ebx
  40e673:	push   ds
  40e674:	cmp    al,al
  40e676:	xchg   DWORD PTR [edx-0x7c18cad2],edi
  40e67c:	imul   ebx,ebp,0xfffffff9
  40e67f:	or     bh,dh
  40e681:	dec    esi
  40e682:	daa    
  40e683:	call   0xecb9453d
  40e688:	fidivr WORD PTR [esi]
  40e68a:	sar    BYTE PTR [eax-0x43],1
  40e68d:	jmp    0x46b:0x5e28ce47
  40e694:	lods   al,BYTE PTR ds:[esi]
  40e695:	popf   
  40e696:	sub    DWORD PTR [ebp+0x7f206e3d],esp
  40e69c:	icebp  
  40e69d:	or     esp,DWORD PTR [eax-0x1]
  40e6a0:	js     0x40e677
  40e6a2:	cmp    edi,DWORD PTR [eax+eax*1-0x52b8960]
  40e6a9:	fnsave [edx]
  40e6ab:	mov    ah,0x27
  40e6ad:	sub    esi,DWORD PTR [esi+0x486b4574]
  40e6b3:	retf   
  40e6b4:	xor    eax,0x898f0d5c
  40e6b9:	add    DWORD PTR [ecx+0xc],ecx
  40e6bc:	xchg   esi,eax
  40e6bd:	pop    edi
  40e6be:	and    BYTE PTR [ebx+0x50],cl
  40e6c1:	ret    
  40e6c2:	scas   al,BYTE PTR es:[di]
  40e6c4:	mov    esp,0x99757f7a
  40e6c9:	cmp    BYTE PTR [eax-0x2c],dh
  40e6cc:	sbb    al,BYTE PTR [esp+esi*4-0x7d]
  40e6d0:	into   
  40e6d1:	lods   al,BYTE PTR ds:[esi]
  40e6d2:	dec    ecx
  40e6d3:	and    BYTE PTR [ebx-0x7d],dh
  40e6d6:	add    al,0x79
  40e6d8:	cmp    BYTE PTR [eax-0x62],bh
  40e6db:	into   
  40e6dc:	xchg   ebx,eax
  40e6dd:	xchg   BYTE PTR [esi+eax*1+0xb],ch
  40e6e1:	lods   eax,DWORD PTR ds:[esi]
  40e6e2:	jne    0x40e6a6
  40e6e4:	icebp  
  40e6e5:	inc    ebp
  40e6e6:	(bad)  
  40e6e7:	ins    DWORD PTR es:[edi],dx
  40e6e8:	pop    ecx
  40e6e9:	sub    eax,0x2675f2fb
  40e6ee:	sub    al,bl
  40e6f0:	inc    ecx
  40e6f1:	ja     0x40e726
  40e6f3:	dec    esi
  40e6f4:	pop    ss
  40e6f5:	adc    dl,BYTE PTR [eax]
  40e6f7:	mov    ecx,0xeb538701
  40e6fc:	adc    esi,DWORD PTR [ebp+0x2723be5b]
  40e702:	loopne 0x40e77a
  40e704:	ret    0x3e0f
  40e707:	pop    ebx
  40e708:	sub    dl,BYTE PTR [ecx+0x10]
  40e70b:	or     al,0x2b
  40e70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e70e:	xchg   BYTE PTR [ecx],dh
  40e710:	test   al,0x3a
  40e712:	push   ss
  40e713:	cwde   
  40e714:	jo     0x40e78c
  40e716:	dec    esi
  40e717:	popa   
  40e718:	ja     0x40e6fa
  40e71a:	xchg   ebp,eax
  40e71b:	pop    ebx
  40e71c:	ficom  DWORD PTR ds:0x4ae99dba
  40e722:	in     eax,0x14
  40e724:	or     ebx,DWORD PTR [esi]
  40e726:	or     al,BYTE PTR [eax]
  40e728:	(bad)  
  40e729:	cmp    ebx,DWORD PTR ds:0x22fc7ad2
  40e72f:	jmp    0x40e70a
  40e731:	jbe    0x40e76f
  40e733:	out    0xd3,eax
  40e735:	aam    0x24
  40e737:	sbb    eax,ebp
  40e739:	rep lods eax,DWORD PTR ds:[esi]
  40e73b:	cdq    
  40e73c:	push   esp
  40e73d:	rcl    ch,0xf7
  40e740:	add    cl,BYTE PTR [esi]
  40e742:	xchg   esp,eax
  40e743:	mov    es,WORD PTR [esi]
  40e745:	popf   
  40e746:	mov    cl,0xae
  40e748:	out    0x51,al
  40e74a:	pusha  
  40e74b:	push   edi
  40e74c:	popa   
  40e74d:	sub    edi,DWORD PTR [ecx]
  40e74f:	xchg   ecx,eax
  40e750:	lahf   
  40e751:	jmp    DWORD PTR [edi-0x2809c212]
  40e757:	and    al,0x36
  40e759:	out    0xee,al
  40e75b:	xor    al,0x1e
  40e75d:	ret    
  40e75e:	cwde   
  40e75f:	pop    ecx
  40e760:	mov    edi,0x1ee6cd88
  40e765:	stc    
  40e766:	xchg   esp,eax
  40e767:	dec    ebx
  40e768:	pop    ds
  40e769:	xor    eax,DWORD PTR [ebx+0x76]
  40e76c:	pop    esi
  40e76d:	jb     0x40e774
  40e76f:	xor    BYTE PTR [ecx],ah
  40e771:	ret    0xd6bd
  40e774:	sub    eax,0x601cc7b5
  40e779:	sbb    eax,0xb15bc205
  40e77e:	fld    DWORD PTR [ecx-0x3fb61133]
  40e784:	ja     0x40e745
  40e786:	add    ebx,DWORD PTR [ebx+0x1234be1c]
  40e78c:	mov    al,ds:0xa5c00ac7
  40e791:	push   eax
  40e792:	or     al,0xdd
  40e794:	add    ah,BYTE PTR [ebp+0x4]
  40e797:	(bad)  [ecx+0x13b8ea68]
  40e79d:	inc    esi
  40e79e:	cld    
  40e79f:	data16 lods al,BYTE PTR ds:[esi]
  40e7a1:	ds je  0x40e7c8
  40e7a4:	add    al,0xbb
  40e7a6:	or     ch,BYTE PTR [eax+0x4213a25a]
  40e7ac:	add    DWORD PTR [ebx-0x41a97f2],ebp
  40e7b2:	add    BYTE PTR [esi-0x6f],0x71
  40e7b6:	push   ebp
  40e7b7:	cmp    BYTE PTR [edi-0x7178492],dl
  40e7bd:	scas   ax,WORD PTR es:[edi]
  40e7bf:	sub    al,0x74
  40e7c1:	outs   dx,BYTE PTR ds:[esi]
  40e7c2:	jg     0x40e791
  40e7c4:	xor    eax,0x1426f53c
  40e7c9:	adc    al,0x9b
  40e7cb:	jae    0x40e842
  40e7cd:	sti    
  40e7ce:	enter  0x245e,0x38
  40e7d2:	repz sbb BYTE PTR [ebx],ah
  40e7d5:	push   esp
  40e7d6:	arpl   WORD PTR [ecx],bp
  40e7d8:	aaa    
  40e7d9:	cmp    dh,dl
  40e7db:	cmp    al,0xe6
  40e7dd:	fidiv  DWORD PTR [esi-0x75a6dd02]
  40e7e3:	sahf   
  40e7e4:	cmc    
  40e7e5:	fs xor eax,esi
  40e7e8:	dec    ebp
  40e7e9:	adc    eax,0xafccd29b
  40e7ee:	add    BYTE PTR [esi+0x56],ch
  40e7f1:	pop    eax
  40e7f2:	jg     0x40e784
  40e7f4:	ins    DWORD PTR es:[edi],dx
  40e7f5:	sbb    al,0x14
  40e7f7:	jecxz  0x40e7de
  40e7f9:	lods   al,BYTE PTR ds:[esi]
  40e7fa:	in     eax,0x23
  40e7fc:	dec    edi
  40e7fd:	pop    esp
  40e7fe:	test   al,0x37
  40e800:	(bad)  
  40e801:	pusha  
  40e802:	jo     0x40e856
  40e804:	or     ah,BYTE PTR [edi]
  40e806:	lahf   
  40e807:	jle    0x40e84a
  40e809:	push   esp
  40e80a:	jo     0x40e7f1
  40e80c:	arpl   WORD PTR [esi-0x4d1dbdf5],bp
  40e812:	mov    ch,0xce
  40e814:	xor    DWORD PTR [esi+0x3e],ebp
  40e817:	and    al,0xef
  40e819:	cdq    
  40e81a:	sbb    BYTE PTR [ebp-0x60e52790],bh
  40e820:	push   esp
  40e821:	xor    edi,ebp
  40e823:	mov    cl,0x5
  40e825:	scas   al,BYTE PTR es:[edi]
  40e826:	std    
  40e827:	push   0xffffffe4
  40e829:	mov    ds:0x236729c0,al
  40e82e:	adc    ch,BYTE PTR [edi-0x37]
  40e831:	fidivr DWORD PTR gs:[ebx]
  40e834:	stos   BYTE PTR es:[edi],al
  40e835:	adc    bh,BYTE PTR [ebx+0x1a]
  40e838:	sub    eax,0xf1e578f4
  40e83d:	pop    es
  40e83e:	push   0x4410a767
  40e843:	mov    esp,0xc354e27c
  40e848:	jl     0x40e830
  40e84a:	add    bl,BYTE PTR [ecx-0x3f]
  40e84d:	jbe    0x40e806
  40e84f:	pop    ebp
  40e850:	jecxz  0x40e7d3
  40e852:	pop    ss
  40e853:	inc    edx
  40e855:	sbb    BYTE PTR [ebp-0x5bfa4472],dl
  40e85b:	xchg   esp,eax
  40e85c:	sar    BYTE PTR [ecx+0x4dc02597],cl
  40e862:	test   al,0x1d
  40e864:	sub    DWORD PTR [edx+0x1f1285b3],ebx
  40e86a:	cwde   
  40e86b:	pushf  
  40e86c:	outs   dx,DWORD PTR ds:[esi]
  40e86d:	xor    edx,DWORD PTR [ebx*1-0x22dbe8c]
  40e874:	push   0x7c2ff826
  40e879:	ins    DWORD PTR es:[edi],dx
  40e87a:	xlat   BYTE PTR ds:[ebx]
  40e87b:	pop    ss
  40e87c:	fsub   DWORD PTR [esi-0x7e24c87b]
  40e882:	push   edx
  40e883:	in     al,0x36
  40e885:	mov    dh,0xf1
  40e887:	fnstsw WORD PTR [edi-0x2ce5a453]
  40e88d:	clc    
  40e88e:	dec    esp
  40e88f:	loopne 0x40e8cb
  40e891:	hlt    
  40e892:	ins    BYTE PTR es:[edi],dx
  40e893:	loopne 0x40e8c7
  40e895:	xor    DWORD PTR [ecx],0xffffffdb
  40e898:	arpl   WORD PTR [edx+0x34],ax
  40e89b:	xor    bl,bh
  40e89d:	cmp    dh,BYTE PTR [ebx-0x47d5947b]
  40e8a3:	call   0xedbd:0x7485eff3
  40e8aa:	cmp    ah,bl
  40e8ac:	mov    eax,0x128be1e3
  40e8b1:	sar    esi,1
  40e8b3:	lahf   
  40e8b4:	xor    bl,0xd4
  40e8b7:	sub    bh,ch
  40e8b9:	push   esp
  40e8ba:	mov    al,bl
  40e8bc:	clc    
  40e8bd:	xchg   cl,al
  40e8bf:	xchg   dh,dl
  40e8c1:	setg   BYTE PTR [edi-0x134c2232]
  40e8c8:	mov    ecx,0xf9c922ac
  40e8cd:	mul    BYTE PTR [ebp-0x26]
  40e8d0:	repz (bad) [esi]
  40e8d3:	jle    0x40e864
  40e8d5:	loop   0x40e939
  40e8d7:	fs jl  0x40e90d
  40e8da:	jae    0x40e8a2
  40e8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8dd:	scas   al,BYTE PTR es:[edi]
  40e8de:	out    0xd7,eax
  40e8e0:	inc    eax
  40e8e2:	lea    eax,[esi]
  40e8e4:	test   al,0xd9
  40e8e6:	adc    BYTE PTR [edx+0x5a],dl
  40e8e9:	push   cs
  40e8ea:	jmp    0x3e6eaceb
  40e8ef:	ret    
  40e8f0:	inc    edi
  40e8f1:	inc    edx
  40e8f2:	xor    eax,0x5dfee0ab
  40e8f7:	mov    dl,0x4e
  40e8f9:	xor    eax,0x753877a3
  40e8fe:	xchg   DWORD PTR [eax+0x66b03a2b],edi
  40e904:	dec    ebp
  40e905:	retf   
  40e906:	xchg   ebp,eax
  40e907:	adc    dh,BYTE PTR [ebx+edx*8-0x2e01ff4f]
  40e90e:	ret    
  40e90f:	sar    BYTE PTR [esi+ecx*4],1
  40e912:	inc    ecx
  40e913:	into   
  40e914:	ss out dx,al
  40e916:	fidiv  DWORD PTR [eax-0x57e21774]
  40e91c:	das    
  40e91d:	(bad)  
  40e91e:	faddp  st(4),st
  40e920:	ins    BYTE PTR es:[edi],dx
  40e921:	and    eax,0xe59f1c14
  40e926:	inc    edi
  40e927:	clc    
  40e928:	xchg   ecx,eax
  40e929:	inc    eax
  40e92a:	sub    eax,DWORD PTR [ecx+0x18]
  40e92d:	fsub   QWORD PTR [ecx-0x46837016]
  40e933:	pop    esp
  40e934:	xchg   esp,eax
  40e935:	add    ebp,DWORD PTR [ecx]
  40e937:	ret    0xbc7e
  40e93a:	test   dl,ch
  40e93c:	cmp    esp,DWORD PTR [edi-0x6fa2eb10]
  40e942:	push   esi
  40e943:	cwde   
  40e944:	dec    edx
  40e945:	mov    edi,0x9a08d05b
  40e94a:	mov    WORD PTR [ecx-0x62],cs
  40e94d:	sar    edi,1
  40e94f:	rol    DWORD PTR [edx],cl
  40e951:	pop    eax
  40e952:	mov    ebp,0x6c4489fe
  40e958:	fisub  DWORD PTR [eax-0x635c7be9]
  40e95e:	arpl   WORD PTR [ecx-0x5a2aa632],di
  40e964:	mov    ch,0xd5
  40e966:	jg     0x40e990
  40e968:	sub    DWORD PTR [eax-0x4edad818],eax
  40e96e:	mov    cl,0x4c
  40e970:	std    
  40e971:	fdiv   st(2),st
  40e973:	popa   
  40e974:	pop    ecx
  40e975:	sbb    ecx,DWORD PTR [edx+0x2659572a]
  40e97b:	pop    ds
  40e97c:	and    BYTE PTR [esi+0x3a],dh
  40e97f:	mov    ecx,0xd8a65263
  40e984:	aas    
  40e985:	pop    edi
  40e986:	jo     0x40e9b0
  40e988:	mov    esp,0xbaf2257a
  40e98d:	sub    dh,BYTE PTR [ebx-0x5]
  40e990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e991:	enter  0x5a5a,0x1a
  40e995:	jecxz  0x40ea14
  40e997:	inc    edi
  40e998:	fnsave [eax]
  40e99a:	dec    ebx
  40e99b:	cdq    
  40e99c:	fs xor eax,0xeec9a45f
  40e9a2:	inc    BYTE PTR [esi+edx*2+0x2018c038]
  40e9a9:	(bad)  
  40e9aa:	cs stos BYTE PTR es:[edi],al
  40e9ac:	leave  
  40e9ad:	loope  0x40ea20
  40e9af:	dec    ecx
  40e9b0:	stos   DWORD PTR es:[edi],eax
  40e9b1:	out    dx,al
  40e9b2:	popa   
  40e9b3:	mov    eax,ds:0xaed75ae3
  40e9b8:	adc    ebp,DWORD PTR [ebx+esi*8+0x57d7c027]
  40e9bf:	lahf   
  40e9c0:	jl     0x40e9e1
  40e9c2:	xor    BYTE PTR [ebx],dh
  40e9c4:	adc    edi,DWORD PTR ss:[ecx]
  40e9c7:	stos   BYTE PTR es:[edi],al
  40e9c8:	mov    dl,0xe2
  40e9ca:	clc    
  40e9cb:	shr    DWORD PTR [edi-0x45],1
  40e9ce:	ins    BYTE PTR es:[edi],dx
  40e9cf:	xor    BYTE PTR [ebx-0x59],dl
  40e9d2:	loope  0x40ea53
  40e9d4:	dec    edx
  40e9d5:	sahf   
  40e9d6:	std    
  40e9d7:	xlat   BYTE PTR ds:[ebx]
  40e9d8:	cmc    
  40e9d9:	fld    st(6)
  40e9db:	jo     0x40e9b2
  40e9dd:	push   ebx
  40e9de:	push   0x71
  40e9e0:	mov    al,ds:0x39020d7c
  40e9e5:	adc    esp,edi
  40e9e7:	xor    al,0xa4
  40e9e9:	popa   
  40e9ea:	pop    esi
  40e9ec:	nop
  40e9ed:	sub    DWORD PTR [esi+0x4d5eaeb7],eax
  40e9f3:	push   edx
  40e9f4:	fst    QWORD PTR [ecx+0x243fc946]
  40e9fa:	inc    ebp
  40e9fb:	loope  0x40ea64
  40e9fd:	fisub  WORD PTR [ebp+0x27]
  40ea00:	pop    DWORD PTR ds:0xdd53695c
  40ea06:	or     ah,bl
  40ea08:	jne    0x40e9ad
  40ea0a:	inc    ecx
  40ea0b:	sub    al,0x25
  40ea0d:	stos   DWORD PTR es:[edi],eax
  40ea0e:	mov    bh,0xf2
  40ea10:	mov    esi,0xfe910ffa
  40ea15:	inc    esp
  40ea16:	pop    ecx
  40ea17:	js     0x40e999
  40ea19:	or     eax,0x181f0a2a
  40ea1e:	pop    esp
  40ea1f:	stos   BYTE PTR es:[edi],al
  40ea20:	mov    bl,0xde
  40ea22:	or     al,0x73
  40ea24:	mov    bl,dl
  40ea26:	xchg   BYTE PTR [ebp-0x4f31492],dh
  40ea2c:	mov    eax,DWORD PTR [esp+edi*2]
  40ea2f:	xchg   DWORD PTR [eax+0x1d],ecx
  40ea32:	sub    bl,BYTE PTR [ebp-0x4a7832d4]
  40ea38:	cli    
  40ea39:	sbb    cl,al
  40ea3b:	mov    ch,dl
  40ea3d:	xlat   BYTE PTR ds:[ebx]
  40ea3e:	clc    
  40ea3f:	jg     0x40e9ea
  40ea41:	in     eax,0x7e
  40ea43:	push   ebp
  40ea44:	pop    eax
  40ea45:	dec    esi
  40ea46:	mov    ebp,0xec47b609
  40ea4b:	xchg   edi,eax
  40ea4c:	or     ecx,DWORD PTR [edx-0xd]
  40ea4f:	xchg   esp,eax
  40ea50:	sub    DWORD PTR [eax+0x22],esi
  40ea53:	test   BYTE PTR [edi],dh
  40ea55:	sbb    eax,0x7f8f8717
  40ea5a:	jae    0x40ea5f
  40ea5c:	push   ss
  40ea5d:	fwait
  40ea5e:	ret    0x767
  40ea61:	leave  
  40ea62:	loop   0x40ea58
  40ea64:	lock sub BYTE PTR [eax-0x355ba55a],0x4f
  40ea6c:	not    BYTE PTR [edx+0x4eb9da43]
  40ea72:	gs inc ecx
  40ea74:	int    0x63
  40ea76:	jl     0x40e9fc
  40ea78:	(bad)  
  40ea7a:	ror    BYTE PTR ds:0x8ab8d2c4,1
  40ea80:	(bad)  
  40ea81:	mov    ebp,0xf944712e
  40ea86:	ins    DWORD PTR es:[edi],dx
  40ea87:	push   cs
  40ea88:	lea    ecx,[ebx]
  40ea8a:	mov    dh,0x19
  40ea8c:	jl     0x40ea41
  40ea8e:	inc    esp
  40ea8f:	pop    ebp
  40ea90:	lahf   
  40ea91:	popa   
  40ea92:	test   DWORD PTR [edx-0x3abaa6f1],eax
  40ea98:	stc    
  40ea99:	in     eax,dx
  40ea9a:	jmp    0x1ba3bbe
  40ea9f:	sub    al,BYTE PTR [edx+0x39]
  40eaa2:	xchg   edx,eax
  40eaa3:	dec    esp
  40eaa4:	jno    0x40eb1f
  40eaa6:	retf   0x747a
  40eaa9:	adc    edi,DWORD PTR [edx]
  40eaab:	and    ah,bl
  40eaad:	fcom   QWORD PTR [esi]
  40eaaf:	dec    ebp
  40eab0:	mov    ebp,0xe06c5b88
  40eab5:	push   0x4a371351
  40eaba:	dec    ecx
  40eabb:	test   BYTE PTR [edi-0x164104a7],bl
  40eac1:	jl     0x40ea4f
  40eac3:	les    eax,FWORD PTR [ebp-0x4a]
  40eac6:	xor    eax,0x28d427b6
  40eacb:	repnz adc dl,BYTE PTR [ecx]
  40eace:	cmp    ah,dl
  40ead0:	jae    0x40ea74
  40ead2:	fbstp  TBYTE PTR [eax+0x149b2dd0]
  40ead8:	mov    bh,0xe2
  40eada:	int3   
  40eadb:	shr    DWORD PTR [ebp-0x29c547b1],cl
  40eae1:	(bad)  
  40eae2:	pushf  
  40eae3:	test   eax,0x59e5f6db
  40eae8:	gs xchg ecx,eax
  40eaea:	jg     0x40eb67
  40eaec:	data16 repnz das 
  40eaef:	pshufw mm6,mm1,0x67
  40eaf3:	aaa    
  40eaf4:	shl    DWORD PTR [edi],1
  40eaf6:	xor    al,0x91
  40eaf8:	ins    DWORD PTR es:[edi],dx
  40eaf9:	or     ch,BYTE PTR [eax+0x1a]
  40eafc:	mov    bl,0xd1
  40eafe:	pop    esp
  40eaff:	shl    DWORD PTR [eax],1
  40eb01:	xor    DWORD PTR [edx+0x4b],0x8c79a094
  40eb08:	xor    DWORD PTR [eax],ebp
  40eb0a:	retf   0x8f39
  40eb0d:	xchg   DWORD PTR [edi+eax*8-0x71],esi
  40eb11:	dec    edi
  40eb12:	sbb    eax,0xb9808cfe
  40eb17:	adc    al,0x97
  40eb19:	int    0x86
  40eb1b:	mov    ds:0xfac105b5,eax
  40eb20:	jmp    0x6ff9:0x4a64c775
  40eb27:	mov    bh,0x66
  40eb29:	stos   DWORD PTR es:[edi],eax
  40eb2a:	pop    ebx
  40eb2b:	mov    bh,0x66
  40eb2d:	clc    
  40eb2e:	js     0x40eb9d
  40eb30:	inc    esp
  40eb31:	in     eax,0x6d
  40eb33:	xor    eax,0x7def77e3
  40eb38:	repnz test BYTE PTR [edi],cl
  40eb3b:	dec    esi
  40eb3c:	inc    edx
  40eb3d:	inc    edi
  40eb3e:	pop    ebx
  40eb3f:	xchg   edi,eax
  40eb40:	(bad)  
  40eb41:	rol    esp,1
  40eb43:	dec    ebx
  40eb44:	push   edx
  40eb45:	mov    esp,0xce1b5f9b
  40eb4a:	idiv   bh
  40eb4c:	mov    ebx,0x890b2a10
  40eb51:	inc    esi
  40eb52:	push   edi
  40eb53:	cmp    dl,BYTE PTR [esp+edx*1]
  40eb56:	out    dx,eax
  40eb57:	call   0x96f623af
  40eb5c:	(bad)  
  40eb5d:	jmp    DWORD PTR [edi-0x616eb28c]
  40eb63:	sbb    esp,ebx
  40eb65:	shl    ebx,cl
  40eb67:	pop    edi
  40eb68:	imul   ebp,DWORD PTR [esi],0xffffffa6
  40eb6b:	(bad)  
  40eb6c:	ja     0x40eb9a
  40eb6e:	mov    al,ds:0x5453cf80
  40eb73:	rcl    ch,1
  40eb75:	mov    ebx,0x20bb1073
  40eb7a:	rcl    esp,cl
  40eb7c:	fisttp DWORD PTR [edx+eax*4+0x4dbce054]
  40eb83:	neg    ah
  40eb85:	jne    0x40eb3c
  40eb87:	int    0x4e
  40eb89:	mov    dl,0x3a
  40eb8b:	inc    edx
  40eb8c:	imul   esp,DWORD PTR [esi+0x2a],0x54c69bdd
  40eb93:	lds    ecx,FWORD PTR [esi*4-0x48170cd7]
  40eb9a:	dec    eax
  40eb9b:	add    DWORD PTR [ecx],0x39
  40eb9e:	lods   al,BYTE PTR cs:[esi]
  40eba0:	dec    ecx
  40eba1:	xchg   edi,eax
  40eba2:	outs   dx,BYTE PTR ds:[esi]
  40eba3:	add    esi,DWORD PTR [esp+esi*2]
  40eba6:	jecxz  0x40eb6f
  40eba8:	fdivr  st(1),st
  40ebaa:	icebp  
  40ebab:	and    ebp,0xffffffb6
  40ebae:	es cs aaa 
  40ebb1:	nop
  40ebb2:	xchg   ebp,eax
  40ebb3:	stos   BYTE PTR es:[edi],al
  40ebb4:	ret    
  40ebb5:	inc    ecx
  40ebb6:	out    dx,eax
  40ebb7:	rol    BYTE PTR [eax],0x43
  40ebba:	call   0x83ea93b8
  40ebbf:	push   0xffffffbe
  40ebc1:	sub    al,ch
  40ebc3:	xchg   esp,eax
  40ebc4:	iret   
  40ebc5:	mov    cl,0x7a
  40ebc7:	bnd jns 0x40ec20
  40ebca:	pop    eax
  40ebcb:	ins    BYTE PTR es:[edi],dx
  40ebcc:	push   esp
  40ebcd:	cmp    ecx,esi
  40ebcf:	rol    DWORD PTR [ebp-0x42719453],cl
  40ebd5:	jg     0x40ebf6
  40ebd7:	in     al,0x77
  40ebd9:	xor    BYTE PTR [ebx+0x755e25c],bh
  40ebdf:	ss (bad) 
  40ebe1:	push   eax
  40ebe2:	mov    bh,0x38
  40ebe4:	pop    edx
  40ebe5:	sbb    ebp,esi
  40ebe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe8:	aad    0x96
  40ebea:	int3   
  40ebeb:	mov    cl,0x5c
  40ebed:	lahf   
  40ebee:	pusha  
  40ebef:	add    al,0x1e
  40ebf1:	pop    ebx
  40ebf2:	rcr    BYTE PTR [esp+eiz*8-0x34],0xbf
  40ebf7:	stos   BYTE PTR es:[edi],al
  40ebf8:	and    al,0xfa
  40ebfa:	lgs    esp,FWORD PTR [edx-0x2a]
  40ebfe:	add    al,0xe2
  40ec01:	push   ebx
  40ec02:	add    ah,BYTE PTR [ebx]
  40ec04:	rcr    ch,cl
  40ec06:	pop    ebx
  40ec07:	xor    bl,BYTE PTR [ebx+0x1a]
  40ec0a:	sub    al,0x15
  40ec0c:	test   BYTE PTR [esi],bh
  40ec0e:	clc    
  40ec0f:	inc    edi
  40ec10:	ror    eax,cl
  40ec12:	push   ebp
  40ec13:	cli    
  40ec14:	push   cs
  40ec15:	lds    ecx,FWORD PTR [ecx+0x344be38d]
  40ec1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec1c:	enter  0x3254,0xd0
  40ec20:	or     DWORD PTR [edi-0x2fc2bafd],edx
  40ec26:	fstp   QWORD PTR [edx]
  40ec28:	dec    ebp
  40ec29:	add    DWORD PTR [ebx+0x21],ebp
  40ec2c:	and    ebp,DWORD PTR [esi]
  40ec2e:	add    BYTE PTR [esi],0x4d
  40ec31:	push   ecx
  40ec32:	adc    eax,0x2220b302
  40ec37:	push   edx
  40ec38:	scas   eax,DWORD PTR es:[edi]
  40ec39:	popf   
  40ec3a:	mov    WORD PTR [ebp+0x75dc1cfe],cs
  40ec40:	mov    bh,0xb
  40ec42:	add    BYTE PTR [edx],cl
  40ec44:	popa   
  40ec45:	xchg   BYTE PTR [ecx+ebx*8-0x42],ch
  40ec49:	mov    ebx,0x49df8424
  40ec4e:	ffree  st(7)
  40ec50:	and    BYTE PTR [eax+0x42],0xda
  40ec54:	pop    ss
  40ec55:	das    
  40ec56:	push   0xffffffea
  40ec58:	or     ah,BYTE PTR [esi+0x2a]
  40ec5b:	add    ah,BYTE PTR [ebx+0x6edc4c96]
  40ec61:	fmul   QWORD PTR [esi+0x5afd2209]
  40ec67:	sbb    DWORD PTR [eax-0x1b],ebp
  40ec6a:	or     BYTE PTR [eax],0x85
  40ec6d:	pushf  
  40ec6e:	and    ebx,ecx
  40ec70:	xchg   ecx,eax
  40ec71:	pminsw mm0,QWORD PTR [edx-0x571cb010]
  40ec78:	(bad)  
  40ec79:	bound  edi,QWORD PTR [ecx+edi*4+0x7dfd37c5]
  40ec80:	or     dh,BYTE PTR [edx+0x79602abf]
  40ec86:	add    DWORD PTR [edi+0x65],ebx
  40ec89:	sub    DWORD PTR [edi-0x5e],ebp
  40ec8c:	xor    al,BYTE PTR [ebx+esi*1+0x1a40fe92]
  40ec93:	stc    
  40ec94:	std    
  40ec95:	mov    bl,0xd9
  40ec97:	clc    
  40ec98:	mov    dl,0xf1
  40ec9a:	push   es
  40ec9b:	lods   al,BYTE PTR ds:[esi]
  40ec9c:	adc    dl,BYTE PTR [ecx+0x64]
  40ec9f:	iret   
  40eca0:	dec    ebp
  40eca1:	(bad)  
  40eca2:	mov    ch,0xf6
  40eca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca5:	gs out dx,al
  40eca7:	repnz push edi
  40eca9:	out    dx,al
  40ecaa:	mov    ebp,0x95f08e2b
  40ecaf:	scas   eax,DWORD PTR es:[edi]
  40ecb0:	icebp  
  40ecb1:	cs ds pop ecx
  40ecb4:	call   0x26ab0fe9
  40ecb9:	push   esp
  40ecba:	cmp    BYTE PTR [eax+0x51],bh
  40ecbd:	xchg   ebp,eax
  40ecbe:	cmp    ah,dl
  40ecc0:	and    ebx,DWORD PTR [esi+0x399de655]
  40ecc6:	mov    ch,0xf9
  40ecc8:	in     al,dx
  40ecc9:	shl    DWORD PTR [ebx-0x1a],1
  40eccc:	pusha  
  40eccd:	mov    ds:0x51f7b818,al
  40ecd2:	mov    eax,0xda1d4ac3
  40ecd7:	jno    0x40ed49
  40ecd9:	or     al,0x8a
  40ecdb:	ins    BYTE PTR es:[edi],dx
  40ecdc:	pop    edx
  40ecdd:	ins    DWORD PTR es:[edi],dx
  40ecde:	mov    edx,0xdef37b0
  40ece3:	fstp   QWORD PTR [edx-0x27cb7d49]
  40ece9:	int    0xd1
  40eceb:	inc    esp
  40ecec:	xchg   BYTE PTR ds:0xc17f5077,al
  40ecf2:	pop    ss
  40ecf3:	pop    ecx
  40ecf4:	stc    
  40ecf5:	and    eax,0xb3c535d6
  40ecfa:	scas   al,BYTE PTR es:[edi]
  40ecfb:	cmp    al,BYTE PTR [ebp+0x55]
  40ecfe:	lods   al,BYTE PTR ds:[esi]
  40ecff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed00:	xor    DWORD PTR [eax],esp
  40ed02:	jno    0x40ec9e
  40ed04:	repz aas 
  40ed06:	cwde   
  40ed07:	je     0x40ed58
  40ed09:	std    
  40ed0a:	push   ebp
  40ed0b:	sbb    al,0xea
  40ed0d:	inc    ebx
  40ed0e:	jo     0x40ed54
  40ed10:	inc    ecx
  40ed11:	out    0xfd,al
  40ed13:	(bad)  
  40ed14:	jmp    0x9d6e8b4c
  40ed19:	mov    DWORD PTR [ebx-0x60],esp
  40ed1c:	mov    cr3,ebp
  40ed1f:	sub    esi,DWORD PTR [eax+0x4cb0c45]
  40ed25:	cmp    esp,DWORD PTR ds:0x860bf738
  40ed2b:	mov    ecx,0xed0873f4
  40ed30:	pop    ecx
  40ed31:	scas   al,BYTE PTR es:[edi]
  40ed32:	adc    eax,edi
  40ed34:	nop
  40ed35:	cld    
  40ed36:	outs   dx,BYTE PTR ds:[esi]
  40ed37:	jle    0x40ecd5
  40ed39:	ret    0x4adb
  40ed3c:	out    dx,al
  40ed3d:	jae    0x40ed80
  40ed3f:	push   esi
  40ed40:	xor    ebp,DWORD PTR [edi]
  40ed42:	xor    ebp,DWORD PTR [ecx+0x70]
  40ed45:	and    al,0x79
  40ed47:	adc    al,0x79
  40ed49:	dec    eax
  40ed4a:	xlat   BYTE PTR ds:[ebx]
  40ed4b:	mov    eax,ds:0x88639402
  40ed50:	pop    eax
  40ed51:	mov    ch,0x4d
  40ed53:	addr16 inc ebp
  40ed55:	scas   al,BYTE PTR es:[edi]
  40ed56:	lds    edx,FWORD PTR [eax]
  40ed58:	mov    esi,0x9f9fc302
  40ed5d:	jp     0x40ed52
  40ed5f:	shr    edi,cl
  40ed61:	retf   0x26bf
  40ed64:	mov    cl,0x72
  40ed66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed67:	and    esp,DWORD PTR [edi-0x769d78b5]
  40ed6d:	in     al,dx
  40ed6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed6f:	inc    ebp
  40ed70:	shr    bl,cl
  40ed72:	pop    ss
  40ed73:	add    eax,0xac302538
  40ed78:	dec    BYTE PTR [ebx]
  40ed7a:	in     eax,dx
  40ed7b:	push   esp
  40ed7c:	mov    dl,0xd6
  40ed7e:	call   0x6045:0xe737baf4
  40ed85:	or     ebp,DWORD PTR [edi+0x7b]
  40ed88:	cwde   
  40ed89:	lock push es
  40ed8b:	ds and ebx,ecx
  40ed8e:	int    0xab
  40ed90:	int    0x7e
  40ed92:	in     eax,dx
  40ed93:	sub    bl,BYTE PTR [ebx-0x27986086]
  40ed99:	(bad)  
  40ed9a:	fs inc esi
  40ed9c:	mov    ah,0xf8
  40ed9e:	cmp    bl,ch
  40eda0:	retf   
  40eda1:	xchg   BYTE PTR [esi+ebp*2-0x1c003ca5],cl
  40eda8:	sub    cl,BYTE PTR [eax+ebx*4-0x483e91cb]
  40edaf:	scas   eax,DWORD PTR es:[edi]
  40edb0:	call   0x162ccb2a
  40edb5:	push   es
  40edb6:	adc    bl,BYTE PTR [eax-0x253de17b]
  40edbc:	sbb    ch,BYTE PTR [esi]
  40edbe:	mov    eax,0xba5b6bf4
  40edc3:	or     al,0x70
  40edc5:	out    dx,eax
  40edc6:	jge    0x40ee30
  40edc8:	icebp  
  40edc9:	addr16 loop 0x40edf2
  40edcc:	mov    DWORD PTR [ecx+esi*4],edi
  40edcf:	in     eax,dx
  40edd0:	jbe    0x40edce
  40edd2:	test   eax,0x261cbb9e
  40edd7:	fdiv   st,st(2)
  40edd9:	imul   eax,ebp,0xffffffa8
  40eddc:	xchg   DWORD PTR [ecx-0x26],edi
  40eddf:	leave  
  40ede0:	cs inc edi
  40ede2:	(bad)  
  40ede4:	mov    edi,0x3d9d78a7
  40ede9:	repnz aas 
  40edeb:	loopne 0x40ed8e
  40eded:	out    dx,eax
  40edee:	or     dh,BYTE PTR ds:0xcbf546f3
  40edf4:	pop    es
  40edf5:	xchg   edi,eax
  40edf6:	xchg   ebx,eax
  40edf7:	jno    0x40ee45
  40edf9:	inc    ecx
  40edfa:	mov    ebp,0x837a90ba
  40edff:	pop    ds
  40ee00:	sub    esp,ebp
  40ee02:	sub    esp,esi
  40ee04:	xchg   ecx,eax
  40ee05:	pusha  
  40ee06:	push   esp
  40ee07:	sub    eax,0x8fdfe33b
  40ee0c:	les    ebp,FWORD PTR [edi+0x5f]
  40ee0f:	push   ss
  40ee10:	(bad)  [esi]
  40ee12:	repz clc 
  40ee14:	push   ds
  40ee15:	test   eax,0x158deffa
  40ee1a:	lahf   
  40ee1b:	(bad)  
  40ee1c:	xchg   ecx,eax
  40ee1d:	add    bl,BYTE PTR [ebx]
  40ee1f:	xor    DWORD PTR [esp+ecx*1-0x2b83f532],esp
  40ee26:	dec    esp
  40ee27:	(bad)  
  40ee28:	mov    ebx,0xcadc0977
  40ee2d:	xor    eax,DWORD PTR [edx]
  40ee2f:	mov    edi,0x1bdfa99
  40ee34:	and    BYTE PTR [eax-0x5bed2a0],ah
  40ee3a:	xchg   edi,eax
  40ee3b:	out    dx,eax
  40ee3c:	fcom   DWORD PTR [esi+0x366d8f3c]
  40ee42:	in     al,dx
  40ee43:	and    BYTE PTR [eax],cl
  40ee45:	addr16 mov cl,0x76
  40ee48:	int3   
  40ee49:	sbb    ecx,DWORD PTR [eax-0x71106d50]
  40ee4f:	cmp    ebp,DWORD PTR [ecx]
  40ee51:	pop    ebp
  40ee52:	xchg   ebx,eax
  40ee53:	call   0xcf76:0x91ba37cd
  40ee5a:	pusha  
  40ee5b:	ret    
  40ee5c:	je     0x40eed5
  40ee5e:	outs   dx,DWORD PTR ds:[esi]
  40ee5f:	enter  0xf711,0xb
  40ee63:	cmp    eax,0x29762744
  40ee68:	cdq    
  40ee69:	std    
  40ee6a:	fld    QWORD PTR [edx]
  40ee6c:	adc    al,0x1a
  40ee6e:	or     esi,ebp
  40ee70:	dec    ecx
  40ee71:	adc    eax,0xa131cd0b
  40ee76:	push   ss
  40ee77:	and    BYTE PTR [edx-0x38],cl
  40ee7a:	pop    ds
  40ee7b:	ret    
  40ee7c:	or     al,0xed
  40ee7e:	or     DWORD PTR fs:[ecx+0x7c037309],0xffffffec
  40ee86:	in     al,dx
  40ee87:	jmp    0xaac3:0xc3c27da7
  40ee8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8f:	outs   dx,BYTE PTR ds:[esi]
  40ee90:	cmp    al,0xb6
  40ee92:	ret    0x8324
  40ee95:	sub    cl,BYTE PTR [esi+0x7a]
  40ee98:	mov    al,ds:0x6ee46def
  40ee9d:	xor    bl,cl
  40ee9f:	fdivrp st(0),st
  40eea1:	in     al,dx
  40eea2:	bound  edi,QWORD PTR [ebp+0x3b]
  40eea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea6:	scas   al,BYTE PTR es:[edi]
  40eea7:	pusha  
  40eea8:	mov    edx,0x6094d82d
  40eead:	inc    esi
  40eeae:	shr    DWORD PTR [esi],cl
  40eeb0:	dec    esi
  40eeb1:	div    DWORD PTR [esi-0x37bcd240]
  40eeb7:	sub    dl,bl
  40eeb9:	and    edx,DWORD PTR [edi+0x76]
  40eebc:	lahf   
  40eebd:	fldenv [esi-0x47]
  40eec0:	addr16 popa 
  40eec2:	sbb    BYTE PTR [esi],dl
  40eec4:	stos   DWORD PTR es:[edi],eax
  40eec5:	push   eax
  40eec6:	repz test DWORD PTR [esp+edi*2+0x49],0xfbeb8d5b
  40eecf:	aad    0xb4
  40eed1:	adc    al,0x97
  40eed3:	xchg   esi,eax
  40eed4:	leave  
  40eed5:	sbb    al,0x29
  40eed7:	rol    BYTE PTR [edi],1
  40eed9:	adc    eax,DWORD PTR [eax]
  40eedb:	mov    dh,0x4f
  40eedd:	loope  0x40ef2b
  40eedf:	aad    0xbe
  40eee1:	call   DWORD PTR [eax+0x1e]
  40eee4:	cli    
  40eee5:	sbb    BYTE PTR [ebp+0x522e5af6],bh
  40eeeb:	das    
  40eeec:	sbb    al,0xa2
  40eeee:	aas    
  40eeef:	or     edx,ecx
  40eef1:	lds    di,DWORD PTR [eax+0x16]
  40eef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef6:	inc    esi
  40eef7:	stc    
  40eef8:	(bad)  
  40eef9:	clc    
  40eefa:	adc    ch,dh
  40eefc:	and    DWORD PTR [edx],esi
  40eefe:	ficom  DWORD PTR [ecx-0xb1d1362]
  40ef04:	and    eax,0xf25623c1
  40ef09:	sub    dh,BYTE PTR [edi+eiz*4+0x23c42c2]
  40ef10:	retfw  0x28ec
  40ef14:	sub    DWORD PTR [ebp-0x61],ecx
  40ef17:	out    dx,eax
  40ef18:	cmp    DWORD PTR [esi-0x12],esp
  40ef1b:	add    BYTE PTR [ebx+0xd],0x9c
  40ef1f:	rol    BYTE PTR [edx+0x45],0x19
  40ef23:	xor    eax,0x5235def
  40ef28:	in     al,dx
  40ef29:	data16 add al,0xf0
  40ef2c:	inc    ebx
  40ef2d:	and    eax,edi
  40ef2f:	ror    BYTE PTR [eax+0x6f40a44c],cl
  40ef35:	dec    ebp
  40ef36:	mov    al,ds:0xe533c7fb
  40ef3b:	rol    DWORD PTR [edi+0x7a],0x70
  40ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef40:	jbe    0x40eefc
  40ef42:	out    dx,al
  40ef43:	cwde   
  40ef44:	into   
  40ef45:	ror    DWORD PTR [esi+eax*2-0x3a],0xfd
  40ef4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef4b:	xchg   ebp,eax
  40ef4c:	scas   al,BYTE PTR es:[edi]
  40ef4d:	dec    ebx
  40ef4e:	bswap  esi
  40ef50:	mov    al,dl
  40ef52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef53:	add    eax,0x2890b085
  40ef58:	xchg   esp,eax
  40ef59:	inc    esp
  40ef5a:	popa   
  40ef5b:	cmp    DWORD PTR ds:0x98d01994,0xbe86fd00
  40ef65:	mov    BYTE PTR [eax-0x49e496e5],cl
  40ef6b:	xchg   DWORD PTR [edi+edx*2+0x3a],eax
  40ef6f:	xchg   BYTE PTR [ebx+0x46],cl
  40ef72:	mov    eax,0xfde73f42
  40ef77:	sahf   
  40ef78:	sub    esi,DWORD PTR [ebx+0x1a]
  40ef7b:	jge    0x40ef8d
  40ef7d:	mov    al,0xb7
  40ef7f:	push   ebx
  40ef80:	cmp    DWORD PTR [edx+0x41],esi
  40ef83:	sar    DWORD PTR [ecx-0x31],0x57
  40ef87:	pop    ss
  40ef88:	shr    DWORD PTR [eax-0x6f5f8e25],0x1c
  40ef8f:	in     eax,0xa3
  40ef91:	sub    al,0xbe
  40ef93:	bound  eax,QWORD PTR [ecx+0x55e5aef4]
  40ef99:	inc    esi
  40ef9a:	jl     0x40ef86
  40ef9c:	sub    ch,dl
  40ef9e:	and    ah,BYTE PTR ds:0xad80a8b2
  40efa4:	js     0x40ef7b
  40efa6:	and    bh,BYTE PTR [edx-0x55]
  40efa9:	(bad)  
  40efaa:	mov    ebx,0xa8dd6b19
  40efaf:	je     0x40ef96
  40efb1:	std    
  40efb2:	xor    BYTE PTR [eax-0x4],dh
  40efb5:	das    
  40efb6:	mov    DWORD PTR [bp+di],ebx
  40efb9:	int3   
  40efba:	pop    es
  40efbb:	(bad)  
  40efbc:	add    esp,DWORD PTR [edi+ebx*4+0x1a16b696]
  40efc3:	es pop ecx
  40efc5:	daa    
  40efc6:	push   ecx
  40efc7:	fstp   TBYTE PTR [eax-0xed449e4]
  40efcd:	pop    eax
  40efce:	add    eax,DWORD PTR [eax-0x3b]
  40efd1:	leave  
  40efd2:	or     eax,DWORD PTR [edi]
  40efd4:	ret    
  40efd5:	dec    eax
  40efd6:	mov    ebp,0x34ab6d40
  40efdb:	jns    0x40efc8
  40efdd:	xchg   ecx,eax
  40efde:	sub    esi,edx
  40efe0:	hlt    
  40efe1:	jle    0x40ef7d
  40efe3:	or     DWORD PTR [eax-0x5d],ecx
  40efe6:	fld    st(4)
  40efe8:	push   ebp
  40efe9:	mov    ch,0x6b
  40efeb:	xchg   edx,eax
  40efec:	push   ecx
  40efed:	cmp    al,0x8e
  40efef:	jp     0x40efad
  40eff1:	cmp    cl,BYTE PTR [edi-0x31]
  40eff4:	fadd   st(6),st
  40eff6:	xchg   ebp,eax
  40eff7:	int3   
  40eff8:	jle    0x40f021
  40effa:	mov    edx,0x26dec8cd
  40efff:	xor    DWORD PTR [edi-0x678b8f30],esp
  40f005:	jg     0x40efb8
  40f007:	mov    al,0xb1
  40f009:	fdivr  DWORD PTR [eax+0x58]
  40f00c:	pop    ds
  40f00d:	fnstsw WORD PTR [esi+0x6aeb72c5]
  40f013:	leave  
  40f014:	add    DWORD PTR [ebx-0x8],ebp
  40f017:	ins    BYTE PTR es:[edi],dx
  40f018:	std    
  40f019:	adc    BYTE PTR [ebx],dh
  40f01b:	add    ebx,DWORD PTR [ecx-0x43247431]
  40f021:	retf   0xcc26
  40f024:	or     DWORD PTR [edi+ebp*2+0x75fae670],0xffffffc7
  40f02c:	ins    DWORD PTR es:[edi],dx
  40f02d:	pop    ds
  40f02e:	ins    BYTE PTR es:[edi],dx
  40f02f:	loope  0x40f06f
  40f031:	push   ebx
  40f032:	pusha  
  40f033:	add    BYTE PTR [edi],dh
  40f035:	add    BYTE PTR [edx+edx*8+0x1308e503],cl
  40f03c:	pop    edx
  40f03d:	sub    eax,ebx
  40f03f:	pusha  
  40f040:	dec    esi
  40f041:	cli    
  40f042:	adc    ah,dh
  40f044:	pop    esi
  40f045:	push   es
  40f046:	mov    BYTE PTR [eax],dl
  40f048:	jmp    0xa944:0x8547a15d
  40f04f:	in     al,0xfd
  40f051:	test   ah,al
  40f053:	xlat   BYTE PTR ds:[ebx]
  40f054:	aas    
  40f055:	push   ecx
  40f056:	jmp    0xdca6bc90
  40f05b:	push   ebx
  40f05c:	shl    bl,1
  40f05e:	out    dx,al
  40f05f:	push   0x56
  40f061:	jae    0x40f080
  40f063:	scas   eax,DWORD PTR es:[edi]
  40f064:	retf   0xff79
  40f067:	imul   ecx,ebp,0xffffffbb
  40f06a:	mov    bl,0x89
  40f06c:	and    al,0xfb
  40f06e:	dec    edi
  40f06f:	aam    0xae
  40f071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f072:	je     0x40effd
  40f074:	mov    ebp,0xacd6c8d0
  40f079:	pop    edi
  40f07a:	hlt    
  40f07b:	leave  
  40f07c:	push   edi
  40f07d:	pop    es
  40f07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f07f:	inc    ebp
  40f080:	test   DWORD PTR [edi+0x9bb2891],eax
  40f086:	mov    edi,0xd73c6a3a
  40f08b:	outs   dx,BYTE PTR ds:[esi]
  40f08c:	jnp    0x40f094
  40f08e:	test   eax,0x431846c3
  40f093:	sub    al,0x8e
  40f095:	popa   
  40f096:	les    edi,FWORD PTR [ecx+0x3e48e20f]
  40f09c:	mov    es,edx
  40f09e:	scas   al,BYTE PTR es:[edi]
  40f09f:	dec    esi
  40f0a0:	push   edx
  40f0a1:	jne    0x40f119
  40f0a3:	adc    eax,0x2e0882e4
  40f0a8:	jne    0x40f107
  40f0aa:	dec    ebx
  40f0ab:	fldcw  WORD PTR [eax]
  40f0ad:	mov    ds:0xd326a5b,al
  40f0b2:	add    al,0x3a
  40f0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b5:	(bad)  
  40f0b6:	sbb    eax,0x64e889bf
  40f0bb:	repnz sbb DWORD PTR [ecx-0x6a720494],edx
  40f0c2:	nop
  40f0c3:	test   al,0x72
  40f0c5:	push   ebx
  40f0c6:	pop    ds
  40f0c7:	push   ebx
  40f0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c9:	mov    dh,0x9e
  40f0cb:	mov    ebp,0x93d5316a
  40f0d0:	push   0x7
  40f0d2:	push   edx
  40f0d3:	add    DWORD PTR [ecx-0x35],0xffffffd1
  40f0d7:	adc    ebx,DWORD PTR [ecx]
  40f0d9:	retf   
  40f0da:	add    dh,cl
  40f0dc:	clc    
  40f0dd:	sbb    DWORD PTR [ebp-0x5f],eax
  40f0e0:	retf   0xab83
  40f0e3:	and    bh,BYTE PTR [ebp-0x71014135]
  40f0e9:	pop    ss
  40f0ea:	pop    ecx
  40f0eb:	retf   
  40f0ec:	ins    DWORD PTR es:[edi],dx
  40f0ed:	mov    ?,WORD PTR [ebp+ebp*1-0x23]
  40f0f1:	retf   
  40f0f2:	scas   eax,DWORD PTR es:[edi]
  40f0f3:	popa   
  40f0f4:	iret   
  40f0f5:	sti    
  40f0f6:	and    ebp,DWORD PTR [ebx+0x3af84e31]
  40f0fc:	mov    cl,0xb
  40f0fe:	mov    al,ds:0x3be24a0
  40f103:	loopne 0x40f15b
  40f105:	xchg   esp,eax
  40f106:	int    0x6
  40f108:	adc    ah,BYTE PTR [ebx-0x2e16e266]
  40f10e:	mov    fs,WORD PTR [ebx]
  40f110:	pushw  ss
  40f112:	jbe    0x40f18b
  40f114:	aaa    
  40f115:	dec    esp
  40f116:	mov    eax,0x12e8d6a
  40f11b:	gs leave 
  40f11d:	dec    edx
  40f11e:	rcr    DWORD PTR [ecx+0x4d],cl
  40f121:	sbb    al,0x92
  40f123:	rcl    DWORD PTR [edx+edx*2+0x6bfe13ff],0xc1
  40f12b:	or     bl,al
  40f12d:	adc    edx,DWORD PTR [esi+ebx*1-0x13]
  40f131:	cmp    BYTE PTR [edi-0x5e149ec9],bl
  40f137:	adc    eax,DWORD PTR [ebx+edx*1]
  40f13a:	and    al,0xe9
  40f13c:	retf   0x5668
  40f13f:	cs data16 jno 0x40f172
  40f143:	pop    eax
  40f144:	jl     0x40f11d
  40f146:	dec    esi
  40f147:	pushf  
  40f148:	xor    esi,DWORD PTR [ecx]
  40f14a:	ss std 
  40f14c:	sti    
  40f14d:	cmc    
  40f14e:	out    0xe0,al
  40f150:	(bad)  
  40f151:	rol    DWORD PTR [eax-0x1e],cl
  40f154:	out    dx,al
  40f155:	dec    eax
  40f156:	mov    edi,0x2c544feb
  40f15b:	out    0x69,al
  40f15d:	shl    BYTE PTR [eax],0xa7
  40f160:	scas   al,BYTE PTR es:[edi]
  40f161:	ja     0x40f17f
  40f163:	push   ecx
  40f164:	bound  ebx,QWORD PTR [ebp+ebx*4-0x6560e5ad]
  40f16b:	sar    BYTE PTR [ebx],0x6b
  40f16e:	clc    
  40f16f:	xor    DWORD PTR [ebx-0x7e],0x26
  40f173:	ins    DWORD PTR es:[edi],dx
  40f174:	imul   ebp,DWORD PTR ds:0x732ee51d,0x2e
  40f17b:	retf   
  40f17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f17d:	cli    
  40f17e:	and    ah,BYTE PTR [ebp+0x7e]
  40f181:	aaa    
  40f182:	mov    cl,0xd5
  40f184:	sub    eax,0xd7dfb597
  40f189:	or     esi,DWORD PTR [edi-0x67]
  40f18c:	cmp    al,0xbb
  40f18e:	adc    eax,0x3e2549c3
  40f193:	in     eax,0x7e
  40f195:	fimul  DWORD PTR [edi+eax*4+0xb]
  40f199:	test   DWORD PTR [edi-0x2a],0xedf32036
  40f1a0:	jle    0x40f213
  40f1a2:	mov    esp,0x13050994
  40f1a7:	adc    eax,0x17510d2f
  40f1ac:	js     0x40f22b
  40f1ae:	repnz cmp dl,BYTE PTR [bp+di]
  40f1b2:	adc    cl,BYTE PTR [esi-0x1b]
  40f1b5:	and    dl,BYTE PTR [edx-0x70]
  40f1b8:	aad    0x7c
  40f1ba:	stos   DWORD PTR es:[edi],eax
  40f1bb:	jno    0x40f13f
  40f1bd:	push   0x6941f8fb
  40f1c2:	sbb    DWORD PTR ss:[esi],0xbf245814
  40f1c9:	in     al,0xa8
  40f1cb:	std    
  40f1cc:	int    0xd5
  40f1ce:	mov    eax,0x1d406bb9
  40f1d3:	fmul   QWORD PTR [edi-0x581778da]
  40f1d9:	aad    0xd4
  40f1db:	dec    ecx
  40f1dc:	jne    0x40f16d
  40f1de:	pop    es
  40f1df:	jnp    0x40f16a
  40f1e1:	addr16 jnp 0x40f199
  40f1e4:	cdq    
  40f1e5:	pushf  
  40f1e6:	dec    eax
  40f1e7:	inc    ecx
  40f1e8:	and    ecx,esp
  40f1ea:	clc    
  40f1eb:	scas   eax,DWORD PTR es:[edi]
  40f1ec:	or     ah,BYTE PTR ds:0xb0d4b840
  40f1f2:	cld    
  40f1f3:	jbe    0x40f1e4
  40f1f5:	in     eax,0xc7
  40f1f7:	(bad)  
  40f1f8:	xchg   ebp,eax
  40f1f9:	inc    esi
  40f1fa:	push   edi
  40f1fb:	std    
  40f1fc:	addr16 sub al,dh
  40f1ff:	inc    edx
  40f200:	rcr    BYTE PTR [edi],1
  40f202:	addr16 inc edi
  40f204:	test   eax,0x5a7af15a
  40f209:	sar    DWORD PTR [ebx-0x17],cl
  40f20c:	popa   
  40f20d:	jbe    0x40f195
  40f20f:	out    dx,eax
  40f210:	je     0x40f204
  40f212:	cmp    DWORD PTR [eax-0x67a5ee56],ebx
  40f218:	(bad)  
  40f219:	mov    cs,eax
  40f21b:	jecxz  0x40f264
  40f21d:	rcr    DWORD PTR [eax-0x23],1
  40f220:	adc    al,dl
  40f222:	cmc    
  40f223:	inc    ebx
  40f224:	and    ebp,DWORD PTR [edi+edx*2+0x2a100071]
  40f22b:	gs xor ch,0x40
  40f22f:	scas   al,BYTE PTR es:[edi]
  40f230:	cld    
  40f231:	(bad)  
  40f232:	cmp    BYTE PTR [ecx+0x5f],bl
  40f235:	pop    ecx
  40f236:	mov    esp,0x501412b8
  40f23b:	or     al,BYTE PTR [ebx+0x65c66f66]
  40f241:	fstp   DWORD PTR [esi+0x2c527dab]
  40f247:	test   BYTE PTR [edi+0x3e],ch
  40f24a:	cmp    ebx,DWORD PTR [esi-0x30]
  40f24d:	mov    dl,0x2
  40f24f:	stos   BYTE PTR es:[edi],al
  40f250:	pop    esp
  40f251:	in     al,0x74
  40f253:	rcr    DWORD PTR [esi+edx*4-0xdbf591d],cl
  40f25a:	mov    ah,dh
  40f25c:	and    al,0x7e
  40f25e:	xor    eax,0x708a9ab1
  40f263:	out    0x43,al
  40f265:	jl     0x40f2ae
  40f267:	add    dl,BYTE PTR [edi+esi*8]
  40f26a:	xchg   ecx,eax
  40f26b:	sbb    DWORD PTR [esp+eax*2+0x4c8f4a79],edx
  40f272:	cmp    al,0x62
  40f274:	pop    esp
  40f275:	iret   
  40f276:	stos   DWORD PTR es:[edi],eax
  40f277:	add    edx,eax
  40f279:	ret    
  40f27a:	mov    ah,0x95
  40f27c:	imul   esp,DWORD PTR [edx+0x50],0x38307d8e
  40f283:	ja     0x40f289
  40f285:	pop    ss
  40f286:	push   ebp
  40f287:	push   es
  40f288:	cmp    ch,BYTE PTR [edx]
  40f28a:	nop
  40f28b:	mov    ah,0x15
  40f28d:	or     BYTE PTR [eax+ebx*8+0x6900567d],cl
  40f294:	sbb    BYTE PTR [edi],ah
  40f296:	mov    cl,0x28
  40f298:	test   eax,0x590c2a96
  40f29d:	dec    edx
  40f29e:	lea    edx,[ebx+edx*2-0x57]
  40f2a2:	push   esi
  40f2a3:	outs   dx,BYTE PTR ds:[esi]
  40f2a4:	jne    0x40f277
  40f2a6:	stc    
  40f2a7:	ds mov edx,0x36b45eb3
  40f2ad:	jge    0x40f2ae
  40f2af:	inc    DWORD PTR [esi+0x3a]
  40f2b2:	xor    ax,0xa75a
  40f2b6:	push   ebp
  40f2b7:	stc    
  40f2b8:	xchg   esp,eax
  40f2b9:	addr16 popa 
  40f2bb:	inc    ecx
  40f2bc:	jmp    0x3ba0:0x7c4d3be3
  40f2c3:	call   0xe6c84560
  40f2c8:	icebp  
  40f2c9:	sub    esp,edi
  40f2cb:	jb     0x40f279
  40f2cd:	ficom  WORD PTR [esi]
  40f2cf:	dec    ecx
  40f2d0:	dec    eax
  40f2d1:	icebp  
  40f2d2:	xlat   BYTE PTR ds:[ebx]
  40f2d3:	ficom  DWORD PTR [ebp+ebx*2+0x5e474c61]
  40f2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2db:	dec    edi
  40f2dc:	rcr    DWORD PTR [edx],1
  40f2de:	push   ecx
  40f2df:	clc    
  40f2e0:	aaa    
  40f2e1:	ja     0x40f2c0
  40f2e3:	push   0x27330735
  40f2e8:	in     al,0x69
  40f2ea:	lds    esi,FWORD PTR [edx+0x39bc4632]
  40f2f0:	or     edi,edi
  40f2f2:	inc    ecx
  40f2f3:	push   ss
  40f2f4:	inc    edi
  40f2f5:	dec    ecx
  40f2f6:	or     ecx,DWORD PTR [eax]
  40f2f8:	ja     0x40f34d
  40f2fa:	xor    DWORD PTR [ebp+eax*8+0x218ca92e],ecx
  40f301:	and    bh,BYTE PTR [eax]
  40f303:	div    BYTE PTR [ecx-0x5685827f]
  40f309:	cld    
  40f30a:	or     DWORD PTR [edi],eax
  40f30c:	jg     0x40f300
  40f30e:	push   edx
  40f30f:	sbb    ch,BYTE PTR [ebp-0x7d1c2a9c]
  40f315:	pop    ds
  40f316:	retf   0x8a3
  40f319:	cdq    
  40f31a:	sub    DWORD PTR [edi+0x8],0x7b0c8864
  40f321:	jo     0x40f38c
  40f323:	out    dx,al
  40f324:	stos   BYTE PTR es:[edi],al
  40f325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f326:	push   eax
  40f327:	retf   0x3ace
  40f32a:	xor    DWORD PTR ds:0x6c0c2233,eax
  40f330:	(bad)  [ebx]
  40f332:	outs   dx,DWORD PTR ds:[esi]
  40f333:	mov    ds:0xc8be05f1,al
  40f338:	sbb    edx,ecx
  40f33a:	pop    eax
  40f33b:	and    DWORD PTR [eax+0x369bbba2],0x64
  40f342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f343:	repnz dec esp
  40f345:	jno    0x40f323
  40f347:	push   es
  40f348:	inc    ebx
  40f349:	inc    edx
  40f34a:	test   DWORD PTR [esi+0x7b3e2de5],0x7572c37
  40f354:	aad    0xd3
  40f356:	xor    eax,0xba9fef99
  40f35b:	(bad)  
  40f35c:	jg     0x40f3c2
  40f35e:	and    DWORD PTR [ebx+0x0],esi
  40f361:	sbb    eax,0xc18cbbfb
  40f366:	(bad)
  40f36a:	jecxz  0x40f339
  40f36c:	mov    ebx,0x5a188c18
  40f371:	mov    bx,0x1d71
  40f375:	jp     0x40f313
  40f377:	push   ebx
  40f378:	xchg   esp,eax
  40f379:	inc    edi
  40f37a:	(bad)  
  40f37b:	mov    DWORD PTR [edi+0x7a],ebp
  40f37e:	lahf   
  40f37f:	xor    cl,BYTE PTR [ebx]
  40f381:	(bad)  
  40f383:	dec    esi
  40f384:	sar    BYTE PTR [ecx-0x3f7d3d69],0xd4
  40f38b:	aam    0x5d
  40f38d:	pop    ecx
  40f38e:	push   ebp
  40f38f:	leave  
  40f390:	xchg   BYTE PTR [ebp-0x4b],dl
  40f393:	test   BYTE PTR [edi-0x43],0xae
  40f397:	pop    ds
  40f398:	push   ebx
  40f399:	loopne 0x40f367
  40f39b:	ret    
  40f39c:	add    BYTE PTR [edi+0x5f],ch
  40f39f:	repnz mov ah,0xf1
  40f3a2:	stos   BYTE PTR es:[edi],al
  40f3a3:	or     DWORD PTR [edx+0x6b],esi
  40f3a6:	cmp    ebx,DWORD PTR [eax+0x3a]
  40f3a9:	mov    al,ds:0x10355a43
  40f3ae:	dec    ecx
  40f3af:	mov    esi,0x970dd2f8
  40f3b4:	or     al,0x38
  40f3b6:	push   ss
  40f3b7:	or     eax,ebp
  40f3b9:	(bad)  
  40f3ba:	fcmovne st,st(4)
  40f3bc:	jb     0x40f438
  40f3be:	lods   al,BYTE PTR ds:[esi]
  40f3bf:	and    DWORD PTR [ecx-0x247834ac],edi
  40f3c5:	mov    ds:0xbd195e49,eax
  40f3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3cb:	jl     0x40f3c7
  40f3cd:	mov    dl,0x7c
  40f3cf:	mov    DWORD PTR [eax+0x0],ebx
  40f3d2:	mov    ds:0xfef5162f,al
  40f3d7:	sbb    eax,0x60a9c962
  40f3dc:	outs   dx,BYTE PTR cs:[esi]
  40f3de:	jmp    0x40f42b
  40f3e0:	aas    
  40f3e1:	fwait
  40f3e2:	aad    0xae
  40f3e4:	popf   
  40f3e5:	cmp    ch,BYTE PTR [ebp-0x7e]
  40f3e8:	jge    0x40f3f2
  40f3ea:	mov    ds:0x3ae54678,eax
  40f3ef:	push   edx
  40f3f0:	fs pop ecx
  40f3f2:	or     DWORD PTR [esi+ecx*1],ecx
  40f3f5:	push   eax
  40f3f6:	push   esi
  40f3f7:	mov    ch,0x2a
  40f3f9:	xlat   BYTE PTR ds:[ebx]
  40f3fa:	cmp    DWORD PTR [esi],ebx
  40f3fc:	rol    DWORD PTR [edx],1
  40f3fe:	sub    eax,0xebbfe858
  40f403:	dec    eax
  40f404:	daa    
  40f405:	lods   al,BYTE PTR cs:[esi]
  40f407:	and    esp,DWORD PTR [ebx]
  40f409:	outs   dx,DWORD PTR ds:[esi]
  40f40a:	or     BYTE PTR [edi-0x6b6d43b1],0xba
  40f411:	pop    esp
  40f412:	or     dh,BYTE PTR [eax]
  40f414:	lods   al,BYTE PTR ds:[esi]
  40f415:	test   eax,0xd64570f0
  40f41a:	sbb    ebp,DWORD PTR [eax-0x32]
  40f41d:	jle    0x40f45b
  40f41f:	push   ecx
  40f420:	call   0xf9ef:0xc7715a66
  40f427:	es (bad) 
  40f429:	pop    esi
  40f42a:	jb     0x40f48e
  40f42c:	pop    ebp
  40f42d:	int    0xc8
  40f42f:	xchg   esp,eax
  40f430:	aam    0x59
  40f432:	cmp    DWORD PTR [esi],esi
  40f434:	cmp    ah,BYTE PTR [ebx+0x6b]
  40f437:	dec    esp
  40f438:	push   es
  40f439:	call   0xcca49b0f
  40f43e:	jnp    0x40f3f7
  40f440:	jg     0x40f417
  40f442:	xchg   dh,dh
  40f444:	and    ebx,DWORD PTR [ecx+0x2ac2f19b]
  40f44a:	jne    0x40f3f4
  40f44c:	fwait
  40f44d:	or     WORD PTR ds:[edi-0x50d0a8ef],bx
  40f455:	clc    
  40f456:	jle    0x40f4cc
  40f458:	out    0xa5,al
  40f45a:	(bad)  
  40f45b:	shr    BYTE PTR [edx],cl
  40f45d:	mov    ch,0xc8
  40f45f:	xor    BYTE PTR ss:[edi],bl
  40f462:	jmp    0xdf84cc3e
  40f467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f468:	mov    DWORD PTR [edi+0xaf46ff8],ecx
  40f46e:	jns    0x40f4dd
  40f470:	push   edx
  40f471:	fsubr  DWORD PTR [ebp-0x1a]
  40f474:	add    eax,0xfddba1b9
  40f479:	xor    DWORD PTR [edx+0x4e63d75b],ebx
  40f47f:	mov    eax,ds:0xdc6a0d24
  40f484:	inc    esp
  40f485:	cli    
  40f486:	sub    al,BYTE PTR [ebp-0x422c9486]
  40f48c:	mov    BYTE PTR [ebx+0x56ab5ee6],ah
  40f492:	push   esi
  40f493:	mov    dl,0x89
  40f495:	push   cs
  40f496:	sub    al,0xad
  40f498:	iret   
  40f499:	adc    ecx,eax
  40f49b:	inc    ecx
  40f49c:	xlat   BYTE PTR ds:[ebx]
  40f49d:	xchg   esp,eax
  40f49e:	inc    edi
  40f49f:	jmp    0x150:0x9400b1b8
  40f4a6:	popf   
  40f4a7:	lods   eax,DWORD PTR ds:[esi]
  40f4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a9:	xchg   ebx,eax
  40f4aa:	or     DWORD PTR [ebx-0x61],0xffffffa2
  40f4ae:	jge    0x40f52f
  40f4b0:	test   eax,0x88c97048
  40f4b5:	in     eax,dx
  40f4b6:	jb     0x40f455
  40f4b8:	ins    BYTE PTR es:[edi],dx
  40f4b9:	cmp    dl,ah
  40f4bb:	rcl    eax,cl
  40f4bd:	and    BYTE PTR [eax+edi*1-0x79],bh
  40f4c1:	pop    edi
  40f4c2:	xor    eax,0x91c607e8
  40f4c7:	shl    DWORD PTR [edx+0x7aab11b7],cl
  40f4cd:	leave  
  40f4ce:	push   0x58a1c0e8
  40f4d3:	or     ebx,esi
  40f4d5:	sar    BYTE PTR [ecx+eiz*2],0xeb
  40f4d9:	jo     0x40f4f4
  40f4db:	loopne 0x40f4bd
  40f4dd:	or     edx,ebx
  40f4df:	shl    DWORD PTR [eiz*1-0x67a782b],cl
  40f4e6:	(bad)  [ebx+ebp*8-0xd1975ac]
  40f4ed:	mov    ah,0xfb
  40f4ef:	enter  0x3c1e,0x34
  40f4f3:	ins    BYTE PTR es:[edi],dx
  40f4f4:	or     al,0xc4
  40f4f6:	sub    eax,0x17575834
  40f4fb:	push   ecx
  40f4fc:	popf   
  40f4fd:	mov    cl,BYTE PTR [esi+0x3f82b1dd]
  40f503:	jl     0x40f56d
  40f505:	cmp    DWORD PTR [esi],eax
  40f507:	ins    WORD PTR es:[edi],dx
  40f509:	mov    WORD PTR [edi+0x5],ds
  40f50c:	je     0x40f4b5
  40f50e:	adc    al,BYTE PTR [esi-0x68830ca6]
  40f514:	push   ebx
  40f515:	dec    ebp
  40f516:	adc    al,0x84
  40f518:	(bad)  
  40f519:	js     0x40f582
  40f51b:	data16 cld 
  40f51d:	jmp    0x237a932f
  40f522:	jnp    0x40f53e
  40f524:	dec    ebx
  40f525:	(bad)  
  40f526:	hlt    
  40f527:	pop    ebp
  40f528:	xchg   ebp,eax
  40f529:	(bad)  
  40f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f52b:	mov    BYTE PTR [edx],dh
  40f52d:	fisttp DWORD PTR [eax-0x1fe879b8]
  40f533:	push   edi
  40f534:	aad    0xb1
  40f536:	in     al,0x31
  40f538:	inc    ebp
  40f539:	push   esp
  40f53a:	stos   DWORD PTR es:[edi],eax
  40f53b:	inc    edx
  40f53c:	test   dh,dh
  40f53e:	ins    BYTE PTR es:[edi],dx
  40f53f:	xor    al,0x75
  40f541:	popa   
  40f542:	mov    bh,0xf
  40f544:	retf   
  40f545:	and    al,dl
  40f547:	or     eax,0xd33165ca
  40f54c:	adc    ch,BYTE PTR ds:0xb8628810
  40f552:	adc    al,bh
  40f554:	popa   
  40f555:	xor    al,0x23
  40f557:	cmp    bh,BYTE PTR [edi+0x71992957]
  40f55d:	push   edx
  40f55e:	lahf   
  40f55f:	push   esi
  40f560:	sub    cl,BYTE PTR [ebx-0x151d4494]
  40f566:	jl     0x40f515
  40f568:	stos   DWORD PTR es:[edi],eax
  40f569:	inc    eax
  40f56a:	aaa    
  40f56b:	aad    0xf1
  40f56d:	jne    0x40f5ea
  40f56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f570:	fadd   DWORD PTR [ecx-0x9e197f1]
  40f576:	dec    ebp
  40f577:	xchg   ebp,eax
  40f578:	jmp    0xa45f9f94
  40f57d:	rcr    BYTE PTR [ebp-0x37],0xf4
  40f581:	add    ch,BYTE PTR [edi]
  40f583:	sahf   
  40f584:	add    ah,BYTE PTR [edx-0x22679e10]
  40f58a:	jbe    0x40f5a0
  40f58c:	int    0x1d
  40f58e:	mov    cl,0x25
  40f590:	fsubr  DWORD PTR [edx-0x37cd19a4]
  40f596:	outs   dx,BYTE PTR ds:[esi]
  40f597:	sbb    dl,bh
  40f599:	lds    edi,FWORD PTR [ecx-0xf]
  40f59c:	lock dec edx
  40f59e:	out    0x19,al
  40f5a0:	pop    ebp
  40f5a1:	std    
  40f5a2:	pop    edx
  40f5a3:	push   esi
  40f5a4:	mov    bh,0x59
  40f5a6:	fsub   DWORD PTR [ebx+edx*8+0x7cf0c4cb]
  40f5ad:	mov    dh,0x3c
  40f5af:	push   0xe88fb85
  40f5b4:	pop    ecx
  40f5b6:	ins    BYTE PTR es:[edi],dx
  40f5b7:	sub    DWORD PTR [edx],ebp
  40f5b9:	dec    ebx
  40f5ba:	mov    cl,0xb7
  40f5bc:	push   0x39
  40f5be:	sub    eax,0x483211a4
  40f5c3:	aad    0x34
  40f5c5:	mov    esi,0x927ed10a
  40f5ca:	mov    esp,0xe9406c62
  40f5cf:	jae    0x40f59b
  40f5d1:	xchg   BYTE PTR [edi+0x2938a9c4],dl
  40f5d7:	mov    eax,0xcc8b71b7
  40f5dc:	push   0xffffffd0
  40f5de:	aam    0x4a
  40f5e0:	inc    esi
  40f5e2:	or     DWORD PTR [ebx-0x3f],0x5e
  40f5e6:	push   0x98f302ec
  40f5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ec:	or     ecx,DWORD PTR [eax-0x7a]
  40f5ef:	pop    edi
  40f5f0:	push   ds
  40f5f1:	adc    DWORD PTR [esi+0x6d],ebx
  40f5f4:	aaa    
  40f5f5:	ss push ss
  40f5f7:	pop    esp
  40f5f8:	inc    esp
  40f5f9:	pushf  
  40f5fa:	mov    BYTE PTR [ebx],al
  40f5fc:	ds mov ebx,0x87750f10
  40f602:	jbe    0x40f5bd
  40f604:	sub    al,0x4
  40f606:	sahf   
  40f607:	aad    0x65
  40f609:	cwde   
  40f60a:	add    BYTE PTR [ecx],bh
  40f60c:	leave  
  40f60d:	out    dx,eax
  40f60e:	cld    
  40f60f:	xchg   edx,ebx
  40f611:	dec    ecx
  40f612:	or     esp,esi
  40f614:	(bad)
  40f617:	jno    0x40f5e9
  40f619:	int3   
  40f61a:	adc    al,BYTE PTR [edx-0x66]
  40f61d:	mov    ch,0x17
  40f61f:	mov    ebx,0x3cf22223
  40f624:	mov    cl,0x60
  40f626:	mov    dh,BYTE PTR [ecx]
  40f628:	std    
  40f629:	dec    esp
  40f62a:	cmp    al,0x2f
  40f62c:	int3   
  40f62d:	mov    ebx,?
  40f62f:	add    BYTE PTR [edx],bl
  40f631:	inc    esi
  40f632:	test   al,0x81
  40f634:	xor    ch,BYTE PTR [eax-0x17d0bd45]
  40f63a:	aaa    
  40f63b:	pusha  
  40f63c:	xor    DWORD PTR [edx],eax
  40f63e:	pop    eax
  40f63f:	lods   eax,DWORD PTR ds:[esi]
  40f640:	imul   esp,DWORD PTR [esi],0x29c4623c
  40f646:	adc    al,0x74
  40f648:	stos   BYTE PTR es:[edi],al
  40f649:	push   ecx
  40f64a:	cmc    
  40f64b:	and    eax,0xc7c71aa9
  40f650:	jmp    0x9605:0xe871bea6
  40f657:	add    eax,0xf8b741ae
  40f65c:	inc    esp
  40f65d:	scas   al,BYTE PTR es:[edi]
  40f65e:	jmp    FWORD PTR [edi-0x1f1427ef]
  40f664:	xor    eax,0x43ca2e14
  40f669:	dec    ebx
  40f66a:	in     eax,0x8b
  40f66c:	shl    esi,cl
  40f66e:	fdiv   DWORD PTR ds:0xfdbb7b6f
  40f674:	pusha  
  40f675:	push   ebp
  40f676:	mov    BYTE PTR [ecx],dl
  40f678:	arpl   WORD PTR [eax],sp
  40f67a:	mov    dh,BYTE PTR [edx]
  40f67c:	push   0x91ade7da
  40f681:	and    ch,dl
  40f683:	cdq    
  40f684:	int3   
  40f685:	outs   dx,DWORD PTR ds:[esi]
  40f686:	popa   
  40f687:	bndstx [ebx+0x6b],bnd0
  40f68b:	sub    al,ch
  40f68d:	pop    edx
  40f68e:	call   0x53b61d9
  40f693:	mov    bh,0x5a
  40f695:	sub    BYTE PTR [ecx-0x4c],0x38
  40f699:	orps   xmm6,XMMWORD PTR [ecx-0x1687a4d0]
  40f6a0:	xor    dh,BYTE PTR fs:[ecx-0x14]
  40f6a4:	cli    
  40f6a5:	ret    0xbf47
  40f6a8:	nop
  40f6a9:	mov    bh,dl
  40f6ab:	stos   DWORD PTR es:[edi],eax
  40f6ac:	xchg   ecx,eax
  40f6ad:	int    0xad
  40f6af:	in     al,dx
  40f6b0:	push   cs
  40f6b1:	mov    dl,0x50
  40f6b3:	xchg   BYTE PTR [eax],dl
  40f6b5:	ja     0x40f69e
  40f6b7:	retfw  
  40f6b9:	dec    ebx
  40f6ba:	addr16 push es
  40f6bc:	loop   0x40f6a6
  40f6be:	sbb    al,0xac
  40f6c0:	fist   WORD PTR gs:[ebx+ebp*2-0x40]
  40f6c5:	mov    eax,0x3d89ea88
  40f6ca:	(bad)  
  40f6cb:	repnz mov WORD PTR [edx],?
  40f6ce:	mov    ebp,0x1d717a39
  40f6d3:	mov    dh,0x8a
  40f6d5:	add    BYTE PTR [edx+ecx*4-0x77],bh
  40f6d9:	mov    ah,BYTE PTR [edi-0x2e73703d]
  40f6df:	push   esp
  40f6e0:	int3   
  40f6e1:	aad    0x93
  40f6e3:	jmp    0xb1cb:0x98e52384
  40f6ea:	int    0x8d
  40f6ec:	xor    eax,0x61006312
  40f6f1:	add    ch,cl
  40f6f3:	xchg   ecx,eax
  40f6f4:	std    
  40f6f5:	rcr    BYTE PTR [ebx],cl
  40f6f7:	mov    ebx,esi
  40f6f9:	push   edi
  40f6fa:	ror    DWORD PTR [ebx],cl
  40f6fc:	add    eax,0x16121a1f
  40f701:	imul   ecx
  40f703:	jle    0x40f6b8
  40f705:	pop    ebx
  40f706:	cwde   
  40f707:	mov    cl,0xdb
  40f709:	push   es
  40f70a:	add    BYTE PTR [eax],bh
  40f70c:	add    eax,0x1086ff88
  40f711:	cli    
  40f712:	or     eax,DWORD PTR [ebx+0x371fa1c7]
  40f718:	shl    BYTE PTR [ebx+0x32],0xfc
  40f71c:	cdq    
  40f71d:	mov    ch,0x9
  40f71f:	jecxz  0x40f749
  40f721:	jno    0x40f792
  40f723:	add    al,0xc1
  40f725:	stos   BYTE PTR es:[edi],al
  40f726:	adc    eax,0x4a122d4e
  40f72b:	mov    cl,0xb5
  40f72d:	and    BYTE PTR [ecx+eax*4+0x58],dh
  40f731:	mov    ebp,0x3af35b87
  40f736:	(bad)  
  40f737:	mov    cl,0xc8
  40f739:	sub    al,0xb3
  40f73b:	sar    ch,cl
  40f73d:	sub    esp,DWORD PTR [eax+0x1201242b]
  40f743:	cs es arpl sp,cx
  40f747:	in     al,dx
  40f748:	test   BYTE PTR [ecx+0x3e3e8495],0x9b
  40f74f:	lods   eax,DWORD PTR ds:[esi]
  40f750:	pop    edx
  40f751:	sbb    al,0x3
  40f753:	mov    ss,WORD PTR [edi+0x62ad019d]
  40f759:	mov    ch,0xba
  40f75b:	repnz inc edx
  40f75d:	xor    eax,0xe00dfe0a
  40f762:	mov    ?,edx
  40f764:	out    dx,al
  40f765:	push   es
  40f766:	ds in  eax,dx
  40f768:	mov    BYTE PTR [edx-0x2e],0x2b
  40f76c:	add    DWORD PTR [edx-0x52],eax
  40f76f:	xchg   DWORD PTR [ecx],edx
  40f771:	rcl    BYTE PTR ds:0x3cdb6e1e,0xb6
  40f778:	pop    ebx
  40f779:	mul    BYTE PTR [ebp-0x308fd392]
  40f77f:	xchg   esp,eax
  40f780:	push   ecx
  40f781:	mov    edi,0xfeda4285
  40f786:	sbb    cl,BYTE PTR [eax+0x6a]
  40f789:	push   edi
  40f78a:	(bad)  
  40f78b:	jecxz  0x40f72b
  40f78d:	stc    
  40f78e:	ins    DWORD PTR es:[edi],dx
  40f78f:	inc    ebx
  40f790:	cmp    DWORD PTR [ebx-0x7],esi
  40f793:	jae    0x40f7d5
  40f795:	lds    edi,FWORD PTR [ecx-0x7384d490]
  40f79b:	outs   dx,DWORD PTR ds:[esi]
  40f79c:	mov    ebx,0x5b162c6
  40f7a1:	(bad)  
  40f7a3:	dec    ebx
  40f7a4:	es fsqrt 
  40f7a7:	xlat   BYTE PTR ds:[ebx]
  40f7a8:	stos   BYTE PTR es:[edi],al
  40f7a9:	repz mov al,ds:0x1cce06e8
  40f7af:	ins    DWORD PTR es:[edi],dx
  40f7b0:	mov    al,BYTE PTR [esi]
  40f7b2:	jb     0x40f7a7
  40f7b4:	shl    DWORD PTR [ebp+0x72fd8b8f],1
  40f7ba:	pop    es
  40f7bb:	cmp    dh,BYTE PTR [edx+eax*2-0x62]
  40f7bf:	das    
  40f7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c1:	sub    ecx,ebp
  40f7c3:	jae    0x40f766
  40f7c5:	and    esi,DWORD PTR [ebp-0x3a]
  40f7c8:	outs   dx,DWORD PTR ds:[esi]
  40f7c9:	add    DWORD PTR [esi+0x37],edi
  40f7cc:	add    eax,ebp
  40f7ce:	xchg   ecx,eax
  40f7cf:	ffreep st(1)
  40f7d1:	mov    ch,0xc8
  40f7d3:	not    DWORD PTR [edi]
  40f7d5:	push   esp
  40f7d6:	outs   dx,BYTE PTR ds:[esi]
  40f7d7:	pop    es
  40f7d8:	or     al,0x54
  40f7da:	call   0x5e5d2a2e
  40f7df:	and    DWORD PTR [ecx-0xa],esi
  40f7e2:	jle    0x40f782
  40f7e4:	pop    edi
  40f7e5:	mov    dh,0x74
  40f7e7:	jb     0x40f7fb
  40f7e9:	sbb    cl,BYTE PTR [edi]
  40f7eb:	jle    0x40f793
  40f7ed:	imul   ebx,DWORD PTR [ecx],0x67164004
  40f7f3:	xchg   DWORD PTR [ebx],edx
  40f7f5:	sub    ah,BYTE PTR [ecx+0x3d]
  40f7f8:	jne    0x40f861
  40f7fa:	aas    
  40f7fb:	or     bh,BYTE PTR [edx-0x53292619]
  40f801:	ret    0xfffd
  40f804:	inc    edi
  40f805:	lahf   
  40f806:	retf   
  40f807:	mov    edx,0xc9b2ff4d
  40f80c:	dec    edx
  40f80d:	in     eax,dx
  40f80e:	dec    ebp
  40f80f:	aam    0xaf
  40f811:	out    0xc8,eax
  40f813:	aad    0x38
  40f815:	aam    0xaa
  40f817:	out    dx,eax
  40f818:	lock sti 
  40f81a:	or     al,BYTE PTR [ebp+edx*4+0xb]
  40f81e:	xlat   BYTE PTR ds:[ebx]
  40f81f:	ins    BYTE PTR es:[edi],dx
  40f820:	jmp    0x40f812
  40f822:	(bad)  
  40f823:	mul    BYTE PTR [edi+0x75236f41]
  40f829:	out    dx,al
  40f82a:	sbb    DWORD PTR [edx-0x75c34ca4],0xffffffa5
  40f831:	sbb    eax,0x7b7f86a1
  40f836:	aaa    
  40f837:	fimul  DWORD PTR [esi-0x2d]
  40f83a:	jb     0x40f8b5
  40f83c:	addr16 dec ecx
  40f83e:	ds mov dh,0xb1
  40f841:	ds clc 
  40f843:	mov    edi,0xe33b0547
  40f848:	imul   edi,esi,0xffffff86
  40f84b:	loop   0x40f7d9
  40f84d:	inc    esi
  40f84e:	int3   
  40f84f:	or     dh,bh
  40f851:	or     bh,bl
  40f853:	popf   
  40f854:	sub    eax,0xaebcafa5
  40f859:	stc    
  40f85a:	retf   0x1543
  40f85d:	adc    al,0x74
  40f85f:	inc    ebp
  40f860:	in     eax,dx
  40f861:	jae    0x40f888
  40f863:	mov    dl,0x95
  40f865:	add    ecx,DWORD PTR [esp+edx*8]
  40f868:	gs aam 0xa6
  40f86b:	mov    ebx,0xd6053b87
  40f870:	mov    ah,0x3a
  40f872:	sbb    DWORD PTR [esi-0x16534e3d],ebx
  40f878:	loope  0x40f836
  40f87a:	aad    0x20
  40f87c:	pop    edx
  40f87d:	imul   esp,ebp,0xe9f5f51f
  40f883:	mov    eax,0x5a09b71c
  40f888:	add    eax,ecx
  40f88a:	ja     0x40f90a
  40f88c:	(bad)
  40f88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f890:	inc    ebx
  40f891:	pop    esp
  40f892:	in     eax,dx
  40f893:	add    DWORD PTR [edx+0x77ccf2e],eax
  40f899:	nop
  40f89a:	xchg   ebp,eax
  40f89b:	sbb    BYTE PTR ds:0xcc3e939d,bl
  40f8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a2:	or     DWORD PTR [edx+0x2d],ebp
  40f8a5:	push   ds
  40f8a6:	test   DWORD PTR [eax],ebp
  40f8a8:	push   es
  40f8a9:	pop    edx
  40f8aa:	pop    esi
  40f8ab:	jp     0x40f86e
  40f8ad:	push   0xe681ba1f
  40f8b2:	lock pop ecx
  40f8b4:	fwait
  40f8b5:	pop    esp
  40f8b6:	stos   DWORD PTR es:[edi],eax
  40f8b7:	mov    ebp,DWORD PTR [edx+0x2096edae]
  40f8bd:	rcl    al,cl
  40f8bf:	xchg   BYTE PTR [edi+0x59befc6a],cl
  40f8c5:	aam    0x3b
  40f8c7:	or     ebp,ebx
  40f8c9:	mov    ebx,0xecb1df6b
  40f8ce:	inc    esi
  40f8cf:	adc    bh,BYTE PTR [ecx+0x43]
  40f8d2:	and    ecx,DWORD PTR [edi+0x4d]
  40f8d5:	stos   DWORD PTR es:[edi],eax
  40f8d6:	mov    ds:0x625d83b5,eax
  40f8db:	mov    bl,0x57
  40f8dd:	xchg   ebp,eax
  40f8de:	fidiv  DWORD PTR [ecx]
  40f8e0:	(bad)  
  40f8e1:	xchg   ecx,eax
  40f8e2:	pushf  
  40f8e3:	mov    bh,0x90
  40f8e5:	pop    eax
  40f8e6:	xor    al,cl
  40f8e8:	stos   DWORD PTR es:[edi],eax
  40f8e9:	fs pop esp
  40f8eb:	xchg   DWORD PTR [esi+0x353a5a42],ebx
  40f8f1:	mov    eax,0x84f866b
  40f8f6:	push   ebp
  40f8f7:	test   BYTE PTR [ebp-0x1c],ah
  40f8fa:	push   edi
  40f8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fc:	test   eax,0x807e2c52
  40f901:	add    esi,edi
  40f903:	sahf   
  40f904:	mov    cl,0x9a
  40f906:	sub    BYTE PTR [esi-0x10],al
  40f909:	cmp    cl,0x25
  40f90c:	sbb    DWORD PTR [ebx],edx
  40f90e:	les    edi,FWORD PTR [eax+0x1b51c92f]
  40f914:	jg     0x40f917
  40f916:	int3   
  40f917:	(bad)  
  40f919:	rcr    BYTE PTR ds:0x543e46bd,0xca
  40f920:	jo     0x40f997
  40f922:	dec    edi
  40f923:	cmp    eax,0x3a689c6d
  40f928:	and    BYTE PTR [ebx-0x47],0x1e
  40f92c:	push   ds
  40f92d:	loop   0x40f8f6
  40f92f:	stc    
  40f930:	test   BYTE PTR [edx-0x63],ch
  40f933:	mov    edx,0x704b0654
  40f938:	in     eax,dx
  40f939:	xor    ah,BYTE PTR [si+0x3dd8]
  40f93e:	scas   al,BYTE PTR es:[edi]
  40f93f:	jno    0x40f8cc
  40f941:	push   0xa7e2b453
  40f946:	push   eax
  40f947:	popa   
  40f948:	aaa    
  40f949:	jns    0x40f954
  40f94b:	ins    DWORD PTR es:[edi],dx
  40f94c:	aaa    
  40f94d:	cs push ecx
  40f94f:	shl    bh,0xb3
  40f952:	add    al,0x3b
  40f954:	sbb    esp,DWORD PTR [eax]
  40f956:	xor    eax,0xbe2ae720
  40f95b:	pop    esp
  40f95c:	or     DWORD PTR [ecx+esi*2-0x4c4f7fd2],esp
  40f963:	cdq    
  40f964:	jmp    edi
  40f966:	push   es
  40f967:	xchg   edx,eax
  40f968:	pop    ebp
  40f969:	pop    es
  40f96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96b:	ret    0x8b33
  40f96e:	lock add ecx,DWORD PTR [eax-0x53]
  40f972:	(bad)  
  40f973:	in     al,dx
  40f974:	int3   
  40f975:	jno    0x40f962
  40f977:	out    dx,al
  40f978:	mov    ecx,0x47a28fbe
  40f97d:	pop    esp
  40f97e:	lock fdivr st(7),st
  40f981:	mov    esp,0x1489204e
  40f986:	add    eax,0xb10bb420
  40f98b:	in     eax,0x0
  40f98d:	(bad)  
  40f98e:	stc    
  40f98f:	mov    dh,0x3b
  40f991:	lea    edx,[esi-0x15d69ada]
  40f997:	out    0x8a,eax
  40f999:	sub    esp,esi
  40f99b:	jle    0x40f9df
  40f99d:	mov    edx,DWORD PTR [eax+0x4f]
  40f9a0:	sub    BYTE PTR [ebx-0x5c],dl
  40f9a3:	loop   0x40f933
  40f9a5:	adc    BYTE PTR [ebx+0x768075cc],bh
  40f9ab:	sbb    esp,DWORD PTR [eax]
  40f9ad:	(bad)  
  40f9ae:	test   DWORD PTR [edx],0x6f95a94e
  40f9b4:	xchg   ecx,eax
  40f9b5:	xchg   ebp,eax
  40f9b6:	push   ss
  40f9b7:	and    bh,ch
  40f9b9:	jb     0x40fa06
  40f9bb:	cs aas 
  40f9bd:	xchg   esi,eax
  40f9be:	push   ecx
  40f9bf:	dec    bh
  40f9c1:	xor    al,0x6d
  40f9c3:	je     0x40fa1b
  40f9c5:	pop    ss
  40f9c6:	loop   0x40f959
  40f9c8:	fs jo  0x40f9a6
  40f9cb:	pop    edi
  40f9cc:	cmp    al,0x1
  40f9ce:	sbb    esi,DWORD PTR [bx-0x6483]
  40f9d3:	mov    eax,ds:0xcb6f193f
  40f9d8:	add    esi,edx
  40f9da:	sbb    ch,dh
  40f9dc:	xchg   ebx,eax
  40f9dd:	mov    ecx,DWORD PTR [ebp+0x6]
  40f9e0:	sub    BYTE PTR [esi-0x49ce9e35],dh
  40f9e6:	jg     0x40f9d5
  40f9e8:	imul   esi,esi,0x6c
  40f9eb:	mov    eax,0x3ff7d61d
  40f9f0:	cmp    cl,BYTE PTR [ecx]
  40f9f2:	pop    ebx
  40f9f3:	jbe    0x40f9f8
  40f9f5:	cmp    ebp,ebx
  40f9f7:	mov    ebx,0x21af274b
  40f9fc:	pop    esi
  40f9fd:	and    al,0x6d
  40f9ff:	std    
  40fa00:	in     al,dx
  40fa01:	std    
  40fa02:	add    eax,0x4a57a094
  40fa07:	mov    dh,0x29
  40fa09:	iret   
  40fa0a:	lea    edi,ss:[ebp+0xc2caa47]
  40fa11:	mov    ecx,0xf20e944e
  40fa16:	cmc    
  40fa17:	dec    ebp
  40fa18:	mov    DWORD PTR [esi-0x77999bb0],ecx
  40fa1e:	not    BYTE PTR [edx-0x4e]
  40fa21:	jmp    0xa012:0x11b787d5
  40fa28:	hlt    
  40fa29:	jne    0x40faa1
  40fa2b:	cmp    al,0xae
  40fa2d:	add    cl,bh
  40fa2f:	adc    BYTE PTR [eax],cl
  40fa31:	sbb    BYTE PTR [edi+0xd],bh
  40fa34:	jp     0x40fa78
  40fa36:	jns    0x40f9ff
  40fa38:	pop    ebx
  40fa39:	mov    ah,BYTE PTR [ebp+ebp*8+0x333eb599]
  40fa40:	adc    BYTE PTR [esi-0x3],dl
  40fa43:	jp     0x40fa94
  40fa45:	push   ebp
  40fa47:	leave  
  40fa48:	jle    0x40fa5c
  40fa4a:	scas   al,BYTE PTR es:[edi]
  40fa4b:	in     eax,0x8a
  40fa4d:	loopne 0x40fa17
  40fa4f:	lds    ecx,FWORD PTR cs:[eax]
  40fa52:	cmp    al,0xe9
  40fa54:	xor    esi,DWORD PTR [esi]
  40fa56:	fs repnz push edx
  40fa59:	repnz mov al,0x7
  40fa5c:	pop    es
  40fa5d:	cmp    eax,0xc13933c8
  40fa62:	xchg   ebx,eax
  40fa63:	clc    
  40fa64:	jmp    0x40fa00
  40fa66:	adc    esi,0xfb4c8aca
  40fa6c:	xchg   edx,eax
  40fa6d:	mov    ah,0x69
  40fa6f:	mov    bl,0x4f
  40fa71:	or     ecx,DWORD PTR [eax]
  40fa73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa74:	lea    esi,[esi-0x19]
  40fa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa78:	mov    edi,0xc0cd5ac0
  40fa7d:	stos   BYTE PTR es:[edi],al
  40fa7e:	add    BYTE PTR [ebp+0x59efc1a5],al
  40fa84:	pop    ds
  40fa85:	adc    DWORD PTR [esi],ecx
  40fa87:	jp     0x40facc
  40fa89:	adc    esi,DWORD PTR [edx-0x6774bf0f]
  40fa8f:	and    eax,0xf3a31dcc
  40fa94:	mov    bl,0x5f
  40fa96:	adc    edi,ebp
  40fa98:	mov    bh,0x40
  40fa9a:	stos   DWORD PTR es:[edi],eax
  40fa9b:	xor    al,0x9c
  40fa9d:	sbb    al,BYTE PTR [ebx]
  40fa9f:	push   edx
  40faa0:	or     DWORD PTR [edx],0x6e08e9c
  40faa6:	repnz add BYTE PTR ds:0xe703b7c3,cl
  40faad:	dec    edx
  40faae:	xlat   BYTE PTR ds:[ebx]
  40faaf:	rcl    DWORD PTR [ecx+ebp*2],cl
  40fab2:	mov    cl,BYTE PTR [esi]
  40fab4:	test   al,0xd5
  40fab6:	fcmovne st,st(2)
  40fab8:	dec    ebx
  40fab9:	pop    ebp
  40faba:	jmp    0x40fa73
  40fabc:	xchg   DWORD PTR [ebx-0x9],edi
  40fabf:	fcmove st,st(0)
  40fac1:	ins    BYTE PTR es:[edi],dx
  40fac2:	test   BYTE PTR [ebp+0x3c],0x86
  40fac6:	inc    eax
  40fac7:	(bad)  
  40fac8:	adc    eax,DWORD PTR [edi+0x6b3940d3]
  40face:	push   ebp
  40facf:	dec    dx
  40fad1:	fidiv  WORD PTR [edi+edi*1-0x5b]
  40fad5:	xchg   edi,eax
  40fad6:	mov    BYTE PTR [eax-0x37ca521b],al
  40fadc:	xchg   ebx,eax
  40fadd:	lock mov eax,0x6a5643b1
  40fae3:	adc    eax,DWORD PTR [ebp-0x1d]
  40fae6:	loop   0x40fa9b
  40fae8:	daa    
  40fae9:	repz imul esp,DWORD PTR [esi-0x1b],0x61
  40faee:	xchg   esp,eax
  40faef:	cmp    esp,ebx
  40faf1:	fstp   QWORD PTR [esi-0x21003b3f]
  40faf7:	or     cl,BYTE PTR [ebx]
  40faf9:	repz (bad) 
  40fafc:	enter  0x10f0,0x1e
  40fb00:	push   cs
  40fb01:	and    ecx,DWORD PTR [edi+eiz*1+0x7]
  40fb05:	rcr    DWORD PTR [ecx+0x6e],cl
  40fb08:	jae    0x40faaf
  40fb0a:	push   ebp
  40fb0b:	lods   al,BYTE PTR ds:[esi]
  40fb0c:	cdq    
  40fb0d:	mov    esi,0xcb1b60d9
  40fb12:	sbb    bh,dl
  40fb14:	or     dl,al
  40fb16:	loopne 0x40fb24
  40fb18:	add    ebp,DWORD PTR [edi-0x2e]
  40fb1b:	fwait
  40fb1c:	or     eax,0xcce419fa
  40fb21:	sub    ah,BYTE PTR [ebp+0x7ded854f]
  40fb27:	out    dx,al
  40fb28:	leave  
  40fb29:	cwde   
  40fb2a:	mov    bh,0xc4
  40fb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb2d:	shl    BYTE PTR es:[edi+0x6b32942e],0x2c
  40fb35:	(bad)  
  40fb36:	and    ecx,ebp
  40fb38:	sbb    esi,edi
  40fb3a:	xor    BYTE PTR [ecx+0x56fd48b],ch
  40fb40:	(bad)  
  40fb41:	xchg   esp,eax
  40fb42:	jl     0x40fb63
  40fb44:	push   es
  40fb45:	or     bl,BYTE PTR [ecx+0x61c227e8]
  40fb4b:	fstp   QWORD PTR [edx+esi*2-0x61b83c09]
  40fb52:	fcom   st(3)
  40fb54:	arpl   WORD PTR [ebx],cx
  40fb56:	jb     0x40fbd1
  40fb58:	mov    dh,0x34
  40fb5a:	dec    eax
  40fb5b:	or     al,0xa4
  40fb5d:	jle    0x40fb58
  40fb5f:	rol    BYTE PTR [esi-0x45],cl
  40fb62:	addr16 int 0x84
  40fb65:	cdq    
  40fb66:	xchg   ebx,eax
  40fb67:	stos   BYTE PTR es:[edi],al
  40fb68:	out    dx,al
  40fb69:	mov    edi,0xed42babc
  40fb6e:	jmp    0x40faf6
  40fb70:	xor    dh,BYTE PTR [ebx-0x2eb89429]
  40fb76:	cwde   
  40fb77:	lahf   
  40fb78:	cmp    bh,BYTE PTR [edx+edx*2+0xd5eb2ed]
  40fb7f:	mov    al,ds:0x3a26cb4f
  40fb84:	add    esi,DWORD PTR [eax+0x24]
  40fb87:	pusha  
  40fb88:	pop    ecx
  40fb89:	lods   eax,DWORD PTR ds:[esi]
  40fb8a:	mov    esp,0x5d3c9709
  40fb8f:	adc    al,0x3f
  40fb91:	outs   dx,DWORD PTR ds:[esi]
  40fb92:	imul   ebp,DWORD PTR [eax+0x61],0x7f
  40fb96:	push   ebx
  40fb97:	js     0x40fb2c
  40fb99:	and    cl,al
  40fb9b:	mov    BYTE PTR [edx+0x3b],ah
  40fb9e:	outs   dx,DWORD PTR ds:[esi]
  40fb9f:	mov    bl,BYTE PTR ds:0xd881a93a
  40fba5:	xchg   edi,eax
  40fba6:	hlt    
  40fba7:	push   ebp
  40fba8:	dec    esi
  40fba9:	int    0xdf
  40fbab:	repz mov bh,0x3a
  40fbae:	movups XMMWORD PTR [edx],xmm1
  40fbb1:	lahf   
  40fbb2:	fnsave [edi-0x6c]
  40fbb5:	inc    esp
  40fbb6:	dec    ebp
  40fbb7:	dec    eax
  40fbb8:	call   0x7805:0x4b223cf2
  40fbbf:	mov    es,WORD PTR [eax-0x1]
  40fbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbc3:	fild   QWORD PTR [esi-0x1699ce83]
  40fbc9:	fstp   QWORD PTR [edi+edx*2+0x7e7295bb]
  40fbd0:	and    ebp,ebp
  40fbd2:	push   cs
  40fbd3:	loope  0x40fc34
  40fbd5:	mov    eax,ss:0xb0dd2063
  40fbdb:	fcmovb st,st(6)
  40fbdd:	or     BYTE PTR [eax+0x56653b5a],0xde
  40fbe4:	imul   ebp,DWORD PTR [ebp-0x4b],0x61
  40fbe8:	sbb    eax,DWORD PTR [edx-0x14]
  40fbeb:	pop    ds
  40fbec:	mov    ebp,0x797fd55c
  40fbf1:	push   ebp
  40fbf2:	mov    ebp,0xcf046594
  40fbf7:	jnp    0x40fc21
  40fbf9:	mov    bh,BYTE PTR [ebp-0x70]
  40fbfc:	xchg   WORD PTR [ecx-0x60f28fb4],ax
  40fc03:	(bad)
  40fc06:	pop    ss
  40fc07:	dec    edi
  40fc08:	inc    esp
  40fc09:	das    
  40fc0a:	jmp    0x39c1:0x84894b53
  40fc11:	cdq    
  40fc12:	shr    ah,cl
  40fc14:	jb     0x40fc4d
  40fc16:	jo     0x40fbda
  40fc18:	adc    al,0x63
  40fc1a:	stos   BYTE PTR es:[edi],al
  40fc1b:	in     al,dx
  40fc1c:	jmp    0x40fc2f
  40fc1e:	xchg   esi,eax
  40fc1f:	(bad)  
  40fc20:	add    eax,0xb94bba04
  40fc25:	mov    ebx,edx
  40fc27:	sbb    ch,dl
  40fc29:	ret    
  40fc2a:	and    BYTE PTR [edi-0x48],dl
  40fc2d:	inc    edi
  40fc2e:	add    BYTE PTR [edi],0xbb
  40fc31:	fdiv   QWORD PTR [ebx]
  40fc33:	lahf   
  40fc34:	fcom   DWORD PTR [edi-0x64]
  40fc37:	mov    BYTE PTR [ecx-0x2],bh
  40fc3a:	(bad)  
  40fc3b:	or     cl,ch
  40fc3d:	int3   
  40fc3e:	into   
  40fc3f:	adc    dh,al
  40fc41:	pop    eax
  40fc42:	in     eax,dx
  40fc43:	call   0x445c9de9
  40fc48:	mov    dh,0x6b
  40fc4a:	adc    bh,BYTE PTR [ebp-0x63]
  40fc4d:	jae    0x40fc9b
  40fc4f:	popf   
  40fc50:	push   ecx
  40fc51:	dec    esi
  40fc52:	stc    
  40fc53:	das    
  40fc54:	(bad)  
  40fc56:	retf   0x72e7
  40fc59:	xchg   BYTE PTR [esi+0x50],cl
  40fc5c:	call   0x4bb39cc2
  40fc61:	fwait
  40fc62:	mov    edi,0x23dc9de6
  40fc67:	mov    ah,bl
  40fc69:	xchg   ecx,eax
  40fc6a:	lock call 0x83d:0xf2de8814
  40fc72:	scas   eax,DWORD PTR es:[edi]
  40fc73:	jl     0x40fc37
  40fc75:	cmp    esp,esp
  40fc77:	imul   edx,esi,0xffffffb5
  40fc7a:	daa    
  40fc7b:	push   ds
  40fc7c:	call   0xdd63:0x4aee1c45
  40fc83:	xor    al,0x24
  40fc85:	mov    WORD PTR [ebp-0x4f27db79],?
  40fc8b:	or     ecx,eax
  40fc8d:	popf   
  40fc8e:	cmc    
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	cmp    eax,0x8d6aa409
  40fc95:	cmp    bh,ch
  40fc97:	test   DWORD PTR [ebp-0x33],eax
  40fc9a:	xchg   edx,eax
  40fc9b:	mov    cl,0xc4
  40fc9d:	push   0xf231e886
  40fca2:	and    esi,edx
  40fca4:	cmp    al,0x77
  40fca6:	adc    bl,BYTE PTR [ecx]
  40fca8:	(bad)  
  40fca9:	jl     0x40fd07
  40fcab:	lahf   
  40fcac:	xor    BYTE PTR [edi+eiz*8],bl
  40fcaf:	cwde   
  40fcb0:	leave  
  40fcb1:	cli    
  40fcb2:	xor    BYTE PTR [ecx],0x29
  40fcb5:	sub    edi,ecx
  40fcb7:	add    ch,ah
  40fcb9:	sahf   
  40fcba:	sbb    DWORD PTR [edi+0x36fc3b3],ecx
  40fcc0:	pop    esi
  40fcc1:	arpl   bx,cx
  40fcc3:	ds dec esi
  40fcc5:	sub    DWORD PTR [edi+0x72],0x45
  40fcc9:	ss js  0x40fd2b
  40fccc:	pusha  
  40fccd:	adc    eax,0x89b4defe
  40fcd2:	stc    
  40fcd3:	test   bl,bl
  40fcd5:	test   BYTE PTR [ecx-0x15999e66],bl
  40fcdb:	sbb    al,BYTE PTR [edx+0x7d]
  40fcde:	add    BYTE PTR [ecx+0x39],bh
  40fce1:	mov    ds:0xf2e41794,al
  40fce6:	sahf   
  40fce7:	lock sahf 
  40fce9:	icebp  
  40fcea:	ss xor al,0x45
  40fced:	inc    eax
  40fcee:	adc    DWORD PTR [esi+0x2a212121],ebp
  40fcf4:	leave  
  40fcf5:	mov    esi,0x5ebe82a0
  40fcfa:	mov    bl,al
  40fcfc:	ss xchg ebp,eax
  40fcfe:	(bad)  
  40fcff:	lock xchg ecx,eax
  40fd01:	ins    BYTE PTR es:[edi],dx
  40fd02:	cwde   
  40fd03:	and    BYTE PTR [ebp*4-0x6ed8bf19],0x50
  40fd0b:	dec    ecx
  40fd0c:	fcmovnb st,st(3)
  40fd0e:	jo     0x40fd17
  40fd10:	mov    es,WORD PTR [ecx+0x7ad4e1df]
  40fd16:	cmp    ebx,DWORD PTR [ecx+0x58e7c942]
  40fd1c:	fisttp QWORD PTR [ecx]
  40fd1e:	icebp  
  40fd1f:	fistp  QWORD PTR [edi]
  40fd21:	repz icebp 
  40fd23:	jge    0x40fd25
  40fd25:	popa   
  40fd26:	push   edx
  40fd27:	cmp    ecx,DWORD PTR [ebp+0x454c6692]
  40fd2d:	mov    al,0x85
  40fd2f:	or     edx,DWORD PTR [edx+0x33617cb6]
  40fd35:	retf   0xb217
  40fd38:	push   edx
  40fd39:	xlat   BYTE PTR ds:[ebx]
  40fd3a:	xor    al,0x3d
  40fd3c:	sbb    DWORD PTR [esi+0x28],ebp
  40fd3f:	jo     0x40fd74
  40fd41:	adc    bh,BYTE PTR [eax+0x6d069cbc]
  40fd47:	jae    0x40fd21
  40fd49:	push   ecx
  40fd4a:	mov    es,eax
  40fd4c:	pushf  
  40fd4d:	nop
  40fd4e:	imul   ecx
  40fd50:	pop    ebp
  40fd51:	pushf  
  40fd52:	cmc    
  40fd53:	loope  0x40fd44
  40fd55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd56:	xchg   ecx,eax
  40fd57:	dec    eax
  40fd58:	jp     0x40fcfc
  40fd5a:	sar    dh,cl
  40fd5c:	jmp    0x1905:0x2f55251c
  40fd63:	mov    ds:0xd12aa0,eax
  40fd68:	std    
  40fd69:	sti    
  40fd6a:	(bad)  
  40fd6b:	ret    0x200c
  40fd6e:	gs dec ebp
  40fd70:	ja     0x40fd3f
  40fd72:	ins    DWORD PTR es:[edi],dx
  40fd73:	rcl    BYTE PTR [eax-0x74310ddf],1
  40fd79:	je     0x40fdb6
  40fd7b:	hlt    
  40fd7c:	test   BYTE PTR [edi+0x25],bl
  40fd7f:	aad    0xa5
  40fd81:	jmp    0x40fddb
  40fd83:	leave  
  40fd84:	pop    esi
  40fd85:	aad    0xa7
  40fd87:	outs   dx,DWORD PTR ds:[esi]
  40fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd89:	mov    bl,BYTE PTR [edi+0x155cbaf7]
  40fd8f:	add    al,0x67
  40fd91:	mov    WORD PTR [ebx-0x2],cs
  40fd94:	(bad)  
  40fd95:	jbe    0x40fdec
  40fd97:	or     eax,ebx
  40fd99:	pop    esi
  40fd9a:	jae    0x40fd7c
  40fd9c:	(bad)  
  40fd9d:	stc    
  40fd9e:	test   eax,0x8df3d161
  40fda3:	dec    ecx
  40fda4:	mov    ecx,ebp
  40fda6:	push   ecx
  40fda7:	lds    ebp,FWORD PTR [ebp+0x350d94cf]
  40fdad:	ins    BYTE PTR es:[edi],dx
  40fdae:	xchg   dh,ch
  40fdb0:	push   ds
  40fdb1:	xchg   ecx,eax
  40fdb2:	mov    ecx,0x84e2e466
  40fdb7:	pop    ebp
  40fdb8:	xor    edx,edx
  40fdba:	xchg   edx,eax
  40fdbb:	jmp    0x5563:0x88fdcc88
  40fdc2:	imul   eax,DWORD PTR [ebx-0x60f1d557],0x9f46391f
  40fdcc:	xchg   ebx,eax
  40fdcd:	add    dh,al
  40fdcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd0:	addr16 sub eax,0x3e198e42
  40fdd6:	lea    esp,[esi+ebp*4-0x5]
  40fdda:	pop    esp
  40fddb:	xchg   ecx,eax
  40fddc:	mov    ebx,0x64566bf0
  40fde1:	pop    ebp
  40fde2:	adc    BYTE PTR [edx+0x6c],dl
  40fde5:	adc    eax,0xccabc2d9
  40fdea:	and    DWORD PTR ds:0xce19cb73,esp
  40fdf0:	mov    ds,eax
  40fdf2:	cmp    al,0xa
  40fdf4:	out    0xdc,eax
  40fdf6:	iret   
  40fdf7:	mov    ds:0x6361d146,al
  40fdfc:	je     0x40fd8a
  40fdfe:	sbb    DWORD PTR [ebx+0x73],edi
  40fe01:	rol    DWORD PTR [edx+0x44],1
  40fe04:	pop    eax
  40fe05:	retf   
  40fe06:	xor    eax,0x8467aa88
  40fe0b:	aas    
  40fe0c:	(bad)  
  40fe0d:	mov    eax,ds:0x5c70585b
  40fe12:	jns    0x40fdbe
  40fe14:	or     BYTE PTR [ebx+0x7c],dl
  40fe17:	call   0xb1a3:0x9418d2f6
  40fe1e:	pop    edx
  40fe1f:	and    BYTE PTR [eax-0x3cf84698],dl
  40fe25:	call   0xd018:0x64f6d5a2
  40fe2c:	stc    
  40fe2d:	aad    0x1b
  40fe2f:	inc    edx
  40fe30:	fnstcw WORD PTR [ebp+0x7e992ab6]
  40fe36:	add    eax,0x161d3621
  40fe3b:	inc    ecx
  40fe3c:	in     al,0x5c
  40fe3e:	out    dx,al
  40fe3f:	cmp    BYTE PTR [eax-0x5dac9a11],dl
  40fe45:	mov    WORD PTR [eax+0x6db23452],gs
  40fe4b:	ins    DWORD PTR es:[edi],dx
  40fe4c:	mov    ds:0xe91fea21,al
  40fe51:	pop    ecx
  40fe52:	mov    ebp,0xebbf1f97
  40fe57:	push   ecx
  40fe58:	test   DWORD PTR [esi],esi
  40fe5a:	push   ecx
  40fe5b:	push   ds
  40fe5c:	(bad)  
  40fe5e:	in     eax,dx
  40fe5f:	shl    BYTE PTR [edx],0x83
  40fe62:	inc    edx
  40fe63:	loop   0x40feda
  40fe65:	loop   0x40fe15
  40fe67:	ins    DWORD PTR es:[edi],dx
  40fe68:	xor    dh,al
  40fe6a:	dec    esi
  40fe6b:	je     0x40fe08
  40fe6d:	shr    BYTE PTR [esi+0x3c4db389],1
  40fe73:	push   edi
  40fe74:	int    0xf2
  40fe76:	fs push 0xe9d21baa
  40fe7c:	xor    al,0x4a
  40fe7e:	adc    DWORD PTR [edi],ebp
  40fe80:	mov    BYTE PTR [eax+0x68],al
  40fe83:	push   cs
  40fe84:	or     al,0x90
  40fe86:	xchg   BYTE PTR [eax+edx*2+0x147f2ee0],dl
  40fe8d:	cmc    
  40fe8e:	popf   
  40fe8f:	ss retf 
  40fe91:	mov    ch,0x8f
  40fe93:	mov    esp,DWORD PTR ds:0xc872aa23
  40fe99:	(bad)  
  40fe9a:	sbb    eax,0xf8883c67
  40fe9f:	nop
  40fea0:	cli    
  40fea1:	xor    eax,0xb5be600e
  40fea6:	pushf  
  40fea7:	sbb    al,0x92
  40fea9:	inc    BYTE PTR [eax+0x3e291b]
  40feaf:	dec    ecx
  40feb0:	out    dx,al
  40feb1:	leave  
  40feb2:	cmp    eax,0xebfe00d
  40feb7:	sar    BYTE PTR [ecx-0x7e],0xca
  40febb:	lahf   
  40febc:	in     eax,0xa2
  40febe:	bound  ebp,QWORD PTR [esi+edx*1]
  40fec1:	pop    esp
  40fec2:	lahf   
  40fec3:	das    
  40fec4:	jmp    0x5a12:0xd27efd0f
  40fecb:	xchg   esi,eax
  40fecc:	cmp    eax,0xad593f22
  40fed1:	ins    BYTE PTR es:[edi],dx
  40fed2:	fsub   DWORD PTR [ecx-0x1300744c]
  40fed8:	(bad)  
  40fedb:	jl     0x40feb7
  40fedd:	fisttp WORD PTR [edi+edx*2+0x3979f09c]
  40fee4:	xor    eax,0x1c9004df
  40fee9:	and    edx,DWORD PTR [esi-0x3e]
  40feec:	test   DWORD PTR [ebp+0x3cf77057],0x3b5a7012
  40fef6:	xor    DWORD PTR [si],edx
  40fef9:	mov    esi,0x96d2102e
  40fefe:	sbb    al,0x52
  40ff00:	aas    
  40ff01:	jmp    0xc177:0x28ba3953
  40ff08:	cli    
  40ff09:	arpl   WORD PTR [esi],di
  40ff0b:	popw   es
  40ff0d:	nop
  40ff0e:	mov    ch,0x77
  40ff10:	lds    edx,FWORD PTR [ebp+0x2141065c]
  40ff16:	push   esp
  40ff17:	pop    edx
  40ff18:	push   ecx
  40ff19:	jle    0x40fede
  40ff1b:	ins    BYTE PTR es:[edi],dx
  40ff1c:	and    eax,ebp
  40ff1e:	xchg   ecx,eax
  40ff1f:	add    DWORD PTR [edx-0x67c89df7],ecx
  40ff25:	ins    DWORD PTR es:[edi],dx
  40ff26:	dec    edi
  40ff27:	enter  0xfc3d,0xda
  40ff2b:	push   ebp
  40ff2c:	mov    ?,WORD PTR [ecx+0x56]
  40ff2f:	test   al,0x39
  40ff31:	cmp    esi,ebx
  40ff33:	sub    esi,DWORD PTR [edi-0x43]
  40ff36:	sbb    DWORD PTR [edx+0x5b],ebp
  40ff39:	add    BYTE PTR [eax+0x2bb03ee4],0x4a
  40ff40:	rcl    DWORD PTR [eax+0x3edd65fa],cl
  40ff46:	pop    esi
  40ff47:	or     eax,0x575fae0
  40ff4c:	popf   
  40ff4d:	cmp    DWORD PTR [ebp+0x58],ebx
  40ff50:	adc    DWORD PTR [ebx+eiz*8+0x785e5ff0],esp
  40ff57:	test   al,0x8c
  40ff59:	lock pop edi
  40ff5b:	int3   
  40ff5c:	pop    ebx
  40ff5d:	add    al,0xe8
  40ff5f:	sbb    BYTE PTR [edx-0x40716425],0x2f
  40ff66:	data16 aam 0x75
  40ff69:	inc    edi
  40ff6a:	lods   al,BYTE PTR ds:[esi]
  40ff6b:	popf   
  40ff6c:	add    ebx,0x817875f7
  40ff72:	push   ecx
  40ff73:	imul   edi,DWORD PTR [eax-0x17],0x671c3ebd
  40ff7a:	mov    ch,0x84
  40ff7c:	daa    
  40ff7d:	fadd   QWORD PTR [edx-0x1f]
  40ff80:	popf   
  40ff81:	mov    ebx,0xc9f5aeed
  40ff86:	js     0x40ff24
  40ff88:	sub    BYTE PTR [ebx-0x7a95846a],dh
  40ff8e:	dec    edi
  40ff8f:	jg     0x40ff93
  40ff91:	jp     0x40ff5d
  40ff93:	mov    bl,0xf8
  40ff95:	stc    
  40ff96:	or     esp,DWORD PTR [ecx-0x126cd6c5]
  40ff9c:	test   al,0x2c
  40ff9e:	pop    eax
  40ff9f:	sbb    BYTE PTR [eax+0x4f],0x56
  40ffa3:	and    DWORD PTR [esi+0x44b4c48],esp
  40ffa9:	mov    es,ecx
  40ffab:	ja     0x40ff99
  40ffad:	js     0x410016
  40ffaf:	std    
  40ffb0:	push   ss
  40ffb1:	and    al,ch
  40ffb3:	push   0xcd855bba
  40ffb8:	loop   0x40ffe4
  40ffba:	imul   edi,DWORD PTR [ebx+0x1501da59],0xd8d2861c
  40ffc4:	sbb    BYTE PTR [eax-0x4a],bh
  40ffc7:	and    dl,BYTE PTR [ebp+ebp*2+0x2c]
  40ffcb:	mov    al,ds:0x4778626e
  40ffd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd1:	xchg   BYTE PTR [ebx-0x1e],cl
  40ffd4:	mov    cl,0x8a
  40ffd6:	dec    edi
  40ffd7:	sub    ecx,DWORD PTR [edi-0x5d]
  40ffda:	mov    edi,0x1d3c338c
  40ffdf:	inc    eax
  40ffe0:	xor    eax,0x42efdbd0
  40ffe5:	gs push cs
  40ffe7:	cmp    ch,cl
  40ffe9:	scas   al,BYTE PTR es:[edi]
  40ffea:	stos   BYTE PTR es:[edi],al
  40ffeb:	mov    ebp,eax
  40ffed:	out    dx,eax
  40ffee:	test   al,0xac
  40fff0:	fmulp  st(1),st
  40fff2:	sar    DWORD PTR [edi],cl
  40fff4:	test   eax,0xad972e28
  40fff9:	repz (bad) 
  40fffb:	pop    edx
  40fffc:	mov    edi,0xf893884d
  410001:	je     0x40fff3
  410003:	sub    al,0xf1
  410005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410006:	leave  
  410007:	out    0x63,al
  410009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000a:	mov    al,0xf1
  41000c:	adc    dh,dl
  41000e:	into   
  41000f:	add    eax,0x458d73f8
  410014:	popf   
  410015:	add    ch,BYTE PTR [edx-0x308a28ae]
  41001b:	mov    esp,DWORD PTR [edx]
  41001d:	sahf   
  41001e:	inc    ebx
  41001f:	cdq    
  410020:	fwait
  410021:	mov    al,ds:0x2bec1a8b
  410026:	fldcw  WORD PTR [esi+0x1d]
  410029:	fsubr  QWORD PTR [edi]
  41002b:	not    DWORD PTR [eax]
  41002d:	mov    bl,BYTE PTR [eax-0x3d]
  410030:	or     ebp,DWORD PTR [eax+edi*2]
  410033:	stc    
  410034:	sub    DWORD PTR [edx],ecx
  410036:	pop    ss
  410037:	mov    bh,0x4
  410039:	ds in  eax,dx
  41003b:	xchg   edi,eax
  41003c:	sub    ch,BYTE PTR [edx+0x70]
  41003f:	pop    esp
  410040:	add    esp,DWORD PTR ds:[ebx-0x17]
  410044:	inc    edx
  410045:	adc    bl,BYTE PTR ds:0xdc42241e
  41004b:	xchg   esi,eax
  41004c:	cli    
  41004d:	pop    ebp
  41004e:	lock inc ebp
  410050:	and    DWORD PTR [edi],eax
  410052:	and    dl,bh
  410054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410056:	repnz inc eax
  410058:	sub    DWORD PTR ds:0xec052165,esi
  41005e:	outs   dx,DWORD PTR ds:[esi]
  41005f:	inc    ebx
  410060:	pop    ecx
  410061:	and    DWORD PTR [ebx+0x43],ebp
  410064:	in     eax,dx
  410065:	adc    DWORD PTR ds:[eax+eiz*8+0x64c8065a],0x71
  41006e:	jo     0x41003c
  410070:	xchg   edi,eax
  410071:	ret    
  410072:	pop    ebx
  410073:	push   es
  410074:	jmp    0xae92:0x426f8133
  41007b:	fstp   TBYTE PTR [ebx+0x71]
  41007e:	jle    0x41000c
  410080:	add    dh,BYTE PTR [edx]
  410082:	inc    ecx
  410083:	(bad)  
  410084:	dec    ebp
  410085:	add    BYTE PTR [ebx-0x2bb3739],cl
  41008b:	mov    bh,0xd8
  41008d:	push   cs
  41008e:	lea    esi,[edi+0x134ef59e]
  410094:	rcl    DWORD PTR [ecx],cl
  410096:	(bad)  
  410097:	cmp    ah,BYTE PTR [eax]
  410099:	cmp    eax,0x272285d5
  41009e:	adc    al,0x4
  4100a0:	into   
  4100a1:	gs stc 
  4100a3:	sub    eax,0xa8209c0d
  4100a8:	sbb    edx,DWORD PTR [eax-0x4]
  4100ab:	cmp    ecx,edi
  4100ad:	push   esi
  4100ae:	inc    BYTE PTR [edi]
  4100b0:	adc    BYTE PTR [eax],al
  4100b2:	fidiv  WORD PTR [eax]
  4100b4:	push   edi
  4100b5:	clc    
  4100b6:	or     DWORD PTR [ebx+0x1821a282],edx
  4100bc:	inc    ebx
  4100bd:	ins    BYTE PTR es:[edi],dx
  4100be:	xchg   BYTE PTR [edi+ecx*4+0x79],bh
  4100c2:	inc    ebx
  4100c3:	pop    es
  4100c4:	cs cli 
  4100c6:	jmp    0x3a958d75
  4100cb:	and    BYTE PTR [ecx+edx*4+0x398505f],dl
  4100d2:	jmp    FWORD PTR [esi-0xe7b9610]
  4100d8:	les    edi,FWORD PTR [eax+0xa]
  4100db:	cmp    eax,0x22c4854b
  4100e0:	and    DWORD PTR [esi-0x30061ee6],edi
  4100e6:	out    0x8d,eax
  4100e8:	jmp    0xbda1e096
  4100ed:	std    
  4100ee:	bound  ebp,QWORD PTR [esi]
  4100f0:	scas   al,BYTE PTR es:[edi]
  4100f1:	adc    ebp,DWORD PTR [esi-0x3faf6dcd]
  4100f7:	push   es
  4100f8:	lahf   
  4100f9:	jecxz  0x4100e9
  4100fb:	bound  ecx,QWORD PTR [ebx+0x54bd0545]
  410101:	out    dx,eax
  410102:	push   0xa6c55c81
  410107:	ja     0x4100ee
  410109:	xlat   BYTE PTR ds:[ebx]
  41010a:	in     al,0x88
  41010c:	xchg   edx,eax
  41010d:	cmp    BYTE PTR [esi],bh
  41010f:	mov    esi,0x427a5748
  410114:	mov    dl,0x26
  410116:	mov    ?,WORD PTR [edi]
  410118:	mov    ecx,0xa264af32
  41011d:	add    BYTE PTR [edx],ch
  41011f:	fidivr WORD PTR [edi-0x32]
  410122:	je     0x4100af
  410124:	xor    BYTE PTR [ecx+0x3d],ch
  410127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410128:	or     BYTE PTR [esi],al
  41012a:	inc    edx
  41012b:	and    ch,BYTE PTR [esi+0x30638cc3]
  410131:	rol    BYTE PTR [eax-0x44],1
  410134:	cmp    al,0x69
  410136:	xor    al,0x61
  410138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410139:	jle    0x41017b
  41013b:	pop    ds
  41013c:	cli    
  41013d:	(bad)  
  41013e:	je     0x410121
  410140:	add    eax,0x1d886720
  410145:	dec    edi
  410146:	mov    ah,0xfd
  410148:	pop    eax
  410149:	lods   al,BYTE PTR ds:[esi]
  41014a:	xchg   bx,ax
  41014c:	push   ebx
  41014d:	or     eax,0x9c8b2b57
  410152:	(bad)  
  410153:	repz lea eax,[ecx-0x5e077696]
  41015a:	mov    ebp,0x73bccd3b
  41015f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410160:	xchg   esp,eax
  410161:	gs xchg ebx,eax
  410163:	mov    ah,0x31
  410165:	dec    edx
  410166:	imul   ebp,DWORD PTR [eax+edx*8-0x60],0x6
  41016b:	push   0xffffffcc
  41016d:	pop    eax
  41016e:	test   ah,0x3
  410171:	out    0xbc,al
  410173:	sub    BYTE PTR [esi+0x46],0x87
  410177:	mov    esp,0xa94fcc14
  41017c:	add    BYTE PTR [ebp+0x25],0x90
  410180:	push   edx
  410181:	hlt    
  410182:	or     ch,BYTE PTR [ebx+0x28a4c380]
  410188:	jo     0x4101f2
  41018a:	in     eax,0xb9
  41018c:	dec    eax
  41018d:	and    BYTE PTR [esi-0x40],0x45
  410191:	mov    ds:0x218929cc,eax
  410196:	pop    ebx
  410197:	mov    al,ds:0xf590691c
  41019c:	icebp  
  41019d:	xchg   esp,eax
  41019e:	stc    
  41019f:	retf   0xd5f0
  4101a2:	adc    dh,BYTE PTR [bp+si-0x43a]
  4101a7:	sbb    eax,0x6fdab36b
  4101ad:	fbld   TBYTE PTR [ebx+eiz*8+0x287e704]
  4101b4:	xor    ebx,DWORD PTR [eax+0xa]
  4101b7:	dec    edx
  4101b8:	imul   esi,ebx,0xffffffd9
  4101bb:	jo     0x4101b3
  4101bd:	adc    bl,ah
  4101bf:	adc    cl,0x9c
  4101c2:	test   BYTE PTR [edx],cl
  4101c4:	in     al,0xbe
  4101c6:	cmp    DWORD PTR [eax+0x1619f0c2],ebx
  4101cc:	enter  0xe830,0x8
  4101d0:	loopne 0x410249
  4101d2:	rcl    DWORD PTR [eax+0x2e],1
  4101d5:	xchg   esi,eax
  4101d6:	repnz or DWORD PTR [ecx+esi*2+0x5fc34dab],edx
  4101de:	jp     0x4101e3
  4101e0:	sbb    DWORD PTR [edx+eax*2+0x1a],ebx
  4101e4:	push   ds
  4101e5:	and    DWORD PTR [eax],esp
  4101e7:	fsubr  DWORD PTR [esi+0x18e75b34]
  4101ed:	lea    esp,[esi-0x5c]
  4101f0:	call   0xdafea78c
  4101f5:	rcl    DWORD PTR [ebx-0x28],1
  4101f8:	mov    ah,0xa4
  4101fa:	dec    esi
  4101fb:	adc    dh,BYTE PTR [ebx-0x5a794f71]
  410201:	xchg   edi,ebx
  410203:	adc    al,0xe7
  410205:	(bad)  
  410206:	jb     0x4101c5
  410208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410209:	mov    edi,DWORD PTR [esi+eiz*2]
  41020c:	aaa    
  41020d:	inc    ebp
  41020e:	cmp    eax,0x73ede471
  410213:	inc    edx
  410214:	idiv   BYTE PTR [eax]
  410216:	stos   BYTE PTR es:[edi],al
  410217:	ret    
  410218:	cmp    BYTE PTR [ebp+0x115e2b98],bl
  41021e:	cmpxchg DWORD PTR [eax-0x1ae60620],edi
  410225:	mov    ecx,0x8e40f2a2
  41022a:	xor    DWORD PTR ds:0x2993c425,eax
  410230:	mov    eax,ds:0xaf43d352
  410235:	and    eax,DWORD PTR [ebp-0x7a]
  410238:	test   al,0x7c
  41023a:	xchg   edx,eax
  41023c:	mov    dl,0x65
  41023e:	pop    edx
  41023f:	shr    BYTE PTR [eax+0x688d1e3a],1
  410245:	cmp    al,0xb0
  410247:	lods   al,BYTE PTR ds:[esi]
  410248:	es sub eax,ecx
  41024b:	in     al,dx
  41024c:	pusha  
  41024d:	pop    es
  41024e:	cmp    dl,ch
  410250:	dec    edx
  410251:	pop    ds
  410252:	xchg   edi,eax
  410253:	xchg   ecx,eax
  410254:	jae    0x41021f
  410256:	enter  0xe599,0xac
  41025a:	pop    edi
  41025b:	add    DWORD PTR [edi+0x3d7e0580],0x97a824b0
  410265:	ret    0x8b6d
  410268:	or     bh,bl
  41026a:	xchg   edx,eax
  41026b:	imul   ebp,ecx,0x1d
  41026e:	or     eax,0x31b26bf9
  410273:	xor    dl,BYTE PTR [edx]
  410275:	adc    bl,0x41
  410278:	jo     0x4102e8
  41027a:	fist   WORD PTR [edx]
  41027c:	pop    edx
  41027d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027e:	loop   0x41020f
  410280:	xor    bh,cl
  410282:	push   ds
  410283:	dec    DWORD PTR [ecx]
  410285:	imul   eax,DWORD PTR [edx],0x6541098
  41028b:	mov    ecx,0xa1f704d1
  410290:	test   DWORD PTR [edi+0x1b],ebp
  410293:	inc    ebx
  410294:	and    BYTE PTR [eax+0x54],0x32
  410298:	adc    al,0x5e
  41029a:	xchg   esp,eax
  41029b:	xlat   BYTE PTR ds:[ebx]
  41029c:	or     al,BYTE PTR [esi+eiz*4+0x1e]
  4102a0:	std    
  4102a1:	jns    0x4102ee
  4102a3:	test   al,0xc8
  4102a5:	jmp    0x99f2c244
  4102aa:	iret   
  4102ab:	ss sub eax,0xe06edd78
  4102b1:	rcl    DWORD PTR ss:[eax-0x3815c369],1
  4102b8:	jnp    0x4102c4
  4102ba:	ins    BYTE PTR es:[edi],dx
  4102bb:	ret    0x380f
  4102be:	xchg   DWORD PTR [edi+edx*2+0x34],edi
  4102c2:	adc    eax,0x68f1f2dc
  4102c7:	iret   
  4102c8:	cwde   
  4102c9:	popf   
  4102ca:	lds    ecx,FWORD PTR [ecx+0x5c]
  4102cd:	pop    es
  4102ce:	inc    ebp
  4102cf:	mov    edi,edi
  4102d1:	cli    
  4102d2:	adc    ebx,DWORD PTR ds:0x4b341fff
  4102d8:	inc    edx
  4102d9:	lods   eax,DWORD PTR ds:[esi]
  4102da:	out    0xcd,eax
  4102dc:	jg     0x410315
  4102de:	cmp    BYTE PTR [esi-0x7],0x59
  4102e2:	push   edi
  4102e3:	cmp    al,0xfa
  4102e5:	jbe    0x410344
  4102e7:	daa    
  4102e8:	jmp    0x4102c8
  4102ea:	xor    edx,DWORD PTR ds:0x3468fd1a
  4102f0:	xor    ebx,ebp
  4102f2:	(bad)  
  4102f3:	xor    dl,BYTE PTR [ebp-0x497393c7]
  4102f9:	shl    BYTE PTR [esp+ebx*1],1
  4102fc:	mov    bh,0xd7
  4102fe:	sbb    DWORD PTR [edi+0x6],edi
  410301:	xor    al,0xd2
  410303:	gs xchg ecx,eax
  410305:	popf   
  410306:	(bad)  
  410307:	push   edx
  410308:	xor    esi,esp
  41030a:	ja     0x410308
  41030c:	imul   edx,DWORD PTR [esi+0x634a5709],0xffffffb9
  410313:	push   esi
  410314:	and    BYTE PTR ss:[ebp-0x45],al
  410318:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031a:	inc    edi
  41031b:	xchg   BYTE PTR [ebx+ebx*1],ch
  41031e:	adc    ah,ah
  410320:	sar    ch,0x3f
  410323:	scas   eax,DWORD PTR es:[edi]
  410324:	pusha  
  410325:	fist   WORD PTR ds:0x2a95925f
  41032b:	sbb    bh,dl
  41032d:	loope  0x41038e
  41032f:	jecxz  0x4102c8
  410331:	lds    edx,FWORD PTR [ebx]
  410333:	loopne 0x4102cd
  410335:	push   ecx
  410336:	or     al,0xcf
  410338:	sub    DWORD PTR [edi+0xcc0a735],ecx
  41033e:	pop    ecx
  41033f:	add    eax,0x7fb8b3f3
  410344:	lods   al,BYTE PTR ds:[esi]
  410345:	push   ebp
  410346:	push   edx
  410347:	test   al,0x6c
  410349:	test   al,0xc1
  41034b:	fist   WORD PTR ds:0xd81ecfcb
  410351:	repnz aad 0xb7
  410354:	adc    cl,dh
  410356:	nop
  410357:	push   ss
  410358:	mov    dh,0x70
  41035a:	jmp    0x4103b0
  41035c:	nop
  41035d:	scas   eax,DWORD PTR es:[edi]
  41035e:	jb     0x410331
  410360:	lods   al,BYTE PTR ds:[esi]
  410361:	sub    dl,BYTE PTR [edx]
  410363:	or     DWORD PTR [eax],edx
  410365:	push   esp
  410366:	mov    cl,bl
  410368:	adc    ebx,DWORD PTR [edi+0x76d01805]
  41036e:	ds sahf 
  410370:	dec    ebx
  410371:	mov    dl,0x24
  410373:	mov    al,ds:0xf26200c7
  410378:	jmp    0x410336
  41037a:	xchg   BYTE PTR [edx+0x5db49b3d],dl
  410380:	pop    ebp
  410381:	shl    ch,1
  410383:	dec    esi
  410384:	scas   al,BYTE PTR es:[edi]
  410385:	xor    esi,ecx
  410387:	test   eax,0x8b76dd4
  41038c:	or     al,0x22
  41038e:	pop    edi
  41038f:	int3   
  410390:	daa    
  410391:	push   0x7d20f5ce
  410396:	inc    esi
  410397:	div    ecx
  410399:	fstp   DWORD PTR [edx+ebp*1-0x50]
  41039d:	mov    ecx,0x1f41a4e3
  4103a2:	cvtps2pd xmm1,QWORD PTR [ecx]
  4103a5:	inc    esi
  4103a6:	xchg   ebx,eax
  4103a7:	jo     0x410424
  4103a9:	dec    esi
  4103aa:	sbb    eax,0x9bffb06b
  4103af:	add    bl,al
  4103b1:	pop    ebx
  4103b2:	add    DWORD PTR [ebp+0x4b808c36],ebx
  4103b8:	jbe    0x410365
  4103ba:	outs   dx,DWORD PTR ds:[esi]
  4103bb:	push   edi
  4103bc:	push   ss
  4103bd:	ins    DWORD PTR es:[edi],dx
  4103be:	mov    WORD PTR [ebx],?
  4103c0:	fs loop 0x4103c8
  4103c3:	or     BYTE PTR ds:0x6f6bb3c3,cl
  4103ca:	test   BYTE PTR [ecx-0x7ecde108],al
  4103d0:	ret    
  4103d1:	sub    al,0x46
  4103d3:	outs   dx,DWORD PTR ds:[esi]
  4103d4:	test   BYTE PTR [esi+0x3b],al
  4103d7:	jns    0x410445
  4103d9:	inc    esi
  4103da:	iret   
  4103db:	test   al,0xf3
  4103dd:	jp     0x41038c
  4103df:	aaa    
  4103e0:	mov    DWORD PTR [edi+0x4f971aac],edi
  4103e6:	inc    edx
  4103e7:	mov    ebp,0x7c4b0f23
  4103ec:	call   0xa9b65cda
  4103f1:	xor    ecx,esp
  4103f3:	pop    edi
  4103f4:	and    ebx,edx
  4103f6:	je     0x410444
  4103f8:	sbb    cl,0x3e
  4103fb:	out    0x14,al
  4103fd:	jge    0x4103d2
  4103ff:	test   al,0x9b
  410401:	call   0x7c282be4
  410406:	call   0x4011:0xab01c0cf
  41040d:	retf   
  41040e:	int3   
  41040f:	out    0xe6,al
  410411:	or     esi,esi
  410413:	pop    eax
  410414:	test   eax,0x19648783
  410419:	jno    0x4103ae
  41041b:	fisubr DWORD PTR [esi-0x34]
  41041e:	shl    esp,1
  410420:	js     0x4103a6
  410422:	xchg   edx,eax
  410423:	je     0x4103c3
  410425:	sub    DWORD PTR [edx],ebp
  410427:	popf   
  410428:	ds mov ah,0x11
  41042b:	shl    DWORD PTR [ecx+0x2b70fd7c],0xc4
  410432:	call   FWORD PTR [eax+0x46775d92]
  410438:	leave  
  410439:	pusha  
  41043a:	stos   BYTE PTR es:[edi],al
  41043b:	das    
  41043c:	inc    esp
  41043d:	mov    ch,bl
  41043f:	jnp    0x41041d
  410441:	push   ecx
  410442:	fistp  DWORD PTR [edi+0x1d]
  410445:	call   0x74f437b4
  41044a:	sbb    ecx,esp
  41044c:	adc    DWORD PTR [eax],edx
  41044e:	fimul  DWORD PTR [ecx-0x79]
  410451:	sbb    al,bh
  410453:	cmp    cl,BYTE PTR [ebx+0x2d063c6d]
  410459:	add    eax,0x27299a43
  41045e:	or     ah,cl
  410460:	inc    ecx
  410461:	mov    eax,ds:0xc0a1ef76
  410466:	xchg   DWORD PTR [eax+0x46],ebx
  410469:	xor    al,0x1f
  41046b:	mov    ebp,0xe8d0143d
  410470:	push   es
  410471:	sar    DWORD PTR [ebx-0x2ace644e],0x5f
  410478:	xchg   ebp,eax
  410479:	mov    eax,ds:0x777dc82a
  41047e:	xor    DWORD PTR [ebp-0x1cc92138],0x75
  410485:	in     eax,0x52
  410487:	xor    DWORD PTR [ebp+0x54c8eda7],esi
  41048d:	mov    ds:0x166468ed,eax
  410492:	inc    ebx
  410493:	push   ds
  410494:	scas   eax,DWORD PTR es:[edi]
  410495:	adc    edi,DWORD PTR [edi]
  410497:	mov    fs,WORD PTR ds:0x366a315
  41049d:	les    esp,FWORD PTR [ecx+0x63e890dc]
  4104a3:	aad    0xb0
  4104a5:	xchg   ecx,eax
  4104a6:	(bad)  
  4104a7:	cmp    BYTE PTR [eax-0x69c06fe8],dh
  4104ad:	retf   0xd2c1
  4104b0:	jecxz  0x410492
  4104b2:	loope  0x4104d3
  4104b4:	add    eax,0x23
  4104b7:	adc    eax,0x1bb1211d
  4104bc:	data16 das 
  4104be:	mov    esp,0xc8495a83
  4104c3:	out    0x95,al
  4104c5:	xchg   ecx,eax
  4104c6:	mov    DWORD PTR [edx],esi
  4104c8:	fiadd  DWORD PTR [esi]
  4104ca:	lea    esi,[esi]
  4104cc:	mov    DWORD PTR [ebx+0x4cf39c5],edi
  4104d2:	stos   BYTE PTR es:[edi],al
  4104d3:	cmp    BYTE PTR ds:0xb153c29,al
  4104d9:	push   esp
  4104da:	jg     0x41046f
  4104dc:	or     eax,0xb208d7a1
  4104e1:	shl    BYTE PTR [ecx-0x72],cl
  4104e4:	jmp    0x908b:0x6a20f5f7
  4104eb:	or     DWORD PTR [ebx],edi
  4104ed:	scas   al,BYTE PTR es:[edi]
  4104ee:	test   al,0xa
  4104f0:	xor    DWORD PTR [edx+0x750bed0c],edx
  4104f6:	inc    esp
  4104f7:	mov    ebp,0x4afc19f2
  4104fc:	mov    dl,0x61
  4104fe:	pop    eax
  4104ff:	cli    
  410500:	jl     0x41050c
  410502:	mov    ebx,0xa05e06ea
  410507:	test   al,0xd0
  410509:	shl    DWORD PTR ds:0x9f9acc24,cl
  41050f:	(bad)  
  410510:	xchg   ecx,eax
  410511:	inc    edx
  410512:	ficomp WORD PTR [ebx-0x72e69a66]
  410518:	pop    edi
  410519:	nop
  41051a:	lods   al,BYTE PTR ds:[esi]
  41051b:	adc    esp,ebp
  41051d:	ins    DWORD PTR es:[edi],dx
  41051e:	in     al,dx
  41051f:	adc    cl,BYTE PTR [edx+0xc]
  410522:	push   edi
  410523:	repz or DWORD PTR [ecx-0x657cb6c7],esp
  41052a:	or     ebx,DWORD PTR [ecx-0x4]
  41052d:	stos   BYTE PTR es:[edi],al
  41052e:	std    
  41052f:	in     eax,0x97
  410531:	jp     0x41051a
  410533:	add    DWORD PTR [eax+ebp*2+0x5c05c4a2],esi
  41053a:	xchg   ebp,eax
  41053b:	in     al,dx
  41053c:	lods   eax,DWORD PTR ds:[esi]
  41053d:	cmp    edi,eax
  41053f:	xchg   ebx,eax
  410540:	jo     0x4104e9
  410542:	js     0x4104e6
  410544:	test   BYTE PTR [ebx+0x55],ah
  410547:	jle    0x410534
  410549:	mov    edi,0x40e90d6
  41054e:	int3   
  41054f:	add    BYTE PTR [eax],al
  410551:	add    ebx,DWORD PTR [ebp-0x6e8b76e]
  410557:	xchg   DWORD PTR ds:0xa6aa5342,esp
  41055d:	pop    ds
  41055e:	sub    BYTE PTR [edx],dh
  410560:	mov    ebp,DWORD PTR [ebp+eiz*2-0x1b]
  410564:	push   ebp
  410565:	ret    
  410566:	and    al,0x74
  410568:	mov    bl,0x63
  41056a:	jmp    0x4105bb
  41056c:	sub    BYTE PTR [edx+0x21],al
  41056f:	push   edi
  410570:	jnp    0x410540
  410572:	sbb    BYTE PTR [edx+0x25],ah
  410575:	iret   
  410576:	dec    eax
  410577:	inc    edx
  410578:	fiadd  WORD PTR [ebx]
  41057a:	cmp    bl,BYTE PTR [eax]
  41057c:	sbb    ebp,DWORD PTR [eax-0x6fa2c58c]
  410582:	jns    0x410541
  410584:	mov    WORD PTR [edx-0x4353d3c9],cs
  41058a:	arpl   dx,bx
  41058c:	mov    WORD PTR [esi+0x6a7ac3ac],cs
  410592:	and    ecx,DWORD PTR [esi]
  410594:	sbb    esi,ebx
  410596:	nop
  410597:	fnstenv [eax+0x492eafd8]
  41059d:	fcom   QWORD PTR [ebx+0x7a45487]
  4105a3:	push   esi
  4105a4:	int    0x52
  4105a6:	jno    0x4105e1
  4105a8:	(bad)  
  4105a9:	xor    ebp,ebx
  4105ab:	jb     0x410606
  4105ad:	jg     0x4105a1
  4105af:	dec    eax
  4105b0:	mov    edi,0x44217271
  4105b5:	adc    eax,0x64c15389
  4105ba:	pop    edx
  4105bb:	clc    
  4105bc:	push   0xeddb72f0
  4105c1:	dec    ebp
  4105c2:	stos   BYTE PTR es:[edi],al
  4105c3:	pop    ecx
  4105c4:	pop    edx
  4105c5:	sub    edi,DWORD PTR [edi-0x1a]
  4105c8:	sub    DWORD PTR [ebp-0x50b5f199],esp
  4105ce:	mov    ecx,0x6ba26c0e
  4105d3:	pop    ss
  4105d4:	mov    eax,0x9540b708
  4105d9:	ja     0x410563
  4105db:	add    al,0x9b
  4105dd:	mov    ch,0x88
  4105df:	ja     0x4105ed
  4105e1:	push   cs
  4105e2:	loope  0x410575
  4105e4:	push   esi
  4105e5:	mov    dh,0x4f
  4105e7:	mov    dh,0xb9
  4105e9:	ss cmc 
  4105eb:	out    0xa1,eax
  4105ed:	add    eax,0xf0693e4d
  4105f2:	push   0xffffffe0
  4105f4:	inc    ebx
  4105f5:	outs   dx,BYTE PTR ds:[esi]
  4105f6:	and    edi,DWORD PTR [ecx+esi*2+0x65]
  4105fa:	xor    al,0x41
  4105fc:	jne    0x4105df
  4105fe:	(bad)  
  4105ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410600:	loopne 0x41064c
  410602:	test   DWORD PTR [ebx+0x56],0xf19c524e
  410609:	mov    ebp,0x8f577ddf
  41060e:	inc    ebx
  41060f:	fwait
  410610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410611:	div    cl
  410613:	ja     0x410637
  410615:	jbe    0x410641
  410617:	dec    ebp
  410618:	pop    ss
  410619:	es mov ecx,0x39e37690
  41061f:	sub    ecx,DWORD PTR [edi]
  410621:	xor    eax,0xc4155688
  410626:	dec    edi
  410627:	test   DWORD PTR [edi],edi
  410629:	loope  0x4105ba
  41062b:	push   cs
  41062c:	(bad)  
  41062d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41062e:	push   esp
  41062f:	dec    edx
  410630:	sbb    DWORD PTR [eax],eax
  410632:	cwde   
  410633:	inc    BYTE PTR [eax+0x78]
  410636:	arpl   WORD PTR [edi+0x3c],si
  410639:	(bad)  
  41063a:	cdq    
  41063b:	adc    DWORD PTR [ebp-0x50],ecx
  41063e:	mov    bl,ah
  410640:	enter  0x7996,0xd4
  410644:	jno    0x41068b
  410646:	jns    0x410684
  410648:	iret   
  410649:	cld    
  41064a:	lds    edi,FWORD PTR [esi-0x9]
  41064d:	fucomp st(4)
  41064f:	sbb    esp,DWORD PTR [esi]
  410651:	loope  0x410623
  410653:	mul    DWORD PTR [edi-0xc]
  410656:	dec    esi
  410657:	and    eax,0xf2c3f3ae
  41065c:	iret   
  41065d:	in     eax,dx
  41065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065f:	ret    0x752c
  410662:	imul   edi,DWORD PTR [esi+eiz*1+0x41],0x72
  410667:	inc    edi
  410668:	ins    BYTE PTR es:[edi],dx
  410669:	pop    es
  41066a:	xchg   ebx,eax
  41066b:	push   ecx
  41066c:	adc    bh,BYTE PTR [edi+ebp*1]
  41066f:	in     eax,0x61
  410671:	lods   eax,DWORD PTR ds:[esi]
  410672:	into   
  410673:	icebp  
  410674:	(bad)  
  410675:	xor    DWORD PTR [ecx],esp
  410677:	(bad)  [ebx+0x35f90cb7]
  41067d:	out    0x6b,eax
  41067f:	mov    al,ds:0xeb6f0e15
  410684:	pop    edx
  410685:	std    
  410686:	fs or  al,0xf7
  410689:	mov    esi,0x84865eaf
  41068e:	inc    edx
  41068f:	add    al,0x29
  410691:	sbb    al,0xf6
  410693:	aad    0x7e
  410695:	mov    ds:0xb22a0ccf,al
  41069a:	jl     0x410640
  41069c:	loop   0x41071a
  41069e:	test   DWORD PTR es:[edx+0x687f9da7],esi
  4106a5:	sbb    ecx,DWORD PTR [ebx+0x48ad6de]
  4106ab:	sbb    DWORD PTR ds:0x765904b1,ebx
  4106b1:	mov    cl,0xac
  4106b3:	cwde   
  4106b4:	cmp    BYTE PTR [edx-0x9],al
  4106b7:	sub    BYTE PTR [esi-0x67b3e1a2],0x98
  4106be:	mov    edi,0x7c38b38
  4106c3:	sar    BYTE PTR [esi+0x25554544],1
  4106c9:	xchg   esp,eax
  4106ca:	mov    ah,0x5
  4106cc:	dec    esi
  4106cd:	mov    fs,WORD PTR [edi]
  4106cf:	(bad)  
  4106d0:	cmp    al,0x6
  4106d2:	or     esp,edi
  4106d4:	or     BYTE PTR [edx],0x7e
  4106d7:	mov    esp,0xcf13e338
  4106dc:	and    al,0xc1
  4106de:	or     eax,0xec98e5b2
  4106e3:	adc    DWORD PTR [ecx+edx*1+0x5556c229],edx
  4106ea:	mov    ds:0x250271d2,eax
  4106ef:	ss push ds
  4106f1:	xor    al,0x6d
  4106f3:	neg    BYTE PTR gs:[esi-0xe027186]
  4106fa:	or     al,0x13
  4106fc:	les    ecx,FWORD PTR [edx-0x2]
  4106ff:	fcmovnbe st,st(6)
  410701:	jl     0x4106bd
  410703:	lock cdq 
  410705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410706:	pop    edx
  410707:	rol    BYTE PTR [ebx],0x63
  41070a:	fisubr DWORD PTR [edi+0x3d63a5ab]
  410710:	nop
  410711:	(bad)  
  410712:	out    dx,eax
  410713:	and    bl,bh
  410715:	iret   
  410716:	lods   al,BYTE PTR ds:[esi]
  410717:	test   BYTE PTR [ebx+0x9],ah
  41071a:	out    dx,eax
  41071b:	jae    0x41079a
  41071d:	pop    ds
  41071e:	es add esp,esi
  410721:	sub    ebp,esi
  410723:	sub    eax,0xcef07367
  410728:	in     al,dx
  410729:	(bad)
  41072c:	push   edi
  41072d:	fiadd  WORD PTR [esi-0x4b]
  410730:	scas   al,BYTE PTR es:[edi]
  410731:	das    
  410732:	addr16 leave 
  410734:	das    
  410735:	add    ecx,ebp
  410737:	inc    ebx
  410738:	aad    0x18
  41073a:	popf   
  41073b:	out    0x33,al
  41073d:	retf   
  41073e:	mov    dh,0xf2
  410740:	mov    dh,0xfe
  410742:	scas   al,BYTE PTR es:[edi]
  410743:	inc    esp
  410744:	rol    BYTE PTR [esi+0x1f],1
  410747:	(bad)  
  410748:	pop    ebx
  410749:	icebp  
  41074a:	js     0x410727
  41074c:	mov    al,0xf8
  41074e:	ins    DWORD PTR es:[edi],dx
  41074f:	mov    dh,0x34
  410751:	dec    edx
  410752:	rcl    BYTE PTR [eax+edi*8],cl
  410755:	ins    BYTE PTR es:[edi],dx
  410756:	rol    DWORD PTR [esi],0x1
  410759:	icebp  
  41075a:	fidiv  DWORD PTR [edi]
  41075c:	rcl    DWORD PTR [esi-0x2acf297b],cl
  410762:	xor    eax,DWORD PTR [ebp-0x76]
  410765:	(bad)  
  410766:	fild   QWORD PTR [eax]
  410768:	pop    eax
  410769:	ins    BYTE PTR es:[edi],dx
  41076a:	pop    ss
  41076b:	stos   DWORD PTR es:[edi],eax
  41076c:	pop    edx
  41076d:	mov    al,ds:0x5b4b8db
  410772:	jae    0x410716
  410774:	mov    esi,0x83116897
  410779:	jns    0x410733
  41077b:	lock pop bp
  41077e:	bound  esp,QWORD PTR [edx+0x44dcb6c7]
  410784:	test   BYTE PTR [ebp+0x175cb1b9],bh
  41078a:	ror    DWORD PTR [esi],1
  41078c:	inc    BYTE PTR [ebp-0x4e]
  41078f:	inc    edi
  410790:	jmp    0x410734
  410792:	cmp    ecx,DWORD PTR [esi-0x6b]
  410795:	es xchg ebx,eax
  410797:	or     eax,0xf6a43345
  41079c:	add    bl,BYTE PTR [edx-0x46]
  41079f:	in     eax,0xf4
  4107a1:	xor    DWORD PTR [ecx],ebp
  4107a3:	int3   
  4107a4:	xchg   edi,eax
  4107a5:	retf   0x9367
  4107a8:	pop    eax
  4107a9:	lock jno 0x4107b3
  4107ac:	sub    ah,al
  4107ae:	das    
  4107af:	xchg   DWORD PTR [ecx-0x2b],ebp
  4107b2:	pusha  
  4107b3:	fild   QWORD PTR [edi]
  4107b5:	push   ss
  4107b6:	ror    BYTE PTR [eax],1
  4107b8:	sub    BYTE PTR [ecx+0x1b],0x5c
  4107bc:	xchg   ebx,eax
  4107bd:	mov    es,edx
  4107bf:	sub    eax,0x27b5eeb2
  4107c4:	lods   al,BYTE PTR ds:[esi]
  4107c5:	ficom  DWORD PTR [eax*8-0x154cf0bc]
  4107cc:	stos   BYTE PTR es:[edi],al
  4107cd:	pop    ds
  4107ce:	or     BYTE PTR [ecx-0x509913bf],al
  4107d4:	and    eax,0xc8313687
  4107d9:	mov    ah,0x9e
  4107db:	ss pop ecx
  4107dd:	pop    esi
  4107de:	and    al,0xb1
  4107e0:	adc    DWORD PTR [eax],eax
  4107e2:	in     eax,0xe2
  4107e4:	inc    ebx
  4107e5:	push   es
  4107e6:	shr    BYTE PTR [edi],cl
  4107e8:	adc    dl,BYTE PTR [eax+0x61]
  4107eb:	xor    dh,ch
  4107ed:	icebp  
  4107ee:	data16 sbb al,0x6b
  4107f1:	(bad)  
  4107f2:	mov    ah,0x30
  4107f4:	add    BYTE PTR [ebx+0x443a422a],bh
  4107fa:	dec    ebx
  4107fb:	enter  0xf262,0x58
  4107ff:	push   esi
  410800:	loopne 0x410785
  410802:	mov    ebx,0x754d896d
  410807:	das    
  410808:	xlat   BYTE PTR ds:[ebx]
  410809:	call   DWORD PTR [eax+0x73e48603]
  41080f:	adc    al,0x63
  410811:	xchg   esp,eax
  410812:	sub    al,0xf0
  410814:	in     eax,0xd4
  410816:	scas   al,BYTE PTR es:[edi]
  410817:	es int 0xca
  41081a:	and    BYTE PTR [edi+0x33],cl
  41081d:	(bad)  
  41081e:	jae    0x4107b9
  410820:	push   0x864cf76d
  410825:	out    dx,al
  410826:	stos   DWORD PTR es:[edi],eax
  410827:	dec    eax
  410828:	mov    BYTE PTR [esi+0x3940893e],al
  41082e:	cmp    DWORD PTR [ebx+ecx*8],edx
  410831:	mov    ch,0xd1
  410833:	stc    
  410834:	inc    esi
  410835:	sub    eax,0xa04bcc7a
  41083a:	mov    ch,0xcb
  41083c:	stos   BYTE PTR es:[edi],al
  41083d:	push   esp
  41083e:	sub    DWORD PTR [eax-0x61],0x2f
  410842:	add    eax,0xed012c0d
  410847:	pop    ebp
  410848:	jbe    0x4107eb
  41084a:	push   ebp
  41084b:	pop    edi
  41084c:	fmul   QWORD PTR [edx+0x44]
  41084f:	and    eax,0x89be253f
  410854:	add    eax,DWORD PTR [esi+edi*2+0x4b]
  410858:	div    BYTE PTR [eax-0x68]
  41085b:	add    dl,cl
  41085d:	cmc    
  41085e:	push   ds
  41085f:	xor    DWORD PTR [edi+ecx*1-0x183c86a7],0xffffff86
  410867:	(bad)  
  410868:	aad    0x98
  41086a:	pop    esi
  41086b:	arpl   WORD PTR [eax],bx
  41086d:	outs   dx,BYTE PTR ds:[esi]
  41086e:	pop    DWORD PTR [ecx+0x65ff24b1]
  410874:	sub    ebp,0x9ed39048
  41087a:	add    edi,DWORD PTR [esi]
  41087c:	xchg   esi,eax
  41087d:	loope  0x41085c
  41087f:	xchg   ebx,eax
  410880:	cdq    
  410881:	inc    ebp
  410882:	push   ebx
  410883:	sub    BYTE PTR [esi-0x19],bl
  410886:	inc    edx
  410887:	mov    DWORD PTR [edx+0x5c],edx
  41088a:	enter  0x67f6,0xdc
  41088e:	sbb    BYTE PTR [eax],bl
  410890:	lods   al,BYTE PTR ds:[esi]
  410891:	xor    al,0xa9
  410893:	nop
  410894:	ja     0x410858
  410896:	sub    DWORD PTR [edi+ebx*2-0x1cee355d],edi
  41089d:	popa   
  41089e:	stc    
  41089f:	push   edi
  4108a0:	push   ebp
  4108a1:	pop    esi
  4108a2:	jle    0x410844
  4108a4:	icebp  
  4108a5:	mov    cl,0xe1
  4108a7:	or     esi,DWORD PTR [esp+edi*1-0x1b1a91a4]
  4108ae:	test   DWORD PTR [ecx-0x57],ecx
  4108b1:	mov    ecx,0x9e0f5228
  4108b6:	test   eax,0x8b4343a2
  4108bb:	rol    DWORD PTR [eax+0x31aab77c],1
  4108c1:	pop    edx
  4108c2:	sar    BYTE PTR ds:0xffeee8da,cl
  4108c8:	mov    dl,0x40
  4108ca:	adc    edi,DWORD PTR [ebx-0x38ea4fed]
  4108d0:	xor    ax,0x9430
  4108d4:	outs   dx,BYTE PTR ds:[esi]
  4108d5:	sub    ah,BYTE PTR [ecx-0x4782d944]
  4108db:	(bad)  
  4108dc:	int    0xd1
  4108de:	in     al,0xc
  4108e0:	loope  0x410925
  4108e2:	sub    al,0xf3
  4108e4:	xor    ecx,DWORD PTR [edx+0x59358409]
  4108ea:	mov    ch,0xea
  4108ec:	mov    al,ds:0xe8193797
  4108f1:	daa    
  4108f2:	push   ds
  4108f3:	and    BYTE PTR [ebx+eiz*8+0x214e49cc],dl
  4108fa:	xor    bl,BYTE PTR [ebp+0x374cfc0c]
  410900:	js     0x410917
  410902:	out    dx,eax
  410903:	loop   0x410893
  410905:	pop    edi
  410906:	push   esi
  410907:	inc    ebp
  410908:	pop    ebx
  410909:	inc    edx
  41090a:	mov    WORD PTR [edi+0x6a5429d5],fs
  410910:	push   0x12
  410912:	or     esi,DWORD PTR [ecx-0x41]
  410915:	push   0x424fb81e
  41091a:	idiv   DWORD PTR [eax-0x218b7608]
  410920:	fdivr  st,st(5)
  410922:	psubusb mm3,mm7
  410925:	push   esi
  410926:	sahf   
  410927:	and    eax,0xd8ccd4b5
  41092c:	cli    
  41092d:	shl    BYTE PTR [ebx-0xb],1
  410930:	rcr    BYTE PTR [edi-0x20],1
  410933:	cmp    DWORD PTR [edi],0xffffffbf
  410936:	pop    es
  410937:	mov    bh,0xfc
  410939:	sbb    al,0x75
  41093b:	ds jle 0x4108ef
  41093e:	jle    0x410975
  410940:	push   edx
  410941:	sbb    ecx,esp
  410943:	call   0x4870d1a5
  410948:	aad    0xce
  41094a:	ret    0x2023
  41094d:	stos   DWORD PTR es:[edi],eax
  41094e:	pop    esi
  41094f:	inc    ebx
  410950:	mov    ds:0xed587047,eax
  410955:	int3   
  410956:	fdiv   QWORD PTR [ecx]
  410958:	test   al,0x8
  41095a:	(bad)  
  41095b:	gs int3 
  41095d:	int3   
  41095e:	mov    dh,ah
  410960:	rdmsr  
  410962:	(bad)  
  410963:	in     al,dx
  410964:	call   0xbde4:0xde826689
  41096b:	fdivrp st(5),st
  41096d:	jp     0x4109c4
  41096f:	push   ecx
  410970:	mov    edi,DWORD PTR [edi-0x3d053fd3]
  410976:	jae    0x41090d
  410978:	mov    esi,0xe45f137a
  41097d:	lea    ebp,[edx-0x67]
  410980:	or     al,0xcf
  410982:	icebp  
  410983:	pop    edi
  410984:	add    eax,0x68c8229a
  410989:	push   esi
  41098a:	sbb    dl,ch
  41098c:	push   0x22a8e598
  410991:	popa   
  410992:	(bad)  
  410993:	loope  0x410970
  410995:	or     ecx,DWORD PTR [ebx]
  410997:	clc    
  410998:	adc    eax,0x210594a8
  41099d:	js     0x41097e
  41099f:	popa   
  4109a0:	(bad)  
  4109a1:	lock xchg esi,eax
  4109a3:	ja     0x410a0d
  4109a5:	jb     0x41098c
  4109a7:	jl     0x4109de
  4109a9:	pop    edx
  4109aa:	mov    BYTE PTR [eax],ch
  4109ac:	or     al,0xf
  4109ae:	push   cs
  4109af:	cmp    DWORD PTR [edi+edx*8+0x7a5c96d9],0xa8adcc8b
  4109ba:	add    dh,BYTE PTR [edx]
  4109bc:	xor    eax,0xd70dd6c9
  4109c1:	imul   ebp,ecx,0x6fffcca9
  4109c7:	pop    es
  4109c8:	in     eax,dx
  4109c9:	pop    ss
  4109ca:	jno    0x4109de
  4109cc:	add    eax,0xc69d1128
  4109d1:	mov    al,0x65
  4109d3:	mov    ds:0x136af699,eax
  4109d8:	imul   eax,DWORD PTR [eax+0x1f],0x2e
  4109dc:	test   al,0x2a
  4109de:	inc    esi
  4109df:	int    0xea
  4109e1:	aam    0x6f
  4109e3:	test   eax,0x716e6d6e
  4109e8:	fist   DWORD PTR [ebx+0x5c]
  4109eb:	es out dx,al
  4109ed:	mov    bl,0xf1
  4109ef:	rcr    DWORD PTR [ecx+0x2b],0x6e
  4109f3:	sbb    ebp,eax
  4109f5:	mov    bl,0xd6
  4109f7:	aas    
  4109f8:	cld    
  4109f9:	xlat   BYTE PTR ds:[ebx]
  4109fa:	push   esi
  4109fb:	lods   al,BYTE PTR ds:[esi]
  4109fd:	adc    al,0x71
  4109ff:	mov    DWORD PTR [edx+0x66],ebp
  410a02:	addr16 mov al,0xae
  410a05:	cmp    al,0x58
  410a07:	(bad)  
  410a08:	test   eax,0x12f9ecbc
  410a0d:	push   edx
  410a0e:	ficomp DWORD PTR [edi+0x68]
  410a11:	inc    esi
  410a12:	sub    ebx,DWORD PTR [eax+0x6f]
  410a15:	or     esi,DWORD PTR [ebx]
  410a17:	aam    0x3f
  410a19:	inc    edx
  410a1a:	jb     0x410a3c
  410a1c:	jmp    0x3a1f64a1
  410a21:	(bad)  
  410a22:	clc    
  410a23:	sar    eax,1
  410a25:	loopne 0x4109da
  410a27:	je     0x410a68
  410a29:	lods   al,BYTE PTR ds:[esi]
  410a2a:	push   es
  410a2b:	imul   edi,DWORD PTR [esi],0x48
  410a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2f:	push   edi
  410a30:	mov    ebp,0x6d8a4212
  410a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a36:	or     al,0x4a
  410a38:	jl     0x4109c4
  410a3a:	rol    BYTE PTR [ebp+eiz*2-0x6cd47b78],0x71
  410a42:	ds int 0x15
  410a45:	jno    0x410a1a
  410a47:	cmp    esp,0x37
  410a4a:	sbb    dh,BYTE PTR [ebp+0x71b894a3]
  410a50:	out    dx,al
  410a51:	pushf  
  410a52:	test   DWORD PTR [eax-0x29],ebx
  410a55:	jl     0x4109fe
  410a57:	int    0xc1
  410a59:	xchg   ebx,eax
  410a5a:	inc    ebx
  410a5b:	or     al,0x2d
  410a5d:	bswap  ecx
  410a5f:	mov    cl,0xcb
  410a61:	pop    ecx
  410a62:	inc    esp
  410a63:	arpl   WORD PTR [edi+0x30412de9],bp
  410a69:	jno    0x410ab6
  410a6b:	js     0x410a46
  410a6d:	mov    ebx,0x22a7f58e
  410a72:	sahf   
  410a73:	repnz gs ds sbb al,0x9d
  410a78:	jl     0x410a35
  410a7a:	fwait
  410a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7c:	sti    
  410a7d:	xchg   edi,eax
  410a7e:	adc    eax,0xf98cefde
  410a83:	loop   0x410aa8
  410a85:	xchg   esi,eax
  410a86:	sahf   
  410a87:	into   
  410a88:	mov    DWORD PTR [ecx-0x23],0x535d60f3
  410a8f:	bound  esi,QWORD PTR [esp+eiz*8]
  410a92:	dec    esp
  410a93:	popf   
  410a94:	div    DWORD PTR [eax+edi*8-0x6ad10422]
  410a9b:	sub    dh,ch
  410a9d:	and    dh,al
  410a9f:	xchg   ch,bh
  410aa1:	mov    DWORD PTR [ecx-0x174ec347],0xc86e4cca
  410aab:	xor    eax,0xbfd5d5e4
  410ab0:	lods   eax,DWORD PTR ds:[esi]
  410ab1:	inc    esi
  410ab2:	or     ebp,DWORD PTR [esi]
  410ab4:	inc    eax
  410ab5:	(bad)  
  410ab6:	das    
  410ab7:	or     dl,BYTE PTR [ebp-0x7f]
  410aba:	jnp    0x410a72
  410abc:	ins    DWORD PTR es:[edi],dx
  410abd:	js     0x410a6a
  410abf:	adc    bh,BYTE PTR [edi]
  410ac1:	fdivrp st(6),st
  410ac3:	sbb    DWORD PTR [ebx+eiz*1-0x26],0x38
  410ac8:	and    cl,BYTE PTR [eax+0x2a]
  410acb:	adc    bh,BYTE PTR [edx+0x5e]
  410ace:	(bad)  
  410acf:	fwait
  410ad0:	(bad)  
  410ad1:	enter  0x1792,0xad
  410ad5:	(bad)  
  410ad6:	and    esi,DWORD PTR [ebx+ebx*8-0x2f]
  410ada:	and    al,0x36
  410adc:	mov    al,BYTE PTR [edx]
  410ade:	sub    al,0x9c
  410ae0:	lds    ebx,FWORD PTR [ecx]
  410ae2:	sahf   
  410ae3:	adc    al,0xb
  410ae5:	iret   
  410ae6:	cld    
  410ae7:	mov    ebp,0x3cc53a14
  410aec:	and    eax,0x2009c884
  410af1:	cmp    ch,BYTE PTR [eax]
  410af3:	ja     0x410b6f
  410af5:	nop
  410af6:	mov    eax,0xc8054d16
  410afb:	jp     0x410aeb
  410afd:	mov    bh,BYTE PTR [esp+eiz*4]
  410b00:	retf   
  410b01:	in     eax,dx
  410b02:	cdq    
  410b03:	imul   DWORD PTR [edi]
  410b05:	ins    BYTE PTR es:[edi],dx
  410b06:	adc    BYTE PTR [esi-0x1b],dh
  410b09:	mov    bl,0xf8
  410b0b:	mov    esi,0x476b49c4
  410b10:	xchg   edi,edi
  410b12:	sub    eax,0x27c3fcf5
  410b17:	aas    
  410b18:	jp     0x410abb
  410b1a:	addr16 dec esp
  410b1c:	xchg   BYTE PTR [ecx-0x32],ch
  410b1f:	sub    ecx,edi
  410b21:	mov    bl,0x2
  410b23:	adc    ebp,ecx
  410b25:	dec    edx
  410b26:	adc    eax,0x2eaf573c
  410b2b:	rol    BYTE PTR [ecx-0x73b326a3],cl
  410b31:	pushw  ds
  410b33:	push   edx
  410b34:	adc    esp,DWORD PTR [edi]
  410b36:	mov    ch,0xbe
  410b38:	dec    ecx
  410b39:	sub    al,0xe1
  410b3b:	add    DWORD PTR [ecx-0x21],esp
  410b3e:	mov    esp,0x30c5cd4e
  410b43:	mov    bl,0x8b
  410b45:	aad    0xeb
  410b47:	lea    edi,[eax-0x4bc1154e]
  410b4d:	pop    edx
  410b4e:	sub    eax,0xa2b9b6be
  410b53:	jle    0x76ec09a9
  410b59:	jb     0x410b3f
  410b5b:	adc    al,0x33
  410b5d:	scas   eax,DWORD PTR es:[edi]
  410b5e:	lahf   
  410b5f:	fmul   DWORD PTR [edi-0x50]
  410b62:	add    al,BYTE PTR [esi-0x40]
  410b65:	inc    edi
  410b66:	mov    eax,0x5553e600
  410b6b:	dec    ebx
  410b6c:	ret    0xb476
  410b6f:	sti    
  410b70:	xor    eax,0x9e9e95fd
  410b75:	mov    BYTE PTR [edi],dh
  410b77:	std    
  410b78:	dec    eax
  410b79:	mov    ds:0x1a952af0,eax
  410b7e:	sahf   
  410b7f:	cli    
  410b80:	(bad)  
  410b81:	cdq    
  410b82:	ja     0x410b50
  410b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b86:	add    BYTE PTR [ebp+0x1],ah
  410b89:	xchg   esi,eax
  410b8a:	pop    ss
  410b8b:	inc    ecx
  410b8c:	jecxz  0x410be1
  410b8e:	mov    bh,0x26
  410b90:	fwait
  410b91:	in     al,0xe
  410b93:	mov    ah,0xe
  410b95:	fwait
  410b96:	aam    0x60
  410b98:	push   esi
  410b99:	ja     0x410b91
  410b9b:	sbb    eax,0x9caf7f50
  410ba0:	and    cl,bh
  410ba2:	add    eax,DWORD PTR [esi-0x6d]
  410ba5:	popf   
  410ba6:	xor    cl,BYTE PTR [eax]
  410ba8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410baa:	sbb    eax,0x596cafa0
  410baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bb0:	or     bl,BYTE PTR [edi-0x3d20af82]
  410bb6:	cli    
  410bb7:	mov    ds:0xfeda6c18,al
  410bbc:	dec    edi
  410bbd:	cs aam 0xcc
  410bc0:	fst    QWORD PTR [esi]
  410bc2:	adc    al,0x94
  410bc4:	push   ecx
  410bc5:	ins    BYTE PTR es:[edi],dx
  410bc6:	loope  0x410c00
  410bc8:	lea    esi,[ebx+0x553516fd]
  410bce:	ins    DWORD PTR es:[edi],dx
  410bcf:	inc    esi
  410bd0:	test   al,0x43
  410bd2:	push   edi
  410bd3:	(bad)  
  410bd4:	je     0x410c0c
  410bd6:	xchg   BYTE PTR cs:[edx+0xfa28e2],bh
  410bdd:	inc    ebx
  410bde:	retf   0xf063
  410be1:	dec    edx
  410be2:	cmp    eax,0x7995209a
  410be7:	pusha  
  410be8:	fst    st(6)
  410bea:	sub    al,0xf8
  410bec:	xchg   edi,eax
  410bed:	sub    al,0xb9
  410bef:	sbb    bl,cl
  410bf1:	ins    DWORD PTR es:[edi],dx
  410bf2:	jne    0x410c21
  410bf4:	lock imul edx,DWORD PTR [ebp+esi*2-0x74],0x1b
  410bfa:	pushf  
  410bfb:	jle    0x410b82
  410bfd:	dec    esp
  410bfe:	jp     0x410c62
  410c00:	xchg   edi,eax
  410c01:	push   edi
  410c02:	aaa    
  410c03:	jecxz  0x410b9b
  410c05:	outs   dx,DWORD PTR ds:[esi]
  410c06:	dec    edi
  410c07:	mov    ecx,0x568e6806
  410c0c:	adc    edx,DWORD PTR [esp+edx*2]
  410c0f:	mov    al,0x55
  410c11:	add    eax,0xd2dae520
  410c16:	push   ebx
  410c17:	call   0xa3f9:0x98740777
  410c1e:	push   0xffffff83
  410c20:	lods   eax,DWORD PTR ds:[esi]
  410c21:	fwait
  410c22:	sbb    ch,BYTE PTR [edi-0x1a68fcb8]
  410c28:	sar    BYTE PTR [ecx+0x5c],cl
  410c2b:	inc    ecx
  410c2c:	loopne 0x410bca
  410c2e:	inc    ebp
  410c2f:	mov    al,0xc6
  410c31:	mov    dl,0xc
  410c33:	add    eax,0xdea83efd
  410c38:	sub    BYTE PTR [ebp+0x0],ah
  410c3b:	mov    dh,0x6c
  410c3d:	push   ebp
  410c3e:	jmp    0x410bff
  410c40:	sti    
  410c41:	add    bl,BYTE PTR [esi+0x6a]
  410c44:	sar    BYTE PTR [ebp-0xb276769],1
  410c4a:	sbb    eax,0x43c0a13
  410c4f:	mov    esp,0xd74d8693
  410c54:	bound  esi,QWORD PTR fs:[ebx+ebp*8+0x48]
  410c59:	call   0xba1db186
  410c5e:	lahf   
  410c5f:	ss aam 0x5f
  410c62:	push   eax
  410c63:	inc    esi
  410c64:	leave  
  410c65:	lods   eax,DWORD PTR ds:[esi]
  410c66:	fwait
  410c67:	and    ebx,eax
  410c69:	leave  
  410c6a:	jb     0x410c88
  410c6c:	mov    eax,0xe634966
  410c71:	nop
  410c72:	mov    ebx,0xbbd9fa41
  410c77:	test   ch,dl
  410c79:	mov    ebx,0xbd795b09
  410c7e:	popf   
  410c7f:	inc    esi
  410c80:	cmc    
  410c81:	inc    ebx
  410c82:	sbb    al,0x72
  410c84:	in     al,dx
  410c85:	or     al,0x7a
  410c87:	cs push 0x50
  410c8a:	adc    BYTE PTR [ecx-0x56775526],bh
  410c90:	mov    BYTE PTR [esi+0x5b],dl
  410c93:	daa    
  410c94:	(bad)  
  410c95:	xchg   ecx,eax
  410c96:	rol    bh,1
  410c98:	hlt    
  410c99:	push   esp
  410c9a:	dec    ebp
  410c9b:	sbb    esp,DWORD PTR [ebx+0x2d]
  410c9e:	inc    esp
  410c9f:	rcl    DWORD PTR [edi+0x7a],cl
  410ca2:	jo     0x410cca
  410ca4:	(bad)  
  410ca5:	std    
  410ca6:	pop    eax
  410ca7:	push   0x59
  410ca9:	iret   
  410caa:	xchg   BYTE PTR [ecx-0x7b],al
  410cad:	loope  0x410cdb
  410caf:	push   ebp
  410cb0:	sahf   
  410cb1:	mov    DWORD PTR [edx],0x255107a3
  410cb7:	and    BYTE PTR [edx],ch
  410cb9:	outs   dx,BYTE PTR ds:[esi]
  410cba:	mov    al,0xf0
  410cbc:	xchg   DWORD PTR [esi-0x32b04571],ebp
  410cc2:	in     eax,dx
  410cc3:	je     0x410cd9
  410cc5:	mov    dh,0xf3
  410cc7:	push   esp
  410cc8:	push   cs
  410cc9:	adc    eax,0x11a0bad2
  410cce:	sub    esp,DWORD PTR [ecx]
  410cd0:	les    esp,FWORD PTR [eax]
  410cd2:	loope  0x410d26
  410cd4:	dec    BYTE PTR [ebp+0x53]
  410cd7:	jmp    0x410d54
  410cd9:	pushf  
  410cda:	int3   
  410cdb:	cdq    
  410cdc:	(bad)  
  410cdd:	jl     0x410cf7
  410cdf:	and    DWORD PTR [edi-0x74],esp
  410ce2:	and    esp,DWORD PTR [edx-0x2a0ca9e1]
  410ce8:	cmp    DWORD PTR [ebp+0x324104cd],esi
  410cee:	sbb    dl,bl
  410cf0:	sbb    al,0x4c
  410cf2:	cs xchg esp,eax
  410cf4:	push   edx
  410cf5:	cwde   
  410cf6:	pop    esp
  410cf7:	pop    es
  410cf8:	mov    al,0x36
  410cfa:	pop    eax
  410cfb:	ret    
  410cfc:	xor    edi,esi
  410cfe:	and    bl,BYTE PTR [esp+esi*2+0x45]
  410d02:	cmp    BYTE PTR ds:0x9dbf2d99,bl
  410d08:	fimul  WORD PTR [edi+0x725cf28e]
  410d0e:	imul   ebx,esp,0x6b
  410d11:	cmp    eax,0xed7d540c
  410d16:	pop    edi
  410d17:	push   esp
  410d18:	gs (bad) 
  410d1a:	mov    BYTE PTR [edx+0x3381aa9],0x2e
  410d21:	inc    ebx
  410d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d23:	push   esp
  410d24:	add    DWORD PTR [esp+edx*2-0x6194cc1d],0x1e7a573
  410d2f:	(bad)  
  410d30:	dec    esp
  410d31:	xor    esp,DWORD PTR [edi]
  410d33:	lds    edi,FWORD PTR [edi]
  410d35:	mov    ebx,0xb5c50728
  410d3a:	cmp    ebp,esp
  410d3c:	sub    DWORD PTR [ebp+eiz*4+0x4eb9887d],edi
  410d43:	retf   
  410d44:	jmp    0x6f87624f
  410d49:	cmp    BYTE PTR [ecx-0x12],bl
  410d4c:	das    
  410d4d:	pop    ecx
  410d4e:	inc    ebp
  410d4f:	xor    eax,0xab674547
  410d54:	cwde   
  410d55:	imul   DWORD PTR [edi-0x6c]
  410d58:	(bad)  
  410d59:	cdq    
  410d5a:	pop    edi
  410d5b:	icebp  
  410d5c:	scas   eax,DWORD PTR es:[edi]
  410d5d:	sub    al,0xfa
  410d5f:	cs and al,0x53
  410d62:	(bad)  
  410d63:	fsub   st,st(4)
  410d65:	in     al,dx
  410d66:	or     eax,0xecf3aa50
  410d6b:	xor    BYTE PTR [esi],ch
  410d6d:	xor    eax,0x71ebc9b
  410d72:	adc    eax,0x4bf40294
  410d77:	mov    ebx,0xff118835
  410d7c:	pop    ecx
  410d7d:	(bad)  
  410d7e:	or     eax,0xa62734d5
  410d83:	push   ss
  410d84:	sbb    eax,0xff0e2ec0
  410d89:	push   esi
  410d8a:	pop    ebp
  410d8b:	ja     0x410e00
  410d8d:	xor    edi,ecx
  410d8f:	gs jo  0x410e11
  410d92:	and    BYTE PTR [eax-0x18b98ac],0x6b
  410d99:	xchg   BYTE PTR [edx+0xb],bh
  410d9c:	in     al,0xd1
  410d9e:	cwde   
  410d9f:	adc    eax,0xc6be4bbc
  410da4:	or     DWORD PTR [eax],edi
  410da6:	add    esi,DWORD PTR [eax]
  410da8:	pop    ebx
  410da9:	mov    ah,0x93
  410dab:	fnstenv [edx+ebx*8-0x7745dc96]
  410db2:	or     eax,0xa512e3da
  410db7:	pop    edi
  410db8:	or     al,0xb6
  410dba:	push   DWORD PTR [edx-0x49]
  410dbd:	jbe    0x410e30
  410dbf:	inc    eax
  410dc0:	loop   0x410e3b
  410dc2:	int    0xc4
  410dc4:	jl     0x410da2
  410dc6:	mov    ch,0xb
  410dc8:	jmp    0xc9c7:0xa6b34196
  410dcf:	leave  
  410dd0:	pushf  
  410dd1:	cmp    DWORD PTR es:[edi],eax
  410dd4:	call   0x4a45ee83
  410dd9:	cwde   
  410dda:	pushf  
  410ddb:	mov    ah,0xe6
  410ddd:	xchg   ebp,eax
  410dde:	dec    ebp
  410ddf:	rcr    BYTE PTR [edi],1
  410de1:	push   0xffffffc5
  410de3:	or     BYTE PTR [edi-0x3655de40],0xf
  410dea:	(bad)  
  410deb:	lods   eax,DWORD PTR ds:[esi]
  410dec:	pop    ecx
  410ded:	(bad)  
  410dee:	and    BYTE PTR [ecx-0x46],bl
  410df1:	sub    BYTE PTR [ecx],ch
  410df3:	retf   0xfc25
  410df6:	shl    BYTE PTR [esp+edx*4],0xe3
  410dfa:	dec    esi
  410dfb:	dec    ecx
  410dfc:	xlat   BYTE PTR ds:[ebx]
  410dfd:	lds    ecx,FWORD PTR [esi]
  410dff:	xor    DWORD PTR [ecx-0x5764d2e8],ecx
  410e05:	aad    0x2d
  410e07:	adc    ebx,edi
  410e09:	xchg   esp,eax
  410e0a:	xchg   edi,eax
  410e0b:	mov    esi,0xcb4e6f0d
  410e10:	push   edx
  410e11:	sub    esp,eax
  410e13:	cmp    BYTE PTR [eax+0x3e],ah
  410e16:	jmp    0x410d9a
  410e18:	mov    BYTE PTR [edi],ah
  410e1a:	pop    ds
  410e1b:	jno    0x410e21
  410e1d:	stc    
  410e1e:	push   edx
  410e1f:	mov    eax,ds:0xf4de1e72
  410e24:	cwde   
  410e25:	imul   ecx,DWORD PTR ds:0x6e482f9c,0xffffffe3
  410e2c:	xchg   esp,eax
  410e2d:	icebp  
  410e2e:	xor    ecx,0x60
  410e31:	jp     0x410e5e
  410e33:	jmp    0x410e88
  410e35:	xor    BYTE PTR [edi-0x11c96398],dh
  410e3b:	imul   BYTE PTR [edx]
  410e3d:	lldt   WORD PTR [eax]
  410e40:	xchg   BYTE PTR [ecx],bh
  410e42:	arpl   WORD PTR [ecx+eiz*8-0x232cd93d],dx
  410e49:	in     eax,0x25
  410e4b:	cmp    dl,BYTE PTR [ecx-0x230e0ceb]
  410e51:	and    BYTE PTR [eax],bl
  410e53:	adc    BYTE PTR [eax-0x2],cl
  410e56:	adc    eax,0xeda71907
  410e5b:	or     edx,DWORD PTR [ebp+0x57]
  410e5e:	mul    DWORD PTR [edi+0x6b2416a3]
  410e64:	fdivr  st(6),st
  410e66:	addr16 aaa 
  410e68:	leave  
  410e69:	dec    esi
  410e6a:	imul   edi,DWORD PTR [edx-0x3d],0xa131fe86
  410e71:	inc    eax
  410e72:	mov    eax,ds:0x9fd83e07
  410e77:	add    bh,BYTE PTR [eax-0xa6b667a]
  410e7d:	aad    0xe1
  410e7f:	clc    
  410e80:	xor    esp,ebx
  410e82:	push   ss
  410e83:	xlat   BYTE PTR ds:[ebx]
  410e85:	call   0x8460:0x4b8f04a8
  410e8c:	test   BYTE PTR [edi-0x7462616a],bl
  410e92:	and    cl,bl
  410e94:	in     al,0xe5
  410e96:	jne    0x410e51
  410e98:	pop    ebp
  410e99:	adc    al,0xc8
  410e9b:	push   edi
  410e9c:	imul   edx,DWORD PTR [edx+0x46a1ca0f],0x42a0375
  410ea6:	ja     0x410e2d
  410ea8:	and    al,0xda
  410eaa:	xchg   BYTE PTR [ebx-0x4c],bl
  410ead:	pusha  
  410eae:	xor    dh,BYTE PTR [edi+edx*4-0x11]
  410eb2:	jbe    0x410e82
  410eb4:	not    BYTE PTR [bp+di-0x759d]
  410eb9:	dec    edx
  410eba:	dec    ebp
  410ebb:	sahf   
  410ebc:	pop    ebp
  410ebd:	xor    bl,cl
  410ebf:	jae    0x410f2e
  410ec1:	in     al,0x55
  410ec3:	mov    ds:0xeabed235,eax
  410ec8:	mov    eax,DWORD PTR [edx]
  410eca:	inc    esi
  410ecb:	jg     0x410e5b
  410ecd:	push   edi
  410ece:	push   ecx
  410ecf:	mov    dh,0x49
  410ed1:	inc    edx
  410ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed3:	and    eax,0xcf22aa3a
  410ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed9:	add    DWORD PTR [edi+edx*8],eax
  410edc:	cmp    ebx,0x3c095363
  410ee2:	hlt    
  410ee3:	mov    ah,0x84
  410ee5:	cmp    DWORD PTR [eax+edx*4-0x2],ecx
  410ee9:	jg     0x410ea6
  410eeb:	cmp    al,0x17
  410eed:	jecxz  0x410ecb
  410eef:	dec    ecx
  410ef0:	sahf   
  410ef1:	or     dl,BYTE PTR [ebx+0x6d]
  410ef4:	mov    dh,0xb1
  410ef6:	jp     0x410f38
  410ef8:	call   0x6e6c:0xe9efeba3
  410eff:	ja     0x410f11
  410f01:	dec    esp
  410f02:	sub    BYTE PTR [ecx+0xd417659],dh
  410f08:	out    dx,eax
  410f09:	pop    edi
  410f0a:	adc    al,0x26
  410f0c:	pop    ecx
  410f0d:	out    0xe6,eax
  410f0f:	jmp    0xba1d:0xe9f2087
  410f16:	sbb    dl,ch
  410f18:	inc    edi
  410f19:	in     al,dx
  410f1a:	ret    0xae0f
  410f1d:	test   BYTE PTR [esi-0x79],bl
  410f20:	imul   edx,DWORD PTR [esi+0x46],0x62
  410f24:	sti    
  410f25:	jle    0x410f67
  410f27:	mov    esp,0xfd00b0a
  410f2c:	sbb    DWORD PTR [esi+0x6aa7658a],ebx
  410f32:	stos   DWORD PTR es:[edi],eax
  410f33:	(bad)  
  410f34:	push   0x356a0a2a
  410f39:	pop    ds
  410f3a:	inc    edi
  410f3b:	icebp  
  410f3c:	cmp    al,0x8d
  410f3e:	xchg   edx,eax
  410f3f:	inc    DWORD PTR [ebx+0xc]
  410f42:	enter  0xed05,0xb4
  410f46:	shl    DWORD PTR [ebp-0x5826ab48],1
  410f4c:	xchg   esp,eax
  410f4d:	xor    al,0x79
  410f4f:	push   edx
  410f50:	jnp    0x410f84
  410f52:	enter  0x7c86,0xc7
  410f56:	iret   
  410f57:	add    BYTE PTR [ebx+0x6d],0x4
  410f5b:	adc    al,0xbc
  410f5d:	ror    DWORD PTR [eax+0x10],cl
  410f60:	enter  0x9062,0x30
  410f64:	retf   
  410f65:	or     al,0xd9
  410f67:	jge    0x410f13
  410f69:	inc    ecx
  410f6a:	dec    edx
  410f6b:	cld    
  410f6c:	dec    edx
  410f6d:	movq   QWORD PTR [esi+0x73],mm1
  410f71:	pop    eax
  410f72:	out    dx,eax
  410f73:	fstp   QWORD PTR ds:0x741175f3
  410f79:	imul   ebx,esp,0xffffffe0
  410f7c:	xchg   ecx,eax
  410f7d:	push   esp
  410f7e:	cwde   
  410f7f:	dec    dl
  410f81:	loopne 0x410f88
  410f83:	sbb    BYTE PTR [edx-0x71dcbdda],0x7b
  410f8a:	mov    ecx,0x6a7bf298
  410f8f:	lahf   
  410f90:	in     al,0xd7
  410f92:	push   0x2d220880
  410f97:	xchg   edx,eax
  410f98:	sar    DWORD PTR [ebx],cl
  410f9a:	mov    eax,DWORD PTR [edi-0xc]
  410f9d:	pop    es
  410f9e:	sar    DWORD PTR [esi+eax*1-0x1f],cl
  410fa2:	rol    DWORD PTR [ebp-0x6c],cl
  410fa5:	pop    edi
  410fa6:	arpl   WORD PTR [ecx],sp
  410fa8:	push   0xcd4b961f
  410fad:	test   ebx,ebp
  410faf:	scas   eax,DWORD PTR es:[edi]
  410fb0:	push   0xefa15cd7
  410fb5:	scas   al,BYTE PTR es:[edi]
  410fb6:	push   esp
  410fb7:	retf   0x771e
  410fba:	add    eax,0x8c015edd
  410fbf:	xor    eax,0xd74276cc
  410fc4:	mov    bh,0x57
  410fc6:	or     BYTE PTR [ebx+eiz*8-0x5a],bh
  410fca:	jae    0x410fa4
  410fcc:	sti    
  410fcd:	pop    ds
  410fce:	add    BYTE PTR [edx],0x97
  410fd1:	jmp    0x410feb
  410fd3:	lods   al,BYTE PTR ds:[esi]
  410fd4:	std    
  410fd5:	aaa    
  410fd6:	cmp    bh,0x61
  410fd9:	push   0x32
  410fdb:	(bad)  
  410fdc:	das    
  410fdd:	ins    BYTE PTR es:[edi],dx
  410fde:	in     al,0x80
  410fe0:	mov    es:0xc2db4b67,al
  410fe6:	fsubr  DWORD PTR [ebp+0x50675a92]
  410fec:	jnp    0x410fed
  410fee:	sti    
  410fef:	jno    0x410f8c
  410ff1:	loop   0x410f86
  410ff3:	sbb    al,BYTE PTR [eax-0xe]
  410ff6:	and    eax,DWORD PTR [ecx+0x4c]
  410ff9:	repnz dec ebx
  410ffb:	pusha  
  410ffc:	cmp    DWORD PTR [esi],edx
  410ffe:	jecxz  0x410fda
  411000:	xchg   edi,eax
  411001:	mov    edi,0x8a1111ba
  411006:	loop   0x410f9b
  411008:	xchg   edi,eax
  41100a:	fst    DWORD PTR es:[esi-0x14]
  41100e:	out    dx,eax
  41100f:	xchg   BYTE PTR [edx+0x6a],ah
  411012:	retf   0x4ac1
  411015:	adc    eax,0x640bbe91
  41101a:	inc    ecx
  41101b:	test   BYTE PTR [esi],cl
  41101d:	aam    0xd5
  41101f:	dec    edi
  411020:	cmp    al,0x7c
  411022:	retf   0xf7cb
  411025:	xchg   esp,eax
  411026:	icebp  
  411027:	adc    BYTE PTR [eax+ecx*8+0x5f],bh
  41102b:	cmp    al,BYTE PTR [ebx]
  41102d:	outs   dx,BYTE PTR ds:[esi]
  41102e:	inc    ebx
  41102f:	cmp    BYTE PTR [edi],bh
  411031:	mov    fs,WORD PTR [esi-0x55]
  411034:	sub    bl,BYTE PTR [eax]
  411036:	clc    
  411037:	and    al,0xdd
  411039:	or     al,0xe1
  41103b:	std    
  41103c:	outs   dx,DWORD PTR ds:[esi]
  41103d:	lods   eax,DWORD PTR ds:[esi]
  41103e:	(bad)  
  41103f:	js     0x4110be
  411041:	dec    esp
  411042:	fbld   TBYTE PTR [edx]
  411044:	xor    BYTE PTR [edi],0x48
  411047:	cmp    ebp,DWORD PTR [ebx]
  411049:	daa    
  41104a:	cmp    eax,0x2ccad2f0
  41104f:	std    
  411050:	(bad)  
  411051:	fstp   QWORD PTR [eax]
  411053:	sbb    al,0xef
  411055:	pop    eax
  411056:	pusha  
  411057:	in     al,dx
  411058:	xor    al,0xfe
  41105a:	mov    ah,0x4d
  41105c:	inc    edx
  41105d:	adc    ebp,DWORD PTR [ebp+0x20]
  411060:	into   
  411061:	popf   
  411062:	ret    
  411063:	(bad)  
  411064:	cmp    BYTE PTR [edx-0x1fd80a10],0x6e
  41106b:	jb     0x410ff2
  41106d:	inc    esi
  41106e:	dec    ecx
  41106f:	out    dx,al
  411070:	bound  ecx,QWORD PTR [ecx+eiz*1-0x48]
  411074:	je     0x4110c8
  411076:	jb     0x411075
  411078:	add    eax,0x22607f83
  41107d:	stos   DWORD PTR es:[edi],eax
  41107e:	out    0x71,al
  411080:	xchg   ecx,eax
  411081:	xchg   ebp,eax
  411082:	hlt    
  411083:	or     edx,DWORD PTR gs:[ebp+0x60]
  411087:	or     al,0x9f
  411089:	add    al,ch
  41108b:	out    0x3,eax
  41108d:	sub    DWORD PTR [edi-0x1a],ebp
  411090:	in     al,0xc0
  411092:	lock (bad) 
  411094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411095:	stc    
  411096:	ins    BYTE PTR es:[di],dx
  411098:	push   cs
  411099:	mov    dl,0xc8
  41109b:	out    0xbb,eax
  41109d:	test   DWORD PTR [ebx-0x7d],eax
  4110a0:	push   ebp
  4110a1:	fld    TBYTE PTR [ebp+0x1a]
  4110a4:	cmp    DWORD PTR [eax+0x45edbf8a],0x4
  4110ab:	cmp    cl,0xd2
  4110ae:	xchg   esp,eax
  4110af:	cmp    eax,0xfaffea7a
  4110b4:	stos   BYTE PTR es:[edi],al
  4110b5:	adc    BYTE PTR [eax-0x3f],cl
  4110b8:	cmp    cl,dh
  4110ba:	pop    esi
  4110bb:	call   0x31d595fe
  4110c0:	cmp    eax,0xc4cdcfa8
  4110c5:	int    0x68
  4110c7:	dec    eax
  4110c8:	jne    0x41107c
  4110ca:	mov    edi,edi
  4110cc:	jne    0x411123
  4110ce:	adc    BYTE PTR [esp+esi*8+0x73],bl
  4110d2:	jns    0x411096
  4110d4:	out    0xd1,eax
  4110d6:	sbb    DWORD PTR [eax+edi*1-0x46e99a8c],0x663f2e90
  4110e1:	xor    ebp,DWORD PTR [eax+0x4297aa16]
  4110e7:	or     al,0xcc
  4110e9:	imul   eax,DWORD PTR ds:0x4cf98372,0xffffff89
  4110f0:	mov    BYTE PTR [eax+0xbd6cffc],ch
  4110f6:	outs   dx,BYTE PTR ds:[esi]
  4110f7:	xor    ch,BYTE PTR [edx+0x34]
  4110fa:	xchg   esi,eax
  4110fb:	push   es
  4110fc:	loopne 0x4110b6
  4110fe:	pop    es
  4110ff:	outs   dx,BYTE PTR ds:[esi]
  411100:	loopne 0x4110fa
  411102:	cld    
  411103:	xchg   DWORD PTR [ebp+0x59],esi
  411106:	(bad)  
  411107:	xor    al,0xf4
  411109:	out    dx,eax
  41110a:	sub    DWORD PTR [esi],0xffffffbc
  41110d:	or     eax,0x635d339f
  411112:	xlat   BYTE PTR ds:[ebx]
  411113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411114:	sub    eax,esp
  411116:	pop    ebx
  411117:	pop    ecx
  411118:	mov    ebp,0x3d8e6772
  41111d:	call   0xd7c3416f
  411122:	imul   ecx,esp,0xffffffdf
  411125:	clc    
  411126:	stos   DWORD PTR es:[edi],eax
  411127:	sbb    ah,BYTE PTR [ecx-0x33890718]
  41112d:	mov    ecx,0x8dc2552c
  411132:	mov    DWORD PTR ds:0x4da6b2a7,eax
  411138:	sbb    cl,BYTE PTR [ebp-0x63]
  41113b:	into   
  41113c:	nop
  41113d:	aad    0x83
  41113f:	mov    ds:0x7e5e282b,eax
  411144:	mov    dl,0x2b
  411146:	stos   BYTE PTR es:[edi],al
  411147:	loope  0x411170
  411149:	add    eax,0xea5a342a
  41114e:	outs   dx,DWORD PTR ds:[esi]
  41114f:	xor    bl,dh
  411151:	and    eax,0x5a100646
  411156:	(bad)  
  411157:	loope  0x4110f5
  411159:	pusha  
  41115a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41115b:	hlt    
  41115c:	ret    0x8169
  41115f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411160:	pop    eax
  411161:	imul   BYTE PTR [edi]
  411163:	ret    
  411164:	pop    es
  411165:	test   eax,0x1d8e533d
  41116a:	cmova  esp,edx
  41116d:	mov    edx,0xd84f6a29
  411172:	jnp    0x41113d
  411174:	xor    al,0x5e
  411176:	gs push ds
  411178:	xor    DWORD PTR [ebp-0x4ad6460d],ebp
  41117e:	clc    
  41117f:	int    0xf6
  411181:	xchg   ebx,eax
  411182:	scas   eax,DWORD PTR es:[edi]
  411183:	pop    esi
  411184:	lods   al,BYTE PTR ds:[esi]
  411185:	aad    0x26
  411187:	outs   dx,DWORD PTR ds:[esi]
  411188:	lods   eax,DWORD PTR ds:[esi]
  411189:	out    0xbf,al
  41118b:	rcr    DWORD PTR [ebx+0x10ad7e2c],1
  411191:	inc    esi
  411192:	and    al,0x44
  411194:	mov    DWORD PTR [edx-0x35a94fe7],esi
  41119a:	mov    ch,0x91
  41119c:	je     0x41115d
  41119e:	xor    dh,BYTE PTR ss:[esi+0xe]
  4111a2:	inc    ebp
  4111a3:	inc    esi
  4111a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a6:	ja     0x4111dd
  4111a8:	(bad)  
  4111a9:	push   eax
  4111aa:	ins    BYTE PTR es:[edi],dx
  4111ab:	dec    ebp
  4111ac:	jl     0x41122b
  4111ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111af:	jg     0x4111e8
  4111b1:	sub    al,0x4f
  4111b3:	imul   ebp,DWORD PTR [ebp+0xa],0xffffff9a
  4111b7:	ds int3 
  4111b9:	mov    ebp,DWORD PTR [eax-0x57]
  4111bc:	add    eax,DWORD PTR [ecx-0x5faf1b1]
  4111c2:	(bad)  
  4111c4:	retf   0x5c8d
  4111c7:	cmp    al,ch
  4111c9:	add    ebp,ecx
  4111cb:	int3   
  4111cc:	pop    ebp
  4111cd:	retf   0x9b22
  4111d0:	adc    al,ah
  4111d2:	adc    al,BYTE PTR ds:0xa59eccdc
  4111d8:	ror    DWORD PTR [edx+0x11],1
  4111db:	pop    ds
  4111dc:	push   ds
  4111dd:	cmp    esp,DWORD PTR [edi-0x36]
  4111e0:	add    BYTE PTR [ecx-0x38b36c2a],ah
  4111e6:	dec    ecx
  4111e7:	fimul  DWORD PTR [ebx]
  4111e9:	push   ebp
  4111ea:	mov    bh,0xcc
  4111ec:	sub    eax,0xbee7bc38
  4111f1:	xchg   esi,eax
  4111f2:	lods   al,BYTE PTR ds:[esi]
  4111f3:	sbb    ebx,eax
  4111f5:	xor    eax,0x9d92a985
  4111fa:	fcom   DWORD PTR [esi+0x72a47b59]
  411200:	xor    eax,0xf29cc816
  411205:	mov    ds:0xeddc733d,eax
  41120a:	sub    BYTE PTR [esi+ecx*1],ah
  41120d:	outs   dx,BYTE PTR ds:[esi]
  41120e:	data16 mov WORD PTR ss:0xc1f62ce9,?
  411216:	lds    ebp,FWORD PTR [ecx]
  411218:	data16 sub BYTE PTR [edx-0x43],ch
  41121c:	pop    edx
  41121d:	sub    DWORD PTR [edi-0x6f6ff22a],ebx
  411223:	test   DWORD PTR [ecx+eax*4+0x7d],0x19252c5
  41122b:	call   DWORD PTR [eax-0x79]
  41122e:	mov    edi,esp
  411230:	mov    ecx,0x34d7a8c7
  411235:	xor    al,0x81
  411237:	sub    DWORD PTR ds:0xf5ac5c98,0xffffffbb
  41123e:	jae    0x4112aa
  411240:	sub    bh,BYTE PTR [esi-0x76c8843d]
  411246:	xchg   esi,eax
  411247:	dec    esp
  411248:	popf   
  411249:	cmp    eax,0x805c46e
  41124e:	imul   ebx,DWORD PTR [esi+eax*2-0x1f2ca61c],0x5b409862
  411259:	xor    esp,esi
  41125b:	lods   al,BYTE PTR ds:[esi]
  41125c:	fsubr  QWORD PTR [ecx+edi*4]
  41125f:	or     eax,0x13643cd
  411264:	push   es
  411265:	sub    al,0xd2
  411267:	pop    ebp
  411268:	jno    0x41125a
  41126a:	push   cs
  41126b:	loopne 0x4112bc
  41126d:	iret   
  41126e:	mov    ah,0x75
  411270:	enter  0xaae3,0x5a
  411274:	mov    esi,0xf9a23133
  411279:	mov    ebp,DWORD PTR [esi]
  41127b:	push   cs
  41127c:	jne    0x411258
  41127e:	repz jmp 0x41129d
  411281:	stos   BYTE PTR es:[edi],al
  411282:	inc    ecx
  411283:	sub    BYTE PTR [esi],dl
  411285:	arpl   WORD PTR [ecx],dx
  411287:	fcmove st,st(3)
  411289:	push   ds
  41128a:	and    DWORD PTR [ebx+0x213bcae9],ecx
  411290:	mov    esi,0x49ef2c7f
  411295:	cli    
  411296:	aas    
  411297:	inc    esi
  411298:	mov    ebp,0xf27083b2
  41129d:	and    ebp,DWORD PTR [edi-0x76abd344]
  4112a3:	jbe    0x4112f6
  4112a5:	add    ecx,DWORD PTR [ebx]
  4112a7:	cld    
  4112a8:	cmp    al,0x97
  4112aa:	cmp    eax,0x54627f10
  4112af:	push   cs
  4112b0:	jae    0x411239
  4112b2:	mov    ds:0x759d55dc,al
  4112b7:	(bad)  
  4112b8:	test   al,0xbe
  4112ba:	pop    edi
  4112bb:	in     al,dx
  4112bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bd:	cmp    esp,DWORD PTR [ebx-0x18]
  4112c0:	loop   0x411268
  4112c2:	enter  0xb86c,0x34
  4112c6:	clc    
  4112c7:	test   DWORD PTR [edi-0x14],esp
  4112ca:	stc    
  4112cb:	mov    cl,0x10
  4112cd:	xlat   BYTE PTR ds:[ebx]
  4112ce:	or     ebx,DWORD PTR [edx-0x2a176654]
  4112d4:	add    bh,BYTE PTR [edx-0x401312c3]
  4112da:	jne    0x4112d9
  4112dc:	push   0xffffffde
  4112de:	lahf   
  4112df:	mov    dl,0xff
  4112e1:	add    al,BYTE PTR [eax-0x1f1e9706]
  4112e7:	scas   eax,DWORD PTR es:[edi]
  4112e8:	pusha  
  4112e9:	pop    ebx
  4112ea:	xor    ebx,ecx
  4112ec:	xor    eax,0x8c82d0ad
  4112f1:	dec    ebx
  4112f2:	out    0x1d,eax
  4112f4:	mov    es,eax
  4112f6:	mov    eax,ds:0xbc045943
  4112fb:	pop    ebp
  4112fc:	inc    edx
  4112fd:	ins    DWORD PTR es:[edi],dx
  4112fe:	cmp    BYTE PTR [esp+ebp*8-0x43bb5b98],dl
  411305:	pop    esp
  411306:	imul   esi,DWORD PTR [esi],0x9f3c23f7
  41130c:	add    BYTE PTR [edx+0xe438241],bl
  411312:	(bad)  
  411314:	fdivr  DWORD PTR [ebx+0x3]
  411317:	sbb    ebx,ebx
  411319:	add    BYTE PTR [ebp-0x3b],cl
  41131c:	lods   eax,DWORD PTR ds:[esi]
  41131d:	mov    edx,0xbc1853ce
  411322:	fwait
  411323:	dec    ebp
  411324:	mov    bl,0x66
  411326:	jo     0x4112bd
  411328:	bound  esp,QWORD PTR [ecx-0x1c717c90]
  41132e:	sar    ecx,cl
  411330:	outs   dx,DWORD PTR ds:[esi]
  411331:	(bad)  
  411332:	adc    eax,0x52675c5b
  411337:	dec    eax
  411338:	gs ins DWORD PTR es:[edi],dx
  41133a:	pop    edi
  41133b:	cmp    BYTE PTR [edx],bl
  41133d:	rcr    BYTE PTR [edi],1
  41133f:	mov    ebx,DWORD PTR [edx-0x51bb9481]
  411345:	fidiv  DWORD PTR [eax]
  411347:	push   esi
  411348:	mov    dl,0x9c
  41134a:	mov    ds:0x2cdd4693,eax
  41134f:	adc    edi,DWORD PTR [eax+0x3f]
  411352:	in     al,0xfe
  411354:	or     ebx,edx
  411356:	adc    al,0xc1
  411358:	and    esp,edx
  41135a:	loop   0x411339
  41135c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41135d:	fldcw  WORD PTR [esi+0x7ff0c5aa]
  411363:	jp     0x411323
  411365:	xchg   esi,eax
  411366:	fiadd  WORD PTR [eax-0x7c074c99]
  41136c:	repnz pop esi
  41136e:	icebp  
  41136f:	cld    
  411370:	xchg   ebp,eax
  411371:	or     bl,BYTE PTR [esp+ecx*8]
  411374:	sbb    ecx,edi
  411376:	xor    esi,edx
  411378:	push   edx
  411379:	cli    
  41137a:	dec    edx
  41137b:	cmp    DWORD PTR [esi],edx
  41137d:	mov    ds:0x58458cb0,al
  411382:	jmp    0x411340
  411384:	and    DWORD PTR [edx+0x65],0xeb80a8c3
  41138b:	push   ebp
  41138c:	xchg   ecx,eax
  41138d:	sbb    BYTE PTR [ecx+0x49],ch
  411390:	mov    BYTE PTR [eax-0x35cbffe1],bl
  411396:	lds    edi,FWORD PTR [edi]
  411398:	ror    BYTE PTR [ebp+0x4d8cd92a],1
  41139e:	gs jae 0x41140c
  4113a1:	ficomp WORD PTR [ecx-0x27]
  4113a4:	popa   
  4113a5:	imul   edx,DWORD PTR [esi],0xb8a06c
  4113ab:	loope  0x411423
  4113ad:	push   0x33e403ac
  4113b2:	mov    cl,0xf8
  4113b4:	sub    eax,0x55b82d58
  4113b9:	adc    esi,esp
  4113bb:	sub    al,0x3b
  4113bd:	fs mov ch,0xa9
  4113c0:	iret   
  4113c1:	das    
  4113c2:	mov    dh,0x50
  4113c4:	and    ecx,DWORD PTR [edx]
  4113c6:	rol    BYTE PTR [eax+0x30aa0c7b],1
  4113cc:	add    esp,ebp
  4113ce:	jns    0x411376
  4113d0:	push   eax
  4113d1:	rol    ecx,0xfa
  4113d4:	jge    0x4113eb
  4113d6:	ins    BYTE PTR es:[edi],dx
  4113d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113d8:	pop    ebx
  4113d9:	ja     0x411378
  4113db:	fs push edx
  4113dd:	cwde   
  4113de:	pop    edi
  4113df:	mov    dl,0x26
  4113e1:	in     al,0xcc
  4113e3:	lods   eax,DWORD PTR ds:[esi]
  4113e4:	cli    
  4113e5:	pop    ebp
  4113e6:	clc    
  4113e7:	std    
  4113e8:	popa   
  4113e9:	and    DWORD PTR [ecx],0x5811ec8
  4113ef:	enter  0x6eec,0xd1
  4113f3:	push   esi
  4113f4:	ficomp WORD PTR [ecx+0xa]
  4113f7:	pop    ebx
  4113f8:	dec    ecx
  4113f9:	sub    al,0x9a
  4113fb:	mov    edx,0x96378674
  411400:	fist   DWORD PTR [eax-0x52]
  411403:	leave  
  411404:	dec    ebp
  411405:	ret    
  411406:	inc    ecx
  411407:	xlat   BYTE PTR ds:[ebx]
  411408:	add    ebp,DWORD PTR [esi]
  41140a:	jns    0x411435
  41140c:	inc    edi
  41140d:	xor    eax,0xb735c439
  411412:	ret    
  411413:	and    eax,0x1573cbf9
  411418:	cld    
  411419:	mov    bl,0xae
  41141b:	add    ebx,DWORD PTR [ecx+0x30]
  41141e:	cmp    al,0x71
  411420:	imul   eax,DWORD PTR [ebp+0x7a],0x7251f672
  411427:	pop    ds
  411428:	mov    al,0x5c
  41142a:	repnz push 0x8300afe9
  411430:	pop    di
  411432:	push   cs
  411433:	xchg   edi,eax
  411434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411435:	fwait
  411436:	test   ax,0x753
  41143a:	xchg   ebx,eax
  41143b:	lods   al,BYTE PTR ds:[esi]
  41143c:	inc    esp
  41143d:	pop    edx
  41143e:	in     eax,0x11
  411440:	rcr    DWORD PTR [eax+0x59e5076f],1
  411446:	loopne 0x4113eb
  411448:	and    BYTE PTR [edx+0x141a1943],al
  41144e:	mov    ch,0xd3
  411450:	fadd   QWORD PTR [ebp+0x16]
  411453:	sahf   
  411454:	pop    esp
  411455:	ficom  DWORD PTR [ecx-0x4462d10b]
  41145b:	mov    bh,0x2c
  41145d:	dec    ecx
  41145e:	not    DWORD PTR [ecx-0x37]
  411461:	dec    ecx
  411462:	outs   dx,BYTE PTR ds:[esi]
  411463:	mov    dh,0x88
  411465:	push   eax
  411466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411467:	les    edx,FWORD PTR [edi]
  411469:	call   0xca26d1dc
  41146e:	retf   
  41146f:	icebp  
  411470:	mov    bh,BYTE PTR [ebp+0x47]
  411473:	in     eax,dx
  411474:	pushf  
  411475:	rol    BYTE PTR [edi+0x5d],cl
  411478:	movhps xmm4,QWORD PTR [ecx+0x24351002]
  41147f:	xchg   esp,eax
  411480:	cmp    edx,DWORD PTR [esi-0x6e]
  411483:	js     0x41146b
  411485:	cli    
  411486:	and    BYTE PTR [esi],bl
  411488:	jmp    0x41145b
  41148a:	out    0x18,al
  41148c:	test   BYTE PTR [ebp-0x3bb7ccc1],ch
  411492:	and    ch,bl
  411494:	int3   
  411495:	dec    ecx
  411496:	inc    edx
  411497:	mov    ds:0xd6c29c8f,al
  41149c:	pusha  
  41149d:	je     0x41147a
  41149f:	addr16 or al,0xb2
  4114a2:	xor    eax,0xe4118056
  4114a7:	xchg   edx,eax
  4114a8:	ins    BYTE PTR es:[edi],dx
  4114a9:	loop   0x41144d
  4114ab:	mov    ecx,0x6b83cb2a
  4114b0:	imul   esi,DWORD PTR [ebx-0x188895bf],0xffffffd7
  4114b7:	stos   DWORD PTR es:[edi],eax
  4114b8:	retf   
  4114b9:	clc    
  4114ba:	retf   
  4114bb:	fild   DWORD PTR [esi]
  4114bd:	call   0xf347:0x71f9c6d8
  4114c4:	repnz mov ?,ecx
  4114c7:	push   esi
  4114c8:	mov    esi,0xdc9dec91
  4114cd:	pop    esi
  4114ce:	repz lock dec esp
  4114d1:	dec    DWORD PTR [edi+eax*4-0x13]
  4114d5:	jecxz  0x4114a0
  4114d7:	xor    al,0xb1
  4114d9:	aas    
  4114da:	add    eax,0x7e598c3d
  4114df:	enter  0x9c3,0xcd
  4114e3:	jb     0x4114d3
  4114e5:	mov    WORD PTR [ecx+ebx*8-0x42f42f1a],fs
  4114ec:	xchg   edi,eax
  4114ed:	xchg   ebx,eax
  4114ee:	outs   dx,DWORD PTR ds:[esi]
  4114ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f0:	xchg   edi,eax
  4114f1:	sbb    DWORD PTR ds:0xe0b7896c,ebp
  4114f7:	xchg   ebp,eax
  4114f8:	jb     0x4114f2
  4114fa:	fnstcw WORD PTR [eax-0x317d80df]
  411500:	xchg   DWORD PTR [ebx-0x25e121b],esp
  411506:	adc    DWORD PTR [ebp-0x2bf708c9],edi
  41150c:	mov    al,ds:0x70ed26cb
  411512:	call   0xbb84953d
  411517:	or     DWORD PTR [ecx+0x44710f7c],edi
  41151d:	pop    esi
  41151e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41151f:	xlat   BYTE PTR ds:[ebx]
  411520:	(bad)  
  411521:	xchg   esp,eax
  411522:	jl     0x4114d1
  411524:	or     bl,bh
  411526:	or     edi,DWORD PTR [ebx+ecx*2+0x4f]
  41152a:	ret    
  41152b:	mov    ah,0x9c
  41152d:	iret   
  41152e:	outs   dx,DWORD PTR ds:[esi]
  41152f:	inc    esp
  411530:	xlat   BYTE PTR ds:[ebx]
  411531:	xchg   edx,eax
  411532:	popa   
  411533:	sub    BYTE PTR [edx-0x595ea381],dl
  411539:	aas    
  41153a:	mov    edi,?
  41153c:	rcr    BYTE PTR [eax],cl
  41153e:	test   cl,bl
  411540:	int    0xe
  411542:	sub    BYTE PTR [edx],bl
  411544:	adc    al,0x34
  411546:	cmp    cl,BYTE PTR [edi]
  411548:	leave  
  411549:	(bad)  
  41154a:	enter  0x26c9,0x57
  41154e:	(bad)  
  41154f:	retf   
  411550:	in     eax,0x2d
  411552:	iret   
  411553:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411555:	bound  esp,QWORD PTR [eax-0x20e90277]
  41155b:	push   es
  41155c:	in     eax,dx
  41155d:	in     al,dx
  41155e:	sbb    eax,0x8d27626c
  411563:	sbb    ebp,ecx
  411565:	arpl   WORD PTR [esi+ebx*8-0x5650eab0],sp
  41156c:	nop
  41156d:	pop    eax
  41156e:	xor    eax,0xc56cfa33
  411573:	fist   DWORD PTR [ecx]
  411575:	sbb    DWORD PTR [ebx+0xc],0xa817d5dc
  41157c:	mov    bh,0xc4
  41157e:	xchg   edi,eax
  41157f:	icebp  
  411580:	jmp    0xe66003df
  411585:	test   cl,dl
  411587:	sbb    bl,BYTE PTR ds:0x6c3c29c3
  41158d:	sbb    edi,DWORD PTR [esi-0x67]
  411590:	add    al,0xa6
  411592:	push   ds
  411593:	add    DWORD PTR [ebp-0x30],eax
  411596:	cmp    al,0xdf
  411598:	repnz mov ecx,0x947d29db
  41159e:	sbb    cl,BYTE PTR [ebp+0x3a29c554]
  4115a4:	out    0xb6,eax
  4115a6:	mov    fs,WORD PTR [esi-0x37e10b70]
  4115ac:	mov    ebp,0xf6124116
  4115b1:	xor    DWORD PTR [ebp-0x3d],eax
  4115b4:	cmp    al,0x46
  4115b6:	sbb    dl,dl
  4115b8:	pop    eax
  4115b9:	mov    esi,0xa43d80d9
  4115be:	sbb    cl,BYTE PTR [ebx]
  4115c0:	xchg   DWORD PTR [ebx+0x6],eax
  4115c3:	lods   al,BYTE PTR ds:[esi]
  4115c4:	addr16 xchg esi,eax
  4115c6:	popa   
  4115c7:	inc    esi
  4115c8:	mov    bh,0xa2
  4115ca:	and    dl,BYTE PTR [ebx+esi*8]
  4115cd:	sahf   
  4115ce:	or     ecx,DWORD PTR [ebx+0xb5fa51c]
  4115d4:	jno    0x41159d
  4115d6:	arpl   WORD PTR [esi],cx
  4115d8:	fbld   TBYTE PTR [ecx-0x76]
  4115db:	push   ds
  4115dc:	into   
  4115dd:	adc    ah,BYTE PTR [ecx-0xd]
  4115e0:	xor    edi,DWORD PTR [edx-0x1b7ce49e]
  4115e6:	mov    esp,DWORD PTR ds:0xcaf7bd91
  4115ec:	xor    BYTE PTR [edx-0x6eb83f60],bl
  4115f2:	mov    ebp,0xafcffdeb
  4115f7:	imul   ebp,edi,0xffffff87
  4115fa:	popw   ds
  4115fc:	fiadd  WORD PTR [ebp+0x3739bc98]
  411602:	stos   BYTE PTR es:[edi],al
  411603:	out    0x36,al
  411605:	jb     0x4115aa
  411607:	out    0xcb,eax
  411609:	sub    DWORD PTR [ebx],ebp
  41160b:	push   esp
  41160c:	add    bh,bh
  41160e:	and    al,0x6d
  411610:	lds    eax,FWORD PTR [esp+eax*1]
  411613:	arpl   ax,ax
  411615:	aaa    
  411616:	cmp    al,0xf6
  411618:	push   es
  411619:	test   eax,0x9b8517fe
  41161e:	push   ebp
  41161f:	adc    ah,BYTE PTR [ebp+ebp*8-0x5b]
  411623:	lahf   
  411624:	xor    eax,DWORD PTR [esi+eiz*2+0x7c]
  411628:	outs   dx,DWORD PTR ds:[esi]
  411629:	fist   WORD PTR [edx-0xb3e07bb]
  41162f:	adc    dl,BYTE PTR [edx+0x1b]
  411632:	sub    edi,0xffffffda
  411635:	nop
  411636:	mov    BYTE PTR [edi],bl
  411638:	je     0x4115e5
  41163a:	(bad)  
  41163b:	aam    0xf1
  41163d:	mov    bh,0xca
  41163f:	jbe    0x4115de
  411641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411642:	adc    esp,esp
  411644:	sbb    esp,DWORD PTR [edx]
  411646:	sbb    esp,DWORD PTR [edi-0x5fb3f059]
  41164c:	mov    esi,0x7a17061d
  411651:	inc    ebx
  411652:	cmp    al,0xa0
  411654:	call   0x194fb8f8
  411659:	or     eax,DWORD PTR [ebx+0xf]
  41165c:	mov    ah,0xc1
  41165e:	stos   BYTE PTR es:[edi],al
  41165f:	imul   ecx,ecx,0x9e12658e
  411665:	pop    ebp
  411666:	leave  
  411667:	add    eax,0x4708bf60
  41166c:	sar    BYTE PTR [esi-0x158a7581],1
  411672:	(bad)  [edx]
  411674:	and    eax,0xc7b5c26f
  411679:	ret    
  41167a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41167b:	mov    ebx,0x75188f99
  411680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411681:	icebp  
  411682:	ror    DWORD PTR ds:0x19ab6ca9,0xf
  411689:	jns    0x41168b
  41168b:	xor    ebx,eax
  41168d:	leave  
  41168e:	push   ss
  41168f:	(bad)  
  411690:	inc    esi
  411691:	aas    
  411692:	adc    cl,bl
  411694:	mov    dl,BYTE PTR [ebx]
  411696:	(bad)  
  411699:	or     ebx,edi
  41169b:	or     al,0x7c
  41169d:	inc    esp
  41169e:	arpl   sp,di
  4116a0:	idiv   DWORD PTR [edi]
  4116a2:	out    dx,eax
  4116a3:	gs xor al,0x14
  4116a6:	out    dx,eax
  4116a7:	rcl    BYTE PTR [eax+edi*2+0x2c],1
  4116ab:	xor    al,0x91
  4116ad:	or     al,0x2d
  4116af:	xor    eax,0xe76e40e9
  4116b4:	dec    ebp
  4116b5:	(bad)  
  4116b6:	in     eax,dx
  4116b7:	and    BYTE PTR [edi+0x5c],ah
  4116ba:	fst    st(3)
  4116bc:	stos   DWORD PTR es:[edi],eax
  4116bd:	call   0xb8a501ce
  4116c2:	xor    BYTE PTR [ecx-0x5f],dh
  4116c5:	xor    al,0xcd
  4116c7:	(bad)  [edx-0x34]
  4116ca:	cwde   
  4116cb:	loop   0x4116e3
  4116cd:	mov    al,ds:0xde3dc9a9
  4116d2:	shr    al,1
  4116d4:	(bad)  
  4116d5:	out    0xc5,eax
  4116d7:	mov    dl,0x47
  4116d9:	push   es
  4116da:	sbb    eax,0xbd2c8354
  4116df:	inc    esp
  4116e0:	into   
  4116e1:	dec    eax
  4116e2:	push   cs
  4116e3:	mov    bh,0x25
  4116e5:	cs xchg edi,eax
  4116e7:	pop    esp
  4116e8:	inc    esi
  4116e9:	(bad)  [ebp+0x57]
  4116ec:	mov    ecx,0xc50a4a24
  4116f1:	rcl    edx,1
  4116f3:	pop    DWORD PTR [esi+esi*4-0x2a]
  4116f7:	mov    ebx,0x1f9f96d0
  4116fc:	jae    0x4116c9
  4116fe:	bound  ebx,QWORD PTR [edi+0x40]
  411701:	stc    
  411702:	jecxz  0x411758
  411704:	push   ebp
  411705:	push   cs
  411706:	xchg   ebp,eax
  411707:	sbb    al,BYTE PTR [ecx]
  411709:	sub    eax,0xbc1a9b1b
  41170e:	(bad)  
  41170f:	cmp    ecx,DWORD PTR [edi-0x6f]
  411712:	mov    edx,0xd8a16484
  411717:	xlat   BYTE PTR ds:[ebx]
  411718:	push   es
  411719:	pop    esi
  41171a:	clc    
  41171b:	je     0x4116fe
  41171d:	inc    edx
  41171e:	xchg   ecx,eax
  41171f:	out    0x52,al
  411721:	jecxz  0x4116c2
  411723:	jo     0x411753
  411725:	cld    
  411726:	pop    es
  411727:	dec    esi
  411728:	test   BYTE PTR [ecx-0x407761e2],bl
  41172e:	loop   0x411796
  411730:	hlt    
  411731:	mov    dl,0x5a
  411733:	iret   
  411734:	add    DWORD PTR [esi-0x1b],ebp
  411737:	out    0xe,eax
  411739:	pop    ecx
  41173a:	cmp    eax,0x807a8080
  41173f:	pop    edi
  411740:	pop    ds
  411741:	popf   
  411742:	jecxz  0x411795
  411744:	pop    ss
  411745:	mov    edx,0x1754c01b
  41174a:	jmp    0xea07:0x72d796ec
  411751:	push   ebp
  411752:	in     eax,0x13
  411754:	sub    DWORD PTR [ebx+0x2538ebbd],0x1b82cf62
  41175e:	sub    eax,0x49fd64eb
  411763:	bound  ebx,QWORD PTR [ecx]
  411765:	in     eax,dx
  411766:	popa   
  411767:	mov    ebx,0xe89f46fa
  41176c:	mov    BYTE PTR [eax-0x4f15102e],bh
  411772:	push   ecx
  411773:	icebp  
  411774:	pop    ebp
  411775:	inc    eax
  411776:	test   BYTE PTR [esi+0x195e52],0x90
  41177d:	bound  edx,QWORD PTR [edx]
  41177f:	xor    al,0xde
  411781:	(bad)  
  411782:	aad    0xda
  411784:	xchg   esi,eax
  411785:	ret    
  411786:	out    dx,al
  411787:	das    
  411788:	aaa    
  411789:	or     ebx,DWORD PTR [ebx+0x4]
  41178c:	inc    ebp
  41178d:	push   ds
  41178e:	lods   al,BYTE PTR ds:[esi]
  41178f:	mov    bh,0xe5
  411791:	mov    edx,0x4682c5f8
  411796:	dec    ecx
  411797:	lds    ebx,FWORD PTR [ebx+0x5c8a6584]
  41179d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179e:	je     0x4117fc
  4117a0:	outs   dx,BYTE PTR ds:[esi]
  4117a1:	jge    0x4117d1
  4117a3:	ret    0xe554
  4117a6:	mov    ebx,0x78a1ea6b
  4117ab:	xchg   edx,eax
  4117ac:	call   0x83ee:0xedbb79f
  4117b3:	pusha  
  4117b4:	aaa    
  4117b5:	test   al,0xdc
  4117b7:	call   0xab68194f
  4117bc:	jmp    0xc4d9:0x15c98552
  4117c3:	push   ss
  4117c4:	movntps XMMWORD PTR [ebx+edi*8-0x1],xmm6
  4117c9:	push   edi
  4117ca:	pushf  
  4117cb:	mov    ebp,eax
  4117cd:	cmp    eax,DWORD PTR [esi*2+0x3dd6b460]
  4117d4:	mov    es,WORD PTR ds:0x8d6d1459
  4117da:	mov    edx,0xd683b0d1
  4117df:	mov    ebx,edi
  4117e1:	outs   dx,BYTE PTR ds:[esi]
  4117e2:	xchg   BYTE PTR [ebx+edx*8+0x504360e6],dh
  4117e9:	xor    al,0xb
  4117ec:	mov    ah,0xe6
  4117ee:	mov    esp,0xc22dd558
  4117f3:	cmp    al,0xae
  4117f5:	pop    es
  4117f6:	mov    cs,WORD PTR [edi-0xc]
  4117f9:	adc    al,0x87
  4117fb:	fnstcw WORD PTR [esi+0x46]
  4117fe:	jbe    0x4117b7
  411800:	jmp    0xd8bb1c2d
  411805:	cs ja  0x41180d
  411808:	or     BYTE PTR ds:0xc67cde77,0x13
  41180f:	mov    bl,bh
  411811:	dec    edx
  411812:	jg     0x411853
  411814:	stos   DWORD PTR es:[edi],eax
  411815:	js     0x4117d4
  411817:	aam    0xf8
  411819:	sti    
  41181a:	mov    ss,WORD PTR [eax-0xa3258d7]
  411820:	push   ebp
  411821:	adc    edx,ecx
  411823:	je     0x41183b
  411825:	jl     0x41189c
  411827:	fistp  QWORD PTR [ebp-0x145887d2]
  41182d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41182f:	sbb    ecx,DWORD PTR [esi+eiz*8-0x65]
  411833:	int    0x4b
  411835:	out    0x8e,eax
  411837:	popf   
  411838:	pop    ebp
  411839:	pop    ds
  41183a:	add    esp,DWORD PTR [edi]
  41183c:	sbb    eax,DWORD PTR [eax-0x23]
  41183f:	test   al,0xb0
  411841:	inc    esi
  411842:	mov    al,ds:0x1410bb41
  411847:	cmp    DWORD PTR [esi],ecx
  411849:	scas   al,BYTE PTR es:[edi]
  41184a:	ret    0xda0c
  41184d:	sar    esi,cl
  41184f:	call   0xd4ab:0x88f47e73
  411856:	mov    bl,0xec
  411858:	xor    BYTE PTR ds:0xdc7b5407,dl
  41185e:	ret    
  41185f:	sub    al,0xca
  411861:	repnz loop 0x411806
  411864:	adc    DWORD PTR [eax],ecx
  411866:	dec    ebx
  411867:	imul   edx,ebp,0xffffffba
  41186a:	and    eax,0x14041243
  41186f:	retf   
  411870:	mov    edx,0x310a2db3
  411875:	bound  edx,QWORD PTR [ebx+0x47]
  411878:	shl    DWORD PTR [esi+0xb],0x4a
  41187c:	retf   
  41187d:	aas    
  41187e:	add    dh,BYTE PTR [edx+0x71f2aea5]
  411884:	mov    edi,0xd1ff70a
  411889:	(bad)  
  41188b:	jo     0x41181b
  41188d:	xchg   esi,eax
  41188e:	int3   
  41188f:	clc    
  411890:	cmp    al,0x25
  411892:	das    
  411893:	ja     0x41190e
  411895:	jnp    0x411837
  411897:	cmp    al,0x79
  411899:	sbb    BYTE PTR ds:0x8643e791,bl
  41189f:	jb     0x4118d9
  4118a1:	and    eax,0x63705df8
  4118a6:	hlt    
  4118a7:	sbb    bl,cl
  4118a9:	cmp    dh,BYTE PTR [ebp+0x49]
  4118ac:	stos   BYTE PTR es:[edi],al
  4118ad:	mov    ds:0x6defce67,eax
  4118b2:	std    
  4118b3:	adc    ebx,DWORD PTR [eax]
  4118b5:	sub    dl,bl
  4118b7:	(bad)  
  4118b8:	iret   
  4118b9:	jle    0x411885
  4118bb:	sahf   
  4118bc:	pop    ds
  4118bd:	add    ah,BYTE PTR [esi-0x5c]
  4118c0:	(bad)  
  4118c1:	shl    DWORD PTR [ebp+edi*2+0x53],cl
  4118c5:	cmp    al,ah
  4118c7:	mov    ecx,0xd3f8adfe
  4118cc:	and    BYTE PTR [edi],dl
  4118ce:	pop    edx
  4118cf:	cmp    eax,0xbd6cbadb
  4118d4:	inc    eax
  4118d5:	pop    ebp
  4118d6:	jne    0x411929
  4118d8:	popa   
  4118d9:	jmp    0x7825:0x45ac7b29
  4118e0:	ror    dh,0xa5
  4118e3:	(bad)  
  4118e4:	or     DWORD PTR [edx+0x61de1e36],esi
  4118ea:	(bad)  
  4118ec:	sbb    ebp,edi
  4118ee:	mov    ds:0xa15a56ce,eax
  4118f3:	adc    esi,eax
  4118f5:	or     al,0xad
  4118f7:	sub    al,0xec
  4118f9:	pop    ss
  4118fa:	xor    al,0x1e
  4118fc:	data16 aam 0xcf
  4118ff:	lods   al,BYTE PTR ds:[esi]
  411900:	mov    bl,0x6f
  411902:	sbb    ah,BYTE PTR [edi-0x1d]
  411905:	repz adc eax,0x9bc7cbf7
  41190b:	cld    
  41190c:	imul   eax,esi,0x4c
  41190f:	pop    eax
  411910:	push   ss
  411911:	leave  
  411912:	ins    BYTE PTR es:[edi],dx
  411913:	aaa    
  411914:	das    
  411915:	cmp    DWORD PTR [ebx+0x2f],ebp
  411918:	ret    0x1589
  41191b:	cmp    DWORD PTR [ecx+0x8600567],esp
  411921:	call   DWORD PTR [ecx-0x7c]
  411924:	cmp    WORD PTR [ebp+esi*4-0x60],di
  411929:	call   0xf7015b2b
  41192e:	retf   
  41192f:	adc    al,0x4
  411931:	les    ebx,FWORD PTR [edi+0x3f5b776]
  411937:	cmc    
  411938:	or     BYTE PTR [esi+0x2a35e13c],al
  41193e:	out    0xbe,al
  411940:	jl     0x4119be
  411942:	ror    DWORD PTR ss:[edx-0x7e],cl
  411946:	in     eax,0x5
  411948:	or     bl,BYTE PTR [edx]
  41194a:	mov    bh,0x65
  41194c:	jb     0x4118f6
  41194e:	dec    eax
  41194f:	mov    edi,0x5d80f725
  411954:	sbb    bh,BYTE PTR [ecx+edx*2]
  411957:	mov    ss,WORD PTR fs:[edi+0x5947ab67]
  41195e:	mov    dl,0x39
  411960:	xchg   ebx,eax
  411961:	xchg   edx,eax
  411962:	xchg   ebx,eax
  411963:	mov    DWORD PTR [ebx-0x22dea4c9],esi
  411969:	rcl    DWORD PTR [esi+edx*2+0x2d],1
  41196d:	aas    
  41196e:	mov    edi,gs
  411970:	lock call 0x4ca0458
  411976:	cmc    
  411977:	ss std 
  411979:	lods   eax,DWORD PTR ds:[esi]
  41197a:	pop    edx
  41197b:	popa   
  41197c:	add    DWORD PTR [ebp-0xb7e7496],edx
  411982:	and    cl,bh
  411984:	(bad)  
  411985:	pop    esi
  411986:	js     0x41194c
  411988:	aad    0xf2
  41198a:	aas    
  41198b:	xor    eax,eax
  41198d:	test   DWORD PTR [edi-0x1ea78486],esi
  411993:	arpl   WORD PTR [ecx+0x17],dx
  411996:	jg     0x411a11
  411998:	inc    esi
  411999:	aad    0x7d
  41199b:	ror    BYTE PTR [eax+edx*1],cl
  41199e:	clc    
  41199f:	mov    dh,0xfe
  4119a1:	cmp    ebx,edi
  4119a3:	xor    al,BYTE PTR [esi+0x55]
  4119a6:	and    edi,eax
  4119a8:	or     ah,BYTE PTR [edx+0x6d]
  4119ab:	fcomp  DWORD PTR [ecx]
  4119ad:	xlat   BYTE PTR ds:[ebx]
  4119ae:	or     al,0x6a
  4119b0:	fisub  DWORD PTR cs:[esi-0x4fc963f4]
  4119b7:	push   ebx
  4119b8:	dec    esp
  4119b9:	adc    al,0x96
  4119bb:	xchg   esi,eax
  4119bc:	in     al,dx
  4119bd:	shr    BYTE PTR [eax+0x32],0x91
  4119c1:	xor    dl,BYTE PTR [edi]
  4119c3:	not    DWORD PTR [esi]
  4119c5:	adc    edi,DWORD PTR es:[eax+0x44]
  4119c9:	xchg   BYTE PTR [ebx-0x2d],bh
  4119cc:	jmp    0x411a0a
  4119ce:	loop   0x411a2f
  4119d0:	push   dx
  4119d2:	in     eax,dx
  4119d3:	adc    bl,dh
  4119d5:	daa    
  4119d6:	aad    0xf
  4119d8:	add    eax,0xbf9d51ad
  4119dd:	sahf   
  4119de:	sub    ebx,DWORD PTR [edi]
  4119e0:	out    dx,eax
  4119e1:	mov    esp,0xd4744196
  4119e6:	iret   
  4119e7:	(bad)  ds:0xf44c9f58
  4119ed:	inc    ebp
  4119ee:	cmp    al,BYTE PTR [ebp-0x5f8d2e52]
  4119f4:	std    
  4119f5:	jle    0x4119b7
  4119f7:	jo     0x4119fe
  4119f9:	and    eax,0xcf816dcd
  4119fe:	cmp    eax,0x2cb60583
  411a03:	jbe    0x4119cc
  411a05:	outs   dx,DWORD PTR ds:[esi]
  411a06:	lds    edi,FWORD PTR [esi+0x10]
  411a09:	xor    bh,ch
  411a0b:	sbb    eax,0x1935e7d2
  411a10:	push   esp
  411a11:	push   0x6b
  411a13:	mov    edi,0x914ddd0a
  411a18:	mov    edi,0x1d86a79b
  411a1d:	inc    eax
  411a1e:	lock jl 0x411a70
  411a21:	(bad)  
  411a22:	pop    eax
  411a23:	jb     0x411a92
  411a25:	xchg   esp,eax
  411a26:	ret    
  411a27:	cdq    
  411a28:	mov    WORD PTR [edx],?
  411a2a:	rol    DWORD PTR [ecx-0x6],cl
  411a2d:	xchg   DWORD PTR [edx+0x45544aa0],edx
  411a33:	inc    esp
  411a34:	scas   eax,DWORD PTR es:[edi]
  411a35:	dec    ebp
  411a36:	loope  0x4119d4
  411a38:	add    ebx,DWORD PTR [edi-0x46]
  411a3b:	das    
  411a3c:	retf   
  411a3d:	cld    
  411a3e:	icebp  
  411a3f:	je     0x411a40
  411a41:	mov    ebp,0xc839bc41
  411a46:	mov    ah,0x4a
  411a48:	popf   
  411a49:	inc    edx
  411a4a:	mov    ah,0x55
  411a4c:	imul   ebx,DWORD PTR [ebx],0xffffffe5
  411a4f:	mov    ecx,esp
  411a51:	je     0x411a45
  411a53:	dec    BYTE PTR [edi-0x1c216c51]
  411a59:	push   cs
  411a5a:	je     0x411acb
  411a5c:	test   ah,al
  411a5e:	icebp  
  411a5f:	nop
  411a60:	imul   esi,DWORD PTR [edi-0x56],0xff8964b0
  411a67:	ins    DWORD PTR es:[edi],dx
  411a68:	scas   al,BYTE PTR es:[edi]
  411a69:	test   cl,bl
  411a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6c:	mov    esi,0x7eaba23b
  411a71:	cmp    DWORD PTR [ecx-0x3c223c9],edi
  411a77:	cs cmp al,0x0
  411a7a:	das    
  411a7b:	shl    DWORD PTR [ebx],1
  411a7d:	mov    esi,0x3589eea7
  411a82:	sbb    BYTE PTR [ecx],dh
  411a84:	pop    ds
  411a85:	push   eax
  411a86:	or     BYTE PTR [edx-0x3e9845d3],0x7c
  411a8d:	aam    0xcd
  411a8f:	xchg   esi,eax
  411a90:	inc    edx
  411a91:	out    0x7a,eax
  411a93:	aas    
  411a94:	jne    0x411a6c
  411a96:	iret   
  411a97:	ret    
  411a98:	push   es
  411a99:	in     eax,0x30
  411a9b:	push   ecx
  411a9c:	std    
  411a9d:	mov    bl,0x84
  411a9f:	push   ecx
  411aa0:	push   cs
  411aa1:	dec    edx
  411aa2:	daa    
  411aa3:	and    edx,esi
  411aa5:	inc    esp
  411aa6:	pop    ss
  411aa7:	mov    al,0xe9
  411aa9:	adc    eax,0xf17b57b
  411aae:	lock mov dl,BYTE PTR [edx]
  411ab1:	and    eax,edx
  411ab3:	mov    bl,0x7e
  411ab5:	mov    bl,0x8d
  411ab7:	(bad)  
  411ab8:	int    0xcd
  411aba:	or     esi,edx
  411abc:	call   DWORD PTR [ebp+0x74]
  411abf:	xchg   esp,eax
  411ac0:	xchg   esi,eax
  411ac1:	cmp    DWORD PTR ds:0x27436810,ebx
  411ac7:	adc    al,0xbe
  411ac9:	mul    DWORD PTR [ecx]
  411acb:	fs call 0xc087:0xf5be90fa
  411ad3:	mov    eax,0x313ac5b9
  411ad8:	dec    ebp
  411ad9:	mov    ebx,0xc876042a
  411ade:	sti    
  411adf:	mov    WORD PTR [ecx+0x6d],es
  411ae2:	ins    BYTE PTR es:[edi],dx
  411ae3:	stos   BYTE PTR es:[edi],al
  411ae4:	xor    BYTE PTR [eax-0x403e7ce4],ah
  411aea:	adc    BYTE PTR [edi+0x5b41c29d],0xb1
  411af1:	daa    
  411af2:	ret    0x130d
  411af5:	adc    BYTE PTR [esi+0x22],0x77
  411af9:	push   ebp
  411afa:	retf   
  411afb:	jge    0x411af1
  411afd:	xchg   edi,eax
  411afe:	mov    ebx,0x90baed6
  411b03:	ja     0x411b48
  411b05:	call   0xf1ab:0x135ba25b
  411b0c:	sub    eax,0x866fb44f
  411b11:	mov    BYTE PTR [esi],ah
  411b13:	je     0x411b4f
  411b15:	xchg   esi,eax
  411b16:	and    DWORD PTR [edx+eax*2+0x6ab38fdd],edi
  411b1d:	push   ss
  411b1e:	push   ebx
  411b1f:	push   ebp
  411b20:	inc    eax
  411b21:	jp     0x411ace
  411b23:	into   
  411b24:	push   0xd2ef3e51
  411b29:	or     ebp,DWORD PTR [edi+ebx*8]
  411b2c:	call   0x3323:0xebf766b9
  411b33:	and    bl,BYTE PTR ds:0xa652631c
  411b39:	jne    0x411b93
  411b3b:	fcomp  DWORD PTR [edi]
  411b3d:	jg     0x411b04
  411b3f:	inc    ebp
  411b40:	add    al,BYTE PTR [ebx+0x37c47332]
  411b46:	mov    ?,esi
  411b48:	pop    es
  411b49:	push   ss
  411b4a:	or     WORD PTR [esi+0x38d5208a],bp
  411b51:	(bad)  
  411b52:	pusha  
  411b53:	pop    ds
  411b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b55:	popf   
  411b56:	enter  0xfe41,0x33
  411b5a:	rcl    DWORD PTR [esi-0x34fb24eb],1
  411b60:	ins    DWORD PTR es:[edi],dx
  411b61:	fmul   DWORD PTR [esi-0x6704a613]
  411b67:	xchg   BYTE PTR [eax+esi*1+0x47],dl
  411b6b:	mov    al,0xcb
  411b6d:	jecxz  0x411b2e
  411b6f:	xor    BYTE PTR [edx],bl
  411b71:	int    0x15
  411b73:	cmp    ebp,DWORD PTR [ebp+0x7b0b9f2c]
  411b79:	scas   al,BYTE PTR es:[edi]
  411b7a:	pop    eax
  411b7b:	sar    BYTE PTR [eax+eiz*8+0x5d],cl
  411b7f:	repnz cmp esp,esi
  411b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b83:	add    ah,BYTE PTR [ebx-0x7cdfbf12]
  411b89:	in     al,dx
  411b8a:	jo     0x411ba5
  411b8c:	sar    BYTE PTR es:[eax+0x966e0f3],1
  411b93:	add    al,0xd6
  411b95:	clc    
  411b96:	ss retf 
  411b98:	jg     0x411b46
  411b9a:	xor    eax,0x293ef54c
  411b9f:	loop   0x411bfd
  411ba1:	retf   0x8f2a
  411ba4:	leave  
  411ba5:	mov    ebx,0x43ddc494
  411baa:	fnstsw WORD PTR [ebp+0x70]
  411bad:	scas   eax,DWORD PTR es:[edi]
  411bae:	and    BYTE PTR [edi-0x2125b53d],bh
  411bb4:	hlt    
  411bb5:	cli    
  411bb6:	add    DWORD PTR [ebp+0x34],edx
  411bb9:	jo     0x411bb4
  411bbb:	pop    ss
  411bbc:	add    edi,DWORD PTR [ecx+0x20c14d69]
  411bc2:	clc    
  411bc3:	jns    0x411bc1
  411bc5:	sbb    esp,DWORD PTR [edi]
  411bc7:	cdq    
  411bc8:	pop    esp
  411bc9:	xchg   ecx,eax
  411bca:	imul   eax,DWORD PTR [ecx+0x46966b6],0xe4002ad2
  411bd4:	push   0x4428df7
  411bd9:	fxch   st(6)
  411bdb:	lock mov edi,0xd0a4132e
  411be1:	je     0x411bf4
  411be3:	loopne 0x411bef
  411be5:	dec    ebx
  411be6:	aaa    
  411be7:	sub    cl,ah
  411be9:	repz out 0x89,al
  411bec:	jae    0x411b94
  411bee:	mov    edx,0x7b04ad12
  411bf3:	mov    ecx,0xdb206b3d
  411bf8:	daa    
  411bf9:	mov    esi,0x288b4a3e
  411bfe:	cmp    eax,DWORD PTR [esi-0x7747d7d4]
  411c04:	(bad)  
  411c05:	in     eax,0x4c
  411c07:	xchg   ebx,eax
  411c08:	mov    ecx,0xe2fc3c2
  411c0d:	xchg   BYTE PTR [ebp-0x79007910],ch
  411c13:	add    eax,0xa622788d
  411c18:	push   edx
  411c19:	jne    0x411c90
  411c1b:	popa   
  411c1c:	push   esi
  411c1d:	pop    esi
  411c1e:	fld    DWORD PTR [ecx-0xd]
  411c21:	mov    BYTE PTR [ecx+0x76],bl
  411c24:	mov    al,0x2d
  411c26:	popf   
  411c27:	cmp    eax,DWORD PTR [esi+0x1e96f81f]
  411c2d:	leave  
  411c2e:	mov    cl,0x8c
  411c30:	push   ebx
  411c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c32:	in     eax,0xc7
  411c34:	mov    ebp,0xb5d08500
  411c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c3a:	rcr    BYTE PTR [edx+eiz*1-0xa],0x23
  411c3f:	test   BYTE PTR [edx+0x5a],0xc6
  411c43:	imul   ecx,DWORD PTR [esi],0x74abe679
  411c49:	or     dl,dl
  411c4b:	pop    ss
  411c4c:	pop    esp
  411c4d:	add    edi,DWORD PTR ds:0xff1b9c62
  411c53:	mov    ebp,0x5f79bc2f
  411c58:	jecxz  0x411c76
  411c5a:	push   ebp
  411c5b:	enter  0xfb37,0xa
  411c5f:	pop    eax
  411c60:	ficomp WORD PTR [eax]
  411c62:	sub    eax,0x8554cdad
  411c67:	fcomp  DWORD PTR [ebx+0x32]
  411c6a:	inc    ebx
  411c6b:	mov    ebx,0x9d2b067b
  411c70:	aad    0x4a
  411c72:	shr    ebp,1
  411c74:	inc    ebp
  411c75:	ins    BYTE PTR es:[edi],dx
  411c76:	mov    ebp,0xc7c3505c
  411c7b:	sti    
  411c7c:	push   ecx
  411c7d:	(bad)  
  411c7e:	(bad)  
  411c7f:	ror    DWORD PTR [edx+0x50],1
  411c82:	mov    ebx,0x63342fff
  411c87:	sub    BYTE PTR [eax],dh
  411c89:	adc    BYTE PTR [ecx+0xb],bl
  411c8c:	fild   WORD PTR [edx]
  411c8e:	pop    ecx
  411c8f:	fldenv [edi+ebp*1-0x5d]
  411c93:	inc    edx
  411c94:	mov    dl,0xde
  411c96:	rol    BYTE PTR [edi],0x4b
  411c99:	xchg   edi,eax
  411c9a:	inc    esi
  411c9b:	popf   
  411c9c:	in     al,0x6
  411c9e:	(bad)  
  411c9f:	cmp    edx,esp
  411ca1:	pop    esi
  411ca2:	ret    
  411ca3:	(bad)  
  411ca4:	lods   al,BYTE PTR ds:[esi]
  411ca5:	sbb    ch,BYTE PTR [ebp-0x4339101d]
  411cab:	jb     0x411c64
  411cad:	push   ecx
  411cae:	in     eax,0xc0
  411cb0:	call   0x4d2d:0x3783a97
  411cb7:	cmp    DWORD PTR [edx+0xe],ebx
  411cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cbb:	pop    ebx
  411cbc:	xor    esp,ebx
  411cbe:	dec    edx
  411cbf:	shl    DWORD PTR [ebp+0x6f],cl
  411cc2:	(bad)  
  411cc3:	shr    ch,cl
  411cc5:	mov    dl,0x4c
  411cc7:	inc    eax
  411cc8:	sar    BYTE PTR [ebp+0x5d],0xba
  411ccc:	xchg   edi,eax
  411ccd:	cmp    al,BYTE PTR [ecx]
  411ccf:	sbb    edx,DWORD PTR [edi+0x6b]
  411cd2:	clc    
  411cd3:	inc    esp
  411cd4:	mov    ah,0xfb
  411cd6:	ins    DWORD PTR es:[edi],dx
  411cd7:	add    al,0x99
  411cd9:	add    eax,0xdb677856
  411cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cdf:	scas   eax,DWORD PTR es:[edi]
  411ce0:	xor    DWORD PTR [eax+0x1d532173],0x711bc395
  411cea:	add    DWORD PTR [esi-0x37f0c45b],0xef5c0ed5
  411cf4:	xchg   esi,eax
  411cf5:	adc    esp,DWORD PTR [esi]
  411cf7:	ins    BYTE PTR es:[edi],dx
  411cf8:	add    al,0xce
  411cfa:	pop    edi
  411cfb:	xchg   esi,eax
  411cfc:	ret    
  411cfd:	bnd call 0xc9e25b4b
  411d03:	and    eax,0x40a1e74c
  411d08:	fbstp  TBYTE PTR [ecx+0x65]
  411d0b:	cmp    eax,0x379347f5
  411d10:	inc    ecx
  411d11:	or     al,0x2f
  411d13:	ret    
  411d14:	jo     0x411cf0
  411d16:	xchg   edx,eax
  411d17:	jg     0x411d2b
  411d19:	shl    BYTE PTR [ecx-0x185d1e93],1
  411d1f:	jmp    0x411d32
  411d21:	mov    DWORD PTR [ecx+0x1f8f754],edi
  411d27:	push   0x14
  411d29:	wrmsr  
  411d2b:	xchg   ecx,eax
  411d2c:	inc    edx
  411d2d:	fsubr  QWORD PTR [ecx+0x59]
  411d30:	and    DWORD PTR [eax],eax
  411d32:	inc    esp
  411d33:	loope  0x411d1f
  411d35:	ffreep st(6)
  411d37:	in     eax,dx
  411d38:	dec    esp
  411d39:	cmp    ah,ch
  411d3b:	pop    edx
  411d3c:	xor    bl,bl
  411d3e:	xchg   ecx,eax
  411d3f:	scas   al,BYTE PTR es:[edi]
  411d40:	push   esi
  411d41:	(bad)  
  411d42:	loop   0x411d72
  411d44:	mov    esp,0x7f5759e1
  411d49:	sbb    al,0xa1
  411d4b:	aad    0x54
  411d4d:	jg     0x411d9f
  411d4f:	jo     0x411d16
  411d51:	imul   ebx,DWORD PTR [edi-0x15245f61],0x7c
  411d58:	mov    al,0x56
  411d5a:	xchg   edi,eax
  411d5b:	add    al,0xb
  411d5d:	cmp    edx,esi
  411d5f:	les    ebx,FWORD PTR [esi-0x11f3dacb]
  411d65:	jecxz  0x411d81
  411d67:	mov    dl,0x5c
  411d69:	adc    al,0x84
  411d6b:	daa    
  411d6c:	js     0x411d10
  411d6e:	cmp    eax,0x242d986
  411d73:	inc    ecx
  411d74:	out    0x95,al
  411d76:	jl     0x411d95
  411d78:	test   BYTE PTR [ebp+0xf],dh
  411d7b:	cmp    DWORD PTR ds:0x467e297,0x7d
  411d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d83:	scas   al,BYTE PTR es:[edi]
  411d84:	mov    dh,0x8b
  411d86:	jl     0x411d29
  411d88:	mov    ds:0xd996368d,al
  411d8d:	cmc    
  411d8e:	inc    ebp
  411d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d90:	mov    dl,0x4e
  411d92:	rcr    DWORD PTR [esi],0xcf
  411d95:	mov    ds:0x9abc9d7c,al
  411d9a:	stos   BYTE PTR es:[edi],al
  411d9b:	xor    ah,BYTE PTR [eax-0xa]
  411d9e:	adc    ch,dl
  411da0:	dec    ebp
  411da1:	es dec esi
  411da3:	lock in al,0xff
  411da6:	ret    0xfb9d
  411da9:	inc    ebx
  411daa:	out    0x24,eax
  411dac:	jae    0x411da7
  411dae:	stos   BYTE PTR es:[edi],al
  411daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db0:	mov    eax,ds:0xb1297b12
  411db5:	push   ecx
  411db6:	leave  
  411db7:	pop    ebp
  411db8:	jp     0x411df0
  411dba:	cmp    DWORD PTR [ebp-0x3a],0xffffffaa
  411dbe:	sub    eax,0x47201baa
  411dc3:	repnz pop ebx
  411dc5:	fstp   st(0)
  411dc7:	push   0xe16aa050
  411dcc:	aaa    
  411dcd:	enter  0xa0dd,0xb8
  411dd1:	cmp    eax,DWORD PTR [ecx-0x6b98b844]
  411dd7:	xchg   edi,eax
  411dd8:	pop    ss
  411dd9:	pop    edx
  411dda:	mov    ds:0xb6d89f3,al
  411ddf:	push   es
  411de0:	push   es
  411de1:	xchg   esi,eax
  411de2:	outs   dx,DWORD PTR ds:[esi]
  411de3:	jge    0x411e18
  411de5:	inc    ebp
  411de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de7:	out    0xc4,eax
  411de9:	nop
  411dea:	inc    eax
  411deb:	fnstenv [edx+0x5721166f]
  411df1:	jle    0x411e25
  411df3:	xchg   ebx,eax
  411df4:	mov    dl,BYTE PTR [ecx+0x66]
  411df7:	comiss xmm7,DWORD PTR [ebp-0x7b]
  411dfb:	xchg   edi,eax
  411dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dfd:	nop
  411dfe:	pop    esp
  411dff:	push   0x4
  411e01:	stos   BYTE PTR es:[edi],al
  411e02:	xor    edi,DWORD PTR [esi+esi*4-0x26]
  411e06:	jl     0x411e09
  411e08:	sti    
  411e09:	dec    ebx
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	stos   BYTE PTR es:[edi],al
  411e0c:	loopne 0x411e4e
  411e0e:	dec    BYTE PTR [ebx-0x6c]
  411e11:	pop    ecx
  411e12:	mov    dl,0xd9
  411e14:	cmp    ecx,DWORD PTR [esi+ebx*2-0x3219ae12]
  411e1b:	pop    edx
  411e1c:	mov    ch,0x77
  411e1f:	sub    al,0x3a
  411e21:	sub    DWORD PTR [esi-0x15ebe548],edi
  411e27:	es pop ebx
  411e29:	arpl   WORD PTR [eax-0x6f],bx
  411e2c:	xchg   ebx,eax
  411e2d:	sub    eax,0xf324225d
  411e32:	iret   
  411e33:	sub    edx,DWORD PTR [ebx-0x32]
  411e36:	retf   0xed90
  411e39:	in     eax,0x46
  411e3b:	test   DWORD PTR es:[ecx-0x4b746ce4],esp
  411e42:	add    ah,BYTE PTR [ebx]
  411e44:	mov    eax,ds:0xa4651c5d
  411e49:	adc    eax,0xff726a7
  411e4e:	das    
  411e4f:	aas    
  411e50:	sub    al,0x68
  411e52:	je     0x411e29
  411e54:	sti    
  411e55:	mov    al,ds:0xa1ee67f3
  411e5a:	sbb    esp,DWORD PTR [ebp+0x4999009a]
  411e60:	shr    BYTE PTR [ecx+0x7],cl
  411e63:	ss mov dl,0x15
  411e66:	out    dx,al
  411e67:	lds    ebp,FWORD PTR [esi+esi*4-0x3f]
  411e6b:	sub    edx,DWORD PTR [ecx+0x6377a3]
  411e71:	xor    eax,0x1882947e
  411e76:	ret    
  411e77:	mov    ah,0xc
  411e79:	aaa    
  411e7a:	sbb    edi,edx
  411e7c:	and    esi,DWORD PTR ds:0x8f3732b8
  411e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e83:	or     BYTE PTR [ecx+0x27],0x44
  411e87:	aaa    
  411e88:	int    0xe
  411e8a:	xchg   edi,eax
  411e8b:	sub    DWORD PTR [edi-0x6f5894a6],ebp
  411e91:	ins    DWORD PTR es:[edi],dx
  411e92:	cmc    
  411e93:	lahf   
  411e94:	cmp    DWORD PTR [edx-0x74],ecx
  411e97:	inc    eax
  411e98:	sahf   
  411e99:	cmp    DWORD PTR [esi],ecx
  411e9b:	stos   BYTE PTR es:[edi],al
  411e9c:	jmp    0x30f7:0xc84bdd4d
  411ea3:	or     eax,0xc592c426
  411ea8:	cmp    al,0x84
  411eaa:	and    ebx,DWORD PTR [ecx]
  411eac:	gs pusha 
  411eae:	(bad)  
  411eaf:	mov    al,gs:0x34a5bd8d
  411eb5:	cmp    al,0xbd
  411eb7:	add    al,0xa9
  411eb9:	jnp    0x411e74
  411ebb:	scas   al,BYTE PTR es:[edi]
  411ebc:	daa    
  411ebd:	dec    esp
  411ebe:	mov    al,BYTE PTR [edx+0xd]
  411ec1:	xor    ebx,esi
  411ec3:	and    eax,0x449bcbc4
  411ec8:	xor    edx,DWORD PTR [edi]
  411eca:	shl    BYTE PTR [esi+0x3d],cl
  411ecd:	mov    bl,0x55
  411ecf:	retf   
  411ed0:	cmp    al,0xcf
  411ed2:	dec    esi
  411ed3:	into   
  411ed4:	mov    edi,0xeec1e2bf
  411ed9:	cmp    BYTE PTR [ecx-0x75],bh
  411edc:	mov    bh,0x6b
  411ede:	stos   DWORD PTR es:[edi],eax
  411edf:	mov    ebx,DWORD PTR ds:0xca852ee0
  411ee5:	add    DWORD PTR [eax],edi
  411ee7:	add    al,0xc1
  411ee9:	sti    
  411eea:	mov    edi,0x40efc013
  411eef:	xchg   esi,eax
  411ef0:	mov    WORD PTR [eax+0x37],gs
  411ef3:	in     al,dx
  411ef4:	fstp   QWORD PTR [edx-0x5]
  411ef7:	sbb    edx,esi
  411ef9:	xor    al,0xc8
  411efb:	cli    
  411efc:	call   0x27fe:0xfdb64cda
  411f03:	jne    0x411f21
  411f05:	fisub  WORD PTR [ebp+0x3a]
  411f08:	sbb    al,0x6b
  411f0a:	les    esp,FWORD PTR [ecx-0x44]
  411f0d:	sbb    ebx,esi
  411f0f:	jl     0x411eba
  411f11:	test   BYTE PTR [ecx+0x7e4c7511],0x2
  411f18:	fdiv   st,st(4)
  411f1a:	(bad)  
  411f1b:	jne    0x411ed7
  411f1d:	ins    BYTE PTR es:[edi],dx
  411f1e:	jecxz  0x411f6c
  411f20:	pop    edx
  411f21:	stc    
  411f22:	mov    ch,0x9f
  411f24:	add    al,0xac
  411f26:	xchg   ebx,eax
  411f27:	add    edi,DWORD PTR [ebx+0x7c]
  411f2a:	popf   
  411f2b:	jle    0x411f82
  411f2d:	cmp    edx,DWORD PTR [esi-0x6ed88b07]
  411f33:	or     eax,0x990d3cbb
  411f38:	pop    es
  411f39:	test   BYTE PTR [esi],0xfd
  411f3c:	or     DWORD PTR [edi+0x4],esi
  411f3f:	xchg   esi,eax
  411f40:	cmp    ah,cl
  411f42:	pop    edx
  411f43:	(bad)  
  411f44:	iret   
  411f45:	jo     0x411f80
  411f47:	xchg   esi,eax
  411f48:	mov    ebx,0xe99e6418
  411f4d:	not    DWORD PTR [edi-0x1ac6b66c]
  411f53:	pop    esi
  411f54:	adc    DWORD PTR [eax+esi*8+0x3f],edi
  411f58:	xchg   ebx,eax
  411f59:	not    al
  411f5b:	test   al,0x14
  411f5d:	je     0x411f09
  411f5f:	jl     0x411f1c
  411f61:	inc    ebx
  411f62:	jb     0x411f70
  411f64:	gs inc ecx
  411f66:	aas    
  411f67:	mov    dh,0x13
  411f69:	jne    0x411fd1
  411f6b:	scas   al,BYTE PTR es:[edi]
  411f6c:	mov    edx,0x7d049053
  411f71:	mov    ds:0x6f4fd95a,al
  411f76:	fidiv  DWORD PTR [eax]
  411f78:	xor    DWORD PTR [eax-0x2e],eax
  411f7b:	jg     0x411f41
  411f7d:	inc    ebp
  411f7e:	sbb    eax,0x39f2a0b9
  411f83:	repz adc edx,DWORD PTR fs:[edx-0xb]
  411f88:	fmul   QWORD PTR [edx+0x8]
  411f8b:	mov    bl,0xa1
  411f8d:	mov    dh,0x7b
  411f8f:	mov    DWORD PTR [eax-0x50],ebx
  411f92:	inc    BYTE PTR [esi]
  411f94:	rcr    DWORD PTR [ebx],1
  411f96:	shl    BYTE PTR [esi+0x3b],0x4
  411f9a:	push   es
  411f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9c:	mov    BYTE PTR [edi+0x65],ch
  411f9f:	test   edi,eax
  411fa1:	dec    edx
  411fa2:	loopne 0x411fa0
  411fa4:	repz out 0x36,eax
  411fa7:	jmp    0xdfe7a617
  411fac:	xlat   BYTE PTR es:[ebx]
  411fae:	mov    ecx,0xf433b78e
  411fb3:	xor    DWORD PTR [eax],ebp
  411fb5:	imul   ebp,DWORD PTR [edx+0xb],0x4b
  411fb9:	sbb    eax,0xfe51a914
  411fbe:	clc    
  411fbf:	xor    edx,eax
  411fc1:	in     al,dx
  411fc2:	popa   
  411fc3:	and    eax,0x6d69da58
  411fc8:	xor    al,0xe9
  411fca:	and    DWORD PTR [esi-0x42],eax
  411fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fce:	pusha  
  411fcf:	cli    
  411fd0:	ja     0x411ff7
  411fd2:	and    BYTE PTR fs:[edx+0x594d52c4],ch
  411fd9:	inc    ecx
  411fda:	addr16 pop eax
  411fdc:	sub    BYTE PTR [ecx],ah
  411fde:	stc    
  411fdf:	repnz scas eax,DWORD PTR es:[edi]
  411fe1:	add    DWORD PTR [edi],eax
  411fe3:	cdq    
  411fe4:	inc    ecx
  411fe5:	ins    BYTE PTR es:[edi],dx
  411fe6:	inc    esi
  411fe7:	cli    
  411fe8:	in     eax,dx
  411fe9:	inc    DWORD PTR [esi-0x2a7f51c]
  411fef:	cs add al,0x22
  411ff2:	cwde   
  411ff3:	dec    ebp
  411ff4:	int    0xd9
  411ff6:	clc    
  411ff7:	fldenv [ecx+edi*8+0x4e]
  411ffb:	fs jle 0x412060
  411ffe:	sar    DWORD PTR [edi-0x69],1
  412001:	push   ebx
  412002:	sti    
  412003:	cdq    
  412004:	scas   al,BYTE PTR es:[edi]
  412005:	jle    0x411fc5
  412007:	xchg   ebx,eax
  412008:	in     eax,dx
  412009:	loopne 0x412086
  41200b:	out    0x4f,al
  41200d:	hlt    
  41200e:	test   al,0x4b
  412010:	ss jno 0x412010
  412013:	setge  BYTE PTR [eax+0x582c6462]
  41201a:	pusha  
  41201b:	dec    esi
  41201c:	sbb    bh,BYTE PTR [edi]
  41201e:	mov    ebp,0x8d1730b5
  412023:	xor    eax,0x7d0cd863
  412028:	mov    bl,BYTE PTR [ebx]
  41202a:	test   eax,0x126d024f
  41202f:	repz mov edx,0x8606ca8d
  412035:	neg    esi
  412037:	fs sar ch,1
  41203a:	fstp   TBYTE PTR [ecx+0x1b]
  41203d:	arpl   WORD PTR [ebp-0x748a9a96],dx
  412043:	jb     0x412024
  412045:	cmp    ch,ch
  412047:	pop    edx
  412048:	sub    bh,BYTE PTR [edi+0x73c33a12]
  41204e:	inc    ecx
  41204f:	ins    BYTE PTR es:[edi],dx
  412050:	inc    ebp
  412051:	jne    0x412064
  412053:	cmp    edx,DWORD PTR [ebp-0x28]
  412056:	ins    BYTE PTR es:[edi],dx
  412057:	dec    edx
  412058:	mov    esp,0xfe343601
  41205d:	xchg   DWORD PTR [edx-0x7],esi
  412060:	inc    BYTE PTR [ecx-0x52]
  412063:	xor    al,0x8
  412065:	out    dx,eax
  412066:	sar    DWORD PTR [edi+0x2cf08cb4],0xaf
  41206d:	icebp  
  41206e:	dec    esp
  41206f:	and    ah,BYTE PTR [eax]
  412071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412072:	jg     0x412097
  412074:	loopne 0x412079
  412076:	imul   ecx,DWORD PTR [edx],0x2be0b99c
  41207c:	(bad)  
  41207d:	icebp  
  41207e:	rcr    DWORD PTR [ebx+0x3d],0xdf
  412082:	xor    BYTE PTR [edi-0x2a4626e3],dh
  412088:	mov    ebx,DWORD PTR [edx]
  41208a:	push   ebp
  41208b:	enter  0x9403,0xf4
  41208f:	ins    DWORD PTR es:[edi],dx
  412090:	or     ebx,esi
  412092:	sub    ah,al
  412094:	and    DWORD PTR [ecx-0x13],0xffffffcc
  412098:	rcl    BYTE PTR [ecx+0x60],1
  41209b:	xor    BYTE PTR [ebx+edi*2+0x3d],ch
  41209f:	daa    
  4120a0:	mov    ds:0x9a6f16a8,eax
  4120a5:	jb     0x412033
  4120a7:	aam    0xcf
  4120a9:	retf   
  4120aa:	and    eax,0x71c65fb7
  4120af:	push   esi
  4120b0:	add    eax,0x8e6843f6
  4120b5:	pop    es
  4120b6:	mov    edi,0x9bf99f7a
  4120bb:	in     eax,dx
  4120bc:	add    ebp,eax
  4120be:	clc    
  4120bf:	mov    ?,WORD PTR [ebp+0x23]
  4120c2:	mov    ebp,edx
  4120c4:	mov    ecx,0xeca72458
  4120c9:	retf   
  4120ca:	loopne 0x412096
  4120cc:	lods   al,BYTE PTR ds:[esi]
  4120cd:	jmp    0xc01cf360
  4120d2:	stos   BYTE PTR es:[edi],al
  4120d3:	xchg   ebp,eax
  4120d4:	push   ds
  4120d5:	sub    al,0xef
  4120d7:	fdiv   st,st(7)
  4120d9:	pop    ebp
  4120da:	out    dx,eax
  4120db:	sub    eax,0xb44392fb
  4120e0:	xor    BYTE PTR [edx],ah
  4120e2:	in     eax,dx
  4120e3:	jg     0x41207e
  4120e5:	test   DWORD PTR [edi],esi
  4120e7:	in     al,0xfb
  4120e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ea:	pop    ebp
  4120eb:	xchg   ecx,eax
  4120ec:	clc    
  4120ed:	dec    eax
  4120ee:	dec    ecx
  4120ef:	and    DWORD PTR [ebx-0x4a8d3f8e],ebx
  4120f5:	pop    ebx
  4120f6:	loope  0x4120ff
  4120f8:	ds out 0x2d,al
  4120fb:	adc    bl,BYTE PTR [edx-0x4dca88d5]
  412101:	leave  
  412102:	fdivr  QWORD PTR [ebp+eax*1-0x2275d2be]
  412109:	inc    ebp
  41210a:	test   al,0xa5
  41210c:	jno    0x412183
  41210e:	inc    ecx
  41210f:	pop    esi
  412110:	xchg   ebx,eax
  412111:	stc    
  412112:	push   0x3105e827
  412117:	mov    DWORD PTR [eax-0x32],edi
  41211a:	fs xchg ebp,eax
  41211c:	jo     0x412176
  41211e:	jge    0x41217d
  412120:	pushf  
  412121:	sub    eax,0x598625a3
  412126:	sar    DWORD PTR [esp-0x27],cl
  41212a:	pusha  
  41212b:	imul   edi,DWORD PTR [ecx-0x6ced5f22],0x9e0329f7
  412135:	or     edx,DWORD PTR [ecx-0x5]
  412138:	mov    esp,0x3b101a5f
  41213d:	scas   eax,DWORD PTR es:[edi]
  41213e:	inc    eax
  41213f:	add    ah,BYTE PTR [esi-0x1f]
  412142:	push   edx
  412143:	jl     0x41219a
  412145:	push   esp
  412146:	out    0x27,al
  412148:	sbb    BYTE PTR [ecx],ch
  41214a:	ins    BYTE PTR es:[edi],dx
  41214b:	jmp    0x9caf5bb4
  412150:	pop    ds
  412151:	lods   al,BYTE PTR ds:[esi]
  412152:	push   cs
  412153:	cmc    
  412154:	mov    dh,0x1e
  412156:	call   0x14cb:0xc7e65a8c
  41215d:	daa    
  41215e:	or     BYTE PTR [edi-0x6b],cl
  412161:	mov    WORD PTR [ebx+0x69],ds
  412164:	imul   ebx,esp,0xd0173e58
  41216a:	cli    
  41216b:	mov    bh,0x47
  41216d:	pop    edx
  41216e:	sbb    al,0x6
  412170:	xlat   BYTE PTR ds:[ebx]
  412171:	xchg   ebp,eax
  412172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412173:	fstp   QWORD PTR [ecx]
  412175:	pop    edx
  412176:	mov    dh,0x3f
  412178:	cs out dx,al
  41217a:	add    ebx,DWORD PTR [eax+0x786603d7]
  412180:	push   ebp
  412181:	loopne 0x4121a2
  412183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412184:	arpl   WORD PTR [ebp-0x8ba28f2],bp
  41218a:	imul   esp,ecx,0x75
  41218d:	test   eax,0xcaa3baa9
  412192:	fisubr DWORD PTR [edi-0x46]
  412195:	(bad)
  412198:	jne    0x412194
  41219a:	jecxz  0x4121bf
  41219c:	xchg   ah,ah
  41219e:	sub    al,0x8d
  4121a0:	cmp    cl,BYTE PTR [ebx-0x6261f296]
  4121a6:	add    al,0xcf
  4121a8:	sub    eax,0x79d75580
  4121ad:	cwde   
  4121ae:	mov    eax,ds:0xfa027527
  4121b3:	shr    BYTE PTR [esi+edi*4-0x228d3337],1
  4121ba:	cwde   
  4121bb:	cmc    
  4121bc:	push   edi
  4121bd:	mov    ch,0xc7
  4121bf:	jbe    0x412170
  4121c1:	push   eax
  4121c2:	pop    esi
  4121c3:	in     al,0xd6
  4121c5:	jge    0x41218c
  4121c7:	xor    esi,DWORD PTR [ecx+0x628ae46e]
  4121cd:	and    edx,DWORD PTR [ebp-0x1c]
  4121d0:	gs enter 0xe7c1,0x4b
  4121d5:	sub    al,0xb6
  4121d7:	sub    DWORD PTR ds:0x546d4456,ebp
  4121dd:	xor    DWORD PTR [esi+0x7c22e316],ebx
  4121e3:	dec    ebp
  4121e4:	and    al,0x98
  4121e6:	jp     0x41223c
  4121e8:	push   edx
  4121e9:	jl     0x41219b
  4121eb:	xor    ebx,ecx
  4121ed:	aam    0x5f
  4121ef:	sbb    DWORD PTR [edi],ecx
  4121f1:	jmp    0xab0:0xf816b9f9
  4121f8:	xchg   ah,ch
  4121fa:	jmp    0xe2c7:0x17098371
  412201:	dec    ebx
  412202:	mov    ?,eax
  412204:	cmp    ch,dl
  412206:	je     0x41218d
  412208:	jae    0x4121d7
  41220a:	cdq    
  41220b:	call   0x4ebd:0x35435e0
  412212:	push   es
  412213:	das    
  412214:	retf   0x1d80
  412217:	in     al,0x72
  412219:	mov    ds:0x1a214a36,eax
  41221e:	ret    
  41221f:	jg     0x4121f3
  412221:	sub    ah,cl
  412223:	shl    bh,0x44
  412226:	mov    ebp,0x3d89b74a
  41222b:	imul   esi,DWORD PTR [eax-0x52],0x2ee9d1c9
  412232:	push   ecx
  412233:	aas    
  412234:	mov    ss,edx
  412236:	mov    edx,0x47205a3d
  41223b:	sub    edx,eax
  41223d:	daa    
  41223e:	ins    BYTE PTR es:[edi],dx
  41223f:	sub    al,0xf4
  412241:	out    0x46,al
  412243:	in     al,0xc7
  412245:	stc    
  412246:	shr    DWORD PTR [ebx+esi*8],cl
  412249:	(bad)  
  41224a:	cmp    al,0xe1
  41224c:	call   0x4c1:0x938d9862
  412253:	push   es
  412254:	push   ebx
  412255:	das    
  412256:	test   ebp,esp
  412258:	jbe    0x4121fa
  41225a:	push   ebx
  41225b:	pop    edi
  41225c:	bound  edi,QWORD PTR [ebx+edx*4]
  41225f:	out    dx,al
  412260:	jge    0x412249
  412262:	or     al,0xd1
  412264:	fwait
  412265:	or     eax,0xae24c35e
  41226a:	add    eax,0x2821f13d
  41226f:	mov    al,0xbd
  412271:	adc    ebx,DWORD PTR [esi+0x58a0596b]
  412277:	js     0x412235
  412279:	push   ds
  41227a:	sar    eax,1
  41227c:	xchg   edx,eax
  41227d:	jo     0x412263
  41227f:	sbb    BYTE PTR [edx+ebp*2],cl
  412282:	test   DWORD PTR [edx],edx
  412284:	mov    esi,0xc1ece3cd
  412289:	sti    
  41228a:	pop    es
  41228b:	ja     0x412250
  41228d:	sbb    al,0x73
  41228f:	push   ss
  412290:	cmc    
  412291:	setg   BYTE PTR [esi+0x64b290bf]
  412298:	fist   DWORD PTR ds:0xe00e4e87
  41229e:	mov    al,ds:0xbeaadae5
  4122a3:	sti    
  4122a4:	cdq    
  4122a5:	mov    eax,0xb6be396d
  4122aa:	sub    ebp,ecx
  4122ac:	cmc    
  4122ad:	jo     0x4122b1
  4122af:	pushf  
  4122b0:	cmp    edx,DWORD PTR [edx]
  4122b2:	js     0x41228c
  4122b4:	sbb    ebp,DWORD PTR [esi]
  4122b6:	jge    0x4122be
  4122b8:	sub    esi,DWORD PTR [ebx]
  4122ba:	push   ss
  4122bb:	in     eax,dx
  4122bc:	std    
  4122bd:	or     al,0x5a
  4122bf:	sbb    bh,BYTE PTR [ebp+0x51412ccc]
  4122c5:	std    
  4122c6:	pop    ebp
  4122c7:	mov    edx,0x3383c497
  4122cc:	mov    eax,ds:0x26bfee72
  4122d1:	int    0x3a
  4122d3:	cmp    esi,DWORD PTR [esi-0x61379bca]
  4122d9:	gs test al,0x42
  4122dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122dd:	xor    al,0x15
  4122df:	scas   al,BYTE PTR es:[edi]
  4122e0:	in     al,dx
  4122e1:	dec    DWORD PTR [esi]
  4122e3:	jg     0x4122ca
  4122e5:	addr16 jae 0x4122fc
  4122e8:	jno    0x41228e
  4122ea:	daa    
  4122eb:	cmc    
  4122ec:	dec    edi
  4122ed:	mov    esp,0xb56a9924
  4122f2:	and    al,0x60
  4122f4:	add    bl,BYTE PTR [ecx-0x78]
  4122f7:	fild   DWORD PTR [esi+0x20]
  4122fa:	pop    ecx
  4122fb:	std    
  4122fc:	xchg   ebp,eax
  4122fd:	fsub   QWORD PTR [edi-0x15e54531]
  412303:	sbb    bh,ah
  412305:	jo     0x41230a
  412307:	pop    ebx
  412308:	and    eax,0x7b3c5a5f
  41230d:	mov    edi,0xb2dae8a3
  412312:	sub    al,0xc4
  412314:	cmp    ebp,edx
  412316:	dec    ecx
  412317:	mov    ch,0xd4
  412319:	(bad)  
  41231a:	jmp    0x4d4e:0x26f87d5f
  412321:	pop    edi
  412322:	call   0x1a82c759
  412327:	loope  0x41230c
  412329:	push   ds
  41232a:	pop    esi
  41232b:	pop    ss
  41232c:	mov    ecx,0xdd410851
  412331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412332:	jb     0x4123a6
  412334:	inc    DWORD PTR [edx]
  412336:	xor    dh,BYTE PTR [edi+ebp*4-0x6e]
  41233a:	clc    
  41233b:	and    ebp,DWORD PTR [eax-0x61]
  41233e:	lahf   
  41233f:	and    cl,BYTE PTR [ebx+ecx*8]
  412342:	sbb    cl,0x41
  412345:	pop    eax
  412346:	enter  0xe3d0,0x90
  41234a:	add    DWORD PTR ds:0xe7e29163,esi
  412350:	jl     0x4123c2
  412352:	data16 aad 0x70
  412355:	mov    cl,0xaa
  412357:	jmp    0x4122f8
  412359:	stos   DWORD PTR es:[edi],eax
  41235a:	jmp    0xcd2e6cdb
  41235f:	xlat   BYTE PTR ds:[ebx]
  412360:	jb     0x41234a
  412362:	je     0x4123d8
  412364:	cmp    ecx,DWORD PTR [eax+0x4f]
  412367:	mov    ds:0x10a212d,al
  41236c:	rcr    DWORD PTR [edi+0x9],1
  41236f:	mov    DWORD PTR [eax-0x42],edx
  412372:	cmp    DWORD PTR [edx+0x32],eax
  412375:	rcl    BYTE PTR [esi+eax*1],0xc8
  412379:	pop    ebp
  41237a:	jmp    DWORD PTR [ebx+edi*1+0x2bda2735]
  412381:	add    al,0x3
  412383:	clc    
  412384:	dec    edi
  412385:	mov    ebp,0x2090f632
  41238a:	out    0xc6,eax
  41238c:	loop   0x4123f2
  41238e:	fisttp QWORD PTR [esi+0x19f466e6]
  412394:	(bad)  
  412395:	sbb    al,0x85
  412397:	mov    esp,0x84579ef3
  41239c:	inc    esp
  41239d:	(bad)  
  41239e:	cs pushf 
  4123a0:	sbb    ecx,DWORD PTR [ebx-0x1d]
  4123a3:	popa   
  4123a4:	xchg   ebp,eax
  4123a5:	jns    0x4123a5
  4123a7:	ret    
  4123a8:	mov    ebx,0x1d6a24b5
  4123ad:	popa   
  4123ae:	and    BYTE PTR [ebp-0x508f733],dh
  4123b4:	fs jl  0x4123a8
  4123b7:	in     eax,0xf4
  4123b9:	fst    st(3)
  4123bb:	or     al,0x61
  4123bd:	and    ch,ch
  4123bf:	mov    bh,0xa
  4123c1:	cmp    al,0xdc
  4123c3:	imul   ebx,DWORD PTR [ecx-0x55723b7c],0xa3526078
  4123cd:	call   0x9737:0xe0ba76c2
  4123d4:	jnp    0x412406
  4123d6:	jg     0x4123f2
  4123d8:	jne    0x412392
  4123da:	xor    bh,dh
  4123dc:	pop    esp
  4123dd:	xchg   esi,eax
  4123de:	inc    eax
  4123df:	(bad)  
  4123e0:	stos   DWORD PTR es:[edi],eax
  4123e1:	shr    esp,cl
  4123e3:	pop    edi
  4123e4:	and    al,0x88
  4123e6:	xor    al,0x98
  4123e8:	inc    eax
  4123e9:	js     0x4123ea
  4123eb:	push   esp
  4123ec:	call   0xab515292
  4123f1:	pop    ebp
  4123f2:	mov    al,ds:0x10e07ee3
  4123f7:	call   0x4b19:0xb45ea1de
  4123fe:	jge    0x412432
  412400:	jns    0x412397
  412402:	fist   DWORD PTR [edi-0xce71b20]
  412408:	jbe    0x412460
  41240a:	int    0x85
  41240c:	cmp    bh,dl
  41240e:	repz xchg ecx,eax
  412410:	mov    dh,0xf1
  412412:	mov    ah,al
  412414:	or     DWORD PTR [eax],esp
  412416:	imul   eax
  412418:	pusha  
  412419:	push   ds
  41241a:	or     dh,dh
  41241c:	out    dx,eax
  41241d:	int    0x78
  41241f:	fisubr DWORD PTR [edi]
  412421:	gs xor eax,0x4e5aa878
  412427:	mov    al,ds:0xb06fece2
  41242c:	(bad)  
  41242d:	adc    DWORD PTR [ecx],esi
  41242f:	fadd   DWORD PTR [edi+eax*4-0xf545538]
  412436:	sub    al,cl
  412438:	fstp   QWORD PTR [esi]
  41243a:	xchg   DWORD PTR [esi+0x4abc905a],eax
  412440:	in     al,dx
  412441:	sahf   
  412442:	fcomp  DWORD PTR [esi-0x132f8fac]
  412448:	inc    ebp
  412449:	xlat   BYTE PTR ds:[ebx]
  41244a:	and    al,BYTE PTR [edx*4+0x7873fb67]
  412451:	push   0x42
  412453:	ret    
  412454:	xor    BYTE PTR [eax],bh
  412456:	scas   al,BYTE PTR es:[edi]
  412457:	dec    ecx
  412458:	je     0x412478
  41245a:	test   BYTE PTR [ebx+0x3f409026],bh
  412460:	push   es
  412461:	jmp    0x412478
  412463:	in     eax,0xbd
  412465:	mov    WORD PTR [esi-0x3e],fs
  412468:	out    0xd9,eax
  41246a:	fldcw  WORD PTR [edi+0x35c4019a]
  412470:	iret   
  412471:	lahf   
  412472:	push   cs
  412473:	fadd   st(4),st
  412475:	jle    0x412412
  412477:	stos   BYTE PTR es:[edi],al
  412478:	mov    dh,0xe0
  41247a:	imul   edi,DWORD PTR [edi],0x1da9a20d
  412480:	inc    esi
  412481:	imul   eax,ebp,0x9b5a0669
  412487:	sub    al,0x89
  412489:	xor    al,0x9f
  41248b:	outs   dx,BYTE PTR ds:[esi]
  41248c:	je     0x4124c8
  41248e:	push   edx
  41248f:	mov    BYTE PTR [esi-0x36da3c6c],dh
  412495:	ds stos BYTE PTR es:[edi],al
  412497:	add    eax,edi
  412499:	xchg   esp,eax
  41249a:	mov    ch,0xf7
  41249c:	sub    DWORD PTR [ebp+0x61247a04],esi
  4124a2:	mov    ah,0x2a
  4124a4:	mov    WORD PTR [ebp+0x71a9c285],es
  4124aa:	outs   dx,DWORD PTR cs:[esi]
  4124ac:	sub    edi,DWORD PTR [edi]
  4124ae:	xchg   ebx,eax
  4124af:	sub    ah,BYTE PTR [ebp+0x50]
  4124b2:	inc    ebp
  4124b3:	adc    al,0x4e
  4124b5:	add    al,0x73
  4124b7:	add    ebp,esi
  4124b9:	cmp    eax,0x3db4a0b2
  4124be:	fild   DWORD PTR [edx-0x70590e68]
  4124c4:	pop    esi
  4124c5:	loop   0x412499
  4124c7:	popa   
  4124c8:	sub    dl,BYTE PTR [edx+ebp*2]
  4124cb:	push   edi
  4124cc:	and    bh,BYTE PTR cs:[ecx]
  4124cf:	icebp  
  4124d0:	lods   al,BYTE PTR ds:[esi]
  4124d1:	xchg   esi,eax
  4124d2:	sbb    eax,0x6aace63d
  4124d7:	pop    edi
  4124d8:	inc    BYTE PTR [ebp+0x59]
  4124db:	popa   
  4124dc:	cmc    
  4124dd:	sub    BYTE PTR [ebx-0x650c8f26],ah
  4124e3:	scas   al,BYTE PTR es:[edi]
  4124e4:	pusha  
  4124e5:	push   ss
  4124e6:	fs push eax
  4124e8:	ret    
  4124e9:	pop    ebp
  4124ea:	mov    dh,0xa4
  4124ec:	pusha  
  4124ed:	das    
  4124ee:	out    dx,eax
  4124ef:	sbb    bh,BYTE PTR [edi-0x48]
  4124f2:	stc    
  4124f3:	and    eax,0xfa9b7ede
  4124f8:	test   dl,0x7f
  4124fb:	xchg   edx,eax
  4124fc:	and    dl,BYTE PTR [ebp+0x30d80f2d]
  412502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412503:	adc    dh,bl
  412505:	sbb    al,0x9c
  412507:	xor    ecx,DWORD PTR [ebp+0x8]
  41250a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250b:	xchg   edx,eax
  41250c:	mov    edx,0xaaf6d682
  412511:	cld    
  412512:	neg    DWORD PTR [eax+esi*2+0x14]
  412516:	add    al,0x5
  412518:	jmp    0x4124d4
  41251a:	call   0x7d977141
  41251f:	sbb    DWORD PTR [ebp-0x35],0x82b795e2
  412526:	mov    ds,esi
  412528:	jnp    0x41250e
  41252a:	xor    al,0xac
  41252c:	jnp    0x4124ef
  41252e:	xchg   ecx,eax
  41252f:	mov    al,ds:0x3a9266f8
  412534:	inc    ebx
  412535:	jecxz  0x412553
  412537:	das    
  412538:	test   bh,ch
  41253a:	int3   
  41253b:	ins    BYTE PTR es:[edi],dx
  41253c:	sbb    eax,0xea3d584
  412541:	arpl   WORD PTR [ebx-0x7519e9c2],bp
  412547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412548:	sahf   
  412549:	cmp    BYTE PTR [eax],ch
  41254b:	pop    ss
  41254c:	sub    DWORD PTR [ecx+0x323ada30],esi
  412552:	rcr    DWORD PTR [ecx],cl
  412554:	es pop edx
  412556:	pop    edi
  412557:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412559:	mov    al,ds:0x36e0242e
  41255e:	sar    bl,1
  412560:	jmp    0x5d32dd43
  412565:	mov    ch,0xc6
  412567:	sbb    al,0x10
  412569:	int3   
  41256a:	into   
  41256b:	xor    al,0xcd
  41256d:	or     cl,BYTE PTR ds:0x8ef984c6
  412573:	jle    0x4125cb
  412575:	outs   dx,BYTE PTR ds:[esi]
  412576:	fcmovb st,st(0)
  412578:	es or  eax,0xee795280
  41257e:	xchg   esi,eax
  41257f:	icebp  
  412580:	fcmovbe st,st(5)
  412582:	xchg   ebp,eax
  412583:	or     ah,dh
  412585:	lods   eax,DWORD PTR ds:[esi]
  412586:	pop    edi
  412587:	adc    ebp,DWORD PTR [ebx+0x7784c5b7]
  41258d:	idiv   DWORD PTR [ebp+0x4912ee13]
  412593:	les    edi,FWORD PTR [ebx]
  412595:	pop    esp
  412596:	std    
  412597:	dec    ecx
  412598:	dec    edx
  412599:	fdivr  DWORD PTR [ecx-0x73a943ae]
  41259f:	fsubr  DWORD PTR [esp+edi*4]
  4125a2:	mov    ecx,0x30ef034e
  4125a7:	retf   0x797f
  4125aa:	scas   al,BYTE PTR es:[edi]
  4125ab:	pop    esp
  4125ac:	cmp    al,0x9a
  4125ae:	or     dh,ch
  4125b0:	das    
  4125b1:	call   0xacc6:0xef54699b
  4125b8:	dec    edx
  4125b9:	mov    edi,0xa223dbdb
  4125be:	sub    bl,BYTE PTR [esi+0x1c060ace]
  4125c4:	lahf   
  4125c5:	leave  
  4125c6:	das    
  4125c7:	repnz push ds
  4125c9:	rol    DWORD PTR [esi-0x28cb6ccd],cl
  4125cf:	and    DWORD PTR [eax],esi
  4125d1:	cmc    
  4125d2:	int    0x2c
  4125d4:	add    DWORD PTR [ebx-0x39],eax
  4125d7:	jae    0x412581
  4125d9:	rol    BYTE PTR [eax+ecx*8-0x13033675],1
  4125e0:	add    BYTE PTR [ecx],al
  4125e2:	cmc    
  4125e3:	push   eax
  4125e4:	outs   dx,BYTE PTR ds:[esi]
  4125e5:	addr16 sbb ebx,0x962dd660
  4125ec:	loope  0x41266b
  4125ee:	fcomp  st(7)
  4125f0:	jnp    0x41260e
  4125f2:	outs   dx,BYTE PTR ds:[esi]
  4125f3:	movs   DWORD PTR es:[di],DWORD PTR fs:[si]
  4125f6:	retf   0x2503
  4125f9:	imul   edi,edi,0xb3d10c6
  4125ff:	mov    ebx,0xa4d92ba9
  412604:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412606:	test   al,0xe5
  412608:	jecxz  0x41263e
  41260a:	push   ds
  41260b:	dec    cl
  41260d:	push   ds
  41260e:	enter  0x4715,0xb6
  412612:	pop    ds
  412613:	loope  0x41266a
  412615:	cmp    al,0xc9
  412617:	repnz idiv BYTE PTR [edx-0x49c542fe]
  41261e:	lds    ebx,FWORD PTR [esi-0x7c]
  412621:	repnz mov eax,ds:0x4ebfb3a9
  412627:	jne    0x41260e
  412629:	add    dh,ch
  41262b:	shl    dh,1
  41262d:	xchg   esi,eax
  41262e:	cmp    ebp,DWORD PTR [ebp+edi*4+0x2f]
  412632:	mov    DWORD PTR [eax-0x14],esi
  412635:	xchg   ebp,eax
  412636:	cmp    eax,0x960333a5
  41263b:	add    al,0x24
  41263d:	xor    edx,edi
  41263f:	jle    0x4125c4
  412641:	jae    0x4125f5
  412643:	les    edx,FWORD PTR [ecx-0x43]
  412646:	jb     0x41267a
  412648:	imul   ebp,DWORD PTR [ecx+ebx*8],0x44c313fd
  41264f:	fidiv  DWORD PTR [ebx-0x6b8a8089]
  412655:	jne    0x4125ef
  412657:	cmp    DWORD PTR [esi+0x3a],edi
  41265a:	and    ch,BYTE PTR [edi]
  41265c:	fld    TBYTE PTR [esi-0x7af51c0b]
  412662:	pop    esi
  412663:	mov    BYTE PTR [eax+0x2eb0dfe6],dl
  412669:	mov    ecx,edi
  41266b:	adc    BYTE PTR [ebx],ah
  41266d:	fstp   st(6)
  41266f:	jb     0x41262d
  412671:	imul   ebx,DWORD PTR [ecx+0x1f],0xf32dbb15
  412678:	cmc    
  412679:	pop    es
  41267a:	mov    ecx,0xebc1bcd9
  41267f:	loope  0x4126fd
  412681:	repz out 0x58,eax
  412684:	sti    
  412685:	cmova  edi,eax
  412688:	xchg   esi,eax
  412689:	jnp    0x41260f
  41268b:	fsub   DWORD PTR [esi]
  41268d:	push   ecx
  41268e:	cwde   
  41268f:	cmpxchg DWORD PTR [eax-0x43651bbf],ebx
  412696:	call   FWORD PTR [ecx+0x76]
  412699:	pop    ebx
  41269a:	fld    TBYTE PTR [ecx+0xdc2a8d]
  4126a0:	and    eax,edi
  4126a2:	push   cs
  4126a3:	ins    DWORD PTR es:[edi],dx
  4126a4:	lahf   
  4126a5:	stos   DWORD PTR es:[edi],eax
  4126a6:	add    BYTE PTR [esi-0x5bc6ebdc],dh
  4126ac:	mov    ah,0x55
  4126ae:	les    ebp,FWORD PTR [ecx]
  4126b0:	es pop eax
  4126b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b3:	scas   al,BYTE PTR es:[edi]
  4126b4:	sub    cl,BYTE PTR [ecx-0x5d07c165]
  4126ba:	pop    ss
  4126bb:	sub    bl,bl
  4126bd:	jno    0x4126e3
  4126bf:	es mov bl,0x69
  4126c2:	inc    esp
  4126c3:	xlat   BYTE PTR ds:[ebx]
  4126c4:	aam    0x73
  4126c6:	cwde   
  4126c7:	push   es
  4126c8:	pop    ss
  4126c9:	lods   al,BYTE PTR ds:[esi]
  4126ca:	xchg   DWORD PTR [edi],ecx
  4126cc:	out    dx,al
  4126cd:	jle    0x412739
  4126cf:	cmp    eax,0xdfa24dcc
  4126d4:	push   0x637b2c22
  4126d9:	add    eax,0x1e7b571b
  4126de:	fidivr DWORD PTR [edi]
  4126e0:	sahf   
  4126e1:	fild   QWORD PTR [ecx]
  4126e3:	sbb    al,0x84
  4126e5:	out    dx,al
  4126e6:	and    eax,0x8ee22eb6
  4126eb:	sti    
  4126ec:	and    al,0x7c
  4126ee:	in     al,0x7f
  4126f0:	cwde   
  4126f1:	pop    ecx
  4126f2:	lahf   
  4126f3:	and    ch,bh
  4126f5:	rcr    ebp,1
  4126f7:	retf   0x3011
  4126fa:	lahf   
  4126fb:	cmp    DWORD PTR [ebx-0x71],0xffffffaf
  4126ff:	(bad)  
  412701:	scas   eax,DWORD PTR es:[edi]
  412702:	xor    eax,ebx
  412704:	popf   
  412705:	test   eax,0x7ea8618f
  41270a:	and    DWORD PTR ds:0x6cf7bbb5,edx
  412710:	cwde   
  412711:	fiadd  WORD PTR [ebp+0x3d]
  412714:	xor    ebx,ebx
  412716:	out    0x4e,eax
  412718:	aaa    
  412719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41271a:	and    eax,0x33671b99
  41271f:	retf   
  412720:	loopne 0x4126f3
  412722:	xchg   edi,eax
  412723:	not    ebp
  412725:	out    dx,eax
  412726:	sbb    DWORD PTR [ebx],edi
  412728:	sub    bl,BYTE PTR [edi]
  41272a:	dec    esp
  41272b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272c:	wbinvd 
  41272e:	jb     0x412767
  412730:	sbb    ah,bl
  412732:	pusha  
  412733:	loope  0x4127a3
  412735:	pop    ebp
  412736:	mov    al,0xe1
  412738:	int3   
  412739:	ret    0x7582
  41273c:	out    0xea,eax
  41273e:	mov    ch,0x5f
  412740:	sub    eax,0x97d6ede9
  412745:	mul    esi
  412747:	mov    dl,0x81
  412749:	neg    BYTE PTR gs:[eax-0x25065bb2]
  412750:	(bad)  
  412751:	push   ss
  412752:	call   0xb9ad7500
  412757:	dec    ebp
  412758:	inc    ecx
  412759:	mov    eax,0x164ffb2e
  41275e:	mov    es,eax
  412760:	test   eax,0x5a988ce6
  412765:	or     eax,0x5fec0259
  41276a:	les    esi,FWORD PTR [edi]
  41276c:	inc    esi
  41276d:	clc    
  41276e:	or     eax,0xa5e8cd36
  412773:	idiv   DWORD PTR [edi+ebx*1+0x79]
  412777:	cwde   
  412778:	inc    esp
  412779:	adc    DWORD PTR [edi+0x75100fd2],esi
  41277f:	aad    0x8a
  412781:	ins    DWORD PTR es:[edi],dx
  412782:	mov    bl,0xd0
  412784:	or     al,0x73
  412786:	pop    ecx
  412787:	mov    esp,0x760ee18a
  41278c:	std    
  41278d:	outs   dx,BYTE PTR ds:[esi]
  41278e:	mov    ecx,0x31a0711
  412793:	sbb    DWORD PTR [eax-0x17a3ae74],ebx
  412799:	mov    esp,0x43b4bc7f
  41279e:	inc    ecx
  41279f:	cmp    ecx,DWORD PTR [ecx]
  4127a1:	stos   BYTE PTR es:[edi],al
  4127a2:	fild   QWORD PTR [ecx-0x3e]
  4127a5:	and    cl,BYTE PTR [ecx-0x129fafcf]
  4127ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ac:	xlat   BYTE PTR ds:[ebx]
  4127ad:	pop    edi
  4127ae:	or     ecx,eax
  4127b0:	test   eax,0x9250e0eb
  4127b5:	lock dec bh
  4127b8:	jge    0x4127e4
  4127ba:	adc    dl,ch
  4127bc:	mov    ecx,0x9300f83f
  4127c1:	inc    ebp
  4127c2:	lods   eax,DWORD PTR cs:[esi]
  4127c4:	fwait
  4127c5:	cs dec ecx
  4127c7:	and    ah,dl
  4127c9:	push   ds
  4127ca:	lea    edi,[edi]
  4127cc:	mov    ah,0x4e
  4127ce:	or     edi,eax
  4127d0:	js     0x412816
  4127d2:	cmp    al,0xe8
  4127d4:	push   ds
  4127d5:	jno    0x4127c7
  4127d7:	mov    edx,0x2088c446
  4127dc:	push   ds
  4127dd:	xchg   ecx,eax
  4127de:	fwait
  4127df:	mov    edi,0xb64d633e
  4127e4:	or     cl,cl
  4127e6:	pop    eax
  4127e7:	loopne 0x412818
  4127e9:	ror    DWORD PTR [ebx-0x6f421a2],0x50
  4127f0:	ret    0xa0e5
  4127f3:	sub    DWORD PTR [edi+eiz*4+0x92ff08d],ecx
  4127fa:	in     al,0x4a
  4127fc:	outs   dx,DWORD PTR ds:[esi]
  4127fd:	add    eax,0xd4c7e306
  412802:	jo     0x4127ae
  412804:	push   ss
  412805:	into   
  412806:	jecxz  0x4127a1
  412808:	xchg   ecx,eax
  412809:	in     al,dx
  41280a:	outs   dx,BYTE PTR ds:[esi]
  41280b:	inc    edx
  41280c:	push   ebx
  41280d:	(bad)  
  41280e:	out    dx,al
  41280f:	sbb    edi,DWORD PTR [edi+eiz*8-0x2ee6bd9a]
  412816:	mov    ds:0xcdac1fbe,eax
  41281b:	jne    0x4127e0
  41281d:	sub    ecx,esi
  41281f:	sbb    eax,DWORD PTR [esi-0x761ff1e3]
  412825:	aaa    
  412826:	sbb    ch,0x40
  412829:	dec    edx
  41282a:	add    eax,0xdc56de13
  41282f:	adc    ebp,DWORD PTR [ebp-0x584c3200]
  412835:	cs ins DWORD PTR es:[edi],dx
  412837:	mov    edi,ebp
  412839:	add    DWORD PTR [eax-0x6cce8590],esi
  41283f:	inc    ebp
  412840:	jmp    0xd1b7fb65
  412845:	test   eax,0x1f1ae29c
  41284a:	add    DWORD PTR [edi-0x78],edx
  41284d:	retf   0xc0be
  412850:	jg     0x4127fc
  412852:	and    BYTE PTR [edi-0xa2d0ceb],ah
  412858:	jae    0x4128ce
  41285a:	fdivr  DWORD PTR [edi]
  41285c:	pop    es
  41285d:	repnz sbb BYTE PTR [ebx],0xe7
  412861:	dec    edi
  412862:	in     al,dx
  412863:	jb     0x412856
  412865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412866:	scas   al,BYTE PTR es:[edi]
  412867:	jmp    FWORD PTR [ebx]
  412869:	imul   esp,DWORD PTR [ecx+0x5706e0a6],0x11
  412870:	inc    esp
  412871:	pushf  
  412872:	inc    eax
  412873:	dec    ebx
  412874:	sbb    dl,BYTE PTR [edx]
  412876:	mov    ebp,0xa34f68c7
  41287b:	push   ss
  41287c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41287d:	push   ecx
  41287e:	add    eax,0x5f2664c3
  412883:	push   ss
  412884:	loop   0x41281b
  412886:	sbb    esi,eax
  412888:	je     0x412890
  41288a:	les    eax,FWORD PTR [esi+0x3f]
  41288d:	scas   al,BYTE PTR es:[edi]
  41288e:	(bad)  
  41288f:	enter  0x170a,0xd2
  412893:	jb     0x412836
  412895:	js     0x412864
  412897:	mov    BYTE PTR [eax],0xfe
  41289a:	mov    ecx,0x2502912f
  41289f:	xor    DWORD PTR [ebp+0xc19883a],0xffffffb0
  4128a6:	(bad)  
  4128a7:	fldenv [ecx-0x64]
  4128aa:	pushf  
  4128ab:	(bad)
  4128af:	outs   dx,DWORD PTR ds:[esi]
  4128b0:	cmp    cl,BYTE PTR [edx]
  4128b2:	xchg   ebx,eax
  4128b3:	jmp    FWORD PTR [edx+0xf626088]
  4128b9:	push   edx
  4128ba:	xchg   esp,eax
  4128bb:	xor    al,0x7c
  4128bd:	xlat   BYTE PTR ds:[ebx]
  4128be:	xchg   ecx,eax
  4128bf:	arpl   WORD PTR [edx-0x3f],cx
  4128c2:	mov    ds:0x5fb71e32,al
  4128c7:	test   eax,0x4899dfd5
  4128cc:	inc    edx
  4128cd:	jno    0x412855
  4128cf:	pop    ss
  4128d0:	mov    eax,ds:0x6b7eff24
  4128d5:	das    
  4128d6:	fimul  DWORD PTR [edi+0x26516d52]
  4128dc:	adc    al,0x1e
  4128de:	pop    es
  4128df:	pop    ebx
  4128e0:	iret   
  4128e1:	mov    dh,0x59
  4128e3:	pusha  
  4128e4:	lods   eax,DWORD PTR ds:[esi]
  4128e5:	mov    al,ds:0x407d4587
  4128ea:	inc    ecx
  4128eb:	sub    al,0xc8
  4128ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ee:	ins    BYTE PTR es:[edi],dx
  4128ef:	fst    QWORD PTR [ecx+0x50]
  4128f2:	imul   eax,DWORD PTR [eax+0xc70f3b5],0x5e
  4128f9:	xlat   BYTE PTR ds:[ebx]
  4128fa:	into   
  4128fb:	cmp    bl,BYTE PTR [ebx]
  4128fd:	jns    0x4128ca
  4128ff:	mov    dh,0x52
  412901:	inc    ebp
  412902:	sbb    eax,0xc5f0016b
  412907:	push   esi
  412908:	imul   esi,DWORD PTR [ebp-0x4a7a08f1],0x7586321a
  412912:	and    edx,DWORD PTR [edi+0x35]
  412915:	jae    0x4128fb
  412917:	scas   eax,DWORD PTR es:[edi]
  412918:	or     al,0xb8
  41291a:	pop    ds
  41291b:	test   BYTE PTR [eax-0x75],ch
  41291e:	jno    0x4128ac
  412920:	jb     0x412947
  412922:	aaa    
  412923:	aas    
  412924:	jmp    0x41297a
  412926:	sub    DWORD PTR [ebx+edx*1+0x3b],0xa8340931
  41292e:	or     al,0x1a
  412930:	fwait
  412931:	jl     0x412979
  412933:	hlt    
  412934:	add    al,0x22
  412936:	sbb    al,0x86
  412938:	mov    dh,BYTE PTR [eax]
  41293a:	cmp    DWORD PTR [ebx+0x60],ecx
  41293d:	adc    eax,0xeba3250e
  412942:	ins    DWORD PTR es:[edi],dx
  412943:	in     al,dx
  412944:	mov    WORD PTR [ebp+0x6],cs
  412947:	cli    
  412948:	std    
  412949:	inc    esi
  41294a:	xchg   ebx,eax
  41294b:	sbb    al,0xf9
  41294d:	cmp    BYTE PTR [ebx-0x2a564b66],bh
  412953:	adc    eax,DWORD PTR [eax]
  412955:	aad    0xbb
  412957:	lea    ecx,[edx+0x5f]
  41295a:	shl    al,0xbd
  41295d:	push   es
  41295e:	jge    0x412948
  412960:	sbb    DWORD PTR [ecx-0x1a20dc22],0xfffffff3
  412967:	inc    ebp
  412968:	sti    
  412969:	loop   0x412964
  41296b:	pop    es
  41296c:	jnp    0x4129bb
  41296e:	int3   
  41296f:	mov    edx,DWORD PTR [eax+0x3e]
  412972:	mov    dh,0xc7
  412974:	xchg   esi,eax
  412975:	mov    ebx,0x952e6644
  41297a:	fsubp  st(6),st
  41297c:	dec    ebx
  41297d:	out    dx,eax
  41297e:	cmp    ax,0x6ff5
  412982:	jbe    0x412934
  412984:	sub    eax,0x5208ac90
  412989:	lds    esi,FWORD PTR [eax+0x27a16a12]
  41298f:	mov    ?,edx
  412991:	cmp    ah,BYTE PTR [edx-0x1018e841]
  412997:	mov    bl,0x80
  412999:	push   edx
  41299a:	inc    esi
  41299b:	mov    ecx,0x5400a66f
  4129a0:	test   bl,0x6f
  4129a3:	cld    
  4129a4:	jmp    DWORD PTR [edx]
  4129a6:	imul   esi,DWORD PTR [ebx+0x5a29f6d6],0xffffffc1
  4129ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ae:	out    dx,al
  4129af:	test   DWORD PTR [edx+eax*8-0x1],eax
  4129b3:	adc    BYTE PTR [ebx+0x4864ec8b],bl
  4129b9:	lods   al,BYTE PTR ds:[esi]
  4129ba:	aad    0x92
  4129bc:	ins    BYTE PTR es:[edi],dx
  4129bd:	inc    ebp
  4129be:	pop    edx
  4129bf:	adc    al,0x89
  4129c1:	inc    eax
  4129c2:	in     eax,dx
  4129c3:	adc    DWORD PTR [eax+ebp*4-0x59c3d040],0x60
  4129cb:	inc    edi
  4129cc:	ror    ah,cl
  4129ce:	xor    eax,0x907c6977
  4129d3:	cli    
  4129d4:	mov    edx,0x9dfcdf32
  4129d9:	push   ebp
  4129da:	out    0x34,al
  4129dc:	in     al,dx
  4129dd:	and    ah,BYTE PTR [ebx+0x4f]
  4129e0:	push   ecx
  4129e1:	sbb    ebp,DWORD PTR [ebp+0x1b]
  4129e4:	leave  
  4129e5:	push   0xc91b5f95
  4129ea:	shl    BYTE PTR [ecx],cl
  4129ec:	xor    ebp,esi
  4129ee:	push   ebx
  4129ef:	and    eax,DWORD PTR [ebp+0x2b]
  4129f2:	jne    0x4129e9
  4129f4:	sbb    eax,0xcc01bb7b
  4129f9:	xor    ebx,DWORD PTR [edi]
  4129fb:	mov    BYTE PTR [edi-0x23b5c07a],bh
  412a01:	out    dx,eax
  412a02:	rcr    DWORD PTR [ecx],1
  412a04:	cli    
  412a05:	repz arpl WORD PTR [esp+edi*2+0x3cafa2e4],si
  412a0d:	and    BYTE PTR [eax-0x3dcc3d52],bh
  412a13:	fcomp  QWORD PTR [ecx-0x7f5d555c]
  412a19:	retf   
  412a1a:	pop    ds
  412a1b:	pop    edi
  412a1c:	xlat   BYTE PTR ds:[ebx]
  412a1d:	add    eax,0x951bee8c
  412a22:	lods   al,BYTE PTR ds:[esi]
  412a23:	mov    ch,0xb5
  412a25:	aas    
  412a26:	retf   
  412a27:	(bad)  
  412a29:	xlat   BYTE PTR ds:[ebx]
  412a2a:	jns    0x412a20
  412a2c:	call   0x63:0xa48aeee8
  412a33:	out    0xfb,al
  412a35:	mov    ch,0x9
  412a37:	mov    ebp,0xfa1f08e
  412a3c:	inc    eax
  412a3d:	std    
  412a3e:	cld    
  412a3f:	mov    edi,0x17dccd80
  412a44:	mov    ch,0x2c
  412a46:	or     bl,BYTE PTR [ecx+0x4d]
  412a49:	jge    0x412a57
  412a4b:	jge    0x412a5b
  412a4d:	aam    0xfd
  412a4f:	and    al,0xc8
  412a51:	add    BYTE PTR ds:0xcf5ae159,al
  412a57:	ja     0x412a8e
  412a59:	mov    eax,ds:0x86c0af49
  412a5e:	xor    al,0xd2
  412a60:	pop    esp
  412a61:	mov    ds:0xffad51c9,eax
  412a66:	stos   BYTE PTR es:[edi],al
  412a67:	clc    
  412a68:	int    0xa
  412a6a:	(bad)  
  412a6b:	stos   DWORD PTR es:[edi],eax
  412a6c:	jge    0x412aca
  412a6e:	aad    0x59
  412a70:	push   cs
  412a71:	add    dh,BYTE PTR [eax+0x26]
  412a74:	pop    ebp
  412a75:	push   0x73
  412a77:	sbb    DWORD PTR [edi-0x2dd651e],edi
  412a7d:	mov    BYTE PTR [ecx-0x4f],ah
  412a80:	cmp    ebp,DWORD PTR [esi+0x1a6ac89]
  412a86:	pop    ebx
  412a87:	aad    0xfd
  412a89:	loopne 0x412a41
  412a8b:	pop    ss
  412a8c:	push   0xcb246fcd
  412a91:	mov    ecx,0x7c558c1a
  412a96:	push   edi
  412a97:	leave  
  412a98:	push   ss
  412a99:	mov    ds:0x662d749c,eax
  412a9e:	ret    
  412a9f:	popf   
  412aa0:	das    
  412aa1:	inc    edi
  412aa2:	not    BYTE PTR [edi-0x49]
  412aa5:	cmp    BYTE PTR [esi-0x16],bh
  412aa8:	retf   
  412aa9:	imul   edx,DWORD PTR [edi+0x38],0xffffffea
  412aad:	xor    esp,DWORD PTR [edi-0x22]
  412ab0:	jg     0x412afd
  412ab2:	cmp    DWORD PTR [ecx+eiz*2-0x731f44ec],ebx
  412ab9:	test   eax,ebx
  412abb:	mov    dh,0x6a
  412abd:	pusha  
  412abe:	pop    es
  412abf:	cs push ds
  412ac1:	(bad)  
  412ac2:	sti    
  412ac3:	outs   dx,DWORD PTR ds:[esi]
  412ac4:	xor    ebp,0xffffffbc
  412ac7:	push   eax
  412ac8:	jbe    0x412b08
  412aca:	jns    0x412b19
  412acc:	sub    eax,0x2a30ba8b
  412ad1:	cmc    
  412ad2:	push   esi
  412ad3:	retf   0x7417
  412ad6:	and    esi,esp
  412ad8:	xchg   ecx,eax
  412ad9:	out    0xd4,eax
  412adb:	std    
  412adc:	or     edi,0xa039991a
  412ae2:	rcr    BYTE PTR [ecx-0x7f],cl
  412ae5:	out    dx,eax
  412ae6:	or     al,0x4d
  412ae8:	imul   esi,DWORD PTR [edi+0x3ad1878f],0x489bac9f
  412af2:	imul   ebp,edi,0x39
  412af5:	mov    ds:0x764306b0,eax
  412afa:	mov    cl,0x63
  412afc:	inc    edx
  412afd:	and    DWORD PTR [esi-0x93a7690],esp
  412b03:	cdq    
  412b04:	aas    
  412b05:	enter  0x7982,0xaa
  412b09:	sar    BYTE PTR [ebx],0x81
  412b0c:	jne    0x412ae0
  412b0e:	xlat   BYTE PTR ds:[ebx]
  412b0f:	xor    esp,DWORD PTR [ebx-0x3ea0323a]
  412b15:	add    DWORD PTR [eax+0x25c6a3fc],edi
  412b1b:	call   0xcec18001
  412b20:	mov    DWORD PTR [eax-0xd],edi
  412b23:	adc    eax,0xd7b22f37
  412b28:	and    edx,ebp
  412b2a:	into   
  412b2b:	mov    eax,ds:0xd3c14a54
  412b30:	rol    ah,1
  412b32:	loopne 0x412abe
  412b34:	mov    ah,0xbb
  412b36:	stc    
  412b37:	aas    
  412b38:	adc    al,0xb1
  412b3a:	loopne 0x412b0b
  412b3c:	inc    ecx
  412b3d:	xor    eax,ecx
  412b3f:	ficom  WORD PTR [ecx+0x2f]
  412b42:	adc    eax,0xac79e5ce
  412b47:	(bad)  
  412b48:	and    bh,BYTE PTR [ecx+0x24bdb67e]
  412b4e:	dec    BYTE PTR [ecx-0x5a]
  412b51:	sbb    esp,0xffffffaf
  412b54:	sbb    DWORD PTR [edi+0x3],0xab1b01aa
  412b5b:	or     ebx,DWORD PTR [edi]
  412b5d:	sbb    BYTE PTR fs:[eax],al
  412b60:	xchg   esp,eax
  412b61:	dec    edi
  412b62:	add    BYTE PTR [ecx-0x4f3a41d7],bl
  412b68:	test   BYTE PTR [ebx],bl
  412b6a:	sti    
  412b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6c:	bound  ebx,QWORD PTR [eax+0x2]
  412b6f:	xor    BYTE PTR [ebx],0x2b
  412b72:	fwait
  412b73:	jg     0x412be7
  412b75:	and    dl,BYTE PTR [esi-0x48138725]
  412b7b:	jnp    0x412b99
  412b7d:	jmp    0xecda:0x958492be
  412b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b85:	into   
  412b86:	in     eax,dx
  412b87:	test   al,0x3c
  412b89:	sbb    eax,0x5d70b727
  412b8e:	or     edx,DWORD PTR [edx+0x20adf68e]
  412b94:	sbb    DWORD PTR [edx],ecx
  412b96:	jle    0x412c0c
  412b98:	nop
  412b99:	jp     0x412be2
  412b9b:	ss dec ebp
  412b9d:	enter  0xb314,0x85
  412ba1:	inc    eax
  412ba2:	loopne 0x412c10
  412ba4:	(bad)  
  412ba5:	shl    ch,1
  412ba7:	(bad)  
  412ba8:	dec    ebp
  412ba9:	jne    0x412c03
  412bab:	sbb    ecx,0x84618798
  412bb1:	push   cs
  412bb2:	(bad)  [eax+ecx*8+0x17]
  412bb6:	dec    edi
  412bb7:	push   edi
  412bb8:	gs in  eax,dx
  412bba:	dec    ebx
  412bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbc:	aaa    
  412bbd:	neg    BYTE PTR [esi]
  412bbf:	add    al,0x8a
  412bc1:	xor    al,0x7f
  412bc3:	push   ds
  412bc4:	adc    al,0x13
  412bc6:	retf   0x49af
  412bc9:	cld    
  412bca:	loope  0x412b92
  412bcc:	dec    BYTE PTR ds:0x369b512
  412bd2:	mov    ch,0x25
  412bd4:	outs   dx,BYTE PTR fs:[esi]
  412bd6:	ror    BYTE PTR [edi],0x74
  412bd9:	dec    ecx
  412bda:	int3   
  412bdb:	or     ch,BYTE PTR [edi-0x606209bc]
  412be1:	in     al,dx
  412be2:	nop
  412be3:	pop    es
  412be4:	(bad)  
  412be5:	jo     0x412b91
  412be7:	adc    esp,DWORD PTR [ecx]
  412be9:	mov    esp,0xf0b3d81e
  412bee:	dec    ebp
  412bef:	push   edi
  412bf0:	push   es
  412bf1:	aaa    
  412bf2:	in     al,0xe5
  412bf4:	je     0x412c4a
  412bf6:	call   0xa604:0xfade790e
  412bfd:	jge    0x412b9b
  412bff:	jmp    0xf0fe:0xfc22936d
  412c06:	push   cs
  412c07:	sbb    BYTE PTR [edi+eiz*4+0x52],ah
  412c0b:	nop
  412c0c:	outs   dx,BYTE PTR ds:[esi]
  412c0d:	push   es
  412c0e:	out    dx,eax
  412c0f:	ret    0xa4d1
  412c12:	clc    
  412c13:	jns    0x412ba1
  412c15:	imul   BYTE PTR [ebx-0x28]
  412c18:	push   esi
  412c19:	lods   al,BYTE PTR ds:[esi]
  412c1a:	dec    edi
  412c1b:	(bad)  
  412c1d:	xor    DWORD PTR ds:[ecx-0x20bf3113],eax
  412c24:	cmc    
  412c25:	mov    ebp,0x65a9ab46
  412c2a:	cmp    eax,0x2417f50d
  412c2f:	adc    edi,DWORD PTR [ebp+0x15]
  412c32:	mov    ch,0x80
  412c34:	add    bl,cl
  412c36:	inc    ebx
  412c37:	sub    bl,BYTE PTR [esp+esi*1+0x670bc146]
  412c3e:	lods   eax,DWORD PTR ds:[esi]
  412c3f:	(bad)  
  412c40:	cld    
  412c41:	mov    edi,0x9bfa1416
  412c46:	lea    ebx,[eax]
  412c48:	int3   
  412c49:	cmp    DWORD PTR [edi-0x6d732db5],0xffffffe9
  412c50:	stc    
  412c51:	dec    esp
  412c52:	jne    0x412cb8
  412c54:	pop    esp
  412c55:	xchg   ebp,eax
  412c56:	mov    BYTE PTR [edx],ch
  412c58:	sbb    al,0x76
  412c5a:	(bad)  
  412c5b:	adc    eax,0xf702d58f
  412c60:	pusha  
  412c61:	pop    edi
  412c62:	out    dx,eax
  412c63:	jl     0x412c4c
  412c65:	xchg   esp,eax
  412c66:	stos   DWORD PTR es:[edi],eax
  412c67:	ins    DWORD PTR es:[edi],dx
  412c68:	mov    ebp,0xfb1af2da
  412c6d:	jb     0x412c82
  412c6f:	ins    DWORD PTR es:[edi],dx
  412c70:	imul   ebp,edi,0xffffffe8
  412c73:	cli    
  412c74:	pop    es
  412c75:	or     eax,0xe0a0694f
  412c7a:	jnp    0x412ce5
  412c7c:	mov    al,0xb6
  412c7e:	or     BYTE PTR [eax-0x40],0xd3
  412c82:	aaa    
  412c83:	mul    dh
  412c85:	stos   DWORD PTR es:[edi],eax
  412c86:	retf   0xed94
  412c89:	pop    edx
  412c8a:	cmp    esp,DWORD PTR [edi+eax*8-0x6d]
  412c8e:	sbb    bh,BYTE PTR [edx-0x47]
  412c91:	(bad)  
  412c92:	loopne 0x412d03
  412c94:	iret   
  412c95:	and    edx,DWORD PTR [ebp+edx*4+0x4d]
  412c99:	or     ah,BYTE PTR [ebx]
  412c9b:	dec    ecx
  412c9c:	sbb    eax,0x2b6455b3
  412ca1:	inc    eax
  412ca2:	nop
  412ca3:	jmp    0x465b:0x15fd7e06
  412caa:	ja     0x412c58
  412cac:	pop    ebx
  412cad:	dec    ecx
  412cae:	aas    
  412caf:	idiv   DWORD PTR [ebp+0x412f98c9]
  412cb5:	xor    dh,BYTE PTR [ebx]
  412cb7:	xor    dh,bl
  412cb9:	cli    
  412cba:	call   0xf181f73c
  412cbf:	inc    edi
  412cc0:	retf   0x5a56
  412cc3:	mov    ebp,0x5df380b
  412cc8:	jmp    0x412d2c
  412cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ccb:	ret    0x5b28
  412cce:	jmp    0x412c5a
  412cd0:	mov    edx,0xd7dcb5b9
  412cd5:	push   edx
  412cd6:	repnz lock imul esi,DWORD PTR [ecx+eiz*1+0x8d82251],0x82706f25
  412ce3:	xchg   ecx,eax
  412ce4:	fimul  WORD PTR [ecx+0x22]
  412ce7:	inc    esi
  412ce8:	das    
  412ce9:	add    al,0xd9
  412ceb:	mov    BYTE PTR [eax-0x66],ch
  412cee:	call   0xb109:0xdf31c109
  412cf5:	or     BYTE PTR [edx],ch
  412cf7:	jae    0x412c91
  412cf9:	std    
  412cfa:	stos   BYTE PTR es:[edi],al
  412cfb:	call   0x3aff6084
  412d00:	fwait
  412d01:	(bad)
  412d04:	das    
  412d05:	push   ss
  412d06:	jb     0x412cb2
  412d08:	cwde   
  412d09:	pop    ecx
  412d0a:	and    DWORD PTR [ebx],ebp
  412d0c:	cmp    ebx,esi
  412d0e:	repz int3 
  412d10:	xor    edi,DWORD PTR [eax+edi*1+0x75]
  412d14:	stos   BYTE PTR es:[edi],al
  412d15:	cdq    
  412d16:	add    dh,al
  412d18:	paddd  mm6,QWORD PTR [edx]
  412d1b:	jbe    0x412cce
  412d1d:	mov    bl,0x2d
  412d1f:	inc    esi
  412d20:	fidivr DWORD PTR [edx]
  412d22:	les    edx,FWORD PTR [eax+0x14abd769]
  412d28:	call   0xd38533d
  412d2d:	add    al,0x7d
  412d2f:	in     eax,dx
  412d30:	xor    BYTE PTR [edi-0x41],bh
  412d33:	pop    eax
  412d34:	imul   edx,DWORD PTR [eax+0x47],0x7002d969
  412d3b:	mov    edx,0x30abed0e
  412d40:	add    esp,DWORD PTR [eax+0x2f1fa1b9]
  412d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d47:	int3   
  412d48:	or     BYTE PTR [edi+0x7c],ch
  412d4b:	ror    DWORD PTR [edi+0x53a802eb],1
  412d51:	mov    edi,0xcc40030d
  412d56:	pop    ecx
  412d57:	data16 add dh,BYTE PTR [ebx+0x21d01651]
  412d5e:	pop    esi
  412d5f:	cmp    ecx,DWORD PTR [ebx]
  412d61:	xchg   esi,eax
  412d62:	push   ds
  412d63:	hlt    
  412d64:	mov    al,ds:0x20462aec
  412d69:	dec    ebx
  412d6a:	mov    esi,0xfe691843
  412d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d71:	out    dx,eax
  412d72:	(bad)  
  412d73:	lahf   
  412d74:	push   ebp
  412d75:	call   0x2304:0xffb09b85
  412d7c:	mov    esp,0x6a63bd00
  412d81:	jae    0x412ddc
  412d83:	xchg   edx,eax
  412d84:	shl    BYTE PTR [edi*1-0x3b784797],cl
  412d8b:	sar    BYTE PTR [eax*8-0x7d597982],cl
  412d92:	cli    
  412d93:	adc    bl,BYTE PTR [esi+esi*4]
  412d96:	or     esp,DWORD PTR [edi+0x33]
  412d99:	push   ebp
  412d9a:	scas   eax,DWORD PTR es:[edi]
  412d9b:	sub    BYTE PTR [ebx],dl
  412d9d:	xor    bl,ch
  412d9f:	xor    ch,BYTE PTR [edi]
  412da1:	sub    al,bl
  412da3:	jo     0x412df5
  412da5:	clc    
  412da6:	jnp    0x412e19
  412da8:	pop    edx
  412da9:	sub    bl,ah
  412dab:	(bad)  
  412dac:	(bad)  
  412dae:	stc    
  412daf:	fisttp WORD PTR [edx]
  412db1:	std    
  412db2:	cmp    esp,eax
  412db4:	repnz out 0xaa,eax
  412db7:	in     al,0xc3
  412db9:	into   
  412dba:	pop    edx
  412dbb:	cld    
  412dbc:	addr16 xchg edx,eax
  412dbe:	jno    0x412d4a
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	mov    bl,0x64
  412dc3:	mov    ds:0x48de60e0,al
  412dc8:	inc    eax
  412dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dca:	inc    esi
  412dcb:	jb     0x412e28
  412dcd:	inc    esp
  412dce:	sahf   
  412dcf:	dec    cx
  412dd1:	int3   
  412dd2:	push   esi
  412dd3:	ins    BYTE PTR es:[edi],dx
  412dd4:	out    dx,al
  412dd5:	je     0x412d93
  412dd7:	pop    esp
  412dd8:	xor    eax,0xc8ae203c
  412ddd:	pusha  
  412dde:	push   ebp
  412ddf:	inc    ecx
  412de0:	pop    esi
  412de1:	icebp  
  412de2:	push   ds
  412de3:	jnp    0x412d85
  412de5:	mov    eax,ds:0xbdd2afd
  412dea:	mov    ecx,0xd461955a
  412def:	enter  0x24ed,0xf1
  412df3:	iret   
  412df4:	mov    eax,0xb451918c
  412df9:	mov    al,0xde
  412dfb:	push   0xd551d364
  412e00:	loopne 0x412e57
  412e02:	sar    DWORD PTR [eax+0x370a7048],0xbc
  412e09:	(bad)  
  412e0a:	mov    ah,0xf3
  412e0c:	pushf  
  412e0d:	shl    BYTE PTR [esi-0x2a],0x56
  412e11:	push   ebp
  412e12:	dec    eax
  412e13:	mov    ch,0xdb
  412e15:	adc    DWORD PTR [edx],ecx
  412e17:	jecxz  0x412dbc
  412e19:	je     0x412e8a
  412e1b:	outs   dx,BYTE PTR ds:[esi]
  412e1c:	out    0xed,eax
  412e1e:	(bad)  
  412e1f:	sbb    dh,al
  412e21:	lods   al,BYTE PTR ds:[esi]
  412e22:	ret    0x4261
  412e25:	(bad)  
  412e26:	fld    TBYTE PTR [ebx-0x2e]
  412e29:	mov    ebp,0x4290ad49
  412e2e:	leave  
  412e2f:	mov    es,WORD PTR [ebx]
  412e31:	xor    al,0x3b
  412e33:	(bad)  [esi-0xa937c10]
  412e39:	mov    esp,0xec22c42c
  412e3e:	mov    ebp,0xcd741fc1
  412e43:	ror    BYTE PTR [ecx-0x1f],cl
  412e46:	aas    
  412e47:	not    BYTE PTR [esi]
  412e49:	lahf   
  412e4a:	sbb    ebx,ebp
  412e4c:	lea    esi,ds:0x29caf601
  412e52:	loopne 0x412e56
  412e54:	or     esi,DWORD PTR [ebx+0x40]
  412e57:	mov    esp,0x924526a0
  412e5c:	ds sub al,0x37
  412e5f:	jmp    0xb773:0x33db8eb5
  412e66:	or     ebx,eax
  412e68:	sbb    al,0x19
  412e6a:	cmp    DWORD PTR [edx],eax
  412e6c:	sbb    dh,bh
  412e6e:	ins    DWORD PTR es:[edi],dx
  412e6f:	daa    
  412e70:	(bad)  [ebp-0x6f24c9df]
  412e76:	rol    esp,0xf1
  412e79:	cmc    
  412e7a:	cmp    al,0xa2
  412e7c:	pop    esp
  412e7d:	sub    ah,BYTE PTR [ecx-0x38c66e68]
  412e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e84:	adc    DWORD PTR [esi+edx*1-0x5a3da3b7],ebp
  412e8b:	push   ebp
  412e8c:	test   DWORD PTR [edi-0xf989a2b],edi
  412e92:	nop
  412e93:	or     al,0x98
  412e95:	das    
  412e96:	ret    0xa86d
  412e99:	pop    ds
  412e9a:	mov    eax,ds:0xd433900b
  412e9f:	and    edi,edx
  412ea1:	push   cs
  412ea2:	mov    al,ds:0xfc203107
  412ea7:	jnp    0x412ecb
  412ea9:	xlat   BYTE PTR ds:[ebx]
  412eaa:	mov    edx,0x50a8f725
  412eaf:	push   eax
  412eb0:	mov    dl,0xab
  412eb2:	mov    ah,0xe1
  412eb4:	lds    esp,FWORD PTR [eax-0x756424d9]
  412eba:	aas    
  412ebb:	push   esi
  412ebc:	inc    ecx
  412ebd:	clc    
  412ebe:	out    dx,eax
  412ebf:	loopne 0x412ee1
  412ec1:	test   BYTE PTR [edx],cl
  412ec3:	add    esi,DWORD PTR [esi+0x5ad03e66]
  412ec9:	ja     0x412ec4
  412ecb:	xor    DWORD PTR [edx+0x1e],ecx
  412ece:	outs   dx,DWORD PTR ds:[esi]
  412ecf:	lahf   
  412ed0:	or     DWORD PTR [ebx],edx
  412ed2:	cs sub ch,BYTE PTR ss:[edi+0x56ed0a2b]
  412eda:	xchg   DWORD PTR ds:0xee07f618,ebp
  412ee0:	inc    ecx
  412ee1:	mov    DWORD PTR [edi],esi
  412ee3:	mov    ebp,0x87531e0b
  412ee8:	into   
  412ee9:	mov    dh,0xcc
  412eeb:	inc    edi
  412eec:	je     0x412e75
  412eee:	into   
  412eef:	xor    esp,edi
  412ef1:	xlat   BYTE PTR ds:[ebx]
  412ef2:	or     esp,edx
  412ef4:	ja     0x412e90
  412ef6:	fidiv  WORD PTR [ecx]
  412ef8:	fsub   DWORD PTR [ebp+0x7d541d6f]
  412efe:	fst    DWORD PTR [ebp-0x22]
  412f01:	repz xchg bx,ax
  412f04:	adc    eax,0xbf0ac912
  412f09:	repz aam 0xe5
  412f0c:	dec    esi
  412f0d:	xor    DWORD PTR [ecx+eiz*1+0x188abe2c],edi
  412f14:	dec    edi
  412f15:	pop    edx
  412f16:	mov    gs,WORD PTR ds:0x4c68f0ed
  412f1c:	push   edx
  412f1d:	stos   BYTE PTR es:[edi],al
  412f1e:	inc    esp
  412f1f:	add    DWORD PTR [eax-0x49],edx
  412f22:	mov    ecx,0xb0954c29
  412f27:	mov    DWORD PTR [edi+0xd56877d],0xa1145ea2
  412f31:	inc    ebp
  412f32:	dec    ecx
  412f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f34:	push   0x69ac4e30
  412f39:	les    eax,FWORD PTR [ebx-0x24]
  412f3c:	inc    ebp
  412f3d:	pop    eax
  412f3e:	loop   0x412ec4
  412f40:	or     bh,bl
  412f42:	aad    0xb8
  412f44:	adc    ch,bh
  412f46:	push   ebp
  412f47:	inc    esi
  412f48:	clc    
  412f49:	lods   al,BYTE PTR ds:[esi]
  412f4a:	aam    0xae
  412f4c:	and    al,0xa7
  412f4e:	in     eax,0x88
  412f50:	cs xchg esi,eax
  412f52:	xor    al,0xf9
  412f54:	hlt    
  412f55:	inc    ecx
  412f56:	aam    0x7b
  412f58:	fst    QWORD PTR [edx-0x80]
  412f5b:	pop    es
  412f5c:	jae    0x412f50
  412f5e:	mov    esi,0x1ce1f55e
  412f63:	test   edi,edi
  412f65:	cwde   
  412f66:	js     0x412f62
  412f68:	stc    
  412f69:	cli    
  412f6a:	leave  
  412f6b:	mov    esi,0x14fca21c
  412f70:	mov    ch,0x34
  412f72:	fdiv   QWORD PTR [edi]
  412f74:	gs loope 0x412f19
  412f77:	clc    
  412f78:	and    ebp,DWORD PTR [esi+eax*2+0x1203048f]
  412f7f:	fcomp  DWORD PTR [edx+0x53]
  412f82:	sub    BYTE PTR [ebx],bl
  412f84:	das    
  412f85:	mov    ebx,ebx
  412f87:	in     eax,0x80
  412f89:	sbb    dl,BYTE PTR [edx+0x28e772e7]
  412f8f:	nop
  412f90:	addr16 std 
  412f92:	xor    BYTE PTR [eax],bh
  412f94:	sbb    ch,bl
  412f96:	out    dx,al
  412f97:	nop
  412f98:	pop    es
  412f99:	rcl    DWORD PTR [esi],1
  412f9b:	mov    ah,0x9c
  412f9d:	push   ebp
  412f9e:	(bad)  
  412f9f:	jne    0x412fdb
  412fa1:	popa   
  412fa2:	or     al,0xc8
  412fa4:	xor    DWORD PTR [ecx],0xc7c5eeda
  412faa:	jo     0x413005
  412fac:	in     al,0xf9
  412fae:	xor    BYTE PTR [ecx+0xef5e942],bl
  412fb4:	cmp    al,0x45
  412fb6:	xchg   ebp,ebx
  412fb8:	ret    
  412fb9:	push   esp
  412fba:	and    ah,BYTE PTR [edx]
  412fbc:	or     al,0x3b
  412fbe:	xchg   edi,eax
  412fbf:	mov    bl,0x89
  412fc1:	adc    dl,BYTE PTR [ecx-0x18]
  412fc4:	xor    eax,DWORD PTR [ebp+0x711e7afc]
  412fca:	aaa    
  412fcb:	aas    
  412fcc:	call   DWORD PTR [ebx]
  412fce:	leave  
  412fcf:	xor    eax,0x1b15b2cb
  412fd4:	call   FWORD PTR [esp+esi*1+0x2b6c0240]
  412fdb:	jo     0x41300a
  412fdd:	push   ds
  412fde:	mov    ch,0xcf
  412fe0:	cmp    dh,ah
  412fe2:	retf   
  412fe3:	pop    eax
  412fe4:	lods   al,BYTE PTR ds:[esi]
  412fe5:	ror    DWORD PTR [ecx],cl
  412fe7:	sub    esp,0xffffffd5
  412fea:	in     al,0xa5
  412fec:	sbb    DWORD PTR [ebx],esi
  412fee:	js     0x412f7e
  412ff0:	imul   ebp,DWORD PTR [esi],0xe15ffde
  412ff6:	bound  esi,QWORD PTR [ebx+0x2ee1a246]
  412ffc:	sti    
  412ffd:	and    bh,al
  412fff:	push   0xa7dfcd29
  413004:	add    cl,BYTE PTR [edx-0x41]
  413007:	mov    ds:0x3b59c55d,al
  41300c:	dec    edi
  41300d:	sti    
  41300e:	sbb    BYTE PTR [edx+0x17],0x48
  413012:	pop    ds
  413013:	add    ebx,DWORD PTR [eax+0x7da13eb8]
  413019:	add    BYTE PTR [ebx+ebx*2+0x31bedbf7],al
  413020:	mov    ecx,0xd4ddd4ae
  413025:	setae  BYTE PTR [edi+0x27]
  413029:	mov    esi,0x58a14f81
  41302e:	arpl   WORD PTR [eax+0x5e],bx
  413031:	or     dl,BYTE PTR ds:0xf1f828fd
  413037:	int3   
  413038:	inc    edx
  413039:	cmp    ecx,edi
  41303b:	int3   
  41303c:	(bad)  
  41303d:	into   
  41303e:	pop    ecx
  41303f:	sbb    BYTE PTR [edi],cl
  413041:	jecxz  0x413012
  413043:	adc    eax,ebp
  413045:	xchg   eax,esp
  413047:	mov    BYTE PTR [ecx],al
  413049:	clc    
  41304a:	ret    0x217c
  41304d:	in     eax,0x51
  41304f:	aas    
  413050:	add    dl,ah
  413052:	sub    al,0x87
  413054:	jae    0x41306a
  413056:	pushf  
  413057:	ret    0x8e2c
  41305a:	shl    BYTE PTR [ecx],cl
  41305c:	push   esp
  41305d:	add    DWORD PTR [ecx-0x30018ee9],ebx
  413063:	sub    bh,0x97
  413066:	sub    eax,0x7179a960
  41306b:	nop
  41306c:	push   cs
  41306d:	mov    ebp,0x8852d076
  413072:	loopne 0x413042
  413074:	ja     0x41303b
  413076:	jo     0x413074
  413078:	cld    
  413079:	and    al,0x5d
  41307b:	enter  0x5384,0x39
  41307f:	push   edx
  413080:	push   ebp
  413081:	into   
  413082:	adc    ebp,DWORD PTR [edx+0x75093d9e]
  413088:	inc    BYTE PTR [esi-0x10461804]
  41308e:	ja     0x4130c6
  413090:	loope  0x4130db
  413092:	retf   
  413093:	jno    0x413058
  413095:	shr    DWORD PTR [eax+0x334777f6],0x18
  41309c:	push   ds
  41309d:	push   ebx
  41309e:	sub    al,0xd2
  4130a0:	cmp    edi,esp
  4130a2:	jo     0x41309c
  4130a4:	jl     0x4130a6
  4130a6:	call   0x323f8e9b
  4130ab:	stos   BYTE PTR es:[edi],al
  4130ac:	ror    ah,1
  4130ae:	into   
  4130af:	(bad)  
  4130b0:	fcomp  DWORD PTR [ebx+0x71]
  4130b3:	adc    DWORD PTR [edi-0x3],edx
  4130b6:	js     0x41310a
  4130b8:	xchg   edi,eax
  4130b9:	xor    ebp,esi
  4130bb:	push   es
  4130bc:	sbb    al,0xcb
  4130be:	mov    DWORD PTR [ecx+0x6fe066ab],esi
  4130c4:	icebp  
  4130c5:	push   ss
  4130c6:	sbb    cl,BYTE PTR [edi+0x5f]
  4130c9:	jle    0x413126
  4130cb:	pop    esp
  4130cc:	pop    edx
  4130cd:	cmp    al,0x7e
  4130cf:	(bad)  
  4130d0:	stos   DWORD PTR es:[edi],eax
  4130d1:	gs push esp
  4130d3:	outs   dx,BYTE PTR ds:[esi]
  4130d4:	mov    edx,0xfd909ee
  4130d9:	rol    BYTE PTR [eax-0x50],1
  4130dc:	jecxz  0x413107
  4130de:	int3   
  4130df:	push   0x60
  4130e1:	leave  
  4130e2:	mov    edx,0xa5898114
  4130e7:	sub    DWORD PTR [ebp+0x26],edx
  4130ea:	push   edx
  4130eb:	fld    QWORD PTR [eax]
  4130ed:	sub    al,0x4c
  4130ef:	xlat   BYTE PTR ds:[ebx]
  4130f0:	outs   dx,BYTE PTR ds:[esi]
  4130f1:	jl     0x41314b
  4130f3:	xor    eax,0x7e42b928
  4130f8:	(bad)  
  4130f9:	call   DWORD PTR [esp+eax*1]
  4130fc:	jns    0x4130f2
  4130fe:	out    dx,al
  4130ff:	xchg   DWORD PTR [ebx+0x50b9e8c0],esp
  413105:	dec    DWORD PTR [eax+0x1]
  413108:	loop   0x4130ab
  41310a:	or     eax,0x3a4eaf23
  41310f:	cs iretw 
  413112:	mov    edi,ebx
  413114:	out    dx,al
  413115:	xchg   esp,eax
  413116:	lahf   
  413117:	lahf   
  413118:	in     al,0x91
  41311a:	mov    dl,0xfa
  41311c:	repz mov ch,0x5e
  41311f:	sub    DWORD PTR [esp+eax*4-0x6248c60b],ecx
  413126:	call   0x1630:0xaa1e1a39
  41312d:	mov    WORD PTR [ecx+ebp*8+0x10],es
  413131:	push   0x29686dc4
  413136:	loop   0x413105
  413138:	add    BYTE PTR [ebp-0x6cdfeec2],0xbd
  41313f:	in     al,dx
  413140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413141:	mov    esp,0xc6ad548
  413146:	inc    edx
  413147:	pop    ebp
  413148:	out    dx,eax
  413149:	(bad)  
  41314b:	lgs    esi,FWORD PTR [esi-0x54]
  41314f:	xor    BYTE PTR [esi-0x2a],0xda
  413153:	adc    eax,0xff1278fb
  413158:	int3   
  413159:	sbb    al,0xff
  41315b:	xor    al,0xf6
  41315d:	push   ss
  41315e:	pop    ss
  41315f:	cmp    esi,DWORD PTR [eax-0x3a]
  413162:	cwde   
  413163:	rcr    DWORD PTR ds:0xe4f04ec1,cl
  413169:	stc    
  41316a:	inc    eax
  41316b:	xchg   ebp,eax
  41316c:	scas   al,BYTE PTR es:[edi]
  41316d:	fadd   st(1),st
  41316f:	jnp    0x4131c0
  413171:	fst    QWORD PTR ds:0x7607addf
  413177:	aam    0x99
  413179:	ss xchg ebx,eax
  41317b:	lock add DWORD PTR [ebp+0x65],edi
  41317f:	cwde   
  413180:	sahf   
  413181:	popa   
  413182:	test   al,0x6
  413184:	fwait
  413185:	inc    ecx
  413186:	mov    esp,0xb656e8bf
  41318b:	pop    esp
  41318c:	ja     0x413121
  41318e:	add    cl,al
  413190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413191:	inc    ecx
  413192:	in     al,0xd
  413194:	in     eax,dx
  413195:	and    DWORD PTR [ecx-0x3c67e71a],ebp
  41319b:	mov    ds:0x3b3f01ea,al
  4131a0:	rcl    DWORD PTR [eax-0x39],0x9c
  4131a4:	mov    edx,0x34935cbe
  4131a9:	inc    ebx
  4131aa:	outs   dx,DWORD PTR ds:[esi]
  4131ab:	inc    esi
  4131ac:	mov    DWORD PTR ds:0x9e448898,ebx
  4131b2:	jb     0x4131b0
  4131b4:	jg     0x4131ff
  4131b6:	les    ebp,FWORD PTR [ecx+ebp*1]
  4131b9:	mov    eax,esi
  4131bb:	std    
  4131bc:	cmp    ch,0xbb
  4131bf:	es sbb al,ch
  4131c2:	jb     0x413205
  4131c4:	sub    esi,ecx
  4131c6:	repnz xchg bp,ax
  4131c9:	lods   eax,DWORD PTR ds:[esi]
  4131ca:	ja     0x413245
  4131cc:	or     al,0xa0
  4131ce:	neg    BYTE PTR [ebx]
  4131d0:	cmc    
  4131d1:	dec    edi
  4131d2:	jge    0x4131a3
  4131d4:	(bad)  
  4131d5:	(bad)  
  4131d6:	add    cl,BYTE PTR [edi]
  4131d8:	pop    esp
  4131d9:	icebp  
  4131da:	icebp  
  4131db:	inc    ebp
  4131dc:	push   eax
  4131dd:	scas   eax,DWORD PTR es:[edi]
  4131de:	pop    edx
  4131df:	xchg   ebp,eax
  4131e0:	xor    eax,0xcee80c1c
  4131e5:	iret   
  4131e6:	imul   eax,DWORD PTR [edi-0x552cbb05],0x4d
  4131ed:	scas   eax,DWORD PTR es:[edi]
  4131ee:	cmp    cl,BYTE PTR [esi-0x3b]
  4131f1:	mov    eax,ds:0x98b2ad26
  4131f6:	jl     0x4131dd
  4131f8:	in     eax,0xe1
  4131fa:	jmp    0x62a0:0x205340e6
  413201:	(bad)  
  413203:	(bad)  
  413204:	sti    
  413205:	and    dl,BYTE PTR [ecx]
  413207:	cwde   
  413208:	sahf   
  413209:	out    dx,eax
  41320a:	dec    esp
  41320b:	xchg   edx,eax
  41320c:	mov    ebp,0x3846ada6
  413211:	or     eax,0xbfd28234
  413216:	dec    ecx
  413217:	jmp    0x413268
  413219:	xor    eax,0xf9c9a890
  41321e:	hlt    
  41321f:	test   BYTE PTR [edx-0x55],cl
  413222:	push   ebp
  413223:	or     al,0x5e
  413225:	add    dh,dh
  413227:	mov    DWORD PTR [edi],esi
  413229:	xor    cl,0xe0
  41322c:	ror    DWORD PTR [ebp-0x4d],cl
  41322f:	(bad)  
  413230:	xchg   ecx,eax
  413231:	repnz cdq 
  413233:	test   ecx,esp
  413235:	ins    BYTE PTR es:[edi],dx
  413236:	xor    DWORD PTR [edi-0x6c],ebx
  413239:	cwde   
  41323a:	xor    bl,BYTE PTR [ecx-0x3eb4582b]
  413240:	hlt    
  413241:	push   ds
  413242:	inc    edx
  413243:	push   esi
  413244:	ins    BYTE PTR es:[edi],dx
  413245:	aam    0xac
  413247:	call   0x51e62f69
  41324c:	sbb    esi,DWORD PTR [edx+0xd]
  41324f:	(bad)  
  413250:	div    DWORD PTR [eax]
  413252:	dec    ebp
  413253:	jg     0x4132b2
  413255:	inc    ecx
  413256:	push   es
  413257:	cs shl ebp,1
  41325a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41325b:	cli    
  41325c:	sbb    DWORD PTR [esi+0x67],esp
  41325f:	push   eax
  413260:	mov    al,cs:0x3f7b152a
  413266:	test   ecx,ecx
  413268:	push   es
  413269:	clc    
  41326a:	faddp  st(1),st
  41326c:	call   0x7c1d:0x669e500c
  413273:	inc    ebx
  413274:	mov    DWORD PTR [esp+eax*2-0x4a],esp
  413278:	aad    0x77
  41327a:	addr16 call 0x2b4c:0x762b55f2
  413282:	mov    edi,0xaf9a2da7
  413287:	test   ecx,edx
  413289:	test   al,0xe4
  41328b:	cmp    esi,ecx
  41328d:	mov    ah,0xa0
  41328f:	out    0xf2,al
  413291:	xchg   edx,eax
  413292:	xchg   DWORD PTR [edx-0x52],esi
  413295:	pop    es
  413296:	adc    eax,0x6fa6e039
  41329b:	lock add al,0x96
  41329e:	mov    fs,WORD PTR [edx]
  4132a0:	mov    DWORD PTR [ecx-0x61],esp
  4132a3:	(bad)  
  4132a4:	mov    DWORD PTR [ebp-0x3133a267],edx
  4132aa:	mov    ecx,0x1e5c73c6
  4132af:	shl    BYTE PTR [eax+ecx*1+0x1],cl
  4132b3:	mov    eax,0x4a9d089c
  4132b8:	lds    ecx,FWORD PTR [esi-0x2c]
  4132bb:	push   ds
  4132bc:	mov    edi,0xd71f6af3
  4132c1:	stos   DWORD PTR es:[edi],eax
  4132c2:	mov    cl,0x73
  4132c4:	les    edx,FWORD PTR [ecx]
  4132c6:	dec    ecx
  4132c7:	pop    ebp
  4132c8:	out    0x25,al
  4132ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cb:	dec    esi
  4132cc:	fcomp  QWORD PTR [eax+0x32]
  4132cf:	push   ebx
  4132d0:	test   DWORD PTR [ebp+0xb],ebp
  4132d3:	jae    0x4132be
  4132d5:	(bad)  
  4132d6:	loopne 0x4132f0
  4132d8:	pop    edx
  4132d9:	les    esi,FWORD PTR [esi]
  4132db:	mov    al,0x24
  4132dd:	mov    ah,0x2a
  4132df:	lods   eax,DWORD PTR ds:[esi]
  4132e0:	mov    dh,BYTE PTR [eax-0x7254b5d8]
  4132e6:	sbb    DWORD PTR [edx],0x65bda953
  4132ec:	pop    es
  4132ed:	cmp    edi,ebp
  4132ef:	push   edi
  4132f0:	lods   eax,DWORD PTR ds:[esi]
  4132f2:	scas   eax,DWORD PTR es:[edi]
  4132f3:	sbb    dh,BYTE PTR [eax-0x4ff540d3]
  4132f9:	sub    al,0x2d
  4132fb:	aam    0x22
  4132fd:	adc    BYTE PTR [edx],bh
  4132ff:	repz push ecx
  413301:	fidivr DWORD PTR [ecx]
  413303:	mov    BYTE PTR [edx+0x4d93fd33],al
  413309:	inc    esi
  41330a:	mov    ebx,0xa24d5ad4
  41330f:	shl    DWORD PTR [ecx-0x7a9ac907],1
  413315:	mov    esp,0x97791471
  41331a:	out    0xb9,al
  41331c:	cmp    edx,DWORD PTR [eax-0x6e]
  41331f:	mov    ch,0x70
  413321:	inc    ebx
  413322:	(bad)  
  413324:	mov    WORD PTR [ebx-0x6a],?
  413327:	fcom   DWORD PTR [ebx-0x3bf8caec]
  41332d:	sub    BYTE PTR [eax+0x5a],dl
  413330:	xchg   ebx,eax
  413331:	push   esp
  413332:	mov    dl,0x14
  413334:	loopne 0x4132c9
  413336:	pop    ss
  413337:	fild   QWORD PTR [edx+edx*1-0x3c131bc6]
  41333e:	int    0x17
  413340:	xor    al,0x65
  413342:	pop    esi
  413343:	pop    edi
  413344:	add    eax,0x2be3a00c
  413349:	dec    esi
  41334a:	jmp    0x413394
  41334c:	aam    0xb4
  41334e:	das    
  41334f:	push   edx
  413350:	jg     0x41331f
  413352:	adc    al,0x8d
  413354:	inc    edx
  413355:	sahf   
  413356:	xchg   esp,eax
  413357:	and    eax,0xc67265c6
  41335c:	call   0x808a:0x79e37633
  413363:	xor    eax,0x1326a145
  413368:	xor    DWORD PTR [ebx+ecx*2+0x50],esi
  41336c:	and    al,0x27
  41336e:	sahf   
  41336f:	cdq    
  413370:	mov    cl,0x41
  413372:	mov    ch,0xbd
  413374:	mov    ecx,DWORD PTR [edi]
  413376:	pop    ebp
  413377:	pop    ds
  413378:	js     0x4132fa
  41337a:	inc    esi
  41337b:	mov    ah,0xba
  41337d:	xlat   BYTE PTR ds:[ebx]
  41337e:	lods   eax,DWORD PTR ds:[esi]
  41337f:	sahf   
  413380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413381:	push   ebp
  413382:	jno    0x413354
  413384:	mov    ecx,0x66224472
  413389:	xchg   ebp,eax
  41338a:	jae    0x4133dd
  41338c:	jmp    0x3150:0x8ee51f55
  413393:	dec    edx
  413394:	adc    DWORD PTR [edx+0x1],0x3977c5ec
  41339b:	push   ebx
  41339c:	faddp  st(7),st
  41339e:	aam    0x2a
  4133a0:	ficom  DWORD PTR [ebp-0x56d548f6]
  4133a6:	add    DWORD PTR [edi+0x223a81c9],ebp
  4133ac:	pop    esi
  4133ad:	adc    ch,BYTE PTR [edi]
  4133af:	aad    0xb4
  4133b1:	(bad)  
  4133b2:	scas   al,BYTE PTR es:[edi]
  4133b3:	ret    0xa4b7
  4133b6:	push   edx
  4133b7:	(bad)  
  4133b8:	bound  edi,QWORD PTR [eax+0x78d006cc]
  4133be:	xchg   esp,eax
  4133bf:	lods   eax,DWORD PTR ds:[esi]
  4133c0:	or     DWORD PTR es:[ecx+0x3],ecx
  4133c4:	push   ss
  4133c5:	mov    ecx,0x96c8942c
  4133ca:	push   esi
  4133cb:	push   ss
  4133cc:	addr16 out dx,al
  4133ce:	jmp    0x4133be
  4133d0:	xor    ebx,0x59
  4133d3:	aam    0x97
  4133d5:	stc    
  4133d6:	dec    ecx
  4133d7:	sbb    al,0xf9
  4133d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133da:	clc    
  4133db:	xchg   ch,dl
  4133dd:	fcom   DWORD PTR [esi+0x5f]
  4133e0:	pop    edx
  4133e1:	rcl    DWORD PTR [edi-0x60],0x11
  4133e5:	push   cs
  4133e6:	cld    
  4133e7:	retf   0x135d
  4133ea:	inc    edi
  4133eb:	out    dx,al
  4133ec:	gs xchg esp,eax
  4133ee:	jne    0x413387
  4133f0:	pop    edi
  4133f1:	sub    eax,0xd1a8e7a6
  4133f6:	das    
  4133f7:	js     0x413473
  4133f9:	mov    eax,0x18957da7
  4133fe:	adc    BYTE PTR [eax+eax*8],cl
  413401:	aaa    
  413402:	int3   
  413403:	mov    ch,0x8f
  413405:	adc    DWORD PTR [ebx-0x4c1d6b1d],edx
  41340b:	push   edx
  41340c:	cmovl  esi,esp
  41340f:	scas   al,BYTE PTR es:[edi]
  413410:	or     ch,al
  413412:	push   0xffffffa4
  413414:	out    dx,al
  413415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413416:	mov    ebx,0x73afee4e
  41341b:	jl     0x41343d
  41341d:	and    esp,DWORD PTR [esi+ecx*2-0x6692fb15]
  413424:	cmp    BYTE PTR [eax-0x6d],0x21
  413428:	inc    esi
  413429:	sti    
  41342a:	add    eax,0x32fc9579
  41342f:	fistp  WORD PTR ds:0xe97144a7
  413435:	pop    es
  413436:	or     cl,cl
  413438:	rcl    BYTE PTR [ebp-0x3],0x5b
  41343c:	jmp    0xcbcd:0x535c68e2
  413443:	shr    BYTE PTR [eax-0x31],0x40
  413447:	retf   
  413448:	add    BYTE PTR [ebp-0x1f],ch
  41344b:	jecxz  0x413431
  41344d:	pop    ss
  41344e:	xor    BYTE PTR [ebp+0x28],ch
  413451:	ja     0x4134c1
  413453:	xor    DWORD PTR [ebx-0x469b251d],eax
  413459:	sub    DWORD PTR [edi],edx
  41345b:	xchg   esi,eax
  41345c:	or     BYTE PTR [esi-0x57f0d4f9],dh
  413462:	mov    edi,0x43e6803
  413467:	pop    ecx
  413468:	sbb    ebp,esp
  41346a:	fnstcw WORD PTR [eax-0x56]
  41346d:	add    BYTE PTR [ebx-0x64ea3c65],ch
  413473:	xchg   esi,eax
  413474:	jmp    0x92a51476
  413479:	icebp  
  41347a:	mov    al,ds:0x5494153b
  41347f:	mov    ebp,0x9b5816e8
  413484:	jns    0x4134b0
  413486:	mov    bh,0x7c
  413488:	loopne 0x4134ef
  41348a:	add    DWORD PTR [esi-0x30c4fb5a],edx
  413490:	clc    
  413491:	or     eax,0x871fee07
  413496:	mov    DWORD PTR [ecx],ecx
  413498:	call   0xe3d2:0x6df601a
  41349f:	xchg   BYTE PTR [edx],dh
  4134a1:	sbb    ch,0xec
  4134a4:	data16 (bad) 
  4134a6:	addr16 movsx esp,bp
  4134aa:	imul   eax,edi,0xffffffee
  4134ad:	ss push esi
  4134af:	ret    0xf2c7
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	pop    ecx
  4134b5:	mov    ch,BYTE PTR [edx-0x4b]
  4134b8:	loope  0x4134af
  4134ba:	push   ds
  4134bb:	call   FWORD PTR [edi-0x23]
  4134be:	dec    edi
  4134bf:	mov    cl,BYTE PTR ds:0x94a7dad1
  4134c5:	cli    
  4134c6:	call   0x8644:0xa77bb880
  4134cd:	xchg   edi,eax
  4134ce:	ror    DWORD PTR [ecx+0x56],1
  4134d1:	ret    0xd9f
  4134d4:	ds into 
  4134d6:	jne    0x41346d
  4134d8:	mov    eax,0x55804bd5
  4134dd:	jp     0x413460
  4134df:	adc    eax,0xe8e965ea
  4134e4:	arpl   sp,bx
  4134e6:	out    0x9e,al
  4134e8:	enter  0xe17c,0x36
  4134ec:	mov    ebp,0x83876607
  4134f1:	jecxz  0x413519
  4134f3:	sub    esi,DWORD PTR [ebp+0x12]
  4134f6:	adc    eax,0x94ca3e80
  4134fb:	push   eax
  4134fc:	add    eax,DWORD PTR [edx-0x1822ad8c]
  413502:	xchg   BYTE PTR [edi-0x3c420ea6],ch
  413508:	inc    ebp
  413509:	lds    edi,FWORD PTR [ebx+esi*1-0x1f3f5aca]
  413510:	adc    BYTE PTR [ebp+0x4a],bh
  413513:	mov    eax,0x39b25e27
  413518:	dec    esp
  413519:	adc    esp,ebx
  41351b:	cli    
  41351c:	mov    BYTE PTR [edi+edi*4],al
  41351f:	push   ds
  413520:	mov    DWORD PTR [eax+0x5f980dfc],edi
  413526:	jge    0x413588
  413528:	jbe    0x41354e
  41352a:	pop    edx
  41352b:	push   ds
  41352c:	mov    BYTE PTR [ebx-0x57fd1fd],bl
  413532:	loop   0x4134ba
  413534:	sahf   
  413535:	inc    BYTE PTR [edi+ebp*1+0x182d561d]
  41353c:	pop    ebx
  41353d:	or     eax,0xdb836b65
  413542:	inc    esi
  413543:	(bad)  
  413544:	stos   BYTE PTR es:[edi],al
  413545:	cs scas eax,DWORD PTR es:[edi]
  413547:	cmp    DWORD PTR [eax],esi
  413549:	add    BYTE PTR [esi],ah
  41354b:	ins    DWORD PTR es:[edi],dx
  41354c:	jmp    0x4135a6
  41354e:	mov    ebx,0x17d277ed
  413553:	jp     0x413595
  413555:	out    0x40,al
  413557:	test   eax,0x7d2718dd
  41355c:	ds ret 
  41355e:	outs   dx,BYTE PTR ds:[esi]
  41355f:	push   esp
  413560:	dec    edx
  413561:	int    0x50
  413563:	jmp    0x16945ff5
  413568:	mov    esp,0xe76913fd
  41356d:	sub    eax,DWORD PTR [esp+ebx*4-0x3]
  413571:	mov    ah,0x40
  413573:	inc    ecx
  413574:	mov    bh,0x3a
  413576:	pop    edx
  413577:	ins    DWORD PTR es:[edi],dx
  413578:	rol    BYTE PTR [ebx+edi*8-0x4092a9a3],cl
  41357f:	loop   0x413571
  413581:	frstor [ebx+ebp*1+0x37]
  413585:	es push ebp
  413587:	xchg   ecx,eax
  413588:	jmp    0x413599
  41358a:	test   BYTE PTR ds:0x34e796d1,cl
  413590:	inc    ebp
  413591:	jno    0x4135af
  413593:	dec    edx
  413594:	mov    al,BYTE PTR [edi-0x13dba304]
  41359a:	loop   0x41358b
  41359c:	sbb    BYTE PTR [edi-0x69],al
  41359f:	(bad)  
  4135a0:	jmp    FWORD PTR [eax]
  4135a2:	enter  0xf1df,0x82
  4135a6:	in     eax,0x69
  4135a8:	mov    eax,0x368b754
  4135ad:	or     esp,ebx
  4135af:	mov    ebx,0x4294708d
  4135b4:	push   es
  4135b5:	mov    dh,0x5a
  4135b7:	loopne 0x4135db
  4135b9:	lock xchg edx,eax
  4135bb:	in     eax,0x41
  4135bd:	ja     0x4135fc
  4135bf:	lahf   
  4135c0:	or     al,0xea
  4135c2:	cli    
  4135c3:	jmp    0xa3a066d
  4135c8:	out    0xb5,al
  4135ca:	add    edi,ecx
  4135cc:	jp     0x413605
  4135ce:	or     al,0x23
  4135d0:	add    esp,ebp
  4135d2:	mov    ebx,0xc82e0450
  4135d7:	cs pavgw mm5,mm7
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	ret    0xd176
  4135df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e0:	(bad)  
  4135e1:	fmulp  st(3),st
  4135e3:	mov    ebx,0xbda32ed5
  4135e8:	add    al,0x46
  4135ea:	je     0x4135cb
  4135ec:	sbb    ecx,edi
  4135ee:	inc    ebp
  4135ef:	sub    BYTE PTR [esi-0x22],bh
  4135f2:	fldenv [edx-0x6b3a8c8e]
  4135f8:	rol    DWORD PTR [ecx+0x2c],1
  4135fb:	out    dx,al
  4135fc:	rcr    BYTE PTR [edi+ecx*8],0x9a
  413600:	xchg   ebp,eax
  413601:	(bad)  
  413602:	jg     0x4135b2
  413604:	pushf  
  413605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413606:	popa   
  413607:	mov    esi,0x9c34f238
  41360c:	dec    ecx
  41360d:	cmp    dh,ah
  41360f:	in     eax,0x2e
  413611:	je     0x41366d
  413613:	cmovg  esp,DWORD PTR ds:0xb24b1be6
  41361a:	scas   al,BYTE PTR es:[edi]
  41361b:	and    ah,ah
  41361d:	jbe    0x413679
  41361f:	scas   al,BYTE PTR es:[edi]
  413620:	jo     0x413613
  413622:	arpl   WORD PTR [bp+di-0x61],bp
  413626:	mov    esp,0x9034b80a
  41362b:	(bad)  
  41362c:	rol    DWORD PTR [eax],cl
  41362e:	pop    ss
  41362f:	cli    
  413630:	test   eax,0x1d1d8994
  413635:	sub    DWORD PTR [edi-0x3d7cddd0],0x887cc704
  41363f:	jns    0x4135db
  413641:	fnstcw WORD PTR [ecx+0x5f4f4bab]
  413647:	scas   al,BYTE PTR es:[edi]
  413648:	mov    DWORD PTR [edi+0x23],edi
  41364b:	(bad)  
  41364c:	mov    fs,edx
  41364e:	rcl    DWORD PTR [ebp+0x8],0x2c
  413652:	push   eax
  413653:	aaa    
  413654:	aas    
  413655:	lahf   
  413656:	inc    eax
  413657:	shr    edi,1
  413659:	es inc ebx
  41365b:	dec    ebp
  41365c:	test   esp,ebp
  41365e:	js     0x41367d
  413660:	dec    edx
  413661:	fidiv  WORD PTR [edx]
  413663:	cwde   
  413664:	ja     0x413688
  413666:	xor    al,0xfa
  413668:	(bad)  
  413669:	test   al,0x98
  41366b:	mov    dl,0x1b
  41366d:	mov    ecx,0x6d41c676
  413672:	(bad)  
  413673:	xor    ebx,esp
  413675:	inc    ebx
  413676:	sbb    edi,DWORD PTR [eax+eax*4]
  413679:	sbb    al,0x6
  41367b:	pop    edi
  41367c:	sbb    esi,esp
  41367e:	mov    dh,0x64
  413680:	fild   WORD PTR [edi]
  413682:	pop    edi
  413683:	mov    ds:0xe2c21b0,al
  413688:	mov    dl,0x7f
  41368a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41368b:	bound  edi,QWORD PTR [edi+edx*8+0x3ddb7de6]
  413692:	iret   
  413693:	(bad)  
  413694:	push   0x9884eee
  413699:	and    al,0xea
  41369b:	shl    cl,0x56
  41369e:	add    DWORD PTR [eax+0x1c],ecx
  4136a1:	shl    BYTE PTR [ebx],0x66
  4136a4:	fst    DWORD PTR [esi-0x17914ed8]
  4136aa:	xor    eax,0xc444a07d
  4136af:	sub    al,0x25
  4136b1:	xchg   ebp,eax
  4136b2:	lahf   
  4136b3:	fsub   QWORD PTR ds:0x57e06e67
  4136b9:	test   DWORD PTR [edi-0x34def057],0xc7cfb634
  4136c3:	ja     0x413736
  4136c5:	data16 sahf 
  4136c7:	push   ss
  4136c8:	adc    esi,DWORD PTR [esi]
  4136ca:	ins    BYTE PTR es:[edi],dx
  4136cb:	shr    DWORD PTR [esi],0x6e
  4136ce:	jmp    0x965996c9
  4136d3:	mov    eax,0xe99d3b54
  4136d8:	sbb    ebp,DWORD PTR [ebx]
  4136da:	cs stos DWORD PTR es:[edi],eax
  4136dc:	dec    eax
  4136dd:	xchg   BYTE PTR [ebp+0x64712809],ch
  4136e3:	and    eax,0xc468c5f3
  4136e8:	pusha  
  4136e9:	int3   
  4136ea:	xchg   ecx,eax
  4136eb:	mov    al,0x33
  4136ed:	xchg   esi,eax
  4136ee:	push   ebx
  4136ef:	test   eax,esi
  4136f1:	xor    al,0xfa
  4136f3:	scas   al,BYTE PTR es:[edi]
  4136f4:	mov    edi,0x7a41e8b4
  4136f9:	cmp    BYTE PTR [edi-0x76],dl
  4136fc:	cmp    esp,DWORD PTR [esi+eiz*1]
  4136ff:	cmp    ch,BYTE PTR [di]
  413702:	icebp  
  413703:	pop    ds
  413704:	sub    DWORD PTR [edi],ebp
  413706:	cmp    edx,DWORD PTR [ebx]
  413708:	mov    al,ds:0x16905b05
  41370d:	inc    esi
  41370e:	out    0x80,eax
  413710:	clc    
  413711:	loope  0x4136f8
  413713:	test   ebx,0x73811a38
  413719:	dec    ebp
  41371a:	cmp    BYTE PTR [ebx-0x6ca099c7],0x6f
  413721:	cmp    ah,BYTE PTR [edi]
  413723:	mov    edx,0x8e8972d2
  413728:	(bad)  [eax]
  41372a:	(bad)  
  41372b:	or     DWORD PTR [esi-0x5944a12e],eax
  413731:	(bad)  
  413732:	mov    edx,0x7de07d62
  413737:	into   
  413738:	fistp  DWORD PTR ds:[esi-0x55]
  41373c:	ror    ch,0x87
  41373f:	repz mov eax,0xd81aafaa
  413745:	aas    
  413746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413747:	cmp    edi,0xffffffdd
  41374a:	fsubr  DWORD PTR [ecx+eiz*2+0x103d2426]
  413751:	stc    
  413752:	xor    dl,BYTE PTR [ecx+edx*8-0x32]
  413756:	in     al,0x6d
  413758:	pushf  
  413759:	(bad)  
  41375a:	retf   0xb18c
  41375d:	mov    ebp,DWORD PTR [ebx+ebx*4+0x7e]
  413761:	loopne 0x4137af
  413763:	pop    ebx
  413764:	or     BYTE PTR [edi+0x59],ah
  413767:	stos   DWORD PTR es:[edi],eax
  413768:	push   esi
  413769:	ret    0xb8e3
  41376c:	je     0x413715
  41376e:	push   edi
  41376f:	push   edi
  413770:	xchg   esi,eax
  413771:	jmp    0x3183:0xcc85ae07
  413778:	aad    0x16
  41377a:	in     eax,0x5b
  41377c:	pop    eax
  41377d:	vpcmov ymm0,ymm7,ymm6,YMMWORD PTR [edi+0x728df647]
  413787:	jno    0x413736
  413789:	stc    
  41378a:	call   0x31cb:0x3d754e8a
  413791:	call   0x5317:0x636c485e
  413798:	jle    0x413737
  41379a:	push   esp
  41379b:	loope  0x4137be
  41379d:	xor    al,0xf
  41379f:	sti    
  4137a0:	cmp    edi,DWORD PTR [edx+0x3a]
  4137a3:	jp     0x413822
  4137a5:	outs   dx,BYTE PTR ds:[esi]
  4137a6:	aaa    
  4137a7:	push   ecx
  4137a8:	push   DWORD PTR [eax+0x296a84eb]
  4137ae:	adc    al,0x7e
  4137b0:	fidiv  DWORD PTR [edi+0x76d09b59]
  4137b6:	and    eax,DWORD PTR [edx]
  4137b8:	mov    ebp,0xe1f0557d
  4137bd:	fcomp  QWORD PTR [ebx-0x21]
  4137c0:	and    DWORD PTR [esi],0x3492358f
  4137c6:	das    
  4137c7:	fdiv   DWORD PTR [eax+0x6f]
  4137ca:	dec    edx
  4137cb:	inc    ecx
  4137cc:	xor    BYTE PTR [esi-0x637bc702],0x16
  4137d3:	mov    al,BYTE PTR [eax+0x3f9a3c7f]
  4137d9:	mov    al,ds:0x6e84022f
  4137de:	inc    edi
  4137df:	and    ebp,edx
  4137e1:	sbb    al,0xb6
  4137e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e4:	xor    DWORD PTR [edx],edi
  4137e6:	mov    edx,0x8c92ccd3
  4137eb:	cmp    ebx,DWORD PTR [ebp+0x9]
  4137ee:	cmp    BYTE PTR [esi],dl
  4137f0:	fcomp  QWORD PTR [ebx-0x3b]
  4137f3:	outs   dx,BYTE PTR ds:[esi]
  4137f4:	sbb    edi,eax
  4137f6:	cmp    BYTE PTR [ebx-0x4c],ch
  4137f9:	pushf  
  4137fa:	pusha  
  4137fb:	clc    
  4137fc:	loope  0x4137a7
  4137fe:	fnstcw WORD PTR [esi-0x77]
  413801:	jmp    0x232885ce
  413806:	bound  eax,QWORD PTR [edx+0x57d14b12]
  41380c:	arpl   WORD PTR [edi-0xc],bx
  41380f:	jnp    0x413847
  413811:	aam    0x2f
  413813:	sub    DWORD PTR [edi-0x4637dd8a],esp
  413819:	mov    esi,0xd264100c
  41381e:	in     al,0x32
  413820:	ins    DWORD PTR es:[edi],dx
  413821:	mov    ss,ecx
  413823:	clc    
  413824:	aad    0x54
  413826:	jnp    0x4137f4
  413828:	jge    0x41388d
  41382a:	inc    edi
  41382b:	pop    edi
  41382c:	and    DWORD PTR [ebx+0x6d],esp
  41382f:	sbb    DWORD PTR [ecx],ecx
  413831:	loopne 0x413865
  413833:	jp     0x41380c
  413835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413836:	add    DWORD PTR [eax+ebx*1],ebp
  413839:	and    ah,BYTE PTR [ecx-0x80]
  41383c:	jmp    0xd5fd:0x6c6944a2
  413843:	adc    eax,0x341382c1
  413848:	or     eax,0xdd923a3a
  41384d:	imul   ebx,DWORD PTR [eax+0x49ac6ec3],0xd1ee1b25
  413857:	popa   
  413858:	pop    ecx
  413859:	mov    eax,DWORD PTR [edx-0x35457244]
  41385f:	push   es
  413860:	lods   al,BYTE PTR ds:[esi]
  413861:	or     DWORD PTR [edx*8-0x4d0f9eb],edi
  413868:	into   
  413869:	pop    eax
  41386a:	retf   
  41386b:	fsubr  st,st(5)
  41386d:	inc    edx
  41386e:	xchg   edi,eax
  41386f:	aad    0xa5
  413871:	cli    
  413872:	mov    dh,0x15
  413874:	stos   DWORD PTR es:[edi],eax
  413875:	xchg   edx,eax
  413876:	in     al,0x80
  413878:	xchg   BYTE PTR [esi+0x38852859],cl
  41387e:	jmp    0x413868
  413880:	jmp    0xf0fc:0xb61eb414
  413887:	mov    al,0xa3
  413889:	adc    BYTE PTR [ebx],dl
  41388b:	mov    dh,0xeb
  41388d:	cld    
  41388e:	mov    cl,0xf2
  413890:	in     eax,0xea
  413892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413893:	std    
  413894:	push   ecx
  413895:	pushf  
  413896:	adc    al,0x3c
  413898:	(bad)  
  413899:	cmp    al,0xb7
  41389b:	(bad)  
  41389c:	adc    BYTE PTR [ebx+0x3945ba07],0xfd
  4138a3:	add    al,0x67
  4138a5:	inc    edx
  4138a6:	sti    
  4138a7:	add    BYTE PTR [ecx-0x4836617a],bh
  4138ad:	in     eax,0xda
  4138af:	push   0x2c
  4138b1:	pop    esi
  4138b2:	push   cs
  4138b3:	test   BYTE PTR [edi],bh
  4138b5:	aaa    
  4138b6:	jne    0x413858
  4138b8:	and    ch,BYTE PTR [ebp-0x60]
  4138bb:	xchg   BYTE PTR [edx-0x4a],bh
  4138be:	dec    edi
  4138bf:	movd   edi,mm2
  4138c2:	popf   
  4138c3:	push   ss
  4138c4:	inc    ecx
  4138c5:	pop    eax
  4138c6:	mov    cl,0xd2
  4138c8:	fs repz jbe 0x41392b
  4138cc:	lock mov BYTE PTR [edx+0x32],al
  4138d0:	dec    edi
  4138d1:	shl    esp,1
  4138d3:	aas    
  4138d4:	fsub   QWORD PTR [edi+0x510747f0]
  4138da:	add    ebp,DWORD PTR [ebp-0x19]
  4138dd:	pop    edx
  4138de:	adc    al,BYTE PTR ss:[edx+ebx*2]
  4138e2:	xor    dh,dl
  4138e4:	call   DWORD PTR [edi]
  4138e6:	scas   al,BYTE PTR es:[edi]
  4138e7:	cld    
  4138e8:	lods   eax,DWORD PTR es:[esi]
  4138ea:	jo     0x413950
  4138ec:	pop    edi
  4138ed:	cmp    al,0xb6
  4138ef:	pop    esp
  4138f0:	push   edx
  4138f1:	jo     0x4138f8
  4138f3:	sub    ebp,DWORD PTR [ebp+0x3a6bc3ec]
  4138f9:	or     DWORD PTR [ebp-0x6a54b6f1],ebx
  4138ff:	sbb    al,0x45
  413901:	outs   dx,DWORD PTR ds:[esi]
  413902:	push   ds
  413903:	(bad)  
  413904:	(bad)  
  413906:	and    DWORD PTR [eax],edi
  413908:	dec    esi
  413909:	popa   
  41390a:	pop    ebp
  41390b:	je     0x413933
  41390d:	dec    ebx
  41390e:	jbe    0x41390c
  413910:	retf   0xdae0
  413913:	inc    ebx
  413914:	mov    bh,0x91
  413916:	pop    ebx
  413917:	xchg   ebx,eax
  413918:	pop    ebx
  413919:	sub    al,0x7e
  41391b:	jbe    0x41390d
  41391d:	in     al,0x6e
  41391f:	jmp    0x3f54c17f
  413924:	or     al,0x2a
  413926:	mov    cl,0xbf
  413928:	lods   eax,DWORD PTR ds:[esi]
  413929:	test   DWORD PTR [edx-0x6b],ecx
  41392c:	test   eax,0xc90e0654
  413931:	or     ebp,DWORD PTR [esi]
  413933:	(bad)  
  413934:	fistp  DWORD PTR [esi+ecx*1-0x15]
  413938:	call   esi
  41393a:	sti    
  41393b:	xchg   ebx,eax
  41393c:	addr16 sub edx,0x1d06dc5
  413943:	(bad)  
  413944:	pop    edi
  413945:	(bad)  
  413946:	bound  edi,QWORD PTR [edx-0x38]
  413949:	sub    eax,0xae7ed218
  41394e:	sub    dl,BYTE PTR [ebp+0xd]
  413951:	out    0x45,al
  413953:	add    BYTE PTR [esi-0x5],al
  413956:	xor    DWORD PTR [ebp+0x49626c7a],edi
  41395c:	push   esp
  41395d:	cmp    dh,BYTE PTR [edi-0x8fba18b]
  413963:	stos   BYTE PTR es:[edi],al
  413964:	and    eax,0xf0f6fc17
  413969:	ja     0x413958
  41396b:	xchg   ebx,eax
  41396c:	inc    eax
  41396d:	jns    0x413999
  41396f:	daa    
  413970:	mov    bl,0x8c
  413972:	xor    BYTE PTR [edx+0x6d],ah
  413975:	ror    BYTE PTR [ecx-0x2588ca4f],1
  41397b:	(bad)  
  41397c:	adc    edx,ebp
  41397e:	mov    BYTE PTR [ebx+0x6a],0x8a
  413982:	daa    
  413983:	sbb    eax,0x55990c0b
  413988:	nop
  413989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398a:	adc    dh,BYTE PTR [ecx-0x2a717620]
  413990:	add    bh,BYTE PTR [edx]
  413992:	xor    BYTE PTR [ecx-0x47c911b9],bl
  413998:	ret    
  413999:	mov    eax,0x2f69b77b
  41399e:	or     eax,0x7d8dc9b7
  4139a3:	jae    0x413a19
  4139a5:	pop    ebp
  4139a6:	xor    esi,ebp
  4139a8:	imul   esi,esi,0x6
  4139ab:	xchg   ebx,eax
  4139ac:	jmp    0x974c:0x6648f9a
  4139b3:	popf   
  4139b4:	outs   dx,DWORD PTR ds:[esi]
  4139b5:	push   edi
  4139b6:	cdq    
  4139b7:	add    esi,DWORD PTR [bp+si+0x43ed]
  4139bc:	mov    al,ds:0xa80b81b4
  4139c1:	add    bl,BYTE PTR [edi+eiz*1-0x705054a7]
  4139c8:	add    DWORD PTR [ecx+0x4e],edi
  4139cb:	fwait
  4139cc:	out    0xc9,al
  4139ce:	add    al,0xf4
  4139d0:	jle    0x4139f0
  4139d2:	dec    edx
  4139d3:	dec    edi
  4139d4:	jnp    0x413a17
  4139d6:	sbb    ecx,DWORD PTR [ebx]
  4139d8:	mov    bh,0x3
  4139da:	outs   dx,BYTE PTR ds:[esi]
  4139db:	fisttp QWORD PTR [esi]
  4139dd:	push   0xf30327a0
  4139e2:	sub    BYTE PTR [eax-0x3f],bh
  4139e5:	ins    BYTE PTR es:[edi],dx
  4139e6:	sub    eax,0x855efab5
  4139eb:	mov    cl,0x38
  4139ed:	xchg   DWORD PTR [eax],ebx
  4139ef:	ds pop ss
  4139f1:	add    ebx,0x96dd5a5b
  4139f7:	add    DWORD PTR [ecx+edi*2],edx
  4139fa:	xchg   ecx,eax
  4139fb:	das    
  4139fc:	ror    DWORD PTR [esi+0xbdb74a8],cl
  413a02:	push   ebx
  413a03:	jmp    0x413995
  413a05:	inc    ebp
  413a06:	or     DWORD PTR [edx-0x36402323],esi
  413a0c:	loope  0x413a54
  413a0e:	dec    ebp
  413a0f:	or     DWORD PTR [eax-0x56e86a99],edx
  413a15:	jae    0x413a26
  413a17:	inc    edi
  413a18:	lock xchg DWORD PTR [esi-0x74],edx
  413a1c:	mov    cl,0x16
  413a1e:	jno    0x413a71
  413a20:	push   ss
  413a21:	out    dx,al
  413a22:	in     al,dx
  413a23:	jmp    0x8da088c5
  413a28:	fbld   TBYTE PTR [eax]
  413a2a:	jecxz  0x413a83
  413a2c:	out    0xc2,al
  413a2e:	pop    edx
  413a2f:	icebp  
  413a30:	fisttp WORD PTR [ebp+0x7a97f0a0]
  413a36:	lock sbb BYTE PTR [esi],0x75
  413a3a:	cmp    al,0xe1
  413a3c:	shl    eax,cl
  413a3e:	fld    QWORD PTR [ebx+0x41]
  413a41:	mov    esp,0x2c13d522
  413a46:	mov    ds:0x301a396a,al
  413a4b:	xor    bh,0xed
  413a4e:	int3   
  413a4f:	ja     0x4139d9
  413a51:	ja     0x4139f2
  413a53:	push   ebp
  413a54:	add    DWORD PTR [edx-0x57457bfe],ecx
  413a5a:	mov    ?,WORD PTR [edx+0x15]
  413a5d:	inc    ebp
  413a5e:	push   0x35
  413a60:	xchg   ebp,eax
  413a61:	push   esp
  413a62:	sub    eax,0x904cd710
  413a67:	shl    BYTE PTR [edi],1
  413a69:	cmp    cl,bl
  413a6b:	push   esp
  413a6c:	fwait
  413a6d:	inc    eax
  413a6e:	test   eax,0xfb32fb50
  413a73:	xor    eax,0xb15d75a0
  413a78:	mov    ds:0xe3ba7461,al
  413a7d:	xchg   bl,ah
  413a7f:	pop    esi
  413a80:	nop
  413a81:	retf   
  413a82:	scas   eax,DWORD PTR es:[di]
  413a84:	pop    ebx
  413a85:	stc    
  413a86:	sub    bl,0x6e
  413a89:	sbb    ah,bh
  413a8b:	or     al,0x2f
  413a8d:	jno    0x413ab8
  413a8f:	pop    edi
  413a90:	adc    al,0xd
  413a92:	xchg   edi,eax
  413a93:	pushf  
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	lds    ebp,FWORD PTR [edx+0x0]
  413a98:	adc    eax,0x983eaa5e
  413a9d:	and    BYTE PTR [ebx+0x5c],cl
  413aa0:	push   edi
  413aa1:	hlt    
  413aa2:	mov    cl,0x57
  413aa4:	das    
  413aa5:	loope  0x413a55
  413aa7:	iret   
  413aa8:	aad    0x91
  413aaa:	or     al,0x4f
  413aac:	pop    ecx
  413aad:	mov    ebp,0x6655555a
  413ab2:	dec    BYTE PTR [edx*8+0x50596215]
  413ab9:	ss daa 
  413abb:	xor    al,0x45
  413abd:	pop    ebx
  413abe:	cs xchg ecx,eax
  413ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ac1:	dec    ebx
  413ac2:	pop    ebp
  413ac3:	mov    ds:0xf07ab4dc,al
  413ac8:	pop    esp
  413ac9:	mov    bl,0x4b
  413acb:	xlat   BYTE PTR ds:[ebx]
  413acc:	mov    al,0x79
  413ace:	in     al,0xe2
  413ad0:	lods   al,BYTE PTR ds:[esi]
  413ad1:	and    al,0x16
  413ad3:	out    0x2,al
  413ad5:	push   eax
  413ad6:	xor    DWORD PTR [ebx-0x5d27cb41],eax
  413adc:	(bad)  
  413add:	ss inc cx
  413ae0:	xor    DWORD PTR [edi],ebp
  413ae2:	mov    ecx,0x55abbb33
  413ae7:	nop
  413ae8:	mov    bl,0x5e
  413aea:	in     al,dx
  413aeb:	or     DWORD PTR [edx-0x59fa2608],0xffffff82
  413af2:	xchg   ebp,eax
  413af3:	cmp    DWORD PTR [ebx+0x34],ebp
  413af6:	(bad)  [eax]
  413af8:	in     eax,0xa7
  413afa:	(bad)  
  413afb:	xchg   edx,eax
  413afc:	and    ch,ah
  413afe:	hlt    
  413aff:	sub    eax,0x5ba3563
  413b04:	int3   
  413b05:	int3   
  413b06:	add    al,0xc2
  413b08:	or     bl,dl
  413b0a:	pop    es
  413b0b:	out    0xd6,eax
  413b0d:	pop    ss
  413b0e:	xor    DWORD PTR [ebp+0x20],edx
  413b11:	add    BYTE PTR [edx+0x70],0xf1
  413b15:	mov    ch,0x8a
  413b17:	inc    ebx
  413b18:	mov    BYTE PTR ds:0x649fe347,dl
  413b1e:	push   ecx
  413b1f:	les    ebp,FWORD PTR fs:[esi]
  413b22:	mov    ecx,0x69f2a95a
  413b27:	adc    DWORD PTR [esi+0x39],ebp
  413b2a:	mov    edx,0x6d099595
  413b2f:	ret    0x3156
  413b32:	push   edx
  413b33:	nop
  413b34:	adc    dh,0xdf
  413b37:	or     bh,BYTE PTR [edx-0x620d6d53]
  413b3d:	or     al,0x1c
  413b3f:	mov    ebx,0xab425a88
  413b44:	into   
  413b45:	int    0x5c
  413b47:	cwde   
  413b48:	aaa    
  413b49:	inc    esi
  413b4a:	push   esp
  413b4b:	cmc    
  413b4c:	fcom   QWORD PTR [ebx]
  413b4e:	shr    DWORD PTR [ecx+ebx*4+0x57],cl
  413b52:	ret    
  413b53:	push   0xc4078dc1
  413b58:	fwait
  413b59:	out    dx,eax
  413b5a:	jb     0x413b78
  413b5c:	mov    ss,WORD PTR [eax-0x3d5d0f7]
  413b62:	js     0x413b7a
  413b64:	rcr    esp,cl
  413b66:	xor    edi,DWORD PTR [ebp+0x44]
  413b69:	inc    eax
  413b6a:	fwait
  413b6b:	sub    eax,0x4da6d85b
  413b70:	jmp    0x9b6788c4
  413b75:	into   
  413b76:	mov    ebx,0xd468a78
  413b7b:	jae    0x413bd3
  413b7d:	inc    eax
  413b7e:	mov    ds:0xecce38,eax
  413b83:	mov    ch,BYTE PTR [ecx]
  413b85:	mov    edi,DWORD PTR [ecx+0x64b167b5]
  413b8b:	inc    ecx
  413b8c:	sub    ah,BYTE PTR [ebp+0x28]
  413b8f:	mov    cl,0x60
  413b91:	cmp    ecx,DWORD PTR [ecx]
  413b93:	mov    edx,0x87d0d915
  413b98:	pop    esi
  413b99:	iret   
  413b9a:	ret    0xa4ec
  413b9d:	xlat   BYTE PTR ds:[ebx]
  413b9e:	rol    DWORD PTR [ecx],1
  413ba0:	xchg   BYTE PTR [ebx-0x1f],dh
  413ba3:	push   ss
  413ba4:	mov    ecx,0x46e52deb
  413ba9:	inc    DWORD PTR ds:0xda26e656
  413baf:	mov    ?,WORD PTR [ecx-0x2a156fde]
  413bb5:	sahf   
  413bb6:	ret    0x38b5
  413bb9:	cmp    BYTE PTR [edx+eax*1+0x3b007d91],ah
  413bc0:	sub    esp,esp
  413bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bc3:	mov    ds:0xdb2f033b,eax
  413bc8:	popa   
  413bc9:	add    eax,0x982a04da
  413bce:	add    DWORD PTR [ebx],esp
  413bd0:	data16 mov dl,0xce
  413bd3:	jmp    0x413bc8
  413bd5:	jge    0x413bdf
  413bd7:	jg     0x413b7e
  413bd9:	push   ds
  413bda:	xchg   esp,eax
  413bdb:	(bad)  [ecx-0x6e977c05]
  413be1:	outs   dx,BYTE PTR ds:[esi]
  413be2:	push   ds
  413be3:	inc    ecx
  413be4:	dec    esp
  413be5:	mov    ebp,0x9a05b7a2
  413bea:	ja     0x413b9b
  413bec:	(bad)  
  413bed:	in     al,0x13
  413bef:	mov    dl,0xec
  413bf1:	pushf  
  413bf2:	test   al,0x2a
  413bf4:	inc    eax
  413bf5:	sbb    BYTE PTR [esp+ecx*1+0x710dcfe7],dh
  413bfc:	xor    eax,0xefb5875b
  413c01:	dec    eax
  413c02:	std    
  413c03:	jge    0x413bc9
  413c05:	(bad)  
  413c06:	hlt    
  413c07:	and    edx,edi
  413c09:	call   0x3962f24f
  413c0e:	dec    edx
  413c0f:	or     BYTE PTR [eax],0xff
  413c12:	or     BYTE PTR [eax-0x5a],dh
  413c15:	adc    bh,0xa2
  413c18:	xor    al,0x5e
  413c1a:	inc    ecx
  413c1b:	cmp    eax,0x26ef9bd0
  413c20:	aad    0x31
  413c22:	cld    
  413c23:	mov    ecx,0xf527e6de
  413c28:	mov    dl,0x95
  413c2a:	pop    esi
  413c2b:	pop    eax
  413c2c:	mov    eax,ds:0x3d5afb17
  413c31:	push   ecx
  413c32:	sbb    DWORD PTR [edx-0x5c],esp
  413c35:	iret   
  413c36:	mov    WORD PTR [edx+eax*8],?
  413c39:	imul   esp,DWORD PTR [ebp-0x4cf09441],0x83880044
  413c43:	cmp    eax,DWORD PTR [edi+0x1f889245]
  413c49:	cmp    BYTE PTR [esi-0x172d4dc7],ch
  413c4f:	xchg   edx,eax
  413c50:	in     al,0xe5
  413c52:	ss pop ebx
  413c54:	xor    BYTE PTR [ebx],ch
  413c56:	in     al,dx
  413c57:	pop    ds
  413c58:	scas   al,BYTE PTR es:[edi]
  413c59:	repz cmp esi,esp
  413c5c:	pop    ecx
  413c5d:	in     al,0x81
  413c5f:	inc    edi
  413c60:	imul   edi,DWORD PTR [esi+0x21ea5cb7],0xffffffb4
  413c67:	or     DWORD PTR [ecx+eiz*8],0xffffffd3
  413c6b:	inc    eax
  413c6c:	pusha  
  413c6d:	call   FWORD PTR [edi-0x1aba09ab]
  413c73:	xchg   ebp,eax
  413c74:	aam    0xd7
  413c76:	cmp    eax,0x18e9433b
  413c7b:	ins    DWORD PTR es:[edi],dx
  413c7c:	lds    edx,FWORD PTR [edx-0x3a8fd0e0]
  413c82:	push   ds
  413c83:	inc    esp
  413c84:	mov    eax,0x47fe47e4
  413c89:	push   ecx
  413c8a:	lds    ecx,FWORD PTR [edx]
  413c8c:	sti    
  413c8d:	push   ebx
  413c8e:	mov    bh,0xee
  413c90:	int3   
  413c91:	outs   dx,BYTE PTR ds:[esi]
  413c92:	stc    
  413c93:	iret   
  413c94:	pop    ebp
  413c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c96:	sar    DWORD PTR [eax],1
  413c98:	inc    eax
  413c99:	dec    ebx
  413c9a:	in     eax,0xb9
  413c9c:	mov    eax,ds:0x78d071b1
  413ca1:	cmc    
  413ca2:	stos   DWORD PTR es:[edi],eax
  413ca3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413ca5:	aad    0x7d
  413ca7:	dec    ecx
  413ca8:	hlt    
  413ca9:	fist   WORD PTR [edi]
  413cab:	lods   al,BYTE PTR ds:[esi]
  413cac:	gs inc esi
  413cae:	shl    DWORD PTR [ebx],1
  413cb0:	push   es
  413cb1:	and    DWORD PTR [edx],ebx
  413cb3:	sbb    BYTE PTR [ebx-0x1e],bh
  413cb6:	sbb    dl,ch
  413cb8:	mov    eax,0x9b651636
  413cbd:	xor    esp,eax
  413cbf:	int    0xf0
  413cc1:	fadd   QWORD PTR ds:0xc3f4e831
  413cc7:	fwait
  413cc8:	cmp    al,0xac
  413cca:	mov    ah,0xa8
  413ccc:	pop    ecx
  413ccd:	(bad)  
  413cce:	dec    ebp
  413ccf:	out    dx,al
  413cd0:	xchg   ebx,eax
  413cd1:	sub    ebx,ebx
  413cd3:	test   eax,0xe4f6ee90
  413cd8:	fs cli 
  413cda:	xor    BYTE PTR [esi-0x1c9b5a34],dh
  413ce0:	idiv   DWORD PTR ds:0xc4f8085f
  413ce6:	inc    esp
  413ce7:	sub    BYTE PTR [eax],ah
  413ce9:	pop    eax
  413cea:	pop    ds
  413ceb:	(bad)  
  413cec:	ins    BYTE PTR es:[di],dx
  413cee:	adc    BYTE PTR [ebp-0x5a],ah
  413cf1:	sbb    bl,al
  413cf3:	sub    BYTE PTR [ebp-0x4a3bf727],0xaf
  413cfa:	arpl   WORD PTR [edi+0x38],ax
  413cfd:	or     bl,ah
  413cff:	rcr    DWORD PTR cs:[ebx],cl
  413d02:	inc    esi
  413d03:	and    esp,DWORD PTR [ebx+eax*2]
  413d06:	rcl    DWORD PTR [edi-0x4df0e58d],1
  413d0c:	call   0x85b4766b
  413d11:	mov    eax,DWORD PTR [ebx+0x5f230eaf]
  413d17:	pop    edi
  413d18:	push   0x4c
  413d1a:	mov    ebx,0x9d01d296
  413d1f:	xchg   ecx,eax
  413d20:	xchg   BYTE PTR ds:0x58d02f27,cl
  413d26:	aad    0x7a
  413d28:	mov    ebx,0x9aa5643c
  413d2d:	shl    BYTE PTR ds:0x3297e764,cl
  413d33:	and    eax,0xe9972476
  413d38:	cmp    eax,0xdec2bb37
  413d3d:	jp     0x413dba
  413d3f:	lods   al,BYTE PTR ds:[esi]
  413d40:	mov    ch,0xf3
  413d42:	stos   DWORD PTR es:[edi],eax
  413d43:	jns    0x413d2c
  413d45:	or     BYTE PTR [ebp-0x11],ah
  413d48:	adc    al,0xf8
  413d4a:	add    edx,edx
  413d4c:	add    ebx,edi
  413d4e:	xor    dh,BYTE PTR [ebp+ebp*4-0x697ff5d7]
  413d55:	fwait
  413d56:	lods   al,BYTE PTR ds:[esi]
  413d57:	or     al,0xd7
  413d59:	add    eax,0xa926f56a
  413d5e:	sbb    BYTE PTR [ebx+0x56],bl
  413d61:	pushw  0x3d
  413d64:	inc    ebx
  413d65:	push   es
  413d66:	cdq    
  413d67:	test   al,0xd1
  413d69:	mov    al,0xdc
  413d6b:	popf   
  413d6c:	out    0x23,eax
  413d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d6f:	mov    ebp,DWORD PTR [ebp-0x762dac19]
  413d75:	stos   BYTE PTR es:[edi],al
  413d76:	fdiv   DWORD PTR [edi]
  413d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d79:	pop    ebp
  413d7a:	std    
  413d7b:	inc    edx
  413d7c:	sbb    al,0x27
  413d7e:	sbb    BYTE PTR [esi],bl
  413d80:	pop    esi
  413d81:	jge    0x413dbe
  413d83:	xchg   ebp,eax
  413d84:	xchg   BYTE PTR [esi+0x5ff518ce],bh
  413d8a:	xor    edi,0xffffff84
  413d8d:	and    bh,dh
  413d8f:	in     eax,0xd4
  413d91:	icebp  
  413d92:	jne    0x413d60
  413d94:	aam    0xc2
  413d96:	cmp    BYTE PTR [edx-0x6e],dh
  413d99:	scas   eax,DWORD PTR es:[edi]
  413d9a:	cmp    al,0x55
  413d9c:	nop
  413d9d:	(bad)
  413da1:	xchg   esi,eax
  413da2:	scas   eax,DWORD PTR es:[edi]
  413da3:	mov    ds:0xbe010f7a,eax
  413da8:	push   es
  413da9:	push   cs
  413daa:	ja     0x413d84
  413dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dad:	and    cl,BYTE PTR [ebx+0x74]
  413db0:	mov    dl,0xdd
  413db2:	sub    DWORD PTR [esi+0x12e403f1],0xffffff98
  413db9:	push   edx
  413dba:	mov    ch,0xe6
  413dbc:	mov    ah,BYTE PTR [esi-0x6b]
  413dbf:	arpl   WORD PTR [esi+0x73feda5f],cx
  413dc5:	jl     0x413dc5
  413dc7:	retf   0xbec6
  413dca:	and    eax,0xcc230fdc
  413dcf:	and    edx,DWORD PTR [edx-0x5c]
  413dd2:	mov    esi,0xd1cafafa
  413dd7:	es scas al,BYTE PTR es:[edi]
  413dd9:	fxch   st(4)
  413ddb:	bound  ebx,QWORD PTR ds:0xd4a342bb
  413de1:	pop    esi
  413de2:	add    DWORD PTR [esi+0x27],edi
  413de5:	jb     0x413e0b
  413de7:	or     al,0x28
  413de9:	test   eax,0x4783497
  413dee:	and    eax,0xd02a7551
  413df3:	or     eax,0x5c5068c
  413df8:	cmp    BYTE PTR [ecx-0x3],0xd6
  413dfc:	das    
  413dfd:	or     dl,BYTE PTR [eax+0x2f]
  413e00:	dec    ebx
  413e01:	mov    BYTE PTR [edi-0x79],cl
  413e04:	inc    edi
  413e05:	mov    edx,0x8c1ab1ba
  413e0a:	jmp    0x61dc:0x9efa1b1c
  413e11:	das    
  413e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e13:	scas   al,BYTE PTR es:[edi]
  413e14:	mov    bh,0xe5
  413e16:	sti    
  413e17:	pop    ecx
  413e18:	sbb    eax,0x36196fae
  413e1d:	je     0x413da1
  413e1f:	mov    esi,0x26e4de36
  413e24:	pop    ecx
  413e25:	jns    0x413e45
  413e27:	and    eax,0xdac9aef0
  413e2c:	test   DWORD PTR [eax-0x67dd9f15],0xd5144aa0
  413e36:	aad    0xe4
  413e38:	(bad)  
  413e39:	cmp    BYTE PTR ds:0xf28f1185,dl
  413e3f:	and    al,0x97
  413e41:	loopne 0x413e0c
  413e43:	xchg   DWORD PTR [ebp-0x31a15b21],eax
  413e49:	stc    
  413e4a:	cwde   
  413e4b:	cli    
  413e4c:	(bad)  
  413e4d:	jmp    DWORD PTR [esi+eax*8]
  413e50:	(bad)  
  413e52:	jae    0x413e85
  413e54:	jmp    0xd244:0xa747e038
  413e5b:	in     eax,0xd6
  413e5d:	inc    ebp
  413e5e:	mov    ds,WORD PTR [edi+edi*4]
  413e61:	cmp    al,0xd3
  413e63:	lds    esi,FWORD PTR [eax]
  413e65:	ret    
  413e66:	inc    eax
  413e67:	add    esi,DWORD PTR [edi+0x52]
  413e6a:	cmc    
  413e6b:	add    eax,0x9036b29e
  413e70:	and    eax,0xc7b7e2ba
  413e75:	and    eax,0xf87d762
  413e7a:	std    
  413e7b:	dec    ebp
  413e7c:	xor    dl,BYTE PTR [esi+0x5ad292f6]
  413e82:	mov    esp,0xe45e4397
  413e87:	dec    esi
  413e88:	arpl   si,si
  413e8a:	int3   
  413e8b:	inc    ebp
  413e8c:	jmp    0xfa3a:0x11d38f62
  413e93:	test   BYTE PTR [esi-0x58],dh
  413e96:	mov    ebx,0x1ad88d94
  413e9b:	retf   0xfb89
  413e9e:	sahf   
  413e9f:	sbb    al,0x52
  413ea1:	push   0x9ec1604e
  413ea6:	dec    ecx
  413ea7:	hlt    
  413ea8:	dec    ebp
  413ea9:	mov    BYTE PTR [esi],bl
  413eab:	mov    esp,esi
  413ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eae:	sbb    cl,BYTE PTR ds:0xaa9888c4
  413eb4:	(bad)  
  413eb5:	aam    0x88
  413eb7:	nop
  413eb8:	pop    es
  413eb9:	repnz inc ecx
  413ebb:	pushf  
  413ebc:	clc    
  413ebd:	mov    WORD PTR [ebp-0x643e91de],gs
  413ec3:	lods   eax,DWORD PTR ds:[esi]
  413ec4:	repnz push edx
  413ec6:	cli    
  413ec7:	fisttp WORD PTR [ecx+0x29913616]
  413ecd:	cmp    BYTE PTR [ebp+eax*8-0x1b],al
  413ed1:	fdiv   st,st(3)
  413ed3:	sbb    esp,DWORD PTR [eax]
  413ed5:	and    al,0x3e
  413ed7:	sahf   
  413ed8:	push   0x40
  413eda:	mov    esp,0x4d5227ac
  413edf:	adc    dl,0x88
  413ee2:	push   esp
  413ee3:	cmp    ebx,edi
  413ee5:	jmp    0x5903:0xe8569265
  413eec:	inc    esi
  413eed:	ja     0x413f0f
  413eef:	fiadd  DWORD PTR [ecx-0x64]
  413ef2:	fwait
  413ef3:	jmp    0x89bba246
  413ef8:	push   esp
  413ef9:	inc    ebx
  413efa:	jb     0x413f4e
  413efc:	sub    al,0x1d
  413efe:	dec    ebx
  413eff:	push   ebx
  413f00:	outs   dx,DWORD PTR ds:[esi]
  413f01:	popf   
  413f02:	mov    bh,0x96
  413f04:	std    
  413f05:	push   eax
  413f06:	jp     0x413eb2
  413f08:	fs mov al,0xfe
  413f0b:	repnz push esp
  413f0d:	in     al,dx
  413f0e:	add    DWORD PTR [ecx],ebx
  413f10:	ret    0xd6da
  413f13:	pop    edi
  413f14:	rcr    DWORD PTR [edi],1
  413f16:	mov    esp,0x1782df11
  413f1b:	or     bh,BYTE PTR [edi]
  413f1d:	pop    ds
  413f1e:	(bad)  [edi+eiz*1+0x1]
  413f22:	lds    edx,FWORD PTR [eax]
  413f24:	mov    ecx,0xdc6a9f3b
  413f29:	inc    ebp
  413f2a:	push   esi
  413f2b:	out    dx,eax
  413f2c:	sbb    eax,DWORD PTR [edx-0x65]
  413f2f:	mov    ecx,0x1fda5536
  413f34:	jbe    0x413fb5
  413f36:	cmp    al,0x8f
  413f38:	adc    DWORD PTR [edi-0x77],edx
  413f3b:	outs   dx,DWORD PTR ds:[esi]
  413f3c:	mov    esp,0x3dd667d6
  413f41:	(bad)  
  413f42:	rcr    edi,1
  413f44:	and    DWORD PTR [esi+0x46],edx
  413f47:	mov    dl,0x3c
  413f49:	xchg   esi,eax
  413f4a:	and    DWORD PTR [edi],edx
  413f4c:	cwde   
  413f4d:	loop   0x413f3c
  413f4f:	in     al,0x31
  413f51:	inc    edx
  413f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f53:	sub    dh,BYTE PTR [eax+ecx*8+0x51]
  413f57:	mov    BYTE PTR [edi-0x80],dl
  413f5a:	adc    edi,DWORD PTR [edi+eiz*2+0x7]
  413f5e:	mov    edi,0x506472ea
  413f63:	iret   
  413f64:	mov    ebp,0x69911b0f
  413f69:	inc    ebp
  413f6a:	push   esi
  413f6b:	jmp    0x413f80
  413f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6e:	jle    0x413f58
  413f70:	jg     0x413fa4
  413f72:	cmp    ecx,DWORD PTR [edi-0x6d]
  413f75:	das    
  413f76:	cdq    
  413f77:	mov    ds:0x98b2462a,eax
  413f7c:	mov    ah,0x3e
  413f7e:	cs fwait
  413f80:	xchg   esi,eax
  413f81:	in     al,dx
  413f82:	stos   BYTE PTR es:[edi],al
  413f83:	mov    ds:0x6541191c,al
  413f88:	retf   0x2c8b
  413f8b:	cli    
  413f8c:	dec    esi
  413f8d:	addr16 jnp 0x413f19
  413f90:	je     0x413f78
  413f92:	cmc    
  413f93:	je     0x413fb0
  413f95:	or     DWORD PTR [ebp-0x623703e7],esp
  413f9b:	ins    BYTE PTR es:[edi],dx
  413f9c:	gs xchg esp,eax
  413f9e:	or     dh,BYTE PTR ds:0x578fff6f
  413fa4:	dec    esp
  413fa5:	sub    dl,ah
  413fa7:	imul   esi,edi,0x1f217387
  413fad:	mov    dl,0xcc
  413faf:	int    0xc9
  413fb1:	int3   
  413fb2:	mov    edx,0x64f49326
  413fb7:	jle    0x414008
  413fb9:	cmp    BYTE PTR [eax+ebp*1+0x2ddcb3a6],al
  413fc0:	hlt    
  413fc1:	push   ecx
  413fc2:	xchg   esp,eax
  413fc3:	pop    esi
  413fc4:	sbb    eax,0x9ab2e079
  413fc9:	xor    DWORD PTR [ebx],0xfffffff1
  413fcc:	enter  0x72,0x8e
  413fd0:	sub    edx,DWORD PTR [esi+0x8aeac79]
  413fd6:	loope  0x414023
  413fd8:	jecxz  0x413f62
  413fda:	fidiv  DWORD PTR [ecx+0x673d743c]
  413fe0:	test   eax,0x9279c14c
  413fe5:	into   
  413fe6:	mov    ah,0x9d
  413fe8:	fninit 
  413fea:	data16 shr BYTE PTR [ecx+0x6e],0xe2
  413fef:	sub    eax,0xc0c5ad9d
  413ff4:	imul   ebp,DWORD PTR [edi],0x9bd3c46f
  413ffa:	pop    esp
  413ffb:	les    eax,FWORD PTR [ecx+0x1bf2920b]
  414001:	ins    DWORD PTR es:[edi],dx
  414002:	repnz ror DWORD PTR [eax],1
  414005:	push   ecx
  414006:	adc    esp,eax
  414008:	push   ebx
  414009:	inc    edx
  41400a:	push   es
  41400b:	js     0x413fd8
  41400d:	call   0x730a:0x302cd8ed
  414014:	(bad)  
  414016:	push   es
  414017:	sti    
  414018:	adc    DWORD PTR [esi-0x2e],edx
  41401b:	retf   
  41401c:	das    
  41401d:	ss xchg esp,eax
  41401f:	xor    DWORD PTR [esi+eiz*8+0x378a673a],esp
  414026:	(bad)  [bx+si-0x31]
  41402a:	adc    eax,ebx
  41402c:	ins    DWORD PTR es:[edi],dx
  41402d:	ror    dh,1
  41402f:	jnp    0x4140ac
  414031:	mov    ah,0x2e
  414033:	add    eax,0xcd6ddadc
  414038:	pop    ss
  414039:	jo     0x414024
  41403b:	dec    eax
  41403c:	and    BYTE PTR [esi-0x5b],dh
  41403f:	ins    BYTE PTR es:[edi],dx
  414040:	cmp    ecx,DWORD PTR [ecx]
  414042:	cmp    eax,DWORD PTR [ebx]
  414044:	xchg   ebp,eax
  414045:	adc    DWORD PTR [esi],ecx
  414047:	inc    DWORD PTR [edx]
  414049:	mov    ch,0xee
  41404b:	test   al,0xd0
  41404d:	arpl   di,dx
  41404f:	es sbb eax,0x95ea3cb5
  414055:	dec    edx
  414056:	add    al,0xe9
  414058:	push   edx
  414059:	xchg   DWORD PTR [eax],esi
  41405b:	push   esp
  41405c:	enter  0x40ca,0xf1
  414060:	dec    esp
  414061:	aas    
  414062:	mov    ebx,0xbf888b20
  414067:	mov    al,ds:0x75577384
  41406c:	xchg   ebx,eax
  41406d:	xor    esp,DWORD PTR [edx+0x4c]
  414070:	(bad)  
  414071:	test   BYTE PTR [esi+0x61],0xf9
  414075:	mov    DWORD PTR [eax-0x5f],esp
  414078:	rcr    al,cl
  41407a:	jmp    0x414029
  41407c:	add    al,BYTE PTR ds:0xf0029ad9
  414082:	scas   al,BYTE PTR es:[edi]
  414083:	push   ecx
  414084:	xchg   ecx,eax
  414085:	mov    cl,0xbe
  414087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414088:	lock pop edi
  41408a:	fnstenv [eax-0x3f3bbbd1]
  414090:	or     eax,0x1441d8d
  414095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414096:	data16 sbb dl,BYTE PTR ds:0x32522704
  41409d:	std    
  41409e:	ins    DWORD PTR es:[edi],dx
  41409f:	mov    ah,0xbd
  4140a1:	pop    ecx
  4140a2:	rcr    DWORD PTR [edi-0x66],1
  4140a5:	lea    edx,[edi]
  4140a7:	lods   al,BYTE PTR ds:[esi]
  4140a8:	cmp    BYTE PTR [edx+eiz*8-0x21],bh
  4140ac:	mov    es,esp
  4140ae:	and    al,0xa1
  4140b0:	ins    BYTE PTR es:[edi],dx
  4140b1:	adc    eax,0x65ee216c
  4140b6:	(bad)  
  4140b7:	xor    cl,ah
  4140b9:	in     al,0xbc
  4140bb:	mov    cs,WORD PTR [ebx-0x5853331f]
  4140c1:	jge    0x4140f2
  4140c3:	rol    dh,cl
  4140c5:	popa   
  4140c6:	mov    BYTE PTR ds:0x52a5042b,dl
  4140cc:	inc    ebp
  4140cd:	mov    esp,0x8b923370
  4140d2:	pop    esi
  4140d3:	mov    ds:0x1953a8cb,eax
  4140d8:	inc    esi
  4140d9:	sbb    DWORD PTR [edi-0x52c3d7ed],eax
  4140df:	jne    0x41407b
  4140e1:	(bad)  
  4140e2:	sub    al,0x91
  4140e4:	jp     0x41412f
  4140e6:	pop    esi
  4140e7:	push   esi
  4140e8:	and    al,al
  4140ea:	cmp    al,0xee
  4140ec:	mov    ebp,0xcc1906ae
  4140f1:	je     0x41416f
  4140f3:	scas   al,BYTE PTR es:[edi]
  4140f4:	loop   0x414099
  4140f6:	pop    es
  4140f7:	push   ebx
  4140f8:	mov    bh,ah
  4140fa:	sbb    DWORD PTR [eax-0x18],0xf0067b4
  414101:	popf   
  414102:	fs cs fs adc ecx,ebp
  414107:	in     eax,dx
  414108:	in     eax,dx
  414109:	and    ecx,DWORD PTR [edi-0x5510d16e]
  41410f:	mov    WORD PTR [ecx+0x306a368d],es
  414115:	out    dx,eax
  414116:	ret    
  414117:	sbb    eax,0xf98ecf03
  41411c:	cmp    BYTE PTR [ecx-0x51],al
  41411f:	pop    ecx
  414120:	mov    ds:0x2fa38bb4,eax
  414125:	outs   dx,DWORD PTR ds:[esi]
  414126:	fcmovu st,st(5)
  414128:	mul    BYTE PTR [edi]
  41412a:	jp     0x41410e
  41412c:	or     esi,ebx
  41412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412f:	adc    esi,edx
  414131:	fsub   QWORD PTR [ecx]
  414133:	je     0x4140e0
  414135:	dec    ecx
  414136:	imul   ebp,edi,0x51ba6182
  41413c:	jmp    0x4141a0
  41413e:	push   esi
  41413f:	add    edi,esp
  414141:	in     eax,dx
  414142:	cmp    cl,0x97
  414145:	jl     0x4141a6
  414147:	sub    bl,BYTE PTR [edi-0x69]
  41414a:	cmp    al,0x8f
  41414c:	gs into 
  41414e:	ins    DWORD PTR es:[edi],dx
  41414f:	mov    al,0xeb
  414151:	bound  esi,QWORD PTR [ebx-0xf2fa224]
  414157:	aaa    
  414158:	push   edx
  414159:	lock mov DWORD PTR [esi-0x36],0xb9876411
  414161:	pop    esi
  414162:	faddp  st(6),st
  414164:	rcl    DWORD PTR [esi+0x3c8913cc],1
  41416a:	aad    0x46
  41416c:	mov    es,WORD PTR [edi+esi*4+0xf5c95ea]
  414173:	fs xchg ebx,eax
  414175:	aaa    
  414176:	fisubr WORD PTR [edi-0x5b]
  414179:	arpl   WORD PTR [eax+0x6f],di
  41417c:	fisubr DWORD PTR [ebp-0x75]
  41417f:	std    
  414180:	(bad)  
  414181:	dec    esp
  414182:	pop    ebx
  414183:	in     eax,dx
  414184:	repz jne 0x414170
  414187:	jge    0x414113
  414189:	fsubp  st(1),st
  41418b:	pop    edx
  41418c:	pop    edx
  41418d:	xor    ch,cl
  41418f:	ja     0x4141ea
  414191:	mov    WORD PTR [esi],?
  414193:	fwait
  414194:	into   
  414195:	(bad)  
  414196:	ffree  st(6)
  414198:	mov    cl,0x72
  41419a:	push   edi
  41419b:	jmp    0x414132
  41419d:	push   ss
  41419e:	adc    dl,BYTE PTR [ebp+0x48]
  4141a1:	pop    esp
  4141a2:	pop    esi
  4141a3:	gs stos DWORD PTR es:[edi],eax
  4141a5:	push   edi
  4141a6:	push   eax
  4141a7:	jge    0x4141ea
  4141a9:	scas   eax,DWORD PTR es:[edi]
  4141aa:	sub    dh,0x8e
  4141ad:	shl    ebx,0x61
  4141b0:	xlat   BYTE PTR ds:[ebx]
  4141b1:	inc    esp
  4141b2:	mov    esp,0xb583a63c
  4141b7:	push   es
  4141b8:	mov    al,0x90
  4141ba:	aas    
  4141bb:	cli    
  4141bc:	(bad)  
  4141bd:	loopne 0x41417d
  4141bf:	scas   eax,DWORD PTR es:[edi]
  4141c0:	xchg   BYTE PTR [ecx-0x6951f987],al
  4141c6:	fwait
  4141c7:	sbb    eax,0xef81a7d3
  4141cc:	jb     0x41417c
  4141ce:	mov    edx,esi
  4141d0:	jp     0x414178
  4141d2:	mov    dh,0x27
  4141d4:	and    al,0x2
  4141d6:	cmp    DWORD PTR [ebx],ebx
  4141d8:	into   
  4141d9:	inc    edi
  4141da:	push   0xfed88a05
  4141df:	jmp    0xbd68:0x13738261
  4141e6:	mov    ebx,0x2de2c436
  4141eb:	mov    al,ds:0xe6e9c821
  4141f0:	test   DWORD PTR [eax],edi
  4141f2:	je     0x414232
  4141f4:	dec    esi
  4141f5:	or     BYTE PTR [ecx-0x7e],ch
  4141f8:	mov    DWORD PTR [ecx],ebx
  4141fa:	out    dx,al
  4141fb:	sub    bh,BYTE PTR [ebp-0x509ec46a]
  414201:	scas   eax,DWORD PTR es:[edi]
  414202:	fwait
  414203:	sbb    al,0x73
  414205:	xchg   edi,eax
  414206:	pop    ss
  414207:	dec    ecx
  414208:	in     al,dx
  414209:	or     BYTE PTR [ebx],ah
  41420b:	and    DWORD PTR [ecx+0x65],0xf5927fee
  414212:	adc    eax,0x2fd53ec4
  414217:	(bad)  
  414218:	xlat   BYTE PTR ds:[ebx]
  414219:	mov    ebp,0x93cb6f47
  41421e:	mov    al,0x81
  414220:	mov    bl,0x3e
  414222:	jae    0x41425a
  414224:	aad    0x18
  414226:	jl     0x414208
  414228:	dec    ecx
  414229:	sbb    DWORD PTR [eax],0xffffffc8
  41422c:	sbb    esp,eax
  41422e:	dec    edx
  41422f:	call   0x283eac2d
  414234:	pop    es
  414235:	hlt    
  414236:	sub    DWORD PTR [edi-0x72c7a5d0],ecx
  41423c:	ss loope 0x41423a
  41423f:	jl     0x4142c0
  414241:	lods   eax,DWORD PTR ds:[esi]
  414242:	sbb    ebp,DWORD PTR ds:0xfa613e57
  414248:	pop    ecx
  414249:	xchg   esp,eax
  41424a:	mov    edx,0x31215a32
  41424f:	jmp    0x41429b
  414251:	repz mov dl,0x18
  414254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414255:	mov    ecx,0x328c80b7
  41425a:	pop    edi
  41425b:	mov    al,ds:0xc0ac9351
  414260:	and    al,0x4
  414262:	jmp    0x414244
  414264:	arpl   WORD PTR [eax],di
  414266:	pusha  
  414267:	lods   al,BYTE PTR ds:[esi]
  414268:	add    al,0xc2
  41426a:	frstor [eax]
  41426c:	push   edi
  41426d:	jmp    0xad8bc9b7
  414272:	jne    0x4142ee
  414274:	in     eax,dx
  414275:	fs and esp,edi
  414278:	inc    esi
  414279:	add    al,0xbd
  41427b:	jge    0x4142a2
  41427d:	(bad)  
  41427e:	dec    esi
  41427f:	sbb    eax,DWORD PTR [ebx]
  414281:	inc    ebx
  414282:	sbb    DWORD PTR [edx+0x69],ebp
  414285:	sbb    al,0xaa
  414287:	push   esi
  414288:	mov    al,ds:0x716a4428
  41428d:	jl     0x414300
  41428f:	fs pop ss
  414291:	out    0x1,eax
  414293:	lods   al,BYTE PTR ds:[esi]
  414294:	xchg   BYTE PTR [esi+0x7a18eeee],bh
  41429a:	push   eax
  41429b:	in     al,dx
  41429c:	shr    DWORD PTR [edx],cl
  41429e:	rol    eax,0x46
  4142a1:	pop    esi
  4142a2:	ret    
  4142a3:	call   0xba96:0x144264b0
  4142aa:	cld    
  4142ab:	lods   al,BYTE PTR ds:[esi]
  4142ac:	mov    edi,0xfb22afe9
  4142b1:	fadd   st(4),st
  4142b3:	sub    eax,0x2f920add
  4142b8:	imul   DWORD PTR [ebp+0x5c]
  4142bb:	mov    bl,0x9
  4142bd:	iret   
  4142be:	aaa    
  4142bf:	mov    ebx,DWORD PTR [ecx+eax*4-0x61]
  4142c3:	or     eax,0xb113c57d
  4142c8:	mov    ch,0x5f
  4142ca:	xor    DWORD PTR [edx+0xd4bb0d6],ebx
  4142d0:	mov    al,ds:0xeee5a1f
  4142d5:	arpl   WORD PTR [edi],bp
  4142d7:	sub    al,0x65
  4142d9:	ds dec esp
  4142db:	sub    BYTE PTR [eax],0x4b
  4142de:	repnz fdiv DWORD PTR ds:0xc328a70d
  4142e5:	xchg   ecx,eax
  4142e6:	pop    edx
  4142e7:	fisttp QWORD PTR [edi+0x46bbfb52]
  4142ed:	sti    
  4142ee:	loopne 0x4142a7
  4142f0:	or     DWORD PTR [ebx],esi
  4142f2:	jmp    0xe324:0xef70ac35
  4142f9:	mov    bl,0x7
  4142fb:	cmc    
  4142fc:	push   ebp
  4142fd:	mov    ebp,0x8ea149ee
  414302:	fadd   QWORD PTR [esi+0x22bb79fc]
  414308:	adc    DWORD PTR [edi+edi*1],esp
  41430b:	mov    bl,0x49
  41430d:	jns    0x414317
  41430f:	jno    0x414375
  414311:	sahf   
  414312:	scas   eax,DWORD PTR es:[edi]
  414313:	cld    
  414314:	adc    ecx,ebp
  414316:	loopne 0x41430a
  414318:	dec    esi
  414319:	aaa    
  41431a:	les    edi,FWORD PTR [esi+0x6e760fc6]
  414320:	jns    0x414385
  414322:	mov    eax,ds:0x3d5f0e42
  414327:	out    0x1a,eax
  414329:	sub    eax,0xd3e1c92e
  41432e:	loopne 0x4142c7
  414330:	aam    0xfb
  414332:	pop    esi
  414333:	jnp    0x4142e8
  414335:	push   ebp
  414336:	ja     0x4142ec
  414338:	in     al,0x1f
  41433a:	sbb    BYTE PTR [ecx],dl
  41433c:	and    BYTE PTR [ebp-0x6b56ef28],bl
  414342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414343:	shl    DWORD PTR [eax],cl
  414345:	iret   
  414346:	stos   DWORD PTR es:[edi],eax
  414347:	xchg   ebp,eax
  414348:	sbb    ecx,esp
  41434a:	xchg   BYTE PTR [edx-0x4321804e],al
  414350:	int    0xf8
  414352:	jg     0x414380
  414354:	sub    BYTE PTR [esi+edx*4-0x4c83e659],0x11
  41435c:	pop    edi
  41435d:	pop    ss
  41435e:	daa    
  41435f:	cmp    al,BYTE PTR [esi+0x1fc50044]
  414365:	mov    WORD PTR [ebx+0x2c68bf2f],?
  41436b:	xchg   edx,eax
  41436c:	cmp    cl,cl
  41436e:	mov    ecx,0xfdc4365a
  414373:	mov    dl,0x8
  414375:	fdivr  QWORD PTR [ecx]
  414377:	loope  0x4143a3
  414379:	or     esi,DWORD PTR [edi-0x28]
  41437c:	stos   DWORD PTR es:[edi],eax
  41437d:	xchg   BYTE PTR [ebp+0x14],ah
  414380:	cdq    
  414381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414382:	cmp    DWORD PTR fs:[ebp-0x6e7c90d5],esi
  414389:	and    DWORD PTR [edi],ebp
  41438b:	add    ecx,ebp
  41438d:	clc    
  41438e:	inc    esp
  41438f:	ja     0x41438b
  414391:	add    al,0x1e
  414393:	mov    bh,0xe2
  414395:	inc    esp
  414396:	mov    cl,0x4d
  414398:	lsl    edi,WORD PTR [edx+ecx*4+0x51]
  41439d:	mov    bh,0xe9
  41439f:	jae    0x414354
  4143a1:	and    ecx,DWORD PTR [edi+0x39]
  4143a4:	imul   ebx,DWORD PTR [edx+ecx*2],0x20
  4143a8:	sahf   
  4143a9:	les    esp,FWORD PTR [ebx-0x46f9bbf4]
  4143af:	mov    esp,0xac0f54d
  4143b4:	ror    DWORD PTR [edi-0x417c3198],1
  4143ba:	mov    WORD PTR [ebx-0x53],ss
  4143bd:	sub    bh,dl
  4143bf:	mov    ecx,0xcf709361
  4143c4:	mov    eax,0x73946fd3
  4143c9:	pop    ebx
  4143ca:	jmp    FWORD PTR [esi-0x554a8260]
  4143d0:	mov    WORD PTR ds:0x7ba2c322,ds
  4143d6:	mov    ebp,0xaa009144
  4143db:	retf   0x4504
  4143de:	das    
  4143df:	retf   0xef03
  4143e2:	push   esi
  4143e3:	xor    DWORD PTR [edi-0x5d655c39],edx
  4143e9:	enter  0x562b,0x78
  4143ed:	sbb    al,0x69
  4143ef:	sar    BYTE PTR [esp+edx*4-0x36b7d3a0],0xa7
  4143f7:	adc    DWORD PTR [eax+0x37],eax
  4143fa:	push   esi
  4143fb:	xor    esp,edx
  4143fd:	hlt    
  4143fe:	cmp    dl,BYTE PTR [edx-0x72715537]
  414404:	sub    al,0xf3
  414406:	mov    bh,0x81
  414408:	mov    eax,0x7acd2be7
  41440d:	into   
  41440e:	lock or al,0x20
  414411:	and    BYTE PTR [eax+eiz*8-0x1],0x66
  414416:	push   ss
  414417:	idiv   BYTE PTR [edx-0x11]
  41441a:	fadd   DWORD PTR [edi+0x27]
  41441d:	or     al,bh
  41441f:	lods   eax,DWORD PTR ds:[esi]
  414420:	fidiv  WORD PTR [ebp+0x4d]
  414423:	cwde   
  414424:	mov    ds:0x82cf78c6,al
  414429:	xor    DWORD PTR [eax+ecx*1-0x2a],esi
  41442d:	rol    ecx,1
  41442f:	pop    es
  414430:	(bad)
  414433:	xchg   edi,eax
  414434:	leave  
  414435:	push   0xffffff89
  414437:	(bad)  
  414438:	pop    ecx
  414439:	fmulp  st(1),st
  41443b:	and    eax,0xf0b5691c
  414440:	jne    0x4143f4
  414442:	sbb    ah,dh
  414444:	inc    edi
  414445:	xchg   esi,eax
  414446:	push   0x6b
  414448:	pop    esi
  414449:	adc    al,0x14
  41444b:	addr16 jg 0x414457
  41444e:	cwde   
  41444f:	add    ah,BYTE PTR [edx+0x60f683f9]
  414455:	xchg   edx,ecx
  414457:	stc    
  414458:	cli    
  414459:	jbe    0x41449b
  41445b:	dec    ecx
  41445c:	mov    al,ds:0x71b3360f
  414461:	jnp    0x414495
  414463:	int    0x14
  414465:	sti    
  414466:	ss inc esp
  414468:	test   DWORD PTR [edx+0x23134f4e],edi
  41446e:	mov    edx,DWORD PTR [esi]
  414470:	sbb    dl,BYTE PTR [eax+edx*2-0x20]
  414474:	jbe    0x4144df
  414476:	adc    eax,DWORD PTR [esi+0x32]
  414479:	or     DWORD PTR [ebx+0x19dcfe85],edi
  41447f:	cmp    edx,edx
  414481:	jnp    0x414483
  414483:	in     eax,0x5c
  414485:	jl     0x41446d
  414487:	rol    BYTE PTR [ebx+0x75],0xe5
  41448b:	lods   al,BYTE PTR ds:[esi]
  41448c:	iret   
  41448d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448e:	cmp    DWORD PTR [ebx-0x38e8bb04],ebp
  414494:	retf   0x4785
  414497:	inc    esp
  414498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414499:	push   ebp
  41449a:	test   eax,0x5b3806e7
  41449f:	les    edx,FWORD PTR [eax-0x3a]
  4144a2:	mov    BYTE PTR [esp+eax*8+0x5adb8eb0],al
  4144a9:	jae    0x4144db
  4144ab:	inc    ecx
  4144ac:	cmp    DWORD PTR [edi],ebp
  4144ae:	jno    0x41443c
  4144b0:	pop    es
  4144b1:	aas    
  4144b2:	(bad)  
  4144b3:	dec    edi
  4144b4:	ret    0xc599
  4144b7:	cwde   
  4144b8:	call   0xab3e64ed
  4144bd:	xor    al,0xdc
  4144bf:	push   edx
  4144c0:	popa   
  4144c1:	jge    0x41451a
  4144c3:	test   al,0xbf
  4144c5:	loopne 0x4144c0
  4144c7:	outs   dx,BYTE PTR ds:[esi]
  4144c8:	pop    ss
  4144c9:	cmp    DWORD PTR [eax+0x39be0eb1],0x1f
  4144d0:	or     DWORD PTR [edi],0xffffffc0
  4144d3:	pop    esi
  4144d4:	hlt    
  4144d5:	or     eax,0x423c2ae0
  4144da:	sti    
  4144db:	mov    DWORD PTR [eax+0x134e8da3],edx
  4144e1:	lds    esp,FWORD PTR [edx+0x37]
  4144e4:	neg    cl
  4144e6:	fidiv  WORD PTR [eax]
  4144e8:	fwait
  4144e9:	jge    0x4144c0
  4144eb:	or     bh,BYTE PTR [edi+0x2fab84ea]
  4144f1:	daa    
  4144f2:	jg     0x4144ab
  4144f4:	jg     0x4144b9
  4144f6:	jg     0x4144b6
  4144f8:	pop    edi
  4144f9:	ficomp WORD PTR [ebx]
  4144fb:	lahf   
  4144fc:	mov    ah,0x23
  4144fe:	xlat   BYTE PTR ds:[ebx]
  4144ff:	jb     0x414508
  414501:	retf   0xacaf
  414504:	test   DWORD PTR [esi],edi
  414506:	lds    esi,FWORD PTR [ecx]
  414508:	fild   DWORD PTR [esi+0x64]
  41450b:	int3   
  41450c:	enter  0x5bfe,0x5d
  414510:	aam    0x5e
  414512:	push   ecx
  414513:	jle    0x41457f
  414515:	cmp    al,0x4a
  414517:	mov    ah,0x65
  414519:	dec    eax
  41451a:	pop    ss
  41451b:	fst    st(0)
  41451d:	sbb    edx,eax
  41451f:	jl     0x414506
  414521:	js     0x41453a
  414523:	test   al,0x5c
  414525:	pop    edi
  414526:	mov    ah,0x41
  414528:	pushw  0xc184
  41452c:	pop    eax
  41452d:	and    ah,ah
  41452f:	add    DWORD PTR [esi],esp
  414531:	ret    
  414532:	fmulp  st(7),st
  414534:	in     eax,0x9
  414536:	ret    
  414537:	inc    esi
  414538:	push   cs
  414539:	push   ss
  41453a:	dec    ebx
  41453b:	xchg   edx,eax
  41453c:	pop    ds
  41453d:	icebp  
  41453e:	jg     0x4144f2
  414540:	inc    eax
  414541:	into   
  414542:	pop    ecx
  414543:	jne    0x41459d
  414545:	inc    ebp
  414546:	xor    bl,bl
  414548:	inc    edi
  414549:	je     0x41455a
  41454b:	cld    
  41454c:	add    esp,DWORD PTR [edx+0xba8c448]
  414552:	(bad)  
  414553:	jp     0x414554
  414555:	les    ebp,FWORD PTR [ecx+0x51]
  414558:	jp     0x4145b1
  41455a:	ja     0x4145b9
  41455c:	or     ecx,esi
  41455e:	hlt    
  41455f:	or     ah,BYTE PTR [eax+esi*1-0x5d]
  414563:	lods   eax,DWORD PTR fs:[esi]
  414565:	push   es
  414566:	push   0xfffffffe
  414568:	mov    cl,BYTE PTR [ebx+0x2f]
  41456b:	or     DWORD PTR [ebx+0x35],edx
  41456e:	fisubr WORD PTR [ecx]
  414570:	sub    DWORD PTR [esp+esi*2+0x15],eax
  414574:	sbb    ebp,DWORD PTR [edi+0x0]
  414577:	inc    edi
  414578:	scas   eax,DWORD PTR es:[edi]
  414579:	cmp    dh,BYTE PTR [edx+0x4e]
  41457c:	fwait
  41457d:	loop   0x414592
  41457f:	sub    eax,DWORD PTR [ebp+ecx*4-0x72]
  414583:	fistp  QWORD PTR es:[ecx+0x4bc6d8db]
  41458a:	fnsave [ecx-0x512e47b7]
  414590:	push   es
  414591:	xchg   BYTE PTR ds:0xb7bf2a1d,bl
  414597:	sti    
  414598:	test   eax,0x7834cb64
  41459d:	or     edi,eax
  41459f:	or     eax,0xdbeeb8fe
  4145a4:	ins    BYTE PTR es:[edi],dx
  4145a5:	add    bh,ah
  4145a7:	shr    WORD PTR [eax],0x67
  4145ab:	pop    eax
  4145ac:	and    bl,dl
  4145ae:	mov    edx,0x1d3054a4
  4145b3:	or     DWORD PTR [edx],eax
  4145b5:	(bad)  
  4145b6:	daa    
  4145b7:	mov    ?,ebx
  4145b9:	fmul   QWORD PTR [edx]
  4145bb:	mov    ch,0x36
  4145bd:	pop    es
  4145be:	jmp    0x4145fa
  4145c0:	sbb    eax,0x29a479fd
  4145c5:	adc    al,BYTE PTR [ebx]
  4145c7:	or     eax,0xa3009149
  4145cc:	loop   0x4145ef
  4145ce:	mov    ch,0x39
  4145d0:	bound  ebp,QWORD PTR ds:0x6b9ba10a
  4145d6:	popf   
  4145d7:	jb     0x4145c6
  4145d9:	mov    WORD PTR [edx+0x76e143d3],gs
  4145df:	adc    al,0x97
  4145e1:	into   
  4145e2:	mov    edi,0x27ae2754
  4145e7:	clc    
  4145e8:	jp     0x4145bb
  4145ea:	stc    
  4145eb:	popa   
  4145ec:	push   ecx
  4145ed:	adc    eax,0x403bc4ea
  4145f2:	adc    al,0x1b
  4145f4:	jmp    FWORD PTR [ebp+0x76]
  4145f7:	sti    
  4145f8:	mov    ecx,0xd5b8a8d8
  4145fd:	jle    0x41465d
  4145ff:	xchg   ebp,eax
  414600:	jbe    0x4145eb
  414602:	push   ebx
  414603:	sahf   
  414604:	(bad)  [ebx+0x17638e17]
  41460a:	jae    0x4145c5
  41460c:	pusha  
  41460d:	dec    ebp
  41460e:	out    0xaf,eax
  414610:	adc    al,0x3b
  414612:	addr16 dec esp
  414614:	fcomi  st,st(1)
  414616:	push   ecx
  414617:	sub    BYTE PTR [ecx+0x3c6a6104],bh
  41461d:	stc    
  41461e:	loopne 0x414672
  414620:	pop    eax
  414621:	xchg   edi,eax
  414622:	cmp    dl,BYTE PTR [edi-0x46]
  414625:	mov    ebx,0xce6db82f
  41462a:	sbb    DWORD PTR [ebx+0x69],esp
  41462d:	(bad)  
  41462f:	je     0x41464c
  414631:	daa    
  414632:	fnstsw WORD PTR [ecx+eiz*1+0x35a9fb80]
  414639:	int    0x3a
  41463b:	repz call 0xc169:0x9224397a
  414643:	gs int 0x3c
  414646:	arpl   WORD PTR [eax],bx
  414648:	or     eax,0xc5547f45
  41464d:	std    
  41464e:	into   
  41464f:	jns    0x4145d5
  414651:	retf   0x468e
  414654:	xlat   BYTE PTR ds:[ebx]
  414655:	mov    gs:0x38317ba6,al
  41465b:	jne    0x4145e5
  41465d:	test   BYTE PTR [edx],0xb4
  414660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414661:	(bad)  
  414662:	repz int3 
  414664:	and    eax,0x55bd16a4
  414669:	xchg   ebx,eax
  41466a:	adc    al,0x5d
  41466c:	lock sbb al,0xd0
  41466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414670:	mov    BYTE PTR [ebp+0x69],ch
  414673:	xor    edx,DWORD PTR [eax+ecx*1+0x25d4dc1d]
  41467a:	jbe    0x414644
  41467c:	xchg   ebp,eax
  41467d:	test   BYTE PTR [eax+edx*2+0x24],bh
  414681:	xchg   ecx,eax
  414682:	dec    edi
  414683:	jmp    0x49d15144
  414688:	jo     0x4146e8
  41468a:	addr16 rcl ebp,cl
  41468d:	sub    ah,0x68
  414690:	repz push esp
  414692:	inc    edi
  414693:	mov    eax,0x47f29cc4
  414698:	aad    0xca
  41469a:	clc    
  41469b:	hlt    
  41469c:	cmp    al,0x3d
  41469f:	mov    bl,0x99
  4146a1:	lds    esi,FWORD PTR [edi+ecx*2-0x1d9e7cfe]
  4146a8:	ja     0x414672
  4146aa:	ins    DWORD PTR es:[edi],dx
  4146ab:	outs   dx,BYTE PTR ds:[esi]
  4146ac:	jo     0x4146f1
  4146ae:	aaa    
  4146af:	fmul   QWORD PTR [esi+0x75dc091c]
  4146b5:	mov    edi,0xa52d95da
  4146ba:	and    ebp,DWORD PTR [edi]
  4146bc:	fistp  DWORD PTR [edi+edx*1]
  4146bf:	and    DWORD PTR [ecx-0x55987db],0x3f
  4146c6:	jo     0x41468b
  4146c8:	lea    esp,[ebx]
  4146ca:	sbb    al,0x79
  4146cc:	(bad)  
  4146cd:	out    0x71,al
  4146cf:	icebp  
  4146d0:	loopne 0x414716
  4146d2:	mov    DWORD PTR [edx+0x1a],ebp
  4146d5:	inc    esi
  4146d6:	pop    edx
  4146d7:	fistp  WORD PTR [eax-0x36]
  4146da:	add    BYTE PTR [eax-0x5b17b069],dh
  4146e0:	call   0x87c5f5b5
  4146e5:	ins    DWORD PTR es:[edi],dx
  4146e6:	lahf   
  4146e7:	adc    ah,dh
  4146e9:	push   ds
  4146ea:	ds stos DWORD PTR es:[edi],eax
  4146ec:	mov    ds:0x2199f9f8,al
  4146f1:	lods   al,BYTE PTR ds:[esi]
  4146f2:	sbb    esp,DWORD PTR [ebx-0x3b]
  4146f5:	adc    ebx,DWORD PTR [ecx]
  4146f7:	jnp    0x41475e
  4146f9:	cmp    ch,cl
  4146fb:	leave  
  4146fc:	jmp    0x18e5d6aa
  414701:	jns    0x4146ad
  414703:	jg     0x4146b1
  414705:	mov    edi,cs
  414707:	mov    dh,dl
  414709:	add    dl,BYTE PTR ds:0xaf6acde6
  41470f:	jmp    0x4146f6
  414711:	aam    0xde
  414713:	and    eax,0x1bf9168f
  414718:	push   cs
  414719:	rcr    BYTE PTR [ebp-0x65010f7f],1
  41471f:	adc    ecx,edi
  414721:	dec    edi
  414722:	jae    0x414791
  414724:	or     al,0x14
  414726:	in     eax,dx
  414727:	fst    QWORD PTR [ebp-0x305684b7]
  41472d:	xor    al,0x54
  41472f:	adc    bl,0x9f
  414732:	adc    ah,dh
  414734:	inc    ecx
  414735:	dec    esi
  414736:	pop    eax
  414737:	push   ebx
  414738:	fsubr  st,st(0)
  41473a:	sbb    al,0xb1
  41473c:	sti    
  41473d:	pop    esp
  41473e:	mov    ds:0x771034d,eax
  414743:	int    0x77
  414745:	dec    edi
  414746:	shr    DWORD PTR [esp+ebx*4-0x636c454f],0xb
  41474e:	add    ch,bh
  414750:	imul   ebp,DWORD PTR ss:[eax+0xaf813ca],0xa304675d
  41475b:	adc    dl,bh
  41475d:	es aad 0x13
  414760:	push   ebx
  414761:	sti    
  414762:	xchg   esp,eax
  414763:	(bad)  
  414764:	fstp   TBYTE PTR [eax+0x5cfc52d3]
  41476a:	and    BYTE PTR [edi],ah
  41476c:	fld    QWORD PTR [ecx]
  41476e:	arpl   WORD PTR [edx+0x35ab093c],bp
  414774:	or     al,0xa1
  414776:	int    0x65
  414778:	mov    BYTE PTR [ebx-0x39],cl
  41477b:	sbb    DWORD PTR [ebx],edx
  41477d:	stos   BYTE PTR es:[edi],al
  41477e:	xor    esp,DWORD PTR [esi-0x36]
  414781:	aad    0xf0
  414783:	pop    edi
  414784:	sub    DWORD PTR es:[ebx+0x2f],eax
  414788:	sti    
  414789:	loopne 0x414741
  41478b:	cld    
  41478c:	iret   
  41478d:	(bad)
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	push   ss
  414792:	jecxz  0x414725
  414794:	call   0x88a2c267
  414799:	pop    ecx
  41479a:	sub    al,0x64
  41479c:	pop    ebx
  41479d:	(bad)  
  41479e:	xchg   edx,eax
  41479f:	xor    eax,0x41d40f8
  4147a4:	rol    ebx,cl
  4147a6:	loopne 0x4147d5
  4147a8:	shl    ebx,cl
  4147aa:	fldcw  WORD PTR [esi-0x4bcfa101]
  4147b0:	scas   al,BYTE PTR es:[edi]
  4147b1:	int3   
  4147b2:	xor    BYTE PTR [edx],ah
  4147b4:	mov    ch,0xcf
  4147b6:	nop
  4147b7:	shl    ebx,0x1d
  4147ba:	jmp    0x39312d9d
  4147bf:	neg    DWORD PTR [ebp-0x68ff9146]
  4147c5:	in     al,dx
  4147c6:	div    BYTE PTR [esi+0x35]
  4147c9:	push   edx
  4147ca:	and    dh,bh
  4147cc:	std    
  4147cd:	push   ss
  4147ce:	sbb    dh,BYTE PTR [ebp+0x8]
  4147d1:	aaa    
  4147d2:	and    BYTE PTR [edx+0x30],0xa0
  4147d6:	adc    eax,0x59547810
  4147db:	in     al,0x5b
  4147dd:	pop    ebp
  4147de:	iret   
  4147df:	(bad)  
  4147e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e2:	xchg   ecx,eax
  4147e3:	repnz arpl WORD PTR [eax-0x3b],dx
  4147e7:	(bad)  
  4147e8:	sbb    al,0xe6
  4147ea:	xchg   BYTE PTR [ebx],dh
  4147ec:	in     al,0xa2
  4147ee:	xchg   esi,eax
  4147f0:	dec    ebx
  4147f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f2:	mov    eax,DWORD PTR [esi]
  4147f4:	inc    edi
  4147f5:	xor    ebx,DWORD PTR [esp+eax*8+0x289501d9]
  4147fc:	jmp    0x4147e3
  4147fe:	and    al,0x9a
  414800:	dec    eax
  414801:	pop    ecx
  414802:	iret   
  414803:	dec    esi
  414804:	shl    DWORD PTR [edi+0x2d],0xa5
  414808:	fmul   QWORD PTR ss:[edx]
  41480b:	cmovno ebx,DWORD PTR [edi]
  41480e:	sub    al,dl
  414810:	inc    ebp
  414811:	adc    dl,ch
  414813:	stos   DWORD PTR es:[edi],eax
  414814:	fisub  WORD PTR [edx]
  414816:	jne    0x414832
  414818:	inc    bl
  41481a:	test   DWORD PTR [ebx],0x8218d967
  414820:	push   ecx
  414821:	jl     0x4147b6
  414823:	push   DWORD PTR [ebx]
  414825:	inc    edi
  414826:	arpl   WORD PTR [ebp+0x39d3d870],dx
  41482c:	jle    0x414854
  41482e:	or     DWORD PTR [ebp-0x3e],ebx
  414831:	and    esi,DWORD PTR [ebx]
  414833:	or     al,0xa5
  414835:	inc    esp
  414836:	or     eax,0xe19218c6
  41483b:	sbb    edi,DWORD PTR [ebp+edx*8-0x355dd572]
  414842:	inc    ecx
  414843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414844:	shl    BYTE PTR ds:0xe79df43b,0x35
  41484b:	sar    BYTE PTR [eax+0x50],cl
  41484e:	loopne 0x414812
  414850:	int    0xef
  414852:	or     esi,DWORD PTR [ebp+0x5a2a42d3]
  414858:	popa   
  414859:	push   0xffffffce
  41485b:	out    0x62,al
  41485d:	xchg   ebp,eax
  41485e:	cmp    bl,BYTE PTR [ebx]
  414860:	cwde   
  414861:	mov    bh,0x1f
  414863:	inc    eax
  414864:	mov    al,ds:0x3cdbe76e
  414869:	nop
  41486a:	sub    BYTE PTR [edi+0x219c3787],bl
  414870:	sbb    DWORD PTR [ebx-0x7c],ecx
  414873:	fs scas ax,WORD PTR es:[edi]
  414876:	push   ebp
  414877:	add    eax,0xca95e693
  41487c:	pop    es
  41487d:	fneni(8087 only) 
  41487f:	and    BYTE PTR [ebp-0x7be6112c],dl
  414885:	je     0x414817
  414887:	fs in  al,dx
  414889:	adc    al,0xd3
  41488b:	adc    ebp,0x1
  41488e:	pop    edx
  41488f:	stos   BYTE PTR es:[edi],al
  414890:	adc    dh,BYTE PTR [esi+ebx*1]
  414893:	push   ds
  414894:	dec    esi
  414895:	outs   dx,DWORD PTR ds:[esi]
  414896:	in     eax,0x66
  414898:	mov    cl,0x31
  41489a:	sahf   
  41489b:	pop    es
  41489c:	cmp    dh,dh
  41489e:	pop    esi
  41489f:	inc    edi
  4148a0:	xchg   edx,eax
  4148a1:	mov    ds:0xa0032809,al
  4148a6:	inc    ecx
  4148a7:	cmp    DWORD PTR [ebx-0x62eb8cc8],0x2a485f0c
  4148b1:	test   BYTE PTR [ebx],cl
  4148b3:	mov    dh,0x87
  4148b5:	fwait
  4148b6:	loopne 0x41484a
  4148b8:	xor    BYTE PTR [ecx-0x3],bh
  4148bb:	outs   dx,BYTE PTR ds:[esi]
  4148bc:	adc    DWORD PTR [eax],ebx
  4148be:	cmp    BYTE PTR [edi],dh
  4148c0:	sahf   
  4148c1:	push   cs
  4148c2:	pushf  
  4148c3:	inc    esi
  4148c4:	idiv   BYTE PTR [edi+0x2fca5b0e]
  4148ca:	xor    al,0x4c
  4148cc:	test   DWORD PTR [ebx],ecx
  4148ce:	jecxz  0x4148e9
  4148d0:	mov    ah,ah
  4148d2:	pushf  
  4148d3:	fs das 
  4148d5:	xor    eax,0x59aee136
  4148da:	hlt    
  4148db:	sahf   
  4148dc:	mov    eax,0x494c9c34
  4148e1:	loopne 0x414952
  4148e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e4:	loop   0x414887
  4148e6:	adc    bl,al
  4148e8:	push   0x302db8b4
  4148ed:	int    0xc9
  4148ef:	mov    edx,0x18d53c03
  4148f4:	ss jne 0x414882
  4148f7:	test   BYTE PTR [ebx+0x335a6a5e],bh
  4148fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148fe:	mov    edi,0x2aaba0a4
  414903:	pop    eax
  414904:	pandn  mm2,mm1
  414907:	xor    DWORD PTR [ebp+0x5ab3eb51],esi
  41490d:	mov    WORD PTR [esi],es
  41490f:	scas   al,BYTE PTR es:[edi]
  414910:	test   eax,0xb30faf6e
  414916:	add    ch,BYTE PTR [edi+0x50ab178d]
  41491c:	jb     0x4148af
  41491e:	adc    eax,0x94ef329e
  414923:	aad    0x87
  414925:	daa    
  414926:	jns    0x41499d
  414928:	loop   0x4149a9
  41492a:	out    dx,al
  41492b:	xor    eax,0xe0c711f3
  414930:	xchg   edx,eax
  414931:	push   ebx
  414932:	pop    esi
  414933:	ds int3 
  414935:	xchg   esp,eax
  414936:	out    0x51,al
  414938:	cli    
  414939:	push   cs
  41493a:	outs   dx,BYTE PTR ds:[esi]
  41493b:	xor    eax,0x9648caa4
  414940:	es dec edx
  414942:	push   edi
  414943:	popf   
  414944:	ins    BYTE PTR es:[edi],dx
  414945:	out    0x4c,al
  414947:	pusha  
  414948:	addr16 jne 0x4148fc
  41494b:	in     eax,dx
  41494c:	or     BYTE PTR [esi-0x49],ch
  41494f:	mov    bl,0xf8
  414951:	sub    BYTE PTR [ecx+0x5c],0xe5
  414955:	mov    al,0x60
  414957:	(bad)  
  414958:	shl    BYTE PTR ds:0x6712f588,cl
  41495e:	push   ss
  41495f:	jecxz  0x414912
  414961:	xchg   edi,eax
  414962:	cld    
  414963:	and    bl,BYTE PTR [ebx+0x2]
  414966:	sub    DWORD PTR [edi],edx
  414968:	js     0x4149d5
  41496a:	dec    edi
  41496b:	jmp    0x3faf:0xf5789f91
  414972:	push   ecx
  414973:	lea    esi,[edx+0xa6f0d04]
  414979:	mov    cl,0x79
  41497b:	ds and al,0x68
  41497e:	cli    
  41497f:	test   esp,esp
  414981:	pop    edi
  414982:	mov    esp,0xf73d95f8
  414987:	push   0x5a
  414989:	call   0x94e4:0xf8190cd1
  414990:	fwait
  414991:	ret    0xfdfd
  414994:	test   al,0x68
  414996:	jl     0x414961
  414998:	push   edi
  414999:	(bad)  [edx]
  41499b:	(bad)
  41499e:	sbb    BYTE PTR [edx+0x2e],bl
  4149a1:	(bad)  
  4149a2:	dec    ebp
  4149a3:	xchg   edi,eax
  4149a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a5:	popf   
  4149a6:	push   0xffffff91
  4149a8:	fbstp  TBYTE PTR [ebx-0x6a]
  4149ab:	(bad)  
  4149ac:	neg    BYTE PTR [eax-0x291fcc7a]
  4149b2:	scas   eax,DWORD PTR es:[edi]
  4149b3:	dec    edi
  4149b4:	mov    WORD PTR [eax],cs
  4149b6:	pop    esp
  4149b7:	mov    ebx,0x55a9e6fe
  4149bc:	xor    ebp,DWORD PTR [ebx]
  4149be:	add    BYTE PTR [ebx+0x3397bfdb],dl
  4149c4:	xchg   ecx,eax
  4149c5:	inc    eax
  4149c6:	inc    ecx
  4149c7:	test   BYTE PTR [eax+0x5ae586c2],bh
  4149cd:	imul   ecx,DWORD PTR [edi-0x636451a],0x31c8d23f
  4149d7:	ins    DWORD PTR es:[edi],dx
  4149d8:	mov    ebp,esi
  4149da:	mov    al,ds:0x319093b6
  4149df:	ja     0x4149c8
  4149e1:	pushf  
  4149e2:	add    eax,0xf0e22ecb
  4149e7:	pop    esi
  4149e8:	(bad)  
  4149e9:	rol    esp,cl
  4149eb:	inc    eax
  4149ec:	(bad)  
  4149ed:	stos   DWORD PTR es:[edi],eax
  4149ee:	push   ds
  4149ef:	ror    BYTE PTR ds:0xb0c2a010,1
  4149f5:	pop    ecx
  4149f6:	loop   0x414a4e
  4149f8:	fstp   QWORD PTR [edi-0x55]
  4149fb:	cdq    
  4149fc:	xchg   DWORD PTR [eax-0x4f],esp
  4149ff:	add    ah,BYTE PTR [eax-0xc]
  414a02:	xchg   ebx,eax
  414a03:	(bad)  
  414a04:	cmp    dh,dh
  414a06:	ret    0xfe53
  414a09:	sbb    BYTE PTR [eax+ebp*4+0x5a],ah
  414a0d:	mov    ebx,0xf5535e68
  414a12:	mov    bh,0xfb
  414a14:	inc    esp
  414a15:	dec    esp
  414a16:	shr    ebp,0xe5
  414a19:	cs push cs
  414a1b:	xchg   edi,eax
  414a1c:	adc    DWORD PTR [edi+0x39],ebx
  414a1f:	and    ebp,DWORD PTR [ebx+0x32]
  414a22:	add    al,0x96
  414a24:	fbld   TBYTE PTR [ecx-0x6f788230]
  414a2a:	pop    edi
  414a2b:	pop    edx
  414a2c:	div    BYTE PTR [edi+0x58]
  414a2f:	push   ebx
  414a30:	out    dx,al
  414a31:	xlat   BYTE PTR ds:[ebx]
  414a32:	xchg   esp,eax
  414a33:	(bad)  
  414a34:	xor    eax,DWORD PTR [ebp+0x55111b5f]
  414a3a:	xchg   edx,eax
  414a3b:	sub    al,0x75
  414a3d:	mov    eax,0x8704fb09
  414a42:	call   0xe50739d8
  414a47:	mov    edi,0x3202dc5d
  414a4c:	mov    dl,0x4e
  414a4e:	cs mov bl,0x27
  414a51:	adc    eax,0xcbeab1f3
  414a56:	fadd   DWORD PTR [esi]
  414a58:	enter  0x5020,0x27
  414a5c:	popa   
  414a5d:	push   esp
  414a5e:	shl    DWORD PTR [esi+0x7f048ebb],0x3b
  414a65:	push   esp
  414a66:	fiadd  DWORD PTR [esi]
  414a68:	jecxz  0x414ab0
  414a6a:	and    al,0xc4
  414a6c:	ret    
  414a6d:	fdivr  st(4),st
  414a6f:	shr    BYTE PTR [edx+0x143d4797],cl
  414a75:	loope  0x414a14
  414a77:	add    eax,DWORD PTR [ecx+eax*4]
  414a7a:	repz mov al,0xe
  414a7d:	push   0x553a830e
  414a82:	aad    0x61
  414a84:	shl    BYTE PTR [ebp+0x13],cl
  414a87:	xor    edi,DWORD PTR [eax]
  414a89:	push   edi
  414a8a:	icebp  
  414a8b:	sahf   
  414a8c:	mov    ah,0x5c
  414a8e:	or     al,0x73
  414a90:	and    al,0x49
  414a92:	cmc    
  414a93:	dec    ebx
  414a94:	cmp    dh,al
  414a96:	fld    TBYTE PTR [eax+0x4a3a7f9a]
  414a9c:	mov    esp,0x12f2d518
  414aa1:	sbb    BYTE PTR [esi-0x2e],ah
  414aa4:	add    eax,0xd8b3f1a5
  414aa9:	cmp    ebp,DWORD PTR [ebx]
  414aab:	in     al,0x8c
  414aad:	sub    cl,BYTE PTR [ebp-0xc]
  414ab0:	cmp    ebp,DWORD PTR [esi]
  414ab2:	scas   al,BYTE PTR es:[edi]
  414ab3:	pop    esi
  414ab4:	sbb    bh,BYTE PTR [ecx+0x21]
  414ab7:	or     al,0x28
  414ab9:	lods   eax,DWORD PTR ds:[esi]
  414aba:	int    0x1c
  414abc:	push   ebp
  414abd:	loopne 0x414ae9
  414abf:	rol    DWORD PTR [ebx],cl
  414ac1:	push   ecx
  414ac2:	das    
  414ac3:	ja     0x414ac6
  414ac5:	stos   DWORD PTR es:[edi],eax
  414ac6:	int3   
  414ac7:	into   
  414ac8:	mov    ss,WORD PTR ds:0xc662002e
  414ace:	neg    BYTE PTR [edi]
  414ad0:	imul   ebx,DWORD PTR [esi+0x2dd9e53f],0x1bfff50b
  414ada:	push   ds
  414adb:	dec    ebx
  414adc:	and    al,0x2e
  414ade:	lock scas eax,DWORD PTR es:[edi]
  414ae0:	stc    
  414ae1:	nop
  414ae2:	data16 mov BYTE PTR [esi-0xe856db1],dl
  414ae9:	cmp    al,0x94
  414aeb:	ja     0x414a89
  414aed:	shl    DWORD PTR [esi-0x1cc41b87],1
  414af3:	adc    al,0xd6
  414af5:	or     ch,BYTE PTR [ebp+0x34]
  414af8:	imul   ebp,DWORD PTR [ebp+0x61],0x3
  414afc:	mov    esi,0x9ba5a5a8
  414b01:	(bad)  [eax]
  414b03:	xchg   edi,eax
  414b04:	(bad)
  414b07:	ins    DWORD PTR es:[edi],dx
  414b08:	adc    al,0xdd
  414b0a:	push   esi
  414b0b:	or     dl,BYTE PTR [ecx]
  414b0d:	push   0x895f8588
  414b12:	lods   eax,DWORD PTR ds:[esi]
  414b13:	retf   0x1d0
  414b16:	sbb    al,0xcb
  414b18:	dec    edx
  414b19:	add    eax,0xfe66a80
  414b1e:	in     eax,0x49
  414b20:	out    0xc,eax
  414b22:	(bad)
  414b26:	mov    al,dl
  414b28:	test   eax,0x4924e538
  414b2d:	std    
  414b2e:	stos   BYTE PTR es:[edi],al
  414b2f:	ja     0x414b99
  414b31:	(bad)  
  414b32:	outs   dx,DWORD PTR ds:[esi]
  414b33:	out    0x9,eax
  414b35:	fwait
  414b36:	dec    ebp
  414b37:	cdq    
  414b38:	in     al,0x34
  414b3a:	neg    BYTE PTR [edi]
  414b3c:	in     eax,0x2
  414b3e:	inc    esp
  414b3f:	aad    0x74
  414b41:	mov    ds:0x5509ad65,al
  414b46:	and    bh,BYTE PTR [edx+0x2f]
  414b49:	jne    0x414b43
  414b4b:	les    ecx,FWORD PTR [ebx+0x883d772]
  414b51:	sub    BYTE PTR [edi+0x78],ah
  414b54:	cmp    edi,DWORD PTR [edi]
  414b56:	lock inc edi
  414b58:	mov    ch,0xf2
  414b5a:	push   0x3f
  414b5c:	fist   DWORD PTR [edx]
  414b5e:	clc    
  414b5f:	dec    edi
  414b60:	pop    esi
  414b61:	pop    ss
  414b62:	cld    
  414b63:	nop
  414b64:	jo     0x414b55
  414b66:	or     BYTE PTR [ebx],cl
  414b68:	push   ebp
  414b69:	xor    ecx,ecx
  414b6b:	frstor [edx-0x3f6ec531]
  414b71:	xor    eax,0xa1fc02b8
  414b76:	cmp    esi,DWORD PTR [edx]
  414b78:	js     0x414b43
  414b7a:	sub    DWORD PTR [ecx+0x27],esp
  414b7d:	int    0x5a
  414b7f:	cmp    eax,DWORD PTR [ebx]
  414b81:	add    al,0x7d
  414b83:	retf   
  414b84:	inc    ebx
  414b85:	xor    ecx,DWORD PTR [ebx]
  414b87:	jmp    0x25d5:0x736a7422
  414b8e:	les    ebx,FWORD PTR [ebx-0x736e068f]
  414b94:	rcl    WORD PTR [edi+ebp*2+0x54],0x14
  414b9a:	je     0x414b31
  414b9c:	dec    esi
  414b9d:	pop    ecx
  414b9e:	inc    esp
  414b9f:	loope  0x414b3b
  414ba1:	fdiv   st(6),st
  414ba3:	adc    al,BYTE PTR [ebx]
  414ba5:	push   esi
  414ba6:	arpl   WORD PTR [edx+0x4b],si
  414ba9:	dec    eax
  414baa:	shr    DWORD PTR [ecx-0x7d],1
  414bad:	loopne 0x414b77
  414baf:	js     0x414c04
  414bb1:	and    cl,BYTE PTR [ecx+edi*1-0x8]
  414bb5:	in     eax,0x4d
  414bb7:	pop    eax
  414bb8:	fisubr DWORD PTR [esi-0x2e3f6ba3]
  414bbe:	dec    esi
  414bbf:	add    ah,BYTE PTR [ebp+0x6caccef]
  414bc5:	sub    edi,0x5d65b3ae
  414bcb:	out    dx,al
  414bcc:	mov    ds:0x288ccdc4,al
  414bd1:	sti    
  414bd2:	enter  0xf7e6,0xee
  414bd6:	xor    BYTE PTR [esi-0x9e937e0],ah
  414bdc:	addr16 mov ah,0xac
  414bdf:	(bad)  
  414be0:	push   ecx
  414be1:	xchg   ebp,eax
  414be2:	mov    bh,BYTE PTR [edi-0x1e]
  414be5:	ins    DWORD PTR es:[edi],dx
  414be6:	jne    0x414b8f
  414be8:	xor    ecx,esp
  414bea:	jae    0x414bbf
  414bec:	cdq    
  414bed:	and    eax,0x8b8bdb2b
  414bf2:	rcl    dh,1
  414bf4:	jne    0x414c0e
  414bf6:	daa    
  414bf7:	xlat   BYTE PTR ds:[ebx]
  414bf8:	jmp    0xf1546929
  414bfd:	inc    eax
  414bfe:	fsub   QWORD PTR [ebx+0x2f2e70e1]
  414c04:	leave  
  414c05:	mov    eax,0x3d183277
  414c0a:	lea    ebx,[esi+0xb0a5d46]
  414c10:	leave  
  414c11:	sbb    DWORD PTR [eax+0x61200e77],ecx
  414c17:	(bad)  
  414c18:	faddp  st(2),st
  414c1a:	dec    esi
  414c1b:	mov    WORD PTR [ebx],?
  414c1d:	inc    ebx
  414c1e:	scas   eax,DWORD PTR es:[edi]
  414c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c20:	enter  0xf831,0xc5
  414c24:	sub    eax,0x2eb87de
  414c29:	test   DWORD PTR [eax+0x4d0052b0],edi
  414c2f:	ins    BYTE PTR es:[edi],dx
  414c30:	push   ebx
  414c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c32:	or     DWORD PTR [esi],ebp
  414c34:	mov    al,cl
  414c36:	and    ah,BYTE PTR [ecx+0x75]
  414c39:	bound  ecx,QWORD PTR [edi+0x3e69c95]
  414c3f:	mov    cl,0x25
  414c41:	fidivr DWORD PTR [ebx-0xf]
  414c44:	xchg   DWORD PTR [ebx+0x16889c24],eax
  414c4a:	jmp    0x414c05
  414c4c:	xor    ebx,esi
  414c4e:	fbstp  TBYTE PTR [ebx+ebx*4+0x7c64b97e]
  414c55:	(bad)  
  414c56:	mov    al,0x1d
  414c58:	and    eax,0x9fb4c873
  414c5d:	loopne 0x414c09
  414c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c60:	cmp    DWORD PTR [edx+eax*2-0x10],eax
  414c64:	ret    0x7736
  414c67:	jmp    0x1bb:0xe46e72f9
  414c6e:	jg     0x414c65
  414c70:	ins    BYTE PTR es:[edi],dx
  414c71:	dec    esp
  414c72:	sub    esp,DWORD PTR [ecx]
  414c74:	scas   eax,DWORD PTR es:[edi]
  414c75:	loopne 0x414ce3
  414c77:	retf   0x49ba
  414c7a:	xchg   esp,eax
  414c7b:	loopne 0x414c48
  414c7d:	imul   ecx,edi,0xb2f079e0
  414c83:	push   ebp
  414c84:	push   ebp
  414c85:	mov    ecx,0x5a6f60c9
  414c8a:	cwde   
  414c8b:	cli    
  414c8c:	mov    WORD PTR [ebx],fs
  414c8e:	rcl    DWORD PTR [ecx],cl
  414c90:	jp     0x414cc5
  414c92:	retf   0x2b61
  414c95:	je     0x414c5d
  414c97:	and    BYTE PTR fs:[eax+eax*1-0x64],0x84
  414c9d:	arpl   WORD PTR [ebx+0x4c0269ae],dx
  414ca3:	cmp    dl,BYTE PTR [edi-0x5e19e30e]
  414ca9:	mov    eax,0x7ced6604
  414cae:	out    0x91,al
  414cb0:	aam    0xbc
  414cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb3:	(bad)  [ecx+ebx*1-0x2ff4f880]
  414cba:	xor    al,0x5a
  414cbc:	ficomp WORD PTR [esi]
  414cbe:	gs dec edx
  414cc0:	push   eax
  414cc1:	add    BYTE PTR [esi-0x4c],al
  414cc4:	lds    edx,FWORD PTR [eax+eiz*1-0x46]
  414cc8:	leave  
  414cc9:	cmp    al,0x1f
  414ccb:	push   edx
  414ccc:	pop    ecx
  414ccd:	ds mov edi,0x7076cee4
  414cd3:	push   esp
  414cd4:	sub    esp,DWORD PTR [esi+0x68262855]
  414cda:	inc    eax
  414cdb:	and    al,ch
  414cdd:	push   ebp
  414cde:	xchg   edx,eax
  414cdf:	lods   al,BYTE PTR ds:[esi]
  414ce0:	imul   edx,DWORD PTR [edx+ebx*4-0xc6cc11c],0xffffff8a
  414ce8:	push   0xffffff9d
  414cea:	test   eax,0x34cfcbbd
  414cef:	dec    eax
  414cf0:	ror    edi,1
  414cf2:	shr    BYTE PTR es:[eax],cl
  414cf5:	mov    dh,0x17
  414cf7:	(bad)  
  414cf9:	fwait
  414cfa:	loop   0x414d0c
  414cfc:	fild   QWORD PTR [esi+0x15]
  414cff:	jne    0x414d7c
  414d01:	cdq    
  414d02:	sub    dl,BYTE PTR [ecx+0x7d277e49]
  414d08:	and    DWORD PTR [edx],ebx
  414d0a:	jmp    0x46c25c6f
  414d0f:	pop    esi
  414d10:	push   eax
  414d11:	lea    esi,[edx-0x5]
  414d14:	pop    ebx
  414d15:	(bad)  
  414d16:	mov    edx,0x192d0b6a
  414d1b:	pop    edi
  414d1c:	pushf  
  414d1d:	(bad)  
  414d1e:	je     0x414ca0
  414d20:	xchg   ebx,eax
  414d21:	lods   al,BYTE PTR ds:[esi]
  414d22:	sbb    al,0xe9
  414d24:	test   DWORD PTR [edx+0x50a6452a],esp
  414d2a:	inc    eax
  414d2b:	push   ebp
  414d2c:	mov    ds:0x265bc894,al
  414d31:	cwde   
  414d32:	sar    DWORD PTR [ecx],1
  414d34:	mov    ebx,0x952b9384
  414d39:	mov    ebp,0x5592606d
  414d3e:	adc    DWORD PTR [ebx-0x77a62b4e],edx
  414d44:	jecxz  0x414cf9
  414d46:	das    
  414d47:	adc    ah,BYTE PTR [esi-0x47221d51]
  414d4d:	test   BYTE PTR ds:0xbae16e53,0x64
  414d54:	inc    ecx
  414d55:	fscale 
  414d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d58:	xchg   esi,eax
  414d59:	pop    ds
  414d5a:	dec    edx
  414d5b:	sbb    eax,0x296e31a1
  414d60:	rol    DWORD PTR [ebp-0xf69d7f3],1
  414d66:	mov    ecx,0x9a40cc0f
  414d6b:	test   edx,edi
  414d6d:	stos   DWORD PTR es:[edi],eax
  414d6e:	mov    al,ds:0xfb9093d8
  414d73:	push   edi
  414d74:	mov    ebp,0x13012005
  414d79:	lods   eax,DWORD PTR ds:[esi]
  414d7a:	(bad)  
  414d7b:	jmp    0x414d69
  414d7d:	sahf   
  414d7e:	popa   
  414d7f:	push   esp
  414d80:	push   0xffffffb8
  414d82:	jnp    0x414de1
  414d84:	fnstsw ax
  414d86:	sbb    eax,0x2f2733db
  414d8b:	icebp  
  414d8c:	jmp    0x414d8e
  414d8e:	fiadd  DWORD PTR [esi]
  414d90:	jg     0x414d6c
  414d92:	adc    dh,BYTE PTR [eax+0x5b33f80a]
  414d98:	sbb    ecx,DWORD PTR [edi-0x47d7975f]
  414d9e:	xor    eax,0x7fbbdc31
  414da3:	adc    ah,cl
  414da5:	or     al,0x87
  414da7:	clc    
  414da8:	pop    edi
  414da9:	sbb    eax,0xee50afa0
  414dae:	pushf  
  414daf:	jbe    0x414e27
  414db1:	sbb    ebp,ecx
  414db3:	out    0x79,eax
  414db5:	xor    eax,0x882ff613
  414dba:	cli    
  414dbb:	inc    ebx
  414dbc:	mov    ebx,0x3a277351
  414dc1:	lods   al,BYTE PTR ds:[esi]
  414dc2:	pop    ebp
  414dc3:	clc    
  414dc4:	push   esp
  414dc5:	add    DWORD PTR [ebp+0x50],edx
  414dc8:	nop
  414dc9:	pop    es
  414dca:	sbb    ch,ah
  414dcc:	dec    edx
  414dcd:	fistp  WORD PTR [ebx+0x3fd63702]
  414dd3:	xlat   BYTE PTR ds:[ebx]
  414dd4:	imul   ecx,DWORD PTR [ebx-0x38],0x9d55998d
  414ddb:	jne    0x414d8b
  414ddd:	sbb    eax,0x858d85ea
  414de2:	in     al,0x41
  414de4:	cmp    eax,0x634db6e6
  414de9:	xchg   esi,edx
  414deb:	test   al,0x68
  414ded:	std    
  414dee:	mov    esp,0xc45cff04
  414df3:	dec    esp
  414df4:	xor    al,0x22
  414df6:	outs   dx,BYTE PTR ds:[esi]
  414df7:	sub    dl,BYTE PTR [edx-0x7ac1b701]
  414dfd:	test   ebx,ecx
  414dff:	add    al,0xfe
  414e01:	loopne 0x414e6a
  414e03:	ds je  0x414dc6
  414e06:	std    
  414e07:	js     0x414dbf
  414e09:	and    al,0xad
  414e0b:	sbb    DWORD PTR [ecx],edx
  414e0d:	sbb    al,0x3
  414e0f:	xor    bl,BYTE PTR [edx-0x45]
  414e12:	stos   DWORD PTR es:[edi],eax
  414e13:	mov    BYTE PTR [esi],ch
  414e15:	pop    esi
  414e16:	gs cmp eax,0xef46496e
  414e1c:	neg    BYTE PTR [ecx-0x1449f6bd]
  414e22:	sub    esi,edx
  414e24:	(bad)  
  414e25:	les    esi,FWORD PTR [edx-0x22]
  414e28:	mov    ebp,fs
  414e2a:	xchg   DWORD PTR [edx-0x33],edi
  414e2d:	mov    eax,ds:0x2528cef
  414e32:	(bad)  
  414e33:	adc    ebx,esp
  414e35:	xchg   ecx,eax
  414e36:	mov    ch,0xc
  414e38:	mov    bl,0xc6
  414e3a:	fs call 0xbfe3:0x35601ecc
  414e42:	and    ecx,edi
  414e44:	dec    ecx
  414e45:	sub    al,0x6
  414e47:	lds    ebx,FWORD PTR [edx+eax*4]
  414e4a:	or     esp,DWORD PTR [esi+eax*2-0x10127105]
  414e51:	jb     0x414e3d
  414e53:	cld    
  414e54:	jmp    0x6702:0x6143b88a
  414e5b:	add    DWORD PTR [ebp+ecx*8+0x1c1f21a],edi
  414e62:	imul   DWORD PTR [ecx-0x2d]
  414e65:	push   ss
  414e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e67:	fcmove st,st(3)
  414e69:	push   ecx
  414e6a:	mov    ch,0x2d
  414e6c:	or     edi,DWORD PTR [ebx+0x36]
  414e6f:	fimul  DWORD PTR [eax]
  414e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e72:	(bad)  
  414e73:	sti    
  414e74:	rcl    BYTE PTR [esi+edi*1-0x2adf5572],cl
  414e7b:	sub    al,0x13
  414e7d:	cld    
  414e7e:	retf   
  414e7f:	mov    ebp,edi
  414e81:	pop    ss
  414e82:	icebp  
  414e83:	into   
  414e84:	ins    BYTE PTR es:[edi],dx
  414e85:	cdq    
  414e86:	and    DWORD PTR ds:[ebx-0x48],esp
  414e8a:	xor    al,0x77
  414e8c:	inc    ebx
  414e8d:	out    0x2d,eax
  414e8f:	inc    esi
  414e90:	or     edx,DWORD PTR ds:0xabd7f68c
  414e96:	pop    esi
  414e97:	xchg   ecx,eax
  414e98:	fdiv   DWORD PTR [esi+0x24528e5c]
  414e9e:	out    dx,eax
  414e9f:	fs in  al,0x70
  414ea2:	cdq    
  414ea3:	jg     0x414f24
  414ea5:	retf   
  414ea6:	and    ch,BYTE PTR [eax+edx*4]
  414ea9:	(bad)  
  414eaa:	pop    esp
  414eab:	cmp    eax,0x7d34274a
  414eb1:	pop    ebx
  414eb2:	sti    
  414eb3:	stc    
  414eb4:	and    ah,BYTE PTR [ebp-0x17bccf43]
  414eba:	inc    esi
  414ebb:	sti    
  414ebc:	xchg   edx,eax
  414ebd:	sbb    DWORD PTR [edi-0x4d],esp
  414ec0:	enter  0x5b22,0xdd
  414ec4:	ret    0xddbc
  414ec7:	js     0x414e50
  414ec9:	jp     0x414ee8
  414ecb:	adc    dl,dh
  414ecd:	push   esi
  414ece:	scas   eax,DWORD PTR es:[edi]
  414ecf:	xchg   esi,ecx
  414ed1:	jmp    FWORD PTR [edi-0x24b750ca]
  414ed7:	add    eax,0x30a42a01
  414edc:	add    al,0xe0
  414ede:	mov    eax,0x472071bb
  414ee3:	and    DWORD PTR [esi+ecx*4-0x55cdea5c],eax
  414eea:	jp     0x414f1b
  414eec:	mov    bh,0x90
  414eee:	sub    dl,al
  414ef0:	jecxz  0x414ee1
  414ef2:	xor    DWORD PTR [esi],esi
  414ef4:	ss hlt 
  414ef6:	pop    eax
  414ef7:	xchg   ebp,eax
  414ef8:	inc    ecx
  414ef9:	jge    0x414ea2
  414efb:	fsubr  QWORD PTR [ebx+0x5f]
  414efe:	jno    0x414f41
  414f00:	pop    ebx
  414f01:	cmp    ebx,ecx
  414f03:	mov    esi,0xc89b9a97
  414f08:	and    cl,dl
  414f0a:	js     0x414e90
  414f0c:	cmp    DWORD PTR [edi+0xd30a080],edi
  414f12:	xchg   esp,eax
  414f13:	dec    ebp
  414f14:	xor    BYTE PTR [edx-0x4d],al
  414f17:	xor    ah,BYTE PTR [esi]
  414f19:	frstor [esi+0x40]
  414f1c:	jecxz  0x414f55
  414f1e:	in     al,dx
  414f1f:	dec    esp
  414f20:	out    0x5a,eax
  414f22:	dec    esp
  414f23:	sbb    eax,0x4bd46133
  414f28:	adc    al,0xc7
  414f2a:	mov    bh,0x6f
  414f2c:	(bad)  
  414f2e:	in     eax,dx
  414f2f:	adc    DWORD PTR [ebx+0x7ebfbda8],edx
  414f35:	ret    0x3d78
  414f38:	fwait
  414f39:	(bad)  
  414f3a:	sub    ch,BYTE PTR ds:0xdcb0eebf
  414f40:	jnp    0x414f34
  414f42:	dec    eax
  414f43:	mov    WORD PTR [edx],ds
  414f45:	cmp    ecx,DWORD PTR [ecx+0x62a636cc]
  414f4b:	aaa    
  414f4c:	in     al,0x62
  414f4e:	adc    BYTE PTR [esi+0xc],cl
  414f51:	add    dl,cl
  414f53:	rcr    BYTE PTR [eax+0x9],0xef
  414f57:	sahf   
  414f58:	push   cs
  414f59:	imul   eax,ebp,0x78d210a4
  414f5f:	data16 mov ah,0x3e
  414f62:	fistp  QWORD PTR [ebx-0x5c]
  414f65:	adc    eax,0x13e7cb0e
  414f6a:	cmp    eax,0x663306c8
  414f6f:	pop    eax
  414f70:	ret    0x6c2f
  414f73:	push   0x4305cb42
  414f78:	cs cmc 
  414f7a:	fwait
  414f7b:	mov    dl,0x74
  414f7d:	aas    
  414f7e:	sub    BYTE PTR [ebp+0x4e],al
  414f81:	retf   
  414f82:	xor    esi,DWORD PTR ds:0x74609ce5
  414f89:	stos   DWORD PTR es:[edi],eax
  414f8a:	adc    ebx,DWORD PTR [ebx-0x7]
  414f8d:	imul   ecx,DWORD PTR [eax],0x31627e32
  414f93:	loopne 0x415008
  414f95:	cmp    eax,0xb93b2ba2
  414f9a:	mov    bl,0x97
  414f9c:	cs mov edx,0xdc984d5a
  414fa2:	int    0xf4
  414fa4:	std    
  414fa5:	sahf   
  414fa6:	ss outs dx,BYTE PTR es:[esi]
  414fa9:	mov    dl,BYTE PTR [edx+0x46]
  414fac:	mov    esi,0x5faf657b
  414fb1:	fild   QWORD PTR [ecx-0xbb40ebe]
  414fb7:	or     DWORD PTR [edx+0x69],esp
  414fba:	data16 (bad) 
  414fbc:	mov    dl,0xb6
  414fbe:	out    dx,eax
  414fbf:	lods   al,BYTE PTR ds:[esi]
  414fc0:	lods   al,BYTE PTR ds:[esi]
  414fc1:	int    0x4c
  414fc3:	out    0x55,al
  414fc5:	lds    ebp,FWORD PTR [ecx+0x36]
  414fc8:	jle    0x414fb0
  414fca:	sbb    ch,BYTE PTR [edx-0x20]
  414fcd:	arpl   WORD PTR [ecx-0x6f],bp
  414fd0:	push   eax
  414fd1:	fldenv [eax]
  414fd3:	test   eax,0x59f3c6cc
  414fd9:	sub    DWORD PTR [edx],edi
  414fdb:	das    
  414fdc:	cmovs  esp,DWORD PTR [esi+0x504c4a8f]
  414fe3:	adc    eax,0x807ade60
  414fe8:	sbb    ebp,DWORD PTR [eax]
  414fea:	jecxz  0x415028
  414fec:	mov    ds:0x79f64fba,eax
  414ff1:	and    esp,DWORD PTR [eax]
  414ff3:	test   DWORD PTR ds:0xe2a01292,ecx
  414ff9:	and    bh,0x13
  414ffc:	jmp    0xee217056
  415001:	sbb    eax,0x7f7967d8
  415006:	cwde   
  415007:	and    DWORD PTR [edx-0x4349421c],ebx
  41500d:	sbb    BYTE PTR [ecx],bh
  41500f:	imul   ecx,DWORD PTR [edi-0x2e],0xfffffff0
  415013:	push   eax
  415014:	xchg   edx,eax
  415015:	adc    eax,0x2ba66672
  41501a:	test   BYTE PTR es:[ebx+0x54],bh
  41501e:	dec    edi
  41501f:	cmp    dl,BYTE PTR [edx]
  415021:	mov    bh,BYTE PTR [esi-0x6b]
  415024:	lahf   
  415025:	test   eax,0xd1eec232
  41502a:	pushf  
  41502b:	pop    ss
  41502c:	adc    al,0xf2
  41502e:	mov    ebp,0x57c0e5a9
  415033:	ins    DWORD PTR es:[edi],dx
  415034:	and    ebp,DWORD PTR [esi+0x8ee3928]
  41503a:	and    DWORD PTR [edi-0x6a],ebp
  41503d:	test   al,bl
  41503f:	cmp    DWORD PTR [ebp+0x2a],edi
  415042:	mov    cl,0x35
  415044:	cmp    al,BYTE PTR [edx]
  415046:	lea    ecx,[eax+0x3e]
  415049:	push   ebx
  41504a:	jge    0x41507e
  41504c:	adc    edi,ebx
  41504e:	inc    ebx
  41504f:	sub    al,0xf4
  415051:	xor    BYTE PTR [edx],0xca
  415054:	aad    0x2d
  415056:	or     eax,0x3619c7ae
  41505b:	outs   dx,BYTE PTR ds:[esi]
  41505c:	pop    edi
  41505d:	jge    0x415042
  41505f:	mov    ah,0xf2
  415061:	mov    ecx,0x4bd73114
  415066:	xchg   edx,eax
  415067:	xlat   BYTE PTR ds:[ebx]
  415068:	in     al,0x65
  41506a:	nop
  41506b:	rol    DWORD PTR [ebx+0xc],cl
  41506e:	mov    cl,0x28
  415070:	push   edi
  415071:	mov    ?,WORD PTR [edi]
  415073:	call   0xf3e2:0xebbb3aac
  41507a:	out    dx,eax
  41507b:	in     eax,dx
  41507c:	sub    bh,BYTE PTR [edx+0x49]
  41507f:	stc    
  415080:	shl    DWORD PTR [eax],cl
  415082:	mov    edi,0x15230b60
  415087:	push   ebp
  415088:	(bad)  
  41508a:	pop    ebx
  41508b:	add    ecx,DWORD PTR [edx]
  41508d:	loop   0x41503d
  41508f:	stos   BYTE PTR es:[edi],al
  415090:	jb     0x4150d5
  415092:	ins    BYTE PTR es:[edi],dx
  415093:	imul   esp,DWORD PTR [ebx],0x1e
  415096:	retf   0xf8f5
  415099:	push   ss
  41509a:	(bad)  [ebx]
  41509c:	dec    edi
  41509d:	sbb    eax,0x3dc4472
  4150a2:	enter  0x442f,0xd2
  4150a6:	cmp    esp,0xffffffc8
  4150a9:	cmp    BYTE PTR [edx+0x2c],al
  4150ac:	fdiv   QWORD PTR [edi-0x33]
  4150af:	inc    edx
  4150b0:	out    0x35,al
  4150b2:	add    BYTE PTR [edx],ah
  4150b4:	retf   
  4150b5:	loop   0x41509e
  4150b7:	pop    ds
  4150b8:	(bad)  [edx+ecx*2-0x478f82e]
  4150bf:	dec    esi
  4150c0:	cmp    bh,BYTE PTR [esi]
  4150c2:	sbb    eax,0x927ab0b9
  4150c7:	and    edi,DWORD PTR [eax]
  4150c9:	add    al,BYTE PTR [edx+0x3ae623af]
  4150cf:	fcmovne st,st(7)
  4150d1:	sbb    edx,DWORD PTR [ecx-0x33]
  4150d4:	test   DWORD PTR [ecx-0x7f],edx
  4150d7:	cli    
  4150d8:	mov    DWORD PTR [edi],edi
  4150da:	int3   
  4150db:	or     DWORD PTR [edx-0x7],edi
  4150de:	jge    0x41506b
  4150e0:	jle    0x415100
  4150e2:	outs   dx,DWORD PTR ds:[esi]
  4150e3:	mov    al,ds:0xcab37d8d
  4150e8:	out    dx,al
  4150e9:	sbb    DWORD PTR [ecx],0xffffffde
  4150ec:	adc    dl,dh
  4150ee:	in     al,dx
  4150ef:	inc    eax
  4150f0:	call   0xa1100a
  4150f5:	dec    edi
  4150f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f7:	(bad)  
  4150f8:	ins    DWORD PTR es:[edi],dx
  4150f9:	cmp    DWORD PTR [ecx+0x4b89ec16],eax
  4150ff:	ins    BYTE PTR es:[edi],dx
  415100:	and    eax,0x1c7529f5
  415105:	push   ss
  415106:	int3   
  415107:	push   ds
  415108:	push   ebp
  415109:	ins    BYTE PTR es:[edi],dx
  41510a:	mov    ds:0x576ba511,al
  41510f:	or     al,BYTE PTR [edx]
  415111:	sbb    DWORD PTR [esi],esi
  415113:	cmp    ecx,DWORD PTR [ecx]
  415115:	jne    0x415140
  415117:	(bad)
  41511b:	mov    edi,DWORD PTR [esi*8+0x69c9b68d]
  415122:	test   eax,0x4786cffb
  415127:	cli    
  415128:	es dec ebx
  41512a:	mov    eax,ds:0xa9dbac45
  41512f:	daa    
  415130:	mov    edi,0x62d83654
  415135:	push   ecx
  415136:	inc    edx
  415137:	jnp    0x41517c
  415139:	ret    0x7565
  41513c:	or     al,0x3a
  41513e:	mov    al,0x16
  415140:	loope  0x41517d
  415142:	sbb    eax,0x9b68fb30
  415147:	hlt    
  415148:	or     BYTE PTR [ebp+0x55],ch
  41514b:	(bad)  
  41514c:	sahf   
  41514d:	(bad)  
  41514e:	pop    ebp
  41514f:	loop   0x41510c
  415151:	mov    eax,0x7b9bc905
  415156:	pop    ebx
  415157:	inc    edx
  415158:	push   ecx
  415159:	jmp    0xe893:0x9cf2acf3
  415160:	cld    
  415161:	repz rcl BYTE PTR [edi],1
  415164:	sar    BYTE PTR [esi+0x27548b05],1
  41516a:	jbe    0x41512d
  41516c:	push   0xffffff99
  41516e:	sub    eax,0xabe2d87
  415173:	or     DWORD PTR [edx-0x30],esp
  415176:	mov    ds:0xe83503e8,al
  41517b:	xchg   edx,eax
  41517c:	shl    BYTE PTR [eax-0x13ab6db0],0x32
  415183:	leave  
  415184:	outs   dx,DWORD PTR ds:[esi]
  415185:	adc    eax,0xb2ec8451
  41518a:	jp     0x41512b
  41518c:	shl    cl,1
  41518e:	dec    esi
  41518f:	xchg   BYTE PTR [ebx-0x71],bl
  415192:	cmp    eax,DWORD PTR [edi]
  415194:	sbb    al,0xea
  415196:	mov    ds:0xa5f1af50,eax
  41519b:	sbb    ebp,DWORD PTR [ebp+0x26f8cab]
  4151a1:	sub    eax,0xfffffff3
  4151a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a5:	(bad)  
  4151a6:	leave  
  4151a7:	ret    
  4151a8:	inc    ebp
  4151a9:	fisubr WORD PTR [edi]
  4151ab:	xchg   ecx,eax
  4151ac:	cmp    edx,DWORD PTR [eax]
  4151ae:	bnd jle 0x415195
  4151b1:	sbb    eax,0x66ed8fb1
  4151b6:	xchg   DWORD PTR [esi],esi
  4151b8:	dec    edi
  4151b9:	dec    esi
  4151ba:	imul   edi,DWORD PTR [edx],0x7ca5b768
  4151c0:	mov    BYTE PTR [esi+0xcc53bdb],0x0
  4151c7:	es pop ebp
  4151c9:	push   0xffffffe2
  4151cb:	jbe    0x415169
  4151cd:	adc    DWORD PTR [ebx+0x60],esp
  4151d0:	in     al,dx
  4151d1:	xlat   BYTE PTR ds:[ebx]
  4151d2:	int    0x8
  4151d4:	pop    esp
  4151d5:	xchg   ebp,eax
  4151d6:	js     0x41521b
  4151d8:	not    DWORD PTR ds:0xd324a188
  4151de:	lods   al,BYTE PTR ds:[esi]
  4151df:	mov    al,0x1b
  4151e1:	in     eax,dx
  4151e2:	jge    0x4151fa
  4151e4:	cli    
  4151e5:	js     0x415180
  4151e7:	jmp    0x414fa133
  4151ec:	loopne 0x41523f
  4151ee:	dec    ebx
  4151ef:	and    esi,ecx
  4151f1:	jl     0x4151a4
  4151f3:	psrad  mm0,QWORD PTR [ecx+0x54]
  4151f7:	mov    ecx,0xd755b375
  4151fc:	fwait
  4151fd:	les    esi,FWORD PTR ds:0x9b8f211e
  415203:	call   0x434f:0xcfc50c22
  41520a:	(bad)  
  41520b:	int3   
  41520c:	mov    esi,0xe8c9105a
  415211:	ja     0x4151c5
  415213:	cdq    
  415214:	xor    esp,DWORD PTR [edx+0x364bd32e]
  41521a:	pop    eax
  41521b:	adc    eax,0x2d19bf59
  415220:	retf   
  415221:	inc    ecx
  415222:	push   eax
  415223:	jl     0x41527c
  415225:	les    ebp,FWORD PTR [eax+0x200fbcf6]
  41522b:	push   ss
  41522c:	fwait
  41522d:	call   0x6e64:0xc3e2955c
  415234:	fadd   QWORD PTR [ecx-0x2071378]
  41523a:	jne    0x4151d7
  41523c:	and    ch,dl
  41523e:	push   ds
  41523f:	bnd jae 0x41524c
  415242:	sub    ch,BYTE PTR [ebp+0x75]
  415245:	push   esi
  415246:	mov    edx,0x2cf7eb38
  41524b:	jle    0x4152ab
  41524d:	or     eax,0xdefc57ac
  415252:	inc    edi
  415253:	xchg   ecx,eax
  415254:	dec    edi
  415255:	sub    bl,BYTE PTR [ebp+0x5325fc43]
  41525b:	pop    es
  41525c:	fldcw  WORD PTR [eax]
  41525e:	mov    ebp,0x965dd290
  415263:	test   DWORD PTR [eax+0x66568863],ecx
  415269:	scas   eax,DWORD PTR es:[edi]
  41526a:	pop    ebp
  41526b:	xor    eax,0xb7c1b4a
  415270:	dec    BYTE PTR [ebp-0x61]
  415273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415274:	jge    0x4152f2
  415276:	inc    ebx
  415277:	jo     0x41520c
  415279:	pop    ds
  41527a:	frstor [eax+0x3e8a50f3]
  415280:	out    0x78,eax
  415282:	pop    ebx
  415283:	mov    ebx,0xac71c548
  415288:	jp     0x415286
  41528a:	xor    eax,0x188e9824
  41528f:	ret    
  415290:	sub    DWORD PTR [ecx+0x5e],edx
  415293:	aad    0xf9
  415295:	lahf   
  415296:	(bad)  
  415297:	cmc    
  415298:	mov    ds:0x3f2ba7ae,eax
  41529d:	jne    0x4152f9
  41529f:	push   esp
  4152a0:	or     ecx,esp
  4152a2:	aas    
  4152a3:	sbb    ebx,DWORD PTR [edi-0x2461f808]
  4152a9:	icebp  
  4152aa:	popa   
  4152ab:	add    BYTE PTR [ebx],dh
  4152ad:	in     al,0xb3
  4152af:	lock add edi,DWORD PTR ds:0x45212a59
  4152b6:	int    0x33
  4152b8:	push   ds
  4152b9:	enter  0x778e,0x51
  4152bd:	int3   
  4152be:	sub    al,0x78
  4152c0:	mov    BYTE PTR [ecx-0x326a96a0],0x48
  4152c7:	and    ah,dh
  4152c9:	test   DWORD PTR [ebp-0x4ed2efab],esp
  4152cf:	(bad)  
  4152d0:	jp     0x41529c
  4152d2:	xchg   esp,eax
  4152d3:	mov    bh,0xf0
  4152d5:	pop    eax
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0x8ddcaa38
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0x5a18eaa2
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	xchg   BYTE PTR [esi+0x304473e4],dl
  41550d:	xlat   BYTE PTR ds:[ebx]
  41550e:	(bad)  
  41550f:	cmp    cl,BYTE PTR [ebx+0x345684dc]
  415515:	int3   
  415516:	je     0x4154e3
  415518:	inc    edi
  415519:	xor    bh,dl
  41551b:	(bad)  
  41551c:	ds mov ebx,esp
  41551f:	les    ebp,FWORD PTR [ecx+0x7374cccb]
  415525:	inc    edi
  415526:	xor    bh,dl
  415528:	(bad)  
  415529:	ds mov ebx,esp
  41552c:	test   BYTE PTR [ecx+0x7374cccb],ch
  415532:	inc    edi
  415533:	xor    bh,dl
  415535:	(bad)  
  415536:	ds mov ebx,esp
  415539:	test   BYTE PTR [ecx+0x7374cccb],ch
  41553f:	inc    edi
  415540:	xor    bh,dl
  415542:	(bad)  
  415543:	ss mov bl,ah
  415546:	test   BYTE PTR [edi+0x737a76d4],ah
  41554c:	repz cmp DWORD PTR [edx],ebx
  41554f:	out    0x86,al
  415551:	mov    dl,BYTE PTR [eax-0x5b6077b7]
  415557:	sbb    eax,0xa5406700
  41555c:	test   al,0x59
  41555e:	stc    
  41555f:	mov    ebp,0xada889e9
  415564:	sbb    bl,BYTE PTR ds:0xa5f74428
  41556a:	pop    ebx
  41556b:	stos   DWORD PTR es:[edi],eax
  41556c:	scas   al,BYTE PTR es:[edi]
  41556d:	icebp  
  41556e:	(bad)  
  41556f:	jmp    0x415516
  415571:	sbb    dl,BYTE PTR [ebx+0x3]
  415574:	jg     0x4154fa
  415576:	out    0x53,eax
  415578:	in     al,0xb8
  41557a:	loope  0x415503
  41557c:	mov    cl,0x7e
  41557f:	push   edi
  415580:	inc    edi
  415581:	xor    bh,dl
  415583:	(bad)  
  415584:	ds mov ebx,esp
  415587:	(bad)  
  415588:	data16 fld QWORD PTR [edx+0x4a]
  41558c:	fnstsw WORD PTR [edi]
  41558e:	in     eax,dx
  41558f:	jmp    0xe2979bfd
  415594:	sub    dl,cl
  415596:	push   ss
  415597:	jmp    0x12dbeae3
  41559c:	jns    0x41555d
  41559e:	jecxz  0x41554e
  4155a0:	out    dx,eax
  4155a1:	push   esi
  4155a2:	je     0x415618
  4155a4:	bound  ecx,QWORD PTR [esi+ebp*4]
  4155a7:	bound  eax,QWORD PTR [ebx]
  4155a9:	add    al,0x1a
  4155ab:	sub    esp,DWORD PTR ds:0x13f859a4
  4155b1:	pop    ds
  4155b2:	test   eax,0xa48e948
  4155b7:	lock call 0x7f4572d
  4155bd:	mov    bl,0x11
  4155bf:	inc    ebx
  4155c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c1:	lods   al,BYTE PTR ds:[esi]
  4155c2:	in     eax,dx
  4155c3:	repnz imul eax,DWORD PTR [esi+0x56],0x16d02ae2
  4155cb:	test   ebx,ebx
  4155cd:	or     ebx,DWORD PTR [edx-0x1c52a60e]
  4155d3:	mov    ebx,0xee74fc72
  4155d8:	jmp    DWORD PTR [ebx-0x5061c152]
  4155de:	sbb    bl,BYTE PTR [ebx]
  4155e0:	mov    eax,0x6596593e
  4155e5:	mov    ah,0xa9
  4155e7:	push   esi
  4155e8:	je     0x4155bf
  4155ea:	or     bh,al
  4155ec:	nop
  4155ed:	repz add esi,edx
  4155f0:	shr    BYTE PTR [eax+0x3fdd4aa4],0xed
  4155f7:	xlat   BYTE PTR ds:[ebx]
  4155f8:	(bad)  
  4155f9:	ds mov ebx,esp
  4155fc:	test   BYTE PTR [ecx+0x7374cccb],ch
  415602:	inc    edi
  415603:	xor    bh,dl
  415605:	(bad)  
  415606:	ds mov ebx,esp
  415609:	test   BYTE PTR [ecx+0x7374cccb],ch
  41560f:	pop    ss
  415610:	jne    0x4155e9
  415612:	(bad)  
  415613:	jb     0x41559f
  415615:	fild   WORD PTR [edi+ecx*8+0x733b8185]
  41561c:	inc    edi
  41561d:	xor    bh,dl
  41561f:	(bad)  
  415620:	ds mov ebx,esp
  415623:	fs test eax,0x727fcdc9
  415629:	dec    ebp
  41562a:	xor    bh,dl
  41562c:	and    eax,0xdc8b3a
  415631:	scas   eax,DWORD PTR es:[edi]
  415632:	retf   
  415633:	int3   
  415634:	je     0x4156a9
  415636:	inc    edi
  415637:	jae    0x4156a3
  415639:	(bad)  
  41563a:	ds mov ecx,esp
  41563d:	test   BYTE PTR [ecx+0x7371cccb],ch
  415643:	inc    edi
  415644:	xor    BYTE PTR [edi-0x2364c139],dl
  41564a:	test   BYTE PTR [ecx+0x7674ccc9],ch
  415650:	inc    edi
  415651:	xor    edi,edx
  415653:	(bad)  
  415654:	ds mov ebx,esp
  415657:	sub    DWORD PTR [ecx+0x7374ccca],0xf7d73047
  415661:	xor    cl,BYTE PTR [ebx-0x34567f24]
  415667:	(bad)  
  415668:	mov    dh,BYTE PTR [edi+0x47]
  41566b:	xor    dl,bh
  41566d:	xchg   DWORD PTR [edi-0x566b2375],edi
  415673:	retf   
  415674:	fdiv   QWORD PTR [ebx+esi*2+0x47]
  415678:	xor    bh,al
  41567a:	(bad)  
  41567b:	fadd   QWORD PTR ds:[ecx+ebp*4+0x6374cccb]
  415684:	inc    edi
  415685:	xor    bh,dl
  415687:	(bad)  
  415688:	ds mov ebx,esp
  41568b:	test   BYTE PTR [ecx+0x7370cccb],ch
  415691:	dec    ebx
  415692:	xor    BYTE PTR [esi-0x2374c13c],cl
  415698:	inc    esp
  415699:	mov    ds:0x734b99cb,al
  41569e:	inc    edi
  41569f:	xor    bh,dl
  4156a1:	(bad)  
  4156a2:	ds mov ebx,esp
  4156a5:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156ab:	inc    edi
  4156ac:	xor    bh,dl
  4156ae:	(bad)  
  4156af:	ds stos DWORD PTR es:[edi],eax
  4156b1:	rol    BYTE PTR [ecx+esi*4+0x7374cccb],1
  4156b8:	inc    edi
  4156b9:	xor    bh,dl
  4156bb:	(bad)  
  4156bc:	ds mov ebx,esp
  4156bf:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156c5:	inc    edi
  4156c6:	xor    bh,dl
  4156c8:	(bad)  
  4156c9:	ds mov ebx,esp
  4156cc:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156d2:	inc    edi
  4156d3:	xor    bh,dl
  4156d5:	(bad)  
  4156d6:	ds mov ebx,esp
  4156d9:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156df:	inc    edi
  4156e0:	xor    bh,dl
  4156e2:	(bad)  
  4156e3:	ds mov ebx,esp
  4156e6:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156ec:	inc    edi
  4156ed:	xor    bh,dl
  4156ef:	(bad)  
  4156f0:	ds mov ebx,esp
  4156f3:	test   BYTE PTR [ecx+0x7374cccb],ch
  4156f9:	inc    edi
  4156fa:	xor    bh,dl
  4156fc:	(bad)  
  4156fd:	ds mov ebx,esp
  415700:	test   BYTE PTR [ecx+0x7374cccb],ch
  415706:	inc    edi
  415707:	push   ds
  415708:	mov    ds:0xdcff46a2,eax
  41570d:	test   BYTE PTR [ecx+0x737f7ccb],ch
  415713:	inc    edi
  415714:	and    bh,dl
  415716:	(bad)  
  415717:	ds in  eax,dx
  415719:	fadd   DWORD PTR [ecx+ebp*4+0x2374cccf]
  415720:	add    dh,BYTE PTR [ebx-0x1b]
  415723:	xchg   ebx,eax
  415724:	jno    0x4156b1
  415726:	fadd   QWORD PTR [ecx+ebp*4+0x7354cccb]
  41572d:	inc    edi
  41572e:	sar    cl,1
  415730:	mov    ch,0x4d
  415732:	stc    
  415733:	mov    edi,0xcccba984
  415738:	adc    al,0x73
  41573a:	inc    edi
  41573b:	xor    BYTE PTR [edi],dl
  41573d:	int3   
  41573e:	mov    ecx,DWORD PTR ds:[esi-0x5934567c]
  415745:	jo     0x4157ba
  415747:	inc    edi
  415748:	xor    bh,dl
  41574a:	(bad)  
  41574b:	ds mov ebx,esp
  41574e:	test   BYTE PTR [ecx+0x5374cccb],ch
  415754:	inc    edi
  415755:	xor    BYTE PTR [edi],dh
  415757:	jmp    0xebf245a8
  41575c:	retf   0xcccb
  41575f:	je     0x4157d2
  415761:	inc    edi
  415762:	xor    bh,dl
  415764:	out    0x32,eax
  415766:	mov    ebx,esp
  415768:	xchg   BYTE PTR [ecx+0x77c8cccb],ch
  41576e:	inc    edi
  41576f:	xor    bh,dl
  415771:	(bad)  
  415772:	ds mov ebx,esp
  415775:	test   BYTE PTR [ecx+0x7374cccb],ch
  41577b:	pop    es
  41577c:	xor    bh,dl
  41577e:	pop    es
  41577f:	ds mov ebx,esp
  415782:	test   BYTE PTR [ecx+0x7374cccb],ch
  415788:	inc    edi
  415789:	xor    bh,dl
  41578b:	(bad)  
  41578c:	ds mov ebx,esp
  41578f:	test   BYTE PTR [ecx+0x7374cccb],ch
  415795:	inc    edi
  415796:	xor    bh,dl
  415798:	(bad)  
  415799:	ds mov ebx,esp
  41579c:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157a2:	inc    edi
  4157a3:	xor    bh,dl
  4157a5:	(bad)  
  4157a6:	ds mov ebx,esp
  4157a9:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157af:	inc    edi
  4157b0:	xor    bh,dl
  4157b2:	(bad)  
  4157b3:	ds mov ebx,esp
  4157b6:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157bc:	inc    edi
  4157bd:	xor    bh,dl
  4157bf:	(bad)  
  4157c0:	ds mov ebx,esp
  4157c3:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157c9:	inc    edi
  4157ca:	xor    bh,dl
  4157cc:	(bad)  
  4157cd:	ds mov ebx,esp
  4157d0:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157d6:	inc    edi
  4157d7:	xor    bh,dl
  4157d9:	(bad)  
  4157da:	ds mov ebx,esp
  4157dd:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157e3:	inc    edi
  4157e4:	xor    bh,dl
  4157e6:	(bad)  
  4157e7:	ds mov ebx,esp
  4157ea:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157f0:	inc    edi
  4157f1:	xor    bh,dl
  4157f3:	(bad)  
  4157f4:	ds mov ebx,esp
  4157f7:	test   BYTE PTR [ecx+0x7374cccb],ch
  4157fd:	inc    edi
  4157fe:	xor    bh,dl
  415800:	(bad)  
  415801:	ds mov ebx,esp
  415804:	test   BYTE PTR [ecx+0x7374cccb],ch
  41580a:	inc    edi
  41580b:	xor    bh,dl
  41580d:	(bad)  
  41580e:	ds mov ebx,esp
  415811:	test   BYTE PTR [ecx+0x7374cccb],ch
  415817:	inc    edi
  415818:	xor    bh,dl
  41581a:	(bad)  
  41581b:	ds mov ebx,esp
  41581e:	test   BYTE PTR [ecx+0x7374cccb],ch
  415824:	inc    edi
  415825:	xor    bh,dl
  415827:	(bad)  
  415828:	ds mov ebx,esp
  41582b:	test   BYTE PTR [ecx+0x7374cccb],ch
  415831:	inc    edi
  415832:	xor    bh,dl
  415834:	(bad)  
  415835:	ds mov ebx,esp
  415838:	test   BYTE PTR [ecx+0x7374cccb],ch
  41583e:	inc    edi
  41583f:	xor    bh,dl
  415841:	(bad)  
  415842:	ds mov ebx,esp
  415845:	test   BYTE PTR [ecx+0x7374cccb],ch
  41584b:	inc    edi
  41584c:	xor    bh,dl
  41584e:	(bad)  
  41584f:	ds mov ebx,esp
  415852:	test   BYTE PTR [ecx+0x7374cccb],ch
  415858:	inc    edi
  415859:	xor    bh,dl
  41585b:	(bad)  
  41585c:	ds mov ebx,esp
  41585f:	test   BYTE PTR [ecx+0x7374cccb],ch
  415865:	inc    edi
  415866:	xor    bh,dl
  415868:	(bad)  
  415869:	ds mov ebx,esp
  41586c:	test   BYTE PTR [ecx+0x7374cccb],ch
  415872:	inc    edi
  415873:	xor    bh,dl
  415875:	(bad)  
  415876:	ds mov ebx,esp
  415879:	test   BYTE PTR [ecx+0x7374cccb],ch
  41587f:	inc    edi
  415880:	xor    bh,dl
  415882:	(bad)  
  415883:	ds mov ebx,esp
  415886:	test   BYTE PTR [ecx+0x7374cccb],ch
  41588c:	inc    edi
  41588d:	xor    bh,dl
  41588f:	(bad)  
  415890:	ds mov ebx,esp
  415893:	test   BYTE PTR [ecx+0x7374cccb],ch
  415899:	inc    edi
  41589a:	xor    bh,dl
  41589c:	(bad)  
  41589d:	ds mov ebx,esp
  4158a0:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158a6:	inc    edi
  4158a7:	xor    bh,dl
  4158a9:	(bad)  
  4158aa:	ds mov ebx,esp
  4158ad:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158b3:	inc    edi
  4158b4:	xor    bh,dl
  4158b6:	(bad)  
  4158b7:	ds mov ebx,esp
  4158ba:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158c0:	inc    edi
  4158c1:	xor    bh,dl
  4158c3:	(bad)  
  4158c4:	ds mov ebx,esp
  4158c7:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158cd:	inc    edi
  4158ce:	xor    bh,dl
  4158d0:	(bad)  
  4158d1:	ds mov ebx,esp
  4158d4:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158da:	inc    edi
  4158db:	xor    bh,dl
  4158dd:	(bad)  
  4158de:	ds mov ebx,esp
  4158e1:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158e7:	inc    edi
  4158e8:	xor    bh,dl
  4158ea:	(bad)  
  4158eb:	ds mov ebx,esp
  4158ee:	test   BYTE PTR [ecx+0x7374cccb],ch
  4158f4:	inc    edi
  4158f5:	xor    bh,dl
  4158f7:	(bad)  
  4158f8:	ds mov ebx,esp
  4158fb:	test   BYTE PTR [ecx+0x7374cccb],ch
  415901:	inc    edi
  415902:	xor    bh,dl
  415904:	(bad)  
  415905:	mov    esi,DWORD PTR ds:[edi-0x36]
  415909:	mov    ds:0x7374e3cb,al
  41590e:	push   edi
  41590f:	xor    bh,dl
  415911:	in     eax,dx
  415912:	pushf  
  415913:	push   ecx
  415914:	test   al,0x39
  415916:	out    0xf8,al
  415918:	ficomp WORD PTR [edi+0x48]
  41591b:	jp     0x4158fc
  41591d:	bound  edx,QWORD PTR [ebp+0x38]
  415920:	ret    0x7585
  415923:	jne    0x41599d
  415925:	fbstp  TBYTE PTR [ebx]
  415927:	dec    eax
  415928:	scas   al,BYTE PTR es:[edi]
  415929:	call   0x4990de8a
  41592e:	es retf 
  415930:	ds xchg ebp,eax
  415932:	adc    esp,DWORD PTR [eax+0x345d2433]
  415938:	jl     0x415929
  41593a:	scas   al,BYTE PTR es:[edi]
  41593b:	lahf   
  41593c:	lea    esp,[ecx]
  41593e:	dec    ebx
  41593f:	fisttp DWORD PTR [ecx-0x6bf781ad]
  415945:	lds    esi,FWORD PTR [edx-0x34]
  415948:	add    al,0x18
  41594a:	jle    0x4158d0
  41594c:	repnz mov DWORD PTR [ebp-0x763fd64d],0x18b3d9cf
  415957:	dec    esi
  415958:	fist   DWORD PTR [ebx-0x7c]
  41595b:	fnstcw WORD PTR [ebp-0x63]
  41595e:	push   edx
  41595f:	mov    edx,es
  415961:	and    DWORD PTR [ebx],esi
  415963:	bound  ecx,QWORD PTR [eax-0x176aefa4]
  415969:	pusha  
  41596a:	(bad)  
  41596c:	ret    
  41596d:	jle    0x4159ed
  41596f:	cli    
  415970:	loopne 0x415986
  415972:	and    al,0xb1
  415974:	dec    esp
  415975:	lock les ebp,FWORD PTR es:[ebx-0x366cd96a]
  41597d:	loope  0x41598a
  41597f:	inc    ecx
  415980:	call   0xabe53adc
  415985:	mov    ch,0xbc
  415987:	daa    
  415988:	push   0x5bfca04b
  41598d:	addr16 xchg dh,ch
  415990:	xor    eax,0xa091f156
  415995:	cmovns eax,ebx
  415998:	and    BYTE PTR [edx],dh
  41599a:	clc    
  41599b:	dec    ebx
  41599c:	push   ebx
  41599d:	fld    QWORD PTR [esi-0x5]
  4159a0:	aam    0xcd
  4159a2:	pop    esp
  4159a3:	jmp    0xeecf0d52
  4159a8:	(bad)  
  4159a9:	sub    ecx,DWORD PTR [ebp-0x6bcbe707]
  4159af:	inc    ebp
  4159b0:	xor    BYTE PTR [ecx-0x63],dl
  4159b3:	xchg   edi,eax
  4159b4:	mov    eax,0xf47a6eb5
  4159b9:	cld    
  4159ba:	outs   dx,BYTE PTR ds:[esi]
  4159bb:	push   esi
  4159bc:	aas    
  4159bd:	xor    al,0x9
  4159bf:	and    DWORD PTR [esi],ecx
  4159c1:	sbb    edx,DWORD PTR [edi+0x1f]
  4159c4:	ja     0x41595d
  4159c6:	jg     0x415966
  4159c8:	popf   
  4159c9:	ins    BYTE PTR es:[edi],dx
  4159ca:	dec    edi
  4159cb:	imul   ebx,DWORD PTR [ecx],0x58ffdf94
  4159d1:	call   0x66db:0xf7b00e98
  4159d8:	adc    eax,0xd4af03a8
  4159dd:	test   DWORD PTR [edx+0x5b],0xe41cc225
  4159e4:	sub    BYTE PTR [esi],bl
  4159e6:	inc    edx
  4159e7:	cld    
  4159e8:	scas   eax,DWORD PTR es:[edi]
  4159e9:	lods   eax,DWORD PTR ds:[esi]
  4159ea:	xor    ch,BYTE PTR [esi-0x6df4c048]
  4159f0:	xchg   esp,eax
  4159f1:	pop    esp
  4159f2:	or     dh,BYTE PTR [ecx]
  4159f4:	sub    eax,0x7aaff2e4
  4159f9:	jbe    0x4159a1
  4159fb:	or     DWORD PTR [esp+ebp*1+0x2d6328b7],eax
  415a02:	loope  0x4159af
  415a04:	inc    ebx
  415a05:	xchg   ebx,eax
  415a06:	adc    eax,0x11d06b13
  415a0b:	and    ch,BYTE PTR [ebx-0x64]
  415a0e:	fbstp  TBYTE PTR fs:[ebp-0x67]
  415a12:	inc    ebp
  415a13:	lock jb 0x415a8f
  415a16:	cld    
  415a17:	outs   dx,BYTE PTR ds:[esi]
  415a18:	jl     0x41599e
  415a1a:	arpl   cx,sp
  415a1c:	add    BYTE PTR [edi+0x4d],ah
  415a1f:	xor    BYTE PTR [ecx+0xd],bh
  415a22:	ins    BYTE PTR es:[edi],dx
  415a23:	jae    0x4159e1
  415a25:	mov    cl,0x3b
  415a27:	pop    ss
  415a28:	sbb    BYTE PTR [edx],dl
  415a2a:	loope  0x4159d2
  415a2c:	daa    
  415a2d:	xor    DWORD PTR [esi],ebp
  415a2f:	dec    esi
  415a30:	dec    DWORD PTR [ebx+0x6c]
  415a33:	in     eax,dx
  415a34:	or     al,0x87
  415a36:	test   al,0xae
  415a38:	xor    al,0x9a
  415a3a:	cmp    BYTE PTR [ecx-0x5072a3cf],al
  415a40:	pop    eax
  415a41:	cmp    DWORD PTR [edi-0x547d79d1],ecx
  415a47:	mov    eax,fs:0xc3a820a
  415a4d:	repz mov ecx,0xcba741dd
  415a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a54:	add    al,0x4a
  415a56:	mov    WORD PTR [edx+0x49],?
  415a59:	aaa    
  415a5a:	sub    bl,dh
  415a5c:	mov    esi,0x812b972e
  415a61:	out    dx,al
  415a62:	(bad)
  415a66:	loop   0x415a59
  415a68:	add    al,0x13
  415a6a:	push   esp
  415a6b:	out    dx,al
  415a6c:	daa    
  415a6d:	add    edx,esi
  415a6f:	cmp    esi,DWORD PTR [ebx-0x1304fa4f]
  415a75:	loopne 0x415ac7
  415a77:	sbb    al,0xff
  415a79:	cmp    al,0xbf
  415a7b:	xchg   BYTE PTR [edi+0xcd101fa],ch
  415a81:	and    al,0xce
  415a83:	and    esp,DWORD PTR [edx]
  415a85:	es push cs
  415a87:	inc    ecx
  415a88:	fiadd  WORD PTR [esi+0x475bdcb3]
  415a8e:	pop    ecx
  415a8f:	mov    ebp,0xdd862156
  415a94:	or     ch,cl
  415a96:	mov    eax,ds:0xecdbcd0a
  415a9b:	pop    ebp
  415a9c:	dec    ebp
  415a9d:	add    bl,ah
  415a9f:	cwde   
  415aa0:	jmp    0x8886:0x13acd6b8
  415aa7:	sahf   
  415aa8:	dec    esi
  415aa9:	xlat   BYTE PTR ds:[ebx]
  415aaa:	sbb    al,BYTE PTR [ebp-0x5d7f0849]
  415ab0:	sbb    al,BYTE PTR [eax-0x46]
  415ab3:	xchg   edx,eax
  415ab4:	and    al,0x3
  415ab7:	scas   eax,DWORD PTR es:[edi]
  415ab8:	cmp    eax,0x4e84c1dc
  415abd:	push   esp
  415abe:	cmp    esp,edx
  415ac0:	or     DWORD PTR [ecx+0x68c90f7a],eax
  415ac6:	sub    al,0x6
  415ac8:	xor    BYTE PTR [bp+si],al
  415acb:	sub    eax,0x9ac7ec69
  415ad0:	fistp  QWORD PTR [edi-0x6d]
  415ad3:	push   cs
  415ad4:	cs jmp 0x415ac5
  415ad7:	(bad)  
  415ad8:	jnp    0x415ac3
  415ada:	mov    ah,ch
  415adc:	push   edx
  415add:	inc    edi
  415ade:	mov    edx,edi
  415ae0:	sbb    esp,DWORD PTR [edi-0x6d]
  415ae3:	into   
  415ae4:	sti    
  415ae5:	xchg   ecx,eax
  415ae6:	sar    BYTE PTR [edx+edx*8-0x4baec874],0x50
  415aee:	repz inc ebp
  415af0:	sbb    DWORD PTR cs:[ecx],edx
  415af3:	mov    edx,0x3df099e
  415af8:	cld    
  415af9:	fidivr WORD PTR [ebx-0x2825c28c]
  415aff:	add    dl,BYTE PTR [edx]
  415b01:	(bad)  
  415b02:	jg     0x415a9e
  415b04:	mov    ds,WORD PTR [eax+0x7da3085b]
  415b0a:	dec    edi
  415b0b:	adc    dh,BYTE PTR ds:0x414938dd
  415b11:	mov    BYTE PTR [eax-0x550751c4],bl
  415b17:	shl    DWORD PTR [edi-0x26ab17c8],1
  415b1d:	cmp    dl,bh
  415b1f:	jae    0x415ad2
  415b21:	call   DWORD PTR [ecx]
  415b23:	jge    0x415b29
  415b25:	fidivr WORD PTR [ebp-0x55]
  415b28:	ds femms 
  415b2b:	lods   al,BYTE PTR ds:[esi]
  415b2c:	adc    bl,BYTE PTR [ebx]
  415b2e:	sbb    DWORD PTR [eax+0x1c],ebp
  415b31:	fcmovu st,st(0)
  415b33:	and    edi,DWORD PTR [ebp+0x34]
  415b36:	stc    
  415b37:	pop    eax
  415b38:	dec    ecx
  415b39:	pop    edx
  415b3a:	bsf    esi,DWORD PTR [ebx]
  415b3d:	push   es
  415b3e:	jecxz  0x415b57
  415b40:	mov    ah,0x62
  415b42:	cmp    bh,cl
  415b44:	sub    eax,0x8f306113
  415b49:	push   edx
  415b4a:	shr    esi,1
  415b4c:	xlat   BYTE PTR ds:[ebx]
  415b4d:	mov    al,0xbd
  415b4f:	scas   eax,DWORD PTR es:[edi]
  415b50:	aad    0x6d
  415b52:	in     al,dx
  415b53:	loopne 0x415bbf
  415b55:	(bad)  
  415b56:	jmp    0x415b54
  415b58:	lods   eax,DWORD PTR ds:[esi]
  415b59:	lock push eax
  415b5b:	repz in al,0x64
  415b5e:	ja     0x415b3a
  415b60:	cs and eax,0xc6150332
  415b66:	mov    bl,0x1e
  415b68:	dec    edx
  415b69:	mov    ecx,0x85c9a91f
  415b6e:	loope  0x415b57
  415b70:	mov    ?,WORD PTR [ebx-0x752d9477]
  415b76:	dec    eax
  415b77:	inc    edx
  415b78:	pop    ebp
  415b79:	fistp  QWORD PTR [edi-0x7a]
  415b7c:	push   ds
  415b7d:	inc    ebx
  415b7e:	xor    eax,0x8b769f7c
  415b83:	push   cs
  415b84:	mov    edi,0x5d098545
  415b89:	pop    ds
  415b8a:	jl     0x415bae
  415b8c:	xchg   ecx,eax
  415b8d:	mov    dl,0x83
  415b8f:	bound  esp,QWORD PTR [edi-0xf350c64]
  415b95:	dec    ebx
  415b96:	push   esp
  415b97:	lods   eax,DWORD PTR ds:[esi]
  415b98:	push   edx
  415b9a:	jns    0x415b7b
  415b9c:	sahf   
  415b9d:	out    0x8,eax
  415b9f:	push   0xffffffd2
  415ba1:	or     ebx,esp
  415ba3:	add    DWORD PTR [edi+0x328d38b1],esp
  415ba9:	xor    eax,0xba6a2cb8
  415bae:	add    DWORD PTR [ecx+0x7f],esp
  415bb1:	jb     0x415bda
  415bb3:	call   0x95d8:0x6c19cdef
  415bba:	and    ch,BYTE PTR [eax-0x6a]
  415bbd:	and    cl,ah
  415bbf:	add    DWORD PTR [eax+0x13f772f1],esp
  415bc5:	and    al,0x6c
  415bc7:	les    edx,FWORD PTR [esi-0x70]
  415bca:	push   edx
  415bcb:	xor    BYTE PTR [eax],bh
  415bcd:	loop   0x415b8c
  415bcf:	adc    eax,0xfd1e2629
  415bd4:	pop    ecx
  415bd5:	sbb    esp,DWORD PTR [edi+0x5b]
  415bd8:	jns    0x415c10
  415bda:	les    edi,FWORD PTR [eax-0x546ff1bf]
  415be0:	int3   
  415be1:	inc    eax
  415be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be3:	hlt    
  415be4:	test   BYTE PTR [ebx+0x2b83d9b1],cl
  415bea:	push   esi
  415beb:	je     0x415ba9
  415bed:	gs add bl,ah
  415bf0:	sub    eax,0xe1fbbbcb
  415bf5:	stos   BYTE PTR es:[edi],al
  415bf6:	xor    BYTE PTR [ecx-0x2b],bl
  415bf9:	mov    ebx,0xc33a3bfb
  415bfe:	icebp  
  415bff:	ds cli 
  415c01:	mov    ds:0x72f7ea60,eax
  415c06:	xor    DWORD PTR gs:[esi-0x1d],edi
  415c0a:	dec    ebp
  415c0b:	ret    
  415c0c:	jl     0x415c6e
  415c0e:	into   
  415c0f:	fwait
  415c10:	dec    esi
  415c11:	frstor [ebp+ebx*4-0x7edd2e7b]
  415c18:	mov    bl,0x71
  415c1a:	rcr    DWORD PTR [ecx],cl
  415c1c:	xchg   ebp,eax
  415c1d:	sbb    dl,BYTE PTR [edx]
  415c1f:	add    bh,dh
  415c21:	in     al,dx
  415c22:	pop    bx
  415c24:	cmc    
  415c25:	fstp   DWORD PTR [ebp-0xe41a4ed]
  415c2b:	into   
  415c2c:	xchg   edx,eax
  415c2d:	test   dh,cl
  415c2f:	(bad)  [ecx+ebp*2-0x3666f785]
  415c36:	ds xor eax,0xbf588030
  415c3c:	xchg   esp,eax
  415c3d:	inc    eax
  415c3e:	mov    ecx,0x67611ba4
  415c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c44:	adc    BYTE PTR [esi-0x4d],ch
  415c47:	lock xor ebx,DWORD PTR [eax]
  415c4a:	test   DWORD PTR [edi],eax
  415c4c:	stos   BYTE PTR es:[edi],al
  415c4d:	jmp    0xa16edb49
  415c52:	stos   DWORD PTR es:[edi],eax
  415c53:	xchg   esp,eax
  415c54:	fabs   
  415c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c57:	push   esp
  415c58:	or     eax,0xf7a089ef
  415c5d:	fstp   QWORD PTR [edi+0x7b]
  415c60:	cmp    BYTE PTR [edx+0x6f],al
  415c63:	lds    esp,FWORD PTR [esi]
  415c65:	dec    eax
  415c66:	and    BYTE PTR [eax+edi*2],0x44
  415c6a:	lods   al,BYTE PTR ds:[esi]
  415c6b:	dec    esi
  415c6c:	jmp    0x7c8fc5a6
  415c71:	jmp    0x415c22
  415c73:	xchg   esp,eax
  415c74:	out    0xd1,eax
  415c76:	xor    al,0xb5
  415c78:	mov    dl,0xf4
  415c7a:	(bad)  
  415c7b:	cmp    al,0x26
  415c7d:	xor    cl,BYTE PTR ds:0x70c5eaf4
  415c83:	sub    al,0x98
  415c85:	xor    BYTE PTR [eax-0x32],dh
  415c88:	mov    cl,bl
  415c8a:	jmp    0x1be3:0x86a71599
  415c91:	int    0x77
  415c93:	stos   DWORD PTR es:[edi],eax
  415c94:	mov    edi,0x308b6c56
  415c99:	push   0x7a
  415c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c9c:	xchg   ecx,eax
  415c9d:	js     0x415c66
  415c9f:	jb     0x415c73
  415ca1:	dec    esp
  415ca2:	test   al,0xd0
  415ca4:	add    ebx,DWORD PTR [esi+0x31]
  415ca7:	test   al,0x90
  415ca9:	out    dx,al
  415caa:	das    
  415cab:	push   DWORD PTR [edi+ebp*1-0x2ee8318b]
  415cb2:	(bad)  
  415cb3:	mov    ebx,ebp
  415cb5:	aad    0xa5
  415cb7:	xchg   esp,eax
  415cb8:	test   dl,bl
  415cba:	std    
  415cbb:	gs mov ss,ebp
  415cbe:	sti    
  415cbf:	mov    edi,0x3354f711
  415cc4:	mov    ch,0xec
  415cc6:	fdivr  QWORD PTR [edx+0x5a6d1651]
  415ccc:	mov    esi,0xaa8e8979
  415cd1:	(bad)  
  415cd2:	les    edx,FWORD PTR [ebp+0x4d]
  415cd5:	inc    ebx
  415cd6:	jg     0x415d28
  415cd8:	daa    
  415cd9:	mov    edi,0x59519f5a
  415cde:	pop    eax
  415cdf:	ins    DWORD PTR es:[edi],dx
  415ce0:	pushf  
  415ce1:	retf   0x8f42
  415ce4:	dec    edx
  415ce5:	push   es
  415ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce7:	(bad)  
  415ce8:	fcmove st,st(4)
  415cea:	loopne 0x415d27
  415cec:	sub    BYTE PTR [eax-0x13],ch
  415cef:	scas   eax,DWORD PTR es:[edi]
  415cf0:	push   esp
  415cf1:	aas    
  415cf2:	sub    ah,BYTE PTR [edi]
  415cf4:	in     eax,0xd0
  415cf6:	mov    ebx,0x2e341a1a
  415cfb:	jg     0x415d6f
  415cfd:	or     DWORD PTR [ebp-0x2d],edi
  415d00:	add    eax,0xa9f53cb
  415d05:	rcl    BYTE PTR [esi],0x23
  415d08:	outs   dx,BYTE PTR ds:[esi]
  415d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0a:	(bad)  
  415d0b:	ins    BYTE PTR es:[edi],dx
  415d0c:	mov    ds:0x36d11321,eax
  415d11:	push   es
  415d12:	mov    ecx,0x2bc3d5d8
  415d17:	or     edx,DWORD PTR [eax+0x6efc02b2]
  415d1d:	mov    bh,BYTE PTR [ecx]
  415d1f:	jmp    0x34cdaf
  415d24:	rcr    BYTE PTR [edx-0x67],cl
  415d27:	xchg   ebp,eax
  415d28:	mov    esi,DWORD PTR [edi+0x49f90a5b]
  415d2e:	lods   al,BYTE PTR ds:[esi]
  415d2f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d31:	inc    ecx
  415d32:	sar    DWORD PTR [ebx],cl
  415d34:	mov    bl,al
  415d36:	leave  
  415d37:	daa    
  415d38:	(bad)  
  415d39:	fdiv   QWORD PTR [edx-0x74]
  415d3c:	mov    ecx,0xd4972929
  415d41:	push   ecx
  415d42:	cmp    esi,DWORD PTR [esi+ecx*2]
  415d45:	pusha  
  415d46:	(bad)  
  415d47:	cmc    
  415d48:	nop
  415d49:	sub    DWORD PTR ds:0xf78aa7a1,ebx
  415d4f:	adc    esi,esi
  415d51:	xor    BYTE PTR [eax],dh
  415d53:	std    
  415d54:	adc    DWORD PTR [eax-0x5d7c5865],edx
  415d5a:	dec    ebx
  415d5b:	and    eax,0xf3ca2cc4
  415d60:	rcr    DWORD PTR [eax-0x1],1
  415d63:	fistp  QWORD PTR [edi-0x4e]
  415d66:	xchg   ecx,eax
  415d67:	nop
  415d68:	push   es
  415d69:	jne    0x415d5d
  415d6b:	mov    al,0xa2
  415d6d:	rcl    BYTE PTR [esi],cl
  415d6f:	sbb    al,0x5d
  415d71:	pop    ds
  415d72:	pop    esi
  415d73:	fsub   st(2),st
  415d75:	hlt    
  415d76:	xchg   DWORD PTR [edi-0xf],esi
  415d79:	mov    al,0x2b
  415d7b:	mov    bl,bh
  415d7d:	ds jns 0x415d48
  415d80:	inc    esp
  415d81:	outs   dx,BYTE PTR ds:[esi]
  415d82:	lock mov cl,0xc0
  415d85:	jp     0x415e04
  415d87:	sti    
  415d88:	aas    
  415d89:	xchg   edi,eax
  415d8a:	push   esi
  415d8b:	and    esi,DWORD PTR [edi+eiz*2]
  415d8e:	or     ecx,DWORD PTR ss:[esi+ebp*4+0x3c]
  415d93:	cmp    eax,0x244ef5b0
  415d98:	sar    DWORD PTR [edi],1
  415d9a:	jg     0x415e0b
  415d9c:	jnp    0x415d76
  415d9e:	adc    BYTE PTR [ecx+0x7f],ch
  415da1:	mov    ebx,0x263b517f
  415da6:	dec    eax
  415da7:	(bad)  [edx-0x4d]
  415daa:	push   ebp
  415dab:	push   esi
  415dac:	lods   al,BYTE PTR ds:[esi]
  415dad:	cdq    
  415dae:	mov    al,ds:0x52325c1d
  415db3:	outs   dx,BYTE PTR ds:[esi]
  415db4:	dec    cx
  415db6:	mov    ecx,0xd5b496bd
  415dbb:	inc    ebp
  415dbc:	and    eax,0x231dd24c
  415dc1:	or     BYTE PTR [edx-0x1f1d1],ch
  415dc7:	xchg   ecx,eax
  415dc8:	sbb    BYTE PTR [ebp+0x2b],cl
  415dcb:	pop    edx
  415dcc:	aam    0x2
  415dce:	into   
  415dcf:	xor    bl,ah
  415dd1:	jne    0x415de7
  415dd3:	out    dx,eax
  415dd4:	adc    DWORD PTR [edx+0x26],ebx
  415dd7:	jo     0x415d6d
  415dd9:	test   esp,eax
  415ddb:	pop    ecx
  415ddc:	xchg   ebx,eax
  415ddd:	cwde   
  415dde:	pop    ds
  415ddf:	mov    esp,0x1ede06ed
  415de4:	fsub   DWORD PTR [ecx+edi*1-0x720bfbd9]
  415deb:	push   edi
  415dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ded:	(bad)  
  415def:	ret    
  415df0:	adc    DWORD PTR ds:0xe4840074,esp
  415df6:	push   ebp
  415df7:	and    al,0x94
  415df9:	imul   ebp,DWORD PTR [eax],0xdf4a1a9c
  415dff:	and    ebx,DWORD PTR [edx+eiz*4-0x7]
  415e03:	fs retf 
  415e05:	ins    DWORD PTR es:[edi],dx
  415e06:	icebp  
  415e07:	or     esp,DWORD PTR [ebp+0x7cc3b290]
  415e0d:	popa   
  415e0e:	push   ebx
  415e0f:	mov    bh,0x2c
  415e11:	mov    edx,0xe64e950f
  415e16:	ins    BYTE PTR es:[edi],dx
  415e17:	fnsave [ebp+0x63]
  415e1a:	xchg   ebp,eax
  415e1b:	inc    edx
  415e1c:	and    DWORD PTR [ebx],0xffffffdb
  415e1f:	data16 outs dx,BYTE PTR ds:[esi]
  415e21:	mov    eax,0xa4da3b42
  415e26:	rcl    DWORD PTR [esi-0x489cfbe],1
  415e2c:	sahf   
  415e2d:	rcl    BYTE PTR [edx+0xd220e4],1
  415e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e34:	ret    0xcec7
  415e37:	and    DWORD PTR [esi+0x153a7439],edi
  415e3d:	jmp    0x415e98
  415e3f:	jbe    0x415e0d
  415e41:	inc    ebx
  415e42:	xchg   edi,eax
  415e43:	into   
  415e44:	iret   
  415e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e46:	cmp    eax,0x8442dc95
  415e4b:	aam    0x6b
  415e4d:	cli    
  415e4e:	mov    bl,0x8d
  415e50:	xchg   DWORD PTR [edi+edx*2-0x40c19dfc],edx
  415e57:	div    BYTE PTR [esi]
  415e59:	mov    ebx,0x4a3dbaa
  415e5e:	xor    BYTE PTR [ecx+0x1ee3b9b6],0x9e
  415e65:	gs mov bh,0xe
  415e68:	or     al,dl
  415e6a:	jbe    0x415e55
  415e6c:	aam    0xc4
  415e6e:	push   cs
  415e6f:	pop    ecx
  415e70:	clc    
  415e71:	push   esi
  415e72:	mov    al,ds:0x2665a359
  415e77:	daa    
  415e78:	add    BYTE PTR [eax+0x20],cl
  415e7b:	push   esp
  415e7c:	or     eax,0x8e725337
  415e81:	pop    ebp
  415e82:	outs   dx,BYTE PTR ds:[esi]
  415e83:	push   ebx
  415e84:	fistp  QWORD PTR [edx+0x67ccac93]
  415e8a:	cli    
  415e8b:	and    dl,cl
  415e8d:	shl    DWORD PTR [ebx-0x62],0x12
  415e91:	repnz and eax,0x76b5f067
  415e97:	xor    ah,BYTE PTR [ecx+0x14]
  415e9a:	lds    esi,FWORD PTR [ecx-0x7]
  415e9d:	jae    0x415e70
  415e9f:	push   edi
  415ea0:	push   es
  415ea1:	jle    0x415eae
  415ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea4:	cmp    DWORD PTR [ecx],ebp
  415ea6:	sbb    DWORD PTR [ebp+0x3e18af0e],edx
  415eac:	and    eax,0xaa693662
  415eb1:	shl    esi,1
  415eb3:	mov    esp,0x88de7aec
  415eb8:	fst    QWORD PTR [eax+0x49d126a0]
  415ebe:	mov    ds:0xc389bc26,eax
  415ec3:	rcr    DWORD PTR [eax*8+0x33c9fc78],1
  415eca:	push   ds
  415ecb:	test   eax,0xdec275a1
  415ed0:	int    0xb4
  415ed2:	lahf   
  415ed3:	jae    0x415e73
  415ed5:	jnp    0x415f4d
  415ed7:	fs mov edi,0xbf53e0bd
  415edd:	jmp    0x503a670
  415ee2:	sub    eax,DWORD PTR [eax+0x365b8b3]
  415ee8:	and    DWORD PTR [esi+0x7e],edx
  415eeb:	lods   eax,DWORD PTR ds:[esi]
  415eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eed:	or     esp,ecx
  415eef:	or     DWORD PTR [esi],edi
  415ef1:	ret    
  415ef2:	daa    
  415ef3:	or     BYTE PTR [esi-0x3bf5177b],dl
  415ef9:	adc    ah,bh
  415efb:	mov    esi,0x8d31be5b
  415f00:	and    DWORD PTR [eax+ebp*8-0x28],edx
  415f04:	sbb    DWORD PTR [ecx+0x4d06dfec],ebx
  415f0a:	mov    ebx,0x9d0f70c
  415f0f:	loopne 0x415ed6
  415f11:	dec    eax
  415f12:	inc    edi
  415f13:	jge    0x415f1f
  415f15:	stc    
  415f16:	dec    edi
  415f17:	fcom   QWORD PTR [ebp-0x3db8c65b]
  415f1d:	or     al,0x61
  415f1f:	loope  0x415ec2
  415f21:	cdq    
  415f22:	lahf   
  415f23:	mov    esp,0xde368d26
  415f28:	jge    0x415f62
  415f2a:	mov    ch,0xef
  415f2c:	xor    eax,DWORD PTR ds:0x8fb664ac
  415f32:	fisub  DWORD PTR [esi-0x56]
  415f35:	xchg   ebx,eax
  415f36:	adc    DWORD PTR [ecx-0x552957e7],esi
  415f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3d:	jg     0x415fbd
  415f3f:	(bad)  
  415f41:	sbb    DWORD PTR [esi-0x71c5c8cd],0xffffffc8
  415f48:	xchg   ebx,eax
  415f49:	mov    WORD PTR [esi],ss
  415f4b:	jmp    0x75c5c501
  415f50:	int3   
  415f51:	pop    ebp
  415f52:	mov    ebp,0x4f752dac
  415f57:	mov    cl,0x2a
  415f59:	cwde   
  415f5a:	hlt    
  415f5b:	sbb    eax,0xb0ba8309
  415f60:	jbe    0x415f2b
  415f62:	xor    eax,0x67941b3e
  415f67:	xlat   BYTE PTR ds:[ebx]
  415f68:	loop   0x415ef4
  415f6a:	cs das 
  415f6c:	pop    ecx
  415f6d:	xor    eax,0xd652bec7
  415f72:	in     al,dx
  415f73:	fcomi  st,st(7)
  415f75:	rol    DWORD PTR [edi-0x299973],0x7b
  415f7c:	das    
  415f7d:	(bad)  
  415f7e:	pop    ecx
  415f7f:	rcl    cl,0x12
  415f82:	div    DWORD PTR [ecx-0x78]
  415f85:	pop    edx
  415f86:	sbb    eax,0x4912ebf9
  415f8b:	mov    BYTE PTR [eax+0x71],cl
  415f8e:	xor    cl,dh
  415f90:	push   ds
  415f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f92:	call   FWORD PTR ds:0xa22ef847
  415f98:	sbb    eax,0xeb950561
  415f9d:	mov    dh,0x9f
  415f9f:	jg     0x415ffd
  415fa1:	imul   edx,ecx,0xd3ee9fad
  415fa7:	push   esi
  415fa8:	dec    ebp
  415fa9:	push   edx
  415faa:	or     al,0xdf
  415fac:	ds jne 0x415ff5
  415faf:	pop    ds
  415fb0:	outs   dx,DWORD PTR ds:[esi]
  415fb1:	fwait
  415fb2:	pop    edi
  415fb3:	test   BYTE PTR [eax+edx*4],0xac
  415fb7:	arpl   di,dx
  415fb9:	hlt    
  415fba:	(bad)  
  415fbc:	das    
  415fbd:	loopne 0x415f51
  415fbf:	or     cl,BYTE PTR [edi+0x22]
  415fc2:	sbb    bl,BYTE PTR [eax-0x7]
  415fc5:	dec    ebp
  415fc6:	test   eax,0x569b75ae
  415fcb:	test   ch,0xd9
  415fce:	mov    bh,BYTE PTR [edi+0x62]
  415fd1:	pop    ebp
  415fd2:	cmp    BYTE PTR [ecx-0x65d481fe],ah
  415fd8:	(bad)  
  415fd9:	cdq    
  415fda:	add    al,BYTE PTR [ebp+0x64]
  415fdd:	(bad)  
  415fde:	mov    esi,0x56d706dc
  415fe3:	xchg   esi,ebp
  415fe5:	and    ch,BYTE PTR [ebx]
  415fe7:	jbe    0x415fff
  415fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fea:	push   esp
  415feb:	push   esp
  415fec:	add    al,0x5
  415fee:	xchg   BYTE PTR [edx],bh
  415ff0:	int    0x56
  415ff2:	sar    BYTE PTR [edx+0x4211efbf],cl
  415ff8:	xchg   esp,eax
  415ff9:	cs aam 0x30
  415ffc:	mov    ds:0x2f277f95,al
  416001:	cvtpi2ps xmm1,QWORD PTR [eax+0x418b25b4]
  416008:	lods   eax,DWORD PTR ds:[esi]
  416009:	pop    esi
  41600a:	fdivr  DWORD PTR [ebp+0x3e]
  41600d:	and    al,BYTE PTR [edx*1-0x7ff8a583]
  416014:	and    DWORD PTR [edx+0x4],esi
  416017:	pop    esi
  416018:	ret    
  416019:	jae    0x415fc0
  41601b:	xchg   BYTE PTR [ecx],bh
  41601d:	xor    DWORD PTR [eax-0x34],esi
  416020:	xor    edi,ebp
  416022:	mov    WORD PTR [esi-0xd60d3ac],?
  416028:	dec    DWORD PTR ss:0xd1f1d20b
  41602f:	fistp  DWORD PTR [edi-0x61]
  416032:	fs jl  0x4160a7
  416035:	mov    al,ds:0x9737df2d
  41603a:	clc    
  41603b:	jbe    0x416061
  41603d:	mov    ebx,0x28d0b416
  416042:	rol    DWORD PTR [edi],0xbd
  416045:	xchg   esp,eax
  416046:	fild   DWORD PTR [ecx-0x57]
  416049:	add    DWORD PTR fs:0x561054e0,ebx
  416050:	jb     0x415fe7
  416052:	gs xchg edx,eax
  416054:	cmp    BYTE PTR [edi+eax*2-0x515f5306],ch
  41605b:	and    esp,DWORD PTR [ecx]
  41605d:	or     ecx,DWORD PTR [ecx]
  41605f:	inc    esp
  416060:	test   BYTE PTR [esi],0xbc
  416063:	outs   dx,DWORD PTR ds:[esi]
  416065:	push   edi
  416066:	outs   dx,BYTE PTR ds:[esi]
  416067:	ss repnz and eax,0x1c55575b
  41606e:	rcr    BYTE PTR [ebx+0x78],cl
  416071:	pop    ds
  416072:	fnstsw WORD PTR [esi+0x15c935bd]
  416078:	dec    esp
  416079:	jae    0x4160a9
  41607b:	push   cs
  41607c:	shr    DWORD PTR cs:[esi],0x44
  416080:	cmp    BYTE PTR [ecx],bl
  416082:	sar    BYTE PTR [edi],0x51
  416085:	ins    BYTE PTR es:[edi],dx
  416086:	call   0xd38f4289
  41608b:	mov    ds:0xb875c2cc,eax
  416090:	dec    eax
  416091:	mov    esp,0xdd8b67d9
  416096:	push   ebp
  416097:	xor    BYTE PTR [esi],dl
  416099:	push   0xbd6dde0e
  41609e:	sbb    ebx,DWORD PTR [esp+edi*8-0x38]
  4160a2:	jne    0x416101
  4160a4:	aaa    
  4160a5:	mov    ds:0x13fddba4,eax
  4160aa:	mov    edx,0x8ed1a6c
  4160af:	inc    esi
  4160b0:	(bad)  
  4160b1:	jno    0x41607d
  4160b3:	lea    edi,[ebx]
  4160b5:	ret    0x5ef4
  4160b8:	xor    DWORD PTR [ebx],ebp
  4160ba:	mov    ds:0x9315fc47,al
  4160bf:	inc    edx
  4160c0:	inc    ebp
  4160c1:	dec    eax
  4160c2:	iret   
  4160c3:	daa    
  4160c4:	cwde   
  4160c5:	jo     0x41604a
  4160c7:	dec    esi
  4160c8:	pusha  
  4160c9:	jnp    0x416103
  4160cb:	in     eax,dx
  4160cc:	cdq    
  4160cd:	or     ah,BYTE PTR [edx-0x4a8a1f8c]
  4160d3:	xchg   edx,edi
  4160d5:	jecxz  0x4160df
  4160d7:	inc    esi
  4160d8:	fstp   QWORD PTR [edi+0x7f8f4cc6]
  4160de:	mov    ecx,0x2264b7c6
  4160e3:	and    eax,0x964f3a24
  4160e8:	inc    ebx
  4160e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ea:	push   cs
  4160eb:	outs   dx,BYTE PTR ds:[esi]
  4160ec:	jo     0x4160cd
  4160ee:	repnz mov ecx,0xc33c5314
  4160f4:	and    bh,ch
  4160f6:	mov    eax,ds:0x840301b9
  4160fb:	outs   dx,BYTE PTR ds:[esi]
  4160fc:	repnz in eax,0x27
  4160ff:	call   0x226f23cf
  416104:	popf   
  416105:	adc    ah,dl
  416107:	mov    eax,0x4d89858f
  41610c:	push   cs
  41610d:	add    al,BYTE PTR [ebp-0x1a]
  416110:	mov    dl,0x2e
  416112:	push   esi
  416113:	jne    0x41613f
  416115:	adc    al,0x14
  416117:	jl     0x416176
  416119:	out    0x84,eax
  41611b:	fldcw  WORD PTR ds:0x94746207
  416121:	and    al,0xdc
  416123:	add    ah,BYTE PTR [esi-0x63]
  416126:	out    dx,eax
  416127:	(bad)  
  416128:	and    ah,BYTE PTR [edx+0x37838db5]
  41612e:	jmp    0x41611f
  416130:	push   es
  416131:	stos   BYTE PTR es:[edi],al
  416132:	stc    
  416133:	dec    esi
  416134:	pushf  
  416135:	sub    ah,BYTE PTR [edx]
  416137:	ror    DWORD PTR [eax],cl
  416139:	pop    esp
  41613a:	cmp    dh,bl
  41613c:	aam    0x12
  41613e:	mov    DWORD PTR [bx+si],ecx
  416141:	mov    dl,0x96
  416143:	hlt    
  416144:	dec    edi
  416145:	mov    ds,WORD PTR [esi-0x4a]
  416148:	jecxz  0x416159
  41614a:	jmp    0xf2dd924
  41614f:	cmp    esp,DWORD PTR [ecx]
  416151:	mov    cl,0xcc
  416153:	fstp   TBYTE PTR [edi+0x52cb8a4]
  416159:	das    
  41615a:	outs   dx,BYTE PTR ds:[esi]
  41615b:	lods   eax,DWORD PTR ds:[esi]
  41615c:	fcom   QWORD PTR [ebx]
  41615e:	dec    edi
  41615f:	mov    dh,0x72
  416161:	mov    ah,0x94
  416163:	cmp    esp,DWORD PTR [eax]
  416165:	dec    ebp
  416166:	sbb    eax,DWORD PTR [ebp+0x11a216a6]
  41616c:	jno    0x41617e
  41616e:	repz pop ecx
  416170:	sub    BYTE PTR [ebp+0x29700099],0xe1
  416177:	fcomi  st,st(2)
  416179:	pusha  
  41617a:	hlt    
  41617b:	push   ds
  41617c:	jl     0x416174
  41617e:	cmc    
  41617f:	stos   BYTE PTR es:[edi],al
  416180:	loopne 0x41616f
  416182:	mov    esi,es
  416184:	sub    cl,dh
  416186:	out    0xb4,eax
  416188:	xor    ch,al
  41618a:	mov    ah,0x55
  41618c:	(bad)  
  41618d:	mov    ds:0xabab0657,al
  416192:	shl    BYTE PTR [eax+0xdcdcaa7],cl
  416198:	dec    esi
  416199:	dec    esi
  41619a:	inc    ebp
  41619b:	cmp    BYTE PTR [esi],ah
  41619d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41619f:	dec    edi
  4161a0:	retf   
  4161a1:	mov    esp,0xa79f051c
  4161a6:	dec    ebp
  4161a7:	mov    ebx,0x2d0b8624
  4161ac:	cld    
  4161ad:	adc    al,0x74
  4161af:	xor    BYTE PTR [eax+0x29],bh
  4161b2:	dec    eax
  4161b3:	std    
  4161b4:	jmp    0x41619b
  4161b6:	int    0xe7
  4161b8:	aaa    
  4161b9:	add    al,0xdb
  4161bb:	add    BYTE PTR [ecx],al
  4161bd:	adc    eax,0xfb60db1d
  4161c2:	inc    edx
  4161c3:	mov    ah,0x64
  4161c5:	out    dx,eax
  4161c6:	lods   eax,DWORD PTR ds:[esi]
  4161c7:	mov    ah,0x18
  4161c9:	test   al,0xa2
  4161cb:	leave  
  4161cc:	jp     0x416152
  4161ce:	(bad)  
  4161d0:	mov    cl,0xfa
  4161d2:	aas    
  4161d3:	imul   ebx,DWORD PTR [edx],0x491fb262
  4161d9:	lahf   
  4161da:	jmp    0x416205
  4161dc:	adc    eax,0x3c9e874a
  4161e1:	call   FWORD PTR [esi-0x2c]
  4161e4:	sbb    BYTE PTR [ebp-0x1f],cl
  4161e7:	popa   
  4161e8:	push   ecx
  4161e9:	mov    ebp,0x5ea22608
  4161ee:	dec    ebp
  4161ef:	shrd   esi,edi,0xe0
  4161f3:	dec    esi
  4161f4:	std    
  4161f5:	mov    edx,0x278393ad
  4161fa:	test   al,0x4d
  4161fc:	push   ebp
  4161fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fe:	js     0x416254
  416200:	je     0x416248
  416202:	iret   
  416203:	push   0xd9ca9fbd
  416208:	inc    BYTE PTR [edi]
  41620a:	jg     0x41623b
  41620c:	and    al,0x9f
  41620e:	lea    ebx,[eax]
  416210:	into   
  416211:	or     BYTE PTR [esi+ecx*4-0x46384ce1],0xe8
  416219:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621b:	push   esi
  41621c:	mov    esi,DWORD PTR [eax]
  41621e:	mov    eax,ds:0xc97f6a89
  416223:	pop    edx
  416224:	add    edi,ecx
  416226:	fstp   TBYTE PTR [ebp+esi*8+0x6942d13e]
  41622d:	stc    
  41622e:	fucomi st,st(7)
  416230:	xor    ah,BYTE PTR [ebx]
  416232:	sbb    edx,DWORD PTR [esi]
  416234:	adc    bh,BYTE PTR [edx-0x26]
  416237:	pop    esp
  416238:	sbb    esi,DWORD PTR [edi-0x60a9a0f0]
  41623e:	jo     0x416278
  416240:	inc    ebx
  416241:	cli    
  416242:	mov    bl,0xe
  416244:	data16 loop 0x4161f1
  416247:	arpl   WORD PTR [eax-0x7e],ax
  41624a:	push   0xffffffdd
  41624c:	mov    al,0x54
  41624e:	xchg   ecx,eax
  41624f:	sbb    al,0x60
  416251:	lahf   
  416252:	xor    DWORD PTR [edi],edx
  416254:	fistp  DWORD PTR [ebx+0x72c7058]
  41625a:	push   cs
  41625b:	dec    edi
  41625c:	jno    0x41628e
  41625e:	popa   
  41625f:	inc    esi
  416260:	cdq    
  416261:	dec    ebx
  416262:	xchg   ebx,eax
  416263:	rcl    DWORD PTR [ecx+eiz*1-0x5f2b7af],0x83
  41626b:	cld    
  41626c:	adc    cl,BYTE PTR [esi-0x55]
  41626f:	mov    gs,WORD PTR [edx+0x11d748f6]
  416275:	lock int 0x20
  416278:	xchg   ecx,eax
  416279:	outs   dx,BYTE PTR ds:[esi]
  41627a:	inc    ebp
  41627b:	std    
  41627c:	or     eax,0x6c816b60
  416281:	loope  0x4162aa
  416283:	jne    0x4162c5
  416285:	out    dx,al
  416286:	js     0x4162a3
  416288:	imul   esp,DWORD PTR [esp+edi*1],0x68
  41628c:	add    bl,bh
  41628e:	push   ebp
  41628f:	sbb    ebp,DWORD PTR [ebx+0x33]
  416292:	jecxz  0x41629b
  416294:	fs aad 0xe6
  416297:	jmp    0x416239
  416299:	lods   al,BYTE PTR ds:[esi]
  41629a:	xchg   al,ah
  41629c:	fld    DWORD PTR [edi+0x17]
  41629f:	test   eax,ebp
  4162a1:	adc    eax,0x709c9e79
  4162a6:	sub    BYTE PTR [ebx-0x37],ah
  4162a9:	shr    BYTE PTR [edi+0x5a],1
  4162ac:	cmp    edx,DWORD PTR [eax+ecx*1-0x9]
  4162b0:	jns    0x416249
  4162b2:	jge    0x4162df
  4162b4:	jecxz  0x41630f
  4162b6:	dec    eax
  4162b7:	mov    bl,0x64
  4162b9:	or     al,0xda
  4162bb:	lods   al,BYTE PTR ds:[esi]
  4162bc:	xchg   edx,eax
  4162bd:	mov    cl,0x52
  4162bf:	dec    esp
  4162c0:	xchg   edi,eax
  4162c1:	add    al,0x3c
  4162c3:	pop    ds
  4162c4:	fsubr  QWORD PTR [esi+0x71]
  4162c7:	xchg   esi,eax
  4162c8:	fbld   TBYTE PTR [ecx]
  4162ca:	push   esp
  4162cb:	xor    al,0x30
  4162cd:	adc    al,0xfb
  4162cf:	mov    ebp,0x5d182ca7
  4162d4:	(bad)  
  4162d5:	or     BYTE PTR [ebp-0x62],al
  4162d8:	xor    bh,ch
  4162da:	inc    ebp
  4162db:	ins    BYTE PTR es:[edi],dx
  4162dc:	jp     0x4162c9
  4162de:	cwde   
  4162df:	fcmove st,st(7)
  4162e1:	ds xor al,0xdf
  4162e4:	stos   DWORD PTR es:[edi],eax
  4162e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e6:	hlt    
  4162e7:	sbb    eax,esp
  4162e9:	and    DWORD PTR [ebx],esi
  4162eb:	push   ss
  4162ec:	cmp    al,0xf4
  4162ee:	loopne 0x416314
  4162f0:	int3   
  4162f1:	sti    
  4162f2:	or     eax,0x9798054a
  4162f7:	push   es
  4162f8:	mov    dh,0xce
  4162fa:	iret   
  4162fb:	sbb    ecx,DWORD PTR [edi-0x7]
  4162fe:	sbb    BYTE PTR [esi],ah
  416300:	(bad)  
  416301:	mov    esi,0x451a60dc
  416306:	push   ecx
  416307:	(bad)  
  416308:	fimul  DWORD PTR [ebx-0x3b]
  41630b:	popa   
  41630c:	retf   
  41630d:	xchg   cl,bl
  41630f:	pop    sp
  416311:	mov    ebp,0xd2317dba
  416316:	neg    DWORD PTR ds:0xeb906a89
  41631c:	mov    bl,0x4
  41631e:	daa    
  41631f:	add    esi,DWORD PTR [eax+edi*8]
  416322:	repz cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  416326:	sub    esp,DWORD PTR [ebp+0x1884ce87]
  41632c:	in     eax,0x2b
  41632e:	les    edi,FWORD PTR [ebp+0x7b]
  416331:	test   al,0x32
  416333:	mov    ch,0x4f
  416335:	das    
  416336:	out    0x5,eax
  416338:	mov    ecx,0x750ffd60
  41633d:	ret    
  41633e:	aad    0x2a
  416340:	or     ecx,esi
  416342:	mov    edx,0xb6c062b9
  416347:	(bad)  
  416348:	jmp    0x7a404736
  41634d:	push   esp
  41634e:	cmp    BYTE PTR [ecx],0x43
  416351:	mov    dl,0x63
  416353:	mov    edi,0xa8f40942
  416358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416359:	pop    esp
  41635a:	icebp  
  41635b:	ja     0x416399
  41635d:	ss out 0x18,al
  416360:	and    DWORD PTR [eax-0x7a],ecx
  416363:	mov    ah,0x36
  416365:	sub    bl,bh
  416367:	push   eax
  416368:	xchg   edi,eax
  416369:	enter  0x2baa,0x5b
  41636d:	loope  0x41636d
  41636f:	xchg   ebp,eax
  416370:	std    
  416371:	adc    al,0xb8
  416373:	push   esi
  416374:	xchg   edi,eax
  416375:	adc    ch,BYTE PTR [ecx]
  416377:	pusha  
  416378:	fstp   QWORD PTR [ecx]
  41637a:	hlt    
  41637b:	and    eax,0xabb8668
  416380:	xchg   BYTE PTR [edx+0x2b],cl
  416383:	cdq    
  416384:	ret    
  416385:	int    0xdb
  416387:	shr    BYTE PTR [ecx+0x676bca3d],cl
  41638d:	outs   dx,DWORD PTR ds:[esi]
  41638e:	xlat   BYTE PTR ds:[ebx]
  41638f:	cmp    al,0xc7
  416391:	aas    
  416392:	call   0x2d8f:0xa966e223
  416399:	or     ebp,DWORD PTR [ecx]
  41639b:	or     ebp,DWORD PTR [edx+0x28a0231a]
  4163a1:	sbb    eax,0xa3cb14aa
  4163a6:	icebp  
  4163a7:	sbb    eax,0x185d55a1
  4163ac:	div    DWORD PTR [eax]
  4163ae:	sti    
  4163af:	adc    edx,DWORD PTR [esi+ebx*1-0x31]
  4163b3:	dec    esp
  4163b4:	shr    DWORD PTR [ebx-0x2b],cl
  4163b7:	fdivrp st(0),st
  4163b9:	aas    
  4163ba:	ins    DWORD PTR es:[edi],dx
  4163bb:	jl     0x416384
  4163bd:	int3   
  4163be:	inc    esi
  4163bf:	mov    dh,0xc0
  4163c1:	nop
  4163c2:	dec    ecx
  4163c3:	jmp    0x8283:0xe07d25c9
  4163ca:	pop    edi
  4163cb:	sbb    BYTE PTR [ecx],ch
  4163cd:	mov    ss,WORD PTR [ebp+0x7e100aae]
  4163d3:	pop    es
  4163d4:	repnz xchg ebp,eax
  4163d6:	inc    edi
  4163d7:	mov    edx,0xe2bebfde
  4163dc:	sbb    eax,0x7de751bc
  4163e1:	xor    eax,0x162154b5
  4163e6:	in     eax,0x4f
  4163e8:	movq   QWORD PTR [ecx+edx*1],mm1
  4163ec:	ja     0x41643f
  4163ee:	int3   
  4163ef:	stos   DWORD PTR es:[edi],eax
  4163f0:	cs inc eax
  4163f2:	and    eax,0x42027eed
  4163f7:	pop    eax
  4163f8:	add    ebx,edi
  4163fa:	dec    ebx
  4163fb:	jge    0x41645f
  4163fd:	test   eax,0xd5654d38
  416402:	leave  
  416403:	adc    al,0x6f
  416405:	or     DWORD PTR [ecx-0x1769e4eb],eax
  41640b:	mov    cl,0x5b
  41640d:	jae    0x416411
  41640f:	sub    dl,ah
  416411:	xchg   esi,eax
  416412:	es pop ds
  416414:	inc    ebx
  416415:	dec    DWORD PTR ds:0x44ae911f
  41641b:	xor    eax,0xd94e86fd
  416420:	fadd   QWORD PTR [esp+esi*8-0x613ce03f]
  416427:	pop    edx
  416428:	rol    DWORD PTR [ebp+0x42fcc596],cl
  41642e:	jns    0x4163f7
  416430:	cmp    ah,BYTE PTR [ebx+esi*4+0x2d]
  416434:	push   ds
  416435:	cmp    al,0xec
  416437:	push   edx
  416438:	inc    edi
  416439:	xchg   edx,eax
  41643a:	fidivr WORD PTR [eax]
  41643c:	push   esi
  41643d:	inc    ebx
  41643e:	popf   
  41643f:	push   ebx
  416440:	aaa    
  416441:	dec    ebx
  416442:	out    dx,eax
  416443:	adc    dl,BYTE PTR ds:0xe6f970c2
  416449:	inc    ebp
  41644a:	pop    ds
  41644b:	and    eax,0xd9aba412
  416450:	mov    dl,0xbc
  416452:	pop    ecx
  416453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416454:	sbb    BYTE PTR [ecx+0x10d53052],dh
  41645a:	imul   edi,eax,0xffffffe8
  41645d:	add    al,0x45
  416460:	pop    es
  416461:	shl    DWORD PTR [ebx+0x6],0xc6
  416465:	fstp   DWORD PTR [edx]
  416467:	mov    edi,0xe0ad815b
  41646c:	xor    dl,BYTE PTR [ecx]
  41646e:	xchg   DWORD PTR [ebx+0x47763423],esp
  416474:	jp     0x4163fc
  416476:	inc    ecx
  416477:	jp     0x416460
  416479:	xor    al,BYTE PTR [edi-0x40]
  41647c:	mov    esp,0x4e8ad4df
  416481:	rol    DWORD PTR [ebp+0x51500e1],cl
  416487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416488:	inc    ecx
  416489:	jge    0x416497
  41648b:	hlt    
  41648c:	jp     0x416462
  41648e:	xlat   BYTE PTR ds:[ebx]
  41648f:	sub    ecx,DWORD PTR [eax-0x11]
  416492:	cmp    eax,0xe47af5cf
  416497:	push   ecx
  416498:	iret   
  416499:	sbb    BYTE PTR cs:[ebp+0x4348329a],ch
  4164a0:	shr    DWORD PTR [ebx-0x8e507fe],cl
  4164a6:	retf   0x6afc
  4164a9:	cmp    DWORD PTR [ecx+ecx*8+0x5f4c032a],edx
  4164b0:	adc    al,BYTE PTR [eax]
  4164b2:	popa   
  4164b3:	push   ss
  4164b4:	pop    ecx
  4164b5:	jle    0x41648c
  4164b7:	xor    eax,0xfd903938
  4164bc:	adc    DWORD PTR [ebx-0x13251baa],eax
  4164c2:	in     al,0xab
  4164c4:	gs or  eax,0x93fedc18
  4164ca:	push   ebp
  4164cb:	mov    eax,edx
  4164cd:	imul   ax,WORD PTR [edi+0x16],0x8e53
  4164d3:	xor    eax,0x5d051ab6
  4164d8:	sbb    DWORD PTR [ebx+esi*4+0x1b],ecx
  4164dc:	sub    eax,0xface58bb
  4164e1:	ss jae 0x41655f
  4164e4:	add    dh,BYTE PTR [edx+esi*8+0x70]
  4164e8:	push   ds
  4164e9:	(bad)  
  4164ea:	retf   
  4164eb:	mov    dl,al
  4164ed:	inc    edx
  4164ee:	adc    DWORD PTR [ecx+0x79be5c57],eax
  4164f4:	fild   WORD PTR [eax+ebp*4-0x6]
  4164f8:	jnp    0x4164fa
  4164fa:	inc    esp
  4164fb:	icebp  
  4164fc:	push   ebx
  4164fd:	mov    fs,esp
  4164ff:	mov    ebp,0x7e09fe2
  416504:	pop    eax
  416505:	pusha  
  416506:	cmp    edx,DWORD PTR [edx]
  416508:	add    BYTE PTR [edx-0x1d],0xc2
  41650c:	mov    esi,0xde1de6b9
  416511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416512:	xor    ecx,DWORD PTR [edi]
  416514:	ins    DWORD PTR es:[edi],dx
  416515:	push   ebp
  416516:	idiv   DWORD PTR [ebp-0x5170f145]
  41651c:	mov    DWORD PTR [ebp+0x2],esp
  41651f:	sahf   
  416520:	fistp  WORD PTR [ebp+0x76c5ff7b]
  416526:	dec    ecx
  416527:	xchg   ebp,eax
  416528:	fwait
  416529:	int    0xe3
  41652b:	jne    0x41650d
  41652d:	(bad)  
  41652e:	(bad)  
  41652f:	mov    ds:0xa0dab3c2,al
  416534:	stc    
  416535:	mov    dh,BYTE PTR [edx+0x71]
  416538:	les    ebx,FWORD PTR [esi-0xe4dbcf1]
  41653e:	sbb    BYTE PTR [ebx],ch
  416540:	sti    
  416541:	cmp    ah,ah
  416543:	call   0x23f8:0x824e9b27
  41654a:	mov    cl,0x3f
  41654c:	cld    
  41654d:	sar    DWORD PTR [esi+ebp*1],0x48
  416551:	sahf   
  416552:	arpl   WORD PTR [ecx-0x80],si
  416555:	pusha  
  416556:	scas   eax,DWORD PTR es:[edi]
  416557:	and    esi,DWORD PTR [ebx]
  416559:	das    
  41655a:	test   eax,0xdf59e0d2
  41655f:	fisub  WORD PTR [eax+0x12]
  416562:	pusha  
  416563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416564:	pusha  
  416565:	pop    edx
  416566:	or     DWORD PTR [eax],ecx
  416568:	and    ch,bl
  41656a:	fld    st(7)
  41656c:	arpl   WORD PTR [ecx-0x7e27eb64],si
  416572:	xchg   ebp,eax
  416573:	push   esp
  416574:	ds (bad) 
  416576:	icebp  
  416577:	jg     0x416528
  416579:	mov    ds,WORD PTR [ecx]
  41657b:	xchg   ebp,eax
  41657c:	xchg   edi,eax
  41657d:	jle    0x416517
  41657f:	sub    DWORD PTR [ecx-0x6b1f8fe5],ebx
  416585:	sbb    BYTE PTR [edi],bh
  416587:	pusha  
  416588:	std    
  416589:	push   esp
  41658a:	rol    BYTE PTR [ebp+0x75],1
  41658d:	push   cs
  41658e:	jmp    0x4165ea
  416590:	and    cl,BYTE PTR [ebx-0x35b5f3b3]
  416596:	xchg   DWORD PTR [ecx+ebx*2-0x6adeeb6],ebp
  41659d:	je     0x416607
  41659f:	cwde   
  4165a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a1:	sbb    esp,ebx
  4165a3:	imul   esi,DWORD PTR [edx],0xffffffe8
  4165a6:	adc    BYTE PTR [eax-0x75],cl
  4165a9:	mov    ebp,0xf4ec6aec
  4165ae:	pusha  
  4165af:	lds    edi,FWORD PTR [ebx-0x59]
  4165b2:	lea    ebp,[edx-0x72]
  4165b5:	add    BYTE PTR [esi+0x2b],bl
  4165b8:	cs pop ds
  4165ba:	or     edi,ebx
  4165bc:	psubd  mm3,mm6
  4165bf:	cdq    
  4165c0:	shr    BYTE PTR [edi],1
  4165c2:	icebp  
  4165c3:	aas    
  4165c4:	stos   DWORD PTR es:[edi],eax
  4165c5:	rol    DWORD PTR [esi-0x2d31cd4c],cl
  4165cb:	adc    eax,0x7f4ede7c
  4165d0:	jns    0x416565
  4165d2:	(bad)  
  4165d3:	adc    al,0x1c
  4165d5:	in     al,0xe3
  4165d7:	clc    
  4165d8:	stos   DWORD PTR es:[edi],eax
  4165d9:	test   al,0xaf
  4165db:	mov    ecx,0xf5195406
  4165e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e1:	mov    eax,ecx
  4165e3:	cli    
  4165e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e5:	and    bl,0xfa
  4165e8:	add    DWORD PTR [eax-0x71db2f0],edx
  4165ee:	stos   BYTE PTR es:[edi],al
  4165ef:	mov    ds:0xf58246cd,al
  4165f4:	pop    edi
  4165f5:	push   edi
  4165f6:	mov    eax,0x7747922c
  4165fb:	addr16 popa 
  4165fd:	inc    eax
  4165fe:	dec    esp
  4165ff:	out    dx,al
  416600:	sub    eax,0xeff1ad30
  416605:	pop    esp
  416606:	jno    0x416645
  416608:	and    eax,0x25bcee4d
  41660d:	icebp  
  41660e:	mov    ds:0xeee882e8,al
  416613:	stc    
  416614:	xchg   BYTE PTR [edx-0x6e1f9082],dl
  41661a:	jb     0x416646
  41661c:	ins    BYTE PTR es:[edi],dx
  41661d:	mov    esi,DWORD PTR [ebx+0x72]
  416620:	ja     0x41667e
  416622:	sar    DWORD PTR [eax+0x5e],0x45
  416626:	cmp    BYTE PTR [edi-0x7fbc8f8f],al
  41662c:	(bad)  
  41662d:	pop    esp
  41662e:	sar    ebp,1
  416630:	sbb    dh,BYTE PTR [ebp+0x6b]
  416633:	mov    esi,DWORD PTR [edx+0x4b]
  416636:	daa    
  416637:	or     eax,DWORD PTR [ebp-0x678c6315]
  41663d:	jne    0x416600
  41663f:	div    DWORD PTR [edx]
  416641:	mov    edi,0xc02f4a65
  416646:	retf   
  416647:	push   0xd13c075e
  41664c:	sti    
  41664d:	pop    edi
  41664e:	mov    ch,0x30
  416650:	xchg   edi,eax
  416651:	sar    DWORD PTR [esi],0x5c
  416654:	fbld   TBYTE PTR [edx+eiz*8-0x2b]
  416658:	repnz jmp 0x4628:0xcb83c9ad
  416660:	loope  0x4166ab
  416662:	loop   0x416680
  416664:	ret    
  416665:	mov    edi,0x89202b50
  41666a:	add    al,0xdb
  41666c:	loop   0x4166d1
  41666e:	mov    dh,BYTE PTR [edx-0x11]
  416671:	in     eax,0x4d
  416673:	sub    ebp,DWORD PTR [eax+ebp*4-0x73dd73c5]
  41667a:	fisttp QWORD PTR [ebp+0x7c]
  41667d:	jae    0x41665b
  41667f:	in     eax,dx
  416680:	dec    eax
  416681:	dec    esp
  416682:	and    esp,esi
  416684:	sub    eax,0xb55b67e8
  416689:	popa   
  41668a:	rcl    dh,0x78
  41668d:	in     al,dx
  41668e:	mov    bh,BYTE PTR [ebx-0x58]
  416691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416692:	dec    esi
  416693:	sbb    ch,BYTE PTR [ebx+edi*1-0x29]
  416697:	mov    bh,BYTE PTR [esi]
  416699:	pop    esi
  41669a:	jg     0x41670d
  41669c:	out    0x87,al
  41669e:	pushf  
  41669f:	push   esi
  4166a0:	cmc    
  4166a1:	mov    ebp,0x96365f1a
  4166a6:	(bad)  
  4166a7:	jl     0x4166f7
  4166a9:	mov    ecx,0xcdc6bd3d
  4166ae:	sub    DWORD PTR [eax-0x12118853],0x73
  4166b5:	xchg   DWORD PTR [esi-0x55],eax
  4166b8:	jg     0x4166a0
  4166ba:	hlt    
  4166bb:	mov    DWORD PTR [edx],0xb87c78f5
  4166c1:	mov    ah,0x93
  4166c3:	sub    BYTE PTR [eax+0x45],al
  4166c6:	aad    0xdd
  4166c8:	outs   dx,BYTE PTR ds:[esi]
  4166c9:	(bad)  
  4166cb:	popa   
  4166cc:	or     cl,BYTE PTR [ebx]
  4166ce:	jns    0x41669c
  4166d0:	rol    eax,1
  4166d2:	mov    ds,WORD PTR [eax-0x1531a1c4]
  4166d8:	mov    ss,WORD PTR [edi-0x5e]
  4166db:	scas   eax,DWORD PTR es:[edi]
  4166dc:	sbb    BYTE PTR [ebx-0x230ea626],cl
  4166e2:	stos   BYTE PTR es:[edi],al
  4166e3:	hlt    
  4166e4:	inc    edi
  4166e5:	ret    
  4166e6:	aad    0x5a
  4166e8:	lahf   
  4166e9:	sar    BYTE PTR [ecx+0x4e],cl
  4166ec:	dec    ebp
  4166ed:	and    esp,DWORD PTR [eax]
  4166ef:	or     dl,cl
  4166f1:	sti    
  4166f2:	out    0xbe,eax
  4166f4:	adc    ch,bh
  4166f6:	dec    edi
  4166f7:	mov    al,0xef
  4166f9:	call   ebx
  4166fb:	shl    BYTE PTR [ecx],cl
  4166fd:	aaa    
  4166fe:	mov    ss,WORD PTR [ebx]
  416700:	xor    al,0xb6
  416702:	test   BYTE PTR [edi],0x83
  416705:	loopne 0x41670b
  416707:	test   DWORD PTR [eax-0x58],ebx
  41670a:	jle    0x416724
  41670c:	hlt    
  41670d:	cmp    eax,0xf19dc391
  416712:	sahf   
  416713:	(bad)  
  416714:	fisubr WORD PTR [esp+ebp*8-0x3b]
  416718:	xchg   esp,eax
  416719:	dec    ecx
  41671a:	ret    
  41671b:	(bad)  
  41671c:	fldcw  WORD PTR fs:[edx+edx*4-0x5d]
  416721:	adc    bh,cl
  416723:	imul   edi,DWORD PTR [ebp-0x1d],0x9fa73d88
  41672a:	(bad)  
  41672b:	dec    ebx
  41672c:	pusha  
  41672d:	repnz dec ebx
  41672f:	cld    
  416730:	push   esi
  416731:	ds iret 
  416733:	adc    al,0x65
  416735:	sub    cl,BYTE PTR [ecx+0x66da48af]
  41673b:	mov    bh,BYTE PTR [edx+0x6d]
  41673e:	test   BYTE PTR [edi],dh
  416740:	std    
  416741:	jl     0x416704
  416743:	sbb    BYTE PTR [eax-0xa],dh
  416746:	clc    
  416747:	(bad)  
  416748:	mov    ebx,esi
  41674a:	push   ds
  41674b:	int    0xe
  41674d:	paddb  mm7,QWORD PTR [edi]
  416750:	and    edx,edx
  416752:	mul    ebp
  416754:	retf   0xe115
  416757:	push   cs
  416758:	jne    0x416798
  41675a:	pop    ebx
  41675b:	cmp    eax,0x378e8b2c
  416760:	inc    ecx
  416761:	cmp    cl,BYTE PTR [ecx+0x79f7db5f]
  416767:	cmp    bh,BYTE PTR [ebx-0x3ea6198b]
  41676d:	lods   eax,DWORD PTR ds:[esi]
  41676e:	jae    0x4166f0
  416770:	daa    
  416771:	xchg   ecx,eax
  416772:	mov    edx,0x140a9f65
  416777:	add    eax,DWORD PTR [ebp+0x6f]
  41677a:	ror    ch,cl
  41677c:	ror    BYTE PTR [eax],0xaa
  41677f:	cmp    dl,BYTE PTR [eax-0x11969873]
  416785:	popf   
  416786:	iret   
  416787:	or     BYTE PTR [eax+0x73],dh
  41678a:	adc    eax,0xbb769254
  41678f:	stc    
  416790:	imul   esi,DWORD PTR [edi-0x6e689d3f],0x15
  416797:	ins    BYTE PTR es:[edi],dx
  416798:	ja     0x416780
  41679a:	loopne 0x4167a8
  41679c:	loop   0x4167e0
  41679e:	mov    edi,0xaa9f87e5
  4167a3:	xor    dl,cl
  4167a5:	jl     0x416793
  4167a7:	sbb    cl,BYTE PTR [esi+0x79]
  4167aa:	ins    BYTE PTR es:[edi],dx
  4167ab:	dec    ebx
  4167ac:	bound  edi,QWORD PTR ds:0xd810aa39
  4167b2:	push   esp
  4167b3:	retf   0x3c57
  4167b6:	rcr    DWORD PTR [ecx-0x4c],cl
  4167b9:	test   al,0x7
  4167bb:	cdq    
  4167bc:	mov    dh,0x77
  4167be:	mov    cl,0x9a
  4167c0:	pop    es
  4167c1:	pushf  
  4167c2:	gs cdq 
  4167c4:	outs   dx,BYTE PTR ds:[esi]
  4167c5:	push   ebx
  4167c6:	mov    ebp,0xc673dcbf
  4167cb:	(bad)  
  4167cc:	add    edx,DWORD PTR [edi+0x31046c33]
  4167d2:	mov    eax,ds:0xb94d151c
  4167d7:	jne    0x4167f1
  4167d9:	dec    esi
  4167da:	push   0xffffffde
  4167dc:	mov    al,ds:0x1e36ed42
  4167e1:	dec    ebp
  4167e2:	inc    ebx
  4167e3:	mov    eax,0x7bdaea73
  4167e8:	adc    DWORD PTR [edi+0xefcec22],ecx
  4167ee:	inc    esp
  4167ef:	sbb    bl,BYTE PTR [ecx+0x2]
  4167f2:	cmc    
  4167f3:	rcr    DWORD PTR [edx+0x58fcf13],cl
  4167f9:	jecxz  0x416795
  4167fb:	aam    0x4
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	inc    ecx
  4167ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416800:	out    0x20,eax
  416802:	adc    eax,0xe02a8898
  416807:	ror    DWORD PTR [edx-0x65e6059a],1
  41680d:	(bad)  
  41680e:	push   edx
  41680f:	lock cmp ebp,edi
  416812:	in     eax,0x41
  416814:	loop   0x416878
  416816:	frstor [ecx-0x25508cad]
  41681c:	mov    dh,0x1c
  41681e:	xor    eax,0xe5ddfc46
  416823:	and    DWORD PTR ds:0xe195e813,0x6c
  41682a:	outs   dx,DWORD PTR ds:[esi]
  41682b:	jnp    0x41687b
  41682d:	and    eax,DWORD PTR [ebp-0x5046708c]
  416833:	addr16 jmp 0x7e237a2a
  416839:	mov    ah,bh
  41683b:	xchg   ebp,eax
  41683c:	in     eax,dx
  41683d:	aaa    
  41683e:	in     al,0x5a
  416840:	adc    ebx,0xffffff9c
  416843:	sbb    ch,ah
  416845:	fucomp st(0)
  416847:	enter  0x8855,0xf5
  41684b:	outs   dx,BYTE PTR ds:[esi]
  41684c:	cmp    BYTE PTR [ecx],dl
  41684e:	(bad)  
  41684f:	push   esi
  416850:	jmp    0x416898
  416852:	outs   dx,BYTE PTR ds:[esi]
  416853:	adc    DWORD PTR [esi],ebx
  416855:	dec    esi
  416856:	aam    0xdd
  416858:	pop    ebx
  416859:	mov    ebp,0x1dfc0608
  41685e:	pop    edi
  41685f:	pop    edi
  416860:	add    al,0xf4
  416862:	nop
  416863:	mov    db1,ebp
  416866:	mov    al,ds:0xa36e1326
  41686b:	mov    cl,0x9b
  41686d:	mov    al,0xe8
  41686f:	or     cl,al
  416871:	xor    ebx,esi
  416873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416874:	xchg   esp,eax
  416875:	call   0xdb68:0xd9b25c2c
  41687c:	mov    ?,WORD PTR [eax]
  41687e:	mov    al,BYTE PTR [edi]
  416880:	daa    
  416881:	mov    BYTE PTR [ecx-0x485358ef],0x1f
  416888:	and    DWORD PTR ds:0xce465519,ecx
  41688e:	popf   
  41688f:	ret    
  416890:	cld    
  416891:	mov    ah,BYTE PTR [esi+0x0]
  416894:	repnz cs das 
  416897:	retf   
  416898:	(bad)
  41689c:	aas    
  41689d:	adc    dl,BYTE PTR [esi+0x49]
  4168a0:	mov    ch,ch
  4168a2:	shr    DWORD PTR [edx+0x182fed51],0x8e
  4168a9:	clc    
  4168aa:	pop    ebx
  4168ab:	add    dh,BYTE PTR ds:0x9b8f9359
  4168b1:	push   eax
  4168b2:	sysenter 
  4168b4:	mov    al,ds:0xb4863f75
  4168b9:	xchg   ecx,eax
  4168ba:	cwde   
  4168bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168bc:	(bad)  
  4168be:	cmp    BYTE PTR [ecx+0x17],al
  4168c1:	inc    ecx
  4168c2:	and    bh,dh
  4168c4:	out    dx,al
  4168c5:	xchg   esp,eax
  4168c6:	int3   
  4168c7:	clc    
  4168c8:	(bad)  
  4168c9:	or     bl,BYTE PTR [ebp+0x1c916366]
  4168cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d0:	push   0x8c2731b1
  4168d5:	and    DWORD PTR [ebp-0x33212ac],0x57
  4168dc:	test   BYTE PTR [esi+ebx*8+0x5ae1467c],0xa1
  4168e4:	cmp    al,0xf3
  4168e6:	lock mov ecx,0x5557662e
  4168ec:	push   0xbf364b6a
  4168f1:	sub    BYTE PTR [ebx+eax*4+0x304743df],0x9d
  4168f9:	and    ah,bl
  4168fb:	out    0x83,eax
  4168fd:	pop    ebx
  4168fe:	sbb    al,0x3d
  416900:	inc    esp
  416901:	lock add al,0x72
  416904:	dec    esi
  416905:	adc    bh,BYTE PTR [edx-0x64]
  416908:	inc    ebp
  416909:	mov    ebx,fs
  41690b:	into   
  41690c:	adc    esi,DWORD PTR [edi]
  41690e:	lock rcl BYTE PTR [esi],1
  416911:	inc    ecx
  416912:	pop    edx
  416913:	test   BYTE PTR [edx],dl
  416915:	pushf  
  416916:	mov    dh,0xa
  416918:	dec    DWORD PTR ds:0x9fb70633
  41691e:	shl    esi,1
  416920:	nop
  416921:	dec    ebp
  416922:	stos   DWORD PTR es:[edi],eax
  416923:	mov    bl,0x67
  416925:	jbe    0x41693b
  416927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416928:	push   esp
  416929:	ja     0x416903
  41692b:	cld    
  41692c:	xor    DWORD PTR es:[edx],0x7e
  416930:	into   
  416931:	and    ebx,0xa9de8a5c
  416937:	cmp    eax,0x31062d1b
  41693c:	pop    ebx
  41693d:	adc    eax,0xfffc758b
  416942:	(bad)  
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
